// RO data = 4600/4600 bytes
// RW data = 232/65824 bytes
// Stack size = 65536 bytes
// RO data = [66, 1, 0, 0, 68, 1, 0, 0, 76, 1, 0, 0, 84, 1, 0, 0, 92, 1, 0, 0, 98, 1, 0, 0, 106, 1, 0, 0, 114, 1, 0, 0, 122, 1, 0, 0, 128, 1, 0, 0, 134, 1, 0, 0, 144, 1, 0, 0, 152, 1, 0, 0, 160, 1, 0, 0, 166, 1, 0, 0, 174, 1, 0, 0, 182, 1, 0, 0, 188, 1, 0, 0, 196, 1, 0, 0, 208, 1, 0, 0, 216, 1, 0, 0, 224, 1, 0, 0, 236, 1, 0, 0, 244, 1, 0, 0, 252, 1, 0, 0, 4, 2, 0, 0, 12, 2, 0, 0, 20, 2, 0, 0, 26, 2, 0, 0, 34, 2, 0, 0, 42, 2, 0, 0, 50, 2, 0, 0, 56, 2, 0, 0, 64, 2, 0, 0, 66, 2, 0, 0, 72, 2, 0, 0, 78, 2, 0, 0, 84, 2, 0, 0, 92, 2, 0, 0, 100, 2, 0, 0, 102, 2, 0, 0, 122, 2, 0, 0, 130, 2, 0, 0, 136, 2, 0, 0, 154, 2, 0, 0, 162, 2, 0, 0, 170, 2, 0, 0, 178, 2, 0, 0, 186, 2, 0, 0, 194, 2, 0, 0, 202, 2, 0, 0, 210, 2, 0, 0, 218, 2, 0, 0, 41, 32, 61, 32, 44, 32, 115, 61, 110, 116, 116, 40, 32, 61, 32, 40, 102, 105, 98, 32, 83, 111, 109, 101, 93, 32, 61, 32, 116, 114, 117, 101, 110, 111, 110, 101, 78, 111, 110, 101, 44, 32, 101, 61, 44, 32, 114, 61, 32, 32, 32, 32, 44, 32, 100, 61, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 0, 0, 159, 36, 0, 0, 0, 0, 0, 0, 18, 110, 0, 0, 0, 0, 0, 0, 215, 224, 6, 0, 0, 0, 0, 0, 24, 61, 149, 0, 0, 0, 0, 0, 254, 145, 1, 107, 0, 0, 0, 0, 116, 114, 105, 98, 111, 110, 97, 99, 99, 105, 40, 0, 0, 0, 0, 0, 72, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 110, 97, 114, 97, 121, 97, 110, 97, 40, 0, 0, 0, 0, 0, 0, 0, 120, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 32, 115, 101, 110, 100, 101, 114, 61, 109, 111, 116, 122, 107, 105, 110, 40, 106, 97, 99, 111, 98, 105, 40, 32, 80, 65, 89, 76, 79, 65, 68, 32, 32, 97, 109, 111, 117, 110, 116, 61, 109, 111, 100, 95, 101, 120, 112, 40, 44, 32, 102, 110, 118, 49, 97, 61, 32, 114, 101, 115, 117, 108, 116, 61, 44, 32, 115, 105, 110, 226, 137, 136, 115, 117, 98, 95, 103, 99, 100, 40, 192, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 115, 95, 113, 117, 97, 100, 114, 97, 116, 105, 99, 95, 114, 101, 115, 105, 100, 117, 101, 40, 0, 0, 0, 40, 2, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 110, 116, 101, 103, 101, 114, 95, 108, 111, 103, 95, 100, 105, 118, 40, 110, 111, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 32, 105, 115, 95, 119, 105, 108, 115, 111, 110, 95, 112, 114, 105, 109, 101, 40, 105, 110, 116, 101, 103, 101, 114, 95, 108, 111, 103, 95, 109, 117, 108, 40, 99, 111, 105, 110, 95, 99, 104, 97, 110, 103, 101, 95, 109, 105, 110, 40, 144, 2, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 111, 118, 97, 121, 95, 115, 116, 114, 97, 115, 115, 101, 110, 40, 0, 0, 0, 0, 0, 0, 0, 224, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 102, 101, 114, 109, 97, 116, 95, 102, 97, 99, 116, 111, 114, 40, 0, 0, 24, 3, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 105, 102, 102, 105, 101, 32, 104, 101, 108, 108, 109, 97, 110, 32, 0, 72, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 108, 102, 115, 114, 32, 0, 0, 0, 104, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 98, 98, 115, 95, 110, 101, 120, 116, 32, 0, 0, 0, 0, 0, 0, 0, 128, 3, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 98, 105, 110, 95, 112, 97, 99, 107, 105, 110, 103, 95, 102, 102, 100, 32, 61, 32, 0, 0, 0, 0, 0, 0, 160, 3, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 98, 117, 114, 110, 115, 105, 100, 101, 95, 110, 101, 99, 107, 108, 97, 99, 101, 32, 100, 105, 115, 116, 105, 110, 99, 116, 32, 99, 111, 108, 111, 114, 105, 110, 103, 115, 32, 61, 32, 0, 200, 3, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 121, 111, 117, 110, 103, 95, 116, 97, 98, 108, 101, 97, 117, 120, 32, 195, 151, 32, 226, 134, 146, 32, 0, 0, 0, 4, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 15, 4, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 17, 4, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 102, 114, 111, 98, 101, 110, 105, 117, 115, 40, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 40, 41, 32, 109, 111, 100, 32, 32, 61, 32, 0, 0, 0, 0, 0, 136, 4, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 138, 4, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 144, 4, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 113, 95, 97, 110, 97, 108, 111, 103, 91, 93, 95, 0, 0, 0, 0, 0, 200, 4, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 209, 4, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 144, 4, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 99, 111, 110, 100, 105, 116, 105, 111, 110, 95, 110, 117, 109, 98, 101, 114, 95, 50, 120, 50, 32, 65, 61, 32, 61, 0, 0, 0, 0, 0, 0, 0, 8, 5, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 31, 5, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 112, 111, 108, 108, 97, 114, 100, 95, 114, 104, 111, 95, 98, 114, 101, 110, 116, 32, 0, 0, 0, 0, 0, 0, 72, 5, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 79, 110, 101, 68, 82, 97, 110, 103, 101, 84, 114, 101, 101, 81, 117, 101, 114, 121, 32, 91, 93, 32, 226, 134, 146, 32, 0, 0, 0, 0, 0, 0, 112, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 231, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 132, 5, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 114, 115, 97, 95, 107, 101, 121, 103, 101, 110, 32, 110, 61, 0, 0, 0, 192, 5, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 252, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 1, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 61, 44, 32, 111, 107, 61, 0, 0, 6, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 216, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 2, 6, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 103, 102, 95, 99, 111, 101, 102, 102, 91, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 236, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 101, 103, 101, 110, 100, 114, 101, 95, 115, 121, 109, 98, 111, 108, 32, 40, 32, 47, 0, 0, 0, 0, 0, 120, 6, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 138, 6, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 117, 99, 97, 115, 95, 108, 101, 104, 109, 101, 114, 32, 77, 95, 32, 105, 115, 32, 112, 114, 105, 109, 101, 63, 32, 0, 0, 0, 0, 0, 0, 192, 6, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 207, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 108, 117, 99, 97, 115, 95, 115, 101, 113, 117, 101, 110, 99, 101, 32, 85, 95, 44, 86, 95, 32, 109, 111, 100, 32, 0, 0, 0, 0, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 17, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 20, 7, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 224, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 231, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 168, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 98, 97, 105, 108, 108, 105, 101, 95, 112, 115, 119, 32, 0, 0, 0, 0, 128, 7, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 207, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 110, 101, 119, 116, 111, 110, 95, 115, 113, 114, 116, 32, 0, 0, 0, 0, 176, 7, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 144, 4, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 100, 101, 116, 95, 98, 97, 114, 101, 105, 115, 115, 95, 51, 120, 51, 32, 100, 101, 116, 32, 61, 32, 0, 0, 224, 7, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 115, 109, 105, 116, 104, 95, 110, 111, 114, 109, 97, 108, 95, 102, 111, 114, 109, 95, 50, 120, 50, 32, 100, 105, 97, 103, 40, 0, 0, 0, 0, 0, 8, 8, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 168, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 104, 101, 114, 109, 105, 116, 101, 95, 110, 111, 114, 109, 97, 108, 95, 102, 111, 114, 109, 95, 50, 120, 50, 32, 72, 32, 61, 32, 91, 91, 93, 44, 91, 93, 93, 0, 0, 0, 0, 0, 88, 8, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 231, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 118, 8, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 231, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 121, 8, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 108, 108, 108, 95, 114, 101, 100, 117, 99, 101, 95, 50, 100, 32, 98, 49, 61, 44, 32, 98, 50, 61, 0, 0, 208, 8, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 225, 8, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 109, 111, 100, 95, 101, 120, 112, 95, 108, 97, 100, 100, 101, 114, 40, 0, 8, 9, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 116, 101, 105, 110, 95, 103, 99, 100, 40, 0, 0, 0, 0, 0, 0, 88, 9, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 160, 2, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 2, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 115, 95, 112, 101, 114, 102, 101, 99, 116, 95, 115, 113, 117, 97, 114, 101, 40, 0, 0, 0, 0, 0, 0, 40, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 99, 111, 105, 110, 95, 99, 104, 97, 110, 103, 101, 95, 99, 111, 117, 110, 116, 40, 41, 61, 0, 0, 0, 0, 96, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 114, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 176, 2, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 114, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 44, 32, 109, 111, 100, 95, 105, 110, 118, 61, 0, 0, 0, 0, 0, 0, 224, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 231, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 231, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 114, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 184, 10, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 99, 114, 116, 50, 32, 61, 32, 0, 24, 11, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 103, 97, 114, 110, 101, 114, 32, 61, 32, 0, 0, 0, 0, 0, 0, 0, 48, 11, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 110, 116, 104, 95, 114, 111, 111, 116, 40, 0, 0, 0, 0, 0, 0, 0, 80, 11, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 231, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 220, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 97, 110, 103, 108, 101, 61, 32, 226, 134, 146, 32, 99, 111, 115, 226, 137, 136, 0, 0, 0, 0, 0, 0, 0, 176, 11, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 182, 11, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 248, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 108, 99, 103, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 248, 11, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 120, 111, 114, 115, 104, 105, 102, 116, 54, 52, 32, 61, 32, 0, 0, 0, 24, 12, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 112, 99, 103, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 56, 12, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 109, 119, 99, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 88, 12, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 99, 114, 99, 51, 50, 61, 44, 32, 97, 100, 108, 101, 114, 51, 50, 61, 44, 32, 109, 117, 114, 109, 117, 114, 51, 61, 44, 32, 106, 101, 110, 107, 105, 110, 115, 61, 0, 0, 0, 0, 120, 12, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 126, 12, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 232, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 136, 12, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 146, 12, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 101, 117, 108, 101, 114, 84, 111, 116, 105, 101, 110, 116, 32, 112, 104, 105, 40, 0, 0, 0, 0, 0, 0, 0, 240, 12, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 105, 110, 101, 97, 114, 95, 109, 117, 32, 110, 61, 44, 32, 91, 110, 93, 61, 0, 0, 0, 0, 0, 0, 40, 13, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 52, 13, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 83, 117, 109, 79, 102, 68, 105, 118, 105, 115, 111, 114, 115, 32, 115, 105, 103, 109, 97, 40, 0, 0, 0, 0, 96, 13, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 105, 118, 105, 115, 111, 114, 95, 99, 111, 117, 110, 116, 40, 0, 0, 152, 13, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 111, 98, 105, 117, 115, 40, 0, 200, 13, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 105, 114, 105, 99, 104, 108, 101, 116, 95, 99, 111, 110, 118, 111, 108, 117, 116, 105, 111, 110, 32, 40, 49, 32, 42, 32, 105, 100, 41, 40, 0, 240, 13, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 200, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 138, 6, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 244, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 168, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 2, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 208, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 144, 14, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 32, 32, 73, 84, 69, 82, 65, 84, 73, 79, 78, 83, 32, 0, 184, 14, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 195, 14, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 114, 117, 110, 95, 112, 114, 111, 103, 114, 97, 109, 32, 32, 103, 97, 115, 95, 117, 115, 101, 100, 32, 0, 0, 240, 14, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 195, 14, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 252, 14, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 228, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 240, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 88, 15, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 114, 15, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 184, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 129, 15, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 139, 15, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 145, 15, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 16, 16, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 41, 16, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 60, 3, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 62, 3, 0, 0, 0, 0, 0, 0, 68, 3, 0, 0, 0, 0, 0, 0, 76, 3, 0, 0, 0, 0, 0, 0, 41, 91, 0, 0, 0, 0, 0, 0, 118, 3, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 120, 3, 0, 0, 0, 0, 0, 0, 126, 3, 0, 0, 0, 0, 0, 0, 130, 3, 0, 0, 0, 0, 0, 0, 44, 32, 44, 10, 40, 40, 10, 44, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 102, 97, 108, 115, 101, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 185, 17, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 202, 17, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [29, 221, 108, 79, 145, 244, 69, 37, 11, 215, 163, 112, 61, 10, 215, 163, 29, 221, 108, 79, 145, 244, 69, 37, 195, 245, 40, 92, 143, 194, 245, 40, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 25, 134, 97, 24, 134, 97, 24, 134, 201, 66, 22, 178, 144, 133, 44, 100, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 165, 128, 102, 16, 64, 10, 104, 6, 67, 120, 180, 113, 196, 90, 124, 10, 0, 160, 163, 155, 237, 41, 146, 190, 243, 187, 108, 107, 170, 43, 62, 5, 225, 229, 20, 188, 156, 130, 151, 83, 195, 245, 40, 92, 143, 194, 245, 40, 219, 52, 182, 215, 130, 222, 27, 67, 143, 227, 56, 142, 227, 56, 142, 227, 229, 174, 159, 45, 86, 134, 111, 68, 75, 89, 134, 56, 214, 197, 109, 52, 11, 215, 163, 112, 61, 10, 215, 163, 37, 82, 6, 207, 112, 63, 80, 131, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128, 241, 222, 188, 154, 120, 86, 52, 18]
// Instructions = 16355
// Code size = 50518 bytes

      :                          @0
     0: 28 b6 a0 00 00           jump @2559
      :                          @1
     5: 28 cb a4 00 00           jump @2634
      :                          @2
    10: 28 22 a7 00              jump @2683
      :                          @3 [@dyn 1]
    14: 95 11 d0                 sp = sp + 0xffffffffffffffd0
    17: 7b 10 28                 u64 [sp + 0x28] = ra
    20: 7b 15 20                 u64 [sp + 0x20] = s0
    23: 7b 16 18                 u64 [sp + 0x18] = s1
    26: 64 86                    s1 = a1
    28: 82 88 28                 a1 = u64 [a1 + 0x28]
    31: 82 75                    s0 = u64 [a0]
    33: 82 67 20                 a0 = u64 [s1 + 0x20]
    36: 82 8a 18                 a3 = u64 [a1 + 0x18]
    39: 33 08 a9 10 01           a1 = 0x110a9
    44: 33 09 01                 a2 = 0x1
    47: b4 a0 01 04              ra = 4, jump [a3]
      :                          @4 [@dyn 2]
    51: 7b 16                    u64 [sp] = s1
    53: 78 17 08                 u8 [sp + 0x8] = a0
    56: 46 11 09                 u8 [sp + 9] = 0
    59: 7b 15 10                 u64 [sp + 0x10] = s0
    62: 33 06 1c                 s1 = 0x1c
    65: 64 17                    a0 = sp
    67: 95 18 10                 a1 = sp + 0x10
    70: 33 09 1c                 a2 = 0x1c
    73: 50 10 06 e6 c0 00        ra = 6, jump @3156
      :                          @5 [@dyn 3]
    79: 95 55 08                 s0 = s0 + 0x8
    82: 7b 15 10                 u64 [sp + 0x10] = s0
    85: 64 17                    a0 = sp
    87: 95 18 10                 a1 = sp + 0x10
    90: 64 69                    a2 = s1
    92: 50 10 08 d3 c0 00        ra = 8, jump @3156
      :                          @6 [@dyn 4]
    98: 33 07 01                 a0 = 0x1
   101: 7c 18 08                 a1 = u8 [sp + 0x8]
   104: 52 08 1a                 jump @8 if a1 != 0
      :                          @7
   107: 82 17                    a0 = u64 [sp]
   109: 82 78 28                 a1 = u64 [a0 + 0x28]
   112: 82 77 20                 a0 = u64 [a0 + 0x20]
   115: 82 8a 18                 a3 = u64 [a1 + 0x18]
   118: 33 08 e9 10 01           a1 = 0x110e9
   123: 33 09 01                 a2 = 0x1
   126: b4 a0 01 0a              ra = 10, jump [a3]
      :                          @8 [@dyn 5]
   130: 82 10 28                 ra = u64 [sp + 0x28]
   133: 82 15 20                 s0 = u64 [sp + 0x20]
   136: 82 16 18                 s1 = u64 [sp + 0x18]
   139: 95 11 30                 sp = sp + 0x30
   142: 32 00                    ret
      :                          @9 [@dyn 6]
   144: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   147: 7b 10 38                 u64 [sp + 0x38] = ra
   150: 7b 15 30                 u64 [sp + 0x30] = s0
   153: 7b 16 28                 u64 [sp + 0x28] = s1
   156: 64 85                    s0 = a1
   158: 82 88 28                 a1 = u64 [a1 + 0x28]
   161: 82 76                    s1 = u64 [a0]
   163: 82 57 20                 a0 = u64 [s0 + 0x20]
   166: 82 8a 18                 a3 = u64 [a1 + 0x18]
   169: 33 08 a8 10 01           a1 = 0x110a8
   174: 33 09                    a2 = 0
   176: b4 a0 01 0e              ra = 14, jump [a3]
      :                          @10 [@dyn 7]
   180: 7b 15 08                 u64 [sp + 0x8] = s0
   183: 78 17 10                 u8 [sp + 0x10] = a0
   186: 49 01                    u64 [sp + 0] = 0
   188: 33 05 01                 s0 = 0x1
   191: 78 15 11                 u8 [sp + 0x11] = s0
   194: 7b 16 18                 u64 [sp + 0x18] = s1
   197: 95 66 08                 s1 = s1 + 0x8
   200: 7b 16 20                 u64 [sp + 0x20] = s1
   203: 33 06 18                 s1 = 0x18
   206: 64 17                    a0 = sp
   208: 95 18 18                 a1 = sp + 0x18
   211: 33 09 18                 a2 = 0x18
   214: 50 10 10 1d bf 00        ra = 16, jump @3140
      :                          @11 [@dyn 8]
   220: 64 17                    a0 = sp
   222: 95 18 20                 a1 = sp + 0x20
   225: 64 69                    a2 = s1
   227: 50 10 12 10 bf 00        ra = 18, jump @3140
      :                          @12 [@dyn 9]
   233: 82 17                    a0 = u64 [sp]
   235: 7c 18 10                 a1 = u8 [sp + 0x10]
   238: 51 07 57                 jump @20 if a0 == 0
      :                          @13
   241: 52 08 57                 jump @21 if a1 != 0
      :                          @14
   244: 7c 18 11                 a1 = u8 [sp + 0x11]
   247: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   250: 8e 77                    a0 = a0 >u 0
   252: 82 16 08                 s1 = u64 [sp + 0x8]
   255: 88 88 01                 a1 = a1 <u 0x1
   258: d4 87 07                 a0 = a0 | a1
   261: 52 07 27                 jump @18 if a0 != 0
      :                          @15
   264: 7c 67 34                 a0 = u8 [s1 + 0x34]
   267: 84 77 04                 a0 = a0 & 0x4
   270: 52 07 1e                 jump @18 if a0 != 0
      :                          @16
   273: 82 68 28                 a1 = u64 [s1 + 0x28]
   276: 82 67 20                 a0 = u64 [s1 + 0x20]
   279: 82 8a 18                 a3 = u64 [a1 + 0x18]
   282: 33 08 e7 10 01           a1 = 0x110e7
   287: 33 09 01                 a2 = 0x1
   290: 33 05 01                 s0 = 0x1
   293: b4 a0 01 14              ra = 20, jump [a3]
      :                          @17 [@dyn 10]
   297: 52 07 1f                 jump @21 if a0 != 0
      :                          @18
   300: 82 68 28                 a1 = u64 [s1 + 0x28]
   303: 82 67 20                 a0 = u64 [s1 + 0x20]
   306: 82 8a 18                 a3 = u64 [a1 + 0x18]
   309: 33 08 a8 10 01           a1 = 0x110a8
   314: 33 09 01                 a2 = 0x1
   317: b4 a0 01 16              ra = 22, jump [a3]
      :                          @19 [@dyn 11]
   321: 64 75                    s0 = a0
   323: 28 05                    jump @21
      :                          @20
   325: 8e 85                    s0 = a1 >u 0
   327: 01                       fallthrough
      :                          @21
   328: 64 57                    a0 = s0
   330: 82 10 38                 ra = u64 [sp + 0x38]
   333: 82 15 30                 s0 = u64 [sp + 0x30]
   336: 82 16 28                 s1 = u64 [sp + 0x28]
   339: 95 11 40                 sp = sp + 0x40
   342: 32 00                    ret
      :                          @22 [@dyn 12]
   344: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   348: 7b 10 80 00              u64 [sp + 0x80] = ra
   352: 64 82                    t0 = a1
   354: 80 88 34                 a1 = u32 [a1 + 0x34]
   357: 82 77                    a0 = u64 [a0]
   359: 84 89 10                 a2 = a1 & 0x10
   362: 52 09 1c                 jump @25 if a2 != 0
      :                          @23
   365: 84 88 20                 a1 = a1 & 0x20
   368: 52 08 46                 jump @28 if a1 != 0
      :                          @24
   371: 82 77                    a0 = u64 [a0]
   373: 33 08 01                 a1 = 0x1
   376: 64 29                    a2 = t0
   378: 82 10 80 00              ra = u64 [sp + 0x80]
   382: 95 11 88 00              sp = sp + 0x88
   386: 28 5d b2 00              jump @2909
      :                          @25
   390: 82 7a                    a3 = u64 [a0]
   392: 33 08 81 00              a1 = 0x81
   396: 95 17 7f                 a0 = sp + 0x7f
   399: 33 03 57                 t1 = 0x57
   402: 01                       fallthrough
      :                          @26
   403: 64 8b                    a4 = a1
   405: 98 ac 04                 a5 = a3 >> 0x4
   408: 84 aa 0f                 a3 = a3 & 0xf
   411: 88 a8 0a                 a1 = a3 <u 0xa
   414: 33 09 30                 a2 = 0x30
   417: da 83 09                 a2 = t1 if a1 == 0
   420: be a9 09                 i32 a2 = a2 + a3
   423: 78 79                    u8 [a0] = a2
   425: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   428: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   431: 64 ca                    a3 = a5
   433: 52 0c e2                 jump @26 if a5 != 0
      :                          @27
   436: 28 30                    jump @30
      :                          @28
   438: 82 7a                    a3 = u64 [a0]
   440: 33 08 81 00              a1 = 0x81
   444: 95 17 7f                 a0 = sp + 0x7f
   447: 33 03 37                 t1 = 0x37
   450: 01                       fallthrough
      :                          @29
   451: 64 8b                    a4 = a1
   453: 98 ac 04                 a5 = a3 >> 0x4
   456: 84 aa 0f                 a3 = a3 & 0xf
   459: 88 a8 0a                 a1 = a3 <u 0xa
   462: 33 09 30                 a2 = 0x30
   465: da 83 09                 a2 = t1 if a1 == 0
   468: be a9 09                 i32 a2 = a2 + a3
   471: 78 79                    u8 [a0] = a2
   473: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   476: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   479: 64 ca                    a3 = a5
   481: 52 0c e2                 jump @29 if a5 != 0
      :                          @30
   484: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   487: 56 27 80 00 2b           jump @33 if a0 >u 128
      :                          @31
   492: 9a 8c 81 00              a5 = 0x81 - a1
   496: 64 1b                    a4 = sp
   498: c8 7b 0b                 a4 = a4 + a0
   501: 33 09 ea 10 01           a2 = 0x110ea
   506: 33 08 01                 a1 = 0x1
   509: 33 0a 02                 a3 = 0x2
   512: 64 27                    a0 = t0
   514: 50 10 1a 0b b3 00        ra = 26, jump @2919
      :                          @32 [@dyn 13]
   520: 82 10 80 00              ra = u64 [sp + 0x80]
   524: 95 11 88 00              sp = sp + 0x88
   528: 32 00                    ret
      :                          @33
   530: 00                       trap
      :                          @34 [@dyn 14]
   531: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   535: 7b 10 80 00              u64 [sp + 0x80] = ra
   539: 64 82                    t0 = a1
   541: 80 88 34                 a1 = u32 [a1 + 0x34]
   544: 82 77                    a0 = u64 [a0]
   546: 84 89 10                 a2 = a1 & 0x10
   549: 52 09 24                 jump @37 if a2 != 0
      :                          @35
   552: 84 88 20                 a1 = a1 & 0x20
   555: 52 08 4e                 jump @40 if a1 != 0
      :                          @36
   558: 82 78                    a1 = u64 [a0]
   560: 9a 87                    a0 = -a1
   562: e3 78 07                 a0 = maxs(a1, a0)
   565: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
   568: 98 88 3f                 a1 = a1 >> 0x3f
   571: 64 29                    a2 = t0
   573: 82 10 80 00              ra = u64 [sp + 0x80]
   577: 95 11 88 00              sp = sp + 0x88
   581: 28 9a b1 00              jump @2909
      :                          @37
   585: 82 7a                    a3 = u64 [a0]
   587: 33 08 81 00              a1 = 0x81
   591: 95 17 7f                 a0 = sp + 0x7f
   594: 33 03 57                 t1 = 0x57
   597: 01                       fallthrough
      :                          @38
   598: 64 8b                    a4 = a1
   600: 98 ac 04                 a5 = a3 >> 0x4
   603: 84 aa 0f                 a3 = a3 & 0xf
   606: 88 a8 0a                 a1 = a3 <u 0xa
   609: 33 09 30                 a2 = 0x30
   612: da 83 09                 a2 = t1 if a1 == 0
   615: be a9 09                 i32 a2 = a2 + a3
   618: 78 79                    u8 [a0] = a2
   620: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   623: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   626: 64 ca                    a3 = a5
   628: 52 0c e2                 jump @38 if a5 != 0
      :                          @39
   631: 28 30                    jump @42
      :                          @40
   633: 82 7a                    a3 = u64 [a0]
   635: 33 08 81 00              a1 = 0x81
   639: 95 17 7f                 a0 = sp + 0x7f
   642: 33 03 37                 t1 = 0x37
   645: 01                       fallthrough
      :                          @41
   646: 64 8b                    a4 = a1
   648: 98 ac 04                 a5 = a3 >> 0x4
   651: 84 aa 0f                 a3 = a3 & 0xf
   654: 88 a8 0a                 a1 = a3 <u 0xa
   657: 33 09 30                 a2 = 0x30
   660: da 83 09                 a2 = t1 if a1 == 0
   663: be a9 09                 i32 a2 = a2 + a3
   666: 78 79                    u8 [a0] = a2
   668: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   671: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   674: 64 ca                    a3 = a5
   676: 52 0c e2                 jump @41 if a5 != 0
      :                          @42
   679: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   682: 56 27 80 00 2b           jump @45 if a0 >u 128
      :                          @43
   687: 9a 8c 81 00              a5 = 0x81 - a1
   691: 64 1b                    a4 = sp
   693: c8 7b 0b                 a4 = a4 + a0
   696: 33 09 ea 10 01           a2 = 0x110ea
   701: 33 08 01                 a1 = 0x1
   704: 33 0a 02                 a3 = 0x2
   707: 64 27                    a0 = t0
   709: 50 10 1e 48 b2 00        ra = 30, jump @2919
      :                          @44 [@dyn 15]
   715: 82 10 80 00              ra = u64 [sp + 0x80]
   719: 95 11 88 00              sp = sp + 0x88
   723: 32 00                    ret
      :                          @45
   725: 00                       trap
      :                          @46 [@dyn 16]
   726: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   730: 7b 10 80 00              u64 [sp + 0x80] = ra
   734: 64 82                    t0 = a1
   736: 80 88 34                 a1 = u32 [a1 + 0x34]
   739: 84 89 10                 a2 = a1 & 0x10
   742: 52 09 1c                 jump @49 if a2 != 0
      :                          @47
   745: 84 88 20                 a1 = a1 & 0x20
   748: 52 08 46                 jump @52 if a1 != 0
      :                          @48
   751: 80 77                    a0 = u32 [a0]
   753: 33 08 01                 a1 = 0x1
   756: 64 29                    a2 = t0
   758: 82 10 80 00              ra = u64 [sp + 0x80]
   762: 95 11 88 00              sp = sp + 0x88
   766: 28 e1 b0 00              jump @2909
      :                          @49
   770: 81 7a                    a3 = i32 [a0]
   772: 33 08 81 00              a1 = 0x81
   776: 95 17 7f                 a0 = sp + 0x7f
   779: 33 03 57                 t1 = 0x57
   782: 01                       fallthrough
      :                          @50
   783: 64 8b                    a4 = a1
   785: 8b ac 04                 i32 a5 = a3 >> 0x4
   788: 84 aa 0f                 a3 = a3 & 0xf
   791: 88 a8 0a                 a1 = a3 <u 0xa
   794: 33 09 30                 a2 = 0x30
   797: da 83 09                 a2 = t1 if a1 == 0
   800: be a9 09                 i32 a2 = a2 + a3
   803: 78 79                    u8 [a0] = a2
   805: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   808: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   811: 64 ca                    a3 = a5
   813: 52 0c e2                 jump @50 if a5 != 0
      :                          @51
   816: 28 30                    jump @54
      :                          @52
   818: 81 7a                    a3 = i32 [a0]
   820: 33 08 81 00              a1 = 0x81
   824: 95 17 7f                 a0 = sp + 0x7f
   827: 33 03 37                 t1 = 0x37
   830: 01                       fallthrough
      :                          @53
   831: 64 8b                    a4 = a1
   833: 8b ac 04                 i32 a5 = a3 >> 0x4
   836: 84 aa 0f                 a3 = a3 & 0xf
   839: 88 a8 0a                 a1 = a3 <u 0xa
   842: 33 09 30                 a2 = 0x30
   845: da 83 09                 a2 = t1 if a1 == 0
   848: be a9 09                 i32 a2 = a2 + a3
   851: 78 79                    u8 [a0] = a2
   853: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   856: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   859: 64 ca                    a3 = a5
   861: 52 0c e2                 jump @53 if a5 != 0
      :                          @54
   864: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   867: 56 27 80 00 2b           jump @57 if a0 >u 128
      :                          @55
   872: 9a 8c 81 00              a5 = 0x81 - a1
   876: 64 1b                    a4 = sp
   878: c8 7b 0b                 a4 = a4 + a0
   881: 33 09 ea 10 01           a2 = 0x110ea
   886: 33 08 01                 a1 = 0x1
   889: 33 0a 02                 a3 = 0x2
   892: 64 27                    a0 = t0
   894: 50 10 22 8f b1 00        ra = 34, jump @2919
      :                          @56 [@dyn 17]
   900: 82 10 80 00              ra = u64 [sp + 0x80]
   904: 95 11 88 00              sp = sp + 0x88
   908: 32 00                    ret
      :                          @57
   910: 00                       trap
      :                          @58 [@dyn 18]
   911: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   915: 7b 10 80 00              u64 [sp + 0x80] = ra
   919: 64 82                    t0 = a1
   921: 80 88 34                 a1 = u32 [a1 + 0x34]
   924: 84 89 10                 a2 = a1 & 0x10
   927: 52 09 1c                 jump @61 if a2 != 0
      :                          @59
   930: 84 88 20                 a1 = a1 & 0x20
   933: 52 08 46                 jump @64 if a1 != 0
      :                          @60
   936: 82 77                    a0 = u64 [a0]
   938: 33 08 01                 a1 = 0x1
   941: 64 29                    a2 = t0
   943: 82 10 80 00              ra = u64 [sp + 0x80]
   947: 95 11 88 00              sp = sp + 0x88
   951: 28 28 b0 00              jump @2909
      :                          @61
   955: 82 7a                    a3 = u64 [a0]
   957: 33 08 81 00              a1 = 0x81
   961: 95 17 7f                 a0 = sp + 0x7f
   964: 33 03 57                 t1 = 0x57
   967: 01                       fallthrough
      :                          @62
   968: 64 8b                    a4 = a1
   970: 98 ac 04                 a5 = a3 >> 0x4
   973: 84 aa 0f                 a3 = a3 & 0xf
   976: 88 a8 0a                 a1 = a3 <u 0xa
   979: 33 09 30                 a2 = 0x30
   982: da 83 09                 a2 = t1 if a1 == 0
   985: be a9 09                 i32 a2 = a2 + a3
   988: 78 79                    u8 [a0] = a2
   990: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   993: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   996: 64 ca                    a3 = a5
   998: 52 0c e2                 jump @62 if a5 != 0
      :                          @63
  1001: 28 30                    jump @66
      :                          @64
  1003: 82 7a                    a3 = u64 [a0]
  1005: 33 08 81 00              a1 = 0x81
  1009: 95 17 7f                 a0 = sp + 0x7f
  1012: 33 03 37                 t1 = 0x37
  1015: 01                       fallthrough
      :                          @65
  1016: 64 8b                    a4 = a1
  1018: 98 ac 04                 a5 = a3 >> 0x4
  1021: 84 aa 0f                 a3 = a3 & 0xf
  1024: 88 a8 0a                 a1 = a3 <u 0xa
  1027: 33 09 30                 a2 = 0x30
  1030: da 83 09                 a2 = t1 if a1 == 0
  1033: be a9 09                 i32 a2 = a2 + a3
  1036: 78 79                    u8 [a0] = a2
  1038: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1041: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  1044: 64 ca                    a3 = a5
  1046: 52 0c e2                 jump @65 if a5 != 0
      :                          @66
  1049: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  1052: 56 27 80 00 2b           jump @69 if a0 >u 128
      :                          @67
  1057: 9a 8c 81 00              a5 = 0x81 - a1
  1061: 64 1b                    a4 = sp
  1063: c8 7b 0b                 a4 = a4 + a0
  1066: 33 09 ea 10 01           a2 = 0x110ea
  1071: 33 08 01                 a1 = 0x1
  1074: 33 0a 02                 a3 = 0x2
  1077: 64 27                    a0 = t0
  1079: 50 10 26 d6 b0 00        ra = 38, jump @2919
      :                          @68 [@dyn 19]
  1085: 82 10 80 00              ra = u64 [sp + 0x80]
  1089: 95 11 88 00              sp = sp + 0x88
  1093: 32 00                    ret
      :                          @69
  1095: 00                       trap
      :                          @70 [@dyn 20]
  1096: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  1099: 7b 10 28                 u64 [sp + 0x28] = ra
  1102: 7b 15 20                 u64 [sp + 0x20] = s0
  1105: 7b 16 18                 u64 [sp + 0x18] = s1
  1108: 64 85                    s0 = a1
  1110: 82 88 28                 a1 = u64 [a1 + 0x28]
  1113: 82 5a 20                 a3 = u64 [s0 + 0x20]
  1116: 82 8b 18                 a4 = u64 [a1 + 0x18]
  1119: 64 76                    s1 = a0
  1121: 33 08 a9 10 01           a1 = 0x110a9
  1126: 33 09 01                 a2 = 0x1
  1129: 64 a7                    a0 = a3
  1131: b4 b0 01 2a              ra = 42, jump [a4]
      :                          @71 [@dyn 21]
  1135: 7b 15                    u64 [sp] = s0
  1137: 78 17 08                 u8 [sp + 0x8] = a0
  1140: 46 11 09                 u8 [sp + 9] = 0
  1143: 7b 16 10                 u64 [sp + 0x10] = s1
  1146: 33 05 b2 03              s0 = 0x3b2
  1150: 64 17                    a0 = sp
  1152: 95 18 10                 a1 = sp + 0x10
  1155: 33 09 b2 03              a2 = 0x3b2
  1159: 50 10 2c a8 bc 00        ra = 44, jump @3156
      :                          @72 [@dyn 22]
  1165: 95 67 01                 a0 = s1 + 0x1
  1168: 7b 17 10                 u64 [sp + 0x10] = a0
  1171: 64 17                    a0 = sp
  1173: 95 18 10                 a1 = sp + 0x10
  1176: 64 59                    a2 = s0
  1178: 50 10 2e 95 bc 00        ra = 46, jump @3156
      :                          @73 [@dyn 23]
  1184: 95 67 02                 a0 = s1 + 0x2
  1187: 7b 17 10                 u64 [sp + 0x10] = a0
  1190: 64 17                    a0 = sp
  1192: 95 18 10                 a1 = sp + 0x10
  1195: 64 59                    a2 = s0
  1197: 50 10 30 82 bc 00        ra = 48, jump @3156
      :                          @74 [@dyn 24]
  1203: 95 67 03                 a0 = s1 + 0x3
  1206: 7b 17 10                 u64 [sp + 0x10] = a0
  1209: 64 17                    a0 = sp
  1211: 95 18 10                 a1 = sp + 0x10
  1214: 64 59                    a2 = s0
  1216: 50 10 32 6f bc 00        ra = 50, jump @3156
      :                          @75 [@dyn 25]
  1222: 95 67 04                 a0 = s1 + 0x4
  1225: 7b 17 10                 u64 [sp + 0x10] = a0
  1228: 64 17                    a0 = sp
  1230: 95 18 10                 a1 = sp + 0x10
  1233: 64 59                    a2 = s0
  1235: 50 10 34 5c bc 00        ra = 52, jump @3156
      :                          @76 [@dyn 26]
  1241: 95 67 05                 a0 = s1 + 0x5
  1244: 7b 17 10                 u64 [sp + 0x10] = a0
  1247: 64 17                    a0 = sp
  1249: 95 18 10                 a1 = sp + 0x10
  1252: 64 59                    a2 = s0
  1254: 50 10 36 49 bc 00        ra = 54, jump @3156
      :                          @77 [@dyn 27]
  1260: 95 67 06                 a0 = s1 + 0x6
  1263: 7b 17 10                 u64 [sp + 0x10] = a0
  1266: 64 17                    a0 = sp
  1268: 95 18 10                 a1 = sp + 0x10
  1271: 64 59                    a2 = s0
  1273: 50 10 38 36 bc 00        ra = 56, jump @3156
      :                          @78 [@dyn 28]
  1279: 95 67 07                 a0 = s1 + 0x7
  1282: 7b 17 10                 u64 [sp + 0x10] = a0
  1285: 64 17                    a0 = sp
  1287: 95 18 10                 a1 = sp + 0x10
  1290: 64 59                    a2 = s0
  1292: 50 10 3a 23 bc 00        ra = 58, jump @3156
      :                          @79 [@dyn 29]
  1298: 95 67 08                 a0 = s1 + 0x8
  1301: 7b 17 10                 u64 [sp + 0x10] = a0
  1304: 64 17                    a0 = sp
  1306: 95 18 10                 a1 = sp + 0x10
  1309: 64 59                    a2 = s0
  1311: 50 10 3c 10 bc 00        ra = 60, jump @3156
      :                          @80 [@dyn 30]
  1317: 95 67 09                 a0 = s1 + 0x9
  1320: 7b 17 10                 u64 [sp + 0x10] = a0
  1323: 64 17                    a0 = sp
  1325: 95 18 10                 a1 = sp + 0x10
  1328: 64 59                    a2 = s0
  1330: 50 10 3e fd bb 00        ra = 62, jump @3156
      :                          @81 [@dyn 31]
  1336: 95 67 0a                 a0 = s1 + 0xa
  1339: 7b 17 10                 u64 [sp + 0x10] = a0
  1342: 64 17                    a0 = sp
  1344: 95 18 10                 a1 = sp + 0x10
  1347: 64 59                    a2 = s0
  1349: 50 10 40 ea bb 00        ra = 64, jump @3156
      :                          @82 [@dyn 32]
  1355: 95 67 0b                 a0 = s1 + 0xb
  1358: 7b 17 10                 u64 [sp + 0x10] = a0
  1361: 64 17                    a0 = sp
  1363: 95 18 10                 a1 = sp + 0x10
  1366: 64 59                    a2 = s0
  1368: 50 10 42 d7 bb 00        ra = 66, jump @3156
      :                          @83 [@dyn 33]
  1374: 95 67 0c                 a0 = s1 + 0xc
  1377: 7b 17 10                 u64 [sp + 0x10] = a0
  1380: 64 17                    a0 = sp
  1382: 95 18 10                 a1 = sp + 0x10
  1385: 64 59                    a2 = s0
  1387: 50 10 44 c4 bb 00        ra = 68, jump @3156
      :                          @84 [@dyn 34]
  1393: 95 67 0d                 a0 = s1 + 0xd
  1396: 7b 17 10                 u64 [sp + 0x10] = a0
  1399: 64 17                    a0 = sp
  1401: 95 18 10                 a1 = sp + 0x10
  1404: 64 59                    a2 = s0
  1406: 50 10 46 b1 bb 00        ra = 70, jump @3156
      :                          @85 [@dyn 35]
  1412: 95 67 0e                 a0 = s1 + 0xe
  1415: 7b 17 10                 u64 [sp + 0x10] = a0
  1418: 64 17                    a0 = sp
  1420: 95 18 10                 a1 = sp + 0x10
  1423: 64 59                    a2 = s0
  1425: 50 10 48 9e bb 00        ra = 72, jump @3156
      :                          @86 [@dyn 36]
  1431: 95 67 0f                 a0 = s1 + 0xf
  1434: 7b 17 10                 u64 [sp + 0x10] = a0
  1437: 64 17                    a0 = sp
  1439: 95 18 10                 a1 = sp + 0x10
  1442: 64 59                    a2 = s0
  1444: 50 10 4a 8b bb 00        ra = 74, jump @3156
      :                          @87 [@dyn 37]
  1450: 95 67 10                 a0 = s1 + 0x10
  1453: 7b 17 10                 u64 [sp + 0x10] = a0
  1456: 64 17                    a0 = sp
  1458: 95 18 10                 a1 = sp + 0x10
  1461: 64 59                    a2 = s0
  1463: 50 10 4c 78 bb 00        ra = 76, jump @3156
      :                          @88 [@dyn 38]
  1469: 95 67 11                 a0 = s1 + 0x11
  1472: 7b 17 10                 u64 [sp + 0x10] = a0
  1475: 64 17                    a0 = sp
  1477: 95 18 10                 a1 = sp + 0x10
  1480: 64 59                    a2 = s0
  1482: 50 10 4e 65 bb 00        ra = 78, jump @3156
      :                          @89 [@dyn 39]
  1488: 95 67 12                 a0 = s1 + 0x12
  1491: 7b 17 10                 u64 [sp + 0x10] = a0
  1494: 64 17                    a0 = sp
  1496: 95 18 10                 a1 = sp + 0x10
  1499: 64 59                    a2 = s0
  1501: 50 10 50 52 bb 00        ra = 80, jump @3156
      :                          @90 [@dyn 40]
  1507: 95 67 13                 a0 = s1 + 0x13
  1510: 7b 17 10                 u64 [sp + 0x10] = a0
  1513: 64 17                    a0 = sp
  1515: 95 18 10                 a1 = sp + 0x10
  1518: 64 59                    a2 = s0
  1520: 50 10 52 3f bb 00        ra = 82, jump @3156
      :                          @91 [@dyn 41]
  1526: 95 67 14                 a0 = s1 + 0x14
  1529: 7b 17 10                 u64 [sp + 0x10] = a0
  1532: 64 17                    a0 = sp
  1534: 95 18 10                 a1 = sp + 0x10
  1537: 64 59                    a2 = s0
  1539: 50 10 54 2c bb 00        ra = 84, jump @3156
      :                          @92 [@dyn 42]
  1545: 95 67 15                 a0 = s1 + 0x15
  1548: 7b 17 10                 u64 [sp + 0x10] = a0
  1551: 64 17                    a0 = sp
  1553: 95 18 10                 a1 = sp + 0x10
  1556: 64 59                    a2 = s0
  1558: 50 10 56 19 bb 00        ra = 86, jump @3156
      :                          @93 [@dyn 43]
  1564: 95 67 16                 a0 = s1 + 0x16
  1567: 7b 17 10                 u64 [sp + 0x10] = a0
  1570: 64 17                    a0 = sp
  1572: 95 18 10                 a1 = sp + 0x10
  1575: 64 59                    a2 = s0
  1577: 50 10 58 06 bb 00        ra = 88, jump @3156
      :                          @94 [@dyn 44]
  1583: 95 67 17                 a0 = s1 + 0x17
  1586: 7b 17 10                 u64 [sp + 0x10] = a0
  1589: 64 17                    a0 = sp
  1591: 95 18 10                 a1 = sp + 0x10
  1594: 64 59                    a2 = s0
  1596: 50 10 5a f3 ba 00        ra = 90, jump @3156
      :                          @95 [@dyn 45]
  1602: 95 67 18                 a0 = s1 + 0x18
  1605: 7b 17 10                 u64 [sp + 0x10] = a0
  1608: 64 17                    a0 = sp
  1610: 95 18 10                 a1 = sp + 0x10
  1613: 64 59                    a2 = s0
  1615: 50 10 5c e0 ba 00        ra = 92, jump @3156
      :                          @96 [@dyn 46]
  1621: 95 67 19                 a0 = s1 + 0x19
  1624: 7b 17 10                 u64 [sp + 0x10] = a0
  1627: 64 17                    a0 = sp
  1629: 95 18 10                 a1 = sp + 0x10
  1632: 64 59                    a2 = s0
  1634: 50 10 5e cd ba 00        ra = 94, jump @3156
      :                          @97 [@dyn 47]
  1640: 95 67 1a                 a0 = s1 + 0x1a
  1643: 7b 17 10                 u64 [sp + 0x10] = a0
  1646: 64 17                    a0 = sp
  1648: 95 18 10                 a1 = sp + 0x10
  1651: 64 59                    a2 = s0
  1653: 50 10 60 ba ba 00        ra = 96, jump @3156
      :                          @98 [@dyn 48]
  1659: 95 67 1b                 a0 = s1 + 0x1b
  1662: 7b 17 10                 u64 [sp + 0x10] = a0
  1665: 64 17                    a0 = sp
  1667: 95 18 10                 a1 = sp + 0x10
  1670: 64 59                    a2 = s0
  1672: 50 10 62 a7 ba 00        ra = 98, jump @3156
      :                          @99 [@dyn 49]
  1678: 95 67 1c                 a0 = s1 + 0x1c
  1681: 7b 17 10                 u64 [sp + 0x10] = a0
  1684: 64 17                    a0 = sp
  1686: 95 18 10                 a1 = sp + 0x10
  1689: 64 59                    a2 = s0
  1691: 50 10 64 94 ba 00        ra = 100, jump @3156
      :                          @100 [@dyn 50]
  1697: 95 67 1d                 a0 = s1 + 0x1d
  1700: 7b 17 10                 u64 [sp + 0x10] = a0
  1703: 64 17                    a0 = sp
  1705: 95 18 10                 a1 = sp + 0x10
  1708: 64 59                    a2 = s0
  1710: 50 10 66 81 ba 00        ra = 102, jump @3156
      :                          @101 [@dyn 51]
  1716: 95 67 1e                 a0 = s1 + 0x1e
  1719: 7b 17 10                 u64 [sp + 0x10] = a0
  1722: 64 17                    a0 = sp
  1724: 95 18 10                 a1 = sp + 0x10
  1727: 64 59                    a2 = s0
  1729: 50 10 68 6e ba 00        ra = 104, jump @3156
      :                          @102 [@dyn 52]
  1735: 95 66 1f                 s1 = s1 + 0x1f
  1738: 7b 16 10                 u64 [sp + 0x10] = s1
  1741: 64 17                    a0 = sp
  1743: 95 18 10                 a1 = sp + 0x10
  1746: 64 59                    a2 = s0
  1748: 50 10 6a 5b ba 00        ra = 106, jump @3156
      :                          @103 [@dyn 53]
  1754: 33 07 01                 a0 = 0x1
  1757: 7c 18 08                 a1 = u8 [sp + 0x8]
  1760: 52 08 1a                 jump @105 if a1 != 0
      :                          @104
  1763: 82 17                    a0 = u64 [sp]
  1765: 82 78 28                 a1 = u64 [a0 + 0x28]
  1768: 82 77 20                 a0 = u64 [a0 + 0x20]
  1771: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1774: 33 08 e9 10 01           a1 = 0x110e9
  1779: 33 09 01                 a2 = 0x1
  1782: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @105 [@dyn 54]
  1786: 82 10 28                 ra = u64 [sp + 0x28]
  1789: 82 15 20                 s0 = u64 [sp + 0x20]
  1792: 82 16 18                 s1 = u64 [sp + 0x18]
  1795: 95 11 30                 sp = sp + 0x30
  1798: 32 00                    ret
      :                          @106 [@dyn 55]
  1800: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  1803: 7b 10 30                 u64 [sp + 0x30] = ra
  1806: 7b 15 28                 u64 [sp + 0x28] = s0
  1809: 7b 16 20                 u64 [sp + 0x20] = s1
  1812: 64 86                    s1 = a1
  1814: 82 88 28                 a1 = u64 [a1 + 0x28]
  1817: 82 6a 20                 a3 = u64 [s1 + 0x20]
  1820: 82 8b 18                 a4 = u64 [a1 + 0x18]
  1823: 64 75                    s0 = a0
  1825: 33 08 a9 10 01           a1 = 0x110a9
  1830: 33 09 01                 a2 = 0x1
  1833: 64 a7                    a0 = a3
  1835: b4 b0 01 70              ra = 112, jump [a4]
      :                          @107 [@dyn 56]
  1839: 7b 16 08                 u64 [sp + 0x8] = s1
  1842: 78 17 10                 u8 [sp + 0x10] = a0
  1845: 46 11 11                 u8 [sp + 17] = 0
  1848: 33 06 80 00              s1 = 0x80
  1852: 33 07 b2 03              a0 = 0x3b2
  1856: 7b 17                    u64 [sp] = a0
  1858: 01                       fallthrough
      :                          @108
  1859: 7b 15 18                 u64 [sp + 0x18] = s0
  1862: 95 17 08                 a0 = sp + 0x8
  1865: 95 18 18                 a1 = sp + 0x18
  1868: 82 19                    a2 = u64 [sp]
  1870: 50 10 72 e1 b9 00        ra = 114, jump @3156
      :                          @109 [@dyn 57]
  1876: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  1879: 95 55 01                 s0 = s0 + 0x1
  1882: 52 06 e9                 jump @108 if s1 != 0
      :                          @110
  1885: 7c 18 10                 a1 = u8 [sp + 0x10]
  1888: 33 07 01                 a0 = 0x1
  1891: 52 08 1b                 jump @112 if a1 != 0
      :                          @111
  1894: 82 17 08                 a0 = u64 [sp + 0x8]
  1897: 82 78 28                 a1 = u64 [a0 + 0x28]
  1900: 82 77 20                 a0 = u64 [a0 + 0x20]
  1903: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1906: 33 08 e9 10 01           a1 = 0x110e9
  1911: 33 09 01                 a2 = 0x1
  1914: b4 a0 01 74              ra = 116, jump [a3]
      :                          @112 [@dyn 58]
  1918: 82 10 30                 ra = u64 [sp + 0x30]
  1921: 82 15 28                 s0 = u64 [sp + 0x28]
  1924: 82 16 20                 s1 = u64 [sp + 0x20]
  1927: 95 11 38                 sp = sp + 0x38
  1930: 32 00                    ret
      :                          @113 [@dyn 59]
  1932: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  1935: 7b 10 28                 u64 [sp + 0x28] = ra
  1938: 7b 15 20                 u64 [sp + 0x20] = s0
  1941: 7b 16 18                 u64 [sp + 0x18] = s1
  1944: 64 85                    s0 = a1
  1946: 82 88 28                 a1 = u64 [a1 + 0x28]
  1949: 82 5a 20                 a3 = u64 [s0 + 0x20]
  1952: 82 8b 18                 a4 = u64 [a1 + 0x18]
  1955: 64 76                    s1 = a0
  1957: 33 08 a9 10 01           a1 = 0x110a9
  1962: 33 09 01                 a2 = 0x1
  1965: 64 a7                    a0 = a3
  1967: b4 b0 01 78              ra = 120, jump [a4]
      :                          @114 [@dyn 60]
  1971: 7b 15                    u64 [sp] = s0
  1973: 78 17 08                 u8 [sp + 0x8] = a0
  1976: 46 11 09                 u8 [sp + 9] = 0
  1979: 7b 16 10                 u64 [sp + 0x10] = s1
  1982: 33 05 02                 s0 = 0x2
  1985: 64 17                    a0 = sp
  1987: 95 18 10                 a1 = sp + 0x10
  1990: 33 09 02                 a2 = 0x2
  1993: 50 10 7a 66 b9 00        ra = 122, jump @3156
      :                          @115 [@dyn 61]
  1999: 95 66 10                 s1 = s1 + 0x10
  2002: 7b 16 10                 u64 [sp + 0x10] = s1
  2005: 64 17                    a0 = sp
  2007: 95 18 10                 a1 = sp + 0x10
  2010: 64 59                    a2 = s0
  2012: 50 10 7c 53 b9 00        ra = 124, jump @3156
      :                          @116 [@dyn 62]
  2018: 33 07 01                 a0 = 0x1
  2021: 7c 18 08                 a1 = u8 [sp + 0x8]
  2024: 52 08 1a                 jump @118 if a1 != 0
      :                          @117
  2027: 82 17                    a0 = u64 [sp]
  2029: 82 78 28                 a1 = u64 [a0 + 0x28]
  2032: 82 77 20                 a0 = u64 [a0 + 0x20]
  2035: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2038: 33 08 e9 10 01           a1 = 0x110e9
  2043: 33 09 01                 a2 = 0x1
  2046: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @118 [@dyn 63]
  2050: 82 10 28                 ra = u64 [sp + 0x28]
  2053: 82 15 20                 s0 = u64 [sp + 0x20]
  2056: 82 16 18                 s1 = u64 [sp + 0x18]
  2059: 95 11 30                 sp = sp + 0x30
  2062: 32 00                    ret
      :                          @119 [@dyn 64]
  2064: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  2067: 7b 10 28                 u64 [sp + 0x28] = ra
  2070: 7b 15 20                 u64 [sp + 0x20] = s0
  2073: 7b 16 18                 u64 [sp + 0x18] = s1
  2076: 64 85                    s0 = a1
  2078: 82 88 28                 a1 = u64 [a1 + 0x28]
  2081: 82 5a 20                 a3 = u64 [s0 + 0x20]
  2084: 82 8b 18                 a4 = u64 [a1 + 0x18]
  2087: 64 76                    s1 = a0
  2089: 33 08 a9 10 01           a1 = 0x110a9
  2094: 33 09 01                 a2 = 0x1
  2097: 64 a7                    a0 = a3
  2099: b4 b0 02 82 00           ra = 130, jump [a4]
      :                          @120 [@dyn 65]
  2104: 7b 15                    u64 [sp] = s0
  2106: 78 17 08                 u8 [sp + 0x8] = a0
  2109: 46 11 09                 u8 [sp + 9] = 0
  2112: 7b 16 10                 u64 [sp + 0x10] = s1
  2115: 33 05 18                 s0 = 0x18
  2118: 64 17                    a0 = sp
  2120: 95 18 10                 a1 = sp + 0x10
  2123: 33 09 18                 a2 = 0x18
  2126: 50 20 84 00 e1 b8 00     ra = 132, jump @3156
      :                          @121 [@dyn 66]
  2133: 95 67 08                 a0 = s1 + 0x8
  2136: 7b 17 10                 u64 [sp + 0x10] = a0
  2139: 64 17                    a0 = sp
  2141: 95 18 10                 a1 = sp + 0x10
  2144: 64 59                    a2 = s0
  2146: 50 20 86 00 cd b8 00     ra = 134, jump @3156
      :                          @122 [@dyn 67]
  2153: 95 67 10                 a0 = s1 + 0x10
  2156: 7b 17 10                 u64 [sp + 0x10] = a0
  2159: 64 17                    a0 = sp
  2161: 95 18 10                 a1 = sp + 0x10
  2164: 64 59                    a2 = s0
  2166: 50 20 88 00 b9 b8 00     ra = 136, jump @3156
      :                          @123 [@dyn 68]
  2173: 95 67 18                 a0 = s1 + 0x18
  2176: 7b 17 10                 u64 [sp + 0x10] = a0
  2179: 64 17                    a0 = sp
  2181: 95 18 10                 a1 = sp + 0x10
  2184: 64 59                    a2 = s0
  2186: 50 20 8a 00 a5 b8 00     ra = 138, jump @3156
      :                          @124 [@dyn 69]
  2193: 95 67 20                 a0 = s1 + 0x20
  2196: 7b 17 10                 u64 [sp + 0x10] = a0
  2199: 64 17                    a0 = sp
  2201: 95 18 10                 a1 = sp + 0x10
  2204: 64 59                    a2 = s0
  2206: 50 20 8c 00 91 b8 00     ra = 140, jump @3156
      :                          @125 [@dyn 70]
  2213: 95 67 28                 a0 = s1 + 0x28
  2216: 7b 17 10                 u64 [sp + 0x10] = a0
  2219: 64 17                    a0 = sp
  2221: 95 18 10                 a1 = sp + 0x10
  2224: 64 59                    a2 = s0
  2226: 50 20 8e 00 7d b8 00     ra = 142, jump @3156
      :                          @126 [@dyn 71]
  2233: 95 67 30                 a0 = s1 + 0x30
  2236: 7b 17 10                 u64 [sp + 0x10] = a0
  2239: 64 17                    a0 = sp
  2241: 95 18 10                 a1 = sp + 0x10
  2244: 64 59                    a2 = s0
  2246: 50 20 90 00 69 b8 00     ra = 144, jump @3156
      :                          @127 [@dyn 72]
  2253: 95 67 38                 a0 = s1 + 0x38
  2256: 7b 17 10                 u64 [sp + 0x10] = a0
  2259: 64 17                    a0 = sp
  2261: 95 18 10                 a1 = sp + 0x10
  2264: 64 59                    a2 = s0
  2266: 50 20 92 00 55 b8 00     ra = 146, jump @3156
      :                          @128 [@dyn 73]
  2273: 33 07 01                 a0 = 0x1
  2276: 7c 18 08                 a1 = u8 [sp + 0x8]
  2279: 52 08 1b                 jump @130 if a1 != 0
      :                          @129
  2282: 82 17                    a0 = u64 [sp]
  2284: 82 78 28                 a1 = u64 [a0 + 0x28]
  2287: 82 77 20                 a0 = u64 [a0 + 0x20]
  2290: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2293: 33 08 e9 10 01           a1 = 0x110e9
  2298: 33 09 01                 a2 = 0x1
  2301: b4 a0 02 94 00           ra = 148, jump [a3]
      :                          @130 [@dyn 74]
  2306: 82 10 28                 ra = u64 [sp + 0x28]
  2309: 82 15 20                 s0 = u64 [sp + 0x20]
  2312: 82 16 18                 s1 = u64 [sp + 0x18]
  2315: 95 11 30                 sp = sp + 0x30
  2318: 32 00                    ret
      :                          @131
  2320: 95 11 f8                 sp = sp + 0xfffffffffffffff8
  2323: 7b 15                    u64 [sp] = s0
  2325: 98 82 01                 t0 = a1 >> 0x1
  2328: 84 24 fe                 t2 = t0 & 0xfffffffffffffffe
  2331: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  2334: ae 89 c1 00              jump @140 if a2 >=u a1
      :                          @132
  2338: 95 8a ff                 a3 = a1 + 0xffffffffffffffff
  2341: 68 aa                    a3 = clz a3
  2343: 9c a3 ff                 t1 = 0xffffffffffffffff >> a3
  2346: 97 8a 0d                 a3 = a1 << 0xd
  2349: d3 8a 0a                 a3 = a3 ^ a1
  2352: 98 ab 07                 a4 = a3 >> 0x7
  2355: d3 ba 0a                 a3 = a3 ^ a4
  2358: 97 ab 11                 a4 = a3 << 0x11
  2361: d3 ab 0b                 a4 = a4 ^ a3
  2364: d2 3b 0a                 a3 = a4 & t1
  2367: d8 8a 0c                 a5 = a3 <u a1
  2370: 64 85                    s0 = a1
  2372: 94 c5                    s0 = 0 if a5 != 0
  2374: c9 5a 0a                 a3 = a3 - s0
  2377: ae 8a 94 00              jump @138 if a3 >=u a1
      :                          @133
  2381: 97 99 03                 a2 = a2 << 0x3
  2384: c8 79 09                 a2 = a2 + a0
  2387: 97 aa 03                 a3 = a3 << 0x3
  2390: c8 7a 0a                 a3 = a3 + a0
  2393: 82 ac                    a5 = u64 [a3]
  2395: 82 95                    s0 = u64 [a2]
  2397: 7b 9c                    u64 [a2] = a5
  2399: 7b a5                    u64 [a3] = s0
  2401: ae 84 7d                 jump @139 if t2 >=u a1
      :                          @134
  2404: 97 b9 0d                 a2 = a4 << 0xd
  2407: d3 b9 09                 a2 = a2 ^ a4
  2410: 98 9a 07                 a3 = a2 >> 0x7
  2413: d3 a9 09                 a2 = a2 ^ a3
  2416: 97 9b 11                 a4 = a2 << 0x11
  2419: d3 9b 0b                 a4 = a4 ^ a2
  2422: d2 3b 09                 a2 = a4 & t1
  2425: d8 89 0a                 a3 = a2 <u a1
  2428: 64 8c                    a5 = a1
  2430: 94 ac                    a5 = 0 if a3 != 0
  2432: c9 c9 0a                 a3 = a2 - a5
  2435: ae 8a 5a                 jump @138 if a3 >=u a1
      :                          @135
  2438: 97 44 03                 t2 = t2 << 0x3
  2441: 97 aa 03                 a3 = a3 << 0x3
  2444: c8 7a 0a                 a3 = a3 + a0
  2447: 82 a9                    a2 = u64 [a3]
  2449: c8 74 04                 t2 = t2 + a0
  2452: 82 4c                    a5 = u64 [t2]
  2454: 7b 49                    u64 [t2] = a2
  2456: 86 29 01                 a2 = t0 | 0x1
  2459: 7b ac                    u64 [a3] = a5
  2461: ae 89 42                 jump @140 if a2 >=u a1
      :                          @136
  2464: 97 ba 0d                 a3 = a4 << 0xd
  2467: d3 ba 0a                 a3 = a3 ^ a4
  2470: 98 ab 07                 a4 = a3 >> 0x7
  2473: d3 ba 0a                 a3 = a3 ^ a4
  2476: 97 ab 11                 a4 = a3 << 0x11
  2479: d3 ba 0a                 a3 = a3 ^ a4
  2482: d2 3a 0a                 a3 = a3 & t1
  2485: d8 8a 0b                 a4 = a3 <u a1
  2488: 64 8c                    a5 = a1
  2490: 94 bc                    a5 = 0 if a4 != 0
  2492: c9 ca 0a                 a3 = a3 - a5
  2495: ae 8a 1e                 jump @138 if a3 >=u a1
      :                          @137
  2498: 97 99 03                 a2 = a2 << 0x3
  2501: c8 79 09                 a2 = a2 + a0
  2504: 97 aa 03                 a3 = a3 << 0x3
  2507: c8 a7 07                 a0 = a0 + a3
  2510: 82 78                    a1 = u64 [a0]
  2512: 82 9a                    a3 = u64 [a2]
  2514: 7b 98                    u64 [a2] = a1
  2516: 7b 7a                    u64 [a0] = a3
  2518: 82 15                    s0 = u64 [sp]
  2520: 95 11 08                 sp = sp + 0x8
  2523: 32 00                    ret
      :                          @138
  2525: 00                       trap
      :                          @139
  2526: 00                       trap
      :                          @140
  2527: 00                       trap
      :                          @141
  2528: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  2531: 7b 10 28                 u64 [sp + 0x28] = ra
  2534: 7b 15 20                 u64 [sp + 0x20] = s0
  2537: 7b 16 18                 u64 [sp + 0x18] = s1
  2540: 33 09 32                 a2 = 0x32
  2543: 64 82                    t0 = a1
  2545: 64 73                    t1 = a0
  2547: ae 98 33                 jump @147 if a1 >=u a2
      :                          @142
  2550: 82 37 08                 a0 = u64 [t1 + 0x8]
  2553: 82 39                    a2 = u64 [t1]
  2555: 33 08 01                 a1 = 0x1
  2558: ac 79 64 02              jump @210 if a2 <u a0
      :                          @143
  2562: 95 39 10                 a2 = t1 + 0x10
  2565: 9a 26 02                 s1 = 0x2 - t0
  2568: 33 0b 01                 a4 = 0x1
  2571: 33 08 01                 a1 = 0x1
  2574: 01                       fallthrough
      :                          @144
  2575: c8 86 0a                 a3 = s1 + a1
  2578: aa ba 46 02              jump @209 if a3 == a4
      :                          @145
  2582: 64 7c                    a5 = a0
  2584: 82 97                    a0 = u64 [a2]
  2586: 95 88 01                 a1 = a1 + 0x1
  2589: 95 99 08                 a2 = a2 + 0x8
  2592: ae 7c ef                 jump @144 if a5 >=u a0
      :                          @146
  2595: 28 3f 02                 jump @210
      :                          @147
  2598: 82 37                    a0 = u64 [t1]
  2600: 82 38 08                 a1 = u64 [t1 + 0x8]
  2603: ae 87 0f                 jump @150 if a0 >=u a1
      :                          @148
  2606: 33 07 01                 a0 = 0x1
  2609: 33 06 01                 s1 = 0x1
  2612: ab 62 2b                 jump @154 if t0 != s1
      :                          @149
  2615: 28 32 02                 jump @211
      :                          @150
  2618: 95 39 10                 a2 = t1 + 0x10
  2621: 9a 2a 02                 a3 = 0x2 - t0
  2624: 33 07 01                 a0 = 0x1
  2627: 33 06 01                 s1 = 0x1
  2630: 01                       fallthrough
      :                          @151
  2631: c8 6a 0c                 a5 = a3 + s1
  2634: aa 7c 1f 02              jump @211 if a5 == a0
      :                          @152
  2638: 64 8b                    a4 = a1
  2640: 82 98                    a1 = u64 [a2]
  2642: 95 99 08                 a2 = a2 + 0x8
  2645: 95 66 01                 s1 = s1 + 0x1
  2648: ae 8b ef                 jump @151 if a4 >=u a1
      :                          @153
  2651: d8 26 07                 a0 = s1 <u t0
  2654: 01                       fallthrough
      :                          @154
  2655: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  2658: ae 29 20 02              jump @215 if a2 >=u t0
      :                          @155
  2662: 51 07 1b 02              jump @214 if a0 == 0
      :                          @156
  2666: 97 95 03                 s0 = a2 << 0x3
  2669: 97 67 03                 a0 = s1 << 0x3
  2672: c8 73 0a                 a3 = t1 + a0
  2675: 82 a7                    a0 = u64 [a3]
  2677: c8 35 05                 s0 = s0 + t1
  2680: 82 58                    a1 = u64 [s0]
  2682: 7b 57                    u64 [s0] = a0
  2684: 7b a8                    u64 [a3] = a1
  2686: 7b 12 08                 u64 [sp + 0x8] = t0
  2689: 7b 13 10                 u64 [sp + 0x10] = t1
  2692: 53 16 02 24              jump @160 if s1 <u 2
      :                          @157
  2696: 64 37                    a0 = t1
  2698: 64 68                    a1 = s1
  2700: 7b 1a                    u64 [sp] = a3
  2702: 50 20 96 00 98 04        ra = 150, jump @291
      :                          @158 [@dyn 75]
  2708: 82 17 10                 a0 = u64 [sp + 0x10]
  2711: 64 68                    a1 = s1
  2713: 50 20 98 00 98 05        ra = 152, jump @330
      :                          @159 [@dyn 76]
  2719: 82 1a                    a3 = u64 [sp]
  2721: 82 13 10                 t1 = u64 [sp + 0x10]
  2724: 82 12 08                 t0 = u64 [sp + 0x8]
  2727: 01                       fallthrough
      :                          @160
  2728: ae 26 d3 01              jump @213 if s1 >=u t0
      :                          @161
  2732: 82 59                    a2 = u64 [s0]
  2734: 82 a8                    a1 = u64 [a3]
  2736: 33 07 01                 a0 = 0x1
  2739: ac 89 1f                 jump @166 if a2 <u a1
      :                          @162
  2742: 95 a7 08                 a0 = a3 + 0x8
  2745: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  2748: 01                       fallthrough
      :                          @163
  2749: aa 69 96 01              jump @208 if a2 == s1
      :                          @164
  2753: 64 8a                    a3 = a1
  2755: 82 78                    a1 = u64 [a0]
  2757: 95 77 08                 a0 = a0 + 0x8
  2760: 95 66 01                 s1 = s1 + 0x1
  2763: ae 8a f2                 jump @163 if a3 >=u a1
      :                          @165
  2766: d8 26 07                 a0 = s1 <u t0
  2769: 01                       fallthrough
      :                          @166
  2770: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  2773: ae 29 ad 01              jump @215 if a2 >=u t0
      :                          @167
  2777: 51 07 a8 01              jump @214 if a0 == 0
      :                          @168
  2781: 97 95 03                 s0 = a2 << 0x3
  2784: 97 67 03                 a0 = s1 << 0x3
  2787: c8 73 0a                 a3 = t1 + a0
  2790: 82 a7                    a0 = u64 [a3]
  2792: c8 35 05                 s0 = s0 + t1
  2795: 82 58                    a1 = u64 [s0]
  2797: 7b 57                    u64 [s0] = a0
  2799: 7b a8                    u64 [a3] = a1
  2801: 53 16 02 24              jump @172 if s1 <u 2
      :                          @169
  2805: 64 37                    a0 = t1
  2807: 64 68                    a1 = s1
  2809: 7b 1a                    u64 [sp] = a3
  2811: 50 20 9a 00 2b 04        ra = 154, jump @291
      :                          @170 [@dyn 77]
  2817: 82 17 10                 a0 = u64 [sp + 0x10]
  2820: 64 68                    a1 = s1
  2822: 50 20 9c 00 2b 05        ra = 156, jump @330
      :                          @171 [@dyn 78]
  2828: 82 1a                    a3 = u64 [sp]
  2830: 82 13 10                 t1 = u64 [sp + 0x10]
  2833: 82 12 08                 t0 = u64 [sp + 0x8]
  2836: 01                       fallthrough
      :                          @172
  2837: ae 26 66 01              jump @213 if s1 >=u t0
      :                          @173
  2841: 82 59                    a2 = u64 [s0]
  2843: 82 a8                    a1 = u64 [a3]
  2845: 33 07 01                 a0 = 0x1
  2848: ac 89 1f                 jump @178 if a2 <u a1
      :                          @174
  2851: 95 a7 08                 a0 = a3 + 0x8
  2854: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  2857: 01                       fallthrough
      :                          @175
  2858: aa 69 29 01              jump @208 if a2 == s1
      :                          @176
  2862: 64 8a                    a3 = a1
  2864: 82 78                    a1 = u64 [a0]
  2866: 95 77 08                 a0 = a0 + 0x8
  2869: 95 66 01                 s1 = s1 + 0x1
  2872: ae 8a f2                 jump @175 if a3 >=u a1
      :                          @177
  2875: d8 26 07                 a0 = s1 <u t0
  2878: 01                       fallthrough
      :                          @178
  2879: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  2882: ae 29 40 01              jump @215 if a2 >=u t0
      :                          @179
  2886: 51 07 3b 01              jump @214 if a0 == 0
      :                          @180
  2890: 97 95 03                 s0 = a2 << 0x3
  2893: 97 67 03                 a0 = s1 << 0x3
  2896: c8 73 0a                 a3 = t1 + a0
  2899: 82 a7                    a0 = u64 [a3]
  2901: c8 35 05                 s0 = s0 + t1
  2904: 82 58                    a1 = u64 [s0]
  2906: 7b 57                    u64 [s0] = a0
  2908: 7b a8                    u64 [a3] = a1
  2910: 53 16 02 24              jump @184 if s1 <u 2
      :                          @181
  2914: 64 37                    a0 = t1
  2916: 64 68                    a1 = s1
  2918: 7b 1a                    u64 [sp] = a3
  2920: 50 20 9e 00 be 03        ra = 158, jump @291
      :                          @182 [@dyn 79]
  2926: 82 17 10                 a0 = u64 [sp + 0x10]
  2929: 64 68                    a1 = s1
  2931: 50 20 a0 00 be 04        ra = 160, jump @330
      :                          @183 [@dyn 80]
  2937: 82 1a                    a3 = u64 [sp]
  2939: 82 13 10                 t1 = u64 [sp + 0x10]
  2942: 82 12 08                 t0 = u64 [sp + 0x8]
  2945: 01                       fallthrough
      :                          @184
  2946: ae 26 f9 00              jump @213 if s1 >=u t0
      :                          @185
  2950: 82 59                    a2 = u64 [s0]
  2952: 82 a8                    a1 = u64 [a3]
  2954: 33 07 01                 a0 = 0x1
  2957: ac 89 1f                 jump @190 if a2 <u a1
      :                          @186
  2960: 95 a7 08                 a0 = a3 + 0x8
  2963: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  2966: 01                       fallthrough
      :                          @187
  2967: aa 69 bc 00              jump @208 if a2 == s1
      :                          @188
  2971: 64 8a                    a3 = a1
  2973: 82 78                    a1 = u64 [a0]
  2975: 95 77 08                 a0 = a0 + 0x8
  2978: 95 66 01                 s1 = s1 + 0x1
  2981: ae 8a f2                 jump @187 if a3 >=u a1
      :                          @189
  2984: d8 26 07                 a0 = s1 <u t0
  2987: 01                       fallthrough
      :                          @190
  2988: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  2991: ae 29 d3 00              jump @215 if a2 >=u t0
      :                          @191
  2995: 51 07 ce 00              jump @214 if a0 == 0
      :                          @192
  2999: 97 95 03                 s0 = a2 << 0x3
  3002: 97 67 03                 a0 = s1 << 0x3
  3005: c8 73 0a                 a3 = t1 + a0
  3008: 82 a7                    a0 = u64 [a3]
  3010: c8 35 05                 s0 = s0 + t1
  3013: 82 58                    a1 = u64 [s0]
  3015: 7b 57                    u64 [s0] = a0
  3017: 7b a8                    u64 [a3] = a1
  3019: 53 16 02 24              jump @196 if s1 <u 2
      :                          @193
  3023: 64 37                    a0 = t1
  3025: 64 68                    a1 = s1
  3027: 7b 1a                    u64 [sp] = a3
  3029: 50 20 a2 00 51 03        ra = 162, jump @291
      :                          @194 [@dyn 81]
  3035: 82 17 10                 a0 = u64 [sp + 0x10]
  3038: 64 68                    a1 = s1
  3040: 50 20 a4 00 51 04        ra = 164, jump @330
      :                          @195 [@dyn 82]
  3046: 82 1a                    a3 = u64 [sp]
  3048: 82 13 10                 t1 = u64 [sp + 0x10]
  3051: 82 12 08                 t0 = u64 [sp + 0x8]
  3054: 01                       fallthrough
      :                          @196
  3055: ae 26 8c 00              jump @213 if s1 >=u t0
      :                          @197
  3059: 82 59                    a2 = u64 [s0]
  3061: 82 a8                    a1 = u64 [a3]
  3063: 33 07 01                 a0 = 0x1
  3066: ac 89 1e                 jump @202 if a2 <u a1
      :                          @198
  3069: 95 a7 08                 a0 = a3 + 0x8
  3072: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  3075: 01                       fallthrough
      :                          @199
  3076: aa 69 4f                 jump @208 if a2 == s1
      :                          @200
  3079: 64 8a                    a3 = a1
  3081: 82 78                    a1 = u64 [a0]
  3083: 95 77 08                 a0 = a0 + 0x8
  3086: 95 66 01                 s1 = s1 + 0x1
  3089: ae 8a f3                 jump @199 if a3 >=u a1
      :                          @201
  3092: d8 26 07                 a0 = s1 <u t0
  3095: 01                       fallthrough
      :                          @202
  3096: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3099: ae 29 67                 jump @215 if a2 >=u t0
      :                          @203
  3102: 51 07 63                 jump @214 if a0 == 0
      :                          @204
  3105: 97 97 03                 a0 = a2 << 0x3
  3108: 97 68 03                 a1 = s1 << 0x3
  3111: c8 38 08                 a1 = a1 + t1
  3114: 82 8a                    a3 = u64 [a1]
  3116: c8 37 07                 a0 = a0 + t1
  3119: 82 7b                    a4 = u64 [a0]
  3121: 7b 7a                    u64 [a0] = a3
  3123: 7b 8b                    u64 [a1] = a4
  3125: 53 16 02 42              jump @212 if s1 <u 2
      :                          @205
  3129: 64 37                    a0 = t1
  3131: 64 68                    a1 = s1
  3133: 64 35                    s0 = t1
  3135: 50 20 a6 00 e7 02        ra = 166, jump @291
      :                          @206 [@dyn 83]
  3141: 64 57                    a0 = s0
  3143: 64 68                    a1 = s1
  3145: 50 20 a8 00 e8 03        ra = 168, jump @330
      :                          @207 [@dyn 84]
  3151: 33 07                    a0 = 0
  3153: 28 18                    jump @211
      :                          @208
  3155: 33 07 01                 a0 = 0x1
  3158: 28 13                    jump @211
      :                          @209
  3160: 64 28                    a1 = t0
  3162: d3 28 07                 a0 = a1 ^ t0
  3165: 88 77 01                 a0 = a0 <u 0x1
  3168: 28 09                    jump @211
      :                          @210
  3170: d3 28 07                 a0 = a1 ^ t0
  3173: 88 77 01                 a0 = a0 <u 0x1
  3176: 01                       fallthrough
      :                          @211
  3177: 82 10 28                 ra = u64 [sp + 0x28]
  3180: 82 15 20                 s0 = u64 [sp + 0x20]
  3183: 82 16 18                 s1 = u64 [sp + 0x18]
  3186: 95 11 30                 sp = sp + 0x30
  3189: 32 00                    ret
      :                          @212
  3191: 33 07                    a0 = 0
  3193: 28 f0                    jump @211
      :                          @213
  3195: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3198: ae 29 04                 jump @215 if a2 >=u t0
      :                          @214
  3201: 00                       trap
      :                          @215
  3202: 00                       trap
      :                          @216
  3203: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  3206: 7b 10 28                 u64 [sp + 0x28] = ra
  3209: 7b 15 20                 u64 [sp + 0x20] = s0
  3212: 7b 16 18                 u64 [sp + 0x18] = s1
  3215: 33 09 32                 a2 = 0x32
  3218: 64 82                    t0 = a1
  3220: 64 73                    t1 = a0
  3222: ae 98 33                 jump @222 if a1 >=u a2
      :                          @217
  3225: 82 37 08                 a0 = u64 [t1 + 0x8]
  3228: 82 39                    a2 = u64 [t1]
  3230: 33 08 01                 a1 = 0x1
  3233: ad 97 64 02              jump @285 if a0 <s a2
      :                          @218
  3237: 95 39 10                 a2 = t1 + 0x10
  3240: 9a 26 02                 s1 = 0x2 - t0
  3243: 33 0b 01                 a4 = 0x1
  3246: 33 08 01                 a1 = 0x1
  3249: 01                       fallthrough
      :                          @219
  3250: c8 86 0a                 a3 = s1 + a1
  3253: aa ba 46 02              jump @284 if a3 == a4
      :                          @220
  3257: 64 7c                    a5 = a0
  3259: 82 97                    a0 = u64 [a2]
  3261: 95 88 01                 a1 = a1 + 0x1
  3264: 95 99 08                 a2 = a2 + 0x8
  3267: af c7 ef                 jump @219 if a0 >=s a5
      :                          @221
  3270: 28 3f 02                 jump @285
      :                          @222
  3273: 82 37                    a0 = u64 [t1]
  3275: 82 38 08                 a1 = u64 [t1 + 0x8]
  3278: af 78 0f                 jump @225 if a1 >=s a0
      :                          @223
  3281: 33 07 01                 a0 = 0x1
  3284: 33 06 01                 s1 = 0x1
  3287: ab 62 2b                 jump @229 if t0 != s1
      :                          @224
  3290: 28 32 02                 jump @286
      :                          @225
  3293: 95 39 10                 a2 = t1 + 0x10
  3296: 9a 2a 02                 a3 = 0x2 - t0
  3299: 33 07 01                 a0 = 0x1
  3302: 33 06 01                 s1 = 0x1
  3305: 01                       fallthrough
      :                          @226
  3306: c8 6a 0c                 a5 = a3 + s1
  3309: aa 7c 1f 02              jump @286 if a5 == a0
      :                          @227
  3313: 64 8b                    a4 = a1
  3315: 82 98                    a1 = u64 [a2]
  3317: 95 99 08                 a2 = a2 + 0x8
  3320: 95 66 01                 s1 = s1 + 0x1
  3323: af b8 ef                 jump @226 if a1 >=s a4
      :                          @228
  3326: d8 26 07                 a0 = s1 <u t0
  3329: 01                       fallthrough
      :                          @229
  3330: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3333: ae 29 20 02              jump @290 if a2 >=u t0
      :                          @230
  3337: 51 07 1b 02              jump @289 if a0 == 0
      :                          @231
  3341: 97 95 03                 s0 = a2 << 0x3
  3344: 97 67 03                 a0 = s1 << 0x3
  3347: c8 73 0a                 a3 = t1 + a0
  3350: 82 a7                    a0 = u64 [a3]
  3352: c8 35 05                 s0 = s0 + t1
  3355: 82 58                    a1 = u64 [s0]
  3357: 7b 57                    u64 [s0] = a0
  3359: 7b a8                    u64 [a3] = a1
  3361: 7b 12 08                 u64 [sp + 0x8] = t0
  3364: 7b 13 10                 u64 [sp + 0x10] = t1
  3367: 53 16 02 24              jump @235 if s1 <u 2
      :                          @232
  3371: 64 37                    a0 = t1
  3373: 64 68                    a1 = s1
  3375: 7b 1a                    u64 [sp] = a3
  3377: 50 20 aa 00 a7 02        ra = 170, jump @317
      :                          @233 [@dyn 85]
  3383: 82 17 10                 a0 = u64 [sp + 0x10]
  3386: 64 68                    a1 = s1
  3388: 50 20 ac 00 4c 03        ra = 172, jump @340
      :                          @234 [@dyn 86]
  3394: 82 1a                    a3 = u64 [sp]
  3396: 82 13 10                 t1 = u64 [sp + 0x10]
  3399: 82 12 08                 t0 = u64 [sp + 0x8]
  3402: 01                       fallthrough
      :                          @235
  3403: ae 26 d3 01              jump @288 if s1 >=u t0
      :                          @236
  3407: 82 59                    a2 = u64 [s0]
  3409: 82 a8                    a1 = u64 [a3]
  3411: 33 07 01                 a0 = 0x1
  3414: ad 98 1f                 jump @241 if a1 <s a2
      :                          @237
  3417: 95 a7 08                 a0 = a3 + 0x8
  3420: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  3423: 01                       fallthrough
      :                          @238
  3424: aa 69 96 01              jump @283 if a2 == s1
      :                          @239
  3428: 64 8a                    a3 = a1
  3430: 82 78                    a1 = u64 [a0]
  3432: 95 77 08                 a0 = a0 + 0x8
  3435: 95 66 01                 s1 = s1 + 0x1
  3438: af a8 f2                 jump @238 if a1 >=s a3
      :                          @240
  3441: d8 26 07                 a0 = s1 <u t0
  3444: 01                       fallthrough
      :                          @241
  3445: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3448: ae 29 ad 01              jump @290 if a2 >=u t0
      :                          @242
  3452: 51 07 a8 01              jump @289 if a0 == 0
      :                          @243
  3456: 97 95 03                 s0 = a2 << 0x3
  3459: 97 67 03                 a0 = s1 << 0x3
  3462: c8 73 0a                 a3 = t1 + a0
  3465: 82 a7                    a0 = u64 [a3]
  3467: c8 35 05                 s0 = s0 + t1
  3470: 82 58                    a1 = u64 [s0]
  3472: 7b 57                    u64 [s0] = a0
  3474: 7b a8                    u64 [a3] = a1
  3476: 53 16 02 24              jump @247 if s1 <u 2
      :                          @244
  3480: 64 37                    a0 = t1
  3482: 64 68                    a1 = s1
  3484: 7b 1a                    u64 [sp] = a3
  3486: 50 20 ae 00 3a 02        ra = 174, jump @317
      :                          @245 [@dyn 87]
  3492: 82 17 10                 a0 = u64 [sp + 0x10]
  3495: 64 68                    a1 = s1
  3497: 50 20 b0 00 df 02        ra = 176, jump @340
      :                          @246 [@dyn 88]
  3503: 82 1a                    a3 = u64 [sp]
  3505: 82 13 10                 t1 = u64 [sp + 0x10]
  3508: 82 12 08                 t0 = u64 [sp + 0x8]
  3511: 01                       fallthrough
      :                          @247
  3512: ae 26 66 01              jump @288 if s1 >=u t0
      :                          @248
  3516: 82 59                    a2 = u64 [s0]
  3518: 82 a8                    a1 = u64 [a3]
  3520: 33 07 01                 a0 = 0x1
  3523: ad 98 1f                 jump @253 if a1 <s a2
      :                          @249
  3526: 95 a7 08                 a0 = a3 + 0x8
  3529: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  3532: 01                       fallthrough
      :                          @250
  3533: aa 69 29 01              jump @283 if a2 == s1
      :                          @251
  3537: 64 8a                    a3 = a1
  3539: 82 78                    a1 = u64 [a0]
  3541: 95 77 08                 a0 = a0 + 0x8
  3544: 95 66 01                 s1 = s1 + 0x1
  3547: af a8 f2                 jump @250 if a1 >=s a3
      :                          @252
  3550: d8 26 07                 a0 = s1 <u t0
  3553: 01                       fallthrough
      :                          @253
  3554: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3557: ae 29 40 01              jump @290 if a2 >=u t0
      :                          @254
  3561: 51 07 3b 01              jump @289 if a0 == 0
      :                          @255
  3565: 97 95 03                 s0 = a2 << 0x3
  3568: 97 67 03                 a0 = s1 << 0x3
  3571: c8 73 0a                 a3 = t1 + a0
  3574: 82 a7                    a0 = u64 [a3]
  3576: c8 35 05                 s0 = s0 + t1
  3579: 82 58                    a1 = u64 [s0]
  3581: 7b 57                    u64 [s0] = a0
  3583: 7b a8                    u64 [a3] = a1
  3585: 53 16 02 24              jump @259 if s1 <u 2
      :                          @256
  3589: 64 37                    a0 = t1
  3591: 64 68                    a1 = s1
  3593: 7b 1a                    u64 [sp] = a3
  3595: 50 20 b2 00 cd 01        ra = 178, jump @317
      :                          @257 [@dyn 89]
  3601: 82 17 10                 a0 = u64 [sp + 0x10]
  3604: 64 68                    a1 = s1
  3606: 50 20 b4 00 72 02        ra = 180, jump @340
      :                          @258 [@dyn 90]
  3612: 82 1a                    a3 = u64 [sp]
  3614: 82 13 10                 t1 = u64 [sp + 0x10]
  3617: 82 12 08                 t0 = u64 [sp + 0x8]
  3620: 01                       fallthrough
      :                          @259
  3621: ae 26 f9 00              jump @288 if s1 >=u t0
      :                          @260
  3625: 82 59                    a2 = u64 [s0]
  3627: 82 a8                    a1 = u64 [a3]
  3629: 33 07 01                 a0 = 0x1
  3632: ad 98 1f                 jump @265 if a1 <s a2
      :                          @261
  3635: 95 a7 08                 a0 = a3 + 0x8
  3638: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  3641: 01                       fallthrough
      :                          @262
  3642: aa 69 bc 00              jump @283 if a2 == s1
      :                          @263
  3646: 64 8a                    a3 = a1
  3648: 82 78                    a1 = u64 [a0]
  3650: 95 77 08                 a0 = a0 + 0x8
  3653: 95 66 01                 s1 = s1 + 0x1
  3656: af a8 f2                 jump @262 if a1 >=s a3
      :                          @264
  3659: d8 26 07                 a0 = s1 <u t0
  3662: 01                       fallthrough
      :                          @265
  3663: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3666: ae 29 d3 00              jump @290 if a2 >=u t0
      :                          @266
  3670: 51 07 ce 00              jump @289 if a0 == 0
      :                          @267
  3674: 97 95 03                 s0 = a2 << 0x3
  3677: 97 67 03                 a0 = s1 << 0x3
  3680: c8 73 0a                 a3 = t1 + a0
  3683: 82 a7                    a0 = u64 [a3]
  3685: c8 35 05                 s0 = s0 + t1
  3688: 82 58                    a1 = u64 [s0]
  3690: 7b 57                    u64 [s0] = a0
  3692: 7b a8                    u64 [a3] = a1
  3694: 53 16 02 24              jump @271 if s1 <u 2
      :                          @268
  3698: 64 37                    a0 = t1
  3700: 64 68                    a1 = s1
  3702: 7b 1a                    u64 [sp] = a3
  3704: 50 20 b6 00 60 01        ra = 182, jump @317
      :                          @269 [@dyn 91]
  3710: 82 17 10                 a0 = u64 [sp + 0x10]
  3713: 64 68                    a1 = s1
  3715: 50 20 b8 00 05 02        ra = 184, jump @340
      :                          @270 [@dyn 92]
  3721: 82 1a                    a3 = u64 [sp]
  3723: 82 13 10                 t1 = u64 [sp + 0x10]
  3726: 82 12 08                 t0 = u64 [sp + 0x8]
  3729: 01                       fallthrough
      :                          @271
  3730: ae 26 8c 00              jump @288 if s1 >=u t0
      :                          @272
  3734: 82 59                    a2 = u64 [s0]
  3736: 82 a8                    a1 = u64 [a3]
  3738: 33 07 01                 a0 = 0x1
  3741: ad 98 1e                 jump @277 if a1 <s a2
      :                          @273
  3744: 95 a7 08                 a0 = a3 + 0x8
  3747: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  3750: 01                       fallthrough
      :                          @274
  3751: aa 69 4f                 jump @283 if a2 == s1
      :                          @275
  3754: 64 8a                    a3 = a1
  3756: 82 78                    a1 = u64 [a0]
  3758: 95 77 08                 a0 = a0 + 0x8
  3761: 95 66 01                 s1 = s1 + 0x1
  3764: af a8 f3                 jump @274 if a1 >=s a3
      :                          @276
  3767: d8 26 07                 a0 = s1 <u t0
  3770: 01                       fallthrough
      :                          @277
  3771: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3774: ae 29 67                 jump @290 if a2 >=u t0
      :                          @278
  3777: 51 07 63                 jump @289 if a0 == 0
      :                          @279
  3780: 97 97 03                 a0 = a2 << 0x3
  3783: 97 68 03                 a1 = s1 << 0x3
  3786: c8 38 08                 a1 = a1 + t1
  3789: 82 8a                    a3 = u64 [a1]
  3791: c8 37 07                 a0 = a0 + t1
  3794: 82 7b                    a4 = u64 [a0]
  3796: 7b 7a                    u64 [a0] = a3
  3798: 7b 8b                    u64 [a1] = a4
  3800: 53 16 02 42              jump @287 if s1 <u 2
      :                          @280
  3804: 64 37                    a0 = t1
  3806: 64 68                    a1 = s1
  3808: 64 35                    s0 = t1
  3810: 50 20 ba 00 f6 00        ra = 186, jump @317
      :                          @281 [@dyn 93]
  3816: 64 57                    a0 = s0
  3818: 64 68                    a1 = s1
  3820: 50 20 bc 00 9c 01        ra = 188, jump @340
      :                          @282 [@dyn 94]
  3826: 33 07                    a0 = 0
  3828: 28 18                    jump @286
      :                          @283
  3830: 33 07 01                 a0 = 0x1
  3833: 28 13                    jump @286
      :                          @284
  3835: 64 28                    a1 = t0
  3837: d3 28 07                 a0 = a1 ^ t0
  3840: 88 77 01                 a0 = a0 <u 0x1
  3843: 28 09                    jump @286
      :                          @285
  3845: d3 28 07                 a0 = a1 ^ t0
  3848: 88 77 01                 a0 = a0 <u 0x1
  3851: 01                       fallthrough
      :                          @286
  3852: 82 10 28                 ra = u64 [sp + 0x28]
  3855: 82 15 20                 s0 = u64 [sp + 0x20]
  3858: 82 16 18                 s1 = u64 [sp + 0x18]
  3861: 95 11 30                 sp = sp + 0x30
  3864: 32 00                    ret
      :                          @287
  3866: 33 07                    a0 = 0
  3868: 28 f0                    jump @286
      :                          @288
  3870: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3873: ae 29 04                 jump @290 if a2 >=u t0
      :                          @289
  3876: 00                       trap
      :                          @290
  3877: 00                       trap
      :                          @291
  3878: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  3881: ae 8a 55                 jump @303 if a3 >=u a1
      :                          @292
  3884: ae 89 50                 jump @302 if a2 >=u a1
      :                          @293
  3887: 97 9a 03                 a3 = a2 << 0x3
  3890: c8 7a 0a                 a3 = a3 + a0
  3893: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
  3896: 28 15                    jump @297
      :                          @294
  3898: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
  3901: 7b c4                    u64 [a5] = t2
  3903: 28 05                    jump @296
      :                          @295
  3905: 7b c4                    u64 [a5] = t2
  3907: 01                       fallthrough
      :                          @296
  3908: 95 99 01                 a2 = a2 + 0x1
  3911: 95 22 08                 t0 = t0 + 0x8
  3914: aa 89 32                 jump @302 if a2 == a1
      :                          @297
  3917: 97 93 03                 t1 = a2 << 0x3
  3920: c8 73 03                 t1 = t1 + a0
  3923: 82 34                    t2 = u64 [t1]
  3925: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
  3928: ae 4c ec                 jump @296 if a5 >=u t2
      :                          @298
  3931: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  3934: 7b 3c                    u64 [t1] = a5
  3936: 64 2c                    a5 = t0
  3938: 51 0a d8                 jump @294 if a3 == 0
      :                          @299
  3941: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
  3944: ae 4b d9                 jump @295 if a4 >=u t2
      :                          @300
  3947: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3950: 7b cb                    u64 [a5] = a4
  3952: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
  3955: 52 0a f2                 jump @299 if a3 != 0
      :                          @301
  3958: 64 7c                    a5 = a0
  3960: 7b c4                    u64 [a5] = t2
  3962: 28 ca                    jump @296
      :                          @302
  3964: 32 00                    ret
      :                          @303
  3966: 00                       trap
      :                          @304
  3967: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  3970: ae 8a 55                 jump @316 if a3 >=u a1
      :                          @305
  3973: ae 89 50                 jump @315 if a2 >=u a1
      :                          @306
  3976: 97 9a 03                 a3 = a2 << 0x3
  3979: c8 7a 0a                 a3 = a3 + a0
  3982: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
  3985: 28 15                    jump @310
      :                          @307
  3987: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
  3990: 7b c4                    u64 [a5] = t2
  3992: 28 05                    jump @309
      :                          @308
  3994: 7b c4                    u64 [a5] = t2
  3996: 01                       fallthrough
      :                          @309
  3997: 95 99 01                 a2 = a2 + 0x1
  4000: 95 22 08                 t0 = t0 + 0x8
  4003: aa 89 32                 jump @315 if a2 == a1
      :                          @310
  4006: 97 93 03                 t1 = a2 << 0x3
  4009: c8 73 03                 t1 = t1 + a0
  4012: 82 34                    t2 = u64 [t1]
  4014: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
  4017: ae c4 ec                 jump @309 if t2 >=u a5
      :                          @311
  4020: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  4023: 7b 3c                    u64 [t1] = a5
  4025: 64 2c                    a5 = t0
  4027: 51 0a d8                 jump @307 if a3 == 0
      :                          @312
  4030: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
  4033: ae b4 d9                 jump @308 if t2 >=u a4
      :                          @313
  4036: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  4039: 7b cb                    u64 [a5] = a4
  4041: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
  4044: 52 0a f2                 jump @312 if a3 != 0
      :                          @314
  4047: 64 7c                    a5 = a0
  4049: 7b c4                    u64 [a5] = t2
  4051: 28 ca                    jump @309
      :                          @315
  4053: 32 00                    ret
      :                          @316
  4055: 00                       trap
      :                          @317
  4056: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  4059: ae 8a 55                 jump @329 if a3 >=u a1
      :                          @318
  4062: ae 89 50                 jump @328 if a2 >=u a1
      :                          @319
  4065: 97 9a 03                 a3 = a2 << 0x3
  4068: c8 7a 0a                 a3 = a3 + a0
  4071: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
  4074: 28 15                    jump @323
      :                          @320
  4076: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
  4079: 7b c4                    u64 [a5] = t2
  4081: 28 05                    jump @322
      :                          @321
  4083: 7b c4                    u64 [a5] = t2
  4085: 01                       fallthrough
      :                          @322
  4086: 95 99 01                 a2 = a2 + 0x1
  4089: 95 22 08                 t0 = t0 + 0x8
  4092: aa 89 32                 jump @328 if a2 == a1
      :                          @323
  4095: 97 93 03                 t1 = a2 << 0x3
  4098: c8 73 03                 t1 = t1 + a0
  4101: 82 34                    t2 = u64 [t1]
  4103: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
  4106: af c4 ec                 jump @322 if t2 >=s a5
      :                          @324
  4109: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  4112: 7b 3c                    u64 [t1] = a5
  4114: 64 2c                    a5 = t0
  4116: 51 0a d8                 jump @320 if a3 == 0
      :                          @325
  4119: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
  4122: af b4 d9                 jump @321 if t2 >=s a4
      :                          @326
  4125: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  4128: 7b cb                    u64 [a5] = a4
  4130: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
  4133: 52 0a f2                 jump @325 if a3 != 0
      :                          @327
  4136: 64 7c                    a5 = a0
  4138: 7b c4                    u64 [a5] = t2
  4140: 28 ca                    jump @322
      :                          @328
  4142: 32 00                    ret
      :                          @329
  4144: 00                       trap
      :                          @330
  4145: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4148: 82 79                    a2 = u64 [a0]
  4150: ae a9 50                 jump @339 if a2 >=u a3
      :                          @331
  4153: 7b 7a                    u64 [a0] = a3
  4155: 33 0b 03                 a4 = 0x3
  4158: 95 7a 08                 a3 = a0 + 0x8
  4161: ac b8 41                 jump @338 if a1 <u a4
      :                          @332
  4164: 82 7b 10                 a4 = u64 [a0 + 0x10]
  4167: ae b9 3b                 jump @338 if a2 >=u a4
      :                          @333
  4170: 97 8c 03                 a5 = a1 << 0x3
  4173: c8 7c 02                 t0 = a5 + a0
  4176: 7b ab                    u64 [a3] = a4
  4178: 33 0c 03                 a5 = 0x3
  4181: 95 22 f8                 t0 = t0 + 0xfffffffffffffff8
  4184: aa c8 24                 jump @337 if a1 == a5
      :                          @334
  4187: 95 7a 10                 a3 = a0 + 0x10
  4190: 9a 87 03                 a0 = 0x3 - a1
  4193: 33 08 04                 a1 = 0x4
  4196: 33 0c 04                 a5 = 0x4
  4199: 01                       fallthrough
      :                          @335
  4200: 82 ab 08                 a4 = u64 [a3 + 0x8]
  4203: ae b9 17                 jump @338 if a2 >=u a4
      :                          @336
  4206: 7b ab                    u64 [a3] = a4
  4208: 95 cc 01                 a5 = a5 + 0x1
  4211: c8 c7 0b                 a4 = a0 + a5
  4214: 95 aa 08                 a3 = a3 + 0x8
  4217: ab 8b ef                 jump @335 if a4 != a1
      :                          @337
  4220: 64 2a                    a3 = t0
  4222: 7b a9                    u64 [a3] = a2
  4224: 32 00                    ret
      :                          @338
  4226: 7b a9                    u64 [a3] = a2
  4228: 32 00                    ret
      :                          @339
  4230: 32 00                    ret
      :                          @340
  4232: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4235: 82 79                    a2 = u64 [a0]
  4237: af 9a 50                 jump @349 if a3 >=s a2
      :                          @341
  4240: 7b 7a                    u64 [a0] = a3
  4242: 33 0b 03                 a4 = 0x3
  4245: 95 7a 08                 a3 = a0 + 0x8
  4248: ac b8 41                 jump @348 if a1 <u a4
      :                          @342
  4251: 82 7b 10                 a4 = u64 [a0 + 0x10]
  4254: af 9b 3b                 jump @348 if a4 >=s a2
      :                          @343
  4257: 97 8c 03                 a5 = a1 << 0x3
  4260: c8 7c 02                 t0 = a5 + a0
  4263: 7b ab                    u64 [a3] = a4
  4265: 33 0c 03                 a5 = 0x3
  4268: 95 22 f8                 t0 = t0 + 0xfffffffffffffff8
  4271: aa c8 24                 jump @347 if a1 == a5
      :                          @344
  4274: 95 7a 10                 a3 = a0 + 0x10
  4277: 9a 87 03                 a0 = 0x3 - a1
  4280: 33 08 04                 a1 = 0x4
  4283: 33 0c 04                 a5 = 0x4
  4286: 01                       fallthrough
      :                          @345
  4287: 82 ab 08                 a4 = u64 [a3 + 0x8]
  4290: af 9b 17                 jump @348 if a4 >=s a2
      :                          @346
  4293: 7b ab                    u64 [a3] = a4
  4295: 95 cc 01                 a5 = a5 + 0x1
  4298: c8 c7 0b                 a4 = a0 + a5
  4301: 95 aa 08                 a3 = a3 + 0x8
  4304: ab 8b ef                 jump @345 if a4 != a1
      :                          @347
  4307: 64 2a                    a3 = t0
  4309: 7b a9                    u64 [a3] = a2
  4311: 32 00                    ret
      :                          @348
  4313: 7b a9                    u64 [a3] = a2
  4315: 32 00                    ret
      :                          @349
  4317: 32 00                    ret
      :                          @350
  4319: 95 11 60 fe              sp = sp + 0xfffffffffffffe60
  4323: 7b 10 98 01              u64 [sp + 0x198] = ra
  4327: 7b 15 90 01              u64 [sp + 0x190] = s0
  4331: 7b 16 88 01              u64 [sp + 0x188] = s1
  4335: 33 0b 15                 a4 = 0x15
  4338: 7b 1a 48                 u64 [sp + 0x48] = a3
  4341: 7b 19 58                 u64 [sp + 0x58] = a2
  4344: 64 80                    ra = a1
  4346: ae b8 2b                 jump @355 if a1 >=u a4
      :                          @351
  4349: 64 72                    t0 = a0
  4351: 01                       fallthrough
      :                          @352
  4352: 33 07 01                 a0 = 0x1
  4355: ae 07 10                 jump @354 if a0 >=u ra
      :                          @353
  4358: 33 09 01                 a2 = 0x1
  4361: 64 27                    a0 = t0
  4363: 64 08                    a1 = ra
  4365: 50 20 be 00 cb fe        ra = 190, jump @317
      :                          @354 [@dyn 95]
  4371: 82 10 98 01              ra = u64 [sp + 0x198]
  4375: 82 15 90 01              s0 = u64 [sp + 0x190]
  4379: 82 16 88 01              s1 = u64 [sp + 0x188]
  4383: 95 11 a0 01              sp = sp + 0x1a0
  4387: 32 00                    ret
      :                          @355
  4389: 7b 17 08                 u64 [sp + 0x8] = a0
  4392: 49 11 78 01              u64 [sp + 120] = 0x1
  4396: 33 05 01 01              s0 = 0x101
  4400: 33 07 01                 a0 = 0x1
  4403: 7b 10                    u64 [sp] = ra
  4405: 01                       fallthrough
      :                          @356
  4406: 82 18 78                 a1 = u64 [sp + 0x78]
  4409: d2 87 07                 a0 = a0 & a1
  4412: 7b 17 70                 u64 [sp + 0x70] = a0
  4415: 82 12 08                 t0 = u64 [sp + 0x8]
  4418: 01                       fallthrough
      :                          @357
  4419: 81 17 48                 a0 = i32 [sp + 0x48]
  4422: 51 07 b6 05              jump @453 if a0 == 0
      :                          @358
  4426: 82 17 78                 a0 = u64 [sp + 0x78]
  4429: 84 77 01                 a0 = a0 & 0x1
  4432: 7b 12 80 00              u64 [sp + 0x80] = t0
  4436: 51 07 74 02              jump @398 if a0 == 0
      :                          @359
  4440: 98 0b 02                 a4 = ra >> 0x2
  4443: 97 b6 01                 s1 = a4 << 0x1
  4446: c8 b6 03                 t1 = s1 + a4
  4449: 54 10 31 29              jump @362 if ra <=u 49
      :                          @360
  4453: 95 b5 ff                 s0 = a4 + 0xffffffffffffffff
  4456: 97 b7 03                 a0 = a4 << 0x3
  4459: c8 27 07                 a0 = a0 + t0
  4462: 97 58 03                 a1 = s0 << 0x3
  4465: c8 28 08                 a1 = a1 + t0
  4468: 82 79                    a2 = u64 [a0]
  4470: 82 88                    a1 = u64 [a1]
  4472: af 89 17                 jump @363 if a2 >=s a1
      :                          @361
  4475: 49 11 28 01              u64 [sp + 40] = 0x1
  4479: 64 94                    t2 = a2
  4481: 7b 15 50                 u64 [sp + 0x50] = s0
  4484: 64 b5                    s0 = a4
  4486: 64 89                    a2 = a1
  4488: 28 10                    jump @364
      :                          @362
  4490: 33 09                    a2 = 0
  4492: 28 1e 01                 jump @371
      :                          @363
  4495: 49 11 28                 u64 [sp + 40] = 0
  4498: 64 84                    t2 = a1
  4500: 7b 1b 50                 u64 [sp + 0x50] = a4
  4503: 01                       fallthrough
      :                          @364
  4504: 95 b8 01                 a1 = a4 + 0x1
  4507: 7b 18 40                 u64 [sp + 0x40] = a1
  4510: 97 88 03                 a1 = a1 << 0x3
  4513: 82 1b 80 00              a4 = u64 [sp + 0x80]
  4517: c8 b8 08                 a1 = a1 + a4
  4520: 82 87                    a0 = u64 [a1]
  4522: d9 97 02                 t0 = a0 <s a2
  4525: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
  4528: 97 68 03                 a1 = s1 << 0x3
  4531: c8 b8 08                 a1 = a1 + a4
  4534: 97 ac 03                 a5 = a3 << 0x3
  4537: c8 cb 0b                 a4 = a4 + a5
  4540: 82 8c                    a5 = u64 [a1]
  4542: 82 b8                    a1 = u64 [a4]
  4544: e5 97 07                 a0 = mins(a0, a2)
  4547: d9 47 09                 a2 = a0 <s t2
  4550: 7b 12 38                 u64 [sp + 0x38] = t0
  4553: 82 17 28                 a0 = u64 [sp + 0x28]
  4556: c8 27 07                 a0 = a0 + t0
  4559: c8 97 07                 a0 = a0 + a2
  4562: 7b 10 68                 u64 [sp + 0x68] = ra
  4565: 7b 15 60                 u64 [sp + 0x60] = s0
  4568: 7b 19 30                 u64 [sp + 0x30] = a2
  4571: af 8c 13                 jump @366 if a5 >=s a1
      :                          @365
  4574: 95 77 01                 a0 = a0 + 0x1
  4577: 7b 17 18                 u64 [sp + 0x18] = a0
  4580: 7b 1c 20                 u64 [sp + 0x20] = a5
  4583: 7b 1a 28                 u64 [sp + 0x28] = a3
  4586: 64 6a                    a3 = s1
  4588: 28 0e                    jump @367
      :                          @366
  4590: 7b 18 20                 u64 [sp + 0x20] = a1
  4593: 7b 16 28                 u64 [sp + 0x28] = s1
  4596: 64 c8                    a1 = a5
  4598: 7b 17 18                 u64 [sp + 0x18] = a0
  4601: 01                       fallthrough
      :                          @367
  4602: 86 66 01                 s1 = s1 | 0x1
  4605: 97 6b 03                 a4 = s1 << 0x3
  4608: 82 15 80 00              s0 = u64 [sp + 0x80]
  4612: c8 5b 0b                 a4 = a4 + s0
  4615: 82 bb                    a4 = u64 [a4]
  4617: d9 8b 07                 a0 = a4 <s a1
  4620: 95 34 ff                 t2 = t1 + 0xffffffffffffffff
  4623: 97 39 03                 a2 = t1 << 0x3
  4626: c8 59 09                 a2 = a2 + s0
  4629: 97 4c 03                 a5 = t2 << 0x3
  4632: c8 5c 0c                 a5 = a5 + s0
  4635: 82 92                    t0 = u64 [a2]
  4637: 82 c0                    ra = u64 [a5]
  4639: e5 8b 08                 a1 = mins(a4, a1)
  4642: 82 19 20                 a2 = u64 [sp + 0x20]
  4645: d9 98 09                 a2 = a1 <s a2
  4648: 7b 17 20                 u64 [sp + 0x20] = a0
  4651: 82 18 18                 a1 = u64 [sp + 0x18]
  4654: c8 87 07                 a0 = a0 + a1
  4657: c8 97 07                 a0 = a0 + a2
  4660: af 02 12                 jump @369 if t0 >=s ra
      :                          @368
  4663: 95 77 01                 a0 = a0 + 0x1
  4666: 7b 17 18                 u64 [sp + 0x18] = a0
  4669: 7b 12 10                 u64 [sp + 0x10] = t0
  4672: 64 47                    a0 = t2
  4674: 64 34                    t2 = t1
  4676: 28 0d                    jump @370
      :                          @369
  4678: 7b 10 10                 u64 [sp + 0x10] = ra
  4681: 7b 17 18                 u64 [sp + 0x18] = a0
  4684: 64 37                    a0 = t1
  4686: 64 20                    ra = t0
  4688: 01                       fallthrough
      :                          @370
  4689: 82 15 60                 s0 = u64 [sp + 0x60]
  4692: 82 1c 50                 a5 = u64 [sp + 0x50]
  4695: 82 18 40                 a1 = u64 [sp + 0x40]
  4698: 82 1b 38                 a4 = u64 [sp + 0x38]
  4701: da bc 08                 a1 = a5 if a4 == 0
  4704: 95 33 01                 t1 = t1 + 0x1
  4707: 97 3c 03                 a5 = t1 << 0x3
  4710: 82 12 80 00              t0 = u64 [sp + 0x80]
  4714: c8 2c 0c                 a5 = a5 + t0
  4717: 82 cc                    a5 = u64 [a5]
  4719: 82 1b 30                 a4 = u64 [sp + 0x30]
  4722: da b8 05                 s0 = a1 if a4 == 0
  4725: 82 18 28                 a1 = u64 [sp + 0x28]
  4728: 82 1b 20                 a4 = u64 [sp + 0x20]
  4731: da b8 06                 s1 = a1 if a4 == 0
  4734: da 96 0a                 a3 = s1 if a2 == 0
  4737: d9 0c 09                 a2 = a5 <s ra
  4740: db 93 07                 a0 = t1 if a2 != 0
  4743: e5 0c 0c                 a5 = mins(a5, ra)
  4746: 82 18 10                 a1 = u64 [sp + 0x10]
  4749: d9 8c 08                 a1 = a5 <s a1
  4752: db 84 07                 a0 = t2 if a1 != 0
  4755: c8 98 08                 a1 = a1 + a2
  4758: 82 19 18                 a2 = u64 [sp + 0x18]
  4761: c8 89 09                 a2 = a2 + a1
  4764: 64 73                    t1 = a0
  4766: 64 a6                    s1 = a3
  4768: 64 5b                    a4 = s0
  4770: 82 10 68                 ra = u64 [sp + 0x68]
  4773: 33 05 01 01              s0 = 0x101
  4777: 01                       fallthrough
      :                          @371
  4778: 97 67 03                 a0 = s1 << 0x3
  4781: c8 27 07                 a0 = a0 + t0
  4784: 97 b8 03                 a1 = a4 << 0x3
  4787: c8 82 0a                 a3 = t0 + a1
  4790: 82 78                    a1 = u64 [a0]
  4792: 82 a7                    a0 = u64 [a3]
  4794: af 78 0c                 jump @373 if a1 >=s a0
      :                          @372
  4797: 95 99 01                 a2 = a2 + 0x1
  4800: 64 8c                    a5 = a1
  4802: 64 ba                    a3 = a4
  4804: 28 0b                    jump @374
      :                          @373
  4806: 64 7c                    a5 = a0
  4808: 64 6a                    a3 = s1
  4810: 64 b6                    s1 = a4
  4812: 64 87                    a0 = a1
  4814: 01                       fallthrough
      :                          @374
  4815: 97 38 03                 a1 = t1 << 0x3
  4818: c8 28 08                 a1 = a1 + t0
  4821: 82 8b                    a4 = u64 [a1]
  4823: d9 7b 08                 a1 = a4 <s a0
  4826: e5 7b 07                 a0 = mins(a4, a0)
  4829: c8 89 09                 a2 = a2 + a1
  4832: af c7 09                 jump @377 if a0 >=s a5
      :                          @375
  4835: 55 19 0b 1a              jump @379 if a2 >=u 11
      :                          @376
  4839: 28 49                    jump @382
      :                          @377
  4841: da 8a 03                 t1 = a3 if a1 == 0
  4844: 64 36                    s1 = t1
  4846: 88 97 01                 a0 = a2 <u 0x1
  4849: 82 18 70                 a1 = u64 [sp + 0x70]
  4852: d2 87 07                 a0 = a0 & a1
  4855: 51 07 39                 jump @382 if a0 == 0
      :                          @378
  4858: 28 f0 00                 jump @400
      :                          @379
  4861: 98 07 01                 a0 = ra >> 0x1
  4864: 97 08 03                 a1 = ra << 0x3
  4867: c8 28 08                 a1 = a1 + t0
  4870: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  4873: 64 29                    a2 = t0
  4875: 01                       fallthrough
      :                          @380
  4876: 82 8a                    a3 = u64 [a1]
  4878: 82 9b                    a4 = u64 [a2]
  4880: 7b 9a                    u64 [a2] = a3
  4882: 7b 8b                    u64 [a1] = a4
  4884: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  4887: 95 99 08                 a2 = a2 + 0x8
  4890: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  4893: 52 07 ef                 jump @380 if a0 != 0
      :                          @381
  4896: 85 66 ff                 s1 = s1 ^ 0xffffffffffffffff
  4899: c8 06 06                 s1 = s1 + ra
  4902: 82 18 70                 a1 = u64 [sp + 0x70]
  4905: 84 87 01                 a0 = a1 & 0x1
  4908: 52 07 be 00              jump @400 if a0 != 0
      :                          @382
  4912: 97 67 03                 a0 = s1 << 0x3
  4915: 82 18 58                 a1 = u64 [sp + 0x58]
  4918: 51 08 d1 00              jump @403 if a1 == 0
      :                          @383
  4922: ae 06 d3 03              jump @455 if s1 >=u ra
      :                          @384
  4926: c8 72 08                 a1 = t0 + a0
  4929: 82 19 58                 a2 = u64 [sp + 0x58]
  4932: 82 9a                    a3 = u64 [a2]
  4934: 82 89                    a2 = u64 [a1]
  4936: ad 9a c3 00              jump @404 if a3 <s a2
      :                          @385
  4940: 82 27                    a0 = u64 [t0]
  4942: 7b 29                    u64 [t0] = a2
  4944: 7b 87                    u64 [a1] = a0
  4946: 82 28                    a1 = u64 [t0]
  4948: 33 07                    a0 = 0
  4950: 95 29 08                 a2 = t0 + 0x8
  4953: 95 0a ff                 a3 = ra + 0xffffffffffffffff
  4956: 54 0a 22                 jump @390 if a3 <=u 0
      :                          @386
  4959: 97 7b 03                 a4 = a0 << 0x3
  4962: c8 9b 0b                 a4 = a4 + a2
  4965: 01                       fallthrough
      :                          @387
  4966: 82 bc                    a5 = u64 [a4]
  4968: ad c8 16                 jump @390 if a1 <s a5
      :                          @388
  4971: 95 77 01                 a0 = a0 + 0x1
  4974: 95 bb 08                 a4 = a4 + 0x8
  4977: ab 7a f5                 jump @387 if a3 != a0
      :                          @389
  4980: 64 a7                    a0 = a3
  4982: 97 ab 03                 a4 = a3 << 0x3
  4985: c8 9b 0b                 a4 = a4 + a2
  4988: 28 09                    jump @391
      :                          @390
  4990: 97 ab 03                 a4 = a3 << 0x3
  4993: c8 9b 0b                 a4 = a4 + a2
  4996: 01                       fallthrough
      :                          @391
  4997: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  5000: ae a7 26                 jump @395 if a0 >=u a3
      :                          @392
  5003: 82 b6 f8                 s1 = u64 [a4 + 0xfffffffffffffff8]
  5006: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
  5009: 64 cb                    a4 = a5
  5011: ad 68 f2                 jump @391 if a1 <s s1
      :                          @393
  5014: 97 7b 03                 a4 = a0 << 0x3
  5017: c8 9b 0b                 a4 = a4 + a2
  5020: 82 b5                    s0 = u64 [a4]
  5022: 7b b6                    u64 [a4] = s1
  5024: 7b c5                    u64 [a5] = s0
  5026: 33 05 01 01              s0 = 0x101
  5030: 95 77 01                 a0 = a0 + 0x1
  5033: ac a7 b6                 jump @386 if a0 <u a3
      :                          @394
  5036: 28 d2                    jump @390
      :                          @395
  5038: 95 77 01                 a0 = a0 + 0x1
  5041: 7b 28                    u64 [t0] = a1
  5043: ac 70 5c 03              jump @457 if ra <u a0
      :                          @396
  5047: c9 70 00                 ra = ra - a0
  5050: 97 77 03                 a0 = a0 << 0x3
  5053: c8 72 02                 t0 = t0 + a0
  5056: 55 10 15 83 fd           jump @357 if ra >=u 21
      :                          @397
  5061: 28 3b fd                 jump @352
      :                          @398
  5064: 64 27                    a0 = t0
  5066: 64 08                    a1 = ra
  5068: 64 05                    s0 = ra
  5070: 50 20 c0 00 42 f5        ra = 192, jump @131
      :                          @399 [@dyn 96]
  5076: 82 12 80 00              t0 = u64 [sp + 0x80]
  5080: 64 50                    ra = s0
  5082: 33 05 01 01              s0 = 0x101
  5086: 82 17 48                 a0 = u64 [sp + 0x48]
  5089: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
  5092: 7b 17 48                 u64 [sp + 0x48] = a0
  5095: 28 71 fd                 jump @359
      :                          @400
  5098: 64 27                    a0 = t0
  5100: 64 08                    a1 = ra
  5102: 64 05                    s0 = ra
  5104: 50 20 c2 00 93 f8        ra = 194, jump @216
      :                          @401 [@dyn 97]
  5110: 82 12 80 00              t0 = u64 [sp + 0x80]
  5114: 64 50                    ra = s0
  5116: 33 05 01 01              s0 = 0x101
  5120: 51 07 30 ff              jump @382 if a0 == 0
      :                          @402
  5124: 28 0f fd                 jump @354
      :                          @403
  5127: 82 18                    a1 = u64 [sp]
  5129: 28 08                    jump @405
      :                          @404
  5131: 7b 12 08                 u64 [sp + 0x8] = t0
  5134: 64 08                    a1 = ra
  5136: 01                       fallthrough
      :                          @405
  5137: ae 86 fd 02              jump @456 if s1 >=u a1
      :                          @406
  5141: 82 1b 08                 a4 = u64 [sp + 0x8]
  5144: c8 b7 07                 a0 = a0 + a4
  5147: 82 7a                    a3 = u64 [a0]
  5149: 82 b9                    a2 = u64 [a4]
  5151: 7b ba                    u64 [a4] = a3
  5153: 7b 79                    u64 [a0] = a2
  5155: 82 b0                    ra = u64 [a4]
  5157: 33 09                    a2 = 0
  5159: 95 b2 08                 t0 = a4 + 0x8
  5162: 7b 18                    u64 [sp] = a1
  5164: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  5167: 64 27                    a0 = t0
  5169: 01                       fallthrough
      :                          @407
  5170: 82 7a                    a3 = u64 [a0]
  5172: af 0a 0f                 jump @410 if a3 >=s ra
      :                          @408
  5175: 95 99 01                 a2 = a2 + 0x1
  5178: 95 77 08                 a0 = a0 + 0x8
  5181: ab 98 f5                 jump @407 if a1 != a2
      :                          @409
  5184: 64 89                    a2 = a1
  5186: 01                       fallthrough
      :                          @410
  5187: 82 17                    a0 = u64 [sp]
  5189: 97 77 03                 a0 = a0 << 0x3
  5192: 82 1a 08                 a3 = u64 [sp + 0x8]
  5195: c8 a7 07                 a0 = a0 + a3
  5198: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
  5201: 01                       fallthrough
      :                          @411
  5202: 64 8b                    a4 = a1
  5204: ae 89 0e                 jump @413 if a2 >=u a1
      :                          @412
  5207: 82 a7                    a0 = u64 [a3]
  5209: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  5212: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
  5215: af 07 f3                 jump @411 if a0 >=s ra
      :                          @413
  5218: 64 b8                    a1 = a4
  5220: ac 9b ac 02              jump @458 if a4 <u a2
      :                          @414
  5224: 33 0b                    a4 = 0
  5226: 33 0c                    a5 = 0
  5228: 33 06                    s1 = 0
  5230: 33 03                    t1 = 0
  5232: 7b 19 40                 u64 [sp + 0x40] = a2
  5235: 97 97 03                 a0 = a2 << 0x3
  5238: c8 72 09                 a2 = t0 + a0
  5241: 7b 18 30                 u64 [sp + 0x30] = a1
  5244: 97 87 03                 a0 = a1 << 0x3
  5247: c8 72 08                 a1 = t0 + a0
  5250: 33 04 80 00              t2 = 0x80
  5254: 7b 19 38                 u64 [sp + 0x38] = a2
  5257: 64 9a                    a3 = a2
  5259: 33 02 80 00              t0 = 0x80
  5263: 7b 10 50                 u64 [sp + 0x50] = ra
  5266: 28 42                    jump @417
      :                          @415
  5268: 97 00 03                 ra = ra << 0x3
  5271: c8 80 00                 ra = ra + a1
  5274: 82 17 60                 a0 = u64 [sp + 0x60]
  5277: 7b 07                    u64 [ra] = a0
  5279: 95 bb 01                 a4 = a4 + 0x1
  5282: 95 66 01                 s1 = s1 + 0x1
  5285: 82 10 50                 ra = u64 [sp + 0x50]
  5288: 82 14 68                 t2 = u64 [sp + 0x68]
  5291: 01                       fallthrough
      :                          @416
  5292: d3 cb 07                 a0 = a4 ^ a5
  5295: 64 49                    a2 = t2
  5297: 94 79                    a2 = 0 if a0 != 0
  5299: 97 99 03                 a2 = a2 << 0x3
  5302: c8 9a 0a                 a3 = a3 + a2
  5305: d3 36 07                 a0 = s1 ^ t1
  5308: 82 12 70                 t0 = u64 [sp + 0x70]
  5311: 9a 29                    a2 = -t0
  5313: 94 79                    a2 = 0 if a0 != 0
  5315: 97 99 03                 a2 = a2 << 0x3
  5318: c8 98 08                 a1 = a1 + a2
  5321: 33 05 01 01              s0 = 0x101
  5325: 82 17 78                 a0 = u64 [sp + 0x78]
  5328: ac 57 3e 01              jump @439 if a0 <u s0
      :                          @417
  5332: c9 a8 07                 a0 = a1 - a3
  5335: 98 79 03                 a2 = a0 >> 0x3
  5338: 7b 1a 80 00              u64 [sp + 0x80] = a3
  5342: 7b 19 78                 u64 [sp + 0x78] = a2
  5345: ac 59 38                 jump @424 if a2 <u s0
      :                          @418
  5348: aa cb 71                 jump @428 if a4 == a5
      :                          @419
  5351: ab 36 b4 00              jump @435 if s1 != t1
      :                          @420
  5355: 51 02 9a 00              jump @433 if t0 == 0
      :                          @421
  5359: 33 07                    a0 = 0
  5361: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  5364: 95 16 08 01              s1 = sp + 0x108
  5368: 95 13 08 01              t1 = sp + 0x108
  5372: 01                       fallthrough
      :                          @422
  5373: 82 a9                    a2 = u64 [a3]
  5375: 78 37                    u8 [t1] = a0
  5377: 95 75 01                 s0 = a0 + 0x1
  5380: d9 09 07                 a0 = a2 <s ra
  5383: c8 73 03                 t1 = t1 + a0
  5386: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
  5389: 64 57                    a0 = s0
  5391: ab 52 ee                 jump @422 if t0 != s0
      :                          @423
  5394: 82 1a 80 00              a3 = u64 [sp + 0x80]
  5398: 28 85 00                 jump @435
      :                          @424
  5401: 64 25                    s0 = t0
  5403: 64 49                    a2 = t2
  5405: d8 cb 04                 t2 = a4 <u a5
  5408: d8 36 0a                 a3 = s1 <u t1
  5411: d4 a4 02                 t0 = t2 | a3
  5414: 51 02 1f                 jump @427 if t0 == 0
      :                          @425
  5417: 82 1a 78                 a3 = u64 [sp + 0x78]
  5420: 95 a7 80                 a0 = a3 + 0xffffffffffffff80
  5423: db 47 05                 s0 = a0 if t2 != 0
  5426: da 2a 07                 a0 = a3 if t0 == 0
  5429: 64 52                    t0 = s0
  5431: da 47 09                 a2 = a0 if t2 == 0
  5434: 64 94                    t2 = a2
  5436: 82 1a 80 00              a3 = u64 [sp + 0x80]
  5440: ab cb a7                 jump @419 if a4 != a5
      :                          @426
  5443: 28 12                    jump @428
      :                          @427
  5445: 98 74 04                 t2 = a0 >> 0x4
  5448: 82 17 78                 a0 = u64 [sp + 0x78]
  5451: c9 47 02                 t0 = a0 - t2
  5454: 82 1a 80 00              a3 = u64 [sp + 0x80]
  5458: ab cb 95                 jump @419 if a4 != a5
      :                          @428
  5461: 51 04 3a                 jump @434 if t2 == 0
      :                          @429
  5464: 33 07                    a0 = 0
  5466: 95 1b 88 00              a4 = sp + 0x88
  5470: 95 1c 88 00              a5 = sp + 0x88
  5474: 01                       fallthrough
      :                          @430
  5475: 82 a5                    s0 = u64 [a3]
  5477: 78 c7                    u8 [a5] = a0
  5479: 95 79 01                 a2 = a0 + 0x1
  5482: d9 05 07                 a0 = s0 <s ra
  5485: 85 77 01                 a0 = a0 ^ 0x1
  5488: c8 7c 0c                 a5 = a5 + a0
  5491: 95 aa 08                 a3 = a3 + 0x8
  5494: 64 97                    a0 = a2
  5496: ab 94 eb                 jump @430 if t2 != a2
      :                          @431
  5499: 82 1a 80 00              a3 = u64 [sp + 0x80]
  5503: ab 36 1c                 jump @435 if s1 != t1
      :                          @432
  5506: 28 69 ff                 jump @420
      :                          @433
  5509: 95 16 08 01              s1 = sp + 0x108
  5513: 95 13 08 01              t1 = sp + 0x108
  5517: 28 0e                    jump @435
      :                          @434
  5519: 95 1b 88 00              a4 = sp + 0x88
  5523: 95 1c 88 00              a5 = sp + 0x88
  5527: aa 36 54 ff              jump @420 if s1 == t1
      :                          @435
  5531: 7b 12 70                 u64 [sp + 0x70] = t0
  5534: c9 bc 07                 a0 = a5 - a4
  5537: c9 63 09                 a2 = t1 - s1
  5540: e6 97 02                 t0 = minu(a0, a2)
  5543: 51 02 05 ff              jump @416 if t0 == 0
      :                          @436
  5547: 7b 14 68                 u64 [sp + 0x68] = t2
  5550: 7c b7                    a0 = u8 [a4]
  5552: 7c 64                    t2 = u8 [s1]
  5554: 97 77 03                 a0 = a0 << 0x3
  5557: c8 a7 07                 a0 = a0 + a3
  5560: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
  5563: 97 09 03                 a2 = ra << 0x3
  5566: c8 89 09                 a2 = a2 + a1
  5569: 82 99                    a2 = u64 [a2]
  5571: 82 75                    s0 = u64 [a0]
  5573: 7b 15 60                 u64 [sp + 0x60] = s0
  5576: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  5579: 7b 79                    u64 [a0] = a2
  5581: 51 02 c7 fe              jump @415 if t0 == 0
      :                          @437
  5585: 7c b7 01                 a0 = u8 [a4 + 0x1]
  5588: 97 77 03                 a0 = a0 << 0x3
  5591: c8 a7 07                 a0 = a0 + a3
  5594: 85 49 ff                 a2 = t2 ^ 0xffffffffffffffff
  5597: 82 7a                    a3 = u64 [a0]
  5599: 97 99 03                 a2 = a2 << 0x3
  5602: 86 99 00 f8              a2 = a2 | 0xfffffffffffff800
  5606: c8 89 09                 a2 = a2 + a1
  5609: 7b 9a                    u64 [a2] = a3
  5611: 82 1a 80 00              a3 = u64 [sp + 0x80]
  5615: 7c 64 01                 t2 = u8 [s1 + 0x1]
  5618: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
  5621: 97 09 03                 a2 = ra << 0x3
  5624: c8 89 09                 a2 = a2 + a1
  5627: 82 99                    a2 = u64 [a2]
  5629: 95 bb 01                 a4 = a4 + 0x1
  5632: 95 66 01                 s1 = s1 + 0x1
  5635: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  5638: 7b 79                    u64 [a0] = a2
  5640: 52 02 c9                 jump @437 if t0 != 0
      :                          @438
  5643: 28 89 fe                 jump @415
      :                          @439
  5646: ae cb 2b                 jump @443 if a4 >=u a5
      :                          @440
  5649: 82 12 08                 t0 = u64 [sp + 0x8]
  5652: 64 a3                    t1 = a3
  5654: 01                       fallthrough
      :                          @441
  5655: 7c c7 ff                 a0 = u8 [a5 + 0xffffffffffffffff]
  5658: 97 77 03                 a0 = a0 << 0x3
  5661: c8 37 07                 a0 = a0 + t1
  5664: 82 85 f8                 s0 = u64 [a1 + 0xfffffffffffffff8]
  5667: 82 79                    a2 = u64 [a0]
  5669: 95 c6 ff                 s1 = a5 + 0xffffffffffffffff
  5672: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  5675: 7b 75                    u64 [a0] = s0
  5677: 7b 89 f8                 u64 [a1 + 0xfffffffffffffff8] = a2
  5680: 64 a8                    a1 = a3
  5682: 64 6c                    a5 = s1
  5684: ac 6b e3                 jump @441 if a4 <u s1
      :                          @442
  5687: 28 27                    jump @445
      :                          @443
  5689: 82 12 08                 t0 = u64 [sp + 0x8]
  5692: ae 36 22                 jump @445 if s1 >=u t1
      :                          @444
  5695: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
  5698: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
  5701: 97 77 03                 a0 = a0 << 0x3
  5704: c8 87 07                 a0 = a0 + a1
  5707: 82 79                    a2 = u64 [a0]
  5709: 82 ab                    a4 = u64 [a3]
  5711: 95 3c ff                 a5 = t1 + 0xffffffffffffffff
  5714: 7b a9                    u64 [a3] = a2
  5716: 7b 7b                    u64 [a0] = a4
  5718: 95 aa 08                 a3 = a3 + 0x8
  5721: 64 c3                    t1 = a5
  5723: ac c6 e4                 jump @444 if s1 <u a5
      :                          @445
  5726: 82 17 38                 a0 = u64 [sp + 0x38]
  5729: c9 7a 07                 a0 = a3 - a0
  5732: 98 77 03                 a0 = a0 >> 0x3
  5735: 82 16 40                 s1 = u64 [sp + 0x40]
  5738: c8 76 06                 s1 = s1 + a0
  5741: 7b 20                    u64 [t0] = ra
  5743: 82 18                    a1 = u64 [sp]
  5745: ae 86 9d 00              jump @456 if s1 >=u a1
      :                          @446
  5749: 97 67 03                 a0 = s1 << 0x3
  5752: c8 72 09                 a2 = t0 + a0
  5755: 82 97                    a0 = u64 [a2]
  5757: 7b 27                    u64 [t0] = a0
  5759: 7b 90                    u64 [a2] = ra
  5761: 64 25                    s0 = t0
  5763: c9 68 08                 a1 = a1 - s1
  5766: 7b 18 80 00              u64 [sp + 0x80] = a1
  5770: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
  5773: 95 97 08                 a0 = a2 + 0x8
  5776: ae b6 28                 jump @449 if s1 >=u a4
      :                          @447
  5779: 7b 17 78                 u64 [sp + 0x78] = a0
  5782: 64 57                    a0 = s0
  5784: 64 68                    a1 = s1
  5786: 7b 19 70                 u64 [sp + 0x70] = a2
  5789: 82 19 58                 a2 = u64 [sp + 0x58]
  5792: 82 1a 48                 a3 = u64 [sp + 0x48]
  5795: 64 b5                    s0 = a4
  5797: 50 20 c4 00 3a fa        ra = 196, jump @350
      :                          @448 [@dyn 98]
  5803: 64 50                    ra = s0
  5805: 82 17 70                 a0 = u64 [sp + 0x70]
  5808: 7b 17 58                 u64 [sp + 0x58] = a0
  5811: 82 15 78                 s0 = u64 [sp + 0x78]
  5814: 28 10                    jump @451
      :                          @449
  5816: 64 b8                    a1 = a4
  5818: 82 1a 48                 a3 = u64 [sp + 0x48]
  5821: 50 20 c6 00 22 fa        ra = 198, jump @350
      :                          @450 [@dyn 99]
  5827: 64 60                    ra = s1
  5829: 01                       fallthrough
      :                          @451
  5830: 82 17 40                 a0 = u64 [sp + 0x40]
  5833: 82 18 30                 a1 = u64 [sp + 0x30]
  5836: d8 87 07                 a0 = a0 <u a1
  5839: 85 77 01                 a0 = a0 ^ 0x1
  5842: 82 18 80 00              a1 = u64 [sp + 0x80]
  5846: e6 86 08                 a1 = minu(s1, a1)
  5849: 82 19                    a2 = u64 [sp]
  5851: 98 99 03                 a2 = a2 >> 0x3
  5854: d8 98 08                 a1 = a1 <u a2
  5857: 85 88 01                 a1 = a1 ^ 0x1
  5860: 7b 18 78                 u64 [sp + 0x78] = a1
  5863: 7b 10                    u64 [sp] = ra
  5865: 7b 15 08                 u64 [sp + 0x8] = s0
  5868: 64 52                    t0 = s0
  5870: 33 08 15                 a1 = 0x15
  5873: 33 05 01 01              s0 = 0x101
  5877: ae 80 41 fa              jump @356 if ra >=u a1
      :                          @452
  5881: 28 07 fa                 jump @352
      :                          @453
  5884: 64 27                    a0 = t0
  5886: 64 08                    a1 = ra
  5888: 33 00 c8 00              ra = 0xc8
  5892: 98 82 01                 t0 = a1 >> 0x1
  5895: 28 18 07                 jump @597
      :                          @454 [@dyn 100]
  5898: 28 09 fa                 jump @354
      :                          @455
  5901: 00                       trap
      :                          @456
  5902: 00                       trap
      :                          @457
  5903: 00                       trap
      :                          @458
  5904: 00                       trap
      :                          @459
  5905: 95 11 60 fe              sp = sp + 0xfffffffffffffe60
  5909: 7b 10 98 01              u64 [sp + 0x198] = ra
  5913: 7b 15 90 01              u64 [sp + 0x190] = s0
  5917: 7b 16 88 01              u64 [sp + 0x188] = s1
  5921: 33 0b 15                 a4 = 0x15
  5924: 7b 1a 48                 u64 [sp + 0x48] = a3
  5927: 7b 19 58                 u64 [sp + 0x58] = a2
  5930: 64 80                    ra = a1
  5932: ae b8 2b                 jump @464 if a1 >=u a4
      :                          @460
  5935: 64 72                    t0 = a0
  5937: 01                       fallthrough
      :                          @461
  5938: 33 07 01                 a0 = 0x1
  5941: ae 07 10                 jump @463 if a0 >=u ra
      :                          @462
  5944: 33 09 01                 a2 = 0x1
  5947: 64 27                    a0 = t0
  5949: 64 08                    a1 = ra
  5951: 50 20 ca 00 e7 f7        ra = 202, jump @291
      :                          @463 [@dyn 101]
  5957: 82 10 98 01              ra = u64 [sp + 0x198]
  5961: 82 15 90 01              s0 = u64 [sp + 0x190]
  5965: 82 16 88 01              s1 = u64 [sp + 0x188]
  5969: 95 11 a0 01              sp = sp + 0x1a0
  5973: 32 00                    ret
      :                          @464
  5975: 7b 17 08                 u64 [sp + 0x8] = a0
  5978: 49 11 78 01              u64 [sp + 120] = 0x1
  5982: 33 05 01 01              s0 = 0x101
  5986: 33 07 01                 a0 = 0x1
  5989: 7b 10                    u64 [sp] = ra
  5991: 01                       fallthrough
      :                          @465
  5992: 82 18 78                 a1 = u64 [sp + 0x78]
  5995: d2 87 07                 a0 = a0 & a1
  5998: 7b 17 70                 u64 [sp + 0x70] = a0
  6001: 82 12 08                 t0 = u64 [sp + 0x8]
  6004: 01                       fallthrough
      :                          @466
  6005: 81 17 48                 a0 = i32 [sp + 0x48]
  6008: 51 07 b6 05              jump @562 if a0 == 0
      :                          @467
  6012: 82 17 78                 a0 = u64 [sp + 0x78]
  6015: 84 77 01                 a0 = a0 & 0x1
  6018: 7b 12 80 00              u64 [sp + 0x80] = t0
  6022: 51 07 74 02              jump @507 if a0 == 0
      :                          @468
  6026: 98 0b 02                 a4 = ra >> 0x2
  6029: 97 b6 01                 s1 = a4 << 0x1
  6032: c8 b6 03                 t1 = s1 + a4
  6035: 54 10 31 29              jump @471 if ra <=u 49
      :                          @469
  6039: 95 b5 ff                 s0 = a4 + 0xffffffffffffffff
  6042: 97 b7 03                 a0 = a4 << 0x3
  6045: c8 27 07                 a0 = a0 + t0
  6048: 97 58 03                 a1 = s0 << 0x3
  6051: c8 28 08                 a1 = a1 + t0
  6054: 82 79                    a2 = u64 [a0]
  6056: 82 88                    a1 = u64 [a1]
  6058: ae 98 17                 jump @472 if a1 >=u a2
      :                          @470
  6061: 49 11 28 01              u64 [sp + 40] = 0x1
  6065: 64 94                    t2 = a2
  6067: 7b 15 50                 u64 [sp + 0x50] = s0
  6070: 64 b5                    s0 = a4
  6072: 64 89                    a2 = a1
  6074: 28 10                    jump @473
      :                          @471
  6076: 33 09                    a2 = 0
  6078: 28 1e 01                 jump @480
      :                          @472
  6081: 49 11 28                 u64 [sp + 40] = 0
  6084: 64 84                    t2 = a1
  6086: 7b 1b 50                 u64 [sp + 0x50] = a4
  6089: 01                       fallthrough
      :                          @473
  6090: 95 b8 01                 a1 = a4 + 0x1
  6093: 7b 18 40                 u64 [sp + 0x40] = a1
  6096: 97 88 03                 a1 = a1 << 0x3
  6099: 82 1b 80 00              a4 = u64 [sp + 0x80]
  6103: c8 b8 08                 a1 = a1 + a4
  6106: 82 87                    a0 = u64 [a1]
  6108: d8 79 02                 t0 = a2 <u a0
  6111: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
  6114: 97 68 03                 a1 = s1 << 0x3
  6117: c8 b8 08                 a1 = a1 + a4
  6120: 97 ac 03                 a5 = a3 << 0x3
  6123: c8 cb 0b                 a4 = a4 + a5
  6126: 82 8c                    a5 = u64 [a1]
  6128: 82 b8                    a1 = u64 [a4]
  6130: e4 79 07                 a0 = maxu(a2, a0)
  6133: d8 74 09                 a2 = t2 <u a0
  6136: 7b 12 38                 u64 [sp + 0x38] = t0
  6139: 82 17 28                 a0 = u64 [sp + 0x28]
  6142: c8 27 07                 a0 = a0 + t0
  6145: c8 97 07                 a0 = a0 + a2
  6148: 7b 10 68                 u64 [sp + 0x68] = ra
  6151: 7b 15 60                 u64 [sp + 0x60] = s0
  6154: 7b 19 30                 u64 [sp + 0x30] = a2
  6157: ae c8 13                 jump @475 if a1 >=u a5
      :                          @474
  6160: 95 77 01                 a0 = a0 + 0x1
  6163: 7b 17 18                 u64 [sp + 0x18] = a0
  6166: 7b 1c 20                 u64 [sp + 0x20] = a5
  6169: 7b 1a 28                 u64 [sp + 0x28] = a3
  6172: 64 6a                    a3 = s1
  6174: 28 0e                    jump @476
      :                          @475
  6176: 7b 18 20                 u64 [sp + 0x20] = a1
  6179: 7b 16 28                 u64 [sp + 0x28] = s1
  6182: 64 c8                    a1 = a5
  6184: 7b 17 18                 u64 [sp + 0x18] = a0
  6187: 01                       fallthrough
      :                          @476
  6188: 86 66 01                 s1 = s1 | 0x1
  6191: 97 6b 03                 a4 = s1 << 0x3
  6194: 82 15 80 00              s0 = u64 [sp + 0x80]
  6198: c8 5b 0b                 a4 = a4 + s0
  6201: 82 bb                    a4 = u64 [a4]
  6203: d8 b8 07                 a0 = a1 <u a4
  6206: 95 34 ff                 t2 = t1 + 0xffffffffffffffff
  6209: 97 39 03                 a2 = t1 << 0x3
  6212: c8 59 09                 a2 = a2 + s0
  6215: 97 4c 03                 a5 = t2 << 0x3
  6218: c8 5c 0c                 a5 = a5 + s0
  6221: 82 92                    t0 = u64 [a2]
  6223: 82 c0                    ra = u64 [a5]
  6225: e4 b8 08                 a1 = maxu(a1, a4)
  6228: 82 19 20                 a2 = u64 [sp + 0x20]
  6231: d8 89 09                 a2 = a2 <u a1
  6234: 7b 17 20                 u64 [sp + 0x20] = a0
  6237: 82 18 18                 a1 = u64 [sp + 0x18]
  6240: c8 87 07                 a0 = a0 + a1
  6243: c8 97 07                 a0 = a0 + a2
  6246: ae 20 12                 jump @478 if ra >=u t0
      :                          @477
  6249: 95 77 01                 a0 = a0 + 0x1
  6252: 7b 17 18                 u64 [sp + 0x18] = a0
  6255: 7b 12 10                 u64 [sp + 0x10] = t0
  6258: 64 47                    a0 = t2
  6260: 64 34                    t2 = t1
  6262: 28 0d                    jump @479
      :                          @478
  6264: 7b 10 10                 u64 [sp + 0x10] = ra
  6267: 7b 17 18                 u64 [sp + 0x18] = a0
  6270: 64 37                    a0 = t1
  6272: 64 20                    ra = t0
  6274: 01                       fallthrough
      :                          @479
  6275: 82 15 60                 s0 = u64 [sp + 0x60]
  6278: 82 1c 50                 a5 = u64 [sp + 0x50]
  6281: 82 18 40                 a1 = u64 [sp + 0x40]
  6284: 82 1b 38                 a4 = u64 [sp + 0x38]
  6287: da bc 08                 a1 = a5 if a4 == 0
  6290: 95 33 01                 t1 = t1 + 0x1
  6293: 97 3c 03                 a5 = t1 << 0x3
  6296: 82 12 80 00              t0 = u64 [sp + 0x80]
  6300: c8 2c 0c                 a5 = a5 + t0
  6303: 82 cc                    a5 = u64 [a5]
  6305: 82 1b 30                 a4 = u64 [sp + 0x30]
  6308: da b8 05                 s0 = a1 if a4 == 0
  6311: 82 18 28                 a1 = u64 [sp + 0x28]
  6314: 82 1b 20                 a4 = u64 [sp + 0x20]
  6317: da b8 06                 s1 = a1 if a4 == 0
  6320: da 96 0a                 a3 = s1 if a2 == 0
  6323: d8 c0 09                 a2 = ra <u a5
  6326: db 93 07                 a0 = t1 if a2 != 0
  6329: e4 c0 0c                 a5 = maxu(ra, a5)
  6332: 82 18 10                 a1 = u64 [sp + 0x10]
  6335: d8 c8 08                 a1 = a1 <u a5
  6338: db 84 07                 a0 = t2 if a1 != 0
  6341: c8 98 08                 a1 = a1 + a2
  6344: 82 19 18                 a2 = u64 [sp + 0x18]
  6347: c8 89 09                 a2 = a2 + a1
  6350: 64 73                    t1 = a0
  6352: 64 a6                    s1 = a3
  6354: 64 5b                    a4 = s0
  6356: 82 10 68                 ra = u64 [sp + 0x68]
  6359: 33 05 01 01              s0 = 0x101
  6363: 01                       fallthrough
      :                          @480
  6364: 97 67 03                 a0 = s1 << 0x3
  6367: c8 27 07                 a0 = a0 + t0
  6370: 97 b8 03                 a1 = a4 << 0x3
  6373: c8 82 0a                 a3 = t0 + a1
  6376: 82 78                    a1 = u64 [a0]
  6378: 82 a7                    a0 = u64 [a3]
  6380: ae 87 0c                 jump @482 if a0 >=u a1
      :                          @481
  6383: 95 99 01                 a2 = a2 + 0x1
  6386: 64 8c                    a5 = a1
  6388: 64 ba                    a3 = a4
  6390: 28 0b                    jump @483
      :                          @482
  6392: 64 7c                    a5 = a0
  6394: 64 6a                    a3 = s1
  6396: 64 b6                    s1 = a4
  6398: 64 87                    a0 = a1
  6400: 01                       fallthrough
      :                          @483
  6401: 97 38 03                 a1 = t1 << 0x3
  6404: c8 28 08                 a1 = a1 + t0
  6407: 82 8b                    a4 = u64 [a1]
  6409: d8 b7 08                 a1 = a0 <u a4
  6412: e4 b7 07                 a0 = maxu(a0, a4)
  6415: c8 89 09                 a2 = a2 + a1
  6418: ae 7c 09                 jump @486 if a5 >=u a0
      :                          @484
  6421: 55 19 0b 1a              jump @488 if a2 >=u 11
      :                          @485
  6425: 28 49                    jump @491
      :                          @486
  6427: da 8a 03                 t1 = a3 if a1 == 0
  6430: 64 36                    s1 = t1
  6432: 88 97 01                 a0 = a2 <u 0x1
  6435: 82 18 70                 a1 = u64 [sp + 0x70]
  6438: d2 87 07                 a0 = a0 & a1
  6441: 51 07 39                 jump @491 if a0 == 0
      :                          @487
  6444: 28 f0 00                 jump @509
      :                          @488
  6447: 98 07 01                 a0 = ra >> 0x1
  6450: 97 08 03                 a1 = ra << 0x3
  6453: c8 28 08                 a1 = a1 + t0
  6456: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  6459: 64 29                    a2 = t0
  6461: 01                       fallthrough
      :                          @489
  6462: 82 8a                    a3 = u64 [a1]
  6464: 82 9b                    a4 = u64 [a2]
  6466: 7b 9a                    u64 [a2] = a3
  6468: 7b 8b                    u64 [a1] = a4
  6470: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6473: 95 99 08                 a2 = a2 + 0x8
  6476: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  6479: 52 07 ef                 jump @489 if a0 != 0
      :                          @490
  6482: 85 66 ff                 s1 = s1 ^ 0xffffffffffffffff
  6485: c8 06 06                 s1 = s1 + ra
  6488: 82 18 70                 a1 = u64 [sp + 0x70]
  6491: 84 87 01                 a0 = a1 & 0x1
  6494: 52 07 be 00              jump @509 if a0 != 0
      :                          @491
  6498: 97 67 03                 a0 = s1 << 0x3
  6501: 82 18 58                 a1 = u64 [sp + 0x58]
  6504: 51 08 d1 00              jump @512 if a1 == 0
      :                          @492
  6508: ae 06 d2 03              jump @564 if s1 >=u ra
      :                          @493
  6512: c8 72 08                 a1 = t0 + a0
  6515: 82 19 58                 a2 = u64 [sp + 0x58]
  6518: 82 9a                    a3 = u64 [a2]
  6520: 82 89                    a2 = u64 [a1]
  6522: ac a9 c3 00              jump @513 if a2 <u a3
      :                          @494
  6526: 82 27                    a0 = u64 [t0]
  6528: 7b 29                    u64 [t0] = a2
  6530: 7b 87                    u64 [a1] = a0
  6532: 82 28                    a1 = u64 [t0]
  6534: 33 07                    a0 = 0
  6536: 95 29 08                 a2 = t0 + 0x8
  6539: 95 0a ff                 a3 = ra + 0xffffffffffffffff
  6542: 54 0a 22                 jump @499 if a3 <=u 0
      :                          @495
  6545: 97 7b 03                 a4 = a0 << 0x3
  6548: c8 9b 0b                 a4 = a4 + a2
  6551: 01                       fallthrough
      :                          @496
  6552: 82 bc                    a5 = u64 [a4]
  6554: ac 8c 16                 jump @499 if a5 <u a1
      :                          @497
  6557: 95 77 01                 a0 = a0 + 0x1
  6560: 95 bb 08                 a4 = a4 + 0x8
  6563: ab 7a f5                 jump @496 if a3 != a0
      :                          @498
  6566: 64 a7                    a0 = a3
  6568: 97 ab 03                 a4 = a3 << 0x3
  6571: c8 9b 0b                 a4 = a4 + a2
  6574: 28 09                    jump @500
      :                          @499
  6576: 97 ab 03                 a4 = a3 << 0x3
  6579: c8 9b 0b                 a4 = a4 + a2
  6582: 01                       fallthrough
      :                          @500
  6583: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  6586: ae a7 26                 jump @504 if a0 >=u a3
      :                          @501
  6589: 82 b6 f8                 s1 = u64 [a4 + 0xfffffffffffffff8]
  6592: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
  6595: 64 cb                    a4 = a5
  6597: ac 86 f2                 jump @500 if s1 <u a1
      :                          @502
  6600: 97 7b 03                 a4 = a0 << 0x3
  6603: c8 9b 0b                 a4 = a4 + a2
  6606: 82 b5                    s0 = u64 [a4]
  6608: 7b b6                    u64 [a4] = s1
  6610: 7b c5                    u64 [a5] = s0
  6612: 33 05 01 01              s0 = 0x101
  6616: 95 77 01                 a0 = a0 + 0x1
  6619: ac a7 b6                 jump @495 if a0 <u a3
      :                          @503
  6622: 28 d2                    jump @499
      :                          @504
  6624: 95 77 01                 a0 = a0 + 0x1
  6627: 7b 28                    u64 [t0] = a1
  6629: ac 70 5b 03              jump @566 if ra <u a0
      :                          @505
  6633: c9 70 00                 ra = ra - a0
  6636: 97 77 03                 a0 = a0 << 0x3
  6639: c8 72 02                 t0 = t0 + a0
  6642: 55 10 15 83 fd           jump @466 if ra >=u 21
      :                          @506
  6647: 28 3b fd                 jump @461
      :                          @507
  6650: 64 27                    a0 = t0
  6652: 64 08                    a1 = ra
  6654: 64 05                    s0 = ra
  6656: 50 20 cc 00 10 ef        ra = 204, jump @131
      :                          @508 [@dyn 102]
  6662: 82 12 80 00              t0 = u64 [sp + 0x80]
  6666: 64 50                    ra = s0
  6668: 33 05 01 01              s0 = 0x101
  6672: 82 17 48                 a0 = u64 [sp + 0x48]
  6675: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
  6678: 7b 17 48                 u64 [sp + 0x48] = a0
  6681: 28 71 fd                 jump @468
      :                          @509
  6684: 64 27                    a0 = t0
  6686: 64 08                    a1 = ra
  6688: 64 05                    s0 = ra
  6690: 50 20 ce 00 be ef        ra = 206, jump @141
      :                          @510 [@dyn 103]
  6696: 82 12 80 00              t0 = u64 [sp + 0x80]
  6700: 64 50                    ra = s0
  6702: 33 05 01 01              s0 = 0x101
  6706: 51 07 30 ff              jump @491 if a0 == 0
      :                          @511
  6710: 28 0f fd                 jump @463
      :                          @512
  6713: 82 18                    a1 = u64 [sp]
  6715: 28 08                    jump @514
      :                          @513
  6717: 7b 12 08                 u64 [sp + 0x8] = t0
  6720: 64 08                    a1 = ra
  6722: 01                       fallthrough
      :                          @514
  6723: ae 86 fc 02              jump @565 if s1 >=u a1
      :                          @515
  6727: 82 1b 08                 a4 = u64 [sp + 0x8]
  6730: c8 b7 07                 a0 = a0 + a4
  6733: 82 7a                    a3 = u64 [a0]
  6735: 82 b9                    a2 = u64 [a4]
  6737: 7b ba                    u64 [a4] = a3
  6739: 7b 79                    u64 [a0] = a2
  6741: 82 b0                    ra = u64 [a4]
  6743: 33 09                    a2 = 0
  6745: 95 b2 08                 t0 = a4 + 0x8
  6748: 7b 18                    u64 [sp] = a1
  6750: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  6753: 64 27                    a0 = t0
  6755: 01                       fallthrough
      :                          @516
  6756: 82 7a                    a3 = u64 [a0]
  6758: ae a0 0f                 jump @519 if ra >=u a3
      :                          @517
  6761: 95 99 01                 a2 = a2 + 0x1
  6764: 95 77 08                 a0 = a0 + 0x8
  6767: ab 98 f5                 jump @516 if a1 != a2
      :                          @518
  6770: 64 89                    a2 = a1
  6772: 01                       fallthrough
      :                          @519
  6773: 82 17                    a0 = u64 [sp]
  6775: 97 77 03                 a0 = a0 << 0x3
  6778: 82 1a 08                 a3 = u64 [sp + 0x8]
  6781: c8 a7 07                 a0 = a0 + a3
  6784: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
  6787: 01                       fallthrough
      :                          @520
  6788: 64 8b                    a4 = a1
  6790: ae 89 0e                 jump @522 if a2 >=u a1
      :                          @521
  6793: 82 a7                    a0 = u64 [a3]
  6795: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  6798: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
  6801: ae 70 f3                 jump @520 if ra >=u a0
      :                          @522
  6804: 64 b8                    a1 = a4
  6806: ac 9b ab 02              jump @567 if a4 <u a2
      :                          @523
  6810: 33 0b                    a4 = 0
  6812: 33 0c                    a5 = 0
  6814: 33 06                    s1 = 0
  6816: 33 03                    t1 = 0
  6818: 7b 19 40                 u64 [sp + 0x40] = a2
  6821: 97 97 03                 a0 = a2 << 0x3
  6824: c8 72 09                 a2 = t0 + a0
  6827: 7b 18 30                 u64 [sp + 0x30] = a1
  6830: 97 87 03                 a0 = a1 << 0x3
  6833: c8 72 08                 a1 = t0 + a0
  6836: 33 04 80 00              t2 = 0x80
  6840: 7b 19 38                 u64 [sp + 0x38] = a2
  6843: 64 9a                    a3 = a2
  6845: 33 02 80 00              t0 = 0x80
  6849: 7b 10 50                 u64 [sp + 0x50] = ra
  6852: 28 42                    jump @526
      :                          @524
  6854: 97 00 03                 ra = ra << 0x3
  6857: c8 80 00                 ra = ra + a1
  6860: 82 17 60                 a0 = u64 [sp + 0x60]
  6863: 7b 07                    u64 [ra] = a0
  6865: 95 bb 01                 a4 = a4 + 0x1
  6868: 95 66 01                 s1 = s1 + 0x1
  6871: 82 10 50                 ra = u64 [sp + 0x50]
  6874: 82 14 68                 t2 = u64 [sp + 0x68]
  6877: 01                       fallthrough
      :                          @525
  6878: d3 cb 07                 a0 = a4 ^ a5
  6881: 64 49                    a2 = t2
  6883: 94 79                    a2 = 0 if a0 != 0
  6885: 97 99 03                 a2 = a2 << 0x3
  6888: c8 9a 0a                 a3 = a3 + a2
  6891: d3 36 07                 a0 = s1 ^ t1
  6894: 82 12 70                 t0 = u64 [sp + 0x70]
  6897: 9a 29                    a2 = -t0
  6899: 94 79                    a2 = 0 if a0 != 0
  6901: 97 99 03                 a2 = a2 << 0x3
  6904: c8 98 08                 a1 = a1 + a2
  6907: 33 05 01 01              s0 = 0x101
  6911: 82 17 78                 a0 = u64 [sp + 0x78]
  6914: ac 57 3e 01              jump @548 if a0 <u s0
      :                          @526
  6918: c9 a8 07                 a0 = a1 - a3
  6921: 98 79 03                 a2 = a0 >> 0x3
  6924: 7b 1a 80 00              u64 [sp + 0x80] = a3
  6928: 7b 19 78                 u64 [sp + 0x78] = a2
  6931: ac 59 38                 jump @533 if a2 <u s0
      :                          @527
  6934: aa cb 71                 jump @537 if a4 == a5
      :                          @528
  6937: ab 36 b4 00              jump @544 if s1 != t1
      :                          @529
  6941: 51 02 9a 00              jump @542 if t0 == 0
      :                          @530
  6945: 33 07                    a0 = 0
  6947: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  6950: 95 16 08 01              s1 = sp + 0x108
  6954: 95 13 08 01              t1 = sp + 0x108
  6958: 01                       fallthrough
      :                          @531
  6959: 82 a9                    a2 = u64 [a3]
  6961: 78 37                    u8 [t1] = a0
  6963: 95 75 01                 s0 = a0 + 0x1
  6966: d8 90 07                 a0 = ra <u a2
  6969: c8 73 03                 t1 = t1 + a0
  6972: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
  6975: 64 57                    a0 = s0
  6977: ab 52 ee                 jump @531 if t0 != s0
      :                          @532
  6980: 82 1a 80 00              a3 = u64 [sp + 0x80]
  6984: 28 85 00                 jump @544
      :                          @533
  6987: 64 25                    s0 = t0
  6989: 64 49                    a2 = t2
  6991: d8 cb 04                 t2 = a4 <u a5
  6994: d8 36 0a                 a3 = s1 <u t1
  6997: d4 a4 02                 t0 = t2 | a3
  7000: 51 02 1f                 jump @536 if t0 == 0
      :                          @534
  7003: 82 1a 78                 a3 = u64 [sp + 0x78]
  7006: 95 a7 80                 a0 = a3 + 0xffffffffffffff80
  7009: db 47 05                 s0 = a0 if t2 != 0
  7012: da 2a 07                 a0 = a3 if t0 == 0
  7015: 64 52                    t0 = s0
  7017: da 47 09                 a2 = a0 if t2 == 0
  7020: 64 94                    t2 = a2
  7022: 82 1a 80 00              a3 = u64 [sp + 0x80]
  7026: ab cb a7                 jump @528 if a4 != a5
      :                          @535
  7029: 28 12                    jump @537
      :                          @536
  7031: 98 74 04                 t2 = a0 >> 0x4
  7034: 82 17 78                 a0 = u64 [sp + 0x78]
  7037: c9 47 02                 t0 = a0 - t2
  7040: 82 1a 80 00              a3 = u64 [sp + 0x80]
  7044: ab cb 95                 jump @528 if a4 != a5
      :                          @537
  7047: 51 04 3a                 jump @543 if t2 == 0
      :                          @538
  7050: 33 07                    a0 = 0
  7052: 95 1b 88 00              a4 = sp + 0x88
  7056: 95 1c 88 00              a5 = sp + 0x88
  7060: 01                       fallthrough
      :                          @539
  7061: 82 a5                    s0 = u64 [a3]
  7063: 78 c7                    u8 [a5] = a0
  7065: 95 79 01                 a2 = a0 + 0x1
  7068: d8 50 07                 a0 = ra <u s0
  7071: 85 77 01                 a0 = a0 ^ 0x1
  7074: c8 7c 0c                 a5 = a5 + a0
  7077: 95 aa 08                 a3 = a3 + 0x8
  7080: 64 97                    a0 = a2
  7082: ab 94 eb                 jump @539 if t2 != a2
      :                          @540
  7085: 82 1a 80 00              a3 = u64 [sp + 0x80]
  7089: ab 36 1c                 jump @544 if s1 != t1
      :                          @541
  7092: 28 69 ff                 jump @529
      :                          @542
  7095: 95 16 08 01              s1 = sp + 0x108
  7099: 95 13 08 01              t1 = sp + 0x108
  7103: 28 0e                    jump @544
      :                          @543
  7105: 95 1b 88 00              a4 = sp + 0x88
  7109: 95 1c 88 00              a5 = sp + 0x88
  7113: aa 36 54 ff              jump @529 if s1 == t1
      :                          @544
  7117: 7b 12 70                 u64 [sp + 0x70] = t0
  7120: c9 bc 07                 a0 = a5 - a4
  7123: c9 63 09                 a2 = t1 - s1
  7126: e6 97 02                 t0 = minu(a0, a2)
  7129: 51 02 05 ff              jump @525 if t0 == 0
      :                          @545
  7133: 7b 14 68                 u64 [sp + 0x68] = t2
  7136: 7c b7                    a0 = u8 [a4]
  7138: 7c 64                    t2 = u8 [s1]
  7140: 97 77 03                 a0 = a0 << 0x3
  7143: c8 a7 07                 a0 = a0 + a3
  7146: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
  7149: 97 09 03                 a2 = ra << 0x3
  7152: c8 89 09                 a2 = a2 + a1
  7155: 82 99                    a2 = u64 [a2]
  7157: 82 75                    s0 = u64 [a0]
  7159: 7b 15 60                 u64 [sp + 0x60] = s0
  7162: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  7165: 7b 79                    u64 [a0] = a2
  7167: 51 02 c7 fe              jump @524 if t0 == 0
      :                          @546
  7171: 7c b7 01                 a0 = u8 [a4 + 0x1]
  7174: 97 77 03                 a0 = a0 << 0x3
  7177: c8 a7 07                 a0 = a0 + a3
  7180: 85 49 ff                 a2 = t2 ^ 0xffffffffffffffff
  7183: 82 7a                    a3 = u64 [a0]
  7185: 97 99 03                 a2 = a2 << 0x3
  7188: 86 99 00 f8              a2 = a2 | 0xfffffffffffff800
  7192: c8 89 09                 a2 = a2 + a1
  7195: 7b 9a                    u64 [a2] = a3
  7197: 82 1a 80 00              a3 = u64 [sp + 0x80]
  7201: 7c 64 01                 t2 = u8 [s1 + 0x1]
  7204: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
  7207: 97 09 03                 a2 = ra << 0x3
  7210: c8 89 09                 a2 = a2 + a1
  7213: 82 99                    a2 = u64 [a2]
  7215: 95 bb 01                 a4 = a4 + 0x1
  7218: 95 66 01                 s1 = s1 + 0x1
  7221: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  7224: 7b 79                    u64 [a0] = a2
  7226: 52 02 c9                 jump @546 if t0 != 0
      :                          @547
  7229: 28 89 fe                 jump @524
      :                          @548
  7232: ae cb 2b                 jump @552 if a4 >=u a5
      :                          @549
  7235: 82 12 08                 t0 = u64 [sp + 0x8]
  7238: 64 a3                    t1 = a3
  7240: 01                       fallthrough
      :                          @550
  7241: 7c c7 ff                 a0 = u8 [a5 + 0xffffffffffffffff]
  7244: 97 77 03                 a0 = a0 << 0x3
  7247: c8 37 07                 a0 = a0 + t1
  7250: 82 85 f8                 s0 = u64 [a1 + 0xfffffffffffffff8]
  7253: 82 79                    a2 = u64 [a0]
  7255: 95 c6 ff                 s1 = a5 + 0xffffffffffffffff
  7258: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  7261: 7b 75                    u64 [a0] = s0
  7263: 7b 89 f8                 u64 [a1 + 0xfffffffffffffff8] = a2
  7266: 64 a8                    a1 = a3
  7268: 64 6c                    a5 = s1
  7270: ac 6b e3                 jump @550 if a4 <u s1
      :                          @551
  7273: 28 27                    jump @554
      :                          @552
  7275: 82 12 08                 t0 = u64 [sp + 0x8]
  7278: ae 36 22                 jump @554 if s1 >=u t1
      :                          @553
  7281: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
  7284: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
  7287: 97 77 03                 a0 = a0 << 0x3
  7290: c8 87 07                 a0 = a0 + a1
  7293: 82 79                    a2 = u64 [a0]
  7295: 82 ab                    a4 = u64 [a3]
  7297: 95 3c ff                 a5 = t1 + 0xffffffffffffffff
  7300: 7b a9                    u64 [a3] = a2
  7302: 7b 7b                    u64 [a0] = a4
  7304: 95 aa 08                 a3 = a3 + 0x8
  7307: 64 c3                    t1 = a5
  7309: ac c6 e4                 jump @553 if s1 <u a5
      :                          @554
  7312: 82 17 38                 a0 = u64 [sp + 0x38]
  7315: c9 7a 07                 a0 = a3 - a0
  7318: 98 77 03                 a0 = a0 >> 0x3
  7321: 82 16 40                 s1 = u64 [sp + 0x40]
  7324: c8 76 06                 s1 = s1 + a0
  7327: 7b 20                    u64 [t0] = ra
  7329: 82 18                    a1 = u64 [sp]
  7331: ae 86 9c 00              jump @565 if s1 >=u a1
      :                          @555
  7335: 97 67 03                 a0 = s1 << 0x3
  7338: c8 72 09                 a2 = t0 + a0
  7341: 82 97                    a0 = u64 [a2]
  7343: 7b 27                    u64 [t0] = a0
  7345: 7b 90                    u64 [a2] = ra
  7347: 64 25                    s0 = t0
  7349: c9 68 08                 a1 = a1 - s1
  7352: 7b 18 80 00              u64 [sp + 0x80] = a1
  7356: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
  7359: 95 97 08                 a0 = a2 + 0x8
  7362: ae b6 28                 jump @558 if s1 >=u a4
      :                          @556
  7365: 7b 17 78                 u64 [sp + 0x78] = a0
  7368: 64 57                    a0 = s0
  7370: 64 68                    a1 = s1
  7372: 7b 19 70                 u64 [sp + 0x70] = a2
  7375: 82 19 58                 a2 = u64 [sp + 0x58]
  7378: 82 1a 48                 a3 = u64 [sp + 0x48]
  7381: 64 b5                    s0 = a4
  7383: 50 20 d0 00 3a fa        ra = 208, jump @459
      :                          @557 [@dyn 104]
  7389: 64 50                    ra = s0
  7391: 82 17 70                 a0 = u64 [sp + 0x70]
  7394: 7b 17 58                 u64 [sp + 0x58] = a0
  7397: 82 15 78                 s0 = u64 [sp + 0x78]
  7400: 28 10                    jump @560
      :                          @558
  7402: 64 b8                    a1 = a4
  7404: 82 1a 48                 a3 = u64 [sp + 0x48]
  7407: 50 20 d2 00 22 fa        ra = 210, jump @459
      :                          @559 [@dyn 105]
  7413: 64 60                    ra = s1
  7415: 01                       fallthrough
      :                          @560
  7416: 82 17 40                 a0 = u64 [sp + 0x40]
  7419: 82 18 30                 a1 = u64 [sp + 0x30]
  7422: d8 87 07                 a0 = a0 <u a1
  7425: 85 77 01                 a0 = a0 ^ 0x1
  7428: 82 18 80 00              a1 = u64 [sp + 0x80]
  7432: e6 86 08                 a1 = minu(s1, a1)
  7435: 82 19                    a2 = u64 [sp]
  7437: 98 99 03                 a2 = a2 >> 0x3
  7440: d8 98 08                 a1 = a1 <u a2
  7443: 85 88 01                 a1 = a1 ^ 0x1
  7446: 7b 18 78                 u64 [sp + 0x78] = a1
  7449: 7b 10                    u64 [sp] = ra
  7451: 7b 15 08                 u64 [sp + 0x8] = s0
  7454: 64 52                    t0 = s0
  7456: 33 08 15                 a1 = 0x15
  7459: 33 05 01 01              s0 = 0x101
  7463: ae 80 41 fa              jump @465 if ra >=u a1
      :                          @561
  7467: 28 07 fa                 jump @461
      :                          @562
  7470: 64 27                    a0 = t0
  7472: 64 08                    a1 = ra
  7474: 33 00 d4 00              ra = 0xd4
  7478: 98 82 01                 t0 = a1 >> 0x1
  7481: 28 0c                    jump @569
      :                          @563 [@dyn 106]
  7483: 28 0a fa                 jump @463
      :                          @564
  7486: 00                       trap
      :                          @565
  7487: 00                       trap
      :                          @566
  7488: 00                       trap
      :                          @567
  7489: 00                       trap
      :                          @568
  7490: 51 02 62                 jump @579 if t0 == 0
      :                          @569
  7493: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  7496: 97 2a 01                 a3 = t0 << 0x1
  7499: 95 ac 01                 a5 = a3 + 0x1
  7502: ae 8c f4                 jump @568 if a5 >=u a1
      :                          @570
  7505: 64 2b                    a4 = t0
  7507: 01                       fallthrough
      :                          @571
  7508: 95 aa 02                 a3 = a3 + 0x2
  7511: ae 8a 1f                 jump @574 if a3 >=u a1
      :                          @572
  7514: 97 c9 03                 a2 = a5 << 0x3
  7517: c8 79 09                 a2 = a2 + a0
  7520: 97 aa 03                 a3 = a3 << 0x3
  7523: c8 7a 0a                 a3 = a3 + a0
  7526: 82 99                    a2 = u64 [a2]
  7528: 82 aa                    a3 = u64 [a3]
  7530: d8 9a 03                 t1 = a3 <u a2
  7533: c8 c3 03                 t1 = t1 + a5
  7536: ac 8b 0c                 jump @575 if a4 <u a1
      :                          @573
  7539: 28 a7 00                 jump @594
      :                          @574
  7542: 64 c3                    t1 = a5
  7544: ae 8b a2 00              jump @594 if a4 >=u a1
      :                          @575
  7548: ae 83 9f 00              jump @595 if t1 >=u a1
      :                          @576
  7552: 97 ba 03                 a3 = a4 << 0x3
  7555: c8 7a 0a                 a3 = a3 + a0
  7558: 97 3b 03                 a4 = t1 << 0x3
  7561: c8 7b 0b                 a4 = a4 + a0
  7564: 82 a9                    a2 = u64 [a3]
  7566: 82 bc                    a5 = u64 [a4]
  7568: ae 9c b2                 jump @568 if a5 >=u a2
      :                          @577
  7571: 7b ac                    u64 [a3] = a5
  7573: 97 3a 01                 a3 = t1 << 0x1
  7576: 95 ac 01                 a5 = a3 + 0x1
  7579: 7b b9                    u64 [a4] = a2
  7581: 64 3b                    a4 = t1
  7583: ac 8c b5                 jump @571 if a5 <u a1
      :                          @578
  7586: 28 a0                    jump @568
      :                          @579
  7588: 33 02 02                 t0 = 0x2
  7591: 64 83                    t1 = a1
  7593: 01                       fallthrough
      :                          @580
  7594: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
  7597: ae 83 6e                 jump @595 if t1 >=u a1
      :                          @581
  7600: 97 39 03                 a2 = t1 << 0x3
  7603: c8 79 09                 a2 = a2 + a0
  7606: 82 9a                    a3 = u64 [a2]
  7608: 82 7b                    a4 = u64 [a0]
  7610: 7b 7a                    u64 [a0] = a3
  7612: 7b 9b                    u64 [a2] = a4
  7614: ac 23 58                 jump @591 if t1 <u t0
      :                          @582
  7617: 33 0a                    a3 = 0
  7619: 33 09                    a2 = 0
  7621: 33 0b 01                 a4 = 0x1
  7624: 01                       fallthrough
      :                          @583
  7625: 95 aa 02                 a3 = a3 + 0x2
  7628: ae 3a 1e                 jump @586 if a3 >=u t1
      :                          @584
  7631: 97 bc 03                 a5 = a4 << 0x3
  7634: c8 7c 0c                 a5 = a5 + a0
  7637: 97 aa 03                 a3 = a3 << 0x3
  7640: c8 7a 0a                 a3 = a3 + a0
  7643: 82 cc                    a5 = u64 [a5]
  7645: 82 aa                    a3 = u64 [a3]
  7647: d8 ca 04                 t2 = a3 <u a5
  7650: c8 b4 04                 t2 = t2 + a4
  7653: ac 39 0a                 jump @587 if a2 <u t1
      :                          @585
  7656: 28 30                    jump @592
      :                          @586
  7658: 64 b4                    t2 = a4
  7660: ae 39 2c                 jump @592 if a2 >=u t1
      :                          @587
  7663: ae 34 2a                 jump @593 if t2 >=u t1
      :                          @588
  7666: 97 99 03                 a2 = a2 << 0x3
  7669: c8 97 0a                 a3 = a0 + a2
  7672: 97 49 03                 a2 = t2 << 0x3
  7675: c8 79 09                 a2 = a2 + a0
  7678: 82 ac                    a5 = u64 [a3]
  7680: 82 9b                    a4 = u64 [a2]
  7682: ae cb a8                 jump @580 if a4 >=u a5
      :                          @589
  7685: 7b ab                    u64 [a3] = a4
  7687: 97 4a 01                 a3 = t2 << 0x1
  7690: 95 ab 01                 a4 = a3 + 0x1
  7693: 7b 9c                    u64 [a2] = a5
  7695: 64 49                    a2 = t2
  7697: ac 3b b8                 jump @583 if a4 <u t1
      :                          @590
  7700: 28 96                    jump @580
      :                          @591
  7702: 32 00                    ret
      :                          @592
  7704: 00                       trap
      :                          @593
  7705: 00                       trap
      :                          @594
  7706: 00                       trap
      :                          @595
  7707: 00                       trap
      :                          @596
  7708: 51 02 62                 jump @607 if t0 == 0
      :                          @597
  7711: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  7714: 97 2a 01                 a3 = t0 << 0x1
  7717: 95 ac 01                 a5 = a3 + 0x1
  7720: ae 8c f4                 jump @596 if a5 >=u a1
      :                          @598
  7723: 64 2b                    a4 = t0
  7725: 01                       fallthrough
      :                          @599
  7726: 95 aa 02                 a3 = a3 + 0x2
  7729: ae 8a 1f                 jump @602 if a3 >=u a1
      :                          @600
  7732: 97 c9 03                 a2 = a5 << 0x3
  7735: c8 79 09                 a2 = a2 + a0
  7738: 97 aa 03                 a3 = a3 << 0x3
  7741: c8 7a 0a                 a3 = a3 + a0
  7744: 82 99                    a2 = u64 [a2]
  7746: 82 aa                    a3 = u64 [a3]
  7748: d9 a9 03                 t1 = a2 <s a3
  7751: c8 c3 03                 t1 = t1 + a5
  7754: ac 8b 0c                 jump @603 if a4 <u a1
      :                          @601
  7757: 28 a7 00                 jump @622
      :                          @602
  7760: 64 c3                    t1 = a5
  7762: ae 8b a2 00              jump @622 if a4 >=u a1
      :                          @603
  7766: ae 83 9f 00              jump @623 if t1 >=u a1
      :                          @604
  7770: 97 ba 03                 a3 = a4 << 0x3
  7773: c8 7a 0a                 a3 = a3 + a0
  7776: 97 3b 03                 a4 = t1 << 0x3
  7779: c8 7b 0b                 a4 = a4 + a0
  7782: 82 a9                    a2 = u64 [a3]
  7784: 82 bc                    a5 = u64 [a4]
  7786: af c9 b2                 jump @596 if a2 >=s a5
      :                          @605
  7789: 7b ac                    u64 [a3] = a5
  7791: 97 3a 01                 a3 = t1 << 0x1
  7794: 95 ac 01                 a5 = a3 + 0x1
  7797: 7b b9                    u64 [a4] = a2
  7799: 64 3b                    a4 = t1
  7801: ac 8c b5                 jump @599 if a5 <u a1
      :                          @606
  7804: 28 a0                    jump @596
      :                          @607
  7806: 33 02 02                 t0 = 0x2
  7809: 64 83                    t1 = a1
  7811: 01                       fallthrough
      :                          @608
  7812: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
  7815: ae 83 6e                 jump @623 if t1 >=u a1
      :                          @609
  7818: 97 39 03                 a2 = t1 << 0x3
  7821: c8 79 09                 a2 = a2 + a0
  7824: 82 9a                    a3 = u64 [a2]
  7826: 82 7b                    a4 = u64 [a0]
  7828: 7b 7a                    u64 [a0] = a3
  7830: 7b 9b                    u64 [a2] = a4
  7832: ac 23 58                 jump @619 if t1 <u t0
      :                          @610
  7835: 33 0a                    a3 = 0
  7837: 33 09                    a2 = 0
  7839: 33 0b 01                 a4 = 0x1
  7842: 01                       fallthrough
      :                          @611
  7843: 95 aa 02                 a3 = a3 + 0x2
  7846: ae 3a 1e                 jump @614 if a3 >=u t1
      :                          @612
  7849: 97 bc 03                 a5 = a4 << 0x3
  7852: c8 7c 0c                 a5 = a5 + a0
  7855: 97 aa 03                 a3 = a3 << 0x3
  7858: c8 7a 0a                 a3 = a3 + a0
  7861: 82 cc                    a5 = u64 [a5]
  7863: 82 aa                    a3 = u64 [a3]
  7865: d9 ac 04                 t2 = a5 <s a3
  7868: c8 b4 04                 t2 = t2 + a4
  7871: ac 39 0a                 jump @615 if a2 <u t1
      :                          @613
  7874: 28 30                    jump @620
      :                          @614
  7876: 64 b4                    t2 = a4
  7878: ae 39 2c                 jump @620 if a2 >=u t1
      :                          @615
  7881: ae 34 2a                 jump @621 if t2 >=u t1
      :                          @616
  7884: 97 99 03                 a2 = a2 << 0x3
  7887: c8 97 0a                 a3 = a0 + a2
  7890: 97 49 03                 a2 = t2 << 0x3
  7893: c8 79 09                 a2 = a2 + a0
  7896: 82 ac                    a5 = u64 [a3]
  7898: 82 9b                    a4 = u64 [a2]
  7900: af bc a8                 jump @608 if a5 >=s a4
      :                          @617
  7903: 7b ab                    u64 [a3] = a4
  7905: 97 4a 01                 a3 = t2 << 0x1
  7908: 95 ab 01                 a4 = a3 + 0x1
  7911: 7b 9c                    u64 [a2] = a5
  7913: 64 49                    a2 = t2
  7915: ac 3b b8                 jump @611 if a4 <u t1
      :                          @618
  7918: 28 96                    jump @608
      :                          @619
  7920: 32 00                    ret
      :                          @620
  7922: 00                       trap
      :                          @621
  7923: 00                       trap
      :                          @622
  7924: 00                       trap
      :                          @623
  7925: 00                       trap
      :                          @624 [@dyn 107]
  7926: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  7929: 7b 10 38                 u64 [sp + 0x38] = ra
  7932: 7b 15 30                 u64 [sp + 0x30] = s0
  7935: 7b 16 28                 u64 [sp + 0x28] = s1
  7938: 64 85                    s0 = a1
  7940: 82 88 28                 a1 = u64 [a1 + 0x28]
  7943: 82 59 20                 a2 = u64 [s0 + 0x20]
  7946: 82 8a 18                 a3 = u64 [a1 + 0x18]
  7949: 64 76                    s1 = a0
  7951: 33 08 a8 10 01           a1 = 0x110a8
  7956: 64 97                    a0 = a2
  7958: 33 09                    a2 = 0
  7960: b4 a0 02 d8 00           ra = 216, jump [a3]
      :                          @625 [@dyn 108]
  7965: 7b 15 08                 u64 [sp + 0x8] = s0
  7968: 78 17 10                 u8 [sp + 0x10] = a0
  7971: 49 01                    u64 [sp + 0] = 0
  7973: 33 05 01                 s0 = 0x1
  7976: 78 15 11                 u8 [sp + 0x11] = s0
  7979: 7b 16 18                 u64 [sp + 0x18] = s1
  7982: 95 66 08                 s1 = s1 + 0x8
  7985: 7b 16 20                 u64 [sp + 0x20] = s1
  7988: 33 06 1c                 s1 = 0x1c
  7991: 64 17                    a0 = sp
  7993: 95 18 18                 a1 = sp + 0x18
  7996: 33 09 1c                 a2 = 0x1c
  7999: 50 20 da 00 b4 a0 00     ra = 218, jump @3140
      :                          @626 [@dyn 109]
  8006: 64 17                    a0 = sp
  8008: 95 18 20                 a1 = sp + 0x20
  8011: 64 69                    a2 = s1
  8013: 50 20 dc 00 a6 a0 00     ra = 220, jump @3140
      :                          @627 [@dyn 110]
  8020: 82 17                    a0 = u64 [sp]
  8022: 7c 18 10                 a1 = u8 [sp + 0x10]
  8025: 51 07 59                 jump @635 if a0 == 0
      :                          @628
  8028: 52 08 59                 jump @636 if a1 != 0
      :                          @629
  8031: 7c 18 11                 a1 = u8 [sp + 0x11]
  8034: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  8037: 8e 77                    a0 = a0 >u 0
  8039: 82 16 08                 s1 = u64 [sp + 0x8]
  8042: 88 88 01                 a1 = a1 <u 0x1
  8045: d4 87 07                 a0 = a0 | a1
  8048: 52 07 28                 jump @633 if a0 != 0
      :                          @630
  8051: 7c 67 34                 a0 = u8 [s1 + 0x34]
  8054: 84 77 04                 a0 = a0 & 0x4
  8057: 52 07 1f                 jump @633 if a0 != 0
      :                          @631
  8060: 82 68 28                 a1 = u64 [s1 + 0x28]
  8063: 82 67 20                 a0 = u64 [s1 + 0x20]
  8066: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8069: 33 08 e7 10 01           a1 = 0x110e7
  8074: 33 09 01                 a2 = 0x1
  8077: 33 05 01                 s0 = 0x1
  8080: b4 a0 02 de 00           ra = 222, jump [a3]
      :                          @632 [@dyn 111]
  8085: 52 07 20                 jump @636 if a0 != 0
      :                          @633
  8088: 82 68 28                 a1 = u64 [s1 + 0x28]
  8091: 82 67 20                 a0 = u64 [s1 + 0x20]
  8094: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8097: 33 08 a8 10 01           a1 = 0x110a8
  8102: 33 09 01                 a2 = 0x1
  8105: b4 a0 02 e0 00           ra = 224, jump [a3]
      :                          @634 [@dyn 112]
  8110: 64 75                    s0 = a0
  8112: 28 05                    jump @636
      :                          @635
  8114: 8e 85                    s0 = a1 >u 0
  8116: 01                       fallthrough
      :                          @636
  8117: 64 57                    a0 = s0
  8119: 82 10 38                 ra = u64 [sp + 0x38]
  8122: 82 15 30                 s0 = u64 [sp + 0x30]
  8125: 82 16 28                 s1 = u64 [sp + 0x28]
  8128: 95 11 40                 sp = sp + 0x40
  8131: 32 00                    ret
      :                          @637
  8133: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  8136: 7b 10 18                 u64 [sp + 0x18] = ra
  8139: 7b 15 10                 u64 [sp + 0x10] = s0
  8142: 7b 16 08                 u64 [sp + 0x8] = s1
  8145: 82 8a 08                 a3 = u64 [a1 + 0x8]
  8148: 82 89 18                 a2 = u64 [a1 + 0x18]
  8151: 33 0b 01                 a4 = 0x1
  8154: 64 75                    s0 = a0
  8156: aa ba 15                 jump @641 if a3 == a4
      :                          @638
  8159: 52 0a 15                 jump @642 if a3 != 0
      :                          @639
  8162: 52 09 12                 jump @642 if a2 != 0
      :                          @640
  8165: 33 06                    s1 = 0
  8167: 33 08 a8 10 01           a1 = 0x110a8
  8172: 33 07 01                 a0 = 0x1
  8175: 28 67                    jump @651
      :                          @641
  8177: 51 09 15                 jump @643 if a2 == 0
      :                          @642
  8180: 64 57                    a0 = s0
  8182: 82 10 18                 ra = u64 [sp + 0x18]
  8185: 82 15 10                 s0 = u64 [sp + 0x10]
  8188: 82 16 08                 s1 = u64 [sp + 0x8]
  8191: 95 11 20                 sp = sp + 0x20
  8194: 28 cf 8e 00              jump @2789
      :                          @643
  8198: 82 87                    a0 = u64 [a1]
  8200: 82 76 08                 s1 = u64 [a0 + 0x8]
  8203: 82 78                    a1 = u64 [a0]
  8205: 51 06 45                 jump @650 if s1 == 0
      :                          @644
  8208: 57 06 6a                 jump @654 if s1 <s 0
      :                          @645
  8211: 64 53                    t1 = s0
  8213: 89 67                    a0 = s1 <s 0
  8215: 85 75 01                 s0 = a0 ^ 0x1
  8218: 33 0b 10 01 03           a4 = 0x30110
  8223: 33 02 00 00 01           t0 = 0x10000
  8228: c8 2b 0b                 a4 = a4 + t0
  8231: 01                       fallthrough
      :                          @646
  8232: 82 bc                    a5 = u64 [a4]
  8234: c8 6c 0a                 a3 = a5 + s1
  8237: ac ca 4c                 jump @653 if a3 <u a5
      :                          @647
  8240: c8 5a 07                 a0 = a3 + s0
  8243: d8 a7 09                 a2 = a0 <u a3
  8246: d8 72 07                 a0 = t0 <u a0
  8249: d4 97 07                 a0 = a0 | a2
  8252: 52 07 3d                 jump @653 if a0 != 0
      :                          @648
  8255: 82 b7                    a0 = u64 [a4]
  8257: ab c7 e7                 jump @646 if a0 != a5
      :                          @649
  8260: 7b ba                    u64 [a4] = a3
  8262: 33 07 10 01 04           a0 = 0x40110
  8267: c9 a7 07                 a0 = a0 - a3
  8270: 64 35                    s0 = t1
  8272: 28 06                    jump @651
      :                          @650
  8274: 33 07 01                 a0 = 0x1
  8277: 01                       fallthrough
      :                          @651
  8278: 7b 17                    u64 [sp] = a0
  8280: 64 69                    a2 = s1
  8282: 50 20 e2 00 f1 90 00     ra = 226, jump @2839
      :                          @652 [@dyn 113]
  8289: 7b 56                    u64 [s0] = s1
  8291: 82 17                    a0 = u64 [sp]
  8293: 7b 57 08                 u64 [s0 + 0x8] = a0
  8296: 7b 56 10                 u64 [s0 + 0x10] = s1
  8299: 82 10 18                 ra = u64 [sp + 0x18]
  8302: 82 15 10                 s0 = u64 [sp + 0x10]
  8305: 82 16 08                 s1 = u64 [sp + 0x8]
  8308: 95 11 20                 sp = sp + 0x20
  8311: 32 00                    ret
      :                          @653
  8313: 00                       trap
      :                          @654
  8314: 00                       trap
      :                          @655
  8315: 95 11 f8                 sp = sp + 0xfffffffffffffff8
  8318: 7b 15                    u64 [sp] = s0
  8320: 33 03 10 01 03           t1 = 0x30110
  8325: 33 02 00 00 01           t0 = 0x10000
  8330: c8 23 04                 t2 = t1 + t0
  8333: 01                       fallthrough
      :                          @656
  8334: 82 4b                    a4 = u64 [t2]
  8336: c8 7b 0c                 a5 = a4 + a0
  8339: ac bc 30                 jump @661 if a5 <u a4
      :                          @657
  8342: 95 c8 08                 a1 = a5 + 0x8
  8345: d8 c8 09                 a2 = a1 <u a5
  8348: d8 82 08                 a1 = t0 <u a1
  8351: d4 98 08                 a1 = a1 | a2
  8354: 52 08 21                 jump @661 if a1 != 0
      :                          @658
  8357: c9 c3 08                 a1 = t1 - a5
  8360: c8 28 08                 a1 = a1 + t0
  8363: 84 89 07                 a2 = a1 & 0x7
  8366: c8 9c 0c                 a5 = a5 + a2
  8369: 01                       fallthrough
      :                          @659
  8370: 82 4a                    a3 = u64 [t2]
  8372: ab ba da                 jump @656 if a3 != a4
      :                          @660
  8375: 7b 4c                    u64 [t2] = a5
  8377: c9 98 07                 a0 = a1 - a2
  8380: 82 15                    s0 = u64 [sp]
  8382: 95 11 08                 sp = sp + 0x8
  8385: 32 00                    ret
      :                          @661
  8387: 00                       trap
      :                          @662
  8388: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  8391: 7b 10 30                 u64 [sp + 0x30] = ra
  8394: 7b 15 28                 u64 [sp + 0x28] = s0
  8397: 7b 16 20                 u64 [sp + 0x20] = s1
  8400: 64 90                    ra = a2
  8402: 51 08 90 00              jump @674 if a1 == 0
      :                          @663
  8406: 64 86                    s1 = a1
  8408: 82 a8 08                 a1 = u64 [a3 + 0x8]
  8411: 51 08 90 00              jump @675 if a1 == 0
      :                          @664
  8415: 82 a8 10                 a1 = u64 [a3 + 0x10]
  8418: 51 08 e4 00              jump @683 if a1 == 0
      :                          @665
  8422: 7b 18 10                 u64 [sp + 0x10] = a1
  8425: 7b 17 18                 u64 [sp + 0x18] = a0
  8428: 66 67                    a0 = cpop s1
  8430: 33 08 01                 a1 = 0x1
  8433: ab 87 2d 01              jump @691 if a0 != a1
      :                          @666
  8437: 82 a7                    a0 = u64 [a3]
  8439: 7b 17 08                 u64 [sp + 0x8] = a0
  8442: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
  8445: 33 04 10 01 03           t2 = 0x30110
  8450: 33 03 00 00 01           t1 = 0x10000
  8455: c8 34 0a                 a3 = t2 + t1
  8458: 01                       fallthrough
      :                          @667
  8459: 82 ab                    a4 = u64 [a3]
  8461: c8 0b 0c                 a5 = a4 + ra
  8464: ac bc 0e 01              jump @691 if a5 <u a4
      :                          @668
  8468: c8 6c 07                 a0 = a5 + s1
  8471: d8 c7 09                 a2 = a0 <u a5
  8474: d8 73 07                 a0 = t1 <u a0
  8477: d4 97 07                 a0 = a0 | a2
  8480: 52 07 fe 00              jump @691 if a0 != 0
      :                          @669
  8484: c9 c4 09                 a2 = t2 - a5
  8487: c8 39 09                 a2 = a2 + t1
  8490: d2 92 07                 a0 = t0 & a2
  8493: c8 7c 0c                 a5 = a5 + a0
  8496: 01                       fallthrough
      :                          @670
  8497: 82 a5                    s0 = u64 [a3]
  8499: ab b5 d8                 jump @667 if s0 != a4
      :                          @671
  8502: 7b ac                    u64 [a3] = a5
  8504: 7b 10                    u64 [sp] = ra
  8506: c9 79 06                 s1 = a2 - a0
  8509: 64 67                    a0 = s1
  8511: 82 18 08                 a1 = u64 [sp + 0x8]
  8514: 82 15 10                 s0 = u64 [sp + 0x10]
  8517: 64 59                    a2 = s0
  8519: 50 20 e4 00 04 90 00     ra = 228, jump @2839
      :                          @672 [@dyn 114]
  8526: 54 35 00 00 01 db 00     jump @692 if s0 <=u 65536
      :                          @673
  8533: 82 10                    ra = u64 [sp]
  8535: 82 17 18                 a0 = u64 [sp + 0x18]
  8538: 33 08                    a1 = 0
  8540: 7b 76 08                 u64 [a0 + 0x8] = s1
  8543: 28 03 01                 jump @699
      :                          @674
  8546: 49 17 08                 u64 [a0 + 8] = 0
  8549: 33 08 01                 a1 = 0x1
  8552: 28 fa 00                 jump @699
      :                          @675
  8555: 51 00 f1 00              jump @698 if ra == 0
      :                          @676
  8559: 7b 17 18                 u64 [sp + 0x18] = a0
  8562: 66 67                    a0 = cpop s1
  8564: 33 08 01                 a1 = 0x1
  8567: ab 87 a7 00              jump @691 if a0 != a1
      :                          @677
  8571: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
  8574: 33 04 10 01 03           t2 = 0x30110
  8579: 33 03 00 00 01           t1 = 0x10000
  8584: c8 34 0a                 a3 = t2 + t1
  8587: 01                       fallthrough
      :                          @678
  8588: 82 ab                    a4 = u64 [a3]
  8590: c8 0b 0c                 a5 = a4 + ra
  8593: ac bc 8d 00              jump @691 if a5 <u a4
      :                          @679
  8597: c8 6c 07                 a0 = a5 + s1
  8600: d8 c7 09                 a2 = a0 <u a5
  8603: d8 73 07                 a0 = t1 <u a0
  8606: d4 97 07                 a0 = a0 | a2
  8609: 52 07 7d                 jump @691 if a0 != 0
      :                          @680
  8612: c9 c4 09                 a2 = t2 - a5
  8615: c8 39 09                 a2 = a2 + t1
  8618: d2 92 07                 a0 = t0 & a2
  8621: c8 7c 0c                 a5 = a5 + a0
  8624: 01                       fallthrough
      :                          @681
  8625: 82 a5                    s0 = u64 [a3]
  8627: ab b5 d9                 jump @678 if s0 != a4
      :                          @682
  8630: 7b ac                    u64 [a3] = a5
  8632: c9 79 06                 s1 = a2 - a0
  8635: 82 17 18                 a0 = u64 [sp + 0x18]
  8638: 33 08                    a1 = 0
  8640: 7b 76 08                 u64 [a0 + 0x8] = s1
  8643: 28 9f 00                 jump @699
      :                          @683
  8646: 51 00 96 00              jump @698 if ra == 0
      :                          @684
  8650: 7b 17 18                 u64 [sp + 0x18] = a0
  8653: 66 67                    a0 = cpop s1
  8655: 33 08 01                 a1 = 0x1
  8658: ab 87 4c                 jump @691 if a0 != a1
      :                          @685
  8661: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
  8664: 33 04 10 01 03           t2 = 0x30110
  8669: 33 03 00 00 01           t1 = 0x10000
  8674: c8 34 0a                 a3 = t2 + t1
  8677: 01                       fallthrough
      :                          @686
  8678: 82 ab                    a4 = u64 [a3]
  8680: c8 0b 0c                 a5 = a4 + ra
  8683: ac bc 33                 jump @691 if a5 <u a4
      :                          @687
  8686: c8 6c 09                 a2 = a5 + s1
  8689: d8 c9 05                 s0 = a2 <u a5
  8692: d8 93 09                 a2 = t1 <u a2
  8695: d4 59 09                 a2 = a2 | s0
  8698: 52 09 24                 jump @691 if a2 != 0
      :                          @688
  8701: c9 c4 09                 a2 = t2 - a5
  8704: c8 39 09                 a2 = a2 + t1
  8707: d2 92 05                 s0 = t0 & a2
  8710: c8 5c 0c                 a5 = a5 + s0
  8713: 01                       fallthrough
      :                          @689
  8714: 82 a7                    a0 = u64 [a3]
  8716: ab b7 da                 jump @686 if a0 != a4
      :                          @690
  8719: 7b ac                    u64 [a3] = a5
  8721: c9 59 06                 s1 = a2 - s0
  8724: 82 17 18                 a0 = u64 [sp + 0x18]
  8727: 33 08                    a1 = 0
  8729: 7b 76 08                 u64 [a0 + 0x8] = s1
  8732: 28 46                    jump @699
      :                          @691
  8734: 82 17 18                 a0 = u64 [sp + 0x18]
  8737: 7b 76 08                 u64 [a0 + 0x8] = s1
  8740: 33 08 01                 a1 = 0x1
  8743: 28 3b                    jump @699
      :                          @692
  8745: 33 08 10 01 03           a1 = 0x30110
  8750: 95 87 00 00 01           a0 = a1 + 0x10000
  8755: 82 10                    ra = u64 [sp]
  8757: 82 1c 10                 a5 = u64 [sp + 0x10]
  8760: 82 15 08                 s0 = u64 [sp + 0x8]
  8763: 01                       fallthrough
      :                          @693
  8764: 82 78                    a1 = u64 [a0]
  8766: c9 87 09                 a2 = a0 - a1
  8769: ab 59 11                 jump @697 if a2 != s0
      :                          @694
  8772: c9 c8 09                 a2 = a1 - a5
  8775: 01                       fallthrough
      :                          @695
  8776: 82 7a                    a3 = u64 [a0]
  8778: ab 8a f2                 jump @693 if a3 != a1
      :                          @696
  8781: 7b 79                    u64 [a0] = a2
  8783: 33 0b                    a4 = 0
  8785: 01                       fallthrough
      :                          @697
  8786: 82 17 18                 a0 = u64 [sp + 0x18]
  8789: 33 08                    a1 = 0
  8791: 7b 76 08                 u64 [a0 + 0x8] = s1
  8794: 28 08                    jump @699
      :                          @698
  8796: 33 08                    a1 = 0
  8798: 7b 76 08                 u64 [a0 + 0x8] = s1
  8801: 01                       fallthrough
      :                          @699
  8802: 7b 70 10                 u64 [a0 + 0x10] = ra
  8805: 7b 78                    u64 [a0] = a1
  8807: 82 10 30                 ra = u64 [sp + 0x30]
  8810: 82 15 28                 s0 = u64 [sp + 0x28]
  8813: 82 16 20                 s1 = u64 [sp + 0x20]
  8816: 95 11 38                 sp = sp + 0x38
  8819: 32 00                    ret
      :                          @700
  8821: 51 07 3b                 jump @706 if a0 == 0
      :                          @701
  8824: 33 0a 10 01 03           a3 = 0x30110
  8829: 33 02 00 00 01           t0 = 0x10000
  8834: c8 2a 0a                 a3 = a3 + t0
  8837: 01                       fallthrough
      :                          @702
  8838: 82 ab                    a4 = u64 [a3]
  8840: c8 7b 09                 a2 = a4 + a0
  8843: ac b9 2b                 jump @707 if a2 <u a4
      :                          @703
  8846: 95 9c 01                 a5 = a2 + 0x1
  8849: 88 c8 01                 a1 = a5 <u 0x1
  8852: d8 c2 0c                 a5 = t0 <u a5
  8855: d4 c8 08                 a1 = a1 | a5
  8858: 52 08 1c                 jump @707 if a1 != 0
      :                          @704
  8861: 82 a8                    a1 = u64 [a3]
  8863: ab b8 e7                 jump @702 if a1 != a4
      :                          @705
  8866: 7b a9                    u64 [a3] = a2
  8868: 33 0c                    a5 = 0
  8870: 33 08 10 01 04           a1 = 0x40110
  8875: c9 98 08                 a1 = a1 - a2
  8878: 32 00                    ret
      :                          @706
  8880: 33 08 01                 a1 = 0x1
  8883: 28 21 6e                 jump @2354
      :                          @707
  8886: 00                       trap
      :                          @708
  8887: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  8890: 7b 10 40                 u64 [sp + 0x40] = ra
  8893: 7b 15 38                 u64 [sp + 0x38] = s0
  8896: 7b 16 30                 u64 [sp + 0x30] = s1
  8899: 95 88 01                 a1 = a1 + 0x1
  8902: 51 08 5b                 jump @716 if a1 == 0
      :                          @709
  8905: 64 75                    s0 = a0
  8907: 82 77                    a0 = u64 [a0]
  8909: 97 79 01                 a2 = a0 << 0x1
  8912: 33 0a 04                 a3 = 0x4
  8915: e4 a8 08                 a1 = maxu(a1, a3)
  8918: e4 89 06                 s1 = maxu(a2, a1)
  8921: 98 68 3c                 a1 = s1 >> 0x3c
  8924: 88 88 01                 a1 = a1 <u 0x1
  8927: 97 69 03                 a2 = s1 << 0x3
  8930: 97 88 03                 a1 = a1 << 0x3
  8933: 51 07 15                 jump @711 if a0 == 0
      :                          @710
  8936: 82 5a 08                 a3 = u64 [s0 + 0x8]
  8939: 97 77 03                 a0 = a0 << 0x3
  8942: 7b 1a 18                 u64 [sp + 0x18] = a3
  8945: 49 11 20 08              u64 [sp + 32] = 0x8
  8949: 7b 17 28                 u64 [sp + 0x28] = a0
  8952: 28 06                    jump @712
      :                          @711
  8954: 49 11 20                 u64 [sp + 32] = 0
  8957: 01                       fallthrough
      :                          @712
  8958: 64 17                    a0 = sp
  8960: 95 1a 18                 a3 = sp + 0x18
  8963: 50 20 e6 00 c1 fd        ra = 230, jump @662
      :                          @713 [@dyn 115]
  8969: 82 18                    a1 = u64 [sp]
  8971: 82 17 08                 a0 = u64 [sp + 0x8]
  8974: 51 08 14                 jump @717 if a1 == 0
      :                          @714
  8977: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  8987: aa 87 0d                 jump @718 if a0 == a1
      :                          @715
  8990: 52 07 18                 jump @719 if a0 != 0
      :                          @716
  8993: 00                       trap
      :                          @717
  8994: 7b 57 08                 u64 [s0 + 0x8] = a0
  8997: 7b 56                    u64 [s0] = s1
  8999: 01                       fallthrough
      :                          @718
  9000: 82 10 40                 ra = u64 [sp + 0x40]
  9003: 82 15 38                 s0 = u64 [sp + 0x38]
  9006: 82 16 30                 s1 = u64 [sp + 0x30]
  9009: 95 11 48                 sp = sp + 0x48
  9012: 32 00                    ret
      :                          @719
  9014: 00                       trap
      :                          @720
  9015: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  9018: 7b 10 40                 u64 [sp + 0x40] = ra
  9021: 7b 15 38                 u64 [sp + 0x38] = s0
  9024: 7b 16 30                 u64 [sp + 0x30] = s1
  9027: 95 88 01                 a1 = a1 + 0x1
  9030: 51 08 54                 jump @728 if a1 == 0
      :                          @721
  9033: 64 75                    s0 = a0
  9035: 82 77                    a0 = u64 [a0]
  9037: 97 79 01                 a2 = a0 << 0x1
  9040: 33 0a 08                 a3 = 0x8
  9043: e4 a8 08                 a1 = maxu(a1, a3)
  9046: e4 89 06                 s1 = maxu(a2, a1)
  9049: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  9052: 98 88 3f                 a1 = a1 >> 0x3f
  9055: 51 07 12                 jump @723 if a0 == 0
      :                          @722
  9058: 82 59 08                 a2 = u64 [s0 + 0x8]
  9061: 7b 19 18                 u64 [sp + 0x18] = a2
  9064: 49 11 20 01              u64 [sp + 32] = 0x1
  9068: 7b 17 28                 u64 [sp + 0x28] = a0
  9071: 28 06                    jump @724
      :                          @723
  9073: 49 11 20                 u64 [sp + 32] = 0
  9076: 01                       fallthrough
      :                          @724
  9077: 64 17                    a0 = sp
  9079: 95 1a 18                 a3 = sp + 0x18
  9082: 64 69                    a2 = s1
  9084: 50 20 e8 00 48 fd        ra = 232, jump @662
      :                          @725 [@dyn 116]
  9090: 82 18                    a1 = u64 [sp]
  9092: 82 17 08                 a0 = u64 [sp + 0x8]
  9095: 51 08 14                 jump @729 if a1 == 0
      :                          @726
  9098: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  9108: aa 87 0d                 jump @730 if a0 == a1
      :                          @727
  9111: 52 07 18                 jump @731 if a0 != 0
      :                          @728
  9114: 00                       trap
      :                          @729
  9115: 7b 57 08                 u64 [s0 + 0x8] = a0
  9118: 7b 56                    u64 [s0] = s1
  9120: 01                       fallthrough
      :                          @730
  9121: 82 10 40                 ra = u64 [sp + 0x40]
  9124: 82 15 38                 s0 = u64 [sp + 0x38]
  9127: 82 16 30                 s1 = u64 [sp + 0x30]
  9130: 95 11 48                 sp = sp + 0x48
  9133: 32 00                    ret
      :                          @731
  9135: 00                       trap
      :                          @732 [@dyn 117]
  9136: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  9139: 7b 10 30                 u64 [sp + 0x30] = ra
  9142: 7b 15 28                 u64 [sp + 0x28] = s0
  9145: 7b 16 20                 u64 [sp + 0x20] = s1
  9148: 82 79                    a2 = u64 [a0]
  9150: 64 85                    s0 = a1
  9152: 51 09 9c 00              jump @743 if a2 == 0
      :                          @733
  9156: 82 58 28                 a1 = u64 [s0 + 0x28]
  9159: 95 77 08                 a0 = a0 + 0x8
  9162: 7b 17                    u64 [sp] = a0
  9164: 82 57 20                 a0 = u64 [s0 + 0x20]
  9167: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9170: 33 08 e8 00 01           a1 = 0x100e8
  9175: 33 09 04                 a2 = 0x4
  9178: b4 a0 02 ec 00           ra = 236, jump [a3]
      :                          @734 [@dyn 118]
  9183: 7b 15 10                 u64 [sp + 0x10] = s0
  9186: 78 17 18                 u8 [sp + 0x18] = a0
  9189: 49 11 08                 u64 [sp + 8] = 0
  9192: 46 11 19                 u8 [sp + 25] = 0
  9195: 33 09 18                 a2 = 0x18
  9198: 95 17 08                 a0 = sp + 0x8
  9201: 64 18                    a1 = sp
  9203: 50 20 ee 00 00 9c 00     ra = 238, jump @3140
      :                          @735 [@dyn 119]
  9210: 82 17 08                 a0 = u64 [sp + 0x8]
  9213: 7c 18 18                 a1 = u8 [sp + 0x18]
  9216: 51 07 7b                 jump @744 if a0 == 0
      :                          @736
  9219: 33 05 01                 s0 = 0x1
  9222: 52 08 78                 jump @745 if a1 != 0
      :                          @737
  9225: 7c 18 19                 a1 = u8 [sp + 0x19]
  9228: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9231: 8e 77                    a0 = a0 >u 0
  9233: 82 16 10                 s1 = u64 [sp + 0x10]
  9236: 88 88 01                 a1 = a1 <u 0x1
  9239: d4 87 07                 a0 = a0 | a1
  9242: 52 07 28                 jump @741 if a0 != 0
      :                          @738
  9245: 7c 67 34                 a0 = u8 [s1 + 0x34]
  9248: 84 77 04                 a0 = a0 & 0x4
  9251: 52 07 1f                 jump @741 if a0 != 0
      :                          @739
  9254: 82 68 28                 a1 = u64 [s1 + 0x28]
  9257: 82 67 20                 a0 = u64 [s1 + 0x20]
  9260: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9263: 33 08 e7 10 01           a1 = 0x110e7
  9268: 33 09 01                 a2 = 0x1
  9271: 33 05 01                 s0 = 0x1
  9274: b4 a0 02 f0 00           ra = 240, jump [a3]
      :                          @740 [@dyn 120]
  9279: 52 07 3f                 jump @745 if a0 != 0
      :                          @741
  9282: 82 68 28                 a1 = u64 [s1 + 0x28]
  9285: 82 67 20                 a0 = u64 [s1 + 0x20]
  9288: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9291: 33 08 a8 10 01           a1 = 0x110a8
  9296: 33 09 01                 a2 = 0x1
  9299: b4 a0 02 f2 00           ra = 242, jump [a3]
      :                          @742 [@dyn 121]
  9304: 64 75                    s0 = a0
  9306: 28 24                    jump @745
      :                          @743
  9308: 82 58 28                 a1 = u64 [s0 + 0x28]
  9311: 82 57 20                 a0 = u64 [s0 + 0x20]
  9314: 82 8c 18                 a5 = u64 [a1 + 0x18]
  9317: 33 08 f8 00 01           a1 = 0x100f8
  9322: 33 09 04                 a2 = 0x4
  9325: 82 10 30                 ra = u64 [sp + 0x30]
  9328: 82 15 28                 s0 = u64 [sp + 0x28]
  9331: 82 16 20                 s1 = u64 [sp + 0x20]
  9334: 95 11 38                 sp = sp + 0x38
  9337: 32 0c                    jump [a5]
      :                          @744
  9339: 8e 85                    s0 = a1 >u 0
  9341: 01                       fallthrough
      :                          @745
  9342: 64 57                    a0 = s0
  9344: 82 10 30                 ra = u64 [sp + 0x30]
  9347: 82 15 28                 s0 = u64 [sp + 0x28]
  9350: 82 16 20                 s1 = u64 [sp + 0x20]
  9353: 95 11 38                 sp = sp + 0x38
  9356: 32 00                    ret
      :                          @746 [@dyn 122]
  9358: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  9361: 7b 10 30                 u64 [sp + 0x30] = ra
  9364: 7b 15 28                 u64 [sp + 0x28] = s0
  9367: 7b 16 20                 u64 [sp + 0x20] = s1
  9370: 82 79                    a2 = u64 [a0]
  9372: 64 85                    s0 = a1
  9374: 51 09 9c 00              jump @757 if a2 == 0
      :                          @747
  9378: 82 58 28                 a1 = u64 [s0 + 0x28]
  9381: 95 77 08                 a0 = a0 + 0x8
  9384: 7b 17                    u64 [sp] = a0
  9386: 82 57 20                 a0 = u64 [s0 + 0x20]
  9389: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9392: 33 08 e8 00 01           a1 = 0x100e8
  9397: 33 09 04                 a2 = 0x4
  9400: b4 a0 02 f6 00           ra = 246, jump [a3]
      :                          @748 [@dyn 123]
  9405: 7b 15 10                 u64 [sp + 0x10] = s0
  9408: 78 17 18                 u8 [sp + 0x18] = a0
  9411: 49 11 08                 u64 [sp + 8] = 0
  9414: 46 11 19                 u8 [sp + 25] = 0
  9417: 33 09 1c                 a2 = 0x1c
  9420: 95 17 08                 a0 = sp + 0x8
  9423: 64 18                    a1 = sp
  9425: 50 20 f8 00 22 9b 00     ra = 248, jump @3140
      :                          @749 [@dyn 124]
  9432: 82 17 08                 a0 = u64 [sp + 0x8]
  9435: 7c 18 18                 a1 = u8 [sp + 0x18]
  9438: 51 07 7b                 jump @758 if a0 == 0
      :                          @750
  9441: 33 05 01                 s0 = 0x1
  9444: 52 08 78                 jump @759 if a1 != 0
      :                          @751
  9447: 7c 18 19                 a1 = u8 [sp + 0x19]
  9450: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9453: 8e 77                    a0 = a0 >u 0
  9455: 82 16 10                 s1 = u64 [sp + 0x10]
  9458: 88 88 01                 a1 = a1 <u 0x1
  9461: d4 87 07                 a0 = a0 | a1
  9464: 52 07 28                 jump @755 if a0 != 0
      :                          @752
  9467: 7c 67 34                 a0 = u8 [s1 + 0x34]
  9470: 84 77 04                 a0 = a0 & 0x4
  9473: 52 07 1f                 jump @755 if a0 != 0
      :                          @753
  9476: 82 68 28                 a1 = u64 [s1 + 0x28]
  9479: 82 67 20                 a0 = u64 [s1 + 0x20]
  9482: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9485: 33 08 e7 10 01           a1 = 0x110e7
  9490: 33 09 01                 a2 = 0x1
  9493: 33 05 01                 s0 = 0x1
  9496: b4 a0 02 fa 00           ra = 250, jump [a3]
      :                          @754 [@dyn 125]
  9501: 52 07 3f                 jump @759 if a0 != 0
      :                          @755
  9504: 82 68 28                 a1 = u64 [s1 + 0x28]
  9507: 82 67 20                 a0 = u64 [s1 + 0x20]
  9510: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9513: 33 08 a8 10 01           a1 = 0x110a8
  9518: 33 09 01                 a2 = 0x1
  9521: b4 a0 02 fc 00           ra = 252, jump [a3]
      :                          @756 [@dyn 126]
  9526: 64 75                    s0 = a0
  9528: 28 24                    jump @759
      :                          @757
  9530: 82 58 28                 a1 = u64 [s0 + 0x28]
  9533: 82 57 20                 a0 = u64 [s0 + 0x20]
  9536: 82 8c 18                 a5 = u64 [a1 + 0x18]
  9539: 33 08 f8 00 01           a1 = 0x100f8
  9544: 33 09 04                 a2 = 0x4
  9547: 82 10 30                 ra = u64 [sp + 0x30]
  9550: 82 15 28                 s0 = u64 [sp + 0x28]
  9553: 82 16 20                 s1 = u64 [sp + 0x20]
  9556: 95 11 38                 sp = sp + 0x38
  9559: 32 0c                    jump [a5]
      :                          @758
  9561: 8e 85                    s0 = a1 >u 0
  9563: 01                       fallthrough
      :                          @759
  9564: 64 57                    a0 = s0
  9566: 82 10 30                 ra = u64 [sp + 0x30]
  9569: 82 15 28                 s0 = u64 [sp + 0x28]
  9572: 82 16 20                 s1 = u64 [sp + 0x20]
  9575: 95 11 38                 sp = sp + 0x38
  9578: 32 00                    ret
      :                          @760 [@dyn 127]
  9580: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  9583: 7b 10 30                 u64 [sp + 0x30] = ra
  9586: 7b 15 28                 u64 [sp + 0x28] = s0
  9589: 7b 16 20                 u64 [sp + 0x20] = s1
  9592: 82 79                    a2 = u64 [a0]
  9594: 64 85                    s0 = a1
  9596: 51 09 9c 00              jump @771 if a2 == 0
      :                          @761
  9600: 82 58 28                 a1 = u64 [s0 + 0x28]
  9603: 95 77 08                 a0 = a0 + 0x8
  9606: 7b 17                    u64 [sp] = a0
  9608: 82 57 20                 a0 = u64 [s0 + 0x20]
  9611: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9614: 33 08 e8 00 01           a1 = 0x100e8
  9619: 33 09 04                 a2 = 0x4
  9622: b4 a0 02 00 01           ra = 256, jump [a3]
      :                          @762 [@dyn 128]
  9627: 7b 15 10                 u64 [sp + 0x10] = s0
  9630: 78 17 18                 u8 [sp + 0x18] = a0
  9633: 49 11 08                 u64 [sp + 8] = 0
  9636: 46 11 19                 u8 [sp + 25] = 0
  9639: 33 09 0c                 a2 = 0xc
  9642: 95 17 08                 a0 = sp + 0x8
  9645: 64 18                    a1 = sp
  9647: 50 20 02 01 44 9a 00     ra = 258, jump @3140
      :                          @763 [@dyn 129]
  9654: 82 17 08                 a0 = u64 [sp + 0x8]
  9657: 7c 18 18                 a1 = u8 [sp + 0x18]
  9660: 51 07 7b                 jump @772 if a0 == 0
      :                          @764
  9663: 33 05 01                 s0 = 0x1
  9666: 52 08 78                 jump @773 if a1 != 0
      :                          @765
  9669: 7c 18 19                 a1 = u8 [sp + 0x19]
  9672: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9675: 8e 77                    a0 = a0 >u 0
  9677: 82 16 10                 s1 = u64 [sp + 0x10]
  9680: 88 88 01                 a1 = a1 <u 0x1
  9683: d4 87 07                 a0 = a0 | a1
  9686: 52 07 28                 jump @769 if a0 != 0
      :                          @766
  9689: 7c 67 34                 a0 = u8 [s1 + 0x34]
  9692: 84 77 04                 a0 = a0 & 0x4
  9695: 52 07 1f                 jump @769 if a0 != 0
      :                          @767
  9698: 82 68 28                 a1 = u64 [s1 + 0x28]
  9701: 82 67 20                 a0 = u64 [s1 + 0x20]
  9704: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9707: 33 08 e7 10 01           a1 = 0x110e7
  9712: 33 09 01                 a2 = 0x1
  9715: 33 05 01                 s0 = 0x1
  9718: b4 a0 02 04 01           ra = 260, jump [a3]
      :                          @768 [@dyn 130]
  9723: 52 07 3f                 jump @773 if a0 != 0
      :                          @769
  9726: 82 68 28                 a1 = u64 [s1 + 0x28]
  9729: 82 67 20                 a0 = u64 [s1 + 0x20]
  9732: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9735: 33 08 a8 10 01           a1 = 0x110a8
  9740: 33 09 01                 a2 = 0x1
  9743: b4 a0 02 06 01           ra = 262, jump [a3]
      :                          @770 [@dyn 131]
  9748: 64 75                    s0 = a0
  9750: 28 24                    jump @773
      :                          @771
  9752: 82 58 28                 a1 = u64 [s0 + 0x28]
  9755: 82 57 20                 a0 = u64 [s0 + 0x20]
  9758: 82 8c 18                 a5 = u64 [a1 + 0x18]
  9761: 33 08 f8 00 01           a1 = 0x100f8
  9766: 33 09 04                 a2 = 0x4
  9769: 82 10 30                 ra = u64 [sp + 0x30]
  9772: 82 15 28                 s0 = u64 [sp + 0x28]
  9775: 82 16 20                 s1 = u64 [sp + 0x20]
  9778: 95 11 38                 sp = sp + 0x38
  9781: 32 0c                    jump [a5]
      :                          @772
  9783: 8e 85                    s0 = a1 >u 0
  9785: 01                       fallthrough
      :                          @773
  9786: 64 57                    a0 = s0
  9788: 82 10 30                 ra = u64 [sp + 0x30]
  9791: 82 15 28                 s0 = u64 [sp + 0x28]
  9794: 82 16 20                 s1 = u64 [sp + 0x20]
  9797: 95 11 38                 sp = sp + 0x38
  9800: 32 00                    ret
      :                          @774
  9802: 82 4b                    a4 = u64 [t2]
  9804: 95 bc 50                 a5 = a4 + 0x50
  9807: ac bc 56 02              jump @779 if a5 <u a4
      :                          @775
  9811: 95 c8 08                 a1 = a5 + 0x8
  9814: d8 c8 09                 a2 = a1 <u a5
  9817: d8 82 08                 a1 = t0 <u a1
  9820: d4 98 08                 a1 = a1 | a2
  9823: 52 08 46 02              jump @779 if a1 != 0
      :                          @776
  9827: c9 c3 08                 a1 = t1 - a5
  9830: c8 28 08                 a1 = a1 + t0
  9833: 84 89 07                 a2 = a1 & 0x7
  9836: c8 9c 0c                 a5 = a5 + a2
  9839: 01                       fallthrough
      :                          @777
  9840: 82 4a                    a3 = u64 [t2]
  9842: ab ba d8                 jump @774 if a3 != a4
      :                          @778
  9845: 7b 4c                    u64 [t2] = a5
  9847: 33 0c e0 00 03           a5 = 0x300e0
  9852: 3a 0a e0 00 03           a3 = u64 [0x300e0]
  9857: c9 98 08                 a1 = a1 - a2
  9860: 97 a9 0d                 a2 = a3 << 0xd
  9863: d3 a9 09                 a2 = a2 ^ a3
  9866: 98 9b 07                 a4 = a2 >> 0x7
  9869: 3a 0a 00 00 03           a3 = u64 [0x30000]
  9874: d3 b9 09                 a2 = a2 ^ a4
  9877: 97 9b 11                 a4 = a2 << 0x11
  9880: d3 b9 09                 a2 = a2 ^ a4
  9883: ca a9 05                 s0 = a2 * a3
  9886: 3a 0b 08 00 03           a4 = u64 [0x30008]
  9891: 3e 09 e0 00 03           u64 [0x300e0] = a2
  9896: 98 59 01                 a2 = s0 >> 0x1
  9899: d6 b9 09                 a2 = a2 mulhu a4
  9902: 98 99 04                 a2 = a2 >> 0x4
  9905: 33 02 32                 t0 = 0x32
  9908: ca 29 09                 a2 = a2 * t0
  9911: c9 95 05                 s0 = s0 - a2
  9914: 95 55 01                 s0 = s0 + 0x1
  9917: 7b 85                    u64 [a1] = s0
  9919: 3a 05 e0 00 03           s0 = u64 [0x300e0]
  9924: 97 59 0d                 a2 = s0 << 0xd
  9927: d3 95 05                 s0 = s0 ^ a2
  9930: 98 59 07                 a2 = s0 >> 0x7
  9933: d3 95 05                 s0 = s0 ^ a2
  9936: 97 59 11                 a2 = s0 << 0x11
  9939: d3 59 09                 a2 = a2 ^ s0
  9942: ca a9 05                 s0 = a2 * a3
  9945: 3e 09 e0 00 03           u64 [0x300e0] = a2
  9950: 98 59 01                 a2 = s0 >> 0x1
  9953: d6 b9 09                 a2 = a2 mulhu a4
  9956: 98 99 04                 a2 = a2 >> 0x4
  9959: ca 29 09                 a2 = a2 * t0
  9962: c9 95 05                 s0 = s0 - a2
  9965: 95 55 01                 s0 = s0 + 0x1
  9968: 7b 85 08                 u64 [a1 + 0x8] = s0
  9971: 3a 05 e0 00 03           s0 = u64 [0x300e0]
  9976: 97 59 0d                 a2 = s0 << 0xd
  9979: d3 95 05                 s0 = s0 ^ a2
  9982: 98 59 07                 a2 = s0 >> 0x7
  9985: d3 95 05                 s0 = s0 ^ a2
  9988: 97 59 11                 a2 = s0 << 0x11
  9991: d3 59 09                 a2 = a2 ^ s0
  9994: ca a9 05                 s0 = a2 * a3
  9997: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10002: 98 59 01                 a2 = s0 >> 0x1
 10005: d6 b9 09                 a2 = a2 mulhu a4
 10008: 98 99 04                 a2 = a2 >> 0x4
 10011: ca 29 09                 a2 = a2 * t0
 10014: c9 95 05                 s0 = s0 - a2
 10017: 95 55 01                 s0 = s0 + 0x1
 10020: 7b 85 10                 u64 [a1 + 0x10] = s0
 10023: 3a 05 e0 00 03           s0 = u64 [0x300e0]
 10028: 97 59 0d                 a2 = s0 << 0xd
 10031: d3 95 05                 s0 = s0 ^ a2
 10034: 98 59 07                 a2 = s0 >> 0x7
 10037: d3 95 05                 s0 = s0 ^ a2
 10040: 97 59 11                 a2 = s0 << 0x11
 10043: d3 59 09                 a2 = a2 ^ s0
 10046: ca a9 05                 s0 = a2 * a3
 10049: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10054: 98 59 01                 a2 = s0 >> 0x1
 10057: d6 b9 09                 a2 = a2 mulhu a4
 10060: 98 99 04                 a2 = a2 >> 0x4
 10063: ca 29 09                 a2 = a2 * t0
 10066: c9 95 05                 s0 = s0 - a2
 10069: 95 55 01                 s0 = s0 + 0x1
 10072: 7b 85 18                 u64 [a1 + 0x18] = s0
 10075: 3a 05 e0 00 03           s0 = u64 [0x300e0]
 10080: 97 59 0d                 a2 = s0 << 0xd
 10083: d3 95 05                 s0 = s0 ^ a2
 10086: 98 59 07                 a2 = s0 >> 0x7
 10089: d3 95 05                 s0 = s0 ^ a2
 10092: 97 59 11                 a2 = s0 << 0x11
 10095: d3 59 09                 a2 = a2 ^ s0
 10098: ca a9 05                 s0 = a2 * a3
 10101: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10106: 98 59 01                 a2 = s0 >> 0x1
 10109: d6 b9 09                 a2 = a2 mulhu a4
 10112: 98 99 04                 a2 = a2 >> 0x4
 10115: ca 29 09                 a2 = a2 * t0
 10118: c9 95 05                 s0 = s0 - a2
 10121: 95 55 01                 s0 = s0 + 0x1
 10124: 7b 85 20                 u64 [a1 + 0x20] = s0
 10127: 3a 05 e0 00 03           s0 = u64 [0x300e0]
 10132: 97 59 0d                 a2 = s0 << 0xd
 10135: d3 95 05                 s0 = s0 ^ a2
 10138: 98 59 07                 a2 = s0 >> 0x7
 10141: d3 95 05                 s0 = s0 ^ a2
 10144: 97 59 11                 a2 = s0 << 0x11
 10147: d3 59 09                 a2 = a2 ^ s0
 10150: ca a9 05                 s0 = a2 * a3
 10153: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10158: 98 59 01                 a2 = s0 >> 0x1
 10161: d6 b9 09                 a2 = a2 mulhu a4
 10164: 98 99 04                 a2 = a2 >> 0x4
 10167: ca 29 09                 a2 = a2 * t0
 10170: c9 95 05                 s0 = s0 - a2
 10173: 95 55 01                 s0 = s0 + 0x1
 10176: 7b 85 28                 u64 [a1 + 0x28] = s0
 10179: 3a 05 e0 00 03           s0 = u64 [0x300e0]
 10184: 97 59 0d                 a2 = s0 << 0xd
 10187: d3 95 05                 s0 = s0 ^ a2
 10190: 98 59 07                 a2 = s0 >> 0x7
 10193: d3 95 05                 s0 = s0 ^ a2
 10196: 97 59 11                 a2 = s0 << 0x11
 10199: d3 59 09                 a2 = a2 ^ s0
 10202: ca a9 05                 s0 = a2 * a3
 10205: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10210: 98 59 01                 a2 = s0 >> 0x1
 10213: d6 b9 09                 a2 = a2 mulhu a4
 10216: 98 99 04                 a2 = a2 >> 0x4
 10219: ca 29 09                 a2 = a2 * t0
 10222: c9 95 05                 s0 = s0 - a2
 10225: 95 55 01                 s0 = s0 + 0x1
 10228: 7b 85 30                 u64 [a1 + 0x30] = s0
 10231: 3a 05 e0 00 03           s0 = u64 [0x300e0]
 10236: 97 59 0d                 a2 = s0 << 0xd
 10239: d3 95 05                 s0 = s0 ^ a2
 10242: 98 59 07                 a2 = s0 >> 0x7
 10245: d3 95 05                 s0 = s0 ^ a2
 10248: 97 59 11                 a2 = s0 << 0x11
 10251: d3 59 09                 a2 = a2 ^ s0
 10254: ca a9 05                 s0 = a2 * a3
 10257: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10262: 98 59 01                 a2 = s0 >> 0x1
 10265: d6 b9 09                 a2 = a2 mulhu a4
 10268: 98 99 04                 a2 = a2 >> 0x4
 10271: ca 29 09                 a2 = a2 * t0
 10274: c9 95 05                 s0 = s0 - a2
 10277: 95 55 01                 s0 = s0 + 0x1
 10280: 7b 85 38                 u64 [a1 + 0x38] = s0
 10283: 3a 05 e0 00 03           s0 = u64 [0x300e0]
 10288: 97 59 0d                 a2 = s0 << 0xd
 10291: d3 95 05                 s0 = s0 ^ a2
 10294: 98 59 07                 a2 = s0 >> 0x7
 10297: d3 95 05                 s0 = s0 ^ a2
 10300: 97 59 11                 a2 = s0 << 0x11
 10303: d3 59 09                 a2 = a2 ^ s0
 10306: ca a9 05                 s0 = a2 * a3
 10309: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10314: 98 59 01                 a2 = s0 >> 0x1
 10317: d6 b9 09                 a2 = a2 mulhu a4
 10320: 98 99 04                 a2 = a2 >> 0x4
 10323: ca 29 09                 a2 = a2 * t0
 10326: c9 95 05                 s0 = s0 - a2
 10329: 95 55 01                 s0 = s0 + 0x1
 10332: 7b 85 40                 u64 [a1 + 0x40] = s0
 10335: 3a 05 e0 00 03           s0 = u64 [0x300e0]
 10340: 97 59 0d                 a2 = s0 << 0xd
 10343: d3 95 05                 s0 = s0 ^ a2
 10346: 98 59 07                 a2 = s0 >> 0x7
 10349: d3 95 05                 s0 = s0 ^ a2
 10352: 97 59 11                 a2 = s0 << 0x11
 10355: d3 59 09                 a2 = a2 ^ s0
 10358: ca a9 0a                 a3 = a2 * a3
 10361: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10366: 98 a9 01                 a2 = a3 >> 0x1
 10369: d6 b9 09                 a2 = a2 mulhu a4
 10372: 98 99 04                 a2 = a2 >> 0x4
 10375: ca 29 09                 a2 = a2 * t0
 10378: c9 9a 0a                 a3 = a3 - a2
 10381: 95 aa 01                 a3 = a3 + 0x1
 10384: 7b 8a 48                 u64 [a1 + 0x48] = a3
 10387: 33 09 0a                 a2 = 0xa
 10390: 7b 79                    u64 [a0] = a2
 10392: 7b 78 08                 u64 [a0 + 0x8] = a1
 10395: 7b 79 10                 u64 [a0 + 0x10] = a2
 10398: 82 15                    s0 = u64 [sp]
 10400: 95 11 08                 sp = sp + 0x8
 10403: 32 00                    ret
      :                          @779
 10405: 00                       trap
      :                          @780
 10406: 82 4b                    a4 = u64 [t2]
 10408: 95 bc a0 00              a5 = a4 + 0xa0
 10412: ac bc 8d 00              jump @787 if a5 <u a4
      :                          @781
 10416: 95 c8 08                 a1 = a5 + 0x8
 10419: d8 c8 09                 a2 = a1 <u a5
 10422: d8 82 08                 a1 = t0 <u a1
 10425: d4 98 08                 a1 = a1 | a2
 10428: 52 08 7d                 jump @787 if a1 != 0
      :                          @782
 10431: c9 c3 08                 a1 = t1 - a5
 10434: c8 28 08                 a1 = a1 + t0
 10437: 84 89 07                 a2 = a1 & 0x7
 10440: c8 9c 0c                 a5 = a5 + a2
 10443: 01                       fallthrough
      :                          @783
 10444: 82 4a                    a3 = u64 [t2]
 10446: ab ba d8                 jump @780 if a3 != a4
      :                          @784
 10449: 7b 4c                    u64 [t2] = a5
 10451: c9 98 02                 t0 = a1 - a2
 10454: 3a 04 10 00 03           t2 = u64 [0x30010]
 10459: 3a 0a 18 00 03           a3 = u64 [0x30018]
 10464: 33 0b 14                 a4 = 0x14
 10467: 33 0c e0 00 03           a5 = 0x300e0
 10472: 33 03 64                 t1 = 0x64
 10475: 64 28                    a1 = t0
 10477: 01                       fallthrough
      :                          @785
 10478: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 10483: 97 95 0d                 s0 = a2 << 0xd
 10486: d3 59 09                 a2 = a2 ^ s0
 10489: 98 95 07                 s0 = a2 >> 0x7
 10492: d3 59 09                 a2 = a2 ^ s0
 10495: 97 95 11                 s0 = a2 << 0x11
 10498: d3 59 09                 a2 = a2 ^ s0
 10501: ca 49 05                 s0 = a2 * t2
 10504: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10509: 98 59 02                 a2 = s0 >> 0x2
 10512: d6 a9 09                 a2 = a2 mulhu a3
 10515: 98 99 02                 a2 = a2 >> 0x2
 10518: ca 39 09                 a2 = a2 * t1
 10521: c9 95 05                 s0 = s0 - a2
 10524: 7b 85                    u64 [a1] = s0
 10526: 83 bb ff                 i32 a4 = a4 + 0xffffffffffffffff
 10529: 95 88 08                 a1 = a1 + 0x8
 10532: 52 0b ca                 jump @785 if a4 != 0
      :                          @786
 10535: 33 08 14                 a1 = 0x14
 10538: 7b 78                    u64 [a0] = a1
 10540: 7b 72 08                 u64 [a0 + 0x8] = t0
 10543: 7b 78 10                 u64 [a0 + 0x10] = a1
 10546: 82 15                    s0 = u64 [sp]
 10548: 95 11 08                 sp = sp + 0x8
 10551: 32 00                    ret
      :                          @787
 10553: 00                       trap
      :                          @788
 10554: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 10557: 7b 10 28                 u64 [sp + 0x28] = ra
 10560: 7b 15 20                 u64 [sp + 0x20] = s0
 10563: 7b 16 18                 u64 [sp + 0x18] = s1
 10566: 64 75                    s0 = a0
 10568: 51 09 3a                 jump @792 if a2 == 0
      :                          @789
 10571: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 10581: d3 87 07                 a0 = a0 ^ a1
 10584: e1 97 07                 a0 = a0 | ~a2
 10587: 51 07 4d                 jump @794 if a0 == 0
      :                          @790
 10590: cc 98 06                 s1 = a1 /s a2
 10593: ca 96 07                 a0 = s1 * a2
 10596: c9 78 0a                 a3 = a1 - a0
 10599: 64 17                    a0 = sp
 10601: 64 98                    a1 = a2
 10603: 64 a9                    a2 = a3
 10605: 50 20 08 01 cd           ra = 264, jump @788
      :                          @791 [@dyn 132]
 10610: 82 17 10                 a0 = u64 [sp + 0x10]
 10613: 82 19 08                 a2 = u64 [sp + 0x8]
 10616: 82 18                    a1 = u64 [sp]
 10618: ca 76 0a                 a3 = s1 * a0
 10621: c9 a9 09                 a2 = a2 - a3
 10624: 28 12                    jump @793
      :                          @792
 10626: 8e 8a                    a3 = a1 >u 0
 10628: 89 8b                    a4 = a1 <s 0
 10630: 33 07 ff                 a0 = 0xffffffffffffffff
 10633: da ba 07                 a0 = a3 if a4 == 0
 10636: 9a 8a                    a3 = -a1
 10638: e3 a8 08                 a1 = maxs(a1, a3)
 10641: 01                       fallthrough
      :                          @793
 10642: 7b 58                    u64 [s0] = a1
 10644: 7b 57 08                 u64 [s0 + 0x8] = a0
 10647: 7b 59 10                 u64 [s0 + 0x10] = a2
 10650: 82 10 28                 ra = u64 [sp + 0x28]
 10653: 82 15 20                 s0 = u64 [sp + 0x20]
 10656: 82 16 18                 s1 = u64 [sp + 0x18]
 10659: 95 11 30                 sp = sp + 0x30
 10662: 32 00                    ret
      :                          @794
 10664: 00                       trap
      :                          @795 [@dyn 133]
 10665: 82 18                    a1 = u64 [sp]
 10667: 33 07 01                 a0 = 0x1
 10670: ab 78 1a                 jump @797 if a1 != a0
      :                          @796
 10673: 82 18 08                 a1 = u64 [sp + 0x8]
 10676: ce 58 08                 a1 = a1 %s s0
 10679: c8 58 08                 a1 = a1 + s0
 10682: ce 58 08                 a1 = a1 %s s0
 10685: 82 10 20                 ra = u64 [sp + 0x20]
 10688: 82 15 18                 s0 = u64 [sp + 0x18]
 10691: 95 11 28                 sp = sp + 0x28
 10694: 32 00                    ret
      :                          @797
 10696: 33 07                    a0 = 0
 10698: 82 10 20                 ra = u64 [sp + 0x20]
 10701: 82 15 18                 s0 = u64 [sp + 0x18]
 10704: 95 11 28                 sp = sp + 0x28
 10707: 32 00                    ret
      :                          @798
 10709: d8 87 08                 a1 = a0 <u a1
 10712: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
 10715: db 89 04                 t2 = a2 if a1 != 0
 10718: da 8c 03                 t1 = a5 if a1 == 0
 10721: ae 43 26                 jump @803 if t1 >=u t2
      :                          @799
 10724: c8 34 08                 a1 = t2 + t1
 10727: 95 88 01                 a1 = a1 + 0x1
 10730: 98 8c 01                 a5 = a1 >> 0x1
 10733: 64 29                    a2 = t0
 10735: 33 08 01                 a1 = 0x1
 10738: 01                       fallthrough
      :                          @800
 10739: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 10742: 51 09 df                 jump @798 if a2 == 0
      :                          @801
 10745: d6 c8 0a                 a3 = a1 mulhu a5
 10748: ca c8 08                 a1 = a1 * a5
 10751: db ab 08                 a1 = a4 if a3 != 0
 10754: ae 87 f1                 jump @800 if a0 >=u a1
      :                          @802
 10757: 28 d0                    jump @798
      :                          @803
 10759: 64 37                    a0 = t1
 10761: 32 00                    ret
      :                          @804
 10763: 84 89 01                 a2 = a1 & 0x1
 10766: 52 09 08                 jump @806 if a2 != 0
      :                          @805
 10769: 33 07                    a0 = 0
 10771: 28 01 6e                 jump @2445
      :                          @806
 10774: cd 87 0c                 a5 = a0 %u a1
 10777: 51 0c 4f                 jump @817 if a5 == 0
      :                          @807
 10780: 33 07 01                 a0 = 0x1
 10783: 33 03 03                 t1 = 0x3
 10786: 33 02 05                 t0 = 0x5
 10789: 64 8b                    a4 = a1
 10791: 28 18                    jump @810
      :                          @808
 10793: 64 c8                    a1 = a5
 10795: 01                       fallthrough
      :                          @809
 10796: d2 8b 0a                 a3 = a4 & a1
 10799: 84 aa 02                 a3 = a3 & 0x2
 10802: 9a 79                    a2 = -a0
 10804: cd 8b 0c                 a5 = a4 %u a1
 10807: db a9 07                 a0 = a2 if a3 != 0
 10810: 64 8b                    a4 = a1
 10812: 51 0c 37                 jump @818 if a5 == 0
      :                          @810
 10815: 84 c8 01                 a1 = a5 & 0x1
 10818: 52 08 e7                 jump @808 if a1 != 0
      :                          @811
 10821: 84 b8 07                 a1 = a4 & 0x7
 10824: aa 38 06                 jump @813 if a1 == t1
      :                          @812
 10827: ab 28 12                 jump @815 if a1 != t0
      :                          @813
 10830: 98 c8 01                 a1 = a5 >> 0x1
 10833: 84 ca 02                 a3 = a5 & 0x2
 10836: 9a 77                    a0 = -a0
 10838: 64 8c                    a5 = a1
 10840: 51 0a f6                 jump @813 if a3 == 0
      :                          @814
 10843: 28 d1                    jump @809
      :                          @815
 10845: 84 c8 02                 a1 = a5 & 0x2
 10848: 98 cc 01                 a5 = a5 >> 0x1
 10851: 51 08 fa                 jump @815 if a1 == 0
      :                          @816
 10854: 28 c3                    jump @808
      :                          @817
 10856: 33 07 01                 a0 = 0x1
 10859: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 10862: 94 87                    a0 = 0 if a1 != 0
 10864: 28 a4 6d                 jump @2445
      :                          @818
 10867: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 10870: 94 87                    a0 = 0 if a1 != 0
 10872: 32 00                    ret
      :                          @819
 10874: 33 08 02                 a1 = 0x2
 10877: aa 87 2a                 jump @828 if a0 == a1
      :                          @820
 10880: 95 77 01                 a0 = a0 + 0x1
 10883: ac 97 fd                 jump @820 if a0 <u a2
      :                          @821
 10886: 84 78 01                 a1 = a0 & 0x1
 10889: 51 08 f1                 jump @819 if a1 == 0
      :                          @822
 10892: ac a7 20                 jump @829 if a0 <u a3
      :                          @823
 10895: 33 08 03                 a1 = 0x3
 10898: 01                       fallthrough
      :                          @824
 10899: 51 08 1b                 jump @830 if a1 == 0
      :                          @825
 10902: cd 87 0b                 a4 = a0 %u a1
 10905: 51 0b e7                 jump @820 if a4 == 0
      :                          @826
 10908: 95 88 02                 a1 = a1 + 0x2
 10911: ca 88 0b                 a4 = a1 * a1
 10914: ae b7 f1                 jump @824 if a0 >=u a4
      :                          @827
 10917: 32 00                    ret
      :                          @828
 10919: 33 07 02                 a0 = 0x2
 10922: 32 00                    ret
      :                          @829
 10924: 32 00                    ret
      :                          @830
 10926: 00                       trap
      :                          @831
 10927: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 10931: 7b 10 00 01              u64 [sp + 0x100] = ra
 10935: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 10939: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 10943: 64 73                    t1 = a0
 10945: 33 00                    ra = 0
 10947: 95 75 ff                 s0 = a0 + 0xffffffffffffffff
 10950: 49 21 d8 00              u64 [sp + 216] = 0
 10954: 33 07 08                 a0 = 0x8
 10957: 7b 17 e0 00              u64 [sp + 0xe0] = a0
 10961: 84 58 01                 a1 = s0 & 0x1
 10964: 49 21 e8 00              u64 [sp + 232] = 0
 10968: 7b 15 38                 u64 [sp + 0x38] = s0
 10971: 7b 13 50                 u64 [sp + 0x50] = t1
 10974: 52 08 4a                 jump @837 if a1 != 0
      :                          @832
 10977: 33 00                    ra = 0
 10979: 33 09 02                 a2 = 0x2
 10982: 82 16 38                 s1 = u64 [sp + 0x38]
 10985: 28 1c                    jump @834
      :                          @833
 10987: 97 08 03                 a1 = ra << 0x3
 10990: c8 78 08                 a1 = a1 + a0
 10993: 7b 89                    u64 [a1] = a2
 10995: 95 00 01                 ra = ra + 0x1
 10998: 98 65 01                 s0 = s1 >> 0x1
 11001: 84 68 02                 a1 = s1 & 0x2
 11004: 7b 10 e8 00              u64 [sp + 0xe8] = ra
 11008: 64 56                    s1 = s0
 11010: 52 08 26                 jump @837 if a1 != 0
      :                          @834
 11013: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 11017: ab 80 e2                 jump @833 if ra != a1
      :                          @835
 11020: 95 17 d8 00              a0 = sp + 0xd8
 11024: 64 08                    a1 = ra
 11026: 50 20 0c 01 a5 f7        ra = 268, jump @708
      :                          @836 [@dyn 134]
 11032: 33 09 02                 a2 = 0x2
 11035: 82 13 50                 t1 = u64 [sp + 0x50]
 11038: 82 10 e8 00              ra = u64 [sp + 0xe8]
 11042: 82 17 e0 00              a0 = u64 [sp + 0xe0]
 11046: 28 c5                    jump @833
      :                          @837
 11048: 55 15 09 39              jump @843 if s0 >=u 9
      :                          @838
 11052: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 11056: 54 15 01 83 00           jump @852 if s0 <=u 1
      :                          @839
 11061: ab 80 1b                 jump @842 if ra != a1
      :                          @840
 11064: 95 17 d8 00              a0 = sp + 0xd8
 11068: 64 08                    a1 = ra
 11070: 50 20 0e 01 79 f7        ra = 270, jump @708
      :                          @841 [@dyn 135]
 11076: 82 13 50                 t1 = u64 [sp + 0x50]
 11079: 82 10 e8 00              ra = u64 [sp + 0xe8]
 11083: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 11087: 01                       fallthrough
      :                          @842
 11088: 82 14 e0 00              t2 = u64 [sp + 0xe0]
 11092: 97 07 03                 a0 = ra << 0x3
 11095: c8 47 07                 a0 = a0 + t2
 11098: 7b 75                    u64 [a0] = s0
 11100: 95 00 01                 ra = ra + 0x1
 11103: 28 59                    jump @853
      :                          @843
 11105: 33 06 03                 s1 = 0x3
 11108: 28 0b                    jump @845
      :                          @844
 11110: 95 66 02                 s1 = s1 + 0x2
 11113: ca 66 07                 a0 = s1 * s1
 11116: ac 75 c0                 jump @838 if s0 <u a0
      :                          @845
 11119: 51 06 13 07              jump @998 if s1 == 0
      :                          @846
 11123: cd 65 07                 a0 = s0 %u s1
 11126: 52 07 f0                 jump @844 if a0 != 0
      :                          @847
 11129: 28 1e                    jump @849
      :                          @848
 11131: 82 17 e0 00              a0 = u64 [sp + 0xe0]
 11135: 97 08 03                 a1 = ra << 0x3
 11138: c8 87 07                 a0 = a0 + a1
 11141: 7b 76                    u64 [a0] = s1
 11143: 95 00 01                 ra = ra + 0x1
 11146: cb 65 05                 s0 = s0 /u s1
 11149: cd 65 07                 a0 = s0 %u s1
 11152: 7b 10 e8 00              u64 [sp + 0xe8] = ra
 11156: 52 07 d2                 jump @844 if a0 != 0
      :                          @849
 11159: 82 17 d8 00              a0 = u64 [sp + 0xd8]
 11163: ab 70 e0                 jump @848 if ra != a0
      :                          @850
 11166: 95 17 d8 00              a0 = sp + 0xd8
 11170: 64 08                    a1 = ra
 11172: 50 20 10 01 13 f7        ra = 272, jump @708
      :                          @851 [@dyn 136]
 11178: 82 13 50                 t1 = u64 [sp + 0x50]
 11181: 82 10 e8 00              ra = u64 [sp + 0xe8]
 11185: 28 ca                    jump @848
      :                          @852
 11187: 82 14 e0 00              t2 = u64 [sp + 0xe0]
 11191: 01                       fallthrough
      :                          @853
 11192: 95 45 10                 s0 = t2 + 0x10
 11195: 7b 14 80 00              u64 [sp + 0x80] = t2
 11199: 7b 10 78                 u64 [sp + 0x78] = ra
 11202: 7b 18                    u64 [sp] = a1
 11204: 55 10 15 23              jump @857 if ra >=u 21
      :                          @854
 11208: 54 10 01 be 05           jump @964 if ra <=u 1
      :                          @855
 11213: 33 09 01                 a2 = 0x1
 11216: 64 47                    a0 = t2
 11218: 64 08                    a1 = ra
 11220: 50 20 12 01 ab e3        ra = 274, jump @304
      :                          @856 [@dyn 137]
 11226: 82 10 78                 ra = u64 [sp + 0x78]
 11229: 82 14 80 00              t2 = u64 [sp + 0x80]
 11233: 82 13 50                 t1 = u64 [sp + 0x50]
 11236: 28 82 05                 jump @961
      :                          @857
 11239: 7b 15 08                 u64 [sp + 0x8] = s0
 11242: 97 07 02                 a0 = ra << 0x2
 11245: 14 08 f8 ff ff ff ff ff ff 7f a1 = 0x7ffffffffffffff8
 11255: d2 87 07                 a0 = a0 & a1
 11258: 7b 17 28                 u64 [sp + 0x28] = a0
 11261: 33 07 10 01 03           a0 = 0x30110
 11266: 33 02 00 00 01           t0 = 0x10000
 11271: c8 27 09                 a2 = a0 + t0
 11274: 01                       fallthrough
      :                          @858
 11275: 82 9a                    a3 = u64 [a2]
 11277: 82 1b 28                 a4 = u64 [sp + 0x28]
 11280: c8 ab 0b                 a4 = a4 + a3
 11283: ac ab 71 06              jump @1000 if a4 <u a3
      :                          @859
 11287: 95 b8 08                 a1 = a4 + 0x8
 11290: d8 b8 0c                 a5 = a1 <u a4
 11293: d8 82 08                 a1 = t0 <u a1
 11296: d4 c8 08                 a1 = a1 | a5
 11299: 52 08 61 06              jump @1000 if a1 != 0
      :                          @860
 11303: c9 b7 08                 a1 = a0 - a4
 11306: c8 28 08                 a1 = a1 + t0
 11309: 84 8c 07                 a5 = a1 & 0x7
 11312: c8 cb 0b                 a4 = a4 + a5
 11315: 01                       fallthrough
      :                          @861
 11316: 82 95                    s0 = u64 [a2]
 11318: ab a5 d5                 jump @858 if s0 != a3
      :                          @862
 11321: 7b 9b                    u64 [a2] = a4
 11323: c9 c8 08                 a1 = a1 - a5
 11326: 7b 18 c8 00              u64 [sp + 0xc8] = a1
 11330: 33 08 10 01 03           a1 = 0x30110
 11335: 33 02 00 00 01           t0 = 0x10000
 11340: c8 28 0b                 a4 = a1 + t0
 11343: 01                       fallthrough
      :                          @863
 11344: 82 bc                    a5 = u64 [a4]
 11346: 95 c6 00 01              s1 = a5 + 0x100
 11350: ac c6 2e 06              jump @1000 if s1 <u a5
      :                          @864
 11354: 95 67 08                 a0 = s1 + 0x8
 11357: d8 67 09                 a2 = a0 <u s1
 11360: d8 72 07                 a0 = t0 <u a0
 11363: d4 97 07                 a0 = a0 | a2
 11366: 52 07 1e 06              jump @1000 if a0 != 0
      :                          @865
 11370: c9 68 07                 a0 = a1 - s1
 11373: c8 27 07                 a0 = a0 + t0
 11376: 84 79 07                 a2 = a0 & 0x7
 11379: c8 96 06                 s1 = s1 + a2
 11382: 01                       fallthrough
      :                          @866
 11383: 82 b5                    s0 = u64 [a4]
 11385: ab c5 d7                 jump @863 if s0 != a5
      :                          @867
 11388: 7b b6                    u64 [a4] = s1
 11390: 33 0c                    a5 = 0
 11392: 33 0b                    a4 = 0
 11394: c9 97 02                 t0 = a0 - a2
 11397: 95 47 f8                 a0 = t2 + 0xfffffffffffffff8
 11400: 7b 17 48                 u64 [sp + 0x48] = a0
 11403: 49 11 30 10              u64 [sp + 48] = 0x10
 11407: 33 07 10 01 03           a0 = 0x30110
 11412: 7b 17 18                 u64 [sp + 0x18] = a0
 11415: 95 77 00 00 01           a0 = a0 + 0x10000
 11420: 7b 17 20                 u64 [sp + 0x20] = a0
 11423: 49 11 10 01 10           u64 [sp + 16] = 0x1001
 11428: 28 13                    jump @870
      :                          @868
 11430: 64 52                    t0 = s0
 11432: 82 13 50                 t1 = u64 [sp + 0x50]
 11435: 82 14 80 00              t2 = u64 [sp + 0x80]
 11439: 82 1c 40                 a5 = u64 [sp + 0x40]
 11442: 01                       fallthrough
      :                          @869
 11443: ae 0c 5b 04              jump @949 if a5 >=u ra
      :                          @870
 11447: 64 b6                    s1 = a4
 11449: 64 c5                    s0 = a5
 11451: c9 c0 09                 a2 = ra - a5
 11454: 97 cb 03                 a4 = a5 << 0x3
 11457: c8 b4 07                 a0 = t2 + a4
 11460: 7b 12 d0 00              u64 [sp + 0xd0] = t0
 11464: 55 19 02 67              jump @878 if a2 >=u 2
      :                          @871
 11468: 64 98                    a1 = a2
 11470: c8 58 0c                 a5 = a1 + s0
 11473: 64 6b                    a4 = s1
 11475: 28 08                    jump @873
      :                          @872
 11477: c8 58 0c                 a5 = a1 + s0
 11480: 64 6b                    a4 = s1
 11482: 01                       fallthrough
      :                          @873
 11483: d8 5c 09                 a2 = a5 <u s0
 11486: d8 c0 0a                 a3 = ra <u a5
 11489: d4 a9 09                 a2 = a2 | a3
 11492: 52 09 a4 05              jump @1004 if a2 != 0
      :                          @874
 11496: 88 89 0a                 a2 = a1 <u 0xa
 11499: d8 0c 0a                 a3 = a5 <u ra
 11502: d2 a9 09                 a2 = a2 & a3
 11505: 7b 1b b8 00              u64 [sp + 0xb8] = a4
 11509: 51 09 b4 00              jump @890 if a2 == 0
      :                          @875
 11513: 95 59 0a                 a2 = s0 + 0xa
 11516: e6 09 0a                 a3 = minu(a2, ra)
 11519: ac 5a 8a 05              jump @1005 if a3 <u s0
      :                          @876
 11523: 33 09 01                 a2 = 0x1
 11526: e4 98 09                 a2 = maxu(a1, a2)
 11529: c9 5a 06                 s1 = a3 - s0
 11532: 64 68                    a1 = s1
 11534: 7b 1a 40                 u64 [sp + 0x40] = a3
 11537: 50 20 14 01 6e e2        ra = 276, jump @304
      :                          @877 [@dyn 138]
 11543: 82 1c 40                 a5 = u64 [sp + 0x40]
 11546: 82 13 50                 t1 = u64 [sp + 0x50]
 11549: 82 14 80 00              t2 = u64 [sp + 0x80]
 11553: 82 10 78                 ra = u64 [sp + 0x78]
 11556: 82 12 d0 00              t0 = u64 [sp + 0xd0]
 11560: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 11564: 28 81 00                 jump @891
      :                          @878
 11567: 82 7a 08                 a3 = u64 [a0 + 0x8]
 11570: 82 78                    a1 = u64 [a0]
 11572: ae 8a 12 01              jump @900 if a3 >=u a1
      :                          @879
 11576: 33 08 02                 a1 = 0x2
 11579: aa 89 20                 jump @884 if a2 == a1
      :                          @880
 11582: 82 18 08                 a1 = u64 [sp + 0x8]
 11585: c8 8b 0b                 a4 = a4 + a1
 11588: 33 08 02                 a1 = 0x2
 11591: 01                       fallthrough
      :                          @881
 11592: 64 ac                    a5 = a3
 11594: 82 ba                    a3 = u64 [a4]
 11596: ae ca 0f                 jump @884 if a3 >=u a5
      :                          @882
 11599: 95 88 01                 a1 = a1 + 0x1
 11602: 95 bb 08                 a4 = a4 + 0x8
 11605: ab 89 f3                 jump @881 if a2 != a1
      :                          @883
 11608: 64 98                    a1 = a2
 11610: 01                       fallthrough
      :                          @884
 11611: c8 58 0c                 a5 = a1 + s0
 11614: ac 8c 2c 05              jump @1006 if a5 <u a1
      :                          @885
 11618: ac c0 29 05              jump @1007 if ra <u a5
      :                          @886
 11622: 64 6b                    a4 = s1
 11624: 98 89 01                 a2 = a1 >> 0x1
 11627: 51 09 70 ff              jump @873 if a2 == 0
      :                          @887
 11631: 64 b2                    t0 = a4
 11633: 64 c6                    s1 = a5
 11635: 7b 15 b0 00              u64 [sp + 0xb0] = s0
 11639: c8 58 0a                 a3 = a1 + s0
 11642: 97 aa 03                 a3 = a3 << 0x3
 11645: 82 1b 48                 a4 = u64 [sp + 0x48]
 11648: c8 ba 0a                 a3 = a3 + a4
 11651: 64 7b                    a4 = a0
 11653: 01                       fallthrough
      :                          @888
 11654: 82 ac                    a5 = u64 [a3]
 11656: 82 b5                    s0 = u64 [a4]
 11658: 7b bc                    u64 [a4] = a5
 11660: 7b a5                    u64 [a3] = s0
 11662: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 11665: 95 bb 08                 a4 = a4 + 0x8
 11668: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 11671: 52 09 ef                 jump @888 if a2 != 0
      :                          @889
 11674: 64 6c                    a5 = s1
 11676: 64 2b                    a4 = t0
 11678: 82 12 d0 00              t0 = u64 [sp + 0xd0]
 11682: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 11686: 28 35 ff                 jump @873
      :                          @890
 11689: c9 5c 06                 s1 = a5 - s0
 11692: 01                       fallthrough
      :                          @891
 11693: 97 b7 04                 a0 = a4 << 0x4
 11696: 7b 17 c0 00              u64 [sp + 0xc0] = a0
 11700: 82 17 30                 a0 = u64 [sp + 0x30]
 11703: 7b 1c 40                 u64 [sp + 0x40] = a5
 11706: ab 7b e9 00              jump @911 if a4 != a0
      :                          @892
 11710: 7b 16 a8 00              u64 [sp + 0xa8] = s1
 11714: 7b 15 b0 00              u64 [sp + 0xb0] = s0
 11718: 97 b7 01                 a0 = a4 << 0x1
 11721: 7b 17 30                 u64 [sp + 0x30] = a0
 11724: 97 b2 05                 t0 = a4 << 0x5
 11727: 82 14 18                 t2 = u64 [sp + 0x18]
 11730: 33 03 00 00 01           t1 = 0x10000
 11735: 82 17 20                 a0 = u64 [sp + 0x20]
 11738: 82 19 c0 00              a2 = u64 [sp + 0xc0]
 11742: 01                       fallthrough
      :                          @893
 11743: 82 78                    a1 = u64 [a0]
 11745: c8 28 0c                 a5 = a1 + t0
 11748: ac 8c a0 04              jump @1000 if a5 <u a1
      :                          @894
 11752: 95 ca 08                 a3 = a5 + 0x8
 11755: d8 ca 0b                 a4 = a3 <u a5
 11758: d8 a3 0a                 a3 = t1 <u a3
 11761: d4 ba 0a                 a3 = a3 | a4
 11764: 52 0a 90 04              jump @1000 if a3 != 0
      :                          @895
 11768: c9 c4 0a                 a3 = t2 - a5
 11771: c8 3a 06                 s1 = a3 + t1
 11774: 84 6a 07                 a3 = s1 & 0x7
 11777: c8 ca 0b                 a4 = a3 + a5
 11780: 01                       fallthrough
      :                          @896
 11781: 82 7c                    a5 = u64 [a0]
 11783: ab 8c d8                 jump @893 if a5 != a1
      :                          @897
 11786: 7b 7b                    u64 [a0] = a4
 11788: c9 a6 05                 s0 = s1 - a3
 11791: 64 57                    a0 = s0
 11793: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 11797: 64 96                    s1 = a2
 11799: 50 20 16 01 34 83 00     ra = 278, jump @2839
      :                          @898 [@dyn 139]
 11806: 82 17 10                 a0 = u64 [sp + 0x10]
 11809: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 11813: ac 7b 46                 jump @905 if a4 <u a0
      :                          @899
 11816: c8 65 07                 a0 = s0 + s1
 11819: 82 18 a8 00              a1 = u64 [sp + 0xa8]
 11823: 7b 78                    u64 [a0] = a1
 11825: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 11829: 7b 78 08                 u64 [a0 + 0x8] = a1
 11832: 95 bb 01                 a4 = a4 + 0x1
 11835: 82 10 78                 ra = u64 [sp + 0x78]
 11838: 64 b7                    a0 = a4
 11840: 7b 15 70                 u64 [sp + 0x70] = s0
 11843: 28 e2 00                 jump @917
      :                          @900
 11846: 33 08 02                 a1 = 0x2
 11849: aa 89 8c fe              jump @872 if a2 == a1
      :                          @901
 11853: 82 18 08                 a1 = u64 [sp + 0x8]
 11856: c8 8b 0b                 a4 = a4 + a1
 11859: 33 08 02                 a1 = 0x2
 11862: 01                       fallthrough
      :                          @902
 11863: 64 ac                    a5 = a3
 11865: 82 ba                    a3 = u64 [a4]
 11867: ac ca 7a fe              jump @872 if a3 <u a5
      :                          @903
 11871: 95 88 01                 a1 = a1 + 0x1
 11874: 95 bb 08                 a4 = a4 + 0x8
 11877: ab 89 f2                 jump @902 if a2 != a1
      :                          @904
 11880: 28 64 fe                 jump @871
      :                          @905
 11883: 64 52                    t0 = s0
 11885: 82 13 50                 t1 = u64 [sp + 0x50]
 11888: 82 1b 20                 a4 = u64 [sp + 0x20]
 11891: 82 1c 40                 a5 = u64 [sp + 0x40]
 11894: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 11898: 01                       fallthrough
      :                          @906
 11899: 82 b7                    a0 = u64 [a4]
 11901: c9 7b 08                 a1 = a4 - a0
 11904: ab 58 0f                 jump @910 if a1 != s0
      :                          @907
 11907: c9 67 08                 a1 = a0 - s1
 11910: 01                       fallthrough
      :                          @908
 11911: 82 b9                    a2 = u64 [a4]
 11913: ab 79 f2                 jump @906 if a2 != a0
      :                          @909
 11916: 7b b8                    u64 [a4] = a1
 11918: 01                       fallthrough
      :                          @910
 11919: 82 14 80 00              t2 = u64 [sp + 0x80]
 11923: 82 10 78                 ra = u64 [sp + 0x78]
 11926: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 11930: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 11934: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 11938: 01                       fallthrough
      :                          @911
 11939: 82 17 c0 00              a0 = u64 [sp + 0xc0]
 11943: c8 27 07                 a0 = a0 + t0
 11946: 7b 76                    u64 [a0] = s1
 11948: 95 bb 01                 a4 = a4 + 0x1
 11951: 7b 75 08                 u64 [a0 + 0x8] = s0
 11954: 64 25                    s0 = t0
 11956: 53 1b 02 ff fd           jump @869 if a4 <u 2
      :                          @912
 11961: 64 b7                    a0 = a4
 11963: 7b 15 70                 u64 [sp + 0x70] = s0
 11966: 28 67                    jump @917
      :                          @913
 11968: 64 65                    s0 = s1
 11970: 64 b8                    a1 = a4
 11972: 01                       fallthrough
      :                          @914
 11973: 82 16 c0 00              s1 = u64 [sp + 0xc0]
 11977: 95 67 08                 a0 = s1 + 0x8
 11980: 7b 17 88 00              u64 [sp + 0x88] = a0
 11984: c9 89 09                 a2 = a2 - a1
 11987: 64 57                    a0 = s0
 11989: 50 20 18 01 76 82 00     ra = 280, jump @2839
      :                          @915 [@dyn 140]
 11996: 82 17 90 00              a0 = u64 [sp + 0x90]
 12000: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 12004: c8 87 07                 a0 = a0 + a1
 12007: 7b 67                    u64 [s1] = a0
 12009: 82 17 98 00              a0 = u64 [sp + 0x98]
 12013: 82 18 88 00              a1 = u64 [sp + 0x88]
 12017: 7b 87                    u64 [a1] = a0
 12019: 82 1a a0 00              a3 = u64 [sp + 0xa0]
 12023: 95 a8 10                 a1 = a3 + 0x10
 12026: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 12030: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 12033: 82 19 b0 00              a2 = u64 [sp + 0xb0]
 12037: c8 97 07                 a0 = a0 + a2
 12040: 97 79 04                 a2 = a0 << 0x4
 12043: 64 a7                    a0 = a3
 12045: 50 20 1a 01 f0 82 00     ra = 282, jump @2857
      :                          @916 [@dyn 141]
 12052: 33 0b 01                 a4 = 0x1
 12055: 82 10 78                 ra = u64 [sp + 0x78]
 12058: 82 15 70                 s0 = u64 [sp + 0x70]
 12061: 82 17 b8 00              a0 = u64 [sp + 0xb8]
 12065: ae 7b 85 fd              jump @868 if a4 >=u a0
      :                          @917
 12069: 64 76                    s1 = a0
 12071: 95 72 ff                 t0 = a0 + 0xffffffffffffffff
 12074: 97 27 04                 a0 = t0 << 0x4
 12077: c8 57 07                 a0 = a0 + s0
 12080: 82 78 08                 a1 = u64 [a0 + 0x8]
 12083: 82 7c                    a5 = u64 [a0]
 12085: c8 c8 08                 a1 = a1 + a5
 12088: aa 08 4e                 jump @924 if a1 == ra
      :                          @918
 12091: 97 6a 04                 a3 = s1 << 0x4
 12094: c8 5a 0a                 a3 = a3 + s0
 12097: 82 a9 e0                 a2 = u64 [a3 + 0xffffffffffffffe0]
 12100: ae 9c 42                 jump @924 if a5 >=u a2
      :                          @919
 12103: 33 0b 02                 a4 = 0x2
 12106: 82 13 50                 t1 = u64 [sp + 0x50]
 12109: 82 14 80 00              t2 = u64 [sp + 0x80]
 12113: 82 17 c8 00              a0 = u64 [sp + 0xc8]
 12117: ae 6b 93 01              jump @945 if a4 >=u s1
      :                          @920
 12121: 64 43                    t1 = t2
 12123: 95 68 fd                 a1 = s1 + 0xfffffffffffffffd
 12126: 64 84                    t2 = a1
 12128: 97 88 04                 a1 = a1 << 0x4
 12131: c8 58 08                 a1 = a1 + s0
 12134: 82 88                    a1 = u64 [a1]
 12136: c8 c9 0b                 a4 = a2 + a5
 12139: ae 8b 72 01              jump @943 if a4 >=u a1
      :                          @921
 12143: 33 0b 03                 a4 = 0x3
 12146: ae 6b 7e 01              jump @946 if a4 >=u s1
      :                          @922
 12150: 82 aa c0                 a3 = u64 [a3 + 0xffffffffffffffc0]
 12153: c8 89 09                 a2 = a2 + a1
 12156: 64 4b                    a4 = t2
 12158: 64 34                    t2 = t1
 12160: ae a9 1e                 jump @926 if a2 >=u a3
      :                          @923
 12163: 28 7d 01                 jump @948
      :                          @924
 12166: 82 14 80 00              t2 = u64 [sp + 0x80]
 12170: 82 17 c8 00              a0 = u64 [sp + 0xc8]
 12174: 53 16 03 13              jump @927 if s1 <u 3
      :                          @925
 12178: 95 6b fd                 a4 = s1 + 0xfffffffffffffffd
 12181: 97 b8 04                 a1 = a4 << 0x4
 12184: c8 58 08                 a1 = a1 + s0
 12187: 82 88                    a1 = u64 [a1]
 12189: 01                       fallthrough
      :                          @926
 12190: ac c8 07                 jump @928 if a1 <u a5
      :                          @927
 12193: 95 6b fe                 a4 = s1 + 0xfffffffffffffffe
 12196: 01                       fallthrough
      :                          @928
 12197: ae 6b e0 02              jump @1001 if a4 >=u s1
      :                          @929
 12201: 95 b9 01                 a2 = a4 + 0x1
 12204: ae 69 d9 02              jump @1001 if a2 >=u s1
      :                          @930
 12208: 97 b8 04                 a1 = a4 << 0x4
 12211: c8 85 0a                 a3 = s0 + a1
 12214: 97 99 04                 a2 = a2 << 0x4
 12217: c8 59 09                 a2 = a2 + s0
 12220: 82 9c                    a5 = u64 [a2]
 12222: 7b 19 c0 00              u64 [sp + 0xc0] = a2
 12226: 82 98 08                 a1 = u64 [a2 + 0x8]
 12229: 82 a9 08                 a2 = u64 [a3 + 0x8]
 12232: c8 c8 08                 a1 = a1 + a5
 12235: ac 98 bb 02              jump @1002 if a1 <u a2
      :                          @931
 12239: ac 80 b8 02              jump @1003 if ra <u a1
      :                          @932
 12243: 7b 1c 90 00              u64 [sp + 0x90] = a5
 12247: 7b 1b a8 00              u64 [sp + 0xa8] = a4
 12251: 7b 16 b0 00              u64 [sp + 0xb0] = s1
 12255: 7b 12 b8 00              u64 [sp + 0xb8] = t0
 12259: 7b 1a a0 00              u64 [sp + 0xa0] = a3
 12263: 82 aa                    a3 = u64 [a3]
 12265: c9 98 0b                 a4 = a1 - a2
 12268: 7b 19 98 00              u64 [sp + 0x98] = a2
 12272: 97 95 03                 s0 = a2 << 0x3
 12275: c8 45 05                 s0 = s0 + t2
 12278: 97 a9 03                 a2 = a3 << 0x3
 12281: c8 95 06                 s1 = s0 + a2
 12284: c9 ab 0c                 a5 = a4 - a3
 12287: 97 88 03                 a1 = a1 << 0x3
 12290: 7b 18 88 00              u64 [sp + 0x88] = a1
 12294: 7b 1a d0 00              u64 [sp + 0xd0] = a3
 12298: ae ac 68                 jump @938 if a5 >=u a3
      :                          @933
 12301: 97 c9 03                 a2 = a5 << 0x3
 12304: 7b 19 68                 u64 [sp + 0x68] = a2
 12307: 64 68                    a1 = s1
 12309: 7b 1c 60                 u64 [sp + 0x60] = a5
 12312: 50 20 1c 01 33 81 00     ra = 284, jump @2839
      :                          @934 [@dyn 142]
 12319: 82 1b c8 00              a4 = u64 [sp + 0xc8]
 12323: 82 18 60                 a1 = u64 [sp + 0x60]
 12326: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 12330: e5 87 07                 a0 = mins(a0, a1)
 12333: 82 19 68                 a2 = u64 [sp + 0x68]
 12336: c8 b9 09                 a2 = a2 + a4
 12339: 58 07 8d fe              jump @913 if a0 <=s 0
      :                          @935
 12343: 82 17 48                 a0 = u64 [sp + 0x48]
 12346: 82 18 88 00              a1 = u64 [sp + 0x88]
 12350: c8 87 07                 a0 = a0 + a1
 12353: 01                       fallthrough
      :                          @936
 12354: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
 12357: 82 6a f8                 a3 = u64 [s1 + 0xfffffffffffffff8]
 12360: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 12363: d8 a8 08                 a1 = a1 <u a3
 12366: 97 8a 03                 a3 = a1 << 0x3
 12369: c9 a6 06                 s1 = s1 - a3
 12372: c8 a9 09                 a2 = a2 + a3
 12375: 64 6a                    a3 = s1
 12377: da 89 0a                 a3 = a2 if a1 == 0
 12380: 82 a8                    a1 = u64 [a3]
 12382: 7b 78                    u64 [a0] = a1
 12384: d8 65 08                 a1 = s0 <u s1
 12387: d8 9b 0a                 a3 = a4 <u a2
 12390: d2 a8 08                 a1 = a1 & a3
 12393: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
 12396: 52 08 d6                 jump @936 if a1 != 0
      :                          @937
 12399: 28 51 fe                 jump @913
      :                          @938
 12402: 8f a8                    a1 = a3 >s 0
 12404: 7b 18 68                 u64 [sp + 0x68] = a1
 12407: 64 58                    a1 = s0
 12409: 7b 19 60                 u64 [sp + 0x60] = a2
 12412: 7b 1b 58                 u64 [sp + 0x58] = a4
 12415: 50 20 1e 01 cc 80 00     ra = 286, jump @2839
      :                          @939 [@dyn 143]
 12422: 82 18 c8 00              a1 = u64 [sp + 0xc8]
 12426: 82 19 58                 a2 = u64 [sp + 0x58]
 12429: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 12433: d9 97 07                 a0 = a0 <s a2
 12436: 82 19 68                 a2 = u64 [sp + 0x68]
 12439: d2 97 07                 a0 = a0 & a2
 12442: 82 19 60                 a2 = u64 [sp + 0x60]
 12445: c8 89 09                 a2 = a2 + a1
 12448: 51 07 25 fe              jump @914 if a0 == 0
      :                          @940
 12452: 82 12 80 00              t0 = u64 [sp + 0x80]
 12456: 82 17 88 00              a0 = u64 [sp + 0x88]
 12460: c8 72 02                 t0 = t0 + a0
 12463: 01                       fallthrough
      :                          @941
 12464: 82 6a                    a3 = u64 [s1]
 12466: 82 8b                    a4 = u64 [a1]
 12468: d8 ba 0c                 a5 = a3 <u a4
 12471: 85 c7 01                 a0 = a5 ^ 0x1
 12474: e6 ba 0a                 a3 = minu(a3, a4)
 12477: 7b 5a                    u64 [s0] = a3
 12479: 97 cc 03                 a5 = a5 << 0x3
 12482: c8 c6 06                 s1 = s1 + a5
 12485: 97 77 03                 a0 = a0 << 0x3
 12488: c8 78 08                 a1 = a1 + a0
 12491: d8 98 07                 a0 = a1 <u a2
 12494: d8 26 0a                 a3 = s1 <u t0
 12497: d2 a7 07                 a0 = a0 & a3
 12500: 95 55 08                 s0 = s0 + 0x8
 12503: 52 07 d9                 jump @941 if a0 != 0
      :                          @942
 12506: 28 eb fd                 jump @914
      :                          @943
 12509: 64 4b                    a4 = t2
 12511: 64 34                    t2 = t1
 12513: ae c8 c0 fe              jump @927 if a1 >=u a5
      :                          @944
 12517: 28 c0 fe                 jump @928
      :                          @945
 12520: 64 52                    t0 = s0
 12522: 82 1c 40                 a5 = u64 [sp + 0x40]
 12525: 28 c6 fb                 jump @869
      :                          @946
 12528: 64 52                    t0 = s0
 12530: 82 1c 40                 a5 = u64 [sp + 0x40]
 12533: 64 34                    t2 = t1
 12535: 82 13 50                 t1 = u64 [sp + 0x50]
 12538: ac 0c bd fb              jump @870 if a5 <u ra
      :                          @947
 12542: 28 10                    jump @949
      :                          @948
 12544: 64 6b                    a4 = s1
 12546: 64 52                    t0 = s0
 12548: 82 1c 40                 a5 = u64 [sp + 0x40]
 12551: 82 13 50                 t1 = u64 [sp + 0x50]
 12554: ac 0c ad fb              jump @870 if a5 <u ra
      :                          @949
 12558: 82 15 08                 s0 = u64 [sp + 0x8]
 12561: 82 18 30                 a1 = u64 [sp + 0x30]
 12564: 56 28 00 10 27           jump @955 if a1 >u 4096
      :                          @950
 12569: 97 87 04                 a0 = a1 << 0x4
 12572: 33 08 10 01 03           a1 = 0x30110
 12577: 95 88 00 00 01           a1 = a1 + 0x10000
 12582: 01                       fallthrough
      :                          @951
 12583: 82 89                    a2 = u64 [a1]
 12585: c9 98 0a                 a3 = a1 - a2
 12588: ab 2a 0f                 jump @955 if a3 != t0
      :                          @952
 12591: c9 79 0a                 a3 = a2 - a0
 12594: 01                       fallthrough
      :                          @953
 12595: 82 8b                    a4 = u64 [a1]
 12597: ab 9b f2                 jump @951 if a4 != a2
      :                          @954
 12600: 7b 8a                    u64 [a1] = a3
 12602: 01                       fallthrough
      :                          @955
 12603: 82 1c c8 00              a5 = u64 [sp + 0xc8]
 12607: 56 20 01 40 27           jump @961 if ra >u 16385
      :                          @956
 12612: 33 07 10 01 03           a0 = 0x30110
 12617: 95 77 00 00 01           a0 = a0 + 0x10000
 12622: 01                       fallthrough
      :                          @957
 12623: 82 78                    a1 = u64 [a0]
 12625: c9 87 09                 a2 = a0 - a1
 12628: ab c9 12                 jump @961 if a2 != a5
      :                          @958
 12631: 82 19 28                 a2 = u64 [sp + 0x28]
 12634: c9 98 09                 a2 = a1 - a2
 12637: 01                       fallthrough
      :                          @959
 12638: 82 7a                    a3 = u64 [a0]
 12640: ab 8a ef                 jump @957 if a3 != a1
      :                          @960
 12643: 7b 79                    u64 [a0] = a2
 12645: 01                       fallthrough
      :                          @961
 12646: 82 4a                    a3 = u64 [t2]
 12648: 9a 07 01                 a0 = 0x1 - ra
 12651: 33 09 02                 a2 = 0x2
 12654: 33 08 02                 a1 = 0x2
 12657: 01                       fallthrough
      :                          @962
 12658: 64 ab                    a4 = a3
 12660: 82 5a f8                 a3 = u64 [s0 + 0xfffffffffffffff8]
 12663: aa ba 13                 jump @965 if a3 == a4
      :                          @963
 12666: 95 88 01                 a1 = a1 + 0x1
 12669: c8 87 0b                 a4 = a0 + a1
 12672: 95 55 08                 s0 = s0 + 0x8
 12675: ab 9b ef                 jump @962 if a4 != a2
      :                          @964
 12678: 64 07                    a0 = ra
 12680: 28 2b                    jump @970
      :                          @965
 12682: 95 87 ff                 a0 = a1 + 0xffffffffffffffff
 12685: ae 08 26                 jump @970 if a1 >=u ra
      :                          @966
 12688: c9 80 08                 a1 = ra - a1
 12691: 28 0b                    jump @968
      :                          @967
 12693: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 12696: 95 55 08                 s0 = s0 + 0x8
 12699: 51 08 18                 jump @970 if a1 == 0
      :                          @968
 12702: 97 79 03                 a2 = a0 << 0x3
 12705: c8 49 09                 a2 = a2 + t2
 12708: 82 5a                    a3 = u64 [s0]
 12710: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
 12713: aa ba ec                 jump @967 if a3 == a4
      :                          @969
 12716: 7b 9a                    u64 [a2] = a3
 12718: 95 77 01                 a0 = a0 + 0x1
 12721: 28 e4                    jump @967
      :                          @970
 12723: 53 13 03 5a              jump @982 if t1 <u 3
      :                          @971
 12727: 97 77 03                 a0 = a0 << 0x3
 12730: c8 74 08                 a1 = t2 + a0
 12733: 33 02 02                 t0 = 0x2
 12736: 33 0a 01                 a3 = 0x1
 12739: 28 05                    jump @973
      :                          @972
 12741: aa 32 48                 jump @982 if t0 == t1
      :                          @973
 12744: 64 27                    a0 = t0
 12746: 95 22 01                 t0 = t0 + 0x1
 12749: 64 4b                    a4 = t2
 12751: 28 05                    jump @975
      :                          @974
 12753: aa ac f4                 jump @972 if a5 == a3
      :                          @975
 12756: aa 8b 6e                 jump @990 if a4 == a1
      :                          @976
 12759: 82 bc                    a5 = u64 [a4]
 12761: 51 0c aa 00              jump @999 if a5 == 0
      :                          @977
 12765: 82 19 38                 a2 = u64 [sp + 0x38]
 12768: ac c9 e5                 jump @972 if a2 <u a5
      :                          @978
 12771: 95 bb 08                 a4 = a4 + 0x8
 12774: 82 19 38                 a2 = u64 [sp + 0x38]
 12777: cb c9 06                 s1 = a2 /u a5
 12780: 33 0c 01                 a5 = 0x1
 12783: 64 75                    s0 = a0
 12785: 28 0b                    jump @980
      :                          @979
 12787: 98 66 01                 s1 = s1 >> 0x1
 12790: ca 55 05                 s0 = s0 * s0
 12793: 51 06 d8                 jump @974 if s1 == 0
      :                          @980
 12796: 84 69 01                 a2 = s1 & 0x1
 12799: cd 35 05                 s0 = s0 %u t1
 12802: 51 09 f1                 jump @979 if a2 == 0
      :                          @981
 12805: ca c5 09                 a2 = s0 * a5
 12808: cd 39 0c                 a5 = a2 %u t1
 12811: 28 e8                    jump @979
      :                          @982
 12813: 82 18                    a1 = u64 [sp]
 12815: 51 08 2f                 jump @989 if a1 == 0
      :                          @983
 12818: 56 28 00 20 2c           jump @989 if a1 >u 8192
      :                          @984
 12823: 97 87 03                 a0 = a1 << 0x3
 12826: 33 08 10 01 03           a1 = 0x30110
 12831: 95 88 00 00 01           a1 = a1 + 0x10000
 12836: 01                       fallthrough
      :                          @985
 12837: 82 89                    a2 = u64 [a1]
 12839: c9 98 0a                 a3 = a1 - a2
 12842: ab 4a 14                 jump @989 if a3 != t2
      :                          @986
 12845: c9 79 0a                 a3 = a2 - a0
 12848: 01                       fallthrough
      :                          @987
 12849: 82 8b                    a4 = u64 [a1]
 12851: ab 9b f2                 jump @985 if a4 != a2
      :                          @988
 12854: 7b 8a                    u64 [a1] = a3
 12856: 33 0c                    a5 = 0
 12858: 33 07                    a0 = 0
 12860: 28 34                    jump @997
      :                          @989
 12862: 33 07                    a0 = 0
 12864: 28 30                    jump @997
      :                          @990
 12866: 82 19                    a2 = u64 [sp]
 12868: 51 09 2c                 jump @997 if a2 == 0
      :                          @991
 12871: 33 08 00 20              a1 = 0x2000
 12875: ac 98 25                 jump @997 if a1 <u a2
      :                          @992
 12878: 97 98 03                 a1 = a2 << 0x3
 12881: 33 09 10 01 03           a2 = 0x30110
 12886: 95 99 00 00 01           a2 = a2 + 0x10000
 12891: 01                       fallthrough
      :                          @993
 12892: 82 9a                    a3 = u64 [a2]
 12894: c9 a9 0b                 a4 = a2 - a3
 12897: ab 4b 0f                 jump @997 if a4 != t2
      :                          @994
 12900: c9 8a 0b                 a4 = a3 - a1
 12903: 01                       fallthrough
      :                          @995
 12904: 82 9c                    a5 = u64 [a2]
 12906: ab ac f2                 jump @993 if a5 != a3
      :                          @996
 12909: 7b 9b                    u64 [a2] = a4
 12911: 01                       fallthrough
      :                          @997
 12912: 82 10 00 01              ra = u64 [sp + 0x100]
 12916: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 12920: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 12924: 95 11 08 01              sp = sp + 0x108
 12928: 32 00                    ret
      :                          @998
 12930: 00                       trap
      :                          @999
 12931: 00                       trap
      :                          @1000
 12932: 00                       trap
      :                          @1001
 12933: 00                       trap
      :                          @1002
 12934: 00                       trap
      :                          @1003
 12935: 00                       trap
      :                          @1004
 12936: 00                       trap
      :                          @1005
 12937: 00                       trap
      :                          @1006
 12938: 00                       trap
      :                          @1007
 12939: 00                       trap
      :                          @1008 [@dyn 144]
 12940: 82 17 10                 a0 = u64 [sp + 0x10]
 12943: 52 17 01 4c              jump @1010 if a0 != 1
      :                          @1009
 12947: 82 17 18                 a0 = u64 [sp + 0x18]
 12950: 82 1b 08                 a4 = u64 [sp + 0x8]
 12953: 82 18                    a1 = u64 [sp]
 12955: c9 b8 08                 a1 = a1 - a4
 12958: ce 58 08                 a1 = a1 %s s0
 12961: 9a 59                    a2 = -s0
 12963: e3 95 09                 a2 = maxs(s0, a2)
 12966: 99 8a 3f                 a3 = a1 >>a 0x3f
 12969: d2 9a 0a                 a3 = a3 & a2
 12972: c8 a8 08                 a1 = a1 + a3
 12975: ce 57 07                 a0 = a0 %s s0
 12978: c8 57 07                 a0 = a0 + s0
 12981: ce 57 07                 a0 = a0 %s s0
 12984: ca 78 07                 a0 = a1 * a0
 12987: ce 57 07                 a0 = a0 %s s0
 12990: 99 78 3f                 a1 = a0 >>a 0x3f
 12993: d2 98 08                 a1 = a1 & a2
 12996: c8 87 07                 a0 = a0 + a1
 12999: ca 67 07                 a0 = a0 * s1
 13002: c8 b7 07                 a0 = a0 + a4
 13005: 82 10 38                 ra = u64 [sp + 0x38]
 13008: 82 15 30                 s0 = u64 [sp + 0x30]
 13011: 82 16 28                 s1 = u64 [sp + 0x28]
 13014: 95 11 40                 sp = sp + 0x40
 13017: 32 00                    ret
      :                          @1010
 13019: 00                       trap
      :                          @1011
 13020: 95 11 98                 sp = sp + 0xffffffffffffff98
 13023: 7b 10 60                 u64 [sp + 0x60] = ra
 13026: 7b 15 58                 u64 [sp + 0x58] = s0
 13029: 7b 16 50                 u64 [sp + 0x50] = s1
 13032: 82 86 08                 s1 = u64 [a1 + 0x8]
 13035: 51 06 a2 01              jump @1029 if s1 == 0
      :                          @1012
 13039: 64 85                    s0 = a1
 13041: 82 89                    a2 = u64 [a1]
 13043: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 13053: d3 98 08                 a1 = a1 ^ a2
 13056: e1 68 08                 a1 = a1 | ~s1
 13059: 51 08 89 01              jump @1028 if a1 == 0
      :                          @1013
 13063: 7b 17 30                 u64 [sp + 0x30] = a0
 13066: 82 77                    a0 = u64 [a0]
 13068: 7b 17 28                 u64 [sp + 0x28] = a0
 13071: 7b 19 18                 u64 [sp + 0x18] = a2
 13074: ce 69 08                 a1 = a2 %s s1
 13077: 9a 67                    a0 = -s1
 13079: e3 76 09                 a2 = maxs(s1, a0)
 13082: 99 87 3f                 a0 = a1 >>a 0x3f
 13085: 7b 19 20                 u64 [sp + 0x20] = a2
 13088: d2 97 07                 a0 = a0 & a2
 13091: c8 78 08                 a1 = a1 + a0
 13094: 95 17 38                 a0 = sp + 0x38
 13097: 64 69                    a2 = s1
 13099: 50 20 22 01 0f f6        ra = 290, jump @788
      :                          @1014 [@dyn 145]
 13105: 82 17 38                 a0 = u64 [sp + 0x38]
 13108: 52 17 01 5a 01           jump @1030 if a0 != 1
      :                          @1015
 13113: 82 17 40                 a0 = u64 [sp + 0x40]
 13116: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 13126: d3 87 09                 a2 = a0 ^ a1
 13129: e1 69 09                 a2 = a2 | ~s1
 13132: 51 09 40 01              jump @1028 if a2 == 0
      :                          @1016
 13136: ce 67 07                 a0 = a0 %s s1
 13139: c8 67 07                 a0 = a0 + s1
 13142: d3 78 08                 a1 = a1 ^ a0
 13145: e1 68 08                 a1 = a1 | ~s1
 13148: 51 08 30 01              jump @1028 if a1 == 0
      :                          @1017
 13152: 82 18 30                 a1 = u64 [sp + 0x30]
 13155: 82 88 08                 a1 = u64 [a1 + 0x8]
 13158: 82 19 28                 a2 = u64 [sp + 0x28]
 13161: c9 98 09                 a2 = a1 - a2
 13164: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 13174: d3 89 0a                 a3 = a2 ^ a1
 13177: e1 6a 0a                 a3 = a3 | ~s1
 13180: 51 0a 10 01              jump @1028 if a3 == 0
      :                          @1018
 13184: ce 67 07                 a0 = a0 %s s1
 13187: ce 69 09                 a2 = a2 %s s1
 13190: 99 9a 3f                 a3 = a2 >>a 0x3f
 13193: 82 1b 20                 a4 = u64 [sp + 0x20]
 13196: d2 ba 0a                 a3 = a3 & a4
 13199: c8 a9 09                 a2 = a2 + a3
 13202: ca 79 09                 a2 = a2 * a0
 13205: d3 89 07                 a0 = a2 ^ a1
 13208: e1 67 07                 a0 = a0 | ~s1
 13211: 51 07 f1 00              jump @1028 if a0 == 0
      :                          @1019
 13215: 82 55 10                 s0 = u64 [s0 + 0x10]
 13218: 51 05 eb 00              jump @1029 if s0 == 0
      :                          @1020
 13222: 82 17 18                 a0 = u64 [sp + 0x18]
 13225: ca 76 08                 a1 = s1 * a0
 13228: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 13238: d3 87 07                 a0 = a0 ^ a1
 13241: e1 57 07                 a0 = a0 | ~s0
 13244: 51 07 d0 00              jump @1028 if a0 == 0
      :                          @1021
 13248: 7b 19 10                 u64 [sp + 0x10] = a2
 13251: 7b 18                    u64 [sp] = a1
 13253: ce 58 08                 a1 = a1 %s s0
 13256: 9a 57                    a0 = -s0
 13258: e3 75 09                 a2 = maxs(s0, a0)
 13261: 99 87 3f                 a0 = a1 >>a 0x3f
 13264: 7b 19 08                 u64 [sp + 0x8] = a2
 13267: d2 97 07                 a0 = a0 & a2
 13270: c8 78 08                 a1 = a1 + a0
 13273: 95 17 38                 a0 = sp + 0x38
 13276: 64 59                    a2 = s0
 13278: 50 20 24 01 5c f5        ra = 292, jump @788
      :                          @1022 [@dyn 146]
 13284: 82 17 38                 a0 = u64 [sp + 0x38]
 13287: 52 17 01 a7 00           jump @1030 if a0 != 1
      :                          @1023
 13292: 82 17 40                 a0 = u64 [sp + 0x40]
 13295: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 13305: d3 97 08                 a1 = a0 ^ a2
 13308: e1 58 08                 a1 = a1 | ~s0
 13311: 51 08 8d 00              jump @1028 if a1 == 0
      :                          @1024
 13315: ce 57 08                 a1 = a0 %s s0
 13318: c8 58 08                 a1 = a1 + s0
 13321: d3 89 09                 a2 = a2 ^ a1
 13324: e1 59 07                 a0 = a2 | ~s0
 13327: 51 07 7d                 jump @1028 if a0 == 0
      :                          @1025
 13330: 82 17 10                 a0 = u64 [sp + 0x10]
 13333: ce 67 07                 a0 = a0 %s s1
 13336: 99 79 3f                 a2 = a0 >>a 0x3f
 13339: 82 1a 20                 a3 = u64 [sp + 0x20]
 13342: d2 a9 09                 a2 = a2 & a3
 13345: 82 1a 30                 a3 = u64 [sp + 0x30]
 13348: 82 aa 10                 a3 = u64 [a3 + 0x10]
 13351: c8 97 07                 a0 = a0 + a2
 13354: 82 19 18                 a2 = u64 [sp + 0x18]
 13357: ca 97 07                 a0 = a0 * a2
 13360: 82 19 28                 a2 = u64 [sp + 0x28]
 13363: c8 97 07                 a0 = a0 + a2
 13366: c9 7a 0a                 a3 = a3 - a0
 13369: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 13379: d3 9a 0b                 a4 = a3 ^ a2
 13382: e1 5b 0b                 a4 = a4 | ~s0
 13385: 51 0b 43                 jump @1028 if a4 == 0
      :                          @1026
 13388: ce 58 08                 a1 = a1 %s s0
 13391: ce 5a 0a                 a3 = a3 %s s0
 13394: 99 ab 3f                 a4 = a3 >>a 0x3f
 13397: 82 1c 08                 a5 = u64 [sp + 0x8]
 13400: d2 cb 0b                 a4 = a4 & a5
 13403: c8 ba 0a                 a3 = a3 + a4
 13406: ca 8a 08                 a1 = a3 * a1
 13409: d3 89 09                 a2 = a2 ^ a1
 13412: e1 59 09                 a2 = a2 | ~s0
 13415: 51 09 25                 jump @1028 if a2 == 0
      :                          @1027
 13418: ce 58 08                 a1 = a1 %s s0
 13421: 99 89 3f                 a2 = a1 >>a 0x3f
 13424: d2 c9 09                 a2 = a2 & a5
 13427: c8 98 08                 a1 = a1 + a2
 13430: 82 19                    a2 = u64 [sp]
 13432: ca 98 08                 a1 = a1 * a2
 13435: c8 87 07                 a0 = a0 + a1
 13438: 82 10 60                 ra = u64 [sp + 0x60]
 13441: 82 15 58                 s0 = u64 [sp + 0x58]
 13444: 82 16 50                 s1 = u64 [sp + 0x50]
 13447: 95 11 68                 sp = sp + 0x68
 13450: 32 00                    ret
      :                          @1028
 13452: 00                       trap
      :                          @1029
 13453: 00                       trap
      :                          @1030
 13454: 00                       trap
      :                          @1031
 13455: d6 a7 09                 a2 = a0 mulhu a3
 13458: 98 9b 04                 a4 = a2 >> 0x4
 13461: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13464: c8 b9 09                 a2 = a2 + a4
 13467: c8 37 07                 a0 = a0 + t1
 13470: c9 97 07                 a0 = a0 - a2
 13473: 01                       fallthrough
      :                          @1032
 13474: d6 a7 09                 a2 = a0 mulhu a3
 13477: 98 9b 04                 a4 = a2 >> 0x4
 13480: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13483: c8 b9 09                 a2 = a2 + a4
 13486: ca 82 0b                 a4 = t0 * a1
 13489: c8 b7 07                 a0 = a0 + a4
 13492: c9 97 07                 a0 = a0 - a2
 13495: d6 a7 09                 a2 = a0 mulhu a3
 13498: 98 9b 04                 a4 = a2 >> 0x4
 13501: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13504: c8 b9 09                 a2 = a2 + a4
 13507: c9 97 07                 a0 = a0 - a2
 13510: 95 00 01                 ra = ra + 0x1
 13513: 95 19 48                 a2 = sp + 0x48
 13516: c8 94 04                 t2 = t2 + a2
 13519: 7b 47                    u64 [t2] = a0
 13521: 51 10 08 38 02           jump @1063 if ra == 8
      :                          @1033
 13526: 97 04 03                 t2 = ra << 0x3
 13529: 51 00 27 02              jump @1062 if ra == 0
      :                          @1034
 13533: 33 07 01                 a0 = 0x1
 13536: 33 0b 09                 a4 = 0x9
 13539: 64 09                    a2 = ra
 13541: 28 0b                    jump @1036
      :                          @1035
 13543: 98 99 01                 a2 = a2 >> 0x1
 13546: ca bb 0b                 a4 = a4 * a4
 13549: 51 09 2c                 jump @1038 if a2 == 0
      :                          @1036
 13552: d6 ab 0c                 a5 = a4 mulhu a3
 13555: 98 c5 04                 s0 = a5 >> 0x4
 13558: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 13561: c8 5c 0c                 a5 = a5 + s0
 13564: 84 95 01                 s0 = a2 & 0x1
 13567: c9 cb 0b                 a4 = a4 - a5
 13570: 51 05 e5                 jump @1035 if s0 == 0
      :                          @1037
 13573: ca b7 07                 a0 = a0 * a4
 13576: d6 a7 0c                 a5 = a0 mulhu a3
 13579: 98 c5 04                 s0 = a5 >> 0x4
 13582: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 13585: c8 5c 0c                 a5 = a5 + s0
 13588: c9 c7 07                 a0 = a0 - a5
 13591: 28 d0                    jump @1035
      :                          @1038
 13593: 82 19 38                 a2 = u64 [sp + 0x38]
 13596: ca 97 07                 a0 = a0 * a2
 13599: 82 19 40                 a2 = u64 [sp + 0x40]
 13602: c8 97 07                 a0 = a0 + a2
 13605: 97 09 01                 a2 = ra << 0x1
 13608: 33 0c 01                 a5 = 0x1
 13611: 33 0b 09                 a4 = 0x9
 13614: 28 0b                    jump @1040
      :                          @1039
 13616: 98 99 01                 a2 = a2 >> 0x1
 13619: ca bb 0b                 a4 = a4 * a4
 13622: 51 09 2c                 jump @1042 if a2 == 0
      :                          @1040
 13625: d6 ab 05                 s0 = a4 mulhu a3
 13628: 98 56 04                 s1 = s0 >> 0x4
 13631: 84 55 f0                 s0 = s0 & 0xfffffffffffffff0
 13634: c8 65 05                 s0 = s0 + s1
 13637: 84 96 01                 s1 = a2 & 0x1
 13640: c9 5b 0b                 a4 = a4 - s0
 13643: 51 06 e5                 jump @1039 if s1 == 0
      :                          @1041
 13646: ca bc 0c                 a5 = a5 * a4
 13649: d6 ac 06                 s1 = a5 mulhu a3
 13652: 98 65 04                 s0 = s1 >> 0x4
 13655: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13658: c8 65 05                 s0 = s0 + s1
 13661: c9 5c 0c                 a5 = a5 - s0
 13664: 28 d0                    jump @1039
      :                          @1042
 13666: d6 a7 09                 a2 = a0 mulhu a3
 13669: 98 9b 04                 a4 = a2 >> 0x4
 13672: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13675: c8 b9 09                 a2 = a2 + a4
 13678: 82 1b 30                 a4 = u64 [sp + 0x30]
 13681: ca bc 0b                 a4 = a5 * a4
 13684: c8 b7 07                 a0 = a0 + a4
 13687: c9 97 07                 a0 = a0 - a2
 13690: 97 09 01                 a2 = ra << 0x1
 13693: c8 09 09                 a2 = a2 + ra
 13696: 33 0c 01                 a5 = 0x1
 13699: 33 0b 09                 a4 = 0x9
 13702: 28 0b                    jump @1044
      :                          @1043
 13704: 98 99 01                 a2 = a2 >> 0x1
 13707: ca bb 0b                 a4 = a4 * a4
 13710: 51 09 2c                 jump @1046 if a2 == 0
      :                          @1044
 13713: d6 ab 06                 s1 = a4 mulhu a3
 13716: 98 65 04                 s0 = s1 >> 0x4
 13719: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13722: c8 65 05                 s0 = s0 + s1
 13725: 84 96 01                 s1 = a2 & 0x1
 13728: c9 5b 0b                 a4 = a4 - s0
 13731: 51 06 e5                 jump @1043 if s1 == 0
      :                          @1045
 13734: ca bc 0c                 a5 = a5 * a4
 13737: d6 ac 06                 s1 = a5 mulhu a3
 13740: 98 65 04                 s0 = s1 >> 0x4
 13743: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13746: c8 65 05                 s0 = s0 + s1
 13749: c9 5c 0c                 a5 = a5 - s0
 13752: 28 d0                    jump @1043
      :                          @1046
 13754: d6 a7 09                 a2 = a0 mulhu a3
 13757: 98 9b 04                 a4 = a2 >> 0x4
 13760: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13763: c8 b9 09                 a2 = a2 + a4
 13766: 82 1b 28                 a4 = u64 [sp + 0x28]
 13769: ca bc 0b                 a4 = a5 * a4
 13772: c8 b7 07                 a0 = a0 + a4
 13775: c9 97 07                 a0 = a0 - a2
 13778: 97 09 02                 a2 = ra << 0x2
 13781: 33 0c 01                 a5 = 0x1
 13784: 33 0b 09                 a4 = 0x9
 13787: 28 0b                    jump @1048
      :                          @1047
 13789: 98 99 01                 a2 = a2 >> 0x1
 13792: ca bb 0b                 a4 = a4 * a4
 13795: 51 09 2c                 jump @1050 if a2 == 0
      :                          @1048
 13798: d6 ab 06                 s1 = a4 mulhu a3
 13801: 98 65 04                 s0 = s1 >> 0x4
 13804: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13807: c8 65 05                 s0 = s0 + s1
 13810: 84 96 01                 s1 = a2 & 0x1
 13813: c9 5b 0b                 a4 = a4 - s0
 13816: 51 06 e5                 jump @1047 if s1 == 0
      :                          @1049
 13819: ca bc 0c                 a5 = a5 * a4
 13822: d6 ac 06                 s1 = a5 mulhu a3
 13825: 98 65 04                 s0 = s1 >> 0x4
 13828: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13831: c8 65 05                 s0 = s0 + s1
 13834: c9 5c 0c                 a5 = a5 - s0
 13837: 28 d0                    jump @1047
      :                          @1050
 13839: d6 a7 09                 a2 = a0 mulhu a3
 13842: 98 9b 04                 a4 = a2 >> 0x4
 13845: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13848: c8 b9 09                 a2 = a2 + a4
 13851: 82 1b 20                 a4 = u64 [sp + 0x20]
 13854: ca bc 0b                 a4 = a5 * a4
 13857: c8 b7 07                 a0 = a0 + a4
 13860: c9 97 07                 a0 = a0 - a2
 13863: 97 09 02                 a2 = ra << 0x2
 13866: c8 09 09                 a2 = a2 + ra
 13869: 33 0c 01                 a5 = 0x1
 13872: 33 0b 09                 a4 = 0x9
 13875: 28 0b                    jump @1052
      :                          @1051
 13877: 98 99 01                 a2 = a2 >> 0x1
 13880: ca bb 0b                 a4 = a4 * a4
 13883: 51 09 2c                 jump @1054 if a2 == 0
      :                          @1052
 13886: d6 ab 06                 s1 = a4 mulhu a3
 13889: 98 65 04                 s0 = s1 >> 0x4
 13892: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13895: c8 65 05                 s0 = s0 + s1
 13898: 84 96 01                 s1 = a2 & 0x1
 13901: c9 5b 0b                 a4 = a4 - s0
 13904: 51 06 e5                 jump @1051 if s1 == 0
      :                          @1053
 13907: ca bc 0c                 a5 = a5 * a4
 13910: d6 ac 06                 s1 = a5 mulhu a3
 13913: 98 65 04                 s0 = s1 >> 0x4
 13916: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13919: c8 65 05                 s0 = s0 + s1
 13922: c9 5c 0c                 a5 = a5 - s0
 13925: 28 d0                    jump @1051
      :                          @1054
 13927: d6 a7 09                 a2 = a0 mulhu a3
 13930: 98 9b 04                 a4 = a2 >> 0x4
 13933: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13936: c8 b9 09                 a2 = a2 + a4
 13939: 82 1b 18                 a4 = u64 [sp + 0x18]
 13942: ca bc 0b                 a4 = a5 * a4
 13945: c8 b7 07                 a0 = a0 + a4
 13948: c9 97 07                 a0 = a0 - a2
 13951: 96 09 06                 a2 = ra * 0x6
 13954: 33 0c 01                 a5 = 0x1
 13957: 33 0b 09                 a4 = 0x9
 13960: 28 0b                    jump @1056
      :                          @1055
 13962: 98 99 01                 a2 = a2 >> 0x1
 13965: ca bb 0b                 a4 = a4 * a4
 13968: 51 09 2c                 jump @1058 if a2 == 0
      :                          @1056
 13971: d6 ab 06                 s1 = a4 mulhu a3
 13974: 98 65 04                 s0 = s1 >> 0x4
 13977: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13980: c8 65 05                 s0 = s0 + s1
 13983: 84 96 01                 s1 = a2 & 0x1
 13986: c9 5b 0b                 a4 = a4 - s0
 13989: 51 06 e5                 jump @1055 if s1 == 0
      :                          @1057
 13992: ca bc 0c                 a5 = a5 * a4
 13995: d6 ac 06                 s1 = a5 mulhu a3
 13998: 98 65 04                 s0 = s1 >> 0x4
 14001: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 14004: c8 65 05                 s0 = s0 + s1
 14007: c9 5c 0c                 a5 = a5 - s0
 14010: 28 d0                    jump @1055
      :                          @1058
 14012: 82 19 10                 a2 = u64 [sp + 0x10]
 14015: ca 9c 03                 t1 = a5 * a2
 14018: c9 04 09                 a2 = t2 - ra
 14021: 33 02 01                 t0 = 0x1
 14024: 33 0b 09                 a4 = 0x9
 14027: 28 0c                    jump @1060
      :                          @1059
 14029: 98 99 01                 a2 = a2 >> 0x1
 14032: ca bb 0b                 a4 = a4 * a4
 14035: 51 09 bc fd              jump @1031 if a2 == 0
      :                          @1060
 14039: d6 ab 0c                 a5 = a4 mulhu a3
 14042: 98 c5 04                 s0 = a5 >> 0x4
 14045: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 14048: c8 5c 0c                 a5 = a5 + s0
 14051: 84 95 01                 s0 = a2 & 0x1
 14054: c9 cb 0b                 a4 = a4 - a5
 14057: 51 05 e4                 jump @1059 if s0 == 0
      :                          @1061
 14060: ca b2 0c                 a5 = t0 * a4
 14063: d6 ac 06                 s1 = a5 mulhu a3
 14066: 98 65 04                 s0 = s1 >> 0x4
 14069: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 14072: c8 65 05                 s0 = s0 + s1
 14075: c9 5c 02                 t0 = a5 - s0
 14078: 28 cf                    jump @1059
      :                          @1062
 14080: 33 02 01                 t0 = 0x1
 14083: 82 17 08                 a0 = u64 [sp + 0x8]
 14086: 28 9c fd                 jump @1032
      :                          @1063
 14089: 82 17 80 00              a0 = u64 [sp + 0x80]
 14093: 82 18 78                 a1 = u64 [sp + 0x78]
 14096: 82 19 70                 a2 = u64 [sp + 0x70]
 14099: 82 1a 68                 a3 = u64 [sp + 0x68]
 14102: 82 1b                    a4 = u64 [sp]
 14104: 7b b7 38                 u64 [a4 + 0x38] = a0
 14107: 7b b8 30                 u64 [a4 + 0x30] = a1
 14110: 7b b9 28                 u64 [a4 + 0x28] = a2
 14113: 7b ba 20                 u64 [a4 + 0x20] = a3
 14116: 82 17 60                 a0 = u64 [sp + 0x60]
 14119: 82 18 58                 a1 = u64 [sp + 0x58]
 14122: 82 19 50                 a2 = u64 [sp + 0x50]
 14125: 82 1a 48                 a3 = u64 [sp + 0x48]
 14128: 7b b7 18                 u64 [a4 + 0x18] = a0
 14131: 7b b8 10                 u64 [a4 + 0x10] = a1
 14134: 7b b9 08                 u64 [a4 + 0x8] = a2
 14137: 7b ba                    u64 [a4] = a3
 14139: 82 10 98 00              ra = u64 [sp + 0x98]
 14143: 82 15 90 00              s0 = u64 [sp + 0x90]
 14147: 82 16 88 00              s1 = u64 [sp + 0x88]
 14151: 95 11 a0 00              sp = sp + 0xa0
 14155: 32 00                    ret
      :                          @1064
 14157: 51 08 9a 00              jump @1068 if a1 == 0
      :                          @1065
 14161: 33 0a ff                 a3 = 0xffffffffffffffff
 14164: 33 09 20 83 b8 ed        a2 = 0xffffffffedb88320
 14170: 01                       fallthrough
      :                          @1066
 14171: 7c 7b                    a4 = u8 [a0]
 14173: d3 ba 0a                 a3 = a3 ^ a4
 14176: 97 ab 3f                 a4 = a3 << 0x3f
 14179: 99 bb 3f                 a4 = a4 >>a 0x3f
 14182: 8b aa 01                 i32 a3 = a3 >> 0x1
 14185: d2 9b 0b                 a4 = a4 & a2
 14188: d3 ba 0a                 a3 = a3 ^ a4
 14191: 97 ab 3f                 a4 = a3 << 0x3f
 14194: 99 bb 3f                 a4 = a4 >>a 0x3f
 14197: 8b aa 01                 i32 a3 = a3 >> 0x1
 14200: d2 9b 0b                 a4 = a4 & a2
 14203: d3 ba 0a                 a3 = a3 ^ a4
 14206: 97 ab 3f                 a4 = a3 << 0x3f
 14209: 99 bb 3f                 a4 = a4 >>a 0x3f
 14212: 8b aa 01                 i32 a3 = a3 >> 0x1
 14215: d2 9b 0b                 a4 = a4 & a2
 14218: d3 ba 0a                 a3 = a3 ^ a4
 14221: 97 ab 3f                 a4 = a3 << 0x3f
 14224: 99 bb 3f                 a4 = a4 >>a 0x3f
 14227: 8b aa 01                 i32 a3 = a3 >> 0x1
 14230: d2 9b 0b                 a4 = a4 & a2
 14233: d3 ba 0a                 a3 = a3 ^ a4
 14236: 97 ab 3f                 a4 = a3 << 0x3f
 14239: 99 bb 3f                 a4 = a4 >>a 0x3f
 14242: 8b aa 01                 i32 a3 = a3 >> 0x1
 14245: d2 9b 0b                 a4 = a4 & a2
 14248: d3 ba 0a                 a3 = a3 ^ a4
 14251: 97 ab 3f                 a4 = a3 << 0x3f
 14254: 99 bb 3f                 a4 = a4 >>a 0x3f
 14257: 8b aa 01                 i32 a3 = a3 >> 0x1
 14260: d2 9b 0b                 a4 = a4 & a2
 14263: d3 ba 0a                 a3 = a3 ^ a4
 14266: 97 ab 3f                 a4 = a3 << 0x3f
 14269: 99 bb 3f                 a4 = a4 >>a 0x3f
 14272: 8b aa 01                 i32 a3 = a3 >> 0x1
 14275: d2 9b 0b                 a4 = a4 & a2
 14278: d3 ba 0a                 a3 = a3 ^ a4
 14281: 97 ab 3f                 a4 = a3 << 0x3f
 14284: 99 bb 3f                 a4 = a4 >>a 0x3f
 14287: 8b aa 01                 i32 a3 = a3 >> 0x1
 14290: d2 9b 0b                 a4 = a4 & a2
 14293: d3 ba 0a                 a3 = a3 ^ a4
 14296: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 14299: 95 77 01                 a0 = a0 + 0x1
 14302: 52 08 7d ff              jump @1066 if a1 != 0
      :                          @1067
 14306: 85 a7 ff                 a0 = a3 ^ 0xffffffffffffffff
 14309: 32 00                    ret
      :                          @1068
 14311: 33 07                    a0 = 0
 14313: 28 0c 59                 jump @2357
      :                          @1069
 14316: 84 78 01                 a1 = a0 & 0x1
 14319: 52 08 1a                 jump @1074 if a1 != 0
      :                          @1070
 14322: 64 79                    a2 = a0
 14324: 01                       fallthrough
      :                          @1071
 14325: 64 98                    a1 = a2
 14327: 84 9a 01                 a3 = a2 & 0x1
 14330: 98 99 01                 a2 = a2 >> 0x1
 14333: 51 0a f8                 jump @1071 if a3 == 0
      :                          @1072
 14336: 98 77 01                 a0 = a0 >> 0x1
 14339: 53 18 09 0c              jump @1075 if a1 <u 9
      :                          @1073
 14343: 28 1b                    jump @1078
      :                          @1074
 14345: 64 78                    a1 = a0
 14347: 55 17 09 17              jump @1078 if a0 >=u 9
      :                          @1075
 14351: 33 09 01                 a2 = 0x1
 14354: ae 89 0e                 jump @1077 if a2 >=u a1
      :                          @1076
 14357: cb 87 07                 a0 = a0 /u a1
 14360: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 14363: ca 87 07                 a0 = a0 * a1
 14366: 32 00                    ret
      :                          @1077
 14368: 32 00                    ret
      :                          @1078
 14370: 33 09 03                 a2 = 0x3
 14373: 28 0b                    jump @1080
      :                          @1079
 14375: 95 99 02                 a2 = a2 + 0x2
 14378: ca 99 0a                 a3 = a2 * a2
 14381: ac a8 e2                 jump @1075 if a1 <u a3
      :                          @1080
 14384: 51 09 1e                 jump @1085 if a2 == 0
      :                          @1081
 14387: cd 98 0a                 a3 = a1 %u a2
 14390: 52 0a f1                 jump @1079 if a3 != 0
      :                          @1082
 14393: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 14396: 01                       fallthrough
      :                          @1083
 14397: cb 98 08                 a1 = a1 /u a2
 14400: cd 98 0b                 a4 = a1 %u a2
 14403: 51 0b fa                 jump @1083 if a4 == 0
      :                          @1084
 14406: cb 97 07                 a0 = a0 /u a2
 14409: ca a7 07                 a0 = a0 * a3
 14412: 28 db                    jump @1079
      :                          @1085
 14414: 00                       trap
      :                          @1086
 14415: 33 02 01                 t0 = 0x1
 14418: 55 17 04 16              jump @1089 if a0 >=u 4
      :                          @1087
 14422: 33 09 01                 a2 = 0x1
 14425: 01                       fallthrough
      :                          @1088
 14426: 88 7a 02                 a3 = a0 <u 0x2
 14429: 95 77 01                 a0 = a0 + 0x1
 14432: da a7 02                 t0 = a0 if a3 == 0
 14435: ca 92 07                 a0 = t0 * a2
 14438: 32 00                    ret
      :                          @1089
 14440: 33 0a 02                 a3 = 0x2
 14443: 33 09 01                 a2 = 0x1
 14446: 28 14                    jump @1091
      :                          @1090
 14448: 95 a8 fe                 a1 = a3 + 0xfffffffffffffffe
 14451: 88 88 01                 a1 = a1 <u 0x1
 14454: c9 8a 0a                 a3 = a3 - a1
 14457: 95 aa 02                 a3 = a3 + 0x2
 14460: ca aa 08                 a1 = a3 * a3
 14463: ac 87 db                 jump @1088 if a0 <u a1
      :                          @1091
 14466: 51 0a 24                 jump @1096 if a3 == 0
      :                          @1092
 14469: cd a7 0b                 a4 = a0 %u a3
 14472: 52 0b e8                 jump @1090 if a4 != 0
      :                          @1093
 14475: 33 0b 01                 a4 = 0x1
 14478: 33 0c 01                 a5 = 0x1
 14481: 01                       fallthrough
      :                          @1094
 14482: cb a7 07                 a0 = a0 /u a3
 14485: ca ac 0c                 a5 = a5 * a3
 14488: cd a7 08                 a1 = a0 %u a3
 14491: c8 cb 0b                 a4 = a4 + a5
 14494: 51 08 f4                 jump @1094 if a1 == 0
      :                          @1095
 14497: ca 9b 09                 a2 = a4 * a2
 14500: 28 cc                    jump @1090
      :                          @1096
 14502: 00                       trap
      :                          @1097
 14503: 33 09 04                 a2 = 0x4
 14506: 33 08 01                 a1 = 0x1
 14509: ae 97 0e                 jump @1099 if a0 >=u a2
      :                          @1098
 14512: 88 77 02                 a0 = a0 <u 0x2
 14515: 85 77 01                 a0 = a0 ^ 0x1
 14518: cf 78 07                 a0 = a1 << a0
 14521: 32 00                    ret
      :                          @1099
 14523: 33 09 02                 a2 = 0x2
 14526: 33 08 01                 a1 = 0x1
 14529: 28 14                    jump @1101
      :                          @1100
 14531: 95 9a fe                 a3 = a2 + 0xfffffffffffffffe
 14534: 88 aa 01                 a3 = a3 <u 0x1
 14537: c9 a9 09                 a2 = a2 - a3
 14540: 95 99 02                 a2 = a2 + 0x2
 14543: ca 99 0a                 a3 = a2 * a2
 14546: ac a7 de                 jump @1098 if a0 <u a3
      :                          @1101
 14549: 51 09 21                 jump @1106 if a2 == 0
      :                          @1102
 14552: cd 97 0a                 a3 = a0 %u a2
 14555: 52 0a e8                 jump @1100 if a3 != 0
      :                          @1103
 14558: 33 0a ff                 a3 = 0xffffffffffffffff
 14561: 01                       fallthrough
      :                          @1104
 14562: cb 97 07                 a0 = a0 /u a2
 14565: cd 97 0b                 a4 = a0 %u a2
 14568: 95 aa 01                 a3 = a3 + 0x1
 14571: 51 0b f7                 jump @1104 if a4 == 0
      :                          @1105
 14574: 95 aa 02                 a3 = a3 + 0x2
 14577: ca 8a 08                 a1 = a3 * a1
 14580: 28 cf                    jump @1100
      :                          @1106
 14582: 00                       trap
      :                          @1107
 14583: 33 08 01                 a1 = 0x1
 14586: 55 17 04 13              jump @1111 if a0 >=u 4
      :                          @1108
 14590: 64 7a                    a3 = a0
 14592: 01                       fallthrough
      :                          @1109
 14593: 88 a9 02                 a2 = a3 <u 0x2
 14596: 9a 87                    a0 = -a1
 14598: db 98 07                 a0 = a1 if a2 != 0
 14601: 32 00                    ret
      :                          @1110
 14603: 32 00                    ret
      :                          @1111
 14605: 33 09 02                 a2 = 0x2
 14608: 33 08 01                 a1 = 0x1
 14611: 28 17                    jump @1114
      :                          @1112
 14613: 64 7a                    a3 = a0
 14615: 01                       fallthrough
      :                          @1113
 14616: 95 9b fe                 a4 = a2 + 0xfffffffffffffffe
 14619: 88 bb 01                 a4 = a4 <u 0x1
 14622: c9 b9 09                 a2 = a2 - a4
 14625: 95 99 02                 a2 = a2 + 0x2
 14628: ca 99 0b                 a4 = a2 * a2
 14631: ac ba da                 jump @1109 if a3 <u a4
      :                          @1114
 14634: 51 09 18                 jump @1118 if a2 == 0
      :                          @1115
 14637: cb 97 0a                 a3 = a0 /u a2
 14640: ca 9a 0b                 a4 = a3 * a2
 14643: ab b7 e2                 jump @1112 if a0 != a4
      :                          @1116
 14646: cd 9a 07                 a0 = a3 %u a2
 14649: 51 07 d2                 jump @1110 if a0 == 0
      :                          @1117
 14652: 9a 88                    a1 = -a1
 14654: 64 a7                    a0 = a3
 14656: 28 d8                    jump @1113
      :                          @1118
 14658: 00                       trap
      :                          @1119
 14659: 82 9a                    a3 = u64 [a2]
 14661: c8 6a 05                 s0 = a3 + s1
 14664: ac a5 f9 01              jump @1164 if s0 <u a3
      :                          @1120
 14668: 95 5b 01                 a4 = s0 + 0x1
 14671: 88 bc 01                 a5 = a4 <u 0x1
 14674: d8 b2 0b                 a4 = t0 <u a4
 14677: d4 cb 0b                 a4 = a4 | a5
 14680: 52 0b e9 01              jump @1164 if a4 != 0
      :                          @1121
 14684: 82 9b                    a4 = u64 [a2]
 14686: ab ab e5                 jump @1119 if a4 != a3
      :                          @1122
 14689: 7b 95                    u64 [a2] = s0
 14691: 33 0c                    a5 = 0
 14693: 7b 18 10                 u64 [sp + 0x10] = a1
 14696: 7b 17                    u64 [sp] = a0
 14698: 33 07 10 01 03           a0 = 0x30110
 14703: 7b 17 20                 u64 [sp + 0x20] = a0
 14706: 95 78 00 00 01           a1 = a0 + 0x10000
 14711: c9 58 07                 a0 = a1 - s0
 14714: 7b 17 18                 u64 [sp + 0x18] = a0
 14717: 33 08                    a1 = 0
 14719: 64 69                    a2 = s1
 14721: 50 20 26 01 f7 79        ra = 294, jump @2893
      :                          @1123 [@dyn 147]
 14727: 33 03 00 00 01           t1 = 0x10000
 14732: 82 12 20                 t0 = u64 [sp + 0x20]
 14735: 49 11 28                 u64 [sp + 40] = 0
 14738: 49 11 30 08              u64 [sp + 48] = 0x8
 14742: 49 11 38                 u64 [sp + 56] = 0
 14745: 7b 16 08                 u64 [sp + 0x8] = s1
 14748: 97 69 02                 a2 = s1 << 0x2
 14751: c8 32 07                 a0 = t0 + t1
 14754: 01                       fallthrough
      :                          @1124
 14755: 82 78                    a1 = u64 [a0]
 14757: c8 98 0a                 a3 = a1 + a2
 14760: ac 8a 9a 01              jump @1165 if a3 <u a1
      :                          @1125
 14764: 95 ab 04                 a4 = a3 + 0x4
 14767: d8 ab 0c                 a5 = a4 <u a3
 14770: d8 b3 0b                 a4 = t1 <u a4
 14773: d4 cb 0b                 a4 = a4 | a5
 14776: 52 0b 8a 01              jump @1165 if a4 != 0
      :                          @1126
 14780: c9 a2 0b                 a4 = t0 - a3
 14783: c8 3b 0b                 a4 = a4 + t1
 14786: 84 bc 03                 a5 = a4 & 0x3
 14789: c8 ca 0a                 a3 = a3 + a5
 14792: 01                       fallthrough
      :                          @1127
 14793: 82 76                    s1 = u64 [a0]
 14795: ab 86 d8                 jump @1124 if s1 != a1
      :                          @1128
 14798: 7b 7a                    u64 [a0] = a3
 14800: c9 cb 05                 s0 = a4 - a5
 14803: 64 57                    a0 = s0
 14805: 33 08                    a1 = 0
 14807: 50 20 28 01 a1 79        ra = 296, jump @2893
      :                          @1129 [@dyn 148]
 14813: 64 50                    ra = s0
 14815: 33 05 02                 s0 = 0x2
 14818: 48 10 04 01              u32 [ra + 4] = 0x1
 14822: 82 14 10                 t2 = u64 [sp + 0x10]
 14825: ae 54 20                 jump @1131 if t2 >=u s0
      :                          @1130
 14828: 82 16 08                 s1 = u64 [sp + 0x8]
 14831: 82 17                    a0 = u64 [sp]
 14833: 7b 76                    u64 [a0] = s1
 14835: 7b 70 08                 u64 [a0 + 0x8] = ra
 14838: 7b 76 10                 u64 [a0 + 0x10] = s1
 14841: 82 13 18                 t1 = u64 [sp + 0x18]
 14844: 33 07 10 01 03           a0 = 0x30110
 14849: 95 77 00 00 01           a0 = a0 + 0x10000
 14854: 28 15 01                 jump @1157
      :                          @1131
 14857: 33 08                    a1 = 0
 14859: 49 11 20 08              u64 [sp + 32] = 0x8
 14863: 82 13 18                 t1 = u64 [sp + 0x18]
 14866: 28 1e                    jump @1134
      :                          @1132
 14868: 97 66 02                 s1 = s1 << 0x2
 14871: c8 06 06                 s1 = s1 + ra
 14874: 48 06                    u32 [s1 + 0] = 0
 14876: 01                       fallthrough
      :                          @1133
 14877: d8 45 07                 a0 = s0 <u t2
 14880: c8 75 05                 s0 = s0 + a0
 14883: d8 54 09                 a2 = t2 <u s0
 14886: 85 99 01                 a2 = a2 ^ 0x1
 14889: d2 97 07                 a0 = a0 & a2
 14892: 51 07 9a 00              jump @1149 if a0 == 0
      :                          @1134
 14896: ac 54 10 01              jump @1163 if t2 <u s0
      :                          @1135
 14900: c8 53 07                 a0 = t1 + s0
 14903: 7c 77                    a0 = u8 [a0]
 14905: 51 07 08                 jump @1138 if a0 == 0
      :                          @1136
 14908: 52 08 4a                 jump @1143 if a1 != 0
      :                          @1137
 14911: 28 de                    jump @1133
      :                          @1138
 14913: 82 17 28                 a0 = u64 [sp + 0x28]
 14916: ab 78 1e                 jump @1141 if a1 != a0
      :                          @1139
 14919: 95 17 28                 a0 = sp + 0x28
 14922: 64 06                    s1 = ra
 14924: 50 20 2a 01 6b e8        ra = 298, jump @708
      :                          @1140 [@dyn 149]
 14930: 64 60                    ra = s1
 14932: 82 14 10                 t2 = u64 [sp + 0x10]
 14935: 82 13 18                 t1 = u64 [sp + 0x18]
 14938: 82 18 38                 a1 = u64 [sp + 0x38]
 14941: 82 19 30                 a2 = u64 [sp + 0x30]
 14944: 28 06                    jump @1142
      :                          @1141
 14946: 82 19 20                 a2 = u64 [sp + 0x20]
 14949: 01                       fallthrough
      :                          @1142
 14950: 97 87 03                 a0 = a1 << 0x3
 14953: c8 97 07                 a0 = a0 + a2
 14956: 7b 75                    u64 [a0] = s0
 14958: 95 88 01                 a1 = a1 + 0x1
 14961: 7b 18 38                 u64 [sp + 0x38] = a1
 14964: 82 17 30                 a0 = u64 [sp + 0x30]
 14967: 7b 17 20                 u64 [sp + 0x20] = a0
 14970: 97 57 02                 a0 = s0 << 0x2
 14973: c8 07 07                 a0 = a0 + ra
 14976: 48 07 ff                 u32 [a0 + 0] = 0xffffffffffffffff
 14979: 51 08 9a                 jump @1133 if a1 == 0
      :                          @1143
 14982: 97 59 02                 a2 = s0 << 0x2
 14985: c8 09 09                 a2 = a2 + ra
 14988: 97 8a 03                 a3 = a1 << 0x3
 14991: 82 1b 20                 a4 = u64 [sp + 0x20]
 14994: 01                       fallthrough
      :                          @1144
 14995: 82 b7                    a0 = u64 [a4]
 14997: ca 57 06                 s1 = a0 * s0
 15000: ac 64 85                 jump @1133 if t2 <u s1
      :                          @1145
 15003: c8 63 0c                 a5 = t1 + s1
 15006: 33 02 01                 t0 = 0x1
 15009: 78 c2                    u8 [a5] = t0
 15011: 51 07 9c 00              jump @1162 if a0 == 0
      :                          @1146
 15015: cd 75 07                 a0 = s0 %u a0
 15018: 51 07 6a ff              jump @1132 if a0 == 0
      :                          @1147
 15022: 81 97                    a0 = i32 [a2]
 15024: 95 bb 08                 a4 = a4 + 0x8
 15027: 97 66 02                 s1 = s1 << 0x2
 15030: c8 06 06                 s1 = s1 + ra
 15033: 8d 77                    i32 a0 = -a0
 15035: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 15038: 7a 67                    u32 [s1] = a0
 15040: 52 0a d3                 jump @1144 if a3 != 0
      :                          @1148
 15043: 28 5a ff                 jump @1133
      :                          @1149
 15046: 82 18 28                 a1 = u64 [sp + 0x28]
 15049: 82 16 08                 s1 = u64 [sp + 0x8]
 15052: 82 17                    a0 = u64 [sp]
 15054: 7b 76                    u64 [a0] = s1
 15056: 7b 70 08                 u64 [a0 + 0x8] = ra
 15059: 7b 76 10                 u64 [a0 + 0x10] = s1
 15062: 82 15 20                 s0 = u64 [sp + 0x20]
 15065: 51 08 37                 jump @1156 if a1 == 0
      :                          @1150
 15068: 56 28 00 20 34           jump @1156 if a1 >u 8192
      :                          @1151
 15073: 97 88 03                 a1 = a1 << 0x3
 15076: 33 09 10 01 03           a2 = 0x30110
 15081: 95 99 00 00 01           a2 = a2 + 0x10000
 15086: 01                       fallthrough
      :                          @1152
 15087: 82 97                    a0 = u64 [a2]
 15089: c9 79 0a                 a3 = a2 - a0
 15092: ab 5a 1c                 jump @1156 if a3 != s0
      :                          @1153
 15095: c9 87 0a                 a3 = a0 - a1
 15098: 01                       fallthrough
      :                          @1154
 15099: 82 9b                    a4 = u64 [a2]
 15101: ab 7b f2                 jump @1152 if a4 != a0
      :                          @1155
 15104: 7b 9a                    u64 [a2] = a3
 15106: 33 0c                    a5 = 0
 15108: 33 07 10 01 03           a0 = 0x30110
 15113: 95 77 00 00 01           a0 = a0 + 0x10000
 15118: 28 0d                    jump @1157
      :                          @1156
 15120: 33 07 10 01 03           a0 = 0x30110
 15125: 95 77 00 00 01           a0 = a0 + 0x10000
 15130: 01                       fallthrough
      :                          @1157
 15131: 82 78                    a1 = u64 [a0]
 15133: c9 87 09                 a2 = a0 - a1
 15136: ab 39 11                 jump @1161 if a2 != t1
      :                          @1158
 15139: c9 68 09                 a2 = a1 - s1
 15142: 01                       fallthrough
      :                          @1159
 15143: 82 7a                    a3 = u64 [a0]
 15145: ab 8a f2                 jump @1157 if a3 != a1
      :                          @1160
 15148: 7b 79                    u64 [a0] = a2
 15150: 33 0b                    a4 = 0
 15152: 01                       fallthrough
      :                          @1161
 15153: 82 10 50                 ra = u64 [sp + 0x50]
 15156: 82 15 48                 s0 = u64 [sp + 0x48]
 15159: 82 16 40                 s1 = u64 [sp + 0x40]
 15162: 95 11 58                 sp = sp + 0x58
 15165: 32 00                    ret
      :                          @1162
 15167: 00                       trap
      :                          @1163
 15168: 00                       trap
      :                          @1164
 15169: 00                       trap
      :                          @1165
 15170: 00                       trap
      :                          @1166
 15171: c8 98 08                 a1 = a1 + a2
 15174: 01                       fallthrough
      :                          @1167
 15175: 95 99 01                 a2 = a2 + 0x1
 15178: ca 99 0a                 a3 = a2 * a2
 15181: ac a7 1a                 jump @1172 if a0 <u a3
      :                          @1168
 15184: 51 09 1b                 jump @1173 if a2 == 0
      :                          @1169
 15187: cb 97 0a                 a3 = a0 /u a2
 15190: ca 9a 0b                 a4 = a3 * a2
 15193: ab 7b ee                 jump @1167 if a4 != a0
      :                          @1170
 15196: aa a9 e7                 jump @1166 if a2 == a3
      :                          @1171
 15199: c8 98 08                 a1 = a1 + a2
 15202: c8 a8 08                 a1 = a1 + a3
 15205: 28 e2                    jump @1167
      :                          @1172
 15207: 64 87                    a0 = a1
 15209: 32 00                    ret
      :                          @1173
 15211: 00                       trap
      :                          @1174
 15212: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 15222: d3 79 09                 a2 = a2 ^ a0
 15225: e1 89 09                 a2 = a2 | ~a1
 15228: 51 09 57                 jump @1181 if a2 == 0
      :                          @1175
 15231: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 15234: 33 0b 03                 a4 = 0x3
 15237: 8e 9a                    a3 = a2 >u 0
 15239: ae b8 16                 jump @1177 if a1 >=u a4
      :                          @1176
 15242: 95 a8 ff                 a1 = a3 + 0xffffffffffffffff
 15245: d3 a9 09                 a2 = a2 ^ a3
 15248: 8e 97                    a0 = a2 >u 0
 15250: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 15253: 33 07 01                 a0 = 0x1
 15256: db 89 07                 a0 = a2 if a1 != 0
 15259: 32 00                    ret
      :                          @1177
 15261: 98 9b 3f                 a4 = a2 >> 0x3f
 15264: c8 9b 0b                 a4 = a4 + a2
 15267: 99 bb 01                 a4 = a4 >>a 0x1
 15270: ce 87 02                 t0 = a0 %s a1
 15273: 9a 8c                    a5 = -a1
 15275: e3 c8 0c                 a5 = maxs(a1, a5)
 15278: 99 27 3f                 a0 = t0 >>a 0x3f
 15281: d2 c7 07                 a0 = a0 & a5
 15284: c8 27 07                 a0 = a0 + t0
 15287: 28 0b                    jump @1179
      :                          @1178
 15289: 98 bb 01                 a4 = a4 >> 0x1
 15292: ca 77 07                 a0 = a0 * a0
 15295: 51 0b cb                 jump @1176 if a4 == 0
      :                          @1179
 15298: 84 bc 01                 a5 = a4 & 0x1
 15301: cd 87 07                 a0 = a0 %u a1
 15304: 51 0c f1                 jump @1178 if a5 == 0
      :                          @1180
 15307: ca a7 0a                 a3 = a0 * a3
 15310: cd 8a 0a                 a3 = a3 %u a1
 15313: 28 e8                    jump @1178
      :                          @1181
 15315: 00                       trap
      :                          @1182
 15316: 51 07 eb 00              jump @1200 if a0 == 0
      :                          @1183
 15320: 95 82 ff                 t0 = a1 + 0xffffffffffffffff
 15323: 98 24 01                 t2 = t0 >> 0x1
 15326: 33 03 01                 t1 = 0x1
 15329: 64 7b                    a4 = a0
 15331: 64 4a                    a3 = t2
 15333: 28 0b                    jump @1185
      :                          @1184
 15335: 98 aa 01                 a3 = a3 >> 0x1
 15338: ca 99 0b                 a4 = a2 * a2
 15341: 51 0a 14                 jump @1187 if a3 == 0
      :                          @1185
 15344: 84 ac 01                 a5 = a3 & 0x1
 15347: cd 8b 09                 a2 = a4 %u a1
 15350: 51 0c f1                 jump @1184 if a5 == 0
      :                          @1186
 15353: ca 39 0b                 a4 = a2 * t1
 15356: cd 8b 03                 t1 = a4 %u a1
 15359: 28 e8                    jump @1184
      :                          @1187
 15361: 33 0a 01                 a3 = 0x1
 15364: ab a3 c3 00              jump @1201 if t1 != a3
      :                          @1188
 15368: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 15371: 7b 15 08                 u64 [sp + 0x8] = s0
 15374: 7b 16                    u64 [sp] = s1
 15376: cd 87 07                 a0 = a0 %u a1
 15379: 01                       fallthrough
      :                          @1189
 15380: ca aa 09                 a2 = a3 * a3
 15383: c8 89 09                 a2 = a2 + a1
 15386: c9 79 09                 a2 = a2 - a0
 15389: cd 89 03                 t1 = a2 %u a1
 15392: 33 0c 01                 a5 = 0x1
 15395: 64 39                    a2 = t1
 15397: 64 4b                    a4 = t2
 15399: 28 0b                    jump @1191
      :                          @1190
 15401: 98 bb 01                 a4 = a4 >> 0x1
 15404: ca 99 09                 a2 = a2 * a2
 15407: 51 0b 14                 jump @1193 if a4 == 0
      :                          @1191
 15410: 84 b5 01                 s0 = a4 & 0x1
 15413: cd 89 09                 a2 = a2 %u a1
 15416: 51 05 f1                 jump @1190 if s0 == 0
      :                          @1192
 15419: ca c9 0c                 a5 = a2 * a5
 15422: cd 8c 0c                 a5 = a5 %u a1
 15425: 28 e8                    jump @1190
      :                          @1193
 15427: aa 2c 0c                 jump @1196 if a5 == t0
      :                          @1194
 15430: 95 aa 01                 a3 = a3 + 0x1
 15433: ab 8a cb                 jump @1189 if a3 != a1
      :                          @1195
 15436: 33 0a                    a3 = 0
 15438: 01                       fallthrough
      :                          @1196
 15439: 33 0c                    a5 = 0
 15441: 95 87 01                 a0 = a1 + 0x1
 15444: 33 0b 01                 a4 = 0x1
 15447: 33 02 04                 t0 = 0x4
 15450: 33 04 01                 t2 = 0x1
 15453: 28 2e                    jump @1198
      :                          @1197
 15455: 98 97 01                 a0 = a2 >> 0x1
 15458: ca aa 05                 s0 = a3 * a3
 15461: cd 85 05                 s0 = s0 %u a1
 15464: ca bb 06                 s1 = a4 * a4
 15467: cd 86 06                 s1 = s1 %u a1
 15470: ca 36 06                 s1 = s1 * t1
 15473: cd 86 06                 s1 = s1 %u a1
 15476: c8 65 05                 s0 = s0 + s1
 15479: ca ba 0a                 a3 = a3 * a4
 15482: cd 85 05                 s0 = s0 %u a1
 15485: cd 8a 0a                 a3 = a3 %u a1
 15488: 97 aa 01                 a3 = a3 << 0x1
 15491: cd 8a 0b                 a4 = a3 %u a1
 15494: 64 5a                    a3 = s0
 15496: ac 29 45                 jump @1202 if a2 <u t0
      :                          @1198
 15499: 64 79                    a2 = a0
 15501: 84 77 02                 a0 = a0 & 0x2
 15504: 51 07 cf                 jump @1197 if a0 == 0
      :                          @1199
 15507: ca 4a 07                 a0 = a3 * t2
 15510: cd 87 07                 a0 = a0 %u a1
 15513: ca bc 05                 s0 = a5 * a4
 15516: cd 85 05                 s0 = s0 %u a1
 15519: ca 35 05                 s0 = s0 * t1
 15522: cd 85 05                 s0 = s0 %u a1
 15525: c8 57 07                 a0 = a0 + s0
 15528: ca b4 05                 s0 = t2 * a4
 15531: cd 87 04                 t2 = a0 %u a1
 15534: cd 85 07                 a0 = s0 %u a1
 15537: ca ca 0c                 a5 = a3 * a5
 15540: cd 8c 0c                 a5 = a5 %u a1
 15543: c8 c7 07                 a0 = a0 + a5
 15546: cd 87 0c                 a5 = a0 %u a1
 15549: 28 a2                    jump @1197
      :                          @1200
 15551: 33 07 01                 a0 = 0x1
 15554: 33 08                    a1 = 0
 15556: 28 64 5c                 jump @2456
      :                          @1201
 15559: 33 07                    a0 = 0
 15561: 64 48                    a1 = t2
 15563: 32 00                    ret
      :                          @1202
 15565: 33 07 01                 a0 = 0x1
 15568: 82 15 08                 s0 = u64 [sp + 0x8]
 15571: 82 16                    s1 = u64 [sp]
 15573: 95 11 10                 sp = sp + 0x10
 15576: 64 48                    a1 = t2
 15578: 32 00                    ret
      :                          @1203
 15580: 51 17 02 2d              jump @1208 if a0 == 2
      :                          @1204
 15584: 84 78 3f                 a1 = a0 & 0x3f
 15587: 51 08 2c                 jump @1209 if a1 == 0
      :                          @1205
 15590: 9b 78 ff                 a1 = 0xffffffffffffffff << a0
 15593: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 15596: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 15599: 33 09 04                 a2 = 0x4
 15602: 01                       fallthrough
      :                          @1206
 15603: ca 99 09                 a2 = a2 * a2
 15606: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 15609: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 15612: cd 89 09                 a2 = a2 %u a1
 15615: 52 07 f4                 jump @1206 if a0 != 0
      :                          @1207
 15618: 88 98 01                 a1 = a2 <u 0x1
 15621: 64 87                    a0 = a1
 15623: 32 00                    ret
      :                          @1208
 15625: 33 07 01                 a0 = 0x1
 15628: 28 91 30                 jump @2047
      :                          @1209
 15631: 00                       trap
      :                          @1210
 15632: 51 17 01 14              jump @1213 if a0 == 1
      :                          @1211
 15636: 52 07 1e                 jump @1214 if a0 != 0
      :                          @1212
 15639: 33 07 02                 a0 = 0x2
 15642: cd 97 03                 t1 = a0 %u a2
 15645: 33 07                    a0 = 0
 15647: 64 38                    a1 = t1
 15649: 28 a6 31                 jump @2060
      :                          @1213
 15652: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 15655: 8e 93                    t1 = a2 >u 0
 15657: 64 3b                    a4 = t1
 15659: 64 b7                    a0 = a4
 15661: 64 38                    a1 = t1
 15663: 28 98 31                 jump @2060
      :                          @1214
 15666: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 15669: 7b 10 18                 u64 [sp + 0x18] = ra
 15672: 7b 15 10                 u64 [sp + 0x10] = s0
 15675: 7b 16 08                 u64 [sp + 0x8] = s1
 15678: 33 04                    t2 = 0
 15680: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 15683: 8e a3                    t1 = a3 >u 0
 15685: 33 0c 02                 a5 = 0x2
 15688: cd 9c 05                 s0 = a5 %u a2
 15691: 9a 9a                    a3 = -a2
 15693: e3 a9 02                 t0 = maxs(a2, a3)
 15696: 64 3a                    a3 = t1
 15698: 01                       fallthrough
      :                          @1215
 15699: ca 85 0b                 a4 = s0 * a1
 15702: d8 7c 05                 s0 = a5 <u a0
 15705: 85 50 01                 ra = s0 ^ 0x1
 15708: c8 5c 0c                 a5 = a5 + s0
 15711: ca 84 05                 s0 = t2 * a1
 15714: c9 5a 05                 s0 = a3 - s0
 15717: c9 b3 06                 s1 = t1 - a4
 15720: ce 95 05                 s0 = s0 %s a2
 15723: 99 5b 3f                 a4 = s0 >>a 0x3f
 15726: d2 2b 0b                 a4 = a4 & t0
 15729: c8 5b 0b                 a4 = a4 + s0
 15732: ce 96 04                 t2 = s1 %s a2
 15735: d8 c7 05                 s0 = a0 <u a5
 15738: d4 50 00                 ra = ra | s0
 15741: 99 46 3f                 s1 = t2 >>a 0x3f
 15744: d2 26 06                 s1 = s1 & t0
 15747: 64 35                    s0 = t1
 15749: c8 46 03                 t1 = s1 + t2
 15752: 64 a4                    t2 = a3
 15754: 64 ba                    a3 = a4
 15756: 51 00 c7                 jump @1215 if ra == 0
      :                          @1216
 15759: 82 10 18                 ra = u64 [sp + 0x18]
 15762: 82 15 10                 s0 = u64 [sp + 0x10]
 15765: 82 16 08                 s1 = u64 [sp + 0x8]
 15768: 95 11 20                 sp = sp + 0x20
 15771: 64 b7                    a0 = a4
 15773: 64 38                    a1 = t1
 15775: 32 00                    ret
      :                          @1217
 15777: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 15780: 7b 10 18                 u64 [sp + 0x18] = ra
 15783: 7b 15 10                 u64 [sp + 0x10] = s0
 15786: 7b 16 08                 u64 [sp + 0x8] = s1
 15789: 95 74 ff                 t2 = a0 + 0xffffffffffffffff
 15792: 84 48 01                 a1 = t2 & 0x1
 15795: 52 08 81 00              jump @1232 if a1 != 0
      :                          @1218
 15799: 33 09 10 01 01           a2 = 0x10110
 15804: 95 93 38                 t1 = a2 + 0x38
 15807: 33 02 01                 t0 = 0x1
 15810: 28 06                    jump @1220
      :                          @1219
 15812: aa 39 27 02              jump @1275 if a2 == t1
      :                          @1220
 15816: 82 9a                    a3 = u64 [a2]
 15818: cd 7a 08                 a1 = a3 %u a0
 15821: 51 08 1e 02              jump @1275 if a1 == 0
      :                          @1221
 15825: 33 0c                    a5 = 0
 15827: 95 99 08                 a2 = a2 + 0x8
 15830: 33 05 01                 s0 = 0x1
 15833: 64 48                    a1 = t2
 15835: 01                       fallthrough
      :                          @1222
 15836: 64 5b                    a4 = s0
 15838: 84 86 02                 s1 = a1 & 0x2
 15841: 98 88 01                 a1 = a1 >> 0x1
 15844: 83 cc 01                 i32 a5 = a5 + 0x1
 15847: 83 55 01                 i32 s0 = s0 + 0x1
 15850: 51 06 f2                 jump @1222 if s1 == 0
      :                          @1223
 15853: 33 0c 01                 a5 = 0x1
 15856: 28 0b                    jump @1225
      :                          @1224
 15858: 98 88 01                 a1 = a1 >> 0x1
 15861: ca aa 0a                 a3 = a3 * a3
 15864: 51 08 14                 jump @1227 if a1 == 0
      :                          @1225
 15867: 84 85 01                 s0 = a1 & 0x1
 15870: cd 7a 0a                 a3 = a3 %u a0
 15873: 51 05 f1                 jump @1224 if s0 == 0
      :                          @1226
 15876: ca ca 0c                 a5 = a3 * a5
 15879: cd 7c 0c                 a5 = a5 %u a0
 15882: 28 e8                    jump @1224
      :                          @1227
 15884: 95 c8 ff                 a1 = a5 + 0xffffffffffffffff
 15887: 88 88 01                 a1 = a1 <u 0x1
 15890: d3 4c 0a                 a3 = a5 ^ t2
 15893: 88 aa 01                 a3 = a3 <u 0x1
 15896: d4 a8 08                 a1 = a1 | a3
 15899: 52 08 a9                 jump @1219 if a1 != 0
      :                          @1228
 15902: e3 2b 08                 a1 = maxs(a4, t0)
 15905: 01                       fallthrough
      :                          @1229
 15906: 83 88 ff                 i32 a1 = a1 + 0xffffffffffffffff
 15909: 51 08 b6 01              jump @1274 if a1 == 0
      :                          @1230
 15913: ca cc 0a                 a3 = a5 * a5
 15916: cd 7a 0c                 a5 = a3 %u a0
 15919: ab 4c f3                 jump @1229 if a5 != t2
      :                          @1231
 15922: 28 92                    jump @1219
      :                          @1232
 15924: 33 08 01                 a1 = 0x1
 15927: 33 0a 02                 a3 = 0x2
 15930: 64 49                    a2 = t2
 15932: 28 0b                    jump @1234
      :                          @1233
 15934: 98 99 01                 a2 = a2 >> 0x1
 15937: ca aa 0a                 a3 = a3 * a3
 15940: 51 09 14                 jump @1236 if a2 == 0
      :                          @1234
 15943: 84 9b 01                 a4 = a2 & 0x1
 15946: cd 7a 0a                 a3 = a3 %u a0
 15949: 51 0b f1                 jump @1233 if a4 == 0
      :                          @1235
 15952: ca 8a 08                 a1 = a3 * a1
 15955: cd 78 08                 a1 = a1 %u a0
 15958: 28 e8                    jump @1233
      :                          @1236
 15960: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 15963: 8e 99                    a2 = a2 >u 0
 15965: d3 48 08                 a1 = a1 ^ t2
 15968: 8e 88                    a1 = a1 >u 0
 15970: d2 98 08                 a1 = a1 & a2
 15973: 52 08 73 01              jump @1273 if a1 != 0
      :                          @1237
 15977: 33 0a 45 01              a3 = 0x145
 15981: cd 7a 08                 a1 = a3 %u a0
 15984: 51 08 7b 01              jump @1275 if a1 == 0
      :                          @1238
 15988: 33 08 01                 a1 = 0x1
 15991: 64 49                    a2 = t2
 15993: 28 0b                    jump @1240
      :                          @1239
 15995: 98 99 01                 a2 = a2 >> 0x1
 15998: ca aa 0a                 a3 = a3 * a3
 16001: 51 09 14                 jump @1242 if a2 == 0
      :                          @1240
 16004: 84 9b 01                 a4 = a2 & 0x1
 16007: cd 7a 0a                 a3 = a3 %u a0
 16010: 51 0b f1                 jump @1239 if a4 == 0
      :                          @1241
 16013: ca 8a 08                 a1 = a3 * a1
 16016: cd 78 08                 a1 = a1 %u a0
 16019: 28 e8                    jump @1239
      :                          @1242
 16021: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 16024: 8e 99                    a2 = a2 >u 0
 16026: d3 48 08                 a1 = a1 ^ t2
 16029: 8e 88                    a1 = a1 >u 0
 16031: d2 98 08                 a1 = a1 & a2
 16034: 52 08 36 01              jump @1273 if a1 != 0
      :                          @1243
 16038: 33 0a 9f 24              a3 = 0x249f
 16042: cd 7a 08                 a1 = a3 %u a0
 16045: 51 08 3e 01              jump @1275 if a1 == 0
      :                          @1244
 16049: 33 08 01                 a1 = 0x1
 16052: 64 49                    a2 = t2
 16054: 28 0b                    jump @1246
      :                          @1245
 16056: 98 99 01                 a2 = a2 >> 0x1
 16059: ca aa 0a                 a3 = a3 * a3
 16062: 51 09 14                 jump @1248 if a2 == 0
      :                          @1246
 16065: 84 9b 01                 a4 = a2 & 0x1
 16068: cd 7a 0a                 a3 = a3 %u a0
 16071: 51 0b f1                 jump @1245 if a4 == 0
      :                          @1247
 16074: ca 8a 08                 a1 = a3 * a1
 16077: cd 78 08                 a1 = a1 %u a0
 16080: 28 e8                    jump @1245
      :                          @1248
 16082: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 16085: 8e 99                    a2 = a2 >u 0
 16087: d3 48 08                 a1 = a1 ^ t2
 16090: 8e 88                    a1 = a1 >u 0
 16092: d2 98 08                 a1 = a1 & a2
 16095: 52 08 f9 00              jump @1273 if a1 != 0
      :                          @1249
 16099: 33 0a 12 6e              a3 = 0x6e12
 16103: cd 7a 08                 a1 = a3 %u a0
 16106: 51 08 01 01              jump @1275 if a1 == 0
      :                          @1250
 16110: 33 08 01                 a1 = 0x1
 16113: 64 49                    a2 = t2
 16115: 28 0b                    jump @1252
      :                          @1251
 16117: 98 99 01                 a2 = a2 >> 0x1
 16120: ca aa 0a                 a3 = a3 * a3
 16123: 51 09 14                 jump @1254 if a2 == 0
      :                          @1252
 16126: 84 9b 01                 a4 = a2 & 0x1
 16129: cd 7a 0a                 a3 = a3 %u a0
 16132: 51 0b f1                 jump @1251 if a4 == 0
      :                          @1253
 16135: ca 8a 08                 a1 = a3 * a1
 16138: cd 78 08                 a1 = a1 %u a0
 16141: 28 e8                    jump @1251
      :                          @1254
 16143: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 16146: 8e 99                    a2 = a2 >u 0
 16148: d3 48 08                 a1 = a1 ^ t2
 16151: 8e 88                    a1 = a1 >u 0
 16153: d2 98 08                 a1 = a1 & a2
 16156: 52 08 bc 00              jump @1273 if a1 != 0
      :                          @1255
 16160: 33 0a d7 e0 06           a3 = 0x6e0d7
 16165: cd 7a 08                 a1 = a3 %u a0
 16168: 51 08 c3 00              jump @1275 if a1 == 0
      :                          @1256
 16172: 33 08 01                 a1 = 0x1
 16175: 64 49                    a2 = t2
 16177: 28 0b                    jump @1258
      :                          @1257
 16179: 98 99 01                 a2 = a2 >> 0x1
 16182: ca aa 0a                 a3 = a3 * a3
 16185: 51 09 14                 jump @1260 if a2 == 0
      :                          @1258
 16188: 84 9b 01                 a4 = a2 & 0x1
 16191: cd 7a 0a                 a3 = a3 %u a0
 16194: 51 0b f1                 jump @1257 if a4 == 0
      :                          @1259
 16197: ca 8a 08                 a1 = a3 * a1
 16200: cd 78 08                 a1 = a1 %u a0
 16203: 28 e8                    jump @1257
      :                          @1260
 16205: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 16208: 8e 99                    a2 = a2 >u 0
 16210: d3 48 08                 a1 = a1 ^ t2
 16213: 8e 88                    a1 = a1 >u 0
 16215: d2 98 08                 a1 = a1 & a2
 16218: 52 08 7e                 jump @1273 if a1 != 0
      :                          @1261
 16221: 33 0a 18 3d 95 00        a3 = 0x953d18
 16227: cd 7a 08                 a1 = a3 %u a0
 16230: 51 08 85 00              jump @1275 if a1 == 0
      :                          @1262
 16234: 33 08 01                 a1 = 0x1
 16237: 64 49                    a2 = t2
 16239: 28 0b                    jump @1264
      :                          @1263
 16241: 98 99 01                 a2 = a2 >> 0x1
 16244: ca aa 0a                 a3 = a3 * a3
 16247: 51 09 14                 jump @1266 if a2 == 0
      :                          @1264
 16250: 84 9b 01                 a4 = a2 & 0x1
 16253: cd 7a 0a                 a3 = a3 %u a0
 16256: 51 0b f1                 jump @1263 if a4 == 0
      :                          @1265
 16259: ca 8a 08                 a1 = a3 * a1
 16262: cd 78 08                 a1 = a1 %u a0
 16265: 28 e8                    jump @1263
      :                          @1266
 16267: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 16270: 8e 99                    a2 = a2 >u 0
 16272: d3 48 08                 a1 = a1 ^ t2
 16275: 8e 88                    a1 = a1 >u 0
 16277: d2 98 08                 a1 = a1 & a2
 16280: 52 08 40                 jump @1273 if a1 != 0
      :                          @1267
 16283: 33 0a fe 91 01 6b        a3 = 0x6b0191fe
 16289: cd 7a 08                 a1 = a3 %u a0
 16292: 51 08 47                 jump @1275 if a1 == 0
      :                          @1268
 16295: 33 08 01                 a1 = 0x1
 16298: 64 49                    a2 = t2
 16300: 28 0b                    jump @1270
      :                          @1269
 16302: 98 99 01                 a2 = a2 >> 0x1
 16305: ca aa 0a                 a3 = a3 * a3
 16308: 51 09 14                 jump @1272 if a2 == 0
      :                          @1270
 16311: 84 9b 01                 a4 = a2 & 0x1
 16314: cd 7a 0a                 a3 = a3 %u a0
 16317: 51 0b f1                 jump @1269 if a4 == 0
      :                          @1271
 16320: ca 8a 08                 a1 = a3 * a1
 16323: cd 78 08                 a1 = a1 %u a0
 16326: 28 e8                    jump @1269
      :                          @1272
 16328: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 16331: 8e 99                    a2 = a2 >u 0
 16333: d3 48 08                 a1 = a1 ^ t2
 16336: 8e 88                    a1 = a1 >u 0
 16338: d2 98 08                 a1 = a1 & a2
 16341: 51 08 16                 jump @1275 if a1 == 0
      :                          @1273
 16344: 33 08                    a1 = 0
 16346: 01                       fallthrough
      :                          @1274
 16347: 64 87                    a0 = a1
 16349: 82 10 18                 ra = u64 [sp + 0x18]
 16352: 82 15 10                 s0 = u64 [sp + 0x10]
 16355: 82 16 08                 s1 = u64 [sp + 0x8]
 16358: 95 11 20                 sp = sp + 0x20
 16361: 32 00                    ret
      :                          @1275
 16363: 9a 78                    a1 = -a0
 16365: e3 87 02                 t0 = maxs(a0, a1)
 16368: 33 0b 01                 a4 = 0x1
 16371: 33 0a 05                 a3 = 0x5
 16374: 33 09 04                 a2 = 0x4
 16377: 01                       fallthrough
      :                          @1276
 16378: ce 7a 06                 s1 = a3 %s a0
 16381: 99 68 3f                 a1 = s1 >>a 0x3f
 16384: d2 28 08                 a1 = a1 & t0
 16387: c8 86 06                 s1 = s1 + a1
 16390: 64 4c                    a5 = t2
 16392: 33 08 01                 a1 = 0x1
 16395: 28 0b                    jump @1278
      :                          @1277
 16397: 98 5c 01                 a5 = s0 >> 0x1
 16400: ca 66 06                 s1 = s1 * s1
 16403: ac 95 16                 jump @1280 if s0 <u a2
      :                          @1278
 16406: 64 c5                    s0 = a5
 16408: 84 cc 02                 a5 = a5 & 0x2
 16411: cd 76 06                 s1 = s1 %u a0
 16414: 51 0c ef                 jump @1277 if a5 == 0
      :                          @1279
 16417: ca 86 08                 a1 = s1 * a1
 16420: cd 78 08                 a1 = a1 %u a0
 16423: 28 e6                    jump @1277
      :                          @1280
 16425: 95 8c ff                 a5 = a1 + 0xffffffffffffffff
 16428: 88 cc 01                 a5 = a5 <u 0x1
 16431: d3 48 08                 a1 = a1 ^ t2
 16434: 8e 88                    a1 = a1 >u 0
 16436: d4 c8 08                 a1 = a1 | a5
 16439: 51 08 0f                 jump @1282 if a1 == 0
      :                          @1281
 16442: 97 b8 01                 a1 = a4 << 0x1
 16445: 9a aa                    a3 = -a3
 16447: c9 8a 0a                 a3 = a3 - a1
 16450: 9a bb                    a4 = -a4
 16452: 28 b6                    jump @1276
      :                          @1282
 16454: 95 74 01                 t2 = a0 + 0x1
 16457: 33 0b                    a4 = 0
 16459: 84 48 01                 a1 = t2 & 0x1
 16462: 52 08 14                 jump @1285 if a1 != 0
      :                          @1283
 16465: 64 48                    a1 = t2
 16467: 01                       fallthrough
      :                          @1284
 16468: 98 84 01                 t2 = a1 >> 0x1
 16471: 84 89 02                 a2 = a1 & 0x2
 16474: 83 bb 01                 i32 a4 = a4 + 0x1
 16477: 64 48                    a1 = t2
 16479: 51 09 f5                 jump @1284 if a2 == 0
      :                          @1285
 16482: 33 08 01                 a1 = 0x1
 16485: 51 04 76 ff              jump @1274 if t2 == 0
      :                          @1286
 16489: 9a a8 01                 a1 = 0x1 - a3
 16492: 99 89 3f                 a2 = a1 >>a 0x3f
 16495: 98 99 3e                 a2 = a2 >> 0x3e
 16498: c8 98 08                 a1 = a1 + a2
 16501: 33 09 01                 a2 = 0x1
 16504: 99 83 02                 t1 = a1 >>a 0x2
 16507: ab 94 0c                 jump @1288 if t2 != a2
      :                          @1287
 16510: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 16513: 8e 8c                    a5 = a1 >u 0
 16515: 64 ca                    a3 = a5
 16517: 28 4e                    jump @1290
      :                          @1288
 16519: 33 05                    s0 = 0
 16521: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 16524: 8e 8c                    a5 = a1 >u 0
 16526: 33 08 02                 a1 = 0x2
 16529: cd 78 06                 s1 = a1 %u a0
 16532: 64 c9                    a2 = a5
 16534: 01                       fallthrough
      :                          @1289
 16535: ca 36 0a                 a3 = s1 * t1
 16538: 64 c6                    s1 = a5
 16540: d8 48 0c                 a5 = a1 <u t2
 16543: 85 c0 01                 ra = a5 ^ 0x1
 16546: c8 c8 08                 a1 = a1 + a5
 16549: ca 35 0c                 a5 = s0 * t1
 16552: c9 c9 0c                 a5 = a2 - a5
 16555: c9 a6 05                 s0 = s1 - a3
 16558: ce 7c 0a                 a3 = a5 %s a0
 16561: 99 ac 3f                 a5 = a3 >>a 0x3f
 16564: d2 2c 0c                 a5 = a5 & t0
 16567: c8 ca 0a                 a3 = a3 + a5
 16570: ce 75 0c                 a5 = s0 %s a0
 16573: d8 84 05                 s0 = t2 <u a1
 16576: d4 50 00                 ra = ra | s0
 16579: 99 c5 3f                 s0 = a5 >>a 0x3f
 16582: d2 25 05                 s0 = s0 & t0
 16585: c8 5c 0c                 a5 = a5 + s0
 16588: 64 95                    s0 = a2
 16590: 64 a9                    a2 = a3
 16592: 51 00 c7                 jump @1289 if ra == 0
      :                          @1290
 16595: 33 08 01                 a1 = 0x1
 16598: 51 0a 05 ff              jump @1274 if a3 == 0
      :                          @1291
 16602: e3 8b 0b                 a4 = maxs(a4, a1)
 16605: ce 73 08                 a1 = t1 %s a0
 16608: 99 89 3f                 a2 = a1 >>a 0x3f
 16611: d2 29 09                 a2 = a2 & t0
 16614: c8 98 08                 a1 = a1 + a2
 16617: cd 78 09                 a2 = a1 %u a0
 16620: 97 99 01                 a2 = a2 << 0x1
 16623: 01                       fallthrough
      :                          @1292
 16624: 83 bb ff                 i32 a4 = a4 + 0xffffffffffffffff
 16627: 8e b8                    a1 = a4 >u 0
 16629: 51 0b e6 fe              jump @1274 if a4 == 0
      :                          @1293
 16633: ca ca 0a                 a3 = a3 * a5
 16636: ce 7a 06                 s1 = a3 %s a0
 16639: 99 6a 3f                 a3 = s1 >>a 0x3f
 16642: d2 2a 0a                 a3 = a3 & t0
 16645: c8 6a 0a                 a3 = a3 + s1
 16648: ca cc 0c                 a5 = a5 * a5
 16651: c9 9c 0c                 a5 = a5 - a2
 16654: ce 7c 06                 s1 = a5 %s a0
 16657: 99 6c 3f                 a5 = s1 >>a 0x3f
 16660: d2 2c 0c                 a5 = a5 & t0
 16663: c8 6c 0c                 a5 = a5 + s1
 16666: 52 0a d6                 jump @1292 if a3 != 0
      :                          @1294
 16669: 28 be fe                 jump @1274
      :                          @1295
 16672: 55 17 02 07              jump @1297 if a0 >=u 2
      :                          @1296
 16676: 28 98 2f                 jump @2086
      :                          @1297
 16679: 64 79                    a2 = a0
 16681: 01                       fallthrough
      :                          @1298
 16682: 51 09 15                 jump @1301 if a2 == 0
      :                          @1299
 16685: 64 98                    a1 = a2
 16687: cb 97 09                 a2 = a0 /u a2
 16690: c8 89 09                 a2 = a2 + a1
 16693: 98 99 01                 a2 = a2 >> 0x1
 16696: ac 89 f2                 jump @1298 if a2 <u a1
      :                          @1300
 16699: 64 87                    a0 = a1
 16701: 32 00                    ret
      :                          @1301
 16703: 00                       trap
      :                          @1302
 16704: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 16707: 7b 15 08                 u64 [sp + 0x8] = s0
 16710: 7b 16                    u64 [sp] = s1
 16712: 82 78                    a1 = u64 [a0]
 16714: 82 73 08                 t1 = u64 [a0 + 0x8]
 16717: 82 72 10                 t0 = u64 [a0 + 0x10]
 16720: 82 7a 18                 a3 = u64 [a0 + 0x18]
 16723: 82 79 20                 a2 = u64 [a0 + 0x20]
 16726: 82 74 28                 t2 = u64 [a0 + 0x28]
 16729: 82 7c 30                 a5 = u64 [a0 + 0x30]
 16732: 82 7b 38                 a4 = u64 [a0 + 0x38]
 16735: 82 77 40                 a0 = u64 [a0 + 0x40]
 16738: 51 08 0c                 jump @1304 if a1 == 0
      :                          @1303
 16741: ca 89 05                 s0 = a2 * a1
 16744: ca a3 06                 s1 = t1 * a3
 16747: ab 65 38                 jump @1305 if s0 != s1
      :                          @1304
 16750: ca 97 05                 s0 = a0 * a2
 16753: ca 4b 06                 s1 = a4 * t2
 16756: c9 65 05                 s0 = s0 - s1
 16759: ca 85 08                 a1 = s0 * a1
 16762: ca a7 07                 a0 = a0 * a3
 16765: ca 4c 06                 s1 = a5 * t2
 16768: c9 76 06                 s1 = s1 - a0
 16771: ca 36 07                 a0 = s1 * t1
 16774: ca ab 0a                 a3 = a4 * a3
 16777: ca 9c 09                 a2 = a5 * a2
 16780: c9 9a 0a                 a3 = a3 - a2
 16783: ca 2a 09                 a2 = a3 * t0
 16786: c8 98 08                 a1 = a1 + a2
 16789: c8 87 07                 a0 = a0 + a1
 16792: 82 15 08                 s0 = u64 [sp + 0x8]
 16795: 82 16                    s1 = u64 [sp]
 16797: 95 11 10                 sp = sp + 0x10
 16800: 28 ed 31                 jump @2099
      :                          @1305
 16803: ca 87 07                 a0 = a0 * a1
 16806: ca c2 09                 a2 = t0 * a5
 16809: c9 97 07                 a0 = a0 - a2
 16812: ca 8b 09                 a2 = a4 * a1
 16815: ca c3 0b                 a4 = t1 * a5
 16818: c9 9b 0b                 a4 = a4 - a2
 16821: ca 84 09                 a2 = t2 * a1
 16824: ca a2 0a                 a3 = t0 * a3
 16827: c9 a9 09                 a2 = a2 - a3
 16830: c9 65 05                 s0 = s0 - s1
 16833: ca 57 07                 a0 = a0 * s0
 16836: ca 9b 0a                 a3 = a4 * a2
 16839: c8 a7 07                 a0 = a0 + a3
 16842: 51 18 ff 12              jump @1307 if a1 == 4294967295
      :                          @1306
 16846: cc 87 07                 a0 = a0 /s a1
 16849: 82 15 08                 s0 = u64 [sp + 0x8]
 16852: 82 16                    s1 = u64 [sp]
 16854: 95 11 10                 sp = sp + 0x10
 16857: 28 b4 31                 jump @2099
      :                          @1307
 16860: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 16870: aa 97 10                 jump @1309 if a0 == a2
      :                          @1308
 16873: 9a 77                    a0 = -a0
 16875: 82 15 08                 s0 = u64 [sp + 0x8]
 16878: 82 16                    s1 = u64 [sp]
 16880: 95 11 10                 sp = sp + 0x10
 16883: 28 9a 31                 jump @2099
      :                          @1309
 16886: 00                       trap
      :                          @1310
 16887: 82 72                    t0 = u64 [a0]
 16889: 82 79 08                 a2 = u64 [a0 + 0x8]
 16892: 82 7a 10                 a3 = u64 [a0 + 0x10]
 16895: 9a 28                    a1 = -t0
 16897: e3 82 0b                 a4 = maxs(t0, a1)
 16900: 51 09 40                 jump @1320 if a2 == 0
      :                          @1311
 16903: 9a 98                    a1 = -a2
 16905: e3 89 08                 a1 = maxs(a2, a1)
 16908: 01                       fallthrough
      :                          @1312
 16909: 64 8c                    a5 = a1
 16911: cd 8b 08                 a1 = a4 %u a1
 16914: 64 cb                    a4 = a5
 16916: 52 08 f9                 jump @1312 if a1 != 0
      :                          @1313
 16919: 82 7b 18                 a4 = u64 [a0 + 0x18]
 16922: 51 0a 32                 jump @1321 if a3 == 0
      :                          @1314
 16925: 9a a7                    a0 = -a3
 16927: e3 7a 08                 a1 = maxs(a3, a0)
 16930: 01                       fallthrough
      :                          @1315
 16931: 64 87                    a0 = a1
 16933: cd 8c 08                 a1 = a5 %u a1
 16936: 64 7c                    a5 = a0
 16938: 52 08 f9                 jump @1315 if a1 != 0
      :                          @1316
 16941: 51 0b 24                 jump @1322 if a4 == 0
      :                          @1317
 16944: 9a b8                    a1 = -a4
 16946: e3 8b 0c                 a5 = maxs(a4, a1)
 16949: 64 78                    a1 = a0
 16951: 01                       fallthrough
      :                          @1318
 16952: 64 c7                    a0 = a5
 16954: cd c8 0c                 a5 = a1 %u a5
 16957: 64 78                    a1 = a0
 16959: 52 0c f9                 jump @1318 if a5 != 0
      :                          @1319
 16962: 28 12                    jump @1323
      :                          @1320
 16964: 64 bc                    a5 = a4
 16966: 82 7b 18                 a4 = u64 [a0 + 0x18]
 16969: 52 0a d4                 jump @1314 if a3 != 0
      :                          @1321
 16972: 64 c7                    a0 = a5
 16974: 52 0b e2                 jump @1317 if a4 != 0
      :                          @1322
 16977: 51 07 16                 jump @1324 if a0 == 0
      :                          @1323
 16980: ca 2b 08                 a1 = a4 * t0
 16983: ca 9a 09                 a2 = a3 * a2
 16986: c9 98 08                 a1 = a1 - a2
 16989: 9a 89                    a2 = -a1
 16991: e3 98 08                 a1 = maxs(a1, a2)
 16994: cb 78 08                 a1 = a1 /u a0
 16997: 32 00                    ret
      :                          @1324
 16999: 00                       trap
      :                          @1325
 17000: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 17003: 7b 10 40                 u64 [sp + 0x40] = ra
 17006: 7b 15 38                 u64 [sp + 0x38] = s0
 17009: 7b 16 30                 u64 [sp + 0x30] = s1
 17012: 82 86                    s1 = u64 [a1]
 17014: 82 89 10                 a2 = u64 [a1 + 0x10]
 17017: 82 8a 08                 a3 = u64 [a1 + 0x8]
 17020: 82 8b 18                 a4 = u64 [a1 + 0x18]
 17023: d4 69 08                 a1 = a2 | s1
 17026: 64 75                    s0 = a0
 17028: 51 08 89 00              jump @1333 if a1 == 0
      :                          @1326
 17032: 7b 1a                    u64 [sp] = a3
 17034: 7b 1b 08                 u64 [sp + 0x8] = a4
 17037: 95 17 18                 a0 = sp + 0x18
 17040: 64 68                    a1 = s1
 17042: 7b 19 10                 u64 [sp + 0x10] = a2
 17045: 50 20 2c 01 a5 e6        ra = 300, jump @788
      :                          @1327 [@dyn 150]
 17051: 82 17 18                 a0 = u64 [sp + 0x18]
 17054: 51 07 8d 00              jump @1337 if a0 == 0
      :                          @1328
 17058: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 17068: d3 86 09                 a2 = s1 ^ a1
 17071: e1 79 09                 a2 = a2 | ~a0
 17074: 51 09 77                 jump @1335 if a2 == 0
      :                          @1329
 17077: 82 12 10                 t0 = u64 [sp + 0x10]
 17080: d3 82 08                 a1 = t0 ^ a1
 17083: e1 78 08                 a1 = a1 | ~a0
 17086: 51 08 6b                 jump @1335 if a1 == 0
      :                          @1330
 17089: 82 18 20                 a1 = u64 [sp + 0x20]
 17092: 82 19 28                 a2 = u64 [sp + 0x28]
 17095: 82 1c                    a5 = u64 [sp]
 17097: ca c8 08                 a1 = a1 * a5
 17100: 82 1b 08                 a4 = u64 [sp + 0x8]
 17103: ca b9 09                 a2 = a2 * a4
 17106: c8 98 08                 a1 = a1 + a2
 17109: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 17119: d3 98 0a                 a3 = a1 ^ a2
 17122: e1 7a 0a                 a3 = a3 | ~a0
 17125: 51 0a 45                 jump @1336 if a3 == 0
      :                          @1331
 17128: ce 78 08                 a1 = a1 %s a0
 17131: c8 78 08                 a1 = a1 + a0
 17134: d3 89 09                 a2 = a2 ^ a1
 17137: e1 79 09                 a2 = a2 | ~a0
 17140: 51 09 36                 jump @1336 if a2 == 0
      :                          @1332
 17143: cc 76 09                 a2 = s1 /s a0
 17146: cc 72 0a                 a3 = t0 /s a0
 17149: ca ca 0a                 a3 = a3 * a5
 17152: ce 78 08                 a1 = a1 %s a0
 17155: ca b9 09                 a2 = a2 * a4
 17158: c9 a9 0b                 a4 = a2 - a3
 17161: 64 8a                    a3 = a1
 17163: 28 05                    jump @1334
      :                          @1333
 17165: 33 07                    a0 = 0
 17167: 01                       fallthrough
      :                          @1334
 17168: 7b 57                    u64 [s0] = a0
 17170: 7b 5a 08                 u64 [s0 + 0x8] = a3
 17173: 7b 5b 18                 u64 [s0 + 0x18] = a4
 17176: 49 15 10                 u64 [s0 + 16] = 0
 17179: 82 10 40                 ra = u64 [sp + 0x40]
 17182: 82 15 38                 s0 = u64 [sp + 0x38]
 17185: 82 16 30                 s1 = u64 [sp + 0x30]
 17188: 95 11 48                 sp = sp + 0x48
 17191: 32 00                    ret
      :                          @1335
 17193: 00                       trap
      :                          @1336
 17194: 00                       trap
      :                          @1337
 17195: 00                       trap
      :                          @1338
 17196: 64 82                    t0 = a1
 17198: 64 93                    t1 = a2
 17200: ca 88 0c                 a5 = a1 * a1
 17203: ca 99 08                 a1 = a2 * a2
 17206: c8 8c 0c                 a5 = a5 + a1
 17209: 51 0c 39                 jump @1342 if a5 == 0
      :                          @1339
 17212: 97 c8 01                 a1 = a5 << 0x1
 17215: 51 08 45                 jump @1344 if a1 == 0
      :                          @1340
 17218: ca a2 04                 t2 = t0 * a3
 17221: ca b3 09                 a2 = t1 * a4
 17224: c8 49 09                 a2 = a2 + t2
 17227: 97 99 01                 a2 = a2 << 0x1
 17230: c8 c9 09                 a2 = a2 + a5
 17233: cc 89 09                 a2 = a2 /s a1
 17236: ca 29 08                 a1 = a2 * t0
 17239: c9 8a 08                 a1 = a3 - a1
 17242: ca 39 09                 a2 = a2 * t1
 17245: c9 9b 09                 a2 = a4 - a2
 17248: ca 88 0a                 a3 = a1 * a1
 17251: ca 99 0b                 a4 = a2 * a2
 17254: c8 ba 04                 t2 = a3 + a4
 17257: 64 3b                    a4 = t1
 17259: 64 2a                    a3 = t0
 17261: ad c4 bf                 jump @1338 if t2 <s a5
      :                          @1341
 17264: 28 07                    jump @1343
      :                          @1342
 17266: 64 b9                    a2 = a4
 17268: 64 a8                    a1 = a3
 17270: 01                       fallthrough
      :                          @1343
 17271: 7b 72                    u64 [a0] = t0
 17273: 7b 73 08                 u64 [a0 + 0x8] = t1
 17276: 7b 78 10                 u64 [a0 + 0x10] = a1
 17279: 7b 79 18                 u64 [a0 + 0x18] = a2
 17282: 32 00                    ret
      :                          @1344
 17284: 00                       trap
      :                          @1345
 17285: 82 5a                    a3 = u64 [s0]
 17287: c8 9a 0b                 a4 = a3 + a2
 17290: ac ab 59 01              jump @1374 if a4 <u a3
      :                          @1346
 17294: 95 bc 08                 a5 = a4 + 0x8
 17297: d8 bc 06                 s1 = a5 <u a4
 17300: d8 c2 0c                 a5 = t0 <u a5
 17303: d4 6c 0c                 a5 = a5 | s1
 17306: 52 0c 49 01              jump @1374 if a5 != 0
      :                          @1347
 17310: c9 b3 06                 s1 = t1 - a4
 17313: c8 26 06                 s1 = s1 + t0
 17316: 84 6c 07                 a5 = s1 & 0x7
 17319: c8 cb 0b                 a4 = a4 + a5
 17322: 01                       fallthrough
      :                          @1348
 17323: 82 58                    a1 = u64 [s0]
 17325: ab a8 d8                 jump @1345 if a1 != a3
      :                          @1349
 17328: 7b 5b                    u64 [s0] = a4
 17330: c9 c6 06                 s1 = s1 - a5
 17333: 64 67                    a0 = s1
 17335: 33 08                    a1 = 0
 17337: 7b 19 08                 u64 [sp + 0x8] = a2
 17340: 50 20 2e 01 bc 6f        ra = 302, jump @2893
      :                          @1350 [@dyn 151]
 17346: 33 07 01                 a0 = 0x1
 17349: 7b 67                    u64 [s1] = a0
 17351: 82 15 10                 s0 = u64 [sp + 0x10]
 17354: 51 05 dd 00              jump @1366 if s0 == 0
      :                          @1351
 17358: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 17361: ac 85 10 01              jump @1372 if s0 <u a1
      :                          @1352
 17365: ac 75 0d 01              jump @1373 if s0 <u a0
      :                          @1353
 17369: 97 88 03                 a1 = a1 << 0x3
 17372: c8 68 08                 a1 = a1 + s1
 17375: 82 88                    a1 = u64 [a1]
 17377: 97 79 03                 a2 = a0 << 0x3
 17380: c8 69 09                 a2 = a2 + s1
 17383: 82 9a                    a3 = u64 [a2]
 17385: d8 57 0b                 a4 = a0 <u s0
 17388: c8 b7 07                 a0 = a0 + a4
 17391: c8 a8 08                 a1 = a1 + a3
 17394: d8 75 0a                 a3 = s0 <u a0
 17397: 85 aa 01                 a3 = a3 ^ 0x1
 17400: d2 ba 0a                 a3 = a3 & a4
 17403: 7b 98                    u64 [a2] = a1
 17405: 52 0a d1                 jump @1351 if a3 != 0
      :                          @1354
 17408: 33 07 05                 a0 = 0x5
 17411: ac 75 a4 00              jump @1366 if s0 <u a0
      :                          @1355
 17415: 95 78 fb                 a1 = a0 + 0xfffffffffffffffb
 17418: ac 85 d7 00              jump @1372 if s0 <u a1
      :                          @1356
 17422: ac 75 d4 00              jump @1373 if s0 <u a0
      :                          @1357
 17426: 97 88 03                 a1 = a1 << 0x3
 17429: c8 68 08                 a1 = a1 + s1
 17432: 82 88                    a1 = u64 [a1]
 17434: 97 79 03                 a2 = a0 << 0x3
 17437: c8 69 09                 a2 = a2 + s1
 17440: 82 9a                    a3 = u64 [a2]
 17442: d8 57 0b                 a4 = a0 <u s0
 17445: c8 b7 07                 a0 = a0 + a4
 17448: c8 a8 08                 a1 = a1 + a3
 17451: d8 75 0a                 a3 = s0 <u a0
 17454: 85 aa 01                 a3 = a3 ^ 0x1
 17457: d2 ba 0a                 a3 = a3 & a4
 17460: 7b 98                    u64 [a2] = a1
 17462: 52 0a d1                 jump @1355 if a3 != 0
      :                          @1358
 17465: 33 07 0a                 a0 = 0xa
 17468: ac 75 6b                 jump @1366 if s0 <u a0
      :                          @1359
 17471: 95 78 f6                 a1 = a0 + 0xfffffffffffffff6
 17474: ac 85 9f 00              jump @1372 if s0 <u a1
      :                          @1360
 17478: ac 75 9c 00              jump @1373 if s0 <u a0
      :                          @1361
 17482: 97 88 03                 a1 = a1 << 0x3
 17485: c8 68 08                 a1 = a1 + s1
 17488: 82 88                    a1 = u64 [a1]
 17490: 97 79 03                 a2 = a0 << 0x3
 17493: c8 69 09                 a2 = a2 + s1
 17496: 82 9a                    a3 = u64 [a2]
 17498: d8 57 0b                 a4 = a0 <u s0
 17501: c8 b7 07                 a0 = a0 + a4
 17504: c8 a8 08                 a1 = a1 + a3
 17507: d8 75 0a                 a3 = s0 <u a0
 17510: 85 aa 01                 a3 = a3 ^ 0x1
 17513: d2 ba 0a                 a3 = a3 & a4
 17516: 7b 98                    u64 [a2] = a1
 17518: 52 0a d1                 jump @1359 if a3 != 0
      :                          @1362
 17521: 33 07 19                 a0 = 0x19
 17524: ac 75 33                 jump @1366 if s0 <u a0
      :                          @1363
 17527: 95 78 e7                 a1 = a0 + 0xffffffffffffffe7
 17530: ac 85 67                 jump @1372 if s0 <u a1
      :                          @1364
 17533: ac 75 65                 jump @1373 if s0 <u a0
      :                          @1365
 17536: 97 88 03                 a1 = a1 << 0x3
 17539: c8 68 08                 a1 = a1 + s1
 17542: 82 88                    a1 = u64 [a1]
 17544: 97 79 03                 a2 = a0 << 0x3
 17547: c8 69 09                 a2 = a2 + s1
 17550: 82 9a                    a3 = u64 [a2]
 17552: d8 57 0b                 a4 = a0 <u s0
 17555: c8 b7 07                 a0 = a0 + a4
 17558: c8 a8 08                 a1 = a1 + a3
 17561: d8 75 0a                 a3 = s0 <u a0
 17564: 85 aa 01                 a3 = a3 ^ 0x1
 17567: d2 ba 0a                 a3 = a3 & a4
 17570: 7b 98                    u64 [a2] = a1
 17572: 52 0a d3                 jump @1363 if a3 != 0
      :                          @1366
 17575: 97 55 03                 s0 = s0 << 0x3
 17578: c8 65 05                 s0 = s0 + s1
 17581: 82 57                    a0 = u64 [s0]
 17583: 33 08 10 01 03           a1 = 0x30110
 17588: 95 88 00 00 01           a1 = a1 + 0x10000
 17593: 82 15 08                 s0 = u64 [sp + 0x8]
 17596: 01                       fallthrough
      :                          @1367
 17597: 82 89                    a2 = u64 [a1]
 17599: c9 98 0a                 a3 = a1 - a2
 17602: ab 6a 11                 jump @1371 if a3 != s1
      :                          @1368
 17605: c9 59 0a                 a3 = a2 - s0
 17608: 01                       fallthrough
      :                          @1369
 17609: 82 8b                    a4 = u64 [a1]
 17611: ab 9b f2                 jump @1367 if a4 != a2
      :                          @1370
 17614: 7b 8a                    u64 [a1] = a3
 17616: 33 0c                    a5 = 0
 17618: 01                       fallthrough
      :                          @1371
 17619: 82 10 28                 ra = u64 [sp + 0x28]
 17622: 82 15 20                 s0 = u64 [sp + 0x20]
 17625: 82 16 18                 s1 = u64 [sp + 0x18]
 17628: 95 11 30                 sp = sp + 0x30
 17631: 32 00                    ret
      :                          @1372
 17633: 00                       trap
      :                          @1373
 17634: 00                       trap
      :                          @1374
 17635: 00                       trap
      :                          @1375
 17636: 82 0b                    a4 = u64 [ra]
 17638: c8 7b 09                 a2 = a4 + a0
 17641: ac b9 c8 01              jump @1421 if a2 <u a4
      :                          @1376
 17645: 95 9a 08                 a3 = a2 + 0x8
 17648: d8 9a 05                 s0 = a3 <u a2
 17651: d8 a2 0a                 a3 = t0 <u a3
 17654: d4 5a 0a                 a3 = a3 | s0
 17657: 52 0a b8 01              jump @1421 if a3 != 0
      :                          @1377
 17661: c9 94 0a                 a3 = t2 - a2
 17664: c8 2a 0a                 a3 = a3 + t0
 17667: 84 a5 07                 s0 = a3 & 0x7
 17670: c8 59 09                 a2 = a2 + s0
 17673: 01                       fallthrough
      :                          @1378
 17674: 82 06                    s1 = u64 [ra]
 17676: ab b6 d8                 jump @1375 if s1 != a4
      :                          @1379
 17679: 7b 09                    u64 [ra] = a2
 17681: 01                       fallthrough
      :                          @1380
 17682: c9 5a 0c                 a5 = a3 - s0
 17685: 51 03 b6 00              jump @1397 if t1 == 0
      :                          @1381
 17689: 14 0a ff ff ff ff ff ff ff 7f a3 = 0x7fffffffffffffff
 17699: 64 3b                    a4 = t1
 17701: 64 c9                    a2 = a5
 17703: 01                       fallthrough
      :                          @1382
 17704: 7b 9a                    u64 [a2] = a3
 17706: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 17709: 95 99 08                 a2 = a2 + 0x8
 17712: 52 0b f8                 jump @1382 if a4 != 0
      :                          @1383
 17715: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 17725: 7b 92                    u64 [a2] = t0
 17727: 49 0c                    u64 [a5 + 0] = 0
 17729: 33 0a 01                 a3 = 0x1
 17732: 28 14                    jump @1385
      :                          @1384
 17734: d8 3a 09                 a2 = a3 <u t1
 17737: c8 9a 0a                 a3 = a3 + a2
 17740: d8 a3 0b                 a4 = t1 <u a3
 17743: 85 bb 01                 a4 = a4 ^ 0x1
 17746: d2 b9 09                 a2 = a2 & a4
 17749: 51 09 2a                 jump @1389 if a2 == 0
      :                          @1385
 17752: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
 17755: ac b3 55 01              jump @1420 if t1 <u a4
      :                          @1386
 17759: 97 bb 03                 a4 = a4 << 0x3
 17762: c8 cb 0b                 a4 = a4 + a5
 17765: 82 b9                    a2 = u64 [a4]
 17767: aa 29 df                 jump @1384 if a2 == t0
      :                          @1387
 17770: ac a3 60                 jump @1396 if t1 <u a3
      :                          @1388
 17773: 97 ab 03                 a4 = a3 << 0x3
 17776: c8 cb 0b                 a4 = a4 + a5
 17779: 82 b6                    s1 = u64 [a4]
 17781: 95 99 01                 a2 = a2 + 0x1
 17784: e5 96 09                 a2 = mins(s1, a2)
 17787: 7b b9                    u64 [a4] = a2
 17789: 28 c9                    jump @1384
      :                          @1389
 17791: 33 0a 05                 a3 = 0x5
 17794: ac a3 a0 00              jump @1406 if t1 <u a3
      :                          @1390
 17798: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 17808: 28 25                    jump @1393
      :                          @1391
 17810: 97 ab 03                 a4 = a3 << 0x3
 17813: c8 cb 0b                 a4 = a4 + a5
 17816: 82 b6                    s1 = u64 [a4]
 17818: 95 99 01                 a2 = a2 + 0x1
 17821: e5 96 09                 a2 = mins(s1, a2)
 17824: 7b b9                    u64 [a4] = a2
 17826: 01                       fallthrough
      :                          @1392
 17827: d8 3a 09                 a2 = a3 <u t1
 17830: c8 9a 0a                 a3 = a3 + a2
 17833: d8 a3 0b                 a4 = t1 <u a3
 17836: 85 bb 01                 a4 = a4 ^ 0x1
 17839: d2 b9 09                 a2 = a2 & a4
 17842: 51 09 1f                 jump @1398 if a2 == 0
      :                          @1393
 17845: 95 ab fb                 a4 = a3 + 0xfffffffffffffffb
 17848: ac b3 f8 00              jump @1420 if t1 <u a4
      :                          @1394
 17852: 97 bb 03                 a4 = a4 << 0x3
 17855: c8 cb 0b                 a4 = a4 + a5
 17858: 82 b9                    a2 = u64 [a4]
 17860: aa 29 df                 jump @1392 if a2 == t0
      :                          @1395
 17863: ae a3 cb                 jump @1391 if t1 >=u a3
      :                          @1396
 17866: 00                       trap
      :                          @1397
 17867: 49 0c                    u64 [a5 + 0] = 0
 17869: 64 c8                    a1 = a5
 17871: 28 5a                    jump @1407
      :                          @1398
 17873: 33 0a 0a                 a3 = 0xa
 17876: ac a3 4e                 jump @1406 if t1 <u a3
      :                          @1399
 17879: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 17889: 28 14                    jump @1401
      :                          @1400
 17891: d8 3a 09                 a2 = a3 <u t1
 17894: c8 9a 0a                 a3 = a3 + a2
 17897: d8 a3 0b                 a4 = t1 <u a3
 17900: 85 bb 01                 a4 = a4 ^ 0x1
 17903: d2 b9 09                 a2 = a2 & a4
 17906: 51 09 2a                 jump @1405 if a2 == 0
      :                          @1401
 17909: 95 ab f6                 a4 = a3 + 0xfffffffffffffff6
 17912: ac b3 b8 00              jump @1420 if t1 <u a4
      :                          @1402
 17916: 97 bb 03                 a4 = a4 << 0x3
 17919: c8 cb 0b                 a4 = a4 + a5
 17922: 82 b9                    a2 = u64 [a4]
 17924: aa 29 df                 jump @1400 if a2 == t0
      :                          @1403
 17927: ac a3 c3                 jump @1396 if t1 <u a3
      :                          @1404
 17930: 97 ab 03                 a4 = a3 << 0x3
 17933: c8 cb 0b                 a4 = a4 + a5
 17936: 82 b6                    s1 = u64 [a4]
 17938: 95 99 01                 a2 = a2 + 0x1
 17941: e5 96 09                 a2 = mins(s1, a2)
 17944: 7b b9                    u64 [a4] = a2
 17946: 28 c9                    jump @1400
      :                          @1405
 17948: 33 0a 19                 a3 = 0x19
 17951: ae a3 4b                 jump @1413 if t1 >=u a3
      :                          @1406
 17954: 97 38 03                 a1 = t1 << 0x3
 17957: c8 c8 08                 a1 = a1 + a5
 17960: 01                       fallthrough
      :                          @1407
 17961: 82 88                    a1 = u64 [a1]
 17963: 33 09 10 01 03           a2 = 0x30110
 17968: 95 99 00 00 01           a2 = a2 + 0x10000
 17973: 01                       fallthrough
      :                          @1408
 17974: 82 9a                    a3 = u64 [a2]
 17976: c9 a9 0b                 a4 = a2 - a3
 17979: ab cb 0f                 jump @1412 if a4 != a5
      :                          @1409
 17982: c9 7a 0b                 a4 = a3 - a0
 17985: 01                       fallthrough
      :                          @1410
 17986: 82 96                    s1 = u64 [a2]
 17988: ab a6 f2                 jump @1408 if s1 != a3
      :                          @1411
 17991: 7b 9b                    u64 [a2] = a4
 17993: 01                       fallthrough
      :                          @1412
 17994: 33 07 ff                 a0 = 0xffffffffffffffff
 17997: 14 09 ff ff ff ff ff ff ff 7f a2 = 0x7fffffffffffffff
 18007: d3 89 09                 a2 = a2 ^ a1
 18010: db 98 07                 a0 = a1 if a2 != 0
 18013: 82 10 10                 ra = u64 [sp + 0x10]
 18016: 82 15 08                 s0 = u64 [sp + 0x8]
 18019: 82 16                    s1 = u64 [sp]
 18021: 95 11 18                 sp = sp + 0x18
 18024: 32 00                    ret
      :                          @1413
 18026: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 18036: 28 25                    jump @1416
      :                          @1414
 18038: 97 ab 03                 a4 = a3 << 0x3
 18041: c8 cb 0b                 a4 = a4 + a5
 18044: 82 b6                    s1 = u64 [a4]
 18046: 95 99 01                 a2 = a2 + 0x1
 18049: e5 96 09                 a2 = mins(s1, a2)
 18052: 7b b9                    u64 [a4] = a2
 18054: 01                       fallthrough
      :                          @1415
 18055: d8 3a 09                 a2 = a3 <u t1
 18058: c8 9a 0a                 a3 = a3 + a2
 18061: d8 a3 0b                 a4 = t1 <u a3
 18064: 85 bb 01                 a4 = a4 ^ 0x1
 18067: d2 b9 09                 a2 = a2 & a4
 18070: 51 09 8c                 jump @1406 if a2 == 0
      :                          @1416
 18073: 95 ab e7                 a4 = a3 + 0xffffffffffffffe7
 18076: ac b3 14                 jump @1420 if t1 <u a4
      :                          @1417
 18079: 97 bb 03                 a4 = a4 << 0x3
 18082: c8 cb 0b                 a4 = a4 + a5
 18085: 82 b9                    a2 = u64 [a4]
 18087: aa 29 e0                 jump @1415 if a2 == t0
      :                          @1418
 18090: ae a3 cc                 jump @1414 if t1 >=u a3
      :                          @1419
 18093: 28 1d ff                 jump @1396
      :                          @1420
 18096: 00                       trap
      :                          @1421
 18097: 00                       trap
      :                          @1422
 18098: 51 07 30                 jump @1428 if a0 == 0
      :                          @1423
 18101: 51 08 26                 jump @1427 if a1 == 0
      :                          @1424
 18104: 6a 79                    a2 = ctz a0
 18106: d0 97 09                 a2 = a0 >> a2
 18109: 64 8a                    a3 = a1
 18111: 01                       fallthrough
      :                          @1425
 18112: 6a ab                    a4 = ctz a3
 18114: d0 ba 0a                 a3 = a3 >> a4
 18117: e4 a9 0b                 a4 = maxu(a2, a3)
 18120: e6 a9 09                 a2 = minu(a2, a3)
 18123: c9 9b 0a                 a3 = a4 - a2
 18126: ab 9b f2                 jump @1425 if a4 != a2
      :                          @1426
 18129: d4 87 07                 a0 = a0 | a1
 18132: 6a 77                    a0 = ctz a0
 18134: cf 7b 07                 a0 = a4 << a0
 18137: 32 00                    ret
      :                          @1427
 18139: 64 78                    a1 = a0
 18141: 64 87                    a0 = a1
 18143: 28 51 34                 jump @2165
      :                          @1428
 18146: 64 87                    a0 = a1
 18148: 28 4c 34                 jump @2165
      :                          @1429
 18151: 95 82 ff                 t0 = a1 + 0xffffffffffffffff
 18154: ae 72 7a                 jump @1437 if t0 >=u a0
      :                          @1430
 18157: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 18160: 7b 15 08                 u64 [sp + 0x8] = s0
 18163: c9 87 09                 a2 = a0 - a1
 18166: e6 98 04                 t2 = minu(a1, a2)
 18169: 33 09 01                 a2 = 0x1
 18172: c8 97 03                 t1 = a0 + a2
 18175: 33 0a 01                 a3 = 0x1
 18178: 51 04 27                 jump @1433 if t2 == 0
      :                          @1431
 18181: 33 0a 01                 a3 = 0x1
 18184: 33 0b 01                 a4 = 0x1
 18187: 01                       fallthrough
      :                          @1432
 18188: d8 4b 08                 a1 = a4 <u t2
 18191: 85 8c 01                 a5 = a1 ^ 0x1
 18194: c9 b3 05                 s0 = t1 - a4
 18197: c8 b8 08                 a1 = a1 + a4
 18200: ca a5 0a                 a3 = s0 * a3
 18203: d8 84 05                 s0 = t2 <u a1
 18206: d4 5c 0c                 a5 = a5 | s0
 18209: cb ba 0a                 a3 = a3 /u a4
 18212: 64 8b                    a4 = a1
 18214: 51 0c e6                 jump @1432 if a5 == 0
      :                          @1433
 18217: c9 27 08                 a1 = a0 - t0
 18220: e6 82 02                 t0 = minu(t0, a1)
 18223: 51 02 27                 jump @1436 if t0 == 0
      :                          @1434
 18226: 33 09 01                 a2 = 0x1
 18229: 33 0c 01                 a5 = 0x1
 18232: 01                       fallthrough
      :                          @1435
 18233: d8 2c 08                 a1 = a5 <u t0
 18236: 85 85 01                 s0 = a1 ^ 0x1
 18239: c9 c3 0b                 a4 = t1 - a5
 18242: c8 c8 08                 a1 = a1 + a5
 18245: ca 9b 09                 a2 = a4 * a2
 18248: d8 82 0b                 a4 = t0 <u a1
 18251: d4 5b 0b                 a4 = a4 | s0
 18254: cb c9 09                 a2 = a2 /u a5
 18257: 64 8c                    a5 = a1
 18259: 51 0b e6                 jump @1435 if a4 == 0
      :                          @1436
 18262: ca a9 08                 a1 = a2 * a3
 18265: cb 78 07                 a0 = a1 /u a0
 18268: 82 15 08                 s0 = u64 [sp + 0x8]
 18271: 95 11 10                 sp = sp + 0x10
 18274: 32 00                    ret
      :                          @1437
 18276: 33 07                    a0 = 0
 18278: 28 a5 0d                 jump @1719
      :                          @1438
 18281: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 18284: 7b 10 20                 u64 [sp + 0x20] = ra
 18287: 7b 15 18                 u64 [sp + 0x18] = s0
 18290: 7b 16 10                 u64 [sp + 0x10] = s1
 18293: 64 74                    t2 = a0
 18295: 33 08 02                 a1 = 0x2
 18298: 33 07 01                 a0 = 0x1
 18301: ac 84 f4 00              jump @1456 if t2 <u a1
      :                          @1439
 18305: 95 49 01                 a2 = t2 + 0x1
 18308: 7b 19                    u64 [sp] = a2
 18310: 97 99 03                 a2 = a2 << 0x3
 18313: 33 07 10 01 03           a0 = 0x30110
 18318: 33 03 10 01 03           t1 = 0x30110
 18323: 33 02 00 00 01           t0 = 0x10000
 18328: c8 23 06                 s1 = t1 + t0
 18331: 01                       fallthrough
      :                          @1440
 18332: 82 6a                    a3 = u64 [s1]
 18334: c8 9a 0b                 a4 = a3 + a2
 18337: ac ab e2 00              jump @1461 if a4 <u a3
      :                          @1441
 18341: 95 bc 08                 a5 = a4 + 0x8
 18344: d8 bc 05                 s0 = a5 <u a4
 18347: d8 c2 0c                 a5 = t0 <u a5
 18350: d4 5c 0c                 a5 = a5 | s0
 18353: 52 0c d2 00              jump @1461 if a5 != 0
      :                          @1442
 18357: c9 b3 05                 s0 = t1 - a4
 18360: c8 25 05                 s0 = s0 + t0
 18363: 84 5c 07                 a5 = s0 & 0x7
 18366: c8 cb 0b                 a4 = a4 + a5
 18369: 01                       fallthrough
      :                          @1443
 18370: 82 68                    a1 = u64 [s1]
 18372: ab a8 d8                 jump @1440 if a1 != a3
      :                          @1444
 18375: 7b 6b                    u64 [s1] = a4
 18377: c9 c5 06                 s1 = s0 - a5
 18380: 64 67                    a0 = s1
 18382: 33 08                    a1 = 0
 18384: 7b 19 08                 u64 [sp + 0x8] = a2
 18387: 64 45                    s0 = t2
 18389: 50 20 30 01 a3 6b        ra = 304, jump @2893
      :                          @1445 [@dyn 152]
 18395: 64 63                    t1 = s1
 18397: 64 5b                    a4 = s0
 18399: 49 06 01                 u64 [s1 + 0] = 0x1
 18402: 49 16 08 01              u64 [s1 + 8] = 0x1
 18406: 33 07 02                 a0 = 0x2
 18409: 01                       fallthrough
      :                          @1446
 18410: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 18413: ac 8b 92 00              jump @1457 if a4 <u a1
      :                          @1447
 18417: 95 79 fe                 a2 = a0 + 0xfffffffffffffffe
 18420: ac 9b 8c 00              jump @1458 if a4 <u a2
      :                          @1448
 18424: 95 7a 02                 a3 = a0 + 0x2
 18427: 51 0a 86 00              jump @1459 if a3 == 0
      :                          @1449
 18431: ac 7b 83 00              jump @1460 if a4 <u a0
      :                          @1450
 18435: d8 b7 02                 t0 = a0 <u a4
 18438: 97 7c 01                 a5 = a0 << 0x1
 18441: c8 7c 05                 s0 = a5 + a0
 18444: 97 76 03                 s1 = a0 << 0x3
 18447: c8 27 07                 a0 = a0 + t0
 18450: 97 88 03                 a1 = a1 << 0x3
 18453: c8 38 08                 a1 = a1 + t1
 18456: 82 88                    a1 = u64 [a1]
 18458: 97 99 03                 a2 = a2 << 0x3
 18461: c8 39 09                 a2 = a2 + t1
 18464: 82 99                    a2 = u64 [a2]
 18466: 95 55 fd                 s0 = s0 + 0xfffffffffffffffd
 18469: 95 cc 01                 a5 = a5 + 0x1
 18472: ca c8 08                 a1 = a1 * a5
 18475: ca 59 09                 a2 = a2 * s0
 18478: c8 98 08                 a1 = a1 + a2
 18481: c8 36 06                 s1 = s1 + t1
 18484: cb a8 08                 a1 = a1 /u a3
 18487: d8 7b 09                 a2 = a4 <u a0
 18490: 85 99 01                 a2 = a2 ^ 0x1
 18493: d2 92 09                 a2 = t0 & a2
 18496: 7b 68                    u64 [s1] = a1
 18498: 52 09 a8                 jump @1446 if a2 != 0
      :                          @1451
 18501: 97 b6 03                 s1 = a4 << 0x3
 18504: c8 36 06                 s1 = s1 + t1
 18507: 82 67                    a0 = u64 [s1]
 18509: 33 08 10 01 03           a1 = 0x30110
 18514: 95 88 00 00 01           a1 = a1 + 0x10000
 18519: 82 16 08                 s1 = u64 [sp + 0x8]
 18522: 01                       fallthrough
      :                          @1452
 18523: 82 89                    a2 = u64 [a1]
 18525: c9 98 0a                 a3 = a1 - a2
 18528: ab 3a 11                 jump @1456 if a3 != t1
      :                          @1453
 18531: c9 69 0a                 a3 = a2 - s1
 18534: 01                       fallthrough
      :                          @1454
 18535: 82 8b                    a4 = u64 [a1]
 18537: ab 9b f2                 jump @1452 if a4 != a2
      :                          @1455
 18540: 7b 8a                    u64 [a1] = a3
 18542: 33 0c                    a5 = 0
 18544: 01                       fallthrough
      :                          @1456
 18545: 82 10 20                 ra = u64 [sp + 0x20]
 18548: 82 15 18                 s0 = u64 [sp + 0x18]
 18551: 82 16 10                 s1 = u64 [sp + 0x10]
 18554: 95 11 28                 sp = sp + 0x28
 18557: 32 00                    ret
      :                          @1457
 18559: 00                       trap
      :                          @1458
 18560: 00                       trap
      :                          @1459
 18561: 00                       trap
      :                          @1460
 18562: 00                       trap
      :                          @1461
 18563: 00                       trap
      :                          @1462
 18564: cd 87 0a                 a3 = a0 %u a1
 18567: 51 0a 32                 jump @1468 if a3 == 0
      :                          @1463
 18570: 95 8c ff                 a5 = a1 + 0xffffffffffffffff
 18573: 33 09 03                 a2 = 0x3
 18576: 8e c7                    a0 = a5 >u 0
 18578: ae 98 14                 jump @1466 if a1 >=u a2
      :                          @1464
 18581: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 18584: 88 77 01                 a0 = a0 <u 0x1
 18587: 32 00                    ret
      :                          @1465
 18589: 98 bc 01                 a5 = a4 >> 0x1
 18592: ca aa 0a                 a3 = a3 * a3
 18595: ae b9 f2                 jump @1464 if a2 >=u a4
      :                          @1466
 18598: 64 cb                    a4 = a5
 18600: 84 cc 02                 a5 = a5 & 0x2
 18603: cd 8a 0a                 a3 = a3 %u a1
 18606: 51 0c ef                 jump @1465 if a5 == 0
      :                          @1467
 18609: ca 7a 07                 a0 = a3 * a0
 18612: cd 87 07                 a0 = a0 %u a1
 18615: 28 e6                    jump @1465
      :                          @1468
 18617: 33 07 01                 a0 = 0x1
 18620: 28 5c 0e                 jump @1747
      :                          @1469
 18623: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 18626: 7b 10 38                 u64 [sp + 0x38] = ra
 18629: 7b 15 30                 u64 [sp + 0x30] = s0
 18632: 7b 16 28                 u64 [sp + 0x28] = s1
 18635: 64 70                    ra = a0
 18637: 84 77 01                 a0 = a0 & 0x1
 18640: 52 07 25                 jump @1471 if a0 != 0
      :                          @1470
 18643: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 18648: 49 11 20                 u64 [sp + 32] = 0
 18651: 97 89 0d                 a2 = a1 << 0xd
 18654: d3 98 08                 a1 = a1 ^ a2
 18657: 98 89 07                 a2 = a1 >> 0x7
 18660: d3 98 08                 a1 = a1 ^ a2
 18663: 97 89 11                 a2 = a1 << 0x11
 18666: d3 98 08                 a1 = a1 ^ a2
 18669: 3e 08 e0 00 03           u64 [0x300e0] = a1
 18674: 28 e8 00                 jump @1490
      :                          @1471
 18677: 33 09                    a2 = 0
 18679: 95 07 fe                 a0 = ra + 0xfffffffffffffffe
 18682: 7b 17 18                 u64 [sp + 0x18] = a0
 18685: 95 07 ff                 a0 = ra + 0xffffffffffffffff
 18688: 7b 17 10                 u64 [sp + 0x10] = a0
 18691: 3a 07 20 00 03           a0 = u64 [0x30020]
 18696: 7b 17 08                 u64 [sp + 0x8] = a0
 18699: 33 0a 05                 a3 = 0x5
 18702: 33 0c 03                 a5 = 0x3
 18705: 01                       fallthrough
      :                          @1472
 18706: 95 97 fb                 a0 = a2 + 0xfffffffffffffffb
 18709: 88 77 01                 a0 = a0 <u 0x1
 18712: 7b 17 20                 u64 [sp + 0x20] = a0
 18715: aa a9 bf 00              jump @1490 if a2 == a3
      :                          @1473
 18719: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 18724: 97 78 0d                 a1 = a0 << 0xd
 18727: d3 87 07                 a0 = a0 ^ a1
 18730: 98 78 07                 a1 = a0 >> 0x7
 18733: d3 87 07                 a0 = a0 ^ a1
 18736: 97 78 11                 a1 = a0 << 0x11
 18739: d3 87 07                 a0 = a0 ^ a1
 18742: 3e 07 e0 00 03           u64 [0x300e0] = a0
 18747: 82 18 08                 a1 = u64 [sp + 0x8]
 18750: ca 87 07                 a0 = a0 * a1
 18753: 82 18 18                 a1 = u64 [sp + 0x18]
 18756: cd 87 0b                 a4 = a0 %u a1
 18759: 95 bb 02                 a4 = a4 + 0x2
 18762: cd 0b 07                 a0 = a4 %u ra
 18765: 33 05 01                 s0 = 0x1
 18768: 64 02                    t0 = ra
 18770: 33 06 01                 s1 = 0x1
 18773: 51 07 49                 jump @1484 if a0 == 0
      :                          @1474
 18776: 33 06 01                 s1 = 0x1
 18779: 64 03                    t1 = ra
 18781: 28 18                    jump @1477
      :                          @1475
 18783: 64 72                    t0 = a0
 18785: 01                       fallthrough
      :                          @1476
 18786: d2 23 07                 a0 = t1 & t0
 18789: 84 78 02                 a1 = a0 & 0x2
 18792: 9a 64                    t2 = -s1
 18794: cd 23 07                 a0 = t1 %u t0
 18797: db 84 06                 s1 = t2 if a1 != 0
 18800: 64 23                    t1 = t0
 18802: 51 07 2c                 jump @1484 if a0 == 0
      :                          @1477
 18805: 84 78 01                 a1 = a0 & 0x1
 18808: 52 08 e7                 jump @1475 if a1 != 0
      :                          @1478
 18811: 84 38 07                 a1 = t1 & 0x7
 18814: aa c8 06                 jump @1480 if a1 == a5
      :                          @1479
 18817: ab a8 12                 jump @1482 if a1 != a3
      :                          @1480
 18820: 98 72 01                 t0 = a0 >> 0x1
 18823: 84 78 02                 a1 = a0 & 0x2
 18826: 9a 66                    s1 = -s1
 18828: 64 27                    a0 = t0
 18830: 51 08 f6                 jump @1480 if a1 == 0
      :                          @1481
 18833: 28 d1                    jump @1476
      :                          @1482
 18835: 84 78 02                 a1 = a0 & 0x2
 18838: 98 77 01                 a0 = a0 >> 0x1
 18841: 51 08 fa                 jump @1482 if a1 == 0
      :                          @1483
 18844: 28 c3                    jump @1475
      :                          @1484
 18846: 83 99 01                 i32 a2 = a2 + 0x1
 18849: 82 17 10                 a0 = u64 [sp + 0x10]
 18852: 28 0b                    jump @1486
      :                          @1485
 18854: 98 87 01                 a0 = a1 >> 0x1
 18857: ca bb 0b                 a4 = a4 * a4
 18860: ae 8c 16                 jump @1488 if a5 >=u a1
      :                          @1486
 18863: 64 78                    a1 = a0
 18865: 84 77 02                 a0 = a0 & 0x2
 18868: cd 0b 0b                 a4 = a4 %u ra
 18871: 51 07 ef                 jump @1485 if a0 == 0
      :                          @1487
 18874: ca 5b 07                 a0 = a4 * s0
 18877: cd 07 05                 s0 = a0 %u ra
 18880: 28 e6                    jump @1485
      :                          @1488
 18882: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 18885: 8e 27                    a0 = t0 >u 0
 18887: 88 68 01                 a1 = s1 <u 0x1
 18890: d4 87 07                 a0 = a0 | a1
 18893: 52 07 0d                 jump @1490 if a0 != 0
      :                          @1489
 18896: c9 65 05                 s0 = s0 - s1
 18899: ce 05 07                 a0 = s0 %s ra
 18902: 51 07 3c ff              jump @1472 if a0 == 0
      :                          @1490
 18906: 82 17 20                 a0 = u64 [sp + 0x20]
 18909: 82 10 38                 ra = u64 [sp + 0x38]
 18912: 82 15 30                 s0 = u64 [sp + 0x30]
 18915: 82 16 28                 s1 = u64 [sp + 0x28]
 18918: 95 11 40                 sp = sp + 0x40
 18921: 32 00                    ret
      :                          @1491
 18923: c8 a2 09                 a2 = t0 + a3
 18926: 98 99 01                 a2 = a2 >> 0x1
 18929: d6 99 0b                 a4 = a2 mulhu a2
 18932: ca 99 0c                 a5 = a2 * a2
 18935: db b3 0c                 a5 = t1 if a4 != 0
 18938: aa 8c 17                 jump @1494 if a5 == a1
      :                          @1492
 18941: d8 8c 0b                 a4 = a5 <u a1
 18944: 95 9c 01                 a5 = a2 + 0x1
 18947: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 18950: da b9 02                 t0 = a2 if a4 == 0
 18953: db bc 0a                 a3 = a5 if a4 != 0
 18956: ae a2 df                 jump @1491 if t0 >=u a3
      :                          @1493
 18959: 28 0b                    jump @1496
      :                          @1494
 18961: 64 92                    t0 = a2
 18963: 28 07                    jump @1496
      :                          @1495
 18965: 64 ba                    a3 = a4
 18967: aa 34 3e                 jump @1500 if t2 == t1
      :                          @1496
 18970: 95 22 01                 t0 = t0 + 0x1
 18973: ca 22 09                 a2 = t0 * t0
 18976: c9 89 03                 t1 = a2 - a1
 18979: 33 0c                    a5 = 0
 18981: 64 3a                    a3 = t1
 18983: 01                       fallthrough
      :                          @1497
 18984: c8 ca 0b                 a4 = a3 + a5
 18987: 98 bb 01                 a4 = a4 >> 0x1
 18990: ca bb 04                 t2 = a4 * a4
 18993: d6 bb 05                 s0 = a4 mulhu a4
 18996: 33 09 ff                 a2 = 0xffffffffffffffff
 18999: da 54 09                 a2 = t2 if s0 == 0
 19002: aa 39 db                 jump @1495 if a2 == t1
      :                          @1498
 19005: d8 39 09                 a2 = a2 <u t1
 19008: 95 b5 01                 s0 = a4 + 0x1
 19011: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 19014: da 9b 0a                 a3 = a4 if a2 == 0
 19017: db 95 0c                 a5 = s0 if a2 != 0
 19020: ae ca dc                 jump @1497 if a3 >=u a5
      :                          @1499
 19023: ca aa 04                 t2 = a3 * a3
 19026: ab 34 c8                 jump @1496 if t2 != t1
      :                          @1500
 19029: c9 a2 08                 a1 = t0 - a3
 19032: c8 2a 0a                 a3 = a3 + t0
 19035: 7b 78 08                 u64 [a0 + 0x8] = a1
 19038: 7b 7a 10                 u64 [a0 + 0x10] = a3
 19041: 33 08 01                 a1 = 0x1
 19044: 7b 78                    u64 [a0] = a1
 19046: 82 15 08                 s0 = u64 [sp + 0x8]
 19049: 95 11 10                 sp = sp + 0x10
 19052: 32 00                    ret
      :                          @1501
 19054: 98 aa 01                 a3 = a3 >> 0x1
 19057: ca 77 0c                 a5 = a0 * a0
 19060: 51 0a 38                 jump @1504 if a3 == 0
      :                          @1502
 19063: d6 bc 09                 a2 = a5 mulhu a4
 19066: c9 9c 07                 a0 = a5 - a2
 19069: 98 77 01                 a0 = a0 >> 0x1
 19072: c8 97 07                 a0 = a0 + a2
 19075: 98 77 04                 a0 = a0 >> 0x4
 19078: ca 47 07                 a0 = a0 * t2
 19081: 84 a9 01                 a2 = a3 & 0x1
 19084: c9 7c 07                 a0 = a5 - a0
 19087: 51 09 df                 jump @1501 if a2 == 0
      :                          @1503
 19090: ca 75 08                 a1 = s0 * a0
 19093: d6 b8 09                 a2 = a1 mulhu a4
 19096: c9 98 0c                 a5 = a1 - a2
 19099: 98 cc 01                 a5 = a5 >> 0x1
 19102: c8 c9 09                 a2 = a2 + a5
 19105: 98 99 04                 a2 = a2 >> 0x4
 19108: ca 49 09                 a2 = a2 * t2
 19111: c9 98 05                 s0 = a1 - a2
 19114: 28 c4                    jump @1501
      :                          @1504
 19116: 3a 07 30 00 03           a0 = u64 [0x30030]
 19121: ca 32 09                 a2 = t0 * t1
 19124: d6 79 07                 a0 = a2 mulhu a0
 19127: c9 79 0a                 a3 = a2 - a0
 19130: 98 aa 01                 a3 = a3 >> 0x1
 19133: c8 a7 07                 a0 = a0 + a3
 19136: 98 77 04                 a0 = a0 >> 0x4
 19139: 96 77 15                 a0 = a0 * 0x15
 19142: c9 79 0a                 a3 = a2 - a0
 19145: 3a 09 38 00 03           a2 = u64 [0x30038]
 19150: 95 aa 01                 a3 = a3 + 0x1
 19153: 33 07 01                 a0 = 0x1
 19156: 33 0b 17                 a4 = 0x17
 19159: 28 0b                    jump @1506
      :                          @1505
 19161: 98 aa 01                 a3 = a3 >> 0x1
 19164: ca 88 05                 s0 = a1 * a1
 19167: 51 0a 38                 jump @1508 if a3 == 0
      :                          @1506
 19170: d6 95 0c                 a5 = s0 mulhu a2
 19173: c9 c5 08                 a1 = s0 - a5
 19176: 98 88 01                 a1 = a1 >> 0x1
 19179: c8 c8 08                 a1 = a1 + a5
 19182: 98 88 04                 a1 = a1 >> 0x4
 19185: ca b8 08                 a1 = a1 * a4
 19188: 84 ac 01                 a5 = a3 & 0x1
 19191: c9 85 08                 a1 = s0 - a1
 19194: 51 0c df                 jump @1505 if a5 == 0
      :                          @1507
 19197: ca 87 05                 s0 = a0 * a1
 19200: d6 95 0c                 a5 = s0 mulhu a2
 19203: c9 c5 07                 a0 = s0 - a5
 19206: 98 77 01                 a0 = a0 >> 0x1
 19209: c8 c7 07                 a0 = a0 + a5
 19212: 98 77 04                 a0 = a0 >> 0x4
 19215: ca b7 07                 a0 = a0 * a4
 19218: c9 75 07                 a0 = s0 - a0
 19221: 28 c4                    jump @1505
      :                          @1508
 19223: 82 15 08                 s0 = u64 [sp + 0x8]
 19226: 95 11 10                 sp = sp + 0x10
 19229: 32 00                    ret
      :                          @1509 [@dyn 153]
 19231: 49 11 10                 u64 [sp + 16] = 0
 19234: 33 07 08                 a0 = 0x8
 19237: 7b 17 18                 u64 [sp + 0x18] = a0
 19240: 49 11 20                 u64 [sp + 32] = 0
 19243: 51 06 a9 00              jump @1529 if s1 == 0
      :                          @1510
 19247: 97 66 03                 s1 = s1 << 0x3
 19250: c8 65 03                 t1 = s0 + s1
 19253: 33 06 64                 s1 = 0x64
 19256: 64 52                    t0 = s0
 19258: 7b 13                    u64 [sp] = t1
 19260: 28 13                    jump @1512
      :                          @1511
 19262: 97 89 03                 a2 = a1 << 0x3
 19265: c8 79 09                 a2 = a2 + a0
 19268: 7b 95                    u64 [a2] = s0
 19270: 95 88 01                 a1 = a1 + 0x1
 19273: 7b 18 20                 u64 [sp + 0x20] = a1
 19276: aa 32 4c                 jump @1520 if t0 == t1
      :                          @1512
 19279: 82 18 20                 a1 = u64 [sp + 0x20]
 19282: 82 25                    s0 = u64 [t0]
 19284: 95 22 08                 t0 = t0 + 0x8
 19287: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
 19290: 97 89 03                 a2 = a1 << 0x3
 19293: 01                       fallthrough
      :                          @1513
 19294: 51 09 1b                 jump @1517 if a2 == 0
      :                          @1514
 19297: 82 ac 08                 a5 = u64 [a3 + 0x8]
 19300: 95 ab 08                 a4 = a3 + 0x8
 19303: c8 5c 0c                 a5 = a5 + s0
 19306: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 19309: 64 ba                    a3 = a4
 19311: ac c6 ef                 jump @1513 if s1 <u a5
      :                          @1515
 19314: 7b bc                    u64 [a4] = a5
 19316: ab 32 db                 jump @1512 if t0 != t1
      :                          @1516
 19319: 28 21                    jump @1520
      :                          @1517
 19321: 82 19 10                 a2 = u64 [sp + 0x10]
 19324: ab 98 c2                 jump @1511 if a1 != a2
      :                          @1518
 19327: 95 17 10                 a0 = sp + 0x10
 19330: 7b 12 08                 u64 [sp + 0x8] = t0
 19333: 50 20 34 01 32 d7        ra = 308, jump @708
      :                          @1519 [@dyn 154]
 19339: 82 13                    t1 = u64 [sp]
 19341: 82 12 08                 t0 = u64 [sp + 0x8]
 19344: 82 18 20                 a1 = u64 [sp + 0x20]
 19347: 82 17 18                 a0 = u64 [sp + 0x18]
 19350: 28 a8                    jump @1511
      :                          @1520
 19352: 82 19 10                 a2 = u64 [sp + 0x10]
 19355: 82 17 20                 a0 = u64 [sp + 0x20]
 19358: 51 09 39                 jump @1530 if a2 == 0
      :                          @1521
 19361: 33 08 00 20              a1 = 0x2000
 19365: ac 98 32                 jump @1530 if a1 <u a2
      :                          @1522
 19368: 82 18 18                 a1 = u64 [sp + 0x18]
 19371: 97 99 03                 a2 = a2 << 0x3
 19374: 33 0a 10 01 03           a3 = 0x30110
 19379: 95 aa 00 00 01           a3 = a3 + 0x10000
 19384: 01                       fallthrough
      :                          @1523
 19385: 82 ab                    a4 = u64 [a3]
 19387: c9 ba 0c                 a5 = a3 - a4
 19390: ab 8c 19                 jump @1530 if a5 != a1
      :                          @1524
 19393: c9 9b 0c                 a5 = a4 - a2
 19396: 01                       fallthrough
      :                          @1525
 19397: 82 a6                    s1 = u64 [a3]
 19399: ab b6 f2                 jump @1523 if s1 != a4
      :                          @1526
 19402: 7b ac                    u64 [a3] = a5
 19404: 33 05                    s0 = 0
 19406: 01                       fallthrough
      :                          @1527
 19407: ab b6 ea                 jump @1523 if s1 != a4
      :                          @1528
 19410: 28 05                    jump @1530
      :                          @1529
 19412: 33 07                    a0 = 0
 19414: 01                       fallthrough
      :                          @1530
 19415: 82 10 38                 ra = u64 [sp + 0x38]
 19418: 82 15 30                 s0 = u64 [sp + 0x30]
 19421: 82 16 28                 s1 = u64 [sp + 0x28]
 19424: 95 11 40                 sp = sp + 0x40
 19427: 32 00                    ret
      :                          @1531
 19429: ca c9 09                 a2 = a2 * a5
 19432: 95 00 01                 ra = ra + 0x1
 19435: c8 94 04                 t2 = t2 + a2
 19438: aa 70 47                 jump @1540 if ra == a0
      :                          @1532
 19441: 64 09                    a2 = ra
 19443: 64 7c                    a5 = a0
 19445: 01                       fallthrough
      :                          @1533
 19446: 64 cb                    a4 = a5
 19448: cd c9 0c                 a5 = a2 %u a5
 19451: 64 b9                    a2 = a4
 19453: 52 0c f9                 jump @1533 if a5 != 0
      :                          @1534
 19456: 83 bc                    i32 a5 = a4 + 0
 19458: 51 0c 27                 jump @1539 if a5 == 0
      :                          @1535
 19461: 64 89                    a2 = a1
 19463: aa 2c de                 jump @1531 if a5 == t0
      :                          @1536
 19466: 33 0c 01                 a5 = 0x1
 19469: 64 89                    a2 = a1
 19471: 01                       fallthrough
      :                          @1537
 19472: 83 b5                    i32 s0 = a4 + 0
 19474: 84 b6 01                 s1 = a4 & 0x1
 19477: 33 0a 01                 a3 = 0x1
 19480: db 69 0a                 a3 = a2 if s1 != 0
 19483: ca ca 0c                 a5 = a3 * a5
 19486: 8b bb 01                 i32 a4 = a4 >> 0x1
 19489: ca 99 09                 a2 = a2 * a2
 19492: ac 53 ec                 jump @1537 if t1 <u s0
      :                          @1538
 19495: 28 be                    jump @1531
      :                          @1539
 19497: 33 09 01                 a2 = 0x1
 19500: c8 90 00                 ra = ra + a2
 19503: c8 94 04                 t2 = t2 + a2
 19506: ab 70 bf                 jump @1532 if ra != a0
      :                          @1540
 19509: cb 74 07                 a0 = t2 /u a0
 19512: 82 10 18                 ra = u64 [sp + 0x18]
 19515: 82 15 10                 s0 = u64 [sp + 0x10]
 19518: 82 16 08                 s1 = u64 [sp + 0x8]
 19521: 95 11 20                 sp = sp + 0x20
 19524: 32 00                    ret
      :                          @1541
 19526: 51 07 4f                 jump @1552 if a0 == 0
      :                          @1542
 19529: 33 03                    t1 = 0
 19531: ca 78 02                 t0 = a1 * a0
 19534: 95 7b ff                 a4 = a0 + 0xffffffffffffffff
 19537: 33 09 01                 a2 = 0x1
 19540: 64 8a                    a3 = a1
 19542: 28 05                    jump @1544
      :                          @1543
 19544: 64 8a                    a3 = a1
 19546: 01                       fallthrough
      :                          @1544
 19547: c8 ab 0c                 a5 = a4 + a3
 19550: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 19553: ca c9 09                 a2 = a2 * a5
 19556: 52 0a f7                 jump @1544 if a3 != 0
      :                          @1545
 19559: 95 33 01                 t1 = t1 + 0x1
 19562: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 19565: ab 73 eb                 jump @1543 if t1 != a0
      :                          @1546
 19568: 51 02 2b                 jump @1553 if t0 == 0
      :                          @1547
 19571: 33 08 01                 a1 = 0x1
 19574: 64 27                    a0 = t0
 19576: aa 82 12                 jump @1550 if t0 == a1
      :                          @1548
 19579: 33 07 01                 a0 = 0x1
 19582: 01                       fallthrough
      :                          @1549
 19583: 95 8a 01                 a3 = a1 + 0x1
 19586: ca 78 07                 a0 = a1 * a0
 19589: 64 a8                    a1 = a3
 19591: ab a2 f8                 jump @1549 if t0 != a3
      :                          @1550
 19594: ca 27 07                 a0 = a0 * t0
 19597: 51 09 14                 jump @1554 if a2 == 0
      :                          @1551
 19600: cb 97 07                 a0 = a0 /u a2
 19603: 32 00                    ret
      :                          @1552
 19605: 33 07 01                 a0 = 0x1
 19608: 28 bc 13                 jump @1876
      :                          @1553
 19611: 33 07 01                 a0 = 0x1
 19614: 52 09 f2                 jump @1551 if a2 != 0
      :                          @1554
 19617: 00                       trap
      :                          @1555
 19618: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 19621: 7b 10 40                 u64 [sp + 0x40] = ra
 19624: 7b 15 38                 u64 [sp + 0x38] = s0
 19627: 7b 16 30                 u64 [sp + 0x30] = s1
 19630: 95 79 01                 a2 = a0 + 0x1
 19633: 51 09 6f 01              jump @1584 if a2 == 0
      :                          @1556
 19637: 64 85                    s0 = a1
 19639: 98 98 3c                 a1 = a2 >> 0x3c
 19642: 52 08 67 01              jump @1585 if a1 != 0
      :                          @1557
 19646: 7b 17 08                 u64 [sp + 0x8] = a0
 19649: 88 82 01                 t0 = a1 <u 0x1
 19652: 7b 19 28                 u64 [sp + 0x28] = a2
 19655: 97 99 03                 a2 = a2 << 0x3
 19658: 97 22 03                 t0 = t0 << 0x3
 19661: 33 04 10 01 03           t2 = 0x30110
 19666: 33 03 00 00 01           t1 = 0x10000
 19671: c8 34 00                 ra = t2 + t1
 19674: 01                       fallthrough
      :                          @1558
 19675: 82 0b                    a4 = u64 [ra]
 19677: c8 9b 0c                 a5 = a4 + a2
 19680: ac bc 3f 01              jump @1583 if a5 <u a4
      :                          @1559
 19684: c8 2c 07                 a0 = a5 + t0
 19687: d8 c7 06                 s1 = a0 <u a5
 19690: d8 73 07                 a0 = t1 <u a0
 19693: d4 67 07                 a0 = a0 | s1
 19696: 52 07 2f 01              jump @1583 if a0 != 0
      :                          @1560
 19700: c9 c4 06                 s1 = t2 - a5
 19703: c8 36 0a                 a3 = s1 + t1
 19706: 84 a6 07                 s1 = a3 & 0x7
 19709: c8 6c 0c                 a5 = a5 + s1
 19712: 01                       fallthrough
      :                          @1561
 19713: 82 07                    a0 = u64 [ra]
 19715: ab b7 d8                 jump @1558 if a0 != a4
      :                          @1562
 19718: 7b 0c                    u64 [ra] = a5
 19720: c9 6a 06                 s1 = a3 - s1
 19723: 64 67                    a0 = s1
 19725: 33 08                    a1 = 0
 19727: 7b 19                    u64 [sp] = a2
 19729: 50 20 36 01 67 66        ra = 310, jump @2893
      :                          @1563 [@dyn 155]
 19735: 33 07 01                 a0 = 0x1
 19738: 64 64                    t2 = s1
 19740: 7b 67                    u64 [s1] = a0
 19742: 82 19 08                 a2 = u64 [sp + 0x8]
 19745: 51 09 cb 00              jump @1575 if a2 == 0
      :                          @1564
 19749: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
 19752: 7b 17 20                 u64 [sp + 0x20] = a0
 19755: 33 07 01                 a0 = 0x1
 19758: 82 1c 28                 a5 = u64 [sp + 0x28]
 19761: 33 02 01                 t0 = 0x1
 19764: 28 1a                    jump @1566
      :                          @1565
 19766: 82 19 08                 a2 = u64 [sp + 0x8]
 19769: 82 1a 18                 a3 = u64 [sp + 0x18]
 19772: d8 a9 07                 a0 = a2 <u a3
 19775: 85 77 01                 a0 = a0 ^ 0x1
 19778: 82 18 10                 a1 = u64 [sp + 0x10]
 19781: d2 78 08                 a1 = a1 & a0
 19784: 64 a7                    a0 = a3
 19786: 51 08 93 00              jump @1574 if a1 == 0
      :                          @1566
 19790: ae c7 d0 00              jump @1582 if a0 >=u a5
      :                          @1567
 19794: d8 97 08                 a1 = a0 <u a2
 19797: 7b 18 10                 u64 [sp + 0x10] = a1
 19800: c8 78 08                 a1 = a1 + a0
 19803: 7b 18 18                 u64 [sp + 0x18] = a1
 19806: 97 76 03                 s1 = a0 << 0x3
 19809: c8 46 06                 s1 = s1 + t2
 19812: 82 6b                    a4 = u64 [s1]
 19814: 33 08 01                 a1 = 0x1
 19817: 33 03 02                 t1 = 0x2
 19820: 33 0a 05                 a3 = 0x5
 19823: 33 09 02                 a2 = 0x2
 19826: 28 1e                    jump @1570
      :                          @1568
 19828: 82 1c 28                 a5 = u64 [sp + 0x28]
 19831: 01                       fallthrough
      :                          @1569
 19832: ca 3a 08                 a1 = a3 * t1
 19835: 98 88 01                 a1 = a1 >> 0x1
 19838: 95 a9 02                 a2 = a3 + 0x2
 19841: ca 39 09                 a2 = a2 * t1
 19844: 98 99 01                 a2 = a2 >> 0x1
 19847: 95 33 01                 t1 = t1 + 0x1
 19850: 95 aa 03                 a3 = a3 + 0x3
 19853: ac 87 a9                 jump @1565 if a0 <u a1
      :                          @1570
 19856: c9 87 08                 a1 = a0 - a1
 19859: ae c8 8a 00              jump @1581 if a1 >=u a5
      :                          @1571
 19863: 97 88 03                 a1 = a1 << 0x3
 19866: c8 48 08                 a1 = a1 + t2
 19869: 82 88                    a1 = u64 [a1]
 19871: 83 3c ff                 i32 a5 = t1 + 0xffffffffffffffff
 19874: 84 cc 01                 a5 = a5 & 0x1
 19877: 82 10 20                 ra = u64 [sp + 0x20]
 19880: db c2 00                 ra = t0 if a5 != 0
 19883: ca 08 08                 a1 = a1 * ra
 19886: cd 58 08                 a1 = a1 %u s0
 19889: c8 b8 08                 a1 = a1 + a4
 19892: cd 58 0b                 a4 = a1 %u s0
 19895: 7b 6b                    u64 [s1] = a4
 19897: ac 97 bb                 jump @1568 if a0 <u a2
      :                          @1572
 19900: c9 97 08                 a1 = a0 - a2
 19903: 82 1c 28                 a5 = u64 [sp + 0x28]
 19906: ae c8 5b                 jump @1581 if a1 >=u a5
      :                          @1573
 19909: 97 88 03                 a1 = a1 << 0x3
 19912: c8 48 08                 a1 = a1 + t2
 19915: 82 88                    a1 = u64 [a1]
 19917: ca 08 08                 a1 = a1 * ra
 19920: cd 58 08                 a1 = a1 %u s0
 19923: c8 b8 08                 a1 = a1 + a4
 19926: cd 58 0b                 a4 = a1 %u s0
 19929: 7b 6b                    u64 [s1] = a4
 19931: 28 9d                    jump @1569
      :                          @1574
 19933: 97 97 03                 a0 = a2 << 0x3
 19936: c8 47 07                 a0 = a0 + t2
 19939: 82 77                    a0 = u64 [a0]
 19941: 33 08 00 20              a1 = 0x2000
 19945: ac c8 26                 jump @1580 if a1 <u a5
      :                          @1575
 19948: 33 08 10 01 03           a1 = 0x30110
 19953: 95 88 00 00 01           a1 = a1 + 0x10000
 19958: 82 16                    s1 = u64 [sp]
 19960: 01                       fallthrough
      :                          @1576
 19961: 82 89                    a2 = u64 [a1]
 19963: c9 98 0a                 a3 = a1 - a2
 19966: ab 4a 11                 jump @1580 if a3 != t2
      :                          @1577
 19969: c9 69 0a                 a3 = a2 - s1
 19972: 01                       fallthrough
      :                          @1578
 19973: 82 8b                    a4 = u64 [a1]
 19975: ab 9b f2                 jump @1576 if a4 != a2
      :                          @1579
 19978: 7b 8a                    u64 [a1] = a3
 19980: 33 0c                    a5 = 0
 19982: 01                       fallthrough
      :                          @1580
 19983: 82 10 40                 ra = u64 [sp + 0x40]
 19986: 82 15 38                 s0 = u64 [sp + 0x38]
 19989: 82 16 30                 s1 = u64 [sp + 0x30]
 19992: 95 11 48                 sp = sp + 0x48
 19995: 32 00                    ret
      :                          @1581
 19997: 00                       trap
      :                          @1582
 19998: 00                       trap
      :                          @1583
 19999: 00                       trap
      :                          @1584
 20000: 00                       trap
      :                          @1585
 20001: 00                       trap
      :                          @1586
 20002: 51 18 01 cd 15           jump @1916 if a1 == 1
      :                          @1587
 20007: 83 79                    i32 a2 = a0 + 0
 20009: 51 09 39                 jump @1592 if a2 == 0
      :                          @1588
 20012: 33 0b 01                 a4 = 0x1
 20015: 64 8a                    a3 = a1
 20017: aa b9 23                 jump @1591 if a2 == a4
      :                          @1589
 20020: 33 02 03                 t0 = 0x3
 20023: 64 8a                    a3 = a1
 20025: 33 09 01                 a2 = 0x1
 20028: 01                       fallthrough
      :                          @1590
 20029: 83 73                    i32 t1 = a0 + 0
 20031: 84 7b 01                 a4 = a0 & 0x1
 20034: 33 0c 01                 a5 = 0x1
 20037: db ba 0c                 a5 = a3 if a4 != 0
 20040: ca 9c 09                 a2 = a5 * a2
 20043: 8b 77 01                 i32 a0 = a0 >> 0x1
 20046: ca aa 0a                 a3 = a3 * a3
 20049: ac 32 ec                 jump @1590 if t0 <u t1
      :                          @1591
 20052: ca 9a 09                 a2 = a3 * a2
 20055: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 20058: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 20061: cb 89 07                 a0 = a2 /u a1
 20064: 32 00                    ret
      :                          @1592
 20066: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 20069: cb 89 07                 a0 = a2 /u a1
 20072: 28 87 15                 jump @1916
      :                          @1593
 20075: 82 7b                    a4 = u64 [a0]
 20077: 82 7a 08                 a3 = u64 [a0 + 0x8]
 20080: 82 72 18                 t0 = u64 [a0 + 0x18]
 20083: 82 79 10                 a2 = u64 [a0 + 0x10]
 20086: ca b2 0c                 a5 = t0 * a4
 20089: ca a9 08                 a1 = a2 * a3
 20092: 33 07 ff                 a0 = 0xffffffffffffffff
 20095: aa 8c 21 17              jump @1929 if a5 == a1
      :                          @1594
 20099: c9 8c 0c                 a5 = a5 - a1
 20102: 9a b7                    a0 = -a4
 20104: e3 7b 07                 a0 = maxs(a4, a0)
 20107: 9a a8                    a1 = -a3
 20109: e3 8a 08                 a1 = maxs(a3, a1)
 20112: c8 78 03                 t1 = a1 + a0
 20115: 9a 9b                    a4 = -a2
 20117: e3 b9 0a                 a3 = maxs(a2, a4)
 20120: 9a 2b                    a4 = -t0
 20122: e3 b2 0b                 a4 = maxs(t0, a4)
 20125: c8 ab 09                 a2 = a4 + a3
 20128: e3 93 09                 a2 = maxs(t1, a2)
 20131: c8 b8 08                 a1 = a1 + a4
 20134: c8 a7 07                 a0 = a0 + a3
 20137: e3 78 07                 a0 = maxs(a1, a0)
 20140: ca 79 07                 a0 = a2 * a0
 20143: 9a c8                    a1 = -a5
 20145: e3 8c 08                 a1 = maxs(a5, a1)
 20148: cb 87 07                 a0 = a0 /u a1
 20151: 28 e9 16                 jump @1929
      :                          @1595
 20154: 55 17 02 0b              jump @1597 if a0 >=u 2
      :                          @1596
 20158: 33 07                    a0 = 0
 20160: 64 c8                    a1 = a5
 20162: 28 c0 17                 jump @1942
      :                          @1597
 20165: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 20168: 7b 10 18                 u64 [sp + 0x18] = ra
 20171: 7b 15 10                 u64 [sp + 0x10] = s0
 20174: 7b 16 08                 u64 [sp + 0x8] = s1
 20177: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 20182: 97 9a 0d                 a3 = a2 << 0xd
 20185: d3 a9 09                 a2 = a2 ^ a3
 20188: 98 9a 07                 a3 = a2 >> 0x7
 20191: d3 a9 09                 a2 = a2 ^ a3
 20194: 97 9a 11                 a3 = a2 << 0x11
 20197: d3 a9 09                 a2 = a2 ^ a3
 20200: 3a 0a 40 00 03           a3 = u64 [0x30040]
 20205: 3e 09 e0 00 03           u64 [0x300e0] = a2
 20210: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 20215: 49 01                    u64 [sp + 0] = 0
 20217: ca a9 0c                 a5 = a2 * a3
 20220: 97 b9 0d                 a2 = a4 << 0xd
 20223: d3 b9 09                 a2 = a2 ^ a4
 20226: 98 9b 07                 a4 = a2 >> 0x7
 20229: d3 b9 09                 a2 = a2 ^ a4
 20232: 97 9b 11                 a4 = a2 << 0x11
 20235: d3 b9 09                 a2 = a2 ^ a4
 20238: 3e 09 e0 00 03           u64 [0x300e0] = a2
 20243: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 20248: ca a9 09                 a2 = a2 * a3
 20251: cd 79 09                 a2 = a2 %u a0
 20254: 97 6b 0d                 a4 = s1 << 0xd
 20257: d3 b6 06                 s1 = s1 ^ a4
 20260: 98 6b 07                 a4 = s1 >> 0x7
 20263: d3 b6 06                 s1 = s1 ^ a4
 20266: 97 6b 11                 a4 = s1 << 0x11
 20269: d3 6b 0b                 a4 = a4 ^ s1
 20272: ca ab 0a                 a3 = a4 * a3
 20275: 3e 0b e0 00 03           u64 [0x300e0] = a4
 20280: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 20283: cd 7c 03                 t1 = a5 %u a0
 20286: cd 8a 00                 ra = a3 %u a1
 20289: 95 00 01                 ra = ra + 0x1
 20292: 33 04 01                 t2 = 0x1
 20295: 33 02 01                 t0 = 0x1
 20298: 28 0f                    jump @1600
      :                          @1598
 20300: 33 0c 01                 a5 = 0x1
 20303: 64 a3                    t1 = a3
 20305: 01                       fallthrough
      :                          @1599
 20306: 97 44 01                 t2 = t2 << 0x1
 20309: 52 1c 01 6b              jump @1609 if a5 != 1
      :                          @1600
 20313: 64 3a                    a3 = t1
 20315: 64 48                    a1 = t2
 20317: 51 04 ef                 jump @1598 if t2 == 0
      :                          @1601
 20320: ca 33 0b                 a4 = t1 * t1
 20323: c8 9b 0b                 a4 = a4 + a2
 20326: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 20329: cd 7b 03                 t1 = a4 %u a0
 20332: 52 08 f4                 jump @1601 if a1 != 0
      :                          @1602
 20335: 33 06                    s1 = 0
 20337: 7b 13                    u64 [sp] = t1
 20339: 64 08                    a1 = ra
 20341: 28 07                    jump @1604
      :                          @1603
 20343: 7b 13                    u64 [sp] = t1
 20345: 64 08                    a1 = ra
 20347: 01                       fallthrough
      :                          @1604
 20348: ca 33 0b                 a4 = t1 * t1
 20351: c8 9b 0b                 a4 = a4 + a2
 20354: cd 7b 03                 t1 = a4 %u a0
 20357: d8 a3 0b                 a4 = t1 <u a3
 20360: c9 3a 0c                 a5 = a3 - t1
 20363: c9 a3 05                 s0 = t1 - a3
 20366: db bc 05                 s0 = a5 if a4 != 0
 20369: ca 25 0b                 a4 = s0 * t0
 20372: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 20375: cd 7b 02                 t0 = a4 %u a0
 20378: 52 08 e2                 jump @1604 if a1 != 0
      :                          @1605
 20381: 64 2b                    a4 = t0
 20383: 64 78                    a1 = a0
 20385: 01                       fallthrough
      :                          @1606
 20386: 64 8c                    a5 = a1
 20388: cd 8b 08                 a1 = a4 %u a1
 20391: 64 cb                    a4 = a5
 20393: 52 08 f9                 jump @1606 if a1 != 0
      :                          @1607
 20396: c8 06 06                 s1 = s1 + ra
 20399: d8 46 08                 a1 = s1 <u t2
 20402: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 20405: 88 bb 01                 a4 = a4 <u 0x1
 20408: d2 b8 08                 a1 = a1 & a4
 20411: 52 08 bc                 jump @1603 if a1 != 0
      :                          @1608
 20414: 28 94                    jump @1599
      :                          @1609
 20416: 82 15                    s0 = u64 [sp]
 20418: ab 7c 2c                 jump @1614 if a5 != a0
      :                          @1610
 20421: 33 0b 01                 a4 = 0x1
 20424: 01                       fallthrough
      :                          @1611
 20425: ca 55 08                 a1 = s0 * s0
 20428: c8 98 08                 a1 = a1 + a2
 20431: cd 78 05                 s0 = a1 %u a0
 20434: d8 a5 0c                 a5 = s0 <u a3
 20437: c9 5a 06                 s1 = a3 - s0
 20440: c9 a5 08                 a1 = s0 - a3
 20443: db c6 08                 a1 = s1 if a5 != 0
 20446: 64 76                    s1 = a0
 20448: 01                       fallthrough
      :                          @1612
 20449: 64 6c                    a5 = s1
 20451: cd 68 06                 s1 = a1 %u s1
 20454: 64 c8                    a1 = a5
 20456: 52 06 f9                 jump @1612 if s1 != 0
      :                          @1613
 20459: ae cb de                 jump @1611 if a4 >=u a5
      :                          @1614
 20462: d3 c7 07                 a0 = a0 ^ a5
 20465: 8e 77                    a0 = a0 >u 0
 20467: 82 10 18                 ra = u64 [sp + 0x18]
 20470: 82 15 10                 s0 = u64 [sp + 0x10]
 20473: 82 16 08                 s1 = u64 [sp + 0x8]
 20476: 95 11 20                 sp = sp + 0x20
 20479: 64 c8                    a1 = a5
 20481: 32 00                    ret
      :                          @1615
 20483: 33 0b 02                 a4 = 0x2
 20486: aa b9 2e                 jump @1624 if a2 == a4
      :                          @1616
 20489: 64 98                    a1 = a2
 20491: 95 99 01                 a2 = a2 + 0x1
 20494: ac 79 fb                 jump @1616 if a2 <u a0
      :                          @1617
 20497: 84 9b 01                 a4 = a2 & 0x1
 20500: 51 0b ef                 jump @1615 if a4 == 0
      :                          @1618
 20503: ac a9 1a                 jump @1623 if a2 <u a3
      :                          @1619
 20506: 33 0b 03                 a4 = 0x3
 20509: 01                       fallthrough
      :                          @1620
 20510: 51 0b 03 01              jump @1642 if a4 == 0
      :                          @1621
 20514: cd b9 0c                 a5 = a2 %u a4
 20517: 51 0c e4                 jump @1616 if a5 == 0
      :                          @1622
 20520: 95 bb 02                 a4 = a4 + 0x2
 20523: ca bb 0c                 a5 = a4 * a4
 20526: ae c9 f0                 jump @1620 if a2 >=u a5
      :                          @1623
 20529: 64 9b                    a4 = a2
 20531: 01                       fallthrough
      :                          @1624
 20532: 7b 1b 10                 u64 [sp + 0x10] = a4
 20535: 33 09 e0 00 03           a2 = 0x300e0
 20540: 3a 0a 50 00 03           a3 = u64 [0x30050]
 20545: 33 02 e8 03              t0 = 0x3e8
 20549: 33 0c 02                 a5 = 0x2
 20552: 33 04 09                 t2 = 0x9
 20555: 01                       fallthrough
      :                          @1625
 20556: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 20561: 97 7b 0d                 a4 = a0 << 0xd
 20564: d3 b7 07                 a0 = a0 ^ a4
 20567: 98 7b 07                 a4 = a0 >> 0x7
 20570: d3 b7 07                 a0 = a0 ^ a4
 20573: 97 7b 11                 a4 = a0 << 0x11
 20576: d3 b7 07                 a0 = a0 ^ a4
 20579: ca 37 0b                 a4 = a0 * t1
 20582: 3e 07 e0 00 03           u64 [0x300e0] = a0
 20587: 98 b7 03                 a0 = a4 >> 0x3
 20590: d6 a7 07                 a0 = a0 mulhu a3
 20593: 98 77 04                 a0 = a0 >> 0x4
 20596: ca 27 07                 a0 = a0 * t0
 20599: c9 7b 0b                 a4 = a4 - a0
 20602: 95 b7 64                 a0 = a4 + 0x64
 20605: 28 08                    jump @1627
      :                          @1626
 20607: 33 05 02                 s0 = 0x2
 20610: aa 57 2e                 jump @1635 if a0 == s0
      :                          @1627
 20613: 64 76                    s1 = a0
 20615: 95 77 01                 a0 = a0 + 0x1
 20618: ac c7 fb                 jump @1627 if a0 <u a5
      :                          @1628
 20621: 84 7b 01                 a4 = a0 & 0x1
 20624: 51 0b ef                 jump @1626 if a4 == 0
      :                          @1629
 20627: ac 47 1a                 jump @1634 if a0 <u t2
      :                          @1630
 20630: 33 05 03                 s0 = 0x3
 20633: 01                       fallthrough
      :                          @1631
 20634: 51 05 87 00              jump @1642 if s0 == 0
      :                          @1632
 20638: cd 57 0b                 a4 = a0 %u s0
 20641: 51 0b e4                 jump @1627 if a4 == 0
      :                          @1633
 20644: 95 55 02                 s0 = s0 + 0x2
 20647: ca 55 0b                 a4 = s0 * s0
 20650: ae b7 f0                 jump @1631 if a0 >=u a4
      :                          @1634
 20653: 64 75                    s0 = a0
 20655: 01                       fallthrough
      :                          @1635
 20656: aa 86 9c                 jump @1625 if s1 == a1
      :                          @1636
 20659: ca 86 06                 s1 = s1 * a1
 20662: 51 06 6b                 jump @1642 if s1 == 0
      :                          @1637
 20665: 7b 10 08                 u64 [sp + 0x8] = ra
 20668: 33 07 01 00 01           a0 = 0x10001
 20673: cd 67 08                 a1 = a0 %u s1
 20676: 95 17 18                 a0 = sp + 0x18
 20679: 7b 18                    u64 [sp] = a1
 20681: 64 69                    a2 = s1
 20683: 50 20 38 01 6f d8        ra = 312, jump @788
      :                          @1638 [@dyn 156]
 20689: 82 17 18                 a0 = u64 [sp + 0x18]
 20692: 52 17 01 4f              jump @1644 if a0 != 1
      :                          @1639
 20696: 82 17 20                 a0 = u64 [sp + 0x20]
 20699: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 20709: d3 87 09                 a2 = a0 ^ a1
 20712: e1 69 09                 a2 = a2 | ~s1
 20715: 82 1a 08                 a3 = u64 [sp + 0x8]
 20718: 51 09 34                 jump @1643 if a2 == 0
      :                          @1640
 20721: ce 67 07                 a0 = a0 %s s1
 20724: c8 67 07                 a0 = a0 + s1
 20727: d3 78 08                 a1 = a1 ^ a0
 20730: e1 68 08                 a1 = a1 | ~s1
 20733: 51 08 25                 jump @1643 if a1 == 0
      :                          @1641
 20736: ce 67 07                 a0 = a0 %s s1
 20739: 82 18 10                 a1 = u64 [sp + 0x10]
 20742: ca 85 08                 a1 = s0 * a1
 20745: 7b a8                    u64 [a3] = a1
 20747: 82 18                    a1 = u64 [sp]
 20749: 7b a8 08                 u64 [a3 + 0x8] = a1
 20752: 7b a7 10                 u64 [a3 + 0x10] = a0
 20755: 82 10 40                 ra = u64 [sp + 0x40]
 20758: 82 15 38                 s0 = u64 [sp + 0x38]
 20761: 82 16 30                 s1 = u64 [sp + 0x30]
 20764: 95 11 48                 sp = sp + 0x48
 20767: 32 00                    ret
      :                          @1642
 20769: 00                       trap
      :                          @1643
 20770: 00                       trap
      :                          @1644
 20771: 00                       trap
      :                          @1645
 20772: 98 77 01                 a0 = a0 >> 0x1
 20775: ca aa 0a                 a3 = a3 * a3
 20778: 51 07 14                 jump @1648 if a0 == 0
      :                          @1646
 20781: 84 7b 01                 a4 = a0 & 0x1
 20784: cd 8a 0a                 a3 = a3 %u a1
 20787: 51 0b f1                 jump @1645 if a4 == 0
      :                          @1647
 20790: ca 6a 0b                 a4 = a3 * s1
 20793: cd 8b 06                 s1 = a4 %u a1
 20796: 28 e8                    jump @1645
      :                          @1648
 20798: 95 17 10                 a0 = sp + 0x10
 20801: 64 98                    a1 = a2
 20803: 64 59                    a2 = s0
 20805: 50 20 3a 01 f5 d7        ra = 314, jump @788
      :                          @1649 [@dyn 157]
 20811: 82 17 10                 a0 = u64 [sp + 0x10]
 20814: 52 17 01 52              jump @1654 if a0 != 1
      :                          @1650
 20818: 82 17 18                 a0 = u64 [sp + 0x18]
 20821: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 20831: d3 87 09                 a2 = a0 ^ a1
 20834: e1 59 09                 a2 = a2 | ~s0
 20837: 51 09 3a                 jump @1653 if a2 == 0
      :                          @1651
 20840: ce 57 07                 a0 = a0 %s s0
 20843: c8 57 07                 a0 = a0 + s0
 20846: d3 78 08                 a1 = a1 ^ a0
 20849: e1 58 08                 a1 = a1 | ~s0
 20852: 51 08 2b                 jump @1653 if a1 == 0
      :                          @1652
 20855: ce 57 08                 a1 = a0 %s s0
 20858: cd 56 07                 a0 = s1 %u s0
 20861: 82 19 08                 a2 = u64 [sp + 0x8]
 20864: ca 97 09                 a2 = a0 * a2
 20867: 82 1a                    a3 = u64 [sp]
 20869: c8 a9 09                 a2 = a2 + a3
 20872: cd 59 09                 a2 = a2 %u s0
 20875: ca 89 08                 a1 = a2 * a1
 20878: cd 58 08                 a1 = a1 %u s0
 20881: 82 10 38                 ra = u64 [sp + 0x38]
 20884: 82 15 30                 s0 = u64 [sp + 0x30]
 20887: 82 16 28                 s1 = u64 [sp + 0x28]
 20890: 95 11 40                 sp = sp + 0x40
 20893: 32 00                    ret
      :                          @1653
 20895: 00                       trap
      :                          @1654
 20896: 00                       trap
      :                          @1655
 20897: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 20900: 7b 10 48                 u64 [sp + 0x48] = ra
 20903: 7b 15 40                 u64 [sp + 0x40] = s0
 20906: 7b 16 38                 u64 [sp + 0x38] = s1
 20909: 88 82 01                 t0 = a1 <u 0x1
 20912: d8 b8 06                 s1 = a1 <u a4
 20915: 85 63 01                 t1 = s1 ^ 0x1
 20918: 88 96 01                 s1 = a2 <u 0x1
 20921: d4 26 05                 s0 = s1 | t0
 20924: d4 35 05                 s0 = s0 | t1
 20927: d8 b9 06                 s1 = a2 <u a4
 20930: 85 66 01                 s1 = s1 ^ 0x1
 20933: d4 56 02                 t0 = s1 | s0
 20936: 51 02 08                 jump @1657 if t0 == 0
      :                          @1656
 20939: 33 07                    a0 = 0
 20941: 28 c2 00                 jump @1672
      :                          @1657
 20944: 64 45                    s0 = t2
 20946: 64 c6                    s1 = a5
 20948: 7b 17                    u64 [sp] = a0
 20950: 7b 1a 08                 u64 [sp + 0x8] = a3
 20953: 7b 18 10                 u64 [sp + 0x10] = a1
 20956: 95 17 20                 a0 = sp + 0x20
 20959: 64 98                    a1 = a2
 20961: 64 b9                    a2 = a4
 20963: 7b 1b 18                 u64 [sp + 0x18] = a4
 20966: 50 20 3c 01 54 d7        ra = 316, jump @788
      :                          @1658 [@dyn 158]
 20972: 82 17 20                 a0 = u64 [sp + 0x20]
 20975: 52 17 01 af 00           jump @1674 if a0 != 1
      :                          @1659
 20980: 82 17 28                 a0 = u64 [sp + 0x28]
 20983: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 20993: d3 87 09                 a2 = a0 ^ a1
 20996: 82 12 18                 t0 = u64 [sp + 0x18]
 20999: e1 29 09                 a2 = a2 | ~t0
 21002: 51 09 93 00              jump @1673 if a2 == 0
      :                          @1660
 21006: ce 27 07                 a0 = a0 %s t0
 21009: c8 27 07                 a0 = a0 + t0
 21012: d3 78 08                 a1 = a1 ^ a0
 21015: e1 28 08                 a1 = a1 | ~t0
 21018: 51 08 83 00              jump @1673 if a1 == 0
      :                          @1661
 21022: ce 27 08                 a1 = a0 %s t0
 21025: 82 13 10                 t1 = u64 [sp + 0x10]
 21028: ca 38 07                 a0 = a1 * t1
 21031: cd 27 07                 a0 = a0 %u t0
 21034: 82 19                    a2 = u64 [sp]
 21036: ca 98 08                 a1 = a1 * a2
 21039: cd 28 0a                 a3 = a1 %u t0
 21042: 33 08 01                 a1 = 0x1
 21045: 33 09 01                 a2 = 0x1
 21048: 82 14 08                 t2 = u64 [sp + 0x8]
 21051: 51 0a 22                 jump @1666 if a3 == 0
      :                          @1662
 21054: 33 09 01                 a2 = 0x1
 21057: 28 0b                    jump @1664
      :                          @1663
 21059: 98 aa 01                 a3 = a3 >> 0x1
 21062: ca bb 06                 s1 = a4 * a4
 21065: 51 0a 14                 jump @1666 if a3 == 0
      :                          @1664
 21068: 84 ac 01                 a5 = a3 & 0x1
 21071: cd 46 0b                 a4 = s1 %u t2
 21074: 51 0c f1                 jump @1663 if a5 == 0
      :                          @1665
 21077: ca 9b 09                 a2 = a4 * a2
 21080: cd 49 09                 a2 = a2 %u t2
 21083: 28 e8                    jump @1663
      :                          @1666
 21085: 51 07 22                 jump @1671 if a0 == 0
      :                          @1667
 21088: 33 08 01                 a1 = 0x1
 21091: 28 0b                    jump @1669
      :                          @1668
 21093: 98 77 01                 a0 = a0 >> 0x1
 21096: ca aa 05                 s0 = a3 * a3
 21099: 51 07 14                 jump @1671 if a0 == 0
      :                          @1669
 21102: 84 7b 01                 a4 = a0 & 0x1
 21105: cd 45 0a                 a3 = s0 %u t2
 21108: 51 0b f1                 jump @1668 if a4 == 0
      :                          @1670
 21111: ca 8a 08                 a1 = a3 * a1
 21114: cd 48 08                 a1 = a1 %u t2
 21117: 28 e8                    jump @1668
      :                          @1671
 21119: ca 98 07                 a0 = a1 * a2
 21122: cd 47 07                 a0 = a0 %u t2
 21125: cd 27 07                 a0 = a0 %u t0
 21128: d3 37 07                 a0 = a0 ^ t1
 21131: 88 77 01                 a0 = a0 <u 0x1
 21134: 01                       fallthrough
      :                          @1672
 21135: 82 10 48                 ra = u64 [sp + 0x48]
 21138: 82 15 40                 s0 = u64 [sp + 0x40]
 21141: 82 16 38                 s1 = u64 [sp + 0x38]
 21144: 95 11 50                 sp = sp + 0x50
 21147: 32 00                    ret
      :                          @1673
 21149: 00                       trap
      :                          @1674
 21150: 00                       trap
      :                          @1675
 21151: 82 4b                    a4 = u64 [t2]
 21153: c8 9b 0c                 a5 = a4 + a2
 21156: ac bc d9 00              jump @1696 if a5 <u a4
      :                          @1676
 21160: 95 c8 08                 a1 = a5 + 0x8
 21163: d8 c8 06                 s1 = a1 <u a5
 21166: d8 82 08                 a1 = t0 <u a1
 21169: d4 68 08                 a1 = a1 | s1
 21172: 52 08 c9 00              jump @1696 if a1 != 0
      :                          @1677
 21176: c9 c3 06                 s1 = t1 - a5
 21179: c8 26 06                 s1 = s1 + t0
 21182: 84 68 07                 a1 = s1 & 0x7
 21185: c8 8c 0c                 a5 = a5 + a1
 21188: 01                       fallthrough
      :                          @1678
 21189: 82 47                    a0 = u64 [t2]
 21191: ab b7 d8                 jump @1675 if a0 != a4
      :                          @1679
 21194: 7b 4c                    u64 [t2] = a5
 21196: c9 86 06                 s1 = s1 - a1
 21199: 64 67                    a0 = s1
 21201: 33 08                    a1 = 0
 21203: 7b 1a 10                 u64 [sp + 0x10] = a3
 21206: 64 05                    s0 = ra
 21208: 50 20 3e 01 a0 60        ra = 318, jump @2893
      :                          @1680 [@dyn 159]
 21214: 64 64                    t2 = s1
 21216: 64 56                    s1 = s0
 21218: 82 1a 10                 a3 = u64 [sp + 0x10]
 21221: 33 07                    a0 = 0
 21223: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 21233: 33 02 02                 t0 = 0x2
 21236: 82 13 18                 t1 = u64 [sp + 0x18]
 21239: 01                       fallthrough
      :                          @1681
 21240: 51 07 35                 jump @1686 if a0 == 0
      :                          @1682
 21243: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 21246: ac 8a 7e                 jump @1695 if a3 <u a1
      :                          @1683
 21249: 97 88 03                 a1 = a1 << 0x3
 21252: c8 48 08                 a1 = a1 + t2
 21255: 82 88                    a1 = u64 [a1]
 21257: 82 6b 08                 a4 = u64 [s1 + 0x8]
 21260: ca 8b 08                 a1 = a4 * a1
 21263: 9a 8b                    a4 = -a1
 21265: ac 27 1f                 jump @1687 if a0 <u t0
      :                          @1684
 21268: 95 78 fe                 a1 = a0 + 0xfffffffffffffffe
 21271: ac 8a 65                 jump @1695 if a3 <u a1
      :                          @1685
 21274: 97 88 03                 a1 = a1 << 0x3
 21277: c8 48 08                 a1 = a1 + t2
 21280: 82 88                    a1 = u64 [a1]
 21282: 82 6c 10                 a5 = u64 [s1 + 0x10]
 21285: ca 8c 08                 a1 = a5 * a1
 21288: c9 8b 0b                 a4 = a4 - a1
 21291: 28 05                    jump @1687
      :                          @1686
 21293: 82 3b                    a4 = u64 [t1]
 21295: 01                       fallthrough
      :                          @1687
 21296: 82 68                    a1 = u64 [s1]
 21298: 51 08 47                 jump @1692 if a1 == 0
      :                          @1688
 21301: d3 9b 0c                 a5 = a4 ^ a2
 21304: e1 8c 0c                 a5 = a5 | ~a1
 21307: 51 0c 3f                 jump @1693 if a5 == 0
      :                          @1689
 21310: ac 7a 3d                 jump @1694 if a3 <u a0
      :                          @1690
 21313: d8 a7 0c                 a5 = a0 <u a3
 21316: 97 75 03                 s0 = a0 << 0x3
 21319: c8 c7 07                 a0 = a0 + a5
 21322: c8 45 05                 s0 = s0 + t2
 21325: cc 8b 08                 a1 = a4 /s a1
 21328: d8 7a 0b                 a4 = a3 <u a0
 21331: 85 bb 01                 a4 = a4 ^ 0x1
 21334: d2 cb 0b                 a4 = a4 & a5
 21337: 7b 58                    u64 [s0] = a1
 21339: 52 0b 9d                 jump @1681 if a4 != 0
      :                          @1691
 21342: 82 17 08                 a0 = u64 [sp + 0x8]
 21345: 82 18                    a1 = u64 [sp]
 21347: 7b 87                    u64 [a1] = a0
 21349: 7b 84 08                 u64 [a1 + 0x8] = t2
 21352: 7b 87 10                 u64 [a1 + 0x10] = a0
 21355: 82 10 30                 ra = u64 [sp + 0x30]
 21358: 82 15 28                 s0 = u64 [sp + 0x28]
 21361: 82 16 20                 s1 = u64 [sp + 0x20]
 21364: 95 11 38                 sp = sp + 0x38
 21367: 32 00                    ret
      :                          @1692
 21369: 00                       trap
      :                          @1693
 21370: 00                       trap
      :                          @1694
 21371: 00                       trap
      :                          @1695
 21372: 00                       trap
      :                          @1696
 21373: 00                       trap
      :                          @1697
 21374: 33 02                    t0 = 0
 21376: 51 08 30                 jump @1702 if a1 == 0
      :                          @1698
 21379: 64 83                    t1 = a1
 21381: 64 8b                    a4 = a1
 21383: 01                       fallthrough
      :                          @1699
 21384: 98 bb 01                 a4 = a4 >> 0x1
 21387: c8 2b 0b                 a4 = a4 + t0
 21390: 97 bc 03                 a5 = a4 << 0x3
 21393: c8 7c 0c                 a5 = a5 + a0
 21396: 82 cc                    a5 = u64 [a5]
 21398: aa 9c 29                 jump @1704 if a5 == a2
      :                          @1700
 21401: d9 9c 04                 t2 = a5 <s a2
 21404: d9 c9 0c                 a5 = a2 <s a5
 21407: db cb 03                 t1 = a4 if a5 != 0
 21410: 95 bb 01                 a4 = a4 + 0x1
 21413: db 4b 02                 t0 = a4 if t2 != 0
 21416: c9 23 0b                 a4 = t1 - t0
 21419: ac 32 dd                 jump @1699 if t0 <u t1
      :                          @1701
 21422: 28 19                    jump @1705
      :                          @1702
 21424: 33 0c                    a5 = 0
 21426: 33 07                    a0 = 0
 21428: 28 21 14                 jump @1957
      :                          @1703
 21431: e4 2c 07                 a0 = maxu(a5, t0)
 21434: c9 27 07                 a0 = a0 - t0
 21437: 32 00                    ret
      :                          @1704
 21439: 64 b2                    t0 = a4
 21441: 33 09                    a2 = 0
 21443: 64 8b                    a4 = a1
 21445: 28 07                    jump @1706
      :                          @1705
 21447: 33 09                    a2 = 0
 21449: 64 8b                    a4 = a1
 21451: 01                       fallthrough
      :                          @1706
 21452: 98 bb 01                 a4 = a4 >> 0x1
 21455: c8 9b 0c                 a5 = a4 + a2
 21458: 97 cb 03                 a4 = a5 << 0x3
 21461: c8 7b 0b                 a4 = a4 + a0
 21464: 82 bb                    a4 = u64 [a4]
 21466: aa ab dd                 jump @1703 if a4 == a3
      :                          @1707
 21469: d9 ab 03                 t1 = a4 <s a3
 21472: d9 ba 0b                 a4 = a3 <s a4
 21475: db bc 08                 a1 = a5 if a4 != 0
 21478: 95 cc 01                 a5 = a5 + 0x1
 21481: db 3c 09                 a2 = a5 if t1 != 0
 21484: c9 98 0b                 a4 = a1 - a2
 21487: ac 89 dd                 jump @1706 if a2 <u a1
      :                          @1708
 21490: e4 29 07                 a0 = maxu(a2, t0)
 21493: c9 27 07                 a0 = a0 - t0
 21496: 32 00                    ret
      :                          @1709
 21498: 95 11 78 fd              sp = sp + 0xfffffffffffffd78
 21502: 7b 10 80 02              u64 [sp + 0x280] = ra
 21506: 7b 15 78 02              u64 [sp + 0x278] = s0
 21510: 7b 16 70 02              u64 [sp + 0x270] = s1
 21514: 78 17 27                 u8 [sp + 0x27] = a0
 21517: 84 75 ff 00              s0 = a0 & 0xff
 21521: 33 06 34                 s1 = 0x34
 21524: 33 00 40 01              ra = 0x140
 21528: 0a                       ecalli 0 // 'gas'
 21529: 01                       fallthrough
      :                          @1710 [@dyn 160]
 21530: 64 72                    t0 = a0
 21532: 7b 17 18                 u64 [sp + 0x18] = a0
 21535: ae 56 06                 jump @1712 if s1 >=u s0
      :                          @1711
 21538: 28 e2 47                 jump @2490
      :                          @1712
 21541: 97 55 02                 s0 = s0 << 0x2
 21544: 33 07 00 00 01           a0 = 0x10000
 21549: c8 57 07                 a0 = a0 + s0
 21552: 81 77                    a0 = i32 [a0]
 21554: 32 07                    jump [a0]
      :                          @1713 [@dyn 161]
 21556: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 21561: 97 89 0d                 a2 = a1 << 0xd
 21564: d3 98 08                 a1 = a1 ^ a2
 21567: 98 89 07                 a2 = a1 >> 0x7
 21570: d3 98 08                 a1 = a1 ^ a2
 21573: 3a 09 60 00 03           a2 = u64 [0x30060]
 21578: 97 8a 11                 a3 = a1 << 0x11
 21581: d3 a8 08                 a1 = a1 ^ a3
 21584: ca 98 09                 a2 = a1 * a2
 21587: 3e 08 e0 00 03           u64 [0x300e0] = a1
 21592: 14 07 89 88 88 88 88 88 88 88 a0 = 0x8888888888888889
 21602: d6 79 07                 a0 = a2 mulhu a0
 21605: 98 77 04                 a0 = a0 >> 0x4
 21608: 96 77 1e                 a0 = a0 * 0x1e
 21611: c9 79 08                 a1 = a2 - a0
 21614: bf 79 09                 i32 a2 = a2 - a0
 21617: 33 07 03                 a0 = 0x3
 21620: 7a 18 b0 00              u32 [sp + 0xb0] = a1
 21624: ac 79 06                 jump @1715 if a2 <u a0
      :                          @1714
 21627: 28 15 48                 jump @2500
      :                          @1715
 21630: 97 88 03                 a1 = a1 << 0x3
 21633: 33 07 60 10 01           a0 = 0x11060
 21638: c8 87 07                 a0 = a0 + a1
 21641: 82 7b                    a4 = u64 [a0]
 21643: 28 2c 48                 jump @2502
      :                          @1716 [@dyn 162]
 21646: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 21651: 3a 08 60 00 03           a1 = u64 [0x30060]
 21656: 97 9a 0d                 a3 = a2 << 0xd
 21659: d3 a9 09                 a2 = a2 ^ a3
 21662: 98 9a 07                 a3 = a2 >> 0x7
 21665: d3 a9 09                 a2 = a2 ^ a3
 21668: 97 9a 11                 a3 = a2 << 0x11
 21671: d3 a9 09                 a2 = a2 ^ a3
 21674: ca 89 0a                 a3 = a2 * a1
 21677: 3e 09 e0 00 03           u64 [0x300e0] = a2
 21682: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
 21692: d6 9a 09                 a2 = a3 mulhu a2
 21695: 98 99 04                 a2 = a2 >> 0x4
 21698: 33 0b 14                 a4 = 0x14
 21701: ca b9 09                 a2 = a2 * a4
 21704: c9 9a 0a                 a3 = a3 - a2
 21707: 95 aa 01                 a3 = a3 + 0x1
 21710: 7b 1a 68 02              u64 [sp + 0x268] = a3
 21714: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 21719: 97 9a 0d                 a3 = a2 << 0xd
 21722: d3 a9 09                 a2 = a2 ^ a3
 21725: 98 9a 07                 a3 = a2 >> 0x7
 21728: d3 a9 09                 a2 = a2 ^ a3
 21731: 97 9a 11                 a3 = a2 << 0x11
 21734: d3 a9 09                 a2 = a2 ^ a3
 21737: 3e 09 e0 00 03           u64 [0x300e0] = a2
 21742: 82 17 68 02              a0 = u64 [sp + 0x268]
 21746: 52 07 06                 jump @1718 if a0 != 0
      :                          @1717
 21749: 28 bd 4b                 jump @2555
      :                          @1718
 21752: ca 89 08                 a1 = a2 * a1
 21755: cd 78 08                 a1 = a1 %u a0
 21758: 95 88 01                 a1 = a1 + 0x1
 21761: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 21765: 50 20 46 01 e2 f1        ra = 326, jump @1429
      :                          @1719 [@dyn 163]
 21771: 7b 17 90 00              u64 [sp + 0x90] = a0
 21775: 95 17 68 02              a0 = sp + 0x268
 21779: 7b 17 50 01              u64 [sp + 0x150] = a0
 21783: 33 07 50 03              a0 = 0x350
 21787: 7b 17 58 01              u64 [sp + 0x158] = a0
 21791: 95 18 b0 00              a1 = sp + 0xb0
 21795: 7b 18 60 01              u64 [sp + 0x160] = a1
 21799: 7b 17 68 01              u64 [sp + 0x168] = a0
 21803: 95 18 90 00              a1 = sp + 0x90
 21807: 7b 18 70 01              u64 [sp + 0x170] = a1
 21811: 7b 17 78 01              u64 [sp + 0x178] = a0
 21815: 33 07 88 01 01           a0 = 0x10188
 21820: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 21824: 49 21 00 01 03           u64 [sp + 256] = 0x3
 21829: 49 21 18 01              u64 [sp + 280] = 0
 21833: 95 18 50 01              a1 = sp + 0x150
 21837: 7b 18 08 01              u64 [sp + 0x108] = a1
 21841: 49 21 10 01 03           u64 [sp + 272] = 0x3
 21846: 95 17 c8 00              a0 = sp + 0xc8
 21850: 95 18 f8 00              a1 = sp + 0xf8
 21854: 50 20 48 01 67 ca        ra = 328, jump @637
      :                          @1720 [@dyn 164]
 21860: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 21864: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 21868: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 21872: 33 07 02                 a0 = 0x2
 21875: 33 08                    a1 = 0
 21877: 33 09                    a2 = 0
 21879: 64 5a                    a3 = s0
 21881: 33 00 4a 01              ra = 0x14a
 21885: 0a 64                    ecalli 100 // 'log'
 21887: 01                       fallthrough
      :                          @1721 [@dyn 165]
 21888: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 21893: 55 38 00 00 ff 09        jump @1723 if a1 >=u 4294901760
      :                          @1722
 21899: 28 0d 4b                 jump @2553
      :                          @1723
 21902: 33 07 10 01 03           a0 = 0x30110
 21907: 95 77 00 00 01           a0 = a0 + 0x10000
 21912: 01                       fallthrough
      :                          @1724
 21913: 82 78                    a1 = u64 [a0]
 21915: c9 87 09                 a2 = a0 - a1
 21918: aa 59 06                 jump @1726 if a2 == s0
      :                          @1725
 21921: 28 f7 4a                 jump @2553
      :                          @1726
 21924: c9 68 09                 a2 = a1 - s1
 21927: 01                       fallthrough
      :                          @1727
 21928: 82 7a                    a3 = u64 [a0]
 21930: ab 8a ef                 jump @1724 if a3 != a1
      :                          @1728
 21933: 7b 79                    u64 [a0] = a2
 21935: 33 0b                    a4 = 0
 21937: 01                       fallthrough
      :                          @1729
 21938: ab 8a e7                 jump @1724 if a3 != a1
      :                          @1730
 21941: 28 e3 4a                 jump @2553
      :                          @1731 [@dyn 166]
 21944: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 21949: 97 89 0d                 a2 = a1 << 0xd
 21952: d3 98 08                 a1 = a1 ^ a2
 21955: 98 89 07                 a2 = a1 >> 0x7
 21958: d3 98 08                 a1 = a1 ^ a2
 21961: 3a 09 60 00 03           a2 = u64 [0x30060]
 21966: 97 8a 11                 a3 = a1 << 0x11
 21969: d3 a8 08                 a1 = a1 ^ a3
 21972: ca 98 09                 a2 = a1 * a2
 21975: 3e 08 e0 00 03           u64 [0x300e0] = a1
 21980: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
 21990: d6 79 07                 a0 = a2 mulhu a0
 21993: 98 77 04                 a0 = a0 >> 0x4
 21996: 96 77 14                 a0 = a0 * 0x14
 21999: c9 79 07                 a0 = a2 - a0
 22002: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 22006: 50 20 4e 01 73 f1        ra = 334, jump @1438
      :                          @1732 [@dyn 167]
 22012: 7b 17 90 00              u64 [sp + 0x90] = a0
 22016: 95 17 b0 00              a0 = sp + 0xb0
 22020: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 22024: 33 07 50 03              a0 = 0x350
 22028: 7b 17 00 01              u64 [sp + 0x100] = a0
 22032: 95 18 90 00              a1 = sp + 0x90
 22036: 7b 18 08 01              u64 [sp + 0x108] = a1
 22040: 7b 17 10 01              u64 [sp + 0x110] = a0
 22044: 33 07 08 02 01           a0 = 0x10208
 22049: 7b 17 50 01              u64 [sp + 0x150] = a0
 22053: 49 21 58 01 02           u64 [sp + 344] = 0x2
 22058: 49 21 70 01              u64 [sp + 368] = 0
 22062: 95 18 f8 00              a1 = sp + 0xf8
 22066: 7b 18 60 01              u64 [sp + 0x160] = a1
 22070: 49 21 68 01 02           u64 [sp + 360] = 0x2
 22075: 95 17 c8 00              a0 = sp + 0xc8
 22079: 95 18 50 01              a1 = sp + 0x150
 22083: 50 20 50 01 82 c9        ra = 336, jump @637
      :                          @1733 [@dyn 168]
 22089: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 22093: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 22097: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 22101: 33 07 02                 a0 = 0x2
 22104: 33 08                    a1 = 0
 22106: 33 09                    a2 = 0
 22108: 64 5a                    a3 = s0
 22110: 33 00 52 01              ra = 0x152
 22114: 0a 64                    ecalli 100 // 'log'
 22116: 01                       fallthrough
      :                          @1734 [@dyn 169]
 22117: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 22122: 55 38 00 00 ff 09        jump @1736 if a1 >=u 4294901760
      :                          @1735
 22128: 28 28 4a                 jump @2553
      :                          @1736
 22131: 33 07 10 01 03           a0 = 0x30110
 22136: 95 77 00 00 01           a0 = a0 + 0x10000
 22141: 01                       fallthrough
      :                          @1737
 22142: 82 78                    a1 = u64 [a0]
 22144: c9 87 09                 a2 = a0 - a1
 22147: aa 59 06                 jump @1739 if a2 == s0
      :                          @1738
 22150: 28 12 4a                 jump @2553
      :                          @1739
 22153: c9 68 09                 a2 = a1 - s1
 22156: 01                       fallthrough
      :                          @1740
 22157: 82 7a                    a3 = u64 [a0]
 22159: ab 8a ef                 jump @1737 if a3 != a1
      :                          @1741
 22162: 7b 79                    u64 [a0] = a2
 22164: 33 0b                    a4 = 0
 22166: 01                       fallthrough
      :                          @1742
 22167: ab 8a e7                 jump @1737 if a3 != a1
      :                          @1743
 22170: 28 fe 49                 jump @2553
      :                          @1744 [@dyn 170]
 22173: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 22178: 3a 07 60 00 03           a0 = u64 [0x30060]
 22183: 97 9a 0d                 a3 = a2 << 0xd
 22186: d3 a9 09                 a2 = a2 ^ a3
 22189: 98 9a 07                 a3 = a2 >> 0x7
 22192: d3 a9 09                 a2 = a2 ^ a3
 22195: 97 9a 11                 a3 = a2 << 0x11
 22198: d3 a9 09                 a2 = a2 ^ a3
 22201: ca 79 0a                 a3 = a2 * a0
 22204: 3a 0b c0 00 03           a4 = u64 [0x300c0]
 22209: 3e 09 e0 00 03           u64 [0x300e0] = a2
 22214: 98 a9 01                 a2 = a3 >> 0x1
 22217: d6 b9 09                 a2 = a2 mulhu a4
 22220: 98 99 04                 a2 = a2 >> 0x4
 22223: 33 0b 32                 a4 = 0x32
 22226: ca b9 09                 a2 = a2 * a4
 22229: c9 9a 0a                 a3 = a3 - a2
 22232: 86 a9 01                 a2 = a3 | 0x1
 22235: 95 99 02                 a2 = a2 + 0x2
 22238: 7b 19 b0 00              u64 [sp + 0xb0] = a2
 22242: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 22247: 97 9a 0d                 a3 = a2 << 0xd
 22250: d3 a9 09                 a2 = a2 ^ a3
 22253: 98 9a 07                 a3 = a2 >> 0x7
 22256: d3 a9 09                 a2 = a2 ^ a3
 22259: 97 9a 11                 a3 = a2 << 0x11
 22262: d3 a9 09                 a2 = a2 ^ a3
 22265: 3e 09 e0 00 03           u64 [0x300e0] = a2
 22270: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 22274: 52 08 06                 jump @1746 if a1 != 0
      :                          @1745
 22277: 28 ad 49                 jump @2555
      :                          @1746
 22280: ca 79 07                 a0 = a2 * a0
 22283: cd 87 07                 a0 = a0 %u a1
 22286: 7b 17 90 00              u64 [sp + 0x90] = a0
 22290: 50 20 56 01 72 f1        ra = 342, jump @1462
      :                          @1747 [@dyn 171]
 22296: 78 17 68 02              u8 [sp + 0x268] = a0
 22300: 95 17 90 00              a0 = sp + 0x90
 22304: 7b 17 50 01              u64 [sp + 0x150] = a0
 22308: 33 07 50 03              a0 = 0x350
 22312: 7b 17 58 01              u64 [sp + 0x158] = a0
 22316: 95 18 b0 00              a1 = sp + 0xb0
 22320: 7b 18 60 01              u64 [sp + 0x160] = a1
 22324: 7b 17 68 01              u64 [sp + 0x168] = a0
 22328: 95 17 68 02              a0 = sp + 0x268
 22332: 7b 17 70 01              u64 [sp + 0x170] = a0
 22336: 33 07 9c 03              a0 = 0x39c
 22340: 7b 17 78 01              u64 [sp + 0x178] = a0
 22344: 33 07 40 02 01           a0 = 0x10240
 22349: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 22353: 49 21 00 01 03           u64 [sp + 256] = 0x3
 22358: 49 21 18 01              u64 [sp + 280] = 0
 22362: 95 18 50 01              a1 = sp + 0x150
 22366: 7b 18 08 01              u64 [sp + 0x108] = a1
 22370: 49 21 10 01 03           u64 [sp + 272] = 0x3
 22375: 95 17 c8 00              a0 = sp + 0xc8
 22379: 95 18 f8 00              a1 = sp + 0xf8
 22383: 50 20 58 01 56 c8        ra = 344, jump @637
      :                          @1748 [@dyn 172]
 22389: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 22393: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 22397: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 22401: 33 07 02                 a0 = 0x2
 22404: 33 08                    a1 = 0
 22406: 33 09                    a2 = 0
 22408: 64 5a                    a3 = s0
 22410: 33 00 5a 01              ra = 0x15a
 22414: 0a 64                    ecalli 100 // 'log'
 22416: 01                       fallthrough
      :                          @1749 [@dyn 173]
 22417: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 22422: 55 38 00 00 ff 09        jump @1751 if a1 >=u 4294901760
      :                          @1750
 22428: 28 fc 48                 jump @2553
      :                          @1751
 22431: 33 07 10 01 03           a0 = 0x30110
 22436: 95 77 00 00 01           a0 = a0 + 0x10000
 22441: 01                       fallthrough
      :                          @1752
 22442: 82 78                    a1 = u64 [a0]
 22444: c9 87 09                 a2 = a0 - a1
 22447: aa 59 06                 jump @1754 if a2 == s0
      :                          @1753
 22450: 28 e6 48                 jump @2553
      :                          @1754
 22453: c9 68 09                 a2 = a1 - s1
 22456: 01                       fallthrough
      :                          @1755
 22457: 82 7a                    a3 = u64 [a0]
 22459: ab 8a ef                 jump @1752 if a3 != a1
      :                          @1756
 22462: 7b 79                    u64 [a0] = a2
 22464: 33 0b                    a4 = 0
 22466: 01                       fallthrough
      :                          @1757
 22467: ab 8a e7                 jump @1752 if a3 != a1
      :                          @1758
 22470: 28 d2 48                 jump @2553
      :                          @1759 [@dyn 174]
 22473: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 22478: 97 89 0d                 a2 = a1 << 0xd
 22481: d3 98 08                 a1 = a1 ^ a2
 22484: 98 89 07                 a2 = a1 >> 0x7
 22487: 3a 0a 60 00 03           a3 = u64 [0x30060]
 22492: d3 98 08                 a1 = a1 ^ a2
 22495: 97 89 11                 a2 = a1 << 0x11
 22498: d3 98 08                 a1 = a1 ^ a2
 22501: ca a8 09                 a2 = a1 * a3
 22504: 3a 0a c0 00 03           a3 = u64 [0x300c0]
 22509: 3e 08 e0 00 03           u64 [0x300e0] = a1
 22514: 98 97 01                 a0 = a2 >> 0x1
 22517: d6 a7 07                 a0 = a0 mulhu a3
 22520: 98 77 04                 a0 = a0 >> 0x4
 22523: 96 77 32                 a0 = a0 * 0x32
 22526: c9 79 09                 a2 = a2 - a0
 22529: 86 97 01                 a0 = a2 | 0x1
 22532: 95 78 02                 a1 = a0 + 0x2
 22535: 7b 18 90 00              u64 [sp + 0x90] = a1
 22539: 9a 76                    s1 = -a0
 22541: 33 0a 01                 a3 = 0x1
 22544: 33 0b 02                 a4 = 0x2
 22547: 33 0c 01                 a5 = 0x1
 22550: 01                       fallthrough
      :                          @1760
 22551: ca ac 0a                 a3 = a5 * a3
 22554: 95 cc 01                 a5 = a5 + 0x1
 22557: c8 c6 09                 a2 = s1 + a5
 22560: cd 8a 0a                 a3 = a3 %u a1
 22563: ab b9 f4                 jump @1760 if a2 != a4
      :                          @1761
 22566: 95 77 01                 a0 = a0 + 0x1
 22569: d3 a7 07                 a0 = a0 ^ a3
 22572: 88 77 01                 a0 = a0 <u 0x1
 22575: 78 17 b0 00              u8 [sp + 0xb0] = a0
 22579: 95 17 90 00              a0 = sp + 0x90
 22583: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 22587: 33 07 50 03              a0 = 0x350
 22591: 7b 17 00 01              u64 [sp + 0x100] = a0
 22595: 95 17 b0 00              a0 = sp + 0xb0
 22599: 7b 17 08 01              u64 [sp + 0x108] = a0
 22603: 33 07 9c 03              a0 = 0x39c
 22607: 7b 17 10 01              u64 [sp + 0x110] = a0
 22611: 33 07 c0 02 01           a0 = 0x102c0
 22616: 7b 17 50 01              u64 [sp + 0x150] = a0
 22620: 49 21 58 01 02           u64 [sp + 344] = 0x2
 22625: 49 21 70 01              u64 [sp + 368] = 0
 22629: 95 18 f8 00              a1 = sp + 0xf8
 22633: 7b 18 60 01              u64 [sp + 0x160] = a1
 22637: 49 21 68 01 02           u64 [sp + 360] = 0x2
 22642: 95 17 c8 00              a0 = sp + 0xc8
 22646: 95 18 50 01              a1 = sp + 0x150
 22650: 50 20 5e 01 4b c7        ra = 350, jump @637
      :                          @1762 [@dyn 175]
 22656: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 22660: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 22664: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 22668: 33 07 02                 a0 = 0x2
 22671: 33 08                    a1 = 0
 22673: 33 09                    a2 = 0
 22675: 64 5a                    a3 = s0
 22677: 33 00 60 01              ra = 0x160
 22681: 0a 64                    ecalli 100 // 'log'
 22683: 01                       fallthrough
      :                          @1763 [@dyn 176]
 22684: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 22689: 55 38 00 00 ff 09        jump @1765 if a1 >=u 4294901760
      :                          @1764
 22695: 28 f1 47                 jump @2553
      :                          @1765
 22698: 33 07 10 01 03           a0 = 0x30110
 22703: 95 77 00 00 01           a0 = a0 + 0x10000
 22708: 01                       fallthrough
      :                          @1766
 22709: 82 78                    a1 = u64 [a0]
 22711: c9 87 09                 a2 = a0 - a1
 22714: aa 59 06                 jump @1768 if a2 == s0
      :                          @1767
 22717: 28 db 47                 jump @2553
      :                          @1768
 22720: c9 68 09                 a2 = a1 - s1
 22723: 01                       fallthrough
      :                          @1769
 22724: 82 7a                    a3 = u64 [a0]
 22726: ab 8a ef                 jump @1766 if a3 != a1
      :                          @1770
 22729: 7b 79                    u64 [a0] = a2
 22731: 33 0b                    a4 = 0
 22733: 01                       fallthrough
      :                          @1771
 22734: ab 8a e7                 jump @1766 if a3 != a1
      :                          @1772
 22737: 28 c7 47                 jump @2553
      :                          @1773 [@dyn 177]
 22740: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 22745: 97 89 0d                 a2 = a1 << 0xd
 22748: d3 98 08                 a1 = a1 ^ a2
 22751: 98 89 07                 a2 = a1 >> 0x7
 22754: d3 98 08                 a1 = a1 ^ a2
 22757: 97 89 11                 a2 = a1 << 0x11
 22760: d3 98 08                 a1 = a1 ^ a2
 22763: 3a 09 60 00 03           a2 = u64 [0x30060]
 22768: 3a 0a 68 00 03           a3 = u64 [0x30068]
 22773: 3e 08 e0 00 03           u64 [0x300e0] = a1
 22778: ca 98 07                 a0 = a1 * a2
 22781: 98 78 03                 a1 = a0 >> 0x3
 22784: d6 a8 08                 a1 = a1 mulhu a3
 22787: 98 88 04                 a1 = a1 >> 0x4
 22790: 96 88 e8 03              a1 = a1 * 0x3e8
 22794: c9 87 07                 a0 = a0 - a1
 22797: 95 77 03                 a0 = a0 + 0x3
 22800: 86 77 01                 a0 = a0 | 0x1
 22803: 7b 17 90 00              u64 [sp + 0x90] = a0
 22807: 50 20 64 01 a8 ef        ra = 356, jump @1469
      :                          @1774 [@dyn 178]
 22813: 78 17 b0 00              u8 [sp + 0xb0] = a0
 22817: 95 17 90 00              a0 = sp + 0x90
 22821: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 22825: 33 07 50 03              a0 = 0x350
 22829: 7b 17 00 01              u64 [sp + 0x100] = a0
 22833: 95 17 b0 00              a0 = sp + 0xb0
 22837: 7b 17 08 01              u64 [sp + 0x108] = a0
 22841: 33 07 9c 03              a0 = 0x39c
 22845: 7b 17 10 01              u64 [sp + 0x110] = a0
 22849: 33 07 f8 02 01           a0 = 0x102f8
 22854: 7b 17 50 01              u64 [sp + 0x150] = a0
 22858: 49 21 58 01 02           u64 [sp + 344] = 0x2
 22863: 49 21 70 01              u64 [sp + 368] = 0
 22867: 95 18 f8 00              a1 = sp + 0xf8
 22871: 7b 18 60 01              u64 [sp + 0x160] = a1
 22875: 49 21 68 01 02           u64 [sp + 360] = 0x2
 22880: 95 17 c8 00              a0 = sp + 0xc8
 22884: 95 18 50 01              a1 = sp + 0x150
 22888: 50 20 66 01 5d c6        ra = 358, jump @637
      :                          @1775 [@dyn 179]
 22894: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 22898: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 22902: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 22906: 33 07 02                 a0 = 0x2
 22909: 33 08                    a1 = 0
 22911: 33 09                    a2 = 0
 22913: 64 5a                    a3 = s0
 22915: 33 00 68 01              ra = 0x168
 22919: 0a 64                    ecalli 100 // 'log'
 22921: 01                       fallthrough
      :                          @1776 [@dyn 180]
 22922: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 22927: 55 38 00 00 ff 09        jump @1778 if a1 >=u 4294901760
      :                          @1777
 22933: 28 03 47                 jump @2553
      :                          @1778
 22936: 33 07 10 01 03           a0 = 0x30110
 22941: 95 77 00 00 01           a0 = a0 + 0x10000
 22946: 01                       fallthrough
      :                          @1779
 22947: 82 78                    a1 = u64 [a0]
 22949: c9 87 09                 a2 = a0 - a1
 22952: aa 59 06                 jump @1781 if a2 == s0
      :                          @1780
 22955: 28 ed 46                 jump @2553
      :                          @1781
 22958: c9 68 09                 a2 = a1 - s1
 22961: 01                       fallthrough
      :                          @1782
 22962: 82 7a                    a3 = u64 [a0]
 22964: ab 8a ef                 jump @1779 if a3 != a1
      :                          @1783
 22967: 7b 79                    u64 [a0] = a2
 22969: 33 0b                    a4 = 0
 22971: 01                       fallthrough
      :                          @1784
 22972: ab 8a e7                 jump @1779 if a3 != a1
      :                          @1785
 22975: 28 d9 46                 jump @2553
      :                          @1786 [@dyn 181]
 22978: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 22983: 97 89 0d                 a2 = a1 << 0xd
 22986: d3 98 08                 a1 = a1 ^ a2
 22989: 98 89 07                 a2 = a1 >> 0x7
 22992: d3 98 08                 a1 = a1 ^ a2
 22995: 97 89 11                 a2 = a1 << 0x11
 22998: d3 98 08                 a1 = a1 ^ a2
 23001: 3a 09 60 00 03           a2 = u64 [0x30060]
 23006: 3a 0a 68 00 03           a3 = u64 [0x30068]
 23011: 3e 08 e0 00 03           u64 [0x300e0] = a1
 23016: ca 98 07                 a0 = a1 * a2
 23019: 98 78 02                 a1 = a0 >> 0x2
 23022: d6 a8 08                 a1 = a1 mulhu a3
 23025: 98 88 04                 a1 = a1 >> 0x4
 23028: 96 88 f4 01              a1 = a1 * 0x1f4
 23032: c9 87 07                 a0 = a0 - a1
 23035: 97 77 01                 a0 = a0 << 0x1
 23038: 95 78 09                 a1 = a0 + 0x9
 23041: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 23045: 95 17 c8 00              a0 = sp + 0xc8
 23049: 95 15 c8 00              s0 = sp + 0xc8
 23053: 33 00 6c 01              ra = 0x16c
 23057: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 23060: 7b 15 08                 u64 [sp + 0x8] = s0
 23063: 33 0a                    a3 = 0
 23065: 33 03 ff                 t1 = 0xffffffffffffffff
 23068: 64 82                    t0 = a1
 23070: 28 cd ef                 jump @1491
      :                          @1787 [@dyn 182]
 23073: 95 17 b0 00              a0 = sp + 0xb0
 23077: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 23081: 33 07 50 03              a0 = 0x350
 23085: 7b 17 00 01              u64 [sp + 0x100] = a0
 23089: 7b 15 08 01              u64 [sp + 0x108] = s0
 23093: 33 07 fe 00              a0 = 0xfe
 23097: 7b 17 10 01              u64 [sp + 0x110] = a0
 23101: 33 07 28 03 01           a0 = 0x10328
 23106: 7b 17 50 01              u64 [sp + 0x150] = a0
 23110: 49 21 58 01 02           u64 [sp + 344] = 0x2
 23115: 49 21 70 01              u64 [sp + 368] = 0
 23119: 95 18 f8 00              a1 = sp + 0xf8
 23123: 7b 18 60 01              u64 [sp + 0x160] = a1
 23127: 49 21 68 01 02           u64 [sp + 360] = 0x2
 23132: 95 17 90 00              a0 = sp + 0x90
 23136: 95 18 50 01              a1 = sp + 0x150
 23140: 50 20 6e 01 61 c5        ra = 366, jump @637
      :                          @1788 [@dyn 183]
 23146: 82 15 98 00              s0 = u64 [sp + 0x98]
 23150: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 23154: 82 16 90 00              s1 = u64 [sp + 0x90]
 23158: 33 07 02                 a0 = 0x2
 23161: 33 08                    a1 = 0
 23163: 33 09                    a2 = 0
 23165: 64 5a                    a3 = s0
 23167: 33 00 70 01              ra = 0x170
 23171: 0a 64                    ecalli 100 // 'log'
 23173: 01                       fallthrough
      :                          @1789 [@dyn 184]
 23174: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 23179: 55 38 00 00 ff 09        jump @1791 if a1 >=u 4294901760
      :                          @1790
 23185: 28 07 46                 jump @2553
      :                          @1791
 23188: 33 07 10 01 03           a0 = 0x30110
 23193: 95 77 00 00 01           a0 = a0 + 0x10000
 23198: 01                       fallthrough
      :                          @1792
 23199: 82 78                    a1 = u64 [a0]
 23201: c9 87 09                 a2 = a0 - a1
 23204: aa 59 06                 jump @1794 if a2 == s0
      :                          @1793
 23207: 28 f1 45                 jump @2553
      :                          @1794
 23210: c9 68 09                 a2 = a1 - s1
 23213: 01                       fallthrough
      :                          @1795
 23214: 82 7a                    a3 = u64 [a0]
 23216: ab 8a ef                 jump @1792 if a3 != a1
      :                          @1796
 23219: 7b 79                    u64 [a0] = a2
 23221: 33 0b                    a4 = 0
 23223: 01                       fallthrough
      :                          @1797
 23224: ab 8a e7                 jump @1792 if a3 != a1
      :                          @1798
 23227: 28 dd 45                 jump @2553
      :                          @1799 [@dyn 185]
 23230: 33 00 74 01              ra = 0x174
 23234: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 23237: 7b 15 08                 u64 [sp + 0x8] = s0
 23240: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 23245: 97 79 0d                 a2 = a0 << 0xd
 23248: d3 97 07                 a0 = a0 ^ a2
 23251: 98 79 07                 a2 = a0 >> 0x7
 23254: d3 97 07                 a0 = a0 ^ a2
 23257: 97 79 11                 a2 = a0 << 0x11
 23260: d3 79 02                 t0 = a2 ^ a0
 23263: 3e 02 e0 00 03           u64 [0x300e0] = t0
 23268: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 23273: 3a 03 28 00 03           t1 = u64 [0x30028]
 23278: 97 7a 0d                 a3 = a0 << 0xd
 23281: d3 a7 07                 a0 = a0 ^ a3
 23284: 98 7a 07                 a3 = a0 >> 0x7
 23287: d3 a7 07                 a0 = a0 ^ a3
 23290: 97 7a 11                 a3 = a0 << 0x11
 23293: d3 a7 07                 a0 = a0 ^ a3
 23296: 3a 0a 30 00 03           a3 = u64 [0x30030]
 23301: ca 37 0b                 a4 = a0 * t1
 23304: 3e 07 e0 00 03           u64 [0x300e0] = a0
 23309: d6 ab 07                 a0 = a4 mulhu a3
 23312: c9 7b 08                 a1 = a4 - a0
 23315: 98 88 01                 a1 = a1 >> 0x1
 23318: c8 87 07                 a0 = a0 + a1
 23321: 98 77 04                 a0 = a0 >> 0x4
 23324: 33 08 15                 a1 = 0x15
 23327: ca 87 07                 a0 = a0 * a1
 23330: c9 7b 0a                 a3 = a4 - a0
 23333: 95 aa 01                 a3 = a3 + 0x1
 23336: 3a 0b 38 00 03           a4 = u64 [0x30038]
 23341: 33 05 01                 s0 = 0x1
 23344: 33 0c 05                 a5 = 0x5
 23347: 33 04 17                 t2 = 0x17
 23350: 28 41 ef                 jump @1502
      :                          @1800 [@dyn 186]
 23353: 7b 17 90 00              u64 [sp + 0x90] = a0
 23357: 95 17 90 00              a0 = sp + 0x90
 23361: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 23365: 33 07 50 03              a0 = 0x350
 23369: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 23373: 33 07 58 03 01           a0 = 0x10358
 23378: 7b 17 50 01              u64 [sp + 0x150] = a0
 23382: 49 21 58 01 01           u64 [sp + 344] = 0x1
 23387: 49 21 70 01              u64 [sp + 368] = 0
 23391: 95 18 c8 00              a1 = sp + 0xc8
 23395: 7b 18 60 01              u64 [sp + 0x160] = a1
 23399: 49 21 68 01 01           u64 [sp + 360] = 0x1
 23404: 95 17 f8 00              a0 = sp + 0xf8
 23408: 95 18 50 01              a1 = sp + 0x150
 23412: 50 20 76 01 51 c4        ra = 374, jump @637
      :                          @1801 [@dyn 187]
 23418: 82 15 00 01              s0 = u64 [sp + 0x100]
 23422: 82 1b 08 01              a4 = u64 [sp + 0x108]
 23426: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 23430: 33 07 02                 a0 = 0x2
 23433: 33 08                    a1 = 0
 23435: 33 09                    a2 = 0
 23437: 64 5a                    a3 = s0
 23439: 33 00 78 01              ra = 0x178
 23443: 0a 64                    ecalli 100 // 'log'
 23445: 01                       fallthrough
      :                          @1802 [@dyn 188]
 23446: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 23451: 55 38 00 00 ff 09        jump @1804 if a1 >=u 4294901760
      :                          @1803
 23457: 28 f7 44                 jump @2553
      :                          @1804
 23460: 33 07 10 01 03           a0 = 0x30110
 23465: 95 77 00 00 01           a0 = a0 + 0x10000
 23470: 01                       fallthrough
      :                          @1805
 23471: 82 78                    a1 = u64 [a0]
 23473: c9 87 09                 a2 = a0 - a1
 23476: aa 59 06                 jump @1807 if a2 == s0
      :                          @1806
 23479: 28 e1 44                 jump @2553
      :                          @1807
 23482: c9 68 09                 a2 = a1 - s1
 23485: 01                       fallthrough
      :                          @1808
 23486: 82 7a                    a3 = u64 [a0]
 23488: ab 8a ef                 jump @1805 if a3 != a1
      :                          @1809
 23491: 7b 79                    u64 [a0] = a2
 23493: 33 0b                    a4 = 0
 23495: 01                       fallthrough
      :                          @1810
 23496: ab 8a e7                 jump @1805 if a3 != a1
      :                          @1811
 23499: 28 cd 44                 jump @2553
      :                          @1812 [@dyn 189]
 23502: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 23507: 97 89 0d                 a2 = a1 << 0xd
 23510: d3 98 08                 a1 = a1 ^ a2
 23513: 98 89 07                 a2 = a1 >> 0x7
 23516: d3 98 08                 a1 = a1 ^ a2
 23519: 97 89 11                 a2 = a1 << 0x11
 23522: d3 89 09                 a2 = a2 ^ a1
 23525: 3e 09 e0 00 03           u64 [0x300e0] = a2
 23530: 87 87 1d dd              i32 a0 = a1 * 0xffffffffffffdd1d
 23534: 97 78 38                 a1 = a0 << 0x38
 23537: 98 88 39                 a1 = a1 >> 0x39
 23540: 98 77 01                 a0 = a0 >> 0x1
 23543: 84 77 80 00              a0 = a0 & 0x80
 23547: d4 87 07                 a0 = a0 | a1
 23550: 78 17 b0 00              u8 [sp + 0xb0] = a0
 23554: 95 17 b0 00              a0 = sp + 0xb0
 23558: 7b 17 90 00              u64 [sp + 0x90] = a0
 23562: 33 07 9e 03              a0 = 0x39e
 23566: 7b 17 98 00              u64 [sp + 0x98] = a0
 23570: 49 21 50 01 02           u64 [sp + 336] = 0x2
 23575: 49 21 60 01              u64 [sp + 352] = 0
 23579: 49 21 68 01 02           u64 [sp + 360] = 0x2
 23584: 49 21 70 01              u64 [sp + 368] = 0
 23588: 14 08 20 00 00 00 08 00 00 00 a1 = 0x800000020
 23598: 7b 18 78 01              u64 [sp + 0x178] = a1
 23602: 46 21 80 01 03           u8 [sp + 384] = 0x3
 23607: 33 08 70 03 01           a1 = 0x10370
 23612: 7b 18 f8 00              u64 [sp + 0xf8] = a1
 23616: 49 21 00 01 01           u64 [sp + 256] = 0x1
 23621: 95 18 50 01              a1 = sp + 0x150
 23625: 7b 18 18 01              u64 [sp + 0x118] = a1
 23629: 49 21 20 01 01           u64 [sp + 288] = 0x1
 23634: 95 18 90 00              a1 = sp + 0x90
 23638: 7b 18 08 01              u64 [sp + 0x108] = a1
 23642: 49 21 10 01 01           u64 [sp + 272] = 0x1
 23647: 95 17 c8 00              a0 = sp + 0xc8
 23651: 95 18 f8 00              a1 = sp + 0xf8
 23655: 50 20 7c 01 5e c3        ra = 380, jump @637
      :                          @1813 [@dyn 190]
 23661: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 23665: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 23669: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 23673: 33 07 02                 a0 = 0x2
 23676: 33 08                    a1 = 0
 23678: 33 09                    a2 = 0
 23680: 64 5a                    a3 = s0
 23682: 33 00 7e 01              ra = 0x17e
 23686: 0a 64                    ecalli 100 // 'log'
 23688: 01                       fallthrough
      :                          @1814 [@dyn 191]
 23689: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 23694: 55 38 00 00 ff 09        jump @1816 if a1 >=u 4294901760
      :                          @1815
 23700: 28 04 44                 jump @2553
      :                          @1816
 23703: 33 07 10 01 03           a0 = 0x30110
 23708: 95 77 00 00 01           a0 = a0 + 0x10000
 23713: 01                       fallthrough
      :                          @1817
 23714: 82 78                    a1 = u64 [a0]
 23716: c9 87 09                 a2 = a0 - a1
 23719: aa 59 06                 jump @1819 if a2 == s0
      :                          @1818
 23722: 28 ee 43                 jump @2553
      :                          @1819
 23725: c9 68 09                 a2 = a1 - s1
 23728: 01                       fallthrough
      :                          @1820
 23729: 82 7a                    a3 = u64 [a0]
 23731: ab 8a ef                 jump @1817 if a3 != a1
      :                          @1821
 23734: 7b 79                    u64 [a0] = a2
 23736: 33 0b                    a4 = 0
 23738: 01                       fallthrough
      :                          @1822
 23739: ab 8a e7                 jump @1817 if a3 != a1
      :                          @1823
 23742: 28 da 43                 jump @2553
      :                          @1824 [@dyn 192]
 23745: 3a 07 60 00 03           a0 = u64 [0x30060]
 23750: 33 08 e0 00 03           a1 = 0x300e0
 23755: 3a 09 c8 00 03           a2 = u64 [0x300c8]
 23760: 33 0a a5 98 0f           a3 = 0xf98a5
 23765: 33 02 01                 t0 = 0x1
 23768: 01                       fallthrough
      :                          @1825
 23769: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 23774: 97 bc 0d                 a5 = a4 << 0xd
 23777: d3 cb 0b                 a4 = a4 ^ a5
 23780: 98 bc 07                 a5 = a4 >> 0x7
 23783: d3 cb 0b                 a4 = a4 ^ a5
 23786: 97 bc 11                 a5 = a4 << 0x11
 23789: d3 cb 0b                 a4 = a4 ^ a5
 23792: 3e 0b e0 00 03           u64 [0x300e0] = a4
 23797: ca 7b 0b                 a4 = a4 * a0
 23800: d6 9b 0c                 a5 = a4 mulhu a2
 23803: 98 cc 13                 a5 = a5 >> 0x13
 23806: ca ac 0c                 a5 = a5 * a3
 23809: c9 cb 0b                 a4 = a4 - a5
 23812: 7b 1b 90 00              u64 [sp + 0x90] = a4
 23816: 64 b5                    s0 = a4
 23818: 64 ac                    a5 = a3
 23820: 01                       fallthrough
      :                          @1826
 23821: 64 c6                    s1 = a5
 23823: cd c5 0c                 a5 = s0 %u a5
 23826: 64 65                    s0 = s1
 23828: 52 0c f9                 jump @1826 if a5 != 0
      :                          @1827
 23831: ab 26 c2                 jump @1825 if s1 != t0
      :                          @1828
 23834: 3a 07 c8 00 03           a0 = u64 [0x300c8]
 23839: ca bb 08                 a1 = a4 * a4
 23842: d6 78 07                 a0 = a1 mulhu a0
 23845: 98 77 13                 a0 = a0 >> 0x13
 23848: 96 77 a5 98 0f           a0 = a0 * 0xf98a5
 23853: c9 78 08                 a1 = a1 - a0
 23856: 7b 18 90 00              u64 [sp + 0x90] = a1
 23860: 95 17 90 00              a0 = sp + 0x90
 23864: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 23868: 33 07 50 03              a0 = 0x350
 23872: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 23876: 33 07 90 03 01           a0 = 0x10390
 23881: 7b 17 50 01              u64 [sp + 0x150] = a0
 23885: 49 21 58 01 01           u64 [sp + 344] = 0x1
 23890: 49 21 70 01              u64 [sp + 368] = 0
 23894: 95 18 c8 00              a1 = sp + 0xc8
 23898: 7b 18 60 01              u64 [sp + 0x160] = a1
 23902: 49 21 68 01 01           u64 [sp + 360] = 0x1
 23907: 95 17 f8 00              a0 = sp + 0xf8
 23911: 95 18 50 01              a1 = sp + 0x150
 23915: 50 20 82 01 5a c2        ra = 386, jump @637
      :                          @1829 [@dyn 193]
 23921: 82 15 00 01              s0 = u64 [sp + 0x100]
 23925: 82 1b 08 01              a4 = u64 [sp + 0x108]
 23929: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 23933: 33 07 02                 a0 = 0x2
 23936: 33 08                    a1 = 0
 23938: 33 09                    a2 = 0
 23940: 64 5a                    a3 = s0
 23942: 33 00 84 01              ra = 0x184
 23946: 0a 64                    ecalli 100 // 'log'
 23948: 01                       fallthrough
      :                          @1830 [@dyn 194]
 23949: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 23954: 55 38 00 00 ff 09        jump @1832 if a1 >=u 4294901760
      :                          @1831
 23960: 28 00 43                 jump @2553
      :                          @1832
 23963: 33 07 10 01 03           a0 = 0x30110
 23968: 95 77 00 00 01           a0 = a0 + 0x10000
 23973: 01                       fallthrough
      :                          @1833
 23974: 82 78                    a1 = u64 [a0]
 23976: c9 87 09                 a2 = a0 - a1
 23979: aa 59 06                 jump @1835 if a2 == s0
      :                          @1834
 23982: 28 ea 42                 jump @2553
      :                          @1835
 23985: c9 68 09                 a2 = a1 - s1
 23988: 01                       fallthrough
      :                          @1836
 23989: 82 7a                    a3 = u64 [a0]
 23991: ab 8a ef                 jump @1833 if a3 != a1
      :                          @1837
 23994: 7b 79                    u64 [a0] = a2
 23996: 33 0b                    a4 = 0
 23998: 01                       fallthrough
      :                          @1838
 23999: ab 8a e7                 jump @1833 if a3 != a1
      :                          @1839
 24002: 28 d6 42                 jump @2553
      :                          @1840 [@dyn 195]
 24005: 95 17 c8 00              a0 = sp + 0xc8
 24009: 33 00 88 01              ra = 0x188
 24013: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 24016: 7b 15                    u64 [sp] = s0
 24018: 33 03 10 01 03           t1 = 0x30110
 24023: 33 02 00 00 01           t0 = 0x10000
 24028: c8 23 04                 t2 = t1 + t0
 24031: 28 6b c8                 jump @774
      :                          @1841 [@dyn 196]
 24034: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 24038: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 24042: 7b 17 10                 u64 [sp + 0x10] = a0
 24045: 33 00 8a 01              ra = 0x18a
 24049: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 24052: 7b 10 38                 u64 [sp + 0x38] = ra
 24055: 7b 15 30                 u64 [sp + 0x30] = s0
 24058: 7b 16 28                 u64 [sp + 0x28] = s1
 24061: 64 86                    s1 = a1
 24063: 64 75                    s0 = a0
 24065: 68 87                    a0 = clz a1
 24067: 9a 7a 40                 a3 = 0x40 - a0
 24070: 64 57                    a0 = s0
 24072: 33 09                    a2 = 0
 24074: 33 00 32 01              ra = 0x132
 24078: 28 03 b9                 jump @459
      :                          @1842 [@dyn 197]
 24081: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 24085: 95 17 b0 00              a0 = sp + 0xb0
 24089: 7b 17 90 00              u64 [sp + 0x90] = a0
 24093: 33 07 50 03              a0 = 0x350
 24097: 7b 17 98 00              u64 [sp + 0x98] = a0
 24101: 33 07 b8 03 01           a0 = 0x103b8
 24106: 7b 17 50 01              u64 [sp + 0x150] = a0
 24110: 49 21 58 01 01           u64 [sp + 344] = 0x1
 24115: 49 21 70 01              u64 [sp + 368] = 0
 24119: 95 18 90 00              a1 = sp + 0x90
 24123: 7b 18 60 01              u64 [sp + 0x160] = a1
 24127: 49 21 68 01 01           u64 [sp + 360] = 0x1
 24132: 95 17 f8 00              a0 = sp + 0xf8
 24136: 95 18 50 01              a1 = sp + 0x150
 24140: 50 20 8c 01 79 c1        ra = 396, jump @637
      :                          @1843 [@dyn 198]
 24146: 82 16 00 01              s1 = u64 [sp + 0x100]
 24150: 82 1b 08 01              a4 = u64 [sp + 0x108]
 24154: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 24158: 33 07 02                 a0 = 0x2
 24161: 33 08                    a1 = 0
 24163: 33 09                    a2 = 0
 24165: 64 6a                    a3 = s1
 24167: 33 00 8e 01              ra = 0x18e
 24171: 0a 64                    ecalli 100 // 'log'
 24173: 01                       fallthrough
      :                          @1844 [@dyn 199]
 24174: 95 58 ff ff fe           a1 = s0 + 0xfffffffffffeffff
 24179: 53 38 00 00 ff 25        jump @1850 if a1 <u 4294901760
      :                          @1845
 24185: 33 07 10 01 03           a0 = 0x30110
 24190: 95 77 00 00 01           a0 = a0 + 0x10000
 24195: 01                       fallthrough
      :                          @1846
 24196: 82 78                    a1 = u64 [a0]
 24198: c9 87 09                 a2 = a0 - a1
 24201: ab 69 0f                 jump @1850 if a2 != s1
      :                          @1847
 24204: c9 58 09                 a2 = a1 - s0
 24207: 01                       fallthrough
      :                          @1848
 24208: 82 7a                    a3 = u64 [a0]
 24210: ab 8a f2                 jump @1846 if a3 != a1
      :                          @1849
 24213: 7b 79                    u64 [a0] = a2
 24215: 01                       fallthrough
      :                          @1850
 24216: 82 17 c8 00              a0 = u64 [sp + 0xc8]
 24220: 82 16 10                 s1 = u64 [sp + 0x10]
 24223: 52 07 06                 jump @1852 if a0 != 0
      :                          @1851
 24226: 28 f6 41                 jump @2553
      :                          @1852
 24229: 54 27 00 20 08           jump @1854 if a0 <=u 8192
      :                          @1853
 24234: 28 ee 41                 jump @2553
      :                          @1854
 24237: 97 77 03                 a0 = a0 << 0x3
 24240: 33 08 10 01 03           a1 = 0x30110
 24245: 95 88 00 00 01           a1 = a1 + 0x10000
 24250: 01                       fallthrough
      :                          @1855
 24251: 82 89                    a2 = u64 [a1]
 24253: c9 98 0a                 a3 = a1 - a2
 24256: aa 6a 06                 jump @1857 if a3 == s1
      :                          @1856
 24259: 28 d5 41                 jump @2553
      :                          @1857
 24262: c9 79 0a                 a3 = a2 - a0
 24265: 01                       fallthrough
      :                          @1858
 24266: 82 8b                    a4 = u64 [a1]
 24268: ab 9b ef                 jump @1855 if a4 != a2
      :                          @1859
 24271: 7b 8a                    u64 [a1] = a3
 24273: 33 0c                    a5 = 0
 24275: 01                       fallthrough
      :                          @1860
 24276: ab 9b e7                 jump @1855 if a4 != a2
      :                          @1861
 24279: 28 c1 41                 jump @2553
      :                          @1862 [@dyn 200]
 24282: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 24287: 97 79 0d                 a2 = a0 << 0xd
 24290: d3 97 07                 a0 = a0 ^ a2
 24293: 98 79 07                 a2 = a0 >> 0x7
 24296: 3a 0a 60 00 03           a3 = u64 [0x30060]
 24301: d3 97 07                 a0 = a0 ^ a2
 24304: 97 79 11                 a2 = a0 << 0x11
 24307: d3 97 07                 a0 = a0 ^ a2
 24310: ca a7 09                 a2 = a0 * a3
 24313: 3e 07 e0 00 03           u64 [0x300e0] = a0
 24318: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
 24328: d6 b9 07                 a0 = a2 mulhu a4
 24331: 98 77 03                 a0 = a0 >> 0x3
 24334: 96 77 0a                 a0 = a0 * 0xa
 24337: 3a 0c e0 00 03           a5 = u64 [0x300e0]
 24342: c9 79 07                 a0 = a2 - a0
 24345: 95 77 01                 a0 = a0 + 0x1
 24348: 97 c9 0d                 a2 = a5 << 0xd
 24351: d3 c9 09                 a2 = a2 ^ a5
 24354: 98 9c 07                 a5 = a2 >> 0x7
 24357: d3 c9 09                 a2 = a2 ^ a5
 24360: 97 9c 11                 a5 = a2 << 0x11
 24363: d3 c9 09                 a2 = a2 ^ a5
 24366: ca a9 0a                 a3 = a2 * a3
 24369: 3e 09 e0 00 03           u64 [0x300e0] = a2
 24374: d6 ba 08                 a1 = a3 mulhu a4
 24377: 98 89 02                 a2 = a1 >> 0x2
 24380: 84 88 fc                 a1 = a1 & 0xfffffffffffffffc
 24383: c8 98 08                 a1 = a1 + a2
 24386: c9 8a 08                 a1 = a3 - a1
 24389: 95 88 02                 a1 = a1 + 0x2
 24392: 33 00 92 01              ra = 0x192
 24396: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 24399: 7b 10 18                 u64 [sp + 0x18] = ra
 24402: 7b 15 10                 u64 [sp + 0x10] = s0
 24405: 7b 16 08                 u64 [sp + 0x8] = s1
 24408: 33 04                    t2 = 0
 24410: 33 00                    ra = 0
 24412: 33 02 01                 t0 = 0x1
 24415: 33 03 03                 t1 = 0x3
 24418: 33 09                    a2 = 0
 24420: 64 7c                    a5 = a0
 24422: 28 90 ec                 jump @1533
      :                          @1863 [@dyn 201]
 24425: 7b 17 90 00              u64 [sp + 0x90] = a0
 24429: 95 17 90 00              a0 = sp + 0x90
 24433: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 24437: 33 07 50 03              a0 = 0x350
 24441: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 24445: 33 07 f0 03 01           a0 = 0x103f0
 24450: 7b 17 50 01              u64 [sp + 0x150] = a0
 24454: 49 21 58 01 01           u64 [sp + 344] = 0x1
 24459: 49 21 70 01              u64 [sp + 368] = 0
 24463: 95 18 c8 00              a1 = sp + 0xc8
 24467: 7b 18 60 01              u64 [sp + 0x160] = a1
 24471: 49 21 68 01 01           u64 [sp + 360] = 0x1
 24476: 95 17 f8 00              a0 = sp + 0xf8
 24480: 95 18 50 01              a1 = sp + 0x150
 24484: 50 20 94 01 21 c0        ra = 404, jump @637
      :                          @1864 [@dyn 202]
 24490: 82 15 00 01              s0 = u64 [sp + 0x100]
 24494: 82 1b 08 01              a4 = u64 [sp + 0x108]
 24498: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 24502: 33 07 02                 a0 = 0x2
 24505: 33 08                    a1 = 0
 24507: 33 09                    a2 = 0
 24509: 64 5a                    a3 = s0
 24511: 33 00 96 01              ra = 0x196
 24515: 0a 64                    ecalli 100 // 'log'
 24517: 01                       fallthrough
      :                          @1865 [@dyn 203]
 24518: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 24523: 55 38 00 00 ff 09        jump @1867 if a1 >=u 4294901760
      :                          @1866
 24529: 28 c7 40                 jump @2553
      :                          @1867
 24532: 33 07 10 01 03           a0 = 0x30110
 24537: 95 77 00 00 01           a0 = a0 + 0x10000
 24542: 01                       fallthrough
      :                          @1868
 24543: 82 78                    a1 = u64 [a0]
 24545: c9 87 09                 a2 = a0 - a1
 24548: aa 59 06                 jump @1870 if a2 == s0
      :                          @1869
 24551: 28 b1 40                 jump @2553
      :                          @1870
 24554: c9 68 09                 a2 = a1 - s1
 24557: 01                       fallthrough
      :                          @1871
 24558: 82 7a                    a3 = u64 [a0]
 24560: ab 8a ef                 jump @1868 if a3 != a1
      :                          @1872
 24563: 7b 79                    u64 [a0] = a2
 24565: 33 0b                    a4 = 0
 24567: 01                       fallthrough
      :                          @1873
 24568: ab 8a e7                 jump @1868 if a3 != a1
      :                          @1874
 24571: 28 9d 40                 jump @2553
      :                          @1875 [@dyn 204]
 24574: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 24579: 97 89 0d                 a2 = a1 << 0xd
 24582: d3 98 08                 a1 = a1 ^ a2
 24585: 98 89 07                 a2 = a1 >> 0x7
 24588: d3 98 08                 a1 = a1 ^ a2
 24591: 97 89 11                 a2 = a1 << 0x11
 24594: d3 89 09                 a2 = a2 ^ a1
 24597: 3e 09 e0 00 03           u64 [0x300e0] = a2
 24602: 84 88 03                 a1 = a1 & 0x3
 24605: 95 88 01                 a1 = a1 + 0x1
 24608: 7b 18 68 02              u64 [sp + 0x268] = a1
 24612: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 24617: 97 89 0d                 a2 = a1 << 0xd
 24620: d3 98 08                 a1 = a1 ^ a2
 24623: 98 89 07                 a2 = a1 >> 0x7
 24626: d3 98 08                 a1 = a1 ^ a2
 24629: 97 89 11                 a2 = a1 << 0x11
 24632: d3 89 09                 a2 = a2 ^ a1
 24635: 3e 09 e0 00 03           u64 [0x300e0] = a2
 24640: 82 17 68 02              a0 = u64 [sp + 0x268]
 24644: 84 88 03                 a1 = a1 & 0x3
 24647: 95 88 01                 a1 = a1 + 0x1
 24650: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 24654: 50 20 9a 01 f8 eb        ra = 410, jump @1541
      :                          @1876 [@dyn 205]
 24660: 7b 17 90 00              u64 [sp + 0x90] = a0
 24664: 95 17 68 02              a0 = sp + 0x268
 24668: 7b 17 50 01              u64 [sp + 0x150] = a0
 24672: 33 07 50 03              a0 = 0x350
 24676: 7b 17 58 01              u64 [sp + 0x158] = a0
 24680: 95 18 b0 00              a1 = sp + 0xb0
 24684: 7b 18 60 01              u64 [sp + 0x160] = a1
 24688: 7b 17 68 01              u64 [sp + 0x168] = a0
 24692: 95 18 90 00              a1 = sp + 0x90
 24696: 7b 18 70 01              u64 [sp + 0x170] = a1
 24700: 7b 17 78 01              u64 [sp + 0x178] = a0
 24704: 33 07 18 04 01           a0 = 0x10418
 24709: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 24713: 49 21 00 01 03           u64 [sp + 256] = 0x3
 24718: 49 21 18 01              u64 [sp + 280] = 0
 24722: 95 18 50 01              a1 = sp + 0x150
 24726: 7b 18 08 01              u64 [sp + 0x108] = a1
 24730: 49 21 10 01 03           u64 [sp + 272] = 0x3
 24735: 95 17 c8 00              a0 = sp + 0xc8
 24739: 95 18 f8 00              a1 = sp + 0xf8
 24743: 50 20 9c 01 1e bf        ra = 412, jump @637
      :                          @1877 [@dyn 206]
 24749: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 24753: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 24757: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 24761: 33 07 02                 a0 = 0x2
 24764: 33 08                    a1 = 0
 24766: 33 09                    a2 = 0
 24768: 64 5a                    a3 = s0
 24770: 33 00 9e 01              ra = 0x19e
 24774: 0a 64                    ecalli 100 // 'log'
 24776: 01                       fallthrough
      :                          @1878 [@dyn 207]
 24777: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 24782: 55 38 00 00 ff 09        jump @1880 if a1 >=u 4294901760
      :                          @1879
 24788: 28 c4 3f                 jump @2553
      :                          @1880
 24791: 33 07 10 01 03           a0 = 0x30110
 24796: 95 77 00 00 01           a0 = a0 + 0x10000
 24801: 01                       fallthrough
      :                          @1881
 24802: 82 78                    a1 = u64 [a0]
 24804: c9 87 09                 a2 = a0 - a1
 24807: aa 59 06                 jump @1883 if a2 == s0
      :                          @1882
 24810: 28 ae 3f                 jump @2553
      :                          @1883
 24813: c9 68 09                 a2 = a1 - s1
 24816: 01                       fallthrough
      :                          @1884
 24817: 82 7a                    a3 = u64 [a0]
 24819: ab 8a ef                 jump @1881 if a3 != a1
      :                          @1885
 24822: 7b 79                    u64 [a0] = a2
 24824: 33 0b                    a4 = 0
 24826: 01                       fallthrough
      :                          @1886
 24827: ab 8a e7                 jump @1881 if a3 != a1
      :                          @1887
 24830: 28 9a 3f                 jump @2553
      :                          @1888 [@dyn 208]
 24833: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 24838: 97 89 0d                 a2 = a1 << 0xd
 24841: d3 98 08                 a1 = a1 ^ a2
 24844: 98 89 07                 a2 = a1 >> 0x7
 24847: 3a 0a 60 00 03           a3 = u64 [0x30060]
 24852: d3 98 08                 a1 = a1 ^ a2
 24855: 97 89 11                 a2 = a1 << 0x11
 24858: d3 98 08                 a1 = a1 ^ a2
 24861: ca a8 09                 a2 = a1 * a3
 24864: 3e 08 e0 00 03           u64 [0x300e0] = a1
 24869: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
 24879: d6 89 0b                 a4 = a2 mulhu a1
 24882: 98 bb 04                 a4 = a4 >> 0x4
 24885: 96 bb 14                 a4 = a4 * 0x14
 24888: c9 b9 09                 a2 = a2 - a4
 24891: 95 99 02                 a2 = a2 + 0x2
 24894: 7b 19 68 02              u64 [sp + 0x268] = a2
 24898: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 24903: 97 9b 0d                 a4 = a2 << 0xd
 24906: d3 b9 09                 a2 = a2 ^ a4
 24909: 98 9b 07                 a4 = a2 >> 0x7
 24912: d3 b9 09                 a2 = a2 ^ a4
 24915: 97 9b 11                 a4 = a2 << 0x11
 24918: d3 b9 09                 a2 = a2 ^ a4
 24921: ca a9 0a                 a3 = a2 * a3
 24924: 3e 09 e0 00 03           u64 [0x300e0] = a2
 24929: d6 8a 07                 a0 = a3 mulhu a1
 24932: 98 77 04                 a0 = a0 >> 0x4
 24935: 82 18 68 02              a1 = u64 [sp + 0x268]
 24939: 96 77 14                 a0 = a0 * 0x14
 24942: c9 7a 09                 a2 = a3 - a0
 24945: 95 97 02                 a0 = a2 + 0x2
 24948: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 24952: 64 8b                    a4 = a1
 24954: 64 7c                    a5 = a0
 24956: 01                       fallthrough
      :                          @1889
 24957: 64 ca                    a3 = a5
 24959: cd cb 0c                 a5 = a4 %u a5
 24962: 64 ab                    a4 = a3
 24964: 52 0c f9                 jump @1889 if a5 != 0
      :                          @1890
 24967: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 24970: 95 99 01                 a2 = a2 + 0x1
 24973: ca 89 08                 a1 = a2 * a1
 24976: c9 78 08                 a1 = a1 - a0
 24979: 94 a8                    a1 = 0 if a3 != 0
 24981: 7b 18 90 00              u64 [sp + 0x90] = a1
 24985: 95 17 68 02              a0 = sp + 0x268
 24989: 7b 17 50 01              u64 [sp + 0x150] = a0
 24993: 33 07 50 03              a0 = 0x350
 24997: 7b 17 58 01              u64 [sp + 0x158] = a0
 25001: 95 18 b0 00              a1 = sp + 0xb0
 25005: 7b 18 60 01              u64 [sp + 0x160] = a1
 25009: 7b 17 68 01              u64 [sp + 0x168] = a0
 25013: 95 18 90 00              a1 = sp + 0x90
 25017: 7b 18 70 01              u64 [sp + 0x170] = a1
 25021: 7b 17 78 01              u64 [sp + 0x178] = a0
 25025: 33 07 58 04 01           a0 = 0x10458
 25030: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 25034: 49 21 00 01 03           u64 [sp + 256] = 0x3
 25039: 49 21 18 01              u64 [sp + 280] = 0
 25043: 95 18 50 01              a1 = sp + 0x150
 25047: 7b 18 08 01              u64 [sp + 0x108] = a1
 25051: 49 21 10 01 03           u64 [sp + 272] = 0x3
 25056: 95 17 c8 00              a0 = sp + 0xc8
 25060: 95 18 f8 00              a1 = sp + 0xf8
 25064: 50 20 a2 01 dd bd        ra = 418, jump @637
      :                          @1891 [@dyn 209]
 25070: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 25074: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 25078: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 25082: 33 07 02                 a0 = 0x2
 25085: 33 08                    a1 = 0
 25087: 33 09                    a2 = 0
 25089: 64 5a                    a3 = s0
 25091: 33 00 a4 01              ra = 0x1a4
 25095: 0a 64                    ecalli 100 // 'log'
 25097: 01                       fallthrough
      :                          @1892 [@dyn 210]
 25098: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 25103: 55 38 00 00 ff 09        jump @1894 if a1 >=u 4294901760
      :                          @1893
 25109: 28 83 3e                 jump @2553
      :                          @1894
 25112: 33 07 10 01 03           a0 = 0x30110
 25117: 95 77 00 00 01           a0 = a0 + 0x10000
 25122: 01                       fallthrough
      :                          @1895
 25123: 82 78                    a1 = u64 [a0]
 25125: c9 87 09                 a2 = a0 - a1
 25128: aa 59 06                 jump @1897 if a2 == s0
      :                          @1896
 25131: 28 6d 3e                 jump @2553
      :                          @1897
 25134: c9 68 09                 a2 = a1 - s1
 25137: 01                       fallthrough
      :                          @1898
 25138: 82 7a                    a3 = u64 [a0]
 25140: ab 8a ef                 jump @1895 if a3 != a1
      :                          @1899
 25143: 7b 79                    u64 [a0] = a2
 25145: 33 0b                    a4 = 0
 25147: 01                       fallthrough
      :                          @1900
 25148: ab 8a e7                 jump @1895 if a3 != a1
      :                          @1901
 25151: 28 59 3e                 jump @2553
      :                          @1902 [@dyn 211]
 25154: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 25159: 97 89 0d                 a2 = a1 << 0xd
 25162: d3 98 08                 a1 = a1 ^ a2
 25165: 98 89 07                 a2 = a1 >> 0x7
 25168: 3a 0a 60 00 03           a3 = u64 [0x30060]
 25173: d3 98 08                 a1 = a1 ^ a2
 25176: 97 89 11                 a2 = a1 << 0x11
 25179: d3 98 08                 a1 = a1 ^ a2
 25182: ca a8 09                 a2 = a1 * a3
 25185: 3a 0b c0 00 03           a4 = u64 [0x300c0]
 25190: 3e 08 e0 00 03           u64 [0x300e0] = a1
 25195: 98 98 01                 a1 = a2 >> 0x1
 25198: d6 b8 08                 a1 = a1 mulhu a4
 25201: 98 88 04                 a1 = a1 >> 0x4
 25204: 96 88 32                 a1 = a1 * 0x32
 25207: c9 89 09                 a2 = a2 - a1
 25210: 7b 19 68 02              u64 [sp + 0x268] = a2
 25214: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 25219: 97 89 0d                 a2 = a1 << 0xd
 25222: d3 98 08                 a1 = a1 ^ a2
 25225: 98 89 07                 a2 = a1 >> 0x7
 25228: d3 98 08                 a1 = a1 ^ a2
 25231: 97 89 11                 a2 = a1 << 0x11
 25234: d3 98 08                 a1 = a1 ^ a2
 25237: ca a8 09                 a2 = a1 * a3
 25240: 3a 0a 98 00 03           a3 = u64 [0x30098]
 25245: 3e 08 e0 00 03           u64 [0x300e0] = a1
 25250: 98 97 02                 a0 = a2 >> 0x2
 25253: d6 a7 07                 a0 = a0 mulhu a3
 25256: 98 77 02                 a0 = a0 >> 0x2
 25259: 96 78 64                 a1 = a0 * 0x64
 25262: 82 17 68 02              a0 = u64 [sp + 0x268]
 25266: c9 89 08                 a1 = a2 - a1
 25269: 95 88 01                 a1 = a1 + 0x1
 25272: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 25276: 50 20 a8 01 e6 e9        ra = 424, jump @1555
      :                          @1903 [@dyn 212]
 25282: 7b 17 90 00              u64 [sp + 0x90] = a0
 25286: 95 17 68 02              a0 = sp + 0x268
 25290: 7b 17 50 01              u64 [sp + 0x150] = a0
 25294: 33 07 50 03              a0 = 0x350
 25298: 7b 17 58 01              u64 [sp + 0x158] = a0
 25302: 95 18 b0 00              a1 = sp + 0xb0
 25306: 7b 18 60 01              u64 [sp + 0x160] = a1
 25310: 7b 17 68 01              u64 [sp + 0x168] = a0
 25314: 95 18 90 00              a1 = sp + 0x90
 25318: 7b 18 70 01              u64 [sp + 0x170] = a1
 25322: 7b 17 78 01              u64 [sp + 0x178] = a0
 25326: 33 07 98 04 01           a0 = 0x10498
 25331: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 25335: 49 21 00 01 03           u64 [sp + 256] = 0x3
 25340: 49 21 18 01              u64 [sp + 280] = 0
 25344: 95 18 50 01              a1 = sp + 0x150
 25348: 7b 18 08 01              u64 [sp + 0x108] = a1
 25352: 49 21 10 01 03           u64 [sp + 272] = 0x3
 25357: 95 17 c8 00              a0 = sp + 0xc8
 25361: 95 18 f8 00              a1 = sp + 0xf8
 25365: 50 20 aa 01 b0 bc        ra = 426, jump @637
      :                          @1904 [@dyn 213]
 25371: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 25375: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 25379: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 25383: 33 07 02                 a0 = 0x2
 25386: 33 08                    a1 = 0
 25388: 33 09                    a2 = 0
 25390: 64 5a                    a3 = s0
 25392: 33 00 ac 01              ra = 0x1ac
 25396: 0a 64                    ecalli 100 // 'log'
 25398: 01                       fallthrough
      :                          @1905 [@dyn 214]
 25399: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 25404: 55 38 00 00 ff 09        jump @1907 if a1 >=u 4294901760
      :                          @1906
 25410: 28 56 3d                 jump @2553
      :                          @1907
 25413: 33 07 10 01 03           a0 = 0x30110
 25418: 95 77 00 00 01           a0 = a0 + 0x10000
 25423: 01                       fallthrough
      :                          @1908
 25424: 82 78                    a1 = u64 [a0]
 25426: c9 87 09                 a2 = a0 - a1
 25429: aa 59 06                 jump @1910 if a2 == s0
      :                          @1909
 25432: 28 40 3d                 jump @2553
      :                          @1910
 25435: c9 68 09                 a2 = a1 - s1
 25438: 01                       fallthrough
      :                          @1911
 25439: 82 7a                    a3 = u64 [a0]
 25441: ab 8a ef                 jump @1908 if a3 != a1
      :                          @1912
 25444: 7b 79                    u64 [a0] = a2
 25446: 33 0b                    a4 = 0
 25448: 01                       fallthrough
      :                          @1913
 25449: ab 8a e7                 jump @1908 if a3 != a1
      :                          @1914
 25452: 28 2c 3d                 jump @2553
      :                          @1915 [@dyn 215]
 25455: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 25460: 97 89 0d                 a2 = a1 << 0xd
 25463: d3 98 08                 a1 = a1 ^ a2
 25466: 98 89 07                 a2 = a1 >> 0x7
 25469: 3a 0a 60 00 03           a3 = u64 [0x30060]
 25474: d3 98 08                 a1 = a1 ^ a2
 25477: 97 89 11                 a2 = a1 << 0x11
 25480: d3 98 08                 a1 = a1 ^ a2
 25483: ca a8 09                 a2 = a1 * a3
 25486: 3e 08 e0 00 03           u64 [0x300e0] = a1
 25491: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
 25501: d6 89 0b                 a4 = a2 mulhu a1
 25504: 98 bb 04                 a4 = a4 >> 0x4
 25507: 33 0c 14                 a5 = 0x14
 25510: ca cb 0b                 a4 = a4 * a5
 25513: c9 b9 09                 a2 = a2 - a4
 25516: 7b 19 68 02              u64 [sp + 0x268] = a2
 25520: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 25525: 97 9b 0d                 a4 = a2 << 0xd
 25528: d3 b9 09                 a2 = a2 ^ a4
 25531: 98 9b 07                 a4 = a2 >> 0x7
 25534: d3 b9 09                 a2 = a2 ^ a4
 25537: 97 9b 11                 a4 = a2 << 0x11
 25540: d3 b9 09                 a2 = a2 ^ a4
 25543: ca a9 0a                 a3 = a2 * a3
 25546: 3e 09 e0 00 03           u64 [0x300e0] = a2
 25551: d6 8a 07                 a0 = a3 mulhu a1
 25554: 98 78 02                 a1 = a0 >> 0x2
 25557: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
 25560: c8 78 08                 a1 = a1 + a0
 25563: 82 17 68 02              a0 = u64 [sp + 0x268]
 25567: c9 8a 08                 a1 = a3 - a1
 25570: 95 88 01                 a1 = a1 + 0x1
 25573: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 25577: 50 20 b0 01 39 ea        ra = 432, jump @1586
      :                          @1916 [@dyn 216]
 25583: 7b 17 90 00              u64 [sp + 0x90] = a0
 25587: 95 17 68 02              a0 = sp + 0x268
 25591: 7b 17 50 01              u64 [sp + 0x150] = a0
 25595: 33 07 50 03              a0 = 0x350
 25599: 7b 17 58 01              u64 [sp + 0x158] = a0
 25603: 95 18 b0 00              a1 = sp + 0xb0
 25607: 7b 18 60 01              u64 [sp + 0x160] = a1
 25611: 7b 17 68 01              u64 [sp + 0x168] = a0
 25615: 95 18 90 00              a1 = sp + 0x90
 25619: 7b 18 70 01              u64 [sp + 0x170] = a1
 25623: 7b 17 78 01              u64 [sp + 0x178] = a0
 25627: 33 07 d8 04 01           a0 = 0x104d8
 25632: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 25636: 49 21 00 01 03           u64 [sp + 256] = 0x3
 25641: 49 21 18 01              u64 [sp + 280] = 0
 25645: 95 18 50 01              a1 = sp + 0x150
 25649: 7b 18 08 01              u64 [sp + 0x108] = a1
 25653: 49 21 10 01 03           u64 [sp + 272] = 0x3
 25658: 95 17 c8 00              a0 = sp + 0xc8
 25662: 95 18 f8 00              a1 = sp + 0xf8
 25666: 50 20 b2 01 83 bb        ra = 434, jump @637
      :                          @1917 [@dyn 217]
 25672: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 25676: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 25680: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 25684: 33 07 02                 a0 = 0x2
 25687: 33 08                    a1 = 0
 25689: 33 09                    a2 = 0
 25691: 64 5a                    a3 = s0
 25693: 33 00 b4 01              ra = 0x1b4
 25697: 0a 64                    ecalli 100 // 'log'
 25699: 01                       fallthrough
      :                          @1918 [@dyn 218]
 25700: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 25705: 55 38 00 00 ff 09        jump @1920 if a1 >=u 4294901760
      :                          @1919
 25711: 28 29 3c                 jump @2553
      :                          @1920
 25714: 33 07 10 01 03           a0 = 0x30110
 25719: 95 77 00 00 01           a0 = a0 + 0x10000
 25724: 01                       fallthrough
      :                          @1921
 25725: 82 78                    a1 = u64 [a0]
 25727: c9 87 09                 a2 = a0 - a1
 25730: aa 59 06                 jump @1923 if a2 == s0
      :                          @1922
 25733: 28 13 3c                 jump @2553
      :                          @1923
 25736: c9 68 09                 a2 = a1 - s1
 25739: 01                       fallthrough
      :                          @1924
 25740: 82 7a                    a3 = u64 [a0]
 25742: ab 8a ef                 jump @1921 if a3 != a1
      :                          @1925
 25745: 7b 79                    u64 [a0] = a2
 25747: 33 0b                    a4 = 0
 25749: 01                       fallthrough
      :                          @1926
 25750: ab 8a e7                 jump @1921 if a3 != a1
      :                          @1927
 25753: 28 ff 3b                 jump @2553
      :                          @1928 [@dyn 219]
 25756: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 25761: 97 89 0d                 a2 = a1 << 0xd
 25764: d3 98 08                 a1 = a1 ^ a2
 25767: 98 89 07                 a2 = a1 >> 0x7
 25770: d3 89 09                 a2 = a2 ^ a1
 25773: 97 9a 11                 a3 = a2 << 0x11
 25776: 3a 08 60 00 03           a1 = u64 [0x30060]
 25781: d3 9a 0a                 a3 = a3 ^ a2
 25784: 3a 09 b0 00 03           a2 = u64 [0x300b0]
 25789: ca 8a 0b                 a4 = a3 * a1
 25792: 3e 0a e0 00 03           u64 [0x300e0] = a3
 25797: d6 9b 0a                 a3 = a4 mulhu a2
 25800: c9 ab 0c                 a5 = a4 - a3
 25803: 98 cc 01                 a5 = a5 >> 0x1
 25806: c8 ca 0a                 a3 = a3 + a5
 25809: 98 ac 06                 a5 = a3 >> 0x6
 25812: 33 03 65                 t1 = 0x65
 25815: ca 3c 0c                 a5 = a5 * t1
 25818: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 25823: c9 cb 0b                 a4 = a4 - a5
 25826: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
 25829: 97 6c 0d                 a5 = s1 << 0xd
 25832: d3 c6 06                 s1 = s1 ^ a5
 25835: 98 6c 07                 a5 = s1 >> 0x7
 25838: d3 c6 06                 s1 = s1 ^ a5
 25841: 97 6c 11                 a5 = s1 << 0x11
 25844: d3 6c 0c                 a5 = a5 ^ s1
 25847: ca 8c 05                 s0 = a5 * a1
 25850: 3e 0c e0 00 03           u64 [0x300e0] = a5
 25855: d6 95 0c                 a5 = s0 mulhu a2
 25858: c9 c5 06                 s1 = s0 - a5
 25861: 98 66 01                 s1 = s1 >> 0x1
 25864: c8 6c 0c                 a5 = a5 + s1
 25867: 98 cc 06                 a5 = a5 >> 0x6
 25870: ca 3c 0c                 a5 = a5 * t1
 25873: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 25878: c9 c5 05                 s0 = s0 - a5
 25881: 95 5c ce                 a5 = s0 + 0xffffffffffffffce
 25884: 97 b6 0d                 s1 = a4 << 0xd
 25887: d3 b6 06                 s1 = s1 ^ a4
 25890: 98 6b 07                 a4 = s1 >> 0x7
 25893: d3 b6 06                 s1 = s1 ^ a4
 25896: 97 6b 11                 a4 = s1 << 0x11
 25899: d3 6b 0b                 a4 = a4 ^ s1
 25902: ca 8b 05                 s0 = a4 * a1
 25905: 3e 0b e0 00 03           u64 [0x300e0] = a4
 25910: d6 95 0b                 a4 = s0 mulhu a2
 25913: c9 b5 06                 s1 = s0 - a4
 25916: 98 66 01                 s1 = s1 >> 0x1
 25919: c8 6b 0b                 a4 = a4 + s1
 25922: 98 bb 06                 a4 = a4 >> 0x6
 25925: ca 3b 0b                 a4 = a4 * t1
 25928: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 25933: c9 b5 05                 s0 = s0 - a4
 25936: 95 5b ce                 a4 = s0 + 0xffffffffffffffce
 25939: 97 a6 0d                 s1 = a3 << 0xd
 25942: d3 a6 06                 s1 = s1 ^ a3
 25945: 98 6a 07                 a3 = s1 >> 0x7
 25948: d3 a6 06                 s1 = s1 ^ a3
 25951: 97 6a 11                 a3 = s1 << 0x11
 25954: d3 6a 0a                 a3 = a3 ^ s1
 25957: ca 8a 08                 a1 = a3 * a1
 25960: 3e 0a e0 00 03           u64 [0x300e0] = a3
 25965: d6 98 07                 a0 = a1 mulhu a2
 25968: c9 78 09                 a2 = a1 - a0
 25971: 98 99 01                 a2 = a2 >> 0x1
 25974: c8 97 07                 a0 = a0 + a2
 25977: 98 77 06                 a0 = a0 >> 0x6
 25980: ca 37 07                 a0 = a0 * t1
 25983: c9 78 08                 a1 = a1 - a0
 25986: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
 25989: 7b 1c d0 00              u64 [sp + 0xd0] = a5
 25993: 7b 12 c8 00              u64 [sp + 0xc8] = t0
 25997: 7b 1b d8 00              u64 [sp + 0xd8] = a4
 26001: 7b 17 e0 00              u64 [sp + 0xe0] = a0
 26005: 95 17 c8 00              a0 = sp + 0xc8
 26009: 95 15 c8 00              s0 = sp + 0xc8
 26013: 28 ce e8                 jump @1593
      :                          @1929
 26016: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 26020: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 26024: 33 07 76                 a0 = 0x76
 26027: 7b 17 00 01              u64 [sp + 0x100] = a0
 26031: 95 17 b0 00              a0 = sp + 0xb0
 26035: 7b 17 08 01              u64 [sp + 0x108] = a0
 26039: 33 07 50 03              a0 = 0x350
 26043: 7b 17 10 01              u64 [sp + 0x110] = a0
 26047: 33 07 28 05 01           a0 = 0x10528
 26052: 7b 17 50 01              u64 [sp + 0x150] = a0
 26056: 49 21 58 01 02           u64 [sp + 344] = 0x2
 26061: 49 21 70 01              u64 [sp + 368] = 0
 26065: 95 18 f8 00              a1 = sp + 0xf8
 26069: 7b 18 60 01              u64 [sp + 0x160] = a1
 26073: 49 21 68 01 02           u64 [sp + 360] = 0x2
 26078: 95 17 90 00              a0 = sp + 0x90
 26082: 95 18 50 01              a1 = sp + 0x150
 26086: 50 20 b8 01 df b9        ra = 440, jump @637
      :                          @1930 [@dyn 220]
 26092: 82 15 98 00              s0 = u64 [sp + 0x98]
 26096: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 26100: 82 16 90 00              s1 = u64 [sp + 0x90]
 26104: 33 07 02                 a0 = 0x2
 26107: 33 08                    a1 = 0
 26109: 33 09                    a2 = 0
 26111: 64 5a                    a3 = s0
 26113: 33 00 ba 01              ra = 0x1ba
 26117: 0a 64                    ecalli 100 // 'log'
 26119: 01                       fallthrough
      :                          @1931 [@dyn 221]
 26120: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 26125: 55 38 00 00 ff 09        jump @1933 if a1 >=u 4294901760
      :                          @1932
 26131: 28 85 3a                 jump @2553
      :                          @1933
 26134: 33 07 10 01 03           a0 = 0x30110
 26139: 95 77 00 00 01           a0 = a0 + 0x10000
 26144: 01                       fallthrough
      :                          @1934
 26145: 82 78                    a1 = u64 [a0]
 26147: c9 87 09                 a2 = a0 - a1
 26150: aa 59 06                 jump @1936 if a2 == s0
      :                          @1935
 26153: 28 6f 3a                 jump @2553
      :                          @1936
 26156: c9 68 09                 a2 = a1 - s1
 26159: 01                       fallthrough
      :                          @1937
 26160: 82 7a                    a3 = u64 [a0]
 26162: ab 8a ef                 jump @1934 if a3 != a1
      :                          @1938
 26165: 7b 79                    u64 [a0] = a2
 26167: 33 0b                    a4 = 0
 26169: 01                       fallthrough
      :                          @1939
 26170: ab 8a e7                 jump @1934 if a3 != a1
      :                          @1940
 26173: 28 5b 3a                 jump @2553
      :                          @1941 [@dyn 222]
 26176: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 26181: 97 89 0d                 a2 = a1 << 0xd
 26184: d3 98 08                 a1 = a1 ^ a2
 26187: 98 89 07                 a2 = a1 >> 0x7
 26190: d3 98 08                 a1 = a1 ^ a2
 26193: 97 89 11                 a2 = a1 << 0x11
 26196: d3 98 08                 a1 = a1 ^ a2
 26199: 3a 09 60 00 03           a2 = u64 [0x30060]
 26204: 3a 0a 68 00 03           a3 = u64 [0x30068]
 26209: 3e 08 e0 00 03           u64 [0x300e0] = a1
 26214: ca 98 07                 a0 = a1 * a2
 26217: 98 78 03                 a1 = a0 >> 0x3
 26220: d6 a8 08                 a1 = a1 mulhu a3
 26223: 98 88 04                 a1 = a1 >> 0x4
 26226: 96 88 e8 03              a1 = a1 * 0x3e8
 26230: c9 87 07                 a0 = a0 - a1
 26233: 86 77 01                 a0 = a0 | 0x1
 26236: 50 20 be 01 3e e8        ra = 446, jump @1595
      :                          @1942 [@dyn 223]
 26242: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 26246: 7b 18 d0 00              u64 [sp + 0xd0] = a1
 26250: 95 17 c8 00              a0 = sp + 0xc8
 26254: 7b 17 90 00              u64 [sp + 0x90] = a0
 26258: 33 07 ea 00              a0 = 0xea
 26262: 7b 17 98 00              u64 [sp + 0x98] = a0
 26266: 33 07 60 05 01           a0 = 0x10560
 26271: 7b 17 50 01              u64 [sp + 0x150] = a0
 26275: 49 21 58 01 01           u64 [sp + 344] = 0x1
 26280: 49 21 70 01              u64 [sp + 368] = 0
 26284: 95 18 90 00              a1 = sp + 0x90
 26288: 7b 18 60 01              u64 [sp + 0x160] = a1
 26292: 49 21 68 01 01           u64 [sp + 360] = 0x1
 26297: 95 17 f8 00              a0 = sp + 0xf8
 26301: 95 18 50 01              a1 = sp + 0x150
 26305: 50 20 c0 01 04 b9        ra = 448, jump @637
      :                          @1943 [@dyn 224]
 26311: 82 15 00 01              s0 = u64 [sp + 0x100]
 26315: 82 1b 08 01              a4 = u64 [sp + 0x108]
 26319: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 26323: 33 07 02                 a0 = 0x2
 26326: 33 08                    a1 = 0
 26328: 33 09                    a2 = 0
 26330: 64 5a                    a3 = s0
 26332: 33 00 c2 01              ra = 0x1c2
 26336: 0a 64                    ecalli 100 // 'log'
 26338: 01                       fallthrough
      :                          @1944 [@dyn 225]
 26339: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 26344: 55 38 00 00 ff 09        jump @1946 if a1 >=u 4294901760
      :                          @1945
 26350: 28 aa 39                 jump @2553
      :                          @1946
 26353: 33 07 10 01 03           a0 = 0x30110
 26358: 95 77 00 00 01           a0 = a0 + 0x10000
 26363: 01                       fallthrough
      :                          @1947
 26364: 82 78                    a1 = u64 [a0]
 26366: c9 87 09                 a2 = a0 - a1
 26369: aa 59 06                 jump @1949 if a2 == s0
      :                          @1948
 26372: 28 94 39                 jump @2553
      :                          @1949
 26375: c9 68 09                 a2 = a1 - s1
 26378: 01                       fallthrough
      :                          @1950
 26379: 82 7a                    a3 = u64 [a0]
 26381: ab 8a ef                 jump @1947 if a3 != a1
      :                          @1951
 26384: 7b 79                    u64 [a0] = a2
 26386: 33 0b                    a4 = 0
 26388: 01                       fallthrough
      :                          @1952
 26389: ab 8a e7                 jump @1947 if a3 != a1
      :                          @1953
 26392: 28 80 39                 jump @2553
      :                          @1954 [@dyn 226]
 26395: 95 17 28                 a0 = sp + 0x28
 26398: 33 00 c6 01              ra = 0x1c6
 26402: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 26405: 7b 15                    u64 [sp] = s0
 26407: 33 03 10 01 03           t1 = 0x30110
 26412: 33 02 00 00 01           t0 = 0x10000
 26417: c8 23 04                 t2 = t1 + t0
 26420: 28 72 c1                 jump @780
      :                          @1955 [@dyn 227]
 26423: 82 18 38                 a1 = u64 [sp + 0x38]
 26426: 7b 18                    u64 [sp] = a1
 26428: 82 15 30                 s0 = u64 [sp + 0x30]
 26431: 68 87                    a0 = clz a1
 26433: 9a 7a 40                 a3 = 0x40 - a0
 26436: 64 57                    a0 = s0
 26438: 33 09                    a2 = 0
 26440: 50 20 c8 01 97 a9        ra = 456, jump @350
      :                          @1956 [@dyn 228]
 26446: 82 17 28                 a0 = u64 [sp + 0x28]
 26449: 7b 17 08                 u64 [sp + 0x8] = a0
 26452: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 26457: 97 89 0d                 a2 = a1 << 0xd
 26460: d3 98 08                 a1 = a1 ^ a2
 26463: 98 89 07                 a2 = a1 >> 0x7
 26466: 3a 0a 60 00 03           a3 = u64 [0x30060]
 26471: d3 98 08                 a1 = a1 ^ a2
 26474: 97 89 11                 a2 = a1 << 0x11
 26477: d3 98 08                 a1 = a1 ^ a2
 26480: ca a8 09                 a2 = a1 * a3
 26483: 3a 0b 98 00 03           a4 = u64 [0x30098]
 26488: 3e 08 e0 00 03           u64 [0x300e0] = a1
 26493: 98 98 02                 a1 = a2 >> 0x2
 26496: d6 b8 08                 a1 = a1 mulhu a4
 26499: 98 88 02                 a1 = a1 >> 0x2
 26502: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 26507: 96 88 64                 a1 = a1 * 0x64
 26510: c9 89 08                 a1 = a2 - a1
 26513: 97 69 0d                 a2 = s1 << 0xd
 26516: d3 96 06                 s1 = s1 ^ a2
 26519: 98 69 07                 a2 = s1 >> 0x7
 26522: d3 96 06                 s1 = s1 ^ a2
 26525: 97 69 11                 a2 = s1 << 0x11
 26528: d3 69 09                 a2 = a2 ^ s1
 26531: ca a9 0a                 a3 = a2 * a3
 26534: 3e 09 e0 00 03           u64 [0x300e0] = a2
 26539: 98 a7 02                 a0 = a3 >> 0x2
 26542: d6 b7 07                 a0 = a0 mulhu a4
 26545: 98 77 02                 a0 = a0 >> 0x2
 26548: 96 77 64                 a0 = a0 * 0x64
 26551: c9 7a 0a                 a3 = a3 - a0
 26554: e6 a8 09                 a2 = minu(a1, a3)
 26557: e4 a8 0a                 a3 = maxu(a1, a3)
 26560: 7b 19 68 02              u64 [sp + 0x268] = a2
 26564: 7b 1a b0 00              u64 [sp + 0xb0] = a3
 26568: 7b 15 10                 u64 [sp + 0x10] = s0
 26571: 64 57                    a0 = s0
 26573: 82 18                    a1 = u64 [sp]
 26575: 50 20 ca 01 af eb        ra = 458, jump @1697
      :                          @1957 [@dyn 229]
 26581: 7b 17 90 00              u64 [sp + 0x90] = a0
 26585: 95 17 68 02              a0 = sp + 0x268
 26589: 7b 17 50 01              u64 [sp + 0x150] = a0
 26593: 33 07 a8 03              a0 = 0x3a8
 26597: 7b 17 58 01              u64 [sp + 0x158] = a0
 26601: 95 18 b0 00              a1 = sp + 0xb0
 26605: 7b 18 60 01              u64 [sp + 0x160] = a1
 26609: 7b 17 68 01              u64 [sp + 0x168] = a0
 26613: 95 17 90 00              a0 = sp + 0x90
 26617: 7b 17 70 01              u64 [sp + 0x170] = a0
 26621: 33 07 50 03              a0 = 0x350
 26625: 7b 17 78 01              u64 [sp + 0x178] = a0
 26629: 33 07 90 05 01           a0 = 0x10590
 26634: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 26638: 49 21 00 01 03           u64 [sp + 256] = 0x3
 26643: 49 21 18 01              u64 [sp + 280] = 0
 26647: 95 18 50 01              a1 = sp + 0x150
 26651: 7b 18 08 01              u64 [sp + 0x108] = a1
 26655: 49 21 10 01 03           u64 [sp + 272] = 0x3
 26660: 95 17 c8 00              a0 = sp + 0xc8
 26664: 95 18 f8 00              a1 = sp + 0xf8
 26668: 50 20 cc 01 99 b7        ra = 460, jump @637
      :                          @1958 [@dyn 230]
 26674: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 26678: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 26682: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 26686: 33 07 02                 a0 = 0x2
 26689: 33 08                    a1 = 0
 26691: 33 09                    a2 = 0
 26693: 64 5a                    a3 = s0
 26695: 33 00 ce 01              ra = 0x1ce
 26699: 0a 64                    ecalli 100 // 'log'
 26701: 01                       fallthrough
      :                          @1959 [@dyn 231]
 26702: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 26707: 53 38 00 00 ff 25        jump @1965 if a1 <u 4294901760
      :                          @1960
 26713: 33 07 10 01 03           a0 = 0x30110
 26718: 95 77 00 00 01           a0 = a0 + 0x10000
 26723: 01                       fallthrough
      :                          @1961
 26724: 82 78                    a1 = u64 [a0]
 26726: c9 87 09                 a2 = a0 - a1
 26729: ab 59 0f                 jump @1965 if a2 != s0
      :                          @1962
 26732: c9 68 09                 a2 = a1 - s1
 26735: 01                       fallthrough
      :                          @1963
 26736: 82 7a                    a3 = u64 [a0]
 26738: ab 8a f2                 jump @1961 if a3 != a1
      :                          @1964
 26741: 7b 79                    u64 [a0] = a2
 26743: 01                       fallthrough
      :                          @1965
 26744: 82 16 10                 s1 = u64 [sp + 0x10]
 26747: 82 18 08                 a1 = u64 [sp + 0x8]
 26750: 52 08 06                 jump @1967 if a1 != 0
      :                          @1966
 26753: 28 17 38                 jump @2553
      :                          @1967
 26756: 54 28 00 20 08           jump @1969 if a1 <=u 8192
      :                          @1968
 26761: 28 0f 38                 jump @2553
      :                          @1969
 26764: 97 87 03                 a0 = a1 << 0x3
 26767: 33 08 10 01 03           a1 = 0x30110
 26772: 95 88 00 00 01           a1 = a1 + 0x10000
 26777: 01                       fallthrough
      :                          @1970
 26778: 82 89                    a2 = u64 [a1]
 26780: c9 98 0a                 a3 = a1 - a2
 26783: aa 6a 06                 jump @1972 if a3 == s1
      :                          @1971
 26786: 28 f6 37                 jump @2553
      :                          @1972
 26789: c9 79 0a                 a3 = a2 - a0
 26792: 01                       fallthrough
      :                          @1973
 26793: 82 8b                    a4 = u64 [a1]
 26795: ab 9b ef                 jump @1970 if a4 != a2
      :                          @1974
 26798: 7b 8a                    u64 [a1] = a3
 26800: 33 0c                    a5 = 0
 26802: 01                       fallthrough
      :                          @1975
 26803: ab 9b e7                 jump @1970 if a4 != a2
      :                          @1976
 26806: 28 e2 37                 jump @2553
      :                          @1977 [@dyn 232]
 26809: 95 17 50 01              a0 = sp + 0x150
 26813: 95 15 50 01              s0 = sp + 0x150
 26817: 33 00 d2 01              ra = 0x1d2
 26821: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 26824: 7b 10 40                 u64 [sp + 0x40] = ra
 26827: 7b 15 38                 u64 [sp + 0x38] = s0
 26830: 7b 16 30                 u64 [sp + 0x30] = s1
 26833: 64 70                    ra = a0
 26835: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 26840: 3a 03 48 00 03           t1 = u64 [0x30048]
 26845: 97 89 0d                 a2 = a1 << 0xd
 26848: d3 98 08                 a1 = a1 ^ a2
 26851: 98 89 07                 a2 = a1 >> 0x7
 26854: d3 98 08                 a1 = a1 ^ a2
 26857: 97 89 11                 a2 = a1 << 0x11
 26860: d3 98 08                 a1 = a1 ^ a2
 26863: 3a 09 50 00 03           a2 = u64 [0x30050]
 26868: 3e 08 e0 00 03           u64 [0x300e0] = a1
 26873: ca 38 07                 a0 = a1 * t1
 26876: 98 78 03                 a1 = a0 >> 0x3
 26879: d6 98 08                 a1 = a1 mulhu a2
 26882: 98 88 04                 a1 = a1 >> 0x4
 26885: 96 88 e8 03              a1 = a1 * 0x3e8
 26889: c9 87 07                 a0 = a0 - a1
 26892: 95 79 64                 a2 = a0 + 0x64
 26895: 33 07 02                 a0 = 0x2
 26898: 33 0a 09                 a3 = 0x9
 26901: 28 f4 e6                 jump @1616
      :                          @1978 [@dyn 233]
 26904: 82 17 50 01              a0 = u64 [sp + 0x150]
 26908: 82 18 58 01              a1 = u64 [sp + 0x158]
 26912: 82 19 60 01              a2 = u64 [sp + 0x160]
 26916: 7b 17 68 02              u64 [sp + 0x268] = a0
 26920: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 26924: 7b 19 90 00              u64 [sp + 0x90] = a2
 26928: 95 17 68 02              a0 = sp + 0x268
 26932: 7b 17 50 01              u64 [sp + 0x150] = a0
 26936: 33 07 50 03              a0 = 0x350
 26940: 7b 17 58 01              u64 [sp + 0x158] = a0
 26944: 95 18 b0 00              a1 = sp + 0xb0
 26948: 7b 18 60 01              u64 [sp + 0x160] = a1
 26952: 7b 17 68 01              u64 [sp + 0x168] = a0
 26956: 95 18 90 00              a1 = sp + 0x90
 26960: 7b 18 70 01              u64 [sp + 0x170] = a1
 26964: 7b 17 78 01              u64 [sp + 0x178] = a0
 26968: 33 07 d0 05 01           a0 = 0x105d0
 26973: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 26977: 49 21 00 01 03           u64 [sp + 256] = 0x3
 26982: 49 21 18 01              u64 [sp + 280] = 0
 26986: 7b 15 08 01              u64 [sp + 0x108] = s0
 26990: 49 21 10 01 03           u64 [sp + 272] = 0x3
 26995: 95 17 c8 00              a0 = sp + 0xc8
 26999: 95 18 f8 00              a1 = sp + 0xf8
 27003: 50 20 d4 01 4a b6        ra = 468, jump @637
      :                          @1979 [@dyn 234]
 27009: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 27013: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 27017: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 27021: 33 07 02                 a0 = 0x2
 27024: 33 08                    a1 = 0
 27026: 33 09                    a2 = 0
 27028: 64 5a                    a3 = s0
 27030: 33 00 d6 01              ra = 0x1d6
 27034: 0a 64                    ecalli 100 // 'log'
 27036: 01                       fallthrough
      :                          @1980 [@dyn 235]
 27037: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 27042: 55 38 00 00 ff 09        jump @1982 if a1 >=u 4294901760
      :                          @1981
 27048: 28 f0 36                 jump @2553
      :                          @1982
 27051: 33 07 10 01 03           a0 = 0x30110
 27056: 95 77 00 00 01           a0 = a0 + 0x10000
 27061: 01                       fallthrough
      :                          @1983
 27062: 82 78                    a1 = u64 [a0]
 27064: c9 87 09                 a2 = a0 - a1
 27067: aa 59 06                 jump @1985 if a2 == s0
      :                          @1984
 27070: 28 da 36                 jump @2553
      :                          @1985
 27073: c9 68 09                 a2 = a1 - s1
 27076: 01                       fallthrough
      :                          @1986
 27077: 82 7a                    a3 = u64 [a0]
 27079: ab 8a ef                 jump @1983 if a3 != a1
      :                          @1987
 27082: 7b 79                    u64 [a0] = a2
 27084: 33 0b                    a4 = 0
 27086: 01                       fallthrough
      :                          @1988
 27087: ab 8a e7                 jump @1983 if a3 != a1
      :                          @1989
 27090: 28 c6 36                 jump @2553
      :                          @1990 [@dyn 236]
 27093: 3a 07 60 00 03           a0 = u64 [0x30060]
 27098: 7b 17 10                 u64 [sp + 0x10] = a0
 27101: 33 07 f4 01              a0 = 0x1f4
 27105: 33 00 da 01              ra = 0x1da
 27109: 33 09 02                 a2 = 0x2
 27112: 33 0a 09                 a3 = 0x9
 27115: 28 95 c0                 jump @820
      :                          @1991 [@dyn 237]
 27118: 64 75                    s0 = a0
 27120: 33 07 64                 a0 = 0x64
 27123: 33 00 dc 01              ra = 0x1dc
 27127: 33 09 02                 a2 = 0x2
 27130: 33 0a 09                 a3 = 0x9
 27133: 28 83 c0                 jump @820
      :                          @1992 [@dyn 238]
 27136: 64 76                    s1 = a0
 27138: 64 57                    a0 = s0
 27140: 50 20 de 01 ab c0        ra = 478, jump @831
      :                          @1993 [@dyn 239]
 27146: 82 1c 10                 a5 = u64 [sp + 0x10]
 27149: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 27154: 64 7a                    a3 = a0
 27156: 97 97 0d                 a0 = a2 << 0xd
 27159: d3 97 07                 a0 = a0 ^ a2
 27162: 98 79 07                 a2 = a0 >> 0x7
 27165: d3 97 07                 a0 = a0 ^ a2
 27168: 97 79 11                 a2 = a0 << 0x11
 27171: d3 97 07                 a0 = a0 ^ a2
 27174: 3e 07 e0 00 03           u64 [0x300e0] = a0
 27179: 64 62                    t0 = s1
 27181: 95 68 ff                 a1 = s1 + 0xffffffffffffffff
 27184: ca c7 07                 a0 = a0 * a5
 27187: cd 87 0b                 a4 = a0 %u a1
 27190: 95 bb 01                 a4 = a4 + 0x1
 27193: 33 06 01                 s1 = 0x1
 27196: 64 a8                    a1 = a3
 27198: 64 b7                    a0 = a4
 27200: 28 0e                    jump @1996
      :                          @1994
 27202: 98 77 01                 a0 = a0 >> 0x1
 27205: ca 88 08                 a1 = a1 * a1
 27208: 52 07 06                 jump @1996 if a0 != 0
      :                          @1995
 27211: 28 72 2f                 jump @2467
      :                          @1996
 27214: 84 79 01                 a2 = a0 & 0x1
 27217: cd 58 08                 a1 = a1 %u s0
 27220: 51 09 ee                 jump @1994 if a2 == 0
      :                          @1997
 27223: ca 68 09                 a2 = a1 * s1
 27226: cd 59 06                 s1 = a2 %u s0
 27229: 28 e5                    jump @1994
      :                          @1998 [@dyn 240]
 27231: 33 07 08                 a0 = 0x8
 27234: 50 20 e2 01 19 b6        ra = 482, jump @655
      :                          @1999 [@dyn 241]
 27240: 64 75                    s0 = a0
 27242: 33 06 01                 s1 = 0x1
 27245: 7b 76                    u64 [a0] = s1
 27247: 33 07 18                 a0 = 0x18
 27250: 50 20 e4 01 09 b6        ra = 484, jump @655
      :                          @2000 [@dyn 242]
 27256: 64 7b                    a4 = a0
 27258: 7b 76                    u64 [a0] = s1
 27260: 49 1b 08 ff              u64 [a4 + 8] = 0xffffffffffffffff
 27264: 49 1b 10 ff              u64 [a4 + 16] = 0xffffffffffffffff
 27268: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 27273: 97 89 0d                 a2 = a1 << 0xd
 27276: d3 98 08                 a1 = a1 ^ a2
 27279: 98 89 07                 a2 = a1 >> 0x7
 27282: d3 98 08                 a1 = a1 ^ a2
 27285: 3a 09 60 00 03           a2 = u64 [0x30060]
 27290: 97 8a 11                 a3 = a1 << 0x11
 27293: d3 a8 08                 a1 = a1 ^ a3
 27296: ca 98 09                 a2 = a1 * a2
 27299: 3e 08 e0 00 03           u64 [0x300e0] = a1
 27304: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
 27314: d6 79 07                 a0 = a2 mulhu a0
 27317: 98 77 04                 a0 = a0 >> 0x4
 27320: 96 77 14                 a0 = a0 * 0x14
 27323: c9 79 06                 s1 = a2 - a0
 27326: 7b 16 b0 00              u64 [sp + 0xb0] = s1
 27330: 95 17 90 00              a0 = sp + 0x90
 27334: 7b 15 10                 u64 [sp + 0x10] = s0
 27337: 64 58                    a1 = s0
 27339: 7b 1b 08                 u64 [sp + 0x8] = a4
 27342: 64 b9                    a2 = a4
 27344: 64 6a                    a3 = s1
 27346: 33 00 e6 01              ra = 0x1e6
 27350: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 27353: 7b 10 30                 u64 [sp + 0x30] = ra
 27356: 7b 15 28                 u64 [sp + 0x28] = s0
 27359: 7b 16 20                 u64 [sp + 0x20] = s1
 27362: 64 90                    ra = a2
 27364: 7b 18 18                 u64 [sp + 0x18] = a1
 27367: 7b 17                    u64 [sp] = a0
 27369: 95 a9 01                 a2 = a3 + 0x1
 27372: 7b 19 08                 u64 [sp + 0x8] = a2
 27375: 97 99 03                 a2 = a2 << 0x3
 27378: 33 03 10 01 03           t1 = 0x30110
 27383: 33 02 00 00 01           t0 = 0x10000
 27388: c8 23 04                 t2 = t1 + t0
 27391: 28 a0 e7                 jump @1675
      :                          @2001 [@dyn 243]
 27394: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 27398: ac 86 06                 jump @2003 if s1 <u a1
      :                          @2002
 27401: 28 aa 35                 jump @2556
      :                          @2003
 27404: 82 17 98 00              a0 = u64 [sp + 0x98]
 27408: 97 66 03                 s1 = s1 << 0x3
 27411: 7b 17                    u64 [sp] = a0
 27413: c8 76 06                 s1 = s1 + a0
 27416: 95 17 b0 00              a0 = sp + 0xb0
 27420: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 27424: 33 07 50 03              a0 = 0x350
 27428: 7b 17 00 01              u64 [sp + 0x100] = a0
 27432: 7b 16 08 01              u64 [sp + 0x108] = s1
 27436: 33 07 a8 03              a0 = 0x3a8
 27440: 7b 17 10 01              u64 [sp + 0x110] = a0
 27444: 33 07 58 06 01           a0 = 0x10658
 27449: 7b 17 50 01              u64 [sp + 0x150] = a0
 27453: 49 21 58 01 02           u64 [sp + 344] = 0x2
 27458: 49 21 70 01              u64 [sp + 368] = 0
 27462: 95 18 f8 00              a1 = sp + 0xf8
 27466: 7b 18 60 01              u64 [sp + 0x160] = a1
 27470: 49 21 68 01 02           u64 [sp + 360] = 0x2
 27475: 95 17 c8 00              a0 = sp + 0xc8
 27479: 95 18 50 01              a1 = sp + 0x150
 27483: 50 20 e8 01 6a b4        ra = 488, jump @637
      :                          @2004 [@dyn 244]
 27489: 82 16 d0 00              s1 = u64 [sp + 0xd0]
 27493: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 27497: 82 15 c8 00              s0 = u64 [sp + 0xc8]
 27501: 33 07 02                 a0 = 0x2
 27504: 33 08                    a1 = 0
 27506: 33 09                    a2 = 0
 27508: 64 6a                    a3 = s1
 27510: 33 00 ea 01              ra = 0x1ea
 27514: 0a 64                    ecalli 100 // 'log'
 27516: 01                       fallthrough
      :                          @2005 [@dyn 245]
 27517: 95 58 ff ff fe           a1 = s0 + 0xfffffffffffeffff
 27522: 53 38 00 00 ff 27        jump @2011 if a1 <u 4294901760
      :                          @2006
 27528: 33 07 10 01 03           a0 = 0x30110
 27533: 95 77 00 00 01           a0 = a0 + 0x10000
 27538: 01                       fallthrough
      :                          @2007
 27539: 82 78                    a1 = u64 [a0]
 27541: c9 87 09                 a2 = a0 - a1
 27544: ab 69 11                 jump @2011 if a2 != s1
      :                          @2008
 27547: c9 58 09                 a2 = a1 - s0
 27550: 01                       fallthrough
      :                          @2009
 27551: 82 7a                    a3 = u64 [a0]
 27553: ab 8a f2                 jump @2007 if a3 != a1
      :                          @2010
 27556: 7b 79                    u64 [a0] = a2
 27558: 33 0b                    a4 = 0
 27560: 01                       fallthrough
      :                          @2011
 27561: 82 17 90 00              a0 = u64 [sp + 0x90]
 27565: 82 16                    s1 = u64 [sp]
 27567: 51 07 2a                 jump @2018 if a0 == 0
      :                          @2012
 27570: 56 27 00 20 27           jump @2018 if a0 >u 8192
      :                          @2013
 27575: 97 77 03                 a0 = a0 << 0x3
 27578: 33 08 10 01 03           a1 = 0x30110
 27583: 95 88 00 00 01           a1 = a1 + 0x10000
 27588: 01                       fallthrough
      :                          @2014
 27589: 82 89                    a2 = u64 [a1]
 27591: c9 98 0a                 a3 = a1 - a2
 27594: ab 6a 0f                 jump @2018 if a3 != s1
      :                          @2015
 27597: c9 79 0a                 a3 = a2 - a0
 27600: 01                       fallthrough
      :                          @2016
 27601: 82 8b                    a4 = u64 [a1]
 27603: ab 9b f2                 jump @2014 if a4 != a2
      :                          @2017
 27606: 7b 8a                    u64 [a1] = a3
 27608: 01                       fallthrough
      :                          @2018
 27609: 33 07 10 01 03           a0 = 0x30110
 27614: 95 77 00 00 01           a0 = a0 + 0x10000
 27619: 82 1c 08                 a5 = u64 [sp + 0x8]
 27622: 01                       fallthrough
      :                          @2019
 27623: 82 78                    a1 = u64 [a0]
 27625: c9 87 09                 a2 = a0 - a1
 27628: ab c9 11                 jump @2023 if a2 != a5
      :                          @2020
 27631: 95 89 e8                 a2 = a1 + 0xffffffffffffffe8
 27634: 01                       fallthrough
      :                          @2021
 27635: 82 7a                    a3 = u64 [a0]
 27637: ab 8a f2                 jump @2019 if a3 != a1
      :                          @2022
 27640: 7b 79                    u64 [a0] = a2
 27642: 33 0b                    a4 = 0
 27644: 01                       fallthrough
      :                          @2023
 27645: 33 07 10 01 03           a0 = 0x30110
 27650: 95 77 00 00 01           a0 = a0 + 0x10000
 27655: 82 1c 10                 a5 = u64 [sp + 0x10]
 27658: 01                       fallthrough
      :                          @2024
 27659: 82 78                    a1 = u64 [a0]
 27661: c9 87 09                 a2 = a0 - a1
 27664: aa c9 06                 jump @2026 if a2 == a5
      :                          @2025
 27667: 28 85 34                 jump @2553
      :                          @2026
 27670: 95 89 f8                 a2 = a1 + 0xfffffffffffffff8
 27673: 01                       fallthrough
      :                          @2027
 27674: 82 7a                    a3 = u64 [a0]
 27676: ab 8a ef                 jump @2024 if a3 != a1
      :                          @2028
 27679: 7b 79                    u64 [a0] = a2
 27681: 33 0b                    a4 = 0
 27683: 01                       fallthrough
      :                          @2029
 27684: ab 8a e7                 jump @2024 if a3 != a1
      :                          @2030
 27687: 28 71 34                 jump @2553
      :                          @2031 [@dyn 246]
 27690: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 27695: 3a 07 60 00 03           a0 = u64 [0x30060]
 27700: 97 9a 0d                 a3 = a2 << 0xd
 27703: d3 a9 09                 a2 = a2 ^ a3
 27706: 98 9a 07                 a3 = a2 >> 0x7
 27709: d3 a9 09                 a2 = a2 ^ a3
 27712: 97 9a 11                 a3 = a2 << 0x11
 27715: d3 a9 09                 a2 = a2 ^ a3
 27718: ca 79 0a                 a3 = a2 * a0
 27721: 3a 0b 68 00 03           a4 = u64 [0x30068]
 27726: 3e 09 e0 00 03           u64 [0x300e0] = a2
 27731: 98 a9 03                 a2 = a3 >> 0x3
 27734: d6 b9 09                 a2 = a2 mulhu a4
 27737: 98 99 04                 a2 = a2 >> 0x4
 27740: 96 99 e8 03              a2 = a2 * 0x3e8
 27744: c9 9a 0a                 a3 = a3 - a2
 27747: 86 a9 01                 a2 = a3 | 0x1
 27750: 95 99 02                 a2 = a2 + 0x2
 27753: 7b 19 b0 00              u64 [sp + 0xb0] = a2
 27757: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 27762: 97 9a 0d                 a3 = a2 << 0xd
 27765: d3 a9 09                 a2 = a2 ^ a3
 27768: 98 9a 07                 a3 = a2 >> 0x7
 27771: d3 a9 09                 a2 = a2 ^ a3
 27774: 97 9a 11                 a3 = a2 << 0x11
 27777: d3 a9 09                 a2 = a2 ^ a3
 27780: 3e 09 e0 00 03           u64 [0x300e0] = a2
 27785: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 27789: 52 08 06                 jump @2033 if a1 != 0
      :                          @2032
 27792: 28 22 34                 jump @2555
      :                          @2033
 27795: ca 79 07                 a0 = a2 * a0
 27798: cd 87 07                 a0 = a0 %u a1
 27801: 7b 17 90 00              u64 [sp + 0x90] = a0
 27805: 50 20 ee 01 cf ce        ra = 494, jump @1174
      :                          @2034 [@dyn 247]
 27811: 7a 17 68 02              u32 [sp + 0x268] = a0
 27815: 95 17 90 00              a0 = sp + 0x90
 27819: 7b 17 50 01              u64 [sp + 0x150] = a0
 27823: 33 07 a8 03              a0 = 0x3a8
 27827: 7b 17 58 01              u64 [sp + 0x158] = a0
 27831: 95 17 b0 00              a0 = sp + 0xb0
 27835: 7b 17 60 01              u64 [sp + 0x160] = a0
 27839: 33 07 50 03              a0 = 0x350
 27843: 7b 17 68 01              u64 [sp + 0x168] = a0
 27847: 95 17 68 02              a0 = sp + 0x268
 27851: 7b 17 70 01              u64 [sp + 0x170] = a0
 27855: 33 07 a6 03              a0 = 0x3a6
 27859: 7b 17 78 01              u64 [sp + 0x178] = a0
 27863: 33 07 90 06 01           a0 = 0x10690
 27868: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 27872: 49 21 00 01 03           u64 [sp + 256] = 0x3
 27877: 49 21 18 01              u64 [sp + 280] = 0
 27881: 95 18 50 01              a1 = sp + 0x150
 27885: 7b 18 08 01              u64 [sp + 0x108] = a1
 27889: 49 21 10 01 03           u64 [sp + 272] = 0x3
 27894: 95 17 c8 00              a0 = sp + 0xc8
 27898: 95 18 f8 00              a1 = sp + 0xf8
 27902: 50 20 f0 01 c7 b2        ra = 496, jump @637
      :                          @2035 [@dyn 248]
 27908: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 27912: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 27916: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 27920: 33 07 02                 a0 = 0x2
 27923: 33 08                    a1 = 0
 27925: 33 09                    a2 = 0
 27927: 64 5a                    a3 = s0
 27929: 33 00 f2 01              ra = 0x1f2
 27933: 0a 64                    ecalli 100 // 'log'
 27935: 01                       fallthrough
      :                          @2036 [@dyn 249]
 27936: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 27941: 55 38 00 00 ff 09        jump @2038 if a1 >=u 4294901760
      :                          @2037
 27947: 28 6d 33                 jump @2553
      :                          @2038
 27950: 33 07 10 01 03           a0 = 0x30110
 27955: 95 77 00 00 01           a0 = a0 + 0x10000
 27960: 01                       fallthrough
      :                          @2039
 27961: 82 78                    a1 = u64 [a0]
 27963: c9 87 09                 a2 = a0 - a1
 27966: aa 59 06                 jump @2041 if a2 == s0
      :                          @2040
 27969: 28 57 33                 jump @2553
      :                          @2041
 27972: c9 68 09                 a2 = a1 - s1
 27975: 01                       fallthrough
      :                          @2042
 27976: 82 7a                    a3 = u64 [a0]
 27978: ab 8a ef                 jump @2039 if a3 != a1
      :                          @2043
 27981: 7b 79                    u64 [a0] = a2
 27983: 33 0b                    a4 = 0
 27985: 01                       fallthrough
      :                          @2044
 27986: ab 8a e7                 jump @2039 if a3 != a1
      :                          @2045
 27989: 28 43 33                 jump @2553
      :                          @2046 [@dyn 250]
 27992: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 27997: 97 89 0d                 a2 = a1 << 0xd
 28000: d3 98 08                 a1 = a1 ^ a2
 28003: 98 89 07                 a2 = a1 >> 0x7
 28006: d3 98 08                 a1 = a1 ^ a2
 28009: 97 89 11                 a2 = a1 << 0x11
 28012: d3 98 08                 a1 = a1 ^ a2
 28015: 3a 09 60 00 03           a2 = u64 [0x30060]
 28020: 3a 0a c0 00 03           a3 = u64 [0x300c0]
 28025: 3e 08 e0 00 03           u64 [0x300e0] = a1
 28030: ca 98 07                 a0 = a1 * a2
 28033: 98 78 01                 a1 = a0 >> 0x1
 28036: d6 a8 08                 a1 = a1 mulhu a3
 28039: 98 88 04                 a1 = a1 >> 0x4
 28042: 96 88 32                 a1 = a1 * 0x32
 28045: c9 87 07                 a0 = a0 - a1
 28048: 95 77 02                 a0 = a0 + 0x2
 28051: 7b 17 90 00              u64 [sp + 0x90] = a0
 28055: 50 20 f6 01 45 cf        ra = 502, jump @1203
      :                          @2047 [@dyn 251]
 28061: 78 17 b0 00              u8 [sp + 0xb0] = a0
 28065: 95 17 90 00              a0 = sp + 0x90
 28069: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 28073: 33 07 50 03              a0 = 0x350
 28077: 7b 17 00 01              u64 [sp + 0x100] = a0
 28081: 95 17 b0 00              a0 = sp + 0xb0
 28085: 7b 17 08 01              u64 [sp + 0x108] = a0
 28089: 33 07 9c 03              a0 = 0x39c
 28093: 7b 17 10 01              u64 [sp + 0x110] = a0
 28097: 33 07 e0 06 01           a0 = 0x106e0
 28102: 7b 17 50 01              u64 [sp + 0x150] = a0
 28106: 49 21 58 01 02           u64 [sp + 344] = 0x2
 28111: 49 21 70 01              u64 [sp + 368] = 0
 28115: 95 18 f8 00              a1 = sp + 0xf8
 28119: 7b 18 60 01              u64 [sp + 0x160] = a1
 28123: 49 21 68 01 02           u64 [sp + 360] = 0x2
 28128: 95 17 c8 00              a0 = sp + 0xc8
 28132: 95 18 50 01              a1 = sp + 0x150
 28136: 50 20 f8 01 dd b1        ra = 504, jump @637
      :                          @2048 [@dyn 252]
 28142: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 28146: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 28150: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 28154: 33 07 02                 a0 = 0x2
 28157: 33 08                    a1 = 0
 28159: 33 09                    a2 = 0
 28161: 64 5a                    a3 = s0
 28163: 33 00 fa 01              ra = 0x1fa
 28167: 0a 64                    ecalli 100 // 'log'
 28169: 01                       fallthrough
      :                          @2049 [@dyn 253]
 28170: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 28175: 55 38 00 00 ff 09        jump @2051 if a1 >=u 4294901760
      :                          @2050
 28181: 28 83 32                 jump @2553
      :                          @2051
 28184: 33 07 10 01 03           a0 = 0x30110
 28189: 95 77 00 00 01           a0 = a0 + 0x10000
 28194: 01                       fallthrough
      :                          @2052
 28195: 82 78                    a1 = u64 [a0]
 28197: c9 87 09                 a2 = a0 - a1
 28200: aa 59 06                 jump @2054 if a2 == s0
      :                          @2053
 28203: 28 6d 32                 jump @2553
      :                          @2054
 28206: c9 68 09                 a2 = a1 - s1
 28209: 01                       fallthrough
      :                          @2055
 28210: 82 7a                    a3 = u64 [a0]
 28212: ab 8a ef                 jump @2052 if a3 != a1
      :                          @2056
 28215: 7b 79                    u64 [a0] = a2
 28217: 33 0b                    a4 = 0
 28219: 01                       fallthrough
      :                          @2057
 28220: ab 8a e7                 jump @2052 if a3 != a1
      :                          @2058
 28223: 28 59 32                 jump @2553
      :                          @2059 [@dyn 254]
 28226: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 28231: 97 89 0d                 a2 = a1 << 0xd
 28234: d3 98 08                 a1 = a1 ^ a2
 28237: 98 89 07                 a2 = a1 >> 0x7
 28240: 3a 0a 60 00 03           a3 = u64 [0x30060]
 28245: d3 98 08                 a1 = a1 ^ a2
 28248: 97 89 11                 a2 = a1 << 0x11
 28251: d3 98 08                 a1 = a1 ^ a2
 28254: ca a8 09                 a2 = a1 * a3
 28257: 3e 08 e0 00 03           u64 [0x300e0] = a1
 28262: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
 28272: d6 89 08                 a1 = a2 mulhu a1
 28275: 98 88 04                 a1 = a1 >> 0x4
 28278: 96 88 14                 a1 = a1 * 0x14
 28281: c9 89 09                 a2 = a2 - a1
 28284: 7b 19 88 00              u64 [sp + 0x88] = a2
 28288: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 28293: 97 89 0d                 a2 = a1 << 0xd
 28296: d3 98 08                 a1 = a1 ^ a2
 28299: 98 89 07                 a2 = a1 >> 0x7
 28302: d3 98 08                 a1 = a1 ^ a2
 28305: 97 89 11                 a2 = a1 << 0x11
 28308: d3 98 08                 a1 = a1 ^ a2
 28311: ca a8 09                 a2 = a1 * a3
 28314: 3a 0a 98 00 03           a3 = u64 [0x30098]
 28319: 3e 08 e0 00 03           u64 [0x300e0] = a1
 28324: 98 97 02                 a0 = a2 >> 0x2
 28327: d6 a7 07                 a0 = a0 mulhu a3
 28330: 98 77 02                 a0 = a0 >> 0x2
 28333: 96 78 64                 a1 = a0 * 0x64
 28336: 82 17 88 00              a0 = u64 [sp + 0x88]
 28340: c9 89 09                 a2 = a2 - a1
 28343: 95 99 01                 a2 = a2 + 0x1
 28346: 7b 19 68 02              u64 [sp + 0x268] = a2
 28350: 33 08 01                 a1 = 0x1
 28353: 50 20 fe 01 4f ce        ra = 510, jump @1210
      :                          @2060 [@dyn 255]
 28359: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 28363: 7b 18 90 00              u64 [sp + 0x90] = a1
 28367: 95 17 88 00              a0 = sp + 0x88
 28371: 7b 17 50 01              u64 [sp + 0x150] = a0
 28375: 33 08 50 03              a1 = 0x350
 28379: 7b 18 58 01              u64 [sp + 0x158] = a1
 28383: 7b 17 60 01              u64 [sp + 0x160] = a0
 28387: 7b 18 68 01              u64 [sp + 0x168] = a1
 28391: 95 17 68 02              a0 = sp + 0x268
 28395: 7b 17 70 01              u64 [sp + 0x170] = a0
 28399: 33 07 a8 03              a0 = 0x3a8
 28403: 7b 17 78 01              u64 [sp + 0x178] = a0
 28407: 95 18 b0 00              a1 = sp + 0xb0
 28411: 7b 18 80 01              u64 [sp + 0x180] = a1
 28415: 7b 17 88 01              u64 [sp + 0x188] = a0
 28419: 95 18 90 00              a1 = sp + 0x90
 28423: 7b 18 90 01              u64 [sp + 0x190] = a1
 28427: 7b 17 98 01              u64 [sp + 0x198] = a0
 28431: 33 07 20 07 01           a0 = 0x10720
 28436: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 28440: 49 21 00 01 06           u64 [sp + 256] = 0x6
 28445: 49 21 18 01              u64 [sp + 280] = 0
 28449: 95 17 50 01              a0 = sp + 0x150
 28453: 7b 17 08 01              u64 [sp + 0x108] = a0
 28457: 49 21 10 01 05           u64 [sp + 272] = 0x5
 28462: 95 17 c8 00              a0 = sp + 0xc8
 28466: 95 18 f8 00              a1 = sp + 0xf8
 28470: 50 20 00 02 8f b0        ra = 512, jump @637
      :                          @2061 [@dyn 256]
 28476: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 28480: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 28484: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 28488: 33 07 02                 a0 = 0x2
 28491: 33 08                    a1 = 0
 28493: 33 09                    a2 = 0
 28495: 64 5a                    a3 = s0
 28497: 33 00 02 02              ra = 0x202
 28501: 0a 64                    ecalli 100 // 'log'
 28503: 01                       fallthrough
      :                          @2062 [@dyn 257]
 28504: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 28509: 55 38 00 00 ff 09        jump @2064 if a1 >=u 4294901760
      :                          @2063
 28515: 28 35 31                 jump @2553
      :                          @2064
 28518: 33 07 10 01 03           a0 = 0x30110
 28523: 95 77 00 00 01           a0 = a0 + 0x10000
 28528: 01                       fallthrough
      :                          @2065
 28529: 82 78                    a1 = u64 [a0]
 28531: c9 87 09                 a2 = a0 - a1
 28534: aa 59 06                 jump @2067 if a2 == s0
      :                          @2066
 28537: 28 1f 31                 jump @2553
      :                          @2067
 28540: c9 68 09                 a2 = a1 - s1
 28543: 01                       fallthrough
      :                          @2068
 28544: 82 7a                    a3 = u64 [a0]
 28546: ab 8a ef                 jump @2065 if a3 != a1
      :                          @2069
 28549: 7b 79                    u64 [a0] = a2
 28551: 33 0b                    a4 = 0
 28553: 01                       fallthrough
      :                          @2070
 28554: ab 8a e7                 jump @2065 if a3 != a1
      :                          @2071
 28557: 28 0b 31                 jump @2553
      :                          @2072 [@dyn 258]
 28560: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 28565: 97 89 0d                 a2 = a1 << 0xd
 28568: d3 98 08                 a1 = a1 ^ a2
 28571: 98 89 07                 a2 = a1 >> 0x7
 28574: d3 98 08                 a1 = a1 ^ a2
 28577: 97 89 11                 a2 = a1 << 0x11
 28580: d3 98 08                 a1 = a1 ^ a2
 28583: 3a 09 60 00 03           a2 = u64 [0x30060]
 28588: 3a 0a b8 00 03           a3 = u64 [0x300b8]
 28593: 3e 08 e0 00 03           u64 [0x300e0] = a1
 28598: ca 98 07                 a0 = a1 * a2
 28601: d6 a7 08                 a1 = a0 mulhu a3
 28604: 98 88 0b                 a1 = a1 >> 0xb
 28607: 96 88 10 27              a1 = a1 * 0x2710
 28611: c9 87 07                 a0 = a0 - a1
 28614: 86 77 01                 a0 = a0 | 0x1
 28617: 95 77 02                 a0 = a0 + 0x2
 28620: 7b 17 90 00              u64 [sp + 0x90] = a0
 28624: 50 20 06 02 d1 cd        ra = 518, jump @1217
      :                          @2073 [@dyn 259]
 28630: 78 17 b0 00              u8 [sp + 0xb0] = a0
 28634: 95 17 90 00              a0 = sp + 0x90
 28638: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 28642: 33 07 50 03              a0 = 0x350
 28646: 7b 17 00 01              u64 [sp + 0x100] = a0
 28650: 95 17 b0 00              a0 = sp + 0xb0
 28654: 7b 17 08 01              u64 [sp + 0x108] = a0
 28658: 33 07 9c 03              a0 = 0x39c
 28662: 7b 17 10 01              u64 [sp + 0x110] = a0
 28666: 33 07 90 07 01           a0 = 0x10790
 28671: 7b 17 50 01              u64 [sp + 0x150] = a0
 28675: 49 21 58 01 02           u64 [sp + 344] = 0x2
 28680: 49 21 70 01              u64 [sp + 368] = 0
 28684: 95 18 f8 00              a1 = sp + 0xf8
 28688: 7b 18 60 01              u64 [sp + 0x160] = a1
 28692: 49 21 68 01 02           u64 [sp + 360] = 0x2
 28697: 95 17 c8 00              a0 = sp + 0xc8
 28701: 95 18 50 01              a1 = sp + 0x150
 28705: 50 20 08 02 a4 af        ra = 520, jump @637
      :                          @2074 [@dyn 260]
 28711: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 28715: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 28719: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 28723: 33 07 02                 a0 = 0x2
 28726: 33 08                    a1 = 0
 28728: 33 09                    a2 = 0
 28730: 64 5a                    a3 = s0
 28732: 33 00 0a 02              ra = 0x20a
 28736: 0a 64                    ecalli 100 // 'log'
 28738: 01                       fallthrough
      :                          @2075 [@dyn 261]
 28739: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 28744: 55 38 00 00 ff 09        jump @2077 if a1 >=u 4294901760
      :                          @2076
 28750: 28 4a 30                 jump @2553
      :                          @2077
 28753: 33 07 10 01 03           a0 = 0x30110
 28758: 95 77 00 00 01           a0 = a0 + 0x10000
 28763: 01                       fallthrough
      :                          @2078
 28764: 82 78                    a1 = u64 [a0]
 28766: c9 87 09                 a2 = a0 - a1
 28769: aa 59 06                 jump @2080 if a2 == s0
      :                          @2079
 28772: 28 34 30                 jump @2553
      :                          @2080
 28775: c9 68 09                 a2 = a1 - s1
 28778: 01                       fallthrough
      :                          @2081
 28779: 82 7a                    a3 = u64 [a0]
 28781: ab 8a ef                 jump @2078 if a3 != a1
      :                          @2082
 28784: 7b 79                    u64 [a0] = a2
 28786: 33 0b                    a4 = 0
 28788: 01                       fallthrough
      :                          @2083
 28789: ab 8a e7                 jump @2078 if a3 != a1
      :                          @2084
 28792: 28 20 30                 jump @2553
      :                          @2085 [@dyn 262]
 28795: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 28800: 97 89 0d                 a2 = a1 << 0xd
 28803: d3 98 08                 a1 = a1 ^ a2
 28806: 98 89 07                 a2 = a1 >> 0x7
 28809: d3 98 08                 a1 = a1 ^ a2
 28812: 97 89 11                 a2 = a1 << 0x11
 28815: d3 98 08                 a1 = a1 ^ a2
 28818: 3a 09 60 00 03           a2 = u64 [0x30060]
 28823: 3a 0a a0 00 03           a3 = u64 [0x300a0]
 28828: 3e 08 e0 00 03           u64 [0x300e0] = a1
 28833: ca 98 07                 a0 = a1 * a2
 28836: d6 a7 08                 a1 = a0 mulhu a3
 28839: 98 88 12                 a1 = a1 >> 0x12
 28842: 96 88 40 42 0f           a1 = a1 * 0xf4240
 28847: c9 87 07                 a0 = a0 - a1
 28850: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 28854: 50 20 0e 02 6a d0        ra = 526, jump @1295
      :                          @2086 [@dyn 263]
 28860: 7b 17 90 00              u64 [sp + 0x90] = a0
 28864: 95 17 b0 00              a0 = sp + 0xb0
 28868: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 28872: 33 07 50 03              a0 = 0x350
 28876: 7b 17 00 01              u64 [sp + 0x100] = a0
 28880: 95 18 90 00              a1 = sp + 0x90
 28884: 7b 18 08 01              u64 [sp + 0x108] = a1
 28888: 7b 17 10 01              u64 [sp + 0x110] = a0
 28892: 33 07 c0 07 01           a0 = 0x107c0
 28897: 7b 17 50 01              u64 [sp + 0x150] = a0
 28901: 49 21 58 01 02           u64 [sp + 344] = 0x2
 28906: 49 21 70 01              u64 [sp + 368] = 0
 28910: 95 18 f8 00              a1 = sp + 0xf8
 28914: 7b 18 60 01              u64 [sp + 0x160] = a1
 28918: 49 21 68 01 02           u64 [sp + 360] = 0x2
 28923: 95 17 c8 00              a0 = sp + 0xc8
 28927: 95 18 50 01              a1 = sp + 0x150
 28931: 50 20 10 02 c2 ae        ra = 528, jump @637
      :                          @2087 [@dyn 264]
 28937: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 28941: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 28945: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 28949: 33 07 02                 a0 = 0x2
 28952: 33 08                    a1 = 0
 28954: 33 09                    a2 = 0
 28956: 64 5a                    a3 = s0
 28958: 33 00 12 02              ra = 0x212
 28962: 0a 64                    ecalli 100 // 'log'
 28964: 01                       fallthrough
      :                          @2088 [@dyn 265]
 28965: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 28970: 55 38 00 00 ff 09        jump @2090 if a1 >=u 4294901760
      :                          @2089
 28976: 28 68 2f                 jump @2553
      :                          @2090
 28979: 33 07 10 01 03           a0 = 0x30110
 28984: 95 77 00 00 01           a0 = a0 + 0x10000
 28989: 01                       fallthrough
      :                          @2091
 28990: 82 78                    a1 = u64 [a0]
 28992: c9 87 09                 a2 = a0 - a1
 28995: aa 59 06                 jump @2093 if a2 == s0
      :                          @2092
 28998: 28 52 2f                 jump @2553
      :                          @2093
 29001: c9 68 09                 a2 = a1 - s1
 29004: 01                       fallthrough
      :                          @2094
 29005: 82 7a                    a3 = u64 [a0]
 29007: ab 8a ef                 jump @2091 if a3 != a1
      :                          @2095
 29010: 7b 79                    u64 [a0] = a2
 29012: 33 0b                    a4 = 0
 29014: 01                       fallthrough
      :                          @2096
 29015: ab 8a e7                 jump @2091 if a3 != a1
      :                          @2097
 29018: 28 3e 2f                 jump @2553
      :                          @2098 [@dyn 266]
 29021: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 29026: 97 89 0d                 a2 = a1 << 0xd
 29029: d3 98 08                 a1 = a1 ^ a2
 29032: 98 89 07                 a2 = a1 >> 0x7
 29035: d3 89 09                 a2 = a2 ^ a1
 29038: 97 9a 11                 a3 = a2 << 0x11
 29041: 3a 08 60 00 03           a1 = u64 [0x30060]
 29046: d3 9a 0a                 a3 = a3 ^ a2
 29049: 3a 09 b0 00 03           a2 = u64 [0x300b0]
 29054: ca 8a 0b                 a4 = a3 * a1
 29057: 3e 0a e0 00 03           u64 [0x300e0] = a3
 29062: d6 9b 0a                 a3 = a4 mulhu a2
 29065: c9 ab 0c                 a5 = a4 - a3
 29068: 98 cc 01                 a5 = a5 >> 0x1
 29071: c8 ca 0a                 a3 = a3 + a5
 29074: 98 ac 06                 a5 = a3 >> 0x6
 29077: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 29082: 96 cc 65                 a5 = a5 * 0x65
 29085: c9 cb 0b                 a4 = a4 - a5
 29088: 7b 1b 10                 u64 [sp + 0x10] = a4
 29091: 97 6b 0d                 a4 = s1 << 0xd
 29094: d3 6b 0b                 a4 = a4 ^ s1
 29097: 98 bc 07                 a5 = a4 >> 0x7
 29100: d3 cb 0b                 a4 = a4 ^ a5
 29103: 97 bc 11                 a5 = a4 << 0x11
 29106: d3 cb 0b                 a4 = a4 ^ a5
 29109: ca 8b 06                 s1 = a4 * a1
 29112: 3e 0b e0 00 03           u64 [0x300e0] = a4
 29117: d6 96 0b                 a4 = s1 mulhu a2
 29120: c9 b6 0c                 a5 = s1 - a4
 29123: 98 cc 01                 a5 = a5 >> 0x1
 29126: c8 cb 0b                 a4 = a4 + a5
 29129: 98 bb 06                 a4 = a4 >> 0x6
 29132: 3a 0c e0 00 03           a5 = u64 [0x300e0]
 29137: 96 bb 65                 a4 = a4 * 0x65
 29140: c9 b6 06                 s1 = s1 - a4
 29143: 7b 16 08                 u64 [sp + 0x8] = s1
 29146: 97 cb 0d                 a4 = a5 << 0xd
 29149: d3 cb 0b                 a4 = a4 ^ a5
 29152: 98 bc 07                 a5 = a4 >> 0x7
 29155: d3 cb 0b                 a4 = a4 ^ a5
 29158: 97 bc 11                 a5 = a4 << 0x11
 29161: d3 cb 0b                 a4 = a4 ^ a5
 29164: ca 8b 06                 s1 = a4 * a1
 29167: 3e 0b e0 00 03           u64 [0x300e0] = a4
 29172: d6 96 0b                 a4 = s1 mulhu a2
 29175: c9 b6 0c                 a5 = s1 - a4
 29178: 98 cc 01                 a5 = a5 >> 0x1
 29181: c8 cb 0b                 a4 = a4 + a5
 29184: 98 bb 06                 a4 = a4 >> 0x6
 29187: 3a 0c e0 00 03           a5 = u64 [0x300e0]
 29192: 96 bb 65                 a4 = a4 * 0x65
 29195: c9 b6 04                 t2 = s1 - a4
 29198: 97 cb 0d                 a4 = a5 << 0xd
 29201: d3 cb 0b                 a4 = a4 ^ a5
 29204: 98 bc 07                 a5 = a4 >> 0x7
 29207: d3 cb 0b                 a4 = a4 ^ a5
 29210: 97 bc 11                 a5 = a4 << 0x11
 29213: d3 cb 0b                 a4 = a4 ^ a5
 29216: ca 8b 0c                 a5 = a4 * a1
 29219: 3e 0b e0 00 03           u64 [0x300e0] = a4
 29224: d6 9c 0b                 a4 = a5 mulhu a2
 29227: c9 bc 05                 s0 = a5 - a4
 29230: 98 55 01                 s0 = s0 >> 0x1
 29233: c8 5b 0b                 a4 = a4 + s0
 29236: 98 bb 06                 a4 = a4 >> 0x6
 29239: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 29244: 96 bb 65                 a4 = a4 * 0x65
 29247: c9 bc 00                 ra = a5 - a4
 29250: 97 6b 0d                 a4 = s1 << 0xd
 29253: d3 6b 0b                 a4 = a4 ^ s1
 29256: 98 bc 07                 a5 = a4 >> 0x7
 29259: d3 cb 0b                 a4 = a4 ^ a5
 29262: 97 bc 11                 a5 = a4 << 0x11
 29265: d3 cb 0b                 a4 = a4 ^ a5
 29268: ca 8b 0c                 a5 = a4 * a1
 29271: 3e 0b e0 00 03           u64 [0x300e0] = a4
 29276: d6 9c 0b                 a4 = a5 mulhu a2
 29279: c9 bc 06                 s1 = a5 - a4
 29282: 98 66 01                 s1 = s1 >> 0x1
 29285: c8 6b 0b                 a4 = a4 + s1
 29288: 98 bb 06                 a4 = a4 >> 0x6
 29291: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 29296: 96 bb 65                 a4 = a4 * 0x65
 29299: c9 bc 0b                 a4 = a5 - a4
 29302: 97 6c 0d                 a5 = s1 << 0xd
 29305: d3 6c 0c                 a5 = a5 ^ s1
 29308: 98 c6 07                 s1 = a5 >> 0x7
 29311: d3 6c 0c                 a5 = a5 ^ s1
 29314: 97 c6 11                 s1 = a5 << 0x11
 29317: d3 6c 0c                 a5 = a5 ^ s1
 29320: ca 8c 05                 s0 = a5 * a1
 29323: 3e 0c e0 00 03           u64 [0x300e0] = a5
 29328: d6 95 0c                 a5 = s0 mulhu a2
 29331: c9 c5 06                 s1 = s0 - a5
 29334: 98 66 01                 s1 = s1 >> 0x1
 29337: c8 6c 0c                 a5 = a5 + s1
 29340: 98 cc 06                 a5 = a5 >> 0x6
 29343: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 29348: 96 cc 65                 a5 = a5 * 0x65
 29351: c9 c5 0c                 a5 = s0 - a5
 29354: 97 65 0d                 s0 = s1 << 0xd
 29357: d3 65 05                 s0 = s0 ^ s1
 29360: 98 56 07                 s1 = s0 >> 0x7
 29363: d3 65 05                 s0 = s0 ^ s1
 29366: 97 56 11                 s1 = s0 << 0x11
 29369: d3 65 05                 s0 = s0 ^ s1
 29372: ca 85 07                 a0 = s0 * a1
 29375: 3e 05 e0 00 03           u64 [0x300e0] = s0
 29380: d6 97 05                 s0 = a0 mulhu a2
 29383: c9 57 06                 s1 = a0 - s0
 29386: 98 66 01                 s1 = s1 >> 0x1
 29389: c8 65 05                 s0 = s0 + s1
 29392: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 29397: 98 55 06                 s0 = s0 >> 0x6
 29400: 96 55 65                 s0 = s0 * 0x65
 29403: c9 57 0a                 a3 = a0 - s0
 29406: 97 65 0d                 s0 = s1 << 0xd
 29409: d3 65 05                 s0 = s0 ^ s1
 29412: 98 56 07                 s1 = s0 >> 0x7
 29415: d3 65 05                 s0 = s0 ^ s1
 29418: 97 56 11                 s1 = s0 << 0x11
 29421: d3 65 05                 s0 = s0 ^ s1
 29424: 3e 05 e0 00 03           u64 [0x300e0] = s0
 29429: ca 85 07                 a0 = s0 * a1
 29432: d6 97 06                 s1 = a0 mulhu a2
 29435: c9 67 05                 s0 = a0 - s1
 29438: 98 55 01                 s0 = s0 >> 0x1
 29441: c8 65 05                 s0 = s0 + s1
 29444: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 29449: 98 55 06                 s0 = s0 >> 0x6
 29452: 96 55 65                 s0 = s0 * 0x65
 29455: c9 57 07                 a0 = a0 - s0
 29458: 97 65 0d                 s0 = s1 << 0xd
 29461: d3 65 05                 s0 = s0 ^ s1
 29464: 98 56 07                 s1 = s0 >> 0x7
 29467: d3 65 05                 s0 = s0 ^ s1
 29470: 97 56 11                 s1 = s0 << 0x11
 29473: d3 65 05                 s0 = s0 ^ s1
 29476: 3e 05 e0 00 03           u64 [0x300e0] = s0
 29481: ca 85 06                 s1 = s0 * a1
 29484: d6 96 09                 a2 = s1 mulhu a2
 29487: c9 96 08                 a1 = s1 - a2
 29490: 98 88 01                 a1 = a1 >> 0x1
 29493: c8 98 08                 a1 = a1 + a2
 29496: 98 88 06                 a1 = a1 >> 0x6
 29499: 96 88 65                 a1 = a1 * 0x65
 29502: c9 86 06                 s1 = s1 - a1
 29505: 82 18 10                 a1 = u64 [sp + 0x10]
 29508: 95 88 ce                 a1 = a1 + 0xffffffffffffffce
 29511: 7b 18 50 01              u64 [sp + 0x150] = a1
 29515: 82 18 08                 a1 = u64 [sp + 0x8]
 29518: 95 88 ce                 a1 = a1 + 0xffffffffffffffce
 29521: 7b 18 58 01              u64 [sp + 0x158] = a1
 29525: 95 48 ce                 a1 = t2 + 0xffffffffffffffce
 29528: 7b 18 60 01              u64 [sp + 0x160] = a1
 29532: 95 08 ce                 a1 = ra + 0xffffffffffffffce
 29535: 7b 18 68 01              u64 [sp + 0x168] = a1
 29539: 95 b8 ce                 a1 = a4 + 0xffffffffffffffce
 29542: 7b 18 70 01              u64 [sp + 0x170] = a1
 29546: 95 c8 ce                 a1 = a5 + 0xffffffffffffffce
 29549: 7b 18 78 01              u64 [sp + 0x178] = a1
 29553: 95 a8 ce                 a1 = a3 + 0xffffffffffffffce
 29556: 7b 18 80 01              u64 [sp + 0x180] = a1
 29560: 95 77 ce                 a0 = a0 + 0xffffffffffffffce
 29563: 7b 17 88 01              u64 [sp + 0x188] = a0
 29567: 95 67 ce                 a0 = s1 + 0xffffffffffffffce
 29570: 7b 17 90 01              u64 [sp + 0x190] = a0
 29574: 95 17 50 01              a0 = sp + 0x150
 29578: 28 b6 cd                 jump @1302
      :                          @2099
 29581: 7b 17 90 00              u64 [sp + 0x90] = a0
 29585: 95 17 90 00              a0 = sp + 0x90
 29589: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 29593: 33 07 a8 03              a0 = 0x3a8
 29597: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 29601: 33 07 f8 07 01           a0 = 0x107f8
 29606: 7b 17 50 01              u64 [sp + 0x150] = a0
 29610: 49 21 58 01 01           u64 [sp + 344] = 0x1
 29615: 49 21 70 01              u64 [sp + 368] = 0
 29619: 95 18 c8 00              a1 = sp + 0xc8
 29623: 7b 18 60 01              u64 [sp + 0x160] = a1
 29627: 49 21 68 01 01           u64 [sp + 360] = 0x1
 29632: 95 17 f8 00              a0 = sp + 0xf8
 29636: 95 18 50 01              a1 = sp + 0x150
 29640: 50 20 16 02 fd ab        ra = 534, jump @637
      :                          @2100 [@dyn 267]
 29646: 82 15 00 01              s0 = u64 [sp + 0x100]
 29650: 82 1b 08 01              a4 = u64 [sp + 0x108]
 29654: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 29658: 33 07 02                 a0 = 0x2
 29661: 33 08                    a1 = 0
 29663: 33 09                    a2 = 0
 29665: 64 5a                    a3 = s0
 29667: 33 00 18 02              ra = 0x218
 29671: 0a 64                    ecalli 100 // 'log'
 29673: 01                       fallthrough
      :                          @2101 [@dyn 268]
 29674: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 29679: 55 38 00 00 ff 09        jump @2103 if a1 >=u 4294901760
      :                          @2102
 29685: 28 a3 2c                 jump @2553
      :                          @2103
 29688: 33 07 10 01 03           a0 = 0x30110
 29693: 95 77 00 00 01           a0 = a0 + 0x10000
 29698: 01                       fallthrough
      :                          @2104
 29699: 82 78                    a1 = u64 [a0]
 29701: c9 87 09                 a2 = a0 - a1
 29704: aa 59 06                 jump @2106 if a2 == s0
      :                          @2105
 29707: 28 8d 2c                 jump @2553
      :                          @2106
 29710: c9 68 09                 a2 = a1 - s1
 29713: 01                       fallthrough
      :                          @2107
 29714: 82 7a                    a3 = u64 [a0]
 29716: ab 8a ef                 jump @2104 if a3 != a1
      :                          @2108
 29719: 7b 79                    u64 [a0] = a2
 29721: 33 0b                    a4 = 0
 29723: 01                       fallthrough
      :                          @2109
 29724: ab 8a e7                 jump @2104 if a3 != a1
      :                          @2110
 29727: 28 79 2c                 jump @2553
      :                          @2111 [@dyn 269]
 29730: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 29735: 97 89 0d                 a2 = a1 << 0xd
 29738: d3 98 08                 a1 = a1 ^ a2
 29741: 98 89 07                 a2 = a1 >> 0x7
 29744: d3 89 09                 a2 = a2 ^ a1
 29747: 97 9a 11                 a3 = a2 << 0x11
 29750: 3a 08 60 00 03           a1 = u64 [0x30060]
 29755: d3 9a 0a                 a3 = a3 ^ a2
 29758: 3a 09 b0 00 03           a2 = u64 [0x300b0]
 29763: ca 8a 0b                 a4 = a3 * a1
 29766: 3e 0a e0 00 03           u64 [0x300e0] = a3
 29771: d6 9b 0a                 a3 = a4 mulhu a2
 29774: c9 ab 0c                 a5 = a4 - a3
 29777: 98 cc 01                 a5 = a5 >> 0x1
 29780: c8 ca 0a                 a3 = a3 + a5
 29783: 98 ac 06                 a5 = a3 >> 0x6
 29786: 33 03 65                 t1 = 0x65
 29789: ca 3c 0c                 a5 = a5 * t1
 29792: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 29797: c9 cb 0b                 a4 = a4 - a5
 29800: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
 29803: 97 6c 0d                 a5 = s1 << 0xd
 29806: d3 c6 06                 s1 = s1 ^ a5
 29809: 98 6c 07                 a5 = s1 >> 0x7
 29812: d3 c6 06                 s1 = s1 ^ a5
 29815: 97 6c 11                 a5 = s1 << 0x11
 29818: d3 6c 0c                 a5 = a5 ^ s1
 29821: ca 8c 05                 s0 = a5 * a1
 29824: 3e 0c e0 00 03           u64 [0x300e0] = a5
 29829: d6 95 0c                 a5 = s0 mulhu a2
 29832: c9 c5 06                 s1 = s0 - a5
 29835: 98 66 01                 s1 = s1 >> 0x1
 29838: c8 6c 0c                 a5 = a5 + s1
 29841: 98 cc 06                 a5 = a5 >> 0x6
 29844: ca 3c 0c                 a5 = a5 * t1
 29847: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 29852: c9 c5 05                 s0 = s0 - a5
 29855: 95 5c ce                 a5 = s0 + 0xffffffffffffffce
 29858: 97 b6 0d                 s1 = a4 << 0xd
 29861: d3 b6 06                 s1 = s1 ^ a4
 29864: 98 6b 07                 a4 = s1 >> 0x7
 29867: d3 b6 06                 s1 = s1 ^ a4
 29870: 97 6b 11                 a4 = s1 << 0x11
 29873: d3 6b 0b                 a4 = a4 ^ s1
 29876: ca 8b 05                 s0 = a4 * a1
 29879: 3e 0b e0 00 03           u64 [0x300e0] = a4
 29884: d6 95 0b                 a4 = s0 mulhu a2
 29887: c9 b5 06                 s1 = s0 - a4
 29890: 98 66 01                 s1 = s1 >> 0x1
 29893: c8 6b 0b                 a4 = a4 + s1
 29896: 98 bb 06                 a4 = a4 >> 0x6
 29899: ca 3b 0b                 a4 = a4 * t1
 29902: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 29907: c9 b5 05                 s0 = s0 - a4
 29910: 95 5b ce                 a4 = s0 + 0xffffffffffffffce
 29913: 97 a6 0d                 s1 = a3 << 0xd
 29916: d3 a6 06                 s1 = s1 ^ a3
 29919: 98 6a 07                 a3 = s1 >> 0x7
 29922: d3 a6 06                 s1 = s1 ^ a3
 29925: 97 6a 11                 a3 = s1 << 0x11
 29928: d3 6a 0a                 a3 = a3 ^ s1
 29931: ca 8a 08                 a1 = a3 * a1
 29934: 3e 0a e0 00 03           u64 [0x300e0] = a3
 29939: d6 98 07                 a0 = a1 mulhu a2
 29942: c9 78 09                 a2 = a1 - a0
 29945: 98 99 01                 a2 = a2 >> 0x1
 29948: c8 97 07                 a0 = a0 + a2
 29951: 98 77 06                 a0 = a0 >> 0x6
 29954: ca 37 07                 a0 = a0 * t1
 29957: c9 78 08                 a1 = a1 - a0
 29960: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
 29963: 7b 1c 48                 u64 [sp + 0x48] = a5
 29966: 7b 12 40                 u64 [sp + 0x40] = t0
 29969: 7b 1b 50                 u64 [sp + 0x50] = a4
 29972: 7b 17 58                 u64 [sp + 0x58] = a0
 29975: 95 17 40                 a0 = sp + 0x40
 29978: 50 20 1c 02 dd cc        ra = 540, jump @1310
      :                          @2112 [@dyn 270]
 29984: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 29988: 7b 18 90 00              u64 [sp + 0x90] = a1
 29992: 95 17 b0 00              a0 = sp + 0xb0
 29996: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 30000: 33 07 a8 03              a0 = 0x3a8
 30004: 7b 17 00 01              u64 [sp + 0x100] = a0
 30008: 95 18 90 00              a1 = sp + 0x90
 30012: 7b 18 08 01              u64 [sp + 0x108] = a1
 30016: 7b 17 10 01              u64 [sp + 0x110] = a0
 30020: 33 07 28 08 01           a0 = 0x10828
 30025: 7b 17 50 01              u64 [sp + 0x150] = a0
 30029: 49 21 58 01 03           u64 [sp + 344] = 0x3
 30034: 49 21 70 01              u64 [sp + 368] = 0
 30038: 95 17 f8 00              a0 = sp + 0xf8
 30042: 7b 17 60 01              u64 [sp + 0x160] = a0
 30046: 49 21 68 01 02           u64 [sp + 360] = 0x2
 30051: 95 17 c8 00              a0 = sp + 0xc8
 30055: 95 18 50 01              a1 = sp + 0x150
 30059: 50 20 1e 02 5a aa        ra = 542, jump @637
      :                          @2113 [@dyn 271]
 30065: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 30069: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 30073: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 30077: 33 07 02                 a0 = 0x2
 30080: 33 08                    a1 = 0
 30082: 33 09                    a2 = 0
 30084: 64 5a                    a3 = s0
 30086: 33 00 20 02              ra = 0x220
 30090: 0a 64                    ecalli 100 // 'log'
 30092: 01                       fallthrough
      :                          @2114 [@dyn 272]
 30093: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 30098: 55 38 00 00 ff 09        jump @2116 if a1 >=u 4294901760
      :                          @2115
 30104: 28 00 2b                 jump @2553
      :                          @2116
 30107: 33 07 10 01 03           a0 = 0x30110
 30112: 95 77 00 00 01           a0 = a0 + 0x10000
 30117: 01                       fallthrough
      :                          @2117
 30118: 82 78                    a1 = u64 [a0]
 30120: c9 87 09                 a2 = a0 - a1
 30123: aa 59 06                 jump @2119 if a2 == s0
      :                          @2118
 30126: 28 ea 2a                 jump @2553
      :                          @2119
 30129: c9 68 09                 a2 = a1 - s1
 30132: 01                       fallthrough
      :                          @2120
 30133: 82 7a                    a3 = u64 [a0]
 30135: ab 8a ef                 jump @2117 if a3 != a1
      :                          @2121
 30138: 7b 79                    u64 [a0] = a2
 30140: 33 0b                    a4 = 0
 30142: 01                       fallthrough
      :                          @2122
 30143: ab 8a e7                 jump @2117 if a3 != a1
      :                          @2123
 30146: 28 d6 2a                 jump @2553
      :                          @2124 [@dyn 273]
 30149: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 30154: 97 89 0d                 a2 = a1 << 0xd
 30157: d3 98 08                 a1 = a1 ^ a2
 30160: 98 89 07                 a2 = a1 >> 0x7
 30163: d3 89 09                 a2 = a2 ^ a1
 30166: 97 9a 11                 a3 = a2 << 0x11
 30169: 3a 08 60 00 03           a1 = u64 [0x30060]
 30174: d3 9a 0a                 a3 = a3 ^ a2
 30177: 3a 09 b0 00 03           a2 = u64 [0x300b0]
 30182: ca 8a 0b                 a4 = a3 * a1
 30185: 3e 0a e0 00 03           u64 [0x300e0] = a3
 30190: d6 9b 0a                 a3 = a4 mulhu a2
 30193: c9 ab 0c                 a5 = a4 - a3
 30196: 98 cc 01                 a5 = a5 >> 0x1
 30199: c8 ca 0a                 a3 = a3 + a5
 30202: 98 ac 06                 a5 = a3 >> 0x6
 30205: 33 03 65                 t1 = 0x65
 30208: ca 3c 0c                 a5 = a5 * t1
 30211: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 30216: c9 cb 0b                 a4 = a4 - a5
 30219: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
 30222: 97 6c 0d                 a5 = s1 << 0xd
 30225: d3 c6 06                 s1 = s1 ^ a5
 30228: 98 6c 07                 a5 = s1 >> 0x7
 30231: d3 c6 06                 s1 = s1 ^ a5
 30234: 97 6c 11                 a5 = s1 << 0x11
 30237: d3 6c 0c                 a5 = a5 ^ s1
 30240: ca 8c 05                 s0 = a5 * a1
 30243: 3e 0c e0 00 03           u64 [0x300e0] = a5
 30248: d6 95 0c                 a5 = s0 mulhu a2
 30251: c9 c5 06                 s1 = s0 - a5
 30254: 98 66 01                 s1 = s1 >> 0x1
 30257: c8 6c 0c                 a5 = a5 + s1
 30260: 98 cc 06                 a5 = a5 >> 0x6
 30263: ca 3c 0c                 a5 = a5 * t1
 30266: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 30271: c9 c5 05                 s0 = s0 - a5
 30274: 95 5c ce                 a5 = s0 + 0xffffffffffffffce
 30277: 97 b6 0d                 s1 = a4 << 0xd
 30280: d3 b6 06                 s1 = s1 ^ a4
 30283: 98 6b 07                 a4 = s1 >> 0x7
 30286: d3 b6 06                 s1 = s1 ^ a4
 30289: 97 6b 11                 a4 = s1 << 0x11
 30292: d3 6b 0b                 a4 = a4 ^ s1
 30295: ca 8b 05                 s0 = a4 * a1
 30298: 3e 0b e0 00 03           u64 [0x300e0] = a4
 30303: d6 95 0b                 a4 = s0 mulhu a2
 30306: c9 b5 06                 s1 = s0 - a4
 30309: 98 66 01                 s1 = s1 >> 0x1
 30312: c8 6b 0b                 a4 = a4 + s1
 30315: 98 bb 06                 a4 = a4 >> 0x6
 30318: ca 3b 0b                 a4 = a4 * t1
 30321: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 30326: c9 b5 05                 s0 = s0 - a4
 30329: 95 5b ce                 a4 = s0 + 0xffffffffffffffce
 30332: 97 a6 0d                 s1 = a3 << 0xd
 30335: d3 a6 06                 s1 = s1 ^ a3
 30338: 98 6a 07                 a3 = s1 >> 0x7
 30341: d3 a6 06                 s1 = s1 ^ a3
 30344: 97 6a 11                 a3 = s1 << 0x11
 30347: d3 6a 0a                 a3 = a3 ^ s1
 30350: ca 8a 08                 a1 = a3 * a1
 30353: 3e 0a e0 00 03           u64 [0x300e0] = a3
 30358: d6 98 07                 a0 = a1 mulhu a2
 30361: c9 78 09                 a2 = a1 - a0
 30364: 98 99 01                 a2 = a2 >> 0x1
 30367: c8 97 07                 a0 = a0 + a2
 30370: 98 77 06                 a0 = a0 >> 0x6
 30373: ca 37 07                 a0 = a0 * t1
 30376: c9 78 08                 a1 = a1 - a0
 30379: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
 30382: 7b 1c 68                 u64 [sp + 0x68] = a5
 30385: 7b 12 60                 u64 [sp + 0x60] = t0
 30388: 7b 1b 70                 u64 [sp + 0x70] = a4
 30391: 7b 17 78                 u64 [sp + 0x78] = a0
 30394: 95 17 c8 00              a0 = sp + 0xc8
 30398: 95 18 60                 a1 = sp + 0x60
 30401: 95 15 c8 00              s0 = sp + 0xc8
 30405: 50 20 24 02 a3 cb        ra = 548, jump @1325
      :                          @2125 [@dyn 274]
 30411: 95 17 d0 00              a0 = sp + 0xd0
 30415: 95 18 d8 00              a1 = sp + 0xd8
 30419: 95 19 e0 00              a2 = sp + 0xe0
 30423: 7b 15 50 01              u64 [sp + 0x150] = s0
 30427: 33 0a a8 03              a3 = 0x3a8
 30431: 7b 1a 58 01              u64 [sp + 0x158] = a3
 30435: 7b 17 60 01              u64 [sp + 0x160] = a0
 30439: 7b 1a 68 01              u64 [sp + 0x168] = a3
 30443: 7b 18 70 01              u64 [sp + 0x170] = a1
 30447: 7b 1a 78 01              u64 [sp + 0x178] = a3
 30451: 7b 19 80 01              u64 [sp + 0x180] = a2
 30455: 7b 1a 88 01              u64 [sp + 0x188] = a3
 30459: 33 07 80 08 01           a0 = 0x10880
 30464: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 30468: 49 21 00 01 05           u64 [sp + 256] = 0x5
 30473: 49 21 18 01              u64 [sp + 280] = 0
 30477: 95 17 50 01              a0 = sp + 0x150
 30481: 7b 17 08 01              u64 [sp + 0x108] = a0
 30485: 49 21 10 01 04           u64 [sp + 272] = 0x4
 30490: 95 17 90 00              a0 = sp + 0x90
 30494: 95 18 f8 00              a1 = sp + 0xf8
 30498: 50 20 26 02 a3 a8        ra = 550, jump @637
      :                          @2126 [@dyn 275]
 30504: 82 15 98 00              s0 = u64 [sp + 0x98]
 30508: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 30512: 82 16 90 00              s1 = u64 [sp + 0x90]
 30516: 33 07 02                 a0 = 0x2
 30519: 33 08                    a1 = 0
 30521: 33 09                    a2 = 0
 30523: 64 5a                    a3 = s0
 30525: 33 00 28 02              ra = 0x228
 30529: 0a 64                    ecalli 100 // 'log'
 30531: 01                       fallthrough
      :                          @2127 [@dyn 276]
 30532: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 30537: 55 38 00 00 ff 09        jump @2129 if a1 >=u 4294901760
      :                          @2128
 30543: 28 49 29                 jump @2553
      :                          @2129
 30546: 33 07 10 01 03           a0 = 0x30110
 30551: 95 77 00 00 01           a0 = a0 + 0x10000
 30556: 01                       fallthrough
      :                          @2130
 30557: 82 78                    a1 = u64 [a0]
 30559: c9 87 09                 a2 = a0 - a1
 30562: aa 59 06                 jump @2132 if a2 == s0
      :                          @2131
 30565: 28 33 29                 jump @2553
      :                          @2132
 30568: c9 68 09                 a2 = a1 - s1
 30571: 01                       fallthrough
      :                          @2133
 30572: 82 7a                    a3 = u64 [a0]
 30574: ab 8a ef                 jump @2130 if a3 != a1
      :                          @2134
 30577: 7b 79                    u64 [a0] = a2
 30579: 33 0b                    a4 = 0
 30581: 01                       fallthrough
      :                          @2135
 30582: ab 8a e7                 jump @2130 if a3 != a1
      :                          @2136
 30585: 28 1f 29                 jump @2553
      :                          @2137 [@dyn 277]
 30588: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 30593: 97 89 0d                 a2 = a1 << 0xd
 30596: d3 98 08                 a1 = a1 ^ a2
 30599: 98 89 07                 a2 = a1 >> 0x7
 30602: d3 98 08                 a1 = a1 ^ a2
 30605: 97 89 11                 a2 = a1 << 0x11
 30608: 3a 0b 60 00 03           a4 = u64 [0x30060]
 30613: d3 98 08                 a1 = a1 ^ a2
 30616: 3a 0c b0 00 03           a5 = u64 [0x300b0]
 30621: ca b8 09                 a2 = a1 * a4
 30624: 3e 08 e0 00 03           u64 [0x300e0] = a1
 30629: d6 c9 08                 a1 = a2 mulhu a5
 30632: c9 89 0a                 a3 = a2 - a1
 30635: 98 aa 01                 a3 = a3 >> 0x1
 30638: c8 a8 08                 a1 = a1 + a3
 30641: 98 88 06                 a1 = a1 >> 0x6
 30644: 96 88 65                 a1 = a1 * 0x65
 30647: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 30652: c9 89 09                 a2 = a2 - a1
 30655: 95 98 ce                 a1 = a2 + 0xffffffffffffffce
 30658: 97 a9 0d                 a2 = a3 << 0xd
 30661: d3 a9 09                 a2 = a2 ^ a3
 30664: 98 9a 07                 a3 = a2 >> 0x7
 30667: d3 a9 09                 a2 = a2 ^ a3
 30670: 97 9a 11                 a3 = a2 << 0x11
 30673: d3 a9 09                 a2 = a2 ^ a3
 30676: ca b9 05                 s0 = a2 * a4
 30679: 3e 09 e0 00 03           u64 [0x300e0] = a2
 30684: d6 c5 09                 a2 = s0 mulhu a5
 30687: c9 95 0a                 a3 = s0 - a2
 30690: 98 aa 01                 a3 = a3 >> 0x1
 30693: c8 a9 09                 a2 = a2 + a3
 30696: 98 99 06                 a2 = a2 >> 0x6
 30699: 96 99 65                 a2 = a2 * 0x65
 30702: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 30707: c9 95 05                 s0 = s0 - a2
 30710: 95 59 ce                 a2 = s0 + 0xffffffffffffffce
 30713: 97 6a 0d                 a3 = s1 << 0xd
 30716: d3 a6 06                 s1 = s1 ^ a3
 30719: 98 6a 07                 a3 = s1 >> 0x7
 30722: d3 a6 06                 s1 = s1 ^ a3
 30725: 97 6a 11                 a3 = s1 << 0x11
 30728: d3 6a 0a                 a3 = a3 ^ s1
 30731: ca ba 05                 s0 = a3 * a4
 30734: 3e 0a e0 00 03           u64 [0x300e0] = a3
 30739: d6 c5 0a                 a3 = s0 mulhu a5
 30742: c9 a5 06                 s1 = s0 - a3
 30745: 98 66 01                 s1 = s1 >> 0x1
 30748: c8 6a 0a                 a3 = a3 + s1
 30751: 98 aa 06                 a3 = a3 >> 0x6
 30754: 96 aa 65                 a3 = a3 * 0x65
 30757: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 30762: c9 a5 05                 s0 = s0 - a3
 30765: 95 5a ce                 a3 = s0 + 0xffffffffffffffce
 30768: 97 76 0d                 s1 = a0 << 0xd
 30771: d3 76 06                 s1 = s1 ^ a0
 30774: 98 67 07                 a0 = s1 >> 0x7
 30777: d3 76 06                 s1 = s1 ^ a0
 30780: 97 67 11                 a0 = s1 << 0x11
 30783: d3 67 07                 a0 = a0 ^ s1
 30786: ca b7 0b                 a4 = a0 * a4
 30789: 3e 07 e0 00 03           u64 [0x300e0] = a0
 30794: d6 cb 07                 a0 = a4 mulhu a5
 30797: c9 7b 0c                 a5 = a4 - a0
 30800: 98 cc 01                 a5 = a5 >> 0x1
 30803: c8 c7 07                 a0 = a0 + a5
 30806: 98 77 06                 a0 = a0 >> 0x6
 30809: 96 77 65                 a0 = a0 * 0x65
 30812: c9 7b 0b                 a4 = a4 - a0
 30815: 95 bb ce                 a4 = a4 + 0xffffffffffffffce
 30818: 95 17 50 01              a0 = sp + 0x150
 30822: 50 20 2c 02 c6 ca        ra = 556, jump @1338
      :                          @2138 [@dyn 278]
 30828: 82 17 50 01              a0 = u64 [sp + 0x150]
 30832: 82 18 58 01              a1 = u64 [sp + 0x158]
 30836: 82 19 60 01              a2 = u64 [sp + 0x160]
 30840: 82 1a 68 01              a3 = u64 [sp + 0x168]
 30844: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 30848: 7b 18 b8 00              u64 [sp + 0xb8] = a1
 30852: 7b 19 90 00              u64 [sp + 0x90] = a2
 30856: 7b 1a 98 00              u64 [sp + 0x98] = a3
 30860: 95 17 b0 00              a0 = sp + 0xb0
 30864: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 30868: 33 07 d6 00              a0 = 0xd6
 30872: 7b 17 00 01              u64 [sp + 0x100] = a0
 30876: 95 18 90 00              a1 = sp + 0x90
 30880: 7b 18 08 01              u64 [sp + 0x108] = a1
 30884: 7b 17 10 01              u64 [sp + 0x110] = a0
 30888: 33 07 e8 08 01           a0 = 0x108e8
 30893: 7b 17 50 01              u64 [sp + 0x150] = a0
 30897: 49 21 58 01 02           u64 [sp + 344] = 0x2
 30902: 49 21 70 01              u64 [sp + 368] = 0
 30906: 95 18 f8 00              a1 = sp + 0xf8
 30910: 7b 18 60 01              u64 [sp + 0x160] = a1
 30914: 49 21 68 01 02           u64 [sp + 360] = 0x2
 30919: 95 17 c8 00              a0 = sp + 0xc8
 30923: 95 18 50 01              a1 = sp + 0x150
 30927: 50 20 2e 02 f6 a6        ra = 558, jump @637
      :                          @2139 [@dyn 279]
 30933: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 30937: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 30941: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 30945: 33 07 02                 a0 = 0x2
 30948: 33 08                    a1 = 0
 30950: 33 09                    a2 = 0
 30952: 64 5a                    a3 = s0
 30954: 33 00 30 02              ra = 0x230
 30958: 0a 64                    ecalli 100 // 'log'
 30960: 01                       fallthrough
      :                          @2140 [@dyn 280]
 30961: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 30966: 55 38 00 00 ff 09        jump @2142 if a1 >=u 4294901760
      :                          @2141
 30972: 28 9c 27                 jump @2553
      :                          @2142
 30975: 33 07 10 01 03           a0 = 0x30110
 30980: 95 77 00 00 01           a0 = a0 + 0x10000
 30985: 01                       fallthrough
      :                          @2143
 30986: 82 78                    a1 = u64 [a0]
 30988: c9 87 09                 a2 = a0 - a1
 30991: aa 59 06                 jump @2145 if a2 == s0
      :                          @2144
 30994: 28 86 27                 jump @2553
      :                          @2145
 30997: c9 68 09                 a2 = a1 - s1
 31000: 01                       fallthrough
      :                          @2146
 31001: 82 7a                    a3 = u64 [a0]
 31003: ab 8a ef                 jump @2143 if a3 != a1
      :                          @2147
 31006: 7b 79                    u64 [a0] = a2
 31008: 33 0b                    a4 = 0
 31010: 01                       fallthrough
      :                          @2148
 31011: ab 8a e7                 jump @2143 if a3 != a1
      :                          @2149
 31014: 28 72 27                 jump @2553
      :                          @2150 [@dyn 281]
 31017: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 31022: 97 89 0d                 a2 = a1 << 0xd
 31025: d3 89 09                 a2 = a2 ^ a1
 31028: 98 9a 07                 a3 = a2 >> 0x7
 31031: 3a 08 60 00 03           a1 = u64 [0x30060]
 31036: d3 a9 09                 a2 = a2 ^ a3
 31039: 97 9a 11                 a3 = a2 << 0x11
 31042: d3 9a 0a                 a3 = a3 ^ a2
 31045: ca 8a 0b                 a4 = a3 * a1
 31048: 3a 09 68 00 03           a2 = u64 [0x30068]
 31053: 3e 0a e0 00 03           u64 [0x300e0] = a3
 31058: 98 ba 03                 a3 = a4 >> 0x3
 31061: d6 9a 0a                 a3 = a3 mulhu a2
 31064: 98 ac 04                 a5 = a3 >> 0x4
 31067: 96 cc e8 03              a5 = a5 * 0x3e8
 31071: c9 cb 0b                 a4 = a4 - a5
 31074: 7b 1b 88 00              u64 [sp + 0x88] = a4
 31078: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 31083: 97 bc 0d                 a5 = a4 << 0xd
 31086: d3 cb 0b                 a4 = a4 ^ a5
 31089: 98 bc 07                 a5 = a4 >> 0x7
 31092: d3 cb 0b                 a4 = a4 ^ a5
 31095: 97 bc 11                 a5 = a4 << 0x11
 31098: d3 cb 0b                 a4 = a4 ^ a5
 31101: ca 8b 0c                 a5 = a4 * a1
 31104: 3e 0b e0 00 03           u64 [0x300e0] = a4
 31109: 98 cb 03                 a4 = a5 >> 0x3
 31112: d6 9b 0b                 a4 = a4 mulhu a2
 31115: 98 bb 04                 a4 = a4 >> 0x4
 31118: 96 bb e8 03              a4 = a4 * 0x3e8
 31122: c9 bc 0c                 a5 = a5 - a4
 31125: 7b 1c 68 02              u64 [sp + 0x268] = a5
 31129: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 31134: 97 bc 0d                 a5 = a4 << 0xd
 31137: d3 cb 0b                 a4 = a4 ^ a5
 31140: 98 bc 07                 a5 = a4 >> 0x7
 31143: d3 cb 0b                 a4 = a4 ^ a5
 31146: 97 bc 11                 a5 = a4 << 0x11
 31149: d3 cb 0b                 a4 = a4 ^ a5
 31152: ca 8b 08                 a1 = a4 * a1
 31155: 3e 0b e0 00 03           u64 [0x300e0] = a4
 31160: 98 87 03                 a0 = a1 >> 0x3
 31163: d6 97 07                 a0 = a0 mulhu a2
 31166: 98 77 04                 a0 = a0 >> 0x4
 31169: 96 77 e8 03              a0 = a0 * 0x3e8
 31173: c9 78 09                 a2 = a1 - a0
 31176: 95 97 01                 a0 = a2 + 0x1
 31179: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 31183: 82 1c 88 00              a5 = u64 [sp + 0x88]
 31187: 82 18 68 02              a1 = u64 [sp + 0x268]
 31191: 8e 95                    s0 = a2 >u 0
 31193: 33 06 41                 s1 = 0x41
 31196: 33 0b 01                 a4 = 0x1
 31199: 01                       fallthrough
      :                          @2151
 31200: cd 7c 0c                 a5 = a5 %u a0
 31203: 83 69 fe                 i32 a2 = s1 + 0xfffffffffffffffe
 31206: d0 98 09                 a2 = a1 >> a2
 31209: 84 99 01                 a2 = a2 & 0x1
 31212: 64 5a                    a3 = s0
 31214: db 9c 0a                 a3 = a5 if a2 != 0
 31217: ca ca 0c                 a5 = a3 * a5
 31220: ca 5a 09                 a2 = a3 * s0
 31223: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 31226: cd 79 05                 s0 = a2 %u a0
 31229: ac 6b e3                 jump @2151 if a4 <u s1
      :                          @2152
 31232: 7b 15 90 00              u64 [sp + 0x90] = s0
 31236: 95 17 88 00              a0 = sp + 0x88
 31240: 7b 17 50 01              u64 [sp + 0x150] = a0
 31244: 33 07 50 03              a0 = 0x350
 31248: 7b 17 58 01              u64 [sp + 0x158] = a0
 31252: 95 18 68 02              a1 = sp + 0x268
 31256: 7b 18 60 01              u64 [sp + 0x160] = a1
 31260: 7b 17 68 01              u64 [sp + 0x168] = a0
 31264: 95 18 b0 00              a1 = sp + 0xb0
 31268: 7b 18 70 01              u64 [sp + 0x170] = a1
 31272: 7b 17 78 01              u64 [sp + 0x178] = a0
 31276: 95 18 90 00              a1 = sp + 0x90
 31280: 7b 18 80 01              u64 [sp + 0x180] = a1
 31284: 7b 17 88 01              u64 [sp + 0x188] = a0
 31288: 33 07 18 09 01           a0 = 0x10918
 31293: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 31297: 49 21 00 01 04           u64 [sp + 256] = 0x4
 31302: 49 21 18 01              u64 [sp + 280] = 0
 31306: 95 18 50 01              a1 = sp + 0x150
 31310: 7b 18 08 01              u64 [sp + 0x108] = a1
 31314: 49 21 10 01 04           u64 [sp + 272] = 0x4
 31319: 95 17 c8 00              a0 = sp + 0xc8
 31323: 95 18 f8 00              a1 = sp + 0xf8
 31327: 50 20 34 02 66 a5        ra = 564, jump @637
      :                          @2153 [@dyn 282]
 31333: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 31337: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 31341: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 31345: 33 07 02                 a0 = 0x2
 31348: 33 08                    a1 = 0
 31350: 33 09                    a2 = 0
 31352: 64 5a                    a3 = s0
 31354: 33 00 36 02              ra = 0x236
 31358: 0a 64                    ecalli 100 // 'log'
 31360: 01                       fallthrough
      :                          @2154 [@dyn 283]
 31361: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 31366: 55 38 00 00 ff 09        jump @2156 if a1 >=u 4294901760
      :                          @2155
 31372: 28 0c 26                 jump @2553
      :                          @2156
 31375: 33 07 10 01 03           a0 = 0x30110
 31380: 95 77 00 00 01           a0 = a0 + 0x10000
 31385: 01                       fallthrough
      :                          @2157
 31386: 82 78                    a1 = u64 [a0]
 31388: c9 87 09                 a2 = a0 - a1
 31391: aa 59 06                 jump @2159 if a2 == s0
      :                          @2158
 31394: 28 f6 25                 jump @2553
      :                          @2159
 31397: c9 68 09                 a2 = a1 - s1
 31400: 01                       fallthrough
      :                          @2160
 31401: 82 7a                    a3 = u64 [a0]
 31403: ab 8a ef                 jump @2157 if a3 != a1
      :                          @2161
 31406: 7b 79                    u64 [a0] = a2
 31408: 33 0b                    a4 = 0
 31410: 01                       fallthrough
      :                          @2162
 31411: ab 8a e7                 jump @2157 if a3 != a1
      :                          @2163
 31414: 28 e2 25                 jump @2553
      :                          @2164 [@dyn 284]
 31417: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 31422: 97 89 0d                 a2 = a1 << 0xd
 31425: d3 98 08                 a1 = a1 ^ a2
 31428: 98 89 07                 a2 = a1 >> 0x7
 31431: d3 98 08                 a1 = a1 ^ a2
 31434: 97 89 11                 a2 = a1 << 0x11
 31437: 3a 0a 60 00 03           a3 = u64 [0x30060]
 31442: d3 98 08                 a1 = a1 ^ a2
 31445: 3a 09 a0 00 03           a2 = u64 [0x300a0]
 31450: ca a8 0b                 a4 = a1 * a3
 31453: 3e 08 e0 00 03           u64 [0x300e0] = a1
 31458: d6 9b 08                 a1 = a4 mulhu a2
 31461: 98 88 12                 a1 = a1 >> 0x12
 31464: 33 0c 40 42 0f           a5 = 0xf4240
 31469: ca c8 08                 a1 = a1 * a5
 31472: c9 8b 0b                 a4 = a4 - a1
 31475: 7b 1b 68 02              u64 [sp + 0x268] = a4
 31479: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 31484: 97 8b 0d                 a4 = a1 << 0xd
 31487: d3 b8 08                 a1 = a1 ^ a4
 31490: 98 8b 07                 a4 = a1 >> 0x7
 31493: d3 b8 08                 a1 = a1 ^ a4
 31496: 97 8b 11                 a4 = a1 << 0x11
 31499: d3 b8 08                 a1 = a1 ^ a4
 31502: ca a8 0a                 a3 = a1 * a3
 31505: 3e 08 e0 00 03           u64 [0x300e0] = a1
 31510: d6 9a 07                 a0 = a3 mulhu a2
 31513: 98 78 12                 a1 = a0 >> 0x12
 31516: 82 17 68 02              a0 = u64 [sp + 0x268]
 31520: ca c8 08                 a1 = a1 * a5
 31523: c9 8a 08                 a1 = a3 - a1
 31526: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 31530: 50 20 3a 02 88 cb        ra = 570, jump @1422
      :                          @2165 [@dyn 285]
 31536: 7b 17 90 00              u64 [sp + 0x90] = a0
 31540: 95 17 68 02              a0 = sp + 0x268
 31544: 7b 17 50 01              u64 [sp + 0x150] = a0
 31548: 33 07 50 03              a0 = 0x350
 31552: 7b 17 58 01              u64 [sp + 0x158] = a0
 31556: 95 18 b0 00              a1 = sp + 0xb0
 31560: 7b 18 60 01              u64 [sp + 0x160] = a1
 31564: 7b 17 68 01              u64 [sp + 0x168] = a0
 31568: 95 18 90 00              a1 = sp + 0x90
 31572: 7b 18 70 01              u64 [sp + 0x170] = a1
 31576: 7b 17 78 01              u64 [sp + 0x178] = a0
 31580: 33 07 68 09 01           a0 = 0x10968
 31585: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 31589: 49 21 00 01 03           u64 [sp + 256] = 0x3
 31594: 49 21 18 01              u64 [sp + 280] = 0
 31598: 95 18 50 01              a1 = sp + 0x150
 31602: 7b 18 08 01              u64 [sp + 0x108] = a1
 31606: 49 21 10 01 03           u64 [sp + 272] = 0x3
 31611: 95 17 c8 00              a0 = sp + 0xc8
 31615: 95 18 f8 00              a1 = sp + 0xf8
 31619: 50 20 3c 02 42 a4        ra = 572, jump @637
      :                          @2166 [@dyn 286]
 31625: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 31629: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 31633: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 31637: 33 07 02                 a0 = 0x2
 31640: 33 08                    a1 = 0
 31642: 33 09                    a2 = 0
 31644: 64 5a                    a3 = s0
 31646: 33 00 3e 02              ra = 0x23e
 31650: 0a 64                    ecalli 100 // 'log'
 31652: 01                       fallthrough
      :                          @2167 [@dyn 287]
 31653: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 31658: 55 38 00 00 ff 09        jump @2169 if a1 >=u 4294901760
      :                          @2168
 31664: 28 e8 24                 jump @2553
      :                          @2169
 31667: 33 07 10 01 03           a0 = 0x30110
 31672: 95 77 00 00 01           a0 = a0 + 0x10000
 31677: 01                       fallthrough
      :                          @2170
 31678: 82 78                    a1 = u64 [a0]
 31680: c9 87 09                 a2 = a0 - a1
 31683: aa 59 06                 jump @2172 if a2 == s0
      :                          @2171
 31686: 28 d2 24                 jump @2553
      :                          @2172
 31689: c9 68 09                 a2 = a1 - s1
 31692: 01                       fallthrough
      :                          @2173
 31693: 82 7a                    a3 = u64 [a0]
 31695: ab 8a ef                 jump @2170 if a3 != a1
      :                          @2174
 31698: 7b 79                    u64 [a0] = a2
 31700: 33 0b                    a4 = 0
 31702: 01                       fallthrough
      :                          @2175
 31703: ab 8a e7                 jump @2170 if a3 != a1
      :                          @2176
 31706: 28 be 24                 jump @2553
      :                          @2177 [@dyn 288]
 31709: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 31714: 97 89 0d                 a2 = a1 << 0xd
 31717: d3 98 08                 a1 = a1 ^ a2
 31720: 98 89 07                 a2 = a1 >> 0x7
 31723: d3 98 08                 a1 = a1 ^ a2
 31726: 97 89 11                 a2 = a1 << 0x11
 31729: 3a 0a 60 00 03           a3 = u64 [0x30060]
 31734: d3 98 08                 a1 = a1 ^ a2
 31737: 3a 09 a0 00 03           a2 = u64 [0x300a0]
 31742: ca a8 0b                 a4 = a1 * a3
 31745: 3e 08 e0 00 03           u64 [0x300e0] = a1
 31750: d6 9b 08                 a1 = a4 mulhu a2
 31753: 98 88 12                 a1 = a1 >> 0x12
 31756: 33 0c 40 42 0f           a5 = 0xf4240
 31761: ca c8 08                 a1 = a1 * a5
 31764: c9 8b 0b                 a4 = a4 - a1
 31767: 7b 1b 68 02              u64 [sp + 0x268] = a4
 31771: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 31776: 97 8b 0d                 a4 = a1 << 0xd
 31779: d3 b8 08                 a1 = a1 ^ a4
 31782: 98 8b 07                 a4 = a1 >> 0x7
 31785: d3 b8 08                 a1 = a1 ^ a4
 31788: 97 8b 11                 a4 = a1 << 0x11
 31791: d3 b8 08                 a1 = a1 ^ a4
 31794: ca a8 0a                 a3 = a1 * a3
 31797: 3e 08 e0 00 03           u64 [0x300e0] = a1
 31802: d6 9a 08                 a1 = a3 mulhu a2
 31805: 82 17 68 02              a0 = u64 [sp + 0x268]
 31809: 98 88 12                 a1 = a1 >> 0x12
 31812: ca c8 08                 a1 = a1 * a5
 31815: c9 8a 08                 a1 = a3 - a1
 31818: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 31822: 52 07 06                 jump @2179 if a0 != 0
      :                          @2178
 31825: 28 07 21                 jump @2512
      :                          @2179
 31828: 88 89 01                 a2 = a1 <u 0x1
 31831: d3 87 0a                 a3 = a0 ^ a1
 31834: 88 aa 01                 a3 = a3 <u 0x1
 31837: d4 a9 09                 a2 = a2 | a3
 31840: 51 09 08                 jump @2181 if a2 == 0
      :                          @2180
 31843: 64 79                    a2 = a0
 31845: 28 f6 20                 jump @2513
      :                          @2181
 31848: d8 78 0a                 a3 = a1 <u a0
 31851: 64 79                    a2 = a0
 31853: 94 a9                    a2 = 0 if a3 != 0
 31855: c9 98 09                 a2 = a1 - a2
 31858: 93 a8                    a1 = 0 if a3 == 0
 31860: c9 87 07                 a0 = a0 - a1
 31863: 64 98                    a1 = a2
 31865: ab 97 ef                 jump @2181 if a0 != a2
      :                          @2182
 31868: 28 df 20                 jump @2513
      :                          @2183 [@dyn 289]
 31871: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 31876: 97 89 0d                 a2 = a1 << 0xd
 31879: d3 98 08                 a1 = a1 ^ a2
 31882: 98 89 07                 a2 = a1 >> 0x7
 31885: d3 89 09                 a2 = a2 ^ a1
 31888: 97 9a 11                 a3 = a2 << 0x11
 31891: 3a 08 60 00 03           a1 = u64 [0x30060]
 31896: d3 a9 09                 a2 = a2 ^ a3
 31899: 3a 0a a0 00 03           a3 = u64 [0x300a0]
 31904: ca 89 0b                 a4 = a2 * a1
 31907: 3e 09 e0 00 03           u64 [0x300e0] = a2
 31912: d6 ab 09                 a2 = a4 mulhu a3
 31915: 98 99 12                 a2 = a2 >> 0x12
 31918: 96 99 40 42 0f           a2 = a2 * 0xf4240
 31923: c9 9b 0b                 a4 = a4 - a2
 31926: 95 bb 01                 a4 = a4 + 0x1
 31929: 7b 1b b0 00              u64 [sp + 0xb0] = a4
 31933: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 31938: 97 9a 0d                 a3 = a2 << 0xd
 31941: d3 a9 09                 a2 = a2 ^ a3
 31944: 98 9a 07                 a3 = a2 >> 0x7
 31947: d3 a9 09                 a2 = a2 ^ a3
 31950: 97 9a 11                 a3 = a2 << 0x11
 31953: d3 a9 09                 a2 = a2 ^ a3
 31956: 3a 0a a8 00 03           a3 = u64 [0x300a8]
 31961: ca 89 08                 a1 = a2 * a1
 31964: 3e 09 e0 00 03           u64 [0x300e0] = a2
 31969: d6 a8 07                 a0 = a1 mulhu a3
 31972: 98 79 03                 a2 = a0 >> 0x3
 31975: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
 31978: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 31982: c8 a9 09                 a2 = a2 + a3
 31985: c9 98 08                 a1 = a1 - a2
 31988: 95 88 02                 a1 = a1 + 0x2
 31991: 7b 18 90 00              u64 [sp + 0x90] = a1
 31995: 33 09                    a2 = 0
 31997: ac 87 18                 jump @2186 if a0 <u a1
      :                          @2184
 32000: 33 0a ff                 a3 = 0xffffffffffffffff
 32003: 64 8b                    a4 = a1
 32005: 01                       fallthrough
      :                          @2185
 32006: d6 8b 0c                 a5 = a4 mulhu a1
 32009: ca 8b 0b                 a4 = a4 * a1
 32012: db ca 0b                 a4 = a3 if a5 != 0
 32015: 83 99 01                 i32 a2 = a2 + 0x1
 32018: ae b7 f4                 jump @2185 if a0 >=u a4
      :                          @2186
 32021: 7a 19 68 02              u32 [sp + 0x268] = a2
 32025: 95 17 b0 00              a0 = sp + 0xb0
 32029: 7b 17 50 01              u64 [sp + 0x150] = a0
 32033: 33 07 50 03              a0 = 0x350
 32037: 7b 17 58 01              u64 [sp + 0x158] = a0
 32041: 95 18 90 00              a1 = sp + 0x90
 32045: 7b 18 60 01              u64 [sp + 0x160] = a1
 32049: 7b 17 68 01              u64 [sp + 0x168] = a0
 32053: 95 17 68 02              a0 = sp + 0x268
 32057: 7b 17 70 01              u64 [sp + 0x170] = a0
 32061: 33 07 86 03              a0 = 0x386
 32065: 7b 17 78 01              u64 [sp + 0x178] = a0
 32069: 33 07 c8 09 01           a0 = 0x109c8
 32074: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 32078: 49 21 00 01 03           u64 [sp + 256] = 0x3
 32083: 49 21 18 01              u64 [sp + 280] = 0
 32087: 95 18 50 01              a1 = sp + 0x150
 32091: 7b 18 08 01              u64 [sp + 0x108] = a1
 32095: 49 21 10 01 03           u64 [sp + 272] = 0x3
 32100: 95 17 c8 00              a0 = sp + 0xc8
 32104: 95 18 f8 00              a1 = sp + 0xf8
 32108: 50 20 44 02 59 a2        ra = 580, jump @637
      :                          @2187 [@dyn 290]
 32114: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 32118: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 32122: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 32126: 33 07 02                 a0 = 0x2
 32129: 33 08                    a1 = 0
 32131: 33 09                    a2 = 0
 32133: 64 5a                    a3 = s0
 32135: 33 00 46 02              ra = 0x246
 32139: 0a 64                    ecalli 100 // 'log'
 32141: 01                       fallthrough
      :                          @2188 [@dyn 291]
 32142: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 32147: 55 38 00 00 ff 09        jump @2190 if a1 >=u 4294901760
      :                          @2189
 32153: 28 ff 22                 jump @2553
      :                          @2190
 32156: 33 07 10 01 03           a0 = 0x30110
 32161: 95 77 00 00 01           a0 = a0 + 0x10000
 32166: 01                       fallthrough
      :                          @2191
 32167: 82 78                    a1 = u64 [a0]
 32169: c9 87 09                 a2 = a0 - a1
 32172: aa 59 06                 jump @2193 if a2 == s0
      :                          @2192
 32175: 28 e9 22                 jump @2553
      :                          @2193
 32178: c9 68 09                 a2 = a1 - s1
 32181: 01                       fallthrough
      :                          @2194
 32182: 82 7a                    a3 = u64 [a0]
 32184: ab 8a ef                 jump @2191 if a3 != a1
      :                          @2195
 32187: 7b 79                    u64 [a0] = a2
 32189: 33 0b                    a4 = 0
 32191: 01                       fallthrough
      :                          @2196
 32192: ab 8a e7                 jump @2191 if a3 != a1
      :                          @2197
 32195: 28 d5 22                 jump @2553
      :                          @2198 [@dyn 292]
 32198: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 32203: 97 89 0d                 a2 = a1 << 0xd
 32206: d3 98 08                 a1 = a1 ^ a2
 32209: 98 89 07                 a2 = a1 >> 0x7
 32212: d3 89 09                 a2 = a2 ^ a1
 32215: 97 9a 11                 a3 = a2 << 0x11
 32218: 3a 08 60 00 03           a1 = u64 [0x30060]
 32223: d3 a9 09                 a2 = a2 ^ a3
 32226: 3a 0a a0 00 03           a3 = u64 [0x300a0]
 32231: ca 89 0b                 a4 = a2 * a1
 32234: 3e 09 e0 00 03           u64 [0x300e0] = a2
 32239: d6 ab 09                 a2 = a4 mulhu a3
 32242: 98 99 12                 a2 = a2 >> 0x12
 32245: 96 99 40 42 0f           a2 = a2 * 0xf4240
 32250: c9 9b 0b                 a4 = a4 - a2
 32253: 95 bb 01                 a4 = a4 + 0x1
 32256: 7b 1b b0 00              u64 [sp + 0xb0] = a4
 32260: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 32265: 97 9a 0d                 a3 = a2 << 0xd
 32268: d3 a9 09                 a2 = a2 ^ a3
 32271: 98 9a 07                 a3 = a2 >> 0x7
 32274: d3 a9 09                 a2 = a2 ^ a3
 32277: 97 9a 11                 a3 = a2 << 0x11
 32280: d3 a9 09                 a2 = a2 ^ a3
 32283: 3a 0a a8 00 03           a3 = u64 [0x300a8]
 32288: ca 89 08                 a1 = a2 * a1
 32291: 3e 09 e0 00 03           u64 [0x300e0] = a2
 32296: d6 a8 07                 a0 = a1 mulhu a3
 32299: 98 79 03                 a2 = a0 >> 0x3
 32302: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
 32305: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 32309: c8 a9 09                 a2 = a2 + a3
 32312: c9 98 08                 a1 = a1 - a2
 32315: 95 88 02                 a1 = a1 + 0x2
 32318: 7b 18 90 00              u64 [sp + 0x90] = a1
 32322: 33 09                    a2 = 0
 32324: ac 87 0c                 jump @2200 if a0 <u a1
      :                          @2199
 32327: cb 87 07                 a0 = a0 /u a1
 32330: 83 99 01                 i32 a2 = a2 + 0x1
 32333: ae 87 fa                 jump @2199 if a0 >=u a1
      :                          @2200
 32336: 7a 19 68 02              u32 [sp + 0x268] = a2
 32340: 95 17 b0 00              a0 = sp + 0xb0
 32344: 7b 17 50 01              u64 [sp + 0x150] = a0
 32348: 33 07 50 03              a0 = 0x350
 32352: 7b 17 58 01              u64 [sp + 0x158] = a0
 32356: 95 18 90 00              a1 = sp + 0x90
 32360: 7b 18 60 01              u64 [sp + 0x160] = a1
 32364: 7b 17 68 01              u64 [sp + 0x168] = a0
 32368: 95 17 68 02              a0 = sp + 0x268
 32372: 7b 17 70 01              u64 [sp + 0x170] = a0
 32376: 33 07 86 03              a0 = 0x386
 32380: 7b 17 78 01              u64 [sp + 0x178] = a0
 32384: 33 07 f8 09 01           a0 = 0x109f8
 32389: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 32393: 49 21 00 01 03           u64 [sp + 256] = 0x3
 32398: 49 21 18 01              u64 [sp + 280] = 0
 32402: 95 18 50 01              a1 = sp + 0x150
 32406: 7b 18 08 01              u64 [sp + 0x108] = a1
 32410: 49 21 10 01 03           u64 [sp + 272] = 0x3
 32415: 95 17 c8 00              a0 = sp + 0xc8
 32419: 95 18 f8 00              a1 = sp + 0xf8
 32423: 50 20 4a 02 1e a1        ra = 586, jump @637
      :                          @2201 [@dyn 293]
 32429: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 32433: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 32437: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 32441: 33 07 02                 a0 = 0x2
 32444: 33 08                    a1 = 0
 32446: 33 09                    a2 = 0
 32448: 64 5a                    a3 = s0
 32450: 33 00 4c 02              ra = 0x24c
 32454: 0a 64                    ecalli 100 // 'log'
 32456: 01                       fallthrough
      :                          @2202 [@dyn 294]
 32457: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 32462: 55 38 00 00 ff 09        jump @2204 if a1 >=u 4294901760
      :                          @2203
 32468: 28 c4 21                 jump @2553
      :                          @2204
 32471: 33 07 10 01 03           a0 = 0x30110
 32476: 95 77 00 00 01           a0 = a0 + 0x10000
 32481: 01                       fallthrough
      :                          @2205
 32482: 82 78                    a1 = u64 [a0]
 32484: c9 87 09                 a2 = a0 - a1
 32487: aa 59 06                 jump @2207 if a2 == s0
      :                          @2206
 32490: 28 ae 21                 jump @2553
      :                          @2207
 32493: c9 68 09                 a2 = a1 - s1
 32496: 01                       fallthrough
      :                          @2208
 32497: 82 7a                    a3 = u64 [a0]
 32499: ab 8a ef                 jump @2205 if a3 != a1
      :                          @2209
 32502: 7b 79                    u64 [a0] = a2
 32504: 33 0b                    a4 = 0
 32506: 01                       fallthrough
      :                          @2210
 32507: ab 8a e7                 jump @2205 if a3 != a1
      :                          @2211
 32510: 28 9a 21                 jump @2553
      :                          @2212 [@dyn 295]
 32513: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 32518: 33 09                    a2 = 0
 32520: 97 8a 0d                 a3 = a1 << 0xd
 32523: d3 a8 08                 a1 = a1 ^ a3
 32526: 98 8a 07                 a3 = a1 >> 0x7
 32529: d3 a8 08                 a1 = a1 ^ a3
 32532: 97 8a 11                 a3 = a1 << 0x11
 32535: d3 a8 08                 a1 = a1 ^ a3
 32538: 3a 0a 60 00 03           a3 = u64 [0x30060]
 32543: 3a 0b a0 00 03           a4 = u64 [0x300a0]
 32548: 3e 08 e0 00 03           u64 [0x300e0] = a1
 32553: ca a8 07                 a0 = a1 * a3
 32556: d6 b7 08                 a1 = a0 mulhu a4
 32559: 98 88 12                 a1 = a1 >> 0x12
 32562: 96 88 40 42 0f           a1 = a1 * 0xf4240
 32567: c9 87 07                 a0 = a0 - a1
 32570: 7b 17 90 00              u64 [sp + 0x90] = a0
 32574: 98 78 01                 a1 = a0 >> 0x1
 32577: 95 88 01                 a1 = a1 + 0x1
 32580: 33 0a ff                 a3 = 0xffffffffffffffff
 32583: 01                       fallthrough
      :                          @2213
 32584: c8 98 0c                 a5 = a1 + a2
 32587: 98 cc 01                 a5 = a5 >> 0x1
 32590: d6 cc 06                 s1 = a5 mulhu a5
 32593: ca cc 0b                 a4 = a5 * a5
 32596: db 6a 0b                 a4 = a3 if s1 != 0
 32599: aa 7b 15                 jump @2215 if a4 == a0
      :                          @2214
 32602: d8 7b 06                 s1 = a4 <u a0
 32605: 95 c5 01                 s0 = a5 + 0x1
 32608: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 32611: da 6c 08                 a1 = a5 if s1 == 0
 32614: db 65 09                 a2 = s0 if s1 != 0
 32617: ae 98 df                 jump @2213 if a1 >=u a2
      :                          @2215
 32620: d3 b7 07                 a0 = a0 ^ a4
 32623: 88 77 01                 a0 = a0 <u 0x1
 32626: 78 17 b0 00              u8 [sp + 0xb0] = a0
 32630: 95 17 90 00              a0 = sp + 0x90
 32634: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 32638: 33 07 50 03              a0 = 0x350
 32642: 7b 17 00 01              u64 [sp + 0x100] = a0
 32646: 95 17 b0 00              a0 = sp + 0xb0
 32650: 7b 17 08 01              u64 [sp + 0x108] = a0
 32654: 33 07 9c 03              a0 = 0x39c
 32658: 7b 17 10 01              u64 [sp + 0x110] = a0
 32662: 33 07 40 0a 01           a0 = 0x10a40
 32667: 7b 17 50 01              u64 [sp + 0x150] = a0
 32671: 49 21 58 01 02           u64 [sp + 344] = 0x2
 32676: 49 21 70 01              u64 [sp + 368] = 0
 32680: 95 18 f8 00              a1 = sp + 0xf8
 32684: 7b 18 60 01              u64 [sp + 0x160] = a1
 32688: 49 21 68 01 02           u64 [sp + 360] = 0x2
 32693: 95 17 c8 00              a0 = sp + 0xc8
 32697: 95 18 50 01              a1 = sp + 0x150
 32701: 50 20 50 02 08 a0        ra = 592, jump @637
      :                          @2216 [@dyn 296]
 32707: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 32711: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 32715: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 32719: 33 07 02                 a0 = 0x2
 32722: 33 08                    a1 = 0
 32724: 33 09                    a2 = 0
 32726: 64 5a                    a3 = s0
 32728: 33 00 52 02              ra = 0x252
 32732: 0a 64                    ecalli 100 // 'log'
 32734: 01                       fallthrough
      :                          @2217 [@dyn 297]
 32735: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 32740: 55 38 00 00 ff 09        jump @2219 if a1 >=u 4294901760
      :                          @2218
 32746: 28 ae 20                 jump @2553
      :                          @2219
 32749: 33 07 10 01 03           a0 = 0x30110
 32754: 95 77 00 00 01           a0 = a0 + 0x10000
 32759: 01                       fallthrough
      :                          @2220
 32760: 82 78                    a1 = u64 [a0]
 32762: c9 87 09                 a2 = a0 - a1
 32765: aa 59 06                 jump @2222 if a2 == s0
      :                          @2221
 32768: 28 98 20                 jump @2553
      :                          @2222
 32771: c9 68 09                 a2 = a1 - s1
 32774: 01                       fallthrough
      :                          @2223
 32775: 82 7a                    a3 = u64 [a0]
 32777: ab 8a ef                 jump @2220 if a3 != a1
      :                          @2224
 32780: 7b 79                    u64 [a0] = a2
 32782: 33 0b                    a4 = 0
 32784: 01                       fallthrough
      :                          @2225
 32785: ab 8a e7                 jump @2220 if a3 != a1
      :                          @2226
 32788: 28 84 20                 jump @2553
      :                          @2227 [@dyn 298]
 32791: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 32796: 97 89 0d                 a2 = a1 << 0xd
 32799: d3 98 08                 a1 = a1 ^ a2
 32802: 98 89 07                 a2 = a1 >> 0x7
 32805: d3 98 08                 a1 = a1 ^ a2
 32808: 97 89 11                 a2 = a1 << 0x11
 32811: d3 98 08                 a1 = a1 ^ a2
 32814: 3a 09 60 00 03           a2 = u64 [0x30060]
 32819: 3a 0a 98 00 03           a3 = u64 [0x30098]
 32824: 3e 08 e0 00 03           u64 [0x300e0] = a1
 32829: ca 98 07                 a0 = a1 * a2
 32832: 98 78 02                 a1 = a0 >> 0x2
 32835: d6 a8 08                 a1 = a1 mulhu a3
 32838: 98 88 02                 a1 = a1 >> 0x2
 32841: 96 88 64                 a1 = a1 * 0x64
 32844: c9 87 07                 a0 = a0 - a1
 32847: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 32851: 33 00 56 02              ra = 0x256
 32855: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 32858: 7b 10 28                 u64 [sp + 0x28] = ra
 32861: 7b 15 20                 u64 [sp + 0x20] = s0
 32864: 7b 16 18                 u64 [sp + 0x18] = s1
 32867: 7b 17 10                 u64 [sp + 0x10] = a0
 32870: 95 77 01                 a0 = a0 + 0x1
 32873: 7b 17                    u64 [sp] = a0
 32875: 97 79 03                 a2 = a0 << 0x3
 32878: 33 07 10 01 03           a0 = 0x30110
 32883: 33 03 10 01 03           t1 = 0x30110
 32888: 33 02 00 00 01           t0 = 0x10000
 32893: c8 23 05                 s0 = t1 + t0
 32896: 28 05 c3                 jump @1345
      :                          @2228 [@dyn 299]
 32899: 7b 17 90 00              u64 [sp + 0x90] = a0
 32903: 95 17 b0 00              a0 = sp + 0xb0
 32907: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 32911: 33 07 50 03              a0 = 0x350
 32915: 7b 17 00 01              u64 [sp + 0x100] = a0
 32919: 95 18 90 00              a1 = sp + 0x90
 32923: 7b 18 08 01              u64 [sp + 0x108] = a1
 32927: 7b 17 10 01              u64 [sp + 0x110] = a0
 32931: 33 07 78 0a 01           a0 = 0x10a78
 32936: 7b 17 50 01              u64 [sp + 0x150] = a0
 32940: 49 21 58 01 02           u64 [sp + 344] = 0x2
 32945: 49 21 70 01              u64 [sp + 368] = 0
 32949: 95 18 f8 00              a1 = sp + 0xf8
 32953: 7b 18 60 01              u64 [sp + 0x160] = a1
 32957: 49 21 68 01 02           u64 [sp + 360] = 0x2
 32962: 95 17 c8 00              a0 = sp + 0xc8
 32966: 95 18 50 01              a1 = sp + 0x150
 32970: 50 20 58 02 fb 9e        ra = 600, jump @637
      :                          @2229 [@dyn 300]
 32976: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 32980: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 32984: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 32988: 33 07 02                 a0 = 0x2
 32991: 33 08                    a1 = 0
 32993: 33 09                    a2 = 0
 32995: 64 5a                    a3 = s0
 32997: 33 00 5a 02              ra = 0x25a
 33001: 0a 64                    ecalli 100 // 'log'
 33003: 01                       fallthrough
      :                          @2230 [@dyn 301]
 33004: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 33009: 55 38 00 00 ff 09        jump @2232 if a1 >=u 4294901760
      :                          @2231
 33015: 28 a1 1f                 jump @2553
      :                          @2232
 33018: 33 07 10 01 03           a0 = 0x30110
 33023: 95 77 00 00 01           a0 = a0 + 0x10000
 33028: 01                       fallthrough
      :                          @2233
 33029: 82 78                    a1 = u64 [a0]
 33031: c9 87 09                 a2 = a0 - a1
 33034: aa 59 06                 jump @2235 if a2 == s0
      :                          @2234
 33037: 28 8b 1f                 jump @2553
      :                          @2235
 33040: c9 68 09                 a2 = a1 - s1
 33043: 01                       fallthrough
      :                          @2236
 33044: 82 7a                    a3 = u64 [a0]
 33046: ab 8a ef                 jump @2233 if a3 != a1
      :                          @2237
 33049: 7b 79                    u64 [a0] = a2
 33051: 33 0b                    a4 = 0
 33053: 01                       fallthrough
      :                          @2238
 33054: ab 8a e7                 jump @2233 if a3 != a1
      :                          @2239
 33057: 28 77 1f                 jump @2553
      :                          @2240 [@dyn 302]
 33060: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 33065: 97 89 0d                 a2 = a1 << 0xd
 33068: d3 98 08                 a1 = a1 ^ a2
 33071: 98 89 07                 a2 = a1 >> 0x7
 33074: d3 98 08                 a1 = a1 ^ a2
 33077: 97 89 11                 a2 = a1 << 0x11
 33080: d3 98 08                 a1 = a1 ^ a2
 33083: 3a 09 60 00 03           a2 = u64 [0x30060]
 33088: 3a 0a 98 00 03           a3 = u64 [0x30098]
 33093: 3e 08 e0 00 03           u64 [0x300e0] = a1
 33098: ca 98 07                 a0 = a1 * a2
 33101: 98 78 02                 a1 = a0 >> 0x2
 33104: d6 a8 08                 a1 = a1 mulhu a3
 33107: 98 88 02                 a1 = a1 >> 0x2
 33110: 96 88 64                 a1 = a1 * 0x64
 33113: c9 87 07                 a0 = a0 - a1
 33116: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 33120: 33 00 5e 02              ra = 0x25e
 33124: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 33127: 7b 10 10                 u64 [sp + 0x10] = ra
 33130: 7b 15 08                 u64 [sp + 0x8] = s0
 33133: 7b 16                    u64 [sp] = s1
 33135: 64 73                    t1 = a0
 33137: 95 78 01                 a1 = a0 + 0x1
 33140: 97 87 03                 a0 = a1 << 0x3
 33143: 33 04 10 01 03           t2 = 0x30110
 33148: 33 02 00 00 01           t0 = 0x10000
 33153: c8 24 00                 ra = t2 + t0
 33156: 28 60 c3                 jump @1375
      :                          @2241 [@dyn 303]
 33159: 7b 17 90 00              u64 [sp + 0x90] = a0
 33163: 95 17 b0 00              a0 = sp + 0xb0
 33167: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 33171: 33 07 50 03              a0 = 0x350
 33175: 7b 17 00 01              u64 [sp + 0x100] = a0
 33179: 95 17 90 00              a0 = sp + 0x90
 33183: 7b 17 08 01              u64 [sp + 0x108] = a0
 33187: 33 07 a8 03              a0 = 0x3a8
 33191: 7b 17 10 01              u64 [sp + 0x110] = a0
 33195: 33 07 98 0a 01           a0 = 0x10a98
 33200: 7b 17 50 01              u64 [sp + 0x150] = a0
 33204: 49 21 58 01 02           u64 [sp + 344] = 0x2
 33209: 49 21 70 01              u64 [sp + 368] = 0
 33213: 95 18 f8 00              a1 = sp + 0xf8
 33217: 7b 18 60 01              u64 [sp + 0x160] = a1
 33221: 49 21 68 01 02           u64 [sp + 360] = 0x2
 33226: 95 17 c8 00              a0 = sp + 0xc8
 33230: 95 18 50 01              a1 = sp + 0x150
 33234: 50 20 60 02 f3 9d        ra = 608, jump @637
      :                          @2242 [@dyn 304]
 33240: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 33244: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 33248: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 33252: 33 07 02                 a0 = 0x2
 33255: 33 08                    a1 = 0
 33257: 33 09                    a2 = 0
 33259: 64 5a                    a3 = s0
 33261: 33 00 62 02              ra = 0x262
 33265: 0a 64                    ecalli 100 // 'log'
 33267: 01                       fallthrough
      :                          @2243 [@dyn 305]
 33268: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 33273: 55 38 00 00 ff 09        jump @2245 if a1 >=u 4294901760
      :                          @2244
 33279: 28 99 1e                 jump @2553
      :                          @2245
 33282: 33 07 10 01 03           a0 = 0x30110
 33287: 95 77 00 00 01           a0 = a0 + 0x10000
 33292: 01                       fallthrough
      :                          @2246
 33293: 82 78                    a1 = u64 [a0]
 33295: c9 87 09                 a2 = a0 - a1
 33298: aa 59 06                 jump @2248 if a2 == s0
      :                          @2247
 33301: 28 83 1e                 jump @2553
      :                          @2248
 33304: c9 68 09                 a2 = a1 - s1
 33307: 01                       fallthrough
      :                          @2249
 33308: 82 7a                    a3 = u64 [a0]
 33310: ab 8a ef                 jump @2246 if a3 != a1
      :                          @2250
 33313: 7b 79                    u64 [a0] = a2
 33315: 33 0b                    a4 = 0
 33317: 01                       fallthrough
      :                          @2251
 33318: ab 8a e7                 jump @2246 if a3 != a1
      :                          @2252
 33321: 28 6f 1e                 jump @2553
      :                          @2253 [@dyn 306]
 33324: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 33329: 97 89 0d                 a2 = a1 << 0xd
 33332: d3 89 09                 a2 = a2 ^ a1
 33335: 98 9a 07                 a3 = a2 >> 0x7
 33338: 3a 08 60 00 03           a1 = u64 [0x30060]
 33343: d3 a9 09                 a2 = a2 ^ a3
 33346: 97 9a 11                 a3 = a2 << 0x11
 33349: d3 a9 09                 a2 = a2 ^ a3
 33352: ca 89 0a                 a3 = a2 * a1
 33355: 3a 0b 68 00 03           a4 = u64 [0x30068]
 33360: 3e 09 e0 00 03           u64 [0x300e0] = a2
 33365: 98 a9 03                 a2 = a3 >> 0x3
 33368: d6 b9 09                 a2 = a2 mulhu a4
 33371: 98 99 04                 a2 = a2 >> 0x4
 33374: 33 0c e8 03              a5 = 0x3e8
 33378: ca c9 09                 a2 = a2 * a5
 33381: c9 9a 0a                 a3 = a3 - a2
 33384: 95 aa 01                 a3 = a3 + 0x1
 33387: 7b 1a 80 00              u64 [sp + 0x80] = a3
 33391: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 33396: 97 9a 0d                 a3 = a2 << 0xd
 33399: d3 a9 09                 a2 = a2 ^ a3
 33402: 98 9a 07                 a3 = a2 >> 0x7
 33405: d3 a9 09                 a2 = a2 ^ a3
 33408: 97 9a 11                 a3 = a2 << 0x11
 33411: d3 a9 09                 a2 = a2 ^ a3
 33414: ca 89 0a                 a3 = a2 * a1
 33417: 3e 09 e0 00 03           u64 [0x300e0] = a2
 33422: 98 a9 03                 a2 = a3 >> 0x3
 33425: d6 b9 09                 a2 = a2 mulhu a4
 33428: 98 99 04                 a2 = a2 >> 0x4
 33431: ca c9 09                 a2 = a2 * a5
 33434: c9 9a 0a                 a3 = a3 - a2
 33437: 7b 1a 88 00              u64 [sp + 0x88] = a3
 33441: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 33446: 97 9a 0d                 a3 = a2 << 0xd
 33449: d3 a9 09                 a2 = a2 ^ a3
 33452: 98 9a 07                 a3 = a2 >> 0x7
 33455: d3 a9 09                 a2 = a2 ^ a3
 33458: 97 9a 11                 a3 = a2 << 0x11
 33461: d3 a9 09                 a2 = a2 ^ a3
 33464: 3a 0a 70 00 03           a3 = u64 [0x30070]
 33469: ca 89 08                 a1 = a2 * a1
 33472: 3e 09 e0 00 03           u64 [0x300e0] = a2
 33477: d6 a8 07                 a0 = a1 mulhu a3
 33480: c9 78 09                 a2 = a1 - a0
 33483: 98 99 01                 a2 = a2 >> 0x1
 33486: c8 97 07                 a0 = a0 + a2
 33489: 98 77 09                 a0 = a0 >> 0x9
 33492: 96 77 e7 03              a0 = a0 * 0x3e7
 33496: c9 78 09                 a2 = a1 - a0
 33499: 82 1a 88 00              a3 = u64 [sp + 0x88]
 33503: 82 17 80 00              a0 = u64 [sp + 0x80]
 33507: 95 98 01                 a1 = a2 + 0x1
 33510: 7b 18 68 02              u64 [sp + 0x268] = a1
 33514: 8e 99                    a2 = a2 >u 0
 33516: 52 0a 06                 jump @2255 if a3 != 0
      :                          @2254
 33519: 28 2c 18                 jump @2479
      :                          @2255
 33522: 64 7b                    a4 = a0
 33524: 28 0e                    jump @2258
      :                          @2256
 33526: 98 aa 01                 a3 = a3 >> 0x1
 33529: ca bb 0b                 a4 = a4 * a4
 33532: 52 0a 06                 jump @2258 if a3 != 0
      :                          @2257
 33535: 28 1c 18                 jump @2479
      :                          @2258
 33538: 84 ac 01                 a5 = a3 & 0x1
 33541: cd 8b 0b                 a4 = a4 %u a1
 33544: 51 0c ee                 jump @2256 if a5 == 0
      :                          @2259
 33547: ca 9b 09                 a2 = a4 * a2
 33550: cd 89 09                 a2 = a2 %u a1
 33553: 28 e5                    jump @2256
      :                          @2260 [@dyn 307]
 33555: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 33560: 97 78 0d                 a1 = a0 << 0xd
 33563: d3 87 07                 a0 = a0 ^ a1
 33566: 98 78 07                 a1 = a0 >> 0x7
 33569: d3 87 07                 a0 = a0 ^ a1
 33572: 97 78 11                 a1 = a0 << 0x11
 33575: d3 78 02                 t0 = a1 ^ a0
 33578: 3e 02 e0 00 03           u64 [0x300e0] = t0
 33583: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 33588: 3a 03 60 00 03           t1 = u64 [0x30060]
 33593: 97 8a 0d                 a3 = a1 << 0xd
 33596: d3 a8 08                 a1 = a1 ^ a3
 33599: 98 8a 07                 a3 = a1 >> 0x7
 33602: d3 a8 08                 a1 = a1 ^ a3
 33605: 97 8a 11                 a3 = a1 << 0x11
 33608: d3 a8 08                 a1 = a1 ^ a3
 33611: ca 38 0a                 a3 = a1 * t1
 33614: 3e 08 e0 00 03           u64 [0x300e0] = a1
 33619: 3a 08 90 00 03           a1 = u64 [0x30090]
 33624: 98 ab 01                 a4 = a3 >> 0x1
 33627: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 33632: d6 8b 0b                 a4 = a4 mulhu a1
 33635: 98 bb 04                 a4 = a4 >> 0x4
 33638: 97 6c 0d                 a5 = s1 << 0xd
 33641: d3 c6 06                 s1 = s1 ^ a5
 33644: 98 6c 07                 a5 = s1 >> 0x7
 33647: d3 6c 0c                 a5 = a5 ^ s1
 33650: 97 c5 11                 s0 = a5 << 0x11
 33653: d3 c5 05                 s0 = s0 ^ a5
 33656: 3e 05 e0 00 03           u64 [0x300e0] = s0
 33661: 3a 0c e0 00 03           a5 = u64 [0x300e0]
 33666: 96 bb 62                 a4 = a4 * 0x62
 33669: c9 ba 0a                 a3 = a3 - a4
 33672: 97 cb 0d                 a4 = a5 << 0xd
 33675: d3 cb 0b                 a4 = a4 ^ a5
 33678: 98 bc 07                 a5 = a4 >> 0x7
 33681: d3 cb 0b                 a4 = a4 ^ a5
 33684: 97 bc 11                 a5 = a4 << 0x11
 33687: d3 cb 0b                 a4 = a4 ^ a5
 33690: ca 3b 07                 a0 = a4 * t1
 33693: 98 7c 01                 a5 = a0 >> 0x1
 33696: d6 8c 0c                 a5 = a5 mulhu a1
 33699: 95 a8 02                 a1 = a3 + 0x2
 33702: 98 cc 04                 a5 = a5 >> 0x4
 33705: 96 ca 62                 a3 = a5 * 0x62
 33708: c9 a7 07                 a0 = a0 - a3
 33711: 95 7a 02                 a3 = a0 + 0x2
 33714: 3e 0b e0 00 03           u64 [0x300e0] = a4
 33719: 64 86                    s1 = a1
 33721: 64 a9                    a2 = a3
 33723: 01                       fallthrough
      :                          @2261
 33724: 64 9c                    a5 = a2
 33726: cd 96 09                 a2 = s1 %u a2
 33729: 64 c6                    s1 = a5
 33731: 52 09 f9                 jump @2261 if a2 != 0
      :                          @2262
 33734: 49 11 10 ff ff fe        u64 [sp + 16] = 0xfffffffffffeffff
 33740: 7b 13 08                 u64 [sp + 0x8] = t1
 33743: 52 1c 01 df 00           jump @2272 if a5 != 1
      :                          @2263
 33748: 3a 07 98 00 03           a0 = u64 [0x30098]
 33753: ca 35 09                 a2 = s0 * t1
 33756: ca 32 0b                 a4 = t0 * t1
 33759: 98 9c 02                 a5 = a2 >> 0x2
 33762: d6 7c 0c                 a5 = a5 mulhu a0
 33765: 98 cc 02                 a5 = a5 >> 0x2
 33768: 96 cc 64                 a5 = a5 * 0x64
 33771: c9 c9 09                 a2 = a2 - a5
 33774: 98 bc 02                 a5 = a4 >> 0x2
 33777: d6 7c 07                 a0 = a5 mulhu a0
 33780: 98 77 02                 a0 = a0 >> 0x2
 33783: 96 77 64                 a0 = a0 * 0x64
 33786: c9 7b 07                 a0 = a4 - a0
 33789: 33 00 68 02              ra = 0x268
 33793: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 33796: 7b 10 38                 u64 [sp + 0x38] = ra
 33799: 7b 15 30                 u64 [sp + 0x30] = s0
 33802: 49 11 28 64              u64 [sp + 40] = 0x64
 33806: 64 a5                    s0 = a3
 33808: 7b 19                    u64 [sp] = a2
 33810: 64 86                    s1 = a1
 33812: 7b 17 08                 u64 [sp + 0x8] = a0
 33815: 95 17 10                 a0 = sp + 0x10
 33818: 64 a9                    a2 = a3
 33820: 33 00 20 01              ra = 0x120
 33824: 28 1a a5                 jump @788
      :                          @2264 [@dyn 308]
 33827: 7b 17 90 00              u64 [sp + 0x90] = a0
 33831: 95 17 90 00              a0 = sp + 0x90
 33835: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 33839: 33 07 a8 03              a0 = 0x3a8
 33843: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 33847: 33 07 20 0b 01           a0 = 0x10b20
 33852: 7b 17 50 01              u64 [sp + 0x150] = a0
 33856: 49 21 58 01 01           u64 [sp + 344] = 0x1
 33861: 49 21 70 01              u64 [sp + 368] = 0
 33865: 95 17 c8 00              a0 = sp + 0xc8
 33869: 7b 17 60 01              u64 [sp + 0x160] = a0
 33873: 49 21 68 01 01           u64 [sp + 360] = 0x1
 33878: 95 17 f8 00              a0 = sp + 0xf8
 33882: 95 18 50 01              a1 = sp + 0x150
 33886: 50 20 6a 02 67 9b        ra = 618, jump @637
      :                          @2265 [@dyn 309]
 33892: 82 15 00 01              s0 = u64 [sp + 0x100]
 33896: 82 1b 08 01              a4 = u64 [sp + 0x108]
 33900: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 33904: 33 07 02                 a0 = 0x2
 33907: 33 08                    a1 = 0
 33909: 33 09                    a2 = 0
 33911: 64 5a                    a3 = s0
 33913: 33 00 6c 02              ra = 0x26c
 33917: 0a 64                    ecalli 100 // 'log'
 33919: 01                       fallthrough
      :                          @2266 [@dyn 310]
 33920: 82 13 08                 t1 = u64 [sp + 0x8]
 33923: 82 17 10                 a0 = u64 [sp + 0x10]
 33926: c8 67 07                 a0 = a0 + s1
 33929: 53 37 00 00 ff 25        jump @2272 if a0 <u 4294901760
      :                          @2267
 33935: 33 07 10 01 03           a0 = 0x30110
 33940: 95 77 00 00 01           a0 = a0 + 0x10000
 33945: 01                       fallthrough
      :                          @2268
 33946: 82 78                    a1 = u64 [a0]
 33948: c9 87 09                 a2 = a0 - a1
 33951: ab 59 0f                 jump @2272 if a2 != s0
      :                          @2269
 33954: c9 68 09                 a2 = a1 - s1
 33957: 01                       fallthrough
      :                          @2270
 33958: 82 7a                    a3 = u64 [a0]
 33960: ab 8a f2                 jump @2268 if a3 != a1
      :                          @2271
 33963: 7b 79                    u64 [a0] = a2
 33965: 01                       fallthrough
      :                          @2272
 33966: 49 21 b0 00 02           u64 [sp + 176] = 0x2
 33971: 49 21 b8 00 03           u64 [sp + 184] = 0x3
 33976: 49 21 c0 00 05           u64 [sp + 192] = 0x5
 33981: 33 0c e0 00 03           a5 = 0x300e0
 33986: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 33991: 97 78 0d                 a1 = a0 << 0xd
 33994: d3 87 07                 a0 = a0 ^ a1
 33997: 98 78 07                 a1 = a0 >> 0x7
 34000: d3 87 07                 a0 = a0 ^ a1
 34003: 97 78 11                 a1 = a0 << 0x11
 34006: d3 78 08                 a1 = a1 ^ a0
 34009: 3e 08 e0 00 03           u64 [0x300e0] = a1
 34014: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 34019: 84 77 01                 a0 = a0 & 0x1
 34022: 97 89 0d                 a2 = a1 << 0xd
 34025: d3 98 08                 a1 = a1 ^ a2
 34028: 98 89 07                 a2 = a1 >> 0x7
 34031: d3 98 08                 a1 = a1 ^ a2
 34034: 97 89 11                 a2 = a1 << 0x11
 34037: d3 98 08                 a1 = a1 ^ a2
 34040: ca 38 09                 a2 = a1 * t1
 34043: 3e 08 e0 00 03           u64 [0x300e0] = a1
 34048: 14 08 ab aa aa aa aa aa aa aa a1 = 0xaaaaaaaaaaaaaaab
 34058: d6 89 08                 a1 = a2 mulhu a1
 34061: 98 8a 01                 a3 = a1 >> 0x1
 34064: 84 88 fe                 a1 = a1 & 0xfffffffffffffffe
 34067: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 34072: c8 a8 08                 a1 = a1 + a3
 34075: c9 89 09                 a2 = a2 - a1
 34078: 97 b8 0d                 a1 = a4 << 0xd
 34081: d3 b8 08                 a1 = a1 ^ a4
 34084: 98 8a 07                 a3 = a1 >> 0x7
 34087: d3 a8 08                 a1 = a1 ^ a3
 34090: 97 8a 11                 a3 = a1 << 0x11
 34093: d3 a8 08                 a1 = a1 ^ a3
 34096: ca 38 0a                 a3 = a1 * t1
 34099: 3e 08 e0 00 03           u64 [0x300e0] = a1
 34104: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
 34114: d6 8a 08                 a1 = a3 mulhu a1
 34117: 98 8b 02                 a4 = a1 >> 0x2
 34120: 84 88 fc                 a1 = a1 & 0xfffffffffffffffc
 34123: c8 b8 08                 a1 = a1 + a4
 34126: c9 8a 0a                 a3 = a3 - a1
 34129: 7b 17 90 00              u64 [sp + 0x90] = a0
 34133: 7b 19 98 00              u64 [sp + 0x98] = a2
 34137: 7b 1a a0 00              u64 [sp + 0xa0] = a3
 34141: 95 17 90 00              a0 = sp + 0x90
 34145: 95 18 b0 00              a1 = sp + 0xb0
 34149: 50 20 6e 02 77 ad        ra = 622, jump @1011
      :                          @2273 [@dyn 311]
 34155: 7b 17 68 02              u64 [sp + 0x268] = a0
 34159: 95 17 68 02              a0 = sp + 0x268
 34163: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 34167: 33 07 a8 03              a0 = 0x3a8
 34171: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 34175: 33 07 40 0b 01           a0 = 0x10b40
 34180: 7b 17 50 01              u64 [sp + 0x150] = a0
 34184: 49 21 58 01 01           u64 [sp + 344] = 0x1
 34189: 49 21 70 01              u64 [sp + 368] = 0
 34193: 95 17 c8 00              a0 = sp + 0xc8
 34197: 7b 17 60 01              u64 [sp + 0x160] = a0
 34201: 49 21 68 01 01           u64 [sp + 360] = 0x1
 34206: 95 17 f8 00              a0 = sp + 0xf8
 34210: 95 18 50 01              a1 = sp + 0x150
 34214: 50 20 70 02 1f 9a        ra = 624, jump @637
      :                          @2274 [@dyn 312]
 34220: 82 15 00 01              s0 = u64 [sp + 0x100]
 34224: 82 1b 08 01              a4 = u64 [sp + 0x108]
 34228: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 34232: 33 07 02                 a0 = 0x2
 34235: 33 08                    a1 = 0
 34237: 33 09                    a2 = 0
 34239: 64 5a                    a3 = s0
 34241: 33 00 72 02              ra = 0x272
 34245: 0a 64                    ecalli 100 // 'log'
 34247: 01                       fallthrough
      :                          @2275 [@dyn 313]
 34248: 82 17 10                 a0 = u64 [sp + 0x10]
 34251: c8 67 07                 a0 = a0 + s1
 34254: 53 37 00 00 ff 25        jump @2281 if a0 <u 4294901760
      :                          @2276
 34260: 33 07 10 01 03           a0 = 0x30110
 34265: 95 77 00 00 01           a0 = a0 + 0x10000
 34270: 01                       fallthrough
      :                          @2277
 34271: 82 78                    a1 = u64 [a0]
 34273: c9 87 09                 a2 = a0 - a1
 34276: ab 59 0f                 jump @2281 if a2 != s0
      :                          @2278
 34279: c9 68 09                 a2 = a1 - s1
 34282: 01                       fallthrough
      :                          @2279
 34283: 82 7a                    a3 = u64 [a0]
 34285: ab 8a f2                 jump @2277 if a3 != a1
      :                          @2280
 34288: 7b 79                    u64 [a0] = a2
 34290: 01                       fallthrough
      :                          @2281
 34291: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 34296: 97 78 0d                 a1 = a0 << 0xd
 34299: d3 87 07                 a0 = a0 ^ a1
 34302: 98 78 07                 a1 = a0 >> 0x7
 34305: d3 87 07                 a0 = a0 ^ a1
 34308: 97 78 11                 a1 = a0 << 0x11
 34311: d3 87 07                 a0 = a0 ^ a1
 34314: 3a 08 a0 00 03           a1 = u64 [0x300a0]
 34319: 82 19 08                 a2 = u64 [sp + 0x8]
 34322: ca 97 09                 a2 = a0 * a2
 34325: 3e 07 e0 00 03           u64 [0x300e0] = a0
 34330: d6 89 07                 a0 = a2 mulhu a1
 34333: 98 77 12                 a0 = a0 >> 0x12
 34336: 96 77 40 42 0f           a0 = a0 * 0xf4240
 34341: c9 79 09                 a2 = a2 - a0
 34344: 7b 19 80 00              u64 [sp + 0x80] = a2
 34348: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 34353: 97 78 0d                 a1 = a0 << 0xd
 34356: d3 87 07                 a0 = a0 ^ a1
 34359: 98 78 07                 a1 = a0 >> 0x7
 34362: d3 78 08                 a1 = a1 ^ a0
 34365: 97 87 11                 a0 = a1 << 0x11
 34368: d3 87 07                 a0 = a0 ^ a1
 34371: 3e 07 e0 00 03           u64 [0x300e0] = a0
 34376: 82 17 80 00              a0 = u64 [sp + 0x80]
 34380: 84 88 03                 a1 = a1 & 0x3
 34383: 95 88 02                 a1 = a1 + 0x2
 34386: 7b 18 88 00              u64 [sp + 0x88] = a1
 34390: 33 00 74 02              ra = 0x274
 34394: 33 03                    t1 = 0
 34396: 33 09 40                 a2 = 0x40
 34399: c1 89 09                 i32 a2 = a2 /u a1
 34402: 9b 99 01                 a2 = 0x1 << a2
 34405: e6 97 0a                 a3 = minu(a0, a2)
 34408: 95 a4 01                 t2 = a3 + 0x1
 34411: 83 82 01                 i32 t0 = a1 + 0x1
 34414: 33 0b ff                 a4 = 0xffffffffffffffff
 34417: 28 73 a3                 jump @799
      :                          @2282 [@dyn 314]
 34420: 7b 17 68 02              u64 [sp + 0x268] = a0
 34424: 95 17 80 00              a0 = sp + 0x80
 34428: 7b 17 50 01              u64 [sp + 0x150] = a0
 34432: 33 07 50 03              a0 = 0x350
 34436: 7b 17 58 01              u64 [sp + 0x158] = a0
 34440: 95 18 88 00              a1 = sp + 0x88
 34444: 7b 18 60 01              u64 [sp + 0x160] = a1
 34448: 7b 17 68 01              u64 [sp + 0x168] = a0
 34452: 95 18 68 02              a1 = sp + 0x268
 34456: 7b 18 70 01              u64 [sp + 0x170] = a1
 34460: 7b 17 78 01              u64 [sp + 0x178] = a0
 34464: 33 07 60 0b 01           a0 = 0x10b60
 34469: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 34473: 49 21 00 01 03           u64 [sp + 256] = 0x3
 34478: 49 21 18 01              u64 [sp + 280] = 0
 34482: 95 18 50 01              a1 = sp + 0x150
 34486: 7b 18 08 01              u64 [sp + 0x108] = a1
 34490: 49 21 10 01 03           u64 [sp + 272] = 0x3
 34495: 95 17 c8 00              a0 = sp + 0xc8
 34499: 95 18 f8 00              a1 = sp + 0xf8
 34503: 50 20 76 02 fe 98        ra = 630, jump @637
      :                          @2283 [@dyn 315]
 34509: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 34513: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 34517: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 34521: 33 07 02                 a0 = 0x2
 34524: 33 08                    a1 = 0
 34526: 33 09                    a2 = 0
 34528: 64 5a                    a3 = s0
 34530: 33 00 78 02              ra = 0x278
 34534: 0a 64                    ecalli 100 // 'log'
 34536: 01                       fallthrough
      :                          @2284 [@dyn 316]
 34537: 82 17 10                 a0 = u64 [sp + 0x10]
 34540: c8 67 07                 a0 = a0 + s1
 34543: 55 37 00 00 ff 09        jump @2286 if a0 >=u 4294901760
      :                          @2285
 34549: 28 a3 19                 jump @2553
      :                          @2286
 34552: 33 07 10 01 03           a0 = 0x30110
 34557: 95 77 00 00 01           a0 = a0 + 0x10000
 34562: 01                       fallthrough
      :                          @2287
 34563: 82 78                    a1 = u64 [a0]
 34565: c9 87 09                 a2 = a0 - a1
 34568: aa 59 06                 jump @2289 if a2 == s0
      :                          @2288
 34571: 28 8d 19                 jump @2553
      :                          @2289
 34574: c9 68 09                 a2 = a1 - s1
 34577: 01                       fallthrough
      :                          @2290
 34578: 82 7a                    a3 = u64 [a0]
 34580: ab 8a ef                 jump @2287 if a3 != a1
      :                          @2291
 34583: 7b 79                    u64 [a0] = a2
 34585: 33 0b                    a4 = 0
 34587: 01                       fallthrough
      :                          @2292
 34588: ab 8a e7                 jump @2287 if a3 != a1
      :                          @2293
 34591: 28 79 19                 jump @2553
      :                          @2294 [@dyn 317]
 34594: 49 21 30 01              u64 [sp + 304] = 0
 34598: 49 21 28 01              u64 [sp + 296] = 0
 34602: 49 21 20 01              u64 [sp + 288] = 0
 34606: 49 21 18 01              u64 [sp + 280] = 0
 34610: 49 21 10 01              u64 [sp + 272] = 0
 34614: 49 21 08 01              u64 [sp + 264] = 0
 34618: 49 21 00 01              u64 [sp + 256] = 0
 34622: 49 21 f8 00              u64 [sp + 248] = 0
 34626: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 34631: 97 89 0d                 a2 = a1 << 0xd
 34634: d3 89 09                 a2 = a2 ^ a1
 34637: 98 9a 07                 a3 = a2 >> 0x7
 34640: 3a 08 60 00 03           a1 = u64 [0x30060]
 34645: d3 a9 09                 a2 = a2 ^ a3
 34648: 97 9a 11                 a3 = a2 << 0x11
 34651: d3 a9 09                 a2 = a2 ^ a3
 34654: ca 89 0a                 a3 = a2 * a1
 34657: 3e 09 e0 00 03           u64 [0x300e0] = a2
 34662: 14 09 f1 f0 f0 f0 f0 f0 f0 f0 a2 = 0xf0f0f0f0f0f0f0f1
 34672: d6 9a 0b                 a4 = a3 mulhu a2
 34675: 98 bc 04                 a5 = a4 >> 0x4
 34678: 84 bb f0                 a4 = a4 & 0xfffffffffffffff0
 34681: c8 cb 0b                 a4 = a4 + a5
 34684: c9 ba 0a                 a3 = a3 - a4
 34687: 7b 1a f8 00              u64 [sp + 0xf8] = a3
 34691: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34696: 97 ab 0d                 a4 = a3 << 0xd
 34699: d3 ba 0a                 a3 = a3 ^ a4
 34702: 98 ab 07                 a4 = a3 >> 0x7
 34705: d3 ba 0a                 a3 = a3 ^ a4
 34708: 97 ab 11                 a4 = a3 << 0x11
 34711: d3 ba 0a                 a3 = a3 ^ a4
 34714: ca 8a 0b                 a4 = a3 * a1
 34717: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34722: d6 9b 0a                 a3 = a4 mulhu a2
 34725: 98 ac 04                 a5 = a3 >> 0x4
 34728: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34731: c8 ca 0a                 a3 = a3 + a5
 34734: c9 ab 0b                 a4 = a4 - a3
 34737: 7b 1b 00 01              u64 [sp + 0x100] = a4
 34741: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34746: 97 ab 0d                 a4 = a3 << 0xd
 34749: d3 ba 0a                 a3 = a3 ^ a4
 34752: 98 ab 07                 a4 = a3 >> 0x7
 34755: d3 ba 0a                 a3 = a3 ^ a4
 34758: 97 ab 11                 a4 = a3 << 0x11
 34761: d3 ba 0a                 a3 = a3 ^ a4
 34764: ca 8a 0b                 a4 = a3 * a1
 34767: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34772: d6 9b 0a                 a3 = a4 mulhu a2
 34775: 98 ac 04                 a5 = a3 >> 0x4
 34778: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34781: c8 ca 0a                 a3 = a3 + a5
 34784: c9 ab 0b                 a4 = a4 - a3
 34787: 7b 1b 08 01              u64 [sp + 0x108] = a4
 34791: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34796: 97 ab 0d                 a4 = a3 << 0xd
 34799: d3 ba 0a                 a3 = a3 ^ a4
 34802: 98 ab 07                 a4 = a3 >> 0x7
 34805: d3 ba 0a                 a3 = a3 ^ a4
 34808: 97 ab 11                 a4 = a3 << 0x11
 34811: d3 ba 0a                 a3 = a3 ^ a4
 34814: ca 8a 0b                 a4 = a3 * a1
 34817: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34822: d6 9b 0a                 a3 = a4 mulhu a2
 34825: 98 ac 04                 a5 = a3 >> 0x4
 34828: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34831: c8 ca 0a                 a3 = a3 + a5
 34834: c9 ab 0b                 a4 = a4 - a3
 34837: 7b 1b 10 01              u64 [sp + 0x110] = a4
 34841: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34846: 97 ab 0d                 a4 = a3 << 0xd
 34849: d3 ba 0a                 a3 = a3 ^ a4
 34852: 98 ab 07                 a4 = a3 >> 0x7
 34855: d3 ba 0a                 a3 = a3 ^ a4
 34858: 97 ab 11                 a4 = a3 << 0x11
 34861: d3 ba 0a                 a3 = a3 ^ a4
 34864: ca 8a 0b                 a4 = a3 * a1
 34867: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34872: d6 9b 0a                 a3 = a4 mulhu a2
 34875: 98 ac 04                 a5 = a3 >> 0x4
 34878: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34881: c8 ca 0a                 a3 = a3 + a5
 34884: c9 ab 0b                 a4 = a4 - a3
 34887: 7b 1b 18 01              u64 [sp + 0x118] = a4
 34891: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34896: 97 ab 0d                 a4 = a3 << 0xd
 34899: d3 ba 0a                 a3 = a3 ^ a4
 34902: 98 ab 07                 a4 = a3 >> 0x7
 34905: d3 ba 0a                 a3 = a3 ^ a4
 34908: 97 ab 11                 a4 = a3 << 0x11
 34911: d3 ba 0a                 a3 = a3 ^ a4
 34914: ca 8a 0b                 a4 = a3 * a1
 34917: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34922: d6 9b 0a                 a3 = a4 mulhu a2
 34925: 98 ac 04                 a5 = a3 >> 0x4
 34928: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34931: c8 ca 0a                 a3 = a3 + a5
 34934: c9 ab 0b                 a4 = a4 - a3
 34937: 7b 1b 20 01              u64 [sp + 0x120] = a4
 34941: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34946: 97 ab 0d                 a4 = a3 << 0xd
 34949: d3 ba 0a                 a3 = a3 ^ a4
 34952: 98 ab 07                 a4 = a3 >> 0x7
 34955: d3 ba 0a                 a3 = a3 ^ a4
 34958: 97 ab 11                 a4 = a3 << 0x11
 34961: d3 ba 0a                 a3 = a3 ^ a4
 34964: ca 8a 0b                 a4 = a3 * a1
 34967: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34972: d6 9b 0a                 a3 = a4 mulhu a2
 34975: 98 ac 04                 a5 = a3 >> 0x4
 34978: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34981: c8 ca 0a                 a3 = a3 + a5
 34984: c9 ab 0b                 a4 = a4 - a3
 34987: 7b 1b 28 01              u64 [sp + 0x128] = a4
 34991: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34996: 97 ab 0d                 a4 = a3 << 0xd
 34999: d3 ba 0a                 a3 = a3 ^ a4
 35002: 98 ab 07                 a4 = a3 >> 0x7
 35005: d3 ba 0a                 a3 = a3 ^ a4
 35008: 97 ab 11                 a4 = a3 << 0x11
 35011: d3 ba 0a                 a3 = a3 ^ a4
 35014: ca 8a 08                 a1 = a3 * a1
 35017: 3e 0a e0 00 03           u64 [0x300e0] = a3
 35022: d6 98 07                 a0 = a1 mulhu a2
 35025: 98 79 04                 a2 = a0 >> 0x4
 35028: 84 77 f0                 a0 = a0 & 0xfffffffffffffff0
 35031: c8 97 07                 a0 = a0 + a2
 35034: c9 78 08                 a1 = a1 - a0
 35037: 7b 18 30 01              u64 [sp + 0x130] = a1
 35041: 95 15 50 01              s0 = sp + 0x150
 35045: 95 17 50 01              a0 = sp + 0x150
 35049: 95 18 f8 00              a1 = sp + 0xf8
 35053: 95 16 f8 00              s1 = sp + 0xf8
 35057: 33 00 7c 02              ra = 0x27c
 35061: 95 11 60 ff              sp = sp + 0xffffffffffffff60
 35065: 7b 10 98 00              u64 [sp + 0x98] = ra
 35069: 7b 15 90 00              u64 [sp + 0x90] = s0
 35073: 7b 16 88 00              u64 [sp + 0x88] = s1
 35077: 7b 17                    u64 [sp] = a0
 35079: 33 00                    ra = 0
 35081: 82 87                    a0 = u64 [a1]
 35083: 14 0a f1 f0 f0 f0 f0 f0 f0 f0 a3 = 0xf0f0f0f0f0f0f0f1
 35093: d6 a7 09                 a2 = a0 mulhu a3
 35096: 98 9b 04                 a4 = a2 >> 0x4
 35099: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 35102: c8 b9 09                 a2 = a2 + a4
 35105: c9 97 07                 a0 = a0 - a2
 35108: 82 89 08                 a2 = u64 [a1 + 0x8]
 35111: 82 8c 10                 a5 = u64 [a1 + 0x10]
 35114: 82 86 18                 s1 = u64 [a1 + 0x18]
 35117: 82 85 20                 s0 = u64 [a1 + 0x20]
 35120: 7b 17 40                 u64 [sp + 0x40] = a0
 35123: 7b 19 38                 u64 [sp + 0x38] = a2
 35126: c8 97 07                 a0 = a0 + a2
 35129: d6 a7 09                 a2 = a0 mulhu a3
 35132: 98 9b 04                 a4 = a2 >> 0x4
 35135: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 35138: c8 b9 09                 a2 = a2 + a4
 35141: 7b 1c 30                 u64 [sp + 0x30] = a5
 35144: c8 c7 07                 a0 = a0 + a5
 35147: c9 97 07                 a0 = a0 - a2
 35150: d6 a7 09                 a2 = a0 mulhu a3
 35153: 98 9b 04                 a4 = a2 >> 0x4
 35156: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 35159: c8 b9 09                 a2 = a2 + a4
 35162: 7b 16 28                 u64 [sp + 0x28] = s1
 35165: c8 67 07                 a0 = a0 + s1
 35168: c9 97 07                 a0 = a0 - a2
 35171: d6 a7 09                 a2 = a0 mulhu a3
 35174: 98 9b 04                 a4 = a2 >> 0x4
 35177: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 35180: c8 b9 09                 a2 = a2 + a4
 35183: 82 8c 28                 a5 = u64 [a1 + 0x28]
 35186: 7b 15 20                 u64 [sp + 0x20] = s0
 35189: c8 57 07                 a0 = a0 + s0
 35192: c9 97 07                 a0 = a0 - a2
 35195: d6 a7 09                 a2 = a0 mulhu a3
 35198: 98 9b 04                 a4 = a2 >> 0x4
 35201: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 35204: c8 b9 09                 a2 = a2 + a4
 35207: 7b 1c 18                 u64 [sp + 0x18] = a5
 35210: c8 c7 07                 a0 = a0 + a5
 35213: c9 97 07                 a0 = a0 - a2
 35216: 82 8c 30                 a5 = u64 [a1 + 0x30]
 35219: d6 a7 09                 a2 = a0 mulhu a3
 35222: 98 9b 04                 a4 = a2 >> 0x4
 35225: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 35228: c8 b9 09                 a2 = a2 + a4
 35231: 7b 1c 10                 u64 [sp + 0x10] = a5
 35234: c8 c7 07                 a0 = a0 + a5
 35237: c9 97 07                 a0 = a0 - a2
 35240: 7b 17 08                 u64 [sp + 0x8] = a0
 35243: 49 21 80 00              u64 [sp + 128] = 0
 35247: 49 11 78                 u64 [sp + 120] = 0
 35250: 49 11 70                 u64 [sp + 112] = 0
 35253: 49 11 68                 u64 [sp + 104] = 0
 35256: 49 11 60                 u64 [sp + 96] = 0
 35259: 49 11 58                 u64 [sp + 88] = 0
 35262: 49 11 50                 u64 [sp + 80] = 0
 35265: 49 11 48                 u64 [sp + 72] = 0
 35268: 82 88 38                 a1 = u64 [a1 + 0x38]
 35271: 28 0f ab                 jump @1033
      :                          @2295 [@dyn 318]
 35274: 7b 16 90 00              u64 [sp + 0x90] = s1
 35278: 33 07 80 00              a0 = 0x80
 35282: 7b 17 98 00              u64 [sp + 0x98] = a0
 35286: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 35290: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 35294: 33 07 90 0b 01           a0 = 0x10b90
 35299: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 35303: 49 21 d0 00 02           u64 [sp + 208] = 0x2
 35308: 49 21 e8 00              u64 [sp + 232] = 0
 35312: 95 18 90 00              a1 = sp + 0x90
 35316: 7b 18 d8 00              u64 [sp + 0xd8] = a1
 35320: 49 21 e0 00 02           u64 [sp + 224] = 0x2
 35325: 95 17 b0 00              a0 = sp + 0xb0
 35329: 95 18 c8 00              a1 = sp + 0xc8
 35333: 50 20 7e 02 c0 95        ra = 638, jump @637
      :                          @2296 [@dyn 319]
 35339: 82 15 b8 00              s0 = u64 [sp + 0xb8]
 35343: 82 1b c0 00              a4 = u64 [sp + 0xc0]
 35347: 82 16 b0 00              s1 = u64 [sp + 0xb0]
 35351: 33 07 02                 a0 = 0x2
 35354: 33 08                    a1 = 0
 35356: 33 09                    a2 = 0
 35358: 64 5a                    a3 = s0
 35360: 33 00 80 02              ra = 0x280
 35364: 0a 64                    ecalli 100 // 'log'
 35366: 01                       fallthrough
      :                          @2297 [@dyn 320]
 35367: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 35372: 55 38 00 00 ff 09        jump @2299 if a1 >=u 4294901760
      :                          @2298
 35378: 28 66 16                 jump @2553
      :                          @2299
 35381: 33 07 10 01 03           a0 = 0x30110
 35386: 95 77 00 00 01           a0 = a0 + 0x10000
 35391: 01                       fallthrough
      :                          @2300
 35392: 82 78                    a1 = u64 [a0]
 35394: c9 87 09                 a2 = a0 - a1
 35397: aa 59 06                 jump @2302 if a2 == s0
      :                          @2301
 35400: 28 50 16                 jump @2553
      :                          @2302
 35403: c9 68 09                 a2 = a1 - s1
 35406: 01                       fallthrough
      :                          @2303
 35407: 82 7a                    a3 = u64 [a0]
 35409: ab 8a ef                 jump @2300 if a3 != a1
      :                          @2304
 35412: 7b 79                    u64 [a0] = a2
 35414: 33 0b                    a4 = 0
 35416: 01                       fallthrough
      :                          @2305
 35417: ab 8a e7                 jump @2300 if a3 != a1
      :                          @2306
 35420: 28 3c 16                 jump @2553
      :                          @2307 [@dyn 321]
 35423: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 35428: 97 89 0d                 a2 = a1 << 0xd
 35431: d3 98 08                 a1 = a1 ^ a2
 35434: 98 89 07                 a2 = a1 >> 0x7
 35437: d3 98 08                 a1 = a1 ^ a2
 35440: 97 89 11                 a2 = a1 << 0x11
 35443: d3 98 08                 a1 = a1 ^ a2
 35446: 3a 09 60 00 03           a2 = u64 [0x30060]
 35451: 3a 0a 88 00 03           a3 = u64 [0x30088]
 35456: 3e 08 e0 00 03           u64 [0x300e0] = a1
 35461: ca 98 07                 a0 = a1 * a2
 35464: d6 a7 08                 a1 = a0 mulhu a3
 35467: 98 88 0c                 a1 = a1 >> 0xc
 35470: 96 88 41 0d 03           a1 = a1 * 0x30d41
 35475: 95 77 60 79 fe           a0 = a0 + 0xfffffffffffe7960
 35480: bf 87 07                 i32 a0 = a0 - a1
 35483: 7a 17 68 02              u32 [sp + 0x268] = a0
 35487: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 35490: 7b 15 08                 u64 [sp + 0x8] = s0
 35493: 7b 16                    u64 [sp] = s1
 35495: 83 78                    i32 a1 = a0 + 0
 35497: 89 88                    a1 = a1 <s 0
 35499: 33 0a 0f c9 00           a3 = 0xc90f
 35504: 93 8a f1 36 ff           a3 = 0xffffffffffff36f1 if a1 == 0
 35509: 33 0b 8b 64 ff           a4 = 0xffffffffffff648b
 35514: 93 8b 75 9b 00           a4 = 0x9b75 if a1 == 0
 35519: be 7a 02                 i32 t0 = a3 + a0
 35522: 99 b8 01                 a1 = a4 >>a 0x1
 35525: 89 2a                    a3 = t0 <s 0
 35527: 33 07 b1 76              a0 = 0x76b1
 35531: 93 a7 4f 89              a0 = 0xffffffffffff894f if a3 == 0
 35535: 9a 8c                    a5 = -a1
 35537: db a8 0c                 a5 = a1 if a3 != 0
 35540: 83 c3 75 9b 00           i32 t1 = a5 + 0x9b75
 35545: 33 0c 46 b2              a5 = 0xffffffffffffb246
 35549: 93 ac ba 4d              a5 = 0x4dba if a3 == 0
 35553: c8 cb 0b                 a4 = a4 + a5
 35556: be 72 04                 i32 t2 = t0 + a0
 35559: 8b 38 02                 i32 a1 = t1 >> 0x2
 35562: 99 ba 02                 a3 = a4 >>a 0x2
 35565: 89 4c                    a5 = t2 <s 0
 35567: 33 09 b6 3e              a2 = 0x3eb6
 35571: 93 c9 4a c1              a2 = 0xffffffffffffc14a if a5 == 0
 35575: 9a a7                    a0 = -a3
 35577: db ca 07                 a0 = a3 if a5 != 0
 35580: be 73 02                 i32 t0 = t1 + a0
 35583: 9a 8a                    a3 = -a1
 35585: da c8 0a                 a3 = a1 if a5 == 0
 35588: c8 ba 0a                 a3 = a3 + a4
 35591: be 94 04                 i32 t2 = t2 + a2
 35594: 8b 29 03                 i32 a2 = t0 >> 0x3
 35597: 99 ab 03                 a4 = a3 >>a 0x3
 35600: 89 4c                    a5 = t2 <s 0
 35602: 33 07 d9 1f              a0 = 0x1fd9
 35606: 93 c7 27 e0              a0 = 0xffffffffffffe027 if a5 == 0
 35610: 9a b8                    a1 = -a4
 35612: db cb 08                 a1 = a4 if a5 != 0
 35615: c8 28 08                 a1 = a1 + t0
 35618: 9a 9b                    a4 = -a2
 35620: da c9 0b                 a4 = a2 if a5 == 0
 35623: be ba 0a                 i32 a3 = a3 + a4
 35626: be 74 06                 i32 s1 = t2 + a0
 35629: 8c 89 04                 i32 a2 = a1 >>a 0x4
 35632: 8c ab 04                 i32 a4 = a3 >>a 0x4
 35635: 89 6c                    a5 = s1 <s 0
 35637: 33 02 00 f0              t0 = 0xfffffffffffff000
 35641: 33 03 ff ef              t1 = 0xffffffffffffefff
 35645: 33 04 00 10              t2 = 0x1000
 35649: 33 05 01 10              s0 = 0x1001
 35653: da c3 05                 s0 = t1 if a5 == 0
 35656: 9a b7                    a0 = -a4
 35658: db cb 07                 a0 = a4 if a5 != 0
 35661: c8 87 07                 a0 = a0 + a1
 35664: 9a 98                    a1 = -a2
 35666: da c9 08                 a1 = a2 if a5 == 0
 35669: be a8 08                 i32 a1 = a1 + a3
 35672: be 65 05                 i32 s0 = s0 + s1
 35675: 8c 79 05                 i32 a2 = a0 >>a 0x5
 35678: 8c 8a 05                 i32 a3 = a1 >>a 0x5
 35681: 89 5b                    a4 = s0 <s 0
 35683: 33 06 01 08              s1 = 0x801
 35687: 93 b6 ff f7              s1 = 0xfffffffffffff7ff if a4 == 0
 35691: 9a ac                    a5 = -a3
 35693: db ba 0c                 a5 = a3 if a4 != 0
 35696: c8 c7 07                 a0 = a0 + a5
 35699: 9a 9a                    a3 = -a2
 35701: da b9 0a                 a3 = a2 if a4 == 0
 35704: be a8 08                 i32 a1 = a1 + a3
 35707: be 65 05                 i32 s0 = s0 + s1
 35710: 8c 79 06                 i32 a2 = a0 >>a 0x6
 35713: 8c 8a 06                 i32 a3 = a1 >>a 0x6
 35716: 89 5b                    a4 = s0 <s 0
 35718: 33 06 01 04              s1 = 0x401
 35722: 93 b6 ff fb              s1 = 0xfffffffffffffbff if a4 == 0
 35726: 9a ac                    a5 = -a3
 35728: db ba 0c                 a5 = a3 if a4 != 0
 35731: c8 c7 07                 a0 = a0 + a5
 35734: 9a 9a                    a3 = -a2
 35736: da b9 0a                 a3 = a2 if a4 == 0
 35739: be a8 08                 i32 a1 = a1 + a3
 35742: be 65 05                 i32 s0 = s0 + s1
 35745: 8c 79 07                 i32 a2 = a0 >>a 0x7
 35748: 8c 8a 07                 i32 a3 = a1 >>a 0x7
 35751: 89 5b                    a4 = s0 <s 0
 35753: 33 06 00 02              s1 = 0x200
 35757: 93 b6 00 fe              s1 = 0xfffffffffffffe00 if a4 == 0
 35761: 9a ac                    a5 = -a3
 35763: db ba 0c                 a5 = a3 if a4 != 0
 35766: c8 c7 07                 a0 = a0 + a5
 35769: 9a 9a                    a3 = -a2
 35771: da b9 0a                 a3 = a2 if a4 == 0
 35774: be a8 08                 i32 a1 = a1 + a3
 35777: be 65 05                 i32 s0 = s0 + s1
 35780: 8c 79 08                 i32 a2 = a0 >>a 0x8
 35783: 8c 8a 08                 i32 a3 = a1 >>a 0x8
 35786: 89 5b                    a4 = s0 <s 0
 35788: 33 06 00 01              s1 = 0x100
 35792: 93 b6 00 ff              s1 = 0xffffffffffffff00 if a4 == 0
 35796: 9a ac                    a5 = -a3
 35798: db ba 0c                 a5 = a3 if a4 != 0
 35801: c8 c7 07                 a0 = a0 + a5
 35804: 9a 9a                    a3 = -a2
 35806: da b9 0a                 a3 = a2 if a4 == 0
 35809: be a8 08                 i32 a1 = a1 + a3
 35812: be 65 05                 i32 s0 = s0 + s1
 35815: 8c 79 09                 i32 a2 = a0 >>a 0x9
 35818: 8c 8a 09                 i32 a3 = a1 >>a 0x9
 35821: 89 5b                    a4 = s0 <s 0
 35823: 33 06 80 00              s1 = 0x80
 35827: 93 b6 80                 s1 = 0xffffffffffffff80 if a4 == 0
 35830: 9a ac                    a5 = -a3
 35832: db ba 0c                 a5 = a3 if a4 != 0
 35835: c8 c7 07                 a0 = a0 + a5
 35838: 9a 9a                    a3 = -a2
 35840: da b9 0a                 a3 = a2 if a4 == 0
 35843: be a8 08                 i32 a1 = a1 + a3
 35846: be 65 05                 i32 s0 = s0 + s1
 35849: 8c 79 0a                 i32 a2 = a0 >>a 0xa
 35852: 8c 8a 0a                 i32 a3 = a1 >>a 0xa
 35855: 89 5b                    a4 = s0 <s 0
 35857: 33 06 40                 s1 = 0x40
 35860: 93 b6 c0                 s1 = 0xffffffffffffffc0 if a4 == 0
 35863: 9a ac                    a5 = -a3
 35865: db ba 0c                 a5 = a3 if a4 != 0
 35868: c8 c7 07                 a0 = a0 + a5
 35871: 9a 9a                    a3 = -a2
 35873: da b9 0a                 a3 = a2 if a4 == 0
 35876: be a8 08                 i32 a1 = a1 + a3
 35879: be 65 05                 i32 s0 = s0 + s1
 35882: 8c 79 0b                 i32 a2 = a0 >>a 0xb
 35885: 8c 8a 0b                 i32 a3 = a1 >>a 0xb
 35888: 89 5b                    a4 = s0 <s 0
 35890: 33 06 20                 s1 = 0x20
 35893: 93 b6 e0                 s1 = 0xffffffffffffffe0 if a4 == 0
 35896: 9a ac                    a5 = -a3
 35898: db ba 0c                 a5 = a3 if a4 != 0
 35901: c8 c7 07                 a0 = a0 + a5
 35904: 9a 9a                    a3 = -a2
 35906: da b9 0a                 a3 = a2 if a4 == 0
 35909: be a8 08                 i32 a1 = a1 + a3
 35912: be 65 05                 i32 s0 = s0 + s1
 35915: 8c 79 0c                 i32 a2 = a0 >>a 0xc
 35918: 8c 8a 0c                 i32 a3 = a1 >>a 0xc
 35921: 89 5b                    a4 = s0 <s 0
 35923: 33 06 10                 s1 = 0x10
 35926: 93 b6 f0                 s1 = 0xfffffffffffffff0 if a4 == 0
 35929: 9a ac                    a5 = -a3
 35931: db ba 0c                 a5 = a3 if a4 != 0
 35934: c8 c7 07                 a0 = a0 + a5
 35937: 9a 9a                    a3 = -a2
 35939: da b9 0a                 a3 = a2 if a4 == 0
 35942: be a8 08                 i32 a1 = a1 + a3
 35945: be 65 05                 i32 s0 = s0 + s1
 35948: 8c 79 0d                 i32 a2 = a0 >>a 0xd
 35951: 8c 8a 0d                 i32 a3 = a1 >>a 0xd
 35954: 89 5b                    a4 = s0 <s 0
 35956: 33 06 08                 s1 = 0x8
 35959: 93 b6 f8                 s1 = 0xfffffffffffffff8 if a4 == 0
 35962: 9a ac                    a5 = -a3
 35964: db ba 0c                 a5 = a3 if a4 != 0
 35967: c8 c7 07                 a0 = a0 + a5
 35970: 9a 9a                    a3 = -a2
 35972: da b9 0a                 a3 = a2 if a4 == 0
 35975: be a8 08                 i32 a1 = a1 + a3
 35978: be 65 05                 i32 s0 = s0 + s1
 35981: 8c 79 0e                 i32 a2 = a0 >>a 0xe
 35984: 8c 8a 0e                 i32 a3 = a1 >>a 0xe
 35987: 89 5b                    a4 = s0 <s 0
 35989: 33 06 04                 s1 = 0x4
 35992: 93 b6 fc                 s1 = 0xfffffffffffffffc if a4 == 0
 35995: 9a ac                    a5 = -a3
 35997: db ba 0c                 a5 = a3 if a4 != 0
 36000: c8 c7 07                 a0 = a0 + a5
 36003: 9a 9a                    a3 = -a2
 36005: da b9 0a                 a3 = a2 if a4 == 0
 36008: be a8 08                 i32 a1 = a1 + a3
 36011: be 65 05                 i32 s0 = s0 + s1
 36014: 8c 79 0f                 i32 a2 = a0 >>a 0xf
 36017: 8c 8a 0f                 i32 a3 = a1 >>a 0xf
 36020: 89 5b                    a4 = s0 <s 0
 36022: 9a ac                    a5 = -a3
 36024: db ba 0c                 a5 = a3 if a4 != 0
 36027: be c7 07                 i32 a0 = a0 + a5
 36030: 9a 9a                    a3 = -a2
 36032: da b9 0a                 a3 = a2 if a4 == 0
 36035: be a8 08                 i32 a1 = a1 + a3
 36038: 82 15 08                 s0 = u64 [sp + 0x8]
 36041: 82 16                    s1 = u64 [sp]
 36043: 95 11 10                 sp = sp + 0x10
 36046: 7a 17 b0 00              u32 [sp + 0xb0] = a0
 36050: 7a 18 90 00              u32 [sp + 0x90] = a1
 36054: 95 17 68 02              a0 = sp + 0x268
 36058: 7b 17 50 01              u64 [sp + 0x150] = a0
 36062: 33 07 a6 03              a0 = 0x3a6
 36066: 7b 17 58 01              u64 [sp + 0x158] = a0
 36070: 95 18 b0 00              a1 = sp + 0xb0
 36074: 7b 18 60 01              u64 [sp + 0x160] = a1
 36078: 7b 17 68 01              u64 [sp + 0x168] = a0
 36082: 95 18 90 00              a1 = sp + 0x90
 36086: 7b 18 70 01              u64 [sp + 0x170] = a1
 36090: 7b 17 78 01              u64 [sp + 0x178] = a0
 36094: 33 07 c8 0b 01           a0 = 0x10bc8
 36099: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 36103: 49 21 00 01 03           u64 [sp + 256] = 0x3
 36108: 49 21 18 01              u64 [sp + 280] = 0
 36112: 95 18 50 01              a1 = sp + 0x150
 36116: 7b 18 08 01              u64 [sp + 0x108] = a1
 36120: 49 21 10 01 03           u64 [sp + 272] = 0x3
 36125: 95 17 c8 00              a0 = sp + 0xc8
 36129: 95 18 f8 00              a1 = sp + 0xf8
 36133: 50 20 84 02 a0 92        ra = 644, jump @637
      :                          @2308 [@dyn 322]
 36139: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 36143: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 36147: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 36151: 33 07 02                 a0 = 0x2
 36154: 33 08                    a1 = 0
 36156: 33 09                    a2 = 0
 36158: 64 5a                    a3 = s0
 36160: 33 00 86 02              ra = 0x286
 36164: 0a 64                    ecalli 100 // 'log'
 36166: 01                       fallthrough
      :                          @2309 [@dyn 323]
 36167: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 36172: 55 38 00 00 ff 09        jump @2311 if a1 >=u 4294901760
      :                          @2310
 36178: 28 46 13                 jump @2553
      :                          @2311
 36181: 33 07 10 01 03           a0 = 0x30110
 36186: 95 77 00 00 01           a0 = a0 + 0x10000
 36191: 01                       fallthrough
      :                          @2312
 36192: 82 78                    a1 = u64 [a0]
 36194: c9 87 09                 a2 = a0 - a1
 36197: aa 59 06                 jump @2314 if a2 == s0
      :                          @2313
 36200: 28 30 13                 jump @2553
      :                          @2314
 36203: c9 68 09                 a2 = a1 - s1
 36206: 01                       fallthrough
      :                          @2315
 36207: 82 7a                    a3 = u64 [a0]
 36209: ab 8a ef                 jump @2312 if a3 != a1
      :                          @2316
 36212: 7b 79                    u64 [a0] = a2
 36214: 33 0b                    a4 = 0
 36216: 01                       fallthrough
      :                          @2317
 36217: ab 8a e7                 jump @2312 if a3 != a1
      :                          @2318
 36220: 28 1c 13                 jump @2553
      :                          @2319 [@dyn 324]
 36223: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 36228: 49 11 10 ff ff fe        u64 [sp + 16] = 0xfffffffffffeffff
 36234: 97 78 0d                 a1 = a0 << 0xd
 36237: d3 87 07                 a0 = a0 ^ a1
 36240: 98 78 07                 a1 = a0 >> 0x7
 36243: d3 87 07                 a0 = a0 ^ a1
 36246: 97 78 11                 a1 = a0 << 0x11
 36249: d3 87 07                 a0 = a0 ^ a1
 36252: 3e 07 e0 00 03           u64 [0x300e0] = a0
 36257: 87 77 79 c8 75           i32 a0 = a0 * 0x75c879
 36262: 83 77 5f f3 6e 3c        i32 a0 = a0 + 0x3c6ef35f
 36268: 7a 17 90 00              u32 [sp + 0x90] = a0
 36272: 95 17 90 00              a0 = sp + 0x90
 36276: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 36280: 33 07 86 03              a0 = 0x386
 36284: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 36288: 33 07 08 0c 01           a0 = 0x10c08
 36293: 7b 17 50 01              u64 [sp + 0x150] = a0
 36297: 49 21 58 01 01           u64 [sp + 344] = 0x1
 36302: 49 21 70 01              u64 [sp + 368] = 0
 36306: 95 18 c8 00              a1 = sp + 0xc8
 36310: 7b 18 60 01              u64 [sp + 0x160] = a1
 36314: 49 21 68 01 01           u64 [sp + 360] = 0x1
 36319: 95 17 f8 00              a0 = sp + 0xf8
 36323: 95 18 50 01              a1 = sp + 0x150
 36327: 50 20 8a 02 de 91        ra = 650, jump @637
      :                          @2320 [@dyn 325]
 36333: 82 15 00 01              s0 = u64 [sp + 0x100]
 36337: 82 1b 08 01              a4 = u64 [sp + 0x108]
 36341: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 36345: 33 07 02                 a0 = 0x2
 36348: 33 08                    a1 = 0
 36350: 33 09                    a2 = 0
 36352: 64 5a                    a3 = s0
 36354: 33 00 8c 02              ra = 0x28c
 36358: 0a 64                    ecalli 100 // 'log'
 36360: 01                       fallthrough
      :                          @2321 [@dyn 326]
 36361: 82 17 10                 a0 = u64 [sp + 0x10]
 36364: c8 67 07                 a0 = a0 + s1
 36367: 53 37 00 00 ff 25        jump @2327 if a0 <u 4294901760
      :                          @2322
 36373: 33 07 10 01 03           a0 = 0x30110
 36378: 95 77 00 00 01           a0 = a0 + 0x10000
 36383: 01                       fallthrough
      :                          @2323
 36384: 82 78                    a1 = u64 [a0]
 36386: c9 87 09                 a2 = a0 - a1
 36389: ab 59 0f                 jump @2327 if a2 != s0
      :                          @2324
 36392: c9 68 09                 a2 = a1 - s1
 36395: 01                       fallthrough
      :                          @2325
 36396: 82 7a                    a3 = u64 [a0]
 36398: ab 8a f2                 jump @2323 if a3 != a1
      :                          @2326
 36401: 7b 79                    u64 [a0] = a2
 36403: 01                       fallthrough
      :                          @2327
 36404: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 36409: 3a 0a 60 00 03           a3 = u64 [0x30060]
 36414: 97 78 0d                 a1 = a0 << 0xd
 36417: d3 87 07                 a0 = a0 ^ a1
 36420: 98 78 07                 a1 = a0 >> 0x7
 36423: d3 87 07                 a0 = a0 ^ a1
 36426: 97 78 11                 a1 = a0 << 0x11
 36429: d3 87 07                 a0 = a0 ^ a1
 36432: 3a 08 80 00 03           a1 = u64 [0x30080]
 36437: 3e 07 e0 00 03           u64 [0x300e0] = a0
 36442: 7b 1a 08                 u64 [sp + 0x8] = a3
 36445: ca a7 09                 a2 = a0 * a3
 36448: ca 87 07                 a0 = a0 * a1
 36451: d3 97 07                 a0 = a0 ^ a2
 36454: 98 78 07                 a1 = a0 >> 0x7
 36457: d3 87 07                 a0 = a0 ^ a1
 36460: 97 78 11                 a1 = a0 << 0x11
 36463: d3 87 07                 a0 = a0 ^ a1
 36466: 7b 17 90 00              u64 [sp + 0x90] = a0
 36470: 95 17 90 00              a0 = sp + 0x90
 36474: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 36478: 33 07 50 03              a0 = 0x350
 36482: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 36486: 33 07 28 0c 01           a0 = 0x10c28
 36491: 7b 17 50 01              u64 [sp + 0x150] = a0
 36495: 49 21 58 01 01           u64 [sp + 344] = 0x1
 36500: 49 21 70 01              u64 [sp + 368] = 0
 36504: 95 18 c8 00              a1 = sp + 0xc8
 36508: 7b 18 60 01              u64 [sp + 0x160] = a1
 36512: 49 21 68 01 01           u64 [sp + 360] = 0x1
 36517: 95 17 f8 00              a0 = sp + 0xf8
 36521: 95 18 50 01              a1 = sp + 0x150
 36525: 50 20 8e 02 18 91        ra = 654, jump @637
      :                          @2328 [@dyn 327]
 36531: 82 15 00 01              s0 = u64 [sp + 0x100]
 36535: 82 1b 08 01              a4 = u64 [sp + 0x108]
 36539: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 36543: 33 07 02                 a0 = 0x2
 36546: 33 08                    a1 = 0
 36548: 33 09                    a2 = 0
 36550: 64 5a                    a3 = s0
 36552: 33 00 90 02              ra = 0x290
 36556: 0a 64                    ecalli 100 // 'log'
 36558: 01                       fallthrough
      :                          @2329 [@dyn 328]
 36559: 82 17 10                 a0 = u64 [sp + 0x10]
 36562: c8 67 07                 a0 = a0 + s1
 36565: 53 37 00 00 ff 25        jump @2335 if a0 <u 4294901760
      :                          @2330
 36571: 33 07 10 01 03           a0 = 0x30110
 36576: 95 77 00 00 01           a0 = a0 + 0x10000
 36581: 01                       fallthrough
      :                          @2331
 36582: 82 78                    a1 = u64 [a0]
 36584: c9 87 09                 a2 = a0 - a1
 36587: ab 59 0f                 jump @2335 if a2 != s0
      :                          @2332
 36590: c9 68 09                 a2 = a1 - s1
 36593: 01                       fallthrough
      :                          @2333
 36594: 82 7a                    a3 = u64 [a0]
 36596: ab 8a f2                 jump @2331 if a3 != a1
      :                          @2334
 36599: 7b 79                    u64 [a0] = a2
 36601: 01                       fallthrough
      :                          @2335
 36602: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 36607: 97 78 0d                 a1 = a0 << 0xd
 36610: d3 87 07                 a0 = a0 ^ a1
 36613: 98 78 07                 a1 = a0 >> 0x7
 36616: d3 87 07                 a0 = a0 ^ a1
 36619: 97 78 11                 a1 = a0 << 0x11
 36622: d3 87 07                 a0 = a0 ^ a1
 36625: 3e 07 e0 00 03           u64 [0x300e0] = a0
 36630: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 36635: 82 19 08                 a2 = u64 [sp + 0x8]
 36638: ca 97 07                 a0 = a0 * a2
 36641: 97 89 0d                 a2 = a1 << 0xd
 36644: d3 98 08                 a1 = a1 ^ a2
 36647: 98 89 07                 a2 = a1 >> 0x7
 36650: d3 98 08                 a1 = a1 ^ a2
 36653: 97 89 11                 a2 = a1 << 0x11
 36656: d3 98 08                 a1 = a1 ^ a2
 36659: 3e 08 e0 00 03           u64 [0x300e0] = a1
 36664: 98 78 2d                 a1 = a0 >> 0x2d
 36667: 98 79 1b                 a2 = a0 >> 0x1b
 36670: d3 98 08                 a1 = a1 ^ a2
 36673: 98 77 3b                 a0 = a0 >> 0x3b
 36676: df 78 07                 i32 a0 = a1 >>r a0
 36679: 7a 17 90 00              u32 [sp + 0x90] = a0
 36683: 95 17 90 00              a0 = sp + 0x90
 36687: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 36691: 33 07 86 03              a0 = 0x386
 36695: 7b 17 08                 u64 [sp + 0x8] = a0
 36698: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 36702: 33 07 48 0c 01           a0 = 0x10c48
 36707: 7b 17 50 01              u64 [sp + 0x150] = a0
 36711: 49 21 58 01 01           u64 [sp + 344] = 0x1
 36716: 49 21 70 01              u64 [sp + 368] = 0
 36720: 95 18 c8 00              a1 = sp + 0xc8
 36724: 7b 18 60 01              u64 [sp + 0x160] = a1
 36728: 49 21 68 01 01           u64 [sp + 360] = 0x1
 36733: 95 17 f8 00              a0 = sp + 0xf8
 36737: 95 18 50 01              a1 = sp + 0x150
 36741: 50 20 92 02 40 90        ra = 658, jump @637
      :                          @2336 [@dyn 329]
 36747: 82 15 00 01              s0 = u64 [sp + 0x100]
 36751: 82 1b 08 01              a4 = u64 [sp + 0x108]
 36755: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 36759: 33 07 02                 a0 = 0x2
 36762: 33 08                    a1 = 0
 36764: 33 09                    a2 = 0
 36766: 64 5a                    a3 = s0
 36768: 33 00 94 02              ra = 0x294
 36772: 0a 64                    ecalli 100 // 'log'
 36774: 01                       fallthrough
      :                          @2337 [@dyn 330]
 36775: 82 17 10                 a0 = u64 [sp + 0x10]
 36778: c8 67 07                 a0 = a0 + s1
 36781: 53 37 00 00 ff 25        jump @2343 if a0 <u 4294901760
      :                          @2338
 36787: 33 07 10 01 03           a0 = 0x30110
 36792: 95 77 00 00 01           a0 = a0 + 0x10000
 36797: 01                       fallthrough
      :                          @2339
 36798: 82 78                    a1 = u64 [a0]
 36800: c9 87 09                 a2 = a0 - a1
 36803: ab 59 0f                 jump @2343 if a2 != s0
      :                          @2340
 36806: c9 68 09                 a2 = a1 - s1
 36809: 01                       fallthrough
      :                          @2341
 36810: 82 7a                    a3 = u64 [a0]
 36812: ab 8a f2                 jump @2339 if a3 != a1
      :                          @2342
 36815: 7b 79                    u64 [a0] = a2
 36817: 01                       fallthrough
      :                          @2343
 36818: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 36823: 97 78 0d                 a1 = a0 << 0xd
 36826: d3 87 07                 a0 = a0 ^ a1
 36829: 98 78 07                 a1 = a0 >> 0x7
 36832: d3 87 07                 a0 = a0 ^ a1
 36835: 97 78 11                 a1 = a0 << 0x11
 36838: d3 87 07                 a0 = a0 ^ a1
 36841: 3e 07 e0 00 03           u64 [0x300e0] = a0
 36846: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 36851: 97 89 0d                 a2 = a1 << 0xd
 36854: d3 98 08                 a1 = a1 ^ a2
 36857: 98 89 07                 a2 = a1 >> 0x7
 36860: d3 98 08                 a1 = a1 ^ a2
 36863: 97 89 11                 a2 = a1 << 0x11
 36866: d3 98 08                 a1 = a1 ^ a2
 36869: 87 89 1d dd 6c 4f        i32 a2 = a1 * 0x4f6cdd1d
 36875: 3e 08 e0 00 03           u64 [0x300e0] = a1
 36880: 96 77 fd 79 6d ef        a0 = a0 * 0xffffffffef6d79fd
 36886: c8 97 07                 a0 = a0 + a2
 36889: 7a 17 90 00              u32 [sp + 0x90] = a0
 36893: 95 17 90 00              a0 = sp + 0x90
 36897: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 36901: 82 17 08                 a0 = u64 [sp + 0x8]
 36904: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 36908: 33 07 68 0c 01           a0 = 0x10c68
 36913: 7b 17 50 01              u64 [sp + 0x150] = a0
 36917: 49 21 58 01 01           u64 [sp + 344] = 0x1
 36922: 49 21 70 01              u64 [sp + 368] = 0
 36926: 95 18 c8 00              a1 = sp + 0xc8
 36930: 7b 18 60 01              u64 [sp + 0x160] = a1
 36934: 49 21 68 01 01           u64 [sp + 360] = 0x1
 36939: 95 17 f8 00              a0 = sp + 0xf8
 36943: 95 18 50 01              a1 = sp + 0x150
 36947: 50 20 96 02 72 8f        ra = 662, jump @637
      :                          @2344 [@dyn 331]
 36953: 82 15 00 01              s0 = u64 [sp + 0x100]
 36957: 82 1b 08 01              a4 = u64 [sp + 0x108]
 36961: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 36965: 33 07 02                 a0 = 0x2
 36968: 33 08                    a1 = 0
 36970: 33 09                    a2 = 0
 36972: 64 5a                    a3 = s0
 36974: 33 00 98 02              ra = 0x298
 36978: 0a 64                    ecalli 100 // 'log'
 36980: 01                       fallthrough
      :                          @2345 [@dyn 332]
 36981: 82 17 10                 a0 = u64 [sp + 0x10]
 36984: c8 67 07                 a0 = a0 + s1
 36987: 53 37 00 00 ff 1d 10     jump @2553 if a0 <u 4294901760
      :                          @2346
 36994: 33 07 10 01 03           a0 = 0x30110
 36999: 95 77 00 00 01           a0 = a0 + 0x10000
 37004: 01                       fallthrough
      :                          @2347
 37005: 82 78                    a1 = u64 [a0]
 37007: c9 87 09                 a2 = a0 - a1
 37010: ab 59 06 10              jump @2553 if a2 != s0
      :                          @2348
 37014: c9 68 09                 a2 = a1 - s1
 37017: 01                       fallthrough
      :                          @2349
 37018: 82 7a                    a3 = u64 [a0]
 37020: ab 8a f1                 jump @2347 if a3 != a1
      :                          @2350
 37023: 7b 79                    u64 [a0] = a2
 37025: 33 0b                    a4 = 0
 37027: 01                       fallthrough
      :                          @2351
 37028: ab 8a e9                 jump @2347 if a3 != a1
      :                          @2352
 37031: 28 f1 0f                 jump @2553
      :                          @2353 [@dyn 333]
 37034: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 37039: 97 78 0d                 a1 = a0 << 0xd
 37042: d3 87 07                 a0 = a0 ^ a1
 37045: 98 78 07                 a1 = a0 >> 0x7
 37048: d3 87 07                 a0 = a0 ^ a1
 37051: 97 78 11                 a1 = a0 << 0x11
 37054: d3 78 08                 a1 = a1 ^ a0
 37057: 96 75 1d                 s0 = a0 * 0x1d
 37060: 3e 08 e0 00 03           u64 [0x300e0] = a1
 37065: 84 55 1f                 s0 = s0 & 0x1f
 37068: 64 57                    a0 = s0
 37070: 50 20 9c 02 a7 91        ra = 668, jump @700
      :                          @2354 [@dyn 334]
 37076: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 37080: 7b 18 b8 00              u64 [sp + 0xb8] = a1
 37084: 49 21 c0 00              u64 [sp + 192] = 0
 37088: 52 05 b2 00              jump @2364 if s0 != 0
      :                          @2355
 37092: 64 8a                    a3 = a1
 37094: 33 06                    s1 = 0
 37096: 01                       fallthrough
      :                          @2356
 37097: 64 a7                    a0 = a3
 37099: 64 68                    a1 = s1
 37101: 64 a5                    s0 = a3
 37103: 50 20 9e 02 5e a6        ra = 670, jump @1064
      :                          @2357 [@dyn 335]
 37109: 7a 17 48 01              u32 [sp + 0x148] = a0
 37113: 51 06 0b 0d              jump @2523 if s1 == 0
      :                          @2358
 37117: 33 0b                    a4 = 0
 37119: 33 0a 01                 a3 = 0x1
 37122: 14 07 71 80 07 80 00 00 00 00 a0 = 0x80078071
 37132: 33 08 f1 ff 00           a1 = 0xfff1
 37137: 64 69                    a2 = s1
 37139: 64 5c                    a5 = s0
 37141: 64 52                    t0 = s0
 37143: 01                       fallthrough
      :                          @2359
 37144: 7c c5                    s0 = u8 [a5]
 37146: 95 cc 01                 a5 = a5 + 0x1
 37149: c8 a5 05                 s0 = s0 + a3
 37152: 97 5a 20                 a3 = s0 << 0x20
 37155: 98 aa 20                 a3 = a3 >> 0x20
 37158: ca 7a 0a                 a3 = a3 * a0
 37161: 98 aa 2f                 a3 = a3 >> 0x2f
 37164: ca 8a 0a                 a3 = a3 * a1
 37167: bf a5 0a                 i32 a3 = s0 - a3
 37170: c8 ba 05                 s0 = a3 + a4
 37173: 97 5b 20                 a4 = s0 << 0x20
 37176: 98 bb 20                 a4 = a4 >> 0x20
 37179: ca 7b 0b                 a4 = a4 * a0
 37182: 98 bb 2f                 a4 = a4 >> 0x2f
 37185: ca 8b 0b                 a4 = a4 * a1
 37188: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 37191: bf b5 0b                 i32 a4 = s0 - a4
 37194: 52 09 ce                 jump @2359 if a2 != 0
      :                          @2360
 37197: 97 bb 10                 a4 = a4 << 0x10
 37200: d4 ba 0a                 a3 = a3 | a4
 37203: 7a 1a 4c 01              u32 [sp + 0x14c] = a3
 37207: 33 07 c5 9d 1c 81        a0 = 0xffffffff811c9dc5
 37213: 33 08 93 01 00 01        a1 = 0x1000193
 37219: 01                       fallthrough
      :                          @2361
 37220: 7c 29                    a2 = u8 [t0]
 37222: 95 22 01                 t0 = t0 + 0x1
 37225: d3 97 07                 a0 = a0 ^ a2
 37228: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 37231: c0 87 07                 i32 a0 = a0 * a1
 37234: 52 06 f2                 jump @2361 if s1 != 0
      :                          @2362
 37237: 28 9b 0c                 jump @2524
      :                          @2363
 37240: 82 1a b8 00              a3 = u64 [sp + 0xb8]
 37244: 96 67 1d                 a0 = s1 * 0x1d
 37247: c8 8a 09                 a2 = a3 + a1
 37250: 78 97                    u8 [a2] = a0
 37252: 95 86 01                 s1 = a1 + 0x1
 37255: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 37258: 7b 16 c0 00              u64 [sp + 0xc0] = s1
 37262: 51 05 5b ff              jump @2356 if s0 == 0
      :                          @2364
 37266: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 37271: 97 78 0d                 a1 = a0 << 0xd
 37274: d3 87 07                 a0 = a0 ^ a1
 37277: 98 76 07                 s1 = a0 >> 0x7
 37280: d3 76 06                 s1 = s1 ^ a0
 37283: 97 67 11                 a0 = s1 << 0x11
 37286: d3 67 07                 a0 = a0 ^ s1
 37289: 3e 07 e0 00 03           u64 [0x300e0] = a0
 37294: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 37298: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 37302: ab 78 c2                 jump @2363 if a1 != a0
      :                          @2365
 37305: 95 17 b0 00              a0 = sp + 0xb0
 37309: 50 20 a0 02 7a 91        ra = 672, jump @720
      :                          @2366 [@dyn 336]
 37315: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 37319: 28 b1                    jump @2363
      :                          @2367 [@dyn 337]
 37321: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 37326: 97 89 0d                 a2 = a1 << 0xd
 37329: d3 98 08                 a1 = a1 ^ a2
 37332: 98 89 07                 a2 = a1 >> 0x7
 37335: d3 98 08                 a1 = a1 ^ a2
 37338: 97 89 11                 a2 = a1 << 0x11
 37341: d3 98 08                 a1 = a1 ^ a2
 37344: 3a 09 60 00 03           a2 = u64 [0x30060]
 37349: 3a 0a 78 00 03           a3 = u64 [0x30078]
 37354: 3e 08 e0 00 03           u64 [0x300e0] = a1
 37359: ca 98 07                 a0 = a1 * a2
 37362: 98 78 05                 a1 = a0 >> 0x5
 37365: d6 a8 08                 a1 = a1 mulhu a3
 37368: 98 88 07                 a1 = a1 >> 0x7
 37371: 96 88 a0 86 01           a1 = a1 * 0x186a0
 37376: c9 87 07                 a0 = a0 - a1
 37379: 95 77 01                 a0 = a0 + 0x1
 37382: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 37386: 50 20 a4 02 e2 a5        ra = 676, jump @1069
      :                          @2368 [@dyn 338]
 37392: 7b 17 90 00              u64 [sp + 0x90] = a0
 37396: 95 17 b0 00              a0 = sp + 0xb0
 37400: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 37404: 33 07 50 03              a0 = 0x350
 37408: 7b 17 00 01              u64 [sp + 0x100] = a0
 37412: 95 18 90 00              a1 = sp + 0x90
 37416: 7b 18 08 01              u64 [sp + 0x108] = a1
 37420: 7b 17 10 01              u64 [sp + 0x110] = a0
 37424: 33 07 08 0d 01           a0 = 0x10d08
 37429: 7b 17 50 01              u64 [sp + 0x150] = a0
 37433: 49 21 58 01 02           u64 [sp + 344] = 0x2
 37438: 49 21 70 01              u64 [sp + 368] = 0
 37442: 95 18 f8 00              a1 = sp + 0xf8
 37446: 7b 18 60 01              u64 [sp + 0x160] = a1
 37450: 49 21 68 01 02           u64 [sp + 360] = 0x2
 37455: 95 17 c8 00              a0 = sp + 0xc8
 37459: 95 18 50 01              a1 = sp + 0x150
 37463: 50 20 a6 02 6e 8d        ra = 678, jump @637
      :                          @2369 [@dyn 339]
 37469: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 37473: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 37477: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 37481: 33 07 02                 a0 = 0x2
 37484: 33 08                    a1 = 0
 37486: 33 09                    a2 = 0
 37488: 64 5a                    a3 = s0
 37490: 33 00 a8 02              ra = 0x2a8
 37494: 0a 64                    ecalli 100 // 'log'
 37496: 01                       fallthrough
      :                          @2370 [@dyn 340]
 37497: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 37502: 53 38 00 00 ff 1a 0e     jump @2553 if a1 <u 4294901760
      :                          @2371
 37509: 33 07 10 01 03           a0 = 0x30110
 37514: 95 77 00 00 01           a0 = a0 + 0x10000
 37519: 01                       fallthrough
      :                          @2372
 37520: 82 78                    a1 = u64 [a0]
 37522: c9 87 09                 a2 = a0 - a1
 37525: ab 59 03 0e              jump @2553 if a2 != s0
      :                          @2373
 37529: c9 68 09                 a2 = a1 - s1
 37532: 01                       fallthrough
      :                          @2374
 37533: 82 7a                    a3 = u64 [a0]
 37535: ab 8a f1                 jump @2372 if a3 != a1
      :                          @2375
 37538: 7b 79                    u64 [a0] = a2
 37540: 33 0b                    a4 = 0
 37542: 01                       fallthrough
      :                          @2376
 37543: ab 8a e9                 jump @2372 if a3 != a1
      :                          @2377
 37546: 28 ee 0d                 jump @2553
      :                          @2378 [@dyn 341]
 37549: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 37554: 97 89 0d                 a2 = a1 << 0xd
 37557: d3 98 08                 a1 = a1 ^ a2
 37560: 98 89 07                 a2 = a1 >> 0x7
 37563: d3 98 08                 a1 = a1 ^ a2
 37566: 97 89 11                 a2 = a1 << 0x11
 37569: d3 98 08                 a1 = a1 ^ a2
 37572: 3a 09 60 00 03           a2 = u64 [0x30060]
 37577: 3a 0a 68 00 03           a3 = u64 [0x30068]
 37582: 3e 08 e0 00 03           u64 [0x300e0] = a1
 37587: ca 98 07                 a0 = a1 * a2
 37590: 98 78 03                 a1 = a0 >> 0x3
 37593: d6 a8 08                 a1 = a1 mulhu a3
 37596: 98 88 04                 a1 = a1 >> 0x4
 37599: 96 88 e8 03              a1 = a1 * 0x3e8
 37603: c9 87 07                 a0 = a0 - a1
 37606: 95 75 01                 s0 = a0 + 0x1
 37609: 7b 15 b0 00              u64 [sp + 0xb0] = s0
 37613: 95 17 90 00              a0 = sp + 0x90
 37617: 64 58                    a1 = s0
 37619: 33 00 ac 02              ra = 0x2ac
 37623: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 37626: 7b 10 50                 u64 [sp + 0x50] = ra
 37629: 7b 15 48                 u64 [sp + 0x48] = s0
 37632: 7b 16 40                 u64 [sp + 0x40] = s1
 37635: 95 86 01                 s1 = a1 + 0x1
 37638: 33 09 10 01 03           a2 = 0x30110
 37643: 33 02 00 00 01           t0 = 0x10000
 37648: c8 29 09                 a2 = a2 + t0
 37651: 28 30 a6                 jump @1119
      :                          @2379 [@dyn 342]
 37654: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 37658: ae 85 9a 0d              jump @2557 if s0 >=u a1
      :                          @2380
 37662: 82 17 98 00              a0 = u64 [sp + 0x98]
 37666: 97 55 02                 s0 = s0 << 0x2
 37669: 7b 17 10                 u64 [sp + 0x10] = a0
 37672: c8 75 05                 s0 = s0 + a0
 37675: 95 17 b0 00              a0 = sp + 0xb0
 37679: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 37683: 33 07 50 03              a0 = 0x350
 37687: 7b 17 00 01              u64 [sp + 0x100] = a0
 37691: 7b 15 08 01              u64 [sp + 0x108] = s0
 37695: 33 07 a6 03              a0 = 0x3a6
 37699: 7b 17 10 01              u64 [sp + 0x110] = a0
 37703: 33 07 40 0d 01           a0 = 0x10d40
 37708: 7b 17 50 01              u64 [sp + 0x150] = a0
 37712: 49 21 58 01 02           u64 [sp + 344] = 0x2
 37717: 49 21 70 01              u64 [sp + 368] = 0
 37721: 95 18 f8 00              a1 = sp + 0xf8
 37725: 7b 18 60 01              u64 [sp + 0x160] = a1
 37729: 49 21 68 01 02           u64 [sp + 360] = 0x2
 37734: 95 17 c8 00              a0 = sp + 0xc8
 37738: 95 18 50 01              a1 = sp + 0x150
 37742: 50 20 ae 02 57 8c        ra = 686, jump @637
      :                          @2381 [@dyn 343]
 37748: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 37752: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 37756: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 37760: 33 07 02                 a0 = 0x2
 37763: 33 08                    a1 = 0
 37765: 33 09                    a2 = 0
 37767: 64 5a                    a3 = s0
 37769: 33 00 b0 02              ra = 0x2b0
 37773: 0a 64                    ecalli 100 // 'log'
 37775: 01                       fallthrough
      :                          @2382 [@dyn 344]
 37776: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 37781: 53 38 00 00 ff 25        jump @2388 if a1 <u 4294901760
      :                          @2383
 37787: 33 07 10 01 03           a0 = 0x30110
 37792: 95 77 00 00 01           a0 = a0 + 0x10000
 37797: 01                       fallthrough
      :                          @2384
 37798: 82 78                    a1 = u64 [a0]
 37800: c9 87 09                 a2 = a0 - a1
 37803: ab 59 0f                 jump @2388 if a2 != s0
      :                          @2385
 37806: c9 68 09                 a2 = a1 - s1
 37809: 01                       fallthrough
      :                          @2386
 37810: 82 7a                    a3 = u64 [a0]
 37812: ab 8a f2                 jump @2384 if a3 != a1
      :                          @2387
 37815: 7b 79                    u64 [a0] = a2
 37817: 01                       fallthrough
      :                          @2388
 37818: 82 17 90 00              a0 = u64 [sp + 0x90]
 37822: 82 16 10                 s1 = u64 [sp + 0x10]
 37825: 51 07 d7 0c              jump @2553 if a0 == 0
      :                          @2389
 37829: 56 27 00 40 d3 0c        jump @2553 if a0 >u 16384
      :                          @2390
 37835: 97 77 02                 a0 = a0 << 0x2
 37838: 33 08 10 01 03           a1 = 0x30110
 37843: 95 88 00 00 01           a1 = a1 + 0x10000
 37848: 01                       fallthrough
      :                          @2391
 37849: 82 89                    a2 = u64 [a1]
 37851: c9 98 0a                 a3 = a1 - a2
 37854: ab 6a ba 0c              jump @2553 if a3 != s1
      :                          @2392
 37858: c9 79 0a                 a3 = a2 - a0
 37861: 01                       fallthrough
      :                          @2393
 37862: 82 8b                    a4 = u64 [a1]
 37864: ab 9b f1                 jump @2391 if a4 != a2
      :                          @2394
 37867: 7b 8a                    u64 [a1] = a3
 37869: 33 0c                    a5 = 0
 37871: 01                       fallthrough
      :                          @2395
 37872: ab 9b e9                 jump @2391 if a4 != a2
      :                          @2396
 37875: 28 a5 0c                 jump @2553
      :                          @2397 [@dyn 345]
 37878: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 37883: 97 89 0d                 a2 = a1 << 0xd
 37886: d3 98 08                 a1 = a1 ^ a2
 37889: 98 89 07                 a2 = a1 >> 0x7
 37892: d3 98 08                 a1 = a1 ^ a2
 37895: 97 89 11                 a2 = a1 << 0x11
 37898: d3 98 08                 a1 = a1 ^ a2
 37901: 3a 09 60 00 03           a2 = u64 [0x30060]
 37906: 3a 0a 78 00 03           a3 = u64 [0x30078]
 37911: 3e 08 e0 00 03           u64 [0x300e0] = a1
 37916: ca 98 07                 a0 = a1 * a2
 37919: 98 78 05                 a1 = a0 >> 0x5
 37922: d6 a8 08                 a1 = a1 mulhu a3
 37925: 98 88 07                 a1 = a1 >> 0x7
 37928: 96 88 a0 86 01           a1 = a1 * 0x186a0
 37933: c9 87 07                 a0 = a0 - a1
 37936: 95 77 01                 a0 = a0 + 0x1
 37939: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 37943: 50 20 b4 02 18 a4        ra = 692, jump @1086
      :                          @2398 [@dyn 346]
 37949: 7b 17 90 00              u64 [sp + 0x90] = a0
 37953: 95 17 b0 00              a0 = sp + 0xb0
 37957: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 37961: 33 07 50 03              a0 = 0x350
 37965: 7b 17 00 01              u64 [sp + 0x100] = a0
 37969: 95 18 90 00              a1 = sp + 0x90
 37973: 7b 18 08 01              u64 [sp + 0x108] = a1
 37977: 7b 17 10 01              u64 [sp + 0x110] = a0
 37981: 33 07 78 0d 01           a0 = 0x10d78
 37986: 7b 17 50 01              u64 [sp + 0x150] = a0
 37990: 49 21 58 01 02           u64 [sp + 344] = 0x2
 37995: 49 21 70 01              u64 [sp + 368] = 0
 37999: 95 18 f8 00              a1 = sp + 0xf8
 38003: 7b 18 60 01              u64 [sp + 0x160] = a1
 38007: 49 21 68 01 02           u64 [sp + 360] = 0x2
 38012: 95 17 c8 00              a0 = sp + 0xc8
 38016: 95 18 50 01              a1 = sp + 0x150
 38020: 50 20 b6 02 41 8b        ra = 694, jump @637
      :                          @2399 [@dyn 347]
 38026: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 38030: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 38034: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 38038: 33 07 02                 a0 = 0x2
 38041: 33 08                    a1 = 0
 38043: 33 09                    a2 = 0
 38045: 64 5a                    a3 = s0
 38047: 33 00 b8 02              ra = 0x2b8
 38051: 0a 64                    ecalli 100 // 'log'
 38053: 01                       fallthrough
      :                          @2400 [@dyn 348]
 38054: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 38059: 53 38 00 00 ff ed 0b     jump @2553 if a1 <u 4294901760
      :                          @2401
 38066: 33 07 10 01 03           a0 = 0x30110
 38071: 95 77 00 00 01           a0 = a0 + 0x10000
 38076: 01                       fallthrough
      :                          @2402
 38077: 82 78                    a1 = u64 [a0]
 38079: c9 87 09                 a2 = a0 - a1
 38082: ab 59 d6 0b              jump @2553 if a2 != s0
      :                          @2403
 38086: c9 68 09                 a2 = a1 - s1
 38089: 01                       fallthrough
      :                          @2404
 38090: 82 7a                    a3 = u64 [a0]
 38092: ab 8a f1                 jump @2402 if a3 != a1
      :                          @2405
 38095: 7b 79                    u64 [a0] = a2
 38097: 33 0b                    a4 = 0
 38099: 01                       fallthrough
      :                          @2406
 38100: ab 8a e9                 jump @2402 if a3 != a1
      :                          @2407
 38103: 28 c1 0b                 jump @2553
      :                          @2408 [@dyn 349]
 38106: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 38111: 97 89 0d                 a2 = a1 << 0xd
 38114: d3 98 08                 a1 = a1 ^ a2
 38117: 98 89 07                 a2 = a1 >> 0x7
 38120: d3 98 08                 a1 = a1 ^ a2
 38123: 97 89 11                 a2 = a1 << 0x11
 38126: d3 98 08                 a1 = a1 ^ a2
 38129: 3a 09 60 00 03           a2 = u64 [0x30060]
 38134: 3a 0a 78 00 03           a3 = u64 [0x30078]
 38139: 3e 08 e0 00 03           u64 [0x300e0] = a1
 38144: ca 98 07                 a0 = a1 * a2
 38147: 98 78 05                 a1 = a0 >> 0x5
 38150: d6 a8 08                 a1 = a1 mulhu a3
 38153: 98 88 07                 a1 = a1 >> 0x7
 38156: 96 88 a0 86 01           a1 = a1 * 0x186a0
 38161: c9 87 07                 a0 = a0 - a1
 38164: 95 77 01                 a0 = a0 + 0x1
 38167: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 38171: 50 20 bc 02 8c a3        ra = 700, jump @1097
      :                          @2409 [@dyn 350]
 38177: 7b 17 90 00              u64 [sp + 0x90] = a0
 38181: 95 17 b0 00              a0 = sp + 0xb0
 38185: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 38189: 33 07 50 03              a0 = 0x350
 38193: 7b 17 00 01              u64 [sp + 0x100] = a0
 38197: 95 18 90 00              a1 = sp + 0x90
 38201: 7b 18 08 01              u64 [sp + 0x108] = a1
 38205: 7b 17 10 01              u64 [sp + 0x110] = a0
 38209: 33 07 a8 0d 01           a0 = 0x10da8
 38214: 7b 17 50 01              u64 [sp + 0x150] = a0
 38218: 49 21 58 01 02           u64 [sp + 344] = 0x2
 38223: 49 21 70 01              u64 [sp + 368] = 0
 38227: 95 18 f8 00              a1 = sp + 0xf8
 38231: 7b 18 60 01              u64 [sp + 0x160] = a1
 38235: 49 21 68 01 02           u64 [sp + 360] = 0x2
 38240: 95 17 c8 00              a0 = sp + 0xc8
 38244: 95 18 50 01              a1 = sp + 0x150
 38248: 50 20 be 02 5d 8a        ra = 702, jump @637
      :                          @2410 [@dyn 351]
 38254: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 38258: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 38262: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 38266: 33 07 02                 a0 = 0x2
 38269: 33 08                    a1 = 0
 38271: 33 09                    a2 = 0
 38273: 64 5a                    a3 = s0
 38275: 33 00 c0 02              ra = 0x2c0
 38279: 0a 64                    ecalli 100 // 'log'
 38281: 01                       fallthrough
      :                          @2411 [@dyn 352]
 38282: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 38287: 53 38 00 00 ff 09 0b     jump @2553 if a1 <u 4294901760
      :                          @2412
 38294: 33 07 10 01 03           a0 = 0x30110
 38299: 95 77 00 00 01           a0 = a0 + 0x10000
 38304: 01                       fallthrough
      :                          @2413
 38305: 82 78                    a1 = u64 [a0]
 38307: c9 87 09                 a2 = a0 - a1
 38310: ab 59 f2 0a              jump @2553 if a2 != s0
      :                          @2414
 38314: c9 68 09                 a2 = a1 - s1
 38317: 01                       fallthrough
      :                          @2415
 38318: 82 7a                    a3 = u64 [a0]
 38320: ab 8a f1                 jump @2413 if a3 != a1
      :                          @2416
 38323: 7b 79                    u64 [a0] = a2
 38325: 33 0b                    a4 = 0
 38327: 01                       fallthrough
      :                          @2417
 38328: ab 8a e9                 jump @2413 if a3 != a1
      :                          @2418
 38331: 28 dd 0a                 jump @2553
      :                          @2419 [@dyn 353]
 38334: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 38339: 97 89 0d                 a2 = a1 << 0xd
 38342: d3 98 08                 a1 = a1 ^ a2
 38345: 98 89 07                 a2 = a1 >> 0x7
 38348: d3 98 08                 a1 = a1 ^ a2
 38351: 97 89 11                 a2 = a1 << 0x11
 38354: d3 98 08                 a1 = a1 ^ a2
 38357: 3a 09 60 00 03           a2 = u64 [0x30060]
 38362: 3a 0a 78 00 03           a3 = u64 [0x30078]
 38367: 3e 08 e0 00 03           u64 [0x300e0] = a1
 38372: ca 98 07                 a0 = a1 * a2
 38375: 98 78 05                 a1 = a0 >> 0x5
 38378: d6 a8 08                 a1 = a1 mulhu a3
 38381: 98 88 07                 a1 = a1 >> 0x7
 38384: 96 88 a0 86 01           a1 = a1 * 0x186a0
 38389: c9 87 07                 a0 = a0 - a1
 38392: 95 77 01                 a0 = a0 + 0x1
 38395: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 38399: 50 20 c4 02 f8 a2        ra = 708, jump @1107
      :                          @2420 [@dyn 354]
 38405: 7b 17 90 00              u64 [sp + 0x90] = a0
 38409: 95 17 b0 00              a0 = sp + 0xb0
 38413: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 38417: 33 07 50 03              a0 = 0x350
 38421: 7b 17 00 01              u64 [sp + 0x100] = a0
 38425: 95 17 90 00              a0 = sp + 0x90
 38429: 7b 17 08 01              u64 [sp + 0x108] = a0
 38433: 33 07 a8 03              a0 = 0x3a8
 38437: 7b 17 10 01              u64 [sp + 0x110] = a0
 38441: 33 07 d0 0d 01           a0 = 0x10dd0
 38446: 7b 17 50 01              u64 [sp + 0x150] = a0
 38450: 49 21 58 01 02           u64 [sp + 344] = 0x2
 38455: 49 21 70 01              u64 [sp + 368] = 0
 38459: 95 18 f8 00              a1 = sp + 0xf8
 38463: 7b 18 60 01              u64 [sp + 0x160] = a1
 38467: 49 21 68 01 02           u64 [sp + 360] = 0x2
 38472: 95 17 c8 00              a0 = sp + 0xc8
 38476: 95 18 50 01              a1 = sp + 0x150
 38480: 50 20 c6 02 75 89        ra = 710, jump @637
      :                          @2421 [@dyn 355]
 38486: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 38490: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 38494: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 38498: 33 07 02                 a0 = 0x2
 38501: 33 08                    a1 = 0
 38503: 33 09                    a2 = 0
 38505: 64 5a                    a3 = s0
 38507: 33 00 c8 02              ra = 0x2c8
 38511: 0a 64                    ecalli 100 // 'log'
 38513: 01                       fallthrough
      :                          @2422 [@dyn 356]
 38514: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 38519: 53 38 00 00 ff 21 0a     jump @2553 if a1 <u 4294901760
      :                          @2423
 38526: 33 07 10 01 03           a0 = 0x30110
 38531: 95 77 00 00 01           a0 = a0 + 0x10000
 38536: 01                       fallthrough
      :                          @2424
 38537: 82 78                    a1 = u64 [a0]
 38539: c9 87 09                 a2 = a0 - a1
 38542: ab 59 0a 0a              jump @2553 if a2 != s0
      :                          @2425
 38546: c9 68 09                 a2 = a1 - s1
 38549: 01                       fallthrough
      :                          @2426
 38550: 82 7a                    a3 = u64 [a0]
 38552: ab 8a f1                 jump @2424 if a3 != a1
      :                          @2427
 38555: 7b 79                    u64 [a0] = a2
 38557: 33 0b                    a4 = 0
 38559: 01                       fallthrough
      :                          @2428
 38560: ab 8a e9                 jump @2424 if a3 != a1
      :                          @2429
 38563: 28 f5 09                 jump @2553
      :                          @2430 [@dyn 357]
 38566: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 38571: 97 89 0d                 a2 = a1 << 0xd
 38574: d3 98 08                 a1 = a1 ^ a2
 38577: 98 89 07                 a2 = a1 >> 0x7
 38580: d3 98 08                 a1 = a1 ^ a2
 38583: 97 89 11                 a2 = a1 << 0x11
 38586: d3 98 08                 a1 = a1 ^ a2
 38589: 3a 09 60 00 03           a2 = u64 [0x30060]
 38594: 3a 0a 68 00 03           a3 = u64 [0x30068]
 38599: 3e 08 e0 00 03           u64 [0x300e0] = a1
 38604: ca 98 07                 a0 = a1 * a2
 38607: 98 78 03                 a1 = a0 >> 0x3
 38610: d6 a8 08                 a1 = a1 mulhu a3
 38613: 98 88 04                 a1 = a1 >> 0x4
 38616: 96 88 e8 03              a1 = a1 * 0x3e8
 38620: c9 87 07                 a0 = a0 - a1
 38623: 95 77 01                 a0 = a0 + 0x1
 38626: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 38630: 33 00 cc 02              ra = 0x2cc
 38634: 33 08                    a1 = 0
 38636: 33 09 01                 a2 = 0x1
 38639: 28 61 a4                 jump @1168
      :                          @2431 [@dyn 358]
 38642: 7b 17 90 00              u64 [sp + 0x90] = a0
 38646: 95 17 b0 00              a0 = sp + 0xb0
 38650: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 38654: 33 07 50 03              a0 = 0x350
 38658: 7b 17 00 01              u64 [sp + 0x100] = a0
 38662: 95 18 90 00              a1 = sp + 0x90
 38666: 7b 18 08 01              u64 [sp + 0x108] = a1
 38670: 7b 17 10 01              u64 [sp + 0x110] = a0
 38674: 33 07 10 0e 01           a0 = 0x10e10
 38679: 7b 17 50 01              u64 [sp + 0x150] = a0
 38683: 49 21 58 01 02           u64 [sp + 344] = 0x2
 38688: 49 21 70 01              u64 [sp + 368] = 0
 38692: 95 18 f8 00              a1 = sp + 0xf8
 38696: 7b 18 60 01              u64 [sp + 0x160] = a1
 38700: 49 21 68 01 02           u64 [sp + 360] = 0x2
 38705: 95 17 c8 00              a0 = sp + 0xc8
 38709: 95 18 50 01              a1 = sp + 0x150
 38713: 50 20 ce 02 8c 88        ra = 718, jump @637
      :                          @2432 [@dyn 359]
 38719: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 38723: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 38727: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 38731: 33 07 02                 a0 = 0x2
 38734: 33 08                    a1 = 0
 38736: 33 09                    a2 = 0
 38738: 64 5a                    a3 = s0
 38740: 33 00 d0 02              ra = 0x2d0
 38744: 0a 64                    ecalli 100 // 'log'
 38746: 01                       fallthrough
      :                          @2433 [@dyn 360]
 38747: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 38752: 53 38 00 00 ff 38 09     jump @2553 if a1 <u 4294901760
      :                          @2434
 38759: 33 07 10 01 03           a0 = 0x30110
 38764: 95 77 00 00 01           a0 = a0 + 0x10000
 38769: 01                       fallthrough
      :                          @2435
 38770: 82 78                    a1 = u64 [a0]
 38772: c9 87 09                 a2 = a0 - a1
 38775: ab 59 21 09              jump @2553 if a2 != s0
      :                          @2436
 38779: c9 68 09                 a2 = a1 - s1
 38782: 01                       fallthrough
      :                          @2437
 38783: 82 7a                    a3 = u64 [a0]
 38785: ab 8a f1                 jump @2435 if a3 != a1
      :                          @2438
 38788: 7b 79                    u64 [a0] = a2
 38790: 33 0b                    a4 = 0
 38792: 01                       fallthrough
      :                          @2439
 38793: ab 8a e9                 jump @2435 if a3 != a1
      :                          @2440
 38796: 28 0c 09                 jump @2553
      :                          @2441 [@dyn 361]
 38799: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 38804: 3a 07 60 00 03           a0 = u64 [0x30060]
 38809: 97 9a 0d                 a3 = a2 << 0xd
 38812: d3 a9 09                 a2 = a2 ^ a3
 38815: 98 9a 07                 a3 = a2 >> 0x7
 38818: d3 a9 09                 a2 = a2 ^ a3
 38821: 97 9a 11                 a3 = a2 << 0x11
 38824: d3 a9 09                 a2 = a2 ^ a3
 38827: 3a 0a 70 00 03           a3 = u64 [0x30070]
 38832: ca 79 0b                 a4 = a2 * a0
 38835: 3e 09 e0 00 03           u64 [0x300e0] = a2
 38840: d6 ab 09                 a2 = a4 mulhu a3
 38843: c9 9b 0a                 a3 = a4 - a2
 38846: 98 aa 01                 a3 = a3 >> 0x1
 38849: c8 a9 09                 a2 = a2 + a3
 38852: 98 99 09                 a2 = a2 >> 0x9
 38855: 96 99 e7 03              a2 = a2 * 0x3e7
 38859: c9 9b 0b                 a4 = a4 - a2
 38862: 86 b9 01                 a2 = a4 | 0x1
 38865: 95 99 02                 a2 = a2 + 0x2
 38868: 7b 19 68 02              u64 [sp + 0x268] = a2
 38872: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 38877: 97 9a 0d                 a3 = a2 << 0xd
 38880: d3 a9 09                 a2 = a2 ^ a3
 38883: 98 9a 07                 a3 = a2 >> 0x7
 38886: d3 a9 09                 a2 = a2 ^ a3
 38889: 97 9a 11                 a3 = a2 << 0x11
 38892: d3 a9 09                 a2 = a2 ^ a3
 38895: 3e 09 e0 00 03           u64 [0x300e0] = a2
 38900: 82 18 68 02              a1 = u64 [sp + 0x268]
 38904: 51 08 ba 08              jump @2555 if a1 == 0
      :                          @2442
 38908: ca 79 07                 a0 = a2 * a0
 38911: cd 87 07                 a0 = a0 %u a1
 38914: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 38918: 57 07 af 08              jump @2558 if a0 <s 0
      :                          @2443
 38922: 57 08 ab 08              jump @2558 if a1 <s 0
      :                          @2444
 38926: 50 20 d4 02 fd 91        ra = 724, jump @804
      :                          @2445 [@dyn 362]
 38932: 7b 17 90 00              u64 [sp + 0x90] = a0
 38936: 95 17 b0 00              a0 = sp + 0xb0
 38940: 7b 17 50 01              u64 [sp + 0x150] = a0
 38944: 33 07 a8 03              a0 = 0x3a8
 38948: 7b 17 58 01              u64 [sp + 0x158] = a0
 38952: 95 18 68 02              a1 = sp + 0x268
 38956: 7b 18 60 01              u64 [sp + 0x160] = a1
 38960: 33 08 50 03              a1 = 0x350
 38964: 7b 18 68 01              u64 [sp + 0x168] = a1
 38968: 95 18 90 00              a1 = sp + 0x90
 38972: 7b 18 70 01              u64 [sp + 0x170] = a1
 38976: 7b 17 78 01              u64 [sp + 0x178] = a0
 38980: 33 07 30 0e 01           a0 = 0x10e30
 38985: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 38989: 49 21 00 01 03           u64 [sp + 256] = 0x3
 38994: 49 21 18 01              u64 [sp + 280] = 0
 38998: 95 18 50 01              a1 = sp + 0x150
 39002: 7b 18 08 01              u64 [sp + 0x108] = a1
 39006: 49 21 10 01 03           u64 [sp + 272] = 0x3
 39011: 95 17 c8 00              a0 = sp + 0xc8
 39015: 95 18 f8 00              a1 = sp + 0xf8
 39019: 50 20 d6 02 5a 87        ra = 726, jump @637
      :                          @2446 [@dyn 363]
 39025: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 39029: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 39033: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 39037: 33 07 02                 a0 = 0x2
 39040: 33 08                    a1 = 0
 39042: 33 09                    a2 = 0
 39044: 64 5a                    a3 = s0
 39046: 33 00 d8 02              ra = 0x2d8
 39050: 0a 64                    ecalli 100 // 'log'
 39052: 01                       fallthrough
      :                          @2447 [@dyn 364]
 39053: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 39058: 53 38 00 00 ff 06 08     jump @2553 if a1 <u 4294901760
      :                          @2448
 39065: 33 07 10 01 03           a0 = 0x30110
 39070: 95 77 00 00 01           a0 = a0 + 0x10000
 39075: 01                       fallthrough
      :                          @2449
 39076: 82 78                    a1 = u64 [a0]
 39078: c9 87 09                 a2 = a0 - a1
 39081: ab 59 ef 07              jump @2553 if a2 != s0
      :                          @2450
 39085: c9 68 09                 a2 = a1 - s1
 39088: 01                       fallthrough
      :                          @2451
 39089: 82 7a                    a3 = u64 [a0]
 39091: ab 8a f1                 jump @2449 if a3 != a1
      :                          @2452
 39094: 7b 79                    u64 [a0] = a2
 39096: 33 0b                    a4 = 0
 39098: 01                       fallthrough
      :                          @2453
 39099: ab 8a e9                 jump @2449 if a3 != a1
      :                          @2454
 39102: 28 da 07                 jump @2553
      :                          @2455 [@dyn 365]
 39105: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 39110: 97 89 0d                 a2 = a1 << 0xd
 39113: d3 98 08                 a1 = a1 ^ a2
 39116: 98 89 07                 a2 = a1 >> 0x7
 39119: d3 98 08                 a1 = a1 ^ a2
 39122: 97 89 11                 a2 = a1 << 0x11
 39125: d3 98 08                 a1 = a1 ^ a2
 39128: 3a 09 60 00 03           a2 = u64 [0x30060]
 39133: 3e 08 e0 00 03           u64 [0x300e0] = a1
 39138: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 39143: ca 98 08                 a1 = a1 * a2
 39146: 97 ab 0d                 a4 = a3 << 0xd
 39149: d3 ba 0a                 a3 = a3 ^ a4
 39152: 98 ab 07                 a4 = a3 >> 0x7
 39155: d3 ba 0a                 a3 = a3 ^ a4
 39158: 97 ab 11                 a4 = a3 << 0x11
 39161: d3 ba 0a                 a3 = a3 ^ a4
 39164: ca 9a 09                 a2 = a3 * a2
 39167: 3a 0b 68 00 03           a4 = u64 [0x30068]
 39172: 3e 0a e0 00 03           u64 [0x300e0] = a3
 39177: 98 87 03                 a0 = a1 >> 0x3
 39180: d6 b7 07                 a0 = a0 mulhu a4
 39183: 98 77 04                 a0 = a0 >> 0x4
 39186: 96 77 e8 03              a0 = a0 * 0x3e8
 39190: c9 78 08                 a1 = a1 - a0
 39193: 86 88 01                 a1 = a1 | 0x1
 39196: 95 88 02                 a1 = a1 + 0x2
 39199: cd 89 07                 a0 = a2 %u a1
 39202: 50 20 dc 02 b2 a2        ra = 732, jump @1182
      :                          @2456 [@dyn 366]
 39208: 51 07 fa 06              jump @2545 if a0 == 0
      :                          @2457
 39212: 7b 18 90 00              u64 [sp + 0x90] = a1
 39216: 95 17 90 00              a0 = sp + 0x90
 39220: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 39224: 33 07 50 03              a0 = 0x350
 39228: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 39232: 33 07 70 0e 01           a0 = 0x10e70
 39237: 7b 17 50 01              u64 [sp + 0x150] = a0
 39241: 49 21 58 01 01           u64 [sp + 344] = 0x1
 39246: 49 21 70 01              u64 [sp + 368] = 0
 39250: 95 18 c8 00              a1 = sp + 0xc8
 39254: 7b 18 60 01              u64 [sp + 0x160] = a1
 39258: 49 21 68 01 01           u64 [sp + 360] = 0x1
 39263: 95 17 f8 00              a0 = sp + 0xf8
 39267: 95 18 50 01              a1 = sp + 0x150
 39271: 50 20 de 02 5e 86        ra = 734, jump @637
      :                          @2458 [@dyn 367]
 39277: 82 15 00 01              s0 = u64 [sp + 0x100]
 39281: 82 1b 08 01              a4 = u64 [sp + 0x108]
 39285: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 39289: 33 07 02                 a0 = 0x2
 39292: 33 08                    a1 = 0
 39294: 33 09                    a2 = 0
 39296: 64 5a                    a3 = s0
 39298: 33 00 e0 02              ra = 0x2e0
 39302: 0a 64                    ecalli 100 // 'log'
 39304: 01                       fallthrough
      :                          @2459 [@dyn 368]
 39305: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 39310: 53 38 00 00 ff 0a 07     jump @2553 if a1 <u 4294901760
      :                          @2460
 39317: 33 07 10 01 03           a0 = 0x30110
 39322: 95 77 00 00 01           a0 = a0 + 0x10000
 39327: 01                       fallthrough
      :                          @2461
 39328: 82 78                    a1 = u64 [a0]
 39330: c9 87 09                 a2 = a0 - a1
 39333: ab 59 f3 06              jump @2553 if a2 != s0
      :                          @2462
 39337: c9 68 09                 a2 = a1 - s1
 39340: 01                       fallthrough
      :                          @2463
 39341: 82 7a                    a3 = u64 [a0]
 39343: ab 8a f1                 jump @2461 if a3 != a1
      :                          @2464
 39346: 7b 79                    u64 [a0] = a2
 39348: 33 0b                    a4 = 0
 39350: 01                       fallthrough
      :                          @2465
 39351: ab 8a e9                 jump @2461 if a3 != a1
      :                          @2466
 39354: 28 de 06                 jump @2553
      :                          @2467
 39357: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 39362: 97 89 0d                 a2 = a1 << 0xd
 39365: d3 98 08                 a1 = a1 ^ a2
 39368: 98 89 07                 a2 = a1 >> 0x7
 39371: d3 98 08                 a1 = a1 ^ a2
 39374: 97 89 11                 a2 = a1 << 0x11
 39377: d3 98 08                 a1 = a1 ^ a2
 39380: 3e 08 e0 00 03           u64 [0x300e0] = a1
 39385: ca c8 07                 a0 = a1 * a5
 39388: 64 29                    a2 = t0
 39390: 7b 12 08                 u64 [sp + 0x8] = t0
 39393: cd 27 07                 a0 = a0 %u t0
 39396: 7b 17                    u64 [sp] = a0
 39398: 7b 17 68 02              u64 [sp + 0x268] = a0
 39402: 64 58                    a1 = s0
 39404: 7b 1a 10                 u64 [sp + 0x10] = a3
 39407: 33 00 e2 02              ra = 0x2e2
 39411: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 39414: 7b 10 38                 u64 [sp + 0x38] = ra
 39417: 7b 15 30                 u64 [sp + 0x30] = s0
 39420: 7b 16 28                 u64 [sp + 0x28] = s1
 39423: 33 0c e0 00 03           a5 = 0x300e0
 39428: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 39433: 7b 1b 08                 u64 [sp + 0x8] = a4
 39436: 64 95                    s0 = a2
 39438: 7b 17                    u64 [sp] = a0
 39440: 97 67 0d                 a0 = s1 << 0xd
 39443: d3 67 07                 a0 = a0 ^ s1
 39446: 98 79 07                 a2 = a0 >> 0x7
 39449: d3 97 07                 a0 = a0 ^ a2
 39452: 97 79 11                 a2 = a0 << 0x11
 39455: d3 97 07                 a0 = a0 ^ a2
 39458: 3a 09 58 00 03           a2 = u64 [0x30058]
 39463: 3e 07 e0 00 03           u64 [0x300e0] = a0
 39468: 95 5b ff                 a4 = s0 + 0xffffffffffffffff
 39471: ca 97 07                 a0 = a0 * a2
 39474: cd b7 09                 a2 = a0 %u a4
 39477: 95 99 01                 a2 = a2 + 0x1
 39480: 33 06 01                 s1 = 0x1
 39483: 64 97                    a0 = a2
 39485: 28 f0 b6                 jump @1646
      :                          @2468 [@dyn 369]
 39488: 64 79                    a2 = a0
 39490: 64 8a                    a3 = a1
 39492: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 39496: 7b 18 90 00              u64 [sp + 0x90] = a1
 39500: 82 17                    a0 = u64 [sp]
 39502: 64 98                    a1 = a2
 39504: 64 a9                    a2 = a3
 39506: 64 5a                    a3 = s0
 39508: 82 1b 08                 a4 = u64 [sp + 0x8]
 39511: 82 1c 10                 a5 = u64 [sp + 0x10]
 39514: 64 64                    t2 = s1
 39516: 50 20 e4 02 45 b7        ra = 740, jump @1655
      :                          @2469 [@dyn 370]
 39522: 78 17 88 00              u8 [sp + 0x88] = a0
 39526: 95 17 68 02              a0 = sp + 0x268
 39530: 7b 17 50 01              u64 [sp + 0x150] = a0
 39534: 33 07 50 03              a0 = 0x350
 39538: 7b 17 58 01              u64 [sp + 0x158] = a0
 39542: 95 18 b0 00              a1 = sp + 0xb0
 39546: 7b 18 60 01              u64 [sp + 0x160] = a1
 39550: 7b 17 68 01              u64 [sp + 0x168] = a0
 39554: 95 18 90 00              a1 = sp + 0x90
 39558: 7b 18 70 01              u64 [sp + 0x170] = a1
 39562: 7b 17 78 01              u64 [sp + 0x178] = a0
 39566: 95 17 88 00              a0 = sp + 0x88
 39570: 7b 17 80 01              u64 [sp + 0x180] = a0
 39574: 33 07 9c 03              a0 = 0x39c
 39578: 7b 17 88 01              u64 [sp + 0x188] = a0
 39582: 33 07 08 06 01           a0 = 0x10608
 39587: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 39591: 49 21 00 01 04           u64 [sp + 256] = 0x4
 39596: 49 21 18 01              u64 [sp + 280] = 0
 39600: 95 18 50 01              a1 = sp + 0x150
 39604: 7b 18 08 01              u64 [sp + 0x108] = a1
 39608: 49 21 10 01 04           u64 [sp + 272] = 0x4
 39613: 95 17 c8 00              a0 = sp + 0xc8
 39617: 95 18 f8 00              a1 = sp + 0xf8
 39621: 50 20 e6 02 00 85        ra = 742, jump @637
      :                          @2470 [@dyn 371]
 39627: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 39631: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 39635: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 39639: 33 07 02                 a0 = 0x2
 39642: 33 08                    a1 = 0
 39644: 33 09                    a2 = 0
 39646: 64 5a                    a3 = s0
 39648: 33 00 e8 02              ra = 0x2e8
 39652: 0a 64                    ecalli 100 // 'log'
 39654: 01                       fallthrough
      :                          @2471 [@dyn 372]
 39655: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 39660: 53 38 00 00 ff ac 05     jump @2553 if a1 <u 4294901760
      :                          @2472
 39667: 33 07 10 01 03           a0 = 0x30110
 39672: 95 77 00 00 01           a0 = a0 + 0x10000
 39677: 01                       fallthrough
      :                          @2473
 39678: 82 78                    a1 = u64 [a0]
 39680: c9 87 09                 a2 = a0 - a1
 39683: ab 59 95 05              jump @2553 if a2 != s0
      :                          @2474
 39687: c9 68 09                 a2 = a1 - s1
 39690: 01                       fallthrough
      :                          @2475
 39691: 82 7a                    a3 = u64 [a0]
 39693: ab 8a f1                 jump @2473 if a3 != a1
      :                          @2476
 39696: 7b 79                    u64 [a0] = a2
 39698: 33 0b                    a4 = 0
 39700: 01                       fallthrough
      :                          @2477
 39701: ab 8a e9                 jump @2473 if a3 != a1
      :                          @2478
 39704: 28 80 05                 jump @2553
      :                          @2479
 39707: 7b 19 b0 00              u64 [sp + 0xb0] = a2
 39711: 33 00 ea 02              ra = 0x2ea
 39715: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 39718: 7b 10 20                 u64 [sp + 0x20] = ra
 39721: 7b 15 18                 u64 [sp + 0x18] = s0
 39724: 64 85                    s0 = a1
 39726: 64 78                    a1 = a0
 39728: 64 17                    a0 = sp
 39730: 64 59                    a2 = s0
 39732: 33 00 0a 01              ra = 0x10a
 39736: 28 02 8e                 jump @788
      :                          @2480 [@dyn 373]
 39739: 7b 17 90 00              u64 [sp + 0x90] = a0
 39743: 7b 18 98 00              u64 [sp + 0x98] = a1
 39747: 95 17 80 00              a0 = sp + 0x80
 39751: 7b 17 50 01              u64 [sp + 0x150] = a0
 39755: 33 07 50 03              a0 = 0x350
 39759: 7b 17 58 01              u64 [sp + 0x158] = a0
 39763: 95 18 88 00              a1 = sp + 0x88
 39767: 7b 18 60 01              u64 [sp + 0x160] = a1
 39771: 7b 17 68 01              u64 [sp + 0x168] = a0
 39775: 95 18 68 02              a1 = sp + 0x268
 39779: 7b 18 70 01              u64 [sp + 0x170] = a1
 39783: 7b 17 78 01              u64 [sp + 0x178] = a0
 39787: 95 18 b0 00              a1 = sp + 0xb0
 39791: 7b 18 80 01              u64 [sp + 0x180] = a1
 39795: 7b 17 88 01              u64 [sp + 0x188] = a0
 39799: 95 17 90 00              a0 = sp + 0x90
 39803: 7b 17 90 01              u64 [sp + 0x190] = a0
 39807: 33 07 f4 00              a0 = 0xf4
 39811: 7b 17 98 01              u64 [sp + 0x198] = a0
 39815: 33 07 c8 0a 01           a0 = 0x10ac8
 39820: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 39824: 49 21 00 01 05           u64 [sp + 256] = 0x5
 39829: 49 21 18 01              u64 [sp + 280] = 0
 39833: 95 18 50 01              a1 = sp + 0x150
 39837: 7b 18 08 01              u64 [sp + 0x108] = a1
 39841: 49 21 10 01 05           u64 [sp + 272] = 0x5
 39846: 95 17 c8 00              a0 = sp + 0xc8
 39850: 95 18 f8 00              a1 = sp + 0xf8
 39854: 50 20 ec 02 17 84        ra = 748, jump @637
      :                          @2481 [@dyn 374]
 39860: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 39864: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 39868: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 39872: 33 07 02                 a0 = 0x2
 39875: 33 08                    a1 = 0
 39877: 33 09                    a2 = 0
 39879: 64 5a                    a3 = s0
 39881: 33 00 ee 02              ra = 0x2ee
 39885: 0a 64                    ecalli 100 // 'log'
 39887: 01                       fallthrough
      :                          @2482 [@dyn 375]
 39888: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 39893: 53 38 00 00 ff c3 04     jump @2553 if a1 <u 4294901760
      :                          @2483
 39900: 33 07 10 01 03           a0 = 0x30110
 39905: 95 77 00 00 01           a0 = a0 + 0x10000
 39910: 01                       fallthrough
      :                          @2484
 39911: 82 78                    a1 = u64 [a0]
 39913: c9 87 09                 a2 = a0 - a1
 39916: ab 59 ac 04              jump @2553 if a2 != s0
      :                          @2485
 39920: c9 68 09                 a2 = a1 - s1
 39923: 01                       fallthrough
      :                          @2486
 39924: 82 7a                    a3 = u64 [a0]
 39926: ab 8a f1                 jump @2484 if a3 != a1
      :                          @2487
 39929: 7b 79                    u64 [a0] = a2
 39931: 33 0b                    a4 = 0
 39933: 01                       fallthrough
      :                          @2488
 39934: ab 8a e9                 jump @2484 if a3 != a1
      :                          @2489
 39937: 28 97 04                 jump @2553
      :                          @2490
 39940: 95 17 27                 a0 = sp + 0x27
 39943: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 39947: 33 07 84 03              a0 = 0x384
 39951: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 39955: 33 07 80 0e 01           a0 = 0x10e80
 39960: 7b 17 50 01              u64 [sp + 0x150] = a0
 39964: 49 21 58 01 01           u64 [sp + 344] = 0x1
 39969: 49 21 70 01              u64 [sp + 368] = 0
 39973: 95 18 c8 00              a1 = sp + 0xc8
 39977: 7b 18 60 01              u64 [sp + 0x160] = a1
 39981: 49 21 68 01 01           u64 [sp + 360] = 0x1
 39986: 95 17 f8 00              a0 = sp + 0xf8
 39990: 95 18 50 01              a1 = sp + 0x150
 39994: 50 20 f0 02 8b 83        ra = 752, jump @637
      :                          @2491 [@dyn 376]
 40000: 82 15 00 01              s0 = u64 [sp + 0x100]
 40004: 82 1b 08 01              a4 = u64 [sp + 0x108]
 40008: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 40012: 33 07 02                 a0 = 0x2
 40015: 33 08                    a1 = 0
 40017: 33 09                    a2 = 0
 40019: 64 5a                    a3 = s0
 40021: 33 00 f2 02              ra = 0x2f2
 40025: 0a 64                    ecalli 100 // 'log'
 40027: 01                       fallthrough
      :                          @2492 [@dyn 377]
 40028: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 40033: 53 38 00 00 ff 37 04     jump @2553 if a1 <u 4294901760
      :                          @2493
 40040: 33 07 10 01 03           a0 = 0x30110
 40045: 95 77 00 00 01           a0 = a0 + 0x10000
 40050: 01                       fallthrough
      :                          @2494
 40051: 82 78                    a1 = u64 [a0]
 40053: c9 87 09                 a2 = a0 - a1
 40056: ab 59 20 04              jump @2553 if a2 != s0
      :                          @2495
 40060: c9 68 09                 a2 = a1 - s1
 40063: 01                       fallthrough
      :                          @2496
 40064: 82 7a                    a3 = u64 [a0]
 40066: ab 8a f1                 jump @2494 if a3 != a1
      :                          @2497
 40069: 7b 79                    u64 [a0] = a2
 40071: 33 0b                    a4 = 0
 40073: 01                       fallthrough
      :                          @2498
 40074: ab 8a e9                 jump @2494 if a3 != a1
      :                          @2499
 40077: 28 0b 04                 jump @2553
      :                          @2500
 40080: 33 0a                    a3 = 0
 40082: 33 0b 01                 a4 = 0x1
 40085: 83 88                    i32 a1 = a1 + 0
 40087: 33 09 01                 a2 = 0x1
 40090: 01                       fallthrough
      :                          @2501
 40091: d8 87 0c                 a5 = a0 <u a1
 40094: 85 c6 01                 s1 = a5 ^ 0x1
 40097: be c7 07                 i32 a0 = a0 + a5
 40100: c8 9a 0c                 a5 = a3 + a2
 40103: d8 78 0a                 a3 = a1 <u a0
 40106: d4 a6 06                 s1 = s1 | a3
 40109: 64 9a                    a3 = a2
 40111: 64 b9                    a2 = a4
 40113: c8 cb 0b                 a4 = a4 + a5
 40116: 51 06 e7                 jump @2501 if s1 == 0
      :                          @2502
 40119: 7b 1b 90 00              u64 [sp + 0x90] = a4
 40123: 95 17 b0 00              a0 = sp + 0xb0
 40127: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 40131: 33 07 86 03              a0 = 0x386
 40135: 7b 17 00 01              u64 [sp + 0x100] = a0
 40139: 95 17 90 00              a0 = sp + 0x90
 40143: 7b 17 08 01              u64 [sp + 0x108] = a0
 40147: 33 07 50 03              a0 = 0x350
 40151: 7b 17 10 01              u64 [sp + 0x110] = a0
 40155: 33 07 58 01 01           a0 = 0x10158
 40160: 7b 17 50 01              u64 [sp + 0x150] = a0
 40164: 49 21 58 01 02           u64 [sp + 344] = 0x2
 40169: 49 21 70 01              u64 [sp + 368] = 0
 40173: 95 18 f8 00              a1 = sp + 0xf8
 40177: 7b 18 60 01              u64 [sp + 0x160] = a1
 40181: 49 21 68 01 02           u64 [sp + 360] = 0x2
 40186: 95 17 c8 00              a0 = sp + 0xc8
 40190: 95 18 50 01              a1 = sp + 0x150
 40194: 50 20 f4 02 c3 82        ra = 756, jump @637
      :                          @2503 [@dyn 378]
 40200: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 40204: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 40208: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 40212: 33 07 02                 a0 = 0x2
 40215: 33 08                    a1 = 0
 40217: 33 09                    a2 = 0
 40219: 64 5a                    a3 = s0
 40221: 33 00 f6 02              ra = 0x2f6
 40225: 0a 64                    ecalli 100 // 'log'
 40227: 01                       fallthrough
      :                          @2504 [@dyn 379]
 40228: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 40233: 53 38 00 00 ff 6f 03     jump @2553 if a1 <u 4294901760
      :                          @2505
 40240: 33 07 10 01 03           a0 = 0x30110
 40245: 95 77 00 00 01           a0 = a0 + 0x10000
 40250: 01                       fallthrough
      :                          @2506
 40251: 82 78                    a1 = u64 [a0]
 40253: c9 87 09                 a2 = a0 - a1
 40256: ab 59 58 03              jump @2553 if a2 != s0
      :                          @2507
 40260: c9 68 09                 a2 = a1 - s1
 40263: 01                       fallthrough
      :                          @2508
 40264: 82 7a                    a3 = u64 [a0]
 40266: ab 8a f1                 jump @2506 if a3 != a1
      :                          @2509
 40269: 7b 79                    u64 [a0] = a2
 40271: 33 0b                    a4 = 0
 40273: 01                       fallthrough
      :                          @2510
 40274: ab 8a e9                 jump @2506 if a3 != a1
      :                          @2511
 40277: 28 43 03                 jump @2553
      :                          @2512
 40280: 64 89                    a2 = a1
 40282: 01                       fallthrough
      :                          @2513
 40283: 7b 19 90 00              u64 [sp + 0x90] = a2
 40287: 95 17 68 02              a0 = sp + 0x268
 40291: 7b 17 50 01              u64 [sp + 0x150] = a0
 40295: 33 07 50 03              a0 = 0x350
 40299: 7b 17 58 01              u64 [sp + 0x158] = a0
 40303: 95 18 b0 00              a1 = sp + 0xb0
 40307: 7b 18 60 01              u64 [sp + 0x160] = a1
 40311: 7b 17 68 01              u64 [sp + 0x168] = a0
 40315: 95 18 90 00              a1 = sp + 0x90
 40319: 7b 18 70 01              u64 [sp + 0x170] = a1
 40323: 7b 17 78 01              u64 [sp + 0x178] = a0
 40327: 33 07 98 09 01           a0 = 0x10998
 40332: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 40336: 49 21 00 01 03           u64 [sp + 256] = 0x3
 40341: 49 21 18 01              u64 [sp + 280] = 0
 40345: 95 18 50 01              a1 = sp + 0x150
 40349: 7b 18 08 01              u64 [sp + 0x108] = a1
 40353: 49 21 10 01 03           u64 [sp + 272] = 0x3
 40358: 95 17 c8 00              a0 = sp + 0xc8
 40362: 95 18 f8 00              a1 = sp + 0xf8
 40366: 50 20 f8 02 17 82        ra = 760, jump @637
      :                          @2514 [@dyn 380]
 40372: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 40376: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 40380: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 40384: 33 07 02                 a0 = 0x2
 40387: 33 08                    a1 = 0
 40389: 33 09                    a2 = 0
 40391: 64 5a                    a3 = s0
 40393: 33 00 fa 02              ra = 0x2fa
 40397: 0a 64                    ecalli 100 // 'log'
 40399: 01                       fallthrough
      :                          @2515 [@dyn 381]
 40400: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 40405: 53 38 00 00 ff c3 02     jump @2553 if a1 <u 4294901760
      :                          @2516
 40412: 33 07 10 01 03           a0 = 0x30110
 40417: 95 77 00 00 01           a0 = a0 + 0x10000
 40422: 01                       fallthrough
      :                          @2517
 40423: 82 78                    a1 = u64 [a0]
 40425: c9 87 09                 a2 = a0 - a1
 40428: ab 59 ac 02              jump @2553 if a2 != s0
      :                          @2518
 40432: c9 68 09                 a2 = a1 - s1
 40435: 01                       fallthrough
      :                          @2519
 40436: 82 7a                    a3 = u64 [a0]
 40438: ab 8a f1                 jump @2517 if a3 != a1
      :                          @2520
 40441: 7b 79                    u64 [a0] = a2
 40443: 33 0b                    a4 = 0
 40445: 01                       fallthrough
      :                          @2521
 40446: ab 8a e9                 jump @2517 if a3 != a1
      :                          @2522
 40449: 28 97 02                 jump @2553
      :                          @2523
 40452: 48 21 4c 01 01           u32 [sp + 332] = 0x1
 40457: 33 07 c5 9d 1c 81        a0 = 0xffffffff811c9dc5
 40463: 01                       fallthrough
      :                          @2524
 40464: 7a 17 80 00              u32 [sp + 0x80] = a0
 40468: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 40473: 97 89 0d                 a2 = a1 << 0xd
 40476: d3 98 08                 a1 = a1 ^ a2
 40479: 98 89 07                 a2 = a1 >> 0x7
 40482: d3 98 08                 a1 = a1 ^ a2
 40485: 97 89 11                 a2 = a1 << 0x11
 40488: d3 98 08                 a1 = a1 ^ a2
 40491: 3e 08 e0 00 03           u64 [0x300e0] = a1
 40496: 87 87 1d dd 6c 4f        i32 a0 = a1 * 0x4f6cdd1d
 40502: 8b 78 10                 i32 a1 = a0 >> 0x10
 40505: d3 87 07                 a0 = a0 ^ a1
 40508: 87 77 6b ca eb 85        i32 a0 = a0 * 0xffffffff85ebca6b
 40514: 8b 78 0d                 i32 a1 = a0 >> 0xd
 40517: d3 78 08                 a1 = a1 ^ a0
 40520: 82 17 c0 00              a0 = u64 [sp + 0xc0]
 40524: 87 88 35 ae b2 c2        i32 a1 = a1 * 0xffffffffc2b2ae35
 40530: 8b 89 10                 i32 a2 = a1 >> 0x10
 40533: d3 98 08                 a1 = a1 ^ a2
 40536: 7a 18 88 00              u32 [sp + 0x88] = a1
 40540: 51 07 2b                 jump @2528 if a0 == 0
      :                          @2525
 40543: 82 19 b8 00              a2 = u64 [sp + 0xb8]
 40547: 33 08                    a1 = 0
 40549: 01                       fallthrough
      :                          @2526
 40550: 7c 9a                    a3 = u8 [a2]
 40552: 95 99 01                 a2 = a2 + 0x1
 40555: be a8 08                 i32 a1 = a1 + a3
 40558: 97 8a 0a                 a3 = a1 << 0xa
 40561: be a8 08                 i32 a1 = a1 + a3
 40564: 8b 8a 06                 i32 a3 = a1 >> 0x6
 40567: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 40570: d3 a8 08                 a1 = a1 ^ a3
 40573: 52 07 e9                 jump @2526 if a0 != 0
      :                          @2527
 40576: 97 87 03                 a0 = a1 << 0x3
 40579: be 87 07                 i32 a0 = a0 + a1
 40582: 01                       fallthrough
      :                          @2528
 40583: 8b 78 0b                 i32 a1 = a0 >> 0xb
 40586: d3 87 07                 a0 = a0 ^ a1
 40589: 97 78 0f                 a1 = a0 << 0xf
 40592: be 87 07                 i32 a0 = a0 + a1
 40595: 7a 17 68 02              u32 [sp + 0x268] = a0
 40599: 95 17 48 01              a0 = sp + 0x148
 40603: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 40607: 33 07 a2 03              a0 = 0x3a2
 40611: 7b 17 00 01              u64 [sp + 0x100] = a0
 40615: 95 18 4c 01              a1 = sp + 0x14c
 40619: 7b 18 08 01              u64 [sp + 0x108] = a1
 40623: 7b 17 10 01              u64 [sp + 0x110] = a0
 40627: 95 18 80 00              a1 = sp + 0x80
 40631: 7b 18 18 01              u64 [sp + 0x118] = a1
 40635: 7b 17 20 01              u64 [sp + 0x120] = a0
 40639: 95 18 88 00              a1 = sp + 0x88
 40643: 7b 18 28 01              u64 [sp + 0x128] = a1
 40647: 7b 17 30 01              u64 [sp + 0x130] = a0
 40651: 95 18 68 02              a1 = sp + 0x268
 40655: 7b 18 38 01              u64 [sp + 0x138] = a1
 40659: 7b 17 40 01              u64 [sp + 0x140] = a0
 40663: 49 21 50 01 02           u64 [sp + 336] = 0x2
 40668: 49 21 60 01              u64 [sp + 352] = 0
 40672: 49 21 68 01 08           u64 [sp + 360] = 0x8
 40677: 49 21 70 01              u64 [sp + 368] = 0
 40681: 14 09 20 00 00 00 08 00 00 00 a2 = 0x800000020
 40691: 7b 19 78 01              u64 [sp + 0x178] = a2
 40695: 46 21 80 01 03           u8 [sp + 384] = 0x3
 40700: 49 21 88 01 02           u64 [sp + 392] = 0x2
 40705: 49 21 98 01              u64 [sp + 408] = 0
 40709: 49 21 a0 01 08           u64 [sp + 416] = 0x8
 40714: 49 21 a8 01 01           u64 [sp + 424] = 0x1
 40719: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
 40723: 46 21 b8 01 03           u8 [sp + 440] = 0x3
 40728: 49 21 c0 01 02           u64 [sp + 448] = 0x2
 40733: 49 21 d0 01              u64 [sp + 464] = 0
 40737: 49 21 d8 01 08           u64 [sp + 472] = 0x8
 40742: 49 21 e0 01 02           u64 [sp + 480] = 0x2
 40747: 7b 19 e8 01              u64 [sp + 0x1e8] = a2
 40751: 46 21 f0 01 03           u8 [sp + 496] = 0x3
 40756: 49 21 f8 01 02           u64 [sp + 504] = 0x2
 40761: 49 21 08 02              u64 [sp + 520] = 0
 40765: 49 21 10 02 08           u64 [sp + 528] = 0x8
 40770: 49 21 18 02 03           u64 [sp + 536] = 0x3
 40775: 7b 19 20 02              u64 [sp + 0x220] = a2
 40779: 46 21 28 02 03           u8 [sp + 552] = 0x3
 40784: 49 21 30 02 02           u64 [sp + 560] = 0x2
 40789: 49 21 40 02              u64 [sp + 576] = 0
 40793: 49 21 48 02 08           u64 [sp + 584] = 0x8
 40798: 49 21 50 02 04           u64 [sp + 592] = 0x4
 40803: 7b 19 58 02              u64 [sp + 0x258] = a2
 40807: 46 21 60 02 03           u8 [sp + 608] = 0x3
 40812: 33 07 a0 0c 01           a0 = 0x10ca0
 40817: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 40821: 49 21 d0 00 05           u64 [sp + 208] = 0x5
 40826: 95 18 50 01              a1 = sp + 0x150
 40830: 7b 18 e8 00              u64 [sp + 0xe8] = a1
 40834: 49 21 f0 00 05           u64 [sp + 240] = 0x5
 40839: 95 18 f8 00              a1 = sp + 0xf8
 40843: 7b 18 d8 00              u64 [sp + 0xd8] = a1
 40847: 49 21 e0 00 05           u64 [sp + 224] = 0x5
 40852: 95 17 90 00              a0 = sp + 0x90
 40856: 95 18 c8 00              a1 = sp + 0xc8
 40860: 50 20 fc 02 29 80        ra = 764, jump @637
      :                          @2529 [@dyn 382]
 40866: 82 15 98 00              s0 = u64 [sp + 0x98]
 40870: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 40874: 82 16 90 00              s1 = u64 [sp + 0x90]
 40878: 33 07 02                 a0 = 0x2
 40881: 33 08                    a1 = 0
 40883: 33 09                    a2 = 0
 40885: 64 5a                    a3 = s0
 40887: 33 00 fe 02              ra = 0x2fe
 40891: 0a 64                    ecalli 100 // 'log'
 40893: 01                       fallthrough
      :                          @2530 [@dyn 383]
 40894: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 40899: 53 38 00 00 ff 25        jump @2536 if a1 <u 4294901760
      :                          @2531
 40905: 33 07 10 01 03           a0 = 0x30110
 40910: 95 77 00 00 01           a0 = a0 + 0x10000
 40915: 01                       fallthrough
      :                          @2532
 40916: 82 78                    a1 = u64 [a0]
 40918: c9 87 09                 a2 = a0 - a1
 40921: ab 59 0f                 jump @2536 if a2 != s0
      :                          @2533
 40924: c9 68 09                 a2 = a1 - s1
 40927: 01                       fallthrough
      :                          @2534
 40928: 82 7a                    a3 = u64 [a0]
 40930: ab 8a f2                 jump @2532 if a3 != a1
      :                          @2535
 40933: 7b 79                    u64 [a0] = a2
 40935: 01                       fallthrough
      :                          @2536
 40936: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 40940: 51 07 ac 00              jump @2553 if a0 == 0
      :                          @2537
 40944: 56 37 00 00 01 a8 00     jump @2553 if a0 >u 65536
      :                          @2538
 40951: 82 18 b8 00              a1 = u64 [sp + 0xb8]
 40955: 33 0a 10 01 03           a3 = 0x30110
 40960: 95 a9 00 00 01           a2 = a3 + 0x10000
 40965: 01                       fallthrough
      :                          @2539
 40966: 82 9a                    a3 = u64 [a2]
 40968: c9 a9 0b                 a4 = a2 - a3
 40971: ab 8b 8d 00              jump @2553 if a4 != a1
      :                          @2540
 40975: c9 7a 0b                 a4 = a3 - a0
 40978: 01                       fallthrough
      :                          @2541
 40979: 82 9c                    a5 = u64 [a2]
 40981: ab ac f1                 jump @2539 if a5 != a3
      :                          @2542
 40984: 7b 9b                    u64 [a2] = a4
 40986: 33 06                    s1 = 0
 40988: 01                       fallthrough
      :                          @2543
 40989: ab ac e9                 jump @2539 if a5 != a3
      :                          @2544
 40992: 28 78                    jump @2553
      :                          @2545
 40994: 33 07 60 0e 01           a0 = 0x10e60
 40999: 7b 17 50 01              u64 [sp + 0x150] = a0
 41003: 49 21 58 01 01           u64 [sp + 344] = 0x1
 41008: 49 21 70 01              u64 [sp + 368] = 0
 41012: 33 07 a8 10 01           a0 = 0x110a8
 41017: 7b 17 60 01              u64 [sp + 0x160] = a0
 41021: 49 21 68 01              u64 [sp + 360] = 0
 41025: 95 17 f8 00              a0 = sp + 0xf8
 41029: 95 18 50 01              a1 = sp + 0x150
 41033: 50 20 00 03 7c 7f ff     ra = 768, jump @637
      :                          @2546 [@dyn 384]
 41040: 82 15 00 01              s0 = u64 [sp + 0x100]
 41044: 82 1b 08 01              a4 = u64 [sp + 0x108]
 41048: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 41052: 33 07 02                 a0 = 0x2
 41055: 33 08                    a1 = 0
 41057: 33 09                    a2 = 0
 41059: 64 5a                    a3 = s0
 41061: 33 00 02 03              ra = 0x302
 41065: 0a 64                    ecalli 100 // 'log'
 41067: 01                       fallthrough
      :                          @2547 [@dyn 385]
 41068: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 41073: 53 38 00 00 ff 27        jump @2553 if a1 <u 4294901760
      :                          @2548
 41079: 33 07 10 01 03           a0 = 0x30110
 41084: 95 77 00 00 01           a0 = a0 + 0x10000
 41089: 01                       fallthrough
      :                          @2549
 41090: 82 78                    a1 = u64 [a0]
 41092: c9 87 09                 a2 = a0 - a1
 41095: ab 59 11                 jump @2553 if a2 != s0
      :                          @2550
 41098: c9 68 09                 a2 = a1 - s1
 41101: 01                       fallthrough
      :                          @2551
 41102: 82 7a                    a3 = u64 [a0]
 41104: ab 8a f2                 jump @2549 if a3 != a1
      :                          @2552
 41107: 7b 79                    u64 [a0] = a2
 41109: 0a                       ecalli 0 // 'gas'
 41110: 28 04                    jump @2554
      :                          @2553
 41112: 0a                       ecalli 0 // 'gas'
 41113: 01                       fallthrough
      :                          @2554
 41114: 82 18 18                 a1 = u64 [sp + 0x18]
 41117: c9 78 07                 a0 = a1 - a0
 41120: 82 10 80 02              ra = u64 [sp + 0x280]
 41124: 82 15 78 02              s0 = u64 [sp + 0x278]
 41128: 82 16 70 02              s1 = u64 [sp + 0x270]
 41132: 95 11 88 02              sp = sp + 0x288
 41136: 32 00                    ret
      :                          @2555
 41138: 00                       trap
      :                          @2556
 41139: 00                       trap
      :                          @2557
 41140: 00                       trap
      :                          @2558
 41141: 00                       trap
      :                          @2559 [export #0: 'refine']
 41142: 95 11 e0 fe              sp = sp + 0xfffffffffffffee0
 41146: 7b 10 18 01              u64 [sp + 0x118] = ra
 41150: 7b 15 10 01              u64 [sp + 0x110] = s0
 41154: 7b 16 08 01              u64 [sp + 0x108] = s1
 41158: 64 85                    s0 = a1
 41160: 64 7a                    a3 = a0
 41162: 33 07 00 00 01           a0 = 0x10000
 41167: 53 15 04 43              jump @2568 if s0 <u 4
      :                          @2560
 41171: 7d a8                    a1 = i8 [a3]
 41173: 33 06 01                 s1 = 0x1
 41176: 59 08 37                 jump @2567 if a1 >=s 0
      :                          @2561
 41179: 84 89 ff 00              a2 = a1 & 0xff
 41183: 33 06 02                 s1 = 0x2
 41186: 53 29 c0 00 2d           jump @2567 if a2 <u 192
      :                          @2562
 41191: 33 06 03                 s1 = 0x3
 41194: 53 29 e0 00 25           jump @2567 if a2 <u 224
      :                          @2563
 41199: 33 06 04                 s1 = 0x4
 41202: 53 29 f0 00 1d           jump @2567 if a2 <u 240
      :                          @2564
 41207: 33 06 05                 s1 = 0x5
 41210: 53 29 f8 00 15           jump @2567 if a2 <u 248
      :                          @2565
 41215: 33 06 06                 s1 = 0x6
 41218: 53 29 fc 00 0d           jump @2567 if a2 <u 252
      :                          @2566
 41223: 88 98 fe 00              a1 = a2 <u 0xfe
 41227: 9a 86 08                 s1 = 0x8 - a1
 41230: 01                       fallthrough
      :                          @2567
 41231: ae 65 08                 jump @2569 if s0 >=u s1
      :                          @2568
 41234: 33 08                    a1 = 0
 41236: 28 e2 00                 jump @2594
      :                          @2569
 41239: 64 a7                    a0 = a3
 41241: 64 68                    a1 = s1
 41243: 7b 1a 60                 u64 [sp + 0x60] = a3
 41246: 50 20 04 03 6d 22        ra = 772, jump @3190
      :                          @2570 [@dyn 386]
 41252: aa 65 ca 00              jump @2593 if s0 == s1
      :                          @2571
 41256: 82 17 60                 a0 = u64 [sp + 0x60]
 41259: c8 67 07                 a0 = a0 + s1
 41262: 7d 78                    a1 = i8 [a0]
 41264: c9 65 06                 s1 = s0 - s1
 41267: 33 05 01                 s0 = 0x1
 41270: 59 08 37                 jump @2578 if a1 >=s 0
      :                          @2572
 41273: 84 89 ff 00              a2 = a1 & 0xff
 41277: 33 05 02                 s0 = 0x2
 41280: 53 29 c0 00 2d           jump @2578 if a2 <u 192
      :                          @2573
 41285: 33 05 03                 s0 = 0x3
 41288: 53 29 e0 00 25           jump @2578 if a2 <u 224
      :                          @2574
 41293: 33 05 04                 s0 = 0x4
 41296: 53 29 f0 00 1d           jump @2578 if a2 <u 240
      :                          @2575
 41301: 33 05 05                 s0 = 0x5
 41304: 53 29 f8 00 15           jump @2578 if a2 <u 248
      :                          @2576
 41309: 33 05 06                 s0 = 0x6
 41312: 53 29 fc 00 0d           jump @2578 if a2 <u 252
      :                          @2577
 41317: 88 98 fe 00              a1 = a2 <u 0xfe
 41321: 9a 85 08                 s0 = 0x8 - a1
 41324: 01                       fallthrough
      :                          @2578
 41325: ac 56 81 00              jump @2593 if s1 <u s0
      :                          @2579
 41329: 64 58                    a1 = s0
 41331: 7b 17 60                 u64 [sp + 0x60] = a0
 41334: 50 20 06 03 15 22        ra = 774, jump @3190
      :                          @2580 [@dyn 387]
 41340: 82 17 60                 a0 = u64 [sp + 0x60]
 41343: c8 57 07                 a0 = a0 + s0
 41346: 7b 17 60                 u64 [sp + 0x60] = a0
 41349: ab 56 0b                 jump @2582 if s1 != s0
      :                          @2581
 41352: 33 08                    a1 = 0
 41354: 33 06                    s1 = 0
 41356: 33 07                    a0 = 0
 41358: 28 56                    jump @2592
      :                          @2582
 41360: 7d 78                    a1 = i8 [a0]
 41362: c9 56 05                 s0 = s1 - s0
 41365: 33 06 01                 s1 = 0x1
 41368: 59 08 37                 jump @2589 if a1 >=s 0
      :                          @2583
 41371: 84 89 ff 00              a2 = a1 & 0xff
 41375: 33 06 02                 s1 = 0x2
 41378: 53 29 c0 00 2d           jump @2589 if a2 <u 192
      :                          @2584
 41383: 33 06 03                 s1 = 0x3
 41386: 53 29 e0 00 25           jump @2589 if a2 <u 224
      :                          @2585
 41391: 33 06 04                 s1 = 0x4
 41394: 53 29 f0 00 1d           jump @2589 if a2 <u 240
      :                          @2586
 41399: 33 06 05                 s1 = 0x5
 41402: 53 29 f8 00 15           jump @2589 if a2 <u 248
      :                          @2587
 41407: 33 06 06                 s1 = 0x6
 41410: 53 29 fc 00 0d           jump @2589 if a2 <u 252
      :                          @2588
 41415: 88 99 fe 00              a2 = a2 <u 0xfe
 41419: 9a 96 08                 s1 = 0x8 - a2
 41422: 01                       fallthrough
      :                          @2589
 41423: ac 65 00 03              jump @2633 if s0 <u s1
      :                          @2590
 41427: 64 68                    a1 = s1
 41429: 50 20 08 03 b6 21        ra = 776, jump @3190
      :                          @2591 [@dyn 388]
 41435: e4 65 08                 a1 = maxu(s0, s1)
 41438: c9 68 08                 a1 = a1 - s1
 41441: ac 78 0d                 jump @2593 if a1 <u a0
      :                          @2592
 41444: e4 78 08                 a1 = maxu(a1, a0)
 41447: c9 78 09                 a2 = a1 - a0
 41450: 55 19 20 1e              jump @2595 if a2 >=u 32
      :                          @2593
 41454: 33 08                    a1 = 0
 41456: 33 07 00 00 01           a0 = 0x10000
 41461: 01                       fallthrough
      :                          @2594
 41462: 82 10 18 01              ra = u64 [sp + 0x118]
 41466: 82 15 10 01              s0 = u64 [sp + 0x110]
 41470: 82 16 08 01              s1 = u64 [sp + 0x108]
 41474: 95 11 20 01              sp = sp + 0x120
 41478: 32 00                    ret
      :                          @2595
 41480: 7b 16 50                 u64 [sp + 0x50] = s1
 41483: 49 11 58 ff ff fe        u64 [sp + 88] = 0xfffffffffffeffff
 41489: 7b 17 68                 u64 [sp + 0x68] = a0
 41492: 7b 17 28                 u64 [sp + 0x28] = a0
 41495: 98 77 01                 a0 = a0 >> 0x1
 41498: 7b 17 70                 u64 [sp + 0x70] = a0
 41501: 95 17 68                 a0 = sp + 0x68
 41504: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 41508: 33 07 50 03              a0 = 0x350
 41512: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 41516: 95 18 70                 a1 = sp + 0x70
 41519: 7b 18 b8 00              u64 [sp + 0xb8] = a1
 41523: 7b 17 c0 00              u64 [sp + 0xc0] = a0
 41527: 33 07 98 0e 01           a0 = 0x10e98
 41532: 7b 17 d8 00              u64 [sp + 0xd8] = a0
 41536: 49 21 e0 00 02           u64 [sp + 224] = 0x2
 41541: 49 21 f8 00              u64 [sp + 248] = 0
 41545: 95 18 a8 00              a1 = sp + 0xa8
 41549: 7b 18 e8 00              u64 [sp + 0xe8] = a1
 41553: 49 21 f0 00 02           u64 [sp + 240] = 0x2
 41558: 95 17 90 00              a0 = sp + 0x90
 41562: 95 18 d8 00              a1 = sp + 0xd8
 41566: 50 20 0a 03 73 0c        ra = 778, jump @2789
      :                          @2596 [@dyn 389]
 41572: 82 15 98 00              s0 = u64 [sp + 0x98]
 41576: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 41580: 82 16 90 00              s1 = u64 [sp + 0x90]
 41584: 33 07 02                 a0 = 0x2
 41587: 33 08                    a1 = 0
 41589: 33 09                    a2 = 0
 41591: 64 5a                    a3 = s0
 41593: 33 00 0c 03              ra = 0x30c
 41597: 0a 64                    ecalli 100 // 'log'
 41599: 01                       fallthrough
      :                          @2597 [@dyn 390]
 41600: 82 17 58                 a0 = u64 [sp + 0x58]
 41603: c8 67 07                 a0 = a0 + s1
 41606: 53 37 00 00 ff 27        jump @2603 if a0 <u 4294901760
      :                          @2598
 41612: 33 07 10 01 03           a0 = 0x30110
 41617: 95 77 00 00 01           a0 = a0 + 0x10000
 41622: 01                       fallthrough
      :                          @2599
 41623: 82 78                    a1 = u64 [a0]
 41625: c9 87 09                 a2 = a0 - a1
 41628: ab 59 11                 jump @2603 if a2 != s0
      :                          @2600
 41631: c9 68 09                 a2 = a1 - s1
 41634: 01                       fallthrough
      :                          @2601
 41635: 82 7a                    a3 = u64 [a0]
 41637: ab 8a f2                 jump @2599 if a3 != a1
      :                          @2602
 41640: 7b 79                    u64 [a0] = a2
 41642: 33 0b                    a4 = 0
 41644: 01                       fallthrough
      :                          @2603
 41645: 82 17 70                 a0 = u64 [sp + 0x70]
 41648: 7b 17 20                 u64 [sp + 0x20] = a0
 41651: 51 07 02 02              jump @2630 if a0 == 0
      :                          @2604
 41655: 49 11 30                 u64 [sp + 48] = 0
 41658: 33 0a                    a3 = 0
 41660: 82 17 60                 a0 = u64 [sp + 0x60]
 41663: 82 1b 50                 a4 = u64 [sp + 0x50]
 41666: c8 7b 0b                 a4 = a4 + a0
 41669: 33 07 84 03              a0 = 0x384
 41673: 7b 17 50                 u64 [sp + 0x50] = a0
 41676: 33 07 50 03              a0 = 0x350
 41680: 7b 17 48                 u64 [sp + 0x48] = a0
 41683: 33 07 d0 0e 01           a0 = 0x10ed0
 41688: 7b 17 10                 u64 [sp + 0x10] = a0
 41691: 33 07 e9 00 03           a0 = 0x300e9
 41696: 7b 17                    u64 [sp] = a0
 41698: 33 07 10 01 03           a0 = 0x30110
 41703: 95 7c 00 00 01           a5 = a0 + 0x10000
 41708: 33 07 08 0f 01           a0 = 0x10f08
 41713: 7b 17 08                 u64 [sp + 0x8] = a0
 41716: 7b 1b 18                 u64 [sp + 0x18] = a4
 41719: 7b 1c 40                 u64 [sp + 0x40] = a5
 41722: 28 12                    jump @2606
      :                          @2605
 41724: 82 1a 60                 a3 = u64 [sp + 0x60]
 41727: 95 aa 01                 a3 = a3 + 0x1
 41730: 82 17 20                 a0 = u64 [sp + 0x20]
 41733: 82 1b 18                 a4 = u64 [sp + 0x18]
 41736: aa 7a bb 01              jump @2631 if a3 == a0
      :                          @2606
 41740: 97 a7 01                 a0 = a3 << 0x1
 41743: 82 18 28                 a1 = u64 [sp + 0x28]
 41746: ae 87 bc 01              jump @2632 if a0 >=u a1
      :                          @2607
 41750: c8 7b 09                 a2 = a4 + a0
 41753: 7c 99                    a2 = u8 [a2]
 41755: 86 77 01                 a0 = a0 | 0x1
 41758: 78 19 7f                 u8 [sp + 0x7f] = a2
 41761: ae 87 ad 01              jump @2632 if a0 >=u a1
      :                          @2608
 41765: 7b 19 38                 u64 [sp + 0x38] = a2
 41768: 7b 1a 60                 u64 [sp + 0x60] = a3
 41771: c8 b7 07                 a0 = a0 + a4
 41774: 7c 77                    a0 = u8 [a0]
 41776: ca 77 08                 a1 = a0 * a0
 41779: ca 78 07                 a0 = a1 * a0
 41782: 7b 17 80 00              u64 [sp + 0x80] = a0
 41786: 95 17 7f                 a0 = sp + 0x7f
 41789: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 41793: 82 17 50                 a0 = u64 [sp + 0x50]
 41796: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 41800: 95 17 80 00              a0 = sp + 0x80
 41804: 7b 17 b8 00              u64 [sp + 0xb8] = a0
 41808: 82 17 48                 a0 = u64 [sp + 0x48]
 41811: 7b 17 c0 00              u64 [sp + 0xc0] = a0
 41815: 82 17 10                 a0 = u64 [sp + 0x10]
 41818: 7b 17 d8 00              u64 [sp + 0xd8] = a0
 41822: 49 21 e0 00 02           u64 [sp + 224] = 0x2
 41827: 49 21 f8 00              u64 [sp + 248] = 0
 41831: 95 18 a8 00              a1 = sp + 0xa8
 41835: 7b 18 e8 00              u64 [sp + 0xe8] = a1
 41839: 49 21 f0 00 02           u64 [sp + 240] = 0x2
 41844: 95 17 90 00              a0 = sp + 0x90
 41848: 95 18 d8 00              a1 = sp + 0xd8
 41852: 50 20 0e 03 55 0b        ra = 782, jump @2789
      :                          @2609 [@dyn 391]
 41858: 82 16 98 00              s1 = u64 [sp + 0x98]
 41862: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 41866: 82 15 90 00              s0 = u64 [sp + 0x90]
 41870: 33 07 02                 a0 = 0x2
 41873: 33 08                    a1 = 0
 41875: 33 09                    a2 = 0
 41877: 64 6a                    a3 = s1
 41879: 33 00 10 03              ra = 0x310
 41883: 0a 64                    ecalli 100 // 'log'
 41885: 01                       fallthrough
      :                          @2610 [@dyn 392]
 41886: 82 1b 40                 a4 = u64 [sp + 0x40]
 41889: 82 17 58                 a0 = u64 [sp + 0x58]
 41892: c8 57 07                 a0 = a0 + s0
 41895: 53 37 00 00 ff 1a        jump @2615 if a0 <u 4294901760
      :                          @2611
 41901: 82 b7                    a0 = u64 [a4]
 41903: c9 7b 08                 a1 = a4 - a0
 41906: ab 68 0f                 jump @2615 if a1 != s1
      :                          @2612
 41909: c9 57 08                 a1 = a0 - s0
 41912: 01                       fallthrough
      :                          @2613
 41913: 82 b9                    a2 = u64 [a4]
 41915: ab 79 f2                 jump @2611 if a2 != a0
      :                          @2614
 41918: 7b b8                    u64 [a4] = a1
 41920: 01                       fallthrough
      :                          @2615
 41921: 82 15 80 00              s0 = u64 [sp + 0x80]
 41925: 49 21 88 00              u64 [sp + 136] = 0
 41929: 51 05 34                 jump @2619 if s0 == 0
      :                          @2616
 41932: 82 18 38                 a1 = u64 [sp + 0x38]
 41935: 88 87 aa 00              a0 = a1 <u 0xaa
 41939: 33 06 56                 s1 = 0x56
 41942: 94 76                    s1 = 0 if a0 != 0
 41944: c8 86 06                 s1 = s1 + a1
 41947: 64 67                    a0 = s1
 41949: 33 00 12 03              ra = 0x312
 41953: 28 19 b0                 jump @1709
      :                          @2617
 41956: 64 67                    a0 = s1
 41958: 50 20 12 03 14 b0        ra = 786, jump @1709
      :                          @2618 [@dyn 393]
 41964: 82 18 88 00              a1 = u64 [sp + 0x88]
 41968: c8 87 07                 a0 = a0 + a1
 41971: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 41974: 7b 17 88 00              u64 [sp + 0x88] = a0
 41978: 52 05 ea                 jump @2617 if s0 != 0
      :                          @2619
 41981: 82 18 60                 a1 = u64 [sp + 0x60]
 41984: 55 18 20 18              jump @2621 if a1 >=u 32
      :                          @2620
 41988: 7c 17 7f                 a0 = u8 [sp + 0x7f]
 41991: 82 19                    a2 = u64 [sp]
 41993: c8 98 08                 a1 = a1 + a2
 41996: 78 87                    u8 [a1] = a0
 41998: 82 17 30                 a0 = u64 [sp + 0x30]
 42001: 95 77 01                 a0 = a0 + 0x1
 42004: 7b 17 30                 u64 [sp + 0x30] = a0
 42007: 01                       fallthrough
      :                          @2621
 42008: 95 17 7f                 a0 = sp + 0x7f
 42011: 7b 17 d8 00              u64 [sp + 0xd8] = a0
 42015: 82 17 50                 a0 = u64 [sp + 0x50]
 42018: 7b 17 e0 00              u64 [sp + 0xe0] = a0
 42022: 95 17 80 00              a0 = sp + 0x80
 42026: 7b 17 e8 00              u64 [sp + 0xe8] = a0
 42030: 82 17 48                 a0 = u64 [sp + 0x48]
 42033: 7b 17 f0 00              u64 [sp + 0xf0] = a0
 42037: 95 18 88 00              a1 = sp + 0x88
 42041: 7b 18 f8 00              u64 [sp + 0xf8] = a1
 42045: 7b 17 00 01              u64 [sp + 0x100] = a0
 42049: 82 17 08                 a0 = u64 [sp + 0x8]
 42052: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 42056: 49 21 b0 00 03           u64 [sp + 176] = 0x3
 42061: 49 21 c8 00              u64 [sp + 200] = 0
 42065: 95 17 d8 00              a0 = sp + 0xd8
 42069: 7b 17 b8 00              u64 [sp + 0xb8] = a0
 42073: 49 21 c0 00 03           u64 [sp + 192] = 0x3
 42078: 95 17 90 00              a0 = sp + 0x90
 42082: 95 18 a8 00              a1 = sp + 0xa8
 42086: 50 20 14 03 6b 0a        ra = 788, jump @2789
      :                          @2622 [@dyn 394]
 42092: 82 16 98 00              s1 = u64 [sp + 0x98]
 42096: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 42100: 82 15 90 00              s0 = u64 [sp + 0x90]
 42104: 33 07 02                 a0 = 0x2
 42107: 33 08                    a1 = 0
 42109: 33 09                    a2 = 0
 42111: 64 6a                    a3 = s1
 42113: 33 00 16 03              ra = 0x316
 42117: 0a 64                    ecalli 100 // 'log'
 42119: 01                       fallthrough
      :                          @2623 [@dyn 395]
 42120: 82 17 58                 a0 = u64 [sp + 0x58]
 42123: c8 57 07                 a0 = a0 + s0
 42126: 82 1c 40                 a5 = u64 [sp + 0x40]
 42129: 53 37 00 00 ff 6b fe     jump @2605 if a0 <u 4294901760
      :                          @2624
 42136: 82 c7                    a0 = u64 [a5]
 42138: c9 7c 08                 a1 = a5 - a0
 42141: ab 68 5f fe              jump @2605 if a1 != s1
      :                          @2625
 42145: c9 57 08                 a1 = a0 - s0
 42148: 01                       fallthrough
      :                          @2626
 42149: 82 c9                    a2 = u64 [a5]
 42151: ab 79 f1                 jump @2624 if a2 != a0
      :                          @2627
 42154: 7b c8                    u64 [a5] = a1
 42156: 33 0a                    a3 = 0
 42158: 01                       fallthrough
      :                          @2628
 42159: ab 79 e9                 jump @2624 if a2 != a0
      :                          @2629
 42162: 28 4a fe                 jump @2605
      :                          @2630
 42165: 49 11 30                 u64 [sp + 48] = 0
 42168: 33 07 e9 00 03           a0 = 0x300e9
 42173: 82 18 30                 a1 = u64 [sp + 0x30]
 42176: 28 36 fd                 jump @2594
      :                          @2631
 42179: 33 07 e9 00 03           a0 = 0x300e9
 42184: 82 18 30                 a1 = u64 [sp + 0x30]
 42187: 28 2b fd                 jump @2594
      :                          @2632
 42190: 00                       trap
      :                          @2633
 42191: 00                       trap
      :                          @2634 [export #1: 'accumulate']
 42192: 95 11 38 ff              sp = sp + 0xffffffffffffff38
 42196: 7b 10 c0 00              u64 [sp + 0xc0] = ra
 42200: 7b 15 b8 00              u64 [sp + 0xb8] = s0
 42204: 7b 16 b0 00              u64 [sp + 0xb0] = s1
 42208: 33 05 00 00 01           s0 = 0x10000
 42213: 51 08 a3 00              jump @2654 if a1 == 0
      :                          @2635
 42217: 64 86                    s1 = a1
 42219: 7d 78                    a1 = i8 [a0]
 42221: 33 05 01                 s0 = 0x1
 42224: 59 08 37                 jump @2642 if a1 >=s 0
      :                          @2636
 42227: 84 89 ff 00              a2 = a1 & 0xff
 42231: 33 05 02                 s0 = 0x2
 42234: 53 29 c0 00 2d           jump @2642 if a2 <u 192
      :                          @2637
 42239: 33 05 03                 s0 = 0x3
 42242: 53 29 e0 00 25           jump @2642 if a2 <u 224
      :                          @2638
 42247: 33 05 04                 s0 = 0x4
 42250: 53 29 f0 00 1d           jump @2642 if a2 <u 240
      :                          @2639
 42255: 33 05 05                 s0 = 0x5
 42258: 53 29 f8 00 15           jump @2642 if a2 <u 248
      :                          @2640
 42263: 33 05 06                 s0 = 0x6
 42266: 53 29 fc 00 0d           jump @2642 if a2 <u 252
      :                          @2641
 42271: 88 98 fe 00              a1 = a2 <u 0xfe
 42275: 9a 85 08                 s0 = 0x8 - a1
 42278: 01                       fallthrough
      :                          @2642
 42279: ac 56 59                 jump @2653 if s1 <u s0
      :                          @2643
 42282: 64 58                    a1 = s0
 42284: 7b 17 38                 u64 [sp + 0x38] = a0
 42287: 50 20 18 03 5c 1e        ra = 792, jump @3190
      :                          @2644 [@dyn 396]
 42293: aa 56 4b                 jump @2653 if s1 == s0
      :                          @2645
 42296: 82 17 38                 a0 = u64 [sp + 0x38]
 42299: c8 57 07                 a0 = a0 + s0
 42302: 7d 78                    a1 = i8 [a0]
 42304: c9 56 06                 s1 = s1 - s0
 42307: 33 05 01                 s0 = 0x1
 42310: 59 08 37                 jump @2652 if a1 >=s 0
      :                          @2646
 42313: 84 89 ff 00              a2 = a1 & 0xff
 42317: 33 05 02                 s0 = 0x2
 42320: 53 29 c0 00 2d           jump @2652 if a2 <u 192
      :                          @2647
 42325: 33 05 03                 s0 = 0x3
 42328: 53 29 e0 00 25           jump @2652 if a2 <u 224
      :                          @2648
 42333: 33 05 04                 s0 = 0x4
 42336: 53 29 f0 00 1d           jump @2652 if a2 <u 240
      :                          @2649
 42341: 33 05 05                 s0 = 0x5
 42344: 53 29 f8 00 15           jump @2652 if a2 <u 248
      :                          @2650
 42349: 33 05 06                 s0 = 0x6
 42352: 53 29 fc 00 0d           jump @2652 if a2 <u 252
      :                          @2651
 42357: 88 98 fe 00              a1 = a2 <u 0xfe
 42361: 9a 85 08                 s0 = 0x8 - a1
 42364: 01                       fallthrough
      :                          @2652
 42365: ae 56 1f                 jump @2655 if s1 >=u s0
      :                          @2653
 42368: 33 08                    a1 = 0
 42370: 33 05 00 00 01           s0 = 0x10000
 42375: 01                       fallthrough
      :                          @2654
 42376: 64 57                    a0 = s0
 42378: 82 10 c0 00              ra = u64 [sp + 0xc0]
 42382: 82 15 b8 00              s0 = u64 [sp + 0xb8]
 42386: 82 16 b0 00              s1 = u64 [sp + 0xb0]
 42390: 95 11 c8 00              sp = sp + 0xc8
 42394: 32 00                    ret
      :                          @2655
 42396: 64 58                    a1 = s0
 42398: 7b 16 38                 u64 [sp + 0x38] = s1
 42401: 64 76                    s1 = a0
 42403: 50 20 1a 03 e8 1d        ra = 794, jump @3190
      :                          @2656 [@dyn 397]
 42409: c8 65 07                 a0 = s0 + s1
 42412: 82 16 38                 s1 = u64 [sp + 0x38]
 42415: ab 56 0c                 jump @2658 if s1 != s0
      :                          @2657
 42418: 33 08                    a1 = 0
 42420: 33 00 1c 03              ra = 0x31c
 42424: 28 d3 1d                 jump @3190
      :                          @2658
 42427: 7d 79                    a2 = i8 [a0]
 42429: c9 56 06                 s1 = s1 - s0
 42432: 33 08 01                 a1 = 0x1
 42435: 59 09 44                 jump @2665 if a2 >=s 0
      :                          @2659
 42438: 84 99 ff 00              a2 = a2 & 0xff
 42442: 33 0a c0 00              a3 = 0xc0
 42446: 33 08 02                 a1 = 0x2
 42449: ac a9 36                 jump @2665 if a2 <u a3
      :                          @2660
 42452: 33 0a e0 00              a3 = 0xe0
 42456: 33 08 03                 a1 = 0x3
 42459: ac a9 2c                 jump @2665 if a2 <u a3
      :                          @2661
 42462: 33 0a f0 00              a3 = 0xf0
 42466: 33 08 04                 a1 = 0x4
 42469: ac a9 22                 jump @2665 if a2 <u a3
      :                          @2662
 42472: 33 0a f8 00              a3 = 0xf8
 42476: 33 08 05                 a1 = 0x5
 42479: ac a9 18                 jump @2665 if a2 <u a3
      :                          @2663
 42482: 33 0a fc 00              a3 = 0xfc
 42486: 33 08 06                 a1 = 0x6
 42489: ac a9 0e                 jump @2665 if a2 <u a3
      :                          @2664
 42492: 88 98 fe 00              a1 = a2 <u 0xfe
 42496: 33 09 08                 a2 = 0x8
 42499: c9 89 08                 a1 = a2 - a1
 42502: 01                       fallthrough
      :                          @2665
 42503: 33 05 00 00 01           s0 = 0x10000
 42508: ae 86 08                 jump @2667 if s1 >=u a1
      :                          @2666
 42511: 33 08                    a1 = 0
 42513: 28 77 ff                 jump @2654
      :                          @2667
 42516: 50 20 1c 03 77 1d        ra = 796, jump @3190
      :                          @2668 [@dyn 398]
 42522: 83 79                    i32 a2 = a0 + 0
 42524: 51 09 ff 00              jump @2681 if a2 == 0
      :                          @2669
 42528: 33 0b                    a4 = 0
 42530: 14 09 ff ff ff ff 00 00 00 00 a2 = 0xffffffff
 42540: d2 97 07                 a0 = a0 & a2
 42543: 7b 17 20                 u64 [sp + 0x20] = a0
 42546: 33 05 e9 00 03           s0 = 0x300e9
 42551: 33 07 28                 a0 = 0x28
 42554: 7b 17 18                 u64 [sp + 0x18] = a0
 42557: 33 07 50 03              a0 = 0x350
 42561: 7b 17 10                 u64 [sp + 0x10] = a0
 42564: 33 07 38 0f 01           a0 = 0x10f38
 42569: 7b 17 08                 u64 [sp + 0x8] = a0
 42572: 33 06 10 01 03           s1 = 0x30110
 42577: 95 66 00 00 01           s1 = s1 + 0x10000
 42582: 49 01 ff ff fe           u64 [sp + 0] = 0xfffffffffffeffff
 42587: 7b 15 28                 u64 [sp + 0x28] = s0
 42590: 28 23                    jump @2672
      :                          @2670
 42592: 46 11 60                 u8 [sp + 96] = 0
 42595: 95 17 60                 a0 = sp + 0x60
 42598: 33 08 01                 a1 = 0x1
 42601: 33 0a 08                 a3 = 0x8
 42604: 82 15 28                 s0 = u64 [sp + 0x28]
 42607: 64 59                    a2 = s0
 42609: 0a 04                    ecalli 4 // 'write'
 42611: 01                       fallthrough
      :                          @2671
 42612: 82 1b 38                 a4 = u64 [sp + 0x38]
 42615: 95 bb 01                 a4 = a4 + 0x1
 42618: 82 17 20                 a0 = u64 [sp + 0x20]
 42621: aa 7b a9 00              jump @2682 if a4 == a0
      :                          @2672
 42625: 33 09 20                 a2 = 0x20
 42628: 33 0a 0f                 a3 = 0xf
 42631: 64 57                    a0 = s0
 42633: 33 08                    a1 = 0
 42635: 7b 1b 38                 u64 [sp + 0x38] = a4
 42638: 33 0c                    a5 = 0
 42640: 0a 01                    ecalli 1 // 'fetch'
 42642: 7b 17 40                 u64 [sp + 0x40] = a0
 42645: 7b 15 90 00              u64 [sp + 0x90] = s0
 42649: 82 17 18                 a0 = u64 [sp + 0x18]
 42652: 7b 17 98 00              u64 [sp + 0x98] = a0
 42656: 95 17 40                 a0 = sp + 0x40
 42659: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 42663: 82 17 10                 a0 = u64 [sp + 0x10]
 42666: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 42670: 82 17 08                 a0 = u64 [sp + 0x8]
 42673: 7b 17 60                 u64 [sp + 0x60] = a0
 42676: 49 11 68 02              u64 [sp + 104] = 0x2
 42680: 49 21 80 00              u64 [sp + 128] = 0
 42684: 95 18 90 00              a1 = sp + 0x90
 42688: 7b 18 70                 u64 [sp + 0x70] = a1
 42691: 49 11 78 02              u64 [sp + 120] = 0x2
 42695: 95 17 48                 a0 = sp + 0x48
 42698: 95 18 60                 a1 = sp + 0x60
 42701: 50 20 1e 03 04 08        ra = 798, jump @2789
      :                          @2673 [@dyn 399]
 42707: 82 15 50                 s0 = u64 [sp + 0x50]
 42710: 82 1b 58                 a4 = u64 [sp + 0x58]
 42713: 82 17 48                 a0 = u64 [sp + 0x48]
 42716: 7b 17 30                 u64 [sp + 0x30] = a0
 42719: 33 07 02                 a0 = 0x2
 42722: 33 08                    a1 = 0
 42724: 33 09                    a2 = 0
 42726: 64 5a                    a3 = s0
 42728: 33 00 20 03              ra = 0x320
 42732: 0a 64                    ecalli 100 // 'log'
 42734: 01                       fallthrough
      :                          @2674 [@dyn 400]
 42735: 82 1b 30                 a4 = u64 [sp + 0x30]
 42738: 82 17                    a0 = u64 [sp]
 42740: c8 b7 07                 a0 = a0 + a4
 42743: 53 37 00 00 ff 69 ff     jump @2670 if a0 <u 4294901760
      :                          @2675
 42750: 82 67                    a0 = u64 [s1]
 42752: c9 76 08                 a1 = s1 - a0
 42755: ab 58 5d ff              jump @2670 if a1 != s0
      :                          @2676
 42759: c9 b7 08                 a1 = a0 - a4
 42762: 01                       fallthrough
      :                          @2677
 42763: 82 69                    a2 = u64 [s1]
 42765: ab 79 f1                 jump @2675 if a2 != a0
      :                          @2678
 42768: 7b 68                    u64 [s1] = a1
 42770: 33 0a                    a3 = 0
 42772: 01                       fallthrough
      :                          @2679
 42773: ab 79 e9                 jump @2675 if a2 != a0
      :                          @2680
 42776: 28 48 ff                 jump @2670
      :                          @2681
 42779: 33 05 e9 00 03           s0 = 0x300e9
 42784: 33 08 20                 a1 = 0x20
 42787: 28 65 fe                 jump @2654
      :                          @2682
 42790: 33 08 20                 a1 = 0x20
 42793: 28 5f fe                 jump @2654
      :                          @2683 [export #2: 'on_transfer']
 42796: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
 42800: 7b 10 88 02              u64 [sp + 0x288] = ra
 42804: 7b 15 80 02              u64 [sp + 0x280] = s0
 42808: 7b 16 78 02              u64 [sp + 0x278] = s1
 42812: 64 8c                    a5 = a1
 42814: 64 79                    a2 = a0
 42816: 33 02                    t0 = 0
 42818: 95 7b 04                 a4 = a0 + 0x4
 42821: 33 07 20                 a0 = 0x20
 42824: 7b 17 28                 u64 [sp + 0x28] = a0
 42827: 33 07 24                 a0 = 0x24
 42830: 7b 17 58                 u64 [sp + 0x58] = a0
 42833: 33 07 6e                 a0 = 0x6e
 42836: 7b 17 20                 u64 [sp + 0x20] = a0
 42839: 33 07 a0 0f 01           a0 = 0x10fa0
 42844: 7b 17 18                 u64 [sp + 0x18] = a0
 42847: 33 07 aa 03              a0 = 0x3aa
 42851: 7b 17 10                 u64 [sp + 0x10] = a0
 42854: 33 07 d8 11 01           a0 = 0x111d8
 42859: 7b 17 08                 u64 [sp + 0x8] = a0
 42862: 33 07 10 01 03           a0 = 0x30110
 42867: 95 77 00 00 01           a0 = a0 + 0x10000
 42872: 7b 17 50                 u64 [sp + 0x50] = a0
 42875: 33 07 40 10 01           a0 = 0x11040
 42880: 7b 17                    u64 [sp] = a0
 42882: 95 97 08                 a0 = a2 + 0x8
 42885: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
 42888: 95 98 0c                 a1 = a2 + 0xc
 42891: 7b 18 60                 u64 [sp + 0x60] = a1
 42894: 33 08 08                 a1 = 0x8
 42897: 33 06 ff ff fe           s1 = 0xfffffffffffeffff
 42902: 7b 16 48                 u64 [sp + 0x48] = s1
 42905: 7b 17 c0 00              u64 [sp + 0xc0] = a0
 42909: 7b 17 b8 00              u64 [sp + 0xb8] = a0
 42913: 7b 1c 40                 u64 [sp + 0x40] = a5
 42916: 7b 19 38                 u64 [sp + 0x38] = a2
 42919: 7b 1b 30                 u64 [sp + 0x30] = a4
 42922: 7b 1a a8 00              u64 [sp + 0xa8] = a3
 42926: ac 8c c9 04              jump @2731 if a5 <u a1
      :                          @2684
 42930: 51 09 de 04              jump @2732 if a2 == 0
      :                          @2685
 42934: 51 0b da 04              jump @2732 if a4 == 0
      :                          @2686
 42938: 7c 97                    a0 = u8 [a2]
 42940: 7b 17 78                 u64 [sp + 0x78] = a0
 42943: 7c 97 01                 a0 = u8 [a2 + 0x1]
 42946: 7b 17 68                 u64 [sp + 0x68] = a0
 42949: 7c 97 02                 a0 = u8 [a2 + 0x2]
 42952: 7b 17 70                 u64 [sp + 0x70] = a0
 42955: 7c 97 03                 a0 = u8 [a2 + 0x3]
 42958: 7b 17 80 00              u64 [sp + 0x80] = a0
 42962: 7c b7                    a0 = u8 [a4]
 42964: 7b 17 98 00              u64 [sp + 0x98] = a0
 42968: 7c b7 01                 a0 = u8 [a4 + 0x1]
 42971: 7b 17 88 00              u64 [sp + 0x88] = a0
 42975: 7c b7 02                 a0 = u8 [a4 + 0x2]
 42978: 7b 17 90 00              u64 [sp + 0x90] = a0
 42982: 7c b7 03                 a0 = u8 [a4 + 0x3]
 42985: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 42989: 51 0a 53                 jump @2696 if a3 == 0
      :                          @2687
 42992: 82 17 c0 00              a0 = u64 [sp + 0xc0]
 42996: 7d 77                    a0 = i8 [a0]
 42998: 33 05 01                 s0 = 0x1
 43001: 59 07 4a                 jump @2697 if a0 >=s 0
      :                          @2688
 43004: 84 77 ff 00              a0 = a0 & 0xff
 43008: 33 05 02                 s0 = 0x2
 43011: 33 06 c0 00              s1 = 0xc0
 43015: ac 67 33                 jump @2694 if a0 <u s1
      :                          @2689
 43018: 33 05 03                 s0 = 0x3
 43021: 33 06 e0 00              s1 = 0xe0
 43025: ac 67 29                 jump @2694 if a0 <u s1
      :                          @2690
 43028: 33 05 04                 s0 = 0x4
 43031: 33 06 f0 00              s1 = 0xf0
 43035: ac 67 1f                 jump @2694 if a0 <u s1
      :                          @2691
 43038: 33 05 05                 s0 = 0x5
 43041: 33 06 f8 00              s1 = 0xf8
 43045: ac 67 15                 jump @2694 if a0 <u s1
      :                          @2692
 43048: 33 05 06                 s0 = 0x6
 43051: 33 06 fc 00              s1 = 0xfc
 43055: ac 67 0b                 jump @2694 if a0 <u s1
      :                          @2693
 43058: 88 77 fe 00              a0 = a0 <u 0xfe
 43062: 9a 75 08                 s0 = 0x8 - a0
 43065: 01                       fallthrough
      :                          @2694
 43066: ae 5a 09                 jump @2697 if a3 >=u s0
      :                          @2695
 43069: 28 3a 04                 jump @2731
      :                          @2696
 43072: 33 05                    s0 = 0
 43074: 01                       fallthrough
      :                          @2697
 43075: 82 17 c0 00              a0 = u64 [sp + 0xc0]
 43079: 64 58                    a1 = s0
 43081: 7b 12 b0 00              u64 [sp + 0xb0] = t0
 43085: 50 20 22 03 3e 1b        ra = 802, jump @3190
      :                          @2698 [@dyn 401]
 43091: 33 03 98 00              t1 = 0x98
 43095: 33 02 04                 t0 = 0x4
 43098: 33 06 08                 s1 = 0x8
 43101: 82 1c a8 00              a5 = u64 [sp + 0xa8]
 43105: 82 1b b0 00              a4 = u64 [sp + 0xb0]
 43109: ae 7b 12 04              jump @2731 if a4 >=u a0
      :                          @2699
 43113: 82 18 68                 a1 = u64 [sp + 0x68]
 43116: 97 88 08                 a1 = a1 << 0x8
 43119: 82 19 78                 a2 = u64 [sp + 0x78]
 43122: d4 98 08                 a1 = a1 | a2
 43125: 82 19 70                 a2 = u64 [sp + 0x70]
 43128: 97 99 10                 a2 = a2 << 0x10
 43131: 82 1a 80 00              a3 = u64 [sp + 0x80]
 43135: 97 aa 18                 a3 = a3 << 0x18
 43138: d4 a9 09                 a2 = a2 | a3
 43141: d4 89 04                 t2 = a2 | a1
 43144: 82 18 88 00              a1 = u64 [sp + 0x88]
 43148: 97 88 08                 a1 = a1 << 0x8
 43151: 82 19 98 00              a2 = u64 [sp + 0x98]
 43155: d4 98 08                 a1 = a1 | a2
 43158: 82 19 90 00              a2 = u64 [sp + 0x90]
 43162: 97 99 10                 a2 = a2 << 0x10
 43165: 82 1a a0 00              a3 = u64 [sp + 0xa0]
 43169: 97 aa 18                 a3 = a3 << 0x18
 43172: d4 a9 09                 a2 = a2 | a3
 43175: d4 89 00                 ra = a2 | a1
 43178: e4 5c 08                 a1 = maxu(a5, s0)
 43181: c9 58 08                 a1 = a1 - s0
 43184: 82 19 b8 00              a2 = u64 [sp + 0xb8]
 43188: c8 59 09                 a2 = a2 + s0
 43191: 82 1a 60                 a3 = u64 [sp + 0x60]
 43194: c8 a5 05                 s0 = s0 + a3
 43197: 64 ba                    a3 = a4
 43199: 01                       fallthrough
      :                          @2700
 43200: ac 68 b7 03              jump @2731 if a1 <u s1
      :                          @2701
 43204: aa 25 cc 03              jump @2732 if s0 == t0
      :                          @2702
 43208: 51 05 c8 03              jump @2732 if s0 == 0
      :                          @2703
 43212: ac 38 ab 03              jump @2731 if a1 <u t1
      :                          @2704
 43216: 51 0a 17                 jump @2707 if a3 == 0
      :                          @2705
 43219: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
 43223: 95 55 98 00              s0 = s0 + 0x98
 43227: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 43230: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 43233: 52 07 df                 jump @2700 if a0 != 0
      :                          @2706
 43236: 28 93 03                 jump @2731
      :                          @2707
 43239: 7c 97 01                 a0 = u8 [a2 + 0x1]
 43242: 7c 98                    a1 = u8 [a2]
 43244: 7c 9a 02                 a3 = u8 [a2 + 0x2]
 43247: 7d 9b 03                 a4 = i8 [a2 + 0x3]
 43250: 8a 77 08                 i32 a0 = a0 << 0x8
 43253: d4 87 07                 a0 = a0 | a1
 43256: 8a a8 10                 i32 a1 = a3 << 0x10
 43259: 8a ba 18                 i32 a3 = a4 << 0x18
 43262: d4 a8 08                 a1 = a1 | a3
 43265: d4 87 07                 a0 = a0 | a1
 43268: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 43272: 7c 57 01                 a0 = u8 [s0 + 0x1]
 43275: 7c 58                    a1 = u8 [s0]
 43277: 7c 5a 02                 a3 = u8 [s0 + 0x2]
 43280: 7d 5b 03                 a4 = i8 [s0 + 0x3]
 43283: 8a 77 08                 i32 a0 = a0 << 0x8
 43286: d4 87 07                 a0 = a0 | a1
 43289: 8a a8 10                 i32 a1 = a3 << 0x10
 43292: 8a ba 18                 i32 a3 = a4 << 0x18
 43295: d4 a8 08                 a1 = a1 | a3
 43298: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
 43301: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
 43304: d4 87 07                 a0 = a0 | a1
 43307: 7b 17 98 00              u64 [sp + 0x98] = a0
 43311: 7c 97 0d                 a0 = u8 [a2 + 0xd]
 43314: 97 aa 10                 a3 = a3 << 0x10
 43317: 97 bb 08                 a4 = a4 << 0x8
 43320: d4 ba 0a                 a3 = a3 | a4
 43323: 7c 98 0c                 a1 = u8 [a2 + 0xc]
 43326: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
 43329: d4 a7 07                 a0 = a0 | a3
 43332: 97 77 10                 a0 = a0 << 0x10
 43335: 97 88 08                 a1 = a1 << 0x8
 43338: d4 b8 08                 a1 = a1 | a4
 43341: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
 43344: 7c 9b 09                 a4 = u8 [a2 + 0x9]
 43347: d4 87 07                 a0 = a0 | a1
 43350: 97 77 10                 a0 = a0 << 0x10
 43353: 97 aa 08                 a3 = a3 << 0x8
 43356: d4 ba 0a                 a3 = a3 | a4
 43359: d4 a7 07                 a0 = a0 | a3
 43362: 7c 98 08                 a1 = u8 [a2 + 0x8]
 43365: 97 77 08                 a0 = a0 << 0x8
 43368: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
 43372: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
 43376: d4 87 07                 a0 = a0 | a1
 43379: 7b 17 90 00              u64 [sp + 0x90] = a0
 43383: 7c 97 95 00              a0 = u8 [a2 + 0x95]
 43387: 97 aa 10                 a3 = a3 << 0x10
 43390: 97 bb 08                 a4 = a4 << 0x8
 43393: d4 ba 0a                 a3 = a3 | a4
 43396: d4 a7 07                 a0 = a0 | a3
 43399: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
 43403: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
 43407: 95 98 10                 a1 = a2 + 0x10
 43410: 97 77 10                 a0 = a0 << 0x10
 43413: 97 aa 08                 a3 = a3 << 0x8
 43416: d4 ba 0a                 a3 = a3 | a4
 43419: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
 43423: d4 a7 07                 a0 = a0 | a3
 43426: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
 43430: 97 77 10                 a0 = a0 << 0x10
 43433: 97 bb 08                 a4 = a4 << 0x8
 43436: 7c 99 90 00              a2 = u8 [a2 + 0x90]
 43440: d4 ba 0a                 a3 = a3 | a4
 43443: d4 a7 07                 a0 = a0 | a3
 43446: 97 77 08                 a0 = a0 << 0x8
 43449: d4 97 07                 a0 = a0 | a2
 43452: 7b 17 88 00              u64 [sp + 0x88] = a0
 43456: 95 17 68 01              a0 = sp + 0x168
 43460: 33 09 80 00              a2 = 0x80
 43464: 64 45                    s0 = t2
 43466: 64 06                    s1 = ra
 43468: 50 20 24 03 7f 07        ra = 804, jump @2839
      :                          @2708 [@dyn 402]
 43474: 95 17 e0 00              a0 = sp + 0xe0
 43478: 95 18 68 01              a1 = sp + 0x168
 43482: 33 09 80 00              a2 = 0x80
 43486: 50 20 26 03 6d 07        ra = 806, jump @2839
      :                          @2709 [@dyn 403]
 43492: 7a 15 c8 00              u32 [sp + 0xc8] = s0
 43496: 7a 16 cc 00              u32 [sp + 0xcc] = s1
 43500: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 43504: 7a 17 d0 00              u32 [sp + 0xd0] = a0
 43508: 82 17 98 00              a0 = u64 [sp + 0x98]
 43512: 7a 17 d4 00              u32 [sp + 0xd4] = a0
 43516: 82 17 90 00              a0 = u64 [sp + 0x90]
 43520: 7b 17 d8 00              u64 [sp + 0xd8] = a0
 43524: 82 17 88 00              a0 = u64 [sp + 0x88]
 43528: 7b 17 60 01              u64 [sp + 0x160] = a0
 43532: 95 17 c8 00              a0 = sp + 0xc8
 43536: 7b 17 68 01              u64 [sp + 0x168] = a0
 43540: 82 17 28                 a0 = u64 [sp + 0x28]
 43543: 7b 17 70 01              u64 [sp + 0x170] = a0
 43547: 95 18 cc 00              a1 = sp + 0xcc
 43551: 7b 18 78 01              u64 [sp + 0x178] = a1
 43555: 7b 17 80 01              u64 [sp + 0x180] = a0
 43559: 95 18 d0 00              a1 = sp + 0xd0
 43563: 7b 18 88 01              u64 [sp + 0x188] = a1
 43567: 7b 17 90 01              u64 [sp + 0x190] = a0
 43571: 95 18 d4 00              a1 = sp + 0xd4
 43575: 7b 18 98 01              u64 [sp + 0x198] = a1
 43579: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 43583: 95 17 d8 00              a0 = sp + 0xd8
 43587: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 43591: 82 17 58                 a0 = u64 [sp + 0x58]
 43594: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 43598: 95 18 e0 00              a1 = sp + 0xe0
 43602: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
 43606: 82 18 20                 a1 = u64 [sp + 0x20]
 43609: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
 43613: 95 18 60 01              a1 = sp + 0x160
 43617: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
 43621: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
 43625: 82 17 18                 a0 = u64 [sp + 0x18]
 43628: 7b 17 28 02              u64 [sp + 0x228] = a0
 43632: 49 21 30 02 07           u64 [sp + 560] = 0x7
 43637: 49 21 48 02              u64 [sp + 584] = 0
 43641: 95 17 68 01              a0 = sp + 0x168
 43645: 7b 17 38 02              u64 [sp + 0x238] = a0
 43649: 49 21 40 02 07           u64 [sp + 576] = 0x7
 43654: 95 17 58 02              a0 = sp + 0x258
 43658: 95 18 28 02              a1 = sp + 0x228
 43662: 50 20 28 03 43 04        ra = 808, jump @2789
      :                          @2710 [@dyn 404]
 43668: 82 15 60 02              s0 = u64 [sp + 0x260]
 43672: 82 1b 68 02              a4 = u64 [sp + 0x268]
 43676: 82 16 58 02              s1 = u64 [sp + 0x258]
 43680: 33 07 02                 a0 = 0x2
 43683: 33 08                    a1 = 0
 43685: 33 09                    a2 = 0
 43687: 64 5a                    a3 = s0
 43689: 33 00 2a 03              ra = 0x32a
 43693: 0a 64                    ecalli 100 // 'log'
 43695: 01                       fallthrough
      :                          @2711 [@dyn 405]
 43696: 82 17 48                 a0 = u64 [sp + 0x48]
 43699: c8 67 07                 a0 = a0 + s1
 43702: 82 1b 50                 a4 = u64 [sp + 0x50]
 43705: 53 37 00 00 ff 1a        jump @2716 if a0 <u 4294901760
      :                          @2712
 43711: 82 b7                    a0 = u64 [a4]
 43713: c9 7b 08                 a1 = a4 - a0
 43716: ab 58 0f                 jump @2716 if a1 != s0
      :                          @2713
 43719: c9 67 08                 a1 = a0 - s1
 43722: 01                       fallthrough
      :                          @2714
 43723: 82 b9                    a2 = u64 [a4]
 43725: ab 79 f2                 jump @2712 if a2 != a0
      :                          @2715
 43728: 7b b8                    u64 [a4] = a1
 43730: 01                       fallthrough
      :                          @2716
 43731: 81 17 cc 00              a0 = i32 [sp + 0xcc]
 43735: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
 43739: 95 17 ec 01              a0 = sp + 0x1ec
 43743: 33 08 04                 a1 = 0x4
 43746: 95 19 e0 00              a2 = sp + 0xe0
 43750: 33 0a 80 00              a3 = 0x80
 43754: 0a 04                    ecalli 4 // 'write'
 43756: 0a                       ecalli 0 // 'gas'
 43757: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
 43761: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
 43765: 46 21 07 02 04           u8 [sp + 519] = 0x4
 43770: 7b 17 08 02              u64 [sp + 0x208] = a0
 43774: 95 17 07 02              a0 = sp + 0x207
 43778: 33 08 01                 a1 = 0x1
 43781: 95 19 08 02              a2 = sp + 0x208
 43785: 33 0a 08                 a3 = 0x8
 43788: 0a 04                    ecalli 4 // 'write'
 43790: 49 21 68 01 02           u64 [sp + 360] = 0x2
 43795: 49 21 78 01 02           u64 [sp + 376] = 0x2
 43800: 49 21 88 01              u64 [sp + 392] = 0
 43804: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
 43814: 7b 17 90 01              u64 [sp + 0x190] = a0
 43818: 46 21 98 01 03           u8 [sp + 408] = 0x3
 43823: 49 21 a0 01 02           u64 [sp + 416] = 0x2
 43828: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 43833: 49 21 c0 01 01           u64 [sp + 448] = 0x1
 43838: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
 43842: 95 17 07 02              a0 = sp + 0x207
 43846: 7b 17 58 02              u64 [sp + 0x258] = a0
 43850: 82 17 10                 a0 = u64 [sp + 0x10]
 43853: 7b 17 60 02              u64 [sp + 0x260] = a0
 43857: 95 17 f8 01              a0 = sp + 0x1f8
 43861: 7b 17 68 02              u64 [sp + 0x268] = a0
 43865: 82 17 58                 a0 = u64 [sp + 0x58]
 43868: 7b 17 70 02              u64 [sp + 0x270] = a0
 43872: 46 21 d0 01 03           u8 [sp + 464] = 0x3
 43877: 82 17 08                 a0 = u64 [sp + 0x8]
 43880: 7b 17 28 02              u64 [sp + 0x228] = a0
 43884: 49 21 30 02 02           u64 [sp + 560] = 0x2
 43889: 95 17 68 01              a0 = sp + 0x168
 43893: 7b 17 48 02              u64 [sp + 0x248] = a0
 43897: 49 21 50 02 02           u64 [sp + 592] = 0x2
 43902: 95 17 58 02              a0 = sp + 0x258
 43906: 7b 17 38 02              u64 [sp + 0x238] = a0
 43910: 49 21 40 02 02           u64 [sp + 576] = 0x2
 43915: 95 17 10 02              a0 = sp + 0x210
 43919: 95 18 28 02              a1 = sp + 0x228
 43923: 50 20 2c 03 3e 03        ra = 812, jump @2789
      :                          @2717 [@dyn 406]
 43929: 82 15 18 02              s0 = u64 [sp + 0x218]
 43933: 82 1b 20 02              a4 = u64 [sp + 0x220]
 43937: 82 16 10 02              s1 = u64 [sp + 0x210]
 43941: 33 07 02                 a0 = 0x2
 43944: 33 08                    a1 = 0
 43946: 33 09                    a2 = 0
 43948: 64 5a                    a3 = s0
 43950: 33 00 2e 03              ra = 0x32e
 43954: 0a 64                    ecalli 100 // 'log'
 43956: 01                       fallthrough
      :                          @2718 [@dyn 407]
 43957: 82 1b 50                 a4 = u64 [sp + 0x50]
 43960: 82 17 48                 a0 = u64 [sp + 0x48]
 43963: c8 67 07                 a0 = a0 + s1
 43966: 53 37 00 00 ff 1a        jump @2723 if a0 <u 4294901760
      :                          @2719
 43972: 82 b7                    a0 = u64 [a4]
 43974: c9 7b 08                 a1 = a4 - a0
 43977: ab 58 0f                 jump @2723 if a1 != s0
      :                          @2720
 43980: c9 67 08                 a1 = a0 - s1
 43983: 01                       fallthrough
      :                          @2721
 43984: 82 b9                    a2 = u64 [a4]
 43986: ab 79 f2                 jump @2719 if a2 != a0
      :                          @2722
 43989: 7b b8                    u64 [a4] = a1
 43991: 01                       fallthrough
      :                          @2723
 43992: 95 17 f0 01              a0 = sp + 0x1f0
 43996: 7b 17 58 02              u64 [sp + 0x258] = a0
 44000: 82 17 58                 a0 = u64 [sp + 0x58]
 44003: 7b 17 60 02              u64 [sp + 0x260] = a0
 44007: 82 17                    a0 = u64 [sp]
 44009: 7b 17 68 01              u64 [sp + 0x168] = a0
 44013: 49 21 70 01 02           u64 [sp + 368] = 0x2
 44018: 49 21 88 01              u64 [sp + 392] = 0
 44022: 95 17 58 02              a0 = sp + 0x258
 44026: 7b 17 78 01              u64 [sp + 0x178] = a0
 44030: 49 21 80 01 01           u64 [sp + 384] = 0x1
 44035: 95 17 28 02              a0 = sp + 0x228
 44039: 95 18 68 01              a1 = sp + 0x168
 44043: 50 20 30 03 c6 02        ra = 816, jump @2789
      :                          @2724 [@dyn 408]
 44049: 82 15 30 02              s0 = u64 [sp + 0x230]
 44053: 82 1b 38 02              a4 = u64 [sp + 0x238]
 44057: 82 16 28 02              s1 = u64 [sp + 0x228]
 44061: 33 07 02                 a0 = 0x2
 44064: 33 08                    a1 = 0
 44066: 33 09                    a2 = 0
 44068: 64 5a                    a3 = s0
 44070: 33 00 32 03              ra = 0x332
 44074: 0a 64                    ecalli 100 // 'log'
 44076: 01                       fallthrough
      :                          @2725 [@dyn 409]
 44077: 82 1b 50                 a4 = u64 [sp + 0x50]
 44080: 82 17 48                 a0 = u64 [sp + 0x48]
 44083: c8 67 07                 a0 = a0 + s1
 44086: 53 37 00 00 ff 1a        jump @2730 if a0 <u 4294901760
      :                          @2726
 44092: 82 b7                    a0 = u64 [a4]
 44094: c9 7b 08                 a1 = a4 - a0
 44097: ab 58 0f                 jump @2730 if a1 != s0
      :                          @2727
 44100: c9 67 08                 a1 = a0 - s1
 44103: 01                       fallthrough
      :                          @2728
 44104: 82 b9                    a2 = u64 [a4]
 44106: ab 79 f2                 jump @2726 if a2 != a0
      :                          @2729
 44109: 7b b8                    u64 [a4] = a1
 44111: 01                       fallthrough
      :                          @2730
 44112: 82 12 b0 00              t0 = u64 [sp + 0xb0]
 44116: 95 22 01                 t0 = t0 + 0x1
 44119: 82 17 b8 00              a0 = u64 [sp + 0xb8]
 44123: 95 77 98 00              a0 = a0 + 0x98
 44127: 7b 17 b8 00              u64 [sp + 0xb8] = a0
 44131: 82 1c 40                 a5 = u64 [sp + 0x40]
 44134: 82 19 38                 a2 = u64 [sp + 0x38]
 44137: 82 1b 30                 a4 = u64 [sp + 0x30]
 44140: 82 1a a8 00              a3 = u64 [sp + 0xa8]
 44144: 33 08 08                 a1 = 0x8
 44147: ae 8c 3f fb              jump @2684 if a5 >=u a1
      :                          @2731
 44151: 33 07 00 00 01           a0 = 0x10000
 44156: 33 08                    a1 = 0
 44158: 82 10 88 02              ra = u64 [sp + 0x288]
 44162: 82 15 80 02              s0 = u64 [sp + 0x280]
 44166: 82 16 78 02              s1 = u64 [sp + 0x278]
 44170: 95 11 90 02              sp = sp + 0x290
 44174: 32 00                    ret
      :                          @2732
 44176: 00                       trap
      :                          @2733
 44177: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 44180: 7b 10 40                 u64 [sp + 0x40] = ra
 44183: 7b 15 38                 u64 [sp + 0x38] = s0
 44186: 7b 16 30                 u64 [sp + 0x30] = s1
 44189: c8 89 09                 a2 = a2 + a1
 44192: ac 89 53                 jump @2741 if a2 <u a1
      :                          @2734
 44195: 64 75                    s0 = a0
 44197: 82 77                    a0 = u64 [a0]
 44199: 97 78 01                 a1 = a0 << 0x1
 44202: 33 0a 08                 a3 = 0x8
 44205: e4 a9 09                 a2 = maxu(a2, a3)
 44208: e4 98 06                 s1 = maxu(a1, a2)
 44211: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 44214: 98 88 3f                 a1 = a1 >> 0x3f
 44217: 51 07 12                 jump @2736 if a0 == 0
      :                          @2735
 44220: 82 59 08                 a2 = u64 [s0 + 0x8]
 44223: 7b 19 18                 u64 [sp + 0x18] = a2
 44226: 49 11 20 01              u64 [sp + 32] = 0x1
 44230: 7b 17 28                 u64 [sp + 0x28] = a0
 44233: 28 06                    jump @2737
      :                          @2736
 44235: 49 11 20                 u64 [sp + 32] = 0
 44238: 01                       fallthrough
      :                          @2737
 44239: 64 17                    a0 = sp
 44241: 95 1a 18                 a3 = sp + 0x18
 44244: 64 69                    a2 = s1
 44246: 50 20 34 03 33           ra = 820, jump @2745
      :                          @2738 [@dyn 410]
 44251: 82 18                    a1 = u64 [sp]
 44253: 82 17 08                 a0 = u64 [sp + 0x8]
 44256: 51 08 14                 jump @2742 if a1 == 0
      :                          @2739
 44259: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 44269: aa 87 0d                 jump @2743 if a0 == a1
      :                          @2740
 44272: 52 07 18                 jump @2744 if a0 != 0
      :                          @2741
 44275: 00                       trap
      :                          @2742
 44276: 7b 57 08                 u64 [s0 + 0x8] = a0
 44279: 7b 56                    u64 [s0] = s1
 44281: 01                       fallthrough
      :                          @2743
 44282: 82 10 40                 ra = u64 [sp + 0x40]
 44285: 82 15 38                 s0 = u64 [sp + 0x38]
 44288: 82 16 30                 s1 = u64 [sp + 0x30]
 44291: 95 11 48                 sp = sp + 0x48
 44294: 32 00                    ret
      :                          @2744
 44296: 00                       trap
      :                          @2745
 44297: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 44300: 7b 10 30                 u64 [sp + 0x30] = ra
 44303: 7b 15 28                 u64 [sp + 0x28] = s0
 44306: 7b 16 20                 u64 [sp + 0x20] = s1
 44309: 64 95                    s0 = a2
 44311: 64 72                    t0 = a0
 44313: 51 08 7a                 jump @2755 if a1 == 0
      :                          @2746
 44316: 82 a7 08                 a0 = u64 [a3 + 0x8]
 44319: 51 07 7d                 jump @2756 if a0 == 0
      :                          @2747
 44322: 82 a9 10                 a2 = u64 [a3 + 0x10]
 44325: 51 09 ab 00              jump @2763 if a2 == 0
      :                          @2748
 44329: 82 a8                    a1 = u64 [a3]
 44331: 33 06 10 01 03           s1 = 0x30110
 44336: 33 03 00 00 01           t1 = 0x10000
 44341: c8 36 06                 s1 = s1 + t1
 44344: 01                       fallthrough
      :                          @2749
 44345: 82 6a                    a3 = u64 [s1]
 44347: c8 5a 07                 a0 = a3 + s0
 44350: ac a7 d0 00              jump @2769 if a0 <u a3
      :                          @2750
 44354: 95 7b 01                 a4 = a0 + 0x1
 44357: 88 bc 01                 a5 = a4 <u 0x1
 44360: d8 b3 0b                 a4 = t1 <u a4
 44363: d4 cb 0b                 a4 = a4 | a5
 44366: 52 0b c0 00              jump @2769 if a4 != 0
      :                          @2751
 44370: 82 6b                    a4 = u64 [s1]
 44372: ab ab e5                 jump @2749 if a4 != a3
      :                          @2752
 44375: 7b 67                    u64 [s1] = a0
 44377: 33 0c                    a5 = 0
 44379: 7b 12 18                 u64 [sp + 0x18] = t0
 44382: 33 0a 10 01 03           a3 = 0x30110
 44387: 33 0b 00 00 01           a4 = 0x10000
 44392: 7b 1a                    u64 [sp] = a3
 44394: c8 ba 0a                 a3 = a3 + a4
 44397: c9 7a 07                 a0 = a3 - a0
 44400: 7b 17 10                 u64 [sp + 0x10] = a0
 44403: 7b 18 08                 u64 [sp + 0x8] = a1
 44406: 64 96                    s1 = a2
 44408: 50 20 36 03 d3 03        ra = 822, jump @2839
      :                          @2753 [@dyn 411]
 44414: 54 36 00 00 01 98 00     jump @2770 if s1 <=u 65536
      :                          @2754
 44421: 82 12 18                 t0 = u64 [sp + 0x18]
 44424: 82 18 10                 a1 = u64 [sp + 0x10]
 44427: 33 07                    a0 = 0
 44429: 7b 28 08                 u64 [t0 + 0x8] = a1
 44432: 28 b5 00                 jump @2776
      :                          @2755
 44435: 49 12 08                 u64 [t0 + 8] = 0
 44438: 33 07 01                 a0 = 0x1
 44441: 28 ac 00                 jump @2776
      :                          @2756
 44444: 33 09 10 01 03           a2 = 0x30110
 44449: 33 07 00 00 01           a0 = 0x10000
 44454: c8 79 09                 a2 = a2 + a0
 44457: 01                       fallthrough
      :                          @2757
 44458: 82 9a                    a3 = u64 [a2]
 44460: c8 5a 08                 a1 = a3 + s0
 44463: ac a8 5f                 jump @2769 if a1 <u a3
      :                          @2758
 44466: 95 8b 01                 a4 = a1 + 0x1
 44469: 88 bc 01                 a5 = a4 <u 0x1
 44472: d8 b7 0b                 a4 = a0 <u a4
 44475: d4 cb 0b                 a4 = a4 | a5
 44478: 52 0b 50                 jump @2769 if a4 != 0
      :                          @2759
 44481: 82 9b                    a4 = u64 [a2]
 44483: ab ab e7                 jump @2757 if a4 != a3
      :                          @2760
 44486: 7b 98                    u64 [a2] = a1
 44488: 33 0c                    a5 = 0
 44490: 01                       fallthrough
      :                          @2761
 44491: ab ab df                 jump @2757 if a4 != a3
      :                          @2762
 44494: 28 31                    jump @2768
      :                          @2763
 44496: 33 09 10 01 03           a2 = 0x30110
 44501: 33 07 00 00 01           a0 = 0x10000
 44506: c8 79 09                 a2 = a2 + a0
 44509: 01                       fallthrough
      :                          @2764
 44510: 82 9a                    a3 = u64 [a2]
 44512: c8 5a 08                 a1 = a3 + s0
 44515: ac a8 2b                 jump @2769 if a1 <u a3
      :                          @2765
 44518: 95 8b 01                 a4 = a1 + 0x1
 44521: 88 bc 01                 a5 = a4 <u 0x1
 44524: d8 b7 0b                 a4 = a0 <u a4
 44527: d4 cb 0b                 a4 = a4 | a5
 44530: 52 0b 1c                 jump @2769 if a4 != 0
      :                          @2766
 44533: 82 9b                    a4 = u64 [a2]
 44535: ab ab e7                 jump @2764 if a4 != a3
      :                          @2767
 44538: 7b 98                    u64 [a2] = a1
 44540: 33 0c                    a5 = 0
 44542: 01                       fallthrough
      :                          @2768
 44543: 33 07 10 01 04           a0 = 0x40110
 44548: c9 87 08                 a1 = a0 - a1
 44551: 33 07                    a0 = 0
 44553: 7b 28 08                 u64 [t0 + 0x8] = a1
 44556: 28 39                    jump @2776
      :                          @2769
 44558: 33 07 01                 a0 = 0x1
 44561: 7b 27 08                 u64 [t0 + 0x8] = a0
 44564: 28 31                    jump @2776
      :                          @2770
 44566: 64 6c                    a5 = s1
 44568: 82 17                    a0 = u64 [sp]
 44570: 95 77 00 00 01           a0 = a0 + 0x10000
 44575: 82 12 18                 t0 = u64 [sp + 0x18]
 44578: 82 16 08                 s1 = u64 [sp + 0x8]
 44581: 01                       fallthrough
      :                          @2771
 44582: 82 78                    a1 = u64 [a0]
 44584: c9 87 09                 a2 = a0 - a1
 44587: ab 69 11                 jump @2775 if a2 != s1
      :                          @2772
 44590: c9 c8 09                 a2 = a1 - a5
 44593: 01                       fallthrough
      :                          @2773
 44594: 82 7a                    a3 = u64 [a0]
 44596: ab 8a f2                 jump @2771 if a3 != a1
      :                          @2774
 44599: 7b 79                    u64 [a0] = a2
 44601: 33 0b                    a4 = 0
 44603: 01                       fallthrough
      :                          @2775
 44604: 82 18 10                 a1 = u64 [sp + 0x10]
 44607: 33 07                    a0 = 0
 44609: 7b 28 08                 u64 [t0 + 0x8] = a1
 44612: 01                       fallthrough
      :                          @2776
 44613: 7b 25 10                 u64 [t0 + 0x10] = s0
 44616: 7b 27                    u64 [t0] = a0
 44618: 82 10 30                 ra = u64 [sp + 0x30]
 44621: 82 15 28                 s0 = u64 [sp + 0x28]
 44624: 82 16 20                 s1 = u64 [sp + 0x20]
 44627: 95 11 38                 sp = sp + 0x38
 44630: 32 00                    ret
      :                          @2777
 44632: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 44635: 7b 10 40                 u64 [sp + 0x40] = ra
 44638: 7b 15 38                 u64 [sp + 0x38] = s0
 44641: 7b 16 30                 u64 [sp + 0x30] = s1
 44644: 95 88 01                 a1 = a1 + 0x1
 44647: 51 08 54                 jump @2785 if a1 == 0
      :                          @2778
 44650: 64 75                    s0 = a0
 44652: 82 77                    a0 = u64 [a0]
 44654: 97 79 01                 a2 = a0 << 0x1
 44657: 33 0a 08                 a3 = 0x8
 44660: e4 a8 08                 a1 = maxu(a1, a3)
 44663: e4 89 06                 s1 = maxu(a2, a1)
 44666: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 44669: 98 88 3f                 a1 = a1 >> 0x3f
 44672: 51 07 12                 jump @2780 if a0 == 0
      :                          @2779
 44675: 82 59 08                 a2 = u64 [s0 + 0x8]
 44678: 7b 19 18                 u64 [sp + 0x18] = a2
 44681: 49 11 20 01              u64 [sp + 32] = 0x1
 44685: 7b 17 28                 u64 [sp + 0x28] = a0
 44688: 28 06                    jump @2781
      :                          @2780
 44690: 49 11 20                 u64 [sp + 32] = 0
 44693: 01                       fallthrough
      :                          @2781
 44694: 64 17                    a0 = sp
 44696: 95 1a 18                 a3 = sp + 0x18
 44699: 64 69                    a2 = s1
 44701: 50 20 38 03 6c fe        ra = 824, jump @2745
      :                          @2782 [@dyn 412]
 44707: 82 18                    a1 = u64 [sp]
 44709: 82 17 08                 a0 = u64 [sp + 0x8]
 44712: 51 08 14                 jump @2786 if a1 == 0
      :                          @2783
 44715: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 44725: aa 87 0d                 jump @2787 if a0 == a1
      :                          @2784
 44728: 52 07 18                 jump @2788 if a0 != 0
      :                          @2785
 44731: 00                       trap
      :                          @2786
 44732: 7b 57 08                 u64 [s0 + 0x8] = a0
 44735: 7b 56                    u64 [s0] = s1
 44737: 01                       fallthrough
      :                          @2787
 44738: 82 10 40                 ra = u64 [sp + 0x40]
 44741: 82 15 38                 s0 = u64 [sp + 0x38]
 44744: 82 16 30                 s1 = u64 [sp + 0x30]
 44747: 95 11 48                 sp = sp + 0x48
 44750: 32 00                    ret
      :                          @2788
 44752: 00                       trap
      :                          @2789
 44753: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 44756: 7b 10 30                 u64 [sp + 0x30] = ra
 44759: 7b 15 28                 u64 [sp + 0x28] = s0
 44762: 7b 16 20                 u64 [sp + 0x20] = s1
 44765: 64 89                    a2 = a1
 44767: 82 8a 08                 a3 = u64 [a1 + 0x8]
 44770: 64 75                    s0 = a0
 44772: 51 0a 35                 jump @2794 if a3 == 0
      :                          @2790
 44775: 82 98                    a1 = u64 [a2]
 44777: 33 07                    a0 = 0
 44779: 95 8b 08                 a4 = a1 + 0x8
 44782: 01                       fallthrough
      :                          @2791
 44783: 82 bc                    a5 = u64 [a4]
 44785: c8 c7 07                 a0 = a0 + a5
 44788: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 44791: 95 bb 10                 a4 = a4 + 0x10
 44794: 52 0a f5                 jump @2791 if a3 != 0
      :                          @2792
 44797: 82 9a 18                 a3 = u64 [a2 + 0x18]
 44800: 51 0a 24                 jump @2796 if a3 == 0
      :                          @2793
 44803: 82 88 08                 a1 = u64 [a1 + 0x8]
 44806: 8e 88                    a1 = a1 >u 0
 44808: 88 7a 10                 a3 = a0 <u 0x10
 44811: 85 aa 01                 a3 = a3 ^ 0x1
 44814: d4 a8 08                 a1 = a1 | a3
 44817: 89 7a                    a3 = a0 <s 0
 44819: e0 a8 08                 a1 = a1 & ~a3
 44822: 52 08 0a                 jump @2795 if a1 != 0
      :                          @2794
 44825: 33 07                    a0 = 0
 44827: 33 08 01                 a1 = 0x1
 44830: 28 4a                    jump @2804
      :                          @2795
 44832: 97 77 01                 a0 = a0 << 0x1
 44835: 01                       fallthrough
      :                          @2796
 44836: 51 07 40                 jump @2803 if a0 == 0
      :                          @2797
 44839: 57 07 79                 jump @2809 if a0 <s 0
      :                          @2798
 44842: 64 52                    t0 = s0
 44844: 33 0b 10 01 03           a4 = 0x30110
 44849: 33 08 00 00 01           a1 = 0x10000
 44854: c8 8b 0b                 a4 = a4 + a1
 44857: 01                       fallthrough
      :                          @2799
 44858: 82 bc                    a5 = u64 [a4]
 44860: c8 7c 0a                 a3 = a5 + a0
 44863: ac ca 5f                 jump @2807 if a3 <u a5
      :                          @2800
 44866: 95 a5 01                 s0 = a3 + 0x1
 44869: 88 56 01                 s1 = s0 <u 0x1
 44872: d8 58 05                 s0 = a1 <u s0
 44875: d4 65 05                 s0 = s0 | s1
 44878: 52 05 50                 jump @2807 if s0 != 0
      :                          @2801
 44881: 82 b6                    s1 = u64 [a4]
 44883: ab c6 e7                 jump @2799 if s1 != a5
      :                          @2802
 44886: 7b ba                    u64 [a4] = a3
 44888: 33 08 10 01 04           a1 = 0x40110
 44893: c9 a8 08                 a1 = a1 - a3
 44896: 64 25                    s0 = t0
 44898: 28 06                    jump @2804
      :                          @2803
 44900: 33 08 01                 a1 = 0x1
 44903: 01                       fallthrough
      :                          @2804
 44904: 7b 17                    u64 [sp] = a0
 44906: 7b 18 08                 u64 [sp + 0x8] = a1
 44909: 49 11 10                 u64 [sp + 16] = 0
 44912: 33 08 78 10 01           a1 = 0x11078
 44917: 64 17                    a0 = sp
 44919: 50 20 3a 03 fe 0b        ra = 826, jump @3046
      :                          @2805 [@dyn 413]
 44925: 52 07 22                 jump @2808 if a0 != 0
      :                          @2806
 44928: 82 17 10                 a0 = u64 [sp + 0x10]
 44931: 82 18 08                 a1 = u64 [sp + 0x8]
 44934: 82 19                    a2 = u64 [sp]
 44936: 7b 57 10                 u64 [s0 + 0x10] = a0
 44939: 7b 58 08                 u64 [s0 + 0x8] = a1
 44942: 7b 59                    u64 [s0] = a2
 44944: 82 10 30                 ra = u64 [sp + 0x30]
 44947: 82 15 28                 s0 = u64 [sp + 0x28]
 44950: 82 16 20                 s1 = u64 [sp + 0x20]
 44953: 95 11 38                 sp = sp + 0x38
 44956: 32 00                    ret
      :                          @2807
 44958: 00                       trap
      :                          @2808
 44959: 00                       trap
      :                          @2809
 44960: 00                       trap
      :                          @2810 [@dyn 414]
 44961: 82 72                    t0 = u64 [a0]
 44963: 33 09 00 00 ff           a2 = 0xffffffffffff0000
 44968: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
 44973: ac 9a 28                 jump @2816 if a3 <u a2
      :                          @2811
 44976: 82 77 08                 a0 = u64 [a0 + 0x8]
 44979: 33 09 10 01 03           a2 = 0x30110
 44984: 95 99 00 00 01           a2 = a2 + 0x10000
 44989: 01                       fallthrough
      :                          @2812
 44990: 82 9a                    a3 = u64 [a2]
 44992: c9 a9 0b                 a4 = a2 - a3
 44995: ab 7b 12                 jump @2816 if a4 != a0
      :                          @2813
 44998: c9 2a 0b                 a4 = a3 - t0
 45001: 01                       fallthrough
      :                          @2814
 45002: 82 9c                    a5 = u64 [a2]
 45004: ab ac f2                 jump @2812 if a5 != a3
      :                          @2815
 45007: 7b 9b                    u64 [a2] = a4
 45009: 33 08                    a1 = 0
 45011: 32 00                    ret
      :                          @2816
 45013: 32 00                    ret
      :                          @2817 [@dyn 415]
 45015: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 45018: 7b 10 18                 u64 [sp + 0x18] = ra
 45021: 7b 15 10                 u64 [sp + 0x10] = s0
 45024: 7b 16 08                 u64 [sp + 0x8] = s1
 45027: 64 75                    s0 = a0
 45029: 82 7a 10                 a3 = u64 [a0 + 0x10]
 45032: 82 77                    a0 = u64 [a0]
 45034: c9 a7 07                 a0 = a0 - a3
 45037: 64 96                    s1 = a2
 45039: ac 97 2b                 jump @2820 if a0 <u a2
      :                          @2818
 45042: 7b 1a                    u64 [sp] = a3
 45044: 82 57 08                 a0 = u64 [s0 + 0x8]
 45047: c8 a7 07                 a0 = a0 + a3
 45050: 64 69                    a2 = s1
 45052: 50 20 40 03 4f 01        ra = 832, jump @2839
      :                          @2819 [@dyn 416]
 45058: 82 17                    a0 = u64 [sp]
 45060: c8 76 06                 s1 = s1 + a0
 45063: 7b 56 10                 u64 [s0 + 0x10] = s1
 45066: 33 07                    a0 = 0
 45068: 82 10 18                 ra = u64 [sp + 0x18]
 45071: 82 15 10                 s0 = u64 [sp + 0x10]
 45074: 82 16 08                 s1 = u64 [sp + 0x8]
 45077: 95 11 20                 sp = sp + 0x20
 45080: 32 00                    ret
      :                          @2820
 45082: 64 57                    a0 = s0
 45084: 7b 18                    u64 [sp] = a1
 45086: 64 a8                    a1 = a3
 45088: 64 69                    a2 = s1
 45090: 50 20 42 03 6f fc        ra = 834, jump @2733
      :                          @2821 [@dyn 417]
 45096: 82 18                    a1 = u64 [sp]
 45098: 82 5a 10                 a3 = u64 [s0 + 0x10]
 45101: 28 c5                    jump @2818
      :                          @2822 [@dyn 418]
 45103: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 45106: 7b 10 20                 u64 [sp + 0x20] = ra
 45109: 7b 15 18                 u64 [sp + 0x18] = s0
 45112: 7b 16 10                 u64 [sp + 0x10] = s1
 45115: 64 86                    s1 = a1
 45117: 83 88                    i32 a1 = a1 + 0
 45119: 33 09 80 00              a2 = 0x80
 45123: 64 7a                    a3 = a0
 45125: ae 98 2c                 jump @2827 if a1 >=u a2
      :                          @2823
 45128: 82 a8 10                 a1 = u64 [a3 + 0x10]
 45131: 82 a7                    a0 = u64 [a3]
 45133: ab 78 13                 jump @2826 if a1 != a0
      :                          @2824
 45136: 64 a7                    a0 = a3
 45138: 64 a5                    s0 = a3
 45140: 50 20 46 03 04 fe        ra = 838, jump @2777
      :                          @2825 [@dyn 419]
 45146: 64 5a                    a3 = s0
 45148: 82 58 10                 a1 = u64 [s0 + 0x10]
 45151: 01                       fallthrough
      :                          @2826
 45152: 82 a7 08                 a0 = u64 [a3 + 0x8]
 45155: c8 87 07                 a0 = a0 + a1
 45158: 78 76                    u8 [a0] = s1
 45160: 95 88 01                 a1 = a1 + 0x1
 45163: 7b a8 10                 u64 [a3 + 0x10] = a1
 45166: 28 ac 00                 jump @2835
      :                          @2827
 45169: 8b 67 0b                 i32 a0 = s1 >> 0xb
 45172: 48 11 0c                 u32 [sp + 12] = 0
 45175: 52 07 1c                 jump @2829 if a0 != 0
      :                          @2828
 45178: 98 67 06                 a0 = s1 >> 0x6
 45181: 86 77 c0 00              a0 = a0 | 0xc0
 45185: 78 17 0c                 u8 [sp + 0xc] = a0
 45188: 84 67 3f                 a0 = s1 & 0x3f
 45191: 86 77 80 00              a0 = a0 | 0x80
 45195: 78 17 0d                 u8 [sp + 0xd] = a0
 45198: 33 06 02                 s1 = 0x2
 45201: 28 63                    jump @2832
      :                          @2829
 45203: 8b 67 10                 i32 a0 = s1 >> 0x10
 45206: 52 07 29                 jump @2831 if a0 != 0
      :                          @2830
 45209: 98 67 0c                 a0 = s1 >> 0xc
 45212: 86 77 e0 00              a0 = a0 | 0xe0
 45216: 78 17 0c                 u8 [sp + 0xc] = a0
 45219: 97 67 34                 a0 = s1 << 0x34
 45222: 98 77 3a                 a0 = a0 >> 0x3a
 45225: 95 77 80 00              a0 = a0 + 0x80
 45229: 78 17 0d                 u8 [sp + 0xd] = a0
 45232: 84 67 3f                 a0 = s1 & 0x3f
 45235: 86 77 80 00              a0 = a0 | 0x80
 45239: 78 17 0e                 u8 [sp + 0xe] = a0
 45242: 33 06 03                 s1 = 0x3
 45245: 28 37                    jump @2832
      :                          @2831
 45247: 97 67 2b                 a0 = s1 << 0x2b
 45250: 98 77 3d                 a0 = a0 >> 0x3d
 45253: 95 77 f0 00              a0 = a0 + 0xf0
 45257: 78 17 0c                 u8 [sp + 0xc] = a0
 45260: 97 67 2e                 a0 = s1 << 0x2e
 45263: 98 77 3a                 a0 = a0 >> 0x3a
 45266: 95 77 80 00              a0 = a0 + 0x80
 45270: 78 17 0d                 u8 [sp + 0xd] = a0
 45273: 97 67 34                 a0 = s1 << 0x34
 45276: 98 77 3a                 a0 = a0 >> 0x3a
 45279: 95 77 80 00              a0 = a0 + 0x80
 45283: 78 17 0e                 u8 [sp + 0xe] = a0
 45286: 84 67 3f                 a0 = s1 & 0x3f
 45289: 86 77 80 00              a0 = a0 | 0x80
 45293: 78 17 0f                 u8 [sp + 0xf] = a0
 45296: 33 06 04                 s1 = 0x4
 45299: 01                       fallthrough
      :                          @2832
 45300: 82 a5 10                 s0 = u64 [a3 + 0x10]
 45303: 82 a7                    a0 = u64 [a3]
 45305: c9 57 07                 a0 = a0 - s0
 45308: ac 67 2e                 jump @2836 if a0 <u s1
      :                          @2833
 45311: 7b 1a                    u64 [sp] = a3
 45313: 82 a7 08                 a0 = u64 [a3 + 0x8]
 45316: c8 57 07                 a0 = a0 + s0
 45319: 95 18 0c                 a1 = sp + 0xc
 45322: 64 69                    a2 = s1
 45324: 50 20 48 03 3f           ra = 840, jump @2839
      :                          @2834 [@dyn 420]
 45329: c8 56 06                 s1 = s1 + s0
 45332: 82 17                    a0 = u64 [sp]
 45334: 7b 76 10                 u64 [a0 + 0x10] = s1
 45337: 01                       fallthrough
      :                          @2835
 45338: 33 07                    a0 = 0
 45340: 82 10 20                 ra = u64 [sp + 0x20]
 45343: 82 15 18                 s0 = u64 [sp + 0x18]
 45346: 82 16 10                 s1 = u64 [sp + 0x10]
 45349: 95 11 28                 sp = sp + 0x28
 45352: 32 00                    ret
      :                          @2836
 45354: 64 a7                    a0 = a3
 45356: 64 58                    a1 = s0
 45358: 64 69                    a2 = s1
 45360: 64 a5                    s0 = a3
 45362: 50 20 4a 03 5f fb        ra = 842, jump @2733
      :                          @2837 [@dyn 421]
 45368: 64 5a                    a3 = s0
 45370: 82 55 10                 s0 = u64 [s0 + 0x10]
 45373: 28 c2                    jump @2833
      :                          @2838 [@dyn 422]
 45375: 64 8a                    a3 = a1
 45377: 33 08 78 10 01           a1 = 0x11078
 45382: 64 a9                    a2 = a3
 45384: 28 2d 0a                 jump @3046
      :                          @2839
 45387: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 45390: 7b 10 18                 u64 [sp + 0x18] = ra
 45393: 7b 15 10                 u64 [sp + 0x10] = s0
 45396: 7b 16 08                 u64 [sp + 0x8] = s1
 45399: 53 19 10 64              jump @2848 if a2 <u 16
      :                          @2840
 45403: 8d 7a                    i32 a3 = -a0
 45405: 84 a2 07                 t0 = a3 & 0x7
 45408: c8 27 0b                 a4 = a0 + t0
 45411: 51 02 15                 jump @2843 if t0 == 0
      :                          @2841
 45414: 64 8c                    a5 = a1
 45416: 64 75                    s0 = a0
 45418: 01                       fallthrough
      :                          @2842
 45419: 7c ca                    a3 = u8 [a5]
 45421: 78 5a                    u8 [s0] = a3
 45423: 95 55 01                 s0 = s0 + 0x1
 45426: 95 cc 01                 a5 = a5 + 0x1
 45429: ac b5 f6                 jump @2842 if s0 <u a4
      :                          @2843
 45432: c8 28 03                 t1 = a1 + t0
 45435: c9 29 02                 t0 = a2 - t0
 45438: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 45441: 84 38 07                 a1 = t1 & 0x7
 45444: c8 4b 0a                 a3 = a4 + t2
 45447: 51 08 3b                 jump @2850 if a1 == 0
      :                          @2844
 45450: 58 04 4b                 jump @2853 if t2 <=s 0
      :                          @2845
 45453: 97 38 03                 a1 = t1 << 0x3
 45456: 84 80 38                 ra = a1 & 0x38
 45459: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 45462: 82 c5                    s0 = u64 [a5]
 45464: 8d 88                    i32 a1 = -a1
 45466: 84 88 38                 a1 = a1 & 0x38
 45469: 95 cc 08                 a5 = a5 + 0x8
 45472: 01                       fallthrough
      :                          @2846
 45473: 82 c6                    s1 = u64 [a5]
 45475: d0 05 05                 s0 = s0 >> ra
 45478: cf 86 09                 a2 = s1 << a1
 45481: d4 59 09                 a2 = a2 | s0
 45484: 7b b9                    u64 [a4] = a2
 45486: 95 bb 08                 a4 = a4 + 0x8
 45489: 95 cc 08                 a5 = a5 + 0x8
 45492: 64 65                    s0 = s1
 45494: ac ab eb                 jump @2846 if a4 <u a3
      :                          @2847
 45497: 28 1c                    jump @2853
      :                          @2848
 45499: 64 7a                    a3 = a0
 45501: 52 09 21                 jump @2854 if a2 != 0
      :                          @2849
 45504: 28 2f                    jump @2856
      :                          @2850
 45506: 58 04 13                 jump @2853 if t2 <=s 0
      :                          @2851
 45509: 64 38                    a1 = t1
 45511: 01                       fallthrough
      :                          @2852
 45512: 82 89                    a2 = u64 [a1]
 45514: 7b b9                    u64 [a4] = a2
 45516: 95 bb 08                 a4 = a4 + 0x8
 45519: 95 88 08                 a1 = a1 + 0x8
 45522: ac ab f6                 jump @2852 if a4 <u a3
      :                          @2853
 45525: c8 43 08                 a1 = t1 + t2
 45528: 84 29 07                 a2 = t0 & 0x7
 45531: 51 09 14                 jump @2856 if a2 == 0
      :                          @2854
 45534: c8 a9 09                 a2 = a2 + a3
 45537: 01                       fallthrough
      :                          @2855
 45538: 7c 8b                    a4 = u8 [a1]
 45540: 78 ab                    u8 [a3] = a4
 45542: 95 aa 01                 a3 = a3 + 0x1
 45545: 95 88 01                 a1 = a1 + 0x1
 45548: ac 9a f6                 jump @2855 if a3 <u a2
      :                          @2856
 45551: 82 10 18                 ra = u64 [sp + 0x18]
 45554: 82 15 10                 s0 = u64 [sp + 0x10]
 45557: 82 16 08                 s1 = u64 [sp + 0x8]
 45560: 95 11 20                 sp = sp + 0x20
 45563: 32 00                    ret
      :                          @2857
 45565: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 45568: 7b 10 18                 u64 [sp + 0x18] = ra
 45571: 7b 15 10                 u64 [sp + 0x10] = s0
 45574: 7b 16 08                 u64 [sp + 0x8] = s1
 45577: c9 87 0a                 a3 = a0 - a1
 45580: ae 9a 7d                 jump @2867 if a3 >=u a2
      :                          @2858
 45583: c8 97 0a                 a3 = a0 + a2
 45586: c8 98 02                 t0 = a1 + a2
 45589: 53 19 10 da 00           jump @2876 if a2 <u 16
      :                          @2859
 45594: 84 a4 07                 t2 = a3 & 0x7
 45597: 9a 43                    t1 = -t2
 45599: 84 ab f8                 a4 = a3 & 0xfffffffffffffff8
 45602: 51 04 1a                 jump @2862 if t2 == 0
      :                          @2860
 45605: c8 98 05                 s0 = a1 + a2
 45608: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 45611: 01                       fallthrough
      :                          @2861
 45612: 7c 5c                    a5 = u8 [s0]
 45614: 95 a6 ff                 s1 = a3 + 0xffffffffffffffff
 45617: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
 45620: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 45623: 64 6a                    a3 = s1
 45625: ac 6b f3                 jump @2861 if a4 <u s1
      :                          @2862
 45628: c8 32 02                 t0 = t0 + t1
 45631: c9 49 03                 t1 = a2 - t2
 45634: 84 34 f8                 t2 = t1 & 0xfffffffffffffff8
 45637: 7b 12                    u64 [sp] = t0
 45639: 84 29 07                 a2 = t0 & 0x7
 45642: c9 4b 0a                 a3 = a4 - t2
 45645: 51 09 b0 00              jump @2879 if a2 == 0
      :                          @2863
 45649: 58 04 c6 00              jump @2882 if t2 <=s 0
      :                          @2864
 45653: 82 16                    s1 = u64 [sp]
 45655: 97 69 03                 a2 = s1 << 0x3
 45658: 84 90 38                 ra = a2 & 0x38
 45661: 84 66 f8                 s1 = s1 & 0xfffffffffffffff8
 45664: 82 65                    s0 = u64 [s1]
 45666: 8d 99                    i32 a2 = -a2
 45668: 84 9c 38                 a5 = a2 & 0x38
 45671: 95 69 f8                 a2 = s1 + 0xfffffffffffffff8
 45674: 01                       fallthrough
      :                          @2865
 45675: 82 96                    s1 = u64 [a2]
 45677: cf c5 05                 s0 = s0 << a5
 45680: d0 06 08                 a1 = s1 >> ra
 45683: d4 58 08                 a1 = a1 | s0
 45686: 95 b2 f8                 t0 = a4 + 0xfffffffffffffff8
 45689: 7b b8 f8                 u64 [a4 + 0xfffffffffffffff8] = a1
 45692: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 45695: 64 65                    s0 = s1
 45697: 64 2b                    a4 = t0
 45699: ac 2a e8                 jump @2865 if a3 <u t0
      :                          @2866
 45702: 28 91 00                 jump @2882
      :                          @2867
 45705: 53 19 10 6d              jump @2877 if a2 <u 16
      :                          @2868
 45709: 8d 7a                    i32 a3 = -a0
 45711: 84 aa 07                 a3 = a3 & 0x7
 45714: c8 a7 0b                 a4 = a0 + a3
 45717: 51 0a 15                 jump @2871 if a3 == 0
      :                          @2869
 45720: 64 8c                    a5 = a1
 45722: 64 75                    s0 = a0
 45724: 01                       fallthrough
      :                          @2870
 45725: 7c c6                    s1 = u8 [a5]
 45727: 78 56                    u8 [s0] = s1
 45729: 95 55 01                 s0 = s0 + 0x1
 45732: 95 cc 01                 a5 = a5 + 0x1
 45735: ac b5 f6                 jump @2870 if s0 <u a4
      :                          @2871
 45738: c8 a8 03                 t1 = a1 + a3
 45741: c9 a9 02                 t0 = a2 - a3
 45744: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 45747: 84 38 07                 a1 = t1 & 0x7
 45750: c8 4b 0a                 a3 = a4 + t2
 45753: 51 08 84 00              jump @2886 if a1 == 0
      :                          @2872
 45757: 58 04 93 00              jump @2889 if t2 <=s 0
      :                          @2873
 45761: 97 38 03                 a1 = t1 << 0x3
 45764: 84 80 38                 ra = a1 & 0x38
 45767: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 45770: 82 c5                    s0 = u64 [a5]
 45772: 8d 88                    i32 a1 = -a1
 45774: 84 88 38                 a1 = a1 & 0x38
 45777: 95 cc 08                 a5 = a5 + 0x8
 45780: 01                       fallthrough
      :                          @2874
 45781: 82 c6                    s1 = u64 [a5]
 45783: d0 05 05                 s0 = s0 >> ra
 45786: cf 86 09                 a2 = s1 << a1
 45789: d4 59 09                 a2 = a2 | s0
 45792: 7b b9                    u64 [a4] = a2
 45794: 95 bb 08                 a4 = a4 + 0x8
 45797: 95 cc 08                 a5 = a5 + 0x8
 45800: 64 65                    s0 = s1
 45802: ac ab eb                 jump @2874 if a4 <u a3
      :                          @2875
 45805: 28 63                    jump @2889
      :                          @2876
 45807: 64 78                    a1 = a0
 45809: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 45812: 28 37                    jump @2884
      :                          @2877
 45814: 64 7a                    a3 = a0
 45816: 52 09 61                 jump @2890 if a2 != 0
      :                          @2878
 45819: 28 6f                    jump @2892
      :                          @2879
 45821: 58 04 1a                 jump @2882 if t2 <=s 0
      :                          @2880
 45824: c8 38 08                 a1 = a1 + t1
 45827: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 45830: 01                       fallthrough
      :                          @2881
 45831: 82 89                    a2 = u64 [a1]
 45833: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
 45836: 7b b9 f8                 u64 [a4 + 0xfffffffffffffff8] = a2
 45839: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 45842: 64 cb                    a4 = a5
 45844: ac ca f3                 jump @2881 if a3 <u a5
      :                          @2882
 45847: 84 38 07                 a1 = t1 & 0x7
 45850: 51 08 50                 jump @2892 if a1 == 0
      :                          @2883
 45853: 9a 49                    a2 = -t2
 45855: 82 12                    t0 = u64 [sp]
 45857: c8 92 02                 t0 = t0 + a2
 45860: c9 8a 08                 a1 = a3 - a1
 45863: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 45866: 01                       fallthrough
      :                          @2884
 45867: 7c 29                    a2 = u8 [t0]
 45869: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
 45872: 78 a9 ff                 u8 [a3 + 0xffffffffffffffff] = a2
 45875: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 45878: 64 ba                    a3 = a4
 45880: ac b8 f3                 jump @2884 if a1 <u a4
      :                          @2885
 45883: 28 2f                    jump @2892
      :                          @2886
 45885: 58 04 13                 jump @2889 if t2 <=s 0
      :                          @2887
 45888: 64 38                    a1 = t1
 45890: 01                       fallthrough
      :                          @2888
 45891: 82 89                    a2 = u64 [a1]
 45893: 7b b9                    u64 [a4] = a2
 45895: 95 bb 08                 a4 = a4 + 0x8
 45898: 95 88 08                 a1 = a1 + 0x8
 45901: ac ab f6                 jump @2888 if a4 <u a3
      :                          @2889
 45904: c8 43 08                 a1 = t1 + t2
 45907: 84 29 07                 a2 = t0 & 0x7
 45910: 51 09 14                 jump @2892 if a2 == 0
      :                          @2890
 45913: c8 a9 09                 a2 = a2 + a3
 45916: 01                       fallthrough
      :                          @2891
 45917: 7c 8b                    a4 = u8 [a1]
 45919: 78 ab                    u8 [a3] = a4
 45921: 95 aa 01                 a3 = a3 + 0x1
 45924: 95 88 01                 a1 = a1 + 0x1
 45927: ac 9a f6                 jump @2891 if a3 <u a2
      :                          @2892
 45930: 82 10 18                 ra = u64 [sp + 0x18]
 45933: 82 15 10                 s0 = u64 [sp + 0x10]
 45936: 82 16 08                 s1 = u64 [sp + 0x8]
 45939: 95 11 20                 sp = sp + 0x20
 45942: 32 00                    ret
      :                          @2893
 45944: 53 19 10 48              jump @2902 if a2 <u 16
      :                          @2894
 45948: 8d 7a                    i32 a3 = -a0
 45950: 84 aa 07                 a3 = a3 & 0x7
 45953: c8 a7 0b                 a4 = a0 + a3
 45956: 51 0a 0e                 jump @2897 if a3 == 0
      :                          @2895
 45959: 64 7c                    a5 = a0
 45961: 01                       fallthrough
      :                          @2896
 45962: 78 c8                    u8 [a5] = a1
 45964: 95 cc 01                 a5 = a5 + 0x1
 45967: ac bc fb                 jump @2896 if a5 <u a4
      :                          @2897
 45970: c9 a9 03                 t1 = a2 - a3
 45973: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 45976: c8 cb 0a                 a3 = a4 + a5
 45979: 58 0c 1d                 jump @2900 if a5 <=s 0
      :                          @2898
 45982: 84 82 ff 00              t0 = a1 & 0xff
 45986: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 45996: ca 92 0c                 a5 = t0 * a2
 45999: 01                       fallthrough
      :                          @2899
 46000: 7b bc                    u64 [a4] = a5
 46002: 95 bb 08                 a4 = a4 + 0x8
 46005: ac ab fb                 jump @2899 if a4 <u a3
      :                          @2900
 46008: 84 39 07                 a2 = t1 & 0x7
 46011: 52 09 0a                 jump @2903 if a2 != 0
      :                          @2901
 46014: 28 13                    jump @2905
      :                          @2902
 46016: 64 7a                    a3 = a0
 46018: 51 09 0f                 jump @2905 if a2 == 0
      :                          @2903
 46021: c8 a9 09                 a2 = a2 + a3
 46024: 01                       fallthrough
      :                          @2904
 46025: 78 a8                    u8 [a3] = a1
 46027: 95 aa 01                 a3 = a3 + 0x1
 46030: ac 9a fb                 jump @2904 if a3 <u a2
      :                          @2905
 46033: 32 00                    ret
      :                          @2906 [@dyn 423]
 46035: 82 77                    a0 = u64 [a0]
 46037: 01                       fallthrough
      :                          @2907
 46038: 28                       jump @2907
      :                          @2908 [@dyn 424]
 46039: 82 77                    a0 = u64 [a0]
 46041: 64 89                    a2 = a1
 46043: 33 08 01                 a1 = 0x1
 46046: 01                       fallthrough
      :                          @2909
 46047: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 46050: 7b 10 58                 u64 [sp + 0x58] = ra
 46053: 7b 15 50                 u64 [sp + 0x50] = s0
 46056: 7b 16 48                 u64 [sp + 0x48] = s1
 46059: 7b 19 08                 u64 [sp + 0x8] = a2
 46062: 7b 18                    u64 [sp] = a1
 46064: 98 7a 04                 a3 = a0 >> 0x4
 46067: 33 09 27                 a2 = 0x27
 46070: 53 2a 71 02 81 00        jump @2912 if a3 <u 625
      :                          @2910
 46076: 33 09 27                 a2 = 0x27
 46079: 95 1b 46                 a4 = sp + 0x46
 46082: 3a 08 d0 00 03           a1 = u64 [0x300d0]
 46087: 7b 18 18                 u64 [sp + 0x18] = a1
 46090: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
 46096: 33 03 7b 14              t1 = 0x147b
 46100: 33 05 ec 10 01           s0 = 0x110ec
 46105: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 46111: 01                       fallthrough
      :                          @2911
 46112: 64 74                    t2 = a0
 46114: 82 17 18                 a0 = u64 [sp + 0x18]
 46117: d6 74 07                 a0 = t2 mulhu a0
 46120: 98 77 0b                 a0 = a0 >> 0xb
 46123: 82 18 10                 a1 = u64 [sp + 0x10]
 46126: c0 87 02                 i32 t0 = a0 * a1
 46129: c8 42 0a                 a3 = t0 + t2
 46132: 97 a2 30                 t0 = a3 << 0x30
 46135: 98 28 32                 a1 = t0 >> 0x32
 46138: ca 38 08                 a1 = a1 * t1
 46141: 98 8c 11                 a5 = a1 >> 0x11
 46144: 98 88 10                 a1 = a1 >> 0x10
 46147: 84 88 fe 07              a1 = a1 & 0x7fe
 46151: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
 46154: c8 ca 0a                 a3 = a3 + a5
 46157: 97 aa 31                 a3 = a3 << 0x31
 46160: 98 aa 30                 a3 = a3 >> 0x30
 46163: c8 58 08                 a1 = a1 + s0
 46166: 7c 8c                    a5 = u8 [a1]
 46168: 7c 88 01                 a1 = u8 [a1 + 0x1]
 46171: c8 5a 0a                 a3 = a3 + s0
 46174: 7c a6 01                 s1 = u8 [a3 + 0x1]
 46177: 7c aa                    a3 = u8 [a3]
 46179: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
 46182: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
 46185: 78 b6 01                 u8 [a4 + 0x1] = s1
 46188: 78 ba                    u8 [a4] = a3
 46190: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
 46193: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 46196: ac 40 ac                 jump @2911 if ra <u t2
      :                          @2912
 46199: 54 17 63 3b              jump @2914 if a0 <=u 99
      :                          @2913
 46203: 97 78 30                 a1 = a0 << 0x30
 46206: 98 88 32                 a1 = a1 >> 0x32
 46209: 96 88 7b 14              a1 = a1 * 0x147b
 46213: 98 88 11                 a1 = a1 >> 0x11
 46216: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
 46219: c8 a7 07                 a0 = a0 + a3
 46222: 97 77 31                 a0 = a0 << 0x31
 46225: 98 77 30                 a0 = a0 >> 0x30
 46228: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 46231: 33 0a ec 10 01           a3 = 0x110ec
 46236: c8 a7 07                 a0 = a0 + a3
 46239: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 46242: 7c 77                    a0 = u8 [a0]
 46244: 95 1b 21                 a4 = sp + 0x21
 46247: c8 9b 0b                 a4 = a4 + a2
 46250: 78 ba 01                 u8 [a4 + 0x1] = a3
 46253: 78 b7                    u8 [a4] = a0
 46255: 64 87                    a0 = a1
 46257: 01                       fallthrough
      :                          @2914
 46258: 55 17 0a 14              jump @2916 if a0 >=u 10
      :                          @2915
 46262: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 46265: 95 18 21                 a1 = sp + 0x21
 46268: c8 98 08                 a1 = a1 + a2
 46271: 83 77 30                 i32 a0 = a0 + 0x30
 46274: 78 87                    u8 [a1] = a0
 46276: 28 21                    jump @2917
      :                          @2916
 46278: 97 77 01                 a0 = a0 << 0x1
 46281: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 46284: 33 08 ec 10 01           a1 = 0x110ec
 46289: c8 87 07                 a0 = a0 + a1
 46292: 7c 78 01                 a1 = u8 [a0 + 0x1]
 46295: 7c 77                    a0 = u8 [a0]
 46297: 95 1a 21                 a3 = sp + 0x21
 46300: c8 9a 0a                 a3 = a3 + a2
 46303: 78 a8 01                 u8 [a3 + 0x1] = a1
 46306: 78 a7                    u8 [a3] = a0
 46308: 01                       fallthrough
      :                          @2917
 46309: 95 1b 21                 a4 = sp + 0x21
 46312: c8 9b 0b                 a4 = a4 + a2
 46315: 9a 9c 27                 a5 = 0x27 - a2
 46318: 33 09 a8 10 01           a2 = 0x110a8
 46323: 82 17 08                 a0 = u64 [sp + 0x8]
 46326: 82 18                    a1 = u64 [sp]
 46328: 33 0a                    a3 = 0
 46330: 50 20 52 03 13           ra = 850, jump @2919
      :                          @2918 [@dyn 425]
 46335: 82 10 58                 ra = u64 [sp + 0x58]
 46338: 82 15 50                 s0 = u64 [sp + 0x50]
 46341: 82 16 48                 s1 = u64 [sp + 0x48]
 46344: 95 11 60                 sp = sp + 0x60
 46347: 32 00                    ret
      :                          @2919
 46349: 95 11 98                 sp = sp + 0xffffffffffffff98
 46352: 7b 10 60                 u64 [sp + 0x60] = ra
 46355: 7b 15 58                 u64 [sp + 0x58] = s0
 46358: 7b 16 50                 u64 [sp + 0x50] = s1
 46361: 7b 1b 18                 u64 [sp + 0x18] = a4
 46364: 51 08 4f                 jump @2926 if a1 == 0
      :                          @2920
 46367: 80 76 34                 s1 = u32 [a0 + 0x34]
 46370: 84 68 01                 a1 = s1 & 0x1
 46373: 33 0b 2b                 a4 = 0x2b
 46376: 33 05 00 00 11           s0 = 0x110000
 46381: db 8b 05                 s0 = a4 if a1 != 0
 46384: 7b 15 28                 u64 [sp + 0x28] = s0
 46387: c8 c8 02                 t0 = a1 + a5
 46390: 84 68 04                 a1 = s1 & 0x4
 46393: 51 08 42                 jump @2927 if a1 == 0
      :                          @2921
 46396: 7b 19 30                 u64 [sp + 0x30] = a2
 46399: 33 08                    a1 = 0
 46401: 51 0a 1a                 jump @2924 if a3 == 0
      :                          @2922
 46404: 64 a5                    s0 = a3
 46406: 01                       fallthrough
      :                          @2923
 46407: 7d 9b                    a4 = i8 [a2]
 46409: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 46412: 85 bb 01                 a4 = a4 ^ 0x1
 46415: c8 b8 08                 a1 = a1 + a4
 46418: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 46421: 95 99 01                 a2 = a2 + 0x1
 46424: 52 05 ef                 jump @2923 if s0 != 0
      :                          @2924
 46427: c8 82 02                 t0 = t0 + a1
 46430: 7b 1a 38                 u64 [sp + 0x38] = a3
 46433: 82 78                    a1 = u64 [a0]
 46435: 7b 1c 20                 u64 [sp + 0x20] = a5
 46438: 52 08 23                 jump @2928 if a1 != 0
      :                          @2925
 46441: 28 41                    jump @2933
      :                          @2926
 46443: 81 76 34                 s1 = i32 [a0 + 0x34]
 46446: 95 c2 01                 t0 = a5 + 0x1
 46449: 49 11 28 2d              u64 [sp + 40] = 0x2d
 46453: 84 68 04                 a1 = s1 & 0x4
 46456: 52 08 c4                 jump @2921 if a1 != 0
      :                          @2927
 46459: 49 11 30                 u64 [sp + 48] = 0
 46462: 7b 1a 38                 u64 [sp + 0x38] = a3
 46465: 82 78                    a1 = u64 [a0]
 46467: 7b 1c 20                 u64 [sp + 0x20] = a5
 46470: 51 08 24                 jump @2933 if a1 == 0
      :                          @2928
 46473: 82 75 08                 s0 = u64 [a0 + 0x8]
 46476: ae 52 1e                 jump @2933 if t0 >=u s0
      :                          @2929
 46479: 84 66 08                 s1 = s1 & 0x8
 46482: 52 06 51                 jump @2936 if s1 != 0
      :                          @2930
 46485: 7c 79 38                 a2 = u8 [a0 + 0x38]
 46488: c9 25 0a                 a3 = s0 - t0
 46491: 5a 19 01 a4 00           jump @2943 if a2 >s 1
      :                          @2931
 46496: 52 09 b1 00              jump @2945 if a2 != 0
      :                          @2932
 46500: 7b 1a 10                 u64 [sp + 0x10] = a3
 46503: 28 b0 00                 jump @2946
      :                          @2933
 46506: 82 75 20                 s0 = u64 [a0 + 0x20]
 46509: 82 76 28                 s1 = u64 [a0 + 0x28]
 46512: 64 57                    a0 = s0
 46514: 64 68                    a1 = s1
 46516: 82 19 28                 a2 = u64 [sp + 0x28]
 46519: 82 1a 30                 a3 = u64 [sp + 0x30]
 46522: 82 1b 38                 a4 = u64 [sp + 0x38]
 46525: 50 20 54 03 76 01        ra = 852, jump @2966
      :                          @2934 [@dyn 426]
 46531: 33 08 01                 a1 = 0x1
 46534: 52 07 bf 00              jump @2951 if a0 != 0
      :                          @2935
 46538: 82 6c 18                 a5 = u64 [s1 + 0x18]
 46541: 64 57                    a0 = s0
 46543: 82 18 18                 a1 = u64 [sp + 0x18]
 46546: 82 19 20                 a2 = u64 [sp + 0x20]
 46549: 82 10 60                 ra = u64 [sp + 0x60]
 46552: 82 15 58                 s0 = u64 [sp + 0x58]
 46555: 82 16 50                 s1 = u64 [sp + 0x50]
 46558: 95 11 68                 sp = sp + 0x68
 46561: 32 0c                    jump [a5]
      :                          @2936
 46563: 7b 12 40                 u64 [sp + 0x40] = t0
 46566: 81 78 30                 a1 = i32 [a0 + 0x30]
 46569: 7b 18 08                 u64 [sp + 0x8] = a1
 46572: 7c 79 38                 a2 = u8 [a0 + 0x38]
 46575: 7b 19                    u64 [sp] = a2
 46577: 82 79 20                 a2 = u64 [a0 + 0x20]
 46580: 82 76 28                 s1 = u64 [a0 + 0x28]
 46583: 48 17 30 30              u32 [a0 + 48] = 0x30
 46587: 7b 17 10                 u64 [sp + 0x10] = a0
 46590: 46 17 38 01              u8 [a0 + 56] = 0x1
 46594: 7b 19 48                 u64 [sp + 0x48] = a2
 46597: 64 97                    a0 = a2
 46599: 64 68                    a1 = s1
 46601: 82 19 28                 a2 = u64 [sp + 0x28]
 46604: 82 1a 30                 a3 = u64 [sp + 0x30]
 46607: 82 1b 38                 a4 = u64 [sp + 0x38]
 46610: 50 20 56 03 21 01        ra = 854, jump @2966
      :                          @2937 [@dyn 427]
 46616: 52 07 69                 jump @2950 if a0 != 0
      :                          @2938
 46619: 82 17 40                 a0 = u64 [sp + 0x40]
 46622: c9 75 05                 s0 = s0 - a0
 46625: 95 55 01                 s0 = s0 + 0x1
 46628: 01                       fallthrough
      :                          @2939
 46629: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 46632: 51 05 cb 00              jump @2961 if s0 == 0
      :                          @2940
 46636: 82 69 20                 a2 = u64 [s1 + 0x20]
 46639: 33 08 30                 a1 = 0x30
 46642: 82 17 48                 a0 = u64 [sp + 0x48]
 46645: b4 90 02 58 03           ra = 856, jump [a2]
      :                          @2941 [@dyn 428]
 46650: 51 07 eb                 jump @2939 if a0 == 0
      :                          @2942
 46653: 28 44                    jump @2950
      :                          @2943
 46655: 52 19 02 12              jump @2945 if a2 != 2
      :                          @2944
 46659: 98 a9 01                 a2 = a3 >> 0x1
 46662: 95 a8 01                 a1 = a3 + 0x1
 46665: 98 88 01                 a1 = a1 >> 0x1
 46668: 7b 18 10                 u64 [sp + 0x10] = a1
 46671: 28 08                    jump @2946
      :                          @2945
 46673: 64 a9                    a2 = a3
 46675: 49 11 10                 u64 [sp + 16] = 0
 46678: 01                       fallthrough
      :                          @2946
 46679: 82 78 20                 a1 = u64 [a0 + 0x20]
 46682: 7b 18 48                 u64 [sp + 0x48] = a1
 46685: 82 76 28                 s1 = u64 [a0 + 0x28]
 46688: 81 77 30                 a0 = i32 [a0 + 0x30]
 46691: 7b 17 40                 u64 [sp + 0x40] = a0
 46694: 95 95 01                 s0 = a2 + 0x1
 46697: 01                       fallthrough
      :                          @2947
 46698: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 46701: 51 05 28                 jump @2952 if s0 == 0
      :                          @2948
 46704: 82 69 20                 a2 = u64 [s1 + 0x20]
 46707: 82 17 48                 a0 = u64 [sp + 0x48]
 46710: 82 18 40                 a1 = u64 [sp + 0x40]
 46713: b4 90 02 5a 03           ra = 858, jump [a2]
      :                          @2949 [@dyn 429]
 46718: 51 07 ec                 jump @2947 if a0 == 0
      :                          @2950
 46721: 33 08 01                 a1 = 0x1
 46724: 01                       fallthrough
      :                          @2951
 46725: 64 87                    a0 = a1
 46727: 82 10 60                 ra = u64 [sp + 0x60]
 46730: 82 15 58                 s0 = u64 [sp + 0x58]
 46733: 82 16 50                 s1 = u64 [sp + 0x50]
 46736: 95 11 68                 sp = sp + 0x68
 46739: 32 00                    ret
      :                          @2952
 46741: 82 15 48                 s0 = u64 [sp + 0x48]
 46744: 64 57                    a0 = s0
 46746: 64 68                    a1 = s1
 46748: 82 19 28                 a2 = u64 [sp + 0x28]
 46751: 82 1a 30                 a3 = u64 [sp + 0x30]
 46754: 82 1b 38                 a4 = u64 [sp + 0x38]
 46757: 50 20 5c 03 8e 00        ra = 860, jump @2966
      :                          @2953 [@dyn 430]
 46763: 33 08 01                 a1 = 0x1
 46766: 52 07 d7                 jump @2951 if a0 != 0
      :                          @2954
 46769: 82 6a 18                 a3 = u64 [s1 + 0x18]
 46772: 64 57                    a0 = s0
 46774: 82 18 18                 a1 = u64 [sp + 0x18]
 46777: 82 19 20                 a2 = u64 [sp + 0x20]
 46780: b4 a0 02 5e 03           ra = 862, jump [a3]
      :                          @2955 [@dyn 431]
 46785: 33 08 01                 a1 = 0x1
 46788: 52 07 c1                 jump @2951 if a0 != 0
      :                          @2956
 46791: 82 17 10                 a0 = u64 [sp + 0x10]
 46794: 9a 77                    a0 = -a0
 46796: 7b 17 38                 u64 [sp + 0x38] = a0
 46799: 33 05 ff                 s0 = 0xffffffffffffffff
 46802: 01                       fallthrough
      :                          @2957
 46803: 82 17 38                 a0 = u64 [sp + 0x38]
 46806: c8 57 07                 a0 = a0 + s0
 46809: 51 17 ff 45              jump @2964 if a0 == 4294967295
      :                          @2958
 46813: 82 69 20                 a2 = u64 [s1 + 0x20]
 46816: 82 17 48                 a0 = u64 [sp + 0x48]
 46819: 82 18 40                 a1 = u64 [sp + 0x40]
 46822: b4 90 02 60 03           ra = 864, jump [a2]
      :                          @2959 [@dyn 432]
 46827: 95 55 01                 s0 = s0 + 0x1
 46830: 51 07 e5                 jump @2957 if a0 == 0
      :                          @2960
 46833: 28 39                    jump @2965
      :                          @2961
 46835: 82 6a 18                 a3 = u64 [s1 + 0x18]
 46838: 82 17 48                 a0 = u64 [sp + 0x48]
 46841: 82 18 18                 a1 = u64 [sp + 0x18]
 46844: 82 19 20                 a2 = u64 [sp + 0x20]
 46847: b4 a0 02 62 03           ra = 866, jump [a3]
      :                          @2962 [@dyn 433]
 46852: 33 08 01                 a1 = 0x1
 46855: 52 07 7e ff              jump @2951 if a0 != 0
      :                          @2963
 46859: 33 08                    a1 = 0
 46861: 82 17 10                 a0 = u64 [sp + 0x10]
 46864: 82 19 08                 a2 = u64 [sp + 0x8]
 46867: 7a 79 30                 u32 [a0 + 0x30] = a2
 46870: 82 19                    a2 = u64 [sp]
 46872: 78 79 38                 u8 [a0 + 0x38] = a2
 46875: 28 6a ff                 jump @2951
      :                          @2964
 46878: 82 15 10                 s0 = u64 [sp + 0x10]
 46881: 82 17 10                 a0 = u64 [sp + 0x10]
 46884: d8 75 08                 a1 = s0 <u a0
 46887: 28 5e ff                 jump @2951
      :                          @2965
 46890: 82 17 10                 a0 = u64 [sp + 0x10]
 46893: d8 75 08                 a1 = s0 <u a0
 46896: 28 55 ff                 jump @2951
      :                          @2966
 46899: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 46902: 7b 10 20                 u64 [sp + 0x20] = ra
 46905: 7b 15 18                 u64 [sp + 0x18] = s0
 46908: 7b 16 10                 u64 [sp + 0x10] = s1
 46911: 83 9c                    i32 a5 = a2 + 0
 46913: 33 02 00 00 11           t0 = 0x110000
 46918: 64 a6                    s1 = a3
 46920: 64 85                    s0 = a1
 46922: 64 7a                    a3 = a0
 46924: aa 2c 21                 jump @2969 if a5 == t0
      :                          @2967
 46927: 82 5c 20                 a5 = u64 [s0 + 0x20]
 46930: 64 a7                    a0 = a3
 46932: 64 98                    a1 = a2
 46934: 7b 1b 08                 u64 [sp + 0x8] = a4
 46937: 7b 1a                    u64 [sp] = a3
 46939: b4 c0 02 64 03           ra = 868, jump [a5]
      :                          @2968 [@dyn 434]
 46944: 82 1a                    a3 = u64 [sp]
 46946: 82 1b 08                 a4 = u64 [sp + 0x8]
 46949: 64 78                    a1 = a0
 46951: 33 07 01                 a0 = 0x1
 46954: 52 08 20                 jump @2972 if a1 != 0
      :                          @2969
 46957: 51 06 1a                 jump @2971 if s1 == 0
      :                          @2970
 46960: 82 5c 18                 a5 = u64 [s0 + 0x18]
 46963: 64 a7                    a0 = a3
 46965: 64 68                    a1 = s1
 46967: 64 b9                    a2 = a4
 46969: 82 10 20                 ra = u64 [sp + 0x20]
 46972: 82 15 18                 s0 = u64 [sp + 0x18]
 46975: 82 16 10                 s1 = u64 [sp + 0x10]
 46978: 95 11 28                 sp = sp + 0x28
 46981: 32 0c                    jump [a5]
      :                          @2971
 46983: 33 07                    a0 = 0
 46985: 01                       fallthrough
      :                          @2972
 46986: 82 10 20                 ra = u64 [sp + 0x20]
 46989: 82 15 18                 s0 = u64 [sp + 0x18]
 46992: 82 16 10                 s1 = u64 [sp + 0x10]
 46995: 95 11 28                 sp = sp + 0x28
 46998: 32 00                    ret
      :                          @2973
 47000: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 47003: 7b 10 40                 u64 [sp + 0x40] = ra
 47006: 7b 15 38                 u64 [sp + 0x38] = s0
 47009: 7b 16 30                 u64 [sp + 0x30] = s1
 47012: 82 74                    t2 = u64 [a0]
 47014: 82 7a 10                 a3 = u64 [a0 + 0x10]
 47017: d4 a4 0b                 a4 = t2 | a3
 47020: 64 93                    t1 = a2
 47022: 64 85                    s0 = a1
 47024: 51 0b aa 03              jump @3045 if a4 == 0
      :                          @2974
 47028: 7b 17 08                 u64 [sp + 0x8] = a0
 47031: 51 0a f4 00              jump @2993 if a3 == 0
      :                          @2975
 47035: 82 7c 18                 a5 = u64 [a0 + 0x18]
 47038: 33 0a                    a3 = 0
 47040: 7b 13 18                 u64 [sp + 0x18] = t1
 47043: c8 53 03                 t1 = t1 + s0
 47046: 95 cc 01                 a5 = a5 + 0x1
 47049: 33 00 00 00 11           ra = 0x110000
 47054: 33 07 df 00              a0 = 0xdf
 47058: 7b 15 10                 u64 [sp + 0x10] = s0
 47061: 64 59                    a2 = s0
 47063: 28 12                    jump @2978
      :                          @2976
 47065: 95 98 01                 a1 = a2 + 0x1
 47068: 01                       fallthrough
      :                          @2977
 47069: c9 9a 0a                 a3 = a3 - a2
 47072: c8 8a 0a                 a3 = a3 + a1
 47075: 64 89                    a2 = a1
 47077: aa 05 bc 00              jump @2992 if s0 == ra
      :                          @2978
 47081: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 47084: 51 0c 68                 jump @2987 if a5 == 0
      :                          @2979
 47087: aa 39 b2 00              jump @2992 if a2 == t1
      :                          @2980
 47091: 7d 98                    a1 = i8 [a2]
 47093: 84 85 ff 00              s0 = a1 & 0xff
 47097: 59 08 e0                 jump @2976 if a1 >=s 0
      :                          @2981
 47100: 7c 98 01                 a1 = u8 [a2 + 0x1]
 47103: 84 56 1f                 s1 = s0 & 0x1f
 47106: 84 8b 3f                 a4 = a1 & 0x3f
 47109: ae 57 35                 jump @2985 if a0 >=u s0
      :                          @2982
 47112: 7c 98 02                 a1 = u8 [a2 + 0x2]
 47115: 97 bb 06                 a4 = a4 << 0x6
 47118: 84 88 3f                 a1 = a1 & 0x3f
 47121: d4 8b 02                 t0 = a4 | a1
 47124: 53 25 f0 00 31           jump @2986 if s0 <u 240
      :                          @2983
 47129: 7c 98 03                 a1 = u8 [a2 + 0x3]
 47132: 97 66 3d                 s1 = s1 << 0x3d
 47135: 98 66 2b                 s1 = s1 >> 0x2b
 47138: 97 22 06                 t0 = t0 << 0x6
 47141: 84 88 3f                 a1 = a1 & 0x3f
 47144: d4 82 05                 s0 = t0 | a1
 47147: d4 65 05                 s0 = s0 | s1
 47150: aa 05 73                 jump @2992 if s0 == ra
      :                          @2984
 47153: 95 98 04                 a1 = a2 + 0x4
 47156: 33 07 df 00              a0 = 0xdf
 47160: 28 a5                    jump @2977
      :                          @2985
 47162: 95 98 02                 a1 = a2 + 0x2
 47165: 97 65 06                 s0 = s1 << 0x6
 47168: d4 b5 05                 s0 = s0 | a4
 47171: 28 9a                    jump @2977
      :                          @2986
 47173: 95 98 03                 a1 = a2 + 0x3
 47176: 97 66 0c                 s1 = s1 << 0xc
 47179: d4 62 05                 s0 = t0 | s1
 47182: 33 07 df 00              a0 = 0xdf
 47186: 28 8b                    jump @2977
      :                          @2987
 47188: aa 39 4d                 jump @2992 if a2 == t1
      :                          @2988
 47191: 7d 98                    a1 = i8 [a2]
 47193: 59 08 b6 02              jump @3035 if a1 >=s 0
      :                          @2989
 47197: 84 88 ff 00              a1 = a1 & 0xff
 47201: 33 0b e0 00              a4 = 0xe0
 47205: ac b8 aa 02              jump @3035 if a1 <u a4
      :                          @2990
 47209: 33 0b f0 00              a4 = 0xf0
 47213: ac b8 a2 02              jump @3035 if a1 <u a4
      :                          @2991
 47217: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 47220: 7c 9c 02                 a5 = u8 [a2 + 0x2]
 47223: 84 bb 3f                 a4 = a4 & 0x3f
 47226: 84 cc 3f                 a5 = a5 & 0x3f
 47229: 7c 99 03                 a2 = u8 [a2 + 0x3]
 47232: 97 88 3d                 a1 = a1 << 0x3d
 47235: 98 88 2b                 a1 = a1 >> 0x2b
 47238: 97 bb 0c                 a4 = a4 << 0xc
 47241: 97 cc 06                 a5 = a5 << 0x6
 47244: d4 cb 0b                 a4 = a4 | a5
 47247: 84 99 3f                 a2 = a2 & 0x3f
 47250: d4 b9 09                 a2 = a2 | a4
 47253: d4 98 08                 a1 = a1 | a2
 47256: 33 09 00 00 11           a2 = 0x110000
 47261: ab 98 72 02              jump @3035 if a1 != a2
      :                          @2992
 47265: 82 13 18                 t1 = u64 [sp + 0x18]
 47268: 82 15 10                 s0 = u64 [sp + 0x10]
 47271: 82 17 08                 a0 = u64 [sp + 0x8]
 47274: 01                       fallthrough
      :                          @2993
 47275: 51 04 af 02              jump @3045 if t2 == 0
      :                          @2994
 47279: 82 7c 08                 a5 = u64 [a0 + 0x8]
 47282: 7b 13 18                 u64 [sp + 0x18] = t1
 47285: 7b 15 10                 u64 [sp + 0x10] = s0
 47288: 55 13 20 29              jump @3000 if t1 >=u 32
      :                          @2995
 47292: 33 09                    a2 = 0
 47294: 51 03 1c                 jump @2998 if t1 == 0
      :                          @2996
 47297: 64 58                    a1 = s0
 47299: 64 3a                    a3 = t1
 47301: 01                       fallthrough
      :                          @2997
 47302: 7d 8b                    a4 = i8 [a1]
 47304: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 47307: 85 bb 01                 a4 = a4 ^ 0x1
 47310: c8 b9 09                 a2 = a2 + a4
 47313: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 47316: 95 88 01                 a1 = a1 + 0x1
 47319: 52 0a ef                 jump @2997 if a3 != 0
      :                          @2998
 47322: ac c9 95 01              jump @3017 if a2 <u a5
      :                          @2999
 47326: 28 7c 02                 jump @3045
      :                          @3000
 47329: 7b 1c                    u64 [sp] = a5
 47331: 95 58 07                 a1 = s0 + 0x7
 47334: 64 5c                    a5 = s0
 47336: 84 85 f8                 s0 = a1 & 0xfffffffffffffff8
 47339: c9 5c 0b                 a4 = a5 - s0
 47342: c8 b3 02                 t0 = t1 + a4
 47345: 84 2a 07                 a3 = t0 & 0x7
 47348: 33 08                    a1 = 0
 47350: aa c5 17                 jump @3002 if s0 == a5
      :                          @3001
 47353: 7d c6                    s1 = i8 [a5]
 47355: 89 66 c0                 s1 = s1 <s 0xffffffffffffffc0
 47358: 85 69 01                 a2 = s1 ^ 0x1
 47361: c8 98 08                 a1 = a1 + a2
 47364: 95 bb 01                 a4 = a4 + 0x1
 47367: 95 cc 01                 a5 = a5 + 0x1
 47370: 52 0b ef                 jump @3001 if a4 != 0
      :                          @3002
 47373: 33 0b                    a4 = 0
 47375: 51 0a 1e                 jump @3005 if a3 == 0
      :                          @3003
 47378: 84 2c f8                 a5 = t0 & 0xfffffffffffffff8
 47381: c8 5c 0c                 a5 = a5 + s0
 47384: 01                       fallthrough
      :                          @3004
 47385: 7d c7                    a0 = i8 [a5]
 47387: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
 47390: 85 77 01                 a0 = a0 ^ 0x1
 47393: c8 7b 0b                 a4 = a4 + a0
 47396: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 47399: 95 cc 01                 a5 = a5 + 0x1
 47402: 52 0a ef                 jump @3004 if a3 != 0
      :                          @3005
 47405: 98 20 03                 ra = t0 >> 0x3
 47408: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
 47418: 14 07 ff 00 ff 00 ff 00 ff 00 a0 = 0xff00ff00ff00ff
 47428: 7b 17 28                 u64 [sp + 0x28] = a0
 47431: 14 04 00 00 00 00 01 00 01 00 t2 = 0x1000100000000
 47441: 14 07 01 00 01 00 01 00 01 00 a0 = 0x1000100010001
 47451: 7b 17 20                 u64 [sp + 0x20] = a0
 47454: c8 8b 09                 a2 = a4 + a1
 47457: 28 2d                    jump @3007
      :                          @3006
 47459: 97 45 03                 s0 = t2 << 0x3
 47462: c8 35 05                 s0 = s0 + t1
 47465: c9 40 00                 ra = ra - t2
 47468: 84 46 03                 s1 = t2 & 0x3
 47471: 82 1b 28                 a4 = u64 [sp + 0x28]
 47474: d2 b2 07                 a0 = t0 & a4
 47477: 98 28 08                 a1 = t0 >> 0x8
 47480: d2 b8 08                 a1 = a1 & a4
 47483: c8 87 07                 a0 = a0 + a1
 47486: 82 18 20                 a1 = u64 [sp + 0x20]
 47489: ca 87 07                 a0 = a0 * a1
 47492: 98 77 30                 a0 = a0 >> 0x30
 47495: c8 79 09                 a2 = a2 + a0
 47498: 52 06 8e 00              jump @3014 if s1 != 0
      :                          @3007
 47502: 51 00 79                 jump @3012 if ra == 0
      :                          @3008
 47505: 64 53                    t1 = s0
 47507: 33 07 c0 00              a0 = 0xc0
 47511: e6 70 04                 t2 = minu(ra, a0)
 47514: 33 02                    t0 = 0
 47516: 98 48 02                 a1 = t2 >> 0x2
 47519: 51 08 c4                 jump @3006 if a1 == 0
      :                          @3009
 47522: 97 88 05                 a1 = a1 << 0x5
 47525: c8 38 08                 a1 = a1 + t1
 47528: 64 36                    s1 = t1
 47530: 01                       fallthrough
      :                          @3010
 47531: 82 67                    a0 = u64 [s1]
 47533: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 47536: 98 cc 07                 a5 = a5 >> 0x7
 47539: 98 77 06                 a0 = a0 >> 0x6
 47542: 82 6b 08                 a4 = u64 [s1 + 0x8]
 47545: d4 c7 07                 a0 = a0 | a5
 47548: d2 a7 07                 a0 = a0 & a3
 47551: c8 27 07                 a0 = a0 + t0
 47554: 85 bc ff                 a5 = a4 ^ 0xffffffffffffffff
 47557: 98 cc 07                 a5 = a5 >> 0x7
 47560: 82 65 10                 s0 = u64 [s1 + 0x10]
 47563: 98 bb 06                 a4 = a4 >> 0x6
 47566: d4 cb 0b                 a4 = a4 | a5
 47569: d2 ab 0b                 a4 = a4 & a3
 47572: 85 5c ff                 a5 = s0 ^ 0xffffffffffffffff
 47575: 98 cc 07                 a5 = a5 >> 0x7
 47578: 98 55 06                 s0 = s0 >> 0x6
 47581: d4 5c 0c                 a5 = a5 | s0
 47584: 82 65 18                 s0 = u64 [s1 + 0x18]
 47587: d2 ac 0c                 a5 = a5 & a3
 47590: c8 cb 0b                 a4 = a4 + a5
 47593: c8 b7 07                 a0 = a0 + a4
 47596: 85 5b ff                 a4 = s0 ^ 0xffffffffffffffff
 47599: 98 bb 07                 a4 = a4 >> 0x7
 47602: 98 55 06                 s0 = s0 >> 0x6
 47605: d4 5b 0b                 a4 = a4 | s0
 47608: d2 ab 0b                 a4 = a4 & a3
 47611: 95 66 20                 s1 = s1 + 0x20
 47614: c8 7b 02                 t0 = a4 + a0
 47617: ab 86 aa                 jump @3010 if s1 != a1
      :                          @3011
 47620: 28 5f ff                 jump @3006
      :                          @3012
 47623: 82 13 18                 t1 = u64 [sp + 0x18]
 47626: 82 15 10                 s0 = u64 [sp + 0x10]
 47629: 82 17 08                 a0 = u64 [sp + 0x8]
 47632: 82 1c                    a5 = u64 [sp]
 47634: ac c9 5d                 jump @3017 if a2 <u a5
      :                          @3013
 47637: 28 45 01                 jump @3045
      :                          @3014
 47640: 33 08                    a1 = 0
 47642: 84 47 fc 00              a0 = t2 & 0xfc
 47646: 97 77 03                 a0 = a0 << 0x3
 47649: c8 73 0b                 a4 = t1 + a0
 47652: 97 66 03                 s1 = s1 << 0x3
 47655: 82 13 18                 t1 = u64 [sp + 0x18]
 47658: 82 15 10                 s0 = u64 [sp + 0x10]
 47661: 01                       fallthrough
      :                          @3015
 47662: 82 b7                    a0 = u64 [a4]
 47664: 95 bb 08                 a4 = a4 + 0x8
 47667: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 47670: 98 cc 07                 a5 = a5 >> 0x7
 47673: 98 77 06                 a0 = a0 >> 0x6
 47676: d4 c7 07                 a0 = a0 | a5
 47679: d2 a7 07                 a0 = a0 & a3
 47682: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 47685: c8 78 08                 a1 = a1 + a0
 47688: 52 06 e6                 jump @3015 if s1 != 0
      :                          @3016
 47691: 82 1a 28                 a3 = u64 [sp + 0x28]
 47694: d2 a8 07                 a0 = a1 & a3
 47697: 98 88 08                 a1 = a1 >> 0x8
 47700: d2 a8 08                 a1 = a1 & a3
 47703: c8 87 07                 a0 = a0 + a1
 47706: 82 18 20                 a1 = u64 [sp + 0x20]
 47709: ca 87 07                 a0 = a0 * a1
 47712: 98 77 30                 a0 = a0 >> 0x30
 47715: c8 79 09                 a2 = a2 + a0
 47718: 82 17 08                 a0 = u64 [sp + 0x8]
 47721: 82 1c                    a5 = u64 [sp]
 47723: ae c9 ef 00              jump @3045 if a2 >=u a5
      :                          @3017
 47727: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 47730: 33 08                    a1 = 0
 47732: 33 0b 01                 a4 = 0x1
 47735: c9 9c 0c                 a5 = a5 - a2
 47738: ad ab 0c                 jump @3020 if a4 <s a3
      :                          @3018
 47741: 51 0a 1a                 jump @3022 if a3 == 0
      :                          @3019
 47744: 64 c8                    a1 = a5
 47746: 49 01                    u64 [sp + 0] = 0
 47748: 28 16                    jump @3023
      :                          @3020
 47750: 52 1a 02 11              jump @3022 if a3 != 2
      :                          @3021
 47754: 98 c8 01                 a1 = a5 >> 0x1
 47757: 95 c9 01                 a2 = a5 + 0x1
 47760: 98 99 01                 a2 = a2 >> 0x1
 47763: 7b 19                    u64 [sp] = a2
 47765: 28 05                    jump @3023
      :                          @3022
 47767: 7b 1c                    u64 [sp] = a5
 47769: 01                       fallthrough
      :                          @3023
 47770: 82 79 20                 a2 = u64 [a0 + 0x20]
 47773: 7b 19 28                 u64 [sp + 0x28] = a2
 47776: 82 75 28                 s0 = u64 [a0 + 0x28]
 47779: 81 77 30                 a0 = i32 [a0 + 0x30]
 47782: 7b 17 20                 u64 [sp + 0x20] = a0
 47785: 95 86 01                 s1 = a1 + 0x1
 47788: 01                       fallthrough
      :                          @3024
 47789: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 47792: 51 06 19                 jump @3028 if s1 == 0
      :                          @3025
 47795: 82 59 20                 a2 = u64 [s0 + 0x20]
 47798: 82 17 28                 a0 = u64 [sp + 0x28]
 47801: 82 18 20                 a1 = u64 [sp + 0x20]
 47804: b4 90 02 66 03           ra = 870, jump [a2]
      :                          @3026 [@dyn 435]
 47809: 51 07 ec                 jump @3024 if a0 == 0
      :                          @3027
 47812: 33 07 01                 a0 = 0x1
 47815: 28 72                    jump @3041
      :                          @3028
 47817: 82 5a 18                 a3 = u64 [s0 + 0x18]
 47820: 82 17 28                 a0 = u64 [sp + 0x28]
 47823: 82 18 10                 a1 = u64 [sp + 0x10]
 47826: 82 19 18                 a2 = u64 [sp + 0x18]
 47829: b4 a0 02 68 03           ra = 872, jump [a3]
      :                          @3029 [@dyn 436]
 47834: 64 78                    a1 = a0
 47836: 33 07 01                 a0 = 0x1
 47839: 52 08 5a                 jump @3041 if a1 != 0
      :                          @3030
 47842: 82 17                    a0 = u64 [sp]
 47844: 9a 77                    a0 = -a0
 47846: 7b 17 18                 u64 [sp + 0x18] = a0
 47849: 33 06 ff                 s1 = 0xffffffffffffffff
 47852: 01                       fallthrough
      :                          @3031
 47853: 82 17 18                 a0 = u64 [sp + 0x18]
 47856: c8 67 07                 a0 = a0 + s1
 47859: 33 08 ff                 a1 = 0xffffffffffffffff
 47862: aa 87 34                 jump @3039 if a0 == a1
      :                          @3032
 47865: 82 59 20                 a2 = u64 [s0 + 0x20]
 47868: 82 17 28                 a0 = u64 [sp + 0x28]
 47871: 82 18 20                 a1 = u64 [sp + 0x20]
 47874: b4 90 02 6a 03           ra = 874, jump [a2]
      :                          @3033 [@dyn 437]
 47879: 95 66 01                 s1 = s1 + 0x1
 47882: 51 07 e3                 jump @3031 if a0 == 0
      :                          @3034
 47885: 28 26                    jump @3040
      :                          @3035
 47887: 82 13 18                 t1 = u64 [sp + 0x18]
 47890: 82 15 10                 s0 = u64 [sp + 0x10]
 47893: 51 0a 35                 jump @3043 if a3 == 0
      :                          @3036
 47896: ae 3a 2f                 jump @3042 if a3 >=u t1
      :                          @3037
 47899: c8 a5 08                 a1 = s0 + a3
 47902: 7d 88                    a1 = i8 [a1]
 47904: 33 09 c0                 a2 = 0xffffffffffffffc0
 47907: af 98 27                 jump @3043 if a1 >=s a2
      :                          @3038
 47910: 33 08                    a1 = 0
 47912: 28 25                    jump @3044
      :                          @3039
 47914: 82 16                    s1 = u64 [sp]
 47916: 82 17                    a0 = u64 [sp]
 47918: d8 76 07                 a0 = s1 <u a0
 47921: 28 08                    jump @3041
      :                          @3040
 47923: 82 17                    a0 = u64 [sp]
 47925: d8 76 07                 a0 = s1 <u a0
 47928: 01                       fallthrough
      :                          @3041
 47929: 82 10 40                 ra = u64 [sp + 0x40]
 47932: 82 15 38                 s0 = u64 [sp + 0x38]
 47935: 82 16 30                 s1 = u64 [sp + 0x30]
 47938: 95 11 48                 sp = sp + 0x48
 47941: 32 00                    ret
      :                          @3042
 47943: ab 3a df                 jump @3038 if a3 != t1
      :                          @3043
 47946: 64 58                    a1 = s0
 47948: 01                       fallthrough
      :                          @3044
 47949: 82 17 08                 a0 = u64 [sp + 0x8]
 47952: db 8a 03                 t1 = a3 if a1 != 0
 47955: db 88 05                 s0 = a1 if a1 != 0
 47958: 52 04 59 fd              jump @2994 if t2 != 0
      :                          @3045
 47962: 82 78 28                 a1 = u64 [a0 + 0x28]
 47965: 82 77 20                 a0 = u64 [a0 + 0x20]
 47968: 82 8c 18                 a5 = u64 [a1 + 0x18]
 47971: 64 58                    a1 = s0
 47973: 64 39                    a2 = t1
 47975: 82 10 40                 ra = u64 [sp + 0x40]
 47978: 82 15 38                 s0 = u64 [sp + 0x38]
 47981: 82 16 30                 s1 = u64 [sp + 0x30]
 47984: 95 11 48                 sp = sp + 0x48
 47987: 32 0c                    jump [a5]
      :                          @3046
 47989: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 47993: 7b 10 80 00              u64 [sp + 0x80] = ra
 47997: 7b 15 78                 u64 [sp + 0x78] = s0
 48000: 7b 16 70                 u64 [sp + 0x70] = s1
 48003: 49 11 60 20              u64 [sp + 96] = 0x20
 48007: 33 0a 03                 a3 = 0x3
 48010: 78 1a 68                 u8 [sp + 0x68] = a3
 48013: 82 96 20                 s1 = u64 [a2 + 0x20]
 48016: 49 11 30                 u64 [sp + 48] = 0
 48019: 49 11 40                 u64 [sp + 64] = 0
 48022: 7b 17 50                 u64 [sp + 0x50] = a0
 48025: 7b 18 58                 u64 [sp + 0x58] = a1
 48028: 51 06 0a 01              jump @3068 if s1 == 0
      :                          @3047
 48032: 82 97 28                 a0 = u64 [a2 + 0x28]
 48035: 51 07 79 01              jump @3078 if a0 == 0
      :                          @3048
 48039: 49 11 28                 u64 [sp + 40] = 0
 48042: 82 95                    s0 = u64 [a2]
 48044: 7b 19 08                 u64 [sp + 0x8] = a2
 48047: 82 98 10                 a1 = u64 [a2 + 0x10]
 48050: 7b 18 18                 u64 [sp + 0x18] = a1
 48053: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 48056: 97 88 03                 a1 = a1 << 0x3
 48059: 98 88 03                 a1 = a1 >> 0x3
 48062: 95 88 01                 a1 = a1 + 0x1
 48065: 7b 18                    u64 [sp] = a1
 48067: 95 55 08                 s0 = s0 + 0x8
 48070: 96 78 38                 a1 = a0 * 0x38
 48073: 95 66 18                 s1 = s1 + 0x18
 48076: 33 07 4e 03              a0 = 0x34e
 48080: 7b 17 10                 u64 [sp + 0x10] = a0
 48083: 01                       fallthrough
      :                          @3049
 48084: 7b 18 20                 u64 [sp + 0x20] = a1
 48087: 82 59                    a2 = u64 [s0]
 48089: 51 09 18                 jump @3052 if a2 == 0
      :                          @3050
 48092: 82 1a 58                 a3 = u64 [sp + 0x58]
 48095: 82 17 50                 a0 = u64 [sp + 0x50]
 48098: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 48101: 82 aa 18                 a3 = u64 [a3 + 0x18]
 48104: b4 a0 02 6c 03           ra = 876, jump [a3]
      :                          @3051 [@dyn 438]
 48109: 52 07 55 01              jump @3081 if a0 != 0
      :                          @3052
 48113: 81 67 10                 a0 = i32 [s1 + 0x10]
 48116: 7a 17 60                 u32 [sp + 0x60] = a0
 48119: 7c 67 18                 a0 = u8 [s1 + 0x18]
 48122: 78 17 68                 u8 [sp + 0x68] = a0
 48125: 81 67 14                 a0 = i32 [s1 + 0x14]
 48128: 7a 17 64                 u32 [sp + 0x64] = a0
 48131: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 48134: 82 67                    a0 = u64 [s1]
 48136: 51 08 26                 jump @3057 if a1 == 0
      :                          @3053
 48139: 52 18 01 16              jump @3055 if a1 != 1
      :                          @3054
 48143: 97 77 04                 a0 = a0 << 0x4
 48146: 82 18 18                 a1 = u64 [sp + 0x18]
 48149: c8 87 07                 a0 = a0 + a1
 48152: 82 78 08                 a1 = u64 [a0 + 0x8]
 48155: 82 19 10                 a2 = u64 [sp + 0x10]
 48158: aa 98 07                 jump @3056 if a1 == a2
      :                          @3055
 48161: 33 08                    a1 = 0
 48163: 28 0f                    jump @3058
      :                          @3056
 48165: 82 77                    a0 = u64 [a0]
 48167: 82 77                    a0 = u64 [a0]
 48169: 33 08 01                 a1 = 0x1
 48172: 28 06                    jump @3058
      :                          @3057
 48174: 33 08 01                 a1 = 0x1
 48177: 01                       fallthrough
      :                          @3058
 48178: 7b 18 30                 u64 [sp + 0x30] = a1
 48181: 7b 17 38                 u64 [sp + 0x38] = a0
 48184: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 48187: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 48190: 51 08 26                 jump @3063 if a1 == 0
      :                          @3059
 48193: 52 18 01 16              jump @3061 if a1 != 1
      :                          @3060
 48197: 97 77 04                 a0 = a0 << 0x4
 48200: 82 18 18                 a1 = u64 [sp + 0x18]
 48203: c8 87 07                 a0 = a0 + a1
 48206: 82 78 08                 a1 = u64 [a0 + 0x8]
 48209: 82 19 10                 a2 = u64 [sp + 0x10]
 48212: aa 98 07                 jump @3062 if a1 == a2
      :                          @3061
 48215: 33 08                    a1 = 0
 48217: 28 0f                    jump @3064
      :                          @3062
 48219: 82 77                    a0 = u64 [a0]
 48221: 82 77                    a0 = u64 [a0]
 48223: 33 08 01                 a1 = 0x1
 48226: 28 06                    jump @3064
      :                          @3063
 48228: 33 08 01                 a1 = 0x1
 48231: 01                       fallthrough
      :                          @3064
 48232: 7b 18 40                 u64 [sp + 0x40] = a1
 48235: 7b 17 48                 u64 [sp + 0x48] = a0
 48238: 82 67 08                 a0 = u64 [s1 + 0x8]
 48241: 97 77 04                 a0 = a0 << 0x4
 48244: 82 18 18                 a1 = u64 [sp + 0x18]
 48247: c8 78 08                 a1 = a1 + a0
 48250: 82 87                    a0 = u64 [a1]
 48252: 82 89 08                 a2 = u64 [a1 + 0x8]
 48255: 95 18 30                 a1 = sp + 0x30
 48258: b4 90 02 6e 03           ra = 878, jump [a2]
      :                          @3065 [@dyn 439]
 48263: 52 07 bb 00              jump @3081 if a0 != 0
      :                          @3066
 48267: 95 55 10                 s0 = s0 + 0x10
 48270: 82 18 20                 a1 = u64 [sp + 0x20]
 48273: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 48276: 95 66 38                 s1 = s1 + 0x38
 48279: 82 17 28                 a0 = u64 [sp + 0x28]
 48282: 95 77 01                 a0 = a0 + 0x1
 48285: 7b 17 28                 u64 [sp + 0x28] = a0
 48288: 52 08 34 ff              jump @3049 if a1 != 0
      :                          @3067
 48292: 28 6b                    jump @3076
      :                          @3068
 48294: 82 97 18                 a0 = u64 [a2 + 0x18]
 48297: 51 07 73                 jump @3078 if a0 == 0
      :                          @3069
 48300: 82 95 10                 s0 = u64 [a2 + 0x10]
 48303: 33 0a                    a3 = 0
 48305: 97 78 04                 a1 = a0 << 0x4
 48308: c8 58 08                 a1 = a1 + s0
 48311: 7b 18 20                 u64 [sp + 0x20] = a1
 48314: 7b 19 08                 u64 [sp + 0x8] = a2
 48317: 82 96                    s1 = u64 [a2]
 48319: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 48322: 97 77 04                 a0 = a0 << 0x4
 48325: 98 77 04                 a0 = a0 >> 0x4
 48328: 95 77 01                 a0 = a0 + 0x1
 48331: 7b 17                    u64 [sp] = a0
 48333: 95 66 08                 s1 = s1 + 0x8
 48336: 01                       fallthrough
      :                          @3070
 48337: 7b 1a 28                 u64 [sp + 0x28] = a3
 48340: 82 69                    a2 = u64 [s1]
 48342: 51 09 17                 jump @3073 if a2 == 0
      :                          @3071
 48345: 82 1a 58                 a3 = u64 [sp + 0x58]
 48348: 82 17 50                 a0 = u64 [sp + 0x50]
 48351: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 48354: 82 aa 18                 a3 = u64 [a3 + 0x18]
 48357: b4 a0 02 70 03           ra = 880, jump [a3]
      :                          @3072 [@dyn 440]
 48362: 52 07 58                 jump @3081 if a0 != 0
      :                          @3073
 48365: 82 57                    a0 = u64 [s0]
 48367: 82 59 08                 a2 = u64 [s0 + 0x8]
 48370: 95 18 30                 a1 = sp + 0x30
 48373: b4 90 02 72 03           ra = 882, jump [a2]
      :                          @3074 [@dyn 441]
 48378: 52 07 48                 jump @3081 if a0 != 0
      :                          @3075
 48381: 95 66 10                 s1 = s1 + 0x10
 48384: 95 55 10                 s0 = s0 + 0x10
 48387: 82 1a 28                 a3 = u64 [sp + 0x28]
 48390: 95 aa 01                 a3 = a3 + 0x1
 48393: 82 17 20                 a0 = u64 [sp + 0x20]
 48396: ab 75 c5                 jump @3070 if s0 != a0
      :                          @3076
 48399: 82 19 08                 a2 = u64 [sp + 0x8]
 48402: 82 1a                    a3 = u64 [sp]
 48404: 82 97 08                 a0 = u64 [a2 + 0x8]
 48407: ac 7a 0d                 jump @3079 if a3 <u a0
      :                          @3077
 48410: 28 2d                    jump @3082
      :                          @3078
 48412: 33 0a                    a3 = 0
 48414: 82 97 08                 a0 = u64 [a2 + 0x8]
 48417: 54 07 26                 jump @3082 if a0 <=u 0
      :                          @3079
 48420: 82 97                    a0 = u64 [a2]
 48422: 97 a8 04                 a1 = a3 << 0x4
 48425: c8 87 09                 a2 = a0 + a1
 48428: 82 1a 58                 a3 = u64 [sp + 0x58]
 48431: 82 17 50                 a0 = u64 [sp + 0x50]
 48434: 82 98                    a1 = u64 [a2]
 48436: 82 99 08                 a2 = u64 [a2 + 0x8]
 48439: 82 aa 18                 a3 = u64 [a3 + 0x18]
 48442: b4 a0 02 74 03           ra = 884, jump [a3]
      :                          @3080 [@dyn 442]
 48447: 51 07 08                 jump @3082 if a0 == 0
      :                          @3081
 48450: 33 07 01                 a0 = 0x1
 48453: 28 05                    jump @3083
      :                          @3082
 48455: 33 07                    a0 = 0
 48457: 01                       fallthrough
      :                          @3083
 48458: 82 10 80 00              ra = u64 [sp + 0x80]
 48462: 82 15 78                 s0 = u64 [sp + 0x78]
 48465: 82 16 70                 s1 = u64 [sp + 0x70]
 48468: 95 11 88 00              sp = sp + 0x88
 48472: 32 00                    ret
      :                          @3084 [@dyn 443]
 48474: 32 00                    ret
      :                          @3085 [@dyn 444]
 48476: 95 11 80                 sp = sp + 0xffffffffffffff80
 48479: 7b 10 78                 u64 [sp + 0x78] = ra
 48482: 7b 15 70                 u64 [sp + 0x70] = s0
 48485: 7b 16 68                 u64 [sp + 0x68] = s1
 48488: 64 92                    t0 = a2
 48490: 33 00                    ra = 0
 48492: 33 0b                    a4 = 0
 48494: 33 05                    s0 = 0
 48496: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
 48506: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 48512: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
 48522: 82 79 10                 a2 = u64 [a0 + 0x10]
 48525: 7b 19 48                 u64 [sp + 0x48] = a2
 48528: 82 79                    a2 = u64 [a0]
 48530: 7b 19 38                 u64 [sp + 0x38] = a2
 48533: 82 77 08                 a0 = u64 [a0 + 0x8]
 48536: 7b 17 30                 u64 [sp + 0x30] = a0
 48539: 33 07 04 01 01           a0 = 0x10104
 48544: 7b 17 08                 u64 [sp + 0x8] = a0
 48547: 3a 07 d8 00 03           a0 = u64 [0x300d8]
 48552: 7b 17 60                 u64 [sp + 0x60] = a0
 48555: 7b 18 58                 u64 [sp + 0x58] = a1
 48558: 95 88 08                 a1 = a1 + 0x8
 48561: 7b 18                    u64 [sp] = a1
 48563: 33 0c 0a                 a5 = 0xa
 48566: 7b 12 20                 u64 [sp + 0x20] = t0
 48569: 7b 13 18                 u64 [sp + 0x18] = t1
 48572: 7b 14 10                 u64 [sp + 0x10] = t2
 48575: 28 3b                    jump @3089
      :                          @3086
 48577: 64 06                    s1 = ra
 48579: c8 89 07                 a0 = a2 + a1
 48582: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 48585: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 48588: 88 77 01                 a0 = a0 <u 0x1
 48591: 01                       fallthrough
      :                          @3087
 48592: 82 1a 48                 a3 = u64 [sp + 0x48]
 48595: 78 a7                    u8 [a3] = a0
 48597: 82 17 30                 a0 = u64 [sp + 0x30]
 48600: 82 7a 18                 a3 = u64 [a0 + 0x18]
 48603: 82 17 38                 a0 = u64 [sp + 0x38]
 48606: b4 a0 02 7a 03           ra = 890, jump [a3]
      :                          @3088 [@dyn 445]
 48611: 64 5b                    a4 = s0
 48613: 82 12 20                 t0 = u64 [sp + 0x20]
 48616: 82 13 18                 t1 = u64 [sp + 0x18]
 48619: 82 14 10                 t2 = u64 [sp + 0x10]
 48622: 64 60                    ra = s1
 48624: 33 0c 0a                 a5 = 0xa
 48627: 82 15 40                 s0 = u64 [sp + 0x40]
 48630: 52 07 64 01              jump @3130 if a0 != 0
      :                          @3089
 48634: 84 57 ff 00              a0 = s0 & 0xff
 48638: 52 07 58 01              jump @3129 if a0 != 0
      :                          @3090
 48642: 7b 1b 50                 u64 [sp + 0x50] = a4
 48645: ae 02 0a                 jump @3093 if t0 >=u ra
      :                          @3091
 48648: 28 ef 00                 jump @3120
      :                          @3092
 48651: ac 02 ec 00              jump @3120 if t0 <u ra
      :                          @3093
 48655: c9 02 08                 a1 = t0 - ra
 48658: 82 16 58                 s1 = u64 [sp + 0x58]
 48661: c8 06 06                 s1 = s1 + ra
 48664: 55 18 10 1d              jump @3099 if a1 >=u 16
      :                          @3094
 48668: aa 02 d8 00              jump @3119 if t0 == ra
      :                          @3095
 48672: 33 0a                    a3 = 0
 48674: 01                       fallthrough
      :                          @3096
 48675: c8 a6 07                 a0 = s1 + a3
 48678: 7c 77                    a0 = u8 [a0]
 48680: aa c7 a5 00              jump @3114 if a0 == a5
      :                          @3097
 48684: 95 aa 01                 a3 = a3 + 0x1
 48687: ab a8 f4                 jump @3096 if a1 != a3
      :                          @3098
 48690: 28 c2 00                 jump @3119
      :                          @3099
 48693: 95 69 07                 a2 = s1 + 0x7
 48696: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 48699: c9 6a 07                 a0 = a3 - s1
 48702: d3 6a 0a                 a3 = a3 ^ s1
 48705: 88 aa 01                 a3 = a3 <u 0x1
 48708: 88 7b 01                 a4 = a0 <u 0x1
 48711: d4 ba 0a                 a3 = a3 | a4
 48714: 51 0a 45                 jump @3105 if a3 == 0
      :                          @3100
 48717: 33 07                    a0 = 0
 48719: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 48722: 82 1b                    a4 = u64 [sp]
 48724: c8 0b 0b                 a4 = a4 + ra
 48727: 28 08                    jump @3102
      :                          @3101
 48729: 82 1b                    a4 = u64 [sp]
 48731: c8 0b 0b                 a4 = a4 + ra
 48734: 01                       fallthrough
      :                          @3102
 48735: c8 76 0c                 a5 = s1 + a0
 48738: 82 cc                    a5 = u64 [a5]
 48740: c8 7b 09                 a2 = a4 + a0
 48743: 82 99                    a2 = u64 [a2]
 48745: d3 4c 05                 s0 = a5 ^ t2
 48748: c8 35 05                 s0 = s0 + t1
 48751: e0 c5 0c                 a5 = s0 & ~a5
 48754: d3 49 05                 s0 = a2 ^ t2
 48757: c8 35 05                 s0 = s0 + t1
 48760: e0 95 09                 a2 = s0 & ~a2
 48763: d4 c9 09                 a2 = a2 | a5
 48766: 82 1c 60                 a5 = u64 [sp + 0x60]
 48769: d2 c9 09                 a2 = a2 & a5
 48772: 52 09 1f                 jump @3108 if a2 != 0
      :                          @3103
 48775: 95 77 10                 a0 = a0 + 0x10
 48778: ae 7a d5                 jump @3102 if a3 >=u a0
      :                          @3104
 48781: 28 16                    jump @3108
      :                          @3105
 48783: c8 a6 0b                 a4 = s1 + a3
 48786: 7c bb                    a4 = u8 [a4]
 48788: aa cb 51                 jump @3117 if a4 == a5
      :                          @3106
 48791: 95 aa 01                 a3 = a3 + 0x1
 48794: ab a7 f5                 jump @3105 if a0 != a3
      :                          @3107
 48797: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 48800: ae 7a b9                 jump @3101 if a3 >=u a0
      :                          @3108
 48803: aa 87 9b 00              jump @3126 if a0 == a1
      :                          @3109
 48807: 33 0a                    a3 = 0
 48809: c8 76 06                 s1 = s1 + a0
 48812: c9 72 08                 a1 = t0 - a0
 48815: c9 08 08                 a1 = a1 - ra
 48818: 33 0c 0a                 a5 = 0xa
 48821: 82 1b 50                 a4 = u64 [sp + 0x50]
 48824: 01                       fallthrough
      :                          @3110
 48825: c8 a6 09                 a2 = s1 + a3
 48828: 7c 99                    a2 = u8 [a2]
 48830: aa c9 0b                 jump @3113 if a2 == a5
      :                          @3111
 48833: 95 aa 01                 a3 = a3 + 0x1
 48836: ab a8 f5                 jump @3110 if a1 != a3
      :                          @3112
 48839: 28 2d                    jump @3119
      :                          @3113
 48841: c8 7a 0a                 a3 = a3 + a0
 48844: 01                       fallthrough
      :                          @3114
 48845: c8 0a 0a                 a3 = a3 + ra
 48848: 95 a0 01                 ra = a3 + 0x1
 48851: ae 2a 38 ff              jump @3092 if a3 >=u t0
      :                          @3115
 48855: 82 17 58                 a0 = u64 [sp + 0x58]
 48858: c8 7a 0a                 a3 = a3 + a0
 48861: 7c a7                    a0 = u8 [a3]
 48863: ab c7 2c ff              jump @3092 if a0 != a5
      :                          @3116
 48867: 28 62                    jump @3127
      :                          @3117
 48869: 82 1b 50                 a4 = u64 [sp + 0x50]
 48872: c8 0a 0a                 a3 = a3 + ra
 48875: 95 a0 01                 ra = a3 + 0x1
 48878: ac 2a e9                 jump @3115 if a3 <u t0
      :                          @3118
 48881: 28 1a ff                 jump @3092
      :                          @3119
 48884: 64 20                    ra = t0
 48886: 01                       fallthrough
      :                          @3120
 48887: 49 11 40 01              u64 [sp + 64] = 0x1
 48891: 64 b5                    s0 = a4
 48893: 64 26                    s1 = t0
 48895: aa 2b 57                 jump @3129 if a4 == t0
      :                          @3121
 48898: 82 17 48                 a0 = u64 [sp + 0x48]
 48901: 7c 77                    a0 = u8 [a0]
 48903: 51 07 23                 jump @3124 if a0 == 0
      :                          @3122
 48906: 82 17 30                 a0 = u64 [sp + 0x30]
 48909: 82 7a 18                 a3 = u64 [a0 + 0x18]
 48912: 33 09 04                 a2 = 0x4
 48915: 82 17 38                 a0 = u64 [sp + 0x38]
 48918: 82 18 08                 a1 = u64 [sp + 0x8]
 48921: 7b 10 28                 u64 [sp + 0x28] = ra
 48924: b4 a0 02 7c 03           ra = 892, jump [a3]
      :                          @3123 [@dyn 446]
 48929: 82 1b 50                 a4 = u64 [sp + 0x50]
 48932: 82 10 28                 ra = u64 [sp + 0x28]
 48935: 52 07 33                 jump @3130 if a0 != 0
      :                          @3124
 48938: c9 b6 09                 a2 = s1 - a4
 48941: 82 18 58                 a1 = u64 [sp + 0x58]
 48944: c8 b8 08                 a1 = a1 + a4
 48947: ab b6 8e fe              jump @3086 if s1 != a4
      :                          @3125
 48951: 64 06                    s1 = ra
 48953: 33 07                    a0 = 0
 48955: 28 95 fe                 jump @3087
      :                          @3126
 48958: 64 20                    ra = t0
 48960: 82 1b 50                 a4 = u64 [sp + 0x50]
 48963: 28 b4                    jump @3120
      :                          @3127
 48965: 49 11 40                 u64 [sp + 64] = 0
 48968: 64 05                    s0 = ra
 48970: 64 06                    s1 = ra
 48972: 82 17 48                 a0 = u64 [sp + 0x48]
 48975: 7c 77                    a0 = u8 [a0]
 48977: 52 07 b9                 jump @3122 if a0 != 0
      :                          @3128
 48980: 28 d6                    jump @3124
      :                          @3129
 48982: 33 07                    a0 = 0
 48984: 28 06                    jump @3131
      :                          @3130
 48986: 33 07 01                 a0 = 0x1
 48989: 01                       fallthrough
      :                          @3131
 48990: 82 10 78                 ra = u64 [sp + 0x78]
 48993: 82 15 70                 s0 = u64 [sp + 0x70]
 48996: 82 16 68                 s1 = u64 [sp + 0x68]
 48999: 95 11 80 00              sp = sp + 0x80
 49003: 32 00                    ret
      :                          @3132 [@dyn 447]
 49005: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 49008: 7b 10 20                 u64 [sp + 0x20] = ra
 49011: 7b 15 18                 u64 [sp + 0x18] = s0
 49014: 7b 16 10                 u64 [sp + 0x10] = s1
 49017: 82 75 10                 s0 = u64 [a0 + 0x10]
 49020: 7c 59                    a2 = u8 [s0]
 49022: 82 7b                    a4 = u64 [a0]
 49024: 82 76 08                 s1 = u64 [a0 + 0x8]
 49027: 51 09 33                 jump @3136 if a2 == 0
      :                          @3133
 49030: 82 6a 18                 a3 = u64 [s1 + 0x18]
 49033: 7b 18 08                 u64 [sp + 0x8] = a1
 49036: 33 08 04 01 01           a1 = 0x10104
 49041: 33 09 04                 a2 = 0x4
 49044: 64 b7                    a0 = a4
 49046: 7b 1b                    u64 [sp] = a4
 49048: b4 a0 02 80 03           ra = 896, jump [a3]
      :                          @3134 [@dyn 448]
 49053: 82 18 08                 a1 = u64 [sp + 0x8]
 49056: 82 1b                    a4 = u64 [sp]
 49058: 51 07 14                 jump @3136 if a0 == 0
      :                          @3135
 49061: 33 07 01                 a0 = 0x1
 49064: 82 10 20                 ra = u64 [sp + 0x20]
 49067: 82 15 18                 s0 = u64 [sp + 0x18]
 49070: 82 16 10                 s1 = u64 [sp + 0x10]
 49073: 95 11 28                 sp = sp + 0x28
 49076: 32 00                    ret
      :                          @3136
 49078: 83 87                    i32 a0 = a1 + 0
 49080: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 49083: 88 77 01                 a0 = a0 <u 0x1
 49086: 78 57                    u8 [s0] = a0
 49088: 82 6c 20                 a5 = u64 [s1 + 0x20]
 49091: 64 b7                    a0 = a4
 49093: 82 10 20                 ra = u64 [sp + 0x20]
 49096: 82 15 18                 s0 = u64 [sp + 0x18]
 49099: 82 16 10                 s1 = u64 [sp + 0x10]
 49102: 95 11 28                 sp = sp + 0x28
 49105: 32 0c                    jump [a5]
      :                          @3137 [@dyn 449]
 49107: 64 8a                    a3 = a1
 49109: 33 08 b0 10 01           a1 = 0x110b0
 49114: 64 a9                    a2 = a3
 49116: 28 99 fb                 jump @3046
      :                          @3138 [@dyn 450]
 49119: 7c 77                    a0 = u8 [a0]
 49121: 64 89                    a2 = a1
 49123: 33 08 01                 a1 = 0x1
 49126: 28 f9 f3                 jump @2909
      :                          @3139 [@dyn 451]
 49129: 80 77                    a0 = u32 [a0]
 49131: 64 89                    a2 = a1
 49133: 33 08 01                 a1 = 0x1
 49136: 28 ef f3                 jump @2909
      :                          @3140
 49139: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 49143: 7b 10 88 00              u64 [sp + 0x88] = ra
 49147: 7b 15 80 00              u64 [sp + 0x80] = s0
 49151: 7b 16 78                 u64 [sp + 0x78] = s1
 49154: 64 75                    s0 = a0
 49156: 7c 77 10                 a0 = u8 [a0 + 0x10]
 49159: 82 5c                    a5 = u64 [s0]
 49161: 64 8b                    a4 = a1
 49163: 33 08 01                 a1 = 0x1
 49166: 51 07 1e                 jump @3142 if a0 == 0
      :                          @3141
 49169: 78 58 10                 u8 [s0 + 0x10] = a1
 49172: 95 c7 01                 a0 = a5 + 0x1
 49175: 7b 57                    u64 [s0] = a0
 49177: 64 57                    a0 = s0
 49179: 82 10 88 00              ra = u64 [sp + 0x88]
 49183: 82 15 80 00              s0 = u64 [sp + 0x80]
 49187: 82 16 78                 s1 = u64 [sp + 0x78]
 49190: 95 11 90 00              sp = sp + 0x90
 49194: 32 00                    ret
      :                          @3142
 49196: 82 56 08                 s1 = u64 [s0 + 0x8]
 49199: 80 67 34                 a0 = u32 [s1 + 0x34]
 49202: 84 78 04                 a1 = a0 & 0x4
 49205: 7b 1c 10                 u64 [sp + 0x10] = a5
 49208: 52 08 48                 jump @3147 if a1 != 0
      :                          @3143
 49211: 7b 1b                    u64 [sp] = a4
 49213: 7b 19 08                 u64 [sp + 0x8] = a2
 49216: 88 c9 01                 a2 = a5 <u 0x1
 49219: 33 0a e0 10 01           a3 = 0x110e0
 49224: 82 6b 28                 a4 = u64 [s1 + 0x28]
 49227: 33 08 e4 10 01           a1 = 0x110e4
 49232: 82 67 20                 a0 = u64 [s1 + 0x20]
 49235: 82 bb 18                 a4 = u64 [a4 + 0x18]
 49238: db ca 08                 a1 = a3 if a5 != 0
 49241: 33 0a 02                 a3 = 0x2
 49244: c9 9a 09                 a2 = a3 - a2
 49247: b4 b0 02 88 03           ra = 904, jump [a4]
      :                          @3144 [@dyn 452]
 49252: 33 08 01                 a1 = 0x1
 49255: 82 1c 10                 a5 = u64 [sp + 0x10]
 49258: 52 07 a7                 jump @3141 if a0 != 0
      :                          @3145
 49261: 82 17                    a0 = u64 [sp]
 49263: 64 68                    a1 = s1
 49265: 82 19 08                 a2 = u64 [sp + 0x8]
 49268: b4 90 02 8a 03           ra = 906, jump [a2]
      :                          @3146 [@dyn 453]
 49273: 82 1c 10                 a5 = u64 [sp + 0x10]
 49276: 64 78                    a1 = a0
 49278: 28 93                    jump @3141
      :                          @3147
 49280: 52 0c 31                 jump @3151 if a5 != 0
      :                          @3148
 49283: 7b 1b                    u64 [sp] = a4
 49285: 7b 19 08                 u64 [sp + 0x8] = a2
 49288: 82 68 28                 a1 = u64 [s1 + 0x28]
 49291: 82 67 20                 a0 = u64 [s1 + 0x20]
 49294: 82 8a 18                 a3 = u64 [a1 + 0x18]
 49297: 33 08 e5 10 01           a1 = 0x110e5
 49302: 33 09 02                 a2 = 0x2
 49305: b4 a0 02 8c 03           ra = 908, jump [a3]
      :                          @3149 [@dyn 454]
 49310: 33 08 01                 a1 = 0x1
 49313: 82 1c 10                 a5 = u64 [sp + 0x10]
 49316: 52 07 6d ff              jump @3141 if a0 != 0
      :                          @3150
 49320: 81 67 34                 a0 = i32 [s1 + 0x34]
 49323: 82 19 08                 a2 = u64 [sp + 0x8]
 49326: 82 1b                    a4 = u64 [sp]
 49328: 01                       fallthrough
      :                          @3151
 49329: 46 11 37 01              u8 [sp + 55] = 0x1
 49333: 82 68 20                 a1 = u64 [s1 + 0x20]
 49336: 82 6a 28                 a3 = u64 [s1 + 0x28]
 49339: 7b 18 18                 u64 [sp + 0x18] = a1
 49342: 7b 1a 20                 u64 [sp + 0x20] = a3
 49345: 95 18 37                 a1 = sp + 0x37
 49348: 7b 18 28                 u64 [sp + 0x28] = a1
 49351: 81 68 30                 a1 = i32 [s1 + 0x30]
 49354: 7c 62 38                 t0 = u8 [s1 + 0x38]
 49357: 82 6a                    a3 = u64 [s1]
 49359: 82 63 08                 t1 = u64 [s1 + 0x8]
 49362: 82 6c 10                 a5 = u64 [s1 + 0x10]
 49365: 82 66 18                 s1 = u64 [s1 + 0x18]
 49368: 7a 17 6c                 u32 [sp + 0x6c] = a0
 49371: 7a 18 68                 u32 [sp + 0x68] = a1
 49374: 78 12 70                 u8 [sp + 0x70] = t0
 49377: 7b 1a 38                 u64 [sp + 0x38] = a3
 49380: 7b 13 40                 u64 [sp + 0x40] = t1
 49383: 7b 1c 48                 u64 [sp + 0x48] = a5
 49386: 7b 16 50                 u64 [sp + 0x50] = s1
 49389: 95 17 18                 a0 = sp + 0x18
 49392: 7b 17 58                 u64 [sp + 0x58] = a0
 49395: 33 07 b0 10 01           a0 = 0x110b0
 49400: 7b 17 60                 u64 [sp + 0x60] = a0
 49403: 95 18 38                 a1 = sp + 0x38
 49406: 64 b7                    a0 = a4
 49408: b4 90 02 8e 03           ra = 910, jump [a2]
      :                          @3152 [@dyn 455]
 49413: 51 07 0c                 jump @3154 if a0 == 0
      :                          @3153
 49416: 82 1c 10                 a5 = u64 [sp + 0x10]
 49419: 33 08 01                 a1 = 0x1
 49422: 28 03 ff                 jump @3141
      :                          @3154
 49425: 82 18 60                 a1 = u64 [sp + 0x60]
 49428: 82 17 58                 a0 = u64 [sp + 0x58]
 49431: 82 8a 18                 a3 = u64 [a1 + 0x18]
 49434: 33 08 e2 10 01           a1 = 0x110e2
 49439: 33 09 02                 a2 = 0x2
 49442: b4 a0 02 90 03           ra = 912, jump [a3]
      :                          @3155 [@dyn 456]
 49447: 64 78                    a1 = a0
 49449: 82 1c 10                 a5 = u64 [sp + 0x10]
 49452: 28 e5 fe                 jump @3141
      :                          @3156
 49455: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 49459: 7b 10 88 00              u64 [sp + 0x88] = ra
 49463: 7b 15 80 00              u64 [sp + 0x80] = s0
 49467: 7b 16 78                 u64 [sp + 0x78] = s1
 49470: 64 75                    s0 = a0
 49472: 7c 77 08                 a0 = u8 [a0 + 0x8]
 49475: 64 8b                    a4 = a1
 49477: 33 08 01                 a1 = 0x1
 49480: 33 06 01                 s1 = 0x1
 49483: 51 07 1d                 jump @3158 if a0 == 0
      :                          @3157
 49486: 78 56 08                 u8 [s0 + 0x8] = s1
 49489: 46 15 09 01              u8 [s0 + 9] = 0x1
 49493: 64 57                    a0 = s0
 49495: 82 10 88 00              ra = u64 [sp + 0x88]
 49499: 82 15 80 00              s0 = u64 [sp + 0x80]
 49503: 82 16 78                 s1 = u64 [sp + 0x78]
 49506: 95 11 90 00              sp = sp + 0x90
 49510: 32 00                    ret
      :                          @3158
 49512: 64 9a                    a3 = a2
 49514: 82 5c                    a5 = u64 [s0]
 49516: 80 c7 34                 a0 = u32 [a5 + 0x34]
 49519: 7c 58 09                 a1 = u8 [s0 + 0x9]
 49522: 84 79 04                 a2 = a0 & 0x4
 49525: 52 09 45                 jump @3164 if a2 != 0
      :                          @3159
 49528: 51 08 32                 jump @3162 if a1 == 0
      :                          @3160
 49531: 82 c8 28                 a1 = u64 [a5 + 0x28]
 49534: 82 c7 20                 a0 = u64 [a5 + 0x20]
 49537: 82 83 18                 t1 = u64 [a1 + 0x18]
 49540: 33 08 e0 10 01           a1 = 0x110e0
 49545: 33 09 02                 a2 = 0x2
 49548: 64 a6                    s1 = a3
 49550: 7b 1b 10                 u64 [sp + 0x10] = a4
 49553: 7b 1c 08                 u64 [sp + 0x8] = a5
 49556: b4 30 02 92 03           ra = 914, jump [t1]
      :                          @3161 [@dyn 457]
 49561: 82 1c 08                 a5 = u64 [sp + 0x8]
 49564: 82 1b 10                 a4 = u64 [sp + 0x10]
 49567: 64 6a                    a3 = s1
 49569: 33 08 01                 a1 = 0x1
 49572: 33 06 01                 s1 = 0x1
 49575: 52 07 a7                 jump @3157 if a0 != 0
      :                          @3162
 49578: 64 b7                    a0 = a4
 49580: 64 c8                    a1 = a5
 49582: b4 a0 02 94 03           ra = 916, jump [a3]
      :                          @3163 [@dyn 458]
 49587: 33 08 01                 a1 = 0x1
 49590: 64 76                    s1 = a0
 49592: 28 96                    jump @3157
      :                          @3164
 49594: 52 08 37                 jump @3168 if a1 != 0
      :                          @3165
 49597: 82 c8 28                 a1 = u64 [a5 + 0x28]
 49600: 82 c7 20                 a0 = u64 [a5 + 0x20]
 49603: 82 83 18                 t1 = u64 [a1 + 0x18]
 49606: 33 08 e8 10 01           a1 = 0x110e8
 49611: 33 09 01                 a2 = 0x1
 49614: 33 06 01                 s1 = 0x1
 49617: 7b 1a                    u64 [sp] = a3
 49619: 7b 1b 10                 u64 [sp + 0x10] = a4
 49622: 7b 1c 08                 u64 [sp + 0x8] = a5
 49625: b4 30 02 96 03           ra = 918, jump [t1]
      :                          @3166 [@dyn 459]
 49630: 82 1c 08                 a5 = u64 [sp + 0x8]
 49633: 82 1b 10                 a4 = u64 [sp + 0x10]
 49636: 82 1a                    a3 = u64 [sp]
 49638: 33 08 01                 a1 = 0x1
 49641: 52 07 65 ff              jump @3157 if a0 != 0
      :                          @3167
 49645: 81 c7 34                 a0 = i32 [a5 + 0x34]
 49648: 01                       fallthrough
      :                          @3168
 49649: 33 06 01                 s1 = 0x1
 49652: 78 16 37                 u8 [sp + 0x37] = s1
 49655: 82 c8 20                 a1 = u64 [a5 + 0x20]
 49658: 82 c9 28                 a2 = u64 [a5 + 0x28]
 49661: 7b 18 18                 u64 [sp + 0x18] = a1
 49664: 7b 19 20                 u64 [sp + 0x20] = a2
 49667: 95 18 37                 a1 = sp + 0x37
 49670: 7b 18 28                 u64 [sp + 0x28] = a1
 49673: 81 c8 30                 a1 = i32 [a5 + 0x30]
 49676: 7c c9 38                 a2 = u8 [a5 + 0x38]
 49679: 82 c3                    t1 = u64 [a5]
 49681: 82 c4 08                 t2 = u64 [a5 + 0x8]
 49684: 82 c0 10                 ra = u64 [a5 + 0x10]
 49687: 82 c2 18                 t0 = u64 [a5 + 0x18]
 49690: 7a 17 6c                 u32 [sp + 0x6c] = a0
 49693: 7a 18 68                 u32 [sp + 0x68] = a1
 49696: 78 19 70                 u8 [sp + 0x70] = a2
 49699: 7b 13 38                 u64 [sp + 0x38] = t1
 49702: 7b 14 40                 u64 [sp + 0x40] = t2
 49705: 7b 10 48                 u64 [sp + 0x48] = ra
 49708: 7b 12 50                 u64 [sp + 0x50] = t0
 49711: 95 17 18                 a0 = sp + 0x18
 49714: 7b 17 58                 u64 [sp + 0x58] = a0
 49717: 33 07 b0 10 01           a0 = 0x110b0
 49722: 7b 17 60                 u64 [sp + 0x60] = a0
 49725: 95 18 38                 a1 = sp + 0x38
 49728: 64 b7                    a0 = a4
 49730: b4 a0 02 98 03           ra = 920, jump [a3]
      :                          @3169 [@dyn 460]
 49735: 52 07 21                 jump @3172 if a0 != 0
      :                          @3170
 49738: 82 18 60                 a1 = u64 [sp + 0x60]
 49741: 82 17 58                 a0 = u64 [sp + 0x58]
 49744: 82 8a 18                 a3 = u64 [a1 + 0x18]
 49747: 33 08 e2 10 01           a1 = 0x110e2
 49752: 33 09 02                 a2 = 0x2
 49755: b4 a0 02 9a 03           ra = 922, jump [a3]
      :                          @3171 [@dyn 461]
 49760: 64 76                    s1 = a0
 49762: 33 08 01                 a1 = 0x1
 49765: 28 e9 fe                 jump @3157
      :                          @3172
 49768: 33 08 01                 a1 = 0x1
 49771: 28 e3 fe                 jump @3157
      :                          @3173 [@dyn 462]
 49774: 7c 79                    a2 = u8 [a0]
 49776: 64 87                    a0 = a1
 49778: 51 09 0e                 jump @3175 if a2 == 0
      :                          @3174
 49781: 33 08 f0 00 01           a1 = 0x100f0
 49786: 33 09 04                 a2 = 0x4
 49789: 28 1b f5                 jump @2973
      :                          @3175
 49792: 33 08 b4 11 01           a1 = 0x111b4
 49797: 33 09 05                 a2 = 0x5
 49800: 28 10 f5                 jump @2973
      :                          @3176 [@dyn 463]
 49803: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 49807: 7b 10 80 00              u64 [sp + 0x80] = ra
 49811: 64 82                    t0 = a1
 49813: 7c 77                    a0 = u8 [a0]
 49815: 33 0a 81 00              a3 = 0x81
 49819: 95 18 7f                 a1 = sp + 0x7f
 49822: 33 03 37                 t1 = 0x37
 49825: 01                       fallthrough
      :                          @3177
 49826: 64 ab                    a4 = a3
 49828: 84 7a 0f                 a3 = a0 & 0xf
 49831: 97 77 38                 a0 = a0 << 0x38
 49834: 98 77 3c                 a0 = a0 >> 0x3c
 49837: 88 ac 0a                 a5 = a3 <u 0xa
 49840: 33 09 30                 a2 = 0x30
 49843: da c3 09                 a2 = t1 if a5 == 0
 49846: be a9 09                 i32 a2 = a2 + a3
 49849: 78 89                    u8 [a1] = a2
 49851: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 49854: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 49857: 52 07 e1                 jump @3177 if a0 != 0
      :                          @3178
 49860: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 49863: 56 27 80 00 2b           jump @3181 if a0 >u 128
      :                          @3179
 49868: 9a ac 81 00              a5 = 0x81 - a3
 49872: 64 1b                    a4 = sp
 49874: c8 7b 0b                 a4 = a4 + a0
 49877: 33 09 ea 10 01           a2 = 0x110ea
 49882: 33 08 01                 a1 = 0x1
 49885: 33 0a 02                 a3 = 0x2
 49888: 64 27                    a0 = t0
 49890: 50 20 a0 03 2b f2        ra = 928, jump @2919
      :                          @3180 [@dyn 464]
 49896: 82 10 80 00              ra = u64 [sp + 0x80]
 49900: 95 11 88 00              sp = sp + 0x88
 49904: 32 00                    ret
      :                          @3181
 49906: 00                       trap
      :                          @3182 [@dyn 465]
 49907: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 49911: 7b 10 80 00              u64 [sp + 0x80] = ra
 49915: 64 82                    t0 = a1
 49917: 81 7a                    a3 = i32 [a0]
 49919: 33 08 81 00              a1 = 0x81
 49923: 95 17 7f                 a0 = sp + 0x7f
 49926: 33 03 57                 t1 = 0x57
 49929: 01                       fallthrough
      :                          @3183
 49930: 64 8b                    a4 = a1
 49932: 8b ac 04                 i32 a5 = a3 >> 0x4
 49935: 84 aa 0f                 a3 = a3 & 0xf
 49938: 88 a8 0a                 a1 = a3 <u 0xa
 49941: 33 09 30                 a2 = 0x30
 49944: da 83 09                 a2 = t1 if a1 == 0
 49947: be a9 09                 i32 a2 = a2 + a3
 49950: 78 79                    u8 [a0] = a2
 49952: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 49955: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
 49958: 64 ca                    a3 = a5
 49960: 52 0c e2                 jump @3183 if a5 != 0
      :                          @3184
 49963: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 49966: 56 27 80 00 2b           jump @3187 if a0 >u 128
      :                          @3185
 49971: 9a 8c 81 00              a5 = 0x81 - a1
 49975: 64 1b                    a4 = sp
 49977: c8 7b 0b                 a4 = a4 + a0
 49980: 33 09 ea 10 01           a2 = 0x110ea
 49985: 33 08 01                 a1 = 0x1
 49988: 33 0a 02                 a3 = 0x2
 49991: 64 27                    a0 = t0
 49993: 50 20 a4 03 c4 f1        ra = 932, jump @2919
      :                          @3186 [@dyn 466]
 49999: 82 10 80 00              ra = u64 [sp + 0x80]
 50003: 95 11 88 00              sp = sp + 0x88
 50007: 32 00                    ret
      :                          @3187
 50009: 00                       trap
      :                          @3188 [@dyn 467]
 50010: 81 77                    a0 = i32 [a0]
 50012: 89 7a                    a3 = a0 <s 0
 50014: 85 a9 01                 a2 = a3 ^ 0x1
 50017: 97 7b 20                 a4 = a0 << 0x20
 50020: 98 bb 20                 a4 = a4 >> 0x20
 50023: 9a 77                    a0 = -a0
 50025: da ab 07                 a0 = a4 if a3 == 0
 50028: 64 8a                    a3 = a1
 50030: 64 98                    a1 = a2
 50032: 64 a9                    a2 = a3
 50034: 28 6d f0                 jump @2909
      :                          @3189 [@dyn 468]
 50037: 82 79                    a2 = u64 [a0]
 50039: 9a 97                    a0 = -a2
 50041: e3 79 07                 a0 = maxs(a2, a0)
 50044: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
 50047: 98 99 3f                 a2 = a2 >> 0x3f
 50050: 64 8a                    a3 = a1
 50052: 64 98                    a1 = a2
 50054: 64 a9                    a2 = a3
 50056: 28 57 f0                 jump @2909
      :                          @3190
 50059: 51 08 9b 00              jump @3211 if a1 == 0
      :                          @3191
 50063: 64 79                    a2 = a0
 50065: 7c 77                    a0 = u8 [a0]
 50067: 51 07 91 00              jump @3210 if a0 == 0
      :                          @3192
 50071: 51 27 ff 00 90 00        jump @3212 if a0 == 255
      :                          @3193
 50077: 6c 7a                    a3 = sext.b a0
 50079: 57 0a 09                 jump @3195 if a3 <s 0
      :                          @3194
 50082: 33 0a                    a3 = 0
 50084: 33 08                    a1 = 0
 50086: 28 73                    jump @3209
      :                          @3195
 50088: 55 27 c0 00 0d           jump @3197 if a0 >=u 192
      :                          @3196
 50093: 33 0a 01                 a3 = 0x1
 50096: 33 0b 80                 a4 = 0xffffffffffffff80
 50099: 28 4a                    jump @3206
      :                          @3197
 50101: 55 27 e0 00 0e           jump @3199 if a0 >=u 224
      :                          @3198
 50106: 33 0a 02                 a3 = 0x2
 50109: 33 0b 40 ff              a4 = 0xffffffffffffff40
 50113: 28 3c                    jump @3206
      :                          @3199
 50115: 55 27 f0 00 0e           jump @3201 if a0 >=u 240
      :                          @3200
 50120: 33 0a 03                 a3 = 0x3
 50123: 33 0b 20 ff              a4 = 0xffffffffffffff20
 50127: 28 2e                    jump @3206
      :                          @3201
 50129: 55 27 f8 00 0e           jump @3203 if a0 >=u 248
      :                          @3202
 50134: 33 0a 04                 a3 = 0x4
 50137: 33 0b 10 ff              a4 = 0xffffffffffffff10
 50141: 28 20                    jump @3206
      :                          @3203
 50143: 55 27 fc 00 0e           jump @3205 if a0 >=u 252
      :                          @3204
 50148: 33 0a 05                 a3 = 0x5
 50151: 33 0b 08 ff              a4 = 0xffffffffffffff08
 50155: 28 12                    jump @3206
      :                          @3205
 50157: 88 7a fe 00              a3 = a0 <u 0xfe
 50161: 33 0b 04 ff              a4 = 0xffffffffffffff04
 50165: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 50169: 85 aa 07                 a3 = a3 ^ 0x7
 50172: 01                       fallthrough
      :                          @3206
 50173: ae 8a 2b                 jump @3213 if a3 >=u a1
      :                          @3207
 50176: 33 08                    a1 = 0
 50178: c8 b7 07                 a0 = a0 + a4
 50181: 64 ab                    a4 = a3
 50183: 01                       fallthrough
      :                          @3208
 50184: c8 b9 0c                 a5 = a2 + a4
 50187: 7c cc                    a5 = u8 [a5]
 50189: 97 88 08                 a1 = a1 << 0x8
 50192: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 50195: d4 c8 08                 a1 = a1 | a5
 50198: 52 0b f2                 jump @3208 if a4 != 0
      :                          @3209
 50201: 8a a9 03                 i32 a2 = a3 << 0x3
 50204: cf 97 07                 a0 = a0 << a2
 50207: c8 87 07                 a0 = a0 + a1
 50210: 32 00                    ret
      :                          @3210
 50212: 32 00                    ret
      :                          @3211
 50214: 00                       trap
      :                          @3212
 50215: 00                       trap
      :                          @3213
 50216: 00                       trap
      :                          @3214 [@dyn 469]
 50217: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 50220: 7b 10 28                 u64 [sp + 0x28] = ra
 50223: 7b 15 20                 u64 [sp + 0x20] = s0
 50226: 7b 16 18                 u64 [sp + 0x18] = s1
 50229: 64 86                    s1 = a1
 50231: 82 88 28                 a1 = u64 [a1 + 0x28]
 50234: 82 6a 20                 a3 = u64 [s1 + 0x20]
 50237: 82 8b 18                 a4 = u64 [a1 + 0x18]
 50240: 64 75                    s0 = a0
 50242: 33 08 a9 10 01           a1 = 0x110a9
 50247: 33 09 01                 a2 = 0x1
 50250: 64 a7                    a0 = a3
 50252: b4 b0 02 ac 03           ra = 940, jump [a4]
      :                          @3215 [@dyn 470]
 50257: 7b 16                    u64 [sp] = s1
 50259: 78 17 08                 u8 [sp + 0x8] = a0
 50262: 46 11 09                 u8 [sp + 9] = 0
 50265: 7b 15 10                 u64 [sp + 0x10] = s0
 50268: 33 09 b2 03              a2 = 0x3b2
 50272: 64 17                    a0 = sp
 50274: 95 18 10                 a1 = sp + 0x10
 50277: 50 20 ae 03 ca fc        ra = 942, jump @3156
      :                          @3216 [@dyn 471]
 50283: 33 07 01                 a0 = 0x1
 50286: 7c 18 08                 a1 = u8 [sp + 0x8]
 50289: 52 08 1b                 jump @3218 if a1 != 0
      :                          @3217
 50292: 82 17                    a0 = u64 [sp]
 50294: 82 78 28                 a1 = u64 [a0 + 0x28]
 50297: 82 77 20                 a0 = u64 [a0 + 0x20]
 50300: 82 8a 18                 a3 = u64 [a1 + 0x18]
 50303: 33 08 e9 10 01           a1 = 0x110e9
 50308: 33 09 01                 a2 = 0x1
 50311: b4 a0 02 b0 03           ra = 944, jump [a3]
      :                          @3218 [@dyn 472]
 50316: 82 10 28                 ra = u64 [sp + 0x28]
 50319: 82 15 20                 s0 = u64 [sp + 0x20]
 50322: 82 16 18                 s1 = u64 [sp + 0x18]
 50325: 95 11 30                 sp = sp + 0x30
 50328: 32 00                    ret
      :                          @3219 [@dyn 473]
 50330: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 50334: 7b 10 80 00              u64 [sp + 0x80] = ra
 50338: 64 82                    t0 = a1
 50340: 80 88 34                 a1 = u32 [a1 + 0x34]
 50343: 82 77                    a0 = u64 [a0]
 50345: 84 89 10                 a2 = a1 & 0x10
 50348: 52 09 1b                 jump @3222 if a2 != 0
      :                          @3220
 50351: 84 88 20                 a1 = a1 & 0x20
 50354: 52 08 46                 jump @3225 if a1 != 0
      :                          @3221
 50357: 7c 77                    a0 = u8 [a0]
 50359: 33 08 01                 a1 = 0x1
 50362: 64 29                    a2 = t0
 50364: 82 10 80 00              ra = u64 [sp + 0x80]
 50368: 95 11 88 00              sp = sp + 0x88
 50372: 28 1b ef                 jump @2909
      :                          @3222
 50375: 7c 77                    a0 = u8 [a0]
 50377: 33 0a 81 00              a3 = 0x81
 50381: 95 18 7f                 a1 = sp + 0x7f
 50384: 33 03 57                 t1 = 0x57
 50387: 01                       fallthrough
      :                          @3223
 50388: 64 ab                    a4 = a3
 50390: 84 7a 0f                 a3 = a0 & 0xf
 50393: 97 77 38                 a0 = a0 << 0x38
 50396: 98 77 3c                 a0 = a0 >> 0x3c
 50399: 88 ac 0a                 a5 = a3 <u 0xa
 50402: 33 09 30                 a2 = 0x30
 50405: da c3 09                 a2 = t1 if a5 == 0
 50408: be a9 09                 i32 a2 = a2 + a3
 50411: 78 89                    u8 [a1] = a2
 50413: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 50416: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 50419: 52 07 e1                 jump @3223 if a0 != 0
      :                          @3224
 50422: 28 31                    jump @3227
      :                          @3225
 50424: 7c 77                    a0 = u8 [a0]
 50426: 33 0a 81 00              a3 = 0x81
 50430: 95 18 7f                 a1 = sp + 0x7f
 50433: 33 03 37                 t1 = 0x37
 50436: 01                       fallthrough
      :                          @3226
 50437: 64 ab                    a4 = a3
 50439: 84 7a 0f                 a3 = a0 & 0xf
 50442: 97 77 38                 a0 = a0 << 0x38
 50445: 98 77 3c                 a0 = a0 >> 0x3c
 50448: 88 ac 0a                 a5 = a3 <u 0xa
 50451: 33 09 30                 a2 = 0x30
 50454: da c3 09                 a2 = t1 if a5 == 0
 50457: be a9 09                 i32 a2 = a2 + a3
 50460: 78 89                    u8 [a1] = a2
 50462: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 50465: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 50468: 52 07 e1                 jump @3226 if a0 != 0
      :                          @3227
 50471: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 50474: 56 27 80 00 2b           jump @3230 if a0 >u 128
      :                          @3228
 50479: 9a ac 81 00              a5 = 0x81 - a3
 50483: 64 1b                    a4 = sp
 50485: c8 7b 0b                 a4 = a4 + a0
 50488: 33 09 ea 10 01           a2 = 0x110ea
 50493: 33 08 01                 a1 = 0x1
 50496: 33 0a 02                 a3 = 0x2
 50499: 64 27                    a0 = t0
 50501: 50 20 b4 03 c8 ef        ra = 948, jump @2919
      :                          @3229 [@dyn 474]
 50507: 82 10 80 00              ra = u64 [sp + 0x80]
 50511: 95 11 88 00              sp = sp + 0x88
 50515: 32 00                    ret
      :                          @3230
 50517: 00                       trap
