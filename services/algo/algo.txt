// RO data = 12968/12968 bytes
// RW data = 632/1049280 bytes
// Stack size = 65536 bytes
// RO data = [158, 4, 0, 0, 160, 4, 0, 0, 162, 4, 0, 0, 164, 4, 0, 0, 172, 4, 0, 0, 180, 4, 0, 0, 188, 4, 0, 0, 196, 4, 0, 0, 204, 4, 0, 0, 212, 4, 0, 0, 220, 4, 0, 0, 236, 4, 0, 0, 248, 4, 0, 0, 4, 5, 0, 0, 16, 5, 0, 0, 28, 5, 0, 0, 36, 5, 0, 0, 48, 5, 0, 0, 60, 5, 0, 0, 72, 5, 0, 0, 82, 5, 0, 0, 92, 5, 0, 0, 98, 5, 0, 0, 104, 5, 0, 0, 114, 5, 0, 0, 120, 5, 0, 0, 128, 5, 0, 0, 142, 5, 0, 0, 156, 5, 0, 0, 164, 5, 0, 0, 172, 5, 0, 0, 182, 5, 0, 0, 192, 5, 0, 0, 202, 5, 0, 0, 212, 5, 0, 0, 222, 5, 0, 0, 234, 5, 0, 0, 246, 5, 0, 0, 254, 5, 0, 0, 6, 6, 0, 0, 14, 6, 0, 0, 22, 6, 0, 0, 28, 6, 0, 0, 36, 6, 0, 0, 44, 6, 0, 0, 52, 6, 0, 0, 60, 6, 0, 0, 68, 6, 0, 0, 76, 6, 0, 0, 82, 6, 0, 0, 88, 6, 0, 0, 94, 6, 0, 0, 102, 6, 0, 0, 110, 6, 0, 0, 122, 6, 0, 0, 132, 6, 0, 0, 138, 6, 0, 0, 144, 6, 0, 0, 174, 6, 0, 0, 178, 6, 0, 0, 202, 6, 0, 0, 210, 6, 0, 0, 218, 6, 0, 0, 230, 6, 0, 0, 246, 6, 0, 0, 254, 6, 0, 0, 4, 7, 0, 0, 12, 7, 0, 0, 20, 7, 0, 0, 28, 7, 0, 0, 38, 7, 0, 0, 40, 7, 0, 0, 44, 7, 0, 0, 56, 7, 0, 0, 64, 7, 0, 0, 72, 7, 0, 0, 80, 7, 0, 0, 96, 7, 0, 0, 102, 7, 0, 0, 106, 7, 0, 0, 110, 7, 0, 0, 114, 7, 0, 0, 120, 7, 0, 0, 124, 7, 0, 0, 132, 7, 0, 0, 146, 7, 0, 0, 160, 7, 0, 0, 166, 7, 0, 0, 176, 7, 0, 0, 188, 7, 0, 0, 196, 7, 0, 0, 208, 7, 0, 0, 216, 7, 0, 0, 222, 7, 0, 0, 234, 7, 0, 0, 242, 7, 0, 0, 2, 8, 0, 0, 10, 8, 0, 0, 18, 8, 0, 0, 26, 8, 0, 0, 34, 8, 0, 0, 46, 8, 0, 0, 54, 8, 0, 0, 62, 8, 0, 0, 70, 8, 0, 0, 76, 8, 0, 0, 84, 8, 0, 0, 92, 8, 0, 0, 98, 8, 0, 0, 106, 8, 0, 0, 114, 8, 0, 0, 122, 8, 0, 0, 128, 8, 0, 0, 136, 8, 0, 0, 144, 8, 0, 0, 150, 8, 0, 0, 158, 8, 0, 0, 166, 8, 0, 0, 168, 8, 0, 0, 176, 8, 0, 0, 182, 8, 0, 0, 188, 8, 0, 0, 194, 8, 0, 0, 202, 8, 0, 0, 208, 8, 0, 0, 216, 8, 0, 0, 224, 8, 0, 0, 234, 8, 0, 0, 244, 8, 0, 0, 0, 9, 0, 0, 12, 9, 0, 0, 20, 9, 0, 0, 28, 9, 0, 0, 36, 9, 0, 0, 44, 9, 0, 0, 72, 9, 0, 0, 100, 9, 0, 0, 112, 9, 0, 0, 122, 9, 0, 0, 138, 9, 0, 0, 154, 9, 0, 0, 164, 9, 0, 0, 174, 9, 0, 0, 186, 9, 0, 0, 202, 9, 0, 0, 218, 9, 0, 0, 222, 9, 0, 0, 224, 9, 0, 0, 244, 9, 0, 0, 250, 9, 0, 0, 2, 10, 0, 0, 10, 10, 0, 0, 18, 10, 0, 0, 28, 10, 0, 0, 42, 10, 0, 0, 50, 10, 0, 0, 56, 10, 0, 0, 62, 10, 0, 0, 80, 10, 0, 0, 86, 10, 0, 0, 94, 10, 0, 0, 102, 10, 0, 0, 110, 10, 0, 0, 118, 10, 0, 0, 126, 10, 0, 0, 134, 10, 0, 0, 142, 10, 0, 0, 150, 10, 0, 0, 158, 10, 0, 0, 166, 10, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 174, 10, 0, 0, 182, 10, 0, 0, 190, 10, 0, 0, 198, 10, 0, 0, 204, 10, 0, 0, 210, 10, 0, 0, 211, 8, 163, 133, 136, 106, 63, 36, 68, 115, 112, 3, 46, 138, 25, 19, 208, 49, 159, 41, 34, 56, 9, 164, 137, 108, 78, 236, 152, 250, 46, 8, 78, 12, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 138, 2, 0, 0, 0, 0, 0, 0, 246, 11, 0, 0, 0, 0, 0, 0, 41, 32, 61, 32, 32, 112, 116, 115, 44, 32, 115, 61, 110, 116, 116, 40, 32, 105, 110, 32, 41, 32, 114, 61, 44, 32, 103, 61, 32, 61, 32, 40, 44, 32, 104, 61, 44, 32, 120, 61, 108, 99, 115, 40, 44, 32, 98, 61, 44, 32, 73, 61, 102, 105, 98, 32, 44, 32, 66, 61, 83, 111, 109, 101, 93, 32, 61, 32, 116, 114, 117, 101, 32, 195, 183, 32, 99, 108, 122, 61, 102, 32, 61, 32, 110, 111, 110, 101, 78, 111, 110, 101, 102, 105, 98, 40, 100, 116, 119, 40, 44, 32, 112, 61, 65, 67, 71, 84, 44, 32, 101, 61, 44, 32, 114, 61, 32, 32, 32, 32, 44, 32, 99, 61, 44, 32, 100, 61, 111, 114, 100, 95, 103, 99, 100, 40, 211, 8, 163, 133, 136, 106, 63, 36, 68, 115, 112, 3, 46, 138, 25, 19, 208, 49, 159, 41, 34, 56, 9, 164, 137, 108, 78, 236, 152, 250, 46, 8, 119, 19, 208, 56, 230, 33, 40, 69, 108, 12, 233, 52, 207, 102, 84, 190, 221, 80, 124, 201, 183, 41, 172, 192, 23, 9, 71, 181, 181, 213, 132, 63, 32, 115, 101, 110, 100, 101, 114, 61, 109, 111, 116, 122, 107, 105, 110, 40, 106, 97, 99, 111, 98, 105, 40, 32, 32, 117, 110, 114, 97, 110, 107, 61, 80, 65, 89, 76, 79, 65, 68, 32, 32, 97, 109, 111, 117, 110, 116, 61, 32, 112, 97, 114, 116, 115, 58, 32, 102, 105, 120, 95, 109, 117, 108, 61, 255, 255, 255, 255, 255, 255, 255, 255, 109, 111, 100, 95, 101, 120, 112, 40, 44, 32, 102, 110, 118, 49, 97, 61, 32, 114, 101, 115, 117, 108, 116, 61, 32, 115, 104, 97, 114, 101, 115, 61, 109, 97, 116, 95, 112, 111, 119, 40, 99, 105, 114, 99, 117, 105, 116, 61, 44, 32, 115, 105, 110, 226, 137, 136, 115, 117, 98, 95, 103, 99, 100, 40, 2, 0, 0, 0, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 0, 0, 159, 36, 0, 0, 0, 0, 0, 0, 18, 110, 0, 0, 0, 0, 0, 0, 215, 224, 6, 0, 0, 0, 0, 0, 24, 61, 149, 0, 0, 0, 0, 0, 254, 145, 1, 107, 0, 0, 0, 0, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 108, 117, 99, 97, 115, 40, 234, 5, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 116, 114, 105, 98, 111, 110, 97, 99, 99, 105, 40, 0, 0, 0, 0, 0, 16, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 101, 108, 108, 40, 0, 0, 0, 64, 6, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 116, 105, 114, 108, 105, 110, 103, 49, 40, 0, 0, 0, 0, 0, 0, 104, 6, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 116, 105, 114, 108, 105, 110, 103, 50, 40, 0, 0, 0, 0, 0, 0, 168, 6, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 66, 101, 108, 108, 40, 0, 0, 0, 232, 6, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 101, 114, 97, 110, 103, 101, 109, 101, 110, 116, 32, 61, 32, 0, 0, 16, 7, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 27, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 101, 117, 108, 101, 114, 105, 97, 110, 40, 0, 0, 0, 0, 0, 0, 0, 64, 7, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 110, 97, 114, 97, 121, 97, 110, 97, 40, 0, 0, 0, 0, 0, 0, 0, 128, 7, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 24, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 41, 58, 32, 0, 0, 0, 0, 0, 120, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 224, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 112, 101, 114, 102, 101, 99, 116, 95, 109, 97, 116, 99, 104, 105, 110, 103, 115, 32, 61, 32, 0, 0, 0, 0, 8, 8, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 99, 104, 114, 111, 109, 97, 116, 105, 99, 95, 99, 111, 117, 110, 116, 40, 107, 61, 0, 0, 0, 0, 0, 0, 48, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 112, 97, 110, 110, 105, 110, 103, 95, 116, 114, 101, 101, 95, 99, 111, 117, 110, 116, 32, 61, 32, 0, 0, 104, 8, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 44, 32, 112, 97, 116, 104, 61, 0, 128, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 144, 8, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 116, 111, 112, 111, 95, 115, 111, 114, 116, 32, 61, 32, 0, 0, 0, 0, 184, 8, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 83, 67, 67, 115, 32, 61, 32, 0, 216, 8, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 98, 105, 112, 97, 114, 116, 105, 116, 101, 95, 109, 97, 116, 99, 104, 32, 61, 32, 0, 0, 0, 0, 0, 0, 240, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 115, 116, 111, 101, 114, 95, 119, 97, 103, 110, 101, 114, 32, 61, 32, 0, 24, 9, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 109, 97, 116, 114, 105, 120, 95, 114, 97, 110, 107, 32, 109, 97, 116, 61, 105, 110, 116, 101, 103, 101, 114, 95, 108, 111, 103, 95, 100, 105, 118, 40, 110, 111, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 32, 109, 111, 100, 95, 101, 120, 112, 95, 115, 108, 105, 100, 105, 110, 103, 40, 105, 115, 95, 119, 105, 108, 115, 111, 110, 95, 112, 114, 105, 109, 101, 40, 105, 115, 95, 105, 115, 111, 109, 111, 114, 112, 104, 105, 99, 32, 61, 32, 105, 110, 116, 101, 103, 101, 114, 95, 108, 111, 103, 95, 109, 117, 108, 40, 99, 111, 105, 110, 95, 99, 104, 97, 110, 103, 101, 95, 109, 105, 110, 40, 109, 111, 110, 116, 95, 114, 101, 100, 117, 99, 101, 51, 50, 32, 61, 32, 32, 109, 97, 120, 105, 109, 97, 108, 32, 99, 108, 105, 113, 117, 101, 115, 114, 97, 98, 105, 110, 95, 100, 101, 99, 114, 121, 112, 116, 32, 109, 61, 136, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 112, 105, 99, 107, 95, 116, 104, 101, 111, 114, 101, 109, 32, 32, 226, 134, 146, 32, 50, 97, 114, 101, 97, 61, 248, 9, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 5, 10, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 128, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 120, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 97, 110, 104, 97, 116, 116, 97, 110, 40, 41, 61, 0, 0, 0, 0, 80, 10, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 151, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 90, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 99, 104, 101, 98, 121, 115, 104, 101, 118, 40, 0, 0, 0, 0, 0, 0, 144, 10, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 151, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 90, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 63, 32, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 208, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 99, 111, 110, 118, 101, 120, 95, 104, 117, 108, 108, 61, 32, 226, 134, 146, 32, 104, 117, 108, 108, 61, 0, 0, 8, 11, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 20, 11, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 115, 101, 103, 109, 101, 110, 116, 115, 95, 105, 110, 116, 101, 114, 115, 101, 99, 116, 32, 45, 32, 226, 136, 169, 32, 0, 0, 0, 0, 0, 0, 0, 64, 11, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 83, 11, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 84, 11, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 83, 11, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 208, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 102, 105, 108, 108, 101, 100, 32, 32, 99, 101, 108, 108, 115, 32, 102, 114, 111, 109, 32, 40, 0, 0, 0, 0, 176, 11, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 183, 11, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 151, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 65, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 115, 99, 97, 110, 108, 105, 110, 101, 95, 102, 105, 108, 108, 32, 111, 102, 32, 32, 226, 134, 146, 32, 32, 112, 105, 120, 101, 108, 115, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 25, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 30, 12, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 99, 111, 104, 101, 110, 95, 115, 117, 116, 104, 101, 114, 108, 97, 110, 100, 95, 99, 108, 105, 112, 32, 32, 99, 108, 105, 112, 112, 101, 100, 32, 116, 111, 32, 0, 0, 0, 0, 0, 0, 88, 12, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 83, 11, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 110, 12, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 208, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 109, 105, 100, 112, 111, 105, 110, 116, 95, 99, 105, 114, 99, 108, 101, 32, 64, 40, 0, 0, 0, 0, 0, 0, 192, 12, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 151, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 92, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 25, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 76, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 101, 114, 103, 101, 95, 115, 111, 114, 116, 32, 0, 0, 0, 0, 0, 40, 13, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 113, 117, 105, 99, 107, 95, 115, 111, 114, 116, 32, 0, 0, 0, 0, 0, 72, 13, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 104, 101, 97, 112, 95, 115, 111, 114, 116, 32, 0, 0, 0, 0, 0, 0, 104, 13, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 99, 111, 117, 110, 116, 105, 110, 103, 95, 115, 111, 114, 116, 32, 0, 0, 136, 13, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 27, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 114, 97, 100, 105, 120, 95, 115, 111, 114, 116, 32, 0, 0, 0, 0, 0, 184, 13, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 44, 32, 115, 117, 109, 40, 48, 46, 46, 61, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 216, 13, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 44, 32, 115, 117, 109, 40, 46, 46, 61, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 14, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 30, 14, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 115, 95, 113, 117, 97, 100, 114, 97, 116, 105, 99, 95, 114, 101, 115, 105, 100, 117, 101, 40, 0, 0, 0, 104, 14, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 99, 97, 114, 109, 105, 99, 104, 97, 101, 108, 40, 0, 0, 0, 0, 0, 176, 14, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 200, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 148, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 114, 105, 109, 105, 116, 105, 118, 101, 95, 114, 111, 111, 116, 40, 0, 16, 15, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 120, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 111, 118, 97, 121, 95, 115, 116, 114, 97, 115, 115, 101, 110, 40, 0, 0, 0, 0, 0, 0, 0, 96, 15, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 102, 101, 114, 109, 97, 116, 95, 102, 97, 99, 116, 111, 114, 40, 0, 0, 152, 15, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 116, 114, 105, 97, 108, 95, 100, 105, 118, 105, 115, 105, 111, 110, 95, 119, 104, 101, 101, 108, 40, 0, 0, 0, 200, 15, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 111, 99, 107, 108, 105, 110, 103, 116, 111, 110, 40, 0, 0, 0, 0, 0, 16, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 101, 99, 114, 101, 116, 61, 0, 48, 16, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 112, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 108, 102, 115, 114, 32, 0, 0, 0, 88, 16, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 98, 98, 115, 95, 110, 101, 120, 116, 32, 0, 0, 0, 0, 0, 0, 0, 112, 16, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 111, 116, 112, 95, 101, 110, 99, 114, 121, 112, 116, 32, 109, 61, 32, 99, 61, 32, 100, 61, 0, 0, 0, 0, 144, 16, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 158, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 161, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 43, 226, 134, 146, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 216, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 217, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 217, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 164, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 116, 115, 112, 95, 104, 101, 108, 100, 95, 107, 97, 114, 112, 32, 116, 111, 117, 114, 32, 99, 111, 115, 116, 32, 61, 32, 0, 0, 0, 0, 0, 0, 64, 17, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 98, 105, 110, 95, 112, 97, 99, 107, 105, 110, 103, 95, 102, 102, 100, 32, 61, 32, 0, 0, 0, 0, 0, 0, 112, 17, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 103, 114, 101, 101, 100, 121, 95, 99, 111, 108, 111, 114, 105, 110, 103, 32, 61, 32, 0, 0, 0, 0, 0, 0, 152, 17, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 99, 111, 118, 101, 114, 32, 101, 100, 103, 101, 115, 32, 61, 32, 0, 0, 192, 17, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 115, 116, 101, 105, 110, 101, 114, 95, 97, 112, 112, 114, 111, 120, 32, 32, 97, 112, 112, 114, 111, 120, 32, 99, 111, 115, 116, 61, 0, 0, 0, 0, 224, 17, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 239, 17, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 106, 111, 98, 115, 32, 32, 226, 134, 146, 32, 111, 114, 100, 101, 114, 32, 32, 18, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 37, 18, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 117, 110, 105, 111, 110, 32, 115, 105, 122, 101, 32, 61, 32, 0, 0, 0, 80, 18, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 98, 117, 114, 110, 115, 105, 100, 101, 95, 110, 101, 99, 107, 108, 97, 99, 101, 32, 100, 105, 115, 116, 105, 110, 99, 116, 32, 99, 111, 108, 111, 114, 105, 110, 103, 115, 32, 61, 32, 0, 112, 18, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 114, 111, 111, 107, 95, 112, 111, 108, 121, 32, 110, 61, 0, 0, 0, 0, 168, 18, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 25, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 112, 101, 114, 109, 97, 110, 101, 110, 116, 32, 61, 32, 0, 0, 0, 0, 216, 18, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 100, 101, 116, 32, 61, 32, 0, 0, 248, 18, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 121, 111, 117, 110, 103, 95, 116, 97, 98, 108, 101, 97, 117, 120, 32, 195, 151, 0, 0, 0, 0, 0, 0, 0, 16, 19, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 31, 19, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 25, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 102, 114, 111, 98, 101, 110, 105, 117, 115, 40, 0, 0, 0, 0, 0, 0, 88, 19, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 40, 41, 32, 109, 111, 100, 32, 152, 19, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 154, 19, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 27, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 113, 95, 97, 110, 97, 108, 111, 103, 91, 93, 95, 0, 0, 0, 0, 0, 208, 19, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 217, 19, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 27, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 206, 166, 95, 0, 0, 0, 0, 0, 16, 20, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 148, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 152, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 82, 40, 41, 32, 105, 110, 32, 0, 88, 20, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 90, 20, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 110, 101, 103, 97, 116, 105, 118, 101, 32, 99, 121, 99, 108, 101, 32, 100, 101, 116, 101, 99, 116, 101, 100, 0, 144, 20, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 98, 101, 108, 108, 109, 97, 110, 95, 102, 111, 114, 100, 32, 100, 105, 115, 116, 32, 102, 114, 111, 109, 32, 0, 184, 20, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 27, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 102, 108, 111, 121, 100, 95, 119, 97, 114, 115, 104, 97, 108, 108, 0, 0, 240, 20, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 103, 114, 97, 112, 104, 95, 100, 105, 97, 109, 101, 116, 101, 114, 32, 61, 32, 0, 0, 0, 0, 0, 0, 0, 16, 21, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 97, 114, 116, 105, 99, 117, 108, 97, 116, 105, 111, 110, 95, 112, 111, 105, 110, 116, 115, 32, 61, 32, 0, 0, 56, 21, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 98, 114, 105, 100, 103, 101, 115, 32, 61, 32, 0, 0, 0, 0, 0, 0, 96, 21, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 98, 114, 111, 110, 95, 107, 101, 114, 98, 111, 115, 99, 104, 32, 0, 0, 128, 21, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 200, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 103, 114, 101, 101, 100, 121, 95, 100, 111, 109, 105, 110, 97, 116, 105, 110, 103, 95, 115, 101, 116, 32, 61, 32, 176, 21, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 103, 114, 97, 104, 97, 109, 95, 104, 117, 108, 108, 32, 61, 32, 0, 0, 216, 21, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 100, 105, 97, 109, 101, 116, 101, 114, 32, 61, 32, 0, 0, 0, 0, 0, 248, 21, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 116, 114, 105, 97, 110, 103, 117, 108, 97, 116, 101, 95, 99, 111, 110, 118, 101, 120, 32, 61, 32, 0, 0, 0, 24, 22, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 109, 105, 110, 107, 111, 119, 115, 107, 105, 95, 115, 117, 109, 32, 104, 117, 108, 108, 32, 61, 32, 0, 0, 0, 64, 22, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 86, 105, 115, 105, 98, 105, 108, 105, 116, 121, 71, 114, 97, 112, 104, 32, 101, 100, 103, 101, 115, 32, 61, 32, 104, 22, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 115, 116, 114, 97, 115, 115, 101, 110, 95, 50, 120, 50, 32, 65, 61, 44, 32, 65, 120, 66, 61, 0, 0, 0, 144, 22, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 128, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 159, 22, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 103, 101, 114, 115, 104, 103, 111, 114, 105, 110, 95, 98, 111, 117, 110, 100, 115, 32, 109, 97, 116, 61, 44, 32, 98, 111, 117, 110, 100, 115, 61, 0, 216, 22, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 238, 22, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 44, 32, 114, 97, 110, 107, 61, 0, 56, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 24, 23, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 99, 111, 110, 100, 105, 116, 105, 111, 110, 95, 110, 117, 109, 98, 101, 114, 95, 50, 120, 50, 32, 65, 61, 32, 61, 0, 0, 0, 0, 0, 0, 0, 64, 23, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 87, 23, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 115, 112, 109, 118, 32, 120, 61, 32, 226, 134, 146, 32, 121, 61, 0, 0, 128, 23, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 135, 23, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 115, 105, 110, 103, 117, 108, 97, 114, 95, 118, 97, 108, 117, 101, 95, 98, 111, 117, 110, 100, 115, 32, 65, 61, 32, 207, 131, 226, 136, 136, 91, 0, 176, 23, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 200, 23, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 151, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 153, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 112, 111, 108, 108, 97, 114, 100, 95, 114, 104, 111, 95, 98, 114, 101, 110, 116, 32, 0, 0, 0, 0, 0, 0, 16, 24, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 79, 110, 101, 68, 82, 97, 110, 103, 101, 84, 114, 101, 101, 81, 117, 101, 114, 121, 32, 91, 93, 32, 226, 134, 146, 32, 0, 0, 0, 0, 0, 0, 56, 24, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 151, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 76, 24, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 226, 134, 146, 99, 61, 0, 0, 0, 216, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 136, 24, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 217, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 109, 104, 95, 100, 101, 99, 114, 121, 112, 116, 32, 0, 0, 0, 0, 0, 192, 24, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 217, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 217, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 114, 101, 99, 95, 110, 116, 104, 32, 84, 40, 0, 0, 0, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 90, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 118, 101, 95, 108, 105, 110, 101, 97, 114, 51, 32, 0, 0, 48, 25, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 107, 95, 115, 104, 111, 114, 116, 101, 115, 116, 32, 0, 0, 0, 0, 0, 80, 25, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 110, 111, 32, 102, 97, 99, 116, 111, 114, 0, 0, 0, 0, 0, 0, 0, 112, 25, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 99, 102, 95, 102, 97, 99, 116, 111, 114, 32, 102, 97, 99, 116, 111, 114, 58, 32, 0, 0, 0, 0, 0, 0, 144, 25, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 114, 115, 97, 95, 107, 101, 121, 103, 101, 110, 32, 110, 61, 0, 0, 0, 184, 25, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 180, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 196, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 101, 108, 103, 97, 109, 97, 108, 95, 107, 101, 121, 103, 101, 110, 32, 112, 61, 0, 0, 0, 0, 0, 0, 0, 248, 25, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 96, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 104, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 61, 44, 32, 111, 107, 61, 0, 80, 26, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 184, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 80, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 82, 26, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 103, 102, 95, 99, 111, 101, 102, 102, 91, 0, 0, 0, 0, 0, 0, 0, 152, 26, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 136, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 101, 103, 101, 110, 100, 114, 101, 95, 115, 121, 109, 98, 111, 108, 32, 40, 32, 47, 0, 0, 0, 0, 0, 200, 26, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 218, 26, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 117, 99, 97, 115, 95, 108, 101, 104, 109, 101, 114, 32, 77, 95, 32, 105, 115, 32, 112, 114, 105, 109, 101, 63, 32, 0, 0, 0, 0, 0, 0, 16, 27, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 31, 27, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 108, 117, 99, 97, 115, 95, 115, 101, 113, 117, 101, 110, 99, 101, 32, 85, 95, 44, 86, 95, 32, 109, 111, 100, 32, 0, 0, 0, 0, 0, 0, 0, 80, 27, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 97, 27, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 100, 27, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 100, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 151, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 65, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 99, 108, 111, 115, 101, 115, 116, 95, 112, 97, 105, 114, 32, 44, 32, 99, 108, 111, 115, 101, 115, 116, 61, 44, 32, 100, 105, 115, 116, 194, 178, 61, 208, 27, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 221, 27, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 83, 11, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 231, 27, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 98, 97, 105, 108, 108, 105, 101, 95, 112, 115, 119, 32, 0, 0, 0, 0, 48, 28, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 31, 27, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 110, 101, 119, 116, 111, 110, 95, 115, 113, 114, 116, 32, 0, 0, 0, 0, 96, 28, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 27, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 100, 101, 116, 95, 98, 97, 114, 101, 105, 115, 115, 95, 51, 120, 51, 32, 100, 101, 116, 32, 61, 32, 0, 0, 144, 28, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 115, 109, 105, 116, 104, 95, 110, 111, 114, 109, 97, 108, 95, 102, 111, 114, 109, 95, 50, 120, 50, 32, 100, 105, 97, 103, 40, 0, 0, 0, 0, 0, 184, 28, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 65, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 104, 101, 114, 109, 105, 116, 101, 95, 110, 111, 114, 109, 97, 108, 95, 102, 111, 114, 109, 95, 50, 120, 50, 32, 72, 32, 61, 32, 91, 91, 93, 44, 91, 93, 93, 0, 0, 0, 0, 0, 8, 29, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 151, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 38, 29, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 151, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 41, 29, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 108, 108, 108, 95, 114, 101, 100, 117, 99, 101, 95, 50, 100, 32, 98, 49, 61, 44, 32, 98, 50, 61, 0, 0, 128, 29, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 145, 29, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 108, 111, 110, 103, 95, 100, 105, 118, 32, 44, 32, 114, 101, 109, 32, 0, 184, 29, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 144, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 27, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 193, 29, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 98, 97, 114, 114, 101, 116, 116, 95, 100, 105, 118, 40, 0, 0, 0, 0, 8, 30, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 104, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 111, 100, 95, 101, 120, 112, 95, 108, 97, 100, 100, 101, 114, 40, 0, 136, 30, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 116, 111, 111, 109, 51, 95, 54, 52, 40, 0, 0, 0, 0, 0, 0, 0, 216, 30, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 116, 101, 105, 110, 95, 103, 99, 100, 40, 0, 0, 0, 0, 0, 0, 24, 31, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 144, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 27, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 152, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 72, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 115, 95, 112, 101, 114, 102, 101, 99, 116, 95, 115, 113, 117, 97, 114, 101, 40, 0, 0, 0, 0, 0, 0, 24, 32, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 101, 114, 102, 101, 99, 116, 95, 112, 111, 119, 101, 114, 40, 0, 0, 80, 32, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 102, 119, 104, 116, 32, 0, 0, 0, 128, 32, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 99, 111, 110, 116, 105, 110, 117, 101, 100, 95, 102, 114, 97, 99, 116, 105, 111, 110, 95, 99, 111, 110, 118, 101, 114, 103, 101, 110, 116, 115, 40, 0, 152, 32, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 218, 26, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 102, 97, 114, 101, 121, 95, 115, 101, 113, 117, 101, 110, 99, 101, 40, 41, 32, 108, 101, 110, 103, 116, 104, 32, 61, 32, 0, 0, 0, 0, 0, 0, 232, 32, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 247, 32, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 111, 107, 61, 32, 112, 101, 114, 109, 61, 0, 0, 0, 0, 0, 0, 0, 40, 33, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 43, 33, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 32, 99, 111, 109, 98, 61, 0, 0, 40, 33, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 88, 33, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 112, 101, 114, 109, 61, 32, 114, 97, 110, 107, 61, 0, 0, 0, 0, 0, 128, 33, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 133, 33, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 40, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 99, 111, 109, 98, 61, 0, 0, 0, 192, 33, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 133, 33, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 40, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 152, 19, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 90, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 110, 61, 0, 0, 0, 0, 0, 0, 24, 34, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 25, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 64, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 99, 111, 105, 110, 95, 99, 104, 97, 110, 103, 101, 95, 99, 111, 117, 110, 116, 40, 0, 0, 0, 0, 0, 0, 80, 34, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 90, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 168, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 90, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 107, 110, 97, 112, 115, 97, 99, 107, 32, 99, 97, 112, 61, 44, 32, 119, 115, 61, 44, 32, 118, 115, 61, 32, 226, 134, 146, 32, 109, 97, 120, 61, 168, 34, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 181, 34, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 186, 34, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 191, 34, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 117, 110, 98, 111, 117, 110, 100, 101, 100, 95, 107, 110, 97, 112, 115, 97, 99, 107, 32, 99, 97, 112, 61, 0, 8, 35, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 181, 34, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 186, 34, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 25, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 112, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 101, 118, 101, 110, 115, 104, 116, 101, 105, 110, 40, 0, 0, 0, 0, 144, 35, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 144, 35, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 97, 109, 101, 114, 97, 117, 95, 108, 101, 118, 101, 110, 115, 104, 116, 101, 105, 110, 40, 0, 0, 0, 0, 240, 35, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 97, 116, 114, 105, 120, 95, 99, 104, 97, 105, 110, 40, 41, 32, 226, 134, 146, 32, 0, 0, 0, 0, 0, 56, 36, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 69, 36, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 111, 112, 116, 105, 109, 97, 108, 95, 98, 115, 116, 32, 102, 114, 101, 113, 61, 0, 0, 0, 0, 0, 0, 0, 112, 36, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 25, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 168, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 110, 101, 101, 100, 108, 101, 109, 97, 110, 95, 119, 117, 110, 115, 99, 104, 40, 0, 0, 0, 0, 0, 0, 0, 216, 36, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 109, 105, 116, 104, 95, 119, 97, 116, 101, 114, 109, 97, 110, 40, 0, 32, 37, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 44, 32, 108, 99, 109, 61, 0, 0, 204, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 151, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 90, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 96, 37, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 44, 32, 109, 111, 100, 95, 105, 110, 118, 61, 0, 0, 0, 0, 0, 0, 88, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 151, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 151, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 90, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 168, 37, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 99, 114, 116, 50, 32, 61, 32, 0, 8, 38, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 103, 97, 114, 110, 101, 114, 32, 61, 32, 0, 0, 0, 0, 0, 0, 0, 32, 38, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 110, 116, 104, 95, 114, 111, 111, 116, 40, 0, 0, 0, 0, 0, 0, 0, 64, 38, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 151, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 44, 32, 99, 116, 122, 61, 44, 32, 112, 111, 112, 99, 111, 117, 110, 116, 61, 44, 32, 112, 97, 114, 105, 116, 121, 61, 0, 0, 0, 0, 0, 0, 148, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 128, 38, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 134, 38, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 145, 38, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 114, 101, 118, 95, 98, 105, 116, 115, 61, 44, 32, 103, 114, 97, 121, 95, 101, 110, 99, 61, 44, 32, 103, 114, 97, 121, 95, 100, 101, 99, 61, 0, 224, 38, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 233, 38, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 244, 38, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 112, 114, 105, 109, 101, 115, 32, 117, 112, 32, 116, 111, 32, 49, 48, 48, 58, 32, 0, 0, 0, 0, 0, 0, 48, 39, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 102, 97, 99, 116, 40, 44, 32, 98, 105, 110, 111, 109, 105, 97, 108, 40, 44, 32, 99, 97, 116, 97, 108, 97, 110, 40, 0, 0, 0, 0, 0, 0, 88, 39, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 90, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 93, 39, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 151, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 90, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 104, 39, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 90, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 107, 97, 114, 97, 116, 115, 117, 98, 97, 40, 0, 0, 0, 0, 0, 0, 232, 39, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 112, 95, 97, 100, 100, 61, 44, 32, 109, 112, 95, 115, 117, 98, 61, 44, 32, 109, 112, 95, 109, 117, 108, 95, 110, 97, 105, 118, 101, 61, 0, 40, 40, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 47, 40, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 56, 40, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 109, 111, 110, 116, 95, 109, 117, 108, 51, 50, 40, 0, 0, 0, 0, 0, 120, 40, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 44, 32, 98, 97, 114, 114, 101, 116, 116, 32, 61, 32, 0, 0, 0, 0, 184, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 184, 40, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 84, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 97, 110, 103, 108, 101, 61, 32, 226, 134, 146, 32, 99, 111, 115, 226, 137, 136, 0, 0, 0, 0, 0, 0, 0, 8, 41, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 14, 41, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 136, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 44, 32, 102, 105, 120, 95, 100, 105, 118, 61, 0, 0, 0, 0, 0, 0, 72, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 80, 41, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 108, 99, 103, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 128, 41, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 120, 111, 114, 115, 104, 105, 102, 116, 54, 52, 32, 61, 32, 0, 0, 0, 160, 41, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 112, 99, 103, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 192, 41, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 109, 119, 99, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 224, 41, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 99, 114, 99, 51, 50, 61, 44, 32, 97, 100, 108, 101, 114, 51, 50, 61, 44, 32, 109, 117, 114, 109, 117, 114, 51, 61, 44, 32, 106, 101, 110, 107, 105, 110, 115, 61, 0, 0, 0, 0, 0, 42, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 6, 42, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 96, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 16, 42, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 26, 42, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 101, 117, 108, 101, 114, 84, 111, 116, 105, 101, 110, 116, 32, 112, 104, 105, 40, 0, 0, 0, 0, 0, 0, 0, 120, 42, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 105, 110, 101, 97, 114, 95, 115, 105, 101, 118, 101, 32, 110, 61, 32, 35, 112, 114, 105, 109, 101, 115, 61, 176, 42, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 191, 42, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 144, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 108, 105, 110, 101, 97, 114, 95, 109, 117, 32, 110, 61, 44, 32, 91, 110, 93, 61, 0, 0, 0, 0, 0, 0, 8, 43, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 20, 43, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 83, 117, 109, 79, 102, 68, 105, 118, 105, 115, 111, 114, 115, 32, 115, 105, 103, 109, 97, 40, 0, 0, 0, 0, 64, 43, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 105, 118, 105, 115, 111, 114, 95, 99, 111, 117, 110, 116, 40, 0, 0, 120, 43, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 111, 98, 105, 117, 115, 40, 0, 168, 43, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 105, 114, 105, 99, 104, 108, 101, 116, 95, 99, 111, 110, 118, 111, 108, 117, 116, 105, 111, 110, 32, 40, 49, 32, 42, 32, 105, 100, 41, 40, 0, 208, 43, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 105, 95, 116, 114, 105, 97, 108, 40, 0, 0, 0, 0, 0, 0, 0, 16, 44, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 32, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 218, 26, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 156, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 32, 226, 134, 146, 32, 102, 97, 105, 108, 0, 0, 0, 0, 0, 0, 0, 24, 34, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 128, 44, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 32, 226, 134, 146, 32, 102, 97, 99, 116, 111, 114, 32, 0, 0, 0, 0, 24, 34, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 176, 44, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 115, 116, 101, 114, 110, 95, 98, 114, 111, 99, 111, 116, 95, 112, 97, 116, 104, 40, 0, 0, 0, 0, 0, 0, 224, 44, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 218, 26, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 115, 95, 115, 116, 114, 111, 110, 103, 95, 108, 117, 99, 97, 115, 95, 112, 114, 112, 32, 0, 0, 0, 0, 40, 45, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 208, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 118, 101, 95, 113, 117, 97, 100, 114, 97, 116, 105, 99, 95, 109, 111, 100, 40, 97, 61, 0, 0, 96, 45, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 116, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 192, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 172, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 105, 115, 95, 98, 114, 117, 116, 101, 102, 111, 114, 99, 101, 32, 61, 32, 0, 0, 0, 0, 0, 0, 0, 200, 45, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 115, 101, 116, 95, 99, 111, 118, 101, 114, 95, 103, 114, 101, 101, 100, 121, 32, 61, 32, 0, 0, 0, 0, 0, 240, 45, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 88, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 48, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 40, 46, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 32, 32, 73, 84, 69, 82, 65, 84, 73, 79, 78, 83, 32, 0, 80, 46, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 91, 46, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 114, 117, 110, 95, 112, 114, 111, 103, 114, 97, 109, 32, 32, 103, 97, 115, 95, 117, 115, 101, 100, 32, 0, 0, 136, 46, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 91, 46, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 148, 46, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 124, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 104, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 240, 46, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 10, 47, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 16, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 25, 47, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 56, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 35, 47, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 41, 47, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 168, 47, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 193, 47, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 16, 12, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 18, 12, 0, 0, 0, 0, 0, 0, 24, 12, 0, 0, 0, 0, 0, 0, 32, 12, 0, 0, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 78, 12, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 80, 12, 0, 0, 0, 0, 0, 0, 86, 12, 0, 0, 0, 0, 0, 0, 90, 12, 0, 0, 0, 0, 0, 0, 44, 32, 44, 10, 40, 40, 10, 44, 10, 93, 48, 120, 48, 98, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 102, 97, 108, 115, 101, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 107, 50, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 124, 50, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 85, 85, 85, 85, 85, 85, 5, 86, 85, 85, 85, 85, 85, 85, 5, 86, 85, 85, 85, 85, 85, 85, 5, 86, 85, 85, 85, 85, 85, 85, 5, 29, 221, 108, 79, 145, 244, 69, 37, 195, 245, 40, 92, 143, 194, 245, 40, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 75, 89, 134, 56, 214, 197, 109, 52, 29, 221, 108, 79, 145, 244, 69, 37, 195, 245, 40, 92, 143, 194, 245, 40, 29, 221, 108, 79, 145, 244, 69, 37, 25, 134, 97, 24, 134, 97, 24, 134, 29, 221, 108, 79, 145, 244, 69, 37, 11, 215, 163, 112, 61, 10, 215, 163, 29, 221, 108, 79, 145, 244, 69, 37, 128, 128, 128, 128, 128, 128, 128, 128, 45, 127, 149, 76, 45, 244, 81, 88, 147, 36, 73, 146, 36, 73, 146, 36, 86, 85, 85, 85, 85, 85, 85, 5, 45, 127, 149, 76, 45, 244, 81, 88, 128, 128, 128, 128, 128, 128, 128, 128, 29, 221, 108, 79, 145, 244, 69, 37, 86, 85, 85, 85, 85, 85, 85, 85, 29, 221, 108, 79, 145, 244, 69, 37, 25, 134, 97, 24, 134, 97, 24, 134, 201, 66, 22, 178, 144, 133, 44, 100, 29, 221, 108, 79, 145, 244, 69, 37, 63, 0, 206, 215, 7, 192, 249, 250, 29, 221, 108, 79, 145, 244, 69, 37, 195, 0, 205, 88, 194, 34, 231, 129, 113, 250, 253, 231, 130, 210, 99, 129, 37, 82, 6, 207, 112, 63, 80, 131, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 11, 215, 163, 112, 61, 10, 215, 163, 75, 89, 134, 56, 214, 197, 109, 52, 165, 128, 102, 16, 64, 10, 104, 6, 67, 120, 180, 113, 196, 90, 124, 10, 0, 160, 163, 155, 237, 41, 146, 190, 125, 63, 53, 94, 186, 73, 12, 2, 243, 187, 108, 107, 170, 43, 62, 5, 225, 229, 20, 188, 156, 130, 151, 83, 195, 245, 40, 92, 143, 194, 245, 40, 219, 52, 182, 215, 130, 222, 27, 67, 143, 227, 56, 142, 227, 56, 142, 227, 163, 147, 192, 124, 209, 197, 55, 134, 229, 174, 159, 45, 86, 134, 111, 68, 37, 82, 6, 207, 112, 63, 80, 131, 25, 134, 97, 24, 134, 97, 24, 134, 103, 102, 102, 102, 102, 102, 102, 102, 197, 78, 236, 196, 78, 236, 196, 78, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128, 115, 25, 54, 232, 241, 244, 152, 149, 210, 176, 74, 219, 62, 37, 15, 118, 211, 176, 74, 219, 62, 37, 15, 118, 0, 0, 24, 118, 251, 220, 56, 117, 253, 206, 97, 132, 17, 119, 204, 171, 87, 120, 19, 177, 47, 101, 165, 57, 129, 205, 149, 80, 195, 77, 66, 11, 51, 34, 212, 91, 2, 51, 47, 35, 191, 213, 237, 189, 206, 254, 230, 219, 219, 52, 182, 215, 130, 222, 27, 67, 93, 143, 194, 245, 40, 92, 143, 2, 75, 89, 134, 56, 214, 197, 109, 52, 195, 245, 40, 92, 143, 194, 245, 40, 185, 30, 133, 235, 81, 184, 30, 5, 241, 222, 188, 154, 120, 86, 52, 18]
// Instructions = 66076
// Code size = 206136 bytes

      :                          @0
     0: 28 8a f3 02 00           jump @13278
      :                          @1
     5: 28 a1 f7 02 00           jump @13353
      :                          @2
    10: 28 f9 f9 02              jump @13402
      :                          @3
    14: 95 11 f0                 sp = sp + 0xfffffffffffffff0
    17: 7b 15 08                 u64 [sp + 0x8] = s0
    20: 64 72                    t0 = a0
    22: 82 78 10                 a1 = u64 [a0 + 0x10]
    25: 82 74                    t2 = u64 [a0]
    27: 51 08 1f                 jump @8 if a1 == 0
      :                          @4
    30: 82 29 18                 a2 = u64 [t0 + 0x18]
    33: aa 98 68                 jump @17 if a1 == a2
      :                          @5
    36: 33 07                    a0 = 0
    38: c9 89 09                 a2 = a2 - a1
    41: 01                       fallthrough
      :                          @6
    42: 7c 8a                    a3 = u8 [a1]
    44: c8 a7 07                 a0 = a0 + a3
    47: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    50: 95 88 01                 a1 = a1 + 0x1
    53: 52 09 f5                 jump @6 if a2 != 0
      :                          @7
    56: 28 05                    jump @9
      :                          @8
    58: 33 07                    a0 = 0
    60: 01                       fallthrough
      :                          @9
    61: 82 2a 20                 a3 = u64 [t0 + 0x20]
    64: 51 04 51                 jump @18 if t2 == 0
      :                          @10
    67: 82 28 08                 a1 = u64 [t0 + 0x8]
    70: aa 84 4b                 jump @18 if t2 == a1
      :                          @11
    73: 33 0b                    a4 = 0
    75: 14 09 ab aa aa aa aa aa aa aa a2 = 0xaaaaaaaaaaaaaaab
    85: c9 48 08                 a1 = a1 - t2
    88: d6 98 0c                 a5 = a1 mulhu a2
    91: 98 cc 04                 a5 = a5 >> 0x4
    94: 33 03 18                 t1 = 0x18
    97: 28 08                    jump @13
      :                          @12
    99: 95 bb 01                 a4 = a4 + 0x1
   102: aa cb 2b                 jump @18 if a4 == a5
      :                          @13
   105: ca 3b 09                 a2 = a4 * t1
   108: c8 49 09                 a2 = a2 + t2
   111: 82 98 10                 a1 = u64 [a2 + 0x10]
   114: 51 08 f1                 jump @12 if a1 == 0
      :                          @14
   117: 82 99 08                 a2 = u64 [a2 + 0x8]
   120: 01                       fallthrough
      :                          @15
   121: 7c 95                    s0 = u8 [a2]
   123: c8 57 07                 a0 = a0 + s0
   126: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
   129: 95 99 01                 a2 = a2 + 0x1
   132: 52 08 f5                 jump @15 if a1 != 0
      :                          @16
   135: 28 dc                    jump @12
      :                          @17
   137: 33 07                    a0 = 0
   139: 82 2a 20                 a3 = u64 [t0 + 0x20]
   142: 52 04 b5                 jump @10 if t2 != 0
      :                          @18
   145: 51 0a 1b                 jump @22 if a3 == 0
      :                          @19
   148: 82 28 28                 a1 = u64 [t0 + 0x28]
   151: aa 8a 15                 jump @22 if a3 == a1
      :                          @20
   154: c9 a8 08                 a1 = a1 - a3
   157: 01                       fallthrough
      :                          @21
   158: 7c a9                    a2 = u8 [a3]
   160: c8 97 07                 a0 = a0 + a2
   163: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
   166: 95 aa 01                 a3 = a3 + 0x1
   169: 52 08 f5                 jump @21 if a1 != 0
      :                          @22
   172: 82 15 08                 s0 = u64 [sp + 0x8]
   175: 95 11 10                 sp = sp + 0x10
   178: 32 00                    ret
      :                          @23
   180: 95 11 e0                 sp = sp + 0xffffffffffffffe0
   183: 7b 10 18                 u64 [sp + 0x18] = ra
   186: 7b 15 10                 u64 [sp + 0x10] = s0
   189: 7b 16 08                 u64 [sp + 0x8] = s1
   192: 64 72                    t0 = a0
   194: 82 79 10                 a2 = u64 [a0 + 0x10]
   197: 82 74                    t2 = u64 [a0]
   199: 51 09 29                 jump @28 if a2 == 0
      :                          @24
   202: 82 2a 18                 a3 = u64 [t0 + 0x18]
   205: aa a9 7c                 jump @37 if a2 == a3
      :                          @25
   208: 33 07                    a0 = 0
   210: c9 9a 0a                 a3 = a3 - a2
   213: 84 8b ff 00              a4 = a1 & 0xff
   217: 01                       fallthrough
      :                          @26
   218: 7c 9c                    a5 = u8 [a2]
   220: d3 bc 0c                 a5 = a5 ^ a4
   223: 88 cc 01                 a5 = a5 <u 0x1
   226: c8 c7 07                 a0 = a0 + a5
   229: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
   232: 95 99 01                 a2 = a2 + 0x1
   235: 52 0a ef                 jump @26 if a3 != 0
      :                          @27
   238: 28 05                    jump @29
      :                          @28
   240: 33 07                    a0 = 0
   242: 01                       fallthrough
      :                          @29
   243: 82 2b 20                 a4 = u64 [t0 + 0x20]
   246: 51 04 5b                 jump @38 if t2 == 0
      :                          @30
   249: 82 29 08                 a2 = u64 [t0 + 0x8]
   252: aa 94 55                 jump @38 if t2 == a2
      :                          @31
   255: 33 0c                    a5 = 0
   257: c9 49 09                 a2 = a2 - t2
   260: 14 0a ab aa aa aa aa aa aa aa a3 = 0xaaaaaaaaaaaaaaab
   270: d6 a9 09                 a2 = a2 mulhu a3
   273: 98 90 04                 ra = a2 >> 0x4
   276: 33 03 18                 t1 = 0x18
   279: 84 8a ff 00              a3 = a1 & 0xff
   283: 28 08                    jump @33
      :                          @32
   285: 95 cc 01                 a5 = a5 + 0x1
   288: aa 0c 31                 jump @38 if a5 == ra
      :                          @33
   291: ca 3c 06                 s1 = a5 * t1
   294: c8 46 06                 s1 = s1 + t2
   297: 82 65 10                 s0 = u64 [s1 + 0x10]
   300: 51 05 f1                 jump @32 if s0 == 0
      :                          @34
   303: 82 66 08                 s1 = u64 [s1 + 0x8]
   306: 01                       fallthrough
      :                          @35
   307: 7c 69                    a2 = u8 [s1]
   309: d3 a9 09                 a2 = a2 ^ a3
   312: 88 99 01                 a2 = a2 <u 0x1
   315: c8 97 07                 a0 = a0 + a2
   318: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   321: 95 66 01                 s1 = s1 + 0x1
   324: 52 05 ef                 jump @35 if s0 != 0
      :                          @36
   327: 28 d6                    jump @32
      :                          @37
   329: 33 07                    a0 = 0
   331: 82 2b 20                 a4 = u64 [t0 + 0x20]
   334: 52 04 ab                 jump @30 if t2 != 0
      :                          @38
   337: 51 0b 25                 jump @42 if a4 == 0
      :                          @39
   340: 82 29 28                 a2 = u64 [t0 + 0x28]
   343: aa 9b 1f                 jump @42 if a4 == a2
      :                          @40
   346: c9 b9 09                 a2 = a2 - a4
   349: 84 88 ff 00              a1 = a1 & 0xff
   353: 01                       fallthrough
      :                          @41
   354: 7c ba                    a3 = u8 [a4]
   356: d3 8a 0a                 a3 = a3 ^ a1
   359: 88 aa 01                 a3 = a3 <u 0x1
   362: c8 a7 07                 a0 = a0 + a3
   365: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   368: 95 bb 01                 a4 = a4 + 0x1
   371: 52 09 ef                 jump @41 if a2 != 0
      :                          @42
   374: 82 10 18                 ra = u64 [sp + 0x18]
   377: 82 15 10                 s0 = u64 [sp + 0x10]
   380: 82 16 08                 s1 = u64 [sp + 0x8]
   383: 95 11 20                 sp = sp + 0x20
   386: 32 00                    ret
      :                          @43 [@dyn 1]
   388: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   391: 7b 10 28                 u64 [sp + 0x28] = ra
   394: 7b 15 20                 u64 [sp + 0x20] = s0
   397: 7b 16 18                 u64 [sp + 0x18] = s1
   400: 64 86                    s1 = a1
   402: 82 88 28                 a1 = u64 [a1 + 0x28]
   405: 82 75                    s0 = u64 [a0]
   407: 82 67 20                 a0 = u64 [s1 + 0x20]
   410: 82 8a 18                 a3 = u64 [a1 + 0x18]
   413: 33 08 58 30 01           a1 = 0x13058
   418: 33 09 01                 a2 = 0x1
   421: b4 a0 01 04              ra = 4, jump [a3]
      :                          @44 [@dyn 2]
   425: 7b 16                    u64 [sp] = s1
   427: 78 17 08                 u8 [sp + 0x8] = a0
   430: 46 11 09                 u8 [sp + 9] = 0
   433: 7b 15 10                 u64 [sp + 0x10] = s0
   436: 33 06 48                 s1 = 0x48
   439: 64 17                    a0 = sp
   441: 95 18 10                 a1 = sp + 0x10
   444: 33 09 48                 a2 = 0x48
   447: 50 10 06 07 18 03        ra = 6, jump @13954
      :                          @45 [@dyn 3]
   453: 95 55 08                 s0 = s0 + 0x8
   456: 7b 15 10                 u64 [sp + 0x10] = s0
   459: 64 17                    a0 = sp
   461: 95 18 10                 a1 = sp + 0x10
   464: 64 69                    a2 = s1
   466: 50 10 08 f4 17 03        ra = 8, jump @13954
      :                          @46 [@dyn 4]
   472: 33 07 01                 a0 = 0x1
   475: 7c 18 08                 a1 = u8 [sp + 0x8]
   478: 52 08 1a                 jump @48 if a1 != 0
      :                          @47
   481: 82 17                    a0 = u64 [sp]
   483: 82 78 28                 a1 = u64 [a0 + 0x28]
   486: 82 77 20                 a0 = u64 [a0 + 0x20]
   489: 82 8a 18                 a3 = u64 [a1 + 0x18]
   492: 33 08 99 30 01           a1 = 0x13099
   497: 33 09 01                 a2 = 0x1
   500: b4 a0 01 0a              ra = 10, jump [a3]
      :                          @48 [@dyn 5]
   504: 82 10 28                 ra = u64 [sp + 0x28]
   507: 82 15 20                 s0 = u64 [sp + 0x20]
   510: 82 16 18                 s1 = u64 [sp + 0x18]
   513: 95 11 30                 sp = sp + 0x30
   516: 32 00                    ret
      :                          @49 [@dyn 6]
   518: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   521: 7b 10 38                 u64 [sp + 0x38] = ra
   524: 7b 15 30                 u64 [sp + 0x30] = s0
   527: 7b 16 28                 u64 [sp + 0x28] = s1
   530: 64 85                    s0 = a1
   532: 82 88 28                 a1 = u64 [a1 + 0x28]
   535: 82 76                    s1 = u64 [a0]
   537: 82 57 20                 a0 = u64 [s0 + 0x20]
   540: 82 8a 18                 a3 = u64 [a1 + 0x18]
   543: 33 08 40 30 01           a1 = 0x13040
   548: 33 09                    a2 = 0
   550: b4 a0 01 0e              ra = 14, jump [a3]
      :                          @50 [@dyn 7]
   554: 7b 15 08                 u64 [sp + 0x8] = s0
   557: 78 17 10                 u8 [sp + 0x10] = a0
   560: 49 01                    u64 [sp + 0] = 0
   562: 33 05 01                 s0 = 0x1
   565: 78 15 11                 u8 [sp + 0x11] = s0
   568: 7b 16 18                 u64 [sp + 0x18] = s1
   571: 95 66 08                 s1 = s1 + 0x8
   574: 7b 16 20                 u64 [sp + 0x20] = s1
   577: 33 06 18                 s1 = 0x18
   580: 64 17                    a0 = sp
   582: 95 18 18                 a1 = sp + 0x18
   585: 33 09 18                 a2 = 0x18
   588: 50 10 10 3e 16 03        ra = 16, jump @13938
      :                          @51 [@dyn 8]
   594: 64 17                    a0 = sp
   596: 95 18 20                 a1 = sp + 0x20
   599: 64 69                    a2 = s1
   601: 50 10 12 31 16 03        ra = 18, jump @13938
      :                          @52 [@dyn 9]
   607: 82 17                    a0 = u64 [sp]
   609: 7c 18 10                 a1 = u8 [sp + 0x10]
   612: 51 07 57                 jump @60 if a0 == 0
      :                          @53
   615: 52 08 57                 jump @61 if a1 != 0
      :                          @54
   618: 7c 18 11                 a1 = u8 [sp + 0x11]
   621: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   624: 8e 77                    a0 = a0 >u 0
   626: 82 16 08                 s1 = u64 [sp + 0x8]
   629: 88 88 01                 a1 = a1 <u 0x1
   632: d4 87 07                 a0 = a0 | a1
   635: 52 07 27                 jump @58 if a0 != 0
      :                          @55
   638: 7c 67 34                 a0 = u8 [s1 + 0x34]
   641: 84 77 04                 a0 = a0 & 0x4
   644: 52 07 1e                 jump @58 if a0 != 0
      :                          @56
   647: 82 68 28                 a1 = u64 [s1 + 0x28]
   650: 82 67 20                 a0 = u64 [s1 + 0x20]
   653: 82 8a 18                 a3 = u64 [a1 + 0x18]
   656: 33 08 97 30 01           a1 = 0x13097
   661: 33 09 01                 a2 = 0x1
   664: 33 05 01                 s0 = 0x1
   667: b4 a0 01 14              ra = 20, jump [a3]
      :                          @57 [@dyn 10]
   671: 52 07 1f                 jump @61 if a0 != 0
      :                          @58
   674: 82 68 28                 a1 = u64 [s1 + 0x28]
   677: 82 67 20                 a0 = u64 [s1 + 0x20]
   680: 82 8a 18                 a3 = u64 [a1 + 0x18]
   683: 33 08 41 30 01           a1 = 0x13041
   688: 33 09 01                 a2 = 0x1
   691: b4 a0 01 16              ra = 22, jump [a3]
      :                          @59 [@dyn 11]
   695: 64 75                    s0 = a0
   697: 28 05                    jump @61
      :                          @60
   699: 8e 85                    s0 = a1 >u 0
   701: 01                       fallthrough
      :                          @61
   702: 64 57                    a0 = s0
   704: 82 10 38                 ra = u64 [sp + 0x38]
   707: 82 15 30                 s0 = u64 [sp + 0x30]
   710: 82 16 28                 s1 = u64 [sp + 0x28]
   713: 95 11 40                 sp = sp + 0x40
   716: 32 00                    ret
      :                          @62 [@dyn 12]
   718: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   722: 7b 10 80 00              u64 [sp + 0x80] = ra
   726: 64 82                    t0 = a1
   728: 80 88 34                 a1 = u32 [a1 + 0x34]
   731: 82 77                    a0 = u64 [a0]
   733: 84 89 10                 a2 = a1 & 0x10
   736: 52 09 1c                 jump @65 if a2 != 0
      :                          @63
   739: 84 88 20                 a1 = a1 & 0x20
   742: 52 08 46                 jump @68 if a1 != 0
      :                          @64
   745: 82 77                    a0 = u64 [a0]
   747: 33 08 01                 a1 = 0x1
   750: 64 29                    a2 = t0
   752: 82 10 80 00              ra = u64 [sp + 0x80]
   756: 95 11 88 00              sp = sp + 0x88
   760: 28 7d 09 03              jump @13706
      :                          @65
   764: 82 7a                    a3 = u64 [a0]
   766: 33 08 81 00              a1 = 0x81
   770: 95 17 7f                 a0 = sp + 0x7f
   773: 33 03 57                 t1 = 0x57
   776: 01                       fallthrough
      :                          @66
   777: 64 8b                    a4 = a1
   779: 98 ac 04                 a5 = a3 >> 0x4
   782: 84 aa 0f                 a3 = a3 & 0xf
   785: 88 a8 0a                 a1 = a3 <u 0xa
   788: 33 09 30                 a2 = 0x30
   791: da 83 09                 a2 = t1 if a1 == 0
   794: be a9 09                 i32 a2 = a2 + a3
   797: 78 79                    u8 [a0] = a2
   799: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   802: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   805: 64 ca                    a3 = a5
   807: 52 0c e2                 jump @66 if a5 != 0
      :                          @67
   810: 28 30                    jump @70
      :                          @68
   812: 82 7a                    a3 = u64 [a0]
   814: 33 08 81 00              a1 = 0x81
   818: 95 17 7f                 a0 = sp + 0x7f
   821: 33 03 37                 t1 = 0x37
   824: 01                       fallthrough
      :                          @69
   825: 64 8b                    a4 = a1
   827: 98 ac 04                 a5 = a3 >> 0x4
   830: 84 aa 0f                 a3 = a3 & 0xf
   833: 88 a8 0a                 a1 = a3 <u 0xa
   836: 33 09 30                 a2 = 0x30
   839: da 83 09                 a2 = t1 if a1 == 0
   842: be a9 09                 i32 a2 = a2 + a3
   845: 78 79                    u8 [a0] = a2
   847: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   850: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   853: 64 ca                    a3 = a5
   855: 52 0c e2                 jump @69 if a5 != 0
      :                          @70
   858: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   861: 56 27 80 00 2b           jump @73 if a0 >u 128
      :                          @71
   866: 9a 8c 81 00              a5 = 0x81 - a1
   870: 64 1b                    a4 = sp
   872: c8 7b 0b                 a4 = a4 + a0
   875: 33 09 9a 30 01           a2 = 0x1309a
   880: 33 08 01                 a1 = 0x1
   883: 33 0a 02                 a3 = 0x2
   886: 64 27                    a0 = t0
   888: 50 10 1a 2b 0a 03        ra = 26, jump @13716
      :                          @72 [@dyn 13]
   894: 82 10 80 00              ra = u64 [sp + 0x80]
   898: 95 11 88 00              sp = sp + 0x88
   902: 32 00                    ret
      :                          @73
   904: 00                       trap
      :                          @74 [@dyn 14]
   905: 95 11 b8                 sp = sp + 0xffffffffffffffb8
   908: 7b 10 40                 u64 [sp + 0x40] = ra
   911: 7b 15 38                 u64 [sp + 0x38] = s0
   914: 7b 16 30                 u64 [sp + 0x30] = s1
   917: 64 85                    s0 = a1
   919: 82 88 28                 a1 = u64 [a1 + 0x28]
   922: 82 76                    s1 = u64 [a0]
   924: 82 57 20                 a0 = u64 [s0 + 0x20]
   927: 82 8a 18                 a3 = u64 [a1 + 0x18]
   930: 33 08 40 30 01           a1 = 0x13040
   935: 33 09                    a2 = 0
   937: b4 a0 01 1e              ra = 30, jump [a3]
      :                          @75 [@dyn 15]
   941: 7b 15 08                 u64 [sp + 0x8] = s0
   944: 78 17 10                 u8 [sp + 0x10] = a0
   947: 49 01                    u64 [sp + 0] = 0
   949: 33 05 01                 s0 = 0x1
   952: 78 15 11                 u8 [sp + 0x11] = s0
   955: 7b 16 18                 u64 [sp + 0x18] = s1
   958: 95 67 08                 a0 = s1 + 0x8
   961: 7b 17 20                 u64 [sp + 0x20] = a0
   964: 95 66 10                 s1 = s1 + 0x10
   967: 7b 16 28                 u64 [sp + 0x28] = s1
   970: 33 06 18                 s1 = 0x18
   973: 64 17                    a0 = sp
   975: 95 18 18                 a1 = sp + 0x18
   978: 33 09 18                 a2 = 0x18
   981: 50 10 20 b5 14 03        ra = 32, jump @13938
      :                          @76 [@dyn 16]
   987: 64 17                    a0 = sp
   989: 95 18 20                 a1 = sp + 0x20
   992: 64 69                    a2 = s1
   994: 50 10 22 a8 14 03        ra = 34, jump @13938
      :                          @77 [@dyn 17]
  1000: 64 17                    a0 = sp
  1002: 95 18 28                 a1 = sp + 0x28
  1005: 64 69                    a2 = s1
  1007: 50 10 24 9b 14 03        ra = 36, jump @13938
      :                          @78 [@dyn 18]
  1013: 82 17                    a0 = u64 [sp]
  1015: 7c 18 10                 a1 = u8 [sp + 0x10]
  1018: 51 07 57                 jump @86 if a0 == 0
      :                          @79
  1021: 52 08 57                 jump @87 if a1 != 0
      :                          @80
  1024: 7c 18 11                 a1 = u8 [sp + 0x11]
  1027: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1030: 8e 77                    a0 = a0 >u 0
  1032: 82 16 08                 s1 = u64 [sp + 0x8]
  1035: 88 88 01                 a1 = a1 <u 0x1
  1038: d4 87 07                 a0 = a0 | a1
  1041: 52 07 27                 jump @84 if a0 != 0
      :                          @81
  1044: 7c 67 34                 a0 = u8 [s1 + 0x34]
  1047: 84 77 04                 a0 = a0 & 0x4
  1050: 52 07 1e                 jump @84 if a0 != 0
      :                          @82
  1053: 82 68 28                 a1 = u64 [s1 + 0x28]
  1056: 82 67 20                 a0 = u64 [s1 + 0x20]
  1059: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1062: 33 08 97 30 01           a1 = 0x13097
  1067: 33 09 01                 a2 = 0x1
  1070: 33 05 01                 s0 = 0x1
  1073: b4 a0 01 26              ra = 38, jump [a3]
      :                          @83 [@dyn 19]
  1077: 52 07 1f                 jump @87 if a0 != 0
      :                          @84
  1080: 82 68 28                 a1 = u64 [s1 + 0x28]
  1083: 82 67 20                 a0 = u64 [s1 + 0x20]
  1086: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1089: 33 08 41 30 01           a1 = 0x13041
  1094: 33 09 01                 a2 = 0x1
  1097: b4 a0 01 28              ra = 40, jump [a3]
      :                          @85 [@dyn 20]
  1101: 64 75                    s0 = a0
  1103: 28 05                    jump @87
      :                          @86
  1105: 8e 85                    s0 = a1 >u 0
  1107: 01                       fallthrough
      :                          @87
  1108: 64 57                    a0 = s0
  1110: 82 10 40                 ra = u64 [sp + 0x40]
  1113: 82 15 38                 s0 = u64 [sp + 0x38]
  1116: 82 16 30                 s1 = u64 [sp + 0x30]
  1119: 95 11 48                 sp = sp + 0x48
  1122: 32 00                    ret
      :                          @88 [@dyn 21]
  1124: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  1127: 7b 10 40                 u64 [sp + 0x40] = ra
  1130: 7b 15 38                 u64 [sp + 0x38] = s0
  1133: 7b 16 30                 u64 [sp + 0x30] = s1
  1136: 64 85                    s0 = a1
  1138: 82 88 28                 a1 = u64 [a1 + 0x28]
  1141: 82 76                    s1 = u64 [a0]
  1143: 82 57 20                 a0 = u64 [s0 + 0x20]
  1146: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1149: 33 08 40 30 01           a1 = 0x13040
  1154: 33 09                    a2 = 0
  1156: b4 a0 01 2c              ra = 44, jump [a3]
      :                          @89 [@dyn 22]
  1160: 7b 15 08                 u64 [sp + 0x8] = s0
  1163: 78 17 10                 u8 [sp + 0x10] = a0
  1166: 49 01                    u64 [sp + 0] = 0
  1168: 33 05 01                 s0 = 0x1
  1171: 78 15 11                 u8 [sp + 0x11] = s0
  1174: 7b 16 18                 u64 [sp + 0x18] = s1
  1177: 95 67 08                 a0 = s1 + 0x8
  1180: 7b 17 20                 u64 [sp + 0x20] = a0
  1183: 95 66 10                 s1 = s1 + 0x10
  1186: 7b 16 28                 u64 [sp + 0x28] = s1
  1189: 33 06 48                 s1 = 0x48
  1192: 64 17                    a0 = sp
  1194: 95 18 18                 a1 = sp + 0x18
  1197: 33 09 48                 a2 = 0x48
  1200: 50 10 2e da 13 03        ra = 46, jump @13938
      :                          @90 [@dyn 23]
  1206: 64 17                    a0 = sp
  1208: 95 18 20                 a1 = sp + 0x20
  1211: 64 69                    a2 = s1
  1213: 50 10 30 cd 13 03        ra = 48, jump @13938
      :                          @91 [@dyn 24]
  1219: 64 17                    a0 = sp
  1221: 95 18 28                 a1 = sp + 0x28
  1224: 64 69                    a2 = s1
  1226: 50 10 32 c0 13 03        ra = 50, jump @13938
      :                          @92 [@dyn 25]
  1232: 82 17                    a0 = u64 [sp]
  1234: 7c 18 10                 a1 = u8 [sp + 0x10]
  1237: 51 07 57                 jump @100 if a0 == 0
      :                          @93
  1240: 52 08 57                 jump @101 if a1 != 0
      :                          @94
  1243: 7c 18 11                 a1 = u8 [sp + 0x11]
  1246: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1249: 8e 77                    a0 = a0 >u 0
  1251: 82 16 08                 s1 = u64 [sp + 0x8]
  1254: 88 88 01                 a1 = a1 <u 0x1
  1257: d4 87 07                 a0 = a0 | a1
  1260: 52 07 27                 jump @98 if a0 != 0
      :                          @95
  1263: 7c 67 34                 a0 = u8 [s1 + 0x34]
  1266: 84 77 04                 a0 = a0 & 0x4
  1269: 52 07 1e                 jump @98 if a0 != 0
      :                          @96
  1272: 82 68 28                 a1 = u64 [s1 + 0x28]
  1275: 82 67 20                 a0 = u64 [s1 + 0x20]
  1278: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1281: 33 08 97 30 01           a1 = 0x13097
  1286: 33 09 01                 a2 = 0x1
  1289: 33 05 01                 s0 = 0x1
  1292: b4 a0 01 34              ra = 52, jump [a3]
      :                          @97 [@dyn 26]
  1296: 52 07 1f                 jump @101 if a0 != 0
      :                          @98
  1299: 82 68 28                 a1 = u64 [s1 + 0x28]
  1302: 82 67 20                 a0 = u64 [s1 + 0x20]
  1305: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1308: 33 08 41 30 01           a1 = 0x13041
  1313: 33 09 01                 a2 = 0x1
  1316: b4 a0 01 36              ra = 54, jump [a3]
      :                          @99 [@dyn 27]
  1320: 64 75                    s0 = a0
  1322: 28 05                    jump @101
      :                          @100
  1324: 8e 85                    s0 = a1 >u 0
  1326: 01                       fallthrough
      :                          @101
  1327: 64 57                    a0 = s0
  1329: 82 10 40                 ra = u64 [sp + 0x40]
  1332: 82 15 38                 s0 = u64 [sp + 0x38]
  1335: 82 16 30                 s1 = u64 [sp + 0x30]
  1338: 95 11 48                 sp = sp + 0x48
  1341: 32 00                    ret
      :                          @102 [@dyn 28]
  1343: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  1347: 7b 10 80 00              u64 [sp + 0x80] = ra
  1351: 64 82                    t0 = a1
  1353: 80 88 34                 a1 = u32 [a1 + 0x34]
  1356: 82 77                    a0 = u64 [a0]
  1358: 84 89 10                 a2 = a1 & 0x10
  1361: 52 09 1c                 jump @105 if a2 != 0
      :                          @103
  1364: 84 88 20                 a1 = a1 & 0x20
  1367: 52 08 46                 jump @108 if a1 != 0
      :                          @104
  1370: 80 77                    a0 = u32 [a0]
  1372: 33 08 01                 a1 = 0x1
  1375: 64 29                    a2 = t0
  1377: 82 10 80 00              ra = u64 [sp + 0x80]
  1381: 95 11 88 00              sp = sp + 0x88
  1385: 28 0c 07 03              jump @13706
      :                          @105
  1389: 81 7a                    a3 = i32 [a0]
  1391: 33 08 81 00              a1 = 0x81
  1395: 95 17 7f                 a0 = sp + 0x7f
  1398: 33 03 57                 t1 = 0x57
  1401: 01                       fallthrough
      :                          @106
  1402: 64 8b                    a4 = a1
  1404: 8b ac 04                 i32 a5 = a3 >> 0x4
  1407: 84 aa 0f                 a3 = a3 & 0xf
  1410: 88 a8 0a                 a1 = a3 <u 0xa
  1413: 33 09 30                 a2 = 0x30
  1416: da 83 09                 a2 = t1 if a1 == 0
  1419: be a9 09                 i32 a2 = a2 + a3
  1422: 78 79                    u8 [a0] = a2
  1424: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1427: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  1430: 64 ca                    a3 = a5
  1432: 52 0c e2                 jump @106 if a5 != 0
      :                          @107
  1435: 28 30                    jump @110
      :                          @108
  1437: 81 7a                    a3 = i32 [a0]
  1439: 33 08 81 00              a1 = 0x81
  1443: 95 17 7f                 a0 = sp + 0x7f
  1446: 33 03 37                 t1 = 0x37
  1449: 01                       fallthrough
      :                          @109
  1450: 64 8b                    a4 = a1
  1452: 8b ac 04                 i32 a5 = a3 >> 0x4
  1455: 84 aa 0f                 a3 = a3 & 0xf
  1458: 88 a8 0a                 a1 = a3 <u 0xa
  1461: 33 09 30                 a2 = 0x30
  1464: da 83 09                 a2 = t1 if a1 == 0
  1467: be a9 09                 i32 a2 = a2 + a3
  1470: 78 79                    u8 [a0] = a2
  1472: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1475: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  1478: 64 ca                    a3 = a5
  1480: 52 0c e2                 jump @109 if a5 != 0
      :                          @110
  1483: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  1486: 56 27 80 00 2b           jump @113 if a0 >u 128
      :                          @111
  1491: 9a 8c 81 00              a5 = 0x81 - a1
  1495: 64 1b                    a4 = sp
  1497: c8 7b 0b                 a4 = a4 + a0
  1500: 33 09 9a 30 01           a2 = 0x1309a
  1505: 33 08 01                 a1 = 0x1
  1508: 33 0a 02                 a3 = 0x2
  1511: 64 27                    a0 = t0
  1513: 50 10 3a ba 07 03        ra = 58, jump @13716
      :                          @112 [@dyn 29]
  1519: 82 10 80 00              ra = u64 [sp + 0x80]
  1523: 95 11 88 00              sp = sp + 0x88
  1527: 32 00                    ret
      :                          @113
  1529: 00                       trap
      :                          @114 [@dyn 30]
  1530: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  1533: 7b 10 38                 u64 [sp + 0x38] = ra
  1536: 7b 15 30                 u64 [sp + 0x30] = s0
  1539: 7b 16 28                 u64 [sp + 0x28] = s1
  1542: 64 85                    s0 = a1
  1544: 82 88 28                 a1 = u64 [a1 + 0x28]
  1547: 82 76                    s1 = u64 [a0]
  1549: 82 57 20                 a0 = u64 [s0 + 0x20]
  1552: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1555: 33 08 40 30 01           a1 = 0x13040
  1560: 33 09                    a2 = 0
  1562: b4 a0 01 3e              ra = 62, jump [a3]
      :                          @115 [@dyn 31]
  1566: 7b 15 08                 u64 [sp + 0x8] = s0
  1569: 78 17 10                 u8 [sp + 0x10] = a0
  1572: 49 01                    u64 [sp + 0] = 0
  1574: 33 05 01                 s0 = 0x1
  1577: 78 15 11                 u8 [sp + 0x11] = s0
  1580: 7b 16 18                 u64 [sp + 0x18] = s1
  1583: 95 66 08                 s1 = s1 + 0x8
  1586: 7b 16 20                 u64 [sp + 0x20] = s1
  1589: 33 09 18                 a2 = 0x18
  1592: 64 17                    a0 = sp
  1594: 95 18 18                 a1 = sp + 0x18
  1597: 50 10 40 4d 12 03        ra = 64, jump @13938
      :                          @116 [@dyn 32]
  1603: 33 09 38                 a2 = 0x38
  1606: 64 17                    a0 = sp
  1608: 95 18 20                 a1 = sp + 0x20
  1611: 50 10 42 3f 12 03        ra = 66, jump @13938
      :                          @117 [@dyn 33]
  1617: 82 17                    a0 = u64 [sp]
  1619: 7c 18 10                 a1 = u8 [sp + 0x10]
  1622: 51 07 57                 jump @125 if a0 == 0
      :                          @118
  1625: 52 08 57                 jump @126 if a1 != 0
      :                          @119
  1628: 7c 18 11                 a1 = u8 [sp + 0x11]
  1631: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1634: 8e 77                    a0 = a0 >u 0
  1636: 82 16 08                 s1 = u64 [sp + 0x8]
  1639: 88 88 01                 a1 = a1 <u 0x1
  1642: d4 87 07                 a0 = a0 | a1
  1645: 52 07 27                 jump @123 if a0 != 0
      :                          @120
  1648: 7c 67 34                 a0 = u8 [s1 + 0x34]
  1651: 84 77 04                 a0 = a0 & 0x4
  1654: 52 07 1e                 jump @123 if a0 != 0
      :                          @121
  1657: 82 68 28                 a1 = u64 [s1 + 0x28]
  1660: 82 67 20                 a0 = u64 [s1 + 0x20]
  1663: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1666: 33 08 97 30 01           a1 = 0x13097
  1671: 33 09 01                 a2 = 0x1
  1674: 33 05 01                 s0 = 0x1
  1677: b4 a0 01 44              ra = 68, jump [a3]
      :                          @122 [@dyn 34]
  1681: 52 07 1f                 jump @126 if a0 != 0
      :                          @123
  1684: 82 68 28                 a1 = u64 [s1 + 0x28]
  1687: 82 67 20                 a0 = u64 [s1 + 0x20]
  1690: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1693: 33 08 41 30 01           a1 = 0x13041
  1698: 33 09 01                 a2 = 0x1
  1701: b4 a0 01 46              ra = 70, jump [a3]
      :                          @124 [@dyn 35]
  1705: 64 75                    s0 = a0
  1707: 28 05                    jump @126
      :                          @125
  1709: 8e 85                    s0 = a1 >u 0
  1711: 01                       fallthrough
      :                          @126
  1712: 64 57                    a0 = s0
  1714: 82 10 38                 ra = u64 [sp + 0x38]
  1717: 82 15 30                 s0 = u64 [sp + 0x30]
  1720: 82 16 28                 s1 = u64 [sp + 0x28]
  1723: 95 11 40                 sp = sp + 0x40
  1726: 32 00                    ret
      :                          @127 [@dyn 36]
  1728: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  1732: 7b 10 80 00              u64 [sp + 0x80] = ra
  1736: 64 82                    t0 = a1
  1738: 80 88 34                 a1 = u32 [a1 + 0x34]
  1741: 82 77                    a0 = u64 [a0]
  1743: 84 89 10                 a2 = a1 & 0x10
  1746: 52 09 24                 jump @130 if a2 != 0
      :                          @128
  1749: 84 88 20                 a1 = a1 & 0x20
  1752: 52 08 4e                 jump @133 if a1 != 0
      :                          @129
  1755: 82 78                    a1 = u64 [a0]
  1757: 9a 87                    a0 = -a1
  1759: e3 78 07                 a0 = maxs(a1, a0)
  1762: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
  1765: 98 88 3f                 a1 = a1 >> 0x3f
  1768: 64 29                    a2 = t0
  1770: 82 10 80 00              ra = u64 [sp + 0x80]
  1774: 95 11 88 00              sp = sp + 0x88
  1778: 28 83 05 03              jump @13706
      :                          @130
  1782: 82 7a                    a3 = u64 [a0]
  1784: 33 08 81 00              a1 = 0x81
  1788: 95 17 7f                 a0 = sp + 0x7f
  1791: 33 03 57                 t1 = 0x57
  1794: 01                       fallthrough
      :                          @131
  1795: 64 8b                    a4 = a1
  1797: 98 ac 04                 a5 = a3 >> 0x4
  1800: 84 aa 0f                 a3 = a3 & 0xf
  1803: 88 a8 0a                 a1 = a3 <u 0xa
  1806: 33 09 30                 a2 = 0x30
  1809: da 83 09                 a2 = t1 if a1 == 0
  1812: be a9 09                 i32 a2 = a2 + a3
  1815: 78 79                    u8 [a0] = a2
  1817: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1820: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  1823: 64 ca                    a3 = a5
  1825: 52 0c e2                 jump @131 if a5 != 0
      :                          @132
  1828: 28 30                    jump @135
      :                          @133
  1830: 82 7a                    a3 = u64 [a0]
  1832: 33 08 81 00              a1 = 0x81
  1836: 95 17 7f                 a0 = sp + 0x7f
  1839: 33 03 37                 t1 = 0x37
  1842: 01                       fallthrough
      :                          @134
  1843: 64 8b                    a4 = a1
  1845: 98 ac 04                 a5 = a3 >> 0x4
  1848: 84 aa 0f                 a3 = a3 & 0xf
  1851: 88 a8 0a                 a1 = a3 <u 0xa
  1854: 33 09 30                 a2 = 0x30
  1857: da 83 09                 a2 = t1 if a1 == 0
  1860: be a9 09                 i32 a2 = a2 + a3
  1863: 78 79                    u8 [a0] = a2
  1865: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1868: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  1871: 64 ca                    a3 = a5
  1873: 52 0c e2                 jump @134 if a5 != 0
      :                          @135
  1876: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  1879: 56 27 80 00 2b           jump @138 if a0 >u 128
      :                          @136
  1884: 9a 8c 81 00              a5 = 0x81 - a1
  1888: 64 1b                    a4 = sp
  1890: c8 7b 0b                 a4 = a4 + a0
  1893: 33 09 9a 30 01           a2 = 0x1309a
  1898: 33 08 01                 a1 = 0x1
  1901: 33 0a 02                 a3 = 0x2
  1904: 64 27                    a0 = t0
  1906: 50 10 4a 31 06 03        ra = 74, jump @13716
      :                          @137 [@dyn 37]
  1912: 82 10 80 00              ra = u64 [sp + 0x80]
  1916: 95 11 88 00              sp = sp + 0x88
  1920: 32 00                    ret
      :                          @138
  1922: 00                       trap
      :                          @139 [@dyn 38]
  1923: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  1926: 7b 10 38                 u64 [sp + 0x38] = ra
  1929: 7b 15 30                 u64 [sp + 0x30] = s0
  1932: 7b 16 28                 u64 [sp + 0x28] = s1
  1935: 64 85                    s0 = a1
  1937: 82 88 28                 a1 = u64 [a1 + 0x28]
  1940: 82 76                    s1 = u64 [a0]
  1942: 82 57 20                 a0 = u64 [s0 + 0x20]
  1945: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1948: 33 08 40 30 01           a1 = 0x13040
  1953: 33 09                    a2 = 0
  1955: b4 a0 01 4e              ra = 78, jump [a3]
      :                          @140 [@dyn 39]
  1959: 7b 15 08                 u64 [sp + 0x8] = s0
  1962: 78 17 10                 u8 [sp + 0x10] = a0
  1965: 49 01                    u64 [sp + 0] = 0
  1967: 33 05 01                 s0 = 0x1
  1970: 78 15 11                 u8 [sp + 0x11] = s0
  1973: 7b 16 18                 u64 [sp + 0x18] = s1
  1976: 95 66 10                 s1 = s1 + 0x10
  1979: 7b 16 20                 u64 [sp + 0x20] = s1
  1982: 33 06 60                 s1 = 0x60
  1985: 64 17                    a0 = sp
  1987: 95 18 18                 a1 = sp + 0x18
  1990: 33 09 60                 a2 = 0x60
  1993: 50 10 50 c1 10 03        ra = 80, jump @13938
      :                          @141 [@dyn 40]
  1999: 64 17                    a0 = sp
  2001: 95 18 20                 a1 = sp + 0x20
  2004: 64 69                    a2 = s1
  2006: 50 10 52 b4 10 03        ra = 82, jump @13938
      :                          @142 [@dyn 41]
  2012: 82 17                    a0 = u64 [sp]
  2014: 7c 18 10                 a1 = u8 [sp + 0x10]
  2017: 51 07 57                 jump @150 if a0 == 0
      :                          @143
  2020: 52 08 57                 jump @151 if a1 != 0
      :                          @144
  2023: 7c 18 11                 a1 = u8 [sp + 0x11]
  2026: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2029: 8e 77                    a0 = a0 >u 0
  2031: 82 16 08                 s1 = u64 [sp + 0x8]
  2034: 88 88 01                 a1 = a1 <u 0x1
  2037: d4 87 07                 a0 = a0 | a1
  2040: 52 07 27                 jump @148 if a0 != 0
      :                          @145
  2043: 7c 67 34                 a0 = u8 [s1 + 0x34]
  2046: 84 77 04                 a0 = a0 & 0x4
  2049: 52 07 1e                 jump @148 if a0 != 0
      :                          @146
  2052: 82 68 28                 a1 = u64 [s1 + 0x28]
  2055: 82 67 20                 a0 = u64 [s1 + 0x20]
  2058: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2061: 33 08 97 30 01           a1 = 0x13097
  2066: 33 09 01                 a2 = 0x1
  2069: 33 05 01                 s0 = 0x1
  2072: b4 a0 01 54              ra = 84, jump [a3]
      :                          @147 [@dyn 42]
  2076: 52 07 1f                 jump @151 if a0 != 0
      :                          @148
  2079: 82 68 28                 a1 = u64 [s1 + 0x28]
  2082: 82 67 20                 a0 = u64 [s1 + 0x20]
  2085: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2088: 33 08 41 30 01           a1 = 0x13041
  2093: 33 09 01                 a2 = 0x1
  2096: b4 a0 01 56              ra = 86, jump [a3]
      :                          @149 [@dyn 43]
  2100: 64 75                    s0 = a0
  2102: 28 05                    jump @151
      :                          @150
  2104: 8e 85                    s0 = a1 >u 0
  2106: 01                       fallthrough
      :                          @151
  2107: 64 57                    a0 = s0
  2109: 82 10 38                 ra = u64 [sp + 0x38]
  2112: 82 15 30                 s0 = u64 [sp + 0x30]
  2115: 82 16 28                 s1 = u64 [sp + 0x28]
  2118: 95 11 40                 sp = sp + 0x40
  2121: 32 00                    ret
      :                          @152 [@dyn 44]
  2123: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  2126: 7b 10 38                 u64 [sp + 0x38] = ra
  2129: 7b 15 30                 u64 [sp + 0x30] = s0
  2132: 7b 16 28                 u64 [sp + 0x28] = s1
  2135: 82 77                    a0 = u64 [a0]
  2137: 64 86                    s1 = a1
  2139: 82 88 28                 a1 = u64 [a1 + 0x28]
  2142: 82 75 08                 s0 = u64 [a0 + 0x8]
  2145: 82 77 10                 a0 = u64 [a0 + 0x10]
  2148: 7b 17 08                 u64 [sp + 0x8] = a0
  2151: 82 67 20                 a0 = u64 [s1 + 0x20]
  2154: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2157: 33 08 58 30 01           a1 = 0x13058
  2162: 33 09 01                 a2 = 0x1
  2165: b4 a0 01 5a              ra = 90, jump [a3]
      :                          @153 [@dyn 45]
  2169: 7b 16 10                 u64 [sp + 0x10] = s1
  2172: 82 16 08                 s1 = u64 [sp + 0x8]
  2175: 78 17 18                 u8 [sp + 0x18] = a0
  2178: 46 11 19                 u8 [sp + 25] = 0
  2181: 51 06 30                 jump @158 if s1 == 0
      :                          @154
  2184: 97 66 03                 s1 = s1 << 0x3
  2187: 33 07 18                 a0 = 0x18
  2190: 7b 17                    u64 [sp] = a0
  2192: 01                       fallthrough
      :                          @155
  2193: 95 57 08                 a0 = s0 + 0x8
  2196: 7b 17 08                 u64 [sp + 0x8] = a0
  2199: 7b 15 20                 u64 [sp + 0x20] = s0
  2202: 95 17 10                 a0 = sp + 0x10
  2205: 95 18 20                 a1 = sp + 0x20
  2208: 82 19                    a2 = u64 [sp]
  2210: 50 10 5c 24 11 03        ra = 92, jump @13954
      :                          @156 [@dyn 46]
  2216: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
  2219: 82 15 08                 s0 = u64 [sp + 0x8]
  2222: 52 06 e3                 jump @155 if s1 != 0
      :                          @157
  2225: 7c 17 18                 a0 = u8 [sp + 0x18]
  2228: 01                       fallthrough
      :                          @158
  2229: 33 08 01                 a1 = 0x1
  2232: 52 07 1e                 jump @161 if a0 != 0
      :                          @159
  2235: 82 17 10                 a0 = u64 [sp + 0x10]
  2238: 82 78 28                 a1 = u64 [a0 + 0x28]
  2241: 82 77 20                 a0 = u64 [a0 + 0x20]
  2244: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2247: 33 08 99 30 01           a1 = 0x13099
  2252: 33 09 01                 a2 = 0x1
  2255: b4 a0 01 5e              ra = 94, jump [a3]
      :                          @160 [@dyn 47]
  2259: 64 78                    a1 = a0
  2261: 01                       fallthrough
      :                          @161
  2262: 64 87                    a0 = a1
  2264: 82 10 38                 ra = u64 [sp + 0x38]
  2267: 82 15 30                 s0 = u64 [sp + 0x30]
  2270: 82 16 28                 s1 = u64 [sp + 0x28]
  2273: 95 11 40                 sp = sp + 0x40
  2276: 32 00                    ret
      :                          @162 [@dyn 48]
  2278: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  2281: 7b 10 38                 u64 [sp + 0x38] = ra
  2284: 7b 15 30                 u64 [sp + 0x30] = s0
  2287: 7b 16 28                 u64 [sp + 0x28] = s1
  2290: 64 85                    s0 = a1
  2292: 82 88 28                 a1 = u64 [a1 + 0x28]
  2295: 82 76                    s1 = u64 [a0]
  2297: 82 57 20                 a0 = u64 [s0 + 0x20]
  2300: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2303: 33 08 40 30 01           a1 = 0x13040
  2308: 33 09                    a2 = 0
  2310: b4 a0 01 62              ra = 98, jump [a3]
      :                          @163 [@dyn 49]
  2314: 7b 15 08                 u64 [sp + 0x8] = s0
  2317: 78 17 10                 u8 [sp + 0x10] = a0
  2320: 49 01                    u64 [sp + 0] = 0
  2322: 33 05 01                 s0 = 0x1
  2325: 78 15 11                 u8 [sp + 0x11] = s0
  2328: 7b 16 18                 u64 [sp + 0x18] = s1
  2331: 95 66 08                 s1 = s1 + 0x8
  2334: 7b 16 20                 u64 [sp + 0x20] = s1
  2337: 33 06 48                 s1 = 0x48
  2340: 64 17                    a0 = sp
  2342: 95 18 18                 a1 = sp + 0x18
  2345: 33 09 48                 a2 = 0x48
  2348: 50 10 64 5e 0f 03        ra = 100, jump @13938
      :                          @164 [@dyn 50]
  2354: 64 17                    a0 = sp
  2356: 95 18 20                 a1 = sp + 0x20
  2359: 64 69                    a2 = s1
  2361: 50 10 66 51 0f 03        ra = 102, jump @13938
      :                          @165 [@dyn 51]
  2367: 82 17                    a0 = u64 [sp]
  2369: 7c 18 10                 a1 = u8 [sp + 0x10]
  2372: 51 07 57                 jump @173 if a0 == 0
      :                          @166
  2375: 52 08 57                 jump @174 if a1 != 0
      :                          @167
  2378: 7c 18 11                 a1 = u8 [sp + 0x11]
  2381: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2384: 8e 77                    a0 = a0 >u 0
  2386: 82 16 08                 s1 = u64 [sp + 0x8]
  2389: 88 88 01                 a1 = a1 <u 0x1
  2392: d4 87 07                 a0 = a0 | a1
  2395: 52 07 27                 jump @171 if a0 != 0
      :                          @168
  2398: 7c 67 34                 a0 = u8 [s1 + 0x34]
  2401: 84 77 04                 a0 = a0 & 0x4
  2404: 52 07 1e                 jump @171 if a0 != 0
      :                          @169
  2407: 82 68 28                 a1 = u64 [s1 + 0x28]
  2410: 82 67 20                 a0 = u64 [s1 + 0x20]
  2413: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2416: 33 08 97 30 01           a1 = 0x13097
  2421: 33 09 01                 a2 = 0x1
  2424: 33 05 01                 s0 = 0x1
  2427: b4 a0 01 68              ra = 104, jump [a3]
      :                          @170 [@dyn 52]
  2431: 52 07 1f                 jump @174 if a0 != 0
      :                          @171
  2434: 82 68 28                 a1 = u64 [s1 + 0x28]
  2437: 82 67 20                 a0 = u64 [s1 + 0x20]
  2440: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2443: 33 08 41 30 01           a1 = 0x13041
  2448: 33 09 01                 a2 = 0x1
  2451: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @172 [@dyn 53]
  2455: 64 75                    s0 = a0
  2457: 28 05                    jump @174
      :                          @173
  2459: 8e 85                    s0 = a1 >u 0
  2461: 01                       fallthrough
      :                          @174
  2462: 64 57                    a0 = s0
  2464: 82 10 38                 ra = u64 [sp + 0x38]
  2467: 82 15 30                 s0 = u64 [sp + 0x30]
  2470: 82 16 28                 s1 = u64 [sp + 0x28]
  2473: 95 11 40                 sp = sp + 0x40
  2476: 32 00                    ret
      :                          @175 [@dyn 54]
  2478: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  2481: 7b 10 38                 u64 [sp + 0x38] = ra
  2484: 7b 15 30                 u64 [sp + 0x30] = s0
  2487: 7b 16 28                 u64 [sp + 0x28] = s1
  2490: 82 77                    a0 = u64 [a0]
  2492: 64 86                    s1 = a1
  2494: 82 88 28                 a1 = u64 [a1 + 0x28]
  2497: 82 75 08                 s0 = u64 [a0 + 0x8]
  2500: 82 77 10                 a0 = u64 [a0 + 0x10]
  2503: 7b 17 08                 u64 [sp + 0x8] = a0
  2506: 82 67 20                 a0 = u64 [s1 + 0x20]
  2509: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2512: 33 08 58 30 01           a1 = 0x13058
  2517: 33 09 01                 a2 = 0x1
  2520: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @176 [@dyn 55]
  2524: 7b 16 10                 u64 [sp + 0x10] = s1
  2527: 82 16 08                 s1 = u64 [sp + 0x8]
  2530: 78 17 18                 u8 [sp + 0x18] = a0
  2533: 46 11 19                 u8 [sp + 25] = 0
  2536: 51 06 30                 jump @181 if s1 == 0
      :                          @177
  2539: 97 66 03                 s1 = s1 << 0x3
  2542: 33 07 48                 a0 = 0x48
  2545: 7b 17                    u64 [sp] = a0
  2547: 01                       fallthrough
      :                          @178
  2548: 95 57 08                 a0 = s0 + 0x8
  2551: 7b 17 08                 u64 [sp + 0x8] = a0
  2554: 7b 15 20                 u64 [sp + 0x20] = s0
  2557: 95 17 10                 a0 = sp + 0x10
  2560: 95 18 20                 a1 = sp + 0x20
  2563: 82 19                    a2 = u64 [sp]
  2565: 50 10 70 c1 0f 03        ra = 112, jump @13954
      :                          @179 [@dyn 56]
  2571: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
  2574: 82 15 08                 s0 = u64 [sp + 0x8]
  2577: 52 06 e3                 jump @178 if s1 != 0
      :                          @180
  2580: 7c 17 18                 a0 = u8 [sp + 0x18]
  2583: 01                       fallthrough
      :                          @181
  2584: 33 08 01                 a1 = 0x1
  2587: 52 07 1e                 jump @184 if a0 != 0
      :                          @182
  2590: 82 17 10                 a0 = u64 [sp + 0x10]
  2593: 82 78 28                 a1 = u64 [a0 + 0x28]
  2596: 82 77 20                 a0 = u64 [a0 + 0x20]
  2599: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2602: 33 08 99 30 01           a1 = 0x13099
  2607: 33 09 01                 a2 = 0x1
  2610: b4 a0 01 72              ra = 114, jump [a3]
      :                          @183 [@dyn 57]
  2614: 64 78                    a1 = a0
  2616: 01                       fallthrough
      :                          @184
  2617: 64 87                    a0 = a1
  2619: 82 10 38                 ra = u64 [sp + 0x38]
  2622: 82 15 30                 s0 = u64 [sp + 0x30]
  2625: 82 16 28                 s1 = u64 [sp + 0x28]
  2628: 95 11 40                 sp = sp + 0x40
  2631: 32 00                    ret
      :                          @185 [@dyn 58]
  2633: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  2637: 7b 10 80 00              u64 [sp + 0x80] = ra
  2641: 64 82                    t0 = a1
  2643: 80 88 34                 a1 = u32 [a1 + 0x34]
  2646: 84 89 10                 a2 = a1 & 0x10
  2649: 52 09 1c                 jump @188 if a2 != 0
      :                          @186
  2652: 84 88 20                 a1 = a1 & 0x20
  2655: 52 08 46                 jump @191 if a1 != 0
      :                          @187
  2658: 80 77                    a0 = u32 [a0]
  2660: 33 08 01                 a1 = 0x1
  2663: 64 29                    a2 = t0
  2665: 82 10 80 00              ra = u64 [sp + 0x80]
  2669: 95 11 88 00              sp = sp + 0x88
  2673: 28 04 02 03              jump @13706
      :                          @188
  2677: 81 7a                    a3 = i32 [a0]
  2679: 33 08 81 00              a1 = 0x81
  2683: 95 17 7f                 a0 = sp + 0x7f
  2686: 33 03 57                 t1 = 0x57
  2689: 01                       fallthrough
      :                          @189
  2690: 64 8b                    a4 = a1
  2692: 8b ac 04                 i32 a5 = a3 >> 0x4
  2695: 84 aa 0f                 a3 = a3 & 0xf
  2698: 88 a8 0a                 a1 = a3 <u 0xa
  2701: 33 09 30                 a2 = 0x30
  2704: da 83 09                 a2 = t1 if a1 == 0
  2707: be a9 09                 i32 a2 = a2 + a3
  2710: 78 79                    u8 [a0] = a2
  2712: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2715: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  2718: 64 ca                    a3 = a5
  2720: 52 0c e2                 jump @189 if a5 != 0
      :                          @190
  2723: 28 30                    jump @193
      :                          @191
  2725: 81 7a                    a3 = i32 [a0]
  2727: 33 08 81 00              a1 = 0x81
  2731: 95 17 7f                 a0 = sp + 0x7f
  2734: 33 03 37                 t1 = 0x37
  2737: 01                       fallthrough
      :                          @192
  2738: 64 8b                    a4 = a1
  2740: 8b ac 04                 i32 a5 = a3 >> 0x4
  2743: 84 aa 0f                 a3 = a3 & 0xf
  2746: 88 a8 0a                 a1 = a3 <u 0xa
  2749: 33 09 30                 a2 = 0x30
  2752: da 83 09                 a2 = t1 if a1 == 0
  2755: be a9 09                 i32 a2 = a2 + a3
  2758: 78 79                    u8 [a0] = a2
  2760: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2763: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  2766: 64 ca                    a3 = a5
  2768: 52 0c e2                 jump @192 if a5 != 0
      :                          @193
  2771: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  2774: 56 27 80 00 2b           jump @196 if a0 >u 128
      :                          @194
  2779: 9a 8c 81 00              a5 = 0x81 - a1
  2783: 64 1b                    a4 = sp
  2785: c8 7b 0b                 a4 = a4 + a0
  2788: 33 09 9a 30 01           a2 = 0x1309a
  2793: 33 08 01                 a1 = 0x1
  2796: 33 0a 02                 a3 = 0x2
  2799: 64 27                    a0 = t0
  2801: 50 10 76 b2 02 03        ra = 118, jump @13716
      :                          @195 [@dyn 59]
  2807: 82 10 80 00              ra = u64 [sp + 0x80]
  2811: 95 11 88 00              sp = sp + 0x88
  2815: 32 00                    ret
      :                          @196
  2817: 00                       trap
      :                          @197 [@dyn 60]
  2818: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  2822: 7b 10 80 00              u64 [sp + 0x80] = ra
  2826: 64 82                    t0 = a1
  2828: 80 88 34                 a1 = u32 [a1 + 0x34]
  2831: 84 89 10                 a2 = a1 & 0x10
  2834: 52 09 1c                 jump @200 if a2 != 0
      :                          @198
  2837: 84 88 20                 a1 = a1 & 0x20
  2840: 52 08 46                 jump @203 if a1 != 0
      :                          @199
  2843: 82 77                    a0 = u64 [a0]
  2845: 33 08 01                 a1 = 0x1
  2848: 64 29                    a2 = t0
  2850: 82 10 80 00              ra = u64 [sp + 0x80]
  2854: 95 11 88 00              sp = sp + 0x88
  2858: 28 4b 01 03              jump @13706
      :                          @200
  2862: 82 7a                    a3 = u64 [a0]
  2864: 33 08 81 00              a1 = 0x81
  2868: 95 17 7f                 a0 = sp + 0x7f
  2871: 33 03 57                 t1 = 0x57
  2874: 01                       fallthrough
      :                          @201
  2875: 64 8b                    a4 = a1
  2877: 98 ac 04                 a5 = a3 >> 0x4
  2880: 84 aa 0f                 a3 = a3 & 0xf
  2883: 88 a8 0a                 a1 = a3 <u 0xa
  2886: 33 09 30                 a2 = 0x30
  2889: da 83 09                 a2 = t1 if a1 == 0
  2892: be a9 09                 i32 a2 = a2 + a3
  2895: 78 79                    u8 [a0] = a2
  2897: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2900: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  2903: 64 ca                    a3 = a5
  2905: 52 0c e2                 jump @201 if a5 != 0
      :                          @202
  2908: 28 30                    jump @205
      :                          @203
  2910: 82 7a                    a3 = u64 [a0]
  2912: 33 08 81 00              a1 = 0x81
  2916: 95 17 7f                 a0 = sp + 0x7f
  2919: 33 03 37                 t1 = 0x37
  2922: 01                       fallthrough
      :                          @204
  2923: 64 8b                    a4 = a1
  2925: 98 ac 04                 a5 = a3 >> 0x4
  2928: 84 aa 0f                 a3 = a3 & 0xf
  2931: 88 a8 0a                 a1 = a3 <u 0xa
  2934: 33 09 30                 a2 = 0x30
  2937: da 83 09                 a2 = t1 if a1 == 0
  2940: be a9 09                 i32 a2 = a2 + a3
  2943: 78 79                    u8 [a0] = a2
  2945: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2948: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  2951: 64 ca                    a3 = a5
  2953: 52 0c e2                 jump @204 if a5 != 0
      :                          @205
  2956: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  2959: 56 27 80 00 2b           jump @208 if a0 >u 128
      :                          @206
  2964: 9a 8c 81 00              a5 = 0x81 - a1
  2968: 64 1b                    a4 = sp
  2970: c8 7b 0b                 a4 = a4 + a0
  2973: 33 09 9a 30 01           a2 = 0x1309a
  2978: 33 08 01                 a1 = 0x1
  2981: 33 0a 02                 a3 = 0x2
  2984: 64 27                    a0 = t0
  2986: 50 10 7a f9 01 03        ra = 122, jump @13716
      :                          @207 [@dyn 61]
  2992: 82 10 80 00              ra = u64 [sp + 0x80]
  2996: 95 11 88 00              sp = sp + 0x88
  3000: 32 00                    ret
      :                          @208
  3002: 00                       trap
      :                          @209
  3003: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3006: 7b 10 18                 u64 [sp + 0x18] = ra
  3009: 7b 15 10                 u64 [sp + 0x10] = s0
  3012: 7b 16 08                 u64 [sp + 0x8] = s1
  3015: 82 70 10                 ra = u64 [a0 + 0x10]
  3018: 7b 17                    u64 [sp] = a0
  3020: 82 74 08                 t2 = u64 [a0 + 0x8]
  3023: 51 00 4a                 jump @221 if ra == 0
      :                          @210
  3026: 33 0a                    a3 = 0
  3028: 33 03 18                 t1 = 0x18
  3031: 33 07 00 00 10           a0 = 0x100000
  3036: 33 0c b0 02 03           a5 = 0x302b0
  3041: c8 7c 0c                 a5 = a5 + a0
  3044: 28 08                    jump @212
      :                          @211
  3046: 95 aa 01                 a3 = a3 + 0x1
  3049: aa 0a 30                 jump @221 if a3 == ra
      :                          @212
  3052: ca 3a 08                 a1 = a3 * t1
  3055: c8 48 08                 a1 = a1 + t2
  3058: 82 8b                    a4 = u64 [a1]
  3060: 51 0b f2                 jump @211 if a4 == 0
      :                          @213
  3063: ac b7 ef                 jump @211 if a0 <u a4
      :                          @214
  3066: 82 88 08                 a1 = u64 [a1 + 0x8]
  3069: 01                       fallthrough
      :                          @215
  3070: 82 c5                    s0 = u64 [a5]
  3072: c9 5c 06                 s1 = a5 - s0
  3075: ab 86 e3                 jump @211 if s1 != a1
      :                          @216
  3078: c9 b5 06                 s1 = s0 - a4
  3081: 01                       fallthrough
      :                          @217
  3082: 82 c9                    a2 = u64 [a5]
  3084: ab 59 f2                 jump @215 if a2 != s0
      :                          @218
  3087: 7b c6                    u64 [a5] = s1
  3089: 33 02                    t0 = 0
  3091: 01                       fallthrough
      :                          @219
  3092: ab 59 ea                 jump @215 if a2 != s0
      :                          @220
  3095: 28 cf                    jump @211
      :                          @221
  3097: 82 17                    a0 = u64 [sp]
  3099: 82 77                    a0 = u64 [a0]
  3101: 51 07 2f                 jump @228 if a0 == 0
      :                          @222
  3104: 33 08 aa aa 00           a1 = 0xaaaa
  3109: ac 78 27                 jump @228 if a1 <u a0
      :                          @223
  3112: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
  3115: 33 08 b0 02 03           a1 = 0x302b0
  3120: 95 88 00 00 10           a1 = a1 + 0x100000
  3125: 01                       fallthrough
      :                          @224
  3126: 82 89                    a2 = u64 [a1]
  3128: c9 98 0a                 a3 = a1 - a2
  3131: ab 4a 11                 jump @228 if a3 != t2
      :                          @225
  3134: c8 79 0a                 a3 = a2 + a0
  3137: 01                       fallthrough
      :                          @226
  3138: 82 8b                    a4 = u64 [a1]
  3140: ab 9b f2                 jump @224 if a4 != a2
      :                          @227
  3143: 7b 8a                    u64 [a1] = a3
  3145: 33 0c                    a5 = 0
  3147: 01                       fallthrough
      :                          @228
  3148: 82 10 18                 ra = u64 [sp + 0x18]
  3151: 82 15 10                 s0 = u64 [sp + 0x10]
  3154: 82 16 08                 s1 = u64 [sp + 0x8]
  3157: 95 11 20                 sp = sp + 0x20
  3160: 32 00                    ret
      :                          @229
  3162: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3165: 7b 10 18                 u64 [sp + 0x18] = ra
  3168: 7b 15 10                 u64 [sp + 0x10] = s0
  3171: 7b 16 08                 u64 [sp + 0x8] = s1
  3174: 82 70 10                 ra = u64 [a0 + 0x10]
  3177: 7b 17                    u64 [sp] = a0
  3179: 82 74 08                 t2 = u64 [a0 + 0x8]
  3182: 51 00 4f                 jump @241 if ra == 0
      :                          @230
  3185: 33 0a                    a3 = 0
  3187: 33 03 18                 t1 = 0x18
  3190: 33 0c b0 02 03           a5 = 0x302b0
  3195: 95 cc 00 00 10           a5 = a5 + 0x100000
  3200: 33 07 00 00 02           a0 = 0x20000
  3205: 28 08                    jump @232
      :                          @231
  3207: 95 aa 01                 a3 = a3 + 0x1
  3210: aa 0a 33                 jump @241 if a3 == ra
      :                          @232
  3213: ca 3a 0b                 a4 = a3 * t1
  3216: c8 4b 0b                 a4 = a4 + t2
  3219: 82 b8                    a1 = u64 [a4]
  3221: 51 08 f2                 jump @231 if a1 == 0
      :                          @233
  3224: ac 87 ef                 jump @231 if a0 <u a1
      :                          @234
  3227: 82 bb 08                 a4 = u64 [a4 + 0x8]
  3230: 97 88 03                 a1 = a1 << 0x3
  3233: 01                       fallthrough
      :                          @235
  3234: 82 c5                    s0 = u64 [a5]
  3236: c9 5c 06                 s1 = a5 - s0
  3239: ab b6 e0                 jump @231 if s1 != a4
      :                          @236
  3242: c9 85 06                 s1 = s0 - a1
  3245: 01                       fallthrough
      :                          @237
  3246: 82 c9                    a2 = u64 [a5]
  3248: ab 59 f2                 jump @235 if a2 != s0
      :                          @238
  3251: 7b c6                    u64 [a5] = s1
  3253: 33 02                    t0 = 0
  3255: 01                       fallthrough
      :                          @239
  3256: ab 59 ea                 jump @235 if a2 != s0
      :                          @240
  3259: 28 cc                    jump @231
      :                          @241
  3261: 82 17                    a0 = u64 [sp]
  3263: 82 77                    a0 = u64 [a0]
  3265: 51 07 2f                 jump @248 if a0 == 0
      :                          @242
  3268: 33 08 aa aa 00           a1 = 0xaaaa
  3273: ac 78 27                 jump @248 if a1 <u a0
      :                          @243
  3276: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
  3279: 33 08 b0 02 03           a1 = 0x302b0
  3284: 95 88 00 00 10           a1 = a1 + 0x100000
  3289: 01                       fallthrough
      :                          @244
  3290: 82 89                    a2 = u64 [a1]
  3292: c9 98 0a                 a3 = a1 - a2
  3295: ab 4a 11                 jump @248 if a3 != t2
      :                          @245
  3298: c8 79 0a                 a3 = a2 + a0
  3301: 01                       fallthrough
      :                          @246
  3302: 82 8b                    a4 = u64 [a1]
  3304: ab 9b f2                 jump @244 if a4 != a2
      :                          @247
  3307: 7b 8a                    u64 [a1] = a3
  3309: 33 0c                    a5 = 0
  3311: 01                       fallthrough
      :                          @248
  3312: 82 10 18                 ra = u64 [sp + 0x18]
  3315: 82 15 10                 s0 = u64 [sp + 0x10]
  3318: 82 16 08                 s1 = u64 [sp + 0x8]
  3321: 95 11 20                 sp = sp + 0x20
  3324: 32 00                    ret
      :                          @249
  3326: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3329: 7b 10 18                 u64 [sp + 0x18] = ra
  3332: 7b 15 10                 u64 [sp + 0x10] = s0
  3335: 7b 16 08                 u64 [sp + 0x8] = s1
  3338: 82 70 10                 ra = u64 [a0 + 0x10]
  3341: 7b 17                    u64 [sp] = a0
  3343: 82 74 08                 t2 = u64 [a0 + 0x8]
  3346: 51 00 4f                 jump @261 if ra == 0
      :                          @250
  3349: 33 0a                    a3 = 0
  3351: 33 03 18                 t1 = 0x18
  3354: 33 0c b0 02 03           a5 = 0x302b0
  3359: 95 cc 00 00 10           a5 = a5 + 0x100000
  3364: 33 07 00 00 01           a0 = 0x10000
  3369: 28 08                    jump @252
      :                          @251
  3371: 95 aa 01                 a3 = a3 + 0x1
  3374: aa 0a 33                 jump @261 if a3 == ra
      :                          @252
  3377: ca 3a 0b                 a4 = a3 * t1
  3380: c8 4b 0b                 a4 = a4 + t2
  3383: 82 b8                    a1 = u64 [a4]
  3385: 51 08 f2                 jump @251 if a1 == 0
      :                          @253
  3388: ac 87 ef                 jump @251 if a0 <u a1
      :                          @254
  3391: 82 bb 08                 a4 = u64 [a4 + 0x8]
  3394: 97 88 04                 a1 = a1 << 0x4
  3397: 01                       fallthrough
      :                          @255
  3398: 82 c5                    s0 = u64 [a5]
  3400: c9 5c 06                 s1 = a5 - s0
  3403: ab b6 e0                 jump @251 if s1 != a4
      :                          @256
  3406: c9 85 06                 s1 = s0 - a1
  3409: 01                       fallthrough
      :                          @257
  3410: 82 c9                    a2 = u64 [a5]
  3412: ab 59 f2                 jump @255 if a2 != s0
      :                          @258
  3415: 7b c6                    u64 [a5] = s1
  3417: 33 02                    t0 = 0
  3419: 01                       fallthrough
      :                          @259
  3420: ab 59 ea                 jump @255 if a2 != s0
      :                          @260
  3423: 28 cc                    jump @251
      :                          @261
  3425: 82 17                    a0 = u64 [sp]
  3427: 82 77                    a0 = u64 [a0]
  3429: 51 07 2f                 jump @268 if a0 == 0
      :                          @262
  3432: 33 08 aa aa 00           a1 = 0xaaaa
  3437: ac 78 27                 jump @268 if a1 <u a0
      :                          @263
  3440: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
  3443: 33 08 b0 02 03           a1 = 0x302b0
  3448: 95 88 00 00 10           a1 = a1 + 0x100000
  3453: 01                       fallthrough
      :                          @264
  3454: 82 89                    a2 = u64 [a1]
  3456: c9 98 0a                 a3 = a1 - a2
  3459: ab 4a 11                 jump @268 if a3 != t2
      :                          @265
  3462: c8 79 0a                 a3 = a2 + a0
  3465: 01                       fallthrough
      :                          @266
  3466: 82 8b                    a4 = u64 [a1]
  3468: ab 9b f2                 jump @264 if a4 != a2
      :                          @267
  3471: 7b 8a                    u64 [a1] = a3
  3473: 33 0c                    a5 = 0
  3475: 01                       fallthrough
      :                          @268
  3476: 82 10 18                 ra = u64 [sp + 0x18]
  3479: 82 15 10                 s0 = u64 [sp + 0x10]
  3482: 82 16 08                 s1 = u64 [sp + 0x8]
  3485: 95 11 20                 sp = sp + 0x20
  3488: 32 00                    ret
      :                          @269 [@dyn 62]
  3490: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  3493: 7b 10 28                 u64 [sp + 0x28] = ra
  3496: 7b 15 20                 u64 [sp + 0x20] = s0
  3499: 7b 16 18                 u64 [sp + 0x18] = s1
  3502: 64 85                    s0 = a1
  3504: 82 88 28                 a1 = u64 [a1 + 0x28]
  3507: 82 5a 20                 a3 = u64 [s0 + 0x20]
  3510: 82 8b 18                 a4 = u64 [a1 + 0x18]
  3513: 64 76                    s1 = a0
  3515: 33 08 58 30 01           a1 = 0x13058
  3520: 33 09 01                 a2 = 0x1
  3523: 64 a7                    a0 = a3
  3525: b4 b0 01 7e              ra = 126, jump [a4]
      :                          @270 [@dyn 63]
  3529: 7b 15                    u64 [sp] = s0
  3531: 78 17 08                 u8 [sp + 0x8] = a0
  3534: 46 11 09                 u8 [sp + 9] = 0
  3537: 7b 16 10                 u64 [sp + 0x10] = s1
  3540: 33 05 18                 s0 = 0x18
  3543: 64 17                    a0 = sp
  3545: 95 18 10                 a1 = sp + 0x10
  3548: 33 09 18                 a2 = 0x18
  3551: 50 20 80 00 e7 0b 03     ra = 128, jump @13954
      :                          @271 [@dyn 64]
  3558: 95 67 08                 a0 = s1 + 0x8
  3561: 7b 17 10                 u64 [sp + 0x10] = a0
  3564: 64 17                    a0 = sp
  3566: 95 18 10                 a1 = sp + 0x10
  3569: 64 59                    a2 = s0
  3571: 50 20 82 00 d3 0b 03     ra = 130, jump @13954
      :                          @272 [@dyn 65]
  3578: 95 67 10                 a0 = s1 + 0x10
  3581: 7b 17 10                 u64 [sp + 0x10] = a0
  3584: 64 17                    a0 = sp
  3586: 95 18 10                 a1 = sp + 0x10
  3589: 64 59                    a2 = s0
  3591: 50 20 84 00 bf 0b 03     ra = 132, jump @13954
      :                          @273 [@dyn 66]
  3598: 95 66 18                 s1 = s1 + 0x18
  3601: 7b 16 10                 u64 [sp + 0x10] = s1
  3604: 64 17                    a0 = sp
  3606: 95 18 10                 a1 = sp + 0x10
  3609: 64 59                    a2 = s0
  3611: 50 20 86 00 ab 0b 03     ra = 134, jump @13954
      :                          @274 [@dyn 67]
  3618: 33 07 01                 a0 = 0x1
  3621: 7c 18 08                 a1 = u8 [sp + 0x8]
  3624: 52 08 1b                 jump @276 if a1 != 0
      :                          @275
  3627: 82 17                    a0 = u64 [sp]
  3629: 82 78 28                 a1 = u64 [a0 + 0x28]
  3632: 82 77 20                 a0 = u64 [a0 + 0x20]
  3635: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3638: 33 08 99 30 01           a1 = 0x13099
  3643: 33 09 01                 a2 = 0x1
  3646: b4 a0 02 88 00           ra = 136, jump [a3]
      :                          @276 [@dyn 68]
  3651: 82 10 28                 ra = u64 [sp + 0x28]
  3654: 82 15 20                 s0 = u64 [sp + 0x20]
  3657: 82 16 18                 s1 = u64 [sp + 0x18]
  3660: 95 11 30                 sp = sp + 0x30
  3663: 32 00                    ret
      :                          @277 [@dyn 69]
  3665: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  3668: 7b 10 28                 u64 [sp + 0x28] = ra
  3671: 7b 15 20                 u64 [sp + 0x20] = s0
  3674: 7b 16 18                 u64 [sp + 0x18] = s1
  3677: 64 85                    s0 = a1
  3679: 82 88 28                 a1 = u64 [a1 + 0x28]
  3682: 82 5a 20                 a3 = u64 [s0 + 0x20]
  3685: 82 8b 18                 a4 = u64 [a1 + 0x18]
  3688: 64 76                    s1 = a0
  3690: 33 08 58 30 01           a1 = 0x13058
  3695: 33 09 01                 a2 = 0x1
  3698: 64 a7                    a0 = a3
  3700: b4 b0 02 8c 00           ra = 140, jump [a4]
      :                          @278 [@dyn 70]
  3705: 7b 15                    u64 [sp] = s0
  3707: 78 17 08                 u8 [sp + 0x8] = a0
  3710: 46 11 09                 u8 [sp + 9] = 0
  3713: 7b 16 10                 u64 [sp + 0x10] = s1
  3716: 33 05 18                 s0 = 0x18
  3719: 64 17                    a0 = sp
  3721: 95 18 10                 a1 = sp + 0x10
  3724: 33 09 18                 a2 = 0x18
  3727: 50 20 8e 00 37 0b 03     ra = 142, jump @13954
      :                          @279 [@dyn 71]
  3734: 95 66 08                 s1 = s1 + 0x8
  3737: 7b 16 10                 u64 [sp + 0x10] = s1
  3740: 64 17                    a0 = sp
  3742: 95 18 10                 a1 = sp + 0x10
  3745: 64 59                    a2 = s0
  3747: 50 20 90 00 23 0b 03     ra = 144, jump @13954
      :                          @280 [@dyn 72]
  3754: 33 07 01                 a0 = 0x1
  3757: 7c 18 08                 a1 = u8 [sp + 0x8]
  3760: 52 08 1b                 jump @282 if a1 != 0
      :                          @281
  3763: 82 17                    a0 = u64 [sp]
  3765: 82 78 28                 a1 = u64 [a0 + 0x28]
  3768: 82 77 20                 a0 = u64 [a0 + 0x20]
  3771: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3774: 33 08 99 30 01           a1 = 0x13099
  3779: 33 09 01                 a2 = 0x1
  3782: b4 a0 02 92 00           ra = 146, jump [a3]
      :                          @282 [@dyn 73]
  3787: 82 10 28                 ra = u64 [sp + 0x28]
  3790: 82 15 20                 s0 = u64 [sp + 0x20]
  3793: 82 16 18                 s1 = u64 [sp + 0x18]
  3796: 95 11 30                 sp = sp + 0x30
  3799: 32 00                    ret
      :                          @283 [@dyn 74]
  3801: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  3804: 7b 10 28                 u64 [sp + 0x28] = ra
  3807: 7b 15 20                 u64 [sp + 0x20] = s0
  3810: 7b 16 18                 u64 [sp + 0x18] = s1
  3813: 64 85                    s0 = a1
  3815: 82 88 28                 a1 = u64 [a1 + 0x28]
  3818: 82 5a 20                 a3 = u64 [s0 + 0x20]
  3821: 82 8b 18                 a4 = u64 [a1 + 0x18]
  3824: 64 76                    s1 = a0
  3826: 33 08 58 30 01           a1 = 0x13058
  3831: 33 09 01                 a2 = 0x1
  3834: 64 a7                    a0 = a3
  3836: b4 b0 02 96 00           ra = 150, jump [a4]
      :                          @284 [@dyn 75]
  3841: 7b 15                    u64 [sp] = s0
  3843: 78 17 08                 u8 [sp + 0x8] = a0
  3846: 46 11 09                 u8 [sp + 9] = 0
  3849: 7b 16 10                 u64 [sp + 0x10] = s1
  3852: 33 05 9e 0c              s0 = 0xc9e
  3856: 64 17                    a0 = sp
  3858: 95 18 10                 a1 = sp + 0x10
  3861: 33 09 9e 0c              a2 = 0xc9e
  3865: 50 20 98 00 ad 0a 03     ra = 152, jump @13954
      :                          @285 [@dyn 76]
  3872: 95 67 01                 a0 = s1 + 0x1
  3875: 7b 17 10                 u64 [sp + 0x10] = a0
  3878: 64 17                    a0 = sp
  3880: 95 18 10                 a1 = sp + 0x10
  3883: 64 59                    a2 = s0
  3885: 50 20 9a 00 99 0a 03     ra = 154, jump @13954
      :                          @286 [@dyn 77]
  3892: 95 67 02                 a0 = s1 + 0x2
  3895: 7b 17 10                 u64 [sp + 0x10] = a0
  3898: 64 17                    a0 = sp
  3900: 95 18 10                 a1 = sp + 0x10
  3903: 64 59                    a2 = s0
  3905: 50 20 9c 00 85 0a 03     ra = 156, jump @13954
      :                          @287 [@dyn 78]
  3912: 95 67 03                 a0 = s1 + 0x3
  3915: 7b 17 10                 u64 [sp + 0x10] = a0
  3918: 64 17                    a0 = sp
  3920: 95 18 10                 a1 = sp + 0x10
  3923: 64 59                    a2 = s0
  3925: 50 20 9e 00 71 0a 03     ra = 158, jump @13954
      :                          @288 [@dyn 79]
  3932: 95 67 04                 a0 = s1 + 0x4
  3935: 7b 17 10                 u64 [sp + 0x10] = a0
  3938: 64 17                    a0 = sp
  3940: 95 18 10                 a1 = sp + 0x10
  3943: 64 59                    a2 = s0
  3945: 50 20 a0 00 5d 0a 03     ra = 160, jump @13954
      :                          @289 [@dyn 80]
  3952: 95 67 05                 a0 = s1 + 0x5
  3955: 7b 17 10                 u64 [sp + 0x10] = a0
  3958: 64 17                    a0 = sp
  3960: 95 18 10                 a1 = sp + 0x10
  3963: 64 59                    a2 = s0
  3965: 50 20 a2 00 49 0a 03     ra = 162, jump @13954
      :                          @290 [@dyn 81]
  3972: 95 67 06                 a0 = s1 + 0x6
  3975: 7b 17 10                 u64 [sp + 0x10] = a0
  3978: 64 17                    a0 = sp
  3980: 95 18 10                 a1 = sp + 0x10
  3983: 64 59                    a2 = s0
  3985: 50 20 a4 00 35 0a 03     ra = 164, jump @13954
      :                          @291 [@dyn 82]
  3992: 95 67 07                 a0 = s1 + 0x7
  3995: 7b 17 10                 u64 [sp + 0x10] = a0
  3998: 64 17                    a0 = sp
  4000: 95 18 10                 a1 = sp + 0x10
  4003: 64 59                    a2 = s0
  4005: 50 20 a6 00 21 0a 03     ra = 166, jump @13954
      :                          @292 [@dyn 83]
  4012: 95 67 08                 a0 = s1 + 0x8
  4015: 7b 17 10                 u64 [sp + 0x10] = a0
  4018: 64 17                    a0 = sp
  4020: 95 18 10                 a1 = sp + 0x10
  4023: 64 59                    a2 = s0
  4025: 50 20 a8 00 0d 0a 03     ra = 168, jump @13954
      :                          @293 [@dyn 84]
  4032: 95 67 09                 a0 = s1 + 0x9
  4035: 7b 17 10                 u64 [sp + 0x10] = a0
  4038: 64 17                    a0 = sp
  4040: 95 18 10                 a1 = sp + 0x10
  4043: 64 59                    a2 = s0
  4045: 50 20 aa 00 f9 09 03     ra = 170, jump @13954
      :                          @294 [@dyn 85]
  4052: 95 67 0a                 a0 = s1 + 0xa
  4055: 7b 17 10                 u64 [sp + 0x10] = a0
  4058: 64 17                    a0 = sp
  4060: 95 18 10                 a1 = sp + 0x10
  4063: 64 59                    a2 = s0
  4065: 50 20 ac 00 e5 09 03     ra = 172, jump @13954
      :                          @295 [@dyn 86]
  4072: 95 67 0b                 a0 = s1 + 0xb
  4075: 7b 17 10                 u64 [sp + 0x10] = a0
  4078: 64 17                    a0 = sp
  4080: 95 18 10                 a1 = sp + 0x10
  4083: 64 59                    a2 = s0
  4085: 50 20 ae 00 d1 09 03     ra = 174, jump @13954
      :                          @296 [@dyn 87]
  4092: 95 67 0c                 a0 = s1 + 0xc
  4095: 7b 17 10                 u64 [sp + 0x10] = a0
  4098: 64 17                    a0 = sp
  4100: 95 18 10                 a1 = sp + 0x10
  4103: 64 59                    a2 = s0
  4105: 50 20 b0 00 bd 09 03     ra = 176, jump @13954
      :                          @297 [@dyn 88]
  4112: 95 67 0d                 a0 = s1 + 0xd
  4115: 7b 17 10                 u64 [sp + 0x10] = a0
  4118: 64 17                    a0 = sp
  4120: 95 18 10                 a1 = sp + 0x10
  4123: 64 59                    a2 = s0
  4125: 50 20 b2 00 a9 09 03     ra = 178, jump @13954
      :                          @298 [@dyn 89]
  4132: 95 67 0e                 a0 = s1 + 0xe
  4135: 7b 17 10                 u64 [sp + 0x10] = a0
  4138: 64 17                    a0 = sp
  4140: 95 18 10                 a1 = sp + 0x10
  4143: 64 59                    a2 = s0
  4145: 50 20 b4 00 95 09 03     ra = 180, jump @13954
      :                          @299 [@dyn 90]
  4152: 95 67 0f                 a0 = s1 + 0xf
  4155: 7b 17 10                 u64 [sp + 0x10] = a0
  4158: 64 17                    a0 = sp
  4160: 95 18 10                 a1 = sp + 0x10
  4163: 64 59                    a2 = s0
  4165: 50 20 b6 00 81 09 03     ra = 182, jump @13954
      :                          @300 [@dyn 91]
  4172: 95 67 10                 a0 = s1 + 0x10
  4175: 7b 17 10                 u64 [sp + 0x10] = a0
  4178: 64 17                    a0 = sp
  4180: 95 18 10                 a1 = sp + 0x10
  4183: 64 59                    a2 = s0
  4185: 50 20 b8 00 6d 09 03     ra = 184, jump @13954
      :                          @301 [@dyn 92]
  4192: 95 67 11                 a0 = s1 + 0x11
  4195: 7b 17 10                 u64 [sp + 0x10] = a0
  4198: 64 17                    a0 = sp
  4200: 95 18 10                 a1 = sp + 0x10
  4203: 64 59                    a2 = s0
  4205: 50 20 ba 00 59 09 03     ra = 186, jump @13954
      :                          @302 [@dyn 93]
  4212: 95 67 12                 a0 = s1 + 0x12
  4215: 7b 17 10                 u64 [sp + 0x10] = a0
  4218: 64 17                    a0 = sp
  4220: 95 18 10                 a1 = sp + 0x10
  4223: 64 59                    a2 = s0
  4225: 50 20 bc 00 45 09 03     ra = 188, jump @13954
      :                          @303 [@dyn 94]
  4232: 95 67 13                 a0 = s1 + 0x13
  4235: 7b 17 10                 u64 [sp + 0x10] = a0
  4238: 64 17                    a0 = sp
  4240: 95 18 10                 a1 = sp + 0x10
  4243: 64 59                    a2 = s0
  4245: 50 20 be 00 31 09 03     ra = 190, jump @13954
      :                          @304 [@dyn 95]
  4252: 95 67 14                 a0 = s1 + 0x14
  4255: 7b 17 10                 u64 [sp + 0x10] = a0
  4258: 64 17                    a0 = sp
  4260: 95 18 10                 a1 = sp + 0x10
  4263: 64 59                    a2 = s0
  4265: 50 20 c0 00 1d 09 03     ra = 192, jump @13954
      :                          @305 [@dyn 96]
  4272: 95 67 15                 a0 = s1 + 0x15
  4275: 7b 17 10                 u64 [sp + 0x10] = a0
  4278: 64 17                    a0 = sp
  4280: 95 18 10                 a1 = sp + 0x10
  4283: 64 59                    a2 = s0
  4285: 50 20 c2 00 09 09 03     ra = 194, jump @13954
      :                          @306 [@dyn 97]
  4292: 95 67 16                 a0 = s1 + 0x16
  4295: 7b 17 10                 u64 [sp + 0x10] = a0
  4298: 64 17                    a0 = sp
  4300: 95 18 10                 a1 = sp + 0x10
  4303: 64 59                    a2 = s0
  4305: 50 20 c4 00 f5 08 03     ra = 196, jump @13954
      :                          @307 [@dyn 98]
  4312: 95 67 17                 a0 = s1 + 0x17
  4315: 7b 17 10                 u64 [sp + 0x10] = a0
  4318: 64 17                    a0 = sp
  4320: 95 18 10                 a1 = sp + 0x10
  4323: 64 59                    a2 = s0
  4325: 50 20 c6 00 e1 08 03     ra = 198, jump @13954
      :                          @308 [@dyn 99]
  4332: 95 67 18                 a0 = s1 + 0x18
  4335: 7b 17 10                 u64 [sp + 0x10] = a0
  4338: 64 17                    a0 = sp
  4340: 95 18 10                 a1 = sp + 0x10
  4343: 64 59                    a2 = s0
  4345: 50 20 c8 00 cd 08 03     ra = 200, jump @13954
      :                          @309 [@dyn 100]
  4352: 95 67 19                 a0 = s1 + 0x19
  4355: 7b 17 10                 u64 [sp + 0x10] = a0
  4358: 64 17                    a0 = sp
  4360: 95 18 10                 a1 = sp + 0x10
  4363: 64 59                    a2 = s0
  4365: 50 20 ca 00 b9 08 03     ra = 202, jump @13954
      :                          @310 [@dyn 101]
  4372: 95 67 1a                 a0 = s1 + 0x1a
  4375: 7b 17 10                 u64 [sp + 0x10] = a0
  4378: 64 17                    a0 = sp
  4380: 95 18 10                 a1 = sp + 0x10
  4383: 64 59                    a2 = s0
  4385: 50 20 cc 00 a5 08 03     ra = 204, jump @13954
      :                          @311 [@dyn 102]
  4392: 95 67 1b                 a0 = s1 + 0x1b
  4395: 7b 17 10                 u64 [sp + 0x10] = a0
  4398: 64 17                    a0 = sp
  4400: 95 18 10                 a1 = sp + 0x10
  4403: 64 59                    a2 = s0
  4405: 50 20 ce 00 91 08 03     ra = 206, jump @13954
      :                          @312 [@dyn 103]
  4412: 95 67 1c                 a0 = s1 + 0x1c
  4415: 7b 17 10                 u64 [sp + 0x10] = a0
  4418: 64 17                    a0 = sp
  4420: 95 18 10                 a1 = sp + 0x10
  4423: 64 59                    a2 = s0
  4425: 50 20 d0 00 7d 08 03     ra = 208, jump @13954
      :                          @313 [@dyn 104]
  4432: 95 67 1d                 a0 = s1 + 0x1d
  4435: 7b 17 10                 u64 [sp + 0x10] = a0
  4438: 64 17                    a0 = sp
  4440: 95 18 10                 a1 = sp + 0x10
  4443: 64 59                    a2 = s0
  4445: 50 20 d2 00 69 08 03     ra = 210, jump @13954
      :                          @314 [@dyn 105]
  4452: 95 67 1e                 a0 = s1 + 0x1e
  4455: 7b 17 10                 u64 [sp + 0x10] = a0
  4458: 64 17                    a0 = sp
  4460: 95 18 10                 a1 = sp + 0x10
  4463: 64 59                    a2 = s0
  4465: 50 20 d4 00 55 08 03     ra = 212, jump @13954
      :                          @315 [@dyn 106]
  4472: 95 66 1f                 s1 = s1 + 0x1f
  4475: 7b 16 10                 u64 [sp + 0x10] = s1
  4478: 64 17                    a0 = sp
  4480: 95 18 10                 a1 = sp + 0x10
  4483: 64 59                    a2 = s0
  4485: 50 20 d6 00 41 08 03     ra = 214, jump @13954
      :                          @316 [@dyn 107]
  4492: 33 07 01                 a0 = 0x1
  4495: 7c 18 08                 a1 = u8 [sp + 0x8]
  4498: 52 08 1b                 jump @318 if a1 != 0
      :                          @317
  4501: 82 17                    a0 = u64 [sp]
  4503: 82 78 28                 a1 = u64 [a0 + 0x28]
  4506: 82 77 20                 a0 = u64 [a0 + 0x20]
  4509: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4512: 33 08 99 30 01           a1 = 0x13099
  4517: 33 09 01                 a2 = 0x1
  4520: b4 a0 02 d8 00           ra = 216, jump [a3]
      :                          @318 [@dyn 108]
  4525: 82 10 28                 ra = u64 [sp + 0x28]
  4528: 82 15 20                 s0 = u64 [sp + 0x20]
  4531: 82 16 18                 s1 = u64 [sp + 0x18]
  4534: 95 11 30                 sp = sp + 0x30
  4537: 32 00                    ret
      :                          @319 [@dyn 109]
  4539: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4542: 7b 10 30                 u64 [sp + 0x30] = ra
  4545: 7b 15 28                 u64 [sp + 0x28] = s0
  4548: 7b 16 20                 u64 [sp + 0x20] = s1
  4551: 64 86                    s1 = a1
  4553: 82 88 28                 a1 = u64 [a1 + 0x28]
  4556: 82 6a 20                 a3 = u64 [s1 + 0x20]
  4559: 82 8b 18                 a4 = u64 [a1 + 0x18]
  4562: 64 75                    s0 = a0
  4564: 33 08 58 30 01           a1 = 0x13058
  4569: 33 09 01                 a2 = 0x1
  4572: 64 a7                    a0 = a3
  4574: b4 b0 02 dc 00           ra = 220, jump [a4]
      :                          @320 [@dyn 110]
  4579: 7b 16 08                 u64 [sp + 0x8] = s1
  4582: 78 17 10                 u8 [sp + 0x10] = a0
  4585: 46 11 11                 u8 [sp + 17] = 0
  4588: 33 06 80 00              s1 = 0x80
  4592: 33 07 9e 0c              a0 = 0xc9e
  4596: 7b 17                    u64 [sp] = a0
  4598: 01                       fallthrough
      :                          @321
  4599: 7b 15 18                 u64 [sp + 0x18] = s0
  4602: 95 17 08                 a0 = sp + 0x8
  4605: 95 18 18                 a1 = sp + 0x18
  4608: 82 19                    a2 = u64 [sp]
  4610: 50 20 de 00 c4 07 03     ra = 222, jump @13954
      :                          @322 [@dyn 111]
  4617: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4620: 95 55 01                 s0 = s0 + 0x1
  4623: 52 06 e8                 jump @321 if s1 != 0
      :                          @323
  4626: 7c 18 10                 a1 = u8 [sp + 0x10]
  4629: 33 07 01                 a0 = 0x1
  4632: 52 08 1c                 jump @325 if a1 != 0
      :                          @324
  4635: 82 17 08                 a0 = u64 [sp + 0x8]
  4638: 82 78 28                 a1 = u64 [a0 + 0x28]
  4641: 82 77 20                 a0 = u64 [a0 + 0x20]
  4644: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4647: 33 08 99 30 01           a1 = 0x13099
  4652: 33 09 01                 a2 = 0x1
  4655: b4 a0 02 e0 00           ra = 224, jump [a3]
      :                          @325 [@dyn 112]
  4660: 82 10 30                 ra = u64 [sp + 0x30]
  4663: 82 15 28                 s0 = u64 [sp + 0x28]
  4666: 82 16 20                 s1 = u64 [sp + 0x20]
  4669: 95 11 38                 sp = sp + 0x38
  4672: 32 00                    ret
      :                          @326 [@dyn 113]
  4674: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  4677: 7b 10 28                 u64 [sp + 0x28] = ra
  4680: 7b 15 20                 u64 [sp + 0x20] = s0
  4683: 7b 16 18                 u64 [sp + 0x18] = s1
  4686: 64 85                    s0 = a1
  4688: 82 88 28                 a1 = u64 [a1 + 0x28]
  4691: 82 5a 20                 a3 = u64 [s0 + 0x20]
  4694: 82 8b 18                 a4 = u64 [a1 + 0x18]
  4697: 64 76                    s1 = a0
  4699: 33 08 58 30 01           a1 = 0x13058
  4704: 33 09 01                 a2 = 0x1
  4707: 64 a7                    a0 = a3
  4709: b4 b0 02 e4 00           ra = 228, jump [a4]
      :                          @327 [@dyn 114]
  4714: 7b 15                    u64 [sp] = s0
  4716: 78 17 08                 u8 [sp + 0x8] = a0
  4719: 46 11 09                 u8 [sp + 9] = 0
  4722: 7b 16 10                 u64 [sp + 0x10] = s1
  4725: 33 05 02                 s0 = 0x2
  4728: 64 17                    a0 = sp
  4730: 95 18 10                 a1 = sp + 0x10
  4733: 33 09 02                 a2 = 0x2
  4736: 50 20 e6 00 46 07 03     ra = 230, jump @13954
      :                          @328 [@dyn 115]
  4743: 95 66 10                 s1 = s1 + 0x10
  4746: 7b 16 10                 u64 [sp + 0x10] = s1
  4749: 64 17                    a0 = sp
  4751: 95 18 10                 a1 = sp + 0x10
  4754: 64 59                    a2 = s0
  4756: 50 20 e8 00 32 07 03     ra = 232, jump @13954
      :                          @329 [@dyn 116]
  4763: 33 07 01                 a0 = 0x1
  4766: 7c 18 08                 a1 = u8 [sp + 0x8]
  4769: 52 08 1b                 jump @331 if a1 != 0
      :                          @330
  4772: 82 17                    a0 = u64 [sp]
  4774: 82 78 28                 a1 = u64 [a0 + 0x28]
  4777: 82 77 20                 a0 = u64 [a0 + 0x20]
  4780: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4783: 33 08 99 30 01           a1 = 0x13099
  4788: 33 09 01                 a2 = 0x1
  4791: b4 a0 02 ea 00           ra = 234, jump [a3]
      :                          @331 [@dyn 117]
  4796: 82 10 28                 ra = u64 [sp + 0x28]
  4799: 82 15 20                 s0 = u64 [sp + 0x20]
  4802: 82 16 18                 s1 = u64 [sp + 0x18]
  4805: 95 11 30                 sp = sp + 0x30
  4808: 32 00                    ret
      :                          @332 [@dyn 118]
  4810: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  4813: 7b 10 28                 u64 [sp + 0x28] = ra
  4816: 7b 15 20                 u64 [sp + 0x20] = s0
  4819: 7b 16 18                 u64 [sp + 0x18] = s1
  4822: 64 85                    s0 = a1
  4824: 82 88 28                 a1 = u64 [a1 + 0x28]
  4827: 82 5a 20                 a3 = u64 [s0 + 0x20]
  4830: 82 8b 18                 a4 = u64 [a1 + 0x18]
  4833: 64 76                    s1 = a0
  4835: 33 08 58 30 01           a1 = 0x13058
  4840: 33 09 01                 a2 = 0x1
  4843: 64 a7                    a0 = a3
  4845: b4 b0 02 ee 00           ra = 238, jump [a4]
      :                          @333 [@dyn 119]
  4850: 7b 15                    u64 [sp] = s0
  4852: 78 17 08                 u8 [sp + 0x8] = a0
  4855: 46 11 09                 u8 [sp + 9] = 0
  4858: 7b 16 10                 u64 [sp + 0x10] = s1
  4861: 33 05 18                 s0 = 0x18
  4864: 64 17                    a0 = sp
  4866: 95 18 10                 a1 = sp + 0x10
  4869: 33 09 18                 a2 = 0x18
  4872: 50 20 f0 00 be 06 03     ra = 240, jump @13954
      :                          @334 [@dyn 120]
  4879: 95 67 08                 a0 = s1 + 0x8
  4882: 7b 17 10                 u64 [sp + 0x10] = a0
  4885: 64 17                    a0 = sp
  4887: 95 18 10                 a1 = sp + 0x10
  4890: 64 59                    a2 = s0
  4892: 50 20 f2 00 aa 06 03     ra = 242, jump @13954
      :                          @335 [@dyn 121]
  4899: 95 67 10                 a0 = s1 + 0x10
  4902: 7b 17 10                 u64 [sp + 0x10] = a0
  4905: 64 17                    a0 = sp
  4907: 95 18 10                 a1 = sp + 0x10
  4910: 64 59                    a2 = s0
  4912: 50 20 f4 00 96 06 03     ra = 244, jump @13954
      :                          @336 [@dyn 122]
  4919: 95 67 18                 a0 = s1 + 0x18
  4922: 7b 17 10                 u64 [sp + 0x10] = a0
  4925: 64 17                    a0 = sp
  4927: 95 18 10                 a1 = sp + 0x10
  4930: 64 59                    a2 = s0
  4932: 50 20 f6 00 82 06 03     ra = 246, jump @13954
      :                          @337 [@dyn 123]
  4939: 95 67 20                 a0 = s1 + 0x20
  4942: 7b 17 10                 u64 [sp + 0x10] = a0
  4945: 64 17                    a0 = sp
  4947: 95 18 10                 a1 = sp + 0x10
  4950: 64 59                    a2 = s0
  4952: 50 20 f8 00 6e 06 03     ra = 248, jump @13954
      :                          @338 [@dyn 124]
  4959: 95 67 28                 a0 = s1 + 0x28
  4962: 7b 17 10                 u64 [sp + 0x10] = a0
  4965: 64 17                    a0 = sp
  4967: 95 18 10                 a1 = sp + 0x10
  4970: 64 59                    a2 = s0
  4972: 50 20 fa 00 5a 06 03     ra = 250, jump @13954
      :                          @339 [@dyn 125]
  4979: 95 67 30                 a0 = s1 + 0x30
  4982: 7b 17 10                 u64 [sp + 0x10] = a0
  4985: 64 17                    a0 = sp
  4987: 95 18 10                 a1 = sp + 0x10
  4990: 64 59                    a2 = s0
  4992: 50 20 fc 00 46 06 03     ra = 252, jump @13954
      :                          @340 [@dyn 126]
  4999: 95 67 38                 a0 = s1 + 0x38
  5002: 7b 17 10                 u64 [sp + 0x10] = a0
  5005: 64 17                    a0 = sp
  5007: 95 18 10                 a1 = sp + 0x10
  5010: 64 59                    a2 = s0
  5012: 50 20 fe 00 32 06 03     ra = 254, jump @13954
      :                          @341 [@dyn 127]
  5019: 33 07 01                 a0 = 0x1
  5022: 7c 18 08                 a1 = u8 [sp + 0x8]
  5025: 52 08 1b                 jump @343 if a1 != 0
      :                          @342
  5028: 82 17                    a0 = u64 [sp]
  5030: 82 78 28                 a1 = u64 [a0 + 0x28]
  5033: 82 77 20                 a0 = u64 [a0 + 0x20]
  5036: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5039: 33 08 99 30 01           a1 = 0x13099
  5044: 33 09 01                 a2 = 0x1
  5047: b4 a0 02 00 01           ra = 256, jump [a3]
      :                          @343 [@dyn 128]
  5052: 82 10 28                 ra = u64 [sp + 0x28]
  5055: 82 15 20                 s0 = u64 [sp + 0x20]
  5058: 82 16 18                 s1 = u64 [sp + 0x18]
  5061: 95 11 30                 sp = sp + 0x30
  5064: 32 00                    ret
      :                          @344
  5066: 95 11 28 ff              sp = sp + 0xffffffffffffff28
  5070: 7b 10 d0 00              u64 [sp + 0xd0] = ra
  5074: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  5078: 7b 16 c0 00              u64 [sp + 0xc0] = s1
  5082: 33 09 15                 a2 = 0x15
  5085: 64 83                    t1 = a1
  5087: 7b 17 68                 u64 [sp + 0x68] = a0
  5090: ae 98 25                 jump @347 if a1 >=u a2
      :                          @345
  5093: 33 07 01                 a0 = 0x1
  5096: ae 37 48 05              jump @446 if a0 >=u t1
      :                          @346
  5100: 33 09 01                 a2 = 0x1
  5103: 82 17 68                 a0 = u64 [sp + 0x68]
  5106: 64 38                    a1 = t1
  5108: 82 10 d0 00              ra = u64 [sp + 0xd0]
  5112: 82 15 c8 00              s0 = u64 [sp + 0xc8]
  5116: 82 16 c0 00              s1 = u64 [sp + 0xc0]
  5120: 95 11 d8 00              sp = sp + 0xd8
  5124: 28 c4 14                 jump @800
      :                          @347
  5127: 97 37 02                 a0 = t1 << 0x2
  5130: 14 08 f8 ff ff ff ff ff ff 7f a1 = 0x7ffffffffffffff8
  5140: d2 87 07                 a0 = a0 & a1
  5143: 7b 17 20                 u64 [sp + 0x20] = a0
  5146: 33 07 b0 02 03           a0 = 0x302b0
  5151: 33 02 00 00 10           t0 = 0x100000
  5156: c8 27 09                 a2 = a0 + t0
  5159: 01                       fallthrough
      :                          @348
  5160: 82 9a                    a3 = u64 [a2]
  5162: 82 1b 20                 a4 = u64 [sp + 0x20]
  5165: c8 ab 0b                 a4 = a4 + a3
  5168: ac ab 12 05              jump @447 if a4 <u a3
      :                          @349
  5172: 95 b8 08                 a1 = a4 + 0x8
  5175: d8 b8 0c                 a5 = a1 <u a4
  5178: d8 82 08                 a1 = t0 <u a1
  5181: d4 c8 08                 a1 = a1 | a5
  5184: 52 08 02 05              jump @447 if a1 != 0
      :                          @350
  5188: c9 b7 08                 a1 = a0 - a4
  5191: c8 28 08                 a1 = a1 + t0
  5194: 84 8c 07                 a5 = a1 & 0x7
  5197: c8 cb 0b                 a4 = a4 + a5
  5200: 01                       fallthrough
      :                          @351
  5201: 82 95                    s0 = u64 [a2]
  5203: ab a5 d5                 jump @348 if s0 != a3
      :                          @352
  5206: 7b 9b                    u64 [a2] = a4
  5208: c9 c8 08                 a1 = a1 - a5
  5211: 7b 18 b0 00              u64 [sp + 0xb0] = a1
  5215: 33 09 b0 02 03           a2 = 0x302b0
  5220: 33 02 00 00 10           t0 = 0x100000
  5225: c8 29 0b                 a4 = a2 + t0
  5228: 01                       fallthrough
      :                          @353
  5229: 82 bc                    a5 = u64 [a4]
  5231: 95 c6 00 01              s1 = a5 + 0x100
  5235: ac c6 cf 04              jump @447 if s1 <u a5
      :                          @354
  5239: 95 67 08                 a0 = s1 + 0x8
  5242: d8 67 08                 a1 = a0 <u s1
  5245: d8 72 07                 a0 = t0 <u a0
  5248: d4 87 07                 a0 = a0 | a1
  5251: 52 07 bf 04              jump @447 if a0 != 0
      :                          @355
  5255: c9 69 07                 a0 = a2 - s1
  5258: c8 27 07                 a0 = a0 + t0
  5261: 84 78 07                 a1 = a0 & 0x7
  5264: c8 86 06                 s1 = s1 + a1
  5267: 01                       fallthrough
      :                          @356
  5268: 82 b5                    s0 = u64 [a4]
  5270: ab c5 d7                 jump @353 if s0 != a5
      :                          @357
  5273: 7b b6                    u64 [a4] = s1
  5275: 33 0c                    a5 = 0
  5277: 33 02                    t0 = 0
  5279: c9 87 04                 t2 = a0 - a1
  5282: 82 17 68                 a0 = u64 [sp + 0x68]
  5285: 95 78 10                 a1 = a0 + 0x10
  5288: 7b 18                    u64 [sp] = a1
  5290: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
  5293: 7b 17 38                 u64 [sp + 0x38] = a0
  5296: 49 11 28 10              u64 [sp + 40] = 0x10
  5300: 33 08 b0 02 03           a1 = 0x302b0
  5305: 49 11 08 01 00 01        u64 [sp + 8] = 0x10001
  5311: 7b 18 10                 u64 [sp + 0x10] = a1
  5314: 95 88 00 00 10           a1 = a1 + 0x100000
  5319: 7b 18 18                 u64 [sp + 0x18] = a1
  5322: 7b 13 58                 u64 [sp + 0x58] = t1
  5325: 28 0c                    jump @360
      :                          @358
  5327: 64 54                    t2 = s0
  5329: 82 1c 30                 a5 = u64 [sp + 0x30]
  5332: 01                       fallthrough
      :                          @359
  5333: ae 3c 00 04              jump @434 if a5 >=u t1
      :                          @360
  5337: 64 c0                    ra = a5
  5339: c9 c3 09                 a2 = t1 - a5
  5342: 97 cb 03                 a4 = a5 << 0x3
  5345: 82 17 68                 a0 = u64 [sp + 0x68]
  5348: c8 b7 07                 a0 = a0 + a4
  5351: 55 19 02 63              jump @368 if a2 >=u 2
      :                          @361
  5355: 64 98                    a1 = a2
  5357: c8 08 0c                 a5 = a1 + ra
  5360: 28 06                    jump @363
      :                          @362
  5362: c8 08 0c                 a5 = a1 + ra
  5365: 01                       fallthrough
      :                          @363
  5366: d8 0c 09                 a2 = a5 <u ra
  5369: d8 c3 0a                 a3 = t1 <u a5
  5372: d4 a9 09                 a2 = a2 | a3
  5375: 52 09 47 04              jump @451 if a2 != 0
      :                          @364
  5379: 88 89 0a                 a2 = a1 <u 0xa
  5382: d8 3c 0a                 a3 = a5 <u t1
  5385: d2 a9 09                 a2 = a2 & a3
  5388: 7b 12 a8 00              u64 [sp + 0xa8] = t0
  5392: 7b 10 a0 00              u64 [sp + 0xa0] = ra
  5396: 51 09 9d 00              jump @380 if a2 == 0
      :                          @365
  5400: 95 09 0a                 a2 = ra + 0xa
  5403: e6 39 0a                 a3 = minu(a2, t1)
  5406: ac 0a 29 04              jump @452 if a3 <u ra
      :                          @366
  5410: 64 45                    s0 = t2
  5412: 33 09 01                 a2 = 0x1
  5415: e4 98 09                 a2 = maxu(a1, a2)
  5418: c9 0a 06                 s1 = a3 - ra
  5421: 64 68                    a1 = s1
  5423: 7b 1a 30                 u64 [sp + 0x30] = a3
  5426: 50 20 02 01 96 13        ra = 258, jump @800
      :                          @367 [@dyn 129]
  5432: 82 10 a0 00              ra = u64 [sp + 0xa0]
  5436: 82 1c 30                 a5 = u64 [sp + 0x30]
  5439: 82 13 58                 t1 = u64 [sp + 0x58]
  5442: 64 54                    t2 = s0
  5444: 82 12 a8 00              t0 = u64 [sp + 0xa8]
  5448: 28 6d                    jump @381
      :                          @368
  5450: 82 7a 08                 a3 = u64 [a0 + 0x8]
  5453: 82 78                    a1 = u64 [a0]
  5455: ae 8a ff 00              jump @390 if a3 >=u a1
      :                          @369
  5459: 33 08 02                 a1 = 0x2
  5462: aa 89 1f                 jump @374 if a2 == a1
      :                          @370
  5465: 82 18                    a1 = u64 [sp]
  5467: c8 8b 0b                 a4 = a4 + a1
  5470: 33 08 02                 a1 = 0x2
  5473: 01                       fallthrough
      :                          @371
  5474: 64 ac                    a5 = a3
  5476: 82 ba                    a3 = u64 [a4]
  5478: ae ca 0f                 jump @374 if a3 >=u a5
      :                          @372
  5481: 95 88 01                 a1 = a1 + 0x1
  5484: 95 bb 08                 a4 = a4 + 0x8
  5487: ab 89 f3                 jump @371 if a2 != a1
      :                          @373
  5490: 64 98                    a1 = a2
  5492: 01                       fallthrough
      :                          @374
  5493: c8 08 0c                 a5 = a1 + ra
  5496: ac 8c d0 03              jump @453 if a5 <u a1
      :                          @375
  5500: ac c3 cd 03              jump @454 if t1 <u a5
      :                          @376
  5504: 98 89 01                 a2 = a1 >> 0x1
  5507: 51 09 73 ff              jump @363 if a2 == 0
      :                          @377
  5511: 64 c6                    s1 = a5
  5513: c8 08 0a                 a3 = a1 + ra
  5516: 97 aa 03                 a3 = a3 << 0x3
  5519: 82 1b 38                 a4 = u64 [sp + 0x38]
  5522: c8 ba 0a                 a3 = a3 + a4
  5525: 64 7b                    a4 = a0
  5527: 01                       fallthrough
      :                          @378
  5528: 82 ac                    a5 = u64 [a3]
  5530: 82 b5                    s0 = u64 [a4]
  5532: 7b bc                    u64 [a4] = a5
  5534: 7b a5                    u64 [a3] = s0
  5536: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  5539: 95 bb 08                 a4 = a4 + 0x8
  5542: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
  5545: 52 09 ef                 jump @378 if a2 != 0
      :                          @379
  5548: 64 6c                    a5 = s1
  5550: 28 48 ff                 jump @363
      :                          @380
  5553: c9 0c 06                 s1 = a5 - ra
  5556: 01                       fallthrough
      :                          @381
  5557: 97 27 04                 a0 = t0 << 0x4
  5560: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  5564: 82 17 28                 a0 = u64 [sp + 0x28]
  5567: 7b 1c 30                 u64 [sp + 0x30] = a5
  5570: ab 72 e4 00              jump @401 if t0 != a0
      :                          @382
  5574: 7b 16 98 00              u64 [sp + 0x98] = s1
  5578: 97 27 01                 a0 = t0 << 0x1
  5581: 7b 17 28                 u64 [sp + 0x28] = a0
  5584: 97 22 05                 t0 = t0 << 0x5
  5587: 82 16 10                 s1 = u64 [sp + 0x10]
  5590: 33 03 00 00 10           t1 = 0x100000
  5595: 82 17 18                 a0 = u64 [sp + 0x18]
  5598: 01                       fallthrough
      :                          @383
  5599: 82 78                    a1 = u64 [a0]
  5601: c8 28 09                 a2 = a1 + t0
  5604: ac 89 5e 03              jump @447 if a2 <u a1
      :                          @384
  5608: 95 9a 08                 a3 = a2 + 0x8
  5611: d8 9a 0b                 a4 = a3 <u a2
  5614: d8 a3 0a                 a3 = t1 <u a3
  5617: d4 ba 0a                 a3 = a3 | a4
  5620: 52 0a 4e 03              jump @447 if a3 != 0
      :                          @385
  5624: c9 96 0a                 a3 = s1 - a2
  5627: c8 3a 0a                 a3 = a3 + t1
  5630: 84 ab 07                 a4 = a3 & 0x7
  5633: c8 b9 09                 a2 = a2 + a4
  5636: 01                       fallthrough
      :                          @386
  5637: 82 7c                    a5 = u64 [a0]
  5639: ab 8c d8                 jump @383 if a5 != a1
      :                          @387
  5642: 7b 79                    u64 [a0] = a2
  5644: c9 ba 07                 a0 = a3 - a4
  5647: 7b 17 60                 u64 [sp + 0x60] = a0
  5650: 64 45                    s0 = t2
  5652: 64 48                    a1 = t2
  5654: 82 16 b8 00              s1 = u64 [sp + 0xb8]
  5658: 64 69                    a2 = s1
  5660: 50 20 04 01 c4 f3 02     ra = 260, jump @13635
      :                          @388 [@dyn 130]
  5667: 82 17 08                 a0 = u64 [sp + 0x8]
  5670: 82 12 a8 00              t0 = u64 [sp + 0xa8]
  5674: ac 72 48                 jump @395 if t0 <u a0
      :                          @389
  5677: 82 15 60                 s0 = u64 [sp + 0x60]
  5680: c8 65 07                 a0 = s0 + s1
  5683: 82 18 98 00              a1 = u64 [sp + 0x98]
  5687: 7b 78                    u64 [a0] = a1
  5689: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  5693: 7b 78 08                 u64 [a0 + 0x8] = a1
  5696: 95 22 01                 t0 = t0 + 0x1
  5699: 82 13 58                 t1 = u64 [sp + 0x58]
  5702: 64 27                    a0 = t0
  5704: 7b 15 60                 u64 [sp + 0x60] = s0
  5707: 28 da 00                 jump @407
      :                          @390
  5710: 33 08 02                 a1 = 0x2
  5713: aa 89 a1 fe              jump @362 if a2 == a1
      :                          @391
  5717: 82 18                    a1 = u64 [sp]
  5719: c8 8b 0b                 a4 = a4 + a1
  5722: 33 08 02                 a1 = 0x2
  5725: 01                       fallthrough
      :                          @392
  5726: 64 ac                    a5 = a3
  5728: 82 ba                    a3 = u64 [a4]
  5730: ac ca 90 fe              jump @362 if a3 <u a5
      :                          @393
  5734: 95 88 01                 a1 = a1 + 0x1
  5737: 95 bb 08                 a4 = a4 + 0x8
  5740: ab 89 f2                 jump @392 if a2 != a1
      :                          @394
  5743: 28 7c fe                 jump @361
      :                          @395
  5746: 82 1b 18                 a4 = u64 [sp + 0x18]
  5749: 82 1c 30                 a5 = u64 [sp + 0x30]
  5752: 82 14 60                 t2 = u64 [sp + 0x60]
  5755: 82 10 a0 00              ra = u64 [sp + 0xa0]
  5759: 01                       fallthrough
      :                          @396
  5760: 82 b7                    a0 = u64 [a4]
  5762: c9 7b 08                 a1 = a4 - a0
  5765: ab 58 19                 jump @400 if a1 != s0
      :                          @397
  5768: c9 67 08                 a1 = a0 - s1
  5771: 01                       fallthrough
      :                          @398
  5772: 82 b9                    a2 = u64 [a4]
  5774: ab 79 f2                 jump @396 if a2 != a0
      :                          @399
  5777: 7b b8                    u64 [a4] = a1
  5779: 33 0a                    a3 = 0
  5781: 82 13 58                 t1 = u64 [sp + 0x58]
  5784: 82 16 98 00              s1 = u64 [sp + 0x98]
  5788: 28 0a                    jump @401
      :                          @400
  5790: 82 13 58                 t1 = u64 [sp + 0x58]
  5793: 82 16 98 00              s1 = u64 [sp + 0x98]
  5797: 01                       fallthrough
      :                          @401
  5798: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  5802: c8 47 07                 a0 = a0 + t2
  5805: 7b 76                    u64 [a0] = s1
  5807: 95 22 01                 t0 = t0 + 0x1
  5810: 7b 70 08                 u64 [a0 + 0x8] = ra
  5813: 64 45                    s0 = t2
  5815: 53 12 02 1e fe           jump @359 if t0 <u 2
      :                          @402
  5820: 64 27                    a0 = t0
  5822: 7b 15 60                 u64 [sp + 0x60] = s0
  5825: 28 64                    jump @407
      :                          @403
  5827: 64 56                    s1 = s0
  5829: 64 b8                    a1 = a4
  5831: 01                       fallthrough
      :                          @404
  5832: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  5836: 95 57 08                 a0 = s0 + 0x8
  5839: 7b 17 70                 u64 [sp + 0x70] = a0
  5842: c9 89 09                 a2 = a2 - a1
  5845: 64 67                    a0 = s1
  5847: 50 20 06 01 09 f3 02     ra = 262, jump @13635
      :                          @405 [@dyn 131]
  5854: 82 17 78                 a0 = u64 [sp + 0x78]
  5857: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  5861: c8 87 07                 a0 = a0 + a1
  5864: 7b 57                    u64 [s0] = a0
  5866: 82 17 80 00              a0 = u64 [sp + 0x80]
  5870: 82 18 70                 a1 = u64 [sp + 0x70]
  5873: 7b 87                    u64 [a1] = a0
  5875: 82 1a 88 00              a3 = u64 [sp + 0x88]
  5879: 95 a8 10                 a1 = a3 + 0x10
  5882: 82 17 90 00              a0 = u64 [sp + 0x90]
  5886: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
  5889: 82 19 98 00              a2 = u64 [sp + 0x98]
  5893: c8 97 07                 a0 = a0 + a2
  5896: 97 79 04                 a2 = a0 << 0x4
  5899: 64 a7                    a0 = a3
  5901: 50 20 08 01 85 f3 02     ra = 264, jump @13653
      :                          @406 [@dyn 132]
  5908: 33 02 01                 t0 = 0x1
  5911: 82 13 58                 t1 = u64 [sp + 0x58]
  5914: 82 15 60                 s0 = u64 [sp + 0x60]
  5917: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  5921: ae 72 ae fd              jump @358 if t0 >=u a0
      :                          @407
  5925: 64 76                    s1 = a0
  5927: 95 7c ff                 a5 = a0 + 0xffffffffffffffff
  5930: 97 c7 04                 a0 = a5 << 0x4
  5933: c8 57 07                 a0 = a0 + s0
  5936: 82 78 08                 a1 = u64 [a0 + 0x8]
  5939: 82 77                    a0 = u64 [a0]
  5941: c8 78 08                 a1 = a1 + a0
  5944: aa 38 3e                 jump @414 if a1 == t1
      :                          @408
  5947: 97 6a 04                 a3 = s1 << 0x4
  5950: c8 5a 00                 ra = a3 + s0
  5953: 82 09 e0                 a2 = u64 [ra + 0xffffffffffffffe0]
  5956: ae 97 32                 jump @414 if a0 >=u a2
      :                          @409
  5959: 33 02 02                 t0 = 0x2
  5962: 82 14 b0 00              t2 = u64 [sp + 0xb0]
  5966: ae 62 81 fd              jump @358 if t0 >=u s1
      :                          @410
  5970: 95 6a fd                 a3 = s1 + 0xfffffffffffffffd
  5973: 97 a8 04                 a1 = a3 << 0x4
  5976: c8 58 08                 a1 = a1 + s0
  5979: 82 88                    a1 = u64 [a1]
  5981: c8 79 0b                 a4 = a2 + a0
  5984: ae 8b 2a                 jump @416 if a4 >=u a1
      :                          @411
  5987: 33 02 03                 t0 = 0x3
  5990: ae 62 69 fd              jump @358 if t0 >=u s1
      :                          @412
  5994: 82 0b c0                 a4 = u64 [ra + 0xffffffffffffffc0]
  5997: c8 89 09                 a2 = a2 + a1
  6000: ae b9 1a                 jump @416 if a2 >=u a4
      :                          @413
  6003: 28 58 01                 jump @433
      :                          @414
  6006: 82 14 b0 00              t2 = u64 [sp + 0xb0]
  6010: 53 16 03 13              jump @417 if s1 <u 3
      :                          @415
  6014: 95 6a fd                 a3 = s1 + 0xfffffffffffffffd
  6017: 97 a8 04                 a1 = a3 << 0x4
  6020: c8 58 08                 a1 = a1 + s0
  6023: 82 88                    a1 = u64 [a1]
  6025: 01                       fallthrough
      :                          @416
  6026: ac 78 07                 jump @418 if a1 <u a0
      :                          @417
  6029: 95 6a fe                 a3 = s1 + 0xfffffffffffffffe
  6032: 01                       fallthrough
      :                          @418
  6033: ae 6a b2 01              jump @448 if a3 >=u s1
      :                          @419
  6037: 95 a7 01                 a0 = a3 + 0x1
  6040: ae 67 ab 01              jump @448 if a0 >=u s1
      :                          @420
  6044: 97 a8 04                 a1 = a3 << 0x4
  6047: c8 85 09                 a2 = s0 + a1
  6050: 97 77 04                 a0 = a0 << 0x4
  6053: c8 57 07                 a0 = a0 + s0
  6056: 82 7b                    a4 = u64 [a0]
  6058: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  6062: 82 78 08                 a1 = u64 [a0 + 0x8]
  6065: 82 97 08                 a0 = u64 [a2 + 0x8]
  6068: c8 b8 08                 a1 = a1 + a4
  6071: ac 78 8d 01              jump @449 if a1 <u a0
      :                          @421
  6075: ac 83 8a 01              jump @450 if t1 <u a1
      :                          @422
  6079: 7b 1b 78                 u64 [sp + 0x78] = a4
  6082: 7b 1a 90 00              u64 [sp + 0x90] = a3
  6086: 7b 16 98 00              u64 [sp + 0x98] = s1
  6090: 7b 1c a0 00              u64 [sp + 0xa0] = a5
  6094: 7b 19 88 00              u64 [sp + 0x88] = a2
  6098: 82 9b                    a4 = u64 [a2]
  6100: c9 78 0a                 a3 = a1 - a0
  6103: 7b 17 80 00              u64 [sp + 0x80] = a0
  6107: 97 76 03                 s1 = a0 << 0x3
  6110: 82 17 68                 a0 = u64 [sp + 0x68]
  6113: c8 76 06                 s1 = s1 + a0
  6116: 97 b9 03                 a2 = a4 << 0x3
  6119: c8 96 05                 s0 = s1 + a2
  6122: c9 ba 07                 a0 = a3 - a4
  6125: 97 88 03                 a1 = a1 << 0x3
  6128: 7b 18 70                 u64 [sp + 0x70] = a1
  6131: 7b 1b b8 00              u64 [sp + 0xb8] = a4
  6135: ae b7 69                 jump @428 if a0 >=u a4
      :                          @423
  6138: 97 79 03                 a2 = a0 << 0x3
  6141: 7b 19 48                 u64 [sp + 0x48] = a2
  6144: 7b 17 50                 u64 [sp + 0x50] = a0
  6147: 64 47                    a0 = t2
  6149: 64 58                    a1 = s0
  6151: 50 20 0a 01 d9 f1 02     ra = 266, jump @13635
      :                          @424 [@dyn 133]
  6158: 82 1b b0 00              a4 = u64 [sp + 0xb0]
  6162: 82 17 50                 a0 = u64 [sp + 0x50]
  6165: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  6169: e5 78 07                 a0 = mins(a1, a0)
  6172: 82 19 48                 a2 = u64 [sp + 0x48]
  6175: c8 b9 09                 a2 = a2 + a4
  6178: 58 07 a1 fe              jump @403 if a0 <=s 0
      :                          @425
  6182: 82 17 38                 a0 = u64 [sp + 0x38]
  6185: 82 18 70                 a1 = u64 [sp + 0x70]
  6188: c8 87 07                 a0 = a0 + a1
  6191: 01                       fallthrough
      :                          @426
  6192: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
  6195: 82 5a f8                 a3 = u64 [s0 + 0xfffffffffffffff8]
  6198: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
  6201: d8 a8 08                 a1 = a1 <u a3
  6204: 97 8a 03                 a3 = a1 << 0x3
  6207: c9 a5 05                 s0 = s0 - a3
  6210: c8 a9 09                 a2 = a2 + a3
  6213: 64 5a                    a3 = s0
  6215: da 89 0a                 a3 = a2 if a1 == 0
  6218: 82 a8                    a1 = u64 [a3]
  6220: 7b 78                    u64 [a0] = a1
  6222: d8 56 08                 a1 = s1 <u s0
  6225: d8 9b 0a                 a3 = a4 <u a2
  6228: d2 a8 08                 a1 = a1 & a3
  6231: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
  6234: 52 08 d6                 jump @426 if a1 != 0
      :                          @427
  6237: 28 66 fe                 jump @403
      :                          @428
  6240: 8f b7                    a0 = a4 >s 0
  6242: 7b 17 50                 u64 [sp + 0x50] = a0
  6245: 64 47                    a0 = t2
  6247: 64 68                    a1 = s1
  6249: 7b 1a 40                 u64 [sp + 0x40] = a3
  6252: 7b 19 48                 u64 [sp + 0x48] = a2
  6255: 50 20 0c 01 71 f1 02     ra = 268, jump @13635
      :                          @429 [@dyn 134]
  6262: 82 18 b0 00              a1 = u64 [sp + 0xb0]
  6266: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  6270: 82 19 40                 a2 = u64 [sp + 0x40]
  6273: d9 97 07                 a0 = a0 <s a2
  6276: 82 19 50                 a2 = u64 [sp + 0x50]
  6279: d2 97 07                 a0 = a0 & a2
  6282: 82 19 48                 a2 = u64 [sp + 0x48]
  6285: c8 89 09                 a2 = a2 + a1
  6288: 51 07 38 fe              jump @404 if a0 == 0
      :                          @430
  6292: 82 12 68                 t0 = u64 [sp + 0x68]
  6295: 82 17 70                 a0 = u64 [sp + 0x70]
  6298: c8 72 02                 t0 = t0 + a0
  6301: 01                       fallthrough
      :                          @431
  6302: 82 5a                    a3 = u64 [s0]
  6304: 82 8b                    a4 = u64 [a1]
  6306: d8 ba 0c                 a5 = a3 <u a4
  6309: 85 c7 01                 a0 = a5 ^ 0x1
  6312: e6 ba 0a                 a3 = minu(a3, a4)
  6315: 7b 6a                    u64 [s1] = a3
  6317: 97 cc 03                 a5 = a5 << 0x3
  6320: c8 c5 05                 s0 = s0 + a5
  6323: 97 77 03                 a0 = a0 << 0x3
  6326: c8 78 08                 a1 = a1 + a0
  6329: d8 98 07                 a0 = a1 <u a2
  6332: d8 25 0a                 a3 = s0 <u t0
  6335: d2 a7 07                 a0 = a0 & a3
  6338: 95 66 08                 s1 = s1 + 0x8
  6341: 52 07 d9                 jump @431 if a0 != 0
      :                          @432
  6344: 28 00 fe                 jump @404
      :                          @433
  6347: 64 54                    t2 = s0
  6349: 64 62                    t0 = s1
  6351: 82 1c 30                 a5 = u64 [sp + 0x30]
  6354: 28 03 fc                 jump @359
      :                          @434
  6357: 82 18 28                 a1 = u64 [sp + 0x28]
  6360: 56 38 00 00 01 28        jump @440 if a1 >u 65536
      :                          @435
  6366: 97 87 04                 a0 = a1 << 0x4
  6369: 33 08 b0 02 03           a1 = 0x302b0
  6374: 95 88 00 00 10           a1 = a1 + 0x100000
  6379: 01                       fallthrough
      :                          @436
  6380: 82 89                    a2 = u64 [a1]
  6382: c9 98 0a                 a3 = a1 - a2
  6385: ab 4a 0f                 jump @440 if a3 != t2
      :                          @437
  6388: c9 79 0a                 a3 = a2 - a0
  6391: 01                       fallthrough
      :                          @438
  6392: 82 8b                    a4 = u64 [a1]
  6394: ab 9b f2                 jump @436 if a4 != a2
      :                          @439
  6397: 7b 8a                    u64 [a1] = a3
  6399: 01                       fallthrough
      :                          @440
  6400: 33 07 01 00 04           a0 = 0x40001
  6405: 82 1c b0 00              a5 = u64 [sp + 0xb0]
  6409: ac 37 27                 jump @446 if a0 <u t1
      :                          @441
  6412: 33 07 b0 02 03           a0 = 0x302b0
  6417: 95 77 00 00 10           a0 = a0 + 0x100000
  6422: 01                       fallthrough
      :                          @442
  6423: 82 78                    a1 = u64 [a0]
  6425: c9 87 09                 a2 = a0 - a1
  6428: ab c9 14                 jump @446 if a2 != a5
      :                          @443
  6431: 82 19 20                 a2 = u64 [sp + 0x20]
  6434: c9 98 09                 a2 = a1 - a2
  6437: 01                       fallthrough
      :                          @444
  6438: 82 7a                    a3 = u64 [a0]
  6440: ab 8a ef                 jump @442 if a3 != a1
      :                          @445
  6443: 7b 79                    u64 [a0] = a2
  6445: 33 0b                    a4 = 0
  6447: 01                       fallthrough
      :                          @446
  6448: 82 10 d0 00              ra = u64 [sp + 0xd0]
  6452: 82 15 c8 00              s0 = u64 [sp + 0xc8]
  6456: 82 16 c0 00              s1 = u64 [sp + 0xc0]
  6460: 95 11 d8 00              sp = sp + 0xd8
  6464: 32 00                    ret
      :                          @447
  6466: 00                       trap
      :                          @448
  6467: 00                       trap
      :                          @449
  6468: 00                       trap
      :                          @450
  6469: 00                       trap
      :                          @451
  6470: 00                       trap
      :                          @452
  6471: 00                       trap
      :                          @453
  6472: 00                       trap
      :                          @454
  6473: 00                       trap
      :                          @455
  6474: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6477: 7b 10 20                 u64 [sp + 0x20] = ra
  6480: 7b 15 18                 u64 [sp + 0x18] = s0
  6483: 7b 16 10                 u64 [sp + 0x10] = s1
  6486: 98 82 01                 t0 = a1 >> 0x1
  6489: 84 24 fe                 t2 = t0 & 0xfffffffffffffffe
  6492: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  6495: ae 89 0c 01              jump @464 if a2 >=u a1
      :                          @456
  6499: 95 8a ff                 a3 = a1 + 0xffffffffffffffff
  6502: 68 aa                    a3 = clz a3
  6504: 9c a3 ff                 t1 = 0xffffffffffffffff >> a3
  6507: 97 8a 0d                 a3 = a1 << 0xd
  6510: d3 8a 0a                 a3 = a3 ^ a1
  6513: 98 ab 07                 a4 = a3 >> 0x7
  6516: d3 ba 0a                 a3 = a3 ^ a4
  6519: 97 ab 11                 a4 = a3 << 0x11
  6522: d3 ab 0b                 a4 = a4 ^ a3
  6525: d2 3b 0a                 a3 = a4 & t1
  6528: d8 8a 0c                 a5 = a3 <u a1
  6531: 64 85                    s0 = a1
  6533: 94 c5                    s0 = 0 if a5 != 0
  6535: c9 5a 0a                 a3 = a3 - s0
  6538: ae 8a df 00              jump @462 if a3 >=u a1
      :                          @457
  6542: 97 99 04                 a2 = a2 << 0x4
  6545: c8 79 09                 a2 = a2 + a0
  6548: 82 9c 08                 a5 = u64 [a2 + 0x8]
  6551: 82 95                    s0 = u64 [a2]
  6553: 97 aa 04                 a3 = a3 << 0x4
  6556: c8 7a 0a                 a3 = a3 + a0
  6559: 7b 1c 08                 u64 [sp + 0x8] = a5
  6562: 7b 15                    u64 [sp] = s0
  6564: 82 a0                    ra = u64 [a3]
  6566: 82 a5 08                 s0 = u64 [a3 + 0x8]
  6569: 82 16 08                 s1 = u64 [sp + 0x8]
  6572: 82 1c                    a5 = u64 [sp]
  6574: 7b 90                    u64 [a2] = ra
  6576: 7b 95 08                 u64 [a2 + 0x8] = s0
  6579: 7b a6 08                 u64 [a3 + 0x8] = s1
  6582: 7b ac                    u64 [a3] = a5
  6584: ae 84 b2 00              jump @463 if t2 >=u a1
      :                          @458
  6588: 97 b9 0d                 a2 = a4 << 0xd
  6591: d3 b9 09                 a2 = a2 ^ a4
  6594: 98 9a 07                 a3 = a2 >> 0x7
  6597: d3 a9 09                 a2 = a2 ^ a3
  6600: 97 9b 11                 a4 = a2 << 0x11
  6603: d3 9b 0b                 a4 = a4 ^ a2
  6606: d2 3b 09                 a2 = a4 & t1
  6609: d8 89 0a                 a3 = a2 <u a1
  6612: 64 8c                    a5 = a1
  6614: 94 ac                    a5 = 0 if a3 != 0
  6616: c9 c9 0a                 a3 = a2 - a5
  6619: ae 8a 8e 00              jump @462 if a3 >=u a1
      :                          @459
  6623: 97 44 04                 t2 = t2 << 0x4
  6626: c8 74 04                 t2 = t2 + a0
  6629: 82 49 08                 a2 = u64 [t2 + 0x8]
  6632: 97 aa 04                 a3 = a3 << 0x4
  6635: 82 4c                    a5 = u64 [t2]
  6637: c8 7a 0a                 a3 = a3 + a0
  6640: 7b 19 08                 u64 [sp + 0x8] = a2
  6643: 82 a9                    a2 = u64 [a3]
  6645: 7b 1c                    u64 [sp] = a5
  6647: 82 ac 08                 a5 = u64 [a3 + 0x8]
  6650: 82 15 08                 s0 = u64 [sp + 0x8]
  6653: 7b 49                    u64 [t2] = a2
  6655: 82 16                    s1 = u64 [sp]
  6657: 7b 4c 08                 u64 [t2 + 0x8] = a5
  6660: 7b a5 08                 u64 [a3 + 0x8] = s0
  6663: 86 29 01                 a2 = t0 | 0x1
  6666: 7b a6                    u64 [a3] = s1
  6668: ae 89 5f                 jump @464 if a2 >=u a1
      :                          @460
  6671: 97 ba 0d                 a3 = a4 << 0xd
  6674: d3 ba 0a                 a3 = a3 ^ a4
  6677: 98 ab 07                 a4 = a3 >> 0x7
  6680: d3 ba 0a                 a3 = a3 ^ a4
  6683: 97 ab 11                 a4 = a3 << 0x11
  6686: d3 ba 0a                 a3 = a3 ^ a4
  6689: d2 3a 0a                 a3 = a3 & t1
  6692: d8 8a 0b                 a4 = a3 <u a1
  6695: 64 8c                    a5 = a1
  6697: 94 bc                    a5 = 0 if a4 != 0
  6699: c9 ca 0a                 a3 = a3 - a5
  6702: ae 8a 3b                 jump @462 if a3 >=u a1
      :                          @461
  6705: 97 99 04                 a2 = a2 << 0x4
  6708: c8 79 09                 a2 = a2 + a0
  6711: 82 98 08                 a1 = u64 [a2 + 0x8]
  6714: 82 9b                    a4 = u64 [a2]
  6716: 97 aa 04                 a3 = a3 << 0x4
  6719: c8 a7 07                 a0 = a0 + a3
  6722: 7b 18 08                 u64 [sp + 0x8] = a1
  6725: 7b 1b                    u64 [sp] = a4
  6727: 82 78                    a1 = u64 [a0]
  6729: 82 7a 08                 a3 = u64 [a0 + 0x8]
  6732: 82 1b 08                 a4 = u64 [sp + 0x8]
  6735: 82 1c                    a5 = u64 [sp]
  6737: 7b 98                    u64 [a2] = a1
  6739: 7b 9a 08                 u64 [a2 + 0x8] = a3
  6742: 7b 7b 08                 u64 [a0 + 0x8] = a4
  6745: 7b 7c                    u64 [a0] = a5
  6747: 82 10 20                 ra = u64 [sp + 0x20]
  6750: 82 15 18                 s0 = u64 [sp + 0x18]
  6753: 82 16 10                 s1 = u64 [sp + 0x10]
  6756: 95 11 28                 sp = sp + 0x28
  6759: 32 00                    ret
      :                          @462
  6761: 00                       trap
      :                          @463
  6762: 00                       trap
      :                          @464
  6763: 00                       trap
      :                          @465
  6764: 95 11 f8                 sp = sp + 0xfffffffffffffff8
  6767: 7b 15                    u64 [sp] = s0
  6769: 98 82 01                 t0 = a1 >> 0x1
  6772: 84 24 fe                 t2 = t0 & 0xfffffffffffffffe
  6775: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  6778: ae 89 c1 00              jump @474 if a2 >=u a1
      :                          @466
  6782: 95 8a ff                 a3 = a1 + 0xffffffffffffffff
  6785: 68 aa                    a3 = clz a3
  6787: 9c a3 ff                 t1 = 0xffffffffffffffff >> a3
  6790: 97 8a 0d                 a3 = a1 << 0xd
  6793: d3 8a 0a                 a3 = a3 ^ a1
  6796: 98 ab 07                 a4 = a3 >> 0x7
  6799: d3 ba 0a                 a3 = a3 ^ a4
  6802: 97 ab 11                 a4 = a3 << 0x11
  6805: d3 ab 0b                 a4 = a4 ^ a3
  6808: d2 3b 0a                 a3 = a4 & t1
  6811: d8 8a 0c                 a5 = a3 <u a1
  6814: 64 85                    s0 = a1
  6816: 94 c5                    s0 = 0 if a5 != 0
  6818: c9 5a 0a                 a3 = a3 - s0
  6821: ae 8a 94 00              jump @472 if a3 >=u a1
      :                          @467
  6825: 97 99 03                 a2 = a2 << 0x3
  6828: c8 79 09                 a2 = a2 + a0
  6831: 97 aa 03                 a3 = a3 << 0x3
  6834: c8 7a 0a                 a3 = a3 + a0
  6837: 82 ac                    a5 = u64 [a3]
  6839: 82 95                    s0 = u64 [a2]
  6841: 7b 9c                    u64 [a2] = a5
  6843: 7b a5                    u64 [a3] = s0
  6845: ae 84 7d                 jump @473 if t2 >=u a1
      :                          @468
  6848: 97 b9 0d                 a2 = a4 << 0xd
  6851: d3 b9 09                 a2 = a2 ^ a4
  6854: 98 9a 07                 a3 = a2 >> 0x7
  6857: d3 a9 09                 a2 = a2 ^ a3
  6860: 97 9b 11                 a4 = a2 << 0x11
  6863: d3 9b 0b                 a4 = a4 ^ a2
  6866: d2 3b 09                 a2 = a4 & t1
  6869: d8 89 0a                 a3 = a2 <u a1
  6872: 64 8c                    a5 = a1
  6874: 94 ac                    a5 = 0 if a3 != 0
  6876: c9 c9 0a                 a3 = a2 - a5
  6879: ae 8a 5a                 jump @472 if a3 >=u a1
      :                          @469
  6882: 97 44 03                 t2 = t2 << 0x3
  6885: 97 aa 03                 a3 = a3 << 0x3
  6888: c8 7a 0a                 a3 = a3 + a0
  6891: 82 a9                    a2 = u64 [a3]
  6893: c8 74 04                 t2 = t2 + a0
  6896: 82 4c                    a5 = u64 [t2]
  6898: 7b 49                    u64 [t2] = a2
  6900: 86 29 01                 a2 = t0 | 0x1
  6903: 7b ac                    u64 [a3] = a5
  6905: ae 89 42                 jump @474 if a2 >=u a1
      :                          @470
  6908: 97 ba 0d                 a3 = a4 << 0xd
  6911: d3 ba 0a                 a3 = a3 ^ a4
  6914: 98 ab 07                 a4 = a3 >> 0x7
  6917: d3 ba 0a                 a3 = a3 ^ a4
  6920: 97 ab 11                 a4 = a3 << 0x11
  6923: d3 ba 0a                 a3 = a3 ^ a4
  6926: d2 3a 0a                 a3 = a3 & t1
  6929: d8 8a 0b                 a4 = a3 <u a1
  6932: 64 8c                    a5 = a1
  6934: 94 bc                    a5 = 0 if a4 != 0
  6936: c9 ca 0a                 a3 = a3 - a5
  6939: ae 8a 1e                 jump @472 if a3 >=u a1
      :                          @471
  6942: 97 99 03                 a2 = a2 << 0x3
  6945: c8 79 09                 a2 = a2 + a0
  6948: 97 aa 03                 a3 = a3 << 0x3
  6951: c8 a7 07                 a0 = a0 + a3
  6954: 82 78                    a1 = u64 [a0]
  6956: 82 9a                    a3 = u64 [a2]
  6958: 7b 98                    u64 [a2] = a1
  6960: 7b 7a                    u64 [a0] = a3
  6962: 82 15                    s0 = u64 [sp]
  6964: 95 11 08                 sp = sp + 0x8
  6967: 32 00                    ret
      :                          @472
  6969: 00                       trap
      :                          @473
  6970: 00                       trap
      :                          @474
  6971: 00                       trap
      :                          @475
  6972: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  6975: 7b 10 38                 u64 [sp + 0x38] = ra
  6978: 7b 15 30                 u64 [sp + 0x30] = s0
  6981: 7b 16 28                 u64 [sp + 0x28] = s1
  6984: 33 09 32                 a2 = 0x32
  6987: 64 82                    t0 = a1
  6989: 64 73                    t1 = a0
  6991: ae 98 34                 jump @481 if a1 >=u a2
      :                          @476
  6994: 82 37 18                 a0 = u64 [t1 + 0x18]
  6997: 82 39 08                 a2 = u64 [t1 + 0x8]
  7000: 33 08 01                 a1 = 0x1
  7003: ac 97 e5 02              jump @544 if a0 <u a2
      :                          @477
  7007: 95 39 28                 a2 = t1 + 0x28
  7010: 9a 26 02                 s1 = 0x2 - t0
  7013: 33 0b 01                 a4 = 0x1
  7016: 33 08 01                 a1 = 0x1
  7019: 01                       fallthrough
      :                          @478
  7020: c8 86 0a                 a3 = s1 + a1
  7023: aa ba c7 02              jump @543 if a3 == a4
      :                          @479
  7027: 64 7c                    a5 = a0
  7029: 82 97                    a0 = u64 [a2]
  7031: 95 88 01                 a1 = a1 + 0x1
  7034: 95 99 10                 a2 = a2 + 0x10
  7037: ae c7 ef                 jump @478 if a0 >=u a5
      :                          @480
  7040: 28 c0 02                 jump @544
      :                          @481
  7043: 82 37 08                 a0 = u64 [t1 + 0x8]
  7046: 82 38 18                 a1 = u64 [t1 + 0x18]
  7049: ae 78 0f                 jump @484 if a1 >=u a0
      :                          @482
  7052: 33 07 01                 a0 = 0x1
  7055: 33 06 01                 s1 = 0x1
  7058: ab 62 2b                 jump @488 if t0 != s1
      :                          @483
  7061: 28 b2 02                 jump @545
      :                          @484
  7064: 95 39 28                 a2 = t1 + 0x28
  7067: 9a 2a 02                 a3 = 0x2 - t0
  7070: 33 07 01                 a0 = 0x1
  7073: 33 06 01                 s1 = 0x1
  7076: 01                       fallthrough
      :                          @485
  7077: c8 6a 0c                 a5 = a3 + s1
  7080: aa 7c 9f 02              jump @545 if a5 == a0
      :                          @486
  7084: 64 8b                    a4 = a1
  7086: 82 98                    a1 = u64 [a2]
  7088: 95 99 10                 a2 = a2 + 0x10
  7091: 95 66 01                 s1 = s1 + 0x1
  7094: ae b8 ef                 jump @485 if a1 >=u a4
      :                          @487
  7097: d8 26 07                 a0 = s1 <u t0
  7100: 01                       fallthrough
      :                          @488
  7101: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7104: ae 29 a0 02              jump @549 if a2 >=u t0
      :                          @489
  7108: 51 07 9b 02              jump @548 if a0 == 0
      :                          @490
  7112: 97 97 04                 a0 = a2 << 0x4
  7115: c8 73 0b                 a4 = t1 + a0
  7118: 97 65 04                 s0 = s1 << 0x4
  7121: 82 b7 08                 a0 = u64 [a4 + 0x8]
  7124: c8 35 05                 s0 = s0 + t1
  7127: 82 58 08                 a1 = u64 [s0 + 0x8]
  7130: 7b 17 20                 u64 [sp + 0x20] = a0
  7133: 82 b7                    a0 = u64 [a4]
  7135: 7b b8 08                 u64 [a4 + 0x8] = a1
  7138: 82 58                    a1 = u64 [s0]
  7140: 82 1a 20                 a3 = u64 [sp + 0x20]
  7143: 7b 17 18                 u64 [sp + 0x18] = a0
  7146: 82 17 18                 a0 = u64 [sp + 0x18]
  7149: 7b b8                    u64 [a4] = a1
  7151: 7b 5a 08                 u64 [s0 + 0x8] = a3
  7154: 7b 57                    u64 [s0] = a0
  7156: 7b 12 08                 u64 [sp + 0x8] = t0
  7159: 7b 13 10                 u64 [sp + 0x10] = t1
  7162: 53 16 02 24              jump @494 if s1 <u 2
      :                          @491
  7166: 64 37                    a0 = t1
  7168: 64 68                    a1 = s1
  7170: 7b 1b                    u64 [sp] = a4
  7172: 50 20 0e 01 1d 0d        ra = 270, jump @813
      :                          @492 [@dyn 135]
  7178: 82 17 10                 a0 = u64 [sp + 0x10]
  7181: 64 68                    a1 = s1
  7183: 50 20 10 01 29 0f        ra = 272, jump @869
      :                          @493 [@dyn 136]
  7189: 82 1b                    a4 = u64 [sp]
  7191: 82 13 10                 t1 = u64 [sp + 0x10]
  7194: 82 12 08                 t0 = u64 [sp + 0x8]
  7197: 01                       fallthrough
      :                          @494
  7198: ae 26 3b 02              jump @547 if s1 >=u t0
      :                          @495
  7202: 82 b9 08                 a2 = u64 [a4 + 0x8]
  7205: 82 57 08                 a0 = u64 [s0 + 0x8]
  7208: 33 08 01                 a1 = 0x1
  7211: ac 97 1f                 jump @500 if a0 <u a2
      :                          @496
  7214: 95 55 18                 s0 = s0 + 0x18
  7217: 95 28 ff                 a1 = t0 + 0xffffffffffffffff
  7220: 01                       fallthrough
      :                          @497
  7221: aa 68 fc 01              jump @542 if a1 == s1
      :                          @498
  7225: 64 79                    a2 = a0
  7227: 82 57                    a0 = u64 [s0]
  7229: 95 55 10                 s0 = s0 + 0x10
  7232: 95 66 01                 s1 = s1 + 0x1
  7235: ae 97 f2                 jump @497 if a0 >=u a2
      :                          @499
  7238: d8 26 08                 a1 = s1 <u t0
  7241: 01                       fallthrough
      :                          @500
  7242: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7245: ae 29 13 02              jump @549 if a2 >=u t0
      :                          @501
  7249: 51 08 0e 02              jump @548 if a1 == 0
      :                          @502
  7253: 97 97 04                 a0 = a2 << 0x4
  7256: c8 73 0b                 a4 = t1 + a0
  7259: 97 65 04                 s0 = s1 << 0x4
  7262: 82 b7 08                 a0 = u64 [a4 + 0x8]
  7265: c8 35 05                 s0 = s0 + t1
  7268: 82 58 08                 a1 = u64 [s0 + 0x8]
  7271: 7b 17 20                 u64 [sp + 0x20] = a0
  7274: 82 b7                    a0 = u64 [a4]
  7276: 7b b8 08                 u64 [a4 + 0x8] = a1
  7279: 82 58                    a1 = u64 [s0]
  7281: 82 1a 20                 a3 = u64 [sp + 0x20]
  7284: 7b 17 18                 u64 [sp + 0x18] = a0
  7287: 82 17 18                 a0 = u64 [sp + 0x18]
  7290: 7b b8                    u64 [a4] = a1
  7292: 7b 5a 08                 u64 [s0 + 0x8] = a3
  7295: 7b 57                    u64 [s0] = a0
  7297: 53 16 02 24              jump @506 if s1 <u 2
      :                          @503
  7301: 64 37                    a0 = t1
  7303: 64 68                    a1 = s1
  7305: 7b 1b                    u64 [sp] = a4
  7307: 50 20 12 01 96 0c        ra = 274, jump @813
      :                          @504 [@dyn 137]
  7313: 82 17 10                 a0 = u64 [sp + 0x10]
  7316: 64 68                    a1 = s1
  7318: 50 20 14 01 a2 0e        ra = 276, jump @869
      :                          @505 [@dyn 138]
  7324: 82 1b                    a4 = u64 [sp]
  7326: 82 13 10                 t1 = u64 [sp + 0x10]
  7329: 82 12 08                 t0 = u64 [sp + 0x8]
  7332: 01                       fallthrough
      :                          @506
  7333: ae 26 b4 01              jump @547 if s1 >=u t0
      :                          @507
  7337: 82 b9 08                 a2 = u64 [a4 + 0x8]
  7340: 82 57 08                 a0 = u64 [s0 + 0x8]
  7343: 33 08 01                 a1 = 0x1
  7346: ac 97 1f                 jump @512 if a0 <u a2
      :                          @508
  7349: 95 55 18                 s0 = s0 + 0x18
  7352: 95 28 ff                 a1 = t0 + 0xffffffffffffffff
  7355: 01                       fallthrough
      :                          @509
  7356: aa 68 75 01              jump @542 if a1 == s1
      :                          @510
  7360: 64 79                    a2 = a0
  7362: 82 57                    a0 = u64 [s0]
  7364: 95 55 10                 s0 = s0 + 0x10
  7367: 95 66 01                 s1 = s1 + 0x1
  7370: ae 97 f2                 jump @509 if a0 >=u a2
      :                          @511
  7373: d8 26 08                 a1 = s1 <u t0
  7376: 01                       fallthrough
      :                          @512
  7377: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7380: ae 29 8c 01              jump @549 if a2 >=u t0
      :                          @513
  7384: 51 08 87 01              jump @548 if a1 == 0
      :                          @514
  7388: 97 97 04                 a0 = a2 << 0x4
  7391: c8 73 0b                 a4 = t1 + a0
  7394: 97 65 04                 s0 = s1 << 0x4
  7397: 82 b7 08                 a0 = u64 [a4 + 0x8]
  7400: c8 35 05                 s0 = s0 + t1
  7403: 82 58 08                 a1 = u64 [s0 + 0x8]
  7406: 7b 17 20                 u64 [sp + 0x20] = a0
  7409: 82 b7                    a0 = u64 [a4]
  7411: 7b b8 08                 u64 [a4 + 0x8] = a1
  7414: 82 58                    a1 = u64 [s0]
  7416: 82 1a 20                 a3 = u64 [sp + 0x20]
  7419: 7b 17 18                 u64 [sp + 0x18] = a0
  7422: 82 17 18                 a0 = u64 [sp + 0x18]
  7425: 7b b8                    u64 [a4] = a1
  7427: 7b 5a 08                 u64 [s0 + 0x8] = a3
  7430: 7b 57                    u64 [s0] = a0
  7432: 53 16 02 24              jump @518 if s1 <u 2
      :                          @515
  7436: 64 37                    a0 = t1
  7438: 64 68                    a1 = s1
  7440: 7b 1b                    u64 [sp] = a4
  7442: 50 20 16 01 0f 0c        ra = 278, jump @813
      :                          @516 [@dyn 139]
  7448: 82 17 10                 a0 = u64 [sp + 0x10]
  7451: 64 68                    a1 = s1
  7453: 50 20 18 01 1b 0e        ra = 280, jump @869
      :                          @517 [@dyn 140]
  7459: 82 1b                    a4 = u64 [sp]
  7461: 82 13 10                 t1 = u64 [sp + 0x10]
  7464: 82 12 08                 t0 = u64 [sp + 0x8]
  7467: 01                       fallthrough
      :                          @518
  7468: ae 26 2d 01              jump @547 if s1 >=u t0
      :                          @519
  7472: 82 b9 08                 a2 = u64 [a4 + 0x8]
  7475: 82 57 08                 a0 = u64 [s0 + 0x8]
  7478: 33 08 01                 a1 = 0x1
  7481: ac 97 1f                 jump @524 if a0 <u a2
      :                          @520
  7484: 95 55 18                 s0 = s0 + 0x18
  7487: 95 28 ff                 a1 = t0 + 0xffffffffffffffff
  7490: 01                       fallthrough
      :                          @521
  7491: aa 68 ee 00              jump @542 if a1 == s1
      :                          @522
  7495: 64 79                    a2 = a0
  7497: 82 57                    a0 = u64 [s0]
  7499: 95 55 10                 s0 = s0 + 0x10
  7502: 95 66 01                 s1 = s1 + 0x1
  7505: ae 97 f2                 jump @521 if a0 >=u a2
      :                          @523
  7508: d8 26 08                 a1 = s1 <u t0
  7511: 01                       fallthrough
      :                          @524
  7512: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7515: ae 29 05 01              jump @549 if a2 >=u t0
      :                          @525
  7519: 51 08 00 01              jump @548 if a1 == 0
      :                          @526
  7523: 97 97 04                 a0 = a2 << 0x4
  7526: c8 73 0b                 a4 = t1 + a0
  7529: 97 65 04                 s0 = s1 << 0x4
  7532: 82 b7 08                 a0 = u64 [a4 + 0x8]
  7535: c8 35 05                 s0 = s0 + t1
  7538: 82 58 08                 a1 = u64 [s0 + 0x8]
  7541: 7b 17 20                 u64 [sp + 0x20] = a0
  7544: 82 b7                    a0 = u64 [a4]
  7546: 7b b8 08                 u64 [a4 + 0x8] = a1
  7549: 82 58                    a1 = u64 [s0]
  7551: 82 1a 20                 a3 = u64 [sp + 0x20]
  7554: 7b 17 18                 u64 [sp + 0x18] = a0
  7557: 82 17 18                 a0 = u64 [sp + 0x18]
  7560: 7b b8                    u64 [a4] = a1
  7562: 7b 5a 08                 u64 [s0 + 0x8] = a3
  7565: 7b 57                    u64 [s0] = a0
  7567: 53 16 02 24              jump @530 if s1 <u 2
      :                          @527
  7571: 64 37                    a0 = t1
  7573: 64 68                    a1 = s1
  7575: 7b 1b                    u64 [sp] = a4
  7577: 50 20 1a 01 88 0b        ra = 282, jump @813
      :                          @528 [@dyn 141]
  7583: 82 17 10                 a0 = u64 [sp + 0x10]
  7586: 64 68                    a1 = s1
  7588: 50 20 1c 01 94 0d        ra = 284, jump @869
      :                          @529 [@dyn 142]
  7594: 82 1b                    a4 = u64 [sp]
  7596: 82 13 10                 t1 = u64 [sp + 0x10]
  7599: 82 12 08                 t0 = u64 [sp + 0x8]
  7602: 01                       fallthrough
      :                          @530
  7603: ae 26 a6 00              jump @547 if s1 >=u t0
      :                          @531
  7607: 82 b9 08                 a2 = u64 [a4 + 0x8]
  7610: 82 57 08                 a0 = u64 [s0 + 0x8]
  7613: 33 08 01                 a1 = 0x1
  7616: ac 97 1e                 jump @536 if a0 <u a2
      :                          @532
  7619: 95 55 18                 s0 = s0 + 0x18
  7622: 95 28 ff                 a1 = t0 + 0xffffffffffffffff
  7625: 01                       fallthrough
      :                          @533
  7626: aa 68 67                 jump @542 if a1 == s1
      :                          @534
  7629: 64 79                    a2 = a0
  7631: 82 57                    a0 = u64 [s0]
  7633: 95 55 10                 s0 = s0 + 0x10
  7636: 95 66 01                 s1 = s1 + 0x1
  7639: ae 97 f3                 jump @533 if a0 >=u a2
      :                          @535
  7642: d8 26 08                 a1 = s1 <u t0
  7645: 01                       fallthrough
      :                          @536
  7646: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7649: ae 29 7f                 jump @549 if a2 >=u t0
      :                          @537
  7652: 51 08 7b                 jump @548 if a1 == 0
      :                          @538
  7655: 97 97 04                 a0 = a2 << 0x4
  7658: c8 37 07                 a0 = a0 + t1
  7661: 97 68 04                 a1 = s1 << 0x4
  7664: 82 7a 08                 a3 = u64 [a0 + 0x8]
  7667: c8 38 08                 a1 = a1 + t1
  7670: 82 8b 08                 a4 = u64 [a1 + 0x8]
  7673: 7b 1a 20                 u64 [sp + 0x20] = a3
  7676: 82 7a                    a3 = u64 [a0]
  7678: 7b 7b 08                 u64 [a0 + 0x8] = a4
  7681: 82 8b                    a4 = u64 [a1]
  7683: 82 1c 20                 a5 = u64 [sp + 0x20]
  7686: 7b 1a 18                 u64 [sp + 0x18] = a3
  7689: 82 1a 18                 a3 = u64 [sp + 0x18]
  7692: 7b 7b                    u64 [a0] = a4
  7694: 7b 8c 08                 u64 [a1 + 0x8] = a5
  7697: 7b 8a                    u64 [a1] = a3
  7699: 53 16 02 42              jump @546 if s1 <u 2
      :                          @539
  7703: 64 37                    a0 = t1
  7705: 64 68                    a1 = s1
  7707: 64 35                    s0 = t1
  7709: 50 20 1e 01 04 0b        ra = 286, jump @813
      :                          @540 [@dyn 143]
  7715: 64 57                    a0 = s0
  7717: 64 68                    a1 = s1
  7719: 50 20 20 01 11 0d        ra = 288, jump @869
      :                          @541 [@dyn 144]
  7725: 33 07                    a0 = 0
  7727: 28 18                    jump @545
      :                          @542
  7729: 33 07 01                 a0 = 0x1
  7732: 28 13                    jump @545
      :                          @543
  7734: 64 28                    a1 = t0
  7736: d3 28 07                 a0 = a1 ^ t0
  7739: 88 77 01                 a0 = a0 <u 0x1
  7742: 28 09                    jump @545
      :                          @544
  7744: d3 28 07                 a0 = a1 ^ t0
  7747: 88 77 01                 a0 = a0 <u 0x1
  7750: 01                       fallthrough
      :                          @545
  7751: 82 10 38                 ra = u64 [sp + 0x38]
  7754: 82 15 30                 s0 = u64 [sp + 0x30]
  7757: 82 16 28                 s1 = u64 [sp + 0x28]
  7760: 95 11 40                 sp = sp + 0x40
  7763: 32 00                    ret
      :                          @546
  7765: 33 07                    a0 = 0
  7767: 28 f0                    jump @545
      :                          @547
  7769: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7772: ae 29 04                 jump @549 if a2 >=u t0
      :                          @548
  7775: 00                       trap
      :                          @549
  7776: 00                       trap
      :                          @550
  7777: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  7780: 7b 10 38                 u64 [sp + 0x38] = ra
  7783: 7b 15 30                 u64 [sp + 0x30] = s0
  7786: 7b 16 28                 u64 [sp + 0x28] = s1
  7789: 64 83                    t1 = a1
  7791: 64 70                    ra = a0
  7793: 55 18 32 58              jump @556 if a1 >=u 50
      :                          @551
  7797: 82 07 10                 a0 = u64 [ra + 0x10]
  7800: 82 08                    a1 = u64 [ra]
  7802: 82 09 18                 a2 = u64 [ra + 0x18]
  7805: 82 0a 08                 a3 = u64 [ra + 0x8]
  7808: d9 87 0b                 a4 = a0 <s a1
  7811: d3 78 08                 a1 = a1 ^ a0
  7814: d9 a9 09                 a2 = a2 <s a3
  7817: db 8b 09                 a2 = a4 if a1 != 0
  7820: 33 08 01                 a1 = 0x1
  7823: 52 09 a7 03              jump @619 if a2 != 0
      :                          @552
  7827: 95 09 28                 a2 = ra + 0x28
  7830: 9a 3a 02                 a3 = 0x2 - t1
  7833: 33 02 01                 t0 = 0x1
  7836: 33 08 01                 a1 = 0x1
  7839: 01                       fallthrough
      :                          @553
  7840: c8 8a 0b                 a4 = a3 + a1
  7843: aa 2b 89 03              jump @618 if a4 == t0
      :                          @554
  7847: 82 9c f8                 a5 = u64 [a2 + 0xfffffffffffffff8]
  7850: 82 96                    s1 = u64 [a2]
  7852: 82 95 f0                 s0 = u64 [a2 + 0xfffffffffffffff0]
  7855: 95 88 01                 a1 = a1 + 0x1
  7858: d9 7c 0b                 a4 = a5 <s a0
  7861: d3 c7 07                 a0 = a0 ^ a5
  7864: d9 56 06                 s1 = s1 <s s0
  7867: db 7b 06                 s1 = a4 if a0 != 0
  7870: 95 99 10                 a2 = a2 + 0x10
  7873: 64 c7                    a0 = a5
  7875: 51 06 dd                 jump @553 if s1 == 0
      :                          @555
  7878: 28 70 03                 jump @619
      :                          @556
  7881: 82 07                    a0 = u64 [ra]
  7883: 82 09 10                 a2 = u64 [ra + 0x10]
  7886: 82 0a 08                 a3 = u64 [ra + 0x8]
  7889: 82 05 18                 s0 = u64 [ra + 0x18]
  7892: d9 79 0b                 a4 = a2 <s a0
  7895: d3 97 07                 a0 = a0 ^ a2
  7898: d9 a5 0a                 a3 = s0 <s a3
  7901: db 7b 0a                 a3 = a4 if a0 != 0
  7904: 51 0a 0f                 jump @559 if a3 == 0
      :                          @557
  7907: 33 07 01                 a0 = 0x1
  7910: 33 04 01                 t2 = 0x1
  7913: ab 43 3c                 jump @563 if t1 != t2
      :                          @558
  7916: 28 51 03                 jump @620
      :                          @559
  7919: 95 0a 28                 a3 = ra + 0x28
  7922: 9a 32 02                 t0 = 0x2 - t1
  7925: 33 07 01                 a0 = 0x1
  7928: 33 04 01                 t2 = 0x1
  7931: 01                       fallthrough
      :                          @560
  7932: c8 42 08                 a1 = t0 + t2
  7935: aa 78 3e 03              jump @620 if a1 == a0
      :                          @561
  7939: 82 ac f8                 a5 = u64 [a3 + 0xfffffffffffffff8]
  7942: 82 a8                    a1 = u64 [a3]
  7944: d9 9c 0b                 a4 = a5 <s a2
  7947: d3 c9 09                 a2 = a2 ^ a5
  7950: d9 58 06                 s1 = a1 <s s0
  7953: db 9b 06                 s1 = a4 if a2 != 0
  7956: 95 aa 10                 a3 = a3 + 0x10
  7959: 95 44 01                 t2 = t2 + 0x1
  7962: 64 85                    s0 = a1
  7964: 64 c9                    a2 = a5
  7966: 51 06 de                 jump @560 if s1 == 0
      :                          @562
  7969: d8 34 07                 a0 = t2 <u t1
  7972: 01                       fallthrough
      :                          @563
  7973: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  7976: ae 39 2e 03              jump @624 if a2 >=u t1
      :                          @564
  7980: 51 07 29 03              jump @623 if a0 == 0
      :                          @565
  7984: 97 95 04                 s0 = a2 << 0x4
  7987: c8 05 05                 s0 = s0 + ra
  7990: 97 47 04                 a0 = t2 << 0x4
  7993: 82 58 08                 a1 = u64 [s0 + 0x8]
  7996: c8 70 06                 s1 = ra + a0
  7999: 82 67 08                 a0 = u64 [s1 + 0x8]
  8002: 7b 18 20                 u64 [sp + 0x20] = a1
  8005: 82 58                    a1 = u64 [s0]
  8007: 7b 57 08                 u64 [s0 + 0x8] = a0
  8010: 82 67                    a0 = u64 [s1]
  8012: 82 1a 20                 a3 = u64 [sp + 0x20]
  8015: 7b 18 18                 u64 [sp + 0x18] = a1
  8018: 82 18 18                 a1 = u64 [sp + 0x18]
  8021: 7b 57                    u64 [s0] = a0
  8023: 7b 6a 08                 u64 [s1 + 0x8] = a3
  8026: 7b 68                    u64 [s1] = a1
  8028: 7b 13                    u64 [sp] = t1
  8030: 7b 10 08                 u64 [sp + 0x8] = ra
  8033: 53 14 02 26              jump @569 if t2 <u 2
      :                          @566
  8037: 64 07                    a0 = ra
  8039: 64 48                    a1 = t2
  8041: 7b 14 10                 u64 [sp + 0x10] = t2
  8044: 50 20 22 01 8a 08        ra = 290, jump @788
      :                          @567 [@dyn 145]
  8050: 82 17 08                 a0 = u64 [sp + 0x8]
  8053: 82 18 10                 a1 = u64 [sp + 0x10]
  8056: 50 20 24 01 32 0b        ra = 292, jump @859
      :                          @568 [@dyn 146]
  8062: 82 10 08                 ra = u64 [sp + 0x8]
  8065: 82 14 10                 t2 = u64 [sp + 0x10]
  8068: 82 13                    t1 = u64 [sp]
  8070: 01                       fallthrough
      :                          @569
  8071: ae 34 c8 02              jump @622 if t2 >=u t1
      :                          @570
  8075: 82 59                    a2 = u64 [s0]
  8077: 82 68                    a1 = u64 [s1]
  8079: 82 5a 08                 a3 = u64 [s0 + 0x8]
  8082: 82 67 08                 a0 = u64 [s1 + 0x8]
  8085: d9 98 0b                 a4 = a1 <s a2
  8088: d3 89 09                 a2 = a2 ^ a1
  8091: d9 a7 0c                 a5 = a0 <s a3
  8094: db 9b 0c                 a5 = a4 if a2 != 0
  8097: 33 0a 01                 a3 = 0x1
  8100: 52 0c 30                 jump @575 if a5 != 0
      :                          @571
  8103: 95 69 18                 a2 = s1 + 0x18
  8106: 95 3a ff                 a3 = t1 + 0xffffffffffffffff
  8109: 01                       fallthrough
      :                          @572
  8110: aa 4a 79 02              jump @617 if a3 == t2
      :                          @573
  8114: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
  8117: 82 9c                    a5 = u64 [a2]
  8119: d9 8b 06                 s1 = a4 <s a1
  8122: d3 b8 08                 a1 = a1 ^ a4
  8125: d9 7c 05                 s0 = a5 <s a0
  8128: db 86 05                 s0 = s1 if a1 != 0
  8131: 95 99 10                 a2 = a2 + 0x10
  8134: 95 44 01                 t2 = t2 + 0x1
  8137: 64 c7                    a0 = a5
  8139: 64 b8                    a1 = a4
  8141: 51 05 e1                 jump @572 if s0 == 0
      :                          @574
  8144: d8 34 0a                 a3 = t2 <u t1
  8147: 01                       fallthrough
      :                          @575
  8148: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  8151: ae 39 7f 02              jump @624 if a2 >=u t1
      :                          @576
  8155: 51 0a 7a 02              jump @623 if a3 == 0
      :                          @577
  8159: 97 95 04                 s0 = a2 << 0x4
  8162: c8 05 05                 s0 = s0 + ra
  8165: 97 47 04                 a0 = t2 << 0x4
  8168: 82 58 08                 a1 = u64 [s0 + 0x8]
  8171: c8 70 06                 s1 = ra + a0
  8174: 82 67 08                 a0 = u64 [s1 + 0x8]
  8177: 7b 18 20                 u64 [sp + 0x20] = a1
  8180: 82 58                    a1 = u64 [s0]
  8182: 7b 57 08                 u64 [s0 + 0x8] = a0
  8185: 82 67                    a0 = u64 [s1]
  8187: 82 1a 20                 a3 = u64 [sp + 0x20]
  8190: 7b 18 18                 u64 [sp + 0x18] = a1
  8193: 82 18 18                 a1 = u64 [sp + 0x18]
  8196: 7b 57                    u64 [s0] = a0
  8198: 7b 6a 08                 u64 [s1 + 0x8] = a3
  8201: 7b 68                    u64 [s1] = a1
  8203: 53 14 02 26              jump @581 if t2 <u 2
      :                          @578
  8207: 64 07                    a0 = ra
  8209: 64 48                    a1 = t2
  8211: 7b 14 10                 u64 [sp + 0x10] = t2
  8214: 50 20 26 01 e0 07        ra = 294, jump @788
      :                          @579 [@dyn 147]
  8220: 82 17 08                 a0 = u64 [sp + 0x8]
  8223: 82 18 10                 a1 = u64 [sp + 0x10]
  8226: 50 20 28 01 88 0a        ra = 296, jump @859
      :                          @580 [@dyn 148]
  8232: 82 10 08                 ra = u64 [sp + 0x8]
  8235: 82 14 10                 t2 = u64 [sp + 0x10]
  8238: 82 13                    t1 = u64 [sp]
  8240: 01                       fallthrough
      :                          @581
  8241: ae 34 1e 02              jump @622 if t2 >=u t1
      :                          @582
  8245: 82 59                    a2 = u64 [s0]
  8247: 82 68                    a1 = u64 [s1]
  8249: 82 5a 08                 a3 = u64 [s0 + 0x8]
  8252: 82 67 08                 a0 = u64 [s1 + 0x8]
  8255: d9 98 0b                 a4 = a1 <s a2
  8258: d3 89 09                 a2 = a2 ^ a1
  8261: d9 a7 0c                 a5 = a0 <s a3
  8264: db 9b 0c                 a5 = a4 if a2 != 0
  8267: 33 0a 01                 a3 = 0x1
  8270: 52 0c 30                 jump @587 if a5 != 0
      :                          @583
  8273: 95 69 18                 a2 = s1 + 0x18
  8276: 95 3a ff                 a3 = t1 + 0xffffffffffffffff
  8279: 01                       fallthrough
      :                          @584
  8280: aa 4a cf 01              jump @617 if a3 == t2
      :                          @585
  8284: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
  8287: 82 9c                    a5 = u64 [a2]
  8289: d9 8b 06                 s1 = a4 <s a1
  8292: d3 b8 08                 a1 = a1 ^ a4
  8295: d9 7c 05                 s0 = a5 <s a0
  8298: db 86 05                 s0 = s1 if a1 != 0
  8301: 95 99 10                 a2 = a2 + 0x10
  8304: 95 44 01                 t2 = t2 + 0x1
  8307: 64 c7                    a0 = a5
  8309: 64 b8                    a1 = a4
  8311: 51 05 e1                 jump @584 if s0 == 0
      :                          @586
  8314: d8 34 0a                 a3 = t2 <u t1
  8317: 01                       fallthrough
      :                          @587
  8318: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  8321: ae 39 d5 01              jump @624 if a2 >=u t1
      :                          @588
  8325: 51 0a d0 01              jump @623 if a3 == 0
      :                          @589
  8329: 97 95 04                 s0 = a2 << 0x4
  8332: c8 05 05                 s0 = s0 + ra
  8335: 97 47 04                 a0 = t2 << 0x4
  8338: 82 58 08                 a1 = u64 [s0 + 0x8]
  8341: c8 70 06                 s1 = ra + a0
  8344: 82 67 08                 a0 = u64 [s1 + 0x8]
  8347: 7b 18 20                 u64 [sp + 0x20] = a1
  8350: 82 58                    a1 = u64 [s0]
  8352: 7b 57 08                 u64 [s0 + 0x8] = a0
  8355: 82 67                    a0 = u64 [s1]
  8357: 82 1a 20                 a3 = u64 [sp + 0x20]
  8360: 7b 18 18                 u64 [sp + 0x18] = a1
  8363: 82 18 18                 a1 = u64 [sp + 0x18]
  8366: 7b 57                    u64 [s0] = a0
  8368: 7b 6a 08                 u64 [s1 + 0x8] = a3
  8371: 7b 68                    u64 [s1] = a1
  8373: 53 14 02 26              jump @593 if t2 <u 2
      :                          @590
  8377: 64 07                    a0 = ra
  8379: 64 48                    a1 = t2
  8381: 7b 14 10                 u64 [sp + 0x10] = t2
  8384: 50 20 2a 01 36 07        ra = 298, jump @788
      :                          @591 [@dyn 149]
  8390: 82 17 08                 a0 = u64 [sp + 0x8]
  8393: 82 18 10                 a1 = u64 [sp + 0x10]
  8396: 50 20 2c 01 de 09        ra = 300, jump @859
      :                          @592 [@dyn 150]
  8402: 82 10 08                 ra = u64 [sp + 0x8]
  8405: 82 14 10                 t2 = u64 [sp + 0x10]
  8408: 82 13                    t1 = u64 [sp]
  8410: 01                       fallthrough
      :                          @593
  8411: ae 34 74 01              jump @622 if t2 >=u t1
      :                          @594
  8415: 82 59                    a2 = u64 [s0]
  8417: 82 68                    a1 = u64 [s1]
  8419: 82 5a 08                 a3 = u64 [s0 + 0x8]
  8422: 82 67 08                 a0 = u64 [s1 + 0x8]
  8425: d9 98 0b                 a4 = a1 <s a2
  8428: d3 89 09                 a2 = a2 ^ a1
  8431: d9 a7 0c                 a5 = a0 <s a3
  8434: db 9b 0c                 a5 = a4 if a2 != 0
  8437: 33 0a 01                 a3 = 0x1
  8440: 52 0c 30                 jump @599 if a5 != 0
      :                          @595
  8443: 95 69 18                 a2 = s1 + 0x18
  8446: 95 3a ff                 a3 = t1 + 0xffffffffffffffff
  8449: 01                       fallthrough
      :                          @596
  8450: aa 4a 25 01              jump @617 if a3 == t2
      :                          @597
  8454: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
  8457: 82 9c                    a5 = u64 [a2]
  8459: d9 8b 06                 s1 = a4 <s a1
  8462: d3 b8 08                 a1 = a1 ^ a4
  8465: d9 7c 05                 s0 = a5 <s a0
  8468: db 86 05                 s0 = s1 if a1 != 0
  8471: 95 99 10                 a2 = a2 + 0x10
  8474: 95 44 01                 t2 = t2 + 0x1
  8477: 64 c7                    a0 = a5
  8479: 64 b8                    a1 = a4
  8481: 51 05 e1                 jump @596 if s0 == 0
      :                          @598
  8484: d8 34 0a                 a3 = t2 <u t1
  8487: 01                       fallthrough
      :                          @599
  8488: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  8491: ae 39 2b 01              jump @624 if a2 >=u t1
      :                          @600
  8495: 51 0a 26 01              jump @623 if a3 == 0
      :                          @601
  8499: 97 95 04                 s0 = a2 << 0x4
  8502: c8 05 05                 s0 = s0 + ra
  8505: 97 47 04                 a0 = t2 << 0x4
  8508: 82 58 08                 a1 = u64 [s0 + 0x8]
  8511: c8 70 06                 s1 = ra + a0
  8514: 82 67 08                 a0 = u64 [s1 + 0x8]
  8517: 7b 18 20                 u64 [sp + 0x20] = a1
  8520: 82 58                    a1 = u64 [s0]
  8522: 7b 57 08                 u64 [s0 + 0x8] = a0
  8525: 82 67                    a0 = u64 [s1]
  8527: 82 1a 20                 a3 = u64 [sp + 0x20]
  8530: 7b 18 18                 u64 [sp + 0x18] = a1
  8533: 82 18 18                 a1 = u64 [sp + 0x18]
  8536: 7b 57                    u64 [s0] = a0
  8538: 7b 6a 08                 u64 [s1 + 0x8] = a3
  8541: 7b 68                    u64 [s1] = a1
  8543: 53 14 02 26              jump @605 if t2 <u 2
      :                          @602
  8547: 64 07                    a0 = ra
  8549: 64 48                    a1 = t2
  8551: 7b 14 10                 u64 [sp + 0x10] = t2
  8554: 50 20 2e 01 8c 06        ra = 302, jump @788
      :                          @603 [@dyn 151]
  8560: 82 17 08                 a0 = u64 [sp + 0x8]
  8563: 82 18 10                 a1 = u64 [sp + 0x10]
  8566: 50 20 30 01 34 09        ra = 304, jump @859
      :                          @604 [@dyn 152]
  8572: 82 10 08                 ra = u64 [sp + 0x8]
  8575: 82 14 10                 t2 = u64 [sp + 0x10]
  8578: 82 13                    t1 = u64 [sp]
  8580: 01                       fallthrough
      :                          @605
  8581: ae 34 ca 00              jump @622 if t2 >=u t1
      :                          @606
  8585: 82 59                    a2 = u64 [s0]
  8587: 82 68                    a1 = u64 [s1]
  8589: 82 5a 08                 a3 = u64 [s0 + 0x8]
  8592: 82 67 08                 a0 = u64 [s1 + 0x8]
  8595: d9 98 0b                 a4 = a1 <s a2
  8598: d3 89 09                 a2 = a2 ^ a1
  8601: d9 a7 0c                 a5 = a0 <s a3
  8604: db 9b 0c                 a5 = a4 if a2 != 0
  8607: 33 0a 01                 a3 = 0x1
  8610: 52 0c 2f                 jump @611 if a5 != 0
      :                          @607
  8613: 95 69 18                 a2 = s1 + 0x18
  8616: 95 3a ff                 a3 = t1 + 0xffffffffffffffff
  8619: 01                       fallthrough
      :                          @608
  8620: aa 4a 7b                 jump @617 if a3 == t2
      :                          @609
  8623: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
  8626: 82 9c                    a5 = u64 [a2]
  8628: d9 8b 06                 s1 = a4 <s a1
  8631: d3 b8 08                 a1 = a1 ^ a4
  8634: d9 7c 05                 s0 = a5 <s a0
  8637: db 86 05                 s0 = s1 if a1 != 0
  8640: 95 99 10                 a2 = a2 + 0x10
  8643: 95 44 01                 t2 = t2 + 0x1
  8646: 64 c7                    a0 = a5
  8648: 64 b8                    a1 = a4
  8650: 51 05 e2                 jump @608 if s0 == 0
      :                          @610
  8653: d8 34 0a                 a3 = t2 <u t1
  8656: 01                       fallthrough
      :                          @611
  8657: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  8660: ae 39 82 00              jump @624 if a2 >=u t1
      :                          @612
  8664: 51 0a 7d                 jump @623 if a3 == 0
      :                          @613
  8667: 97 97 04                 a0 = a2 << 0x4
  8670: c8 07 07                 a0 = a0 + ra
  8673: 97 48 04                 a1 = t2 << 0x4
  8676: 82 7a 08                 a3 = u64 [a0 + 0x8]
  8679: c8 08 08                 a1 = a1 + ra
  8682: 82 8b 08                 a4 = u64 [a1 + 0x8]
  8685: 7b 1a 20                 u64 [sp + 0x20] = a3
  8688: 82 7a                    a3 = u64 [a0]
  8690: 7b 7b 08                 u64 [a0 + 0x8] = a4
  8693: 82 8b                    a4 = u64 [a1]
  8695: 82 1c 20                 a5 = u64 [sp + 0x20]
  8698: 7b 1a 18                 u64 [sp + 0x18] = a3
  8701: 82 1a 18                 a3 = u64 [sp + 0x18]
  8704: 7b 7b                    u64 [a0] = a4
  8706: 7b 8c 08                 u64 [a1 + 0x8] = a5
  8709: 7b 8a                    u64 [a1] = a3
  8711: 53 14 02 44              jump @621 if t2 <u 2
      :                          @614
  8715: 64 07                    a0 = ra
  8717: 64 48                    a1 = t2
  8719: 64 45                    s0 = t2
  8721: 64 06                    s1 = ra
  8723: 50 20 32 01 e3 05        ra = 306, jump @788
      :                          @615 [@dyn 153]
  8729: 64 67                    a0 = s1
  8731: 64 58                    a1 = s0
  8733: 50 20 34 01 8d 08        ra = 308, jump @859
      :                          @616 [@dyn 154]
  8739: 33 07                    a0 = 0
  8741: 28 18                    jump @620
      :                          @617
  8743: 33 07 01                 a0 = 0x1
  8746: 28 13                    jump @620
      :                          @618
  8748: 64 38                    a1 = t1
  8750: d3 38 07                 a0 = a1 ^ t1
  8753: 88 77 01                 a0 = a0 <u 0x1
  8756: 28 09                    jump @620
      :                          @619
  8758: d3 38 07                 a0 = a1 ^ t1
  8761: 88 77 01                 a0 = a0 <u 0x1
  8764: 01                       fallthrough
      :                          @620
  8765: 82 10 38                 ra = u64 [sp + 0x38]
  8768: 82 15 30                 s0 = u64 [sp + 0x30]
  8771: 82 16 28                 s1 = u64 [sp + 0x28]
  8774: 95 11 40                 sp = sp + 0x40
  8777: 32 00                    ret
      :                          @621
  8779: 33 07                    a0 = 0
  8781: 28 f0                    jump @620
      :                          @622
  8783: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  8786: ae 39 04                 jump @624 if a2 >=u t1
      :                          @623
  8789: 00                       trap
      :                          @624
  8790: 00                       trap
      :                          @625
  8791: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  8794: 7b 10 28                 u64 [sp + 0x28] = ra
  8797: 7b 15 20                 u64 [sp + 0x20] = s0
  8800: 7b 16 18                 u64 [sp + 0x18] = s1
  8803: 33 09 32                 a2 = 0x32
  8806: 64 82                    t0 = a1
  8808: 64 73                    t1 = a0
  8810: ae 98 33                 jump @631 if a1 >=u a2
      :                          @626
  8813: 82 37 08                 a0 = u64 [t1 + 0x8]
  8816: 82 39                    a2 = u64 [t1]
  8818: 33 08 01                 a1 = 0x1
  8821: ac 79 64 02              jump @694 if a2 <u a0
      :                          @627
  8825: 95 39 10                 a2 = t1 + 0x10
  8828: 9a 26 02                 s1 = 0x2 - t0
  8831: 33 0b 01                 a4 = 0x1
  8834: 33 08 01                 a1 = 0x1
  8837: 01                       fallthrough
      :                          @628
  8838: c8 86 0a                 a3 = s1 + a1
  8841: aa ba 46 02              jump @693 if a3 == a4
      :                          @629
  8845: 64 7c                    a5 = a0
  8847: 82 97                    a0 = u64 [a2]
  8849: 95 88 01                 a1 = a1 + 0x1
  8852: 95 99 08                 a2 = a2 + 0x8
  8855: ae 7c ef                 jump @628 if a5 >=u a0
      :                          @630
  8858: 28 3f 02                 jump @694
      :                          @631
  8861: 82 37                    a0 = u64 [t1]
  8863: 82 38 08                 a1 = u64 [t1 + 0x8]
  8866: ae 87 0f                 jump @634 if a0 >=u a1
      :                          @632
  8869: 33 07 01                 a0 = 0x1
  8872: 33 06 01                 s1 = 0x1
  8875: ab 62 2b                 jump @638 if t0 != s1
      :                          @633
  8878: 28 32 02                 jump @695
      :                          @634
  8881: 95 39 10                 a2 = t1 + 0x10
  8884: 9a 2a 02                 a3 = 0x2 - t0
  8887: 33 07 01                 a0 = 0x1
  8890: 33 06 01                 s1 = 0x1
  8893: 01                       fallthrough
      :                          @635
  8894: c8 6a 0c                 a5 = a3 + s1
  8897: aa 7c 1f 02              jump @695 if a5 == a0
      :                          @636
  8901: 64 8b                    a4 = a1
  8903: 82 98                    a1 = u64 [a2]
  8905: 95 99 08                 a2 = a2 + 0x8
  8908: 95 66 01                 s1 = s1 + 0x1
  8911: ae 8b ef                 jump @635 if a4 >=u a1
      :                          @637
  8914: d8 26 07                 a0 = s1 <u t0
  8917: 01                       fallthrough
      :                          @638
  8918: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  8921: ae 29 20 02              jump @699 if a2 >=u t0
      :                          @639
  8925: 51 07 1b 02              jump @698 if a0 == 0
      :                          @640
  8929: 97 95 03                 s0 = a2 << 0x3
  8932: 97 67 03                 a0 = s1 << 0x3
  8935: c8 73 0a                 a3 = t1 + a0
  8938: 82 a7                    a0 = u64 [a3]
  8940: c8 35 05                 s0 = s0 + t1
  8943: 82 58                    a1 = u64 [s0]
  8945: 7b 57                    u64 [s0] = a0
  8947: 7b a8                    u64 [a3] = a1
  8949: 7b 12 08                 u64 [sp + 0x8] = t0
  8952: 7b 13 10                 u64 [sp + 0x10] = t1
  8955: 53 16 02 24              jump @644 if s1 <u 2
      :                          @641
  8959: 64 37                    a0 = t1
  8961: 64 68                    a1 = s1
  8963: 7b 1a                    u64 [sp] = a3
  8965: 50 20 36 01 98 04        ra = 310, jump @775
      :                          @642 [@dyn 155]
  8971: 82 17 10                 a0 = u64 [sp + 0x10]
  8974: 64 68                    a1 = s1
  8976: 50 20 38 01 ec 06        ra = 312, jump @839
      :                          @643 [@dyn 156]
  8982: 82 1a                    a3 = u64 [sp]
  8984: 82 13 10                 t1 = u64 [sp + 0x10]
  8987: 82 12 08                 t0 = u64 [sp + 0x8]
  8990: 01                       fallthrough
      :                          @644
  8991: ae 26 d3 01              jump @697 if s1 >=u t0
      :                          @645
  8995: 82 59                    a2 = u64 [s0]
  8997: 82 a8                    a1 = u64 [a3]
  8999: 33 07 01                 a0 = 0x1
  9002: ac 89 1f                 jump @650 if a2 <u a1
      :                          @646
  9005: 95 a7 08                 a0 = a3 + 0x8
  9008: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  9011: 01                       fallthrough
      :                          @647
  9012: aa 69 96 01              jump @692 if a2 == s1
      :                          @648
  9016: 64 8a                    a3 = a1
  9018: 82 78                    a1 = u64 [a0]
  9020: 95 77 08                 a0 = a0 + 0x8
  9023: 95 66 01                 s1 = s1 + 0x1
  9026: ae 8a f2                 jump @647 if a3 >=u a1
      :                          @649
  9029: d8 26 07                 a0 = s1 <u t0
  9032: 01                       fallthrough
      :                          @650
  9033: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9036: ae 29 ad 01              jump @699 if a2 >=u t0
      :                          @651
  9040: 51 07 a8 01              jump @698 if a0 == 0
      :                          @652
  9044: 97 95 03                 s0 = a2 << 0x3
  9047: 97 67 03                 a0 = s1 << 0x3
  9050: c8 73 0a                 a3 = t1 + a0
  9053: 82 a7                    a0 = u64 [a3]
  9055: c8 35 05                 s0 = s0 + t1
  9058: 82 58                    a1 = u64 [s0]
  9060: 7b 57                    u64 [s0] = a0
  9062: 7b a8                    u64 [a3] = a1
  9064: 53 16 02 24              jump @656 if s1 <u 2
      :                          @653
  9068: 64 37                    a0 = t1
  9070: 64 68                    a1 = s1
  9072: 7b 1a                    u64 [sp] = a3
  9074: 50 20 3a 01 2b 04        ra = 314, jump @775
      :                          @654 [@dyn 157]
  9080: 82 17 10                 a0 = u64 [sp + 0x10]
  9083: 64 68                    a1 = s1
  9085: 50 20 3c 01 7f 06        ra = 316, jump @839
      :                          @655 [@dyn 158]
  9091: 82 1a                    a3 = u64 [sp]
  9093: 82 13 10                 t1 = u64 [sp + 0x10]
  9096: 82 12 08                 t0 = u64 [sp + 0x8]
  9099: 01                       fallthrough
      :                          @656
  9100: ae 26 66 01              jump @697 if s1 >=u t0
      :                          @657
  9104: 82 59                    a2 = u64 [s0]
  9106: 82 a8                    a1 = u64 [a3]
  9108: 33 07 01                 a0 = 0x1
  9111: ac 89 1f                 jump @662 if a2 <u a1
      :                          @658
  9114: 95 a7 08                 a0 = a3 + 0x8
  9117: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  9120: 01                       fallthrough
      :                          @659
  9121: aa 69 29 01              jump @692 if a2 == s1
      :                          @660
  9125: 64 8a                    a3 = a1
  9127: 82 78                    a1 = u64 [a0]
  9129: 95 77 08                 a0 = a0 + 0x8
  9132: 95 66 01                 s1 = s1 + 0x1
  9135: ae 8a f2                 jump @659 if a3 >=u a1
      :                          @661
  9138: d8 26 07                 a0 = s1 <u t0
  9141: 01                       fallthrough
      :                          @662
  9142: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9145: ae 29 40 01              jump @699 if a2 >=u t0
      :                          @663
  9149: 51 07 3b 01              jump @698 if a0 == 0
      :                          @664
  9153: 97 95 03                 s0 = a2 << 0x3
  9156: 97 67 03                 a0 = s1 << 0x3
  9159: c8 73 0a                 a3 = t1 + a0
  9162: 82 a7                    a0 = u64 [a3]
  9164: c8 35 05                 s0 = s0 + t1
  9167: 82 58                    a1 = u64 [s0]
  9169: 7b 57                    u64 [s0] = a0
  9171: 7b a8                    u64 [a3] = a1
  9173: 53 16 02 24              jump @668 if s1 <u 2
      :                          @665
  9177: 64 37                    a0 = t1
  9179: 64 68                    a1 = s1
  9181: 7b 1a                    u64 [sp] = a3
  9183: 50 20 3e 01 be 03        ra = 318, jump @775
      :                          @666 [@dyn 159]
  9189: 82 17 10                 a0 = u64 [sp + 0x10]
  9192: 64 68                    a1 = s1
  9194: 50 20 40 01 12 06        ra = 320, jump @839
      :                          @667 [@dyn 160]
  9200: 82 1a                    a3 = u64 [sp]
  9202: 82 13 10                 t1 = u64 [sp + 0x10]
  9205: 82 12 08                 t0 = u64 [sp + 0x8]
  9208: 01                       fallthrough
      :                          @668
  9209: ae 26 f9 00              jump @697 if s1 >=u t0
      :                          @669
  9213: 82 59                    a2 = u64 [s0]
  9215: 82 a8                    a1 = u64 [a3]
  9217: 33 07 01                 a0 = 0x1
  9220: ac 89 1f                 jump @674 if a2 <u a1
      :                          @670
  9223: 95 a7 08                 a0 = a3 + 0x8
  9226: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  9229: 01                       fallthrough
      :                          @671
  9230: aa 69 bc 00              jump @692 if a2 == s1
      :                          @672
  9234: 64 8a                    a3 = a1
  9236: 82 78                    a1 = u64 [a0]
  9238: 95 77 08                 a0 = a0 + 0x8
  9241: 95 66 01                 s1 = s1 + 0x1
  9244: ae 8a f2                 jump @671 if a3 >=u a1
      :                          @673
  9247: d8 26 07                 a0 = s1 <u t0
  9250: 01                       fallthrough
      :                          @674
  9251: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9254: ae 29 d3 00              jump @699 if a2 >=u t0
      :                          @675
  9258: 51 07 ce 00              jump @698 if a0 == 0
      :                          @676
  9262: 97 95 03                 s0 = a2 << 0x3
  9265: 97 67 03                 a0 = s1 << 0x3
  9268: c8 73 0a                 a3 = t1 + a0
  9271: 82 a7                    a0 = u64 [a3]
  9273: c8 35 05                 s0 = s0 + t1
  9276: 82 58                    a1 = u64 [s0]
  9278: 7b 57                    u64 [s0] = a0
  9280: 7b a8                    u64 [a3] = a1
  9282: 53 16 02 24              jump @680 if s1 <u 2
      :                          @677
  9286: 64 37                    a0 = t1
  9288: 64 68                    a1 = s1
  9290: 7b 1a                    u64 [sp] = a3
  9292: 50 20 42 01 51 03        ra = 322, jump @775
      :                          @678 [@dyn 161]
  9298: 82 17 10                 a0 = u64 [sp + 0x10]
  9301: 64 68                    a1 = s1
  9303: 50 20 44 01 a5 05        ra = 324, jump @839
      :                          @679 [@dyn 162]
  9309: 82 1a                    a3 = u64 [sp]
  9311: 82 13 10                 t1 = u64 [sp + 0x10]
  9314: 82 12 08                 t0 = u64 [sp + 0x8]
  9317: 01                       fallthrough
      :                          @680
  9318: ae 26 8c 00              jump @697 if s1 >=u t0
      :                          @681
  9322: 82 59                    a2 = u64 [s0]
  9324: 82 a8                    a1 = u64 [a3]
  9326: 33 07 01                 a0 = 0x1
  9329: ac 89 1e                 jump @686 if a2 <u a1
      :                          @682
  9332: 95 a7 08                 a0 = a3 + 0x8
  9335: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  9338: 01                       fallthrough
      :                          @683
  9339: aa 69 4f                 jump @692 if a2 == s1
      :                          @684
  9342: 64 8a                    a3 = a1
  9344: 82 78                    a1 = u64 [a0]
  9346: 95 77 08                 a0 = a0 + 0x8
  9349: 95 66 01                 s1 = s1 + 0x1
  9352: ae 8a f3                 jump @683 if a3 >=u a1
      :                          @685
  9355: d8 26 07                 a0 = s1 <u t0
  9358: 01                       fallthrough
      :                          @686
  9359: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9362: ae 29 67                 jump @699 if a2 >=u t0
      :                          @687
  9365: 51 07 63                 jump @698 if a0 == 0
      :                          @688
  9368: 97 97 03                 a0 = a2 << 0x3
  9371: 97 68 03                 a1 = s1 << 0x3
  9374: c8 38 08                 a1 = a1 + t1
  9377: 82 8a                    a3 = u64 [a1]
  9379: c8 37 07                 a0 = a0 + t1
  9382: 82 7b                    a4 = u64 [a0]
  9384: 7b 7a                    u64 [a0] = a3
  9386: 7b 8b                    u64 [a1] = a4
  9388: 53 16 02 42              jump @696 if s1 <u 2
      :                          @689
  9392: 64 37                    a0 = t1
  9394: 64 68                    a1 = s1
  9396: 64 35                    s0 = t1
  9398: 50 20 46 01 e7 02        ra = 326, jump @775
      :                          @690 [@dyn 163]
  9404: 64 57                    a0 = s0
  9406: 64 68                    a1 = s1
  9408: 50 20 48 01 3c 05        ra = 328, jump @839
      :                          @691 [@dyn 164]
  9414: 33 07                    a0 = 0
  9416: 28 18                    jump @695
      :                          @692
  9418: 33 07 01                 a0 = 0x1
  9421: 28 13                    jump @695
      :                          @693
  9423: 64 28                    a1 = t0
  9425: d3 28 07                 a0 = a1 ^ t0
  9428: 88 77 01                 a0 = a0 <u 0x1
  9431: 28 09                    jump @695
      :                          @694
  9433: d3 28 07                 a0 = a1 ^ t0
  9436: 88 77 01                 a0 = a0 <u 0x1
  9439: 01                       fallthrough
      :                          @695
  9440: 82 10 28                 ra = u64 [sp + 0x28]
  9443: 82 15 20                 s0 = u64 [sp + 0x20]
  9446: 82 16 18                 s1 = u64 [sp + 0x18]
  9449: 95 11 30                 sp = sp + 0x30
  9452: 32 00                    ret
      :                          @696
  9454: 33 07                    a0 = 0
  9456: 28 f0                    jump @695
      :                          @697
  9458: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9461: ae 29 04                 jump @699 if a2 >=u t0
      :                          @698
  9464: 00                       trap
      :                          @699
  9465: 00                       trap
      :                          @700
  9466: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  9469: 7b 10 28                 u64 [sp + 0x28] = ra
  9472: 7b 15 20                 u64 [sp + 0x20] = s0
  9475: 7b 16 18                 u64 [sp + 0x18] = s1
  9478: 33 09 32                 a2 = 0x32
  9481: 64 82                    t0 = a1
  9483: 64 73                    t1 = a0
  9485: ae 98 33                 jump @706 if a1 >=u a2
      :                          @701
  9488: 82 37 08                 a0 = u64 [t1 + 0x8]
  9491: 82 39                    a2 = u64 [t1]
  9493: 33 08 01                 a1 = 0x1
  9496: ad 97 64 02              jump @769 if a0 <s a2
      :                          @702
  9500: 95 39 10                 a2 = t1 + 0x10
  9503: 9a 26 02                 s1 = 0x2 - t0
  9506: 33 0b 01                 a4 = 0x1
  9509: 33 08 01                 a1 = 0x1
  9512: 01                       fallthrough
      :                          @703
  9513: c8 86 0a                 a3 = s1 + a1
  9516: aa ba 46 02              jump @768 if a3 == a4
      :                          @704
  9520: 64 7c                    a5 = a0
  9522: 82 97                    a0 = u64 [a2]
  9524: 95 88 01                 a1 = a1 + 0x1
  9527: 95 99 08                 a2 = a2 + 0x8
  9530: af c7 ef                 jump @703 if a0 >=s a5
      :                          @705
  9533: 28 3f 02                 jump @769
      :                          @706
  9536: 82 37                    a0 = u64 [t1]
  9538: 82 38 08                 a1 = u64 [t1 + 0x8]
  9541: af 78 0f                 jump @709 if a1 >=s a0
      :                          @707
  9544: 33 07 01                 a0 = 0x1
  9547: 33 06 01                 s1 = 0x1
  9550: ab 62 2b                 jump @713 if t0 != s1
      :                          @708
  9553: 28 32 02                 jump @770
      :                          @709
  9556: 95 39 10                 a2 = t1 + 0x10
  9559: 9a 2a 02                 a3 = 0x2 - t0
  9562: 33 07 01                 a0 = 0x1
  9565: 33 06 01                 s1 = 0x1
  9568: 01                       fallthrough
      :                          @710
  9569: c8 6a 0c                 a5 = a3 + s1
  9572: aa 7c 1f 02              jump @770 if a5 == a0
      :                          @711
  9576: 64 8b                    a4 = a1
  9578: 82 98                    a1 = u64 [a2]
  9580: 95 99 08                 a2 = a2 + 0x8
  9583: 95 66 01                 s1 = s1 + 0x1
  9586: af b8 ef                 jump @710 if a1 >=s a4
      :                          @712
  9589: d8 26 07                 a0 = s1 <u t0
  9592: 01                       fallthrough
      :                          @713
  9593: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9596: ae 29 20 02              jump @774 if a2 >=u t0
      :                          @714
  9600: 51 07 1b 02              jump @773 if a0 == 0
      :                          @715
  9604: 97 95 03                 s0 = a2 << 0x3
  9607: 97 67 03                 a0 = s1 << 0x3
  9610: c8 73 0a                 a3 = t1 + a0
  9613: 82 a7                    a0 = u64 [a3]
  9615: c8 35 05                 s0 = s0 + t1
  9618: 82 58                    a1 = u64 [s0]
  9620: 7b 57                    u64 [s0] = a0
  9622: 7b a8                    u64 [a3] = a1
  9624: 7b 12 08                 u64 [sp + 0x8] = t0
  9627: 7b 13 10                 u64 [sp + 0x10] = t1
  9630: 53 16 02 24              jump @719 if s1 <u 2
      :                          @716
  9634: 64 37                    a0 = t1
  9636: 64 68                    a1 = s1
  9638: 7b 1a                    u64 [sp] = a3
  9640: 50 20 4a 01 fb 03        ra = 330, jump @826
      :                          @717 [@dyn 165]
  9646: 82 17 10                 a0 = u64 [sp + 0x10]
  9649: 64 68                    a1 = s1
  9651: 50 20 4c 01 a0 04        ra = 332, jump @849
      :                          @718 [@dyn 166]
  9657: 82 1a                    a3 = u64 [sp]
  9659: 82 13 10                 t1 = u64 [sp + 0x10]
  9662: 82 12 08                 t0 = u64 [sp + 0x8]
  9665: 01                       fallthrough
      :                          @719
  9666: ae 26 d3 01              jump @772 if s1 >=u t0
      :                          @720
  9670: 82 59                    a2 = u64 [s0]
  9672: 82 a8                    a1 = u64 [a3]
  9674: 33 07 01                 a0 = 0x1
  9677: ad 98 1f                 jump @725 if a1 <s a2
      :                          @721
  9680: 95 a7 08                 a0 = a3 + 0x8
  9683: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  9686: 01                       fallthrough
      :                          @722
  9687: aa 69 96 01              jump @767 if a2 == s1
      :                          @723
  9691: 64 8a                    a3 = a1
  9693: 82 78                    a1 = u64 [a0]
  9695: 95 77 08                 a0 = a0 + 0x8
  9698: 95 66 01                 s1 = s1 + 0x1
  9701: af a8 f2                 jump @722 if a1 >=s a3
      :                          @724
  9704: d8 26 07                 a0 = s1 <u t0
  9707: 01                       fallthrough
      :                          @725
  9708: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9711: ae 29 ad 01              jump @774 if a2 >=u t0
      :                          @726
  9715: 51 07 a8 01              jump @773 if a0 == 0
      :                          @727
  9719: 97 95 03                 s0 = a2 << 0x3
  9722: 97 67 03                 a0 = s1 << 0x3
  9725: c8 73 0a                 a3 = t1 + a0
  9728: 82 a7                    a0 = u64 [a3]
  9730: c8 35 05                 s0 = s0 + t1
  9733: 82 58                    a1 = u64 [s0]
  9735: 7b 57                    u64 [s0] = a0
  9737: 7b a8                    u64 [a3] = a1
  9739: 53 16 02 24              jump @731 if s1 <u 2
      :                          @728
  9743: 64 37                    a0 = t1
  9745: 64 68                    a1 = s1
  9747: 7b 1a                    u64 [sp] = a3
  9749: 50 20 4e 01 8e 03        ra = 334, jump @826
      :                          @729 [@dyn 167]
  9755: 82 17 10                 a0 = u64 [sp + 0x10]
  9758: 64 68                    a1 = s1
  9760: 50 20 50 01 33 04        ra = 336, jump @849
      :                          @730 [@dyn 168]
  9766: 82 1a                    a3 = u64 [sp]
  9768: 82 13 10                 t1 = u64 [sp + 0x10]
  9771: 82 12 08                 t0 = u64 [sp + 0x8]
  9774: 01                       fallthrough
      :                          @731
  9775: ae 26 66 01              jump @772 if s1 >=u t0
      :                          @732
  9779: 82 59                    a2 = u64 [s0]
  9781: 82 a8                    a1 = u64 [a3]
  9783: 33 07 01                 a0 = 0x1
  9786: ad 98 1f                 jump @737 if a1 <s a2
      :                          @733
  9789: 95 a7 08                 a0 = a3 + 0x8
  9792: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  9795: 01                       fallthrough
      :                          @734
  9796: aa 69 29 01              jump @767 if a2 == s1
      :                          @735
  9800: 64 8a                    a3 = a1
  9802: 82 78                    a1 = u64 [a0]
  9804: 95 77 08                 a0 = a0 + 0x8
  9807: 95 66 01                 s1 = s1 + 0x1
  9810: af a8 f2                 jump @734 if a1 >=s a3
      :                          @736
  9813: d8 26 07                 a0 = s1 <u t0
  9816: 01                       fallthrough
      :                          @737
  9817: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9820: ae 29 40 01              jump @774 if a2 >=u t0
      :                          @738
  9824: 51 07 3b 01              jump @773 if a0 == 0
      :                          @739
  9828: 97 95 03                 s0 = a2 << 0x3
  9831: 97 67 03                 a0 = s1 << 0x3
  9834: c8 73 0a                 a3 = t1 + a0
  9837: 82 a7                    a0 = u64 [a3]
  9839: c8 35 05                 s0 = s0 + t1
  9842: 82 58                    a1 = u64 [s0]
  9844: 7b 57                    u64 [s0] = a0
  9846: 7b a8                    u64 [a3] = a1
  9848: 53 16 02 24              jump @743 if s1 <u 2
      :                          @740
  9852: 64 37                    a0 = t1
  9854: 64 68                    a1 = s1
  9856: 7b 1a                    u64 [sp] = a3
  9858: 50 20 52 01 21 03        ra = 338, jump @826
      :                          @741 [@dyn 169]
  9864: 82 17 10                 a0 = u64 [sp + 0x10]
  9867: 64 68                    a1 = s1
  9869: 50 20 54 01 c6 03        ra = 340, jump @849
      :                          @742 [@dyn 170]
  9875: 82 1a                    a3 = u64 [sp]
  9877: 82 13 10                 t1 = u64 [sp + 0x10]
  9880: 82 12 08                 t0 = u64 [sp + 0x8]
  9883: 01                       fallthrough
      :                          @743
  9884: ae 26 f9 00              jump @772 if s1 >=u t0
      :                          @744
  9888: 82 59                    a2 = u64 [s0]
  9890: 82 a8                    a1 = u64 [a3]
  9892: 33 07 01                 a0 = 0x1
  9895: ad 98 1f                 jump @749 if a1 <s a2
      :                          @745
  9898: 95 a7 08                 a0 = a3 + 0x8
  9901: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  9904: 01                       fallthrough
      :                          @746
  9905: aa 69 bc 00              jump @767 if a2 == s1
      :                          @747
  9909: 64 8a                    a3 = a1
  9911: 82 78                    a1 = u64 [a0]
  9913: 95 77 08                 a0 = a0 + 0x8
  9916: 95 66 01                 s1 = s1 + 0x1
  9919: af a8 f2                 jump @746 if a1 >=s a3
      :                          @748
  9922: d8 26 07                 a0 = s1 <u t0
  9925: 01                       fallthrough
      :                          @749
  9926: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9929: ae 29 d3 00              jump @774 if a2 >=u t0
      :                          @750
  9933: 51 07 ce 00              jump @773 if a0 == 0
      :                          @751
  9937: 97 95 03                 s0 = a2 << 0x3
  9940: 97 67 03                 a0 = s1 << 0x3
  9943: c8 73 0a                 a3 = t1 + a0
  9946: 82 a7                    a0 = u64 [a3]
  9948: c8 35 05                 s0 = s0 + t1
  9951: 82 58                    a1 = u64 [s0]
  9953: 7b 57                    u64 [s0] = a0
  9955: 7b a8                    u64 [a3] = a1
  9957: 53 16 02 24              jump @755 if s1 <u 2
      :                          @752
  9961: 64 37                    a0 = t1
  9963: 64 68                    a1 = s1
  9965: 7b 1a                    u64 [sp] = a3
  9967: 50 20 56 01 b4 02        ra = 342, jump @826
      :                          @753 [@dyn 171]
  9973: 82 17 10                 a0 = u64 [sp + 0x10]
  9976: 64 68                    a1 = s1
  9978: 50 20 58 01 59 03        ra = 344, jump @849
      :                          @754 [@dyn 172]
  9984: 82 1a                    a3 = u64 [sp]
  9986: 82 13 10                 t1 = u64 [sp + 0x10]
  9989: 82 12 08                 t0 = u64 [sp + 0x8]
  9992: 01                       fallthrough
      :                          @755
  9993: ae 26 8c 00              jump @772 if s1 >=u t0
      :                          @756
  9997: 82 59                    a2 = u64 [s0]
  9999: 82 a8                    a1 = u64 [a3]
 10001: 33 07 01                 a0 = 0x1
 10004: ad 98 1e                 jump @761 if a1 <s a2
      :                          @757
 10007: 95 a7 08                 a0 = a3 + 0x8
 10010: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
 10013: 01                       fallthrough
      :                          @758
 10014: aa 69 4f                 jump @767 if a2 == s1
      :                          @759
 10017: 64 8a                    a3 = a1
 10019: 82 78                    a1 = u64 [a0]
 10021: 95 77 08                 a0 = a0 + 0x8
 10024: 95 66 01                 s1 = s1 + 0x1
 10027: af a8 f3                 jump @758 if a1 >=s a3
      :                          @760
 10030: d8 26 07                 a0 = s1 <u t0
 10033: 01                       fallthrough
      :                          @761
 10034: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
 10037: ae 29 67                 jump @774 if a2 >=u t0
      :                          @762
 10040: 51 07 63                 jump @773 if a0 == 0
      :                          @763
 10043: 97 97 03                 a0 = a2 << 0x3
 10046: 97 68 03                 a1 = s1 << 0x3
 10049: c8 38 08                 a1 = a1 + t1
 10052: 82 8a                    a3 = u64 [a1]
 10054: c8 37 07                 a0 = a0 + t1
 10057: 82 7b                    a4 = u64 [a0]
 10059: 7b 7a                    u64 [a0] = a3
 10061: 7b 8b                    u64 [a1] = a4
 10063: 53 16 02 42              jump @771 if s1 <u 2
      :                          @764
 10067: 64 37                    a0 = t1
 10069: 64 68                    a1 = s1
 10071: 64 35                    s0 = t1
 10073: 50 20 5a 01 4a 02        ra = 346, jump @826
      :                          @765 [@dyn 173]
 10079: 64 57                    a0 = s0
 10081: 64 68                    a1 = s1
 10083: 50 20 5c 01 f0 02        ra = 348, jump @849
      :                          @766 [@dyn 174]
 10089: 33 07                    a0 = 0
 10091: 28 18                    jump @770
      :                          @767
 10093: 33 07 01                 a0 = 0x1
 10096: 28 13                    jump @770
      :                          @768
 10098: 64 28                    a1 = t0
 10100: d3 28 07                 a0 = a1 ^ t0
 10103: 88 77 01                 a0 = a0 <u 0x1
 10106: 28 09                    jump @770
      :                          @769
 10108: d3 28 07                 a0 = a1 ^ t0
 10111: 88 77 01                 a0 = a0 <u 0x1
 10114: 01                       fallthrough
      :                          @770
 10115: 82 10 28                 ra = u64 [sp + 0x28]
 10118: 82 15 20                 s0 = u64 [sp + 0x20]
 10121: 82 16 18                 s1 = u64 [sp + 0x18]
 10124: 95 11 30                 sp = sp + 0x30
 10127: 32 00                    ret
      :                          @771
 10129: 33 07                    a0 = 0
 10131: 28 f0                    jump @770
      :                          @772
 10133: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
 10136: ae 29 04                 jump @774 if a2 >=u t0
      :                          @773
 10139: 00                       trap
      :                          @774
 10140: 00                       trap
      :                          @775
 10141: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10144: ae 8a 55                 jump @787 if a3 >=u a1
      :                          @776
 10147: ae 89 50                 jump @786 if a2 >=u a1
      :                          @777
 10150: 97 9a 03                 a3 = a2 << 0x3
 10153: c8 7a 0a                 a3 = a3 + a0
 10156: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
 10159: 28 15                    jump @781
      :                          @778
 10161: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
 10164: 7b c4                    u64 [a5] = t2
 10166: 28 05                    jump @780
      :                          @779
 10168: 7b c4                    u64 [a5] = t2
 10170: 01                       fallthrough
      :                          @780
 10171: 95 99 01                 a2 = a2 + 0x1
 10174: 95 22 08                 t0 = t0 + 0x8
 10177: aa 89 32                 jump @786 if a2 == a1
      :                          @781
 10180: 97 93 03                 t1 = a2 << 0x3
 10183: c8 73 03                 t1 = t1 + a0
 10186: 82 34                    t2 = u64 [t1]
 10188: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
 10191: ae 4c ec                 jump @780 if a5 >=u t2
      :                          @782
 10194: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10197: 7b 3c                    u64 [t1] = a5
 10199: 64 2c                    a5 = t0
 10201: 51 0a d8                 jump @778 if a3 == 0
      :                          @783
 10204: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
 10207: ae 4b d9                 jump @779 if a4 >=u t2
      :                          @784
 10210: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 10213: 7b cb                    u64 [a5] = a4
 10215: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 10218: 52 0a f2                 jump @783 if a3 != 0
      :                          @785
 10221: 64 7c                    a5 = a0
 10223: 7b c4                    u64 [a5] = t2
 10225: 28 ca                    jump @780
      :                          @786
 10227: 32 00                    ret
      :                          @787
 10229: 00                       trap
      :                          @788
 10230: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 10233: 7b 10 30                 u64 [sp + 0x30] = ra
 10236: 7b 15 28                 u64 [sp + 0x28] = s0
 10239: 7b 16 20                 u64 [sp + 0x20] = s1
 10242: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10245: ae 8a c2 00              jump @799 if a3 >=u a1
      :                          @789
 10249: ae 89 b0 00              jump @798 if a2 >=u a1
      :                          @790
 10253: 64 73                    t1 = a0
 10255: 97 94 04                 t2 = a2 << 0x4
 10258: 95 42 f0                 t0 = t2 + 0xfffffffffffffff0
 10261: 95 46 e0                 s1 = t2 + 0xffffffffffffffe0
 10264: 95 44 e8                 t2 = t2 + 0xffffffffffffffe8
 10267: 7b 18                    u64 [sp] = a1
 10269: 28 22                    jump @793
      :                          @791
 10271: 7b 7a                    u64 [a0] = a3
 10273: 7b 70 08                 u64 [a0 + 0x8] = ra
 10276: 82 18                    a1 = u64 [sp]
 10278: 82 12 18                 t0 = u64 [sp + 0x18]
 10281: 82 16 10                 s1 = u64 [sp + 0x10]
 10284: 82 14 08                 t2 = u64 [sp + 0x8]
 10287: 01                       fallthrough
      :                          @792
 10288: 95 99 01                 a2 = a2 + 0x1
 10291: 95 22 10                 t0 = t0 + 0x10
 10294: 95 66 10                 s1 = s1 + 0x10
 10297: 95 44 10                 t2 = t2 + 0x10
 10300: aa 89 7d                 jump @798 if a2 == a1
      :                          @793
 10303: 97 9b 04                 a4 = a2 << 0x4
 10306: c8 3b 0b                 a4 = a4 + t1
 10309: 82 ba                    a3 = u64 [a4]
 10311: 82 b7 f0                 a0 = u64 [a4 + 0xfffffffffffffff0]
 10314: 82 b0 08                 ra = u64 [a4 + 0x8]
 10317: 82 bc f8                 a5 = u64 [a4 + 0xfffffffffffffff8]
 10320: d9 7a 05                 s0 = a3 <s a0
 10323: d3 a7 07                 a0 = a0 ^ a3
 10326: d9 c0 0c                 a5 = ra <s a5
 10329: db 75 0c                 a5 = s0 if a0 != 0
 10332: 51 0c d4                 jump @792 if a5 == 0
      :                          @794
 10335: 95 b7 f0                 a0 = a4 + 0xfffffffffffffff0
 10338: 82 7c 08                 a5 = u64 [a0 + 0x8]
 10341: 7b bc 08                 u64 [a4 + 0x8] = a5
 10344: 82 78                    a1 = u64 [a0]
 10346: 95 9c ff                 a5 = a2 + 0xffffffffffffffff
 10349: 7b b8                    u64 [a4] = a1
 10351: 7b 14 08                 u64 [sp + 0x8] = t2
 10354: 64 45                    s0 = t2
 10356: 7b 16 10                 u64 [sp + 0x10] = s1
 10359: 7b 12 18                 u64 [sp + 0x18] = t0
 10362: 64 2b                    a4 = t0
 10364: 51 0c a3                 jump @791 if a5 == 0
      :                          @795
 10367: c8 63 02                 t0 = t1 + s1
 10370: 82 27                    a0 = u64 [t0]
 10372: c8 53 08                 a1 = t1 + s0
 10375: 82 88                    a1 = u64 [a1]
 10377: d9 7a 04                 t2 = a3 <s a0
 10380: d3 a7 07                 a0 = a0 ^ a3
 10383: d9 80 08                 a1 = ra <s a1
 10386: db 74 08                 a1 = t2 if a0 != 0
 10389: c8 b3 07                 a0 = t1 + a4
 10392: 51 08 87                 jump @791 if a1 == 0
      :                          @796
 10395: 82 28 08                 a1 = u64 [t0 + 0x8]
 10398: 7b 78 08                 u64 [a0 + 0x8] = a1
 10401: 82 28                    a1 = u64 [t0]
 10403: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 10406: 7b 78                    u64 [a0] = a1
 10408: 95 bb f0                 a4 = a4 + 0xfffffffffffffff0
 10411: 95 66 f0                 s1 = s1 + 0xfffffffffffffff0
 10414: 95 55 f0                 s0 = s0 + 0xfffffffffffffff0
 10417: 52 0c ce                 jump @795 if a5 != 0
      :                          @797
 10420: 64 37                    a0 = t1
 10422: 28 69 ff                 jump @791
      :                          @798
 10425: 82 10 30                 ra = u64 [sp + 0x30]
 10428: 82 15 28                 s0 = u64 [sp + 0x28]
 10431: 82 16 20                 s1 = u64 [sp + 0x20]
 10434: 95 11 38                 sp = sp + 0x38
 10437: 32 00                    ret
      :                          @799
 10439: 00                       trap
      :                          @800
 10440: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10443: ae 8a 55                 jump @812 if a3 >=u a1
      :                          @801
 10446: ae 89 50                 jump @811 if a2 >=u a1
      :                          @802
 10449: 97 9a 03                 a3 = a2 << 0x3
 10452: c8 7a 0a                 a3 = a3 + a0
 10455: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
 10458: 28 15                    jump @806
      :                          @803
 10460: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
 10463: 7b c4                    u64 [a5] = t2
 10465: 28 05                    jump @805
      :                          @804
 10467: 7b c4                    u64 [a5] = t2
 10469: 01                       fallthrough
      :                          @805
 10470: 95 99 01                 a2 = a2 + 0x1
 10473: 95 22 08                 t0 = t0 + 0x8
 10476: aa 89 32                 jump @811 if a2 == a1
      :                          @806
 10479: 97 93 03                 t1 = a2 << 0x3
 10482: c8 73 03                 t1 = t1 + a0
 10485: 82 34                    t2 = u64 [t1]
 10487: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
 10490: ae c4 ec                 jump @805 if t2 >=u a5
      :                          @807
 10493: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10496: 7b 3c                    u64 [t1] = a5
 10498: 64 2c                    a5 = t0
 10500: 51 0a d8                 jump @803 if a3 == 0
      :                          @808
 10503: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
 10506: ae b4 d9                 jump @804 if t2 >=u a4
      :                          @809
 10509: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 10512: 7b cb                    u64 [a5] = a4
 10514: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 10517: 52 0a f2                 jump @808 if a3 != 0
      :                          @810
 10520: 64 7c                    a5 = a0
 10522: 7b c4                    u64 [a5] = t2
 10524: 28 ca                    jump @805
      :                          @811
 10526: 32 00                    ret
      :                          @812
 10528: 00                       trap
      :                          @813
 10529: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 10532: 7b 15                    u64 [sp] = s0
 10534: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10537: ae 8a 79                 jump @825 if a3 >=u a1
      :                          @814
 10540: ae 89 6f                 jump @824 if a2 >=u a1
      :                          @815
 10543: 97 9a 04                 a3 = a2 << 0x4
 10546: c8 7a 0a                 a3 = a3 + a0
 10549: 95 a3 f0                 t1 = a3 + 0xfffffffffffffff0
 10552: 28 1b                    jump @819
      :                          @816
 10554: 95 ba f0                 a3 = a4 + 0xfffffffffffffff0
 10557: 7b a2                    u64 [a3] = t0
 10559: 7b a4 08                 u64 [a3 + 0x8] = t2
 10562: 28 08                    jump @818
      :                          @817
 10564: 7b a2                    u64 [a3] = t0
 10566: 7b a4 08                 u64 [a3 + 0x8] = t2
 10569: 01                       fallthrough
      :                          @818
 10570: 95 99 01                 a2 = a2 + 0x1
 10573: 95 33 10                 t1 = t1 + 0x10
 10576: aa 89 4b                 jump @824 if a2 == a1
      :                          @819
 10579: 97 9b 04                 a4 = a2 << 0x4
 10582: c8 7b 0b                 a4 = a4 + a0
 10585: 82 b4 08                 t2 = u64 [a4 + 0x8]
 10588: 82 ba f8                 a3 = u64 [a4 + 0xfffffffffffffff8]
 10591: ae a4 eb                 jump @818 if t2 >=u a3
      :                          @820
 10594: 82 ba f8                 a3 = u64 [a4 + 0xfffffffffffffff8]
 10597: 82 b5 f0                 s0 = u64 [a4 + 0xfffffffffffffff0]
 10600: 82 b2                    t0 = u64 [a4]
 10602: 7b ba 08                 u64 [a4 + 0x8] = a3
 10605: 95 9c ff                 a5 = a2 + 0xffffffffffffffff
 10608: 7b b5                    u64 [a4] = s0
 10610: 64 3a                    a3 = t1
 10612: 51 0c c6                 jump @816 if a5 == 0
      :                          @821
 10615: 82 ab f8                 a4 = u64 [a3 + 0xfffffffffffffff8]
 10618: ae b4 ca                 jump @817 if t2 >=u a4
      :                          @822
 10621: 95 ab f0                 a4 = a3 + 0xfffffffffffffff0
 10624: 82 b5 08                 s0 = u64 [a4 + 0x8]
 10627: 7b a5 08                 u64 [a3 + 0x8] = s0
 10630: 82 b5                    s0 = u64 [a4]
 10632: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 10635: 7b a5                    u64 [a3] = s0
 10637: 64 ba                    a3 = a4
 10639: 52 0c e8                 jump @821 if a5 != 0
      :                          @823
 10642: 64 7a                    a3 = a0
 10644: 7b a2                    u64 [a3] = t0
 10646: 7b a4 08                 u64 [a3 + 0x8] = t2
 10649: 28 b1                    jump @818
      :                          @824
 10651: 82 15                    s0 = u64 [sp]
 10653: 95 11 08                 sp = sp + 0x8
 10656: 32 00                    ret
      :                          @825
 10658: 00                       trap
      :                          @826
 10659: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10662: ae 8a 55                 jump @838 if a3 >=u a1
      :                          @827
 10665: ae 89 50                 jump @837 if a2 >=u a1
      :                          @828
 10668: 97 9a 03                 a3 = a2 << 0x3
 10671: c8 7a 0a                 a3 = a3 + a0
 10674: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
 10677: 28 15                    jump @832
      :                          @829
 10679: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
 10682: 7b c4                    u64 [a5] = t2
 10684: 28 05                    jump @831
      :                          @830
 10686: 7b c4                    u64 [a5] = t2
 10688: 01                       fallthrough
      :                          @831
 10689: 95 99 01                 a2 = a2 + 0x1
 10692: 95 22 08                 t0 = t0 + 0x8
 10695: aa 89 32                 jump @837 if a2 == a1
      :                          @832
 10698: 97 93 03                 t1 = a2 << 0x3
 10701: c8 73 03                 t1 = t1 + a0
 10704: 82 34                    t2 = u64 [t1]
 10706: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
 10709: af c4 ec                 jump @831 if t2 >=s a5
      :                          @833
 10712: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10715: 7b 3c                    u64 [t1] = a5
 10717: 64 2c                    a5 = t0
 10719: 51 0a d8                 jump @829 if a3 == 0
      :                          @834
 10722: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
 10725: af b4 d9                 jump @830 if t2 >=s a4
      :                          @835
 10728: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 10731: 7b cb                    u64 [a5] = a4
 10733: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 10736: 52 0a f2                 jump @834 if a3 != 0
      :                          @836
 10739: 64 7c                    a5 = a0
 10741: 7b c4                    u64 [a5] = t2
 10743: 28 ca                    jump @831
      :                          @837
 10745: 32 00                    ret
      :                          @838
 10747: 00                       trap
      :                          @839
 10748: 82 7a 08                 a3 = u64 [a0 + 0x8]
 10751: 82 79                    a2 = u64 [a0]
 10753: ae a9 50                 jump @848 if a2 >=u a3
      :                          @840
 10756: 7b 7a                    u64 [a0] = a3
 10758: 33 0b 03                 a4 = 0x3
 10761: 95 7a 08                 a3 = a0 + 0x8
 10764: ac b8 41                 jump @847 if a1 <u a4
      :                          @841
 10767: 82 7b 10                 a4 = u64 [a0 + 0x10]
 10770: ae b9 3b                 jump @847 if a2 >=u a4
      :                          @842
 10773: 97 8c 03                 a5 = a1 << 0x3
 10776: c8 7c 02                 t0 = a5 + a0
 10779: 7b ab                    u64 [a3] = a4
 10781: 33 0c 03                 a5 = 0x3
 10784: 95 22 f8                 t0 = t0 + 0xfffffffffffffff8
 10787: aa c8 24                 jump @846 if a1 == a5
      :                          @843
 10790: 95 7a 10                 a3 = a0 + 0x10
 10793: 9a 87 03                 a0 = 0x3 - a1
 10796: 33 08 04                 a1 = 0x4
 10799: 33 0c 04                 a5 = 0x4
 10802: 01                       fallthrough
      :                          @844
 10803: 82 ab 08                 a4 = u64 [a3 + 0x8]
 10806: ae b9 17                 jump @847 if a2 >=u a4
      :                          @845
 10809: 7b ab                    u64 [a3] = a4
 10811: 95 cc 01                 a5 = a5 + 0x1
 10814: c8 c7 0b                 a4 = a0 + a5
 10817: 95 aa 08                 a3 = a3 + 0x8
 10820: ab 8b ef                 jump @844 if a4 != a1
      :                          @846
 10823: 64 2a                    a3 = t0
 10825: 7b a9                    u64 [a3] = a2
 10827: 32 00                    ret
      :                          @847
 10829: 7b a9                    u64 [a3] = a2
 10831: 32 00                    ret
      :                          @848
 10833: 32 00                    ret
      :                          @849
 10835: 82 7a 08                 a3 = u64 [a0 + 0x8]
 10838: 82 79                    a2 = u64 [a0]
 10840: af 9a 50                 jump @858 if a3 >=s a2
      :                          @850
 10843: 7b 7a                    u64 [a0] = a3
 10845: 33 0b 03                 a4 = 0x3
 10848: 95 7a 08                 a3 = a0 + 0x8
 10851: ac b8 41                 jump @857 if a1 <u a4
      :                          @851
 10854: 82 7b 10                 a4 = u64 [a0 + 0x10]
 10857: af 9b 3b                 jump @857 if a4 >=s a2
      :                          @852
 10860: 97 8c 03                 a5 = a1 << 0x3
 10863: c8 7c 02                 t0 = a5 + a0
 10866: 7b ab                    u64 [a3] = a4
 10868: 33 0c 03                 a5 = 0x3
 10871: 95 22 f8                 t0 = t0 + 0xfffffffffffffff8
 10874: aa c8 24                 jump @856 if a1 == a5
      :                          @853
 10877: 95 7a 10                 a3 = a0 + 0x10
 10880: 9a 87 03                 a0 = 0x3 - a1
 10883: 33 08 04                 a1 = 0x4
 10886: 33 0c 04                 a5 = 0x4
 10889: 01                       fallthrough
      :                          @854
 10890: 82 ab 08                 a4 = u64 [a3 + 0x8]
 10893: af 9b 17                 jump @857 if a4 >=s a2
      :                          @855
 10896: 7b ab                    u64 [a3] = a4
 10898: 95 cc 01                 a5 = a5 + 0x1
 10901: c8 c7 0b                 a4 = a0 + a5
 10904: 95 aa 08                 a3 = a3 + 0x8
 10907: ab 8b ef                 jump @854 if a4 != a1
      :                          @856
 10910: 64 2a                    a3 = t0
 10912: 7b a9                    u64 [a3] = a2
 10914: 32 00                    ret
      :                          @857
 10916: 7b a9                    u64 [a3] = a2
 10918: 32 00                    ret
      :                          @858
 10920: 32 00                    ret
      :                          @859
 10922: 82 7b 10                 a4 = u64 [a0 + 0x10]
 10925: 82 74                    t2 = u64 [a0]
 10927: 82 7c 18                 a5 = u64 [a0 + 0x18]
 10930: 82 72 08                 t0 = u64 [a0 + 0x8]
 10933: d9 4b 0a                 a3 = a4 <s t2
 10936: d3 4b 0b                 a4 = a4 ^ t2
 10939: d9 2c 0c                 a5 = a5 <s t0
 10942: db ba 0c                 a5 = a3 if a4 != 0
 10945: 51 0c 75                 jump @868 if a5 == 0
      :                          @860
 10948: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 10951: 7b 15 08                 u64 [sp + 0x8] = s0
 10954: 95 7b 10                 a4 = a0 + 0x10
 10957: 82 ba 08                 a3 = u64 [a4 + 0x8]
 10960: 7b 7a 08                 u64 [a0 + 0x8] = a3
 10963: 82 ba                    a3 = u64 [a4]
 10965: 33 0c 03                 a5 = 0x3
 10968: 7b 7a                    u64 [a0] = a3
 10970: ac c8 4f                 jump @867 if a1 <u a5
      :                          @861
 10973: 82 7a 20                 a3 = u64 [a0 + 0x20]
 10976: 82 7c 28                 a5 = u64 [a0 + 0x28]
 10979: d9 4a 03                 t1 = a3 <s t2
 10982: d3 4a 0a                 a3 = a3 ^ t2
 10985: d9 2c 0c                 a5 = a5 <s t0
 10988: db a3 0c                 a5 = t1 if a3 != 0
 10991: 51 0c 3a                 jump @867 if a5 == 0
      :                          @862
 10994: 95 7c 20                 a5 = a0 + 0x20
 10997: 33 07 03                 a0 = 0x3
 11000: 01                       fallthrough
      :                          @863
 11001: 82 c9 08                 a2 = u64 [a5 + 0x8]
 11004: 82 ca                    a3 = u64 [a5]
 11006: 7b c9 f8                 u64 [a5 + 0xfffffffffffffff8] = a2
 11009: 7b ca f0                 u64 [a5 + 0xfffffffffffffff0] = a3
 11012: aa 78 22                 jump @866 if a1 == a0
      :                          @864
 11015: 82 ca 10                 a3 = u64 [a5 + 0x10]
 11018: 82 c3 18                 t1 = u64 [a5 + 0x18]
 11021: 64 cb                    a4 = a5
 11023: 95 cc 10                 a5 = a5 + 0x10
 11026: d9 4a 05                 s0 = a3 <s t2
 11029: d3 4a 0a                 a3 = a3 ^ t2
 11032: d9 23 09                 a2 = t1 <s t0
 11035: db a5 09                 a2 = s0 if a3 != 0
 11038: 95 77 01                 a0 = a0 + 0x1
 11041: 52 09 d8                 jump @863 if a2 != 0
      :                          @865
 11044: 28 05                    jump @867
      :                          @866
 11046: 64 cb                    a4 = a5
 11048: 01                       fallthrough
      :                          @867
 11049: 7b b4                    u64 [a4] = t2
 11051: 7b b2 08                 u64 [a4 + 0x8] = t0
 11054: 82 15 08                 s0 = u64 [sp + 0x8]
 11057: 95 11 10                 sp = sp + 0x10
 11060: 32 00                    ret
      :                          @868
 11062: 32 00                    ret
      :                          @869
 11064: 82 7a 18                 a3 = u64 [a0 + 0x18]
 11067: 82 79 08                 a2 = u64 [a0 + 0x8]
 11070: ae 9a 54                 jump @878 if a3 >=u a2
      :                          @870
 11073: 82 7b 18                 a4 = u64 [a0 + 0x18]
 11076: 82 7c 10                 a5 = u64 [a0 + 0x10]
 11079: 82 72                    t0 = u64 [a0]
 11081: 7b 7b 08                 u64 [a0 + 0x8] = a4
 11084: 7b 7c                    u64 [a0] = a5
 11086: 33 0b 03                 a4 = 0x3
 11089: 95 7c 10                 a5 = a0 + 0x10
 11092: ac b8 37                 jump @877 if a1 <u a4
      :                          @871
 11095: 82 7b 28                 a4 = u64 [a0 + 0x28]
 11098: ae 9b 31                 jump @877 if a4 >=u a2
      :                          @872
 11101: 95 77 20                 a0 = a0 + 0x20
 11104: 33 0b 03                 a4 = 0x3
 11107: 01                       fallthrough
      :                          @873
 11108: 82 7a 08                 a3 = u64 [a0 + 0x8]
 11111: 82 7c                    a5 = u64 [a0]
 11113: 7b 7a f8                 u64 [a0 + 0xfffffffffffffff8] = a3
 11116: 7b 7c f0                 u64 [a0 + 0xfffffffffffffff0] = a5
 11119: aa b8 13                 jump @876 if a1 == a4
      :                          @874
 11122: 82 7a 18                 a3 = u64 [a0 + 0x18]
 11125: 64 7c                    a5 = a0
 11127: 95 77 10                 a0 = a0 + 0x10
 11130: 95 bb 01                 a4 = a4 + 0x1
 11133: ac 9a e7                 jump @873 if a3 <u a2
      :                          @875
 11136: 28 0b                    jump @877
      :                          @876
 11138: 64 7c                    a5 = a0
 11140: 7b c2                    u64 [a5] = t0
 11142: 7b c9 08                 u64 [a5 + 0x8] = a2
 11145: 32 00                    ret
      :                          @877
 11147: 7b c2                    u64 [a5] = t0
 11149: 7b c9 08                 u64 [a5 + 0x8] = a2
 11152: 32 00                    ret
      :                          @878
 11154: 32 00                    ret
      :                          @879
 11156: 95 11 60 fe              sp = sp + 0xfffffffffffffe60
 11160: 7b 10 98 01              u64 [sp + 0x198] = ra
 11164: 7b 15 90 01              u64 [sp + 0x190] = s0
 11168: 7b 16 88 01              u64 [sp + 0x188] = s1
 11172: 33 0b 15                 a4 = 0x15
 11175: 7b 1a 48                 u64 [sp + 0x48] = a3
 11178: 7b 19 58                 u64 [sp + 0x58] = a2
 11181: 64 80                    ra = a1
 11183: ae b8 2b                 jump @884 if a1 >=u a4
      :                          @880
 11186: 64 72                    t0 = a0
 11188: 01                       fallthrough
      :                          @881
 11189: 33 07 01                 a0 = 0x1
 11192: ae 07 10                 jump @883 if a0 >=u ra
      :                          @882
 11195: 33 09 01                 a2 = 0x1
 11198: 64 27                    a0 = t0
 11200: 64 08                    a1 = ra
 11202: 50 20 5e 01 e1 fd        ra = 350, jump @826
      :                          @883 [@dyn 175]
 11208: 82 10 98 01              ra = u64 [sp + 0x198]
 11212: 82 15 90 01              s0 = u64 [sp + 0x190]
 11216: 82 16 88 01              s1 = u64 [sp + 0x188]
 11220: 95 11 a0 01              sp = sp + 0x1a0
 11224: 32 00                    ret
      :                          @884
 11226: 7b 17 08                 u64 [sp + 0x8] = a0
 11229: 49 11 78 01              u64 [sp + 120] = 0x1
 11233: 33 05 01 01              s0 = 0x101
 11237: 33 07 01                 a0 = 0x1
 11240: 7b 10                    u64 [sp] = ra
 11242: 01                       fallthrough
      :                          @885
 11243: 82 18 78                 a1 = u64 [sp + 0x78]
 11246: d2 87 07                 a0 = a0 & a1
 11249: 7b 17 70                 u64 [sp + 0x70] = a0
 11252: 82 12 08                 t0 = u64 [sp + 0x8]
 11255: 01                       fallthrough
      :                          @886
 11256: 81 17 48                 a0 = i32 [sp + 0x48]
 11259: 51 07 b6 05              jump @982 if a0 == 0
      :                          @887
 11263: 82 17 78                 a0 = u64 [sp + 0x78]
 11266: 84 77 01                 a0 = a0 & 0x1
 11269: 7b 12 80 00              u64 [sp + 0x80] = t0
 11273: 51 07 74 02              jump @927 if a0 == 0
      :                          @888
 11277: 98 0b 02                 a4 = ra >> 0x2
 11280: 97 b6 01                 s1 = a4 << 0x1
 11283: c8 b6 03                 t1 = s1 + a4
 11286: 54 10 31 29              jump @891 if ra <=u 49
      :                          @889
 11290: 95 b5 ff                 s0 = a4 + 0xffffffffffffffff
 11293: 97 b7 03                 a0 = a4 << 0x3
 11296: c8 27 07                 a0 = a0 + t0
 11299: 97 58 03                 a1 = s0 << 0x3
 11302: c8 28 08                 a1 = a1 + t0
 11305: 82 79                    a2 = u64 [a0]
 11307: 82 88                    a1 = u64 [a1]
 11309: af 89 17                 jump @892 if a2 >=s a1
      :                          @890
 11312: 49 11 28 01              u64 [sp + 40] = 0x1
 11316: 64 94                    t2 = a2
 11318: 7b 15 50                 u64 [sp + 0x50] = s0
 11321: 64 b5                    s0 = a4
 11323: 64 89                    a2 = a1
 11325: 28 10                    jump @893
      :                          @891
 11327: 33 09                    a2 = 0
 11329: 28 1e 01                 jump @900
      :                          @892
 11332: 49 11 28                 u64 [sp + 40] = 0
 11335: 64 84                    t2 = a1
 11337: 7b 1b 50                 u64 [sp + 0x50] = a4
 11340: 01                       fallthrough
      :                          @893
 11341: 95 b8 01                 a1 = a4 + 0x1
 11344: 7b 18 40                 u64 [sp + 0x40] = a1
 11347: 97 88 03                 a1 = a1 << 0x3
 11350: 82 1b 80 00              a4 = u64 [sp + 0x80]
 11354: c8 b8 08                 a1 = a1 + a4
 11357: 82 87                    a0 = u64 [a1]
 11359: d9 97 02                 t0 = a0 <s a2
 11362: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
 11365: 97 68 03                 a1 = s1 << 0x3
 11368: c8 b8 08                 a1 = a1 + a4
 11371: 97 ac 03                 a5 = a3 << 0x3
 11374: c8 cb 0b                 a4 = a4 + a5
 11377: 82 8c                    a5 = u64 [a1]
 11379: 82 b8                    a1 = u64 [a4]
 11381: e5 97 07                 a0 = mins(a0, a2)
 11384: d9 47 09                 a2 = a0 <s t2
 11387: 7b 12 38                 u64 [sp + 0x38] = t0
 11390: 82 17 28                 a0 = u64 [sp + 0x28]
 11393: c8 27 07                 a0 = a0 + t0
 11396: c8 97 07                 a0 = a0 + a2
 11399: 7b 10 68                 u64 [sp + 0x68] = ra
 11402: 7b 15 60                 u64 [sp + 0x60] = s0
 11405: 7b 19 30                 u64 [sp + 0x30] = a2
 11408: af 8c 13                 jump @895 if a5 >=s a1
      :                          @894
 11411: 95 77 01                 a0 = a0 + 0x1
 11414: 7b 17 18                 u64 [sp + 0x18] = a0
 11417: 7b 1c 20                 u64 [sp + 0x20] = a5
 11420: 7b 1a 28                 u64 [sp + 0x28] = a3
 11423: 64 6a                    a3 = s1
 11425: 28 0e                    jump @896
      :                          @895
 11427: 7b 18 20                 u64 [sp + 0x20] = a1
 11430: 7b 16 28                 u64 [sp + 0x28] = s1
 11433: 64 c8                    a1 = a5
 11435: 7b 17 18                 u64 [sp + 0x18] = a0
 11438: 01                       fallthrough
      :                          @896
 11439: 86 66 01                 s1 = s1 | 0x1
 11442: 97 6b 03                 a4 = s1 << 0x3
 11445: 82 15 80 00              s0 = u64 [sp + 0x80]
 11449: c8 5b 0b                 a4 = a4 + s0
 11452: 82 bb                    a4 = u64 [a4]
 11454: d9 8b 07                 a0 = a4 <s a1
 11457: 95 34 ff                 t2 = t1 + 0xffffffffffffffff
 11460: 97 39 03                 a2 = t1 << 0x3
 11463: c8 59 09                 a2 = a2 + s0
 11466: 97 4c 03                 a5 = t2 << 0x3
 11469: c8 5c 0c                 a5 = a5 + s0
 11472: 82 92                    t0 = u64 [a2]
 11474: 82 c0                    ra = u64 [a5]
 11476: e5 8b 08                 a1 = mins(a4, a1)
 11479: 82 19 20                 a2 = u64 [sp + 0x20]
 11482: d9 98 09                 a2 = a1 <s a2
 11485: 7b 17 20                 u64 [sp + 0x20] = a0
 11488: 82 18 18                 a1 = u64 [sp + 0x18]
 11491: c8 87 07                 a0 = a0 + a1
 11494: c8 97 07                 a0 = a0 + a2
 11497: af 02 12                 jump @898 if t0 >=s ra
      :                          @897
 11500: 95 77 01                 a0 = a0 + 0x1
 11503: 7b 17 18                 u64 [sp + 0x18] = a0
 11506: 7b 12 10                 u64 [sp + 0x10] = t0
 11509: 64 47                    a0 = t2
 11511: 64 34                    t2 = t1
 11513: 28 0d                    jump @899
      :                          @898
 11515: 7b 10 10                 u64 [sp + 0x10] = ra
 11518: 7b 17 18                 u64 [sp + 0x18] = a0
 11521: 64 37                    a0 = t1
 11523: 64 20                    ra = t0
 11525: 01                       fallthrough
      :                          @899
 11526: 82 15 60                 s0 = u64 [sp + 0x60]
 11529: 82 1c 50                 a5 = u64 [sp + 0x50]
 11532: 82 18 40                 a1 = u64 [sp + 0x40]
 11535: 82 1b 38                 a4 = u64 [sp + 0x38]
 11538: da bc 08                 a1 = a5 if a4 == 0
 11541: 95 33 01                 t1 = t1 + 0x1
 11544: 97 3c 03                 a5 = t1 << 0x3
 11547: 82 12 80 00              t0 = u64 [sp + 0x80]
 11551: c8 2c 0c                 a5 = a5 + t0
 11554: 82 cc                    a5 = u64 [a5]
 11556: 82 1b 30                 a4 = u64 [sp + 0x30]
 11559: da b8 05                 s0 = a1 if a4 == 0
 11562: 82 18 28                 a1 = u64 [sp + 0x28]
 11565: 82 1b 20                 a4 = u64 [sp + 0x20]
 11568: da b8 06                 s1 = a1 if a4 == 0
 11571: da 96 0a                 a3 = s1 if a2 == 0
 11574: d9 0c 09                 a2 = a5 <s ra
 11577: db 93 07                 a0 = t1 if a2 != 0
 11580: e5 0c 0c                 a5 = mins(a5, ra)
 11583: 82 18 10                 a1 = u64 [sp + 0x10]
 11586: d9 8c 08                 a1 = a5 <s a1
 11589: db 84 07                 a0 = t2 if a1 != 0
 11592: c8 98 08                 a1 = a1 + a2
 11595: 82 19 18                 a2 = u64 [sp + 0x18]
 11598: c8 89 09                 a2 = a2 + a1
 11601: 64 73                    t1 = a0
 11603: 64 a6                    s1 = a3
 11605: 64 5b                    a4 = s0
 11607: 82 10 68                 ra = u64 [sp + 0x68]
 11610: 33 05 01 01              s0 = 0x101
 11614: 01                       fallthrough
      :                          @900
 11615: 97 67 03                 a0 = s1 << 0x3
 11618: c8 27 07                 a0 = a0 + t0
 11621: 97 b8 03                 a1 = a4 << 0x3
 11624: c8 82 0a                 a3 = t0 + a1
 11627: 82 78                    a1 = u64 [a0]
 11629: 82 a7                    a0 = u64 [a3]
 11631: af 78 0c                 jump @902 if a1 >=s a0
      :                          @901
 11634: 95 99 01                 a2 = a2 + 0x1
 11637: 64 8c                    a5 = a1
 11639: 64 ba                    a3 = a4
 11641: 28 0b                    jump @903
      :                          @902
 11643: 64 7c                    a5 = a0
 11645: 64 6a                    a3 = s1
 11647: 64 b6                    s1 = a4
 11649: 64 87                    a0 = a1
 11651: 01                       fallthrough
      :                          @903
 11652: 97 38 03                 a1 = t1 << 0x3
 11655: c8 28 08                 a1 = a1 + t0
 11658: 82 8b                    a4 = u64 [a1]
 11660: d9 7b 08                 a1 = a4 <s a0
 11663: e5 7b 07                 a0 = mins(a4, a0)
 11666: c8 89 09                 a2 = a2 + a1
 11669: af c7 09                 jump @906 if a0 >=s a5
      :                          @904
 11672: 55 19 0b 1a              jump @908 if a2 >=u 11
      :                          @905
 11676: 28 49                    jump @911
      :                          @906
 11678: da 8a 03                 t1 = a3 if a1 == 0
 11681: 64 36                    s1 = t1
 11683: 88 97 01                 a0 = a2 <u 0x1
 11686: 82 18 70                 a1 = u64 [sp + 0x70]
 11689: d2 87 07                 a0 = a0 & a1
 11692: 51 07 39                 jump @911 if a0 == 0
      :                          @907
 11695: 28 f0 00                 jump @929
      :                          @908
 11698: 98 07 01                 a0 = ra >> 0x1
 11701: 97 08 03                 a1 = ra << 0x3
 11704: c8 28 08                 a1 = a1 + t0
 11707: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 11710: 64 29                    a2 = t0
 11712: 01                       fallthrough
      :                          @909
 11713: 82 8a                    a3 = u64 [a1]
 11715: 82 9b                    a4 = u64 [a2]
 11717: 7b 9a                    u64 [a2] = a3
 11719: 7b 8b                    u64 [a1] = a4
 11721: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 11724: 95 99 08                 a2 = a2 + 0x8
 11727: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 11730: 52 07 ef                 jump @909 if a0 != 0
      :                          @910
 11733: 85 66 ff                 s1 = s1 ^ 0xffffffffffffffff
 11736: c8 06 06                 s1 = s1 + ra
 11739: 82 18 70                 a1 = u64 [sp + 0x70]
 11742: 84 87 01                 a0 = a1 & 0x1
 11745: 52 07 be 00              jump @929 if a0 != 0
      :                          @911
 11749: 97 67 03                 a0 = s1 << 0x3
 11752: 82 18 58                 a1 = u64 [sp + 0x58]
 11755: 51 08 d1 00              jump @932 if a1 == 0
      :                          @912
 11759: ae 06 d3 03              jump @984 if s1 >=u ra
      :                          @913
 11763: c8 72 08                 a1 = t0 + a0
 11766: 82 19 58                 a2 = u64 [sp + 0x58]
 11769: 82 9a                    a3 = u64 [a2]
 11771: 82 89                    a2 = u64 [a1]
 11773: ad 9a c3 00              jump @933 if a3 <s a2
      :                          @914
 11777: 82 27                    a0 = u64 [t0]
 11779: 7b 29                    u64 [t0] = a2
 11781: 7b 87                    u64 [a1] = a0
 11783: 82 28                    a1 = u64 [t0]
 11785: 33 07                    a0 = 0
 11787: 95 29 08                 a2 = t0 + 0x8
 11790: 95 0a ff                 a3 = ra + 0xffffffffffffffff
 11793: 54 0a 22                 jump @919 if a3 <=u 0
      :                          @915
 11796: 97 7b 03                 a4 = a0 << 0x3
 11799: c8 9b 0b                 a4 = a4 + a2
 11802: 01                       fallthrough
      :                          @916
 11803: 82 bc                    a5 = u64 [a4]
 11805: ad c8 16                 jump @919 if a1 <s a5
      :                          @917
 11808: 95 77 01                 a0 = a0 + 0x1
 11811: 95 bb 08                 a4 = a4 + 0x8
 11814: ab 7a f5                 jump @916 if a3 != a0
      :                          @918
 11817: 64 a7                    a0 = a3
 11819: 97 ab 03                 a4 = a3 << 0x3
 11822: c8 9b 0b                 a4 = a4 + a2
 11825: 28 09                    jump @920
      :                          @919
 11827: 97 ab 03                 a4 = a3 << 0x3
 11830: c8 9b 0b                 a4 = a4 + a2
 11833: 01                       fallthrough
      :                          @920
 11834: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 11837: ae a7 26                 jump @924 if a0 >=u a3
      :                          @921
 11840: 82 b6 f8                 s1 = u64 [a4 + 0xfffffffffffffff8]
 11843: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
 11846: 64 cb                    a4 = a5
 11848: ad 68 f2                 jump @920 if a1 <s s1
      :                          @922
 11851: 97 7b 03                 a4 = a0 << 0x3
 11854: c8 9b 0b                 a4 = a4 + a2
 11857: 82 b5                    s0 = u64 [a4]
 11859: 7b b6                    u64 [a4] = s1
 11861: 7b c5                    u64 [a5] = s0
 11863: 33 05 01 01              s0 = 0x101
 11867: 95 77 01                 a0 = a0 + 0x1
 11870: ac a7 b6                 jump @915 if a0 <u a3
      :                          @923
 11873: 28 d2                    jump @919
      :                          @924
 11875: 95 77 01                 a0 = a0 + 0x1
 11878: 7b 28                    u64 [t0] = a1
 11880: ac 70 5c 03              jump @986 if ra <u a0
      :                          @925
 11884: c9 70 00                 ra = ra - a0
 11887: 97 77 03                 a0 = a0 << 0x3
 11890: c8 72 02                 t0 = t0 + a0
 11893: 55 10 15 83 fd           jump @886 if ra >=u 21
      :                          @926
 11898: 28 3b fd                 jump @881
      :                          @927
 11901: 64 27                    a0 = t0
 11903: 64 08                    a1 = ra
 11905: 64 05                    s0 = ra
 11907: 50 20 60 01 e9 eb        ra = 352, jump @465
      :                          @928 [@dyn 176]
 11913: 82 12 80 00              t0 = u64 [sp + 0x80]
 11917: 64 50                    ra = s0
 11919: 33 05 01 01              s0 = 0x101
 11923: 82 17 48                 a0 = u64 [sp + 0x48]
 11926: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 11929: 7b 17 48                 u64 [sp + 0x48] = a0
 11932: 28 71 fd                 jump @888
      :                          @929
 11935: 64 27                    a0 = t0
 11937: 64 08                    a1 = ra
 11939: 64 05                    s0 = ra
 11941: 50 20 62 01 55 f6        ra = 354, jump @700
      :                          @930 [@dyn 177]
 11947: 82 12 80 00              t0 = u64 [sp + 0x80]
 11951: 64 50                    ra = s0
 11953: 33 05 01 01              s0 = 0x101
 11957: 51 07 30 ff              jump @911 if a0 == 0
      :                          @931
 11961: 28 0f fd                 jump @883
      :                          @932
 11964: 82 18                    a1 = u64 [sp]
 11966: 28 08                    jump @934
      :                          @933
 11968: 7b 12 08                 u64 [sp + 0x8] = t0
 11971: 64 08                    a1 = ra
 11973: 01                       fallthrough
      :                          @934
 11974: ae 86 fd 02              jump @985 if s1 >=u a1
      :                          @935
 11978: 82 1b 08                 a4 = u64 [sp + 0x8]
 11981: c8 b7 07                 a0 = a0 + a4
 11984: 82 7a                    a3 = u64 [a0]
 11986: 82 b9                    a2 = u64 [a4]
 11988: 7b ba                    u64 [a4] = a3
 11990: 7b 79                    u64 [a0] = a2
 11992: 82 b0                    ra = u64 [a4]
 11994: 33 09                    a2 = 0
 11996: 95 b2 08                 t0 = a4 + 0x8
 11999: 7b 18                    u64 [sp] = a1
 12001: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 12004: 64 27                    a0 = t0
 12006: 01                       fallthrough
      :                          @936
 12007: 82 7a                    a3 = u64 [a0]
 12009: af 0a 0f                 jump @939 if a3 >=s ra
      :                          @937
 12012: 95 99 01                 a2 = a2 + 0x1
 12015: 95 77 08                 a0 = a0 + 0x8
 12018: ab 98 f5                 jump @936 if a1 != a2
      :                          @938
 12021: 64 89                    a2 = a1
 12023: 01                       fallthrough
      :                          @939
 12024: 82 17                    a0 = u64 [sp]
 12026: 97 77 03                 a0 = a0 << 0x3
 12029: 82 1a 08                 a3 = u64 [sp + 0x8]
 12032: c8 a7 07                 a0 = a0 + a3
 12035: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
 12038: 01                       fallthrough
      :                          @940
 12039: 64 8b                    a4 = a1
 12041: ae 89 0e                 jump @942 if a2 >=u a1
      :                          @941
 12044: 82 a7                    a0 = u64 [a3]
 12046: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
 12049: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 12052: af 07 f3                 jump @940 if a0 >=s ra
      :                          @942
 12055: 64 b8                    a1 = a4
 12057: ac 9b ac 02              jump @987 if a4 <u a2
      :                          @943
 12061: 33 0b                    a4 = 0
 12063: 33 0c                    a5 = 0
 12065: 33 06                    s1 = 0
 12067: 33 03                    t1 = 0
 12069: 7b 19 40                 u64 [sp + 0x40] = a2
 12072: 97 97 03                 a0 = a2 << 0x3
 12075: c8 72 09                 a2 = t0 + a0
 12078: 7b 18 30                 u64 [sp + 0x30] = a1
 12081: 97 87 03                 a0 = a1 << 0x3
 12084: c8 72 08                 a1 = t0 + a0
 12087: 33 04 80 00              t2 = 0x80
 12091: 7b 19 38                 u64 [sp + 0x38] = a2
 12094: 64 9a                    a3 = a2
 12096: 33 02 80 00              t0 = 0x80
 12100: 7b 10 50                 u64 [sp + 0x50] = ra
 12103: 28 42                    jump @946
      :                          @944
 12105: 97 00 03                 ra = ra << 0x3
 12108: c8 80 00                 ra = ra + a1
 12111: 82 17 60                 a0 = u64 [sp + 0x60]
 12114: 7b 07                    u64 [ra] = a0
 12116: 95 bb 01                 a4 = a4 + 0x1
 12119: 95 66 01                 s1 = s1 + 0x1
 12122: 82 10 50                 ra = u64 [sp + 0x50]
 12125: 82 14 68                 t2 = u64 [sp + 0x68]
 12128: 01                       fallthrough
      :                          @945
 12129: d3 cb 07                 a0 = a4 ^ a5
 12132: 64 49                    a2 = t2
 12134: 94 79                    a2 = 0 if a0 != 0
 12136: 97 99 03                 a2 = a2 << 0x3
 12139: c8 9a 0a                 a3 = a3 + a2
 12142: d3 36 07                 a0 = s1 ^ t1
 12145: 82 12 70                 t0 = u64 [sp + 0x70]
 12148: 9a 29                    a2 = -t0
 12150: 94 79                    a2 = 0 if a0 != 0
 12152: 97 99 03                 a2 = a2 << 0x3
 12155: c8 98 08                 a1 = a1 + a2
 12158: 33 05 01 01              s0 = 0x101
 12162: 82 17 78                 a0 = u64 [sp + 0x78]
 12165: ac 57 3e 01              jump @968 if a0 <u s0
      :                          @946
 12169: c9 a8 07                 a0 = a1 - a3
 12172: 98 79 03                 a2 = a0 >> 0x3
 12175: 7b 1a 80 00              u64 [sp + 0x80] = a3
 12179: 7b 19 78                 u64 [sp + 0x78] = a2
 12182: ac 59 38                 jump @953 if a2 <u s0
      :                          @947
 12185: aa cb 71                 jump @957 if a4 == a5
      :                          @948
 12188: ab 36 b4 00              jump @964 if s1 != t1
      :                          @949
 12192: 51 02 9a 00              jump @962 if t0 == 0
      :                          @950
 12196: 33 07                    a0 = 0
 12198: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
 12201: 95 16 08 01              s1 = sp + 0x108
 12205: 95 13 08 01              t1 = sp + 0x108
 12209: 01                       fallthrough
      :                          @951
 12210: 82 a9                    a2 = u64 [a3]
 12212: 78 37                    u8 [t1] = a0
 12214: 95 75 01                 s0 = a0 + 0x1
 12217: d9 09 07                 a0 = a2 <s ra
 12220: c8 73 03                 t1 = t1 + a0
 12223: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 12226: 64 57                    a0 = s0
 12228: ab 52 ee                 jump @951 if t0 != s0
      :                          @952
 12231: 82 1a 80 00              a3 = u64 [sp + 0x80]
 12235: 28 85 00                 jump @964
      :                          @953
 12238: 64 25                    s0 = t0
 12240: 64 49                    a2 = t2
 12242: d8 cb 04                 t2 = a4 <u a5
 12245: d8 36 0a                 a3 = s1 <u t1
 12248: d4 a4 02                 t0 = t2 | a3
 12251: 51 02 1f                 jump @956 if t0 == 0
      :                          @954
 12254: 82 1a 78                 a3 = u64 [sp + 0x78]
 12257: 95 a7 80                 a0 = a3 + 0xffffffffffffff80
 12260: db 47 05                 s0 = a0 if t2 != 0
 12263: da 2a 07                 a0 = a3 if t0 == 0
 12266: 64 52                    t0 = s0
 12268: da 47 09                 a2 = a0 if t2 == 0
 12271: 64 94                    t2 = a2
 12273: 82 1a 80 00              a3 = u64 [sp + 0x80]
 12277: ab cb a7                 jump @948 if a4 != a5
      :                          @955
 12280: 28 12                    jump @957
      :                          @956
 12282: 98 74 04                 t2 = a0 >> 0x4
 12285: 82 17 78                 a0 = u64 [sp + 0x78]
 12288: c9 47 02                 t0 = a0 - t2
 12291: 82 1a 80 00              a3 = u64 [sp + 0x80]
 12295: ab cb 95                 jump @948 if a4 != a5
      :                          @957
 12298: 51 04 3a                 jump @963 if t2 == 0
      :                          @958
 12301: 33 07                    a0 = 0
 12303: 95 1b 88 00              a4 = sp + 0x88
 12307: 95 1c 88 00              a5 = sp + 0x88
 12311: 01                       fallthrough
      :                          @959
 12312: 82 a5                    s0 = u64 [a3]
 12314: 78 c7                    u8 [a5] = a0
 12316: 95 79 01                 a2 = a0 + 0x1
 12319: d9 05 07                 a0 = s0 <s ra
 12322: 85 77 01                 a0 = a0 ^ 0x1
 12325: c8 7c 0c                 a5 = a5 + a0
 12328: 95 aa 08                 a3 = a3 + 0x8
 12331: 64 97                    a0 = a2
 12333: ab 94 eb                 jump @959 if t2 != a2
      :                          @960
 12336: 82 1a 80 00              a3 = u64 [sp + 0x80]
 12340: ab 36 1c                 jump @964 if s1 != t1
      :                          @961
 12343: 28 69 ff                 jump @949
      :                          @962
 12346: 95 16 08 01              s1 = sp + 0x108
 12350: 95 13 08 01              t1 = sp + 0x108
 12354: 28 0e                    jump @964
      :                          @963
 12356: 95 1b 88 00              a4 = sp + 0x88
 12360: 95 1c 88 00              a5 = sp + 0x88
 12364: aa 36 54 ff              jump @949 if s1 == t1
      :                          @964
 12368: 7b 12 70                 u64 [sp + 0x70] = t0
 12371: c9 bc 07                 a0 = a5 - a4
 12374: c9 63 09                 a2 = t1 - s1
 12377: e6 97 02                 t0 = minu(a0, a2)
 12380: 51 02 05 ff              jump @945 if t0 == 0
      :                          @965
 12384: 7b 14 68                 u64 [sp + 0x68] = t2
 12387: 7c b7                    a0 = u8 [a4]
 12389: 7c 64                    t2 = u8 [s1]
 12391: 97 77 03                 a0 = a0 << 0x3
 12394: c8 a7 07                 a0 = a0 + a3
 12397: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
 12400: 97 09 03                 a2 = ra << 0x3
 12403: c8 89 09                 a2 = a2 + a1
 12406: 82 99                    a2 = u64 [a2]
 12408: 82 75                    s0 = u64 [a0]
 12410: 7b 15 60                 u64 [sp + 0x60] = s0
 12413: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 12416: 7b 79                    u64 [a0] = a2
 12418: 51 02 c7 fe              jump @944 if t0 == 0
      :                          @966
 12422: 7c b7 01                 a0 = u8 [a4 + 0x1]
 12425: 97 77 03                 a0 = a0 << 0x3
 12428: c8 a7 07                 a0 = a0 + a3
 12431: 85 49 ff                 a2 = t2 ^ 0xffffffffffffffff
 12434: 82 7a                    a3 = u64 [a0]
 12436: 97 99 03                 a2 = a2 << 0x3
 12439: 86 99 00 f8              a2 = a2 | 0xfffffffffffff800
 12443: c8 89 09                 a2 = a2 + a1
 12446: 7b 9a                    u64 [a2] = a3
 12448: 82 1a 80 00              a3 = u64 [sp + 0x80]
 12452: 7c 64 01                 t2 = u8 [s1 + 0x1]
 12455: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
 12458: 97 09 03                 a2 = ra << 0x3
 12461: c8 89 09                 a2 = a2 + a1
 12464: 82 99                    a2 = u64 [a2]
 12466: 95 bb 01                 a4 = a4 + 0x1
 12469: 95 66 01                 s1 = s1 + 0x1
 12472: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 12475: 7b 79                    u64 [a0] = a2
 12477: 52 02 c9                 jump @966 if t0 != 0
      :                          @967
 12480: 28 89 fe                 jump @944
      :                          @968
 12483: ae cb 2b                 jump @972 if a4 >=u a5
      :                          @969
 12486: 82 12 08                 t0 = u64 [sp + 0x8]
 12489: 64 a3                    t1 = a3
 12491: 01                       fallthrough
      :                          @970
 12492: 7c c7 ff                 a0 = u8 [a5 + 0xffffffffffffffff]
 12495: 97 77 03                 a0 = a0 << 0x3
 12498: c8 37 07                 a0 = a0 + t1
 12501: 82 85 f8                 s0 = u64 [a1 + 0xfffffffffffffff8]
 12504: 82 79                    a2 = u64 [a0]
 12506: 95 c6 ff                 s1 = a5 + 0xffffffffffffffff
 12509: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
 12512: 7b 75                    u64 [a0] = s0
 12514: 7b 89 f8                 u64 [a1 + 0xfffffffffffffff8] = a2
 12517: 64 a8                    a1 = a3
 12519: 64 6c                    a5 = s1
 12521: ac 6b e3                 jump @970 if a4 <u s1
      :                          @971
 12524: 28 27                    jump @974
      :                          @972
 12526: 82 12 08                 t0 = u64 [sp + 0x8]
 12529: ae 36 22                 jump @974 if s1 >=u t1
      :                          @973
 12532: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
 12535: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 12538: 97 77 03                 a0 = a0 << 0x3
 12541: c8 87 07                 a0 = a0 + a1
 12544: 82 79                    a2 = u64 [a0]
 12546: 82 ab                    a4 = u64 [a3]
 12548: 95 3c ff                 a5 = t1 + 0xffffffffffffffff
 12551: 7b a9                    u64 [a3] = a2
 12553: 7b 7b                    u64 [a0] = a4
 12555: 95 aa 08                 a3 = a3 + 0x8
 12558: 64 c3                    t1 = a5
 12560: ac c6 e4                 jump @973 if s1 <u a5
      :                          @974
 12563: 82 17 38                 a0 = u64 [sp + 0x38]
 12566: c9 7a 07                 a0 = a3 - a0
 12569: 98 77 03                 a0 = a0 >> 0x3
 12572: 82 16 40                 s1 = u64 [sp + 0x40]
 12575: c8 76 06                 s1 = s1 + a0
 12578: 7b 20                    u64 [t0] = ra
 12580: 82 18                    a1 = u64 [sp]
 12582: ae 86 9d 00              jump @985 if s1 >=u a1
      :                          @975
 12586: 97 67 03                 a0 = s1 << 0x3
 12589: c8 72 09                 a2 = t0 + a0
 12592: 82 97                    a0 = u64 [a2]
 12594: 7b 27                    u64 [t0] = a0
 12596: 7b 90                    u64 [a2] = ra
 12598: 64 25                    s0 = t0
 12600: c9 68 08                 a1 = a1 - s1
 12603: 7b 18 80 00              u64 [sp + 0x80] = a1
 12607: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
 12610: 95 97 08                 a0 = a2 + 0x8
 12613: ae b6 28                 jump @978 if s1 >=u a4
      :                          @976
 12616: 7b 17 78                 u64 [sp + 0x78] = a0
 12619: 64 57                    a0 = s0
 12621: 64 68                    a1 = s1
 12623: 7b 19 70                 u64 [sp + 0x70] = a2
 12626: 82 19 58                 a2 = u64 [sp + 0x58]
 12629: 82 1a 48                 a3 = u64 [sp + 0x48]
 12632: 64 b5                    s0 = a4
 12634: 50 20 64 01 3a fa        ra = 356, jump @879
      :                          @977 [@dyn 178]
 12640: 64 50                    ra = s0
 12642: 82 17 70                 a0 = u64 [sp + 0x70]
 12645: 7b 17 58                 u64 [sp + 0x58] = a0
 12648: 82 15 78                 s0 = u64 [sp + 0x78]
 12651: 28 10                    jump @980
      :                          @978
 12653: 64 b8                    a1 = a4
 12655: 82 1a 48                 a3 = u64 [sp + 0x48]
 12658: 50 20 66 01 22 fa        ra = 358, jump @879
      :                          @979 [@dyn 179]
 12664: 64 60                    ra = s1
 12666: 01                       fallthrough
      :                          @980
 12667: 82 17 40                 a0 = u64 [sp + 0x40]
 12670: 82 18 30                 a1 = u64 [sp + 0x30]
 12673: d8 87 07                 a0 = a0 <u a1
 12676: 85 77 01                 a0 = a0 ^ 0x1
 12679: 82 18 80 00              a1 = u64 [sp + 0x80]
 12683: e6 86 08                 a1 = minu(s1, a1)
 12686: 82 19                    a2 = u64 [sp]
 12688: 98 99 03                 a2 = a2 >> 0x3
 12691: d8 98 08                 a1 = a1 <u a2
 12694: 85 88 01                 a1 = a1 ^ 0x1
 12697: 7b 18 78                 u64 [sp + 0x78] = a1
 12700: 7b 10                    u64 [sp] = ra
 12702: 7b 15 08                 u64 [sp + 0x8] = s0
 12705: 64 52                    t0 = s0
 12707: 33 08 15                 a1 = 0x15
 12710: 33 05 01 01              s0 = 0x101
 12714: ae 80 41 fa              jump @885 if ra >=u a1
      :                          @981
 12718: 28 07 fa                 jump @881
      :                          @982
 12721: 64 27                    a0 = t0
 12723: 64 08                    a1 = ra
 12725: 33 00 68 01              ra = 0x168
 12729: 98 82 01                 t0 = a1 >> 0x1
 12732: 28 9a 19                 jump @1416
      :                          @983 [@dyn 180]
 12735: 28 09 fa                 jump @883
      :                          @984
 12738: 00                       trap
      :                          @985
 12739: 00                       trap
      :                          @986
 12740: 00                       trap
      :                          @987
 12741: 00                       trap
      :                          @988
 12742: 95 11 60 fe              sp = sp + 0xfffffffffffffe60
 12746: 7b 10 98 01              u64 [sp + 0x198] = ra
 12750: 7b 15 90 01              u64 [sp + 0x190] = s0
 12754: 7b 16 88 01              u64 [sp + 0x188] = s1
 12758: 33 0b 15                 a4 = 0x15
 12761: 7b 1a 30                 u64 [sp + 0x30] = a3
 12764: 7b 19 38                 u64 [sp + 0x38] = a2
 12767: 64 80                    ra = a1
 12769: ae b8 2b                 jump @993 if a1 >=u a4
      :                          @989
 12772: 64 7c                    a5 = a0
 12774: 01                       fallthrough
      :                          @990
 12775: 33 07 01                 a0 = 0x1
 12778: ae 07 10                 jump @992 if a0 >=u ra
      :                          @991
 12781: 33 09 01                 a2 = 0x1
 12784: 64 c7                    a0 = a5
 12786: 64 08                    a1 = ra
 12788: 50 20 6a 01 02 f6        ra = 362, jump @788
      :                          @992 [@dyn 181]
 12794: 82 10 98 01              ra = u64 [sp + 0x198]
 12798: 82 15 90 01              s0 = u64 [sp + 0x190]
 12802: 82 16 88 01              s1 = u64 [sp + 0x188]
 12806: 95 11 a0 01              sp = sp + 0x1a0
 12810: 32 00                    ret
      :                          @993
 12812: 7b 17 08                 u64 [sp + 0x8] = a0
 12815: 49 11 58 01              u64 [sp + 88] = 0x1
 12819: 33 07 01                 a0 = 0x1
 12822: 7b 10                    u64 [sp] = ra
 12824: 01                       fallthrough
      :                          @994
 12825: 82 18 58                 a1 = u64 [sp + 0x58]
 12828: d2 87 07                 a0 = a0 & a1
 12831: 7b 17 50                 u64 [sp + 0x50] = a0
 12834: 82 1c 08                 a5 = u64 [sp + 0x8]
 12837: 01                       fallthrough
      :                          @995
 12838: 81 17 30                 a0 = i32 [sp + 0x30]
 12841: 51 07 3c 08              jump @1104 if a0 == 0
      :                          @996
 12845: 82 17 58                 a0 = u64 [sp + 0x58]
 12848: 84 77 01                 a0 = a0 & 0x1
 12851: 7b 10 68                 u64 [sp + 0x68] = ra
 12854: 7b 1c 70                 u64 [sp + 0x70] = a5
 12857: 51 07 ce 03              jump @1048 if a0 == 0
      :                          @997
 12861: 98 07 02                 a0 = ra >> 0x2
 12864: 97 72 01                 t0 = a0 << 0x1
 12867: c8 72 03                 t1 = t0 + a0
 12870: 54 10 31 3b              jump @1000 if ra <=u 49
      :                          @998
 12874: 64 24                    t2 = t0
 12876: 95 70 ff                 ra = a0 + 0xffffffffffffffff
 12879: 97 78 04                 a1 = a0 << 0x4
 12882: c8 8c 09                 a2 = a5 + a1
 12885: 97 08 04                 a1 = ra << 0x4
 12888: c8 8c 0b                 a4 = a5 + a1
 12891: 82 98                    a1 = u64 [a2]
 12893: 82 bc                    a5 = u64 [a4]
 12895: 82 9a 08                 a3 = u64 [a2 + 0x8]
 12898: 82 b9 08                 a2 = u64 [a4 + 0x8]
 12901: d9 c8 0b                 a4 = a1 <s a5
 12904: d3 c8 06                 s1 = a1 ^ a5
 12907: d9 9a 05                 s0 = a3 <s a2
 12910: db 6b 05                 s0 = a4 if s1 != 0
 12913: 51 05 15                 jump @1001 if s0 == 0
      :                          @999
 12916: 33 0b 01                 a4 = 0x1
 12919: 64 02                    t0 = ra
 12921: 64 70                    ra = a0
 12923: 64 9a                    a3 = a2
 12925: 64 c8                    a1 = a5
 12927: 28 0c                    jump @1002
      :                          @1000
 12929: 33 04                    t2 = 0
 12931: 28 9c 01                 jump @1018
      :                          @1001
 12934: 33 0b                    a4 = 0
 12936: 64 72                    t0 = a0
 12938: 01                       fallthrough
      :                          @1002
 12939: 95 77 01                 a0 = a0 + 0x1
 12942: 7b 17 60                 u64 [sp + 0x60] = a0
 12945: 97 77 04                 a0 = a0 << 0x4
 12948: 82 19 70                 a2 = u64 [sp + 0x70]
 12951: c8 97 07                 a0 = a0 + a2
 12954: 82 7c                    a5 = u64 [a0]
 12956: 82 77 08                 a0 = u64 [a0 + 0x8]
 12959: d9 8c 09                 a2 = a5 <s a1
 12962: d3 8c 06                 s1 = a5 ^ a1
 12965: d9 a7 05                 s0 = a0 <s a3
 12968: db 69 05                 s0 = a2 if s1 != 0
 12971: 51 05 08                 jump @1004 if s0 == 0
      :                          @1003
 12974: 95 bb 01                 a4 = a4 + 0x1
 12977: 28 0a                    jump @1005
      :                          @1004
 12979: 7b 12 60                 u64 [sp + 0x60] = t0
 12982: 64 a7                    a0 = a3
 12984: 64 8c                    a5 = a1
 12986: 01                       fallthrough
      :                          @1005
 12987: 7b 1b 40                 u64 [sp + 0x40] = a4
 12990: 7b 10 48                 u64 [sp + 0x48] = ra
 12993: 97 08 04                 a1 = ra << 0x4
 12996: 82 1a 70                 a3 = u64 [sp + 0x70]
 12999: c8 a8 08                 a1 = a1 + a3
 13002: 82 89                    a2 = u64 [a1]
 13004: 82 88 08                 a1 = u64 [a1 + 0x8]
 13007: d9 9c 06                 s1 = a5 <s a2
 13010: d3 9c 05                 s0 = a5 ^ a2
 13013: d9 87 0b                 a4 = a0 <s a1
 13016: 95 42 ff                 t0 = t2 + 0xffffffffffffffff
 13019: 97 47 04                 a0 = t2 << 0x4
 13022: c8 7a 08                 a1 = a3 + a0
 13025: 97 27 04                 a0 = t0 << 0x4
 13028: c8 a7 07                 a0 = a0 + a3
 13031: 82 8a                    a3 = u64 [a1]
 13033: 82 79                    a2 = u64 [a0]
 13035: 82 8c 08                 a5 = u64 [a1 + 0x8]
 13038: 82 78 08                 a1 = u64 [a0 + 0x8]
 13041: db 56 0b                 a4 = s1 if s0 != 0
 13044: d9 9a 07                 a0 = a3 <s a2
 13047: d3 9a 06                 s1 = a3 ^ a2
 13050: d9 8c 05                 s0 = a5 <s a1
 13053: db 67 05                 s0 = a0 if s1 != 0
 13056: 7b 1b 28                 u64 [sp + 0x28] = a4
 13059: 82 10 40                 ra = u64 [sp + 0x40]
 13062: c8 b0 00                 ra = ra + a4
 13065: 51 05 0d                 jump @1007 if s0 == 0
      :                          @1006
 13068: 95 00 01                 ra = ra + 0x1
 13071: 7b 12 20                 u64 [sp + 0x20] = t0
 13074: 64 42                    t0 = t2
 13076: 28 0a                    jump @1008
      :                          @1007
 13078: 7b 14 20                 u64 [sp + 0x20] = t2
 13081: 64 c8                    a1 = a5
 13083: 64 a9                    a2 = a3
 13085: 01                       fallthrough
      :                          @1008
 13086: 86 4b 01                 a4 = t2 | 0x1
 13089: 97 b7 04                 a0 = a4 << 0x4
 13092: 82 1a 70                 a3 = u64 [sp + 0x70]
 13095: c8 a7 07                 a0 = a0 + a3
 13098: 82 7c                    a5 = u64 [a0]
 13100: 82 77 08                 a0 = u64 [a0 + 0x8]
 13103: d9 9c 0a                 a3 = a5 <s a2
 13106: d3 9c 06                 s1 = a5 ^ a2
 13109: d9 87 05                 s0 = a0 <s a1
 13112: db 6a 05                 s0 = a3 if s1 != 0
 13115: 51 05 0b                 jump @1010 if s0 == 0
      :                          @1009
 13118: 7b 1b 20                 u64 [sp + 0x20] = a4
 13121: 95 00 01                 ra = ra + 0x1
 13124: 28 07                    jump @1011
      :                          @1010
 13126: 64 87                    a0 = a1
 13128: 64 9c                    a5 = a2
 13130: 01                       fallthrough
      :                          @1011
 13131: 64 25                    s0 = t0
 13133: 97 28 04                 a1 = t0 << 0x4
 13136: 82 16 70                 s1 = u64 [sp + 0x70]
 13139: c8 68 08                 a1 = a1 + s1
 13142: 82 89                    a2 = u64 [a1]
 13144: 82 88 08                 a1 = u64 [a1 + 0x8]
 13147: d9 9c 0a                 a3 = a5 <s a2
 13150: d3 9c 0c                 a5 = a5 ^ a2
 13153: d9 87 09                 a2 = a0 <s a1
 13156: 95 3b ff                 a4 = t1 + 0xffffffffffffffff
 13159: 97 38 04                 a1 = t1 << 0x4
 13162: c8 68 08                 a1 = a1 + s1
 13165: 97 b7 04                 a0 = a4 << 0x4
 13168: c8 67 07                 a0 = a0 + s1
 13171: 82 86                    s1 = u64 [a1]
 13173: 82 74                    t2 = u64 [a0]
 13175: 82 88 08                 a1 = u64 [a1 + 0x8]
 13178: 82 72 08                 t0 = u64 [a0 + 0x8]
 13181: db ca 09                 a2 = a3 if a5 != 0
 13184: d9 46 07                 a0 = s1 <s t2
 13187: d3 46 0a                 a3 = s1 ^ t2
 13190: d9 28 0c                 a5 = a1 <s t0
 13193: db a7 0c                 a5 = a0 if a3 != 0
 13196: c8 90 00                 ra = ra + a2
 13199: 51 0c 0e                 jump @1013 if a5 == 0
      :                          @1012
 13202: 95 00 01                 ra = ra + 0x1
 13205: 7b 1b 10                 u64 [sp + 0x10] = a4
 13208: 7b 13 18                 u64 [sp + 0x18] = t1
 13211: 28 0d                    jump @1014
      :                          @1013
 13213: 7b 1b 18                 u64 [sp + 0x18] = a4
 13216: 7b 13 10                 u64 [sp + 0x10] = t1
 13219: 64 82                    t0 = a1
 13221: 64 64                    t2 = s1
 13223: 01                       fallthrough
      :                          @1014
 13224: 95 33 01                 t1 = t1 + 0x1
 13227: 97 37 04                 a0 = t1 << 0x4
 13230: 82 18 70                 a1 = u64 [sp + 0x70]
 13233: c8 87 07                 a0 = a0 + a1
 13236: 82 76                    s1 = u64 [a0]
 13238: 82 78 08                 a1 = u64 [a0 + 0x8]
 13241: d9 46 07                 a0 = s1 <s t2
 13244: d3 46 0a                 a3 = s1 ^ t2
 13247: d9 28 0c                 a5 = a1 <s t0
 13250: db a7 0c                 a5 = a0 if a3 != 0
 13253: 7b 15 40                 u64 [sp + 0x40] = s0
 13256: 51 0c 0b                 jump @1016 if a5 == 0
      :                          @1015
 13259: 95 04 01                 t2 = ra + 0x1
 13262: 7b 18 10                 u64 [sp + 0x10] = a1
 13265: 28 0d                    jump @1017
      :                          @1016
 13267: 82 13 10                 t1 = u64 [sp + 0x10]
 13270: 7b 12 10                 u64 [sp + 0x10] = t0
 13273: 64 46                    s1 = t2
 13275: 64 04                    t2 = ra
 13277: 01                       fallthrough
      :                          @1017
 13278: 82 18 18                 a1 = u64 [sp + 0x18]
 13281: 97 87 04                 a0 = a1 << 0x4
 13284: 82 1c 70                 a5 = u64 [sp + 0x70]
 13287: c8 c7 07                 a0 = a0 + a5
 13290: 82 7a                    a3 = u64 [a0]
 13292: 82 10 48                 ra = u64 [sp + 0x48]
 13295: 82 1b 60                 a4 = u64 [sp + 0x60]
 13298: 82 15 28                 s0 = u64 [sp + 0x28]
 13301: da 5b 00                 ra = a4 if s0 == 0
 13304: 82 77 08                 a0 = u64 [a0 + 0x8]
 13307: 82 12 40                 t0 = u64 [sp + 0x40]
 13310: 82 1b 20                 a4 = u64 [sp + 0x20]
 13313: da 9b 02                 t0 = a4 if a2 == 0
 13316: d9 a6 09                 a2 = s1 <s a3
 13319: d3 6a 0a                 a3 = a3 ^ s1
 13322: 82 1b 10                 a4 = u64 [sp + 0x10]
 13325: d9 7b 07                 a0 = a4 <s a0
 13328: db a9 07                 a0 = a2 if a3 != 0
 13331: c8 74 04                 t2 = t2 + a0
 13334: db 78 03                 t1 = a1 if a0 != 0
 13337: 64 07                    a0 = ra
 13339: 82 10 68                 ra = u64 [sp + 0x68]
 13342: 01                       fallthrough
      :                          @1018
 13343: 97 28 04                 a1 = t0 << 0x4
 13346: c8 8c 0a                 a3 = a5 + a1
 13349: 97 78 04                 a1 = a0 << 0x4
 13352: c8 8c 0b                 a4 = a5 + a1
 13355: 82 a8                    a1 = u64 [a3]
 13357: 82 bc                    a5 = u64 [a4]
 13359: 82 aa 08                 a3 = u64 [a3 + 0x8]
 13362: 82 bb 08                 a4 = u64 [a4 + 0x8]
 13365: d9 c8 06                 s1 = a1 <s a5
 13368: d3 c8 09                 a2 = a1 ^ a5
 13371: d9 ba 05                 s0 = a3 <s a4
 13374: db 96 05                 s0 = s1 if a2 != 0
 13377: 51 05 0c                 jump @1020 if s0 == 0
      :                          @1019
 13380: 64 26                    s1 = t0
 13382: 95 44 01                 t2 = t2 + 0x1
 13385: 64 72                    t0 = a0
 13387: 28 09                    jump @1021
      :                          @1020
 13389: 64 76                    s1 = a0
 13391: 64 ab                    a4 = a3
 13393: 64 8c                    a5 = a1
 13395: 01                       fallthrough
      :                          @1021
 13396: 97 37 04                 a0 = t1 << 0x4
 13399: 82 18 70                 a1 = u64 [sp + 0x70]
 13402: c8 87 07                 a0 = a0 + a1
 13405: 82 78                    a1 = u64 [a0]
 13407: 82 77 08                 a0 = u64 [a0 + 0x8]
 13410: d9 c8 09                 a2 = a1 <s a5
 13413: d3 c8 0a                 a3 = a1 ^ a5
 13416: d9 b7 05                 s0 = a0 <s a4
 13419: db a9 05                 s0 = a2 if a3 != 0
 13422: 51 05 08                 jump @1023 if s0 == 0
      :                          @1022
 13425: 95 44 01                 t2 = t2 + 0x1
 13428: 28 09                    jump @1024
      :                          @1023
 13430: 64 23                    t1 = t0
 13432: 64 b7                    a0 = a4
 13434: 64 c8                    a1 = a5
 13436: 01                       fallthrough
      :                          @1024
 13437: 97 69 04                 a2 = s1 << 0x4
 13440: 82 15 70                 s0 = u64 [sp + 0x70]
 13443: c8 59 09                 a2 = a2 + s0
 13446: 82 9a                    a3 = u64 [a2]
 13448: 82 99 08                 a2 = u64 [a2 + 0x8]
 13451: d9 a8 0b                 a4 = a1 <s a3
 13454: d3 a8 08                 a1 = a1 ^ a3
 13457: d9 97 07                 a0 = a0 <s a2
 13460: db 8b 07                 a0 = a4 if a1 != 0
 13463: 51 07 4e                 jump @1030 if a0 == 0
      :                          @1025
 13466: 64 62                    t0 = s1
 13468: 33 07 01                 a0 = 0x1
 13471: 53 14 0b 4b              jump @1031 if t2 <u 11
      :                          @1026
 13475: 98 07 01                 a0 = ra >> 0x1
 13478: 95 58 08                 a1 = s0 + 0x8
 13481: 97 09 04                 a2 = ra << 0x4
 13484: c8 59 09                 a2 = a2 + s0
 13487: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 13490: 01                       fallthrough
      :                          @1027
 13491: 82 9a f8                 a3 = u64 [a2 + 0xfffffffffffffff8]
 13494: 82 9b                    a4 = u64 [a2]
 13496: 82 8c f8                 a5 = u64 [a1 + 0xfffffffffffffff8]
 13499: 82 86                    s1 = u64 [a1]
 13501: 7b 8a f8                 u64 [a1 + 0xfffffffffffffff8] = a3
 13504: 7b 8b                    u64 [a1] = a4
 13506: 7b 9c f8                 u64 [a2 + 0xfffffffffffffff8] = a5
 13509: 7b 96                    u64 [a2] = s1
 13511: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 13514: 95 88 10                 a1 = a1 + 0x10
 13517: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 13520: 52 07 e3                 jump @1027 if a0 != 0
      :                          @1028
 13523: 85 27 ff                 a0 = t0 ^ 0xffffffffffffffff
 13526: c8 70 02                 t0 = ra + a0
 13529: 82 18 50                 a1 = u64 [sp + 0x50]
 13532: 84 87 01                 a0 = a1 & 0x1
 13535: 51 07 18                 jump @1032 if a0 == 0
      :                          @1029
 13538: 28 41 01                 jump @1050
      :                          @1030
 13541: 64 32                    t0 = t1
 13543: 64 47                    a0 = t2
 13545: 01                       fallthrough
      :                          @1031
 13546: 88 77 01                 a0 = a0 <u 0x1
 13549: 82 18 50                 a1 = u64 [sp + 0x50]
 13552: d2 87 07                 a0 = a0 & a1
 13555: 52 07 30 01              jump @1050 if a0 != 0
      :                          @1032
 13559: 97 27 04                 a0 = t0 << 0x4
 13562: 82 18 38                 a1 = u64 [sp + 0x38]
 13565: 51 08 41 01              jump @1053 if a1 == 0
      :                          @1033
 13569: ae 02 81 05              jump @1106 if t0 >=u ra
      :                          @1034
 13573: c8 75 08                 a1 = s0 + a0
 13576: 82 1b 38                 a4 = u64 [sp + 0x38]
 13579: 82 b9                    a2 = u64 [a4]
 13581: 82 8a                    a3 = u64 [a1]
 13583: 82 bb 08                 a4 = u64 [a4 + 0x8]
 13586: 82 8c 08                 a5 = u64 [a1 + 0x8]
 13589: d9 a9 06                 s1 = a2 <s a3
 13592: d3 a9 09                 a2 = a2 ^ a3
 13595: d9 cb 0a                 a3 = a4 <s a5
 13598: db 96 0a                 a3 = s1 if a2 != 0
 13601: 52 0a 21 01              jump @1054 if a3 != 0
      :                          @1035
 13605: 82 59 08                 a2 = u64 [s0 + 0x8]
 13608: 82 5a                    a3 = u64 [s0]
 13610: 33 07                    a0 = 0
 13612: 7b 19 00 01              u64 [sp + 0x100] = a2
 13616: 7b 1a f8 00              u64 [sp + 0xf8] = a3
 13620: 82 89                    a2 = u64 [a1]
 13622: 82 8a 08                 a3 = u64 [a1 + 0x8]
 13625: 82 1b 00 01              a4 = u64 [sp + 0x100]
 13629: 82 1c f8 00              a5 = u64 [sp + 0xf8]
 13633: 7b 59                    u64 [s0] = a2
 13635: 7b 5a 08                 u64 [s0 + 0x8] = a3
 13638: 7b 8b 08                 u64 [a1 + 0x8] = a4
 13641: 7b 8c                    u64 [a1] = a5
 13643: 82 59                    a2 = u64 [s0]
 13645: 82 58 08                 a1 = u64 [s0 + 0x8]
 13648: 95 53 10                 t1 = s0 + 0x10
 13651: 95 0b ff                 a4 = ra + 0xffffffffffffffff
 13654: 95 52 18                 t0 = s0 + 0x18
 13657: 54 0b 31                 jump @1040 if a4 <=u 0
      :                          @1036
 13660: 97 7c 04                 a5 = a0 << 0x4
 13663: c8 2c 0c                 a5 = a5 + t0
 13666: 01                       fallthrough
      :                          @1037
 13667: 82 c6 f8                 s1 = u64 [a5 + 0xfffffffffffffff8]
 13670: 82 c5                    s0 = u64 [a5]
 13672: d9 69 0a                 a3 = a2 <s s1
 13675: d3 96 06                 s1 = s1 ^ a2
 13678: d9 58 05                 s0 = a1 <s s0
 13681: db 6a 05                 s0 = a3 if s1 != 0
 13684: 52 05 16                 jump @1040 if s0 != 0
      :                          @1038
 13687: 95 77 01                 a0 = a0 + 0x1
 13690: 95 cc 10                 a5 = a5 + 0x10
 13693: ab 7b e6                 jump @1037 if a4 != a0
      :                          @1039
 13696: 64 b7                    a0 = a4
 13698: 97 b6 04                 s1 = a4 << 0x4
 13701: c8 36 06                 s1 = s1 + t1
 13704: 28 09                    jump @1041
      :                          @1040
 13706: 97 b6 04                 s1 = a4 << 0x4
 13709: c8 36 06                 s1 = s1 + t1
 13712: 01                       fallthrough
      :                          @1041
 13713: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 13716: ae b7 53                 jump @1045 if a0 >=u a4
      :                          @1042
 13719: 82 6a f0                 a3 = u64 [s1 + 0xfffffffffffffff0]
 13722: 82 65 f8                 s0 = u64 [s1 + 0xfffffffffffffff8]
 13725: 95 6c f0                 a5 = s1 + 0xfffffffffffffff0
 13728: d9 a9 06                 s1 = a2 <s a3
 13731: d3 9a 0a                 a3 = a3 ^ a2
 13734: d9 58 05                 s0 = a1 <s s0
 13737: db a6 05                 s0 = s1 if a3 != 0
 13740: 64 c6                    s1 = a5
 13742: 52 05 e3                 jump @1041 if s0 != 0
      :                          @1043
 13745: 97 7a 04                 a3 = a0 << 0x4
 13748: c8 3a 0a                 a3 = a3 + t1
 13751: 82 a6 08                 s1 = u64 [a3 + 0x8]
 13754: 82 a5                    s0 = u64 [a3]
 13756: 7b 16 00 01              u64 [sp + 0x100] = s1
 13760: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 13764: 82 c0                    ra = u64 [a5]
 13766: 82 c4 08                 t2 = u64 [a5 + 0x8]
 13769: 82 15 00 01              s0 = u64 [sp + 0x100]
 13773: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 13777: 7b a0                    u64 [a3] = ra
 13779: 82 10 68                 ra = u64 [sp + 0x68]
 13782: 7b a4 08                 u64 [a3 + 0x8] = t2
 13785: 7b c5 08                 u64 [a5 + 0x8] = s0
 13788: 7b c6                    u64 [a5] = s1
 13790: 95 77 01                 a0 = a0 + 0x1
 13793: ac b7 7b ff              jump @1036 if a0 <u a4
      :                          @1044
 13797: 28 a5                    jump @1040
      :                          @1045
 13799: 95 77 01                 a0 = a0 + 0x1
 13802: 82 1c 70                 a5 = u64 [sp + 0x70]
 13805: 7b c9                    u64 [a5] = a2
 13807: 7b c8 08                 u64 [a5 + 0x8] = a1
 13810: ac 70 93 04              jump @1109 if ra <u a0
      :                          @1046
 13814: c9 70 00                 ra = ra - a0
 13817: 97 77 04                 a0 = a0 << 0x4
 13820: c8 7c 0c                 a5 = a5 + a0
 13823: 55 10 15 27 fc           jump @995 if ra >=u 21
      :                          @1047
 13828: 28 e3 fb                 jump @990
      :                          @1048
 13831: 64 c7                    a0 = a5
 13833: 64 08                    a1 = ra
 13835: 50 20 6c 01 3f e3        ra = 364, jump @455
      :                          @1049 [@dyn 182]
 13841: 82 1c 70                 a5 = u64 [sp + 0x70]
 13844: 82 10 68                 ra = u64 [sp + 0x68]
 13847: 82 17 30                 a0 = u64 [sp + 0x30]
 13850: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 13853: 7b 17 30                 u64 [sp + 0x30] = a0
 13856: 28 1d fc                 jump @997
      :                          @1050
 13859: 64 57                    a0 = s0
 13861: 64 08                    a1 = ra
 13863: 64 25                    s0 = t0
 13865: 50 20 6e 01 38 e8        ra = 366, jump @550
      :                          @1051 [@dyn 183]
 13871: 64 52                    t0 = s0
 13873: 82 15 70                 s0 = u64 [sp + 0x70]
 13876: 82 10 68                 ra = u64 [sp + 0x68]
 13879: 51 07 c0 fe              jump @1032 if a0 == 0
      :                          @1052
 13883: 28 bf fb                 jump @992
      :                          @1053
 13886: 82 18                    a1 = u64 [sp]
 13888: 28 08                    jump @1055
      :                          @1054
 13890: 7b 15 08                 u64 [sp + 0x8] = s0
 13893: 64 08                    a1 = ra
 13895: 01                       fallthrough
      :                          @1055
 13896: ae 82 3b 04              jump @1107 if t0 >=u a1
      :                          @1056
 13900: 82 1a 08                 a3 = u64 [sp + 0x8]
 13903: 82 ab 08                 a4 = u64 [a3 + 0x8]
 13906: 82 ac                    a5 = u64 [a3]
 13908: 33 09                    a2 = 0
 13910: c8 a7 07                 a0 = a0 + a3
 13913: 7b 1b 00 01              u64 [sp + 0x100] = a4
 13917: 7b 1c f8 00              u64 [sp + 0xf8] = a5
 13921: 82 7c                    a5 = u64 [a0]
 13923: 82 75 08                 s0 = u64 [a0 + 0x8]
 13926: 82 16 00 01              s1 = u64 [sp + 0x100]
 13930: 82 1b f8 00              a4 = u64 [sp + 0xf8]
 13934: 7b ac                    u64 [a3] = a5
 13936: 7b a5 08                 u64 [a3 + 0x8] = s0
 13939: 7b 76 08                 u64 [a0 + 0x8] = s1
 13942: 7b 7b                    u64 [a0] = a4
 13944: 82 a2                    t0 = u64 [a3]
 13946: 82 a0 08                 ra = u64 [a3 + 0x8]
 13949: 95 a4 10                 t2 = a3 + 0x10
 13952: 7b 18                    u64 [sp] = a1
 13954: 95 85 ff                 s0 = a1 + 0xffffffffffffffff
 13957: 95 ab 18                 a4 = a3 + 0x18
 13960: 01                       fallthrough
      :                          @1057
 13961: 82 b7 f8                 a0 = u64 [a4 + 0xfffffffffffffff8]
 13964: 82 bc                    a5 = u64 [a4]
 13966: d9 27 06                 s1 = a0 <s t0
 13969: d3 27 07                 a0 = a0 ^ t0
 13972: d9 0c 0c                 a5 = a5 <s ra
 13975: db 76 0c                 a5 = s1 if a0 != 0
 13978: 51 0c 0f                 jump @1060 if a5 == 0
      :                          @1058
 13981: 95 99 01                 a2 = a2 + 0x1
 13984: 95 bb 10                 a4 = a4 + 0x10
 13987: ab 95 e6                 jump @1057 if s0 != a2
      :                          @1059
 13990: 64 59                    a2 = s0
 13992: 01                       fallthrough
      :                          @1060
 13993: 82 17                    a0 = u64 [sp]
 13995: 97 77 04                 a0 = a0 << 0x4
 13998: 82 18 08                 a1 = u64 [sp + 0x8]
 14001: c8 87 07                 a0 = a0 + a1
 14004: 95 7b f8                 a4 = a0 + 0xfffffffffffffff8
 14007: 01                       fallthrough
      :                          @1061
 14008: 64 58                    a1 = s0
 14010: ae 59 1d                 jump @1063 if a2 >=u s0
      :                          @1062
 14013: 82 b7 f8                 a0 = u64 [a4 + 0xfffffffffffffff8]
 14016: 82 bc                    a5 = u64 [a4]
 14018: 95 85 ff                 s0 = a1 + 0xffffffffffffffff
 14021: d9 27 06                 s1 = a0 <s t0
 14024: d3 27 07                 a0 = a0 ^ t0
 14027: d9 0c 0c                 a5 = a5 <s ra
 14030: db 76 0c                 a5 = s1 if a0 != 0
 14033: 95 bb f0                 a4 = a4 + 0xfffffffffffffff0
 14036: 51 0c e4                 jump @1061 if a5 == 0
      :                          @1063
 14039: 64 97                    a0 = a2
 14041: ac 98 ad 03              jump @1110 if a1 <u a2
      :                          @1064
 14045: 33 0c                    a5 = 0
 14047: 33 05                    s0 = 0
 14049: 33 06                    s1 = 0
 14051: 33 03                    t1 = 0
 14053: 7b 17 28                 u64 [sp + 0x28] = a0
 14056: 97 77 04                 a0 = a0 << 0x4
 14059: c8 74 09                 a2 = t2 + a0
 14062: 7b 18 18                 u64 [sp + 0x18] = a1
 14065: 97 87 04                 a0 = a1 << 0x4
 14068: c8 74 04                 t2 = t2 + a0
 14071: 33 0a 80 00              a3 = 0x80
 14075: 7b 19 20                 u64 [sp + 0x20] = a2
 14078: 33 0b 80 00              a4 = 0x80
 14082: 7b 10 40                 u64 [sp + 0x40] = ra
 14085: 7b 12 58                 u64 [sp + 0x58] = t0
 14088: 28 4b                    jump @1067
      :                          @1065
 14090: 97 bb 04                 a4 = a4 << 0x4
 14093: c8 4b 0b                 a4 = a4 + t2
 14096: 82 17 50                 a0 = u64 [sp + 0x50]
 14099: 7b b7                    u64 [a4] = a0
 14101: 82 17 48                 a0 = u64 [sp + 0x48]
 14104: 7b b7 08                 u64 [a4 + 0x8] = a0
 14107: 95 cc 01                 a5 = a5 + 0x1
 14110: 95 66 01                 s1 = s1 + 0x1
 14113: 82 10 40                 ra = u64 [sp + 0x40]
 14116: 64 a9                    a2 = a3
 14118: 82 1a 70                 a3 = u64 [sp + 0x70]
 14121: 82 1b 60                 a4 = u64 [sp + 0x60]
 14124: 01                       fallthrough
      :                          @1066
 14125: d3 5c 07                 a0 = a5 ^ s0
 14128: 64 a8                    a1 = a3
 14130: 94 78                    a1 = 0 if a0 != 0
 14132: 97 88 04                 a1 = a1 << 0x4
 14135: c8 89 09                 a2 = a2 + a1
 14138: d3 36 07                 a0 = s1 ^ t1
 14141: 9a b8                    a1 = -a4
 14143: 94 78                    a1 = 0 if a0 != 0
 14145: 97 88 04                 a1 = a1 << 0x4
 14148: c8 84 04                 t2 = t2 + a1
 14151: 82 12 58                 t0 = u64 [sp + 0x58]
 14154: 82 17 68                 a0 = u64 [sp + 0x68]
 14157: 53 27 01 01 c8 01        jump @1091 if a0 <u 257
      :                          @1067
 14163: 7b 1a 70                 u64 [sp + 0x70] = a3
 14166: c9 94 07                 a0 = t2 - a2
 14169: 98 78 04                 a1 = a0 >> 0x4
 14172: 7b 18 68                 u64 [sp + 0x68] = a1
 14175: 55 28 01 01 c7 00        jump @1075 if a1 >=u 257
      :                          @1068
 14181: 7b 1b 60                 u64 [sp + 0x60] = a4
 14184: d8 5c 00                 ra = a5 <u s0
 14187: d8 36 0b                 a4 = s1 <u t1
 14190: d4 b0 02                 t0 = ra | a4
 14193: 51 02 be 00              jump @1077 if t0 == 0
      :                          @1069
 14197: 82 18 68                 a1 = u64 [sp + 0x68]
 14200: 95 87 80                 a0 = a1 + 0xffffffffffffff80
 14203: 82 1b 60                 a4 = u64 [sp + 0x60]
 14206: db 07 0b                 a4 = a0 if ra != 0
 14209: da 28 07                 a0 = a1 if t0 == 0
 14212: 82 1a 70                 a3 = u64 [sp + 0x70]
 14215: da 07 0a                 a3 = a0 if ra == 0
 14218: 82 10 40                 ra = u64 [sp + 0x40]
 14221: 82 12 58                 t0 = u64 [sp + 0x58]
 14224: aa 5c b2 00              jump @1078 if a5 == s0
      :                          @1070
 14228: aa 36 ff 00              jump @1082 if s1 == t1
      :                          @1071
 14232: c9 c5 07                 a0 = s0 - a5
 14235: c9 63 08                 a1 = t1 - s1
 14238: e6 87 02                 t0 = minu(a0, a1)
 14241: 51 02 8c                 jump @1066 if t0 == 0
      :                          @1072
 14244: 7b 1b 60                 u64 [sp + 0x60] = a4
 14247: 7b 1a 70                 u64 [sp + 0x70] = a3
 14250: 7c 60                    ra = u8 [s1]
 14252: 7c c7                    a0 = u8 [a5]
 14254: 85 0b ff                 a4 = ra ^ 0xffffffffffffffff
 14257: 97 b8 04                 a1 = a4 << 0x4
 14260: c8 48 08                 a1 = a1 + t2
 14263: 64 9a                    a3 = a2
 14265: 82 89                    a2 = u64 [a1]
 14267: 7b 19 48                 u64 [sp + 0x48] = a2
 14270: 97 77 04                 a0 = a0 << 0x4
 14273: c8 a7 07                 a0 = a0 + a3
 14276: 82 79                    a2 = u64 [a0]
 14278: 7b 19 50                 u64 [sp + 0x50] = a2
 14281: 82 19 48                 a2 = u64 [sp + 0x48]
 14284: 7b 79                    u64 [a0] = a2
 14286: 82 88 08                 a1 = u64 [a1 + 0x8]
 14289: 82 79 08                 a2 = u64 [a0 + 0x8]
 14292: 7b 19 48                 u64 [sp + 0x48] = a2
 14295: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 14298: 7b 78 08                 u64 [a0 + 0x8] = a1
 14301: 51 02 2d ff              jump @1065 if t0 == 0
      :                          @1073
 14305: 7c c7 01                 a0 = u8 [a5 + 0x1]
 14308: 97 77 04                 a0 = a0 << 0x4
 14311: c8 a7 07                 a0 = a0 + a3
 14314: 85 08 ff                 a1 = ra ^ 0xffffffffffffffff
 14317: 82 79 08                 a2 = u64 [a0 + 0x8]
 14320: 86 88 00 ff              a1 = a1 | 0xffffffffffffff00
 14324: 97 88 04                 a1 = a1 << 0x4
 14327: c8 48 08                 a1 = a1 + t2
 14330: 7b 89 08                 u64 [a1 + 0x8] = a2
 14333: 82 79                    a2 = u64 [a0]
 14335: 7b 89                    u64 [a1] = a2
 14337: 7c 60 01                 ra = u8 [s1 + 0x1]
 14340: 85 0b ff                 a4 = ra ^ 0xffffffffffffffff
 14343: 97 b8 04                 a1 = a4 << 0x4
 14346: c8 48 08                 a1 = a1 + t2
 14349: 82 89 08                 a2 = u64 [a1 + 0x8]
 14352: 7b 79 08                 u64 [a0 + 0x8] = a2
 14355: 82 88                    a1 = u64 [a1]
 14357: 95 cc 01                 a5 = a5 + 0x1
 14360: 95 66 01                 s1 = s1 + 0x1
 14363: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 14366: 7b 78                    u64 [a0] = a1
 14368: 52 02 c1                 jump @1073 if t0 != 0
      :                          @1074
 14371: 28 e7 fe                 jump @1065
      :                          @1075
 14374: 82 1a 70                 a3 = u64 [sp + 0x70]
 14377: ab 5c 6b ff              jump @1070 if a5 != s0
      :                          @1076
 14381: 28 15                    jump @1078
      :                          @1077
 14383: 98 7a 05                 a3 = a0 >> 0x5
 14386: 82 1b 68                 a4 = u64 [sp + 0x68]
 14389: c9 ab 0b                 a4 = a4 - a3
 14392: 82 10 40                 ra = u64 [sp + 0x40]
 14395: 82 12 58                 t0 = u64 [sp + 0x58]
 14398: ab 5c 56 ff              jump @1070 if a5 != s0
      :                          @1078
 14402: 51 0a af 00              jump @1087 if a3 == 0
      :                          @1079
 14406: 7b 1b 60                 u64 [sp + 0x60] = a4
 14409: 7b 14 48                 u64 [sp + 0x48] = t2
 14412: 33 07                    a0 = 0
 14414: 95 1c 78                 a5 = sp + 0x78
 14417: 7b 19 50                 u64 [sp + 0x50] = a2
 14420: 64 9b                    a4 = a2
 14422: 95 15 78                 s0 = sp + 0x78
 14425: 64 04                    t2 = ra
 14427: 64 a0                    ra = a3
 14429: 01                       fallthrough
      :                          @1080
 14430: 82 b8                    a1 = u64 [a4]
 14432: 95 7a 01                 a3 = a0 + 0x1
 14435: 82 b9 08                 a2 = u64 [a4 + 0x8]
 14438: 78 57                    u8 [s0] = a0
 14440: d9 28 07                 a0 = a1 <s t0
 14443: d3 28 08                 a1 = a1 ^ t0
 14446: d9 49 09                 a2 = a2 <s t2
 14449: db 87 09                 a2 = a0 if a1 != 0
 14452: 85 97 01                 a0 = a2 ^ 0x1
 14455: c8 75 05                 s0 = s0 + a0
 14458: 95 bb 10                 a4 = a4 + 0x10
 14461: 64 a7                    a0 = a3
 14463: ab a0 df                 jump @1080 if ra != a3
      :                          @1081
 14466: 82 19 50                 a2 = u64 [sp + 0x50]
 14469: 64 0a                    a3 = ra
 14471: 64 40                    ra = t2
 14473: 82 14 48                 t2 = u64 [sp + 0x48]
 14476: 82 1b 60                 a4 = u64 [sp + 0x60]
 14479: ab 36 09 ff              jump @1071 if s1 != t1
      :                          @1082
 14483: 51 0b 6a                 jump @1089 if a4 == 0
      :                          @1083
 14486: 7b 1a 70                 u64 [sp + 0x70] = a3
 14489: 7b 19 50                 u64 [sp + 0x50] = a2
 14492: 33 07                    a0 = 0
 14494: 64 48                    a1 = t2
 14496: 64 04                    t2 = ra
 14498: 64 b0                    ra = a4
 14500: 7b 18 48                 u64 [sp + 0x48] = a1
 14503: 95 8b f8                 a4 = a1 + 0xfffffffffffffff8
 14506: 95 16 f8 00              s1 = sp + 0xf8
 14510: 95 13 f8 00              t1 = sp + 0xf8
 14514: 01                       fallthrough
      :                          @1084
 14515: 82 b8 f8                 a1 = u64 [a4 + 0xfffffffffffffff8]
 14518: 95 79 01                 a2 = a0 + 0x1
 14521: 82 ba                    a3 = u64 [a4]
 14523: 78 37                    u8 [t1] = a0
 14525: d9 28 07                 a0 = a1 <s t0
 14528: d3 28 08                 a1 = a1 ^ t0
 14531: d9 4a 0a                 a3 = a3 <s t2
 14534: db 87 0a                 a3 = a0 if a1 != 0
 14537: c8 a3 03                 t1 = t1 + a3
 14540: 95 bb f0                 a4 = a4 + 0xfffffffffffffff0
 14543: 64 97                    a0 = a2
 14545: ab 90 e2                 jump @1084 if ra != a2
      :                          @1085
 14548: 82 19 50                 a2 = u64 [sp + 0x50]
 14551: 82 1a 70                 a3 = u64 [sp + 0x70]
 14554: 64 0b                    a4 = ra
 14556: 64 40                    ra = t2
 14558: 82 14 48                 t2 = u64 [sp + 0x48]
 14561: c9 c5 07                 a0 = s0 - a5
 14564: c9 63 08                 a1 = t1 - s1
 14567: e6 87 02                 t0 = minu(a0, a1)
 14570: 52 02 ba fe              jump @1072 if t0 != 0
      :                          @1086
 14574: 28 3f fe                 jump @1066
      :                          @1087
 14577: 95 1c 78                 a5 = sp + 0x78
 14580: 95 15 78                 s0 = sp + 0x78
 14583: ab 36 a1 fe              jump @1071 if s1 != t1
      :                          @1088
 14587: 28 98                    jump @1082
      :                          @1089
 14589: 95 16 f8 00              s1 = sp + 0xf8
 14593: 95 13 f8 00              t1 = sp + 0xf8
 14597: c9 c5 07                 a0 = s0 - a5
 14600: c9 63 08                 a1 = t1 - s1
 14603: e6 87 02                 t0 = minu(a0, a1)
 14606: 52 02 96 fe              jump @1072 if t0 != 0
      :                          @1090
 14610: 28 1b fe                 jump @1066
      :                          @1091
 14613: ae 5c 45                 jump @1094 if a5 >=u s0
      :                          @1092
 14616: 7c 57 ff                 a0 = u8 [s0 + 0xffffffffffffffff]
 14619: 97 77 04                 a0 = a0 << 0x4
 14622: c8 97 07                 a0 = a0 + a2
 14625: 82 78 08                 a1 = u64 [a0 + 0x8]
 14628: 64 93                    t1 = a2
 14630: 82 79                    a2 = u64 [a0]
 14632: 95 5a ff                 a3 = s0 + 0xffffffffffffffff
 14635: 82 4b f0                 a4 = u64 [t2 + 0xfffffffffffffff0]
 14638: 7b 18 80 01              u64 [sp + 0x180] = a1
 14642: 7b 19 78 01              u64 [sp + 0x178] = a2
 14646: 82 48 f8                 a1 = u64 [t2 + 0xfffffffffffffff8]
 14649: 7b 7b                    u64 [a0] = a4
 14651: 82 19 80 01              a2 = u64 [sp + 0x180]
 14655: 82 16 78 01              s1 = u64 [sp + 0x178]
 14659: 7b 78 08                 u64 [a0 + 0x8] = a1
 14662: 95 4b f0                 a4 = t2 + 0xfffffffffffffff0
 14665: 7b 49 f8                 u64 [t2 + 0xfffffffffffffff8] = a2
 14668: 64 39                    a2 = t1
 14670: 7b 46 f0                 u64 [t2 + 0xfffffffffffffff0] = s1
 14673: 64 b4                    t2 = a4
 14675: 64 a5                    s0 = a3
 14677: ac ac c3                 jump @1092 if a5 <u a3
      :                          @1093
 14680: 28 42                    jump @1096
      :                          @1094
 14682: 64 9b                    a4 = a2
 14684: ae 36 3e                 jump @1096 if s1 >=u t1
      :                          @1095
 14687: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
 14690: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 14693: 97 77 04                 a0 = a0 << 0x4
 14696: 82 b8 08                 a1 = u64 [a4 + 0x8]
 14699: 82 b9                    a2 = u64 [a4]
 14701: c8 47 07                 a0 = a0 + t2
 14704: 82 7a                    a3 = u64 [a0]
 14706: 7b 18 80 01              u64 [sp + 0x180] = a1
 14710: 7b 19 78 01              u64 [sp + 0x178] = a2
 14714: 82 78 08                 a1 = u64 [a0 + 0x8]
 14717: 7b ba                    u64 [a4] = a3
 14719: 82 19 80 01              a2 = u64 [sp + 0x180]
 14723: 82 1a 78 01              a3 = u64 [sp + 0x178]
 14727: 7b b8 08                 u64 [a4 + 0x8] = a1
 14730: 95 38 ff                 a1 = t1 + 0xffffffffffffffff
 14733: 7b 79 08                 u64 [a0 + 0x8] = a2
 14736: 7b 7a                    u64 [a0] = a3
 14738: 95 bb 10                 a4 = a4 + 0x10
 14741: 64 83                    t1 = a1
 14743: ac 86 c8                 jump @1095 if s1 <u a1
      :                          @1096
 14746: 82 17 20                 a0 = u64 [sp + 0x20]
 14749: c9 7b 07                 a0 = a4 - a0
 14752: 98 77 04                 a0 = a0 >> 0x4
 14755: 82 18 28                 a1 = u64 [sp + 0x28]
 14758: c8 87 05                 s0 = a0 + a1
 14761: 82 17 08                 a0 = u64 [sp + 0x8]
 14764: 7b 72                    u64 [a0] = t0
 14766: 7b 70 08                 u64 [a0 + 0x8] = ra
 14769: 82 18                    a1 = u64 [sp]
 14771: ae 85 d1 00              jump @1108 if s0 >=u a1
      :                          @1097
 14775: 82 17 08                 a0 = u64 [sp + 0x8]
 14778: 82 77 08                 a0 = u64 [a0 + 0x8]
 14781: 82 19 08                 a2 = u64 [sp + 0x8]
 14784: 82 99                    a2 = u64 [a2]
 14786: 97 56 04                 s1 = s0 << 0x4
 14789: 82 1a 08                 a3 = u64 [sp + 0x8]
 14792: c8 a6 06                 s1 = s1 + a3
 14795: 7b 17 00 01              u64 [sp + 0x100] = a0
 14799: 7b 19 f8 00              u64 [sp + 0xf8] = a2
 14803: 82 67                    a0 = u64 [s1]
 14805: 82 6b 08                 a4 = u64 [s1 + 0x8]
 14808: 82 19 00 01              a2 = u64 [sp + 0x100]
 14812: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 14816: 82 1c 08                 a5 = u64 [sp + 0x8]
 14819: 7b c7                    u64 [a5] = a0
 14821: 82 17 08                 a0 = u64 [sp + 0x8]
 14824: 7b 7b 08                 u64 [a0 + 0x8] = a4
 14827: 7b 69 08                 u64 [s1 + 0x8] = a2
 14830: 7b 6a                    u64 [s1] = a3
 14832: c9 58 08                 a1 = a1 - s0
 14835: 7b 18 70                 u64 [sp + 0x70] = a1
 14838: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
 14841: 95 68 10                 a1 = s1 + 0x10
 14844: ae b5 22                 jump @1100 if s0 >=u a4
      :                          @1098
 14847: 7b 18 60                 u64 [sp + 0x60] = a1
 14850: 64 58                    a1 = s0
 14852: 82 19 38                 a2 = u64 [sp + 0x38]
 14855: 82 1a 30                 a3 = u64 [sp + 0x30]
 14858: 7b 1b 68                 u64 [sp + 0x68] = a4
 14861: 50 20 70 01 b9 f7        ra = 368, jump @988
      :                          @1099 [@dyn 184]
 14867: 82 10 68                 ra = u64 [sp + 0x68]
 14870: 7b 16 38                 u64 [sp + 0x38] = s1
 14873: 82 1c 60                 a5 = u64 [sp + 0x60]
 14876: 28 1a                    jump @1102
      :                          @1100
 14878: 7b 17 08                 u64 [sp + 0x8] = a0
 14881: 64 87                    a0 = a1
 14883: 64 b8                    a1 = a4
 14885: 64 69                    a2 = s1
 14887: 82 1a 30                 a3 = u64 [sp + 0x30]
 14890: 50 20 72 01 9c f7        ra = 370, jump @988
      :                          @1101 [@dyn 185]
 14896: 82 1c 08                 a5 = u64 [sp + 0x8]
 14899: 64 50                    ra = s0
 14901: 01                       fallthrough
      :                          @1102
 14902: 82 17 28                 a0 = u64 [sp + 0x28]
 14905: 82 18 18                 a1 = u64 [sp + 0x18]
 14908: d8 87 07                 a0 = a0 <u a1
 14911: 85 77 01                 a0 = a0 ^ 0x1
 14914: 82 18 70                 a1 = u64 [sp + 0x70]
 14917: e6 85 08                 a1 = minu(s0, a1)
 14920: 82 19                    a2 = u64 [sp]
 14922: 98 99 03                 a2 = a2 >> 0x3
 14925: d8 98 08                 a1 = a1 <u a2
 14928: 85 88 01                 a1 = a1 ^ 0x1
 14931: 7b 18 58                 u64 [sp + 0x58] = a1
 14934: 7b 10                    u64 [sp] = ra
 14936: 7b 1c 08                 u64 [sp + 0x8] = a5
 14939: 33 08 15                 a1 = 0x15
 14942: ae 80 bb f7              jump @994 if ra >=u a1
      :                          @1103
 14946: 28 85 f7                 jump @990
      :                          @1104
 14949: 64 c7                    a0 = a5
 14951: 64 08                    a1 = ra
 14953: 33 00 74 01              ra = 0x174
 14957: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 14960: 7b 10 20                 u64 [sp + 0x20] = ra
 14963: 7b 15 18                 u64 [sp + 0x18] = s0
 14966: 7b 16 10                 u64 [sp + 0x10] = s1
 14969: 98 82 01                 t0 = a1 >> 0x1
 14972: 28 4d 0d                 jump @1330
      :                          @1105 [@dyn 186]
 14975: 28 7b f7                 jump @992
      :                          @1106
 14978: 00                       trap
      :                          @1107
 14979: 00                       trap
      :                          @1108
 14980: 00                       trap
      :                          @1109
 14981: 00                       trap
      :                          @1110
 14982: 00                       trap
      :                          @1111
 14983: 95 11 60 fe              sp = sp + 0xfffffffffffffe60
 14987: 7b 10 98 01              u64 [sp + 0x198] = ra
 14991: 7b 15 90 01              u64 [sp + 0x190] = s0
 14995: 7b 16 88 01              u64 [sp + 0x188] = s1
 14999: 33 0b 15                 a4 = 0x15
 15002: 7b 1a 48                 u64 [sp + 0x48] = a3
 15005: 7b 19 58                 u64 [sp + 0x58] = a2
 15008: 64 80                    ra = a1
 15010: ae b8 2b                 jump @1116 if a1 >=u a4
      :                          @1112
 15013: 64 72                    t0 = a0
 15015: 01                       fallthrough
      :                          @1113
 15016: 33 07 01                 a0 = 0x1
 15019: ae 07 10                 jump @1115 if a0 >=u ra
      :                          @1114
 15022: 33 09 01                 a2 = 0x1
 15025: 64 27                    a0 = t0
 15027: 64 08                    a1 = ra
 15029: 50 20 76 01 e8 ec        ra = 374, jump @775
      :                          @1115 [@dyn 187]
 15035: 82 10 98 01              ra = u64 [sp + 0x198]
 15039: 82 15 90 01              s0 = u64 [sp + 0x190]
 15043: 82 16 88 01              s1 = u64 [sp + 0x188]
 15047: 95 11 a0 01              sp = sp + 0x1a0
 15051: 32 00                    ret
      :                          @1116
 15053: 7b 17 08                 u64 [sp + 0x8] = a0
 15056: 49 11 78 01              u64 [sp + 120] = 0x1
 15060: 33 05 01 01              s0 = 0x101
 15064: 33 07 01                 a0 = 0x1
 15067: 7b 10                    u64 [sp] = ra
 15069: 01                       fallthrough
      :                          @1117
 15070: 82 18 78                 a1 = u64 [sp + 0x78]
 15073: d2 87 07                 a0 = a0 & a1
 15076: 7b 17 70                 u64 [sp + 0x70] = a0
 15079: 82 12 08                 t0 = u64 [sp + 0x8]
 15082: 01                       fallthrough
      :                          @1118
 15083: 81 17 48                 a0 = i32 [sp + 0x48]
 15086: 51 07 b6 05              jump @1214 if a0 == 0
      :                          @1119
 15090: 82 17 78                 a0 = u64 [sp + 0x78]
 15093: 84 77 01                 a0 = a0 & 0x1
 15096: 7b 12 80 00              u64 [sp + 0x80] = t0
 15100: 51 07 74 02              jump @1159 if a0 == 0
      :                          @1120
 15104: 98 0b 02                 a4 = ra >> 0x2
 15107: 97 b6 01                 s1 = a4 << 0x1
 15110: c8 b6 03                 t1 = s1 + a4
 15113: 54 10 31 29              jump @1123 if ra <=u 49
      :                          @1121
 15117: 95 b5 ff                 s0 = a4 + 0xffffffffffffffff
 15120: 97 b7 03                 a0 = a4 << 0x3
 15123: c8 27 07                 a0 = a0 + t0
 15126: 97 58 03                 a1 = s0 << 0x3
 15129: c8 28 08                 a1 = a1 + t0
 15132: 82 79                    a2 = u64 [a0]
 15134: 82 88                    a1 = u64 [a1]
 15136: ae 98 17                 jump @1124 if a1 >=u a2
      :                          @1122
 15139: 49 11 28 01              u64 [sp + 40] = 0x1
 15143: 64 94                    t2 = a2
 15145: 7b 15 50                 u64 [sp + 0x50] = s0
 15148: 64 b5                    s0 = a4
 15150: 64 89                    a2 = a1
 15152: 28 10                    jump @1125
      :                          @1123
 15154: 33 09                    a2 = 0
 15156: 28 1e 01                 jump @1132
      :                          @1124
 15159: 49 11 28                 u64 [sp + 40] = 0
 15162: 64 84                    t2 = a1
 15164: 7b 1b 50                 u64 [sp + 0x50] = a4
 15167: 01                       fallthrough
      :                          @1125
 15168: 95 b8 01                 a1 = a4 + 0x1
 15171: 7b 18 40                 u64 [sp + 0x40] = a1
 15174: 97 88 03                 a1 = a1 << 0x3
 15177: 82 1b 80 00              a4 = u64 [sp + 0x80]
 15181: c8 b8 08                 a1 = a1 + a4
 15184: 82 87                    a0 = u64 [a1]
 15186: d8 79 02                 t0 = a2 <u a0
 15189: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
 15192: 97 68 03                 a1 = s1 << 0x3
 15195: c8 b8 08                 a1 = a1 + a4
 15198: 97 ac 03                 a5 = a3 << 0x3
 15201: c8 cb 0b                 a4 = a4 + a5
 15204: 82 8c                    a5 = u64 [a1]
 15206: 82 b8                    a1 = u64 [a4]
 15208: e4 79 07                 a0 = maxu(a2, a0)
 15211: d8 74 09                 a2 = t2 <u a0
 15214: 7b 12 38                 u64 [sp + 0x38] = t0
 15217: 82 17 28                 a0 = u64 [sp + 0x28]
 15220: c8 27 07                 a0 = a0 + t0
 15223: c8 97 07                 a0 = a0 + a2
 15226: 7b 10 68                 u64 [sp + 0x68] = ra
 15229: 7b 15 60                 u64 [sp + 0x60] = s0
 15232: 7b 19 30                 u64 [sp + 0x30] = a2
 15235: ae c8 13                 jump @1127 if a1 >=u a5
      :                          @1126
 15238: 95 77 01                 a0 = a0 + 0x1
 15241: 7b 17 18                 u64 [sp + 0x18] = a0
 15244: 7b 1c 20                 u64 [sp + 0x20] = a5
 15247: 7b 1a 28                 u64 [sp + 0x28] = a3
 15250: 64 6a                    a3 = s1
 15252: 28 0e                    jump @1128
      :                          @1127
 15254: 7b 18 20                 u64 [sp + 0x20] = a1
 15257: 7b 16 28                 u64 [sp + 0x28] = s1
 15260: 64 c8                    a1 = a5
 15262: 7b 17 18                 u64 [sp + 0x18] = a0
 15265: 01                       fallthrough
      :                          @1128
 15266: 86 66 01                 s1 = s1 | 0x1
 15269: 97 6b 03                 a4 = s1 << 0x3
 15272: 82 15 80 00              s0 = u64 [sp + 0x80]
 15276: c8 5b 0b                 a4 = a4 + s0
 15279: 82 bb                    a4 = u64 [a4]
 15281: d8 b8 07                 a0 = a1 <u a4
 15284: 95 34 ff                 t2 = t1 + 0xffffffffffffffff
 15287: 97 39 03                 a2 = t1 << 0x3
 15290: c8 59 09                 a2 = a2 + s0
 15293: 97 4c 03                 a5 = t2 << 0x3
 15296: c8 5c 0c                 a5 = a5 + s0
 15299: 82 92                    t0 = u64 [a2]
 15301: 82 c0                    ra = u64 [a5]
 15303: e4 b8 08                 a1 = maxu(a1, a4)
 15306: 82 19 20                 a2 = u64 [sp + 0x20]
 15309: d8 89 09                 a2 = a2 <u a1
 15312: 7b 17 20                 u64 [sp + 0x20] = a0
 15315: 82 18 18                 a1 = u64 [sp + 0x18]
 15318: c8 87 07                 a0 = a0 + a1
 15321: c8 97 07                 a0 = a0 + a2
 15324: ae 20 12                 jump @1130 if ra >=u t0
      :                          @1129
 15327: 95 77 01                 a0 = a0 + 0x1
 15330: 7b 17 18                 u64 [sp + 0x18] = a0
 15333: 7b 12 10                 u64 [sp + 0x10] = t0
 15336: 64 47                    a0 = t2
 15338: 64 34                    t2 = t1
 15340: 28 0d                    jump @1131
      :                          @1130
 15342: 7b 10 10                 u64 [sp + 0x10] = ra
 15345: 7b 17 18                 u64 [sp + 0x18] = a0
 15348: 64 37                    a0 = t1
 15350: 64 20                    ra = t0
 15352: 01                       fallthrough
      :                          @1131
 15353: 82 15 60                 s0 = u64 [sp + 0x60]
 15356: 82 1c 50                 a5 = u64 [sp + 0x50]
 15359: 82 18 40                 a1 = u64 [sp + 0x40]
 15362: 82 1b 38                 a4 = u64 [sp + 0x38]
 15365: da bc 08                 a1 = a5 if a4 == 0
 15368: 95 33 01                 t1 = t1 + 0x1
 15371: 97 3c 03                 a5 = t1 << 0x3
 15374: 82 12 80 00              t0 = u64 [sp + 0x80]
 15378: c8 2c 0c                 a5 = a5 + t0
 15381: 82 cc                    a5 = u64 [a5]
 15383: 82 1b 30                 a4 = u64 [sp + 0x30]
 15386: da b8 05                 s0 = a1 if a4 == 0
 15389: 82 18 28                 a1 = u64 [sp + 0x28]
 15392: 82 1b 20                 a4 = u64 [sp + 0x20]
 15395: da b8 06                 s1 = a1 if a4 == 0
 15398: da 96 0a                 a3 = s1 if a2 == 0
 15401: d8 c0 09                 a2 = ra <u a5
 15404: db 93 07                 a0 = t1 if a2 != 0
 15407: e4 c0 0c                 a5 = maxu(ra, a5)
 15410: 82 18 10                 a1 = u64 [sp + 0x10]
 15413: d8 c8 08                 a1 = a1 <u a5
 15416: db 84 07                 a0 = t2 if a1 != 0
 15419: c8 98 08                 a1 = a1 + a2
 15422: 82 19 18                 a2 = u64 [sp + 0x18]
 15425: c8 89 09                 a2 = a2 + a1
 15428: 64 73                    t1 = a0
 15430: 64 a6                    s1 = a3
 15432: 64 5b                    a4 = s0
 15434: 82 10 68                 ra = u64 [sp + 0x68]
 15437: 33 05 01 01              s0 = 0x101
 15441: 01                       fallthrough
      :                          @1132
 15442: 97 67 03                 a0 = s1 << 0x3
 15445: c8 27 07                 a0 = a0 + t0
 15448: 97 b8 03                 a1 = a4 << 0x3
 15451: c8 82 0a                 a3 = t0 + a1
 15454: 82 78                    a1 = u64 [a0]
 15456: 82 a7                    a0 = u64 [a3]
 15458: ae 87 0c                 jump @1134 if a0 >=u a1
      :                          @1133
 15461: 95 99 01                 a2 = a2 + 0x1
 15464: 64 8c                    a5 = a1
 15466: 64 ba                    a3 = a4
 15468: 28 0b                    jump @1135
      :                          @1134
 15470: 64 7c                    a5 = a0
 15472: 64 6a                    a3 = s1
 15474: 64 b6                    s1 = a4
 15476: 64 87                    a0 = a1
 15478: 01                       fallthrough
      :                          @1135
 15479: 97 38 03                 a1 = t1 << 0x3
 15482: c8 28 08                 a1 = a1 + t0
 15485: 82 8b                    a4 = u64 [a1]
 15487: d8 b7 08                 a1 = a0 <u a4
 15490: e4 b7 07                 a0 = maxu(a0, a4)
 15493: c8 89 09                 a2 = a2 + a1
 15496: ae 7c 09                 jump @1138 if a5 >=u a0
      :                          @1136
 15499: 55 19 0b 1a              jump @1140 if a2 >=u 11
      :                          @1137
 15503: 28 49                    jump @1143
      :                          @1138
 15505: da 8a 03                 t1 = a3 if a1 == 0
 15508: 64 36                    s1 = t1
 15510: 88 97 01                 a0 = a2 <u 0x1
 15513: 82 18 70                 a1 = u64 [sp + 0x70]
 15516: d2 87 07                 a0 = a0 & a1
 15519: 51 07 39                 jump @1143 if a0 == 0
      :                          @1139
 15522: 28 f0 00                 jump @1161
      :                          @1140
 15525: 98 07 01                 a0 = ra >> 0x1
 15528: 97 08 03                 a1 = ra << 0x3
 15531: c8 28 08                 a1 = a1 + t0
 15534: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 15537: 64 29                    a2 = t0
 15539: 01                       fallthrough
      :                          @1141
 15540: 82 8a                    a3 = u64 [a1]
 15542: 82 9b                    a4 = u64 [a2]
 15544: 7b 9a                    u64 [a2] = a3
 15546: 7b 8b                    u64 [a1] = a4
 15548: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 15551: 95 99 08                 a2 = a2 + 0x8
 15554: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 15557: 52 07 ef                 jump @1141 if a0 != 0
      :                          @1142
 15560: 85 66 ff                 s1 = s1 ^ 0xffffffffffffffff
 15563: c8 06 06                 s1 = s1 + ra
 15566: 82 18 70                 a1 = u64 [sp + 0x70]
 15569: 84 87 01                 a0 = a1 & 0x1
 15572: 52 07 be 00              jump @1161 if a0 != 0
      :                          @1143
 15576: 97 67 03                 a0 = s1 << 0x3
 15579: 82 18 58                 a1 = u64 [sp + 0x58]
 15582: 51 08 d1 00              jump @1164 if a1 == 0
      :                          @1144
 15586: ae 06 d3 03              jump @1216 if s1 >=u ra
      :                          @1145
 15590: c8 72 08                 a1 = t0 + a0
 15593: 82 19 58                 a2 = u64 [sp + 0x58]
 15596: 82 9a                    a3 = u64 [a2]
 15598: 82 89                    a2 = u64 [a1]
 15600: ac a9 c3 00              jump @1165 if a2 <u a3
      :                          @1146
 15604: 82 27                    a0 = u64 [t0]
 15606: 7b 29                    u64 [t0] = a2
 15608: 7b 87                    u64 [a1] = a0
 15610: 82 28                    a1 = u64 [t0]
 15612: 33 07                    a0 = 0
 15614: 95 29 08                 a2 = t0 + 0x8
 15617: 95 0a ff                 a3 = ra + 0xffffffffffffffff
 15620: 54 0a 22                 jump @1151 if a3 <=u 0
      :                          @1147
 15623: 97 7b 03                 a4 = a0 << 0x3
 15626: c8 9b 0b                 a4 = a4 + a2
 15629: 01                       fallthrough
      :                          @1148
 15630: 82 bc                    a5 = u64 [a4]
 15632: ac 8c 16                 jump @1151 if a5 <u a1
      :                          @1149
 15635: 95 77 01                 a0 = a0 + 0x1
 15638: 95 bb 08                 a4 = a4 + 0x8
 15641: ab 7a f5                 jump @1148 if a3 != a0
      :                          @1150
 15644: 64 a7                    a0 = a3
 15646: 97 ab 03                 a4 = a3 << 0x3
 15649: c8 9b 0b                 a4 = a4 + a2
 15652: 28 09                    jump @1152
      :                          @1151
 15654: 97 ab 03                 a4 = a3 << 0x3
 15657: c8 9b 0b                 a4 = a4 + a2
 15660: 01                       fallthrough
      :                          @1152
 15661: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 15664: ae a7 26                 jump @1156 if a0 >=u a3
      :                          @1153
 15667: 82 b6 f8                 s1 = u64 [a4 + 0xfffffffffffffff8]
 15670: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
 15673: 64 cb                    a4 = a5
 15675: ac 86 f2                 jump @1152 if s1 <u a1
      :                          @1154
 15678: 97 7b 03                 a4 = a0 << 0x3
 15681: c8 9b 0b                 a4 = a4 + a2
 15684: 82 b5                    s0 = u64 [a4]
 15686: 7b b6                    u64 [a4] = s1
 15688: 7b c5                    u64 [a5] = s0
 15690: 33 05 01 01              s0 = 0x101
 15694: 95 77 01                 a0 = a0 + 0x1
 15697: ac a7 b6                 jump @1147 if a0 <u a3
      :                          @1155
 15700: 28 d2                    jump @1151
      :                          @1156
 15702: 95 77 01                 a0 = a0 + 0x1
 15705: 7b 28                    u64 [t0] = a1
 15707: ac 70 5c 03              jump @1218 if ra <u a0
      :                          @1157
 15711: c9 70 00                 ra = ra - a0
 15714: 97 77 03                 a0 = a0 << 0x3
 15717: c8 72 02                 t0 = t0 + a0
 15720: 55 10 15 83 fd           jump @1118 if ra >=u 21
      :                          @1158
 15725: 28 3b fd                 jump @1113
      :                          @1159
 15728: 64 27                    a0 = t0
 15730: 64 08                    a1 = ra
 15732: 64 05                    s0 = ra
 15734: 50 20 78 01 f6 dc        ra = 376, jump @465
      :                          @1160 [@dyn 188]
 15740: 82 12 80 00              t0 = u64 [sp + 0x80]
 15744: 64 50                    ra = s0
 15746: 33 05 01 01              s0 = 0x101
 15750: 82 17 48                 a0 = u64 [sp + 0x48]
 15753: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 15756: 7b 17 48                 u64 [sp + 0x48] = a0
 15759: 28 71 fd                 jump @1120
      :                          @1161
 15762: 64 27                    a0 = t0
 15764: 64 08                    a1 = ra
 15766: 64 05                    s0 = ra
 15768: 50 20 7a 01 bf e4        ra = 378, jump @625
      :                          @1162 [@dyn 189]
 15774: 82 12 80 00              t0 = u64 [sp + 0x80]
 15778: 64 50                    ra = s0
 15780: 33 05 01 01              s0 = 0x101
 15784: 51 07 30 ff              jump @1143 if a0 == 0
      :                          @1163
 15788: 28 0f fd                 jump @1115
      :                          @1164
 15791: 82 18                    a1 = u64 [sp]
 15793: 28 08                    jump @1166
      :                          @1165
 15795: 7b 12 08                 u64 [sp + 0x8] = t0
 15798: 64 08                    a1 = ra
 15800: 01                       fallthrough
      :                          @1166
 15801: ae 86 fd 02              jump @1217 if s1 >=u a1
      :                          @1167
 15805: 82 1b 08                 a4 = u64 [sp + 0x8]
 15808: c8 b7 07                 a0 = a0 + a4
 15811: 82 7a                    a3 = u64 [a0]
 15813: 82 b9                    a2 = u64 [a4]
 15815: 7b ba                    u64 [a4] = a3
 15817: 7b 79                    u64 [a0] = a2
 15819: 82 b0                    ra = u64 [a4]
 15821: 33 09                    a2 = 0
 15823: 95 b2 08                 t0 = a4 + 0x8
 15826: 7b 18                    u64 [sp] = a1
 15828: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 15831: 64 27                    a0 = t0
 15833: 01                       fallthrough
      :                          @1168
 15834: 82 7a                    a3 = u64 [a0]
 15836: ae a0 0f                 jump @1171 if ra >=u a3
      :                          @1169
 15839: 95 99 01                 a2 = a2 + 0x1
 15842: 95 77 08                 a0 = a0 + 0x8
 15845: ab 98 f5                 jump @1168 if a1 != a2
      :                          @1170
 15848: 64 89                    a2 = a1
 15850: 01                       fallthrough
      :                          @1171
 15851: 82 17                    a0 = u64 [sp]
 15853: 97 77 03                 a0 = a0 << 0x3
 15856: 82 1a 08                 a3 = u64 [sp + 0x8]
 15859: c8 a7 07                 a0 = a0 + a3
 15862: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
 15865: 01                       fallthrough
      :                          @1172
 15866: 64 8b                    a4 = a1
 15868: ae 89 0e                 jump @1174 if a2 >=u a1
      :                          @1173
 15871: 82 a7                    a0 = u64 [a3]
 15873: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
 15876: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 15879: ae 70 f3                 jump @1172 if ra >=u a0
      :                          @1174
 15882: 64 b8                    a1 = a4
 15884: ac 9b ac 02              jump @1219 if a4 <u a2
      :                          @1175
 15888: 33 0b                    a4 = 0
 15890: 33 0c                    a5 = 0
 15892: 33 06                    s1 = 0
 15894: 33 03                    t1 = 0
 15896: 7b 19 40                 u64 [sp + 0x40] = a2
 15899: 97 97 03                 a0 = a2 << 0x3
 15902: c8 72 09                 a2 = t0 + a0
 15905: 7b 18 30                 u64 [sp + 0x30] = a1
 15908: 97 87 03                 a0 = a1 << 0x3
 15911: c8 72 08                 a1 = t0 + a0
 15914: 33 04 80 00              t2 = 0x80
 15918: 7b 19 38                 u64 [sp + 0x38] = a2
 15921: 64 9a                    a3 = a2
 15923: 33 02 80 00              t0 = 0x80
 15927: 7b 10 50                 u64 [sp + 0x50] = ra
 15930: 28 42                    jump @1178
      :                          @1176
 15932: 97 00 03                 ra = ra << 0x3
 15935: c8 80 00                 ra = ra + a1
 15938: 82 17 60                 a0 = u64 [sp + 0x60]
 15941: 7b 07                    u64 [ra] = a0
 15943: 95 bb 01                 a4 = a4 + 0x1
 15946: 95 66 01                 s1 = s1 + 0x1
 15949: 82 10 50                 ra = u64 [sp + 0x50]
 15952: 82 14 68                 t2 = u64 [sp + 0x68]
 15955: 01                       fallthrough
      :                          @1177
 15956: d3 cb 07                 a0 = a4 ^ a5
 15959: 64 49                    a2 = t2
 15961: 94 79                    a2 = 0 if a0 != 0
 15963: 97 99 03                 a2 = a2 << 0x3
 15966: c8 9a 0a                 a3 = a3 + a2
 15969: d3 36 07                 a0 = s1 ^ t1
 15972: 82 12 70                 t0 = u64 [sp + 0x70]
 15975: 9a 29                    a2 = -t0
 15977: 94 79                    a2 = 0 if a0 != 0
 15979: 97 99 03                 a2 = a2 << 0x3
 15982: c8 98 08                 a1 = a1 + a2
 15985: 33 05 01 01              s0 = 0x101
 15989: 82 17 78                 a0 = u64 [sp + 0x78]
 15992: ac 57 3e 01              jump @1200 if a0 <u s0
      :                          @1178
 15996: c9 a8 07                 a0 = a1 - a3
 15999: 98 79 03                 a2 = a0 >> 0x3
 16002: 7b 1a 80 00              u64 [sp + 0x80] = a3
 16006: 7b 19 78                 u64 [sp + 0x78] = a2
 16009: ac 59 38                 jump @1185 if a2 <u s0
      :                          @1179
 16012: aa cb 71                 jump @1189 if a4 == a5
      :                          @1180
 16015: ab 36 b4 00              jump @1196 if s1 != t1
      :                          @1181
 16019: 51 02 9a 00              jump @1194 if t0 == 0
      :                          @1182
 16023: 33 07                    a0 = 0
 16025: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
 16028: 95 16 08 01              s1 = sp + 0x108
 16032: 95 13 08 01              t1 = sp + 0x108
 16036: 01                       fallthrough
      :                          @1183
 16037: 82 a9                    a2 = u64 [a3]
 16039: 78 37                    u8 [t1] = a0
 16041: 95 75 01                 s0 = a0 + 0x1
 16044: d8 90 07                 a0 = ra <u a2
 16047: c8 73 03                 t1 = t1 + a0
 16050: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 16053: 64 57                    a0 = s0
 16055: ab 52 ee                 jump @1183 if t0 != s0
      :                          @1184
 16058: 82 1a 80 00              a3 = u64 [sp + 0x80]
 16062: 28 85 00                 jump @1196
      :                          @1185
 16065: 64 25                    s0 = t0
 16067: 64 49                    a2 = t2
 16069: d8 cb 04                 t2 = a4 <u a5
 16072: d8 36 0a                 a3 = s1 <u t1
 16075: d4 a4 02                 t0 = t2 | a3
 16078: 51 02 1f                 jump @1188 if t0 == 0
      :                          @1186
 16081: 82 1a 78                 a3 = u64 [sp + 0x78]
 16084: 95 a7 80                 a0 = a3 + 0xffffffffffffff80
 16087: db 47 05                 s0 = a0 if t2 != 0
 16090: da 2a 07                 a0 = a3 if t0 == 0
 16093: 64 52                    t0 = s0
 16095: da 47 09                 a2 = a0 if t2 == 0
 16098: 64 94                    t2 = a2
 16100: 82 1a 80 00              a3 = u64 [sp + 0x80]
 16104: ab cb a7                 jump @1180 if a4 != a5
      :                          @1187
 16107: 28 12                    jump @1189
      :                          @1188
 16109: 98 74 04                 t2 = a0 >> 0x4
 16112: 82 17 78                 a0 = u64 [sp + 0x78]
 16115: c9 47 02                 t0 = a0 - t2
 16118: 82 1a 80 00              a3 = u64 [sp + 0x80]
 16122: ab cb 95                 jump @1180 if a4 != a5
      :                          @1189
 16125: 51 04 3a                 jump @1195 if t2 == 0
      :                          @1190
 16128: 33 07                    a0 = 0
 16130: 95 1b 88 00              a4 = sp + 0x88
 16134: 95 1c 88 00              a5 = sp + 0x88
 16138: 01                       fallthrough
      :                          @1191
 16139: 82 a5                    s0 = u64 [a3]
 16141: 78 c7                    u8 [a5] = a0
 16143: 95 79 01                 a2 = a0 + 0x1
 16146: d8 50 07                 a0 = ra <u s0
 16149: 85 77 01                 a0 = a0 ^ 0x1
 16152: c8 7c 0c                 a5 = a5 + a0
 16155: 95 aa 08                 a3 = a3 + 0x8
 16158: 64 97                    a0 = a2
 16160: ab 94 eb                 jump @1191 if t2 != a2
      :                          @1192
 16163: 82 1a 80 00              a3 = u64 [sp + 0x80]
 16167: ab 36 1c                 jump @1196 if s1 != t1
      :                          @1193
 16170: 28 69 ff                 jump @1181
      :                          @1194
 16173: 95 16 08 01              s1 = sp + 0x108
 16177: 95 13 08 01              t1 = sp + 0x108
 16181: 28 0e                    jump @1196
      :                          @1195
 16183: 95 1b 88 00              a4 = sp + 0x88
 16187: 95 1c 88 00              a5 = sp + 0x88
 16191: aa 36 54 ff              jump @1181 if s1 == t1
      :                          @1196
 16195: 7b 12 70                 u64 [sp + 0x70] = t0
 16198: c9 bc 07                 a0 = a5 - a4
 16201: c9 63 09                 a2 = t1 - s1
 16204: e6 97 02                 t0 = minu(a0, a2)
 16207: 51 02 05 ff              jump @1177 if t0 == 0
      :                          @1197
 16211: 7b 14 68                 u64 [sp + 0x68] = t2
 16214: 7c b7                    a0 = u8 [a4]
 16216: 7c 64                    t2 = u8 [s1]
 16218: 97 77 03                 a0 = a0 << 0x3
 16221: c8 a7 07                 a0 = a0 + a3
 16224: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
 16227: 97 09 03                 a2 = ra << 0x3
 16230: c8 89 09                 a2 = a2 + a1
 16233: 82 99                    a2 = u64 [a2]
 16235: 82 75                    s0 = u64 [a0]
 16237: 7b 15 60                 u64 [sp + 0x60] = s0
 16240: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 16243: 7b 79                    u64 [a0] = a2
 16245: 51 02 c7 fe              jump @1176 if t0 == 0
      :                          @1198
 16249: 7c b7 01                 a0 = u8 [a4 + 0x1]
 16252: 97 77 03                 a0 = a0 << 0x3
 16255: c8 a7 07                 a0 = a0 + a3
 16258: 85 49 ff                 a2 = t2 ^ 0xffffffffffffffff
 16261: 82 7a                    a3 = u64 [a0]
 16263: 97 99 03                 a2 = a2 << 0x3
 16266: 86 99 00 f8              a2 = a2 | 0xfffffffffffff800
 16270: c8 89 09                 a2 = a2 + a1
 16273: 7b 9a                    u64 [a2] = a3
 16275: 82 1a 80 00              a3 = u64 [sp + 0x80]
 16279: 7c 64 01                 t2 = u8 [s1 + 0x1]
 16282: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
 16285: 97 09 03                 a2 = ra << 0x3
 16288: c8 89 09                 a2 = a2 + a1
 16291: 82 99                    a2 = u64 [a2]
 16293: 95 bb 01                 a4 = a4 + 0x1
 16296: 95 66 01                 s1 = s1 + 0x1
 16299: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 16302: 7b 79                    u64 [a0] = a2
 16304: 52 02 c9                 jump @1198 if t0 != 0
      :                          @1199
 16307: 28 89 fe                 jump @1176
      :                          @1200
 16310: ae cb 2b                 jump @1204 if a4 >=u a5
      :                          @1201
 16313: 82 12 08                 t0 = u64 [sp + 0x8]
 16316: 64 a3                    t1 = a3
 16318: 01                       fallthrough
      :                          @1202
 16319: 7c c7 ff                 a0 = u8 [a5 + 0xffffffffffffffff]
 16322: 97 77 03                 a0 = a0 << 0x3
 16325: c8 37 07                 a0 = a0 + t1
 16328: 82 85 f8                 s0 = u64 [a1 + 0xfffffffffffffff8]
 16331: 82 79                    a2 = u64 [a0]
 16333: 95 c6 ff                 s1 = a5 + 0xffffffffffffffff
 16336: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
 16339: 7b 75                    u64 [a0] = s0
 16341: 7b 89 f8                 u64 [a1 + 0xfffffffffffffff8] = a2
 16344: 64 a8                    a1 = a3
 16346: 64 6c                    a5 = s1
 16348: ac 6b e3                 jump @1202 if a4 <u s1
      :                          @1203
 16351: 28 27                    jump @1206
      :                          @1204
 16353: 82 12 08                 t0 = u64 [sp + 0x8]
 16356: ae 36 22                 jump @1206 if s1 >=u t1
      :                          @1205
 16359: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
 16362: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 16365: 97 77 03                 a0 = a0 << 0x3
 16368: c8 87 07                 a0 = a0 + a1
 16371: 82 79                    a2 = u64 [a0]
 16373: 82 ab                    a4 = u64 [a3]
 16375: 95 3c ff                 a5 = t1 + 0xffffffffffffffff
 16378: 7b a9                    u64 [a3] = a2
 16380: 7b 7b                    u64 [a0] = a4
 16382: 95 aa 08                 a3 = a3 + 0x8
 16385: 64 c3                    t1 = a5
 16387: ac c6 e4                 jump @1205 if s1 <u a5
      :                          @1206
 16390: 82 17 38                 a0 = u64 [sp + 0x38]
 16393: c9 7a 07                 a0 = a3 - a0
 16396: 98 77 03                 a0 = a0 >> 0x3
 16399: 82 16 40                 s1 = u64 [sp + 0x40]
 16402: c8 76 06                 s1 = s1 + a0
 16405: 7b 20                    u64 [t0] = ra
 16407: 82 18                    a1 = u64 [sp]
 16409: ae 86 9d 00              jump @1217 if s1 >=u a1
      :                          @1207
 16413: 97 67 03                 a0 = s1 << 0x3
 16416: c8 72 09                 a2 = t0 + a0
 16419: 82 97                    a0 = u64 [a2]
 16421: 7b 27                    u64 [t0] = a0
 16423: 7b 90                    u64 [a2] = ra
 16425: 64 25                    s0 = t0
 16427: c9 68 08                 a1 = a1 - s1
 16430: 7b 18 80 00              u64 [sp + 0x80] = a1
 16434: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
 16437: 95 97 08                 a0 = a2 + 0x8
 16440: ae b6 28                 jump @1210 if s1 >=u a4
      :                          @1208
 16443: 7b 17 78                 u64 [sp + 0x78] = a0
 16446: 64 57                    a0 = s0
 16448: 64 68                    a1 = s1
 16450: 7b 19 70                 u64 [sp + 0x70] = a2
 16453: 82 19 58                 a2 = u64 [sp + 0x58]
 16456: 82 1a 48                 a3 = u64 [sp + 0x48]
 16459: 64 b5                    s0 = a4
 16461: 50 20 7c 01 3a fa        ra = 380, jump @1111
      :                          @1209 [@dyn 190]
 16467: 64 50                    ra = s0
 16469: 82 17 70                 a0 = u64 [sp + 0x70]
 16472: 7b 17 58                 u64 [sp + 0x58] = a0
 16475: 82 15 78                 s0 = u64 [sp + 0x78]
 16478: 28 10                    jump @1212
      :                          @1210
 16480: 64 b8                    a1 = a4
 16482: 82 1a 48                 a3 = u64 [sp + 0x48]
 16485: 50 20 7e 01 22 fa        ra = 382, jump @1111
      :                          @1211 [@dyn 191]
 16491: 64 60                    ra = s1
 16493: 01                       fallthrough
      :                          @1212
 16494: 82 17 40                 a0 = u64 [sp + 0x40]
 16497: 82 18 30                 a1 = u64 [sp + 0x30]
 16500: d8 87 07                 a0 = a0 <u a1
 16503: 85 77 01                 a0 = a0 ^ 0x1
 16506: 82 18 80 00              a1 = u64 [sp + 0x80]
 16510: e6 86 08                 a1 = minu(s1, a1)
 16513: 82 19                    a2 = u64 [sp]
 16515: 98 99 03                 a2 = a2 >> 0x3
 16518: d8 98 08                 a1 = a1 <u a2
 16521: 85 88 01                 a1 = a1 ^ 0x1
 16524: 7b 18 78                 u64 [sp + 0x78] = a1
 16527: 7b 10                    u64 [sp] = ra
 16529: 7b 15 08                 u64 [sp + 0x8] = s0
 16532: 64 52                    t0 = s0
 16534: 33 08 15                 a1 = 0x15
 16537: 33 05 01 01              s0 = 0x101
 16541: ae 80 41 fa              jump @1117 if ra >=u a1
      :                          @1213
 16545: 28 07 fa                 jump @1113
      :                          @1214
 16548: 64 27                    a0 = t0
 16550: 64 08                    a1 = ra
 16552: 33 00 80 01              ra = 0x180
 16556: 98 82 01                 t0 = a1 >> 0x1
 16559: 28 94 08                 jump @1359
      :                          @1215 [@dyn 192]
 16562: 28 09 fa                 jump @1115
      :                          @1216
 16565: 00                       trap
      :                          @1217
 16566: 00                       trap
      :                          @1218
 16567: 00                       trap
      :                          @1219
 16568: 00                       trap
      :                          @1220
 16569: 95 11 50 fe              sp = sp + 0xfffffffffffffe50
 16573: 7b 10 a8 01              u64 [sp + 0x1a8] = ra
 16577: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
 16581: 7b 16 98 01              u64 [sp + 0x198] = s1
 16585: 33 0b 15                 a4 = 0x15
 16588: 7b 1a 40                 u64 [sp + 0x40] = a3
 16591: 7b 19 48                 u64 [sp + 0x48] = a2
 16594: 7b 18 08                 u64 [sp + 0x8] = a1
 16597: ae b8 2e                 jump @1225 if a1 >=u a4
      :                          @1221
 16600: 82 10 08                 ra = u64 [sp + 0x8]
 16603: 64 76                    s1 = a0
 16605: 01                       fallthrough
      :                          @1222
 16606: 33 07 01                 a0 = 0x1
 16609: ae 07 10                 jump @1224 if a0 >=u ra
      :                          @1223
 16612: 33 09 01                 a2 = 0x1
 16615: 64 67                    a0 = s1
 16617: 64 08                    a1 = ra
 16619: 50 20 82 01 36 e8        ra = 386, jump @813
      :                          @1224 [@dyn 193]
 16625: 82 10 a8 01              ra = u64 [sp + 0x1a8]
 16629: 82 15 a0 01              s0 = u64 [sp + 0x1a0]
 16633: 82 16 98 01              s1 = u64 [sp + 0x198]
 16637: 95 11 b0 01              sp = sp + 0x1b0
 16641: 32 00                    ret
      :                          @1225
 16643: 7b 17                    u64 [sp] = a0
 16645: 49 11 70 01              u64 [sp + 112] = 0x1
 16649: 33 07 01                 a0 = 0x1
 16652: 82 10 08                 ra = u64 [sp + 0x8]
 16655: 01                       fallthrough
      :                          @1226
 16656: 82 18 70                 a1 = u64 [sp + 0x70]
 16659: d2 87 07                 a0 = a0 & a1
 16662: 7b 17 68                 u64 [sp + 0x68] = a0
 16665: 82 16                    s1 = u64 [sp]
 16667: 01                       fallthrough
      :                          @1227
 16668: 81 17 40                 a0 = i32 [sp + 0x40]
 16671: 51 07 87 06              jump @1322 if a0 == 0
      :                          @1228
 16675: 82 17 70                 a0 = u64 [sp + 0x70]
 16678: 84 77 01                 a0 = a0 & 0x1
 16681: 7b 10 78                 u64 [sp + 0x78] = ra
 16684: 51 07 c2 02              jump @1268 if a0 == 0
      :                          @1229
 16688: 98 0b 02                 a4 = ra >> 0x2
 16691: 97 b5 01                 s0 = a4 << 0x1
 16694: c8 b5 03                 t1 = s0 + a4
 16697: 7b 16 80 00              u64 [sp + 0x80] = s1
 16701: 54 10 31 2b              jump @1232 if ra <=u 49
      :                          @1230
 16705: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 16708: 97 b7 04                 a0 = a4 << 0x4
 16711: c8 67 07                 a0 = a0 + s1
 16714: 82 70 08                 ra = u64 [a0 + 0x8]
 16717: 97 a7 04                 a0 = a3 << 0x4
 16720: c8 67 07                 a0 = a0 + s1
 16723: 82 78 08                 a1 = u64 [a0 + 0x8]
 16726: ae 80 17                 jump @1233 if ra >=u a1
      :                          @1231
 16729: 33 02 01                 t0 = 0x1
 16732: 64 04                    t2 = ra
 16734: 7b 1a 18                 u64 [sp + 0x18] = a3
 16737: 7b 1b 60                 u64 [sp + 0x60] = a4
 16740: 64 80                    ra = a1
 16742: 28 12                    jump @1234
      :                          @1232
 16744: 33 09                    a2 = 0
 16746: 28 0a 01                 jump @1241
      :                          @1233
 16749: 7b 1a 60                 u64 [sp + 0x60] = a3
 16752: 33 02                    t0 = 0
 16754: 64 84                    t2 = a1
 16756: 7b 1b 18                 u64 [sp + 0x18] = a4
 16759: 01                       fallthrough
      :                          @1234
 16760: 95 b8 01                 a1 = a4 + 0x1
 16763: 7b 18 50                 u64 [sp + 0x50] = a1
 16766: 97 88 04                 a1 = a1 << 0x4
 16769: c8 68 08                 a1 = a1 + s1
 16772: 82 87 08                 a0 = u64 [a1 + 0x8]
 16775: d8 07 09                 a2 = a0 <u ra
 16778: 95 5b ff                 a4 = s0 + 0xffffffffffffffff
 16781: 97 58 04                 a1 = s0 << 0x4
 16784: c8 68 08                 a1 = a1 + s1
 16787: 82 8c 08                 a5 = u64 [a1 + 0x8]
 16790: 97 b8 04                 a1 = a4 << 0x4
 16793: c8 68 08                 a1 = a1 + s1
 16796: 82 88 08                 a1 = u64 [a1 + 0x8]
 16799: e6 07 07                 a0 = minu(a0, ra)
 16802: d8 47 06                 s1 = a0 <u t2
 16805: 7b 19 38                 u64 [sp + 0x38] = a2
 16808: c8 92 07                 a0 = t0 + a2
 16811: c8 67 0a                 a3 = a0 + s1
 16814: 7b 16 30                 u64 [sp + 0x30] = s1
 16817: ae 8c 10                 jump @1236 if a5 >=u a1
      :                          @1235
 16820: 95 aa 01                 a3 = a3 + 0x1
 16823: 64 c6                    s1 = a5
 16825: 7b 1b 28                 u64 [sp + 0x28] = a4
 16828: 7b 15 58                 u64 [sp + 0x58] = s0
 16831: 28 0d                    jump @1237
      :                          @1236
 16833: 7b 1b 58                 u64 [sp + 0x58] = a4
 16836: 64 86                    s1 = a1
 16838: 7b 15 28                 u64 [sp + 0x28] = s0
 16841: 64 c8                    a1 = a5
 16843: 01                       fallthrough
      :                          @1237
 16844: 86 54 01                 t2 = s0 | 0x1
 16847: 97 4c 04                 a5 = t2 << 0x4
 16850: 82 15 80 00              s0 = u64 [sp + 0x80]
 16854: c8 5c 0c                 a5 = a5 + s0
 16857: 82 c9 08                 a2 = u64 [a5 + 0x8]
 16860: d8 89 07                 a0 = a2 <u a1
 16863: 95 3c ff                 a5 = t1 + 0xffffffffffffffff
 16866: 97 3b 04                 a4 = t1 << 0x4
 16869: c8 5b 0b                 a4 = a4 + s0
 16872: 82 b2 08                 t0 = u64 [a4 + 0x8]
 16875: 97 cb 04                 a4 = a5 << 0x4
 16878: c8 5b 0b                 a4 = a4 + s0
 16881: 82 b0 08                 ra = u64 [a4 + 0x8]
 16884: e6 89 08                 a1 = minu(a2, a1)
 16887: d8 68 09                 a2 = a1 <u s1
 16890: 7b 17 20                 u64 [sp + 0x20] = a0
 16893: c8 a7 07                 a0 = a0 + a3
 16896: c8 97 07                 a0 = a0 + a2
 16899: ae 02 11                 jump @1239 if t0 >=u ra
      :                          @1238
 16902: 95 77 01                 a0 = a0 + 0x1
 16905: 7b 12 10                 u64 [sp + 0x10] = t0
 16908: 64 72                    t0 = a0
 16910: 64 c7                    a0 = a5
 16912: 64 3c                    a5 = t1
 16914: 28 0e                    jump @1240
      :                          @1239
 16916: 7b 10 10                 u64 [sp + 0x10] = ra
 16919: 64 78                    a1 = a0
 16921: 64 37                    a0 = t1
 16923: 64 20                    ra = t0
 16925: 64 82                    t0 = a1
 16927: 01                       fallthrough
      :                          @1240
 16928: 82 1a 18                 a3 = u64 [sp + 0x18]
 16931: 82 15 50                 s0 = u64 [sp + 0x50]
 16934: 82 1b 38                 a4 = u64 [sp + 0x38]
 16937: da ba 05                 s0 = a3 if a4 == 0
 16940: 95 33 01                 t1 = t1 + 0x1
 16943: 97 3b 04                 a4 = t1 << 0x4
 16946: 82 16 80 00              s1 = u64 [sp + 0x80]
 16950: c8 6b 0b                 a4 = a4 + s1
 16953: 82 bb 08                 a4 = u64 [a4 + 0x8]
 16956: 82 1a 60                 a3 = u64 [sp + 0x60]
 16959: 82 18 30                 a1 = u64 [sp + 0x30]
 16962: da 85 0a                 a3 = s0 if a1 == 0
 16965: 82 18 28                 a1 = u64 [sp + 0x28]
 16968: 82 15 20                 s0 = u64 [sp + 0x20]
 16971: da 58 04                 t2 = a1 if s0 == 0
 16974: 82 15 58                 s0 = u64 [sp + 0x58]
 16977: da 94 05                 s0 = t2 if a2 == 0
 16980: d8 0b 09                 a2 = a4 <u ra
 16983: db 93 07                 a0 = t1 if a2 != 0
 16986: e6 0b 0b                 a4 = minu(a4, ra)
 16989: 82 18 10                 a1 = u64 [sp + 0x10]
 16992: d8 8b 08                 a1 = a4 <u a1
 16995: db 8c 07                 a0 = a5 if a1 != 0
 16998: c8 98 08                 a1 = a1 + a2
 17001: c8 82 09                 a2 = t0 + a1
 17004: 64 73                    t1 = a0
 17006: 64 ab                    a4 = a3
 17008: 82 10 78                 ra = u64 [sp + 0x78]
 17011: 01                       fallthrough
      :                          @1241
 17012: 97 57 04                 a0 = s0 << 0x4
 17015: c8 67 07                 a0 = a0 + s1
 17018: 82 78 08                 a1 = u64 [a0 + 0x8]
 17021: 97 b7 04                 a0 = a4 << 0x4
 17024: c8 67 07                 a0 = a0 + s1
 17027: 82 77 08                 a0 = u64 [a0 + 0x8]
 17030: ae 78 0c                 jump @1243 if a1 >=u a0
      :                          @1242
 17033: 95 99 01                 a2 = a2 + 0x1
 17036: 64 8c                    a5 = a1
 17038: 64 ba                    a3 = a4
 17040: 28 0b                    jump @1244
      :                          @1243
 17042: 64 7c                    a5 = a0
 17044: 64 5a                    a3 = s0
 17046: 64 b5                    s0 = a4
 17048: 64 87                    a0 = a1
 17050: 01                       fallthrough
      :                          @1244
 17051: 97 38 04                 a1 = t1 << 0x4
 17054: c8 68 08                 a1 = a1 + s1
 17057: 82 8b 08                 a4 = u64 [a1 + 0x8]
 17060: d8 7b 08                 a1 = a4 <u a0
 17063: e6 7b 07                 a0 = minu(a4, a0)
 17066: c8 89 09                 a2 = a2 + a1
 17069: ae c7 09                 jump @1247 if a0 >=u a5
      :                          @1245
 17072: 55 19 0b 1a              jump @1249 if a2 >=u 11
      :                          @1246
 17076: 28 5a                    jump @1252
      :                          @1247
 17078: da 8a 03                 t1 = a3 if a1 == 0
 17081: 64 35                    s0 = t1
 17083: 88 97 01                 a0 = a2 <u 0x1
 17086: 82 18 68                 a1 = u64 [sp + 0x68]
 17089: d2 87 07                 a0 = a0 & a1
 17092: 51 07 4a                 jump @1252 if a0 == 0
      :                          @1248
 17095: 28 40 01                 jump @1270
      :                          @1249
 17098: 98 07 01                 a0 = ra >> 0x1
 17101: 95 68 08                 a1 = s1 + 0x8
 17104: 97 09 04                 a2 = ra << 0x4
 17107: c8 69 09                 a2 = a2 + s1
 17110: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 17113: 01                       fallthrough
      :                          @1250
 17114: 82 9a f8                 a3 = u64 [a2 + 0xfffffffffffffff8]
 17117: 82 9b                    a4 = u64 [a2]
 17119: 82 8c f8                 a5 = u64 [a1 + 0xfffffffffffffff8]
 17122: 82 86                    s1 = u64 [a1]
 17124: 7b 8a f8                 u64 [a1 + 0xfffffffffffffff8] = a3
 17127: 7b 8b                    u64 [a1] = a4
 17129: 7b 9c f8                 u64 [a2 + 0xfffffffffffffff8] = a5
 17132: 7b 96                    u64 [a2] = s1
 17134: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 17137: 95 88 10                 a1 = a1 + 0x10
 17140: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 17143: 52 07 e3                 jump @1250 if a0 != 0
      :                          @1251
 17146: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
 17149: c8 70 05                 s0 = ra + a0
 17152: 82 16 80 00              s1 = u64 [sp + 0x80]
 17156: 82 18 68                 a1 = u64 [sp + 0x68]
 17159: 84 87 01                 a0 = a1 & 0x1
 17162: 52 07 fd 00              jump @1270 if a0 != 0
      :                          @1252
 17166: 97 57 04                 a0 = s0 << 0x4
 17169: 82 18 48                 a1 = u64 [sp + 0x48]
 17172: 51 08 07 01              jump @1273 if a1 == 0
      :                          @1253
 17176: ae 05 a8 04              jump @1324 if s0 >=u ra
      :                          @1254
 17180: c8 76 08                 a1 = s1 + a0
 17183: 82 19 48                 a2 = u64 [sp + 0x48]
 17186: 82 99 08                 a2 = u64 [a2 + 0x8]
 17189: 82 8a 08                 a3 = u64 [a1 + 0x8]
 17192: ac a9 f7 00              jump @1274 if a2 <u a3
      :                          @1255
 17196: 82 69 08                 a2 = u64 [s1 + 0x8]
 17199: 82 6a                    a3 = u64 [s1]
 17201: 33 07                    a0 = 0
 17203: 7b 19 10 01              u64 [sp + 0x110] = a2
 17207: 7b 1a 08 01              u64 [sp + 0x108] = a3
 17211: 82 89                    a2 = u64 [a1]
 17213: 82 8a 08                 a3 = u64 [a1 + 0x8]
 17216: 82 1b 10 01              a4 = u64 [sp + 0x110]
 17220: 82 1c 08 01              a5 = u64 [sp + 0x108]
 17224: 7b 69                    u64 [s1] = a2
 17226: 7b 6a 08                 u64 [s1 + 0x8] = a3
 17229: 7b 8b 08                 u64 [a1 + 0x8] = a4
 17232: 7b 8c                    u64 [a1] = a5
 17234: 82 62                    t0 = u64 [s1]
 17236: 82 68 08                 a1 = u64 [s1 + 0x8]
 17239: 95 64 10                 t2 = s1 + 0x10
 17242: 95 0b ff                 a4 = ra + 0xffffffffffffffff
 17245: 95 63 18                 t1 = s1 + 0x18
 17248: 54 0b 22                 jump @1260 if a4 <=u 0
      :                          @1256
 17251: 97 7a 04                 a3 = a0 << 0x4
 17254: c8 3a 0a                 a3 = a3 + t1
 17257: 01                       fallthrough
      :                          @1257
 17258: 82 a9                    a2 = u64 [a3]
 17260: ac 98 16                 jump @1260 if a1 <u a2
      :                          @1258
 17263: 95 77 01                 a0 = a0 + 0x1
 17266: 95 aa 10                 a3 = a3 + 0x10
 17269: ab 7b f5                 jump @1257 if a4 != a0
      :                          @1259
 17272: 64 b7                    a0 = a4
 17274: 97 ba 04                 a3 = a4 << 0x4
 17277: c8 4a 0a                 a3 = a3 + t2
 17280: 28 09                    jump @1261
      :                          @1260
 17282: 97 ba 04                 a3 = a4 << 0x4
 17285: c8 4a 0a                 a3 = a3 + t2
 17288: 01                       fallthrough
      :                          @1261
 17289: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 17292: ae b7 45                 jump @1265 if a0 >=u a4
      :                          @1262
 17295: 82 a9 f8                 a2 = u64 [a3 + 0xfffffffffffffff8]
 17298: 95 aa f0                 a3 = a3 + 0xfffffffffffffff0
 17301: ac 98 f4                 jump @1261 if a1 <u a2
      :                          @1263
 17304: 97 79 04                 a2 = a0 << 0x4
 17307: c8 49 09                 a2 = a2 + t2
 17310: 82 9c 08                 a5 = u64 [a2 + 0x8]
 17313: 82 96                    s1 = u64 [a2]
 17315: 7b 1c 10 01              u64 [sp + 0x110] = a5
 17319: 7b 16 08 01              u64 [sp + 0x108] = s1
 17323: 82 a0                    ra = u64 [a3]
 17325: 82 a6 08                 s1 = u64 [a3 + 0x8]
 17328: 82 15 10 01              s0 = u64 [sp + 0x110]
 17332: 82 1c 08 01              a5 = u64 [sp + 0x108]
 17336: 7b 90                    u64 [a2] = ra
 17338: 82 10 78                 ra = u64 [sp + 0x78]
 17341: 7b 96 08                 u64 [a2 + 0x8] = s1
 17344: 82 16 80 00              s1 = u64 [sp + 0x80]
 17348: 7b a5 08                 u64 [a3 + 0x8] = s0
 17351: 7b ac                    u64 [a3] = a5
 17353: 95 77 01                 a0 = a0 + 0x1
 17356: ac b7 97                 jump @1256 if a0 <u a4
      :                          @1264
 17359: 28 b3                    jump @1260
      :                          @1265
 17361: 95 77 01                 a0 = a0 + 0x1
 17364: 7b 62                    u64 [s1] = t0
 17366: 7b 68 08                 u64 [s1 + 0x8] = a1
 17369: ac 70 ea 03              jump @1327 if ra <u a0
      :                          @1266
 17373: c9 70 00                 ra = ra - a0
 17376: 97 77 04                 a0 = a0 << 0x4
 17379: c8 76 06                 s1 = s1 + a0
 17382: 55 10 15 36 fd           jump @1227 if ra >=u 21
      :                          @1267
 17387: 28 f3 fc                 jump @1222
      :                          @1268
 17390: 64 67                    a0 = s1
 17392: 64 08                    a1 = ra
 17394: 50 20 84 01 58 d5        ra = 388, jump @455
      :                          @1269 [@dyn 194]
 17400: 82 10 78                 ra = u64 [sp + 0x78]
 17403: 82 17 40                 a0 = u64 [sp + 0x40]
 17406: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 17409: 7b 17 40                 u64 [sp + 0x40] = a0
 17412: 28 2c fd                 jump @1229
      :                          @1270
 17415: 64 67                    a0 = s1
 17417: 64 08                    a1 = ra
 17419: 50 20 86 01 31 d7        ra = 390, jump @475
      :                          @1271 [@dyn 195]
 17425: 82 10 78                 ra = u64 [sp + 0x78]
 17428: 51 07 fa fe              jump @1252 if a0 == 0
      :                          @1272
 17432: 28 d9 fc                 jump @1224
      :                          @1273
 17435: 82 1c                    a5 = u64 [sp]
 17437: 28 08                    jump @1275
      :                          @1274
 17439: 64 6c                    a5 = s1
 17441: 7b 10 08                 u64 [sp + 0x8] = ra
 17444: 01                       fallthrough
      :                          @1275
 17445: 82 18 08                 a1 = u64 [sp + 0x8]
 17448: ae 85 99 03              jump @1325 if s0 >=u a1
      :                          @1276
 17452: 82 c8 08                 a1 = u64 [a5 + 0x8]
 17455: 82 c9                    a2 = u64 [a5]
 17457: 33 05                    s0 = 0
 17459: c8 c7 07                 a0 = a0 + a5
 17462: 7b 18 10 01              u64 [sp + 0x110] = a1
 17466: 7b 19 08 01              u64 [sp + 0x108] = a2
 17470: 82 78                    a1 = u64 [a0]
 17472: 82 79 08                 a2 = u64 [a0 + 0x8]
 17475: 82 1a 10 01              a3 = u64 [sp + 0x110]
 17479: 82 1b 08 01              a4 = u64 [sp + 0x108]
 17483: 7b c8                    u64 [a5] = a1
 17485: 7b c9 08                 u64 [a5 + 0x8] = a2
 17488: 7b 7a 08                 u64 [a0 + 0x8] = a3
 17491: 7b 7b                    u64 [a0] = a4
 17493: 82 c7                    a0 = u64 [a5]
 17495: 7b 17 30                 u64 [sp + 0x30] = a0
 17498: 82 c2 08                 t0 = u64 [a5 + 0x8]
 17501: 95 ca 10                 a3 = a5 + 0x10
 17504: 82 18 08                 a1 = u64 [sp + 0x8]
 17507: 95 86 ff                 s1 = a1 + 0xffffffffffffffff
 17510: 7b 1c                    u64 [sp] = a5
 17512: 95 c9 18                 a2 = a5 + 0x18
 17515: 01                       fallthrough
      :                          @1277
 17516: 82 9b                    a4 = u64 [a2]
 17518: ae 2b 0f                 jump @1280 if a4 >=u t0
      :                          @1278
 17521: 95 55 01                 s0 = s0 + 0x1
 17524: 95 99 10                 a2 = a2 + 0x10
 17527: ab 56 f5                 jump @1277 if s1 != s0
      :                          @1279
 17530: 64 65                    s0 = s1
 17532: 01                       fallthrough
      :                          @1280
 17533: 82 19 08                 a2 = u64 [sp + 0x8]
 17536: 97 99 04                 a2 = a2 << 0x4
 17539: 82 17                    a0 = u64 [sp]
 17541: c8 79 09                 a2 = a2 + a0
 17544: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 17547: 01                       fallthrough
      :                          @1281
 17548: 64 68                    a1 = s1
 17550: ae 65 0e                 jump @1283 if s0 >=u s1
      :                          @1282
 17553: 82 9b                    a4 = u64 [a2]
 17555: 95 86 ff                 s1 = a1 + 0xffffffffffffffff
 17558: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 17561: ae 2b f3                 jump @1281 if a4 >=u t0
      :                          @1283
 17564: ac 58 28 03              jump @1328 if a1 <u s0
      :                          @1284
 17568: 33 0c                    a5 = 0
 17570: 33 09                    a2 = 0
 17572: 33 06                    s1 = 0
 17574: 33 03                    t1 = 0
 17576: 7b 15 38                 u64 [sp + 0x38] = s0
 17579: 97 5b 04                 a4 = s0 << 0x4
 17582: c8 ba 07                 a0 = a3 + a4
 17585: 7b 18 20                 u64 [sp + 0x20] = a1
 17588: 97 8b 04                 a4 = a1 << 0x4
 17591: c8 ba 04                 t2 = a3 + a4
 17594: 33 08 80 00              a1 = 0x80
 17598: 7b 17 28                 u64 [sp + 0x28] = a0
 17601: 64 75                    s0 = a0
 17603: 33 00 80 00              ra = 0x80
 17607: 7b 12 50                 u64 [sp + 0x50] = t0
 17610: 28 30                    jump @1287
      :                          @1285
 17612: 82 15 78                 s0 = u64 [sp + 0x78]
 17615: 01                       fallthrough
      :                          @1286
 17616: d3 9c 07                 a0 = a5 ^ a2
 17619: 82 18 70                 a1 = u64 [sp + 0x70]
 17622: 64 8a                    a3 = a1
 17624: 94 7a                    a3 = 0 if a0 != 0
 17626: 97 aa 04                 a3 = a3 << 0x4
 17629: c8 a5 05                 s0 = s0 + a3
 17632: d3 36 07                 a0 = s1 ^ t1
 17635: 82 10 68                 ra = u64 [sp + 0x68]
 17638: 9a 0a                    a3 = -ra
 17640: 94 7a                    a3 = 0 if a0 != 0
 17642: 97 aa 04                 a3 = a3 << 0x4
 17645: c8 a4 04                 t2 = t2 + a3
 17648: 82 1a 80 00              a3 = u64 [sp + 0x80]
 17652: 53 2a 01 01 67 01        jump @1308 if a3 <u 257
      :                          @1287
 17658: 7b 15 78                 u64 [sp + 0x78] = s0
 17661: c9 54 05                 s0 = t2 - s0
 17664: 98 5a 04                 a3 = s0 >> 0x4
 17667: 7b 1a 80 00              u64 [sp + 0x80] = a3
 17671: 55 2a 01 01 29           jump @1290 if a3 >=u 257
      :                          @1288
 17676: 64 07                    a0 = ra
 17678: d8 9c 00                 ra = a5 <u a2
 17681: d8 36 0b                 a4 = s1 <u t1
 17684: d4 b0 02                 t0 = ra | a4
 17687: 51 02 1e                 jump @1292 if t0 == 0
      :                          @1289
 17690: 82 1a 80 00              a3 = u64 [sp + 0x80]
 17694: 95 ab 80                 a4 = a3 + 0xffffffffffffff80
 17697: db 0b 07                 a0 = a4 if ra != 0
 17700: da 2a 0b                 a4 = a3 if t0 == 0
 17703: da 0b 08                 a1 = a4 if ra == 0
 17706: 64 70                    ra = a0
 17708: 82 12 50                 t0 = u64 [sp + 0x50]
 17711: 01                       fallthrough
      :                          @1290
 17712: ab 9c 3f                 jump @1296 if a5 != a2
      :                          @1291
 17715: 28 12                    jump @1293
      :                          @1292
 17717: 98 58 05                 a1 = s0 >> 0x5
 17720: 82 17 80 00              a0 = u64 [sp + 0x80]
 17724: c9 87 00                 ra = a0 - a1
 17727: 82 12 50                 t0 = u64 [sp + 0x50]
 17730: ab 9c 2d                 jump @1296 if a5 != a2
      :                          @1293
 17733: 51 08 55                 jump @1301 if a1 == 0
      :                          @1294
 17736: 33 05                    s0 = 0
 17738: 95 1c 88 00              a5 = sp + 0x88
 17742: 82 1b 78                 a4 = u64 [sp + 0x78]
 17745: 95 19 88 00              a2 = sp + 0x88
 17749: 01                       fallthrough
      :                          @1295
 17750: 82 b7 08                 a0 = u64 [a4 + 0x8]
 17753: 78 95                    u8 [a2] = s0
 17755: 95 5a 01                 a3 = s0 + 0x1
 17758: d8 27 07                 a0 = a0 <u t0
 17761: 85 77 01                 a0 = a0 ^ 0x1
 17764: c8 79 09                 a2 = a2 + a0
 17767: 95 bb 10                 a4 = a4 + 0x10
 17770: 64 a5                    s0 = a3
 17772: ab a8 ea                 jump @1295 if a1 != a3
      :                          @1296
 17775: ab 36 41                 jump @1304 if s1 != t1
      :                          @1297
 17778: 51 00 35                 jump @1303 if ra == 0
      :                          @1298
 17781: 33 05                    s0 = 0
 17783: 95 4b f8                 a4 = t2 + 0xfffffffffffffff8
 17786: 95 16 08 01              s1 = sp + 0x108
 17790: 95 13 08 01              t1 = sp + 0x108
 17794: 01                       fallthrough
      :                          @1299
 17795: 82 b7                    a0 = u64 [a4]
 17797: 78 35                    u8 [t1] = s0
 17799: 95 5a 01                 a3 = s0 + 0x1
 17802: d8 27 07                 a0 = a0 <u t0
 17805: c8 73 03                 t1 = t1 + a0
 17808: 95 bb f0                 a4 = a4 + 0xfffffffffffffff0
 17811: 64 a5                    s0 = a3
 17813: ab a0 ee                 jump @1299 if ra != a3
      :                          @1300
 17816: 28 18                    jump @1304
      :                          @1301
 17818: 95 1c 88 00              a5 = sp + 0x88
 17822: 95 19 88 00              a2 = sp + 0x88
 17826: ab 36 0e                 jump @1304 if s1 != t1
      :                          @1302
 17829: 28 cd                    jump @1297
      :                          @1303
 17831: 95 16 08 01              s1 = sp + 0x108
 17835: 95 13 08 01              t1 = sp + 0x108
 17839: 01                       fallthrough
      :                          @1304
 17840: 7b 10 68                 u64 [sp + 0x68] = ra
 17843: 7b 18 70                 u64 [sp + 0x70] = a1
 17846: c9 c9 07                 a0 = a2 - a5
 17849: c9 63 0a                 a3 = t1 - s1
 17852: e6 a7 00                 ra = minu(a0, a3)
 17855: 51 00 0d ff              jump @1285 if ra == 0
      :                          @1305
 17859: 7c 62                    t0 = u8 [s1]
 17861: 7c c7                    a0 = u8 [a5]
 17863: 85 2b ff                 a4 = t0 ^ 0xffffffffffffffff
 17866: 97 ba 04                 a3 = a4 << 0x4
 17869: c8 4a 0a                 a3 = a3 + t2
 17872: 82 a8                    a1 = u64 [a3]
 17874: 7b 18 58                 u64 [sp + 0x58] = a1
 17877: 97 77 04                 a0 = a0 << 0x4
 17880: 82 18 78                 a1 = u64 [sp + 0x78]
 17883: c8 87 07                 a0 = a0 + a1
 17886: 82 75                    s0 = u64 [a0]
 17888: 7b 15 60                 u64 [sp + 0x60] = s0
 17891: 82 15 58                 s0 = u64 [sp + 0x58]
 17894: 7b 75                    u64 [a0] = s0
 17896: 82 aa 08                 a3 = u64 [a3 + 0x8]
 17899: 82 75 08                 s0 = u64 [a0 + 0x8]
 17902: 7b 15 58                 u64 [sp + 0x58] = s0
 17905: 95 00 ff                 ra = ra + 0xffffffffffffffff
 17908: 7b 7a 08                 u64 [a0 + 0x8] = a3
 17911: 51 00 45                 jump @1307 if ra == 0
      :                          @1306
 17914: 7c c7 01                 a0 = u8 [a5 + 0x1]
 17917: 97 77 04                 a0 = a0 << 0x4
 17920: c8 87 07                 a0 = a0 + a1
 17923: 85 2a ff                 a3 = t0 ^ 0xffffffffffffffff
 17926: 82 7b 08                 a4 = u64 [a0 + 0x8]
 17929: 86 aa 00 ff              a3 = a3 | 0xffffffffffffff00
 17933: 97 aa 04                 a3 = a3 << 0x4
 17936: c8 4a 0a                 a3 = a3 + t2
 17939: 7b ab 08                 u64 [a3 + 0x8] = a4
 17942: 82 7b                    a4 = u64 [a0]
 17944: 7b ab                    u64 [a3] = a4
 17946: 7c 62 01                 t0 = u8 [s1 + 0x1]
 17949: 85 2b ff                 a4 = t0 ^ 0xffffffffffffffff
 17952: 97 ba 04                 a3 = a4 << 0x4
 17955: c8 4a 0a                 a3 = a3 + t2
 17958: 82 a5 08                 s0 = u64 [a3 + 0x8]
 17961: 7b 75 08                 u64 [a0 + 0x8] = s0
 17964: 82 aa                    a3 = u64 [a3]
 17966: 95 cc 01                 a5 = a5 + 0x1
 17969: 95 66 01                 s1 = s1 + 0x1
 17972: 95 00 ff                 ra = ra + 0xffffffffffffffff
 17975: 7b 7a                    u64 [a0] = a3
 17977: 52 00 c1                 jump @1306 if ra != 0
      :                          @1307
 17980: 97 bb 04                 a4 = a4 << 0x4
 17983: c8 4b 0b                 a4 = a4 + t2
 17986: 82 17 60                 a0 = u64 [sp + 0x60]
 17989: 7b b7                    u64 [a4] = a0
 17991: 82 17 58                 a0 = u64 [sp + 0x58]
 17994: 7b b7 08                 u64 [a4 + 0x8] = a0
 17997: 95 cc 01                 a5 = a5 + 0x1
 18000: 95 66 01                 s1 = s1 + 0x1
 18003: 82 12 50                 t0 = u64 [sp + 0x50]
 18006: 64 85                    s0 = a1
 18008: 28 78 fe                 jump @1286
      :                          @1308
 18011: ae 9c 45                 jump @1312 if a5 >=u a2
      :                          @1309
 18014: 82 18 08                 a1 = u64 [sp + 0x8]
 18017: 01                       fallthrough
      :                          @1310
 18018: 7c 97 ff                 a0 = u8 [a2 + 0xffffffffffffffff]
 18021: 97 77 04                 a0 = a0 << 0x4
 18024: c8 57 07                 a0 = a0 + s0
 18027: 82 7b 08                 a4 = u64 [a0 + 0x8]
 18030: 82 7a                    a3 = u64 [a0]
 18032: 95 96 ff                 s1 = a2 + 0xffffffffffffffff
 18035: 82 49 f0                 a2 = u64 [t2 + 0xfffffffffffffff0]
 18038: 7b 1b 90 01              u64 [sp + 0x190] = a4
 18042: 7b 1a 88 01              u64 [sp + 0x188] = a3
 18046: 82 4b f8                 a4 = u64 [t2 + 0xfffffffffffffff8]
 18049: 7b 79                    u64 [a0] = a2
 18051: 82 19 90 01              a2 = u64 [sp + 0x190]
 18055: 82 1a 88 01              a3 = u64 [sp + 0x188]
 18059: 7b 7b 08                 u64 [a0 + 0x8] = a4
 18062: 95 4b f0                 a4 = t2 + 0xfffffffffffffff0
 18065: 7b 49 f8                 u64 [t2 + 0xfffffffffffffff8] = a2
 18068: 7b 4a f0                 u64 [t2 + 0xfffffffffffffff0] = a3
 18071: 64 b4                    t2 = a4
 18073: 64 69                    a2 = s1
 18075: ac 6c c7                 jump @1310 if a5 <u s1
      :                          @1311
 18078: 28 45                    jump @1314
      :                          @1312
 18080: 82 18 08                 a1 = u64 [sp + 0x8]
 18083: 64 5b                    a4 = s0
 18085: ae 36 3e                 jump @1314 if s1 >=u t1
      :                          @1313
 18088: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
 18091: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 18094: 97 77 04                 a0 = a0 << 0x4
 18097: 82 b9 08                 a2 = u64 [a4 + 0x8]
 18100: 82 ba                    a3 = u64 [a4]
 18102: c8 47 07                 a0 = a0 + t2
 18105: 82 7c                    a5 = u64 [a0]
 18107: 7b 19 90 01              u64 [sp + 0x190] = a2
 18111: 7b 1a 88 01              u64 [sp + 0x188] = a3
 18115: 82 79 08                 a2 = u64 [a0 + 0x8]
 18118: 7b bc                    u64 [a4] = a5
 18120: 82 1a 90 01              a3 = u64 [sp + 0x190]
 18124: 82 1c 88 01              a5 = u64 [sp + 0x188]
 18128: 7b b9 08                 u64 [a4 + 0x8] = a2
 18131: 95 39 ff                 a2 = t1 + 0xffffffffffffffff
 18134: 7b 7a 08                 u64 [a0 + 0x8] = a3
 18137: 7b 7c                    u64 [a0] = a5
 18139: 95 bb 10                 a4 = a4 + 0x10
 18142: 64 93                    t1 = a2
 18144: ac 96 c8                 jump @1313 if s1 <u a2
      :                          @1314
 18147: 82 17 28                 a0 = u64 [sp + 0x28]
 18150: c9 7b 07                 a0 = a4 - a0
 18153: 98 77 04                 a0 = a0 >> 0x4
 18156: 82 19 38                 a2 = u64 [sp + 0x38]
 18159: c8 97 0c                 a5 = a0 + a2
 18162: 82 15                    s0 = u64 [sp]
 18164: 82 17 30                 a0 = u64 [sp + 0x30]
 18167: 7b 57                    u64 [s0] = a0
 18169: 7b 52 08                 u64 [s0 + 0x8] = t0
 18172: ae 8c c6 00              jump @1326 if a5 >=u a1
      :                          @1315
 18176: 82 57 08                 a0 = u64 [s0 + 0x8]
 18179: 82 59                    a2 = u64 [s0]
 18181: 97 c6 04                 s1 = a5 << 0x4
 18184: c8 56 06                 s1 = s1 + s0
 18187: 7b 17 10 01              u64 [sp + 0x110] = a0
 18191: 7b 19 08 01              u64 [sp + 0x108] = a2
 18195: 82 67                    a0 = u64 [s1]
 18197: 82 6b 08                 a4 = u64 [s1 + 0x8]
 18200: 82 19 10 01              a2 = u64 [sp + 0x110]
 18204: 82 1a 08 01              a3 = u64 [sp + 0x108]
 18208: 7b 57                    u64 [s0] = a0
 18210: 7b 5b 08                 u64 [s0 + 0x8] = a4
 18213: 7b 69 08                 u64 [s1 + 0x8] = a2
 18216: 7b 6a                    u64 [s1] = a3
 18218: c9 c8 08                 a1 = a1 - a5
 18221: 7b 18 80 00              u64 [sp + 0x80] = a1
 18225: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
 18228: 95 67 10                 a0 = s1 + 0x10
 18231: ae bc 28                 jump @1318 if a5 >=u a4
      :                          @1316
 18234: 7b 17 70                 u64 [sp + 0x70] = a0
 18237: 64 57                    a0 = s0
 18239: 64 c8                    a1 = a5
 18241: 82 19 48                 a2 = u64 [sp + 0x48]
 18244: 82 1a 40                 a3 = u64 [sp + 0x40]
 18247: 7b 1b 78                 u64 [sp + 0x78] = a4
 18250: 64 c5                    s0 = a5
 18252: 50 20 88 01 6d f9        ra = 392, jump @1220
      :                          @1317 [@dyn 196]
 18258: 64 59                    a2 = s0
 18260: 82 10 78                 ra = u64 [sp + 0x78]
 18263: 7b 16 48                 u64 [sp + 0x48] = s1
 18266: 82 15 70                 s0 = u64 [sp + 0x70]
 18269: 28 16                    jump @1320
      :                          @1318
 18271: 64 b8                    a1 = a4
 18273: 64 69                    a2 = s1
 18275: 82 1a 40                 a3 = u64 [sp + 0x40]
 18278: 64 c6                    s1 = a5
 18280: 50 20 8a 01 51 f9        ra = 394, jump @1220
      :                          @1319 [@dyn 197]
 18286: 64 69                    a2 = s1
 18288: 64 60                    ra = s1
 18290: 01                       fallthrough
      :                          @1320
 18291: 82 17 38                 a0 = u64 [sp + 0x38]
 18294: 82 18 20                 a1 = u64 [sp + 0x20]
 18297: d8 87 07                 a0 = a0 <u a1
 18300: 85 77 01                 a0 = a0 ^ 0x1
 18303: 82 18 80 00              a1 = u64 [sp + 0x80]
 18307: e6 89 08                 a1 = minu(a2, a1)
 18310: 82 19 08                 a2 = u64 [sp + 0x8]
 18313: 98 99 03                 a2 = a2 >> 0x3
 18316: d8 98 08                 a1 = a1 <u a2
 18319: 85 88 01                 a1 = a1 ^ 0x1
 18322: 7b 18 70                 u64 [sp + 0x70] = a1
 18325: 7b 10 08                 u64 [sp + 0x8] = ra
 18328: 7b 15                    u64 [sp] = s0
 18330: 64 56                    s1 = s0
 18332: 33 08 15                 a1 = 0x15
 18335: ae 80 71 f9              jump @1226 if ra >=u a1
      :                          @1321
 18339: 28 3b f9                 jump @1222
      :                          @1322
 18342: 64 67                    a0 = s1
 18344: 64 08                    a1 = ra
 18346: 33 00 8c 01              ra = 0x18c
 18350: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 18353: 7b 15 18                 u64 [sp + 0x18] = s0
 18356: 7b 16 10                 u64 [sp + 0x10] = s1
 18359: 98 82 01                 t0 = a1 >> 0x1
 18362: 28 64 02                 jump @1387
      :                          @1323 [@dyn 198]
 18365: 28 34 f9                 jump @1224
      :                          @1324
 18368: 00                       trap
      :                          @1325
 18369: 00                       trap
      :                          @1326
 18370: 00                       trap
      :                          @1327
 18371: 00                       trap
      :                          @1328
 18372: 00                       trap
      :                          @1329
 18373: 51 02 a0 00              jump @1340 if t0 == 0
      :                          @1330
 18377: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 18380: 97 29 01                 a2 = t0 << 0x1
 18383: 95 9c 01                 a5 = a2 + 0x1
 18386: ae 8c f3                 jump @1329 if a5 >=u a1
      :                          @1331
 18389: 64 2a                    a3 = t0
 18391: 01                       fallthrough
      :                          @1332
 18392: 95 99 02                 a2 = a2 + 0x2
 18395: ae 89 2e                 jump @1335 if a2 >=u a1
      :                          @1333
 18398: 97 cb 04                 a4 = a5 << 0x4
 18401: c8 b7 03                 t1 = a0 + a4
 18404: 97 99 04                 a2 = a2 << 0x4
 18407: c8 79 09                 a2 = a2 + a0
 18410: 82 34                    t2 = u64 [t1]
 18412: 82 9b                    a4 = u64 [a2]
 18414: 82 33 08                 t1 = u64 [t1 + 0x8]
 18417: 82 99 08                 a2 = u64 [a2 + 0x8]
 18420: d9 b4 05                 s0 = t2 <s a4
 18423: d3 b4 0b                 a4 = t2 ^ a4
 18426: d9 93 09                 a2 = t1 <s a2
 18429: db b5 09                 a2 = s0 if a4 != 0
 18432: c8 9c 04                 t2 = a5 + a2
 18435: ac 8a 0c                 jump @1336 if a3 <u a1
      :                          @1334
 18438: 28 37 01                 jump @1355
      :                          @1335
 18441: 64 c4                    t2 = a5
 18443: ae 8a 32 01              jump @1355 if a3 >=u a1
      :                          @1336
 18447: ae 84 2f 01              jump @1356 if t2 >=u a1
      :                          @1337
 18451: 97 aa 04                 a3 = a3 << 0x4
 18454: c8 a7 0c                 a5 = a0 + a3
 18457: 97 4a 04                 a3 = t2 << 0x4
 18460: c8 7a 0a                 a3 = a3 + a0
 18463: 82 c9                    a2 = u64 [a5]
 18465: 82 a5                    s0 = u64 [a3]
 18467: 82 c3 08                 t1 = u64 [a5 + 0x8]
 18470: 82 ab 08                 a4 = u64 [a3 + 0x8]
 18473: d9 59 06                 s1 = a2 <s s0
 18476: d3 59 09                 a2 = a2 ^ s0
 18479: d9 b3 0b                 a4 = t1 <s a4
 18482: db 96 0b                 a4 = s1 if a2 != 0
 18485: 51 0b 90                 jump @1329 if a4 == 0
      :                          @1338
 18488: 82 c9 08                 a2 = u64 [a5 + 0x8]
 18491: 82 cb                    a4 = u64 [a5]
 18493: 7b 19 08                 u64 [sp + 0x8] = a2
 18496: 82 a9                    a2 = u64 [a3]
 18498: 82 a6 08                 s1 = u64 [a3 + 0x8]
 18501: 7b 1b                    u64 [sp] = a4
 18503: 82 1b 08                 a4 = u64 [sp + 0x8]
 18506: 7b c9                    u64 [a5] = a2
 18508: 7b c6 08                 u64 [a5 + 0x8] = s1
 18511: 82 16                    s1 = u64 [sp]
 18513: 7b ab 08                 u64 [a3 + 0x8] = a4
 18516: 97 49 01                 a2 = t2 << 0x1
 18519: 95 9c 01                 a5 = a2 + 0x1
 18522: 7b a6                    u64 [a3] = s1
 18524: 64 4a                    a3 = t2
 18526: ac 8c 7a ff              jump @1332 if a5 <u a1
      :                          @1339
 18530: 28 63 ff                 jump @1329
      :                          @1340
 18533: 33 02 02                 t0 = 0x2
 18536: 64 83                    t1 = a1
 18538: 01                       fallthrough
      :                          @1341
 18539: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 18542: ae 83 d1 00              jump @1357 if t1 >=u a1
      :                          @1342
 18546: 82 79 08                 a2 = u64 [a0 + 0x8]
 18549: 82 7a                    a3 = u64 [a0]
 18551: 97 3b 04                 a4 = t1 << 0x4
 18554: c8 7b 0b                 a4 = a4 + a0
 18557: 7b 19 08                 u64 [sp + 0x8] = a2
 18560: 7b 1a                    u64 [sp] = a3
 18562: 82 b9                    a2 = u64 [a4]
 18564: 82 ba 08                 a3 = u64 [a4 + 0x8]
 18567: 82 1c 08                 a5 = u64 [sp + 0x8]
 18570: 82 16                    s1 = u64 [sp]
 18572: 7b 79                    u64 [a0] = a2
 18574: 7b 7a 08                 u64 [a0 + 0x8] = a3
 18577: 7b bc 08                 u64 [a4 + 0x8] = a5
 18580: 7b b6                    u64 [a4] = s1
 18582: ac 23 97 00              jump @1352 if t1 <u t0
      :                          @1343
 18586: 33 0a                    a3 = 0
 18588: 33 0b                    a4 = 0
 18590: 33 0c 01                 a5 = 0x1
 18593: 01                       fallthrough
      :                          @1344
 18594: 95 aa 02                 a3 = a3 + 0x2
 18597: ae 3a 2d                 jump @1347 if a3 >=u t1
      :                          @1345
 18600: 97 c9 04                 a2 = a5 << 0x4
 18603: c8 79 09                 a2 = a2 + a0
 18606: 97 aa 04                 a3 = a3 << 0x4
 18609: c8 7a 0a                 a3 = a3 + a0
 18612: 82 96                    s1 = u64 [a2]
 18614: 82 a5                    s0 = u64 [a3]
 18616: 82 99 08                 a2 = u64 [a2 + 0x8]
 18619: 82 aa 08                 a3 = u64 [a3 + 0x8]
 18622: d9 56 04                 t2 = s1 <s s0
 18625: d3 65 05                 s0 = s0 ^ s1
 18628: d9 a9 09                 a2 = a2 <s a3
 18631: db 54 09                 a2 = t2 if s0 != 0
 18634: c8 c9 09                 a2 = a2 + a5
 18637: ac 3b 0a                 jump @1348 if a4 <u t1
      :                          @1346
 18640: 28 6b                    jump @1353
      :                          @1347
 18642: 64 c9                    a2 = a5
 18644: ae 3b 67                 jump @1353 if a4 >=u t1
      :                          @1348
 18647: ae 39 65                 jump @1354 if a2 >=u t1
      :                          @1349
 18650: 97 ba 04                 a3 = a4 << 0x4
 18653: c8 7a 0a                 a3 = a3 + a0
 18656: 97 9b 04                 a4 = a2 << 0x4
 18659: c8 7b 0b                 a4 = a4 + a0
 18662: 82 ac                    a5 = u64 [a3]
 18664: 82 b6                    s1 = u64 [a4]
 18666: 82 a4 08                 t2 = u64 [a3 + 0x8]
 18669: 82 b5 08                 s0 = u64 [a4 + 0x8]
 18672: d9 6c 00                 ra = a5 <s s1
 18675: d3 6c 0c                 a5 = a5 ^ s1
 18678: d9 54 06                 s1 = t2 <s s0
 18681: db c0 06                 s1 = ra if a5 != 0
 18684: 51 06 6f ff              jump @1341 if s1 == 0
      :                          @1350
 18688: 82 ac 08                 a5 = u64 [a3 + 0x8]
 18691: 82 a6                    s1 = u64 [a3]
 18693: 7b 1c 08                 u64 [sp + 0x8] = a5
 18696: 82 bc                    a5 = u64 [a4]
 18698: 82 b5 08                 s0 = u64 [a4 + 0x8]
 18701: 7b 16                    u64 [sp] = s1
 18703: 82 16 08                 s1 = u64 [sp + 0x8]
 18706: 7b ac                    u64 [a3] = a5
 18708: 7b a5 08                 u64 [a3 + 0x8] = s0
 18711: 82 15                    s0 = u64 [sp]
 18713: 7b b6 08                 u64 [a4 + 0x8] = s1
 18716: 97 9a 01                 a3 = a2 << 0x1
 18719: 95 ac 01                 a5 = a3 + 0x1
 18722: 7b b5                    u64 [a4] = s0
 18724: 64 9b                    a4 = a2
 18726: ac 3c 7c ff              jump @1344 if a5 <u t1
      :                          @1351
 18730: 28 41 ff                 jump @1341
      :                          @1352
 18733: 82 10 20                 ra = u64 [sp + 0x20]
 18736: 82 15 18                 s0 = u64 [sp + 0x18]
 18739: 82 16 10                 s1 = u64 [sp + 0x10]
 18742: 95 11 28                 sp = sp + 0x28
 18745: 32 00                    ret
      :                          @1353
 18747: 00                       trap
      :                          @1354
 18748: 00                       trap
      :                          @1355
 18749: 00                       trap
      :                          @1356
 18750: 00                       trap
      :                          @1357
 18751: 00                       trap
      :                          @1358
 18752: 51 02 62                 jump @1369 if t0 == 0
      :                          @1359
 18755: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 18758: 97 2a 01                 a3 = t0 << 0x1
 18761: 95 ac 01                 a5 = a3 + 0x1
 18764: ae 8c f4                 jump @1358 if a5 >=u a1
      :                          @1360
 18767: 64 2b                    a4 = t0
 18769: 01                       fallthrough
      :                          @1361
 18770: 95 aa 02                 a3 = a3 + 0x2
 18773: ae 8a 1f                 jump @1364 if a3 >=u a1
      :                          @1362
 18776: 97 c9 03                 a2 = a5 << 0x3
 18779: c8 79 09                 a2 = a2 + a0
 18782: 97 aa 03                 a3 = a3 << 0x3
 18785: c8 7a 0a                 a3 = a3 + a0
 18788: 82 99                    a2 = u64 [a2]
 18790: 82 aa                    a3 = u64 [a3]
 18792: d8 9a 03                 t1 = a3 <u a2
 18795: c8 c3 03                 t1 = t1 + a5
 18798: ac 8b 0c                 jump @1365 if a4 <u a1
      :                          @1363
 18801: 28 a7 00                 jump @1384
      :                          @1364
 18804: 64 c3                    t1 = a5
 18806: ae 8b a2 00              jump @1384 if a4 >=u a1
      :                          @1365
 18810: ae 83 9f 00              jump @1385 if t1 >=u a1
      :                          @1366
 18814: 97 ba 03                 a3 = a4 << 0x3
 18817: c8 7a 0a                 a3 = a3 + a0
 18820: 97 3b 03                 a4 = t1 << 0x3
 18823: c8 7b 0b                 a4 = a4 + a0
 18826: 82 a9                    a2 = u64 [a3]
 18828: 82 bc                    a5 = u64 [a4]
 18830: ae 9c b2                 jump @1358 if a5 >=u a2
      :                          @1367
 18833: 7b ac                    u64 [a3] = a5
 18835: 97 3a 01                 a3 = t1 << 0x1
 18838: 95 ac 01                 a5 = a3 + 0x1
 18841: 7b b9                    u64 [a4] = a2
 18843: 64 3b                    a4 = t1
 18845: ac 8c b5                 jump @1361 if a5 <u a1
      :                          @1368
 18848: 28 a0                    jump @1358
      :                          @1369
 18850: 33 02 02                 t0 = 0x2
 18853: 64 83                    t1 = a1
 18855: 01                       fallthrough
      :                          @1370
 18856: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 18859: ae 83 6e                 jump @1385 if t1 >=u a1
      :                          @1371
 18862: 97 39 03                 a2 = t1 << 0x3
 18865: c8 79 09                 a2 = a2 + a0
 18868: 82 9a                    a3 = u64 [a2]
 18870: 82 7b                    a4 = u64 [a0]
 18872: 7b 7a                    u64 [a0] = a3
 18874: 7b 9b                    u64 [a2] = a4
 18876: ac 23 58                 jump @1381 if t1 <u t0
      :                          @1372
 18879: 33 0a                    a3 = 0
 18881: 33 09                    a2 = 0
 18883: 33 0b 01                 a4 = 0x1
 18886: 01                       fallthrough
      :                          @1373
 18887: 95 aa 02                 a3 = a3 + 0x2
 18890: ae 3a 1e                 jump @1376 if a3 >=u t1
      :                          @1374
 18893: 97 bc 03                 a5 = a4 << 0x3
 18896: c8 7c 0c                 a5 = a5 + a0
 18899: 97 aa 03                 a3 = a3 << 0x3
 18902: c8 7a 0a                 a3 = a3 + a0
 18905: 82 cc                    a5 = u64 [a5]
 18907: 82 aa                    a3 = u64 [a3]
 18909: d8 ca 04                 t2 = a3 <u a5
 18912: c8 b4 04                 t2 = t2 + a4
 18915: ac 39 0a                 jump @1377 if a2 <u t1
      :                          @1375
 18918: 28 30                    jump @1382
      :                          @1376
 18920: 64 b4                    t2 = a4
 18922: ae 39 2c                 jump @1382 if a2 >=u t1
      :                          @1377
 18925: ae 34 2a                 jump @1383 if t2 >=u t1
      :                          @1378
 18928: 97 99 03                 a2 = a2 << 0x3
 18931: c8 97 0a                 a3 = a0 + a2
 18934: 97 49 03                 a2 = t2 << 0x3
 18937: c8 79 09                 a2 = a2 + a0
 18940: 82 ac                    a5 = u64 [a3]
 18942: 82 9b                    a4 = u64 [a2]
 18944: ae cb a8                 jump @1370 if a4 >=u a5
      :                          @1379
 18947: 7b ab                    u64 [a3] = a4
 18949: 97 4a 01                 a3 = t2 << 0x1
 18952: 95 ab 01                 a4 = a3 + 0x1
 18955: 7b 9c                    u64 [a2] = a5
 18957: 64 49                    a2 = t2
 18959: ac 3b b8                 jump @1373 if a4 <u t1
      :                          @1380
 18962: 28 96                    jump @1370
      :                          @1381
 18964: 32 00                    ret
      :                          @1382
 18966: 00                       trap
      :                          @1383
 18967: 00                       trap
      :                          @1384
 18968: 00                       trap
      :                          @1385
 18969: 00                       trap
      :                          @1386
 18970: 51 02 81 00              jump @1397 if t0 == 0
      :                          @1387
 18974: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 18977: 97 29 01                 a2 = t0 << 0x1
 18980: 95 9c 01                 a5 = a2 + 0x1
 18983: ae 8c f3                 jump @1386 if a5 >=u a1
      :                          @1388
 18986: 64 2a                    a3 = t0
 18988: 01                       fallthrough
      :                          @1389
 18989: 95 99 02                 a2 = a2 + 0x2
 18992: ae 89 21                 jump @1392 if a2 >=u a1
      :                          @1390
 18995: 97 cb 04                 a4 = a5 << 0x4
 18998: c8 7b 0b                 a4 = a4 + a0
 19001: 82 bb 08                 a4 = u64 [a4 + 0x8]
 19004: 97 99 04                 a2 = a2 << 0x4
 19007: c8 79 09                 a2 = a2 + a0
 19010: 82 99 08                 a2 = u64 [a2 + 0x8]
 19013: d8 9b 0b                 a4 = a4 <u a2
 19016: c8 cb 0b                 a4 = a4 + a5
 19019: ac 8a 0c                 jump @1393 if a3 <u a1
      :                          @1391
 19022: 28 02 01                 jump @1412
      :                          @1392
 19025: 64 cb                    a4 = a5
 19027: ae 8a fd 00              jump @1412 if a3 >=u a1
      :                          @1393
 19031: ae 8b fa 00              jump @1413 if a4 >=u a1
      :                          @1394
 19035: 97 a9 04                 a2 = a3 << 0x4
 19038: c8 79 09                 a2 = a2 + a0
 19041: 97 ba 04                 a3 = a4 << 0x4
 19044: c8 7a 0a                 a3 = a3 + a0
 19047: 82 93 08                 t1 = u64 [a2 + 0x8]
 19050: 82 ac 08                 a5 = u64 [a3 + 0x8]
 19053: ae c3 ad                 jump @1386 if t1 >=u a5
      :                          @1395
 19056: 82 9c 08                 a5 = u64 [a2 + 0x8]
 19059: 82 93                    t1 = u64 [a2]
 19061: 7b 1c 08                 u64 [sp + 0x8] = a5
 19064: 82 a5                    s0 = u64 [a3]
 19066: 82 a4 08                 t2 = u64 [a3 + 0x8]
 19069: 7b 13                    u64 [sp] = t1
 19071: 82 1c 08                 a5 = u64 [sp + 0x8]
 19074: 7b 95                    u64 [a2] = s0
 19076: 7b 94 08                 u64 [a2 + 0x8] = t2
 19079: 82 15                    s0 = u64 [sp]
 19081: 7b ac 08                 u64 [a3 + 0x8] = a5
 19084: 97 b9 01                 a2 = a4 << 0x1
 19087: 95 9c 01                 a5 = a2 + 0x1
 19090: 7b a5                    u64 [a3] = s0
 19092: 64 ba                    a3 = a4
 19094: ac 8c 97                 jump @1389 if a5 <u a1
      :                          @1396
 19097: 28 81                    jump @1386
      :                          @1397
 19099: 33 02 02                 t0 = 0x2
 19102: 64 83                    t1 = a1
 19104: 01                       fallthrough
      :                          @1398
 19105: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 19108: ae 83 ae 00              jump @1414 if t1 >=u a1
      :                          @1399
 19112: 82 79 08                 a2 = u64 [a0 + 0x8]
 19115: 82 7a                    a3 = u64 [a0]
 19117: 97 3b 04                 a4 = t1 << 0x4
 19120: c8 7b 0b                 a4 = a4 + a0
 19123: 7b 19 08                 u64 [sp + 0x8] = a2
 19126: 7b 1a                    u64 [sp] = a3
 19128: 82 b9                    a2 = u64 [a4]
 19130: 82 ba 08                 a3 = u64 [a4 + 0x8]
 19133: 82 1c 08                 a5 = u64 [sp + 0x8]
 19136: 82 15                    s0 = u64 [sp]
 19138: 7b 79                    u64 [a0] = a2
 19140: 7b 7a 08                 u64 [a0 + 0x8] = a3
 19143: 7b bc 08                 u64 [a4 + 0x8] = a5
 19146: 7b b5                    u64 [a4] = s0
 19148: ac 23 77                 jump @1409 if t1 <u t0
      :                          @1400
 19151: 33 0a                    a3 = 0
 19153: 33 0b                    a4 = 0
 19155: 33 0c 01                 a5 = 0x1
 19158: 01                       fallthrough
      :                          @1401
 19159: 95 aa 02                 a3 = a3 + 0x2
 19162: ae 3a 20                 jump @1404 if a3 >=u t1
      :                          @1402
 19165: 97 c9 04                 a2 = a5 << 0x4
 19168: c8 79 09                 a2 = a2 + a0
 19171: 82 99 08                 a2 = u64 [a2 + 0x8]
 19174: 97 aa 04                 a3 = a3 << 0x4
 19177: c8 7a 0a                 a3 = a3 + a0
 19180: 82 aa 08                 a3 = u64 [a3 + 0x8]
 19183: d8 a9 09                 a2 = a2 <u a3
 19186: c8 c9 09                 a2 = a2 + a5
 19189: ac 3b 0a                 jump @1405 if a4 <u t1
      :                          @1403
 19192: 28 56                    jump @1410
      :                          @1404
 19194: 64 c9                    a2 = a5
 19196: ae 3b 52                 jump @1410 if a4 >=u t1
      :                          @1405
 19199: ae 39 50                 jump @1411 if a2 >=u t1
      :                          @1406
 19202: 97 ba 04                 a3 = a4 << 0x4
 19205: c8 7a 0a                 a3 = a3 + a0
 19208: 97 9b 04                 a4 = a2 << 0x4
 19211: c8 7b 0b                 a4 = a4 + a0
 19214: 82 ac 08                 a5 = u64 [a3 + 0x8]
 19217: 82 b5 08                 s0 = u64 [a4 + 0x8]
 19220: ae 5c 8d                 jump @1398 if a5 >=u s0
      :                          @1407
 19223: 82 ac 08                 a5 = u64 [a3 + 0x8]
 19226: 82 a4                    t2 = u64 [a3]
 19228: 7b 1c 08                 u64 [sp + 0x8] = a5
 19231: 82 b6                    s1 = u64 [a4]
 19233: 82 b5 08                 s0 = u64 [a4 + 0x8]
 19236: 7b 14                    u64 [sp] = t2
 19238: 82 1c 08                 a5 = u64 [sp + 0x8]
 19241: 7b a6                    u64 [a3] = s1
 19243: 7b a5 08                 u64 [a3 + 0x8] = s0
 19246: 82 16                    s1 = u64 [sp]
 19248: 7b bc 08                 u64 [a4 + 0x8] = a5
 19251: 97 9a 01                 a3 = a2 << 0x1
 19254: 95 ac 01                 a5 = a3 + 0x1
 19257: 7b b6                    u64 [a4] = s1
 19259: 64 9b                    a4 = a2
 19261: ac 3c 9a                 jump @1401 if a5 <u t1
      :                          @1408
 19264: 28 61 ff                 jump @1398
      :                          @1409
 19267: 82 15 18                 s0 = u64 [sp + 0x18]
 19270: 82 16 10                 s1 = u64 [sp + 0x10]
 19273: 95 11 20                 sp = sp + 0x20
 19276: 32 00                    ret
      :                          @1410
 19278: 00                       trap
      :                          @1411
 19279: 00                       trap
      :                          @1412
 19280: 00                       trap
      :                          @1413
 19281: 00                       trap
      :                          @1414
 19282: 00                       trap
      :                          @1415
 19283: 51 02 62                 jump @1426 if t0 == 0
      :                          @1416
 19286: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 19289: 97 2a 01                 a3 = t0 << 0x1
 19292: 95 ac 01                 a5 = a3 + 0x1
 19295: ae 8c f4                 jump @1415 if a5 >=u a1
      :                          @1417
 19298: 64 2b                    a4 = t0
 19300: 01                       fallthrough
      :                          @1418
 19301: 95 aa 02                 a3 = a3 + 0x2
 19304: ae 8a 1f                 jump @1421 if a3 >=u a1
      :                          @1419
 19307: 97 c9 03                 a2 = a5 << 0x3
 19310: c8 79 09                 a2 = a2 + a0
 19313: 97 aa 03                 a3 = a3 << 0x3
 19316: c8 7a 0a                 a3 = a3 + a0
 19319: 82 99                    a2 = u64 [a2]
 19321: 82 aa                    a3 = u64 [a3]
 19323: d9 a9 03                 t1 = a2 <s a3
 19326: c8 c3 03                 t1 = t1 + a5
 19329: ac 8b 0c                 jump @1422 if a4 <u a1
      :                          @1420
 19332: 28 a7 00                 jump @1441
      :                          @1421
 19335: 64 c3                    t1 = a5
 19337: ae 8b a2 00              jump @1441 if a4 >=u a1
      :                          @1422
 19341: ae 83 9f 00              jump @1442 if t1 >=u a1
      :                          @1423
 19345: 97 ba 03                 a3 = a4 << 0x3
 19348: c8 7a 0a                 a3 = a3 + a0
 19351: 97 3b 03                 a4 = t1 << 0x3
 19354: c8 7b 0b                 a4 = a4 + a0
 19357: 82 a9                    a2 = u64 [a3]
 19359: 82 bc                    a5 = u64 [a4]
 19361: af c9 b2                 jump @1415 if a2 >=s a5
      :                          @1424
 19364: 7b ac                    u64 [a3] = a5
 19366: 97 3a 01                 a3 = t1 << 0x1
 19369: 95 ac 01                 a5 = a3 + 0x1
 19372: 7b b9                    u64 [a4] = a2
 19374: 64 3b                    a4 = t1
 19376: ac 8c b5                 jump @1418 if a5 <u a1
      :                          @1425
 19379: 28 a0                    jump @1415
      :                          @1426
 19381: 33 02 02                 t0 = 0x2
 19384: 64 83                    t1 = a1
 19386: 01                       fallthrough
      :                          @1427
 19387: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 19390: ae 83 6e                 jump @1442 if t1 >=u a1
      :                          @1428
 19393: 97 39 03                 a2 = t1 << 0x3
 19396: c8 79 09                 a2 = a2 + a0
 19399: 82 9a                    a3 = u64 [a2]
 19401: 82 7b                    a4 = u64 [a0]
 19403: 7b 7a                    u64 [a0] = a3
 19405: 7b 9b                    u64 [a2] = a4
 19407: ac 23 58                 jump @1438 if t1 <u t0
      :                          @1429
 19410: 33 0a                    a3 = 0
 19412: 33 09                    a2 = 0
 19414: 33 0b 01                 a4 = 0x1
 19417: 01                       fallthrough
      :                          @1430
 19418: 95 aa 02                 a3 = a3 + 0x2
 19421: ae 3a 1e                 jump @1433 if a3 >=u t1
      :                          @1431
 19424: 97 bc 03                 a5 = a4 << 0x3
 19427: c8 7c 0c                 a5 = a5 + a0
 19430: 97 aa 03                 a3 = a3 << 0x3
 19433: c8 7a 0a                 a3 = a3 + a0
 19436: 82 cc                    a5 = u64 [a5]
 19438: 82 aa                    a3 = u64 [a3]
 19440: d9 ac 04                 t2 = a5 <s a3
 19443: c8 b4 04                 t2 = t2 + a4
 19446: ac 39 0a                 jump @1434 if a2 <u t1
      :                          @1432
 19449: 28 30                    jump @1439
      :                          @1433
 19451: 64 b4                    t2 = a4
 19453: ae 39 2c                 jump @1439 if a2 >=u t1
      :                          @1434
 19456: ae 34 2a                 jump @1440 if t2 >=u t1
      :                          @1435
 19459: 97 99 03                 a2 = a2 << 0x3
 19462: c8 97 0a                 a3 = a0 + a2
 19465: 97 49 03                 a2 = t2 << 0x3
 19468: c8 79 09                 a2 = a2 + a0
 19471: 82 ac                    a5 = u64 [a3]
 19473: 82 9b                    a4 = u64 [a2]
 19475: af bc a8                 jump @1427 if a5 >=s a4
      :                          @1436
 19478: 7b ab                    u64 [a3] = a4
 19480: 97 4a 01                 a3 = t2 << 0x1
 19483: 95 ab 01                 a4 = a3 + 0x1
 19486: 7b 9c                    u64 [a2] = a5
 19488: 64 49                    a2 = t2
 19490: ac 3b b8                 jump @1430 if a4 <u t1
      :                          @1437
 19493: 28 96                    jump @1427
      :                          @1438
 19495: 32 00                    ret
      :                          @1439
 19497: 00                       trap
      :                          @1440
 19498: 00                       trap
      :                          @1441
 19499: 00                       trap
      :                          @1442
 19500: 00                       trap
      :                          @1443 [@dyn 199]
 19501: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 19504: 7b 10 38                 u64 [sp + 0x38] = ra
 19507: 7b 15 30                 u64 [sp + 0x30] = s0
 19510: 7b 16 28                 u64 [sp + 0x28] = s1
 19513: 64 85                    s0 = a1
 19515: 82 88 28                 a1 = u64 [a1 + 0x28]
 19518: 82 59 20                 a2 = u64 [s0 + 0x20]
 19521: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19524: 64 76                    s1 = a0
 19526: 33 08 40 30 01           a1 = 0x13040
 19531: 64 97                    a0 = a2
 19533: 33 09                    a2 = 0
 19535: b4 a0 02 90 01           ra = 400, jump [a3]
      :                          @1444 [@dyn 200]
 19540: 7b 15 08                 u64 [sp + 0x8] = s0
 19543: 78 17 10                 u8 [sp + 0x10] = a0
 19546: 49 01                    u64 [sp + 0] = 0
 19548: 33 05 01                 s0 = 0x1
 19551: 78 15 11                 u8 [sp + 0x11] = s0
 19554: 7b 16 18                 u64 [sp + 0x18] = s1
 19557: 95 66 08                 s1 = s1 + 0x8
 19560: 7b 16 20                 u64 [sp + 0x20] = s1
 19563: 33 06 48                 s1 = 0x48
 19566: 64 17                    a0 = sp
 19568: 95 18 18                 a1 = sp + 0x18
 19571: 33 09 48                 a2 = 0x48
 19574: 50 20 92 01 14 cc 02     ra = 402, jump @13938
      :                          @1445 [@dyn 201]
 19581: 64 17                    a0 = sp
 19583: 95 18 20                 a1 = sp + 0x20
 19586: 64 69                    a2 = s1
 19588: 50 20 94 01 06 cc 02     ra = 404, jump @13938
      :                          @1446 [@dyn 202]
 19595: 82 17                    a0 = u64 [sp]
 19597: 7c 18 10                 a1 = u8 [sp + 0x10]
 19600: 51 07 59                 jump @1454 if a0 == 0
      :                          @1447
 19603: 52 08 59                 jump @1455 if a1 != 0
      :                          @1448
 19606: 7c 18 11                 a1 = u8 [sp + 0x11]
 19609: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 19612: 8e 77                    a0 = a0 >u 0
 19614: 82 16 08                 s1 = u64 [sp + 0x8]
 19617: 88 88 01                 a1 = a1 <u 0x1
 19620: d4 87 07                 a0 = a0 | a1
 19623: 52 07 28                 jump @1452 if a0 != 0
      :                          @1449
 19626: 7c 67 34                 a0 = u8 [s1 + 0x34]
 19629: 84 77 04                 a0 = a0 & 0x4
 19632: 52 07 1f                 jump @1452 if a0 != 0
      :                          @1450
 19635: 82 68 28                 a1 = u64 [s1 + 0x28]
 19638: 82 67 20                 a0 = u64 [s1 + 0x20]
 19641: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19644: 33 08 97 30 01           a1 = 0x13097
 19649: 33 09 01                 a2 = 0x1
 19652: 33 05 01                 s0 = 0x1
 19655: b4 a0 02 96 01           ra = 406, jump [a3]
      :                          @1451 [@dyn 203]
 19660: 52 07 20                 jump @1455 if a0 != 0
      :                          @1452
 19663: 82 68 28                 a1 = u64 [s1 + 0x28]
 19666: 82 67 20                 a0 = u64 [s1 + 0x20]
 19669: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19672: 33 08 41 30 01           a1 = 0x13041
 19677: 33 09 01                 a2 = 0x1
 19680: b4 a0 02 98 01           ra = 408, jump [a3]
      :                          @1453 [@dyn 204]
 19685: 64 75                    s0 = a0
 19687: 28 05                    jump @1455
      :                          @1454
 19689: 8e 85                    s0 = a1 >u 0
 19691: 01                       fallthrough
      :                          @1455
 19692: 64 57                    a0 = s0
 19694: 82 10 38                 ra = u64 [sp + 0x38]
 19697: 82 15 30                 s0 = u64 [sp + 0x30]
 19700: 82 16 28                 s1 = u64 [sp + 0x28]
 19703: 95 11 40                 sp = sp + 0x40
 19706: 32 00                    ret
      :                          @1456 [@dyn 205]
 19708: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 19711: 7b 10 38                 u64 [sp + 0x38] = ra
 19714: 7b 15 30                 u64 [sp + 0x30] = s0
 19717: 7b 16 28                 u64 [sp + 0x28] = s1
 19720: 64 85                    s0 = a1
 19722: 82 88 28                 a1 = u64 [a1 + 0x28]
 19725: 82 59 20                 a2 = u64 [s0 + 0x20]
 19728: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19731: 64 76                    s1 = a0
 19733: 33 08 40 30 01           a1 = 0x13040
 19738: 64 97                    a0 = a2
 19740: 33 09                    a2 = 0
 19742: b4 a0 02 9c 01           ra = 412, jump [a3]
      :                          @1457 [@dyn 206]
 19747: 7b 15 08                 u64 [sp + 0x8] = s0
 19750: 78 17 10                 u8 [sp + 0x10] = a0
 19753: 49 01                    u64 [sp + 0] = 0
 19755: 33 05 01                 s0 = 0x1
 19758: 78 15 11                 u8 [sp + 0x11] = s0
 19761: 7b 16 18                 u64 [sp + 0x18] = s1
 19764: 95 66 08                 s1 = s1 + 0x8
 19767: 7b 16 20                 u64 [sp + 0x20] = s1
 19770: 33 06 18                 s1 = 0x18
 19773: 64 17                    a0 = sp
 19775: 95 18 18                 a1 = sp + 0x18
 19778: 33 09 18                 a2 = 0x18
 19781: 50 20 9e 01 45 cb 02     ra = 414, jump @13938
      :                          @1458 [@dyn 207]
 19788: 64 17                    a0 = sp
 19790: 95 18 20                 a1 = sp + 0x20
 19793: 64 69                    a2 = s1
 19795: 50 20 a0 01 37 cb 02     ra = 416, jump @13938
      :                          @1459 [@dyn 208]
 19802: 82 17                    a0 = u64 [sp]
 19804: 7c 18 10                 a1 = u8 [sp + 0x10]
 19807: 51 07 59                 jump @1467 if a0 == 0
      :                          @1460
 19810: 52 08 59                 jump @1468 if a1 != 0
      :                          @1461
 19813: 7c 18 11                 a1 = u8 [sp + 0x11]
 19816: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 19819: 8e 77                    a0 = a0 >u 0
 19821: 82 16 08                 s1 = u64 [sp + 0x8]
 19824: 88 88 01                 a1 = a1 <u 0x1
 19827: d4 87 07                 a0 = a0 | a1
 19830: 52 07 28                 jump @1465 if a0 != 0
      :                          @1462
 19833: 7c 67 34                 a0 = u8 [s1 + 0x34]
 19836: 84 77 04                 a0 = a0 & 0x4
 19839: 52 07 1f                 jump @1465 if a0 != 0
      :                          @1463
 19842: 82 68 28                 a1 = u64 [s1 + 0x28]
 19845: 82 67 20                 a0 = u64 [s1 + 0x20]
 19848: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19851: 33 08 97 30 01           a1 = 0x13097
 19856: 33 09 01                 a2 = 0x1
 19859: 33 05 01                 s0 = 0x1
 19862: b4 a0 02 a2 01           ra = 418, jump [a3]
      :                          @1464 [@dyn 209]
 19867: 52 07 20                 jump @1468 if a0 != 0
      :                          @1465
 19870: 82 68 28                 a1 = u64 [s1 + 0x28]
 19873: 82 67 20                 a0 = u64 [s1 + 0x20]
 19876: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19879: 33 08 41 30 01           a1 = 0x13041
 19884: 33 09 01                 a2 = 0x1
 19887: b4 a0 02 a4 01           ra = 420, jump [a3]
      :                          @1466 [@dyn 210]
 19892: 64 75                    s0 = a0
 19894: 28 05                    jump @1468
      :                          @1467
 19896: 8e 85                    s0 = a1 >u 0
 19898: 01                       fallthrough
      :                          @1468
 19899: 64 57                    a0 = s0
 19901: 82 10 38                 ra = u64 [sp + 0x38]
 19904: 82 15 30                 s0 = u64 [sp + 0x30]
 19907: 82 16 28                 s1 = u64 [sp + 0x28]
 19910: 95 11 40                 sp = sp + 0x40
 19913: 32 00                    ret
      :                          @1469 [@dyn 211]
 19915: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 19918: 7b 10 48                 u64 [sp + 0x48] = ra
 19921: 7b 15 40                 u64 [sp + 0x40] = s0
 19924: 7b 16 38                 u64 [sp + 0x38] = s1
 19927: 64 85                    s0 = a1
 19929: 82 88 28                 a1 = u64 [a1 + 0x28]
 19932: 82 59 20                 a2 = u64 [s0 + 0x20]
 19935: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19938: 64 76                    s1 = a0
 19940: 33 08 40 30 01           a1 = 0x13040
 19945: 64 97                    a0 = a2
 19947: 33 09                    a2 = 0
 19949: b4 a0 02 a8 01           ra = 424, jump [a3]
      :                          @1470 [@dyn 212]
 19954: 7b 15 08                 u64 [sp + 0x8] = s0
 19957: 78 17 10                 u8 [sp + 0x10] = a0
 19960: 49 01                    u64 [sp + 0] = 0
 19962: 33 05 01                 s0 = 0x1
 19965: 78 15 11                 u8 [sp + 0x11] = s0
 19968: 7b 16 18                 u64 [sp + 0x18] = s1
 19971: 95 67 08                 a0 = s1 + 0x8
 19974: 7b 17 20                 u64 [sp + 0x20] = a0
 19977: 95 67 10                 a0 = s1 + 0x10
 19980: 7b 17 28                 u64 [sp + 0x28] = a0
 19983: 95 66 18                 s1 = s1 + 0x18
 19986: 7b 16 30                 u64 [sp + 0x30] = s1
 19989: 33 06 48                 s1 = 0x48
 19992: 64 17                    a0 = sp
 19994: 95 18 18                 a1 = sp + 0x18
 19997: 33 09 48                 a2 = 0x48
 20000: 50 20 aa 01 6a ca 02     ra = 426, jump @13938
      :                          @1471 [@dyn 213]
 20007: 64 17                    a0 = sp
 20009: 95 18 20                 a1 = sp + 0x20
 20012: 64 69                    a2 = s1
 20014: 50 20 ac 01 5c ca 02     ra = 428, jump @13938
      :                          @1472 [@dyn 214]
 20021: 64 17                    a0 = sp
 20023: 95 18 28                 a1 = sp + 0x28
 20026: 64 69                    a2 = s1
 20028: 50 20 ae 01 4e ca 02     ra = 430, jump @13938
      :                          @1473 [@dyn 215]
 20035: 64 17                    a0 = sp
 20037: 95 18 30                 a1 = sp + 0x30
 20040: 64 69                    a2 = s1
 20042: 50 20 b0 01 40 ca 02     ra = 432, jump @13938
      :                          @1474 [@dyn 216]
 20049: 82 17                    a0 = u64 [sp]
 20051: 7c 18 10                 a1 = u8 [sp + 0x10]
 20054: 51 07 59                 jump @1482 if a0 == 0
      :                          @1475
 20057: 52 08 59                 jump @1483 if a1 != 0
      :                          @1476
 20060: 7c 18 11                 a1 = u8 [sp + 0x11]
 20063: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 20066: 8e 77                    a0 = a0 >u 0
 20068: 82 16 08                 s1 = u64 [sp + 0x8]
 20071: 88 88 01                 a1 = a1 <u 0x1
 20074: d4 87 07                 a0 = a0 | a1
 20077: 52 07 28                 jump @1480 if a0 != 0
      :                          @1477
 20080: 7c 67 34                 a0 = u8 [s1 + 0x34]
 20083: 84 77 04                 a0 = a0 & 0x4
 20086: 52 07 1f                 jump @1480 if a0 != 0
      :                          @1478
 20089: 82 68 28                 a1 = u64 [s1 + 0x28]
 20092: 82 67 20                 a0 = u64 [s1 + 0x20]
 20095: 82 8a 18                 a3 = u64 [a1 + 0x18]
 20098: 33 08 97 30 01           a1 = 0x13097
 20103: 33 09 01                 a2 = 0x1
 20106: 33 05 01                 s0 = 0x1
 20109: b4 a0 02 b2 01           ra = 434, jump [a3]
      :                          @1479 [@dyn 217]
 20114: 52 07 20                 jump @1483 if a0 != 0
      :                          @1480
 20117: 82 68 28                 a1 = u64 [s1 + 0x28]
 20120: 82 67 20                 a0 = u64 [s1 + 0x20]
 20123: 82 8a 18                 a3 = u64 [a1 + 0x18]
 20126: 33 08 41 30 01           a1 = 0x13041
 20131: 33 09 01                 a2 = 0x1
 20134: b4 a0 02 b4 01           ra = 436, jump [a3]
      :                          @1481 [@dyn 218]
 20139: 64 75                    s0 = a0
 20141: 28 05                    jump @1483
      :                          @1482
 20143: 8e 85                    s0 = a1 >u 0
 20145: 01                       fallthrough
      :                          @1483
 20146: 64 57                    a0 = s0
 20148: 82 10 48                 ra = u64 [sp + 0x48]
 20151: 82 15 40                 s0 = u64 [sp + 0x40]
 20154: 82 16 38                 s1 = u64 [sp + 0x38]
 20157: 95 11 50                 sp = sp + 0x50
 20160: 32 00                    ret
      :                          @1484
 20162: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 20165: 7b 10 10                 u64 [sp + 0x10] = ra
 20168: 7b 15 08                 u64 [sp + 0x8] = s0
 20171: 7b 16                    u64 [sp] = s1
 20173: 64 75                    s0 = a0
 20175: 82 76                    s1 = u64 [a0]
 20177: 64 68                    a1 = s1
 20179: 50 20 b6 01 3c 04        ra = 438, jump @1581
      :                          @1485 [@dyn 219]
 20185: 82 5a 18                 a3 = u64 [s0 + 0x18]
 20188: 82 57 10                 a0 = u64 [s0 + 0x10]
 20191: c9 a6 08                 a1 = s1 - a3
 20194: ae 78 3d                 jump @1489 if a1 >=u a0
      :                          @1486
 20197: 82 58                    a1 = u64 [s0]
 20199: c9 76 09                 a2 = s1 - a0
 20202: c9 9a 0a                 a3 = a3 - a2
 20205: d8 9a 0b                 a4 = a3 <u a2
 20208: c9 68 0c                 a5 = a1 - s1
 20211: d8 ac 0c                 a5 = a5 <u a3
 20214: 85 cc 01                 a5 = a5 ^ 0x1
 20217: d2 cb 0b                 a4 = a4 & a5
 20220: 52 0b 30                 jump @1490 if a4 != 0
      :                          @1487
 20223: 82 5a 08                 a3 = u64 [s0 + 0x8]
 20226: c9 98 06                 s1 = a1 - a2
 20229: 97 77 03                 a0 = a0 << 0x3
 20232: c8 7a 08                 a1 = a3 + a0
 20235: 97 67 03                 a0 = s1 << 0x3
 20238: c8 a7 07                 a0 = a0 + a3
 20241: 97 99 03                 a2 = a2 << 0x3
 20244: 50 20 b8 01 7e bb 02     ra = 440, jump @13653
      :                          @1488 [@dyn 220]
 20251: 7b 56 10                 u64 [s0 + 0x10] = s1
 20254: 01                       fallthrough
      :                          @1489
 20255: 82 10 10                 ra = u64 [sp + 0x10]
 20258: 82 15 08                 s0 = u64 [sp + 0x8]
 20261: 82 16                    s1 = u64 [sp]
 20263: 95 11 18                 sp = sp + 0x18
 20266: 32 00                    ret
      :                          @1490
 20268: 82 58 08                 a1 = u64 [s0 + 0x8]
 20271: 97 67 03                 a0 = s1 << 0x3
 20274: c8 87 07                 a0 = a0 + a1
 20277: 97 a9 03                 a2 = a3 << 0x3
 20280: 82 10 10                 ra = u64 [sp + 0x10]
 20283: 82 15 08                 s0 = u64 [sp + 0x8]
 20286: 82 16                    s1 = u64 [sp]
 20288: 95 11 18                 sp = sp + 0x18
 20291: 28 9d ba 02              jump @13635
      :                          @1491
 20295: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 20298: 7b 10 18                 u64 [sp + 0x18] = ra
 20301: 7b 15 10                 u64 [sp + 0x10] = s0
 20304: 7b 16 08                 u64 [sp + 0x8] = s1
 20307: 82 8a 08                 a3 = u64 [a1 + 0x8]
 20310: 82 89 18                 a2 = u64 [a1 + 0x18]
 20313: 33 0b 01                 a4 = 0x1
 20316: 64 75                    s0 = a0
 20318: aa ba 15                 jump @1495 if a3 == a4
      :                          @1492
 20321: 52 0a 15                 jump @1496 if a3 != 0
      :                          @1493
 20324: 52 09 12                 jump @1496 if a2 != 0
      :                          @1494
 20327: 33 06                    s1 = 0
 20329: 33 08 40 30 01           a1 = 0x13040
 20334: 33 07 01                 a0 = 0x1
 20337: 28 68                    jump @1505
      :                          @1495
 20339: 51 09 15                 jump @1497 if a2 == 0
      :                          @1496
 20342: 64 57                    a0 = s0
 20344: 82 10 18                 ra = u64 [sp + 0x18]
 20347: 82 15 10                 s0 = u64 [sp + 0x10]
 20350: 82 16 08                 s1 = u64 [sp + 0x8]
 20353: 95 11 20                 sp = sp + 0x20
 20356: 28 3f b4 02              jump @13549
      :                          @1497
 20360: 82 87                    a0 = u64 [a1]
 20362: 82 76 08                 s1 = u64 [a0 + 0x8]
 20365: 82 78                    a1 = u64 [a0]
 20367: 51 06 46                 jump @1504 if s1 == 0
      :                          @1498
 20370: 57 06 6b                 jump @1508 if s1 <s 0
      :                          @1499
 20373: 64 53                    t1 = s0
 20375: 85 67 ff                 a0 = s1 ^ 0xffffffffffffffff
 20378: 98 75 3f                 s0 = a0 >> 0x3f
 20381: 33 0a b0 02 03           a3 = 0x302b0
 20386: 33 02 00 00 10           t0 = 0x100000
 20391: c8 2a 0a                 a3 = a3 + t0
 20394: 01                       fallthrough
      :                          @1500
 20395: 82 ac                    a5 = u64 [a3]
 20397: c8 6c 0b                 a4 = a5 + s1
 20400: ac cb 4c                 jump @1507 if a4 <u a5
      :                          @1501
 20403: c8 5b 07                 a0 = a4 + s0
 20406: d8 b7 09                 a2 = a0 <u a4
 20409: d8 72 07                 a0 = t0 <u a0
 20412: d4 97 07                 a0 = a0 | a2
 20415: 52 07 3d                 jump @1507 if a0 != 0
      :                          @1502
 20418: 82 a7                    a0 = u64 [a3]
 20420: ab c7 e7                 jump @1500 if a0 != a5
      :                          @1503
 20423: 7b ab                    u64 [a3] = a4
 20425: 33 07 b0 02 13           a0 = 0x1302b0
 20430: c9 b7 07                 a0 = a0 - a4
 20433: 64 35                    s0 = t1
 20435: 28 06                    jump @1505
      :                          @1504
 20437: 33 07 01                 a0 = 0x1
 20440: 01                       fallthrough
      :                          @1505
 20441: 7b 17                    u64 [sp] = a0
 20443: 64 69                    a2 = s1
 20445: 50 20 ba 01 03 ba 02     ra = 442, jump @13635
      :                          @1506 [@dyn 221]
 20452: 7b 56                    u64 [s0] = s1
 20454: 82 17                    a0 = u64 [sp]
 20456: 7b 57 08                 u64 [s0 + 0x8] = a0
 20459: 7b 56 10                 u64 [s0 + 0x10] = s1
 20462: 82 10 18                 ra = u64 [sp + 0x18]
 20465: 82 15 10                 s0 = u64 [sp + 0x10]
 20468: 82 16 08                 s1 = u64 [sp + 0x8]
 20471: 95 11 20                 sp = sp + 0x20
 20474: 32 00                    ret
      :                          @1507
 20476: 00                       trap
      :                          @1508
 20477: 00                       trap
      :                          @1509
 20478: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 20481: 7b 15                    u64 [sp] = s0
 20483: 33 03 b0 02 03           t1 = 0x302b0
 20488: 33 02 00 00 10           t0 = 0x100000
 20493: c8 23 04                 t2 = t1 + t0
 20496: 01                       fallthrough
      :                          @1510
 20497: 82 4b                    a4 = u64 [t2]
 20499: c8 7b 0c                 a5 = a4 + a0
 20502: ac bc 30                 jump @1515 if a5 <u a4
      :                          @1511
 20505: 95 c8 08                 a1 = a5 + 0x8
 20508: d8 c8 09                 a2 = a1 <u a5
 20511: d8 82 08                 a1 = t0 <u a1
 20514: d4 98 08                 a1 = a1 | a2
 20517: 52 08 21                 jump @1515 if a1 != 0
      :                          @1512
 20520: c9 c3 08                 a1 = t1 - a5
 20523: c8 28 08                 a1 = a1 + t0
 20526: 84 89 07                 a2 = a1 & 0x7
 20529: c8 9c 0c                 a5 = a5 + a2
 20532: 01                       fallthrough
      :                          @1513
 20533: 82 4a                    a3 = u64 [t2]
 20535: ab ba da                 jump @1510 if a3 != a4
      :                          @1514
 20538: 7b 4c                    u64 [t2] = a5
 20540: c9 98 07                 a0 = a1 - a2
 20543: 82 15                    s0 = u64 [sp]
 20545: 95 11 08                 sp = sp + 0x8
 20548: 32 00                    ret
      :                          @1515
 20550: 00                       trap
      :                          @1516
 20551: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 20554: 7b 10 30                 u64 [sp + 0x30] = ra
 20557: 7b 15 28                 u64 [sp + 0x28] = s0
 20560: 7b 16 20                 u64 [sp + 0x20] = s1
 20563: 64 90                    ra = a2
 20565: 51 08 90 00              jump @1528 if a1 == 0
      :                          @1517
 20569: 64 86                    s1 = a1
 20571: 82 a8 08                 a1 = u64 [a3 + 0x8]
 20574: 51 08 90 00              jump @1529 if a1 == 0
      :                          @1518
 20578: 82 a8 10                 a1 = u64 [a3 + 0x10]
 20581: 51 08 e4 00              jump @1537 if a1 == 0
      :                          @1519
 20585: 7b 18 10                 u64 [sp + 0x10] = a1
 20588: 7b 17 18                 u64 [sp + 0x18] = a0
 20591: 66 67                    a0 = cpop s1
 20593: 33 08 01                 a1 = 0x1
 20596: ab 87 2d 01              jump @1545 if a0 != a1
      :                          @1520
 20600: 82 a7                    a0 = u64 [a3]
 20602: 7b 17 08                 u64 [sp + 0x8] = a0
 20605: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 20608: 33 04 b0 02 03           t2 = 0x302b0
 20613: 33 03 00 00 10           t1 = 0x100000
 20618: c8 34 0a                 a3 = t2 + t1
 20621: 01                       fallthrough
      :                          @1521
 20622: 82 ab                    a4 = u64 [a3]
 20624: c8 0b 0c                 a5 = a4 + ra
 20627: ac bc 0e 01              jump @1545 if a5 <u a4
      :                          @1522
 20631: c8 6c 07                 a0 = a5 + s1
 20634: d8 c7 09                 a2 = a0 <u a5
 20637: d8 73 07                 a0 = t1 <u a0
 20640: d4 97 07                 a0 = a0 | a2
 20643: 52 07 fe 00              jump @1545 if a0 != 0
      :                          @1523
 20647: c9 c4 09                 a2 = t2 - a5
 20650: c8 39 09                 a2 = a2 + t1
 20653: d2 92 07                 a0 = t0 & a2
 20656: c8 7c 0c                 a5 = a5 + a0
 20659: 01                       fallthrough
      :                          @1524
 20660: 82 a5                    s0 = u64 [a3]
 20662: ab b5 d8                 jump @1521 if s0 != a4
      :                          @1525
 20665: 7b ac                    u64 [a3] = a5
 20667: 7b 10                    u64 [sp] = ra
 20669: c9 79 06                 s1 = a2 - a0
 20672: 64 67                    a0 = s1
 20674: 82 18 08                 a1 = u64 [sp + 0x8]
 20677: 82 15 10                 s0 = u64 [sp + 0x10]
 20680: 64 59                    a2 = s0
 20682: 50 20 bc 01 16 b9 02     ra = 444, jump @13635
      :                          @1526 [@dyn 222]
 20689: 54 35 00 00 10 db 00     jump @1546 if s0 <=u 1048576
      :                          @1527
 20696: 82 10                    ra = u64 [sp]
 20698: 82 17 18                 a0 = u64 [sp + 0x18]
 20701: 33 08                    a1 = 0
 20703: 7b 76 08                 u64 [a0 + 0x8] = s1
 20706: 28 03 01                 jump @1553
      :                          @1528
 20709: 49 17 08                 u64 [a0 + 8] = 0
 20712: 33 08 01                 a1 = 0x1
 20715: 28 fa 00                 jump @1553
      :                          @1529
 20718: 51 00 f1 00              jump @1552 if ra == 0
      :                          @1530
 20722: 7b 17 18                 u64 [sp + 0x18] = a0
 20725: 66 67                    a0 = cpop s1
 20727: 33 08 01                 a1 = 0x1
 20730: ab 87 a7 00              jump @1545 if a0 != a1
      :                          @1531
 20734: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 20737: 33 04 b0 02 03           t2 = 0x302b0
 20742: 33 03 00 00 10           t1 = 0x100000
 20747: c8 34 0a                 a3 = t2 + t1
 20750: 01                       fallthrough
      :                          @1532
 20751: 82 ab                    a4 = u64 [a3]
 20753: c8 0b 0c                 a5 = a4 + ra
 20756: ac bc 8d 00              jump @1545 if a5 <u a4
      :                          @1533
 20760: c8 6c 07                 a0 = a5 + s1
 20763: d8 c7 09                 a2 = a0 <u a5
 20766: d8 73 07                 a0 = t1 <u a0
 20769: d4 97 07                 a0 = a0 | a2
 20772: 52 07 7d                 jump @1545 if a0 != 0
      :                          @1534
 20775: c9 c4 09                 a2 = t2 - a5
 20778: c8 39 09                 a2 = a2 + t1
 20781: d2 92 07                 a0 = t0 & a2
 20784: c8 7c 0c                 a5 = a5 + a0
 20787: 01                       fallthrough
      :                          @1535
 20788: 82 a5                    s0 = u64 [a3]
 20790: ab b5 d9                 jump @1532 if s0 != a4
      :                          @1536
 20793: 7b ac                    u64 [a3] = a5
 20795: c9 79 06                 s1 = a2 - a0
 20798: 82 17 18                 a0 = u64 [sp + 0x18]
 20801: 33 08                    a1 = 0
 20803: 7b 76 08                 u64 [a0 + 0x8] = s1
 20806: 28 9f 00                 jump @1553
      :                          @1537
 20809: 51 00 96 00              jump @1552 if ra == 0
      :                          @1538
 20813: 7b 17 18                 u64 [sp + 0x18] = a0
 20816: 66 67                    a0 = cpop s1
 20818: 33 08 01                 a1 = 0x1
 20821: ab 87 4c                 jump @1545 if a0 != a1
      :                          @1539
 20824: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 20827: 33 04 b0 02 03           t2 = 0x302b0
 20832: 33 03 00 00 10           t1 = 0x100000
 20837: c8 34 0a                 a3 = t2 + t1
 20840: 01                       fallthrough
      :                          @1540
 20841: 82 ab                    a4 = u64 [a3]
 20843: c8 0b 0c                 a5 = a4 + ra
 20846: ac bc 33                 jump @1545 if a5 <u a4
      :                          @1541
 20849: c8 6c 09                 a2 = a5 + s1
 20852: d8 c9 05                 s0 = a2 <u a5
 20855: d8 93 09                 a2 = t1 <u a2
 20858: d4 59 09                 a2 = a2 | s0
 20861: 52 09 24                 jump @1545 if a2 != 0
      :                          @1542
 20864: c9 c4 09                 a2 = t2 - a5
 20867: c8 39 09                 a2 = a2 + t1
 20870: d2 92 05                 s0 = t0 & a2
 20873: c8 5c 0c                 a5 = a5 + s0
 20876: 01                       fallthrough
      :                          @1543
 20877: 82 a7                    a0 = u64 [a3]
 20879: ab b7 da                 jump @1540 if a0 != a4
      :                          @1544
 20882: 7b ac                    u64 [a3] = a5
 20884: c9 59 06                 s1 = a2 - s0
 20887: 82 17 18                 a0 = u64 [sp + 0x18]
 20890: 33 08                    a1 = 0
 20892: 7b 76 08                 u64 [a0 + 0x8] = s1
 20895: 28 46                    jump @1553
      :                          @1545
 20897: 82 17 18                 a0 = u64 [sp + 0x18]
 20900: 7b 76 08                 u64 [a0 + 0x8] = s1
 20903: 33 08 01                 a1 = 0x1
 20906: 28 3b                    jump @1553
      :                          @1546
 20908: 33 08 b0 02 03           a1 = 0x302b0
 20913: 95 87 00 00 10           a0 = a1 + 0x100000
 20918: 82 10                    ra = u64 [sp]
 20920: 82 1c 10                 a5 = u64 [sp + 0x10]
 20923: 82 15 08                 s0 = u64 [sp + 0x8]
 20926: 01                       fallthrough
      :                          @1547
 20927: 82 78                    a1 = u64 [a0]
 20929: c9 87 09                 a2 = a0 - a1
 20932: ab 59 11                 jump @1551 if a2 != s0
      :                          @1548
 20935: c9 c8 09                 a2 = a1 - a5
 20938: 01                       fallthrough
      :                          @1549
 20939: 82 7a                    a3 = u64 [a0]
 20941: ab 8a f2                 jump @1547 if a3 != a1
      :                          @1550
 20944: 7b 79                    u64 [a0] = a2
 20946: 33 0b                    a4 = 0
 20948: 01                       fallthrough
      :                          @1551
 20949: 82 17 18                 a0 = u64 [sp + 0x18]
 20952: 33 08                    a1 = 0
 20954: 7b 76 08                 u64 [a0 + 0x8] = s1
 20957: 28 08                    jump @1553
      :                          @1552
 20959: 33 08                    a1 = 0
 20961: 7b 76 08                 u64 [a0 + 0x8] = s1
 20964: 01                       fallthrough
      :                          @1553
 20965: 7b 70 10                 u64 [a0 + 0x10] = ra
 20968: 7b 78                    u64 [a0] = a1
 20970: 82 10 30                 ra = u64 [sp + 0x30]
 20973: 82 15 28                 s0 = u64 [sp + 0x28]
 20976: 82 16 20                 s1 = u64 [sp + 0x20]
 20979: 95 11 38                 sp = sp + 0x38
 20982: 32 00                    ret
      :                          @1554
 20984: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 20987: 7b 15 08                 u64 [sp + 0x8] = s0
 20990: 7b 16                    u64 [sp] = s1
 20992: 97 72 04                 t0 = a0 << 0x4
 20995: 33 04 b0 02 03           t2 = 0x302b0
 21000: 33 03 00 00 10           t1 = 0x100000
 21005: c8 34 0b                 a4 = t2 + t1
 21008: 01                       fallthrough
      :                          @1555
 21009: 82 bc                    a5 = u64 [a4]
 21011: c8 2c 08                 a1 = a5 + t0
 21014: ac c8 33                 jump @1560 if a1 <u a5
      :                          @1556
 21017: 95 89 08                 a2 = a1 + 0x8
 21020: d8 89 0a                 a3 = a2 <u a1
 21023: d8 93 09                 a2 = t1 <u a2
 21026: d4 a9 09                 a2 = a2 | a3
 21029: 52 09 24                 jump @1560 if a2 != 0
      :                          @1557
 21032: c9 84 09                 a2 = t2 - a1
 21035: c8 39 09                 a2 = a2 + t1
 21038: 84 9a 07                 a3 = a2 & 0x7
 21041: c8 a8 08                 a1 = a1 + a3
 21044: 01                       fallthrough
      :                          @1558
 21045: 82 b5                    s0 = u64 [a4]
 21047: ab c5 da                 jump @1555 if s0 != a5
      :                          @1559
 21050: 7b b8                    u64 [a4] = a1
 21052: c9 a9 08                 a1 = a2 - a3
 21055: 82 15 08                 s0 = u64 [sp + 0x8]
 21058: 82 16                    s1 = u64 [sp]
 21060: 95 11 10                 sp = sp + 0x10
 21063: 32 00                    ret
      :                          @1560
 21065: 00                       trap
      :                          @1561
 21066: 51 07 3b                 jump @1567 if a0 == 0
      :                          @1562
 21069: 33 0a b0 02 03           a3 = 0x302b0
 21074: 33 02 00 00 10           t0 = 0x100000
 21079: c8 2a 0a                 a3 = a3 + t0
 21082: 01                       fallthrough
      :                          @1563
 21083: 82 ab                    a4 = u64 [a3]
 21085: c8 7b 09                 a2 = a4 + a0
 21088: ac b9 2c                 jump @1568 if a2 <u a4
      :                          @1564
 21091: 95 9c 01                 a5 = a2 + 0x1
 21094: 88 c8 01                 a1 = a5 <u 0x1
 21097: d8 c2 0c                 a5 = t0 <u a5
 21100: d4 c8 08                 a1 = a1 | a5
 21103: 52 08 1d                 jump @1568 if a1 != 0
      :                          @1565
 21106: 82 a8                    a1 = u64 [a3]
 21108: ab b8 e7                 jump @1563 if a1 != a4
      :                          @1566
 21111: 7b a9                    u64 [a3] = a2
 21113: 33 0c                    a5 = 0
 21115: 33 08 b0 02 13           a1 = 0x1302b0
 21120: c9 98 08                 a1 = a1 - a2
 21123: 32 00                    ret
      :                          @1567
 21125: 33 08 01                 a1 = 0x1
 21128: 28 d8 63 02              jump @12097
      :                          @1568
 21132: 00                       trap
      :                          @1569
 21133: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21136: 7b 10 40                 u64 [sp + 0x40] = ra
 21139: 7b 15 38                 u64 [sp + 0x38] = s0
 21142: 7b 16 30                 u64 [sp + 0x30] = s1
 21145: 95 88 01                 a1 = a1 + 0x1
 21148: 51 08 5d                 jump @1577 if a1 == 0
      :                          @1570
 21151: 64 75                    s0 = a0
 21153: 82 77                    a0 = u64 [a0]
 21155: 97 79 01                 a2 = a0 << 0x1
 21158: 3a 0a 10 00 03           a3 = u64 [0x30010]
 21163: 33 0b 04                 a4 = 0x4
 21166: e4 b8 08                 a1 = maxu(a1, a4)
 21169: e4 89 06                 s1 = maxu(a2, a1)
 21172: d8 a6 08                 a1 = s1 <u a3
 21175: 96 69 18                 a2 = s1 * 0x18
 21178: 97 88 03                 a1 = a1 << 0x3
 21181: 51 07 15                 jump @1572 if a0 == 0
      :                          @1571
 21184: 82 5b 08                 a4 = u64 [s0 + 0x8]
 21187: 96 77 18                 a0 = a0 * 0x18
 21190: 7b 1b 18                 u64 [sp + 0x18] = a4
 21193: 49 11 20 08              u64 [sp + 32] = 0x8
 21197: 7b 17 28                 u64 [sp + 0x28] = a0
 21200: 28 06                    jump @1573
      :                          @1572
 21202: 49 11 20                 u64 [sp + 32] = 0
 21205: 01                       fallthrough
      :                          @1573
 21206: 64 17                    a0 = sp
 21208: 95 1a 18                 a3 = sp + 0x18
 21211: 50 20 be 01 6c fd        ra = 446, jump @1516
      :                          @1574 [@dyn 223]
 21217: 82 18                    a1 = u64 [sp]
 21219: 82 17 08                 a0 = u64 [sp + 0x8]
 21222: 51 08 14                 jump @1578 if a1 == 0
      :                          @1575
 21225: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21235: aa 87 0d                 jump @1579 if a0 == a1
      :                          @1576
 21238: 52 07 18                 jump @1580 if a0 != 0
      :                          @1577
 21241: 00                       trap
      :                          @1578
 21242: 7b 57 08                 u64 [s0 + 0x8] = a0
 21245: 7b 56                    u64 [s0] = s1
 21247: 01                       fallthrough
      :                          @1579
 21248: 82 10 40                 ra = u64 [sp + 0x40]
 21251: 82 15 38                 s0 = u64 [sp + 0x38]
 21254: 82 16 30                 s1 = u64 [sp + 0x30]
 21257: 95 11 48                 sp = sp + 0x48
 21260: 32 00                    ret
      :                          @1580
 21262: 00                       trap
      :                          @1581
 21263: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21266: 7b 10 40                 u64 [sp + 0x40] = ra
 21269: 7b 15 38                 u64 [sp + 0x38] = s0
 21272: 7b 16 30                 u64 [sp + 0x30] = s1
 21275: 95 88 01                 a1 = a1 + 0x1
 21278: 51 08 5b                 jump @1589 if a1 == 0
      :                          @1582
 21281: 64 75                    s0 = a0
 21283: 82 77                    a0 = u64 [a0]
 21285: 97 79 01                 a2 = a0 << 0x1
 21288: 33 0a 04                 a3 = 0x4
 21291: e4 a8 08                 a1 = maxu(a1, a3)
 21294: e4 89 06                 s1 = maxu(a2, a1)
 21297: 98 68 3c                 a1 = s1 >> 0x3c
 21300: 88 88 01                 a1 = a1 <u 0x1
 21303: 97 69 03                 a2 = s1 << 0x3
 21306: 97 88 03                 a1 = a1 << 0x3
 21309: 51 07 15                 jump @1584 if a0 == 0
      :                          @1583
 21312: 82 5a 08                 a3 = u64 [s0 + 0x8]
 21315: 97 77 03                 a0 = a0 << 0x3
 21318: 7b 1a 18                 u64 [sp + 0x18] = a3
 21321: 49 11 20 08              u64 [sp + 32] = 0x8
 21325: 7b 17 28                 u64 [sp + 0x28] = a0
 21328: 28 06                    jump @1585
      :                          @1584
 21330: 49 11 20                 u64 [sp + 32] = 0
 21333: 01                       fallthrough
      :                          @1585
 21334: 64 17                    a0 = sp
 21336: 95 1a 18                 a3 = sp + 0x18
 21339: 50 20 c0 01 ec fc        ra = 448, jump @1516
      :                          @1586 [@dyn 224]
 21345: 82 18                    a1 = u64 [sp]
 21347: 82 17 08                 a0 = u64 [sp + 0x8]
 21350: 51 08 14                 jump @1590 if a1 == 0
      :                          @1587
 21353: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21363: aa 87 0d                 jump @1591 if a0 == a1
      :                          @1588
 21366: 52 07 18                 jump @1592 if a0 != 0
      :                          @1589
 21369: 00                       trap
      :                          @1590
 21370: 7b 57 08                 u64 [s0 + 0x8] = a0
 21373: 7b 56                    u64 [s0] = s1
 21375: 01                       fallthrough
      :                          @1591
 21376: 82 10 40                 ra = u64 [sp + 0x40]
 21379: 82 15 38                 s0 = u64 [sp + 0x38]
 21382: 82 16 30                 s1 = u64 [sp + 0x30]
 21385: 95 11 48                 sp = sp + 0x48
 21388: 32 00                    ret
      :                          @1592
 21390: 00                       trap
      :                          @1593
 21391: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21394: 7b 10 40                 u64 [sp + 0x40] = ra
 21397: 7b 15 38                 u64 [sp + 0x38] = s0
 21400: 7b 16 30                 u64 [sp + 0x30] = s1
 21403: 95 88 01                 a1 = a1 + 0x1
 21406: 51 08 54                 jump @1601 if a1 == 0
      :                          @1594
 21409: 64 75                    s0 = a0
 21411: 82 77                    a0 = u64 [a0]
 21413: 97 79 01                 a2 = a0 << 0x1
 21416: 33 0a 08                 a3 = 0x8
 21419: e4 a8 08                 a1 = maxu(a1, a3)
 21422: e4 89 06                 s1 = maxu(a2, a1)
 21425: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 21428: 98 88 3f                 a1 = a1 >> 0x3f
 21431: 51 07 12                 jump @1596 if a0 == 0
      :                          @1595
 21434: 82 59 08                 a2 = u64 [s0 + 0x8]
 21437: 7b 19 18                 u64 [sp + 0x18] = a2
 21440: 49 11 20 01              u64 [sp + 32] = 0x1
 21444: 7b 17 28                 u64 [sp + 0x28] = a0
 21447: 28 06                    jump @1597
      :                          @1596
 21449: 49 11 20                 u64 [sp + 32] = 0
 21452: 01                       fallthrough
      :                          @1597
 21453: 64 17                    a0 = sp
 21455: 95 1a 18                 a3 = sp + 0x18
 21458: 64 69                    a2 = s1
 21460: 50 20 c2 01 73 fc        ra = 450, jump @1516
      :                          @1598 [@dyn 225]
 21466: 82 18                    a1 = u64 [sp]
 21468: 82 17 08                 a0 = u64 [sp + 0x8]
 21471: 51 08 14                 jump @1602 if a1 == 0
      :                          @1599
 21474: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21484: aa 87 0d                 jump @1603 if a0 == a1
      :                          @1600
 21487: 52 07 18                 jump @1604 if a0 != 0
      :                          @1601
 21490: 00                       trap
      :                          @1602
 21491: 7b 57 08                 u64 [s0 + 0x8] = a0
 21494: 7b 56                    u64 [s0] = s1
 21496: 01                       fallthrough
      :                          @1603
 21497: 82 10 40                 ra = u64 [sp + 0x40]
 21500: 82 15 38                 s0 = u64 [sp + 0x38]
 21503: 82 16 30                 s1 = u64 [sp + 0x30]
 21506: 95 11 48                 sp = sp + 0x48
 21509: 32 00                    ret
      :                          @1604
 21511: 00                       trap
      :                          @1605
 21512: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21515: 7b 10 40                 u64 [sp + 0x40] = ra
 21518: 7b 15 38                 u64 [sp + 0x38] = s0
 21521: 7b 16 30                 u64 [sp + 0x30] = s1
 21524: 95 88 01                 a1 = a1 + 0x1
 21527: 51 08 5b                 jump @1613 if a1 == 0
      :                          @1606
 21530: 64 75                    s0 = a0
 21532: 82 77                    a0 = u64 [a0]
 21534: 97 79 01                 a2 = a0 << 0x1
 21537: 33 0a 04                 a3 = 0x4
 21540: e4 a8 08                 a1 = maxu(a1, a3)
 21543: e4 89 06                 s1 = maxu(a2, a1)
 21546: 98 68 3b                 a1 = s1 >> 0x3b
 21549: 88 88 01                 a1 = a1 <u 0x1
 21552: 97 69 04                 a2 = s1 << 0x4
 21555: 97 88 03                 a1 = a1 << 0x3
 21558: 51 07 15                 jump @1608 if a0 == 0
      :                          @1607
 21561: 82 5a 08                 a3 = u64 [s0 + 0x8]
 21564: 97 77 04                 a0 = a0 << 0x4
 21567: 7b 1a 18                 u64 [sp + 0x18] = a3
 21570: 49 11 20 08              u64 [sp + 32] = 0x8
 21574: 7b 17 28                 u64 [sp + 0x28] = a0
 21577: 28 06                    jump @1609
      :                          @1608
 21579: 49 11 20                 u64 [sp + 32] = 0
 21582: 01                       fallthrough
      :                          @1609
 21583: 64 17                    a0 = sp
 21585: 95 1a 18                 a3 = sp + 0x18
 21588: 50 20 c4 01 f3 fb        ra = 452, jump @1516
      :                          @1610 [@dyn 226]
 21594: 82 18                    a1 = u64 [sp]
 21596: 82 17 08                 a0 = u64 [sp + 0x8]
 21599: 51 08 14                 jump @1614 if a1 == 0
      :                          @1611
 21602: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21612: aa 87 0d                 jump @1615 if a0 == a1
      :                          @1612
 21615: 52 07 18                 jump @1616 if a0 != 0
      :                          @1613
 21618: 00                       trap
      :                          @1614
 21619: 7b 57 08                 u64 [s0 + 0x8] = a0
 21622: 7b 56                    u64 [s0] = s1
 21624: 01                       fallthrough
      :                          @1615
 21625: 82 10 40                 ra = u64 [sp + 0x40]
 21628: 82 15 38                 s0 = u64 [sp + 0x38]
 21631: 82 16 30                 s1 = u64 [sp + 0x30]
 21634: 95 11 48                 sp = sp + 0x48
 21637: 32 00                    ret
      :                          @1616
 21639: 00                       trap
      :                          @1617
 21640: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21643: 7b 10 40                 u64 [sp + 0x40] = ra
 21646: 7b 15 38                 u64 [sp + 0x38] = s0
 21649: 7b 16 30                 u64 [sp + 0x30] = s1
 21652: 95 88 01                 a1 = a1 + 0x1
 21655: 51 08 5b                 jump @1625 if a1 == 0
      :                          @1618
 21658: 64 75                    s0 = a0
 21660: 82 77                    a0 = u64 [a0]
 21662: 97 79 01                 a2 = a0 << 0x1
 21665: 33 0a 04                 a3 = 0x4
 21668: e4 a8 08                 a1 = maxu(a1, a3)
 21671: e4 89 06                 s1 = maxu(a2, a1)
 21674: 98 68 3a                 a1 = s1 >> 0x3a
 21677: 88 88 01                 a1 = a1 <u 0x1
 21680: 97 69 05                 a2 = s1 << 0x5
 21683: 97 88 03                 a1 = a1 << 0x3
 21686: 51 07 15                 jump @1620 if a0 == 0
      :                          @1619
 21689: 82 5a 08                 a3 = u64 [s0 + 0x8]
 21692: 97 77 05                 a0 = a0 << 0x5
 21695: 7b 1a 18                 u64 [sp + 0x18] = a3
 21698: 49 11 20 08              u64 [sp + 32] = 0x8
 21702: 7b 17 28                 u64 [sp + 0x28] = a0
 21705: 28 06                    jump @1621
      :                          @1620
 21707: 49 11 20                 u64 [sp + 32] = 0
 21710: 01                       fallthrough
      :                          @1621
 21711: 64 17                    a0 = sp
 21713: 95 1a 18                 a3 = sp + 0x18
 21716: 50 20 c6 01 73 fb        ra = 454, jump @1516
      :                          @1622 [@dyn 227]
 21722: 82 18                    a1 = u64 [sp]
 21724: 82 17 08                 a0 = u64 [sp + 0x8]
 21727: 51 08 14                 jump @1626 if a1 == 0
      :                          @1623
 21730: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21740: aa 87 0d                 jump @1627 if a0 == a1
      :                          @1624
 21743: 52 07 18                 jump @1628 if a0 != 0
      :                          @1625
 21746: 00                       trap
      :                          @1626
 21747: 7b 57 08                 u64 [s0 + 0x8] = a0
 21750: 7b 56                    u64 [s0] = s1
 21752: 01                       fallthrough
      :                          @1627
 21753: 82 10 40                 ra = u64 [sp + 0x40]
 21756: 82 15 38                 s0 = u64 [sp + 0x38]
 21759: 82 16 30                 s1 = u64 [sp + 0x30]
 21762: 95 11 48                 sp = sp + 0x48
 21765: 32 00                    ret
      :                          @1628
 21767: 00                       trap
      :                          @1629
 21768: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21771: 7b 10 40                 u64 [sp + 0x40] = ra
 21774: 7b 15 38                 u64 [sp + 0x38] = s0
 21777: 7b 16 30                 u64 [sp + 0x30] = s1
 21780: c8 89 09                 a2 = a2 + a1
 21783: ac 89 5b                 jump @1637 if a2 <u a1
      :                          @1630
 21786: 64 75                    s0 = a0
 21788: 82 77                    a0 = u64 [a0]
 21790: 97 78 01                 a1 = a0 << 0x1
 21793: 33 0a 04                 a3 = 0x4
 21796: e4 a9 09                 a2 = maxu(a2, a3)
 21799: e4 98 06                 s1 = maxu(a1, a2)
 21802: 98 68 3d                 a1 = s1 >> 0x3d
 21805: 88 88 01                 a1 = a1 <u 0x1
 21808: 97 69 02                 a2 = s1 << 0x2
 21811: 97 88 02                 a1 = a1 << 0x2
 21814: 51 07 15                 jump @1632 if a0 == 0
      :                          @1631
 21817: 82 5b 08                 a4 = u64 [s0 + 0x8]
 21820: 97 77 02                 a0 = a0 << 0x2
 21823: 7b 1b 18                 u64 [sp + 0x18] = a4
 21826: 49 11 20 04              u64 [sp + 32] = 0x4
 21830: 7b 17 28                 u64 [sp + 0x28] = a0
 21833: 28 06                    jump @1633
      :                          @1632
 21835: 49 11 20                 u64 [sp + 32] = 0
 21838: 01                       fallthrough
      :                          @1633
 21839: 64 17                    a0 = sp
 21841: 95 1a 18                 a3 = sp + 0x18
 21844: 50 20 c8 01 f3 fa        ra = 456, jump @1516
      :                          @1634 [@dyn 228]
 21850: 82 18                    a1 = u64 [sp]
 21852: 82 17 08                 a0 = u64 [sp + 0x8]
 21855: 51 08 14                 jump @1638 if a1 == 0
      :                          @1635
 21858: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21868: aa 87 0d                 jump @1639 if a0 == a1
      :                          @1636
 21871: 52 07 18                 jump @1640 if a0 != 0
      :                          @1637
 21874: 00                       trap
      :                          @1638
 21875: 7b 57 08                 u64 [s0 + 0x8] = a0
 21878: 7b 56                    u64 [s0] = s1
 21880: 01                       fallthrough
      :                          @1639
 21881: 82 10 40                 ra = u64 [sp + 0x40]
 21884: 82 15 38                 s0 = u64 [sp + 0x38]
 21887: 82 16 30                 s1 = u64 [sp + 0x30]
 21890: 95 11 48                 sp = sp + 0x48
 21893: 32 00                    ret
      :                          @1640
 21895: 00                       trap
      :                          @1641
 21896: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21899: 7b 10 40                 u64 [sp + 0x40] = ra
 21902: 7b 15 38                 u64 [sp + 0x38] = s0
 21905: 7b 16 30                 u64 [sp + 0x30] = s1
 21908: c8 89 09                 a2 = a2 + a1
 21911: ac 89 5b                 jump @1649 if a2 <u a1
      :                          @1642
 21914: 64 75                    s0 = a0
 21916: 82 77                    a0 = u64 [a0]
 21918: 97 78 01                 a1 = a0 << 0x1
 21921: 33 0a 04                 a3 = 0x4
 21924: e4 a9 09                 a2 = maxu(a2, a3)
 21927: e4 98 06                 s1 = maxu(a1, a2)
 21930: 98 68 3b                 a1 = s1 >> 0x3b
 21933: 88 88 01                 a1 = a1 <u 0x1
 21936: 97 69 04                 a2 = s1 << 0x4
 21939: 97 88 03                 a1 = a1 << 0x3
 21942: 51 07 15                 jump @1644 if a0 == 0
      :                          @1643
 21945: 82 5a 08                 a3 = u64 [s0 + 0x8]
 21948: 97 77 04                 a0 = a0 << 0x4
 21951: 7b 1a 18                 u64 [sp + 0x18] = a3
 21954: 49 11 20 08              u64 [sp + 32] = 0x8
 21958: 7b 17 28                 u64 [sp + 0x28] = a0
 21961: 28 06                    jump @1645
      :                          @1644
 21963: 49 11 20                 u64 [sp + 32] = 0
 21966: 01                       fallthrough
      :                          @1645
 21967: 64 17                    a0 = sp
 21969: 95 1a 18                 a3 = sp + 0x18
 21972: 50 20 ca 01 73 fa        ra = 458, jump @1516
      :                          @1646 [@dyn 229]
 21978: 82 18                    a1 = u64 [sp]
 21980: 82 17 08                 a0 = u64 [sp + 0x8]
 21983: 51 08 14                 jump @1650 if a1 == 0
      :                          @1647
 21986: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21996: aa 87 0d                 jump @1651 if a0 == a1
      :                          @1648
 21999: 52 07 18                 jump @1652 if a0 != 0
      :                          @1649
 22002: 00                       trap
      :                          @1650
 22003: 7b 57 08                 u64 [s0 + 0x8] = a0
 22006: 7b 56                    u64 [s0] = s1
 22008: 01                       fallthrough
      :                          @1651
 22009: 82 10 40                 ra = u64 [sp + 0x40]
 22012: 82 15 38                 s0 = u64 [sp + 0x38]
 22015: 82 16 30                 s1 = u64 [sp + 0x30]
 22018: 95 11 48                 sp = sp + 0x48
 22021: 32 00                    ret
      :                          @1652
 22023: 00                       trap
      :                          @1653
 22024: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 22027: 7b 10 40                 u64 [sp + 0x40] = ra
 22030: 7b 15 38                 u64 [sp + 0x38] = s0
 22033: 7b 16 30                 u64 [sp + 0x30] = s1
 22036: 95 88 01                 a1 = a1 + 0x1
 22039: 51 08 5b                 jump @1661 if a1 == 0
      :                          @1654
 22042: 64 75                    s0 = a0
 22044: 82 77                    a0 = u64 [a0]
 22046: 97 79 01                 a2 = a0 << 0x1
 22049: 33 0a 04                 a3 = 0x4
 22052: e4 a8 08                 a1 = maxu(a1, a3)
 22055: e4 89 06                 s1 = maxu(a2, a1)
 22058: 98 68 3c                 a1 = s1 >> 0x3c
 22061: 88 88 01                 a1 = a1 <u 0x1
 22064: 97 69 03                 a2 = s1 << 0x3
 22067: 97 88 03                 a1 = a1 << 0x3
 22070: 51 07 15                 jump @1656 if a0 == 0
      :                          @1655
 22073: 82 5a 08                 a3 = u64 [s0 + 0x8]
 22076: 97 77 03                 a0 = a0 << 0x3
 22079: 7b 1a 18                 u64 [sp + 0x18] = a3
 22082: 49 11 20 08              u64 [sp + 32] = 0x8
 22086: 7b 17 28                 u64 [sp + 0x28] = a0
 22089: 28 06                    jump @1657
      :                          @1656
 22091: 49 11 20                 u64 [sp + 32] = 0
 22094: 01                       fallthrough
      :                          @1657
 22095: 64 17                    a0 = sp
 22097: 95 1a 18                 a3 = sp + 0x18
 22100: 50 20 cc 01 f3 f9        ra = 460, jump @1516
      :                          @1658 [@dyn 230]
 22106: 82 18                    a1 = u64 [sp]
 22108: 82 17 08                 a0 = u64 [sp + 0x8]
 22111: 51 08 14                 jump @1662 if a1 == 0
      :                          @1659
 22114: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 22124: aa 87 0d                 jump @1663 if a0 == a1
      :                          @1660
 22127: 52 07 18                 jump @1664 if a0 != 0
      :                          @1661
 22130: 00                       trap
      :                          @1662
 22131: 7b 57 08                 u64 [s0 + 0x8] = a0
 22134: 7b 56                    u64 [s0] = s1
 22136: 01                       fallthrough
      :                          @1663
 22137: 82 10 40                 ra = u64 [sp + 0x40]
 22140: 82 15 38                 s0 = u64 [sp + 0x38]
 22143: 82 16 30                 s1 = u64 [sp + 0x30]
 22146: 95 11 48                 sp = sp + 0x48
 22149: 32 00                    ret
      :                          @1664
 22151: 00                       trap
      :                          @1665 [@dyn 231]
 22152: 82 7a 08                 a3 = u64 [a0 + 0x8]
 22155: 82 79 10                 a2 = u64 [a0 + 0x10]
 22158: 64 87                    a0 = a1
 22160: 64 a8                    a1 = a3
 22162: 28 9c b9 02              jump @13770
      :                          @1666
 22166: 82 9a                    a3 = u64 [a2]
 22168: 95 ab 90 00              a4 = a3 + 0x90
 22172: ac ab a0 02              jump @1707 if a4 <u a3
      :                          @1667
 22176: 95 b8 08                 a1 = a4 + 0x8
 22179: d8 b8 0c                 a5 = a1 <u a4
 22182: d8 82 08                 a1 = t0 <u a1
 22185: d4 c8 08                 a1 = a1 | a5
 22188: 52 08 90 02              jump @1707 if a1 != 0
      :                          @1668
 22192: c9 b3 08                 a1 = t1 - a4
 22195: c8 28 08                 a1 = a1 + t0
 22198: 84 8c 07                 a5 = a1 & 0x7
 22201: c8 cb 0b                 a4 = a4 + a5
 22204: 01                       fallthrough
      :                          @1669
 22205: 82 95                    s0 = u64 [a2]
 22207: ab a5 d7                 jump @1666 if s0 != a3
      :                          @1670
 22210: 7b 9b                    u64 [a2] = a4
 22212: 01                       fallthrough
      :                          @1671
 22213: 82 19 08                 a2 = u64 [sp + 0x8]
 22216: 82 95 10                 s0 = u64 [a2 + 0x10]
 22219: c9 c8 0b                 a4 = a1 - a5
 22222: 51 05 0f 02              jump @1704 if s0 == 0
      :                          @1672
 22226: 7b 17                    u64 [sp] = a0
 22228: 98 57 3b                 a0 = s0 >> 0x3b
 22231: 52 07 66 02              jump @1708 if a0 != 0
      :                          @1673
 22235: 7b 1b 28                 u64 [sp + 0x28] = a4
 22238: 82 98 08                 a1 = u64 [a2 + 0x8]
 22241: 7b 18 18                 u64 [sp + 0x18] = a1
 22244: 88 76 01                 s1 = a0 <u 0x1
 22247: 7b 15 20                 u64 [sp + 0x20] = s0
 22250: 97 55 04                 s0 = s0 << 0x4
 22253: 97 64 03                 t2 = s1 << 0x3
 22256: 33 03 b0 02 03           t1 = 0x302b0
 22261: 33 02 00 00 10           t0 = 0x100000
 22266: c8 23 09                 a2 = t1 + t0
 22269: 01                       fallthrough
      :                          @1674
 22270: 82 9a                    a3 = u64 [a2]
 22272: c8 5a 0b                 a4 = a3 + s0
 22275: ac ab 38 02              jump @1706 if a4 <u a3
      :                          @1675
 22279: c8 4b 08                 a1 = a4 + t2
 22282: d8 b8 0c                 a5 = a1 <u a4
 22285: d8 82 08                 a1 = t0 <u a1
 22288: d4 c8 08                 a1 = a1 | a5
 22291: 52 08 28 02              jump @1706 if a1 != 0
      :                          @1676
 22295: c9 b3 08                 a1 = t1 - a4
 22298: c8 28 08                 a1 = a1 + t0
 22301: 84 8c 07                 a5 = a1 & 0x7
 22304: c8 cb 0b                 a4 = a4 + a5
 22307: 01                       fallthrough
      :                          @1677
 22308: 82 97                    a0 = u64 [a2]
 22310: ab a7 d8                 jump @1674 if a0 != a3
      :                          @1678
 22313: 7b 9b                    u64 [a2] = a4
 22315: c9 c8 06                 s1 = a1 - a5
 22318: 64 67                    a0 = s1
 22320: 82 18 18                 a1 = u64 [sp + 0x18]
 22323: 64 59                    a2 = s0
 22325: 7b 14 10                 u64 [sp + 0x10] = t2
 22328: 50 20 d0 01 a8 b2 02     ra = 464, jump @13635
      :                          @1679 [@dyn 232]
 22335: 82 14 10                 t2 = u64 [sp + 0x10]
 22338: 82 17 28                 a0 = u64 [sp + 0x28]
 22341: 82 18 20                 a1 = u64 [sp + 0x20]
 22344: 7b 78                    u64 [a0] = a1
 22346: 7b 76 08                 u64 [a0 + 0x8] = s1
 22349: 7b 78 10                 u64 [a0 + 0x10] = a1
 22352: 33 07 b0 02 03           a0 = 0x302b0
 22357: 33 03 b0 02 03           t1 = 0x302b0
 22362: 33 02 00 00 10           t0 = 0x100000
 22367: c8 23 09                 a2 = t1 + t0
 22370: 01                       fallthrough
      :                          @1680
 22371: 82 9a                    a3 = u64 [a2]
 22373: c8 5a 0b                 a4 = a3 + s0
 22376: ac ab d3 01              jump @1706 if a4 <u a3
      :                          @1681
 22380: c8 4b 08                 a1 = a4 + t2
 22383: d8 b8 0c                 a5 = a1 <u a4
 22386: d8 82 08                 a1 = t0 <u a1
 22389: d4 c8 08                 a1 = a1 | a5
 22392: 52 08 c3 01              jump @1706 if a1 != 0
      :                          @1682
 22396: c9 b3 08                 a1 = t1 - a4
 22399: c8 28 08                 a1 = a1 + t0
 22402: 84 8c 07                 a5 = a1 & 0x7
 22405: c8 cb 0b                 a4 = a4 + a5
 22408: 01                       fallthrough
      :                          @1683
 22409: 82 96                    s1 = u64 [a2]
 22411: ab a6 d8                 jump @1680 if s1 != a3
      :                          @1684
 22414: 7b 9b                    u64 [a2] = a4
 22416: c9 c8 06                 s1 = a1 - a5
 22419: 64 67                    a0 = s1
 22421: 82 18 18                 a1 = u64 [sp + 0x18]
 22424: 64 59                    a2 = s0
 22426: 50 20 d2 01 46 b2 02     ra = 466, jump @13635
      :                          @1685 [@dyn 233]
 22433: 82 14 10                 t2 = u64 [sp + 0x10]
 22436: 82 17 28                 a0 = u64 [sp + 0x28]
 22439: 82 18 20                 a1 = u64 [sp + 0x20]
 22442: 7b 78 18                 u64 [a0 + 0x18] = a1
 22445: 7b 76 20                 u64 [a0 + 0x20] = s1
 22448: 7b 78 28                 u64 [a0 + 0x28] = a1
 22451: 33 07 b0 02 03           a0 = 0x302b0
 22456: 33 03 b0 02 03           t1 = 0x302b0
 22461: 33 02 00 00 10           t0 = 0x100000
 22466: c8 23 09                 a2 = t1 + t0
 22469: 01                       fallthrough
      :                          @1686
 22470: 82 9a                    a3 = u64 [a2]
 22472: c8 5a 0b                 a4 = a3 + s0
 22475: ac ab 70 01              jump @1706 if a4 <u a3
      :                          @1687
 22479: c8 4b 08                 a1 = a4 + t2
 22482: d8 b8 0c                 a5 = a1 <u a4
 22485: d8 82 08                 a1 = t0 <u a1
 22488: d4 c8 08                 a1 = a1 | a5
 22491: 52 08 60 01              jump @1706 if a1 != 0
      :                          @1688
 22495: c9 b3 08                 a1 = t1 - a4
 22498: c8 28 08                 a1 = a1 + t0
 22501: 84 8c 07                 a5 = a1 & 0x7
 22504: c8 cb 0b                 a4 = a4 + a5
 22507: 01                       fallthrough
      :                          @1689
 22508: 82 96                    s1 = u64 [a2]
 22510: ab a6 d8                 jump @1686 if s1 != a3
      :                          @1690
 22513: 7b 9b                    u64 [a2] = a4
 22515: c9 c8 06                 s1 = a1 - a5
 22518: 64 67                    a0 = s1
 22520: 82 18 18                 a1 = u64 [sp + 0x18]
 22523: 64 59                    a2 = s0
 22525: 50 20 d4 01 e3 b1 02     ra = 468, jump @13635
      :                          @1691 [@dyn 234]
 22532: 82 14 10                 t2 = u64 [sp + 0x10]
 22535: 82 17 28                 a0 = u64 [sp + 0x28]
 22538: 82 18 20                 a1 = u64 [sp + 0x20]
 22541: 7b 78 30                 u64 [a0 + 0x30] = a1
 22544: 7b 76 38                 u64 [a0 + 0x38] = s1
 22547: 7b 78 40                 u64 [a0 + 0x40] = a1
 22550: 33 07 b0 02 03           a0 = 0x302b0
 22555: 33 03 b0 02 03           t1 = 0x302b0
 22560: 33 02 00 00 10           t0 = 0x100000
 22565: c8 23 09                 a2 = t1 + t0
 22568: 01                       fallthrough
      :                          @1692
 22569: 82 9a                    a3 = u64 [a2]
 22571: c8 5a 0b                 a4 = a3 + s0
 22574: ac ab 0d 01              jump @1706 if a4 <u a3
      :                          @1693
 22578: c8 4b 08                 a1 = a4 + t2
 22581: d8 b8 0c                 a5 = a1 <u a4
 22584: d8 82 08                 a1 = t0 <u a1
 22587: d4 c8 08                 a1 = a1 | a5
 22590: 52 08 fd 00              jump @1706 if a1 != 0
      :                          @1694
 22594: c9 b3 08                 a1 = t1 - a4
 22597: c8 28 08                 a1 = a1 + t0
 22600: 84 8c 07                 a5 = a1 & 0x7
 22603: c8 cb 0b                 a4 = a4 + a5
 22606: 01                       fallthrough
      :                          @1695
 22607: 82 96                    s1 = u64 [a2]
 22609: ab a6 d8                 jump @1692 if s1 != a3
      :                          @1696
 22612: 7b 9b                    u64 [a2] = a4
 22614: c9 c8 06                 s1 = a1 - a5
 22617: 64 67                    a0 = s1
 22619: 82 18 18                 a1 = u64 [sp + 0x18]
 22622: 64 59                    a2 = s0
 22624: 50 20 d6 01 80 b1 02     ra = 470, jump @13635
      :                          @1697 [@dyn 235]
 22631: 82 14 10                 t2 = u64 [sp + 0x10]
 22634: 82 17 28                 a0 = u64 [sp + 0x28]
 22637: 82 18 20                 a1 = u64 [sp + 0x20]
 22640: 7b 78 48                 u64 [a0 + 0x48] = a1
 22643: 7b 76 50                 u64 [a0 + 0x50] = s1
 22646: 7b 78 58                 u64 [a0 + 0x58] = a1
 22649: 33 07 b0 02 03           a0 = 0x302b0
 22654: 33 03 b0 02 03           t1 = 0x302b0
 22659: 33 02 00 00 10           t0 = 0x100000
 22664: c8 23 09                 a2 = t1 + t0
 22667: 01                       fallthrough
      :                          @1698
 22668: 82 9a                    a3 = u64 [a2]
 22670: c8 5a 0b                 a4 = a3 + s0
 22673: ac ab aa 00              jump @1706 if a4 <u a3
      :                          @1699
 22677: c8 4b 08                 a1 = a4 + t2
 22680: d8 b8 0c                 a5 = a1 <u a4
 22683: d8 82 08                 a1 = t0 <u a1
 22686: d4 c8 08                 a1 = a1 | a5
 22689: 52 08 9a 00              jump @1706 if a1 != 0
      :                          @1700
 22693: c9 b3 08                 a1 = t1 - a4
 22696: c8 28 08                 a1 = a1 + t0
 22699: 84 8c 07                 a5 = a1 & 0x7
 22702: c8 cb 0b                 a4 = a4 + a5
 22705: 01                       fallthrough
      :                          @1701
 22706: 82 96                    s1 = u64 [a2]
 22708: ab a6 d8                 jump @1698 if s1 != a3
      :                          @1702
 22711: 7b 9b                    u64 [a2] = a4
 22713: c9 c8 06                 s1 = a1 - a5
 22716: 64 67                    a0 = s1
 22718: 82 18 18                 a1 = u64 [sp + 0x18]
 22721: 64 59                    a2 = s0
 22723: 50 20 d8 01 1d b1 02     ra = 472, jump @13635
      :                          @1703 [@dyn 236]
 22730: 82 1b 28                 a4 = u64 [sp + 0x28]
 22733: 82 15 20                 s0 = u64 [sp + 0x20]
 22736: 7b b5 60                 u64 [a4 + 0x60] = s0
 22739: 7b b6 68                 u64 [a4 + 0x68] = s1
 22742: 82 17                    a0 = u64 [sp]
 22744: 82 19 08                 a2 = u64 [sp + 0x8]
 22747: 28 31                    jump @1705
      :                          @1704
 22749: 49 0b                    u64 [a4 + 0] = 0
 22751: 49 1b 08 08              u64 [a4 + 8] = 0x8
 22755: 49 1b 10                 u64 [a4 + 16] = 0
 22758: 49 1b 18                 u64 [a4 + 24] = 0
 22761: 49 1b 20 08              u64 [a4 + 32] = 0x8
 22765: 49 1b 28                 u64 [a4 + 40] = 0
 22768: 49 1b 30                 u64 [a4 + 48] = 0
 22771: 49 1b 38 08              u64 [a4 + 56] = 0x8
 22775: 49 1b 40                 u64 [a4 + 64] = 0
 22778: 49 1b 48                 u64 [a4 + 72] = 0
 22781: 49 1b 50 08              u64 [a4 + 80] = 0x8
 22785: 49 1b 58                 u64 [a4 + 88] = 0
 22788: 49 1b 60                 u64 [a4 + 96] = 0
 22791: 49 1b 68 08              u64 [a4 + 104] = 0x8
 22795: 01                       fallthrough
      :                          @1705
 22796: 82 9a                    a3 = u64 [a2]
 22798: 82 98 08                 a1 = u64 [a2 + 0x8]
 22801: 82 99 10                 a2 = u64 [a2 + 0x10]
 22804: 7b b5 70                 u64 [a4 + 0x70] = s0
 22807: 7b ba 78                 u64 [a4 + 0x78] = a3
 22810: 7b b8 80 00              u64 [a4 + 0x80] = a1
 22814: 7b b9 88 00              u64 [a4 + 0x88] = a2
 22818: 33 08 06                 a1 = 0x6
 22821: 7b 78                    u64 [a0] = a1
 22823: 7b 7b 08                 u64 [a0 + 0x8] = a4
 22826: 7b 78 10                 u64 [a0 + 0x10] = a1
 22829: 82 10 40                 ra = u64 [sp + 0x40]
 22832: 82 15 38                 s0 = u64 [sp + 0x38]
 22835: 82 16 30                 s1 = u64 [sp + 0x30]
 22838: 95 11 48                 sp = sp + 0x48
 22841: 32 00                    ret
      :                          @1706
 22843: 00                       trap
      :                          @1707
 22844: 00                       trap
      :                          @1708
 22845: 00                       trap
      :                          @1709
 22846: 82 9a                    a3 = u64 [a2]
 22848: 95 ab f0 00              a4 = a3 + 0xf0
 22852: ac ab 6a 04              jump @1774 if a4 <u a3
      :                          @1710
 22856: 95 b8 08                 a1 = a4 + 0x8
 22859: d8 b8 0c                 a5 = a1 <u a4
 22862: d8 82 08                 a1 = t0 <u a1
 22865: d4 c8 08                 a1 = a1 | a5
 22868: 52 08 5a 04              jump @1774 if a1 != 0
      :                          @1711
 22872: c9 b3 08                 a1 = t1 - a4
 22875: c8 28 08                 a1 = a1 + t0
 22878: 84 8c 07                 a5 = a1 & 0x7
 22881: c8 cb 0b                 a4 = a4 + a5
 22884: 01                       fallthrough
      :                          @1712
 22885: 82 95                    s0 = u64 [a2]
 22887: ab a5 d7                 jump @1709 if s0 != a3
      :                          @1713
 22890: 7b 9b                    u64 [a2] = a4
 22892: 01                       fallthrough
      :                          @1714
 22893: 82 19 08                 a2 = u64 [sp + 0x8]
 22896: 82 95 10                 s0 = u64 [a2 + 0x10]
 22899: c9 c8 0b                 a4 = a1 - a5
 22902: 51 05 a5 03              jump @1771 if s0 == 0
      :                          @1715
 22906: 7b 17                    u64 [sp] = a0
 22908: 98 57 3b                 a0 = s0 >> 0x3b
 22911: 52 07 30 04              jump @1775 if a0 != 0
      :                          @1716
 22915: 7b 1b 28                 u64 [sp + 0x28] = a4
 22918: 82 98 08                 a1 = u64 [a2 + 0x8]
 22921: 7b 18 18                 u64 [sp + 0x18] = a1
 22924: 88 76 01                 s1 = a0 <u 0x1
 22927: 7b 15 20                 u64 [sp + 0x20] = s0
 22930: 97 55 04                 s0 = s0 << 0x4
 22933: 97 64 03                 t2 = s1 << 0x3
 22936: 33 03 b0 02 03           t1 = 0x302b0
 22941: 33 02 00 00 10           t0 = 0x100000
 22946: c8 23 09                 a2 = t1 + t0
 22949: 01                       fallthrough
      :                          @1717
 22950: 82 9a                    a3 = u64 [a2]
 22952: c8 5a 0b                 a4 = a3 + s0
 22955: ac ab 02 04              jump @1773 if a4 <u a3
      :                          @1718
 22959: c8 4b 08                 a1 = a4 + t2
 22962: d8 b8 0c                 a5 = a1 <u a4
 22965: d8 82 08                 a1 = t0 <u a1
 22968: d4 c8 08                 a1 = a1 | a5
 22971: 52 08 f2 03              jump @1773 if a1 != 0
      :                          @1719
 22975: c9 b3 08                 a1 = t1 - a4
 22978: c8 28 08                 a1 = a1 + t0
 22981: 84 8c 07                 a5 = a1 & 0x7
 22984: c8 cb 0b                 a4 = a4 + a5
 22987: 01                       fallthrough
      :                          @1720
 22988: 82 97                    a0 = u64 [a2]
 22990: ab a7 d8                 jump @1717 if a0 != a3
      :                          @1721
 22993: 7b 9b                    u64 [a2] = a4
 22995: c9 c8 06                 s1 = a1 - a5
 22998: 64 67                    a0 = s1
 23000: 82 18 18                 a1 = u64 [sp + 0x18]
 23003: 64 59                    a2 = s0
 23005: 7b 14 10                 u64 [sp + 0x10] = t2
 23008: 50 20 da 01 00 b0 02     ra = 474, jump @13635
      :                          @1722 [@dyn 237]
 23015: 82 14 10                 t2 = u64 [sp + 0x10]
 23018: 82 17 28                 a0 = u64 [sp + 0x28]
 23021: 82 18 20                 a1 = u64 [sp + 0x20]
 23024: 7b 78                    u64 [a0] = a1
 23026: 7b 76 08                 u64 [a0 + 0x8] = s1
 23029: 7b 78 10                 u64 [a0 + 0x10] = a1
 23032: 33 07 b0 02 03           a0 = 0x302b0
 23037: 33 03 b0 02 03           t1 = 0x302b0
 23042: 33 02 00 00 10           t0 = 0x100000
 23047: c8 23 09                 a2 = t1 + t0
 23050: 01                       fallthrough
      :                          @1723
 23051: 82 9a                    a3 = u64 [a2]
 23053: c8 5a 0b                 a4 = a3 + s0
 23056: ac ab 9d 03              jump @1773 if a4 <u a3
      :                          @1724
 23060: c8 4b 08                 a1 = a4 + t2
 23063: d8 b8 0c                 a5 = a1 <u a4
 23066: d8 82 08                 a1 = t0 <u a1
 23069: d4 c8 08                 a1 = a1 | a5
 23072: 52 08 8d 03              jump @1773 if a1 != 0
      :                          @1725
 23076: c9 b3 08                 a1 = t1 - a4
 23079: c8 28 08                 a1 = a1 + t0
 23082: 84 8c 07                 a5 = a1 & 0x7
 23085: c8 cb 0b                 a4 = a4 + a5
 23088: 01                       fallthrough
      :                          @1726
 23089: 82 96                    s1 = u64 [a2]
 23091: ab a6 d8                 jump @1723 if s1 != a3
      :                          @1727
 23094: 7b 9b                    u64 [a2] = a4
 23096: c9 c8 06                 s1 = a1 - a5
 23099: 64 67                    a0 = s1
 23101: 82 18 18                 a1 = u64 [sp + 0x18]
 23104: 64 59                    a2 = s0
 23106: 50 20 dc 01 9e af 02     ra = 476, jump @13635
      :                          @1728 [@dyn 238]
 23113: 82 14 10                 t2 = u64 [sp + 0x10]
 23116: 82 17 28                 a0 = u64 [sp + 0x28]
 23119: 82 18 20                 a1 = u64 [sp + 0x20]
 23122: 7b 78 18                 u64 [a0 + 0x18] = a1
 23125: 7b 76 20                 u64 [a0 + 0x20] = s1
 23128: 7b 78 28                 u64 [a0 + 0x28] = a1
 23131: 33 07 b0 02 03           a0 = 0x302b0
 23136: 33 03 b0 02 03           t1 = 0x302b0
 23141: 33 02 00 00 10           t0 = 0x100000
 23146: c8 23 09                 a2 = t1 + t0
 23149: 01                       fallthrough
      :                          @1729
 23150: 82 9a                    a3 = u64 [a2]
 23152: c8 5a 0b                 a4 = a3 + s0
 23155: ac ab 3a 03              jump @1773 if a4 <u a3
      :                          @1730
 23159: c8 4b 08                 a1 = a4 + t2
 23162: d8 b8 0c                 a5 = a1 <u a4
 23165: d8 82 08                 a1 = t0 <u a1
 23168: d4 c8 08                 a1 = a1 | a5
 23171: 52 08 2a 03              jump @1773 if a1 != 0
      :                          @1731
 23175: c9 b3 08                 a1 = t1 - a4
 23178: c8 28 08                 a1 = a1 + t0
 23181: 84 8c 07                 a5 = a1 & 0x7
 23184: c8 cb 0b                 a4 = a4 + a5
 23187: 01                       fallthrough
      :                          @1732
 23188: 82 96                    s1 = u64 [a2]
 23190: ab a6 d8                 jump @1729 if s1 != a3
      :                          @1733
 23193: 7b 9b                    u64 [a2] = a4
 23195: c9 c8 06                 s1 = a1 - a5
 23198: 64 67                    a0 = s1
 23200: 82 18 18                 a1 = u64 [sp + 0x18]
 23203: 64 59                    a2 = s0
 23205: 50 20 de 01 3b af 02     ra = 478, jump @13635
      :                          @1734 [@dyn 239]
 23212: 82 14 10                 t2 = u64 [sp + 0x10]
 23215: 82 17 28                 a0 = u64 [sp + 0x28]
 23218: 82 18 20                 a1 = u64 [sp + 0x20]
 23221: 7b 78 30                 u64 [a0 + 0x30] = a1
 23224: 7b 76 38                 u64 [a0 + 0x38] = s1
 23227: 7b 78 40                 u64 [a0 + 0x40] = a1
 23230: 33 07 b0 02 03           a0 = 0x302b0
 23235: 33 03 b0 02 03           t1 = 0x302b0
 23240: 33 02 00 00 10           t0 = 0x100000
 23245: c8 23 09                 a2 = t1 + t0
 23248: 01                       fallthrough
      :                          @1735
 23249: 82 9a                    a3 = u64 [a2]
 23251: c8 5a 0b                 a4 = a3 + s0
 23254: ac ab d7 02              jump @1773 if a4 <u a3
      :                          @1736
 23258: c8 4b 08                 a1 = a4 + t2
 23261: d8 b8 0c                 a5 = a1 <u a4
 23264: d8 82 08                 a1 = t0 <u a1
 23267: d4 c8 08                 a1 = a1 | a5
 23270: 52 08 c7 02              jump @1773 if a1 != 0
      :                          @1737
 23274: c9 b3 08                 a1 = t1 - a4
 23277: c8 28 08                 a1 = a1 + t0
 23280: 84 8c 07                 a5 = a1 & 0x7
 23283: c8 cb 0b                 a4 = a4 + a5
 23286: 01                       fallthrough
      :                          @1738
 23287: 82 96                    s1 = u64 [a2]
 23289: ab a6 d8                 jump @1735 if s1 != a3
      :                          @1739
 23292: 7b 9b                    u64 [a2] = a4
 23294: c9 c8 06                 s1 = a1 - a5
 23297: 64 67                    a0 = s1
 23299: 82 18 18                 a1 = u64 [sp + 0x18]
 23302: 64 59                    a2 = s0
 23304: 50 20 e0 01 d8 ae 02     ra = 480, jump @13635
      :                          @1740 [@dyn 240]
 23311: 82 14 10                 t2 = u64 [sp + 0x10]
 23314: 82 17 28                 a0 = u64 [sp + 0x28]
 23317: 82 18 20                 a1 = u64 [sp + 0x20]
 23320: 7b 78 48                 u64 [a0 + 0x48] = a1
 23323: 7b 76 50                 u64 [a0 + 0x50] = s1
 23326: 7b 78 58                 u64 [a0 + 0x58] = a1
 23329: 33 07 b0 02 03           a0 = 0x302b0
 23334: 33 03 b0 02 03           t1 = 0x302b0
 23339: 33 02 00 00 10           t0 = 0x100000
 23344: c8 23 09                 a2 = t1 + t0
 23347: 01                       fallthrough
      :                          @1741
 23348: 82 9a                    a3 = u64 [a2]
 23350: c8 5a 0b                 a4 = a3 + s0
 23353: ac ab 74 02              jump @1773 if a4 <u a3
      :                          @1742
 23357: c8 4b 08                 a1 = a4 + t2
 23360: d8 b8 0c                 a5 = a1 <u a4
 23363: d8 82 08                 a1 = t0 <u a1
 23366: d4 c8 08                 a1 = a1 | a5
 23369: 52 08 64 02              jump @1773 if a1 != 0
      :                          @1743
 23373: c9 b3 08                 a1 = t1 - a4
 23376: c8 28 08                 a1 = a1 + t0
 23379: 84 8c 07                 a5 = a1 & 0x7
 23382: c8 cb 0b                 a4 = a4 + a5
 23385: 01                       fallthrough
      :                          @1744
 23386: 82 96                    s1 = u64 [a2]
 23388: ab a6 d8                 jump @1741 if s1 != a3
      :                          @1745
 23391: 7b 9b                    u64 [a2] = a4
 23393: c9 c8 06                 s1 = a1 - a5
 23396: 64 67                    a0 = s1
 23398: 82 18 18                 a1 = u64 [sp + 0x18]
 23401: 64 59                    a2 = s0
 23403: 50 20 e2 01 75 ae 02     ra = 482, jump @13635
      :                          @1746 [@dyn 241]
 23410: 82 14 10                 t2 = u64 [sp + 0x10]
 23413: 82 17 28                 a0 = u64 [sp + 0x28]
 23416: 82 18 20                 a1 = u64 [sp + 0x20]
 23419: 7b 78 60                 u64 [a0 + 0x60] = a1
 23422: 7b 76 68                 u64 [a0 + 0x68] = s1
 23425: 7b 78 70                 u64 [a0 + 0x70] = a1
 23428: 33 07 b0 02 03           a0 = 0x302b0
 23433: 33 03 b0 02 03           t1 = 0x302b0
 23438: 33 02 00 00 10           t0 = 0x100000
 23443: c8 23 09                 a2 = t1 + t0
 23446: 01                       fallthrough
      :                          @1747
 23447: 82 9a                    a3 = u64 [a2]
 23449: c8 5a 0b                 a4 = a3 + s0
 23452: ac ab 11 02              jump @1773 if a4 <u a3
      :                          @1748
 23456: c8 4b 08                 a1 = a4 + t2
 23459: d8 b8 0c                 a5 = a1 <u a4
 23462: d8 82 08                 a1 = t0 <u a1
 23465: d4 c8 08                 a1 = a1 | a5
 23468: 52 08 01 02              jump @1773 if a1 != 0
      :                          @1749
 23472: c9 b3 08                 a1 = t1 - a4
 23475: c8 28 08                 a1 = a1 + t0
 23478: 84 8c 07                 a5 = a1 & 0x7
 23481: c8 cb 0b                 a4 = a4 + a5
 23484: 01                       fallthrough
      :                          @1750
 23485: 82 96                    s1 = u64 [a2]
 23487: ab a6 d8                 jump @1747 if s1 != a3
      :                          @1751
 23490: 7b 9b                    u64 [a2] = a4
 23492: c9 c8 06                 s1 = a1 - a5
 23495: 64 67                    a0 = s1
 23497: 82 18 18                 a1 = u64 [sp + 0x18]
 23500: 64 59                    a2 = s0
 23502: 50 20 e4 01 12 ae 02     ra = 484, jump @13635
      :                          @1752 [@dyn 242]
 23509: 82 14 10                 t2 = u64 [sp + 0x10]
 23512: 82 17 28                 a0 = u64 [sp + 0x28]
 23515: 82 18 20                 a1 = u64 [sp + 0x20]
 23518: 7b 78 78                 u64 [a0 + 0x78] = a1
 23521: 7b 76 80 00              u64 [a0 + 0x80] = s1
 23525: 7b 78 88 00              u64 [a0 + 0x88] = a1
 23529: 33 07 b0 02 03           a0 = 0x302b0
 23534: 33 03 b0 02 03           t1 = 0x302b0
 23539: 33 02 00 00 10           t0 = 0x100000
 23544: c8 23 09                 a2 = t1 + t0
 23547: 01                       fallthrough
      :                          @1753
 23548: 82 9a                    a3 = u64 [a2]
 23550: c8 5a 0b                 a4 = a3 + s0
 23553: ac ab ac 01              jump @1773 if a4 <u a3
      :                          @1754
 23557: c8 4b 08                 a1 = a4 + t2
 23560: d8 b8 0c                 a5 = a1 <u a4
 23563: d8 82 08                 a1 = t0 <u a1
 23566: d4 c8 08                 a1 = a1 | a5
 23569: 52 08 9c 01              jump @1773 if a1 != 0
      :                          @1755
 23573: c9 b3 08                 a1 = t1 - a4
 23576: c8 28 08                 a1 = a1 + t0
 23579: 84 8c 07                 a5 = a1 & 0x7
 23582: c8 cb 0b                 a4 = a4 + a5
 23585: 01                       fallthrough
      :                          @1756
 23586: 82 96                    s1 = u64 [a2]
 23588: ab a6 d8                 jump @1753 if s1 != a3
      :                          @1757
 23591: 7b 9b                    u64 [a2] = a4
 23593: c9 c8 06                 s1 = a1 - a5
 23596: 64 67                    a0 = s1
 23598: 82 18 18                 a1 = u64 [sp + 0x18]
 23601: 64 59                    a2 = s0
 23603: 50 20 e6 01 ad ad 02     ra = 486, jump @13635
      :                          @1758 [@dyn 243]
 23610: 82 14 10                 t2 = u64 [sp + 0x10]
 23613: 82 17 28                 a0 = u64 [sp + 0x28]
 23616: 82 18 20                 a1 = u64 [sp + 0x20]
 23619: 7b 78 90 00              u64 [a0 + 0x90] = a1
 23623: 7b 76 98 00              u64 [a0 + 0x98] = s1
 23627: 7b 78 a0 00              u64 [a0 + 0xa0] = a1
 23631: 33 07 b0 02 03           a0 = 0x302b0
 23636: 33 03 b0 02 03           t1 = 0x302b0
 23641: 33 02 00 00 10           t0 = 0x100000
 23646: c8 23 09                 a2 = t1 + t0
 23649: 01                       fallthrough
      :                          @1759
 23650: 82 9a                    a3 = u64 [a2]
 23652: c8 5a 0b                 a4 = a3 + s0
 23655: ac ab 46 01              jump @1773 if a4 <u a3
      :                          @1760
 23659: c8 4b 08                 a1 = a4 + t2
 23662: d8 b8 0c                 a5 = a1 <u a4
 23665: d8 82 08                 a1 = t0 <u a1
 23668: d4 c8 08                 a1 = a1 | a5
 23671: 52 08 36 01              jump @1773 if a1 != 0
      :                          @1761
 23675: c9 b3 08                 a1 = t1 - a4
 23678: c8 28 08                 a1 = a1 + t0
 23681: 84 8c 07                 a5 = a1 & 0x7
 23684: c8 cb 0b                 a4 = a4 + a5
 23687: 01                       fallthrough
      :                          @1762
 23688: 82 96                    s1 = u64 [a2]
 23690: ab a6 d8                 jump @1759 if s1 != a3
      :                          @1763
 23693: 7b 9b                    u64 [a2] = a4
 23695: c9 c8 06                 s1 = a1 - a5
 23698: 64 67                    a0 = s1
 23700: 82 18 18                 a1 = u64 [sp + 0x18]
 23703: 64 59                    a2 = s0
 23705: 50 20 e8 01 47 ad 02     ra = 488, jump @13635
      :                          @1764 [@dyn 244]
 23712: 82 14 10                 t2 = u64 [sp + 0x10]
 23715: 82 17 28                 a0 = u64 [sp + 0x28]
 23718: 82 18 20                 a1 = u64 [sp + 0x20]
 23721: 7b 78 a8 00              u64 [a0 + 0xa8] = a1
 23725: 7b 76 b0 00              u64 [a0 + 0xb0] = s1
 23729: 7b 78 b8 00              u64 [a0 + 0xb8] = a1
 23733: 33 07 b0 02 03           a0 = 0x302b0
 23738: 33 03 b0 02 03           t1 = 0x302b0
 23743: 33 02 00 00 10           t0 = 0x100000
 23748: c8 23 09                 a2 = t1 + t0
 23751: 01                       fallthrough
      :                          @1765
 23752: 82 9a                    a3 = u64 [a2]
 23754: c8 5a 0b                 a4 = a3 + s0
 23757: ac ab e0 00              jump @1773 if a4 <u a3
      :                          @1766
 23761: c8 4b 08                 a1 = a4 + t2
 23764: d8 b8 0c                 a5 = a1 <u a4
 23767: d8 82 08                 a1 = t0 <u a1
 23770: d4 c8 08                 a1 = a1 | a5
 23773: 52 08 d0 00              jump @1773 if a1 != 0
      :                          @1767
 23777: c9 b3 08                 a1 = t1 - a4
 23780: c8 28 08                 a1 = a1 + t0
 23783: 84 8c 07                 a5 = a1 & 0x7
 23786: c8 cb 0b                 a4 = a4 + a5
 23789: 01                       fallthrough
      :                          @1768
 23790: 82 96                    s1 = u64 [a2]
 23792: ab a6 d8                 jump @1765 if s1 != a3
      :                          @1769
 23795: 7b 9b                    u64 [a2] = a4
 23797: c9 c8 06                 s1 = a1 - a5
 23800: 64 67                    a0 = s1
 23802: 82 18 18                 a1 = u64 [sp + 0x18]
 23805: 64 59                    a2 = s0
 23807: 50 20 ea 01 e1 ac 02     ra = 490, jump @13635
      :                          @1770 [@dyn 245]
 23814: 82 1b 28                 a4 = u64 [sp + 0x28]
 23817: 82 15 20                 s0 = u64 [sp + 0x20]
 23820: 7b b5 c0 00              u64 [a4 + 0xc0] = s0
 23824: 7b b6 c8 00              u64 [a4 + 0xc8] = s1
 23828: 82 17                    a0 = u64 [sp]
 23830: 82 19 08                 a2 = u64 [sp + 0x8]
 23833: 28 63                    jump @1772
      :                          @1771
 23835: 49 0b                    u64 [a4 + 0] = 0
 23837: 49 1b 08 08              u64 [a4 + 8] = 0x8
 23841: 49 1b 10                 u64 [a4 + 16] = 0
 23844: 49 1b 18                 u64 [a4 + 24] = 0
 23847: 49 1b 20 08              u64 [a4 + 32] = 0x8
 23851: 49 1b 28                 u64 [a4 + 40] = 0
 23854: 49 1b 30                 u64 [a4 + 48] = 0
 23857: 49 1b 38 08              u64 [a4 + 56] = 0x8
 23861: 49 1b 40                 u64 [a4 + 64] = 0
 23864: 49 1b 48                 u64 [a4 + 72] = 0
 23867: 49 1b 50 08              u64 [a4 + 80] = 0x8
 23871: 49 1b 58                 u64 [a4 + 88] = 0
 23874: 49 1b 60                 u64 [a4 + 96] = 0
 23877: 49 1b 68 08              u64 [a4 + 104] = 0x8
 23881: 49 1b 70                 u64 [a4 + 112] = 0
 23884: 49 1b 78                 u64 [a4 + 120] = 0
 23887: 49 2b 80 00 08           u64 [a4 + 128] = 0x8
 23892: 49 2b 90 00              u64 [a4 + 144] = 0
 23896: 49 2b 88 00              u64 [a4 + 136] = 0
 23900: 49 2b 98 00 08           u64 [a4 + 152] = 0x8
 23905: 49 2b a8 00              u64 [a4 + 168] = 0
 23909: 49 2b a0 00              u64 [a4 + 160] = 0
 23913: 49 2b b0 00 08           u64 [a4 + 176] = 0x8
 23918: 49 2b c0 00              u64 [a4 + 192] = 0
 23922: 49 2b b8 00              u64 [a4 + 184] = 0
 23926: 49 2b c8 00 08           u64 [a4 + 200] = 0x8
 23931: 01                       fallthrough
      :                          @1772
 23932: 82 9a                    a3 = u64 [a2]
 23934: 82 98 08                 a1 = u64 [a2 + 0x8]
 23937: 82 99 10                 a2 = u64 [a2 + 0x10]
 23940: 7b b5 d0 00              u64 [a4 + 0xd0] = s0
 23944: 7b ba d8 00              u64 [a4 + 0xd8] = a3
 23948: 7b b8 e0 00              u64 [a4 + 0xe0] = a1
 23952: 7b b9 e8 00              u64 [a4 + 0xe8] = a2
 23956: 33 08 0a                 a1 = 0xa
 23959: 7b 78                    u64 [a0] = a1
 23961: 7b 7b 08                 u64 [a0 + 0x8] = a4
 23964: 7b 78 10                 u64 [a0 + 0x10] = a1
 23967: 82 10 40                 ra = u64 [sp + 0x40]
 23970: 82 15 38                 s0 = u64 [sp + 0x38]
 23973: 82 16 30                 s1 = u64 [sp + 0x30]
 23976: 95 11 48                 sp = sp + 0x48
 23979: 32 00                    ret
      :                          @1773
 23981: 00                       trap
      :                          @1774
 23982: 00                       trap
      :                          @1775
 23983: 00                       trap
      :                          @1776
 23984: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 23987: 7b 10 18                 u64 [sp + 0x18] = ra
 23990: 7b 15 10                 u64 [sp + 0x10] = s0
 23993: 7b 16 08                 u64 [sp + 0x8] = s1
 23996: 64 85                    s0 = a1
 23998: 7b 17                    u64 [sp] = a0
 24000: 33 09 b0 02 03           a2 = 0x302b0
 24005: 33 07 00 00 10           a0 = 0x100000
 24010: c8 79 09                 a2 = a2 + a0
 24013: 01                       fallthrough
      :                          @1777
 24014: 82 9a                    a3 = u64 [a2]
 24016: c8 5a 08                 a1 = a3 + s0
 24019: ac a8 48                 jump @1782 if a1 <u a3
      :                          @1778
 24022: 95 8b 01                 a4 = a1 + 0x1
 24025: 88 bc 01                 a5 = a4 <u 0x1
 24028: d8 b7 0b                 a4 = a0 <u a4
 24031: d4 cb 0b                 a4 = a4 | a5
 24034: 52 0b 39                 jump @1782 if a4 != 0
      :                          @1779
 24037: 82 9b                    a4 = u64 [a2]
 24039: ab ab e7                 jump @1777 if a4 != a3
      :                          @1780
 24042: 7b 98                    u64 [a2] = a1
 24044: 33 0c                    a5 = 0
 24046: 33 06 b0 02 13           s1 = 0x1302b0
 24051: c9 86 06                 s1 = s1 - a1
 24054: 64 67                    a0 = s1
 24056: 33 08                    a1 = 0
 24058: 64 59                    a2 = s0
 24060: 50 20 ec 01 11 ae 02     ra = 492, jump @13689
      :                          @1781 [@dyn 246]
 24067: 82 17                    a0 = u64 [sp]
 24069: 7b 75                    u64 [a0] = s0
 24071: 7b 76 08                 u64 [a0 + 0x8] = s1
 24074: 7b 75 10                 u64 [a0 + 0x10] = s0
 24077: 82 10 18                 ra = u64 [sp + 0x18]
 24080: 82 15 10                 s0 = u64 [sp + 0x10]
 24083: 82 16 08                 s1 = u64 [sp + 0x8]
 24086: 95 11 20                 sp = sp + 0x20
 24089: 32 00                    ret
      :                          @1782
 24091: 00                       trap
      :                          @1783
 24092: 95 11 90                 sp = sp + 0xffffffffffffff90
 24095: 7b 10 68                 u64 [sp + 0x68] = ra
 24098: 7b 15 60                 u64 [sp + 0x60] = s0
 24101: 7b 16 58                 u64 [sp + 0x58] = s1
 24104: 64 70                    ra = a0
 24106: 51 09 27 01              jump @1803 if a2 == 0
      :                          @1784
 24110: 7b 18 10                 u64 [sp + 0x10] = a1
 24113: 3a 07 18 00 03           a0 = u64 [0x30018]
 24118: ae 79 a4 01              jump @1818 if a2 >=u a0
      :                          @1785
 24122: d8 79 02                 t0 = a2 <u a0
 24125: 7b 19 30                 u64 [sp + 0x30] = a2
 24128: 96 97 18                 a0 = a2 * 0x18
 24131: 97 22 03                 t0 = t0 << 0x3
 24134: 33 04 b0 02 03           t2 = 0x302b0
 24139: 33 03 00 00 10           t1 = 0x100000
 24144: c8 34 0b                 a4 = t2 + t1
 24147: 01                       fallthrough
      :                          @1786
 24148: 82 b6                    s1 = u64 [a4]
 24150: c8 76 0c                 a5 = s1 + a0
 24153: ac 6c 80 01              jump @1817 if a5 <u s1
      :                          @1787
 24157: c8 2c 0a                 a3 = a5 + t0
 24160: d8 ca 05                 s0 = a3 <u a5
 24163: d8 a3 0a                 a3 = t1 <u a3
 24166: d4 5a 0a                 a3 = a3 | s0
 24169: 52 0a 70 01              jump @1817 if a3 != 0
      :                          @1788
 24173: c9 c4 05                 s0 = t2 - a5
 24176: c8 35 05                 s0 = s0 + t1
 24179: 84 5a 07                 a3 = s0 & 0x7
 24182: c8 ac 0c                 a5 = a5 + a3
 24185: 01                       fallthrough
      :                          @1789
 24186: 82 b8                    a1 = u64 [a4]
 24188: ab 68 d8                 jump @1786 if a1 != s1
      :                          @1790
 24191: 7b bc                    u64 [a4] = a5
 24193: 01                       fallthrough
      :                          @1791
 24194: c9 a5 0c                 a5 = s0 - a3
 24197: 33 07 01                 a0 = 0x1
 24200: 64 c2                    t0 = a5
 24202: 82 19 30                 a2 = u64 [sp + 0x30]
 24205: 82 1a 10                 a3 = u64 [sp + 0x10]
 24208: 53 19 02 22 01           jump @1815 if a2 <u 2
      :                          @1792
 24213: 82 a3 10                 t1 = u64 [a3 + 0x10]
 24216: 51 03 fd 00              jump @1812 if t1 == 0
      :                          @1793
 24220: 7b 10 08                 u64 [sp + 0x8] = ra
 24223: 98 37 3c                 a0 = t1 >> 0x3c
 24226: 52 07 38 01              jump @1818 if a0 != 0
      :                          @1794
 24230: 82 a8 08                 a1 = u64 [a3 + 0x8]
 24233: 7b 18 20                 u64 [sp + 0x20] = a1
 24236: 88 77 01                 a0 = a0 <u 0x1
 24239: 97 36 03                 s1 = t1 << 0x3
 24242: 97 74 03                 t2 = a0 << 0x3
 24245: 33 05 b0 02 03           s0 = 0x302b0
 24250: 7b 15 50                 u64 [sp + 0x50] = s0
 24253: 95 55 00 00 10           s0 = s0 + 0x100000
 24258: 7b 1c                    u64 [sp] = a5
 24260: 64 c2                    t0 = a5
 24262: 7b 13 28                 u64 [sp + 0x28] = t1
 24265: 7b 14 18                 u64 [sp + 0x18] = t2
 24268: 33 00 02                 ra = 0x2
 24271: 28 06                    jump @1796
      :                          @1795
 24273: 95 00 01                 ra = ra + 0x1
 24276: 01                       fallthrough
      :                          @1796
 24277: 82 57                    a0 = u64 [s0]
 24279: c8 67 08                 a1 = a0 + s1
 24282: ac 78 af b9 02           jump @13937 if a1 <u a0
      :                          @1797
 24287: c8 48 09                 a2 = a1 + t2
 24290: d8 89 0a                 a3 = a2 <u a1
 24293: 8e 99 00 00 10           a2 = a2 >u 0x100000
 24298: d4 a9 09                 a2 = a2 | a3
 24301: 52 09 9c b9 02           jump @13937 if a2 != 0
      :                          @1798
 24306: 82 19 50                 a2 = u64 [sp + 0x50]
 24309: c9 89 09                 a2 = a2 - a1
 24312: 95 99 00 00 10           a2 = a2 + 0x100000
 24317: 84 9a 07                 a3 = a2 & 0x7
 24320: c8 a8 08                 a1 = a1 + a3
 24323: 01                       fallthrough
      :                          @1799
 24324: 82 5b                    a4 = u64 [s0]
 24326: ab 7b cf                 jump @1796 if a4 != a0
      :                          @1800
 24329: 7b 58                    u64 [s0] = a1
 24331: 33 0c                    a5 = 0
 24333: c9 a9 07                 a0 = a2 - a3
 24336: 7b 17 38                 u64 [sp + 0x38] = a0
 24339: 82 18 20                 a1 = u64 [sp + 0x20]
 24342: 64 69                    a2 = s1
 24344: 7b 12 48                 u64 [sp + 0x48] = t0
 24347: 7b 10 40                 u64 [sp + 0x40] = ra
 24350: 50 20 ee 01 c2 aa 02     ra = 494, jump @13635
      :                          @1801 [@dyn 247]
 24357: 82 10 40                 ra = u64 [sp + 0x40]
 24360: 82 14 18                 t2 = u64 [sp + 0x18]
 24363: 82 13 28                 t1 = u64 [sp + 0x28]
 24366: 82 12 48                 t0 = u64 [sp + 0x48]
 24369: 82 19 30                 a2 = u64 [sp + 0x30]
 24372: 7b 23                    u64 [t0] = t1
 24374: 82 17 38                 a0 = u64 [sp + 0x38]
 24377: 7b 27 08                 u64 [t0 + 0x8] = a0
 24380: 7b 23 10                 u64 [t0 + 0x10] = t1
 24383: 95 22 18                 t0 = t0 + 0x18
 24386: ab 90 8f                 jump @1795 if ra != a2
      :                          @1802
 24389: 64 97                    a0 = a2
 24391: 82 10 08                 ra = u64 [sp + 0x8]
 24394: 82 1c                    a5 = u64 [sp]
 24396: 82 1a 10                 a3 = u64 [sp + 0x10]
 24399: 28 63                    jump @1815
      :                          @1803
 24401: 82 8a                    a3 = u64 [a1]
 24403: 33 0c 08                 a5 = 0x8
 24406: 51 0a 09                 jump @1805 if a3 == 0
      :                          @1804
 24409: 54 3a 00 00 02 0a        jump @1806 if a3 <=u 131072
      :                          @1805
 24415: 33 07                    a0 = 0
 24417: 28 62                    jump @1816
      :                          @1806
 24419: 82 87 08                 a0 = u64 [a1 + 0x8]
 24422: 97 a8 03                 a1 = a3 << 0x3
 24425: 33 05 b0 02 03           s0 = 0x302b0
 24430: 95 55 00 00 10           s0 = s0 + 0x100000
 24435: 01                       fallthrough
      :                          @1807
 24436: 82 5a                    a3 = u64 [s0]
 24438: c9 a5 0b                 a4 = s0 - a3
 24441: ab 7b 15                 jump @1811 if a4 != a0
      :                          @1808
 24444: c9 8a 0b                 a4 = a3 - a1
 24447: 01                       fallthrough
      :                          @1809
 24448: 82 5c                    a5 = u64 [s0]
 24450: ab ac f2                 jump @1807 if a5 != a3
      :                          @1810
 24453: 7b 5b                    u64 [s0] = a4
 24455: 33 07                    a0 = 0
 24457: 33 0c 08                 a5 = 0x8
 24460: 28 37                    jump @1816
      :                          @1811
 24462: 33 07                    a0 = 0
 24464: 33 0c 08                 a5 = 0x8
 24467: 28 30                    jump @1816
      :                          @1812
 24469: 95 97 ff                 a0 = a2 + 0xffffffffffffffff
 24472: 33 08 08                 a1 = 0x8
 24475: 64 c2                    t0 = a5
 24477: 01                       fallthrough
      :                          @1813
 24478: 49 02                    u64 [t0 + 0] = 0
 24480: 7b 28 08                 u64 [t0 + 0x8] = a1
 24483: 49 12 10                 u64 [t0 + 16] = 0
 24486: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 24489: 95 22 18                 t0 = t0 + 0x18
 24492: 52 07 f2                 jump @1813 if a0 != 0
      :                          @1814
 24495: 64 97                    a0 = a2
 24497: 01                       fallthrough
      :                          @1815
 24498: 82 a8 10                 a1 = u64 [a3 + 0x10]
 24501: 82 ab 08                 a4 = u64 [a3 + 0x8]
 24504: 82 aa                    a3 = u64 [a3]
 24506: 7b 28 10                 u64 [t0 + 0x10] = a1
 24509: 7b 2b 08                 u64 [t0 + 0x8] = a4
 24512: 7b 2a                    u64 [t0] = a3
 24514: 01                       fallthrough
      :                          @1816
 24515: 7b 09                    u64 [ra] = a2
 24517: 7b 0c 08                 u64 [ra + 0x8] = a5
 24520: 7b 07 10                 u64 [ra + 0x10] = a0
 24523: 82 10 68                 ra = u64 [sp + 0x68]
 24526: 82 15 60                 s0 = u64 [sp + 0x60]
 24529: 82 16 58                 s1 = u64 [sp + 0x58]
 24532: 95 11 70                 sp = sp + 0x70
 24535: 32 00                    ret
      :                          @1817
 24537: 00                       trap
      :                          @1818
 24538: 00                       trap
      :                          @1819
 24539: 82 9a                    a3 = u64 [a2]
 24541: 95 ab f0 00              a4 = a3 + 0xf0
 24545: ac ab 0f 04              jump @1875 if a4 <u a3
      :                          @1820
 24549: 95 b8 08                 a1 = a4 + 0x8
 24552: d8 b8 0c                 a5 = a1 <u a4
 24555: d8 82 08                 a1 = t0 <u a1
 24558: d4 c8 08                 a1 = a1 | a5
 24561: 52 08 ff 03              jump @1875 if a1 != 0
      :                          @1821
 24565: c9 b7 08                 a1 = a0 - a4
 24568: c8 28 08                 a1 = a1 + t0
 24571: 84 8c 07                 a5 = a1 & 0x7
 24574: c8 cb 0b                 a4 = a4 + a5
 24577: 01                       fallthrough
      :                          @1822
 24578: 82 95                    s0 = u64 [a2]
 24580: ab a5 d7                 jump @1819 if s0 != a3
      :                          @1823
 24583: 7b 9b                    u64 [a2] = a4
 24585: 01                       fallthrough
      :                          @1824
 24586: 82 19 18                 a2 = u64 [sp + 0x18]
 24589: 82 95 10                 s0 = u64 [a2 + 0x10]
 24592: c9 c8 0b                 a4 = a1 - a5
 24595: 51 05 47 03              jump @1872 if s0 == 0
      :                          @1825
 24599: 57 05 da 03              jump @1876 if s0 <s 0
      :                          @1826
 24603: 7b 1b 28                 u64 [sp + 0x28] = a4
 24606: 82 97 08                 a0 = u64 [a2 + 0x8]
 24609: 7b 17 20                 u64 [sp + 0x20] = a0
 24612: 85 56 ff                 s1 = s0 ^ 0xffffffffffffffff
 24615: 98 66 3f                 s1 = s1 >> 0x3f
 24618: 33 09 b0 02 03           a2 = 0x302b0
 24623: 33 08 00 00 10           a1 = 0x100000
 24628: c8 89 09                 a2 = a2 + a1
 24631: 01                       fallthrough
      :                          @1827
 24632: 82 9a                    a3 = u64 [a2]
 24634: c8 5a 07                 a0 = a3 + s0
 24637: ac a7 b2 03              jump @1874 if a0 <u a3
      :                          @1828
 24641: c8 67 0b                 a4 = a0 + s1
 24644: d8 7b 0c                 a5 = a4 <u a0
 24647: d8 b8 0b                 a4 = a1 <u a4
 24650: d4 cb 0b                 a4 = a4 | a5
 24653: 52 0b a2 03              jump @1874 if a4 != 0
      :                          @1829
 24657: 82 9b                    a4 = u64 [a2]
 24659: ab ab e5                 jump @1827 if a4 != a3
      :                          @1830
 24662: 7b 97                    u64 [a2] = a0
 24664: 33 0c                    a5 = 0
 24666: 33 09 b0 02 03           a2 = 0x302b0
 24671: 7b 19 08                 u64 [sp + 0x8] = a2
 24674: 95 98 00 00 10           a1 = a2 + 0x100000
 24679: c9 78 07                 a0 = a1 - a0
 24682: 7b 17                    u64 [sp] = a0
 24684: 82 18 20                 a1 = u64 [sp + 0x20]
 24687: 64 59                    a2 = s0
 24689: 50 20 f0 01 6f a9 02     ra = 496, jump @13635
      :                          @1831 [@dyn 248]
 24696: 33 0c 00 00 10           a5 = 0x100000
 24701: 82 17 28                 a0 = u64 [sp + 0x28]
 24704: 7b 75                    u64 [a0] = s0
 24706: 82 18                    a1 = u64 [sp]
 24708: 7b 78 08                 u64 [a0 + 0x8] = a1
 24711: 7b 75 10                 u64 [a0 + 0x10] = s0
 24714: 82 18 08                 a1 = u64 [sp + 0x8]
 24717: c8 c8 08                 a1 = a1 + a5
 24720: 01                       fallthrough
      :                          @1832
 24721: 82 89                    a2 = u64 [a1]
 24723: c8 59 07                 a0 = a2 + s0
 24726: ac 97 59 03              jump @1874 if a0 <u a2
      :                          @1833
 24730: c8 67 0a                 a3 = a0 + s1
 24733: d8 7a 0b                 a4 = a3 <u a0
 24736: d8 ac 0a                 a3 = a5 <u a3
 24739: d4 ba 0a                 a3 = a3 | a4
 24742: 52 0a 49 03              jump @1874 if a3 != 0
      :                          @1834
 24746: 82 8a                    a3 = u64 [a1]
 24748: ab 9a e5                 jump @1832 if a3 != a2
      :                          @1835
 24751: 7b 87                    u64 [a1] = a0
 24753: 33 0b                    a4 = 0
 24755: 33 09 b0 02 03           a2 = 0x302b0
 24760: 7b 19 08                 u64 [sp + 0x8] = a2
 24763: 95 98 00 00 10           a1 = a2 + 0x100000
 24768: c9 78 07                 a0 = a1 - a0
 24771: 7b 17                    u64 [sp] = a0
 24773: 82 18 20                 a1 = u64 [sp + 0x20]
 24776: 64 59                    a2 = s0
 24778: 50 20 f2 01 16 a9 02     ra = 498, jump @13635
      :                          @1836 [@dyn 249]
 24785: 33 0c 00 00 10           a5 = 0x100000
 24790: 82 17 28                 a0 = u64 [sp + 0x28]
 24793: 7b 75 18                 u64 [a0 + 0x18] = s0
 24796: 82 18                    a1 = u64 [sp]
 24798: 7b 78 20                 u64 [a0 + 0x20] = a1
 24801: 7b 75 28                 u64 [a0 + 0x28] = s0
 24804: 82 18 08                 a1 = u64 [sp + 0x8]
 24807: c8 c8 08                 a1 = a1 + a5
 24810: 01                       fallthrough
      :                          @1837
 24811: 82 89                    a2 = u64 [a1]
 24813: c8 59 07                 a0 = a2 + s0
 24816: ac 97 ff 02              jump @1874 if a0 <u a2
      :                          @1838
 24820: c8 67 0a                 a3 = a0 + s1
 24823: d8 7a 0b                 a4 = a3 <u a0
 24826: d8 ac 0a                 a3 = a5 <u a3
 24829: d4 ba 0a                 a3 = a3 | a4
 24832: 52 0a ef 02              jump @1874 if a3 != 0
      :                          @1839
 24836: 82 8a                    a3 = u64 [a1]
 24838: ab 9a e5                 jump @1837 if a3 != a2
      :                          @1840
 24841: 7b 87                    u64 [a1] = a0
 24843: 33 0b                    a4 = 0
 24845: 33 09 b0 02 03           a2 = 0x302b0
 24850: 7b 19 08                 u64 [sp + 0x8] = a2
 24853: 95 98 00 00 10           a1 = a2 + 0x100000
 24858: c9 78 07                 a0 = a1 - a0
 24861: 7b 17                    u64 [sp] = a0
 24863: 82 18 20                 a1 = u64 [sp + 0x20]
 24866: 64 59                    a2 = s0
 24868: 50 20 f4 01 bc a8 02     ra = 500, jump @13635
      :                          @1841 [@dyn 250]
 24875: 33 0c 00 00 10           a5 = 0x100000
 24880: 82 17 28                 a0 = u64 [sp + 0x28]
 24883: 7b 75 30                 u64 [a0 + 0x30] = s0
 24886: 82 18                    a1 = u64 [sp]
 24888: 7b 78 38                 u64 [a0 + 0x38] = a1
 24891: 7b 75 40                 u64 [a0 + 0x40] = s0
 24894: 82 18 08                 a1 = u64 [sp + 0x8]
 24897: c8 c8 08                 a1 = a1 + a5
 24900: 01                       fallthrough
      :                          @1842
 24901: 82 89                    a2 = u64 [a1]
 24903: c8 59 07                 a0 = a2 + s0
 24906: ac 97 a5 02              jump @1874 if a0 <u a2
      :                          @1843
 24910: c8 67 0a                 a3 = a0 + s1
 24913: d8 7a 0b                 a4 = a3 <u a0
 24916: d8 ac 0a                 a3 = a5 <u a3
 24919: d4 ba 0a                 a3 = a3 | a4
 24922: 52 0a 95 02              jump @1874 if a3 != 0
      :                          @1844
 24926: 82 8a                    a3 = u64 [a1]
 24928: ab 9a e5                 jump @1842 if a3 != a2
      :                          @1845
 24931: 7b 87                    u64 [a1] = a0
 24933: 33 0b                    a4 = 0
 24935: 33 09 b0 02 03           a2 = 0x302b0
 24940: 7b 19 08                 u64 [sp + 0x8] = a2
 24943: 95 98 00 00 10           a1 = a2 + 0x100000
 24948: c9 78 07                 a0 = a1 - a0
 24951: 7b 17                    u64 [sp] = a0
 24953: 82 18 20                 a1 = u64 [sp + 0x20]
 24956: 64 59                    a2 = s0
 24958: 50 20 f6 01 62 a8 02     ra = 502, jump @13635
      :                          @1846 [@dyn 251]
 24965: 33 0c 00 00 10           a5 = 0x100000
 24970: 82 17 28                 a0 = u64 [sp + 0x28]
 24973: 7b 75 48                 u64 [a0 + 0x48] = s0
 24976: 82 18                    a1 = u64 [sp]
 24978: 7b 78 50                 u64 [a0 + 0x50] = a1
 24981: 7b 75 58                 u64 [a0 + 0x58] = s0
 24984: 82 18 08                 a1 = u64 [sp + 0x8]
 24987: c8 c8 08                 a1 = a1 + a5
 24990: 01                       fallthrough
      :                          @1847
 24991: 82 89                    a2 = u64 [a1]
 24993: c8 59 07                 a0 = a2 + s0
 24996: ac 97 4b 02              jump @1874 if a0 <u a2
      :                          @1848
 25000: c8 67 0a                 a3 = a0 + s1
 25003: d8 7a 0b                 a4 = a3 <u a0
 25006: d8 ac 0a                 a3 = a5 <u a3
 25009: d4 ba 0a                 a3 = a3 | a4
 25012: 52 0a 3b 02              jump @1874 if a3 != 0
      :                          @1849
 25016: 82 8a                    a3 = u64 [a1]
 25018: ab 9a e5                 jump @1847 if a3 != a2
      :                          @1850
 25021: 7b 87                    u64 [a1] = a0
 25023: 33 0b                    a4 = 0
 25025: 33 09 b0 02 03           a2 = 0x302b0
 25030: 7b 19 08                 u64 [sp + 0x8] = a2
 25033: 95 98 00 00 10           a1 = a2 + 0x100000
 25038: c9 78 07                 a0 = a1 - a0
 25041: 7b 17                    u64 [sp] = a0
 25043: 82 18 20                 a1 = u64 [sp + 0x20]
 25046: 64 59                    a2 = s0
 25048: 50 20 f8 01 08 a8 02     ra = 504, jump @13635
      :                          @1851 [@dyn 252]
 25055: 33 0c 00 00 10           a5 = 0x100000
 25060: 82 17 28                 a0 = u64 [sp + 0x28]
 25063: 7b 75 60                 u64 [a0 + 0x60] = s0
 25066: 82 18                    a1 = u64 [sp]
 25068: 7b 78 68                 u64 [a0 + 0x68] = a1
 25071: 7b 75 70                 u64 [a0 + 0x70] = s0
 25074: 82 18 08                 a1 = u64 [sp + 0x8]
 25077: c8 c8 08                 a1 = a1 + a5
 25080: 01                       fallthrough
      :                          @1852
 25081: 82 89                    a2 = u64 [a1]
 25083: c8 59 07                 a0 = a2 + s0
 25086: ac 97 f1 01              jump @1874 if a0 <u a2
      :                          @1853
 25090: c8 67 0a                 a3 = a0 + s1
 25093: d8 7a 0b                 a4 = a3 <u a0
 25096: d8 ac 0a                 a3 = a5 <u a3
 25099: d4 ba 0a                 a3 = a3 | a4
 25102: 52 0a e1 01              jump @1874 if a3 != 0
      :                          @1854
 25106: 82 8a                    a3 = u64 [a1]
 25108: ab 9a e5                 jump @1852 if a3 != a2
      :                          @1855
 25111: 7b 87                    u64 [a1] = a0
 25113: 33 0b                    a4 = 0
 25115: 33 09 b0 02 03           a2 = 0x302b0
 25120: 7b 19 08                 u64 [sp + 0x8] = a2
 25123: 95 98 00 00 10           a1 = a2 + 0x100000
 25128: c9 78 07                 a0 = a1 - a0
 25131: 7b 17                    u64 [sp] = a0
 25133: 82 18 20                 a1 = u64 [sp + 0x20]
 25136: 64 59                    a2 = s0
 25138: 50 20 fa 01 ae a7 02     ra = 506, jump @13635
      :                          @1856 [@dyn 253]
 25145: 33 0c 00 00 10           a5 = 0x100000
 25150: 82 17 28                 a0 = u64 [sp + 0x28]
 25153: 7b 75 78                 u64 [a0 + 0x78] = s0
 25156: 82 18                    a1 = u64 [sp]
 25158: 7b 78 80 00              u64 [a0 + 0x80] = a1
 25162: 7b 75 88 00              u64 [a0 + 0x88] = s0
 25166: 82 18 08                 a1 = u64 [sp + 0x8]
 25169: c8 c8 08                 a1 = a1 + a5
 25172: 01                       fallthrough
      :                          @1857
 25173: 82 89                    a2 = u64 [a1]
 25175: c8 59 07                 a0 = a2 + s0
 25178: ac 97 95 01              jump @1874 if a0 <u a2
      :                          @1858
 25182: c8 67 0a                 a3 = a0 + s1
 25185: d8 7a 0b                 a4 = a3 <u a0
 25188: d8 ac 0a                 a3 = a5 <u a3
 25191: d4 ba 0a                 a3 = a3 | a4
 25194: 52 0a 85 01              jump @1874 if a3 != 0
      :                          @1859
 25198: 82 8a                    a3 = u64 [a1]
 25200: ab 9a e5                 jump @1857 if a3 != a2
      :                          @1860
 25203: 7b 87                    u64 [a1] = a0
 25205: 33 0b                    a4 = 0
 25207: 33 09 b0 02 03           a2 = 0x302b0
 25212: 7b 19 08                 u64 [sp + 0x8] = a2
 25215: 95 98 00 00 10           a1 = a2 + 0x100000
 25220: c9 78 07                 a0 = a1 - a0
 25223: 7b 17                    u64 [sp] = a0
 25225: 82 18 20                 a1 = u64 [sp + 0x20]
 25228: 64 59                    a2 = s0
 25230: 50 20 fc 01 52 a7 02     ra = 508, jump @13635
      :                          @1861 [@dyn 254]
 25237: 33 0c 00 00 10           a5 = 0x100000
 25242: 82 17 28                 a0 = u64 [sp + 0x28]
 25245: 7b 75 90 00              u64 [a0 + 0x90] = s0
 25249: 82 18                    a1 = u64 [sp]
 25251: 7b 78 98 00              u64 [a0 + 0x98] = a1
 25255: 7b 75 a0 00              u64 [a0 + 0xa0] = s0
 25259: 82 18 08                 a1 = u64 [sp + 0x8]
 25262: c8 c8 08                 a1 = a1 + a5
 25265: 01                       fallthrough
      :                          @1862
 25266: 82 89                    a2 = u64 [a1]
 25268: c8 59 07                 a0 = a2 + s0
 25271: ac 97 38 01              jump @1874 if a0 <u a2
      :                          @1863
 25275: c8 67 0a                 a3 = a0 + s1
 25278: d8 7a 0b                 a4 = a3 <u a0
 25281: d8 ac 0a                 a3 = a5 <u a3
 25284: d4 ba 0a                 a3 = a3 | a4
 25287: 52 0a 28 01              jump @1874 if a3 != 0
      :                          @1864
 25291: 82 8a                    a3 = u64 [a1]
 25293: ab 9a e5                 jump @1862 if a3 != a2
      :                          @1865
 25296: 7b 87                    u64 [a1] = a0
 25298: 33 0b                    a4 = 0
 25300: 33 09 b0 02 03           a2 = 0x302b0
 25305: 7b 19 08                 u64 [sp + 0x8] = a2
 25308: 95 98 00 00 10           a1 = a2 + 0x100000
 25313: c9 78 07                 a0 = a1 - a0
 25316: 7b 17                    u64 [sp] = a0
 25318: 82 18 20                 a1 = u64 [sp + 0x20]
 25321: 64 59                    a2 = s0
 25323: 50 20 fe 01 f5 a6 02     ra = 510, jump @13635
      :                          @1866 [@dyn 255]
 25330: 33 0c 00 00 10           a5 = 0x100000
 25335: 82 17 28                 a0 = u64 [sp + 0x28]
 25338: 7b 75 a8 00              u64 [a0 + 0xa8] = s0
 25342: 82 18                    a1 = u64 [sp]
 25344: 7b 78 b0 00              u64 [a0 + 0xb0] = a1
 25348: 7b 75 b8 00              u64 [a0 + 0xb8] = s0
 25352: 82 18 08                 a1 = u64 [sp + 0x8]
 25355: c8 c8 08                 a1 = a1 + a5
 25358: 01                       fallthrough
      :                          @1867
 25359: 82 89                    a2 = u64 [a1]
 25361: c8 59 07                 a0 = a2 + s0
 25364: ac 97 db 00              jump @1874 if a0 <u a2
      :                          @1868
 25368: c8 67 0a                 a3 = a0 + s1
 25371: d8 7a 0b                 a4 = a3 <u a0
 25374: d8 ac 0a                 a3 = a5 <u a3
 25377: d4 ba 0a                 a3 = a3 | a4
 25380: 52 0a cb 00              jump @1874 if a3 != 0
      :                          @1869
 25384: 82 8a                    a3 = u64 [a1]
 25386: ab 9a e5                 jump @1867 if a3 != a2
      :                          @1870
 25389: 7b 87                    u64 [a1] = a0
 25391: 33 0b                    a4 = 0
 25393: 33 08 b0 02 13           a1 = 0x1302b0
 25398: c9 78 06                 s1 = a1 - a0
 25401: 64 67                    a0 = s1
 25403: 82 18 20                 a1 = u64 [sp + 0x20]
 25406: 64 59                    a2 = s0
 25408: 50 20 00 02 a0 a6 02     ra = 512, jump @13635
      :                          @1871 [@dyn 256]
 25415: 82 1b 28                 a4 = u64 [sp + 0x28]
 25418: 7b b5 c0 00              u64 [a4 + 0xc0] = s0
 25422: 7b b6 c8 00              u64 [a4 + 0xc8] = s1
 25426: 82 1a 10                 a3 = u64 [sp + 0x10]
 25429: 82 19 18                 a2 = u64 [sp + 0x18]
 25432: 28 66                    jump @1873
      :                          @1872
 25434: 49 0b                    u64 [a4 + 0] = 0
 25436: 49 1b 08 01              u64 [a4 + 8] = 0x1
 25440: 49 1b 10                 u64 [a4 + 16] = 0
 25443: 49 1b 18                 u64 [a4 + 24] = 0
 25446: 49 1b 20 01              u64 [a4 + 32] = 0x1
 25450: 49 1b 28                 u64 [a4 + 40] = 0
 25453: 49 1b 30                 u64 [a4 + 48] = 0
 25456: 49 1b 38 01              u64 [a4 + 56] = 0x1
 25460: 49 1b 40                 u64 [a4 + 64] = 0
 25463: 49 1b 48                 u64 [a4 + 72] = 0
 25466: 49 1b 50 01              u64 [a4 + 80] = 0x1
 25470: 49 1b 58                 u64 [a4 + 88] = 0
 25473: 49 1b 60                 u64 [a4 + 96] = 0
 25476: 49 1b 68 01              u64 [a4 + 104] = 0x1
 25480: 49 1b 70                 u64 [a4 + 112] = 0
 25483: 49 1b 78                 u64 [a4 + 120] = 0
 25486: 49 2b 80 00 01           u64 [a4 + 128] = 0x1
 25491: 49 2b 90 00              u64 [a4 + 144] = 0
 25495: 49 2b 88 00              u64 [a4 + 136] = 0
 25499: 49 2b 98 00 01           u64 [a4 + 152] = 0x1
 25504: 49 2b a8 00              u64 [a4 + 168] = 0
 25508: 49 2b a0 00              u64 [a4 + 160] = 0
 25512: 49 2b b0 00 01           u64 [a4 + 176] = 0x1
 25517: 49 2b c0 00              u64 [a4 + 192] = 0
 25521: 49 2b b8 00              u64 [a4 + 184] = 0
 25525: 49 2b c8 00 01           u64 [a4 + 200] = 0x1
 25530: 82 1a 10                 a3 = u64 [sp + 0x10]
 25533: 01                       fallthrough
      :                          @1873
 25534: 82 97                    a0 = u64 [a2]
 25536: 82 98 08                 a1 = u64 [a2 + 0x8]
 25539: 82 99 10                 a2 = u64 [a2 + 0x10]
 25542: 7b b5 d0 00              u64 [a4 + 0xd0] = s0
 25546: 7b b7 d8 00              u64 [a4 + 0xd8] = a0
 25550: 7b b8 e0 00              u64 [a4 + 0xe0] = a1
 25554: 7b b9 e8 00              u64 [a4 + 0xe8] = a2
 25558: 33 07 0a                 a0 = 0xa
 25561: 7b a7                    u64 [a3] = a0
 25563: 7b ab 08                 u64 [a3 + 0x8] = a4
 25566: 7b a7 10                 u64 [a3 + 0x10] = a0
 25569: 82 10 40                 ra = u64 [sp + 0x40]
 25572: 82 15 38                 s0 = u64 [sp + 0x38]
 25575: 82 16 30                 s1 = u64 [sp + 0x30]
 25578: 95 11 48                 sp = sp + 0x48
 25581: 32 00                    ret
      :                          @1874
 25583: 00                       trap
      :                          @1875
 25584: 00                       trap
      :                          @1876
 25585: 00                       trap
      :                          @1877
 25586: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 25589: 7b 10 20                 u64 [sp + 0x20] = ra
 25592: 7b 15 18                 u64 [sp + 0x18] = s0
 25595: 7b 16 10                 u64 [sp + 0x10] = s1
 25598: 64 90                    ra = a2
 25600: 7b 17 08                 u64 [sp + 0x8] = a0
 25603: 97 99 03                 a2 = a2 << 0x3
 25606: 51 08 60                 jump @1886 if a1 == 0
      :                          @1878
 25609: 33 03 b0 02 03           t1 = 0x302b0
 25614: 33 02 00 00 10           t0 = 0x100000
 25619: c8 23 04                 t2 = t1 + t0
 25622: 01                       fallthrough
      :                          @1879
 25623: 82 46                    s1 = u64 [t2]
 25625: c8 96 0c                 a5 = s1 + a2
 25628: ac 6c b4 00              jump @1894 if a5 <u s1
      :                          @1880
 25632: 95 c7 08                 a0 = a5 + 0x8
 25635: d8 c7 0a                 a3 = a0 <u a5
 25638: d8 72 07                 a0 = t0 <u a0
 25641: d4 a7 07                 a0 = a0 | a3
 25644: 52 07 a4 00              jump @1894 if a0 != 0
      :                          @1881
 25648: c9 c3 07                 a0 = t1 - a5
 25651: c8 27 07                 a0 = a0 + t0
 25654: 84 7a 07                 a3 = a0 & 0x7
 25657: c8 ac 0c                 a5 = a5 + a3
 25660: 01                       fallthrough
      :                          @1882
 25661: 82 45                    s0 = u64 [t2]
 25663: ab 65 d8                 jump @1879 if s0 != s1
      :                          @1883
 25666: 7b 4c                    u64 [t2] = a5
 25668: 33 0b                    a4 = 0
 25670: c9 a7 07                 a0 = a0 - a3
 25673: 95 09 ff                 a2 = ra + 0xffffffffffffffff
 25676: 64 7a                    a3 = a0
 25678: 01                       fallthrough
      :                          @1884
 25679: 7b a8                    u64 [a3] = a1
 25681: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 25684: 95 aa 08                 a3 = a3 + 0x8
 25687: 52 09 f8                 jump @1884 if a2 != 0
      :                          @1885
 25690: 7b a8                    u64 [a3] = a1
 25692: 82 18 08                 a1 = u64 [sp + 0x8]
 25695: 7b 80                    u64 [a1] = ra
 25697: 7b 87 08                 u64 [a1 + 0x8] = a0
 25700: 28 5b                    jump @1893
      :                          @1886
 25702: 7b 10                    u64 [sp] = ra
 25704: 33 07 b0 02 03           a0 = 0x302b0
 25709: 33 03 b0 02 03           t1 = 0x302b0
 25714: 33 02 00 00 10           t0 = 0x100000
 25719: c8 23 0a                 a3 = t1 + t0
 25722: 01                       fallthrough
      :                          @1887
 25723: 82 ab                    a4 = u64 [a3]
 25725: c8 9b 0c                 a5 = a4 + a2
 25728: ac bc 50                 jump @1894 if a5 <u a4
      :                          @1888
 25731: 95 c8 08                 a1 = a5 + 0x8
 25734: d8 c8 06                 s1 = a1 <u a5
 25737: d8 82 08                 a1 = t0 <u a1
 25740: d4 68 08                 a1 = a1 | s1
 25743: 52 08 41                 jump @1894 if a1 != 0
      :                          @1889
 25746: c9 c3 06                 s1 = t1 - a5
 25749: c8 26 06                 s1 = s1 + t0
 25752: 84 68 07                 a1 = s1 & 0x7
 25755: c8 8c 0c                 a5 = a5 + a1
 25758: 01                       fallthrough
      :                          @1890
 25759: 82 a5                    s0 = u64 [a3]
 25761: ab b5 da                 jump @1887 if s0 != a4
      :                          @1891
 25764: 7b ac                    u64 [a3] = a5
 25766: c9 86 06                 s1 = s1 - a1
 25769: 64 67                    a0 = s1
 25771: 33 08                    a1 = 0
 25773: 50 20 02 02 60 a7 02     ra = 514, jump @13689
      :                          @1892 [@dyn 257]
 25780: 82 10                    ra = u64 [sp]
 25782: 82 18 08                 a1 = u64 [sp + 0x8]
 25785: 7b 80                    u64 [a1] = ra
 25787: 7b 86 08                 u64 [a1 + 0x8] = s1
 25790: 01                       fallthrough
      :                          @1893
 25791: 7b 80 10                 u64 [a1 + 0x10] = ra
 25794: 82 10 20                 ra = u64 [sp + 0x20]
 25797: 82 15 18                 s0 = u64 [sp + 0x18]
 25800: 82 16 10                 s1 = u64 [sp + 0x10]
 25803: 95 11 28                 sp = sp + 0x28
 25806: 32 00                    ret
      :                          @1894
 25808: 00                       trap
      :                          @1895
 25809: 95 11 98                 sp = sp + 0xffffffffffffff98
 25812: 7b 10 60                 u64 [sp + 0x60] = ra
 25815: 7b 15 58                 u64 [sp + 0x58] = s0
 25818: 7b 16 50                 u64 [sp + 0x50] = s1
 25821: 64 70                    ra = a0
 25823: 51 09 14 01              jump @1914 if a2 == 0
      :                          @1896
 25827: 7b 18 10                 u64 [sp + 0x10] = a1
 25830: 3a 07 20 00 03           a0 = u64 [0x30020]
 25835: ae 79 8a 01              jump @1928 if a2 >=u a0
      :                          @1897
 25839: d8 79 02                 t0 = a2 <u a0
 25842: 7b 19 30                 u64 [sp + 0x30] = a2
 25845: 96 97 18                 a0 = a2 * 0x18
 25848: 97 22 03                 t0 = t0 << 0x3
 25851: 33 04 b0 02 03           t2 = 0x302b0
 25856: 33 03 00 00 10           t1 = 0x100000
 25861: c8 34 0b                 a4 = t2 + t1
 25864: 01                       fallthrough
      :                          @1898
 25865: 82 b6                    s1 = u64 [a4]
 25867: c8 76 0c                 a5 = s1 + a0
 25870: ac 6c 66 01              jump @1927 if a5 <u s1
      :                          @1899
 25874: c8 2c 0a                 a3 = a5 + t0
 25877: d8 ca 05                 s0 = a3 <u a5
 25880: d8 a3 0a                 a3 = t1 <u a3
 25883: d4 5a 0a                 a3 = a3 | s0
 25886: 52 0a 56 01              jump @1927 if a3 != 0
      :                          @1900
 25890: c9 c4 05                 s0 = t2 - a5
 25893: c8 35 05                 s0 = s0 + t1
 25896: 84 5a 07                 a3 = s0 & 0x7
 25899: c8 ac 0c                 a5 = a5 + a3
 25902: 01                       fallthrough
      :                          @1901
 25903: 82 b8                    a1 = u64 [a4]
 25905: ab 68 d8                 jump @1898 if a1 != s1
      :                          @1902
 25908: 7b bc                    u64 [a4] = a5
 25910: 01                       fallthrough
      :                          @1903
 25911: c9 a5 05                 s0 = s0 - a3
 25914: 33 07 01                 a0 = 0x1
 25917: 64 53                    t1 = s0
 25919: 82 19 30                 a2 = u64 [sp + 0x30]
 25922: 82 1a 10                 a3 = u64 [sp + 0x10]
 25925: 53 19 02 08 01           jump @1925 if a2 <u 2
      :                          @1904
 25930: 82 ab 10                 a4 = u64 [a3 + 0x10]
 25933: 51 0b e3 00              jump @1922 if a4 == 0
      :                          @1905
 25937: 7b 15 08                 u64 [sp + 0x8] = s0
 25940: 7b 10                    u64 [sp] = ra
 25942: 57 0b 1f 01              jump @1928 if a4 <s 0
      :                          @1906
 25946: 82 a7 08                 a0 = u64 [a3 + 0x8]
 25949: 7b 17 20                 u64 [sp + 0x20] = a0
 25952: 85 b6 ff                 s1 = a4 ^ 0xffffffffffffffff
 25955: 98 66 3f                 s1 = s1 >> 0x3f
 25958: 33 05 b0 02 03           s0 = 0x302b0
 25963: 33 0c 00 00 10           a5 = 0x100000
 25968: 7b 15 18                 u64 [sp + 0x18] = s0
 25971: c8 c5 05                 s0 = s0 + a5
 25974: 82 13 08                 t1 = u64 [sp + 0x8]
 25977: 7b 1b 28                 u64 [sp + 0x28] = a4
 25980: 33 02 02                 t0 = 0x2
 25983: 28 06                    jump @1908
      :                          @1907
 25985: 95 22 01                 t0 = t0 + 0x1
 25988: 01                       fallthrough
      :                          @1908
 25989: 82 58                    a1 = u64 [s0]
 25991: c8 b8 07                 a0 = a1 + a4
 25994: ac 87 ff b2 02           jump @13937 if a0 <u a1
      :                          @1909
 25999: c8 67 09                 a2 = a0 + s1
 26002: d8 79 0a                 a3 = a2 <u a0
 26005: d8 9c 09                 a2 = a5 <u a2
 26008: d4 a9 09                 a2 = a2 | a3
 26011: 52 09 ee b2 02           jump @13937 if a2 != 0
      :                          @1910
 26016: 82 59                    a2 = u64 [s0]
 26018: ab 89 e3                 jump @1908 if a2 != a1
      :                          @1911
 26021: 7b 57                    u64 [s0] = a0
 26023: 82 18 18                 a1 = u64 [sp + 0x18]
 26026: c9 78 07                 a0 = a1 - a0
 26029: c8 c7 07                 a0 = a0 + a5
 26032: 7b 17 38                 u64 [sp + 0x38] = a0
 26035: 82 18 20                 a1 = u64 [sp + 0x20]
 26038: 64 b9                    a2 = a4
 26040: 7b 13 48                 u64 [sp + 0x48] = t1
 26043: 7b 12 40                 u64 [sp + 0x40] = t0
 26046: 50 20 04 02 22 a4 02     ra = 516, jump @13635
      :                          @1912 [@dyn 258]
 26053: 33 0c 00 00 10           a5 = 0x100000
 26058: 82 12 40                 t0 = u64 [sp + 0x40]
 26061: 82 1b 28                 a4 = u64 [sp + 0x28]
 26064: 82 13 48                 t1 = u64 [sp + 0x48]
 26067: 82 19 30                 a2 = u64 [sp + 0x30]
 26070: 7b 3b                    u64 [t1] = a4
 26072: 82 17 38                 a0 = u64 [sp + 0x38]
 26075: 7b 37 08                 u64 [t1 + 0x8] = a0
 26078: 7b 3b 10                 u64 [t1 + 0x10] = a4
 26081: 95 33 18                 t1 = t1 + 0x18
 26084: ab 92 9d                 jump @1907 if t0 != a2
      :                          @1913
 26087: 64 97                    a0 = a2
 26089: 82 10                    ra = u64 [sp]
 26091: 82 15 08                 s0 = u64 [sp + 0x8]
 26094: 82 1a 10                 a3 = u64 [sp + 0x10]
 26097: 28 5c                    jump @1925
      :                          @1914
 26099: 82 87                    a0 = u64 [a1]
 26101: 33 05 08                 s0 = 0x8
 26104: 51 07 66                 jump @1926 if a0 == 0
      :                          @1915
 26107: 56 37 00 00 10 2e        jump @1921 if a0 >u 1048576
      :                          @1916
 26113: 82 88 08                 a1 = u64 [a1 + 0x8]
 26116: 33 0a b0 02 03           a3 = 0x302b0
 26121: 95 a5 00 00 10           s0 = a3 + 0x100000
 26126: 01                       fallthrough
      :                          @1917
 26127: 82 5a                    a3 = u64 [s0]
 26129: c9 a5 0b                 a4 = s0 - a3
 26132: ab 8b 15                 jump @1921 if a4 != a1
      :                          @1918
 26135: c9 7a 0b                 a4 = a3 - a0
 26138: 01                       fallthrough
      :                          @1919
 26139: 82 5c                    a5 = u64 [s0]
 26141: ab ac f2                 jump @1917 if a5 != a3
      :                          @1920
 26144: 7b 5b                    u64 [s0] = a4
 26146: 33 07                    a0 = 0
 26148: 33 05 08                 s0 = 0x8
 26151: 28 37                    jump @1926
      :                          @1921
 26153: 33 07                    a0 = 0
 26155: 33 05 08                 s0 = 0x8
 26158: 28 30                    jump @1926
      :                          @1922
 26160: 95 97 ff                 a0 = a2 + 0xffffffffffffffff
 26163: 33 08 01                 a1 = 0x1
 26166: 64 53                    t1 = s0
 26168: 01                       fallthrough
      :                          @1923
 26169: 49 03                    u64 [t1 + 0] = 0
 26171: 7b 38 08                 u64 [t1 + 0x8] = a1
 26174: 49 13 10                 u64 [t1 + 16] = 0
 26177: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 26180: 95 33 18                 t1 = t1 + 0x18
 26183: 52 07 f2                 jump @1923 if a0 != 0
      :                          @1924
 26186: 64 97                    a0 = a2
 26188: 01                       fallthrough
      :                          @1925
 26189: 82 a8 10                 a1 = u64 [a3 + 0x10]
 26192: 82 ab 08                 a4 = u64 [a3 + 0x8]
 26195: 82 aa                    a3 = u64 [a3]
 26197: 7b 38 10                 u64 [t1 + 0x10] = a1
 26200: 7b 3b 08                 u64 [t1 + 0x8] = a4
 26203: 7b 3a                    u64 [t1] = a3
 26205: 01                       fallthrough
      :                          @1926
 26206: 7b 09                    u64 [ra] = a2
 26208: 7b 05 08                 u64 [ra + 0x8] = s0
 26211: 7b 07 10                 u64 [ra + 0x10] = a0
 26214: 82 10 60                 ra = u64 [sp + 0x60]
 26217: 82 15 58                 s0 = u64 [sp + 0x58]
 26220: 82 16 50                 s1 = u64 [sp + 0x50]
 26223: 95 11 68                 sp = sp + 0x68
 26226: 32 00                    ret
      :                          @1927
 26228: 00                       trap
      :                          @1928
 26229: 00                       trap
      :                          @1929
 26230: 82 9a                    a3 = u64 [a2]
 26232: 95 a8 0a                 a1 = a3 + 0xa
 26235: ac a8 49                 jump @1934 if a1 <u a3
      :                          @1930
 26238: 95 8b 01                 a4 = a1 + 0x1
 26241: 88 bc 01                 a5 = a4 <u 0x1
 26244: d8 b7 0b                 a4 = a0 <u a4
 26247: d4 cb 0b                 a4 = a4 | a5
 26250: 52 0b 3a                 jump @1934 if a4 != 0
      :                          @1931
 26253: 82 9b                    a4 = u64 [a2]
 26255: ab ab e7                 jump @1929 if a4 != a3
      :                          @1932
 26258: 7b 98                    u64 [a2] = a1
 26260: 33 0c                    a5 = 0
 26262: 33 06 b0 02 13           s1 = 0x1302b0
 26267: c9 86 06                 s1 = s1 - a1
 26270: 33 09 0a                 a2 = 0xa
 26273: 64 67                    a0 = s1
 26275: 33 08                    a1 = 0
 26277: 50 20 06 02 68 a5 02     ra = 518, jump @13689
      :                          @1933 [@dyn 259]
 26284: 33 07 0a                 a0 = 0xa
 26287: 7b 57                    u64 [s0] = a0
 26289: 7b 56 08                 u64 [s0 + 0x8] = s1
 26292: 7b 57 10                 u64 [s0 + 0x10] = a0
 26295: 82 10 10                 ra = u64 [sp + 0x10]
 26298: 82 15 08                 s0 = u64 [sp + 0x8]
 26301: 82 16                    s1 = u64 [sp]
 26303: 95 11 18                 sp = sp + 0x18
 26306: 32 00                    ret
      :                          @1934
 26308: 00                       trap
      :                          @1935 [@dyn 260]
 26309: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 26312: 7b 10 38                 u64 [sp + 0x38] = ra
 26315: 7b 15 30                 u64 [sp + 0x30] = s0
 26318: 7b 16 28                 u64 [sp + 0x28] = s1
 26321: 64 86                    s1 = a1
 26323: 82 88 28                 a1 = u64 [a1 + 0x28]
 26326: 82 75 08                 s0 = u64 [a0 + 0x8]
 26329: 82 77 10                 a0 = u64 [a0 + 0x10]
 26332: 7b 17 08                 u64 [sp + 0x8] = a0
 26335: 82 67 20                 a0 = u64 [s1 + 0x20]
 26338: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26341: 33 08 58 30 01           a1 = 0x13058
 26346: 33 09 01                 a2 = 0x1
 26349: b4 a0 02 0a 02           ra = 522, jump [a3]
      :                          @1936 [@dyn 261]
 26354: 7b 16 10                 u64 [sp + 0x10] = s1
 26357: 82 16 08                 s1 = u64 [sp + 0x8]
 26360: 78 17 18                 u8 [sp + 0x18] = a0
 26363: 46 11 19                 u8 [sp + 25] = 0
 26366: 51 06 31                 jump @1941 if s1 == 0
      :                          @1937
 26369: 97 66 04                 s1 = s1 << 0x4
 26372: 33 07 60                 a0 = 0x60
 26375: 7b 17                    u64 [sp] = a0
 26377: 01                       fallthrough
      :                          @1938
 26378: 95 57 10                 a0 = s0 + 0x10
 26381: 7b 17 08                 u64 [sp + 0x8] = a0
 26384: 7b 15 20                 u64 [sp + 0x20] = s0
 26387: 95 17 10                 a0 = sp + 0x10
 26390: 95 18 20                 a1 = sp + 0x20
 26393: 82 19                    a2 = u64 [sp]
 26395: 50 20 0c 02 ab b2 02     ra = 524, jump @13954
      :                          @1939 [@dyn 262]
 26402: 95 66 f0                 s1 = s1 + 0xfffffffffffffff0
 26405: 82 15 08                 s0 = u64 [sp + 0x8]
 26408: 52 06 e2                 jump @1938 if s1 != 0
      :                          @1940
 26411: 7c 17 18                 a0 = u8 [sp + 0x18]
 26414: 01                       fallthrough
      :                          @1941
 26415: 33 08 01                 a1 = 0x1
 26418: 52 07 1f                 jump @1944 if a0 != 0
      :                          @1942
 26421: 82 17 10                 a0 = u64 [sp + 0x10]
 26424: 82 78 28                 a1 = u64 [a0 + 0x28]
 26427: 82 77 20                 a0 = u64 [a0 + 0x20]
 26430: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26433: 33 08 99 30 01           a1 = 0x13099
 26438: 33 09 01                 a2 = 0x1
 26441: b4 a0 02 0e 02           ra = 526, jump [a3]
      :                          @1943 [@dyn 263]
 26446: 64 78                    a1 = a0
 26448: 01                       fallthrough
      :                          @1944
 26449: 64 87                    a0 = a1
 26451: 82 10 38                 ra = u64 [sp + 0x38]
 26454: 82 15 30                 s0 = u64 [sp + 0x30]
 26457: 82 16 28                 s1 = u64 [sp + 0x28]
 26460: 95 11 40                 sp = sp + 0x40
 26463: 32 00                    ret
      :                          @1945 [@dyn 264]
 26465: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 26468: 7b 10 38                 u64 [sp + 0x38] = ra
 26471: 7b 15 30                 u64 [sp + 0x30] = s0
 26474: 7b 16 28                 u64 [sp + 0x28] = s1
 26477: 64 86                    s1 = a1
 26479: 82 88 28                 a1 = u64 [a1 + 0x28]
 26482: 82 75 08                 s0 = u64 [a0 + 0x8]
 26485: 82 77 10                 a0 = u64 [a0 + 0x10]
 26488: 7b 17 08                 u64 [sp + 0x8] = a0
 26491: 82 67 20                 a0 = u64 [s1 + 0x20]
 26494: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26497: 33 08 58 30 01           a1 = 0x13058
 26502: 33 09 01                 a2 = 0x1
 26505: b4 a0 02 12 02           ra = 530, jump [a3]
      :                          @1946 [@dyn 265]
 26510: 7b 16 10                 u64 [sp + 0x10] = s1
 26513: 82 16 08                 s1 = u64 [sp + 0x8]
 26516: 78 17 18                 u8 [sp + 0x18] = a0
 26519: 46 11 19                 u8 [sp + 25] = 0
 26522: 51 06 31                 jump @1951 if s1 == 0
      :                          @1947
 26525: 97 66 04                 s1 = s1 << 0x4
 26528: 33 07 0c                 a0 = 0xc
 26531: 7b 17                    u64 [sp] = a0
 26533: 01                       fallthrough
      :                          @1948
 26534: 95 57 10                 a0 = s0 + 0x10
 26537: 7b 17 08                 u64 [sp + 0x8] = a0
 26540: 7b 15 20                 u64 [sp + 0x20] = s0
 26543: 95 17 10                 a0 = sp + 0x10
 26546: 95 18 20                 a1 = sp + 0x20
 26549: 82 19                    a2 = u64 [sp]
 26551: 50 20 14 02 0f b2 02     ra = 532, jump @13954
      :                          @1949 [@dyn 266]
 26558: 95 66 f0                 s1 = s1 + 0xfffffffffffffff0
 26561: 82 15 08                 s0 = u64 [sp + 0x8]
 26564: 52 06 e2                 jump @1948 if s1 != 0
      :                          @1950
 26567: 7c 17 18                 a0 = u8 [sp + 0x18]
 26570: 01                       fallthrough
      :                          @1951
 26571: 33 08 01                 a1 = 0x1
 26574: 52 07 1f                 jump @1954 if a0 != 0
      :                          @1952
 26577: 82 17 10                 a0 = u64 [sp + 0x10]
 26580: 82 78 28                 a1 = u64 [a0 + 0x28]
 26583: 82 77 20                 a0 = u64 [a0 + 0x20]
 26586: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26589: 33 08 99 30 01           a1 = 0x13099
 26594: 33 09 01                 a2 = 0x1
 26597: b4 a0 02 16 02           ra = 534, jump [a3]
      :                          @1953 [@dyn 267]
 26602: 64 78                    a1 = a0
 26604: 01                       fallthrough
      :                          @1954
 26605: 64 87                    a0 = a1
 26607: 82 10 38                 ra = u64 [sp + 0x38]
 26610: 82 15 30                 s0 = u64 [sp + 0x30]
 26613: 82 16 28                 s1 = u64 [sp + 0x28]
 26616: 95 11 40                 sp = sp + 0x40
 26619: 32 00                    ret
      :                          @1955 [@dyn 268]
 26621: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 26624: 7b 10 38                 u64 [sp + 0x38] = ra
 26627: 7b 15 30                 u64 [sp + 0x30] = s0
 26630: 7b 16 28                 u64 [sp + 0x28] = s1
 26633: 7b 18 08                 u64 [sp + 0x8] = a1
 26636: 82 89 28                 a2 = u64 [a1 + 0x28]
 26639: 82 76 08                 s1 = u64 [a0 + 0x8]
 26642: 82 75 10                 s0 = u64 [a0 + 0x10]
 26645: 82 87 20                 a0 = u64 [a1 + 0x20]
 26648: 82 9a 18                 a3 = u64 [a2 + 0x18]
 26651: 33 08 58 30 01           a1 = 0x13058
 26656: 33 09 01                 a2 = 0x1
 26659: b4 a0 02 1a 02           ra = 538, jump [a3]
      :                          @1956 [@dyn 269]
 26664: 82 18 08                 a1 = u64 [sp + 0x8]
 26667: 7b 18 10                 u64 [sp + 0x10] = a1
 26670: 78 17 18                 u8 [sp + 0x18] = a0
 26673: 46 11 19                 u8 [sp + 25] = 0
 26676: 51 05 2f                 jump @1961 if s0 == 0
      :                          @1957
 26679: 33 07 9e 0c              a0 = 0xc9e
 26683: 7b 17                    u64 [sp] = a0
 26685: 01                       fallthrough
      :                          @1958
 26686: 95 67 01                 a0 = s1 + 0x1
 26689: 7b 17 08                 u64 [sp + 0x8] = a0
 26692: 7b 16 20                 u64 [sp + 0x20] = s1
 26695: 95 17 10                 a0 = sp + 0x10
 26698: 95 18 20                 a1 = sp + 0x20
 26701: 82 19                    a2 = u64 [sp]
 26703: 50 20 1c 02 77 b1 02     ra = 540, jump @13954
      :                          @1959 [@dyn 270]
 26710: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 26713: 82 16 08                 s1 = u64 [sp + 0x8]
 26716: 52 05 e2                 jump @1958 if s0 != 0
      :                          @1960
 26719: 7c 17 18                 a0 = u8 [sp + 0x18]
 26722: 01                       fallthrough
      :                          @1961
 26723: 33 08 01                 a1 = 0x1
 26726: 52 07 1f                 jump @1964 if a0 != 0
      :                          @1962
 26729: 82 17 10                 a0 = u64 [sp + 0x10]
 26732: 82 78 28                 a1 = u64 [a0 + 0x28]
 26735: 82 77 20                 a0 = u64 [a0 + 0x20]
 26738: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26741: 33 08 99 30 01           a1 = 0x13099
 26746: 33 09 01                 a2 = 0x1
 26749: b4 a0 02 1e 02           ra = 542, jump [a3]
      :                          @1963 [@dyn 271]
 26754: 64 78                    a1 = a0
 26756: 01                       fallthrough
      :                          @1964
 26757: 64 87                    a0 = a1
 26759: 82 10 38                 ra = u64 [sp + 0x38]
 26762: 82 15 30                 s0 = u64 [sp + 0x30]
 26765: 82 16 28                 s1 = u64 [sp + 0x28]
 26768: 95 11 40                 sp = sp + 0x40
 26771: 32 00                    ret
      :                          @1965 [@dyn 272]
 26773: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 26776: 7b 10 38                 u64 [sp + 0x38] = ra
 26779: 7b 15 30                 u64 [sp + 0x30] = s0
 26782: 7b 16 28                 u64 [sp + 0x28] = s1
 26785: 64 86                    s1 = a1
 26787: 82 88 28                 a1 = u64 [a1 + 0x28]
 26790: 82 75 08                 s0 = u64 [a0 + 0x8]
 26793: 82 77 10                 a0 = u64 [a0 + 0x10]
 26796: 7b 17 08                 u64 [sp + 0x8] = a0
 26799: 82 67 20                 a0 = u64 [s1 + 0x20]
 26802: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26805: 33 08 58 30 01           a1 = 0x13058
 26810: 33 09 01                 a2 = 0x1
 26813: b4 a0 02 22 02           ra = 546, jump [a3]
      :                          @1966 [@dyn 273]
 26818: 7b 16 10                 u64 [sp + 0x10] = s1
 26821: 82 16 08                 s1 = u64 [sp + 0x8]
 26824: 78 17 18                 u8 [sp + 0x18] = a0
 26827: 46 11 19                 u8 [sp + 25] = 0
 26830: 51 06 31                 jump @1971 if s1 == 0
      :                          @1967
 26833: 97 66 03                 s1 = s1 << 0x3
 26836: 33 07 18                 a0 = 0x18
 26839: 7b 17                    u64 [sp] = a0
 26841: 01                       fallthrough
      :                          @1968
 26842: 95 57 08                 a0 = s0 + 0x8
 26845: 7b 17 08                 u64 [sp + 0x8] = a0
 26848: 7b 15 20                 u64 [sp + 0x20] = s0
 26851: 95 17 10                 a0 = sp + 0x10
 26854: 95 18 20                 a1 = sp + 0x20
 26857: 82 19                    a2 = u64 [sp]
 26859: 50 20 24 02 db b0 02     ra = 548, jump @13954
      :                          @1969 [@dyn 274]
 26866: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 26869: 82 15 08                 s0 = u64 [sp + 0x8]
 26872: 52 06 e2                 jump @1968 if s1 != 0
      :                          @1970
 26875: 7c 17 18                 a0 = u8 [sp + 0x18]
 26878: 01                       fallthrough
      :                          @1971
 26879: 33 08 01                 a1 = 0x1
 26882: 52 07 1f                 jump @1974 if a0 != 0
      :                          @1972
 26885: 82 17 10                 a0 = u64 [sp + 0x10]
 26888: 82 78 28                 a1 = u64 [a0 + 0x28]
 26891: 82 77 20                 a0 = u64 [a0 + 0x20]
 26894: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26897: 33 08 99 30 01           a1 = 0x13099
 26902: 33 09 01                 a2 = 0x1
 26905: b4 a0 02 26 02           ra = 550, jump [a3]
      :                          @1973 [@dyn 275]
 26910: 64 78                    a1 = a0
 26912: 01                       fallthrough
      :                          @1974
 26913: 64 87                    a0 = a1
 26915: 82 10 38                 ra = u64 [sp + 0x38]
 26918: 82 15 30                 s0 = u64 [sp + 0x30]
 26921: 82 16 28                 s1 = u64 [sp + 0x28]
 26924: 95 11 40                 sp = sp + 0x40
 26927: 32 00                    ret
      :                          @1975 [@dyn 276]
 26929: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 26932: 7b 10 38                 u64 [sp + 0x38] = ra
 26935: 7b 15 30                 u64 [sp + 0x30] = s0
 26938: 7b 16 28                 u64 [sp + 0x28] = s1
 26941: 64 86                    s1 = a1
 26943: 82 88 28                 a1 = u64 [a1 + 0x28]
 26946: 82 75 08                 s0 = u64 [a0 + 0x8]
 26949: 82 77 10                 a0 = u64 [a0 + 0x10]
 26952: 7b 17 08                 u64 [sp + 0x8] = a0
 26955: 82 67 20                 a0 = u64 [s1 + 0x20]
 26958: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26961: 33 08 58 30 01           a1 = 0x13058
 26966: 33 09 01                 a2 = 0x1
 26969: b4 a0 02 2a 02           ra = 554, jump [a3]
      :                          @1976 [@dyn 277]
 26974: 82 18 08                 a1 = u64 [sp + 0x8]
 26977: 7b 16 10                 u64 [sp + 0x10] = s1
 26980: 78 17 18                 u8 [sp + 0x18] = a0
 26983: 46 11 19                 u8 [sp + 25] = 0
 26986: 51 08 31                 jump @1981 if a1 == 0
      :                          @1977
 26989: 96 86 18                 s1 = a1 * 0x18
 26992: 33 07 1c                 a0 = 0x1c
 26995: 7b 17                    u64 [sp] = a0
 26997: 01                       fallthrough
      :                          @1978
 26998: 95 57 18                 a0 = s0 + 0x18
 27001: 7b 17 08                 u64 [sp + 0x8] = a0
 27004: 7b 15 20                 u64 [sp + 0x20] = s0
 27007: 95 17 10                 a0 = sp + 0x10
 27010: 95 18 20                 a1 = sp + 0x20
 27013: 82 19                    a2 = u64 [sp]
 27015: 50 20 2c 02 3f b0 02     ra = 556, jump @13954
      :                          @1979 [@dyn 278]
 27022: 95 66 e8                 s1 = s1 + 0xffffffffffffffe8
 27025: 82 15 08                 s0 = u64 [sp + 0x8]
 27028: 52 06 e2                 jump @1978 if s1 != 0
      :                          @1980
 27031: 7c 17 18                 a0 = u8 [sp + 0x18]
 27034: 01                       fallthrough
      :                          @1981
 27035: 33 08 01                 a1 = 0x1
 27038: 52 07 1f                 jump @1984 if a0 != 0
      :                          @1982
 27041: 82 17 10                 a0 = u64 [sp + 0x10]
 27044: 82 78 28                 a1 = u64 [a0 + 0x28]
 27047: 82 77 20                 a0 = u64 [a0 + 0x20]
 27050: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27053: 33 08 99 30 01           a1 = 0x13099
 27058: 33 09 01                 a2 = 0x1
 27061: b4 a0 02 2e 02           ra = 558, jump [a3]
      :                          @1983 [@dyn 279]
 27066: 64 78                    a1 = a0
 27068: 01                       fallthrough
      :                          @1984
 27069: 64 87                    a0 = a1
 27071: 82 10 38                 ra = u64 [sp + 0x38]
 27074: 82 15 30                 s0 = u64 [sp + 0x30]
 27077: 82 16 28                 s1 = u64 [sp + 0x28]
 27080: 95 11 40                 sp = sp + 0x40
 27083: 32 00                    ret
      :                          @1985 [@dyn 280]
 27085: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 27088: 7b 10 38                 u64 [sp + 0x38] = ra
 27091: 7b 15 30                 u64 [sp + 0x30] = s0
 27094: 7b 16 28                 u64 [sp + 0x28] = s1
 27097: 64 86                    s1 = a1
 27099: 82 88 28                 a1 = u64 [a1 + 0x28]
 27102: 82 75 08                 s0 = u64 [a0 + 0x8]
 27105: 82 77 10                 a0 = u64 [a0 + 0x10]
 27108: 7b 17 08                 u64 [sp + 0x8] = a0
 27111: 82 67 20                 a0 = u64 [s1 + 0x20]
 27114: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27117: 33 08 58 30 01           a1 = 0x13058
 27122: 33 09 01                 a2 = 0x1
 27125: b4 a0 02 32 02           ra = 562, jump [a3]
      :                          @1986 [@dyn 281]
 27130: 82 18 08                 a1 = u64 [sp + 0x8]
 27133: 7b 16 10                 u64 [sp + 0x10] = s1
 27136: 78 17 18                 u8 [sp + 0x18] = a0
 27139: 46 11 19                 u8 [sp + 25] = 0
 27142: 51 08 31                 jump @1991 if a1 == 0
      :                          @1987
 27145: 96 86 18                 s1 = a1 * 0x18
 27148: 33 07 58                 a0 = 0x58
 27151: 7b 17                    u64 [sp] = a0
 27153: 01                       fallthrough
      :                          @1988
 27154: 95 57 18                 a0 = s0 + 0x18
 27157: 7b 17 08                 u64 [sp + 0x8] = a0
 27160: 7b 15 20                 u64 [sp + 0x20] = s0
 27163: 95 17 10                 a0 = sp + 0x10
 27166: 95 18 20                 a1 = sp + 0x20
 27169: 82 19                    a2 = u64 [sp]
 27171: 50 20 34 02 a3 af 02     ra = 564, jump @13954
      :                          @1989 [@dyn 282]
 27178: 95 66 e8                 s1 = s1 + 0xffffffffffffffe8
 27181: 82 15 08                 s0 = u64 [sp + 0x8]
 27184: 52 06 e2                 jump @1988 if s1 != 0
      :                          @1990
 27187: 7c 17 18                 a0 = u8 [sp + 0x18]
 27190: 01                       fallthrough
      :                          @1991
 27191: 33 08 01                 a1 = 0x1
 27194: 52 07 1f                 jump @1994 if a0 != 0
      :                          @1992
 27197: 82 17 10                 a0 = u64 [sp + 0x10]
 27200: 82 78 28                 a1 = u64 [a0 + 0x28]
 27203: 82 77 20                 a0 = u64 [a0 + 0x20]
 27206: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27209: 33 08 99 30 01           a1 = 0x13099
 27214: 33 09 01                 a2 = 0x1
 27217: b4 a0 02 36 02           ra = 566, jump [a3]
      :                          @1993 [@dyn 283]
 27222: 64 78                    a1 = a0
 27224: 01                       fallthrough
      :                          @1994
 27225: 64 87                    a0 = a1
 27227: 82 10 38                 ra = u64 [sp + 0x38]
 27230: 82 15 30                 s0 = u64 [sp + 0x30]
 27233: 82 16 28                 s1 = u64 [sp + 0x28]
 27236: 95 11 40                 sp = sp + 0x40
 27239: 32 00                    ret
      :                          @1995 [@dyn 284]
 27241: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 27244: 7b 10 38                 u64 [sp + 0x38] = ra
 27247: 7b 15 30                 u64 [sp + 0x30] = s0
 27250: 7b 16 28                 u64 [sp + 0x28] = s1
 27253: 64 86                    s1 = a1
 27255: 82 88 28                 a1 = u64 [a1 + 0x28]
 27258: 82 75 08                 s0 = u64 [a0 + 0x8]
 27261: 82 77 10                 a0 = u64 [a0 + 0x10]
 27264: 7b 17 08                 u64 [sp + 0x8] = a0
 27267: 82 67 20                 a0 = u64 [s1 + 0x20]
 27270: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27273: 33 08 58 30 01           a1 = 0x13058
 27278: 33 09 01                 a2 = 0x1
 27281: b4 a0 02 3a 02           ra = 570, jump [a3]
      :                          @1996 [@dyn 285]
 27286: 7b 16 10                 u64 [sp + 0x10] = s1
 27289: 82 16 08                 s1 = u64 [sp + 0x8]
 27292: 78 17 18                 u8 [sp + 0x18] = a0
 27295: 46 11 19                 u8 [sp + 25] = 0
 27298: 51 06 31                 jump @2001 if s1 == 0
      :                          @1997
 27301: 97 66 03                 s1 = s1 << 0x3
 27304: 33 07 48                 a0 = 0x48
 27307: 7b 17                    u64 [sp] = a0
 27309: 01                       fallthrough
      :                          @1998
 27310: 95 57 08                 a0 = s0 + 0x8
 27313: 7b 17 08                 u64 [sp + 0x8] = a0
 27316: 7b 15 20                 u64 [sp + 0x20] = s0
 27319: 95 17 10                 a0 = sp + 0x10
 27322: 95 18 20                 a1 = sp + 0x20
 27325: 82 19                    a2 = u64 [sp]
 27327: 50 20 3c 02 07 af 02     ra = 572, jump @13954
      :                          @1999 [@dyn 286]
 27334: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 27337: 82 15 08                 s0 = u64 [sp + 0x8]
 27340: 52 06 e2                 jump @1998 if s1 != 0
      :                          @2000
 27343: 7c 17 18                 a0 = u8 [sp + 0x18]
 27346: 01                       fallthrough
      :                          @2001
 27347: 33 08 01                 a1 = 0x1
 27350: 52 07 1f                 jump @2004 if a0 != 0
      :                          @2002
 27353: 82 17 10                 a0 = u64 [sp + 0x10]
 27356: 82 78 28                 a1 = u64 [a0 + 0x28]
 27359: 82 77 20                 a0 = u64 [a0 + 0x20]
 27362: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27365: 33 08 99 30 01           a1 = 0x13099
 27370: 33 09 01                 a2 = 0x1
 27373: b4 a0 02 3e 02           ra = 574, jump [a3]
      :                          @2003 [@dyn 287]
 27378: 64 78                    a1 = a0
 27380: 01                       fallthrough
      :                          @2004
 27381: 64 87                    a0 = a1
 27383: 82 10 38                 ra = u64 [sp + 0x38]
 27386: 82 15 30                 s0 = u64 [sp + 0x30]
 27389: 82 16 28                 s1 = u64 [sp + 0x28]
 27392: 95 11 40                 sp = sp + 0x40
 27395: 32 00                    ret
      :                          @2005 [@dyn 288]
 27397: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 27400: 7b 10 38                 u64 [sp + 0x38] = ra
 27403: 7b 15 30                 u64 [sp + 0x30] = s0
 27406: 7b 16 28                 u64 [sp + 0x28] = s1
 27409: 64 86                    s1 = a1
 27411: 82 88 28                 a1 = u64 [a1 + 0x28]
 27414: 82 75 08                 s0 = u64 [a0 + 0x8]
 27417: 82 77 10                 a0 = u64 [a0 + 0x10]
 27420: 7b 17 08                 u64 [sp + 0x8] = a0
 27423: 82 67 20                 a0 = u64 [s1 + 0x20]
 27426: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27429: 33 08 58 30 01           a1 = 0x13058
 27434: 33 09 01                 a2 = 0x1
 27437: b4 a0 02 42 02           ra = 578, jump [a3]
      :                          @2006 [@dyn 289]
 27442: 82 18 08                 a1 = u64 [sp + 0x8]
 27445: 7b 16 10                 u64 [sp + 0x10] = s1
 27448: 78 17 18                 u8 [sp + 0x18] = a0
 27451: 46 11 19                 u8 [sp + 25] = 0
 27454: 51 08 31                 jump @2011 if a1 == 0
      :                          @2007
 27457: 96 86 18                 s1 = a1 * 0x18
 27460: 33 07 6c                 a0 = 0x6c
 27463: 7b 17                    u64 [sp] = a0
 27465: 01                       fallthrough
      :                          @2008
 27466: 95 57 18                 a0 = s0 + 0x18
 27469: 7b 17 08                 u64 [sp + 0x8] = a0
 27472: 7b 15 20                 u64 [sp + 0x20] = s0
 27475: 95 17 10                 a0 = sp + 0x10
 27478: 95 18 20                 a1 = sp + 0x20
 27481: 82 19                    a2 = u64 [sp]
 27483: 50 20 44 02 6b ae 02     ra = 580, jump @13954
      :                          @2009 [@dyn 290]
 27490: 95 66 e8                 s1 = s1 + 0xffffffffffffffe8
 27493: 82 15 08                 s0 = u64 [sp + 0x8]
 27496: 52 06 e2                 jump @2008 if s1 != 0
      :                          @2010
 27499: 7c 17 18                 a0 = u8 [sp + 0x18]
 27502: 01                       fallthrough
      :                          @2011
 27503: 33 08 01                 a1 = 0x1
 27506: 52 07 1f                 jump @2014 if a0 != 0
      :                          @2012
 27509: 82 17 10                 a0 = u64 [sp + 0x10]
 27512: 82 78 28                 a1 = u64 [a0 + 0x28]
 27515: 82 77 20                 a0 = u64 [a0 + 0x20]
 27518: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27521: 33 08 99 30 01           a1 = 0x13099
 27526: 33 09 01                 a2 = 0x1
 27529: b4 a0 02 46 02           ra = 582, jump [a3]
      :                          @2013 [@dyn 291]
 27534: 64 78                    a1 = a0
 27536: 01                       fallthrough
      :                          @2014
 27537: 64 87                    a0 = a1
 27539: 82 10 38                 ra = u64 [sp + 0x38]
 27542: 82 15 30                 s0 = u64 [sp + 0x30]
 27545: 82 16 28                 s1 = u64 [sp + 0x28]
 27548: 95 11 40                 sp = sp + 0x40
 27551: 32 00                    ret
      :                          @2015 [@dyn 292]
 27553: 82 7a 08                 a3 = u64 [a0 + 0x8]
 27556: 82 79 10                 a2 = u64 [a0 + 0x10]
 27559: 64 87                    a0 = a1
 27561: 64 a8                    a1 = a3
 27563: 28 83 a4 02              jump @13770
      :                          @2016 [@dyn 293]
 27567: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 27570: 7b 10 30                 u64 [sp + 0x30] = ra
 27573: 7b 15 28                 u64 [sp + 0x28] = s0
 27576: 7b 16 20                 u64 [sp + 0x20] = s1
 27579: 82 79                    a2 = u64 [a0]
 27581: 64 85                    s0 = a1
 27583: 51 09 9c 00              jump @2027 if a2 == 0
      :                          @2017
 27587: 82 58 28                 a1 = u64 [s0 + 0x28]
 27590: 95 77 08                 a0 = a0 + 0x8
 27593: 7b 17                    u64 [sp] = a0
 27595: 82 57 20                 a0 = u64 [s0 + 0x20]
 27598: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27601: 33 08 84 04 01           a1 = 0x10484
 27606: 33 09 04                 a2 = 0x4
 27609: b4 a0 02 4c 02           ra = 588, jump [a3]
      :                          @2018 [@dyn 294]
 27614: 7b 15 10                 u64 [sp + 0x10] = s0
 27617: 78 17 18                 u8 [sp + 0x18] = a0
 27620: 49 11 08                 u64 [sp + 8] = 0
 27623: 46 11 19                 u8 [sp + 25] = 0
 27626: 33 09 18                 a2 = 0x18
 27629: 95 17 08                 a0 = sp + 0x8
 27632: 64 18                    a1 = sp
 27634: 50 20 4e 02 98 ac 02     ra = 590, jump @13938
      :                          @2019 [@dyn 295]
 27641: 82 17 08                 a0 = u64 [sp + 0x8]
 27644: 7c 18 18                 a1 = u8 [sp + 0x18]
 27647: 51 07 7b                 jump @2028 if a0 == 0
      :                          @2020
 27650: 33 05 01                 s0 = 0x1
 27653: 52 08 78                 jump @2029 if a1 != 0
      :                          @2021
 27656: 7c 18 19                 a1 = u8 [sp + 0x19]
 27659: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 27662: 8e 77                    a0 = a0 >u 0
 27664: 82 16 10                 s1 = u64 [sp + 0x10]
 27667: 88 88 01                 a1 = a1 <u 0x1
 27670: d4 87 07                 a0 = a0 | a1
 27673: 52 07 28                 jump @2025 if a0 != 0
      :                          @2022
 27676: 7c 67 34                 a0 = u8 [s1 + 0x34]
 27679: 84 77 04                 a0 = a0 & 0x4
 27682: 52 07 1f                 jump @2025 if a0 != 0
      :                          @2023
 27685: 82 68 28                 a1 = u64 [s1 + 0x28]
 27688: 82 67 20                 a0 = u64 [s1 + 0x20]
 27691: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27694: 33 08 97 30 01           a1 = 0x13097
 27699: 33 09 01                 a2 = 0x1
 27702: 33 05 01                 s0 = 0x1
 27705: b4 a0 02 50 02           ra = 592, jump [a3]
      :                          @2024 [@dyn 296]
 27710: 52 07 3f                 jump @2029 if a0 != 0
      :                          @2025
 27713: 82 68 28                 a1 = u64 [s1 + 0x28]
 27716: 82 67 20                 a0 = u64 [s1 + 0x20]
 27719: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27722: 33 08 41 30 01           a1 = 0x13041
 27727: 33 09 01                 a2 = 0x1
 27730: b4 a0 02 52 02           ra = 594, jump [a3]
      :                          @2026 [@dyn 297]
 27735: 64 75                    s0 = a0
 27737: 28 24                    jump @2029
      :                          @2027
 27739: 82 58 28                 a1 = u64 [s0 + 0x28]
 27742: 82 57 20                 a0 = u64 [s0 + 0x20]
 27745: 82 8c 18                 a5 = u64 [a1 + 0x18]
 27748: 33 08 a0 04 01           a1 = 0x104a0
 27753: 33 09 04                 a2 = 0x4
 27756: 82 10 30                 ra = u64 [sp + 0x30]
 27759: 82 15 28                 s0 = u64 [sp + 0x28]
 27762: 82 16 20                 s1 = u64 [sp + 0x20]
 27765: 95 11 38                 sp = sp + 0x38
 27768: 32 0c                    jump [a5]
      :                          @2028
 27770: 8e 85                    s0 = a1 >u 0
 27772: 01                       fallthrough
      :                          @2029
 27773: 64 57                    a0 = s0
 27775: 82 10 30                 ra = u64 [sp + 0x30]
 27778: 82 15 28                 s0 = u64 [sp + 0x28]
 27781: 82 16 20                 s1 = u64 [sp + 0x20]
 27784: 95 11 38                 sp = sp + 0x38
 27787: 32 00                    ret
      :                          @2030 [@dyn 298]
 27789: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 27792: 7b 10 30                 u64 [sp + 0x30] = ra
 27795: 7b 15 28                 u64 [sp + 0x28] = s0
 27798: 7b 16 20                 u64 [sp + 0x20] = s1
 27801: 82 79                    a2 = u64 [a0]
 27803: 64 85                    s0 = a1
 27805: 51 09 9c 00              jump @2041 if a2 == 0
      :                          @2031
 27809: 82 58 28                 a1 = u64 [s0 + 0x28]
 27812: 95 77 08                 a0 = a0 + 0x8
 27815: 7b 17                    u64 [sp] = a0
 27817: 82 57 20                 a0 = u64 [s0 + 0x20]
 27820: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27823: 33 08 84 04 01           a1 = 0x10484
 27828: 33 09 04                 a2 = 0x4
 27831: b4 a0 02 56 02           ra = 598, jump [a3]
      :                          @2032 [@dyn 299]
 27836: 7b 15 10                 u64 [sp + 0x10] = s0
 27839: 78 17 18                 u8 [sp + 0x18] = a0
 27842: 49 11 08                 u64 [sp + 8] = 0
 27845: 46 11 19                 u8 [sp + 25] = 0
 27848: 33 09 3c                 a2 = 0x3c
 27851: 95 17 08                 a0 = sp + 0x8
 27854: 64 18                    a1 = sp
 27856: 50 20 58 02 ba ab 02     ra = 600, jump @13938
      :                          @2033 [@dyn 300]
 27863: 82 17 08                 a0 = u64 [sp + 0x8]
 27866: 7c 18 18                 a1 = u8 [sp + 0x18]
 27869: 51 07 7b                 jump @2042 if a0 == 0
      :                          @2034
 27872: 33 05 01                 s0 = 0x1
 27875: 52 08 78                 jump @2043 if a1 != 0
      :                          @2035
 27878: 7c 18 19                 a1 = u8 [sp + 0x19]
 27881: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 27884: 8e 77                    a0 = a0 >u 0
 27886: 82 16 10                 s1 = u64 [sp + 0x10]
 27889: 88 88 01                 a1 = a1 <u 0x1
 27892: d4 87 07                 a0 = a0 | a1
 27895: 52 07 28                 jump @2039 if a0 != 0
      :                          @2036
 27898: 7c 67 34                 a0 = u8 [s1 + 0x34]
 27901: 84 77 04                 a0 = a0 & 0x4
 27904: 52 07 1f                 jump @2039 if a0 != 0
      :                          @2037
 27907: 82 68 28                 a1 = u64 [s1 + 0x28]
 27910: 82 67 20                 a0 = u64 [s1 + 0x20]
 27913: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27916: 33 08 97 30 01           a1 = 0x13097
 27921: 33 09 01                 a2 = 0x1
 27924: 33 05 01                 s0 = 0x1
 27927: b4 a0 02 5a 02           ra = 602, jump [a3]
      :                          @2038 [@dyn 301]
 27932: 52 07 3f                 jump @2043 if a0 != 0
      :                          @2039
 27935: 82 68 28                 a1 = u64 [s1 + 0x28]
 27938: 82 67 20                 a0 = u64 [s1 + 0x20]
 27941: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27944: 33 08 41 30 01           a1 = 0x13041
 27949: 33 09 01                 a2 = 0x1
 27952: b4 a0 02 5c 02           ra = 604, jump [a3]
      :                          @2040 [@dyn 302]
 27957: 64 75                    s0 = a0
 27959: 28 24                    jump @2043
      :                          @2041
 27961: 82 58 28                 a1 = u64 [s0 + 0x28]
 27964: 82 57 20                 a0 = u64 [s0 + 0x20]
 27967: 82 8c 18                 a5 = u64 [a1 + 0x18]
 27970: 33 08 a0 04 01           a1 = 0x104a0
 27975: 33 09 04                 a2 = 0x4
 27978: 82 10 30                 ra = u64 [sp + 0x30]
 27981: 82 15 28                 s0 = u64 [sp + 0x28]
 27984: 82 16 20                 s1 = u64 [sp + 0x20]
 27987: 95 11 38                 sp = sp + 0x38
 27990: 32 0c                    jump [a5]
      :                          @2042
 27992: 8e 85                    s0 = a1 >u 0
 27994: 01                       fallthrough
      :                          @2043
 27995: 64 57                    a0 = s0
 27997: 82 10 30                 ra = u64 [sp + 0x30]
 28000: 82 15 28                 s0 = u64 [sp + 0x28]
 28003: 82 16 20                 s1 = u64 [sp + 0x20]
 28006: 95 11 38                 sp = sp + 0x38
 28009: 32 00                    ret
      :                          @2044 [@dyn 303]
 28011: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 28014: 7b 10 30                 u64 [sp + 0x30] = ra
 28017: 7b 15 28                 u64 [sp + 0x28] = s0
 28020: 7b 16 20                 u64 [sp + 0x20] = s1
 28023: 82 79                    a2 = u64 [a0]
 28025: 64 85                    s0 = a1
 28027: 51 09 9c 00              jump @2055 if a2 == 0
      :                          @2045
 28031: 82 58 28                 a1 = u64 [s0 + 0x28]
 28034: 95 77 08                 a0 = a0 + 0x8
 28037: 7b 17                    u64 [sp] = a0
 28039: 82 57 20                 a0 = u64 [s0 + 0x20]
 28042: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28045: 33 08 84 04 01           a1 = 0x10484
 28050: 33 09 04                 a2 = 0x4
 28053: b4 a0 02 60 02           ra = 608, jump [a3]
      :                          @2046 [@dyn 304]
 28058: 7b 15 10                 u64 [sp + 0x10] = s0
 28061: 78 17 18                 u8 [sp + 0x18] = a0
 28064: 49 11 08                 u64 [sp + 8] = 0
 28067: 46 11 19                 u8 [sp + 25] = 0
 28070: 33 09 48                 a2 = 0x48
 28073: 95 17 08                 a0 = sp + 0x8
 28076: 64 18                    a1 = sp
 28078: 50 20 62 02 dc aa 02     ra = 610, jump @13938
      :                          @2047 [@dyn 305]
 28085: 82 17 08                 a0 = u64 [sp + 0x8]
 28088: 7c 18 18                 a1 = u8 [sp + 0x18]
 28091: 51 07 7b                 jump @2056 if a0 == 0
      :                          @2048
 28094: 33 05 01                 s0 = 0x1
 28097: 52 08 78                 jump @2057 if a1 != 0
      :                          @2049
 28100: 7c 18 19                 a1 = u8 [sp + 0x19]
 28103: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28106: 8e 77                    a0 = a0 >u 0
 28108: 82 16 10                 s1 = u64 [sp + 0x10]
 28111: 88 88 01                 a1 = a1 <u 0x1
 28114: d4 87 07                 a0 = a0 | a1
 28117: 52 07 28                 jump @2053 if a0 != 0
      :                          @2050
 28120: 7c 67 34                 a0 = u8 [s1 + 0x34]
 28123: 84 77 04                 a0 = a0 & 0x4
 28126: 52 07 1f                 jump @2053 if a0 != 0
      :                          @2051
 28129: 82 68 28                 a1 = u64 [s1 + 0x28]
 28132: 82 67 20                 a0 = u64 [s1 + 0x20]
 28135: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28138: 33 08 97 30 01           a1 = 0x13097
 28143: 33 09 01                 a2 = 0x1
 28146: 33 05 01                 s0 = 0x1
 28149: b4 a0 02 64 02           ra = 612, jump [a3]
      :                          @2052 [@dyn 306]
 28154: 52 07 3f                 jump @2057 if a0 != 0
      :                          @2053
 28157: 82 68 28                 a1 = u64 [s1 + 0x28]
 28160: 82 67 20                 a0 = u64 [s1 + 0x20]
 28163: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28166: 33 08 41 30 01           a1 = 0x13041
 28171: 33 09 01                 a2 = 0x1
 28174: b4 a0 02 66 02           ra = 614, jump [a3]
      :                          @2054 [@dyn 307]
 28179: 64 75                    s0 = a0
 28181: 28 24                    jump @2057
      :                          @2055
 28183: 82 58 28                 a1 = u64 [s0 + 0x28]
 28186: 82 57 20                 a0 = u64 [s0 + 0x20]
 28189: 82 8c 18                 a5 = u64 [a1 + 0x18]
 28192: 33 08 a0 04 01           a1 = 0x104a0
 28197: 33 09 04                 a2 = 0x4
 28200: 82 10 30                 ra = u64 [sp + 0x30]
 28203: 82 15 28                 s0 = u64 [sp + 0x28]
 28206: 82 16 20                 s1 = u64 [sp + 0x20]
 28209: 95 11 38                 sp = sp + 0x38
 28212: 32 0c                    jump [a5]
      :                          @2056
 28214: 8e 85                    s0 = a1 >u 0
 28216: 01                       fallthrough
      :                          @2057
 28217: 64 57                    a0 = s0
 28219: 82 10 30                 ra = u64 [sp + 0x30]
 28222: 82 15 28                 s0 = u64 [sp + 0x28]
 28225: 82 16 20                 s1 = u64 [sp + 0x20]
 28228: 95 11 38                 sp = sp + 0x38
 28231: 32 00                    ret
      :                          @2058 [@dyn 308]
 28233: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 28236: 7b 10 30                 u64 [sp + 0x30] = ra
 28239: 7b 15 28                 u64 [sp + 0x28] = s0
 28242: 7b 16 20                 u64 [sp + 0x20] = s1
 28245: 82 79                    a2 = u64 [a0]
 28247: 64 85                    s0 = a1
 28249: 51 09 9c 00              jump @2069 if a2 == 0
      :                          @2059
 28253: 82 58 28                 a1 = u64 [s0 + 0x28]
 28256: 95 77 08                 a0 = a0 + 0x8
 28259: 7b 17                    u64 [sp] = a0
 28261: 82 57 20                 a0 = u64 [s0 + 0x20]
 28264: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28267: 33 08 84 04 01           a1 = 0x10484
 28272: 33 09 04                 a2 = 0x4
 28275: b4 a0 02 6a 02           ra = 618, jump [a3]
      :                          @2060 [@dyn 309]
 28280: 7b 15 10                 u64 [sp + 0x10] = s0
 28283: 78 17 18                 u8 [sp + 0x18] = a0
 28286: 49 11 08                 u64 [sp + 8] = 0
 28289: 46 11 19                 u8 [sp + 25] = 0
 28292: 33 09 0c                 a2 = 0xc
 28295: 95 17 08                 a0 = sp + 0x8
 28298: 64 18                    a1 = sp
 28300: 50 20 6c 02 fe a9 02     ra = 620, jump @13938
      :                          @2061 [@dyn 310]
 28307: 82 17 08                 a0 = u64 [sp + 0x8]
 28310: 7c 18 18                 a1 = u8 [sp + 0x18]
 28313: 51 07 7b                 jump @2070 if a0 == 0
      :                          @2062
 28316: 33 05 01                 s0 = 0x1
 28319: 52 08 78                 jump @2071 if a1 != 0
      :                          @2063
 28322: 7c 18 19                 a1 = u8 [sp + 0x19]
 28325: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28328: 8e 77                    a0 = a0 >u 0
 28330: 82 16 10                 s1 = u64 [sp + 0x10]
 28333: 88 88 01                 a1 = a1 <u 0x1
 28336: d4 87 07                 a0 = a0 | a1
 28339: 52 07 28                 jump @2067 if a0 != 0
      :                          @2064
 28342: 7c 67 34                 a0 = u8 [s1 + 0x34]
 28345: 84 77 04                 a0 = a0 & 0x4
 28348: 52 07 1f                 jump @2067 if a0 != 0
      :                          @2065
 28351: 82 68 28                 a1 = u64 [s1 + 0x28]
 28354: 82 67 20                 a0 = u64 [s1 + 0x20]
 28357: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28360: 33 08 97 30 01           a1 = 0x13097
 28365: 33 09 01                 a2 = 0x1
 28368: 33 05 01                 s0 = 0x1
 28371: b4 a0 02 6e 02           ra = 622, jump [a3]
      :                          @2066 [@dyn 311]
 28376: 52 07 3f                 jump @2071 if a0 != 0
      :                          @2067
 28379: 82 68 28                 a1 = u64 [s1 + 0x28]
 28382: 82 67 20                 a0 = u64 [s1 + 0x20]
 28385: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28388: 33 08 41 30 01           a1 = 0x13041
 28393: 33 09 01                 a2 = 0x1
 28396: b4 a0 02 70 02           ra = 624, jump [a3]
      :                          @2068 [@dyn 312]
 28401: 64 75                    s0 = a0
 28403: 28 24                    jump @2071
      :                          @2069
 28405: 82 58 28                 a1 = u64 [s0 + 0x28]
 28408: 82 57 20                 a0 = u64 [s0 + 0x20]
 28411: 82 8c 18                 a5 = u64 [a1 + 0x18]
 28414: 33 08 a0 04 01           a1 = 0x104a0
 28419: 33 09 04                 a2 = 0x4
 28422: 82 10 30                 ra = u64 [sp + 0x30]
 28425: 82 15 28                 s0 = u64 [sp + 0x28]
 28428: 82 16 20                 s1 = u64 [sp + 0x20]
 28431: 95 11 38                 sp = sp + 0x38
 28434: 32 0c                    jump [a5]
      :                          @2070
 28436: 8e 85                    s0 = a1 >u 0
 28438: 01                       fallthrough
      :                          @2071
 28439: 64 57                    a0 = s0
 28441: 82 10 30                 ra = u64 [sp + 0x30]
 28444: 82 15 28                 s0 = u64 [sp + 0x28]
 28447: 82 16 20                 s1 = u64 [sp + 0x20]
 28450: 95 11 38                 sp = sp + 0x38
 28453: 32 00                    ret
      :                          @2072 [@dyn 313]
 28455: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 28458: 7b 10 30                 u64 [sp + 0x30] = ra
 28461: 7b 15 28                 u64 [sp + 0x28] = s0
 28464: 7b 16 20                 u64 [sp + 0x20] = s1
 28467: 82 79                    a2 = u64 [a0]
 28469: 64 85                    s0 = a1
 28471: 51 09 9c 00              jump @2083 if a2 == 0
      :                          @2073
 28475: 82 58 28                 a1 = u64 [s0 + 0x28]
 28478: 95 77 08                 a0 = a0 + 0x8
 28481: 7b 17                    u64 [sp] = a0
 28483: 82 57 20                 a0 = u64 [s0 + 0x20]
 28486: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28489: 33 08 84 04 01           a1 = 0x10484
 28494: 33 09 04                 a2 = 0x4
 28497: b4 a0 02 74 02           ra = 628, jump [a3]
      :                          @2074 [@dyn 314]
 28502: 7b 15 10                 u64 [sp + 0x10] = s0
 28505: 78 17 18                 u8 [sp + 0x18] = a0
 28508: 49 11 08                 u64 [sp + 8] = 0
 28511: 46 11 19                 u8 [sp + 25] = 0
 28514: 33 09 2a                 a2 = 0x2a
 28517: 95 17 08                 a0 = sp + 0x8
 28520: 64 18                    a1 = sp
 28522: 50 20 76 02 20 a9 02     ra = 630, jump @13938
      :                          @2075 [@dyn 315]
 28529: 82 17 08                 a0 = u64 [sp + 0x8]
 28532: 7c 18 18                 a1 = u8 [sp + 0x18]
 28535: 51 07 7b                 jump @2084 if a0 == 0
      :                          @2076
 28538: 33 05 01                 s0 = 0x1
 28541: 52 08 78                 jump @2085 if a1 != 0
      :                          @2077
 28544: 7c 18 19                 a1 = u8 [sp + 0x19]
 28547: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28550: 8e 77                    a0 = a0 >u 0
 28552: 82 16 10                 s1 = u64 [sp + 0x10]
 28555: 88 88 01                 a1 = a1 <u 0x1
 28558: d4 87 07                 a0 = a0 | a1
 28561: 52 07 28                 jump @2081 if a0 != 0
      :                          @2078
 28564: 7c 67 34                 a0 = u8 [s1 + 0x34]
 28567: 84 77 04                 a0 = a0 & 0x4
 28570: 52 07 1f                 jump @2081 if a0 != 0
      :                          @2079
 28573: 82 68 28                 a1 = u64 [s1 + 0x28]
 28576: 82 67 20                 a0 = u64 [s1 + 0x20]
 28579: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28582: 33 08 97 30 01           a1 = 0x13097
 28587: 33 09 01                 a2 = 0x1
 28590: 33 05 01                 s0 = 0x1
 28593: b4 a0 02 78 02           ra = 632, jump [a3]
      :                          @2080 [@dyn 316]
 28598: 52 07 3f                 jump @2085 if a0 != 0
      :                          @2081
 28601: 82 68 28                 a1 = u64 [s1 + 0x28]
 28604: 82 67 20                 a0 = u64 [s1 + 0x20]
 28607: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28610: 33 08 41 30 01           a1 = 0x13041
 28615: 33 09 01                 a2 = 0x1
 28618: b4 a0 02 7a 02           ra = 634, jump [a3]
      :                          @2082 [@dyn 317]
 28623: 64 75                    s0 = a0
 28625: 28 24                    jump @2085
      :                          @2083
 28627: 82 58 28                 a1 = u64 [s0 + 0x28]
 28630: 82 57 20                 a0 = u64 [s0 + 0x20]
 28633: 82 8c 18                 a5 = u64 [a1 + 0x18]
 28636: 33 08 a0 04 01           a1 = 0x104a0
 28641: 33 09 04                 a2 = 0x4
 28644: 82 10 30                 ra = u64 [sp + 0x30]
 28647: 82 15 28                 s0 = u64 [sp + 0x28]
 28650: 82 16 20                 s1 = u64 [sp + 0x20]
 28653: 95 11 38                 sp = sp + 0x38
 28656: 32 0c                    jump [a5]
      :                          @2084
 28658: 8e 85                    s0 = a1 >u 0
 28660: 01                       fallthrough
      :                          @2085
 28661: 64 57                    a0 = s0
 28663: 82 10 30                 ra = u64 [sp + 0x30]
 28666: 82 15 28                 s0 = u64 [sp + 0x28]
 28669: 82 16 20                 s1 = u64 [sp + 0x20]
 28672: 95 11 38                 sp = sp + 0x38
 28675: 32 00                    ret
      :                          @2086 [@dyn 318]
 28677: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 28680: 7b 10 30                 u64 [sp + 0x30] = ra
 28683: 7b 15 28                 u64 [sp + 0x28] = s0
 28686: 7b 16 20                 u64 [sp + 0x20] = s1
 28689: 82 79                    a2 = u64 [a0]
 28691: 64 85                    s0 = a1
 28693: 51 09 9c 00              jump @2097 if a2 == 0
      :                          @2087
 28697: 82 58 28                 a1 = u64 [s0 + 0x28]
 28700: 95 77 08                 a0 = a0 + 0x8
 28703: 7b 17                    u64 [sp] = a0
 28705: 82 57 20                 a0 = u64 [s0 + 0x20]
 28708: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28711: 33 08 84 04 01           a1 = 0x10484
 28716: 33 09 04                 a2 = 0x4
 28719: b4 a0 02 7e 02           ra = 638, jump [a3]
      :                          @2088 [@dyn 319]
 28724: 7b 15 10                 u64 [sp + 0x10] = s0
 28727: 78 17 18                 u8 [sp + 0x18] = a0
 28730: 49 11 08                 u64 [sp + 8] = 0
 28733: 46 11 19                 u8 [sp + 25] = 0
 28736: 33 09 4c                 a2 = 0x4c
 28739: 95 17 08                 a0 = sp + 0x8
 28742: 64 18                    a1 = sp
 28744: 50 20 80 02 42 a8 02     ra = 640, jump @13938
      :                          @2089 [@dyn 320]
 28751: 82 17 08                 a0 = u64 [sp + 0x8]
 28754: 7c 18 18                 a1 = u8 [sp + 0x18]
 28757: 51 07 7b                 jump @2098 if a0 == 0
      :                          @2090
 28760: 33 05 01                 s0 = 0x1
 28763: 52 08 78                 jump @2099 if a1 != 0
      :                          @2091
 28766: 7c 18 19                 a1 = u8 [sp + 0x19]
 28769: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28772: 8e 77                    a0 = a0 >u 0
 28774: 82 16 10                 s1 = u64 [sp + 0x10]
 28777: 88 88 01                 a1 = a1 <u 0x1
 28780: d4 87 07                 a0 = a0 | a1
 28783: 52 07 28                 jump @2095 if a0 != 0
      :                          @2092
 28786: 7c 67 34                 a0 = u8 [s1 + 0x34]
 28789: 84 77 04                 a0 = a0 & 0x4
 28792: 52 07 1f                 jump @2095 if a0 != 0
      :                          @2093
 28795: 82 68 28                 a1 = u64 [s1 + 0x28]
 28798: 82 67 20                 a0 = u64 [s1 + 0x20]
 28801: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28804: 33 08 97 30 01           a1 = 0x13097
 28809: 33 09 01                 a2 = 0x1
 28812: 33 05 01                 s0 = 0x1
 28815: b4 a0 02 82 02           ra = 642, jump [a3]
      :                          @2094 [@dyn 321]
 28820: 52 07 3f                 jump @2099 if a0 != 0
      :                          @2095
 28823: 82 68 28                 a1 = u64 [s1 + 0x28]
 28826: 82 67 20                 a0 = u64 [s1 + 0x20]
 28829: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28832: 33 08 41 30 01           a1 = 0x13041
 28837: 33 09 01                 a2 = 0x1
 28840: b4 a0 02 84 02           ra = 644, jump [a3]
      :                          @2096 [@dyn 322]
 28845: 64 75                    s0 = a0
 28847: 28 24                    jump @2099
      :                          @2097
 28849: 82 58 28                 a1 = u64 [s0 + 0x28]
 28852: 82 57 20                 a0 = u64 [s0 + 0x20]
 28855: 82 8c 18                 a5 = u64 [a1 + 0x18]
 28858: 33 08 a0 04 01           a1 = 0x104a0
 28863: 33 09 04                 a2 = 0x4
 28866: 82 10 30                 ra = u64 [sp + 0x30]
 28869: 82 15 28                 s0 = u64 [sp + 0x28]
 28872: 82 16 20                 s1 = u64 [sp + 0x20]
 28875: 95 11 38                 sp = sp + 0x38
 28878: 32 0c                    jump [a5]
      :                          @2098
 28880: 8e 85                    s0 = a1 >u 0
 28882: 01                       fallthrough
      :                          @2099
 28883: 64 57                    a0 = s0
 28885: 82 10 30                 ra = u64 [sp + 0x30]
 28888: 82 15 28                 s0 = u64 [sp + 0x28]
 28891: 82 16 20                 s1 = u64 [sp + 0x20]
 28894: 95 11 38                 sp = sp + 0x38
 28897: 32 00                    ret
      :                          @2100
 28899: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 28902: 7b 10 20                 u64 [sp + 0x20] = ra
 28905: 7b 15 18                 u64 [sp + 0x18] = s0
 28908: 7b 16 10                 u64 [sp + 0x10] = s1
 28911: 64 95                    s0 = a2
 28913: 7b 17 08                 u64 [sp + 0x8] = a0
 28916: 51 09 5e                 jump @2108 if a2 == 0
      :                          @2101
 28919: 98 57 3c                 a0 = s0 >> 0x3c
 28922: 52 07 7f                 jump @2111 if a0 != 0
      :                          @2102
 28925: 88 72 01                 t0 = a0 <u 0x1
 28928: 7b 15                    u64 [sp] = s0
 28930: 97 59 03                 a2 = s0 << 0x3
 28933: 97 22 03                 t0 = t0 << 0x3
 28936: 33 04 b0 02 03           t2 = 0x302b0
 28941: 33 03 00 00 10           t1 = 0x100000
 28946: c8 34 00                 ra = t2 + t1
 28949: 01                       fallthrough
      :                          @2103
 28950: 82 05                    s0 = u64 [ra]
 28952: c8 95 06                 s1 = s0 + a2
 28955: ac 56 5d                 jump @2110 if s1 <u s0
      :                          @2104
 28958: c8 26 07                 a0 = s1 + t0
 28961: d8 67 0b                 a4 = a0 <u s1
 28964: d8 73 07                 a0 = t1 <u a0
 28967: d4 b7 07                 a0 = a0 | a4
 28970: 52 07 4e                 jump @2110 if a0 != 0
      :                          @2105
 28973: c9 64 07                 a0 = t2 - s1
 28976: c8 37 07                 a0 = a0 + t1
 28979: 84 7b 07                 a4 = a0 & 0x7
 28982: c8 b6 06                 s1 = s1 + a4
 28985: 01                       fallthrough
      :                          @2106
 28986: 82 0a                    a3 = u64 [ra]
 28988: ab 5a da                 jump @2103 if a3 != s0
      :                          @2107
 28991: 7b 06                    u64 [ra] = s1
 28993: 33 0c                    a5 = 0
 28995: c9 b7 06                 s1 = a0 - a4
 28998: 82 15                    s0 = u64 [sp]
 29000: 64 67                    a0 = s1
 29002: 33 00 86 02              ra = 0x286
 29006: 28 92 98 02              jump @13635
      :                          @2108
 29010: 33 06 08                 s1 = 0x8
 29013: 33 07 08                 a0 = 0x8
 29016: 50 20 86 02 88 98 02     ra = 646, jump @13635
      :                          @2109 [@dyn 323]
 29023: 82 17 08                 a0 = u64 [sp + 0x8]
 29026: 7b 75                    u64 [a0] = s0
 29028: 7b 76 08                 u64 [a0 + 0x8] = s1
 29031: 7b 75 10                 u64 [a0 + 0x10] = s0
 29034: 82 10 20                 ra = u64 [sp + 0x20]
 29037: 82 15 18                 s0 = u64 [sp + 0x18]
 29040: 82 16 10                 s1 = u64 [sp + 0x10]
 29043: 95 11 28                 sp = sp + 0x28
 29046: 32 00                    ret
      :                          @2110
 29048: 00                       trap
      :                          @2111
 29049: 00                       trap
      :                          @2112
 29050: 95 11 98                 sp = sp + 0xffffffffffffff98
 29053: 7b 10 60                 u64 [sp + 0x60] = ra
 29056: 7b 15 58                 u64 [sp + 0x58] = s0
 29059: 7b 16 50                 u64 [sp + 0x50] = s1
 29062: 51 09 33 01              jump @2133 if a2 == 0
      :                          @2113
 29066: 7b 17                    u64 [sp] = a0
 29068: 3a 07 28 00 03           a0 = u64 [0x30028]
 29073: ae 79 47 01              jump @2136 if a2 >=u a0
      :                          @2114
 29077: 64 80                    ra = a1
 29079: d8 79 02                 t0 = a2 <u a0
 29082: 7b 19 08                 u64 [sp + 0x8] = a2
 29085: 96 97 18                 a0 = a2 * 0x18
 29088: 97 22 03                 t0 = t0 << 0x3
 29091: 33 04 b0 02 03           t2 = 0x302b0
 29096: 33 03 00 00 10           t1 = 0x100000
 29101: c8 34 0b                 a4 = t2 + t1
 29104: 01                       fallthrough
      :                          @2115
 29105: 82 b8                    a1 = u64 [a4]
 29107: c8 78 05                 s0 = a1 + a0
 29110: ac 85 21 01              jump @2135 if s0 <u a1
      :                          @2116
 29114: c8 25 0a                 a3 = s0 + t0
 29117: d8 5a 0c                 a5 = a3 <u s0
 29120: d8 a3 0a                 a3 = t1 <u a3
 29123: d4 ca 0a                 a3 = a3 | a5
 29126: 52 0a 11 01              jump @2135 if a3 != 0
      :                          @2117
 29130: c9 54 0a                 a3 = t2 - s0
 29133: c8 3a 0a                 a3 = a3 + t1
 29136: 84 ac 07                 a5 = a3 & 0x7
 29139: c8 c5 05                 s0 = s0 + a5
 29142: 01                       fallthrough
      :                          @2118
 29143: 82 b6                    s1 = u64 [a4]
 29145: ab 86 d8                 jump @2115 if s1 != a1
      :                          @2119
 29148: 7b b5                    u64 [a4] = s0
 29150: 33 02                    t0 = 0
 29152: c9 ca 0a                 a3 = a3 - a5
 29155: 7b 1a 18                 u64 [sp + 0x18] = a3
 29158: 82 1a 08                 a3 = u64 [sp + 0x8]
 29161: 96 a7 18                 a0 = a3 * 0x18
 29164: c8 07 07                 a0 = a0 + ra
 29167: 7b 17 10                 u64 [sp + 0x10] = a0
 29170: 33 07 b0 02 03           a0 = 0x302b0
 29175: 7b 17 40                 u64 [sp + 0x40] = a0
 29178: 95 74 00 00 10           t2 = a0 + 0x100000
 29183: 7b 1a 38                 u64 [sp + 0x38] = a3
 29186: 7b 14 48                 u64 [sp + 0x48] = t2
 29189: 28 4c                    jump @2123
      :                          @2120
 29191: 33 09                    a2 = 0
 29193: 33 0a 08                 a3 = 0x8
 29196: 01                       fallthrough
      :                          @2121
 29197: 7b 1a 20                 u64 [sp + 0x20] = a3
 29200: 82 15 38                 s0 = u64 [sp + 0x38]
 29203: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 29206: 95 00 18                 ra = ra + 0x18
 29209: 7b 10 28                 u64 [sp + 0x28] = ra
 29212: 95 27 01                 a0 = t0 + 0x1
 29215: 7b 17 38                 u64 [sp + 0x38] = a0
 29218: 96 27 18                 a0 = t0 * 0x18
 29221: 82 16 18                 s1 = u64 [sp + 0x18]
 29224: c8 76 06                 s1 = s1 + a0
 29227: 64 a7                    a0 = a3
 29229: 50 20 88 02 b3 97 02     ra = 648, jump @13635
      :                          @2122 [@dyn 324]
 29236: 82 10 28                 ra = u64 [sp + 0x28]
 29239: 82 17 30                 a0 = u64 [sp + 0x30]
 29242: 7b 67                    u64 [s1] = a0
 29244: 82 18 20                 a1 = u64 [sp + 0x20]
 29247: 7b 68 08                 u64 [s1 + 0x8] = a1
 29250: 7b 67 10                 u64 [s1 + 0x10] = a0
 29253: 82 12 38                 t0 = u64 [sp + 0x38]
 29256: 82 14 48                 t2 = u64 [sp + 0x48]
 29259: 7b 15 38                 u64 [sp + 0x38] = s0
 29262: 51 05 64                 jump @2132 if s0 == 0
      :                          @2123
 29265: 82 17 10                 a0 = u64 [sp + 0x10]
 29268: aa 70 5e                 jump @2132 if ra == a0
      :                          @2124
 29271: 82 0b 10                 a4 = u64 [ra + 0x10]
 29274: 82 08 08                 a1 = u64 [ra + 0x8]
 29277: 7b 1b 30                 u64 [sp + 0x30] = a4
 29280: 51 0b a7                 jump @2120 if a4 == 0
      :                          @2125
 29283: 98 b9 3c                 a2 = a4 >> 0x3c
 29286: 52 09 72                 jump @2136 if a2 != 0
      :                          @2126
 29289: 88 9a 01                 a3 = a2 <u 0x1
 29292: 97 b9 03                 a2 = a4 << 0x3
 29295: 97 a3 03                 t1 = a3 << 0x3
 29298: 01                       fallthrough
      :                          @2127
 29299: 82 4b                    a4 = u64 [t2]
 29301: c8 9b 0c                 a5 = a4 + a2
 29304: ac bc 11 a6 02           jump @13937 if a5 <u a4
      :                          @2128
 29309: c8 3c 07                 a0 = a5 + t1
 29312: d8 c7 06                 s1 = a0 <u a5
 29315: 8e 77 00 00 10           a0 = a0 >u 0x100000
 29320: d4 67 07                 a0 = a0 | s1
 29323: 52 07 fe a5 02           jump @13937 if a0 != 0
      :                          @2129
 29328: 82 17 40                 a0 = u64 [sp + 0x40]
 29331: c9 c7 07                 a0 = a0 - a5
 29334: 95 77 00 00 10           a0 = a0 + 0x100000
 29339: 84 76 07                 s1 = a0 & 0x7
 29342: c8 6c 0c                 a5 = a5 + s1
 29345: 82 14 48                 t2 = u64 [sp + 0x48]
 29348: 01                       fallthrough
      :                          @2130
 29349: 82 45                    s0 = u64 [t2]
 29351: ab b5 cc                 jump @2127 if s0 != a4
      :                          @2131
 29354: 7b 4c                    u64 [t2] = a5
 29356: c9 67 0a                 a3 = a0 - s1
 29359: 28 5e ff                 jump @2121
      :                          @2132
 29362: 82 19 08                 a2 = u64 [sp + 0x8]
 29365: 82 17                    a0 = u64 [sp]
 29367: 28 07                    jump @2134
      :                          @2133
 29369: 49 11 18 08              u64 [sp + 24] = 0x8
 29373: 01                       fallthrough
      :                          @2134
 29374: 7b 79                    u64 [a0] = a2
 29376: 82 18 18                 a1 = u64 [sp + 0x18]
 29379: 7b 78 08                 u64 [a0 + 0x8] = a1
 29382: 7b 79 10                 u64 [a0 + 0x10] = a2
 29385: 82 10 60                 ra = u64 [sp + 0x60]
 29388: 82 15 58                 s0 = u64 [sp + 0x58]
 29391: 82 16 50                 s1 = u64 [sp + 0x50]
 29394: 95 11 68                 sp = sp + 0x68
 29397: 32 00                    ret
      :                          @2135
 29399: 00                       trap
      :                          @2136
 29400: 00                       trap
      :                          @2137
 29401: 33 04                    t2 = 0
 29403: aa 87 4b                 jump @2145 if a0 == a1
      :                          @2138
 29406: 33 0a                    a3 = 0
 29408: 14 09 ab aa aa aa aa aa aa aa a2 = 0xaaaaaaaaaaaaaaab
 29418: c9 78 08                 a1 = a1 - a0
 29421: d6 98 08                 a1 = a1 mulhu a2
 29424: 98 83 04                 t1 = a1 >> 0x4
 29427: 33 02 18                 t0 = 0x18
 29430: 28 0e                    jump @2141
      :                          @2139
 29432: 33 0b                    a4 = 0
 29434: 01                       fallthrough
      :                          @2140
 29435: 95 aa 01                 a3 = a3 + 0x1
 29438: c8 b4 04                 t2 = t2 + a4
 29441: aa 3a 25                 jump @2145 if a3 == t1
      :                          @2141
 29444: ca 2a 08                 a1 = a3 * t0
 29447: c8 78 08                 a1 = a1 + a0
 29450: 82 8c 10                 a5 = u64 [a1 + 0x10]
 29453: 51 0c eb                 jump @2139 if a5 == 0
      :                          @2142
 29456: 82 88 08                 a1 = u64 [a1 + 0x8]
 29459: 33 0b                    a4 = 0
 29461: 01                       fallthrough
      :                          @2143
 29462: 7c 89                    a2 = u8 [a1]
 29464: c8 9b 0b                 a4 = a4 + a2
 29467: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 29470: 95 88 01                 a1 = a1 + 0x1
 29473: 52 0c f5                 jump @2143 if a5 != 0
      :                          @2144
 29476: 28 d7                    jump @2140
      :                          @2145
 29478: 64 47                    a0 = t2
 29480: 32 00                    ret
      :                          @2146 [@dyn 325]
 29482: 33 07 d0 04 01           a0 = 0x104d0
 29487: 32 00                    ret
      :                          @2147
 29489: 51 08 8c 00              jump @2155 if a1 == 0
      :                          @2148
 29493: 33 0c b0 02 03           a5 = 0x302b0
 29498: 33 02 00 00 10           t0 = 0x100000
 29503: c8 2c 03                 t1 = a5 + t0
 29506: 01                       fallthrough
      :                          @2149
 29507: 82 39                    a2 = u64 [t1]
 29509: c8 89 0a                 a3 = a2 + a1
 29512: ac 9a 82 00              jump @2156 if a3 <u a2
      :                          @2150
 29516: 95 ab 01                 a4 = a3 + 0x1
 29519: 88 bc 01                 a5 = a4 <u 0x1
 29522: d8 b2 0b                 a4 = t0 <u a4
 29525: d4 cb 0b                 a4 = a4 | a5
 29528: 52 0b 72                 jump @2156 if a4 != 0
      :                          @2151
 29531: 82 3b                    a4 = u64 [t1]
 29533: ab 9b e6                 jump @2149 if a4 != a2
      :                          @2152
 29536: 7b 3a                    u64 [t1] = a3
 29538: 33 0c b0 02 03           a5 = 0x302b0
 29543: 95 cb 00 00 10           a4 = a5 + 0x100000
 29548: c9 ab 02                 t0 = a4 - a3
 29551: 95 ca 00 00 10           a3 = a5 + 0x100000
 29556: c9 9a 03                 t1 = a3 - a2
 29559: 9a 8b                    a4 = -a1
 29561: 33 04 70 02 03           t2 = 0x30270
 29566: 33 09 b0 04 01           a2 = 0x104b0
 29571: 01                       fallthrough
      :                          @2153
 29572: 3a 0c 70 02 03           a5 = u64 [0x30270]
 29577: 97 ca 0d                 a3 = a5 << 0xd
 29580: d3 ca 0a                 a3 = a3 ^ a5
 29583: 98 ac 07                 a5 = a3 >> 0x7
 29586: d3 ca 0a                 a3 = a3 ^ a5
 29589: 97 ac 11                 a5 = a3 << 0x11
 29592: d3 ac 0c                 a5 = a5 ^ a3
 29595: 3e 0c 70 02 03           u64 [0x30270] = a5
 29600: 84 aa 03                 a3 = a3 & 0x3
 29603: c8 9a 0a                 a3 = a3 + a2
 29606: 7c aa                    a3 = u8 [a3]
 29608: c8 b3 0c                 a5 = t1 + a4
 29611: 95 bb 01                 a4 = a4 + 0x1
 29614: 78 ca                    u8 [a5] = a3
 29616: 52 0b d4                 jump @2153 if a4 != 0
      :                          @2154
 29619: 7b 78                    u64 [a0] = a1
 29621: 7b 72 08                 u64 [a0 + 0x8] = t0
 29624: 7b 78 10                 u64 [a0 + 0x10] = a1
 29627: 32 00                    ret
      :                          @2155
 29629: 33 02 01                 t0 = 0x1
 29632: 7b 78                    u64 [a0] = a1
 29634: 7b 72 08                 u64 [a0 + 0x8] = t0
 29637: 7b 78 10                 u64 [a0 + 0x10] = a1
 29640: 32 00                    ret
      :                          @2156
 29642: 00                       trap
      :                          @2157
 29643: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 29646: 7b 10 10                 u64 [sp + 0x10] = ra
 29649: 7b 15 08                 u64 [sp + 0x8] = s0
 29652: 7b 16                    u64 [sp] = s1
 29654: 51 08 97 00              jump @2166 if a1 == 0
      :                          @2158
 29658: 97 82 03                 t0 = a1 << 0x3
 29661: 33 04 b0 02 03           t2 = 0x302b0
 29666: 33 03 00 00 10           t1 = 0x100000
 29671: c8 34 00                 ra = t2 + t1
 29674: 01                       fallthrough
      :                          @2159
 29675: 82 0b                    a4 = u64 [ra]
 29677: c8 2b 09                 a2 = a4 + t0
 29680: ac b9 96 00              jump @2168 if a2 <u a4
      :                          @2160
 29684: 95 96 08                 s1 = a2 + 0x8
 29687: d8 96 05                 s0 = s1 <u a2
 29690: d8 63 06                 s1 = t1 <u s1
 29693: d4 65 05                 s0 = s0 | s1
 29696: 52 05 86 00              jump @2168 if s0 != 0
      :                          @2161
 29700: c9 94 05                 s0 = t2 - a2
 29703: c8 35 05                 s0 = s0 + t1
 29706: 84 56 07                 s1 = s0 & 0x7
 29709: c8 69 09                 a2 = a2 + s1
 29712: 01                       fallthrough
      :                          @2162
 29713: 82 0a                    a3 = u64 [ra]
 29715: ab ba d8                 jump @2159 if a3 != a4
      :                          @2163
 29718: 7b 09                    u64 [ra] = a2
 29720: 3a 04 30 00 03           t2 = u64 [0x30030]
 29725: 3a 0b 38 00 03           a4 = u64 [0x30038]
 29730: c9 65 02                 t0 = s0 - s1
 29733: 33 0c 70 02 03           a5 = 0x30270
 29738: 33 03 64                 t1 = 0x64
 29741: 64 89                    a2 = a1
 29743: 64 2a                    a3 = t0
 29745: 01                       fallthrough
      :                          @2164
 29746: 3a 05 70 02 03           s0 = u64 [0x30270]
 29751: 97 56 0d                 s1 = s0 << 0xd
 29754: d3 65 05                 s0 = s0 ^ s1
 29757: 98 56 07                 s1 = s0 >> 0x7
 29760: d3 65 05                 s0 = s0 ^ s1
 29763: 97 56 11                 s1 = s0 << 0x11
 29766: d3 65 05                 s0 = s0 ^ s1
 29769: ca 45 06                 s1 = s0 * t2
 29772: 3e 05 70 02 03           u64 [0x30270] = s0
 29777: 98 65 02                 s0 = s1 >> 0x2
 29780: d6 b5 05                 s0 = s0 mulhu a4
 29783: 98 55 02                 s0 = s0 >> 0x2
 29786: ca 35 05                 s0 = s0 * t1
 29789: c9 56 06                 s1 = s1 - s0
 29792: 7b a6                    u64 [a3] = s1
 29794: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 29797: 95 aa 08                 a3 = a3 + 0x8
 29800: 52 09 ca                 jump @2164 if a2 != 0
      :                          @2165
 29803: 28 06                    jump @2167
      :                          @2166
 29805: 33 02 08                 t0 = 0x8
 29808: 01                       fallthrough
      :                          @2167
 29809: 7b 78                    u64 [a0] = a1
 29811: 7b 72 08                 u64 [a0 + 0x8] = t0
 29814: 7b 78 10                 u64 [a0 + 0x10] = a1
 29817: 82 10 10                 ra = u64 [sp + 0x10]
 29820: 82 15 08                 s0 = u64 [sp + 0x8]
 29823: 82 16                    s1 = u64 [sp]
 29825: 95 11 18                 sp = sp + 0x18
 29828: 32 00                    ret
      :                          @2168
 29830: 00                       trap
      :                          @2169
 29831: 51 08 86 00              jump @2177 if a1 == 0
      :                          @2170
 29835: 33 09 b0 02 03           a2 = 0x302b0
 29840: 33 0c b0 02 03           a5 = 0x302b0
 29845: 33 02 00 00 10           t0 = 0x100000
 29850: c8 2c 03                 t1 = a5 + t0
 29853: 01                       fallthrough
      :                          @2171
 29854: 82 3a                    a3 = u64 [t1]
 29856: c8 8a 04                 t2 = a3 + a1
 29859: ac a4 77                 jump @2178 if t2 <u a3
      :                          @2172
 29862: 95 4b 01                 a4 = t2 + 0x1
 29865: 88 bc 01                 a5 = a4 <u 0x1
 29868: d8 b2 0b                 a4 = t0 <u a4
 29871: d4 cb 0b                 a4 = a4 | a5
 29874: 52 0b 68                 jump @2178 if a4 != 0
      :                          @2173
 29877: 82 3b                    a4 = u64 [t1]
 29879: ab ab e7                 jump @2171 if a4 != a3
      :                          @2174
 29882: 7b 34                    u64 [t1] = t2
 29884: 33 0b b0 02 03           a4 = 0x302b0
 29889: 95 b9 00 00 10           a2 = a4 + 0x100000
 29894: c9 49 02                 t0 = a2 - t2
 29897: 95 bb 00 00 10           a4 = a4 + 0x100000
 29902: c9 ab 03                 t1 = a4 - a3
 29905: 9a 8b                    a4 = -a1
 29907: 33 0c 70 02 03           a5 = 0x30270
 29912: 01                       fallthrough
      :                          @2175
 29913: 3a 0a 70 02 03           a3 = u64 [0x30270]
 29918: 97 a9 0d                 a2 = a3 << 0xd
 29921: d3 a9 09                 a2 = a2 ^ a3
 29924: 98 9a 07                 a3 = a2 >> 0x7
 29927: d3 a9 09                 a2 = a2 ^ a3
 29930: 97 9a 11                 a3 = a2 << 0x11
 29933: d3 9a 0a                 a3 = a3 ^ a2
 29936: 3e 0a 70 02 03           u64 [0x30270] = a3
 29941: 84 99 03                 a2 = a2 & 0x3
 29944: c8 b3 0a                 a3 = t1 + a4
 29947: 95 bb 01                 a4 = a4 + 0x1
 29950: 78 a9                    u8 [a3] = a2
 29952: 52 0b d9                 jump @2175 if a4 != 0
      :                          @2176
 29955: 7b 78                    u64 [a0] = a1
 29957: 7b 72 08                 u64 [a0 + 0x8] = t0
 29960: 7b 78 10                 u64 [a0 + 0x10] = a1
 29963: 32 00                    ret
      :                          @2177
 29965: 33 02 01                 t0 = 0x1
 29968: 7b 78                    u64 [a0] = a1
 29970: 7b 72 08                 u64 [a0 + 0x8] = t0
 29973: 7b 78 10                 u64 [a0 + 0x10] = a1
 29976: 32 00                    ret
      :                          @2178
 29978: 00                       trap
      :                          @2179
 29979: 82 4b                    a4 = u64 [t2]
 29981: 95 bc 40                 a5 = a4 + 0x40
 29984: ac bc 81 01              jump @2184 if a5 <u a4
      :                          @2180
 29988: 95 c8 08                 a1 = a5 + 0x8
 29991: d8 c8 09                 a2 = a1 <u a5
 29994: d8 82 08                 a1 = t0 <u a1
 29997: d4 98 08                 a1 = a1 | a2
 30000: 52 08 71 01              jump @2184 if a1 != 0
      :                          @2181
 30004: c9 c3 08                 a1 = t1 - a5
 30007: c8 28 08                 a1 = a1 + t0
 30010: 84 89 07                 a2 = a1 & 0x7
 30013: c8 9c 0c                 a5 = a5 + a2
 30016: 01                       fallthrough
      :                          @2182
 30017: 82 4a                    a3 = u64 [t2]
 30019: ab ba d8                 jump @2179 if a3 != a4
      :                          @2183
 30022: 7b 4c                    u64 [t2] = a5
 30024: 33 0a 70 02 03           a3 = 0x30270
 30029: 3a 0b 70 02 03           a4 = u64 [0x30270]
 30034: c9 98 08                 a1 = a1 - a2
 30037: 97 b9 0d                 a2 = a4 << 0xd
 30040: d3 b9 09                 a2 = a2 ^ a4
 30043: 98 9b 07                 a4 = a2 >> 0x7
 30046: d3 b9 09                 a2 = a2 ^ a4
 30049: 97 9b 11                 a4 = a2 << 0x11
 30052: d3 9b 0b                 a4 = a4 ^ a2
 30055: 97 9c 02                 a5 = a2 << 0x2
 30058: c8 c9 09                 a2 = a2 + a5
 30061: 3e 0b 70 02 03           u64 [0x30270] = a4
 30066: 84 99 07                 a2 = a2 & 0x7
 30069: 7b 89                    u64 [a1] = a2
 30071: 3a 09 70 02 03           a2 = u64 [0x30270]
 30076: 97 9b 0d                 a4 = a2 << 0xd
 30079: d3 b9 09                 a2 = a2 ^ a4
 30082: 98 9b 07                 a4 = a2 >> 0x7
 30085: d3 b9 09                 a2 = a2 ^ a4
 30088: 97 9b 11                 a4 = a2 << 0x11
 30091: d3 9b 0b                 a4 = a4 ^ a2
 30094: 97 9c 02                 a5 = a2 << 0x2
 30097: c8 c9 09                 a2 = a2 + a5
 30100: 3e 0b 70 02 03           u64 [0x30270] = a4
 30105: 84 99 07                 a2 = a2 & 0x7
 30108: 7b 89 08                 u64 [a1 + 0x8] = a2
 30111: 3a 09 70 02 03           a2 = u64 [0x30270]
 30116: 97 9b 0d                 a4 = a2 << 0xd
 30119: d3 b9 09                 a2 = a2 ^ a4
 30122: 98 9b 07                 a4 = a2 >> 0x7
 30125: d3 b9 09                 a2 = a2 ^ a4
 30128: 97 9b 11                 a4 = a2 << 0x11
 30131: d3 9b 0b                 a4 = a4 ^ a2
 30134: 97 9c 02                 a5 = a2 << 0x2
 30137: c8 c9 09                 a2 = a2 + a5
 30140: 3e 0b 70 02 03           u64 [0x30270] = a4
 30145: 84 99 07                 a2 = a2 & 0x7
 30148: 7b 89 10                 u64 [a1 + 0x10] = a2
 30151: 3a 09 70 02 03           a2 = u64 [0x30270]
 30156: 97 9b 0d                 a4 = a2 << 0xd
 30159: d3 b9 09                 a2 = a2 ^ a4
 30162: 98 9b 07                 a4 = a2 >> 0x7
 30165: d3 b9 09                 a2 = a2 ^ a4
 30168: 97 9b 11                 a4 = a2 << 0x11
 30171: d3 9b 0b                 a4 = a4 ^ a2
 30174: 97 9c 02                 a5 = a2 << 0x2
 30177: c8 c9 09                 a2 = a2 + a5
 30180: 3e 0b 70 02 03           u64 [0x30270] = a4
 30185: 84 99 07                 a2 = a2 & 0x7
 30188: 7b 89 18                 u64 [a1 + 0x18] = a2
 30191: 3a 09 70 02 03           a2 = u64 [0x30270]
 30196: 97 9b 0d                 a4 = a2 << 0xd
 30199: d3 b9 09                 a2 = a2 ^ a4
 30202: 98 9b 07                 a4 = a2 >> 0x7
 30205: d3 b9 09                 a2 = a2 ^ a4
 30208: 97 9b 11                 a4 = a2 << 0x11
 30211: d3 9b 0b                 a4 = a4 ^ a2
 30214: 97 9c 02                 a5 = a2 << 0x2
 30217: c8 c9 09                 a2 = a2 + a5
 30220: 3e 0b 70 02 03           u64 [0x30270] = a4
 30225: 84 99 07                 a2 = a2 & 0x7
 30228: 7b 89 20                 u64 [a1 + 0x20] = a2
 30231: 3a 09 70 02 03           a2 = u64 [0x30270]
 30236: 97 9b 0d                 a4 = a2 << 0xd
 30239: d3 b9 09                 a2 = a2 ^ a4
 30242: 98 9b 07                 a4 = a2 >> 0x7
 30245: d3 b9 09                 a2 = a2 ^ a4
 30248: 97 9b 11                 a4 = a2 << 0x11
 30251: d3 9b 0b                 a4 = a4 ^ a2
 30254: 97 9c 02                 a5 = a2 << 0x2
 30257: c8 c9 09                 a2 = a2 + a5
 30260: 3e 0b 70 02 03           u64 [0x30270] = a4
 30265: 84 99 07                 a2 = a2 & 0x7
 30268: 7b 89 28                 u64 [a1 + 0x28] = a2
 30271: 3a 09 70 02 03           a2 = u64 [0x30270]
 30276: 97 9b 0d                 a4 = a2 << 0xd
 30279: d3 b9 09                 a2 = a2 ^ a4
 30282: 98 9b 07                 a4 = a2 >> 0x7
 30285: d3 b9 09                 a2 = a2 ^ a4
 30288: 97 9b 11                 a4 = a2 << 0x11
 30291: d3 9b 0b                 a4 = a4 ^ a2
 30294: 97 9c 02                 a5 = a2 << 0x2
 30297: c8 c9 09                 a2 = a2 + a5
 30300: 3e 0b 70 02 03           u64 [0x30270] = a4
 30305: 84 99 07                 a2 = a2 & 0x7
 30308: 7b 89 30                 u64 [a1 + 0x30] = a2
 30311: 3a 09 70 02 03           a2 = u64 [0x30270]
 30316: 97 9b 0d                 a4 = a2 << 0xd
 30319: d3 b9 09                 a2 = a2 ^ a4
 30322: 98 9b 07                 a4 = a2 >> 0x7
 30325: d3 b9 09                 a2 = a2 ^ a4
 30328: 97 9b 11                 a4 = a2 << 0x11
 30331: d3 9b 0b                 a4 = a4 ^ a2
 30334: 97 9c 02                 a5 = a2 << 0x2
 30337: c8 c9 09                 a2 = a2 + a5
 30340: 3e 0b 70 02 03           u64 [0x30270] = a4
 30345: 84 99 07                 a2 = a2 & 0x7
 30348: 7b 89 38                 u64 [a1 + 0x38] = a2
 30351: 33 09 08                 a2 = 0x8
 30354: 7b 79                    u64 [a0] = a2
 30356: 7b 78 08                 u64 [a0 + 0x8] = a1
 30359: 7b 79 10                 u64 [a0 + 0x10] = a2
 30362: 82 15                    s0 = u64 [sp]
 30364: c8 91 01                 sp = sp + a2
 30367: 32 00                    ret
      :                          @2184
 30369: 00                       trap
      :                          @2185
 30370: 82 9a                    a3 = u64 [a2]
 30372: 95 ab 20                 a4 = a3 + 0x20
 30375: ac ab 2e 01              jump @2203 if a4 <u a3
      :                          @2186
 30379: 95 b7 04                 a0 = a4 + 0x4
 30382: d8 b7 0c                 a5 = a0 <u a4
 30385: d8 72 07                 a0 = t0 <u a0
 30388: d4 c7 07                 a0 = a0 | a5
 30391: 52 07 1e 01              jump @2203 if a0 != 0
      :                          @2187
 30395: c9 b6 07                 a0 = s1 - a4
 30398: c8 27 07                 a0 = a0 + t0
 30401: 84 7c 03                 a5 = a0 & 0x3
 30404: c8 cb 0b                 a4 = a4 + a5
 30407: 01                       fallthrough
      :                          @2188
 30408: 82 95                    s0 = u64 [a2]
 30410: ab a5 d8                 jump @2185 if s0 != a3
      :                          @2189
 30413: 7b 9b                    u64 [a2] = a4
 30415: c9 c7 07                 a0 = a0 - a5
 30418: 48 07 41                 u32 [a0 + 0] = 0x41
 30421: 49 11 28 08              u64 [sp + 40] = 0x8
 30425: 7b 17 30                 u64 [sp + 0x30] = a0
 30428: 33 06 01                 s1 = 0x1
 30431: 7b 16 38                 u64 [sp + 0x38] = s1
 30434: 33 08 d0 05 01           a1 = 0x105d0
 30439: c8 68 0b                 a4 = a1 + s1
 30442: 33 05 04                 s0 = 0x4
 30445: 7b 18 10                 u64 [sp + 0x10] = a1
 30448: 95 80 1a                 ra = a1 + 0x1a
 30451: 33 02 df 00              t0 = 0xdf
 30455: 33 03 f0 00              t1 = 0xf0
 30459: 33 04 00 00 11           t2 = 0x110000
 30464: 7b 10 08                 u64 [sp + 0x8] = ra
 30467: 28 1e                    jump @2193
      :                          @2190
 30469: 95 bb 01                 a4 = a4 + 0x1
 30472: 01                       fallthrough
      :                          @2191
 30473: 82 18 28                 a1 = u64 [sp + 0x28]
 30476: aa 86 6c                 jump @2200 if s1 == a1
      :                          @2192
 30479: c8 57 08                 a1 = a0 + s0
 30482: 7a 8c                    u32 [a1] = a5
 30484: 95 66 01                 s1 = s1 + 0x1
 30487: 7b 16 38                 u64 [sp + 0x38] = s1
 30490: 95 55 04                 s0 = s0 + 0x4
 30493: aa 0b 97 00              jump @2202 if a4 == ra
      :                          @2193
 30497: 7d b8                    a1 = i8 [a4]
 30499: 84 8c ff 00              a5 = a1 & 0xff
 30503: 59 08 de                 jump @2190 if a1 >=s 0
      :                          @2194
 30506: 7c b9 01                 a2 = u8 [a4 + 0x1]
 30509: 84 c8 1f                 a1 = a5 & 0x1f
 30512: 84 99 3f                 a2 = a2 & 0x3f
 30515: ae c2 2f                 jump @2198 if t0 >=u a5
      :                          @2195
 30518: 7c ba 02                 a3 = u8 [a4 + 0x2]
 30521: 97 99 06                 a2 = a2 << 0x6
 30524: 84 aa 3f                 a3 = a3 & 0x3f
 30527: d4 a9 09                 a2 = a2 | a3
 30530: ac 3c 2b                 jump @2199 if a5 <u t1
      :                          @2196
 30533: 7c ba 03                 a3 = u8 [a4 + 0x3]
 30536: 97 88 3d                 a1 = a1 << 0x3d
 30539: 98 88 2b                 a1 = a1 >> 0x2b
 30542: 97 99 06                 a2 = a2 << 0x6
 30545: 84 aa 3f                 a3 = a3 & 0x3f
 30548: d4 a9 09                 a2 = a2 | a3
 30551: d4 89 0c                 a5 = a2 | a1
 30554: aa 4c 5a                 jump @2202 if a5 == t2
      :                          @2197
 30557: 95 bb 04                 a4 = a4 + 0x4
 30560: 28 a9                    jump @2191
      :                          @2198
 30562: 95 bb 02                 a4 = a4 + 0x2
 30565: 97 88 06                 a1 = a1 << 0x6
 30568: d4 98 0c                 a5 = a1 | a2
 30571: 28 9e                    jump @2191
      :                          @2199
 30573: 95 bb 03                 a4 = a4 + 0x3
 30576: 97 88 0c                 a1 = a1 << 0xc
 30579: d4 89 0c                 a5 = a2 | a1
 30582: 28 93                    jump @2191
      :                          @2200
 30584: 82 17 10                 a0 = u64 [sp + 0x10]
 30587: c9 b7 07                 a0 = a0 - a4
 30590: 95 77 1d                 a0 = a0 + 0x1d
 30593: 98 77 02                 a0 = a0 >> 0x2
 30596: 95 79 01                 a2 = a0 + 0x1
 30599: 95 17 28                 a0 = sp + 0x28
 30602: 64 68                    a1 = s1
 30604: 7b 1b 20                 u64 [sp + 0x20] = a4
 30607: 7b 1c 18                 u64 [sp + 0x18] = a5
 30610: 50 20 8c 02 76 dd        ra = 652, jump @1629
      :                          @2201 [@dyn 326]
 30616: 82 1c 18                 a5 = u64 [sp + 0x18]
 30619: 33 04 00 00 11           t2 = 0x110000
 30624: 33 03 f0 00              t1 = 0xf0
 30628: 33 02 df 00              t0 = 0xdf
 30632: 82 10 08                 ra = u64 [sp + 0x8]
 30635: 82 1b 20                 a4 = u64 [sp + 0x20]
 30638: 82 17 30                 a0 = u64 [sp + 0x30]
 30641: 28 5e ff                 jump @2192
      :                          @2202
 30644: 82 17 38                 a0 = u64 [sp + 0x38]
 30647: 82 18 30                 a1 = u64 [sp + 0x30]
 30650: 82 19 28                 a2 = u64 [sp + 0x28]
 30653: 82 1a                    a3 = u64 [sp]
 30655: 7b a7 10                 u64 [a3 + 0x10] = a0
 30658: 7b a8 08                 u64 [a3 + 0x8] = a1
 30661: 7b a9                    u64 [a3] = a2
 30663: 82 10 50                 ra = u64 [sp + 0x50]
 30666: 82 15 48                 s0 = u64 [sp + 0x48]
 30669: 82 16 40                 s1 = u64 [sp + 0x40]
 30672: 95 11 58                 sp = sp + 0x58
 30675: 32 00                    ret
      :                          @2203
 30677: 00                       trap
      :                          @2204
 30678: 82 ab                    a4 = u64 [a3]
 30680: 95 b8 08                 a1 = a4 + 0x8
 30683: ac b8 41 01              jump @2208 if a1 <u a4
      :                          @2205
 30687: 95 8c 01                 a5 = a1 + 0x1
 30690: 88 c9 01                 a2 = a5 <u 0x1
 30693: d8 c2 0c                 a5 = t0 <u a5
 30696: d4 c9 09                 a2 = a2 | a5
 30699: 52 09 31 01              jump @2208 if a2 != 0
      :                          @2206
 30703: 82 a9                    a2 = u64 [a3]
 30705: ab b9 e5                 jump @2204 if a2 != a4
      :                          @2207
 30708: 7b a8                    u64 [a3] = a1
 30710: 33 0c                    a5 = 0
 30712: 3a 0a 70 02 03           a3 = u64 [0x30270]
 30717: 33 0b b0 02 13           a4 = 0x1302b0
 30722: c9 8b 08                 a1 = a4 - a1
 30725: 97 ab 0d                 a4 = a3 << 0xd
 30728: d3 ba 0a                 a3 = a3 ^ a4
 30731: 98 ab 07                 a4 = a3 >> 0x7
 30734: d3 ba 0a                 a3 = a3 ^ a4
 30737: 97 ab 11                 a4 = a3 << 0x11
 30740: d3 ab 0b                 a4 = a4 ^ a3
 30743: 3e 0b 70 02 03           u64 [0x30270] = a4
 30748: 84 aa 01                 a3 = a3 & 0x1
 30751: 78 8a                    u8 [a1] = a3
 30753: 3a 0a 70 02 03           a3 = u64 [0x30270]
 30758: 97 ab 0d                 a4 = a3 << 0xd
 30761: d3 ba 0a                 a3 = a3 ^ a4
 30764: 98 ab 07                 a4 = a3 >> 0x7
 30767: d3 ba 0a                 a3 = a3 ^ a4
 30770: 97 ab 11                 a4 = a3 << 0x11
 30773: d3 ab 0b                 a4 = a4 ^ a3
 30776: 3e 0b 70 02 03           u64 [0x30270] = a4
 30781: 84 aa 01                 a3 = a3 & 0x1
 30784: 78 8a 01                 u8 [a1 + 0x1] = a3
 30787: 3a 0a 70 02 03           a3 = u64 [0x30270]
 30792: 97 ab 0d                 a4 = a3 << 0xd
 30795: d3 ba 0a                 a3 = a3 ^ a4
 30798: 98 ab 07                 a4 = a3 >> 0x7
 30801: d3 ba 0a                 a3 = a3 ^ a4
 30804: 97 ab 11                 a4 = a3 << 0x11
 30807: d3 ab 0b                 a4 = a4 ^ a3
 30810: 3e 0b 70 02 03           u64 [0x30270] = a4
 30815: 84 aa 01                 a3 = a3 & 0x1
 30818: 78 8a 02                 u8 [a1 + 0x2] = a3
 30821: 3a 0a 70 02 03           a3 = u64 [0x30270]
 30826: 97 ab 0d                 a4 = a3 << 0xd
 30829: d3 ba 0a                 a3 = a3 ^ a4
 30832: 98 ab 07                 a4 = a3 >> 0x7
 30835: d3 ba 0a                 a3 = a3 ^ a4
 30838: 97 ab 11                 a4 = a3 << 0x11
 30841: d3 ab 0b                 a4 = a4 ^ a3
 30844: 3e 0b 70 02 03           u64 [0x30270] = a4
 30849: 84 aa 01                 a3 = a3 & 0x1
 30852: 78 8a 03                 u8 [a1 + 0x3] = a3
 30855: 3a 0a 70 02 03           a3 = u64 [0x30270]
 30860: 97 ab 0d                 a4 = a3 << 0xd
 30863: d3 ba 0a                 a3 = a3 ^ a4
 30866: 98 ab 07                 a4 = a3 >> 0x7
 30869: d3 ba 0a                 a3 = a3 ^ a4
 30872: 97 ab 11                 a4 = a3 << 0x11
 30875: d3 ab 0b                 a4 = a4 ^ a3
 30878: 3e 0b 70 02 03           u64 [0x30270] = a4
 30883: 84 aa 01                 a3 = a3 & 0x1
 30886: 78 8a 04                 u8 [a1 + 0x4] = a3
 30889: 3a 0a 70 02 03           a3 = u64 [0x30270]
 30894: 97 ab 0d                 a4 = a3 << 0xd
 30897: d3 ba 0a                 a3 = a3 ^ a4
 30900: 98 ab 07                 a4 = a3 >> 0x7
 30903: d3 ba 0a                 a3 = a3 ^ a4
 30906: 97 ab 11                 a4 = a3 << 0x11
 30909: d3 ab 0b                 a4 = a4 ^ a3
 30912: 3e 0b 70 02 03           u64 [0x30270] = a4
 30917: 84 aa 01                 a3 = a3 & 0x1
 30920: 78 8a 05                 u8 [a1 + 0x5] = a3
 30923: 3a 0a 70 02 03           a3 = u64 [0x30270]
 30928: 97 ab 0d                 a4 = a3 << 0xd
 30931: d3 ba 0a                 a3 = a3 ^ a4
 30934: 98 ab 07                 a4 = a3 >> 0x7
 30937: d3 ba 0a                 a3 = a3 ^ a4
 30940: 97 ab 11                 a4 = a3 << 0x11
 30943: d3 ab 0b                 a4 = a4 ^ a3
 30946: 3e 0b 70 02 03           u64 [0x30270] = a4
 30951: 84 aa 01                 a3 = a3 & 0x1
 30954: 78 8a 06                 u8 [a1 + 0x6] = a3
 30957: 3a 0a 70 02 03           a3 = u64 [0x30270]
 30962: 97 ab 0d                 a4 = a3 << 0xd
 30965: d3 ba 0a                 a3 = a3 ^ a4
 30968: 98 ab 07                 a4 = a3 >> 0x7
 30971: d3 ba 0a                 a3 = a3 ^ a4
 30974: 97 ab 11                 a4 = a3 << 0x11
 30977: d3 ab 0b                 a4 = a4 ^ a3
 30980: 3e 0b 70 02 03           u64 [0x30270] = a4
 30985: 84 aa 01                 a3 = a3 & 0x1
 30988: 78 8a 07                 u8 [a1 + 0x7] = a3
 30991: 33 09 08                 a2 = 0x8
 30994: 7b 79                    u64 [a0] = a2
 30996: 7b 78 08                 u64 [a0 + 0x8] = a1
 30999: 7b 79 10                 u64 [a0 + 0x10] = a2
 31002: 32 00                    ret
      :                          @2208
 31004: 00                       trap
      :                          @2209
 31005: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 31008: 7b 10 10                 u64 [sp + 0x10] = ra
 31011: 7b 15 08                 u64 [sp + 0x8] = s0
 31014: 7b 16                    u64 [sp] = s1
 31016: 97 82 03                 t0 = a1 << 0x3
 31019: 33 04 b0 02 03           t2 = 0x302b0
 31024: 33 03 00 00 10           t1 = 0x100000
 31029: c8 34 00                 ra = t2 + t1
 31032: 01                       fallthrough
      :                          @2210
 31033: 82 0b                    a4 = u64 [ra]
 31035: c8 2b 09                 a2 = a4 + t0
 31038: ac b9 91 00              jump @2217 if a2 <u a4
      :                          @2211
 31042: 95 96 08                 s1 = a2 + 0x8
 31045: d8 96 05                 s0 = s1 <u a2
 31048: d8 63 06                 s1 = t1 <u s1
 31051: d4 65 05                 s0 = s0 | s1
 31054: 52 05 81 00              jump @2217 if s0 != 0
      :                          @2212
 31058: c9 94 05                 s0 = t2 - a2
 31061: c8 35 05                 s0 = s0 + t1
 31064: 84 56 07                 s1 = s0 & 0x7
 31067: c8 69 09                 a2 = a2 + s1
 31070: 01                       fallthrough
      :                          @2213
 31071: 82 0a                    a3 = u64 [ra]
 31073: ab ba d8                 jump @2210 if a3 != a4
      :                          @2214
 31076: 7b 09                    u64 [ra] = a2
 31078: 3a 04 40 00 03           t2 = u64 [0x30040]
 31083: 3a 0b 48 00 03           a4 = u64 [0x30048]
 31088: c9 65 02                 t0 = s0 - s1
 31091: 33 0c 70 02 03           a5 = 0x30270
 31096: 33 03 e8 03              t1 = 0x3e8
 31100: 64 8a                    a3 = a1
 31102: 64 29                    a2 = t0
 31104: 01                       fallthrough
      :                          @2215
 31105: 3a 05 70 02 03           s0 = u64 [0x30270]
 31110: 97 56 0d                 s1 = s0 << 0xd
 31113: d3 65 05                 s0 = s0 ^ s1
 31116: 98 56 07                 s1 = s0 >> 0x7
 31119: d3 65 05                 s0 = s0 ^ s1
 31122: 97 56 11                 s1 = s0 << 0x11
 31125: d3 65 05                 s0 = s0 ^ s1
 31128: ca 45 06                 s1 = s0 * t2
 31131: 3e 05 70 02 03           u64 [0x30270] = s0
 31136: 98 65 03                 s0 = s1 >> 0x3
 31139: d6 b5 05                 s0 = s0 mulhu a4
 31142: 98 55 04                 s0 = s0 >> 0x4
 31145: ca 35 05                 s0 = s0 * t1
 31148: c9 56 06                 s1 = s1 - s0
 31151: 7b 96                    u64 [a2] = s1
 31153: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 31156: 95 99 08                 a2 = a2 + 0x8
 31159: 52 0a ca                 jump @2215 if a3 != 0
      :                          @2216
 31162: 7b 78                    u64 [a0] = a1
 31164: 7b 72 08                 u64 [a0 + 0x8] = t0
 31167: 7b 78 10                 u64 [a0 + 0x10] = a1
 31170: 82 10 10                 ra = u64 [sp + 0x10]
 31173: 82 15 08                 s0 = u64 [sp + 0x8]
 31176: 82 16                    s1 = u64 [sp]
 31178: 95 11 18                 sp = sp + 0x18
 31181: 32 00                    ret
      :                          @2217
 31183: 00                       trap
      :                          @2218
 31184: 82 0b                    a4 = u64 [ra]
 31186: c8 2b 09                 a2 = a4 + t0
 31189: ac b9 92 00              jump @2225 if a2 <u a4
      :                          @2219
 31193: 95 9a 08                 a3 = a2 + 0x8
 31196: d8 9a 05                 s0 = a3 <u a2
 31199: d8 a3 0a                 a3 = t1 <u a3
 31202: d4 5a 0a                 a3 = a3 | s0
 31205: 52 0a 82 00              jump @2225 if a3 != 0
      :                          @2220
 31209: c9 94 0a                 a3 = t2 - a2
 31212: c8 3a 0a                 a3 = a3 + t1
 31215: 84 a5 07                 s0 = a3 & 0x7
 31218: c8 59 09                 a2 = a2 + s0
 31221: 01                       fallthrough
      :                          @2221
 31222: 82 06                    s1 = u64 [ra]
 31224: ab b6 d8                 jump @2218 if s1 != a4
      :                          @2222
 31227: 7b 09                    u64 [ra] = a2
 31229: c9 5a 02                 t0 = a3 - s0
 31232: 33 04 70 02 03           t2 = 0x30270
 31237: 3a 0b 50 00 03           a4 = u64 [0x30050]
 31242: 14 0c cd cc cc cc cc cc cc cc a5 = 0xcccccccccccccccd
 31252: 33 03 14                 t1 = 0x14
 31255: 64 89                    a2 = a1
 31257: 64 2a                    a3 = t0
 31259: 01                       fallthrough
      :                          @2223
 31260: 3a 05 70 02 03           s0 = u64 [0x30270]
 31265: 97 56 0d                 s1 = s0 << 0xd
 31268: d3 65 05                 s0 = s0 ^ s1
 31271: 98 56 07                 s1 = s0 >> 0x7
 31274: d3 65 05                 s0 = s0 ^ s1
 31277: 97 56 11                 s1 = s0 << 0x11
 31280: d3 65 05                 s0 = s0 ^ s1
 31283: ca b5 06                 s1 = s0 * a4
 31286: 3e 05 70 02 03           u64 [0x30270] = s0
 31291: d6 c6 05                 s0 = s1 mulhu a5
 31294: 98 55 04                 s0 = s0 >> 0x4
 31297: ca 35 05                 s0 = s0 * t1
 31300: c9 56 06                 s1 = s1 - s0
 31303: 7b a6                    u64 [a3] = s1
 31305: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 31308: 95 aa 08                 a3 = a3 + 0x8
 31311: 52 09 cd                 jump @2223 if a2 != 0
      :                          @2224
 31314: 7b 78                    u64 [a0] = a1
 31316: 7b 72 08                 u64 [a0 + 0x8] = t0
 31319: 7b 78 10                 u64 [a0 + 0x10] = a1
 31322: 82 10 10                 ra = u64 [sp + 0x10]
 31325: 82 15 08                 s0 = u64 [sp + 0x8]
 31328: 82 16                    s1 = u64 [sp]
 31330: 95 11 18                 sp = sp + 0x18
 31333: 32 00                    ret
      :                          @2225
 31335: 00                       trap
      :                          @2226
 31336: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 31339: 7b 10 10                 u64 [sp + 0x10] = ra
 31342: 7b 15 08                 u64 [sp + 0x8] = s0
 31345: 7b 16                    u64 [sp] = s1
 31347: 97 82 03                 t0 = a1 << 0x3
 31350: 33 04 b0 02 03           t2 = 0x302b0
 31355: 33 03 00 00 10           t1 = 0x100000
 31360: c8 34 00                 ra = t2 + t1
 31363: 01                       fallthrough
      :                          @2227
 31364: 82 0b                    a4 = u64 [ra]
 31366: c8 2b 09                 a2 = a4 + t0
 31369: ac b9 50                 jump @2234 if a2 <u a4
      :                          @2228
 31372: 95 9a 08                 a3 = a2 + 0x8
 31375: d8 9a 05                 s0 = a3 <u a2
 31378: d8 a3 0a                 a3 = t1 <u a3
 31381: d4 5a 0a                 a3 = a3 | s0
 31384: 52 0a 41                 jump @2234 if a3 != 0
      :                          @2229
 31387: c9 94 0a                 a3 = t2 - a2
 31390: c8 3a 0a                 a3 = a3 + t1
 31393: 84 a5 07                 s0 = a3 & 0x7
 31396: c8 59 09                 a2 = a2 + s0
 31399: 01                       fallthrough
      :                          @2230
 31400: 82 06                    s1 = u64 [ra]
 31402: ab b6 da                 jump @2227 if s1 != a4
      :                          @2231
 31405: 7b 09                    u64 [ra] = a2
 31407: c9 5a 09                 a2 = a3 - s0
 31410: 33 0b                    a4 = 0
 31412: 64 9a                    a3 = a2
 31414: 01                       fallthrough
      :                          @2232
 31415: 95 bc 01                 a5 = a4 + 0x1
 31418: 7b ab                    u64 [a3] = a4
 31420: 95 aa 08                 a3 = a3 + 0x8
 31423: 64 cb                    a4 = a5
 31425: ab c8 f6                 jump @2232 if a1 != a5
      :                          @2233
 31428: 7b 78                    u64 [a0] = a1
 31430: 7b 79 08                 u64 [a0 + 0x8] = a2
 31433: 7b 78 10                 u64 [a0 + 0x10] = a1
 31436: 82 10 10                 ra = u64 [sp + 0x10]
 31439: 82 15 08                 s0 = u64 [sp + 0x8]
 31442: 82 16                    s1 = u64 [sp]
 31444: 95 11 18                 sp = sp + 0x18
 31447: 32 00                    ret
      :                          @2234
 31449: 00                       trap
      :                          @2235
 31450: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 31453: 7b 10 30                 u64 [sp + 0x30] = ra
 31456: 7b 15 28                 u64 [sp + 0x28] = s0
 31459: 7b 16 20                 u64 [sp + 0x20] = s1
 31462: 7c 89 10                 a2 = u8 [a1 + 0x10]
 31465: 33 0c 08                 a5 = 0x8
 31468: 52 09 0b                 jump @2237 if a2 != 0
      :                          @2236
 31471: 82 89                    a2 = u64 [a1]
 31473: 82 88 08                 a1 = u64 [a1 + 0x8]
 31476: ae 98 1e                 jump @2239 if a1 >=u a2
      :                          @2237
 31479: 33 09                    a2 = 0
 31481: 33 08                    a1 = 0
 31483: 01                       fallthrough
      :                          @2238
 31484: 7b 79                    u64 [a0] = a2
 31486: 7b 7c 08                 u64 [a0 + 0x8] = a5
 31489: 7b 78 10                 u64 [a0 + 0x10] = a1
 31492: 82 10 30                 ra = u64 [sp + 0x30]
 31495: 82 15 28                 s0 = u64 [sp + 0x28]
 31498: 82 16 20                 s1 = u64 [sp + 0x20]
 31501: 95 11 38                 sp = sp + 0x38
 31504: 32 00                    ret
      :                          @2239
 31506: c9 98 03                 t1 = a1 - a2
 31509: 95 33 01                 t1 = t1 + 0x1
 31512: 51 03 9f 00              jump @2254 if t1 == 0
      :                          @2240
 31516: 7b 19 08                 u64 [sp + 0x8] = a2
 31519: 7b 18 10                 u64 [sp + 0x10] = a1
 31522: 7b 17 18                 u64 [sp + 0x18] = a0
 31525: 98 38 3c                 a1 = t1 >> 0x3c
 31528: 52 08 90 00              jump @2255 if a1 != 0
      :                          @2241
 31532: 88 8c 01                 a5 = a1 <u 0x1
 31535: 7b 13                    u64 [sp] = t1
 31537: 97 30 03                 ra = t1 << 0x3
 31540: 97 cc 03                 a5 = a5 << 0x3
 31543: 33 0a b0 02 03           a3 = 0x302b0
 31548: 33 02 00 00 10           t0 = 0x100000
 31553: c8 2a 09                 a2 = a3 + t0
 31556: 01                       fallthrough
      :                          @2242
 31557: 82 95                    s0 = u64 [a2]
 31559: c8 05 06                 s1 = s0 + ra
 31562: ac 56 6c                 jump @2253 if s1 <u s0
      :                          @2243
 31565: c8 c6 08                 a1 = s1 + a5
 31568: d8 68 0b                 a4 = a1 <u s1
 31571: d8 82 08                 a1 = t0 <u a1
 31574: d4 b8 08                 a1 = a1 | a4
 31577: 52 08 5d                 jump @2253 if a1 != 0
      :                          @2244
 31580: c9 6a 08                 a1 = a3 - s1
 31583: c8 28 08                 a1 = a1 + t0
 31586: 84 8b 07                 a4 = a1 & 0x7
 31589: c8 b6 06                 s1 = s1 + a4
 31592: 01                       fallthrough
      :                          @2245
 31593: 82 93                    t1 = u64 [a2]
 31595: ab 53 da                 jump @2242 if t1 != s0
      :                          @2246
 31598: 7b 96                    u64 [a2] = s1
 31600: 33 04                    t2 = 0
 31602: 01                       fallthrough
      :                          @2247
 31603: c9 b8 0c                 a5 = a1 - a4
 31606: 82 17 10                 a0 = u64 [sp + 0x10]
 31609: 82 16 08                 s1 = u64 [sp + 0x8]
 31612: ae 76 21                 jump @2251 if s1 >=u a0
      :                          @2248
 31615: 33 08                    a1 = 0
 31617: c9 76 09                 a2 = s1 - a0
 31620: 64 ca                    a3 = a5
 31622: 01                       fallthrough
      :                          @2249
 31623: c8 86 0b                 a4 = s1 + a1
 31626: ca bb 0b                 a4 = a4 * a4
 31629: 7b ab                    u64 [a3] = a4
 31631: 95 88 01                 a1 = a1 + 0x1
 31634: c8 89 0b                 a4 = a2 + a1
 31637: 95 aa 08                 a3 = a3 + 0x8
 31640: 52 0b ef                 jump @2249 if a4 != 0
      :                          @2250
 31643: 28 05                    jump @2252
      :                          @2251
 31645: 33 08                    a1 = 0
 31647: 01                       fallthrough
      :                          @2252
 31648: ca 77 07                 a0 = a0 * a0
 31651: 97 89 03                 a2 = a1 << 0x3
 31654: c8 c9 09                 a2 = a2 + a5
 31657: 7b 97                    u64 [a2] = a0
 31659: 95 88 01                 a1 = a1 + 0x1
 31662: 82 17 18                 a0 = u64 [sp + 0x18]
 31665: 82 19                    a2 = u64 [sp]
 31667: 28 49 ff                 jump @2238
      :                          @2253
 31670: 00                       trap
      :                          @2254
 31671: 00                       trap
      :                          @2255
 31672: 00                       trap
      :                          @2256
 31673: 82 4b                    a4 = u64 [t2]
 31675: 95 bc 28                 a5 = a4 + 0x28
 31678: ac bc 4d                 jump @2261 if a5 <u a4
      :                          @2257
 31681: 95 c8 08                 a1 = a5 + 0x8
 31684: d8 c8 09                 a2 = a1 <u a5
 31687: d8 82 08                 a1 = t0 <u a1
 31690: d4 98 08                 a1 = a1 | a2
 31693: 52 08 3e                 jump @2261 if a1 != 0
      :                          @2258
 31696: c9 c3 08                 a1 = t1 - a5
 31699: c8 28 08                 a1 = a1 + t0
 31702: 84 89 07                 a2 = a1 & 0x7
 31705: c8 9c 0c                 a5 = a5 + a2
 31708: 01                       fallthrough
      :                          @2259
 31709: 82 4a                    a3 = u64 [t2]
 31711: ab ba da                 jump @2256 if a3 != a4
      :                          @2260
 31714: 7b 4c                    u64 [t2] = a5
 31716: c9 98 08                 a1 = a1 - a2
 31719: 49 08                    u64 [a1 + 0] = 0
 31721: 49 18 08 01              u64 [a1 + 8] = 0x1
 31725: 49 18 10 02              u64 [a1 + 16] = 0x2
 31729: 49 18 18 03              u64 [a1 + 24] = 0x3
 31733: 49 18 20 04              u64 [a1 + 32] = 0x4
 31737: 33 09 05                 a2 = 0x5
 31740: 7b 79                    u64 [a0] = a2
 31742: 7b 78 08                 u64 [a0 + 0x8] = a1
 31745: 7b 79 10                 u64 [a0 + 0x10] = a2
 31748: 82 15                    s0 = u64 [sp]
 31750: 95 11 08                 sp = sp + 0x8
 31753: 32 00                    ret
      :                          @2261
 31755: 00                       trap
      :                          @2262
 31756: 82 0b                    a4 = u64 [ra]
 31758: c8 2b 09                 a2 = a4 + t0
 31761: ac b9 8d 00              jump @2269 if a2 <u a4
      :                          @2263
 31765: 95 9a 08                 a3 = a2 + 0x8
 31768: d8 9a 05                 s0 = a3 <u a2
 31771: d8 a3 0a                 a3 = t1 <u a3
 31774: d4 5a 0a                 a3 = a3 | s0
 31777: 52 0a 7d                 jump @2269 if a3 != 0
      :                          @2264
 31780: c9 94 0a                 a3 = t2 - a2
 31783: c8 3a 0a                 a3 = a3 + t1
 31786: 84 a5 07                 s0 = a3 & 0x7
 31789: c8 59 09                 a2 = a2 + s0
 31792: 01                       fallthrough
      :                          @2265
 31793: 82 06                    s1 = u64 [ra]
 31795: ab b6 d9                 jump @2262 if s1 != a4
      :                          @2266
 31798: 7b 09                    u64 [ra] = a2
 31800: c9 5a 02                 t0 = a3 - s0
 31803: 3a 03 58 00 03           t1 = u64 [0x30058]
 31808: 3a 0b 60 00 03           a4 = u64 [0x30060]
 31813: 33 04 70 02 03           t2 = 0x30270
 31818: 33 09 10 27              a2 = 0x2710
 31822: 64 8a                    a3 = a1
 31824: 64 2c                    a5 = t0
 31826: 01                       fallthrough
      :                          @2267
 31827: 3a 05 70 02 03           s0 = u64 [0x30270]
 31832: 97 56 0d                 s1 = s0 << 0xd
 31835: d3 65 05                 s0 = s0 ^ s1
 31838: 98 56 07                 s1 = s0 >> 0x7
 31841: d3 65 05                 s0 = s0 ^ s1
 31844: 97 56 11                 s1 = s0 << 0x11
 31847: d3 65 05                 s0 = s0 ^ s1
 31850: ca 35 06                 s1 = s0 * t1
 31853: 3e 05 70 02 03           u64 [0x30270] = s0
 31858: d6 b6 05                 s0 = s1 mulhu a4
 31861: 98 55 0b                 s0 = s0 >> 0xb
 31864: ca 95 05                 s0 = s0 * a2
 31867: c9 56 06                 s1 = s1 - s0
 31870: 7b c6                    u64 [a5] = s1
 31872: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 31875: 95 cc 08                 a5 = a5 + 0x8
 31878: 52 0a cd                 jump @2267 if a3 != 0
      :                          @2268
 31881: 7b 78                    u64 [a0] = a1
 31883: 7b 72 08                 u64 [a0 + 0x8] = t0
 31886: 7b 78 10                 u64 [a0 + 0x10] = a1
 31889: 82 10 10                 ra = u64 [sp + 0x10]
 31892: 82 15 08                 s0 = u64 [sp + 0x8]
 31895: 82 16                    s1 = u64 [sp]
 31897: 95 11 18                 sp = sp + 0x18
 31900: 32 00                    ret
      :                          @2269
 31902: 00                       trap
      :                          @2270
 31903: 82 4b                    a4 = u64 [t2]
 31905: 95 bc a0 00              a5 = a4 + 0xa0
 31909: ac bc 8d 00              jump @2277 if a5 <u a4
      :                          @2271
 31913: 95 c8 08                 a1 = a5 + 0x8
 31916: d8 c8 09                 a2 = a1 <u a5
 31919: d8 82 08                 a1 = t0 <u a1
 31922: d4 98 08                 a1 = a1 | a2
 31925: 52 08 7d                 jump @2277 if a1 != 0
      :                          @2272
 31928: c9 c3 08                 a1 = t1 - a5
 31931: c8 28 08                 a1 = a1 + t0
 31934: 84 89 07                 a2 = a1 & 0x7
 31937: c8 9c 0c                 a5 = a5 + a2
 31940: 01                       fallthrough
      :                          @2273
 31941: 82 4a                    a3 = u64 [t2]
 31943: ab ba d8                 jump @2270 if a3 != a4
      :                          @2274
 31946: 7b 4c                    u64 [t2] = a5
 31948: c9 98 02                 t0 = a1 - a2
 31951: 3a 04 68 00 03           t2 = u64 [0x30068]
 31956: 3a 0a 70 00 03           a3 = u64 [0x30070]
 31961: 33 0b 14                 a4 = 0x14
 31964: 33 0c 70 02 03           a5 = 0x30270
 31969: 33 03 64                 t1 = 0x64
 31972: 64 28                    a1 = t0
 31974: 01                       fallthrough
      :                          @2275
 31975: 3a 09 70 02 03           a2 = u64 [0x30270]
 31980: 97 95 0d                 s0 = a2 << 0xd
 31983: d3 59 09                 a2 = a2 ^ s0
 31986: 98 95 07                 s0 = a2 >> 0x7
 31989: d3 59 09                 a2 = a2 ^ s0
 31992: 97 95 11                 s0 = a2 << 0x11
 31995: d3 59 09                 a2 = a2 ^ s0
 31998: ca 49 05                 s0 = a2 * t2
 32001: 3e 09 70 02 03           u64 [0x30270] = a2
 32006: 98 59 02                 a2 = s0 >> 0x2
 32009: d6 a9 09                 a2 = a2 mulhu a3
 32012: 98 99 02                 a2 = a2 >> 0x2
 32015: ca 39 09                 a2 = a2 * t1
 32018: c9 95 05                 s0 = s0 - a2
 32021: 7b 85                    u64 [a1] = s0
 32023: 83 bb ff                 i32 a4 = a4 + 0xffffffffffffffff
 32026: 95 88 08                 a1 = a1 + 0x8
 32029: 52 0b ca                 jump @2275 if a4 != 0
      :                          @2276
 32032: 33 08 14                 a1 = 0x14
 32035: 7b 78                    u64 [a0] = a1
 32037: 7b 72 08                 u64 [a0 + 0x8] = t0
 32040: 7b 78 10                 u64 [a0 + 0x10] = a1
 32043: 82 15                    s0 = u64 [sp]
 32045: 95 11 08                 sp = sp + 0x8
 32048: 32 00                    ret
      :                          @2277
 32050: 00                       trap
      :                          @2278
 32051: 82 4b                    a4 = u64 [t2]
 32053: 95 bc 50                 a5 = a4 + 0x50
 32056: ac bc 92 02              jump @2283 if a5 <u a4
      :                          @2279
 32060: 95 c8 08                 a1 = a5 + 0x8
 32063: d8 c8 09                 a2 = a1 <u a5
 32066: d8 82 08                 a1 = t0 <u a1
 32069: d4 98 08                 a1 = a1 | a2
 32072: 52 08 82 02              jump @2283 if a1 != 0
      :                          @2280
 32076: c9 c3 08                 a1 = t1 - a5
 32079: c8 28 08                 a1 = a1 + t0
 32082: 84 89 07                 a2 = a1 & 0x7
 32085: c8 9c 0c                 a5 = a5 + a2
 32088: 01                       fallthrough
      :                          @2281
 32089: 82 4a                    a3 = u64 [t2]
 32091: ab ba d8                 jump @2278 if a3 != a4
      :                          @2282
 32094: 7b 4c                    u64 [t2] = a5
 32096: 33 02 70 02 03           t0 = 0x30270
 32101: 3a 0a 70 02 03           a3 = u64 [0x30270]
 32106: c9 98 08                 a1 = a1 - a2
 32109: 97 a9 0d                 a2 = a3 << 0xd
 32112: d3 a9 09                 a2 = a2 ^ a3
 32115: 98 9a 07                 a3 = a2 >> 0x7
 32118: d3 a9 09                 a2 = a2 ^ a3
 32121: 97 9b 11                 a4 = a2 << 0x11
 32124: 3a 0a 78 00 03           a3 = u64 [0x30078]
 32129: d3 b9 09                 a2 = a2 ^ a4
 32132: 3a 0b 80 00 03           a4 = u64 [0x30080]
 32137: ca a9 0c                 a5 = a2 * a3
 32140: 3e 09 70 02 03           u64 [0x30270] = a2
 32145: d6 bc 09                 a2 = a5 mulhu a4
 32148: c9 9c 05                 s0 = a5 - a2
 32151: 98 55 01                 s0 = s0 >> 0x1
 32154: c8 59 09                 a2 = a2 + s0
 32157: 98 99 04                 a2 = a2 >> 0x4
 32160: 33 03 15                 t1 = 0x15
 32163: ca 39 09                 a2 = a2 * t1
 32166: c9 9c 0c                 a5 = a5 - a2
 32169: 95 cc f6                 a5 = a5 + 0xfffffffffffffff6
 32172: 7b 8c                    u64 [a1] = a5
 32174: 3a 09 70 02 03           a2 = u64 [0x30270]
 32179: 97 9c 0d                 a5 = a2 << 0xd
 32182: d3 c9 09                 a2 = a2 ^ a5
 32185: 98 9c 07                 a5 = a2 >> 0x7
 32188: d3 c9 09                 a2 = a2 ^ a5
 32191: 97 9c 11                 a5 = a2 << 0x11
 32194: d3 c9 09                 a2 = a2 ^ a5
 32197: ca a9 05                 s0 = a2 * a3
 32200: 3e 09 70 02 03           u64 [0x30270] = a2
 32205: d6 b5 09                 a2 = s0 mulhu a4
 32208: c9 95 0c                 a5 = s0 - a2
 32211: 98 cc 01                 a5 = a5 >> 0x1
 32214: c8 c9 09                 a2 = a2 + a5
 32217: 98 99 04                 a2 = a2 >> 0x4
 32220: ca 39 09                 a2 = a2 * t1
 32223: c9 95 05                 s0 = s0 - a2
 32226: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 32229: 7b 85 08                 u64 [a1 + 0x8] = s0
 32232: 3a 09 70 02 03           a2 = u64 [0x30270]
 32237: 97 9c 0d                 a5 = a2 << 0xd
 32240: d3 c9 09                 a2 = a2 ^ a5
 32243: 98 9c 07                 a5 = a2 >> 0x7
 32246: d3 c9 09                 a2 = a2 ^ a5
 32249: 97 9c 11                 a5 = a2 << 0x11
 32252: d3 c9 09                 a2 = a2 ^ a5
 32255: ca a9 05                 s0 = a2 * a3
 32258: 3e 09 70 02 03           u64 [0x30270] = a2
 32263: d6 b5 09                 a2 = s0 mulhu a4
 32266: c9 95 0c                 a5 = s0 - a2
 32269: 98 cc 01                 a5 = a5 >> 0x1
 32272: c8 c9 09                 a2 = a2 + a5
 32275: 98 99 04                 a2 = a2 >> 0x4
 32278: ca 39 09                 a2 = a2 * t1
 32281: c9 95 05                 s0 = s0 - a2
 32284: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 32287: 7b 85 10                 u64 [a1 + 0x10] = s0
 32290: 3a 09 70 02 03           a2 = u64 [0x30270]
 32295: 97 9c 0d                 a5 = a2 << 0xd
 32298: d3 c9 09                 a2 = a2 ^ a5
 32301: 98 9c 07                 a5 = a2 >> 0x7
 32304: d3 c9 09                 a2 = a2 ^ a5
 32307: 97 9c 11                 a5 = a2 << 0x11
 32310: d3 c9 09                 a2 = a2 ^ a5
 32313: ca a9 05                 s0 = a2 * a3
 32316: 3e 09 70 02 03           u64 [0x30270] = a2
 32321: d6 b5 09                 a2 = s0 mulhu a4
 32324: c9 95 0c                 a5 = s0 - a2
 32327: 98 cc 01                 a5 = a5 >> 0x1
 32330: c8 c9 09                 a2 = a2 + a5
 32333: 98 99 04                 a2 = a2 >> 0x4
 32336: ca 39 09                 a2 = a2 * t1
 32339: c9 95 05                 s0 = s0 - a2
 32342: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 32345: 7b 85 18                 u64 [a1 + 0x18] = s0
 32348: 3a 09 70 02 03           a2 = u64 [0x30270]
 32353: 97 9c 0d                 a5 = a2 << 0xd
 32356: d3 c9 09                 a2 = a2 ^ a5
 32359: 98 9c 07                 a5 = a2 >> 0x7
 32362: d3 c9 09                 a2 = a2 ^ a5
 32365: 97 9c 11                 a5 = a2 << 0x11
 32368: d3 c9 09                 a2 = a2 ^ a5
 32371: ca a9 05                 s0 = a2 * a3
 32374: 3e 09 70 02 03           u64 [0x30270] = a2
 32379: d6 b5 09                 a2 = s0 mulhu a4
 32382: c9 95 0c                 a5 = s0 - a2
 32385: 98 cc 01                 a5 = a5 >> 0x1
 32388: c8 c9 09                 a2 = a2 + a5
 32391: 98 99 04                 a2 = a2 >> 0x4
 32394: ca 39 09                 a2 = a2 * t1
 32397: c9 95 05                 s0 = s0 - a2
 32400: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 32403: 7b 85 20                 u64 [a1 + 0x20] = s0
 32406: 3a 09 70 02 03           a2 = u64 [0x30270]
 32411: 97 9c 0d                 a5 = a2 << 0xd
 32414: d3 c9 09                 a2 = a2 ^ a5
 32417: 98 9c 07                 a5 = a2 >> 0x7
 32420: d3 c9 09                 a2 = a2 ^ a5
 32423: 97 9c 11                 a5 = a2 << 0x11
 32426: d3 c9 09                 a2 = a2 ^ a5
 32429: ca a9 05                 s0 = a2 * a3
 32432: 3e 09 70 02 03           u64 [0x30270] = a2
 32437: d6 b5 09                 a2 = s0 mulhu a4
 32440: c9 95 0c                 a5 = s0 - a2
 32443: 98 cc 01                 a5 = a5 >> 0x1
 32446: c8 c9 09                 a2 = a2 + a5
 32449: 98 99 04                 a2 = a2 >> 0x4
 32452: ca 39 09                 a2 = a2 * t1
 32455: c9 95 05                 s0 = s0 - a2
 32458: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 32461: 7b 85 28                 u64 [a1 + 0x28] = s0
 32464: 3a 09 70 02 03           a2 = u64 [0x30270]
 32469: 97 9c 0d                 a5 = a2 << 0xd
 32472: d3 c9 09                 a2 = a2 ^ a5
 32475: 98 9c 07                 a5 = a2 >> 0x7
 32478: d3 c9 09                 a2 = a2 ^ a5
 32481: 97 9c 11                 a5 = a2 << 0x11
 32484: d3 c9 09                 a2 = a2 ^ a5
 32487: ca a9 05                 s0 = a2 * a3
 32490: 3e 09 70 02 03           u64 [0x30270] = a2
 32495: d6 b5 09                 a2 = s0 mulhu a4
 32498: c9 95 0c                 a5 = s0 - a2
 32501: 98 cc 01                 a5 = a5 >> 0x1
 32504: c8 c9 09                 a2 = a2 + a5
 32507: 98 99 04                 a2 = a2 >> 0x4
 32510: ca 39 09                 a2 = a2 * t1
 32513: c9 95 05                 s0 = s0 - a2
 32516: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 32519: 7b 85 30                 u64 [a1 + 0x30] = s0
 32522: 3a 09 70 02 03           a2 = u64 [0x30270]
 32527: 97 9c 0d                 a5 = a2 << 0xd
 32530: d3 c9 09                 a2 = a2 ^ a5
 32533: 98 9c 07                 a5 = a2 >> 0x7
 32536: d3 c9 09                 a2 = a2 ^ a5
 32539: 97 9c 11                 a5 = a2 << 0x11
 32542: d3 c9 09                 a2 = a2 ^ a5
 32545: ca a9 05                 s0 = a2 * a3
 32548: 3e 09 70 02 03           u64 [0x30270] = a2
 32553: d6 b5 09                 a2 = s0 mulhu a4
 32556: c9 95 0c                 a5 = s0 - a2
 32559: 98 cc 01                 a5 = a5 >> 0x1
 32562: c8 c9 09                 a2 = a2 + a5
 32565: 98 99 04                 a2 = a2 >> 0x4
 32568: ca 39 09                 a2 = a2 * t1
 32571: c9 95 05                 s0 = s0 - a2
 32574: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 32577: 7b 85 38                 u64 [a1 + 0x38] = s0
 32580: 3a 09 70 02 03           a2 = u64 [0x30270]
 32585: 97 9c 0d                 a5 = a2 << 0xd
 32588: d3 c9 09                 a2 = a2 ^ a5
 32591: 98 9c 07                 a5 = a2 >> 0x7
 32594: d3 c9 09                 a2 = a2 ^ a5
 32597: 97 9c 11                 a5 = a2 << 0x11
 32600: d3 c9 09                 a2 = a2 ^ a5
 32603: ca a9 05                 s0 = a2 * a3
 32606: 3e 09 70 02 03           u64 [0x30270] = a2
 32611: d6 b5 09                 a2 = s0 mulhu a4
 32614: c9 95 0c                 a5 = s0 - a2
 32617: 98 cc 01                 a5 = a5 >> 0x1
 32620: c8 c9 09                 a2 = a2 + a5
 32623: 98 99 04                 a2 = a2 >> 0x4
 32626: ca 39 09                 a2 = a2 * t1
 32629: c9 95 05                 s0 = s0 - a2
 32632: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 32635: 7b 85 40                 u64 [a1 + 0x40] = s0
 32638: 3a 09 70 02 03           a2 = u64 [0x30270]
 32643: 97 9c 0d                 a5 = a2 << 0xd
 32646: d3 c9 09                 a2 = a2 ^ a5
 32649: 98 9c 07                 a5 = a2 >> 0x7
 32652: d3 c9 09                 a2 = a2 ^ a5
 32655: 97 9c 11                 a5 = a2 << 0x11
 32658: d3 c9 09                 a2 = a2 ^ a5
 32661: ca a9 0a                 a3 = a2 * a3
 32664: 3e 09 70 02 03           u64 [0x30270] = a2
 32669: d6 ba 09                 a2 = a3 mulhu a4
 32672: c9 9a 0b                 a4 = a3 - a2
 32675: 98 bb 01                 a4 = a4 >> 0x1
 32678: c8 b9 09                 a2 = a2 + a4
 32681: 98 99 04                 a2 = a2 >> 0x4
 32684: ca 39 09                 a2 = a2 * t1
 32687: c9 9a 0a                 a3 = a3 - a2
 32690: 95 aa f6                 a3 = a3 + 0xfffffffffffffff6
 32693: 7b 8a 48                 u64 [a1 + 0x48] = a3
 32696: 33 09 0a                 a2 = 0xa
 32699: 7b 79                    u64 [a0] = a2
 32701: 7b 78 08                 u64 [a0 + 0x8] = a1
 32704: 7b 79 10                 u64 [a0 + 0x10] = a2
 32707: 82 15                    s0 = u64 [sp]
 32709: 95 11 08                 sp = sp + 0x8
 32712: 32 00                    ret
      :                          @2283
 32714: 00                       trap
      :                          @2284
 32715: 82 4b                    a4 = u64 [t2]
 32717: 95 bc 50                 a5 = a4 + 0x50
 32720: ac bc 56 02              jump @2289 if a5 <u a4
      :                          @2285
 32724: 95 c8 08                 a1 = a5 + 0x8
 32727: d8 c8 09                 a2 = a1 <u a5
 32730: d8 82 08                 a1 = t0 <u a1
 32733: d4 98 08                 a1 = a1 | a2
 32736: 52 08 46 02              jump @2289 if a1 != 0
      :                          @2286
 32740: c9 c3 08                 a1 = t1 - a5
 32743: c8 28 08                 a1 = a1 + t0
 32746: 84 89 07                 a2 = a1 & 0x7
 32749: c8 9c 0c                 a5 = a5 + a2
 32752: 01                       fallthrough
      :                          @2287
 32753: 82 4a                    a3 = u64 [t2]
 32755: ab ba d8                 jump @2284 if a3 != a4
      :                          @2288
 32758: 7b 4c                    u64 [t2] = a5
 32760: 33 0c 70 02 03           a5 = 0x30270
 32765: 3a 0a 70 02 03           a3 = u64 [0x30270]
 32770: c9 98 08                 a1 = a1 - a2
 32773: 97 a9 0d                 a2 = a3 << 0xd
 32776: d3 a9 09                 a2 = a2 ^ a3
 32779: 98 9b 07                 a4 = a2 >> 0x7
 32782: 3a 0a 88 00 03           a3 = u64 [0x30088]
 32787: d3 b9 09                 a2 = a2 ^ a4
 32790: 97 9b 11                 a4 = a2 << 0x11
 32793: d3 b9 09                 a2 = a2 ^ a4
 32796: ca a9 05                 s0 = a2 * a3
 32799: 3a 0b 90 00 03           a4 = u64 [0x30090]
 32804: 3e 09 70 02 03           u64 [0x30270] = a2
 32809: 98 59 01                 a2 = s0 >> 0x1
 32812: d6 b9 09                 a2 = a2 mulhu a4
 32815: 98 99 04                 a2 = a2 >> 0x4
 32818: 33 02 32                 t0 = 0x32
 32821: ca 29 09                 a2 = a2 * t0
 32824: c9 95 05                 s0 = s0 - a2
 32827: 95 55 01                 s0 = s0 + 0x1
 32830: 7b 85                    u64 [a1] = s0
 32832: 3a 05 70 02 03           s0 = u64 [0x30270]
 32837: 97 59 0d                 a2 = s0 << 0xd
 32840: d3 95 05                 s0 = s0 ^ a2
 32843: 98 59 07                 a2 = s0 >> 0x7
 32846: d3 95 05                 s0 = s0 ^ a2
 32849: 97 59 11                 a2 = s0 << 0x11
 32852: d3 59 09                 a2 = a2 ^ s0
 32855: ca a9 05                 s0 = a2 * a3
 32858: 3e 09 70 02 03           u64 [0x30270] = a2
 32863: 98 59 01                 a2 = s0 >> 0x1
 32866: d6 b9 09                 a2 = a2 mulhu a4
 32869: 98 99 04                 a2 = a2 >> 0x4
 32872: ca 29 09                 a2 = a2 * t0
 32875: c9 95 05                 s0 = s0 - a2
 32878: 95 55 01                 s0 = s0 + 0x1
 32881: 7b 85 08                 u64 [a1 + 0x8] = s0
 32884: 3a 05 70 02 03           s0 = u64 [0x30270]
 32889: 97 59 0d                 a2 = s0 << 0xd
 32892: d3 95 05                 s0 = s0 ^ a2
 32895: 98 59 07                 a2 = s0 >> 0x7
 32898: d3 95 05                 s0 = s0 ^ a2
 32901: 97 59 11                 a2 = s0 << 0x11
 32904: d3 59 09                 a2 = a2 ^ s0
 32907: ca a9 05                 s0 = a2 * a3
 32910: 3e 09 70 02 03           u64 [0x30270] = a2
 32915: 98 59 01                 a2 = s0 >> 0x1
 32918: d6 b9 09                 a2 = a2 mulhu a4
 32921: 98 99 04                 a2 = a2 >> 0x4
 32924: ca 29 09                 a2 = a2 * t0
 32927: c9 95 05                 s0 = s0 - a2
 32930: 95 55 01                 s0 = s0 + 0x1
 32933: 7b 85 10                 u64 [a1 + 0x10] = s0
 32936: 3a 05 70 02 03           s0 = u64 [0x30270]
 32941: 97 59 0d                 a2 = s0 << 0xd
 32944: d3 95 05                 s0 = s0 ^ a2
 32947: 98 59 07                 a2 = s0 >> 0x7
 32950: d3 95 05                 s0 = s0 ^ a2
 32953: 97 59 11                 a2 = s0 << 0x11
 32956: d3 59 09                 a2 = a2 ^ s0
 32959: ca a9 05                 s0 = a2 * a3
 32962: 3e 09 70 02 03           u64 [0x30270] = a2
 32967: 98 59 01                 a2 = s0 >> 0x1
 32970: d6 b9 09                 a2 = a2 mulhu a4
 32973: 98 99 04                 a2 = a2 >> 0x4
 32976: ca 29 09                 a2 = a2 * t0
 32979: c9 95 05                 s0 = s0 - a2
 32982: 95 55 01                 s0 = s0 + 0x1
 32985: 7b 85 18                 u64 [a1 + 0x18] = s0
 32988: 3a 05 70 02 03           s0 = u64 [0x30270]
 32993: 97 59 0d                 a2 = s0 << 0xd
 32996: d3 95 05                 s0 = s0 ^ a2
 32999: 98 59 07                 a2 = s0 >> 0x7
 33002: d3 95 05                 s0 = s0 ^ a2
 33005: 97 59 11                 a2 = s0 << 0x11
 33008: d3 59 09                 a2 = a2 ^ s0
 33011: ca a9 05                 s0 = a2 * a3
 33014: 3e 09 70 02 03           u64 [0x30270] = a2
 33019: 98 59 01                 a2 = s0 >> 0x1
 33022: d6 b9 09                 a2 = a2 mulhu a4
 33025: 98 99 04                 a2 = a2 >> 0x4
 33028: ca 29 09                 a2 = a2 * t0
 33031: c9 95 05                 s0 = s0 - a2
 33034: 95 55 01                 s0 = s0 + 0x1
 33037: 7b 85 20                 u64 [a1 + 0x20] = s0
 33040: 3a 05 70 02 03           s0 = u64 [0x30270]
 33045: 97 59 0d                 a2 = s0 << 0xd
 33048: d3 95 05                 s0 = s0 ^ a2
 33051: 98 59 07                 a2 = s0 >> 0x7
 33054: d3 95 05                 s0 = s0 ^ a2
 33057: 97 59 11                 a2 = s0 << 0x11
 33060: d3 59 09                 a2 = a2 ^ s0
 33063: ca a9 05                 s0 = a2 * a3
 33066: 3e 09 70 02 03           u64 [0x30270] = a2
 33071: 98 59 01                 a2 = s0 >> 0x1
 33074: d6 b9 09                 a2 = a2 mulhu a4
 33077: 98 99 04                 a2 = a2 >> 0x4
 33080: ca 29 09                 a2 = a2 * t0
 33083: c9 95 05                 s0 = s0 - a2
 33086: 95 55 01                 s0 = s0 + 0x1
 33089: 7b 85 28                 u64 [a1 + 0x28] = s0
 33092: 3a 05 70 02 03           s0 = u64 [0x30270]
 33097: 97 59 0d                 a2 = s0 << 0xd
 33100: d3 95 05                 s0 = s0 ^ a2
 33103: 98 59 07                 a2 = s0 >> 0x7
 33106: d3 95 05                 s0 = s0 ^ a2
 33109: 97 59 11                 a2 = s0 << 0x11
 33112: d3 59 09                 a2 = a2 ^ s0
 33115: ca a9 05                 s0 = a2 * a3
 33118: 3e 09 70 02 03           u64 [0x30270] = a2
 33123: 98 59 01                 a2 = s0 >> 0x1
 33126: d6 b9 09                 a2 = a2 mulhu a4
 33129: 98 99 04                 a2 = a2 >> 0x4
 33132: ca 29 09                 a2 = a2 * t0
 33135: c9 95 05                 s0 = s0 - a2
 33138: 95 55 01                 s0 = s0 + 0x1
 33141: 7b 85 30                 u64 [a1 + 0x30] = s0
 33144: 3a 05 70 02 03           s0 = u64 [0x30270]
 33149: 97 59 0d                 a2 = s0 << 0xd
 33152: d3 95 05                 s0 = s0 ^ a2
 33155: 98 59 07                 a2 = s0 >> 0x7
 33158: d3 95 05                 s0 = s0 ^ a2
 33161: 97 59 11                 a2 = s0 << 0x11
 33164: d3 59 09                 a2 = a2 ^ s0
 33167: ca a9 05                 s0 = a2 * a3
 33170: 3e 09 70 02 03           u64 [0x30270] = a2
 33175: 98 59 01                 a2 = s0 >> 0x1
 33178: d6 b9 09                 a2 = a2 mulhu a4
 33181: 98 99 04                 a2 = a2 >> 0x4
 33184: ca 29 09                 a2 = a2 * t0
 33187: c9 95 05                 s0 = s0 - a2
 33190: 95 55 01                 s0 = s0 + 0x1
 33193: 7b 85 38                 u64 [a1 + 0x38] = s0
 33196: 3a 05 70 02 03           s0 = u64 [0x30270]
 33201: 97 59 0d                 a2 = s0 << 0xd
 33204: d3 95 05                 s0 = s0 ^ a2
 33207: 98 59 07                 a2 = s0 >> 0x7
 33210: d3 95 05                 s0 = s0 ^ a2
 33213: 97 59 11                 a2 = s0 << 0x11
 33216: d3 59 09                 a2 = a2 ^ s0
 33219: ca a9 05                 s0 = a2 * a3
 33222: 3e 09 70 02 03           u64 [0x30270] = a2
 33227: 98 59 01                 a2 = s0 >> 0x1
 33230: d6 b9 09                 a2 = a2 mulhu a4
 33233: 98 99 04                 a2 = a2 >> 0x4
 33236: ca 29 09                 a2 = a2 * t0
 33239: c9 95 05                 s0 = s0 - a2
 33242: 95 55 01                 s0 = s0 + 0x1
 33245: 7b 85 40                 u64 [a1 + 0x40] = s0
 33248: 3a 05 70 02 03           s0 = u64 [0x30270]
 33253: 97 59 0d                 a2 = s0 << 0xd
 33256: d3 95 05                 s0 = s0 ^ a2
 33259: 98 59 07                 a2 = s0 >> 0x7
 33262: d3 95 05                 s0 = s0 ^ a2
 33265: 97 59 11                 a2 = s0 << 0x11
 33268: d3 59 09                 a2 = a2 ^ s0
 33271: ca a9 0a                 a3 = a2 * a3
 33274: 3e 09 70 02 03           u64 [0x30270] = a2
 33279: 98 a9 01                 a2 = a3 >> 0x1
 33282: d6 b9 09                 a2 = a2 mulhu a4
 33285: 98 99 04                 a2 = a2 >> 0x4
 33288: ca 29 09                 a2 = a2 * t0
 33291: c9 9a 0a                 a3 = a3 - a2
 33294: 95 aa 01                 a3 = a3 + 0x1
 33297: 7b 8a 48                 u64 [a1 + 0x48] = a3
 33300: 33 09 0a                 a2 = 0xa
 33303: 7b 79                    u64 [a0] = a2
 33305: 7b 78 08                 u64 [a0 + 0x8] = a1
 33308: 7b 79 10                 u64 [a0 + 0x10] = a2
 33311: 82 15                    s0 = u64 [sp]
 33313: 95 11 08                 sp = sp + 0x8
 33316: 32 00                    ret
      :                          @2289
 33318: 00                       trap
      :                          @2290
 33319: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 33322: 7b 10 38                 u64 [sp + 0x38] = ra
 33325: 7b 15 30                 u64 [sp + 0x30] = s0
 33328: 7b 16 28                 u64 [sp + 0x28] = s1
 33331: 7c 89 10                 a2 = u8 [a1 + 0x10]
 33334: 33 04 08                 t2 = 0x8
 33337: 52 09 0b                 jump @2292 if a2 != 0
      :                          @2291
 33340: 82 89                    a2 = u64 [a1]
 33342: 82 8a 08                 a3 = u64 [a1 + 0x8]
 33345: ae 9a 1e                 jump @2294 if a3 >=u a2
      :                          @2292
 33348: 33 08                    a1 = 0
 33350: 33 0c                    a5 = 0
 33352: 01                       fallthrough
      :                          @2293
 33353: 7b 78                    u64 [a0] = a1
 33355: 7b 74 08                 u64 [a0 + 0x8] = t2
 33358: 7b 7c 10                 u64 [a0 + 0x10] = a5
 33361: 82 10 38                 ra = u64 [sp + 0x38]
 33364: 82 15 30                 s0 = u64 [sp + 0x30]
 33367: 82 16 28                 s1 = u64 [sp + 0x28]
 33370: 95 11 40                 sp = sp + 0x40
 33373: 32 00                    ret
      :                          @2294
 33375: c9 9a 08                 a1 = a3 - a2
 33378: 95 84 01                 t2 = a1 + 0x1
 33381: 51 04 18 01              jump @2309 if t2 == 0
      :                          @2295
 33385: 7b 1a 18                 u64 [sp + 0x18] = a3
 33388: 7b 19 20                 u64 [sp + 0x20] = a2
 33391: 7b 18                    u64 [sp] = a1
 33393: 98 48 3c                 a1 = t2 >> 0x3c
 33396: 52 08 0a 01              jump @2310 if a1 != 0
      :                          @2296
 33400: 7b 17 10                 u64 [sp + 0x10] = a0
 33403: 88 89 01                 a2 = a1 <u 0x1
 33406: 7b 14 08                 u64 [sp + 0x8] = t2
 33409: 97 44 03                 t2 = t2 << 0x3
 33412: 97 99 03                 a2 = a2 << 0x3
 33415: 33 0c b0 02 03           a5 = 0x302b0
 33420: 33 02 00 00 10           t0 = 0x100000
 33425: c8 2c 0a                 a3 = a5 + t0
 33428: 01                       fallthrough
      :                          @2297
 33429: 82 a6                    s1 = u64 [a3]
 33431: c8 46 08                 a1 = s1 + t2
 33434: ac 68 e2 00              jump @2308 if a1 <u s1
      :                          @2298
 33438: c8 98 0b                 a4 = a1 + a2
 33441: d8 8b 05                 s0 = a4 <u a1
 33444: d8 b2 0b                 a4 = t0 <u a4
 33447: d4 5b 0b                 a4 = a4 | s0
 33450: 52 0b d2 00              jump @2308 if a4 != 0
      :                          @2299
 33454: c9 8c 0b                 a4 = a5 - a1
 33457: c8 2b 0b                 a4 = a4 + t0
 33460: 84 b5 07                 s0 = a4 & 0x7
 33463: c8 58 08                 a1 = a1 + s0
 33466: 01                       fallthrough
      :                          @2300
 33467: 82 a0                    ra = u64 [a3]
 33469: ab 60 d8                 jump @2297 if ra != s1
      :                          @2301
 33472: 7b a8                    u64 [a3] = a1
 33474: 33 03                    t1 = 0
 33476: 01                       fallthrough
      :                          @2302
 33477: 3a 08 98 00 03           a1 = u64 [0x30098]
 33482: c9 5b 04                 t2 = a4 - s0
 33485: 82 17 20                 a0 = u64 [sp + 0x20]
 33488: 82 19 18                 a2 = u64 [sp + 0x18]
 33491: ae 97 57                 jump @2306 if a0 >=u a2
      :                          @2303
 33494: 33 0c                    a5 = 0
 33496: 33 09 70 02 03           a2 = 0x30270
 33501: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
 33511: 33 02 14                 t0 = 0x14
 33514: 64 45                    s0 = t2
 33516: 82 17                    a0 = u64 [sp]
 33518: 01                       fallthrough
      :                          @2304
 33519: 3a 06 70 02 03           s1 = u64 [0x30270]
 33524: 97 6b 0d                 a4 = s1 << 0xd
 33527: d3 b6 06                 s1 = s1 ^ a4
 33530: 98 6b 07                 a4 = s1 >> 0x7
 33533: d3 b6 06                 s1 = s1 ^ a4
 33536: 97 6b 11                 a4 = s1 << 0x11
 33539: d3 6b 0b                 a4 = a4 ^ s1
 33542: ca 8b 06                 s1 = a4 * a1
 33545: 3e 0b 70 02 03           u64 [0x30270] = a4
 33550: d6 a6 0b                 a4 = s1 mulhu a3
 33553: 98 bb 04                 a4 = a4 >> 0x4
 33556: ca 2b 0b                 a4 = a4 * t0
 33559: c9 b6 06                 s1 = s1 - a4
 33562: 95 66 01                 s1 = s1 + 0x1
 33565: 7b 56                    u64 [s0] = s1
 33567: 95 cc 01                 a5 = a5 + 0x1
 33570: 95 55 08                 s0 = s0 + 0x8
 33573: ab c7 ca                 jump @2304 if a0 != a5
      :                          @2305
 33576: 28 05                    jump @2307
      :                          @2306
 33578: 33 0c                    a5 = 0
 33580: 01                       fallthrough
      :                          @2307
 33581: 3a 09 70 02 03           a2 = u64 [0x30270]
 33586: 97 9a 0d                 a3 = a2 << 0xd
 33589: d3 a9 09                 a2 = a2 ^ a3
 33592: 98 9a 07                 a3 = a2 >> 0x7
 33595: d3 a9 09                 a2 = a2 ^ a3
 33598: 97 9a 11                 a3 = a2 << 0x11
 33601: d3 a9 09                 a2 = a2 ^ a3
 33604: ca 89 08                 a1 = a2 * a1
 33607: 3e 09 70 02 03           u64 [0x30270] = a2
 33612: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
 33622: d6 78 07                 a0 = a1 mulhu a0
 33625: 98 77 04                 a0 = a0 >> 0x4
 33628: 33 09 14                 a2 = 0x14
 33631: ca 97 07                 a0 = a0 * a2
 33634: c9 78 08                 a1 = a1 - a0
 33637: 95 88 01                 a1 = a1 + 0x1
 33640: 97 c7 03                 a0 = a5 << 0x3
 33643: c8 47 07                 a0 = a0 + t2
 33646: 7b 78                    u64 [a0] = a1
 33648: 95 cc 01                 a5 = a5 + 0x1
 33651: 82 17 10                 a0 = u64 [sp + 0x10]
 33654: 82 18 08                 a1 = u64 [sp + 0x8]
 33657: 28 d0 fe                 jump @2293
      :                          @2308
 33660: 00                       trap
      :                          @2309
 33661: 00                       trap
      :                          @2310
 33662: 00                       trap
      :                          @2311
 33663: 95 11 80                 sp = sp + 0xffffffffffffff80
 33666: 7b 10 78                 u64 [sp + 0x78] = ra
 33669: 7b 15 70                 u64 [sp + 0x70] = s0
 33672: 7b 16 68                 u64 [sp + 0x68] = s1
 33675: 82 7b 18                 a4 = u64 [a0 + 0x18]
 33678: 7b 1b 20                 u64 [sp + 0x20] = a4
 33681: 95 bb 01                 a4 = a4 + 0x1
 33684: 51 0b 58 06              jump @2371 if a4 == 0
      :                          @2312
 33688: 64 84                    t2 = a1
 33690: 82 75 08                 s0 = u64 [a0 + 0x8]
 33693: 88 59 08                 a2 = s0 <u 0x8
 33696: 95 5c 01                 a5 = s0 + 0x1
 33699: 98 c2 03                 t0 = a5 >> 0x3
 33702: 84 ca f8                 a3 = a5 & 0xfffffffffffffff8
 33705: c9 2a 0a                 a3 = a3 - t0
 33708: db 95 0a                 a3 = s0 if a2 != 0
 33711: 98 a9 01                 a2 = a3 >> 0x1
 33714: 7b 15 60                 u64 [sp + 0x60] = s0
 33717: 7b 17 10                 u64 [sp + 0x10] = a0
 33720: ae b9 1d                 jump @2315 if a2 >=u a4
      :                          @2313
 33723: 7b 1c 18                 u64 [sp + 0x18] = a5
 33726: 95 a8 01                 a1 = a3 + 0x1
 33729: e4 8b 07                 a0 = maxu(a4, a1)
 33732: 55 17 08 89 00           jump @2322 if a0 >=u 8
      :                          @2314
 33737: 88 77 04                 a0 = a0 <u 0x4
 33740: 33 03 04                 t1 = 0x4
 33743: 93 73 08                 t1 = 0x8 if a0 == 0
 33746: 28 ba 00                 jump @2326
      :                          @2315
 33749: 7b 1a 08                 u64 [sp + 0x8] = a3
 33752: 82 78                    a1 = u64 [a0]
 33754: 64 c6                    s1 = a5
 33756: 84 c7 07                 a0 = a5 & 0x7
 33759: 8e 77                    a0 = a0 >u 0
 33761: c8 27 07                 a0 = a0 + t0
 33764: 51 07 36                 jump @2318 if a0 == 0
      :                          @2316
 33767: 14 02 01 01 01 01 01 01 01 01 t0 = 0x101010101010101
 33777: 14 09 7f 7f 7f 7f 7f 7f 7f 7f a2 = 0x7f7f7f7f7f7f7f7f
 33787: 64 8a                    a3 = a1
 33789: 01                       fallthrough
      :                          @2317
 33790: 82 ab                    a4 = u64 [a3]
 33792: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 33795: d4 9b 0c                 a5 = a4 | a2
 33798: 85 bb ff                 a4 = a4 ^ 0xffffffffffffffff
 33801: 98 bb 07                 a4 = a4 >> 0x7
 33804: d2 2b 0b                 a4 = a4 & t0
 33807: c8 cb 0b                 a4 = a4 + a5
 33810: 7b ab                    u64 [a3] = a4
 33812: 95 aa 08                 a3 = a3 + 0x8
 33815: 52 07 e7                 jump @2317 if a0 != 0
      :                          @2318
 33818: 7b 18 58                 u64 [sp + 0x58] = a1
 33821: 55 16 08 93 02           jump @2346 if s1 >=u 8
      :                          @2319
 33826: 95 87 08                 a0 = a1 + 0x8
 33829: 64 69                    a2 = s1
 33831: 7b 14 50                 u64 [sp + 0x50] = t2
 33834: 50 20 8e 02 68 86 02     ra = 654, jump @13653
      :                          @2320 [@dyn 327]
 33841: 82 14 50                 t2 = u64 [sp + 0x50]
 33844: 82 12 58                 t0 = u64 [sp + 0x58]
 33847: 82 19 20                 a2 = u64 [sp + 0x20]
 33850: 52 06 c9 02              jump @2347 if s1 != 0
      :                          @2321
 33854: 82 17 08                 a0 = u64 [sp + 0x8]
 33857: c9 97 07                 a0 = a0 - a2
 33860: 82 18 10                 a1 = u64 [sp + 0x10]
 33863: 7b 87 10                 u64 [a1 + 0x10] = a0
 33866: 28 92 05                 jump @2369
      :                          @2322
 33869: 98 78 3d                 a1 = a0 >> 0x3d
 33872: 52 08 9d 05              jump @2372 if a1 != 0
      :                          @2323
 33876: 97 77 03                 a0 = a0 << 0x3
 33879: 33 03 01                 t1 = 0x1
 33882: 53 17 0e 32              jump @2326 if a0 <u 14
      :                          @2324
 33886: 3a 08 b0 00 03           a1 = u64 [0x300b0]
 33891: d6 87 08                 a1 = a0 mulhu a1
 33894: c9 87 07                 a0 = a0 - a1
 33897: 98 77 01                 a0 = a0 >> 0x1
 33900: c8 87 07                 a0 = a0 + a1
 33903: 98 77 02                 a0 = a0 >> 0x2
 33906: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 33909: 68 77                    a0 = clz a0
 33911: 9c 73 ff                 t1 = 0xffffffffffffffff >> a0
 33914: 14 07 fe ff ff ff ff ff ff 0f a0 = 0xffffffffffffffe
 33924: ac 37 68 05              jump @2371 if a0 <u t1
      :                          @2325
 33928: 95 33 01                 t1 = t1 + 0x1
 33931: 01                       fallthrough
      :                          @2326
 33932: 97 39 04                 a2 = t1 << 0x4
 33935: 95 38 08                 a1 = t1 + 0x8
 33938: c8 89 07                 a0 = a2 + a1
 33941: ac 97 57 05              jump @2371 if a0 <u a2
      :                          @2327
 33945: 7b 18 58                 u64 [sp + 0x58] = a1
 33948: 7b 14 50                 u64 [sp + 0x50] = t2
 33951: 33 00 b0 02 03           ra = 0x302b0
 33956: 33 04 00 00 10           t2 = 0x100000
 33961: c8 40 0c                 a5 = ra + t2
 33964: 01                       fallthrough
      :                          @2328
 33965: 82 c5                    s0 = u64 [a5]
 33967: c8 75 06                 s1 = s0 + a0
 33970: ac 56 39 05              jump @2370 if s1 <u s0
      :                          @2329
 33974: 95 68 08                 a1 = s1 + 0x8
 33977: d8 68 0b                 a4 = a1 <u s1
 33980: d8 84 08                 a1 = t2 <u a1
 33983: d4 b8 08                 a1 = a1 | a4
 33986: 52 08 29 05              jump @2370 if a1 != 0
      :                          @2330
 33990: c9 60 08                 a1 = ra - s1
 33993: c8 48 08                 a1 = a1 + t2
 33996: 84 8b 07                 a4 = a1 & 0x7
 33999: c8 b6 06                 s1 = s1 + a4
 34002: 01                       fallthrough
      :                          @2331
 34003: 82 ca                    a3 = u64 [a5]
 34005: ab 5a d8                 jump @2328 if a3 != s0
      :                          @2332
 34008: 7b c6                    u64 [a5] = s1
 34010: 33 02                    t0 = 0
 34012: c9 b8 08                 a1 = a1 - a4
 34015: c8 98 07                 a0 = a1 + a2
 34018: 95 35 ff                 s0 = t1 + 0xffffffffffffffff
 34021: 88 3a 09                 a3 = t1 <u 0x9
 34024: 98 38 03                 a1 = t1 >> 0x3
 34027: 84 39 f8                 a2 = t1 & 0xfffffffffffffff8
 34030: c9 89 06                 s1 = a2 - a1
 34033: db a5 06                 s1 = s0 if a3 != 0
 34036: 33 08 ff 00              a1 = 0xff
 34040: 7b 17 08                 u64 [sp + 0x8] = a0
 34043: 82 19 58                 a2 = u64 [sp + 0x58]
 34046: 50 20 90 02 0f 87 02     ra = 656, jump @13689
      :                          @2333 [@dyn 328]
 34053: 82 17 10                 a0 = u64 [sp + 0x10]
 34056: 82 74                    t2 = u64 [a0]
 34058: 82 18 20                 a1 = u64 [sp + 0x20]
 34061: c9 86 06                 s1 = s1 - a1
 34064: 82 19 18                 a2 = u64 [sp + 0x18]
 34067: 51 09 81 04              jump @2362 if a2 == 0
      :                          @2334
 34071: 7b 16                    u64 [sp] = s1
 34073: 3a 06 a0 00 03           s1 = u64 [0x300a0]
 34078: 3a 07 a8 00 03           a0 = u64 [0x300a8]
 34083: 7b 17 40                 u64 [sp + 0x40] = a0
 34086: 82 17 50                 a0 = u64 [sp + 0x50]
 34089: 82 78                    a1 = u64 [a0]
 34091: 7b 18 38                 u64 [sp + 0x38] = a1
 34094: 82 77 08                 a0 = u64 [a0 + 0x8]
 34097: 7b 17 30                 u64 [sp + 0x30] = a0
 34100: 33 07                    a0 = 0
 34102: 95 48 f0                 a1 = t2 + 0xfffffffffffffff0
 34105: 7b 18 28                 u64 [sp + 0x28] = a1
 34108: 82 19 60                 a2 = u64 [sp + 0x60]
 34111: 82 10 08                 ra = u64 [sp + 0x8]
 34114: 7b 16 58                 u64 [sp + 0x58] = s1
 34117: 7b 14 48                 u64 [sp + 0x48] = t2
 34120: 28 47                    jump @2338
      :                          @2335
 34122: c8 90 07                 a0 = ra + a2
 34125: 98 38 39                 a1 = t1 >> 0x39
 34128: 95 9a f8                 a3 = a2 + 0xfffffffffffffff8
 34131: d2 5a 0a                 a3 = a3 & s0
 34134: c8 0a 0a                 a3 = a3 + ra
 34137: 78 78                    u8 [a0] = a1
 34139: 78 a8 08                 u8 [a3 + 0x8] = a1
 34142: c9 24 08                 a1 = t2 - t0
 34145: 95 88 f0                 a1 = a1 + 0xfffffffffffffff0
 34148: 97 99 04                 a2 = a2 << 0x4
 34151: c9 90 07                 a0 = ra - a2
 34154: 95 77 f0                 a0 = a0 + 0xfffffffffffffff0
 34157: 33 09 10                 a2 = 0x10
 34160: 64 06                    s1 = ra
 34162: 50 20 92 02 6e 84 02     ra = 658, jump @13635
      :                          @2336 [@dyn 329]
 34169: 64 60                    ra = s1
 34171: 82 16 58                 s1 = u64 [sp + 0x58]
 34174: 82 14 48                 t2 = u64 [sp + 0x48]
 34177: 82 19 60                 a2 = u64 [sp + 0x60]
 34180: 82 18 50                 a1 = u64 [sp + 0x50]
 34183: 01                       fallthrough
      :                          @2337
 34184: 95 87 01                 a0 = a1 + 0x1
 34187: aa 98 0b 01              jump @2344 if a1 == a2
      :                          @2338
 34191: 64 78                    a1 = a0
 34193: c8 47 07                 a0 = a0 + t2
 34196: 7d 77                    a0 = i8 [a0]
 34198: 57 07 f2                 jump @2337 if a0 <s 0
      :                          @2339
 34201: 7b 18 50                 u64 [sp + 0x50] = a1
 34204: 97 82 04                 t0 = a1 << 0x4
 34207: 82 17 28                 a0 = u64 [sp + 0x28]
 34210: c9 27 08                 a1 = a0 - t0
 34213: 82 88                    a1 = u64 [a1]
 34215: 82 19 38                 a2 = u64 [sp + 0x38]
 34218: d3 98 08                 a1 = a1 ^ a2
 34221: 82 17 40                 a0 = u64 [sp + 0x40]
 34224: ca 78 08                 a1 = a1 * a0
 34227: 82 1a 30                 a3 = u64 [sp + 0x30]
 34230: d3 a8 08                 a1 = a1 ^ a3
 34233: 9e 88 38                 a1 = a1 >>r 0x38
 34236: ca 78 08                 a1 = a1 * a0
 34239: d3 89 09                 a2 = a2 ^ a1
 34242: 9e 99 28                 a2 = a2 >>r 0x28
 34245: ca 79 0a                 a3 = a2 * a0
 34248: d3 a8 08                 a1 = a1 ^ a3
 34251: dc 98 03                 t1 = a1 <<r a2
 34254: d2 53 09                 a2 = t1 & s0
 34257: c8 90 0a                 a3 = ra + a2
 34260: 7c ab 01                 a4 = u8 [a3 + 0x1]
 34263: 7c ac                    a5 = u8 [a3]
 34265: 7c a7 02                 a0 = u8 [a3 + 0x2]
 34268: 7c a8 03                 a1 = u8 [a3 + 0x3]
 34271: 97 bb 08                 a4 = a4 << 0x8
 34274: d4 cb 0b                 a4 = a4 | a5
 34277: 97 77 10                 a0 = a0 << 0x10
 34280: 97 88 18                 a1 = a1 << 0x18
 34283: d4 87 07                 a0 = a0 | a1
 34286: d4 b7 07                 a0 = a0 | a4
 34289: 7c a8 05                 a1 = u8 [a3 + 0x5]
 34292: 7c ab 04                 a4 = u8 [a3 + 0x4]
 34295: 7c ac 06                 a5 = u8 [a3 + 0x6]
 34298: 7c aa 07                 a3 = u8 [a3 + 0x7]
 34301: 97 88 08                 a1 = a1 << 0x8
 34304: d4 b8 08                 a1 = a1 | a4
 34307: 97 cc 10                 a5 = a5 << 0x10
 34310: 97 aa 18                 a3 = a3 << 0x18
 34313: d4 ca 0a                 a3 = a3 | a5
 34316: d4 a8 08                 a1 = a1 | a3
 34319: 97 88 20                 a1 = a1 << 0x20
 34322: d4 87 07                 a0 = a0 | a1
 34325: d2 67 0b                 a4 = a0 & s1
 34328: 52 0b 5d                 jump @2342 if a4 != 0
      :                          @2340
 34331: 33 0a 08                 a3 = 0x8
 34334: 01                       fallthrough
      :                          @2341
 34335: c8 a9 09                 a2 = a2 + a3
 34338: d2 59 09                 a2 = a2 & s0
 34341: c8 90 07                 a0 = ra + a2
 34344: 7c 78 01                 a1 = u8 [a0 + 0x1]
 34347: 7c 7b                    a4 = u8 [a0]
 34349: 7c 7c 02                 a5 = u8 [a0 + 0x2]
 34352: 7c 76 03                 s1 = u8 [a0 + 0x3]
 34355: 97 88 08                 a1 = a1 << 0x8
 34358: d4 b8 08                 a1 = a1 | a4
 34361: 97 cc 10                 a5 = a5 << 0x10
 34364: 97 66 18                 s1 = s1 << 0x18
 34367: d4 6c 0c                 a5 = a5 | s1
 34370: d4 c8 08                 a1 = a1 | a5
 34373: 7c 7b 05                 a4 = u8 [a0 + 0x5]
 34376: 7c 7c 04                 a5 = u8 [a0 + 0x4]
 34379: 7c 76 06                 s1 = u8 [a0 + 0x6]
 34382: 7c 77 07                 a0 = u8 [a0 + 0x7]
 34385: 97 bb 08                 a4 = a4 << 0x8
 34388: d4 cb 0b                 a4 = a4 | a5
 34391: 97 66 10                 s1 = s1 << 0x10
 34394: 97 77 18                 a0 = a0 << 0x18
 34397: d4 67 07                 a0 = a0 | s1
 34400: 82 16 58                 s1 = u64 [sp + 0x58]
 34403: d4 b7 07                 a0 = a0 | a4
 34406: 97 77 20                 a0 = a0 << 0x20
 34409: d4 87 07                 a0 = a0 | a1
 34412: d2 67 0b                 a4 = a0 & s1
 34415: 95 aa 08                 a3 = a3 + 0x8
 34418: 51 0b ad                 jump @2341 if a4 == 0
      :                          @2342
 34421: 6a b7                    a0 = ctz a4
 34423: 98 77 03                 a0 = a0 >> 0x3
 34426: c8 97 07                 a0 = a0 + a2
 34429: d2 57 09                 a2 = a0 & s0
 34432: c8 90 07                 a0 = ra + a2
 34435: 7d 77                    a0 = i8 [a0]
 34437: 57 07 c5 fe              jump @2335 if a0 <s 0
      :                          @2343
 34441: 82 07                    a0 = u64 [ra]
 34443: d2 67 07                 a0 = a0 & s1
 34446: 6a 79                    a2 = ctz a0
 34448: 98 99 03                 a2 = a2 >> 0x3
 34451: 28 b7 fe                 jump @2335
      :                          @2344
 34454: 82 17 10                 a0 = u64 [sp + 0x10]
 34457: 7b 70                    u64 [a0] = ra
 34459: 7b 75 08                 u64 [a0 + 0x8] = s0
 34462: 82 18                    a1 = u64 [sp]
 34464: 7b 78 10                 u64 [a0 + 0x10] = a1
 34467: 82 18 20                 a1 = u64 [sp + 0x20]
 34470: 7b 78 18                 u64 [a0 + 0x18] = a1
 34473: 52 09 fd 02              jump @2363 if a2 != 0
      :                          @2345
 34477: 28 2f 03                 jump @2369
      :                          @2346
 34480: c8 68 07                 a0 = a1 + s1
 34483: 82 18 58                 a1 = u64 [sp + 0x58]
 34486: 7c 82 01                 t0 = u8 [a1 + 0x1]
 34489: 82 18 58                 a1 = u64 [sp + 0x58]
 34492: 7c 83                    t1 = u8 [a1]
 34494: 82 18 58                 a1 = u64 [sp + 0x58]
 34497: 7c 8a 03                 a3 = u8 [a1 + 0x3]
 34500: 82 18 58                 a1 = u64 [sp + 0x58]
 34503: 7c 8b 02                 a4 = u8 [a1 + 0x2]
 34506: 82 18 58                 a1 = u64 [sp + 0x58]
 34509: 7c 8c 06                 a5 = u8 [a1 + 0x6]
 34512: 82 18 58                 a1 = u64 [sp + 0x58]
 34515: 7c 86 07                 s1 = u8 [a1 + 0x7]
 34518: 82 18 58                 a1 = u64 [sp + 0x58]
 34521: 7c 88 04                 a1 = u8 [a1 + 0x4]
 34524: 82 19 58                 a2 = u64 [sp + 0x58]
 34527: 7c 99 05                 a2 = u8 [a2 + 0x5]
 34530: 78 7c 06                 u8 [a0 + 0x6] = a5
 34533: 78 76 07                 u8 [a0 + 0x7] = s1
 34536: 82 15 60                 s0 = u64 [sp + 0x60]
 34539: 78 78 04                 u8 [a0 + 0x4] = a1
 34542: 78 79 05                 u8 [a0 + 0x5] = a2
 34545: 78 7b 02                 u8 [a0 + 0x2] = a4
 34548: 78 7a 03                 u8 [a0 + 0x3] = a3
 34551: 78 73                    u8 [a0] = t1
 34553: 78 72 01                 u8 [a0 + 0x1] = t0
 34556: 82 12 58                 t0 = u64 [sp + 0x58]
 34559: 82 19 20                 a2 = u64 [sp + 0x20]
 34562: 01                       fallthrough
      :                          @2347
 34563: 33 07                    a0 = 0
 34565: 3a 06 a0 00 03           s1 = u64 [0x300a0]
 34570: 3a 08 a8 00 03           a1 = u64 [0x300a8]
 34575: 7b 18 40                 u64 [sp + 0x40] = a1
 34578: 95 28 f0                 a1 = t0 + 0xfffffffffffffff0
 34581: 7b 18 18                 u64 [sp + 0x18] = a1
 34584: 82 48                    a1 = u64 [t2]
 34586: 7b 18 38                 u64 [sp + 0x38] = a1
 34589: 82 48 08                 a1 = u64 [t2 + 0x8]
 34592: 7b 18 30                 u64 [sp + 0x30] = a1
 34595: 33 08 80 00              a1 = 0x80
 34599: 28 25                    jump @2350
      :                          @2348
 34601: 98 47 39                 a0 = t2 >> 0x39
 34604: 95 b8 f8                 a1 = a4 + 0xfffffffffffffff8
 34607: d2 58 08                 a1 = a1 & s0
 34610: c8 28 08                 a1 = a1 + t0
 34613: 82 19 28                 a2 = u64 [sp + 0x28]
 34616: 78 97                    u8 [a2] = a0
 34618: 78 87 08                 u8 [a1 + 0x8] = a0
 34621: 82 19 20                 a2 = u64 [sp + 0x20]
 34624: 33 08 80 00              a1 = 0x80
 34628: 01                       fallthrough
      :                          @2349
 34629: 95 b7 01                 a0 = a4 + 0x1
 34632: aa 5b f6 fc              jump @2321 if a4 == s0
      :                          @2350
 34636: 64 7b                    a4 = a0
 34638: c8 72 0a                 a3 = t0 + a0
 34641: 7c a7                    a0 = u8 [a3]
 34643: ab 87 f2                 jump @2349 if a0 != a1
      :                          @2351
 34646: 7b 1a 28                 u64 [sp + 0x28] = a3
 34649: 7b 1b 50                 u64 [sp + 0x50] = a4
 34652: 97 b7 04                 a0 = a4 << 0x4
 34655: c9 72 08                 a1 = t0 - a0
 34658: 95 88 f0                 a1 = a1 + 0xfffffffffffffff0
 34661: 82 19 18                 a2 = u64 [sp + 0x18]
 34664: c9 79 09                 a2 = a2 - a0
 34667: 7b 19 48                 u64 [sp + 0x48] = a2
 34670: 01                       fallthrough
      :                          @2352
 34671: 82 17 48                 a0 = u64 [sp + 0x48]
 34674: 82 77                    a0 = u64 [a0]
 34676: 82 19 38                 a2 = u64 [sp + 0x38]
 34679: d3 97 07                 a0 = a0 ^ a2
 34682: 82 1a 40                 a3 = u64 [sp + 0x40]
 34685: ca a7 07                 a0 = a0 * a3
 34688: 82 1b 30                 a4 = u64 [sp + 0x30]
 34691: d3 b7 07                 a0 = a0 ^ a4
 34694: 9e 77 38                 a0 = a0 >>r 0x38
 34697: ca a7 07                 a0 = a0 * a3
 34700: d3 79 09                 a2 = a2 ^ a0
 34703: 9e 99 28                 a2 = a2 >>r 0x28
 34706: ca a9 0a                 a3 = a2 * a3
 34709: d3 a7 07                 a0 = a0 ^ a3
 34712: dc 97 04                 t2 = a0 <<r a2
 34715: d2 54 00                 ra = t2 & s0
 34718: c8 02 09                 a2 = t0 + ra
 34721: 7c 9a 01                 a3 = u8 [a2 + 0x1]
 34724: 7c 9c                    a5 = u8 [a2]
 34726: 7c 9b 02                 a4 = u8 [a2 + 0x2]
 34729: 7c 97 03                 a0 = u8 [a2 + 0x3]
 34732: 97 aa 08                 a3 = a3 << 0x8
 34735: d4 ca 0a                 a3 = a3 | a5
 34738: 97 bb 10                 a4 = a4 << 0x10
 34741: 97 77 18                 a0 = a0 << 0x18
 34744: d4 b7 07                 a0 = a0 | a4
 34747: d4 a7 07                 a0 = a0 | a3
 34750: 7c 9a 05                 a3 = u8 [a2 + 0x5]
 34753: 7c 9b 04                 a4 = u8 [a2 + 0x4]
 34756: 7c 9c 06                 a5 = u8 [a2 + 0x6]
 34759: 7c 99 07                 a2 = u8 [a2 + 0x7]
 34762: 97 aa 08                 a3 = a3 << 0x8
 34765: d4 ba 0a                 a3 = a3 | a4
 34768: 97 cc 10                 a5 = a5 << 0x10
 34771: 97 99 18                 a2 = a2 << 0x18
 34774: d4 c9 09                 a2 = a2 | a5
 34777: d4 a9 09                 a2 = a2 | a3
 34780: 97 99 20                 a2 = a2 << 0x20
 34783: d4 97 07                 a0 = a0 | a2
 34786: d2 67 0a                 a3 = a0 & s1
 34789: 64 0c                    a5 = ra
 34791: 52 0a 66                 jump @2355 if a3 != 0
      :                          @2353
 34794: 33 09 08                 a2 = 0x8
 34797: 64 0c                    a5 = ra
 34799: 01                       fallthrough
      :                          @2354
 34800: c8 9c 0c                 a5 = a5 + a2
 34803: d2 5c 0c                 a5 = a5 & s0
 34806: c8 c2 07                 a0 = t0 + a5
 34809: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 34812: 7c 7b                    a4 = u8 [a0]
 34814: 7c 72 02                 t0 = u8 [a0 + 0x2]
 34817: 7c 73 03                 t1 = u8 [a0 + 0x3]
 34820: 97 aa 08                 a3 = a3 << 0x8
 34823: d4 ba 0a                 a3 = a3 | a4
 34826: 97 22 10                 t0 = t0 << 0x10
 34829: 97 33 18                 t1 = t1 << 0x18
 34832: d4 23 0b                 a4 = t1 | t0
 34835: 82 12 58                 t0 = u64 [sp + 0x58]
 34838: d4 ab 03                 t1 = a4 | a3
 34841: 7c 7b 05                 a4 = u8 [a0 + 0x5]
 34844: 7c 75 04                 s0 = u8 [a0 + 0x4]
 34847: 64 6a                    a3 = s1
 34849: 7c 76 06                 s1 = u8 [a0 + 0x6]
 34852: 7c 77 07                 a0 = u8 [a0 + 0x7]
 34855: 97 bb 08                 a4 = a4 << 0x8
 34858: d4 5b 0b                 a4 = a4 | s0
 34861: 97 66 10                 s1 = s1 << 0x10
 34864: 97 77 18                 a0 = a0 << 0x18
 34867: d4 67 07                 a0 = a0 | s1
 34870: 64 a6                    s1 = a3
 34872: 82 15 60                 s0 = u64 [sp + 0x60]
 34875: d4 b7 07                 a0 = a0 | a4
 34878: 97 77 20                 a0 = a0 << 0x20
 34881: d4 37 07                 a0 = a0 | t1
 34884: d2 7a 0a                 a3 = a3 & a0
 34887: 95 99 08                 a2 = a2 + 0x8
 34890: 51 0a a6                 jump @2354 if a3 == 0
      :                          @2355
 34893: 6a a7                    a0 = ctz a3
 34895: 98 77 03                 a0 = a0 >> 0x3
 34898: c8 c7 07                 a0 = a0 + a5
 34901: d2 57 09                 a2 = a0 & s0
 34904: c8 92 07                 a0 = t0 + a2
 34907: 7d 77                    a0 = i8 [a0]
 34909: 57 07 0e                 jump @2357 if a0 <s 0
      :                          @2356
 34912: 82 27                    a0 = u64 [t0]
 34914: d2 67 07                 a0 = a0 & s1
 34917: 6a 79                    a2 = ctz a0
 34919: 98 99 03                 a2 = a2 >> 0x3
 34922: 01                       fallthrough
      :                          @2357
 34923: 82 1b 50                 a4 = u64 [sp + 0x50]
 34926: c9 0b 07                 a0 = a4 - ra
 34929: c9 09 0a                 a3 = a2 - ra
 34932: d3 a7 07                 a0 = a0 ^ a3
 34935: d2 57 07                 a0 = a0 & s0
 34938: 33 0a 08                 a3 = 0x8
 34941: ac a7 ac fe              jump @2348 if a0 <u a3
      :                          @2358
 34945: 97 97 04                 a0 = a2 << 0x4
 34948: c9 72 07                 a0 = t0 - a0
 34951: 95 77 f0                 a0 = a0 + 0xfffffffffffffff0
 34954: c8 92 0a                 a3 = t0 + a2
 34957: 7c a3                    t1 = u8 [a3]
 34959: 98 4c 39                 a5 = t2 >> 0x39
 34962: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 34965: d2 59 09                 a2 = a2 & s0
 34968: c8 29 09                 a2 = a2 + t0
 34971: 78 ac                    u8 [a3] = a5
 34973: 78 9c 08                 u8 [a2 + 0x8] = a5
 34976: 51 23 ff 00 c5 00        jump @2360 if t1 == 255
      :                          @2359
 34982: 7c 79                    a2 = u8 [a0]
 34984: 7c 8a                    a3 = u8 [a1]
 34986: 78 89                    u8 [a1] = a2
 34988: 78 7a                    u8 [a0] = a3
 34990: 7c 79 01                 a2 = u8 [a0 + 0x1]
 34993: 7c 8a 01                 a3 = u8 [a1 + 0x1]
 34996: 78 89 01                 u8 [a1 + 0x1] = a2
 34999: 78 7a 01                 u8 [a0 + 0x1] = a3
 35002: 7c 79 02                 a2 = u8 [a0 + 0x2]
 35005: 7c 8a 02                 a3 = u8 [a1 + 0x2]
 35008: 78 89 02                 u8 [a1 + 0x2] = a2
 35011: 78 7a 02                 u8 [a0 + 0x2] = a3
 35014: 7c 79 03                 a2 = u8 [a0 + 0x3]
 35017: 7c 8a 03                 a3 = u8 [a1 + 0x3]
 35020: 78 89 03                 u8 [a1 + 0x3] = a2
 35023: 78 7a 03                 u8 [a0 + 0x3] = a3
 35026: 7c 79 04                 a2 = u8 [a0 + 0x4]
 35029: 7c 8a 04                 a3 = u8 [a1 + 0x4]
 35032: 78 89 04                 u8 [a1 + 0x4] = a2
 35035: 78 7a 04                 u8 [a0 + 0x4] = a3
 35038: 7c 79 05                 a2 = u8 [a0 + 0x5]
 35041: 7c 8a 05                 a3 = u8 [a1 + 0x5]
 35044: 78 89 05                 u8 [a1 + 0x5] = a2
 35047: 78 7a 05                 u8 [a0 + 0x5] = a3
 35050: 7c 79 06                 a2 = u8 [a0 + 0x6]
 35053: 7c 8a 06                 a3 = u8 [a1 + 0x6]
 35056: 78 89 06                 u8 [a1 + 0x6] = a2
 35059: 78 7a 06                 u8 [a0 + 0x6] = a3
 35062: 7c 79 07                 a2 = u8 [a0 + 0x7]
 35065: 7c 8a 07                 a3 = u8 [a1 + 0x7]
 35068: 78 89 07                 u8 [a1 + 0x7] = a2
 35071: 78 7a 07                 u8 [a0 + 0x7] = a3
 35074: 7c 79 08                 a2 = u8 [a0 + 0x8]
 35077: 7c 8a 08                 a3 = u8 [a1 + 0x8]
 35080: 78 89 08                 u8 [a1 + 0x8] = a2
 35083: 78 7a 08                 u8 [a0 + 0x8] = a3
 35086: 7c 79 09                 a2 = u8 [a0 + 0x9]
 35089: 7c 8a 09                 a3 = u8 [a1 + 0x9]
 35092: 78 89 09                 u8 [a1 + 0x9] = a2
 35095: 78 7a 09                 u8 [a0 + 0x9] = a3
 35098: 7c 79 0a                 a2 = u8 [a0 + 0xa]
 35101: 7c 8a 0a                 a3 = u8 [a1 + 0xa]
 35104: 78 89 0a                 u8 [a1 + 0xa] = a2
 35107: 78 7a 0a                 u8 [a0 + 0xa] = a3
 35110: 7c 79 0b                 a2 = u8 [a0 + 0xb]
 35113: 7c 8a 0b                 a3 = u8 [a1 + 0xb]
 35116: 78 89 0b                 u8 [a1 + 0xb] = a2
 35119: 78 7a 0b                 u8 [a0 + 0xb] = a3
 35122: 7c 79 0c                 a2 = u8 [a0 + 0xc]
 35125: 7c 8a 0c                 a3 = u8 [a1 + 0xc]
 35128: 78 89 0c                 u8 [a1 + 0xc] = a2
 35131: 78 7a 0c                 u8 [a0 + 0xc] = a3
 35134: 7c 79 0d                 a2 = u8 [a0 + 0xd]
 35137: 7c 8a 0d                 a3 = u8 [a1 + 0xd]
 35140: 78 89 0d                 u8 [a1 + 0xd] = a2
 35143: 78 7a 0d                 u8 [a0 + 0xd] = a3
 35146: 7c 79 0e                 a2 = u8 [a0 + 0xe]
 35149: 7c 8a 0e                 a3 = u8 [a1 + 0xe]
 35152: 78 89 0e                 u8 [a1 + 0xe] = a2
 35155: 78 7a 0e                 u8 [a0 + 0xe] = a3
 35158: 7c 79 0f                 a2 = u8 [a0 + 0xf]
 35161: 7c 8a 0f                 a3 = u8 [a1 + 0xf]
 35164: 78 89 0f                 u8 [a1 + 0xf] = a2
 35167: 78 7a 0f                 u8 [a0 + 0xf] = a3
 35170: 28 0d fe                 jump @2352
      :                          @2360
 35173: 95 b9 f8                 a2 = a4 + 0xfffffffffffffff8
 35176: d2 59 09                 a2 = a2 & s0
 35179: c8 29 09                 a2 = a2 + t0
 35182: 82 1b 28                 a4 = u64 [sp + 0x28]
 35185: 46 0b ff 00              u8 [a4 + 0] = 0xff
 35189: 46 19 08 ff 00           u8 [a2 + 8] = 0xff
 35194: 33 09 10                 a2 = 0x10
 35197: 50 20 94 02 63 80 02     ra = 660, jump @13635
      :                          @2361 [@dyn 330]
 35204: 82 1b 50                 a4 = u64 [sp + 0x50]
 35207: 82 12 58                 t0 = u64 [sp + 0x58]
 35210: 82 19 20                 a2 = u64 [sp + 0x20]
 35213: 33 08 80 00              a1 = 0x80
 35217: 28 b4 fd                 jump @2349
      :                          @2362
 35220: 82 19 08                 a2 = u64 [sp + 0x8]
 35223: 7b 79                    u64 [a0] = a2
 35225: 7b 75 08                 u64 [a0 + 0x8] = s0
 35228: 7b 76 10                 u64 [a0 + 0x10] = s1
 35231: 7b 78 18                 u64 [a0 + 0x18] = a1
 35234: 82 19 60                 a2 = u64 [sp + 0x60]
 35237: 01                       fallthrough
      :                          @2363
 35238: 82 18 18                 a1 = u64 [sp + 0x18]
 35241: 97 88 04                 a1 = a1 << 0x4
 35244: c8 89 07                 a0 = a2 + a1
 35247: 95 77 09                 a0 = a0 + 0x9
 35250: 33 09 00 00 10           a2 = 0x100000
 35255: ac 79 25                 jump @2369 if a2 <u a0
      :                          @2364
 35258: c9 84 08                 a1 = t2 - a1
 35261: 33 0a b0 02 03           a3 = 0x302b0
 35266: 95 a9 00 00 10           a2 = a3 + 0x100000
 35271: 01                       fallthrough
      :                          @2365
 35272: 82 9a                    a3 = u64 [a2]
 35274: c9 a9 0b                 a4 = a2 - a3
 35277: ab 8b 0f                 jump @2369 if a4 != a1
      :                          @2366
 35280: c9 7a 0b                 a4 = a3 - a0
 35283: 01                       fallthrough
      :                          @2367
 35284: 82 9c                    a5 = u64 [a2]
 35286: ab ac f2                 jump @2365 if a5 != a3
      :                          @2368
 35289: 7b 9b                    u64 [a2] = a4
 35291: 01                       fallthrough
      :                          @2369
 35292: 82 10 78                 ra = u64 [sp + 0x78]
 35295: 82 15 70                 s0 = u64 [sp + 0x70]
 35298: 82 16 68                 s1 = u64 [sp + 0x68]
 35301: 95 11 80 00              sp = sp + 0x80
 35305: 32 00                    ret
      :                          @2370
 35307: 00                       trap
      :                          @2371
 35308: 00                       trap
      :                          @2372
 35309: 00                       trap
      :                          @2373
 35310: 82 9a                    a3 = u64 [a2]
 35312: 95 ab 08                 a4 = a3 + 0x8
 35315: ac ab 15 01              jump @2400 if a4 <u a3
      :                          @2374
 35319: 95 b7 08                 a0 = a4 + 0x8
 35322: d8 b7 0c                 a5 = a0 <u a4
 35325: d8 72 07                 a0 = t0 <u a0
 35328: d4 c7 07                 a0 = a0 | a5
 35331: 52 07 05 01              jump @2400 if a0 != 0
      :                          @2375
 35335: c9 b6 07                 a0 = s1 - a4
 35338: c8 27 07                 a0 = a0 + t0
 35341: 84 7c 07                 a5 = a0 & 0x7
 35344: c8 cb 0b                 a4 = a4 + a5
 35347: 01                       fallthrough
      :                          @2376
 35348: 82 95                    s0 = u64 [a2]
 35350: ab a5 d8                 jump @2373 if s0 != a3
      :                          @2377
 35353: 7b 9b                    u64 [a2] = a4
 35355: c9 c7 02                 t0 = a0 - a5
 35358: 33 08 00 04 01           a1 = 0x10400
 35363: 7b 28                    u64 [t0] = a1
 35365: 33 08 b0 02 03           a1 = 0x302b0
 35370: 33 03 00 00 10           t1 = 0x100000
 35375: c8 38 0a                 a3 = a1 + t1
 35378: 01                       fallthrough
      :                          @2378
 35379: 82 ab                    a4 = u64 [a3]
 35381: 95 bc 10                 a5 = a4 + 0x10
 35384: ac bc d1 00              jump @2401 if a5 <u a4
      :                          @2379
 35388: 95 c9 08                 a2 = a5 + 0x8
 35391: d8 c9 05                 s0 = a2 <u a5
 35394: d8 93 09                 a2 = t1 <u a2
 35397: d4 59 09                 a2 = a2 | s0
 35400: 52 09 c1 00              jump @2401 if a2 != 0
      :                          @2380
 35404: c9 c8 05                 s0 = a1 - a5
 35407: c8 35 05                 s0 = s0 + t1
 35410: 84 59 07                 a2 = s0 & 0x7
 35413: c8 9c 0c                 a5 = a5 + a2
 35416: 01                       fallthrough
      :                          @2381
 35417: 82 a7                    a0 = u64 [a3]
 35419: ab b7 d8                 jump @2378 if a0 != a4
      :                          @2382
 35422: 7b ac                    u64 [a3] = a5
 35424: c9 95 05                 s0 = s0 - a2
 35427: 7b 52                    u64 [s0] = t0
 35429: 33 07 20 04 01           a0 = 0x10420
 35434: 7b 57 08                 u64 [s0 + 0x8] = a0
 35437: 01                       fallthrough
      :                          @2383
 35438: 3a 09 78 02 03           a2 = u64 [0x30278]
 35443: 52 09 0b                 jump @2385 if a2 != 0
      :                          @2384
 35446: 3e 05 78 02 03           u64 [0x30278] = s0
 35451: 33 08                    a1 = 0
 35453: 01                       fallthrough
      :                          @2385
 35454: 51 09 7a                 jump @2399 if a2 == 0
      :                          @2386
 35457: 7b 19                    u64 [sp] = a2
 35459: 82 57 08                 a0 = u64 [s0 + 0x8]
 35462: 7b 17 08                 u64 [sp + 0x8] = a0
 35465: 82 56                    s1 = u64 [s0]
 35467: 82 78                    a1 = u64 [a0]
 35469: 64 67                    a0 = s1
 35471: b4 80 02 96 02           ra = 662, jump [a1]
      :                          @2387 [@dyn 331]
 35476: 82 17 08                 a0 = u64 [sp + 0x8]
 35479: 82 77 08                 a0 = u64 [a0 + 0x8]
 35482: 95 79 ff ff ef           a2 = a0 + 0xffffffffffefffff
 35487: 53 39 00 00 f0 32        jump @2393 if a2 <u 4293918720
      :                          @2388
 35493: 33 08 b0 02 03           a1 = 0x302b0
 35498: 95 88 00 00 10           a1 = a1 + 0x100000
 35503: 01                       fallthrough
      :                          @2389
 35504: 82 89                    a2 = u64 [a1]
 35506: c9 98 0a                 a3 = a1 - a2
 35509: ab 6a 1c                 jump @2393 if a3 != s1
      :                          @2390
 35512: c9 79 0a                 a3 = a2 - a0
 35515: 01                       fallthrough
      :                          @2391
 35516: 82 8b                    a4 = u64 [a1]
 35518: ab 9b f2                 jump @2389 if a4 != a2
      :                          @2392
 35521: 7b 8a                    u64 [a1] = a3
 35523: 33 0c                    a5 = 0
 35525: 33 07 b0 02 03           a0 = 0x302b0
 35530: 95 77 00 00 10           a0 = a0 + 0x100000
 35535: 28 0d                    jump @2394
      :                          @2393
 35537: 33 07 b0 02 03           a0 = 0x302b0
 35542: 95 77 00 00 10           a0 = a0 + 0x100000
 35547: 01                       fallthrough
      :                          @2394
 35548: 82 78                    a1 = u64 [a0]
 35550: c9 87 09                 a2 = a0 - a1
 35553: ab 59 14                 jump @2398 if a2 != s0
      :                          @2395
 35556: 95 89 f0                 a2 = a1 + 0xfffffffffffffff0
 35559: 01                       fallthrough
      :                          @2396
 35560: 82 7a                    a3 = u64 [a0]
 35562: ab 8a f2                 jump @2394 if a3 != a1
      :                          @2397
 35565: 7b 79                    u64 [a0] = a2
 35567: 33 0b                    a4 = 0
 35569: 82 15                    s0 = u64 [sp]
 35571: 28 05                    jump @2399
      :                          @2398
 35573: 82 15                    s0 = u64 [sp]
 35575: 01                       fallthrough
      :                          @2399
 35576: 64 57                    a0 = s0
 35578: 82 10 20                 ra = u64 [sp + 0x20]
 35581: 82 15 18                 s0 = u64 [sp + 0x18]
 35584: 82 16 10                 s1 = u64 [sp + 0x10]
 35587: 95 11 28                 sp = sp + 0x28
 35590: 32 00                    ret
      :                          @2400
 35592: 00                       trap
      :                          @2401
 35593: 00                       trap
      :                          @2402
 35594: 51 08 14                 jump @2406 if a1 == 0
      :                          @2403
 35597: 64 7a                    a3 = a0
 35599: 64 8b                    a4 = a1
 35601: 01                       fallthrough
      :                          @2404
 35602: 64 b9                    a2 = a4
 35604: cd ba 0b                 a4 = a3 %u a4
 35607: 64 9a                    a3 = a2
 35609: 52 0b f9                 jump @2404 if a4 != 0
      :                          @2405
 35612: 28 07                    jump @2407
      :                          @2406
 35614: 64 79                    a2 = a0
 35616: 51 07 0b                 jump @2408 if a0 == 0
      :                          @2407
 35619: cb 97 07                 a0 = a0 /u a2
 35622: ca 87 07                 a0 = a0 * a1
 35625: 32 00                    ret
      :                          @2408
 35627: 00                       trap
      :                          @2409
 35628: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 35631: 7b 10 28                 u64 [sp + 0x28] = ra
 35634: 7b 15 20                 u64 [sp + 0x20] = s0
 35637: 7b 16 18                 u64 [sp + 0x18] = s1
 35640: 64 75                    s0 = a0
 35642: 51 09 3a                 jump @2413 if a2 == 0
      :                          @2410
 35645: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 35655: d3 87 07                 a0 = a0 ^ a1
 35658: e1 97 07                 a0 = a0 | ~a2
 35661: 51 07 4d                 jump @2415 if a0 == 0
      :                          @2411
 35664: cc 98 06                 s1 = a1 /s a2
 35667: ca 96 07                 a0 = s1 * a2
 35670: c9 78 0a                 a3 = a1 - a0
 35673: 64 17                    a0 = sp
 35675: 64 98                    a1 = a2
 35677: 64 a9                    a2 = a3
 35679: 50 20 98 02 cd           ra = 664, jump @2409
      :                          @2412 [@dyn 332]
 35684: 82 17 10                 a0 = u64 [sp + 0x10]
 35687: 82 19 08                 a2 = u64 [sp + 0x8]
 35690: 82 18                    a1 = u64 [sp]
 35692: ca 76 0a                 a3 = s1 * a0
 35695: c9 a9 09                 a2 = a2 - a3
 35698: 28 12                    jump @2414
      :                          @2413
 35700: 8e 8a                    a3 = a1 >u 0
 35702: 89 8b                    a4 = a1 <s 0
 35704: 33 07 ff                 a0 = 0xffffffffffffffff
 35707: da ba 07                 a0 = a3 if a4 == 0
 35710: 9a 8a                    a3 = -a1
 35712: e3 a8 08                 a1 = maxs(a1, a3)
 35715: 01                       fallthrough
      :                          @2414
 35716: 7b 58                    u64 [s0] = a1
 35718: 7b 57 08                 u64 [s0 + 0x8] = a0
 35721: 7b 59 10                 u64 [s0 + 0x10] = a2
 35724: 82 10 28                 ra = u64 [sp + 0x28]
 35727: 82 15 20                 s0 = u64 [sp + 0x20]
 35730: 82 16 18                 s1 = u64 [sp + 0x18]
 35733: 95 11 30                 sp = sp + 0x30
 35736: 32 00                    ret
      :                          @2415
 35738: 00                       trap
      :                          @2416 [@dyn 333]
 35739: 82 18                    a1 = u64 [sp]
 35741: 33 07 01                 a0 = 0x1
 35744: ab 78 1a                 jump @2418 if a1 != a0
      :                          @2417
 35747: 82 18 08                 a1 = u64 [sp + 0x8]
 35750: ce 58 08                 a1 = a1 %s s0
 35753: c8 58 08                 a1 = a1 + s0
 35756: ce 58 08                 a1 = a1 %s s0
 35759: 82 10 20                 ra = u64 [sp + 0x20]
 35762: 82 15 18                 s0 = u64 [sp + 0x18]
 35765: 95 11 28                 sp = sp + 0x28
 35768: 32 00                    ret
      :                          @2418
 35770: 33 07                    a0 = 0
 35772: 82 10 20                 ra = u64 [sp + 0x20]
 35775: 82 15 18                 s0 = u64 [sp + 0x18]
 35778: 95 11 28                 sp = sp + 0x28
 35781: 32 00                    ret
      :                          @2419
 35783: d8 87 08                 a1 = a0 <u a1
 35786: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
 35789: db 89 04                 t2 = a2 if a1 != 0
 35792: da 8c 03                 t1 = a5 if a1 == 0
 35795: ae 43 26                 jump @2424 if t1 >=u t2
      :                          @2420
 35798: c8 34 08                 a1 = t2 + t1
 35801: 95 88 01                 a1 = a1 + 0x1
 35804: 98 8c 01                 a5 = a1 >> 0x1
 35807: 64 29                    a2 = t0
 35809: 33 08 01                 a1 = 0x1
 35812: 01                       fallthrough
      :                          @2421
 35813: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 35816: 51 09 df                 jump @2419 if a2 == 0
      :                          @2422
 35819: d6 c8 0a                 a3 = a1 mulhu a5
 35822: ca c8 08                 a1 = a1 * a5
 35825: db ab 08                 a1 = a4 if a3 != 0
 35828: ae 87 f1                 jump @2421 if a0 >=u a1
      :                          @2423
 35831: 28 d0                    jump @2419
      :                          @2424
 35833: 64 37                    a0 = t1
 35835: 32 00                    ret
      :                          @2425
 35837: 84 89 01                 a2 = a1 & 0x1
 35840: 52 09 09                 jump @2427 if a2 != 0
      :                          @2426
 35843: 33 07                    a0 = 0
 35845: 28 64 34 02              jump @12252
      :                          @2427
 35849: cd 87 0c                 a5 = a0 %u a1
 35852: 51 0c 4f                 jump @2438 if a5 == 0
      :                          @2428
 35855: 33 07 01                 a0 = 0x1
 35858: 33 03 03                 t1 = 0x3
 35861: 33 02 05                 t0 = 0x5
 35864: 64 8b                    a4 = a1
 35866: 28 18                    jump @2431
      :                          @2429
 35868: 64 c8                    a1 = a5
 35870: 01                       fallthrough
      :                          @2430
 35871: d2 8b 0a                 a3 = a4 & a1
 35874: 84 aa 02                 a3 = a3 & 0x2
 35877: 9a 79                    a2 = -a0
 35879: cd 8b 0c                 a5 = a4 %u a1
 35882: db a9 07                 a0 = a2 if a3 != 0
 35885: 64 8b                    a4 = a1
 35887: 51 0c 38                 jump @2439 if a5 == 0
      :                          @2431
 35890: 84 c8 01                 a1 = a5 & 0x1
 35893: 52 08 e7                 jump @2429 if a1 != 0
      :                          @2432
 35896: 84 b8 07                 a1 = a4 & 0x7
 35899: aa 38 06                 jump @2434 if a1 == t1
      :                          @2433
 35902: ab 28 12                 jump @2436 if a1 != t0
      :                          @2434
 35905: 98 c8 01                 a1 = a5 >> 0x1
 35908: 84 ca 02                 a3 = a5 & 0x2
 35911: 9a 77                    a0 = -a0
 35913: 64 8c                    a5 = a1
 35915: 51 0a f6                 jump @2434 if a3 == 0
      :                          @2435
 35918: 28 d1                    jump @2430
      :                          @2436
 35920: 84 c8 02                 a1 = a5 & 0x2
 35923: 98 cc 01                 a5 = a5 >> 0x1
 35926: 51 08 fa                 jump @2436 if a1 == 0
      :                          @2437
 35929: 28 c3                    jump @2429
      :                          @2438
 35931: 33 07 01                 a0 = 0x1
 35934: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 35937: 94 87                    a0 = 0 if a1 != 0
 35939: 28 06 34 02              jump @12252
      :                          @2439
 35943: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 35946: 94 87                    a0 = 0 if a1 != 0
 35948: 32 00                    ret
      :                          @2440
 35950: 33 08 02                 a1 = 0x2
 35953: aa 87 2a                 jump @2449 if a0 == a1
      :                          @2441
 35956: 95 77 01                 a0 = a0 + 0x1
 35959: ac 97 fd                 jump @2441 if a0 <u a2
      :                          @2442
 35962: 84 78 01                 a1 = a0 & 0x1
 35965: 51 08 f1                 jump @2440 if a1 == 0
      :                          @2443
 35968: ac a7 20                 jump @2450 if a0 <u a3
      :                          @2444
 35971: 33 08 03                 a1 = 0x3
 35974: 01                       fallthrough
      :                          @2445
 35975: 51 08 1b                 jump @2451 if a1 == 0
      :                          @2446
 35978: cd 87 0b                 a4 = a0 %u a1
 35981: 51 0b e7                 jump @2441 if a4 == 0
      :                          @2447
 35984: 95 88 02                 a1 = a1 + 0x2
 35987: ca 88 0b                 a4 = a1 * a1
 35990: ae b7 f1                 jump @2445 if a0 >=u a4
      :                          @2448
 35993: 32 00                    ret
      :                          @2449
 35995: 33 07 02                 a0 = 0x2
 35998: 32 00                    ret
      :                          @2450
 36000: 32 00                    ret
      :                          @2451
 36002: 00                       trap
      :                          @2452
 36003: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 36006: 7b 10 40                 u64 [sp + 0x40] = ra
 36009: 7b 15 38                 u64 [sp + 0x38] = s0
 36012: 7b 16 30                 u64 [sp + 0x30] = s1
 36015: 7b 17 08                 u64 [sp + 0x8] = a0
 36018: 33 06                    s1 = 0
 36020: 95 75 ff                 s0 = a0 + 0xffffffffffffffff
 36023: 49 11 18                 u64 [sp + 24] = 0
 36026: 33 07 08                 a0 = 0x8
 36029: 7b 17 20                 u64 [sp + 0x20] = a0
 36032: 84 58 01                 a1 = s0 & 0x1
 36035: 49 11 28                 u64 [sp + 40] = 0
 36038: 7b 15 10                 u64 [sp + 0x10] = s0
 36041: 52 08 46                 jump @2458 if a1 != 0
      :                          @2453
 36044: 33 06                    s1 = 0
 36046: 33 09 02                 a2 = 0x2
 36049: 82 1a 10                 a3 = u64 [sp + 0x10]
 36052: 28 1b                    jump @2455
      :                          @2454
 36054: 97 68 03                 a1 = s1 << 0x3
 36057: c8 78 08                 a1 = a1 + a0
 36060: 7b 89                    u64 [a1] = a2
 36062: 95 66 01                 s1 = s1 + 0x1
 36065: 98 a5 01                 s0 = a3 >> 0x1
 36068: 84 a8 02                 a1 = a3 & 0x2
 36071: 7b 16 28                 u64 [sp + 0x28] = s1
 36074: 64 5a                    a3 = s0
 36076: 52 08 23                 jump @2458 if a1 != 0
      :                          @2455
 36079: 82 18 18                 a1 = u64 [sp + 0x18]
 36082: ab 86 e4                 jump @2454 if s1 != a1
      :                          @2456
 36085: 95 17 18                 a0 = sp + 0x18
 36088: 64 68                    a1 = s1
 36090: 64 a5                    s0 = a3
 36092: 50 20 9c 02 13 c6        ra = 668, jump @1581
      :                          @2457 [@dyn 334]
 36098: 64 5a                    a3 = s0
 36100: 33 09 02                 a2 = 0x2
 36103: 82 16 28                 s1 = u64 [sp + 0x28]
 36106: 82 17 20                 a0 = u64 [sp + 0x20]
 36109: 28 c9                    jump @2454
      :                          @2458
 36111: 55 15 09 32              jump @2464 if s0 >=u 9
      :                          @2459
 36115: 82 18 18                 a1 = u64 [sp + 0x18]
 36118: 54 15 01 79              jump @2473 if s0 <=u 1
      :                          @2460
 36122: ab 86 15                 jump @2463 if s1 != a1
      :                          @2461
 36125: 95 17 18                 a0 = sp + 0x18
 36128: 64 68                    a1 = s1
 36130: 50 20 9e 02 ed c5        ra = 670, jump @1581
      :                          @2462 [@dyn 335]
 36136: 82 16 28                 s1 = u64 [sp + 0x28]
 36139: 82 18 18                 a1 = u64 [sp + 0x18]
 36142: 01                       fallthrough
      :                          @2463
 36143: 7b 18                    u64 [sp] = a1
 36145: 82 17 20                 a0 = u64 [sp + 0x20]
 36148: 97 68 03                 a1 = s1 << 0x3
 36151: c8 78 08                 a1 = a1 + a0
 36154: 7b 85                    u64 [a1] = s0
 36156: 95 66 01                 s1 = s1 + 0x1
 36159: 28 56                    jump @2474
      :                          @2464
 36161: 33 09 03                 a2 = 0x3
 36164: 28 0b                    jump @2466
      :                          @2465
 36166: 95 99 02                 a2 = a2 + 0x2
 36169: ca 99 07                 a0 = a2 * a2
 36172: ac 75 c7                 jump @2459 if s0 <u a0
      :                          @2466
 36175: 51 09 81 01              jump @2514 if a2 == 0
      :                          @2467
 36179: cd 95 07                 a0 = s0 %u a2
 36182: 52 07 f0                 jump @2465 if a0 != 0
      :                          @2468
 36185: 28 1c                    jump @2470
      :                          @2469
 36187: 82 17 20                 a0 = u64 [sp + 0x20]
 36190: 97 68 03                 a1 = s1 << 0x3
 36193: c8 87 07                 a0 = a0 + a1
 36196: 7b 79                    u64 [a0] = a2
 36198: 95 66 01                 s1 = s1 + 0x1
 36201: cb 95 05                 s0 = s0 /u a2
 36204: cd 95 07                 a0 = s0 %u a2
 36207: 7b 16 28                 u64 [sp + 0x28] = s1
 36210: 52 07 d4                 jump @2465 if a0 != 0
      :                          @2470
 36213: 82 17 18                 a0 = u64 [sp + 0x18]
 36216: ab 76 e3                 jump @2469 if s1 != a0
      :                          @2471
 36219: 95 17 18                 a0 = sp + 0x18
 36222: 64 68                    a1 = s1
 36224: 64 96                    s1 = a2
 36226: 50 20 a0 02 8d c5        ra = 672, jump @1581
      :                          @2472 [@dyn 336]
 36232: 64 69                    a2 = s1
 36234: 82 16 28                 s1 = u64 [sp + 0x28]
 36237: 28 ce                    jump @2469
      :                          @2473
 36239: 7b 18                    u64 [sp] = a1
 36241: 82 17 20                 a0 = u64 [sp + 0x20]
 36244: 01                       fallthrough
      :                          @2474
 36245: 64 68                    a1 = s1
 36247: 64 75                    s0 = a0
 36249: 50 20 a2 02 31 86        ra = 674, jump @344
      :                          @2475 [@dyn 337]
 36255: 33 02 02                 t0 = 0x2
 36258: ae 26 0c                 jump @2477 if s1 >=u t0
      :                          @2476
 36261: 64 68                    a1 = s1
 36263: 82 1b 08                 a4 = u64 [sp + 0x8]
 36266: 64 54                    t2 = s0
 36268: 28 57                    jump @2486
      :                          @2477
 36270: 82 5c                    a5 = u64 [s0]
 36272: 95 57 10                 a0 = s0 + 0x10
 36275: 33 0a 01                 a3 = 0x1
 36278: c9 6a 08                 a1 = a3 - s1
 36281: 33 09 02                 a2 = 0x2
 36284: 82 1b 08                 a4 = u64 [sp + 0x8]
 36287: 64 54                    t2 = s0
 36289: 01                       fallthrough
      :                          @2478
 36290: 64 c5                    s0 = a5
 36292: 82 7c f8                 a5 = u64 [a0 + 0xfffffffffffffff8]
 36295: aa 5c 13                 jump @2481 if a5 == s0
      :                          @2479
 36298: 95 99 01                 a2 = a2 + 0x1
 36301: c8 98 0a                 a3 = a1 + a2
 36304: 95 77 08                 a0 = a0 + 0x8
 36307: ab 2a ef                 jump @2478 if a3 != t0
      :                          @2480
 36310: 64 68                    a1 = s1
 36312: 28 2b                    jump @2486
      :                          @2481
 36314: 95 98 ff                 a1 = a2 + 0xffffffffffffffff
 36317: ae 69 26                 jump @2486 if a2 >=u s1
      :                          @2482
 36320: c9 96 09                 a2 = s1 - a2
 36323: 28 0b                    jump @2484
      :                          @2483
 36325: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 36328: 95 77 08                 a0 = a0 + 0x8
 36331: 51 09 18                 jump @2486 if a2 == 0
      :                          @2484
 36334: 97 8a 03                 a3 = a1 << 0x3
 36337: c8 4a 0a                 a3 = a3 + t2
 36340: 82 76                    s1 = u64 [a0]
 36342: 82 ac f8                 a5 = u64 [a3 + 0xfffffffffffffff8]
 36345: aa c6 ec                 jump @2483 if s1 == a5
      :                          @2485
 36348: 7b a6                    u64 [a3] = s1
 36350: 95 88 01                 a1 = a1 + 0x1
 36353: 28 e4                    jump @2483
      :                          @2486
 36355: 53 1b 03 5a              jump @2498 if a4 <u 3
      :                          @2487
 36359: 97 88 03                 a1 = a1 << 0x3
 36362: c8 48 08                 a1 = a1 + t2
 36365: 33 02 02                 t0 = 0x2
 36368: 33 03 01                 t1 = 0x1
 36371: 28 05                    jump @2489
      :                          @2488
 36373: aa b2 48                 jump @2498 if t0 == a4
      :                          @2489
 36376: 64 27                    a0 = t0
 36378: 95 22 01                 t0 = t0 + 0x1
 36381: 64 4a                    a3 = t2
 36383: 28 05                    jump @2491
      :                          @2490
 36385: aa 3c f4                 jump @2488 if a5 == t1
      :                          @2491
 36388: aa 8a 6f                 jump @2506 if a3 == a1
      :                          @2492
 36391: 82 ac                    a5 = u64 [a3]
 36393: 51 0c a8 00              jump @2515 if a5 == 0
      :                          @2493
 36397: 82 19 10                 a2 = u64 [sp + 0x10]
 36400: ac c9 e5                 jump @2488 if a2 <u a5
      :                          @2494
 36403: 95 aa 08                 a3 = a3 + 0x8
 36406: 82 19 10                 a2 = u64 [sp + 0x10]
 36409: cb c9 06                 s1 = a2 /u a5
 36412: 33 0c 01                 a5 = 0x1
 36415: 64 75                    s0 = a0
 36417: 28 0b                    jump @2496
      :                          @2495
 36419: 98 66 01                 s1 = s1 >> 0x1
 36422: ca 55 05                 s0 = s0 * s0
 36425: 51 06 d8                 jump @2490 if s1 == 0
      :                          @2496
 36428: 84 69 01                 a2 = s1 & 0x1
 36431: cd b5 05                 s0 = s0 %u a4
 36434: 51 09 f1                 jump @2495 if a2 == 0
      :                          @2497
 36437: ca c5 09                 a2 = s0 * a5
 36440: cd b9 0c                 a5 = a2 %u a4
 36443: 28 e8                    jump @2495
      :                          @2498
 36445: 82 18                    a1 = u64 [sp]
 36447: 51 08 30                 jump @2505 if a1 == 0
      :                          @2499
 36450: 56 38 00 00 02 2d        jump @2505 if a1 >u 131072
      :                          @2500
 36456: 97 87 03                 a0 = a1 << 0x3
 36459: 33 08 b0 02 03           a1 = 0x302b0
 36464: 95 88 00 00 10           a1 = a1 + 0x100000
 36469: 01                       fallthrough
      :                          @2501
 36470: 82 89                    a2 = u64 [a1]
 36472: c9 98 0a                 a3 = a1 - a2
 36475: ab 4a 14                 jump @2505 if a3 != t2
      :                          @2502
 36478: c9 79 0a                 a3 = a2 - a0
 36481: 01                       fallthrough
      :                          @2503
 36482: 82 8b                    a4 = u64 [a1]
 36484: ab 9b f2                 jump @2501 if a4 != a2
      :                          @2504
 36487: 7b 8a                    u64 [a1] = a3
 36489: 33 0c                    a5 = 0
 36491: 33 07                    a0 = 0
 36493: 28 35                    jump @2513
      :                          @2505
 36495: 33 07                    a0 = 0
 36497: 28 31                    jump @2513
      :                          @2506
 36499: 82 19                    a2 = u64 [sp]
 36501: 51 09 2d                 jump @2513 if a2 == 0
      :                          @2507
 36504: 33 08 00 00 02           a1 = 0x20000
 36509: ac 98 25                 jump @2513 if a1 <u a2
      :                          @2508
 36512: 97 98 03                 a1 = a2 << 0x3
 36515: 33 09 b0 02 03           a2 = 0x302b0
 36520: 95 99 00 00 10           a2 = a2 + 0x100000
 36525: 01                       fallthrough
      :                          @2509
 36526: 82 9a                    a3 = u64 [a2]
 36528: c9 a9 0b                 a4 = a2 - a3
 36531: ab 4b 0f                 jump @2513 if a4 != t2
      :                          @2510
 36534: c9 8a 0b                 a4 = a3 - a1
 36537: 01                       fallthrough
      :                          @2511
 36538: 82 9c                    a5 = u64 [a2]
 36540: ab ac f2                 jump @2509 if a5 != a3
      :                          @2512
 36543: 7b 9b                    u64 [a2] = a4
 36545: 01                       fallthrough
      :                          @2513
 36546: 82 10 40                 ra = u64 [sp + 0x40]
 36549: 82 15 38                 s0 = u64 [sp + 0x38]
 36552: 82 16 30                 s1 = u64 [sp + 0x30]
 36555: 95 11 48                 sp = sp + 0x48
 36558: 32 00                    ret
      :                          @2514
 36560: 00                       trap
      :                          @2515
 36561: 00                       trap
      :                          @2516 [@dyn 338]
 36562: 82 17 10                 a0 = u64 [sp + 0x10]
 36565: 52 17 01 4c              jump @2518 if a0 != 1
      :                          @2517
 36569: 82 17 18                 a0 = u64 [sp + 0x18]
 36572: 82 1b 08                 a4 = u64 [sp + 0x8]
 36575: 82 18                    a1 = u64 [sp]
 36577: c9 b8 08                 a1 = a1 - a4
 36580: ce 58 08                 a1 = a1 %s s0
 36583: 9a 59                    a2 = -s0
 36585: e3 95 09                 a2 = maxs(s0, a2)
 36588: 99 8a 3f                 a3 = a1 >>a 0x3f
 36591: d2 9a 0a                 a3 = a3 & a2
 36594: c8 a8 08                 a1 = a1 + a3
 36597: ce 57 07                 a0 = a0 %s s0
 36600: c8 57 07                 a0 = a0 + s0
 36603: ce 57 07                 a0 = a0 %s s0
 36606: ca 78 07                 a0 = a1 * a0
 36609: ce 57 07                 a0 = a0 %s s0
 36612: 99 78 3f                 a1 = a0 >>a 0x3f
 36615: d2 98 08                 a1 = a1 & a2
 36618: c8 87 07                 a0 = a0 + a1
 36621: ca 67 07                 a0 = a0 * s1
 36624: c8 b7 07                 a0 = a0 + a4
 36627: 82 10 38                 ra = u64 [sp + 0x38]
 36630: 82 15 30                 s0 = u64 [sp + 0x30]
 36633: 82 16 28                 s1 = u64 [sp + 0x28]
 36636: 95 11 40                 sp = sp + 0x40
 36639: 32 00                    ret
      :                          @2518
 36641: 00                       trap
      :                          @2519
 36642: 95 11 98                 sp = sp + 0xffffffffffffff98
 36645: 7b 10 60                 u64 [sp + 0x60] = ra
 36648: 7b 15 58                 u64 [sp + 0x58] = s0
 36651: 7b 16 50                 u64 [sp + 0x50] = s1
 36654: 82 86 08                 s1 = u64 [a1 + 0x8]
 36657: 51 06 a2 01              jump @2537 if s1 == 0
      :                          @2520
 36661: 64 85                    s0 = a1
 36663: 82 89                    a2 = u64 [a1]
 36665: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 36675: d3 98 08                 a1 = a1 ^ a2
 36678: e1 68 08                 a1 = a1 | ~s1
 36681: 51 08 89 01              jump @2536 if a1 == 0
      :                          @2521
 36685: 7b 17 30                 u64 [sp + 0x30] = a0
 36688: 82 77                    a0 = u64 [a0]
 36690: 7b 17 28                 u64 [sp + 0x28] = a0
 36693: 7b 19 18                 u64 [sp + 0x18] = a2
 36696: ce 69 08                 a1 = a2 %s s1
 36699: 9a 67                    a0 = -s1
 36701: e3 76 09                 a2 = maxs(s1, a0)
 36704: 99 87 3f                 a0 = a1 >>a 0x3f
 36707: 7b 19 20                 u64 [sp + 0x20] = a2
 36710: d2 97 07                 a0 = a0 & a2
 36713: c8 78 08                 a1 = a1 + a0
 36716: 95 17 38                 a0 = sp + 0x38
 36719: 64 69                    a2 = s1
 36721: 50 20 a6 02 bb fb        ra = 678, jump @2409
      :                          @2522 [@dyn 339]
 36727: 82 17 38                 a0 = u64 [sp + 0x38]
 36730: 52 17 01 5a 01           jump @2538 if a0 != 1
      :                          @2523
 36735: 82 17 40                 a0 = u64 [sp + 0x40]
 36738: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 36748: d3 87 09                 a2 = a0 ^ a1
 36751: e1 69 09                 a2 = a2 | ~s1
 36754: 51 09 40 01              jump @2536 if a2 == 0
      :                          @2524
 36758: ce 67 07                 a0 = a0 %s s1
 36761: c8 67 07                 a0 = a0 + s1
 36764: d3 78 08                 a1 = a1 ^ a0
 36767: e1 68 08                 a1 = a1 | ~s1
 36770: 51 08 30 01              jump @2536 if a1 == 0
      :                          @2525
 36774: 82 18 30                 a1 = u64 [sp + 0x30]
 36777: 82 88 08                 a1 = u64 [a1 + 0x8]
 36780: 82 19 28                 a2 = u64 [sp + 0x28]
 36783: c9 98 09                 a2 = a1 - a2
 36786: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 36796: d3 89 0a                 a3 = a2 ^ a1
 36799: e1 6a 0a                 a3 = a3 | ~s1
 36802: 51 0a 10 01              jump @2536 if a3 == 0
      :                          @2526
 36806: ce 67 07                 a0 = a0 %s s1
 36809: ce 69 09                 a2 = a2 %s s1
 36812: 99 9a 3f                 a3 = a2 >>a 0x3f
 36815: 82 1b 20                 a4 = u64 [sp + 0x20]
 36818: d2 ba 0a                 a3 = a3 & a4
 36821: c8 a9 09                 a2 = a2 + a3
 36824: ca 79 09                 a2 = a2 * a0
 36827: d3 89 07                 a0 = a2 ^ a1
 36830: e1 67 07                 a0 = a0 | ~s1
 36833: 51 07 f1 00              jump @2536 if a0 == 0
      :                          @2527
 36837: 82 55 10                 s0 = u64 [s0 + 0x10]
 36840: 51 05 eb 00              jump @2537 if s0 == 0
      :                          @2528
 36844: 82 17 18                 a0 = u64 [sp + 0x18]
 36847: ca 76 08                 a1 = s1 * a0
 36850: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 36860: d3 87 07                 a0 = a0 ^ a1
 36863: e1 57 07                 a0 = a0 | ~s0
 36866: 51 07 d0 00              jump @2536 if a0 == 0
      :                          @2529
 36870: 7b 19 10                 u64 [sp + 0x10] = a2
 36873: 7b 18                    u64 [sp] = a1
 36875: ce 58 08                 a1 = a1 %s s0
 36878: 9a 57                    a0 = -s0
 36880: e3 75 09                 a2 = maxs(s0, a0)
 36883: 99 87 3f                 a0 = a1 >>a 0x3f
 36886: 7b 19 08                 u64 [sp + 0x8] = a2
 36889: d2 97 07                 a0 = a0 & a2
 36892: c8 78 08                 a1 = a1 + a0
 36895: 95 17 38                 a0 = sp + 0x38
 36898: 64 59                    a2 = s0
 36900: 50 20 a8 02 08 fb        ra = 680, jump @2409
      :                          @2530 [@dyn 340]
 36906: 82 17 38                 a0 = u64 [sp + 0x38]
 36909: 52 17 01 a7 00           jump @2538 if a0 != 1
      :                          @2531
 36914: 82 17 40                 a0 = u64 [sp + 0x40]
 36917: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 36927: d3 97 08                 a1 = a0 ^ a2
 36930: e1 58 08                 a1 = a1 | ~s0
 36933: 51 08 8d 00              jump @2536 if a1 == 0
      :                          @2532
 36937: ce 57 08                 a1 = a0 %s s0
 36940: c8 58 08                 a1 = a1 + s0
 36943: d3 89 09                 a2 = a2 ^ a1
 36946: e1 59 07                 a0 = a2 | ~s0
 36949: 51 07 7d                 jump @2536 if a0 == 0
      :                          @2533
 36952: 82 17 10                 a0 = u64 [sp + 0x10]
 36955: ce 67 07                 a0 = a0 %s s1
 36958: 99 79 3f                 a2 = a0 >>a 0x3f
 36961: 82 1a 20                 a3 = u64 [sp + 0x20]
 36964: d2 a9 09                 a2 = a2 & a3
 36967: 82 1a 30                 a3 = u64 [sp + 0x30]
 36970: 82 aa 10                 a3 = u64 [a3 + 0x10]
 36973: c8 97 07                 a0 = a0 + a2
 36976: 82 19 18                 a2 = u64 [sp + 0x18]
 36979: ca 97 07                 a0 = a0 * a2
 36982: 82 19 28                 a2 = u64 [sp + 0x28]
 36985: c8 97 07                 a0 = a0 + a2
 36988: c9 7a 0a                 a3 = a3 - a0
 36991: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 37001: d3 9a 0b                 a4 = a3 ^ a2
 37004: e1 5b 0b                 a4 = a4 | ~s0
 37007: 51 0b 43                 jump @2536 if a4 == 0
      :                          @2534
 37010: ce 58 08                 a1 = a1 %s s0
 37013: ce 5a 0a                 a3 = a3 %s s0
 37016: 99 ab 3f                 a4 = a3 >>a 0x3f
 37019: 82 1c 08                 a5 = u64 [sp + 0x8]
 37022: d2 cb 0b                 a4 = a4 & a5
 37025: c8 ba 0a                 a3 = a3 + a4
 37028: ca 8a 08                 a1 = a3 * a1
 37031: d3 89 09                 a2 = a2 ^ a1
 37034: e1 59 09                 a2 = a2 | ~s0
 37037: 51 09 25                 jump @2536 if a2 == 0
      :                          @2535
 37040: ce 58 08                 a1 = a1 %s s0
 37043: 99 89 3f                 a2 = a1 >>a 0x3f
 37046: d2 c9 09                 a2 = a2 & a5
 37049: c8 98 08                 a1 = a1 + a2
 37052: 82 19                    a2 = u64 [sp]
 37054: ca 98 08                 a1 = a1 * a2
 37057: c8 87 07                 a0 = a0 + a1
 37060: 82 10 60                 ra = u64 [sp + 0x60]
 37063: 82 15 58                 s0 = u64 [sp + 0x58]
 37066: 82 16 50                 s1 = u64 [sp + 0x50]
 37069: 95 11 68                 sp = sp + 0x68
 37072: 32 00                    ret
      :                          @2536
 37074: 00                       trap
      :                          @2537
 37075: 00                       trap
      :                          @2538
 37076: 00                       trap
      :                          @2539
 37077: 82 95                    s0 = u64 [a2]
 37079: 95 5c 65                 a5 = s0 + 0x65
 37082: ac 5c 0a 01              jump @2558 if a5 <u s0
      :                          @2540
 37086: 95 ca 01                 a3 = a5 + 0x1
 37089: 88 ab 01                 a4 = a3 <u 0x1
 37092: d8 a8 0a                 a3 = a1 <u a3
 37095: d4 ba 0a                 a3 = a3 | a4
 37098: 52 0a fa 00              jump @2558 if a3 != 0
      :                          @2541
 37102: 82 9a                    a3 = u64 [a2]
 37104: ab 5a e5                 jump @2539 if a3 != s0
      :                          @2542
 37107: 7b 9c                    u64 [a2] = a5
 37109: 33 0b                    a4 = 0
 37111: 7b 17                    u64 [sp] = a0
 37113: 33 07 b0 02 03           a0 = 0x302b0
 37118: 7b 17 10                 u64 [sp + 0x10] = a0
 37121: 95 78 00 00 10           a1 = a0 + 0x100000
 37126: c9 c8 06                 s1 = a1 - a5
 37129: 33 08 01                 a1 = 0x1
 37132: 33 09 65                 a2 = 0x65
 37135: 64 67                    a0 = s1
 37137: 50 20 aa 02 fc 7a 02     ra = 682, jump @13689
      :                          @2543 [@dyn 341]
 37144: 33 0b 65                 a4 = 0x65
 37147: 64 63                    t1 = s1
 37149: 33 08                    a1 = 0
 37151: 49 11 18                 u64 [sp + 24] = 0
 37154: 33 07 08                 a0 = 0x8
 37157: 7b 17 20                 u64 [sp + 0x20] = a0
 37160: 49 11 28                 u64 [sp + 40] = 0
 37163: 82 1a 10                 a3 = u64 [sp + 0x10]
 37166: 95 a9 9f ff 0f           a2 = a3 + 0xfff9f
 37171: c9 59 06                 s1 = a2 - s0
 37174: 33 05 02                 s0 = 0x2
 37177: 33 0c 05                 a5 = 0x5
 37180: 33 02 64                 t0 = 0x64
 37183: 7b 13 08                 u64 [sp + 0x8] = t1
 37186: 28 10                    jump @2545
      :                          @2544
 37188: 95 55 01                 s0 = s0 + 0x1
 37191: 95 c9 02                 a2 = a5 + 0x2
 37194: c8 c6 06                 s1 = s1 + a5
 37197: 64 9c                    a5 = a2
 37199: aa b5 53                 jump @2552 if s0 == a4
      :                          @2545
 37202: c8 53 09                 a2 = t1 + s0
 37205: 7c 99                    a2 = u8 [a2]
 37207: 51 09 ed                 jump @2544 if a2 == 0
      :                          @2546
 37210: 82 19 18                 a2 = u64 [sp + 0x18]
 37213: ab 98 22                 jump @2549 if a1 != a2
      :                          @2547
 37216: 95 17 18                 a0 = sp + 0x18
 37219: 7b 1c 10                 u64 [sp + 0x10] = a5
 37222: 50 20 ac 02 a9 c1        ra = 684, jump @1581
      :                          @2548 [@dyn 342]
 37228: 82 1c 10                 a5 = u64 [sp + 0x10]
 37231: 33 02 64                 t0 = 0x64
 37234: 33 0b 65                 a4 = 0x65
 37237: 82 13 08                 t1 = u64 [sp + 0x8]
 37240: 82 18 28                 a1 = u64 [sp + 0x28]
 37243: 82 17 20                 a0 = u64 [sp + 0x20]
 37246: 01                       fallthrough
      :                          @2549
 37247: 97 89 03                 a2 = a1 << 0x3
 37250: c8 79 09                 a2 = a2 + a0
 37253: 7b 95                    u64 [a2] = s0
 37255: 95 88 01                 a1 = a1 + 0x1
 37258: ca 55 09                 a2 = s0 * s0
 37261: 7b 18 28                 u64 [sp + 0x28] = a1
 37264: 64 6a                    a3 = s1
 37266: ac 92 b2                 jump @2544 if t0 <u a2
      :                          @2550
 37269: 46 0a                    u8 [a3 + 0] = 0
 37271: c8 59 09                 a2 = a2 + s0
 37274: c8 5a 0a                 a3 = a3 + s0
 37277: ac b9 f8                 jump @2550 if a2 <u a4
      :                          @2551
 37280: 28 a4                    jump @2544
      :                          @2552
 37282: 82 17 28                 a0 = u64 [sp + 0x28]
 37285: 82 18 20                 a1 = u64 [sp + 0x20]
 37288: 82 19 18                 a2 = u64 [sp + 0x18]
 37291: 82 1a                    a3 = u64 [sp]
 37293: 7b a7 10                 u64 [a3 + 0x10] = a0
 37296: 7b a8 08                 u64 [a3 + 0x8] = a1
 37299: 7b a9                    u64 [a3] = a2
 37301: 33 07 b0 02 03           a0 = 0x302b0
 37306: 95 77 00 00 10           a0 = a0 + 0x100000
 37311: 01                       fallthrough
      :                          @2553
 37312: 82 78                    a1 = u64 [a0]
 37314: c9 87 09                 a2 = a0 - a1
 37317: ab 39 11                 jump @2557 if a2 != t1
      :                          @2554
 37320: 95 89 9b                 a2 = a1 + 0xffffffffffffff9b
 37323: 01                       fallthrough
      :                          @2555
 37324: 82 7a                    a3 = u64 [a0]
 37326: ab 8a f2                 jump @2553 if a3 != a1
      :                          @2556
 37329: 7b 79                    u64 [a0] = a2
 37331: 33 0b                    a4 = 0
 37333: 01                       fallthrough
      :                          @2557
 37334: 82 10 40                 ra = u64 [sp + 0x40]
 37337: 82 15 38                 s0 = u64 [sp + 0x38]
 37340: 82 16 30                 s1 = u64 [sp + 0x30]
 37343: 95 11 48                 sp = sp + 0x48
 37346: 32 00                    ret
      :                          @2558
 37348: 00                       trap
      :                          @2559
 37349: 51 07 41                 jump @2562 if a0 == 0
      :                          @2560
 37352: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 37355: 7b 10 08                 u64 [sp + 0x8] = ra
 37358: 7b 15                    u64 [sp] = s0
 37360: 64 75                    s0 = a0
 37362: 98 77 01                 a0 = a0 >> 0x1
 37365: 50 20 ae 02 f0           ra = 686, jump @2559
      :                          @2561 [@dyn 343]
 37370: 64 79                    a2 = a0
 37372: 97 87 01                 a0 = a1 << 0x1
 37375: c9 97 07                 a0 = a0 - a2
 37378: ca 97 07                 a0 = a0 * a2
 37381: ca 99 09                 a2 = a2 * a2
 37384: ca 88 08                 a1 = a1 * a1
 37387: c8 98 08                 a1 = a1 + a2
 37390: 84 55 01                 s0 = s0 & 0x1
 37393: 9a 59                    a2 = -s0
 37395: d2 79 09                 a2 = a2 & a0
 37398: db 58 07                 a0 = a1 if s0 != 0
 37401: c8 98 08                 a1 = a1 + a2
 37404: 82 10 08                 ra = u64 [sp + 0x8]
 37407: 82 15                    s0 = u64 [sp]
 37409: 95 11 10                 sp = sp + 0x10
 37412: 32 00                    ret
      :                          @2562
 37414: 33 08 01                 a1 = 0x1
 37417: 32 00                    ret
      :                          @2563
 37419: 51 07 44                 jump @2569 if a0 == 0
      :                          @2564
 37422: 33 0a 01                 a3 = 0x1
 37425: 33 09 02                 a2 = 0x2
 37428: 64 78                    a1 = a0
 37430: aa a7 2b                 jump @2568 if a0 == a3
      :                          @2565
 37433: 9a 7a 01                 a3 = 0x1 - a0
 37436: 33 02 02                 t0 = 0x2
 37439: 33 0b 02                 a4 = 0x2
 37442: 33 0c 02                 a5 = 0x2
 37445: 33 08 01                 a1 = 0x1
 37448: 01                       fallthrough
      :                          @2566
 37449: ca 8c 08                 a1 = a5 * a1
 37452: cb b8 08                 a1 = a1 /u a4
 37455: 95 bb 01                 a4 = a4 + 0x1
 37458: c8 ba 09                 a2 = a3 + a4
 37461: 95 cc 04                 a5 = a5 + 0x4
 37464: ab 29 f1                 jump @2566 if a2 != t0
      :                          @2567
 37467: 95 79 01                 a2 = a0 + 0x1
 37470: 51 09 18                 jump @2570 if a2 == 0
      :                          @2568
 37473: 97 77 02                 a0 = a0 << 0x2
 37476: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 37479: ca 78 07                 a0 = a1 * a0
 37482: cb 97 07                 a0 = a0 /u a2
 37485: 32 00                    ret
      :                          @2569
 37487: 33 07 01                 a0 = 0x1
 37490: 28 a9 12 02              jump @11967
      :                          @2570
 37494: 00                       trap
      :                          @2571
 37495: d6 a7 09                 a2 = a0 mulhu a3
 37498: 98 9b 04                 a4 = a2 >> 0x4
 37501: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37504: c8 b9 09                 a2 = a2 + a4
 37507: c8 37 07                 a0 = a0 + t1
 37510: c9 97 07                 a0 = a0 - a2
 37513: 01                       fallthrough
      :                          @2572
 37514: d6 a7 09                 a2 = a0 mulhu a3
 37517: 98 9b 04                 a4 = a2 >> 0x4
 37520: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37523: c8 b9 09                 a2 = a2 + a4
 37526: ca 82 0b                 a4 = t0 * a1
 37529: c8 b7 07                 a0 = a0 + a4
 37532: c9 97 07                 a0 = a0 - a2
 37535: d6 a7 09                 a2 = a0 mulhu a3
 37538: 98 9b 04                 a4 = a2 >> 0x4
 37541: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37544: c8 b9 09                 a2 = a2 + a4
 37547: c9 97 07                 a0 = a0 - a2
 37550: 95 00 01                 ra = ra + 0x1
 37553: 95 19 48                 a2 = sp + 0x48
 37556: c8 94 04                 t2 = t2 + a2
 37559: 7b 47                    u64 [t2] = a0
 37561: 51 10 08 38 02           jump @2603 if ra == 8
      :                          @2573
 37566: 97 04 03                 t2 = ra << 0x3
 37569: 51 00 27 02              jump @2602 if ra == 0
      :                          @2574
 37573: 33 07 01                 a0 = 0x1
 37576: 33 0b 09                 a4 = 0x9
 37579: 64 09                    a2 = ra
 37581: 28 0b                    jump @2576
      :                          @2575
 37583: 98 99 01                 a2 = a2 >> 0x1
 37586: ca bb 0b                 a4 = a4 * a4
 37589: 51 09 2c                 jump @2578 if a2 == 0
      :                          @2576
 37592: d6 ab 0c                 a5 = a4 mulhu a3
 37595: 98 c5 04                 s0 = a5 >> 0x4
 37598: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 37601: c8 5c 0c                 a5 = a5 + s0
 37604: 84 95 01                 s0 = a2 & 0x1
 37607: c9 cb 0b                 a4 = a4 - a5
 37610: 51 05 e5                 jump @2575 if s0 == 0
      :                          @2577
 37613: ca b7 07                 a0 = a0 * a4
 37616: d6 a7 0c                 a5 = a0 mulhu a3
 37619: 98 c5 04                 s0 = a5 >> 0x4
 37622: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 37625: c8 5c 0c                 a5 = a5 + s0
 37628: c9 c7 07                 a0 = a0 - a5
 37631: 28 d0                    jump @2575
      :                          @2578
 37633: 82 19 38                 a2 = u64 [sp + 0x38]
 37636: ca 97 07                 a0 = a0 * a2
 37639: 82 19 40                 a2 = u64 [sp + 0x40]
 37642: c8 97 07                 a0 = a0 + a2
 37645: 97 09 01                 a2 = ra << 0x1
 37648: 33 0c 01                 a5 = 0x1
 37651: 33 0b 09                 a4 = 0x9
 37654: 28 0b                    jump @2580
      :                          @2579
 37656: 98 99 01                 a2 = a2 >> 0x1
 37659: ca bb 0b                 a4 = a4 * a4
 37662: 51 09 2c                 jump @2582 if a2 == 0
      :                          @2580
 37665: d6 ab 05                 s0 = a4 mulhu a3
 37668: 98 56 04                 s1 = s0 >> 0x4
 37671: 84 55 f0                 s0 = s0 & 0xfffffffffffffff0
 37674: c8 65 05                 s0 = s0 + s1
 37677: 84 96 01                 s1 = a2 & 0x1
 37680: c9 5b 0b                 a4 = a4 - s0
 37683: 51 06 e5                 jump @2579 if s1 == 0
      :                          @2581
 37686: ca bc 0c                 a5 = a5 * a4
 37689: d6 ac 06                 s1 = a5 mulhu a3
 37692: 98 65 04                 s0 = s1 >> 0x4
 37695: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 37698: c8 65 05                 s0 = s0 + s1
 37701: c9 5c 0c                 a5 = a5 - s0
 37704: 28 d0                    jump @2579
      :                          @2582
 37706: d6 a7 09                 a2 = a0 mulhu a3
 37709: 98 9b 04                 a4 = a2 >> 0x4
 37712: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37715: c8 b9 09                 a2 = a2 + a4
 37718: 82 1b 30                 a4 = u64 [sp + 0x30]
 37721: ca bc 0b                 a4 = a5 * a4
 37724: c8 b7 07                 a0 = a0 + a4
 37727: c9 97 07                 a0 = a0 - a2
 37730: 97 09 01                 a2 = ra << 0x1
 37733: c8 09 09                 a2 = a2 + ra
 37736: 33 0c 01                 a5 = 0x1
 37739: 33 0b 09                 a4 = 0x9
 37742: 28 0b                    jump @2584
      :                          @2583
 37744: 98 99 01                 a2 = a2 >> 0x1
 37747: ca bb 0b                 a4 = a4 * a4
 37750: 51 09 2c                 jump @2586 if a2 == 0
      :                          @2584
 37753: d6 ab 06                 s1 = a4 mulhu a3
 37756: 98 65 04                 s0 = s1 >> 0x4
 37759: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 37762: c8 65 05                 s0 = s0 + s1
 37765: 84 96 01                 s1 = a2 & 0x1
 37768: c9 5b 0b                 a4 = a4 - s0
 37771: 51 06 e5                 jump @2583 if s1 == 0
      :                          @2585
 37774: ca bc 0c                 a5 = a5 * a4
 37777: d6 ac 06                 s1 = a5 mulhu a3
 37780: 98 65 04                 s0 = s1 >> 0x4
 37783: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 37786: c8 65 05                 s0 = s0 + s1
 37789: c9 5c 0c                 a5 = a5 - s0
 37792: 28 d0                    jump @2583
      :                          @2586
 37794: d6 a7 09                 a2 = a0 mulhu a3
 37797: 98 9b 04                 a4 = a2 >> 0x4
 37800: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37803: c8 b9 09                 a2 = a2 + a4
 37806: 82 1b 28                 a4 = u64 [sp + 0x28]
 37809: ca bc 0b                 a4 = a5 * a4
 37812: c8 b7 07                 a0 = a0 + a4
 37815: c9 97 07                 a0 = a0 - a2
 37818: 97 09 02                 a2 = ra << 0x2
 37821: 33 0c 01                 a5 = 0x1
 37824: 33 0b 09                 a4 = 0x9
 37827: 28 0b                    jump @2588
      :                          @2587
 37829: 98 99 01                 a2 = a2 >> 0x1
 37832: ca bb 0b                 a4 = a4 * a4
 37835: 51 09 2c                 jump @2590 if a2 == 0
      :                          @2588
 37838: d6 ab 06                 s1 = a4 mulhu a3
 37841: 98 65 04                 s0 = s1 >> 0x4
 37844: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 37847: c8 65 05                 s0 = s0 + s1
 37850: 84 96 01                 s1 = a2 & 0x1
 37853: c9 5b 0b                 a4 = a4 - s0
 37856: 51 06 e5                 jump @2587 if s1 == 0
      :                          @2589
 37859: ca bc 0c                 a5 = a5 * a4
 37862: d6 ac 06                 s1 = a5 mulhu a3
 37865: 98 65 04                 s0 = s1 >> 0x4
 37868: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 37871: c8 65 05                 s0 = s0 + s1
 37874: c9 5c 0c                 a5 = a5 - s0
 37877: 28 d0                    jump @2587
      :                          @2590
 37879: d6 a7 09                 a2 = a0 mulhu a3
 37882: 98 9b 04                 a4 = a2 >> 0x4
 37885: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37888: c8 b9 09                 a2 = a2 + a4
 37891: 82 1b 20                 a4 = u64 [sp + 0x20]
 37894: ca bc 0b                 a4 = a5 * a4
 37897: c8 b7 07                 a0 = a0 + a4
 37900: c9 97 07                 a0 = a0 - a2
 37903: 97 09 02                 a2 = ra << 0x2
 37906: c8 09 09                 a2 = a2 + ra
 37909: 33 0c 01                 a5 = 0x1
 37912: 33 0b 09                 a4 = 0x9
 37915: 28 0b                    jump @2592
      :                          @2591
 37917: 98 99 01                 a2 = a2 >> 0x1
 37920: ca bb 0b                 a4 = a4 * a4
 37923: 51 09 2c                 jump @2594 if a2 == 0
      :                          @2592
 37926: d6 ab 06                 s1 = a4 mulhu a3
 37929: 98 65 04                 s0 = s1 >> 0x4
 37932: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 37935: c8 65 05                 s0 = s0 + s1
 37938: 84 96 01                 s1 = a2 & 0x1
 37941: c9 5b 0b                 a4 = a4 - s0
 37944: 51 06 e5                 jump @2591 if s1 == 0
      :                          @2593
 37947: ca bc 0c                 a5 = a5 * a4
 37950: d6 ac 06                 s1 = a5 mulhu a3
 37953: 98 65 04                 s0 = s1 >> 0x4
 37956: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 37959: c8 65 05                 s0 = s0 + s1
 37962: c9 5c 0c                 a5 = a5 - s0
 37965: 28 d0                    jump @2591
      :                          @2594
 37967: d6 a7 09                 a2 = a0 mulhu a3
 37970: 98 9b 04                 a4 = a2 >> 0x4
 37973: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37976: c8 b9 09                 a2 = a2 + a4
 37979: 82 1b 18                 a4 = u64 [sp + 0x18]
 37982: ca bc 0b                 a4 = a5 * a4
 37985: c8 b7 07                 a0 = a0 + a4
 37988: c9 97 07                 a0 = a0 - a2
 37991: 96 09 06                 a2 = ra * 0x6
 37994: 33 0c 01                 a5 = 0x1
 37997: 33 0b 09                 a4 = 0x9
 38000: 28 0b                    jump @2596
      :                          @2595
 38002: 98 99 01                 a2 = a2 >> 0x1
 38005: ca bb 0b                 a4 = a4 * a4
 38008: 51 09 2c                 jump @2598 if a2 == 0
      :                          @2596
 38011: d6 ab 06                 s1 = a4 mulhu a3
 38014: 98 65 04                 s0 = s1 >> 0x4
 38017: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 38020: c8 65 05                 s0 = s0 + s1
 38023: 84 96 01                 s1 = a2 & 0x1
 38026: c9 5b 0b                 a4 = a4 - s0
 38029: 51 06 e5                 jump @2595 if s1 == 0
      :                          @2597
 38032: ca bc 0c                 a5 = a5 * a4
 38035: d6 ac 06                 s1 = a5 mulhu a3
 38038: 98 65 04                 s0 = s1 >> 0x4
 38041: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 38044: c8 65 05                 s0 = s0 + s1
 38047: c9 5c 0c                 a5 = a5 - s0
 38050: 28 d0                    jump @2595
      :                          @2598
 38052: 82 19 10                 a2 = u64 [sp + 0x10]
 38055: ca 9c 03                 t1 = a5 * a2
 38058: c9 04 09                 a2 = t2 - ra
 38061: 33 02 01                 t0 = 0x1
 38064: 33 0b 09                 a4 = 0x9
 38067: 28 0c                    jump @2600
      :                          @2599
 38069: 98 99 01                 a2 = a2 >> 0x1
 38072: ca bb 0b                 a4 = a4 * a4
 38075: 51 09 bc fd              jump @2571 if a2 == 0
      :                          @2600
 38079: d6 ab 0c                 a5 = a4 mulhu a3
 38082: 98 c5 04                 s0 = a5 >> 0x4
 38085: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 38088: c8 5c 0c                 a5 = a5 + s0
 38091: 84 95 01                 s0 = a2 & 0x1
 38094: c9 cb 0b                 a4 = a4 - a5
 38097: 51 05 e4                 jump @2599 if s0 == 0
      :                          @2601
 38100: ca b2 0c                 a5 = t0 * a4
 38103: d6 ac 06                 s1 = a5 mulhu a3
 38106: 98 65 04                 s0 = s1 >> 0x4
 38109: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 38112: c8 65 05                 s0 = s0 + s1
 38115: c9 5c 02                 t0 = a5 - s0
 38118: 28 cf                    jump @2599
      :                          @2602
 38120: 33 02 01                 t0 = 0x1
 38123: 82 17 08                 a0 = u64 [sp + 0x8]
 38126: 28 9c fd                 jump @2572
      :                          @2603
 38129: 82 17 80 00              a0 = u64 [sp + 0x80]
 38133: 82 18 78                 a1 = u64 [sp + 0x78]
 38136: 82 19 70                 a2 = u64 [sp + 0x70]
 38139: 82 1a 68                 a3 = u64 [sp + 0x68]
 38142: 82 1b                    a4 = u64 [sp]
 38144: 7b b7 38                 u64 [a4 + 0x38] = a0
 38147: 7b b8 30                 u64 [a4 + 0x30] = a1
 38150: 7b b9 28                 u64 [a4 + 0x28] = a2
 38153: 7b ba 20                 u64 [a4 + 0x20] = a3
 38156: 82 17 60                 a0 = u64 [sp + 0x60]
 38159: 82 18 58                 a1 = u64 [sp + 0x58]
 38162: 82 19 50                 a2 = u64 [sp + 0x50]
 38165: 82 1a 48                 a3 = u64 [sp + 0x48]
 38168: 7b b7 18                 u64 [a4 + 0x18] = a0
 38171: 7b b8 10                 u64 [a4 + 0x10] = a1
 38174: 7b b9 08                 u64 [a4 + 0x8] = a2
 38177: 7b ba                    u64 [a4] = a3
 38179: 82 10 98 00              ra = u64 [sp + 0x98]
 38183: 82 15 90 00              s0 = u64 [sp + 0x90]
 38187: 82 16 88 00              s1 = u64 [sp + 0x88]
 38191: 95 11 a0 00              sp = sp + 0xa0
 38195: 32 00                    ret
      :                          @2604
 38197: 51 08 9a 00              jump @2608 if a1 == 0
      :                          @2605
 38201: 33 0a ff                 a3 = 0xffffffffffffffff
 38204: 33 09 20 83 b8 ed        a2 = 0xffffffffedb88320
 38210: 01                       fallthrough
      :                          @2606
 38211: 7c 7b                    a4 = u8 [a0]
 38213: d3 ba 0a                 a3 = a3 ^ a4
 38216: 97 ab 3f                 a4 = a3 << 0x3f
 38219: 99 bb 3f                 a4 = a4 >>a 0x3f
 38222: 8b aa 01                 i32 a3 = a3 >> 0x1
 38225: d2 9b 0b                 a4 = a4 & a2
 38228: d3 ba 0a                 a3 = a3 ^ a4
 38231: 97 ab 3f                 a4 = a3 << 0x3f
 38234: 99 bb 3f                 a4 = a4 >>a 0x3f
 38237: 8b aa 01                 i32 a3 = a3 >> 0x1
 38240: d2 9b 0b                 a4 = a4 & a2
 38243: d3 ba 0a                 a3 = a3 ^ a4
 38246: 97 ab 3f                 a4 = a3 << 0x3f
 38249: 99 bb 3f                 a4 = a4 >>a 0x3f
 38252: 8b aa 01                 i32 a3 = a3 >> 0x1
 38255: d2 9b 0b                 a4 = a4 & a2
 38258: d3 ba 0a                 a3 = a3 ^ a4
 38261: 97 ab 3f                 a4 = a3 << 0x3f
 38264: 99 bb 3f                 a4 = a4 >>a 0x3f
 38267: 8b aa 01                 i32 a3 = a3 >> 0x1
 38270: d2 9b 0b                 a4 = a4 & a2
 38273: d3 ba 0a                 a3 = a3 ^ a4
 38276: 97 ab 3f                 a4 = a3 << 0x3f
 38279: 99 bb 3f                 a4 = a4 >>a 0x3f
 38282: 8b aa 01                 i32 a3 = a3 >> 0x1
 38285: d2 9b 0b                 a4 = a4 & a2
 38288: d3 ba 0a                 a3 = a3 ^ a4
 38291: 97 ab 3f                 a4 = a3 << 0x3f
 38294: 99 bb 3f                 a4 = a4 >>a 0x3f
 38297: 8b aa 01                 i32 a3 = a3 >> 0x1
 38300: d2 9b 0b                 a4 = a4 & a2
 38303: d3 ba 0a                 a3 = a3 ^ a4
 38306: 97 ab 3f                 a4 = a3 << 0x3f
 38309: 99 bb 3f                 a4 = a4 >>a 0x3f
 38312: 8b aa 01                 i32 a3 = a3 >> 0x1
 38315: d2 9b 0b                 a4 = a4 & a2
 38318: d3 ba 0a                 a3 = a3 ^ a4
 38321: 97 ab 3f                 a4 = a3 << 0x3f
 38324: 99 bb 3f                 a4 = a4 >>a 0x3f
 38327: 8b aa 01                 i32 a3 = a3 >> 0x1
 38330: d2 9b 0b                 a4 = a4 & a2
 38333: d3 ba 0a                 a3 = a3 ^ a4
 38336: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 38339: 95 77 01                 a0 = a0 + 0x1
 38342: 52 08 7d ff              jump @2606 if a1 != 0
      :                          @2607
 38346: 85 a7 ff                 a0 = a3 ^ 0xffffffffffffffff
 38349: 32 00                    ret
      :                          @2608
 38351: 33 07                    a0 = 0
 38353: 28 15 54 02              jump @13006
      :                          @2609
 38357: 84 78 01                 a1 = a0 & 0x1
 38360: 52 08 1a                 jump @2614 if a1 != 0
      :                          @2610
 38363: 64 79                    a2 = a0
 38365: 01                       fallthrough
      :                          @2611
 38366: 64 98                    a1 = a2
 38368: 84 9a 01                 a3 = a2 & 0x1
 38371: 98 99 01                 a2 = a2 >> 0x1
 38374: 51 0a f8                 jump @2611 if a3 == 0
      :                          @2612
 38377: 98 77 01                 a0 = a0 >> 0x1
 38380: 53 18 09 0c              jump @2615 if a1 <u 9
      :                          @2613
 38384: 28 1b                    jump @2618
      :                          @2614
 38386: 64 78                    a1 = a0
 38388: 55 17 09 17              jump @2618 if a0 >=u 9
      :                          @2615
 38392: 33 09 01                 a2 = 0x1
 38395: ae 89 0e                 jump @2617 if a2 >=u a1
      :                          @2616
 38398: cb 87 07                 a0 = a0 /u a1
 38401: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 38404: ca 87 07                 a0 = a0 * a1
 38407: 32 00                    ret
      :                          @2617
 38409: 32 00                    ret
      :                          @2618
 38411: 33 09 03                 a2 = 0x3
 38414: 28 0b                    jump @2620
      :                          @2619
 38416: 95 99 02                 a2 = a2 + 0x2
 38419: ca 99 0a                 a3 = a2 * a2
 38422: ac a8 e2                 jump @2615 if a1 <u a3
      :                          @2620
 38425: 51 09 1e                 jump @2625 if a2 == 0
      :                          @2621
 38428: cd 98 0a                 a3 = a1 %u a2
 38431: 52 0a f1                 jump @2619 if a3 != 0
      :                          @2622
 38434: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 38437: 01                       fallthrough
      :                          @2623
 38438: cb 98 08                 a1 = a1 /u a2
 38441: cd 98 0b                 a4 = a1 %u a2
 38444: 51 0b fa                 jump @2623 if a4 == 0
      :                          @2624
 38447: cb 97 07                 a0 = a0 /u a2
 38450: ca a7 07                 a0 = a0 * a3
 38453: 28 db                    jump @2619
      :                          @2625
 38455: 00                       trap
      :                          @2626
 38456: 82 6a                    a3 = u64 [s1]
 38458: c8 9a 05                 s0 = a3 + a2
 38461: ac a5 66 02              jump @2668 if s0 <u a3
      :                          @2627
 38465: 95 5b 01                 a4 = s0 + 0x1
 38468: 88 bc 01                 a5 = a4 <u 0x1
 38471: d8 b2 0b                 a4 = t0 <u a4
 38474: d4 cb 0b                 a4 = a4 | a5
 38477: 52 0b 56 02              jump @2668 if a4 != 0
      :                          @2628
 38481: 82 6b                    a4 = u64 [s1]
 38483: ab ab e5                 jump @2626 if a4 != a3
      :                          @2629
 38486: 7b 65                    u64 [s1] = s0
 38488: 33 0c                    a5 = 0
 38490: 7b 18 18                 u64 [sp + 0x18] = a1
 38493: 7b 17                    u64 [sp] = a0
 38495: 33 06 b0 02 03           s1 = 0x302b0
 38500: 95 68 00 00 10           a1 = s1 + 0x100000
 38505: c9 58 07                 a0 = a1 - s0
 38508: 7b 17 10                 u64 [sp + 0x10] = a0
 38511: 33 08                    a1 = 0
 38513: 64 95                    s0 = a2
 38515: 50 20 b0 02 9a 75 02     ra = 688, jump @13689
      :                          @2630 [@dyn 344]
 38522: 33 03 00 00 10           t1 = 0x100000
 38527: 64 62                    t0 = s1
 38529: 49 11 40                 u64 [sp + 64] = 0
 38532: 49 11 48 08              u64 [sp + 72] = 0x8
 38536: 49 11 50                 u64 [sp + 80] = 0
 38539: 7b 15 08                 u64 [sp + 0x8] = s0
 38542: 97 59 03                 a2 = s0 << 0x3
 38545: c8 36 07                 a0 = s1 + t1
 38548: 01                       fallthrough
      :                          @2631
 38549: 82 78                    a1 = u64 [a0]
 38551: c8 98 0a                 a3 = a1 + a2
 38554: ac 8a 09 02              jump @2668 if a3 <u a1
      :                          @2632
 38558: 95 ab 08                 a4 = a3 + 0x8
 38561: d8 ab 0c                 a5 = a4 <u a3
 38564: d8 b3 0b                 a4 = t1 <u a4
 38567: d4 cb 0b                 a4 = a4 | a5
 38570: 52 0b f9 01              jump @2668 if a4 != 0
      :                          @2633
 38574: c9 a2 0b                 a4 = t0 - a3
 38577: c8 3b 0b                 a4 = a4 + t1
 38580: 84 bc 07                 a5 = a4 & 0x7
 38583: c8 ca 0a                 a3 = a3 + a5
 38586: 01                       fallthrough
      :                          @2634
 38587: 82 76                    s1 = u64 [a0]
 38589: ab 86 d8                 jump @2631 if s1 != a1
      :                          @2635
 38592: 7b 7a                    u64 [a0] = a3
 38594: 33 05                    s0 = 0
 38596: c9 cb 07                 a0 = a4 - a5
 38599: 7b 17 38                 u64 [sp + 0x38] = a0
 38602: 33 08                    a1 = 0
 38604: 50 20 b2 02 41 75 02     ra = 690, jump @13689
      :                          @2636 [@dyn 345]
 38611: 82 19 08                 a2 = u64 [sp + 0x8]
 38614: 97 99 02                 a2 = a2 << 0x2
 38617: 33 07 b0 02 03           a0 = 0x302b0
 38622: 33 03 b0 02 03           t1 = 0x302b0
 38627: 33 02 00 00 10           t0 = 0x100000
 38632: c8 23 0a                 a3 = t1 + t0
 38635: 01                       fallthrough
      :                          @2637
 38636: 82 ab                    a4 = u64 [a3]
 38638: c8 9b 0c                 a5 = a4 + a2
 38641: ac bc b2 01              jump @2668 if a5 <u a4
      :                          @2638
 38645: 95 c8 04                 a1 = a5 + 0x4
 38648: d8 c8 06                 s1 = a1 <u a5
 38651: d8 82 08                 a1 = t0 <u a1
 38654: d4 68 08                 a1 = a1 | s1
 38657: 52 08 a2 01              jump @2668 if a1 != 0
      :                          @2639
 38661: c9 c3 06                 s1 = t1 - a5
 38664: c8 26 06                 s1 = s1 + t0
 38667: 84 68 03                 a1 = s1 & 0x3
 38670: c8 8c 0c                 a5 = a5 + a1
 38673: 01                       fallthrough
      :                          @2640
 38674: 82 a5                    s0 = u64 [a3]
 38676: ab b5 d8                 jump @2637 if s0 != a4
      :                          @2641
 38679: 7b ac                    u64 [a3] = a5
 38681: c9 86 06                 s1 = s1 - a1
 38684: 64 67                    a0 = s1
 38686: 33 08                    a1 = 0
 38688: 50 20 b4 02 ed 74 02     ra = 692, jump @13689
      :                          @2642 [@dyn 346]
 38695: 82 17 38                 a0 = u64 [sp + 0x38]
 38698: 49 17 08 01              u64 [a0 + 8] = 0x1
 38702: 33 02 02                 t0 = 0x2
 38705: 7b 16 30                 u64 [sp + 0x30] = s1
 38708: 48 16 04 01              u32 [s1 + 4] = 0x1
 38712: 82 14 18                 t2 = u64 [sp + 0x18]
 38715: 82 10 10                 ra = u64 [sp + 0x10]
 38718: ae 24 60                 jump @2649 if t2 >=u t0
      :                          @2643
 38721: 82 17 50                 a0 = u64 [sp + 0x50]
 38724: 82 18 48                 a1 = u64 [sp + 0x48]
 38727: 82 19 40                 a2 = u64 [sp + 0x40]
 38730: 82 1a                    a3 = u64 [sp]
 38732: 7b a7 10                 u64 [a3 + 0x10] = a0
 38735: 7b a8 08                 u64 [a3 + 0x8] = a1
 38738: 7b a9                    u64 [a3] = a2
 38740: 82 1c 08                 a5 = u64 [sp + 0x8]
 38743: 7b ac 18                 u64 [a3 + 0x18] = a5
 38746: 82 17 38                 a0 = u64 [sp + 0x38]
 38749: 7b a7 20                 u64 [a3 + 0x20] = a0
 38752: 7b ac 28                 u64 [a3 + 0x28] = a5
 38755: 7b ac 30                 u64 [a3 + 0x30] = a5
 38758: 82 17 30                 a0 = u64 [sp + 0x30]
 38761: 7b a7 38                 u64 [a3 + 0x38] = a0
 38764: 7b ac 40                 u64 [a3 + 0x40] = a5
 38767: 33 07 b0 02 03           a0 = 0x302b0
 38772: 95 77 00 00 10           a0 = a0 + 0x100000
 38777: 01                       fallthrough
      :                          @2644
 38778: 82 78                    a1 = u64 [a0]
 38780: c9 87 09                 a2 = a0 - a1
 38783: ab 09 11                 jump @2648 if a2 != ra
      :                          @2645
 38786: c9 c8 09                 a2 = a1 - a5
 38789: 01                       fallthrough
      :                          @2646
 38790: 82 7a                    a3 = u64 [a0]
 38792: ab 8a f2                 jump @2644 if a3 != a1
      :                          @2647
 38795: 7b 79                    u64 [a0] = a2
 38797: 33 0b                    a4 = 0
 38799: 01                       fallthrough
      :                          @2648
 38800: 82 10 68                 ra = u64 [sp + 0x68]
 38803: 82 15 60                 s0 = u64 [sp + 0x60]
 38806: 82 16 58                 s1 = u64 [sp + 0x58]
 38809: 95 11 70                 sp = sp + 0x70
 38812: 32 00                    ret
      :                          @2649
 38814: 33 08                    a1 = 0
 38816: 33 09 08                 a2 = 0x8
 38819: 28 34                    jump @2652
      :                          @2650
 38821: 82 37                    a0 = u64 [t1]
 38823: 97 5a 03                 a3 = s0 << 0x3
 38826: 82 19 38                 a2 = u64 [sp + 0x38]
 38829: c8 9a 0a                 a3 = a3 + a2
 38832: ca 67 07                 a0 = a0 * s1
 38835: 7b a7                    u64 [a3] = a0
 38837: 97 59 02                 a2 = s0 << 0x2
 38840: 82 17 30                 a0 = u64 [sp + 0x30]
 38843: c8 79 09                 a2 = a2 + a0
 38846: 48 09                    u32 [a2 + 0] = 0
 38848: 01                       fallthrough
      :                          @2651
 38849: d8 42 07                 a0 = t0 <u t2
 38852: c8 72 02                 t0 = t0 + a0
 38855: d8 24 09                 a2 = t2 <u t0
 38858: 85 99 01                 a2 = a2 ^ 0x1
 38861: d2 97 07                 a0 = a0 & a2
 38864: 82 19 20                 a2 = u64 [sp + 0x20]
 38867: 51 07 6e ff              jump @2643 if a0 == 0
      :                          @2652
 38871: ac 24 cb 00              jump @2667 if t2 <u t0
      :                          @2653
 38875: c8 20 07                 a0 = ra + t0
 38878: 7c 77                    a0 = u8 [a0]
 38880: 7b 12 28                 u64 [sp + 0x28] = t0
 38883: 51 07 0b                 jump @2656 if a0 == 0
      :                          @2654
 38886: 7b 19 20                 u64 [sp + 0x20] = a2
 38889: 52 08 55                 jump @2660 if a1 != 0
      :                          @2655
 38892: 28 d5                    jump @2651
      :                          @2656
 38894: 82 17 40                 a0 = u64 [sp + 0x40]
 38897: ab 78 1c                 jump @2659 if a1 != a0
      :                          @2657
 38900: 95 17 40                 a0 = sp + 0x40
 38903: 50 20 b6 02 18 bb        ra = 694, jump @1581
      :                          @2658 [@dyn 347]
 38909: 82 12 28                 t0 = u64 [sp + 0x28]
 38912: 82 10 10                 ra = u64 [sp + 0x10]
 38915: 82 14 18                 t2 = u64 [sp + 0x18]
 38918: 82 18 50                 a1 = u64 [sp + 0x50]
 38921: 82 19 48                 a2 = u64 [sp + 0x48]
 38924: 01                       fallthrough
      :                          @2659
 38925: 97 87 03                 a0 = a1 << 0x3
 38928: c8 97 07                 a0 = a0 + a2
 38931: 7b 72                    u64 [a0] = t0
 38933: 95 88 01                 a1 = a1 + 0x1
 38936: 7b 18 50                 u64 [sp + 0x50] = a1
 38939: 95 27 ff                 a0 = t0 + 0xffffffffffffffff
 38942: 97 29 03                 a2 = t0 << 0x3
 38945: 82 1a 38                 a3 = u64 [sp + 0x38]
 38948: c8 a9 09                 a2 = a2 + a3
 38951: 7b 97                    u64 [a2] = a0
 38953: 82 17 48                 a0 = u64 [sp + 0x48]
 38956: 7b 17 20                 u64 [sp + 0x20] = a0
 38959: 97 27 02                 a0 = t0 << 0x2
 38962: 82 19 30                 a2 = u64 [sp + 0x30]
 38965: c8 97 07                 a0 = a0 + a2
 38968: 48 07 ff                 u32 [a0 + 0] = 0xffffffffffffffff
 38971: 51 08 86                 jump @2651 if a1 == 0
      :                          @2660
 38974: 97 29 03                 a2 = t0 << 0x3
 38977: 82 13 38                 t1 = u64 [sp + 0x38]
 38980: c8 93 03                 t1 = t1 + a2
 38983: 97 2a 02                 a3 = t0 << 0x2
 38986: 82 17 30                 a0 = u64 [sp + 0x30]
 38989: c8 7a 0a                 a3 = a3 + a0
 38992: 97 8b 03                 a4 = a1 << 0x3
 38995: 82 1c 20                 a5 = u64 [sp + 0x20]
 38998: 01                       fallthrough
      :                          @2661
 38999: 82 c6                    s1 = u64 [a5]
 39001: ca 26 05                 s0 = s1 * t0
 39004: ac 54 65 ff              jump @2651 if t2 <u s0
      :                          @2662
 39008: c8 50 07                 a0 = ra + s0
 39011: 46 07 01                 u8 [a0 + 0] = 0x1
 39014: 51 06 3b                 jump @2666 if s1 == 0
      :                          @2663
 39017: cd 62 07                 a0 = t0 %u s1
 39020: 51 07 39 ff              jump @2650 if a0 == 0
      :                          @2664
 39024: 82 37                    a0 = u64 [t1]
 39026: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 39029: 97 59 03                 a2 = s0 << 0x3
 39032: 82 12 38                 t0 = u64 [sp + 0x38]
 39035: c8 29 09                 a2 = a2 + t0
 39038: 82 12 28                 t0 = u64 [sp + 0x28]
 39041: ca 67 07                 a0 = a0 * s1
 39044: 7b 97                    u64 [a2] = a0
 39046: 81 a7                    a0 = i32 [a3]
 39048: 95 cc 08                 a5 = a5 + 0x8
 39051: 97 55 02                 s0 = s0 << 0x2
 39054: 82 19 30                 a2 = u64 [sp + 0x30]
 39057: c8 95 05                 s0 = s0 + a2
 39060: 8d 77                    i32 a0 = -a0
 39062: 95 bb f8                 a4 = a4 + 0xfffffffffffffff8
 39065: 7a 57                    u32 [s0] = a0
 39067: 52 0b bc                 jump @2661 if a4 != 0
      :                          @2665
 39070: 28 23 ff                 jump @2651
      :                          @2666
 39073: 00                       trap
      :                          @2667
 39074: 00                       trap
      :                          @2668
 39075: 00                       trap
      :                          @2669
 39076: 33 02 01                 t0 = 0x1
 39079: 55 17 04 16              jump @2672 if a0 >=u 4
      :                          @2670
 39083: 33 09 01                 a2 = 0x1
 39086: 01                       fallthrough
      :                          @2671
 39087: 88 7a 02                 a3 = a0 <u 0x2
 39090: 95 77 01                 a0 = a0 + 0x1
 39093: da a7 02                 t0 = a0 if a3 == 0
 39096: ca 92 07                 a0 = t0 * a2
 39099: 32 00                    ret
      :                          @2672
 39101: 33 0a 02                 a3 = 0x2
 39104: 33 09 01                 a2 = 0x1
 39107: 28 14                    jump @2674
      :                          @2673
 39109: 95 a8 fe                 a1 = a3 + 0xfffffffffffffffe
 39112: 88 88 01                 a1 = a1 <u 0x1
 39115: c9 8a 0a                 a3 = a3 - a1
 39118: 95 aa 02                 a3 = a3 + 0x2
 39121: ca aa 08                 a1 = a3 * a3
 39124: ac 87 db                 jump @2671 if a0 <u a1
      :                          @2674
 39127: 51 0a 24                 jump @2679 if a3 == 0
      :                          @2675
 39130: cd a7 0b                 a4 = a0 %u a3
 39133: 52 0b e8                 jump @2673 if a4 != 0
      :                          @2676
 39136: 33 0b 01                 a4 = 0x1
 39139: 33 0c 01                 a5 = 0x1
 39142: 01                       fallthrough
      :                          @2677
 39143: cb a7 07                 a0 = a0 /u a3
 39146: ca ac 0c                 a5 = a5 * a3
 39149: cd a7 08                 a1 = a0 %u a3
 39152: c8 cb 0b                 a4 = a4 + a5
 39155: 51 08 f4                 jump @2677 if a1 == 0
      :                          @2678
 39158: ca 9b 09                 a2 = a4 * a2
 39161: 28 cc                    jump @2673
      :                          @2679
 39163: 00                       trap
      :                          @2680
 39164: 33 09 04                 a2 = 0x4
 39167: 33 08 01                 a1 = 0x1
 39170: ae 97 0e                 jump @2682 if a0 >=u a2
      :                          @2681
 39173: 88 77 02                 a0 = a0 <u 0x2
 39176: 85 77 01                 a0 = a0 ^ 0x1
 39179: cf 78 07                 a0 = a1 << a0
 39182: 32 00                    ret
      :                          @2682
 39184: 33 09 02                 a2 = 0x2
 39187: 33 08 01                 a1 = 0x1
 39190: 28 14                    jump @2684
      :                          @2683
 39192: 95 9a fe                 a3 = a2 + 0xfffffffffffffffe
 39195: 88 aa 01                 a3 = a3 <u 0x1
 39198: c9 a9 09                 a2 = a2 - a3
 39201: 95 99 02                 a2 = a2 + 0x2
 39204: ca 99 0a                 a3 = a2 * a2
 39207: ac a7 de                 jump @2681 if a0 <u a3
      :                          @2684
 39210: 51 09 21                 jump @2689 if a2 == 0
      :                          @2685
 39213: cd 97 0a                 a3 = a0 %u a2
 39216: 52 0a e8                 jump @2683 if a3 != 0
      :                          @2686
 39219: 33 0a ff                 a3 = 0xffffffffffffffff
 39222: 01                       fallthrough
      :                          @2687
 39223: cb 97 07                 a0 = a0 /u a2
 39226: cd 97 0b                 a4 = a0 %u a2
 39229: 95 aa 01                 a3 = a3 + 0x1
 39232: 51 0b f7                 jump @2687 if a4 == 0
      :                          @2688
 39235: 95 aa 02                 a3 = a3 + 0x2
 39238: ca 8a 08                 a1 = a3 * a1
 39241: 28 cf                    jump @2683
      :                          @2689
 39243: 00                       trap
      :                          @2690
 39244: 33 08 01                 a1 = 0x1
 39247: 55 17 04 13              jump @2694 if a0 >=u 4
      :                          @2691
 39251: 64 7a                    a3 = a0
 39253: 01                       fallthrough
      :                          @2692
 39254: 88 a9 02                 a2 = a3 <u 0x2
 39257: 9a 87                    a0 = -a1
 39259: db 98 07                 a0 = a1 if a2 != 0
 39262: 32 00                    ret
      :                          @2693
 39264: 32 00                    ret
      :                          @2694
 39266: 33 09 02                 a2 = 0x2
 39269: 33 08 01                 a1 = 0x1
 39272: 28 17                    jump @2697
      :                          @2695
 39274: 64 7a                    a3 = a0
 39276: 01                       fallthrough
      :                          @2696
 39277: 95 9b fe                 a4 = a2 + 0xfffffffffffffffe
 39280: 88 bb 01                 a4 = a4 <u 0x1
 39283: c9 b9 09                 a2 = a2 - a4
 39286: 95 99 02                 a2 = a2 + 0x2
 39289: ca 99 0b                 a4 = a2 * a2
 39292: ac ba da                 jump @2692 if a3 <u a4
      :                          @2697
 39295: 51 09 18                 jump @2701 if a2 == 0
      :                          @2698
 39298: cb 97 0a                 a3 = a0 /u a2
 39301: ca 9a 0b                 a4 = a3 * a2
 39304: ab b7 e2                 jump @2695 if a0 != a4
      :                          @2699
 39307: cd 9a 07                 a0 = a3 %u a2
 39310: 51 07 d2                 jump @2693 if a0 == 0
      :                          @2700
 39313: 9a 88                    a1 = -a1
 39315: 64 a7                    a0 = a3
 39317: 28 d8                    jump @2696
      :                          @2701
 39319: 00                       trap
      :                          @2702
 39320: 82 9a                    a3 = u64 [a2]
 39322: c8 6a 05                 s0 = a3 + s1
 39325: ac a5 fc 01              jump @2747 if s0 <u a3
      :                          @2703
 39329: 95 5b 01                 a4 = s0 + 0x1
 39332: 88 bc 01                 a5 = a4 <u 0x1
 39335: d8 b2 0b                 a4 = t0 <u a4
 39338: d4 cb 0b                 a4 = a4 | a5
 39341: 52 0b ec 01              jump @2747 if a4 != 0
      :                          @2704
 39345: 82 9b                    a4 = u64 [a2]
 39347: ab ab e5                 jump @2702 if a4 != a3
      :                          @2705
 39350: 7b 95                    u64 [a2] = s0
 39352: 33 0c                    a5 = 0
 39354: 7b 18 10                 u64 [sp + 0x10] = a1
 39357: 7b 17                    u64 [sp] = a0
 39359: 33 07 b0 02 03           a0 = 0x302b0
 39364: 7b 17 20                 u64 [sp + 0x20] = a0
 39367: 95 78 00 00 10           a1 = a0 + 0x100000
 39372: c9 58 07                 a0 = a1 - s0
 39375: 7b 17 18                 u64 [sp + 0x18] = a0
 39378: 33 08                    a1 = 0
 39380: 64 69                    a2 = s1
 39382: 50 20 b8 02 37 72 02     ra = 696, jump @13689
      :                          @2706 [@dyn 348]
 39389: 33 03 00 00 10           t1 = 0x100000
 39394: 82 12 20                 t0 = u64 [sp + 0x20]
 39397: 49 11 28                 u64 [sp + 40] = 0
 39400: 49 11 30 08              u64 [sp + 48] = 0x8
 39404: 49 11 38                 u64 [sp + 56] = 0
 39407: 7b 16 08                 u64 [sp + 0x8] = s1
 39410: 97 69 02                 a2 = s1 << 0x2
 39413: c8 32 07                 a0 = t0 + t1
 39416: 01                       fallthrough
      :                          @2707
 39417: 82 78                    a1 = u64 [a0]
 39419: c8 98 0a                 a3 = a1 + a2
 39422: ac 8a 9c 01              jump @2748 if a3 <u a1
      :                          @2708
 39426: 95 ab 04                 a4 = a3 + 0x4
 39429: d8 ab 0c                 a5 = a4 <u a3
 39432: d8 b3 0b                 a4 = t1 <u a4
 39435: d4 cb 0b                 a4 = a4 | a5
 39438: 52 0b 8c 01              jump @2748 if a4 != 0
      :                          @2709
 39442: c9 a2 0b                 a4 = t0 - a3
 39445: c8 3b 0b                 a4 = a4 + t1
 39448: 84 bc 03                 a5 = a4 & 0x3
 39451: c8 ca 0a                 a3 = a3 + a5
 39454: 01                       fallthrough
      :                          @2710
 39455: 82 76                    s1 = u64 [a0]
 39457: ab 86 d8                 jump @2707 if s1 != a1
      :                          @2711
 39460: 7b 7a                    u64 [a0] = a3
 39462: c9 cb 05                 s0 = a4 - a5
 39465: 64 57                    a0 = s0
 39467: 33 08                    a1 = 0
 39469: 50 20 ba 02 e0 71 02     ra = 698, jump @13689
      :                          @2712 [@dyn 349]
 39476: 64 50                    ra = s0
 39478: 33 05 02                 s0 = 0x2
 39481: 48 10 04 01              u32 [ra + 4] = 0x1
 39485: 82 14 10                 t2 = u64 [sp + 0x10]
 39488: ae 54 20                 jump @2714 if t2 >=u s0
      :                          @2713
 39491: 82 16 08                 s1 = u64 [sp + 0x8]
 39494: 82 17                    a0 = u64 [sp]
 39496: 7b 76                    u64 [a0] = s1
 39498: 7b 70 08                 u64 [a0 + 0x8] = ra
 39501: 7b 76 10                 u64 [a0 + 0x10] = s1
 39504: 82 13 18                 t1 = u64 [sp + 0x18]
 39507: 33 07 b0 02 03           a0 = 0x302b0
 39512: 95 77 00 00 10           a0 = a0 + 0x100000
 39517: 28 16 01                 jump @2740
      :                          @2714
 39520: 33 08                    a1 = 0
 39522: 49 11 20 08              u64 [sp + 32] = 0x8
 39526: 82 13 18                 t1 = u64 [sp + 0x18]
 39529: 28 1e                    jump @2717
      :                          @2715
 39531: 97 66 02                 s1 = s1 << 0x2
 39534: c8 06 06                 s1 = s1 + ra
 39537: 48 06                    u32 [s1 + 0] = 0
 39539: 01                       fallthrough
      :                          @2716
 39540: d8 45 07                 a0 = s0 <u t2
 39543: c8 75 05                 s0 = s0 + a0
 39546: d8 54 09                 a2 = t2 <u s0
 39549: 85 99 01                 a2 = a2 ^ 0x1
 39552: d2 97 07                 a0 = a0 & a2
 39555: 51 07 9a 00              jump @2732 if a0 == 0
      :                          @2717
 39559: ac 54 11 01              jump @2746 if t2 <u s0
      :                          @2718
 39563: c8 53 07                 a0 = t1 + s0
 39566: 7c 77                    a0 = u8 [a0]
 39568: 51 07 08                 jump @2721 if a0 == 0
      :                          @2719
 39571: 52 08 4a                 jump @2726 if a1 != 0
      :                          @2720
 39574: 28 de                    jump @2716
      :                          @2721
 39576: 82 17 28                 a0 = u64 [sp + 0x28]
 39579: ab 78 1e                 jump @2724 if a1 != a0
      :                          @2722
 39582: 95 17 28                 a0 = sp + 0x28
 39585: 64 06                    s1 = ra
 39587: 50 20 bc 02 6c b8        ra = 700, jump @1581
      :                          @2723 [@dyn 350]
 39593: 64 60                    ra = s1
 39595: 82 14 10                 t2 = u64 [sp + 0x10]
 39598: 82 13 18                 t1 = u64 [sp + 0x18]
 39601: 82 18 38                 a1 = u64 [sp + 0x38]
 39604: 82 19 30                 a2 = u64 [sp + 0x30]
 39607: 28 06                    jump @2725
      :                          @2724
 39609: 82 19 20                 a2 = u64 [sp + 0x20]
 39612: 01                       fallthrough
      :                          @2725
 39613: 97 87 03                 a0 = a1 << 0x3
 39616: c8 97 07                 a0 = a0 + a2
 39619: 7b 75                    u64 [a0] = s0
 39621: 95 88 01                 a1 = a1 + 0x1
 39624: 7b 18 38                 u64 [sp + 0x38] = a1
 39627: 82 17 30                 a0 = u64 [sp + 0x30]
 39630: 7b 17 20                 u64 [sp + 0x20] = a0
 39633: 97 57 02                 a0 = s0 << 0x2
 39636: c8 07 07                 a0 = a0 + ra
 39639: 48 07 ff                 u32 [a0 + 0] = 0xffffffffffffffff
 39642: 51 08 9a                 jump @2716 if a1 == 0
      :                          @2726
 39645: 97 59 02                 a2 = s0 << 0x2
 39648: c8 09 09                 a2 = a2 + ra
 39651: 97 8a 03                 a3 = a1 << 0x3
 39654: 82 1b 20                 a4 = u64 [sp + 0x20]
 39657: 01                       fallthrough
      :                          @2727
 39658: 82 b7                    a0 = u64 [a4]
 39660: ca 57 06                 s1 = a0 * s0
 39663: ac 64 85                 jump @2716 if t2 <u s1
      :                          @2728
 39666: c8 63 0c                 a5 = t1 + s1
 39669: 33 02 01                 t0 = 0x1
 39672: 78 c2                    u8 [a5] = t0
 39674: 51 07 9d 00              jump @2745 if a0 == 0
      :                          @2729
 39678: cd 75 07                 a0 = s0 %u a0
 39681: 51 07 6a ff              jump @2715 if a0 == 0
      :                          @2730
 39685: 81 97                    a0 = i32 [a2]
 39687: 95 bb 08                 a4 = a4 + 0x8
 39690: 97 66 02                 s1 = s1 << 0x2
 39693: c8 06 06                 s1 = s1 + ra
 39696: 8d 77                    i32 a0 = -a0
 39698: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 39701: 7a 67                    u32 [s1] = a0
 39703: 52 0a d3                 jump @2727 if a3 != 0
      :                          @2731
 39706: 28 5a ff                 jump @2716
      :                          @2732
 39709: 82 18 28                 a1 = u64 [sp + 0x28]
 39712: 82 16 08                 s1 = u64 [sp + 0x8]
 39715: 82 17                    a0 = u64 [sp]
 39717: 7b 76                    u64 [a0] = s1
 39719: 7b 70 08                 u64 [a0 + 0x8] = ra
 39722: 7b 76 10                 u64 [a0 + 0x10] = s1
 39725: 82 15 20                 s0 = u64 [sp + 0x20]
 39728: 51 08 38                 jump @2739 if a1 == 0
      :                          @2733
 39731: 56 38 00 00 02 35        jump @2739 if a1 >u 131072
      :                          @2734
 39737: 97 88 03                 a1 = a1 << 0x3
 39740: 33 09 b0 02 03           a2 = 0x302b0
 39745: 95 99 00 00 10           a2 = a2 + 0x100000
 39750: 01                       fallthrough
      :                          @2735
 39751: 82 97                    a0 = u64 [a2]
 39753: c9 79 0a                 a3 = a2 - a0
 39756: ab 5a 1c                 jump @2739 if a3 != s0
      :                          @2736
 39759: c9 87 0a                 a3 = a0 - a1
 39762: 01                       fallthrough
      :                          @2737
 39763: 82 9b                    a4 = u64 [a2]
 39765: ab 7b f2                 jump @2735 if a4 != a0
      :                          @2738
 39768: 7b 9a                    u64 [a2] = a3
 39770: 33 0c                    a5 = 0
 39772: 33 07 b0 02 03           a0 = 0x302b0
 39777: 95 77 00 00 10           a0 = a0 + 0x100000
 39782: 28 0d                    jump @2740
      :                          @2739
 39784: 33 07 b0 02 03           a0 = 0x302b0
 39789: 95 77 00 00 10           a0 = a0 + 0x100000
 39794: 01                       fallthrough
      :                          @2740
 39795: 82 78                    a1 = u64 [a0]
 39797: c9 87 09                 a2 = a0 - a1
 39800: ab 39 11                 jump @2744 if a2 != t1
      :                          @2741
 39803: c9 68 09                 a2 = a1 - s1
 39806: 01                       fallthrough
      :                          @2742
 39807: 82 7a                    a3 = u64 [a0]
 39809: ab 8a f2                 jump @2740 if a3 != a1
      :                          @2743
 39812: 7b 79                    u64 [a0] = a2
 39814: 33 0b                    a4 = 0
 39816: 01                       fallthrough
      :                          @2744
 39817: 82 10 50                 ra = u64 [sp + 0x50]
 39820: 82 15 48                 s0 = u64 [sp + 0x48]
 39823: 82 16 40                 s1 = u64 [sp + 0x40]
 39826: 95 11 58                 sp = sp + 0x58
 39829: 32 00                    ret
      :                          @2745
 39831: 00                       trap
      :                          @2746
 39832: 00                       trap
      :                          @2747
 39833: 00                       trap
      :                          @2748
 39834: 00                       trap
      :                          @2749
 39835: c8 98 08                 a1 = a1 + a2
 39838: 01                       fallthrough
      :                          @2750
 39839: 95 99 01                 a2 = a2 + 0x1
 39842: ca 99 0a                 a3 = a2 * a2
 39845: ac a7 1a                 jump @2755 if a0 <u a3
      :                          @2751
 39848: 51 09 1b                 jump @2756 if a2 == 0
      :                          @2752
 39851: cb 97 0a                 a3 = a0 /u a2
 39854: ca 9a 0b                 a4 = a3 * a2
 39857: ab 7b ee                 jump @2750 if a4 != a0
      :                          @2753
 39860: aa a9 e7                 jump @2749 if a2 == a3
      :                          @2754
 39863: c8 98 08                 a1 = a1 + a2
 39866: c8 a8 08                 a1 = a1 + a3
 39869: 28 e2                    jump @2750
      :                          @2755
 39871: 64 87                    a0 = a1
 39873: 32 00                    ret
      :                          @2756
 39875: 00                       trap
      :                          @2757
 39876: 33 08                    a1 = 0
 39878: 33 09 02                 a2 = 0x2
 39881: ae 97 07                 jump @2759 if a0 >=u a2
      :                          @2758
 39884: 64 87                    a0 = a1
 39886: 32 00                    ret
      :                          @2759
 39888: 33 02 09                 t0 = 0x9
 39891: 33 0b 02                 a4 = 0x2
 39894: 28 18                    jump @2762
      :                          @2760
 39896: 95 88 01                 a1 = a1 + 0x1
 39899: 01                       fallthrough
      :                          @2761
 39900: d8 7b 0a                 a3 = a4 <u a0
 39903: c8 ab 0b                 a4 = a4 + a3
 39906: 85 aa 01                 a3 = a3 ^ 0x1
 39909: d8 b7 0c                 a5 = a0 <u a4
 39912: d4 ca 0a                 a3 = a3 | a5
 39915: 52 0a e1                 jump @2758 if a3 != 0
      :                          @2762
 39918: ac 9b ee                 jump @2761 if a4 <u a2
      :                          @2763
 39921: 84 bc 01                 a5 = a4 & 0x1
 39924: 52 0c 08                 jump @2766 if a5 != 0
      :                          @2764
 39927: aa 9b e1                 jump @2760 if a4 == a2
      :                          @2765
 39930: 28 e2                    jump @2761
      :                          @2766
 39932: ac 2b dc                 jump @2760 if a4 <u t0
      :                          @2767
 39935: 33 0c 03                 a5 = 0x3
 39938: 01                       fallthrough
      :                          @2768
 39939: 51 0c 14                 jump @2772 if a5 == 0
      :                          @2769
 39942: cd cb 0a                 a3 = a4 %u a5
 39945: 51 0a d3                 jump @2761 if a3 == 0
      :                          @2770
 39948: 95 cc 02                 a5 = a5 + 0x2
 39951: ca cc 0a                 a3 = a5 * a5
 39954: ae ab f1                 jump @2768 if a4 >=u a3
      :                          @2771
 39957: 28 c3                    jump @2760
      :                          @2772
 39959: 00                       trap
      :                          @2773
 39960: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 39970: d3 79 09                 a2 = a2 ^ a0
 39973: e1 89 09                 a2 = a2 | ~a1
 39976: 51 09 57                 jump @2780 if a2 == 0
      :                          @2774
 39979: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 39982: 33 0b 03                 a4 = 0x3
 39985: 8e 9a                    a3 = a2 >u 0
 39987: ae b8 16                 jump @2776 if a1 >=u a4
      :                          @2775
 39990: 95 a8 ff                 a1 = a3 + 0xffffffffffffffff
 39993: d3 a9 09                 a2 = a2 ^ a3
 39996: 8e 97                    a0 = a2 >u 0
 39998: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 40001: 33 07 01                 a0 = 0x1
 40004: db 89 07                 a0 = a2 if a1 != 0
 40007: 32 00                    ret
      :                          @2776
 40009: 98 9b 3f                 a4 = a2 >> 0x3f
 40012: c8 9b 0b                 a4 = a4 + a2
 40015: 99 bb 01                 a4 = a4 >>a 0x1
 40018: ce 87 02                 t0 = a0 %s a1
 40021: 9a 8c                    a5 = -a1
 40023: e3 c8 0c                 a5 = maxs(a1, a5)
 40026: 99 27 3f                 a0 = t0 >>a 0x3f
 40029: d2 c7 07                 a0 = a0 & a5
 40032: c8 27 07                 a0 = a0 + t0
 40035: 28 0b                    jump @2778
      :                          @2777
 40037: 98 bb 01                 a4 = a4 >> 0x1
 40040: ca 77 07                 a0 = a0 * a0
 40043: 51 0b cb                 jump @2775 if a4 == 0
      :                          @2778
 40046: 84 bc 01                 a5 = a4 & 0x1
 40049: cd 87 07                 a0 = a0 %u a1
 40052: 51 0c f1                 jump @2777 if a5 == 0
      :                          @2779
 40055: ca a7 0a                 a3 = a0 * a3
 40058: cd 8a 0a                 a3 = a3 %u a1
 40061: 28 e8                    jump @2777
      :                          @2780
 40063: 00                       trap
      :                          @2781
 40064: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 40067: 7b 10 18                 u64 [sp + 0x18] = ra
 40070: 7b 15 10                 u64 [sp + 0x10] = s0
 40073: 7b 16 08                 u64 [sp + 0x8] = s1
 40076: 33 0a 01                 a3 = 0x1
 40079: 51 07 0e                 jump @2784 if a0 == 0
      :                          @2782
 40082: 33 09 02                 a2 = 0x2
 40085: ab 98 0d                 jump @2785 if a1 != a2
      :                          @2783
 40088: 64 74                    t2 = a0
 40090: 28 73 01                 jump @2830
      :                          @2784
 40093: 33 04                    t2 = 0
 40095: 28 6e 01                 jump @2830
      :                          @2785
 40098: 95 84 ff                 t2 = a1 + 0xffffffffffffffff
 40101: 8e 42                    t0 = t2 >u 0
 40103: 98 43 01                 t1 = t2 >> 0x1
 40106: 64 29                    a2 = t0
 40108: 55 18 03 59              jump @2798 if a1 >=u 3
      :                          @2786
 40112: 33 0a 01                 a3 = 0x1
 40115: ab a9 57 01              jump @2829 if a2 != a3
      :                          @2787
 40119: 33 0c                    a5 = 0
 40121: 84 49 01                 a2 = t2 & 0x1
 40124: 52 09 6b                 jump @2802 if a2 != 0
      :                          @2788
 40127: 64 49                    a2 = t2
 40129: 01                       fallthrough
      :                          @2789
 40130: 98 90 01                 ra = a2 >> 0x1
 40133: 84 9a 02                 a3 = a2 & 0x2
 40136: 83 cc 01                 i32 a5 = a5 + 0x1
 40139: 64 09                    a2 = ra
 40141: 51 0a f5                 jump @2789 if a3 == 0
      :                          @2790
 40144: 55 18 03 5d              jump @2803 if a1 >=u 3
      :                          @2791
 40148: 33 09 02                 a2 = 0x2
 40151: ab 24 13                 jump @2794 if t2 != t0
      :                          @2792
 40154: 64 23                    t1 = t0
 40156: 64 2b                    a4 = t0
 40158: 64 24                    t2 = t0
 40160: 51 00 c2 00              jump @2817 if ra == 0
      :                          @2793
 40164: 64 0a                    a3 = ra
 40166: 64 2b                    a4 = t0
 40168: 28 0c                    jump @2796
      :                          @2794
 40170: 28                       jump @2794
      :                          @2795
 40171: 98 aa 01                 a3 = a3 >> 0x1
 40174: ca 99 09                 a2 = a2 * a2
 40177: 51 0a 69                 jump @2809 if a3 == 0
      :                          @2796
 40180: 84 a6 01                 s1 = a3 & 0x1
 40183: cd 89 09                 a2 = a2 %u a1
 40186: 51 06 f1                 jump @2795 if s1 == 0
      :                          @2797
 40189: ca b9 0b                 a4 = a2 * a4
 40192: cd 8b 0b                 a4 = a4 %u a1
 40195: 28 e8                    jump @2795
      :                          @2798
 40197: 64 7b                    a4 = a0
 40199: 64 3a                    a3 = t1
 40201: 64 29                    a2 = t0
 40203: 28 0b                    jump @2800
      :                          @2799
 40205: 98 aa 01                 a3 = a3 >> 0x1
 40208: ca bb 0b                 a4 = a4 * a4
 40211: 51 0a 9d                 jump @2786 if a3 == 0
      :                          @2800
 40214: 84 ac 01                 a5 = a3 & 0x1
 40217: cd 8b 0b                 a4 = a4 %u a1
 40220: 51 0c f1                 jump @2799 if a5 == 0
      :                          @2801
 40223: ca 9b 09                 a2 = a4 * a2
 40226: cd 89 09                 a2 = a2 %u a1
 40229: 28 e8                    jump @2799
      :                          @2802
 40231: 64 40                    ra = t2
 40233: 53 18 03 ab              jump @2791 if a1 <u 3
      :                          @2803
 40237: 33 0a 02                 a3 = 0x2
 40240: 28 08                    jump @2805
      :                          @2804
 40242: 95 9a 01                 a3 = a2 + 0x1
 40245: aa 4b a5                 jump @2792 if a4 == t2
      :                          @2805
 40248: 64 a9                    a2 = a3
 40250: 64 35                    s0 = t1
 40252: 64 2b                    a4 = t0
 40254: 28 0b                    jump @2807
      :                          @2806
 40256: 98 55 01                 s0 = s0 >> 0x1
 40259: ca aa 0a                 a3 = a3 * a3
 40262: 51 05 ec                 jump @2804 if s0 == 0
      :                          @2807
 40265: 84 56 01                 s1 = s0 & 0x1
 40268: cd 8a 0a                 a3 = a3 %u a1
 40271: 51 06 f1                 jump @2806 if s1 == 0
      :                          @2808
 40274: ca ba 0b                 a4 = a3 * a4
 40277: cd 8b 0b                 a4 = a4 %u a1
 40280: 28 e8                    jump @2806
      :                          @2809
 40282: 64 7a                    a3 = a0
 40284: 64 09                    a2 = ra
 40286: 64 23                    t1 = t0
 40288: 28 0b                    jump @2811
      :                          @2810
 40290: 98 99 01                 a2 = a2 >> 0x1
 40293: ca aa 0a                 a3 = a3 * a3
 40296: 51 09 14                 jump @2813 if a2 == 0
      :                          @2811
 40299: 84 96 01                 s1 = a2 & 0x1
 40302: cd 8a 0a                 a3 = a3 %u a1
 40305: 51 06 f1                 jump @2810 if s1 == 0
      :                          @2812
 40308: ca 3a 06                 s1 = a3 * t1
 40311: cd 86 03                 t1 = s1 %u a1
 40314: 28 e8                    jump @2810
      :                          @2813
 40316: 95 06 01                 s1 = ra + 0x1
 40319: 33 09 03                 a2 = 0x3
 40322: 64 24                    t2 = t0
 40324: 28 0b                    jump @2815
      :                          @2814
 40326: 98 a6 01                 s1 = a3 >> 0x1
 40329: ca 77 07                 a0 = a0 * a0
 40332: ae a9 16                 jump @2817 if a2 >=u a3
      :                          @2815
 40335: 64 6a                    a3 = s1
 40337: 84 65 02                 s0 = s1 & 0x2
 40340: cd 87 07                 a0 = a0 %u a1
 40343: 51 05 ef                 jump @2814 if s0 == 0
      :                          @2816
 40346: ca 47 06                 s1 = a0 * t2
 40349: cd 86 04                 t2 = s1 %u a1
 40352: 28 e6                    jump @2814
      :                          @2817
 40354: 33 0a 01                 a3 = 0x1
 40357: aa a3 68                 jump @2830 if t1 == a3
      :                          @2818
 40360: 33 07 01                 a0 = 0x1
 40363: 33 09                    a2 = 0
 40365: 64 3a                    a3 = t1
 40367: 28 07                    jump @2820
      :                          @2819
 40369: 33 09                    a2 = 0
 40371: 64 3a                    a3 = t1
 40373: 01                       fallthrough
      :                          @2820
 40374: aa 7a 11                 jump @2823 if a3 == a0
      :                          @2821
 40377: ca aa 0a                 a3 = a3 * a3
 40380: 83 99 01                 i32 a2 = a2 + 0x1
 40383: cd 8a 0a                 a3 = a3 %u a1
 40386: ab 9c f4                 jump @2820 if a5 != a2
      :                          @2822
 40389: 28 45                    jump @2829
      :                          @2823
 40391: 85 9a ff                 a3 = a2 ^ 0xffffffffffffffff
 40394: c8 ca 0a                 a3 = a3 + a5
 40397: cf a7 0c                 a5 = a0 << a3
 40400: 64 2a                    a3 = t0
 40402: 28 0b                    jump @2825
      :                          @2824
 40404: 98 cc 01                 a5 = a5 >> 0x1
 40407: ca bb 0b                 a4 = a4 * a4
 40410: 51 0c 14                 jump @2827 if a5 == 0
      :                          @2825
 40413: 84 c5 01                 s0 = a5 & 0x1
 40416: cd 8b 0b                 a4 = a4 %u a1
 40419: 51 05 f1                 jump @2824 if s0 == 0
      :                          @2826
 40422: ca ab 0a                 a3 = a4 * a3
 40425: cd 8a 0a                 a3 = a3 %u a1
 40428: 28 e8                    jump @2824
      :                          @2827
 40430: ca aa 0b                 a4 = a3 * a3
 40433: cd 8b 0b                 a4 = a4 %u a1
 40436: ca 3b 0c                 a5 = a4 * t1
 40439: cd 8c 03                 t1 = a5 %u a1
 40442: ca 4a 0c                 a5 = a3 * t2
 40445: 33 0a 01                 a3 = 0x1
 40448: cd 8c 04                 t2 = a5 %u a1
 40451: 64 9c                    a5 = a2
 40453: ab a3 ac                 jump @2819 if t1 != a3
      :                          @2828
 40456: 28 05                    jump @2830
      :                          @2829
 40458: 33 0a                    a3 = 0
 40460: 01                       fallthrough
      :                          @2830
 40461: 64 a7                    a0 = a3
 40463: 64 48                    a1 = t2
 40465: 82 10 18                 ra = u64 [sp + 0x18]
 40468: 82 15 10                 s0 = u64 [sp + 0x10]
 40471: 82 16 08                 s1 = u64 [sp + 0x8]
 40474: 95 11 20                 sp = sp + 0x20
 40477: 32 00                    ret
      :                          @2831
 40479: 51 07 eb 00              jump @2849 if a0 == 0
      :                          @2832
 40483: 95 82 ff                 t0 = a1 + 0xffffffffffffffff
 40486: 98 24 01                 t2 = t0 >> 0x1
 40489: 33 03 01                 t1 = 0x1
 40492: 64 7b                    a4 = a0
 40494: 64 4a                    a3 = t2
 40496: 28 0b                    jump @2834
      :                          @2833
 40498: 98 aa 01                 a3 = a3 >> 0x1
 40501: ca 99 0b                 a4 = a2 * a2
 40504: 51 0a 14                 jump @2836 if a3 == 0
      :                          @2834
 40507: 84 ac 01                 a5 = a3 & 0x1
 40510: cd 8b 09                 a2 = a4 %u a1
 40513: 51 0c f1                 jump @2833 if a5 == 0
      :                          @2835
 40516: ca 39 0b                 a4 = a2 * t1
 40519: cd 8b 03                 t1 = a4 %u a1
 40522: 28 e8                    jump @2833
      :                          @2836
 40524: 33 0a 01                 a3 = 0x1
 40527: ab a3 c4 00              jump @2850 if t1 != a3
      :                          @2837
 40531: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 40534: 7b 15 08                 u64 [sp + 0x8] = s0
 40537: 7b 16                    u64 [sp] = s1
 40539: cd 87 07                 a0 = a0 %u a1
 40542: 01                       fallthrough
      :                          @2838
 40543: ca aa 09                 a2 = a3 * a3
 40546: c8 89 09                 a2 = a2 + a1
 40549: c9 79 09                 a2 = a2 - a0
 40552: cd 89 03                 t1 = a2 %u a1
 40555: 33 0c 01                 a5 = 0x1
 40558: 64 39                    a2 = t1
 40560: 64 4b                    a4 = t2
 40562: 28 0b                    jump @2840
      :                          @2839
 40564: 98 bb 01                 a4 = a4 >> 0x1
 40567: ca 99 09                 a2 = a2 * a2
 40570: 51 0b 14                 jump @2842 if a4 == 0
      :                          @2840
 40573: 84 b5 01                 s0 = a4 & 0x1
 40576: cd 89 09                 a2 = a2 %u a1
 40579: 51 05 f1                 jump @2839 if s0 == 0
      :                          @2841
 40582: ca c9 0c                 a5 = a2 * a5
 40585: cd 8c 0c                 a5 = a5 %u a1
 40588: 28 e8                    jump @2839
      :                          @2842
 40590: aa 2c 0c                 jump @2845 if a5 == t0
      :                          @2843
 40593: 95 aa 01                 a3 = a3 + 0x1
 40596: ab 8a cb                 jump @2838 if a3 != a1
      :                          @2844
 40599: 33 0a                    a3 = 0
 40601: 01                       fallthrough
      :                          @2845
 40602: 33 0c                    a5 = 0
 40604: 95 87 01                 a0 = a1 + 0x1
 40607: 33 0b 01                 a4 = 0x1
 40610: 33 02 04                 t0 = 0x4
 40613: 33 04 01                 t2 = 0x1
 40616: 28 2e                    jump @2847
      :                          @2846
 40618: 98 97 01                 a0 = a2 >> 0x1
 40621: ca aa 05                 s0 = a3 * a3
 40624: cd 85 05                 s0 = s0 %u a1
 40627: ca bb 06                 s1 = a4 * a4
 40630: cd 86 06                 s1 = s1 %u a1
 40633: ca 36 06                 s1 = s1 * t1
 40636: cd 86 06                 s1 = s1 %u a1
 40639: c8 65 05                 s0 = s0 + s1
 40642: ca ba 0a                 a3 = a3 * a4
 40645: cd 85 05                 s0 = s0 %u a1
 40648: cd 8a 0a                 a3 = a3 %u a1
 40651: 97 aa 01                 a3 = a3 << 0x1
 40654: cd 8a 0b                 a4 = a3 %u a1
 40657: 64 5a                    a3 = s0
 40659: ac 29 46                 jump @2851 if a2 <u t0
      :                          @2847
 40662: 64 79                    a2 = a0
 40664: 84 77 02                 a0 = a0 & 0x2
 40667: 51 07 cf                 jump @2846 if a0 == 0
      :                          @2848
 40670: ca 4a 07                 a0 = a3 * t2
 40673: cd 87 07                 a0 = a0 %u a1
 40676: ca bc 05                 s0 = a5 * a4
 40679: cd 85 05                 s0 = s0 %u a1
 40682: ca 35 05                 s0 = s0 * t1
 40685: cd 85 05                 s0 = s0 %u a1
 40688: c8 57 07                 a0 = a0 + s0
 40691: ca b4 05                 s0 = t2 * a4
 40694: cd 87 04                 t2 = a0 %u a1
 40697: cd 85 07                 a0 = s0 %u a1
 40700: ca ca 0c                 a5 = a3 * a5
 40703: cd 8c 0c                 a5 = a5 %u a1
 40706: c8 c7 07                 a0 = a0 + a5
 40709: cd 87 0c                 a5 = a0 %u a1
 40712: 28 a2                    jump @2846
      :                          @2849
 40714: 33 07 01                 a0 = 0x1
 40717: 33 08                    a1 = 0
 40719: 28 7a 22 02              jump @12265
      :                          @2850
 40723: 33 07                    a0 = 0
 40725: 64 48                    a1 = t2
 40727: 32 00                    ret
      :                          @2851
 40729: 33 07 01                 a0 = 0x1
 40732: 82 15 08                 s0 = u64 [sp + 0x8]
 40735: 82 16                    s1 = u64 [sp]
 40737: 95 11 10                 sp = sp + 0x10
 40740: 64 48                    a1 = t2
 40742: 32 00                    ret
      :                          @2852
 40744: 51 17 02 2d              jump @2857 if a0 == 2
      :                          @2853
 40748: 84 78 3f                 a1 = a0 & 0x3f
 40751: 51 08 2d                 jump @2858 if a1 == 0
      :                          @2854
 40754: 9b 78 ff                 a1 = 0xffffffffffffffff << a0
 40757: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 40760: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 40763: 33 09 04                 a2 = 0x4
 40766: 01                       fallthrough
      :                          @2855
 40767: ca 99 09                 a2 = a2 * a2
 40770: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 40773: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 40776: cd 89 09                 a2 = a2 %u a1
 40779: 52 07 f4                 jump @2855 if a0 != 0
      :                          @2856
 40782: 88 98 01                 a1 = a2 <u 0x1
 40785: 64 87                    a0 = a1
 40787: 32 00                    ret
      :                          @2857
 40789: 33 07 01                 a0 = 0x1
 40792: 28 d0 b5 01              jump @10987
      :                          @2858
 40796: 00                       trap
      :                          @2859
 40797: 51 17 01 15              jump @2862 if a0 == 1
      :                          @2860
 40801: 52 07 20                 jump @2863 if a0 != 0
      :                          @2861
 40804: 33 07 02                 a0 = 0x2
 40807: cd 97 03                 t1 = a0 %u a2
 40810: 33 07                    a0 = 0
 40812: 64 38                    a1 = t1
 40814: 28 ef b6 01              jump @11000
      :                          @2862
 40818: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 40821: 8e 93                    t1 = a2 >u 0
 40823: 64 3b                    a4 = t1
 40825: 64 b7                    a0 = a4
 40827: 64 38                    a1 = t1
 40829: 28 e0 b6 01              jump @11000
      :                          @2863
 40833: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 40836: 7b 10 18                 u64 [sp + 0x18] = ra
 40839: 7b 15 10                 u64 [sp + 0x10] = s0
 40842: 7b 16 08                 u64 [sp + 0x8] = s1
 40845: 33 04                    t2 = 0
 40847: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 40850: 8e a3                    t1 = a3 >u 0
 40852: 33 0c 02                 a5 = 0x2
 40855: cd 9c 05                 s0 = a5 %u a2
 40858: 9a 9a                    a3 = -a2
 40860: e3 a9 02                 t0 = maxs(a2, a3)
 40863: 64 3a                    a3 = t1
 40865: 01                       fallthrough
      :                          @2864
 40866: ca 85 0b                 a4 = s0 * a1
 40869: d8 7c 05                 s0 = a5 <u a0
 40872: 85 50 01                 ra = s0 ^ 0x1
 40875: c8 5c 0c                 a5 = a5 + s0
 40878: ca 84 05                 s0 = t2 * a1
 40881: c9 5a 05                 s0 = a3 - s0
 40884: c9 b3 06                 s1 = t1 - a4
 40887: ce 95 05                 s0 = s0 %s a2
 40890: 99 5b 3f                 a4 = s0 >>a 0x3f
 40893: d2 2b 0b                 a4 = a4 & t0
 40896: c8 5b 0b                 a4 = a4 + s0
 40899: ce 96 04                 t2 = s1 %s a2
 40902: d8 c7 05                 s0 = a0 <u a5
 40905: d4 50 00                 ra = ra | s0
 40908: 99 46 3f                 s1 = t2 >>a 0x3f
 40911: d2 26 06                 s1 = s1 & t0
 40914: 64 35                    s0 = t1
 40916: c8 46 03                 t1 = s1 + t2
 40919: 64 a4                    t2 = a3
 40921: 64 ba                    a3 = a4
 40923: 51 00 c7                 jump @2864 if ra == 0
      :                          @2865
 40926: 82 10 18                 ra = u64 [sp + 0x18]
 40929: 82 15 10                 s0 = u64 [sp + 0x10]
 40932: 82 16 08                 s1 = u64 [sp + 0x8]
 40935: 95 11 20                 sp = sp + 0x20
 40938: 64 b7                    a0 = a4
 40940: 64 38                    a1 = t1
 40942: 32 00                    ret
      :                          @2866
 40944: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 40947: 7b 10 18                 u64 [sp + 0x18] = ra
 40950: 7b 15 10                 u64 [sp + 0x10] = s0
 40953: 7b 16 08                 u64 [sp + 0x8] = s1
 40956: 95 73 ff                 t1 = a0 + 0xffffffffffffffff
 40959: 9a 78                    a1 = -a0
 40961: e3 87 02                 t0 = maxs(a0, a1)
 40964: 33 0b 01                 a4 = 0x1
 40967: 33 0a 05                 a3 = 0x5
 40970: 33 09 04                 a2 = 0x4
 40973: 01                       fallthrough
      :                          @2867
 40974: ce 7a 05                 s0 = a3 %s a0
 40977: 99 58 3f                 a1 = s0 >>a 0x3f
 40980: d2 28 08                 a1 = a1 & t0
 40983: c8 85 05                 s0 = s0 + a1
 40986: 64 36                    s1 = t1
 40988: 33 0c 01                 a5 = 0x1
 40991: 28 0b                    jump @2869
      :                          @2868
 40993: 98 86 01                 s1 = a1 >> 0x1
 40996: ca 55 05                 s0 = s0 * s0
 40999: ac 98 16                 jump @2871 if a1 <u a2
      :                          @2869
 41002: 64 68                    a1 = s1
 41004: 84 66 02                 s1 = s1 & 0x2
 41007: cd 75 05                 s0 = s0 %u a0
 41010: 51 06 ef                 jump @2868 if s1 == 0
      :                          @2870
 41013: ca c5 0c                 a5 = s0 * a5
 41016: cd 7c 0c                 a5 = a5 %u a0
 41019: 28 e6                    jump @2868
      :                          @2871
 41021: 95 c8 ff                 a1 = a5 + 0xffffffffffffffff
 41024: 88 88 01                 a1 = a1 <u 0x1
 41027: d3 3c 0c                 a5 = a5 ^ t1
 41030: 8e cc                    a5 = a5 >u 0
 41032: d4 c8 08                 a1 = a1 | a5
 41035: 51 08 0f                 jump @2873 if a1 == 0
      :                          @2872
 41038: 97 b8 01                 a1 = a4 << 0x1
 41041: 9a aa                    a3 = -a3
 41043: c9 8a 0a                 a3 = a3 - a1
 41046: 9a bb                    a4 = -a4
 41048: 28 b6                    jump @2867
      :                          @2873
 41050: 95 74 01                 t2 = a0 + 0x1
 41053: 33 0b                    a4 = 0
 41055: 84 48 01                 a1 = t2 & 0x1
 41058: 52 08 14                 jump @2876 if a1 != 0
      :                          @2874
 41061: 64 48                    a1 = t2
 41063: 01                       fallthrough
      :                          @2875
 41064: 98 84 01                 t2 = a1 >> 0x1
 41067: 84 89 02                 a2 = a1 & 0x2
 41070: 83 bb 01                 i32 a4 = a4 + 0x1
 41073: 64 48                    a1 = t2
 41075: 51 09 f5                 jump @2875 if a2 == 0
      :                          @2876
 41078: 33 08 01                 a1 = 0x1
 41081: 51 04 b6 00              jump @2885 if t2 == 0
      :                          @2877
 41085: 9a a8 01                 a1 = 0x1 - a3
 41088: 99 89 3f                 a2 = a1 >>a 0x3f
 41091: 98 99 3e                 a2 = a2 >> 0x3e
 41094: c8 98 08                 a1 = a1 + a2
 41097: 33 09 01                 a2 = 0x1
 41100: 99 83 02                 t1 = a1 >>a 0x2
 41103: ab 94 0c                 jump @2879 if t2 != a2
      :                          @2878
 41106: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 41109: 8e 8c                    a5 = a1 >u 0
 41111: 64 ca                    a3 = a5
 41113: 28 4e                    jump @2881
      :                          @2879
 41115: 33 05                    s0 = 0
 41117: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 41120: 8e 8c                    a5 = a1 >u 0
 41122: 33 08 02                 a1 = 0x2
 41125: cd 78 06                 s1 = a1 %u a0
 41128: 64 c9                    a2 = a5
 41130: 01                       fallthrough
      :                          @2880
 41131: ca 36 0a                 a3 = s1 * t1
 41134: 64 c6                    s1 = a5
 41136: d8 48 0c                 a5 = a1 <u t2
 41139: 85 c0 01                 ra = a5 ^ 0x1
 41142: c8 c8 08                 a1 = a1 + a5
 41145: ca 35 0c                 a5 = s0 * t1
 41148: c9 c9 0c                 a5 = a2 - a5
 41151: c9 a6 05                 s0 = s1 - a3
 41154: ce 7c 0a                 a3 = a5 %s a0
 41157: 99 ac 3f                 a5 = a3 >>a 0x3f
 41160: d2 2c 0c                 a5 = a5 & t0
 41163: c8 ca 0a                 a3 = a3 + a5
 41166: ce 75 0c                 a5 = s0 %s a0
 41169: d8 84 05                 s0 = t2 <u a1
 41172: d4 50 00                 ra = ra | s0
 41175: 99 c5 3f                 s0 = a5 >>a 0x3f
 41178: d2 25 05                 s0 = s0 & t0
 41181: c8 5c 0c                 a5 = a5 + s0
 41184: 64 95                    s0 = a2
 41186: 64 a9                    a2 = a3
 41188: 51 00 c7                 jump @2880 if ra == 0
      :                          @2881
 41191: 33 08 01                 a1 = 0x1
 41194: 51 0a 45                 jump @2885 if a3 == 0
      :                          @2882
 41197: e3 8b 0b                 a4 = maxs(a4, a1)
 41200: ce 73 08                 a1 = t1 %s a0
 41203: 99 89 3f                 a2 = a1 >>a 0x3f
 41206: d2 29 09                 a2 = a2 & t0
 41209: c8 98 08                 a1 = a1 + a2
 41212: cd 78 09                 a2 = a1 %u a0
 41215: 97 99 01                 a2 = a2 << 0x1
 41218: 01                       fallthrough
      :                          @2883
 41219: 83 bb ff                 i32 a4 = a4 + 0xffffffffffffffff
 41222: 8e b8                    a1 = a4 >u 0
 41224: 51 0b 27                 jump @2885 if a4 == 0
      :                          @2884
 41227: ca ca 0a                 a3 = a3 * a5
 41230: ce 7a 06                 s1 = a3 %s a0
 41233: 99 6a 3f                 a3 = s1 >>a 0x3f
 41236: d2 2a 0a                 a3 = a3 & t0
 41239: c8 6a 0a                 a3 = a3 + s1
 41242: ca cc 0c                 a5 = a5 * a5
 41245: c9 9c 0c                 a5 = a5 - a2
 41248: ce 7c 06                 s1 = a5 %s a0
 41251: 99 6c 3f                 a5 = s1 >>a 0x3f
 41254: d2 2c 0c                 a5 = a5 & t0
 41257: c8 6c 0c                 a5 = a5 + s1
 41260: 52 0a d7                 jump @2883 if a3 != 0
      :                          @2885
 41263: 64 87                    a0 = a1
 41265: 82 10 18                 ra = u64 [sp + 0x18]
 41268: 82 15 10                 s0 = u64 [sp + 0x10]
 41271: 82 16 08                 s1 = u64 [sp + 0x8]
 41274: 95 11 20                 sp = sp + 0x20
 41277: 32 00                    ret
      :                          @2886
 41279: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 41282: 7b 15 08                 u64 [sp + 0x8] = s0
 41285: 7b 16                    u64 [sp] = s1
 41287: 95 74 ff                 t2 = a0 + 0xffffffffffffffff
 41290: 84 48 01                 a1 = t2 & 0x1
 41293: 52 08 81 00              jump @2901 if a1 != 0
      :                          @2887
 41297: 33 09 98 05 01           a2 = 0x10598
 41302: 95 93 38                 t1 = a2 + 0x38
 41305: 33 02 01                 t0 = 0x1
 41308: 28 06                    jump @2889
      :                          @2888
 41310: aa 39 14 02              jump @2942 if a2 == t1
      :                          @2889
 41314: 82 9a                    a3 = u64 [a2]
 41316: cd 7a 08                 a1 = a3 %u a0
 41319: 51 08 0b 02              jump @2942 if a1 == 0
      :                          @2890
 41323: 33 0c                    a5 = 0
 41325: 95 99 08                 a2 = a2 + 0x8
 41328: 33 05 01                 s0 = 0x1
 41331: 64 48                    a1 = t2
 41333: 01                       fallthrough
      :                          @2891
 41334: 64 5b                    a4 = s0
 41336: 84 86 02                 s1 = a1 & 0x2
 41339: 98 88 01                 a1 = a1 >> 0x1
 41342: 83 cc 01                 i32 a5 = a5 + 0x1
 41345: 83 55 01                 i32 s0 = s0 + 0x1
 41348: 51 06 f2                 jump @2891 if s1 == 0
      :                          @2892
 41351: 33 0c 01                 a5 = 0x1
 41354: 28 0b                    jump @2894
      :                          @2893
 41356: 98 88 01                 a1 = a1 >> 0x1
 41359: ca aa 0a                 a3 = a3 * a3
 41362: 51 08 14                 jump @2896 if a1 == 0
      :                          @2894
 41365: 84 85 01                 s0 = a1 & 0x1
 41368: cd 7a 0a                 a3 = a3 %u a0
 41371: 51 05 f1                 jump @2893 if s0 == 0
      :                          @2895
 41374: ca ca 0c                 a5 = a3 * a5
 41377: cd 7c 0c                 a5 = a5 %u a0
 41380: 28 e8                    jump @2893
      :                          @2896
 41382: 95 c8 ff                 a1 = a5 + 0xffffffffffffffff
 41385: 88 88 01                 a1 = a1 <u 0x1
 41388: d3 4c 0a                 a3 = a5 ^ t2
 41391: 88 aa 01                 a3 = a3 <u 0x1
 41394: d4 a8 08                 a1 = a1 | a3
 41397: 52 08 a9                 jump @2888 if a1 != 0
      :                          @2897
 41400: e3 2b 08                 a1 = maxs(a4, t0)
 41403: 01                       fallthrough
      :                          @2898
 41404: 83 88 ff                 i32 a1 = a1 + 0xffffffffffffffff
 41407: 51 08 be 01              jump @2943 if a1 == 0
      :                          @2899
 41411: ca cc 0a                 a3 = a5 * a5
 41414: cd 7a 0c                 a5 = a3 %u a0
 41417: ab 4c f3                 jump @2898 if a5 != t2
      :                          @2900
 41420: 28 92                    jump @2888
      :                          @2901
 41422: 33 08 01                 a1 = 0x1
 41425: 33 0a 02                 a3 = 0x2
 41428: 64 49                    a2 = t2
 41430: 28 0b                    jump @2903
      :                          @2902
 41432: 98 99 01                 a2 = a2 >> 0x1
 41435: ca aa 0a                 a3 = a3 * a3
 41438: 51 09 14                 jump @2905 if a2 == 0
      :                          @2903
 41441: 84 9b 01                 a4 = a2 & 0x1
 41444: cd 7a 0a                 a3 = a3 %u a0
 41447: 51 0b f1                 jump @2902 if a4 == 0
      :                          @2904
 41450: ca 8a 08                 a1 = a3 * a1
 41453: cd 78 08                 a1 = a1 %u a0
 41456: 28 e8                    jump @2902
      :                          @2905
 41458: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41461: 8e 99                    a2 = a2 >u 0
 41463: d3 48 08                 a1 = a1 ^ t2
 41466: 8e 88                    a1 = a1 >u 0
 41468: d2 98 08                 a1 = a1 & a2
 41471: 52 08 7e 01              jump @2943 if a1 != 0
      :                          @2906
 41475: 33 0a 45 01              a3 = 0x145
 41479: cd 7a 08                 a1 = a3 %u a0
 41482: 51 08 68 01              jump @2942 if a1 == 0
      :                          @2907
 41486: 33 08 01                 a1 = 0x1
 41489: 64 49                    a2 = t2
 41491: 28 0b                    jump @2909
      :                          @2908
 41493: 98 99 01                 a2 = a2 >> 0x1
 41496: ca aa 0a                 a3 = a3 * a3
 41499: 51 09 14                 jump @2911 if a2 == 0
      :                          @2909
 41502: 84 9b 01                 a4 = a2 & 0x1
 41505: cd 7a 0a                 a3 = a3 %u a0
 41508: 51 0b f1                 jump @2908 if a4 == 0
      :                          @2910
 41511: ca 8a 08                 a1 = a3 * a1
 41514: cd 78 08                 a1 = a1 %u a0
 41517: 28 e8                    jump @2908
      :                          @2911
 41519: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41522: 8e 99                    a2 = a2 >u 0
 41524: d3 48 08                 a1 = a1 ^ t2
 41527: 8e 88                    a1 = a1 >u 0
 41529: d2 98 08                 a1 = a1 & a2
 41532: 52 08 41 01              jump @2943 if a1 != 0
      :                          @2912
 41536: 33 0a 9f 24              a3 = 0x249f
 41540: cd 7a 08                 a1 = a3 %u a0
 41543: 51 08 2b 01              jump @2942 if a1 == 0
      :                          @2913
 41547: 33 08 01                 a1 = 0x1
 41550: 64 49                    a2 = t2
 41552: 28 0b                    jump @2915
      :                          @2914
 41554: 98 99 01                 a2 = a2 >> 0x1
 41557: ca aa 0a                 a3 = a3 * a3
 41560: 51 09 14                 jump @2917 if a2 == 0
      :                          @2915
 41563: 84 9b 01                 a4 = a2 & 0x1
 41566: cd 7a 0a                 a3 = a3 %u a0
 41569: 51 0b f1                 jump @2914 if a4 == 0
      :                          @2916
 41572: ca 8a 08                 a1 = a3 * a1
 41575: cd 78 08                 a1 = a1 %u a0
 41578: 28 e8                    jump @2914
      :                          @2917
 41580: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41583: 8e 99                    a2 = a2 >u 0
 41585: d3 48 08                 a1 = a1 ^ t2
 41588: 8e 88                    a1 = a1 >u 0
 41590: d2 98 08                 a1 = a1 & a2
 41593: 52 08 04 01              jump @2943 if a1 != 0
      :                          @2918
 41597: 33 0a 12 6e              a3 = 0x6e12
 41601: cd 7a 08                 a1 = a3 %u a0
 41604: 51 08 ee 00              jump @2942 if a1 == 0
      :                          @2919
 41608: 33 08 01                 a1 = 0x1
 41611: 64 49                    a2 = t2
 41613: 28 0b                    jump @2921
      :                          @2920
 41615: 98 99 01                 a2 = a2 >> 0x1
 41618: ca aa 0a                 a3 = a3 * a3
 41621: 51 09 14                 jump @2923 if a2 == 0
      :                          @2921
 41624: 84 9b 01                 a4 = a2 & 0x1
 41627: cd 7a 0a                 a3 = a3 %u a0
 41630: 51 0b f1                 jump @2920 if a4 == 0
      :                          @2922
 41633: ca 8a 08                 a1 = a3 * a1
 41636: cd 78 08                 a1 = a1 %u a0
 41639: 28 e8                    jump @2920
      :                          @2923
 41641: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41644: 8e 99                    a2 = a2 >u 0
 41646: d3 48 08                 a1 = a1 ^ t2
 41649: 8e 88                    a1 = a1 >u 0
 41651: d2 98 08                 a1 = a1 & a2
 41654: 52 08 c7 00              jump @2943 if a1 != 0
      :                          @2924
 41658: 33 0a d7 e0 06           a3 = 0x6e0d7
 41663: cd 7a 08                 a1 = a3 %u a0
 41666: 51 08 b0 00              jump @2942 if a1 == 0
      :                          @2925
 41670: 33 08 01                 a1 = 0x1
 41673: 64 49                    a2 = t2
 41675: 28 0b                    jump @2927
      :                          @2926
 41677: 98 99 01                 a2 = a2 >> 0x1
 41680: ca aa 0a                 a3 = a3 * a3
 41683: 51 09 14                 jump @2929 if a2 == 0
      :                          @2927
 41686: 84 9b 01                 a4 = a2 & 0x1
 41689: cd 7a 0a                 a3 = a3 %u a0
 41692: 51 0b f1                 jump @2926 if a4 == 0
      :                          @2928
 41695: ca 8a 08                 a1 = a3 * a1
 41698: cd 78 08                 a1 = a1 %u a0
 41701: 28 e8                    jump @2926
      :                          @2929
 41703: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41706: 8e 99                    a2 = a2 >u 0
 41708: d3 48 08                 a1 = a1 ^ t2
 41711: 8e 88                    a1 = a1 >u 0
 41713: d2 98 08                 a1 = a1 & a2
 41716: 52 08 89 00              jump @2943 if a1 != 0
      :                          @2930
 41720: 33 0a 18 3d 95 00        a3 = 0x953d18
 41726: cd 7a 08                 a1 = a3 %u a0
 41729: 51 08 71                 jump @2942 if a1 == 0
      :                          @2931
 41732: 33 08 01                 a1 = 0x1
 41735: 64 49                    a2 = t2
 41737: 28 0b                    jump @2933
      :                          @2932
 41739: 98 99 01                 a2 = a2 >> 0x1
 41742: ca aa 0a                 a3 = a3 * a3
 41745: 51 09 14                 jump @2935 if a2 == 0
      :                          @2933
 41748: 84 9b 01                 a4 = a2 & 0x1
 41751: cd 7a 0a                 a3 = a3 %u a0
 41754: 51 0b f1                 jump @2932 if a4 == 0
      :                          @2934
 41757: ca 8a 08                 a1 = a3 * a1
 41760: cd 78 08                 a1 = a1 %u a0
 41763: 28 e8                    jump @2932
      :                          @2935
 41765: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41768: 8e 99                    a2 = a2 >u 0
 41770: d3 48 08                 a1 = a1 ^ t2
 41773: 8e 88                    a1 = a1 >u 0
 41775: d2 98 08                 a1 = a1 & a2
 41778: 52 08 4b                 jump @2943 if a1 != 0
      :                          @2936
 41781: 33 0a fe 91 01 6b        a3 = 0x6b0191fe
 41787: cd 7a 08                 a1 = a3 %u a0
 41790: 51 08 34                 jump @2942 if a1 == 0
      :                          @2937
 41793: 33 08 01                 a1 = 0x1
 41796: 64 49                    a2 = t2
 41798: 28 0b                    jump @2939
      :                          @2938
 41800: 98 99 01                 a2 = a2 >> 0x1
 41803: ca aa 0a                 a3 = a3 * a3
 41806: 51 09 14                 jump @2941 if a2 == 0
      :                          @2939
 41809: 84 9b 01                 a4 = a2 & 0x1
 41812: cd 7a 0a                 a3 = a3 %u a0
 41815: 51 0b f1                 jump @2938 if a4 == 0
      :                          @2940
 41818: ca 8a 08                 a1 = a3 * a1
 41821: cd 78 08                 a1 = a1 %u a0
 41824: 28 e8                    jump @2938
      :                          @2941
 41826: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41829: 8e 99                    a2 = a2 >u 0
 41831: d3 48 08                 a1 = a1 ^ t2
 41834: 8e 88                    a1 = a1 >u 0
 41836: d2 98 08                 a1 = a1 & a2
 41839: 52 08 0e                 jump @2943 if a1 != 0
      :                          @2942
 41842: 82 15 08                 s0 = u64 [sp + 0x8]
 41845: 82 16                    s1 = u64 [sp]
 41847: 95 11 10                 sp = sp + 0x10
 41850: 28 76 fc                 jump @2866
      :                          @2943
 41853: 33 07                    a0 = 0
 41855: 82 15 08                 s0 = u64 [sp + 0x8]
 41858: 82 16                    s1 = u64 [sp]
 41860: 95 11 10                 sp = sp + 0x10
 41863: 32 00                    ret
      :                          @2944
 41865: 55 17 02 08              jump @2946 if a0 >=u 2
      :                          @2945
 41869: 28 c1 b5 01              jump @11033
      :                          @2946
 41873: 64 79                    a2 = a0
 41875: 01                       fallthrough
      :                          @2947
 41876: 51 09 15                 jump @2950 if a2 == 0
      :                          @2948
 41879: 64 98                    a1 = a2
 41881: cb 97 09                 a2 = a0 /u a2
 41884: c8 89 09                 a2 = a2 + a1
 41887: 98 99 01                 a2 = a2 >> 0x1
 41890: ac 89 f2                 jump @2947 if a2 <u a1
      :                          @2949
 41893: 64 87                    a0 = a1
 41895: 32 00                    ret
      :                          @2950
 41897: 00                       trap
      :                          @2951
 41898: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 41901: 7b 15 08                 u64 [sp + 0x8] = s0
 41904: 7b 16                    u64 [sp] = s1
 41906: 82 78                    a1 = u64 [a0]
 41908: 82 73 08                 t1 = u64 [a0 + 0x8]
 41911: 82 72 10                 t0 = u64 [a0 + 0x10]
 41914: 82 7a 18                 a3 = u64 [a0 + 0x18]
 41917: 82 79 20                 a2 = u64 [a0 + 0x20]
 41920: 82 74 28                 t2 = u64 [a0 + 0x28]
 41923: 82 7c 30                 a5 = u64 [a0 + 0x30]
 41926: 82 7b 38                 a4 = u64 [a0 + 0x38]
 41929: 82 77 40                 a0 = u64 [a0 + 0x40]
 41932: 51 08 0c                 jump @2953 if a1 == 0
      :                          @2952
 41935: ca 89 05                 s0 = a2 * a1
 41938: ca a3 06                 s1 = t1 * a3
 41941: ab 65 39                 jump @2954 if s0 != s1
      :                          @2953
 41944: ca 97 05                 s0 = a0 * a2
 41947: ca 4b 06                 s1 = a4 * t2
 41950: c9 65 05                 s0 = s0 - s1
 41953: ca 85 08                 a1 = s0 * a1
 41956: ca a7 07                 a0 = a0 * a3
 41959: ca 4c 06                 s1 = a5 * t2
 41962: c9 76 06                 s1 = s1 - a0
 41965: ca 36 07                 a0 = s1 * t1
 41968: ca ab 0a                 a3 = a4 * a3
 41971: ca 9c 09                 a2 = a5 * a2
 41974: c9 9a 0a                 a3 = a3 - a2
 41977: ca 2a 09                 a2 = a3 * t0
 41980: c8 98 08                 a1 = a1 + a2
 41983: c8 87 07                 a0 = a0 + a1
 41986: 82 15 08                 s0 = u64 [sp + 0x8]
 41989: 82 16                    s1 = u64 [sp]
 41991: 95 11 10                 sp = sp + 0x10
 41994: 28 26 b8 01              jump @11046
      :                          @2954
 41998: ca 87 07                 a0 = a0 * a1
 42001: ca c2 09                 a2 = t0 * a5
 42004: c9 97 07                 a0 = a0 - a2
 42007: ca 8b 09                 a2 = a4 * a1
 42010: ca c3 0b                 a4 = t1 * a5
 42013: c9 9b 0b                 a4 = a4 - a2
 42016: ca 84 09                 a2 = t2 * a1
 42019: ca a2 0a                 a3 = t0 * a3
 42022: c9 a9 09                 a2 = a2 - a3
 42025: c9 65 05                 s0 = s0 - s1
 42028: ca 57 07                 a0 = a0 * s0
 42031: ca 9b 0a                 a3 = a4 * a2
 42034: c8 a7 07                 a0 = a0 + a3
 42037: 51 18 ff 13              jump @2956 if a1 == 4294967295
      :                          @2955
 42041: cc 87 07                 a0 = a0 /s a1
 42044: 82 15 08                 s0 = u64 [sp + 0x8]
 42047: 82 16                    s1 = u64 [sp]
 42049: 95 11 10                 sp = sp + 0x10
 42052: 28 ec b7 01              jump @11046
      :                          @2956
 42056: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 42066: aa 97 11                 jump @2958 if a0 == a2
      :                          @2957
 42069: 9a 77                    a0 = -a0
 42071: 82 15 08                 s0 = u64 [sp + 0x8]
 42074: 82 16                    s1 = u64 [sp]
 42076: 95 11 10                 sp = sp + 0x10
 42079: 28 d1 b7 01              jump @11046
      :                          @2958
 42083: 00                       trap
      :                          @2959
 42084: 82 72                    t0 = u64 [a0]
 42086: 82 79 08                 a2 = u64 [a0 + 0x8]
 42089: 82 7a 10                 a3 = u64 [a0 + 0x10]
 42092: 9a 28                    a1 = -t0
 42094: e3 82 0b                 a4 = maxs(t0, a1)
 42097: 51 09 40                 jump @2969 if a2 == 0
      :                          @2960
 42100: 9a 98                    a1 = -a2
 42102: e3 89 08                 a1 = maxs(a2, a1)
 42105: 01                       fallthrough
      :                          @2961
 42106: 64 8c                    a5 = a1
 42108: cd 8b 08                 a1 = a4 %u a1
 42111: 64 cb                    a4 = a5
 42113: 52 08 f9                 jump @2961 if a1 != 0
      :                          @2962
 42116: 82 7b 18                 a4 = u64 [a0 + 0x18]
 42119: 51 0a 32                 jump @2970 if a3 == 0
      :                          @2963
 42122: 9a a7                    a0 = -a3
 42124: e3 7a 08                 a1 = maxs(a3, a0)
 42127: 01                       fallthrough
      :                          @2964
 42128: 64 87                    a0 = a1
 42130: cd 8c 08                 a1 = a5 %u a1
 42133: 64 7c                    a5 = a0
 42135: 52 08 f9                 jump @2964 if a1 != 0
      :                          @2965
 42138: 51 0b 24                 jump @2971 if a4 == 0
      :                          @2966
 42141: 9a b8                    a1 = -a4
 42143: e3 8b 0c                 a5 = maxs(a4, a1)
 42146: 64 78                    a1 = a0
 42148: 01                       fallthrough
      :                          @2967
 42149: 64 c7                    a0 = a5
 42151: cd c8 0c                 a5 = a1 %u a5
 42154: 64 78                    a1 = a0
 42156: 52 0c f9                 jump @2967 if a5 != 0
      :                          @2968
 42159: 28 12                    jump @2972
      :                          @2969
 42161: 64 bc                    a5 = a4
 42163: 82 7b 18                 a4 = u64 [a0 + 0x18]
 42166: 52 0a d4                 jump @2963 if a3 != 0
      :                          @2970
 42169: 64 c7                    a0 = a5
 42171: 52 0b e2                 jump @2966 if a4 != 0
      :                          @2971
 42174: 51 07 16                 jump @2973 if a0 == 0
      :                          @2972
 42177: ca 2b 08                 a1 = a4 * t0
 42180: ca 9a 09                 a2 = a3 * a2
 42183: c9 98 08                 a1 = a1 - a2
 42186: 9a 89                    a2 = -a1
 42188: e3 98 08                 a1 = maxs(a1, a2)
 42191: cb 78 08                 a1 = a1 /u a0
 42194: 32 00                    ret
      :                          @2973
 42196: 00                       trap
      :                          @2974
 42197: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 42200: 7b 10 40                 u64 [sp + 0x40] = ra
 42203: 7b 15 38                 u64 [sp + 0x38] = s0
 42206: 7b 16 30                 u64 [sp + 0x30] = s1
 42209: 82 86                    s1 = u64 [a1]
 42211: 82 89 10                 a2 = u64 [a1 + 0x10]
 42214: 82 8a 08                 a3 = u64 [a1 + 0x8]
 42217: 82 8b 18                 a4 = u64 [a1 + 0x18]
 42220: d4 69 08                 a1 = a2 | s1
 42223: 64 75                    s0 = a0
 42225: 51 08 89 00              jump @2982 if a1 == 0
      :                          @2975
 42229: 7b 1a                    u64 [sp] = a3
 42231: 7b 1b 08                 u64 [sp + 0x8] = a4
 42234: 95 17 18                 a0 = sp + 0x18
 42237: 64 68                    a1 = s1
 42239: 7b 19 10                 u64 [sp + 0x10] = a2
 42242: 50 20 be 02 2a e6        ra = 702, jump @2409
      :                          @2976 [@dyn 351]
 42248: 82 17 18                 a0 = u64 [sp + 0x18]
 42251: 51 07 8d 00              jump @2986 if a0 == 0
      :                          @2977
 42255: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 42265: d3 86 09                 a2 = s1 ^ a1
 42268: e1 79 09                 a2 = a2 | ~a0
 42271: 51 09 77                 jump @2984 if a2 == 0
      :                          @2978
 42274: 82 12 10                 t0 = u64 [sp + 0x10]
 42277: d3 82 08                 a1 = t0 ^ a1
 42280: e1 78 08                 a1 = a1 | ~a0
 42283: 51 08 6b                 jump @2984 if a1 == 0
      :                          @2979
 42286: 82 18 20                 a1 = u64 [sp + 0x20]
 42289: 82 19 28                 a2 = u64 [sp + 0x28]
 42292: 82 1c                    a5 = u64 [sp]
 42294: ca c8 08                 a1 = a1 * a5
 42297: 82 1b 08                 a4 = u64 [sp + 0x8]
 42300: ca b9 09                 a2 = a2 * a4
 42303: c8 98 08                 a1 = a1 + a2
 42306: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 42316: d3 98 0a                 a3 = a1 ^ a2
 42319: e1 7a 0a                 a3 = a3 | ~a0
 42322: 51 0a 45                 jump @2985 if a3 == 0
      :                          @2980
 42325: ce 78 08                 a1 = a1 %s a0
 42328: c8 78 08                 a1 = a1 + a0
 42331: d3 89 09                 a2 = a2 ^ a1
 42334: e1 79 09                 a2 = a2 | ~a0
 42337: 51 09 36                 jump @2985 if a2 == 0
      :                          @2981
 42340: cc 76 09                 a2 = s1 /s a0
 42343: cc 72 0a                 a3 = t0 /s a0
 42346: ca ca 0a                 a3 = a3 * a5
 42349: ce 78 08                 a1 = a1 %s a0
 42352: ca b9 09                 a2 = a2 * a4
 42355: c9 a9 0b                 a4 = a2 - a3
 42358: 64 8a                    a3 = a1
 42360: 28 05                    jump @2983
      :                          @2982
 42362: 33 07                    a0 = 0
 42364: 01                       fallthrough
      :                          @2983
 42365: 7b 57                    u64 [s0] = a0
 42367: 7b 5a 08                 u64 [s0 + 0x8] = a3
 42370: 7b 5b 18                 u64 [s0 + 0x18] = a4
 42373: 49 15 10                 u64 [s0 + 16] = 0
 42376: 82 10 40                 ra = u64 [sp + 0x40]
 42379: 82 15 38                 s0 = u64 [sp + 0x38]
 42382: 82 16 30                 s1 = u64 [sp + 0x30]
 42385: 95 11 48                 sp = sp + 0x48
 42388: 32 00                    ret
      :                          @2984
 42390: 00                       trap
      :                          @2985
 42391: 00                       trap
      :                          @2986
 42392: 00                       trap
      :                          @2987
 42393: 64 82                    t0 = a1
 42395: 64 93                    t1 = a2
 42397: ca 88 0c                 a5 = a1 * a1
 42400: ca 99 08                 a1 = a2 * a2
 42403: c8 8c 0c                 a5 = a5 + a1
 42406: 51 0c 39                 jump @2991 if a5 == 0
      :                          @2988
 42409: 97 c8 01                 a1 = a5 << 0x1
 42412: 51 08 45                 jump @2993 if a1 == 0
      :                          @2989
 42415: ca a2 04                 t2 = t0 * a3
 42418: ca b3 09                 a2 = t1 * a4
 42421: c8 49 09                 a2 = a2 + t2
 42424: 97 99 01                 a2 = a2 << 0x1
 42427: c8 c9 09                 a2 = a2 + a5
 42430: cc 89 09                 a2 = a2 /s a1
 42433: ca 29 08                 a1 = a2 * t0
 42436: c9 8a 08                 a1 = a3 - a1
 42439: ca 39 09                 a2 = a2 * t1
 42442: c9 9b 09                 a2 = a4 - a2
 42445: ca 88 0a                 a3 = a1 * a1
 42448: ca 99 0b                 a4 = a2 * a2
 42451: c8 ba 04                 t2 = a3 + a4
 42454: 64 3b                    a4 = t1
 42456: 64 2a                    a3 = t0
 42458: ad c4 bf                 jump @2987 if t2 <s a5
      :                          @2990
 42461: 28 07                    jump @2992
      :                          @2991
 42463: 64 b9                    a2 = a4
 42465: 64 a8                    a1 = a3
 42467: 01                       fallthrough
      :                          @2992
 42468: 7b 72                    u64 [a0] = t0
 42470: 7b 73 08                 u64 [a0 + 0x8] = t1
 42473: 7b 78 10                 u64 [a0 + 0x10] = a1
 42476: 7b 79 18                 u64 [a0 + 0x18] = a2
 42479: 32 00                    ret
      :                          @2993
 42481: 00                       trap
      :                          @2994
 42482: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 42485: 7b 10 10                 u64 [sp + 0x10] = ra
 42488: 7b 15 08                 u64 [sp + 0x8] = s0
 42491: 7b 16                    u64 [sp] = s1
 42493: 51 08 34                 jump @2997 if a1 == 0
      :                          @2995
 42496: 64 85                    s0 = a1
 42498: 64 76                    s1 = a0
 42500: 33 08 01                 a1 = 0x1
 42503: 33 07                    a0 = 0
 42505: 64 59                    a2 = s0
 42507: 50 20 c0 02 70 63 02     ra = 704, jump @13631
      :                          @2996 [@dyn 352]
 42514: ca 68 08                 a1 = a1 * s1
 42517: d6 67 07                 a0 = a0 mulhu s1
 42520: c8 78 08                 a1 = a1 + a0
 42523: d8 58 09                 a2 = a1 <u s0
 42526: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
 42529: db 98 07                 a0 = a1 if a2 != 0
 42532: 82 10 10                 ra = u64 [sp + 0x10]
 42535: 82 15 08                 s0 = u64 [sp + 0x8]
 42538: 82 16                    s1 = u64 [sp]
 42540: 95 11 18                 sp = sp + 0x18
 42543: 32 00                    ret
      :                          @2997
 42545: 00                       trap
      :                          @2998
 42546: 82 ab                    a4 = u64 [a3]
 42548: 95 bc 80 00              a5 = a4 + 0x80
 42552: ac bc 98 02              jump @3048 if a5 <u a4
      :                          @2999
 42556: 95 c9 08                 a2 = a5 + 0x8
 42559: d8 c9 05                 s0 = a2 <u a5
 42562: d8 92 09                 a2 = t0 <u a2
 42565: d4 59 09                 a2 = a2 | s0
 42568: 52 09 88 02              jump @3048 if a2 != 0
      :                          @3000
 42572: c9 c3 05                 s0 = t1 - a5
 42575: c8 25 05                 s0 = s0 + t0
 42578: 84 59 07                 a2 = s0 & 0x7
 42581: c8 9c 0c                 a5 = a5 + a2
 42584: 01                       fallthrough
      :                          @3001
 42585: 82 a8                    a1 = u64 [a3]
 42587: ab b8 d7                 jump @2998 if a1 != a4
      :                          @3002
 42590: 7b ac                    u64 [a3] = a5
 42592: 01                       fallthrough
      :                          @3003
 42593: c9 95 06                 s1 = s0 - a2
 42596: 82 19 10                 a2 = u64 [sp + 0x10]
 42599: 95 98 ff                 a1 = a2 + 0xffffffffffffffff
 42602: 8e 85                    s0 = a1 >u 0
 42604: 7b 65                    u64 [s1] = s0
 42606: cd 97 07                 a0 = a0 %u a2
 42609: 7b 67 08                 u64 [s1 + 0x8] = a0
 42612: ca 77 08                 a1 = a0 * a0
 42615: cd 98 08                 a1 = a1 %u a2
 42618: 7b 68 10                 u64 [s1 + 0x10] = a1
 42621: ca 87 08                 a1 = a0 * a1
 42624: cd 98 08                 a1 = a1 %u a2
 42627: 7b 68 18                 u64 [s1 + 0x18] = a1
 42630: ca 87 08                 a1 = a0 * a1
 42633: cd 98 08                 a1 = a1 %u a2
 42636: 7b 68 20                 u64 [s1 + 0x20] = a1
 42639: ca 87 08                 a1 = a0 * a1
 42642: cd 98 08                 a1 = a1 %u a2
 42645: 7b 68 28                 u64 [s1 + 0x28] = a1
 42648: ca 87 08                 a1 = a0 * a1
 42651: cd 98 08                 a1 = a1 %u a2
 42654: 7b 68 30                 u64 [s1 + 0x30] = a1
 42657: ca 87 08                 a1 = a0 * a1
 42660: cd 98 08                 a1 = a1 %u a2
 42663: 7b 68 38                 u64 [s1 + 0x38] = a1
 42666: ca 87 08                 a1 = a0 * a1
 42669: cd 98 08                 a1 = a1 %u a2
 42672: 7b 68 40                 u64 [s1 + 0x40] = a1
 42675: ca 87 08                 a1 = a0 * a1
 42678: cd 98 08                 a1 = a1 %u a2
 42681: 7b 68 48                 u64 [s1 + 0x48] = a1
 42684: ca 87 08                 a1 = a0 * a1
 42687: cd 98 08                 a1 = a1 %u a2
 42690: 7b 68 50                 u64 [s1 + 0x50] = a1
 42693: ca 87 08                 a1 = a0 * a1
 42696: cd 98 08                 a1 = a1 %u a2
 42699: 7b 68 58                 u64 [s1 + 0x58] = a1
 42702: ca 87 08                 a1 = a0 * a1
 42705: cd 98 08                 a1 = a1 %u a2
 42708: 7b 68 60                 u64 [s1 + 0x60] = a1
 42711: ca 87 08                 a1 = a0 * a1
 42714: cd 98 08                 a1 = a1 %u a2
 42717: 7b 68 68                 u64 [s1 + 0x68] = a1
 42720: ca 87 08                 a1 = a0 * a1
 42723: cd 98 08                 a1 = a1 %u a2
 42726: 7b 68 70                 u64 [s1 + 0x70] = a1
 42729: ca 87 07                 a0 = a0 * a1
 42732: cd 97 07                 a0 = a0 %u a2
 42735: 7b 67 78                 u64 [s1 + 0x78] = a0
 42738: 49 11 38                 u64 [sp + 56] = 0
 42741: 33 00 01                 ra = 0x1
 42744: 7b 10 40                 u64 [sp + 0x40] = ra
 42747: 49 11 48                 u64 [sp + 72] = 0
 42750: 51 04 66 01              jump @3032 if t2 == 0
      :                          @3004
 42754: 7b 16 08                 u64 [sp + 0x8] = s1
 42757: 33 08                    a1 = 0
 42759: 33 07 01                 a0 = 0x1
 42762: 28 2a                    jump @3008
      :                          @3005
 42764: 95 17 38                 a0 = sp + 0x38
 42767: 64 46                    s1 = t2
 42769: 50 20 c2 02 7e ac        ra = 706, jump @1593
      :                          @3006 [@dyn 353]
 42775: 64 64                    t2 = s1
 42777: 82 16 48                 s1 = u64 [sp + 0x48]
 42780: 82 17 40                 a0 = u64 [sp + 0x40]
 42783: 01                       fallthrough
      :                          @3007
 42784: 84 48 01                 a1 = t2 & 0x1
 42787: c8 67 09                 a2 = a0 + s1
 42790: 78 98                    u8 [a2] = a1
 42792: 95 68 01                 a1 = s1 + 0x1
 42795: 98 44 01                 t2 = t2 >> 0x1
 42798: 7b 18 48                 u64 [sp + 0x48] = a1
 42801: 51 04 0d                 jump @3010 if t2 == 0
      :                          @3008
 42804: 82 19 38                 a2 = u64 [sp + 0x38]
 42807: aa 98 d5                 jump @3005 if a1 == a2
      :                          @3009
 42810: 64 86                    s1 = a1
 42812: 28 e4                    jump @3007
      :                          @3010
 42814: 82 10 40                 ra = u64 [sp + 0x40]
 42817: 98 87 01                 a0 = a1 >> 0x1
 42820: 51 07 1d                 jump @3013 if a0 == 0
      :                          @3011
 42823: c8 60 09                 a2 = ra + s1
 42826: 64 0a                    a3 = ra
 42828: 01                       fallthrough
      :                          @3012
 42829: 7c 9b                    a4 = u8 [a2]
 42831: 7c ac                    a5 = u8 [a3]
 42833: 78 ab                    u8 [a3] = a4
 42835: 78 9c                    u8 [a2] = a5
 42837: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 42840: 95 aa 01                 a3 = a3 + 0x1
 42843: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 42846: 52 07 ef                 jump @3012 if a0 != 0
      :                          @3013
 42849: 82 19 10                 a2 = u64 [sp + 0x10]
 42852: 51 08 fc 00              jump @3031 if a1 == 0
      :                          @3014
 42856: 7b 16                    u64 [sp] = s1
 42858: 33 03                    t1 = 0
 42860: 33 06 ff                 s1 = 0xffffffffffffffff
 42863: 7b 10 20                 u64 [sp + 0x20] = ra
 42866: 28 0f                    jump @3016
      :                          @3015
 42868: ca 55 07                 a0 = s0 * s0
 42871: 95 33 01                 t1 = t1 + 0x1
 42874: cd 97 05                 s0 = a0 %u a2
 42877: ae 83 e3 00              jump @3031 if t1 >=u a1
      :                          @3016
 42881: c8 30 07                 a0 = ra + t1
 42884: 7c 77                    a0 = u8 [a0]
 42886: 51 07 ee                 jump @3015 if a0 == 0
      :                          @3017
 42889: c9 38 07                 a0 = a1 - t1
 42892: 33 09 04                 a2 = 0x4
 42895: e6 97 0c                 a5 = minu(a0, a2)
 42898: 7b 18 18                 u64 [sp + 0x18] = a1
 42901: e4 38 07                 a0 = maxu(a1, t1)
 42904: 7b 13 30                 u64 [sp + 0x30] = t1
 42907: c9 37 07                 a0 = a0 - t1
 42910: 33 02 01                 t0 = 0x1
 42913: 53 1c 02 62              jump @3024 if a5 <u 2
      :                          @3018
 42917: 82 19 30                 a2 = u64 [sp + 0x30]
 42920: 82 18 18                 a1 = u64 [sp + 0x18]
 42923: e6 89 09                 a2 = minu(a2, a1)
 42926: 82 1b                    a4 = u64 [sp]
 42928: c9 9b 0b                 a4 = a4 - a2
 42931: 33 08 02                 a1 = 0x2
 42934: 33 02 01                 t0 = 0x1
 42937: 7b 1c 28                 u64 [sp + 0x28] = a5
 42940: 01                       fallthrough
      :                          @3019
 42941: 64 8a                    a3 = a1
 42943: d8 c8 04                 t2 = a1 <u a5
 42946: c8 48 08                 a1 = a1 + t2
 42949: 33 09 01                 a2 = 0x1
 42952: e4 9a 09                 a2 = maxu(a3, a2)
 42955: 9a 90                    ra = -a2
 42957: 33 03 ff                 t1 = 0xffffffffffffffff
 42960: 01                       fallthrough
      :                          @3020
 42961: aa 3b fc 00              jump @3045 if a4 == t1
      :                          @3021
 42965: 95 33 01                 t1 = t1 + 0x1
 42968: c8 30 09                 a2 = ra + t1
 42971: ab 69 f6                 jump @3020 if a2 != s1
      :                          @3022
 42974: 82 19 30                 a2 = u64 [sp + 0x30]
 42977: c8 93 03                 t1 = t1 + a2
 42980: 82 10 20                 ra = u64 [sp + 0x20]
 42983: c8 03 03                 t1 = t1 + ra
 42986: 7c 39                    a2 = u8 [t1]
 42988: 84 99 01                 a2 = a2 & 0x1
 42991: 82 1c 28                 a5 = u64 [sp + 0x28]
 42994: 51 09 11                 jump @3024 if a2 == 0
      :                          @3023
 42997: d8 8c 09                 a2 = a5 <u a1
 43000: 85 99 01                 a2 = a2 ^ 0x1
 43003: d2 94 09                 a2 = t2 & a2
 43006: 64 a2                    t0 = a3
 43008: 52 09 bd                 jump @3019 if a2 != 0
      :                          @3024
 43011: 33 09 01                 a2 = 0x1
 43014: 64 28                    a1 = t0
 43016: e4 92 0b                 a4 = maxu(t0, a2)
 43019: 33 02                    t0 = 0
 43021: 82 13 30                 t1 = u64 [sp + 0x30]
 43024: 64 39                    a2 = t1
 43026: 64 ba                    a3 = a4
 43028: 01                       fallthrough
      :                          @3025
 43029: 51 07 b9 00              jump @3046 if a0 == 0
      :                          @3026
 43033: c8 90 0c                 a5 = ra + a2
 43036: 7c cc                    a5 = u8 [a5]
 43038: 97 22 01                 t0 = t0 << 0x1
 43041: d4 c2 02                 t0 = t0 | a5
 43044: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 43047: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 43050: 95 99 01                 a2 = a2 + 0x1
 43053: 52 0a e8                 jump @3025 if a3 != 0
      :                          @3027
 43056: 82 19 10                 a2 = u64 [sp + 0x10]
 43059: 01                       fallthrough
      :                          @3028
 43060: ca 55 07                 a0 = s0 * s0
 43063: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 43066: cd 97 05                 s0 = a0 %u a2
 43069: 52 0b f7                 jump @3028 if a4 != 0
      :                          @3029
 43072: 55 12 10 8f 00           jump @3047 if t0 >=u 16
      :                          @3030
 43077: 97 22 03                 t0 = t0 << 0x3
 43080: 82 17 08                 a0 = u64 [sp + 0x8]
 43083: c8 72 02                 t0 = t0 + a0
 43086: 82 27                    a0 = u64 [t0]
 43088: ca 57 07                 a0 = a0 * s0
 43091: c8 83 03                 t1 = t1 + a1
 43094: 82 18 18                 a1 = u64 [sp + 0x18]
 43097: cd 97 05                 s0 = a0 %u a2
 43100: ac 83 25 ff              jump @3016 if t1 <u a1
      :                          @3031
 43104: 82 16 08                 s1 = u64 [sp + 0x8]
 43107: 01                       fallthrough
      :                          @3032
 43108: 82 17 38                 a0 = u64 [sp + 0x38]
 43111: 51 07 35                 jump @3039 if a0 == 0
      :                          @3033
 43114: 56 37 00 00 10 32        jump @3039 if a0 >u 1048576
      :                          @3034
 43120: 33 09 b0 02 03           a2 = 0x302b0
 43125: 95 98 00 00 10           a1 = a2 + 0x100000
 43130: 01                       fallthrough
      :                          @3035
 43131: 82 89                    a2 = u64 [a1]
 43133: c9 98 0a                 a3 = a1 - a2
 43136: ab 0a 1c                 jump @3039 if a3 != ra
      :                          @3036
 43139: c9 79 0a                 a3 = a2 - a0
 43142: 01                       fallthrough
      :                          @3037
 43143: 82 8b                    a4 = u64 [a1]
 43145: ab 9b f2                 jump @3035 if a4 != a2
      :                          @3038
 43148: 7b 8a                    u64 [a1] = a3
 43150: 33 0c                    a5 = 0
 43152: 33 07 b0 02 03           a0 = 0x302b0
 43157: 95 77 00 00 10           a0 = a0 + 0x100000
 43162: 28 0d                    jump @3040
      :                          @3039
 43164: 33 07 b0 02 03           a0 = 0x302b0
 43169: 95 77 00 00 10           a0 = a0 + 0x100000
 43174: 01                       fallthrough
      :                          @3040
 43175: 82 78                    a1 = u64 [a0]
 43177: c9 87 09                 a2 = a0 - a1
 43180: ab 69 11                 jump @3044 if a2 != s1
      :                          @3041
 43183: 95 89 80                 a2 = a1 + 0xffffffffffffff80
 43186: 01                       fallthrough
      :                          @3042
 43187: 82 7a                    a3 = u64 [a0]
 43189: ab 8a f2                 jump @3040 if a3 != a1
      :                          @3043
 43192: 7b 79                    u64 [a0] = a2
 43194: 33 0b                    a4 = 0
 43196: 01                       fallthrough
      :                          @3044
 43197: 64 57                    a0 = s0
 43199: 82 10 60                 ra = u64 [sp + 0x60]
 43202: 82 15 58                 s0 = u64 [sp + 0x58]
 43205: 82 16 50                 s1 = u64 [sp + 0x50]
 43208: 95 11 68                 sp = sp + 0x68
 43211: 32 00                    ret
      :                          @3045
 43213: 00                       trap
      :                          @3046
 43214: 00                       trap
      :                          @3047
 43215: 00                       trap
      :                          @3048
 43216: 00                       trap
      :                          @3049
 43217: 33 0a 02                 a3 = 0x2
 43220: ae a8 09                 jump @3052 if a1 >=u a3
      :                          @3050
 43223: 33 07                    a0 = 0
 43225: 32 00                    ret
      :                          @3051
 43227: 32 00                    ret
      :                          @3052
 43229: 64 79                    a2 = a0
 43231: 33 0c                    a5 = 0
 43233: 95 87 ff                 a0 = a1 + 0xffffffffffffffff
 43236: 97 8a 03                 a3 = a1 << 0x3
 43239: c8 9a 0a                 a3 = a3 + a2
 43242: 95 a4 f8                 t2 = a3 + 0xfffffffffffffff8
 43245: 33 02 01                 t0 = 0x1
 43248: 01                       fallthrough
      :                          @3053
 43249: c8 c8 09                 a2 = a1 + a5
 43252: aa 29 e3                 jump @3050 if a2 == t0
      :                          @3054
 43255: 82 ab f0                 a4 = u64 [a3 + 0xfffffffffffffff0]
 43258: 82 a3 f8                 t1 = u64 [a3 + 0xfffffffffffffff8]
 43261: 95 a9 f8                 a2 = a3 + 0xfffffffffffffff8
 43264: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 43267: 64 9a                    a3 = a2
 43269: ae 3b ec                 jump @3053 if a4 >=u t1
      :                          @3055
 43272: c8 c8 03                 t1 = a1 + a5
 43275: 9a c2                    t0 = -a5
 43277: 64 4c                    a5 = t2
 43279: 01                       fallthrough
      :                          @3056
 43280: 82 ca                    a3 = u64 [a5]
 43282: ac ab 0d                 jump @3059 if a4 <u a3
      :                          @3057
 43285: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 43288: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 43291: ac 87 f5                 jump @3056 if a0 <u a1
      :                          @3058
 43294: 00                       trap
      :                          @3059
 43295: 7b 9a f8                 u64 [a2 + 0xfffffffffffffff8] = a3
 43298: 7b cb                    u64 [a5] = a4
 43300: c9 38 08                 a1 = a1 - t1
 43303: 33 0a 02                 a3 = 0x2
 43306: 33 07 01                 a0 = 0x1
 43309: ac a8 ae                 jump @3051 if a1 <u a3
      :                          @3060
 43312: 98 28 01                 a1 = t0 >> 0x1
 43315: 01                       fallthrough
      :                          @3061
 43316: 82 4a                    a3 = u64 [t2]
 43318: 82 9b                    a4 = u64 [a2]
 43320: 7b 9a                    u64 [a2] = a3
 43322: 7b 4b                    u64 [t2] = a4
 43324: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 43327: 95 99 08                 a2 = a2 + 0x8
 43330: 95 44 f8                 t2 = t2 + 0xfffffffffffffff8
 43333: 52 08 ef                 jump @3061 if a1 != 0
      :                          @3062
 43336: 28 93                    jump @3051
      :                          @3063
 43338: c8 a8 02                 t0 = a1 + a3
 43341: 51 02 42                 jump @3069 if t0 == 0
      :                          @3064
 43344: 82 74 f8                 t2 = u64 [a0 + 0xfffffffffffffff8]
 43347: 95 7b f8                 a4 = a0 + 0xfffffffffffffff8
 43350: 95 a9 ff                 a2 = a3 + 0xffffffffffffffff
 43353: 95 a3 09                 t1 = a3 + 0x9
 43356: 64 9a                    a3 = a2
 43358: 64 b7                    a0 = a4
 43360: ae 34 ea                 jump @3063 if t2 >=u t1
      :                          @3065
 43363: c8 98 07                 a0 = a1 + a2
 43366: 95 7a 01                 a3 = a0 + 0x1
 43369: 95 4c 01                 a5 = t2 + 0x1
 43372: 7b bc                    u64 [a4] = a5
 43374: ae 8a 21                 jump @3069 if a3 >=u a1
      :                          @3066
 43377: 85 9a ff                 a3 = a2 ^ 0xffffffffffffffff
 43380: 95 bb 08                 a4 = a4 + 0x8
 43383: 95 4c 02                 a5 = t2 + 0x2
 43386: 01                       fallthrough
      :                          @3067
 43387: ae 87 18                 jump @3070 if a0 >=u a1
      :                          @3068
 43390: 7b bc                    u64 [a4] = a5
 43392: 95 cc 01                 a5 = a5 + 0x1
 43395: 95 bb 08                 a4 = a4 + 0x8
 43398: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 43401: 95 77 01                 a0 = a0 + 0x1
 43404: 52 0a ef                 jump @3067 if a3 != 0
      :                          @3069
 43407: 8e 27                    a0 = t0 >u 0
 43409: 32 00                    ret
      :                          @3070
 43411: 00                       trap
      :                          @3071
 43412: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 43415: 7b 10 30                 u64 [sp + 0x30] = ra
 43418: 7b 15 28                 u64 [sp + 0x28] = s0
 43421: 7b 16 20                 u64 [sp + 0x20] = s1
 43424: 7b 17 08                 u64 [sp + 0x8] = a0
 43427: 51 08 3e 01              jump @3100 if a1 == 0
      :                          @3072
 43431: 57 08 4e 01              jump @3105 if a1 <s 0
      :                          @3073
 43435: 85 87 ff                 a0 = a1 ^ 0xffffffffffffffff
 43438: 98 77 3f                 a0 = a0 >> 0x3f
 43441: 33 0a b0 02 03           a3 = 0x302b0
 43446: 33 09 00 00 10           a2 = 0x100000
 43451: c8 9a 0a                 a3 = a3 + a2
 43454: 01                       fallthrough
      :                          @3074
 43455: 82 a5                    s0 = u64 [a3]
 43457: c8 85 06                 s1 = s0 + a1
 43460: ac 56 30 01              jump @3104 if s1 <u s0
      :                          @3075
 43464: c8 76 0b                 a4 = s1 + a0
 43467: d8 6b 0c                 a5 = a4 <u s1
 43470: d8 b9 0b                 a4 = a2 <u a4
 43473: d4 cb 0b                 a4 = a4 | a5
 43476: 52 0b 20 01              jump @3104 if a4 != 0
      :                          @3076
 43480: 82 ab                    a4 = u64 [a3]
 43482: ab 5b e5                 jump @3074 if a4 != s0
      :                          @3077
 43485: 7b a6                    u64 [a3] = s1
 43487: 33 0c                    a5 = 0
 43489: 7b 18 18                 u64 [sp + 0x18] = a1
 43492: 33 08 b0 02 03           a1 = 0x302b0
 43497: 7b 18                    u64 [sp] = a1
 43499: 95 87 00 00 10           a0 = a1 + 0x100000
 43504: c9 67 07                 a0 = a0 - s1
 43507: 7b 17 10                 u64 [sp + 0x10] = a0
 43510: 33 08                    a1 = 0
 43512: 82 19 18                 a2 = u64 [sp + 0x18]
 43515: 50 20 c4 02 12 62 02     ra = 708, jump @13689
      :                          @3078 [@dyn 354]
 43522: 33 07                    a0 = 0
 43524: 33 00                    ra = 0
 43526: 82 18                    a1 = u64 [sp]
 43528: 95 8a 00 00 10           a3 = a1 + 0x100000
 43533: 82 19 18                 a2 = u64 [sp + 0x18]
 43536: c9 5a 0a                 a3 = a3 - s0
 43539: 9a 98                    a1 = -a2
 43541: 7b 18                    u64 [sp] = a1
 43543: 9a 92 02                 t0 = 0x2 - a2
 43546: 33 04 01                 t2 = 0x1
 43549: 01                       fallthrough
      :                          @3079
 43550: 97 08 03                 a1 = ra << 0x3
 43553: 82 19 08                 a2 = u64 [sp + 0x8]
 43556: c8 98 08                 a1 = a1 + a2
 43559: 82 83                    t1 = u64 [a1]
 43561: 51 03 53                 jump @3089 if t1 == 0
      :                          @3080
 43564: 33 06                    s1 = 0
 43566: 82 15                    s0 = u64 [sp]
 43568: 64 38                    a1 = t1
 43570: 01                       fallthrough
      :                          @3081
 43571: 51 05 bf 00              jump @3102 if s0 == 0
      :                          @3082
 43575: c8 5a 09                 a2 = a3 + s0
 43578: 7c 99                    a2 = u8 [a2]
 43580: 88 99 01                 a2 = a2 <u 0x1
 43583: be 96 06                 i32 s1 = s1 + a2
 43586: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 43589: 95 55 01                 s0 = s0 + 0x1
 43592: 52 08 eb                 jump @3081 if a1 != 0
      :                          @3083
 43595: 85 05 ff                 s0 = ra ^ 0xffffffffffffffff
 43598: 82 18 18                 a1 = u64 [sp + 0x18]
 43601: c8 85 05                 s0 = s0 + a1
 43604: 51 05 36                 jump @3090 if s0 == 0
      :                          @3084
 43607: 64 58                    a1 = s0
 43609: aa 45 18                 jump @3087 if s0 == t2
      :                          @3085
 43612: 33 08 01                 a1 = 0x1
 43615: 33 0b 01                 a4 = 0x1
 43618: 01                       fallthrough
      :                          @3086
 43619: 95 b9 01                 a2 = a4 + 0x1
 43622: c8 92 0c                 a5 = t0 + a2
 43625: ca 8b 08                 a1 = a4 * a1
 43628: 64 9b                    a4 = a2
 43630: ab 4c f5                 jump @3086 if a5 != t2
      :                          @3087
 43633: ca 58 09                 a2 = a1 * s0
 43636: 82 18 18                 a1 = u64 [sp + 0x18]
 43639: ac 83 1c                 jump @3091 if t1 <u a1
      :                          @3088
 43642: 28 79                    jump @3103
      :                          @3089
 43644: 33 06                    s1 = 0
 43646: 85 05 ff                 s0 = ra ^ 0xffffffffffffffff
 43649: 82 18 18                 a1 = u64 [sp + 0x18]
 43652: c8 85 05                 s0 = s0 + a1
 43655: 52 05 d0                 jump @3084 if s0 != 0
      :                          @3090
 43658: 33 09 01                 a2 = 0x1
 43661: 82 18 18                 a1 = u64 [sp + 0x18]
 43664: ae 83 63                 jump @3103 if t1 >=u a1
      :                          @3091
 43667: 95 00 01                 ra = ra + 0x1
 43670: ca 69 09                 a2 = a2 * s1
 43673: c8 97 07                 a0 = a0 + a2
 43676: 82 19 10                 a2 = u64 [sp + 0x10]
 43679: c8 93 03                 t1 = t1 + a2
 43682: 78 34                    u8 [t1] = t2
 43684: 95 22 01                 t0 = t0 + 0x1
 43687: ab 80 77 ff              jump @3079 if ra != a1
      :                          @3092
 43691: 33 0a 00 00 f0           a3 = 0xfffffffffff00000
 43696: 95 89 ff ff ef           a2 = a1 + 0xffffffffffefffff
 43701: ac a9 2f                 jump @3101 if a2 <u a3
      :                          @3093
 43704: 33 06 b0 02 03           s1 = 0x302b0
 43709: 95 66 00 00 10           s1 = s1 + 0x100000
 43714: 01                       fallthrough
      :                          @3094
 43715: 82 69                    a2 = u64 [s1]
 43717: c9 96 0a                 a3 = s1 - a2
 43720: 82 1b 10                 a4 = u64 [sp + 0x10]
 43723: ab ba 19                 jump @3101 if a3 != a4
      :                          @3095
 43726: c9 89 0a                 a3 = a2 - a1
 43729: 01                       fallthrough
      :                          @3096
 43730: 82 6b                    a4 = u64 [s1]
 43732: ab 9b ef                 jump @3094 if a4 != a2
      :                          @3097
 43735: 7b 6a                    u64 [s1] = a3
 43737: 33 0c                    a5 = 0
 43739: 01                       fallthrough
      :                          @3098
 43740: ab 9b e7                 jump @3094 if a4 != a2
      :                          @3099
 43743: 28 05                    jump @3101
      :                          @3100
 43745: 33 07                    a0 = 0
 43747: 01                       fallthrough
      :                          @3101
 43748: 82 10 30                 ra = u64 [sp + 0x30]
 43751: 82 15 28                 s0 = u64 [sp + 0x28]
 43754: 82 16 20                 s1 = u64 [sp + 0x20]
 43757: 95 11 38                 sp = sp + 0x38
 43760: 32 00                    ret
      :                          @3102
 43762: 00                       trap
      :                          @3103
 43763: 00                       trap
      :                          @3104
 43764: 00                       trap
      :                          @3105
 43765: 00                       trap
      :                          @3106
 43766: 82 ab                    a4 = u64 [a3]
 43768: 95 bc 28                 a5 = a4 + 0x28
 43771: ac bc 73 01              jump @3127 if a5 <u a4
      :                          @3107
 43775: 95 c9 08                 a2 = a5 + 0x8
 43778: d8 c9 06                 s1 = a2 <u a5
 43781: d8 92 09                 a2 = t0 <u a2
 43784: d4 69 09                 a2 = a2 | s1
 43787: 52 09 63 01              jump @3127 if a2 != 0
      :                          @3108
 43791: c9 c3 06                 s1 = t1 - a5
 43794: c8 26 06                 s1 = s1 + t0
 43797: 84 69 07                 a2 = s1 & 0x7
 43800: c8 9c 0c                 a5 = a5 + a2
 43803: 01                       fallthrough
      :                          @3109
 43804: 82 a5                    s0 = u64 [a3]
 43806: ab b5 d8                 jump @3106 if s0 != a4
      :                          @3110
 43809: 7b ac                    u64 [a3] = a5
 43811: c9 96 00                 ra = s1 - a2
 43814: 49 00                    u64 [ra + 0] = 0
 43816: 49 10 08 01              u64 [ra + 8] = 0x1
 43820: 49 10 10 02              u64 [ra + 16] = 0x2
 43824: 49 10 18 03              u64 [ra + 24] = 0x3
 43828: 49 10 20 04              u64 [ra + 32] = 0x4
 43832: 33 07 b0 02 03           a0 = 0x302b0
 43837: 33 03 b0 02 03           t1 = 0x302b0
 43842: 33 02 00 00 10           t0 = 0x100000
 43847: c8 23 0a                 a3 = t1 + t0
 43850: 01                       fallthrough
      :                          @3111
 43851: 82 ab                    a4 = u64 [a3]
 43853: 95 b6 28                 s1 = a4 + 0x28
 43856: ac b6 1e 01              jump @3127 if s1 <u a4
      :                          @3112
 43860: 95 6c 08                 a5 = s1 + 0x8
 43863: d8 6c 05                 s0 = a5 <u s1
 43866: d8 c2 0c                 a5 = t0 <u a5
 43869: d4 5c 0c                 a5 = a5 | s0
 43872: 52 0c 0e 01              jump @3127 if a5 != 0
      :                          @3113
 43876: c9 63 05                 s0 = t1 - s1
 43879: c8 25 05                 s0 = s0 + t0
 43882: 84 5c 07                 a5 = s0 & 0x7
 43885: c8 c6 06                 s1 = s1 + a5
 43888: 01                       fallthrough
      :                          @3114
 43889: 82 a9                    a2 = u64 [a3]
 43891: ab b9 d8                 jump @3111 if a2 != a4
      :                          @3115
 43894: 7b a6                    u64 [a3] = s1
 43896: 01                       fallthrough
      :                          @3116
 43897: 7b 14 08                 u64 [sp + 0x8] = t2
 43900: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 43910: d6 78 07                 a0 = a1 mulhu a0
 43913: 98 77 04                 a0 = a0 >> 0x4
 43916: 55 18 78 e3 00           jump @3128 if a1 >=u 120
      :                          @3117
 43921: c9 c5 05                 s0 = s0 - a5
 43924: 96 79 e8 00              a2 = a0 * 0xe8
 43928: c8 89 06                 s1 = a2 + a1
 43931: 97 79 03                 a2 = a0 << 0x3
 43934: c8 90 07                 a0 = ra + a2
 43937: 82 78                    a1 = u64 [a0]
 43939: 7b 18                    u64 [sp] = a1
 43941: 95 78 08                 a1 = a0 + 0x8
 43944: 9a 99 20                 a2 = 0x20 - a2
 43947: 7b 10 10                 u64 [sp + 0x10] = ra
 43950: 50 20 c6 02 e4 5e 02     ra = 710, jump @13653
      :                          @3118 [@dyn 355]
 43957: 82 17                    a0 = u64 [sp]
 43959: 7b 57                    u64 [s0] = a0
 43961: 84 67 ff 00              a0 = s1 & 0xff
 43965: 96 77 ab 00              a0 = a0 * 0xab
 43969: 98 77 0a                 a0 = a0 >> 0xa
 43972: 96 78 06                 a1 = a0 * 0x6
 43975: bf 86 06                 i32 s1 = s1 - a1
 43978: 97 79 03                 a2 = a0 << 0x3
 43981: 82 17 10                 a0 = u64 [sp + 0x10]
 43984: c8 97 07                 a0 = a0 + a2
 43987: 82 78                    a1 = u64 [a0]
 43989: 7b 18                    u64 [sp] = a1
 43991: 95 78 08                 a1 = a0 + 0x8
 43994: 9a 99 18                 a2 = 0x18 - a2
 43997: 50 20 c8 02 b5 5e 02     ra = 712, jump @13653
      :                          @3119 [@dyn 356]
 44004: 82 17                    a0 = u64 [sp]
 44006: 7b 57 08                 u64 [s0 + 0x8] = a0
 44009: 84 67 01                 a0 = s1 & 0x1
 44012: 7b 17                    u64 [sp] = a0
 44014: 97 66 02                 s1 = s1 << 0x2
 44017: 84 69 f8 03              a2 = s1 & 0x3f8
 44021: 82 17 10                 a0 = u64 [sp + 0x10]
 44024: c8 97 07                 a0 = a0 + a2
 44027: 82 76                    s1 = u64 [a0]
 44029: 95 78 08                 a1 = a0 + 0x8
 44032: 9a 99 10                 a2 = 0x10 - a2
 44035: 50 20 ca 02 8f 5e 02     ra = 714, jump @13653
      :                          @3120 [@dyn 357]
 44042: 7b 56 10                 u64 [s0 + 0x10] = s1
 44045: 82 19                    a2 = u64 [sp]
 44047: 97 99 03                 a2 = a2 << 0x3
 44050: 82 17 10                 a0 = u64 [sp + 0x10]
 44053: c8 97 07                 a0 = a0 + a2
 44056: 82 76                    s1 = u64 [a0]
 44058: 95 78 08                 a1 = a0 + 0x8
 44061: 85 99 08                 a2 = a2 ^ 0x8
 44064: 50 20 cc 02 72 5e 02     ra = 716, jump @13653
      :                          @3121 [@dyn 358]
 44071: 82 1c 10                 a5 = u64 [sp + 0x10]
 44074: 7b 56 18                 u64 [s0 + 0x18] = s1
 44077: 82 c7                    a0 = u64 [a5]
 44079: 7b 57 20                 u64 [s0 + 0x20] = a0
 44082: 82 18 08                 a1 = u64 [sp + 0x8]
 44085: 49 08 05                 u64 [a1 + 0] = 0x5
 44088: 7b 85 08                 u64 [a1 + 0x8] = s0
 44091: 49 18 10 05              u64 [a1 + 16] = 0x5
 44095: 33 07 b0 02 03           a0 = 0x302b0
 44100: 95 77 00 00 10           a0 = a0 + 0x100000
 44105: 01                       fallthrough
      :                          @3122
 44106: 82 78                    a1 = u64 [a0]
 44108: c9 87 09                 a2 = a0 - a1
 44111: ab c9 11                 jump @3126 if a2 != a5
      :                          @3123
 44114: 95 89 d8                 a2 = a1 + 0xffffffffffffffd8
 44117: 01                       fallthrough
      :                          @3124
 44118: 82 7a                    a3 = u64 [a0]
 44120: ab 8a f2                 jump @3122 if a3 != a1
      :                          @3125
 44123: 7b 79                    u64 [a0] = a2
 44125: 33 0b                    a4 = 0
 44127: 01                       fallthrough
      :                          @3126
 44128: 82 10 28                 ra = u64 [sp + 0x28]
 44131: 82 15 20                 s0 = u64 [sp + 0x20]
 44134: 82 16 18                 s1 = u64 [sp + 0x18]
 44137: 95 11 30                 sp = sp + 0x30
 44140: 32 00                    ret
      :                          @3127
 44142: 00                       trap
      :                          @3128
 44143: 00                       trap
      :                          @3129
 44144: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 44147: 7b 10 18                 u64 [sp + 0x18] = ra
 44150: 7b 15 10                 u64 [sp + 0x10] = s0
 44153: 7b 16 08                 u64 [sp + 0x8] = s1
 44156: 7b 18                    u64 [sp] = a1
 44158: 33 04                    t2 = 0
 44160: 51 08 79                 jump @3142 if a1 == 0
      :                          @3130
 44163: 33 08                    a1 = 0
 44165: 33 00 0f                 ra = 0xf
 44168: 28 11                    jump @3133
      :                          @3131
 44170: c8 43 03                 t1 = t1 + t2
 44173: c9 23 04                 t2 = t1 - t0
 44176: 01                       fallthrough
      :                          @3132
 44177: 95 88 01                 a1 = a1 + 0x1
 44180: 82 19                    a2 = u64 [sp]
 44182: aa 98 63                 jump @3142 if a1 == a2
      :                          @3133
 44185: 97 89 03                 a2 = a1 << 0x3
 44188: 51 08 16                 jump @3136 if a1 == 0
      :                          @3134
 44191: c8 79 0a                 a3 = a2 + a0
 44194: 82 ac f8                 a5 = u64 [a3 + 0xfffffffffffffff8]
 44197: 95 c2 01                 t0 = a5 + 0x1
 44200: c8 79 09                 a2 = a2 + a0
 44203: 82 93                    t1 = u64 [a2]
 44205: ae 32 e4                 jump @3132 if t0 >=u t1
      :                          @3135
 44208: 28 0c                    jump @3137
      :                          @3136
 44210: 33 02                    t0 = 0
 44212: c8 79 09                 a2 = a2 + a0
 44215: 82 93                    t1 = u64 [a2]
 44217: 54 03 d8                 jump @3132 if t1 <=u 0
      :                          @3137
 44220: 85 8a ff                 a3 = a1 ^ 0xffffffffffffffff
 44223: 82 19                    a2 = u64 [sp]
 44225: c8 9a 0a                 a3 = a3 + a2
 44228: 51 0a c6                 jump @3131 if a3 == 0
      :                          @3138
 44231: 33 09 01                 a2 = 0x1
 44234: 33 05 01                 s0 = 0x1
 44237: 01                       fallthrough
      :                          @3139
 44238: d8 a5 06                 s1 = s0 <u a3
 44241: 85 6b 01                 a4 = s1 ^ 0x1
 44244: c8 52 0c                 a5 = t0 + s0
 44247: c8 56 06                 s1 = s1 + s0
 44250: c9 c0 0c                 a5 = ra - a5
 44253: ca 9c 09                 a2 = a5 * a2
 44256: d8 6a 0c                 a5 = a3 <u s1
 44259: d4 cb 0b                 a4 = a4 | a5
 44262: cb 59 09                 a2 = a2 /u s0
 44265: 64 65                    s0 = s1
 44267: 51 0b e3                 jump @3139 if a4 == 0
      :                          @3140
 44270: 95 22 01                 t0 = t0 + 0x1
 44273: c8 94 04                 t2 = t2 + a2
 44276: ab 32 d3                 jump @3138 if t0 != t1
      :                          @3141
 44279: 28 9a                    jump @3132
      :                          @3142
 44281: 64 47                    a0 = t2
 44283: 82 10 18                 ra = u64 [sp + 0x18]
 44286: 82 15 10                 s0 = u64 [sp + 0x10]
 44289: 82 16 08                 s1 = u64 [sp + 0x8]
 44292: 95 11 20                 sp = sp + 0x20
 44295: 32 00                    ret
      :                          @3143
 44297: 82 9a                    a3 = u64 [a2]
 44299: 95 ab 28                 a4 = a3 + 0x28
 44302: ac ab 5b 04              jump @3228 if a4 <u a3
      :                          @3144
 44306: 95 b7 08                 a0 = a4 + 0x8
 44309: d8 b7 0c                 a5 = a0 <u a4
 44312: d8 72 07                 a0 = t0 <u a0
 44315: d4 c7 07                 a0 = a0 | a5
 44318: 52 07 4b 04              jump @3228 if a0 != 0
      :                          @3145
 44322: c9 b5 07                 a0 = s0 - a4
 44325: c8 27 07                 a0 = a0 + t0
 44328: 84 7c 07                 a5 = a0 & 0x7
 44331: c8 cb 0b                 a4 = a4 + a5
 44334: 01                       fallthrough
      :                          @3146
 44335: 82 96                    s1 = u64 [a2]
 44337: ab a6 d8                 jump @3143 if s1 != a3
      :                          @3147
 44340: 7b 9b                    u64 [a2] = a4
 44342: c9 c7 02                 t0 = a0 - a5
 44345: 49 11 08 05              u64 [sp + 8] = 0x5
 44349: 7b 12 10                 u64 [sp + 0x10] = t0
 44352: 49 11 18                 u64 [sp + 24] = 0
 44355: 33 09 01                 a2 = 0x1
 44358: 33 08 0f                 a1 = 0xf
 44361: 33 0a 01                 a3 = 0x1
 44364: 01                       fallthrough
      :                          @3148
 44365: 88 a7 04                 a0 = a3 <u 0x4
 44368: c9 a8 0b                 a4 = a1 - a3
 44371: c8 7a 0c                 a5 = a3 + a0
 44374: ca 9b 09                 a2 = a4 * a2
 44377: 88 cb 05                 a4 = a5 <u 0x5
 44380: d2 b7 07                 a0 = a0 & a4
 44383: cb a9 09                 a2 = a2 /u a3
 44386: 64 ca                    a3 = a5
 44388: 52 07 e9                 jump @3148 if a0 != 0
      :                          @3149
 44391: ae 94 08                 jump @3151 if t2 >=u a2
      :                          @3150
 44394: 33 05                    s0 = 0
 44396: 28 57 02                 jump @3190
      :                          @3151
 44399: 33 08 01                 a1 = 0x1
 44402: 33 0a 0e                 a3 = 0xe
 44405: 33 0b 01                 a4 = 0x1
 44408: 01                       fallthrough
      :                          @3152
 44409: 88 b6 04                 s1 = a4 <u 0x4
 44412: c9 ba 0c                 a5 = a3 - a4
 44415: c8 6b 07                 a0 = a4 + s1
 44418: ca 8c 08                 a1 = a5 * a1
 44421: 88 7c 05                 a5 = a0 <u 0x5
 44424: d2 6c 0c                 a5 = a5 & s1
 44427: cb b8 08                 a1 = a1 /u a4
 44430: 64 7b                    a4 = a0
 44432: 52 0c e9                 jump @3152 if a5 != 0
      :                          @3153
 44435: c9 94 04                 t2 = t2 - a2
 44438: 33 05 01                 s0 = 0x1
 44441: ac 84 2a 02              jump @3190 if t2 <u a1
      :                          @3154
 44445: 33 09 01                 a2 = 0x1
 44448: 33 0a 0d                 a3 = 0xd
 44451: 33 0b 01                 a4 = 0x1
 44454: 01                       fallthrough
      :                          @3155
 44455: 88 b6 04                 s1 = a4 <u 0x4
 44458: c9 ba 0c                 a5 = a3 - a4
 44461: c8 6b 07                 a0 = a4 + s1
 44464: ca 9c 09                 a2 = a5 * a2
 44467: 88 7c 05                 a5 = a0 <u 0x5
 44470: d2 6c 0c                 a5 = a5 & s1
 44473: cb b9 09                 a2 = a2 /u a4
 44476: 64 7b                    a4 = a0
 44478: 52 0c e9                 jump @3155 if a5 != 0
      :                          @3156
 44481: c9 84 04                 t2 = t2 - a1
 44484: 33 05 02                 s0 = 0x2
 44487: ac 94 fc 01              jump @3190 if t2 <u a2
      :                          @3157
 44491: 33 08 01                 a1 = 0x1
 44494: 33 0a 0c                 a3 = 0xc
 44497: 33 0b 01                 a4 = 0x1
 44500: 01                       fallthrough
      :                          @3158
 44501: 88 b6 04                 s1 = a4 <u 0x4
 44504: c9 ba 0c                 a5 = a3 - a4
 44507: c8 6b 07                 a0 = a4 + s1
 44510: ca 8c 08                 a1 = a5 * a1
 44513: 88 7c 05                 a5 = a0 <u 0x5
 44516: d2 6c 0c                 a5 = a5 & s1
 44519: cb b8 08                 a1 = a1 /u a4
 44522: 64 7b                    a4 = a0
 44524: 52 0c e9                 jump @3158 if a5 != 0
      :                          @3159
 44527: c9 94 04                 t2 = t2 - a2
 44530: 33 05 03                 s0 = 0x3
 44533: ac 84 ce 01              jump @3190 if t2 <u a1
      :                          @3160
 44537: 33 09 01                 a2 = 0x1
 44540: 33 0a 0b                 a3 = 0xb
 44543: 33 0b 01                 a4 = 0x1
 44546: 01                       fallthrough
      :                          @3161
 44547: 88 b6 04                 s1 = a4 <u 0x4
 44550: c9 ba 0c                 a5 = a3 - a4
 44553: c8 6b 07                 a0 = a4 + s1
 44556: ca 9c 09                 a2 = a5 * a2
 44559: 88 7c 05                 a5 = a0 <u 0x5
 44562: d2 6c 0c                 a5 = a5 & s1
 44565: cb b9 09                 a2 = a2 /u a4
 44568: 64 7b                    a4 = a0
 44570: 52 0c e9                 jump @3161 if a5 != 0
      :                          @3162
 44573: c9 84 04                 t2 = t2 - a1
 44576: 33 05 04                 s0 = 0x4
 44579: ac 94 a0 01              jump @3190 if t2 <u a2
      :                          @3163
 44583: 33 08 01                 a1 = 0x1
 44586: 33 0a 0a                 a3 = 0xa
 44589: 33 0b 01                 a4 = 0x1
 44592: 01                       fallthrough
      :                          @3164
 44593: 88 b6 04                 s1 = a4 <u 0x4
 44596: c9 ba 0c                 a5 = a3 - a4
 44599: c8 6b 07                 a0 = a4 + s1
 44602: ca 8c 08                 a1 = a5 * a1
 44605: 88 7c 05                 a5 = a0 <u 0x5
 44608: d2 6c 0c                 a5 = a5 & s1
 44611: cb b8 08                 a1 = a1 /u a4
 44614: 64 7b                    a4 = a0
 44616: 52 0c e9                 jump @3164 if a5 != 0
      :                          @3165
 44619: c9 94 04                 t2 = t2 - a2
 44622: 33 05 05                 s0 = 0x5
 44625: ac 84 72 01              jump @3190 if t2 <u a1
      :                          @3166
 44629: 33 09 01                 a2 = 0x1
 44632: 33 0a 09                 a3 = 0x9
 44635: 33 0b 01                 a4 = 0x1
 44638: 01                       fallthrough
      :                          @3167
 44639: 88 b6 04                 s1 = a4 <u 0x4
 44642: c9 ba 0c                 a5 = a3 - a4
 44645: c8 6b 07                 a0 = a4 + s1
 44648: ca 9c 09                 a2 = a5 * a2
 44651: 88 7c 05                 a5 = a0 <u 0x5
 44654: d2 6c 0c                 a5 = a5 & s1
 44657: cb b9 09                 a2 = a2 /u a4
 44660: 64 7b                    a4 = a0
 44662: 52 0c e9                 jump @3167 if a5 != 0
      :                          @3168
 44665: c9 84 04                 t2 = t2 - a1
 44668: 33 05 06                 s0 = 0x6
 44671: ac 94 44 01              jump @3190 if t2 <u a2
      :                          @3169
 44675: 33 08 01                 a1 = 0x1
 44678: 33 0a 08                 a3 = 0x8
 44681: 33 0b 01                 a4 = 0x1
 44684: 01                       fallthrough
      :                          @3170
 44685: 88 b6 04                 s1 = a4 <u 0x4
 44688: c9 ba 0c                 a5 = a3 - a4
 44691: c8 6b 07                 a0 = a4 + s1
 44694: ca 8c 08                 a1 = a5 * a1
 44697: 88 7c 05                 a5 = a0 <u 0x5
 44700: d2 6c 0c                 a5 = a5 & s1
 44703: cb b8 08                 a1 = a1 /u a4
 44706: 64 7b                    a4 = a0
 44708: 52 0c e9                 jump @3170 if a5 != 0
      :                          @3171
 44711: c9 94 04                 t2 = t2 - a2
 44714: 33 05 07                 s0 = 0x7
 44717: ac 84 16 01              jump @3190 if t2 <u a1
      :                          @3172
 44721: 33 09 01                 a2 = 0x1
 44724: 33 0a 07                 a3 = 0x7
 44727: 33 0b 01                 a4 = 0x1
 44730: 01                       fallthrough
      :                          @3173
 44731: 88 b6 04                 s1 = a4 <u 0x4
 44734: c9 ba 0c                 a5 = a3 - a4
 44737: c8 6b 07                 a0 = a4 + s1
 44740: ca 9c 09                 a2 = a5 * a2
 44743: 88 7c 05                 a5 = a0 <u 0x5
 44746: d2 6c 0c                 a5 = a5 & s1
 44749: cb b9 09                 a2 = a2 /u a4
 44752: 64 7b                    a4 = a0
 44754: 52 0c e9                 jump @3173 if a5 != 0
      :                          @3174
 44757: c9 84 04                 t2 = t2 - a1
 44760: 33 05 08                 s0 = 0x8
 44763: ac 94 e8 00              jump @3190 if t2 <u a2
      :                          @3175
 44767: 33 08 01                 a1 = 0x1
 44770: 33 0a 06                 a3 = 0x6
 44773: 33 0b 01                 a4 = 0x1
 44776: 01                       fallthrough
      :                          @3176
 44777: 88 b6 04                 s1 = a4 <u 0x4
 44780: c9 ba 0c                 a5 = a3 - a4
 44783: c8 6b 07                 a0 = a4 + s1
 44786: ca 8c 08                 a1 = a5 * a1
 44789: 88 7c 05                 a5 = a0 <u 0x5
 44792: d2 6c 0c                 a5 = a5 & s1
 44795: cb b8 08                 a1 = a1 /u a4
 44798: 64 7b                    a4 = a0
 44800: 52 0c e9                 jump @3176 if a5 != 0
      :                          @3177
 44803: c9 94 04                 t2 = t2 - a2
 44806: 33 05 09                 s0 = 0x9
 44809: ac 84 ba 00              jump @3190 if t2 <u a1
      :                          @3178
 44813: 33 09 01                 a2 = 0x1
 44816: 33 0a 05                 a3 = 0x5
 44819: 33 0b 01                 a4 = 0x1
 44822: 01                       fallthrough
      :                          @3179
 44823: 88 b6 04                 s1 = a4 <u 0x4
 44826: c9 ba 0c                 a5 = a3 - a4
 44829: c8 6b 07                 a0 = a4 + s1
 44832: ca 9c 09                 a2 = a5 * a2
 44835: 88 7c 05                 a5 = a0 <u 0x5
 44838: d2 6c 0c                 a5 = a5 & s1
 44841: cb b9 09                 a2 = a2 /u a4
 44844: 64 7b                    a4 = a0
 44846: 52 0c e9                 jump @3179 if a5 != 0
      :                          @3180
 44849: c9 84 04                 t2 = t2 - a1
 44852: 33 05 0a                 s0 = 0xa
 44855: ac 94 8c 00              jump @3190 if t2 <u a2
      :                          @3181
 44859: 33 08 01                 a1 = 0x1
 44862: 33 0a 04                 a3 = 0x4
 44865: 33 0b 01                 a4 = 0x1
 44868: 01                       fallthrough
      :                          @3182
 44869: 88 b6 04                 s1 = a4 <u 0x4
 44872: c9 ba 0c                 a5 = a3 - a4
 44875: c8 6b 07                 a0 = a4 + s1
 44878: ca 8c 08                 a1 = a5 * a1
 44881: 88 7c 05                 a5 = a0 <u 0x5
 44884: d2 6c 0c                 a5 = a5 & s1
 44887: cb b8 08                 a1 = a1 /u a4
 44890: 64 7b                    a4 = a0
 44892: 52 0c e9                 jump @3182 if a5 != 0
      :                          @3183
 44895: c9 94 04                 t2 = t2 - a2
 44898: 33 05 0b                 s0 = 0xb
 44901: ac 84 5e                 jump @3190 if t2 <u a1
      :                          @3184
 44904: 33 09 01                 a2 = 0x1
 44907: 33 0a 03                 a3 = 0x3
 44910: 33 0b 01                 a4 = 0x1
 44913: 01                       fallthrough
      :                          @3185
 44914: 88 b6 04                 s1 = a4 <u 0x4
 44917: c9 ba 0c                 a5 = a3 - a4
 44920: c8 6b 07                 a0 = a4 + s1
 44923: ca 9c 09                 a2 = a5 * a2
 44926: 88 7c 05                 a5 = a0 <u 0x5
 44929: d2 6c 0c                 a5 = a5 & s1
 44932: cb b9 09                 a2 = a2 /u a4
 44935: 64 7b                    a4 = a0
 44937: 52 0c e9                 jump @3185 if a5 != 0
      :                          @3186
 44940: c9 84 04                 t2 = t2 - a1
 44943: 33 05 0c                 s0 = 0xc
 44946: ac 94 31                 jump @3190 if t2 <u a2
      :                          @3187
 44949: 33 08 01                 a1 = 0x1
 44952: 33 0a 02                 a3 = 0x2
 44955: 33 0b 01                 a4 = 0x1
 44958: 01                       fallthrough
      :                          @3188
 44959: 88 b6 04                 s1 = a4 <u 0x4
 44962: c9 ba 0c                 a5 = a3 - a4
 44965: c8 6b 07                 a0 = a4 + s1
 44968: ca 8c 08                 a1 = a5 * a1
 44971: 88 7c 05                 a5 = a0 <u 0x5
 44974: d2 6c 0c                 a5 = a5 & s1
 44977: cb b8 08                 a1 = a1 /u a4
 44980: 64 7b                    a4 = a0
 44982: 52 0c e9                 jump @3188 if a5 != 0
      :                          @3189
 44985: c9 94 04                 t2 = t2 - a2
 44988: 33 05 0d                 s0 = 0xd
 44991: ae 84 77 01              jump @3224 if t2 >=u a1
      :                          @3190
 44995: 7b 25                    u64 [t0] = s0
 44997: 33 08 01                 a1 = 0x1
 45000: 7b 18 18                 u64 [sp + 0x18] = a1
 45003: c8 85 00                 ra = s0 + a1
 45006: 33 0a 0f                 a3 = 0xf
 45009: 64 05                    s0 = ra
 45011: 33 0b 01                 a4 = 0x1
 45014: 33 0c 01                 a5 = 0x1
 45017: 28 09                    jump @3192
      :                          @3191
 45019: 33 0b 01                 a4 = 0x1
 45022: 33 0c 01                 a5 = 0x1
 45025: 01                       fallthrough
      :                          @3192
 45026: 88 c7 03                 a0 = a5 <u 0x3
 45029: c8 c5 09                 a2 = s0 + a5
 45032: c8 7c 06                 s1 = a5 + a0
 45035: c9 9a 09                 a2 = a3 - a2
 45038: ca b9 09                 a2 = a2 * a4
 45041: 88 6b 04                 a4 = s1 <u 0x4
 45044: d2 b7 07                 a0 = a0 & a4
 45047: cb c9 0b                 a4 = a2 /u a5
 45050: 64 6c                    a5 = s1
 45052: 52 07 e6                 jump @3192 if a0 != 0
      :                          @3193
 45055: ac b4 13                 jump @3197 if t2 <u a4
      :                          @3194
 45058: 95 55 01                 s0 = s0 + 0x1
 45061: c9 b4 04                 t2 = t2 - a4
 45064: ab a5 d3                 jump @3191 if s0 != a3
      :                          @3195
 45067: 54 10 0e 1d              jump @3198 if ra <=u 14
      :                          @3196
 45071: 28 08 01                 jump @3223
      :                          @3197
 45074: 97 87 03                 a0 = a1 << 0x3
 45077: c8 27 07                 a0 = a0 + t0
 45080: 7b 75                    u64 [a0] = s0
 45082: 95 88 01                 a1 = a1 + 0x1
 45085: 7b 18 18                 u64 [sp + 0x18] = a1
 45088: 95 50 01                 ra = s0 + 0x1
 45091: 56 10 0e f4 00           jump @3223 if ra >u 14
      :                          @3198
 45096: 33 0a 0f                 a3 = 0xf
 45099: 64 06                    s1 = ra
 45101: 33 0b 01                 a4 = 0x1
 45104: 33 0c 01                 a5 = 0x1
 45107: 28 09                    jump @3200
      :                          @3199
 45109: 33 0b 01                 a4 = 0x1
 45112: 33 0c 01                 a5 = 0x1
 45115: 01                       fallthrough
      :                          @3200
 45116: 88 c5 02                 s0 = a5 <u 0x2
 45119: c8 c6 09                 a2 = s1 + a5
 45122: c8 5c 07                 a0 = a5 + s0
 45125: c9 9a 09                 a2 = a3 - a2
 45128: ca b9 09                 a2 = a2 * a4
 45131: 88 7b 03                 a4 = a0 <u 0x3
 45134: d2 b5 05                 s0 = s0 & a4
 45137: cb c9 0b                 a4 = a2 /u a5
 45140: 64 7c                    a5 = a0
 45142: 52 05 e6                 jump @3200 if s0 != 0
      :                          @3201
 45145: ac b4 13                 jump @3205 if t2 <u a4
      :                          @3202
 45148: 95 66 01                 s1 = s1 + 0x1
 45151: c9 b4 04                 t2 = t2 - a4
 45154: ab a6 d3                 jump @3199 if s1 != a3
      :                          @3203
 45157: 54 10 0e 1d              jump @3206 if ra <=u 14
      :                          @3204
 45161: 28 ae 00                 jump @3223
      :                          @3205
 45164: 97 87 03                 a0 = a1 << 0x3
 45167: c8 27 07                 a0 = a0 + t0
 45170: 7b 76                    u64 [a0] = s1
 45172: 95 88 01                 a1 = a1 + 0x1
 45175: 7b 18 18                 u64 [sp + 0x18] = a1
 45178: 95 60 01                 ra = s1 + 0x1
 45181: 56 10 0e 9a 00           jump @3223 if ra >u 14
      :                          @3206
 45186: 9a 09 0e                 a2 = 0xe - ra
 45189: 33 0a ff                 a3 = 0xffffffffffffffff
 45192: 64 05                    s0 = ra
 45194: 01                       fallthrough
      :                          @3207
 45195: ac 94 17                 jump @3211 if t2 <u a2
      :                          @3208
 45198: c9 94 04                 t2 = t2 - a2
 45201: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 45204: 95 55 01                 s0 = s0 + 0x1
 45207: ab a9 f4                 jump @3207 if a2 != a3
      :                          @3209
 45210: 33 07 0e                 a0 = 0xe
 45213: ae 07 3b                 jump @3215 if a0 >=u ra
      :                          @3210
 45216: 28 77                    jump @3223
      :                          @3211
 45218: 52 18 05 1f              jump @3214 if a1 != 5
      :                          @3212
 45222: 95 17 08                 a0 = sp + 0x8
 45225: 33 08 05                 a1 = 0x5
 45228: 7b 13                    u64 [sp] = t1
 45230: 64 46                    s1 = t2
 45232: 50 20 ce 02 5f a2        ra = 718, jump @1581
      :                          @3213 [@dyn 359]
 45238: 64 64                    t2 = s1
 45240: 82 13                    t1 = u64 [sp]
 45242: 82 18 18                 a1 = u64 [sp + 0x18]
 45245: 82 12 10                 t0 = u64 [sp + 0x10]
 45248: 01                       fallthrough
      :                          @3214
 45249: 97 87 03                 a0 = a1 << 0x3
 45252: c8 27 07                 a0 = a0 + t0
 45255: 7b 75                    u64 [a0] = s0
 45257: 95 88 01                 a1 = a1 + 0x1
 45260: 7b 18 18                 u64 [sp + 0x18] = a1
 45263: 95 50 01                 ra = s0 + 0x1
 45266: 33 07 0e                 a0 = 0xe
 45269: ac 07 42                 jump @3223 if a0 <u ra
      :                          @3215
 45272: 33 09 0f                 a2 = 0xf
 45275: 01                       fallthrough
      :                          @3216
 45276: 51 04 0e                 jump @3219 if t2 == 0
      :                          @3217
 45279: 95 00 01                 ra = ra + 0x1
 45282: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
 45285: ab 90 f7                 jump @3216 if ra != a2
      :                          @3218
 45288: 28 2f                    jump @3223
      :                          @3219
 45290: 82 17 08                 a0 = u64 [sp + 0x8]
 45293: ab 78 1b                 jump @3222 if a1 != a0
      :                          @3220
 45296: 95 17 08                 a0 = sp + 0x8
 45299: 64 35                    s0 = t1
 45301: 64 06                    s1 = ra
 45303: 50 20 d0 02 18 a2        ra = 720, jump @1581
      :                          @3221 [@dyn 360]
 45309: 64 60                    ra = s1
 45311: 64 53                    t1 = s0
 45313: 82 18 18                 a1 = u64 [sp + 0x18]
 45316: 82 12 10                 t0 = u64 [sp + 0x10]
 45319: 01                       fallthrough
      :                          @3222
 45320: 97 87 03                 a0 = a1 << 0x3
 45323: c8 27 07                 a0 = a0 + t0
 45326: 7b 70                    u64 [a0] = ra
 45328: 95 88 01                 a1 = a1 + 0x1
 45331: 7b 18 18                 u64 [sp + 0x18] = a1
 45334: 01                       fallthrough
      :                          @3223
 45335: 82 17 18                 a0 = u64 [sp + 0x18]
 45338: 82 18 10                 a1 = u64 [sp + 0x10]
 45341: 82 19 08                 a2 = u64 [sp + 0x8]
 45344: 7b 37 10                 u64 [t1 + 0x10] = a0
 45347: 7b 38 08                 u64 [t1 + 0x8] = a1
 45350: 7b 39                    u64 [t1] = a2
 45352: 82 10 30                 ra = u64 [sp + 0x30]
 45355: 82 15 28                 s0 = u64 [sp + 0x28]
 45358: 82 16 20                 s1 = u64 [sp + 0x20]
 45361: 95 11 38                 sp = sp + 0x38
 45364: 32 00                    ret
      :                          @3224
 45366: 33 0a 01                 a3 = 0x1
 45369: 33 09 01                 a2 = 0x1
 45372: 33 0b 01                 a4 = 0x1
 45375: 01                       fallthrough
      :                          @3225
 45376: 88 b6 04                 s1 = a4 <u 0x4
 45379: c9 ba 0c                 a5 = a3 - a4
 45382: c8 6b 07                 a0 = a4 + s1
 45385: ca 9c 09                 a2 = a5 * a2
 45388: 88 7c 05                 a5 = a0 <u 0x5
 45391: d2 6c 0c                 a5 = a5 & s1
 45394: cb b9 09                 a2 = a2 /u a4
 45397: 64 7b                    a4 = a0
 45399: 52 0c e9                 jump @3225 if a5 != 0
      :                          @3226
 45402: c9 84 06                 s1 = t2 - a1
 45405: ae 96 0d                 jump @3229 if s1 >=u a2
      :                          @3227
 45408: 49 02 0e                 u64 [t0 + 0] = 0xe
 45411: 49 11 18 01              u64 [sp + 24] = 0x1
 45415: 28 b0                    jump @3223
      :                          @3228
 45417: 00                       trap
      :                          @3229
 45418: 33 00                    ra = 0
 45420: 33 08                    a1 = 0
 45422: c9 96 04                 t2 = s1 - a2
 45425: 33 0a 0f                 a3 = 0xf
 45428: 64 05                    s0 = ra
 45430: 33 0b 01                 a4 = 0x1
 45433: 33 0c 01                 a5 = 0x1
 45436: 28 66 fe                 jump @3192
      :                          @3230
 45439: 82 6a                    a3 = u64 [s1]
 45441: c8 9a 0b                 a4 = a3 + a2
 45444: ac ab de 00              jump @3251 if a4 <u a3
      :                          @3231
 45448: 95 bc 08                 a5 = a4 + 0x8
 45451: d8 bc 05                 s0 = a5 <u a4
 45454: d8 c2 0c                 a5 = t0 <u a5
 45457: d4 5c 0c                 a5 = a5 | s0
 45460: 52 0c ce 00              jump @3251 if a5 != 0
      :                          @3232
 45464: c9 b3 05                 s0 = t1 - a4
 45467: c8 25 05                 s0 = s0 + t0
 45470: 84 5c 07                 a5 = s0 & 0x7
 45473: c8 cb 0b                 a4 = a4 + a5
 45476: 01                       fallthrough
      :                          @3233
 45477: 82 68                    a1 = u64 [s1]
 45479: ab a8 d8                 jump @3230 if a1 != a3
      :                          @3234
 45482: 7b 6b                    u64 [s1] = a4
 45484: c9 c5 05                 s0 = s0 - a5
 45487: 64 57                    a0 = s0
 45489: 33 08                    a1 = 0
 45491: 7b 19 08                 u64 [sp + 0x8] = a2
 45494: 50 20 d2 02 57 5a 02     ra = 722, jump @13689
      :                          @3235 [@dyn 361]
 45501: 64 50                    ra = s0
 45503: 33 07 01                 a0 = 0x1
 45506: 7b 57                    u64 [s0] = a0
 45508: 82 14 10                 t2 = u64 [sp + 0x10]
 45511: 51 04 67                 jump @3243 if t2 == 0
      :                          @3236
 45514: 33 07 01                 a0 = 0x1
 45517: 01                       fallthrough
      :                          @3237
 45518: ac 74 93 00              jump @3250 if t2 <u a0
      :                          @3238
 45522: d8 47 02                 t0 = a0 <u t2
 45525: c8 27 03                 t1 = a0 + t0
 45528: 97 7b 03                 a4 = a0 << 0x3
 45531: c8 0b 0b                 a4 = a4 + ra
 45534: 33 08 01                 a1 = 0x1
 45537: 33 0c 02                 a5 = 0x2
 45540: 33 0a 05                 a3 = 0x5
 45543: 01                       fallthrough
      :                          @3239
 45544: c9 87 08                 a1 = a0 - a1
 45547: ac 84 75                 jump @3249 if t2 <u a1
      :                          @3240
 45550: 97 88 03                 a1 = a1 << 0x3
 45553: c8 08 08                 a1 = a1 + ra
 45556: 82 88                    a1 = u64 [a1]
 45558: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
 45561: 82 b6                    s1 = u64 [a4]
 45563: 84 99 01                 a2 = a2 & 0x1
 45566: 9a 85                    s0 = -a1
 45568: db 98 05                 s0 = a1 if a2 != 0
 45571: c8 65 05                 s0 = s0 + s1
 45574: 7b b5                    u64 [a4] = s0
 45576: ca ca 08                 a1 = a3 * a5
 45579: 98 88 01                 a1 = a1 >> 0x1
 45582: 95 cc 01                 a5 = a5 + 0x1
 45585: 95 aa 03                 a3 = a3 + 0x3
 45588: ae 87 d4                 jump @3239 if a0 >=u a1
      :                          @3241
 45591: d8 34 07                 a0 = t2 <u t1
 45594: 85 77 01                 a0 = a0 ^ 0x1
 45597: d2 72 08                 a1 = t0 & a0
 45600: 64 37                    a0 = t1
 45602: 52 08 ac                 jump @3237 if a1 != 0
      :                          @3242
 45605: 97 46 03                 s1 = t2 << 0x3
 45608: c8 06 06                 s1 = s1 + ra
 45611: 82 67                    a0 = u64 [s1]
 45613: 01                       fallthrough
      :                          @3243
 45614: 33 08 b0 02 03           a1 = 0x302b0
 45619: 95 88 00 00 10           a1 = a1 + 0x100000
 45624: 82 16 08                 s1 = u64 [sp + 0x8]
 45627: 01                       fallthrough
      :                          @3244
 45628: 82 89                    a2 = u64 [a1]
 45630: c9 98 0a                 a3 = a1 - a2
 45633: ab 0a 11                 jump @3248 if a3 != ra
      :                          @3245
 45636: c9 69 0a                 a3 = a2 - s1
 45639: 01                       fallthrough
      :                          @3246
 45640: 82 8b                    a4 = u64 [a1]
 45642: ab 9b f2                 jump @3244 if a4 != a2
      :                          @3247
 45645: 7b 8a                    u64 [a1] = a3
 45647: 33 0c                    a5 = 0
 45649: 01                       fallthrough
      :                          @3248
 45650: 82 10 28                 ra = u64 [sp + 0x28]
 45653: 82 15 20                 s0 = u64 [sp + 0x20]
 45656: 82 16 18                 s1 = u64 [sp + 0x18]
 45659: 95 11 30                 sp = sp + 0x30
 45662: 32 00                    ret
      :                          @3249
 45664: 00                       trap
      :                          @3250
 45665: 00                       trap
      :                          @3251
 45666: 00                       trap
      :                          @3252 [@dyn 362]
 45667: 82 18 18                 a1 = u64 [sp + 0x18]
 45670: 51 08 2e                 jump @3259 if a1 == 0
      :                          @3253
 45673: 56 38 00 00 02 2b        jump @3259 if a1 >u 131072
      :                          @3254
 45679: 82 17 20                 a0 = u64 [sp + 0x20]
 45682: 97 88 03                 a1 = a1 << 0x3
 45685: 33 09 b0 02 03           a2 = 0x302b0
 45690: 95 99 00 00 10           a2 = a2 + 0x100000
 45695: 01                       fallthrough
      :                          @3255
 45696: 82 9a                    a3 = u64 [a2]
 45698: c9 a9 0b                 a4 = a2 - a3
 45701: ab 7b 0f                 jump @3259 if a4 != a0
      :                          @3256
 45704: c9 8a 0b                 a4 = a3 - a1
 45707: 01                       fallthrough
      :                          @3257
 45708: 82 9c                    a5 = u64 [a2]
 45710: ab ac f2                 jump @3255 if a5 != a3
      :                          @3258
 45713: 7b 9b                    u64 [a2] = a4
 45715: 01                       fallthrough
      :                          @3259
 45716: 82 17 10                 a0 = u64 [sp + 0x10]
 45719: 82 18 08                 a1 = u64 [sp + 0x8]
 45722: 82 19                    a2 = u64 [sp]
 45724: 7b 67 10                 u64 [s1 + 0x10] = a0
 45727: 7b 68 08                 u64 [s1 + 0x8] = a1
 45730: 7b 69                    u64 [s1] = a2
 45732: 82 10 40                 ra = u64 [sp + 0x40]
 45735: 82 15 38                 s0 = u64 [sp + 0x38]
 45738: 82 16 30                 s1 = u64 [sp + 0x30]
 45741: 95 11 48                 sp = sp + 0x48
 45744: 32 00                    ret
      :                          @3260
 45746: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 45749: 7b 10 20                 u64 [sp + 0x20] = ra
 45752: 7b 15 18                 u64 [sp + 0x18] = s0
 45755: 7b 16 10                 u64 [sp + 0x10] = s1
 45758: 64 a6                    s1 = a3
 45760: 51 07 62                 jump @3270 if a0 == 0
      :                          @3261
 45763: 7b 16                    u64 [sp] = s1
 45765: e6 78 05                 s0 = minu(a1, a0)
 45768: 51 05 01 01              jump @3283 if s0 == 0
      :                          @3262
 45772: 82 98 10                 a1 = u64 [a2 + 0x10]
 45775: c9 57 06                 s1 = a0 - s0
 45778: 7b 19 08                 u64 [sp + 0x8] = a2
 45781: 28 0c                    jump @3264
      :                          @3263
 45783: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 45786: 95 66 01                 s1 = s1 + 0x1
 45789: 51 05 ec 00              jump @3283 if s0 == 0
      :                          @3264
 45793: 82 97                    a0 = u64 [a2]
 45795: ab 78 12                 jump @3267 if a1 != a0
      :                          @3265
 45798: 64 97                    a0 = a2
 45800: 50 20 d6 02 27 a0        ra = 726, jump @1581
      :                          @3266 [@dyn 363]
 45806: 82 19 08                 a2 = u64 [sp + 0x8]
 45809: 82 98 10                 a1 = u64 [a2 + 0x10]
 45812: 01                       fallthrough
      :                          @3267
 45813: 82 97 08                 a0 = u64 [a2 + 0x8]
 45816: 97 8a 03                 a3 = a1 << 0x3
 45819: c8 a7 07                 a0 = a0 + a3
 45822: 7b 75                    u64 [a0] = s0
 45824: 95 88 01                 a1 = a1 + 0x1
 45827: 7b 98 10                 u64 [a2 + 0x10] = a1
 45830: 64 67                    a0 = s1
 45832: 64 58                    a1 = s0
 45834: 82 1a                    a3 = u64 [sp]
 45836: 50 20 d8 02 a6           ra = 728, jump @3260
      :                          @3268 [@dyn 364]
 45841: 82 19 08                 a2 = u64 [sp + 0x8]
 45844: 82 98 10                 a1 = u64 [a2 + 0x10]
 45847: 51 08 c0                 jump @3263 if a1 == 0
      :                          @3269
 45850: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 45853: 7b 98 10                 u64 [a2 + 0x10] = a1
 45856: 28 b7                    jump @3263
      :                          @3270
 45858: 82 9a 10                 a3 = u64 [a2 + 0x10]
 45861: 82 98 08                 a1 = u64 [a2 + 0x8]
 45864: 7b 1a 08                 u64 [sp + 0x8] = a3
 45867: 51 0a 60                 jump @3278 if a3 == 0
      :                          @3271
 45870: 7b 16                    u64 [sp] = s1
 45872: 98 a7 3c                 a0 = a3 >> 0x3c
 45875: 52 07 a5 00              jump @3285 if a0 != 0
      :                          @3272
 45879: 88 72 01                 t0 = a0 <u 0x1
 45882: 97 a9 03                 a2 = a3 << 0x3
 45885: 97 22 03                 t0 = t0 << 0x3
 45888: 33 04 b0 02 03           t2 = 0x302b0
 45893: 33 03 00 00 10           t1 = 0x100000
 45898: c8 34 00                 ra = t2 + t1
 45901: 01                       fallthrough
      :                          @3273
 45902: 82 06                    s1 = u64 [ra]
 45904: c8 96 05                 s0 = s1 + a2
 45907: ac 65 84 00              jump @3284 if s0 <u s1
      :                          @3274
 45911: c8 25 07                 a0 = s0 + t0
 45914: d8 57 0b                 a4 = a0 <u s0
 45917: d8 73 07                 a0 = t1 <u a0
 45920: d4 b7 07                 a0 = a0 | a4
 45923: 52 07 74                 jump @3284 if a0 != 0
      :                          @3275
 45926: c9 54 07                 a0 = t2 - s0
 45929: c8 37 07                 a0 = a0 + t1
 45932: 84 7b 07                 a4 = a0 & 0x7
 45935: c8 b5 05                 s0 = s0 + a4
 45938: 01                       fallthrough
      :                          @3276
 45939: 82 0a                    a3 = u64 [ra]
 45941: ab 6a d9                 jump @3273 if a3 != s1
      :                          @3277
 45944: 7b 05                    u64 [ra] = s0
 45946: 33 0c                    a5 = 0
 45948: c9 b7 05                 s0 = a0 - a4
 45951: 82 16                    s1 = u64 [sp]
 45953: 64 57                    a0 = s0
 45955: 33 00 da 02              ra = 0x2da
 45959: 28 59 56 02              jump @13635
      :                          @3278
 45963: 33 09                    a2 = 0
 45965: 33 05 08                 s0 = 0x8
 45968: 33 07 08                 a0 = 0x8
 45971: 50 20 da 02 4d 56 02     ra = 730, jump @13635
      :                          @3279 [@dyn 365]
 45978: 82 68 10                 a1 = u64 [s1 + 0x10]
 45981: 82 67                    a0 = u64 [s1]
 45983: ab 78 0f                 jump @3282 if a1 != a0
      :                          @3280
 45986: 64 67                    a0 = s1
 45988: 50 20 dc 02 e9 9e        ra = 732, jump @1569
      :                          @3281 [@dyn 366]
 45994: 82 68 10                 a1 = u64 [s1 + 0x10]
 45997: 01                       fallthrough
      :                          @3282
 45998: 82 67 08                 a0 = u64 [s1 + 0x8]
 46001: 96 89 18                 a2 = a1 * 0x18
 46004: c8 97 07                 a0 = a0 + a2
 46007: 82 19 08                 a2 = u64 [sp + 0x8]
 46010: 7b 79                    u64 [a0] = a2
 46012: 7b 75 08                 u64 [a0 + 0x8] = s0
 46015: 7b 79 10                 u64 [a0 + 0x10] = a2
 46018: 95 88 01                 a1 = a1 + 0x1
 46021: 7b 68 10                 u64 [s1 + 0x10] = a1
 46024: 01                       fallthrough
      :                          @3283
 46025: 82 10 20                 ra = u64 [sp + 0x20]
 46028: 82 15 18                 s0 = u64 [sp + 0x18]
 46031: 82 16 10                 s1 = u64 [sp + 0x10]
 46034: 95 11 28                 sp = sp + 0x28
 46037: 32 00                    ret
      :                          @3284
 46039: 00                       trap
      :                          @3285
 46040: 00                       trap
      :                          @3286
 46041: 82 5a                    a3 = u64 [s0]
 46043: c8 9a 0b                 a4 = a3 + a2
 46046: ac ab 5a 01              jump @3315 if a4 <u a3
      :                          @3287
 46050: 95 bc 08                 a5 = a4 + 0x8
 46053: d8 bc 06                 s1 = a5 <u a4
 46056: d8 c2 0c                 a5 = t0 <u a5
 46059: d4 6c 0c                 a5 = a5 | s1
 46062: 52 0c 4a 01              jump @3315 if a5 != 0
      :                          @3288
 46066: c9 b3 06                 s1 = t1 - a4
 46069: c8 26 06                 s1 = s1 + t0
 46072: 84 6c 07                 a5 = s1 & 0x7
 46075: c8 cb 0b                 a4 = a4 + a5
 46078: 01                       fallthrough
      :                          @3289
 46079: 82 58                    a1 = u64 [s0]
 46081: ab a8 d8                 jump @3286 if a1 != a3
      :                          @3290
 46084: 7b 5b                    u64 [s0] = a4
 46086: c9 c6 06                 s1 = s1 - a5
 46089: 64 67                    a0 = s1
 46091: 33 08                    a1 = 0
 46093: 7b 19 08                 u64 [sp + 0x8] = a2
 46096: 50 20 de 02 fd 57 02     ra = 734, jump @13689
      :                          @3291 [@dyn 367]
 46103: 33 07 01                 a0 = 0x1
 46106: 7b 67                    u64 [s1] = a0
 46108: 82 15 10                 s0 = u64 [sp + 0x10]
 46111: 51 05 dd 00              jump @3307 if s0 == 0
      :                          @3292
 46115: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 46118: ac 85 10 01              jump @3313 if s0 <u a1
      :                          @3293
 46122: ac 75 0d 01              jump @3314 if s0 <u a0
      :                          @3294
 46126: 97 88 03                 a1 = a1 << 0x3
 46129: c8 68 08                 a1 = a1 + s1
 46132: 82 88                    a1 = u64 [a1]
 46134: 97 79 03                 a2 = a0 << 0x3
 46137: c8 69 09                 a2 = a2 + s1
 46140: 82 9a                    a3 = u64 [a2]
 46142: d8 57 0b                 a4 = a0 <u s0
 46145: c8 b7 07                 a0 = a0 + a4
 46148: c8 a8 08                 a1 = a1 + a3
 46151: d8 75 0a                 a3 = s0 <u a0
 46154: 85 aa 01                 a3 = a3 ^ 0x1
 46157: d2 ba 0a                 a3 = a3 & a4
 46160: 7b 98                    u64 [a2] = a1
 46162: 52 0a d1                 jump @3292 if a3 != 0
      :                          @3295
 46165: 33 07 05                 a0 = 0x5
 46168: ac 75 a4 00              jump @3307 if s0 <u a0
      :                          @3296
 46172: 95 78 fb                 a1 = a0 + 0xfffffffffffffffb
 46175: ac 85 d7 00              jump @3313 if s0 <u a1
      :                          @3297
 46179: ac 75 d4 00              jump @3314 if s0 <u a0
      :                          @3298
 46183: 97 88 03                 a1 = a1 << 0x3
 46186: c8 68 08                 a1 = a1 + s1
 46189: 82 88                    a1 = u64 [a1]
 46191: 97 79 03                 a2 = a0 << 0x3
 46194: c8 69 09                 a2 = a2 + s1
 46197: 82 9a                    a3 = u64 [a2]
 46199: d8 57 0b                 a4 = a0 <u s0
 46202: c8 b7 07                 a0 = a0 + a4
 46205: c8 a8 08                 a1 = a1 + a3
 46208: d8 75 0a                 a3 = s0 <u a0
 46211: 85 aa 01                 a3 = a3 ^ 0x1
 46214: d2 ba 0a                 a3 = a3 & a4
 46217: 7b 98                    u64 [a2] = a1
 46219: 52 0a d1                 jump @3296 if a3 != 0
      :                          @3299
 46222: 33 07 0a                 a0 = 0xa
 46225: ac 75 6b                 jump @3307 if s0 <u a0
      :                          @3300
 46228: 95 78 f6                 a1 = a0 + 0xfffffffffffffff6
 46231: ac 85 9f 00              jump @3313 if s0 <u a1
      :                          @3301
 46235: ac 75 9c 00              jump @3314 if s0 <u a0
      :                          @3302
 46239: 97 88 03                 a1 = a1 << 0x3
 46242: c8 68 08                 a1 = a1 + s1
 46245: 82 88                    a1 = u64 [a1]
 46247: 97 79 03                 a2 = a0 << 0x3
 46250: c8 69 09                 a2 = a2 + s1
 46253: 82 9a                    a3 = u64 [a2]
 46255: d8 57 0b                 a4 = a0 <u s0
 46258: c8 b7 07                 a0 = a0 + a4
 46261: c8 a8 08                 a1 = a1 + a3
 46264: d8 75 0a                 a3 = s0 <u a0
 46267: 85 aa 01                 a3 = a3 ^ 0x1
 46270: d2 ba 0a                 a3 = a3 & a4
 46273: 7b 98                    u64 [a2] = a1
 46275: 52 0a d1                 jump @3300 if a3 != 0
      :                          @3303
 46278: 33 07 19                 a0 = 0x19
 46281: ac 75 33                 jump @3307 if s0 <u a0
      :                          @3304
 46284: 95 78 e7                 a1 = a0 + 0xffffffffffffffe7
 46287: ac 85 67                 jump @3313 if s0 <u a1
      :                          @3305
 46290: ac 75 65                 jump @3314 if s0 <u a0
      :                          @3306
 46293: 97 88 03                 a1 = a1 << 0x3
 46296: c8 68 08                 a1 = a1 + s1
 46299: 82 88                    a1 = u64 [a1]
 46301: 97 79 03                 a2 = a0 << 0x3
 46304: c8 69 09                 a2 = a2 + s1
 46307: 82 9a                    a3 = u64 [a2]
 46309: d8 57 0b                 a4 = a0 <u s0
 46312: c8 b7 07                 a0 = a0 + a4
 46315: c8 a8 08                 a1 = a1 + a3
 46318: d8 75 0a                 a3 = s0 <u a0
 46321: 85 aa 01                 a3 = a3 ^ 0x1
 46324: d2 ba 0a                 a3 = a3 & a4
 46327: 7b 98                    u64 [a2] = a1
 46329: 52 0a d3                 jump @3304 if a3 != 0
      :                          @3307
 46332: 97 55 03                 s0 = s0 << 0x3
 46335: c8 65 05                 s0 = s0 + s1
 46338: 82 57                    a0 = u64 [s0]
 46340: 33 08 b0 02 03           a1 = 0x302b0
 46345: 95 88 00 00 10           a1 = a1 + 0x100000
 46350: 82 15 08                 s0 = u64 [sp + 0x8]
 46353: 01                       fallthrough
      :                          @3308
 46354: 82 89                    a2 = u64 [a1]
 46356: c9 98 0a                 a3 = a1 - a2
 46359: ab 6a 11                 jump @3312 if a3 != s1
      :                          @3309
 46362: c9 59 0a                 a3 = a2 - s0
 46365: 01                       fallthrough
      :                          @3310
 46366: 82 8b                    a4 = u64 [a1]
 46368: ab 9b f2                 jump @3308 if a4 != a2
      :                          @3311
 46371: 7b 8a                    u64 [a1] = a3
 46373: 33 0c                    a5 = 0
 46375: 01                       fallthrough
      :                          @3312
 46376: 82 10 28                 ra = u64 [sp + 0x28]
 46379: 82 15 20                 s0 = u64 [sp + 0x20]
 46382: 82 16 18                 s1 = u64 [sp + 0x18]
 46385: 95 11 30                 sp = sp + 0x30
 46388: 32 00                    ret
      :                          @3313
 46390: 00                       trap
      :                          @3314
 46391: 00                       trap
      :                          @3315
 46392: 00                       trap
      :                          @3316
 46393: 82 0b                    a4 = u64 [ra]
 46395: c8 7b 09                 a2 = a4 + a0
 46398: ac b9 c8 01              jump @3362 if a2 <u a4
      :                          @3317
 46402: 95 9a 08                 a3 = a2 + 0x8
 46405: d8 9a 05                 s0 = a3 <u a2
 46408: d8 a2 0a                 a3 = t0 <u a3
 46411: d4 5a 0a                 a3 = a3 | s0
 46414: 52 0a b8 01              jump @3362 if a3 != 0
      :                          @3318
 46418: c9 94 0a                 a3 = t2 - a2
 46421: c8 2a 0a                 a3 = a3 + t0
 46424: 84 a5 07                 s0 = a3 & 0x7
 46427: c8 59 09                 a2 = a2 + s0
 46430: 01                       fallthrough
      :                          @3319
 46431: 82 06                    s1 = u64 [ra]
 46433: ab b6 d8                 jump @3316 if s1 != a4
      :                          @3320
 46436: 7b 09                    u64 [ra] = a2
 46438: 01                       fallthrough
      :                          @3321
 46439: c9 5a 0c                 a5 = a3 - s0
 46442: 51 03 b6 00              jump @3338 if t1 == 0
      :                          @3322
 46446: 14 0a ff ff ff ff ff ff ff 7f a3 = 0x7fffffffffffffff
 46456: 64 3b                    a4 = t1
 46458: 64 c9                    a2 = a5
 46460: 01                       fallthrough
      :                          @3323
 46461: 7b 9a                    u64 [a2] = a3
 46463: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 46466: 95 99 08                 a2 = a2 + 0x8
 46469: 52 0b f8                 jump @3323 if a4 != 0
      :                          @3324
 46472: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 46482: 7b 92                    u64 [a2] = t0
 46484: 49 0c                    u64 [a5 + 0] = 0
 46486: 33 0a 01                 a3 = 0x1
 46489: 28 14                    jump @3326
      :                          @3325
 46491: d8 3a 09                 a2 = a3 <u t1
 46494: c8 9a 0a                 a3 = a3 + a2
 46497: d8 a3 0b                 a4 = t1 <u a3
 46500: 85 bb 01                 a4 = a4 ^ 0x1
 46503: d2 b9 09                 a2 = a2 & a4
 46506: 51 09 2a                 jump @3330 if a2 == 0
      :                          @3326
 46509: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
 46512: ac b3 55 01              jump @3361 if t1 <u a4
      :                          @3327
 46516: 97 bb 03                 a4 = a4 << 0x3
 46519: c8 cb 0b                 a4 = a4 + a5
 46522: 82 b9                    a2 = u64 [a4]
 46524: aa 29 df                 jump @3325 if a2 == t0
      :                          @3328
 46527: ac a3 60                 jump @3337 if t1 <u a3
      :                          @3329
 46530: 97 ab 03                 a4 = a3 << 0x3
 46533: c8 cb 0b                 a4 = a4 + a5
 46536: 82 b6                    s1 = u64 [a4]
 46538: 95 99 01                 a2 = a2 + 0x1
 46541: e5 96 09                 a2 = mins(s1, a2)
 46544: 7b b9                    u64 [a4] = a2
 46546: 28 c9                    jump @3325
      :                          @3330
 46548: 33 0a 05                 a3 = 0x5
 46551: ac a3 a0 00              jump @3347 if t1 <u a3
      :                          @3331
 46555: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 46565: 28 25                    jump @3334
      :                          @3332
 46567: 97 ab 03                 a4 = a3 << 0x3
 46570: c8 cb 0b                 a4 = a4 + a5
 46573: 82 b6                    s1 = u64 [a4]
 46575: 95 99 01                 a2 = a2 + 0x1
 46578: e5 96 09                 a2 = mins(s1, a2)
 46581: 7b b9                    u64 [a4] = a2
 46583: 01                       fallthrough
      :                          @3333
 46584: d8 3a 09                 a2 = a3 <u t1
 46587: c8 9a 0a                 a3 = a3 + a2
 46590: d8 a3 0b                 a4 = t1 <u a3
 46593: 85 bb 01                 a4 = a4 ^ 0x1
 46596: d2 b9 09                 a2 = a2 & a4
 46599: 51 09 1f                 jump @3339 if a2 == 0
      :                          @3334
 46602: 95 ab fb                 a4 = a3 + 0xfffffffffffffffb
 46605: ac b3 f8 00              jump @3361 if t1 <u a4
      :                          @3335
 46609: 97 bb 03                 a4 = a4 << 0x3
 46612: c8 cb 0b                 a4 = a4 + a5
 46615: 82 b9                    a2 = u64 [a4]
 46617: aa 29 df                 jump @3333 if a2 == t0
      :                          @3336
 46620: ae a3 cb                 jump @3332 if t1 >=u a3
      :                          @3337
 46623: 00                       trap
      :                          @3338
 46624: 49 0c                    u64 [a5 + 0] = 0
 46626: 64 c8                    a1 = a5
 46628: 28 5a                    jump @3348
      :                          @3339
 46630: 33 0a 0a                 a3 = 0xa
 46633: ac a3 4e                 jump @3347 if t1 <u a3
      :                          @3340
 46636: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 46646: 28 14                    jump @3342
      :                          @3341
 46648: d8 3a 09                 a2 = a3 <u t1
 46651: c8 9a 0a                 a3 = a3 + a2
 46654: d8 a3 0b                 a4 = t1 <u a3
 46657: 85 bb 01                 a4 = a4 ^ 0x1
 46660: d2 b9 09                 a2 = a2 & a4
 46663: 51 09 2a                 jump @3346 if a2 == 0
      :                          @3342
 46666: 95 ab f6                 a4 = a3 + 0xfffffffffffffff6
 46669: ac b3 b8 00              jump @3361 if t1 <u a4
      :                          @3343
 46673: 97 bb 03                 a4 = a4 << 0x3
 46676: c8 cb 0b                 a4 = a4 + a5
 46679: 82 b9                    a2 = u64 [a4]
 46681: aa 29 df                 jump @3341 if a2 == t0
      :                          @3344
 46684: ac a3 c3                 jump @3337 if t1 <u a3
      :                          @3345
 46687: 97 ab 03                 a4 = a3 << 0x3
 46690: c8 cb 0b                 a4 = a4 + a5
 46693: 82 b6                    s1 = u64 [a4]
 46695: 95 99 01                 a2 = a2 + 0x1
 46698: e5 96 09                 a2 = mins(s1, a2)
 46701: 7b b9                    u64 [a4] = a2
 46703: 28 c9                    jump @3341
      :                          @3346
 46705: 33 0a 19                 a3 = 0x19
 46708: ae a3 4b                 jump @3354 if t1 >=u a3
      :                          @3347
 46711: 97 38 03                 a1 = t1 << 0x3
 46714: c8 c8 08                 a1 = a1 + a5
 46717: 01                       fallthrough
      :                          @3348
 46718: 82 88                    a1 = u64 [a1]
 46720: 33 09 b0 02 03           a2 = 0x302b0
 46725: 95 99 00 00 10           a2 = a2 + 0x100000
 46730: 01                       fallthrough
      :                          @3349
 46731: 82 9a                    a3 = u64 [a2]
 46733: c9 a9 0b                 a4 = a2 - a3
 46736: ab cb 0f                 jump @3353 if a4 != a5
      :                          @3350
 46739: c9 7a 0b                 a4 = a3 - a0
 46742: 01                       fallthrough
      :                          @3351
 46743: 82 96                    s1 = u64 [a2]
 46745: ab a6 f2                 jump @3349 if s1 != a3
      :                          @3352
 46748: 7b 9b                    u64 [a2] = a4
 46750: 01                       fallthrough
      :                          @3353
 46751: 33 07 ff                 a0 = 0xffffffffffffffff
 46754: 14 09 ff ff ff ff ff ff ff 7f a2 = 0x7fffffffffffffff
 46764: d3 89 09                 a2 = a2 ^ a1
 46767: db 98 07                 a0 = a1 if a2 != 0
 46770: 82 10 10                 ra = u64 [sp + 0x10]
 46773: 82 15 08                 s0 = u64 [sp + 0x8]
 46776: 82 16                    s1 = u64 [sp]
 46778: 95 11 18                 sp = sp + 0x18
 46781: 32 00                    ret
      :                          @3354
 46783: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 46793: 28 25                    jump @3357
      :                          @3355
 46795: 97 ab 03                 a4 = a3 << 0x3
 46798: c8 cb 0b                 a4 = a4 + a5
 46801: 82 b6                    s1 = u64 [a4]
 46803: 95 99 01                 a2 = a2 + 0x1
 46806: e5 96 09                 a2 = mins(s1, a2)
 46809: 7b b9                    u64 [a4] = a2
 46811: 01                       fallthrough
      :                          @3356
 46812: d8 3a 09                 a2 = a3 <u t1
 46815: c8 9a 0a                 a3 = a3 + a2
 46818: d8 a3 0b                 a4 = t1 <u a3
 46821: 85 bb 01                 a4 = a4 ^ 0x1
 46824: d2 b9 09                 a2 = a2 & a4
 46827: 51 09 8c                 jump @3347 if a2 == 0
      :                          @3357
 46830: 95 ab e7                 a4 = a3 + 0xffffffffffffffe7
 46833: ac b3 14                 jump @3361 if t1 <u a4
      :                          @3358
 46836: 97 bb 03                 a4 = a4 << 0x3
 46839: c8 cb 0b                 a4 = a4 + a5
 46842: 82 b9                    a2 = u64 [a4]
 46844: aa 29 e0                 jump @3356 if a2 == t0
      :                          @3359
 46847: ae a3 cc                 jump @3355 if t1 >=u a3
      :                          @3360
 46850: 28 1d ff                 jump @3337
      :                          @3361
 46853: 00                       trap
      :                          @3362
 46854: 00                       trap
      :                          @3363
 46855: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 46858: 7b 10 48                 u64 [sp + 0x48] = ra
 46861: 7b 15 40                 u64 [sp + 0x40] = s0
 46864: 7b 16 38                 u64 [sp + 0x38] = s1
 46867: 7b 19                    u64 [sp] = a2
 46869: 7b 17 10                 u64 [sp + 0x10] = a0
 46872: 95 b0 01                 ra = a4 + 0x1
 46875: 97 07 03                 a0 = ra << 0x3
 46878: 7b 17 20                 u64 [sp + 0x20] = a0
 46881: 7b 1b 28                 u64 [sp + 0x28] = a4
 46884: 7b 1a 08                 u64 [sp + 0x8] = a3
 46887: 7b 18 18                 u64 [sp + 0x18] = a1
 46890: 52 00 0d                 jump @3366 if ra != 0
      :                          @3364
 46893: 33 07 08                 a0 = 0x8
 46896: 7b 17 30                 u64 [sp + 0x30] = a0
 46899: 52 08 72                 jump @3375 if a1 != 0
      :                          @3365
 46902: 00                       trap
      :                          @3366
 46903: 98 07 3c                 a0 = ra >> 0x3c
 46906: 52 07 34 01              jump @3398 if a0 != 0
      :                          @3367
 46910: 88 72 01                 t0 = a0 <u 0x1
 46913: 97 22 03                 t0 = t0 << 0x3
 46916: 33 04 b0 02 03           t2 = 0x302b0
 46921: 33 03 00 00 10           t1 = 0x100000
 46926: c8 34 0a                 a3 = t2 + t1
 46929: 01                       fallthrough
      :                          @3368
 46930: 82 ab                    a4 = u64 [a3]
 46932: 82 1c 20                 a5 = u64 [sp + 0x20]
 46935: c8 bc 0c                 a5 = a5 + a4
 46938: ac bc 13 01              jump @3397 if a5 <u a4
      :                          @3369
 46942: c8 2c 09                 a2 = a5 + t0
 46945: d8 c9 06                 s1 = a2 <u a5
 46948: d8 93 09                 a2 = t1 <u a2
 46951: d4 69 09                 a2 = a2 | s1
 46954: 52 09 03 01              jump @3397 if a2 != 0
      :                          @3370
 46958: c9 c4 06                 s1 = t2 - a5
 46961: c8 36 06                 s1 = s1 + t1
 46964: 84 69 07                 a2 = s1 & 0x7
 46967: c8 9c 0c                 a5 = a5 + a2
 46970: 01                       fallthrough
      :                          @3371
 46971: 82 a7                    a0 = u64 [a3]
 46973: ab b7 d5                 jump @3368 if a0 != a4
      :                          @3372
 46976: 7b ac                    u64 [a3] = a5
 46978: 64 05                    s0 = ra
 46980: c9 96 07                 a0 = s1 - a2
 46983: 7b 17 30                 u64 [sp + 0x30] = a0
 46986: 33 08                    a1 = 0
 46988: 82 19 20                 a2 = u64 [sp + 0x20]
 46991: 50 20 e0 02 7e 54 02     ra = 736, jump @13689
      :                          @3373 [@dyn 368]
 46998: 82 18 18                 a1 = u64 [sp + 0x18]
 47001: 51 08 73                 jump @3384 if a1 == 0
      :                          @3374
 47004: 64 50                    ra = s0
 47006: 82 1b 28                 a4 = u64 [sp + 0x28]
 47009: 33 0a                    a3 = 0
 47011: 28 12                    jump @3377
      :                          @3375
 47013: 33 0a                    a3 = 0
 47015: 28 0e                    jump @3377
      :                          @3376
 47017: 95 aa 01                 a3 = a3 + 0x1
 47020: 82 18 18                 a1 = u64 [sp + 0x18]
 47023: 82 1b 28                 a4 = u64 [sp + 0x28]
 47026: aa 8a 63                 jump @3385 if a3 == a1
      :                          @3377
 47029: 97 a2 03                 t0 = a3 << 0x3
 47032: 82 18 10                 a1 = u64 [sp + 0x10]
 47035: c8 28 08                 a1 = a1 + t0
 47038: 82 83                    t1 = u64 [a1]
 47040: ac 3b e9                 jump @3376 if a4 <u t1
      :                          @3378
 47043: 82 18 08                 a1 = u64 [sp + 0x8]
 47046: ae 8a 97 00              jump @3392 if a3 >=u a1
      :                          @3379
 47050: 82 18                    a1 = u64 [sp]
 47052: c8 82 02                 t0 = t0 + a1
 47055: 82 17 28                 a0 = u64 [sp + 0x28]
 47058: 01                       fallthrough
      :                          @3380
 47059: ae 07 98 00              jump @3395 if a0 >=u ra
      :                          @3381
 47063: c9 37 09                 a2 = a0 - t1
 47066: ae 09 92 00              jump @3396 if a2 >=u ra
      :                          @3382
 47070: 97 7c 03                 a5 = a0 << 0x3
 47073: 82 16 30                 s1 = u64 [sp + 0x30]
 47076: c8 6c 0c                 a5 = a5 + s1
 47079: 97 99 03                 a2 = a2 << 0x3
 47082: c8 69 09                 a2 = a2 + s1
 47085: 82 94                    t2 = u64 [a2]
 47087: 82 29                    a2 = u64 [t0]
 47089: 82 c6                    s1 = u64 [a5]
 47091: d8 73 05                 s0 = t1 <u a0
 47094: c9 57 07                 a0 = a0 - s0
 47097: c8 49 09                 a2 = a2 + t2
 47100: e4 96 09                 a2 = maxu(s1, a2)
 47103: d8 37 06                 s1 = a0 <u t1
 47106: e0 65 06                 s1 = s0 & ~s1
 47109: 7b c9                    u64 [a5] = a2
 47111: 52 06 cc                 jump @3380 if s1 != 0
      :                          @3383
 47114: 28 9f                    jump @3376
      :                          @3384
 47116: 64 50                    ra = s0
 47118: 82 1b 28                 a4 = u64 [sp + 0x28]
 47121: 51 1b ff 5e              jump @3399 if a4 == 4294967295
      :                          @3385
 47125: 97 b7 03                 a0 = a4 << 0x3
 47128: 82 18 30                 a1 = u64 [sp + 0x30]
 47131: c8 87 07                 a0 = a0 + a1
 47134: 82 77                    a0 = u64 [a0]
 47136: 33 08 00 00 02           a1 = 0x20000
 47141: ac 08 2a                 jump @3391 if a1 <u ra
      :                          @3386
 47144: 33 08 b0 02 03           a1 = 0x302b0
 47149: 95 88 00 00 10           a1 = a1 + 0x100000
 47154: 01                       fallthrough
      :                          @3387
 47155: 82 89                    a2 = u64 [a1]
 47157: c9 98 0a                 a3 = a1 - a2
 47160: 82 1b 30                 a4 = u64 [sp + 0x30]
 47163: ab ba 14                 jump @3391 if a3 != a4
      :                          @3388
 47166: 82 1a 20                 a3 = u64 [sp + 0x20]
 47169: c9 a9 0a                 a3 = a2 - a3
 47172: 01                       fallthrough
      :                          @3389
 47173: 82 8b                    a4 = u64 [a1]
 47175: ab 9b ec                 jump @3387 if a4 != a2
      :                          @3390
 47178: 7b 8a                    u64 [a1] = a3
 47180: 33 0c                    a5 = 0
 47182: 01                       fallthrough
      :                          @3391
 47183: 82 10 48                 ra = u64 [sp + 0x48]
 47186: 82 15 40                 s0 = u64 [sp + 0x40]
 47189: 82 16 38                 s1 = u64 [sp + 0x38]
 47192: 95 11 50                 sp = sp + 0x50
 47195: 32 00                    ret
      :                          @3392
 47197: 82 19 28                 a2 = u64 [sp + 0x28]
 47200: 51 19 ff 0b              jump @3395 if a2 == 4294967295
      :                          @3393
 47204: c9 39 09                 a2 = a2 - t1
 47207: ae 09 05                 jump @3396 if a2 >=u ra
      :                          @3394
 47210: 00                       trap
      :                          @3395
 47211: 00                       trap
      :                          @3396
 47212: 00                       trap
      :                          @3397
 47213: 00                       trap
      :                          @3398
 47214: 00                       trap
      :                          @3399
 47215: 00                       trap
      :                          @3400
 47216: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 47219: 7b 10 40                 u64 [sp + 0x40] = ra
 47222: 7b 15 38                 u64 [sp + 0x38] = s0
 47225: 7b 16 30                 u64 [sp + 0x30] = s1
 47228: 7b 1a 20                 u64 [sp + 0x20] = a3
 47231: 7b 19 10                 u64 [sp + 0x10] = a2
 47234: 64 85                    s0 = a1
 47236: 7b 17 18                 u64 [sp + 0x18] = a0
 47239: 95 b8 01                 a1 = a4 + 0x1
 47242: 33 04 08                 t2 = 0x8
 47245: 97 80 03                 ra = a1 << 0x3
 47248: 7b 15 28                 u64 [sp + 0x28] = s0
 47251: 52 08 0b                 jump @3403 if a1 != 0
      :                          @3401
 47254: 33 07                    a0 = 0
 47256: 52 05 db 00              jump @3421 if s0 != 0
      :                          @3402
 47260: 28 72                    jump @3411
      :                          @3403
 47262: 7b 1b 08                 u64 [sp + 0x8] = a4
 47265: 7b 18                    u64 [sp] = a1
 47267: 98 87 3c                 a0 = a1 >> 0x3c
 47270: 52 07 30 01              jump @3436 if a0 != 0
      :                          @3404
 47274: 88 72 01                 t0 = a0 <u 0x1
 47277: 97 22 03                 t0 = t0 << 0x3
 47280: 33 04 b0 02 03           t2 = 0x302b0
 47285: 33 03 00 00 10           t1 = 0x100000
 47290: c8 34 0a                 a3 = t2 + t1
 47293: 01                       fallthrough
      :                          @3405
 47294: 82 ab                    a4 = u64 [a3]
 47296: c8 0b 0c                 a5 = a4 + ra
 47299: ac bc 12 01              jump @3435 if a5 <u a4
      :                          @3406
 47303: c8 2c 09                 a2 = a5 + t0
 47306: d8 c9 05                 s0 = a2 <u a5
 47309: d8 93 09                 a2 = t1 <u a2
 47312: d4 59 09                 a2 = a2 | s0
 47315: 52 09 02 01              jump @3435 if a2 != 0
      :                          @3407
 47319: c9 c4 05                 s0 = t2 - a5
 47322: c8 35 05                 s0 = s0 + t1
 47325: 84 59 07                 a2 = s0 & 0x7
 47328: c8 9c 0c                 a5 = a5 + a2
 47331: 01                       fallthrough
      :                          @3408
 47332: 82 a7                    a0 = u64 [a3]
 47334: ab b7 d8                 jump @3405 if a0 != a4
      :                          @3409
 47337: 7b ac                    u64 [a3] = a5
 47339: c9 95 05                 s0 = s0 - a2
 47342: 64 57                    a0 = s0
 47344: 33 08                    a1 = 0
 47346: 64 09                    a2 = ra
 47348: 64 06                    s1 = ra
 47350: 50 20 e2 02 17 53 02     ra = 738, jump @13689
      :                          @3410 [@dyn 369]
 47357: 64 54                    t2 = s0
 47359: 64 60                    ra = s1
 47361: 82 18                    a1 = u64 [sp]
 47363: 82 1b 08                 a4 = u64 [sp + 0x8]
 47366: 82 15 28                 s0 = u64 [sp + 0x28]
 47369: 33 07                    a0 = 0
 47371: 52 05 68                 jump @3421 if s0 != 0
      :                          @3411
 47374: d8 b7 0a                 a3 = a0 <u a4
 47377: c8 a7 07                 a0 = a0 + a3
 47380: d8 7b 09                 a2 = a4 <u a0
 47383: 85 99 01                 a2 = a2 ^ 0x1
 47386: d2 a9 09                 a2 = a2 & a3
 47389: 52 09 f1                 jump @3411 if a2 != 0
      :                          @3412
 47392: 51 1b ff b3 00           jump @3433 if a4 == 4294967295
      :                          @3413
 47397: 97 b7 03                 a0 = a4 << 0x3
 47400: c8 47 07                 a0 = a0 + t2
 47403: 82 77                    a0 = u64 [a0]
 47405: 33 09 00 00 02           a2 = 0x20000
 47410: ac 89 24                 jump @3419 if a2 <u a1
      :                          @3414
 47413: 33 08 b0 02 03           a1 = 0x302b0
 47418: 95 88 00 00 10           a1 = a1 + 0x100000
 47423: 01                       fallthrough
      :                          @3415
 47424: 82 89                    a2 = u64 [a1]
 47426: c9 98 0a                 a3 = a1 - a2
 47429: ab 4a 11                 jump @3419 if a3 != t2
      :                          @3416
 47432: c9 09 0a                 a3 = a2 - ra
 47435: 01                       fallthrough
      :                          @3417
 47436: 82 8b                    a4 = u64 [a1]
 47438: ab 9b f2                 jump @3415 if a4 != a2
      :                          @3418
 47441: 7b 8a                    u64 [a1] = a3
 47443: 33 0c                    a5 = 0
 47445: 01                       fallthrough
      :                          @3419
 47446: 82 10 40                 ra = u64 [sp + 0x40]
 47449: 82 15 38                 s0 = u64 [sp + 0x38]
 47452: 82 16 30                 s1 = u64 [sp + 0x30]
 47455: 95 11 48                 sp = sp + 0x48
 47458: 32 00                    ret
      :                          @3420
 47460: d8 b7 0a                 a3 = a0 <u a4
 47463: c8 a7 07                 a0 = a0 + a3
 47466: d8 7b 09                 a2 = a4 <u a0
 47469: e0 9a 09                 a2 = a3 & ~a2
 47472: 51 09 b0                 jump @3412 if a2 == 0
      :                          @3421
 47475: 64 5c                    a5 = s0
 47477: 82 19 18                 a2 = u64 [sp + 0x18]
 47480: ae 87 49                 jump @3428 if a0 >=u a1
      :                          @3422
 47483: 33 06                    s1 = 0
 47485: 97 7a 03                 a3 = a0 << 0x3
 47488: c8 a4 02                 t0 = t2 + a3
 47491: 82 1a 18                 a3 = u64 [sp + 0x18]
 47494: 82 1c 10                 a5 = u64 [sp + 0x10]
 47497: 28 0e                    jump @3424
      :                          @3423
 47499: 95 66 01                 s1 = s1 + 0x1
 47502: 95 cc 08                 a5 = a5 + 0x8
 47505: 95 aa 08                 a3 = a3 + 0x8
 47508: aa 65 d0                 jump @3420 if s0 == s1
      :                          @3424
 47511: 82 a9                    a2 = u64 [a3]
 47513: ac 97 f2                 jump @3423 if a0 <u a2
      :                          @3425
 47516: c9 97 09                 a2 = a0 - a2
 47519: ae 89 32                 jump @3431 if a2 >=u a1
      :                          @3426
 47522: 82 15 20                 s0 = u64 [sp + 0x20]
 47525: ae 56 2d                 jump @3432 if s1 >=u s0
      :                          @3427
 47528: 97 99 03                 a2 = a2 << 0x3
 47531: c8 49 09                 a2 = a2 + t2
 47534: 82 99                    a2 = u64 [a2]
 47536: 82 c5                    s0 = u64 [a5]
 47538: 82 23                    t1 = u64 [t0]
 47540: c8 59 09                 a2 = a2 + s0
 47543: e4 93 09                 a2 = maxu(t1, a2)
 47546: 82 15 28                 s0 = u64 [sp + 0x28]
 47549: 7b 29                    u64 [t0] = a2
 47551: 28 cc                    jump @3423
      :                          @3428
 47553: 82 9a                    a3 = u64 [a2]
 47555: ae a7 11                 jump @3434 if a0 >=u a3
      :                          @3429
 47558: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 47561: 95 99 08                 a2 = a2 + 0x8
 47564: 52 0c f5                 jump @3428 if a5 != 0
      :                          @3430
 47567: 28 95                    jump @3420
      :                          @3431
 47569: 00                       trap
      :                          @3432
 47570: 00                       trap
      :                          @3433
 47571: 00                       trap
      :                          @3434
 47572: 00                       trap
      :                          @3435
 47573: 00                       trap
      :                          @3436
 47574: 00                       trap
      :                          @3437
 47575: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 47579: 7b 10 80 00              u64 [sp + 0x80] = ra
 47583: 7b 15 78                 u64 [sp + 0x78] = s0
 47586: 7b 16 70                 u64 [sp + 0x70] = s1
 47589: 64 a5                    s0 = a3
 47591: 7b 19 30                 u64 [sp + 0x30] = a2
 47594: 7b 17 10                 u64 [sp + 0x10] = a0
 47597: 95 a9 01                 a2 = a3 + 0x1
 47600: 33 06 08                 s1 = 0x8
 47603: 7b 18 18                 u64 [sp + 0x18] = a1
 47606: 51 09 68                 jump @3446 if a2 == 0
      :                          @3438
 47609: 98 97 3c                 a0 = a2 >> 0x3c
 47612: 52 07 50 02              jump @3502 if a0 != 0
      :                          @3439
 47616: 88 72 01                 t0 = a0 <u 0x1
 47619: 7b 19 38                 u64 [sp + 0x38] = a2
 47622: 97 99 03                 a2 = a2 << 0x3
 47625: 97 22 03                 t0 = t0 << 0x3
 47628: 33 04 b0 02 03           t2 = 0x302b0
 47633: 33 03 00 00 10           t1 = 0x100000
 47638: c8 34 00                 ra = t2 + t1
 47641: 01                       fallthrough
      :                          @3440
 47642: 82 06                    s1 = u64 [ra]
 47644: c8 96 0c                 a5 = s1 + a2
 47647: ac 6c 2c 02              jump @3501 if a5 <u s1
      :                          @3441
 47651: c8 2c 07                 a0 = a5 + t0
 47654: d8 c7 0a                 a3 = a0 <u a5
 47657: d8 73 07                 a0 = t1 <u a0
 47660: d4 a7 07                 a0 = a0 | a3
 47663: 52 07 1c 02              jump @3501 if a0 != 0
      :                          @3442
 47667: c9 c4 07                 a0 = t2 - a5
 47670: c8 37 07                 a0 = a0 + t1
 47673: 84 7a 07                 a3 = a0 & 0x7
 47676: c8 ac 0c                 a5 = a5 + a3
 47679: 01                       fallthrough
      :                          @3443
 47680: 82 08                    a1 = u64 [ra]
 47682: ab 68 d8                 jump @3440 if a1 != s1
      :                          @3444
 47685: 7b 0c                    u64 [ra] = a5
 47687: 33 0b                    a4 = 0
 47689: c9 a7 06                 s1 = a0 - a3
 47692: 64 67                    a0 = s1
 47694: 33 08                    a1 = 0
 47696: 50 20 e4 02 bd 51 02     ra = 740, jump @13689
      :                          @3445 [@dyn 370]
 47703: 82 18 18                 a1 = u64 [sp + 0x18]
 47706: 82 19 38                 a2 = u64 [sp + 0x38]
 47709: 01                       fallthrough
      :                          @3446
 47710: 7b 19 58                 u64 [sp + 0x58] = a2
 47713: 7b 16 60                 u64 [sp + 0x60] = s1
 47716: 7b 19 68                 u64 [sp + 0x68] = a2
 47719: 95 89 01                 a2 = a1 + 0x1
 47722: 95 17 40                 a0 = sp + 0x40
 47725: 95 18 58                 a1 = sp + 0x58
 47728: 50 20 e6 02 ac a3        ra = 742, jump @1783
      :                          @3447 [@dyn 371]
 47734: 82 18 18                 a1 = u64 [sp + 0x18]
 47737: 51 08 e4 00              jump @3465 if a1 == 0
      :                          @3448
 47741: 82 12 50                 t0 = u64 [sp + 0x50]
 47744: 51 05 e2 00              jump @3466 if s0 == 0
      :                          @3449
 47748: 82 17 48                 a0 = u64 [sp + 0x48]
 47751: 7b 17 08                 u64 [sp + 0x8] = a0
 47754: 33 0c 01                 a5 = 0x1
 47757: 7b 12                    u64 [sp] = t0
 47759: 01                       fallthrough
      :                          @3450
 47760: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
 47763: ae 89 9a 01              jump @3490 if a2 >=u a1
      :                          @3451
 47767: ae 29 97 01              jump @3491 if a2 >=u t0
      :                          @3452
 47771: 82 17 10                 a0 = u64 [sp + 0x10]
 47774: c8 97 07                 a0 = a0 + a2
 47777: 7b 17 38                 u64 [sp + 0x38] = a0
 47780: 96 c3 18                 t1 = a5 * 0x18
 47783: 82 17 08                 a0 = u64 [sp + 0x8]
 47786: c8 73 03                 t1 = t1 + a0
 47789: d8 2c 09                 a2 = a5 <u t0
 47792: 84 99 01                 a2 = a2 & 0x1
 47795: 95 36 f8                 s1 = t1 + 0xfffffffffffffff8
 47798: 51 09 79 01              jump @3492 if a2 == 0
      :                          @3453
 47802: d8 8c 07                 a0 = a5 <u a1
 47805: 7b 17 20                 u64 [sp + 0x20] = a0
 47808: c8 7c 0c                 a5 = a5 + a0
 47811: 7b 1c 28                 u64 [sp + 0x28] = a5
 47814: 95 3c f0                 a5 = t1 + 0xfffffffffffffff0
 47817: 95 32 10                 t0 = t1 + 0x10
 47820: 95 33 08                 t1 = t1 + 0x8
 47823: 33 09 01                 a2 = 0x1
 47826: 01                       fallthrough
      :                          @3454
 47827: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 47830: ae 5a 56 01              jump @3489 if a3 >=u s0
      :                          @3455
 47834: 82 17 38                 a0 = u64 [sp + 0x38]
 47837: 7c 70                    ra = u8 [a0]
 47839: 82 1b 30                 a4 = u64 [sp + 0x30]
 47842: c8 ab 0b                 a4 = a4 + a3
 47845: 7c b8                    a1 = u8 [a4]
 47847: 82 6b                    a4 = u64 [s1]
 47849: 97 94 03                 t2 = a2 << 0x3
 47852: ab 80 1c                 jump @3459 if ra != a1
      :                          @3456
 47855: ae ba 53 01              jump @3495 if a3 >=u a4
      :                          @3457
 47859: 82 c7                    a0 = u64 [a5]
 47861: 97 aa 03                 a3 = a3 << 0x3
 47864: c8 a7 07                 a0 = a0 + a3
 47867: 82 7a                    a3 = u64 [a0]
 47869: 82 2b                    a4 = u64 [t0]
 47871: 95 aa 01                 a3 = a3 + 0x1
 47874: ac b9 28                 jump @3462 if a2 <u a4
      :                          @3458
 47877: 28 43 01                 jump @3498
      :                          @3459
 47880: ae b9 40 01              jump @3498 if a2 >=u a4
      :                          @3460
 47884: 82 2b                    a4 = u64 [t0]
 47886: ae ba 34 01              jump @3495 if a3 >=u a4
      :                          @3461
 47890: 82 c8                    a1 = u64 [a5]
 47892: 82 37                    a0 = u64 [t1]
 47894: c8 48 08                 a1 = a1 + t2
 47897: 82 88                    a1 = u64 [a1]
 47899: 97 aa 03                 a3 = a3 << 0x3
 47902: c8 a7 07                 a0 = a0 + a3
 47905: 82 77                    a0 = u64 [a0]
 47907: e4 78 0a                 a3 = maxu(a1, a0)
 47910: ae b9 22 01              jump @3498 if a2 >=u a4
      :                          @3462
 47914: 82 37                    a0 = u64 [t1]
 47916: d8 59 08                 a1 = a2 <u s0
 47919: c8 89 09                 a2 = a2 + a1
 47922: c8 47 07                 a0 = a0 + t2
 47925: d8 95 0b                 a4 = s0 <u a2
 47928: 85 bb 01                 a4 = a4 ^ 0x1
 47931: d2 b8 08                 a1 = a1 & a4
 47934: 7b 7a                    u64 [a0] = a3
 47936: 52 08 93                 jump @3454 if a1 != 0
      :                          @3463
 47939: 82 17 20                 a0 = u64 [sp + 0x20]
 47942: 85 79 01                 a2 = a0 ^ 0x1
 47945: 82 18 18                 a1 = u64 [sp + 0x18]
 47948: 82 1c 28                 a5 = u64 [sp + 0x28]
 47951: d8 c8 0a                 a3 = a1 <u a5
 47954: d4 a9 09                 a2 = a2 | a3
 47957: 82 12                    t0 = u64 [sp]
 47959: 51 09 39 ff              jump @3450 if a2 == 0
      :                          @3464
 47963: 28 1d                    jump @3468
      :                          @3465
 47965: 82 12 50                 t0 = u64 [sp + 0x50]
 47968: 28 18                    jump @3468
      :                          @3466
 47970: 33 07 01                 a0 = 0x1
 47973: 01                       fallthrough
      :                          @3467
 47974: d8 87 09                 a2 = a0 <u a1
 47977: 85 9a 01                 a3 = a2 ^ 0x1
 47980: c8 97 07                 a0 = a0 + a2
 47983: d8 78 09                 a2 = a1 <u a0
 47986: d4 a9 09                 a2 = a2 | a3
 47989: 51 09 f1                 jump @3467 if a2 == 0
      :                          @3468
 47992: ae 28 d1 00              jump @3499 if a1 >=u t0
      :                          @3469
 47996: 82 14 48                 t2 = u64 [sp + 0x48]
 47999: 33 03 18                 t1 = 0x18
 48002: ca 38 07                 a0 = a1 * t1
 48005: c8 47 07                 a0 = a0 + t2
 48008: 82 79 10                 a2 = u64 [a0 + 0x10]
 48011: ae 95 bf 00              jump @3500 if s0 >=u a2
      :                          @3470
 48015: 82 77 08                 a0 = u64 [a0 + 0x8]
 48018: 33 09                    a2 = 0
 48020: 97 55 03                 s0 = s0 << 0x3
 48023: c8 57 07                 a0 = a0 + s0
 48026: 82 77                    a0 = u64 [a0]
 48028: 7b 17 38                 u64 [sp + 0x38] = a0
 48031: 33 0c b0 02 03           a5 = 0x302b0
 48036: 33 08 00 00 10           a1 = 0x100000
 48041: c8 8c 0c                 a5 = a5 + a1
 48044: 33 07 00 00 02           a0 = 0x20000
 48049: 28 08                    jump @3472
      :                          @3471
 48051: 95 99 01                 a2 = a2 + 0x1
 48054: aa 29 33                 jump @3481 if a2 == t0
      :                          @3472
 48057: ca 39 0b                 a4 = a2 * t1
 48060: c8 4b 0b                 a4 = a4 + t2
 48063: 82 b6                    s1 = u64 [a4]
 48065: 51 06 f2                 jump @3471 if s1 == 0
      :                          @3473
 48068: ac 67 ef                 jump @3471 if a0 <u s1
      :                          @3474
 48071: 82 b5 08                 s0 = u64 [a4 + 0x8]
 48074: 97 60 03                 ra = s1 << 0x3
 48077: 01                       fallthrough
      :                          @3475
 48078: 82 cb                    a4 = u64 [a5]
 48080: c9 bc 08                 a1 = a5 - a4
 48083: ab 58 e0                 jump @3471 if a1 != s0
      :                          @3476
 48086: c9 0b 08                 a1 = a4 - ra
 48089: 01                       fallthrough
      :                          @3477
 48090: 82 ca                    a3 = u64 [a5]
 48092: ab ba f2                 jump @3475 if a3 != a4
      :                          @3478
 48095: 7b c8                    u64 [a5] = a1
 48097: 33 06                    s1 = 0
 48099: 01                       fallthrough
      :                          @3479
 48100: ab ba ea                 jump @3475 if a3 != a4
      :                          @3480
 48103: 28 cc                    jump @3471
      :                          @3481
 48105: 82 18 40                 a1 = u64 [sp + 0x40]
 48108: 51 08 2d                 jump @3488 if a1 == 0
      :                          @3482
 48111: 33 09 aa aa 00           a2 = 0xaaaa
 48116: ac 89 25                 jump @3488 if a2 <u a1
      :                          @3483
 48119: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 48122: 33 09 b0 02 03           a2 = 0x302b0
 48127: 95 99 00 00 10           a2 = a2 + 0x100000
 48132: 01                       fallthrough
      :                          @3484
 48133: 82 9b                    a4 = u64 [a2]
 48135: c9 b9 0a                 a3 = a2 - a4
 48138: ab 4a 0f                 jump @3488 if a3 != t2
      :                          @3485
 48141: c8 8b 0a                 a3 = a4 + a1
 48144: 01                       fallthrough
      :                          @3486
 48145: 82 9c                    a5 = u64 [a2]
 48147: ab bc f2                 jump @3484 if a5 != a4
      :                          @3487
 48150: 7b 9a                    u64 [a2] = a3
 48152: 01                       fallthrough
      :                          @3488
 48153: 82 17 38                 a0 = u64 [sp + 0x38]
 48156: 82 10 80 00              ra = u64 [sp + 0x80]
 48160: 82 15 78                 s0 = u64 [sp + 0x78]
 48163: 82 16 70                 s1 = u64 [sp + 0x70]
 48166: 95 11 88 00              sp = sp + 0x88
 48170: 32 00                    ret
      :                          @3489
 48172: 00                       trap
      :                          @3490
 48173: 00                       trap
      :                          @3491
 48174: 00                       trap
      :                          @3492
 48175: 82 17 38                 a0 = u64 [sp + 0x38]
 48178: 7c 77                    a0 = u8 [a0]
 48180: 82 18 30                 a1 = u64 [sp + 0x30]
 48183: 7c 88                    a1 = u8 [a1]
 48185: 82 6b                    a4 = u64 [s1]
 48187: ab 87 08                 jump @3496 if a0 != a1
      :                          @3493
 48190: 52 0b 09                 jump @3497 if a4 != 0
      :                          @3494
 48193: 00                       trap
      :                          @3495
 48194: 00                       trap
      :                          @3496
 48195: 54 1b 01 05              jump @3498 if a4 <=u 1
      :                          @3497
 48199: 00                       trap
      :                          @3498
 48200: 00                       trap
      :                          @3499
 48201: 00                       trap
      :                          @3500
 48202: 00                       trap
      :                          @3501
 48203: 00                       trap
      :                          @3502
 48204: 00                       trap
      :                          @3503
 48205: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 48208: 7b 10 30                 u64 [sp + 0x30] = ra
 48211: 7b 15 28                 u64 [sp + 0x28] = s0
 48214: 7b 16 20                 u64 [sp + 0x20] = s1
 48217: 7b 17 10                 u64 [sp + 0x10] = a0
 48220: 51 08 20 01              jump @3534 if a1 == 0
      :                          @3504
 48224: 98 89 3c                 a2 = a1 >> 0x3c
 48227: 52 09 2e 01              jump @3538 if a2 != 0
      :                          @3505
 48231: 88 92 01                 t0 = a2 <u 0x1
 48234: 7b 18 08                 u64 [sp + 0x8] = a1
 48237: 97 87 03                 a0 = a1 << 0x3
 48240: 97 22 03                 t0 = t0 << 0x3
 48243: 33 04 b0 02 03           t2 = 0x302b0
 48248: 33 03 00 00 10           t1 = 0x100000
 48253: c8 34 00                 ra = t2 + t1
 48256: 01                       fallthrough
      :                          @3506
 48257: 82 05                    s0 = u64 [ra]
 48259: c8 75 06                 s1 = s0 + a0
 48262: ac 56 0a 01              jump @3537 if s1 <u s0
      :                          @3507
 48266: c8 26 09                 a2 = s1 + t0
 48269: d8 69 0b                 a4 = a2 <u s1
 48272: d8 93 09                 a2 = t1 <u a2
 48275: d4 b9 09                 a2 = a2 | a4
 48278: 52 09 fa 00              jump @3537 if a2 != 0
      :                          @3508
 48282: c9 64 09                 a2 = t2 - s1
 48285: c8 39 09                 a2 = a2 + t1
 48288: 84 9b 07                 a4 = a2 & 0x7
 48291: c8 b6 06                 s1 = s1 + a4
 48294: 01                       fallthrough
      :                          @3509
 48295: 82 0a                    a3 = u64 [ra]
 48297: ab 5a d8                 jump @3506 if a3 != s0
      :                          @3510
 48300: 7b 06                    u64 [ra] = s1
 48302: 33 0c                    a5 = 0
 48304: 01                       fallthrough
      :                          @3511
 48305: c9 b9 0b                 a4 = a2 - a4
 48308: 33 09 01                 a2 = 0x1
 48311: 33 0a 02                 a3 = 0x2
 48314: 33 08 01                 a1 = 0x1
 48317: 7b 1b 18                 u64 [sp + 0x18] = a4
 48320: 82 16 08                 s1 = u64 [sp + 0x8]
 48323: ac a6 1b                 jump @3515 if s1 <u a3
      :                          @3512
 48326: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
 48329: 33 0c 01                 a5 = 0x1
 48332: 82 1b 18                 a4 = u64 [sp + 0x18]
 48335: 01                       fallthrough
      :                          @3513
 48336: 7b bc                    u64 [a4] = a5
 48338: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 48341: 95 bb 08                 a4 = a4 + 0x8
 48344: 52 0a f8                 jump @3513 if a3 != 0
      :                          @3514
 48347: 64 68                    a1 = s1
 48349: 01                       fallthrough
      :                          @3515
 48350: 7b 17                    u64 [sp] = a0
 48352: 33 02                    t0 = 0
 48354: 33 07                    a0 = 0
 48356: 7b b9                    u64 [a4] = a2
 48358: 01                       fallthrough
      :                          @3516
 48359: 97 70 03                 ra = a0 << 0x3
 48362: 51 07 4a                 jump @3524 if a0 == 0
      :                          @3517
 48365: 82 16 10                 s1 = u64 [sp + 0x10]
 48368: c8 06 09                 a2 = s1 + ra
 48371: 82 99                    a2 = u64 [a2]
 48373: 64 7b                    a4 = a0
 48375: ae 87 2f                 jump @3522 if a0 >=u a1
      :                          @3518
 48378: 82 14 18                 t2 = u64 [sp + 0x18]
 48381: c8 04 05                 s0 = t2 + ra
 48384: 64 76                    s1 = a0
 48386: 82 1b 10                 a4 = u64 [sp + 0x10]
 48389: 28 0e                    jump @3520
      :                          @3519
 48391: 95 44 08                 t2 = t2 + 0x8
 48394: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 48397: 95 bb 08                 a4 = a4 + 0x8
 48400: 51 06 24                 jump @3524 if s1 == 0
      :                          @3520
 48403: 82 b3                    t1 = u64 [a4]
 48405: ae 93 f2                 jump @3519 if t1 >=u a2
      :                          @3521
 48408: 82 4a                    a3 = u64 [t2]
 48410: 82 5c                    a5 = u64 [s0]
 48412: 95 aa 01                 a3 = a3 + 0x1
 48415: e4 ac 0a                 a3 = maxu(a5, a3)
 48418: 7b 5a                    u64 [s0] = a3
 48420: 28 e3                    jump @3519
      :                          @3522
 48422: 82 6a                    a3 = u64 [s1]
 48424: ac 9a 6a                 jump @3539 if a3 <u a2
      :                          @3523
 48427: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 48430: 95 66 08                 s1 = s1 + 0x8
 48433: 52 0b f5                 jump @3522 if a4 != 0
      :                          @3524
 48436: aa 87 5b                 jump @3536 if a0 == a1
      :                          @3525
 48439: 82 19 18                 a2 = u64 [sp + 0x18]
 48442: c8 90 00                 ra = ra + a2
 48445: 82 09                    a2 = u64 [ra]
 48447: 95 77 01                 a0 = a0 + 0x1
 48450: e4 92 02                 t0 = maxu(t0, a2)
 48453: 82 19 08                 a2 = u64 [sp + 0x8]
 48456: ab 97 9f                 jump @3516 if a0 != a2
      :                          @3526
 48459: 56 39 00 00 02 34        jump @3535 if a2 >u 131072
      :                          @3527
 48465: 33 09 b0 02 03           a2 = 0x302b0
 48470: 95 99 00 00 10           a2 = a2 + 0x100000
 48475: 01                       fallthrough
      :                          @3528
 48476: 82 98                    a1 = u64 [a2]
 48478: c9 89 07                 a0 = a2 - a1
 48481: 82 1a 18                 a3 = u64 [sp + 0x18]
 48484: ab a7 1b                 jump @3535 if a0 != a3
      :                          @3529
 48487: 82 17                    a0 = u64 [sp]
 48489: c9 78 07                 a0 = a1 - a0
 48492: 01                       fallthrough
      :                          @3530
 48493: 82 9a                    a3 = u64 [a2]
 48495: ab 8a ed                 jump @3528 if a3 != a1
      :                          @3531
 48498: 7b 97                    u64 [a2] = a0
 48500: 33 0b                    a4 = 0
 48502: 01                       fallthrough
      :                          @3532
 48503: ab 8a e5                 jump @3528 if a3 != a1
      :                          @3533
 48506: 28 05                    jump @3535
      :                          @3534
 48508: 33 02                    t0 = 0
 48510: 01                       fallthrough
      :                          @3535
 48511: 64 27                    a0 = t0
 48513: 82 10 30                 ra = u64 [sp + 0x30]
 48516: 82 15 28                 s0 = u64 [sp + 0x28]
 48519: 82 16 20                 s1 = u64 [sp + 0x20]
 48522: 95 11 38                 sp = sp + 0x38
 48525: 32 00                    ret
      :                          @3536
 48527: 00                       trap
      :                          @3537
 48528: 00                       trap
      :                          @3538
 48529: 00                       trap
      :                          @3539
 48530: 00                       trap
      :                          @3540
 48531: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 48535: 7b 10 88 00              u64 [sp + 0x88] = ra
 48539: 7b 15 80 00              u64 [sp + 0x80] = s0
 48543: 7b 16 78                 u64 [sp + 0x78] = s1
 48546: 64 a5                    s0 = a3
 48548: 7b 19 30                 u64 [sp + 0x30] = a2
 48551: 7b 17 08                 u64 [sp + 0x8] = a0
 48554: 95 a9 01                 a2 = a3 + 0x1
 48557: 33 06 08                 s1 = 0x8
 48560: 7b 18 10                 u64 [sp + 0x10] = a1
 48563: 51 09 68                 jump @3549 if a2 == 0
      :                          @3541
 48566: 98 97 3c                 a0 = a2 >> 0x3c
 48569: 52 07 90 02              jump @3609 if a0 != 0
      :                          @3542
 48573: 88 72 01                 t0 = a0 <u 0x1
 48576: 7b 19 40                 u64 [sp + 0x40] = a2
 48579: 97 99 03                 a2 = a2 << 0x3
 48582: 97 22 03                 t0 = t0 << 0x3
 48585: 33 04 b0 02 03           t2 = 0x302b0
 48590: 33 03 00 00 10           t1 = 0x100000
 48595: c8 34 00                 ra = t2 + t1
 48598: 01                       fallthrough
      :                          @3543
 48599: 82 06                    s1 = u64 [ra]
 48601: c8 96 0c                 a5 = s1 + a2
 48604: ac 6c 6a 02              jump @3606 if a5 <u s1
      :                          @3544
 48608: c8 2c 07                 a0 = a5 + t0
 48611: d8 c7 0a                 a3 = a0 <u a5
 48614: d8 73 07                 a0 = t1 <u a0
 48617: d4 a7 07                 a0 = a0 | a3
 48620: 52 07 5a 02              jump @3606 if a0 != 0
      :                          @3545
 48624: c9 c4 07                 a0 = t2 - a5
 48627: c8 37 07                 a0 = a0 + t1
 48630: 84 7a 07                 a3 = a0 & 0x7
 48633: c8 ac 0c                 a5 = a5 + a3
 48636: 01                       fallthrough
      :                          @3546
 48637: 82 08                    a1 = u64 [ra]
 48639: ab 68 d8                 jump @3543 if a1 != s1
      :                          @3547
 48642: 7b 0c                    u64 [ra] = a5
 48644: 33 0b                    a4 = 0
 48646: c9 a7 06                 s1 = a0 - a3
 48649: 64 67                    a0 = s1
 48651: 33 08                    a1 = 0
 48653: 50 20 e8 02 00 4e 02     ra = 744, jump @13689
      :                          @3548 [@dyn 372]
 48660: 82 18 10                 a1 = u64 [sp + 0x10]
 48663: 82 19 40                 a2 = u64 [sp + 0x40]
 48666: 01                       fallthrough
      :                          @3549
 48667: 7b 19 60                 u64 [sp + 0x60] = a2
 48670: 7b 16 68                 u64 [sp + 0x68] = s1
 48673: 7b 19 70                 u64 [sp + 0x70] = a2
 48676: 95 89 01                 a2 = a1 + 0x1
 48679: 95 17 48                 a0 = sp + 0x48
 48682: 95 18 60                 a1 = sp + 0x60
 48685: 50 20 ea 02 ef 9f        ra = 746, jump @1783
      :                          @3550 [@dyn 373]
 48691: 82 18 10                 a1 = u64 [sp + 0x10]
 48694: 82 12 58                 t0 = u64 [sp + 0x58]
 48697: 82 14 50                 t2 = u64 [sp + 0x50]
 48700: 33 07                    a0 = 0
 48702: 33 09 18                 a2 = 0x18
 48705: 01                       fallthrough
      :                          @3551
 48706: ae 27 01 02              jump @3603 if a0 >=u t0
      :                          @3552
 48710: ca 97 0a                 a3 = a0 * a2
 48713: c8 4a 0a                 a3 = a3 + t2
 48716: 82 ab 10                 a4 = u64 [a3 + 0x10]
 48719: 51 0b e7 01              jump @3598 if a4 == 0
      :                          @3553
 48723: d8 87 0c                 a5 = a0 <u a1
 48726: c8 c7 0b                 a4 = a0 + a5
 48729: 82 aa 08                 a3 = u64 [a3 + 0x8]
 48732: 85 c6 01                 s1 = a5 ^ 0x1
 48735: d8 b8 0c                 a5 = a1 <u a4
 48738: d4 6c 0c                 a5 = a5 | s1
 48741: 7b a7                    u64 [a3] = a0
 48743: 64 b7                    a0 = a4
 48745: 51 0c d9                 jump @3551 if a5 == 0
      :                          @3554
 48748: 33 07                    a0 = 0
 48750: 01                       fallthrough
      :                          @3555
 48751: 82 49 10                 a2 = u64 [t2 + 0x10]
 48754: ae 97 c5 01              jump @3599 if a0 >=u a2
      :                          @3556
 48758: d8 57 0c                 a5 = a0 <u s0
 48761: 82 49 08                 a2 = u64 [t2 + 0x8]
 48764: 85 ca 01                 a3 = a5 ^ 0x1
 48767: 97 7b 03                 a4 = a0 << 0x3
 48770: c8 7c 0c                 a5 = a5 + a0
 48773: c8 b9 09                 a2 = a2 + a4
 48776: d8 c5 0b                 a4 = s0 <u a5
 48779: d4 ba 0a                 a3 = a3 | a4
 48782: 7b 97                    u64 [a2] = a0
 48784: 64 c7                    a0 = a5
 48786: 51 0a dd                 jump @3555 if a3 == 0
      :                          @3557
 48789: 7b 14 28                 u64 [sp + 0x28] = t2
 48792: 51 08 e9 00              jump @3573 if a1 == 0
      :                          @3558
 48796: 33 07 01                 a0 = 0x1
 48799: 51 05 d0 00              jump @3572 if s0 == 0
      :                          @3559
 48803: 7b 12                    u64 [sp] = t0
 48805: 01                       fallthrough
      :                          @3560
 48806: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 48809: ae 89 8f 01              jump @3600 if a2 >=u a1
      :                          @3561
 48813: ae 29 8c 01              jump @3601 if a2 >=u t0
      :                          @3562
 48817: 96 73 18                 t1 = a0 * 0x18
 48820: c8 43 03                 t1 = t1 + t2
 48823: 95 3a f8                 a3 = t1 + 0xfffffffffffffff8
 48826: 7b 1a 40                 u64 [sp + 0x40] = a3
 48829: ae 27 7d 01              jump @3602 if a0 >=u t0
      :                          @3563
 48833: d8 87 08                 a1 = a0 <u a1
 48836: 7b 18 18                 u64 [sp + 0x18] = a1
 48839: c8 87 07                 a0 = a0 + a1
 48842: 7b 17 20                 u64 [sp + 0x20] = a0
 48845: 82 17 08                 a0 = u64 [sp + 0x8]
 48848: c8 97 07                 a0 = a0 + a2
 48851: 7b 17 38                 u64 [sp + 0x38] = a0
 48854: 95 32 f0                 t0 = t1 + 0xfffffffffffffff0
 48857: 95 34 10                 t2 = t1 + 0x10
 48860: 95 33 08                 t1 = t1 + 0x8
 48863: 33 09 01                 a2 = 0x1
 48866: 01                       fallthrough
      :                          @3564
 48867: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 48870: ae 5a 4c 01              jump @3594 if a3 >=u s0
      :                          @3565
 48874: 82 17 40                 a0 = u64 [sp + 0x40]
 48877: 82 7b                    a4 = u64 [a0]
 48879: ae b9 59 01              jump @3608 if a2 >=u a4
      :                          @3566
 48883: 82 4c                    a5 = u64 [t2]
 48885: ae ca 3e 01              jump @3595 if a3 >=u a5
      :                          @3567
 48889: ae ba 3b 01              jump @3596 if a3 >=u a4
      :                          @3568
 48893: ae c9 38 01              jump @3597 if a2 >=u a5
      :                          @3569
 48897: 82 17 38                 a0 = u64 [sp + 0x38]
 48900: 7c 7b                    a4 = u8 [a0]
 48902: 82 1c 30                 a5 = u64 [sp + 0x30]
 48905: c8 ac 0c                 a5 = a5 + a3
 48908: 7c cc                    a5 = u8 [a5]
 48910: 82 27                    a0 = u64 [t0]
 48912: d3 cb 0b                 a4 = a4 ^ a5
 48915: 97 9c 03                 a5 = a2 << 0x3
 48918: 82 30                    ra = u64 [t1]
 48920: c8 c7 08                 a1 = a0 + a5
 48923: 82 88                    a1 = u64 [a1]
 48925: 97 a6 03                 s1 = a3 << 0x3
 48928: c8 60 0a                 a3 = ra + s1
 48931: 82 aa                    a3 = u64 [a3]
 48933: c8 67 07                 a0 = a0 + s1
 48936: 95 88 01                 a1 = a1 + 0x1
 48939: 82 77                    a0 = u64 [a0]
 48941: 95 aa 01                 a3 = a3 + 0x1
 48944: e6 a8 08                 a1 = minu(a1, a3)
 48947: 8e ba                    a3 = a4 >u 0
 48949: c8 a7 07                 a0 = a0 + a3
 48952: e6 78 07                 a0 = minu(a1, a0)
 48955: d8 59 08                 a1 = a2 <u s0
 48958: c8 89 09                 a2 = a2 + a1
 48961: c8 0c 0c                 a5 = a5 + ra
 48964: d8 95 0a                 a3 = s0 <u a2
 48967: 85 aa 01                 a3 = a3 ^ 0x1
 48970: d2 a8 08                 a1 = a1 & a3
 48973: 7b c7                    u64 [a5] = a0
 48975: 52 08 94                 jump @3564 if a1 != 0
      :                          @3570
 48978: 82 18 10                 a1 = u64 [sp + 0x10]
 48981: 82 17 20                 a0 = u64 [sp + 0x20]
 48984: d8 78 09                 a2 = a1 <u a0
 48987: 85 99 01                 a2 = a2 ^ 0x1
 48990: 82 1a 18                 a3 = u64 [sp + 0x18]
 48993: d2 a9 09                 a2 = a2 & a3
 48996: 82 14 28                 t2 = u64 [sp + 0x28]
 48999: 82 12                    t0 = u64 [sp]
 49001: 52 09 3d ff              jump @3560 if a2 != 0
      :                          @3571
 49005: 28 14                    jump @3573
      :                          @3572
 49007: d8 87 09                 a2 = a0 <u a1
 49010: c8 97 07                 a0 = a0 + a2
 49013: d8 78 0a                 a3 = a1 <u a0
 49016: 85 aa 01                 a3 = a3 ^ 0x1
 49019: d2 a9 09                 a2 = a2 & a3
 49022: 52 09 f1                 jump @3572 if a2 != 0
      :                          @3573
 49025: ae 28 c3 00              jump @3604 if a1 >=u t0
      :                          @3574
 49029: 33 03 18                 t1 = 0x18
 49032: ca 38 07                 a0 = a1 * t1
 49035: c8 47 07                 a0 = a0 + t2
 49038: 82 79 10                 a2 = u64 [a0 + 0x10]
 49041: ae 95 b4 00              jump @3605 if s0 >=u a2
      :                          @3575
 49045: 64 20                    ra = t0
 49047: 82 77 08                 a0 = u64 [a0 + 0x8]
 49050: 33 09                    a2 = 0
 49052: 97 55 03                 s0 = s0 << 0x3
 49055: c8 57 07                 a0 = a0 + s0
 49058: 82 77                    a0 = u64 [a0]
 49060: 33 0b b0 02 03           a4 = 0x302b0
 49065: 33 08 00 00 10           a1 = 0x100000
 49070: c8 8b 0b                 a4 = a4 + a1
 49073: 33 02 00 00 02           t0 = 0x20000
 49078: 28 0b                    jump @3577
      :                          @3576
 49080: 95 99 01                 a2 = a2 + 0x1
 49083: 82 14 28                 t2 = u64 [sp + 0x28]
 49086: aa 09 33                 jump @3586 if a2 == ra
      :                          @3577
 49089: ca 39 0c                 a5 = a2 * t1
 49092: c8 4c 0c                 a5 = a5 + t2
 49095: 82 c5                    s0 = u64 [a5]
 49097: 51 05 ef                 jump @3576 if s0 == 0
      :                          @3578
 49100: ac 52 ec                 jump @3576 if t0 <u s0
      :                          @3579
 49103: 82 c6 08                 s1 = u64 [a5 + 0x8]
 49106: 97 54 03                 t2 = s0 << 0x3
 49109: 01                       fallthrough
      :                          @3580
 49110: 82 bc                    a5 = u64 [a4]
 49112: c9 cb 08                 a1 = a4 - a5
 49115: ab 68 dd                 jump @3576 if a1 != s1
      :                          @3581
 49118: c9 4c 08                 a1 = a5 - t2
 49121: 01                       fallthrough
      :                          @3582
 49122: 82 ba                    a3 = u64 [a4]
 49124: ab ca f2                 jump @3580 if a3 != a5
      :                          @3583
 49127: 7b b8                    u64 [a4] = a1
 49129: 33 05                    s0 = 0
 49131: 01                       fallthrough
      :                          @3584
 49132: ab ca ea                 jump @3580 if a3 != a5
      :                          @3585
 49135: 28 c9                    jump @3576
      :                          @3586
 49137: 82 19 48                 a2 = u64 [sp + 0x48]
 49140: 51 09 2d                 jump @3593 if a2 == 0
      :                          @3587
 49143: 33 08 aa aa 00           a1 = 0xaaaa
 49148: ac 98 25                 jump @3593 if a1 <u a2
      :                          @3588
 49151: 96 99 e8                 a2 = a2 * 0xffffffffffffffe8
 49154: 33 0a b0 02 03           a3 = 0x302b0
 49159: 95 aa 00 00 10           a3 = a3 + 0x100000
 49164: 01                       fallthrough
      :                          @3589
 49165: 82 ab                    a4 = u64 [a3]
 49167: c9 ba 08                 a1 = a3 - a4
 49170: ab 48 0f                 jump @3593 if a1 != t2
      :                          @3590
 49173: c8 9b 08                 a1 = a4 + a2
 49176: 01                       fallthrough
      :                          @3591
 49177: 82 ac                    a5 = u64 [a3]
 49179: ab bc f2                 jump @3589 if a5 != a4
      :                          @3592
 49182: 7b a8                    u64 [a3] = a1
 49184: 01                       fallthrough
      :                          @3593
 49185: 82 10 88 00              ra = u64 [sp + 0x88]
 49189: 82 15 80 00              s0 = u64 [sp + 0x80]
 49193: 82 16 78                 s1 = u64 [sp + 0x78]
 49196: 95 11 90 00              sp = sp + 0x90
 49200: 32 00                    ret
      :                          @3594
 49202: 00                       trap
      :                          @3595
 49203: 00                       trap
      :                          @3596
 49204: 00                       trap
      :                          @3597
 49205: 00                       trap
      :                          @3598
 49206: 00                       trap
      :                          @3599
 49207: 00                       trap
      :                          @3600
 49208: 00                       trap
      :                          @3601
 49209: 00                       trap
      :                          @3602
 49210: 82 18 40                 a1 = u64 [sp + 0x40]
 49213: 82 8b                    a4 = u64 [a1]
 49215: 53 1b 02 08              jump @3607 if a4 <u 2
      :                          @3603
 49219: 00                       trap
      :                          @3604
 49220: 00                       trap
      :                          @3605
 49221: 00                       trap
      :                          @3606
 49222: 00                       trap
      :                          @3607
 49223: 00                       trap
      :                          @3608
 49224: 00                       trap
      :                          @3609
 49225: 00                       trap
      :                          @3610
 49226: 95 11 60 ff              sp = sp + 0xffffffffffffff60
 49230: 7b 10 98 00              u64 [sp + 0x98] = ra
 49234: 7b 15 90 00              u64 [sp + 0x90] = s0
 49238: 7b 16 88 00              u64 [sp + 0x88] = s1
 49242: 64 a5                    s0 = a3
 49244: 7b 19 50                 u64 [sp + 0x50] = a2
 49247: 7b 17 08                 u64 [sp + 0x8] = a0
 49250: 95 a9 01                 a2 = a3 + 0x1
 49253: 33 06 08                 s1 = 0x8
 49256: 7b 18 10                 u64 [sp + 0x10] = a1
 49259: 51 09 68                 jump @3619 if a2 == 0
      :                          @3611
 49262: 98 97 3c                 a0 = a2 >> 0x3c
 49265: 52 07 61 03              jump @3693 if a0 != 0
      :                          @3612
 49269: 88 72 01                 t0 = a0 <u 0x1
 49272: 7b 19 48                 u64 [sp + 0x48] = a2
 49275: 97 99 03                 a2 = a2 << 0x3
 49278: 97 22 03                 t0 = t0 << 0x3
 49281: 33 04 b0 02 03           t2 = 0x302b0
 49286: 33 03 00 00 10           t1 = 0x100000
 49291: c8 34 00                 ra = t2 + t1
 49294: 01                       fallthrough
      :                          @3613
 49295: 82 07                    a0 = u64 [ra]
 49297: c8 97 0c                 a5 = a0 + a2
 49300: ac 7c 3b 03              jump @3690 if a5 <u a0
      :                          @3614
 49304: c8 2c 08                 a1 = a5 + t0
 49307: d8 c8 0a                 a3 = a1 <u a5
 49310: d8 83 08                 a1 = t1 <u a1
 49313: d4 a8 08                 a1 = a1 | a3
 49316: 52 08 2b 03              jump @3690 if a1 != 0
      :                          @3615
 49320: c9 c4 08                 a1 = t2 - a5
 49323: c8 38 08                 a1 = a1 + t1
 49326: 84 8a 07                 a3 = a1 & 0x7
 49329: c8 ac 0c                 a5 = a5 + a3
 49332: 01                       fallthrough
      :                          @3616
 49333: 82 06                    s1 = u64 [ra]
 49335: ab 76 d8                 jump @3613 if s1 != a0
      :                          @3617
 49338: 7b 0c                    u64 [ra] = a5
 49340: 33 0b                    a4 = 0
 49342: c9 a8 06                 s1 = a1 - a3
 49345: 64 67                    a0 = s1
 49347: 33 08                    a1 = 0
 49349: 50 20 ec 02 48 4b 02     ra = 748, jump @13689
      :                          @3618 [@dyn 374]
 49356: 82 18 10                 a1 = u64 [sp + 0x10]
 49359: 82 19 48                 a2 = u64 [sp + 0x48]
 49362: 01                       fallthrough
      :                          @3619
 49363: 7b 19 70                 u64 [sp + 0x70] = a2
 49366: 7b 16 78                 u64 [sp + 0x78] = s1
 49369: 7b 19 80 00              u64 [sp + 0x80] = a2
 49373: 95 89 01                 a2 = a1 + 0x1
 49376: 95 17 58                 a0 = sp + 0x58
 49379: 95 18 70                 a1 = sp + 0x70
 49382: 50 20 ee 02 36 9d        ra = 750, jump @1783
      :                          @3620 [@dyn 375]
 49388: 82 18 10                 a1 = u64 [sp + 0x10]
 49391: 82 16 68                 s1 = u64 [sp + 0x68]
 49394: 82 14 60                 t2 = u64 [sp + 0x60]
 49397: 33 07                    a0 = 0
 49399: 33 02 18                 t0 = 0x18
 49402: 01                       fallthrough
      :                          @3621
 49403: ae 67 d1 02              jump @3687 if a0 >=u s1
      :                          @3622
 49407: ca 27 09                 a2 = a0 * t0
 49410: c8 49 09                 a2 = a2 + t2
 49413: 82 9a 10                 a3 = u64 [a2 + 0x10]
 49416: 51 0a b7 02              jump @3682 if a3 == 0
      :                          @3623
 49420: d8 87 0a                 a3 = a0 <u a1
 49423: c8 a7 0b                 a4 = a0 + a3
 49426: 82 99 08                 a2 = u64 [a2 + 0x8]
 49429: 85 aa 01                 a3 = a3 ^ 0x1
 49432: d8 b8 0c                 a5 = a1 <u a4
 49435: d4 ca 0a                 a3 = a3 | a5
 49438: 7b 97                    u64 [a2] = a0
 49440: 64 b7                    a0 = a4
 49442: 51 0a d9                 jump @3621 if a3 == 0
      :                          @3624
 49445: 33 07                    a0 = 0
 49447: 01                       fallthrough
      :                          @3625
 49448: 82 49 10                 a2 = u64 [t2 + 0x10]
 49451: ae 97 95 02              jump @3683 if a0 >=u a2
      :                          @3626
 49455: d8 57 0c                 a5 = a0 <u s0
 49458: 82 49 08                 a2 = u64 [t2 + 0x8]
 49461: 85 ca 01                 a3 = a5 ^ 0x1
 49464: 97 7b 03                 a4 = a0 << 0x3
 49467: c8 7c 0c                 a5 = a5 + a0
 49470: c8 b9 09                 a2 = a2 + a4
 49473: d8 c5 0b                 a4 = s0 <u a5
 49476: d4 ba 0a                 a3 = a3 | a4
 49479: 7b 97                    u64 [a2] = a0
 49481: 64 c7                    a0 = a5
 49483: 51 0a dd                 jump @3625 if a3 == 0
      :                          @3627
 49486: 7b 14 38                 u64 [sp + 0x38] = t2
 49489: 51 08 20                 jump @3631 if a1 == 0
      :                          @3628
 49492: 33 07 01                 a0 = 0x1
 49495: 51 05 08                 jump @3630 if s0 == 0
      :                          @3629
 49498: 7b 16                    u64 [sp] = s1
 49500: 28 9e 00                 jump @3645
      :                          @3630
 49503: d8 87 0a                 a3 = a0 <u a1
 49506: c8 a7 07                 a0 = a0 + a3
 49509: d8 78 09                 a2 = a1 <u a0
 49512: 85 99 01                 a2 = a2 ^ 0x1
 49515: d2 a9 09                 a2 = a2 & a3
 49518: 52 09 f1                 jump @3630 if a2 != 0
      :                          @3631
 49521: ae 68 5c 02              jump @3688 if a1 >=u s1
      :                          @3632
 49525: 33 03 18                 t1 = 0x18
 49528: ca 38 07                 a0 = a1 * t1
 49531: c8 47 07                 a0 = a0 + t2
 49534: 82 79 10                 a2 = u64 [a0 + 0x10]
 49537: ae 95 4d 02              jump @3689 if s0 >=u a2
      :                          @3633
 49541: 64 60                    ra = s1
 49543: 82 77 08                 a0 = u64 [a0 + 0x8]
 49546: 33 09                    a2 = 0
 49548: 97 5a 03                 a3 = s0 << 0x3
 49551: c8 a7 07                 a0 = a0 + a3
 49554: 82 77                    a0 = u64 [a0]
 49556: 33 0a b0 02 03           a3 = 0x302b0
 49561: 95 ab 00 00 10           a4 = a3 + 0x100000
 49566: 33 02 00 00 02           t0 = 0x20000
 49571: 28 0c                    jump @3635
      :                          @3634
 49573: 95 99 01                 a2 = a2 + 0x1
 49576: 82 14 38                 t2 = u64 [sp + 0x38]
 49579: aa 09 ce 01              jump @3670 if a2 == ra
      :                          @3635
 49583: ca 39 0c                 a5 = a2 * t1
 49586: c8 4c 0c                 a5 = a5 + t2
 49589: 82 c6                    s1 = u64 [a5]
 49591: 51 06 ee                 jump @3634 if s1 == 0
      :                          @3636
 49594: ac 62 eb                 jump @3634 if t0 <u s1
      :                          @3637
 49597: 82 cc 08                 a5 = u64 [a5 + 0x8]
 49600: 97 64 03                 t2 = s1 << 0x3
 49603: 01                       fallthrough
      :                          @3638
 49604: 82 b5                    s0 = u64 [a4]
 49606: c9 5b 0a                 a3 = a4 - s0
 49609: ab ca dc                 jump @3634 if a3 != a5
      :                          @3639
 49612: c9 45 0a                 a3 = s0 - t2
 49615: 01                       fallthrough
      :                          @3640
 49616: 82 b8                    a1 = u64 [a4]
 49618: ab 58 f2                 jump @3638 if a1 != s0
      :                          @3641
 49621: 7b ba                    u64 [a4] = a3
 49623: 33 06                    s1 = 0
 49625: 01                       fallthrough
      :                          @3642
 49626: ab 58 ea                 jump @3638 if a1 != s0
      :                          @3643
 49629: 28 c8                    jump @3634
      :                          @3644
 49631: 82 18 10                 a1 = u64 [sp + 0x10]
 49634: 82 17 18                 a0 = u64 [sp + 0x18]
 49637: d8 87 0a                 a3 = a0 <u a1
 49640: c8 a7 07                 a0 = a0 + a3
 49643: d8 78 09                 a2 = a1 <u a0
 49646: e0 9a 09                 a2 = a3 & ~a2
 49649: 82 14 38                 t2 = u64 [sp + 0x38]
 49652: 82 16                    s1 = u64 [sp]
 49654: 51 09 7b ff              jump @3631 if a2 == 0
      :                          @3645
 49658: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 49661: ae 89 c4 01              jump @3684 if a2 >=u a1
      :                          @3646
 49665: ae 69 c1 01              jump @3685 if a2 >=u s1
      :                          @3647
 49669: 96 7a 18                 a3 = a0 * 0x18
 49672: c8 4a 0a                 a3 = a3 + t2
 49675: 95 a8 f8                 a1 = a3 + 0xfffffffffffffff8
 49678: 7b 18 48                 u64 [sp + 0x48] = a1
 49681: ae 67 b2 01              jump @3686 if a0 >=u s1
      :                          @3648
 49685: 82 18 08                 a1 = u64 [sp + 0x8]
 49688: c8 89 09                 a2 = a2 + a1
 49691: 7c 94                    t2 = u8 [a2]
 49693: 95 a9 f0                 a2 = a3 + 0xfffffffffffffff0
 49696: 7b 19 40                 u64 [sp + 0x40] = a2
 49699: 95 a2 10                 t0 = a3 + 0x10
 49702: 95 a3 08                 t1 = a3 + 0x8
 49705: 7b 17 18                 u64 [sp + 0x18] = a0
 49708: 54 17 01 d9 00           jump @3662 if a0 <=u 1
      :                          @3649
 49713: c8 87 09                 a2 = a0 + a1
 49716: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 49719: 7b 19 30                 u64 [sp + 0x30] = a2
 49722: 95 a7 e0                 a0 = a3 + 0xffffffffffffffe0
 49725: 7b 17 28                 u64 [sp + 0x28] = a0
 49728: 95 a7 d8                 a0 = a3 + 0xffffffffffffffd8
 49731: 7b 17 20                 u64 [sp + 0x20] = a0
 49734: 33 09 01                 a2 = 0x1
 49737: 28 14                    jump @3651
      :                          @3650
 49739: d8 59 07                 a0 = a2 <u s0
 49742: c8 79 09                 a2 = a2 + a0
 49745: d8 95 08                 a1 = s0 <u a2
 49748: 85 88 01                 a1 = a1 ^ 0x1
 49751: d2 87 07                 a0 = a0 & a1
 49754: 51 07 85                 jump @3644 if a0 == 0
      :                          @3651
 49757: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 49760: ae 5a 5c 01              jump @3679 if a3 >=u s0
      :                          @3652
 49764: 82 17 48                 a0 = u64 [sp + 0x48]
 49767: 82 7b                    a4 = u64 [a0]
 49769: ae b9 68 01              jump @3692 if a2 >=u a4
      :                          @3653
 49773: 82 2c                    a5 = u64 [t0]
 49775: ae ca 4e 01              jump @3680 if a3 >=u a5
      :                          @3654
 49779: ae ba 48 01              jump @3678 if a3 >=u a4
      :                          @3655
 49783: ae c9 47 01              jump @3681 if a2 >=u a5
      :                          @3656
 49787: 82 17 40                 a0 = u64 [sp + 0x40]
 49790: 82 77                    a0 = u64 [a0]
 49792: 97 90 03                 ra = a2 << 0x3
 49795: c8 07 0b                 a4 = a0 + ra
 49798: 82 36                    s1 = u64 [t1]
 49800: 82 b8                    a1 = u64 [a4]
 49802: 97 ab 03                 a4 = a3 << 0x3
 49805: c8 b7 07                 a0 = a0 + a4
 49808: c8 6b 0b                 a4 = a4 + s1
 49811: 64 5c                    a5 = s0
 49813: 82 b5                    s0 = u64 [a4]
 49815: 82 1b 50                 a4 = u64 [sp + 0x50]
 49818: c8 ba 0a                 a3 = a3 + a4
 49821: 7c ab                    a4 = u8 [a3]
 49823: 95 88 01                 a1 = a1 + 0x1
 49826: 95 55 01                 s0 = s0 + 0x1
 49829: 82 77                    a0 = u64 [a0]
 49831: e6 58 08                 a1 = minu(a1, s0)
 49834: 64 c5                    s0 = a5
 49836: d3 b4 0a                 a3 = t2 ^ a4
 49839: 8e aa                    a3 = a3 >u 0
 49841: c8 a7 07                 a0 = a0 + a3
 49844: e6 78 07                 a0 = minu(a1, a0)
 49847: c8 06 06                 s1 = s1 + ra
 49850: 7b 67                    u64 [s1] = a0
 49852: 53 19 02 8f              jump @3650 if a2 <u 2
      :                          @3657
 49856: 95 9a fe                 a3 = a2 + 0xfffffffffffffffe
 49859: 82 17 50                 a0 = u64 [sp + 0x50]
 49862: c8 a7 07                 a0 = a0 + a3
 49865: 7c 77                    a0 = u8 [a0]
 49867: ab 74 80                 jump @3650 if t2 != a0
      :                          @3658
 49870: 82 17 30                 a0 = u64 [sp + 0x30]
 49873: 7c 77                    a0 = u8 [a0]
 49875: ab b7 78 ff              jump @3650 if a0 != a4
      :                          @3659
 49879: 82 2b                    a4 = u64 [t0]
 49881: ae b9 f8 00              jump @3692 if a2 >=u a4
      :                          @3660
 49885: 82 17 28                 a0 = u64 [sp + 0x28]
 49888: 82 7b                    a4 = u64 [a0]
 49890: ae ba d9 00              jump @3678 if a3 >=u a4
      :                          @3661
 49894: 82 37                    a0 = u64 [t1]
 49896: 82 18 20                 a1 = u64 [sp + 0x20]
 49899: 82 88                    a1 = u64 [a1]
 49901: c8 07 07                 a0 = a0 + ra
 49904: 97 aa 03                 a3 = a3 << 0x3
 49907: c8 a8 08                 a1 = a1 + a3
 49910: 82 88                    a1 = u64 [a1]
 49912: 82 7a                    a3 = u64 [a0]
 49914: 95 88 01                 a1 = a1 + 0x1
 49917: e6 8a 08                 a1 = minu(a3, a1)
 49920: 7b 78                    u64 [a0] = a1
 49922: 28 49 ff                 jump @3650
      :                          @3662
 49925: 33 09 01                 a2 = 0x1
 49928: 01                       fallthrough
      :                          @3663
 49929: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 49932: ae 5a b0 00              jump @3679 if a3 >=u s0
      :                          @3664
 49936: 82 17 48                 a0 = u64 [sp + 0x48]
 49939: 82 7b                    a4 = u64 [a0]
 49941: ae b9 bc 00              jump @3692 if a2 >=u a4
      :                          @3665
 49945: 82 2c                    a5 = u64 [t0]
 49947: ae ca a2 00              jump @3680 if a3 >=u a5
      :                          @3666
 49951: ae ba 9c 00              jump @3678 if a3 >=u a4
      :                          @3667
 49955: ae c9 9b 00              jump @3681 if a2 >=u a5
      :                          @3668
 49959: 82 17 40                 a0 = u64 [sp + 0x40]
 49962: 82 7b                    a4 = u64 [a0]
 49964: 97 9c 03                 a5 = a2 << 0x3
 49967: c8 cb 06                 s1 = a4 + a5
 49970: 82 30                    ra = u64 [t1]
 49972: 82 66                    s1 = u64 [s1]
 49974: 97 a7 03                 a0 = a3 << 0x3
 49977: c8 7b 0b                 a4 = a4 + a0
 49980: c8 07 07                 a0 = a0 + ra
 49983: 82 77                    a0 = u64 [a0]
 49985: 82 18 50                 a1 = u64 [sp + 0x50]
 49988: c8 8a 0a                 a3 = a3 + a1
 49991: 7c aa                    a3 = u8 [a3]
 49993: 95 66 01                 s1 = s1 + 0x1
 49996: 95 77 01                 a0 = a0 + 0x1
 49999: 82 bb                    a4 = u64 [a4]
 50001: e6 76 07                 a0 = minu(s1, a0)
 50004: d3 a4 0a                 a3 = t2 ^ a3
 50007: 8e aa                    a3 = a3 >u 0
 50009: c8 ba 0a                 a3 = a3 + a4
 50012: e6 a7 07                 a0 = minu(a0, a3)
 50015: d8 59 0a                 a3 = a2 <u s0
 50018: c8 a9 09                 a2 = a2 + a3
 50021: c8 0c 0c                 a5 = a5 + ra
 50024: d8 95 0b                 a4 = s0 <u a2
 50027: 85 bb 01                 a4 = a4 ^ 0x1
 50030: d2 ba 0a                 a3 = a3 & a4
 50033: 7b c7                    u64 [a5] = a0
 50035: 52 0a 96                 jump @3663 if a3 != 0
      :                          @3669
 50038: 28 69 fe                 jump @3644
      :                          @3670
 50041: 82 18 58                 a1 = u64 [sp + 0x58]
 50044: 51 08 2d                 jump @3677 if a1 == 0
      :                          @3671
 50047: 33 09 aa aa 00           a2 = 0xaaaa
 50052: ac 89 25                 jump @3677 if a2 <u a1
      :                          @3672
 50055: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 50058: 33 09 b0 02 03           a2 = 0x302b0
 50063: 95 99 00 00 10           a2 = a2 + 0x100000
 50068: 01                       fallthrough
      :                          @3673
 50069: 82 9a                    a3 = u64 [a2]
 50071: c9 a9 0b                 a4 = a2 - a3
 50074: ab 4b 0f                 jump @3677 if a4 != t2
      :                          @3674
 50077: c8 8a 0b                 a4 = a3 + a1
 50080: 01                       fallthrough
      :                          @3675
 50081: 82 9c                    a5 = u64 [a2]
 50083: ab ac f2                 jump @3673 if a5 != a3
      :                          @3676
 50086: 7b 9b                    u64 [a2] = a4
 50088: 01                       fallthrough
      :                          @3677
 50089: 82 10 98 00              ra = u64 [sp + 0x98]
 50093: 82 15 90 00              s0 = u64 [sp + 0x90]
 50097: 82 16 88 00              s1 = u64 [sp + 0x88]
 50101: 95 11 a0 00              sp = sp + 0xa0
 50105: 32 00                    ret
      :                          @3678
 50107: 00                       trap
      :                          @3679
 50108: 00                       trap
      :                          @3680
 50109: 00                       trap
      :                          @3681
 50110: 00                       trap
      :                          @3682
 50111: 00                       trap
      :                          @3683
 50112: 00                       trap
      :                          @3684
 50113: 00                       trap
      :                          @3685
 50114: 00                       trap
      :                          @3686
 50115: 82 18 48                 a1 = u64 [sp + 0x48]
 50118: 82 8b                    a4 = u64 [a1]
 50120: 53 1b 02 08              jump @3691 if a4 <u 2
      :                          @3687
 50124: 00                       trap
      :                          @3688
 50125: 00                       trap
      :                          @3689
 50126: 00                       trap
      :                          @3690
 50127: 00                       trap
      :                          @3691
 50128: 00                       trap
      :                          @3692
 50129: 00                       trap
      :                          @3693
 50130: 00                       trap
      :                          @3694
 50131: 95 11 08 ff              sp = sp + 0xffffffffffffff08
 50135: 7b 10 f0 00              u64 [sp + 0xf0] = ra
 50139: 7b 15 e8 00              u64 [sp + 0xe8] = s0
 50143: 7b 16 e0 00              u64 [sp + 0xe0] = s1
 50147: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 50150: 7b 17 40                 u64 [sp + 0x40] = a0
 50153: 51 09 6a 04              jump @3778 if a2 == 0
      :                          @3695
 50157: 98 97 3c                 a0 = a2 >> 0x3c
 50160: 52 07 72 04              jump @3780 if a0 != 0
      :                          @3696
 50164: 7b 18 78                 u64 [sp + 0x78] = a1
 50167: 88 72 01                 t0 = a0 <u 0x1
 50170: 7b 19 10                 u64 [sp + 0x10] = a2
 50173: 97 99 03                 a2 = a2 << 0x3
 50176: 97 22 03                 t0 = t0 << 0x3
 50179: 33 04 b0 02 03           t2 = 0x302b0
 50184: 33 03 00 00 10           t1 = 0x100000
 50189: c8 34 0b                 a4 = t2 + t1
 50192: 01                       fallthrough
      :                          @3697
 50193: 82 b6                    s1 = u64 [a4]
 50195: c8 96 0c                 a5 = s1 + a2
 50198: ac 6c 3c 04              jump @3777 if a5 <u s1
      :                          @3698
 50202: c8 2c 0a                 a3 = a5 + t0
 50205: d8 ca 05                 s0 = a3 <u a5
 50208: d8 a3 0a                 a3 = t1 <u a3
 50211: d4 5a 0a                 a3 = a3 | s0
 50214: 52 0a 2c 04              jump @3777 if a3 != 0
      :                          @3699
 50218: c9 c4 05                 s0 = t2 - a5
 50221: c8 35 05                 s0 = s0 + t1
 50224: 84 5a 07                 a3 = s0 & 0x7
 50227: c8 ac 0c                 a5 = a5 + a3
 50230: 01                       fallthrough
      :                          @3700
 50231: 82 b7                    a0 = u64 [a4]
 50233: ab 67 d8                 jump @3697 if a0 != s1
      :                          @3701
 50236: 7b bc                    u64 [a4] = a5
 50238: c9 a5 06                 s1 = s0 - a3
 50241: 64 67                    a0 = s1
 50243: 33 08                    a1 = 0
 50245: 50 20 f0 02 c8 47 02     ra = 752, jump @13689
      :                          @3702 [@dyn 376]
 50252: 82 15 10                 s0 = u64 [sp + 0x10]
 50255: 7b 15 c8 00              u64 [sp + 0xc8] = s0
 50259: 7b 16 d0 00              u64 [sp + 0xd0] = s1
 50263: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 50267: 95 17 b0 00              a0 = sp + 0xb0
 50271: 95 18 c8 00              a1 = sp + 0xc8
 50275: 64 59                    a2 = s0
 50277: 50 20 f2 02 b7 99        ra = 754, jump @1783
      :                          @3703 [@dyn 377]
 50283: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 50287: 55 15 02 be 00           jump @3725 if s0 >=u 2
      :                          @3704
 50292: 82 17 78                 a0 = u64 [sp + 0x78]
 50295: 51 08 ea 03              jump @3779 if a1 == 0
      :                          @3705
 50299: 82 1a b8 00              a3 = u64 [sp + 0xb8]
 50303: 82 a9 10                 a2 = u64 [a3 + 0x10]
 50306: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 50309: ae 97 77 03              jump @3760 if a0 >=u a2
      :                          @3706
 50313: 64 a2                    t0 = a3
 50315: 82 a9 08                 a2 = u64 [a3 + 0x8]
 50318: 33 00                    ra = 0
 50320: 97 77 03                 a0 = a0 << 0x3
 50323: c8 97 07                 a0 = a0 + a2
 50326: 82 77                    a0 = u64 [a0]
 50328: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 50332: 33 03 18                 t1 = 0x18
 50335: 33 0a b0 02 03           a3 = 0x302b0
 50340: 95 ab 00 00 10           a4 = a3 + 0x100000
 50345: 33 07 00 00 02           a0 = 0x20000
 50350: 28 08                    jump @3708
      :                          @3707
 50352: 95 00 01                 ra = ra + 0x1
 50355: aa 80 33                 jump @3717 if ra == a1
      :                          @3708
 50358: ca 30 0c                 a5 = ra * t1
 50361: c8 2c 0c                 a5 = a5 + t0
 50364: 82 c6                    s1 = u64 [a5]
 50366: 51 06 f2                 jump @3707 if s1 == 0
      :                          @3709
 50369: ac 67 ef                 jump @3707 if a0 <u s1
      :                          @3710
 50372: 82 cc 08                 a5 = u64 [a5 + 0x8]
 50375: 97 64 03                 t2 = s1 << 0x3
 50378: 01                       fallthrough
      :                          @3711
 50379: 82 b5                    s0 = u64 [a4]
 50381: c9 5b 0a                 a3 = a4 - s0
 50384: ab ca e0                 jump @3707 if a3 != a5
      :                          @3712
 50387: c9 45 0a                 a3 = s0 - t2
 50390: 01                       fallthrough
      :                          @3713
 50391: 82 b9                    a2 = u64 [a4]
 50393: ab 59 f2                 jump @3711 if a2 != s0
      :                          @3714
 50396: 7b ba                    u64 [a4] = a3
 50398: 33 06                    s1 = 0
 50400: 01                       fallthrough
      :                          @3715
 50401: ab 59 ea                 jump @3711 if a2 != s0
      :                          @3716
 50404: 28 cc                    jump @3707
      :                          @3717
 50406: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 50410: 51 08 2d                 jump @3724 if a1 == 0
      :                          @3718
 50413: 33 09 aa aa 00           a2 = 0xaaaa
 50418: ac 89 25                 jump @3724 if a2 <u a1
      :                          @3719
 50421: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 50424: 33 09 b0 02 03           a2 = 0x302b0
 50429: 95 99 00 00 10           a2 = a2 + 0x100000
 50434: 01                       fallthrough
      :                          @3720
 50435: 82 9a                    a3 = u64 [a2]
 50437: c9 a9 0b                 a4 = a2 - a3
 50440: ab 2b 0f                 jump @3724 if a4 != t0
      :                          @3721
 50443: c8 8a 0b                 a4 = a3 + a1
 50446: 01                       fallthrough
      :                          @3722
 50447: 82 9c                    a5 = u64 [a2]
 50449: ab ac f2                 jump @3720 if a5 != a3
      :                          @3723
 50452: 7b 9b                    u64 [a2] = a4
 50454: 01                       fallthrough
      :                          @3724
 50455: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 50459: 82 10 f0 00              ra = u64 [sp + 0xf0]
 50463: 82 15 e8 00              s0 = u64 [sp + 0xe8]
 50467: 82 16 e0 00              s1 = u64 [sp + 0xe0]
 50471: 95 11 f8 00              sp = sp + 0xf8
 50475: 32 00                    ret
      :                          @3725
 50477: 82 1a b8 00              a3 = u64 [sp + 0xb8]
 50481: 82 17 40                 a0 = u64 [sp + 0x40]
 50484: 95 77 08                 a0 = a0 + 0x8
 50487: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 50491: 95 a7 28                 a0 = a3 + 0x28
 50494: 7b 17 38                 u64 [sp + 0x38] = a0
 50497: 82 19 78                 a2 = u64 [sp + 0x78]
 50500: 7b 18 50                 u64 [sp + 0x50] = a1
 50503: 7b 1a 48                 u64 [sp + 0x48] = a3
 50506: ae 89 76 01              jump @3744 if a2 >=u a1
      :                          @3726
 50510: 9a 99 01                 a2 = 0x1 - a2
 50513: 7b 19 20                 u64 [sp + 0x20] = a2
 50516: 9a 87 01                 a0 = 0x1 - a1
 50519: 7b 17 18                 u64 [sp + 0x18] = a0
 50522: 33 0c 02                 a5 = 0x2
 50525: 82 1b 10                 a4 = u64 [sp + 0x10]
 50528: 01                       fallthrough
      :                          @3727
 50529: 64 c7                    a0 = a5
 50531: 33 0c                    a5 = 0
 50533: 64 79                    a2 = a0
 50535: d8 b7 07                 a0 = a0 <u a4
 50538: 7b 17                    u64 [sp] = a0
 50540: c8 97 07                 a0 = a0 + a2
 50543: 7b 17 08                 u64 [sp + 0x8] = a0
 50546: c9 9b 0b                 a4 = a4 - a2
 50549: 7b 1b 28                 u64 [sp + 0x28] = a4
 50552: 7b 19 30                 u64 [sp + 0x30] = a2
 50555: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 50558: 7b 19 58                 u64 [sp + 0x58] = a2
 50561: 28 1e                    jump @3729
      :                          @3728
 50563: 82 18 28                 a1 = u64 [sp + 0x28]
 50566: d8 8c 07                 a0 = a5 <u a1
 50569: c8 7c 0c                 a5 = a5 + a0
 50572: d8 c8 08                 a1 = a1 <u a5
 50575: 85 88 01                 a1 = a1 ^ 0x1
 50578: d2 87 07                 a0 = a0 & a1
 50581: 82 18 50                 a1 = u64 [sp + 0x50]
 50584: 82 1a 48                 a3 = u64 [sp + 0x48]
 50587: 51 07 0d 01              jump @3742 if a0 == 0
      :                          @3729
 50591: ae 8c af 02              jump @3773 if a5 >=u a1
      :                          @3730
 50595: 96 c5 18                 s0 = a5 * 0x18
 50598: c8 5a 0a                 a3 = a3 + s0
 50601: 82 ab 10                 a4 = u64 [a3 + 0x10]
 50604: 82 17 30                 a0 = u64 [sp + 0x30]
 50607: c8 c7 07                 a0 = a0 + a5
 50610: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 50613: ae b8 4b 02              jump @3764 if a1 >=u a4
      :                          @3731
 50617: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 50621: 82 a7 08                 a0 = u64 [a3 + 0x8]
 50624: 97 80 03                 ra = a1 << 0x3
 50627: c8 07 07                 a0 = a0 + ra
 50630: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 50633: 7b 18 98 00              u64 [sp + 0x98] = a1
 50637: ae 8c b6                 jump @3728 if a5 >=u a1
      :                          @3732
 50640: 95 a7 10                 a0 = a3 + 0x10
 50643: 7b 17 90 00              u64 [sp + 0x90] = a0
 50647: 82 18 78                 a1 = u64 [sp + 0x78]
 50650: ae 8c 4f 02              jump @3770 if a5 >=u a1
      :                          @3733
 50654: 33 09                    a2 = 0
 50656: 95 aa 08                 a3 = a3 + 0x8
 50659: 7b 1a 70                 u64 [sp + 0x70] = a3
 50662: 97 c3 03                 t1 = a5 << 0x3
 50665: 82 18 40                 a1 = u64 [sp + 0x40]
 50668: c8 38 07                 a0 = a1 + t1
 50671: 7b 17 68                 u64 [sp + 0x68] = a0
 50674: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 50678: 97 77 03                 a0 = a0 << 0x3
 50681: c8 87 07                 a0 = a0 + a1
 50684: 7b 17 60                 u64 [sp + 0x60] = a0
 50687: 82 17 20                 a0 = u64 [sp + 0x20]
 50690: c8 c7 07                 a0 = a0 + a5
 50693: 7b 17 80 00              u64 [sp + 0x80] = a0
 50697: 82 17 18                 a0 = u64 [sp + 0x18]
 50700: c8 c7 07                 a0 = a0 + a5
 50703: 7b 17 88 00              u64 [sp + 0x88] = a0
 50707: 82 18 38                 a1 = u64 [sp + 0x38]
 50710: c8 85 05                 s0 = s0 + a1
 50713: 01                       fallthrough
      :                          @3734
 50714: 82 17 90 00              a0 = u64 [sp + 0x90]
 50718: 82 7b                    a4 = u64 [a0]
 50720: 64 c7                    a0 = a5
 50722: c8 9c 0c                 a5 = a5 + a2
 50725: ae bc 2a 02              jump @3774 if a5 >=u a4
      :                          @3735
 50729: 82 1c 88 00              a5 = u64 [sp + 0x88]
 50733: c8 9c 0c                 a5 = a5 + a2
 50736: 51 0c cd 01              jump @3761 if a5 == 0
      :                          @3736
 50740: 82 56                    s1 = u64 [s0]
 50742: 82 1a 98 00              a3 = u64 [sp + 0x98]
 50746: ae 6a 16 02              jump @3775 if a3 >=u s1
      :                          @3737
 50750: 82 1c 80 00              a5 = u64 [sp + 0x80]
 50754: c8 9c 0c                 a5 = a5 + a2
 50757: 51 0c 0c 02              jump @3776 if a5 == 0
      :                          @3738
 50761: 82 18 78                 a1 = u64 [sp + 0x78]
 50764: 82 1c a0 00              a5 = u64 [sp + 0xa0]
 50768: ae 8c af 01              jump @3763 if a5 >=u a1
      :                          @3739
 50772: ae ba ad 01              jump @3765 if a3 >=u a4
      :                          @3740
 50776: 82 18 70                 a1 = u64 [sp + 0x70]
 50779: 82 8b                    a4 = u64 [a1]
 50781: 82 5c f8                 a5 = u64 [s0 + 0xfffffffffffffff8]
 50784: c8 3b 0a                 a3 = a4 + t1
 50787: 82 aa                    a3 = u64 [a3]
 50789: c8 0c 0c                 a5 = a5 + ra
 50792: 82 cc                    a5 = u64 [a5]
 50794: c8 ca 0a                 a3 = a3 + a5
 50797: 82 18 68                 a1 = u64 [sp + 0x68]
 50800: 82 8c                    a5 = u64 [a1]
 50802: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 50806: c8 36 06                 s1 = s1 + t1
 50809: 82 18 60                 a1 = u64 [sp + 0x60]
 50812: 82 84                    t2 = u64 [a1]
 50814: 82 66                    s1 = u64 [s1]
 50816: c8 0b 0b                 a4 = a4 + ra
 50819: 82 b2                    t0 = u64 [a4]
 50821: ca 4c 0c                 a5 = a5 * t2
 50824: ca c6 0c                 a5 = s1 * a5
 50827: c8 ca 0a                 a3 = a3 + a5
 50830: e6 a2 0a                 a3 = minu(t0, a3)
 50833: 7b ba                    u64 [a4] = a3
 50835: 95 99 01                 a2 = a2 + 0x1
 50838: 95 33 08                 t1 = t1 + 0x8
 50841: 95 55 18                 s0 = s0 + 0x18
 50844: 64 7c                    a5 = a0
 50846: 82 17 58                 a0 = u64 [sp + 0x58]
 50849: ab 97 79 ff              jump @3734 if a0 != a2
      :                          @3741
 50853: 28 de fe                 jump @3728
      :                          @3742
 50856: 82 17                    a0 = u64 [sp]
 50858: 85 77 01                 a0 = a0 ^ 0x1
 50861: 82 1b 10                 a4 = u64 [sp + 0x10]
 50864: 82 1c 08                 a5 = u64 [sp + 0x8]
 50867: d8 cb 09                 a2 = a4 <u a5
 50870: d4 97 07                 a0 = a0 | a2
 50873: 51 07 a8 fe              jump @3727 if a0 == 0
      :                          @3743
 50877: 28 32 01                 jump @3759
      :                          @3744
 50880: 9a 87 01                 a0 = 0x1 - a1
 50883: 7b 17 80 00              u64 [sp + 0x80] = a0
 50887: 33 09 02                 a2 = 0x2
 50890: 82 1b 10                 a4 = u64 [sp + 0x10]
 50893: 01                       fallthrough
      :                          @3745
 50894: 33 0c                    a5 = 0
 50896: d8 b9 07                 a0 = a2 <u a4
 50899: 7b 17 30                 u64 [sp + 0x30] = a0
 50902: c8 97 07                 a0 = a0 + a2
 50905: 7b 17 58                 u64 [sp + 0x58] = a0
 50908: c9 9b 0b                 a4 = a4 - a2
 50911: 7b 1b 60                 u64 [sp + 0x60] = a4
 50914: 7b 19 68                 u64 [sp + 0x68] = a2
 50917: 28 24                    jump @3747
      :                          @3746
 50919: 82 1c 70                 a5 = u64 [sp + 0x70]
 50922: 82 18 60                 a1 = u64 [sp + 0x60]
 50925: d8 8c 07                 a0 = a5 <u a1
 50928: c8 7c 0c                 a5 = a5 + a0
 50931: d8 c8 08                 a1 = a1 <u a5
 50934: 85 88 01                 a1 = a1 ^ 0x1
 50937: d2 87 07                 a0 = a0 & a1
 50940: 82 18 50                 a1 = u64 [sp + 0x50]
 50943: 82 1a 48                 a3 = u64 [sp + 0x48]
 50946: 82 19 68                 a2 = u64 [sp + 0x68]
 50949: 51 07 d2 00              jump @3758 if a0 == 0
      :                          @3747
 50953: ae 8c 45 01              jump @3773 if a5 >=u a1
      :                          @3748
 50957: 96 c3 18                 t1 = a5 * 0x18
 50960: c8 3a 04                 t2 = a3 + t1
 50963: 82 4b 10                 a4 = u64 [t2 + 0x10]
 50966: c8 9c 00                 ra = a5 + a2
 50969: 95 0a ff                 a3 = ra + 0xffffffffffffffff
 50972: ae ba e5 00              jump @3765 if a3 >=u a4
      :                          @3749
 50976: 82 48 08                 a1 = u64 [t2 + 0x8]
 50979: 97 a2 03                 t0 = a3 << 0x3
 50982: c8 28 08                 a1 = a1 + t0
 50985: 49 08 ff                 u64 [a1 + 0] = 0xffffffffffffffff
 50988: 7b 1c 70                 u64 [sp + 0x70] = a5
 50991: ae ac b8                 jump @3746 if a5 >=u a3
      :                          @3750
 50994: 95 47 10                 a0 = t2 + 0x10
 50997: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 51001: 82 18 78                 a1 = u64 [sp + 0x78]
 51004: ae 80 c6 00              jump @3766 if ra >=u a1
      :                          @3751
 51008: 95 44 08                 t2 = t2 + 0x8
 51011: 7b 14 98 00              u64 [sp + 0x98] = t2
 51015: 82 1c 70                 a5 = u64 [sp + 0x70]
 51018: 97 c8 03                 a1 = a5 << 0x3
 51021: 82 17 40                 a0 = u64 [sp + 0x40]
 51024: c8 87 09                 a2 = a0 + a1
 51027: 7b 19 90 00              u64 [sp + 0x90] = a2
 51031: 97 00 03                 ra = ra << 0x3
 51034: c8 07 07                 a0 = a0 + ra
 51037: 7b 17 88 00              u64 [sp + 0x88] = a0
 51041: 82 17 38                 a0 = u64 [sp + 0x38]
 51044: c8 73 03                 t1 = t1 + a0
 51047: 01                       fallthrough
      :                          @3752
 51048: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 51052: 82 7b                    a4 = u64 [a0]
 51054: ae bc e1 00              jump @3774 if a5 >=u a4
      :                          @3753
 51058: 82 16 80 00              s1 = u64 [sp + 0x80]
 51062: c8 c6 06                 s1 = s1 + a5
 51065: 51 06 84 00              jump @3761 if s1 == 0
      :                          @3754
 51069: 82 36                    s1 = u64 [t1]
 51071: ae 6a d1 00              jump @3775 if a3 >=u s1
      :                          @3755
 51075: ae ba 7e                 jump @3765 if a3 >=u a4
      :                          @3756
 51078: 82 17 98 00              a0 = u64 [sp + 0x98]
 51082: 82 7b                    a4 = u64 [a0]
 51084: 82 36 f8                 s1 = u64 [t1 + 0xfffffffffffffff8]
 51087: 64 a0                    ra = a3
 51089: c8 8b 0a                 a3 = a4 + a1
 51092: 82 aa                    a3 = u64 [a3]
 51094: c8 26 06                 s1 = s1 + t0
 51097: 82 66                    s1 = u64 [s1]
 51099: c8 6a 0a                 a3 = a3 + s1
 51102: 82 17 90 00              a0 = u64 [sp + 0x90]
 51106: 82 76                    s1 = u64 [a0]
 51108: 82 14 a8 00              t2 = u64 [sp + 0xa8]
 51112: c8 84 04                 t2 = t2 + a1
 51115: 82 17 88 00              a0 = u64 [sp + 0x88]
 51119: 82 75                    s0 = u64 [a0]
 51121: 82 49                    a2 = u64 [t2]
 51123: c8 2b 0b                 a4 = a4 + t0
 51126: 82 b7                    a0 = u64 [a4]
 51128: ca 56 06                 s1 = s1 * s0
 51131: ca 69 09                 a2 = a2 * s1
 51134: c8 a9 09                 a2 = a2 + a3
 51137: 64 0a                    a3 = ra
 51139: e6 97 07                 a0 = minu(a0, a2)
 51142: 7b b7                    u64 [a4] = a0
 51144: 95 cc 01                 a5 = a5 + 0x1
 51147: 95 88 08                 a1 = a1 + 0x8
 51150: 95 33 18                 t1 = t1 + 0x18
 51153: ab c0 97                 jump @3752 if ra != a5
      :                          @3757
 51156: 28 13 ff                 jump @3746
      :                          @3758
 51159: 82 17 30                 a0 = u64 [sp + 0x30]
 51162: 85 77 01                 a0 = a0 ^ 0x1
 51165: 82 1b 10                 a4 = u64 [sp + 0x10]
 51168: 82 1c 58                 a5 = u64 [sp + 0x58]
 51171: d8 cb 09                 a2 = a4 <u a5
 51174: d4 97 07                 a0 = a0 | a2
 51177: 64 c9                    a2 = a5
 51179: 51 07 e3 fe              jump @3745 if a0 == 0
      :                          @3759
 51183: 82 17 78                 a0 = u64 [sp + 0x78]
 51186: 82 a9 10                 a2 = u64 [a3 + 0x10]
 51189: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 51192: ac 97 91 fc              jump @3706 if a0 <u a2
      :                          @3760
 51196: 00                       trap
      :                          @3761
 51197: 00                       trap
      :                          @3762
 51198: 00                       trap
      :                          @3763
 51199: 00                       trap
      :                          @3764
 51200: 00                       trap
      :                          @3765
 51201: 00                       trap
      :                          @3766
 51202: 64 a5                    s0 = a3
 51204: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 51208: 82 7b                    a4 = u64 [a0]
 51210: 82 1a 48                 a3 = u64 [sp + 0x48]
 51213: 82 1c 70                 a5 = u64 [sp + 0x70]
 51216: ae bc 3f                 jump @3774 if a5 >=u a4
      :                          @3767
 51219: 95 cb 01                 a4 = a5 + 0x1
 51222: 82 19 50                 a2 = u64 [sp + 0x50]
 51225: ae 9b e5                 jump @3762 if a4 >=u a2
      :                          @3768
 51228: 96 b7 18                 a0 = a4 * 0x18
 51231: c8 a7 07                 a0 = a0 + a3
 51234: 82 76 10                 s1 = u64 [a0 + 0x10]
 51237: ae 65 2b                 jump @3775 if s0 >=u s1
      :                          @3769
 51240: 00                       trap
      :                          @3770
 51241: 82 17 90 00              a0 = u64 [sp + 0x90]
 51245: 82 7b                    a4 = u64 [a0]
 51247: ae bc 20                 jump @3774 if a5 >=u a4
      :                          @3771
 51250: 95 cb 01                 a4 = a5 + 0x1
 51253: 82 19 50                 a2 = u64 [sp + 0x50]
 51256: 82 1a 48                 a3 = u64 [sp + 0x48]
 51259: ae 9b c3                 jump @3762 if a4 >=u a2
      :                          @3772
 51262: 96 b7 18                 a0 = a4 * 0x18
 51265: c8 a7 07                 a0 = a0 + a3
 51268: 82 76 10                 s1 = u64 [a0 + 0x10]
 51271: 82 1a 98 00              a3 = u64 [sp + 0x98]
 51275: ae 6a 05                 jump @3775 if a3 >=u s1
      :                          @3773
 51278: 00                       trap
      :                          @3774
 51279: 00                       trap
      :                          @3775
 51280: 00                       trap
      :                          @3776
 51281: 00                       trap
      :                          @3777
 51282: 00                       trap
      :                          @3778
 51283: 49 21 b0 00              u64 [sp + 176] = 0
 51287: 49 21 b8 00 08           u64 [sp + 184] = 0x8
 51292: 49 21 c0 00              u64 [sp + 192] = 0
 51296: 00                       trap
      :                          @3779
 51297: 00                       trap
      :                          @3780
 51298: 00                       trap
      :                          @3781
 51299: 95 11 68 ff              sp = sp + 0xffffffffffffff68
 51303: 7b 10 90 00              u64 [sp + 0x90] = ra
 51307: 7b 15 88 00              u64 [sp + 0x88] = s0
 51311: 7b 16 80 00              u64 [sp + 0x80] = s1
 51315: 7b 18 10                 u64 [sp + 0x10] = a1
 51318: 7b 17 48                 u64 [sp + 0x48] = a0
 51321: 51 08 90 00              jump @3793 if a1 == 0
      :                          @3782
 51325: 98 87 3c                 a0 = a1 >> 0x3c
 51328: 52 07 6f 04              jump @3887 if a0 != 0
      :                          @3783
 51332: 88 72 01                 t0 = a0 <u 0x1
 51335: 97 89 03                 a2 = a1 << 0x3
 51338: 97 22 03                 t0 = t0 << 0x3
 51341: 33 04 b0 02 03           t2 = 0x302b0
 51346: 33 03 00 00 10           t1 = 0x100000
 51351: c8 34 0b                 a4 = t2 + t1
 51354: 01                       fallthrough
      :                          @3784
 51355: 82 b6                    s1 = u64 [a4]
 51357: c8 96 0c                 a5 = s1 + a2
 51360: ac 6c 4d 04              jump @3885 if a5 <u s1
      :                          @3785
 51364: c8 2c 0a                 a3 = a5 + t0
 51367: d8 ca 05                 s0 = a3 <u a5
 51370: d8 a3 0a                 a3 = t1 <u a3
 51373: d4 5a 0a                 a3 = a3 | s0
 51376: 52 0a 3d 04              jump @3885 if a3 != 0
      :                          @3786
 51380: c9 c4 05                 s0 = t2 - a5
 51383: c8 35 05                 s0 = s0 + t1
 51386: 84 5a 07                 a3 = s0 & 0x7
 51389: c8 ac 0c                 a5 = a5 + a3
 51392: 01                       fallthrough
      :                          @3787
 51393: 82 b7                    a0 = u64 [a4]
 51395: ab 67 d8                 jump @3784 if a0 != s1
      :                          @3788
 51398: 7b bc                    u64 [a4] = a5
 51400: c9 a5 05                 s0 = s0 - a3
 51403: 64 57                    a0 = s0
 51405: 33 08                    a1 = 0
 51407: 50 20 f4 02 3e 43 02     ra = 756, jump @13689
      :                          @3789 [@dyn 378]
 51414: 82 16 10                 s1 = u64 [sp + 0x10]
 51417: 7b 16 68                 u64 [sp + 0x68] = s1
 51420: 7b 15 70                 u64 [sp + 0x70] = s0
 51423: 7b 16 78                 u64 [sp + 0x78] = s1
 51426: 95 17 50                 a0 = sp + 0x50
 51429: 95 18 68                 a1 = sp + 0x68
 51432: 64 69                    a2 = s1
 51434: 50 20 f6 02 32 95        ra = 758, jump @1783
      :                          @3790 [@dyn 379]
 51440: 95 65 01                 s0 = s1 + 0x1
 51443: 51 05 fd 03              jump @3888 if s0 == 0
      :                          @3791
 51447: 98 57 3c                 a0 = s0 >> 0x3c
 51450: 52 07 f5 03              jump @3887 if a0 != 0
      :                          @3792
 51454: 88 77 01                 a0 = a0 <u 0x1
 51457: 7b 15 38                 u64 [sp + 0x38] = s0
 51460: 97 59 03                 a2 = s0 << 0x3
 51463: 28 1c                    jump @3794
      :                          @3793
 51465: 49 11 50                 u64 [sp + 80] = 0
 51468: 49 11 58 08              u64 [sp + 88] = 0x8
 51472: 49 11 60                 u64 [sp + 96] = 0
 51475: 95 88 01                 a1 = a1 + 0x1
 51478: 98 87 3c                 a0 = a1 >> 0x3c
 51481: 88 77 01                 a0 = a0 <u 0x1
 51484: 7b 18 38                 u64 [sp + 0x38] = a1
 51487: 97 89 03                 a2 = a1 << 0x3
 51490: 01                       fallthrough
      :                          @3794
 51491: 97 72 03                 t0 = a0 << 0x3
 51494: 33 04 b0 02 03           t2 = 0x302b0
 51499: 33 03 00 00 10           t1 = 0x100000
 51504: c8 34 0a                 a3 = t2 + t1
 51507: 01                       fallthrough
      :                          @3795
 51508: 82 ab                    a4 = u64 [a3]
 51510: c8 9b 0c                 a5 = a4 + a2
 51513: ac bc b4 03              jump @3885 if a5 <u a4
      :                          @3796
 51517: c8 2c 07                 a0 = a5 + t0
 51520: d8 c7 06                 s1 = a0 <u a5
 51523: d8 73 07                 a0 = t1 <u a0
 51526: d4 67 07                 a0 = a0 | s1
 51529: 52 07 a4 03              jump @3885 if a0 != 0
      :                          @3797
 51533: c9 c4 06                 s1 = t2 - a5
 51536: c8 36 08                 a1 = s1 + t1
 51539: 84 86 07                 s1 = a1 & 0x7
 51542: c8 6c 0c                 a5 = a5 + s1
 51545: 01                       fallthrough
      :                          @3798
 51546: 82 a7                    a0 = u64 [a3]
 51548: ab b7 d8                 jump @3795 if a0 != a4
      :                          @3799
 51551: 7b ac                    u64 [a3] = a5
 51553: 33 05                    s0 = 0
 51555: c9 68 06                 s1 = a1 - s1
 51558: 64 67                    a0 = s1
 51560: 33 08                    a1 = 0
 51562: 7b 19 18                 u64 [sp + 0x18] = a2
 51565: 50 20 f8 02 a0 42 02     ra = 760, jump @13689
      :                          @3800 [@dyn 380]
 51572: 82 18 10                 a1 = u64 [sp + 0x10]
 51575: 51 08 79 01              jump @3829 if a1 == 0
      :                          @3801
 51579: 82 15 38                 s0 = u64 [sp + 0x38]
 51582: 51 18 ff 72 03           jump @3888 if a1 == 4294967295
      :                          @3802
 51587: 33 07 01                 a0 = 0x1
 51590: 82 12 48                 t0 = u64 [sp + 0x48]
 51593: 01                       fallthrough
      :                          @3803
 51594: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
 51597: ae 5a 64 03              jump @3889 if a3 >=u s0
      :                          @3804
 51601: ae 8a 4c 03              jump @3878 if a3 >=u a1
      :                          @3805
 51605: ae 57 56 03              jump @3883 if a0 >=u s0
      :                          @3806
 51609: d8 87 09                 a2 = a0 <u a1
 51612: 97 ab 03                 a4 = a3 << 0x3
 51615: c8 b6 0a                 a3 = s1 + a4
 51618: 82 aa                    a3 = u64 [a3]
 51620: c8 2b 0b                 a4 = a4 + t0
 51623: 82 bc                    a5 = u64 [a4]
 51625: 97 7b 03                 a4 = a0 << 0x3
 51628: c8 97 07                 a0 = a0 + a2
 51631: 85 99 01                 a2 = a2 ^ 0x1
 51634: c8 6b 0b                 a4 = a4 + s1
 51637: c8 ac 0c                 a5 = a5 + a3
 51640: d8 78 0a                 a3 = a1 <u a0
 51643: d4 a9 09                 a2 = a2 | a3
 51646: 7b bc                    u64 [a4] = a5
 51648: 51 09 ca                 jump @3803 if a2 == 0
      :                          @3807
 51651: 7b 16 28                 u64 [sp + 0x28] = s1
 51654: 82 17 60                 a0 = u64 [sp + 0x60]
 51657: 82 19 58                 a2 = u64 [sp + 0x58]
 51660: 7b 19 48                 u64 [sp + 0x48] = a2
 51663: 7b 17 40                 u64 [sp + 0x40] = a0
 51666: ae 75 fe 01              jump @3856 if s0 >=u a0
      :                          @3808
 51670: 33 0a 01                 a3 = 0x1
 51673: 28 17                    jump @3810
      :                          @3809
 51675: 82 17                    a0 = u64 [sp]
 51677: 85 77 01                 a0 = a0 ^ 0x1
 51680: 82 18 10                 a1 = u64 [sp + 0x10]
 51683: 82 1a 08                 a3 = u64 [sp + 0x8]
 51686: d8 a8 09                 a2 = a1 <u a3
 51689: d4 97 07                 a0 = a0 | a2
 51692: 52 07 f2 02              jump @3879 if a0 != 0
      :                          @3810
 51696: 33 06                    s1 = 0
 51698: d8 8a 07                 a0 = a3 <u a1
 51701: 7b 17                    u64 [sp] = a0
 51703: c8 a7 07                 a0 = a0 + a3
 51706: 7b 17 08                 u64 [sp + 0x8] = a0
 51709: 7b 1a 30                 u64 [sp + 0x30] = a3
 51712: c9 a8 08                 a1 = a1 - a3
 51715: 7b 18 20                 u64 [sp + 0x20] = a1
 51718: 28 1a                    jump @3812
      :                          @3811
 51720: 82 18 20                 a1 = u64 [sp + 0x20]
 51723: d8 86 07                 a0 = s1 <u a1
 51726: c8 76 06                 s1 = s1 + a0
 51729: d8 68 09                 a2 = a1 <u s1
 51732: 85 99 01                 a2 = a2 ^ 0x1
 51735: d2 97 07                 a0 = a0 & a2
 51738: 82 15 38                 s0 = u64 [sp + 0x38]
 51741: 51 07 be                 jump @3809 if a0 == 0
      :                          @3812
 51744: 82 18 40                 a1 = u64 [sp + 0x40]
 51747: ae 86 c6 02              jump @3881 if s1 >=u a1
      :                          @3813
 51751: 96 60 18                 ra = s1 * 0x18
 51754: 82 17 48                 a0 = u64 [sp + 0x48]
 51757: c8 70 00                 ra = ra + a0
 51760: 82 0b 10                 a4 = u64 [ra + 0x10]
 51763: 82 1a 30                 a3 = u64 [sp + 0x30]
 51766: c8 6a 0a                 a3 = a3 + s1
 51769: 95 a9 ff                 a2 = a3 + 0xffffffffffffffff
 51772: ae b9 ae 02              jump @3882 if a2 >=u a4
      :                          @3814
 51776: 82 07 08                 a0 = u64 [ra + 0x8]
 51779: 97 92 03                 t0 = a2 << 0x3
 51782: c8 27 07                 a0 = a0 + t0
 51785: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 51788: ae 5a a5 02              jump @3889 if a3 >=u s0
      :                          @3815
 51792: ae 56 9e 02              jump @3886 if s1 >=u s0
      :                          @3816
 51796: ac 69 b4                 jump @3811 if a2 <u s1
      :                          @3817
 51799: 97 aa 03                 a3 = a3 << 0x3
 51802: 82 18 28                 a1 = u64 [sp + 0x28]
 51805: c8 8a 0a                 a3 = a3 + a1
 51808: 82 a7                    a0 = u64 [a3]
 51810: 97 6a 03                 a3 = s1 << 0x3
 51813: c8 8a 0a                 a3 = a3 + a1
 51816: 82 aa                    a3 = u64 [a3]
 51818: 95 03 10                 t1 = ra + 0x10
 51821: 95 00 08                 ra = ra + 0x8
 51824: c9 a7 05                 s0 = a0 - a3
 51827: 64 67                    a0 = s1
 51829: 01                       fallthrough
      :                          @3818
 51830: ae 76 26                 jump @3823 if s1 >=u a0
      :                          @3819
 51833: 82 3b                    a4 = u64 [t1]
 51835: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
 51838: ae ba 5e 02              jump @3877 if a3 >=u a4
      :                          @3820
 51842: 82 0b                    a4 = u64 [ra]
 51844: 97 aa 03                 a3 = a3 << 0x3
 51847: c8 ba 0a                 a3 = a3 + a4
 51850: 82 ab                    a4 = u64 [a3]
 51852: 82 18 40                 a1 = u64 [sp + 0x40]
 51855: ac 97 15                 jump @3824 if a0 <u a2
      :                          @3821
 51858: 33 04                    t2 = 0
 51860: 82 3a                    a3 = u64 [t1]
 51862: ac a9 33                 jump @3827 if a2 <u a3
      :                          @3822
 51865: 28 42 02                 jump @3876
      :                          @3823
 51868: 33 0b                    a4 = 0
 51870: 82 18 40                 a1 = u64 [sp + 0x40]
 51873: ae 97 f1                 jump @3821 if a0 >=u a2
      :                          @3824
 51876: 95 7a 01                 a3 = a0 + 0x1
 51879: ae 8a 36 02              jump @3878 if a3 >=u a1
      :                          @3825
 51883: 96 ac 18                 a5 = a3 * 0x18
 51886: 82 18 48                 a1 = u64 [sp + 0x48]
 51889: c8 8c 0c                 a5 = a5 + a1
 51892: 82 ca 10                 a3 = u64 [a5 + 0x10]
 51895: ae a9 24 02              jump @3876 if a2 >=u a3
      :                          @3826
 51899: 82 ca 08                 a3 = u64 [a5 + 0x8]
 51902: c8 2a 0a                 a3 = a3 + t0
 51905: 82 a4                    t2 = u64 [a3]
 51907: 82 3a                    a3 = u64 [t1]
 51909: ae a9 16 02              jump @3876 if a2 >=u a3
      :                          @3827
 51913: 82 0a                    a3 = u64 [ra]
 51915: c8 5b 0b                 a4 = a4 + s0
 51918: c8 2a 0a                 a3 = a3 + t0
 51921: 82 ac                    a5 = u64 [a3]
 51923: c8 4b 0b                 a4 = a4 + t2
 51926: d8 97 08                 a1 = a0 <u a2
 51929: c8 87 07                 a0 = a0 + a1
 51932: e6 bc 0b                 a4 = minu(a5, a4)
 51935: d8 79 0c                 a5 = a2 <u a0
 51938: 85 cc 01                 a5 = a5 ^ 0x1
 51941: d2 c8 08                 a1 = a1 & a5
 51944: 7b ab                    u64 [a3] = a4
 51946: 52 08 8c                 jump @3818 if a1 != 0
      :                          @3828
 51949: 28 1b ff                 jump @3811
      :                          @3829
 51952: 82 17 60                 a0 = u64 [sp + 0x60]
 51955: 82 15 38                 s0 = u64 [sp + 0x38]
 51958: 51 07 f2 01              jump @3880 if a0 == 0
      :                          @3830
 51962: 64 72                    t0 = a0
 51964: 82 14 58                 t2 = u64 [sp + 0x58]
 51967: 82 49 10                 a2 = u64 [t2 + 0x10]
 51970: 95 87 ff                 a0 = a1 + 0xffffffffffffffff
 51973: ae 97 e7 01              jump @3884 if a0 >=u a2
      :                          @3831
 51977: 82 48 08                 a1 = u64 [t2 + 0x8]
 51980: 97 77 03                 a0 = a0 << 0x3
 51983: c8 87 07                 a0 = a0 + a1
 51986: 82 77                    a0 = u64 [a0]
 51988: 7b 17 48                 u64 [sp + 0x48] = a0
 51991: 33 07 00 00 02           a0 = 0x20000
 51996: ac 57 25                 jump @3837 if a0 <u s0
      :                          @3832
 51999: 33 09 b0 02 03           a2 = 0x302b0
 52004: 95 99 00 00 10           a2 = a2 + 0x100000
 52009: 01                       fallthrough
      :                          @3833
 52010: 82 9a                    a3 = u64 [a2]
 52012: c9 a9 08                 a1 = a2 - a3
 52015: ab 68 12                 jump @3837 if a1 != s1
      :                          @3834
 52018: 82 18 18                 a1 = u64 [sp + 0x18]
 52021: c9 8a 08                 a1 = a3 - a1
 52024: 01                       fallthrough
      :                          @3835
 52025: 82 9b                    a4 = u64 [a2]
 52027: ab ab ef                 jump @3833 if a4 != a3
      :                          @3836
 52030: 7b 98                    u64 [a2] = a1
 52032: 01                       fallthrough
      :                          @3837
 52033: 33 0b                    a4 = 0
 52035: 33 0c b0 02 03           a5 = 0x302b0
 52040: 33 08 00 00 10           a1 = 0x100000
 52045: c8 8c 0c                 a5 = a5 + a1
 52048: 33 03 18                 t1 = 0x18
 52051: 28 08                    jump @3839
      :                          @3838
 52053: 95 bb 01                 a4 = a4 + 0x1
 52056: aa 2b 33                 jump @3848 if a4 == t0
      :                          @3839
 52059: ca 3b 0a                 a3 = a4 * t1
 52062: c8 4a 0a                 a3 = a3 + t2
 52065: 82 a9                    a2 = u64 [a3]
 52067: 51 09 f2                 jump @3838 if a2 == 0
      :                          @3840
 52070: ac 97 ef                 jump @3838 if a0 <u a2
      :                          @3841
 52073: 82 a5 08                 s0 = u64 [a3 + 0x8]
 52076: 97 90 03                 ra = a2 << 0x3
 52079: 01                       fallthrough
      :                          @3842
 52080: 82 ca                    a3 = u64 [a5]
 52082: c9 ac 08                 a1 = a5 - a3
 52085: ab 58 e0                 jump @3838 if a1 != s0
      :                          @3843
 52088: c9 0a 08                 a1 = a3 - ra
 52091: 01                       fallthrough
      :                          @3844
 52092: 82 c6                    s1 = u64 [a5]
 52094: ab a6 f2                 jump @3842 if s1 != a3
      :                          @3845
 52097: 7b c8                    u64 [a5] = a1
 52099: 33 09                    a2 = 0
 52101: 01                       fallthrough
      :                          @3846
 52102: ab a6 ea                 jump @3842 if s1 != a3
      :                          @3847
 52105: 28 cc                    jump @3838
      :                          @3848
 52107: 82 18 50                 a1 = u64 [sp + 0x50]
 52110: 51 08 2d                 jump @3855 if a1 == 0
      :                          @3849
 52113: 33 09 aa aa 00           a2 = 0xaaaa
 52118: ac 89 25                 jump @3855 if a2 <u a1
      :                          @3850
 52121: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 52124: 33 09 b0 02 03           a2 = 0x302b0
 52129: 95 99 00 00 10           a2 = a2 + 0x100000
 52134: 01                       fallthrough
      :                          @3851
 52135: 82 9a                    a3 = u64 [a2]
 52137: c9 a9 0b                 a4 = a2 - a3
 52140: ab 4b 0f                 jump @3855 if a4 != t2
      :                          @3852
 52143: c8 8a 0b                 a4 = a3 + a1
 52146: 01                       fallthrough
      :                          @3853
 52147: 82 9c                    a5 = u64 [a2]
 52149: ab ac f2                 jump @3851 if a5 != a3
      :                          @3854
 52152: 7b 9b                    u64 [a2] = a4
 52154: 01                       fallthrough
      :                          @3855
 52155: 82 17 48                 a0 = u64 [sp + 0x48]
 52158: 82 10 90 00              ra = u64 [sp + 0x90]
 52162: 82 15 88 00              s0 = u64 [sp + 0x88]
 52166: 82 16 80 00              s1 = u64 [sp + 0x80]
 52170: 95 11 98 00              sp = sp + 0x98
 52174: 32 00                    ret
      :                          @3856
 52176: 33 0c 01                 a5 = 0x1
 52179: 28 17                    jump @3858
      :                          @3857
 52181: 82 17                    a0 = u64 [sp]
 52183: 85 77 01                 a0 = a0 ^ 0x1
 52186: 82 18 10                 a1 = u64 [sp + 0x10]
 52189: 82 1c 08                 a5 = u64 [sp + 0x8]
 52192: d8 c8 09                 a2 = a1 <u a5
 52195: d4 97 07                 a0 = a0 | a2
 52198: 52 07 f8 00              jump @3879 if a0 != 0
      :                          @3858
 52202: 33 06                    s1 = 0
 52204: d8 8c 07                 a0 = a5 <u a1
 52207: 7b 17                    u64 [sp] = a0
 52209: c8 c7 07                 a0 = a0 + a5
 52212: 7b 17 08                 u64 [sp + 0x8] = a0
 52215: c9 c8 08                 a1 = a1 - a5
 52218: 7b 18 20                 u64 [sp + 0x20] = a1
 52221: 82 18 40                 a1 = u64 [sp + 0x40]
 52224: 7b 1c 30                 u64 [sp + 0x30] = a5
 52227: 28 1d                    jump @3860
      :                          @3859
 52229: 82 19 20                 a2 = u64 [sp + 0x20]
 52232: d8 96 07                 a0 = s1 <u a2
 52235: c8 76 06                 s1 = s1 + a0
 52238: d8 69 09                 a2 = a2 <u s1
 52241: 85 99 01                 a2 = a2 ^ 0x1
 52244: d2 97 07                 a0 = a0 & a2
 52247: 82 15 38                 s0 = u64 [sp + 0x38]
 52250: 82 1c 30                 a5 = u64 [sp + 0x30]
 52253: 51 07 b8                 jump @3857 if a0 == 0
      :                          @3860
 52256: ae 86 c9 00              jump @3881 if s1 >=u a1
      :                          @3861
 52260: 96 62 18                 t0 = s1 * 0x18
 52263: 82 17 48                 a0 = u64 [sp + 0x48]
 52266: c8 72 02                 t0 = t0 + a0
 52269: 82 2b 10                 a4 = u64 [t0 + 0x10]
 52272: c8 c6 0a                 a3 = s1 + a5
 52275: 95 a9 ff                 a2 = a3 + 0xffffffffffffffff
 52278: ae b9 b4 00              jump @3882 if a2 >=u a4
      :                          @3862
 52282: 82 27 08                 a0 = u64 [t0 + 0x8]
 52285: 97 90 03                 ra = a2 << 0x3
 52288: c8 07 07                 a0 = a0 + ra
 52291: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 52294: ae 5a ab 00              jump @3889 if a3 >=u s0
      :                          @3863
 52298: ac 69 bb                 jump @3859 if a2 <u s1
      :                          @3864
 52301: 97 aa 03                 a3 = a3 << 0x3
 52304: 82 1b 28                 a4 = u64 [sp + 0x28]
 52307: c8 ba 0a                 a3 = a3 + a4
 52310: 82 a7                    a0 = u64 [a3]
 52312: 97 6a 03                 a3 = s1 << 0x3
 52315: c8 ba 0a                 a3 = a3 + a4
 52318: 82 aa                    a3 = u64 [a3]
 52320: 95 25 10                 s0 = t0 + 0x10
 52323: 95 22 08                 t0 = t0 + 0x8
 52326: c9 a7 03                 t1 = a0 - a3
 52329: 64 64                    t2 = s1
 52331: 01                       fallthrough
      :                          @3865
 52332: ae 46 21                 jump @3870 if s1 >=u t2
      :                          @3866
 52335: 82 5b                    a4 = u64 [s0]
 52337: 95 4a ff                 a3 = t2 + 0xffffffffffffffff
 52340: ae ba 68                 jump @3877 if a3 >=u a4
      :                          @3867
 52343: 82 27                    a0 = u64 [t0]
 52345: 97 aa 03                 a3 = a3 << 0x3
 52348: c8 a7 07                 a0 = a0 + a3
 52351: 82 7b                    a4 = u64 [a0]
 52353: ac 94 11                 jump @3871 if t2 <u a2
      :                          @3868
 52356: 33 07                    a0 = 0
 52358: 82 5a                    a3 = u64 [s0]
 52360: ac a9 2c                 jump @3874 if a2 <u a3
      :                          @3869
 52363: 28 50                    jump @3876
      :                          @3870
 52365: 33 0b                    a4 = 0
 52367: ae 94 f5                 jump @3868 if t2 >=u a2
      :                          @3871
 52370: 95 4a 01                 a3 = t2 + 0x1
 52373: ae 8a 48                 jump @3878 if a3 >=u a1
      :                          @3872
 52376: 96 a7 18                 a0 = a3 * 0x18
 52379: 82 1a 48                 a3 = u64 [sp + 0x48]
 52382: c8 a7 07                 a0 = a0 + a3
 52385: 82 7a 10                 a3 = u64 [a0 + 0x10]
 52388: ae a9 37                 jump @3876 if a2 >=u a3
      :                          @3873
 52391: 82 77 08                 a0 = u64 [a0 + 0x8]
 52394: c8 07 07                 a0 = a0 + ra
 52397: 82 77                    a0 = u64 [a0]
 52399: 82 5a                    a3 = u64 [s0]
 52401: ae a9 2a                 jump @3876 if a2 >=u a3
      :                          @3874
 52404: 82 2a                    a3 = u64 [t0]
 52406: c8 3b 0b                 a4 = a4 + t1
 52409: c8 0a 0a                 a3 = a3 + ra
 52412: 82 ac                    a5 = u64 [a3]
 52414: c8 b7 07                 a0 = a0 + a4
 52417: d8 94 0b                 a4 = t2 <u a2
 52420: c8 b4 04                 t2 = t2 + a4
 52423: e6 7c 07                 a0 = minu(a5, a0)
 52426: d8 49 0c                 a5 = a2 <u t2
 52429: 85 cc 01                 a5 = a5 ^ 0x1
 52432: d2 cb 0b                 a4 = a4 & a5
 52435: 7b a7                    u64 [a3] = a0
 52437: 52 0b 97                 jump @3865 if a4 != 0
      :                          @3875
 52440: 28 2d ff                 jump @3859
      :                          @3876
 52443: 00                       trap
      :                          @3877
 52444: 00                       trap
      :                          @3878
 52445: 00                       trap
      :                          @3879
 52446: 82 17 40                 a0 = u64 [sp + 0x40]
 52449: 82 16 28                 s1 = u64 [sp + 0x28]
 52452: 52 07 16 fe              jump @3830 if a0 != 0
      :                          @3880
 52456: 00                       trap
      :                          @3881
 52457: 00                       trap
      :                          @3882
 52458: 00                       trap
      :                          @3883
 52459: 00                       trap
      :                          @3884
 52460: 00                       trap
      :                          @3885
 52461: 00                       trap
      :                          @3886
 52462: 00                       trap
      :                          @3887
 52463: 00                       trap
      :                          @3888
 52464: 00                       trap
      :                          @3889
 52465: 00                       trap
      :                          @3890
 52466: 95 11 60 ff              sp = sp + 0xffffffffffffff60
 52470: 7b 10 98 00              u64 [sp + 0x98] = ra
 52474: 7b 15 90 00              u64 [sp + 0x90] = s0
 52478: 7b 16 88 00              u64 [sp + 0x88] = s1
 52482: 64 a6                    s1 = a3
 52484: 95 a2 01                 t0 = a3 + 0x1
 52487: 7b 19 30                 u64 [sp + 0x30] = a2
 52490: 7b 17                    u64 [sp] = a0
 52492: 7b 18 18                 u64 [sp + 0x18] = a1
 52495: 52 02 0b                 jump @3892 if t0 != 0
      :                          @3891
 52498: 33 09                    a2 = 0
 52500: 33 07 08                 a0 = 0x8
 52503: 28 98 00                 jump @3905
      :                          @3892
 52506: 7b 16 50                 u64 [sp + 0x50] = s1
 52509: 98 27 3c                 a0 = t0 >> 0x3c
 52512: 52 07 0f 03              jump @3971 if a0 != 0
      :                          @3893
 52516: 88 73 01                 t1 = a0 <u 0x1
 52519: 97 27 03                 a0 = t0 << 0x3
 52522: 97 33 03                 t1 = t1 << 0x3
 52525: 33 00 b0 02 03           ra = 0x302b0
 52530: 33 04 00 00 10           t2 = 0x100000
 52535: c8 40 0c                 a5 = ra + t2
 52538: 01                       fallthrough
      :                          @3894
 52539: 82 c5                    s0 = u64 [a5]
 52541: c8 75 06                 s1 = s0 + a0
 52544: ac 56 ec 02              jump @3968 if s1 <u s0
      :                          @3895
 52548: c8 36 0a                 a3 = s1 + t1
 52551: d8 6a 0b                 a4 = a3 <u s1
 52554: d8 a4 0a                 a3 = t2 <u a3
 52557: d4 ba 0a                 a3 = a3 | a4
 52560: 52 0a dc 02              jump @3968 if a3 != 0
      :                          @3896
 52564: c9 60 0a                 a3 = ra - s1
 52567: c8 4a 0a                 a3 = a3 + t2
 52570: 84 ab 07                 a4 = a3 & 0x7
 52573: c8 b6 06                 s1 = s1 + a4
 52576: 01                       fallthrough
      :                          @3897
 52577: 82 c8                    a1 = u64 [a5]
 52579: ab 58 d8                 jump @3894 if a1 != s0
      :                          @3898
 52582: 7b c6                    u64 [a5] = s1
 52584: 01                       fallthrough
      :                          @3899
 52585: c9 ba 07                 a0 = a3 - a4
 52588: 53 12 02 28              jump @3903 if t0 <u 2
      :                          @3900
 52592: 14 09 ff ff ff ff ff ff ff 3f a2 = 0x3fffffffffffffff
 52602: 82 16 50                 s1 = u64 [sp + 0x50]
 52605: 64 6b                    a4 = s1
 52607: 64 7c                    a5 = a0
 52609: 82 18 18                 a1 = u64 [sp + 0x18]
 52612: 01                       fallthrough
      :                          @3901
 52613: 7b c9                    u64 [a5] = a2
 52615: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 52618: 95 cc 08                 a5 = a5 + 0x8
 52621: 52 0b f8                 jump @3901 if a4 != 0
      :                          @3902
 52624: 64 69                    a2 = s1
 52626: 28 0d                    jump @3904
      :                          @3903
 52628: 33 09                    a2 = 0
 52630: 64 7c                    a5 = a0
 52632: 82 16 50                 s1 = u64 [sp + 0x50]
 52635: 82 18 18                 a1 = u64 [sp + 0x18]
 52638: 01                       fallthrough
      :                          @3904
 52639: 14 0a ff ff ff ff ff ff ff 3f a3 = 0x3fffffffffffffff
 52649: 7b ca                    u64 [a5] = a3
 52651: 95 99 01                 a2 = a2 + 0x1
 52654: 01                       fallthrough
      :                          @3905
 52655: 7b 12 70                 u64 [sp + 0x70] = t0
 52658: 7b 17 78                 u64 [sp + 0x78] = a0
 52661: 7b 19 80 00              u64 [sp + 0x80] = a2
 52665: 95 89 01                 a2 = a1 + 0x1
 52668: 95 17 58                 a0 = sp + 0x58
 52671: 95 18 70                 a1 = sp + 0x70
 52674: 50 20 fa 02 5a 90        ra = 762, jump @1783
      :                          @3906 [@dyn 381]
 52680: 82 1b 68                 a4 = u64 [sp + 0x68]
 52683: 51 0b 50 02              jump @3959 if a4 == 0
      :                          @3907
 52687: 82 14 60                 t2 = u64 [sp + 0x60]
 52690: 82 47 10                 a0 = u64 [t2 + 0x10]
 52693: 51 07 55 02              jump @3966 if a0 == 0
      :                          @3908
 52697: 82 47 08                 a0 = u64 [t2 + 0x8]
 52700: 49 07                    u64 [a0 + 0] = 0
 52702: 82 18 18                 a1 = u64 [sp + 0x18]
 52705: 7b 14 20                 u64 [sp + 0x20] = t2
 52708: 7b 1b 28                 u64 [sp + 0x28] = a4
 52711: 51 08 5b                 jump @3917 if a1 == 0
      :                          @3909
 52714: 33 07 01                 a0 = 0x1
 52717: 33 09 18                 a2 = 0x18
 52720: 14 0a ff ff ff ff ff ff ff 3f a3 = 0x3fffffffffffffff
 52730: 01                       fallthrough
      :                          @3910
 52731: ae b7 21 02              jump @3960 if a0 >=u a4
      :                          @3911
 52735: ca 97 0b                 a4 = a0 * a2
 52738: c8 4b 0b                 a4 = a4 + t2
 52741: 82 bc 10                 a5 = u64 [a4 + 0x10]
 52744: 51 0c 13 02              jump @3959 if a5 == 0
      :                          @3912
 52748: d8 87 0c                 a5 = a0 <u a1
 52751: c8 c7 07                 a0 = a0 + a5
 52754: 82 bb 08                 a4 = u64 [a4 + 0x8]
 52757: 85 c5 01                 s0 = a5 ^ 0x1
 52760: d8 78 0c                 a5 = a1 <u a0
 52763: d4 5c 0c                 a5 = a5 | s0
 52766: 7b ba                    u64 [a4] = a3
 52768: 82 1b 28                 a4 = u64 [sp + 0x28]
 52771: 51 0c d8                 jump @3910 if a5 == 0
      :                          @3913
 52774: 52 06 20                 jump @3918 if s1 != 0
      :                          @3914
 52777: 33 07 01                 a0 = 0x1
 52780: 01                       fallthrough
      :                          @3915
 52781: d8 87 09                 a2 = a0 <u a1
 52784: 85 9a 01                 a3 = a2 ^ 0x1
 52787: c8 97 07                 a0 = a0 + a2
 52790: d8 78 09                 a2 = a1 <u a0
 52793: d4 a9 09                 a2 = a2 | a3
 52796: 51 09 f1                 jump @3915 if a2 == 0
      :                          @3916
 52799: 28 28 01                 jump @3934
      :                          @3917
 52802: 51 06 25 01              jump @3934 if s1 == 0
      :                          @3918
 52806: 33 07 01                 a0 = 0x1
 52809: 14 0a ff ff ff ff ff ff ff 3f a3 = 0x3fffffffffffffff
 52819: 01                       fallthrough
      :                          @3919
 52820: 82 49 10                 a2 = u64 [t2 + 0x10]
 52823: ae 97 c6 01              jump @3961 if a0 >=u a2
      :                          @3920
 52827: d8 67 0c                 a5 = a0 <u s1
 52830: 82 49 08                 a2 = u64 [t2 + 0x8]
 52833: 97 7b 03                 a4 = a0 << 0x3
 52836: c8 c7 07                 a0 = a0 + a5
 52839: 85 cc 01                 a5 = a5 ^ 0x1
 52842: c8 b9 09                 a2 = a2 + a4
 52845: d8 76 0b                 a4 = s1 <u a0
 52848: d4 cb 0b                 a4 = a4 | a5
 52851: 7b 9a                    u64 [a2] = a3
 52853: 51 0b df                 jump @3919 if a4 == 0
      :                          @3921
 52856: 82 1b 28                 a4 = u64 [sp + 0x28]
 52859: 51 08 ec 00              jump @3934 if a1 == 0
      :                          @3922
 52863: 33 0a 01                 a3 = 0x1
 52866: 01                       fallthrough
      :                          @3923
 52867: 95 a9 ff                 a2 = a3 + 0xffffffffffffffff
 52870: ae 89 98 01              jump @3962 if a2 >=u a1
      :                          @3924
 52874: ae b9 95 01              jump @3963 if a2 >=u a4
      :                          @3925
 52878: 64 ac                    a5 = a3
 52880: 64 47                    a0 = t2
 52882: 64 a8                    a1 = a3
 52884: 96 c4 18                 t2 = a5 * 0x18
 52887: c8 74 04                 t2 = t2 + a0
 52890: 95 47 f8                 a0 = t2 + 0xfffffffffffffff8
 52893: 7b 17 50                 u64 [sp + 0x50] = a0
 52896: ae bc 80 01              jump @3964 if a5 >=u a4
      :                          @3926
 52900: 82 17 18                 a0 = u64 [sp + 0x18]
 52903: d8 78 07                 a0 = a1 <u a0
 52906: 7b 17 08                 u64 [sp + 0x8] = a0
 52909: c8 78 08                 a1 = a1 + a0
 52912: 7b 18 10                 u64 [sp + 0x10] = a1
 52915: 97 99 03                 a2 = a2 << 0x3
 52918: 82 17                    a0 = u64 [sp]
 52920: c8 97 07                 a0 = a0 + a2
 52923: 7b 17 40                 u64 [sp + 0x40] = a0
 52926: 95 47 f0                 a0 = t2 + 0xfffffffffffffff0
 52929: 7b 17 38                 u64 [sp + 0x38] = a0
 52932: 95 47 10                 a0 = t2 + 0x10
 52935: 7b 17 48                 u64 [sp + 0x48] = a0
 52938: 95 44 08                 t2 = t2 + 0x8
 52941: 33 09 01                 a2 = 0x1
 52944: 01                       fallthrough
      :                          @3927
 52945: 95 9b ff                 a4 = a2 + 0xffffffffffffffff
 52948: ae 6b 43 01              jump @3955 if a4 >=u s1
      :                          @3928
 52952: 82 17 50                 a0 = u64 [sp + 0x50]
 52955: 82 7a                    a3 = u64 [a0]
 52957: ae a9 51 01              jump @3970 if a2 >=u a3
      :                          @3929
 52961: 82 17 48                 a0 = u64 [sp + 0x48]
 52964: 82 7c                    a5 = u64 [a0]
 52966: ae cb 32 01              jump @3956 if a4 >=u a5
      :                          @3930
 52970: ae ab 2f 01              jump @3957 if a4 >=u a3
      :                          @3931
 52974: ae c9 2c 01              jump @3958 if a2 >=u a5
      :                          @3932
 52978: 82 17 40                 a0 = u64 [sp + 0x40]
 52981: 82 7a                    a3 = u64 [a0]
 52983: 97 bb 03                 a4 = a4 << 0x3
 52986: 82 1c 30                 a5 = u64 [sp + 0x30]
 52989: c8 bc 0c                 a5 = a5 + a4
 52992: 82 cc                    a5 = u64 [a5]
 52994: d8 ac 02                 t0 = a5 <u a3
 52997: 82 17 38                 a0 = u64 [sp + 0x38]
 53000: 82 78                    a1 = u64 [a0]
 53002: c9 ca 00                 ra = a3 - a5
 53005: 64 63                    t1 = s1
 53007: 97 96 03                 s1 = a2 << 0x3
 53010: 82 45                    s0 = u64 [t2]
 53012: c8 68 07                 a0 = a1 + s1
 53015: 82 77                    a0 = u64 [a0]
 53017: c8 b8 08                 a1 = a1 + a4
 53020: c8 5b 0b                 a4 = a4 + s0
 53023: 82 bb                    a4 = u64 [a4]
 53025: 82 88                    a1 = u64 [a1]
 53027: c9 ac 0c                 a5 = a5 - a3
 53030: db 20 0c                 a5 = ra if t0 != 0
 53033: e6 b7 07                 a0 = minu(a0, a4)
 53036: e6 87 07                 a0 = minu(a0, a1)
 53039: c8 65 05                 s0 = s0 + s1
 53042: 64 36                    s1 = t1
 53044: d8 39 08                 a1 = a2 <u t1
 53047: c8 89 09                 a2 = a2 + a1
 53050: c8 c7 07                 a0 = a0 + a5
 53053: d8 93 0a                 a3 = t1 <u a2
 53056: 85 aa 01                 a3 = a3 ^ 0x1
 53059: d2 a8 08                 a1 = a1 & a3
 53062: 7b 57                    u64 [s0] = a0
 53064: 52 08 89                 jump @3927 if a1 != 0
      :                          @3933
 53067: 82 17 08                 a0 = u64 [sp + 0x8]
 53070: 85 77 01                 a0 = a0 ^ 0x1
 53073: 82 18 18                 a1 = u64 [sp + 0x18]
 53076: 82 1a 10                 a3 = u64 [sp + 0x10]
 53079: d8 a8 09                 a2 = a1 <u a3
 53082: d4 97 07                 a0 = a0 | a2
 53085: 82 14 20                 t2 = u64 [sp + 0x20]
 53088: 82 1b 28                 a4 = u64 [sp + 0x28]
 53091: 51 07 20 ff              jump @3923 if a0 == 0
      :                          @3934
 53095: ae b8 c2 00              jump @3965 if a1 >=u a4
      :                          @3935
 53099: 33 02 18                 t0 = 0x18
 53102: ca 28 07                 a0 = a1 * t0
 53105: c8 47 07                 a0 = a0 + t2
 53108: 82 79 10                 a2 = u64 [a0 + 0x10]
 53111: ae 96 b4 00              jump @3967 if s1 >=u a2
      :                          @3936
 53115: 82 77 08                 a0 = u64 [a0 + 0x8]
 53118: 33 09                    a2 = 0
 53120: 97 68 03                 a1 = s1 << 0x3
 53123: c8 87 07                 a0 = a0 + a1
 53126: 82 77                    a0 = u64 [a0]
 53128: 33 0b b0 02 03           a4 = 0x302b0
 53133: 95 bb 00 00 10           a4 = a4 + 0x100000
 53138: 33 03 00 00 02           t1 = 0x20000
 53143: 28 0e                    jump @3938
      :                          @3937
 53145: 95 99 01                 a2 = a2 + 0x1
 53148: 82 14 20                 t2 = u64 [sp + 0x20]
 53151: 82 18 28                 a1 = u64 [sp + 0x28]
 53154: aa 89 33                 jump @3947 if a2 == a1
      :                          @3938
 53157: ca 29 0c                 a5 = a2 * t0
 53160: c8 4c 0c                 a5 = a5 + t2
 53163: 82 c5                    s0 = u64 [a5]
 53165: 51 05 ec                 jump @3937 if s0 == 0
      :                          @3939
 53168: ac 53 e9                 jump @3937 if t1 <u s0
      :                          @3940
 53171: 82 c6 08                 s1 = u64 [a5 + 0x8]
 53174: 97 54 03                 t2 = s0 << 0x3
 53177: 01                       fallthrough
      :                          @3941
 53178: 82 bc                    a5 = u64 [a4]
 53180: c9 cb 08                 a1 = a4 - a5
 53183: ab 68 da                 jump @3937 if a1 != s1
      :                          @3942
 53186: c9 4c 08                 a1 = a5 - t2
 53189: 01                       fallthrough
      :                          @3943
 53190: 82 ba                    a3 = u64 [a4]
 53192: ab ca f2                 jump @3941 if a3 != a5
      :                          @3944
 53195: 7b b8                    u64 [a4] = a1
 53197: 33 05                    s0 = 0
 53199: 01                       fallthrough
      :                          @3945
 53200: ab ca ea                 jump @3941 if a3 != a5
      :                          @3946
 53203: 28 c6                    jump @3937
      :                          @3947
 53205: 82 19 58                 a2 = u64 [sp + 0x58]
 53208: 51 09 2d                 jump @3954 if a2 == 0
      :                          @3948
 53211: 33 08 aa aa 00           a1 = 0xaaaa
 53216: ac 98 25                 jump @3954 if a1 <u a2
      :                          @3949
 53219: 96 9b e8                 a4 = a2 * 0xffffffffffffffe8
 53222: 33 09 b0 02 03           a2 = 0x302b0
 53227: 95 99 00 00 10           a2 = a2 + 0x100000
 53232: 01                       fallthrough
      :                          @3950
 53233: 82 9a                    a3 = u64 [a2]
 53235: c9 a9 08                 a1 = a2 - a3
 53238: ab 48 0f                 jump @3954 if a1 != t2
      :                          @3951
 53241: c8 ba 08                 a1 = a3 + a4
 53244: 01                       fallthrough
      :                          @3952
 53245: 82 9c                    a5 = u64 [a2]
 53247: ab ac f2                 jump @3950 if a5 != a3
      :                          @3953
 53250: 7b 98                    u64 [a2] = a1
 53252: 01                       fallthrough
      :                          @3954
 53253: 82 10 98 00              ra = u64 [sp + 0x98]
 53257: 82 15 90 00              s0 = u64 [sp + 0x90]
 53261: 82 16 88 00              s1 = u64 [sp + 0x88]
 53265: 95 11 a0 00              sp = sp + 0xa0
 53269: 32 00                    ret
      :                          @3955
 53271: 00                       trap
      :                          @3956
 53272: 00                       trap
      :                          @3957
 53273: 00                       trap
      :                          @3958
 53274: 00                       trap
      :                          @3959
 53275: 00                       trap
      :                          @3960
 53276: 00                       trap
      :                          @3961
 53277: 00                       trap
      :                          @3962
 53278: 00                       trap
      :                          @3963
 53279: 00                       trap
      :                          @3964
 53280: 82 17 50                 a0 = u64 [sp + 0x50]
 53283: 82 7a                    a3 = u64 [a0]
 53285: 53 1a 02 08              jump @3969 if a3 <u 2
      :                          @3965
 53289: 00                       trap
      :                          @3966
 53290: 00                       trap
      :                          @3967
 53291: 00                       trap
      :                          @3968
 53292: 00                       trap
      :                          @3969
 53293: 00                       trap
      :                          @3970
 53294: 00                       trap
      :                          @3971
 53295: 00                       trap
      :                          @3972
 53296: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 53300: 7b 10 88 00              u64 [sp + 0x88] = ra
 53304: 7b 15 80 00              u64 [sp + 0x80] = s0
 53308: 7b 16 78                 u64 [sp + 0x78] = s1
 53311: 64 a5                    s0 = a3
 53313: 7b 19 30                 u64 [sp + 0x30] = a2
 53316: 7b 17 10                 u64 [sp + 0x10] = a0
 53319: 95 a9 01                 a2 = a3 + 0x1
 53322: 33 06 08                 s1 = 0x8
 53325: 7b 18 18                 u64 [sp + 0x18] = a1
 53328: 51 09 68                 jump @3981 if a2 == 0
      :                          @3973
 53331: 98 97 3c                 a0 = a2 >> 0x3c
 53334: 52 07 0e 03              jump @4050 if a0 != 0
      :                          @3974
 53338: 88 72 01                 t0 = a0 <u 0x1
 53341: 7b 19 40                 u64 [sp + 0x40] = a2
 53344: 97 99 03                 a2 = a2 << 0x3
 53347: 97 22 03                 t0 = t0 << 0x3
 53350: 33 04 b0 02 03           t2 = 0x302b0
 53355: 33 03 00 00 10           t1 = 0x100000
 53360: c8 34 00                 ra = t2 + t1
 53363: 01                       fallthrough
      :                          @3975
 53364: 82 06                    s1 = u64 [ra]
 53366: c8 96 0c                 a5 = s1 + a2
 53369: ac 6c ea 02              jump @4049 if a5 <u s1
      :                          @3976
 53373: c8 2c 07                 a0 = a5 + t0
 53376: d8 c7 0a                 a3 = a0 <u a5
 53379: d8 73 07                 a0 = t1 <u a0
 53382: d4 a7 07                 a0 = a0 | a3
 53385: 52 07 da 02              jump @4049 if a0 != 0
      :                          @3977
 53389: c9 c4 07                 a0 = t2 - a5
 53392: c8 37 07                 a0 = a0 + t1
 53395: 84 7a 07                 a3 = a0 & 0x7
 53398: c8 ac 0c                 a5 = a5 + a3
 53401: 01                       fallthrough
      :                          @3978
 53402: 82 08                    a1 = u64 [ra]
 53404: ab 68 d8                 jump @3975 if a1 != s1
      :                          @3979
 53407: 7b 0c                    u64 [ra] = a5
 53409: 33 0b                    a4 = 0
 53411: c9 a7 06                 s1 = a0 - a3
 53414: 64 67                    a0 = s1
 53416: 33 08                    a1 = 0
 53418: 50 20 fc 02 63 3b 02     ra = 764, jump @13689
      :                          @3980 [@dyn 382]
 53425: 82 18 18                 a1 = u64 [sp + 0x18]
 53428: 82 19 40                 a2 = u64 [sp + 0x40]
 53431: 01                       fallthrough
      :                          @3981
 53432: 7b 19 60                 u64 [sp + 0x60] = a2
 53435: 7b 16 68                 u64 [sp + 0x68] = s1
 53438: 7b 19 70                 u64 [sp + 0x70] = a2
 53441: 95 89 01                 a2 = a1 + 0x1
 53444: 95 17 48                 a0 = sp + 0x48
 53447: 95 18 60                 a1 = sp + 0x60
 53450: 50 20 fe 02 52 8d        ra = 766, jump @1783
      :                          @3982 [@dyn 383]
 53456: 82 10 18                 ra = u64 [sp + 0x18]
 53459: 51 00 70                 jump @3993 if ra == 0
      :                          @3983
 53462: 82 16 50                 s1 = u64 [sp + 0x50]
 53465: 82 12 58                 t0 = u64 [sp + 0x58]
 53468: 33 07 01                 a0 = 0x1
 53471: 33 0a 18                 a3 = 0x18
 53474: 01                       fallthrough
      :                          @3984
 53475: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 53478: ae 29 6f 02              jump @4039 if a2 >=u t0
      :                          @3985
 53482: ca a9 08                 a1 = a2 * a3
 53485: c8 68 08                 a1 = a1 + s1
 53488: 82 89 10                 a2 = u64 [a1 + 0x10]
 53491: 51 09 61 02              jump @4038 if a2 == 0
      :                          @3986
 53495: ae 27 5f 02              jump @4040 if a0 >=u t0
      :                          @3987
 53499: ca a7 09                 a2 = a0 * a3
 53502: c8 69 09                 a2 = a2 + s1
 53505: 82 9b 10                 a4 = u64 [a2 + 0x10]
 53508: 51 0b 50 02              jump @4038 if a4 == 0
      :                          @3988
 53512: 82 88 08                 a1 = u64 [a1 + 0x8]
 53515: d8 07 0b                 a4 = a0 <u ra
 53518: c8 b7 07                 a0 = a0 + a4
 53521: 82 88                    a1 = u64 [a1]
 53523: 85 bb 01                 a4 = a4 ^ 0x1
 53526: 82 99 08                 a2 = u64 [a2 + 0x8]
 53529: d8 70 0c                 a5 = ra <u a0
 53532: d4 cb 0b                 a4 = a4 | a5
 53535: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 53538: 7b 98                    u64 [a2] = a1
 53540: 51 0b bf                 jump @3984 if a4 == 0
      :                          @3989
 53543: 52 05 2f                 jump @3996 if s0 != 0
      :                          @3990
 53546: 33 07 01                 a0 = 0x1
 53549: 01                       fallthrough
      :                          @3991
 53550: d8 07 08                 a1 = a0 <u ra
 53553: 85 89 01                 a2 = a1 ^ 0x1
 53556: c8 87 07                 a0 = a0 + a1
 53559: d8 70 08                 a1 = ra <u a0
 53562: d4 98 08                 a1 = a1 | a2
 53565: 51 08 f1                 jump @3991 if a1 == 0
      :                          @3992
 53568: 28 60 01                 jump @4015
      :                          @3993
 53571: 82 12 58                 t0 = u64 [sp + 0x58]
 53574: 51 05 5a 01              jump @4015 if s0 == 0
      :                          @3994
 53578: 51 02 0a 02              jump @4038 if t0 == 0
      :                          @3995
 53582: 82 16 50                 s1 = u64 [sp + 0x50]
 53585: 33 07 01                 a0 = 0x1
 53588: 28 06                    jump @3997
      :                          @3996
 53590: 33 07 01                 a0 = 0x1
 53593: 01                       fallthrough
      :                          @3997
 53594: 82 6a 10                 a3 = u64 [s1 + 0x10]
 53597: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 53600: ae a9 f7 01              jump @4041 if a2 >=u a3
      :                          @3998
 53604: ae a7 f4 01              jump @4042 if a0 >=u a3
      :                          @3999
 53608: 82 68 08                 a1 = u64 [s1 + 0x8]
 53611: d8 57 0a                 a3 = a0 <u s0
 53614: 97 99 03                 a2 = a2 << 0x3
 53617: c8 89 09                 a2 = a2 + a1
 53620: 82 99                    a2 = u64 [a2]
 53622: 97 7b 03                 a4 = a0 << 0x3
 53625: c8 a7 07                 a0 = a0 + a3
 53628: 85 aa 01                 a3 = a3 ^ 0x1
 53631: c8 b8 08                 a1 = a1 + a4
 53634: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 53637: d8 75 0b                 a4 = s0 <u a0
 53640: d4 ba 0a                 a3 = a3 | a4
 53643: 7b 89                    u64 [a1] = a2
 53645: 51 0a cd                 jump @3997 if a3 == 0
      :                          @4000
 53648: 51 00 10 01              jump @4015 if ra == 0
      :                          @4001
 53652: 33 07 01                 a0 = 0x1
 53655: 7b 12 08                 u64 [sp + 0x8] = t0
 53658: 7b 16                    u64 [sp] = s1
 53660: 01                       fallthrough
      :                          @4002
 53661: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 53664: ae 09 b9 01              jump @4043 if a2 >=u ra
      :                          @4003
 53668: ae 29 b1 01              jump @4039 if a2 >=u t0
      :                          @4004
 53672: 96 73 18                 t1 = a0 * 0x18
 53675: c8 36 0a                 a3 = s1 + t1
 53678: 95 a6 f8                 s1 = a3 + 0xfffffffffffffff8
 53681: ae 27 a9 01              jump @4044 if a0 >=u t0
      :                          @4005
 53685: d8 07 08                 a1 = a0 <u ra
 53688: 7b 18 20                 u64 [sp + 0x20] = a1
 53691: c8 87 07                 a0 = a0 + a1
 53694: 7b 17 28                 u64 [sp + 0x28] = a0
 53697: 82 17 10                 a0 = u64 [sp + 0x10]
 53700: c8 97 07                 a0 = a0 + a2
 53703: 7b 17 38                 u64 [sp + 0x38] = a0
 53706: 95 a2 f0                 t0 = a3 + 0xfffffffffffffff0
 53709: 95 ac 10                 a5 = a3 + 0x10
 53712: 95 aa 08                 a3 = a3 + 0x8
 53715: 7b 1a 40                 u64 [sp + 0x40] = a3
 53718: 33 09 01                 a2 = 0x1
 53721: 01                       fallthrough
      :                          @4006
 53722: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 53725: ae 5a 76 01              jump @4037 if a3 >=u s0
      :                          @4007
 53729: 82 6b                    a4 = u64 [s1]
 53731: ae ba 7d 01              jump @4046 if a3 >=u a4
      :                          @4008
 53735: 82 cb                    a4 = u64 [a5]
 53737: ae b9 69 01              jump @4036 if a2 >=u a4
      :                          @4009
 53741: 82 17 38                 a0 = u64 [sp + 0x38]
 53744: 7c 78                    a1 = u8 [a0]
 53746: 82 1b 30                 a4 = u64 [sp + 0x30]
 53749: c8 ab 0b                 a4 = a4 + a3
 53752: 7c bb                    a4 = u8 [a4]
 53754: d3 b8 08                 a1 = a1 ^ a4
 53757: 64 cb                    a4 = a5
 53759: 82 27                    a0 = u64 [t0]
 53761: 88 88 01                 a1 = a1 <u 0x1
 53764: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 53767: 97 a4 03                 t2 = a3 << 0x3
 53770: c8 47 07                 a0 = a0 + t2
 53773: 82 1c 40                 a5 = u64 [sp + 0x40]
 53776: 82 c0                    ra = u64 [a5]
 53778: 82 7c                    a5 = u64 [a0]
 53780: 86 87 02                 a0 = a1 | 0x2
 53783: 97 98 03                 a1 = a2 << 0x3
 53786: c8 80 00                 ra = ra + a1
 53789: c8 c7 07                 a0 = a0 + a5
 53792: 7b 07                    u64 [ra] = a0
 53794: 64 bc                    a5 = a4
 53796: 82 bb                    a4 = u64 [a4]
 53798: ae b9 2c 01              jump @4036 if a2 >=u a4
      :                          @4010
 53802: 82 6b                    a4 = u64 [s1]
 53804: ae b9 26 01              jump @4036 if a2 >=u a4
      :                          @4011
 53808: 64 23                    t1 = t0
 53810: 64 60                    ra = s1
 53812: 82 17 40                 a0 = u64 [sp + 0x40]
 53815: 82 77                    a0 = u64 [a0]
 53817: 82 3b                    a4 = u64 [t1]
 53819: c8 87 07                 a0 = a0 + a1
 53822: c8 8b 0b                 a4 = a4 + a1
 53825: 82 bb                    a4 = u64 [a4]
 53827: 82 76                    s1 = u64 [a0]
 53829: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 53832: e3 b6 0b                 a4 = maxs(s1, a4)
 53835: 7b 7b                    u64 [a0] = a4
 53837: 82 cb                    a4 = u64 [a5]
 53839: ae b9 03 01              jump @4036 if a2 >=u a4
      :                          @4012
 53843: ae ba 0d 01              jump @4046 if a3 >=u a4
      :                          @4013
 53847: 64 32                    t0 = t1
 53849: 82 17 40                 a0 = u64 [sp + 0x40]
 53852: 82 77                    a0 = u64 [a0]
 53854: c8 78 08                 a1 = a1 + a0
 53857: c8 47 07                 a0 = a0 + t2
 53860: 82 77                    a0 = u64 [a0]
 53862: 82 8a                    a3 = u64 [a1]
 53864: d8 59 0b                 a4 = a2 <u s0
 53867: c8 b9 09                 a2 = a2 + a4
 53870: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 53873: e3 7a 07                 a0 = maxs(a3, a0)
 53876: d8 95 0a                 a3 = s0 <u a2
 53879: 85 aa 01                 a3 = a3 ^ 0x1
 53882: d2 ba 0a                 a3 = a3 & a4
 53885: 7b 87                    u64 [a1] = a0
 53887: 64 06                    s1 = ra
 53889: 52 0a 59 ff              jump @4006 if a3 != 0
      :                          @4014
 53893: 82 17 20                 a0 = u64 [sp + 0x20]
 53896: 85 79 01                 a2 = a0 ^ 0x1
 53899: 82 10 18                 ra = u64 [sp + 0x18]
 53902: 82 17 28                 a0 = u64 [sp + 0x28]
 53905: d8 70 08                 a1 = ra <u a0
 53908: d4 98 08                 a1 = a1 | a2
 53911: 82 12 08                 t0 = u64 [sp + 0x8]
 53914: 82 16                    s1 = u64 [sp]
 53916: 51 08 01 ff              jump @4002 if a1 == 0
      :                          @4015
 53920: ae 20 c1 00              jump @4047 if ra >=u t0
      :                          @4016
 53924: 82 14 50                 t2 = u64 [sp + 0x50]
 53927: 33 03 18                 t1 = 0x18
 53930: ca 30 07                 a0 = ra * t1
 53933: c8 47 07                 a0 = a0 + t2
 53936: 82 79 10                 a2 = u64 [a0 + 0x10]
 53939: ae 95 af 00              jump @4048 if s0 >=u a2
      :                          @4017
 53943: 82 77 08                 a0 = u64 [a0 + 0x8]
 53946: 33 08                    a1 = 0
 53948: 97 59 03                 a2 = s0 << 0x3
 53951: c8 97 07                 a0 = a0 + a2
 53954: 82 77                    a0 = u64 [a0]
 53956: 7b 17 40                 u64 [sp + 0x40] = a0
 53959: 33 09 b0 02 03           a2 = 0x302b0
 53964: 95 9b 00 00 10           a4 = a2 + 0x100000
 53969: 33 07 00 00 02           a0 = 0x20000
 53974: 28 08                    jump @4019
      :                          @4018
 53976: 95 88 01                 a1 = a1 + 0x1
 53979: aa 28 33                 jump @4028 if a1 == t0
      :                          @4019
 53982: ca 38 0c                 a5 = a1 * t1
 53985: c8 4c 0c                 a5 = a5 + t2
 53988: 82 c5                    s0 = u64 [a5]
 53990: 51 05 f2                 jump @4018 if s0 == 0
      :                          @4020
 53993: ac 57 ef                 jump @4018 if a0 <u s0
      :                          @4021
 53996: 82 c6 08                 s1 = u64 [a5 + 0x8]
 53999: 97 50 03                 ra = s0 << 0x3
 54002: 01                       fallthrough
      :                          @4022
 54003: 82 bc                    a5 = u64 [a4]
 54005: c9 cb 09                 a2 = a4 - a5
 54008: ab 69 e0                 jump @4018 if a2 != s1
      :                          @4023
 54011: c9 0c 09                 a2 = a5 - ra
 54014: 01                       fallthrough
      :                          @4024
 54015: 82 ba                    a3 = u64 [a4]
 54017: ab ca f2                 jump @4022 if a3 != a5
      :                          @4025
 54020: 7b b9                    u64 [a4] = a2
 54022: 33 05                    s0 = 0
 54024: 01                       fallthrough
      :                          @4026
 54025: ab ca ea                 jump @4022 if a3 != a5
      :                          @4027
 54028: 28 cc                    jump @4018
      :                          @4028
 54030: 82 18 48                 a1 = u64 [sp + 0x48]
 54033: 51 08 2d                 jump @4035 if a1 == 0
      :                          @4029
 54036: 33 09 aa aa 00           a2 = 0xaaaa
 54041: ac 89 25                 jump @4035 if a2 <u a1
      :                          @4030
 54044: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 54047: 33 09 b0 02 03           a2 = 0x302b0
 54052: 95 99 00 00 10           a2 = a2 + 0x100000
 54057: 01                       fallthrough
      :                          @4031
 54058: 82 9b                    a4 = u64 [a2]
 54060: c9 b9 0a                 a3 = a2 - a4
 54063: ab 4a 0f                 jump @4035 if a3 != t2
      :                          @4032
 54066: c8 8b 0a                 a3 = a4 + a1
 54069: 01                       fallthrough
      :                          @4033
 54070: 82 9c                    a5 = u64 [a2]
 54072: ab bc f2                 jump @4031 if a5 != a4
      :                          @4034
 54075: 7b 9a                    u64 [a2] = a3
 54077: 01                       fallthrough
      :                          @4035
 54078: 82 17 40                 a0 = u64 [sp + 0x40]
 54081: 82 10 88 00              ra = u64 [sp + 0x88]
 54085: 82 15 80 00              s0 = u64 [sp + 0x80]
 54089: 82 16 78                 s1 = u64 [sp + 0x78]
 54092: 95 11 90 00              sp = sp + 0x90
 54096: 32 00                    ret
      :                          @4036
 54098: 00                       trap
      :                          @4037
 54099: 00                       trap
      :                          @4038
 54100: 00                       trap
      :                          @4039
 54101: 00                       trap
      :                          @4040
 54102: 00                       trap
      :                          @4041
 54103: 00                       trap
      :                          @4042
 54104: 00                       trap
      :                          @4043
 54105: 00                       trap
      :                          @4044
 54106: 82 68                    a1 = u64 [s1]
 54108: 52 08 fa                 jump @4040 if a1 != 0
      :                          @4045
 54111: 00                       trap
      :                          @4046
 54112: 00                       trap
      :                          @4047
 54113: 00                       trap
      :                          @4048
 54114: 00                       trap
      :                          @4049
 54115: 00                       trap
      :                          @4050
 54116: 00                       trap
      :                          @4051
 54117: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 54121: 7b 10 88 00              u64 [sp + 0x88] = ra
 54125: 7b 15 80 00              u64 [sp + 0x80] = s0
 54129: 7b 16 78                 u64 [sp + 0x78] = s1
 54132: 64 a6                    s1 = a3
 54134: 7b 19 30                 u64 [sp + 0x30] = a2
 54137: 7b 17 10                 u64 [sp + 0x10] = a0
 54140: 95 a9 01                 a2 = a3 + 0x1
 54143: 33 05 08                 s0 = 0x8
 54146: 7b 18 18                 u64 [sp + 0x18] = a1
 54149: 51 09 68                 jump @4060 if a2 == 0
      :                          @4052
 54152: 98 97 3c                 a0 = a2 >> 0x3c
 54155: 52 07 52 02              jump @4112 if a0 != 0
      :                          @4053
 54159: 88 72 01                 t0 = a0 <u 0x1
 54162: 7b 19 40                 u64 [sp + 0x40] = a2
 54165: 97 99 03                 a2 = a2 << 0x3
 54168: 97 22 03                 t0 = t0 << 0x3
 54171: 33 04 b0 02 03           t2 = 0x302b0
 54176: 33 03 00 00 10           t1 = 0x100000
 54181: c8 34 00                 ra = t2 + t1
 54184: 01                       fallthrough
      :                          @4054
 54185: 82 07                    a0 = u64 [ra]
 54187: c8 97 0c                 a5 = a0 + a2
 54190: ac 7c 2c 02              jump @4109 if a5 <u a0
      :                          @4055
 54194: c8 2c 08                 a1 = a5 + t0
 54197: d8 c8 0a                 a3 = a1 <u a5
 54200: d8 83 08                 a1 = t1 <u a1
 54203: d4 a8 08                 a1 = a1 | a3
 54206: 52 08 1c 02              jump @4109 if a1 != 0
      :                          @4056
 54210: c9 c4 08                 a1 = t2 - a5
 54213: c8 38 08                 a1 = a1 + t1
 54216: 84 8a 07                 a3 = a1 & 0x7
 54219: c8 ac 0c                 a5 = a5 + a3
 54222: 01                       fallthrough
      :                          @4057
 54223: 82 05                    s0 = u64 [ra]
 54225: ab 75 d8                 jump @4054 if s0 != a0
      :                          @4058
 54228: 7b 0c                    u64 [ra] = a5
 54230: 33 0b                    a4 = 0
 54232: c9 a8 05                 s0 = a1 - a3
 54235: 64 57                    a0 = s0
 54237: 33 08                    a1 = 0
 54239: 50 20 00 03 2e 38 02     ra = 768, jump @13689
      :                          @4059 [@dyn 384]
 54246: 82 18 18                 a1 = u64 [sp + 0x18]
 54249: 82 19 40                 a2 = u64 [sp + 0x40]
 54252: 01                       fallthrough
      :                          @4060
 54253: 7b 19 60                 u64 [sp + 0x60] = a2
 54256: 7b 15 68                 u64 [sp + 0x68] = s0
 54259: 7b 19 70                 u64 [sp + 0x70] = a2
 54262: 95 89 01                 a2 = a1 + 0x1
 54265: 95 17 48                 a0 = sp + 0x48
 54268: 95 18 60                 a1 = sp + 0x60
 54271: 50 20 02 03 1d 8a        ra = 770, jump @1783
      :                          @4061 [@dyn 385]
 54277: 82 1b 18                 a4 = u64 [sp + 0x18]
 54280: 51 0b 08 01              jump @4077 if a4 == 0
      :                          @4062
 54284: 82 18 58                 a1 = u64 [sp + 0x58]
 54287: 82 10 50                 ra = u64 [sp + 0x50]
 54290: 7b 18 08                 u64 [sp + 0x8] = a1
 54293: 51 06 09 01              jump @4080 if s1 == 0
      :                          @4063
 54297: 33 07                    a0 = 0
 54299: 33 05 01                 s0 = 0x1
 54302: 7b 10                    u64 [sp] = ra
 54304: 01                       fallthrough
      :                          @4064
 54305: 95 5a ff                 a3 = s0 + 0xffffffffffffffff
 54308: ae ba a5 01              jump @4102 if a3 >=u a4
      :                          @4065
 54312: ae 8a a3 01              jump @4104 if a3 >=u a1
      :                          @4066
 54316: 96 54 18                 t2 = s0 * 0x18
 54319: c8 04 04                 t2 = t2 + ra
 54322: 95 49 f8                 a2 = t2 + 0xfffffffffffffff8
 54325: 7b 19 40                 u64 [sp + 0x40] = a2
 54328: ae 85 94 01              jump @4105 if s0 >=u a1
      :                          @4067
 54332: d8 b5 08                 a1 = s0 <u a4
 54335: 7b 18 20                 u64 [sp + 0x20] = a1
 54338: c8 85 05                 s0 = s0 + a1
 54341: 7b 15 28                 u64 [sp + 0x28] = s0
 54344: 82 18 10                 a1 = u64 [sp + 0x10]
 54347: c8 a8 08                 a1 = a1 + a3
 54350: 7b 18 38                 u64 [sp + 0x38] = a1
 54353: 95 42 f0                 t0 = t2 + 0xfffffffffffffff0
 54356: 95 40 10                 ra = t2 + 0x10
 54359: 95 44 08                 t2 = t2 + 0x8
 54362: 33 0a 01                 a3 = 0x1
 54365: 01                       fallthrough
      :                          @4068
 54366: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
 54369: ae 6b 69 01              jump @4103 if a4 >=u s1
      :                          @4069
 54373: 82 18 40                 a1 = u64 [sp + 0x40]
 54376: 82 8c                    a5 = u64 [a1]
 54378: ae cb 72 01              jump @4111 if a4 >=u a5
      :                          @4070
 54382: ae ca 6b 01              jump @4108 if a3 >=u a5
      :                          @4071
 54386: 82 0c                    a5 = u64 [ra]
 54388: ae cb 68 01              jump @4111 if a4 >=u a5
      :                          @4072
 54392: ae ca 61 01              jump @4108 if a3 >=u a5
      :                          @4073
 54396: 82 18 38                 a1 = u64 [sp + 0x38]
 54399: 7c 8c                    a5 = u8 [a1]
 54401: 82 15 30                 s0 = u64 [sp + 0x30]
 54404: c8 b5 05                 s0 = s0 + a4
 54407: 7c 55                    s0 = u8 [s0]
 54409: d3 5c 0c                 a5 = a5 ^ s0
 54412: 82 25                    s0 = u64 [t0]
 54414: 88 cc 01                 a5 = a5 <u 0x1
 54417: 95 c8 ff                 a1 = a5 + 0xffffffffffffffff
 54420: 97 bb 03                 a4 = a4 << 0x3
 54423: c8 b5 0c                 a5 = s0 + a4
 54426: 82 c9                    a2 = u64 [a5]
 54428: 82 43                    t1 = u64 [t2]
 54430: 97 ac 03                 a5 = a3 << 0x3
 54433: c8 c5 05                 s0 = s0 + a5
 54436: 82 55                    s0 = u64 [s0]
 54438: c8 3b 0b                 a4 = a4 + t1
 54441: 82 bb                    a4 = u64 [a4]
 54443: 86 88 02                 a1 = a1 | 0x2
 54446: c8 98 08                 a1 = a1 + a2
 54449: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 54452: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 54455: e3 b5 09                 a2 = maxs(s0, a4)
 54458: e3 98 08                 a1 = maxs(a1, a2)
 54461: 3e 02 00 00 03           u64 [0x30000] = t0
 54466: 8f 82                    t0 = a1 >s 0
 54468: 93 28                    a1 = 0 if t0 == 0
 54470: 3a 02 00 00 03           t0 = u64 [0x30000]
 54475: c8 c3 03                 t1 = t1 + a5
 54478: 7b 38                    u64 [t1] = a1
 54480: 82 0b                    a4 = u64 [ra]
 54482: ae ba f7 00              jump @4102 if a3 >=u a4
      :                          @4074
 54486: 82 48                    a1 = u64 [t2]
 54488: d8 6a 09                 a2 = a3 <u s1
 54491: c8 9a 0a                 a3 = a3 + a2
 54494: c8 c8 08                 a1 = a1 + a5
 54497: 82 88                    a1 = u64 [a1]
 54499: d8 a6 0b                 a4 = s1 <u a3
 54502: 85 bb 01                 a4 = a4 ^ 0x1
 54505: d2 b9 09                 a2 = a2 & a4
 54508: e3 87 07                 a0 = maxs(a0, a1)
 54511: 52 09 6f ff              jump @4068 if a2 != 0
      :                          @4075
 54515: 82 18 20                 a1 = u64 [sp + 0x20]
 54518: 85 88 01                 a1 = a1 ^ 0x1
 54521: 82 1b 18                 a4 = u64 [sp + 0x18]
 54524: 82 15 28                 s0 = u64 [sp + 0x28]
 54527: d8 5b 09                 a2 = a4 <u s0
 54530: d4 89 09                 a2 = a2 | a1
 54533: 82 10                    ra = u64 [sp]
 54535: 82 18 08                 a1 = u64 [sp + 0x8]
 54538: 51 09 17 ff              jump @4064 if a2 == 0
      :                          @4076
 54542: 28 0b                    jump @4078
      :                          @4077
 54544: 82 10 50                 ra = u64 [sp + 0x50]
 54547: 82 18 58                 a1 = u64 [sp + 0x58]
 54550: 33 07                    a0 = 0
 54552: 01                       fallthrough
      :                          @4078
 54553: 52 08 23                 jump @4083 if a1 != 0
      :                          @4079
 54556: 28 6c                    jump @4094
      :                          @4080
 54558: 33 07 01                 a0 = 0x1
 54561: 01                       fallthrough
      :                          @4081
 54562: d8 b7 08                 a1 = a0 <u a4
 54565: 85 89 01                 a2 = a1 ^ 0x1
 54568: c8 87 07                 a0 = a0 + a1
 54571: d8 7b 08                 a1 = a4 <u a0
 54574: d4 98 08                 a1 = a1 | a2
 54577: 51 08 f1                 jump @4081 if a1 == 0
      :                          @4082
 54580: 33 07                    a0 = 0
 54582: 82 18 08                 a1 = u64 [sp + 0x8]
 54585: 51 08 4f                 jump @4094 if a1 == 0
      :                          @4083
 54588: 33 02                    t0 = 0
 54590: 33 03 18                 t1 = 0x18
 54593: 33 0a b0 02 03           a3 = 0x302b0
 54598: 95 ab 00 00 10           a4 = a3 + 0x100000
 54603: 28 08                    jump @4085
      :                          @4084
 54605: 95 22 01                 t0 = t0 + 0x1
 54608: aa 82 38                 jump @4094 if t0 == a1
      :                          @4085
 54611: ca 32 0c                 a5 = t0 * t1
 54614: c8 0c 0c                 a5 = a5 + ra
 54617: 82 c6                    s1 = u64 [a5]
 54619: 51 06 f2                 jump @4084 if s1 == 0
      :                          @4086
 54622: 33 09 00 00 02           a2 = 0x20000
 54627: ac 69 ea                 jump @4084 if a2 <u s1
      :                          @4087
 54630: 82 cc 08                 a5 = u64 [a5 + 0x8]
 54633: 97 64 03                 t2 = s1 << 0x3
 54636: 01                       fallthrough
      :                          @4088
 54637: 82 b5                    s0 = u64 [a4]
 54639: c9 5b 0a                 a3 = a4 - s0
 54642: ab ca db                 jump @4084 if a3 != a5
      :                          @4089
 54645: c9 45 0a                 a3 = s0 - t2
 54648: 01                       fallthrough
      :                          @4090
 54649: 82 b9                    a2 = u64 [a4]
 54651: ab 59 f2                 jump @4088 if a2 != s0
      :                          @4091
 54654: 7b ba                    u64 [a4] = a3
 54656: 33 06                    s1 = 0
 54658: 01                       fallthrough
      :                          @4092
 54659: ab 59 ea                 jump @4088 if a2 != s0
      :                          @4093
 54662: 28 c7                    jump @4084
      :                          @4094
 54664: 82 18 48                 a1 = u64 [sp + 0x48]
 54667: 51 08 2d                 jump @4101 if a1 == 0
      :                          @4095
 54670: 33 09 aa aa 00           a2 = 0xaaaa
 54675: ac 89 25                 jump @4101 if a2 <u a1
      :                          @4096
 54678: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 54681: 33 09 b0 02 03           a2 = 0x302b0
 54686: 95 99 00 00 10           a2 = a2 + 0x100000
 54691: 01                       fallthrough
      :                          @4097
 54692: 82 9a                    a3 = u64 [a2]
 54694: c9 a9 0b                 a4 = a2 - a3
 54697: ab 0b 0f                 jump @4101 if a4 != ra
      :                          @4098
 54700: c8 8a 0b                 a4 = a3 + a1
 54703: 01                       fallthrough
      :                          @4099
 54704: 82 9c                    a5 = u64 [a2]
 54706: ab ac f2                 jump @4097 if a5 != a3
      :                          @4100
 54709: 7b 9b                    u64 [a2] = a4
 54711: 01                       fallthrough
      :                          @4101
 54712: 82 10 88 00              ra = u64 [sp + 0x88]
 54716: 82 15 80 00              s0 = u64 [sp + 0x80]
 54720: 82 16 78                 s1 = u64 [sp + 0x78]
 54723: 95 11 90 00              sp = sp + 0x90
 54727: 32 00                    ret
      :                          @4102
 54729: 00                       trap
      :                          @4103
 54730: 00                       trap
      :                          @4104
 54731: 00                       trap
      :                          @4105
 54732: 82 17 40                 a0 = u64 [sp + 0x40]
 54735: 82 7c                    a5 = u64 [a0]
 54737: 51 0c 0a                 jump @4110 if a5 == 0
      :                          @4106
 54740: 51 1c 01 05              jump @4108 if a5 == 1
      :                          @4107
 54744: 00                       trap
      :                          @4108
 54745: 00                       trap
      :                          @4109
 54746: 00                       trap
      :                          @4110
 54747: 00                       trap
      :                          @4111
 54748: 00                       trap
      :                          @4112
 54749: 00                       trap
      :                          @4113
 54750: 51 07 31                 jump @4119 if a0 == 0
      :                          @4114
 54753: 51 08 26                 jump @4118 if a1 == 0
      :                          @4115
 54756: 6a 79                    a2 = ctz a0
 54758: d0 97 09                 a2 = a0 >> a2
 54761: 64 8a                    a3 = a1
 54763: 01                       fallthrough
      :                          @4116
 54764: 6a ab                    a4 = ctz a3
 54766: d0 ba 0a                 a3 = a3 >> a4
 54769: e4 a9 0b                 a4 = maxu(a2, a3)
 54772: e6 a9 09                 a2 = minu(a2, a3)
 54775: c9 9b 0a                 a3 = a4 - a2
 54778: ab 9b f2                 jump @4116 if a4 != a2
      :                          @4117
 54781: d4 87 07                 a0 = a0 | a1
 54784: 6a 77                    a0 = ctz a0
 54786: cf 7b 07                 a0 = a4 << a0
 54789: 32 00                    ret
      :                          @4118
 54791: 64 78                    a1 = a0
 54793: 64 87                    a0 = a1
 54795: 28 28 94 01              jump @11165
      :                          @4119
 54799: 64 87                    a0 = a1
 54801: 28 22 94 01              jump @11165
      :                          @4120
 54805: 64 ba                    a3 = a4
 54807: d6 8b 0b                 a4 = a4 mulhu a1
 54810: ca 8a 0c                 a5 = a3 * a1
 54813: db b9 0c                 a5 = a2 if a4 != 0
 54816: 97 ab 01                 a4 = a3 << 0x1
 54819: ae c7 f2                 jump @4120 if a0 >=u a5
      :                          @4121
 54822: 33 09                    a2 = 0
 54824: 51 0a 28                 jump @4124 if a3 == 0
      :                          @4122
 54827: 33 02 ff                 t0 = 0xffffffffffffffff
 54830: 01                       fallthrough
      :                          @4123
 54831: c8 9a 0c                 a5 = a3 + a2
 54834: 95 cc 01                 a5 = a5 + 0x1
 54837: 98 c4 01                 t2 = a5 >> 0x1
 54840: d6 84 03                 t1 = t2 mulhu a1
 54843: ca 84 0b                 a4 = t2 * a1
 54846: db 32 0b                 a4 = t0 if t1 != 0
 54849: d8 b7 0b                 a4 = a0 <u a4
 54852: 95 4c ff                 a5 = t2 + 0xffffffffffffffff
 54855: db bc 0a                 a3 = a5 if a4 != 0
 54858: da b4 09                 a2 = t2 if a4 == 0
 54861: ac a9 e2                 jump @4123 if a2 <u a3
      :                          @4124
 54864: 64 97                    a0 = a2
 54866: 32 00                    ret
      :                          @4125
 54868: 33 03 02                 t1 = 0x2
 54871: ae 38 09                 jump @4127 if a1 >=u t1
      :                          @4126
 54874: 49 07                    u64 [a0 + 0] = 0
 54876: 28 61 9a 01              jump @11241
      :                          @4127
 54880: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 54883: 7b 10 28                 u64 [sp + 0x28] = ra
 54886: 7b 15 20                 u64 [sp + 0x20] = s0
 54889: 7b 16 18                 u64 [sp + 0x18] = s1
 54892: 7b 17 08                 u64 [sp + 0x8] = a0
 54895: 68 87                    a0 = clz a1
 54897: 33 0b 40                 a4 = 0x40
 54900: c9 7b 0a                 a3 = a4 - a0
 54903: 33 02 01                 t0 = 0x1
 54906: 33 0c ff                 a5 = 0xffffffffffffffff
 54909: 7b 1a 10                 u64 [sp + 0x10] = a3
 54912: 28 0f                    jump @4130
      :                          @4128
 54914: ca 96 07                 a0 = s1 * a2
 54917: 33 0b 40                 a4 = 0x40
 54920: ab 87 89 00              jump @4143 if a0 != a1
      :                          @4129
 54924: 28 9f 00                 jump @4145
      :                          @4130
 54927: 33 05                    s0 = 0
 54929: d8 a3 00                 ra = t1 <u a3
 54932: c1 3b 07                 i32 a0 = a4 /u t1
 54935: cf 72 07                 a0 = t0 << a0
 54938: e6 78 06                 s1 = minu(a1, a0)
 54941: 95 66 01                 s1 = s1 + 0x1
 54944: 83 3a 01                 i32 a3 = t1 + 0x1
 54947: 28 11                    jump @4132
      :                          @4131
 54949: d8 78 07                 a0 = a1 <u a0
 54952: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
 54955: db 79 06                 s1 = a2 if a0 != 0
 54958: da 72 05                 s0 = t0 if a0 == 0
 54961: ae 65 26                 jump @4136 if s0 >=u s1
      :                          @4132
 54964: c8 65 07                 a0 = s0 + s1
 54967: 95 77 01                 a0 = a0 + 0x1
 54970: 98 72 01                 t0 = a0 >> 0x1
 54973: 33 07 01                 a0 = 0x1
 54976: 64 a9                    a2 = a3
 54978: 01                       fallthrough
      :                          @4133
 54979: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 54982: 51 09 df                 jump @4131 if a2 == 0
      :                          @4134
 54985: d6 27 04                 t2 = a0 mulhu t0
 54988: ca 27 07                 a0 = a0 * t0
 54991: db 4c 07                 a0 = a5 if t2 != 0
 54994: ae 78 f1                 jump @4133 if a1 >=u a0
      :                          @4135
 54997: 28 d0                    jump @4131
      :                          @4136
 54999: 33 02 01                 t0 = 0x1
 55002: 33 04 03                 t2 = 0x3
 55005: ae 52 34                 jump @4143 if t0 >=u s0
      :                          @4137
 55008: 51 03 2d                 jump @4142 if t1 == 0
      :                          @4138
 55011: 64 39                    a2 = t1
 55013: 64 56                    s1 = s0
 55015: 51 13 01 9b              jump @4128 if t1 == 1
      :                          @4139
 55019: 33 09 01                 a2 = 0x1
 55022: 64 37                    a0 = t1
 55024: 64 56                    s1 = s0
 55026: 01                       fallthrough
      :                          @4140
 55027: 64 7a                    a3 = a0
 55029: 84 77 01                 a0 = a0 & 0x1
 55032: 33 0b 01                 a4 = 0x1
 55035: db 76 0b                 a4 = s1 if a0 != 0
 55038: ca 9b 09                 a2 = a4 * a2
 55041: 8b a7 01                 i32 a0 = a3 >> 0x1
 55044: ca 66 06                 s1 = s1 * s1
 55047: ac a4 ec                 jump @4140 if t2 <u a3
      :                          @4141
 55050: 28 78 ff                 jump @4128
      :                          @4142
 55053: 51 18 01 1e              jump @4145 if a1 == 1
      :                          @4143
 55057: be 03 03                 i32 t1 = t1 + ra
 55060: 85 07 01                 a0 = ra ^ 0x1
 55063: 82 1a 10                 a3 = u64 [sp + 0x10]
 55066: d8 3a 09                 a2 = a3 <u t1
 55069: d4 97 07                 a0 = a0 | a2
 55072: 51 07 6f ff              jump @4130 if a0 == 0
      :                          @4144
 55076: 33 08                    a1 = 0
 55078: 82 17 08                 a0 = u64 [sp + 0x8]
 55081: 28 0f                    jump @4146
      :                          @4145
 55083: 82 17 08                 a0 = u64 [sp + 0x8]
 55086: 7b 75 08                 u64 [a0 + 0x8] = s0
 55089: 7a 73 10                 u32 [a0 + 0x10] = t1
 55092: 33 08 01                 a1 = 0x1
 55095: 01                       fallthrough
      :                          @4146
 55096: 82 10 28                 ra = u64 [sp + 0x28]
 55099: 82 15 20                 s0 = u64 [sp + 0x20]
 55102: 82 16 18                 s1 = u64 [sp + 0x18]
 55105: 95 11 30                 sp = sp + 0x30
 55108: 7b 78                    u64 [a0] = a1
 55110: 32 00                    ret
      :                          @4147
 55112: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 55115: 7b 10 50                 u64 [sp + 0x50] = ra
 55118: 7b 15 48                 u64 [sp + 0x48] = s0
 55121: 7b 16 40                 u64 [sp + 0x40] = s1
 55124: 64 82                    t0 = a1
 55126: 7b 17                    u64 [sp] = a0
 55128: 49 11 28                 u64 [sp + 40] = 0
 55131: 33 07 01                 a0 = 0x1
 55134: 7b 17 30                 u64 [sp + 0x30] = a0
 55137: d3 78 08                 a1 = a1 ^ a0
 55140: d3 79 0a                 a3 = a2 ^ a0
 55143: d4 a8 08                 a1 = a1 | a3
 55146: 49 11 38                 u64 [sp + 56] = 0
 55149: 52 08 24                 jump @4149 if a1 != 0
      :                          @4148
 55152: 82 17 38                 a0 = u64 [sp + 0x38]
 55155: 82 18 30                 a1 = u64 [sp + 0x30]
 55158: 82 19 28                 a2 = u64 [sp + 0x28]
 55161: 82 1a                    a3 = u64 [sp]
 55163: 7b a7 10                 u64 [a3 + 0x10] = a0
 55166: 7b a8 08                 u64 [a3 + 0x8] = a1
 55169: 7b a9                    u64 [a3] = a2
 55171: 82 10 50                 ra = u64 [sp + 0x50]
 55174: 82 15 48                 s0 = u64 [sp + 0x48]
 55177: 82 16 40                 s1 = u64 [sp + 0x40]
 55180: 95 11 58                 sp = sp + 0x58
 55183: 32 00                    ret
      :                          @4149
 55185: 33 08                    a1 = 0
 55187: 33 03                    t1 = 0
 55189: 33 04                    t2 = 0
 55191: 33 05 01                 s0 = 0x1
 55194: 33 06 01                 s1 = 0x1
 55197: 33 00 01                 ra = 0x1
 55200: 33 0c 01                 a5 = 0x1
 55203: 7b 19 20                 u64 [sp + 0x20] = a2
 55206: 7b 12 18                 u64 [sp + 0x18] = t0
 55209: 28 28                    jump @4152
      :                          @4150
 55211: 82 17 30                 a0 = u64 [sp + 0x30]
 55214: c8 87 0a                 a3 = a0 + a1
 55217: 46 0a 52                 u8 [a3 + 0] = 0x52
 55220: 64 50                    ra = s0
 55222: 64 63                    t1 = s1
 55224: 01                       fallthrough
      :                          @4151
 55225: 95 88 01                 a1 = a1 + 0x1
 55228: c8 c3 06                 s1 = t1 + a5
 55231: d3 26 0b                 a4 = s1 ^ t0
 55234: c8 40 05                 s0 = ra + t2
 55237: d3 95 0a                 a3 = s0 ^ a2
 55240: d4 ba 0a                 a3 = a3 | a4
 55243: 7b 18 38                 u64 [sp + 0x38] = a1
 55246: 51 0a a2                 jump @4148 if a3 == 0
      :                          @4152
 55249: ca 25 0b                 a4 = s0 * t0
 55252: ca 96 0a                 a3 = s1 * a2
 55255: ae ba 2a                 jump @4156 if a3 >=u a4
      :                          @4153
 55258: 82 17 28                 a0 = u64 [sp + 0x28]
 55261: ab 78 ce                 jump @4150 if a1 != a0
      :                          @4154
 55264: 95 17 28                 a0 = sp + 0x28
 55267: 7b 14 10                 u64 [sp + 0x10] = t2
 55270: 7b 1c 08                 u64 [sp + 0x8] = a5
 55273: 50 20 04 03 a6 7b ff     ra = 772, jump @1593
      :                          @4155 [@dyn 386]
 55280: 82 1c 08                 a5 = u64 [sp + 0x8]
 55283: 82 14 10                 t2 = u64 [sp + 0x10]
 55286: 82 12 18                 t0 = u64 [sp + 0x18]
 55289: 82 19 20                 a2 = u64 [sp + 0x20]
 55292: 82 18 38                 a1 = u64 [sp + 0x38]
 55295: 28 ac                    jump @4150
      :                          @4156
 55297: 82 1a 28                 a3 = u64 [sp + 0x28]
 55300: ab a8 26                 jump @4159 if a1 != a3
      :                          @4157
 55303: 95 17 28                 a0 = sp + 0x28
 55306: 7b 13 10                 u64 [sp + 0x10] = t1
 55309: 7b 10 08                 u64 [sp + 0x8] = ra
 55312: 50 20 06 03 7f 7b ff     ra = 774, jump @1593
      :                          @4158 [@dyn 387]
 55319: 82 10 08                 ra = u64 [sp + 0x8]
 55322: 82 13 10                 t1 = u64 [sp + 0x10]
 55325: 82 12 18                 t0 = u64 [sp + 0x18]
 55328: 82 19 20                 a2 = u64 [sp + 0x20]
 55331: 82 18 38                 a1 = u64 [sp + 0x38]
 55334: 82 17 30                 a0 = u64 [sp + 0x30]
 55337: 01                       fallthrough
      :                          @4159
 55338: c8 87 0a                 a3 = a0 + a1
 55341: 46 0a 4c                 u8 [a3 + 0] = 0x4c
 55344: 64 54                    t2 = s0
 55346: 64 6c                    a5 = s1
 55348: 28 85                    jump @4151
      :                          @4160
 55350: 95 17 30                 a0 = sp + 0x30
 55353: 50 20 08 03 d6 7a ff     ra = 776, jump @1581
      :                          @4161 [@dyn 388]
 55360: 82 1b 40                 a4 = u64 [sp + 0x40]
 55363: 82 17 38                 a0 = u64 [sp + 0x38]
 55366: 01                       fallthrough
      :                          @4162
 55367: cb 65 09                 a2 = s0 /u s1
 55370: 97 ba 03                 a3 = a4 << 0x3
 55373: c8 a7 08                 a1 = a0 + a3
 55376: 7b 89                    u64 [a1] = a2
 55378: 95 b8 01                 a1 = a4 + 0x1
 55381: ca 69 09                 a2 = a2 * s1
 55384: c9 95 09                 a2 = s0 - a2
 55387: 7b 18 40                 u64 [sp + 0x40] = a1
 55390: 64 65                    s0 = s1
 55392: 51 09 0f                 jump @4165 if a2 == 0
      :                          @4163
 55395: 82 1a 30                 a3 = u64 [sp + 0x30]
 55398: 64 96                    s1 = a2
 55400: aa a8 ce                 jump @4160 if a1 == a3
      :                          @4164
 55403: 64 8b                    a4 = a1
 55405: 28 da                    jump @4162
      :                          @4165
 55407: 7b 1b 20                 u64 [sp + 0x20] = a4
 55410: 7b 1a 28                 u64 [sp + 0x28] = a3
 55413: 49 11 48                 u64 [sp + 72] = 0
 55416: 49 11 50 08              u64 [sp + 80] = 0x8
 55420: 49 11 58                 u64 [sp + 88] = 0
 55423: 51 08 06 01              jump @4182 if a1 == 0
      :                          @4166
 55427: 82 16 38                 s1 = u64 [sp + 0x38]
 55430: 82 65                    s0 = u64 [s1]
 55432: 95 17 48                 a0 = sp + 0x48
 55435: 33 08                    a1 = 0
 55437: 50 20 0a 03 7b 7b ff     ra = 778, jump @1605
      :                          @4167 [@dyn 389]
 55444: 82 18 58                 a1 = u64 [sp + 0x58]
 55447: 82 12 50                 t0 = u64 [sp + 0x50]
 55450: 97 89 04                 a2 = a1 << 0x4
 55453: c8 92 0a                 a3 = t0 + a2
 55456: 7b a5                    u64 [a3] = s0
 55458: 33 09 01                 a2 = 0x1
 55461: 7b a9 08                 u64 [a3 + 0x8] = a2
 55464: c8 98 08                 a1 = a1 + a2
 55467: 7b 18 58                 u64 [sp + 0x58] = a1
 55470: 82 1a 20                 a3 = u64 [sp + 0x20]
 55473: 51 0a 81 00              jump @4174 if a3 == 0
      :                          @4168
 55477: 64 53                    t1 = s0
 55479: 33 05                    s0 = 0
 55481: 95 66 08                 s1 = s1 + 0x8
 55484: 33 0a 01                 a3 = 0x1
 55487: 82 1b 28                 a4 = u64 [sp + 0x28]
 55490: 28 2c                    jump @4170
      :                          @4169
 55492: ca 4c 09                 a2 = a5 * t2
 55495: c8 a9 03                 t1 = a2 + a3
 55498: ca 0c 09                 a2 = a5 * ra
 55501: c8 59 09                 a2 = a2 + s0
 55504: 97 8a 04                 a3 = a1 << 0x4
 55507: c8 2a 0a                 a3 = a3 + t0
 55510: 7b a3                    u64 [a3] = t1
 55512: 7b a9 08                 u64 [a3 + 0x8] = a2
 55515: 95 88 01                 a1 = a1 + 0x1
 55518: 7b 18 58                 u64 [sp + 0x58] = a1
 55521: 95 bb f8                 a4 = a4 + 0xfffffffffffffff8
 55524: 95 66 08                 s1 = s1 + 0x8
 55527: 64 05                    s0 = ra
 55529: 64 4a                    a3 = t2
 55531: 51 0b 43                 jump @4173 if a4 == 0
      :                          @4170
 55534: 82 17 48                 a0 = u64 [sp + 0x48]
 55537: 82 6c                    a5 = u64 [s1]
 55539: 64 34                    t2 = t1
 55541: 64 90                    ra = a2
 55543: ab 78 cd                 jump @4169 if a1 != a0
      :                          @4171
 55546: 95 17 48                 a0 = sp + 0x48
 55549: 7b 1b 28                 u64 [sp + 0x28] = a4
 55552: 7b 15 20                 u64 [sp + 0x20] = s0
 55555: 7b 14 18                 u64 [sp + 0x18] = t2
 55558: 7b 1a 10                 u64 [sp + 0x10] = a3
 55561: 7b 10 08                 u64 [sp + 0x8] = ra
 55564: 64 c5                    s0 = a5
 55566: 50 20 0c 03 fa 7a ff     ra = 780, jump @1605
      :                          @4172 [@dyn 390]
 55573: 64 5c                    a5 = s0
 55575: 82 10 08                 ra = u64 [sp + 0x8]
 55578: 82 1a 10                 a3 = u64 [sp + 0x10]
 55581: 82 14 18                 t2 = u64 [sp + 0x18]
 55584: 82 15 20                 s0 = u64 [sp + 0x20]
 55587: 82 1b 28                 a4 = u64 [sp + 0x28]
 55590: 82 18 58                 a1 = u64 [sp + 0x58]
 55593: 82 12 50                 t0 = u64 [sp + 0x50]
 55596: 28 98                    jump @4169
      :                          @4173
 55598: 82 16 38                 s1 = u64 [sp + 0x38]
 55601: 01                       fallthrough
      :                          @4174
 55602: 82 18 58                 a1 = u64 [sp + 0x58]
 55605: 82 19 50                 a2 = u64 [sp + 0x50]
 55608: 82 1a 48                 a3 = u64 [sp + 0x48]
 55611: 82 17 30                 a0 = u64 [sp + 0x30]
 55614: 82 1b                    a4 = u64 [sp]
 55616: 7b b8 10                 u64 [a4 + 0x10] = a1
 55619: 7b b9 08                 u64 [a4 + 0x8] = a2
 55622: 7b ba                    u64 [a4] = a3
 55624: 51 07 2f                 jump @4181 if a0 == 0
      :                          @4175
 55627: 33 08 00 00 02           a1 = 0x20000
 55632: ac 78 27                 jump @4181 if a1 <u a0
      :                          @4176
 55635: 97 77 03                 a0 = a0 << 0x3
 55638: 33 08 b0 02 03           a1 = 0x302b0
 55643: 95 88 00 00 10           a1 = a1 + 0x100000
 55648: 01                       fallthrough
      :                          @4177
 55649: 82 89                    a2 = u64 [a1]
 55651: c9 98 0a                 a3 = a1 - a2
 55654: ab 6a 11                 jump @4181 if a3 != s1
      :                          @4178
 55657: c9 79 0a                 a3 = a2 - a0
 55660: 01                       fallthrough
      :                          @4179
 55661: 82 8b                    a4 = u64 [a1]
 55663: ab 9b f2                 jump @4177 if a4 != a2
      :                          @4180
 55666: 7b 8a                    u64 [a1] = a3
 55668: 33 0c                    a5 = 0
 55670: 01                       fallthrough
      :                          @4181
 55671: 82 10 70                 ra = u64 [sp + 0x70]
 55674: 82 15 68                 s0 = u64 [sp + 0x68]
 55677: 82 16 60                 s1 = u64 [sp + 0x60]
 55680: 95 11 78                 sp = sp + 0x78
 55683: 32 00                    ret
      :                          @4182
 55685: 00                       trap
      :                          @4183
 55686: 82 bc                    a5 = u64 [a4]
 55688: 95 c6 20                 s1 = a5 + 0x20
 55691: ac c6 cb 00              jump @4195 if s1 <u a5
      :                          @4184
 55695: 95 67 08                 a0 = s1 + 0x8
 55698: d8 67 08                 a1 = a0 <u s1
 55701: d8 72 07                 a0 = t0 <u a0
 55704: d4 87 07                 a0 = a0 | a1
 55707: 52 07 bb 00              jump @4195 if a0 != 0
      :                          @4185
 55711: c9 69 07                 a0 = a2 - s1
 55714: c8 27 07                 a0 = a0 + t0
 55717: 84 78 07                 a1 = a0 & 0x7
 55720: c8 86 06                 s1 = s1 + a1
 55723: 01                       fallthrough
      :                          @4186
 55724: 82 b5                    s0 = u64 [a4]
 55726: ab c5 d8                 jump @4183 if s0 != a5
      :                          @4187
 55729: 7b b6                    u64 [a4] = s1
 55731: 33 0b                    a4 = 0
 55733: c9 87 07                 a0 = a0 - a1
 55736: 49 07                    u64 [a0 + 0] = 0
 55738: 33 09 01                 a2 = 0x1
 55741: 7b 79 08                 u64 [a0 + 0x8] = a2
 55744: 7b 79 10                 u64 [a0 + 0x10] = a2
 55747: 7b 73 18                 u64 [a0 + 0x18] = t1
 55750: 33 08 02                 a1 = 0x2
 55753: 7b 18 20                 u64 [sp + 0x20] = a1
 55756: 7b 17 28                 u64 [sp + 0x28] = a0
 55759: 7b 18 30                 u64 [sp + 0x30] = a1
 55762: 64 3a                    a3 = t1
 55764: 33 0c 01                 a5 = 0x1
 55767: 7b 13 08                 u64 [sp + 0x8] = t1
 55770: 28 2c                    jump @4189
      :                          @4188
 55772: c8 3c 09                 a2 = a5 + t1
 55775: cb 59 0a                 a3 = a2 /u s0
 55778: ca 6a 09                 a2 = a3 * s1
 55781: c9 b9 09                 a2 = a2 - a4
 55784: ca 5a 0a                 a3 = a3 * s0
 55787: c9 ca 0a                 a3 = a3 - a5
 55790: 97 8b 04                 a4 = a1 << 0x4
 55793: c8 7b 0b                 a4 = a4 + a0
 55796: 7b b6                    u64 [a4] = s1
 55798: 7b b5 08                 u64 [a4 + 0x8] = s0
 55801: 95 88 01                 a1 = a1 + 0x1
 55804: 7b 18 30                 u64 [sp + 0x30] = a1
 55807: 64 6b                    a4 = s1
 55809: 64 5c                    a5 = s0
 55811: ac 93 31                 jump @4193 if t1 <u a2
      :                          @4189
 55814: 51 0a 4f                 jump @4194 if a3 == 0
      :                          @4190
 55817: 64 96                    s1 = a2
 55819: 64 a5                    s0 = a3
 55821: 82 19 20                 a2 = u64 [sp + 0x20]
 55824: ab 98 cc                 jump @4188 if a1 != a2
      :                          @4191
 55827: 95 17 20                 a0 = sp + 0x20
 55830: 7b 1b 18                 u64 [sp + 0x18] = a4
 55833: 7b 1c 10                 u64 [sp + 0x10] = a5
 55836: 50 20 0e 03 ec 79 ff     ra = 782, jump @1605
      :                          @4192 [@dyn 391]
 55843: 82 1c 10                 a5 = u64 [sp + 0x10]
 55846: 82 1b 18                 a4 = u64 [sp + 0x18]
 55849: 82 13 08                 t1 = u64 [sp + 0x8]
 55852: 82 18 30                 a1 = u64 [sp + 0x30]
 55855: 82 17 28                 a0 = u64 [sp + 0x28]
 55858: 28 aa                    jump @4188
      :                          @4193
 55860: 82 17 30                 a0 = u64 [sp + 0x30]
 55863: 82 18 28                 a1 = u64 [sp + 0x28]
 55866: 82 19 20                 a2 = u64 [sp + 0x20]
 55869: 82 1a                    a3 = u64 [sp]
 55871: 7b a7 10                 u64 [a3 + 0x10] = a0
 55874: 7b a8 08                 u64 [a3 + 0x8] = a1
 55877: 7b a9                    u64 [a3] = a2
 55879: 82 10 48                 ra = u64 [sp + 0x48]
 55882: 82 15 40                 s0 = u64 [sp + 0x40]
 55885: 82 16 38                 s1 = u64 [sp + 0x38]
 55888: 95 11 50                 sp = sp + 0x50
 55891: 32 00                    ret
      :                          @4194
 55893: 00                       trap
      :                          @4195
 55894: 00                       trap
      :                          @4196
 55895: 95 11 90                 sp = sp + 0xffffffffffffff90
 55898: 7b 10 68                 u64 [sp + 0x68] = ra
 55901: 7b 15 60                 u64 [sp + 0x60] = s0
 55904: 7b 16 58                 u64 [sp + 0x58] = s1
 55907: ae 87 08                 jump @4198 if a0 >=u a1
      :                          @4197
 55910: 33 07                    a0 = 0
 55912: 28 f2 01                 jump @4239
      :                          @4198
 55915: 7b 17 10                 u64 [sp + 0x10] = a0
 55918: 14 07 fe ff ff ff ff ff ff 0f a0 = 0xffffffffffffffe
 55928: ac 87 04 02              jump @4253 if a0 <u a1
      :                          @4199
 55932: 95 89 01                 a2 = a1 + 0x1
 55935: 14 07 ff ff ff ff ff ff ff 0f a0 = 0xfffffffffffffff
 55945: d8 78 02                 t0 = a1 <u a0
 55948: 7b 19 20                 u64 [sp + 0x20] = a2
 55951: 97 99 03                 a2 = a2 << 0x3
 55954: 97 22 03                 t0 = t0 << 0x3
 55957: 33 04 b0 02 03           t2 = 0x302b0
 55962: 33 03 00 00 10           t1 = 0x100000
 55967: c8 34 00                 ra = t2 + t1
 55970: 01                       fallthrough
      :                          @4200
 55971: 82 06                    s1 = u64 [ra]
 55973: c8 96 0c                 a5 = s1 + a2
 55976: ac 6c d1 01              jump @4250 if a5 <u s1
      :                          @4201
 55980: c8 2c 0a                 a3 = a5 + t0
 55983: d8 ca 05                 s0 = a3 <u a5
 55986: d8 a3 0a                 a3 = t1 <u a3
 55989: d4 5a 0a                 a3 = a3 | s0
 55992: 52 0a c1 01              jump @4250 if a3 != 0
      :                          @4202
 55996: c9 c4 05                 s0 = t2 - a5
 55999: c8 35 05                 s0 = s0 + t1
 56002: 84 5a 07                 a3 = s0 & 0x7
 56005: c8 ac 0c                 a5 = a5 + a3
 56008: 01                       fallthrough
      :                          @4203
 56009: 82 07                    a0 = u64 [ra]
 56011: ab 67 d8                 jump @4200 if a0 != s1
      :                          @4204
 56014: 7b 0c                    u64 [ra] = a5
 56016: 33 0b                    a4 = 0
 56018: 7b 18 08                 u64 [sp + 0x8] = a1
 56021: c9 a5 05                 s0 = s0 - a3
 56024: 64 57                    a0 = s0
 56026: 33 08                    a1 = 0
 56028: 50 20 10 03 31 31 02     ra = 784, jump @13689
      :                          @4205 [@dyn 392]
 56035: 82 17 20                 a0 = u64 [sp + 0x20]
 56038: 7b 17 40                 u64 [sp + 0x40] = a0
 56041: 7b 15 48                 u64 [sp + 0x48] = s0
 56044: 7b 17 50                 u64 [sp + 0x50] = a0
 56047: 82 15 10                 s0 = u64 [sp + 0x10]
 56050: 95 59 01                 a2 = s0 + 0x1
 56053: 95 17 28                 a0 = sp + 0x28
 56056: 95 18 40                 a1 = sp + 0x40
 56059: 50 20 12 03 21 83        ra = 786, jump @1783
      :                          @4206 [@dyn 393]
 56065: 82 19 38                 a2 = u64 [sp + 0x38]
 56068: 51 09 72 01              jump @4247 if a2 == 0
      :                          @4207
 56072: 82 18 30                 a1 = u64 [sp + 0x30]
 56075: 82 87 10                 a0 = u64 [a1 + 0x10]
 56078: 51 07 69 01              jump @4248 if a0 == 0
      :                          @4208
 56082: 7b 19 20                 u64 [sp + 0x20] = a2
 56085: 7b 18                    u64 [sp] = a1
 56087: 82 89 08                 a2 = u64 [a1 + 0x8]
 56090: 33 08 01                 a1 = 0x1
 56093: 7b 98                    u64 [a2] = a1
 56095: 52 05 91 00              jump @4223 if s0 != 0
      :                          @4209
 56099: 82 17 08                 a0 = u64 [sp + 0x8]
 56102: 82 18 20                 a1 = u64 [sp + 0x20]
 56105: ae 85 4f 01              jump @4249 if s0 >=u a1
      :                          @4210
 56109: 33 03 18                 t1 = 0x18
 56112: ca 35 08                 a1 = s0 * t1
 56115: 82 10                    ra = u64 [sp]
 56117: c8 08 08                 a1 = a1 + ra
 56120: 82 89 10                 a2 = u64 [a1 + 0x10]
 56123: ae 97 30 01              jump @4243 if a0 >=u a2
      :                          @4211
 56127: 82 8a 08                 a3 = u64 [a1 + 0x8]
 56130: 33 09                    a2 = 0
 56132: 97 78 03                 a1 = a0 << 0x3
 56135: c8 8a 07                 a0 = a3 + a1
 56138: 82 77                    a0 = u64 [a0]
 56140: 33 0b b0 02 03           a4 = 0x302b0
 56145: 95 bb 00 00 10           a4 = a4 + 0x100000
 56150: 33 02 00 00 02           t0 = 0x20000
 56155: 28 0c                    jump @4213
      :                          @4212
 56157: 95 99 01                 a2 = a2 + 0x1
 56160: 82 18 20                 a1 = u64 [sp + 0x20]
 56163: aa 89 c7 00              jump @4232 if a2 == a1
      :                          @4213
 56167: ca 39 0c                 a5 = a2 * t1
 56170: c8 0c 0c                 a5 = a5 + ra
 56173: 82 c5                    s0 = u64 [a5]
 56175: 51 05 ee                 jump @4212 if s0 == 0
      :                          @4214
 56178: ac 52 eb                 jump @4212 if t0 <u s0
      :                          @4215
 56181: 82 c6 08                 s1 = u64 [a5 + 0x8]
 56184: 97 54 03                 t2 = s0 << 0x3
 56187: 01                       fallthrough
      :                          @4216
 56188: 82 bc                    a5 = u64 [a4]
 56190: c9 cb 08                 a1 = a4 - a5
 56193: ab 68 dc                 jump @4212 if a1 != s1
      :                          @4217
 56196: c9 4c 08                 a1 = a5 - t2
 56199: 01                       fallthrough
      :                          @4218
 56200: 82 ba                    a3 = u64 [a4]
 56202: ab ca f2                 jump @4216 if a3 != a5
      :                          @4219
 56205: 7b b8                    u64 [a4] = a1
 56207: 33 05                    s0 = 0
 56209: 01                       fallthrough
      :                          @4220
 56210: ab ca ea                 jump @4216 if a3 != a5
      :                          @4221
 56213: 28 c8                    jump @4212
      :                          @4222
 56215: 82 15 10                 s0 = u64 [sp + 0x10]
 56218: 82 18 18                 a1 = u64 [sp + 0x18]
 56221: d8 58 09                 a2 = a1 <u s0
 56224: c8 98 08                 a1 = a1 + a2
 56227: 85 99 01                 a2 = a2 ^ 0x1
 56230: d8 85 0a                 a3 = s0 <u a1
 56233: d4 a9 09                 a2 = a2 | a3
 56236: 52 09 77 ff              jump @4209 if a2 != 0
      :                          @4223
 56240: 82 17 08                 a0 = u64 [sp + 0x8]
 56243: 7b 18 18                 u64 [sp + 0x18] = a1
 56246: e6 78 06                 s1 = minu(a1, a0)
 56249: 51 06 de                 jump @4222 if s1 == 0
      :                          @4224
 56252: 82 1c 18                 a5 = u64 [sp + 0x18]
 56255: 95 c7 ff                 a0 = a5 + 0xffffffffffffffff
 56258: 82 19 20                 a2 = u64 [sp + 0x20]
 56261: ae 97 a6 00              jump @4243 if a0 >=u a2
      :                          @4225
 56265: 96 c2 18                 t0 = a5 * 0x18
 56268: 82 18                    a1 = u64 [sp]
 56270: c8 82 02                 t0 = t0 + a1
 56273: 95 20 f8                 ra = t0 + 0xfffffffffffffff8
 56276: ae 9c 98 00              jump @4244 if a5 >=u a2
      :                          @4226
 56280: 95 29 f0                 a2 = t0 + 0xfffffffffffffff0
 56283: 95 25 10                 s0 = t0 + 0x10
 56286: 95 22 08                 t0 = t0 + 0x8
 56289: 33 0a 01                 a3 = 0x1
 56292: 01                       fallthrough
      :                          @4227
 56293: 82 0c                    a5 = u64 [ra]
 56295: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
 56298: ae cb 91 00              jump @4252 if a4 >=u a5
      :                          @4228
 56302: ae ca 7a                 jump @4240 if a3 >=u a5
      :                          @4229
 56305: 82 5c                    a5 = u64 [s0]
 56307: ae ca 77                 jump @4242 if a3 >=u a5
      :                          @4230
 56310: 82 9c                    a5 = u64 [a2]
 56312: d8 6a 03                 t1 = a3 <u s1
 56315: 97 bb 03                 a4 = a4 << 0x3
 56318: c8 cb 0b                 a4 = a4 + a5
 56321: 97 a4 03                 t2 = a3 << 0x3
 56324: c8 4c 0c                 a5 = a5 + t2
 56327: 82 cc                    a5 = u64 [a5]
 56329: 82 28                    a1 = u64 [t0]
 56331: 82 bb                    a4 = u64 [a4]
 56333: c8 3a 0a                 a3 = a3 + t1
 56336: ca 7c 0c                 a5 = a5 * a0
 56339: c8 48 08                 a1 = a1 + t2
 56342: c9 cb 0b                 a4 = a4 - a5
 56345: d8 a6 0c                 a5 = s1 <u a3
 56348: 85 cc 01                 a5 = a5 ^ 0x1
 56351: d2 c3 0c                 a5 = t1 & a5
 56354: 7b 8b                    u64 [a1] = a4
 56356: 52 0c c1                 jump @4227 if a5 != 0
      :                          @4231
 56359: 28 70 ff                 jump @4222
      :                          @4232
 56362: 82 18 28                 a1 = u64 [sp + 0x28]
 56365: 51 08 2d                 jump @4239 if a1 == 0
      :                          @4233
 56368: 33 09 aa aa 00           a2 = 0xaaaa
 56373: ac 89 25                 jump @4239 if a2 <u a1
      :                          @4234
 56376: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 56379: 33 09 b0 02 03           a2 = 0x302b0
 56384: 95 99 00 00 10           a2 = a2 + 0x100000
 56389: 01                       fallthrough
      :                          @4235
 56390: 82 9a                    a3 = u64 [a2]
 56392: c9 a9 0b                 a4 = a2 - a3
 56395: ab 0b 0f                 jump @4239 if a4 != ra
      :                          @4236
 56398: c8 8a 0b                 a4 = a3 + a1
 56401: 01                       fallthrough
      :                          @4237
 56402: 82 9c                    a5 = u64 [a2]
 56404: ab ac f2                 jump @4235 if a5 != a3
      :                          @4238
 56407: 7b 9b                    u64 [a2] = a4
 56409: 01                       fallthrough
      :                          @4239
 56410: 82 10 68                 ra = u64 [sp + 0x68]
 56413: 82 15 60                 s0 = u64 [sp + 0x60]
 56416: 82 16 58                 s1 = u64 [sp + 0x58]
 56419: 95 11 70                 sp = sp + 0x70
 56422: 32 00                    ret
      :                          @4240
 56424: 00                       trap
      :                          @4241
 56425: 00                       trap
      :                          @4242
 56426: 00                       trap
      :                          @4243
 56427: 00                       trap
      :                          @4244
 56428: 82 0b                    a4 = u64 [ra]
 56430: 51 0b 0c                 jump @4251 if a4 == 0
      :                          @4245
 56433: 51 1b 01 f8              jump @4241 if a4 == 1
      :                          @4246
 56437: 00                       trap
      :                          @4247
 56438: 00                       trap
      :                          @4248
 56439: 00                       trap
      :                          @4249
 56440: 00                       trap
      :                          @4250
 56441: 00                       trap
      :                          @4251
 56442: 00                       trap
      :                          @4252
 56443: 00                       trap
      :                          @4253
 56444: 00                       trap
      :                          @4254
 56445: 95 11 90                 sp = sp + 0xffffffffffffff90
 56448: 7b 10 68                 u64 [sp + 0x68] = ra
 56451: 7b 15 60                 u64 [sp + 0x60] = s0
 56454: 7b 16 58                 u64 [sp + 0x58] = s1
 56457: ae 87 08                 jump @4256 if a0 >=u a1
      :                          @4255
 56460: 33 07                    a0 = 0
 56462: 28 f2 01                 jump @4297
      :                          @4256
 56465: 7b 17 10                 u64 [sp + 0x10] = a0
 56468: 14 07 fe ff ff ff ff ff ff 0f a0 = 0xffffffffffffffe
 56478: ac 87 ff 01              jump @4308 if a0 <u a1
      :                          @4257
 56482: 95 89 01                 a2 = a1 + 0x1
 56485: 14 07 ff ff ff ff ff ff ff 0f a0 = 0xfffffffffffffff
 56495: d8 78 02                 t0 = a1 <u a0
 56498: 7b 19 20                 u64 [sp + 0x20] = a2
 56501: 97 99 03                 a2 = a2 << 0x3
 56504: 97 22 03                 t0 = t0 << 0x3
 56507: 33 04 b0 02 03           t2 = 0x302b0
 56512: 33 03 00 00 10           t1 = 0x100000
 56517: c8 34 00                 ra = t2 + t1
 56520: 01                       fallthrough
      :                          @4258
 56521: 82 06                    s1 = u64 [ra]
 56523: c8 96 0c                 a5 = s1 + a2
 56526: ac 6c ce 01              jump @4307 if a5 <u s1
      :                          @4259
 56530: c8 2c 0a                 a3 = a5 + t0
 56533: d8 ca 05                 s0 = a3 <u a5
 56536: d8 a3 0a                 a3 = t1 <u a3
 56539: d4 5a 0a                 a3 = a3 | s0
 56542: 52 0a be 01              jump @4307 if a3 != 0
      :                          @4260
 56546: c9 c4 05                 s0 = t2 - a5
 56549: c8 35 05                 s0 = s0 + t1
 56552: 84 5a 07                 a3 = s0 & 0x7
 56555: c8 ac 0c                 a5 = a5 + a3
 56558: 01                       fallthrough
      :                          @4261
 56559: 82 07                    a0 = u64 [ra]
 56561: ab 67 d8                 jump @4258 if a0 != s1
      :                          @4262
 56564: 7b 0c                    u64 [ra] = a5
 56566: 33 0b                    a4 = 0
 56568: 7b 18 08                 u64 [sp + 0x8] = a1
 56571: c9 a5 05                 s0 = s0 - a3
 56574: 64 57                    a0 = s0
 56576: 33 08                    a1 = 0
 56578: 50 20 14 03 0b 2f 02     ra = 788, jump @13689
      :                          @4263 [@dyn 394]
 56585: 82 17 20                 a0 = u64 [sp + 0x20]
 56588: 7b 17 40                 u64 [sp + 0x40] = a0
 56591: 7b 15 48                 u64 [sp + 0x48] = s0
 56594: 7b 17 50                 u64 [sp + 0x50] = a0
 56597: 82 15 10                 s0 = u64 [sp + 0x10]
 56600: 95 59 01                 a2 = s0 + 0x1
 56603: 95 17 28                 a0 = sp + 0x28
 56606: 95 18 40                 a1 = sp + 0x40
 56609: 50 20 16 03 fb 80        ra = 790, jump @1783
      :                          @4264 [@dyn 395]
 56615: 82 19 38                 a2 = u64 [sp + 0x38]
 56618: 51 09 6e 01              jump @4303 if a2 == 0
      :                          @4265
 56622: 82 18 30                 a1 = u64 [sp + 0x30]
 56625: 82 87 10                 a0 = u64 [a1 + 0x10]
 56628: 51 07 65 01              jump @4304 if a0 == 0
      :                          @4266
 56632: 7b 19 20                 u64 [sp + 0x20] = a2
 56635: 7b 18                    u64 [sp] = a1
 56637: 82 89 08                 a2 = u64 [a1 + 0x8]
 56640: 33 08 01                 a1 = 0x1
 56643: 7b 98                    u64 [a2] = a1
 56645: 52 05 91 00              jump @4281 if s0 != 0
      :                          @4267
 56649: 82 17 08                 a0 = u64 [sp + 0x8]
 56652: 82 18 20                 a1 = u64 [sp + 0x20]
 56655: ae 85 4b 01              jump @4305 if s0 >=u a1
      :                          @4268
 56659: 33 03 18                 t1 = 0x18
 56662: ca 35 08                 a1 = s0 * t1
 56665: 82 10                    ra = u64 [sp]
 56667: c8 08 08                 a1 = a1 + ra
 56670: 82 89 10                 a2 = u64 [a1 + 0x10]
 56673: ae 97 3a 01              jump @4306 if a0 >=u a2
      :                          @4269
 56677: 82 8a 08                 a3 = u64 [a1 + 0x8]
 56680: 33 09                    a2 = 0
 56682: 97 78 03                 a1 = a0 << 0x3
 56685: c8 8a 07                 a0 = a3 + a1
 56688: 82 77                    a0 = u64 [a0]
 56690: 33 0b b0 02 03           a4 = 0x302b0
 56695: 95 bb 00 00 10           a4 = a4 + 0x100000
 56700: 33 02 00 00 02           t0 = 0x20000
 56705: 28 0c                    jump @4271
      :                          @4270
 56707: 95 99 01                 a2 = a2 + 0x1
 56710: 82 18 20                 a1 = u64 [sp + 0x20]
 56713: aa 89 c7 00              jump @4290 if a2 == a1
      :                          @4271
 56717: ca 39 0c                 a5 = a2 * t1
 56720: c8 0c 0c                 a5 = a5 + ra
 56723: 82 c5                    s0 = u64 [a5]
 56725: 51 05 ee                 jump @4270 if s0 == 0
      :                          @4272
 56728: ac 52 eb                 jump @4270 if t0 <u s0
      :                          @4273
 56731: 82 c6 08                 s1 = u64 [a5 + 0x8]
 56734: 97 54 03                 t2 = s0 << 0x3
 56737: 01                       fallthrough
      :                          @4274
 56738: 82 bc                    a5 = u64 [a4]
 56740: c9 cb 08                 a1 = a4 - a5
 56743: ab 68 dc                 jump @4270 if a1 != s1
      :                          @4275
 56746: c9 4c 08                 a1 = a5 - t2
 56749: 01                       fallthrough
      :                          @4276
 56750: 82 ba                    a3 = u64 [a4]
 56752: ab ca f2                 jump @4274 if a3 != a5
      :                          @4277
 56755: 7b b8                    u64 [a4] = a1
 56757: 33 05                    s0 = 0
 56759: 01                       fallthrough
      :                          @4278
 56760: ab ca ea                 jump @4274 if a3 != a5
      :                          @4279
 56763: 28 c8                    jump @4270
      :                          @4280
 56765: 82 15 10                 s0 = u64 [sp + 0x10]
 56768: 82 18 18                 a1 = u64 [sp + 0x18]
 56771: d8 58 09                 a2 = a1 <u s0
 56774: c8 98 08                 a1 = a1 + a2
 56777: 85 99 01                 a2 = a2 ^ 0x1
 56780: d8 85 0a                 a3 = s0 <u a1
 56783: d4 a9 09                 a2 = a2 | a3
 56786: 52 09 77 ff              jump @4267 if a2 != 0
      :                          @4281
 56790: 82 17 08                 a0 = u64 [sp + 0x8]
 56793: 7b 18 18                 u64 [sp + 0x18] = a1
 56796: e6 78 05                 s0 = minu(a1, a0)
 56799: 51 05 de                 jump @4280 if s0 == 0
      :                          @4282
 56802: 82 1b 18                 a4 = u64 [sp + 0x18]
 56805: 95 b9 ff                 a2 = a4 + 0xffffffffffffffff
 56808: 82 18 20                 a1 = u64 [sp + 0x20]
 56811: ae 89 a4 00              jump @4299 if a2 >=u a1
      :                          @4283
 56815: 96 bc 18                 a5 = a4 * 0x18
 56818: 82 17                    a0 = u64 [sp]
 56820: c8 7c 0c                 a5 = a5 + a0
 56823: 95 c7 f8                 a0 = a5 + 0xfffffffffffffff8
 56826: ae 8b 96 00              jump @4300 if a4 >=u a1
      :                          @4284
 56830: 95 c0 f0                 ra = a5 + 0xfffffffffffffff0
 56833: 95 c6 10                 s1 = a5 + 0x10
 56836: 95 cc 08                 a5 = a5 + 0x8
 56839: 33 09 01                 a2 = 0x1
 56842: 01                       fallthrough
      :                          @4285
 56843: 82 7a                    a3 = u64 [a0]
 56845: ae a9 8a 00              jump @4302 if a2 >=u a3
      :                          @4286
 56849: 95 9b ff                 a4 = a2 + 0xffffffffffffffff
 56852: ae ab 7a                 jump @4298 if a4 >=u a3
      :                          @4287
 56855: 82 6a                    a3 = u64 [s1]
 56857: ae a9 7e                 jump @4302 if a2 >=u a3
      :                          @4288
 56860: 82 04                    t2 = u64 [ra]
 56862: d8 59 02                 t0 = a2 <u s0
 56865: 97 93 03                 t1 = a2 << 0x3
 56868: c8 34 0a                 a3 = t2 + t1
 56871: 82 aa                    a3 = u64 [a3]
 56873: 97 bb 03                 a4 = a4 << 0x3
 56876: c8 4b 0b                 a4 = a4 + t2
 56879: 82 c8                    a1 = u64 [a5]
 56881: 82 bb                    a4 = u64 [a4]
 56883: ca 9a 0a                 a3 = a3 * a2
 56886: c8 29 09                 a2 = a2 + t0
 56889: c8 38 08                 a1 = a1 + t1
 56892: c8 ba 0a                 a3 = a3 + a4
 56895: d8 95 0b                 a4 = s0 <u a2
 56898: 85 bb 01                 a4 = a4 ^ 0x1
 56901: d2 b2 0b                 a4 = t0 & a4
 56904: 7b 8a                    u64 [a1] = a3
 56906: 52 0b c1                 jump @4285 if a4 != 0
      :                          @4289
 56909: 28 70 ff                 jump @4280
      :                          @4290
 56912: 82 18 28                 a1 = u64 [sp + 0x28]
 56915: 51 08 2d                 jump @4297 if a1 == 0
      :                          @4291
 56918: 33 09 aa aa 00           a2 = 0xaaaa
 56923: ac 89 25                 jump @4297 if a2 <u a1
      :                          @4292
 56926: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 56929: 33 09 b0 02 03           a2 = 0x302b0
 56934: 95 99 00 00 10           a2 = a2 + 0x100000
 56939: 01                       fallthrough
      :                          @4293
 56940: 82 9a                    a3 = u64 [a2]
 56942: c9 a9 0b                 a4 = a2 - a3
 56945: ab 0b 0f                 jump @4297 if a4 != ra
      :                          @4294
 56948: c8 8a 0b                 a4 = a3 + a1
 56951: 01                       fallthrough
      :                          @4295
 56952: 82 9c                    a5 = u64 [a2]
 56954: ab ac f2                 jump @4293 if a5 != a3
      :                          @4296
 56957: 7b 9b                    u64 [a2] = a4
 56959: 01                       fallthrough
      :                          @4297
 56960: 82 10 68                 ra = u64 [sp + 0x68]
 56963: 82 15 60                 s0 = u64 [sp + 0x60]
 56966: 82 16 58                 s1 = u64 [sp + 0x58]
 56969: 95 11 70                 sp = sp + 0x70
 56972: 32 00                    ret
      :                          @4298
 56974: 00                       trap
      :                          @4299
 56975: 00                       trap
      :                          @4300
 56976: 82 7a                    a3 = u64 [a0]
 56978: 54 1a 01 05              jump @4302 if a3 <=u 1
      :                          @4301
 56982: 00                       trap
      :                          @4302
 56983: 00                       trap
      :                          @4303
 56984: 00                       trap
      :                          @4304
 56985: 00                       trap
      :                          @4305
 56986: 00                       trap
      :                          @4306
 56987: 00                       trap
      :                          @4307
 56988: 00                       trap
      :                          @4308
 56989: 00                       trap
      :                          @4309
 56990: 82 ab                    a4 = u64 [a3]
 56992: c8 9b 0c                 a5 = a4 + a2
 56995: ac bc d0 01              jump @4359 if a5 <u a4
      :                          @4310
 56999: 95 c8 08                 a1 = a5 + 0x8
 57002: d8 c8 06                 s1 = a1 <u a5
 57005: d8 82 08                 a1 = t0 <u a1
 57008: d4 68 08                 a1 = a1 | s1
 57011: 52 08 c0 01              jump @4359 if a1 != 0
      :                          @4311
 57015: c9 c3 06                 s1 = t1 - a5
 57018: c8 26 06                 s1 = s1 + t0
 57021: 84 68 07                 a1 = s1 & 0x7
 57024: c8 8c 0c                 a5 = a5 + a1
 57027: 01                       fallthrough
      :                          @4312
 57028: 82 a5                    s0 = u64 [a3]
 57030: ab b5 d8                 jump @4309 if s0 != a4
      :                          @4313
 57033: 7b ac                    u64 [a3] = a5
 57035: c9 86 06                 s1 = s1 - a1
 57038: 64 67                    a0 = s1
 57040: 33 08                    a1 = 0
 57042: 50 20 18 03 3b 2d 02     ra = 792, jump @13689
      :                          @4314 [@dyn 396]
 57049: 82 19 18                 a2 = u64 [sp + 0x18]
 57052: 7b 19 38                 u64 [sp + 0x38] = a2
 57055: 7b 16 40                 u64 [sp + 0x40] = s1
 57058: 7b 19 48                 u64 [sp + 0x48] = a2
 57061: 95 17 20                 a0 = sp + 0x20
 57064: 95 18 38                 a1 = sp + 0x38
 57067: 50 20 1a 03 31 7f ff     ra = 794, jump @1783
      :                          @4315 [@dyn 397]
 57074: 82 17 30                 a0 = u64 [sp + 0x30]
 57077: 7b 17 18                 u64 [sp + 0x18] = a0
 57080: 51 07 79 01              jump @4357 if a0 == 0
      :                          @4316
 57084: 82 10 28                 ra = u64 [sp + 0x28]
 57087: 82 07 10                 a0 = u64 [ra + 0x10]
 57090: 51 07 6f 01              jump @4357 if a0 == 0
      :                          @4317
 57094: 82 08 08                 a1 = u64 [ra + 0x8]
 57097: 33 07 01                 a0 = 0x1
 57100: 7b 87                    u64 [a1] = a0
 57102: 82 1b 08                 a4 = u64 [sp + 0x8]
 57105: 51 0b b3 00              jump @4329 if a4 == 0
      :                          @4318
 57109: 7b 10                    u64 [sp] = ra
 57111: 01                       fallthrough
      :                          @4319
 57112: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 57115: 82 18 18                 a1 = u64 [sp + 0x18]
 57118: ae 89 50 01              jump @4354 if a2 >=u a1
      :                          @4320
 57122: 96 95 18                 s0 = a2 * 0x18
 57125: c8 05 05                 s0 = s0 + ra
 57128: 82 5a 10                 a3 = u64 [s0 + 0x10]
 57131: ae a9 44 01              jump @4355 if a2 >=u a3
      :                          @4321
 57135: 82 18 18                 a1 = u64 [sp + 0x18]
 57138: ae 87 3e 01              jump @4356 if a0 >=u a1
      :                          @4322
 57142: 96 73 18                 t1 = a0 * 0x18
 57145: c8 03 03                 t1 = t1 + ra
 57148: 82 38 10                 a1 = u64 [t1 + 0x10]
 57151: 51 08 2e 01              jump @4353 if a1 == 0
      :                          @4323
 57155: d8 b7 00                 ra = a0 <u a4
 57158: 82 58 08                 a1 = u64 [s0 + 0x8]
 57161: 7b 10 10                 u64 [sp + 0x10] = ra
 57164: c8 70 00                 ra = ra + a0
 57167: 95 56 10                 s1 = s0 + 0x10
 57170: 97 99 03                 a2 = a2 << 0x3
 57173: c8 98 08                 a1 = a1 + a2
 57176: 82 88                    a1 = u64 [a1]
 57178: 82 39 08                 a2 = u64 [t1 + 0x8]
 57181: 95 55 08                 s0 = s0 + 0x8
 57184: 95 32 10                 t0 = t1 + 0x10
 57187: 95 33 08                 t1 = t1 + 0x8
 57190: 7b 98                    u64 [a2] = a1
 57192: 33 09 01                 a2 = 0x1
 57195: 01                       fallthrough
      :                          @4324
 57196: 82 2b                    a4 = u64 [t0]
 57198: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 57201: ae ba f9 00              jump @4350 if a3 >=u a4
      :                          @4325
 57205: 82 6c                    a5 = u64 [s1]
 57207: ae ca f4 00              jump @4351 if a3 >=u a5
      :                          @4326
 57211: ae b9 f1 00              jump @4352 if a2 >=u a4
      :                          @4327
 57215: 82 34                    t2 = u64 [t1]
 57217: d8 79 0b                 a4 = a2 <u a0
 57220: 82 5c                    a5 = u64 [s0]
 57222: 97 aa 03                 a3 = a3 << 0x3
 57225: c8 a4 08                 a1 = t2 + a3
 57228: 82 88                    a1 = u64 [a1]
 57230: c8 ca 0a                 a3 = a3 + a5
 57233: 82 aa                    a3 = u64 [a3]
 57235: 97 9c 03                 a5 = a2 << 0x3
 57238: c8 b9 09                 a2 = a2 + a4
 57241: c8 4c 0c                 a5 = a5 + t2
 57244: c8 a8 08                 a1 = a1 + a3
 57247: d8 97 0a                 a3 = a0 <u a2
 57250: 85 aa 01                 a3 = a3 ^ 0x1
 57253: d2 ba 0a                 a3 = a3 & a4
 57256: 7b c8                    u64 [a5] = a1
 57258: 52 0a c2                 jump @4324 if a3 != 0
      :                          @4328
 57261: 82 17 10                 a0 = u64 [sp + 0x10]
 57264: 85 77 01                 a0 = a0 ^ 0x1
 57267: 82 1b 08                 a4 = u64 [sp + 0x8]
 57270: d8 0b 08                 a1 = a4 <u ra
 57273: d4 78 08                 a1 = a1 | a0
 57276: 64 07                    a0 = ra
 57278: 82 10                    ra = u64 [sp]
 57280: 51 08 58 ff              jump @4319 if a1 == 0
      :                          @4329
 57284: 82 17 18                 a0 = u64 [sp + 0x18]
 57287: ae 7b ab 00              jump @4358 if a4 >=u a0
      :                          @4330
 57291: 33 03 18                 t1 = 0x18
 57294: ca 3b 07                 a0 = a4 * t1
 57297: c8 07 07                 a0 = a0 + ra
 57300: 82 78 10                 a1 = u64 [a0 + 0x10]
 57303: 51 08 96 00              jump @4353 if a1 == 0
      :                          @4331
 57307: 82 77 08                 a0 = u64 [a0 + 0x8]
 57310: 33 0a                    a3 = 0
 57312: 82 77                    a0 = u64 [a0]
 57314: 33 0b b0 02 03           a4 = 0x302b0
 57319: 95 bc 00 00 10           a5 = a4 + 0x100000
 57324: 33 02 00 00 02           t0 = 0x20000
 57329: 28 0b                    jump @4333
      :                          @4332
 57331: 95 aa 01                 a3 = a3 + 0x1
 57334: 82 18 18                 a1 = u64 [sp + 0x18]
 57337: aa 8a 33                 jump @4342 if a3 == a1
      :                          @4333
 57340: ca 3a 08                 a1 = a3 * t1
 57343: c8 08 08                 a1 = a1 + ra
 57346: 82 85                    s0 = u64 [a1]
 57348: 51 05 ef                 jump @4332 if s0 == 0
      :                          @4334
 57351: ac 52 ec                 jump @4332 if t0 <u s0
      :                          @4335
 57354: 82 86 08                 s1 = u64 [a1 + 0x8]
 57357: 97 54 03                 t2 = s0 << 0x3
 57360: 01                       fallthrough
      :                          @4336
 57361: 82 c8                    a1 = u64 [a5]
 57363: c9 8c 0b                 a4 = a5 - a1
 57366: ab 6b dd                 jump @4332 if a4 != s1
      :                          @4337
 57369: c9 48 0b                 a4 = a1 - t2
 57372: 01                       fallthrough
      :                          @4338
 57373: 82 c9                    a2 = u64 [a5]
 57375: ab 89 f2                 jump @4336 if a2 != a1
      :                          @4339
 57378: 7b cb                    u64 [a5] = a4
 57380: 33 05                    s0 = 0
 57382: 01                       fallthrough
      :                          @4340
 57383: ab 89 ea                 jump @4336 if a2 != a1
      :                          @4341
 57386: 28 c9                    jump @4332
      :                          @4342
 57388: 82 19 20                 a2 = u64 [sp + 0x20]
 57391: 51 09 2d                 jump @4349 if a2 == 0
      :                          @4343
 57394: 33 08 aa aa 00           a1 = 0xaaaa
 57399: ac 98 25                 jump @4349 if a1 <u a2
      :                          @4344
 57402: 96 99 e8                 a2 = a2 * 0xffffffffffffffe8
 57405: 33 0a b0 02 03           a3 = 0x302b0
 57410: 95 aa 00 00 10           a3 = a3 + 0x100000
 57415: 01                       fallthrough
      :                          @4345
 57416: 82 a8                    a1 = u64 [a3]
 57418: c9 8a 0b                 a4 = a3 - a1
 57421: ab 0b 0f                 jump @4349 if a4 != ra
      :                          @4346
 57424: c8 98 0b                 a4 = a1 + a2
 57427: 01                       fallthrough
      :                          @4347
 57428: 82 ac                    a5 = u64 [a3]
 57430: ab 8c f2                 jump @4345 if a5 != a1
      :                          @4348
 57433: 7b ab                    u64 [a3] = a4
 57435: 01                       fallthrough
      :                          @4349
 57436: 82 10 60                 ra = u64 [sp + 0x60]
 57439: 82 15 58                 s0 = u64 [sp + 0x58]
 57442: 82 16 50                 s1 = u64 [sp + 0x50]
 57445: 95 11 68                 sp = sp + 0x68
 57448: 32 00                    ret
      :                          @4350
 57450: 00                       trap
      :                          @4351
 57451: 00                       trap
      :                          @4352
 57452: 00                       trap
      :                          @4353
 57453: 00                       trap
      :                          @4354
 57454: 00                       trap
      :                          @4355
 57455: 00                       trap
      :                          @4356
 57456: 00                       trap
      :                          @4357
 57457: 00                       trap
      :                          @4358
 57458: 00                       trap
      :                          @4359
 57459: 00                       trap
      :                          @4360
 57460: 83 72                    i32 t0 = a0 + 0
 57462: 51 02 34                 jump @4365 if t0 == 0
      :                          @4361
 57465: 33 07                    a0 = 0
 57467: 33 09 01                 a2 = 0x1
 57470: aa 92 2a                 jump @4364 if t0 == a2
      :                          @4362
 57473: 33 0a 02                 a3 = 0x2
 57476: 01                       fallthrough
      :                          @4363
 57477: d8 2a 0b                 a4 = a3 <u t0
 57480: 85 bc 01                 a5 = a4 ^ 0x1
 57483: 97 a8 20                 a1 = a3 << 0x20
 57486: be ba 0a                 i32 a3 = a3 + a4
 57489: d8 a2 0b                 a4 = t0 <u a3
 57492: d4 cb 0b                 a4 = a4 | a5
 57495: 98 88 20                 a1 = a1 >> 0x20
 57498: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 57501: c8 97 0c                 a5 = a0 + a2
 57504: 64 79                    a2 = a0
 57506: ca 8c 07                 a0 = a5 * a1
 57509: 51 0b e0                 jump @4363 if a4 == 0
      :                          @4364
 57512: 32 00                    ret
      :                          @4365
 57514: 33 07 01                 a0 = 0x1
 57517: 28 c7 b3 00              jump @8096
      :                          @4366
 57521: 95 11 90                 sp = sp + 0xffffffffffffff90
 57524: 7b 10 68                 u64 [sp + 0x68] = ra
 57527: 7b 15 60                 u64 [sp + 0x60] = s0
 57530: 7b 16 58                 u64 [sp + 0x58] = s1
 57533: ae 87 14                 jump @4369 if a0 >=u a1
      :                          @4367
 57536: 33 07                    a0 = 0
 57538: 01                       fallthrough
      :                          @4368
 57539: 82 10 68                 ra = u64 [sp + 0x68]
 57542: 82 15 60                 s0 = u64 [sp + 0x60]
 57545: 82 16 58                 s1 = u64 [sp + 0x58]
 57548: 95 11 70                 sp = sp + 0x70
 57551: 32 00                    ret
      :                          @4369
 57553: 64 79                    a2 = a0
 57555: 98 77 3c                 a0 = a0 >> 0x3c
 57558: 52 07 18 02              jump @4436 if a0 != 0
      :                          @4370
 57562: 88 72 01                 t0 = a0 <u 0x1
 57565: 7b 19 10                 u64 [sp + 0x10] = a2
 57568: 97 99 03                 a2 = a2 << 0x3
 57571: 97 22 03                 t0 = t0 << 0x3
 57574: 33 04 b0 02 03           t2 = 0x302b0
 57579: 33 03 00 00 10           t1 = 0x100000
 57584: c8 34 00                 ra = t2 + t1
 57587: 01                       fallthrough
      :                          @4371
 57588: 82 06                    s1 = u64 [ra]
 57590: c8 96 0c                 a5 = s1 + a2
 57593: ac 6c ef 01              jump @4433 if a5 <u s1
      :                          @4372
 57597: c8 2c 0a                 a3 = a5 + t0
 57600: d8 ca 05                 s0 = a3 <u a5
 57603: d8 a3 0a                 a3 = t1 <u a3
 57606: d4 5a 0a                 a3 = a3 | s0
 57609: 52 0a df 01              jump @4433 if a3 != 0
      :                          @4373
 57613: c9 c4 05                 s0 = t2 - a5
 57616: c8 35 05                 s0 = s0 + t1
 57619: 84 5a 07                 a3 = s0 & 0x7
 57622: c8 ac 0c                 a5 = a5 + a3
 57625: 01                       fallthrough
      :                          @4374
 57626: 82 07                    a0 = u64 [ra]
 57628: ab 67 d8                 jump @4371 if a0 != s1
      :                          @4375
 57631: 7b 0c                    u64 [ra] = a5
 57633: 33 0b                    a4 = 0
 57635: 7b 18                    u64 [sp] = a1
 57637: c9 a5 05                 s0 = s0 - a3
 57640: 64 57                    a0 = s0
 57642: 33 08                    a1 = 0
 57644: 50 20 1c 03 e1 2a 02     ra = 796, jump @13689
      :                          @4376 [@dyn 398]
 57651: 82 19 10                 a2 = u64 [sp + 0x10]
 57654: 7b 19 40                 u64 [sp + 0x40] = a2
 57657: 7b 15 48                 u64 [sp + 0x48] = s0
 57660: 7b 19 50                 u64 [sp + 0x50] = a2
 57663: 95 99 01                 a2 = a2 + 0x1
 57666: 95 17 28                 a0 = sp + 0x28
 57669: 95 18 40                 a1 = sp + 0x40
 57672: 50 20 1e 03 d4 7c ff     ra = 798, jump @1783
      :                          @4377 [@dyn 399]
 57679: 82 18 38                 a1 = u64 [sp + 0x38]
 57682: 51 08 92 01              jump @4429 if a1 == 0
      :                          @4378
 57686: 82 10 30                 ra = u64 [sp + 0x30]
 57689: 82 07 10                 a0 = u64 [ra + 0x10]
 57692: 51 07 8a 01              jump @4431 if a0 == 0
      :                          @4379
 57696: 82 07 08                 a0 = u64 [ra + 0x8]
 57699: 33 0a 01                 a3 = 0x1
 57702: 7b 7a                    u64 [a0] = a3
 57704: 7b 18 20                 u64 [sp + 0x20] = a1
 57707: 7b 10 08                 u64 [sp + 0x8] = ra
 57710: 28 2c                    jump @4383
      :                          @4380
 57712: 82 07                    a0 = u64 [ra]
 57714: 51 07 6f 01              jump @4426 if a0 == 0
      :                          @4381
 57718: 82 47                    a0 = u64 [t2]
 57720: 49 07                    u64 [a0 + 0] = 0
 57722: 01                       fallthrough
      :                          @4382
 57723: 82 17 10                 a0 = u64 [sp + 0x10]
 57726: 82 1a 18                 a3 = u64 [sp + 0x18]
 57729: d8 7a 08                 a1 = a3 <u a0
 57732: c8 8a 0a                 a3 = a3 + a1
 57735: 85 89 01                 a2 = a1 ^ 0x1
 57738: d8 a7 08                 a1 = a0 <u a3
 57741: d4 89 09                 a2 = a2 | a1
 57744: 82 10 08                 ra = u64 [sp + 0x8]
 57747: 82 18 20                 a1 = u64 [sp + 0x20]
 57750: 52 09 99 00              jump @4400 if a2 != 0
      :                          @4383
 57754: 95 a7 ff                 a0 = a3 + 0xffffffffffffffff
 57757: 96 a6 18                 s1 = a3 * 0x18
 57760: c8 06 06                 s1 = s1 + ra
 57763: 95 60 10                 ra = s1 + 0x10
 57766: 95 64 08                 t2 = s1 + 0x8
 57769: 7b 1a 18                 u64 [sp + 0x18] = a3
 57772: ae 87 78                 jump @4397 if a0 >=u a1
      :                          @4384
 57775: 95 65 f8                 s0 = s1 + 0xfffffffffffffff8
 57778: ae 8a 26 01              jump @4423 if a3 >=u a1
      :                          @4385
 57782: 51 07 ba                 jump @4380 if a0 == 0
      :                          @4386
 57785: 82 58                    a1 = u64 [s0]
 57787: 51 08 27 01              jump @4427 if a1 == 0
      :                          @4387
 57791: 82 08                    a1 = u64 [ra]
 57793: 51 08 20 01              jump @4426 if a1 == 0
      :                          @4388
 57797: 95 66 f0                 s1 = s1 + 0xfffffffffffffff0
 57800: 82 68                    a1 = u64 [s1]
 57802: 82 88                    a1 = u64 [a1]
 57804: 82 49                    a2 = u64 [t2]
 57806: 7b 98                    u64 [a2] = a1
 57808: 33 0a 01                 a3 = 0x1
 57811: 33 02 08                 t0 = 0x8
 57814: 64 79                    a2 = a0
 57816: 01                       fallthrough
      :                          @4389
 57817: 82 5b                    a4 = u64 [s0]
 57819: 95 ac ff                 a5 = a3 + 0xffffffffffffffff
 57822: ae bc f9 00              jump @4422 if a5 >=u a4
      :                          @4390
 57826: 82 68                    a1 = u64 [s1]
 57828: c8 28 08                 a1 = a1 + t0
 57831: 82 83 f8                 t1 = u64 [a1 + 0xfffffffffffffff8]
 57834: 95 ac 01                 a5 = a3 + 0x1
 57837: ae 7a 14                 jump @4394 if a3 >=u a0
      :                          @4391
 57840: ae ba f3 00              jump @4428 if a3 >=u a4
      :                          @4392
 57844: 82 88                    a1 = u64 [a1]
 57846: ca c8 08                 a1 = a1 * a5
 57849: 82 0b                    a4 = u64 [ra]
 57851: ac ba 0e                 jump @4395 if a3 <u a4
      :                          @4393
 57854: 28 e5 00                 jump @4428
      :                          @4394
 57857: 33 08                    a1 = 0
 57859: 82 0b                    a4 = u64 [ra]
 57861: ae ba de 00              jump @4428 if a3 >=u a4
      :                          @4395
 57865: 82 4a                    a3 = u64 [t2]
 57867: ca 93 0b                 a4 = t1 * a2
 57870: c8 2a 0a                 a3 = a3 + t0
 57873: c8 b8 08                 a1 = a1 + a4
 57876: 7b a8                    u64 [a3] = a1
 57878: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 57881: 95 22 08                 t0 = t0 + 0x8
 57884: 64 ca                    a3 = a5
 57886: 52 09 bb                 jump @4389 if a2 != 0
      :                          @4396
 57889: 28 5a ff                 jump @4382
      :                          @4397
 57892: ae 8a c5 00              jump @4434 if a3 >=u a1
      :                          @4398
 57896: 51 07 48 ff              jump @4380 if a0 == 0
      :                          @4399
 57900: 28 b9 00                 jump @4430
      :                          @4400
 57903: ae 87 b6 00              jump @4430 if a0 >=u a1
      :                          @4401
 57907: 33 03 18                 t1 = 0x18
 57910: ca 37 07                 a0 = a0 * t1
 57913: c8 07 07                 a0 = a0 + ra
 57916: 82 79 10                 a2 = u64 [a0 + 0x10]
 57919: 82 18                    a1 = u64 [sp]
 57921: ae 98 a6 00              jump @4432 if a1 >=u a2
      :                          @4402
 57925: 82 77 08                 a0 = u64 [a0 + 0x8]
 57928: 33 09                    a2 = 0
 57930: 97 88 03                 a1 = a1 << 0x3
 57933: c8 87 07                 a0 = a0 + a1
 57936: 82 77                    a0 = u64 [a0]
 57938: 33 0b b0 02 03           a4 = 0x302b0
 57943: 95 bc 00 00 10           a5 = a4 + 0x100000
 57948: 33 02 00 00 02           t0 = 0x20000
 57953: 28 0b                    jump @4404
      :                          @4403
 57955: 95 99 01                 a2 = a2 + 0x1
 57958: 82 18 20                 a1 = u64 [sp + 0x20]
 57961: aa 89 33                 jump @4413 if a2 == a1
      :                          @4404
 57964: ca 39 08                 a1 = a2 * t1
 57967: c8 08 08                 a1 = a1 + ra
 57970: 82 86                    s1 = u64 [a1]
 57972: 51 06 ef                 jump @4403 if s1 == 0
      :                          @4405
 57975: ac 62 ec                 jump @4403 if t0 <u s1
      :                          @4406
 57978: 82 88 08                 a1 = u64 [a1 + 0x8]
 57981: 97 64 03                 t2 = s1 << 0x3
 57984: 01                       fallthrough
      :                          @4407
 57985: 82 c5                    s0 = u64 [a5]
 57987: c9 5c 0b                 a4 = a5 - s0
 57990: ab 8b dd                 jump @4403 if a4 != a1
      :                          @4408
 57993: c9 45 0b                 a4 = s0 - t2
 57996: 01                       fallthrough
      :                          @4409
 57997: 82 ca                    a3 = u64 [a5]
 57999: ab 5a f2                 jump @4407 if a3 != s0
      :                          @4410
 58002: 7b cb                    u64 [a5] = a4
 58004: 33 06                    s1 = 0
 58006: 01                       fallthrough
      :                          @4411
 58007: ab 5a ea                 jump @4407 if a3 != s0
      :                          @4412
 58010: 28 c9                    jump @4403
      :                          @4413
 58012: 82 18 28                 a1 = u64 [sp + 0x28]
 58015: 51 08 24 fe              jump @4368 if a1 == 0
      :                          @4414
 58019: 33 09 aa aa 00           a2 = 0xaaaa
 58024: ac 89 1b fe              jump @4368 if a2 <u a1
      :                          @4415
 58028: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 58031: 33 09 b0 02 03           a2 = 0x302b0
 58036: 95 99 00 00 10           a2 = a2 + 0x100000
 58041: 01                       fallthrough
      :                          @4416
 58042: 82 9a                    a3 = u64 [a2]
 58044: c9 a9 0b                 a4 = a2 - a3
 58047: ab 0b 04 fe              jump @4368 if a4 != ra
      :                          @4417
 58051: c8 8a 0b                 a4 = a3 + a1
 58054: 01                       fallthrough
      :                          @4418
 58055: 82 9c                    a5 = u64 [a2]
 58057: ab ac f1                 jump @4416 if a5 != a3
      :                          @4419
 58060: 7b 9b                    u64 [a2] = a4
 58062: 33 06                    s1 = 0
 58064: 01                       fallthrough
      :                          @4420
 58065: ab ac e9                 jump @4416 if a5 != a3
      :                          @4421
 58068: 28 ef fd                 jump @4368
      :                          @4422
 58071: 00                       trap
      :                          @4423
 58072: 51 07 08                 jump @4425 if a0 == 0
      :                          @4424
 58075: 82 57                    a0 = u64 [s0]
 58077: 51 07 05                 jump @4427 if a0 == 0
      :                          @4425
 58080: 00                       trap
      :                          @4426
 58081: 00                       trap
      :                          @4427
 58082: 00                       trap
      :                          @4428
 58083: 00                       trap
      :                          @4429
 58084: 00                       trap
      :                          @4430
 58085: 00                       trap
      :                          @4431
 58086: 00                       trap
      :                          @4432
 58087: 00                       trap
      :                          @4433
 58088: 00                       trap
      :                          @4434
 58089: 51 07 f7                 jump @4425 if a0 == 0
      :                          @4435
 58092: 28 f9                    jump @4430
      :                          @4436
 58094: 00                       trap
      :                          @4437
 58095: 33 03                    t1 = 0
 58097: 51 08 3b                 jump @4445 if a1 == 0
      :                          @4438
 58100: 33 04                    t2 = 0
 58102: 33 02 18                 t0 = 0x18
 58105: 28 11                    jump @4441
      :                          @4439
 58107: 33 0a                    a3 = 0
 58109: 01                       fallthrough
      :                          @4440
 58110: 95 44 01                 t2 = t2 + 0x1
 58113: 84 aa 01                 a3 = a3 & 0x1
 58116: be 3a 03                 i32 t1 = a3 + t1
 58119: aa 84 25                 jump @4445 if t2 == a1
      :                          @4441
 58122: ca 24 09                 a2 = t2 * t0
 58125: c8 79 09                 a2 = a2 + a0
 58128: 82 9c 10                 a5 = u64 [a2 + 0x10]
 58131: 51 0c e8                 jump @4439 if a5 == 0
      :                          @4442
 58134: 82 9b 08                 a4 = u64 [a2 + 0x8]
 58137: 33 0a                    a3 = 0
 58139: 01                       fallthrough
      :                          @4443
 58140: 7c b9                    a2 = u8 [a4]
 58142: c8 9a 0a                 a3 = a3 + a2
 58145: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 58148: 95 bb 01                 a4 = a4 + 0x1
 58151: 52 0c f5                 jump @4443 if a5 != 0
      :                          @4444
 58154: 28 d4                    jump @4440
      :                          @4445
 58156: 88 37 01                 a0 = t1 <u 0x1
 58159: 95 33 fe                 t1 = t1 + 0xfffffffffffffffe
 58162: 88 38 01                 a1 = t1 <u 0x1
 58165: d4 78 08                 a1 = a1 | a0
 58168: 32 00                    ret
      :                          @4446
 58170: 95 82 ff                 t0 = a1 + 0xffffffffffffffff
 58173: ae 72 7a                 jump @4454 if t0 >=u a0
      :                          @4447
 58176: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 58179: 7b 15 08                 u64 [sp + 0x8] = s0
 58182: c9 87 09                 a2 = a0 - a1
 58185: e6 98 04                 t2 = minu(a1, a2)
 58188: 33 09 01                 a2 = 0x1
 58191: c8 97 03                 t1 = a0 + a2
 58194: 33 0a 01                 a3 = 0x1
 58197: 51 04 27                 jump @4450 if t2 == 0
      :                          @4448
 58200: 33 0a 01                 a3 = 0x1
 58203: 33 0b 01                 a4 = 0x1
 58206: 01                       fallthrough
      :                          @4449
 58207: d8 4b 08                 a1 = a4 <u t2
 58210: 85 8c 01                 a5 = a1 ^ 0x1
 58213: c9 b3 05                 s0 = t1 - a4
 58216: c8 b8 08                 a1 = a1 + a4
 58219: ca a5 0a                 a3 = s0 * a3
 58222: d8 84 05                 s0 = t2 <u a1
 58225: d4 5c 0c                 a5 = a5 | s0
 58228: cb ba 0a                 a3 = a3 /u a4
 58231: 64 8b                    a4 = a1
 58233: 51 0c e6                 jump @4449 if a5 == 0
      :                          @4450
 58236: c9 27 08                 a1 = a0 - t0
 58239: e6 82 02                 t0 = minu(t0, a1)
 58242: 51 02 27                 jump @4453 if t0 == 0
      :                          @4451
 58245: 33 09 01                 a2 = 0x1
 58248: 33 0c 01                 a5 = 0x1
 58251: 01                       fallthrough
      :                          @4452
 58252: d8 2c 08                 a1 = a5 <u t0
 58255: 85 85 01                 s0 = a1 ^ 0x1
 58258: c9 c3 0b                 a4 = t1 - a5
 58261: c8 c8 08                 a1 = a1 + a5
 58264: ca 9b 09                 a2 = a4 * a2
 58267: d8 82 0b                 a4 = t0 <u a1
 58270: d4 5b 0b                 a4 = a4 | s0
 58273: cb c9 09                 a2 = a2 /u a5
 58276: 64 8c                    a5 = a1
 58278: 51 0b e6                 jump @4452 if a4 == 0
      :                          @4453
 58281: ca a9 08                 a1 = a2 * a3
 58284: cb 78 07                 a0 = a1 /u a0
 58287: 82 15 08                 s0 = u64 [sp + 0x8]
 58290: 95 11 10                 sp = sp + 0x10
 58293: 32 00                    ret
      :                          @4454
 58295: 33 07                    a0 = 0
 58297: 28 1c b3 00              jump @8126
      :                          @4455
 58301: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 58304: 7b 10 20                 u64 [sp + 0x20] = ra
 58307: 7b 15 18                 u64 [sp + 0x18] = s0
 58310: 7b 16 10                 u64 [sp + 0x10] = s1
 58313: 64 74                    t2 = a0
 58315: 33 08 02                 a1 = 0x2
 58318: 33 07 01                 a0 = 0x1
 58321: ac 84 f5 00              jump @4473 if t2 <u a1
      :                          @4456
 58325: 95 49 01                 a2 = t2 + 0x1
 58328: 7b 19                    u64 [sp] = a2
 58330: 97 99 03                 a2 = a2 << 0x3
 58333: 33 07 b0 02 03           a0 = 0x302b0
 58338: 33 03 b0 02 03           t1 = 0x302b0
 58343: 33 02 00 00 10           t0 = 0x100000
 58348: c8 23 06                 s1 = t1 + t0
 58351: 01                       fallthrough
      :                          @4457
 58352: 82 6a                    a3 = u64 [s1]
 58354: c8 9a 0b                 a4 = a3 + a2
 58357: ac ab e3 00              jump @4478 if a4 <u a3
      :                          @4458
 58361: 95 bc 08                 a5 = a4 + 0x8
 58364: d8 bc 05                 s0 = a5 <u a4
 58367: d8 c2 0c                 a5 = t0 <u a5
 58370: d4 5c 0c                 a5 = a5 | s0
 58373: 52 0c d3 00              jump @4478 if a5 != 0
      :                          @4459
 58377: c9 b3 05                 s0 = t1 - a4
 58380: c8 25 05                 s0 = s0 + t0
 58383: 84 5c 07                 a5 = s0 & 0x7
 58386: c8 cb 0b                 a4 = a4 + a5
 58389: 01                       fallthrough
      :                          @4460
 58390: 82 68                    a1 = u64 [s1]
 58392: ab a8 d8                 jump @4457 if a1 != a3
      :                          @4461
 58395: 7b 6b                    u64 [s1] = a4
 58397: c9 c5 06                 s1 = s0 - a5
 58400: 64 67                    a0 = s1
 58402: 33 08                    a1 = 0
 58404: 7b 19 08                 u64 [sp + 0x8] = a2
 58407: 64 45                    s0 = t2
 58409: 50 20 20 03 e4 27 02     ra = 800, jump @13689
      :                          @4462 [@dyn 400]
 58416: 64 63                    t1 = s1
 58418: 64 5b                    a4 = s0
 58420: 49 06 01                 u64 [s1 + 0] = 0x1
 58423: 49 16 08 01              u64 [s1 + 8] = 0x1
 58427: 33 07 02                 a0 = 0x2
 58430: 01                       fallthrough
      :                          @4463
 58431: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 58434: ac 8b 92 00              jump @4474 if a4 <u a1
      :                          @4464
 58438: 95 79 fe                 a2 = a0 + 0xfffffffffffffffe
 58441: ac 9b 8c 00              jump @4475 if a4 <u a2
      :                          @4465
 58445: 95 7a 02                 a3 = a0 + 0x2
 58448: 51 0a 86 00              jump @4476 if a3 == 0
      :                          @4466
 58452: ac 7b 83 00              jump @4477 if a4 <u a0
      :                          @4467
 58456: d8 b7 02                 t0 = a0 <u a4
 58459: 97 7c 01                 a5 = a0 << 0x1
 58462: c8 7c 05                 s0 = a5 + a0
 58465: 97 76 03                 s1 = a0 << 0x3
 58468: c8 27 07                 a0 = a0 + t0
 58471: 97 88 03                 a1 = a1 << 0x3
 58474: c8 38 08                 a1 = a1 + t1
 58477: 82 88                    a1 = u64 [a1]
 58479: 97 99 03                 a2 = a2 << 0x3
 58482: c8 39 09                 a2 = a2 + t1
 58485: 82 99                    a2 = u64 [a2]
 58487: 95 55 fd                 s0 = s0 + 0xfffffffffffffffd
 58490: 95 cc 01                 a5 = a5 + 0x1
 58493: ca c8 08                 a1 = a1 * a5
 58496: ca 59 09                 a2 = a2 * s0
 58499: c8 98 08                 a1 = a1 + a2
 58502: c8 36 06                 s1 = s1 + t1
 58505: cb a8 08                 a1 = a1 /u a3
 58508: d8 7b 09                 a2 = a4 <u a0
 58511: 85 99 01                 a2 = a2 ^ 0x1
 58514: d2 92 09                 a2 = t0 & a2
 58517: 7b 68                    u64 [s1] = a1
 58519: 52 09 a8                 jump @4463 if a2 != 0
      :                          @4468
 58522: 97 b6 03                 s1 = a4 << 0x3
 58525: c8 36 06                 s1 = s1 + t1
 58528: 82 67                    a0 = u64 [s1]
 58530: 33 08 b0 02 03           a1 = 0x302b0
 58535: 95 88 00 00 10           a1 = a1 + 0x100000
 58540: 82 16 08                 s1 = u64 [sp + 0x8]
 58543: 01                       fallthrough
      :                          @4469
 58544: 82 89                    a2 = u64 [a1]
 58546: c9 98 0a                 a3 = a1 - a2
 58549: ab 3a 11                 jump @4473 if a3 != t1
      :                          @4470
 58552: c9 69 0a                 a3 = a2 - s1
 58555: 01                       fallthrough
      :                          @4471
 58556: 82 8b                    a4 = u64 [a1]
 58558: ab 9b f2                 jump @4469 if a4 != a2
      :                          @4472
 58561: 7b 8a                    u64 [a1] = a3
 58563: 33 0c                    a5 = 0
 58565: 01                       fallthrough
      :                          @4473
 58566: 82 10 20                 ra = u64 [sp + 0x20]
 58569: 82 15 18                 s0 = u64 [sp + 0x18]
 58572: 82 16 10                 s1 = u64 [sp + 0x10]
 58575: 95 11 28                 sp = sp + 0x28
 58578: 32 00                    ret
      :                          @4474
 58580: 00                       trap
      :                          @4475
 58581: 00                       trap
      :                          @4476
 58582: 00                       trap
      :                          @4477
 58583: 00                       trap
      :                          @4478
 58584: 00                       trap
      :                          @4479
 58585: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 58589: 7b 10 88 00              u64 [sp + 0x88] = ra
 58593: 7b 15 80 00              u64 [sp + 0x80] = s0
 58597: 7b 16 78                 u64 [sp + 0x78] = s1
 58600: 82 8a 10                 a3 = u64 [a1 + 0x10]
 58603: 64 76                    s1 = a0
 58605: 51 0a 4a 01              jump @4500 if a3 == 0
      :                          @4480
 58609: 98 a7 3c                 a0 = a3 >> 0x3c
 58612: 52 07 75 01              jump @4507 if a0 != 0
      :                          @4481
 58616: 7b 19 30                 u64 [sp + 0x30] = a2
 58619: 7b 18 38                 u64 [sp + 0x38] = a1
 58622: 88 72 01                 t0 = a0 <u 0x1
 58625: 7b 1a 40                 u64 [sp + 0x40] = a3
 58628: 97 a9 03                 a2 = a3 << 0x3
 58631: 97 22 03                 t0 = t0 << 0x3
 58634: 33 04 b0 02 03           t2 = 0x302b0
 58639: 33 03 00 00 10           t1 = 0x100000
 58644: c8 34 00                 ra = t2 + t1
 58647: 01                       fallthrough
      :                          @4482
 58648: 82 05                    s0 = u64 [ra]
 58650: c8 95 0c                 a5 = s0 + a2
 58653: ac 5c 4b 01              jump @4506 if a5 <u s0
      :                          @4483
 58657: c8 2c 07                 a0 = a5 + t0
 58660: d8 c7 0a                 a3 = a0 <u a5
 58663: d8 73 07                 a0 = t1 <u a0
 58666: d4 a7 07                 a0 = a0 | a3
 58669: 52 07 3b 01              jump @4506 if a0 != 0
      :                          @4484
 58673: c9 c4 07                 a0 = t2 - a5
 58676: c8 37 07                 a0 = a0 + t1
 58679: 84 7a 07                 a3 = a0 & 0x7
 58682: c8 ac 0c                 a5 = a5 + a3
 58685: 01                       fallthrough
      :                          @4485
 58686: 82 08                    a1 = u64 [ra]
 58688: ab 58 d8                 jump @4482 if a1 != s0
      :                          @4486
 58691: 7b 0c                    u64 [ra] = a5
 58693: 33 0b                    a4 = 0
 58695: c9 a7 05                 s0 = a0 - a3
 58698: 64 57                    a0 = s0
 58700: 33 08                    a1 = 0
 58702: 50 20 22 03 bf 26 02     ra = 802, jump @13689
      :                          @4487 [@dyn 401]
 58709: 82 19 40                 a2 = u64 [sp + 0x40]
 58712: 7b 19 60                 u64 [sp + 0x60] = a2
 58715: 7b 15 68                 u64 [sp + 0x68] = s0
 58718: 7b 19 70                 u64 [sp + 0x70] = a2
 58721: 95 17 48                 a0 = sp + 0x48
 58724: 95 18 60                 a1 = sp + 0x60
 58727: 50 20 24 03 b5 78 ff     ra = 804, jump @1783
      :                          @4488 [@dyn 402]
 58734: 82 17 58                 a0 = u64 [sp + 0x58]
 58737: 82 1a 50                 a3 = u64 [sp + 0x50]
 58740: 82 1c 30                 a5 = u64 [sp + 0x30]
 58743: 82 c8 08                 a1 = u64 [a5 + 0x8]
 58746: 82 19 38                 a2 = u64 [sp + 0x38]
 58749: 82 9b 08                 a4 = u64 [a2 + 0x8]
 58752: 82 c9 10                 a2 = u64 [a5 + 0x10]
 58755: 7b 19 38                 u64 [sp + 0x38] = a2
 58758: 33 09                    a2 = 0
 58760: 95 88 10                 a1 = a1 + 0x10
 58763: 7b 18 28                 u64 [sp + 0x28] = a1
 58766: 7b 16 18                 u64 [sp + 0x18] = s1
 58769: 7b 17 10                 u64 [sp + 0x10] = a0
 58772: 7b 1a 08                 u64 [sp + 0x8] = a3
 58775: 7b 1b                    u64 [sp] = a4
 58777: 01                       fallthrough
      :                          @4489
 58778: aa 79 cd 00              jump @4505 if a2 == a0
      :                          @4490
 58782: 33 0c                    a5 = 0
 58784: 95 97 01                 a0 = a2 + 0x1
 58787: 7b 17 20                 u64 [sp + 0x20] = a0
 58790: 96 97 18                 a0 = a2 * 0x18
 58793: c8 7a 02                 t0 = a3 + a0
 58796: 95 23 10                 t1 = t0 + 0x10
 58799: 95 22 08                 t0 = t0 + 0x8
 58802: c8 7b 04                 t2 = a4 + a0
 58805: 95 46 10                 s1 = t2 + 0x10
 58808: 95 44 08                 t2 = t2 + 0x8
 58811: 33 08 01                 a1 = 0x1
 58814: 01                       fallthrough
      :                          @4491
 58815: 33 00                    ra = 0
 58817: 33 0a                    a3 = 0
 58819: 64 c7                    a0 = a5
 58821: 7b 18 30                 u64 [sp + 0x30] = a1
 58824: 82 1c 28                 a5 = u64 [sp + 0x28]
 58827: 01                       fallthrough
      :                          @4492
 58828: 82 38                    a1 = u64 [t1]
 58830: ae 87 96 00              jump @4502 if a0 >=u a1
      :                          @4493
 58834: 82 68                    a1 = u64 [s1]
 58836: ae 8a 91 00              jump @4503 if a3 >=u a1
      :                          @4494
 58840: 82 18 38                 a1 = u64 [sp + 0x38]
 58843: aa a8 8b 00              jump @4504 if a1 == a3
      :                          @4495
 58847: 82 c8                    a1 = u64 [a5]
 58849: ae 87 83 00              jump @4502 if a0 >=u a1
      :                          @4496
 58853: 82 28                    a1 = u64 [t0]
 58855: 82 45                    s0 = u64 [t2]
 58857: 97 79 03                 a2 = a0 << 0x3
 58860: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
 58863: c8 98 08                 a1 = a1 + a2
 58866: c8 05 05                 s0 = s0 + ra
 58869: 82 55                    s0 = u64 [s0]
 58871: c8 b9 09                 a2 = a2 + a4
 58874: 82 99                    a2 = u64 [a2]
 58876: 82 8b                    a4 = u64 [a1]
 58878: 95 aa 01                 a3 = a3 + 0x1
 58881: ca 59 09                 a2 = a2 * s0
 58884: 82 15 40                 s0 = u64 [sp + 0x40]
 58887: c8 b9 09                 a2 = a2 + a4
 58890: 7b 89                    u64 [a1] = a2
 58892: 95 cc 18                 a5 = a5 + 0x18
 58895: 95 00 08                 ra = ra + 0x8
 58898: ab a5 ba                 jump @4492 if s0 != a3
      :                          @4497
 58901: 82 1c 30                 a5 = u64 [sp + 0x30]
 58904: d8 5c 08                 a1 = a5 <u s0
 58907: c8 c8 08                 a1 = a1 + a5
 58910: ac 5c a1                 jump @4491 if a5 <u s0
      :                          @4498
 58913: 82 1c 20                 a5 = u64 [sp + 0x20]
 58916: 64 c9                    a2 = a5
 58918: 82 16 18                 s1 = u64 [sp + 0x18]
 58921: 82 17 10                 a0 = u64 [sp + 0x10]
 58924: 82 1a 08                 a3 = u64 [sp + 0x8]
 58927: 82 1b                    a4 = u64 [sp]
 58929: ab 5c 69 ff              jump @4489 if a5 != s0
      :                          @4499
 58933: 28 0d                    jump @4501
      :                          @4500
 58935: 49 11 48                 u64 [sp + 72] = 0
 58938: 49 11 50 08              u64 [sp + 80] = 0x8
 58942: 49 11 58                 u64 [sp + 88] = 0
 58945: 01                       fallthrough
      :                          @4501
 58946: 82 17 58                 a0 = u64 [sp + 0x58]
 58949: 82 18 50                 a1 = u64 [sp + 0x50]
 58952: 82 19 48                 a2 = u64 [sp + 0x48]
 58955: 7b 67 10                 u64 [s1 + 0x10] = a0
 58958: 7b 68 08                 u64 [s1 + 0x8] = a1
 58961: 7b 69                    u64 [s1] = a2
 58963: 82 10 88 00              ra = u64 [sp + 0x88]
 58967: 82 15 80 00              s0 = u64 [sp + 0x80]
 58971: 82 16 78                 s1 = u64 [sp + 0x78]
 58974: 95 11 90 00              sp = sp + 0x90
 58978: 32 00                    ret
      :                          @4502
 58980: 00                       trap
      :                          @4503
 58981: 00                       trap
      :                          @4504
 58982: 00                       trap
      :                          @4505
 58983: 00                       trap
      :                          @4506
 58984: 00                       trap
      :                          @4507
 58985: 00                       trap
      :                          @4508
 58986: 95 11 48 ff              sp = sp + 0xffffffffffffff48
 58990: 7b 10 b0 00              u64 [sp + 0xb0] = ra
 58994: 7b 15 a8 00              u64 [sp + 0xa8] = s0
 58998: 7b 16 a0 00              u64 [sp + 0xa0] = s1
 59002: 82 8b 10                 a4 = u64 [a1 + 0x10]
 59005: 7b 17                    u64 [sp] = a0
 59007: 51 0b ea 01              jump @4541 if a4 == 0
      :                          @4509
 59011: 7b 19 40                 u64 [sp + 0x40] = a2
 59014: 98 b7 3c                 a0 = a4 >> 0x3c
 59017: 52 07 13 04              jump @4611 if a0 != 0
      :                          @4510
 59021: 64 8a                    a3 = a1
 59023: 64 b8                    a1 = a4
 59025: 7b 1a 50                 u64 [sp + 0x50] = a3
 59028: 88 72 01                 t0 = a0 <u 0x1
 59031: 7b 1b 08                 u64 [sp + 0x8] = a4
 59034: 97 b9 03                 a2 = a4 << 0x3
 59037: 97 22 03                 t0 = t0 << 0x3
 59040: 33 04 b0 02 03           t2 = 0x302b0
 59045: 33 03 00 00 10           t1 = 0x100000
 59050: c8 34 0b                 a4 = t2 + t1
 59053: 01                       fallthrough
      :                          @4511
 59054: 82 b6                    s1 = u64 [a4]
 59056: c8 96 0c                 a5 = s1 + a2
 59059: ac 6c d6 31 02           jump @13937 if a5 <u s1
      :                          @4512
 59064: c8 2c 0a                 a3 = a5 + t0
 59067: d8 ca 05                 s0 = a3 <u a5
 59070: d8 a3 0a                 a3 = t1 <u a3
 59073: d4 5a 0a                 a3 = a3 | s0
 59076: 52 0a c5 31 02           jump @13937 if a3 != 0
      :                          @4513
 59081: c9 c4 05                 s0 = t2 - a5
 59084: c8 35 05                 s0 = s0 + t1
 59087: 84 5a 07                 a3 = s0 & 0x7
 59090: c8 ac 0c                 a5 = a5 + a3
 59093: 01                       fallthrough
      :                          @4514
 59094: 82 b7                    a0 = u64 [a4]
 59096: ab 67 d6                 jump @4511 if a0 != s1
      :                          @4515
 59099: 7b bc                    u64 [a4] = a5
 59101: c9 a5 05                 s0 = s0 - a3
 59104: 64 57                    a0 = s0
 59106: 33 08                    a1 = 0
 59108: 50 20 26 03 29 25 02     ra = 806, jump @13689
      :                          @4516 [@dyn 403]
 59115: 82 16 08                 s1 = u64 [sp + 0x8]
 59118: 7b 16 88 00              u64 [sp + 0x88] = s1
 59122: 7b 15 90 00              u64 [sp + 0x90] = s0
 59126: 7b 16 98 00              u64 [sp + 0x98] = s1
 59130: 95 17 58                 a0 = sp + 0x58
 59133: 95 18 88 00              a1 = sp + 0x88
 59137: 64 69                    a2 = s1
 59139: 50 20 28 03 19 77 ff     ra = 808, jump @1783
      :                          @4517 [@dyn 404]
 59146: 82 1b 60                 a4 = u64 [sp + 0x60]
 59149: 82 17 68                 a0 = u64 [sp + 0x68]
 59152: 33 0a                    a3 = 0
 59154: 33 09                    a2 = 0
 59156: 95 bb 10                 a4 = a4 + 0x10
 59159: 33 0c 01                 a5 = 0x1
 59162: 01                       fallthrough
      :                          @4518
 59163: aa 97 7e 03              jump @4608 if a0 == a2
      :                          @4519
 59167: 82 b8                    a1 = u64 [a4]
 59169: ae 89 79 03              jump @4609 if a2 >=u a1
      :                          @4520
 59173: 82 b8 f8                 a1 = u64 [a4 + 0xfffffffffffffff8]
 59176: 95 99 01                 a2 = a2 + 0x1
 59179: c8 a8 08                 a1 = a1 + a3
 59182: 7b 8c                    u64 [a1] = a5
 59184: 95 bb 18                 a4 = a4 + 0x18
 59187: 95 aa 08                 a3 = a3 + 0x8
 59190: ab 96 e5                 jump @4518 if s1 != a2
      :                          @4521
 59193: 3a 07 b8 00 03           a0 = u64 [0x300b8]
 59198: ae 76 5e 03              jump @4611 if s1 >=u a0
      :                          @4522
 59202: 82 18 50                 a1 = u64 [sp + 0x50]
 59205: 82 80 08                 ra = u64 [a1 + 0x8]
 59208: d8 76 02                 t0 = s1 <u a0
 59211: 96 67 18                 a0 = s1 * 0x18
 59214: 97 22 03                 t0 = t0 << 0x3
 59217: 33 04 b0 02 03           t2 = 0x302b0
 59222: 33 03 00 00 10           t1 = 0x100000
 59227: c8 34 0b                 a4 = t2 + t1
 59230: 01                       fallthrough
      :                          @4523
 59231: 82 b8                    a1 = u64 [a4]
 59233: c8 78 05                 s0 = a1 + a0
 59236: ac 85 37 03              jump @4610 if s0 <u a1
      :                          @4524
 59240: c8 25 0a                 a3 = s0 + t0
 59243: d8 5a 0c                 a5 = a3 <u s0
 59246: d8 a3 0a                 a3 = t1 <u a3
 59249: d4 ca 0a                 a3 = a3 | a5
 59252: 52 0a 27 03              jump @4610 if a3 != 0
      :                          @4525
 59256: c9 54 0a                 a3 = t2 - s0
 59259: c8 3a 0a                 a3 = a3 + t1
 59262: 84 ac 07                 a5 = a3 & 0x7
 59265: c8 c5 05                 s0 = s0 + a5
 59268: 01                       fallthrough
      :                          @4526
 59269: 82 b6                    s1 = u64 [a4]
 59271: ab 86 d8                 jump @4523 if s1 != a1
      :                          @4527
 59274: 7b b5                    u64 [a4] = s0
 59276: 33 02                    t0 = 0
 59278: c9 ca 0a                 a3 = a3 - a5
 59281: 7b 1a 18                 u64 [sp + 0x18] = a3
 59284: 82 1a 08                 a3 = u64 [sp + 0x8]
 59287: 96 a7 18                 a0 = a3 * 0x18
 59290: c8 07 07                 a0 = a0 + ra
 59293: 7b 17 10                 u64 [sp + 0x10] = a0
 59296: 33 07 b0 02 03           a0 = 0x302b0
 59301: 7b 17 48                 u64 [sp + 0x48] = a0
 59304: 95 74 00 00 10           t2 = a0 + 0x100000
 59309: 7b 1a 38                 u64 [sp + 0x38] = a3
 59312: 7b 14 50                 u64 [sp + 0x50] = t2
 59315: 28 4c                    jump @4531
      :                          @4528
 59317: 33 09                    a2 = 0
 59319: 33 0a 08                 a3 = 0x8
 59322: 01                       fallthrough
      :                          @4529
 59323: 7b 1a 20                 u64 [sp + 0x20] = a3
 59326: 82 15 38                 s0 = u64 [sp + 0x38]
 59329: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 59332: 95 00 18                 ra = ra + 0x18
 59335: 7b 10 28                 u64 [sp + 0x28] = ra
 59338: 95 27 01                 a0 = t0 + 0x1
 59341: 7b 17 38                 u64 [sp + 0x38] = a0
 59344: 96 27 18                 a0 = t0 * 0x18
 59347: 82 16 18                 s1 = u64 [sp + 0x18]
 59350: c8 76 06                 s1 = s1 + a0
 59353: 64 a7                    a0 = a3
 59355: 50 20 2a 03 05 22 02     ra = 810, jump @13635
      :                          @4530 [@dyn 405]
 59362: 82 10 28                 ra = u64 [sp + 0x28]
 59365: 82 17 30                 a0 = u64 [sp + 0x30]
 59368: 7b 67                    u64 [s1] = a0
 59370: 82 18 20                 a1 = u64 [sp + 0x20]
 59373: 7b 68 08                 u64 [s1 + 0x8] = a1
 59376: 7b 67 10                 u64 [s1 + 0x10] = a0
 59379: 82 12 38                 t0 = u64 [sp + 0x38]
 59382: 82 14 50                 t2 = u64 [sp + 0x50]
 59385: 7b 15 38                 u64 [sp + 0x38] = s0
 59388: 51 05 65                 jump @4540 if s0 == 0
      :                          @4531
 59391: 82 17 10                 a0 = u64 [sp + 0x10]
 59394: aa 70 5f                 jump @4540 if ra == a0
      :                          @4532
 59397: 82 0b 10                 a4 = u64 [ra + 0x10]
 59400: 82 08 08                 a1 = u64 [ra + 0x8]
 59403: 7b 1b 30                 u64 [sp + 0x30] = a4
 59406: 51 0b a7                 jump @4528 if a4 == 0
      :                          @4533
 59409: 98 b9 3c                 a2 = a4 >> 0x3c
 59412: 52 09 88 02              jump @4611 if a2 != 0
      :                          @4534
 59416: 88 9a 01                 a3 = a2 <u 0x1
 59419: 97 b9 03                 a2 = a4 << 0x3
 59422: 97 a3 03                 t1 = a3 << 0x3
 59425: 01                       fallthrough
      :                          @4535
 59426: 82 4b                    a4 = u64 [t2]
 59428: c8 9b 0c                 a5 = a4 + a2
 59431: ac bc 62 30 02           jump @13937 if a5 <u a4
      :                          @4536
 59436: c8 3c 07                 a0 = a5 + t1
 59439: d8 c7 06                 s1 = a0 <u a5
 59442: 8e 77 00 00 10           a0 = a0 >u 0x100000
 59447: d4 67 07                 a0 = a0 | s1
 59450: 52 07 4f 30 02           jump @13937 if a0 != 0
      :                          @4537
 59455: 82 17 48                 a0 = u64 [sp + 0x48]
 59458: c9 c7 07                 a0 = a0 - a5
 59461: 95 77 00 00 10           a0 = a0 + 0x100000
 59466: 84 76 07                 s1 = a0 & 0x7
 59469: c8 6c 0c                 a5 = a5 + s1
 59472: 82 14 50                 t2 = u64 [sp + 0x50]
 59475: 01                       fallthrough
      :                          @4538
 59476: 82 45                    s0 = u64 [t2]
 59478: ab b5 cc                 jump @4535 if s0 != a4
      :                          @4539
 59481: 7b 4c                    u64 [t2] = a5
 59483: c9 67 0a                 a3 = a0 - s1
 59486: 28 5d ff                 jump @4529
      :                          @4540
 59489: 82 19 40                 a2 = u64 [sp + 0x40]
 59492: 82 1b 08                 a4 = u64 [sp + 0x8]
 59495: 28 11                    jump @4542
      :                          @4541
 59497: 49 11 58                 u64 [sp + 88] = 0
 59500: 49 11 18 08              u64 [sp + 24] = 0x8
 59504: 49 11 60 08              u64 [sp + 96] = 0x8
 59508: 49 11 68                 u64 [sp + 104] = 0
 59511: 01                       fallthrough
      :                          @4542
 59512: 7b 1b 70                 u64 [sp + 0x70] = a4
 59515: 82 17 18                 a0 = u64 [sp + 0x18]
 59518: 7b 17 78                 u64 [sp + 0x78] = a0
 59521: 7b 1b 80 00              u64 [sp + 0x80] = a4
 59525: 49 11 48 aa aa 00        u64 [sp + 72] = 0xaaaa
 59531: 33 05 b0 02 03           s0 = 0x302b0
 59536: 95 58 00 00 10           a1 = s0 + 0x100000
 59541: 7b 18 50                 u64 [sp + 0x50] = a1
 59544: 28 22                    jump @4544
      :                          @4543
 59546: 82 17 98 00              a0 = u64 [sp + 0x98]
 59550: 82 19 90 00              a2 = u64 [sp + 0x90]
 59554: 82 1a 88 00              a3 = u64 [sp + 0x88]
 59558: 7b 17 80 00              u64 [sp + 0x80] = a0
 59562: 7b 19 78                 u64 [sp + 0x78] = a2
 59565: 82 19 40                 a2 = u64 [sp + 0x40]
 59568: 8b 99 01                 i32 a2 = a2 >> 0x1
 59571: 7b 1a 70                 u64 [sp + 0x70] = a3
 59574: 51 09 36 01              jump @4588 if a2 == 0
      :                          @4544
 59578: 7b 19 40                 u64 [sp + 0x40] = a2
 59581: 84 97 01                 a0 = a2 & 0x1
 59584: 51 07 9e 00              jump @4566 if a0 == 0
      :                          @4545
 59588: 95 17 88 00              a0 = sp + 0x88
 59592: 95 18 58                 a1 = sp + 0x58
 59595: 95 19 70                 a2 = sp + 0x70
 59598: 50 20 2c 03 0b fc        ra = 812, jump @4479
      :                          @4546 [@dyn 406]
 59604: 82 13 68                 t1 = u64 [sp + 0x68]
 59607: 82 12 60                 t0 = u64 [sp + 0x60]
 59610: 82 16 50                 s1 = u64 [sp + 0x50]
 59613: 33 04 18                 t2 = 0x18
 59616: 33 00 00 00 02           ra = 0x20000
 59621: 51 03 3d                 jump @4558 if t1 == 0
      :                          @4547
 59624: 33 09                    a2 = 0
 59626: 28 08                    jump @4549
      :                          @4548
 59628: 95 99 01                 a2 = a2 + 0x1
 59631: aa 39 33                 jump @4558 if a2 == t1
      :                          @4549
 59634: ca 49 0a                 a3 = a2 * t2
 59637: c8 2a 0a                 a3 = a3 + t0
 59640: 82 ab                    a4 = u64 [a3]
 59642: 51 0b f2                 jump @4548 if a4 == 0
      :                          @4550
 59645: ac b0 ef                 jump @4548 if ra <u a4
      :                          @4551
 59648: 82 aa 08                 a3 = u64 [a3 + 0x8]
 59651: 97 bb 03                 a4 = a4 << 0x3
 59654: 01                       fallthrough
      :                          @4552
 59655: 82 67                    a0 = u64 [s1]
 59657: c9 76 05                 s0 = s1 - a0
 59660: ab a5 e0                 jump @4548 if s0 != a3
      :                          @4553
 59663: c9 b7 0c                 a5 = a0 - a4
 59666: 01                       fallthrough
      :                          @4554
 59667: 82 65                    s0 = u64 [s1]
 59669: ab 75 f2                 jump @4552 if s0 != a0
      :                          @4555
 59672: 7b 6c                    u64 [s1] = a5
 59674: 33 08                    a1 = 0
 59676: 01                       fallthrough
      :                          @4556
 59677: ab 75 ea                 jump @4552 if s0 != a0
      :                          @4557
 59680: 28 cc                    jump @4548
      :                          @4558
 59682: 82 18 58                 a1 = u64 [sp + 0x58]
 59685: 51 08 23                 jump @4565 if a1 == 0
      :                          @4559
 59688: 82 17 48                 a0 = u64 [sp + 0x48]
 59691: ac 87 1d                 jump @4565 if a0 <u a1
      :                          @4560
 59694: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 59697: 01                       fallthrough
      :                          @4561
 59698: 82 69                    a2 = u64 [s1]
 59700: c9 96 07                 a0 = s1 - a2
 59703: ab 27 11                 jump @4565 if a0 != t0
      :                          @4562
 59706: c8 89 07                 a0 = a2 + a1
 59709: 01                       fallthrough
      :                          @4563
 59710: 82 6a                    a3 = u64 [s1]
 59712: ab 9a f2                 jump @4561 if a3 != a2
      :                          @4564
 59715: 7b 67                    u64 [s1] = a0
 59717: 33 0b                    a4 = 0
 59719: 01                       fallthrough
      :                          @4565
 59720: 82 17 98 00              a0 = u64 [sp + 0x98]
 59724: 82 18 90 00              a1 = u64 [sp + 0x90]
 59728: 82 19 88 00              a2 = u64 [sp + 0x88]
 59732: 7b 17 68                 u64 [sp + 0x68] = a0
 59735: 7b 18 60                 u64 [sp + 0x60] = a1
 59738: 7b 19 58                 u64 [sp + 0x58] = a2
 59741: 01                       fallthrough
      :                          @4566
 59742: 95 17 88 00              a0 = sp + 0x88
 59746: 95 18 70                 a1 = sp + 0x70
 59749: 95 19 70                 a2 = sp + 0x70
 59752: 50 20 2e 03 71 fb        ra = 814, jump @4479
      :                          @4567 [@dyn 407]
 59758: 82 13 80 00              t1 = u64 [sp + 0x80]
 59762: 82 12 78                 t0 = u64 [sp + 0x78]
 59765: 82 18 50                 a1 = u64 [sp + 0x50]
 59768: 33 04 18                 t2 = 0x18
 59771: 33 00 00 00 02           ra = 0x20000
 59776: 51 03 3d                 jump @4579 if t1 == 0
      :                          @4568
 59779: 33 09                    a2 = 0
 59781: 28 08                    jump @4570
      :                          @4569
 59783: 95 99 01                 a2 = a2 + 0x1
 59786: aa 39 33                 jump @4579 if a2 == t1
      :                          @4570
 59789: ca 49 0a                 a3 = a2 * t2
 59792: c8 2a 0a                 a3 = a3 + t0
 59795: 82 ab                    a4 = u64 [a3]
 59797: 51 0b f2                 jump @4569 if a4 == 0
      :                          @4571
 59800: ac b0 ef                 jump @4569 if ra <u a4
      :                          @4572
 59803: 82 aa 08                 a3 = u64 [a3 + 0x8]
 59806: 97 bb 03                 a4 = a4 << 0x3
 59809: 01                       fallthrough
      :                          @4573
 59810: 82 85                    s0 = u64 [a1]
 59812: c9 58 06                 s1 = a1 - s0
 59815: ab a6 e0                 jump @4569 if s1 != a3
      :                          @4574
 59818: c9 b5 0c                 a5 = s0 - a4
 59821: 01                       fallthrough
      :                          @4575
 59822: 82 86                    s1 = u64 [a1]
 59824: ab 56 f2                 jump @4573 if s1 != s0
      :                          @4576
 59827: 7b 8c                    u64 [a1] = a5
 59829: 33 07                    a0 = 0
 59831: 01                       fallthrough
      :                          @4577
 59832: ab 56 ea                 jump @4573 if s1 != s0
      :                          @4578
 59835: 28 cc                    jump @4569
      :                          @4579
 59837: 82 19 70                 a2 = u64 [sp + 0x70]
 59840: 51 09 da fe              jump @4543 if a2 == 0
      :                          @4580
 59844: 82 17 48                 a0 = u64 [sp + 0x48]
 59847: ac 97 d3 fe              jump @4543 if a0 <u a2
      :                          @4581
 59851: 96 9c e8                 a5 = a2 * 0xffffffffffffffe8
 59854: 01                       fallthrough
      :                          @4582
 59855: 82 89                    a2 = u64 [a1]
 59857: c9 98 07                 a0 = a1 - a2
 59860: ab 27 c6 fe              jump @4543 if a0 != t0
      :                          @4583
 59864: c8 c9 07                 a0 = a2 + a5
 59867: 01                       fallthrough
      :                          @4584
 59868: 82 8a                    a3 = u64 [a1]
 59870: ab 9a f1                 jump @4582 if a3 != a2
      :                          @4585
 59873: 7b 87                    u64 [a1] = a0
 59875: 33 0b                    a4 = 0
 59877: 01                       fallthrough
      :                          @4586
 59878: ab 9a e9                 jump @4582 if a3 != a2
      :                          @4587
 59881: 28 b1 fe                 jump @4543
      :                          @4588
 59884: 82 10 80 00              ra = u64 [sp + 0x80]
 59888: 82 17 68                 a0 = u64 [sp + 0x68]
 59891: 82 19 60                 a2 = u64 [sp + 0x60]
 59894: 82 1a 58                 a3 = u64 [sp + 0x58]
 59897: 82 14 78                 t2 = u64 [sp + 0x78]
 59900: 82 18                    a1 = u64 [sp]
 59902: 7b 87 10                 u64 [a1 + 0x10] = a0
 59905: 7b 89 08                 u64 [a1 + 0x8] = a2
 59908: 7b 8a                    u64 [a1] = a3
 59910: 51 00 4f                 jump @4600 if ra == 0
      :                          @4589
 59913: 33 09                    a2 = 0
 59915: 33 03 18                 t1 = 0x18
 59918: 33 0b b0 02 03           a4 = 0x302b0
 59923: 95 ba 00 00 10           a3 = a4 + 0x100000
 59928: 33 02 00 00 02           t0 = 0x20000
 59933: 28 08                    jump @4591
      :                          @4590
 59935: 95 99 01                 a2 = a2 + 0x1
 59938: aa 09 33                 jump @4600 if a2 == ra
      :                          @4591
 59941: ca 39 07                 a0 = a2 * t1
 59944: c8 47 07                 a0 = a0 + t2
 59947: 82 75                    s0 = u64 [a0]
 59949: 51 05 f2                 jump @4590 if s0 == 0
      :                          @4592
 59952: ac 52 ef                 jump @4590 if t0 <u s0
      :                          @4593
 59955: 82 76 08                 s1 = u64 [a0 + 0x8]
 59958: 97 55 03                 s0 = s0 << 0x3
 59961: 01                       fallthrough
      :                          @4594
 59962: 82 a7                    a0 = u64 [a3]
 59964: c9 7a 0b                 a4 = a3 - a0
 59967: ab 6b e0                 jump @4590 if a4 != s1
      :                          @4595
 59970: c9 57 0b                 a4 = a0 - s0
 59973: 01                       fallthrough
      :                          @4596
 59974: 82 ac                    a5 = u64 [a3]
 59976: ab 7c f2                 jump @4594 if a5 != a0
      :                          @4597
 59979: 7b ab                    u64 [a3] = a4
 59981: 33 08                    a1 = 0
 59983: 01                       fallthrough
      :                          @4598
 59984: ab 7c ea                 jump @4594 if a5 != a0
      :                          @4599
 59987: 28 cc                    jump @4590
      :                          @4600
 59989: 82 18 70                 a1 = u64 [sp + 0x70]
 59992: 51 08 2f                 jump @4607 if a1 == 0
      :                          @4601
 59995: 33 07 aa aa 00           a0 = 0xaaaa
 60000: ac 87 27                 jump @4607 if a0 <u a1
      :                          @4602
 60003: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 60006: 33 09 b0 02 03           a2 = 0x302b0
 60011: 95 99 00 00 10           a2 = a2 + 0x100000
 60016: 01                       fallthrough
      :                          @4603
 60017: 82 97                    a0 = u64 [a2]
 60019: c9 79 0a                 a3 = a2 - a0
 60022: ab 4a 11                 jump @4607 if a3 != t2
      :                          @4604
 60025: c8 87 0a                 a3 = a0 + a1
 60028: 01                       fallthrough
      :                          @4605
 60029: 82 9b                    a4 = u64 [a2]
 60031: ab 7b f2                 jump @4603 if a4 != a0
      :                          @4606
 60034: 7b 9a                    u64 [a2] = a3
 60036: 33 0c                    a5 = 0
 60038: 01                       fallthrough
      :                          @4607
 60039: 82 10 b0 00              ra = u64 [sp + 0xb0]
 60043: 82 15 a8 00              s0 = u64 [sp + 0xa8]
 60047: 82 16 a0 00              s1 = u64 [sp + 0xa0]
 60051: 95 11 b8 00              sp = sp + 0xb8
 60055: 32 00                    ret
      :                          @4608
 60057: 00                       trap
      :                          @4609
 60058: 00                       trap
      :                          @4610
 60059: 00                       trap
      :                          @4611
 60060: 00                       trap
      :                          @4612
 60061: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 60064: 7b 10 30                 u64 [sp + 0x30] = ra
 60067: 7b 15 28                 u64 [sp + 0x28] = s0
 60070: 7b 16 20                 u64 [sp + 0x20] = s1
 60073: 82 75 10                 s0 = u64 [a0 + 0x10]
 60076: 84 58 3f                 a1 = s0 & 0x3f
 60079: 56 18 3b 32 01           jump @4640 if a1 >u 59
      :                          @4613
 60084: 7b 17 10                 u64 [sp + 0x10] = a0
 60087: 9b 57 01                 a0 = 0x1 << s0
 60090: 7b 17 18                 u64 [sp + 0x18] = a0
 60093: 7b 18 08                 u64 [sp + 0x8] = a1
 60096: 88 82 3c                 t0 = a1 <u 0x3c
 60099: 9b 59 08                 a2 = 0x8 << s0
 60102: 97 22 03                 t0 = t0 << 0x3
 60105: 33 04 b0 02 03           t2 = 0x302b0
 60110: 33 03 00 00 10           t1 = 0x100000
 60115: c8 34 00                 ra = t2 + t1
 60118: 01                       fallthrough
      :                          @4614
 60119: 82 0b                    a4 = u64 [ra]
 60121: c8 9b 0c                 a5 = a4 + a2
 60124: ac bc 04 01              jump @4639 if a5 <u a4
      :                          @4615
 60128: c8 2c 07                 a0 = a5 + t0
 60131: d8 c7 06                 s1 = a0 <u a5
 60134: d8 73 07                 a0 = t1 <u a0
 60137: d4 67 07                 a0 = a0 | s1
 60140: 52 07 f4 00              jump @4639 if a0 != 0
      :                          @4616
 60144: c9 c4 06                 s1 = t2 - a5
 60147: c8 36 0a                 a3 = s1 + t1
 60150: 84 a6 07                 s1 = a3 & 0x7
 60153: c8 6c 0c                 a5 = a5 + s1
 60156: 01                       fallthrough
      :                          @4617
 60157: 82 07                    a0 = u64 [ra]
 60159: ab b7 d8                 jump @4614 if a0 != a4
      :                          @4618
 60162: 7b 0c                    u64 [ra] = a5
 60164: c9 6a 06                 s1 = a3 - s1
 60167: 64 67                    a0 = s1
 60169: 33 08                    a1 = 0
 60171: 7b 19                    u64 [sp] = a2
 60173: 50 20 30 03 00 21 02     ra = 816, jump @13689
      :                          @4619 [@dyn 408]
 60180: 33 09                    a2 = 0
 60182: 82 17 10                 a0 = u64 [sp + 0x10]
 60185: 82 73 08                 t1 = u64 [a0 + 0x8]
 60188: 33 04 01                 t2 = 0x1
 60191: 64 62                    t0 = s1
 60193: 7b 64                    u64 [s1] = t2
 60195: 28 0b                    jump @4621
      :                          @4620
 60197: 95 99 01                 a2 = a2 + 0x1
 60200: 82 17 18                 a0 = u64 [sp + 0x18]
 60203: aa 79 6d                 jump @4630 if a2 == a0
      :                          @4621
 60206: 66 97                    a0 = cpop a2
 60208: 84 78 01                 a1 = a0 & 0x1
 60211: 88 88 01                 a1 = a1 <u 0x1
 60214: 8e 77                    a0 = a0 >u 0
 60216: d2 87 07                 a0 = a0 & a1
 60219: 51 07 ea                 jump @4620 if a0 == 0
      :                          @4622
 60222: 6a 98                    a1 = ctz a2
 60224: 95 87 01                 a0 = a1 + 0x1
 60227: ae 57 e2                 jump @4620 if a0 >=u s0
      :                          @4623
 60230: cf 84 0a                 a3 = t2 << a1
 60233: d3 9a 00                 ra = a3 ^ a2
 60236: 96 88 18                 a1 = a1 * 0x18
 60239: c8 38 08                 a1 = a1 + t1
 60242: 95 8a 10                 a3 = a1 + 0x10
 60245: 95 86 08                 s1 = a1 + 0x8
 60248: 97 9b 03                 a4 = a2 << 0x3
 60251: c8 2b 0b                 a4 = a4 + t0
 60254: 28 08                    jump @4625
      :                          @4624
 60256: 95 77 01                 a0 = a0 + 0x1
 60259: aa 75 c2                 jump @4620 if s0 == a0
      :                          @4625
 60262: cf 74 0c                 a5 = t2 << a0
 60265: d2 9c 08                 a1 = a5 & a2
 60268: 51 08 f4                 jump @4624 if a1 == 0
      :                          @4626
 60271: 82 a8                    a1 = u64 [a3]
 60273: ae 87 6d                 jump @4637 if a0 >=u a1
      :                          @4627
 60276: 82 68                    a1 = u64 [s1]
 60278: c8 78 08                 a1 = a1 + a0
 60281: 7c 88                    a1 = u8 [a1]
 60283: 51 08 e5                 jump @4624 if a1 == 0
      :                          @4628
 60286: d3 c0 08                 a1 = ra ^ a5
 60289: 82 1c 18                 a5 = u64 [sp + 0x18]
 60292: ae c8 5b                 jump @4638 if a1 >=u a5
      :                          @4629
 60295: 82 bc                    a5 = u64 [a4]
 60297: 97 88 03                 a1 = a1 << 0x3
 60300: c8 28 08                 a1 = a1 + t0
 60303: 82 88                    a1 = u64 [a1]
 60305: c8 c8 08                 a1 = a1 + a5
 60308: 7b b8                    u64 [a4] = a1
 60310: 28 ca                    jump @4624
      :                          @4630
 60312: 82 17 18                 a0 = u64 [sp + 0x18]
 60315: 97 77 03                 a0 = a0 << 0x3
 60318: c8 27 07                 a0 = a0 + t0
 60321: 82 77 f8                 a0 = u64 [a0 + 0xfffffffffffffff8]
 60324: 33 08 11                 a1 = 0x11
 60327: 82 16                    s1 = u64 [sp]
 60329: 82 19 08                 a2 = u64 [sp + 0x8]
 60332: ac 98 24                 jump @4636 if a1 <u a2
      :                          @4631
 60335: 33 08 b0 02 03           a1 = 0x302b0
 60340: 95 88 00 00 10           a1 = a1 + 0x100000
 60345: 01                       fallthrough
      :                          @4632
 60346: 82 89                    a2 = u64 [a1]
 60348: c9 98 0a                 a3 = a1 - a2
 60351: ab 2a 11                 jump @4636 if a3 != t0
      :                          @4633
 60354: c9 69 0a                 a3 = a2 - s1
 60357: 01                       fallthrough
      :                          @4634
 60358: 82 8b                    a4 = u64 [a1]
 60360: ab 9b f2                 jump @4632 if a4 != a2
      :                          @4635
 60363: 7b 8a                    u64 [a1] = a3
 60365: 33 0c                    a5 = 0
 60367: 01                       fallthrough
      :                          @4636
 60368: 82 10 30                 ra = u64 [sp + 0x30]
 60371: 82 15 28                 s0 = u64 [sp + 0x28]
 60374: 82 16 20                 s1 = u64 [sp + 0x20]
 60377: 95 11 38                 sp = sp + 0x38
 60380: 32 00                    ret
      :                          @4637
 60382: 00                       trap
      :                          @4638
 60383: 00                       trap
      :                          @4639
 60384: 00                       trap
      :                          @4640
 60385: 00                       trap
      :                          @4641
 60386: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 60389: 7b 10 50                 u64 [sp + 0x50] = ra
 60392: 7b 15 48                 u64 [sp + 0x48] = s0
 60395: 7b 16 40                 u64 [sp + 0x40] = s1
 60398: 82 79 10                 a2 = u64 [a0 + 0x10]
 60401: 49 11 20                 u64 [sp + 32] = 0
 60404: 51 09 be 00              jump @4658 if a2 == 0
      :                          @4642
 60408: 98 9a 3d                 a3 = a2 >> 0x3d
 60411: 52 0a ca 00              jump @4661 if a3 != 0
      :                          @4643
 60415: 7b 18 08                 u64 [sp + 0x8] = a1
 60418: 7b 17 10                 u64 [sp + 0x10] = a0
 60421: 88 a7 01                 a0 = a3 <u 0x1
 60424: 7b 19 18                 u64 [sp + 0x18] = a2
 60427: 97 99 02                 a2 = a2 << 0x2
 60430: 97 72 02                 t0 = a0 << 0x2
 60433: 33 04 b0 02 03           t2 = 0x302b0
 60438: 33 03 00 00 10           t1 = 0x100000
 60443: c8 34 0a                 a3 = t2 + t1
 60446: 01                       fallthrough
      :                          @4644
 60447: 82 ab                    a4 = u64 [a3]
 60449: c8 9b 0c                 a5 = a4 + a2
 60452: ac bc a0 00              jump @4660 if a5 <u a4
      :                          @4645
 60456: c8 2c 07                 a0 = a5 + t0
 60459: d8 c7 06                 s1 = a0 <u a5
 60462: d8 73 07                 a0 = t1 <u a0
 60465: d4 67 07                 a0 = a0 | s1
 60468: 52 07 90 00              jump @4660 if a0 != 0
      :                          @4646
 60472: c9 c4 06                 s1 = t2 - a5
 60475: c8 36 08                 a1 = s1 + t1
 60478: 84 86 03                 s1 = a1 & 0x3
 60481: c8 6c 0c                 a5 = a5 + s1
 60484: 01                       fallthrough
      :                          @4647
 60485: 82 a7                    a0 = u64 [a3]
 60487: ab b7 d8                 jump @4644 if a0 != a4
      :                          @4648
 60490: 7b ac                    u64 [a3] = a5
 60492: 33 05                    s0 = 0
 60494: c9 68 06                 s1 = a1 - s1
 60497: 64 67                    a0 = s1
 60499: 33 08                    a1 = 0
 60501: 7b 19                    u64 [sp] = a2
 60503: 50 20 32 03 b6 1f 02     ra = 818, jump @13689
      :                          @4649 [@dyn 409]
 60510: 82 15 18                 s0 = u64 [sp + 0x18]
 60513: 7b 15 28                 u64 [sp + 0x28] = s0
 60516: 7b 16 30                 u64 [sp + 0x30] = s1
 60519: 7b 15 38                 u64 [sp + 0x38] = s0
 60522: 95 1b 28                 a4 = sp + 0x28
 60525: 95 1c 20                 a5 = sp + 0x20
 60528: 33 07                    a0 = 0
 60530: 64 58                    a1 = s0
 60532: 82 19 08                 a2 = u64 [sp + 0x8]
 60535: 82 1a 10                 a3 = u64 [sp + 0x10]
 60538: 50 20 34 03 4c           ra = 820, jump @4662
      :                          @4650 [@dyn 410]
 60543: 82 17 20                 a0 = u64 [sp + 0x20]
 60546: 33 08 00 00 04           a1 = 0x40000
 60551: ac 58 2f                 jump @4659 if a1 <u s0
      :                          @4651
 60554: 33 08 b0 02 03           a1 = 0x302b0
 60559: 95 88 00 00 10           a1 = a1 + 0x100000
 60564: 82 15                    s0 = u64 [sp]
 60566: 01                       fallthrough
      :                          @4652
 60567: 82 89                    a2 = u64 [a1]
 60569: c9 98 0a                 a3 = a1 - a2
 60572: ab 6a 1a                 jump @4659 if a3 != s1
      :                          @4653
 60575: c9 59 0a                 a3 = a2 - s0
 60578: 01                       fallthrough
      :                          @4654
 60579: 82 8b                    a4 = u64 [a1]
 60581: ab 9b f2                 jump @4652 if a4 != a2
      :                          @4655
 60584: 7b 8a                    u64 [a1] = a3
 60586: 33 0c                    a5 = 0
 60588: 01                       fallthrough
      :                          @4656
 60589: ab 9b ea                 jump @4652 if a4 != a2
      :                          @4657
 60592: 28 06                    jump @4659
      :                          @4658
 60594: 33 07 01                 a0 = 0x1
 60597: 01                       fallthrough
      :                          @4659
 60598: 82 10 50                 ra = u64 [sp + 0x50]
 60601: 82 15 48                 s0 = u64 [sp + 0x48]
 60604: 82 16 40                 s1 = u64 [sp + 0x40]
 60607: 95 11 58                 sp = sp + 0x58
 60610: 32 00                    ret
      :                          @4660
 60612: 00                       trap
      :                          @4661
 60613: 00                       trap
      :                          @4662
 60614: 95 11 88                 sp = sp + 0xffffffffffffff88
 60617: 7b 10 70                 u64 [sp + 0x70] = ra
 60620: 7b 15 68                 u64 [sp + 0x68] = s0
 60623: 7b 16 60                 u64 [sp + 0x60] = s1
 60626: 7b 19 58                 u64 [sp + 0x58] = a2
 60629: 7b 18 50                 u64 [sp + 0x50] = a1
 60632: ab 87 0d                 jump @4664 if a0 != a1
      :                          @4663
 60635: 82 c7                    a0 = u64 [a5]
 60637: 95 77 01                 a0 = a0 + 0x1
 60640: 7b c7                    u64 [a5] = a0
 60642: 28 e4 00                 jump @4682
      :                          @4664
 60645: 64 74                    t2 = a0
 60647: 82 b8 08                 a1 = u64 [a4 + 0x8]
 60650: 82 b3 10                 t1 = u64 [a4 + 0x10]
 60653: 97 77 02                 a0 = a0 << 0x2
 60656: 7b 18 18                 u64 [sp + 0x18] = a1
 60659: c8 87 07                 a0 = a0 + a1
 60662: 7b 17 30                 u64 [sp + 0x30] = a0
 60665: 95 47 01                 a0 = t2 + 0x1
 60668: 7b 17 28                 u64 [sp + 0x28] = a0
 60671: 7b 1c 48                 u64 [sp + 0x48] = a5
 60674: 7b 1b 40                 u64 [sp + 0x40] = a4
 60677: 7b 1a 38                 u64 [sp + 0x38] = a3
 60680: 51 04 90 00              jump @4678 if t2 == 0
      :                          @4665
 60684: 82 a8 10                 a1 = u64 [a3 + 0x10]
 60687: ae 84 c5 00              jump @4683 if t2 >=u a1
      :                          @4666
 60691: 82 a7 08                 a0 = u64 [a3 + 0x8]
 60694: 96 48 18                 a1 = t2 * 0x18
 60697: c8 87 07                 a0 = a0 + a1
 60700: 95 78 10                 a1 = a0 + 0x10
 60703: 7b 18 10                 u64 [sp + 0x10] = a1
 60706: 95 75 08                 s0 = a0 + 0x8
 60709: ae 34 b0 00              jump @4684 if t2 >=u t1
      :                          @4667
 60713: 33 02                    t0 = 0
 60715: 81 17 58                 a0 = i32 [sp + 0x58]
 60718: 7b 17 08                 u64 [sp + 0x8] = a0
 60721: 7b 13                    u64 [sp] = t1
 60723: 28 32                    jump @4671
      :                          @4668
 60725: 82 17 30                 a0 = u64 [sp + 0x30]
 60728: 7a 79                    u32 [a0] = a2
 60730: 82 17 28                 a0 = u64 [sp + 0x28]
 60733: 82 18 50                 a1 = u64 [sp + 0x50]
 60736: 82 19 58                 a2 = u64 [sp + 0x58]
 60739: 82 1c 48                 a5 = u64 [sp + 0x48]
 60742: 64 46                    s1 = t2
 60744: 7b 12 20                 u64 [sp + 0x20] = t0
 60747: 50 20 36 03 7b ff        ra = 822, jump @4662
      :                          @4669 [@dyn 411]
 60753: 82 12 20                 t0 = u64 [sp + 0x20]
 60756: 64 64                    t2 = s1
 60758: 82 1a 38                 a3 = u64 [sp + 0x38]
 60761: 82 1b 40                 a4 = u64 [sp + 0x40]
 60764: 82 13                    t1 = u64 [sp]
 60766: 01                       fallthrough
      :                          @4670
 60767: 82 17 08                 a0 = u64 [sp + 0x8]
 60770: aa 72 64                 jump @4682 if t0 == a0
      :                          @4671
 60773: 82 17 10                 a0 = u64 [sp + 0x10]
 60776: 82 77                    a0 = u64 [a0]
 60778: 33 08                    a1 = 0
 60780: 64 29                    a2 = t0
 60782: 83 22 01                 i32 t0 = t0 + 0x1
 60785: 82 16 18                 s1 = u64 [sp + 0x18]
 60788: 28 0b                    jump @4673
      :                          @4672
 60790: 95 88 01                 a1 = a1 + 0x1
 60793: 95 66 04                 s1 = s1 + 0x4
 60796: aa 84 b9                 jump @4668 if t2 == a1
      :                          @4673
 60799: aa 87 90 00              jump @4693 if a0 == a1
      :                          @4674
 60803: 82 5c                    a5 = u64 [s0]
 60805: c8 8c 0c                 a5 = a5 + a1
 60808: 7c cc                    a5 = u8 [a5]
 60810: 51 0c ec                 jump @4672 if a5 == 0
      :                          @4675
 60813: ae 38 83 00              jump @4694 if a1 >=u t1
      :                          @4676
 60817: 81 6c                    a5 = i32 [s1]
 60819: ab 9c e3                 jump @4672 if a5 != a2
      :                          @4677
 60822: 28 c9                    jump @4670
      :                          @4678
 60824: 33 07                    a0 = 0
 60826: ae 34 77                 jump @4695 if t2 >=u t1
      :                          @4679
 60829: 81 15 58                 s0 = i32 [sp + 0x58]
 60832: 01                       fallthrough
      :                          @4680
 60833: 83 76 01                 i32 s1 = a0 + 0x1
 60836: 82 18 30                 a1 = u64 [sp + 0x30]
 60839: 7a 87                    u32 [a1] = a0
 60841: 82 17 28                 a0 = u64 [sp + 0x28]
 60844: 82 18 50                 a1 = u64 [sp + 0x50]
 60847: 82 19 58                 a2 = u64 [sp + 0x58]
 60850: 82 1c 48                 a5 = u64 [sp + 0x48]
 60853: 50 20 38 03 11 ff        ra = 824, jump @4662
      :                          @4681 [@dyn 412]
 60859: 82 1a 38                 a3 = u64 [sp + 0x38]
 60862: 82 1b 40                 a4 = u64 [sp + 0x40]
 60865: 64 67                    a0 = s1
 60867: ab 65 de                 jump @4680 if s0 != s1
      :                          @4682
 60870: 82 10 70                 ra = u64 [sp + 0x70]
 60873: 82 15 68                 s0 = u64 [sp + 0x68]
 60876: 82 16 60                 s1 = u64 [sp + 0x60]
 60879: 95 11 78                 sp = sp + 0x78
 60882: 32 00                    ret
      :                          @4683
 60884: 00                       trap
      :                          @4684
 60885: 82 17 10                 a0 = u64 [sp + 0x10]
 60888: 82 77                    a0 = u64 [a0]
 60890: 33 0a                    a3 = 0
 60892: 81 12 58                 t0 = i32 [sp + 0x58]
 60895: 01                       fallthrough
      :                          @4685
 60896: 33 08                    a1 = 0
 60898: 83 ab 01                 i32 a4 = a3 + 0x1
 60901: 82 1c 18                 a5 = u64 [sp + 0x18]
 60904: 28 0b                    jump @4687
      :                          @4686
 60906: 95 88 01                 a1 = a1 + 0x1
 60909: 95 cc 04                 a5 = a5 + 0x4
 60912: aa 84 22                 jump @4696 if t2 == a1
      :                          @4687
 60915: aa 87 1c                 jump @4693 if a0 == a1
      :                          @4688
 60918: 82 59                    a2 = u64 [s0]
 60920: c8 89 09                 a2 = a2 + a1
 60923: 7c 99                    a2 = u8 [a2]
 60925: 51 09 ed                 jump @4686 if a2 == 0
      :                          @4689
 60928: ae 38 10                 jump @4694 if a1 >=u t1
      :                          @4690
 60931: 81 c9                    a2 = i32 [a5]
 60933: ab a9 e5                 jump @4686 if a2 != a3
      :                          @4691
 60936: 64 ba                    a3 = a4
 60938: ab 2b d6                 jump @4685 if a4 != t0
      :                          @4692
 60941: 28 b9                    jump @4682
      :                          @4693
 60943: 00                       trap
      :                          @4694
 60944: 00                       trap
      :                          @4695
 60945: 00                       trap
      :                          @4696
 60946: 00                       trap
      :                          @4697
 60947: 95 11 38 ff              sp = sp + 0xffffffffffffff38
 60951: 7b 10 c0 00              u64 [sp + 0xc0] = ra
 60955: 7b 15 b8 00              u64 [sp + 0xb8] = s0
 60959: 7b 16 b0 00              u64 [sp + 0xb0] = s1
 60963: 82 76 10                 s1 = u64 [a0 + 0x10]
 60966: 51 06 95 05              jump @4849 if s1 == 0
      :                          @4698
 60970: 98 68 3c                 a1 = s1 >> 0x3c
 60973: 52 08 8e 05              jump @4849 if a1 != 0
      :                          @4699
 60977: 7b 17 60                 u64 [sp + 0x60] = a0
 60980: 88 82 01                 t0 = a1 <u 0x1
 60983: 97 69 03                 a2 = s1 << 0x3
 60986: 97 22 03                 t0 = t0 << 0x3
 60989: 33 04 b0 02 03           t2 = 0x302b0
 60994: 33 03 00 00 10           t1 = 0x100000
 60999: c8 34 00                 ra = t2 + t1
 61002: 01                       fallthrough
      :                          @4700
 61003: 82 05                    s0 = u64 [ra]
 61005: c8 95 0c                 a5 = s0 + a2
 61008: ac 5c 6a 05              jump @4848 if a5 <u s0
      :                          @4701
 61012: c8 2c 07                 a0 = a5 + t0
 61015: d8 c7 0a                 a3 = a0 <u a5
 61018: d8 73 07                 a0 = t1 <u a0
 61021: d4 a7 07                 a0 = a0 | a3
 61024: 52 07 5a 05              jump @4848 if a0 != 0
      :                          @4702
 61028: c9 c4 07                 a0 = t2 - a5
 61031: c8 37 07                 a0 = a0 + t1
 61034: 84 7a 07                 a3 = a0 & 0x7
 61037: c8 ac 0c                 a5 = a5 + a3
 61040: 01                       fallthrough
      :                          @4703
 61041: 82 08                    a1 = u64 [ra]
 61043: ab 58 d8                 jump @4700 if a1 != s0
      :                          @4704
 61046: 7b 0c                    u64 [ra] = a5
 61048: 33 0b                    a4 = 0
 61050: c9 a7 05                 s0 = a0 - a3
 61053: 64 57                    a0 = s0
 61055: 33 08                    a1 = 0
 61057: 50 20 3a 03 8c 1d 02     ra = 826, jump @13689
      :                          @4705 [@dyn 413]
 61064: 7b 16 98 00              u64 [sp + 0x98] = s1
 61068: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 61072: 7b 16 a8 00              u64 [sp + 0xa8] = s1
 61076: 95 17 68                 a0 = sp + 0x68
 61079: 95 18 98 00              a1 = sp + 0x98
 61083: 64 69                    a2 = s1
 61085: 50 20 3c 03 7f 6f ff     ra = 828, jump @1783
      :                          @4706 [@dyn 414]
 61092: 82 17 60                 a0 = u64 [sp + 0x60]
 61095: 82 73 08                 t1 = u64 [a0 + 0x8]
 61098: 82 17 78                 a0 = u64 [sp + 0x78]
 61101: 7b 17 48                 u64 [sp + 0x48] = a0
 61104: 82 17 70                 a0 = u64 [sp + 0x70]
 61107: 7b 17 30                 u64 [sp + 0x30] = a0
 61110: 33 07                    a0 = 0
 61112: 01                       fallthrough
      :                          @4707
 61113: 96 78 18                 a1 = a0 * 0x18
 61116: c8 83 0a                 a3 = t1 + a1
 61119: 95 ab 10                 a4 = a3 + 0x10
 61122: 95 aa 08                 a3 = a3 + 0x8
 61125: 82 19 30                 a2 = u64 [sp + 0x30]
 61128: c8 98 08                 a1 = a1 + a2
 61131: 95 80 10                 ra = a1 + 0x10
 61134: 95 84 08                 t2 = a1 + 0x8
 61137: 82 18 48                 a1 = u64 [sp + 0x48]
 61140: ae 87 39                 jump @4715 if a0 >=u a1
      :                          @4708
 61143: 33 0c                    a5 = 0
 61145: 33 09                    a2 = 0
 61147: 28 08                    jump @4710
      :                          @4709
 61149: 95 99 01                 a2 = a2 + 0x1
 61152: aa 69 52                 jump @4721 if a2 == s1
      :                          @4710
 61155: aa 79 fa                 jump @4709 if a2 == a0
      :                          @4711
 61158: 82 b8                    a1 = u64 [a4]
 61160: ae 89 cd 00              jump @4732 if a2 >=u a1
      :                          @4712
 61164: 82 a8                    a1 = u64 [a3]
 61166: 97 92 03                 t0 = a2 << 0x3
 61169: c8 28 08                 a1 = a1 + t0
 61172: 82 85                    s0 = u64 [a1]
 61174: 51 05 e7                 jump @4709 if s0 == 0
      :                          @4713
 61177: 82 08                    a1 = u64 [ra]
 61179: ae 89 ba 00              jump @4732 if a2 >=u a1
      :                          @4714
 61183: 82 48                    a1 = u64 [t2]
 61185: 95 cc 01                 a5 = a5 + 0x1
 61188: c8 28 08                 a1 = a1 + t0
 61191: 9a 55                    s0 = -s0
 61193: 7b 85                    u64 [a1] = s0
 61195: 28 d2                    jump @4709
      :                          @4715
 61197: 33 09                    a2 = 0
 61199: 28 0a                    jump @4717
      :                          @4716
 61201: 95 99 01                 a2 = a2 + 0x1
 61204: 33 0c                    a5 = 0
 61206: aa 69 1c                 jump @4721 if a2 == s1
      :                          @4717
 61209: aa 79 f8                 jump @4716 if a2 == a0
      :                          @4718
 61212: 82 b8                    a1 = u64 [a4]
 61214: ae 89 97 00              jump @4732 if a2 >=u a1
      :                          @4719
 61218: 82 a8                    a1 = u64 [a3]
 61220: 97 9c 03                 a5 = a2 << 0x3
 61223: c8 c8 08                 a1 = a1 + a5
 61226: 82 88                    a1 = u64 [a1]
 61228: 51 08 e5                 jump @4716 if a1 == 0
      :                          @4720
 61231: 28 8f 04                 jump @4852
      :                          @4721
 61234: 82 18 48                 a1 = u64 [sp + 0x48]
 61237: aa 87 49 04              jump @4833 if a0 == a1
      :                          @4722
 61241: 82 08                    a1 = u64 [ra]
 61243: ae 87 44 04              jump @4834 if a0 >=u a1
      :                          @4723
 61247: 82 48                    a1 = u64 [t2]
 61249: 95 79 01                 a2 = a0 + 0x1
 61252: 97 77 03                 a0 = a0 << 0x3
 61255: c8 87 07                 a0 = a0 + a1
 61258: 7b 7c                    u64 [a0] = a5
 61260: 64 97                    a0 = a2
 61262: ab 69 6b ff              jump @4707 if a2 != s1
      :                          @4724
 61266: 95 65 ff                 s0 = s1 + 0xffffffffffffffff
 61269: 7b 15 60                 u64 [sp + 0x60] = s0
 61272: 51 05 5e                 jump @4733 if s0 == 0
      :                          @4725
 61275: 97 59 03                 a2 = s0 << 0x3
 61278: 33 07 b0 02 03           a0 = 0x302b0
 61283: 33 03 b0 02 03           t1 = 0x302b0
 61288: 33 02 00 00 10           t0 = 0x100000
 61293: c8 23 0a                 a3 = t1 + t0
 61296: 01                       fallthrough
      :                          @4726
 61297: 82 ab                    a4 = u64 [a3]
 61299: c8 9b 0c                 a5 = a4 + a2
 61302: ac bc 44 04              jump @4848 if a5 <u a4
      :                          @4727
 61306: 95 c8 08                 a1 = a5 + 0x8
 61309: d8 c8 06                 s1 = a1 <u a5
 61312: d8 82 08                 a1 = t0 <u a1
 61315: d4 68 08                 a1 = a1 | s1
 61318: 52 08 34 04              jump @4848 if a1 != 0
      :                          @4728
 61322: c9 c3 06                 s1 = t1 - a5
 61325: c8 26 06                 s1 = s1 + t0
 61328: 84 68 07                 a1 = s1 & 0x7
 61331: c8 8c 0c                 a5 = a5 + a1
 61334: 01                       fallthrough
      :                          @4729
 61335: 82 a5                    s0 = u64 [a3]
 61337: ab b5 d8                 jump @4726 if s0 != a4
      :                          @4730
 61340: 7b ac                    u64 [a3] = a5
 61342: c9 86 06                 s1 = s1 - a1
 61345: 64 67                    a0 = s1
 61347: 33 08                    a1 = 0
 61349: 50 20 3e 03 68 1c 02     ra = 830, jump @13689
      :                          @4731 [@dyn 415]
 61356: 64 67                    a0 = s1
 61358: 82 15 60                 s0 = u64 [sp + 0x60]
 61361: 64 56                    s1 = s0
 61363: 28 09                    jump @4734
      :                          @4732
 61365: 00                       trap
      :                          @4733
 61366: 33 06                    s1 = 0
 61368: 33 07 08                 a0 = 0x8
 61371: 01                       fallthrough
      :                          @4734
 61372: 7b 16 98 00              u64 [sp + 0x98] = s1
 61376: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 61380: 7b 16 a8 00              u64 [sp + 0xa8] = s1
 61384: 95 17 80 00              a0 = sp + 0x80
 61388: 95 18 98 00              a1 = sp + 0x98
 61392: 64 69                    a2 = s1
 61394: 50 20 40 03 4a 6e ff     ra = 832, jump @1783
      :                          @4735 [@dyn 416]
 61401: 51 05 70                 jump @4745 if s0 == 0
      :                          @4736
 61404: 82 10 90 00              ra = u64 [sp + 0x90]
 61408: 82 17 88 00              a0 = u64 [sp + 0x88]
 61412: 7b 17 28                 u64 [sp + 0x28] = a0
 61415: 33 07                    a0 = 0
 61417: 01                       fallthrough
      :                          @4737
 61418: 82 18 48                 a1 = u64 [sp + 0x48]
 61421: aa 87 91 03              jump @4833 if a0 == a1
      :                          @4738
 61425: 96 7a 18                 a3 = a0 * 0x18
 61428: 82 15 30                 s0 = u64 [sp + 0x30]
 61431: c8 a5 05                 s0 = s0 + a3
 61434: 95 53 10                 t1 = s0 + 0x10
 61437: ae 07 b3 03              jump @4842 if a0 >=u ra
      :                          @4739
 61441: 64 62                    t0 = s1
 61443: 33 0b                    a4 = 0
 61445: 33 09                    a2 = 0
 61447: 95 77 01                 a0 = a0 + 0x1
 61450: 95 54 08                 t2 = s0 + 0x8
 61453: 82 18 28                 a1 = u64 [sp + 0x28]
 61456: c8 8a 0a                 a3 = a3 + a1
 61459: 95 a6 10                 s1 = a3 + 0x10
 61462: 95 ac 08                 a5 = a3 + 0x8
 61465: 82 18 60                 a1 = u64 [sp + 0x60]
 61468: 01                       fallthrough
      :                          @4740
 61469: 82 3a                    a3 = u64 [t1]
 61471: ae a9 9e 03              jump @4851 if a2 >=u a3
      :                          @4741
 61475: 82 6a                    a3 = u64 [s1]
 61477: ae a9 98 03              jump @4851 if a2 >=u a3
      :                          @4742
 61481: 82 4a                    a3 = u64 [t2]
 61483: c8 ba 0a                 a3 = a3 + a4
 61486: 82 c5                    s0 = u64 [a5]
 61488: 82 aa                    a3 = u64 [a3]
 61490: 95 99 01                 a2 = a2 + 0x1
 61493: c8 b5 05                 s0 = s0 + a4
 61496: 7b 5a                    u64 [s0] = a3
 61498: 95 bb 08                 a4 = a4 + 0x8
 61501: ab 98 e0                 jump @4740 if a1 != a2
      :                          @4743
 61504: 64 26                    s1 = t0
 61506: ab 27 a8                 jump @4737 if a0 != t0
      :                          @4744
 61509: 64 07                    a0 = ra
 61511: 28 0e                    jump @4746
      :                          @4745
 61513: 82 17 88 00              a0 = u64 [sp + 0x88]
 61517: 7b 17 28                 u64 [sp + 0x28] = a0
 61520: 82 17 90 00              a0 = u64 [sp + 0x90]
 61524: 01                       fallthrough
      :                          @4746
 61525: 82 18 80 00              a1 = u64 [sp + 0x80]
 61529: 7b 18                    u64 [sp] = a1
 61531: 95 7b ff                 a4 = a0 + 0xffffffffffffffff
 61534: 7b 17 50                 u64 [sp + 0x50] = a0
 61537: 51 0b 71 01              jump @4772 if a4 == 0
      :                          @4747
 61541: 33 05                    s0 = 0
 61543: 33 06 01                 s1 = 0x1
 61546: 49 11 18 08              u64 [sp + 24] = 0x8
 61550: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 61560: 7b 18 38                 u64 [sp + 0x38] = a1
 61563: 7b 1b 08                 u64 [sp + 0x8] = a4
 61566: 01                       fallthrough
      :                          @4748
 61567: 51 06 fd 01              jump @4797 if s1 == 0
      :                          @4749
 61571: 95 59 01                 a2 = s0 + 0x1
 61574: 96 58 18                 a1 = s0 * 0x18
 61577: 7b 18 10                 u64 [sp + 0x10] = a1
 61580: 97 58 03                 a1 = s0 << 0x3
 61583: 7b 19 20                 u64 [sp + 0x20] = a2
 61586: ae 79 08 01              jump @4768 if a2 >=u a0
      :                          @4750
 61590: 82 14 28                 t2 = u64 [sp + 0x28]
 61593: 82 17 10                 a0 = u64 [sp + 0x10]
 61596: c8 74 04                 t2 = t2 + a0
 61599: 95 47 08                 a0 = t2 + 0x8
 61602: 7b 17 58                 u64 [sp + 0x58] = a0
 61605: 95 44 10                 t2 = t2 + 0x10
 61608: 7b 14 60                 u64 [sp + 0x60] = t2
 61611: 82 19 20                 a2 = u64 [sp + 0x20]
 61614: 51 16 ff 74              jump @4759 if s1 == 4294967295
      :                          @4751
 61618: 96 9a 18                 a3 = a2 * 0x18
 61621: 95 99 01                 a2 = a2 + 0x1
 61624: 7b 19 40                 u64 [sp + 0x40] = a2
 61627: 82 17 28                 a0 = u64 [sp + 0x28]
 61630: c8 7a 0a                 a3 = a3 + a0
 61633: 95 a4 08                 t2 = a3 + 0x8
 61636: 95 a3 10                 t1 = a3 + 0x10
 61639: 82 10 18                 ra = u64 [sp + 0x18]
 61642: 82 1a 20                 a3 = u64 [sp + 0x20]
 61645: 01                       fallthrough
      :                          @4752
 61646: 82 3c                    a5 = u64 [t1]
 61648: ae ca a8 01              jump @4793 if a3 >=u a5
      :                          @4753
 61652: 82 17 60                 a0 = u64 [sp + 0x60]
 61655: 82 7b                    a4 = u64 [a0]
 61657: ae b5 a0 01              jump @4794 if s0 >=u a4
      :                          @4754
 61661: ae c5 9d 01              jump @4795 if s0 >=u a5
      :                          @4755
 61665: ae ba 9a 01              jump @4796 if a3 >=u a4
      :                          @4756
 61669: 82 49                    a2 = u64 [t2]
 61671: 82 17 58                 a0 = u64 [sp + 0x58]
 61674: 82 7b                    a4 = u64 [a0]
 61676: c8 09 0c                 a5 = a2 + ra
 61679: 82 c2                    t0 = u64 [a5]
 61681: c8 8b 07                 a0 = a4 + a1
 61684: 82 77                    a0 = u64 [a0]
 61686: c8 89 09                 a2 = a2 + a1
 61689: 82 99                    a2 = u64 [a2]
 61691: c8 0b 0b                 a4 = a4 + ra
 61694: 82 bb                    a4 = u64 [a4]
 61696: 95 aa 01                 a3 = a3 + 0x1
 61699: ca 27 07                 a0 = a0 * t0
 61702: ca 9b 09                 a2 = a4 * a2
 61705: c9 97 07                 a0 = a0 - a2
 61708: cc 67 07                 a0 = a0 /s s1
 61711: 7b c7                    u64 [a5] = a0
 61713: 82 17 50                 a0 = u64 [sp + 0x50]
 61716: 95 00 08                 ra = ra + 0x8
 61719: ab a7 b7                 jump @4752 if a0 != a3
      :                          @4757
 61722: 82 19 40                 a2 = u64 [sp + 0x40]
 61725: ab 79 95                 jump @4751 if a2 != a0
      :                          @4758
 61728: 28 7a                    jump @4768
      :                          @4759
 61730: 82 14 20                 t2 = u64 [sp + 0x20]
 61733: 01                       fallthrough
      :                          @4760
 61734: 96 4b 18                 a4 = t2 * 0x18
 61737: 95 44 01                 t2 = t2 + 0x1
 61740: 82 17 28                 a0 = u64 [sp + 0x28]
 61743: c8 7b 0b                 a4 = a4 + a0
 61746: 82 17 50                 a0 = u64 [sp + 0x50]
 61749: 95 b9 08                 a2 = a4 + 0x8
 61752: 7b 19 40                 u64 [sp + 0x40] = a2
 61755: 95 b2 10                 t0 = a4 + 0x10
 61758: 82 13 18                 t1 = u64 [sp + 0x18]
 61761: 82 1a 20                 a3 = u64 [sp + 0x20]
 61764: 01                       fallthrough
      :                          @4761
 61765: 82 2c                    a5 = u64 [t0]
 61767: ae ca 31 01              jump @4793 if a3 >=u a5
      :                          @4762
 61771: 82 19 60                 a2 = u64 [sp + 0x60]
 61774: 82 9b                    a4 = u64 [a2]
 61776: ae b5 29 01              jump @4794 if s0 >=u a4
      :                          @4763
 61780: ae c5 26 01              jump @4795 if s0 >=u a5
      :                          @4764
 61784: ae ba 23 01              jump @4796 if a3 >=u a4
      :                          @4765
 61788: 82 19 40                 a2 = u64 [sp + 0x40]
 61791: 82 9c                    a5 = u64 [a2]
 61793: 82 19 58                 a2 = u64 [sp + 0x58]
 61796: 82 96                    s1 = u64 [a2]
 61798: c8 3c 0b                 a4 = a5 + t1
 61801: 82 b0                    ra = u64 [a4]
 61803: c8 86 09                 a2 = s1 + a1
 61806: 82 99                    a2 = u64 [a2]
 61808: c8 8c 0c                 a5 = a5 + a1
 61811: 82 cc                    a5 = u64 [a5]
 61813: c8 36 06                 s1 = s1 + t1
 61816: 82 66                    s1 = u64 [s1]
 61818: ca 09 09                 a2 = a2 * ra
 61821: ca c6 0c                 a5 = s1 * a5
 61824: c9 c9 0c                 a5 = a2 - a5
 61827: 82 19 38                 a2 = u64 [sp + 0x38]
 61830: aa 9c f7 01              jump @4832 if a5 == a2
      :                          @4766
 61834: 95 aa 01                 a3 = a3 + 0x1
 61837: 9a c9                    a2 = -a5
 61839: 7b b9                    u64 [a4] = a2
 61841: 95 33 08                 t1 = t1 + 0x8
 61844: ab a7 b1                 jump @4761 if a0 != a3
      :                          @4767
 61847: ab 74 8f                 jump @4760 if t2 != a0
      :                          @4768
 61850: aa 75 1c 02              jump @4844 if s0 == a0
      :                          @4769
 61854: 82 1b 28                 a4 = u64 [sp + 0x28]
 61857: 82 17 10                 a0 = u64 [sp + 0x10]
 61860: c8 7b 0b                 a4 = a4 + a0
 61863: 82 ba 10                 a3 = u64 [a4 + 0x10]
 61866: ae a5 0d 02              jump @4845 if s0 >=u a3
      :                          @4770
 61870: 82 b7 08                 a0 = u64 [a4 + 0x8]
 61873: c8 87 07                 a0 = a0 + a1
 61876: 82 76                    s1 = u64 [a0]
 61878: 82 17 50                 a0 = u64 [sp + 0x50]
 61881: 82 18 18                 a1 = u64 [sp + 0x18]
 61884: 95 88 08                 a1 = a1 + 0x8
 61887: 7b 18 18                 u64 [sp + 0x18] = a1
 61890: 82 18 20                 a1 = u64 [sp + 0x20]
 61893: 64 85                    s0 = a1
 61895: 82 1b 08                 a4 = u64 [sp + 0x8]
 61898: ab b8 b5 fe              jump @4748 if a1 != a4
      :                          @4771
 61902: 51 07 ea 01              jump @4846 if a0 == 0
      :                          @4772
 61906: 33 03 18                 t1 = 0x18
 61909: ca 3b 07                 a0 = a4 * t1
 61912: 82 18 28                 a1 = u64 [sp + 0x28]
 61915: c8 87 07                 a0 = a0 + a1
 61918: 82 79 10                 a2 = u64 [a0 + 0x10]
 61921: ae 9b d8 01              jump @4847 if a4 >=u a2
      :                          @4773
 61925: 82 77 08                 a0 = u64 [a0 + 0x8]
 61928: 33 09                    a2 = 0
 61930: 97 bb 03                 a4 = a4 << 0x3
 61933: c8 b7 07                 a0 = a0 + a4
 61936: 82 77                    a0 = u64 [a0]
 61938: 33 0b b0 02 03           a4 = 0x302b0
 61943: 95 ba 00 00 10           a3 = a4 + 0x100000
 61948: 33 02 00 00 02           t0 = 0x20000
 61953: 28 0b                    jump @4775
      :                          @4774
 61955: 95 99 01                 a2 = a2 + 0x1
 61958: 82 18 50                 a1 = u64 [sp + 0x50]
 61961: aa 89 36                 jump @4784 if a2 == a1
      :                          @4775
 61964: ca 39 0c                 a5 = a2 * t1
 61967: 82 18 28                 a1 = u64 [sp + 0x28]
 61970: c8 8c 0c                 a5 = a5 + a1
 61973: 82 c5                    s0 = u64 [a5]
 61975: 51 05 ec                 jump @4774 if s0 == 0
      :                          @4776
 61978: ac 52 e9                 jump @4774 if t0 <u s0
      :                          @4777
 61981: 82 c0 08                 ra = u64 [a5 + 0x8]
 61984: 97 54 03                 t2 = s0 << 0x3
 61987: 01                       fallthrough
      :                          @4778
 61988: 82 ac                    a5 = u64 [a3]
 61990: c9 ca 0b                 a4 = a3 - a5
 61993: ab 0b da                 jump @4774 if a4 != ra
      :                          @4779
 61996: c9 4c 0b                 a4 = a5 - t2
 61999: 01                       fallthrough
      :                          @4780
 62000: 82 a5                    s0 = u64 [a3]
 62002: ab c5 f2                 jump @4778 if s0 != a5
      :                          @4781
 62005: 7b ab                    u64 [a3] = a4
 62007: 33 06                    s1 = 0
 62009: 01                       fallthrough
      :                          @4782
 62010: ab c5 ea                 jump @4778 if s0 != a5
      :                          @4783
 62013: 28 c6                    jump @4774
      :                          @4784
 62015: 82 19                    a2 = u64 [sp]
 62017: 51 09 9f 00              jump @4812 if a2 == 0
      :                          @4785
 62021: 56 39 aa aa 00 9b 00     jump @4812 if a2 >u 43690
      :                          @4786
 62028: 96 98 e8                 a1 = a2 * 0xffffffffffffffe8
 62031: 33 09 b0 02 03           a2 = 0x302b0
 62036: 95 99 00 00 10           a2 = a2 + 0x100000
 62041: 01                       fallthrough
      :                          @4787
 62042: 82 9a                    a3 = u64 [a2]
 62044: c9 a9 0b                 a4 = a2 - a3
 62047: 82 1c 28                 a5 = u64 [sp + 0x28]
 62050: ab cb 7e                 jump @4812 if a4 != a5
      :                          @4788
 62053: c8 8a 0b                 a4 = a3 + a1
 62056: 01                       fallthrough
      :                          @4789
 62057: 82 9c                    a5 = u64 [a2]
 62059: ab ac ef                 jump @4787 if a5 != a3
      :                          @4790
 62062: 7b 9b                    u64 [a2] = a4
 62064: 33 06                    s1 = 0
 62066: 01                       fallthrough
      :                          @4791
 62067: ab ac e7                 jump @4787 if a5 != a3
      :                          @4792
 62070: 28 6a                    jump @4812
      :                          @4793
 62072: 00                       trap
      :                          @4794
 62073: 00                       trap
      :                          @4795
 62074: 00                       trap
      :                          @4796
 62075: 00                       trap
      :                          @4797
 62076: 51 07 55                 jump @4809 if a0 == 0
      :                          @4798
 62079: 33 07                    a0 = 0
 62081: 33 03 18                 t1 = 0x18
 62084: 33 0a b0 02 03           a3 = 0x302b0
 62089: 95 ab 00 00 10           a4 = a3 + 0x100000
 62094: 33 02 00 00 02           t0 = 0x20000
 62099: 28 0b                    jump @4800
      :                          @4799
 62101: 95 77 01                 a0 = a0 + 0x1
 62104: 82 18 50                 a1 = u64 [sp + 0x50]
 62107: aa 87 36                 jump @4809 if a0 == a1
      :                          @4800
 62110: ca 37 0c                 a5 = a0 * t1
 62113: 82 18 28                 a1 = u64 [sp + 0x28]
 62116: c8 8c 0c                 a5 = a5 + a1
 62119: 82 c6                    s1 = u64 [a5]
 62121: 51 06 ec                 jump @4799 if s1 == 0
      :                          @4801
 62124: ac 62 e9                 jump @4799 if t0 <u s1
      :                          @4802
 62127: 82 cc 08                 a5 = u64 [a5 + 0x8]
 62130: 97 64 03                 t2 = s1 << 0x3
 62133: 01                       fallthrough
      :                          @4803
 62134: 82 b5                    s0 = u64 [a4]
 62136: c9 5b 0a                 a3 = a4 - s0
 62139: ab ca da                 jump @4799 if a3 != a5
      :                          @4804
 62142: c9 45 0a                 a3 = s0 - t2
 62145: 01                       fallthrough
      :                          @4805
 62146: 82 b9                    a2 = u64 [a4]
 62148: ab 59 f2                 jump @4803 if a2 != s0
      :                          @4806
 62151: 7b ba                    u64 [a4] = a3
 62153: 33 06                    s1 = 0
 62155: 01                       fallthrough
      :                          @4807
 62156: ab 59 ea                 jump @4803 if a2 != s0
      :                          @4808
 62159: 28 c6                    jump @4799
      :                          @4809
 62161: 82 18                    a1 = u64 [sp]
 62163: 51 08 0a                 jump @4811 if a1 == 0
      :                          @4810
 62166: 54 38 aa aa 00 aa 00     jump @4835 if a1 <=u 43690
      :                          @4811
 62173: 33 07                    a0 = 0
 62175: 01                       fallthrough
      :                          @4812
 62176: 82 18 48                 a1 = u64 [sp + 0x48]
 62179: 51 08 55                 jump @4824 if a1 == 0
      :                          @4813
 62182: 33 08                    a1 = 0
 62184: 33 03 18                 t1 = 0x18
 62187: 33 0a b0 02 03           a3 = 0x302b0
 62192: 95 ab 00 00 10           a4 = a3 + 0x100000
 62197: 33 02 00 00 02           t0 = 0x20000
 62202: 28 0b                    jump @4815
      :                          @4814
 62204: 95 88 01                 a1 = a1 + 0x1
 62207: 82 19 48                 a2 = u64 [sp + 0x48]
 62210: aa 98 36                 jump @4824 if a1 == a2
      :                          @4815
 62213: ca 38 0c                 a5 = a1 * t1
 62216: 82 19 30                 a2 = u64 [sp + 0x30]
 62219: c8 9c 0c                 a5 = a5 + a2
 62222: 82 c6                    s1 = u64 [a5]
 62224: 51 06 ec                 jump @4814 if s1 == 0
      :                          @4816
 62227: ac 62 e9                 jump @4814 if t0 <u s1
      :                          @4817
 62230: 82 cc 08                 a5 = u64 [a5 + 0x8]
 62233: 97 64 03                 t2 = s1 << 0x3
 62236: 01                       fallthrough
      :                          @4818
 62237: 82 b5                    s0 = u64 [a4]
 62239: c9 5b 0a                 a3 = a4 - s0
 62242: ab ca da                 jump @4814 if a3 != a5
      :                          @4819
 62245: c9 45 0a                 a3 = s0 - t2
 62248: 01                       fallthrough
      :                          @4820
 62249: 82 b9                    a2 = u64 [a4]
 62251: ab 59 f2                 jump @4818 if a2 != s0
      :                          @4821
 62254: 7b ba                    u64 [a4] = a3
 62256: 33 06                    s1 = 0
 62258: 01                       fallthrough
      :                          @4822
 62259: ab 59 ea                 jump @4818 if a2 != s0
      :                          @4823
 62262: 28 c6                    jump @4814
      :                          @4824
 62264: 82 18 68                 a1 = u64 [sp + 0x68]
 62267: 51 08 30                 jump @4831 if a1 == 0
      :                          @4825
 62270: 33 09 aa aa 00           a2 = 0xaaaa
 62275: ac 89 28                 jump @4831 if a2 <u a1
      :                          @4826
 62278: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 62281: 33 09 b0 02 03           a2 = 0x302b0
 62286: 95 99 00 00 10           a2 = a2 + 0x100000
 62291: 01                       fallthrough
      :                          @4827
 62292: 82 9a                    a3 = u64 [a2]
 62294: c9 a9 0b                 a4 = a2 - a3
 62297: 82 1c 30                 a5 = u64 [sp + 0x30]
 62300: ab cb 0f                 jump @4831 if a4 != a5
      :                          @4828
 62303: c8 8a 0b                 a4 = a3 + a1
 62306: 01                       fallthrough
      :                          @4829
 62307: 82 9c                    a5 = u64 [a2]
 62309: ab ac ef                 jump @4827 if a5 != a3
      :                          @4830
 62312: 7b 9b                    u64 [a2] = a4
 62314: 01                       fallthrough
      :                          @4831
 62315: 82 10 c0 00              ra = u64 [sp + 0xc0]
 62319: 82 15 b8 00              s0 = u64 [sp + 0xb8]
 62323: 82 16 b0 00              s1 = u64 [sp + 0xb0]
 62327: 95 11 c8 00              sp = sp + 0xc8
 62331: 32 00                    ret
      :                          @4832
 62333: 00                       trap
      :                          @4833
 62334: 00                       trap
      :                          @4834
 62335: 00                       trap
      :                          @4835
 62336: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 62339: 33 09 b0 02 03           a2 = 0x302b0
 62344: 95 99 00 00 10           a2 = a2 + 0x100000
 62349: 01                       fallthrough
      :                          @4836
 62350: 82 9a                    a3 = u64 [a2]
 62352: c9 a9 07                 a0 = a2 - a3
 62355: 82 1b 28                 a4 = u64 [sp + 0x28]
 62358: ab b7 47 ff              jump @4811 if a0 != a4
      :                          @4837
 62362: c8 8a 07                 a0 = a3 + a1
 62365: 01                       fallthrough
      :                          @4838
 62366: 82 9b                    a4 = u64 [a2]
 62368: ab ab 08                 jump @4840 if a4 != a3
      :                          @4839
 62371: 7b 97                    u64 [a2] = a0
 62373: 33 0c                    a5 = 0
 62375: 01                       fallthrough
      :                          @4840
 62376: 33 07                    a0 = 0
 62378: ab ab e4                 jump @4836 if a4 != a3
      :                          @4841
 62381: 28 33 ff                 jump @4812
      :                          @4842
 62384: 82 38                    a1 = u64 [t1]
 62386: 51 08 0a                 jump @4850 if a1 == 0
      :                          @4843
 62389: 00                       trap
      :                          @4844
 62390: 00                       trap
      :                          @4845
 62391: 00                       trap
      :                          @4846
 62392: 00                       trap
      :                          @4847
 62393: 00                       trap
      :                          @4848
 62394: 00                       trap
      :                          @4849
 62395: 00                       trap
      :                          @4850
 62396: 00                       trap
      :                          @4851
 62397: 00                       trap
      :                          @4852
 62398: 00                       trap
      :                          @4853
 62399: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 62403: 7b 10 88 00              u64 [sp + 0x88] = ra
 62407: 7b 15 80 00              u64 [sp + 0x80] = s0
 62411: 7b 16 78                 u64 [sp + 0x78] = s1
 62414: 82 82 10                 t0 = u64 [a1 + 0x10]
 62417: 7b 17                    u64 [sp] = a0
 62419: 97 27 03                 a0 = t0 << 0x3
 62422: 7b 17 28                 u64 [sp + 0x28] = a0
 62425: 51 02 f1 01              jump @4892 if t0 == 0
      :                          @4854
 62429: 98 27 3c                 a0 = t0 >> 0x3c
 62432: 52 07 dc 02              jump @4922 if a0 != 0
      :                          @4855
 62436: 7b 18 38                 u64 [sp + 0x38] = a1
 62439: 7b 12 40                 u64 [sp + 0x40] = t0
 62442: 88 77 01                 a0 = a0 <u 0x1
 62445: 97 72 03                 t0 = a0 << 0x3
 62448: 33 08 b0 02 03           a1 = 0x302b0
 62453: 33 03 00 00 10           t1 = 0x100000
 62458: c8 38 0a                 a3 = a1 + t1
 62461: 01                       fallthrough
      :                          @4856
 62462: 82 ab                    a4 = u64 [a3]
 62464: 82 1c 28                 a5 = u64 [sp + 0x28]
 62467: c8 bc 0c                 a5 = a5 + a4
 62470: ac bc b5 02              jump @4921 if a5 <u a4
      :                          @4857
 62474: c8 2c 09                 a2 = a5 + t0
 62477: d8 c9 06                 s1 = a2 <u a5
 62480: d8 93 09                 a2 = t1 <u a2
 62483: d4 69 09                 a2 = a2 | s1
 62486: 52 09 a5 02              jump @4921 if a2 != 0
      :                          @4858
 62490: c9 c8 06                 s1 = a1 - a5
 62493: c8 36 06                 s1 = s1 + t1
 62496: 84 69 07                 a2 = s1 & 0x7
 62499: c8 9c 0c                 a5 = a5 + a2
 62502: 01                       fallthrough
      :                          @4859
 62503: 82 a7                    a0 = u64 [a3]
 62505: ab b7 d5                 jump @4856 if a0 != a4
      :                          @4860
 62508: 7b ac                    u64 [a3] = a5
 62510: c9 96 05                 s0 = s1 - a2
 62513: 64 57                    a0 = s0
 62515: 33 08                    a1 = 0
 62517: 82 19 28                 a2 = u64 [sp + 0x28]
 62520: 50 20 42 03 d5 17 02     ra = 834, jump @13689
      :                          @4861 [@dyn 417]
 62527: 82 17 38                 a0 = u64 [sp + 0x38]
 62530: 82 77 08                 a0 = u64 [a0 + 0x8]
 62533: 7b 17 20                 u64 [sp + 0x20] = a0
 62536: 33 0a                    a3 = 0
 62538: 33 09 18                 a2 = 0x18
 62541: 82 12 40                 t0 = u64 [sp + 0x40]
 62544: 28 05                    jump @4863
      :                          @4862
 62546: aa 2a 3d                 jump @4868 if a3 == t0
      :                          @4863
 62549: 33 07                    a0 = 0
 62551: ca 9a 08                 a1 = a3 * a2
 62554: 95 aa 01                 a3 = a3 + 0x1
 62557: 82 1b 20                 a4 = u64 [sp + 0x20]
 62560: c8 b8 08                 a1 = a1 + a4
 62563: 95 8b 10                 a4 = a1 + 0x10
 62566: 95 8c 08                 a5 = a1 + 0x8
 62569: 64 56                    s1 = s0
 62571: 28 0b                    jump @4865
      :                          @4864
 62573: 95 77 01                 a0 = a0 + 0x1
 62576: 95 66 08                 s1 = s1 + 0x8
 62579: aa 72 df                 jump @4862 if t0 == a0
      :                          @4865
 62582: 82 b8                    a1 = u64 [a4]
 62584: ae 87 82 01              jump @4895 if a0 >=u a1
      :                          @4866
 62588: 82 c8                    a1 = u64 [a5]
 62590: c8 78 08                 a1 = a1 + a0
 62593: 7c 88                    a1 = u8 [a1]
 62595: 51 08 ea                 jump @4864 if a1 == 0
      :                          @4867
 62598: 82 68                    a1 = u64 [s1]
 62600: 95 88 01                 a1 = a1 + 0x1
 62603: 7b 68                    u64 [s1] = a1
 62605: 28 e0                    jump @4864
      :                          @4868
 62607: 33 08                    a1 = 0
 62609: 64 56                    s1 = s0
 62611: 33 05                    s0 = 0
 62613: 49 11 48                 u64 [sp + 72] = 0
 62616: 33 07 08                 a0 = 0x8
 62619: 7b 17 50                 u64 [sp + 0x50] = a0
 62622: 49 11 58                 u64 [sp + 88] = 0
 62625: 7b 16 08                 u64 [sp + 0x8] = s1
 62628: 28 1a                    jump @4871
      :                          @4869
 62630: 97 89 03                 a2 = a1 << 0x3
 62633: c8 79 09                 a2 = a2 + a0
 62636: 7b 95                    u64 [a2] = s0
 62638: 95 88 01                 a1 = a1 + 0x1
 62641: 7b 18 58                 u64 [sp + 0x58] = a1
 62644: 01                       fallthrough
      :                          @4870
 62645: 95 55 01                 s0 = s0 + 0x1
 62648: 95 66 08                 s1 = s1 + 0x8
 62651: aa 52 23                 jump @4875 if t0 == s0
      :                          @4871
 62654: 82 69                    a2 = u64 [s1]
 62656: 52 09 f5                 jump @4870 if a2 != 0
      :                          @4872
 62659: 82 19 48                 a2 = u64 [sp + 0x48]
 62662: ab 98 e0                 jump @4869 if a1 != a2
      :                          @4873
 62665: 95 17 48                 a0 = sp + 0x48
 62668: 50 20 44 03 43 5e ff     ra = 836, jump @1581
      :                          @4874 [@dyn 418]
 62675: 82 12 40                 t0 = u64 [sp + 0x40]
 62678: 82 18 58                 a1 = u64 [sp + 0x58]
 62681: 82 17 50                 a0 = u64 [sp + 0x50]
 62684: 28 ca                    jump @4869
      :                          @4875
 62686: 49 11 60                 u64 [sp + 96] = 0
 62689: 49 11 10 08              u64 [sp + 16] = 0x8
 62693: 49 11 68 08              u64 [sp + 104] = 0x8
 62697: 49 11 70                 u64 [sp + 112] = 0
 62700: 51 08 0f 01              jump @4896 if a1 == 0
      :                          @4876
 62704: 82 1a 50                 a3 = u64 [sp + 0x50]
 62707: 33 09                    a2 = 0
 62709: 82 15 08                 s0 = u64 [sp + 0x8]
 62712: 28 0f                    jump @4878
      :                          @4877
 62714: 82 18 58                 a1 = u64 [sp + 0x58]
 62717: 82 15 08                 s0 = u64 [sp + 0x8]
 62720: 82 19 18                 a2 = u64 [sp + 0x18]
 62723: 51 08 df 00              jump @4893 if a1 == 0
      :                          @4878
 62727: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 62730: 7b 18 58                 u64 [sp + 0x58] = a1
 62733: 97 88 03                 a1 = a1 << 0x3
 62736: c8 a8 08                 a1 = a1 + a3
 62739: 82 17 60                 a0 = u64 [sp + 0x60]
 62742: 82 8b                    a4 = u64 [a1]
 62744: ab 79 24                 jump @4881 if a2 != a0
      :                          @4879
 62747: 95 17 60                 a0 = sp + 0x60
 62750: 64 98                    a1 = a2
 62752: 64 a6                    s1 = a3
 62754: 7b 1b 38                 u64 [sp + 0x38] = a4
 62757: 50 20 46 03 ea 5d ff     ra = 838, jump @1581
      :                          @4880 [@dyn 419]
 62764: 82 1b 38                 a4 = u64 [sp + 0x38]
 62767: 64 6a                    a3 = s1
 62769: 82 12 40                 t0 = u64 [sp + 0x40]
 62772: 82 19 70                 a2 = u64 [sp + 0x70]
 62775: 82 18 68                 a1 = u64 [sp + 0x68]
 62778: 28 06                    jump @4882
      :                          @4881
 62780: 82 18 10                 a1 = u64 [sp + 0x10]
 62783: 01                       fallthrough
      :                          @4882
 62784: 97 97 03                 a0 = a2 << 0x3
 62787: c8 87 07                 a0 = a0 + a1
 62790: 7b 7b                    u64 [a0] = a4
 62792: 95 99 01                 a2 = a2 + 0x1
 62795: 7b 19 70                 u64 [sp + 0x70] = a2
 62798: ae 2b 6c 01              jump @4920 if a4 >=u t0
      :                          @4883
 62802: 7b 18 10                 u64 [sp + 0x10] = a1
 62805: 7b 19 18                 u64 [sp + 0x18] = a2
 62808: 64 56                    s1 = s0
 62810: 33 05                    s0 = 0
 62812: 96 b7 18                 a0 = a4 * 0x18
 62815: 82 18 20                 a1 = u64 [sp + 0x20]
 62818: c8 87 07                 a0 = a0 + a1
 62821: 95 79 10                 a2 = a0 + 0x10
 62824: 95 7b 08                 a4 = a0 + 0x8
 62827: 7b 19 38                 u64 [sp + 0x38] = a2
 62830: 7b 1b 30                 u64 [sp + 0x30] = a4
 62833: 28 1e                    jump @4886
      :                          @4884
 62835: 82 1a 50                 a3 = u64 [sp + 0x50]
 62838: 97 87 03                 a0 = a1 << 0x3
 62841: c8 a7 07                 a0 = a0 + a3
 62844: 7b 75                    u64 [a0] = s0
 62846: 95 88 01                 a1 = a1 + 0x1
 62849: 7b 18 58                 u64 [sp + 0x58] = a1
 62852: 01                       fallthrough
      :                          @4885
 62853: 95 55 01                 s0 = s0 + 0x1
 62856: 95 66 08                 s1 = s1 + 0x8
 62859: aa 52 6f ff              jump @4877 if t0 == s0
      :                          @4886
 62863: 82 98                    a1 = u64 [a2]
 62865: ae 85 28 01              jump @4919 if s0 >=u a1
      :                          @4887
 62869: 82 b7                    a0 = u64 [a4]
 62871: c8 57 07                 a0 = a0 + s0
 62874: 7c 77                    a0 = u8 [a0]
 62876: 51 07 e9                 jump @4885 if a0 == 0
      :                          @4888
 62879: 82 67                    a0 = u64 [s1]
 62881: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 62884: 7b 67                    u64 [s1] = a0
 62886: 52 07 df                 jump @4885 if a0 != 0
      :                          @4889
 62889: 82 18 58                 a1 = u64 [sp + 0x58]
 62892: 82 17 48                 a0 = u64 [sp + 0x48]
 62895: ab 78 c4                 jump @4884 if a1 != a0
      :                          @4890
 62898: 95 17 48                 a0 = sp + 0x48
 62901: 50 20 48 03 5a 5d ff     ra = 840, jump @1581
      :                          @4891 [@dyn 420]
 62908: 82 1b 30                 a4 = u64 [sp + 0x30]
 62911: 82 19 38                 a2 = u64 [sp + 0x38]
 62914: 82 12 40                 t0 = u64 [sp + 0x40]
 62917: 82 18 58                 a1 = u64 [sp + 0x58]
 62920: 28 ab                    jump @4884
      :                          @4892
 62922: 33 09                    a2 = 0
 62924: 49 11 48                 u64 [sp + 72] = 0
 62927: 33 05 08                 s0 = 0x8
 62930: 7b 15 50                 u64 [sp + 0x50] = s0
 62933: 49 11 58                 u64 [sp + 88] = 0
 62936: 49 11 60                 u64 [sp + 96] = 0
 62939: 7b 15 68                 u64 [sp + 0x68] = s0
 62942: 49 11 70                 u64 [sp + 112] = 0
 62945: 01                       fallthrough
      :                          @4893
 62946: ab 29 1f                 jump @4897 if a2 != t0
      :                          @4894
 62949: 82 17 70                 a0 = u64 [sp + 0x70]
 62952: 82 18 68                 a1 = u64 [sp + 0x68]
 62955: 82 19 60                 a2 = u64 [sp + 0x60]
 62958: 82 1a                    a3 = u64 [sp]
 62960: 7b a7 10                 u64 [a3 + 0x10] = a0
 62963: 7b a8 08                 u64 [a3 + 0x8] = a1
 62966: 7b a9                    u64 [a3] = a2
 62968: 28 4c                    jump @4904
      :                          @4895
 62970: 00                       trap
      :                          @4896
 62971: 82 15 08                 s0 = u64 [sp + 0x8]
 62974: 51 02 e7                 jump @4894 if t0 == 0
      :                          @4897
 62977: 82 18 60                 a1 = u64 [sp + 0x60]
 62980: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 62990: 82 19                    a2 = u64 [sp]
 62992: 7b 97                    u64 [a2] = a0
 62994: 51 08 32                 jump @4904 if a1 == 0
      :                          @4898
 62997: 33 07 00 00 02           a0 = 0x20000
 63002: ac 87 2a                 jump @4904 if a0 <u a1
      :                          @4899
 63005: 82 17 68                 a0 = u64 [sp + 0x68]
 63008: 97 88 03                 a1 = a1 << 0x3
 63011: 33 09 b0 02 03           a2 = 0x302b0
 63016: 95 99 00 00 10           a2 = a2 + 0x100000
 63021: 01                       fallthrough
      :                          @4900
 63022: 82 9a                    a3 = u64 [a2]
 63024: c9 a9 0b                 a4 = a2 - a3
 63027: ab 7b 11                 jump @4904 if a4 != a0
      :                          @4901
 63030: c9 8a 0b                 a4 = a3 - a1
 63033: 01                       fallthrough
      :                          @4902
 63034: 82 9c                    a5 = u64 [a2]
 63036: ab ac f2                 jump @4900 if a5 != a3
      :                          @4903
 63039: 7b 9b                    u64 [a2] = a4
 63041: 33 06                    s1 = 0
 63043: 01                       fallthrough
      :                          @4904
 63044: 82 18 48                 a1 = u64 [sp + 0x48]
 63047: 51 08 32                 jump @4911 if a1 == 0
      :                          @4905
 63050: 33 07 00 00 02           a0 = 0x20000
 63055: ac 87 2a                 jump @4911 if a0 <u a1
      :                          @4906
 63058: 82 17 50                 a0 = u64 [sp + 0x50]
 63061: 97 88 03                 a1 = a1 << 0x3
 63064: 33 09 b0 02 03           a2 = 0x302b0
 63069: 95 99 00 00 10           a2 = a2 + 0x100000
 63074: 01                       fallthrough
      :                          @4907
 63075: 82 9a                    a3 = u64 [a2]
 63077: c9 a9 0b                 a4 = a2 - a3
 63080: ab 7b 11                 jump @4911 if a4 != a0
      :                          @4908
 63083: c9 8a 0b                 a4 = a3 - a1
 63086: 01                       fallthrough
      :                          @4909
 63087: 82 9c                    a5 = u64 [a2]
 63089: ab ac f2                 jump @4907 if a5 != a3
      :                          @4910
 63092: 7b 9b                    u64 [a2] = a4
 63094: 33 06                    s1 = 0
 63096: 01                       fallthrough
      :                          @4911
 63097: 51 02 2f                 jump @4918 if t0 == 0
      :                          @4912
 63100: 33 07 00 00 02           a0 = 0x20000
 63105: ac 27 27                 jump @4918 if a0 <u t0
      :                          @4913
 63108: 33 07 b0 02 03           a0 = 0x302b0
 63113: 95 77 00 00 10           a0 = a0 + 0x100000
 63118: 01                       fallthrough
      :                          @4914
 63119: 82 78                    a1 = u64 [a0]
 63121: c9 87 09                 a2 = a0 - a1
 63124: ab 59 14                 jump @4918 if a2 != s0
      :                          @4915
 63127: 82 19 28                 a2 = u64 [sp + 0x28]
 63130: c9 98 09                 a2 = a1 - a2
 63133: 01                       fallthrough
      :                          @4916
 63134: 82 7a                    a3 = u64 [a0]
 63136: ab 8a ef                 jump @4914 if a3 != a1
      :                          @4917
 63139: 7b 79                    u64 [a0] = a2
 63141: 33 0b                    a4 = 0
 63143: 01                       fallthrough
      :                          @4918
 63144: 82 10 88 00              ra = u64 [sp + 0x88]
 63148: 82 15 80 00              s0 = u64 [sp + 0x80]
 63152: 82 16 78                 s1 = u64 [sp + 0x78]
 63155: 95 11 90 00              sp = sp + 0x90
 63159: 32 00                    ret
      :                          @4919
 63161: 00                       trap
      :                          @4920
 63162: 00                       trap
      :                          @4921
 63163: 00                       trap
      :                          @4922
 63164: 00                       trap
      :                          @4923
 63165: 95 11 30 ff              sp = sp + 0xffffffffffffff30
 63169: 7b 10 c8 00              u64 [sp + 0xc8] = ra
 63173: 7b 15 c0 00              u64 [sp + 0xc0] = s0
 63177: 7b 16 b8 00              u64 [sp + 0xb8] = s1
 63181: 7b 18 28                 u64 [sp + 0x28] = a1
 63184: 82 83 10                 t1 = u64 [a1 + 0x10]
 63187: 7b 17 10                 u64 [sp + 0x10] = a0
 63190: 7b 13 30                 u64 [sp + 0x30] = t1
 63193: 51 03 17 01              jump @4943 if t1 == 0
      :                          @4924
 63197: 98 37 3b                 a0 = t1 >> 0x3b
 63200: 52 07 a5 02              jump @4980 if a0 != 0
      :                          @4925
 63204: 88 72 01                 t0 = a0 <u 0x1
 63207: 97 39 04                 a2 = t1 << 0x4
 63210: 97 22 03                 t0 = t0 << 0x3
 63213: 33 04 b0 02 03           t2 = 0x302b0
 63218: 33 03 00 00 10           t1 = 0x100000
 63223: c8 34 0b                 a4 = t2 + t1
 63226: 01                       fallthrough
      :                          @4926
 63227: 82 b6                    s1 = u64 [a4]
 63229: c8 96 0c                 a5 = s1 + a2
 63232: ac 6c 84 02              jump @4979 if a5 <u s1
      :                          @4927
 63236: c8 2c 0a                 a3 = a5 + t0
 63239: d8 ca 05                 s0 = a3 <u a5
 63242: d8 a3 0a                 a3 = t1 <u a3
 63245: d4 5a 0a                 a3 = a3 | s0
 63248: 52 0a 74 02              jump @4979 if a3 != 0
      :                          @4928
 63252: c9 c4 05                 s0 = t2 - a5
 63255: c8 35 05                 s0 = s0 + t1
 63258: 84 5a 07                 a3 = s0 & 0x7
 63261: c8 ac 0c                 a5 = a5 + a3
 63264: 01                       fallthrough
      :                          @4929
 63265: 82 b7                    a0 = u64 [a4]
 63267: ab 67 d8                 jump @4926 if a0 != s1
      :                          @4930
 63270: 7b bc                    u64 [a4] = a5
 63272: c9 a5 05                 s0 = s0 - a3
 63275: 64 57                    a0 = s0
 63277: 33 08                    a1 = 0
 63279: 50 20 4a 03 de 14 02     ra = 842, jump @13689
      :                          @4931 [@dyn 421]
 63286: 82 19 30                 a2 = u64 [sp + 0x30]
 63289: 7b 19 38                 u64 [sp + 0x38] = a2
 63292: 7b 15 18                 u64 [sp + 0x18] = s0
 63295: 7b 15 40                 u64 [sp + 0x40] = s0
 63298: 7b 19 48                 u64 [sp + 0x48] = a2
 63301: 97 99 03                 a2 = a2 << 0x3
 63304: 33 07 b0 02 03           a0 = 0x302b0
 63309: 33 03 b0 02 03           t1 = 0x302b0
 63314: 33 02 00 00 10           t0 = 0x100000
 63319: c8 23 0a                 a3 = t1 + t0
 63322: 01                       fallthrough
      :                          @4932
 63323: 82 ab                    a4 = u64 [a3]
 63325: c8 9b 0c                 a5 = a4 + a2
 63328: ac bc 24 02              jump @4979 if a5 <u a4
      :                          @4933
 63332: 95 c8 08                 a1 = a5 + 0x8
 63335: d8 c8 06                 s1 = a1 <u a5
 63338: d8 82 08                 a1 = t0 <u a1
 63341: d4 68 08                 a1 = a1 | s1
 63344: 52 08 14 02              jump @4979 if a1 != 0
      :                          @4934
 63348: c9 c3 06                 s1 = t1 - a5
 63351: c8 26 06                 s1 = s1 + t0
 63354: 84 68 07                 a1 = s1 & 0x7
 63357: c8 8c 0c                 a5 = a5 + a1
 63360: 01                       fallthrough
      :                          @4935
 63361: 82 a5                    s0 = u64 [a3]
 63363: ab b5 d8                 jump @4932 if s0 != a4
      :                          @4936
 63366: 7b ac                    u64 [a3] = a5
 63368: c9 86 05                 s0 = s1 - a1
 63371: 64 57                    a0 = s0
 63373: 33 08                    a1 = 0
 63375: 50 20 4c 03 7e 14 02     ra = 844, jump @13689
      :                          @4937 [@dyn 422]
 63382: 82 19 30                 a2 = u64 [sp + 0x30]
 63385: 7b 19 50                 u64 [sp + 0x50] = a2
 63388: 7b 15 58                 u64 [sp + 0x58] = s0
 63391: 7b 19 60                 u64 [sp + 0x60] = a2
 63394: 33 07 b0 02 03           a0 = 0x302b0
 63399: 33 06 00 00 10           s1 = 0x100000
 63404: c8 67 07                 a0 = a0 + s1
 63407: 01                       fallthrough
      :                          @4938
 63408: 82 7a                    a3 = u64 [a0]
 63410: c8 9a 08                 a1 = a3 + a2
 63413: ac a8 cf 01              jump @4979 if a1 <u a3
      :                          @4939
 63417: 95 8b 01                 a4 = a1 + 0x1
 63420: 88 bc 01                 a5 = a4 <u 0x1
 63423: d8 b6 0b                 a4 = s1 <u a4
 63426: d4 cb 0b                 a4 = a4 | a5
 63429: 52 0b bf 01              jump @4979 if a4 != 0
      :                          @4940
 63433: 82 7b                    a4 = u64 [a0]
 63435: ab ab e5                 jump @4938 if a4 != a3
      :                          @4941
 63438: 7b 78                    u64 [a0] = a1
 63440: 33 0c                    a5 = 0
 63442: 7b 15 08                 u64 [sp + 0x8] = s0
 63445: 33 07 b0 02 13           a0 = 0x1302b0
 63450: c9 87 06                 s1 = a0 - a1
 63453: 64 67                    a0 = s1
 63455: 33 08                    a1 = 0
 63457: 50 20 4e 03 2c 14 02     ra = 846, jump @13689
      :                          @4942 [@dyn 423]
 63464: 82 13 30                 t1 = u64 [sp + 0x30]
 63467: 82 15 18                 s0 = u64 [sp + 0x18]
 63470: 28 21                    jump @4944
      :                          @4943
 63472: 49 11 38                 u64 [sp + 56] = 0
 63475: 33 08 08                 a1 = 0x8
 63478: 7b 18 40                 u64 [sp + 0x40] = a1
 63481: 49 11 48                 u64 [sp + 72] = 0
 63484: 49 11 50                 u64 [sp + 80] = 0
 63487: 7b 18 08                 u64 [sp + 0x8] = a1
 63490: 7b 18 58                 u64 [sp + 0x58] = a1
 63493: 49 11 60                 u64 [sp + 96] = 0
 63496: 33 06 01                 s1 = 0x1
 63499: 33 05 08                 s0 = 0x8
 63502: 01                       fallthrough
      :                          @4944
 63503: 7b 13 68                 u64 [sp + 0x68] = t1
 63506: 7b 16 70                 u64 [sp + 0x70] = s1
 63509: 7b 13 78                 u64 [sp + 0x78] = t1
 63512: 49 21 80 00              u64 [sp + 128] = 0
 63516: 49 21 88 00 08           u64 [sp + 136] = 0x8
 63521: 49 21 90 00              u64 [sp + 144] = 0
 63525: 49 21 98 00              u64 [sp + 152] = 0
 63529: 49 21 a0 00              u64 [sp + 160] = 0
 63533: 49 21 a8 00 08           u64 [sp + 168] = 0x8
 63538: 49 21 b0 00              u64 [sp + 176] = 0
 63542: 51 03 24 01              jump @4977 if t1 == 0
      :                          @4945
 63546: 7b 16 20                 u64 [sp + 0x20] = s1
 63549: 33 06                    s1 = 0
 63551: 7b 15 18                 u64 [sp + 0x18] = s0
 63554: 28 0b                    jump @4947
      :                          @4946
 63556: 95 66 01                 s1 = s1 + 0x1
 63559: 95 55 10                 s0 = s0 + 0x10
 63562: aa 63 2f                 jump @4950 if t1 == s1
      :                          @4947
 63565: 82 57                    a0 = u64 [s0]
 63567: 52 07 f5                 jump @4946 if a0 != 0
      :                          @4948
 63570: 95 19 38                 a2 = sp + 0x38
 63573: 95 1a 50                 a3 = sp + 0x50
 63576: 95 1b 80 00              a4 = sp + 0x80
 63580: 95 1c 68                 a5 = sp + 0x68
 63583: 95 14 98 00              t2 = sp + 0x98
 63587: 95 17 a0 00              a0 = sp + 0xa0
 63591: 7b 17                    u64 [sp] = a0
 63593: 64 67                    a0 = s1
 63595: 82 18 28                 a1 = u64 [sp + 0x28]
 63598: 50 20 50 03 18 01        ra = 848, jump @4981
      :                          @4949 [@dyn 424]
 63604: 82 13 30                 t1 = u64 [sp + 0x30]
 63607: 28 cd                    jump @4946
      :                          @4950
 63609: 82 18 80 00              a1 = u64 [sp + 0x80]
 63613: 82 19 b0 00              a2 = u64 [sp + 0xb0]
 63617: 82 1a a8 00              a3 = u64 [sp + 0xa8]
 63621: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 63625: 82 17 88 00              a0 = u64 [sp + 0x88]
 63629: 82 1c 10                 a5 = u64 [sp + 0x10]
 63632: 7b c9 10                 u64 [a5 + 0x10] = a2
 63635: 7b ca 08                 u64 [a5 + 0x8] = a3
 63638: 7b cb                    u64 [a5] = a4
 63640: 51 08 2d                 jump @4957 if a1 == 0
      :                          @4951
 63643: 33 09 00 00 02           a2 = 0x20000
 63648: ac 89 25                 jump @4957 if a2 <u a1
      :                          @4952
 63651: 97 88 03                 a1 = a1 << 0x3
 63654: 33 09 b0 02 03           a2 = 0x302b0
 63659: 95 99 00 00 10           a2 = a2 + 0x100000
 63664: 01                       fallthrough
      :                          @4953
 63665: 82 9a                    a3 = u64 [a2]
 63667: c9 a9 0b                 a4 = a2 - a3
 63670: ab 7b 0f                 jump @4957 if a4 != a0
      :                          @4954
 63673: c9 8a 0b                 a4 = a3 - a1
 63676: 01                       fallthrough
      :                          @4955
 63677: 82 9c                    a5 = u64 [a2]
 63679: ab ac f2                 jump @4953 if a5 != a3
      :                          @4956
 63682: 7b 9b                    u64 [a2] = a4
 63684: 01                       fallthrough
      :                          @4957
 63685: 33 07 00 00 10           a0 = 0x100000
 63690: 33 08 01 00 10           a1 = 0x100001
 63695: 82 16 18                 s1 = u64 [sp + 0x18]
 63698: 82 15 08                 s0 = u64 [sp + 0x8]
 63701: ae 83 9d 00              jump @4978 if t1 >=u a1
      :                          @4958
 63705: 33 08 b0 02 03           a1 = 0x302b0
 63710: 95 87 00 00 10           a0 = a1 + 0x100000
 63715: 01                       fallthrough
      :                          @4959
 63716: 82 78                    a1 = u64 [a0]
 63718: c9 87 09                 a2 = a0 - a1
 63721: 82 1a 20                 a3 = u64 [sp + 0x20]
 63724: ab a9 11                 jump @4963 if a2 != a3
      :                          @4960
 63727: c9 38 09                 a2 = a1 - t1
 63730: 01                       fallthrough
      :                          @4961
 63731: 82 7a                    a3 = u64 [a0]
 63733: ab 8a ef                 jump @4959 if a3 != a1
      :                          @4962
 63736: 7b 79                    u64 [a0] = a2
 63738: 33 0b                    a4 = 0
 63740: 01                       fallthrough
      :                          @4963
 63741: 33 07 00 00 02           a0 = 0x20000
 63746: ac 37 70                 jump @4978 if a0 <u t1
      :                          @4964
 63749: 97 37 03                 a0 = t1 << 0x3
 63752: 33 08 b0 02 03           a1 = 0x302b0
 63757: 95 88 00 00 10           a1 = a1 + 0x100000
 63762: 01                       fallthrough
      :                          @4965
 63763: 82 89                    a2 = u64 [a1]
 63765: c9 98 0a                 a3 = a1 - a2
 63768: ab 5a 11                 jump @4969 if a3 != s0
      :                          @4966
 63771: c9 79 0a                 a3 = a2 - a0
 63774: 01                       fallthrough
      :                          @4967
 63775: 82 8b                    a4 = u64 [a1]
 63777: ab 9b f2                 jump @4965 if a4 != a2
      :                          @4968
 63780: 7b 8a                    u64 [a1] = a3
 63782: 33 0c                    a5 = 0
 63784: 01                       fallthrough
      :                          @4969
 63785: 33 07 00 00 01           a0 = 0x10000
 63790: ac 37 44                 jump @4978 if a0 <u t1
      :                          @4970
 63793: 97 37 04                 a0 = t1 << 0x4
 63796: 33 08 b0 02 03           a1 = 0x302b0
 63801: 95 88 00 00 10           a1 = a1 + 0x100000
 63806: 01                       fallthrough
      :                          @4971
 63807: 82 89                    a2 = u64 [a1]
 63809: c9 98 0a                 a3 = a1 - a2
 63812: ab 6a 2e                 jump @4978 if a3 != s1
      :                          @4972
 63815: c9 79 0a                 a3 = a2 - a0
 63818: 01                       fallthrough
      :                          @4973
 63819: 82 8b                    a4 = u64 [a1]
 63821: ab 9b f2                 jump @4971 if a4 != a2
      :                          @4974
 63824: 7b 8a                    u64 [a1] = a3
 63826: 33 0c                    a5 = 0
 63828: 01                       fallthrough
      :                          @4975
 63829: ab 9b ea                 jump @4971 if a4 != a2
      :                          @4976
 63832: 28 1a                    jump @4978
      :                          @4977
 63834: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 63838: 82 18 a8 00              a1 = u64 [sp + 0xa8]
 63842: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 63846: 82 1a 10                 a3 = u64 [sp + 0x10]
 63849: 7b a7 10                 u64 [a3 + 0x10] = a0
 63852: 7b a8 08                 u64 [a3 + 0x8] = a1
 63855: 7b a9                    u64 [a3] = a2
 63857: 01                       fallthrough
      :                          @4978
 63858: 82 10 c8 00              ra = u64 [sp + 0xc8]
 63862: 82 15 c0 00              s0 = u64 [sp + 0xc0]
 63866: 82 16 b8 00              s1 = u64 [sp + 0xb8]
 63870: 95 11 d0 00              sp = sp + 0xd0
 63874: 32 00                    ret
      :                          @4979
 63876: 00                       trap
      :                          @4980
 63877: 00                       trap
      :                          @4981
 63878: 95 11 30 ff              sp = sp + 0xffffffffffffff30
 63882: 7b 10 c8 00              u64 [sp + 0xc8] = ra
 63886: 7b 15 c0 00              u64 [sp + 0xc0] = s0
 63890: 7b 16 b8 00              u64 [sp + 0xb8] = s1
 63894: 82 92 10                 t0 = u64 [a2 + 0x10]
 63897: 7b 18 50                 u64 [sp + 0x50] = a1
 63900: 64 75                    s0 = a0
 63902: ae 27 65 02              jump @5020 if a0 >=u t0
      :                          @4982
 63906: 82 96 08                 s1 = u64 [a2 + 0x8]
 63909: 82 47                    a0 = u64 [t2]
 63911: 97 58 04                 a1 = s0 << 0x4
 63914: 7b 16 48                 u64 [sp + 0x48] = s1
 63917: c8 86 06                 s1 = s1 + a1
 63920: 49 06 01                 u64 [s1 + 0] = 0x1
 63923: 7b 67 08                 u64 [s1 + 0x8] = a0
 63926: 82 a8 10                 a1 = u64 [a3 + 0x10]
 63929: 7b 18 20                 u64 [sp + 0x20] = a1
 63932: ae 85 48 02              jump @5021 if s0 >=u a1
      :                          @4983
 63936: 7b 16 08                 u64 [sp + 0x8] = s1
 63939: 82 a0 08                 ra = u64 [a3 + 0x8]
 63942: 97 58 03                 a1 = s0 << 0x3
 63945: c8 08 08                 a1 = a1 + ra
 63948: 7b 18 68                 u64 [sp + 0x68] = a1
 63951: 7b 87                    u64 [a1] = a0
 63953: 82 b8 10                 a1 = u64 [a4 + 0x10]
 63956: 82 b6                    s1 = u64 [a4]
 63958: 95 77 01                 a0 = a0 + 0x1
 63961: 7b 47                    u64 [t2] = a0
 63963: 7b 1b 70                 u64 [sp + 0x70] = a4
 63966: 7b 19 40                 u64 [sp + 0x40] = a2
 63969: 7b 14 18                 u64 [sp + 0x18] = t2
 63972: 7b 1c 38                 u64 [sp + 0x38] = a5
 63975: 7b 1a 30                 u64 [sp + 0x30] = a3
 63978: ab 68 28                 jump @4986 if a1 != s1
      :                          @4984
 63981: 64 b7                    a0 = a4
 63983: 64 26                    s1 = t0
 63985: 7b 10 98 00              u64 [sp + 0x98] = ra
 63989: 50 20 52 03 1a 59 ff     ra = 850, jump @1581
      :                          @4985 [@dyn 425]
 63996: 82 10 98 00              ra = u64 [sp + 0x98]
 64000: 82 1a 30                 a3 = u64 [sp + 0x30]
 64003: 82 1c 38                 a5 = u64 [sp + 0x38]
 64006: 82 19 40                 a2 = u64 [sp + 0x40]
 64009: 64 62                    t0 = s1
 64011: 82 1b 70                 a4 = u64 [sp + 0x70]
 64014: 82 b8 10                 a1 = u64 [a4 + 0x10]
 64017: 01                       fallthrough
      :                          @4986
 64018: 82 b6 08                 s1 = u64 [a4 + 0x8]
 64021: 97 87 03                 a0 = a1 << 0x3
 64024: c8 67 07                 a0 = a0 + s1
 64027: 7b 75                    u64 [a0] = s0
 64029: 82 c7 10                 a0 = u64 [a5 + 0x10]
 64032: 95 88 01                 a1 = a1 + 0x1
 64035: 7b b8 10                 u64 [a4 + 0x10] = a1
 64038: 7b 17 80 00              u64 [sp + 0x80] = a0
 64042: ae 75 d6 01              jump @5017 if s0 >=u a0
      :                          @4987
 64046: 82 c7 08                 a0 = u64 [a5 + 0x8]
 64049: 7b 15 58                 u64 [sp + 0x58] = s0
 64052: 7b 17 78                 u64 [sp + 0x78] = a0
 64055: c8 57 07                 a0 = a0 + s0
 64058: 46 07 01                 u8 [a0 + 0] = 0x1
 64061: 82 17 50                 a0 = u64 [sp + 0x50]
 64064: 82 73 10                 t1 = u64 [a0 + 0x10]
 64067: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 64071: 7b 17 28                 u64 [sp + 0x28] = a0
 64074: 51 03 ca 00              jump @5001 if t1 == 0
      :                          @4988
 64078: 82 17 58                 a0 = u64 [sp + 0x58]
 64081: ae 37 b4 01              jump @5022 if a0 >=u t1
      :                          @4989
 64085: 82 18 50                 a1 = u64 [sp + 0x50]
 64088: 82 85 08                 s0 = u64 [a1 + 0x8]
 64091: 33 06                    s1 = 0
 64093: 96 78 18                 a1 = a0 * 0x18
 64096: c8 85 07                 a0 = s0 + a1
 64099: 95 78 10                 a1 = a0 + 0x10
 64102: 7b 18 90 00              u64 [sp + 0x90] = a1
 64106: 95 77 08                 a0 = a0 + 0x8
 64109: 7b 17 88 00              u64 [sp + 0x88] = a0
 64113: 82 15 48                 s0 = u64 [sp + 0x48]
 64116: 7b 13 60                 u64 [sp + 0x60] = t1
 64119: 7b 12 10                 u64 [sp + 0x10] = t0
 64122: 28 50                    jump @4994
      :                          @4990
 64124: 82 17 28                 a0 = u64 [sp + 0x28]
 64127: 7b 17                    u64 [sp] = a0
 64129: 64 67                    a0 = s1
 64131: 82 18 50                 a1 = u64 [sp + 0x50]
 64134: 82 1b 70                 a4 = u64 [sp + 0x70]
 64137: 82 1c 38                 a5 = u64 [sp + 0x38]
 64140: 82 14 18                 t2 = u64 [sp + 0x18]
 64143: 50 20 54 03 f7 fe        ra = 852, jump @4981
      :                          @4991 [@dyn 426]
 64149: 82 1a 30                 a3 = u64 [sp + 0x30]
 64152: 82 19 40                 a2 = u64 [sp + 0x40]
 64155: 82 12 10                 t0 = u64 [sp + 0x10]
 64158: 82 1b 70                 a4 = u64 [sp + 0x70]
 64161: 82 10 98 00              ra = u64 [sp + 0x98]
 64165: 64 07                    a0 = ra
 64167: 82 18 20                 a1 = u64 [sp + 0x20]
 64170: ae 86 58 01              jump @5019 if s1 >=u a1
      :                          @4992
 64174: 82 18 68                 a1 = u64 [sp + 0x68]
 64177: 82 83                    t1 = u64 [a1]
 64179: 82 77                    a0 = u64 [a0]
 64181: e6 73 07                 a0 = minu(t1, a0)
 64184: 7b 87                    u64 [a1] = a0
 64186: 82 13 60                 t1 = u64 [sp + 0x60]
 64189: 01                       fallthrough
      :                          @4993
 64190: 95 66 01                 s1 = s1 + 0x1
 64193: 95 00 08                 ra = ra + 0x8
 64196: 95 55 10                 s0 = s0 + 0x10
 64199: aa 63 4d                 jump @5001 if t1 == s1
      :                          @4994
 64202: 82 17 90 00              a0 = u64 [sp + 0x90]
 64206: 82 78                    a1 = u64 [a0]
 64208: ae 86 2e 01              jump @5015 if s1 >=u a1
      :                          @4995
 64212: 82 17 88 00              a0 = u64 [sp + 0x88]
 64216: 82 77                    a0 = u64 [a0]
 64218: c8 67 07                 a0 = a0 + s1
 64221: 7c 77                    a0 = u8 [a0]
 64223: 51 07 df                 jump @4993 if a0 == 0
      :                          @4996
 64226: ae 26 1d 01              jump @5016 if s1 >=u t0
      :                          @4997
 64230: 7b 10 98 00              u64 [sp + 0x98] = ra
 64234: 82 57                    a0 = u64 [s0]
 64236: 51 07 90                 jump @4990 if a0 == 0
      :                          @4998
 64239: 82 17 80 00              a0 = u64 [sp + 0x80]
 64243: ae 76 0e 01              jump @5018 if s1 >=u a0
      :                          @4999
 64247: 82 17 78                 a0 = u64 [sp + 0x78]
 64250: c8 67 07                 a0 = a0 + s1
 64253: 7c 77                    a0 = u8 [a0]
 64255: 82 10 98 00              ra = u64 [sp + 0x98]
 64259: 51 07 bb                 jump @4993 if a0 == 0
      :                          @5000
 64262: 97 67 04                 a0 = s1 << 0x4
 64265: 82 18 48                 a1 = u64 [sp + 0x48]
 64268: c8 87 07                 a0 = a0 + a1
 64271: 95 77 08                 a0 = a0 + 0x8
 64274: 28 9c                    jump @4992
      :                          @5001
 64276: 82 18 08                 a1 = u64 [sp + 0x8]
 64279: 82 87                    a0 = u64 [a1]
 64281: 51 07 ed 00              jump @5023 if a0 == 0
      :                          @5002
 64285: 95 87 08                 a0 = a1 + 0x8
 64288: 82 18 68                 a1 = u64 [sp + 0x68]
 64291: 82 88                    a1 = u64 [a1]
 64293: 82 77                    a0 = u64 [a0]
 64295: ab 78 c5 00              jump @5014 if a1 != a0
      :                          @5003
 64299: 33 08                    a1 = 0
 64301: 49 21 a0 00              u64 [sp + 160] = 0
 64305: 33 07 08                 a0 = 0x8
 64308: 82 b6 10                 s1 = u64 [a4 + 0x10]
 64311: 82 b9 08                 a2 = u64 [a4 + 0x8]
 64314: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 64318: 49 21 b0 00              u64 [sp + 176] = 0
 64322: 97 6a 03                 a3 = s1 << 0x3
 64325: c8 a9 09                 a2 = a2 + a3
 64328: 95 9a f8                 a3 = a2 + 0xfffffffffffffff8
 64331: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 64334: 33 0c ff                 a5 = 0xffffffffffffffff
 64337: 28 1d                    jump @5005
      :                          @5004
 64339: 97 89 03                 a2 = a1 << 0x3
 64342: c8 79 09                 a2 = a2 + a0
 64345: 7b 95                    u64 [a2] = s0
 64347: 95 88 01                 a1 = a1 + 0x1
 64350: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 64354: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 64357: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 64360: 82 19 58                 a2 = u64 [sp + 0x58]
 64363: aa 95 45                 jump @5010 if s0 == a2
      :                          @5005
 64366: aa c6 42                 jump @5010 if s1 == a5
      :                          @5006
 64369: 7b b6 10                 u64 [a4 + 0x10] = s1
 64372: 82 a5                    s0 = u64 [a3]
 64374: 82 19 80 00              a2 = u64 [sp + 0x80]
 64378: ae 95 86 00              jump @5017 if s0 >=u a2
      :                          @5007
 64382: 82 19 78                 a2 = u64 [sp + 0x78]
 64385: c8 59 09                 a2 = a2 + s0
 64388: 46 09                    u8 [a2 + 0] = 0
 64390: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 64394: ab 98 c9                 jump @5004 if a1 != a2
      :                          @5008
 64397: 95 17 a0 00              a0 = sp + 0xa0
 64401: 7b 1a 98 00              u64 [sp + 0x98] = a3
 64405: 50 20 56 03 7a 57 ff     ra = 854, jump @1581
      :                          @5009 [@dyn 427]
 64412: 33 0c ff                 a5 = 0xffffffffffffffff
 64415: 82 1a 98 00              a3 = u64 [sp + 0x98]
 64419: 82 1b 70                 a4 = u64 [sp + 0x70]
 64422: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 64426: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 64430: 28 a5                    jump @5004
      :                          @5010
 64432: 82 15 28                 s0 = u64 [sp + 0x28]
 64435: 82 58 10                 a1 = u64 [s0 + 0x10]
 64438: 82 57                    a0 = u64 [s0]
 64440: ab 78 10                 jump @5013 if a1 != a0
      :                          @5011
 64443: 64 57                    a0 = s0
 64445: 50 20 58 03 d0 56 ff     ra = 856, jump @1569
      :                          @5012 [@dyn 428]
 64452: 82 58 10                 a1 = u64 [s0 + 0x10]
 64455: 01                       fallthrough
      :                          @5013
 64456: 82 57 08                 a0 = u64 [s0 + 0x8]
 64459: 82 19 b0 00              a2 = u64 [sp + 0xb0]
 64463: 96 8a 18                 a3 = a1 * 0x18
 64466: c8 a7 07                 a0 = a0 + a3
 64469: 7b 79 10                 u64 [a0 + 0x10] = a2
 64472: 82 19 a8 00              a2 = u64 [sp + 0xa8]
 64476: 7b 79 08                 u64 [a0 + 0x8] = a2
 64479: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 64483: 7b 79                    u64 [a0] = a2
 64485: 95 88 01                 a1 = a1 + 0x1
 64488: 7b 58 10                 u64 [s0 + 0x10] = a1
 64491: 01                       fallthrough
      :                          @5014
 64492: 82 10 c8 00              ra = u64 [sp + 0xc8]
 64496: 82 15 c0 00              s0 = u64 [sp + 0xc0]
 64500: 82 16 b8 00              s1 = u64 [sp + 0xb8]
 64504: 95 11 d0 00              sp = sp + 0xd0
 64508: 32 00                    ret
      :                          @5015
 64510: 00                       trap
      :                          @5016
 64511: 00                       trap
      :                          @5017
 64512: 00                       trap
      :                          @5018
 64513: 00                       trap
      :                          @5019
 64514: 00                       trap
      :                          @5020
 64515: 00                       trap
      :                          @5021
 64516: 00                       trap
      :                          @5022
 64517: 00                       trap
      :                          @5023
 64518: 00                       trap
      :                          @5024
 64519: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 64523: 7b 10 88 00              u64 [sp + 0x88] = ra
 64527: 7b 15 80 00              u64 [sp + 0x80] = s0
 64531: 7b 16 78                 u64 [sp + 0x78] = s1
 64534: 82 7b 10                 a4 = u64 [a0 + 0x10]
 64537: 51 0b cd 01              jump @5060 if a4 == 0
      :                          @5025
 64541: 64 75                    s0 = a0
 64543: 82 77 08                 a0 = u64 [a0 + 0x8]
 64546: 82 76 10                 s1 = u64 [a0 + 0x10]
 64549: 97 69 04                 a2 = s1 << 0x4
 64552: 7b 19 08                 u64 [sp + 0x8] = a2
 64555: 51 06 2c 01              jump @5048 if s1 == 0
      :                          @5026
 64559: 7b 15 20                 u64 [sp + 0x20] = s0
 64562: 98 67 3b                 a0 = s1 >> 0x3b
 64565: 52 07 b3 01              jump @5062 if a0 != 0
      :                          @5027
 64569: 7b 1b 40                 u64 [sp + 0x40] = a4
 64572: 88 72 01                 t0 = a0 <u 0x1
 64575: 97 22 03                 t0 = t0 << 0x3
 64578: 33 04 b0 02 03           t2 = 0x302b0
 64583: 33 03 00 00 10           t1 = 0x100000
 64588: c8 34 00                 ra = t2 + t1
 64591: 01                       fallthrough
      :                          @5028
 64592: 82 0b                    a4 = u64 [ra]
 64594: c8 9b 0c                 a5 = a4 + a2
 64597: ac bc 92 01              jump @5061 if a5 <u a4
      :                          @5029
 64601: c8 2c 07                 a0 = a5 + t0
 64604: d8 c7 05                 s0 = a0 <u a5
 64607: d8 73 07                 a0 = t1 <u a0
 64610: d4 57 07                 a0 = a0 | s0
 64613: 52 07 82 01              jump @5061 if a0 != 0
      :                          @5030
 64617: c9 c4 05                 s0 = t2 - a5
 64620: c8 35 0a                 a3 = s0 + t1
 64623: 84 a5 07                 s0 = a3 & 0x7
 64626: c8 5c 0c                 a5 = a5 + s0
 64629: 01                       fallthrough
      :                          @5031
 64630: 82 07                    a0 = u64 [ra]
 64632: ab b7 d8                 jump @5028 if a0 != a4
      :                          @5032
 64635: 7b 0c                    u64 [ra] = a5
 64637: c9 5a 05                 s0 = a3 - s0
 64640: 64 57                    a0 = s0
 64642: 33 08                    a1 = 0
 64644: 50 20 5a 03 89 0f 02     ra = 858, jump @13689
      :                          @5033 [@dyn 429]
 64651: 33 03                    t1 = 0
 64653: 7b 16 48                 u64 [sp + 0x48] = s1
 64656: 7b 15                    u64 [sp] = s0
 64658: 7b 15 50                 u64 [sp + 0x50] = s0
 64661: 7b 16 58                 u64 [sp + 0x58] = s1
 64664: 33 07 01                 a0 = 0x1
 64667: 82 18 40                 a1 = u64 [sp + 0x40]
 64670: e4 78 07                 a0 = maxu(a1, a0)
 64673: 7b 17 18                 u64 [sp + 0x18] = a0
 64676: 33 05 b0 02 03           s0 = 0x302b0
 64681: 33 0c 00 00 10           a5 = 0x100000
 64686: 7b 15 10                 u64 [sp + 0x10] = s0
 64689: c8 c5 05                 s0 = s0 + a5
 64692: 33 0b                    a4 = 0
 64694: 33 02 01                 t0 = 0x1
 64697: 28 18                    jump @5036
      :                          @5034
 64699: 82 13 40                 t1 = u64 [sp + 0x40]
 64702: c8 73 03                 t1 = t1 + a0
 64705: 82 19 30                 a2 = u64 [sp + 0x30]
 64708: 82 17 18                 a0 = u64 [sp + 0x18]
 64711: aa 79 dc 00              jump @5051 if a2 == a0
      :                          @5035
 64715: 64 9b                    a4 = a2
 64717: 95 92 01                 t0 = a2 + 0x1
 64720: 01                       fallthrough
      :                          @5036
 64721: 82 58                    a1 = u64 [s0]
 64723: c8 68 07                 a0 = a1 + s1
 64726: ac 87 0f 01              jump @5059 if a0 <u a1
      :                          @5037
 64730: 95 79 01                 a2 = a0 + 0x1
 64733: 88 9a 01                 a3 = a2 <u 0x1
 64736: d8 9c 09                 a2 = a5 <u a2
 64739: d4 a9 09                 a2 = a2 | a3
 64742: 52 09 ff 00              jump @5059 if a2 != 0
      :                          @5038
 64746: 82 59                    a2 = u64 [s0]
 64748: ab 89 e5                 jump @5036 if a2 != a1
      :                          @5039
 64751: 7b 57                    u64 [s0] = a0
 64753: 7b 12 30                 u64 [sp + 0x30] = t0
 64756: 7b 13 40                 u64 [sp + 0x40] = t1
 64759: 82 18 10                 a1 = u64 [sp + 0x10]
 64762: c9 78 07                 a0 = a1 - a0
 64765: c8 c7 07                 a0 = a0 + a5
 64768: 7b 17 38                 u64 [sp + 0x38] = a0
 64771: 33 08                    a1 = 0
 64773: 64 69                    a2 = s1
 64775: 7b 1b 28                 u64 [sp + 0x28] = a4
 64778: 50 20 5c 03 03 0f 02     ra = 860, jump @13689
      :                          @5040 [@dyn 430]
 64785: 7b 16 60                 u64 [sp + 0x60] = s1
 64788: 82 17 38                 a0 = u64 [sp + 0x38]
 64791: 7b 17 68                 u64 [sp + 0x68] = a0
 64794: 7b 16 70                 u64 [sp + 0x70] = s1
 64797: 95 19 60                 a2 = sp + 0x60
 64800: 95 1a 48                 a3 = sp + 0x48
 64803: 82 17 28                 a0 = u64 [sp + 0x28]
 64806: 82 18 20                 a1 = u64 [sp + 0x20]
 64809: 50 20 5e 03 c0 00        ra = 862, jump @5063
      :                          @5041 [@dyn 431]
 64815: 82 12 38                 t0 = u64 [sp + 0x38]
 64818: 33 0c 00 00 10           a5 = 0x100000
 64823: ac 6c 84                 jump @5034 if a5 <u s1
      :                          @5042
 64826: 82 58                    a1 = u64 [s0]
 64828: c9 85 09                 a2 = s0 - a1
 64831: ab 29 7c ff              jump @5034 if a2 != t0
      :                          @5043
 64835: c9 68 09                 a2 = a1 - s1
 64838: 01                       fallthrough
      :                          @5044
 64839: 82 5a                    a3 = u64 [s0]
 64841: ab 8a f1                 jump @5042 if a3 != a1
      :                          @5045
 64844: 7b 59                    u64 [s0] = a2
 64846: 33 0b                    a4 = 0
 64848: 01                       fallthrough
      :                          @5046
 64849: ab 8a e9                 jump @5042 if a3 != a1
      :                          @5047
 64852: 28 67 ff                 jump @5034
      :                          @5048
 64855: 33 03                    t1 = 0
 64857: 33 07                    a0 = 0
 64859: 49 11 48                 u64 [sp + 72] = 0
 64862: 49 01 08                 u64 [sp + 0] = 0x8
 64865: 49 11 50 08              u64 [sp + 80] = 0x8
 64869: 49 11 58                 u64 [sp + 88] = 0
 64872: 33 09 01                 a2 = 0x1
 64875: e4 9b 09                 a2 = maxu(a4, a2)
 64878: 7b 19 30                 u64 [sp + 0x30] = a2
 64881: 01                       fallthrough
      :                          @5049
 64882: 7b 13 40                 u64 [sp + 0x40] = t1
 64885: 95 79 01                 a2 = a0 + 0x1
 64888: 7b 19 38                 u64 [sp + 0x38] = a2
 64891: 49 11 60                 u64 [sp + 96] = 0
 64894: 49 11 68 01              u64 [sp + 104] = 0x1
 64898: 49 11 70                 u64 [sp + 112] = 0
 64901: 95 19 60                 a2 = sp + 0x60
 64904: 95 1a 48                 a3 = sp + 0x48
 64907: 64 58                    a1 = s0
 64909: 50 20 60 03 5c           ra = 864, jump @5063
      :                          @5050 [@dyn 432]
 64914: 82 13 40                 t1 = u64 [sp + 0x40]
 64917: c8 73 03                 t1 = t1 + a0
 64920: 82 1a 38                 a3 = u64 [sp + 0x38]
 64923: 64 a7                    a0 = a3
 64925: 82 19 30                 a2 = u64 [sp + 0x30]
 64928: ab a9 d2                 jump @5049 if a2 != a3
      :                          @5051
 64931: 82 12 08                 t0 = u64 [sp + 0x8]
 64934: 82 15                    s0 = u64 [sp]
 64936: 51 06 2a                 jump @5058 if s1 == 0
      :                          @5052
 64939: 56 36 00 00 01 27        jump @5058 if s1 >u 65536
      :                          @5053
 64945: 33 07 b0 02 03           a0 = 0x302b0
 64950: 95 77 00 00 10           a0 = a0 + 0x100000
 64955: 01                       fallthrough
      :                          @5054
 64956: 82 78                    a1 = u64 [a0]
 64958: c9 87 09                 a2 = a0 - a1
 64961: ab 59 11                 jump @5058 if a2 != s0
      :                          @5055
 64964: c9 28 09                 a2 = a1 - t0
 64967: 01                       fallthrough
      :                          @5056
 64968: 82 7a                    a3 = u64 [a0]
 64970: ab 8a f2                 jump @5054 if a3 != a1
      :                          @5057
 64973: 7b 79                    u64 [a0] = a2
 64975: 33 0b                    a4 = 0
 64977: 01                       fallthrough
      :                          @5058
 64978: 64 37                    a0 = t1
 64980: 82 10 88 00              ra = u64 [sp + 0x88]
 64984: 82 15 80 00              s0 = u64 [sp + 0x80]
 64988: 82 16 78                 s1 = u64 [sp + 0x78]
 64991: 95 11 90 00              sp = sp + 0x90
 64995: 32 00                    ret
      :                          @5059
 64997: 00                       trap
      :                          @5060
 64998: 00                       trap
      :                          @5061
 64999: 00                       trap
      :                          @5062
 65000: 00                       trap
      :                          @5063
 65001: 95 11 88                 sp = sp + 0xffffffffffffff88
 65004: 7b 10 70                 u64 [sp + 0x70] = ra
 65007: 7b 15 68                 u64 [sp + 0x68] = s0
 65010: 7b 16 60                 u64 [sp + 0x60] = s1
 65013: 64 82                    t0 = a1
 65015: 82 88 10                 a1 = u64 [a1 + 0x10]
 65018: 7b 1a 50                 u64 [sp + 0x50] = a3
 65021: 7b 19 48                 u64 [sp + 0x48] = a2
 65024: 51 08 dd 00              jump @5082 if a1 == 0
      :                          @5064
 65028: 82 29 08                 a2 = u64 [t0 + 0x8]
 65031: 82 9a 10                 a3 = u64 [a2 + 0x10]
 65034: 51 0a bc 00              jump @5077 if a3 == 0
      :                          @5065
 65038: ae 87 d0 00              jump @5083 if a0 >=u a1
      :                          @5066
 65042: 33 05                    s0 = 0
 65044: 7b 17 08                 u64 [sp + 0x8] = a0
 65047: 96 78 18                 a1 = a0 * 0x18
 65050: c8 89 07                 a0 = a2 + a1
 65053: 95 7b 10                 a4 = a0 + 0x10
 65056: 82 19 48                 a2 = u64 [sp + 0x48]
 65059: 82 93 10                 t1 = u64 [a2 + 0x10]
 65062: 82 18 50                 a1 = u64 [sp + 0x50]
 65065: 82 86 08                 s1 = u64 [a1 + 0x8]
 65068: 82 94 08                 t2 = u64 [a2 + 0x8]
 65071: 82 88 10                 a1 = u64 [a1 + 0x10]
 65074: 7b 18 40                 u64 [sp + 0x40] = a1
 65077: 95 7c 08                 a5 = a0 + 0x8
 65080: 7b 16                    u64 [sp] = s1
 65082: 33 09 01                 a2 = 0x1
 65085: 7b 12 38                 u64 [sp + 0x38] = t0
 65088: 7b 1a 30                 u64 [sp + 0x30] = a3
 65091: 7b 13 28                 u64 [sp + 0x28] = t1
 65094: 7b 1b 20                 u64 [sp + 0x20] = a4
 65097: 7b 14 18                 u64 [sp + 0x18] = t2
 65100: 7b 1c 10                 u64 [sp + 0x10] = a5
 65103: 28 0e                    jump @5068
      :                          @5067
 65105: 95 55 01                 s0 = s0 + 0x1
 65108: d8 a5 09                 a2 = s0 <u a3
 65111: 95 66 10                 s1 = s1 + 0x10
 65114: aa 5a 6f                 jump @5078 if a3 == s0
      :                          @5068
 65117: 82 b8                    a1 = u64 [a4]
 65119: ae 85 7b                 jump @5079 if s0 >=u a1
      :                          @5069
 65122: 82 c7                    a0 = u64 [a5]
 65124: c8 57 07                 a0 = a0 + s0
 65127: 7c 77                    a0 = u8 [a0]
 65129: 51 07 e8                 jump @5067 if a0 == 0
      :                          @5070
 65132: ae 35 6f                 jump @5080 if s0 >=u t1
      :                          @5071
 65135: c8 54 07                 a0 = t2 + s0
 65138: 7c 78                    a1 = u8 [a0]
 65140: 52 08 dd                 jump @5067 if a1 != 0
      :                          @5072
 65143: 33 08 01                 a1 = 0x1
 65146: 78 78                    u8 [a0] = a1
 65148: 82 17 40                 a0 = u64 [sp + 0x40]
 65151: ae 75 5d                 jump @5081 if s0 >=u a0
      :                          @5073
 65154: 82 67                    a0 = u64 [s1]
 65156: 51 07 2f                 jump @5076 if a0 == 0
      :                          @5074
 65159: 82 67 08                 a0 = u64 [s1 + 0x8]
 65162: 64 28                    a1 = t0
 65164: 7b 19 58                 u64 [sp + 0x58] = a2
 65167: 82 19 48                 a2 = u64 [sp + 0x48]
 65170: 82 1a 50                 a3 = u64 [sp + 0x50]
 65173: 50 20 62 03 54 ff        ra = 866, jump @5063
      :                          @5075 [@dyn 433]
 65179: 82 1c 10                 a5 = u64 [sp + 0x10]
 65182: 82 14 18                 t2 = u64 [sp + 0x18]
 65185: 82 1b 20                 a4 = u64 [sp + 0x20]
 65188: 82 13 28                 t1 = u64 [sp + 0x28]
 65191: 82 19 58                 a2 = u64 [sp + 0x58]
 65194: 82 1a 30                 a3 = u64 [sp + 0x30]
 65197: 82 12 38                 t0 = u64 [sp + 0x38]
 65200: 51 07 a1                 jump @5067 if a0 == 0
      :                          @5076
 65203: 49 06 01                 u64 [s1 + 0] = 0x1
 65206: 97 55 04                 s0 = s0 << 0x4
 65209: 82 17                    a0 = u64 [sp]
 65211: c8 75 05                 s0 = s0 + a0
 65214: 82 17 08                 a0 = u64 [sp + 0x8]
 65217: 7b 57 08                 u64 [s0 + 0x8] = a0
 65220: 28 05                    jump @5078
      :                          @5077
 65222: 33 09                    a2 = 0
 65224: 01                       fallthrough
      :                          @5078
 65225: 84 97 01                 a0 = a2 & 0x1
 65228: 82 10 70                 ra = u64 [sp + 0x70]
 65231: 82 15 68                 s0 = u64 [sp + 0x68]
 65234: 82 16 60                 s1 = u64 [sp + 0x60]
 65237: 95 11 78                 sp = sp + 0x78
 65240: 32 00                    ret
      :                          @5079
 65242: 00                       trap
      :                          @5080
 65243: 00                       trap
      :                          @5081
 65244: 00                       trap
      :                          @5082
 65245: 00                       trap
      :                          @5083
 65246: 00                       trap
      :                          @5084
 65247: 95 11 48 ff              sp = sp + 0xffffffffffffff48
 65251: 7b 10 b0 00              u64 [sp + 0xb0] = ra
 65255: 7b 15 a8 00              u64 [sp + 0xa8] = s0
 65259: 49 21 a0 00 0a           u64 [sp + 160] = 0xa
 65264: 64 74                    t2 = a0
 65266: 82 78 10                 a1 = u64 [a0 + 0x10]
 65269: 51 08 9a 04              jump @5180 if a1 == 0
      :                          @5085
 65273: 98 87 3c                 a0 = a1 >> 0x3c
 65276: 52 07 8f 05              jump @5221 if a0 != 0
      :                          @5086
 65280: 88 72 01                 t0 = a0 <u 0x1
 65283: 7b 18 38                 u64 [sp + 0x38] = a1
 65286: 97 87 03                 a0 = a1 << 0x3
 65289: 97 22 03                 t0 = t0 << 0x3
 65292: 33 00 b0 02 03           ra = 0x302b0
 65297: 33 03 00 00 10           t1 = 0x100000
 65302: c8 30 0a                 a3 = ra + t1
 65305: 01                       fallthrough
      :                          @5087
 65306: 82 ab                    a4 = u64 [a3]
 65308: c8 7b 0c                 a5 = a4 + a0
 65311: ac bc 67 05              jump @5216 if a5 <u a4
      :                          @5088
 65315: c8 2c 09                 a2 = a5 + t0
 65318: d8 c9 06                 s1 = a2 <u a5
 65321: d8 93 09                 a2 = t1 <u a2
 65324: d4 69 09                 a2 = a2 | s1
 65327: 52 09 57 05              jump @5216 if a2 != 0
      :                          @5089
 65331: c9 c0 06                 s1 = ra - a5
 65334: c8 36 06                 s1 = s1 + t1
 65337: 84 69 07                 a2 = s1 & 0x7
 65340: c8 9c 0c                 a5 = a5 + a2
 65343: 01                       fallthrough
      :                          @5090
 65344: 82 a8                    a1 = u64 [a3]
 65346: ab b8 d8                 jump @5087 if a1 != a4
      :                          @5091
 65349: 7b ac                    u64 [a3] = a5
 65351: 33 05                    s0 = 0
 65353: c9 96 06                 s1 = s1 - a2
 65356: 33 08                    a1 = 0
 65358: 64 6a                    a3 = s1
 65360: 82 1b 38                 a4 = u64 [sp + 0x38]
 65363: 01                       fallthrough
      :                          @5092
 65364: 95 89 01                 a2 = a1 + 0x1
 65367: 7b a8                    u64 [a3] = a1
 65369: 95 aa 08                 a3 = a3 + 0x8
 65372: 64 98                    a1 = a2
 65374: ab 9b f6                 jump @5092 if a4 != a2
      :                          @5093
 65377: 7b 16 20                 u64 [sp + 0x20] = s1
 65380: 7b 17 10                 u64 [sp + 0x10] = a0
 65383: 53 1b 02 31 04           jump @5181 if a4 <u 2
      :                          @5094
 65388: 82 40 08                 ra = u64 [t2 + 0x8]
 65391: 95 07 10                 a0 = ra + 0x10
 65394: 7b 17 08                 u64 [sp + 0x8] = a0
 65397: 33 03 ff                 t1 = 0xffffffffffffffff
 65400: 33 07 b0 02 03           a0 = 0x302b0
 65405: 7b 17 30                 u64 [sp + 0x30] = a0
 65408: 95 77 00 00 10           a0 = a0 + 0x100000
 65413: 7b 17 40                 u64 [sp + 0x40] = a0
 65416: 7b 1b 70                 u64 [sp + 0x70] = a4
 65419: 7b 1b 68                 u64 [sp + 0x68] = a4
 65422: 64 b6                    s1 = a4
 65424: 7b 1b 78                 u64 [sp + 0x78] = a4
 65427: 7b 14 18                 u64 [sp + 0x18] = t2
 65430: 7b 10 28                 u64 [sp + 0x28] = ra
 65433: 28 0a                    jump @5096
      :                          @5095
 65435: 82 18 68                 a1 = u64 [sp + 0x68]
 65438: 54 18 01 d3 04           jump @5210 if a1 <=u 1
      :                          @5096
 65443: 64 65                    s0 = s1
 65445: 7b 16 98 00              u64 [sp + 0x98] = s1
 65449: 7b 13 48                 u64 [sp + 0x48] = t1
 65452: 51 06 bc 00              jump @5111 if s1 == 0
      :                          @5097
 65456: 57 05 db 04              jump @5221 if s0 <s 0
      :                          @5098
 65460: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
 65463: 98 77 3f                 a0 = a0 >> 0x3f
 65466: 33 0c 00 00 10           a5 = 0x100000
 65471: 82 16 40                 s1 = u64 [sp + 0x40]
 65474: 01                       fallthrough
      :                          @5099
 65475: 82 69                    a2 = u64 [s1]
 65477: c8 59 08                 a1 = a2 + s0
 65480: ac 98 bf 04              jump @5217 if a1 <u a2
      :                          @5100
 65484: c8 78 0a                 a3 = a1 + a0
 65487: d8 8a 0b                 a4 = a3 <u a1
 65490: d8 ac 0a                 a3 = a5 <u a3
 65493: d4 ba 0a                 a3 = a3 | a4
 65496: 52 0a af 04              jump @5217 if a3 != 0
      :                          @5101
 65500: 82 6a                    a3 = u64 [s1]
 65502: ab 9a e5                 jump @5099 if a3 != a2
      :                          @5102
 65505: 7b 68                    u64 [s1] = a1
 65507: 33 0b                    a4 = 0
 65509: 82 16 30                 s1 = u64 [sp + 0x30]
 65512: c9 86 06                 s1 = s1 - a1
 65515: c8 c6 07                 a0 = s1 + a5
 65518: 7b 17 90 00              u64 [sp + 0x90] = a0
 65522: 33 08                    a1 = 0
 65524: 64 59                    a2 = s0
 65526: 50 20 64 03 17 0c 02     ra = 868, jump @13689
      :                          @5103 [@dyn 434]
 65533: 98 57 3c                 a0 = s0 >> 0x3c
 65536: 52 07 8b 04              jump @5221 if a0 != 0
      :                          @5104
 65540: 88 77 01                 a0 = a0 <u 0x1
 65543: 97 59 03                 a2 = s0 << 0x3
 65546: 97 72 03                 t0 = a0 << 0x3
 65549: 82 14 30                 t2 = u64 [sp + 0x30]
 65552: 33 03 00 00 10           t1 = 0x100000
 65557: 82 15 40                 s0 = u64 [sp + 0x40]
 65560: 01                       fallthrough
      :                          @5105
 65561: 82 58                    a1 = u64 [s0]
 65563: c8 98 0a                 a3 = a1 + a2
 65566: ac 8a 6a 04              jump @5218 if a3 <u a1
      :                          @5106
 65570: c8 2a 0b                 a4 = a3 + t0
 65573: d8 ab 0c                 a5 = a4 <u a3
 65576: d8 b3 0b                 a4 = t1 <u a4
 65579: d4 cb 0b                 a4 = a4 | a5
 65582: 52 0b 5a 04              jump @5218 if a4 != 0
      :                          @5107
 65586: c9 a4 0b                 a4 = t2 - a3
 65589: c8 3b 0b                 a4 = a4 + t1
 65592: 84 bc 07                 a5 = a4 & 0x7
 65595: c8 ca 0a                 a3 = a3 + a5
 65598: 01                       fallthrough
      :                          @5108
 65599: 82 57                    a0 = u64 [s0]
 65601: ab 87 d8                 jump @5105 if a0 != a1
      :                          @5109
 65604: 7b 5a                    u64 [s0] = a3
 65606: 33 06                    s1 = 0
 65608: c9 cb 07                 a0 = a4 - a5
 65611: 7b 17 88 00              u64 [sp + 0x88] = a0
 65615: 33 08                    a1 = 0
 65617: 50 20 66 03 bc 0b 02     ra = 870, jump @13689
      :                          @5110 [@dyn 435]
 65624: 82 14 18                 t2 = u64 [sp + 0x18]
 65627: 82 10 28                 ra = u64 [sp + 0x28]
 65630: 82 15 98 00              s0 = u64 [sp + 0x98]
 65634: 82 12 90 00              t0 = u64 [sp + 0x90]
 65638: 28 0b                    jump @5112
      :                          @5111
 65640: 49 21 88 00 08           u64 [sp + 136] = 0x8
 65645: 33 02 01                 t0 = 0x1
 65648: 01                       fallthrough
      :                          @5112
 65649: 49 21 80 00              u64 [sp + 128] = 0
 65653: 33 03                    t1 = 0
 65655: 82 18 68                 a1 = u64 [sp + 0x68]
 65658: 95 87 ff                 a0 = a1 + 0xffffffffffffffff
 65661: 7b 17 60                 u64 [sp + 0x60] = a0
 65664: 33 07 01                 a0 = 0x1
 65667: e4 78 0a                 a3 = maxu(a1, a0)
 65670: 7b 12 90 00              u64 [sp + 0x90] = t0
 65674: 28 06                    jump @5114
      :                          @5113
 65676: aa a3 8e 02              jump @5163 if t1 == a3
      :                          @5114
 65680: 33 09                    a2 = 0
 65682: 33 06                    s1 = 0
 65684: 64 32                    t0 = t1
 65686: 82 17 80 00              a0 = u64 [sp + 0x80]
 65690: 95 33 01                 t1 = t1 + 0x1
 65693: 82 1c 88 00              a5 = u64 [sp + 0x88]
 65697: 28 17                    jump @5117
      :                          @5115
 65699: 33 09 01                 a2 = 0x1
 65702: 7b 16 80 00              u64 [sp + 0x80] = s1
 65706: 01                       fallthrough
      :                          @5116
 65707: 95 66 01                 s1 = s1 + 0x1
 65710: 95 cc 08                 a5 = a5 + 0x8
 65713: 82 15 98 00              s0 = u64 [sp + 0x98]
 65717: aa 6a 39                 jump @5123 if a3 == s1
      :                          @5117
 65720: aa 65 6f 03              jump @5200 if s0 == s1
      :                          @5118
 65724: 82 1b 90 00              a4 = u64 [sp + 0x90]
 65728: c8 6b 0b                 a4 = a4 + s1
 65731: 7c bb                    a4 = u8 [a4]
 65733: 52 0b e6                 jump @5116 if a4 != 0
      :                          @5119
 65736: 52 19 01 db              jump @5115 if a2 != 1
      :                          @5120
 65740: 82 18 98 00              a1 = u64 [sp + 0x98]
 65744: 82 19 80 00              a2 = u64 [sp + 0x80]
 65748: ae 89 b1 03              jump @5215 if a2 >=u a1
      :                          @5121
 65752: 82 cb                    a4 = u64 [a5]
 65754: 97 99 03                 a2 = a2 << 0x3
 65757: 82 18 88 00              a1 = u64 [sp + 0x88]
 65761: c8 89 09                 a2 = a2 + a1
 65764: 82 95                    s0 = u64 [a2]
 65766: 33 09 01                 a2 = 0x1
 65769: ac b5 ba                 jump @5115 if s0 <u a4
      :                          @5122
 65772: 28 bf                    jump @5116
      :                          @5123
 65774: 51 09 9b 03              jump @5219 if a2 == 0
      :                          @5124
 65778: 82 18 80 00              a1 = u64 [sp + 0x80]
 65782: ae 58 88 03              jump @5212 if a1 >=u s0
      :                          @5125
 65786: 82 1c 90 00              a5 = u64 [sp + 0x90]
 65790: 64 86                    s1 = a1
 65792: c8 8c 09                 a2 = a5 + a1
 65795: 46 09 01                 u8 [a2 + 0] = 0x1
 65798: 82 18 60                 a1 = u64 [sp + 0x60]
 65801: aa 82 78                 jump @5138 if t0 == a1
      :                          @5126
 65804: 64 a7                    a0 = a3
 65806: 64 58                    a1 = s0
 65808: 64 c9                    a2 = a5
 65810: 82 1b 78                 a4 = u64 [sp + 0x78]
 65813: 64 c2                    t0 = a5
 65815: ae b6 51                 jump @5134 if s1 >=u a4
      :                          @5127
 65818: 33 09                    a2 = 0
 65820: 33 07                    a0 = 0
 65822: 82 1b 80 00              a4 = u64 [sp + 0x80]
 65826: 96 b8 18                 a1 = a4 * 0x18
 65829: c8 08 08                 a1 = a1 + ra
 65832: 95 8b 10                 a4 = a1 + 0x10
 65835: 95 8c 08                 a5 = a1 + 0x8
 65838: 28 26                    jump @5130
      :                          @5128
 65840: 82 c8                    a1 = u64 [a5]
 65842: 82 16 88 00              s1 = u64 [sp + 0x88]
 65846: c8 96 06                 s1 = s1 + a2
 65849: 82 65                    s0 = u64 [s1]
 65851: c8 98 08                 a1 = a1 + a2
 65854: 82 88                    a1 = u64 [a1]
 65856: c8 58 08                 a1 = a1 + s0
 65859: 82 15 98 00              s0 = u64 [sp + 0x98]
 65863: 7b 68                    u64 [s1] = a1
 65865: 01                       fallthrough
      :                          @5129
 65866: 95 77 01                 a0 = a0 + 0x1
 65869: 95 99 08                 a2 = a2 + 0x8
 65872: aa 7a 3c ff              jump @5113 if a3 == a0
      :                          @5130
 65876: aa 75 d3 02              jump @5200 if s0 == a0
      :                          @5131
 65880: c8 72 08                 a1 = t0 + a0
 65883: 7c 88                    a1 = u8 [a1]
 65885: 52 08 ed                 jump @5129 if a1 != 0
      :                          @5132
 65888: 82 b8                    a1 = u64 [a4]
 65890: ac 87 ce                 jump @5128 if a0 <u a1
      :                          @5133
 65893: 28 28 03                 jump @5223
      :                          @5134
 65896: 51 08 bf 02              jump @5200 if a1 == 0
      :                          @5135
 65900: 7c 9b                    a4 = u8 [a2]
 65902: 51 0b 1e 03              jump @5222 if a4 == 0
      :                          @5136
 65906: 95 99 01                 a2 = a2 + 0x1
 65909: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 65912: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 65915: 52 07 ed                 jump @5134 if a0 != 0
      :                          @5137
 65918: 28 0e ff                 jump @5113
      :                          @5138
 65921: 82 18 78                 a1 = u64 [sp + 0x78]
 65924: ae 87 09 03              jump @5223 if a0 >=u a1
      :                          @5139
 65928: 96 70 18                 ra = a0 * 0x18
 65931: 82 1b 28                 a4 = u64 [sp + 0x28]
 65934: c8 b0 00                 ra = ra + a4
 65937: 95 02 10                 t0 = ra + 0x10
 65940: 82 15 48                 s0 = u64 [sp + 0x48]
 65943: 82 19 80 00              a2 = u64 [sp + 0x80]
 65947: ae 89 e5 02              jump @5214 if a2 >=u a1
      :                          @5140
 65951: 97 9c 03                 a5 = a2 << 0x3
 65954: 82 18 88 00              a1 = u64 [sp + 0x88]
 65958: 7b 1c 58                 u64 [sp + 0x58] = a5
 65961: c8 c8 08                 a1 = a1 + a5
 65964: 82 88                    a1 = u64 [a1]
 65966: 33 0c                    a5 = 0
 65968: 64 96                    s1 = a2
 65970: 33 09                    a2 = 0
 65972: e6 85 05                 s0 = minu(s0, a1)
 65975: 7b 15 48                 u64 [sp + 0x48] = s0
 65978: 95 00 08                 ra = ra + 0x8
 65981: 96 68 18                 a1 = s1 * 0x18
 65984: c8 b8 08                 a1 = a1 + a4
 65987: 95 83 10                 t1 = a1 + 0x10
 65990: 7b 18 70                 u64 [sp + 0x70] = a1
 65993: 95 84 08                 t2 = a1 + 0x8
 65996: 82 1b 08                 a4 = u64 [sp + 0x8]
 65999: 01                       fallthrough
      :                          @5141
 66000: 82 28                    a1 = u64 [t0]
 66002: ae 89 b3 02              jump @5215 if a2 >=u a1
      :                          @5142
 66006: 82 38                    a1 = u64 [t1]
 66008: ae 89 ad 02              jump @5215 if a2 >=u a1
      :                          @5143
 66012: 82 08                    a1 = u64 [ra]
 66014: 82 45                    s0 = u64 [t2]
 66016: c8 c8 08                 a1 = a1 + a5
 66019: 82 86                    s1 = u64 [a1]
 66021: c8 c5 05                 s0 = s0 + a5
 66024: 82 55                    s0 = u64 [s0]
 66026: c8 65 05                 s0 = s0 + s1
 66029: 7b 85                    u64 [a1] = s0
 66031: 82 28                    a1 = u64 [t0]
 66033: ae 89 94 02              jump @5215 if a2 >=u a1
      :                          @5144
 66037: 82 18 78                 a1 = u64 [sp + 0x78]
 66040: aa 98 87 02              jump @5213 if a1 == a2
      :                          @5145
 66044: 82 b8                    a1 = u64 [a4]
 66046: ae 87 8f 02              jump @5223 if a0 >=u a1
      :                          @5146
 66050: 82 08                    a1 = u64 [ra]
 66052: c8 c8 08                 a1 = a1 + a5
 66055: 82 b5 f8                 s0 = u64 [a4 + 0xfffffffffffffff8]
 66058: 82 88                    a1 = u64 [a1]
 66060: 95 99 01                 a2 = a2 + 0x1
 66063: 97 76 03                 s1 = a0 << 0x3
 66066: c8 65 05                 s0 = s0 + s1
 66069: 7b 58                    u64 [s0] = a1
 66071: 95 bb 18                 a4 = a4 + 0x18
 66074: 95 cc 08                 a5 = a5 + 0x8
 66077: 82 15 98 00              s0 = u64 [sp + 0x98]
 66081: ab 9a af                 jump @5141 if a3 != a2
      :                          @5147
 66084: 82 17 20                 a0 = u64 [sp + 0x20]
 66087: 82 18 58                 a1 = u64 [sp + 0x58]
 66090: c8 87 07                 a0 = a0 + a1
 66093: 95 78 08                 a1 = a0 + 0x8
 66096: 82 19 80 00              a2 = u64 [sp + 0x80]
 66100: 85 96 ff                 s1 = a2 ^ 0xffffffffffffffff
 66103: c8 65 09                 a2 = s0 + s1
 66106: 97 99 03                 a2 = a2 << 0x3
 66109: 50 20 68 03 55 08 02     ra = 872, jump @13653
      :                          @5148 [@dyn 436]
 66116: 82 17 70                 a0 = u64 [sp + 0x70]
 66119: 82 78                    a1 = u64 [a0]
 66121: 7b 18 68                 u64 [sp + 0x68] = a1
 66124: 82 78 08                 a1 = u64 [a0 + 0x8]
 66127: 7b 18                    u64 [sp] = a1
 66129: 95 78 18                 a1 = a0 + 0x18
 66132: 7b 16 50                 u64 [sp + 0x50] = s1
 66135: 82 19 78                 a2 = u64 [sp + 0x78]
 66138: c8 96 06                 s1 = s1 + a2
 66141: 96 69 18                 a2 = s1 * 0x18
 66144: 50 20 6a 03 32 08 02     ra = 874, jump @13653
      :                          @5149 [@dyn 437]
 66151: 82 18 68                 a1 = u64 [sp + 0x68]
 66154: 82 16                    s1 = u64 [sp]
 66156: 82 17 78                 a0 = u64 [sp + 0x78]
 66159: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 66162: 82 14 18                 t2 = u64 [sp + 0x18]
 66165: 7b 17 70                 u64 [sp + 0x70] = a0
 66168: 7b 47 10                 u64 [t2 + 0x10] = a0
 66171: 82 1c 40                 a5 = u64 [sp + 0x40]
 66174: 51 08 23                 jump @5156 if a1 == 0
      :                          @5150
 66177: 56 38 00 00 02 20        jump @5156 if a1 >u 131072
      :                          @5151
 66183: 97 87 03                 a0 = a1 << 0x3
 66186: 01                       fallthrough
      :                          @5152
 66187: 82 c8                    a1 = u64 [a5]
 66189: c9 8c 09                 a2 = a5 - a1
 66192: ab 69 11                 jump @5156 if a2 != s1
      :                          @5153
 66195: c9 78 09                 a2 = a1 - a0
 66198: 01                       fallthrough
      :                          @5154
 66199: 82 ca                    a3 = u64 [a5]
 66201: ab 8a f2                 jump @5152 if a3 != a1
      :                          @5155
 66204: 7b c9                    u64 [a5] = a2
 66206: 33 0b                    a4 = 0
 66208: 01                       fallthrough
      :                          @5156
 66209: 95 56 ff                 s1 = s0 + 0xffffffffffffffff
 66212: 82 17 70                 a0 = u64 [sp + 0x70]
 66215: 51 07 7e                 jump @5165 if a0 == 0
      :                          @5157
 66218: 7b 16                    u64 [sp] = s1
 66220: 82 18 78                 a1 = u64 [sp + 0x78]
 66223: 96 87 18                 a0 = a1 * 0x18
 66226: 95 76 e8                 s1 = a0 + 0xffffffffffffffe8
 66229: 82 18 08                 a1 = u64 [sp + 0x8]
 66232: 01                       fallthrough
      :                          @5158
 66233: 82 8a                    a3 = u64 [a1]
 66235: 82 17 80 00              a0 = u64 [sp + 0x80]
 66239: ae a7 cb 01              jump @5220 if a0 >=u a3
      :                          @5159
 66243: 82 87 f8                 a0 = u64 [a1 + 0xfffffffffffffff8]
 66246: 82 19 58                 a2 = u64 [sp + 0x58]
 66249: c8 97 07                 a0 = a0 + a2
 66252: 7b 18 78                 u64 [sp + 0x78] = a1
 66255: 95 78 08                 a1 = a0 + 0x8
 66258: 82 19 50                 a2 = u64 [sp + 0x50]
 66261: c8 a9 09                 a2 = a2 + a3
 66264: 97 99 03                 a2 = a2 << 0x3
 66267: 7b 1a 68                 u64 [sp + 0x68] = a3
 66270: 50 20 6c 03 b4 07 02     ra = 876, jump @13653
      :                          @5160 [@dyn 438]
 66277: 82 18 78                 a1 = u64 [sp + 0x78]
 66280: 82 17 68                 a0 = u64 [sp + 0x68]
 66283: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 66286: 7b 87                    u64 [a1] = a0
 66288: 95 66 e8                 s1 = s1 + 0xffffffffffffffe8
 66291: 95 88 18                 a1 = a1 + 0x18
 66294: 52 06 c3                 jump @5158 if s1 != 0
      :                          @5161
 66297: 82 17 70                 a0 = u64 [sp + 0x70]
 66300: 7b 17 78                 u64 [sp + 0x78] = a0
 66303: 82 17 60                 a0 = u64 [sp + 0x60]
 66306: 7b 17 68                 u64 [sp + 0x68] = a0
 66309: 82 14 18                 t2 = u64 [sp + 0x18]
 66312: 82 13 48                 t1 = u64 [sp + 0x48]
 66315: 82 10 28                 ra = u64 [sp + 0x28]
 66318: 82 12 90 00              t0 = u64 [sp + 0x90]
 66322: 82 16                    s1 = u64 [sp]
 66324: 52 05 2b                 jump @5166 if s0 != 0
      :                          @5162
 66327: 28 84 fc                 jump @5095
      :                          @5163
 66330: 64 56                    s1 = s0
 66332: 82 13 48                 t1 = u64 [sp + 0x48]
 66335: 52 05 20                 jump @5166 if s0 != 0
      :                          @5164
 66338: 28 79 fc                 jump @5095
      :                          @5165
 66341: 49 11 70                 u64 [sp + 112] = 0
 66344: 49 11 78                 u64 [sp + 120] = 0
 66347: 82 17 60                 a0 = u64 [sp + 0x60]
 66350: 7b 17 68                 u64 [sp + 0x68] = a0
 66353: 82 13 48                 t1 = u64 [sp + 0x48]
 66356: 82 10 28                 ra = u64 [sp + 0x28]
 66359: 82 12 90 00              t0 = u64 [sp + 0x90]
 66363: 51 05 60 fc              jump @5095 if s0 == 0
      :                          @5166
 66367: 54 35 00 00 02 12        jump @5169 if s0 <=u 131072
      :                          @5167
 66373: 82 1c 40                 a5 = u64 [sp + 0x40]
 66376: 54 35 00 00 10 2a        jump @5174 if s0 <=u 1048576
      :                          @5168
 66382: 28 4d fc                 jump @5095
      :                          @5169
 66385: 97 57 03                 a0 = s0 << 0x3
 66388: 82 1c 40                 a5 = u64 [sp + 0x40]
 66391: 01                       fallthrough
      :                          @5170
 66392: 82 c8                    a1 = u64 [a5]
 66394: c9 8c 09                 a2 = a5 - a1
 66397: 82 1a 88 00              a3 = u64 [sp + 0x88]
 66401: ab a9 11                 jump @5174 if a2 != a3
      :                          @5171
 66404: c9 78 09                 a2 = a1 - a0
 66407: 01                       fallthrough
      :                          @5172
 66408: 82 ca                    a3 = u64 [a5]
 66410: ab 8a ee                 jump @5170 if a3 != a1
      :                          @5173
 66413: 7b c9                    u64 [a5] = a2
 66415: 33 0b                    a4 = 0
 66417: 01                       fallthrough
      :                          @5174
 66418: 82 c7                    a0 = u64 [a5]
 66420: c9 7c 08                 a1 = a5 - a0
 66423: ab 28 24 fc              jump @5095 if a1 != t0
      :                          @5175
 66427: c9 57 08                 a1 = a0 - s0
 66430: 01                       fallthrough
      :                          @5176
 66431: 82 c9                    a2 = u64 [a5]
 66433: ab 79 f1                 jump @5174 if a2 != a0
      :                          @5177
 66436: 7b c8                    u64 [a5] = a1
 66438: 33 0a                    a3 = 0
 66440: 01                       fallthrough
      :                          @5178
 66441: ab 79 e9                 jump @5174 if a2 != a0
      :                          @5179
 66444: 28 0f fc                 jump @5095
      :                          @5180
 66447: 82 40 08                 ra = u64 [t2 + 0x8]
 66450: 33 03 ff                 t1 = 0xffffffffffffffff
 66453: 28 97 00                 jump @5202
      :                          @5181
 66456: 49 11 70 01              u64 [sp + 112] = 0x1
 66460: 33 03 ff                 t1 = 0xffffffffffffffff
 66463: 01                       fallthrough
      :                          @5182
 66464: 33 07 b0 02 03           a0 = 0x302b0
 66469: 95 77 00 00 10           a0 = a0 + 0x100000
 66474: 82 1c 10                 a5 = u64 [sp + 0x10]
 66477: 82 16 20                 s1 = u64 [sp + 0x20]
 66480: 01                       fallthrough
      :                          @5183
 66481: 82 78                    a1 = u64 [a0]
 66483: c9 87 09                 a2 = a0 - a1
 66486: ab 69 15                 jump @5187 if a2 != s1
      :                          @5184
 66489: c9 c8 09                 a2 = a1 - a5
 66492: 01                       fallthrough
      :                          @5185
 66493: 82 7a                    a3 = u64 [a0]
 66495: ab 8a f2                 jump @5183 if a3 != a1
      :                          @5186
 66498: 7b 79                    u64 [a0] = a2
 66500: 33 0b                    a4 = 0
 66502: 82 40 08                 ra = u64 [t2 + 0x8]
 66505: 28 06                    jump @5188
      :                          @5187
 66507: 82 40 08                 ra = u64 [t2 + 0x8]
 66510: 01                       fallthrough
      :                          @5188
 66511: 82 17 70                 a0 = u64 [sp + 0x70]
 66514: 51 07 5a                 jump @5202 if a0 == 0
      :                          @5189
 66517: 7b 13 48                 u64 [sp + 0x48] = t1
 66520: 33 07                    a0 = 0
 66522: 33 03 18                 t1 = 0x18
 66525: 33 09 b0 02 03           a2 = 0x302b0
 66530: 95 9a 00 00 10           a3 = a2 + 0x100000
 66535: 33 02 00 00 02           t0 = 0x20000
 66540: 28 0b                    jump @5191
      :                          @5190
 66542: 95 77 01                 a0 = a0 + 0x1
 66545: 82 18 70                 a1 = u64 [sp + 0x70]
 66548: aa 87 34                 jump @5201 if a0 == a1
      :                          @5191
 66551: ca 37 0b                 a4 = a0 * t1
 66554: c8 0b 0b                 a4 = a4 + ra
 66557: 82 bc                    a5 = u64 [a4]
 66559: 51 0c ef                 jump @5190 if a5 == 0
      :                          @5192
 66562: ac c2 ec                 jump @5190 if t0 <u a5
      :                          @5193
 66565: 82 bb 08                 a4 = u64 [a4 + 0x8]
 66568: 97 cc 03                 a5 = a5 << 0x3
 66571: 01                       fallthrough
      :                          @5194
 66572: 82 a6                    s1 = u64 [a3]
 66574: c9 6a 09                 a2 = a3 - s1
 66577: ab b9 dd                 jump @5190 if a2 != a4
      :                          @5195
 66580: c9 c6 09                 a2 = s1 - a5
 66583: 01                       fallthrough
      :                          @5196
 66584: 82 a5                    s0 = u64 [a3]
 66586: ab 65 f2                 jump @5194 if s0 != s1
      :                          @5197
 66589: 7b a9                    u64 [a3] = a2
 66591: 33 08                    a1 = 0
 66593: 01                       fallthrough
      :                          @5198
 66594: ab 65 ea                 jump @5194 if s0 != s1
      :                          @5199
 66597: 28 c9                    jump @5190
      :                          @5200
 66599: 00                       trap
      :                          @5201
 66600: 82 13 48                 t1 = u64 [sp + 0x48]
 66603: 01                       fallthrough
      :                          @5202
 66604: 82 47                    a0 = u64 [t2]
 66606: 51 07 2f                 jump @5209 if a0 == 0
      :                          @5203
 66609: 33 08 aa aa 00           a1 = 0xaaaa
 66614: ac 78 27                 jump @5209 if a1 <u a0
      :                          @5204
 66617: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
 66620: 33 08 b0 02 03           a1 = 0x302b0
 66625: 95 88 00 00 10           a1 = a1 + 0x100000
 66630: 01                       fallthrough
      :                          @5205
 66631: 82 89                    a2 = u64 [a1]
 66633: c9 98 0a                 a3 = a1 - a2
 66636: ab 0a 11                 jump @5209 if a3 != ra
      :                          @5206
 66639: c8 79 0a                 a3 = a2 + a0
 66642: 01                       fallthrough
      :                          @5207
 66643: 82 8b                    a4 = u64 [a1]
 66645: ab 9b f2                 jump @5205 if a4 != a2
      :                          @5208
 66648: 7b 8a                    u64 [a1] = a3
 66650: 33 0c                    a5 = 0
 66652: 01                       fallthrough
      :                          @5209
 66653: 64 37                    a0 = t1
 66655: 82 10 b0 00              ra = u64 [sp + 0xb0]
 66659: 82 15 a8 00              s0 = u64 [sp + 0xa8]
 66663: 82 16 a0 00              s1 = u64 [sp + 0xa0]
 66667: 95 11 b8 00              sp = sp + 0xb8
 66671: 32 00                    ret
      :                          @5210
 66673: 82 18 38                 a1 = u64 [sp + 0x38]
 66676: 54 38 00 00 02 2c ff     jump @5182 if a1 <=u 131072
      :                          @5211
 66683: 28 54 ff                 jump @5188
      :                          @5212
 66686: 00                       trap
      :                          @5213
 66687: 00                       trap
      :                          @5214
 66688: 82 27                    a0 = u64 [t0]
 66690: 51 07 0c                 jump @5224 if a0 == 0
      :                          @5215
 66693: 00                       trap
      :                          @5216
 66694: 00                       trap
      :                          @5217
 66695: 00                       trap
      :                          @5218
 66696: 00                       trap
      :                          @5219
 66697: 00                       trap
      :                          @5220
 66698: 00                       trap
      :                          @5221
 66699: 00                       trap
      :                          @5222
 66700: 00                       trap
      :                          @5223
 66701: 00                       trap
      :                          @5224
 66702: 00                       trap
      :                          @5225
 66703: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 66706: 7b 10 48                 u64 [sp + 0x48] = ra
 66709: 7b 15 40                 u64 [sp + 0x40] = s0
 66712: 7b 16 38                 u64 [sp + 0x38] = s1
 66715: 82 72 10                 t0 = u64 [a0 + 0x10]
 66718: 51 02 8d 01              jump @5254 if t0 == 0
      :                          @5226
 66722: 98 29 3c                 a2 = t0 >> 0x3c
 66725: 52 09 4c 02              jump @5283 if a2 != 0
      :                          @5227
 66729: 7b 17 28                 u64 [sp + 0x28] = a0
 66732: 7b 18 30                 u64 [sp + 0x30] = a1
 66735: 88 90 01                 ra = a2 <u 0x1
 66738: 97 27 03                 a0 = t0 << 0x3
 66741: 97 00 03                 ra = ra << 0x3
 66744: 33 05 b0 02 03           s0 = 0x302b0
 66749: 33 08 00 00 10           a1 = 0x100000
 66754: c8 85 0c                 a5 = s0 + a1
 66757: 01                       fallthrough
      :                          @5228
 66758: 82 ca                    a3 = u64 [a5]
 66760: c8 7a 09                 a2 = a3 + a0
 66763: ac a9 25 02              jump @5282 if a2 <u a3
      :                          @5229
 66767: c8 09 0b                 a4 = a2 + ra
 66770: d8 9b 06                 s1 = a4 <u a2
 66773: d8 b8 0b                 a4 = a1 <u a4
 66776: d4 6b 0b                 a4 = a4 | s1
 66779: 52 0b 15 02              jump @5282 if a4 != 0
      :                          @5230
 66783: c9 95 0b                 a4 = s0 - a2
 66786: c8 8b 0b                 a4 = a4 + a1
 66789: 84 b6 07                 s1 = a4 & 0x7
 66792: c8 69 09                 a2 = a2 + s1
 66795: 01                       fallthrough
      :                          @5231
 66796: 82 c3                    t1 = u64 [a5]
 66798: ab a3 d8                 jump @5228 if t1 != a3
      :                          @5232
 66801: 7b c9                    u64 [a5] = a2
 66803: 33 04                    t2 = 0
 66805: c9 6b 06                 s1 = a4 - s1
 66808: 33 0a                    a3 = 0
 66810: 64 68                    a1 = s1
 66812: 01                       fallthrough
      :                          @5233
 66813: 95 ab 01                 a4 = a3 + 0x1
 66816: 7b 8a                    u64 [a1] = a3
 66818: 95 88 08                 a1 = a1 + 0x8
 66821: 64 ba                    a3 = a4
 66823: ab b2 f6                 jump @5233 if t0 != a4
      :                          @5234
 66826: 82 18 28                 a1 = u64 [sp + 0x28]
 66829: 82 85 08                 s0 = u64 [a1 + 0x8]
 66832: 82 1a 30                 a3 = u64 [sp + 0x30]
 66835: 82 a8 10                 a1 = u64 [a3 + 0x10]
 66838: 82 a4 08                 t2 = u64 [a3 + 0x8]
 66841: 95 2a ff                 a3 = t0 + 0xffffffffffffffff
 66844: 7b 1a                    u64 [sp] = a3
 66846: 51 0a 24 01              jump @5257 if a3 == 0
      :                          @5235
 66850: 7b 16 28                 u64 [sp + 0x28] = s1
 66853: 49 11 20                 u64 [sp + 32] = 0
 66856: 33 0c                    a5 = 0
 66858: 33 0a b0 02 03           a3 = 0x302b0
 66863: c8 7a 0a                 a3 = a3 + a0
 66866: 9a 9b f0 ff 0f           a4 = 0xffff0 - a2
 66871: c8 ba 0a                 a3 = a3 + a4
 66874: 7b 1a 08                 u64 [sp + 0x8] = a3
 66877: 95 aa 08                 a3 = a3 + 0x8
 66880: 7b 1a 18                 u64 [sp + 0x18] = a3
 66883: 7b 15 10                 u64 [sp + 0x10] = s0
 66886: 28 15                    jump @5237
      :                          @5236
 66888: 82 1c 30                 a5 = u64 [sp + 0x30]
 66891: d8 2c 09                 a2 = a5 <u t0
 66894: 85 99 01                 a2 = a2 ^ 0x1
 66897: 7b 19 20                 u64 [sp + 0x20] = a2
 66900: 82 15 10                 s0 = u64 [sp + 0x10]
 66903: aa 2c 53 01              jump @5269 if a5 == t0
      :                          @5237
 66907: 33 06                    s1 = 0
 66909: 96 ca 18                 a3 = a5 * 0x18
 66912: c8 5a 0a                 a3 = a3 + s0
 66915: 82 a3 10                 t1 = u64 [a3 + 0x10]
 66918: 97 cb 03                 a4 = a5 << 0x3
 66921: 95 c9 01                 a2 = a5 + 0x1
 66924: 7b 19 30                 u64 [sp + 0x30] = a2
 66927: 95 a5 08                 s0 = a3 + 0x8
 66930: 82 10 28                 ra = u64 [sp + 0x28]
 66933: c8 b0 0a                 a3 = ra + a4
 66936: 01                       fallthrough
      :                          @5238
 66937: aa 62 cf                 jump @5236 if t0 == s1
      :                          @5239
 66940: aa 63 71 01              jump @5279 if t1 == s1
      :                          @5240
 66944: 82 ab                    a4 = u64 [a3]
 66946: ae 8b 68 01              jump @5276 if a4 >=u a1
      :                          @5241
 66950: 82 0c                    a5 = u64 [ra]
 66952: 96 bb 18                 a4 = a4 * 0x18
 66955: c8 4b 0b                 a4 = a4 + t2
 66958: 82 b9 10                 a2 = u64 [a4 + 0x10]
 66961: ae 9c 5e 01              jump @5281 if a5 >=u a2
      :                          @5242
 66965: 82 59                    a2 = u64 [s0]
 66967: 82 bb 08                 a4 = u64 [a4 + 0x8]
 66970: c8 69 09                 a2 = a2 + s1
 66973: 7c 99                    a2 = u8 [a2]
 66975: c8 cb 0b                 a4 = a4 + a5
 66978: 7c bb                    a4 = u8 [a4]
 66980: 8e 99                    a2 = a2 >u 0
 66982: 8e bb                    a4 = a4 >u 0
 66984: 95 00 08                 ra = ra + 0x8
 66987: 95 66 01                 s1 = s1 + 0x1
 66990: aa b9 cb                 jump @5238 if a2 == a4
      :                          @5243
 66993: 33 0a 01                 a3 = 0x1
 66996: 82 15 18                 s0 = u64 [sp + 0x18]
 66999: 82 1b 08                 a4 = u64 [sp + 0x8]
 67002: 64 2c                    a5 = t0
 67004: 01                       fallthrough
      :                          @5244
 67005: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 67008: 51 0c 71                 jump @5255 if a5 == 0
      :                          @5245
 67011: 64 a0                    ra = a3
 67013: 64 59                    a2 = s0
 67015: 82 b3                    t1 = u64 [a4]
 67017: 82 b6 08                 s1 = u64 [a4 + 0x8]
 67020: 95 bb f8                 a4 = a4 + 0xfffffffffffffff8
 67023: 95 aa 01                 a3 = a3 + 0x1
 67026: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 67029: ae 63 e8                 jump @5244 if t1 >=u s1
      :                          @5246
 67032: 82 15 18                 s0 = u64 [sp + 0x18]
 67035: 82 1a                    a3 = u64 [sp]
 67037: 01                       fallthrough
      :                          @5247
 67038: 82 56                    s1 = u64 [s0]
 67040: ac 63 0f                 jump @5250 if t1 <u s1
      :                          @5248
 67043: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 67046: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 67049: ac 2a f5                 jump @5247 if a3 <u t0
      :                          @5249
 67052: 28 ff 00                 jump @5277
      :                          @5250
 67055: 49 11 20                 u64 [sp + 32] = 0
 67058: 49 11 30                 u64 [sp + 48] = 0
 67061: 7b b6 08                 u64 [a4 + 0x8] = s1
 67064: c9 c2 0a                 a3 = t0 - a5
 67067: 7b 53                    u64 [s0] = t1
 67069: 82 1c 30                 a5 = u64 [sp + 0x30]
 67072: 82 15 10                 s0 = u64 [sp + 0x10]
 67075: 53 1a 02 58 ff           jump @5237 if a3 <u 2
      :                          @5251
 67080: 98 06 01                 s1 = ra >> 0x1
 67083: 82 1a 18                 a3 = u64 [sp + 0x18]
 67086: 01                       fallthrough
      :                          @5252
 67087: 82 ab                    a4 = u64 [a3]
 67089: 82 9c                    a5 = u64 [a2]
 67091: 7b 9b                    u64 [a2] = a4
 67093: 7b ac                    u64 [a3] = a5
 67095: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 67098: 95 99 08                 a2 = a2 + 0x8
 67101: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 67104: 52 06 ef                 jump @5252 if s1 != 0
      :                          @5253
 67107: 49 11 20                 u64 [sp + 32] = 0
 67110: 33 0c                    a5 = 0
 67112: 28 33 ff                 jump @5237
      :                          @5254
 67115: 33 05 01                 s0 = 0x1
 67118: 28 ab 00                 jump @5275
      :                          @5255
 67121: 33 08 00 00 02           a1 = 0x20000
 67126: 82 16 28                 s1 = u64 [sp + 0x28]
 67129: 82 15 20                 s0 = u64 [sp + 0x20]
 67132: ae 28 48                 jump @5262 if a1 >=u t0
      :                          @5256
 67135: 28 9a 00                 jump @5275
      :                          @5257
 67138: 82 57 10                 a0 = u64 [s0 + 0x10]
 67141: 51 07 a7 00              jump @5278 if a0 == 0
      :                          @5258
 67145: 82 6b                    a4 = u64 [s1]
 67147: ae 8b 9f 00              jump @5276 if a4 >=u a1
      :                          @5259
 67151: 96 b7 18                 a0 = a4 * 0x18
 67154: c8 74 04                 t2 = t2 + a0
 67157: 82 49 10                 a2 = u64 [t2 + 0x10]
 67160: ae 9b 96 00              jump @5280 if a4 >=u a2
      :                          @5260
 67164: 82 57 08                 a0 = u64 [s0 + 0x8]
 67167: 82 48 08                 a1 = u64 [t2 + 0x8]
 67170: 7c 77                    a0 = u8 [a0]
 67172: c8 b8 08                 a1 = a1 + a4
 67175: 7c 88                    a1 = u8 [a1]
 67177: 8e 79                    a2 = a0 >u 0
 67179: 8e 88                    a1 = a1 >u 0
 67181: 33 05 01                 s0 = 0x1
 67184: 33 07 08                 a0 = 0x8
 67187: aa 89 45                 jump @5270 if a2 == a1
      :                          @5261
 67190: 33 05                    s0 = 0
 67192: 33 08 b0 02 03           a1 = 0x302b0
 67197: 95 88 00 00 10           a1 = a1 + 0x100000
 67202: 28 0d                    jump @5263
      :                          @5262
 67204: 33 08 b0 02 03           a1 = 0x302b0
 67209: 95 88 00 00 10           a1 = a1 + 0x100000
 67214: 01                       fallthrough
      :                          @5263
 67215: 82 89                    a2 = u64 [a1]
 67217: c9 98 0a                 a3 = a1 - a2
 67220: ab 6a 45                 jump @5275 if a3 != s1
      :                          @5264
 67223: c9 79 0a                 a3 = a2 - a0
 67226: 01                       fallthrough
      :                          @5265
 67227: 82 8b                    a4 = u64 [a1]
 67229: ab 9b f2                 jump @5263 if a4 != a2
      :                          @5266
 67232: 7b 8a                    u64 [a1] = a3
 67234: 33 0c                    a5 = 0
 67236: 01                       fallthrough
      :                          @5267
 67237: ab 9b ea                 jump @5263 if a4 != a2
      :                          @5268
 67240: 28 31                    jump @5275
      :                          @5269
 67242: 33 08 00 00 02           a1 = 0x20000
 67247: 82 16 28                 s1 = u64 [sp + 0x28]
 67250: 82 15 20                 s0 = u64 [sp + 0x20]
 67253: ac 28 24                 jump @5275 if a1 <u t0
      :                          @5270
 67256: 33 08 b0 02 03           a1 = 0x302b0
 67261: 95 88 00 00 10           a1 = a1 + 0x100000
 67266: 01                       fallthrough
      :                          @5271
 67267: 82 89                    a2 = u64 [a1]
 67269: c9 98 0a                 a3 = a1 - a2
 67272: ab 6a 11                 jump @5275 if a3 != s1
      :                          @5272
 67275: c9 79 0a                 a3 = a2 - a0
 67278: 01                       fallthrough
      :                          @5273
 67279: 82 8b                    a4 = u64 [a1]
 67281: ab 9b f2                 jump @5271 if a4 != a2
      :                          @5274
 67284: 7b 8a                    u64 [a1] = a3
 67286: 33 0c                    a5 = 0
 67288: 01                       fallthrough
      :                          @5275
 67289: 84 57 01                 a0 = s0 & 0x1
 67292: 82 10 48                 ra = u64 [sp + 0x48]
 67295: 82 15 40                 s0 = u64 [sp + 0x40]
 67298: 82 16 38                 s1 = u64 [sp + 0x38]
 67301: 95 11 50                 sp = sp + 0x50
 67304: 32 00                    ret
      :                          @5276
 67306: 00                       trap
      :                          @5277
 67307: 00                       trap
      :                          @5278
 67308: 00                       trap
      :                          @5279
 67309: 00                       trap
      :                          @5280
 67310: 00                       trap
      :                          @5281
 67311: 00                       trap
      :                          @5282
 67312: 00                       trap
      :                          @5283
 67313: 00                       trap
      :                          @5284
 67314: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 67317: 7b 10 48                 u64 [sp + 0x48] = ra
 67320: 7b 15 40                 u64 [sp + 0x40] = s0
 67323: 49 11 38 04              u64 [sp + 56] = 0x4
 67327: 82 89                    a2 = u64 [a1]
 67329: 82 8a 10                 a3 = u64 [a1 + 0x10]
 67332: 82 8b 08                 a4 = u64 [a1 + 0x8]
 67335: 82 8c 18                 a5 = u64 [a1 + 0x18]
 67338: 7b 17 30                 u64 [sp + 0x30] = a0
 67341: 7b 19 20                 u64 [sp + 0x20] = a2
 67344: 7b 1a 18                 u64 [sp + 0x18] = a3
 67347: c9 9a 09                 a2 = a3 - a2
 67350: 9a 9a                    a3 = -a2
 67352: e3 a9 09                 a2 = maxs(a2, a3)
 67355: 7b 1b 28                 u64 [sp + 0x28] = a4
 67358: 7b 1c 10                 u64 [sp + 0x10] = a5
 67361: ab bc 07                 jump @5286 if a5 != a4
      :                          @5285
 67364: 64 9a                    a3 = a2
 67366: 28 15                    jump @5288
      :                          @5286
 67368: c9 bc 0a                 a3 = a5 - a4
 67371: 9a ab                    a4 = -a3
 67373: e3 ba 0b                 a4 = maxs(a3, a4)
 67376: 01                       fallthrough
      :                          @5287
 67377: 64 ba                    a3 = a4
 67379: cd b9 0b                 a4 = a2 %u a4
 67382: 64 a9                    a2 = a3
 67384: 52 0b f9                 jump @5287 if a4 != 0
      :                          @5288
 67387: 82 89 10                 a2 = u64 [a1 + 0x10]
 67390: 82 86 20                 s1 = u64 [a1 + 0x20]
 67393: 82 8b 18                 a4 = u64 [a1 + 0x18]
 67396: 82 8c 28                 a5 = u64 [a1 + 0x28]
 67399: c9 96 06                 s1 = s1 - a2
 67402: 9a 69                    a2 = -s1
 67404: e3 96 09                 a2 = maxs(s1, a2)
 67407: ab bc 07                 jump @5290 if a5 != a4
      :                          @5289
 67410: 64 9b                    a4 = a2
 67412: 28 15                    jump @5292
      :                          @5290
 67414: c9 bc 0c                 a5 = a5 - a4
 67417: 9a cb                    a4 = -a5
 67419: e3 bc 0c                 a5 = maxs(a5, a4)
 67422: 01                       fallthrough
      :                          @5291
 67423: 64 cb                    a4 = a5
 67425: cd c9 0c                 a5 = a2 %u a5
 67428: 64 b9                    a2 = a4
 67430: 52 0c f9                 jump @5291 if a5 != 0
      :                          @5292
 67433: 82 8c 20                 a5 = u64 [a1 + 0x20]
 67436: 82 85 30                 s0 = u64 [a1 + 0x30]
 67439: 82 89 28                 a2 = u64 [a1 + 0x28]
 67442: 82 86 38                 s1 = u64 [a1 + 0x38]
 67445: c9 c5 05                 s0 = s0 - a5
 67448: 9a 5c                    a5 = -s0
 67450: e3 c5 0c                 a5 = maxs(s0, a5)
 67453: ab 96 07                 jump @5294 if s1 != a2
      :                          @5293
 67456: 64 c4                    t2 = a5
 67458: 28 15                    jump @5296
      :                          @5294
 67460: c9 96 06                 s1 = s1 - a2
 67463: 9a 69                    a2 = -s1
 67465: e3 96 09                 a2 = maxs(s1, a2)
 67468: 01                       fallthrough
      :                          @5295
 67469: 64 94                    t2 = a2
 67471: cd 9c 09                 a2 = a5 %u a2
 67474: 64 4c                    a5 = t2
 67476: 52 09 f9                 jump @5295 if a2 != 0
      :                          @5296
 67479: 82 80 20                 ra = u64 [a1 + 0x20]
 67482: 82 87 28                 a0 = u64 [a1 + 0x28]
 67485: 7b 17                    u64 [sp] = a0
 67487: 82 87 30                 a0 = u64 [a1 + 0x30]
 67490: 7b 17 08                 u64 [sp + 0x8] = a0
 67493: 82 86 30                 s1 = u64 [a1 + 0x30]
 67496: 82 87                    a0 = u64 [a1]
 67498: 82 89 38                 a2 = u64 [a1 + 0x38]
 67501: 82 85 08                 s0 = u64 [a1 + 0x8]
 67504: 82 88 38                 a1 = u64 [a1 + 0x38]
 67507: c9 67 07                 a0 = a0 - s1
 67510: 9a 76                    s1 = -a0
 67512: e3 67 03                 t1 = maxs(a0, s1)
 67515: ab 95 07                 jump @5298 if s0 != a2
      :                          @5297
 67518: 64 32                    t0 = t1
 67520: 28 15                    jump @5300
      :                          @5298
 67522: c9 95 05                 s0 = s0 - a2
 67525: 9a 57                    a0 = -s0
 67527: e3 75 09                 a2 = maxs(s0, a0)
 67530: 01                       fallthrough
      :                          @5299
 67531: 64 92                    t0 = a2
 67533: cd 93 09                 a2 = t1 %u a2
 67536: 64 23                    t1 = t0
 67538: 52 09 f9                 jump @5299 if a2 != 0
      :                          @5300
 67541: c8 ab 03                 t1 = a4 + a3
 67544: 82 16 28                 s1 = u64 [sp + 0x28]
 67547: 82 15 18                 s0 = u64 [sp + 0x18]
 67550: ca 65 07                 a0 = s0 * s1
 67553: 82 1c 10                 a5 = u64 [sp + 0x10]
 67556: ca c0 09                 a2 = ra * a5
 67559: c8 97 07                 a0 = a0 + a2
 67562: ca 08 09                 a2 = a1 * ra
 67565: 82 1b 20                 a4 = u64 [sp + 0x20]
 67568: ca 8b 08                 a1 = a4 * a1
 67571: ca bc 0b                 a4 = a5 * a4
 67574: 82 1a                    a3 = u64 [sp]
 67576: ca 5a 0c                 a5 = a3 * s0
 67579: c8 cb 0b                 a4 = a4 + a5
 67582: c8 b9 09                 a2 = a2 + a4
 67585: 82 1c 08                 a5 = u64 [sp + 0x8]
 67588: ca ac 0b                 a4 = a5 * a3
 67591: c8 b8 08                 a1 = a1 + a4
 67594: c8 87 07                 a0 = a0 + a1
 67597: c9 79 09                 a2 = a2 - a0
 67600: c8 42 02                 t0 = t0 + t2
 67603: c8 32 0a                 a3 = t0 + t1
 67606: ca c6 07                 a0 = s1 * a5
 67609: c8 97 07                 a0 = a0 + a2
 67612: 9a 78                    a1 = -a0
 67614: e3 87 07                 a0 = maxs(a0, a1)
 67617: c9 a7 08                 a1 = a0 - a3
 67620: 95 88 02                 a1 = a1 + 0x2
 67623: 98 89 3f                 a2 = a1 >> 0x3f
 67626: c8 98 08                 a1 = a1 + a2
 67629: 82 19 30                 a2 = u64 [sp + 0x30]
 67632: 7b 97                    u64 [a2] = a0
 67634: 7b 9a 08                 u64 [a2 + 0x8] = a3
 67637: 99 88 01                 a1 = a1 >>a 0x1
 67640: 7b 98 10                 u64 [a2 + 0x10] = a1
 67643: 82 10 48                 ra = u64 [sp + 0x48]
 67646: 82 15 40                 s0 = u64 [sp + 0x40]
 67649: 82 16 38                 s1 = u64 [sp + 0x38]
 67652: 95 11 50                 sp = sp + 0x50
 67655: 32 00                    ret
      :                          @5301
 67657: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 67660: 7b 10 18                 u64 [sp + 0x18] = ra
 67663: 7b 15 10                 u64 [sp + 0x10] = s0
 67666: 7b 16 08                 u64 [sp + 0x8] = s1
 67669: 7b 17                    u64 [sp] = a0
 67671: 51 0a 72                 jump @5308 if a3 == 0
      :                          @5302
 67674: 64 92                    t0 = a2
 67676: 33 04                    t2 = 0
 67678: 95 9c 08                 a5 = a2 + 0x8
 67681: 9a a0                    ra = -a3
 67683: 14 03 00 00 00 00 00 00 00 80 t1 = 0x8000000000000000
 67693: 33 0b 01                 a4 = 0x1
 67696: 28 11                    jump @5304
      :                          @5303
 67698: 95 bb 01                 a4 = a4 + 0x1
 67701: c8 b0 07                 a0 = ra + a4
 67704: 95 cc 10                 a5 = a5 + 0x10
 67707: 33 09 01                 a2 = 0x1
 67710: aa 97 4e                 jump @5309 if a0 == a2
      :                          @5304
 67713: c8 b0 09                 a2 = ra + a4
 67716: 82 c5                    s0 = u64 [a5]
 67718: 64 ba                    a3 = a4
 67720: 93 9a                    a3 = 0 if a2 == 0
 67722: 97 a9 04                 a2 = a3 << 0x4
 67725: c8 29 09                 a2 = a2 + t0
 67728: 82 96 08                 s1 = u64 [a2 + 0x8]
 67731: d9 58 0a                 a3 = a1 <s s0
 67734: d9 68 07                 a0 = a1 <s s1
 67737: aa 7a d9                 jump @5303 if a3 == a0
      :                          @5305
 67740: aa 56 41                 jump @5310 if s1 == s0
      :                          @5306
 67743: 82 ca f8                 a3 = u64 [a5 + 0xfffffffffffffff8]
 67746: 82 97                    a0 = u64 [a2]
 67748: c9 58 09                 a2 = a1 - s0
 67751: c9 a7 07                 a0 = a0 - a3
 67754: ca 97 09                 a2 = a0 * a2
 67757: c9 56 06                 s1 = s1 - s0
 67760: d3 39 07                 a0 = a2 ^ t1
 67763: e1 67 07                 a0 = a0 | ~s1
 67766: 51 07 28                 jump @5311 if a0 == 0
      :                          @5307
 67769: cc 69 07                 a0 = a2 /s s1
 67772: c8 a7 07                 a0 = a0 + a3
 67775: 82 19                    a2 = u64 [sp]
 67777: d9 79 07                 a0 = a2 <s a0
 67780: d3 74 04                 t2 = t2 ^ a0
 67783: 28 ab                    jump @5303
      :                          @5308
 67785: 33 04                    t2 = 0
 67787: 01                       fallthrough
      :                          @5309
 67788: 84 47 01                 a0 = t2 & 0x1
 67791: 82 10 18                 ra = u64 [sp + 0x18]
 67794: 82 15 10                 s0 = u64 [sp + 0x10]
 67797: 82 16 08                 s1 = u64 [sp + 0x8]
 67800: 95 11 20                 sp = sp + 0x20
 67803: 32 00                    ret
      :                          @5310
 67805: 00                       trap
      :                          @5311
 67806: 00                       trap
      :                          @5312
 67807: 95 11 90                 sp = sp + 0xffffffffffffff90
 67810: 7b 10 68                 u64 [sp + 0x68] = ra
 67813: 7b 15 60                 u64 [sp + 0x60] = s0
 67816: 7b 16 58                 u64 [sp + 0x58] = s1
 67819: 7b 18 38                 u64 [sp + 0x38] = a1
 67822: 64 72                    t0 = a0
 67824: 7b 19 08                 u64 [sp + 0x8] = a2
 67827: 7b 17                    u64 [sp] = a0
 67829: 55 19 03 51              jump @5320 if a2 >=u 3
      :                          @5313
 67833: 51 09 6a 01              jump @5339 if a2 == 0
      :                          @5314
 67837: 97 99 04                 a2 = a2 << 0x4
 67840: 33 07 b0 02 03           a0 = 0x302b0
 67845: 33 03 b0 02 03           t1 = 0x302b0
 67850: 33 02 00 00 10           t0 = 0x100000
 67855: c8 23 0a                 a3 = t1 + t0
 67858: 01                       fallthrough
      :                          @5315
 67859: 82 ab                    a4 = u64 [a3]
 67861: c8 9b 0c                 a5 = a4 + a2
 67864: ac bc 79 01              jump @5345 if a5 <u a4
      :                          @5316
 67868: 95 c8 08                 a1 = a5 + 0x8
 67871: d8 c8 06                 s1 = a1 <u a5
 67874: d8 82 08                 a1 = t0 <u a1
 67877: d4 68 08                 a1 = a1 | s1
 67880: 52 08 69 01              jump @5345 if a1 != 0
      :                          @5317
 67884: c9 c3 06                 s1 = t1 - a5
 67887: c8 26 06                 s1 = s1 + t0
 67890: 84 68 07                 a1 = s1 & 0x7
 67893: c8 8c 0c                 a5 = a5 + a1
 67896: 01                       fallthrough
      :                          @5318
 67897: 82 a5                    s0 = u64 [a3]
 67899: ab b5 d8                 jump @5315 if s0 != a4
      :                          @5319
 67902: 7b ac                    u64 [a3] = a5
 67904: c9 86 06                 s1 = s1 - a1
 67907: 28 24 01                 jump @5340
      :                          @5320
 67910: 33 05                    s0 = 0
 67912: 82 18 38                 a1 = u64 [sp + 0x38]
 67915: 95 88 18                 a1 = a1 + 0x18
 67918: 33 06 01                 s1 = 0x1
 67921: 28 0e                    jump @5323
      :                          @5321
 67923: 64 75                    s0 = a0
 67925: 01                       fallthrough
      :                          @5322
 67926: 95 66 01                 s1 = s1 + 0x1
 67929: 95 88 10                 a1 = a1 + 0x10
 67932: aa 69 2d                 jump @5328 if a2 == s1
      :                          @5323
 67935: 64 57                    a0 = s0
 67937: ae 95 2f 01              jump @5344 if s0 >=u a2
      :                          @5324
 67941: 82 8b f8                 a4 = u64 [a1 + 0xfffffffffffffff8]
 67944: 97 7a 04                 a3 = a0 << 0x4
 67947: 82 1c 38                 a5 = u64 [sp + 0x38]
 67950: c8 ca 0a                 a3 = a3 + a5
 67953: 82 ac                    a5 = u64 [a3]
 67955: 64 65                    s0 = s1
 67957: ad cb e1                 jump @5322 if a4 <s a5
      :                          @5325
 67960: ab cb db                 jump @5321 if a4 != a5
      :                          @5326
 67963: 82 8b                    a4 = u64 [a1]
 67965: 82 aa 08                 a3 = u64 [a3 + 0x8]
 67968: 64 75                    s0 = a0
 67970: af ab d4                 jump @5322 if a4 >=s a3
      :                          @5327
 67973: 64 65                    s0 = s1
 67975: 28 cf                    jump @5322
      :                          @5328
 67977: 33 08                    a1 = 0
 67979: 49 11 40                 u64 [sp + 64] = 0
 67982: 49 11 18 08              u64 [sp + 24] = 0x8
 67986: 49 11 48 08              u64 [sp + 72] = 0x8
 67990: 49 11 50                 u64 [sp + 80] = 0
 67993: 82 17 38                 a0 = u64 [sp + 0x38]
 67996: 95 77 08                 a0 = a0 + 0x8
 67999: 7b 17 10                 u64 [sp + 0x10] = a0
 68002: 64 56                    s1 = s0
 68004: 01                       fallthrough
      :                          @5329
 68005: ae 96 ea 00              jump @5343 if s1 >=u a2
      :                          @5330
 68009: 7b 15 20                 u64 [sp + 0x20] = s0
 68012: 97 67 04                 a0 = s1 << 0x4
 68015: 82 1a 38                 a3 = u64 [sp + 0x38]
 68018: c8 a7 07                 a0 = a0 + a3
 68021: 82 7a                    a3 = u64 [a0]
 68023: 7b 1a 30                 u64 [sp + 0x30] = a3
 68026: 82 1a 40                 a3 = u64 [sp + 0x40]
 68029: 82 77 08                 a0 = u64 [a0 + 0x8]
 68032: 7b 17 28                 u64 [sp + 0x28] = a0
 68035: ab a8 18                 jump @5333 if a1 != a3
      :                          @5331
 68038: 95 17 40                 a0 = sp + 0x40
 68041: 50 20 6e 03 3f 4a ff     ra = 878, jump @1605
      :                          @5332 [@dyn 439]
 68048: 82 19 08                 a2 = u64 [sp + 0x8]
 68051: 82 18 50                 a1 = u64 [sp + 0x50]
 68054: 82 17 48                 a0 = u64 [sp + 0x48]
 68057: 28 06                    jump @5334
      :                          @5333
 68059: 82 17 18                 a0 = u64 [sp + 0x18]
 68062: 01                       fallthrough
      :                          @5334
 68063: 33 04                    t2 = 0
 68065: 97 8a 04                 a3 = a1 << 0x4
 68068: 7b 17 18                 u64 [sp + 0x18] = a0
 68071: c8 7a 0a                 a3 = a3 + a0
 68074: 82 17 30                 a0 = u64 [sp + 0x30]
 68077: 7b a7                    u64 [a3] = a0
 68079: 82 17 28                 a0 = u64 [sp + 0x28]
 68082: 7b a7 08                 u64 [a3 + 0x8] = a0
 68085: 95 88 01                 a1 = a1 + 0x1
 68088: 7b 18 50                 u64 [sp + 0x50] = a1
 68091: 95 66 01                 s1 = s1 + 0x1
 68094: cd 96 06                 s1 = s1 %u a2
 68097: 82 1a 10                 a3 = u64 [sp + 0x10]
 68100: 01                       fallthrough
      :                          @5335
 68101: ae 96 8a 00              jump @5343 if s1 >=u a2
      :                          @5336
 68105: 95 43 01                 t1 = t2 + 0x1
 68108: 97 6c 04                 a5 = s1 << 0x4
 68111: 82 17 38                 a0 = u64 [sp + 0x38]
 68114: c8 7c 0c                 a5 = a5 + a0
 68117: 82 c7                    a0 = u64 [a5]
 68119: 82 a5                    s0 = u64 [a3]
 68121: 82 cc 08                 a5 = u64 [a5 + 0x8]
 68124: 82 a2 f8                 t0 = u64 [a3 + 0xfffffffffffffff8]
 68127: 82 1b 30                 a4 = u64 [sp + 0x30]
 68130: c9 b7 07                 a0 = a0 - a4
 68133: 82 10 28                 ra = u64 [sp + 0x28]
 68136: c9 05 05                 s0 = s0 - ra
 68139: ca 75 07                 a0 = s0 * a0
 68142: c9 0c 0c                 a5 = a5 - ra
 68145: c9 2b 0b                 a4 = a4 - t0
 68148: ca cb 0b                 a4 = a4 * a5
 68151: c8 b7 07                 a0 = a0 + a4
 68154: 89 77                    a0 = a0 <s 0
 68156: db 74 06                 s1 = t2 if a0 != 0
 68159: 95 aa 10                 a3 = a3 + 0x10
 68162: 64 34                    t2 = t1
 68164: ab 39 c1                 jump @5335 if a2 != t1
      :                          @5337
 68167: 82 15 20                 s0 = u64 [sp + 0x20]
 68170: ab 56 5b ff              jump @5329 if s1 != s0
      :                          @5338
 68174: 82 17 50                 a0 = u64 [sp + 0x50]
 68177: 82 18 48                 a1 = u64 [sp + 0x48]
 68180: 82 19 40                 a2 = u64 [sp + 0x40]
 68183: 82 1a                    a3 = u64 [sp]
 68185: 7b a7 10                 u64 [a3 + 0x10] = a0
 68188: 7b a8 08                 u64 [a3 + 0x8] = a1
 68191: 7b a9                    u64 [a3] = a2
 68193: 28 20                    jump @5342
      :                          @5339
 68195: 33 06 08                 s1 = 0x8
 68198: 01                       fallthrough
      :                          @5340
 68199: 64 67                    a0 = s1
 68201: 82 18 38                 a1 = u64 [sp + 0x38]
 68204: 50 20 70 03 74 ff 01     ra = 880, jump @13635
      :                          @5341 [@dyn 440]
 68211: 82 17 08                 a0 = u64 [sp + 0x8]
 68214: 82 18                    a1 = u64 [sp]
 68216: 7b 87                    u64 [a1] = a0
 68218: 7b 86 08                 u64 [a1 + 0x8] = s1
 68221: 7b 87 10                 u64 [a1 + 0x10] = a0
 68224: 01                       fallthrough
      :                          @5342
 68225: 82 10 68                 ra = u64 [sp + 0x68]
 68228: 82 15 60                 s0 = u64 [sp + 0x60]
 68231: 82 16 58                 s1 = u64 [sp + 0x58]
 68234: 95 11 70                 sp = sp + 0x70
 68237: 32 00                    ret
      :                          @5343
 68239: 00                       trap
      :                          @5344
 68240: 00                       trap
      :                          @5345
 68241: 00                       trap
      :                          @5346
 68242: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 68245: 7b 10 20                 u64 [sp + 0x20] = ra
 68248: 7b 15 18                 u64 [sp + 0x18] = s0
 68251: 7b 16 10                 u64 [sp + 0x10] = s1
 68254: 98 85 01                 s0 = a1 >> 0x1
 68257: 7b 17                    u64 [sp] = a0
 68259: 51 05 53                 jump @5354 if s0 == 0
      :                          @5347
 68262: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 68265: 82 16                    s1 = u64 [sp]
 68267: 7b 18 08                 u64 [sp + 0x8] = a1
 68270: 01                       fallthrough
      :                          @5348
 68271: 64 67                    a0 = s1
 68273: 64 59                    a2 = s0
 68275: 82 1a 08                 a3 = u64 [sp + 0x8]
 68278: 50 20 72 03 4f           ra = 882, jump @5356
      :                          @5349 [@dyn 441]
 68283: 82 18 08                 a1 = u64 [sp + 0x8]
 68286: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 68289: 52 15 ff ee              jump @5348 if s0 != 4294967295
      :                          @5350
 68293: 97 87 03                 a0 = a1 << 0x3
 68296: c8 67 07                 a0 = a0 + s1
 68299: 95 76 f8                 s1 = a0 + 0xfffffffffffffff8
 68302: 64 85                    s0 = a1
 68304: 01                       fallthrough
      :                          @5351
 68305: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 68308: ae 85 30                 jump @5355 if s0 >=u a1
      :                          @5352
 68311: 82 6a                    a3 = u64 [s1]
 68313: 82 17                    a0 = u64 [sp]
 68315: 82 79                    a2 = u64 [a0]
 68317: 7b 7a                    u64 [a0] = a3
 68319: 7b 69                    u64 [s1] = a2
 68321: 33 09                    a2 = 0
 68323: 64 5a                    a3 = s0
 68325: 50 20 74 03 20           ra = 884, jump @5356
      :                          @5353 [@dyn 442]
 68330: 82 18 08                 a1 = u64 [sp + 0x8]
 68333: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 68336: 33 07 01                 a0 = 0x1
 68339: ac 57 de                 jump @5351 if a0 <u s0
      :                          @5354
 68342: 82 10 20                 ra = u64 [sp + 0x20]
 68345: 82 15 18                 s0 = u64 [sp + 0x18]
 68348: 82 16 10                 s1 = u64 [sp + 0x10]
 68351: 95 11 28                 sp = sp + 0x28
 68354: 32 00                    ret
      :                          @5355
 68356: 00                       trap
      :                          @5356
 68357: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 68360: 7b 15 08                 u64 [sp + 0x8] = s0
 68363: 7b 16                    u64 [sp] = s1
 68365: 97 94 01                 t2 = a2 << 0x1
 68368: 95 45 01                 s0 = t2 + 0x1
 68371: ae a5 65                 jump @5367 if s0 >=u a3
      :                          @5357
 68374: ae 89 6e                 jump @5370 if a2 >=u a1
      :                          @5358
 68377: ae 85 69                 jump @5368 if s0 >=u a1
      :                          @5359
 68380: 97 93 03                 t1 = a2 << 0x3
 68383: c8 73 03                 t1 = t1 + a0
 68386: 82 32                    t0 = u64 [t1]
 68388: 97 5c 03                 a5 = s0 << 0x3
 68391: c8 7c 0c                 a5 = a5 + a0
 68394: 82 cc                    a5 = u64 [a5]
 68396: d8 c2 0b                 a4 = t0 <u a5
 68399: 95 46 02                 s1 = t2 + 0x2
 68402: da b9 05                 s0 = a2 if a4 == 0
 68405: ae a6 24                 jump @5364 if s1 >=u a3
      :                          @5360
 68408: ae 85 4a                 jump @5368 if s0 >=u a1
      :                          @5361
 68411: ae 86 48                 jump @5369 if s1 >=u a1
      :                          @5362
 68414: 97 5b 03                 a4 = s0 << 0x3
 68417: c8 7b 0b                 a4 = a4 + a0
 68420: 82 bb                    a4 = u64 [a4]
 68422: 97 6c 03                 a5 = s1 << 0x3
 68425: c8 7c 0c                 a5 = a5 + a0
 68428: 82 cc                    a5 = u64 [a5]
 68430: d8 cb 0b                 a4 = a4 <u a5
 68433: da b5 06                 s1 = s0 if a4 == 0
 68436: ab 96 0a                 jump @5365 if s1 != a2
      :                          @5363
 68439: 28 21                    jump @5367
      :                          @5364
 68441: 64 56                    s1 = s0
 68443: aa 95 1d                 jump @5367 if s0 == a2
      :                          @5365
 68446: ae 86 25                 jump @5369 if s1 >=u a1
      :                          @5366
 68449: 97 69 03                 a2 = s1 << 0x3
 68452: c8 79 09                 a2 = a2 + a0
 68455: 82 9b                    a4 = u64 [a2]
 68457: 7b 3b                    u64 [t1] = a4
 68459: 97 64 01                 t2 = s1 << 0x1
 68462: 95 45 01                 s0 = t2 + 0x1
 68465: 7b 92                    u64 [a2] = t0
 68467: 64 69                    a2 = s1
 68469: ac a5 a1                 jump @5357 if s0 <u a3
      :                          @5367
 68472: 82 15 08                 s0 = u64 [sp + 0x8]
 68475: 82 16                    s1 = u64 [sp]
 68477: 95 11 10                 sp = sp + 0x10
 68480: 32 00                    ret
      :                          @5368
 68482: 00                       trap
      :                          @5369
 68483: 00                       trap
      :                          @5370
 68484: 00                       trap
      :                          @5371
 68485: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 68488: 7b 10 48                 u64 [sp + 0x48] = ra
 68491: 7b 15 40                 u64 [sp + 0x40] = s0
 68494: 7b 16 38                 u64 [sp + 0x38] = s1
 68497: 64 92                    t0 = a2
 68499: 82 19 50                 a2 = u64 [sp + 0x50]
 68502: c9 72 00                 ra = t0 - a0
 68505: c9 8c 06                 s1 = a5 - a1
 68508: ca 06 03                 t1 = s1 * ra
 68511: c9 8a 06                 s1 = a3 - a1
 68514: c9 b7 05                 s0 = a0 - a4
 68517: ca 65 05                 s0 = s0 * s1
 68520: c8 53 03                 t1 = t1 + s0
 68523: 7b 13 30                 u64 [sp + 0x30] = t1
 68526: c9 89 05                 s0 = a2 - a1
 68529: ca 05 00                 ra = s0 * ra
 68532: c9 47 05                 s0 = a0 - t2
 68535: ca 65 05                 s0 = s0 * s1
 68538: c8 50 00                 ra = ra + s0
 68541: 7b 14 20                 u64 [sp + 0x20] = t2
 68544: c9 b4 06                 s1 = t2 - a4
 68547: 64 b4                    t2 = a4
 68549: 7b 18 18                 u64 [sp + 0x18] = a1
 68552: c9 c8 05                 s0 = a1 - a5
 68555: ca 56 05                 s0 = s1 * s0
 68558: 7b 19 28                 u64 [sp + 0x28] = a2
 68561: c9 c9 03                 t1 = a2 - a5
 68564: 64 78                    a1 = a0
 68566: c9 7b 0b                 a4 = a4 - a0
 68569: 82 17 30                 a0 = u64 [sp + 0x30]
 68572: ca b3 0b                 a4 = t1 * a4
 68575: c8 5b 09                 a2 = a4 + s0
 68578: 7b 1a 10                 u64 [sp + 0x10] = a3
 68581: c9 ca 0b                 a4 = a3 - a5
 68584: ca b6 0b                 a4 = s1 * a4
 68587: 7b 12 08                 u64 [sp + 0x8] = t0
 68590: c9 24 06                 s1 = t2 - t0
 68593: ca 63 06                 s1 = t1 * s1
 68596: 8f 7a                    a3 = a0 >s 0
 68598: 89 05                    s0 = ra <s 0
 68600: d2 5a 0a                 a3 = a3 & s0
 68603: c8 b6 03                 t1 = s1 + a4
 68606: 52 0a 0d                 jump @5373 if a3 != 0
      :                          @5372
 68609: 89 7a                    a3 = a0 <s 0
 68611: 8f 0b                    a4 = ra >s 0
 68613: d2 ba 0a                 a3 = a3 & a4
 68616: 51 0a 1e                 jump @5376 if a3 == 0
      :                          @5373
 68619: 8f 9a                    a3 = a2 >s 0
 68621: 89 3b                    a4 = t1 <s 0
 68623: d2 ba 0a                 a3 = a3 & a4
 68626: 33 02 01                 t0 = 0x1
 68629: 52 0a f0 00              jump @5385 if a3 != 0
      :                          @5374
 68633: 89 9a                    a3 = a2 <s 0
 68635: 8f 3b                    a4 = t1 >s 0
 68637: d2 ba 0a                 a3 = a3 & a4
 68640: 51 0a 7f                 jump @5380 if a3 == 0
      :                          @5375
 68643: 28 e2 00                 jump @5385
      :                          @5376
 68646: 52 07 3a                 jump @5378 if a0 != 0
      :                          @5377
 68649: 82 17 08                 a0 = u64 [sp + 0x8]
 68652: e5 78 0a                 a3 = mins(a1, a0)
 68655: d9 a4 0a                 a3 = t2 <s a3
 68658: 85 aa ff                 a3 = a3 ^ 0xffffffffffffffff
 68661: e3 78 0b                 a4 = maxs(a1, a0)
 68664: d9 4b 0b                 a4 = a4 <s t2
 68667: e0 ba 0a                 a3 = a3 & ~a4
 68670: 82 16 10                 s1 = u64 [sp + 0x10]
 68673: 82 17 18                 a0 = u64 [sp + 0x18]
 68676: e5 67 0b                 a4 = mins(a0, s1)
 68679: d9 bc 0b                 a4 = a5 <s a4
 68682: 85 bb 01                 a4 = a4 ^ 0x1
 68685: d2 ba 0a                 a3 = a3 & a4
 68688: e3 67 0b                 a4 = maxs(a0, s1)
 68691: d9 cb 0b                 a4 = a4 <s a5
 68694: e0 ba 0a                 a3 = a3 & ~a4
 68697: 33 02 01                 t0 = 0x1
 68700: 52 0a a9 00              jump @5385 if a3 != 0
      :                          @5378
 68704: 52 00 3f                 jump @5380 if ra != 0
      :                          @5379
 68707: 82 17 08                 a0 = u64 [sp + 0x8]
 68710: e5 78 0a                 a3 = mins(a1, a0)
 68713: 82 16 20                 s1 = u64 [sp + 0x20]
 68716: d9 a6 0a                 a3 = s1 <s a3
 68719: 85 aa ff                 a3 = a3 ^ 0xffffffffffffffff
 68722: e3 78 0b                 a4 = maxs(a1, a0)
 68725: d9 6b 0b                 a4 = a4 <s s1
 68728: e0 ba 0a                 a3 = a3 & ~a4
 68731: 82 16 10                 s1 = u64 [sp + 0x10]
 68734: 82 17 18                 a0 = u64 [sp + 0x18]
 68737: e5 67 0b                 a4 = mins(a0, s1)
 68740: 82 15 28                 s0 = u64 [sp + 0x28]
 68743: d9 b5 0b                 a4 = s0 <s a4
 68746: 85 bb 01                 a4 = a4 ^ 0x1
 68749: d2 ba 0a                 a3 = a3 & a4
 68752: e3 67 0b                 a4 = maxs(a0, s1)
 68755: d9 5b 0b                 a4 = a4 <s s0
 68758: e0 ba 0a                 a3 = a3 & ~a4
 68761: 33 02 01                 t0 = 0x1
 68764: 52 0a 69                 jump @5385 if a3 != 0
      :                          @5380
 68767: 52 09 39                 jump @5382 if a2 != 0
      :                          @5381
 68770: 82 1a 20                 a3 = u64 [sp + 0x20]
 68773: e5 a4 09                 a2 = mins(t2, a3)
 68776: d9 98 09                 a2 = a1 <s a2
 68779: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
 68782: e3 a4 0a                 a3 = maxs(t2, a3)
 68785: d9 8a 07                 a0 = a3 <s a1
 68788: e0 79 07                 a0 = a2 & ~a0
 68791: 82 1a 28                 a3 = u64 [sp + 0x28]
 68794: e5 ac 09                 a2 = mins(a5, a3)
 68797: 82 18 18                 a1 = u64 [sp + 0x18]
 68800: d9 98 09                 a2 = a1 <s a2
 68803: 85 99 01                 a2 = a2 ^ 0x1
 68806: d2 97 07                 a0 = a0 & a2
 68809: e3 ac 09                 a2 = maxs(a5, a3)
 68812: d9 89 08                 a1 = a2 <s a1
 68815: e0 87 07                 a0 = a0 & ~a1
 68818: 33 02 01                 t0 = 0x1
 68821: 52 07 30                 jump @5385 if a0 != 0
      :                          @5382
 68824: 52 03 2a                 jump @5384 if t1 != 0
      :                          @5383
 68827: 82 18 20                 a1 = u64 [sp + 0x20]
 68830: e5 84 07                 a0 = mins(t2, a1)
 68833: 82 19 08                 a2 = u64 [sp + 0x8]
 68836: d9 79 07                 a0 = a2 <s a0
 68839: e3 84 08                 a1 = maxs(t2, a1)
 68842: d9 98 08                 a1 = a1 <s a2
 68845: d4 87 07                 a0 = a0 | a1
 68848: 82 1a 28                 a3 = u64 [sp + 0x28]
 68851: e5 ac 08                 a1 = mins(a5, a3)
 68854: 82 19 10                 a2 = u64 [sp + 0x10]
 68857: d9 89 08                 a1 = a2 <s a1
 68860: d4 87 07                 a0 = a0 | a1
 68863: 51 07 16                 jump @5386 if a0 == 0
      :                          @5384
 68866: 33 02                    t0 = 0
 68868: 01                       fallthrough
      :                          @5385
 68869: 64 27                    a0 = t0
 68871: 82 10 48                 ra = u64 [sp + 0x48]
 68874: 82 15 40                 s0 = u64 [sp + 0x40]
 68877: 82 16 38                 s1 = u64 [sp + 0x38]
 68880: 95 11 50                 sp = sp + 0x50
 68883: 32 00                    ret
      :                          @5386
 68885: e3 ac 07                 a0 = maxs(a5, a3)
 68888: d9 97 07                 a0 = a0 <s a2
 68891: 85 72 01                 t0 = a0 ^ 0x1
 68894: 28 e7                    jump @5385
      :                          @5387
 68896: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 68899: 7b 10 58                 u64 [sp + 0x58] = ra
 68902: 7b 15 50                 u64 [sp + 0x50] = s0
 68905: 7b 16 48                 u64 [sp + 0x48] = s1
 68908: 7b 1b 28                 u64 [sp + 0x28] = a4
 68911: 51 08 d7 01              jump @5428 if a1 == 0
      :                          @5388
 68915: 64 80                    ra = a1
 68917: ae 8a d2 01              jump @5429 if a3 >=u a1
      :                          @5389
 68921: 96 ab 18                 a4 = a3 * 0x18
 68924: c8 7b 0b                 a4 = a4 + a0
 68927: 82 b8 10                 a1 = u64 [a4 + 0x10]
 68930: ae 89 c6 01              jump @5430 if a2 >=u a1
      :                          @5390
 68934: 82 b8 08                 a1 = u64 [a4 + 0x8]
 68937: c8 98 08                 a1 = a1 + a2
 68940: 7c 8b                    a4 = u8 [a1]
 68942: 7c 18 28                 a1 = u8 [sp + 0x28]
 68945: aa 8b a5 01              jump @5425 if a4 == a1
      :                          @5391
 68949: 7b 1b 10                 u64 [sp + 0x10] = a4
 68952: 7b 17 18                 u64 [sp + 0x18] = a0
 68955: 82 77 10                 a0 = u64 [a0 + 0x10]
 68958: 7b 17 20                 u64 [sp + 0x20] = a0
 68961: 33 03 b0 02 03           t1 = 0x302b0
 68966: 33 02 00 00 10           t0 = 0x100000
 68971: c8 23 04                 t2 = t1 + t0
 68974: 01                       fallthrough
      :                          @5392
 68975: 82 46                    s1 = u64 [t2]
 68977: 95 6c 10                 a5 = s1 + 0x10
 68980: ac 6c 95 01              jump @5431 if a5 <u s1
      :                          @5393
 68984: 95 c7 08                 a0 = a5 + 0x8
 68987: d8 c7 08                 a1 = a0 <u a5
 68990: d8 72 07                 a0 = t0 <u a0
 68993: d4 87 07                 a0 = a0 | a1
 68996: 52 07 85 01              jump @5431 if a0 != 0
      :                          @5394
 69000: c9 c3 07                 a0 = t1 - a5
 69003: c8 27 07                 a0 = a0 + t0
 69006: 84 78 07                 a1 = a0 & 0x7
 69009: c8 8c 0c                 a5 = a5 + a1
 69012: 01                       fallthrough
      :                          @5395
 69013: 82 45                    s0 = u64 [t2]
 69015: ab 65 d8                 jump @5392 if s0 != s1
      :                          @5396
 69018: 7b 4c                    u64 [t2] = a5
 69020: c9 87 07                 a0 = a0 - a1
 69023: 7b 79                    u64 [a0] = a2
 69025: 7b 7a 08                 u64 [a0 + 0x8] = a3
 69028: 33 0a 01                 a3 = 0x1
 69031: 7b 1a 30                 u64 [sp + 0x30] = a3
 69034: 7b 17 38                 u64 [sp + 0x38] = a0
 69037: 33 04 18                 t2 = 0x18
 69040: 7b 10 08                 u64 [sp + 0x8] = ra
 69043: 82 12 18                 t0 = u64 [sp + 0x18]
 69046: 82 13 10                 t1 = u64 [sp + 0x10]
 69049: 28 1d                    jump @5399
      :                          @5397
 69051: 82 17 38                 a0 = u64 [sp + 0x38]
 69054: 97 89 04                 a2 = a1 << 0x4
 69057: c8 79 09                 a2 = a2 + a0
 69060: 7b 96                    u64 [a2] = s1
 69062: 7b 95 08                 u64 [a2 + 0x8] = s0
 69065: 95 88 01                 a1 = a1 + 0x1
 69068: 7b 18 40                 u64 [sp + 0x40] = a1
 69071: 01                       fallthrough
      :                          @5398
 69072: 64 8a                    a3 = a1
 69074: 51 08 f1 00              jump @5418 if a1 == 0
      :                          @5399
 69078: 95 a8 ff                 a1 = a3 + 0xffffffffffffffff
 69081: 7b 18 40                 u64 [sp + 0x40] = a1
 69084: 97 8b 04                 a4 = a1 << 0x4
 69087: c8 b7 09                 a2 = a0 + a4
 69090: 82 95 08                 s0 = u64 [a2 + 0x8]
 69093: ae 05 1f 01              jump @5426 if s0 >=u ra
      :                          @5400
 69097: 82 96                    s1 = u64 [a2]
 69099: ca 45 0c                 a5 = s0 * t2
 69102: c8 2c 0c                 a5 = a5 + t0
 69105: 82 c9 10                 a2 = u64 [a5 + 0x10]
 69108: ae 96 11 01              jump @5427 if s1 >=u a2
      :                          @5401
 69112: 82 c9 08                 a2 = u64 [a5 + 0x8]
 69115: c8 69 09                 a2 = a2 + s1
 69118: 7c 9c                    a5 = u8 [a2]
 69120: ab 3c d0                 jump @5398 if a5 != t1
      :                          @5402
 69123: 82 1c 28                 a5 = u64 [sp + 0x28]
 69126: 78 9c                    u8 [a2] = a5
 69128: 51 06 14                 jump @5404 if s1 == 0
      :                          @5403
 69131: 95 68 ff                 a1 = s1 + 0xffffffffffffffff
 69134: c8 7b 0b                 a4 = a4 + a0
 69137: 7b b8                    u64 [a4] = a1
 69139: 7b b5 08                 u64 [a4 + 0x8] = s0
 69142: 7b 1a 40                 u64 [sp + 0x40] = a3
 69145: 64 a8                    a1 = a3
 69147: 01                       fallthrough
      :                          @5404
 69148: 95 6a 01                 a3 = s1 + 0x1
 69151: 82 19 20                 a2 = u64 [sp + 0x20]
 69154: ae 9a 3c                 jump @5409 if a3 >=u a2
      :                          @5405
 69157: 82 19 30                 a2 = u64 [sp + 0x30]
 69160: ab 98 24                 jump @5408 if a1 != a2
      :                          @5406
 69163: 95 17 30                 a0 = sp + 0x30
 69166: 7b 1a                    u64 [sp] = a3
 69168: 50 20 76 03 d8 45 ff     ra = 886, jump @1605
      :                          @5407 [@dyn 443]
 69175: 82 1a                    a3 = u64 [sp]
 69177: 33 04 18                 t2 = 0x18
 69180: 82 13 10                 t1 = u64 [sp + 0x10]
 69183: 82 12 18                 t0 = u64 [sp + 0x18]
 69186: 82 10 08                 ra = u64 [sp + 0x8]
 69189: 82 18 40                 a1 = u64 [sp + 0x40]
 69192: 82 17 38                 a0 = u64 [sp + 0x38]
 69195: 01                       fallthrough
      :                          @5408
 69196: 97 89 04                 a2 = a1 << 0x4
 69199: c8 79 09                 a2 = a2 + a0
 69202: 7b 9a                    u64 [a2] = a3
 69204: 7b 95 08                 u64 [a2 + 0x8] = s0
 69207: 95 88 01                 a1 = a1 + 0x1
 69210: 7b 18 40                 u64 [sp + 0x40] = a1
 69213: 01                       fallthrough
      :                          @5409
 69214: 51 05 3b                 jump @5414 if s0 == 0
      :                          @5410
 69217: 82 17 30                 a0 = u64 [sp + 0x30]
 69220: ab 78 1d                 jump @5413 if a1 != a0
      :                          @5411
 69223: 95 17 30                 a0 = sp + 0x30
 69226: 50 20 78 03 9e 45 ff     ra = 888, jump @1605
      :                          @5412 [@dyn 444]
 69233: 33 04 18                 t2 = 0x18
 69236: 82 13 10                 t1 = u64 [sp + 0x10]
 69239: 82 12 18                 t0 = u64 [sp + 0x18]
 69242: 82 10 08                 ra = u64 [sp + 0x8]
 69245: 82 18 40                 a1 = u64 [sp + 0x40]
 69248: 01                       fallthrough
      :                          @5413
 69249: 82 17 38                 a0 = u64 [sp + 0x38]
 69252: 95 59 ff                 a2 = s0 + 0xffffffffffffffff
 69255: 97 8a 04                 a3 = a1 << 0x4
 69258: c8 7a 0a                 a3 = a3 + a0
 69261: 7b a6                    u64 [a3] = s1
 69263: 7b a9 08                 u64 [a3 + 0x8] = a2
 69266: 95 88 01                 a1 = a1 + 0x1
 69269: 7b 18 40                 u64 [sp + 0x40] = a1
 69272: 01                       fallthrough
      :                          @5414
 69273: 95 55 01                 s0 = s0 + 0x1
 69276: ae 05 34 ff              jump @5398 if s0 >=u ra
      :                          @5415
 69280: 82 17 30                 a0 = u64 [sp + 0x30]
 69283: ab 78 18 ff              jump @5397 if a1 != a0
      :                          @5416
 69287: 95 17 30                 a0 = sp + 0x30
 69290: 50 20 7a 03 5e 45 ff     ra = 890, jump @1605
      :                          @5417 [@dyn 445]
 69297: 33 04 18                 t2 = 0x18
 69300: 82 13 10                 t1 = u64 [sp + 0x10]
 69303: 82 12 18                 t0 = u64 [sp + 0x18]
 69306: 82 10 08                 ra = u64 [sp + 0x8]
 69309: 82 18 40                 a1 = u64 [sp + 0x40]
 69312: 28 fb fe                 jump @5397
      :                          @5418
 69315: 82 18 30                 a1 = u64 [sp + 0x30]
 69318: 51 08 30                 jump @5425 if a1 == 0
      :                          @5419
 69321: 33 07 00 00 01           a0 = 0x10000
 69326: ac 87 28                 jump @5425 if a0 <u a1
      :                          @5420
 69329: 82 17 38                 a0 = u64 [sp + 0x38]
 69332: 97 88 04                 a1 = a1 << 0x4
 69335: 33 09 b0 02 03           a2 = 0x302b0
 69340: 95 99 00 00 10           a2 = a2 + 0x100000
 69345: 01                       fallthrough
      :                          @5421
 69346: 82 9a                    a3 = u64 [a2]
 69348: c9 a9 0b                 a4 = a2 - a3
 69351: ab 7b 0f                 jump @5425 if a4 != a0
      :                          @5422
 69354: c9 8a 0b                 a4 = a3 - a1
 69357: 01                       fallthrough
      :                          @5423
 69358: 82 9c                    a5 = u64 [a2]
 69360: ab ac f2                 jump @5421 if a5 != a3
      :                          @5424
 69363: 7b 9b                    u64 [a2] = a4
 69365: 01                       fallthrough
      :                          @5425
 69366: 82 10 58                 ra = u64 [sp + 0x58]
 69369: 82 15 50                 s0 = u64 [sp + 0x50]
 69372: 82 16 48                 s1 = u64 [sp + 0x48]
 69375: 95 11 60                 sp = sp + 0x60
 69378: 32 00                    ret
      :                          @5426
 69380: 00                       trap
      :                          @5427
 69381: 00                       trap
      :                          @5428
 69382: 00                       trap
      :                          @5429
 69383: 00                       trap
      :                          @5430
 69384: 00                       trap
      :                          @5431
 69385: 00                       trap
      :                          @5432
 69386: 82 9a                    a3 = u64 [a2]
 69388: 95 a6 14                 s1 = a3 + 0x14
 69391: ac a6 f1 03              jump @5497 if s1 <u a3
      :                          @5433
 69395: 95 6b 01                 a4 = s1 + 0x1
 69398: 88 bc 01                 a5 = a4 <u 0x1
 69401: d8 b8 0b                 a4 = a1 <u a4
 69404: d4 cb 0b                 a4 = a4 | a5
 69407: 52 0b e1 03              jump @5497 if a4 != 0
      :                          @5434
 69411: 82 9b                    a4 = u64 [a2]
 69413: ab ab e5                 jump @5432 if a4 != a3
      :                          @5435
 69416: 7b 96                    u64 [a2] = s1
 69418: 33 0c                    a5 = 0
 69420: 7b 17                    u64 [sp] = a0
 69422: 33 05 b0 02 03           s0 = 0x302b0
 69427: 7b 15 30                 u64 [sp + 0x30] = s0
 69430: 95 55 00 00 10           s0 = s0 + 0x100000
 69435: c9 65 05                 s0 = s0 - s1
 69438: 33 09 14                 a2 = 0x14
 69441: 33 06 14                 s1 = 0x14
 69444: 64 57                    a0 = s0
 69446: 33 08                    a1 = 0
 69448: 50 20 7c 03 c5 fc 01     ra = 892, jump @13689
      :                          @5436 [@dyn 446]
 69455: 7b 16 88 00              u64 [sp + 0x88] = s1
 69459: 7b 15 90 00              u64 [sp + 0x90] = s0
 69463: 7b 16 98 00              u64 [sp + 0x98] = s1
 69467: 95 17 70                 a0 = sp + 0x70
 69470: 95 18 88 00              a1 = sp + 0x88
 69474: 33 09 14                 a2 = 0x14
 69477: 50 20 7e 03 6c 55 ff     ra = 894, jump @1895
      :                          @5437 [@dyn 447]
 69484: 33 02                    t0 = 0
 69486: 82 13 38                 t1 = u64 [sp + 0x38]
 69489: 82 39                    a2 = u64 [t1]
 69491: 82 3a 08                 a3 = u64 [t1 + 0x8]
 69494: 82 37 10                 a0 = u64 [t1 + 0x10]
 69497: 82 3b 18                 a4 = u64 [t1 + 0x18]
 69500: 82 18 80 00              a1 = u64 [sp + 0x80]
 69504: 7b 18 10                 u64 [sp + 0x10] = a1
 69507: 82 18 78                 a1 = u64 [sp + 0x78]
 69510: 7b 18 08                 u64 [sp + 0x8] = a1
 69513: 7b 19 20                 u64 [sp + 0x20] = a2
 69516: c9 97 07                 a0 = a0 - a2
 69519: 7b 17 28                 u64 [sp + 0x28] = a0
 69522: 7b 1a 50                 u64 [sp + 0x50] = a3
 69525: 7b 1b 48                 u64 [sp + 0x48] = a4
 69528: c9 ab 0b                 a4 = a4 - a3
 69531: 7b 1b 40                 u64 [sp + 0x40] = a4
 69534: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 69544: 7b 17 60                 u64 [sp + 0x60] = a0
 69547: 28 0d                    jump @5439
      :                          @5438
 69549: 95 22 01                 t0 = t0 + 0x1
 69552: 82 13 38                 t1 = u64 [sp + 0x38]
 69555: 51 12 14 25 03           jump @5494 if t0 == 20
      :                          @5439
 69560: 49 21 88 00              u64 [sp + 136] = 0
 69564: 49 21 90 00 08           u64 [sp + 144] = 0x8
 69569: 82 17 50                 a0 = u64 [sp + 0x50]
 69572: d9 72 08                 a1 = t0 <s a0
 69575: 82 17 48                 a0 = u64 [sp + 0x48]
 69578: d9 72 07                 a0 = t0 <s a0
 69581: e0 87 09                 a2 = a0 & ~a1
 69584: 49 21 98 00              u64 [sp + 152] = 0
 69588: 7b 12 58                 u64 [sp + 0x58] = t0
 69591: 52 09 0c                 jump @5441 if a2 != 0
      :                          @5440
 69594: 85 88 01                 a1 = a1 ^ 0x1
 69597: d4 87 07                 a0 = a0 | a1
 69600: 52 07 71                 jump @5448 if a0 != 0
      :                          @5441
 69603: 82 17 50                 a0 = u64 [sp + 0x50]
 69606: 82 18 48                 a1 = u64 [sp + 0x48]
 69609: aa 78 15 03              jump @5495 if a1 == a0
      :                          @5442
 69613: 82 17 50                 a0 = u64 [sp + 0x50]
 69616: c9 72 07                 a0 = t0 - a0
 69619: 82 18 28                 a1 = u64 [sp + 0x28]
 69622: ca 78 05                 s0 = a1 * a0
 69625: 82 17 60                 a0 = u64 [sp + 0x60]
 69628: d3 57 07                 a0 = a0 ^ s0
 69631: 82 18 40                 a1 = u64 [sp + 0x40]
 69634: e1 87 07                 a0 = a0 | ~a1
 69637: 51 07 fa 02              jump @5496 if a0 == 0
      :                          @5443
 69641: 82 17 88 00              a0 = u64 [sp + 0x88]
 69645: 51 07 0a                 jump @5445 if a0 == 0
      :                          @5444
 69648: 33 08                    a1 = 0
 69650: 33 07 08                 a0 = 0x8
 69653: 28 1f                    jump @5447
      :                          @5445
 69655: 95 17 88 00              a0 = sp + 0x88
 69659: 33 08                    a1 = 0
 69661: 64 36                    s1 = t1
 69663: 50 20 80 03 f0 42 ff     ra = 896, jump @1581
      :                          @5446 [@dyn 448]
 69670: 64 63                    t1 = s1
 69672: 82 12 58                 t0 = u64 [sp + 0x58]
 69675: 82 18 98 00              a1 = u64 [sp + 0x98]
 69679: 82 17 90 00              a0 = u64 [sp + 0x90]
 69683: 01                       fallthrough
      :                          @5447
 69684: 82 19 40                 a2 = u64 [sp + 0x40]
 69687: cc 95 09                 a2 = s0 /s a2
 69690: 82 1a 20                 a3 = u64 [sp + 0x20]
 69693: c8 a9 09                 a2 = a2 + a3
 69696: 97 8a 03                 a3 = a1 << 0x3
 69699: c8 7a 0a                 a3 = a3 + a0
 69702: 7b a9                    u64 [a3] = a2
 69704: 95 86 01                 s1 = a1 + 0x1
 69707: 7b 16 98 00              u64 [sp + 0x98] = s1
 69711: 28 08                    jump @5449
      :                          @5448
 69713: 33 06                    s1 = 0
 69715: 33 07 08                 a0 = 0x8
 69718: 01                       fallthrough
      :                          @5449
 69719: 82 38 18                 a1 = u64 [t1 + 0x18]
 69722: 82 35 28                 s0 = u64 [t1 + 0x28]
 69725: 82 34 10                 t2 = u64 [t1 + 0x10]
 69728: 82 39 20                 a2 = u64 [t1 + 0x20]
 69731: d9 82 0a                 a3 = t0 <s a1
 69734: d9 52 0b                 a4 = t0 <s s0
 69737: e0 ab 0c                 a5 = a4 & ~a3
 69740: 52 0c 0c                 jump @5451 if a5 != 0
      :                          @5450
 69743: 85 aa 01                 a3 = a3 ^ 0x1
 69746: d4 ba 0a                 a3 = a3 | a4
 69749: 52 0a 66                 jump @5457 if a3 != 0
      :                          @5451
 69752: aa 85 86 02              jump @5495 if s0 == a1
      :                          @5452
 69756: c9 82 0a                 a3 = t0 - a1
 69759: c9 49 09                 a2 = a2 - t2
 69762: ca a9 09                 a2 = a2 * a3
 69765: c9 85 05                 s0 = s0 - a1
 69768: 82 18 60                 a1 = u64 [sp + 0x60]
 69771: d3 98 08                 a1 = a1 ^ a2
 69774: e1 58 08                 a1 = a1 | ~s0
 69777: 51 08 6e 02              jump @5496 if a1 == 0
      :                          @5453
 69781: 82 18 88 00              a1 = u64 [sp + 0x88]
 69785: ab 86 2c                 jump @5456 if s1 != a1
      :                          @5454
 69788: 95 17 88 00              a0 = sp + 0x88
 69792: 64 68                    a1 = s1
 69794: 64 36                    s1 = t1
 69796: 7b 14 68                 u64 [sp + 0x68] = t2
 69799: 7b 19 18                 u64 [sp + 0x18] = a2
 69802: 50 20 82 03 65 42 ff     ra = 898, jump @1581
      :                          @5455 [@dyn 449]
 69809: 82 19 18                 a2 = u64 [sp + 0x18]
 69812: 82 14 68                 t2 = u64 [sp + 0x68]
 69815: 64 63                    t1 = s1
 69817: 82 12 58                 t0 = u64 [sp + 0x58]
 69820: 82 16 98 00              s1 = u64 [sp + 0x98]
 69824: 82 17 90 00              a0 = u64 [sp + 0x90]
 69828: 01                       fallthrough
      :                          @5456
 69829: cc 59 08                 a1 = a2 /s s0
 69832: c8 48 08                 a1 = a1 + t2
 69835: 97 69 03                 a2 = s1 << 0x3
 69838: c8 79 09                 a2 = a2 + a0
 69841: 7b 98                    u64 [a2] = a1
 69843: 95 66 01                 s1 = s1 + 0x1
 69846: 7b 16 98 00              u64 [sp + 0x98] = s1
 69850: 01                       fallthrough
      :                          @5457
 69851: 82 38 28                 a1 = u64 [t1 + 0x28]
 69854: 82 35 38                 s0 = u64 [t1 + 0x38]
 69857: 82 34 20                 t2 = u64 [t1 + 0x20]
 69860: 82 39 30                 a2 = u64 [t1 + 0x30]
 69863: d9 82 0a                 a3 = t0 <s a1
 69866: d9 52 0b                 a4 = t0 <s s0
 69869: e0 ab 0c                 a5 = a4 & ~a3
 69872: 52 0c 0c                 jump @5459 if a5 != 0
      :                          @5458
 69875: 85 aa 01                 a3 = a3 ^ 0x1
 69878: d4 ba 0a                 a3 = a3 | a4
 69881: 52 0a 66                 jump @5465 if a3 != 0
      :                          @5459
 69884: aa 85 02 02              jump @5495 if s0 == a1
      :                          @5460
 69888: c9 82 0a                 a3 = t0 - a1
 69891: c9 49 09                 a2 = a2 - t2
 69894: ca a9 09                 a2 = a2 * a3
 69897: c9 85 05                 s0 = s0 - a1
 69900: 82 18 60                 a1 = u64 [sp + 0x60]
 69903: d3 98 08                 a1 = a1 ^ a2
 69906: e1 58 08                 a1 = a1 | ~s0
 69909: 51 08 ea 01              jump @5496 if a1 == 0
      :                          @5461
 69913: 82 18 88 00              a1 = u64 [sp + 0x88]
 69917: ab 86 2c                 jump @5464 if s1 != a1
      :                          @5462
 69920: 95 17 88 00              a0 = sp + 0x88
 69924: 64 68                    a1 = s1
 69926: 64 36                    s1 = t1
 69928: 7b 14 68                 u64 [sp + 0x68] = t2
 69931: 7b 19 18                 u64 [sp + 0x18] = a2
 69934: 50 20 84 03 e1 41 ff     ra = 900, jump @1581
      :                          @5463 [@dyn 450]
 69941: 82 19 18                 a2 = u64 [sp + 0x18]
 69944: 82 14 68                 t2 = u64 [sp + 0x68]
 69947: 64 63                    t1 = s1
 69949: 82 12 58                 t0 = u64 [sp + 0x58]
 69952: 82 16 98 00              s1 = u64 [sp + 0x98]
 69956: 82 17 90 00              a0 = u64 [sp + 0x90]
 69960: 01                       fallthrough
      :                          @5464
 69961: cc 59 08                 a1 = a2 /s s0
 69964: c8 48 08                 a1 = a1 + t2
 69967: 97 69 03                 a2 = s1 << 0x3
 69970: c8 79 09                 a2 = a2 + a0
 69973: 7b 98                    u64 [a2] = a1
 69975: 95 66 01                 s1 = s1 + 0x1
 69978: 7b 16 98 00              u64 [sp + 0x98] = s1
 69982: 01                       fallthrough
      :                          @5465
 69983: 82 38 38                 a1 = u64 [t1 + 0x38]
 69986: 82 35 08                 s0 = u64 [t1 + 0x8]
 69989: 82 34 30                 t2 = u64 [t1 + 0x30]
 69992: 82 39                    a2 = u64 [t1]
 69994: d9 82 0a                 a3 = t0 <s a1
 69997: d9 52 0b                 a4 = t0 <s s0
 70000: e0 ab 0c                 a5 = a4 & ~a3
 70003: 52 0c 0c                 jump @5467 if a5 != 0
      :                          @5466
 70006: 85 aa 01                 a3 = a3 ^ 0x1
 70009: d4 ba 0a                 a3 = a3 | a4
 70012: 52 0a 5d                 jump @5473 if a3 != 0
      :                          @5467
 70015: aa 85 7f 01              jump @5495 if s0 == a1
      :                          @5468
 70019: c9 82 0a                 a3 = t0 - a1
 70022: c9 49 09                 a2 = a2 - t2
 70025: ca a9 09                 a2 = a2 * a3
 70028: c9 85 05                 s0 = s0 - a1
 70031: 82 18 60                 a1 = u64 [sp + 0x60]
 70034: d3 98 08                 a1 = a1 ^ a2
 70037: e1 58 08                 a1 = a1 | ~s0
 70040: 51 08 67 01              jump @5496 if a1 == 0
      :                          @5469
 70044: 82 18 88 00              a1 = u64 [sp + 0x88]
 70048: ab 86 23                 jump @5472 if s1 != a1
      :                          @5470
 70051: 95 17 88 00              a0 = sp + 0x88
 70055: 64 68                    a1 = s1
 70057: 7b 14 68                 u64 [sp + 0x68] = t2
 70060: 64 96                    s1 = a2
 70062: 50 20 86 03 61 41 ff     ra = 902, jump @1581
      :                          @5471 [@dyn 451]
 70069: 64 69                    a2 = s1
 70071: 82 14 68                 t2 = u64 [sp + 0x68]
 70074: 82 16 98 00              s1 = u64 [sp + 0x98]
 70078: 82 17 90 00              a0 = u64 [sp + 0x90]
 70082: 01                       fallthrough
      :                          @5472
 70083: cc 59 08                 a1 = a2 /s s0
 70086: c8 48 08                 a1 = a1 + t2
 70089: 97 69 03                 a2 = s1 << 0x3
 70092: c8 97 07                 a0 = a0 + a2
 70095: 7b 78                    u64 [a0] = a1
 70097: 95 66 01                 s1 = s1 + 0x1
 70100: 7b 16 98 00              u64 [sp + 0x98] = s1
 70104: 01                       fallthrough
      :                          @5473
 70105: 82 17 90 00              a0 = u64 [sp + 0x90]
 70109: 68 68                    a1 = clz s1
 70111: 9a 8a 40                 a3 = 0x40 - a1
 70114: 7b 17 68                 u64 [sp + 0x68] = a0
 70117: 64 68                    a1 = s1
 70119: 33 09                    a2 = 0
 70121: 50 20 88 03 ab 19 ff     ra = 904, jump @879
      :                          @5474 [@dyn 452]
 70128: 82 12 58                 t0 = u64 [sp + 0x58]
 70131: 33 03 01                 t1 = 0x1
 70134: 33 04 13                 t2 = 0x13
 70137: ae 63 a1 00              jump @5485 if t1 >=u s1
      :                          @5475
 70141: 64 60                    ra = s1
 70143: 82 17 10                 a0 = u64 [sp + 0x10]
 70146: ae 72 6c                 jump @5482 if t0 >=u a0
      :                          @5476
 70149: 33 09                    a2 = 0
 70151: 96 27 18                 a0 = t0 * 0x18
 70154: 82 18 08                 a1 = u64 [sp + 0x8]
 70157: c8 87 07                 a0 = a0 + a1
 70160: 95 7a 10                 a3 = a0 + 0x10
 70163: 95 7b 08                 a4 = a0 + 0x8
 70166: 33 07 01                 a0 = 0x1
 70169: 28 0b                    jump @5478
      :                          @5477
 70171: 95 99 02                 a2 = a2 + 0x2
 70174: 86 97 01                 a0 = a2 | 0x1
 70177: ae 07 79                 jump @5485 if a0 >=u ra
      :                          @5478
 70180: 97 98 03                 a1 = a2 << 0x3
 70183: 82 1c 68                 a5 = u64 [sp + 0x68]
 70186: c8 c8 08                 a1 = a1 + a5
 70189: 82 88                    a1 = u64 [a1]
 70191: 97 77 03                 a0 = a0 << 0x3
 70194: c8 c7 07                 a0 = a0 + a5
 70197: 82 7c                    a5 = u64 [a0]
 70199: 3e 02 00 00 03           u64 [0x30000] = t0
 70204: 8f 82                    t0 = a1 >s 0
 70206: 64 87                    a0 = a1
 70208: 93 27                    a0 = 0 if t0 == 0
 70210: 3a 02 00 00 03           t0 = u64 [0x30000]
 70215: e5 4c 0c                 a5 = mins(a5, t2)
 70218: ac 7c d1                 jump @5477 if a5 <u a0
      :                          @5479
 70221: 82 a8                    a1 = u64 [a3]
 70223: ae 87 b3 00              jump @5499 if a0 >=u a1
      :                          @5480
 70227: 82 b8                    a1 = u64 [a4]
 70229: d8 c7 05                 s0 = a0 <u a5
 70232: 85 56 01                 s1 = s0 ^ 0x1
 70235: c8 78 08                 a1 = a1 + a0
 70238: c8 57 07                 a0 = a0 + s0
 70241: d8 7c 05                 s0 = a5 <u a0
 70244: d4 65 05                 s0 = s0 | s1
 70247: 78 83                    u8 [a1] = t1
 70249: 51 05 e4                 jump @5479 if s0 == 0
      :                          @5481
 70252: 28 af                    jump @5477
      :                          @5482
 70254: 82 17 68                 a0 = u64 [sp + 0x68]
 70257: 95 77 08                 a0 = a0 + 0x8
 70260: 33 08 01                 a1 = 0x1
 70263: 01                       fallthrough
      :                          @5483
 70264: 82 79 f8                 a2 = u64 [a0 + 0xfffffffffffffff8]
 70267: 82 7a                    a3 = u64 [a0]
 70269: 3e 02 00 00 03           u64 [0x30000] = t0
 70274: 8f 92                    t0 = a2 >s 0
 70276: 93 29                    a2 = 0 if t0 == 0
 70278: 3a 02 00 00 03           t0 = u64 [0x30000]
 70283: e5 4a 0a                 a3 = mins(a3, t2)
 70286: ae 9a 73                 jump @5498 if a3 >=u a2
      :                          @5484
 70289: 95 88 02                 a1 = a1 + 0x2
 70292: 95 77 10                 a0 = a0 + 0x10
 70295: ac 08 e1                 jump @5483 if a1 <u ra
      :                          @5485
 70298: 82 17 88 00              a0 = u64 [sp + 0x88]
 70302: 82 16 30                 s1 = u64 [sp + 0x30]
 70305: 33 05 00 00 10           s0 = 0x100000
 70310: 51 07 07 fd              jump @5438 if a0 == 0
      :                          @5486
 70314: 56 37 00 00 02 03 fd     jump @5438 if a0 >u 131072
      :                          @5487
 70321: 97 77 03                 a0 = a0 << 0x3
 70324: 01                       fallthrough
      :                          @5488
 70325: c8 56 09                 a2 = s1 + s0
 70328: 82 98                    a1 = u64 [a2]
 70330: c9 89 0a                 a3 = a2 - a1
 70333: 82 1b 68                 a4 = u64 [sp + 0x68]
 70336: ab ba ed fc              jump @5438 if a3 != a4
      :                          @5489
 70340: c9 78 0a                 a3 = a1 - a0
 70343: 01                       fallthrough
      :                          @5490
 70344: 82 9b                    a4 = u64 [a2]
 70346: ab 8b eb                 jump @5488 if a4 != a1
      :                          @5491
 70349: 7b 9a                    u64 [a2] = a3
 70351: 33 0c                    a5 = 0
 70353: 01                       fallthrough
      :                          @5492
 70354: ab 8b e3                 jump @5488 if a4 != a1
      :                          @5493
 70357: 28 d8 fc                 jump @5438
      :                          @5494
 70360: 82 17 80 00              a0 = u64 [sp + 0x80]
 70364: 82 18 78                 a1 = u64 [sp + 0x78]
 70367: 82 19 70                 a2 = u64 [sp + 0x70]
 70370: 82 1a                    a3 = u64 [sp]
 70372: 7b a7 10                 u64 [a3 + 0x10] = a0
 70375: 7b a8 08                 u64 [a3 + 0x8] = a1
 70378: 7b a9                    u64 [a3] = a2
 70380: 82 10 b0 00              ra = u64 [sp + 0xb0]
 70384: 82 15 a8 00              s0 = u64 [sp + 0xa8]
 70388: 82 16 a0 00              s1 = u64 [sp + 0xa0]
 70392: 95 11 b8 00              sp = sp + 0xb8
 70396: 32 00                    ret
      :                          @5495
 70398: 00                       trap
      :                          @5496
 70399: 00                       trap
      :                          @5497
 70400: 00                       trap
      :                          @5498
 70401: 00                       trap
      :                          @5499
 70402: 00                       trap
      :                          @5500
 70403: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 70406: 7b 10 30                 u64 [sp + 0x30] = ra
 70409: 7b 15 28                 u64 [sp + 0x28] = s0
 70412: 7b 16 20                 u64 [sp + 0x20] = s1
 70415: 64 9c                    a5 = a2
 70417: 64 84                    t2 = a1
 70419: 89 88 10                 a1 = a1 <s 0x10
 70422: 85 88 01                 a1 = a1 ^ 0x1
 70425: 97 88 01                 a1 = a1 << 0x1
 70428: 89 99 10                 a2 = a2 <s 0x10
 70431: 85 99 01                 a2 = a2 ^ 0x1
 70434: 97 99 03                 a2 = a2 << 0x3
 70437: d4 98 00                 ra = a1 | a2
 70440: 89 a8 10                 a1 = a3 <s 0x10
 70443: 85 88 01                 a1 = a1 ^ 0x1
 70446: 97 88 01                 a1 = a1 << 0x1
 70449: 89 b9 10                 a2 = a4 <s 0x10
 70452: 85 99 01                 a2 = a2 ^ 0x1
 70455: 97 99 03                 a2 = a2 << 0x3
 70458: d4 98 02                 t0 = a1 | a2
 70461: d4 20 08                 a1 = ra | t0
 70464: 7b 17                    u64 [sp] = a0
 70466: 51 08 11 01              jump @5520 if a1 == 0
      :                          @5501
 70470: 88 08 01                 a1 = ra <u 0x1
 70473: 14 03 00 00 00 00 00 00 00 80 t1 = 0x8000000000000000
 70483: 7b 13 08                 u64 [sp + 0x8] = t1
 70486: 28 52                    jump @5504
      :                          @5502
 70488: c8 48 08                 a1 = a1 + t2
 70491: 89 87                    a0 = a1 <s 0
 70493: 89 8b 10                 a4 = a1 <s 0x10
 70496: 85 bb 01                 a4 = a4 ^ 0x1
 70499: 97 bb 01                 a4 = a4 << 0x1
 70502: 94 7b 01                 a4 = 0x1 if a0 != 0
 70505: 01                       fallthrough
      :                          @5503
 70506: 83 07                    i32 a0 = ra + 0
 70508: 83 66                    i32 s1 = s1 + 0
 70510: d3 67 07                 a0 = a0 ^ s1
 70513: 89 96                    s1 = a2 <s 0
 70515: 89 93 10                 t1 = a2 <s 0x10
 70518: 85 35 01                 s0 = t1 ^ 0x1
 70521: 97 55 03                 s0 = s0 << 0x3
 70524: 94 65 04                 s0 = 0x4 if s1 != 0
 70527: d4 5b 0b                 a4 = a4 | s0
 70530: db 7b 02                 t0 = a4 if a0 != 0
 70533: da 7b 00                 ra = a4 if a0 == 0
 70536: 82 1b 18                 a4 = u64 [sp + 0x18]
 70539: db 79 0b                 a4 = a2 if a0 != 0
 70542: 82 1c 10                 a5 = u64 [sp + 0x10]
 70545: da 79 0c                 a5 = a2 if a0 == 0
 70548: db 78 0a                 a3 = a1 if a0 != 0
 70551: da 78 04                 t2 = a1 if a0 == 0
 70554: 83 07                    i32 a0 = ra + 0
 70556: d4 20 08                 a1 = ra | t0
 70559: 83 89                    i32 a2 = a1 + 0
 70561: 88 78 01                 a1 = a0 <u 0x1
 70564: 51 09 af 00              jump @5520 if a2 == 0
      :                          @5504
 70568: d2 20 07                 a0 = ra & t0
 70571: 83 77                    i32 a0 = a0 + 0
 70573: 52 07 b9 00              jump @5521 if a0 != 0
      :                          @5505
 70577: 84 88 01                 a1 = a1 & 0x1
 70580: 64 26                    s1 = t0
 70582: da 80 06                 s1 = ra if a1 == 0
 70585: 84 67 08                 a0 = s1 & 0x8
 70588: c9 cb 05                 s0 = a4 - a5
 70591: 7b 1b 18                 u64 [sp + 0x18] = a4
 70594: 7b 1c 10                 u64 [sp + 0x10] = a5
 70597: 52 07 2c                 jump @5511 if a0 != 0
      :                          @5506
 70600: 84 67 04                 a0 = s1 & 0x4
 70603: 52 07 48                 jump @5514 if a0 != 0
      :                          @5507
 70606: 84 67 02                 a0 = s1 & 0x2
 70609: c9 4a 09                 a2 = a3 - t2
 70612: 52 07 5c                 jump @5517 if a0 != 0
      :                          @5508
 70615: aa 4a a4 00              jump @5523 if a3 == t2
      :                          @5509
 70619: ca 54 07                 a0 = t2 * s0
 70622: 82 18 08                 a1 = u64 [sp + 0x8]
 70625: d3 78 08                 a1 = a1 ^ a0
 70628: e1 98 08                 a1 = a1 | ~a2
 70631: 51 08 95 00              jump @5524 if a1 == 0
      :                          @5510
 70635: 33 08                    a1 = 0
 70637: 9a 77                    a0 = -a0
 70639: 28 59                    jump @5519
      :                          @5511
 70641: aa cb 8a 00              jump @5523 if a4 == a5
      :                          @5512
 70645: c9 4a 07                 a0 = a3 - t2
 70648: 9a c8 0f                 a1 = 0xf - a5
 70651: ca 87 07                 a0 = a0 * a1
 70654: 82 18 08                 a1 = u64 [sp + 0x8]
 70657: d3 78 08                 a1 = a1 ^ a0
 70660: e1 58 08                 a1 = a1 | ~s0
 70663: 51 08 75                 jump @5524 if a1 == 0
      :                          @5513
 70666: cc 57 08                 a1 = a0 /s s0
 70669: 33 09 0f                 a2 = 0xf
 70672: 28 48 ff                 jump @5502
      :                          @5514
 70675: aa cb 68                 jump @5523 if a4 == a5
      :                          @5515
 70678: c9 a4 07                 a0 = t2 - a3
 70681: ca c7 07                 a0 = a0 * a5
 70684: 82 18 08                 a1 = u64 [sp + 0x8]
 70687: d3 78 08                 a1 = a1 ^ a0
 70690: e1 58 08                 a1 = a1 | ~s0
 70693: 51 08 57                 jump @5524 if a1 == 0
      :                          @5516
 70696: 33 09                    a2 = 0
 70698: cc 57 08                 a1 = a0 /s s0
 70701: 28 2b ff                 jump @5502
      :                          @5517
 70704: aa 4a 4b                 jump @5523 if a3 == t2
      :                          @5518
 70707: 33 08 0f                 a1 = 0xf
 70710: c9 48 07                 a0 = a1 - t2
 70713: ca 57 07                 a0 = a0 * s0
 70716: 82 15 08                 s0 = u64 [sp + 0x8]
 70719: d3 75 05                 s0 = s0 ^ a0
 70722: e1 95 05                 s0 = s0 | ~a2
 70725: 51 05 37                 jump @5524 if s0 == 0
      :                          @5519
 70728: 33 0b                    a4 = 0
 70730: cc 97 09                 a2 = a0 /s a2
 70733: c8 c9 09                 a2 = a2 + a5
 70736: 28 1a ff                 jump @5503
      :                          @5520
 70739: 82 18                    a1 = u64 [sp]
 70741: 7b 84 08                 u64 [a1 + 0x8] = t2
 70744: 7b 8c 10                 u64 [a1 + 0x10] = a5
 70747: 7b 8a 18                 u64 [a1 + 0x18] = a3
 70750: 7b 8b 20                 u64 [a1 + 0x20] = a4
 70753: 33 07 01                 a0 = 0x1
 70756: 28 07                    jump @5522
      :                          @5521
 70758: 33 07                    a0 = 0
 70760: 82 18                    a1 = u64 [sp]
 70762: 01                       fallthrough
      :                          @5522
 70763: 7b 87                    u64 [a1] = a0
 70765: 82 10 30                 ra = u64 [sp + 0x30]
 70768: 82 15 28                 s0 = u64 [sp + 0x28]
 70771: 82 16 20                 s1 = u64 [sp + 0x20]
 70774: 95 11 38                 sp = sp + 0x38
 70777: 32 00                    ret
      :                          @5523
 70779: 00                       trap
      :                          @5524
 70780: 00                       trap
      :                          @5525
 70781: c9 a5 09                 a2 = s0 - a3
 70784: 97 99 01                 a2 = a2 << 0x1
 70787: 95 99 05                 a2 = a2 + 0x5
 70790: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 70793: 01                       fallthrough
      :                          @5526
 70794: c8 9c 0c                 a5 = a5 + a2
 70797: 95 55 01                 s0 = s0 + 0x1
 70800: 95 44 02                 t2 = t2 + 0x2
 70803: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 70806: 82 19 30                 a2 = u64 [sp + 0x30]
 70809: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 70812: 7b 19 30                 u64 [sp + 0x30] = a2
 70815: ad 5a 95 00              jump @5532 if a3 <s s0
      :                          @5527
 70819: 82 19 38                 a2 = u64 [sp + 0x38]
 70822: c9 89 09                 a2 = a2 - a1
 70825: ae 90 5a                 jump @5530 if ra >=u a2
      :                          @5528
 70828: c8 2a 09                 a2 = a3 + t0
 70831: 97 8b 04                 a4 = a1 << 0x4
 70834: c8 7b 0b                 a4 = a4 + a0
 70837: 7b b9 08                 u64 [a4 + 0x8] = a2
 70840: 7b b9 18                 u64 [a4 + 0x18] = a2
 70843: c8 53 09                 a2 = t1 + s0
 70846: 7b b9                    u64 [a4] = a2
 70848: 7b b9 20                 u64 [a4 + 0x20] = a2
 70851: c9 a2 09                 a2 = t0 - a3
 70854: 7b b9 28                 u64 [a4 + 0x28] = a2
 70857: 7b b9 38                 u64 [a4 + 0x38] = a2
 70860: c8 52 09                 a2 = t0 + s0
 70863: 7b b9 48                 u64 [a4 + 0x48] = a2
 70866: 7b b9 58                 u64 [a4 + 0x58] = a2
 70869: c8 3a 09                 a2 = a3 + t1
 70872: 7b b9 40                 u64 [a4 + 0x40] = a2
 70875: 7b b9 60                 u64 [a4 + 0x60] = a2
 70878: c9 a3 09                 a2 = t1 - a3
 70881: 7b b9 50                 u64 [a4 + 0x50] = a2
 70884: 7b b9 70                 u64 [a4 + 0x70] = a2
 70887: 82 19 30                 a2 = u64 [sp + 0x30]
 70890: 7b b9 10                 u64 [a4 + 0x10] = a2
 70893: 7b b9 30                 u64 [a4 + 0x30] = a2
 70896: 7b b6 68                 u64 [a4 + 0x68] = s1
 70899: 7b b6 78                 u64 [a4 + 0x78] = s1
 70902: 95 88 08                 a1 = a1 + 0x8
 70905: 7b 18 48                 u64 [sp + 0x48] = a1
 70908: 59 0c 81                 jump @5525 if a5 >=s 0
      :                          @5529
 70911: 64 49                    a2 = t2
 70913: 28 89                    jump @5526
      :                          @5530
 70915: 95 17 38                 a0 = sp + 0x38
 70918: 33 09 08                 a2 = 0x8
 70921: 7b 1a 28                 u64 [sp + 0x28] = a3
 70924: 7b 1c 20                 u64 [sp + 0x20] = a5
 70927: 7b 14 18                 u64 [sp + 0x18] = t2
 70930: 50 20 8a 03 76 40 ff     ra = 906, jump @1641
      :                          @5531 [@dyn 453]
 70937: 33 00 07                 ra = 0x7
 70940: 82 14 18                 t2 = u64 [sp + 0x18]
 70943: 82 1c 20                 a5 = u64 [sp + 0x20]
 70946: 82 13 08                 t1 = u64 [sp + 0x8]
 70949: 82 12 10                 t0 = u64 [sp + 0x10]
 70952: 82 1a 28                 a3 = u64 [sp + 0x28]
 70955: 82 18 48                 a1 = u64 [sp + 0x48]
 70958: 82 17 40                 a0 = u64 [sp + 0x40]
 70961: 28 7b ff                 jump @5528
      :                          @5532
 70964: 82 17 48                 a0 = u64 [sp + 0x48]
 70967: 82 18 40                 a1 = u64 [sp + 0x40]
 70970: 82 19 38                 a2 = u64 [sp + 0x38]
 70973: 82 1a                    a3 = u64 [sp]
 70975: 7b a7 10                 u64 [a3 + 0x10] = a0
 70978: 7b a8 08                 u64 [a3 + 0x8] = a1
 70981: 7b a9                    u64 [a3] = a2
 70983: 82 10 60                 ra = u64 [sp + 0x60]
 70986: 82 15 58                 s0 = u64 [sp + 0x58]
 70989: 82 16 50                 s1 = u64 [sp + 0x50]
 70992: 95 11 68                 sp = sp + 0x68
 70995: 32 00                    ret
      :                          @5533
 70997: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 71000: 7b 10 38                 u64 [sp + 0x38] = ra
 71003: 7b 15 30                 u64 [sp + 0x30] = s0
 71006: 7b 16 28                 u64 [sp + 0x28] = s1
 71009: 64 89                    a2 = a1
 71011: 98 88 01                 a1 = a1 >> 0x1
 71014: 51 08 90 01              jump @5565 if a1 == 0
      :                          @5534
 71018: 7b 19 20                 u64 [sp + 0x20] = a2
 71021: 64 75                    s0 = a0
 71023: 64 86                    s1 = a1
 71025: 50 20 8c 03 e4           ra = 908, jump @5533
      :                          @5535 [@dyn 454]
 71030: 82 17 20                 a0 = u64 [sp + 0x20]
 71033: c9 67 08                 a1 = a0 - s1
 71036: 7b 16 08                 u64 [sp + 0x8] = s1
 71039: 97 67 03                 a0 = s1 << 0x3
 71042: 7b 15 10                 u64 [sp + 0x10] = s0
 71045: c8 57 07                 a0 = a0 + s0
 71048: 50 20 8e 03 cd           ra = 910, jump @5533
      :                          @5536 [@dyn 455]
 71053: 82 18 20                 a1 = u64 [sp + 0x20]
 71056: 98 87 3c                 a0 = a1 >> 0x3c
 71059: 52 07 74 01              jump @5569 if a0 != 0
      :                          @5537
 71063: 88 77 01                 a0 = a0 <u 0x1
 71066: 97 89 03                 a2 = a1 << 0x3
 71069: 97 72 03                 t0 = a0 << 0x3
 71072: 33 04 b0 02 03           t2 = 0x302b0
 71077: 33 03 00 00 10           t1 = 0x100000
 71082: c8 34 00                 ra = t2 + t1
 71085: 82 18 10                 a1 = u64 [sp + 0x10]
 71088: 01                       fallthrough
      :                          @5538
 71089: 82 05                    s0 = u64 [ra]
 71091: c8 95 0b                 a4 = s0 + a2
 71094: ac 5b 50 01              jump @5568 if a4 <u s0
      :                          @5539
 71098: c8 2b 0c                 a5 = a4 + t0
 71101: d8 bc 06                 s1 = a5 <u a4
 71104: d8 c3 0c                 a5 = t1 <u a5
 71107: d4 6c 0c                 a5 = a5 | s1
 71110: 52 0c 40 01              jump @5568 if a5 != 0
      :                          @5540
 71114: c9 b4 0c                 a5 = t2 - a4
 71117: c8 3c 0a                 a3 = a5 + t1
 71120: 84 ac 07                 a5 = a3 & 0x7
 71123: c8 cb 0b                 a4 = a4 + a5
 71126: 01                       fallthrough
      :                          @5541
 71127: 82 07                    a0 = u64 [ra]
 71129: ab 57 d8                 jump @5538 if a0 != s0
      :                          @5542
 71132: 7b 0b                    u64 [ra] = a4
 71134: 7b 1c                    u64 [sp] = a5
 71136: c9 ca 06                 s1 = a3 - a5
 71139: 64 67                    a0 = s1
 71141: 7b 19 18                 u64 [sp + 0x18] = a2
 71144: 50 20 90 03 f8 f3 01     ra = 912, jump @13635
      :                          @5543 [@dyn 456]
 71151: 64 62                    t0 = s1
 71153: 82 10 10                 ra = u64 [sp + 0x10]
 71156: 82 14 20                 t2 = u64 [sp + 0x20]
 71159: 33 0a                    a3 = 0
 71161: 33 07                    a0 = 0
 71163: 64 68                    a1 = s1
 71165: 82 16 08                 s1 = u64 [sp + 0x8]
 71168: 64 63                    t1 = s1
 71170: 28 14                    jump @5545
      :                          @5544
 71172: 95 77 01                 a0 = a0 + 0x1
 71175: d8 6a 09                 a2 = a3 <u s1
 71178: d8 43 0b                 a4 = t1 <u t2
 71181: d2 b9 09                 a2 = a2 & a4
 71184: 95 88 08                 a1 = a1 + 0x8
 71187: 51 09 2c                 jump @5550 if a2 == 0
      :                          @5545
 71190: 97 a9 03                 a2 = a3 << 0x3
 71193: c8 09 09                 a2 = a2 + ra
 71196: 82 9b                    a4 = u64 [a2]
 71198: 97 39 03                 a2 = t1 << 0x3
 71201: c8 09 09                 a2 = a2 + ra
 71204: 82 9c                    a5 = u64 [a2]
 71206: ae bc 0e                 jump @5548 if a5 >=u a4
      :                          @5546
 71209: ae 47 db 00              jump @5566 if a0 >=u t2
      :                          @5547
 71213: 7b 8c                    u64 [a1] = a5
 71215: 95 33 01                 t1 = t1 + 0x1
 71218: 28 d2                    jump @5544
      :                          @5548
 71220: ae 47 d0 00              jump @5566 if a0 >=u t2
      :                          @5549
 71224: 7b 8b                    u64 [a1] = a4
 71226: 95 aa 01                 a3 = a3 + 0x1
 71229: 28 c7                    jump @5544
      :                          @5550
 71231: 64 29                    a2 = t0
 71233: ae 6a 30                 jump @5554 if a3 >=u s1
      :                          @5551
 71236: 95 7b ff                 a4 = a0 + 0xffffffffffffffff
 71239: 97 ac 03                 a5 = a3 << 0x3
 71242: c8 0c 0c                 a5 = a5 + ra
 71245: c9 a6 0a                 a3 = s1 - a3
 71248: e4 74 02                 t0 = maxu(t2, a0)
 71251: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 71254: 01                       fallthrough
      :                          @5552
 71255: aa b2 ad 00              jump @5566 if t0 == a4
      :                          @5553
 71259: 82 c6                    s1 = u64 [a5]
 71261: 7b 86                    u64 [a1] = s1
 71263: 95 77 01                 a0 = a0 + 0x1
 71266: 95 cc 08                 a5 = a5 + 0x8
 71269: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 71272: 95 bb 01                 a4 = a4 + 0x1
 71275: 95 88 08                 a1 = a1 + 0x8
 71278: 52 0a e9                 jump @5552 if a3 != 0
      :                          @5554
 71281: 64 96                    s1 = a2
 71283: ae 43 47                 jump @5558 if t1 >=u t2
      :                          @5555
 71286: e4 47 02                 t0 = maxu(a0, t2)
 71289: c9 34 0a                 a3 = t2 - t1
 71292: 97 38 03                 a1 = t1 << 0x3
 71295: c8 08 08                 a1 = a1 + ra
 71298: 97 7b 03                 a4 = a0 << 0x3
 71301: 82 19 18                 a2 = u64 [sp + 0x18]
 71304: c9 9b 0b                 a4 = a4 - a2
 71307: 33 0c b0 02 03           a5 = 0x302b0
 71312: 82 19                    a2 = u64 [sp]
 71314: c8 95 05                 s0 = s0 + a2
 71317: c9 5c 0c                 a5 = a5 - s0
 71320: c8 cb 0b                 a4 = a4 + a5
 71323: 95 bb 00 00 10           a4 = a4 + 0x100000
 71328: c9 72 07                 a0 = t0 - a0
 71331: 01                       fallthrough
      :                          @5556
 71332: 51 07 61                 jump @5567 if a0 == 0
      :                          @5557
 71335: 82 8c                    a5 = u64 [a1]
 71337: 7b bc                    u64 [a4] = a5
 71339: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 71342: 95 88 08                 a1 = a1 + 0x8
 71345: 95 bb 08                 a4 = a4 + 0x8
 71348: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 71351: 52 0a ed                 jump @5556 if a3 != 0
      :                          @5558
 71354: 64 07                    a0 = ra
 71356: 64 68                    a1 = s1
 71358: 82 19 18                 a2 = u64 [sp + 0x18]
 71361: 64 45                    s0 = t2
 71363: 50 20 92 03 1d f3 01     ra = 914, jump @13635
      :                          @5559 [@dyn 457]
 71370: 82 1c 18                 a5 = u64 [sp + 0x18]
 71373: 33 07 00 00 02           a0 = 0x20000
 71378: ac 57 24                 jump @5565 if a0 <u s0
      :                          @5560
 71381: 33 07 b0 02 03           a0 = 0x302b0
 71386: 95 77 00 00 10           a0 = a0 + 0x100000
 71391: 01                       fallthrough
      :                          @5561
 71392: 82 78                    a1 = u64 [a0]
 71394: c9 87 09                 a2 = a0 - a1
 71397: ab 69 11                 jump @5565 if a2 != s1
      :                          @5562
 71400: c9 c8 09                 a2 = a1 - a5
 71403: 01                       fallthrough
      :                          @5563
 71404: 82 7a                    a3 = u64 [a0]
 71406: ab 8a f2                 jump @5561 if a3 != a1
      :                          @5564
 71409: 7b 79                    u64 [a0] = a2
 71411: 33 0b                    a4 = 0
 71413: 01                       fallthrough
      :                          @5565
 71414: 82 10 38                 ra = u64 [sp + 0x38]
 71417: 82 15 30                 s0 = u64 [sp + 0x30]
 71420: 82 16 28                 s1 = u64 [sp + 0x28]
 71423: 95 11 40                 sp = sp + 0x40
 71426: 32 00                    ret
      :                          @5566
 71428: 00                       trap
      :                          @5567
 71429: 00                       trap
      :                          @5568
 71430: 00                       trap
      :                          @5569
 71431: 00                       trap
      :                          @5570
 71432: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 71435: 7b 10 18                 u64 [sp + 0x18] = ra
 71438: 7b 15 10                 u64 [sp + 0x10] = s0
 71441: 7b 16 08                 u64 [sp + 0x8] = s1
 71444: 33 02 02                 t0 = 0x2
 71447: ae 28 11                 jump @5572 if a1 >=u t0
      :                          @5571
 71450: 82 10 18                 ra = u64 [sp + 0x18]
 71453: 82 15 10                 s0 = u64 [sp + 0x10]
 71456: 82 16 08                 s1 = u64 [sp + 0x8]
 71459: 95 11 20                 sp = sp + 0x20
 71462: 32 00                    ret
      :                          @5572
 71464: 64 86                    s1 = a1
 71466: 64 73                    t1 = a0
 71468: 33 04 01                 t2 = 0x1
 71471: 01                       fallthrough
      :                          @5573
 71472: 97 67 02                 a0 = s1 << 0x2
 71475: 84 77 f8                 a0 = a0 & 0xfffffffffffffff8
 71478: c8 37 07                 a0 = a0 + t1
 71481: 82 78                    a1 = u64 [a0]
 71483: 33 05                    s0 = 0
 71485: 95 67 ff                 a0 = s1 + 0xffffffffffffffff
 71488: 28 05                    jump @5575
      :                          @5574
 71490: ac 57 48                 jump @5586 if a0 <u s0
      :                          @5575
 71493: ae 65 76                 jump @5595 if s0 >=u s1
      :                          @5576
 71496: 97 59 03                 a2 = s0 << 0x3
 71499: c8 39 09                 a2 = a2 + t1
 71502: 01                       fallthrough
      :                          @5577
 71503: 82 9a                    a3 = u64 [a2]
 71505: ae 8a 0e                 jump @5580 if a3 >=u a1
      :                          @5578
 71508: 95 55 01                 s0 = s0 + 0x1
 71511: 95 99 08                 a2 = a2 + 0x8
 71514: ab 56 f5                 jump @5577 if s1 != s0
      :                          @5579
 71517: 28 5d                    jump @5594
      :                          @5580
 71519: ae 67 5a                 jump @5593 if a0 >=u s1
      :                          @5581
 71522: 97 7b 03                 a4 = a0 << 0x3
 71525: c8 3b 0b                 a4 = a4 + t1
 71528: 82 bc                    a5 = u64 [a4]
 71530: ae c8 0e                 jump @5584 if a1 >=u a5
      :                          @5582
 71533: e4 47 07                 a0 = maxu(a0, t2)
 71536: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 71539: ac 67 ef                 jump @5581 if a0 <u s1
      :                          @5583
 71542: 28 43                    jump @5593
      :                          @5584
 71544: ac 57 ca                 jump @5574 if a0 <u s0
      :                          @5585
 71547: 7b 9c                    u64 [a2] = a5
 71549: 7b ba                    u64 [a4] = a3
 71551: 95 55 01                 s0 = s0 + 0x1
 71554: e4 47 07                 a0 = maxu(a0, t2)
 71557: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 71560: 28 ba                    jump @5574
      :                          @5586
 71562: 51 07 1c                 jump @5590 if a0 == 0
      :                          @5587
 71565: 95 78 01                 a1 = a0 + 0x1
 71568: ae 67 2d                 jump @5597 if a0 >=u s1
      :                          @5588
 71571: 64 37                    a0 = t1
 71573: 7b 13                    u64 [sp] = t1
 71575: 50 20 94 03 71 ff        ra = 916, jump @5570
      :                          @5589 [@dyn 458]
 71581: 82 13                    t1 = u64 [sp]
 71583: 33 02 02                 t0 = 0x2
 71586: 33 04 01                 t2 = 0x1
 71589: 01                       fallthrough
      :                          @5590
 71590: ac 56 16                 jump @5596 if s1 <u s0
      :                          @5591
 71593: c9 56 06                 s1 = s1 - s0
 71596: 97 55 03                 s0 = s0 << 0x3
 71599: c8 53 03                 t1 = t1 + s0
 71602: ae 26 7e ff              jump @5573 if s1 >=u t0
      :                          @5592
 71606: 28 64 ff                 jump @5571
      :                          @5593
 71609: 00                       trap
      :                          @5594
 71610: 00                       trap
      :                          @5595
 71611: 00                       trap
      :                          @5596
 71612: 00                       trap
      :                          @5597
 71613: 00                       trap
      :                          @5598
 71614: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 71617: 7b 10 58                 u64 [sp + 0x58] = ra
 71620: 7b 15 50                 u64 [sp + 0x50] = s0
 71623: 7b 16 48                 u64 [sp + 0x48] = s1
 71626: 51 09 da 01              jump @5639 if a2 == 0
      :                          @5599
 71630: 64 86                    s1 = a1
 71632: 7b 17                    u64 [sp] = a0
 71634: 64 67                    a0 = s1
 71636: 51 19 01 2d              jump @5603 if a2 == 1
      :                          @5600
 71640: 95 68 08                 a1 = s1 + 0x8
 71643: 82 65                    s0 = u64 [s1]
 71645: 95 97 ff                 a0 = a2 + 0xffffffffffffffff
 71648: 97 77 03                 a0 = a0 << 0x3
 71651: 98 7a 03                 a3 = a0 >> 0x3
 71654: 64 67                    a0 = s1
 71656: 01                       fallthrough
      :                          @5601
 71657: 82 8b                    a4 = u64 [a1]
 71659: d8 5b 0c                 a5 = a4 <u s0
 71662: e4 b5 05                 s0 = maxu(s0, a4)
 71665: da c8 07                 a0 = a1 if a5 == 0
 71668: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 71671: 95 88 08                 a1 = a1 + 0x8
 71674: 52 0a ef                 jump @5601 if a3 != 0
      :                          @5602
 71677: 51 07 da 01              jump @5646 if a0 == 0
      :                          @5603
 71681: 82 77                    a0 = u64 [a0]
 71683: 95 78 01                 a1 = a0 + 0x1
 71686: 33 05 08                 s0 = 0x8
 71689: 97 87 03                 a0 = a1 << 0x3
 71692: 7b 17 20                 u64 [sp + 0x20] = a0
 71695: 7b 18 10                 u64 [sp + 0x10] = a1
 71698: 51 08 6d                 jump @5612 if a1 == 0
      :                          @5604
 71701: 98 87 3c                 a0 = a1 >> 0x3c
 71704: 52 07 be 01              jump @5645 if a0 != 0
      :                          @5605
 71708: 7b 19 28                 u64 [sp + 0x28] = a2
 71711: 88 72 01                 t0 = a0 <u 0x1
 71714: 97 22 03                 t0 = t0 << 0x3
 71717: 33 04 b0 02 03           t2 = 0x302b0
 71722: 33 03 00 00 10           t1 = 0x100000
 71727: c8 34 0a                 a3 = t2 + t1
 71730: 01                       fallthrough
      :                          @5606
 71731: 82 ab                    a4 = u64 [a3]
 71733: 82 1c 20                 a5 = u64 [sp + 0x20]
 71736: c8 bc 0c                 a5 = a5 + a4
 71739: ac bc 9a 01              jump @5644 if a5 <u a4
      :                          @5607
 71743: c8 2c 09                 a2 = a5 + t0
 71746: d8 c9 05                 s0 = a2 <u a5
 71749: d8 93 09                 a2 = t1 <u a2
 71752: d4 59 09                 a2 = a2 | s0
 71755: 52 09 8a 01              jump @5644 if a2 != 0
      :                          @5608
 71759: c9 c4 05                 s0 = t2 - a5
 71762: c8 35 05                 s0 = s0 + t1
 71765: 84 59 07                 a2 = s0 & 0x7
 71768: c8 9c 0c                 a5 = a5 + a2
 71771: 01                       fallthrough
      :                          @5609
 71772: 82 a7                    a0 = u64 [a3]
 71774: ab b7 d5                 jump @5606 if a0 != a4
      :                          @5610
 71777: 7b ac                    u64 [a3] = a5
 71779: c9 95 05                 s0 = s0 - a2
 71782: 64 57                    a0 = s0
 71784: 33 08                    a1 = 0
 71786: 82 19 20                 a2 = u64 [sp + 0x20]
 71789: 50 20 96 03 a0 f3 01     ra = 918, jump @13689
      :                          @5611 [@dyn 459]
 71796: 82 18 10                 a1 = u64 [sp + 0x10]
 71799: 82 19 28                 a2 = u64 [sp + 0x28]
 71802: 97 9a 03                 a3 = a2 << 0x3
 71805: 28 06                    jump @5613
      :                          @5612
 71807: 97 9a 03                 a3 = a2 << 0x3
 71810: 01                       fallthrough
      :                          @5613
 71811: 82 67                    a0 = u64 [s1]
 71813: ae 87 4e 01              jump @5642 if a0 >=u a1
      :                          @5614
 71817: 97 77 03                 a0 = a0 << 0x3
 71820: c8 57 07                 a0 = a0 + s0
 71823: 82 7b                    a4 = u64 [a0]
 71825: 95 66 08                 s1 = s1 + 0x8
 71828: 95 bb 01                 a4 = a4 + 0x1
 71831: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 71834: 7b 7b                    u64 [a0] = a4
 71836: 52 0a e7                 jump @5613 if a3 != 0
      :                          @5615
 71839: 7b 15 08                 u64 [sp + 0x8] = s0
 71842: 98 97 3c                 a0 = a2 >> 0x3c
 71845: 52 07 31 01              jump @5645 if a0 != 0
      :                          @5616
 71849: 88 72 01                 t0 = a0 <u 0x1
 71852: 97 97 03                 a0 = a2 << 0x3
 71855: 97 22 03                 t0 = t0 << 0x3
 71858: 33 04 b0 02 03           t2 = 0x302b0
 71863: 33 03 00 00 10           t1 = 0x100000
 71868: c8 34 00                 ra = t2 + t1
 71871: 01                       fallthrough
      :                          @5617
 71872: 82 06                    s1 = u64 [ra]
 71874: c8 76 0c                 a5 = s1 + a0
 71877: ac 6c 0f 01              jump @5643 if a5 <u s1
      :                          @5618
 71881: c8 2c 0a                 a3 = a5 + t0
 71884: d8 ca 05                 s0 = a3 <u a5
 71887: d8 a3 0a                 a3 = t1 <u a3
 71890: d4 5a 0a                 a3 = a3 | s0
 71893: 52 0a ff 00              jump @5643 if a3 != 0
      :                          @5619
 71897: c9 c4 05                 s0 = t2 - a5
 71900: c8 35 05                 s0 = s0 + t1
 71903: 84 5a 07                 a3 = s0 & 0x7
 71906: c8 ac 0c                 a5 = a5 + a3
 71909: 01                       fallthrough
      :                          @5620
 71910: 82 08                    a1 = u64 [ra]
 71912: ab 68 d8                 jump @5617 if a1 != s1
      :                          @5621
 71915: 7b 0c                    u64 [ra] = a5
 71917: 33 0b                    a4 = 0
 71919: 01                       fallthrough
      :                          @5622
 71920: c9 a5 07                 a0 = s0 - a3
 71923: 7b 19 30                 u64 [sp + 0x30] = a2
 71926: 7b 17 38                 u64 [sp + 0x38] = a0
 71929: 49 11 40                 u64 [sp + 64] = 0
 71932: 82 18 10                 a1 = u64 [sp + 0x10]
 71935: 51 08 b2 00              jump @5640 if a1 == 0
      :                          @5623
 71939: 33 08                    a1 = 0
 71941: 33 06                    s1 = 0
 71943: 82 19 20                 a2 = u64 [sp + 0x20]
 71946: 82 1a 08                 a3 = u64 [sp + 0x8]
 71949: c8 a9 09                 a2 = a2 + a3
 71952: 7b 19 18                 u64 [sp + 0x18] = a2
 71955: 28 11                    jump @5625
      :                          @5624
 71957: 82 1a 28                 a3 = u64 [sp + 0x28]
 71960: 95 aa 08                 a3 = a3 + 0x8
 71963: 95 66 01                 s1 = s1 + 0x1
 71966: 82 19 18                 a2 = u64 [sp + 0x18]
 71969: aa 9a 39                 jump @5631 if a3 == a2
      :                          @5625
 71972: 7b 1a 28                 u64 [sp + 0x28] = a3
 71975: 82 a5                    s0 = u64 [a3]
 71977: 52 05 19                 jump @5628 if s0 != 0
      :                          @5626
 71980: 28 e9                    jump @5624
      :                          @5627
 71982: 97 89 03                 a2 = a1 << 0x3
 71985: c8 79 09                 a2 = a2 + a0
 71988: 7b 96                    u64 [a2] = s1
 71990: 95 88 01                 a1 = a1 + 0x1
 71993: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 71996: 7b 18 40                 u64 [sp + 0x40] = a1
 71999: 51 05 d6                 jump @5624 if s0 == 0
      :                          @5628
 72002: 82 19 30                 a2 = u64 [sp + 0x30]
 72005: ab 98 e9                 jump @5627 if a1 != a2
      :                          @5629
 72008: 95 17 30                 a0 = sp + 0x30
 72011: 50 20 98 03 c4 39 ff     ra = 920, jump @1581
      :                          @5630 [@dyn 460]
 72018: 82 18 40                 a1 = u64 [sp + 0x40]
 72021: 82 17 38                 a0 = u64 [sp + 0x38]
 72024: 28 d6                    jump @5627
      :                          @5631
 72026: 82 17 40                 a0 = u64 [sp + 0x40]
 72029: 82 18 38                 a1 = u64 [sp + 0x38]
 72032: 82 19 30                 a2 = u64 [sp + 0x30]
 72035: 82 1a                    a3 = u64 [sp]
 72037: 7b a7 10                 u64 [a3 + 0x10] = a0
 72040: 7b a8 08                 u64 [a3 + 0x8] = a1
 72043: 33 07 00 00 02           a0 = 0x20000
 72048: 7b a9                    u64 [a3] = a2
 72050: 82 18 10                 a1 = u64 [sp + 0x10]
 72053: 82 1c 08                 a5 = u64 [sp + 0x8]
 72056: ac 87 4d                 jump @5641 if a0 <u a1
      :                          @5632
 72059: 33 07 b0 02 03           a0 = 0x302b0
 72064: 95 77 00 00 10           a0 = a0 + 0x100000
 72069: 01                       fallthrough
      :                          @5633
 72070: 82 78                    a1 = u64 [a0]
 72072: c9 87 09                 a2 = a0 - a1
 72075: ab c9 3a                 jump @5641 if a2 != a5
      :                          @5634
 72078: 82 19 20                 a2 = u64 [sp + 0x20]
 72081: c9 98 09                 a2 = a1 - a2
 72084: 01                       fallthrough
      :                          @5635
 72085: 82 7a                    a3 = u64 [a0]
 72087: ab 8a ef                 jump @5633 if a3 != a1
      :                          @5636
 72090: 7b 79                    u64 [a0] = a2
 72092: 33 0b                    a4 = 0
 72094: 01                       fallthrough
      :                          @5637
 72095: ab 8a e7                 jump @5633 if a3 != a1
      :                          @5638
 72098: 28 23                    jump @5641
      :                          @5639
 72100: 49 07                    u64 [a0 + 0] = 0
 72102: 33 08 08                 a1 = 0x8
 72105: 7b 78 08                 u64 [a0 + 0x8] = a1
 72108: 49 17 10                 u64 [a0 + 16] = 0
 72111: 28 16                    jump @5641
      :                          @5640
 72113: 82 17 40                 a0 = u64 [sp + 0x40]
 72116: 82 18 38                 a1 = u64 [sp + 0x38]
 72119: 82 19 30                 a2 = u64 [sp + 0x30]
 72122: 82 1a                    a3 = u64 [sp]
 72124: 7b a7 10                 u64 [a3 + 0x10] = a0
 72127: 7b a8 08                 u64 [a3 + 0x8] = a1
 72130: 7b a9                    u64 [a3] = a2
 72132: 01                       fallthrough
      :                          @5641
 72133: 82 10 58                 ra = u64 [sp + 0x58]
 72136: 82 15 50                 s0 = u64 [sp + 0x50]
 72139: 82 16 48                 s1 = u64 [sp + 0x48]
 72142: 95 11 60                 sp = sp + 0x60
 72145: 32 00                    ret
      :                          @5642
 72147: 00                       trap
      :                          @5643
 72148: 00                       trap
      :                          @5644
 72149: 00                       trap
      :                          @5645
 72150: 00                       trap
      :                          @5646
 72151: 00                       trap
      :                          @5647
 72152: 95 11 80                 sp = sp + 0xffffffffffffff80
 72155: 7b 10 78                 u64 [sp + 0x78] = ra
 72158: 7b 15 70                 u64 [sp + 0x70] = s0
 72161: 7b 16 68                 u64 [sp + 0x68] = s1
 72164: 7b 17 48                 u64 [sp + 0x48] = a0
 72167: 97 87 03                 a0 = a1 << 0x3
 72170: 7b 17 50                 u64 [sp + 0x50] = a0
 72173: 7b 18 40                 u64 [sp + 0x40] = a1
 72176: 51 08 66                 jump @5656 if a1 == 0
      :                          @5648
 72179: 98 87 3c                 a0 = a1 >> 0x3c
 72182: 52 07 08 02              jump @5692 if a0 != 0
      :                          @5649
 72186: 88 77 01                 a0 = a0 <u 0x1
 72189: 97 72 03                 t0 = a0 << 0x3
 72192: 33 08 b0 02 03           a1 = 0x302b0
 72197: 33 03 00 00 10           t1 = 0x100000
 72202: c8 38 0a                 a3 = a1 + t1
 72205: 01                       fallthrough
      :                          @5650
 72206: 82 ab                    a4 = u64 [a3]
 72208: 82 1c 50                 a5 = u64 [sp + 0x50]
 72211: c8 bc 0c                 a5 = a5 + a4
 72214: ac bc e7 01              jump @5691 if a5 <u a4
      :                          @5651
 72218: c8 2c 09                 a2 = a5 + t0
 72221: d8 c9 06                 s1 = a2 <u a5
 72224: d8 93 09                 a2 = t1 <u a2
 72227: d4 69 09                 a2 = a2 | s1
 72230: 52 09 d7 01              jump @5691 if a2 != 0
      :                          @5652
 72234: c9 c8 06                 s1 = a1 - a5
 72237: c8 36 06                 s1 = s1 + t1
 72240: 84 69 07                 a2 = s1 & 0x7
 72243: c8 9c 0c                 a5 = a5 + a2
 72246: 01                       fallthrough
      :                          @5653
 72247: 82 a7                    a0 = u64 [a3]
 72249: ab b7 d5                 jump @5650 if a0 != a4
      :                          @5654
 72252: 7b ac                    u64 [a3] = a5
 72254: c9 96 06                 s1 = s1 - a2
 72257: 64 67                    a0 = s1
 72259: 33 08                    a1 = 0
 72261: 82 15 50                 s0 = u64 [sp + 0x50]
 72264: 64 59                    a2 = s0
 72266: 50 20 9a 03 c3 f1 01     ra = 922, jump @13689
      :                          @5655 [@dyn 461]
 72273: 7b 15 28                 u64 [sp + 0x28] = s0
 72276: 28 09                    jump @5657
      :                          @5656
 72278: 49 11 28                 u64 [sp + 40] = 0
 72281: 33 06 08                 s1 = 0x8
 72284: 01                       fallthrough
      :                          @5657
 72285: 33 02                    t0 = 0
 72287: 82 17 48                 a0 = u64 [sp + 0x48]
 72290: 95 75 f8                 s0 = a0 + 0xfffffffffffffff8
 72293: 33 03 b0 02 03           t1 = 0x302b0
 72298: 33 0c 00 00 10           a5 = 0x100000
 72303: c8 c3 0b                 a4 = t1 + a5
 72306: 49 11 10 00 08           u64 [sp + 16] = 0x800
 72311: 49 11 08 08 f8 0f        u64 [sp + 8] = 0xff808
 72317: 7b 16 20                 u64 [sp + 0x20] = s1
 72320: 7b 15 18                 u64 [sp + 0x18] = s0
 72323: 7b 13 38                 u64 [sp + 0x38] = t1
 72326: 7b 1b                    u64 [sp] = a4
 72328: 33 04 01                 t2 = 0x1
 72331: 28 21                    jump @5660
      :                          @5658
 72333: 82 1a 30                 a3 = u64 [sp + 0x30]
 72336: 95 a7 08                 a0 = a3 + 0x8
 72339: 82 12 60                 t0 = u64 [sp + 0x60]
 72342: 95 22 08                 t0 = t0 + 0x8
 72345: 82 19 40                 a2 = u64 [sp + 0x40]
 72348: 82 13 38                 t1 = u64 [sp + 0x38]
 72351: 33 0c 00 00 10           a5 = 0x100000
 72356: 55 1a 39 17 01           jump @5682 if a3 >=u 57
      :                          @5659
 72361: 64 74                    t2 = a0
 72363: 01                       fallthrough
      :                          @5660
 72364: 82 b5                    s0 = u64 [a4]
 72366: 95 57 ff 07              a0 = s0 + 0x7ff
 72370: 95 77 01                 a0 = a0 + 0x1
 72373: ac 57 47 01              jump @5690 if a0 <u s0
      :                          @5661
 72377: 95 78 08                 a1 = a0 + 0x8
 72380: d8 78 09                 a2 = a1 <u a0
 72383: d8 8c 08                 a1 = a5 <u a1
 72386: d4 98 08                 a1 = a1 | a2
 72389: 52 08 37 01              jump @5690 if a1 != 0
      :                          @5662
 72393: c9 73 08                 a1 = t1 - a0
 72396: c8 c8 08                 a1 = a1 + a5
 72399: 84 86 07                 s1 = a1 & 0x7
 72402: c8 67 07                 a0 = a0 + s1
 72405: 01                       fallthrough
      :                          @5663
 72406: 82 b9                    a2 = u64 [a4]
 72408: ab 59 d4                 jump @5660 if a2 != s0
      :                          @5664
 72411: 7b b7                    u64 [a4] = a0
 72413: 7b 14 30                 u64 [sp + 0x30] = t2
 72416: c9 68 07                 a0 = a1 - s1
 72419: 7b 17 58                 u64 [sp + 0x58] = a0
 72422: 33 08                    a1 = 0
 72424: 82 19 10                 a2 = u64 [sp + 0x10]
 72427: 7b 12 60                 u64 [sp + 0x60] = t0
 72430: 50 20 9c 03 1f f1 01     ra = 924, jump @13689
      :                          @5665 [@dyn 462]
 72437: 82 1b 58                 a4 = u64 [sp + 0x58]
 72440: 82 1c 60                 a5 = u64 [sp + 0x60]
 72443: 82 12 40                 t0 = u64 [sp + 0x40]
 72446: 82 17 50                 a0 = u64 [sp + 0x50]
 72449: 82 18 48                 a1 = u64 [sp + 0x48]
 72452: 51 02 26                 jump @5668 if t0 == 0
      :                          @5666
 72455: 82 89                    a2 = u64 [a1]
 72457: d0 c9 09                 a2 = a2 >> a5
 72460: 84 99 ff 00              a2 = a2 & 0xff
 72464: 97 99 03                 a2 = a2 << 0x3
 72467: c8 b9 09                 a2 = a2 + a4
 72470: 82 9a                    a3 = u64 [a2]
 72472: 95 88 08                 a1 = a1 + 0x8
 72475: 95 aa 01                 a3 = a3 + 0x1
 72478: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
 72481: 7b 9a                    u64 [a2] = a3
 72483: 52 07 e4                 jump @5666 if a0 != 0
      :                          @5667
 72486: 82 b7                    a0 = u64 [a4]
 72488: 28 05                    jump @5669
      :                          @5668
 72490: 33 07                    a0 = 0
 72492: 01                       fallthrough
      :                          @5669
 72493: 82 18 38                 a1 = u64 [sp + 0x38]
 72496: c8 65 05                 s0 = s0 + s1
 72499: c9 58 08                 a1 = a1 - s0
 72502: 82 19 08                 a2 = u64 [sp + 0x8]
 72505: c8 98 08                 a1 = a1 + a2
 72508: 33 09 ff 00              a2 = 0xff
 72512: 01                       fallthrough
      :                          @5670
 72513: 82 8a                    a3 = u64 [a1]
 72515: c8 a7 07                 a0 = a0 + a3
 72518: 7b 87                    u64 [a1] = a0
 72520: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 72523: 95 88 08                 a1 = a1 + 0x8
 72526: 52 09 f3                 jump @5670 if a2 != 0
      :                          @5671
 72529: 82 18 50                 a1 = u64 [sp + 0x50]
 72532: 82 16 20                 s1 = u64 [sp + 0x20]
 72535: 82 15 18                 s0 = u64 [sp + 0x18]
 72538: 51 02 2e                 jump @5674 if t0 == 0
      :                          @5672
 72541: c8 85 07                 a0 = s0 + a1
 72544: 82 79                    a2 = u64 [a0]
 72546: d0 c9 07                 a0 = a2 >> a5
 72549: 84 77 ff 00              a0 = a0 & 0xff
 72553: 97 77 03                 a0 = a0 << 0x3
 72556: c8 7b 0a                 a3 = a4 + a0
 72559: 82 a7                    a0 = u64 [a3]
 72561: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 72564: 7b a7                    u64 [a3] = a0
 72566: ae 27 85 00              jump @5689 if a0 >=u t0
      :                          @5673
 72570: 97 77 03                 a0 = a0 << 0x3
 72573: c8 67 07                 a0 = a0 + s1
 72576: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 72579: 7b 79                    u64 [a0] = a2
 72581: 52 08 d8                 jump @5672 if a1 != 0
      :                          @5674
 72584: 82 17 48                 a0 = u64 [sp + 0x48]
 72587: 64 68                    a1 = s1
 72589: 82 19 28                 a2 = u64 [sp + 0x28]
 72592: 50 20 9e 03 50 ee 01     ra = 926, jump @13635
      :                          @5675 [@dyn 463]
 72599: 82 1c 58                 a5 = u64 [sp + 0x58]
 72602: 82 1b                    a4 = u64 [sp]
 72604: 01                       fallthrough
      :                          @5676
 72605: 82 b7                    a0 = u64 [a4]
 72607: c9 7b 08                 a1 = a4 - a0
 72610: ab c8 eb fe              jump @5658 if a1 != a5
      :                          @5677
 72614: 95 78 00 f8              a1 = a0 + 0xfffffffffffff800
 72618: 01                       fallthrough
      :                          @5678
 72619: 82 b9                    a2 = u64 [a4]
 72621: ab 79 f0                 jump @5676 if a2 != a0
      :                          @5679
 72624: 7b b8                    u64 [a4] = a1
 72626: 33 0a                    a3 = 0
 72628: 01                       fallthrough
      :                          @5680
 72629: ab 79 e8                 jump @5676 if a2 != a0
      :                          @5681
 72632: 28 d5 fe                 jump @5658
      :                          @5682
 72635: 33 07 00 00 fe           a0 = 0xfffffffffffe0000
 72640: 95 98 ff ff fd           a1 = a2 + 0xfffffffffffdffff
 72645: ac 78 27                 jump @5688 if a1 <u a0
      :                          @5683
 72648: 33 07 b0 02 03           a0 = 0x302b0
 72653: 95 77 00 00 10           a0 = a0 + 0x100000
 72658: 01                       fallthrough
      :                          @5684
 72659: 82 78                    a1 = u64 [a0]
 72661: c9 87 09                 a2 = a0 - a1
 72664: ab 69 14                 jump @5688 if a2 != s1
      :                          @5685
 72667: 82 19 28                 a2 = u64 [sp + 0x28]
 72670: c9 98 09                 a2 = a1 - a2
 72673: 01                       fallthrough
      :                          @5686
 72674: 82 7a                    a3 = u64 [a0]
 72676: ab 8a ef                 jump @5684 if a3 != a1
      :                          @5687
 72679: 7b 79                    u64 [a0] = a2
 72681: 33 0b                    a4 = 0
 72683: 01                       fallthrough
      :                          @5688
 72684: 82 10 78                 ra = u64 [sp + 0x78]
 72687: 82 15 70                 s0 = u64 [sp + 0x70]
 72690: 82 16 68                 s1 = u64 [sp + 0x68]
 72693: 95 11 80 00              sp = sp + 0x80
 72697: 32 00                    ret
      :                          @5689
 72699: 00                       trap
      :                          @5690
 72700: 00                       trap
      :                          @5691
 72701: 00                       trap
      :                          @5692
 72702: 00                       trap
      :                          @5693
 72703: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 72706: 7b 10 20                 u64 [sp + 0x20] = ra
 72709: 7b 15 18                 u64 [sp + 0x18] = s0
 72712: 7b 16 10                 u64 [sp + 0x10] = s1
 72715: 51 09 9e 00              jump @5706 if a2 == 0
      :                          @5694
 72719: 64 86                    s1 = a1
 72721: 98 98 3c                 a1 = a2 >> 0x3c
 72724: 52 08 b0 00              jump @5709 if a1 != 0
      :                          @5695
 72728: 7b 17                    u64 [sp] = a0
 72730: 88 82 01                 t0 = a1 <u 0x1
 72733: 7b 19 08                 u64 [sp + 0x8] = a2
 72736: 97 99 03                 a2 = a2 << 0x3
 72739: 97 22 03                 t0 = t0 << 0x3
 72742: 33 04 b0 02 03           t2 = 0x302b0
 72747: 33 03 00 00 10           t1 = 0x100000
 72752: c8 34 00                 ra = t2 + t1
 72755: 01                       fallthrough
      :                          @5696
 72756: 82 07                    a0 = u64 [ra]
 72758: c8 97 0c                 a5 = a0 + a2
 72761: ac 7c 8a 00              jump @5708 if a5 <u a0
      :                          @5697
 72765: c8 2c 0a                 a3 = a5 + t0
 72768: d8 ca 05                 s0 = a3 <u a5
 72771: d8 a3 0a                 a3 = t1 <u a3
 72774: d4 5a 0a                 a3 = a3 | s0
 72777: 52 0a 7a                 jump @5708 if a3 != 0
      :                          @5698
 72780: c9 c4 05                 s0 = t2 - a5
 72783: c8 35 05                 s0 = s0 + t1
 72786: 84 5a 07                 a3 = s0 & 0x7
 72789: c8 ac 0c                 a5 = a5 + a3
 72792: 01                       fallthrough
      :                          @5699
 72793: 82 08                    a1 = u64 [ra]
 72795: ab 78 d9                 jump @5696 if a1 != a0
      :                          @5700
 72798: 7b 0c                    u64 [ra] = a5
 72800: 33 0b                    a4 = 0
 72802: c9 a5 05                 s0 = s0 - a3
 72805: 64 57                    a0 = s0
 72807: 33 08                    a1 = 0
 72809: 50 20 a0 03 a4 ef 01     ra = 928, jump @13689
      :                          @5701 [@dyn 464]
 72816: 33 07                    a0 = 0
 72818: 64 58                    a1 = s0
 72820: 82 19 08                 a2 = u64 [sp + 0x8]
 72823: 28 0b                    jump @5703
      :                          @5702
 72825: 95 88 08                 a1 = a1 + 0x8
 72828: 95 66 08                 s1 = s1 + 0x8
 72831: aa 79 26                 jump @5705 if a2 == a0
      :                          @5703
 72834: 82 6c                    a5 = u64 [s1]
 72836: 82 8a                    a3 = u64 [a1]
 72838: 64 7b                    a4 = a0
 72840: 95 77 01                 a0 = a0 + 0x1
 72843: c8 ac 0c                 a5 = a5 + a3
 72846: d4 b7 0a                 a3 = a0 | a4
 72849: 7b 8c                    u64 [a1] = a5
 72851: ae 9a e6                 jump @5702 if a3 >=u a2
      :                          @5704
 72854: 97 aa 03                 a3 = a3 << 0x3
 72857: c8 5a 0a                 a3 = a3 + s0
 72860: 82 ab                    a4 = u64 [a3]
 72862: c8 cb 0b                 a4 = a4 + a5
 72865: 7b ab                    u64 [a3] = a4
 72867: 28 d6                    jump @5702
      :                          @5705
 72869: 82 17                    a0 = u64 [sp]
 72871: 28 06                    jump @5707
      :                          @5706
 72873: 33 05 08                 s0 = 0x8
 72876: 01                       fallthrough
      :                          @5707
 72877: 7b 79                    u64 [a0] = a2
 72879: 7b 75 08                 u64 [a0 + 0x8] = s0
 72882: 7b 79 10                 u64 [a0 + 0x10] = a2
 72885: 82 10 20                 ra = u64 [sp + 0x20]
 72888: 82 15 18                 s0 = u64 [sp + 0x18]
 72891: 82 16 10                 s1 = u64 [sp + 0x10]
 72894: 95 11 28                 sp = sp + 0x28
 72897: 32 00                    ret
      :                          @5708
 72899: 00                       trap
      :                          @5709
 72900: 00                       trap
      :                          @5710
 72901: ae 89 20                 jump @5714 if a2 >=u a1
      :                          @5711
 72904: 33 0a                    a3 = 0
 72906: 01                       fallthrough
      :                          @5712
 72907: 97 9b 03                 a4 = a2 << 0x3
 72910: c8 7b 0b                 a4 = a4 + a0
 72913: 82 bb                    a4 = u64 [a4]
 72915: 95 9c 01                 a5 = a2 + 0x1
 72918: d2 c9 09                 a2 = a2 & a5
 72921: c8 ba 0a                 a3 = a3 + a4
 72924: 51 09 0a                 jump @5715 if a2 == 0
      :                          @5713
 72927: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 72930: ac 89 e9                 jump @5712 if a2 <u a1
      :                          @5714
 72933: 00                       trap
      :                          @5715
 72934: 64 a7                    a0 = a3
 72936: 32 00                    ret
      :                          @5716
 72938: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 72941: 7b 10 28                 u64 [sp + 0x28] = ra
 72944: 7b 15 20                 u64 [sp + 0x20] = s0
 72947: 7b 16 18                 u64 [sp + 0x18] = s1
 72950: 97 95 01                 s0 = a2 << 0x1
 72953: 64 86                    s1 = a1
 72955: 64 73                    t1 = a0
 72957: 51 05 75                 jump @5726 if s0 == 0
      :                          @5717
 72960: 7b 13 08                 u64 [sp + 0x8] = t1
 72963: 7b 15 10                 u64 [sp + 0x10] = s0
 72966: 98 57 3c                 a0 = s0 >> 0x3c
 72969: 52 07 f9 00              jump @5741 if a0 != 0
      :                          @5718
 72973: 88 72 01                 t0 = a0 <u 0x1
 72976: 7b 19                    u64 [sp] = a2
 72978: 97 99 04                 a2 = a2 << 0x4
 72981: 97 22 03                 t0 = t0 << 0x3
 72984: 33 04 b0 02 03           t2 = 0x302b0
 72989: 33 03 00 00 10           t1 = 0x100000
 72994: c8 34 00                 ra = t2 + t1
 72997: 01                       fallthrough
      :                          @5719
 72998: 82 05                    s0 = u64 [ra]
 73000: c8 95 0c                 a5 = s0 + a2
 73003: ac 5c d6 00              jump @5740 if a5 <u s0
      :                          @5720
 73007: c8 2c 07                 a0 = a5 + t0
 73010: d8 c7 0a                 a3 = a0 <u a5
 73013: d8 73 07                 a0 = t1 <u a0
 73016: d4 a7 07                 a0 = a0 | a3
 73019: 52 07 c6 00              jump @5740 if a0 != 0
      :                          @5721
 73023: c9 c4 07                 a0 = t2 - a5
 73026: c8 37 07                 a0 = a0 + t1
 73029: 84 7a 07                 a3 = a0 & 0x7
 73032: c8 ac 0c                 a5 = a5 + a3
 73035: 01                       fallthrough
      :                          @5722
 73036: 82 08                    a1 = u64 [ra]
 73038: ab 58 d8                 jump @5719 if a1 != s0
      :                          @5723
 73041: 7b 0c                    u64 [ra] = a5
 73043: 33 0b                    a4 = 0
 73045: c9 a7 05                 s0 = a0 - a3
 73048: 64 57                    a0 = s0
 73050: 33 08                    a1 = 0
 73052: 50 20 a2 03 b1 ee 01     ra = 930, jump @13689
      :                          @5724 [@dyn 465]
 73059: 64 54                    t2 = s0
 73061: 82 15 10                 s0 = u64 [sp + 0x10]
 73064: 82 19                    a2 = u64 [sp]
 73066: 82 13 08                 t1 = u64 [sp + 0x8]
 73069: 52 09 0b                 jump @5727 if a2 != 0
      :                          @5725
 73072: 28 75                    jump @5736
      :                          @5726
 73074: 33 04 08                 t2 = 0x8
 73077: 51 09 70                 jump @5736 if a2 == 0
      :                          @5727
 73080: e6 59 07                 a0 = minu(a2, s0)
 73083: c9 57 08                 a1 = a0 - s0
 73086: 97 92 03                 t0 = a2 << 0x3
 73089: c8 24 0a                 a3 = t2 + t0
 73092: 64 97                    a0 = a2
 73094: 64 9b                    a4 = a2
 73096: 01                       fallthrough
      :                          @5728
 73097: 51 08 77                 jump @5739 if a1 == 0
      :                          @5729
 73100: 82 6c                    a5 = u64 [s1]
 73102: 7b ac                    u64 [a3] = a5
 73104: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 73107: 95 66 08                 s1 = s1 + 0x8
 73110: 95 88 01                 a1 = a1 + 0x1
 73113: 95 77 01                 a0 = a0 + 0x1
 73116: 95 aa 08                 a3 = a3 + 0x8
 73119: 52 0b ea                 jump @5728 if a4 != 0
      :                          @5730
 73122: 33 07 02                 a0 = 0x2
 73125: ac 79 40                 jump @5736 if a2 <u a0
      :                          @5731
 73128: c8 24 08                 a1 = t2 + t0
 73131: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
 73134: 95 57 fe                 a0 = s0 + 0xfffffffffffffffe
 73137: 97 98 04                 a1 = a2 << 0x4
 73140: c8 48 08                 a1 = a1 + t2
 73143: 95 8b f8                 a4 = a1 + 0xfffffffffffffff8
 73146: 33 02 01                 t0 = 0x1
 73149: 64 98                    a1 = a2
 73151: 01                       fallthrough
      :                          @5732
 73152: ae 57 40                 jump @5739 if a0 >=u s0
      :                          @5733
 73155: 95 76 01                 s1 = a0 + 0x1
 73158: ae 56 38                 jump @5737 if s1 >=u s0
      :                          @5734
 73161: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 73164: ae 58 33                 jump @5738 if a1 >=u s0
      :                          @5735
 73167: 82 bc f8                 a5 = u64 [a4 + 0xfffffffffffffff8]
 73170: 82 b6                    s1 = u64 [a4]
 73172: c8 6c 0c                 a5 = a5 + s1
 73175: 7b ac                    u64 [a3] = a5
 73177: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 73180: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 73183: 95 bb f0                 a4 = a4 + 0xfffffffffffffff0
 73186: ac 82 de                 jump @5732 if t0 <u a1
      :                          @5736
 73189: 7b 39 18                 u64 [t1 + 0x18] = a2
 73192: 7b 35                    u64 [t1] = s0
 73194: 7b 34 08                 u64 [t1 + 0x8] = t2
 73197: 7b 35 10                 u64 [t1 + 0x10] = s0
 73200: 82 10 28                 ra = u64 [sp + 0x28]
 73203: 82 15 20                 s0 = u64 [sp + 0x20]
 73206: 82 16 18                 s1 = u64 [sp + 0x18]
 73209: 95 11 30                 sp = sp + 0x30
 73212: 32 00                    ret
      :                          @5737
 73214: 00                       trap
      :                          @5738
 73215: 00                       trap
      :                          @5739
 73216: 00                       trap
      :                          @5740
 73217: 00                       trap
      :                          @5741
 73218: 00                       trap
      :                          @5742
 73219: 64 7a                    a3 = a0
 73221: 82 7b 18                 a4 = u64 [a0 + 0x18]
 73224: c8 8b 07                 a0 = a4 + a1
 73227: c8 b9 09                 a2 = a2 + a4
 73230: ae 79 0d                 jump @5745 if a2 >=u a0
      :                          @5743
 73233: 33 07                    a0 = 0
 73235: 28 2c c5 00              jump @9393
      :                          @5744
 73239: 64 a7                    a0 = a3
 73241: 32 00                    ret
      :                          @5745
 73243: 82 a8 10                 a1 = u64 [a3 + 0x10]
 73246: 82 ab 08                 a4 = u64 [a3 + 0x8]
 73249: 33 0a                    a3 = 0
 73251: 28 0b                    jump @5747
      :                          @5746
 73253: 98 77 01                 a0 = a0 >> 0x1
 73256: 98 99 01                 a2 = a2 >> 0x1
 73259: ac 79 ec                 jump @5744 if a2 <u a0
      :                          @5747
 73262: 84 7c 01                 a5 = a0 & 0x1
 73265: 51 0c 15                 jump @5750 if a5 == 0
      :                          @5748
 73268: ae 87 2b                 jump @5753 if a0 >=u a1
      :                          @5749
 73271: 97 7c 03                 a5 = a0 << 0x3
 73274: c8 bc 0c                 a5 = a5 + a4
 73277: 82 cc                    a5 = u64 [a5]
 73279: c8 ca 0a                 a3 = a3 + a5
 73282: 95 77 01                 a0 = a0 + 0x1
 73285: 01                       fallthrough
      :                          @5750
 73286: 84 9c 01                 a5 = a2 & 0x1
 73289: 52 0c dc                 jump @5746 if a5 != 0
      :                          @5751
 73292: ae 89 14                 jump @5754 if a2 >=u a1
      :                          @5752
 73295: 97 9c 03                 a5 = a2 << 0x3
 73298: c8 bc 0c                 a5 = a5 + a4
 73301: 82 cc                    a5 = u64 [a5]
 73303: c8 ca 0a                 a3 = a3 + a5
 73306: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 73309: 28 c8                    jump @5746
      :                          @5753
 73311: 00                       trap
      :                          @5754
 73312: 00                       trap
      :                          @5755
 73313: cd 87 0a                 a3 = a0 %u a1
 73316: 51 0a 32                 jump @5761 if a3 == 0
      :                          @5756
 73319: 95 8c ff                 a5 = a1 + 0xffffffffffffffff
 73322: 33 09 03                 a2 = 0x3
 73325: 8e c7                    a0 = a5 >u 0
 73327: ae 98 14                 jump @5759 if a1 >=u a2
      :                          @5757
 73330: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 73333: 88 77 01                 a0 = a0 <u 0x1
 73336: 32 00                    ret
      :                          @5758
 73338: 98 bc 01                 a5 = a4 >> 0x1
 73341: ca aa 0a                 a3 = a3 * a3
 73344: ae b9 f2                 jump @5757 if a2 >=u a4
      :                          @5759
 73347: 64 cb                    a4 = a5
 73349: 84 cc 02                 a5 = a5 & 0x2
 73352: cd 8a 0a                 a3 = a3 %u a1
 73355: 51 0c ef                 jump @5758 if a5 == 0
      :                          @5760
 73358: ca 7a 07                 a0 = a3 * a0
 73361: cd 87 07                 a0 = a0 %u a1
 73364: 28 e6                    jump @5758
      :                          @5761
 73366: 33 07 01                 a0 = 0x1
 73369: 28 56 c6 00              jump @9423
      :                          @5762 [@dyn 466]
 73373: 3a 07 78 02 03           a0 = u64 [0x30278]
 73378: 51 07 ac 05              jump @5830 if a0 == 0
      :                          @5763
 73382: 82 75 08                 s0 = u64 [a0 + 0x8]
 73385: 3a 08 c0 00 03           a1 = u64 [0x300c0]
 73390: 7b 18 08                 u64 [sp + 0x8] = a1
 73393: 82 77                    a0 = u64 [a0]
 73395: 7b 17 48                 u64 [sp + 0x48] = a0
 73398: 82 58 18                 a1 = u64 [s0 + 0x18]
 73401: b4 80 02 a6 03           ra = 934, jump [a1]
      :                          @5764 [@dyn 467]
 73406: 82 58 20                 a1 = u64 [s0 + 0x20]
 73409: 64 76                    s1 = a0
 73411: 82 17 48                 a0 = u64 [sp + 0x48]
 73414: b4 80 02 a8 03           ra = 936, jump [a1]
      :                          @5765 [@dyn 468]
 73419: 82 10 08                 ra = u64 [sp + 0x8]
 73422: 82 69                    a2 = u64 [s1]
 73424: 82 68 08                 a1 = u64 [s1 + 0x8]
 73427: d3 97 07                 a0 = a0 ^ a2
 73430: ca 07 07                 a0 = a0 * ra
 73433: d3 87 07                 a0 = a0 ^ a1
 73436: 9e 77 38                 a0 = a0 >>r 0x38
 73439: 82 6a 20                 a3 = u64 [s1 + 0x20]
 73442: ca 07 08                 a1 = a0 * ra
 73445: d3 89 09                 a2 = a2 ^ a1
 73448: 9e 97 28                 a0 = a2 >>r 0x28
 73451: d3 7a 0a                 a3 = a3 ^ a0
 73454: ca 0a 09                 a2 = a3 * ra
 73457: d3 89 09                 a2 = a2 ^ a1
 73460: 9e 99 38                 a2 = a2 >>r 0x38
 73463: ca 09 09                 a2 = a2 * ra
 73466: d3 79 0a                 a3 = a2 ^ a0
 73469: 9e aa 28                 a3 = a3 >>r 0x28
 73472: 82 6b 28                 a4 = u64 [s1 + 0x28]
 73475: ca 0a 0c                 a5 = a3 * ra
 73478: d3 c9 09                 a2 = a2 ^ a5
 73481: dc a9 09                 a2 = a2 <<r a3
 73484: d3 7b 0b                 a4 = a4 ^ a0
 73487: ca 0b 0a                 a3 = a4 * ra
 73490: d3 8a 0a                 a3 = a3 ^ a1
 73493: 9e aa 38                 a3 = a3 >>r 0x38
 73496: ca 0a 0a                 a3 = a3 * ra
 73499: d3 7a 0b                 a4 = a3 ^ a0
 73502: 9e bb 28                 a4 = a4 >>r 0x28
 73505: 82 6c 30                 a5 = u64 [s1 + 0x30]
 73508: ca 0b 05                 s0 = a4 * ra
 73511: d3 5a 0a                 a3 = a3 ^ s0
 73514: dc ba 0a                 a3 = a3 <<r a4
 73517: d3 7c 0c                 a5 = a5 ^ a0
 73520: ca 0c 0b                 a4 = a5 * ra
 73523: d3 8b 0b                 a4 = a4 ^ a1
 73526: 9e bb 38                 a4 = a4 >>r 0x38
 73529: ca 0b 0b                 a4 = a4 * ra
 73532: d3 7b 0c                 a5 = a4 ^ a0
 73535: 9e cc 28                 a5 = a5 >>r 0x28
 73538: 82 66 38                 s1 = u64 [s1 + 0x38]
 73541: ca 0c 05                 s0 = a5 * ra
 73544: d3 5b 0b                 a4 = a4 ^ s0
 73547: dc cb 0b                 a4 = a4 <<r a5
 73550: d3 76 06                 s1 = s1 ^ a0
 73553: ca 06 0c                 a5 = s1 * ra
 73556: d3 c8 08                 a1 = a1 ^ a5
 73559: 9e 88 38                 a1 = a1 >>r 0x38
 73562: ca 08 08                 a1 = a1 * ra
 73565: d3 87 07                 a0 = a0 ^ a1
 73568: 9e 77 28                 a0 = a0 >>r 0x28
 73571: ca 07 0c                 a5 = a0 * ra
 73574: d3 c8 08                 a1 = a1 ^ a5
 73577: dc 78 07                 a0 = a1 <<r a0
 73580: 7b 19 88 00              u64 [sp + 0x88] = a2
 73584: 7b 1a 90 00              u64 [sp + 0x90] = a3
 73588: 7b 1b 98 00              u64 [sp + 0x98] = a4
 73592: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 73596: 33 0a 50 05 01           a3 = 0x10550
 73601: 7b 1a 68                 u64 [sp + 0x68] = a3
 73604: 49 21 80 00              u64 [sp + 128] = 0
 73608: 82 18 60                 a1 = u64 [sp + 0x60]
 73611: 49 11 78                 u64 [sp + 120] = 0
 73614: 49 11 70                 u64 [sp + 112] = 0
 73617: 49 11 60                 u64 [sp + 96] = 0
 73620: 33 07 01                 a0 = 0x1
 73623: 51 08 26 04              jump @5812 if a1 == 0
      :                          @5766
 73627: 82 19 58                 a2 = u64 [sp + 0x58]
 73630: 97 87 03                 a0 = a1 << 0x3
 73633: c8 97 07                 a0 = a0 + a2
 73636: 7b 17 20                 u64 [sp + 0x20] = a0
 73639: 3a 07 c8 00 03           a0 = u64 [0x300c8]
 73644: 7b 17 40                 u64 [sp + 0x40] = a0
 73647: 14 07 01 01 01 01 01 01 01 01 a0 = 0x101010101010101
 73657: 7b 17 18                 u64 [sp + 0x18] = a0
 73660: 49 11 38 ff fe fe fe     u64 [sp + 56] = 0xfffffffffefefeff
 73667: 01                       fallthrough
      :                          @5767
 73668: 64 97                    a0 = a2
 73670: 82 99                    a2 = u64 [a2]
 73672: 82 18 88 00              a1 = u64 [sp + 0x88]
 73676: 33 04                    t2 = 0
 73678: 82 1a 90 00              a3 = u64 [sp + 0x90]
 73682: 95 77 08                 a0 = a0 + 0x8
 73685: 7b 17 30                 u64 [sp + 0x30] = a0
 73688: 7b 19 48                 u64 [sp + 0x48] = a2
 73691: d3 98 07                 a0 = a1 ^ a2
 73694: ca 07 07                 a0 = a0 * ra
 73697: d3 a7 07                 a0 = a0 ^ a3
 73700: 9e 77 38                 a0 = a0 >>r 0x38
 73703: ca 07 07                 a0 = a0 * ra
 73706: d3 78 08                 a1 = a1 ^ a0
 73709: 9e 88 28                 a1 = a1 >>r 0x28
 73712: ca 08 0a                 a3 = a1 * ra
 73715: d3 a7 07                 a0 = a0 ^ a3
 73718: dc 87 0c                 a5 = a0 <<r a1
 73721: 82 12 68                 t0 = u64 [sp + 0x68]
 73724: 82 18 70                 a1 = u64 [sp + 0x70]
 73727: 98 c9 39                 a2 = a5 >> 0x39
 73730: 82 17 18                 a0 = u64 [sp + 0x18]
 73733: 7b 19 10                 u64 [sp + 0x10] = a2
 73736: ca 79 03                 t1 = a2 * a0
 73739: 95 2b f0                 a4 = t0 + 0xfffffffffffffff0
 73742: 7b 1c 28                 u64 [sp + 0x28] = a5
 73745: 01                       fallthrough
      :                          @5768
 73746: d2 8c 0c                 a5 = a5 & a1
 73749: c8 c2 07                 a0 = t0 + a5
 73752: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 73755: 7c 76                    s1 = u8 [a0]
 73757: 7c 79 02                 a2 = u8 [a0 + 0x2]
 73760: 7c 75 03                 s0 = u8 [a0 + 0x3]
 73763: 97 aa 08                 a3 = a3 << 0x8
 73766: d4 6a 0a                 a3 = a3 | s1
 73769: 97 99 10                 a2 = a2 << 0x10
 73772: 97 55 18                 s0 = s0 << 0x18
 73775: d4 59 09                 a2 = a2 | s0
 73778: d4 a9 09                 a2 = a2 | a3
 73781: 7c 7a 05                 a3 = u8 [a0 + 0x5]
 73784: 7c 75 04                 s0 = u8 [a0 + 0x4]
 73787: 7c 76 06                 s1 = u8 [a0 + 0x6]
 73790: 7c 77 07                 a0 = u8 [a0 + 0x7]
 73793: 97 aa 08                 a3 = a3 << 0x8
 73796: d4 5a 0a                 a3 = a3 | s0
 73799: 97 66 10                 s1 = s1 << 0x10
 73802: 97 77 18                 a0 = a0 << 0x18
 73805: d4 67 07                 a0 = a0 | s1
 73808: d4 a7 07                 a0 = a0 | a3
 73811: 97 77 20                 a0 = a0 << 0x20
 73814: d4 97 06                 s1 = a0 | a2
 73817: d3 36 07                 a0 = s1 ^ t1
 73820: 82 1a 38                 a3 = u64 [sp + 0x38]
 73823: 97 a9 20                 a2 = a3 << 0x20
 73826: c8 a9 09                 a2 = a2 + a3
 73829: c8 79 09                 a2 = a2 + a0
 73832: 82 1a 40                 a3 = u64 [sp + 0x40]
 73835: e0 7a 07                 a0 = a3 & ~a0
 73838: d2 97 07                 a0 = a0 & a2
 73841: 01                       fallthrough
      :                          @5769
 73842: 51 07 24                 jump @5772 if a0 == 0
      :                          @5770
 73845: 6a 79                    a2 = ctz a0
 73847: 98 99 03                 a2 = a2 >> 0x3
 73850: c8 c9 09                 a2 = a2 + a5
 73853: d2 89 0a                 a3 = a2 & a1
 73856: 97 a9 04                 a2 = a3 << 0x4
 73859: c9 9b 09                 a2 = a4 - a2
 73862: 82 99                    a2 = u64 [a2]
 73864: 95 75 ff                 s0 = a0 + 0xffffffffffffffff
 73867: d2 57 07                 a0 = a0 & s0
 73870: 82 15 48                 s0 = u64 [sp + 0x48]
 73873: ab 59 e1                 jump @5769 if a2 != s0
      :                          @5771
 73876: 28 1a                    jump @5774
      :                          @5772
 73878: 97 67 01                 a0 = s1 << 0x1
 73881: 82 19 40                 a2 = u64 [sp + 0x40]
 73884: d2 69 09                 a2 = a2 & s1
 73887: d2 97 07                 a0 = a0 & a2
 73890: 52 07 2b                 jump @5777 if a0 != 0
      :                          @5773
 73893: 95 44 08                 t2 = t2 + 0x8
 73896: c8 4c 0c                 a5 = a5 + t2
 73899: 28 67 ff                 jump @5768
      :                          @5774
 73902: 9a a7                    a0 = -a3
 73904: 97 77 04                 a0 = a0 << 0x4
 73907: c8 72 02                 t0 = t0 + a0
 73910: 81 27 f8                 a0 = i32 [t0 + 0xfffffffffffffff8]
 73913: 01                       fallthrough
      :                          @5775
 73914: 83 77 01                 i32 a0 = a0 + 0x1
 73917: 7a 27 f8                 u32 [t0 + 0xfffffffffffffff8] = a0
 73920: 82 17 20                 a0 = u64 [sp + 0x20]
 73923: 82 19 30                 a2 = u64 [sp + 0x30]
 73926: ab 79 fe fe              jump @5767 if a2 != a0
      :                          @5776
 73930: 28 13 02                 jump @5791
      :                          @5777
 73933: 82 19 28                 a2 = u64 [sp + 0x28]
 73936: d2 89 09                 a2 = a2 & a1
 73939: c8 92 07                 a0 = t0 + a2
 73942: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 73945: 7c 7b                    a4 = u8 [a0]
 73947: 7c 7c 02                 a5 = u8 [a0 + 0x2]
 73950: 7c 76 03                 s1 = u8 [a0 + 0x3]
 73953: 97 aa 08                 a3 = a3 << 0x8
 73956: d4 ba 0a                 a3 = a3 | a4
 73959: 97 cc 10                 a5 = a5 << 0x10
 73962: 97 66 18                 s1 = s1 << 0x18
 73965: d4 6c 0c                 a5 = a5 | s1
 73968: d4 ca 0a                 a3 = a3 | a5
 73971: 7c 7b 05                 a4 = u8 [a0 + 0x5]
 73974: 7c 7c 04                 a5 = u8 [a0 + 0x4]
 73977: 7c 76 06                 s1 = u8 [a0 + 0x6]
 73980: 7c 77 07                 a0 = u8 [a0 + 0x7]
 73983: 97 bb 08                 a4 = a4 << 0x8
 73986: d4 cb 0b                 a4 = a4 | a5
 73989: 97 66 10                 s1 = s1 << 0x10
 73992: 97 77 18                 a0 = a0 << 0x18
 73995: d4 67 07                 a0 = a0 | s1
 73998: d4 b7 07                 a0 = a0 | a4
 74001: 97 77 20                 a0 = a0 << 0x20
 74004: d4 a7 07                 a0 = a0 | a3
 74007: 82 1a 40                 a3 = u64 [sp + 0x40]
 74010: d2 a7 07                 a0 = a0 & a3
 74013: 52 07 5d                 jump @5780 if a0 != 0
      :                          @5778
 74016: 33 0a 08                 a3 = 0x8
 74019: 82 13 40                 t1 = u64 [sp + 0x40]
 74022: 01                       fallthrough
      :                          @5779
 74023: c8 a9 09                 a2 = a2 + a3
 74026: d2 89 09                 a2 = a2 & a1
 74029: c8 92 07                 a0 = t0 + a2
 74032: 7c 7b 01                 a4 = u8 [a0 + 0x1]
 74035: 7c 7c                    a5 = u8 [a0]
 74037: 7c 76 02                 s1 = u8 [a0 + 0x2]
 74040: 7c 75 03                 s0 = u8 [a0 + 0x3]
 74043: 97 bb 08                 a4 = a4 << 0x8
 74046: d4 cb 0b                 a4 = a4 | a5
 74049: 97 66 10                 s1 = s1 << 0x10
 74052: 97 55 18                 s0 = s0 << 0x18
 74055: d4 65 05                 s0 = s0 | s1
 74058: d4 5b 0b                 a4 = a4 | s0
 74061: 7c 7c 05                 a5 = u8 [a0 + 0x5]
 74064: 7c 76 04                 s1 = u8 [a0 + 0x4]
 74067: 7c 75 06                 s0 = u8 [a0 + 0x6]
 74070: 7c 77 07                 a0 = u8 [a0 + 0x7]
 74073: 97 cc 08                 a5 = a5 << 0x8
 74076: d4 6c 0c                 a5 = a5 | s1
 74079: 97 55 10                 s0 = s0 << 0x10
 74082: 97 77 18                 a0 = a0 << 0x18
 74085: d4 57 07                 a0 = a0 | s0
 74088: d4 c7 07                 a0 = a0 | a5
 74091: 97 77 20                 a0 = a0 << 0x20
 74094: d4 b7 07                 a0 = a0 | a4
 74097: d2 37 07                 a0 = a0 & t1
 74100: 95 aa 08                 a3 = a3 + 0x8
 74103: 51 07 b0                 jump @5779 if a0 == 0
      :                          @5780
 74106: 6a 77                    a0 = ctz a0
 74108: 98 77 03                 a0 = a0 >> 0x3
 74111: c8 97 07                 a0 = a0 + a2
 74114: d2 87 09                 a2 = a0 & a1
 74117: c8 92 07                 a0 = t0 + a2
 74120: 7d 77                    a0 = i8 [a0]
 74122: 57 07 16                 jump @5782 if a0 <s 0
      :                          @5781
 74125: 82 27                    a0 = u64 [t0]
 74127: 82 19 40                 a2 = u64 [sp + 0x40]
 74130: d2 97 07                 a0 = a0 & a2
 74133: 6a 79                    a2 = ctz a0
 74135: 98 99 03                 a2 = a2 >> 0x3
 74138: c8 92 07                 a0 = t0 + a2
 74141: 7c 77                    a0 = u8 [a0]
 74143: 01                       fallthrough
      :                          @5782
 74144: 82 1a 78                 a3 = u64 [sp + 0x78]
 74147: 8e aa                    a3 = a3 >u 0
 74149: 84 7b 01                 a4 = a0 & 0x1
 74152: 88 b7 01                 a0 = a4 <u 0x1
 74155: d4 a7 07                 a0 = a0 | a3
 74158: 51 07 3f                 jump @5784 if a0 == 0
      :                          @5783
 74161: 82 17 78                 a0 = u64 [sp + 0x78]
 74164: c9 b7 07                 a0 = a0 - a4
 74167: 7b 17 78                 u64 [sp + 0x78] = a0
 74170: 95 97 f8                 a0 = a2 + 0xfffffffffffffff8
 74173: d2 87 07                 a0 = a0 & a1
 74176: c8 27 07                 a0 = a0 + t0
 74179: c8 92 08                 a1 = t0 + a2
 74182: 82 1a 10                 a3 = u64 [sp + 0x10]
 74185: 78 8a                    u8 [a1] = a3
 74187: 78 7a 08                 u8 [a0 + 0x8] = a3
 74190: 82 18 80 00              a1 = u64 [sp + 0x80]
 74194: 33 07                    a0 = 0
 74196: 95 88 01                 a1 = a1 + 0x1
 74199: 7b 18 80 00              u64 [sp + 0x80] = a1
 74203: 97 99 04                 a2 = a2 << 0x4
 74206: c9 92 02                 t0 = t0 - a2
 74209: 82 18 48                 a1 = u64 [sp + 0x48]
 74212: 7b 28 f0                 u64 [t0 + 0xfffffffffffffff0] = a1
 74215: 48 12 f8                 u32 [t0 + 4294967288] = 0
 74218: 28 d0 fe                 jump @5775
      :                          @5784
 74221: 7b 1b                    u64 [sp] = a4
 74223: 95 17 68                 a0 = sp + 0x68
 74226: 95 18 88 00              a1 = sp + 0x88
 74230: 50 20 aa 03 89 61 ff     ra = 938, jump @2311
      :                          @5785 [@dyn 469]
 74237: 82 18 70                 a1 = u64 [sp + 0x70]
 74240: 82 12 68                 t0 = u64 [sp + 0x68]
 74243: 82 16 28                 s1 = u64 [sp + 0x28]
 74246: d2 86 06                 s1 = s1 & a1
 74249: c8 62 07                 a0 = t0 + s1
 74252: 7c 79 01                 a2 = u8 [a0 + 0x1]
 74255: 7c 7a                    a3 = u8 [a0]
 74257: 7c 7b 02                 a4 = u8 [a0 + 0x2]
 74260: 7c 7c 03                 a5 = u8 [a0 + 0x3]
 74263: 97 99 08                 a2 = a2 << 0x8
 74266: d4 a9 09                 a2 = a2 | a3
 74269: 97 bb 10                 a4 = a4 << 0x10
 74272: 97 cc 18                 a5 = a5 << 0x18
 74275: d4 cb 0b                 a4 = a4 | a5
 74278: d4 b9 09                 a2 = a2 | a4
 74281: 7c 7a 05                 a3 = u8 [a0 + 0x5]
 74284: 7c 7b 04                 a4 = u8 [a0 + 0x4]
 74287: 7c 7c 06                 a5 = u8 [a0 + 0x6]
 74290: 7c 77 07                 a0 = u8 [a0 + 0x7]
 74293: 97 aa 08                 a3 = a3 << 0x8
 74296: d4 ba 0a                 a3 = a3 | a4
 74299: 97 cc 10                 a5 = a5 << 0x10
 74302: 97 77 18                 a0 = a0 << 0x18
 74305: d4 c7 07                 a0 = a0 | a5
 74308: d4 a7 07                 a0 = a0 | a3
 74311: 97 77 20                 a0 = a0 << 0x20
 74314: d4 97 07                 a0 = a0 | a2
 74317: 82 19 40                 a2 = u64 [sp + 0x40]
 74320: d2 97 07                 a0 = a0 & a2
 74323: 52 07 5d                 jump @5788 if a0 != 0
      :                          @5786
 74326: 33 09 08                 a2 = 0x8
 74329: 82 13 40                 t1 = u64 [sp + 0x40]
 74332: 01                       fallthrough
      :                          @5787
 74333: c8 96 06                 s1 = s1 + a2
 74336: d2 86 06                 s1 = s1 & a1
 74339: c8 62 07                 a0 = t0 + s1
 74342: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 74345: 7c 7b                    a4 = u8 [a0]
 74347: 7c 7c 02                 a5 = u8 [a0 + 0x2]
 74350: 7c 75 03                 s0 = u8 [a0 + 0x3]
 74353: 97 aa 08                 a3 = a3 << 0x8
 74356: d4 ba 0a                 a3 = a3 | a4
 74359: 97 cc 10                 a5 = a5 << 0x10
 74362: 97 55 18                 s0 = s0 << 0x18
 74365: d4 5c 0c                 a5 = a5 | s0
 74368: d4 ca 0a                 a3 = a3 | a5
 74371: 7c 7b 05                 a4 = u8 [a0 + 0x5]
 74374: 7c 7c 04                 a5 = u8 [a0 + 0x4]
 74377: 7c 75 06                 s0 = u8 [a0 + 0x6]
 74380: 7c 77 07                 a0 = u8 [a0 + 0x7]
 74383: 97 bb 08                 a4 = a4 << 0x8
 74386: d4 cb 0b                 a4 = a4 | a5
 74389: 97 55 10                 s0 = s0 << 0x10
 74392: 97 77 18                 a0 = a0 << 0x18
 74395: d4 57 07                 a0 = a0 | s0
 74398: d4 b7 07                 a0 = a0 | a4
 74401: 97 77 20                 a0 = a0 << 0x20
 74404: d4 a7 07                 a0 = a0 | a3
 74407: d2 37 07                 a0 = a0 & t1
 74410: 95 99 08                 a2 = a2 + 0x8
 74413: 51 07 b0                 jump @5787 if a0 == 0
      :                          @5788
 74416: 6a 77                    a0 = ctz a0
 74418: 98 77 03                 a0 = a0 >> 0x3
 74421: c8 67 07                 a0 = a0 + s1
 74424: d2 87 09                 a2 = a0 & a1
 74427: c8 92 07                 a0 = t0 + a2
 74430: 7d 77                    a0 = i8 [a0]
 74432: 82 10 08                 ra = u64 [sp + 0x8]
 74435: 57 07 15                 jump @5790 if a0 <s 0
      :                          @5789
 74438: 82 27                    a0 = u64 [t0]
 74440: 82 19 40                 a2 = u64 [sp + 0x40]
 74443: d2 97 07                 a0 = a0 & a2
 74446: 6a 79                    a2 = ctz a0
 74448: 98 99 03                 a2 = a2 >> 0x3
 74451: 82 1b                    a4 = u64 [sp]
 74453: 28 dc fe                 jump @5783
      :                          @5790
 74456: 82 1b                    a4 = u64 [sp]
 74458: 28 d7 fe                 jump @5783
      :                          @5791
 74461: 82 14 80 00              t2 = u64 [sp + 0x80]
 74465: 82 1a 68                 a3 = u64 [sp + 0x68]
 74468: 51 04 1c 01              jump @5821 if t2 == 0
      :                          @5792
 74472: 82 a7                    a0 = u64 [a3]
 74474: 95 a9 08                 a2 = a3 + 0x8
 74477: 82 1c 40                 a5 = u64 [sp + 0x40]
 74480: 64 a0                    ra = a3
 74482: e0 7c 0b                 a4 = a5 & ~a0
 74485: 33 03 03                 t1 = 0x3
 74488: 33 07 01                 a0 = 0x1
 74491: 7b 1a 38                 u64 [sp + 0x38] = a3
 74494: 28 11                    jump @5794
      :                          @5793
 74496: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
 74499: cb b7 08                 a1 = a0 /u a4
 74502: ca a8 07                 a0 = a1 * a3
 74505: 64 2b                    a4 = t0
 74507: 51 04 ae 00              jump @5811 if t2 == 0
      :                          @5794
 74511: 51 0b 09                 jump @5797 if a4 == 0
      :                          @5795
 74514: 52 00 14                 jump @5798 if ra != 0
      :                          @5796
 74517: 28 a4 00                 jump @5811
      :                          @5797
 74520: 82 9a                    a3 = u64 [a2]
 74522: e0 ac 0b                 a4 = a5 & ~a3
 74525: 95 00 80                 ra = ra + 0xffffffffffffff80
 74528: 95 99 08                 a2 = a2 + 0x8
 74531: 51 0b f5                 jump @5797 if a4 == 0
      :                          @5798
 74534: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 74537: d2 ba 02                 t0 = a3 & a4
 74540: 6a ba                    a3 = ctz a4
 74542: 97 aa 01                 a3 = a3 << 0x1
 74545: 84 aa f0 00              a3 = a3 & 0xf0
 74549: c9 a0 0a                 a3 = ra - a3
 74552: 81 a6 f8                 s1 = i32 [a3 + 0xfffffffffffffff8]
 74555: 82 a5 f0                 s0 = u64 [a3 + 0xfffffffffffffff0]
 74558: 88 6a 03                 a3 = s1 <u 0x3
 74561: 95 5b fe                 a4 = s0 + 0xfffffffffffffffe
 74564: 8e bb                    a4 = a4 >u 0
 74566: d4 ba 0a                 a3 = a3 | a4
 74569: 52 0a 0f                 jump @5800 if a3 != 0
      :                          @5799
 74572: 83 68 3e                 i32 a1 = s1 + 0x3e
 74575: 9b 8a 01                 a3 = 0x1 << a1
 74578: 64 75                    s0 = a0
 74580: 64 a6                    s1 = a3
 74582: 28 4b                    jump @5807
      :                          @5800
 74584: 33 0a 01                 a3 = 0x1
 74587: aa a6 38                 jump @5805 if s1 == a3
      :                          @5801
 74590: 7b 12 48                 u64 [sp + 0x48] = t0
 74593: 64 5b                    a4 = s0
 74595: 33 08 02                 a1 = 0x2
 74598: aa 86 23                 jump @5804 if s1 == a1
      :                          @5802
 74601: 83 62 ff                 i32 t0 = s1 + 0xffffffffffffffff
 74604: 33 0a 01                 a3 = 0x1
 74607: 64 5b                    a4 = s0
 74609: 01                       fallthrough
      :                          @5803
 74610: 64 26                    s1 = t0
 74612: 84 2c 01                 a5 = t0 & 0x1
 74615: 33 08 01                 a1 = 0x1
 74618: db cb 08                 a1 = a4 if a5 != 0
 74621: ca a8 0a                 a3 = a1 * a3
 74624: 8b 22 01                 i32 t0 = t0 >> 0x1
 74627: ca bb 0b                 a4 = a4 * a4
 74630: ac 63 ec                 jump @5803 if t1 <u s1
      :                          @5804
 74633: ca ab 06                 s1 = a4 * a3
 74636: 82 1c 40                 a5 = u64 [sp + 0x40]
 74639: 82 12 48                 t0 = u64 [sp + 0x48]
 74642: 01                       fallthrough
      :                          @5805
 74643: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 74646: ca 56 0a                 a3 = s1 * s0
 74649: 51 0a 15                 jump @5809 if a3 == 0
      :                          @5806
 74652: 64 75                    s0 = a0
 74654: 64 a6                    s1 = a3
 74656: 01                       fallthrough
      :                          @5807
 74657: 64 6b                    a4 = s1
 74659: cd 65 06                 s1 = s0 %u s1
 74662: 64 b5                    s0 = a4
 74664: 52 06 f9                 jump @5807 if s1 != 0
      :                          @5808
 74667: 28 55 ff                 jump @5793
      :                          @5809
 74670: 51 07 c4 00              jump @5832 if a0 == 0
      :                          @5810
 74674: 33 0a                    a3 = 0
 74676: 64 7b                    a4 = a0
 74678: 28 4a ff                 jump @5793
      :                          @5811
 74681: 82 1a 38                 a3 = u64 [sp + 0x38]
 74684: 01                       fallthrough
      :                          @5812
 74685: 82 19 70                 a2 = u64 [sp + 0x70]
 74688: 51 09 49                 jump @5822 if a2 == 0
      :                          @5813
 74691: 97 98 04                 a1 = a2 << 0x4
 74694: c8 89 09                 a2 = a2 + a1
 74697: 95 95 19                 s0 = a2 + 0x19
 74700: 33 09 00 00 10           a2 = 0x100000
 74705: ac 59 38                 jump @5822 if a2 <u s0
      :                          @5814
 74708: c9 8a 08                 a1 = a3 - a1
 74711: 95 88 f0                 a1 = a1 + 0xfffffffffffffff0
 74714: 33 0a b0 02 03           a3 = 0x302b0
 74719: 95 a9 00 00 10           a2 = a3 + 0x100000
 74724: 01                       fallthrough
      :                          @5815
 74725: 82 9a                    a3 = u64 [a2]
 74727: c9 a9 0b                 a4 = a2 - a3
 74730: ab 8b 1f                 jump @5822 if a4 != a1
      :                          @5816
 74733: c9 5a 0b                 a4 = a3 - s0
 74736: 01                       fallthrough
      :                          @5817
 74737: 82 9c                    a5 = u64 [a2]
 74739: ab ac f2                 jump @5815 if a5 != a3
      :                          @5818
 74742: 7b 9b                    u64 [a2] = a4
 74744: 33 06                    s1 = 0
 74746: 01                       fallthrough
      :                          @5819
 74747: ab ac ea                 jump @5815 if a5 != a3
      :                          @5820
 74750: 28 0b                    jump @5822
      :                          @5821
 74752: 33 07 01                 a0 = 0x1
 74755: 82 19 70                 a2 = u64 [sp + 0x70]
 74758: 52 09 bd                 jump @5813 if a2 != 0
      :                          @5822
 74761: 82 18 50                 a1 = u64 [sp + 0x50]
 74764: 51 08 30                 jump @5829 if a1 == 0
      :                          @5823
 74767: 33 09 00 00 02           a2 = 0x20000
 74772: ac 89 28                 jump @5829 if a2 <u a1
      :                          @5824
 74775: 82 15 58                 s0 = u64 [sp + 0x58]
 74778: 97 88 03                 a1 = a1 << 0x3
 74781: 33 09 b0 02 03           a2 = 0x302b0
 74786: 95 99 00 00 10           a2 = a2 + 0x100000
 74791: 01                       fallthrough
      :                          @5825
 74792: 82 9a                    a3 = u64 [a2]
 74794: c9 a9 0b                 a4 = a2 - a3
 74797: ab 5b 0f                 jump @5829 if a4 != s0
      :                          @5826
 74800: c9 8a 0b                 a4 = a3 - a1
 74803: 01                       fallthrough
      :                          @5827
 74804: 82 9c                    a5 = u64 [a2]
 74806: ab ac f2                 jump @5825 if a5 != a3
      :                          @5828
 74809: 7b 9b                    u64 [a2] = a4
 74811: 01                       fallthrough
      :                          @5829
 74812: 82 10 b8 00              ra = u64 [sp + 0xb8]
 74816: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 74820: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 74824: 95 11 c0 00              sp = sp + 0xc0
 74828: 32 00                    ret
      :                          @5830
 74830: 33 00 ac 03              ra = 0x3ac
 74834: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 74837: 7b 10 20                 u64 [sp + 0x20] = ra
 74840: 7b 15 18                 u64 [sp + 0x18] = s0
 74843: 7b 16 10                 u64 [sp + 0x10] = s1
 74846: 33 06 b0 02 03           s1 = 0x302b0
 74851: 33 02 00 00 10           t0 = 0x100000
 74856: c8 26 09                 a2 = s1 + t0
 74859: 28 83 65 ff              jump @2373
      :                          @5831 [@dyn 470]
 74863: 28 37 fa                 jump @5763
      :                          @5832
 74866: 00                       trap
      :                          @5833
 74867: 51 08 4a                 jump @5842 if a1 == 0
      :                          @5834
 74870: 64 7a                    a3 = a0
 74872: 64 8b                    a4 = a1
 74874: 01                       fallthrough
      :                          @5835
 74875: 64 b9                    a2 = a4
 74877: cd ba 0b                 a4 = a3 %u a4
 74880: 64 9a                    a3 = a2
 74882: 52 0b f9                 jump @5835 if a4 != 0
      :                          @5836
 74885: 33 0b 01                 a4 = 0x1
 74888: ab b9 39                 jump @5843 if a2 != a4
      :                          @5837
 74891: 64 7a                    a3 = a0
 74893: 01                       fallthrough
      :                          @5838
 74894: cd 8a 0c                 a5 = a3 %u a1
 74897: 33 0a 01                 a3 = 0x1
 74900: 64 b9                    a2 = a4
 74902: aa ac 20                 jump @5841 if a5 == a3
      :                          @5839
 74905: d8 89 0b                 a4 = a2 <u a1
 74908: 85 b2 01                 t0 = a4 ^ 0x1
 74911: c8 9b 0b                 a4 = a4 + a2
 74914: d8 b8 0a                 a3 = a1 <u a4
 74917: d4 a2 02                 t0 = t0 | a3
 74920: ca 7c 0a                 a3 = a5 * a0
 74923: 51 02 e3                 jump @5838 if t0 == 0
      :                          @5840
 74926: 33 0a                    a3 = 0
 74928: 33 07                    a0 = 0
 74930: 64 98                    a1 = a2
 74932: 32 00                    ret
      :                          @5841
 74934: 33 07 01                 a0 = 0x1
 74937: 64 98                    a1 = a2
 74939: 32 00                    ret
      :                          @5842
 74941: 51 17 01 0c              jump @5844 if a0 == 1
      :                          @5843
 74945: 33 0a                    a3 = 0
 74947: 33 07                    a0 = 0
 74949: 64 98                    a1 = a2
 74951: 32 00                    ret
      :                          @5844
 74953: 00                       trap
      :                          @5845
 74954: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 74957: 7b 10 38                 u64 [sp + 0x38] = ra
 74960: 7b 15 30                 u64 [sp + 0x30] = s0
 74963: 7b 16 28                 u64 [sp + 0x28] = s1
 74966: 64 70                    ra = a0
 74968: 84 77 01                 a0 = a0 & 0x1
 74971: 52 07 25                 jump @5847 if a0 != 0
      :                          @5846
 74974: 3a 08 70 02 03           a1 = u64 [0x30270]
 74979: 49 11 20                 u64 [sp + 32] = 0
 74982: 97 89 0d                 a2 = a1 << 0xd
 74985: d3 98 08                 a1 = a1 ^ a2
 74988: 98 89 07                 a2 = a1 >> 0x7
 74991: d3 98 08                 a1 = a1 ^ a2
 74994: 97 89 11                 a2 = a1 << 0x11
 74997: d3 98 08                 a1 = a1 ^ a2
 75000: 3e 08 70 02 03           u64 [0x30270] = a1
 75005: 28 e8 00                 jump @5866
      :                          @5847
 75008: 33 09                    a2 = 0
 75010: 95 07 fe                 a0 = ra + 0xfffffffffffffffe
 75013: 7b 17 18                 u64 [sp + 0x18] = a0
 75016: 95 07 ff                 a0 = ra + 0xffffffffffffffff
 75019: 7b 17 10                 u64 [sp + 0x10] = a0
 75022: 3a 07 d0 00 03           a0 = u64 [0x300d0]
 75027: 7b 17 08                 u64 [sp + 0x8] = a0
 75030: 33 0a 05                 a3 = 0x5
 75033: 33 0c 03                 a5 = 0x3
 75036: 01                       fallthrough
      :                          @5848
 75037: 95 97 fb                 a0 = a2 + 0xfffffffffffffffb
 75040: 88 77 01                 a0 = a0 <u 0x1
 75043: 7b 17 20                 u64 [sp + 0x20] = a0
 75046: aa a9 bf 00              jump @5866 if a2 == a3
      :                          @5849
 75050: 3a 07 70 02 03           a0 = u64 [0x30270]
 75055: 97 78 0d                 a1 = a0 << 0xd
 75058: d3 87 07                 a0 = a0 ^ a1
 75061: 98 78 07                 a1 = a0 >> 0x7
 75064: d3 87 07                 a0 = a0 ^ a1
 75067: 97 78 11                 a1 = a0 << 0x11
 75070: d3 87 07                 a0 = a0 ^ a1
 75073: 3e 07 70 02 03           u64 [0x30270] = a0
 75078: 82 18 08                 a1 = u64 [sp + 0x8]
 75081: ca 87 07                 a0 = a0 * a1
 75084: 82 18 18                 a1 = u64 [sp + 0x18]
 75087: cd 87 0b                 a4 = a0 %u a1
 75090: 95 bb 02                 a4 = a4 + 0x2
 75093: cd 0b 07                 a0 = a4 %u ra
 75096: 33 05 01                 s0 = 0x1
 75099: 64 02                    t0 = ra
 75101: 33 06 01                 s1 = 0x1
 75104: 51 07 49                 jump @5860 if a0 == 0
      :                          @5850
 75107: 33 06 01                 s1 = 0x1
 75110: 64 03                    t1 = ra
 75112: 28 18                    jump @5853
      :                          @5851
 75114: 64 72                    t0 = a0
 75116: 01                       fallthrough
      :                          @5852
 75117: d2 23 07                 a0 = t1 & t0
 75120: 84 78 02                 a1 = a0 & 0x2
 75123: 9a 64                    t2 = -s1
 75125: cd 23 07                 a0 = t1 %u t0
 75128: db 84 06                 s1 = t2 if a1 != 0
 75131: 64 23                    t1 = t0
 75133: 51 07 2c                 jump @5860 if a0 == 0
      :                          @5853
 75136: 84 78 01                 a1 = a0 & 0x1
 75139: 52 08 e7                 jump @5851 if a1 != 0
      :                          @5854
 75142: 84 38 07                 a1 = t1 & 0x7
 75145: aa c8 06                 jump @5856 if a1 == a5
      :                          @5855
 75148: ab a8 12                 jump @5858 if a1 != a3
      :                          @5856
 75151: 98 72 01                 t0 = a0 >> 0x1
 75154: 84 78 02                 a1 = a0 & 0x2
 75157: 9a 66                    s1 = -s1
 75159: 64 27                    a0 = t0
 75161: 51 08 f6                 jump @5856 if a1 == 0
      :                          @5857
 75164: 28 d1                    jump @5852
      :                          @5858
 75166: 84 78 02                 a1 = a0 & 0x2
 75169: 98 77 01                 a0 = a0 >> 0x1
 75172: 51 08 fa                 jump @5858 if a1 == 0
      :                          @5859
 75175: 28 c3                    jump @5851
      :                          @5860
 75177: 83 99 01                 i32 a2 = a2 + 0x1
 75180: 82 17 10                 a0 = u64 [sp + 0x10]
 75183: 28 0b                    jump @5862
      :                          @5861
 75185: 98 87 01                 a0 = a1 >> 0x1
 75188: ca bb 0b                 a4 = a4 * a4
 75191: ae 8c 16                 jump @5864 if a5 >=u a1
      :                          @5862
 75194: 64 78                    a1 = a0
 75196: 84 77 02                 a0 = a0 & 0x2
 75199: cd 0b 0b                 a4 = a4 %u ra
 75202: 51 07 ef                 jump @5861 if a0 == 0
      :                          @5863
 75205: ca 5b 07                 a0 = a4 * s0
 75208: cd 07 05                 s0 = a0 %u ra
 75211: 28 e6                    jump @5861
      :                          @5864
 75213: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 75216: 8e 27                    a0 = t0 >u 0
 75218: 88 68 01                 a1 = s1 <u 0x1
 75221: d4 87 07                 a0 = a0 | a1
 75224: 52 07 0d                 jump @5866 if a0 != 0
      :                          @5865
 75227: c9 65 05                 s0 = s0 - s1
 75230: ce 05 07                 a0 = s0 %s ra
 75233: 51 07 3c ff              jump @5848 if a0 == 0
      :                          @5866
 75237: 82 17 20                 a0 = u64 [sp + 0x20]
 75240: 82 10 38                 ra = u64 [sp + 0x38]
 75243: 82 15 30                 s0 = u64 [sp + 0x30]
 75246: 82 16 28                 s1 = u64 [sp + 0x28]
 75249: 95 11 40                 sp = sp + 0x40
 75252: 32 00                    ret
      :                          @5867
 75254: c8 a2 09                 a2 = t0 + a3
 75257: 98 99 01                 a2 = a2 >> 0x1
 75260: d6 99 0b                 a4 = a2 mulhu a2
 75263: ca 99 0c                 a5 = a2 * a2
 75266: db b3 0c                 a5 = t1 if a4 != 0
 75269: aa 8c 17                 jump @5870 if a5 == a1
      :                          @5868
 75272: d8 8c 0b                 a4 = a5 <u a1
 75275: 95 9c 01                 a5 = a2 + 0x1
 75278: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 75281: da b9 02                 t0 = a2 if a4 == 0
 75284: db bc 0a                 a3 = a5 if a4 != 0
 75287: ae a2 df                 jump @5867 if t0 >=u a3
      :                          @5869
 75290: 28 0b                    jump @5872
      :                          @5870
 75292: 64 92                    t0 = a2
 75294: 28 07                    jump @5872
      :                          @5871
 75296: 64 ba                    a3 = a4
 75298: aa 34 3e                 jump @5876 if t2 == t1
      :                          @5872
 75301: 95 22 01                 t0 = t0 + 0x1
 75304: ca 22 09                 a2 = t0 * t0
 75307: c9 89 03                 t1 = a2 - a1
 75310: 33 0c                    a5 = 0
 75312: 64 3a                    a3 = t1
 75314: 01                       fallthrough
      :                          @5873
 75315: c8 ca 0b                 a4 = a3 + a5
 75318: 98 bb 01                 a4 = a4 >> 0x1
 75321: ca bb 04                 t2 = a4 * a4
 75324: d6 bb 05                 s0 = a4 mulhu a4
 75327: 33 09 ff                 a2 = 0xffffffffffffffff
 75330: da 54 09                 a2 = t2 if s0 == 0
 75333: aa 39 db                 jump @5871 if a2 == t1
      :                          @5874
 75336: d8 39 09                 a2 = a2 <u t1
 75339: 95 b5 01                 s0 = a4 + 0x1
 75342: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 75345: da 9b 0a                 a3 = a4 if a2 == 0
 75348: db 95 0c                 a5 = s0 if a2 != 0
 75351: ae ca dc                 jump @5873 if a3 >=u a5
      :                          @5875
 75354: ca aa 04                 t2 = a3 * a3
 75357: ab 34 c8                 jump @5872 if t2 != t1
      :                          @5876
 75360: c9 a2 08                 a1 = t0 - a3
 75363: c8 2a 0a                 a3 = a3 + t0
 75366: 7b 78 08                 u64 [a0 + 0x8] = a1
 75369: 7b 7a 10                 u64 [a0 + 0x10] = a3
 75372: 33 08 01                 a1 = 0x1
 75375: 7b 78                    u64 [a0] = a1
 75377: 82 15 08                 s0 = u64 [sp + 0x8]
 75380: 95 11 10                 sp = sp + 0x10
 75383: 32 00                    ret
      :                          @5877
 75385: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 75388: 7b 10 38                 u64 [sp + 0x38] = ra
 75391: 7b 15 30                 u64 [sp + 0x30] = s0
 75394: 7b 16 28                 u64 [sp + 0x28] = s1
 75397: 64 85                    s0 = a1
 75399: 49 11 10                 u64 [sp + 16] = 0
 75402: 33 0a 08                 a3 = 0x8
 75405: 7b 1a 18                 u64 [sp + 0x18] = a3
 75408: 84 89 01                 a2 = a1 & 0x1
 75411: 49 11 20                 u64 [sp + 32] = 0
 75414: 7b 17                    u64 [sp] = a0
 75416: 33 08                    a1 = 0
 75418: 52 09 3c                 jump @5883 if a2 != 0
      :                          @5878
 75421: 33 07 02                 a0 = 0x2
 75424: 28 1b                    jump @5880
      :                          @5879
 75426: 97 89 03                 a2 = a1 << 0x3
 75429: c8 a9 09                 a2 = a2 + a3
 75432: 7b 97                    u64 [a2] = a0
 75434: 95 88 01                 a1 = a1 + 0x1
 75437: 98 56 01                 s1 = s0 >> 0x1
 75440: 84 59 02                 a2 = s0 & 0x2
 75443: 7b 18 20                 u64 [sp + 0x20] = a1
 75446: 64 65                    s0 = s1
 75448: 52 09 21                 jump @5884 if a2 != 0
      :                          @5880
 75451: 82 19 10                 a2 = u64 [sp + 0x10]
 75454: ab 98 e4                 jump @5879 if a1 != a2
      :                          @5881
 75457: 95 17 10                 a0 = sp + 0x10
 75460: 50 20 ae 03 4b 2c ff     ra = 942, jump @1581
      :                          @5882 [@dyn 471]
 75467: 33 07 02                 a0 = 0x2
 75470: 82 18 20                 a1 = u64 [sp + 0x20]
 75473: 82 1a 18                 a3 = u64 [sp + 0x18]
 75476: 28 ce                    jump @5879
      :                          @5883
 75478: 64 56                    s1 = s0
 75480: 01                       fallthrough
      :                          @5884
 75481: 14 05 ab aa aa aa aa aa aa aa s0 = 0xaaaaaaaaaaaaaaab
 75491: ca 56 07                 a0 = s1 * s0
 75494: 14 0a 00 00 00 00 55 55 55 55 a3 = 0x5555555500000000
 75504: 14 09 55 55 55 55 55 55 55 55 a2 = 0x5555555555555555
 75514: ae 79 e2 00              jump @5907 if a2 >=u a0
      :                          @5885
 75518: 55 16 19 4f              jump @5892 if s1 >=u 25
      :                          @5886
 75522: 54 16 01 2a              jump @5891 if s1 <=u 1
      :                          @5887
 75526: 82 17 10                 a0 = u64 [sp + 0x10]
 75529: ab 78 11                 jump @5890 if a1 != a0
      :                          @5888
 75532: 95 17 10                 a0 = sp + 0x10
 75535: 50 20 b0 03 00 2c ff     ra = 944, jump @1581
      :                          @5889 [@dyn 472]
 75542: 82 18 20                 a1 = u64 [sp + 0x20]
 75545: 01                       fallthrough
      :                          @5890
 75546: 82 17 18                 a0 = u64 [sp + 0x18]
 75549: 97 89 03                 a2 = a1 << 0x3
 75552: c8 97 07                 a0 = a0 + a2
 75555: 7b 76                    u64 [a0] = s1
 75557: 95 88 01                 a1 = a1 + 0x1
 75560: 7b 18 20                 u64 [sp + 0x20] = a1
 75563: 01                       fallthrough
      :                          @5891
 75564: 82 17 20                 a0 = u64 [sp + 0x20]
 75567: 82 18 18                 a1 = u64 [sp + 0x18]
 75570: 82 19 10                 a2 = u64 [sp + 0x10]
 75573: 82 1a                    a3 = u64 [sp]
 75575: 7b a7 10                 u64 [a3 + 0x10] = a0
 75578: 7b a8 08                 u64 [a3 + 0x8] = a1
 75581: 7b a9                    u64 [a3] = a2
 75583: 82 10 38                 ra = u64 [sp + 0x38]
 75586: 82 15 30                 s0 = u64 [sp + 0x30]
 75589: 82 16 28                 s1 = u64 [sp + 0x28]
 75592: 95 11 40                 sp = sp + 0x40
 75595: 32 00                    ret
      :                          @5892
 75597: 33 09 05                 a2 = 0x5
 75600: 28 0e                    jump @5894
      :                          @5893
 75602: 82 19 08                 a2 = u64 [sp + 0x8]
 75605: 95 99 06                 a2 = a2 + 0x6
 75608: ca 99 07                 a0 = a2 * a2
 75611: ac 76 a7                 jump @5886 if s1 <u a0
      :                          @5894
 75614: 51 09 c8 00              jump @5912 if a2 == 0
      :                          @5895
 75618: cd 96 07                 a0 = s1 %u a2
 75621: 64 95                    s0 = a2
 75623: 51 07 31                 jump @5900 if a0 == 0
      :                          @5896
 75626: 64 57                    a0 = s0
 75628: 95 55 02                 s0 = s0 + 0x2
 75631: 51 05 b7 00              jump @5912 if s0 == 0
      :                          @5897
 75635: 7b 17 08                 u64 [sp + 0x8] = a0
 75638: cd 56 07                 a0 = s1 %u s0
 75641: 52 07 d9                 jump @5893 if a0 != 0
      :                          @5898
 75644: 28 4b                    jump @5904
      :                          @5899
 75646: 82 17 18                 a0 = u64 [sp + 0x18]
 75649: 97 89 03                 a2 = a1 << 0x3
 75652: c8 97 07                 a0 = a0 + a2
 75655: 7b 75                    u64 [a0] = s0
 75657: 95 88 01                 a1 = a1 + 0x1
 75660: cb 56 06                 s1 = s1 /u s0
 75663: cd 56 07                 a0 = s1 %u s0
 75666: 7b 18 20                 u64 [sp + 0x20] = a1
 75669: 52 07 d5                 jump @5896 if a0 != 0
      :                          @5900
 75672: 82 17 10                 a0 = u64 [sp + 0x10]
 75675: ab 78 e3                 jump @5899 if a1 != a0
      :                          @5901
 75678: 95 17 10                 a0 = sp + 0x10
 75681: 50 20 b2 03 6e 2b ff     ra = 946, jump @1581
      :                          @5902 [@dyn 473]
 75688: 82 18 20                 a1 = u64 [sp + 0x20]
 75691: 28 d3                    jump @5899
      :                          @5903
 75693: 82 17 18                 a0 = u64 [sp + 0x18]
 75696: 97 89 03                 a2 = a1 << 0x3
 75699: c8 97 07                 a0 = a0 + a2
 75702: 7b 75                    u64 [a0] = s0
 75704: 95 88 01                 a1 = a1 + 0x1
 75707: cb 56 06                 s1 = s1 /u s0
 75710: cd 56 07                 a0 = s1 %u s0
 75713: 7b 18 20                 u64 [sp + 0x20] = a1
 75716: 52 07 8e                 jump @5893 if a0 != 0
      :                          @5904
 75719: 82 17 10                 a0 = u64 [sp + 0x10]
 75722: ab 78 e3                 jump @5903 if a1 != a0
      :                          @5905
 75725: 95 17 10                 a0 = sp + 0x10
 75728: 50 20 b4 03 3f 2b ff     ra = 948, jump @1581
      :                          @5906 [@dyn 474]
 75735: 82 18 20                 a1 = u64 [sp + 0x20]
 75738: 28 d3                    jump @5903
      :                          @5907
 75740: 3a 0a d8 00 03           a3 = u64 [0x300d8]
 75745: 33 0b 03                 a4 = 0x3
 75748: 7b 15 08                 u64 [sp + 0x8] = s0
 75751: 28 20                    jump @5909
      :                          @5908
 75753: 82 17 18                 a0 = u64 [sp + 0x18]
 75756: 97 89 03                 a2 = a1 << 0x3
 75759: c8 97 07                 a0 = a0 + a2
 75762: 7b 7b                    u64 [a0] = a4
 75764: 95 88 01                 a1 = a1 + 0x1
 75767: d6 56 06                 s1 = s1 mulhu s0
 75770: 98 66 01                 s1 = s1 >> 0x1
 75773: ca 56 07                 a0 = s1 * s0
 75776: 7b 18 20                 u64 [sp + 0x20] = a1
 75779: ae a7 fb fe              jump @5885 if a0 >=u a3
      :                          @5909
 75783: 82 17 10                 a0 = u64 [sp + 0x10]
 75786: ab 78 df                 jump @5908 if a1 != a0
      :                          @5910
 75789: 95 17 10                 a0 = sp + 0x10
 75792: 64 a5                    s0 = a3
 75794: 50 20 b6 03 fd 2a ff     ra = 950, jump @1581
      :                          @5911 [@dyn 475]
 75801: 33 0b 03                 a4 = 0x3
 75804: 64 5a                    a3 = s0
 75806: 82 15 08                 s0 = u64 [sp + 0x8]
 75809: 82 18 20                 a1 = u64 [sp + 0x20]
 75812: 28 c5                    jump @5908
      :                          @5912
 75814: 00                       trap
      :                          @5913 [@dyn 476]
 75815: 82 13 40                 t1 = u64 [sp + 0x40]
 75818: 82 14 38                 t2 = u64 [sp + 0x38]
 75821: 97 39 03                 a2 = t1 << 0x3
 75824: 51 03 8d 00              jump @5924 if t1 == 0
      :                          @5914
 75828: 7b 13 10                 u64 [sp + 0x10] = t1
 75831: 98 37 3c                 a0 = t1 >> 0x3c
 75834: 52 07 fa 01              jump @5970 if a0 != 0
      :                          @5915
 75838: 88 77 01                 a0 = a0 <u 0x1
 75841: 97 72 03                 t0 = a0 << 0x3
 75844: 33 08 b0 02 03           a1 = 0x302b0
 75849: 33 00 b0 02 03           ra = 0x302b0
 75854: 33 03 00 00 10           t1 = 0x100000
 75859: c8 30 0a                 a3 = ra + t1
 75862: 01                       fallthrough
      :                          @5916
 75863: 82 a6                    s1 = u64 [a3]
 75865: c8 96 0b                 a4 = s1 + a2
 75868: ac 6b d7 01              jump @5969 if a4 <u s1
      :                          @5917
 75872: c8 2b 0c                 a5 = a4 + t0
 75875: d8 bc 05                 s0 = a5 <u a4
 75878: d8 c3 0c                 a5 = t1 <u a5
 75881: d4 5c 0c                 a5 = a5 | s0
 75884: 52 0c c7 01              jump @5969 if a5 != 0
      :                          @5918
 75888: c9 b0 0c                 a5 = ra - a4
 75891: c8 3c 0c                 a5 = a5 + t1
 75894: 84 c5 07                 s0 = a5 & 0x7
 75897: c8 5b 0b                 a4 = a4 + s0
 75900: 01                       fallthrough
      :                          @5919
 75901: 82 a7                    a0 = u64 [a3]
 75903: ab 67 d8                 jump @5916 if a0 != s1
      :                          @5920
 75906: 7b ab                    u64 [a3] = a4
 75908: c9 5c 07                 a0 = a5 - s0
 75911: 7b 17 20                 u64 [sp + 0x20] = a0
 75914: 7b 14                    u64 [sp] = t2
 75916: 64 48                    a1 = t2
 75918: 7b 19 08                 u64 [sp + 0x8] = a2
 75921: 50 20 ba 03 4f e1 01     ra = 954, jump @13635
      :                          @5921 [@dyn 477]
 75928: 82 17 20                 a0 = u64 [sp + 0x20]
 75931: 82 18 10                 a1 = u64 [sp + 0x10]
 75934: 50 20 bc 03 2c eb fe     ra = 956, jump @344
      :                          @5922 [@dyn 478]
 75941: 82 13 10                 t1 = u64 [sp + 0x10]
 75944: 33 07 02                 a0 = 0x2
 75947: ae 73 1c                 jump @5925 if t1 >=u a0
      :                          @5923
 75950: 64 37                    a0 = t1
 75952: 82 14                    t2 = u64 [sp]
 75954: 82 19 08                 a2 = u64 [sp + 0x8]
 75957: 82 10 18                 ra = u64 [sp + 0x18]
 75960: 82 12 20                 t0 = u64 [sp + 0x20]
 75963: 28 79                    jump @5935
      :                          @5924
 75965: 33 07                    a0 = 0
 75967: 33 02 08                 t0 = 0x8
 75970: 82 10 18                 ra = u64 [sp + 0x18]
 75973: 28 6f                    jump @5935
      :                          @5925
 75975: 82 12 20                 t0 = u64 [sp + 0x20]
 75978: 82 2c                    a5 = u64 [t0]
 75980: 33 08 b0 02 03           a1 = 0x302b0
 75985: 82 19 08                 a2 = u64 [sp + 0x8]
 75988: c9 98 08                 a1 = a1 - a2
 75991: c8 65 05                 s0 = s0 + s1
 75994: 95 88 10 00 10           a1 = a1 + 0x100010
 75999: c9 58 08                 a1 = a1 - s0
 76002: 9a 35 01                 s0 = 0x1 - t1
 76005: 33 0a 02                 a3 = 0x2
 76008: 82 10 18                 ra = u64 [sp + 0x18]
 76011: 01                       fallthrough
      :                          @5926
 76012: 64 c6                    s1 = a5
 76014: 82 8c f8                 a5 = u64 [a1 + 0xfffffffffffffff8]
 76017: aa 6c 15                 jump @5929 if a5 == s1
      :                          @5927
 76020: 95 aa 01                 a3 = a3 + 0x1
 76023: c8 a5 0b                 a4 = s0 + a3
 76026: 95 88 08                 a1 = a1 + 0x8
 76029: ab 7b ef                 jump @5926 if a4 != a0
      :                          @5928
 76032: 64 37                    a0 = t1
 76034: 82 14                    t2 = u64 [sp]
 76036: 28 30                    jump @5935
      :                          @5929
 76038: 95 a7 ff                 a0 = a3 + 0xffffffffffffffff
 76041: ae 3a 28                 jump @5934 if a3 >=u t1
      :                          @5930
 76044: c9 a3 06                 s1 = t1 - a3
 76047: 82 14                    t2 = u64 [sp]
 76049: 28 0b                    jump @5932
      :                          @5931
 76051: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 76054: 95 88 08                 a1 = a1 + 0x8
 76057: 51 06 1b                 jump @5935 if s1 == 0
      :                          @5932
 76060: 97 7a 03                 a3 = a0 << 0x3
 76063: c8 2a 0a                 a3 = a3 + t0
 76066: 82 8b                    a4 = u64 [a1]
 76068: 82 ac f8                 a5 = u64 [a3 + 0xfffffffffffffff8]
 76071: aa cb ec                 jump @5931 if a4 == a5
      :                          @5933
 76074: 7b ab                    u64 [a3] = a4
 76076: 95 77 01                 a0 = a0 + 0x1
 76079: 28 e4                    jump @5931
      :                          @5934
 76081: 82 14                    t2 = u64 [sp]
 76083: 01                       fallthrough
      :                          @5935
 76084: 33 0c 01                 a5 = 0x1
 76087: 33 0a 02                 a3 = 0x2
 76090: 82 18 28                 a1 = u64 [sp + 0x28]
 76093: 28 0b                    jump @5937
      :                          @5936
 76095: 98 88 01                 a1 = a1 >> 0x1
 76098: ca aa 0a                 a3 = a3 * a3
 76101: 51 08 14                 jump @5939 if a1 == 0
      :                          @5937
 76104: 84 8b 01                 a4 = a1 & 0x1
 76107: cd 0a 0a                 a3 = a3 %u ra
 76110: 51 0b f1                 jump @5936 if a4 == 0
      :                          @5938
 76113: ca ca 0b                 a4 = a3 * a5
 76116: cd 0b 0c                 a5 = a4 %u ra
 76119: 28 e8                    jump @5936
      :                          @5939
 76121: 7b 12 20                 u64 [sp + 0x20] = t0
 76124: 33 02 01                 t0 = 0x1
 76127: ab 2c 65                 jump @5952 if a5 != t0
      :                          @5940
 76130: 97 77 03                 a0 = a0 << 0x3
 76133: 82 1a 20                 a3 = u64 [sp + 0x20]
 76136: c8 7a 08                 a1 = a3 + a0
 76139: 01                       fallthrough
      :                          @5941
 76140: d3 8a 07                 a0 = a3 ^ a1
 76143: 88 77 01                 a0 = a0 <u 0x1
 76146: aa 8a 55                 jump @5953 if a3 == a1
      :                          @5942
 76149: 82 ac                    a5 = u64 [a3]
 76151: 51 0c bb 00              jump @5968 if a5 == 0
      :                          @5943
 76155: 33 0b 01                 a4 = 0x1
 76158: 82 15 28                 s0 = u64 [sp + 0x28]
 76161: ae c5 1b                 jump @5948 if s0 >=u a5
      :                          @5944
 76164: 95 aa 08                 a3 = a3 + 0x8
 76167: 95 b6 ff                 s1 = a4 + 0xffffffffffffffff
 76170: 64 0b                    a4 = ra
 76172: 01                       fallthrough
      :                          @5945
 76173: 64 bc                    a5 = a4
 76175: cd b6 0b                 a4 = s1 %u a4
 76178: 64 c6                    s1 = a5
 76180: 52 0b f9                 jump @5945 if a4 != 0
      :                          @5946
 76183: aa 2c d5                 jump @5941 if a5 == t0
      :                          @5947
 76186: 28 2d                    jump @5953
      :                          @5948
 76188: 82 1b 28                 a4 = u64 [sp + 0x28]
 76191: cb cb 0c                 a5 = a4 /u a5
 76194: 33 0b 01                 a4 = 0x1
 76197: 33 06 02                 s1 = 0x2
 76200: 28 0b                    jump @5950
      :                          @5949
 76202: 98 cc 01                 a5 = a5 >> 0x1
 76205: ca 66 06                 s1 = s1 * s1
 76208: 51 0c d4                 jump @5944 if a5 == 0
      :                          @5950
 76211: 84 c5 01                 s0 = a5 & 0x1
 76214: cd 06 06                 s1 = s1 %u ra
 76217: 51 05 f1                 jump @5949 if s0 == 0
      :                          @5951
 76220: ca b6 0b                 a4 = s1 * a4
 76223: cd 0b 0b                 a4 = a4 %u ra
 76226: 28 e8                    jump @5949
      :                          @5952
 76228: 33 07                    a0 = 0
 76230: 01                       fallthrough
      :                          @5953
 76231: 82 15 20                 s0 = u64 [sp + 0x20]
 76234: 51 03 2a                 jump @5960 if t1 == 0
      :                          @5954
 76237: 56 33 00 00 02 27        jump @5960 if t1 >u 131072
      :                          @5955
 76243: 33 08 b0 02 03           a1 = 0x302b0
 76248: 95 88 00 00 10           a1 = a1 + 0x100000
 76253: 01                       fallthrough
      :                          @5956
 76254: 82 86                    s1 = u64 [a1]
 76256: c9 68 0a                 a3 = a1 - s1
 76259: ab 5a 11                 jump @5960 if a3 != s0
      :                          @5957
 76262: c9 96 0a                 a3 = s1 - a2
 76265: 01                       fallthrough
      :                          @5958
 76266: 82 8b                    a4 = u64 [a1]
 76268: ab 6b f2                 jump @5956 if a4 != s1
      :                          @5959
 76271: 7b 8a                    u64 [a1] = a3
 76273: 33 0c                    a5 = 0
 76275: 01                       fallthrough
      :                          @5960
 76276: 82 18 30                 a1 = u64 [sp + 0x30]
 76279: 51 08 2d                 jump @5967 if a1 == 0
      :                          @5961
 76282: 33 09 00 00 02           a2 = 0x20000
 76287: ac 89 25                 jump @5967 if a2 <u a1
      :                          @5962
 76290: 97 88 03                 a1 = a1 << 0x3
 76293: 33 09 b0 02 03           a2 = 0x302b0
 76298: 95 99 00 00 10           a2 = a2 + 0x100000
 76303: 01                       fallthrough
      :                          @5963
 76304: 82 9a                    a3 = u64 [a2]
 76306: c9 a9 0b                 a4 = a2 - a3
 76309: ab 4b 0f                 jump @5967 if a4 != t2
      :                          @5964
 76312: c9 8a 0b                 a4 = a3 - a1
 76315: 01                       fallthrough
      :                          @5965
 76316: 82 9c                    a5 = u64 [a2]
 76318: ab ac f2                 jump @5963 if a5 != a3
      :                          @5966
 76321: 7b 9b                    u64 [a2] = a4
 76323: 01                       fallthrough
      :                          @5967
 76324: 82 10 58                 ra = u64 [sp + 0x58]
 76327: 82 15 50                 s0 = u64 [sp + 0x50]
 76330: 82 16 48                 s1 = u64 [sp + 0x48]
 76333: 95 11 60                 sp = sp + 0x60
 76336: 32 00                    ret
      :                          @5968
 76338: 00                       trap
      :                          @5969
 76339: 00                       trap
      :                          @5970
 76340: 00                       trap
      :                          @5971
 76341: 98 aa 01                 a3 = a3 >> 0x1
 76344: ca 77 0c                 a5 = a0 * a0
 76347: 51 0a 38                 jump @5974 if a3 == 0
      :                          @5972
 76350: d6 bc 09                 a2 = a5 mulhu a4
 76353: c9 9c 07                 a0 = a5 - a2
 76356: 98 77 01                 a0 = a0 >> 0x1
 76359: c8 97 07                 a0 = a0 + a2
 76362: 98 77 04                 a0 = a0 >> 0x4
 76365: ca 47 07                 a0 = a0 * t2
 76368: 84 a9 01                 a2 = a3 & 0x1
 76371: c9 7c 07                 a0 = a5 - a0
 76374: 51 09 df                 jump @5971 if a2 == 0
      :                          @5973
 76377: ca 75 08                 a1 = s0 * a0
 76380: d6 b8 09                 a2 = a1 mulhu a4
 76383: c9 98 0c                 a5 = a1 - a2
 76386: 98 cc 01                 a5 = a5 >> 0x1
 76389: c8 c9 09                 a2 = a2 + a5
 76392: 98 99 04                 a2 = a2 >> 0x4
 76395: ca 49 09                 a2 = a2 * t2
 76398: c9 98 05                 s0 = a1 - a2
 76401: 28 c4                    jump @5971
      :                          @5974
 76403: 3a 07 e8 00 03           a0 = u64 [0x300e8]
 76408: ca 32 09                 a2 = t0 * t1
 76411: d6 79 07                 a0 = a2 mulhu a0
 76414: c9 79 0a                 a3 = a2 - a0
 76417: 98 aa 01                 a3 = a3 >> 0x1
 76420: c8 a7 07                 a0 = a0 + a3
 76423: 98 77 04                 a0 = a0 >> 0x4
 76426: 96 77 15                 a0 = a0 * 0x15
 76429: c9 79 0a                 a3 = a2 - a0
 76432: 3a 09 f0 00 03           a2 = u64 [0x300f0]
 76437: 95 aa 01                 a3 = a3 + 0x1
 76440: 33 07 01                 a0 = 0x1
 76443: 33 0b 17                 a4 = 0x17
 76446: 28 0b                    jump @5976
      :                          @5975
 76448: 98 aa 01                 a3 = a3 >> 0x1
 76451: ca 88 05                 s0 = a1 * a1
 76454: 51 0a 38                 jump @5978 if a3 == 0
      :                          @5976
 76457: d6 95 0c                 a5 = s0 mulhu a2
 76460: c9 c5 08                 a1 = s0 - a5
 76463: 98 88 01                 a1 = a1 >> 0x1
 76466: c8 c8 08                 a1 = a1 + a5
 76469: 98 88 04                 a1 = a1 >> 0x4
 76472: ca b8 08                 a1 = a1 * a4
 76475: 84 ac 01                 a5 = a3 & 0x1
 76478: c9 85 08                 a1 = s0 - a1
 76481: 51 0c df                 jump @5975 if a5 == 0
      :                          @5977
 76484: ca 87 05                 s0 = a0 * a1
 76487: d6 95 0c                 a5 = s0 mulhu a2
 76490: c9 c5 07                 a0 = s0 - a5
 76493: 98 77 01                 a0 = a0 >> 0x1
 76496: c8 c7 07                 a0 = a0 + a5
 76499: 98 77 04                 a0 = a0 >> 0x4
 76502: ca b7 07                 a0 = a0 * a4
 76505: c9 75 07                 a0 = s0 - a0
 76508: 28 c4                    jump @5975
      :                          @5978
 76510: 82 15 08                 s0 = u64 [sp + 0x8]
 76513: 95 11 10                 sp = sp + 0x10
 76516: 32 00                    ret
      :                          @5979
 76518: 82 ab                    a4 = u64 [a3]
 76520: 95 bc 18                 a5 = a4 + 0x18
 76523: ac bc c8 03              jump @6036 if a5 <u a4
      :                          @5980
 76527: 95 c9 08                 a2 = a5 + 0x8
 76530: d8 c9 06                 s1 = a2 <u a5
 76533: d8 92 09                 a2 = t0 <u a2
 76536: d4 69 09                 a2 = a2 | s1
 76539: 52 09 b8 03              jump @6036 if a2 != 0
      :                          @5981
 76543: c9 c3 06                 s1 = t1 - a5
 76546: c8 26 06                 s1 = s1 + t0
 76549: 84 69 07                 a2 = s1 & 0x7
 76552: c8 9c 0c                 a5 = a5 + a2
 76555: 01                       fallthrough
      :                          @5982
 76556: 82 a5                    s0 = u64 [a3]
 76558: ab b5 d8                 jump @5979 if s0 != a4
      :                          @5983
 76561: 7b ac                    u64 [a3] = a5
 76563: 01                       fallthrough
      :                          @5984
 76564: c9 96 06                 s1 = s1 - a2
 76567: 3a 02 00 01 03           t0 = u64 [0x30100]
 76572: 49 11 18 03              u64 [sp + 24] = 0x3
 76576: 7b 16 20                 u64 [sp + 0x20] = s1
 76579: d6 28 07                 a0 = a1 mulhu t0
 76582: 98 77 0b                 a0 = a0 >> 0xb
 76585: 33 0b 29 08              a4 = 0x829
 76589: ca b7 07                 a0 = a0 * a4
 76592: c9 78 08                 a1 = a1 - a0
 76595: 7b 68                    u64 [s1] = a1
 76597: 49 11 28 01              u64 [sp + 40] = 0x1
 76601: 33 0c 70 02 03           a5 = 0x30270
 76606: 3a 07 70 02 03           a0 = u64 [0x30270]
 76611: 3a 05 f8 00 03           s0 = u64 [0x300f8]
 76616: 97 78 0d                 a1 = a0 << 0xd
 76619: d3 87 07                 a0 = a0 ^ a1
 76622: 98 78 07                 a1 = a0 >> 0x7
 76625: d3 87 07                 a0 = a0 ^ a1
 76628: 97 78 11                 a1 = a0 << 0x11
 76631: d3 87 07                 a0 = a0 ^ a1
 76634: ca 57 09                 a2 = a0 * s0
 76637: 3e 07 70 02 03           u64 [0x30270] = a0
 76642: 82 18 28                 a1 = u64 [sp + 0x28]
 76645: 82 17 18                 a0 = u64 [sp + 0x18]
 76648: d6 29 0a                 a3 = a2 mulhu t0
 76651: 98 aa 0b                 a3 = a3 >> 0xb
 76654: ca ba 0a                 a3 = a3 * a4
 76657: c9 a9 06                 s1 = a2 - a3
 76660: 7b 14 08                 u64 [sp + 0x8] = t2
 76663: ab 78 22                 jump @5987 if a1 != a0
      :                          @5985
 76666: 95 17 18                 a0 = sp + 0x18
 76669: 7b 12 10                 u64 [sp + 0x10] = t0
 76672: 49 01 29 08              u64 [sp + 0] = 0x829
 76676: 50 20 be 03 8b 27 ff     ra = 958, jump @1581
      :                          @5986 [@dyn 479]
 76683: 82 1b                    a4 = u64 [sp]
 76685: 33 0c 70 02 03           a5 = 0x30270
 76690: 82 12 10                 t0 = u64 [sp + 0x10]
 76693: 82 18 28                 a1 = u64 [sp + 0x28]
 76696: 01                       fallthrough
      :                          @5987
 76697: 82 17 20                 a0 = u64 [sp + 0x20]
 76700: 97 89 03                 a2 = a1 << 0x3
 76703: c8 97 07                 a0 = a0 + a2
 76706: 7b 76                    u64 [a0] = s1
 76708: 95 88 01                 a1 = a1 + 0x1
 76711: 7b 18 28                 u64 [sp + 0x28] = a1
 76714: 3a 07 70 02 03           a0 = u64 [0x30270]
 76719: 97 78 0d                 a1 = a0 << 0xd
 76722: d3 87 07                 a0 = a0 ^ a1
 76725: 98 78 07                 a1 = a0 >> 0x7
 76728: d3 87 07                 a0 = a0 ^ a1
 76731: 97 78 11                 a1 = a0 << 0x11
 76734: d3 87 07                 a0 = a0 ^ a1
 76737: ca 57 09                 a2 = a0 * s0
 76740: 3e 07 70 02 03           u64 [0x30270] = a0
 76745: 82 18 28                 a1 = u64 [sp + 0x28]
 76748: 82 17 18                 a0 = u64 [sp + 0x18]
 76751: d6 29 0a                 a3 = a2 mulhu t0
 76754: 98 aa 0b                 a3 = a3 >> 0xb
 76757: ca ba 0a                 a3 = a3 * a4
 76760: c9 a9 05                 s0 = a2 - a3
 76763: ab 78 11                 jump @5990 if a1 != a0
      :                          @5988
 76766: 95 17 18                 a0 = sp + 0x18
 76769: 50 20 c0 03 2e 27 ff     ra = 960, jump @1581
      :                          @5989 [@dyn 480]
 76776: 82 18 28                 a1 = u64 [sp + 0x28]
 76779: 01                       fallthrough
      :                          @5990
 76780: 82 12 20                 t0 = u64 [sp + 0x20]
 76783: 97 80 03                 ra = a1 << 0x3
 76786: c8 02 07                 a0 = t0 + ra
 76789: 7b 75                    u64 [a0] = s0
 76791: 95 84 01                 t2 = a1 + 0x1
 76794: 7b 14 28                 u64 [sp + 0x28] = t2
 76797: 33 07 b0 02 03           a0 = 0x302b0
 76802: 33 08 b0 02 03           a1 = 0x302b0
 76807: 33 03 00 00 10           t1 = 0x100000
 76812: c8 38 0b                 a4 = a1 + t1
 76815: 7b 12 10                 u64 [sp + 0x10] = t0
 76818: 01                       fallthrough
      :                          @5991
 76819: 82 bc                    a5 = u64 [a4]
 76821: 95 c6 50                 s1 = a5 + 0x50
 76824: ac c6 9c 02              jump @6037 if s1 <u a5
      :                          @5992
 76828: 95 6a 08                 a3 = s1 + 0x8
 76831: d8 6a 05                 s0 = a3 <u s1
 76834: d8 a3 0a                 a3 = t1 <u a3
 76837: d4 5a 0a                 a3 = a3 | s0
 76840: 52 0a 8c 02              jump @6037 if a3 != 0
      :                          @5993
 76844: c9 68 05                 s0 = a1 - s1
 76847: c8 35 05                 s0 = s0 + t1
 76850: 84 5a 07                 a3 = s0 & 0x7
 76853: c8 a6 06                 s1 = s1 + a3
 76856: 01                       fallthrough
      :                          @5994
 76857: 82 b9                    a2 = u64 [a4]
 76859: ab c9 d8                 jump @5991 if a2 != a5
      :                          @5995
 76862: 7b b6                    u64 [a4] = s1
 76864: 01                       fallthrough
      :                          @5996
 76865: c9 a5 03                 t1 = s0 - a3
 76868: 51 04 fa 01              jump @6027 if t2 == 0
      :                          @5997
 76872: 33 0a                    a3 = 0
 76874: 97 44 03                 t2 = t2 << 0x3
 76877: c8 24 04                 t2 = t2 + t0
 76880: 3a 08 00 01 03           a1 = u64 [0x30100]
 76885: 95 07 08                 a0 = ra + 0x8
 76888: 33 09 29 08              a2 = 0x829
 76892: 64 2b                    a4 = t0
 76894: 01                       fallthrough
      :                          @5998
 76895: 82 bc                    a5 = u64 [a4]
 76897: 95 bb 08                 a4 = a4 + 0x8
 76900: c8 ca 0a                 a3 = a3 + a5
 76903: d6 8a 0c                 a5 = a3 mulhu a1
 76906: 98 cc 0b                 a5 = a5 >> 0xb
 76909: ca 9c 0c                 a5 = a5 * a2
 76912: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
 76915: c9 ca 0a                 a3 = a3 - a5
 76918: 52 07 e9                 jump @5998 if a0 != 0
      :                          @5999
 76921: 33 00                    ra = 0
 76923: 33 08                    a1 = 0
 76925: 49 03 01                 u64 [t1 + 0] = 0x1
 76928: 3a 0c 00 01 03           a5 = u64 [0x30100]
 76933: 7b 3a 08                 u64 [t1 + 0x8] = a3
 76936: 33 06 29 08              s1 = 0x829
 76940: 64 27                    a0 = t0
 76942: 28 21                    jump @6001
      :                          @6000
 76944: 82 79                    a2 = u64 [a0]
 76946: 95 7a 08                 a3 = a0 + 0x8
 76949: 95 88 01                 a1 = a1 + 0x1
 76952: ca 95 07                 a0 = s0 * a2
 76955: c8 07 07                 a0 = a0 + ra
 76958: d6 c7 09                 a2 = a0 mulhu a5
 76961: 98 99 0b                 a2 = a2 >> 0xb
 76964: ca 69 09                 a2 = a2 * s1
 76967: c9 97 00                 ra = a0 - a2
 76970: 64 a7                    a0 = a3
 76972: aa 4a 3f                 jump @6006 if a3 == t2
      :                          @6001
 76975: 33 05 01                 s0 = 0x1
 76978: 51 08 de                 jump @6000 if a1 == 0
      :                          @6002
 76981: 33 05 01                 s0 = 0x1
 76984: 33 09 02                 a2 = 0x2
 76987: 64 8a                    a3 = a1
 76989: 28 0b                    jump @6004
      :                          @6003
 76991: 98 aa 01                 a3 = a3 >> 0x1
 76994: ca 99 09                 a2 = a2 * a2
 76997: 51 0a cb                 jump @6000 if a3 == 0
      :                          @6004
 77000: d6 c9 0b                 a4 = a2 mulhu a5
 77003: 98 bb 0b                 a4 = a4 >> 0xb
 77006: ca 6b 0b                 a4 = a4 * s1
 77009: 84 a2 01                 t0 = a3 & 0x1
 77012: c9 b9 09                 a2 = a2 - a4
 77015: 51 02 e8                 jump @6003 if t0 == 0
      :                          @6005
 77018: ca 95 0b                 a4 = s0 * a2
 77021: d6 cb 05                 s0 = a4 mulhu a5
 77024: 98 55 0b                 s0 = s0 >> 0xb
 77027: ca 65 05                 s0 = s0 * s1
 77030: c9 5b 05                 s0 = a4 - s0
 77033: 28 d6                    jump @6003
      :                          @6006
 77035: 33 02                    t0 = 0
 77037: 33 0c                    a5 = 0
 77039: 49 13 10 02              u64 [t1 + 16] = 0x2
 77043: 3a 06 00 01 03           s1 = u64 [0x30100]
 77048: 7b 30 18                 u64 [t1 + 0x18] = ra
 77051: 33 0b 29 08              a4 = 0x829
 77055: 82 10 10                 ra = u64 [sp + 0x10]
 77058: 28 21                    jump @6008
      :                          @6007
 77060: 82 07                    a0 = u64 [ra]
 77062: 95 08 08                 a1 = ra + 0x8
 77065: 95 cc 01                 a5 = a5 + 0x1
 77068: ca 75 07                 a0 = s0 * a0
 77071: c8 27 07                 a0 = a0 + t0
 77074: d6 67 09                 a2 = a0 mulhu s1
 77077: 98 99 0b                 a2 = a2 >> 0xb
 77080: ca b9 09                 a2 = a2 * a4
 77083: c9 97 02                 t0 = a0 - a2
 77086: 64 80                    ra = a1
 77088: aa 48 3c                 jump @6013 if a1 == t2
      :                          @6008
 77091: 33 05 01                 s0 = 0x1
 77094: 51 0c de                 jump @6007 if a5 == 0
      :                          @6009
 77097: 33 09 03                 a2 = 0x3
 77100: 64 c8                    a1 = a5
 77102: 28 0b                    jump @6011
      :                          @6010
 77104: 98 88 01                 a1 = a1 >> 0x1
 77107: ca 99 09                 a2 = a2 * a2
 77110: 51 08 ce                 jump @6007 if a1 == 0
      :                          @6011
 77113: d6 69 0a                 a3 = a2 mulhu s1
 77116: 98 aa 0b                 a3 = a3 >> 0xb
 77119: ca ba 0a                 a3 = a3 * a4
 77122: 84 87 01                 a0 = a1 & 0x1
 77125: c9 a9 09                 a2 = a2 - a3
 77128: 51 07 e8                 jump @6010 if a0 == 0
      :                          @6012
 77131: ca 95 07                 a0 = s0 * a2
 77134: d6 67 0a                 a3 = a0 mulhu s1
 77137: 98 aa 0b                 a3 = a3 >> 0xb
 77140: ca ba 0a                 a3 = a3 * a4
 77143: c9 a7 05                 s0 = a0 - a3
 77146: 28 d6                    jump @6010
      :                          @6013
 77148: 33 00                    ra = 0
 77150: 33 0c                    a5 = 0
 77152: 49 13 20 03              u64 [t1 + 32] = 0x3
 77156: 3a 06 00 01 03           s1 = u64 [0x30100]
 77161: 7b 32 28                 u64 [t1 + 0x28] = t0
 77164: 33 0a 29 08              a3 = 0x829
 77168: 82 12 10                 t0 = u64 [sp + 0x10]
 77171: 28 21                    jump @6015
      :                          @6014
 77173: 82 27                    a0 = u64 [t0]
 77175: 95 28 08                 a1 = t0 + 0x8
 77178: 95 cc 01                 a5 = a5 + 0x1
 77181: ca 75 07                 a0 = s0 * a0
 77184: c8 07 07                 a0 = a0 + ra
 77187: d6 67 09                 a2 = a0 mulhu s1
 77190: 98 99 0b                 a2 = a2 >> 0xb
 77193: ca a9 09                 a2 = a2 * a3
 77196: c9 97 00                 ra = a0 - a2
 77199: 64 82                    t0 = a1
 77201: aa 48 3c                 jump @6020 if a1 == t2
      :                          @6015
 77204: 33 05 01                 s0 = 0x1
 77207: 51 0c de                 jump @6014 if a5 == 0
      :                          @6016
 77210: 33 09 04                 a2 = 0x4
 77213: 64 c8                    a1 = a5
 77215: 28 0b                    jump @6018
      :                          @6017
 77217: 98 88 01                 a1 = a1 >> 0x1
 77220: ca 99 09                 a2 = a2 * a2
 77223: 51 08 ce                 jump @6014 if a1 == 0
      :                          @6018
 77226: d6 69 0b                 a4 = a2 mulhu s1
 77229: 98 bb 0b                 a4 = a4 >> 0xb
 77232: ca ab 0b                 a4 = a4 * a3
 77235: 84 87 01                 a0 = a1 & 0x1
 77238: c9 b9 09                 a2 = a2 - a4
 77241: 51 07 e8                 jump @6017 if a0 == 0
      :                          @6019
 77244: ca 95 07                 a0 = s0 * a2
 77247: d6 67 0b                 a4 = a0 mulhu s1
 77250: 98 bb 0b                 a4 = a4 >> 0xb
 77253: ca ab 0b                 a4 = a4 * a3
 77256: c9 b7 05                 s0 = a0 - a4
 77259: 28 d6                    jump @6017
      :                          @6020
 77261: 33 02                    t0 = 0
 77263: 33 0c                    a5 = 0
 77265: 49 13 30 04              u64 [t1 + 48] = 0x4
 77269: 3a 06 00 01 03           s1 = u64 [0x30100]
 77274: 7b 30 38                 u64 [t1 + 0x38] = ra
 77277: 33 0b 29 08              a4 = 0x829
 77281: 82 10 10                 ra = u64 [sp + 0x10]
 77284: 28 21                    jump @6022
      :                          @6021
 77286: 82 07                    a0 = u64 [ra]
 77288: 95 08 08                 a1 = ra + 0x8
 77291: 95 cc 01                 a5 = a5 + 0x1
 77294: ca 75 07                 a0 = s0 * a0
 77297: c8 27 07                 a0 = a0 + t0
 77300: d6 67 09                 a2 = a0 mulhu s1
 77303: 98 99 0b                 a2 = a2 >> 0xb
 77306: ca b9 09                 a2 = a2 * a4
 77309: c9 97 02                 t0 = a0 - a2
 77312: 64 80                    ra = a1
 77314: aa 48 5a                 jump @6028 if a1 == t2
      :                          @6022
 77317: 33 05 01                 s0 = 0x1
 77320: 51 0c de                 jump @6021 if a5 == 0
      :                          @6023
 77323: 33 09 05                 a2 = 0x5
 77326: 64 c8                    a1 = a5
 77328: 28 0b                    jump @6025
      :                          @6024
 77330: 98 88 01                 a1 = a1 >> 0x1
 77333: ca 99 09                 a2 = a2 * a2
 77336: 51 08 ce                 jump @6021 if a1 == 0
      :                          @6025
 77339: d6 69 0a                 a3 = a2 mulhu s1
 77342: 98 aa 0b                 a3 = a3 >> 0xb
 77345: ca ba 0a                 a3 = a3 * a4
 77348: 84 87 01                 a0 = a1 & 0x1
 77351: c9 a9 09                 a2 = a2 - a3
 77354: 51 07 e8                 jump @6024 if a0 == 0
      :                          @6026
 77357: ca 95 07                 a0 = s0 * a2
 77360: d6 67 0a                 a3 = a0 mulhu s1
 77363: 98 aa 0b                 a3 = a3 >> 0xb
 77366: ca ba 0a                 a3 = a3 * a4
 77369: c9 a7 05                 s0 = a0 - a3
 77372: 28 d6                    jump @6024
      :                          @6027
 77374: 33 02                    t0 = 0
 77376: 49 03 01                 u64 [t1 + 0] = 0x1
 77379: 49 13 10 02              u64 [t1 + 16] = 0x2
 77383: 49 13 20 03              u64 [t1 + 32] = 0x3
 77387: 49 13 30 04              u64 [t1 + 48] = 0x4
 77391: 49 13 08                 u64 [t1 + 8] = 0
 77394: 49 13 18                 u64 [t1 + 24] = 0
 77397: 49 13 28                 u64 [t1 + 40] = 0
 77400: 49 13 38                 u64 [t1 + 56] = 0
 77403: 01                       fallthrough
      :                          @6028
 77404: 33 08 05                 a1 = 0x5
 77407: 7b 32 48                 u64 [t1 + 0x48] = t0
 77410: 82 17 18                 a0 = u64 [sp + 0x18]
 77413: 7b 38 40                 u64 [t1 + 0x40] = a1
 77416: 82 19 08                 a2 = u64 [sp + 0x8]
 77419: 7b 98                    u64 [a2] = a1
 77421: 7b 93 08                 u64 [a2 + 0x8] = t1
 77424: 7b 98 10                 u64 [a2 + 0x10] = a1
 77427: 82 16 10                 s1 = u64 [sp + 0x10]
 77430: 51 07 2f                 jump @6035 if a0 == 0
      :                          @6029
 77433: 33 08 00 00 02           a1 = 0x20000
 77438: ac 78 27                 jump @6035 if a1 <u a0
      :                          @6030
 77441: 97 77 03                 a0 = a0 << 0x3
 77444: 33 08 b0 02 03           a1 = 0x302b0
 77449: 95 88 00 00 10           a1 = a1 + 0x100000
 77454: 01                       fallthrough
      :                          @6031
 77455: 82 89                    a2 = u64 [a1]
 77457: c9 98 0a                 a3 = a1 - a2
 77460: ab 6a 11                 jump @6035 if a3 != s1
      :                          @6032
 77463: c9 79 0a                 a3 = a2 - a0
 77466: 01                       fallthrough
      :                          @6033
 77467: 82 8b                    a4 = u64 [a1]
 77469: ab 9b f2                 jump @6031 if a4 != a2
      :                          @6034
 77472: 7b 8a                    u64 [a1] = a3
 77474: 33 0c                    a5 = 0
 77476: 01                       fallthrough
      :                          @6035
 77477: 82 10 40                 ra = u64 [sp + 0x40]
 77480: 82 15 38                 s0 = u64 [sp + 0x38]
 77483: 82 16 30                 s1 = u64 [sp + 0x30]
 77486: 95 11 48                 sp = sp + 0x48
 77489: 32 00                    ret
      :                          @6036
 77491: 00                       trap
      :                          @6037
 77492: 00                       trap
      :                          @6038
 77493: 64 8a                    a3 = a1
 77495: 64 9b                    a4 = a2
 77497: 01                       fallthrough
      :                          @6039
 77498: 64 ac                    a5 = a3
 77500: ac a4 57                 jump @6054 if t2 <u a3
      :                          @6040
 77503: ae 4c 54                 jump @6054 if a5 >=u t2
      :                          @6041
 77506: 95 ca 01                 a3 = a5 + 0x1
 77509: ac 3c f5                 jump @6039 if a5 <u t1
      :                          @6042
 77512: 84 c8 01                 a1 = a5 & 0x1
 77515: 51 08 23                 jump @6049 if a1 == 0
      :                          @6043
 77518: ac 2c 19                 jump @6048 if a5 <u t0
      :                          @6044
 77521: 33 08 03                 a1 = 0x3
 77524: 01                       fallthrough
      :                          @6045
 77525: 51 08 5e                 jump @6057 if a1 == 0
      :                          @6046
 77528: cd 8c 09                 a2 = a5 %u a1
 77531: 51 09 df                 jump @6039 if a2 == 0
      :                          @6047
 77534: 95 88 02                 a1 = a1 + 0x2
 77537: ca 88 09                 a2 = a1 * a1
 77540: ae 9c f1                 jump @6045 if a5 >=u a2
      :                          @6048
 77543: 64 a8                    a1 = a3
 77545: 33 09 01                 a2 = 0x1
 77548: 28 16                    jump @6052
      :                          @6049
 77550: 33 08 03                 a1 = 0x3
 77553: ab 3c c9                 jump @6039 if a5 != t1
      :                          @6050
 77556: 33 09 01                 a2 = 0x1
 77559: 28 0b                    jump @6052
      :                          @6051
 77561: 98 cc 01                 a5 = a5 >> 0x1
 77564: ca aa 0b                 a4 = a3 * a3
 77567: 51 0c b6                 jump @6038 if a5 == 0
      :                          @6052
 77570: 84 c5 01                 s0 = a5 & 0x1
 77573: cd 7b 0a                 a3 = a4 %u a0
 77576: 51 05 f1                 jump @6051 if s0 == 0
      :                          @6053
 77579: ca 9a 09                 a2 = a3 * a2
 77582: cd 79 09                 a2 = a2 %u a0
 77585: 28 e8                    jump @6051
      :                          @6054
 77587: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 77590: 64 79                    a2 = a0
 77592: 01                       fallthrough
      :                          @6055
 77593: 64 98                    a1 = a2
 77595: cd 9b 09                 a2 = a4 %u a2
 77598: 64 8b                    a4 = a1
 77600: 52 09 f9                 jump @6055 if a2 != 0
      :                          @6056
 77603: 88 89 02                 a2 = a1 <u 0x2
 77606: d8 78 07                 a0 = a1 <u a0
 77609: e0 97 07                 a0 = a0 & ~a2
 77612: 82 15                    s0 = u64 [sp]
 77614: 95 11 08                 sp = sp + 0x8
 77617: 32 00                    ret
      :                          @6057
 77619: 00                       trap
      :                          @6058
 77620: 95 11 68 ff              sp = sp + 0xffffffffffffff68
 77624: 7b 10 90 00              u64 [sp + 0x90] = ra
 77628: 7b 15 88 00              u64 [sp + 0x88] = s0
 77632: 49 21 80 00 02           u64 [sp + 128] = 0x2
 77637: 7b 17                    u64 [sp] = a0
 77639: 82 76 10                 s1 = u64 [a0 + 0x10]
 77642: 51 06 97 00              jump @6071 if s1 == 0
      :                          @6059
 77646: 98 67 3c                 a0 = s1 >> 0x3c
 77649: 52 07 28 03              jump @6144 if a0 != 0
      :                          @6060
 77653: 88 72 01                 t0 = a0 <u 0x1
 77656: 97 67 03                 a0 = s1 << 0x3
 77659: 97 22 03                 t0 = t0 << 0x3
 77662: 33 04 b0 02 03           t2 = 0x302b0
 77667: 33 03 00 00 10           t1 = 0x100000
 77672: c8 34 00                 ra = t2 + t1
 77675: 01                       fallthrough
      :                          @6061
 77676: 82 05                    s0 = u64 [ra]
 77678: c8 75 0c                 a5 = s0 + a0
 77681: ac 5c 07 03              jump @6143 if a5 <u s0
      :                          @6062
 77685: c8 2c 08                 a1 = a5 + t0
 77688: d8 c8 0a                 a3 = a1 <u a5
 77691: d8 83 08                 a1 = t1 <u a1
 77694: d4 a8 08                 a1 = a1 | a3
 77697: 52 08 f7 02              jump @6143 if a1 != 0
      :                          @6063
 77701: c9 c4 08                 a1 = t2 - a5
 77704: c8 38 08                 a1 = a1 + t1
 77707: 84 8a 07                 a3 = a1 & 0x7
 77710: c8 ac 0c                 a5 = a5 + a3
 77713: 01                       fallthrough
      :                          @6064
 77714: 82 09                    a2 = u64 [ra]
 77716: ab 59 d8                 jump @6061 if a2 != s0
      :                          @6065
 77719: 7b 0c                    u64 [ra] = a5
 77721: 33 0b                    a4 = 0
 77723: 01                       fallthrough
      :                          @6066
 77724: c9 a8 07                 a0 = a1 - a3
 77727: 33 08 01                 a1 = 0x1
 77730: 64 79                    a2 = a0
 77732: 53 16 02 2f              jump @6070 if s1 <u 2
      :                          @6067
 77736: 95 68 ff                 a1 = s1 + 0xffffffffffffffff
 77739: 14 0a ff ff ff ff ff ff ff 7f a3 = 0x7fffffffffffffff
 77749: 64 79                    a2 = a0
 77751: 01                       fallthrough
      :                          @6068
 77752: 7b 9a                    u64 [a2] = a3
 77754: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 77757: 95 99 08                 a2 = a2 + 0x8
 77760: 52 08 f8                 jump @6068 if a1 != 0
      :                          @6069
 77763: 64 68                    a1 = s1
 77765: 14 0a ff ff ff ff ff ff ff 7f a3 = 0x7fffffffffffffff
 77775: 7b 9a                    u64 [a2] = a3
 77777: 28 16                    jump @6072
      :                          @6070
 77779: 14 0a ff ff ff ff ff ff ff 7f a3 = 0x7fffffffffffffff
 77789: 7b 9a                    u64 [a2] = a3
 77791: 28 08                    jump @6072
      :                          @6071
 77793: 33 08                    a1 = 0
 77795: 33 07 08                 a0 = 0x8
 77798: 01                       fallthrough
      :                          @6072
 77799: 9b 69 01                 a2 = 0x1 << s1
 77802: 7b 16 68                 u64 [sp + 0x68] = s1
 77805: 7b 17 70                 u64 [sp + 0x70] = a0
 77808: 7b 18 78                 u64 [sp + 0x78] = a1
 77811: 95 17 50                 a0 = sp + 0x50
 77814: 95 18 68                 a1 = sp + 0x68
 77817: 7b 19 08                 u64 [sp + 0x8] = a2
 77820: 50 20 c2 03 20 2e ff     ra = 962, jump @1783
      :                          @6073 [@dyn 481]
 77827: 82 18 60                 a1 = u64 [sp + 0x60]
 77830: 7b 18 28                 u64 [sp + 0x28] = a1
 77833: 53 18 02 6c 02           jump @6140 if a1 <u 2
      :                          @6074
 77838: 82 18 58                 a1 = u64 [sp + 0x58]
 77841: 82 87 28                 a0 = u64 [a1 + 0x28]
 77844: 51 07 63 02              jump @6142 if a0 == 0
      :                          @6075
 77848: 7b 18 20                 u64 [sp + 0x20] = a1
 77851: 82 87 20                 a0 = u64 [a1 + 0x20]
 77854: 84 68 3f                 a1 = s1 & 0x3f
 77857: 49 07                    u64 [a0 + 0] = 0
 77859: 51 08 2f 01              jump @6105 if a1 == 0
      :                          @6076
 77863: 82 17                    a0 = u64 [sp]
 77865: 82 77 08                 a0 = u64 [a0 + 0x8]
 77868: 33 08 02                 a1 = 0x2
 77871: 82 19 08                 a2 = u64 [sp + 0x8]
 77874: e4 89 08                 a1 = maxu(a2, a1)
 77877: 7b 18 10                 u64 [sp + 0x10] = a1
 77880: 95 77 10                 a0 = a0 + 0x10
 77883: 7b 17 18                 u64 [sp + 0x18] = a0
 77886: 33 0c 01                 a5 = 0x1
 77889: 28 0c                    jump @6078
      :                          @6077
 77891: 95 cc 01                 a5 = a5 + 0x1
 77894: 82 17 10                 a0 = u64 [sp + 0x10]
 77897: aa 7c 09 01              jump @6105 if a5 == a0
      :                          @6078
 77901: 84 c8 01                 a1 = a5 & 0x1
 77904: 51 08 f3                 jump @6077 if a1 == 0
      :                          @6079
 77907: 82 17 28                 a0 = u64 [sp + 0x28]
 77910: ae 7c ca 00              jump @6097 if a5 >=u a0
      :                          @6080
 77914: 33 07                    a0 = 0
 77916: 96 c8 18                 a1 = a5 * 0x18
 77919: 82 19 20                 a2 = u64 [sp + 0x20]
 77922: c8 98 08                 a1 = a1 + a2
 77925: 95 89 10                 a2 = a1 + 0x10
 77928: 7b 19 40                 u64 [sp + 0x40] = a2
 77931: 95 88 08                 a1 = a1 + 0x8
 77934: 7b 18 38                 u64 [sp + 0x38] = a1
 77937: 7b 1c 30                 u64 [sp + 0x30] = a5
 77940: 28 0b                    jump @6082
      :                          @6081
 77942: 95 77 01                 a0 = a0 + 0x1
 77945: 82 1c 30                 a5 = u64 [sp + 0x30]
 77948: aa 67 c7                 jump @6077 if a0 == s1
      :                          @6082
 77951: 9b 7a 01                 a3 = 0x1 << a0
 77954: d2 ca 08                 a1 = a3 & a5
 77957: 51 08 f1                 jump @6081 if a1 == 0
      :                          @6083
 77960: 82 18 30                 a1 = u64 [sp + 0x30]
 77963: d3 8a 0a                 a3 = a3 ^ a1
 77966: 51 0a e8                 jump @6081 if a3 == 0
      :                          @6084
 77969: 82 18 28                 a1 = u64 [sp + 0x28]
 77972: ae 8a 76                 jump @6093 if a3 >=u a1
      :                          @6085
 77975: 33 03                    t1 = 0
 77977: 33 0b                    a4 = 0
 77979: 96 a8 18                 a1 = a3 * 0x18
 77982: 82 19 20                 a2 = u64 [sp + 0x20]
 77985: c8 98 08                 a1 = a1 + a2
 77988: 95 89 10                 a2 = a1 + 0x10
 77991: 7b 19 48                 u64 [sp + 0x48] = a2
 77994: 95 80 08                 ra = a1 + 0x8
 77997: 82 15 18                 s0 = u64 [sp + 0x18]
 78000: 28 37                    jump @6088
      :                          @6086
 78002: 82 18 38                 a1 = u64 [sp + 0x38]
 78005: 82 8c                    a5 = u64 [a1]
 78007: 64 64                    t2 = s1
 78009: 82 06                    s1 = u64 [ra]
 78011: 97 79 03                 a2 = a0 << 0x3
 78014: 82 52 f8                 t0 = u64 [s0 + 0xfffffffffffffff8]
 78017: c8 9c 0c                 a5 = a5 + a2
 78020: c8 36 06                 s1 = s1 + t1
 78023: 82 66                    s1 = u64 [s1]
 78025: c8 29 09                 a2 = a2 + t0
 78028: 82 99                    a2 = u64 [a2]
 78030: 82 c8                    a1 = u64 [a5]
 78032: c8 69 09                 a2 = a2 + s1
 78035: 64 46                    s1 = t2
 78037: e6 98 08                 a1 = minu(a1, a2)
 78040: 7b c8                    u64 [a5] = a1
 78042: 01                       fallthrough
      :                          @6087
 78043: 95 bb 01                 a4 = a4 + 0x1
 78046: 95 55 18                 s0 = s0 + 0x18
 78049: 95 33 08                 t1 = t1 + 0x8
 78052: aa b6 92                 jump @6081 if s1 == a4
      :                          @6088
 78055: d0 ba 0c                 a5 = a3 >> a4
 78058: 84 cc 01                 a5 = a5 & 0x1
 78061: 51 0c ee                 jump @6087 if a5 == 0
      :                          @6089
 78064: 82 18 40                 a1 = u64 [sp + 0x40]
 78067: 82 8c                    a5 = u64 [a1]
 78069: ae c7 7d 01              jump @6137 if a0 >=u a5
      :                          @6090
 78073: 82 18 48                 a1 = u64 [sp + 0x48]
 78076: 82 8c                    a5 = u64 [a1]
 78078: ae cb 73 01              jump @6136 if a4 >=u a5
      :                          @6091
 78082: 82 5c                    a5 = u64 [s0]
 78084: ac c7 ae                 jump @6086 if a0 <u a5
      :                          @6092
 78087: 28 6b 01                 jump @6137
      :                          @6093
 78090: 33 08                    a1 = 0
 78092: 01                       fallthrough
      :                          @6094
 78093: d0 8a 0b                 a4 = a3 >> a1
 78096: 84 bb 01                 a4 = a4 & 0x1
 78099: 52 0b 69 01              jump @6147 if a4 != 0
      :                          @6095
 78103: 95 88 01                 a1 = a1 + 0x1
 78106: ab 86 f3                 jump @6094 if s1 != a1
      :                          @6096
 78109: 28 59 ff                 jump @6081
      :                          @6097
 78112: 33 08                    a1 = 0
 78114: 28 09                    jump @6099
      :                          @6098
 78116: 95 88 01                 a1 = a1 + 0x1
 78119: aa 68 1c ff              jump @6077 if a1 == s1
      :                          @6099
 78123: 33 07 01                 a0 = 0x1
 78126: cf 87 0a                 a3 = a0 << a1
 78129: d2 ca 09                 a2 = a3 & a5
 78132: 51 09 f0                 jump @6098 if a2 == 0
      :                          @6100
 78135: aa ca ed                 jump @6098 if a3 == a5
      :                          @6101
 78138: 33 09                    a2 = 0
 78140: d3 ca 0a                 a3 = a3 ^ a5
 78143: 01                       fallthrough
      :                          @6102
 78144: d0 9a 0b                 a4 = a3 >> a2
 78147: 84 bb 01                 a4 = a4 & 0x1
 78150: 52 0b 35 01              jump @6146 if a4 != 0
      :                          @6103
 78154: 95 99 01                 a2 = a2 + 0x1
 78157: ab 96 f3                 jump @6102 if s1 != a2
      :                          @6104
 78160: 28 d4                    jump @6098
      :                          @6105
 78162: 51 06 28 01              jump @6145 if s1 == 0
      :                          @6106
 78166: 82 17 08                 a0 = u64 [sp + 0x8]
 78169: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 78172: 82 10 20                 ra = u64 [sp + 0x20]
 78175: 82 18 28                 a1 = u64 [sp + 0x28]
 78178: ae 87 14 01              jump @6141 if a0 >=u a1
      :                          @6107
 78182: 96 77 18                 a0 = a0 * 0x18
 78185: c8 07 07                 a0 = a0 + ra
 78188: 82 79 10                 a2 = u64 [a0 + 0x10]
 78191: 51 09 04 01              jump @6138 if a2 == 0
      :                          @6108
 78195: 82 18                    a1 = u64 [sp]
 78197: 82 88 08                 a1 = u64 [a1 + 0x8]
 78200: 82 8a 10                 a3 = u64 [a1 + 0x10]
 78203: 51 0a f8 00              jump @6138 if a3 == 0
      :                          @6109
 78207: 82 7a 08                 a3 = u64 [a0 + 0x8]
 78210: 82 87 08                 a0 = u64 [a1 + 0x8]
 78213: 82 ac                    a5 = u64 [a3]
 78215: 82 77                    a0 = u64 [a0]
 78217: c8 c7 07                 a0 = a0 + a5
 78220: 53 16 02 54              jump @6117 if s1 <u 2
      :                          @6110
 78224: 53 19 02 e4 00           jump @6139 if a2 <u 2
      :                          @6111
 78229: 82 8b 28                 a4 = u64 [a1 + 0x28]
 78232: 51 0b db 00              jump @6138 if a4 == 0
      :                          @6112
 78236: 82 8b 20                 a4 = u64 [a1 + 0x20]
 78239: 82 ac 08                 a5 = u64 [a3 + 0x8]
 78242: 82 bb                    a4 = u64 [a4]
 78244: c8 cb 0b                 a4 = a4 + a5
 78247: 95 66 fe                 s1 = s1 + 0xfffffffffffffffe
 78250: e6 b7 07                 a0 = minu(a0, a4)
 78253: 51 06 33                 jump @6117 if s1 == 0
      :                          @6113
 78256: 95 88 40                 a1 = a1 + 0x40
 78259: 95 aa 10                 a3 = a3 + 0x10
 78262: 95 9b fe                 a4 = a2 + 0xfffffffffffffffe
 78265: 01                       fallthrough
      :                          @6114
 78266: 51 0b ba 00              jump @6139 if a4 == 0
      :                          @6115
 78270: 82 8c                    a5 = u64 [a1]
 78272: 51 0c b3 00              jump @6138 if a5 == 0
      :                          @6116
 78276: 82 8c f8                 a5 = u64 [a1 + 0xfffffffffffffff8]
 78279: 82 a5                    s0 = u64 [a3]
 78281: 82 cc                    a5 = u64 [a5]
 78283: c8 5c 0c                 a5 = a5 + s0
 78286: e6 c7 07                 a0 = minu(a0, a5)
 78289: 95 88 18                 a1 = a1 + 0x18
 78292: 95 aa 08                 a3 = a3 + 0x8
 78295: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 78298: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 78301: 52 06 dd                 jump @6114 if s1 != 0
      :                          @6117
 78304: 33 08                    a1 = 0
 78306: 33 03 18                 t1 = 0x18
 78309: 33 0a b0 02 03           a3 = 0x302b0
 78314: 95 ab 00 00 10           a4 = a3 + 0x100000
 78319: 33 02 00 00 02           t0 = 0x20000
 78324: 28 0b                    jump @6119
      :                          @6118
 78326: 95 88 01                 a1 = a1 + 0x1
 78329: 82 19 28                 a2 = u64 [sp + 0x28]
 78332: aa 98 33                 jump @6128 if a1 == a2
      :                          @6119
 78335: ca 38 0c                 a5 = a1 * t1
 78338: c8 0c 0c                 a5 = a5 + ra
 78341: 82 c6                    s1 = u64 [a5]
 78343: 51 06 ef                 jump @6118 if s1 == 0
      :                          @6120
 78346: ac 62 ec                 jump @6118 if t0 <u s1
      :                          @6121
 78349: 82 cc 08                 a5 = u64 [a5 + 0x8]
 78352: 97 64 03                 t2 = s1 << 0x3
 78355: 01                       fallthrough
      :                          @6122
 78356: 82 b5                    s0 = u64 [a4]
 78358: c9 5b 0a                 a3 = a4 - s0
 78361: ab ca dd                 jump @6118 if a3 != a5
      :                          @6123
 78364: c9 45 0a                 a3 = s0 - t2
 78367: 01                       fallthrough
      :                          @6124
 78368: 82 b9                    a2 = u64 [a4]
 78370: ab 59 f2                 jump @6122 if a2 != s0
      :                          @6125
 78373: 7b ba                    u64 [a4] = a3
 78375: 33 06                    s1 = 0
 78377: 01                       fallthrough
      :                          @6126
 78378: ab 59 ea                 jump @6122 if a2 != s0
      :                          @6127
 78381: 28 c9                    jump @6118
      :                          @6128
 78383: 82 18 50                 a1 = u64 [sp + 0x50]
 78386: 51 08 2d                 jump @6135 if a1 == 0
      :                          @6129
 78389: 33 09 aa aa 00           a2 = 0xaaaa
 78394: ac 89 25                 jump @6135 if a2 <u a1
      :                          @6130
 78397: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 78400: 33 09 b0 02 03           a2 = 0x302b0
 78405: 95 99 00 00 10           a2 = a2 + 0x100000
 78410: 01                       fallthrough
      :                          @6131
 78411: 82 9a                    a3 = u64 [a2]
 78413: c9 a9 0b                 a4 = a2 - a3
 78416: ab 0b 0f                 jump @6135 if a4 != ra
      :                          @6132
 78419: c8 8a 0b                 a4 = a3 + a1
 78422: 01                       fallthrough
      :                          @6133
 78423: 82 9c                    a5 = u64 [a2]
 78425: ab ac f2                 jump @6131 if a5 != a3
      :                          @6134
 78428: 7b 9b                    u64 [a2] = a4
 78430: 01                       fallthrough
      :                          @6135
 78431: 82 10 90 00              ra = u64 [sp + 0x90]
 78435: 82 15 88 00              s0 = u64 [sp + 0x88]
 78439: 82 16 80 00              s1 = u64 [sp + 0x80]
 78443: 95 11 98 00              sp = sp + 0x98
 78447: 32 00                    ret
      :                          @6136
 78449: 00                       trap
      :                          @6137
 78450: 00                       trap
      :                          @6138
 78451: 00                       trap
      :                          @6139
 78452: 00                       trap
      :                          @6140
 78453: 00                       trap
      :                          @6141
 78454: 00                       trap
      :                          @6142
 78455: 00                       trap
      :                          @6143
 78456: 00                       trap
      :                          @6144
 78457: 00                       trap
      :                          @6145
 78458: 00                       trap
      :                          @6146
 78459: 00                       trap
      :                          @6147
 78460: 82 18 40                 a1 = u64 [sp + 0x40]
 78463: 82 8c                    a5 = u64 [a1]
 78465: ae c7 f1                 jump @6137 if a0 >=u a5
      :                          @6148
 78468: 00                       trap
      :                          @6149
 78469: 82 9a                    a3 = u64 [a2]
 78471: 95 a8 14                 a1 = a3 + 0x14
 78474: ac a8 15 02              jump @6203 if a1 <u a3
      :                          @6150
 78478: 95 8b 01                 a4 = a1 + 0x1
 78481: 88 bc 01                 a5 = a4 <u 0x1
 78484: d8 b6 0b                 a4 = s1 <u a4
 78487: d4 cb 0b                 a4 = a4 | a5
 78490: 52 0b 05 02              jump @6203 if a4 != 0
      :                          @6151
 78494: 82 9b                    a4 = u64 [a2]
 78496: ab ab e5                 jump @6149 if a4 != a3
      :                          @6152
 78499: 7b 98                    u64 [a2] = a1
 78501: 33 0c                    a5 = 0
 78503: 7b 17                    u64 [sp] = a0
 78505: 33 07 b0 02 13           a0 = 0x1302b0
 78510: c9 87 06                 s1 = a0 - a1
 78513: 33 09 14                 a2 = 0x14
 78516: 64 67                    a0 = s1
 78518: 33 08                    a1 = 0
 78520: 50 20 c4 03 55 d9 01     ra = 964, jump @13689
      :                          @6153 [@dyn 482]
 78527: 33 00 14                 ra = 0x14
 78530: 82 52 10                 t0 = u64 [s0 + 0x10]
 78533: 49 11 30                 u64 [sp + 48] = 0
 78536: 64 57                    a0 = s0
 78538: 33 05 08                 s0 = 0x8
 78541: 7b 15 38                 u64 [sp + 0x38] = s0
 78544: 49 11 40                 u64 [sp + 64] = 0
 78547: 51 02 0f 02              jump @6210 if t0 == 0
      :                          @6154
 78551: 64 64                    t2 = s1
 78553: 82 73 08                 t1 = u64 [a0 + 0x8]
 78556: 33 08                    a1 = 0
 78558: 33 07                    a0 = 0
 78560: 95 39 18                 a2 = t1 + 0x18
 78563: 7b 19 28                 u64 [sp + 0x28] = a2
 78566: 96 29 18                 a2 = t0 * 0x18
 78569: 95 99 e8                 a2 = a2 + 0xffffffffffffffe8
 78572: 14 0b 00 00 00 00 ab aa aa aa a4 = 0xaaaaaaab00000000
 78582: 14 0a ab aa aa aa aa aa aa aa a3 = 0xaaaaaaaaaaaaaaab
 78592: d6 a9 09                 a2 = a2 mulhu a3
 78595: 98 99 04                 a2 = a2 >> 0x4
 78598: 7b 19 20                 u64 [sp + 0x20] = a2
 78601: 33 0c 01                 a5 = 0x1
 78604: 33 06 13                 s1 = 0x13
 78607: 7b 13 18                 u64 [sp + 0x18] = t1
 78610: 7b 12 08                 u64 [sp + 0x8] = t0
 78613: 28 05                    jump @6156
      :                          @6155
 78615: 7c 47                    a0 = u8 [t2]
 78617: 01                       fallthrough
      :                          @6156
 78618: 84 77 ff 00              a0 = a0 & 0xff
 78622: 51 07 76                 jump @6176 if a0 == 0
      :                          @6157
 78625: 7c 47 01                 a0 = u8 [t2 + 0x1]
 78628: 51 07 70                 jump @6176 if a0 == 0
      :                          @6158
 78631: 7c 47 02                 a0 = u8 [t2 + 0x2]
 78634: 51 07 6a                 jump @6176 if a0 == 0
      :                          @6159
 78637: 7c 47 03                 a0 = u8 [t2 + 0x3]
 78640: 51 07 64                 jump @6176 if a0 == 0
      :                          @6160
 78643: 7c 47 04                 a0 = u8 [t2 + 0x4]
 78646: 51 07 5e                 jump @6176 if a0 == 0
      :                          @6161
 78649: 7c 47 05                 a0 = u8 [t2 + 0x5]
 78652: 51 07 58                 jump @6176 if a0 == 0
      :                          @6162
 78655: 7c 47 06                 a0 = u8 [t2 + 0x6]
 78658: 51 07 52                 jump @6176 if a0 == 0
      :                          @6163
 78661: 7c 47 07                 a0 = u8 [t2 + 0x7]
 78664: 51 07 4c                 jump @6176 if a0 == 0
      :                          @6164
 78667: 7c 47 08                 a0 = u8 [t2 + 0x8]
 78670: 51 07 46                 jump @6176 if a0 == 0
      :                          @6165
 78673: 7c 47 09                 a0 = u8 [t2 + 0x9]
 78676: 51 07 40                 jump @6176 if a0 == 0
      :                          @6166
 78679: 7c 47 0a                 a0 = u8 [t2 + 0xa]
 78682: 51 07 3a                 jump @6176 if a0 == 0
      :                          @6167
 78685: 7c 47 0b                 a0 = u8 [t2 + 0xb]
 78688: 51 07 34                 jump @6176 if a0 == 0
      :                          @6168
 78691: 7c 47 0c                 a0 = u8 [t2 + 0xc]
 78694: 51 07 2e                 jump @6176 if a0 == 0
      :                          @6169
 78697: 7c 47 0d                 a0 = u8 [t2 + 0xd]
 78700: 51 07 28                 jump @6176 if a0 == 0
      :                          @6170
 78703: 7c 47 0e                 a0 = u8 [t2 + 0xe]
 78706: 51 07 22                 jump @6176 if a0 == 0
      :                          @6171
 78709: 7c 47 0f                 a0 = u8 [t2 + 0xf]
 78712: 51 07 1c                 jump @6176 if a0 == 0
      :                          @6172
 78715: 7c 47 10                 a0 = u8 [t2 + 0x10]
 78718: 51 07 16                 jump @6176 if a0 == 0
      :                          @6173
 78721: 7c 47 11                 a0 = u8 [t2 + 0x11]
 78724: 51 07 10                 jump @6176 if a0 == 0
      :                          @6174
 78727: 7c 47 12                 a0 = u8 [t2 + 0x12]
 78730: 51 07 0a                 jump @6176 if a0 == 0
      :                          @6175
 78733: 7c 47 13                 a0 = u8 [t2 + 0x13]
 78736: 52 07 10 01              jump @6204 if a0 != 0
      :                          @6176
 78740: 82 39 10                 a2 = u64 [t1 + 0x10]
 78743: 51 09 2a                 jump @6182 if a2 == 0
      :                          @6177
 78746: 82 3b 08                 a4 = u64 [t1 + 0x8]
 78749: 33 0a                    a3 = 0
 78751: 01                       fallthrough
      :                          @6178
 78752: 82 b7                    a0 = u64 [a4]
 78754: ae 07 fb 00              jump @6201 if a0 >=u ra
      :                          @6179
 78758: c8 47 07                 a0 = a0 + t2
 78761: 7c 77                    a0 = u8 [a0]
 78763: 88 77 01                 a0 = a0 <u 0x1
 78766: c8 7a 0a                 a3 = a3 + a0
 78769: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 78772: 95 bb 08                 a4 = a4 + 0x8
 78775: 52 09 e9                 jump @6178 if a2 != 0
      :                          @6180
 78778: ab c2 0c                 jump @6183 if t0 != a5
      :                          @6181
 78781: 33 09                    a2 = 0
 78783: 28 72                    jump @6192
      :                          @6182
 78785: 33 0a                    a3 = 0
 78787: aa c2 fa                 jump @6181 if t0 == a5
      :                          @6183
 78790: 7b 15 10                 u64 [sp + 0x10] = s0
 78793: 33 09                    a2 = 0
 78795: 33 0c                    a5 = 0
 78797: 64 3b                    a4 = t1
 78799: 28 1c                    jump @6186
      :                          @6184
 78801: 33 09                    a2 = 0
 78803: 01                       fallthrough
      :                          @6185
 78804: 95 cc 01                 a5 = a5 + 0x1
 78807: d8 a9 07                 a0 = a2 <u a3
 78810: e4 9a 0a                 a3 = maxu(a3, a2)
 78813: 64 29                    a2 = t0
 78815: da 7c 09                 a2 = a5 if a0 == 0
 78818: da 73 0b                 a4 = t1 if a0 == 0
 78821: 82 17 20                 a0 = u64 [sp + 0x20]
 78824: aa 7c 36                 jump @6191 if a5 == a0
      :                          @6186
 78827: 64 92                    t0 = a2
 78829: 96 c3 18                 t1 = a5 * 0x18
 78832: 82 17 28                 a0 = u64 [sp + 0x28]
 78835: c8 73 03                 t1 = t1 + a0
 78838: 82 35 10                 s0 = u64 [t1 + 0x10]
 78841: 51 05 d8                 jump @6184 if s0 == 0
      :                          @6187
 78844: 82 36 08                 s1 = u64 [t1 + 0x8]
 78847: 33 09                    a2 = 0
 78849: 01                       fallthrough
      :                          @6188
 78850: 82 67                    a0 = u64 [s1]
 78852: ae 07 99 00              jump @6201 if a0 >=u ra
      :                          @6189
 78856: c8 47 07                 a0 = a0 + t2
 78859: 7c 77                    a0 = u8 [a0]
 78861: 88 77 01                 a0 = a0 <u 0x1
 78864: c8 79 09                 a2 = a2 + a0
 78867: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 78870: 95 66 08                 s1 = s1 + 0x8
 78873: 52 05 e9                 jump @6188 if s0 != 0
      :                          @6190
 78876: 28 b8                    jump @6185
      :                          @6191
 78878: 82 12 08                 t0 = u64 [sp + 0x8]
 78881: 82 13 18                 t1 = u64 [sp + 0x18]
 78884: 82 15 10                 s0 = u64 [sp + 0x10]
 78887: 33 0c 01                 a5 = 0x1
 78890: 33 06 13                 s1 = 0x13
 78893: 51 0b b5 00              jump @6210 if a4 == 0
      :                          @6192
 78897: 82 17 30                 a0 = u64 [sp + 0x30]
 78900: ab 78 2e                 jump @6195 if a1 != a0
      :                          @6193
 78903: 95 17 30                 a0 = sp + 0x30
 78906: 64 45                    s0 = t2
 78908: 64 26                    s1 = t0
 78910: 7b 19 10                 u64 [sp + 0x10] = a2
 78913: 50 20 c6 03 ce 1e ff     ra = 966, jump @1581
      :                          @6194 [@dyn 483]
 78920: 82 19 10                 a2 = u64 [sp + 0x10]
 78923: 64 62                    t0 = s1
 78925: 33 06 13                 s1 = 0x13
 78928: 33 0c 01                 a5 = 0x1
 78931: 82 13 18                 t1 = u64 [sp + 0x18]
 78934: 33 00 14                 ra = 0x14
 78937: 64 54                    t2 = s0
 78939: 82 18 40                 a1 = u64 [sp + 0x40]
 78942: 82 15 38                 s0 = u64 [sp + 0x38]
 78945: 01                       fallthrough
      :                          @6195
 78946: 97 87 03                 a0 = a1 << 0x3
 78949: c8 57 07                 a0 = a0 + s0
 78952: 7b 79                    u64 [a0] = a2
 78954: 95 88 01                 a1 = a1 + 0x1
 78957: 7b 18 40                 u64 [sp + 0x40] = a1
 78960: ae 29 2e                 jump @6202 if a2 >=u t0
      :                          @6196
 78963: 96 97 18                 a0 = a2 * 0x18
 78966: c8 37 07                 a0 = a0 + t1
 78969: 82 7a 10                 a3 = u64 [a0 + 0x10]
 78972: 51 0a 9b fe              jump @6155 if a3 == 0
      :                          @6197
 78976: 82 79 08                 a2 = u64 [a0 + 0x8]
 78979: 97 aa 03                 a3 = a3 << 0x3
 78982: 01                       fallthrough
      :                          @6198
 78983: 82 97                    a0 = u64 [a2]
 78985: ac 76 14                 jump @6201 if s1 <u a0
      :                          @6199
 78988: 95 99 08                 a2 = a2 + 0x8
 78991: c8 47 07                 a0 = a0 + t2
 78994: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 78997: 78 7c                    u8 [a0] = a5
 78999: 52 0a f0                 jump @6198 if a3 != 0
      :                          @6200
 79002: 28 7d fe                 jump @6155
      :                          @6201
 79005: 00                       trap
      :                          @6202
 79006: 00                       trap
      :                          @6203
 79007: 00                       trap
      :                          @6204
 79008: 82 17 40                 a0 = u64 [sp + 0x40]
 79011: 82 18 38                 a1 = u64 [sp + 0x38]
 79014: 82 19 30                 a2 = u64 [sp + 0x30]
 79017: 82 1a                    a3 = u64 [sp]
 79019: 7b a7 10                 u64 [a3 + 0x10] = a0
 79022: 7b a8 08                 u64 [a3 + 0x8] = a1
 79025: 7b a9                    u64 [a3] = a2
 79027: 33 07 b0 02 03           a0 = 0x302b0
 79032: 95 77 00 00 10           a0 = a0 + 0x100000
 79037: 01                       fallthrough
      :                          @6205
 79038: 82 78                    a1 = u64 [a0]
 79040: c9 87 09                 a2 = a0 - a1
 79043: ab 49 11                 jump @6209 if a2 != t2
      :                          @6206
 79046: 95 89 ec                 a2 = a1 + 0xffffffffffffffec
 79049: 01                       fallthrough
      :                          @6207
 79050: 82 7a                    a3 = u64 [a0]
 79052: ab 8a f2                 jump @6205 if a3 != a1
      :                          @6208
 79055: 7b 79                    u64 [a0] = a2
 79057: 33 0b                    a4 = 0
 79059: 01                       fallthrough
      :                          @6209
 79060: 82 10 58                 ra = u64 [sp + 0x58]
 79063: 82 15 50                 s0 = u64 [sp + 0x50]
 79066: 82 16 48                 s1 = u64 [sp + 0x48]
 79069: 95 11 60                 sp = sp + 0x60
 79072: 32 00                    ret
      :                          @6210
 79074: 00                       trap
      :                          @6211 [@dyn 484]
 79075: 49 11 10                 u64 [sp + 16] = 0
 79078: 33 07 08                 a0 = 0x8
 79081: 7b 17 18                 u64 [sp + 0x18] = a0
 79084: 49 11 20                 u64 [sp + 32] = 0
 79087: 51 06 ab 00              jump @6231 if s1 == 0
      :                          @6212
 79091: 97 66 03                 s1 = s1 << 0x3
 79094: c8 65 03                 t1 = s0 + s1
 79097: 33 06 64                 s1 = 0x64
 79100: 64 52                    t0 = s0
 79102: 7b 13                    u64 [sp] = t1
 79104: 28 13                    jump @6214
      :                          @6213
 79106: 97 89 03                 a2 = a1 << 0x3
 79109: c8 79 09                 a2 = a2 + a0
 79112: 7b 95                    u64 [a2] = s0
 79114: 95 88 01                 a1 = a1 + 0x1
 79117: 7b 18 20                 u64 [sp + 0x20] = a1
 79120: aa 32 4d                 jump @6222 if t0 == t1
      :                          @6214
 79123: 82 18 20                 a1 = u64 [sp + 0x20]
 79126: 82 25                    s0 = u64 [t0]
 79128: 95 22 08                 t0 = t0 + 0x8
 79131: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
 79134: 97 89 03                 a2 = a1 << 0x3
 79137: 01                       fallthrough
      :                          @6215
 79138: 51 09 1b                 jump @6219 if a2 == 0
      :                          @6216
 79141: 82 ac 08                 a5 = u64 [a3 + 0x8]
 79144: 95 ab 08                 a4 = a3 + 0x8
 79147: c8 5c 0c                 a5 = a5 + s0
 79150: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 79153: 64 ba                    a3 = a4
 79155: ac c6 ef                 jump @6215 if s1 <u a5
      :                          @6217
 79158: 7b bc                    u64 [a4] = a5
 79160: ab 32 db                 jump @6214 if t0 != t1
      :                          @6218
 79163: 28 22                    jump @6222
      :                          @6219
 79165: 82 19 10                 a2 = u64 [sp + 0x10]
 79168: ab 98 c2                 jump @6213 if a1 != a2
      :                          @6220
 79171: 95 17 10                 a0 = sp + 0x10
 79174: 7b 12 08                 u64 [sp + 0x8] = t0
 79177: 50 20 ca 03 c6 1d ff     ra = 970, jump @1581
      :                          @6221 [@dyn 485]
 79184: 82 13                    t1 = u64 [sp]
 79186: 82 12 08                 t0 = u64 [sp + 0x8]
 79189: 82 18 20                 a1 = u64 [sp + 0x20]
 79192: 82 17 18                 a0 = u64 [sp + 0x18]
 79195: 28 a7                    jump @6213
      :                          @6222
 79197: 82 19 10                 a2 = u64 [sp + 0x10]
 79200: 82 17 20                 a0 = u64 [sp + 0x20]
 79203: 51 09 3a                 jump @6232 if a2 == 0
      :                          @6223
 79206: 33 08 00 00 02           a1 = 0x20000
 79211: ac 98 32                 jump @6232 if a1 <u a2
      :                          @6224
 79214: 82 18 18                 a1 = u64 [sp + 0x18]
 79217: 97 99 03                 a2 = a2 << 0x3
 79220: 33 0a b0 02 03           a3 = 0x302b0
 79225: 95 aa 00 00 10           a3 = a3 + 0x100000
 79230: 01                       fallthrough
      :                          @6225
 79231: 82 ab                    a4 = u64 [a3]
 79233: c9 ba 0c                 a5 = a3 - a4
 79236: ab 8c 19                 jump @6232 if a5 != a1
      :                          @6226
 79239: c9 9b 0c                 a5 = a4 - a2
 79242: 01                       fallthrough
      :                          @6227
 79243: 82 a6                    s1 = u64 [a3]
 79245: ab b6 f2                 jump @6225 if s1 != a4
      :                          @6228
 79248: 7b ac                    u64 [a3] = a5
 79250: 33 05                    s0 = 0
 79252: 01                       fallthrough
      :                          @6229
 79253: ab b6 ea                 jump @6225 if s1 != a4
      :                          @6230
 79256: 28 05                    jump @6232
      :                          @6231
 79258: 33 07                    a0 = 0
 79260: 01                       fallthrough
      :                          @6232
 79261: 82 10 38                 ra = u64 [sp + 0x38]
 79264: 82 15 30                 s0 = u64 [sp + 0x30]
 79267: 82 16 28                 s1 = u64 [sp + 0x28]
 79270: 95 11 40                 sp = sp + 0x40
 79273: 32 00                    ret
      :                          @6233
 79275: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 79278: 7b 10 50                 u64 [sp + 0x50] = ra
 79281: 7b 15 48                 u64 [sp + 0x48] = s0
 79284: 7b 16 40                 u64 [sp + 0x40] = s1
 79287: 82 79 10                 a2 = u64 [a0 + 0x10]
 79290: 51 09 e1 01              jump @6282 if a2 == 0
      :                          @6234
 79294: 64 76                    s1 = a0
 79296: 98 97 3b                 a0 = a2 >> 0x3b
 79299: 52 07 da 01              jump @6284 if a0 != 0
      :                          @6235
 79303: 88 72 01                 t0 = a0 <u 0x1
 79306: 7b 19 28                 u64 [sp + 0x28] = a2
 79309: 97 99 04                 a2 = a2 << 0x4
 79312: 97 22 03                 t0 = t0 << 0x3
 79315: 33 04 b0 02 03           t2 = 0x302b0
 79320: 33 03 00 00 10           t1 = 0x100000
 79325: c8 34 00                 ra = t2 + t1
 79328: 01                       fallthrough
      :                          @6236
 79329: 82 0b                    a4 = u64 [ra]
 79331: c8 9b 05                 s0 = a4 + a2
 79334: ac b5 b6 01              jump @6283 if s0 <u a4
      :                          @6237
 79338: c8 25 07                 a0 = s0 + t0
 79341: d8 57 0c                 a5 = a0 <u s0
 79344: d8 73 07                 a0 = t1 <u a0
 79347: d4 c7 07                 a0 = a0 | a5
 79350: 52 07 a6 01              jump @6283 if a0 != 0
      :                          @6238
 79354: c9 54 0a                 a3 = t2 - s0
 79357: c8 3a 0a                 a3 = a3 + t1
 79360: 84 ac 07                 a5 = a3 & 0x7
 79363: c8 c5 05                 s0 = s0 + a5
 79366: 01                       fallthrough
      :                          @6239
 79367: 82 07                    a0 = u64 [ra]
 79369: ab b7 d8                 jump @6236 if a0 != a4
      :                          @6240
 79372: 7b 05                    u64 [ra] = s0
 79374: c9 ca 07                 a0 = a3 - a5
 79377: 7b 17 20                 u64 [sp + 0x20] = a0
 79380: 33 08                    a1 = 0
 79382: 7b 19                    u64 [sp] = a2
 79384: 50 20 cc 03 f5 d5 01     ra = 972, jump @13689
      :                          @6241 [@dyn 486]
 79391: 82 67 08                 a0 = u64 [s1 + 0x8]
 79394: 7b 17 18                 u64 [sp + 0x18] = a0
 79397: 33 09 b0 02 03           a2 = 0x302b0
 79402: 33 0b 00 00 10           a4 = 0x100000
 79407: 95 97 08 00 10           a0 = a2 + 0x100008
 79412: c9 57 07                 a0 = a0 - s0
 79415: 7b 17 08                 u64 [sp + 0x8] = a0
 79418: 7b 19 10                 u64 [sp + 0x10] = a2
 79421: c8 b9 05                 s0 = a2 + a4
 79424: 82 1c 28                 a5 = u64 [sp + 0x28]
 79427: 33 03                    t1 = 0
 79429: 33 02 01                 t0 = 0x1
 79432: 28 0f                    jump @6244
      :                          @6242
 79434: 82 18 30                 a1 = u64 [sp + 0x30]
 79437: aa c8 d9 00              jump @6266 if a1 == a5
      :                          @6243
 79441: 64 83                    t1 = a1
 79443: 95 82 01                 t0 = a1 + 0x1
 79446: 01                       fallthrough
      :                          @6244
 79447: 82 58                    a1 = u64 [s0]
 79449: c8 c8 07                 a0 = a1 + a5
 79452: ac 87 3e 01              jump @6281 if a0 <u a1
      :                          @6245
 79456: 95 79 01                 a2 = a0 + 0x1
 79459: 88 9a 01                 a3 = a2 <u 0x1
 79462: d8 9b 09                 a2 = a4 <u a2
 79465: d4 a9 09                 a2 = a2 | a3
 79468: 52 09 2e 01              jump @6281 if a2 != 0
      :                          @6246
 79472: 82 59                    a2 = u64 [s0]
 79474: ab 89 e5                 jump @6244 if a2 != a1
      :                          @6247
 79477: 7b 57                    u64 [s0] = a0
 79479: 7b 12 30                 u64 [sp + 0x30] = t0
 79482: 82 18 10                 a1 = u64 [sp + 0x10]
 79485: c9 78 07                 a0 = a1 - a0
 79488: c8 b7 06                 s1 = a0 + a4
 79491: 64 67                    a0 = s1
 79493: 33 08                    a1 = 0
 79495: 64 c9                    a2 = a5
 79497: 7b 13 38                 u64 [sp + 0x38] = t1
 79500: 50 20 ce 03 81 d5 01     ra = 974, jump @13689
      :                          @6248 [@dyn 487]
 79507: 82 1c 28                 a5 = u64 [sp + 0x28]
 79510: 82 13 38                 t1 = u64 [sp + 0x38]
 79513: 33 04 01                 t2 = 0x1
 79516: 33 07                    a0 = 0
 79518: 96 38 18                 a1 = t1 * 0x18
 79521: 82 19 18                 a2 = u64 [sp + 0x18]
 79524: c8 98 08                 a1 = a1 + a2
 79527: 95 89 10                 a2 = a1 + 0x10
 79530: 95 8a 08                 a3 = a1 + 0x8
 79533: 82 1b 08                 a4 = u64 [sp + 0x8]
 79536: 82 12 20                 t0 = u64 [sp + 0x20]
 79539: 28 0b                    jump @6250
      :                          @6249
 79541: 95 77 01                 a0 = a0 + 0x1
 79544: 95 bb 10                 a4 = a4 + 0x10
 79547: aa 7c 26                 jump @6255 if a5 == a0
      :                          @6250
 79550: 82 98                    a1 = u64 [a2]
 79552: ae 87 86 00              jump @6269 if a0 >=u a1
      :                          @6251
 79556: 82 a8                    a1 = u64 [a3]
 79558: c8 78 08                 a1 = a1 + a0
 79561: 7c 88                    a1 = u8 [a1]
 79563: 51 08 ea                 jump @6249 if a1 == 0
      :                          @6252
 79566: 82 b8 f8                 a1 = u64 [a4 + 0xfffffffffffffff8]
 79569: 51 08 e4                 jump @6249 if a1 == 0
      :                          @6253
 79572: 82 b8                    a1 = u64 [a4]
 79574: ae c8 c3 00              jump @6280 if a1 >=u a5
      :                          @6254
 79578: c8 68 08                 a1 = a1 + s1
 79581: 78 84                    u8 [a1] = t2
 79583: 28 d6                    jump @6249
      :                          @6255
 79585: 33 07                    a0 = 0
 79587: 01                       fallthrough
      :                          @6256
 79588: c8 76 08                 a1 = s1 + a0
 79591: 7c 88                    a1 = u8 [a1]
 79593: 51 08 0c                 jump @6259 if a1 == 0
      :                          @6257
 79596: 95 77 01                 a0 = a0 + 0x1
 79599: ab 7c f5                 jump @6256 if a5 != a0
      :                          @6258
 79602: 28 a9 00                 jump @6282
      :                          @6259
 79605: 97 38 04                 a1 = t1 << 0x4
 79608: c8 28 08                 a1 = a1 + t0
 79611: 7b 84                    u64 [a1] = t2
 79613: 7b 87 08                 u64 [a1 + 0x8] = a0
 79616: 33 0b 00 00 10           a4 = 0x100000
 79621: ac cb 45 ff              jump @6242 if a4 <u a5
      :                          @6260
 79625: 82 57                    a0 = u64 [s0]
 79627: c9 75 08                 a1 = s0 - a0
 79630: ab 68 3c ff              jump @6242 if a1 != s1
      :                          @6261
 79634: c9 c7 08                 a1 = a0 - a5
 79637: 01                       fallthrough
      :                          @6262
 79638: 82 59                    a2 = u64 [s0]
 79640: ab 79 f1                 jump @6260 if a2 != a0
      :                          @6263
 79643: 7b 58                    u64 [s0] = a1
 79645: 33 0a                    a3 = 0
 79647: 01                       fallthrough
      :                          @6264
 79648: ab 79 e9                 jump @6260 if a2 != a0
      :                          @6265
 79651: 28 27 ff                 jump @6242
      :                          @6266
 79654: 82 15 20                 s0 = u64 [sp + 0x20]
 79657: 82 57                    a0 = u64 [s0]
 79659: 51 07 70                 jump @6282 if a0 == 0
      :                          @6267
 79662: 82 57 08                 a0 = u64 [s0 + 0x8]
 79665: 82 12                    t0 = u64 [sp]
 79667: 52 1c 01 14              jump @6270 if a5 != 1
      :                          @6268
 79671: 33 02 10                 t0 = 0x10
 79674: 33 08 b0 02 03           a1 = 0x302b0
 79679: 95 88 00 00 10           a1 = a1 + 0x100000
 79684: 28 2e                    jump @6275
      :                          @6269
 79686: 00                       trap
      :                          @6270
 79687: c8 25 08                 a1 = s0 + t0
 79690: 95 59 10                 a2 = s0 + 0x10
 79693: 01                       fallthrough
      :                          @6271
 79694: 82 9a                    a3 = u64 [a2]
 79696: 51 0a 4b                 jump @6282 if a3 == 0
      :                          @6272
 79699: 82 9a 08                 a3 = u64 [a2 + 0x8]
 79702: 95 99 10                 a2 = a2 + 0x10
 79705: e4 a7 07                 a0 = maxu(a0, a3)
 79708: ab 89 f2                 jump @6271 if a2 != a1
      :                          @6273
 79711: 33 08 00 00 01           a1 = 0x10000
 79716: ac c8 24                 jump @6279 if a1 <u a5
      :                          @6274
 79719: 33 08 b0 02 03           a1 = 0x302b0
 79724: 95 88 00 00 10           a1 = a1 + 0x100000
 79729: 01                       fallthrough
      :                          @6275
 79730: 82 89                    a2 = u64 [a1]
 79732: c9 98 0a                 a3 = a1 - a2
 79735: ab 5a 11                 jump @6279 if a3 != s0
      :                          @6276
 79738: c9 29 0a                 a3 = a2 - t0
 79741: 01                       fallthrough
      :                          @6277
 79742: 82 8b                    a4 = u64 [a1]
 79744: ab 9b f2                 jump @6275 if a4 != a2
      :                          @6278
 79747: 7b 8a                    u64 [a1] = a3
 79749: 33 0c                    a5 = 0
 79751: 01                       fallthrough
      :                          @6279
 79752: 95 77 01                 a0 = a0 + 0x1
 79755: 82 10 50                 ra = u64 [sp + 0x50]
 79758: 82 15 48                 s0 = u64 [sp + 0x48]
 79761: 82 16 40                 s1 = u64 [sp + 0x40]
 79764: 95 11 58                 sp = sp + 0x58
 79767: 32 00                    ret
      :                          @6280
 79769: 00                       trap
      :                          @6281
 79770: 00                       trap
      :                          @6282
 79771: 00                       trap
      :                          @6283
 79772: 00                       trap
      :                          @6284
 79773: 00                       trap
      :                          @6285
 79774: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 79777: 7b 10 20                 u64 [sp + 0x20] = ra
 79780: 7b 15 18                 u64 [sp + 0x18] = s0
 79783: 7b 16 10                 u64 [sp + 0x10] = s1
 79786: 84 89 1f                 a2 = a1 & 0x1f
 79789: 33 0a 1f                 a3 = 0x1f
 79792: aa a9 85 00              jump @6300 if a2 == a3
      :                          @6286
 79796: 51 08 81 00              jump @6300 if a1 == 0
      :                          @6287
 79800: 49 01                    u64 [sp + 0] = 0
 79802: 33 00                    ra = 0
 79804: 90 89 01                 i32 a2 = 0x1 << a1
 79807: 33 0a 01                 a3 = 0x1
 79810: e3 a9 09                 a2 = maxs(a2, a3)
 79813: 7b 19 08                 u64 [sp + 0x8] = a2
 79816: 28 10                    jump @6290
      :                          @6288
 79818: 82 1a                    a3 = u64 [sp]
 79820: e4 9a 0a                 a3 = maxu(a3, a2)
 79823: 7b 1a                    u64 [sp] = a3
 79825: 01                       fallthrough
      :                          @6289
 79826: 82 19 08                 a2 = u64 [sp + 0x8]
 79829: aa 90 63                 jump @6301 if ra == a2
      :                          @6290
 79832: 33 09                    a2 = 0
 79834: 33 0c                    a5 = 0
 79836: 64 05                    s0 = ra
 79838: 83 00 01                 i32 ra = ra + 0x1
 79841: 33 04 01                 t2 = 0x1
 79844: 28 08                    jump @6292
      :                          @6291
 79846: 83 44 01                 i32 t2 = t2 + 0x1
 79849: aa 8c e1                 jump @6288 if a5 == a1
      :                          @6292
 79852: 64 ca                    a3 = a5
 79854: c6 c5 0b                 i32 a4 = s0 >> a5
 79857: 84 bb 01                 a4 = a4 & 0x1
 79860: 95 cc 01                 a5 = a5 + 0x1
 79863: 51 0b ef                 jump @6291 if a4 == 0
      :                          @6293
 79866: 95 99 01                 a2 = a2 + 0x1
 79869: ae 8c e9                 jump @6291 if a5 >=u a1
      :                          @6294
 79872: 96 aa 18                 a3 = a3 * 0x18
 79875: c8 7a 0a                 a3 = a3 + a0
 79878: 95 a2 10                 t0 = a3 + 0x10
 79881: 95 a3 08                 t1 = a3 + 0x8
 79884: 64 46                    s1 = t2
 79886: 64 ca                    a3 = a5
 79888: 28 0b                    jump @6296
      :                          @6295
 79890: 95 aa 01                 a3 = a3 + 0x1
 79893: 83 66 01                 i32 s1 = s1 + 0x1
 79896: aa a8 ce                 jump @6291 if a1 == a3
      :                          @6296
 79899: c6 65 0b                 i32 a4 = s0 >> s1
 79902: 84 bb 01                 a4 = a4 & 0x1
 79905: 51 0b f1                 jump @6295 if a4 == 0
      :                          @6297
 79908: 82 2b                    a4 = u64 [t0]
 79910: ae ba 22                 jump @6302 if a3 >=u a4
      :                          @6298
 79913: 82 3b                    a4 = u64 [t1]
 79915: c8 ab 0b                 a4 = a4 + a3
 79918: 7c bb                    a4 = u8 [a4]
 79920: 51 0b e2                 jump @6295 if a4 == 0
      :                          @6299
 79923: 28 9f                    jump @6289
      :                          @6300
 79925: 49 01                    u64 [sp + 0] = 0
 79927: 01                       fallthrough
      :                          @6301
 79928: 82 17                    a0 = u64 [sp]
 79930: 82 10 20                 ra = u64 [sp + 0x20]
 79933: 82 15 18                 s0 = u64 [sp + 0x18]
 79936: 82 16 10                 s1 = u64 [sp + 0x10]
 79939: 95 11 28                 sp = sp + 0x28
 79942: 32 00                    ret
      :                          @6302
 79944: 00                       trap
      :                          @6303
 79945: 95 11 50 ff              sp = sp + 0xffffffffffffff50
 79949: 7b 10 a8 00              u64 [sp + 0xa8] = ra
 79953: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 79957: 7b 16 98 00              u64 [sp + 0x98] = s1
 79961: 82 89 10                 a2 = u64 [a1 + 0x10]
 79964: 7b 17 08                 u64 [sp + 0x8] = a0
 79967: 51 09 ed 01              jump @6339 if a2 == 0
      :                          @6304
 79971: 57 09 dd 02              jump @6372 if a2 <s 0
      :                          @6305
 79975: 85 95 ff                 s0 = a2 ^ 0xffffffffffffffff
 79978: 98 53 3f                 t1 = s0 >> 0x3f
 79981: 33 05 b0 02 03           s0 = 0x302b0
 79986: 33 02 00 00 10           t0 = 0x100000
 79991: c8 25 05                 s0 = s0 + t0
 79994: 01                       fallthrough
      :                          @6306
 79995: 82 5b                    a4 = u64 [s0]
 79997: c8 9b 0a                 a3 = a4 + a2
 80000: ac ba ba 02              jump @6366 if a3 <u a4
      :                          @6307
 80004: c8 3a 0c                 a5 = a3 + t1
 80007: d8 ac 06                 s1 = a5 <u a3
 80010: d8 c2 0c                 a5 = t0 <u a5
 80013: d4 6c 0c                 a5 = a5 | s1
 80016: 52 0c aa 02              jump @6366 if a5 != 0
      :                          @6308
 80020: 82 5c                    a5 = u64 [s0]
 80022: ab bc e5                 jump @6306 if a5 != a4
      :                          @6309
 80025: 7b 5a                    u64 [s0] = a3
 80027: 7b 18 60                 u64 [sp + 0x60] = a1
 80030: 33 06 b0 02 13           s1 = 0x1302b0
 80035: c9 a6 06                 s1 = s1 - a3
 80038: 64 67                    a0 = s1
 80040: 33 08                    a1 = 0
 80042: 7b 19 40                 u64 [sp + 0x40] = a2
 80045: 50 20 d0 03 60 d3 01     ra = 976, jump @13689
      :                          @6310 [@dyn 488]
 80052: 82 17 40                 a0 = u64 [sp + 0x40]
 80055: 7b 17 80 00              u64 [sp + 0x80] = a0
 80059: 7b 16 88 00              u64 [sp + 0x88] = s1
 80063: 82 17 40                 a0 = u64 [sp + 0x40]
 80066: 7b 17 90 00              u64 [sp + 0x90] = a0
 80070: 95 17 68                 a0 = sp + 0x68
 80073: 95 18 80 00              a1 = sp + 0x80
 80077: 82 19 40                 a2 = u64 [sp + 0x40]
 80080: 50 20 d2 03 01 2c ff     ra = 978, jump @1895
      :                          @6311 [@dyn 489]
 80087: 82 13 40                 t1 = u64 [sp + 0x40]
 80090: 49 21 80 00              u64 [sp + 128] = 0
 80094: 33 0b 08                 a4 = 0x8
 80097: 7b 1b 88 00              u64 [sp + 0x88] = a4
 80101: 49 21 90 00              u64 [sp + 144] = 0
 80105: 51 03 7b 01              jump @6340 if t1 == 0
      :                          @6312
 80109: 82 19 70                 a2 = u64 [sp + 0x70]
 80112: 33 08                    a1 = 0
 80114: 33 05                    s0 = 0
 80116: 82 17 60                 a0 = u64 [sp + 0x60]
 80119: 82 77 08                 a0 = u64 [a0 + 0x8]
 80122: 7b 17                    u64 [sp] = a0
 80124: 82 14 78                 t2 = u64 [sp + 0x78]
 80127: 7b 19 48                 u64 [sp + 0x48] = a2
 80130: 95 97 10                 a0 = a2 + 0x10
 80133: 7b 17 28                 u64 [sp + 0x28] = a0
 80136: 33 07 01                 a0 = 0x1
 80139: 7b 14 10                 u64 [sp + 0x10] = t2
 80142: 28 0f                    jump @6314
      :                          @6313
 80144: 82 17 20                 a0 = u64 [sp + 0x20]
 80147: 95 77 01                 a0 = a0 + 0x1
 80150: 82 15 18                 s0 = u64 [sp + 0x18]
 80153: aa 35 4b 01              jump @6340 if s0 == t1
      :                          @6314
 80157: 7b 17 20                 u64 [sp + 0x20] = a0
 80160: 95 56 01                 s1 = s0 + 0x1
 80163: 7b 16 18                 u64 [sp + 0x18] = s1
 80166: ae 36 ea                 jump @6313 if s1 >=u t1
      :                          @6315
 80169: 96 57 18                 a0 = s0 * 0x18
 80172: 82 19                    a2 = u64 [sp]
 80174: c8 79 09                 a2 = a2 + a0
 80177: 95 9a 10                 a3 = a2 + 0x10
 80180: 95 9c 08                 a5 = a2 + 0x8
 80183: ae 45 f8 00              jump @6334 if s0 >=u t2
      :                          @6316
 80187: 82 19 48                 a2 = u64 [sp + 0x48]
 80190: c8 97 07                 a0 = a0 + a2
 80193: 95 79 10                 a2 = a0 + 0x10
 80196: 7b 19 60                 u64 [sp + 0x60] = a2
 80199: 95 77 08                 a0 = a0 + 0x8
 80202: 7b 17 58                 u64 [sp + 0x58] = a0
 80205: 7b 1c 38                 u64 [sp + 0x38] = a5
 80208: 7b 1a 30                 u64 [sp + 0x30] = a3
 80211: 28 08                    jump @6318
      :                          @6317
 80213: 95 66 01                 s1 = s1 + 0x1
 80216: aa 36 b8                 jump @6313 if s1 == t1
      :                          @6318
 80219: 82 a9                    a2 = u64 [a3]
 80221: ae 96 df 01              jump @6368 if s1 >=u a2
      :                          @6319
 80225: 82 c7                    a0 = u64 [a5]
 80227: c8 67 07                 a0 = a0 + s1
 80230: 7c 77                    a0 = u8 [a0]
 80232: 51 07 ed                 jump @6317 if a0 == 0
      :                          @6320
 80235: 82 17 60                 a0 = u64 [sp + 0x60]
 80238: 82 79                    a2 = u64 [a0]
 80240: ae 96 cc 01              jump @6368 if s1 >=u a2
      :                          @6321
 80244: 82 17 58                 a0 = u64 [sp + 0x58]
 80247: 82 77                    a0 = u64 [a0]
 80249: c8 67 07                 a0 = a0 + s1
 80252: 7c 77                    a0 = u8 [a0]
 80254: 52 07 d7                 jump @6317 if a0 != 0
      :                          @6322
 80257: 82 17 80 00              a0 = u64 [sp + 0x80]
 80261: ab 78 1d                 jump @6325 if a1 != a0
      :                          @6323
 80264: 95 17 80 00              a0 = sp + 0x80
 80268: 50 20 d4 03 7c 1a ff     ra = 980, jump @1605
      :                          @6324 [@dyn 490]
 80275: 82 14 10                 t2 = u64 [sp + 0x10]
 80278: 82 13 40                 t1 = u64 [sp + 0x40]
 80281: 82 18 90 00              a1 = u64 [sp + 0x90]
 80285: 82 1b 88 00              a4 = u64 [sp + 0x88]
 80289: 01                       fallthrough
      :                          @6325
 80290: 97 87 04                 a0 = a1 << 0x4
 80293: c8 b7 07                 a0 = a0 + a4
 80296: 7b 75                    u64 [a0] = s0
 80298: 7b 76 08                 u64 [a0 + 0x8] = s1
 80301: 95 88 01                 a1 = a1 + 0x1
 80304: 7b 18 90 00              u64 [sp + 0x90] = a1
 80308: ae 46 5c 01              jump @6361 if s1 >=u t2
      :                          @6326
 80312: 7b 1b 50                 u64 [sp + 0x50] = a4
 80315: 33 07                    a0 = 0
 80317: 96 69 18                 a2 = s1 * 0x18
 80320: 82 1a 48                 a3 = u64 [sp + 0x48]
 80323: c8 a9 09                 a2 = a2 + a3
 80326: 95 90 10                 ra = a2 + 0x10
 80329: 95 9c 08                 a5 = a2 + 0x8
 80332: 82 1a 28                 a3 = u64 [sp + 0x28]
 80335: 01                       fallthrough
      :                          @6327
 80336: 82 19 60                 a2 = u64 [sp + 0x60]
 80339: 82 99                    a2 = u64 [a2]
 80341: ae 97 69 01              jump @6370 if a0 >=u a2
      :                          @6328
 80345: 64 5b                    a4 = s0
 80347: 82 19 58                 a2 = u64 [sp + 0x58]
 80350: 82 99                    a2 = u64 [a2]
 80352: c8 79 09                 a2 = a2 + a0
 80355: 46 09 01                 u8 [a2 + 0] = 0x1
 80358: aa 74 29 01              jump @6360 if t2 == a0
      :                          @6329
 80362: 82 a9                    a2 = u64 [a3]
 80364: 64 b5                    s0 = a4
 80366: ae 9b 4b 01              jump @6365 if a4 >=u a2
      :                          @6330
 80370: 82 a9 f8                 a2 = u64 [a3 + 0xfffffffffffffff8]
 80373: c8 59 09                 a2 = a2 + s0
 80376: 33 02 01                 t0 = 0x1
 80379: 78 92                    u8 [a2] = t0
 80381: 82 09                    a2 = u64 [ra]
 80383: ae 97 3f 01              jump @6370 if a0 >=u a2
      :                          @6331
 80387: 82 c9                    a2 = u64 [a5]
 80389: c8 79 09                 a2 = a2 + a0
 80392: 46 09 01                 u8 [a2 + 0] = 0x1
 80395: 82 a9                    a2 = u64 [a3]
 80397: ae 96 2f 01              jump @6368 if s1 >=u a2
      :                          @6332
 80401: 82 a9 f8                 a2 = u64 [a3 + 0xfffffffffffffff8]
 80404: 95 77 01                 a0 = a0 + 0x1
 80407: c8 69 09                 a2 = a2 + s1
 80410: 46 09 01                 u8 [a2 + 0] = 0x1
 80413: 95 aa 18                 a3 = a3 + 0x18
 80416: ab 73 b0                 jump @6327 if t1 != a0
      :                          @6333
 80419: 82 1b 50                 a4 = u64 [sp + 0x50]
 80422: 82 1c 38                 a5 = u64 [sp + 0x38]
 80425: 82 1a 30                 a3 = u64 [sp + 0x30]
 80428: 28 29 ff                 jump @6317
      :                          @6334
 80431: 82 a9                    a2 = u64 [a3]
 80433: 64 67                    a0 = s1
 80435: 01                       fallthrough
      :                          @6335
 80436: ae 97 07 01              jump @6367 if a0 >=u a2
      :                          @6336
 80440: 82 ca                    a3 = u64 [a5]
 80442: c8 7a 0a                 a3 = a3 + a0
 80445: 7c aa                    a3 = u8 [a3]
 80447: 52 0a 02 01              jump @6373 if a3 != 0
      :                          @6337
 80451: 95 77 01                 a0 = a0 + 0x1
 80454: ab 73 ee                 jump @6335 if t1 != a0
      :                          @6338
 80457: 28 c7 fe                 jump @6313
      :                          @6339
 80460: 49 11 68                 u64 [sp + 104] = 0
 80463: 49 11 70 08              u64 [sp + 112] = 0x8
 80467: 49 11 78                 u64 [sp + 120] = 0
 80470: 49 21 80 00              u64 [sp + 128] = 0
 80474: 49 21 88 00 08           u64 [sp + 136] = 0x8
 80479: 49 21 90 00              u64 [sp + 144] = 0
 80483: 01                       fallthrough
      :                          @6340
 80484: 82 17 90 00              a0 = u64 [sp + 0x90]
 80488: 82 19 88 00              a2 = u64 [sp + 0x88]
 80492: 82 1a 80 00              a3 = u64 [sp + 0x80]
 80496: 82 10 78                 ra = u64 [sp + 0x78]
 80499: 82 14 70                 t2 = u64 [sp + 0x70]
 80502: 82 18 08                 a1 = u64 [sp + 0x8]
 80505: 7b 87 10                 u64 [a1 + 0x10] = a0
 80508: 7b 89 08                 u64 [a1 + 0x8] = a2
 80511: 7b 8a                    u64 [a1] = a3
 80513: 51 00 4a                 jump @6352 if ra == 0
      :                          @6341
 80516: 33 09                    a2 = 0
 80518: 33 03 18                 t1 = 0x18
 80521: 33 02 00 00 10           t0 = 0x100000
 80526: 33 0c b0 02 03           a5 = 0x302b0
 80531: c8 2c 0a                 a3 = a5 + t0
 80534: 28 08                    jump @6343
      :                          @6342
 80536: 95 99 01                 a2 = a2 + 0x1
 80539: aa 09 30                 jump @6352 if a2 == ra
      :                          @6343
 80542: ca 39 07                 a0 = a2 * t1
 80545: c8 47 07                 a0 = a0 + t2
 80548: 82 76                    s1 = u64 [a0]
 80550: 51 06 f2                 jump @6342 if s1 == 0
      :                          @6344
 80553: ac 62 ef                 jump @6342 if t0 <u s1
      :                          @6345
 80556: 82 75 08                 s0 = u64 [a0 + 0x8]
 80559: 01                       fallthrough
      :                          @6346
 80560: 82 a7                    a0 = u64 [a3]
 80562: c9 7a 0c                 a5 = a3 - a0
 80565: ab 5c e3                 jump @6342 if a5 != s0
      :                          @6347
 80568: c9 67 0c                 a5 = a0 - s1
 80571: 01                       fallthrough
      :                          @6348
 80572: 82 ab                    a4 = u64 [a3]
 80574: ab 7b f2                 jump @6346 if a4 != a0
      :                          @6349
 80577: 7b ac                    u64 [a3] = a5
 80579: 33 08                    a1 = 0
 80581: 01                       fallthrough
      :                          @6350
 80582: ab 7b ea                 jump @6346 if a4 != a0
      :                          @6351
 80585: 28 cf                    jump @6342
      :                          @6352
 80587: 82 18 68                 a1 = u64 [sp + 0x68]
 80590: 51 08 2f                 jump @6359 if a1 == 0
      :                          @6353
 80593: 33 07 aa aa 00           a0 = 0xaaaa
 80598: ac 87 27                 jump @6359 if a0 <u a1
      :                          @6354
 80601: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 80604: 33 09 b0 02 03           a2 = 0x302b0
 80609: 95 99 00 00 10           a2 = a2 + 0x100000
 80614: 01                       fallthrough
      :                          @6355
 80615: 82 97                    a0 = u64 [a2]
 80617: c9 79 0a                 a3 = a2 - a0
 80620: ab 4a 11                 jump @6359 if a3 != t2
      :                          @6356
 80623: c8 87 0a                 a3 = a0 + a1
 80626: 01                       fallthrough
      :                          @6357
 80627: 82 9b                    a4 = u64 [a2]
 80629: ab 7b f2                 jump @6355 if a4 != a0
      :                          @6358
 80632: 7b 9a                    u64 [a2] = a3
 80634: 33 0c                    a5 = 0
 80636: 01                       fallthrough
      :                          @6359
 80637: 82 10 a8 00              ra = u64 [sp + 0xa8]
 80641: 82 15 a0 00              s0 = u64 [sp + 0xa0]
 80645: 82 16 98 00              s1 = u64 [sp + 0x98]
 80649: 95 11 b0 00              sp = sp + 0xb0
 80653: 32 00                    ret
      :                          @6360
 80655: 00                       trap
      :                          @6361
 80656: 82 17 60                 a0 = u64 [sp + 0x60]
 80659: 82 77                    a0 = u64 [a0]
 80661: 51 07 28                 jump @6369 if a0 == 0
      :                          @6362
 80664: 82 17 58                 a0 = u64 [sp + 0x58]
 80667: 82 77                    a0 = u64 [a0]
 80669: 46 07 01                 u8 [a0 + 0] = 0x1
 80672: 51 04 1f                 jump @6371 if t2 == 0
      :                          @6363
 80675: 82 17 48                 a0 = u64 [sp + 0x48]
 80678: 82 79 10                 a2 = u64 [a0 + 0x10]
 80681: ae 95 10                 jump @6365 if s0 >=u a2
      :                          @6364
 80684: 82 17 48                 a0 = u64 [sp + 0x48]
 80687: 82 77 08                 a0 = u64 [a0 + 0x8]
 80690: c8 57 07                 a0 = a0 + s0
 80693: 46 07 01                 u8 [a0 + 0] = 0x1
 80696: 00                       trap
      :                          @6365
 80697: 00                       trap
      :                          @6366
 80698: 00                       trap
      :                          @6367
 80699: 00                       trap
      :                          @6368
 80700: 00                       trap
      :                          @6369
 80701: 00                       trap
      :                          @6370
 80702: 00                       trap
      :                          @6371
 80703: 00                       trap
      :                          @6372
 80704: 00                       trap
      :                          @6373
 80705: 00                       trap
      :                          @6374
 80706: 95 11 98                 sp = sp + 0xffffffffffffff98
 80709: 7b 10 60                 u64 [sp + 0x60] = ra
 80712: 7b 15 58                 u64 [sp + 0x58] = s0
 80715: 7b 16 50                 u64 [sp + 0x50] = s1
 80718: 7b 18 20                 u64 [sp + 0x20] = a1
 80721: 51 09 8e 02              jump @6434 if a2 == 0
      :                          @6375
 80725: 64 9a                    a3 = a2
 80727: 57 09 87 02              jump @6433 if a2 <s 0
      :                          @6376
 80731: 64 a9                    a2 = a3
 80733: 85 a5 ff                 s0 = a3 ^ 0xffffffffffffffff
 80736: 98 55 3f                 s0 = s0 >> 0x3f
 80739: 33 0a b0 02 03           a3 = 0x302b0
 80744: 33 02 00 00 10           t0 = 0x100000
 80749: c8 2a 0a                 a3 = a3 + t0
 80752: 01                       fallthrough
      :                          @6377
 80753: 82 a8                    a1 = u64 [a3]
 80755: c8 98 06                 s1 = a1 + a2
 80758: ac 86 13 dd 01           jump @13937 if s1 <u a1
      :                          @6378
 80763: c8 56 0b                 a4 = s1 + s0
 80766: d8 6b 0c                 a5 = a4 <u s1
 80769: d8 b2 0b                 a4 = t0 <u a4
 80772: d4 cb 0b                 a4 = a4 | a5
 80775: 52 0b 02 dd 01           jump @13937 if a4 != 0
      :                          @6379
 80780: 82 ab                    a4 = u64 [a3]
 80782: ab 8b e3                 jump @6377 if a4 != a1
      :                          @6380
 80785: 7b a6                    u64 [a3] = s1
 80787: 33 0c                    a5 = 0
 80789: 7b 18 18                 u64 [sp + 0x18] = a1
 80792: 7b 17 38                 u64 [sp + 0x38] = a0
 80795: 33 05 b0 02 03           s0 = 0x302b0
 80800: 95 57 00 00 10           a0 = s0 + 0x100000
 80805: c9 67 07                 a0 = a0 - s1
 80808: 7b 17 48                 u64 [sp + 0x48] = a0
 80811: 33 08                    a1 = 0
 80813: 64 96                    s1 = a2
 80815: 50 20 d6 03 5e d0 01     ra = 982, jump @13689
      :                          @6381 [@dyn 491]
 80822: 98 67 3c                 a0 = s1 >> 0x3c
 80825: 52 07 25 02              jump @6433 if a0 != 0
      :                          @6382
 80829: 88 7c 01                 a5 = a0 <u 0x1
 80832: 97 67 03                 a0 = s1 << 0x3
 80835: 97 c4 03                 t2 = a5 << 0x3
 80838: 95 58 00 00 10           a1 = s0 + 0x100000
 80843: 64 5c                    a5 = s0
 80845: 33 00 00 00 10           ra = 0x100000
 80850: 01                       fallthrough
      :                          @6383
 80851: 82 82                    t0 = u64 [a1]
 80853: c8 72 05                 s0 = t0 + a0
 80856: ac 25 05 02              jump @6432 if s0 <u t0
      :                          @6384
 80860: c8 45 09                 a2 = s0 + t2
 80863: d8 59 0a                 a3 = a2 <u s0
 80866: d8 90 09                 a2 = ra <u a2
 80869: d4 a9 09                 a2 = a2 | a3
 80872: 52 09 f5 01              jump @6432 if a2 != 0
      :                          @6385
 80876: c9 5c 09                 a2 = a5 - s0
 80879: c8 09 09                 a2 = a2 + ra
 80882: 84 93 07                 t1 = a2 & 0x7
 80885: c8 35 05                 s0 = s0 + t1
 80888: 01                       fallthrough
      :                          @6386
 80889: 82 8a                    a3 = u64 [a1]
 80891: ab 2a d8                 jump @6383 if a3 != t0
      :                          @6387
 80894: 7b 85                    u64 [a1] = s0
 80896: 01                       fallthrough
      :                          @6388
 80897: 33 0b f8 ff 0f           a4 = 0xffff8
 80902: c9 39 0a                 a3 = a2 - t1
 80905: 33 08 01                 a1 = 0x1
 80908: 7b 17 08                 u64 [sp + 0x8] = a0
 80911: 7b 1a 30                 u64 [sp + 0x30] = a3
 80914: 53 16 02 41              jump @6391 if s1 <u 2
      :                          @6389
 80918: 95 79 f8                 a2 = a0 + 0xfffffffffffffff8
 80921: 33 08 ff 00              a1 = 0xff
 80925: 64 a7                    a0 = a3
 80927: 7b 12 40                 u64 [sp + 0x40] = t0
 80930: 7b 13 28                 u64 [sp + 0x28] = t1
 80933: 49 01 f8 ff 0f           u64 [sp + 0] = 0xffff8
 80938: 50 20 d8 03 e3 cf 01     ra = 984, jump @13689
      :                          @6390 [@dyn 492]
 80945: 82 1b                    a4 = u64 [sp]
 80947: 82 13 28                 t1 = u64 [sp + 0x28]
 80950: 82 12 40                 t0 = u64 [sp + 0x40]
 80953: 82 1a 30                 a3 = u64 [sp + 0x30]
 80956: 82 17 08                 a0 = u64 [sp + 0x8]
 80959: c8 b7 09                 a2 = a0 + a4
 80962: 33 08 b0 02 03           a1 = 0x302b0
 80967: c8 98 08                 a1 = a1 + a2
 80970: c9 58 09                 a2 = a1 - s0
 80973: 49 09 ff                 u64 [a2 + 0] = 0xffffffffffffffff
 80976: 64 68                    a1 = s1
 80978: 01                       fallthrough
      :                          @6391
 80979: 49 11 40                 u64 [sp + 64] = 0
 80982: 33 0c                    a5 = 0
 80984: 49 0a                    u64 [a3 + 0] = 0
 80986: c9 7b 07                 a0 = a4 - a0
 80989: c8 32 09                 a2 = t0 + t1
 80992: 33 0a b0 02 03           a3 = 0x302b0
 80997: c8 a7 07                 a0 = a0 + a3
 81000: c9 97 07                 a0 = a0 - a2
 81003: 82 19 38                 a2 = u64 [sp + 0x38]
 81006: 82 94 10                 t2 = u64 [a2 + 0x10]
 81009: 82 92 08                 t0 = u64 [a2 + 0x8]
 81012: 95 77 10                 a0 = a0 + 0x10
 81015: 7b 17 28                 u64 [sp + 0x28] = a0
 81018: 82 17 18                 a0 = u64 [sp + 0x18]
 81021: c9 7a 09                 a2 = a3 - a0
 81024: 95 99 00 00 10           a2 = a2 + 0x100000
 81029: 9a 67                    a0 = -s1
 81031: 7b 17 18                 u64 [sp + 0x18] = a0
 81034: 33 03 18                 t1 = 0x18
 81037: 82 15 48                 s0 = u64 [sp + 0x48]
 81040: 7b 16 10                 u64 [sp + 0x10] = s1
 81043: 28 0f                    jump @6393
      :                          @6392
 81045: 82 16 10                 s1 = u64 [sp + 0x10]
 81048: 82 15 48                 s0 = u64 [sp + 0x48]
 81051: 82 1c 38                 a5 = u64 [sp + 0x38]
 81054: aa 6c c7 00              jump @6412 if a5 == s1
      :                          @6393
 81058: 33 0b                    a4 = 0
 81060: 95 cc 01                 a5 = a5 + 0x1
 81063: 7b 1c 38                 u64 [sp + 0x38] = a5
 81066: 82 17 28                 a0 = u64 [sp + 0x28]
 81069: 01                       fallthrough
      :                          @6394
 81070: aa b6 2e 01              jump @6431 if s1 == a4
      :                          @6395
 81074: 64 ba                    a3 = a4
 81076: 64 70                    ra = a0
 81078: c8 b5 07                 a0 = s0 + a4
 81081: 7c 7c                    a5 = u8 [a0]
 81083: 95 bb 01                 a4 = a4 + 0x1
 81086: 95 07 08                 a0 = ra + 0x8
 81089: 52 0c ed                 jump @6394 if a5 != 0
      :                          @6396
 81092: ae 8a 16 01              jump @6429 if a3 >=u a1
      :                          @6397
 81096: ae 6b 36                 jump @6404 if a4 >=u s1
      :                          @6398
 81099: 97 a7 03                 a0 = a3 << 0x3
 81102: 82 1c 30                 a5 = u64 [sp + 0x30]
 81105: c8 c7 07                 a0 = a0 + a5
 81108: 82 77                    a0 = u64 [a0]
 81110: 28 1a                    jump @6401
      :                          @6399
 81112: 82 0c                    a5 = u64 [ra]
 81114: d8 7c 05                 s0 = a5 <u a0
 81117: db 5b 0a                 a3 = a4 if s0 != 0
 81120: 82 15 48                 s0 = u64 [sp + 0x48]
 81123: e6 c7 07                 a0 = minu(a0, a5)
 81126: 01                       fallthrough
      :                          @6400
 81127: 95 bb 01                 a4 = a4 + 0x1
 81130: 95 00 08                 ra = ra + 0x8
 81133: aa b6 11                 jump @6404 if s1 == a4
      :                          @6401
 81136: c8 b5 0c                 a5 = s0 + a4
 81139: 7c cc                    a5 = u8 [a5]
 81141: 52 0c f2                 jump @6400 if a5 != 0
      :                          @6402
 81144: ac 8b e0                 jump @6399 if a4 <u a1
      :                          @6403
 81147: 28 de 00                 jump @6428
      :                          @6404
 81150: ae 6a dd 00              jump @6430 if a3 >=u s1
      :                          @6405
 81154: c8 a5 07                 a0 = s0 + a3
 81157: 46 07 01                 u8 [a0 + 0] = 0x1
 81160: 97 aa 03                 a3 = a3 << 0x3
 81163: 82 16 30                 s1 = u64 [sp + 0x30]
 81166: c8 a6 07                 a0 = s1 + a3
 81169: 82 77                    a0 = u64 [a0]
 81171: 82 1b 40                 a4 = u64 [sp + 0x40]
 81174: c8 7b 0b                 a4 = a4 + a0
 81177: 7b 1b 40                 u64 [sp + 0x40] = a4
 81180: 82 15 20                 s0 = u64 [sp + 0x20]
 81183: c8 a5 00                 ra = s0 + a3
 81186: 82 17 18                 a0 = u64 [sp + 0x18]
 81189: 28 0f                    jump @6407
      :                          @6406
 81191: 95 66 08                 s1 = s1 + 0x8
 81194: 95 77 01                 a0 = a0 + 0x1
 81197: 95 55 08                 s0 = s0 + 0x8
 81200: 51 07 65 ff              jump @6392 if a0 == 0
      :                          @6407
 81204: c8 79 0a                 a3 = a2 + a0
 81207: 7c aa                    a3 = u8 [a3]
 81209: 52 0a ee                 jump @6406 if a3 != 0
      :                          @6408
 81212: 82 0b                    a4 = u64 [ra]
 81214: ae 4b 99 00              jump @6426 if a4 >=u t2
      :                          @6409
 81218: 82 5a                    a3 = u64 [s0]
 81220: ca 3b 0c                 a5 = a4 * t1
 81223: c8 2c 0c                 a5 = a5 + t0
 81226: 82 cb 10                 a4 = u64 [a5 + 0x10]
 81229: ae ba 8b 00              jump @6427 if a3 >=u a4
      :                          @6410
 81233: 82 cb 08                 a4 = u64 [a5 + 0x8]
 81236: 97 aa 03                 a3 = a3 << 0x3
 81239: c8 ba 0a                 a3 = a3 + a4
 81242: 82 aa                    a3 = u64 [a3]
 81244: 82 6b                    a4 = u64 [s1]
 81246: ae ba c9                 jump @6406 if a3 >=u a4
      :                          @6411
 81249: 7b 6a                    u64 [s1] = a3
 81251: 28 c4                    jump @6406
      :                          @6412
 81253: 54 36 00 00 02 0e        jump @6415 if s1 <=u 131072
      :                          @6413
 81259: 54 36 00 00 10 3a        jump @6420 if s1 <=u 1048576
      :                          @6414
 81265: 28 55                    jump @6425
      :                          @6415
 81267: 33 07 b0 02 03           a0 = 0x302b0
 81272: 95 77 00 00 10           a0 = a0 + 0x100000
 81277: 82 12 08                 t0 = u64 [sp + 0x8]
 81280: 82 1c 30                 a5 = u64 [sp + 0x30]
 81283: 01                       fallthrough
      :                          @6416
 81284: 82 78                    a1 = u64 [a0]
 81286: c9 87 09                 a2 = a0 - a1
 81289: ab c9 1c                 jump @6420 if a2 != a5
      :                          @6417
 81292: c9 28 09                 a2 = a1 - t0
 81295: 01                       fallthrough
      :                          @6418
 81296: 82 7a                    a3 = u64 [a0]
 81298: ab 8a f2                 jump @6416 if a3 != a1
      :                          @6419
 81301: 7b 79                    u64 [a0] = a2
 81303: 33 0b                    a4 = 0
 81305: 33 07 b0 02 03           a0 = 0x302b0
 81310: 95 77 00 00 10           a0 = a0 + 0x100000
 81315: 28 0d                    jump @6421
      :                          @6420
 81317: 33 07 b0 02 03           a0 = 0x302b0
 81322: 95 77 00 00 10           a0 = a0 + 0x100000
 81327: 01                       fallthrough
      :                          @6421
 81328: 82 78                    a1 = u64 [a0]
 81330: c9 87 09                 a2 = a0 - a1
 81333: ab 59 11                 jump @6425 if a2 != s0
      :                          @6422
 81336: c9 68 09                 a2 = a1 - s1
 81339: 01                       fallthrough
      :                          @6423
 81340: 82 7a                    a3 = u64 [a0]
 81342: ab 8a f2                 jump @6421 if a3 != a1
      :                          @6424
 81345: 7b 79                    u64 [a0] = a2
 81347: 33 0b                    a4 = 0
 81349: 01                       fallthrough
      :                          @6425
 81350: 82 17 40                 a0 = u64 [sp + 0x40]
 81353: 82 10 60                 ra = u64 [sp + 0x60]
 81356: 82 15 58                 s0 = u64 [sp + 0x58]
 81359: 82 16 50                 s1 = u64 [sp + 0x50]
 81362: 95 11 68                 sp = sp + 0x68
 81365: 32 00                    ret
      :                          @6426
 81367: 00                       trap
      :                          @6427
 81368: 00                       trap
      :                          @6428
 81369: 00                       trap
      :                          @6429
 81370: 00                       trap
      :                          @6430
 81371: 00                       trap
      :                          @6431
 81372: 00                       trap
      :                          @6432
 81373: 00                       trap
      :                          @6433
 81374: 00                       trap
      :                          @6434
 81375: 00                       trap
      :                          @6435
 81376: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 81379: 7b 10 20                 u64 [sp + 0x20] = ra
 81382: 7b 15 18                 u64 [sp + 0x18] = s0
 81385: 7b 16 10                 u64 [sp + 0x10] = s1
 81388: 64 95                    s0 = a2
 81390: 7b 17 08                 u64 [sp + 0x8] = a0
 81393: 51 09 61                 jump @6443 if a2 == 0
      :                          @6436
 81396: 98 57 3b                 a0 = s0 >> 0x3b
 81399: 52 07 b4 00              jump @6450 if a0 != 0
      :                          @6437
 81403: 7b 15                    u64 [sp] = s0
 81405: 97 59 04                 a2 = s0 << 0x4
 81408: 88 72 01                 t0 = a0 <u 0x1
 81411: 97 22 03                 t0 = t0 << 0x3
 81414: 33 04 b0 02 03           t2 = 0x302b0
 81419: 33 03 00 00 10           t1 = 0x100000
 81424: c8 34 00                 ra = t2 + t1
 81427: 01                       fallthrough
      :                          @6438
 81428: 82 05                    s0 = u64 [ra]
 81430: c8 95 06                 s1 = s0 + a2
 81433: ac 56 91 00              jump @6449 if s1 <u s0
      :                          @6439
 81437: c8 26 07                 a0 = s1 + t0
 81440: d8 67 0b                 a4 = a0 <u s1
 81443: d8 73 07                 a0 = t1 <u a0
 81446: d4 b7 07                 a0 = a0 | a4
 81449: 52 07 81 00              jump @6449 if a0 != 0
      :                          @6440
 81453: c9 64 07                 a0 = t2 - s1
 81456: c8 37 07                 a0 = a0 + t1
 81459: 84 7b 07                 a4 = a0 & 0x7
 81462: c8 b6 06                 s1 = s1 + a4
 81465: 01                       fallthrough
      :                          @6441
 81466: 82 0a                    a3 = u64 [ra]
 81468: ab 5a d8                 jump @6438 if a3 != s0
      :                          @6442
 81471: 7b 06                    u64 [ra] = s1
 81473: 33 0c                    a5 = 0
 81475: c9 b7 06                 s1 = a0 - a4
 81478: 82 15                    s0 = u64 [sp]
 81480: 64 67                    a0 = s1
 81482: 33 00 da 03              ra = 0x3da
 81486: 28 92 cb 01              jump @13635
      :                          @6443
 81490: 33 06 08                 s1 = 0x8
 81493: 33 07 08                 a0 = 0x8
 81496: 50 20 da 03 88 cb 01     ra = 986, jump @13635
      :                          @6444 [@dyn 493]
 81503: 68 57                    a0 = clz s0
 81505: 9a 7a 40                 a3 = 0x40 - a0
 81508: 64 67                    a0 = s1
 81510: 64 58                    a1 = s0
 81512: 33 09                    a2 = 0
 81514: 50 20 dc 03 4f 02 ff     ra = 988, jump @1220
      :                          @6445 [@dyn 494]
 81521: 51 05 1a                 jump @6448 if s0 == 0
      :                          @6446
 81524: 64 57                    a0 = s0
 81526: 64 68                    a1 = s1
 81528: 64 69                    a2 = s1
 81530: 01                       fallthrough
      :                          @6447
 81531: 82 9a                    a3 = u64 [a2]
 81533: 7b 8a                    u64 [a1] = a3
 81535: 95 99 10                 a2 = a2 + 0x10
 81538: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 81541: 95 88 08                 a1 = a1 + 0x8
 81544: 52 07 f3                 jump @6447 if a0 != 0
      :                          @6448
 81547: 97 57 04                 a0 = s0 << 0x4
 81550: 98 77 03                 a0 = a0 >> 0x3
 81553: 82 18 08                 a1 = u64 [sp + 0x8]
 81556: 7b 87                    u64 [a1] = a0
 81558: 7b 86 08                 u64 [a1 + 0x8] = s1
 81561: 7b 85 10                 u64 [a1 + 0x10] = s0
 81564: 82 10 20                 ra = u64 [sp + 0x20]
 81567: 82 15 18                 s0 = u64 [sp + 0x18]
 81570: 82 16 10                 s1 = u64 [sp + 0x10]
 81573: 95 11 28                 sp = sp + 0x28
 81576: 32 00                    ret
      :                          @6449
 81578: 00                       trap
      :                          @6450
 81579: 00                       trap
      :                          @6451
 81580: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 81583: 7b 10 38                 u64 [sp + 0x38] = ra
 81586: 7b 15 30                 u64 [sp + 0x30] = s0
 81589: 7b 16 28                 u64 [sp + 0x28] = s1
 81592: 84 89 3f                 a2 = a1 & 0x3f
 81595: 7b 19 08                 u64 [sp + 0x8] = a2
 81598: 51 09 8c 00              jump @6465 if a2 == 0
      :                          @6452
 81602: 33 09                    a2 = 0
 81604: 33 06 01                 s1 = 0x1
 81607: 33 0a 18                 a3 = 0x18
 81610: 28 1f                    jump @6454
      :                          @6453
 81612: 82 1c 10                 a5 = u64 [sp + 0x10]
 81615: 84 cc 01                 a5 = a5 & 0x1
 81618: 9a b9                    a2 = -a4
 81620: db cb 09                 a2 = a4 if a5 != 0
 81623: 82 1b 08                 a4 = u64 [sp + 0x8]
 81626: 82 16 18                 s1 = u64 [sp + 0x18]
 81629: d0 b6 0b                 a4 = s1 >> a4
 81632: 82 1c 20                 a5 = u64 [sp + 0x20]
 81635: c8 c9 09                 a2 = a2 + a5
 81638: 52 0b 64                 jump @6465 if a4 != 0
      :                          @6454
 81641: 7b 19 20                 u64 [sp + 0x20] = a2
 81644: 33 0b                    a4 = 0
 81646: 33 02                    t0 = 0
 81648: 95 69 01                 a2 = s1 + 0x1
 81651: 7b 19 18                 u64 [sp + 0x18] = a2
 81654: 66 69                    a2 = cpop s1
 81656: 7b 19 10                 u64 [sp + 0x10] = a2
 81659: 33 0c 09                 a5 = 0x9
 81662: 28 14                    jump @6458
      :                          @6455
 81664: 95 bb 01                 a4 = a4 + 0x1
 81667: 55 15 09 c9              jump @6453 if s0 >=u 9
      :                          @6456
 81671: 33 09 09                 a2 = 0x9
 81674: e4 92 0c                 a5 = maxu(t0, a2)
 81677: 28 05                    jump @6458
      :                          @6457
 81679: aa c5 bd                 jump @6453 if s0 == a5
      :                          @6458
 81682: 33 03                    t1 = 0
 81684: 64 25                    s0 = t0
 81686: 95 22 01                 t0 = t0 + 0x1
 81689: 28 08                    jump @6460
      :                          @6459
 81691: 95 33 01                 t1 = t1 + 0x1
 81694: aa 83 e2                 jump @6455 if t1 == a1
      :                          @6460
 81697: d0 36 09                 a2 = s1 >> t1
 81700: 84 99 01                 a2 = a2 & 0x1
 81703: 51 09 f4                 jump @6459 if a2 == 0
      :                          @6461
 81706: ca a3 09                 a2 = t1 * a3
 81709: c8 79 09                 a2 = a2 + a0
 81712: 82 94 10                 t2 = u64 [a2 + 0x10]
 81715: 82 90 08                 ra = u64 [a2 + 0x8]
 81718: 97 44 03                 t2 = t2 << 0x3
 81721: 01                       fallthrough
      :                          @6462
 81722: 51 04 d5                 jump @6457 if t2 == 0
      :                          @6463
 81725: 82 09                    a2 = u64 [ra]
 81727: 95 00 08                 ra = ra + 0x8
 81730: 95 44 f8                 t2 = t2 + 0xfffffffffffffff8
 81733: ab 59 f5                 jump @6462 if a2 != s0
      :                          @6464
 81736: 28 d3                    jump @6459
      :                          @6465
 81738: 64 97                    a0 = a2
 81740: 82 10 38                 ra = u64 [sp + 0x38]
 81743: 82 15 30                 s0 = u64 [sp + 0x30]
 81746: 82 16 28                 s1 = u64 [sp + 0x28]
 81749: 95 11 40                 sp = sp + 0x40
 81752: 32 00                    ret
      :                          @6466
 81754: ca c9 09                 a2 = a2 * a5
 81757: 95 00 01                 ra = ra + 0x1
 81760: c8 94 04                 t2 = t2 + a2
 81763: aa 70 47                 jump @6475 if ra == a0
      :                          @6467
 81766: 64 09                    a2 = ra
 81768: 64 7c                    a5 = a0
 81770: 01                       fallthrough
      :                          @6468
 81771: 64 cb                    a4 = a5
 81773: cd c9 0c                 a5 = a2 %u a5
 81776: 64 b9                    a2 = a4
 81778: 52 0c f9                 jump @6468 if a5 != 0
      :                          @6469
 81781: 83 bc                    i32 a5 = a4 + 0
 81783: 51 0c 27                 jump @6474 if a5 == 0
      :                          @6470
 81786: 64 89                    a2 = a1
 81788: aa 2c de                 jump @6466 if a5 == t0
      :                          @6471
 81791: 33 0c 01                 a5 = 0x1
 81794: 64 89                    a2 = a1
 81796: 01                       fallthrough
      :                          @6472
 81797: 83 b5                    i32 s0 = a4 + 0
 81799: 84 b6 01                 s1 = a4 & 0x1
 81802: 33 0a 01                 a3 = 0x1
 81805: db 69 0a                 a3 = a2 if s1 != 0
 81808: ca ca 0c                 a5 = a3 * a5
 81811: 8b bb 01                 i32 a4 = a4 >> 0x1
 81814: ca 99 09                 a2 = a2 * a2
 81817: ac 53 ec                 jump @6472 if t1 <u s0
      :                          @6473
 81820: 28 be                    jump @6466
      :                          @6474
 81822: 33 09 01                 a2 = 0x1
 81825: c8 90 00                 ra = ra + a2
 81828: c8 94 04                 t2 = t2 + a2
 81831: ab 70 bf                 jump @6467 if ra != a0
      :                          @6475
 81834: cb 74 07                 a0 = t2 /u a0
 81837: 82 10 18                 ra = u64 [sp + 0x18]
 81840: 82 15 10                 s0 = u64 [sp + 0x10]
 81843: 82 16 08                 s1 = u64 [sp + 0x8]
 81846: 95 11 20                 sp = sp + 0x20
 81849: 32 00                    ret
      :                          @6476
 81851: 82 cb                    a4 = u64 [a5]
 81853: c8 3b 09                 a2 = a4 + t1
 81856: ac b9 0b 01              jump @6500 if a2 <u a4
      :                          @6477
 81860: 95 95 08                 s0 = a2 + 0x8
 81863: d8 95 06                 s1 = s0 <u a2
 81866: d8 54 05                 s0 = t2 <u s0
 81869: d4 65 05                 s0 = s0 | s1
 81872: 52 05 fb 00              jump @6500 if s0 != 0
      :                          @6478
 81876: c9 90 05                 s0 = ra - a2
 81879: c8 45 05                 s0 = s0 + t2
 81882: 84 56 07                 s1 = s0 & 0x7
 81885: c8 69 09                 a2 = a2 + s1
 81888: 01                       fallthrough
      :                          @6479
 81889: 82 ca                    a3 = u64 [a5]
 81891: ab ba d8                 jump @6476 if a3 != a4
      :                          @6480
 81894: 7b c9                    u64 [a5] = a2
 81896: 33 02                    t0 = 0
 81898: 33 0b                    a4 = 0
 81900: c9 65 09                 a2 = s0 - s1
 81903: 33 03 01                 t1 = 0x1
 81906: 28 23                    jump @6484
      :                          @6481
 81908: 64 bc                    a5 = a4
 81910: ca bc 0c                 a5 = a5 * a4
 81913: 28 06                    jump @6483
      :                          @6482
 81915: ca bc 0c                 a5 = a5 * a4
 81918: 01                       fallthrough
      :                          @6483
 81919: 95 b6 01                 s1 = a4 + 0x1
 81922: ca aa 0a                 a3 = a3 * a3
 81925: ca ca 0a                 a3 = a3 * a5
 81928: 97 bb 03                 a4 = a4 << 0x3
 81931: c8 9b 0b                 a4 = a4 + a2
 81934: 7b ba                    u64 [a4] = a3
 81936: 64 6b                    a4 = s1
 81938: aa 86 55                 jump @6494 if s1 == a1
      :                          @6484
 81941: 33 0a 01                 a3 = 0x1
 81944: 33 0c 01                 a5 = 0x1
 81947: 51 0b e4                 jump @6483 if a4 == 0
      :                          @6485
 81950: 64 8a                    a3 = a1
 81952: 64 bc                    a5 = a4
 81954: aa 3b d9                 jump @6482 if a4 == t1
      :                          @6486
 81957: 33 0a 01                 a3 = 0x1
 81960: 64 8c                    a5 = a1
 81962: 33 06 01                 s1 = 0x1
 81965: 01                       fallthrough
      :                          @6487
 81966: 95 65 01                 s0 = s1 + 0x1
 81969: ca ac 0a                 a3 = a5 * a3
 81972: cb 6a 0a                 a3 = a3 /u s1
 81975: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 81978: 64 56                    s1 = s0
 81980: ab 5b f2                 jump @6487 if a4 != s0
      :                          @6488
 81983: c9 b7 0c                 a5 = a0 - a4
 81986: ca ca 0a                 a3 = a3 * a5
 81989: cb ba 0a                 a3 = a3 /u a4
 81992: 51 0b 1a                 jump @6493 if a4 == 0
      :                          @6489
 81995: aa 3b a9                 jump @6481 if a4 == t1
      :                          @6490
 81998: 33 0c 01                 a5 = 0x1
 82001: 33 06 01                 s1 = 0x1
 82004: 01                       fallthrough
      :                          @6491
 82005: 95 65 01                 s0 = s1 + 0x1
 82008: ca c6 0c                 a5 = s1 * a5
 82011: 64 56                    s1 = s0
 82013: ab 5b f8                 jump @6491 if a4 != s0
      :                          @6492
 82016: 28 9b                    jump @6482
      :                          @6493
 82018: 33 0c 01                 a5 = 0x1
 82021: 28 9a                    jump @6483
      :                          @6494
 82023: 33 0a 01                 a3 = 0x1
 82026: 33 0b 01                 a4 = 0x1
 82029: aa a8 35                 jump @6499 if a1 == a3
      :                          @6495
 82032: 33 03 01                 t1 = 0x1
 82035: 64 8b                    a4 = a1
 82037: 33 0c 01                 a5 = 0x1
 82040: 33 0a 01                 a3 = 0x1
 82043: 01                       fallthrough
      :                          @6496
 82044: 95 a6 01                 s1 = a3 + 0x1
 82047: ca cb 0c                 a5 = a4 * a5
 82050: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 82053: cb ac 0c                 a5 = a5 /u a3
 82056: 64 6a                    a3 = s1
 82058: ab 3b f2                 jump @6496 if a4 != t1
      :                          @6497
 82061: cb 8c 0a                 a3 = a5 /u a1
 82064: 33 0b 01                 a4 = 0x1
 82067: 33 0c 01                 a5 = 0x1
 82070: 01                       fallthrough
      :                          @6498
 82071: 95 c6 01                 s1 = a5 + 0x1
 82074: ca bc 0b                 a4 = a5 * a4
 82077: 64 6c                    a5 = s1
 82079: ab 68 f8                 jump @6498 if a1 != s1
      :                          @6499
 82082: ca 8b 0b                 a4 = a4 * a1
 82085: ca aa 0a                 a3 = a3 * a3
 82088: ca ba 0a                 a3 = a3 * a4
 82091: 97 88 03                 a1 = a1 << 0x3
 82094: c8 98 08                 a1 = a1 + a2
 82097: 7b 8a                    u64 [a1] = a3
 82099: 82 18                    a1 = u64 [sp]
 82101: 7b 87                    u64 [a1] = a0
 82103: 7b 89 08                 u64 [a1 + 0x8] = a2
 82106: 7b 87 10                 u64 [a1 + 0x10] = a0
 82109: 82 10 18                 ra = u64 [sp + 0x18]
 82112: 82 15 10                 s0 = u64 [sp + 0x10]
 82115: 82 16 08                 s1 = u64 [sp + 0x8]
 82118: 95 11 20                 sp = sp + 0x20
 82121: 32 00                    ret
      :                          @6500
 82123: 00                       trap
      :                          @6501
 82124: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 82127: 7b 10 28                 u64 [sp + 0x28] = ra
 82130: 7b 15 20                 u64 [sp + 0x20] = s0
 82133: 7b 16 18                 u64 [sp + 0x18] = s1
 82136: 8b 89 06                 i32 a2 = a1 >> 0x6
 82139: 97 9a 06                 a3 = a2 << 0x6
 82142: 52 0a 8d 00              jump @6514 if a3 != 0
      :                          @6502
 82146: 64 79                    a2 = a0
 82148: 84 87 3f                 a0 = a1 & 0x3f
 82151: 7b 17                    u64 [sp] = a0
 82153: 33 03                    t1 = 0
 82155: 51 07 70                 jump @6513 if a0 == 0
      :                          @6503
 82158: 95 90 10                 ra = a2 + 0x10
 82161: 33 0b 01                 a4 = 0x1
 82164: 28 1b                    jump @6505
      :                          @6504
 82166: 82 17 08                 a0 = u64 [sp + 0x8]
 82169: 84 77 01                 a0 = a0 & 0x1
 82172: 9a c9                    a2 = -a5
 82174: db 7c 09                 a2 = a5 if a0 != 0
 82177: 82 17                    a0 = u64 [sp]
 82179: 82 1b 10                 a4 = u64 [sp + 0x10]
 82182: d0 7b 07                 a0 = a4 >> a0
 82185: c8 93 03                 t1 = t1 + a2
 82188: 52 07 4f                 jump @6513 if a0 != 0
      :                          @6505
 82191: 33 07                    a0 = 0
 82193: 95 b9 01                 a2 = a4 + 0x1
 82196: 7b 19 10                 u64 [sp + 0x10] = a2
 82199: 66 b9                    a2 = cpop a4
 82201: 7b 19 08                 u64 [sp + 0x8] = a2
 82204: 33 0c 01                 a5 = 0x1
 82207: 28 0a                    jump @6507
      :                          @6506
 82209: ca c5 0c                 a5 = s0 * a5
 82212: 64 67                    a0 = s1
 82214: aa 86 d0                 jump @6504 if s1 == a1
      :                          @6507
 82217: 33 05                    s0 = 0
 82219: 33 02                    t0 = 0
 82221: 95 76 01                 s1 = a0 + 0x1
 82224: 64 04                    t2 = ra
 82226: 28 1a                    jump @6510
      :                          @6508
 82228: 82 4a f8                 a3 = u64 [t2 + 0xfffffffffffffff8]
 82231: 97 79 03                 a2 = a0 << 0x3
 82234: c8 a9 09                 a2 = a2 + a3
 82237: 82 99                    a2 = u64 [a2]
 82239: c8 95 05                 s0 = s0 + a2
 82242: 01                       fallthrough
      :                          @6509
 82243: 95 22 01                 t0 = t0 + 0x1
 82246: 95 44 18                 t2 = t2 + 0x18
 82249: aa 28 d8                 jump @6506 if a1 == t0
      :                          @6510
 82252: d0 2b 0a                 a3 = a4 >> t0
 82255: 84 aa 01                 a3 = a3 & 0x1
 82258: 51 0a f1                 jump @6509 if a3 == 0
      :                          @6511
 82261: 82 4a                    a3 = u64 [t2]
 82263: ac a7 dd                 jump @6508 if a0 <u a3
      :                          @6512
 82266: 00                       trap
      :                          @6513
 82267: 64 37                    a0 = t1
 82269: 82 10 28                 ra = u64 [sp + 0x28]
 82272: 82 15 20                 s0 = u64 [sp + 0x20]
 82275: 82 16 18                 s1 = u64 [sp + 0x18]
 82278: 95 11 30                 sp = sp + 0x30
 82281: 32 00                    ret
      :                          @6514
 82283: 00                       trap
      :                          @6515
 82284: 51 07 4f                 jump @6526 if a0 == 0
      :                          @6516
 82287: 33 03                    t1 = 0
 82289: ca 78 02                 t0 = a1 * a0
 82292: 95 7b ff                 a4 = a0 + 0xffffffffffffffff
 82295: 33 09 01                 a2 = 0x1
 82298: 64 8a                    a3 = a1
 82300: 28 05                    jump @6518
      :                          @6517
 82302: 64 8a                    a3 = a1
 82304: 01                       fallthrough
      :                          @6518
 82305: c8 ab 0c                 a5 = a4 + a3
 82308: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 82311: ca c9 09                 a2 = a2 * a5
 82314: 52 0a f7                 jump @6518 if a3 != 0
      :                          @6519
 82317: 95 33 01                 t1 = t1 + 0x1
 82320: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 82323: ab 73 eb                 jump @6517 if t1 != a0
      :                          @6520
 82326: 51 02 2c                 jump @6527 if t0 == 0
      :                          @6521
 82329: 33 08 01                 a1 = 0x1
 82332: 64 27                    a0 = t0
 82334: aa 82 12                 jump @6524 if t0 == a1
      :                          @6522
 82337: 33 07 01                 a0 = 0x1
 82340: 01                       fallthrough
      :                          @6523
 82341: 95 8a 01                 a3 = a1 + 0x1
 82344: ca 78 07                 a0 = a1 * a0
 82347: 64 a8                    a1 = a3
 82349: ab a2 f8                 jump @6523 if t0 != a3
      :                          @6524
 82352: ca 27 07                 a0 = a0 * t0
 82355: 51 09 15                 jump @6528 if a2 == 0
      :                          @6525
 82358: cb 97 07                 a0 = a0 /u a2
 82361: 32 00                    ret
      :                          @6526
 82363: 33 07 01                 a0 = 0x1
 82366: 28 f8 d5 00              jump @10166
      :                          @6527
 82370: 33 07 01                 a0 = 0x1
 82373: 52 09 f1                 jump @6525 if a2 != 0
      :                          @6528
 82376: 00                       trap
      :                          @6529
 82377: 51 07 63                 jump @6535 if a0 == 0
      :                          @6530
 82380: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 82383: 7b 15 08                 u64 [sp + 0x8] = s0
 82386: 7b 16                    u64 [sp] = s1
 82388: 33 02                    t0 = 0
 82390: 33 06                    s1 = 0
 82392: 33 03 01                 t1 = 0x1
 82395: 33 0c 01                 a5 = 0x1
 82398: 33 09 01                 a2 = 0x1
 82401: 33 0a 01                 a3 = 0x1
 82404: 28 22                    jump @6532
      :                          @6531
 82406: 64 c8                    a1 = a5
 82408: ca cc 0c                 a5 = a5 * a5
 82411: ca a9 0b                 a4 = a2 * a3
 82414: c8 bc 0c                 a5 = a5 + a4
 82417: c8 68 08                 a1 = a1 + s1
 82420: ca 98 09                 a2 = a1 * a2
 82423: ca a8 0a                 a3 = a1 * a3
 82426: ca 66 06                 s1 = s1 * s1
 82429: 98 77 01                 a0 = a0 >> 0x1
 82432: c8 b6 06                 s1 = s1 + a4
 82435: 51 07 1d                 jump @6534 if a0 == 0
      :                          @6532
 82438: 84 78 01                 a1 = a0 & 0x1
 82441: 51 08 dd                 jump @6531 if a1 == 0
      :                          @6533
 82444: ca c3 04                 t2 = t1 * a5
 82447: ca a2 05                 s0 = t0 * a3
 82450: ca 93 08                 a1 = t1 * a2
 82453: c8 54 03                 t1 = t2 + s0
 82456: ca 62 02                 t0 = t0 * s1
 82459: c8 82 02                 t0 = t0 + a1
 82462: 28 c8                    jump @6531
      :                          @6534
 82464: 82 15 08                 s0 = u64 [sp + 0x8]
 82467: 82 16                    s1 = u64 [sp]
 82469: 95 11 10                 sp = sp + 0x10
 82472: 64 27                    a0 = t0
 82474: 32 00                    ret
      :                          @6535
 82476: 33 07                    a0 = 0
 82478: 28 fb b3 00              jump @9651
      :                          @6536
 82482: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 82485: 7b 10 40                 u64 [sp + 0x40] = ra
 82488: 7b 15 38                 u64 [sp + 0x38] = s0
 82491: 7b 16 30                 u64 [sp + 0x30] = s1
 82494: 95 79 01                 a2 = a0 + 0x1
 82497: 51 09 71 01              jump @6565 if a2 == 0
      :                          @6537
 82501: 64 85                    s0 = a1
 82503: 98 98 3c                 a1 = a2 >> 0x3c
 82506: 52 08 69 01              jump @6566 if a1 != 0
      :                          @6538
 82510: 7b 17 08                 u64 [sp + 0x8] = a0
 82513: 88 82 01                 t0 = a1 <u 0x1
 82516: 7b 19 28                 u64 [sp + 0x28] = a2
 82519: 97 99 03                 a2 = a2 << 0x3
 82522: 97 22 03                 t0 = t0 << 0x3
 82525: 33 04 b0 02 03           t2 = 0x302b0
 82530: 33 03 00 00 10           t1 = 0x100000
 82535: c8 34 00                 ra = t2 + t1
 82538: 01                       fallthrough
      :                          @6539
 82539: 82 0b                    a4 = u64 [ra]
 82541: c8 9b 0c                 a5 = a4 + a2
 82544: ac bc 41 01              jump @6564 if a5 <u a4
      :                          @6540
 82548: c8 2c 07                 a0 = a5 + t0
 82551: d8 c7 06                 s1 = a0 <u a5
 82554: d8 73 07                 a0 = t1 <u a0
 82557: d4 67 07                 a0 = a0 | s1
 82560: 52 07 31 01              jump @6564 if a0 != 0
      :                          @6541
 82564: c9 c4 06                 s1 = t2 - a5
 82567: c8 36 0a                 a3 = s1 + t1
 82570: 84 a6 07                 s1 = a3 & 0x7
 82573: c8 6c 0c                 a5 = a5 + s1
 82576: 01                       fallthrough
      :                          @6542
 82577: 82 07                    a0 = u64 [ra]
 82579: ab b7 d8                 jump @6539 if a0 != a4
      :                          @6543
 82582: 7b 0c                    u64 [ra] = a5
 82584: c9 6a 06                 s1 = a3 - s1
 82587: 64 67                    a0 = s1
 82589: 33 08                    a1 = 0
 82591: 7b 19                    u64 [sp] = a2
 82593: 50 20 de 03 6c c9 01     ra = 990, jump @13689
      :                          @6544 [@dyn 495]
 82600: 33 07 01                 a0 = 0x1
 82603: 64 64                    t2 = s1
 82605: 7b 67                    u64 [s1] = a0
 82607: 82 19 08                 a2 = u64 [sp + 0x8]
 82610: 51 09 cc 00              jump @6556 if a2 == 0
      :                          @6545
 82614: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
 82617: 7b 17 20                 u64 [sp + 0x20] = a0
 82620: 33 07 01                 a0 = 0x1
 82623: 82 1c 28                 a5 = u64 [sp + 0x28]
 82626: 33 02 01                 t0 = 0x1
 82629: 28 1a                    jump @6547
      :                          @6546
 82631: 82 19 08                 a2 = u64 [sp + 0x8]
 82634: 82 1a 18                 a3 = u64 [sp + 0x18]
 82637: d8 a9 07                 a0 = a2 <u a3
 82640: 85 77 01                 a0 = a0 ^ 0x1
 82643: 82 18 10                 a1 = u64 [sp + 0x10]
 82646: d2 78 08                 a1 = a1 & a0
 82649: 64 a7                    a0 = a3
 82651: 51 08 93 00              jump @6555 if a1 == 0
      :                          @6547
 82655: ae c7 d1 00              jump @6563 if a0 >=u a5
      :                          @6548
 82659: d8 97 08                 a1 = a0 <u a2
 82662: 7b 18 10                 u64 [sp + 0x10] = a1
 82665: c8 78 08                 a1 = a1 + a0
 82668: 7b 18 18                 u64 [sp + 0x18] = a1
 82671: 97 76 03                 s1 = a0 << 0x3
 82674: c8 46 06                 s1 = s1 + t2
 82677: 82 6b                    a4 = u64 [s1]
 82679: 33 08 01                 a1 = 0x1
 82682: 33 03 02                 t1 = 0x2
 82685: 33 0a 05                 a3 = 0x5
 82688: 33 09 02                 a2 = 0x2
 82691: 28 1e                    jump @6551
      :                          @6549
 82693: 82 1c 28                 a5 = u64 [sp + 0x28]
 82696: 01                       fallthrough
      :                          @6550
 82697: ca 3a 08                 a1 = a3 * t1
 82700: 98 88 01                 a1 = a1 >> 0x1
 82703: 95 a9 02                 a2 = a3 + 0x2
 82706: ca 39 09                 a2 = a2 * t1
 82709: 98 99 01                 a2 = a2 >> 0x1
 82712: 95 33 01                 t1 = t1 + 0x1
 82715: 95 aa 03                 a3 = a3 + 0x3
 82718: ac 87 a9                 jump @6546 if a0 <u a1
      :                          @6551
 82721: c9 87 08                 a1 = a0 - a1
 82724: ae c8 8b 00              jump @6562 if a1 >=u a5
      :                          @6552
 82728: 97 88 03                 a1 = a1 << 0x3
 82731: c8 48 08                 a1 = a1 + t2
 82734: 82 88                    a1 = u64 [a1]
 82736: 83 3c ff                 i32 a5 = t1 + 0xffffffffffffffff
 82739: 84 cc 01                 a5 = a5 & 0x1
 82742: 82 10 20                 ra = u64 [sp + 0x20]
 82745: db c2 00                 ra = t0 if a5 != 0
 82748: ca 08 08                 a1 = a1 * ra
 82751: cd 58 08                 a1 = a1 %u s0
 82754: c8 b8 08                 a1 = a1 + a4
 82757: cd 58 0b                 a4 = a1 %u s0
 82760: 7b 6b                    u64 [s1] = a4
 82762: ac 97 bb                 jump @6549 if a0 <u a2
      :                          @6553
 82765: c9 97 08                 a1 = a0 - a2
 82768: 82 1c 28                 a5 = u64 [sp + 0x28]
 82771: ae c8 5c                 jump @6562 if a1 >=u a5
      :                          @6554
 82774: 97 88 03                 a1 = a1 << 0x3
 82777: c8 48 08                 a1 = a1 + t2
 82780: 82 88                    a1 = u64 [a1]
 82782: ca 08 08                 a1 = a1 * ra
 82785: cd 58 08                 a1 = a1 %u s0
 82788: c8 b8 08                 a1 = a1 + a4
 82791: cd 58 0b                 a4 = a1 %u s0
 82794: 7b 6b                    u64 [s1] = a4
 82796: 28 9d                    jump @6550
      :                          @6555
 82798: 97 97 03                 a0 = a2 << 0x3
 82801: c8 47 07                 a0 = a0 + t2
 82804: 82 77                    a0 = u64 [a0]
 82806: 33 08 00 00 02           a1 = 0x20000
 82811: ac c8 26                 jump @6561 if a1 <u a5
      :                          @6556
 82814: 33 08 b0 02 03           a1 = 0x302b0
 82819: 95 88 00 00 10           a1 = a1 + 0x100000
 82824: 82 16                    s1 = u64 [sp]
 82826: 01                       fallthrough
      :                          @6557
 82827: 82 89                    a2 = u64 [a1]
 82829: c9 98 0a                 a3 = a1 - a2
 82832: ab 4a 11                 jump @6561 if a3 != t2
      :                          @6558
 82835: c9 69 0a                 a3 = a2 - s1
 82838: 01                       fallthrough
      :                          @6559
 82839: 82 8b                    a4 = u64 [a1]
 82841: ab 9b f2                 jump @6557 if a4 != a2
      :                          @6560
 82844: 7b 8a                    u64 [a1] = a3
 82846: 33 0c                    a5 = 0
 82848: 01                       fallthrough
      :                          @6561
 82849: 82 10 40                 ra = u64 [sp + 0x40]
 82852: 82 15 38                 s0 = u64 [sp + 0x38]
 82855: 82 16 30                 s1 = u64 [sp + 0x30]
 82858: 95 11 48                 sp = sp + 0x48
 82861: 32 00                    ret
      :                          @6562
 82863: 00                       trap
      :                          @6563
 82864: 00                       trap
      :                          @6564
 82865: 00                       trap
      :                          @6565
 82866: 00                       trap
      :                          @6566
 82867: 00                       trap
      :                          @6567
 82868: 51 18 01 bd d7 00        jump @10206 if a1 == 1
      :                          @6568
 82874: 83 79                    i32 a2 = a0 + 0
 82876: 51 09 39                 jump @6573 if a2 == 0
      :                          @6569
 82879: 33 0b 01                 a4 = 0x1
 82882: 64 8a                    a3 = a1
 82884: aa b9 23                 jump @6572 if a2 == a4
      :                          @6570
 82887: 33 02 03                 t0 = 0x3
 82890: 64 8a                    a3 = a1
 82892: 33 09 01                 a2 = 0x1
 82895: 01                       fallthrough
      :                          @6571
 82896: 83 73                    i32 t1 = a0 + 0
 82898: 84 7b 01                 a4 = a0 & 0x1
 82901: 33 0c 01                 a5 = 0x1
 82904: db ba 0c                 a5 = a3 if a4 != 0
 82907: ca 9c 09                 a2 = a5 * a2
 82910: 8b 77 01                 i32 a0 = a0 >> 0x1
 82913: ca aa 0a                 a3 = a3 * a3
 82916: ac 32 ec                 jump @6571 if t0 <u t1
      :                          @6572
 82919: ca 9a 09                 a2 = a3 * a2
 82922: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 82925: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 82928: cb 89 07                 a0 = a2 /u a1
 82931: 32 00                    ret
      :                          @6573
 82933: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 82936: cb 89 07                 a0 = a2 /u a1
 82939: 28 76 d7 00              jump @10206
      :                          @6574
 82943: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 82946: 7b 10 28                 u64 [sp + 0x28] = ra
 82949: 7b 15 20                 u64 [sp + 0x20] = s0
 82952: 7b 16 18                 u64 [sp + 0x18] = s1
 82955: 7b 18 08                 u64 [sp + 0x8] = a1
 82958: 51 07 11                 jump @6577 if a0 == 0
      :                          @6575
 82961: 64 75                    s0 = a0
 82963: 52 15 01 20              jump @6579 if s0 != 1
      :                          @6576
 82967: 82 16 08                 s1 = u64 [sp + 0x8]
 82970: 95 66 01                 s1 = s1 + 0x1
 82973: 28 06                    jump @6578
      :                          @6577
 82975: 33 06 01                 s1 = 0x1
 82978: 01                       fallthrough
      :                          @6578
 82979: 64 67                    a0 = s1
 82981: 82 10 28                 ra = u64 [sp + 0x28]
 82984: 82 15 20                 s0 = u64 [sp + 0x20]
 82987: 82 16 18                 s1 = u64 [sp + 0x18]
 82990: 95 11 30                 sp = sp + 0x30
 82993: 32 00                    ret
      :                          @6579
 82995: 82 17 08                 a0 = u64 [sp + 0x8]
 82998: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 83001: 7b 17                    u64 [sp] = a0
 83003: 51 07 ce 00              jump @6592 if a0 == 0
      :                          @6580
 83007: 33 00 03                 ra = 0x3
 83010: 33 06 01                 s1 = 0x1
 83013: 33 0b 01                 a4 = 0x1
 83016: 28 49                    jump @6585
      :                          @6581
 83018: 33 0a                    a3 = 0
 83020: 33 09 01                 a2 = 0x1
 83023: 01                       fallthrough
      :                          @6582
 83024: 95 97 ff                 a0 = a2 + 0xffffffffffffffff
 83027: d8 79 0b                 a4 = a2 <u a0
 83030: 88 98 01                 a1 = a2 <u 0x1
 83033: c9 8a 08                 a1 = a3 - a1
 83036: d8 8a 0a                 a3 = a3 <u a1
 83039: db 9b 0a                 a3 = a4 if a2 != 0
 83042: 94 a7                    a0 = 0 if a3 != 0
 83044: 94 a8                    a1 = 0 if a3 != 0
 83046: 82 19                    a2 = u64 [sp]
 83048: 50 20 e0 03 13 c5 01     ra = 992, jump @13631
      :                          @6583 [@dyn 496]
 83055: d6 76 08                 a1 = s1 mulhu a0
 83058: ca 76 06                 s1 = s1 * a0
 83061: 94 86 ff                 s1 = 0xffffffffffffffff if a1 != 0
 83064: 33 00 03                 ra = 0x3
 83067: 82 1b 10                 a4 = u64 [sp + 0x10]
 83070: 01                       fallthrough
      :                          @6584
 83071: d8 5b 07                 a0 = a4 <u s0
 83074: c8 7b 0b                 a4 = a4 + a0
 83077: 85 77 01                 a0 = a0 ^ 0x1
 83080: d8 b5 08                 a1 = s0 <u a4
 83083: d4 87 07                 a0 = a0 | a1
 83086: 52 07 95                 jump @6578 if a0 != 0
      :                          @6585
 83089: cd b5 07                 a0 = s0 %u a4
 83092: 52 07 eb                 jump @6584 if a0 != 0
      :                          @6586
 83095: 83 b7                    i32 a0 = a4 + 0
 83097: 7b 1b 10                 u64 [sp + 0x10] = a4
 83100: 51 07 ae                 jump @6581 if a0 == 0
      :                          @6587
 83103: 52 17 01 0b              jump @6589 if a0 != 1
      :                          @6588
 83107: 33 0a                    a3 = 0
 83109: 82 19 08                 a2 = u64 [sp + 0x8]
 83112: 28 a8                    jump @6582
      :                          @6589
 83114: 64 64                    t2 = s1
 83116: 64 53                    t1 = s0
 83118: 33 09                    a2 = 0
 83120: 33 0a                    a3 = 0
 83122: 33 07 01                 a0 = 0x1
 83125: 82 18 08                 a1 = u64 [sp + 0x8]
 83128: 01                       fallthrough
      :                          @6590
 83129: 84 bc 01                 a5 = a4 & 0x1
 83132: 9a c5                    s0 = -a5
 83134: 83 b2                    i32 t0 = a4 + 0
 83136: 33 06 01                 s1 = 0x1
 83139: db c8 06                 s1 = a1 if a5 != 0
 83142: d2 95 05                 s0 = s0 & a2
 83145: ca a6 0a                 a3 = s1 * a3
 83148: d6 76 0c                 a5 = s1 mulhu a0
 83151: c8 ca 0a                 a3 = a3 + a5
 83154: ca 75 0c                 a5 = s0 * a0
 83157: c8 ca 0a                 a3 = a3 + a5
 83160: ca 76 07                 a0 = s1 * a0
 83163: 8b bb 01                 i32 a4 = a4 >> 0x1
 83166: ca 98 09                 a2 = a1 * a2
 83169: d6 88 0c                 a5 = a1 mulhu a1
 83172: c8 9c 0c                 a5 = a5 + a2
 83175: c8 c9 09                 a2 = a2 + a5
 83178: ca 88 08                 a1 = a1 * a1
 83181: ac 20 cc                 jump @6590 if ra <u t0
      :                          @6591
 83184: d6 87 0b                 a4 = a0 mulhu a1
 83187: ca 97 09                 a2 = a0 * a2
 83190: c8 b9 09                 a2 = a2 + a4
 83193: ca 8a 0a                 a3 = a3 * a1
 83196: c8 9a 0a                 a3 = a3 + a2
 83199: ca 87 09                 a2 = a0 * a1
 83202: 64 35                    s0 = t1
 83204: 64 46                    s1 = t2
 83206: 28 4a ff                 jump @6582
      :                          @6592
 83209: 33 06 01                 s1 = 0x1
 83212: 33 07 ff                 a0 = 0xffffffffffffffff
 83215: 33 08 01                 a1 = 0x1
 83218: 28 15                    jump @6594
      :                          @6593
 83220: d8 58 09                 a2 = a1 <u s0
 83223: c8 98 08                 a1 = a1 + a2
 83226: 85 99 01                 a2 = a2 ^ 0x1
 83229: d8 85 0a                 a3 = s0 <u a1
 83232: d4 a9 09                 a2 = a2 | a3
 83235: 52 09 00 ff              jump @6578 if a2 != 0
      :                          @6594
 83239: cd 85 09                 a2 = s0 %u a1
 83242: 52 09 ea                 jump @6593 if a2 != 0
      :                          @6595
 83245: d6 86 09                 a2 = s1 mulhu a1
 83248: ca 86 06                 s1 = s1 * a1
 83251: db 97 06                 s1 = a0 if a2 != 0
 83254: 28 de                    jump @6593
      :                          @6596
 83256: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 83259: 7b 10 40                 u64 [sp + 0x40] = ra
 83262: 7b 15 38                 u64 [sp + 0x38] = s0
 83265: 7b 16 30                 u64 [sp + 0x30] = s1
 83268: 64 93                    t1 = a2
 83270: 98 9a 3c                 a3 = a2 >> 0x3c
 83273: 97 99 03                 a2 = a2 << 0x3
 83276: 7b 13 28                 u64 [sp + 0x28] = t1
 83279: 7b 17                    u64 [sp] = a0
 83281: 7b 18 18                 u64 [sp + 0x18] = a1
 83284: 7b 1a 20                 u64 [sp + 0x20] = a3
 83287: 51 03 61                 jump @6605 if t1 == 0
      :                          @6597
 83290: 52 0a e9 01              jump @6651 if a3 != 0
      :                          @6598
 83294: 88 a2 01                 t0 = a3 <u 0x1
 83297: 97 22 03                 t0 = t0 << 0x3
 83300: 33 04 b0 02 03           t2 = 0x302b0
 83305: 33 03 00 00 10           t1 = 0x100000
 83310: c8 34 0a                 a3 = t2 + t1
 83313: 01                       fallthrough
      :                          @6599
 83314: 82 ab                    a4 = u64 [a3]
 83316: c8 9b 0c                 a5 = a4 + a2
 83319: ac bc cb 01              jump @6650 if a5 <u a4
      :                          @6600
 83323: c8 2c 07                 a0 = a5 + t0
 83326: d8 c7 05                 s0 = a0 <u a5
 83329: d8 73 07                 a0 = t1 <u a0
 83332: d4 57 07                 a0 = a0 | s0
 83335: 52 07 bb 01              jump @6650 if a0 != 0
      :                          @6601
 83339: c9 c4 05                 s0 = t2 - a5
 83342: c8 35 05                 s0 = s0 + t1
 83345: 84 56 07                 s1 = s0 & 0x7
 83348: c8 6c 0c                 a5 = a5 + s1
 83351: 01                       fallthrough
      :                          @6602
 83352: 82 a7                    a0 = u64 [a3]
 83354: ab b7 d8                 jump @6599 if a0 != a4
      :                          @6603
 83357: 7b ac                    u64 [a3] = a5
 83359: c9 65 06                 s1 = s0 - s1
 83362: 64 67                    a0 = s1
 83364: 33 08                    a1 = 0
 83366: 64 95                    s0 = a2
 83368: 50 20 e2 03 65 c6 01     ra = 994, jump @13689
      :                          @6604 [@dyn 497]
 83375: 64 64                    t2 = s1
 83377: 64 59                    a2 = s0
 83379: 82 13 28                 t1 = u64 [sp + 0x28]
 83382: 28 06                    jump @6606
      :                          @6605
 83384: 33 04 08                 t2 = 0x8
 83387: 01                       fallthrough
      :                          @6606
 83388: 95 30 ff                 ra = t1 + 0xffffffffffffffff
 83391: 33 0b 01                 a4 = 0x1
 83394: 33 02 04                 t0 = 0x4
 83397: 01                       fallthrough
      :                          @6607
 83398: ac b0 69                 jump @6621 if ra <u a4
      :                          @6608
 83401: 64 b7                    a0 = a4
 83403: 33 06 01                 s1 = 0x1
 83406: 64 bc                    a5 = a4
 83408: ae 2b 21                 jump @6612 if a4 >=u t0
      :                          @6609
 83411: 88 cb 02                 a4 = a5 <u 0x2
 83414: 9a 6a                    a3 = -s1
 83416: db b6 0a                 a3 = s1 if a4 != 0
 83419: ae 37 53                 jump @6620 if a0 >=u t1
      :                          @6610
 83422: d8 07 0b                 a4 = a0 <u ra
 83425: c8 7b 0b                 a4 = a4 + a0
 83428: 97 78 03                 a1 = a0 << 0x3
 83431: c8 48 08                 a1 = a1 + t2
 83434: 7b 8a                    u64 [a1] = a3
 83436: ac 07 da                 jump @6607 if a0 <u ra
      :                          @6611
 83439: 28 40                    jump @6621
      :                          @6612
 83441: 33 08 02                 a1 = 0x2
 83444: 33 06 01                 s1 = 0x1
 83447: 64 7b                    a4 = a0
 83449: 28 17                    jump @6615
      :                          @6613
 83451: 64 bc                    a5 = a4
 83453: 01                       fallthrough
      :                          @6614
 83454: 95 8a fe                 a3 = a1 + 0xfffffffffffffffe
 83457: 88 aa 01                 a3 = a3 <u 0x1
 83460: c9 a8 08                 a1 = a1 - a3
 83463: 95 88 02                 a1 = a1 + 0x2
 83466: ca 88 0a                 a3 = a1 * a1
 83469: ac ac c6                 jump @6609 if a5 <u a3
      :                          @6615
 83472: 51 08 30 01              jump @6648 if a1 == 0
      :                          @6616
 83476: cb 8b 0c                 a5 = a4 /u a1
 83479: ca 8c 05                 s0 = a5 * a1
 83482: ab 5b e1                 jump @6613 if a4 != s0
      :                          @6617
 83485: cd 8c 0b                 a4 = a5 %u a1
 83488: 51 0b 09                 jump @6619 if a4 == 0
      :                          @6618
 83491: 9a 66                    s1 = -s1
 83493: 64 cb                    a4 = a5
 83495: 28 d7                    jump @6614
      :                          @6619
 83497: 33 0a                    a3 = 0
 83499: ac 37 b3                 jump @6610 if a0 <u t1
      :                          @6620
 83502: 00                       trap
      :                          @6621
 83503: 82 17 20                 a0 = u64 [sp + 0x20]
 83506: 52 07 11 01              jump @6651 if a0 != 0
      :                          @6622
 83510: 7b 10 08                 u64 [sp + 0x8] = ra
 83513: 7b 14 10                 u64 [sp + 0x10] = t2
 83516: 88 72 01                 t0 = a0 <u 0x1
 83519: 97 22 03                 t0 = t0 << 0x3
 83522: 33 04 b0 02 03           t2 = 0x302b0
 83527: 33 03 00 00 10           t1 = 0x100000
 83532: c8 34 0a                 a3 = t2 + t1
 83535: 01                       fallthrough
      :                          @6623
 83536: 82 ab                    a4 = u64 [a3]
 83538: c8 9b 0c                 a5 = a4 + a2
 83541: ac bc ed 00              jump @6650 if a5 <u a4
      :                          @6624
 83545: c8 2c 07                 a0 = a5 + t0
 83548: d8 c7 08                 a1 = a0 <u a5
 83551: d8 73 07                 a0 = t1 <u a0
 83554: d4 87 07                 a0 = a0 | a1
 83557: 52 07 dd 00              jump @6650 if a0 != 0
      :                          @6625
 83561: c9 c4 07                 a0 = t2 - a5
 83564: c8 37 07                 a0 = a0 + t1
 83567: 84 76 07                 s1 = a0 & 0x7
 83570: c8 6c 0c                 a5 = a5 + s1
 83573: 01                       fallthrough
      :                          @6626
 83574: 82 a8                    a1 = u64 [a3]
 83576: ab b8 d8                 jump @6623 if a1 != a4
      :                          @6627
 83579: 7b ac                    u64 [a3] = a5
 83581: c9 67 05                 s0 = a0 - s1
 83584: 64 57                    a0 = s0
 83586: 33 08                    a1 = 0
 83588: 7b 19 20                 u64 [sp + 0x20] = a2
 83591: 50 20 e4 03 86 c5 01     ra = 996, jump @13689
      :                          @6628 [@dyn 498]
 83598: 64 54                    t2 = s0
 83600: 33 0a 01                 a3 = 0x1
 83603: 82 18 28                 a1 = u64 [sp + 0x28]
 83606: 82 15 18                 s0 = u64 [sp + 0x18]
 83609: 82 12 10                 t0 = u64 [sp + 0x10]
 83612: 82 13 08                 t1 = u64 [sp + 0x8]
 83615: 01                       fallthrough
      :                          @6629
 83616: ac a3 5a                 jump @6639 if t1 <u a3
      :                          @6630
 83619: 64 a7                    a0 = a3
 83621: 33 0b                    a4 = 0
 83623: d8 3a 0a                 a3 = a3 <u t1
 83626: c8 7a 0a                 a3 = a3 + a0
 83629: 33 06 01                 s1 = 0x1
 83632: 28 2b                    jump @6633
      :                          @6631
 83634: 97 6c 03                 a5 = s1 << 0x3
 83637: c8 2c 0c                 a5 = a5 + t0
 83640: 82 cc                    a5 = u64 [a5]
 83642: 97 99 03                 a2 = a2 << 0x3
 83645: c8 59 09                 a2 = a2 + s0
 83648: 82 99                    a2 = u64 [a2]
 83650: ca c9 09                 a2 = a2 * a5
 83653: c8 9b 0b                 a4 = a4 + a2
 83656: 01                       fallthrough
      :                          @6632
 83657: d8 76 09                 a2 = s1 <u a0
 83660: c8 96 06                 s1 = s1 + a2
 83663: d8 67 0c                 a5 = a0 <u s1
 83666: 85 cc 01                 a5 = a5 ^ 0x1
 83669: d2 c9 09                 a2 = a2 & a5
 83672: 51 09 14                 jump @6637 if a2 == 0
      :                          @6633
 83675: cb 67 09                 a2 = a0 /u s1
 83678: ca 69 0c                 a5 = a2 * s1
 83681: ab c7 e8                 jump @6632 if a0 != a5
      :                          @6634
 83684: ae 86 5a                 jump @6646 if s1 >=u a1
      :                          @6635
 83687: ac 89 cb                 jump @6631 if a2 <u a1
      :                          @6636
 83690: 28 55                    jump @6647
      :                          @6637
 83692: ae 87 55                 jump @6649 if a0 >=u a1
      :                          @6638
 83695: 97 79 03                 a2 = a0 << 0x3
 83698: c8 49 09                 a2 = a2 + t2
 83701: 7b 9b                    u64 [a2] = a4
 83703: ac 37 a9                 jump @6629 if a0 <u t1
      :                          @6639
 83706: 82 19                    a2 = u64 [sp]
 83708: 7b 98                    u64 [a2] = a1
 83710: 7b 94 08                 u64 [a2 + 0x8] = t2
 83713: 33 07 00 00 02           a0 = 0x20000
 83718: 7b 98 10                 u64 [a2 + 0x10] = a1
 83721: 82 15 20                 s0 = u64 [sp + 0x20]
 83724: ac 87 24                 jump @6645 if a0 <u a1
      :                          @6640
 83727: 33 07 b0 02 03           a0 = 0x302b0
 83732: 95 77 00 00 10           a0 = a0 + 0x100000
 83737: 01                       fallthrough
      :                          @6641
 83738: 82 78                    a1 = u64 [a0]
 83740: c9 87 09                 a2 = a0 - a1
 83743: ab 29 11                 jump @6645 if a2 != t0
      :                          @6642
 83746: c9 58 09                 a2 = a1 - s0
 83749: 01                       fallthrough
      :                          @6643
 83750: 82 7a                    a3 = u64 [a0]
 83752: ab 8a f2                 jump @6641 if a3 != a1
      :                          @6644
 83755: 7b 79                    u64 [a0] = a2
 83757: 33 0b                    a4 = 0
 83759: 01                       fallthrough
      :                          @6645
 83760: 82 10 40                 ra = u64 [sp + 0x40]
 83763: 82 15 38                 s0 = u64 [sp + 0x38]
 83766: 82 16 30                 s1 = u64 [sp + 0x30]
 83769: 95 11 48                 sp = sp + 0x48
 83772: 32 00                    ret
      :                          @6646
 83774: 00                       trap
      :                          @6647
 83775: 00                       trap
      :                          @6648
 83776: 00                       trap
      :                          @6649
 83777: 00                       trap
      :                          @6650
 83778: 00                       trap
      :                          @6651
 83779: 00                       trap
      :                          @6652
 83780: 82 45                    s0 = u64 [t2]
 83782: 95 5b 30                 a4 = s0 + 0x30
 83785: ac 5b e8 01              jump @6704 if a4 <u s0
      :                          @6653
 83789: 95 ba 08                 a3 = a4 + 0x8
 83792: d8 ba 0c                 a5 = a3 <u a4
 83795: d8 a2 0a                 a3 = t0 <u a3
 83798: d4 ca 0a                 a3 = a3 | a5
 83801: 52 0a d8 01              jump @6704 if a3 != 0
      :                          @6654
 83805: c9 b3 0c                 a5 = t1 - a4
 83808: c8 2c 00                 ra = a5 + t0
 83811: 84 0a 07                 a3 = ra & 0x7
 83814: c8 ab 0b                 a4 = a4 + a3
 83817: 01                       fallthrough
      :                          @6655
 83818: 82 46                    s1 = u64 [t2]
 83820: ab 56 d8                 jump @6652 if s1 != s0
      :                          @6656
 83823: 7b 4b                    u64 [t2] = a4
 83825: 01                       fallthrough
      :                          @6657
 83826: c9 a0 0b                 a4 = ra - a3
 83829: 14 0a ff ff ff ff ff ff ff 3f a3 = 0x3fffffffffffffff
 83839: 7b ba 08                 u64 [a4 + 0x8] = a3
 83842: 7b ba 10                 u64 [a4 + 0x10] = a3
 83845: 7b ba 18                 u64 [a4 + 0x18] = a3
 83848: 7b ba 20                 u64 [a4 + 0x20] = a3
 83851: 7b ba 28                 u64 [a4 + 0x28] = a3
 83854: 49 0b                    u64 [a4 + 0] = 0
 83856: 33 0a 18                 a3 = 0x18
 83859: ca a9 02                 t0 = a2 * a3
 83862: 51 09 1d 01              jump @6688 if a2 == 0
      :                          @6658
 83866: c8 28 00                 ra = a1 + t0
 83869: 33 03 05                 t1 = 0x5
 83872: 33 04 06                 t2 = 0x6
 83875: 64 8c                    a5 = a1
 83877: 28 08                    jump @6660
      :                          @6659
 83879: 95 cc 18                 a5 = a5 + 0x18
 83882: aa 0c 2d                 jump @6664 if a5 == ra
      :                          @6660
 83885: 82 ca                    a3 = u64 [a5]
 83887: ac a3 80 01              jump @6702 if t1 <u a3
      :                          @6661
 83891: 82 c9 08                 a2 = u64 [a5 + 0x8]
 83894: ae 49 7a 01              jump @6703 if a2 >=u t2
      :                          @6662
 83898: 82 c5 10                 s0 = u64 [a5 + 0x10]
 83901: 97 aa 03                 a3 = a3 << 0x3
 83904: c8 ba 0a                 a3 = a3 + a4
 83907: 82 aa                    a3 = u64 [a3]
 83909: 97 99 03                 a2 = a2 << 0x3
 83912: c8 b9 09                 a2 = a2 + a4
 83915: 82 96                    s1 = u64 [a2]
 83917: c8 5a 0a                 a3 = a3 + s0
 83920: af 6a d7                 jump @6659 if a3 >=s s1
      :                          @6663
 83923: 7b 9a                    u64 [a2] = a3
 83925: 28 d2                    jump @6659
      :                          @6664
 83927: 33 03 05                 t1 = 0x5
 83930: 64 8c                    a5 = a1
 83932: 28 08                    jump @6666
      :                          @6665
 83934: 95 cc 18                 a5 = a5 + 0x18
 83937: aa 0c 2d                 jump @6670 if a5 == ra
      :                          @6666
 83940: 82 ca                    a3 = u64 [a5]
 83942: ac a3 49 01              jump @6702 if t1 <u a3
      :                          @6667
 83946: 82 c9 08                 a2 = u64 [a5 + 0x8]
 83949: ac 93 43 01              jump @6703 if t1 <u a2
      :                          @6668
 83953: 82 c6 10                 s1 = u64 [a5 + 0x10]
 83956: 97 aa 03                 a3 = a3 << 0x3
 83959: c8 ba 0a                 a3 = a3 + a4
 83962: 82 aa                    a3 = u64 [a3]
 83964: 97 99 03                 a2 = a2 << 0x3
 83967: c8 b9 09                 a2 = a2 + a4
 83970: 82 95                    s0 = u64 [a2]
 83972: c8 6a 0a                 a3 = a3 + s1
 83975: af 5a d7                 jump @6665 if a3 >=s s0
      :                          @6669
 83978: 7b 9a                    u64 [a2] = a3
 83980: 28 d2                    jump @6665
      :                          @6670
 83982: 33 03 05                 t1 = 0x5
 83985: 64 8c                    a5 = a1
 83987: 28 08                    jump @6672
      :                          @6671
 83989: 95 cc 18                 a5 = a5 + 0x18
 83992: aa 0c 2d                 jump @6676 if a5 == ra
      :                          @6672
 83995: 82 ca                    a3 = u64 [a5]
 83997: ac a3 12 01              jump @6702 if t1 <u a3
      :                          @6673
 84001: 82 c9 08                 a2 = u64 [a5 + 0x8]
 84004: ac 93 0c 01              jump @6703 if t1 <u a2
      :                          @6674
 84008: 82 c6 10                 s1 = u64 [a5 + 0x10]
 84011: 97 aa 03                 a3 = a3 << 0x3
 84014: c8 ba 0a                 a3 = a3 + a4
 84017: 82 aa                    a3 = u64 [a3]
 84019: 97 99 03                 a2 = a2 << 0x3
 84022: c8 b9 09                 a2 = a2 + a4
 84025: 82 95                    s0 = u64 [a2]
 84027: c8 6a 0a                 a3 = a3 + s1
 84030: af 5a d7                 jump @6671 if a3 >=s s0
      :                          @6675
 84033: 7b 9a                    u64 [a2] = a3
 84035: 28 d2                    jump @6671
      :                          @6676
 84037: 33 03 05                 t1 = 0x5
 84040: 64 8c                    a5 = a1
 84042: 28 08                    jump @6678
      :                          @6677
 84044: 95 cc 18                 a5 = a5 + 0x18
 84047: aa 0c 2d                 jump @6682 if a5 == ra
      :                          @6678
 84050: 82 ca                    a3 = u64 [a5]
 84052: ac a3 db 00              jump @6702 if t1 <u a3
      :                          @6679
 84056: 82 c9 08                 a2 = u64 [a5 + 0x8]
 84059: ac 93 d5 00              jump @6703 if t1 <u a2
      :                          @6680
 84063: 82 c6 10                 s1 = u64 [a5 + 0x10]
 84066: 97 aa 03                 a3 = a3 << 0x3
 84069: c8 ba 0a                 a3 = a3 + a4
 84072: 82 aa                    a3 = u64 [a3]
 84074: 97 99 03                 a2 = a2 << 0x3
 84077: c8 b9 09                 a2 = a2 + a4
 84080: 82 95                    s0 = u64 [a2]
 84082: c8 6a 0a                 a3 = a3 + s1
 84085: af 5a d7                 jump @6677 if a3 >=s s0
      :                          @6681
 84088: 7b 9a                    u64 [a2] = a3
 84090: 28 d2                    jump @6677
      :                          @6682
 84092: 33 03 05                 t1 = 0x5
 84095: 64 8c                    a5 = a1
 84097: 28 08                    jump @6684
      :                          @6683
 84099: 95 cc 18                 a5 = a5 + 0x18
 84102: aa 0c 2d                 jump @6688 if a5 == ra
      :                          @6684
 84105: 82 ca                    a3 = u64 [a5]
 84107: ac a3 a4 00              jump @6702 if t1 <u a3
      :                          @6685
 84111: 82 c9 08                 a2 = u64 [a5 + 0x8]
 84114: ac 93 9e 00              jump @6703 if t1 <u a2
      :                          @6686
 84118: 82 c6 10                 s1 = u64 [a5 + 0x10]
 84121: 97 aa 03                 a3 = a3 << 0x3
 84124: c8 ba 0a                 a3 = a3 + a4
 84127: 82 aa                    a3 = u64 [a3]
 84129: 97 99 03                 a2 = a2 << 0x3
 84132: c8 b9 09                 a2 = a2 + a4
 84135: 82 95                    s0 = u64 [a2]
 84137: c8 6a 0a                 a3 = a3 + s1
 84140: af 5a d7                 jump @6683 if a3 >=s s0
      :                          @6687
 84143: 7b 9a                    u64 [a2] = a3
 84145: 28 d2                    jump @6683
      :                          @6688
 84147: 33 0c 06                 a5 = 0x6
 84150: 01                       fallthrough
      :                          @6689
 84151: 51 02 5f                 jump @6700 if t0 == 0
      :                          @6690
 84154: 82 8a                    a3 = u64 [a1]
 84156: ae ca 73                 jump @6702 if a3 >=u a5
      :                          @6691
 84159: 82 89 08                 a2 = u64 [a1 + 0x8]
 84162: ae c9 6e                 jump @6703 if a2 >=u a5
      :                          @6692
 84165: 97 aa 03                 a3 = a3 << 0x3
 84168: c8 ba 0a                 a3 = a3 + a4
 84171: 82 aa                    a3 = u64 [a3]
 84173: 82 86 10                 s1 = u64 [a1 + 0x10]
 84176: 97 99 03                 a2 = a2 << 0x3
 84179: c8 b9 09                 a2 = a2 + a4
 84182: 82 99                    a2 = u64 [a2]
 84184: 95 88 18                 a1 = a1 + 0x18
 84187: c8 6a 0a                 a3 = a3 + s1
 84190: 95 22 e8                 t0 = t0 + 0xffffffffffffffe8
 84193: af 9a d6                 jump @6689 if a3 >=s a2
      :                          @6693
 84196: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 84206: 7b 78                    u64 [a0] = a1
 84208: 33 07 b0 02 03           a0 = 0x302b0
 84213: 95 77 00 00 10           a0 = a0 + 0x100000
 84218: 01                       fallthrough
      :                          @6694
 84219: 82 78                    a1 = u64 [a0]
 84221: c9 87 09                 a2 = a0 - a1
 84224: ab b9 22                 jump @6701 if a2 != a4
      :                          @6695
 84227: 95 89 d0                 a2 = a1 + 0xffffffffffffffd0
 84230: 01                       fallthrough
      :                          @6696
 84231: 82 7a                    a3 = u64 [a0]
 84233: ab 8a f2                 jump @6694 if a3 != a1
      :                          @6697
 84236: 7b 79                    u64 [a0] = a2
 84238: 33 0c                    a5 = 0
 84240: 01                       fallthrough
      :                          @6698
 84241: ab 8a ea                 jump @6694 if a3 != a1
      :                          @6699
 84244: 28 0e                    jump @6701
      :                          @6700
 84246: 33 08 06                 a1 = 0x6
 84249: 7b 78                    u64 [a0] = a1
 84251: 7b 7b 08                 u64 [a0 + 0x8] = a4
 84254: 7b 78 10                 u64 [a0 + 0x10] = a1
 84257: 01                       fallthrough
      :                          @6701
 84258: 82 10 10                 ra = u64 [sp + 0x10]
 84261: 82 15 08                 s0 = u64 [sp + 0x8]
 84264: 82 16                    s1 = u64 [sp]
 84266: 95 11 18                 sp = sp + 0x18
 84269: 32 00                    ret
      :                          @6702
 84271: 00                       trap
      :                          @6703
 84272: 00                       trap
      :                          @6704
 84273: 00                       trap
      :                          @6705
 84274: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 84277: 7b 10 40                 u64 [sp + 0x40] = ra
 84280: 7b 15 38                 u64 [sp + 0x38] = s0
 84283: 7b 16 30                 u64 [sp + 0x30] = s1
 84286: 7b 17 08                 u64 [sp + 0x8] = a0
 84289: 7b 18 28                 u64 [sp + 0x28] = a1
 84292: 51 08 b9 00              jump @6717 if a1 == 0
      :                          @6706
 84296: 33 08                    a1 = 0
 84298: 14 04 00 00 00 00 00 00 00 80 t2 = 0x8000000000000000
 84308: 7b 14 10                 u64 [sp + 0x10] = t2
 84311: 82 15 10                 s0 = u64 [sp + 0x10]
 84314: 01                       fallthrough
      :                          @6707
 84315: 33 07                    a0 = 0
 84317: 64 84                    t2 = a1
 84319: 95 88 01                 a1 = a1 + 0x1
 84322: 7b 18                    u64 [sp] = a1
 84324: 96 4a 18                 a3 = t2 * 0x18
 84327: 82 18 08                 a1 = u64 [sp + 0x8]
 84330: c8 8a 0a                 a3 = a3 + a1
 84333: 95 a8 10                 a1 = a3 + 0x10
 84336: 7b 18 20                 u64 [sp + 0x20] = a1
 84339: 95 aa 08                 a3 = a3 + 0x8
 84342: 7b 1a 18                 u64 [sp + 0x18] = a3
 84345: 33 0b 01                 a4 = 0x1
 84348: 28 11                    jump @6709
      :                          @6708
 84350: 82 18 28                 a1 = u64 [sp + 0x28]
 84353: d8 87 0b                 a4 = a0 <u a1
 84356: c8 7b 0b                 a4 = a4 + a0
 84359: 33 09 18                 a2 = 0x18
 84362: ae 87 6a                 jump @6716 if a0 >=u a1
      :                          @6709
 84365: 33 02                    t0 = 0
 84367: 33 0a                    a3 = 0
 84369: 96 7c 18                 a5 = a0 * 0x18
 84372: 64 b7                    a0 = a4
 84374: 82 18 08                 a1 = u64 [sp + 0x8]
 84377: c8 8c 0c                 a5 = a5 + a1
 84380: 95 c3 08                 t1 = a5 + 0x8
 84383: 95 c0 10                 ra = a5 + 0x10
 84386: 28 0e                    jump @6711
      :                          @6710
 84388: 95 aa 01                 a3 = a3 + 0x1
 84391: 95 22 08                 t0 = t0 + 0x8
 84394: 82 18 28                 a1 = u64 [sp + 0x28]
 84397: aa a8 d1                 jump @6708 if a1 == a3
      :                          @6711
 84400: 82 0b                    a4 = u64 [ra]
 84402: ae b4 59                 jump @6718 if t2 >=u a4
      :                          @6712
 84405: 82 18 20                 a1 = u64 [sp + 0x20]
 84408: 82 8c                    a5 = u64 [a1]
 84410: ae ca 52                 jump @6719 if a3 >=u a5
      :                          @6713
 84413: ae ba 50                 jump @6720 if a3 >=u a4
      :                          @6714
 84416: 82 3b                    a4 = u64 [t1]
 84418: 82 18 18                 a1 = u64 [sp + 0x18]
 84421: 82 8c                    a5 = u64 [a1]
 84423: 97 49 03                 a2 = t2 << 0x3
 84426: c8 b9 09                 a2 = a2 + a4
 84429: 82 98                    a1 = u64 [a2]
 84431: c8 2c 0c                 a5 = a5 + t0
 84434: 82 cc                    a5 = u64 [a5]
 84436: c8 c8 09                 a2 = a1 + a5
 84439: d9 89 08                 a1 = a2 <s a1
 84442: 89 cc                    a5 = a5 <s 0
 84444: d3 c8 08                 a1 = a1 ^ a5
 84447: c8 2b 0b                 a4 = a4 + t0
 84450: 82 b6                    s1 = u64 [a4]
 84452: 99 9c 3f                 a5 = a2 >>a 0x3f
 84455: d3 5c 0c                 a5 = a5 ^ s0
 84458: da 89 0c                 a5 = a2 if a1 == 0
 84461: af 6c b7                 jump @6710 if a5 >=s s1
      :                          @6715
 84464: 7b bc                    u64 [a4] = a5
 84466: 28 b2                    jump @6710
      :                          @6716
 84468: 82 17 28                 a0 = u64 [sp + 0x28]
 84471: 82 18                    a1 = u64 [sp]
 84473: ab 78 62 ff              jump @6707 if a1 != a0
      :                          @6717
 84477: 82 10 40                 ra = u64 [sp + 0x40]
 84480: 82 15 38                 s0 = u64 [sp + 0x38]
 84483: 82 16 30                 s1 = u64 [sp + 0x30]
 84486: 95 11 48                 sp = sp + 0x48
 84489: 32 00                    ret
      :                          @6718
 84491: 00                       trap
      :                          @6719
 84492: 00                       trap
      :                          @6720
 84493: 00                       trap
      :                          @6721
 84494: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 84498: 7b 10 88 00              u64 [sp + 0x88] = ra
 84502: 7b 15 80 00              u64 [sp + 0x80] = s0
 84506: 7b 16 78                 u64 [sp + 0x78] = s1
 84509: 82 78 10                 a1 = u64 [a0 + 0x10]
 84512: 51 08 82 02              jump @6768 if a1 == 0
      :                          @6722
 84516: 98 89 3c                 a2 = a1 >> 0x3c
 84519: 52 09 c3 02              jump @6781 if a2 != 0
      :                          @6723
 84523: 88 92 01                 t0 = a2 <u 0x1
 84526: 7b 18 28                 u64 [sp + 0x28] = a1
 84529: 97 88 03                 a1 = a1 << 0x3
 84532: 7b 18 10                 u64 [sp + 0x10] = a1
 84535: 97 22 03                 t0 = t0 << 0x3
 84538: 33 04 b0 02 03           t2 = 0x302b0
 84543: 33 03 00 00 10           t1 = 0x100000
 84548: c8 34 0a                 a3 = t2 + t1
 84551: 01                       fallthrough
      :                          @6724
 84552: 82 ab                    a4 = u64 [a3]
 84554: 82 15 10                 s0 = u64 [sp + 0x10]
 84557: c8 b5 05                 s0 = s0 + a4
 84560: ac b5 99 02              jump @6780 if s0 <u a4
      :                          @6725
 84564: c8 25 09                 a2 = s0 + t0
 84567: d8 59 0c                 a5 = a2 <u s0
 84570: d8 93 09                 a2 = t1 <u a2
 84573: d4 c9 09                 a2 = a2 | a5
 84576: 52 09 89 02              jump @6780 if a2 != 0
      :                          @6726
 84580: c9 54 09                 a2 = t2 - s0
 84583: c8 39 09                 a2 = a2 + t1
 84586: 84 9c 07                 a5 = a2 & 0x7
 84589: c8 c5 05                 s0 = s0 + a5
 84592: 01                       fallthrough
      :                          @6727
 84593: 82 a8                    a1 = u64 [a3]
 84595: ab b8 d5                 jump @6724 if a1 != a4
      :                          @6728
 84598: 7b a5                    u64 [a3] = s0
 84600: 01                       fallthrough
      :                          @6729
 84601: 7b 17 50                 u64 [sp + 0x50] = a0
 84604: c9 c9 03                 t1 = a2 - a5
 84607: 33 04 01                 t2 = 0x1
 84610: 64 37                    a0 = t1
 84612: 82 19 28                 a2 = u64 [sp + 0x28]
 84615: 7b 13 38                 u64 [sp + 0x38] = t1
 84618: 53 19 02 2e              jump @6732 if a2 <u 2
      :                          @6730
 84622: 82 16 10                 s1 = u64 [sp + 0x10]
 84625: 95 69 f8                 a2 = s1 + 0xfffffffffffffff8
 84628: 33 08 ff 00              a1 = 0xff
 84632: 64 37                    a0 = t1
 84634: 50 20 e6 03 73 c1 01     ra = 998, jump @13689
      :                          @6731 [@dyn 499]
 84641: 82 13 38                 t1 = u64 [sp + 0x38]
 84644: 33 07 b0 02 03           a0 = 0x302b0
 84649: c8 67 07                 a0 = a0 + s1
 84652: 95 77 f8 ff 0f           a0 = a0 + 0xffff8
 84657: c9 57 07                 a0 = a0 - s0
 84660: 82 14 28                 t2 = u64 [sp + 0x28]
 84663: 01                       fallthrough
      :                          @6732
 84664: 33 06                    s1 = 0
 84666: 33 09                    a2 = 0
 84668: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 84671: 97 40 03                 ra = t2 << 0x3
 84674: 82 17 50                 a0 = u64 [sp + 0x50]
 84677: 82 77 08                 a0 = u64 [a0 + 0x8]
 84680: 7b 17 20                 u64 [sp + 0x20] = a0
 84683: 33 07 b0 02 03           a0 = 0x302b0
 84688: 95 7c 00 00 10           a5 = a0 + 0x100000
 84693: 82 15 28                 s0 = u64 [sp + 0x28]
 84696: 7b 14 30                 u64 [sp + 0x30] = t2
 84699: 7b 10                    u64 [sp] = ra
 84701: 7b 1c 48                 u64 [sp + 0x48] = a5
 84704: 28 09                    jump @6734
      :                          @6733
 84706: 82 19 18                 a2 = u64 [sp + 0x18]
 84709: aa 59 d3 01              jump @6770 if a2 == s0
      :                          @6734
 84713: 7b 19 18                 u64 [sp + 0x18] = a2
 84716: 33 08 ff 00              a1 = 0xff
 84720: 64 37                    a0 = t1
 84722: 64 09                    a2 = ra
 84724: 50 20 e8 03 19 c1 01     ra = 1000, jump @13689
      :                          @6735 [@dyn 500]
 84731: 82 18 18                 a1 = u64 [sp + 0x18]
 84734: 82 17 30                 a0 = u64 [sp + 0x30]
 84737: 49 11 58                 u64 [sp + 88] = 0
 84740: 95 19 68                 a2 = sp + 0x68
 84743: 49 19 08                 u64 [a2 + 8] = 0
 84746: 49 09                    u64 [a2 + 0] = 0
 84748: 49 11 60 08              u64 [sp + 96] = 0x8
 84752: aa 78 d8 01              jump @6779 if a1 == a0
      :                          @6736
 84756: 7b 16 08                 u64 [sp + 0x8] = s1
 84759: 97 87 03                 a0 = a1 << 0x3
 84762: 82 19 38                 a2 = u64 [sp + 0x38]
 84765: c8 97 07                 a0 = a0 + a2
 84768: 49 07                    u64 [a0 + 0] = 0
 84770: 95 17 58                 a0 = sp + 0x58
 84773: 50 20 ea 03 9d 03 ff     ra = 1002, jump @1484
      :                          @6737 [@dyn 501]
 84780: 82 14 30                 t2 = u64 [sp + 0x30]
 84783: 82 1a 70                 a3 = u64 [sp + 0x70]
 84786: 82 1b 68                 a4 = u64 [sp + 0x68]
 84789: 82 12 58                 t0 = u64 [sp + 0x58]
 84792: c8 ab 07                 a0 = a4 + a3
 84795: d8 27 08                 a1 = a0 <u t0
 84798: 64 26                    s1 = t0
 84800: 82 10 60                 ra = u64 [sp + 0x60]
 84803: 94 86                    s1 = 0 if a1 != 0
 84805: c9 67 07                 a0 = a0 - s1
 84808: 97 77 03                 a0 = a0 << 0x3
 84811: c8 07 07                 a0 = a0 + ra
 84814: 82 18 18                 a1 = u64 [sp + 0x18]
 84817: 7b 78                    u64 [a0] = a1
 84819: 95 aa 01                 a3 = a3 + 0x1
 84822: 7b 1a 70                 u64 [sp + 0x70] = a3
 84825: 82 13 38                 t1 = u64 [sp + 0x38]
 84828: 33 09 ff                 a2 = 0xffffffffffffffff
 84831: 82 1c 48                 a5 = u64 [sp + 0x48]
 84834: 52 0a 68                 jump @6750 if a3 != 0
      :                          @6738
 84837: 82 17 18                 a0 = u64 [sp + 0x18]
 84840: 95 77 01                 a0 = a0 + 0x1
 84843: 7b 17 18                 u64 [sp + 0x18] = a0
 84846: 82 10                    ra = u64 [sp]
 84848: 64 07                    a0 = ra
 84850: 64 39                    a2 = t1
 84852: 82 16 08                 s1 = u64 [sp + 0x8]
 84855: 01                       fallthrough
      :                          @6739
 84856: 64 68                    a1 = s1
 84858: 82 96                    s1 = u64 [a2]
 84860: 95 99 08                 a2 = a2 + 0x8
 84863: 88 6a ff                 a3 = s1 <u 0xffffffffffffffff
 84866: d8 68 0b                 a4 = a1 <u s1
 84869: d2 ba 0a                 a3 = a3 & a4
 84872: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
 84875: da a8 06                 s1 = a1 if a3 == 0
 84878: 52 07 ea                 jump @6739 if a0 != 0
      :                          @6740
 84881: 51 02 51 ff              jump @6733 if t0 == 0
      :                          @6741
 84885: 56 32 00 00 02 4d ff     jump @6733 if t0 >u 131072
      :                          @6742
 84892: 82 17 60                 a0 = u64 [sp + 0x60]
 84895: 97 22 03                 t0 = t0 << 0x3
 84898: 01                       fallthrough
      :                          @6743
 84899: 82 c9                    a2 = u64 [a5]
 84901: c9 9c 0a                 a3 = a5 - a2
 84904: ab 7a 3a ff              jump @6733 if a3 != a0
      :                          @6744
 84908: c9 29 0a                 a3 = a2 - t0
 84911: 82 18 48                 a1 = u64 [sp + 0x48]
 84914: 01                       fallthrough
      :                          @6745
 84915: 82 8b                    a4 = u64 [a1]
 84917: ab 9b 06                 jump @6747 if a4 != a2
      :                          @6746
 84920: 7b 8a                    u64 [a1] = a3
 84922: 01                       fallthrough
      :                          @6747
 84923: 82 1c 48                 a5 = u64 [sp + 0x48]
 84926: ab 9b e5                 jump @6743 if a4 != a2
      :                          @6748
 84929: 28 21 ff                 jump @6733
      :                          @6749
 84932: 82 15 28                 s0 = u64 [sp + 0x28]
 84935: 51 0a 9e                 jump @6738 if a3 == 0
      :                          @6750
 84938: 95 b7 01                 a0 = a4 + 0x1
 84941: d8 27 06                 s1 = a0 <u t0
 84944: 64 28                    a1 = t0
 84946: 94 68                    a1 = 0 if s1 != 0
 84948: 97 b6 03                 s1 = a4 << 0x3
 84951: c9 87 0b                 a4 = a0 - a1
 84954: 7b 1b 68                 u64 [sp + 0x68] = a4
 84957: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 84960: 7b 1a 70                 u64 [sp + 0x70] = a3
 84963: c8 06 06                 s1 = s1 + ra
 84966: 82 67                    a0 = u64 [s1]
 84968: ae 57 ff 00              jump @6778 if a0 >=u s0
      :                          @6751
 84972: 96 76 18                 s1 = a0 * 0x18
 84975: 82 18 20                 a1 = u64 [sp + 0x20]
 84978: c8 86 06                 s1 = s1 + a1
 84981: 82 68 10                 a1 = u64 [s1 + 0x10]
 84984: 51 08 cc                 jump @6749 if a1 == 0
      :                          @6752
 84987: 82 66 08                 s1 = u64 [s1 + 0x8]
 84990: ae 47 7d                 jump @6761 if a0 >=u t2
      :                          @6753
 84993: 97 77 03                 a0 = a0 << 0x3
 84996: c8 37 07                 a0 = a0 + t1
 84999: 7b 17 40                 u64 [sp + 0x40] = a0
 85002: 97 85 03                 s0 = a1 << 0x3
 85005: 28 2d                    jump @6756
      :                          @6754
 85007: c8 ab 07                 a0 = a4 + a3
 85010: d8 27 08                 a1 = a0 <u t0
 85013: 64 2c                    a5 = t0
 85015: 94 8c                    a5 = 0 if a1 != 0
 85017: c9 c7 07                 a0 = a0 - a5
 85020: 97 77 03                 a0 = a0 << 0x3
 85023: c8 07 07                 a0 = a0 + ra
 85026: 7b 76                    u64 [a0] = s1
 85028: 95 aa 01                 a3 = a3 + 0x1
 85031: 7b 1a 70                 u64 [sp + 0x70] = a3
 85034: 82 1c 48                 a5 = u64 [sp + 0x48]
 85037: 01                       fallthrough
      :                          @6755
 85038: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 85041: 82 16 50                 s1 = u64 [sp + 0x50]
 85044: 95 66 08                 s1 = s1 + 0x8
 85047: 51 05 8d                 jump @6749 if s0 == 0
      :                          @6756
 85050: 7b 16 50                 u64 [sp + 0x50] = s1
 85053: 82 66                    s1 = u64 [s1]
 85055: ae 46 61                 jump @6766 if s1 >=u t2
      :                          @6757
 85058: 97 67 03                 a0 = s1 << 0x3
 85061: c8 37 07                 a0 = a0 + t1
 85064: 82 78                    a1 = u64 [a0]
 85066: ab 98 e4                 jump @6755 if a1 != a2
      :                          @6758
 85069: 82 18 40                 a1 = u64 [sp + 0x40]
 85072: 82 88                    a1 = u64 [a1]
 85074: 95 88 01                 a1 = a1 + 0x1
 85077: 7b 78                    u64 [a0] = a1
 85079: ab 2a b8                 jump @6754 if a3 != t0
      :                          @6759
 85082: 95 17 58                 a0 = sp + 0x58
 85085: 50 20 ec 03 65 02 ff     ra = 1004, jump @1484
      :                          @6760 [@dyn 502]
 85092: 33 09 ff                 a2 = 0xffffffffffffffff
 85095: 82 14 30                 t2 = u64 [sp + 0x30]
 85098: 82 13 38                 t1 = u64 [sp + 0x38]
 85101: 82 1a 70                 a3 = u64 [sp + 0x70]
 85104: 82 12 58                 t0 = u64 [sp + 0x58]
 85107: 82 1b 68                 a4 = u64 [sp + 0x68]
 85110: 82 10 60                 ra = u64 [sp + 0x60]
 85113: 28 96                    jump @6754
      :                          @6761
 85115: 97 88 03                 a1 = a1 << 0x3
 85118: 01                       fallthrough
      :                          @6762
 85119: 64 65                    s0 = s1
 85121: 82 66                    s1 = u64 [s1]
 85123: ae 46 1d                 jump @6766 if s1 >=u t2
      :                          @6763
 85126: 97 66 03                 s1 = s1 << 0x3
 85129: c8 36 06                 s1 = s1 + t1
 85132: 82 6c                    a5 = u64 [s1]
 85134: aa 9c 13                 jump @6767 if a5 == a2
      :                          @6764
 85137: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 85140: 95 56 08                 s1 = s0 + 0x8
 85143: 82 1c 48                 a5 = u64 [sp + 0x48]
 85146: 52 08 e5                 jump @6762 if a1 != 0
      :                          @6765
 85149: 28 27 ff                 jump @6749
      :                          @6766
 85152: 00                       trap
      :                          @6767
 85153: 00                       trap
      :                          @6768
 85154: 33 06                    s1 = 0
 85156: 01                       fallthrough
      :                          @6769
 85157: 64 67                    a0 = s1
 85159: 82 10 88 00              ra = u64 [sp + 0x88]
 85163: 82 15 80 00              s0 = u64 [sp + 0x80]
 85167: 82 16 78                 s1 = u64 [sp + 0x78]
 85170: 95 11 90 00              sp = sp + 0x90
 85174: 32 00                    ret
      :                          @6770
 85176: 56 35 00 00 02 ed        jump @6769 if s0 >u 131072
      :                          @6771
 85182: 33 07 b0 02 03           a0 = 0x302b0
 85187: 95 77 00 00 10           a0 = a0 + 0x100000
 85192: 01                       fallthrough
      :                          @6772
 85193: 82 78                    a1 = u64 [a0]
 85195: c9 87 09                 a2 = a0 - a1
 85198: ab 39 d7                 jump @6769 if a2 != t1
      :                          @6773
 85201: 82 19 10                 a2 = u64 [sp + 0x10]
 85204: c9 98 09                 a2 = a1 - a2
 85207: 01                       fallthrough
      :                          @6774
 85208: 82 7a                    a3 = u64 [a0]
 85210: ab 8a ef                 jump @6772 if a3 != a1
      :                          @6775
 85213: 7b 79                    u64 [a0] = a2
 85215: 33 0b                    a4 = 0
 85217: 01                       fallthrough
      :                          @6776
 85218: ab 8a e7                 jump @6772 if a3 != a1
      :                          @6777
 85221: 28 c0                    jump @6769
      :                          @6778
 85223: 00                       trap
      :                          @6779
 85224: 00                       trap
      :                          @6780
 85225: 00                       trap
      :                          @6781
 85226: 00                       trap
      :                          @6782
 85227: 95 11 60 ff              sp = sp + 0xffffffffffffff60
 85231: 7b 10 98 00              u64 [sp + 0x98] = ra
 85235: 7b 15 90 00              u64 [sp + 0x90] = s0
 85239: 7b 16 88 00              u64 [sp + 0x88] = s1
 85243: 7b 18 38                 u64 [sp + 0x38] = a1
 85246: 82 8a 10                 a3 = u64 [a1 + 0x10]
 85249: 7b 17 28                 u64 [sp + 0x28] = a0
 85252: 49 11 68                 u64 [sp + 104] = 0
 85255: 7b 1a 48                 u64 [sp + 0x48] = a3
 85258: 51 0a bd 01              jump @6816 if a3 == 0
      :                          @6783
 85262: 98 a7 3c                 a0 = a3 >> 0x3c
 85265: 52 07 9f 03              jump @6860 if a0 != 0
      :                          @6784
 85269: 88 77 01                 a0 = a0 <u 0x1
 85272: 97 a9 03                 a2 = a3 << 0x3
 85275: 97 72 03                 t0 = a0 << 0x3
 85278: 33 04 b0 02 03           t2 = 0x302b0
 85283: 33 03 00 00 10           t1 = 0x100000
 85288: c8 34 0a                 a3 = t2 + t1
 85291: 01                       fallthrough
      :                          @6785
 85292: 82 ab                    a4 = u64 [a3]
 85294: c8 9b 0c                 a5 = a4 + a2
 85297: ac bc 7c 03              jump @6857 if a5 <u a4
      :                          @6786
 85301: c8 2c 07                 a0 = a5 + t0
 85304: d8 c7 06                 s1 = a0 <u a5
 85307: d8 73 07                 a0 = t1 <u a0
 85310: d4 67 07                 a0 = a0 | s1
 85313: 52 07 6c 03              jump @6857 if a0 != 0
      :                          @6787
 85317: c9 c4 06                 s1 = t2 - a5
 85320: c8 36 08                 a1 = s1 + t1
 85323: 84 86 07                 s1 = a1 & 0x7
 85326: c8 6c 0c                 a5 = a5 + s1
 85329: 01                       fallthrough
      :                          @6788
 85330: 82 a7                    a0 = u64 [a3]
 85332: ab b7 d8                 jump @6785 if a0 != a4
      :                          @6789
 85335: 7b ac                    u64 [a3] = a5
 85337: 33 05                    s0 = 0
 85339: c9 68 07                 a0 = a1 - s1
 85342: 7b 17 60                 u64 [sp + 0x60] = a0
 85345: 33 08                    a1 = 0
 85347: 7b 19 40                 u64 [sp + 0x40] = a2
 85350: 50 20 ee 03 a7 be 01     ra = 1006, jump @13689
      :                          @6790 [@dyn 503]
 85357: 82 19 40                 a2 = u64 [sp + 0x40]
 85360: 33 03 b0 02 03           t1 = 0x302b0
 85365: 33 02 00 00 10           t0 = 0x100000
 85370: c8 23 07                 a0 = t1 + t0
 85373: 01                       fallthrough
      :                          @6791
 85374: 82 7a                    a3 = u64 [a0]
 85376: c8 9a 0b                 a4 = a3 + a2
 85379: ac ab 2a 03              jump @6857 if a4 <u a3
      :                          @6792
 85383: 95 b8 08                 a1 = a4 + 0x8
 85386: d8 b8 0c                 a5 = a1 <u a4
 85389: d8 82 08                 a1 = t0 <u a1
 85392: d4 c8 08                 a1 = a1 | a5
 85395: 52 08 1a 03              jump @6857 if a1 != 0
      :                          @6793
 85399: c9 b3 08                 a1 = t1 - a4
 85402: c8 28 08                 a1 = a1 + t0
 85405: 84 8c 07                 a5 = a1 & 0x7
 85408: c8 cb 0b                 a4 = a4 + a5
 85411: 01                       fallthrough
      :                          @6794
 85412: 82 75                    s0 = u64 [a0]
 85414: ab a5 d8                 jump @6791 if s0 != a3
      :                          @6795
 85417: 7b 7b                    u64 [a0] = a4
 85419: 33 06                    s1 = 0
 85421: c9 c8 07                 a0 = a1 - a5
 85424: 7b 17 50                 u64 [sp + 0x50] = a0
 85427: 33 08                    a1 = 0
 85429: 50 20 f0 03 58 be 01     ra = 1008, jump @13689
      :                          @6796 [@dyn 504]
 85436: 82 14 40                 t2 = u64 [sp + 0x40]
 85439: 33 03 b0 02 03           t1 = 0x302b0
 85444: 33 02 00 00 10           t0 = 0x100000
 85449: c8 23 07                 a0 = t1 + t0
 85452: 82 19 48                 a2 = u64 [sp + 0x48]
 85455: 01                       fallthrough
      :                          @6797
 85456: 82 76                    s1 = u64 [a0]
 85458: c8 46 0a                 a3 = s1 + t2
 85461: ac 6a d9 02              jump @6858 if a3 <u s1
      :                          @6798
 85465: 95 ab 08                 a4 = a3 + 0x8
 85468: d8 ab 0c                 a5 = a4 <u a3
 85471: d8 b2 0b                 a4 = t0 <u a4
 85474: d4 cb 0b                 a4 = a4 | a5
 85477: 52 0b c9 02              jump @6858 if a4 != 0
      :                          @6799
 85481: c9 a3 0b                 a4 = t1 - a3
 85484: c8 2b 0b                 a4 = a4 + t0
 85487: 84 b5 07                 s0 = a4 & 0x7
 85490: c8 5a 0a                 a3 = a3 + s0
 85493: 01                       fallthrough
      :                          @6800
 85494: 82 7c                    a5 = u64 [a0]
 85496: ab 6c d8                 jump @6797 if a5 != s1
      :                          @6801
 85499: 7b 7a                    u64 [a0] = a3
 85501: 01                       fallthrough
      :                          @6802
 85502: c9 5b 07                 a0 = a4 - s0
 85505: 49 11 30 01              u64 [sp + 48] = 0x1
 85509: 7b 17 58                 u64 [sp + 0x58] = a0
 85512: 53 19 02 27              jump @6805 if a2 <u 2
      :                          @6803
 85516: 95 49 f8                 a2 = t2 + 0xfffffffffffffff8
 85519: 33 08 ff 00              a1 = 0xff
 85523: 82 17 58                 a0 = u64 [sp + 0x58]
 85526: 50 20 f2 03 f7 bd 01     ra = 1010, jump @13689
      :                          @6804 [@dyn 505]
 85533: 82 19 48                 a2 = u64 [sp + 0x48]
 85536: c8 65 05                 s0 = s0 + s1
 85539: 33 07 a8 02 13           a0 = 0x1302a8
 85544: c9 57 07                 a0 = a0 - s0
 85547: 7b 19 30                 u64 [sp + 0x30] = a2
 85550: 01                       fallthrough
      :                          @6805
 85551: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 85554: 33 07 b0 02 03           a0 = 0x302b0
 85559: 33 06 00 00 10           s1 = 0x100000
 85564: c8 67 07                 a0 = a0 + s1
 85567: 01                       fallthrough
      :                          @6806
 85568: 82 7a                    a3 = u64 [a0]
 85570: c8 9a 08                 a1 = a3 + a2
 85573: ac a8 68 02              jump @6857 if a1 <u a3
      :                          @6807
 85577: 95 8b 01                 a4 = a1 + 0x1
 85580: 88 bc 01                 a5 = a4 <u 0x1
 85583: d8 b6 0b                 a4 = s1 <u a4
 85586: d4 cb 0b                 a4 = a4 | a5
 85589: 52 0b 58 02              jump @6857 if a4 != 0
      :                          @6808
 85593: 82 7b                    a4 = u64 [a0]
 85595: ab ab e5                 jump @6806 if a4 != a3
      :                          @6809
 85598: 7b 78                    u64 [a0] = a1
 85600: 33 0c                    a5 = 0
 85602: 33 07 b0 02 13           a0 = 0x1302b0
 85607: c9 87 07                 a0 = a0 - a1
 85610: 7b 17 40                 u64 [sp + 0x40] = a0
 85613: 33 08                    a1 = 0
 85615: 50 20 f4 03 9e bd 01     ra = 1012, jump @13689
      :                          @6810 [@dyn 506]
 85622: 82 1a 48                 a3 = u64 [sp + 0x48]
 85625: 33 05                    s0 = 0
 85627: 82 16 60                 s1 = u64 [sp + 0x60]
 85630: 28 0b                    jump @6812
      :                          @6811
 85632: 95 55 01                 s0 = s0 + 0x1
 85635: 95 66 08                 s1 = s1 + 0x8
 85638: aa 5a 37                 jump @6815 if a3 == s0
      :                          @6812
 85641: 82 67                    a0 = u64 [s1]
 85643: 52 07 f5                 jump @6811 if a0 != 0
      :                          @6813
 85646: 82 17 38                 a0 = u64 [sp + 0x38]
 85649: 7b 17 18                 u64 [sp + 0x18] = a0
 85652: 7b 1a 10                 u64 [sp + 0x10] = a3
 85655: 82 17 40                 a0 = u64 [sp + 0x40]
 85658: 7b 17 08                 u64 [sp + 0x8] = a0
 85661: 95 18 68                 a1 = sp + 0x68
 85664: 82 17 30                 a0 = u64 [sp + 0x30]
 85667: 7b 17                    u64 [sp] = a0
 85669: 64 57                    a0 = s0
 85671: 82 19 60                 a2 = u64 [sp + 0x60]
 85674: 82 1b 50                 a4 = u64 [sp + 0x50]
 85677: 64 ac                    a5 = a3
 85679: 82 14 58                 t2 = u64 [sp + 0x58]
 85682: 50 20 f6 03 ff 01        ra = 1014, jump @6861
      :                          @6814 [@dyn 507]
 85688: 82 1a 48                 a3 = u64 [sp + 0x48]
 85691: 28 c5                    jump @6811
      :                          @6815
 85693: 82 10 40                 ra = u64 [sp + 0x40]
 85696: 33 0b                    a4 = 0
 85698: c8 a0 09                 a2 = ra + a3
 85701: 28 17                    jump @6817
      :                          @6816
 85703: 49 11 50 08              u64 [sp + 80] = 0x8
 85707: 33 00 01                 ra = 0x1
 85710: 49 11 60 08              u64 [sp + 96] = 0x8
 85714: 49 11 58 08              u64 [sp + 88] = 0x8
 85718: 33 0b                    a4 = 0
 85720: c8 a0 09                 a2 = ra + a3
 85723: 01                       fallthrough
      :                          @6817
 85724: aa ba cd 00              jump @6831 if a3 == a4
      :                          @6818
 85728: 64 b8                    a1 = a4
 85730: c8 b0 07                 a0 = ra + a4
 85733: 7c 77                    a0 = u8 [a0]
 85735: 95 bb 01                 a4 = a4 + 0x1
 85738: 51 07 f2                 jump @6817 if a0 == 0
      :                          @6819
 85741: 7b 19 20                 u64 [sp + 0x20] = a2
 85744: 7b 1b 38                 u64 [sp + 0x38] = a4
 85747: c8 0b 0b                 a4 = a4 + ra
 85750: 7b 1b 30                 u64 [sp + 0x30] = a4
 85753: 33 03 b0 02 03           t1 = 0x302b0
 85758: 33 02 00 00 10           t0 = 0x100000
 85763: c8 23 04                 t2 = t1 + t0
 85766: 01                       fallthrough
      :                          @6820
 85767: 82 4b                    a4 = u64 [t2]
 85769: 95 bc 20                 a5 = a4 + 0x20
 85772: ac bc a3 01              jump @6859 if a5 <u a4
      :                          @6821
 85776: 95 c7 08                 a0 = a5 + 0x8
 85779: d8 c7 09                 a2 = a0 <u a5
 85782: d8 72 07                 a0 = t0 <u a0
 85785: d4 97 07                 a0 = a0 | a2
 85788: 52 07 93 01              jump @6859 if a0 != 0
      :                          @6822
 85792: c9 c3 07                 a0 = t1 - a5
 85795: c8 27 07                 a0 = a0 + t0
 85798: 84 79 07                 a2 = a0 & 0x7
 85801: c8 9c 0c                 a5 = a5 + a2
 85804: 01                       fallthrough
      :                          @6823
 85805: 82 45                    s0 = u64 [t2]
 85807: ab b5 d8                 jump @6820 if s0 != a4
      :                          @6824
 85810: 7b 4c                    u64 [t2] = a5
 85812: c9 97 02                 t0 = a0 - a2
 85815: 7b 28                    u64 [t0] = a1
 85817: 49 11 70 04              u64 [sp + 112] = 0x4
 85821: 7b 12 78                 u64 [sp + 0x78] = t0
 85824: 33 08 01                 a1 = 0x1
 85827: 7b 18 80 00              u64 [sp + 0x80] = a1
 85831: 82 17 20                 a0 = u64 [sp + 0x20]
 85834: 82 1c 38                 a5 = u64 [sp + 0x38]
 85837: 82 1b 30                 a4 = u64 [sp + 0x30]
 85840: 64 b6                    s1 = a4
 85842: 01                       fallthrough
      :                          @6825
 85843: aa 76 72                 jump @6833 if s1 == a0
      :                          @6826
 85846: 64 c5                    s0 = a5
 85848: 7c 69                    a2 = u8 [s1]
 85850: 95 6b 01                 a4 = s1 + 0x1
 85853: 95 cc 01                 a5 = a5 + 0x1
 85856: 64 b6                    s1 = a4
 85858: 51 09 f1                 jump @6825 if a2 == 0
      :                          @6827
 85861: 82 19 70                 a2 = u64 [sp + 0x70]
 85864: aa 98 16                 jump @6829 if a1 == a2
      :                          @6828
 85867: 97 89 03                 a2 = a1 << 0x3
 85870: c8 29 09                 a2 = a2 + t0
 85873: 7b 95                    u64 [a2] = s0
 85875: 95 88 01                 a1 = a1 + 0x1
 85878: 7b 18 80 00              u64 [sp + 0x80] = a1
 85882: 64 b6                    s1 = a4
 85884: 28 d7                    jump @6825
      :                          @6829
 85886: 95 17 70                 a0 = sp + 0x70
 85889: 7b 10 40                 u64 [sp + 0x40] = ra
 85892: 7b 1c 38                 u64 [sp + 0x38] = a5
 85895: 7b 1b 30                 u64 [sp + 0x30] = a4
 85898: 64 86                    s1 = a1
 85900: 50 20 f8 03 7c 06 ff     ra = 1016, jump @1653
      :                          @6830 [@dyn 508]
 85907: 64 68                    a1 = s1
 85909: 82 1b 30                 a4 = u64 [sp + 0x30]
 85912: 82 1c 38                 a5 = u64 [sp + 0x38]
 85915: 82 17 20                 a0 = u64 [sp + 0x20]
 85918: 82 10 40                 ra = u64 [sp + 0x40]
 85921: 82 1a 48                 a3 = u64 [sp + 0x48]
 85924: 82 12 78                 t0 = u64 [sp + 0x78]
 85927: 28 c4                    jump @6828
      :                          @6831
 85929: 82 18 28                 a1 = u64 [sp + 0x28]
 85932: 49 08                    u64 [a1 + 0] = 0
 85934: 49 18 08 08              u64 [a1 + 8] = 0x8
 85938: 49 18 10                 u64 [a1 + 16] = 0
 85941: 33 07 00 00 f0           a0 = 0xfffffffffff00000
 85946: 95 a8 ff ff ef           a1 = a3 + 0xffffffffffefffff
 85951: ae 78 29                 jump @6834 if a1 >=u a0
      :                          @6832
 85954: 28 d9 00                 jump @6856
      :                          @6833
 85957: 82 17 80 00              a0 = u64 [sp + 0x80]
 85961: 82 18 78                 a1 = u64 [sp + 0x78]
 85964: 82 19 70                 a2 = u64 [sp + 0x70]
 85967: 82 1b 28                 a4 = u64 [sp + 0x28]
 85970: 7b b7 10                 u64 [a4 + 0x10] = a0
 85973: 7b b8 08                 u64 [a4 + 0x8] = a1
 85976: 7b b9                    u64 [a4] = a2
 85978: 33 07 00 00 f0           a0 = 0xfffffffffff00000
 85983: 95 a8 ff ff ef           a1 = a3 + 0xffffffffffefffff
 85988: ac 78 b7 00              jump @6856 if a1 <u a0
      :                          @6834
 85992: 33 07 b0 02 03           a0 = 0x302b0
 85997: 95 77 00 00 10           a0 = a0 + 0x100000
 86002: 01                       fallthrough
      :                          @6835
 86003: 82 78                    a1 = u64 [a0]
 86005: c9 87 09                 a2 = a0 - a1
 86008: ab 09 11                 jump @6839 if a2 != ra
      :                          @6836
 86011: c9 a8 09                 a2 = a1 - a3
 86014: 01                       fallthrough
      :                          @6837
 86015: 82 7c                    a5 = u64 [a0]
 86017: ab 8c f2                 jump @6835 if a5 != a1
      :                          @6838
 86020: 7b 79                    u64 [a0] = a2
 86022: 33 0b                    a4 = 0
 86024: 01                       fallthrough
      :                          @6839
 86025: 51 0a 92 00              jump @6856 if a3 == 0
      :                          @6840
 86029: 33 07 00 00 02           a0 = 0x20000
 86034: ac a7 89 00              jump @6856 if a0 <u a3
      :                          @6841
 86038: 97 a7 03                 a0 = a3 << 0x3
 86041: 33 08 b0 02 03           a1 = 0x302b0
 86046: 95 88 00 00 10           a1 = a1 + 0x100000
 86051: 01                       fallthrough
      :                          @6842
 86052: 82 89                    a2 = u64 [a1]
 86054: c9 98 0a                 a3 = a1 - a2
 86057: 82 1b 58                 a4 = u64 [sp + 0x58]
 86060: ab ba 1c                 jump @6846 if a3 != a4
      :                          @6843
 86063: c9 79 0a                 a3 = a2 - a0
 86066: 01                       fallthrough
      :                          @6844
 86067: 82 8b                    a4 = u64 [a1]
 86069: ab 9b ef                 jump @6842 if a4 != a2
      :                          @6845
 86072: 7b 8a                    u64 [a1] = a3
 86074: 33 0c                    a5 = 0
 86076: 33 08 b0 02 03           a1 = 0x302b0
 86081: 95 88 00 00 10           a1 = a1 + 0x100000
 86086: 28 0d                    jump @6847
      :                          @6846
 86088: 33 08 b0 02 03           a1 = 0x302b0
 86093: 95 88 00 00 10           a1 = a1 + 0x100000
 86098: 01                       fallthrough
      :                          @6847
 86099: 82 89                    a2 = u64 [a1]
 86101: c9 98 0a                 a3 = a1 - a2
 86104: 82 1b 50                 a4 = u64 [sp + 0x50]
 86107: ab ba 1c                 jump @6851 if a3 != a4
      :                          @6848
 86110: c9 79 0a                 a3 = a2 - a0
 86113: 01                       fallthrough
      :                          @6849
 86114: 82 8b                    a4 = u64 [a1]
 86116: ab 9b ef                 jump @6847 if a4 != a2
      :                          @6850
 86119: 7b 8a                    u64 [a1] = a3
 86121: 33 0c                    a5 = 0
 86123: 33 08 b0 02 03           a1 = 0x302b0
 86128: 95 88 00 00 10           a1 = a1 + 0x100000
 86133: 28 0d                    jump @6852
      :                          @6851
 86135: 33 08 b0 02 03           a1 = 0x302b0
 86140: 95 88 00 00 10           a1 = a1 + 0x100000
 86145: 01                       fallthrough
      :                          @6852
 86146: 82 89                    a2 = u64 [a1]
 86148: c9 98 0a                 a3 = a1 - a2
 86151: 82 1b 60                 a4 = u64 [sp + 0x60]
 86154: ab ba 11                 jump @6856 if a3 != a4
      :                          @6853
 86157: c9 79 0a                 a3 = a2 - a0
 86160: 01                       fallthrough
      :                          @6854
 86161: 82 8b                    a4 = u64 [a1]
 86163: ab 9b ef                 jump @6852 if a4 != a2
      :                          @6855
 86166: 7b 8a                    u64 [a1] = a3
 86168: 33 0c                    a5 = 0
 86170: 01                       fallthrough
      :                          @6856
 86171: 82 10 98 00              ra = u64 [sp + 0x98]
 86175: 82 15 90 00              s0 = u64 [sp + 0x90]
 86179: 82 16 88 00              s1 = u64 [sp + 0x88]
 86183: 95 11 a0 00              sp = sp + 0xa0
 86187: 32 00                    ret
      :                          @6857
 86189: 00                       trap
      :                          @6858
 86190: 00                       trap
      :                          @6859
 86191: 00                       trap
      :                          @6860
 86192: 00                       trap
      :                          @6861
 86193: 95 11 38 ff              sp = sp + 0xffffffffffffff38
 86197: 7b 10 c0 00              u64 [sp + 0xc0] = ra
 86201: 7b 15 b8 00              u64 [sp + 0xb8] = s0
 86205: 7b 16 b0 00              u64 [sp + 0xb0] = s1
 86209: 82 86                    s1 = u64 [a1]
 86211: 7b 14 78                 u64 [sp + 0x78] = t2
 86214: 64 72                    t0 = a0
 86216: 95 64 01                 t2 = s1 + 0x1
 86219: 7b 18 70                 u64 [sp + 0x70] = a1
 86222: 7b 84                    u64 [a1] = t2
 86224: ae a7 94 01              jump @6887 if a0 >=u a3
      :                          @6862
 86228: 97 23 03                 t1 = t0 << 0x3
 86231: c8 39 07                 a0 = a2 + t1
 86234: 7b 17 20                 u64 [sp + 0x20] = a0
 86237: 7b 74                    u64 [a0] = t2
 86239: ae c2 86 01              jump @6888 if t0 >=u a5
      :                          @6863
 86243: 82 15 e0 00              s0 = u64 [sp + 0xe0]
 86247: 82 58 10                 a1 = u64 [s0 + 0x10]
 86250: c8 3b 07                 a0 = a4 + t1
 86253: 7b 17 88 00              u64 [sp + 0x88] = a0
 86257: 7b 74                    u64 [a0] = t2
 86259: ae 82 73 01              jump @6889 if t0 >=u a1
      :                          @6864
 86263: 7b 15 68                 u64 [sp + 0x68] = s0
 86266: 82 55 08                 s0 = u64 [s0 + 0x8]
 86269: 96 28 18                 a1 = t0 * 0x18
 86272: c8 58 08                 a1 = a1 + s0
 86275: 82 85 10                 s0 = u64 [a1 + 0x10]
 86278: 51 05 4a 01              jump @6884 if s0 == 0
      :                          @6865
 86282: 82 17 d8 00              a0 = u64 [sp + 0xd8]
 86286: 7b 17 80 00              u64 [sp + 0x80] = a0
 86290: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 86294: 82 10 c8 00              ra = u64 [sp + 0xc8]
 86298: 82 86 08                 s1 = u64 [a1 + 0x8]
 86301: 7b 12 58                 u64 [sp + 0x58] = t0
 86304: 7b 10 50                 u64 [sp + 0x50] = ra
 86307: ae 02 44 01              jump @6890 if t0 >=u ra
      :                          @6866
 86311: 49 21 98 00              u64 [sp + 152] = 0
 86315: 82 18 78                 a1 = u64 [sp + 0x78]
 86318: c8 38 08                 a1 = a1 + t1
 86321: 7b 18 a0 00              u64 [sp + 0xa0] = a1
 86325: c8 27 08                 a1 = a0 + t0
 86328: 7b 18 28                 u64 [sp + 0x28] = a1
 86331: 97 55 03                 s0 = s0 << 0x3
 86334: 64 73                    t1 = a0
 86336: 7b 1a 48                 u64 [sp + 0x48] = a3
 86339: 7b 1c 60                 u64 [sp + 0x60] = a5
 86342: 7b 19 40                 u64 [sp + 0x40] = a2
 86345: 7b 17 38                 u64 [sp + 0x38] = a0
 86348: 7b 1b 30                 u64 [sp + 0x30] = a4
 86351: 28 1d                    jump @6870
      :                          @6867
 86353: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 86357: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 86360: 95 66 08                 s1 = s1 + 0x8
 86363: 52 05 11                 jump @6870 if s0 != 0
      :                          @6868
 86366: 28 f2 00                 jump @6884
      :                          @6869
 86369: e6 84 04                 t2 = minu(t2, a1)
 86372: 82 17 88 00              a0 = u64 [sp + 0x88]
 86376: 7b 74                    u64 [a0] = t2
 86378: 28 e7                    jump @6867
      :                          @6870
 86380: 7b 16 a8 00              u64 [sp + 0xa8] = s1
 86384: 82 66                    s1 = u64 [s1]
 86386: ae a6 42 01              jump @6895 if s1 >=u a3
      :                          @6871
 86390: 97 67 03                 a0 = s1 << 0x3
 86393: c8 79 08                 a1 = a2 + a0
 86396: 82 88                    a1 = u64 [a1]
 86398: 51 08 0e                 jump @6874 if a1 == 0
      :                          @6872
 86401: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 86405: 82 77                    a0 = u64 [a0]
 86407: ab 76 da                 jump @6869 if s1 != a0
      :                          @6873
 86410: 28 c7                    jump @6867
      :                          @6874
 86412: ae 06 29 01              jump @6896 if s1 >=u ra
      :                          @6875
 86416: 82 14 78                 t2 = u64 [sp + 0x78]
 86419: 7b 17 90 00              u64 [sp + 0x90] = a0
 86423: c8 47 07                 a0 = a0 + t2
 86426: 7b 72                    u64 [a0] = t0
 86428: 82 17 68                 a0 = u64 [sp + 0x68]
 86431: 7b 17 18                 u64 [sp + 0x18] = a0
 86434: 82 17 80 00              a0 = u64 [sp + 0x80]
 86438: 7b 17 10                 u64 [sp + 0x10] = a0
 86441: 7b 13 08                 u64 [sp + 0x8] = t1
 86444: 7b 10                    u64 [sp] = ra
 86446: 64 67                    a0 = s1
 86448: 82 18 70                 a1 = u64 [sp + 0x70]
 86451: 50 20 fa 03 fe fe        ra = 1018, jump @6861
      :                          @6876 [@dyn 509]
 86457: 82 1c 60                 a5 = u64 [sp + 0x60]
 86460: ae c6 a6 00              jump @6885 if s1 >=u a5
      :                          @6877
 86464: 82 19 88 00              a2 = u64 [sp + 0x88]
 86468: 82 92                    t0 = u64 [a2]
 86470: 82 18 90 00              a1 = u64 [sp + 0x90]
 86474: 82 17 30                 a0 = u64 [sp + 0x30]
 86477: c8 78 08                 a1 = a1 + a0
 86480: 82 8a                    a3 = u64 [a1]
 86482: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 86486: 82 b6                    s1 = u64 [a4]
 86488: 82 1b 98 00              a4 = u64 [sp + 0x98]
 86492: 83 bb 01                 i32 a4 = a4 + 0x1
 86495: e6 a2 04                 t2 = minu(t0, a3)
 86498: 88 6a ff                 a3 = s1 <u 0xffffffffffffffff
 86501: 7b 1b 98 00              u64 [sp + 0x98] = a4
 86505: 89 bb 02                 a4 = a4 <s 0x2
 86508: d4 ba 0a                 a3 = a3 | a4
 86511: 7b 94                    u64 [a2] = t2
 86513: 64 7b                    a4 = a0
 86515: 52 0a 1f                 jump @6880 if a3 != 0
      :                          @6878
 86518: 82 12 58                 t0 = u64 [sp + 0x58]
 86521: 82 1a 48                 a3 = u64 [sp + 0x48]
 86524: 82 19 40                 a2 = u64 [sp + 0x40]
 86527: 82 10 50                 ra = u64 [sp + 0x50]
 86530: 82 17 80 00              a0 = u64 [sp + 0x80]
 86534: 82 13 38                 t1 = u64 [sp + 0x38]
 86537: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 86541: ac 72 31                 jump @6883 if t0 <u a0
      :                          @6879
 86544: 28 53                    jump @6886
      :                          @6880
 86546: 82 12 58                 t0 = u64 [sp + 0x58]
 86549: 82 1a 48                 a3 = u64 [sp + 0x48]
 86552: 82 19 40                 a2 = u64 [sp + 0x40]
 86555: 82 10 50                 ra = u64 [sp + 0x50]
 86558: 82 13 38                 t1 = u64 [sp + 0x38]
 86561: 33 07 ff                 a0 = 0xffffffffffffffff
 86564: aa 76 2d ff              jump @6867 if s1 == a0
      :                          @6881
 86568: 82 88                    a1 = u64 [a1]
 86570: 82 17 20                 a0 = u64 [sp + 0x20]
 86573: 82 77                    a0 = u64 [a0]
 86575: ac 78 22 ff              jump @6867 if a1 <u a0
      :                          @6882
 86579: 82 17 80 00              a0 = u64 [sp + 0x80]
 86583: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 86587: ae 72 28                 jump @6886 if t0 >=u a0
      :                          @6883
 86590: 82 17 28                 a0 = u64 [sp + 0x28]
 86593: 33 08 01                 a1 = 0x1
 86596: 78 78                    u8 [a0] = a1
 86598: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 86601: 95 66 08                 s1 = s1 + 0x8
 86604: 52 05 20 ff              jump @6870 if s0 != 0
      :                          @6884
 86608: 82 10 c0 00              ra = u64 [sp + 0xc0]
 86612: 82 15 b8 00              s0 = u64 [sp + 0xb8]
 86616: 82 16 b0 00              s1 = u64 [sp + 0xb0]
 86620: 95 11 c8 00              sp = sp + 0xc8
 86624: 32 00                    ret
      :                          @6885
 86626: 00                       trap
      :                          @6886
 86627: 00                       trap
      :                          @6887
 86628: 00                       trap
      :                          @6888
 86629: 00                       trap
      :                          @6889
 86630: 00                       trap
      :                          @6890
 86631: 82 66                    s1 = u64 [s1]
 86633: ae a6 4b                 jump @6895 if s1 >=u a3
      :                          @6891
 86636: 64 78                    a1 = a0
 86638: 97 65 03                 s0 = s1 << 0x3
 86641: c8 59 07                 a0 = a2 + s0
 86644: 82 77                    a0 = u64 [a0]
 86646: 52 07 40                 jump @6897 if a0 != 0
      :                          @6892
 86649: ae 06 3c                 jump @6896 if s1 >=u ra
      :                          @6893
 86652: 82 14 78                 t2 = u64 [sp + 0x78]
 86655: c8 54 07                 a0 = t2 + s0
 86658: 7b 72                    u64 [a0] = t0
 86660: 82 17 68                 a0 = u64 [sp + 0x68]
 86663: 7b 17 18                 u64 [sp + 0x18] = a0
 86666: 82 17 80 00              a0 = u64 [sp + 0x80]
 86670: 7b 17 10                 u64 [sp + 0x10] = a0
 86673: 7b 18 08                 u64 [sp + 0x8] = a1
 86676: 7b 10                    u64 [sp] = ra
 86678: 64 67                    a0 = s1
 86680: 82 18 70                 a1 = u64 [sp + 0x70]
 86683: 64 b6                    s1 = a4
 86685: 50 20 fc 03 14 fe        ra = 1020, jump @6861
      :                          @6894 [@dyn 510]
 86691: 82 19 88 00              a2 = u64 [sp + 0x88]
 86695: 82 97                    a0 = u64 [a2]
 86697: c8 65 05                 s0 = s0 + s1
 86700: 82 58                    a1 = u64 [s0]
 86702: e6 87 07                 a0 = minu(a0, a1)
 86705: 7b 97                    u64 [a2] = a0
 86707: 00                       trap
      :                          @6895
 86708: 00                       trap
      :                          @6896
 86709: 00                       trap
      :                          @6897
 86710: 00                       trap
      :                          @6898
 86711: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 86715: 7b 10 88 00              u64 [sp + 0x88] = ra
 86719: 7b 15 80 00              u64 [sp + 0x80] = s0
 86723: 7b 16 78                 u64 [sp + 0x78] = s1
 86726: 7b 18 28                 u64 [sp + 0x28] = a1
 86729: 82 89 10                 a2 = u64 [a1 + 0x10]
 86732: 49 11 58                 u64 [sp + 88] = 0
 86735: 51 09 35 01              jump @6921 if a2 == 0
      :                          @6899
 86739: 7b 17 18                 u64 [sp + 0x18] = a0
 86742: 98 97 3c                 a0 = a2 >> 0x3c
 86745: 52 07 4b 02              jump @6947 if a0 != 0
      :                          @6900
 86749: 88 77 01                 a0 = a0 <u 0x1
 86752: 7b 19 50                 u64 [sp + 0x50] = a2
 86755: 97 99 03                 a2 = a2 << 0x3
 86758: 97 72 03                 t0 = a0 << 0x3
 86761: 33 04 b0 02 03           t2 = 0x302b0
 86766: 33 03 00 00 10           t1 = 0x100000
 86771: c8 34 0a                 a3 = t2 + t1
 86774: 01                       fallthrough
      :                          @6901
 86775: 82 ab                    a4 = u64 [a3]
 86777: c8 9b 0c                 a5 = a4 + a2
 86780: ac bc 26 02              jump @6945 if a5 <u a4
      :                          @6902
 86784: c8 2c 07                 a0 = a5 + t0
 86787: d8 c7 06                 s1 = a0 <u a5
 86790: d8 73 07                 a0 = t1 <u a0
 86793: d4 67 07                 a0 = a0 | s1
 86796: 52 07 16 02              jump @6945 if a0 != 0
      :                          @6903
 86800: c9 c4 06                 s1 = t2 - a5
 86803: c8 36 08                 a1 = s1 + t1
 86806: 84 86 07                 s1 = a1 & 0x7
 86809: c8 6c 0c                 a5 = a5 + s1
 86812: 01                       fallthrough
      :                          @6904
 86813: 82 a7                    a0 = u64 [a3]
 86815: ab b7 d8                 jump @6901 if a0 != a4
      :                          @6905
 86818: 7b ac                    u64 [a3] = a5
 86820: 33 05                    s0 = 0
 86822: c9 68 07                 a0 = a1 - s1
 86825: 7b 17 40                 u64 [sp + 0x40] = a0
 86828: 33 08                    a1 = 0
 86830: 7b 19 30                 u64 [sp + 0x30] = a2
 86833: 50 20 fe 03 dc b8 01     ra = 1022, jump @13689
      :                          @6906 [@dyn 511]
 86840: 82 19 30                 a2 = u64 [sp + 0x30]
 86843: 33 03 b0 02 03           t1 = 0x302b0
 86848: 33 02 00 00 10           t0 = 0x100000
 86853: c8 23 07                 a0 = t1 + t0
 86856: 01                       fallthrough
      :                          @6907
 86857: 82 7a                    a3 = u64 [a0]
 86859: c8 9a 0b                 a4 = a3 + a2
 86862: ac ab d4 01              jump @6945 if a4 <u a3
      :                          @6908
 86866: 95 b8 08                 a1 = a4 + 0x8
 86869: d8 b8 0c                 a5 = a1 <u a4
 86872: d8 82 08                 a1 = t0 <u a1
 86875: d4 c8 08                 a1 = a1 | a5
 86878: 52 08 c4 01              jump @6945 if a1 != 0
      :                          @6909
 86882: c9 b3 08                 a1 = t1 - a4
 86885: c8 28 08                 a1 = a1 + t0
 86888: 84 8c 07                 a5 = a1 & 0x7
 86891: c8 cb 0b                 a4 = a4 + a5
 86894: 01                       fallthrough
      :                          @6910
 86895: 82 75                    s0 = u64 [a0]
 86897: ab a5 d8                 jump @6907 if s0 != a3
      :                          @6911
 86900: 7b 7b                    u64 [a0] = a4
 86902: 33 06                    s1 = 0
 86904: c9 c8 07                 a0 = a1 - a5
 86907: 7b 17 38                 u64 [sp + 0x38] = a0
 86910: 33 08                    a1 = 0
 86912: 50 20 00 04 8d b8 01     ra = 1024, jump @13689
      :                          @6912 [@dyn 512]
 86919: 82 13 30                 t1 = u64 [sp + 0x30]
 86922: 33 07 b0 02 03           a0 = 0x302b0
 86927: 33 02 00 00 10           t0 = 0x100000
 86932: c8 27 09                 a2 = a0 + t0
 86935: 01                       fallthrough
      :                          @6913
 86936: 82 96                    s1 = u64 [a2]
 86938: c8 36 0a                 a3 = s1 + t1
 86941: ac 6a 86 01              jump @6946 if a3 <u s1
      :                          @6914
 86945: 95 ab 08                 a4 = a3 + 0x8
 86948: d8 ab 0c                 a5 = a4 <u a3
 86951: d8 b2 0b                 a4 = t0 <u a4
 86954: d4 cb 0b                 a4 = a4 | a5
 86957: 52 0b 76 01              jump @6946 if a4 != 0
      :                          @6915
 86961: c9 a7 0b                 a4 = a0 - a3
 86964: c8 2b 0b                 a4 = a4 + t0
 86967: 84 b5 07                 s0 = a4 & 0x7
 86970: c8 5a 0a                 a3 = a3 + s0
 86973: 01                       fallthrough
      :                          @6916
 86974: 82 9c                    a5 = u64 [a2]
 86976: ab 6c d8                 jump @6913 if a5 != s1
      :                          @6917
 86979: 7b 9a                    u64 [a2] = a3
 86981: 33 08                    a1 = 0
 86983: 01                       fallthrough
      :                          @6918
 86984: c9 5b 0c                 a5 = a4 - s0
 86987: 82 1a 50                 a3 = u64 [sp + 0x50]
 86990: 7b 1c 48                 u64 [sp + 0x48] = a5
 86993: 53 1a 02 4a              jump @6922 if a3 <u 2
      :                          @6919
 86997: 95 39 f8                 a2 = t1 + 0xfffffffffffffff8
 87000: 33 08 ff 00              a1 = 0xff
 87004: 64 c7                    a0 = a5
 87006: 50 20 02 04 2f b8 01     ra = 1026, jump @13689
      :                          @6920 [@dyn 513]
 87013: 82 1c 48                 a5 = u64 [sp + 0x48]
 87016: 82 1a 50                 a3 = u64 [sp + 0x50]
 87019: 82 13 30                 t1 = u64 [sp + 0x30]
 87022: c8 65 05                 s0 = s0 + s1
 87025: 33 07 b0 02 13           a0 = 0x1302b0
 87030: c9 57 07                 a0 = a0 - s0
 87033: 33 08 ff                 a1 = 0xffffffffffffffff
 87036: 7b 78 f8                 u64 [a0 + 0xfffffffffffffff8] = a1
 87039: 7b 1a 20                 u64 [sp + 0x20] = a3
 87042: 28 21                    jump @6923
      :                          @6921
 87044: 49 11 60                 u64 [sp + 96] = 0
 87047: 33 08 08                 a1 = 0x8
 87050: 7b 18 68                 u64 [sp + 0x68] = a1
 87053: 49 11 70                 u64 [sp + 112] = 0
 87056: 49 17 10                 u64 [a0 + 16] = 0
 87059: 7b 78 08                 u64 [a0 + 0x8] = a1
 87062: 49 07                    u64 [a0 + 0] = 0
 87064: 28 f9 00                 jump @6944
      :                          @6922
 87067: 49 0c ff                 u64 [a5 + 0] = 0xffffffffffffffff
 87070: 49 11 20 01              u64 [sp + 32] = 0x1
 87074: 01                       fallthrough
      :                          @6923
 87075: 33 06                    s1 = 0
 87077: 49 11 60                 u64 [sp + 96] = 0
 87080: 49 11 68 08              u64 [sp + 104] = 0x8
 87084: 49 11 70                 u64 [sp + 112] = 0
 87087: 82 15 40                 s0 = u64 [sp + 0x40]
 87090: 28 0b                    jump @6925
      :                          @6924
 87092: 95 66 01                 s1 = s1 + 0x1
 87095: 95 55 08                 s0 = s0 + 0x8
 87098: aa 6a 3b                 jump @6928 if a3 == s1
      :                          @6925
 87101: 82 57                    a0 = u64 [s0]
 87103: 52 07 f5                 jump @6924 if a0 != 0
      :                          @6926
 87106: 95 17 60                 a0 = sp + 0x60
 87109: 7b 17 10                 u64 [sp + 0x10] = a0
 87112: 82 17 28                 a0 = u64 [sp + 0x28]
 87115: 7b 17 08                 u64 [sp + 0x8] = a0
 87118: 95 18 58                 a1 = sp + 0x58
 87121: 82 17 20                 a0 = u64 [sp + 0x20]
 87124: 7b 17                    u64 [sp] = a0
 87126: 64 67                    a0 = s1
 87128: 82 19 40                 a2 = u64 [sp + 0x40]
 87131: 82 1b 38                 a4 = u64 [sp + 0x38]
 87134: 82 1c 50                 a5 = u64 [sp + 0x50]
 87137: 82 14 48                 t2 = u64 [sp + 0x48]
 87140: 50 20 04 04 c1 00        ra = 1028, jump @6948
      :                          @6927 [@dyn 514]
 87146: 82 1c 48                 a5 = u64 [sp + 0x48]
 87149: 82 1a 50                 a3 = u64 [sp + 0x50]
 87152: 82 13 30                 t1 = u64 [sp + 0x30]
 87155: 28 c1                    jump @6924
      :                          @6928
 87157: 82 17 70                 a0 = u64 [sp + 0x70]
 87160: 82 18 68                 a1 = u64 [sp + 0x68]
 87163: 82 19 60                 a2 = u64 [sp + 0x60]
 87166: 82 1b 18                 a4 = u64 [sp + 0x18]
 87169: 7b b7 10                 u64 [a4 + 0x10] = a0
 87172: 7b b8 08                 u64 [a4 + 0x8] = a1
 87175: 33 07 00 00 02           a0 = 0x20000
 87180: 7b b9                    u64 [a4] = a2
 87182: ac a7 83 00              jump @6944 if a0 <u a3
      :                          @6929
 87186: 33 07 b0 02 03           a0 = 0x302b0
 87191: 95 77 00 00 10           a0 = a0 + 0x100000
 87196: 01                       fallthrough
      :                          @6930
 87197: 82 78                    a1 = u64 [a0]
 87199: c9 87 09                 a2 = a0 - a1
 87202: ab c9 1c                 jump @6934 if a2 != a5
      :                          @6931
 87205: c9 38 09                 a2 = a1 - t1
 87208: 01                       fallthrough
      :                          @6932
 87209: 82 7a                    a3 = u64 [a0]
 87211: ab 8a f2                 jump @6930 if a3 != a1
      :                          @6933
 87214: 7b 79                    u64 [a0] = a2
 87216: 33 0b                    a4 = 0
 87218: 33 07 b0 02 03           a0 = 0x302b0
 87223: 95 77 00 00 10           a0 = a0 + 0x100000
 87228: 28 0d                    jump @6935
      :                          @6934
 87230: 33 07 b0 02 03           a0 = 0x302b0
 87235: 95 77 00 00 10           a0 = a0 + 0x100000
 87240: 01                       fallthrough
      :                          @6935
 87241: 82 78                    a1 = u64 [a0]
 87243: c9 87 09                 a2 = a0 - a1
 87246: 82 1a 38                 a3 = u64 [sp + 0x38]
 87249: ab a9 1c                 jump @6939 if a2 != a3
      :                          @6936
 87252: c9 38 09                 a2 = a1 - t1
 87255: 01                       fallthrough
      :                          @6937
 87256: 82 7a                    a3 = u64 [a0]
 87258: ab 8a ef                 jump @6935 if a3 != a1
      :                          @6938
 87261: 7b 79                    u64 [a0] = a2
 87263: 33 0b                    a4 = 0
 87265: 33 07 b0 02 03           a0 = 0x302b0
 87270: 95 77 00 00 10           a0 = a0 + 0x100000
 87275: 28 0d                    jump @6940
      :                          @6939
 87277: 33 07 b0 02 03           a0 = 0x302b0
 87282: 95 77 00 00 10           a0 = a0 + 0x100000
 87287: 01                       fallthrough
      :                          @6940
 87288: 82 78                    a1 = u64 [a0]
 87290: c9 87 09                 a2 = a0 - a1
 87293: 82 1a 40                 a3 = u64 [sp + 0x40]
 87296: ab a9 11                 jump @6944 if a2 != a3
      :                          @6941
 87299: c9 38 09                 a2 = a1 - t1
 87302: 01                       fallthrough
      :                          @6942
 87303: 82 7a                    a3 = u64 [a0]
 87305: ab 8a ef                 jump @6940 if a3 != a1
      :                          @6943
 87308: 7b 79                    u64 [a0] = a2
 87310: 33 0b                    a4 = 0
 87312: 01                       fallthrough
      :                          @6944
 87313: 82 10 88 00              ra = u64 [sp + 0x88]
 87317: 82 15 80 00              s0 = u64 [sp + 0x80]
 87321: 82 16 78                 s1 = u64 [sp + 0x78]
 87324: 95 11 90 00              sp = sp + 0x90
 87328: 32 00                    ret
      :                          @6945
 87330: 00                       trap
      :                          @6946
 87331: 00                       trap
      :                          @6947
 87332: 00                       trap
      :                          @6948
 87333: 95 11 50 ff              sp = sp + 0xffffffffffffff50
 87337: 7b 10 a8 00              u64 [sp + 0xa8] = ra
 87341: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 87345: 7b 16 98 00              u64 [sp + 0x98] = s1
 87349: 82 86                    s1 = u64 [a1]
 87351: 7b 14 58                 u64 [sp + 0x58] = t2
 87354: 7b 1b 90 00              u64 [sp + 0x90] = a4
 87358: 95 64 01                 t2 = s1 + 0x1
 87361: 7b 18 50                 u64 [sp + 0x50] = a1
 87364: 7b 84                    u64 [a1] = t2
 87366: ae a7 6f 01              jump @6974 if a0 >=u a3
      :                          @6949
 87370: 97 73 03                 t1 = a0 << 0x3
 87373: c8 39 08                 a1 = a2 + t1
 87376: 7b 18 48                 u64 [sp + 0x48] = a1
 87379: 7b 84                    u64 [a1] = t2
 87381: ae c7 61 01              jump @6975 if a0 >=u a5
      :                          @6950
 87385: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 87389: 82 b8 10                 a1 = u64 [a4 + 0x10]
 87392: 82 16 90 00              s1 = u64 [sp + 0x90]
 87396: c8 36 06                 s1 = s1 + t1
 87399: 7b 16 70                 u64 [sp + 0x70] = s1
 87402: 7b 64                    u64 [s1] = t2
 87404: ae 87 47 01              jump @6972 if a0 >=u a1
      :                          @6951
 87408: 7b 1c 88 00              u64 [sp + 0x88] = a5
 87412: 82 b8 08                 a1 = u64 [a4 + 0x8]
 87415: 96 7c 18                 a5 = a0 * 0x18
 87418: c8 c8 08                 a1 = a1 + a5
 87421: 82 86 10                 s1 = u64 [a1 + 0x10]
 87424: 51 06 1e 01              jump @6968 if s1 == 0
      :                          @6952
 87428: 82 1c c0 00              a5 = u64 [sp + 0xc0]
 87432: 7b 1c 68                 u64 [sp + 0x68] = a5
 87435: 82 10 b0 00              ra = u64 [sp + 0xb0]
 87439: 82 85 08                 s0 = u64 [a1 + 0x8]
 87442: 82 18 58                 a1 = u64 [sp + 0x58]
 87445: c8 38 08                 a1 = a1 + t1
 87448: 7b 18 60                 u64 [sp + 0x60] = a1
 87451: 97 6c 03                 a5 = s1 << 0x3
 87454: 7b 17 38                 u64 [sp + 0x38] = a0
 87457: 7b 1a 30                 u64 [sp + 0x30] = a3
 87460: 7b 19 28                 u64 [sp + 0x28] = a2
 87463: 7b 1b 40                 u64 [sp + 0x40] = a4
 87466: 7b 10 20                 u64 [sp + 0x20] = ra
 87469: 28 23                    jump @6955
      :                          @6953
 87471: 82 17 38                 a0 = u64 [sp + 0x38]
 87474: 82 1a 30                 a3 = u64 [sp + 0x30]
 87477: 82 19 28                 a2 = u64 [sp + 0x28]
 87480: 82 1b 40                 a4 = u64 [sp + 0x40]
 87483: 82 10 20                 ra = u64 [sp + 0x20]
 87486: 82 15 78                 s0 = u64 [sp + 0x78]
 87489: 82 1c 80 00              a5 = u64 [sp + 0x80]
 87493: 01                       fallthrough
      :                          @6954
 87494: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 87497: 95 55 08                 s0 = s0 + 0x8
 87500: 51 0c d2 00              jump @6968 if a5 == 0
      :                          @6955
 87504: 82 56                    s1 = u64 [s0]
 87506: ae a6 de 00              jump @6969 if s1 >=u a3
      :                          @6956
 87510: 97 62 03                 t0 = s1 << 0x3
 87513: c8 29 08                 a1 = a2 + t0
 87516: 82 83                    t1 = u64 [a1]
 87518: 51 03 19                 jump @6960 if t1 == 0
      :                          @6957
 87521: ae 07 d0 00              jump @6970 if a0 >=u ra
      :                          @6958
 87525: 82 18 60                 a1 = u64 [sp + 0x60]
 87528: 82 88                    a1 = u64 [a1]
 87530: aa 86 dc                 jump @6954 if s1 == a1
      :                          @6959
 87533: e6 34 04                 t2 = minu(t2, t1)
 87536: 82 18 70                 a1 = u64 [sp + 0x70]
 87539: 7b 84                    u64 [a1] = t2
 87541: 28 d1                    jump @6954
      :                          @6960
 87543: 82 13 68                 t1 = u64 [sp + 0x68]
 87546: ae 06 b8 00              jump @6971 if s1 >=u ra
      :                          @6961
 87550: 7b 1c 80 00              u64 [sp + 0x80] = a5
 87554: 7b 15 78                 u64 [sp + 0x78] = s0
 87557: 82 14 58                 t2 = u64 [sp + 0x58]
 87560: 64 25                    s0 = t0
 87562: c8 24 08                 a1 = t2 + t0
 87565: 7b 87                    u64 [a1] = a0
 87567: 7b 13 10                 u64 [sp + 0x10] = t1
 87570: 7b 1b 08                 u64 [sp + 0x8] = a4
 87573: 7b 10                    u64 [sp] = ra
 87575: 64 67                    a0 = s1
 87577: 82 18 50                 a1 = u64 [sp + 0x50]
 87580: 82 1b 90 00              a4 = u64 [sp + 0x90]
 87584: 82 1c 88 00              a5 = u64 [sp + 0x88]
 87588: 50 20 06 04 01 ff        ra = 1030, jump @6948
      :                          @6962 [@dyn 515]
 87594: 82 18 88 00              a1 = u64 [sp + 0x88]
 87598: ae 86 86 00              jump @6973 if s1 >=u a1
      :                          @6963
 87602: 82 1a 70                 a3 = u64 [sp + 0x70]
 87605: 82 a7                    a0 = u64 [a3]
 87607: 82 18 90 00              a1 = u64 [sp + 0x90]
 87611: c8 58 08                 a1 = a1 + s0
 87614: 82 89                    a2 = u64 [a1]
 87616: e6 97 04                 t2 = minu(a0, a2)
 87619: 7b a4                    u64 [a3] = t2
 87621: 82 87                    a0 = u64 [a1]
 87623: 82 18 48                 a1 = u64 [sp + 0x48]
 87626: 82 88                    a1 = u64 [a1]
 87628: ae 78 63 ff              jump @6953 if a1 >=u a0
      :                          @6964
 87632: 82 13 68                 t1 = u64 [sp + 0x68]
 87635: 82 38 10                 a1 = u64 [t1 + 0x10]
 87638: 82 37                    a0 = u64 [t1]
 87640: ab 78 19                 jump @6967 if a1 != a0
      :                          @6965
 87643: 64 37                    a0 = t1
 87645: 7b 14 18                 u64 [sp + 0x18] = t2
 87648: 50 20 08 04 a8 fd fe     ra = 1032, jump @1605
      :                          @6966 [@dyn 516]
 87655: 82 14 18                 t2 = u64 [sp + 0x18]
 87658: 82 13 68                 t1 = u64 [sp + 0x68]
 87661: 82 38 10                 a1 = u64 [t1 + 0x10]
 87664: 01                       fallthrough
      :                          @6967
 87665: 82 17 38                 a0 = u64 [sp + 0x38]
 87668: 82 1a 30                 a3 = u64 [sp + 0x30]
 87671: 82 19 28                 a2 = u64 [sp + 0x28]
 87674: 82 10 20                 ra = u64 [sp + 0x20]
 87677: 82 15 78                 s0 = u64 [sp + 0x78]
 87680: 82 32 08                 t0 = u64 [t1 + 0x8]
 87683: 97 8c 04                 a5 = a1 << 0x4
 87686: c8 2c 0c                 a5 = a5 + t0
 87689: 7b c7                    u64 [a5] = a0
 87691: 7b c6 08                 u64 [a5 + 0x8] = s1
 87694: 95 88 01                 a1 = a1 + 0x1
 87697: 7b 38 10                 u64 [t1 + 0x10] = a1
 87700: 82 1b 40                 a4 = u64 [sp + 0x40]
 87703: 82 1c 80 00              a5 = u64 [sp + 0x80]
 87707: 28 2b ff                 jump @6954
      :                          @6968
 87710: 82 10 a8 00              ra = u64 [sp + 0xa8]
 87714: 82 15 a0 00              s0 = u64 [sp + 0xa0]
 87718: 82 16 98 00              s1 = u64 [sp + 0x98]
 87722: 95 11 b0 00              sp = sp + 0xb0
 87726: 32 00                    ret
      :                          @6969
 87728: 00                       trap
      :                          @6970
 87729: 00                       trap
      :                          @6971
 87730: 00                       trap
      :                          @6972
 87731: 00                       trap
      :                          @6973
 87732: 00                       trap
      :                          @6974
 87733: 00                       trap
      :                          @6975
 87734: 00                       trap
      :                          @6976
 87735: 95 11 c8 fe              sp = sp + 0xfffffffffffffec8
 87739: 7b 10 30 01              u64 [sp + 0x130] = ra
 87743: 7b 15 28 01              u64 [sp + 0x128] = s0
 87747: 7b 16 20 01              u64 [sp + 0x120] = s1
 87751: 64 92                    t0 = a2
 87753: 82 8c 10                 a5 = u64 [a1 + 0x10]
 87756: 82 99 10                 a2 = u64 [a2 + 0x10]
 87759: 7b 19 60                 u64 [sp + 0x60] = a2
 87762: d4 c9 09                 a2 = a2 | a5
 87765: 7b 1a 50                 u64 [sp + 0x50] = a3
 87768: 64 76                    s1 = a0
 87770: 7b 18 a0 00              u64 [sp + 0xa0] = a1
 87774: 7b 12 a8 00              u64 [sp + 0xa8] = t0
 87778: 7b 1b 58                 u64 [sp + 0x58] = a4
 87781: 52 09 b4 00              jump @6996 if a2 != 0
      :                          @6977
 87785: 82 b8 10                 a1 = u64 [a4 + 0x10]
 87788: 82 b7                    a0 = u64 [a4]
 87790: ab 78 17                 jump @6980 if a1 != a0
      :                          @6978
 87793: 64 b7                    a0 = a4
 87795: 50 20 0a 04 9a fb fe     ra = 1034, jump @1569
      :                          @6979 [@dyn 517]
 87802: 82 1b 58                 a4 = u64 [sp + 0x58]
 87805: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 87809: 82 b8 10                 a1 = u64 [a4 + 0x10]
 87812: 01                       fallthrough
      :                          @6980
 87813: 82 b7 08                 a0 = u64 [a4 + 0x8]
 87816: 82 69 10                 a2 = u64 [s1 + 0x10]
 87819: 96 8a 18                 a3 = a1 * 0x18
 87822: c8 a7 07                 a0 = a0 + a3
 87825: 7b 79 10                 u64 [a0 + 0x10] = a2
 87828: 82 69 08                 a2 = u64 [s1 + 0x8]
 87831: 7b 79 08                 u64 [a0 + 0x8] = a2
 87834: 82 69                    a2 = u64 [s1]
 87836: 7b 79                    u64 [a0] = a2
 87838: 82 29                    a2 = u64 [t0]
 87840: 95 88 01                 a1 = a1 + 0x1
 87843: 7b b8 10                 u64 [a4 + 0x10] = a1
 87846: 51 09 32                 jump @6987 if a2 == 0
      :                          @6981
 87849: 33 07 00 00 02           a0 = 0x20000
 87854: ac 97 2a                 jump @6987 if a0 <u a2
      :                          @6982
 87857: 82 27 08                 a0 = u64 [t0 + 0x8]
 87860: 97 98 03                 a1 = a2 << 0x3
 87863: 33 09 b0 02 03           a2 = 0x302b0
 87868: 95 99 00 00 10           a2 = a2 + 0x100000
 87873: 01                       fallthrough
      :                          @6983
 87874: 82 9a                    a3 = u64 [a2]
 87876: c9 a9 0b                 a4 = a2 - a3
 87879: ab 7b 11                 jump @6987 if a4 != a0
      :                          @6984
 87882: c9 8a 0b                 a4 = a3 - a1
 87885: 01                       fallthrough
      :                          @6985
 87886: 82 9c                    a5 = u64 [a2]
 87888: ab ac f2                 jump @6983 if a5 != a3
      :                          @6986
 87891: 7b 9b                    u64 [a2] = a4
 87893: 33 06                    s1 = 0
 87895: 01                       fallthrough
      :                          @6987
 87896: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 87900: 82 98                    a1 = u64 [a2]
 87902: 51 08 c0 05              jump @7101 if a1 == 0
      :                          @6988
 87906: 33 07 00 00 02           a0 = 0x20000
 87911: ac 87 b7 05              jump @7101 if a0 <u a1
      :                          @6989
 87915: 82 97 08                 a0 = u64 [a2 + 0x8]
 87918: 97 88 03                 a1 = a1 << 0x3
 87921: 33 09 b0 02 03           a2 = 0x302b0
 87926: 95 99 00 00 10           a2 = a2 + 0x100000
 87931: 01                       fallthrough
      :                          @6990
 87932: 82 9a                    a3 = u64 [a2]
 87934: c9 a9 0b                 a4 = a2 - a3
 87937: ab 7b 9d 05              jump @7101 if a4 != a0
      :                          @6991
 87941: c9 8a 0b                 a4 = a3 - a1
 87944: 01                       fallthrough
      :                          @6992
 87945: 82 9c                    a5 = u64 [a2]
 87947: ab ac f1                 jump @6990 if a5 != a3
      :                          @6993
 87950: 7b 9b                    u64 [a2] = a4
 87952: 33 06                    s1 = 0
 87954: 01                       fallthrough
      :                          @6994
 87955: ab ac e9                 jump @6990 if a5 != a3
      :                          @6995
 87958: 28 88 05                 jump @7101
      :                          @6996
 87961: 7b 16 10                 u64 [sp + 0x10] = s1
 87964: 51 0c b5 04              jump @7073 if a5 == 0
      :                          @6997
 87968: 98 c7 3c                 a0 = a5 >> 0x3c
 87971: 52 07 90 05              jump @7105 if a0 != 0
      :                          @6998
 87975: 82 88 08                 a1 = u64 [a1 + 0x8]
 87978: 88 72 01                 t0 = a0 <u 0x1
 87981: 7b 1c 08                 u64 [sp + 0x8] = a5
 87984: 97 c9 03                 a2 = a5 << 0x3
 87987: 97 22 03                 t0 = t0 << 0x3
 87990: 33 04 b0 02 03           t2 = 0x302b0
 87995: 33 03 00 00 10           t1 = 0x100000
 88000: c8 34 00                 ra = t2 + t1
 88003: 01                       fallthrough
      :                          @6999
 88004: 82 06                    s1 = u64 [ra]
 88006: c8 96 0c                 a5 = s1 + a2
 88009: ac 6c 69 05              jump @7104 if a5 <u s1
      :                          @7000
 88013: c8 2c 0a                 a3 = a5 + t0
 88016: d8 ca 05                 s0 = a3 <u a5
 88019: d8 a3 0a                 a3 = t1 <u a3
 88022: d4 5a 0a                 a3 = a3 | s0
 88025: 52 0a 59 05              jump @7104 if a3 != 0
      :                          @7001
 88029: c9 c4 05                 s0 = t2 - a5
 88032: c8 35 05                 s0 = s0 + t1
 88035: 84 5a 07                 a3 = s0 & 0x7
 88038: c8 ac 0c                 a5 = a5 + a3
 88041: 01                       fallthrough
      :                          @7002
 88042: 82 07                    a0 = u64 [ra]
 88044: ab 67 d8                 jump @6999 if a0 != s1
      :                          @7003
 88047: 7b 0c                    u64 [ra] = a5
 88049: 33 0b                    a4 = 0
 88051: c9 a5 05                 s0 = s0 - a3
 88054: 64 57                    a0 = s0
 88056: 7b 19 48                 u64 [sp + 0x48] = a2
 88059: 50 20 0c 04 e5 b1 01     ra = 1036, jump @13635
      :                          @7004 [@dyn 518]
 88066: 82 17 10                 a0 = u64 [sp + 0x10]
 88069: 82 79 10                 a2 = u64 [a0 + 0x10]
 88072: 82 18 48                 a1 = u64 [sp + 0x48]
 88075: c8 58 08                 a1 = a1 + s0
 88078: 7b 18 30                 u64 [sp + 0x30] = a1
 88081: 82 77 08                 a0 = u64 [a0 + 0x8]
 88084: 7b 17 40                 u64 [sp + 0x40] = a0
 88087: 98 97 3c                 a0 = a2 >> 0x3c
 88090: 7b 17 20                 u64 [sp + 0x20] = a0
 88093: 88 77 01                 a0 = a0 <u 0x1
 88096: 7b 19 98 00              u64 [sp + 0x98] = a2
 88100: 97 99 03                 a2 = a2 << 0x3
 88103: 97 77 03                 a0 = a0 << 0x3
 88106: 7b 17 18                 u64 [sp + 0x18] = a0
 88109: 82 17 50                 a0 = u64 [sp + 0x50]
 88112: 82 78 10                 a1 = u64 [a0 + 0x10]
 88115: 7b 18 80 00              u64 [sp + 0x80] = a1
 88119: 82 77 08                 a0 = u64 [a0 + 0x8]
 88122: 7b 17 38                 u64 [sp + 0x38] = a0
 88125: 33 03 b0 02 03           t1 = 0x302b0
 88130: 33 06 00 00 10           s1 = 0x100000
 88135: c8 63 04                 t2 = t1 + s1
 88138: 82 17 08                 a0 = u64 [sp + 0x8]
 88141: 7b 17 b8 00              u64 [sp + 0xb8] = a0
 88145: 7b 15                    u64 [sp] = s0
 88147: 64 50                    ra = s0
 88149: 7b 19 28                 u64 [sp + 0x28] = a2
 88152: 7b 13 90 00              u64 [sp + 0x90] = t1
 88156: 7b 14 88 00              u64 [sp + 0x88] = t2
 88160: 28 3a                    jump @7006
      :                          @7005
 88162: 82 15 48                 s0 = u64 [sp + 0x48]
 88165: 82 19 28                 a2 = u64 [sp + 0x28]
 88168: 82 13 90 00              t1 = u64 [sp + 0x90]
 88172: 33 06 00 00 10           s1 = 0x100000
 88177: 82 14 88 00              t2 = u64 [sp + 0x88]
 88181: 82 10 68                 ra = u64 [sp + 0x68]
 88184: 82 27 08                 a0 = u64 [t0 + 0x8]
 88187: 95 00 08                 ra = ra + 0x8
 88190: 97 8a 03                 a3 = a1 << 0x3
 88193: c8 7a 0a                 a3 = a3 + a0
 88196: 82 1b b0 00              a4 = u64 [sp + 0xb0]
 88200: 7b ab                    u64 [a3] = a4
 88202: 95 88 01                 a1 = a1 + 0x1
 88205: 7b 18 60                 u64 [sp + 0x60] = a1
 88208: 7b 28 10                 u64 [t0 + 0x10] = a1
 88211: 82 18 30                 a1 = u64 [sp + 0x30]
 88214: aa 80 c0 03              jump @7074 if ra == a1
      :                          @7006
 88218: 82 07                    a0 = u64 [ra]
 88220: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 88224: 33 05 08                 s0 = 0x8
 88227: 82 17 98 00              a0 = u64 [sp + 0x98]
 88231: 51 07 41                 jump @7014 if a0 == 0
      :                          @7007
 88234: 82 17 20                 a0 = u64 [sp + 0x20]
 88237: 52 07 86 04              jump @7105 if a0 != 0
      :                          @7008
 88241: 82 12 18                 t0 = u64 [sp + 0x18]
 88244: 01                       fallthrough
      :                          @7009
 88245: 82 47                    a0 = u64 [t2]
 88247: c8 97 08                 a1 = a0 + a2
 88250: ac 78 78 04              jump @7104 if a1 <u a0
      :                          @7010
 88254: c8 28 0b                 a4 = a1 + t0
 88257: d8 8b 0a                 a3 = a4 <u a1
 88260: d8 b6 0b                 a4 = s1 <u a4
 88263: d4 ba 0a                 a3 = a3 | a4
 88266: 52 0a 68 04              jump @7104 if a3 != 0
      :                          @7011
 88270: c9 83 05                 s0 = t1 - a1
 88273: c8 65 05                 s0 = s0 + s1
 88276: 84 5a 07                 a3 = s0 & 0x7
 88279: c8 a8 08                 a1 = a1 + a3
 88282: 01                       fallthrough
      :                          @7012
 88283: 82 4b                    a4 = u64 [t2]
 88285: ab 7b d8                 jump @7009 if a4 != a0
      :                          @7013
 88288: 7b 48                    u64 [t2] = a1
 88290: 33 0c                    a5 = 0
 88292: c9 a5 05                 s0 = s0 - a3
 88295: 01                       fallthrough
      :                          @7014
 88296: 7b 10 68                 u64 [sp + 0x68] = ra
 88299: 64 57                    a0 = s0
 88301: 82 18 40                 a1 = u64 [sp + 0x40]
 88304: 50 20 0e 04 f0 b0 01     ra = 1038, jump @13635
      :                          @7015 [@dyn 519]
 88311: 82 18 98 00              a1 = u64 [sp + 0x98]
 88315: 7b 18 c0 00              u64 [sp + 0xc0] = a1
 88319: 7b 15 c8 00              u64 [sp + 0xc8] = s0
 88323: 7b 18 d0 00              u64 [sp + 0xd0] = a1
 88327: 95 17 c0 00              a0 = sp + 0xc0
 88331: 50 20 10 04 04 fa fe     ra = 1040, jump @1581
      :                          @7016 [@dyn 520]
 88338: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 88342: 82 18 c8 00              a1 = u64 [sp + 0xc8]
 88346: 97 79 03                 a2 = a0 << 0x3
 88349: c8 98 08                 a1 = a1 + a2
 88352: 82 19 b0 00              a2 = u64 [sp + 0xb0]
 88356: 7b 89                    u64 [a1] = a2
 88358: 95 77 01                 a0 = a0 + 0x1
 88361: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 88365: 96 97 18                 a0 = a2 * 0x18
 88368: 82 18 38                 a1 = u64 [sp + 0x38]
 88371: c8 87 07                 a0 = a0 + a1
 88374: 95 7a 10                 a3 = a0 + 0x10
 88377: 95 7c 08                 a5 = a0 + 0x8
 88380: 82 17 80 00              a0 = u64 [sp + 0x80]
 88384: 7b 1a 78                 u64 [sp + 0x78] = a3
 88387: 7b 1c 70                 u64 [sp + 0x70] = a5
 88390: ae 79 1e 01              jump @7035 if a2 >=u a0
      :                          @7017
 88394: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 88398: 82 76 08                 s1 = u64 [a0 + 0x8]
 88401: 82 19 b8 00              a2 = u64 [sp + 0xb8]
 88405: 97 99 03                 a2 = a2 << 0x3
 88408: c8 96 0b                 a4 = s1 + a2
 88411: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 88415: 82 13 90 00              t1 = u64 [sp + 0x90]
 88419: 33 04 00 00 10           t2 = 0x100000
 88424: 82 10 88 00              ra = u64 [sp + 0x88]
 88428: 01                       fallthrough
      :                          @7018
 88429: 51 09 10 01              jump @7036 if a2 == 0
      :                          @7019
 88433: 82 67                    a0 = u64 [s1]
 88435: 82 a8                    a1 = u64 [a3]
 88437: ae 87 c0 03              jump @7107 if a0 >=u a1
      :                          @7020
 88441: 82 c8                    a1 = u64 [a5]
 88443: c8 78 08                 a1 = a1 + a0
 88446: 7c 88                    a1 = u8 [a1]
 88448: 95 66 08                 s1 = s1 + 0x8
 88451: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 88454: 51 08 e7                 jump @7018 if a1 == 0
      :                          @7021
 88457: 7b 1b 60                 u64 [sp + 0x60] = a4
 88460: 01                       fallthrough
      :                          @7022
 88461: 82 08                    a1 = u64 [ra]
 88463: 95 89 20                 a2 = a1 + 0x20
 88466: ac 89 9f 03              jump @7103 if a2 <u a1
      :                          @7023
 88470: 95 9a 08                 a3 = a2 + 0x8
 88473: d8 9a 0b                 a4 = a3 <u a2
 88476: d8 a4 0a                 a3 = t2 <u a3
 88479: d4 ba 0a                 a3 = a3 | a4
 88482: 52 0a 8f 03              jump @7103 if a3 != 0
      :                          @7024
 88486: c9 93 0a                 a3 = t1 - a2
 88489: c8 4a 0a                 a3 = a3 + t2
 88492: 84 ab 07                 a4 = a3 & 0x7
 88495: c8 b9 09                 a2 = a2 + a4
 88498: 01                       fallthrough
      :                          @7025
 88499: 82 0c                    a5 = u64 [ra]
 88501: ab 8c d8                 jump @7022 if a5 != a1
      :                          @7026
 88504: 7b 09                    u64 [ra] = a2
 88506: c9 ba 09                 a2 = a3 - a4
 88509: 7b 97                    u64 [a2] = a0
 88511: 49 21 08 01 04           u64 [sp + 264] = 0x4
 88516: 7b 19 10 01              u64 [sp + 0x110] = a2
 88520: 49 21 18 01 01           u64 [sp + 280] = 0x1
 88525: 82 1a 78                 a3 = u64 [sp + 0x78]
 88528: 82 1c 70                 a5 = u64 [sp + 0x70]
 88531: 82 1b 60                 a4 = u64 [sp + 0x60]
 88534: 49 21 b8 00 01           u64 [sp + 184] = 0x1
 88539: 01                       fallthrough
      :                          @7027
 88540: aa b6 6b                 jump @7034 if s1 == a4
      :                          @7028
 88543: 82 65                    s0 = u64 [s1]
 88545: 82 a8                    a1 = u64 [a3]
 88547: ae 85 4d 03              jump @7102 if s0 >=u a1
      :                          @7029
 88551: 82 c7                    a0 = u64 [a5]
 88553: c8 57 07                 a0 = a0 + s0
 88556: 7c 77                    a0 = u8 [a0]
 88558: 95 66 08                 s1 = s1 + 0x8
 88561: 82 18 b8 00              a1 = u64 [sp + 0xb8]
 88565: 51 07 e7                 jump @7027 if a0 == 0
      :                          @7030
 88568: 82 17 08 01              a0 = u64 [sp + 0x108]
 88572: aa 78 18                 jump @7032 if a1 == a0
      :                          @7031
 88575: 97 87 03                 a0 = a1 << 0x3
 88578: c8 97 07                 a0 = a0 + a2
 88581: 7b 75                    u64 [a0] = s0
 88583: 95 88 01                 a1 = a1 + 0x1
 88586: 7b 18 18 01              u64 [sp + 0x118] = a1
 88590: 7b 18 b8 00              u64 [sp + 0xb8] = a1
 88594: 28 ca                    jump @7027
      :                          @7032
 88596: 95 17 08 01              a0 = sp + 0x108
 88600: 82 18 b8 00              a1 = u64 [sp + 0xb8]
 88604: 50 20 12 04 ec fb fe     ra = 1042, jump @1653
      :                          @7033 [@dyn 521]
 88611: 82 18 b8 00              a1 = u64 [sp + 0xb8]
 88615: 82 1b 60                 a4 = u64 [sp + 0x60]
 88618: 82 1c 70                 a5 = u64 [sp + 0x70]
 88621: 82 1a 78                 a3 = u64 [sp + 0x78]
 88624: 82 10 88 00              ra = u64 [sp + 0x88]
 88628: 33 04 00 00 10           t2 = 0x100000
 88633: 82 13 90 00              t1 = u64 [sp + 0x90]
 88637: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 88641: 82 19 10 01              a2 = u64 [sp + 0x110]
 88645: 28 ba                    jump @7031
      :                          @7034
 88647: 82 17 18 01              a0 = u64 [sp + 0x118]
 88651: 82 18 10 01              a1 = u64 [sp + 0x110]
 88655: 82 19 08 01              a2 = u64 [sp + 0x108]
 88659: 82 25 10                 s0 = u64 [t0 + 0x10]
 88662: 7b 17 e8 00              u64 [sp + 0xe8] = a0
 88666: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 88670: 7b 19 d8 00              u64 [sp + 0xd8] = a2
 88674: 28 2c                    jump @7037
      :                          @7035
 88676: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 88680: 82 13 90 00              t1 = u64 [sp + 0x90]
 88684: 33 04 00 00 10           t2 = 0x100000
 88689: 82 10 88 00              ra = u64 [sp + 0x88]
 88693: 82 17 b8 00              a0 = u64 [sp + 0xb8]
 88697: 52 07 bb 02              jump @7106 if a0 != 0
      :                          @7036
 88701: 49 21 d8 00              u64 [sp + 216] = 0
 88705: 49 21 e0 00 08           u64 [sp + 224] = 0x8
 88710: 49 21 e8 00              u64 [sp + 232] = 0
 88714: 82 15 60                 s0 = u64 [sp + 0x60]
 88717: 01                       fallthrough
      :                          @7037
 88718: 82 17 80 00              a0 = u64 [sp + 0x80]
 88722: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 88726: ae 78 f5 00              jump @7056 if a1 >=u a0
      :                          @7038
 88730: 82 22 08                 t0 = u64 [t0 + 0x8]
 88733: 97 59 03                 a2 = s0 << 0x3
 88736: c8 92 05                 s0 = t0 + a2
 88739: 82 1b 58                 a4 = u64 [sp + 0x58]
 88742: 01                       fallthrough
      :                          @7039
 88743: 51 09 eb 00              jump @7057 if a2 == 0
      :                          @7040
 88747: 82 27                    a0 = u64 [t0]
 88749: 82 a8                    a1 = u64 [a3]
 88751: ae 87 86 02              jump @7107 if a0 >=u a1
      :                          @7041
 88755: 82 c8                    a1 = u64 [a5]
 88757: c8 78 08                 a1 = a1 + a0
 88760: 7c 88                    a1 = u8 [a1]
 88762: 95 22 08                 t0 = t0 + 0x8
 88765: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 88768: 51 08 e7                 jump @7039 if a1 == 0
      :                          @7042
 88771: 7b 15 b8 00              u64 [sp + 0xb8] = s0
 88775: 01                       fallthrough
      :                          @7043
 88776: 82 08                    a1 = u64 [ra]
 88778: 95 89 20                 a2 = a1 + 0x20
 88781: ac 89 64 02              jump @7103 if a2 <u a1
      :                          @7044
 88785: 95 9a 08                 a3 = a2 + 0x8
 88788: d8 9a 0c                 a5 = a3 <u a2
 88791: d8 a4 0a                 a3 = t2 <u a3
 88794: d4 ca 0a                 a3 = a3 | a5
 88797: 52 0a 54 02              jump @7103 if a3 != 0
      :                          @7045
 88801: c9 93 0a                 a3 = t1 - a2
 88804: c8 4a 06                 s1 = a3 + t2
 88807: 84 6a 07                 a3 = s1 & 0x7
 88810: c8 a9 09                 a2 = a2 + a3
 88813: 01                       fallthrough
      :                          @7046
 88814: 82 0c                    a5 = u64 [ra]
 88816: ab 8c d8                 jump @7043 if a5 != a1
      :                          @7047
 88819: 7b 09                    u64 [ra] = a2
 88821: 33 05                    s0 = 0
 88823: c9 a6 03                 t1 = s1 - a3
 88826: 7b 37                    u64 [t1] = a0
 88828: 49 21 08 01 04           u64 [sp + 264] = 0x4
 88833: 7b 13 10 01              u64 [sp + 0x110] = t1
 88837: 33 09 01                 a2 = 0x1
 88840: 7b 19 18 01              u64 [sp + 0x118] = a2
 88844: 82 1a 78                 a3 = u64 [sp + 0x78]
 88847: 82 1c 70                 a5 = u64 [sp + 0x70]
 88850: 82 16 b8 00              s1 = u64 [sp + 0xb8]
 88854: 01                       fallthrough
      :                          @7048
 88855: aa 62 5a                 jump @7055 if t0 == s1
      :                          @7049
 88858: 82 25                    s0 = u64 [t0]
 88860: 82 a8                    a1 = u64 [a3]
 88862: ae 85 12 02              jump @7102 if s0 >=u a1
      :                          @7050
 88866: 82 c7                    a0 = u64 [a5]
 88868: c8 57 07                 a0 = a0 + s0
 88871: 7c 77                    a0 = u8 [a0]
 88873: 95 22 08                 t0 = t0 + 0x8
 88876: 51 07 eb                 jump @7048 if a0 == 0
      :                          @7051
 88879: 82 17 08 01              a0 = u64 [sp + 0x108]
 88883: aa 79 14                 jump @7053 if a2 == a0
      :                          @7052
 88886: 97 97 03                 a0 = a2 << 0x3
 88889: c8 37 07                 a0 = a0 + t1
 88892: 7b 75                    u64 [a0] = s0
 88894: 95 99 01                 a2 = a2 + 0x1
 88897: 7b 19 18 01              u64 [sp + 0x118] = a2
 88901: 28 d2                    jump @7048
      :                          @7053
 88903: 95 17 08 01              a0 = sp + 0x108
 88907: 64 98                    a1 = a2
 88909: 64 26                    s1 = t0
 88911: 7b 19 60                 u64 [sp + 0x60] = a2
 88914: 50 20 14 04 b6 fa fe     ra = 1044, jump @1653
      :                          @7054 [@dyn 522]
 88921: 82 19 60                 a2 = u64 [sp + 0x60]
 88924: 64 62                    t0 = s1
 88926: 82 16 b8 00              s1 = u64 [sp + 0xb8]
 88930: 82 1c 70                 a5 = u64 [sp + 0x70]
 88933: 82 1a 78                 a3 = u64 [sp + 0x78]
 88936: 82 1b 58                 a4 = u64 [sp + 0x58]
 88939: 82 13 10 01              t1 = u64 [sp + 0x110]
 88943: 28 c7                    jump @7052
      :                          @7055
 88945: 82 17 18 01              a0 = u64 [sp + 0x118]
 88949: 82 18 10 01              a1 = u64 [sp + 0x110]
 88953: 82 19 08 01              a2 = u64 [sp + 0x108]
 88957: 7b 17 00 01              u64 [sp + 0x100] = a0
 88961: 7b 18 f8 00              u64 [sp + 0xf8] = a1
 88965: 7b 19 f0 00              u64 [sp + 0xf0] = a2
 88969: 28 17                    jump @7058
      :                          @7056
 88971: 82 1b 58                 a4 = u64 [sp + 0x58]
 88974: 52 05 a6 01              jump @7106 if s0 != 0
      :                          @7057
 88978: 49 21 f0 00              u64 [sp + 240] = 0
 88982: 49 21 f8 00 08           u64 [sp + 248] = 0x8
 88987: 49 21 00 01              u64 [sp + 256] = 0
 88991: 01                       fallthrough
      :                          @7058
 88992: 95 17 c0 00              a0 = sp + 0xc0
 88996: 95 18 d8 00              a1 = sp + 0xd8
 89000: 95 19 f0 00              a2 = sp + 0xf0
 89004: 82 1a 50                 a3 = u64 [sp + 0x50]
 89007: 50 20 16 04 08 fb        ra = 1046, jump @6976
      :                          @7059 [@dyn 523]
 89013: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 89017: 82 73 10                 t1 = u64 [a0 + 0x10]
 89020: 51 03 2f                 jump @7064 if t1 == 0
      :                          @7060
 89023: 82 78 08                 a1 = u64 [a0 + 0x8]
 89026: 9a 3b                    a4 = -t1
 89028: 33 09 01                 a2 = 0x1
 89031: 33 0a 01                 a3 = 0x1
 89034: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 89038: 33 06 01                 s1 = 0x1
 89041: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 89045: 01                       fallthrough
      :                          @7061
 89046: 82 8c                    a5 = u64 [a1]
 89048: aa c5 20                 jump @7065 if s0 == a5
      :                          @7062
 89051: 95 aa 01                 a3 = a3 + 0x1
 89054: c8 ab 0c                 a5 = a4 + a3
 89057: 95 88 08                 a1 = a1 + 0x8
 89060: ab 6c f2                 jump @7061 if a5 != s1
      :                          @7063
 89063: 33 09                    a2 = 0
 89065: 28 42                    jump @7070
      :                          @7064
 89067: 33 0a                    a3 = 0
 89069: 33 09                    a2 = 0
 89071: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 89075: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 89079: 01                       fallthrough
      :                          @7065
 89080: aa a3 33                 jump @7070 if t1 == a3
      :                          @7066
 89083: 82 7b 08                 a4 = u64 [a0 + 0x8]
 89086: c9 a3 08                 a1 = t1 - a3
 89089: 97 aa 03                 a3 = a3 << 0x3
 89092: c8 ba 0a                 a3 = a3 + a4
 89095: 28 0e                    jump @7068
      :                          @7067
 89097: 95 99 01                 a2 = a2 + 0x1
 89100: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 89103: 95 aa 08                 a3 = a3 + 0x8
 89106: 51 08 19                 jump @7070 if a1 == 0
      :                          @7068
 89109: 82 ab                    a4 = u64 [a3]
 89111: aa b5 f2                 jump @7067 if s0 == a4
      :                          @7069
 89114: 97 9c 03                 a5 = a2 << 0x3
 89117: c9 ca 0c                 a5 = a3 - a5
 89120: 7b cb                    u64 [a5] = a4
 89122: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 89125: 95 aa 08                 a3 = a3 + 0x8
 89128: 52 08 ed                 jump @7068 if a1 != 0
      :                          @7070
 89131: 82 28 10                 a1 = u64 [t0 + 0x10]
 89134: 82 2a                    a3 = u64 [t0]
 89136: c9 93 09                 a2 = t1 - a2
 89139: 7b 19 b8 00              u64 [sp + 0xb8] = a2
 89143: 7b 79 10                 u64 [a0 + 0x10] = a2
 89146: ab a8 28 fc              jump @7005 if a1 != a3
      :                          @7071
 89150: 64 27                    a0 = t0
 89152: 50 20 18 04 cf f6 fe     ra = 1048, jump @1581
      :                          @7072 [@dyn 524]
 89159: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 89163: 82 28 10                 a1 = u64 [t0 + 0x10]
 89166: 28 14 fc                 jump @7005
      :                          @7073
 89169: 82 27 08                 a0 = u64 [t0 + 0x8]
 89172: 28 2e                    jump @7080
      :                          @7074
 89174: 82 19 08                 a2 = u64 [sp + 0x8]
 89177: 56 39 00 00 02 29        jump @7080 if a2 >u 131072
      :                          @7075
 89183: 33 08 b0 02 03           a1 = 0x302b0
 89188: 95 88 00 00 10           a1 = a1 + 0x100000
 89193: 82 16                    s1 = u64 [sp]
 89195: 01                       fallthrough
      :                          @7076
 89196: 82 89                    a2 = u64 [a1]
 89198: c9 98 0a                 a3 = a1 - a2
 89201: ab 6a 11                 jump @7080 if a3 != s1
      :                          @7077
 89204: c9 59 0a                 a3 = a2 - s0
 89207: 01                       fallthrough
      :                          @7078
 89208: 82 8b                    a4 = u64 [a1]
 89210: ab 9b f2                 jump @7076 if a4 != a2
      :                          @7079
 89213: 7b 8a                    u64 [a1] = a3
 89215: 33 0c                    a5 = 0
 89217: 01                       fallthrough
      :                          @7080
 89218: 82 28                    a1 = u64 [t0]
 89220: 51 08 2d                 jump @7087 if a1 == 0
      :                          @7081
 89223: 56 38 00 00 02 2a        jump @7087 if a1 >u 131072
      :                          @7082
 89229: 97 88 03                 a1 = a1 << 0x3
 89232: 33 09 b0 02 03           a2 = 0x302b0
 89237: 95 99 00 00 10           a2 = a2 + 0x100000
 89242: 01                       fallthrough
      :                          @7083
 89243: 82 9a                    a3 = u64 [a2]
 89245: c9 a9 0b                 a4 = a2 - a3
 89248: ab 7b 11                 jump @7087 if a4 != a0
      :                          @7084
 89251: c9 8a 0b                 a4 = a3 - a1
 89254: 01                       fallthrough
      :                          @7085
 89255: 82 9c                    a5 = u64 [a2]
 89257: ab ac f2                 jump @7083 if a5 != a3
      :                          @7086
 89260: 7b 9b                    u64 [a2] = a4
 89262: 33 06                    s1 = 0
 89264: 01                       fallthrough
      :                          @7087
 89265: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 89269: 82 98                    a1 = u64 [a2]
 89271: 51 08 32                 jump @7094 if a1 == 0
      :                          @7088
 89274: 33 07 00 00 02           a0 = 0x20000
 89279: ac 87 2a                 jump @7094 if a0 <u a1
      :                          @7089
 89282: 82 97 08                 a0 = u64 [a2 + 0x8]
 89285: 97 88 03                 a1 = a1 << 0x3
 89288: 33 09 b0 02 03           a2 = 0x302b0
 89293: 95 99 00 00 10           a2 = a2 + 0x100000
 89298: 01                       fallthrough
      :                          @7090
 89299: 82 9a                    a3 = u64 [a2]
 89301: c9 a9 0b                 a4 = a2 - a3
 89304: ab 7b 11                 jump @7094 if a4 != a0
      :                          @7091
 89307: c9 8a 0b                 a4 = a3 - a1
 89310: 01                       fallthrough
      :                          @7092
 89311: 82 9c                    a5 = u64 [a2]
 89313: ab ac f2                 jump @7090 if a5 != a3
      :                          @7093
 89316: 7b 9b                    u64 [a2] = a4
 89318: 33 06                    s1 = 0
 89320: 01                       fallthrough
      :                          @7094
 89321: 82 19 10                 a2 = u64 [sp + 0x10]
 89324: 82 98                    a1 = u64 [a2]
 89326: 51 08 30                 jump @7101 if a1 == 0
      :                          @7095
 89329: 33 07 00 00 02           a0 = 0x20000
 89334: ac 87 28                 jump @7101 if a0 <u a1
      :                          @7096
 89337: 82 97 08                 a0 = u64 [a2 + 0x8]
 89340: 97 88 03                 a1 = a1 << 0x3
 89343: 33 09 b0 02 03           a2 = 0x302b0
 89348: 95 99 00 00 10           a2 = a2 + 0x100000
 89353: 01                       fallthrough
      :                          @7097
 89354: 82 9a                    a3 = u64 [a2]
 89356: c9 a9 0b                 a4 = a2 - a3
 89359: ab 7b 0f                 jump @7101 if a4 != a0
      :                          @7098
 89362: c9 8a 0b                 a4 = a3 - a1
 89365: 01                       fallthrough
      :                          @7099
 89366: 82 9c                    a5 = u64 [a2]
 89368: ab ac f2                 jump @7097 if a5 != a3
      :                          @7100
 89371: 7b 9b                    u64 [a2] = a4
 89373: 01                       fallthrough
      :                          @7101
 89374: 82 10 30 01              ra = u64 [sp + 0x130]
 89378: 82 15 28 01              s0 = u64 [sp + 0x128]
 89382: 82 16 20 01              s1 = u64 [sp + 0x120]
 89386: 95 11 38 01              sp = sp + 0x138
 89390: 32 00                    ret
      :                          @7102
 89392: 00                       trap
      :                          @7103
 89393: 00                       trap
      :                          @7104
 89394: 00                       trap
      :                          @7105
 89395: 00                       trap
      :                          @7106
 89396: 00                       trap
      :                          @7107
 89397: 00                       trap
      :                          @7108
 89398: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 89401: 7b 10 58                 u64 [sp + 0x58] = ra
 89404: 7b 15 50                 u64 [sp + 0x50] = s0
 89407: 7b 16 48                 u64 [sp + 0x48] = s1
 89410: 82 89 10                 a2 = u64 [a1 + 0x10]
 89413: 51 09 b7 01              jump @7147 if a2 == 0
      :                          @7109
 89417: 57 09 da 01              jump @7153 if a2 <s 0
      :                          @7110
 89421: 7b 18 28                 u64 [sp + 0x28] = a1
 89424: 85 95 ff                 s0 = a2 ^ 0xffffffffffffffff
 89427: 98 55 3f                 s0 = s0 >> 0x3f
 89430: 33 08 b0 02 03           a1 = 0x302b0
 89435: 33 02 00 00 10           t0 = 0x100000
 89440: c8 28 08                 a1 = a1 + t0
 89443: 01                       fallthrough
      :                          @7111
 89444: 82 8b                    a4 = u64 [a1]
 89446: c8 9b 0a                 a3 = a4 + a2
 89449: ac ba b9 01              jump @7152 if a3 <u a4
      :                          @7112
 89453: c8 5a 0c                 a5 = a3 + s0
 89456: d8 ac 06                 s1 = a5 <u a3
 89459: d8 c2 0c                 a5 = t0 <u a5
 89462: d4 6c 0c                 a5 = a5 | s1
 89465: 52 0c a9 01              jump @7152 if a5 != 0
      :                          @7113
 89469: 82 8c                    a5 = u64 [a1]
 89471: ab bc e5                 jump @7111 if a5 != a4
      :                          @7114
 89474: 7b 8a                    u64 [a1] = a3
 89476: 33 06                    s1 = 0
 89478: 7b 17 18                 u64 [sp + 0x18] = a0
 89481: 33 07 b0 02 13           a0 = 0x1302b0
 89486: c9 a7 05                 s0 = a0 - a3
 89489: 64 57                    a0 = s0
 89491: 33 08                    a1 = 0
 89493: 7b 19 20                 u64 [sp + 0x20] = a2
 89496: 50 20 1a 04 75 ae 01     ra = 1050, jump @13689
      :                          @7115 [@dyn 525]
 89503: 64 50                    ra = s0
 89505: 82 14 20                 t2 = u64 [sp + 0x20]
 89508: 33 08                    a1 = 0
 89510: 49 11 30                 u64 [sp + 48] = 0
 89513: 33 05 08                 s0 = 0x8
 89516: 7b 15 38                 u64 [sp + 0x38] = s0
 89519: 49 11 40                 u64 [sp + 64] = 0
 89522: c8 40 0a                 a3 = ra + t2
 89525: 82 17 28                 a0 = u64 [sp + 0x28]
 89528: 82 77 08                 a0 = u64 [a0 + 0x8]
 89531: 7b 17 28                 u64 [sp + 0x28] = a0
 89534: 9a 4b                    a4 = -t2
 89536: 64 b7                    a0 = a4
 89538: 01                       fallthrough
      :                          @7116
 89539: 51 07 f2 00              jump @7139 if a0 == 0
      :                          @7117
 89543: c8 7a 09                 a2 = a3 + a0
 89546: 7c 99                    a2 = u8 [a2]
 89548: 95 77 01                 a0 = a0 + 0x1
 89551: 52 09 f4                 jump @7116 if a2 != 0
      :                          @7118
 89554: 7b 15                    u64 [sp] = s0
 89556: 7b 1b 08                 u64 [sp + 0x8] = a4
 89559: 7b 1a 10                 u64 [sp + 0x10] = a3
 89562: 33 03                    t1 = 0
 89564: 33 06                    s1 = 0
 89566: 33 0b                    a4 = 0
 89568: 28 23                    jump @7121
      :                          @7119
 89570: 33 0c                    a5 = 0
 89572: 01                       fallthrough
      :                          @7120
 89573: c8 b0 07                 a0 = ra + a4
 89576: 7c 77                    a0 = u8 [a0]
 89578: 95 b9 01                 a2 = a4 + 0x1
 89581: 88 77 01                 a0 = a0 <u 0x1
 89584: c8 c7 07                 a0 = a0 + a5
 89587: d8 73 0a                 a3 = t1 <u a0
 89590: 64 26                    s1 = t0
 89592: db ab 06                 s1 = a4 if a3 != 0
 89595: e4 37 03                 t1 = maxu(a0, t1)
 89598: 64 9b                    a4 = a2
 89600: aa 49 3d                 jump @7128 if a2 == t2
      :                          @7121
 89603: 64 62                    t0 = s1
 89605: 96 b7 18                 a0 = a4 * 0x18
 89608: 82 19 28                 a2 = u64 [sp + 0x28]
 89611: c8 97 07                 a0 = a0 + a2
 89614: 82 7a 10                 a3 = u64 [a0 + 0x10]
 89617: 51 0a d1                 jump @7119 if a3 == 0
      :                          @7122
 89620: 82 79 08                 a2 = u64 [a0 + 0x8]
 89623: 33 07                    a0 = 0
 89625: 33 0c                    a5 = 0
 89627: 28 14                    jump @7125
      :                          @7123
 89629: c8 70 06                 s1 = ra + a0
 89632: 7c 66                    s1 = u8 [s1]
 89634: 88 66 01                 s1 = s1 <u 0x1
 89637: 01                       fallthrough
      :                          @7124
 89638: 95 77 01                 a0 = a0 + 0x1
 89641: c8 6c 0c                 a5 = a5 + s1
 89644: aa 7a b9                 jump @7120 if a3 == a0
      :                          @7125
 89647: c8 79 05                 s0 = a2 + a0
 89650: 7c 56                    s1 = u8 [s0]
 89652: 51 06 f2                 jump @7124 if s1 == 0
      :                          @7126
 89655: ac 47 e6                 jump @7123 if a0 <u t2
      :                          @7127
 89658: 28 e5 00                 jump @7149
      :                          @7128
 89661: 82 17 30                 a0 = u64 [sp + 0x30]
 89664: ab 78 1c                 jump @7131 if a1 != a0
      :                          @7129
 89667: 95 17 30                 a0 = sp + 0x30
 89670: 64 05                    s0 = ra
 89672: 50 20 1c 04 c7 f4 fe     ra = 1052, jump @1581
      :                          @7130 [@dyn 526]
 89679: 64 50                    ra = s0
 89681: 82 14 20                 t2 = u64 [sp + 0x20]
 89684: 82 18 40                 a1 = u64 [sp + 0x40]
 89687: 82 15 38                 s0 = u64 [sp + 0x38]
 89690: 28 05                    jump @7132
      :                          @7131
 89692: 82 15                    s0 = u64 [sp]
 89694: 01                       fallthrough
      :                          @7132
 89695: 97 87 03                 a0 = a1 << 0x3
 89698: c8 57 07                 a0 = a0 + s0
 89701: 7b 76                    u64 [a0] = s1
 89703: 95 88 01                 a1 = a1 + 0x1
 89706: 7b 18 40                 u64 [sp + 0x40] = a1
 89709: 33 0c 01                 a5 = 0x1
 89712: ae 46 b1 00              jump @7151 if s1 >=u t2
      :                          @7133
 89716: 33 07                    a0 = 0
 89718: c8 60 09                 a2 = ra + s1
 89721: 46 09 01                 u8 [a2 + 0] = 0x1
 89724: 96 69 18                 a2 = s1 * 0x18
 89727: 82 1a 28                 a3 = u64 [sp + 0x28]
 89730: c8 a9 09                 a2 = a2 + a3
 89733: 95 9a 10                 a3 = a2 + 0x10
 89736: 95 9b 08                 a4 = a2 + 0x8
 89739: 28 08                    jump @7135
      :                          @7134
 89741: 95 77 01                 a0 = a0 + 0x1
 89744: aa 74 1a                 jump @7138 if t2 == a0
      :                          @7135
 89747: 82 a9                    a2 = u64 [a3]
 89749: ae 97 8b 00              jump @7150 if a0 >=u a2
      :                          @7136
 89753: 82 b9                    a2 = u64 [a4]
 89755: c8 79 09                 a2 = a2 + a0
 89758: 7c 99                    a2 = u8 [a2]
 89760: 51 09 ed                 jump @7134 if a2 == 0
      :                          @7137
 89763: c8 70 09                 a2 = ra + a0
 89766: 78 9c                    u8 [a2] = a5
 89768: 28 e5                    jump @7134
      :                          @7138
 89770: 82 1a 10                 a3 = u64 [sp + 0x10]
 89773: 82 1b 08                 a4 = u64 [sp + 0x8]
 89776: 64 b7                    a0 = a4
 89778: 28 11 ff                 jump @7116
      :                          @7139
 89781: 82 17 40                 a0 = u64 [sp + 0x40]
 89784: 82 18 38                 a1 = u64 [sp + 0x38]
 89787: 82 1a 18                 a3 = u64 [sp + 0x18]
 89790: 7b a7 10                 u64 [a3 + 0x10] = a0
 89793: 7b a8 08                 u64 [a3 + 0x8] = a1
 89796: 82 17 30                 a0 = u64 [sp + 0x30]
 89799: 33 08 00 00 f0           a1 = 0xfffffffffff00000
 89804: 95 49 ff ff ef           a2 = t2 + 0xffffffffffefffff
 89809: 7b a7                    u64 [a3] = a0
 89811: ac 89 3e                 jump @7148 if a2 <u a1
      :                          @7140
 89814: 33 07 b0 02 03           a0 = 0x302b0
 89819: 95 77 00 00 10           a0 = a0 + 0x100000
 89824: 01                       fallthrough
      :                          @7141
 89825: 82 78                    a1 = u64 [a0]
 89827: c9 87 09                 a2 = a0 - a1
 89830: ab 09 2b                 jump @7148 if a2 != ra
      :                          @7142
 89833: c9 48 09                 a2 = a1 - t2
 89836: 01                       fallthrough
      :                          @7143
 89837: 82 7a                    a3 = u64 [a0]
 89839: ab 8a f2                 jump @7141 if a3 != a1
      :                          @7144
 89842: 7b 79                    u64 [a0] = a2
 89844: 33 0b                    a4 = 0
 89846: 01                       fallthrough
      :                          @7145
 89847: ab 8a ea                 jump @7141 if a3 != a1
      :                          @7146
 89850: 28 17                    jump @7148
      :                          @7147
 89852: 49 11 30                 u64 [sp + 48] = 0
 89855: 33 08 08                 a1 = 0x8
 89858: 7b 18 38                 u64 [sp + 0x38] = a1
 89861: 49 11 40                 u64 [sp + 64] = 0
 89864: 49 17 10                 u64 [a0 + 16] = 0
 89867: 7b 78 08                 u64 [a0 + 0x8] = a1
 89870: 49 07                    u64 [a0 + 0] = 0
 89872: 01                       fallthrough
      :                          @7148
 89873: 82 10 58                 ra = u64 [sp + 0x58]
 89876: 82 15 50                 s0 = u64 [sp + 0x50]
 89879: 82 16 48                 s1 = u64 [sp + 0x48]
 89882: 95 11 60                 sp = sp + 0x60
 89885: 32 00                    ret
      :                          @7149
 89887: 00                       trap
      :                          @7150
 89888: 00                       trap
      :                          @7151
 89889: 00                       trap
      :                          @7152
 89890: 00                       trap
      :                          @7153
 89891: 00                       trap
      :                          @7154
 89892: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 89895: 7b 10 48                 u64 [sp + 0x48] = ra
 89898: 7b 15 40                 u64 [sp + 0x40] = s0
 89901: 7b 16 38                 u64 [sp + 0x38] = s1
 89904: 51 09 ac 00              jump @7164 if a2 == 0
      :                          @7155
 89908: 7b 17                    u64 [sp] = a0
 89910: 82 86                    s1 = u64 [a1]
 89912: 82 8a 08                 a3 = u64 [a1 + 0x8]
 89915: 33 0b                    a4 = 0
 89917: 95 92 ff                 t0 = a2 + 0xffffffffffffffff
 89920: 7b 18 08                 u64 [sp + 0x8] = a1
 89923: 95 83 18                 t1 = a1 + 0x18
 89926: 33 08 ff                 a1 = 0xffffffffffffffff
 89929: 7b 1a 30                 u64 [sp + 0x30] = a3
 89932: 64 6c                    a5 = s1
 89934: 7b 19 10                 u64 [sp + 0x10] = a2
 89937: 28 1c                    jump @7158
      :                          @7156
 89939: 64 c9                    a2 = a5
 89941: 01                       fallthrough
      :                          @7157
 89942: 64 9c                    a5 = a2
 89944: 82 12 28                 t0 = u64 [sp + 0x28]
 89947: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 89950: 82 13 20                 t1 = u64 [sp + 0x20]
 89953: 95 33 10                 t1 = t1 + 0x10
 89956: 82 19 10                 a2 = u64 [sp + 0x10]
 89959: 82 1b 18                 a4 = u64 [sp + 0x18]
 89962: aa 9b 51                 jump @7163 if a4 == a2
      :                          @7158
 89965: 95 b7 01                 a0 = a4 + 0x1
 89968: 7b 17 18                 u64 [sp + 0x18] = a0
 89971: 7b 12 28                 u64 [sp + 0x28] = t0
 89974: 7b 13 20                 u64 [sp + 0x20] = t1
 89977: ae 97 da                 jump @7156 if a0 >=u a2
      :                          @7159
 89980: 97 bb 04                 a4 = a4 << 0x4
 89983: 82 17 08                 a0 = u64 [sp + 0x8]
 89986: c8 7b 0b                 a4 = a4 + a0
 89989: 82 b5                    s0 = u64 [a4]
 89991: 82 bb 08                 a4 = u64 [a4 + 0x8]
 89994: 64 c9                    a2 = a5
 89996: 28 0b                    jump @7161
      :                          @7160
 89998: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 90001: 95 33 10                 t1 = t1 + 0x10
 90004: 51 02 c2                 jump @7157 if t0 == 0
      :                          @7161
 90007: 82 34 f8                 t2 = u64 [t1 + 0xfffffffffffffff8]
 90010: 82 30                    ra = u64 [t1]
 90012: c9 45 0c                 a5 = s0 - t2
 90015: c9 0b 07                 a0 = a4 - ra
 90018: ca cc 0c                 a5 = a5 * a5
 90021: ca 77 07                 a0 = a0 * a0
 90024: c8 7c 0c                 a5 = a5 + a0
 90027: ae 8c e3                 jump @7160 if a5 >=u a1
      :                          @7162
 90030: 64 56                    s1 = s0
 90032: 64 ba                    a3 = a4
 90034: 64 49                    a2 = t2
 90036: 7b 10 30                 u64 [sp + 0x30] = ra
 90039: 64 c8                    a1 = a5
 90041: 28 d5                    jump @7160
      :                          @7163
 90043: 82 17                    a0 = u64 [sp]
 90045: 7b 76                    u64 [a0] = s1
 90047: 7b 7a 08                 u64 [a0 + 0x8] = a3
 90050: 7b 7c 10                 u64 [a0 + 0x10] = a5
 90053: 82 19 30                 a2 = u64 [sp + 0x30]
 90056: 7b 79 18                 u64 [a0 + 0x18] = a2
 90059: 7b 78 20                 u64 [a0 + 0x20] = a1
 90062: 82 10 48                 ra = u64 [sp + 0x48]
 90065: 82 15 40                 s0 = u64 [sp + 0x40]
 90068: 82 16 38                 s1 = u64 [sp + 0x38]
 90071: 95 11 50                 sp = sp + 0x50
 90074: 32 00                    ret
      :                          @7164
 90076: 00                       trap
      :                          @7165
 90077: 95 11 88                 sp = sp + 0xffffffffffffff88
 90080: 7b 10 70                 u64 [sp + 0x70] = ra
 90083: 7b 15 68                 u64 [sp + 0x68] = s0
 90086: 7b 16 60                 u64 [sp + 0x60] = s1
 90089: 64 95                    s0 = a2
 90091: 97 99 04                 a2 = a2 << 0x4
 90094: 7b 19 28                 u64 [sp + 0x28] = a2
 90097: 7b 17 10                 u64 [sp + 0x10] = a0
 90100: 51 05 62                 jump @7173 if s0 == 0
      :                          @7166
 90103: 64 50                    ra = s0
 90105: 98 55 3b                 s0 = s0 >> 0x3b
 90108: 52 05 f5 02              jump @7223 if s0 != 0
      :                          @7167
 90112: 88 52 01                 t0 = s0 <u 0x1
 90115: 97 22 03                 t0 = t0 << 0x3
 90118: 33 04 b0 02 03           t2 = 0x302b0
 90123: 33 03 00 00 10           t1 = 0x100000
 90128: c8 34 0b                 a4 = t2 + t1
 90131: 01                       fallthrough
      :                          @7168
 90132: 82 b6                    s1 = u64 [a4]
 90134: 82 1c 28                 a5 = u64 [sp + 0x28]
 90137: c8 6c 0c                 a5 = a5 + s1
 90140: ac 6c d4 02              jump @7222 if a5 <u s1
      :                          @7169
 90144: c8 2c 0a                 a3 = a5 + t0
 90147: d8 ca 05                 s0 = a3 <u a5
 90150: d8 a3 0a                 a3 = t1 <u a3
 90153: d4 5a 0a                 a3 = a3 | s0
 90156: 52 0a c4 02              jump @7222 if a3 != 0
      :                          @7170
 90160: c9 c4 05                 s0 = t2 - a5
 90163: c8 35 05                 s0 = s0 + t1
 90166: 84 5a 07                 a3 = s0 & 0x7
 90169: c8 ac 0c                 a5 = a5 + a3
 90172: 01                       fallthrough
      :                          @7171
 90173: 82 b7                    a0 = u64 [a4]
 90175: ab 67 d5                 jump @7168 if a0 != s1
      :                          @7172
 90178: 7b bc                    u64 [a4] = a5
 90180: c9 a5 06                 s1 = s0 - a3
 90183: 82 19 28                 a2 = u64 [sp + 0x28]
 90186: 64 05                    s0 = ra
 90188: 64 67                    a0 = s1
 90190: 33 00 1e 04              ra = 0x41e
 90194: 28 8e a9 01              jump @13635
      :                          @7173
 90198: 33 09                    a2 = 0
 90200: 33 06 08                 s1 = 0x8
 90203: 33 07 08                 a0 = 0x8
 90206: 50 20 1e 04 82 a9 01     ra = 1054, jump @13635
      :                          @7174 [@dyn 527]
 90213: 68 57                    a0 = clz s0
 90215: 9a 7a 40                 a3 = 0x40 - a0
 90218: 64 67                    a0 = s1
 90220: 64 58                    a1 = s0
 90222: 33 09                    a2 = 0
 90224: 50 20 20 04 56 d1 fe     ra = 1056, jump @988
      :                          @7175 [@dyn 528]
 90231: 49 11 30                 u64 [sp + 48] = 0
 90234: 49 11 38 08              u64 [sp + 56] = 0x8
 90238: 49 11 40                 u64 [sp + 64] = 0
 90241: 7b 15 08                 u64 [sp + 0x8] = s0
 90244: 7b 16 20                 u64 [sp + 0x20] = s1
 90247: 51 05 96 01              jump @7203 if s0 == 0
      :                          @7176
 90251: 33 08                    a1 = 0
 90253: 82 13 28                 t1 = u64 [sp + 0x28]
 90256: c8 63 03                 t1 = t1 + s1
 90259: 33 02 08                 t0 = 0x8
 90262: 33 04 02                 t2 = 0x2
 90265: 64 60                    ra = s1
 90267: 28 1d                    jump @7178
      :                          @7177
 90269: 95 00 10                 ra = ra + 0x10
 90272: 97 a7 04                 a0 = a3 << 0x4
 90275: c8 27 07                 a0 = a0 + t0
 90278: 7b 76                    u64 [a0] = s1
 90280: 82 18 28                 a1 = u64 [sp + 0x28]
 90283: 7b 78 08                 u64 [a0 + 0x8] = a1
 90286: 95 a8 01                 a1 = a3 + 0x1
 90289: 7b 18 40                 u64 [sp + 0x40] = a1
 90292: aa 30 83 00              jump @7187 if ra == t1
      :                          @7178
 90296: 82 06                    s1 = u64 [ra]
 90298: 82 07 08                 a0 = u64 [ra + 0x8]
 90301: 7b 17 28                 u64 [sp + 0x28] = a0
 90304: ac 48 4c                 jump @7184 if a1 <u t2
      :                          @7179
 90307: 97 89 04                 a2 = a1 << 0x4
 90310: c8 29 09                 a2 = a2 + t0
 90313: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 90316: 01                       fallthrough
      :                          @7180
 90317: 82 9a f0                 a3 = u64 [a2 + 0xfffffffffffffff0]
 90320: 82 9b                    a4 = u64 [a2]
 90322: 82 9c f8                 a5 = u64 [a2 + 0xfffffffffffffff8]
 90325: 82 97 08                 a0 = u64 [a2 + 0x8]
 90328: c9 ab 0b                 a4 = a4 - a3
 90331: 82 15 28                 s0 = u64 [sp + 0x28]
 90334: c9 c5 05                 s0 = s0 - a5
 90337: ca 5b 0b                 a4 = a4 * s0
 90340: c9 c7 07                 a0 = a0 - a5
 90343: c9 6a 0a                 a3 = a3 - s1
 90346: ca a7 07                 a0 = a0 * a3
 90349: c8 b7 07                 a0 = a0 + a4
 90352: 5a 07 1c                 jump @7184 if a0 >s 0
      :                          @7181
 90355: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 90358: 33 0a 01                 a3 = 0x1
 90361: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 90364: ac 8a d1                 jump @7180 if a3 <u a1
      :                          @7182
 90367: 82 18 30                 a1 = u64 [sp + 0x30]
 90370: 49 11 40 01              u64 [sp + 64] = 0x1
 90374: 52 18 01 97              jump @7177 if a1 != 1
      :                          @7183
 90378: 28 0d                    jump @7185
      :                          @7184
 90380: 64 8a                    a3 = a1
 90382: 82 18 30                 a1 = u64 [sp + 0x30]
 90385: 7b 1a 40                 u64 [sp + 0x40] = a3
 90388: ab 8a 89                 jump @7177 if a3 != a1
      :                          @7185
 90391: 95 17 30                 a0 = sp + 0x30
 90394: 64 35                    s0 = t1
 90396: 7b 10 18                 u64 [sp + 0x18] = ra
 90399: 50 20 22 04 e9 f2 fe     ra = 1058, jump @1605
      :                          @7186 [@dyn 529]
 90406: 82 10 18                 ra = u64 [sp + 0x18]
 90409: 33 04 02                 t2 = 0x2
 90412: 64 53                    t1 = s0
 90414: 82 1a 40                 a3 = u64 [sp + 0x40]
 90417: 82 12 38                 t0 = u64 [sp + 0x38]
 90420: 28 69 ff                 jump @7177
      :                          @7187
 90423: 33 05                    s0 = 0
 90425: 49 11 48                 u64 [sp + 72] = 0
 90428: 33 02 08                 t0 = 0x8
 90431: 7b 12 50                 u64 [sp + 0x50] = t0
 90434: 49 11 58                 u64 [sp + 88] = 0
 90437: 28 1d                    jump @7189
      :                          @7188
 90439: 95 33 f0                 t1 = t1 + 0xfffffffffffffff0
 90442: 97 69 04                 a2 = s1 << 0x4
 90445: c8 92 07                 a0 = t0 + a2
 90448: 7b 70                    u64 [a0] = ra
 90450: 7b 74 08                 u64 [a0 + 0x8] = t2
 90453: 95 65 01                 s0 = s1 + 0x1
 90456: 7b 15 58                 u64 [sp + 0x58] = s0
 90459: 82 17 20                 a0 = u64 [sp + 0x20]
 90462: aa 37 80 00              jump @7198 if a0 == t1
      :                          @7189
 90466: 82 30 f0                 ra = u64 [t1 + 0xfffffffffffffff0]
 90469: 82 34 f8                 t2 = u64 [t1 + 0xfffffffffffffff8]
 90472: 53 15 02 4a              jump @7195 if s0 <u 2
      :                          @7190
 90476: 97 59 04                 a2 = s0 << 0x4
 90479: c8 29 09                 a2 = a2 + t0
 90482: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 90485: 01                       fallthrough
      :                          @7191
 90486: 82 9a f0                 a3 = u64 [a2 + 0xfffffffffffffff0]
 90489: 82 9b                    a4 = u64 [a2]
 90491: 82 9c f8                 a5 = u64 [a2 + 0xfffffffffffffff8]
 90494: 82 98 08                 a1 = u64 [a2 + 0x8]
 90497: c9 ab 0b                 a4 = a4 - a3
 90500: c9 c4 07                 a0 = t2 - a5
 90503: ca 7b 07                 a0 = a4 * a0
 90506: c9 c8 08                 a1 = a1 - a5
 90509: c9 0a 0a                 a3 = a3 - ra
 90512: ca a8 0a                 a3 = a1 * a3
 90515: c8 a7 07                 a0 = a0 + a3
 90518: 5a 07 1c                 jump @7195 if a0 >s 0
      :                          @7192
 90521: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 90524: 33 06 01                 s1 = 0x1
 90527: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 90530: ac 56 d4                 jump @7191 if s1 <u s0
      :                          @7193
 90533: 82 18 48                 a1 = u64 [sp + 0x48]
 90536: 49 11 58 01              u64 [sp + 88] = 0x1
 90540: 52 18 01 9b              jump @7188 if a1 != 1
      :                          @7194
 90544: 28 0d                    jump @7196
      :                          @7195
 90546: 64 56                    s1 = s0
 90548: 82 18 48                 a1 = u64 [sp + 0x48]
 90551: 7b 15 58                 u64 [sp + 0x58] = s0
 90554: ab 85 8d                 jump @7188 if s0 != a1
      :                          @7196
 90557: 95 17 48                 a0 = sp + 0x48
 90560: 64 35                    s0 = t1
 90562: 7b 14 28                 u64 [sp + 0x28] = t2
 90565: 64 06                    s1 = ra
 90567: 50 20 24 04 41 f2 fe     ra = 1060, jump @1605
      :                          @7197 [@dyn 530]
 90574: 64 60                    ra = s1
 90576: 82 14 28                 t2 = u64 [sp + 0x28]
 90579: 64 53                    t1 = s0
 90581: 82 16 58                 s1 = u64 [sp + 0x58]
 90584: 82 12 50                 t0 = u64 [sp + 0x50]
 90587: 28 6c ff                 jump @7188
      :                          @7198
 90590: 82 17 40                 a0 = u64 [sp + 0x40]
 90593: 51 07 53                 jump @7204 if a0 == 0
      :                          @7199
 90596: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 90599: 7b 18 40                 u64 [sp + 0x40] = a1
 90602: 82 17 48                 a0 = u64 [sp + 0x48]
 90605: 7b 17 28                 u64 [sp + 0x28] = a0
 90608: 51 05 4f                 jump @7205 if s0 == 0
      :                          @7200
 90611: 82 17 30                 a0 = u64 [sp + 0x30]
 90614: 7b 16 58                 u64 [sp + 0x58] = s1
 90617: 82 1a 50                 a3 = u64 [sp + 0x50]
 90620: c9 87 07                 a0 = a0 - a1
 90623: ae 67 48                 jump @7206 if a0 >=u s1
      :                          @7201
 90626: 95 17 30                 a0 = sp + 0x30
 90629: 7b 19 18                 u64 [sp + 0x18] = a2
 90632: 64 69                    a2 = s1
 90634: 7b 1a                    u64 [sp] = a3
 90636: 50 20 26 04 7c f3 fe     ra = 1062, jump @1641
      :                          @7202 [@dyn 531]
 90643: 82 1a                    a3 = u64 [sp]
 90645: 82 19 18                 a2 = u64 [sp + 0x18]
 90648: 82 18 40                 a1 = u64 [sp + 0x40]
 90651: 28 2c                    jump @7206
      :                          @7203
 90653: 33 09                    a2 = 0
 90655: 33 06                    s1 = 0
 90657: 49 11 28                 u64 [sp + 40] = 0
 90660: 33 08                    a1 = 0
 90662: 49 11 48                 u64 [sp + 72] = 0
 90665: 33 0a 08                 a3 = 0x8
 90668: 7b 1a 50                 u64 [sp + 0x50] = a3
 90671: 49 11 58                 u64 [sp + 88] = 0
 90674: 28 15                    jump @7206
      :                          @7204
 90676: 33 08                    a1 = 0
 90678: 82 17 48                 a0 = u64 [sp + 0x48]
 90681: 7b 17 28                 u64 [sp + 0x28] = a0
 90684: 52 05 b7                 jump @7200 if s0 != 0
      :                          @7205
 90687: 82 1a 50                 a3 = u64 [sp + 0x50]
 90690: 33 09                    a2 = 0
 90692: 33 06                    s1 = 0
 90694: 01                       fallthrough
      :                          @7206
 90695: 7b 18 18                 u64 [sp + 0x18] = a1
 90698: 82 17 38                 a0 = u64 [sp + 0x38]
 90701: 97 88 04                 a1 = a1 << 0x4
 90704: c8 87 07                 a0 = a0 + a1
 90707: 64 a8                    a1 = a3
 90709: 64 a5                    s0 = a3
 90711: 50 20 28 04 89 a7 01     ra = 1064, jump @13635
      :                          @7207 [@dyn 532]
 90718: 64 5c                    a5 = s0
 90720: 82 15 18                 s0 = u64 [sp + 0x18]
 90723: c8 65 05                 s0 = s0 + s1
 90726: 7b 15 40                 u64 [sp + 0x40] = s0
 90729: 82 16 28                 s1 = u64 [sp + 0x28]
 90732: 51 06 2d                 jump @7214 if s1 == 0
      :                          @7208
 90735: 56 36 00 00 01 2a        jump @7214 if s1 >u 65536
      :                          @7209
 90741: 97 66 04                 s1 = s1 << 0x4
 90744: 33 07 b0 02 03           a0 = 0x302b0
 90749: 95 77 00 00 10           a0 = a0 + 0x100000
 90754: 01                       fallthrough
      :                          @7210
 90755: 82 78                    a1 = u64 [a0]
 90757: c9 87 09                 a2 = a0 - a1
 90760: ab c9 11                 jump @7214 if a2 != a5
      :                          @7211
 90763: c9 68 09                 a2 = a1 - s1
 90766: 01                       fallthrough
      :                          @7212
 90767: 82 7a                    a3 = u64 [a0]
 90769: ab 8a f2                 jump @7210 if a3 != a1
      :                          @7213
 90772: 7b 79                    u64 [a0] = a2
 90774: 33 0b                    a4 = 0
 90776: 01                       fallthrough
      :                          @7214
 90777: 82 17 40                 a0 = u64 [sp + 0x40]
 90780: 82 18 38                 a1 = u64 [sp + 0x38]
 90783: 82 19 30                 a2 = u64 [sp + 0x30]
 90786: 82 1a 10                 a3 = u64 [sp + 0x10]
 90789: 7b a7 10                 u64 [a3 + 0x10] = a0
 90792: 7b a8 08                 u64 [a3 + 0x8] = a1
 90795: 7b a9                    u64 [a3] = a2
 90797: 82 18 08                 a1 = u64 [sp + 0x8]
 90800: 82 16 20                 s1 = u64 [sp + 0x20]
 90803: 51 08 2f                 jump @7221 if a1 == 0
      :                          @7215
 90806: 33 07 00 00 01           a0 = 0x10000
 90811: ac 87 27                 jump @7221 if a0 <u a1
      :                          @7216
 90814: 97 87 04                 a0 = a1 << 0x4
 90817: 33 08 b0 02 03           a1 = 0x302b0
 90822: 95 88 00 00 10           a1 = a1 + 0x100000
 90827: 01                       fallthrough
      :                          @7217
 90828: 82 89                    a2 = u64 [a1]
 90830: c9 98 0a                 a3 = a1 - a2
 90833: ab 6a 11                 jump @7221 if a3 != s1
      :                          @7218
 90836: c9 79 0a                 a3 = a2 - a0
 90839: 01                       fallthrough
      :                          @7219
 90840: 82 8b                    a4 = u64 [a1]
 90842: ab 9b f2                 jump @7217 if a4 != a2
      :                          @7220
 90845: 7b 8a                    u64 [a1] = a3
 90847: 33 0c                    a5 = 0
 90849: 01                       fallthrough
      :                          @7221
 90850: 82 10 70                 ra = u64 [sp + 0x70]
 90853: 82 15 68                 s0 = u64 [sp + 0x68]
 90856: 82 16 60                 s1 = u64 [sp + 0x60]
 90859: 95 11 78                 sp = sp + 0x78
 90862: 32 00                    ret
      :                          @7222
 90864: 00                       trap
      :                          @7223
 90865: 00                       trap
      :                          @7224 [@dyn 533]
 90866: 82 18 60                 a1 = u64 [sp + 0x60]
 90869: 55 18 02 3e              jump @7233 if a1 >=u 2
      :                          @7225
 90873: 82 18 50                 a1 = u64 [sp + 0x50]
 90876: 51 08 32                 jump @7232 if a1 == 0
      :                          @7226
 90879: 56 38 00 00 01 2f        jump @7232 if a1 >u 65536
      :                          @7227
 90885: 82 17 58                 a0 = u64 [sp + 0x58]
 90888: 97 88 04                 a1 = a1 << 0x4
 90891: 33 09 b0 02 03           a2 = 0x302b0
 90896: 95 99 00 00 10           a2 = a2 + 0x100000
 90901: 01                       fallthrough
      :                          @7228
 90902: 82 9a                    a3 = u64 [a2]
 90904: c9 a9 0b                 a4 = a2 - a3
 90907: ab 7b 13                 jump @7232 if a4 != a0
      :                          @7229
 90910: c9 8a 0b                 a4 = a3 - a1
 90913: 01                       fallthrough
      :                          @7230
 90914: 82 9c                    a5 = u64 [a2]
 90916: ab ac f2                 jump @7228 if a5 != a3
      :                          @7231
 90919: 7b 9b                    u64 [a2] = a4
 90921: 33 07                    a0 = 0
 90923: 28 27 01                 jump @7245
      :                          @7232
 90926: 33 07                    a0 = 0
 90928: 28 22 01                 jump @7245
      :                          @7233
 90931: 82 17 58                 a0 = u64 [sp + 0x58]
 90934: 7b 17 40                 u64 [sp + 0x40] = a0
 90937: 33 07                    a0 = 0
 90939: 33 09                    a2 = 0
 90941: 33 0a 01                 a3 = 0x1
 90944: 01                       fallthrough
      :                          @7234
 90945: 7b 17 18                 u64 [sp + 0x18] = a0
 90948: 97 97 04                 a0 = a2 << 0x4
 90951: 95 9b 01                 a4 = a2 + 0x1
 90954: d3 8b 09                 a2 = a4 ^ a1
 90957: 7b 1b 10                 u64 [sp + 0x10] = a4
 90960: 93 9b                    a4 = 0 if a2 == 0
 90962: 82 19 40                 a2 = u64 [sp + 0x40]
 90965: c8 97 07                 a0 = a0 + a2
 90968: 82 7c 08                 a5 = u64 [a0 + 0x8]
 90971: 97 bb 04                 a4 = a4 << 0x4
 90974: c8 9b 0b                 a4 = a4 + a2
 90977: 82 b9                    a2 = u64 [a4]
 90979: 82 bb 08                 a4 = u64 [a4 + 0x8]
 90982: 82 77                    a0 = u64 [a0]
 90984: 7b 1b                    u64 [sp] = a4
 90986: 7b 1c 48                 u64 [sp + 0x48] = a5
 90989: c9 cb 0b                 a4 = a4 - a5
 90992: 7b 1b 30                 u64 [sp + 0x30] = a4
 90995: 7b 19 08                 u64 [sp + 0x8] = a2
 90998: 7b 17 38                 u64 [sp + 0x38] = a0
 91001: c9 79 09                 a2 = a2 - a0
 91004: 7b 19 28                 u64 [sp + 0x28] = a2
 91007: 64 a9                    a2 = a3
 91009: 01                       fallthrough
      :                          @7235
 91010: 64 97                    a0 = a2
 91012: ae 89 dd 00              jump @7246 if a2 >=u a1
      :                          @7236
 91016: 95 79 01                 a2 = a0 + 0x1
 91019: d3 89 0a                 a3 = a2 ^ a1
 91022: 93 a9                    a2 = 0 if a3 == 0
 91024: 97 9a 04                 a3 = a2 << 0x4
 91027: 82 1c 40                 a5 = u64 [sp + 0x40]
 91030: c8 ca 0a                 a3 = a3 + a5
 91033: 82 ab                    a4 = u64 [a3]
 91035: 82 aa 08                 a3 = u64 [a3 + 0x8]
 91038: 82 14 38                 t2 = u64 [sp + 0x38]
 91041: c9 b4 0b                 a4 = t2 - a4
 91044: 82 13 30                 t1 = u64 [sp + 0x30]
 91047: ca 3b 0b                 a4 = a4 * t1
 91050: 82 15 48                 s0 = u64 [sp + 0x48]
 91053: c9 5a 0a                 a3 = a3 - s0
 91056: 82 16 28                 s1 = u64 [sp + 0x28]
 91059: ca 6a 0a                 a3 = a3 * s1
 91062: c8 ab 0b                 a4 = a4 + a3
 91065: 97 7a 04                 a3 = a0 << 0x4
 91068: c8 ca 0a                 a3 = a3 + a5
 91071: 7b 17 20                 u64 [sp + 0x20] = a0
 91074: 82 a2 08                 t0 = u64 [a3 + 0x8]
 91077: 9a b0                    ra = -a4
 91079: 82 a7                    a0 = u64 [a3]
 91081: e3 0b 0c                 a5 = maxs(a4, ra)
 91084: c9 52 0b                 a4 = t0 - s0
 91087: 64 8a                    a3 = a1
 91089: ca 6b 05                 s0 = a4 * s1
 91092: c9 74 0b                 a4 = t2 - a0
 91095: ca 3b 08                 a1 = a4 * t1
 91098: c8 58 08                 a1 = a1 + s0
 91101: 9a 85                    s0 = -a1
 91103: e3 58 05                 s0 = maxs(a1, s0)
 91106: 64 a8                    a1 = a3
 91108: ad c5 9e                 jump @7235 if s0 <s a5
      :                          @7237
 91111: 82 19 48                 a2 = u64 [sp + 0x48]
 91114: c9 29 0c                 a5 = a2 - t0
 91117: ca bb 09                 a2 = a4 * a4
 91120: ca cc 0b                 a4 = a5 * a5
 91123: c8 9b 0b                 a4 = a4 + a2
 91126: 82 19 18                 a2 = u64 [sp + 0x18]
 91129: e4 b9 0b                 a4 = maxu(a2, a4)
 91132: 82 19 08                 a2 = u64 [sp + 0x8]
 91135: c9 79 07                 a0 = a2 - a0
 91138: 82 19                    a2 = u64 [sp]
 91140: c9 29 09                 a2 = a2 - t0
 91143: ca 77 07                 a0 = a0 * a0
 91146: ca 99 09                 a2 = a2 * a2
 91149: c8 97 07                 a0 = a0 + a2
 91152: e4 7b 07                 a0 = maxu(a4, a0)
 91155: 82 19 10                 a2 = u64 [sp + 0x10]
 91158: 82 1a 20                 a3 = u64 [sp + 0x20]
 91161: ab 89 28 ff              jump @7234 if a2 != a1
      :                          @7238
 91165: 82 16 50                 s1 = u64 [sp + 0x50]
 91168: 51 06 32                 jump @7245 if s1 == 0
      :                          @7239
 91171: 33 08 00 00 01           a1 = 0x10000
 91176: ac 68 2a                 jump @7245 if a1 <u s1
      :                          @7240
 91179: 97 66 04                 s1 = s1 << 0x4
 91182: 33 08 b0 02 03           a1 = 0x302b0
 91187: 95 88 00 00 10           a1 = a1 + 0x100000
 91192: 01                       fallthrough
      :                          @7241
 91193: 82 89                    a2 = u64 [a1]
 91195: c9 98 0a                 a3 = a1 - a2
 91198: 82 1b 40                 a4 = u64 [sp + 0x40]
 91201: ab ba 11                 jump @7245 if a3 != a4
      :                          @7242
 91204: c9 69 0a                 a3 = a2 - s1
 91207: 01                       fallthrough
      :                          @7243
 91208: 82 8b                    a4 = u64 [a1]
 91210: ab 9b ef                 jump @7241 if a4 != a2
      :                          @7244
 91213: 7b 8a                    u64 [a1] = a3
 91215: 33 0c                    a5 = 0
 91217: 01                       fallthrough
      :                          @7245
 91218: 82 10 78                 ra = u64 [sp + 0x78]
 91221: 82 15 70                 s0 = u64 [sp + 0x70]
 91224: 82 16 68                 s1 = u64 [sp + 0x68]
 91227: 95 11 80 00              sp = sp + 0x80
 91231: 32 00                    ret
      :                          @7246
 91233: 00                       trap
      :                          @7247
 91234: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 91237: 7b 10 30                 u64 [sp + 0x30] = ra
 91240: 7b 15 28                 u64 [sp + 0x28] = s0
 91243: 7b 16 20                 u64 [sp + 0x20] = s1
 91246: 64 86                    s1 = a1
 91248: 7b 17                    u64 [sp] = a0
 91250: 49 11 08                 u64 [sp + 8] = 0
 91253: 33 07 08                 a0 = 0x8
 91256: 7b 17 10                 u64 [sp + 0x10] = a0
 91259: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 91262: 33 05 02                 s0 = 0x2
 91265: 49 11 18                 u64 [sp + 24] = 0
 91268: ac 58 42                 jump @7253 if a1 <u s0
      :                          @7248
 91271: 33 08                    a1 = 0
 91273: 33 0b 18                 a4 = 0x18
 91276: 28 1f                    jump @7250
      :                          @7249
 91278: 95 59 ff                 a2 = s0 + 0xffffffffffffffff
 91281: ca b8 0a                 a3 = a1 * a4
 91284: c8 7a 0a                 a3 = a3 + a0
 91287: 49 0a                    u64 [a3 + 0] = 0
 91289: 7b a9 08                 u64 [a3 + 0x8] = a2
 91292: 7b a5 10                 u64 [a3 + 0x10] = s0
 91295: 95 88 01                 a1 = a1 + 0x1
 91298: 95 55 01                 s0 = s0 + 0x1
 91301: 7b 18 18                 u64 [sp + 0x18] = a1
 91304: aa 56 1e                 jump @7253 if s1 == s0
      :                          @7250
 91307: 82 19 08                 a2 = u64 [sp + 0x8]
 91310: ab 98 e0                 jump @7249 if a1 != a2
      :                          @7251
 91313: 95 17 08                 a0 = sp + 0x8
 91316: 50 20 2c 04 d9 ed fe     ra = 1068, jump @1569
      :                          @7252 [@dyn 534]
 91323: 33 0b 18                 a4 = 0x18
 91326: 82 18 18                 a1 = u64 [sp + 0x18]
 91329: 82 17 10                 a0 = u64 [sp + 0x10]
 91332: 28 ca                    jump @7249
      :                          @7253
 91334: 82 17 18                 a0 = u64 [sp + 0x18]
 91337: 82 18 10                 a1 = u64 [sp + 0x10]
 91340: 82 19 08                 a2 = u64 [sp + 0x8]
 91343: 82 1a                    a3 = u64 [sp]
 91345: 7b a7 10                 u64 [a3 + 0x10] = a0
 91348: 7b a8 08                 u64 [a3 + 0x8] = a1
 91351: 7b a9                    u64 [a3] = a2
 91353: 82 10 30                 ra = u64 [sp + 0x30]
 91356: 82 15 28                 s0 = u64 [sp + 0x28]
 91359: 82 16 20                 s1 = u64 [sp + 0x20]
 91362: 95 11 38                 sp = sp + 0x38
 91365: 32 00                    ret
      :                          @7254
 91367: 95 11 90                 sp = sp + 0xffffffffffffff90
 91370: 7b 10 68                 u64 [sp + 0x68] = ra
 91373: 7b 15 60                 u64 [sp + 0x60] = s0
 91376: 7b 16 58                 u64 [sp + 0x58] = s1
 91379: 7b 1a 10                 u64 [sp + 0x10] = a3
 91382: 49 11 40                 u64 [sp + 64] = 0
 91385: 33 0a 08                 a3 = 0x8
 91388: 7b 1a 48                 u64 [sp + 0x48] = a3
 91391: 49 11 50                 u64 [sp + 80] = 0
 91394: 51 09 90 00              jump @7263 if a2 == 0
      :                          @7255
 91398: 51 0b 8c 00              jump @7263 if a4 == 0
      :                          @7256
 91402: 7b 17                    u64 [sp] = a0
 91404: 33 0a                    a3 = 0
 91406: 97 99 04                 a2 = a2 << 0x4
 91409: c8 89 09                 a2 = a2 + a1
 91412: 7b 19 08                 u64 [sp + 0x8] = a2
 91415: 97 bb 04                 a4 = a4 << 0x4
 91418: 82 17 10                 a0 = u64 [sp + 0x10]
 91421: c8 b7 02                 t0 = a0 + a4
 91424: 33 07 08                 a0 = 0x8
 91427: 7b 12 20                 u64 [sp + 0x20] = t0
 91430: 28 0e                    jump @7258
      :                          @7257
 91432: 82 18 18                 a1 = u64 [sp + 0x18]
 91435: 95 88 10                 a1 = a1 + 0x10
 91438: 82 19 08                 a2 = u64 [sp + 0x8]
 91441: aa 98 6c                 jump @7264 if a1 == a2
      :                          @7258
 91444: 82 8c                    a5 = u64 [a1]
 91446: 7b 18 18                 u64 [sp + 0x18] = a1
 91449: 82 8b 08                 a4 = u64 [a1 + 0x8]
 91452: 82 15 10                 s0 = u64 [sp + 0x10]
 91455: 7b 1c 30                 u64 [sp + 0x30] = a5
 91458: 7b 1b 28                 u64 [sp + 0x28] = a4
 91461: 28 1f                    jump @7260
      :                          @7259
 91463: c8 c9 08                 a1 = a2 + a5
 91466: c8 b6 06                 s1 = s1 + a4
 91469: 97 a9 04                 a2 = a3 << 0x4
 91472: c8 79 09                 a2 = a2 + a0
 91475: 7b 98                    u64 [a2] = a1
 91477: 7b 96 08                 u64 [a2 + 0x8] = s1
 91480: 95 aa 01                 a3 = a3 + 0x1
 91483: 95 55 10                 s0 = s0 + 0x10
 91486: 7b 1a 50                 u64 [sp + 0x50] = a3
 91489: aa 25 c7                 jump @7257 if s0 == t0
      :                          @7260
 91492: 82 59                    a2 = u64 [s0]
 91494: 82 18 40                 a1 = u64 [sp + 0x40]
 91497: 82 56 08                 s1 = u64 [s0 + 0x8]
 91500: ab 8a db                 jump @7259 if a3 != a1
      :                          @7261
 91503: 95 17 40                 a0 = sp + 0x40
 91506: 64 a8                    a1 = a3
 91508: 7b 19 38                 u64 [sp + 0x38] = a2
 91511: 50 20 2e 04 91 ee fe     ra = 1070, jump @1605
      :                          @7262 [@dyn 535]
 91518: 82 19 38                 a2 = u64 [sp + 0x38]
 91521: 82 1b 28                 a4 = u64 [sp + 0x28]
 91524: 82 1c 30                 a5 = u64 [sp + 0x30]
 91527: 82 12 20                 t0 = u64 [sp + 0x20]
 91530: 82 1a 50                 a3 = u64 [sp + 0x50]
 91533: 82 17 48                 a0 = u64 [sp + 0x48]
 91536: 28 b7                    jump @7259
      :                          @7263
 91538: 49 07                    u64 [a0 + 0] = 0
 91540: 49 17 08 08              u64 [a0 + 8] = 0x8
 91544: 49 17 10                 u64 [a0 + 16] = 0
 91547: 28 43                    jump @7272
      :                          @7264
 91549: 82 15 48                 s0 = u64 [sp + 0x48]
 91552: 82 16 40                 s1 = u64 [sp + 0x40]
 91555: 82 17                    a0 = u64 [sp]
 91557: 64 58                    a1 = s0
 91559: 64 a9                    a2 = a3
 91561: 50 20 30 04 34 fa        ra = 1072, jump @7165
      :                          @7265 [@dyn 536]
 91567: 51 06 2f                 jump @7272 if s1 == 0
      :                          @7266
 91570: 33 07 00 00 01           a0 = 0x10000
 91575: ac 67 27                 jump @7272 if a0 <u s1
      :                          @7267
 91578: 97 67 04                 a0 = s1 << 0x4
 91581: 33 08 b0 02 03           a1 = 0x302b0
 91586: 95 88 00 00 10           a1 = a1 + 0x100000
 91591: 01                       fallthrough
      :                          @7268
 91592: 82 89                    a2 = u64 [a1]
 91594: c9 98 0a                 a3 = a1 - a2
 91597: ab 5a 11                 jump @7272 if a3 != s0
      :                          @7269
 91600: c9 79 0a                 a3 = a2 - a0
 91603: 01                       fallthrough
      :                          @7270
 91604: 82 8b                    a4 = u64 [a1]
 91606: ab 9b f2                 jump @7268 if a4 != a2
      :                          @7271
 91609: 7b 8a                    u64 [a1] = a3
 91611: 33 0c                    a5 = 0
 91613: 01                       fallthrough
      :                          @7272
 91614: 82 10 68                 ra = u64 [sp + 0x68]
 91617: 82 15 60                 s0 = u64 [sp + 0x60]
 91620: 82 16 58                 s1 = u64 [sp + 0x58]
 91623: 95 11 70                 sp = sp + 0x70
 91626: 32 00                    ret
      :                          @7273
 91628: 95 11 c8 fe              sp = sp + 0xfffffffffffffec8
 91632: 7b 10 30 01              u64 [sp + 0x130] = ra
 91636: 7b 15 28 01              u64 [sp + 0x128] = s0
 91640: 7b 16 20 01              u64 [sp + 0x120] = s1
 91644: 82 89 10                 a2 = u64 [a1 + 0x10]
 91647: 7b 17                    u64 [sp] = a0
 91649: 51 09 5c 03              jump @7308 if a2 == 0
      :                          @7274
 91653: 57 09 92 03              jump @7314 if a2 <s 0
      :                          @7275
 91657: 7b 18 e8 00              u64 [sp + 0xe8] = a1
 91661: 85 97 ff                 a0 = a2 ^ 0xffffffffffffffff
 91664: 98 77 3f                 a0 = a0 >> 0x3f
 91667: 33 08 b0 02 03           a1 = 0x302b0
 91672: 33 05 00 00 10           s0 = 0x100000
 91677: c8 58 08                 a1 = a1 + s0
 91680: 01                       fallthrough
      :                          @7276
 91681: 82 8b                    a4 = u64 [a1]
 91683: c8 9b 0a                 a3 = a4 + a2
 91686: ac ba 70 03              jump @7313 if a3 <u a4
      :                          @7277
 91690: c8 7a 0c                 a5 = a3 + a0
 91693: d8 ac 06                 s1 = a5 <u a3
 91696: d8 c5 0c                 a5 = s0 <u a5
 91699: d4 6c 0c                 a5 = a5 | s1
 91702: 52 0c 60 03              jump @7313 if a5 != 0
      :                          @7278
 91706: 82 8c                    a5 = u64 [a1]
 91708: ab bc e5                 jump @7276 if a5 != a4
      :                          @7279
 91711: 7b 8a                    u64 [a1] = a3
 91713: 33 06                    s1 = 0
 91715: 33 05 b0 02 13           s0 = 0x1302b0
 91720: c9 a5 05                 s0 = s0 - a3
 91723: 64 57                    a0 = s0
 91725: 33 08                    a1 = 0
 91727: 7b 19 40                 u64 [sp + 0x40] = a2
 91730: 50 20 32 04 bb a5 01     ra = 1074, jump @13689
      :                          @7280 [@dyn 537]
 91737: 82 17 40                 a0 = u64 [sp + 0x40]
 91740: 7b 17 08 01              u64 [sp + 0x108] = a0
 91744: 7b 15 10 01              u64 [sp + 0x110] = s0
 91748: 82 17 40                 a0 = u64 [sp + 0x40]
 91751: 7b 17 18 01              u64 [sp + 0x118] = a0
 91755: 95 17 f0 00              a0 = sp + 0xf0
 91759: 95 18 08 01              a1 = sp + 0x108
 91763: 82 19 40                 a2 = u64 [sp + 0x40]
 91766: 50 20 34 04 5b fe fe     ra = 1076, jump @1895
      :                          @7281 [@dyn 538]
 91773: 82 18 40                 a1 = u64 [sp + 0x40]
 91776: 82 17 e8 00              a0 = u64 [sp + 0xe8]
 91780: 82 77 08                 a0 = u64 [a0 + 0x8]
 91783: 33 0a                    a3 = 0
 91785: 82 19 00 01              a2 = u64 [sp + 0x100]
 91789: 7b 19 10                 u64 [sp + 0x10] = a2
 91792: 82 19 f8 00              a2 = u64 [sp + 0xf8]
 91796: 7b 19 28                 u64 [sp + 0x28] = a2
 91799: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 91803: 95 77 08                 a0 = a0 + 0x8
 91806: 7b 17 38                 u64 [sp + 0x38] = a0
 91809: 9a 80                    ra = -a1
 91811: 7b 10 88 00              u64 [sp + 0x88] = ra
 91815: 28 09                    jump @7283
      :                          @7282
 91817: 82 1a 08                 a3 = u64 [sp + 0x8]
 91820: aa 8a bf 02              jump @7309 if a3 == a1
      :                          @7283
 91824: 7b 1a 30                 u64 [sp + 0x30] = a3
 91827: 95 a7 01                 a0 = a3 + 0x1
 91830: 7b 17 08                 u64 [sp + 0x8] = a0
 91833: ae 87 f0                 jump @7282 if a0 >=u a1
      :                          @7284
 91836: 82 1a 30                 a3 = u64 [sp + 0x30]
 91839: 95 a7 02                 a0 = a3 + 0x2
 91842: 97 a8 04                 a1 = a3 << 0x4
 91845: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 91849: c8 98 08                 a1 = a1 + a2
 91852: 7b 18 50                 u64 [sp + 0x50] = a1
 91855: 95 88 08                 a1 = a1 + 0x8
 91858: 7b 18 48                 u64 [sp + 0x48] = a1
 91861: 96 a8 18                 a1 = a3 * 0x18
 91864: 82 19 28                 a2 = u64 [sp + 0x28]
 91867: c8 98 08                 a1 = a1 + a2
 91870: 95 89 10                 a2 = a1 + 0x10
 91873: 7b 19 20                 u64 [sp + 0x20] = a2
 91876: 95 88 08                 a1 = a1 + 0x8
 91879: 7b 18 18                 u64 [sp + 0x18] = a1
 91882: 82 19 08                 a2 = u64 [sp + 0x8]
 91885: 28 1b                    jump @7287
      :                          @7285
 91887: 82 77 08                 a0 = u64 [a0 + 0x8]
 91890: c8 b7 07                 a0 = a0 + a4
 91893: 46 07 01                 u8 [a0 + 0] = 0x1
 91896: 01                       fallthrough
      :                          @7286
 91897: 82 18 40                 a1 = u64 [sp + 0x40]
 91900: 82 19 60                 a2 = u64 [sp + 0x60]
 91903: d8 89 07                 a0 = a2 <u a1
 91906: c8 97 07                 a0 = a0 + a2
 91909: ae 89 a4                 jump @7282 if a2 >=u a1
      :                          @7287
 91912: 82 18 50                 a1 = u64 [sp + 0x50]
 91915: 82 8a                    a3 = u64 [a1]
 91917: 82 18 48                 a1 = u64 [sp + 0x48]
 91920: 82 8b                    a4 = u64 [a1]
 91922: 7b 19 58                 u64 [sp + 0x58] = a2
 91925: 97 98 04                 a1 = a2 << 0x4
 91928: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 91932: c8 98 08                 a1 = a1 + a2
 91935: 82 89                    a2 = u64 [a1]
 91937: 82 88 08                 a1 = u64 [a1 + 0x8]
 91940: 7b 17 60                 u64 [sp + 0x60] = a0
 91943: c9 a9 07                 a0 = a2 - a3
 91946: 7b 17 98 00              u64 [sp + 0x98] = a0
 91950: c9 b8 07                 a0 = a1 - a4
 91953: 7b 17 90 00              u64 [sp + 0x90] = a0
 91957: e5 9a 07                 a0 = mins(a3, a2)
 91960: 7b 17 80 00              u64 [sp + 0x80] = a0
 91964: 7b 1a c0 00              u64 [sp + 0xc0] = a3
 91968: 7b 19 b0 00              u64 [sp + 0xb0] = a2
 91972: e3 9a 07                 a0 = maxs(a3, a2)
 91975: 7b 17 78                 u64 [sp + 0x78] = a0
 91978: e5 8b 07                 a0 = mins(a4, a1)
 91981: 7b 17 70                 u64 [sp + 0x70] = a0
 91984: 7b 1b b8 00              u64 [sp + 0xb8] = a4
 91988: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 91992: e3 8b 07                 a0 = maxs(a4, a1)
 91995: 7b 17 68                 u64 [sp + 0x68] = a0
 91998: 33 0a 01                 a3 = 0x1
 92001: 82 19 38                 a2 = u64 [sp + 0x38]
 92004: 28 18                    jump @7289
      :                          @7288
 92006: 82 1a e0 00              a3 = u64 [sp + 0xe0]
 92010: 95 aa 01                 a3 = a3 + 0x1
 92013: c8 a0 07                 a0 = ra + a3
 92016: 82 19 e8 00              a2 = u64 [sp + 0xe8]
 92020: 95 99 10                 a2 = a2 + 0x10
 92023: 51 17 01 b3 01           jump @7303 if a0 == 1
      :                          @7289
 92028: c8 a0 07                 a0 = ra + a3
 92031: 7b 1a e0 00              u64 [sp + 0xe0] = a3
 92035: 64 a8                    a1 = a3
 92037: 93 78                    a1 = 0 if a0 == 0
 92039: 82 93                    t1 = u64 [a2]
 92041: 7b 19 e8 00              u64 [sp + 0xe8] = a2
 92045: 82 96 f8                 s1 = u64 [a2 + 0xfffffffffffffff8]
 92048: 97 88 04                 a1 = a1 << 0x4
 92051: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 92055: c8 78 08                 a1 = a1 + a0
 92058: 82 8b                    a4 = u64 [a1]
 92060: 82 89 08                 a2 = u64 [a1 + 0x8]
 92063: 82 1a b8 00              a3 = u64 [sp + 0xb8]
 92067: c9 a3 07                 a0 = t1 - a3
 92070: 82 18 98 00              a1 = u64 [sp + 0x98]
 92074: ca 87 04                 t2 = a0 * a1
 92077: 82 1c c0 00              a5 = u64 [sp + 0xc0]
 92081: c9 6c 07                 a0 = a5 - s1
 92084: 82 15 90 00              s0 = u64 [sp + 0x90]
 92088: ca 57 07                 a0 = a0 * s0
 92091: c8 74 04                 t2 = t2 + a0
 92094: c9 a9 07                 a0 = a2 - a3
 92097: ca 87 08                 a1 = a0 * a1
 92100: c9 bc 07                 a0 = a5 - a4
 92103: ca 57 07                 a0 = a0 * s0
 92106: c8 78 05                 s0 = a1 + a0
 92109: 7b 1b c8 00              u64 [sp + 0xc8] = a4
 92113: c9 6b 07                 a0 = a4 - s1
 92116: 64 6b                    a4 = s1
 92118: c9 3a 0a                 a3 = a3 - t1
 92121: ca a7 02                 t0 = a0 * a3
 92124: 7b 19 d0 00              u64 [sp + 0xd0] = a2
 92128: c9 39 0a                 a3 = a2 - t1
 92131: c9 c6 00                 ra = s1 - a5
 92134: ca 0a 0c                 a5 = a3 * ra
 92137: c8 c2 02                 t0 = t0 + a5
 92140: 82 1c a8 00              a5 = u64 [sp + 0xa8]
 92144: 7b 13 d8 00              u64 [sp + 0xd8] = t1
 92148: c9 3c 0c                 a5 = a5 - t1
 92151: ca c7 07                 a0 = a0 * a5
 92154: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 92158: c9 86 0c                 a5 = s1 - a1
 92161: ca ca 0a                 a3 = a3 * a5
 92164: 8f 4c                    a5 = t2 >s 0
 92166: 89 58                    a1 = s0 <s 0
 92168: d2 c8 08                 a1 = a1 & a5
 92171: c8 a7 07                 a0 = a0 + a3
 92174: 52 08 0e                 jump @7291 if a1 != 0
      :                          @7290
 92177: 89 48                    a1 = t2 <s 0
 92179: 8f 5a                    a3 = s0 >s 0
 92181: d2 a8 08                 a1 = a1 & a3
 92184: 51 08 a6 00              jump @7298 if a1 == 0
      :                          @7291
 92188: 8f 28                    a1 = t0 >s 0
 92190: 89 7a                    a3 = a0 <s 0
 92192: d2 a8 08                 a1 = a1 & a3
 92195: 82 10 88 00              ra = u64 [sp + 0x88]
 92199: 52 08 d2 fe              jump @7286 if a1 != 0
      :                          @7292
 92203: 89 28                    a1 = t0 <s 0
 92205: 8f 7a                    a3 = a0 >s 0
 92207: d2 a8 08                 a1 = a1 & a3
 92210: 52 08 c7 fe              jump @7286 if a1 != 0
      :                          @7293
 92214: 52 02 42                 jump @7295 if t0 != 0
      :                          @7294
 92217: 82 19 c8 00              a2 = u64 [sp + 0xc8]
 92221: e5 9b 08                 a1 = mins(a4, a2)
 92224: 82 1c c0 00              a5 = u64 [sp + 0xc0]
 92228: d9 8c 08                 a1 = a5 <s a1
 92231: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 92234: e3 9b 0a                 a3 = maxs(a4, a2)
 92237: d9 ca 0a                 a3 = a3 <s a5
 92240: e0 a8 08                 a1 = a1 & ~a3
 92243: 82 19 d0 00              a2 = u64 [sp + 0xd0]
 92247: 82 15 d8 00              s0 = u64 [sp + 0xd8]
 92251: e5 95 0a                 a3 = mins(s0, a2)
 92254: 82 1c b8 00              a5 = u64 [sp + 0xb8]
 92258: d9 ac 0a                 a3 = a5 <s a3
 92261: 85 aa 01                 a3 = a3 ^ 0x1
 92264: d2 a8 08                 a1 = a1 & a3
 92267: e3 95 0a                 a3 = maxs(s0, a2)
 92270: d9 ca 0a                 a3 = a3 <s a5
 92273: e0 a8 08                 a1 = a1 & ~a3
 92276: 52 08 85 fe              jump @7286 if a1 != 0
      :                          @7295
 92280: 52 07 ee fe              jump @7288 if a0 != 0
      :                          @7296
 92284: 82 18 c8 00              a1 = u64 [sp + 0xc8]
 92288: e5 8b 07                 a0 = mins(a4, a1)
 92291: 82 1a b0 00              a3 = u64 [sp + 0xb0]
 92295: d9 7a 07                 a0 = a3 <s a0
 92298: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 92301: e3 8b 08                 a1 = maxs(a4, a1)
 92304: d9 a8 08                 a1 = a1 <s a3
 92307: e0 87 07                 a0 = a0 & ~a1
 92310: 82 19 d0 00              a2 = u64 [sp + 0xd0]
 92314: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 92318: e5 9b 08                 a1 = mins(a4, a2)
 92321: 82 1a a8 00              a3 = u64 [sp + 0xa8]
 92325: d9 8a 08                 a1 = a3 <s a1
 92328: e0 87 07                 a0 = a0 & ~a1
 92331: e3 9b 08                 a1 = maxs(a4, a2)
 92334: d9 a8 08                 a1 = a1 <s a3
 92337: 85 88 01                 a1 = a1 ^ 0x1
 92340: d2 87 07                 a0 = a0 & a1
 92343: 51 07 af fe              jump @7288 if a0 == 0
      :                          @7297
 92347: 28 3e fe                 jump @7286
      :                          @7298
 92350: 82 10 88 00              ra = u64 [sp + 0x88]
 92354: 52 04 2d                 jump @7300 if t2 != 0
      :                          @7299
 92357: 82 18 80 00              a1 = u64 [sp + 0x80]
 92361: d9 8b 08                 a1 = a4 <s a1
 92364: 82 1a 78                 a3 = u64 [sp + 0x78]
 92367: d9 ba 0a                 a3 = a3 <s a4
 92370: d4 a8 08                 a1 = a1 | a3
 92373: 82 1a 70                 a3 = u64 [sp + 0x70]
 92376: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 92380: d9 a9 0a                 a3 = a2 <s a3
 92383: 82 1c 68                 a5 = u64 [sp + 0x68]
 92386: d9 9c 0c                 a5 = a5 <s a2
 92389: d4 ca 0a                 a3 = a3 | a5
 92392: d4 a8 08                 a1 = a1 | a3
 92395: 51 08 0e fe              jump @7286 if a1 == 0
      :                          @7300
 92399: 52 05 47 ff              jump @7293 if s0 != 0
      :                          @7301
 92403: 82 18 80 00              a1 = u64 [sp + 0x80]
 92407: 82 19 c8 00              a2 = u64 [sp + 0xc8]
 92411: d9 89 08                 a1 = a2 <s a1
 92414: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 92417: 82 1a 78                 a3 = u64 [sp + 0x78]
 92420: d9 9a 0a                 a3 = a3 <s a2
 92423: e0 a8 08                 a1 = a1 & ~a3
 92426: 82 1a 70                 a3 = u64 [sp + 0x70]
 92429: 82 19 d0 00              a2 = u64 [sp + 0xd0]
 92433: d9 a9 0a                 a3 = a2 <s a3
 92436: 85 aa 01                 a3 = a3 ^ 0x1
 92439: d2 a8 08                 a1 = a1 & a3
 92442: 82 1a 68                 a3 = u64 [sp + 0x68]
 92445: d9 9a 0a                 a3 = a3 <s a2
 92448: e0 a8 08                 a1 = a1 & ~a3
 92451: 51 08 13 ff              jump @7293 if a1 == 0
      :                          @7302
 92455: 28 d2 fd                 jump @7286
      :                          @7303
 92458: 82 18 10                 a1 = u64 [sp + 0x10]
 92461: 82 1b 30                 a4 = u64 [sp + 0x30]
 92464: ae 8b 63                 jump @7310 if a4 >=u a1
      :                          @7304
 92467: 82 17 20                 a0 = u64 [sp + 0x20]
 92470: 82 7a                    a3 = u64 [a0]
 92472: 82 1c 58                 a5 = u64 [sp + 0x58]
 92475: ae ac 59                 jump @7311 if a5 >=u a3
      :                          @7305
 92478: 82 17 18                 a0 = u64 [sp + 0x18]
 92481: 82 77                    a0 = u64 [a0]
 92483: c8 c7 07                 a0 = a0 + a5
 92486: 46 07 01                 u8 [a0 + 0] = 0x1
 92489: ae 8c 4c                 jump @7312 if a5 >=u a1
      :                          @7306
 92492: 96 c7 18                 a0 = a5 * 0x18
 92495: 82 18 28                 a1 = u64 [sp + 0x28]
 92498: c8 87 07                 a0 = a0 + a1
 92501: 82 79 10                 a2 = u64 [a0 + 0x10]
 92504: ac 9b 97 fd              jump @7285 if a4 <u a2
      :                          @7307
 92508: 00                       trap
      :                          @7308
 92509: 49 21 f0 00              u64 [sp + 240] = 0
 92513: 49 21 f8 00 08           u64 [sp + 248] = 0x8
 92518: 49 21 00 01              u64 [sp + 256] = 0
 92522: 01                       fallthrough
      :                          @7309
 92523: 82 17 00 01              a0 = u64 [sp + 0x100]
 92527: 82 18 f8 00              a1 = u64 [sp + 0xf8]
 92531: 82 19 f0 00              a2 = u64 [sp + 0xf0]
 92535: 82 1a                    a3 = u64 [sp]
 92537: 7b a7 10                 u64 [a3 + 0x10] = a0
 92540: 7b a8 08                 u64 [a3 + 0x8] = a1
 92543: 7b a9                    u64 [a3] = a2
 92545: 82 10 30 01              ra = u64 [sp + 0x130]
 92549: 82 15 28 01              s0 = u64 [sp + 0x128]
 92553: 82 16 20 01              s1 = u64 [sp + 0x120]
 92557: 95 11 38 01              sp = sp + 0x138
 92561: 32 00                    ret
      :                          @7310
 92563: 00                       trap
      :                          @7311
 92564: 00                       trap
      :                          @7312
 92565: 00                       trap
      :                          @7313
 92566: 00                       trap
      :                          @7314
 92567: 00                       trap
      :                          @7315
 92568: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 92571: 7b 10 48                 u64 [sp + 0x48] = ra
 92574: 7b 15 40                 u64 [sp + 0x40] = s0
 92577: 7b 16 38                 u64 [sp + 0x38] = s1
 92580: 82 89 10                 a2 = u64 [a1 + 0x10]
 92583: 7b 17                    u64 [sp] = a0
 92585: 51 09 f6 00              jump @7333 if a2 == 0
      :                          @7316
 92589: 64 86                    s1 = a1
 92591: 98 98 3b                 a1 = a2 >> 0x3b
 92594: 52 08 1c 01              jump @7338 if a1 != 0
      :                          @7317
 92598: 88 83 01                 t1 = a1 <u 0x1
 92601: 7b 19 08                 u64 [sp + 0x8] = a2
 92604: 97 97 04                 a0 = a2 << 0x4
 92607: 97 33 03                 t1 = t1 << 0x3
 92610: 33 00 b0 02 03           ra = 0x302b0
 92615: 33 04 00 00 10           t2 = 0x100000
 92620: c8 40 0c                 a5 = ra + t2
 92623: 01                       fallthrough
      :                          @7318
 92624: 82 c9                    a2 = u64 [a5]
 92626: c8 79 08                 a1 = a2 + a0
 92629: ac 98 f8 00              jump @7337 if a1 <u a2
      :                          @7319
 92633: c8 38 0b                 a4 = a1 + t1
 92636: d8 8b 05                 s0 = a4 <u a1
 92639: d8 b4 0b                 a4 = t2 <u a4
 92642: d4 5b 0b                 a4 = a4 | s0
 92645: 52 0b e8 00              jump @7337 if a4 != 0
      :                          @7320
 92649: c9 80 05                 s0 = ra - a1
 92652: c8 45 05                 s0 = s0 + t2
 92655: 84 5b 07                 a4 = s0 & 0x7
 92658: c8 b8 08                 a1 = a1 + a4
 92661: 01                       fallthrough
      :                          @7321
 92662: 82 ca                    a3 = u64 [a5]
 92664: ab 9a d8                 jump @7318 if a3 != a2
      :                          @7322
 92667: 7b c8                    u64 [a5] = a1
 92669: 33 08                    a1 = 0
 92671: 33 07                    a0 = 0
 92673: c9 b5 02                 t0 = s0 - a4
 92676: 82 13 08                 t1 = u64 [sp + 0x8]
 92679: 7b 13 20                 u64 [sp + 0x20] = t1
 92682: 82 64 08                 t2 = u64 [s1 + 0x8]
 92685: 7b 12 28                 u64 [sp + 0x28] = t0
 92688: 49 11 30                 u64 [sp + 48] = 0
 92691: 33 00 18                 ra = 0x18
 92694: 28 24                    jump @7324
      :                          @7323
 92696: 82 19 10                 a2 = u64 [sp + 0x10]
 92699: c9 59 07                 a0 = a2 - s0
 92702: c8 95 05                 s0 = s0 + a2
 92705: 97 89 04                 a2 = a1 << 0x4
 92708: c8 29 09                 a2 = a2 + t0
 92711: 7b 97                    u64 [a2] = a0
 92713: 7b 95 08                 u64 [a2 + 0x8] = s0
 92716: 95 88 01                 a1 = a1 + 0x1
 92719: 7b 18 30                 u64 [sp + 0x30] = a1
 92722: 82 19 18                 a2 = u64 [sp + 0x18]
 92725: 64 97                    a0 = a2
 92727: aa 39 73                 jump @7334 if a2 == t1
      :                          @7324
 92730: ca 07 0a                 a3 = a0 * ra
 92733: c8 4a 0a                 a3 = a3 + t2
 92736: 82 a9 10                 a2 = u64 [a3 + 0x10]
 92739: ae 97 89 00              jump @7336 if a0 >=u a2
      :                          @7325
 92743: 82 ac 08                 a5 = u64 [a3 + 0x8]
 92746: 97 7a 03                 a3 = a0 << 0x3
 92749: c8 ca 0a                 a3 = a3 + a5
 92752: 82 aa                    a3 = u64 [a3]
 92754: 7b 1a 10                 u64 [sp + 0x10] = a3
 92757: 33 05                    s0 = 0
 92759: 33 0a                    a3 = 0
 92761: 95 7b 01                 a4 = a0 + 0x1
 92764: 7b 1b 18                 u64 [sp + 0x18] = a4
 92767: 28 0b                    jump @7327
      :                          @7326
 92769: 95 aa 01                 a3 = a3 + 0x1
 92772: 95 cc 08                 a5 = a5 + 0x8
 92775: aa a3 15                 jump @7330 if t1 == a3
      :                          @7327
 92778: aa a7 f7                 jump @7326 if a0 == a3
      :                          @7328
 92781: ae 9a 5e                 jump @7335 if a3 >=u a2
      :                          @7329
 92784: 82 cb                    a4 = u64 [a5]
 92786: 9a b6                    s1 = -a4
 92788: e3 6b 0b                 a4 = maxs(a4, s1)
 92791: c8 b5 05                 s0 = s0 + a4
 92794: 28 e7                    jump @7326
      :                          @7330
 92796: 82 17 20                 a0 = u64 [sp + 0x20]
 92799: ab 78 99                 jump @7323 if a1 != a0
      :                          @7331
 92802: 95 17 20                 a0 = sp + 0x20
 92805: 64 46                    s1 = t2
 92807: 50 20 36 04 81 e9 fe     ra = 1078, jump @1605
      :                          @7332 [@dyn 539]
 92814: 33 00 18                 ra = 0x18
 92817: 64 64                    t2 = s1
 92819: 82 13 08                 t1 = u64 [sp + 0x8]
 92822: 82 18 30                 a1 = u64 [sp + 0x30]
 92825: 82 12 28                 t0 = u64 [sp + 0x28]
 92828: 28 7c ff                 jump @7323
      :                          @7333
 92831: 49 11 20                 u64 [sp + 32] = 0
 92834: 49 11 28 08              u64 [sp + 40] = 0x8
 92838: 49 11 30                 u64 [sp + 48] = 0
 92841: 01                       fallthrough
      :                          @7334
 92842: 82 17 30                 a0 = u64 [sp + 0x30]
 92845: 82 18 28                 a1 = u64 [sp + 0x28]
 92848: 82 19 20                 a2 = u64 [sp + 0x20]
 92851: 82 1a                    a3 = u64 [sp]
 92853: 7b a7 10                 u64 [a3 + 0x10] = a0
 92856: 7b a8 08                 u64 [a3 + 0x8] = a1
 92859: 7b a9                    u64 [a3] = a2
 92861: 82 10 48                 ra = u64 [sp + 0x48]
 92864: 82 15 40                 s0 = u64 [sp + 0x40]
 92867: 82 16 38                 s1 = u64 [sp + 0x38]
 92870: 95 11 50                 sp = sp + 0x50
 92873: 32 00                    ret
      :                          @7335
 92875: 00                       trap
      :                          @7336
 92876: 00                       trap
      :                          @7337
 92877: 00                       trap
      :                          @7338
 92878: 00                       trap
      :                          @7339
 92879: 95 11 68 ff              sp = sp + 0xffffffffffffff68
 92883: 7b 10 90 00              u64 [sp + 0x90] = ra
 92887: 7b 15 88 00              u64 [sp + 0x88] = s0
 92891: 7b 16 80 00              u64 [sp + 0x80] = s1
 92895: 82 78 10                 a1 = u64 [a0 + 0x10]
 92898: 51 08 67 02              jump @7396 if a1 == 0
      :                          @7340
 92902: 7b 17 20                 u64 [sp + 0x20] = a0
 92905: 82 70 08                 ra = u64 [a0 + 0x8]
 92908: 33 04                    t2 = 0
 92910: 33 0a                    a3 = 0
 92912: 95 09 10                 a2 = ra + 0x10
 92915: 82 07 10                 a0 = u64 [ra + 0x10]
 92918: 7b 17 50                 u64 [sp + 0x50] = a0
 92921: 33 02 01                 t0 = 0x1
 92924: 7b 19 18                 u64 [sp + 0x18] = a2
 92927: 64 93                    t1 = a2
 92929: 33 07 01                 a0 = 0x1
 92932: 01                       fallthrough
      :                          @7341
 92933: 84 77 01                 a0 = a0 & 0x1
 92936: 51 07 35 02              jump @7394 if a0 == 0
      :                          @7342
 92940: 82 17 50                 a0 = u64 [sp + 0x50]
 92943: e4 7a 0c                 a5 = maxu(a3, a0)
 92946: 97 a7 03                 a0 = a3 << 0x3
 92949: 7b 17 60                 u64 [sp + 0x60] = a0
 92952: 64 a7                    a0 = a3
 92954: 28 11                    jump @7345
      :                          @7343
 92956: ab 89 3e                 jump @7352 if a2 != a1
      :                          @7344
 92959: 82 17 60                 a0 = u64 [sp + 0x60]
 92962: 95 77 08                 a0 = a0 + 0x8
 92965: 7b 17 60                 u64 [sp + 0x60] = a0
 92968: 64 57                    a0 = s0
 92970: 01                       fallthrough
      :                          @7345
 92971: aa c7 77 01              jump @7372 if a0 == a5
      :                          @7346
 92975: 95 75 01                 s0 = a0 + 0x1
 92978: 64 36                    s1 = t1
 92980: 64 49                    a2 = t2
 92982: 01                       fallthrough
      :                          @7347
 92983: 82 6b                    a4 = u64 [s1]
 92985: ae b7 02 02              jump @7392 if a0 >=u a4
      :                          @7348
 92989: 82 6b f8                 a4 = u64 [s1 + 0xfffffffffffffff8]
 92992: 97 7a 03                 a3 = a0 << 0x3
 92995: c8 ab 0b                 a4 = a4 + a3
 92998: 82 bb                    a4 = u64 [a4]
 93000: 52 0b d4                 jump @7343 if a4 != 0
      :                          @7349
 93003: 95 99 01                 a2 = a2 + 0x1
 93006: 95 66 18                 s1 = s1 + 0x18
 93009: ac 89 e6                 jump @7347 if a2 <u a1
      :                          @7350
 93012: ae 28 cb                 jump @7344 if a1 >=u t0
      :                          @7351
 93015: 28 f3 01                 jump @7397
      :                          @7352
 93018: 7b 15                    u64 [sp] = s0
 93020: 7b 13 08                 u64 [sp + 0x8] = t1
 93023: 7b 12 10                 u64 [sp + 0x10] = t0
 93026: 96 43 18                 t1 = t2 * 0x18
 93029: c8 03 03                 t1 = t1 + ra
 93032: 82 3b 10                 a4 = u64 [t1 + 0x10]
 93035: 7b 1b 78                 u64 [sp + 0x78] = a4
 93038: 82 3b 08                 a4 = u64 [t1 + 0x8]
 93041: 7b 1b 70                 u64 [sp + 0x70] = a4
 93044: 82 3b                    a4 = u64 [t1]
 93046: 96 99 18                 a2 = a2 * 0x18
 93049: 7b 10 28                 u64 [sp + 0x28] = ra
 93052: c8 09 09                 a2 = a2 + ra
 93055: 7b 1b 68                 u64 [sp + 0x68] = a4
 93058: 82 9b                    a4 = u64 [a2]
 93060: 82 9c 08                 a5 = u64 [a2 + 0x8]
 93063: 82 96 10                 s1 = u64 [a2 + 0x10]
 93066: 7b 3b                    u64 [t1] = a4
 93068: 7b 3c 08                 u64 [t1 + 0x8] = a5
 93071: 7b 36 10                 u64 [t1 + 0x10] = s1
 93074: 82 1b 78                 a4 = u64 [sp + 0x78]
 93077: 7b 9b 10                 u64 [a2 + 0x10] = a4
 93080: 82 1b 70                 a4 = u64 [sp + 0x70]
 93083: 7b 9b 08                 u64 [a2 + 0x8] = a4
 93086: 82 1b 68                 a4 = u64 [sp + 0x68]
 93089: 95 3c 10                 a5 = t1 + 0x10
 93092: 7b 1c 58                 u64 [sp + 0x58] = a5
 93095: 7b 9b                    u64 [a2] = a4
 93097: 64 8c                    a5 = a1
 93099: 7b 14 30                 u64 [sp + 0x30] = t2
 93102: 64 45                    s0 = t2
 93104: 82 19 18                 a2 = u64 [sp + 0x18]
 93107: 82 1b 50                 a4 = u64 [sp + 0x50]
 93110: ae b7 1a                 jump @7355 if a0 >=u a4
      :                          @7353
 93113: 33 0b                    a4 = 0
 93115: 95 33 08                 t1 = t1 + 0x8
 93118: 7b 13 40                 u64 [sp + 0x40] = t1
 93121: 28 38                    jump @7361
      :                          @7354
 93123: 95 99 18                 a2 = a2 + 0x18
 93126: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 93129: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 93132: 51 0c b3 00              jump @7370 if a5 == 0
      :                          @7355
 93136: 51 05 f3                 jump @7354 if s0 == 0
      :                          @7356
 93139: 82 9b                    a4 = u64 [a2]
 93141: ae b7 66 01              jump @7392 if a0 >=u a4
      :                          @7357
 93145: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
 93148: c8 ab 0b                 a4 = a4 + a3
 93151: 82 bb                    a4 = u64 [a4]
 93153: 51 0b e2                 jump @7354 if a4 == 0
      :                          @7358
 93156: 82 1b 58                 a4 = u64 [sp + 0x58]
 93159: 82 bb                    a4 = u64 [a4]
 93161: ac b7 da                 jump @7354 if a0 <u a4
      :                          @7359
 93164: 28 4f 01                 jump @7392
      :                          @7360
 93167: 82 1b 38                 a4 = u64 [sp + 0x38]
 93170: 95 bb 01                 a4 = a4 + 0x1
 93173: aa 8b 8a 00              jump @7370 if a4 == a1
      :                          @7361
 93177: 82 19 30                 a2 = u64 [sp + 0x30]
 93180: 7b 1b 38                 u64 [sp + 0x38] = a4
 93183: aa 9b f0                 jump @7360 if a4 == a2
      :                          @7362
 93186: 82 1b 38                 a4 = u64 [sp + 0x38]
 93189: 96 b0 18                 ra = a4 * 0x18
 93192: 82 19 28                 a2 = u64 [sp + 0x28]
 93195: c8 90 00                 ra = ra + a2
 93198: 82 0b 10                 a4 = u64 [ra + 0x10]
 93201: ae b7 2a 01              jump @7392 if a0 >=u a4
      :                          @7363
 93205: 82 09 08                 a2 = u64 [ra + 0x8]
 93208: c8 a9 09                 a2 = a2 + a3
 93211: 82 99                    a2 = u64 [a2]
 93213: 7b 19 48                 u64 [sp + 0x48] = a2
 93216: 51 09 cf                 jump @7360 if a2 == 0
      :                          @7364
 93219: 82 19 58                 a2 = u64 [sp + 0x58]
 93222: 82 9b                    a4 = u64 [a2]
 93224: ae b7 13 01              jump @7392 if a0 >=u a4
      :                          @7365
 93228: 82 19 40                 a2 = u64 [sp + 0x40]
 93231: 82 99                    a2 = u64 [a2]
 93233: c8 a9 09                 a2 = a2 + a3
 93236: 82 99                    a2 = u64 [a2]
 93238: 95 06 10                 s1 = ra + 0x10
 93241: 95 00 08                 ra = ra + 0x8
 93244: 82 14 60                 t2 = u64 [sp + 0x60]
 93247: 64 7b                    a4 = a0
 93249: 01                       fallthrough
      :                          @7366
 93250: 82 1c 58                 a5 = u64 [sp + 0x58]
 93253: 82 cc                    a5 = u64 [a5]
 93255: ae cb f5 00              jump @7393 if a4 >=u a5
      :                          @7367
 93259: 82 6c                    a5 = u64 [s1]
 93261: ae cb ef 00              jump @7393 if a4 >=u a5
      :                          @7368
 93265: 82 1c 40                 a5 = u64 [sp + 0x40]
 93268: 82 cc                    a5 = u64 [a5]
 93270: 82 02                    t0 = u64 [ra]
 93272: c8 4c 0c                 a5 = a5 + t2
 93275: 82 cc                    a5 = u64 [a5]
 93277: c8 42 02                 t0 = t0 + t2
 93280: 82 23                    t1 = u64 [t0]
 93282: 95 bb 01                 a4 = a4 + 0x1
 93285: 82 15 48                 s0 = u64 [sp + 0x48]
 93288: ca 5c 0c                 a5 = a5 * s0
 93291: ca 93 05                 s0 = t1 * a2
 93294: c9 5c 0c                 a5 = a5 - s0
 93297: 7b 2c                    u64 [t0] = a5
 93299: 95 44 08                 t2 = t2 + 0x8
 93302: 82 1c 50                 a5 = u64 [sp + 0x50]
 93305: ab bc c9                 jump @7366 if a5 != a4
      :                          @7369
 93308: 28 73 ff                 jump @7360
      :                          @7370
 93311: 82 14 30                 t2 = u64 [sp + 0x30]
 93314: 95 44 01                 t2 = t2 + 0x1
 93317: d8 84 07                 a0 = t2 <u a1
 93320: 82 12 10                 t0 = u64 [sp + 0x10]
 93323: 95 22 01                 t0 = t0 + 0x1
 93326: 82 13 08                 t1 = u64 [sp + 0x8]
 93329: 95 33 18                 t1 = t1 + 0x18
 93332: 82 10 28                 ra = u64 [sp + 0x28]
 93335: 82 1a                    a3 = u64 [sp]
 93337: ab 84 6c fe              jump @7341 if t2 != a1
      :                          @7371
 93341: 7b 18 30                 u64 [sp + 0x30] = a1
 93344: 28 06                    jump @7373
      :                          @7372
 93346: 7b 14 30                 u64 [sp + 0x30] = t2
 93349: 01                       fallthrough
      :                          @7373
 93350: 33 07                    a0 = 0
 93352: 33 03 18                 t1 = 0x18
 93355: 33 0a b0 02 03           a3 = 0x302b0
 93360: 95 ab 00 00 10           a4 = a3 + 0x100000
 93365: 33 02 00 00 02           t0 = 0x20000
 93370: 28 08                    jump @7375
      :                          @7374
 93372: 95 77 01                 a0 = a0 + 0x1
 93375: aa 87 33                 jump @7384 if a0 == a1
      :                          @7375
 93378: ca 37 0c                 a5 = a0 * t1
 93381: c8 0c 0c                 a5 = a5 + ra
 93384: 82 c6                    s1 = u64 [a5]
 93386: 51 06 f2                 jump @7374 if s1 == 0
      :                          @7376
 93389: ac 62 ef                 jump @7374 if t0 <u s1
      :                          @7377
 93392: 82 cc 08                 a5 = u64 [a5 + 0x8]
 93395: 97 64 03                 t2 = s1 << 0x3
 93398: 01                       fallthrough
      :                          @7378
 93399: 82 b5                    s0 = u64 [a4]
 93401: c9 5b 0a                 a3 = a4 - s0
 93404: ab ca e0                 jump @7374 if a3 != a5
      :                          @7379
 93407: c9 45 0a                 a3 = s0 - t2
 93410: 01                       fallthrough
      :                          @7380
 93411: 82 b9                    a2 = u64 [a4]
 93413: ab 59 f2                 jump @7378 if a2 != s0
      :                          @7381
 93416: 7b ba                    u64 [a4] = a3
 93418: 33 06                    s1 = 0
 93420: 01                       fallthrough
      :                          @7382
 93421: ab 59 ea                 jump @7378 if a2 != s0
      :                          @7383
 93424: 28 cc                    jump @7374
      :                          @7384
 93426: 82 17 20                 a0 = u64 [sp + 0x20]
 93429: 82 77                    a0 = u64 [a0]
 93431: 51 07 2f                 jump @7391 if a0 == 0
      :                          @7385
 93434: 33 08 aa aa 00           a1 = 0xaaaa
 93439: ac 78 27                 jump @7391 if a1 <u a0
      :                          @7386
 93442: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
 93445: 33 08 b0 02 03           a1 = 0x302b0
 93450: 95 88 00 00 10           a1 = a1 + 0x100000
 93455: 01                       fallthrough
      :                          @7387
 93456: 82 89                    a2 = u64 [a1]
 93458: c9 98 0a                 a3 = a1 - a2
 93461: ab 0a 11                 jump @7391 if a3 != ra
      :                          @7388
 93464: c8 79 0a                 a3 = a2 + a0
 93467: 01                       fallthrough
      :                          @7389
 93468: 82 8b                    a4 = u64 [a1]
 93470: ab 9b f2                 jump @7387 if a4 != a2
      :                          @7390
 93473: 7b 8a                    u64 [a1] = a3
 93475: 33 0c                    a5 = 0
 93477: 01                       fallthrough
      :                          @7391
 93478: 82 17 30                 a0 = u64 [sp + 0x30]
 93481: 82 10 90 00              ra = u64 [sp + 0x90]
 93485: 82 15 88 00              s0 = u64 [sp + 0x88]
 93489: 82 16 80 00              s1 = u64 [sp + 0x80]
 93493: 95 11 98 00              sp = sp + 0x98
 93497: 32 00                    ret
      :                          @7392
 93499: 00                       trap
      :                          @7393
 93500: 00                       trap
      :                          @7394
 93501: 7b 14 30                 u64 [sp + 0x30] = t2
 93504: 82 17 50                 a0 = u64 [sp + 0x50]
 93507: ae 7a 63 ff              jump @7373 if a3 >=u a0
      :                          @7395
 93511: 28 0a                    jump @7398
      :                          @7396
 93513: 00                       trap
      :                          @7397
 93514: e4 28 07                 a0 = maxu(a1, t0)
 93517: 7b 17 30                 u64 [sp + 0x30] = a0
 93520: 00                       trap
      :                          @7398
 93521: 00                       trap
      :                          @7399
 93522: 82 7b                    a4 = u64 [a0]
 93524: 82 7a 08                 a3 = u64 [a0 + 0x8]
 93527: 82 72 18                 t0 = u64 [a0 + 0x18]
 93530: 82 79 10                 a2 = u64 [a0 + 0x10]
 93533: ca b2 0c                 a5 = t0 * a4
 93536: ca a9 08                 a1 = a2 * a3
 93539: 33 07 ff                 a0 = 0xffffffffffffffff
 93542: aa 8c 61 cf 00           jump @10681 if a5 == a1
      :                          @7400
 93547: c9 8c 0c                 a5 = a5 - a1
 93550: 9a b7                    a0 = -a4
 93552: e3 7b 07                 a0 = maxs(a4, a0)
 93555: 9a a8                    a1 = -a3
 93557: e3 8a 08                 a1 = maxs(a3, a1)
 93560: c8 78 03                 t1 = a1 + a0
 93563: 9a 9b                    a4 = -a2
 93565: e3 b9 0a                 a3 = maxs(a2, a4)
 93568: 9a 2b                    a4 = -t0
 93570: e3 b2 0b                 a4 = maxs(t0, a4)
 93573: c8 ab 09                 a2 = a4 + a3
 93576: e3 93 09                 a2 = maxs(t1, a2)
 93579: c8 b8 08                 a1 = a1 + a4
 93582: c8 a7 07                 a0 = a0 + a3
 93585: e3 78 07                 a0 = maxs(a1, a0)
 93588: ca 79 07                 a0 = a2 * a0
 93591: 9a c8                    a1 = -a5
 93593: e3 8c 08                 a1 = maxs(a5, a1)
 93596: cb 87 07                 a0 = a0 /u a1
 93599: 28 28 cf 00              jump @10681
      :                          @7401
 93603: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 93606: 7b 10 30                 u64 [sp + 0x30] = ra
 93609: 7b 15 28                 u64 [sp + 0x28] = s0
 93612: 7b 16 20                 u64 [sp + 0x20] = s1
 93615: 82 80 10                 ra = u64 [a1 + 0x10]
 93618: 51 00 ce 00              jump @7417 if ra == 0
      :                          @7402
 93622: 98 0a 3c                 a3 = ra >> 0x3c
 93625: 52 0a e3 00              jump @7421 if a3 != 0
      :                          @7403
 93629: 7b 19 08                 u64 [sp + 0x8] = a2
 93632: 7b 18 10                 u64 [sp + 0x10] = a1
 93635: 7b 17                    u64 [sp] = a0
 93637: 88 a2 01                 t0 = a3 <u 0x1
 93640: 97 09 03                 a2 = ra << 0x3
 93643: 97 22 03                 t0 = t0 << 0x3
 93646: 33 04 b0 02 03           t2 = 0x302b0
 93651: 33 03 00 00 10           t1 = 0x100000
 93656: c8 34 0b                 a4 = t2 + t1
 93659: 01                       fallthrough
      :                          @7404
 93660: 82 b6                    s1 = u64 [a4]
 93662: c8 96 0c                 a5 = s1 + a2
 93665: ac 6c ba 00              jump @7420 if a5 <u s1
      :                          @7405
 93669: c8 2c 0a                 a3 = a5 + t0
 93672: d8 ca 05                 s0 = a3 <u a5
 93675: d8 a3 0a                 a3 = t1 <u a3
 93678: d4 5a 0a                 a3 = a3 | s0
 93681: 52 0a aa 00              jump @7420 if a3 != 0
      :                          @7406
 93685: c9 c4 05                 s0 = t2 - a5
 93688: c8 35 05                 s0 = s0 + t1
 93691: 84 5a 07                 a3 = s0 & 0x7
 93694: c8 ac 0c                 a5 = a5 + a3
 93697: 01                       fallthrough
      :                          @7407
 93698: 82 b7                    a0 = u64 [a4]
 93700: ab 67 d8                 jump @7404 if a0 != s1
      :                          @7408
 93703: 7b bc                    u64 [a4] = a5
 93705: c9 a5 07                 a0 = s0 - a3
 93708: 7b 17 18                 u64 [sp + 0x18] = a0
 93711: 33 08                    a1 = 0
 93713: 64 05                    s0 = ra
 93715: 50 20 38 04 fa 9d 01     ra = 1080, jump @13689
      :                          @7409 [@dyn 540]
 93722: 64 50                    ra = s0
 93724: 82 17 10                 a0 = u64 [sp + 0x10]
 93727: 82 73 08                 t1 = u64 [a0 + 0x8]
 93730: 82 17 08                 a0 = u64 [sp + 0x8]
 93733: 82 78 10                 a1 = u64 [a0 + 0x10]
 93736: 82 7a 08                 a3 = u64 [a0 + 0x8]
 93739: 33 04                    t2 = 0
 93741: 33 02 18                 t0 = 0x18
 93744: 28 08                    jump @7411
      :                          @7410
 93746: 95 44 01                 t2 = t2 + 0x1
 93749: aa 04 44                 jump @7416 if t2 == ra
      :                          @7411
 93752: ca 24 07                 a0 = t2 * t0
 93755: c8 37 07                 a0 = a0 + t1
 93758: 82 76 10                 s1 = u64 [a0 + 0x10]
 93761: 51 06 f1                 jump @7410 if s1 == 0
      :                          @7412
 93764: 82 7c 08                 a5 = u64 [a0 + 0x8]
 93767: 97 66 04                 s1 = s1 << 0x4
 93770: c8 c6 06                 s1 = s1 + a5
 93773: 97 45 03                 s0 = t2 << 0x3
 93776: 82 17 18                 a0 = u64 [sp + 0x18]
 93779: c8 75 05                 s0 = s0 + a0
 93782: 01                       fallthrough
      :                          @7413
 93783: 82 c7                    a0 = u64 [a5]
 93785: ae 87 41                 jump @7419 if a0 >=u a1
      :                          @7414
 93788: 82 c9 08                 a2 = u64 [a5 + 0x8]
 93791: 97 77 03                 a0 = a0 << 0x3
 93794: c8 a7 07                 a0 = a0 + a3
 93797: 82 77                    a0 = u64 [a0]
 93799: 82 5b                    a4 = u64 [s0]
 93801: ca 97 07                 a0 = a0 * a2
 93804: c8 b7 07                 a0 = a0 + a4
 93807: 95 cc 10                 a5 = a5 + 0x10
 93810: 7b 57                    u64 [s0] = a0
 93812: ab 6c e3                 jump @7413 if a5 != s1
      :                          @7415
 93815: 28 bb                    jump @7410
      :                          @7416
 93817: 82 17                    a0 = u64 [sp]
 93819: 82 18 18                 a1 = u64 [sp + 0x18]
 93822: 28 06                    jump @7418
      :                          @7417
 93824: 33 08 08                 a1 = 0x8
 93827: 01                       fallthrough
      :                          @7418
 93828: 7b 70                    u64 [a0] = ra
 93830: 7b 78 08                 u64 [a0 + 0x8] = a1
 93833: 7b 70 10                 u64 [a0 + 0x10] = ra
 93836: 82 10 30                 ra = u64 [sp + 0x30]
 93839: 82 15 28                 s0 = u64 [sp + 0x28]
 93842: 82 16 20                 s1 = u64 [sp + 0x20]
 93845: 95 11 38                 sp = sp + 0x38
 93848: 32 00                    ret
      :                          @7419
 93850: 00                       trap
      :                          @7420
 93851: 00                       trap
      :                          @7421
 93852: 00                       trap
      :                          @7422
 93853: 51 08 3f                 jump @7429 if a1 == 0
      :                          @7423
 93856: 64 73                    t1 = a0
 93858: 33 04                    t2 = 0
 93860: 33 07                    a0 = 0
 93862: 96 88 18                 a1 = a1 * 0x18
 93865: c8 83 02                 t0 = t1 + a1
 93868: 28 08                    jump @7425
      :                          @7424
 93870: 95 33 18                 t1 = t1 + 0x18
 93873: aa 23 30                 jump @7430 if t1 == t0
      :                          @7425
 93876: 82 3b 10                 a4 = u64 [t1 + 0x10]
 93879: 51 0b f7                 jump @7424 if a4 == 0
      :                          @7426
 93882: 82 3c 08                 a5 = u64 [t1 + 0x8]
 93885: 97 bb 03                 a4 = a4 << 0x3
 93888: 01                       fallthrough
      :                          @7427
 93889: 82 c8                    a1 = u64 [a5]
 93891: 95 cc 08                 a5 = a5 + 0x8
 93894: 9a 89                    a2 = -a1
 93896: ca 88 0a                 a3 = a1 * a1
 93899: c8 a4 04                 t2 = t2 + a3
 93902: e3 87 07                 a0 = maxs(a0, a1)
 93905: 95 bb f8                 a4 = a4 + 0xfffffffffffffff8
 93908: e3 97 07                 a0 = maxs(a0, a2)
 93911: 52 0b ea                 jump @7427 if a4 != 0
      :                          @7428
 93914: 28 d4                    jump @7424
      :                          @7429
 93916: 33 07                    a0 = 0
 93918: 33 04                    t2 = 0
 93920: 01                       fallthrough
      :                          @7430
 93921: 33 09                    a2 = 0
 93923: 33 02 ff                 t0 = 0xffffffffffffffff
 93926: 64 48                    a1 = t2
 93928: 01                       fallthrough
      :                          @7431
 93929: c8 98 0c                 a5 = a1 + a2
 93932: 98 cc 01                 a5 = a5 >> 0x1
 93935: d6 cc 03                 t1 = a5 mulhu a5
 93938: ca cc 0b                 a4 = a5 * a5
 93941: db 32 0b                 a4 = t0 if t1 != 0
 93944: aa 4b 17                 jump @7434 if a4 == t2
      :                          @7432
 93947: d8 4b 0b                 a4 = a4 <u t2
 93950: 95 c3 01                 t1 = a5 + 0x1
 93953: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 93956: da bc 08                 a1 = a5 if a4 == 0
 93959: db b3 09                 a2 = t1 if a4 != 0
 93962: ae 98 df                 jump @7431 if a1 >=u a2
      :                          @7433
 93965: 32 00                    ret
      :                          @7434
 93967: 64 c8                    a1 = a5
 93969: 32 00                    ret
      :                          @7435
 93971: 55 17 02 0c              jump @7437 if a0 >=u 2
      :                          @7436
 93975: 33 07                    a0 = 0
 93977: 64 c8                    a1 = a5
 93979: 28 c2 d3 00              jump @10748
      :                          @7437
 93983: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 93986: 7b 10 18                 u64 [sp + 0x18] = ra
 93989: 7b 15 10                 u64 [sp + 0x10] = s0
 93992: 7b 16 08                 u64 [sp + 0x8] = s1
 93995: 3a 09 70 02 03           a2 = u64 [0x30270]
 94000: 97 9a 0d                 a3 = a2 << 0xd
 94003: d3 a9 09                 a2 = a2 ^ a3
 94006: 98 9a 07                 a3 = a2 >> 0x7
 94009: d3 a9 09                 a2 = a2 ^ a3
 94012: 97 9a 11                 a3 = a2 << 0x11
 94015: d3 a9 09                 a2 = a2 ^ a3
 94018: 3a 0a 08 01 03           a3 = u64 [0x30108]
 94023: 3e 09 70 02 03           u64 [0x30270] = a2
 94028: 3a 0b 70 02 03           a4 = u64 [0x30270]
 94033: 49 01                    u64 [sp + 0] = 0
 94035: ca a9 0c                 a5 = a2 * a3
 94038: 97 b9 0d                 a2 = a4 << 0xd
 94041: d3 b9 09                 a2 = a2 ^ a4
 94044: 98 9b 07                 a4 = a2 >> 0x7
 94047: d3 b9 09                 a2 = a2 ^ a4
 94050: 97 9b 11                 a4 = a2 << 0x11
 94053: d3 b9 09                 a2 = a2 ^ a4
 94056: 3e 09 70 02 03           u64 [0x30270] = a2
 94061: 3a 06 70 02 03           s1 = u64 [0x30270]
 94066: ca a9 09                 a2 = a2 * a3
 94069: cd 79 09                 a2 = a2 %u a0
 94072: 97 6b 0d                 a4 = s1 << 0xd
 94075: d3 b6 06                 s1 = s1 ^ a4
 94078: 98 6b 07                 a4 = s1 >> 0x7
 94081: d3 b6 06                 s1 = s1 ^ a4
 94084: 97 6b 11                 a4 = s1 << 0x11
 94087: d3 6b 0b                 a4 = a4 ^ s1
 94090: ca ab 0a                 a3 = a4 * a3
 94093: 3e 0b 70 02 03           u64 [0x30270] = a4
 94098: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 94101: cd 7c 03                 t1 = a5 %u a0
 94104: cd 8a 00                 ra = a3 %u a1
 94107: 95 00 01                 ra = ra + 0x1
 94110: 33 04 01                 t2 = 0x1
 94113: 33 02 01                 t0 = 0x1
 94116: 28 0f                    jump @7440
      :                          @7438
 94118: 33 0c 01                 a5 = 0x1
 94121: 64 a3                    t1 = a3
 94123: 01                       fallthrough
      :                          @7439
 94124: 97 44 01                 t2 = t2 << 0x1
 94127: 52 1c 01 6b              jump @7449 if a5 != 1
      :                          @7440
 94131: 64 3a                    a3 = t1
 94133: 64 48                    a1 = t2
 94135: 51 04 ef                 jump @7438 if t2 == 0
      :                          @7441
 94138: ca 33 0b                 a4 = t1 * t1
 94141: c8 9b 0b                 a4 = a4 + a2
 94144: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 94147: cd 7b 03                 t1 = a4 %u a0
 94150: 52 08 f4                 jump @7441 if a1 != 0
      :                          @7442
 94153: 33 06                    s1 = 0
 94155: 7b 13                    u64 [sp] = t1
 94157: 64 08                    a1 = ra
 94159: 28 07                    jump @7444
      :                          @7443
 94161: 7b 13                    u64 [sp] = t1
 94163: 64 08                    a1 = ra
 94165: 01                       fallthrough
      :                          @7444
 94166: ca 33 0b                 a4 = t1 * t1
 94169: c8 9b 0b                 a4 = a4 + a2
 94172: cd 7b 03                 t1 = a4 %u a0
 94175: d8 a3 0b                 a4 = t1 <u a3
 94178: c9 3a 0c                 a5 = a3 - t1
 94181: c9 a3 05                 s0 = t1 - a3
 94184: db bc 05                 s0 = a5 if a4 != 0
 94187: ca 25 0b                 a4 = s0 * t0
 94190: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 94193: cd 7b 02                 t0 = a4 %u a0
 94196: 52 08 e2                 jump @7444 if a1 != 0
      :                          @7445
 94199: 64 2b                    a4 = t0
 94201: 64 78                    a1 = a0
 94203: 01                       fallthrough
      :                          @7446
 94204: 64 8c                    a5 = a1
 94206: cd 8b 08                 a1 = a4 %u a1
 94209: 64 cb                    a4 = a5
 94211: 52 08 f9                 jump @7446 if a1 != 0
      :                          @7447
 94214: c8 06 06                 s1 = s1 + ra
 94217: d8 46 08                 a1 = s1 <u t2
 94220: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 94223: 88 bb 01                 a4 = a4 <u 0x1
 94226: d2 b8 08                 a1 = a1 & a4
 94229: 52 08 bc                 jump @7443 if a1 != 0
      :                          @7448
 94232: 28 94                    jump @7439
      :                          @7449
 94234: 82 15                    s0 = u64 [sp]
 94236: ab 7c 2c                 jump @7454 if a5 != a0
      :                          @7450
 94239: 33 0b 01                 a4 = 0x1
 94242: 01                       fallthrough
      :                          @7451
 94243: ca 55 08                 a1 = s0 * s0
 94246: c8 98 08                 a1 = a1 + a2
 94249: cd 78 05                 s0 = a1 %u a0
 94252: d8 a5 0c                 a5 = s0 <u a3
 94255: c9 5a 06                 s1 = a3 - s0
 94258: c9 a5 08                 a1 = s0 - a3
 94261: db c6 08                 a1 = s1 if a5 != 0
 94264: 64 76                    s1 = a0
 94266: 01                       fallthrough
      :                          @7452
 94267: 64 6c                    a5 = s1
 94269: cd 68 06                 s1 = a1 %u s1
 94272: 64 c8                    a1 = a5
 94274: 52 06 f9                 jump @7452 if s1 != 0
      :                          @7453
 94277: ae cb de                 jump @7451 if a4 >=u a5
      :                          @7454
 94280: d3 c7 07                 a0 = a0 ^ a5
 94283: 8e 77                    a0 = a0 >u 0
 94285: 82 10 18                 ra = u64 [sp + 0x18]
 94288: 82 15 10                 s0 = u64 [sp + 0x10]
 94291: 82 16 08                 s1 = u64 [sp + 0x8]
 94294: 95 11 20                 sp = sp + 0x20
 94297: 64 c8                    a1 = a5
 94299: 32 00                    ret
      :                          @7455 [@dyn 541]
 94301: 64 78                    a1 = a0
 94303: 95 17 28                 a0 = sp + 0x28
 94306: 64 69                    a2 = s1
 94308: 50 20 3c 04 c8 1a ff     ra = 1084, jump @2409
      :                          @7456 [@dyn 542]
 94315: 82 17 28                 a0 = u64 [sp + 0x28]
 94318: 52 17 01 6d 01           jump @7482 if a0 != 1
      :                          @7457
 94323: 82 17 30                 a0 = u64 [sp + 0x30]
 94326: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 94336: d3 87 09                 a2 = a0 ^ a1
 94339: e1 69 09                 a2 = a2 | ~s1
 94342: 51 09 52 01              jump @7479 if a2 == 0
      :                          @7458
 94346: ce 67 07                 a0 = a0 %s s1
 94349: c8 67 09                 a2 = a0 + s1
 94352: d3 89 07                 a0 = a2 ^ a1
 94355: e1 67 07                 a0 = a0 | ~s1
 94358: 51 07 42 01              jump @7479 if a0 == 0
      :                          @7459
 94362: 7b 19                    u64 [sp] = a2
 94364: 82 18 20                 a1 = u64 [sp + 0x20]
 94367: ca 88 07                 a0 = a1 * a1
 94370: d6 88 08                 a1 = a1 mulhu a1
 94373: 64 69                    a2 = s1
 94375: 50 20 3e 04 06 99 01     ra = 1086, jump @13633
      :                          @7460 [@dyn 543]
 94382: c8 67 07                 a0 = a0 + s1
 94385: 7b 17 08                 u64 [sp + 0x8] = a0
 94388: 97 57 02                 a0 = s0 << 0x2
 94391: 98 58 3e                 a1 = s0 >> 0x3e
 94394: 64 69                    a2 = s1
 94396: 50 20 40 04 f1 98 01     ra = 1088, jump @13633
      :                          @7461 [@dyn 544]
 94403: 82 18 18                 a1 = u64 [sp + 0x18]
 94406: ca 87 09                 a2 = a0 * a1
 94409: d6 87 08                 a1 = a0 mulhu a1
 94412: 64 97                    a0 = a2
 94414: 64 69                    a2 = s1
 94416: 50 20 42 04 dd 98 01     ra = 1090, jump @13633
      :                          @7462 [@dyn 545]
 94423: cd 67 07                 a0 = a0 %u s1
 94426: 82 18 08                 a1 = u64 [sp + 0x8]
 94429: c9 78 07                 a0 = a1 - a0
 94432: cd 67 07                 a0 = a0 %u s1
 94435: 64 68                    a1 = s1
 94437: 50 20 44 04 9b 2b ff     ra = 1092, jump @2781
      :                          @7463 [@dyn 546]
 94444: 52 17 01 87 00           jump @7471 if a0 != 1
      :                          @7464
 94449: 82 17                    a0 = u64 [sp]
 94451: ce 67 07                 a0 = a0 %s s1
 94454: 9a 69                    a2 = -s1
 94456: e3 96 09                 a2 = maxs(s1, a2)
 94459: 99 7a 3f                 a3 = a0 >>a 0x3f
 94462: d2 a9 09                 a2 = a2 & a3
 94465: c8 97 07                 a0 = a0 + a2
 94468: 82 19 20                 a2 = u64 [sp + 0x20]
 94471: cd 69 09                 a2 = a2 %u s1
 94474: c9 96 09                 a2 = s1 - a2
 94477: cd 69 09                 a2 = a2 %u s1
 94480: c8 89 0a                 a3 = a2 + a1
 94483: cd 6a 0a                 a3 = a3 %u s1
 94486: c9 86 08                 a1 = s1 - a1
 94489: c8 98 08                 a1 = a1 + a2
 94492: cd 68 08                 a1 = a1 %u s1
 94495: ca 7a 09                 a2 = a3 * a0
 94498: cd 69 02                 t0 = a2 %u s1
 94501: ca 78 07                 a0 = a1 * a0
 94504: cd 67 03                 t1 = a0 %u s1
 94507: ab 32 4f                 jump @7472 if t0 != t1
      :                          @7465
 94510: 33 08 b0 02 03           a1 = 0x302b0
 94515: 33 03 00 00 10           t1 = 0x100000
 94520: c8 38 0a                 a3 = a1 + t1
 94523: 01                       fallthrough
      :                          @7466
 94524: 82 ab                    a4 = u64 [a3]
 94526: 95 bc 08                 a5 = a4 + 0x8
 94529: ac bc 98 00              jump @7480 if a5 <u a4
      :                          @7467
 94533: 95 c7 08                 a0 = a5 + 0x8
 94536: d8 c7 09                 a2 = a0 <u a5
 94539: d8 73 07                 a0 = t1 <u a0
 94542: d4 97 07                 a0 = a0 | a2
 94545: 52 07 88 00              jump @7480 if a0 != 0
      :                          @7468
 94549: c9 c8 09                 a2 = a1 - a5
 94552: c8 39 09                 a2 = a2 + t1
 94555: 84 97 07                 a0 = a2 & 0x7
 94558: c8 7c 0c                 a5 = a5 + a0
 94561: 01                       fallthrough
      :                          @7469
 94562: 82 a5                    s0 = u64 [a3]
 94564: ab b5 d8                 jump @7466 if s0 != a4
      :                          @7470
 94567: 7b ac                    u64 [a3] = a5
 94569: c9 79 09                 a2 = a2 - a0
 94572: 7b 92                    u64 [a2] = t0
 94574: 33 07 01                 a0 = 0x1
 94577: 28 4e                    jump @7478
      :                          @7471
 94579: 33 07                    a0 = 0
 94581: 33 09 08                 a2 = 0x8
 94584: 28 47                    jump @7478
      :                          @7472
 94586: 33 07 b0 02 03           a0 = 0x302b0
 94591: 33 04 00 00 10           t2 = 0x100000
 94596: c8 47 0b                 a4 = a0 + t2
 94599: 01                       fallthrough
      :                          @7473
 94600: 82 b6                    s1 = u64 [a4]
 94602: 95 6c 10                 a5 = s1 + 0x10
 94605: ac 6c 4d                 jump @7481 if a5 <u s1
      :                          @7474
 94608: 95 c9 08                 a2 = a5 + 0x8
 94611: d8 c9 0a                 a3 = a2 <u a5
 94614: d8 94 09                 a2 = t2 <u a2
 94617: d4 a9 09                 a2 = a2 | a3
 94620: 52 09 3e                 jump @7481 if a2 != 0
      :                          @7475
 94623: c9 c7 09                 a2 = a0 - a5
 94626: c8 49 09                 a2 = a2 + t2
 94629: 84 9a 07                 a3 = a2 & 0x7
 94632: c8 ac 0c                 a5 = a5 + a3
 94635: 01                       fallthrough
      :                          @7476
 94636: 82 b8                    a1 = u64 [a4]
 94638: ab 68 da                 jump @7473 if a1 != s1
      :                          @7477
 94641: 7b bc                    u64 [a4] = a5
 94643: c9 a9 09                 a2 = a2 - a3
 94646: 7b 92                    u64 [a2] = t0
 94648: 7b 93 08                 u64 [a2 + 0x8] = t1
 94651: 33 07 02                 a0 = 0x2
 94654: 01                       fallthrough
      :                          @7478
 94655: 82 18 10                 a1 = u64 [sp + 0x10]
 94658: 7b 87                    u64 [a1] = a0
 94660: 7b 89 08                 u64 [a1 + 0x8] = a2
 94663: 7b 87 10                 u64 [a1 + 0x10] = a0
 94666: 82 10 50                 ra = u64 [sp + 0x50]
 94669: 82 15 48                 s0 = u64 [sp + 0x48]
 94672: 82 16 40                 s1 = u64 [sp + 0x40]
 94675: 95 11 58                 sp = sp + 0x58
 94678: 32 00                    ret
      :                          @7479
 94680: 00                       trap
      :                          @7480
 94681: 00                       trap
      :                          @7481
 94682: 00                       trap
      :                          @7482
 94683: 00                       trap
      :                          @7483 [@dyn 547]
 94684: 3a 09 18 01 03           a2 = u64 [0x30118]
 94689: 7b 17 30                 u64 [sp + 0x30] = a0
 94692: 7b 18 38                 u64 [sp + 0x38] = a1
 94695: d6 95 07                 a0 = s0 mulhu a2
 94698: 98 77 09                 a0 = a0 >> 0x9
 94701: 96 77 f5 03              a0 = a0 * 0x3f5
 94705: c9 75 07                 a0 = s0 - a0
 94708: 33 08 f5 03              a1 = 0x3f5
 94712: 50 20 48 04 88 2a ff     ra = 1096, jump @2781
      :                          @7484 [@dyn 548]
 94719: 7b 17 28                 u64 [sp + 0x28] = a0
 94722: 64 85                    s0 = a1
 94724: 95 17 40                 a0 = sp + 0x40
 94727: 33 08 f1 03              a1 = 0x3f1
 94731: 33 09 f5 03              a2 = 0x3f5
 94735: 50 20 4a 04 1d 19 ff     ra = 1098, jump @2409
      :                          @7485 [@dyn 549]
 94742: 82 17 40                 a0 = u64 [sp + 0x40]
 94745: 52 17 01 1a 02           jump @7499 if a0 != 1
      :                          @7486
 94750: 7b 15 18                 u64 [sp + 0x18] = s0
 94753: 82 16 48                 s1 = u64 [sp + 0x48]
 94756: 95 17 40                 a0 = sp + 0x40
 94759: 33 08 f5 03              a1 = 0x3f5
 94763: 33 09 f1 03              a2 = 0x3f1
 94767: 50 20 4c 04 fd 18 ff     ra = 1100, jump @2409
      :                          @7487 [@dyn 550]
 94774: 82 17 40                 a0 = u64 [sp + 0x40]
 94777: 52 17 01 fa 01           jump @7499 if a0 != 1
      :                          @7488
 94782: 3a 07 18 01 03           a0 = u64 [0x30118]
 94787: 82 15 38                 s0 = u64 [sp + 0x38]
 94790: 82 18 30                 a1 = u64 [sp + 0x30]
 94793: 93 85                    s0 = 0 if a1 == 0
 94795: 82 12 18                 t0 = u64 [sp + 0x18]
 94798: 82 18 28                 a1 = u64 [sp + 0x28]
 94801: 93 82                    t0 = 0 if a1 == 0
 94803: 82 19 48                 a2 = u64 [sp + 0x48]
 94806: d5 76 08                 a1 = s1 mulh a0
 94809: c8 68 08                 a1 = a1 + s1
 94812: 98 8a 3f                 a3 = a1 >> 0x3f
 94815: 99 88 09                 a1 = a1 >>a 0x9
 94818: c8 a8 08                 a1 = a1 + a3
 94821: 33 03 f5 03              t1 = 0x3f5
 94825: ca 38 08                 a1 = a1 * t1
 94828: c9 86 08                 a1 = s1 - a1
 94831: 88 8a 0b fc              a3 = a1 <u 0xfffffffffffffc0b
 94835: 3a 0b 10 01 03           a4 = u64 [0x30110]
 94840: 33 0c f5 03              a5 = 0x3f5
 94844: 94 ac                    a5 = 0 if a3 != 0
 94846: c8 c8 08                 a1 = a1 + a5
 94849: d5 b9 0a                 a3 = a2 mulh a4
 94852: c8 9a 0a                 a3 = a3 + a2
 94855: 98 ac 3f                 a5 = a3 >> 0x3f
 94858: 99 aa 09                 a3 = a3 >>a 0x9
 94861: c8 ca 0a                 a3 = a3 + a5
 94864: 96 aa f1 03              a3 = a3 * 0x3f1
 94868: c9 a9 09                 a2 = a2 - a3
 94871: 88 9a 0f fc              a3 = a2 <u 0xfffffffffffffc0f
 94875: 33 0c f1 03              a5 = 0x3f1
 94879: 94 ac                    a5 = 0 if a3 != 0
 94881: c8 c9 09                 a2 = a2 + a5
 94884: 49 11 40                 u64 [sp + 64] = 0
 94887: 49 11 48 08              u64 [sp + 72] = 0x8
 94891: 49 11 50                 u64 [sp + 80] = 0
 94894: 9a 5a f1 03              a3 = 0x3f1 - s0
 94898: d6 ba 0b                 a4 = a3 mulhu a4
 94901: 98 bb 09                 a4 = a4 >> 0x9
 94904: 96 bb f1 03              a4 = a4 * 0x3f1
 94908: c9 ba 0a                 a3 = a3 - a4
 94911: 7b 1a 30                 u64 [sp + 0x30] = a3
 94914: c9 23 0a                 a3 = t1 - t0
 94917: d6 7a 07                 a0 = a3 mulhu a0
 94920: 98 77 09                 a0 = a0 >> 0x9
 94923: ca 37 07                 a0 = a0 * t1
 94926: c9 7a 0a                 a3 = a3 - a0
 94929: 7b 1a 38                 u64 [sp + 0x38] = a3
 94932: ca 39 09                 a2 = a2 * t1
 94935: 96 88 f1 03              a1 = a1 * 0x3f1
 94939: 7b 18 10                 u64 [sp + 0x10] = a1
 94942: 3a 06 20 01 03           s1 = u64 [0x30120]
 94947: 7b 19 28                 u64 [sp + 0x28] = a2
 94950: ca 59 09                 a2 = a2 * s0
 94953: 7b 19 08                 u64 [sp + 0x8] = a2
 94956: ca 28 07                 a0 = a1 * t0
 94959: 7b 17 18                 u64 [sp + 0x18] = a0
 94962: c8 97 07                 a0 = a0 + a2
 94965: d6 67 08                 a1 = a0 mulhu s1
 94968: 98 88 13                 a1 = a1 >> 0x13
 94971: 33 05 a5 98 0f           s0 = 0xf98a5
 94976: ca 58 08                 a1 = a1 * s0
 94979: c9 87 07                 a0 = a0 - a1
 94982: 7b 17                    u64 [sp] = a0
 94984: 95 17 40                 a0 = sp + 0x40
 94987: 33 08                    a1 = 0
 94989: 50 20 4e 04 02 e0 fe     ra = 1102, jump @1581
      :                          @7489 [@dyn 551]
 94996: 64 52                    t0 = s0
 94998: 64 6c                    a5 = s1
 95000: 82 19 50                 a2 = u64 [sp + 0x50]
 95003: 82 17 48                 a0 = u64 [sp + 0x48]
 95006: 82 18 40                 a1 = u64 [sp + 0x40]
 95009: 97 9a 03                 a3 = a2 << 0x3
 95012: c8 7a 0a                 a3 = a3 + a0
 95015: 82 1b                    a4 = u64 [sp]
 95017: 7b ab                    u64 [a3] = a4
 95019: 95 99 01                 a2 = a2 + 0x1
 95022: 7b 19 50                 u64 [sp + 0x50] = a2
 95025: 82 1a 38                 a3 = u64 [sp + 0x38]
 95028: 82 1b 10                 a4 = u64 [sp + 0x10]
 95031: ca ab 0a                 a3 = a4 * a3
 95034: 7b 1a 38                 u64 [sp + 0x38] = a3
 95037: 82 15 08                 s0 = u64 [sp + 0x8]
 95040: c8 a5 05                 s0 = s0 + a3
 95043: d6 65 0a                 a3 = s0 mulhu s1
 95046: 98 aa 13                 a3 = a3 >> 0x13
 95049: ca 2a 0a                 a3 = a3 * t0
 95052: c9 a5 0b                 a4 = s0 - a3
 95055: ab 89 25                 jump @7492 if a2 != a1
      :                          @7490
 95058: 95 17 40                 a0 = sp + 0x40
 95061: 64 c5                    s0 = a5
 95063: 64 26                    s1 = t0
 95065: 7b 1b 10                 u64 [sp + 0x10] = a4
 95068: 50 20 50 04 b3 df fe     ra = 1104, jump @1581
      :                          @7491 [@dyn 552]
 95075: 82 1b 10                 a4 = u64 [sp + 0x10]
 95078: 64 62                    t0 = s1
 95080: 64 5c                    a5 = s0
 95082: 82 19 50                 a2 = u64 [sp + 0x50]
 95085: 82 17 48                 a0 = u64 [sp + 0x48]
 95088: 82 18 40                 a1 = u64 [sp + 0x40]
 95091: 01                       fallthrough
      :                          @7492
 95092: 82 15 20                 s0 = u64 [sp + 0x20]
 95095: 97 9a 03                 a3 = a2 << 0x3
 95098: c8 7a 0a                 a3 = a3 + a0
 95101: 7b ab                    u64 [a3] = a4
 95103: 95 99 01                 a2 = a2 + 0x1
 95106: 7b 19 50                 u64 [sp + 0x50] = a2
 95109: 82 1a 30                 a3 = u64 [sp + 0x30]
 95112: 82 1b 28                 a4 = u64 [sp + 0x28]
 95115: ca ab 06                 s1 = a4 * a3
 95118: 82 1a 18                 a3 = u64 [sp + 0x18]
 95121: c8 6a 0a                 a3 = a3 + s1
 95124: d6 ca 0b                 a4 = a3 mulhu a5
 95127: 98 bb 13                 a4 = a4 >> 0x13
 95130: ca 2b 0b                 a4 = a4 * t0
 95133: c9 ba 0b                 a4 = a3 - a4
 95136: ab 89 1d                 jump @7495 if a2 != a1
      :                          @7493
 95139: 95 17 40                 a0 = sp + 0x40
 95142: 7b 1b 30                 u64 [sp + 0x30] = a4
 95145: 50 20 52 04 66 df fe     ra = 1106, jump @1581
      :                          @7494 [@dyn 553]
 95152: 82 1b 30                 a4 = u64 [sp + 0x30]
 95155: 82 19 50                 a2 = u64 [sp + 0x50]
 95158: 82 18 40                 a1 = u64 [sp + 0x40]
 95161: 82 17 48                 a0 = u64 [sp + 0x48]
 95164: 01                       fallthrough
      :                          @7495
 95165: 97 9a 03                 a3 = a2 << 0x3
 95168: c8 7a 0a                 a3 = a3 + a0
 95171: 7b ab                    u64 [a3] = a4
 95173: 95 99 01                 a2 = a2 + 0x1
 95176: 7b 19 50                 u64 [sp + 0x50] = a2
 95179: ab 89 14                 jump @7498 if a2 != a1
      :                          @7496
 95182: 95 17 40                 a0 = sp + 0x40
 95185: 50 20 54 04 3e df fe     ra = 1108, jump @1581
      :                          @7497 [@dyn 554]
 95192: 82 19 50                 a2 = u64 [sp + 0x50]
 95195: 82 17 48                 a0 = u64 [sp + 0x48]
 95198: 01                       fallthrough
      :                          @7498
 95199: 82 18 38                 a1 = u64 [sp + 0x38]
 95202: c8 68 08                 a1 = a1 + s1
 95205: 97 8a 20                 a3 = a1 << 0x20
 95208: 14 0b 00 00 00 00 71 3f 50 83 a4 = 0x83503f7100000000
 95218: d6 ba 0a                 a3 = a3 mulhu a4
 95221: 98 aa 33                 a3 = a3 >> 0x33
 95224: 33 0b a5 98 0f           a4 = 0xf98a5
 95229: ca ba 0a                 a3 = a3 * a4
 95232: bf a8 08                 i32 a1 = a1 - a3
 95235: 97 88 20                 a1 = a1 << 0x20
 95238: 98 88 20                 a1 = a1 >> 0x20
 95241: 97 9a 03                 a3 = a2 << 0x3
 95244: c8 a7 07                 a0 = a0 + a3
 95247: 7b 78                    u64 [a0] = a1
 95249: 95 99 01                 a2 = a2 + 0x1
 95252: 7b 19 50                 u64 [sp + 0x50] = a2
 95255: 82 17 48                 a0 = u64 [sp + 0x48]
 95258: 82 18 40                 a1 = u64 [sp + 0x40]
 95261: 7b 59 10                 u64 [s0 + 0x10] = a2
 95264: 7b 57 08                 u64 [s0 + 0x8] = a0
 95267: 7b 58                    u64 [s0] = a1
 95269: 82 10 68                 ra = u64 [sp + 0x68]
 95272: 82 15 60                 s0 = u64 [sp + 0x60]
 95275: 82 16 58                 s1 = u64 [sp + 0x58]
 95278: 95 11 70                 sp = sp + 0x70
 95281: 32 00                    ret
      :                          @7499
 95283: 00                       trap
      :                          @7500
 95284: 82 9a                    a3 = u64 [a2]
 95286: 95 ab 40                 a4 = a3 + 0x40
 95289: ac ab 50 a4 01           jump @13937 if a4 <u a3
      :                          @7501
 95294: 95 b8 08                 a1 = a4 + 0x8
 95297: d8 b8 0c                 a5 = a1 <u a4
 95300: d8 82 08                 a1 = t0 <u a1
 95303: d4 c8 08                 a1 = a1 | a5
 95306: 52 08 3f a4 01           jump @13937 if a1 != 0
      :                          @7502
 95311: c9 b7 08                 a1 = a0 - a4
 95314: c8 28 08                 a1 = a1 + t0
 95317: 84 8c 07                 a5 = a1 & 0x7
 95320: c8 cb 0b                 a4 = a4 + a5
 95323: 01                       fallthrough
      :                          @7503
 95324: 82 95                    s0 = u64 [a2]
 95326: ab a5 d6                 jump @7500 if s0 != a3
      :                          @7504
 95329: 7b 9b                    u64 [a2] = a4
 95331: 01                       fallthrough
      :                          @7505
 95332: c9 c8 08                 a1 = a1 - a5
 95335: 49 11 18 08              u64 [sp + 24] = 0x8
 95339: 7b 18 20                 u64 [sp + 0x20] = a1
 95342: 49 11 28                 u64 [sp + 40] = 0
 95345: 33 0c 70 02 03           a5 = 0x30270
 95350: 3a 07 70 02 03           a0 = u64 [0x30270]
 95355: 3a 06 28 01 03           s1 = u64 [0x30128]
 95360: 97 78 0d                 a1 = a0 << 0xd
 95363: d3 87 07                 a0 = a0 ^ a1
 95366: 98 78 07                 a1 = a0 >> 0x7
 95369: d3 87 07                 a0 = a0 ^ a1
 95372: 97 78 11                 a1 = a0 << 0x11
 95375: d3 87 07                 a0 = a0 ^ a1
 95378: ca 67 09                 a2 = a0 * s1
 95381: 3e 07 70 02 03           u64 [0x30270] = a0
 95386: 14 05 cd cc cc cc cc cc cc cc s0 = 0xcccccccccccccccd
 95396: d6 59 07                 a0 = a2 mulhu s0
 95399: 98 77 03                 a0 = a0 >> 0x3
 95402: 82 18 28                 a1 = u64 [sp + 0x28]
 95405: 82 1a 18                 a3 = u64 [sp + 0x18]
 95408: 33 02 0a                 t0 = 0xa
 95411: ca 27 07                 a0 = a0 * t0
 95414: c9 79 0b                 a4 = a2 - a0
 95417: 95 b3 01                 t1 = a4 + 0x1
 95420: 7b 13 08                 u64 [sp + 0x8] = t1
 95423: ab a8 24                 jump @7508 if a1 != a3
      :                          @7506
 95426: 95 17 18                 a0 = sp + 0x18
 95429: 7b 15                    u64 [sp] = s0
 95431: 64 b5                    s0 = a4
 95433: 50 20 56 04 46 de fe     ra = 1110, jump @1581
      :                          @7507 [@dyn 555]
 95440: 33 02 0a                 t0 = 0xa
 95443: 64 5b                    a4 = s0
 95445: 82 15                    s0 = u64 [sp]
 95447: 33 0c 70 02 03           a5 = 0x30270
 95452: 82 13 08                 t1 = u64 [sp + 0x8]
 95455: 82 18 28                 a1 = u64 [sp + 0x28]
 95458: 01                       fallthrough
      :                          @7508
 95459: 82 17 20                 a0 = u64 [sp + 0x20]
 95462: 97 89 03                 a2 = a1 << 0x3
 95465: c8 97 07                 a0 = a0 + a2
 95468: 7b 73                    u64 [a0] = t1
 95470: 95 88 01                 a1 = a1 + 0x1
 95473: 7b 18 28                 u64 [sp + 0x28] = a1
 95476: 3a 07 70 02 03           a0 = u64 [0x30270]
 95481: 97 78 0d                 a1 = a0 << 0xd
 95484: d3 87 07                 a0 = a0 ^ a1
 95487: 98 78 07                 a1 = a0 >> 0x7
 95490: d3 87 07                 a0 = a0 ^ a1
 95493: 97 78 11                 a1 = a0 << 0x11
 95496: d3 87 07                 a0 = a0 ^ a1
 95499: ca 67 09                 a2 = a0 * s1
 95502: 3e 07 70 02 03           u64 [0x30270] = a0
 95507: d6 59 07                 a0 = a2 mulhu s0
 95510: 98 77 03                 a0 = a0 >> 0x3
 95513: 82 18 28                 a1 = u64 [sp + 0x28]
 95516: 82 1a 18                 a3 = u64 [sp + 0x18]
 95519: 96 77 0a                 a0 = a0 * 0xa
 95522: c9 79 09                 a2 = a2 - a0
 95525: c8 b9 09                 a2 = a2 + a4
 95528: 95 95 02                 s0 = a2 + 0x2
 95531: ab a8 14                 jump @7511 if a1 != a3
      :                          @7509
 95534: 95 17 18                 a0 = sp + 0x18
 95537: 50 20 58 04 de dd fe     ra = 1112, jump @1581
      :                          @7510 [@dyn 556]
 95544: 82 13 08                 t1 = u64 [sp + 0x8]
 95547: 82 18 28                 a1 = u64 [sp + 0x28]
 95550: 01                       fallthrough
      :                          @7511
 95551: 82 17 20                 a0 = u64 [sp + 0x20]
 95554: 97 89 03                 a2 = a1 << 0x3
 95557: c8 97 07                 a0 = a0 + a2
 95560: 7b 75                    u64 [a0] = s0
 95562: 95 88 01                 a1 = a1 + 0x1
 95565: 7b 18 28                 u64 [sp + 0x28] = a1
 95568: 33 0c 70 02 03           a5 = 0x30270
 95573: 3a 07 70 02 03           a0 = u64 [0x30270]
 95578: c8 53 03                 t1 = t1 + s0
 95581: 97 78 0d                 a1 = a0 << 0xd
 95584: d3 87 07                 a0 = a0 ^ a1
 95587: 98 78 07                 a1 = a0 >> 0x7
 95590: d3 87 07                 a0 = a0 ^ a1
 95593: 97 78 11                 a1 = a0 << 0x11
 95596: d3 87 07                 a0 = a0 ^ a1
 95599: ca 67 09                 a2 = a0 * s1
 95602: 3e 07 70 02 03           u64 [0x30270] = a0
 95607: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
 95617: d6 b9 07                 a0 = a2 mulhu a4
 95620: 98 77 03                 a0 = a0 >> 0x3
 95623: 33 02 0a                 t0 = 0xa
 95626: 82 18 28                 a1 = u64 [sp + 0x28]
 95629: 82 1a 18                 a3 = u64 [sp + 0x18]
 95632: ca 27 07                 a0 = a0 * t0
 95635: c9 79 09                 a2 = a2 - a0
 95638: c8 39 09                 a2 = a2 + t1
 95641: 95 95 01                 s0 = a2 + 0x1
 95644: ab a8 23                 jump @7514 if a1 != a3
      :                          @7512
 95647: 95 17 18                 a0 = sp + 0x18
 95650: 7b 13 08                 u64 [sp + 0x8] = t1
 95653: 7b 1b                    u64 [sp] = a4
 95655: 50 20 5a 04 68 dd fe     ra = 1114, jump @1581
      :                          @7513 [@dyn 557]
 95662: 82 1b                    a4 = u64 [sp]
 95664: 82 13 08                 t1 = u64 [sp + 0x8]
 95667: 33 02 0a                 t0 = 0xa
 95670: 33 0c 70 02 03           a5 = 0x30270
 95675: 82 18 28                 a1 = u64 [sp + 0x28]
 95678: 01                       fallthrough
      :                          @7514
 95679: 82 17 20                 a0 = u64 [sp + 0x20]
 95682: 97 89 03                 a2 = a1 << 0x3
 95685: c8 97 07                 a0 = a0 + a2
 95688: 7b 75                    u64 [a0] = s0
 95690: 95 88 01                 a1 = a1 + 0x1
 95693: 7b 18 28                 u64 [sp + 0x28] = a1
 95696: 3a 07 70 02 03           a0 = u64 [0x30270]
 95701: c8 53 03                 t1 = t1 + s0
 95704: 97 78 0d                 a1 = a0 << 0xd
 95707: d3 87 07                 a0 = a0 ^ a1
 95710: 98 78 07                 a1 = a0 >> 0x7
 95713: d3 87 07                 a0 = a0 ^ a1
 95716: 97 78 11                 a1 = a0 << 0x11
 95719: d3 87 07                 a0 = a0 ^ a1
 95722: ca 67 09                 a2 = a0 * s1
 95725: 3e 07 70 02 03           u64 [0x30270] = a0
 95730: d6 b9 07                 a0 = a2 mulhu a4
 95733: 98 77 03                 a0 = a0 >> 0x3
 95736: 82 18 28                 a1 = u64 [sp + 0x28]
 95739: 82 1a 18                 a3 = u64 [sp + 0x18]
 95742: 96 77 0a                 a0 = a0 * 0xa
 95745: c9 79 09                 a2 = a2 - a0
 95748: c8 39 09                 a2 = a2 + t1
 95751: 95 95 01                 s0 = a2 + 0x1
 95754: ab a8 17                 jump @7517 if a1 != a3
      :                          @7515
 95757: 95 17 18                 a0 = sp + 0x18
 95760: 7b 13 08                 u64 [sp + 0x8] = t1
 95763: 50 20 5c 04 fc dc fe     ra = 1116, jump @1581
      :                          @7516 [@dyn 558]
 95770: 82 13 08                 t1 = u64 [sp + 0x8]
 95773: 82 18 28                 a1 = u64 [sp + 0x28]
 95776: 01                       fallthrough
      :                          @7517
 95777: 82 17 20                 a0 = u64 [sp + 0x20]
 95780: 97 89 03                 a2 = a1 << 0x3
 95783: c8 97 07                 a0 = a0 + a2
 95786: 7b 75                    u64 [a0] = s0
 95788: 95 88 01                 a1 = a1 + 0x1
 95791: 7b 18 28                 u64 [sp + 0x28] = a1
 95794: 33 0b 70 02 03           a4 = 0x30270
 95799: 3a 07 70 02 03           a0 = u64 [0x30270]
 95804: c8 53 03                 t1 = t1 + s0
 95807: 97 78 0d                 a1 = a0 << 0xd
 95810: d3 87 07                 a0 = a0 ^ a1
 95813: 98 78 07                 a1 = a0 >> 0x7
 95816: d3 87 07                 a0 = a0 ^ a1
 95819: 97 78 11                 a1 = a0 << 0x11
 95822: d3 87 07                 a0 = a0 ^ a1
 95825: ca 67 09                 a2 = a0 * s1
 95828: 3e 07 70 02 03           u64 [0x30270] = a0
 95833: 14 0c cd cc cc cc cc cc cc cc a5 = 0xcccccccccccccccd
 95843: d6 c9 07                 a0 = a2 mulhu a5
 95846: 98 77 03                 a0 = a0 >> 0x3
 95849: 33 02 0a                 t0 = 0xa
 95852: 82 18 28                 a1 = u64 [sp + 0x28]
 95855: 82 1a 18                 a3 = u64 [sp + 0x18]
 95858: ca 27 07                 a0 = a0 * t0
 95861: c9 79 09                 a2 = a2 - a0
 95864: c8 39 09                 a2 = a2 + t1
 95867: 95 95 01                 s0 = a2 + 0x1
 95870: ab a8 23                 jump @7520 if a1 != a3
      :                          @7518
 95873: 95 17 18                 a0 = sp + 0x18
 95876: 7b 13 08                 u64 [sp + 0x8] = t1
 95879: 7b 1c                    u64 [sp] = a5
 95881: 50 20 5e 04 86 dc fe     ra = 1118, jump @1581
      :                          @7519 [@dyn 559]
 95888: 82 1c                    a5 = u64 [sp]
 95890: 82 13 08                 t1 = u64 [sp + 0x8]
 95893: 33 02 0a                 t0 = 0xa
 95896: 33 0b 70 02 03           a4 = 0x30270
 95901: 82 18 28                 a1 = u64 [sp + 0x28]
 95904: 01                       fallthrough
      :                          @7520
 95905: 82 17 20                 a0 = u64 [sp + 0x20]
 95908: 97 89 03                 a2 = a1 << 0x3
 95911: c8 97 07                 a0 = a0 + a2
 95914: 7b 75                    u64 [a0] = s0
 95916: 95 88 01                 a1 = a1 + 0x1
 95919: 7b 18 28                 u64 [sp + 0x28] = a1
 95922: 3a 07 70 02 03           a0 = u64 [0x30270]
 95927: c8 53 03                 t1 = t1 + s0
 95930: 97 78 0d                 a1 = a0 << 0xd
 95933: d3 87 07                 a0 = a0 ^ a1
 95936: 98 78 07                 a1 = a0 >> 0x7
 95939: d3 87 07                 a0 = a0 ^ a1
 95942: 97 78 11                 a1 = a0 << 0x11
 95945: d3 87 07                 a0 = a0 ^ a1
 95948: ca 67 09                 a2 = a0 * s1
 95951: 3e 07 70 02 03           u64 [0x30270] = a0
 95956: d6 c9 07                 a0 = a2 mulhu a5
 95959: 98 77 03                 a0 = a0 >> 0x3
 95962: 82 18 28                 a1 = u64 [sp + 0x28]
 95965: 82 1a 18                 a3 = u64 [sp + 0x18]
 95968: 96 77 0a                 a0 = a0 * 0xa
 95971: c9 79 09                 a2 = a2 - a0
 95974: c8 39 09                 a2 = a2 + t1
 95977: 95 95 01                 s0 = a2 + 0x1
 95980: ab a8 17                 jump @7523 if a1 != a3
      :                          @7521
 95983: 95 17 18                 a0 = sp + 0x18
 95986: 7b 13 08                 u64 [sp + 0x8] = t1
 95989: 50 20 60 04 1a dc fe     ra = 1120, jump @1581
      :                          @7522 [@dyn 560]
 95996: 82 13 08                 t1 = u64 [sp + 0x8]
 95999: 82 18 28                 a1 = u64 [sp + 0x28]
 96002: 01                       fallthrough
      :                          @7523
 96003: 82 17 20                 a0 = u64 [sp + 0x20]
 96006: 97 89 03                 a2 = a1 << 0x3
 96009: c8 97 07                 a0 = a0 + a2
 96012: 7b 75                    u64 [a0] = s0
 96014: 95 88 01                 a1 = a1 + 0x1
 96017: 7b 18 28                 u64 [sp + 0x28] = a1
 96020: 33 0b 70 02 03           a4 = 0x30270
 96025: 3a 07 70 02 03           a0 = u64 [0x30270]
 96030: c8 53 03                 t1 = t1 + s0
 96033: 97 78 0d                 a1 = a0 << 0xd
 96036: d3 87 07                 a0 = a0 ^ a1
 96039: 98 78 07                 a1 = a0 >> 0x7
 96042: d3 87 07                 a0 = a0 ^ a1
 96045: 97 78 11                 a1 = a0 << 0x11
 96048: d3 87 07                 a0 = a0 ^ a1
 96051: ca 67 09                 a2 = a0 * s1
 96054: 3e 07 70 02 03           u64 [0x30270] = a0
 96059: 14 0c cd cc cc cc cc cc cc cc a5 = 0xcccccccccccccccd
 96069: d6 c9 07                 a0 = a2 mulhu a5
 96072: 98 77 03                 a0 = a0 >> 0x3
 96075: 33 02 0a                 t0 = 0xa
 96078: 82 18 28                 a1 = u64 [sp + 0x28]
 96081: 82 1a 18                 a3 = u64 [sp + 0x18]
 96084: ca 27 07                 a0 = a0 * t0
 96087: c9 79 09                 a2 = a2 - a0
 96090: c8 39 09                 a2 = a2 + t1
 96093: 95 95 01                 s0 = a2 + 0x1
 96096: ab a8 23                 jump @7526 if a1 != a3
      :                          @7524
 96099: 95 17 18                 a0 = sp + 0x18
 96102: 7b 13 08                 u64 [sp + 0x8] = t1
 96105: 7b 1c                    u64 [sp] = a5
 96107: 50 20 62 04 a4 db fe     ra = 1122, jump @1581
      :                          @7525 [@dyn 561]
 96114: 82 1c                    a5 = u64 [sp]
 96116: 82 13 08                 t1 = u64 [sp + 0x8]
 96119: 33 02 0a                 t0 = 0xa
 96122: 33 0b 70 02 03           a4 = 0x30270
 96127: 82 18 28                 a1 = u64 [sp + 0x28]
 96130: 01                       fallthrough
      :                          @7526
 96131: 82 17 20                 a0 = u64 [sp + 0x20]
 96134: 97 89 03                 a2 = a1 << 0x3
 96137: c8 97 07                 a0 = a0 + a2
 96140: 7b 75                    u64 [a0] = s0
 96142: 95 88 01                 a1 = a1 + 0x1
 96145: 7b 18 28                 u64 [sp + 0x28] = a1
 96148: 3a 07 70 02 03           a0 = u64 [0x30270]
 96153: c8 53 03                 t1 = t1 + s0
 96156: 97 78 0d                 a1 = a0 << 0xd
 96159: d3 87 07                 a0 = a0 ^ a1
 96162: 98 78 07                 a1 = a0 >> 0x7
 96165: d3 87 07                 a0 = a0 ^ a1
 96168: 97 78 11                 a1 = a0 << 0x11
 96171: d3 87 07                 a0 = a0 ^ a1
 96174: ca 67 09                 a2 = a0 * s1
 96177: 3e 07 70 02 03           u64 [0x30270] = a0
 96182: d6 c9 07                 a0 = a2 mulhu a5
 96185: 98 77 03                 a0 = a0 >> 0x3
 96188: 82 18 28                 a1 = u64 [sp + 0x28]
 96191: 82 1a 18                 a3 = u64 [sp + 0x18]
 96194: 96 77 0a                 a0 = a0 * 0xa
 96197: c9 79 09                 a2 = a2 - a0
 96200: c8 39 09                 a2 = a2 + t1
 96203: 95 95 01                 s0 = a2 + 0x1
 96206: ab a8 17                 jump @7529 if a1 != a3
      :                          @7527
 96209: 95 17 18                 a0 = sp + 0x18
 96212: 7b 13 08                 u64 [sp + 0x8] = t1
 96215: 50 20 64 04 38 db fe     ra = 1124, jump @1581
      :                          @7528 [@dyn 562]
 96222: 82 13 08                 t1 = u64 [sp + 0x8]
 96225: 82 18 28                 a1 = u64 [sp + 0x28]
 96228: 01                       fallthrough
      :                          @7529
 96229: 82 17 20                 a0 = u64 [sp + 0x20]
 96232: 97 89 03                 a2 = a1 << 0x3
 96235: c8 97 07                 a0 = a0 + a2
 96238: 7b 75                    u64 [a0] = s0
 96240: 95 88 01                 a1 = a1 + 0x1
 96243: 7b 18 28                 u64 [sp + 0x28] = a1
 96246: 33 07 70 02 03           a0 = 0x30270
 96251: 3a 08 70 02 03           a1 = u64 [0x30270]
 96256: c8 35 05                 s0 = s0 + t1
 96259: 97 89 0d                 a2 = a1 << 0xd
 96262: d3 98 08                 a1 = a1 ^ a2
 96265: 98 89 07                 a2 = a1 >> 0x7
 96268: d3 98 08                 a1 = a1 ^ a2
 96271: 97 89 11                 a2 = a1 << 0x11
 96274: d3 98 08                 a1 = a1 ^ a2
 96277: ca 68 09                 a2 = a1 * s1
 96280: 3e 08 70 02 03           u64 [0x30270] = a1
 96285: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
 96295: d6 89 08                 a1 = a2 mulhu a1
 96298: 98 88 03                 a1 = a1 >> 0x3
 96301: 96 88 0a                 a1 = a1 * 0xa
 96304: c9 89 09                 a2 = a2 - a1
 96307: c8 95 08                 a1 = s0 + a2
 96310: 95 88 01                 a1 = a1 + 0x1
 96313: 33 09 01                 a2 = 0x1
 96316: 01                       fallthrough
      :                          @7530
 96317: 3a 0a 70 02 03           a3 = u64 [0x30270]
 96322: 97 ab 0d                 a4 = a3 << 0xd
 96325: d3 ba 0a                 a3 = a3 ^ a4
 96328: 98 ab 07                 a4 = a3 >> 0x7
 96331: d3 ba 0a                 a3 = a3 ^ a4
 96334: 97 ab 11                 a4 = a3 << 0x11
 96337: d3 ba 0a                 a3 = a3 ^ a4
 96340: ca 6a 0b                 a4 = a3 * s1
 96343: cd 8b 05                 s0 = a4 %u a1
 96346: 3e 0a 70 02 03           u64 [0x30270] = a3
 96351: 64 5a                    a3 = s0
 96353: 64 8c                    a5 = a1
 96355: 01                       fallthrough
      :                          @7531
 96356: 64 cb                    a4 = a5
 96358: cd ca 0c                 a5 = a3 %u a5
 96361: 64 ba                    a3 = a4
 96363: 52 0c f9                 jump @7531 if a5 != 0
      :                          @7532
 96366: ab 9b cf                 jump @7530 if a4 != a2
      :                          @7533
 96369: 82 1a 28                 a3 = u64 [sp + 0x28]
 96372: 82 12 20                 t0 = u64 [sp + 0x20]
 96375: 51 0a 6f                 jump @7542 if a3 == 0
      :                          @7534
 96378: 7b 12 08                 u64 [sp + 0x8] = t0
 96381: 7b 1a                    u64 [sp] = a3
 96383: 97 a7 03                 a0 = a3 << 0x3
 96386: 33 00 b0 02 03           ra = 0x302b0
 96391: 33 04 00 00 10           t2 = 0x100000
 96396: c8 40 0c                 a5 = ra + t2
 96399: 01                       fallthrough
      :                          @7535
 96400: 82 c9                    a2 = u64 [a5]
 96402: c8 79 0b                 a4 = a2 + a0
 96405: ac 9b a6 00              jump @7551 if a4 <u a2
      :                          @7536
 96409: 95 ba 08                 a3 = a4 + 0x8
 96412: d8 ba 06                 s1 = a3 <u a4
 96415: d8 a4 0a                 a3 = t2 <u a3
 96418: d4 6a 0a                 a3 = a3 | s1
 96421: 52 0a 96 00              jump @7551 if a3 != 0
      :                          @7537
 96425: c9 b0 0a                 a3 = ra - a4
 96428: c8 4a 0a                 a3 = a3 + t2
 96431: 84 a6 07                 s1 = a3 & 0x7
 96434: c8 6b 0b                 a4 = a4 + s1
 96437: 01                       fallthrough
      :                          @7538
 96438: 82 c2                    t0 = u64 [a5]
 96440: ab 92 d8                 jump @7535 if t0 != a2
      :                          @7539
 96443: 7b cb                    u64 [a5] = a4
 96445: 33 03                    t1 = 0
 96447: c9 6a 07                 a0 = a3 - s1
 96450: 82 12 08                 t0 = u64 [sp + 0x8]
 96453: 64 2c                    a5 = t0
 96455: 64 7b                    a4 = a0
 96457: 82 1a                    a3 = u64 [sp]
 96459: 64 a6                    s1 = a3
 96461: 01                       fallthrough
      :                          @7540
 96462: 82 c9                    a2 = u64 [a5]
 96464: ca 59 09                 a2 = a2 * s0
 96467: cd 89 09                 a2 = a2 %u a1
 96470: 7b b9                    u64 [a4] = a2
 96472: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 96475: 95 bb 08                 a4 = a4 + 0x8
 96478: 95 cc 08                 a5 = a5 + 0x8
 96481: 52 06 ed                 jump @7540 if s1 != 0
      :                          @7541
 96484: 28 06                    jump @7543
      :                          @7542
 96486: 33 07 08                 a0 = 0x8
 96489: 01                       fallthrough
      :                          @7543
 96490: 82 19 10                 a2 = u64 [sp + 0x10]
 96493: 7b 97 08                 u64 [a2 + 0x8] = a0
 96496: 82 17 18                 a0 = u64 [sp + 0x18]
 96499: 7b 9a                    u64 [a2] = a3
 96501: 7b 9a 10                 u64 [a2 + 0x10] = a3
 96504: 7b 98 18                 u64 [a2 + 0x18] = a1
 96507: 7b 95 20                 u64 [a2 + 0x20] = s0
 96510: 51 07 2f                 jump @7550 if a0 == 0
      :                          @7544
 96513: 33 08 00 00 02           a1 = 0x20000
 96518: ac 78 27                 jump @7550 if a1 <u a0
      :                          @7545
 96521: 97 77 03                 a0 = a0 << 0x3
 96524: 33 08 b0 02 03           a1 = 0x302b0
 96529: 95 88 00 00 10           a1 = a1 + 0x100000
 96534: 01                       fallthrough
      :                          @7546
 96535: 82 89                    a2 = u64 [a1]
 96537: c9 98 0a                 a3 = a1 - a2
 96540: ab 2a 11                 jump @7550 if a3 != t0
      :                          @7547
 96543: c9 79 0a                 a3 = a2 - a0
 96546: 01                       fallthrough
      :                          @7548
 96547: 82 8b                    a4 = u64 [a1]
 96549: ab 9b f2                 jump @7546 if a4 != a2
      :                          @7549
 96552: 7b 8a                    u64 [a1] = a3
 96554: 33 0c                    a5 = 0
 96556: 01                       fallthrough
      :                          @7550
 96557: 82 10 40                 ra = u64 [sp + 0x40]
 96560: 82 15 38                 s0 = u64 [sp + 0x38]
 96563: 82 16 30                 s1 = u64 [sp + 0x30]
 96566: 95 11 48                 sp = sp + 0x48
 96569: 32 00                    ret
      :                          @7551
 96571: 00                       trap
      :                          @7552 [@dyn 563]
 96572: 82 17 20                 a0 = u64 [sp + 0x20]
 96575: 52 17 01 1a 01           jump @7574 if a0 != 1
      :                          @7553
 96580: 51 06 14 01              jump @7573 if s1 == 0
      :                          @7554
 96584: 82 17 28                 a0 = u64 [sp + 0x28]
 96587: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 96597: d3 87 09                 a2 = a0 ^ a1
 96600: e1 69 09                 a2 = a2 | ~s1
 96603: 51 09 fc 00              jump @7572 if a2 == 0
      :                          @7555
 96607: ce 67 07                 a0 = a0 %s s1
 96610: c8 67 07                 a0 = a0 + s1
 96613: d3 78 08                 a1 = a1 ^ a0
 96616: e1 68 08                 a1 = a1 | ~s1
 96619: 51 08 ec 00              jump @7572 if a1 == 0
      :                          @7556
 96623: 49 11 20                 u64 [sp + 32] = 0
 96626: 49 11 28 01              u64 [sp + 40] = 0x1
 96630: 49 11 30                 u64 [sp + 48] = 0
 96633: 82 1a 18                 a3 = u64 [sp + 0x18]
 96636: 51 0a bc 00              jump @7571 if a3 == 0
      :                          @7557
 96640: 7b 15                    u64 [sp] = s0
 96642: 33 08                    a1 = 0
 96644: ce 67 07                 a0 = a0 %s s1
 96647: 82 19 10                 a2 = u64 [sp + 0x10]
 96650: ca 97 07                 a0 = a0 * a2
 96653: cd 67 0b                 a4 = a0 %u s1
 96656: 97 a5 03                 s0 = a3 << 0x3
 96659: 82 1c 08                 a5 = u64 [sp + 0x8]
 96662: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 96665: 33 07 01                 a0 = 0x1
 96668: 7b 1c 18                 u64 [sp + 0x18] = a5
 96671: 28 19                    jump @7559
      :                          @7558
 96673: c8 87 09                 a2 = a0 + a1
 96676: 33 0a 01                 a3 = 0x1
 96679: 78 9a                    u8 [a2] = a3
 96681: c8 a8 08                 a1 = a1 + a3
 96684: 7b 18 30                 u64 [sp + 0x30] = a1
 96687: c9 6b 0b                 a4 = a4 - s1
 96690: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 96693: 51 05 5d                 jump @7568 if s0 == 0
      :                          @7559
 96696: c8 5c 09                 a2 = a5 + s0
 96699: 82 96                    s1 = u64 [a2]
 96701: ae 6b 34                 jump @7565 if a4 >=u s1
      :                          @7560
 96704: 82 17 20                 a0 = u64 [sp + 0x20]
 96707: ab 78 18                 jump @7563 if a1 != a0
      :                          @7561
 96710: 95 17 20                 a0 = sp + 0x20
 96713: 64 b6                    s1 = a4
 96715: 50 20 68 04 c4 d9 fe     ra = 1128, jump @1593
      :                          @7562 [@dyn 564]
 96722: 82 1c 18                 a5 = u64 [sp + 0x18]
 96725: 64 6b                    a4 = s1
 96727: 82 18 30                 a1 = u64 [sp + 0x30]
 96730: 01                       fallthrough
      :                          @7563
 96731: 82 17 28                 a0 = u64 [sp + 0x28]
 96734: c8 87 09                 a2 = a0 + a1
 96737: 46 09                    u8 [a2 + 0] = 0
 96739: 95 88 01                 a1 = a1 + 0x1
 96742: 7b 18 30                 u64 [sp + 0x30] = a1
 96745: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 96748: 52 05 cc                 jump @7559 if s0 != 0
      :                          @7564
 96751: 28 23                    jump @7568
      :                          @7565
 96753: 82 19 20                 a2 = u64 [sp + 0x20]
 96756: ab 98 ad                 jump @7558 if a1 != a2
      :                          @7566
 96759: 95 17 20                 a0 = sp + 0x20
 96762: 7b 1b 10                 u64 [sp + 0x10] = a4
 96765: 50 20 6a 04 92 d9 fe     ra = 1130, jump @1593
      :                          @7567 [@dyn 565]
 96772: 82 1c 18                 a5 = u64 [sp + 0x18]
 96775: 82 1b 10                 a4 = u64 [sp + 0x10]
 96778: 82 18 30                 a1 = u64 [sp + 0x30]
 96781: 82 17 28                 a0 = u64 [sp + 0x28]
 96784: 28 91                    jump @7558
      :                          @7568
 96786: 98 87 01                 a0 = a1 >> 0x1
 96789: 82 15                    s0 = u64 [sp]
 96791: 51 07 21                 jump @7571 if a0 == 0
      :                          @7569
 96794: 82 19 28                 a2 = u64 [sp + 0x28]
 96797: c8 98 08                 a1 = a1 + a2
 96800: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 96803: 01                       fallthrough
      :                          @7570
 96804: 7c 8a                    a3 = u8 [a1]
 96806: 7c 9b                    a4 = u8 [a2]
 96808: 78 9a                    u8 [a2] = a3
 96810: 78 8b                    u8 [a1] = a4
 96812: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 96815: 95 99 01                 a2 = a2 + 0x1
 96818: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 96821: 52 07 ef                 jump @7570 if a0 != 0
      :                          @7571
 96824: 82 17 30                 a0 = u64 [sp + 0x30]
 96827: 82 18 28                 a1 = u64 [sp + 0x28]
 96830: 82 19 20                 a2 = u64 [sp + 0x20]
 96833: 7b 57 10                 u64 [s0 + 0x10] = a0
 96836: 7b 58 08                 u64 [s0 + 0x8] = a1
 96839: 7b 59                    u64 [s0] = a2
 96841: 82 10 48                 ra = u64 [sp + 0x48]
 96844: 82 15 40                 s0 = u64 [sp + 0x40]
 96847: 82 16 38                 s1 = u64 [sp + 0x38]
 96850: 95 11 50                 sp = sp + 0x50
 96853: 32 00                    ret
      :                          @7572
 96855: 00                       trap
      :                          @7573
 96856: 00                       trap
      :                          @7574
 96857: 00                       trap
      :                          @7575
 96858: 95 11 40 ff              sp = sp + 0xffffffffffffff40
 96862: 7b 10 b8 00              u64 [sp + 0xb8] = ra
 96866: 7b 15 b0 00              u64 [sp + 0xb0] = s0
 96870: 7b 16 a8 00              u64 [sp + 0xa8] = s1
 96874: 33 0a 03                 a3 = 0x3
 96877: ae a9 0e                 jump @7577 if a2 >=u a3
      :                          @7576
 96880: 97 97 03                 a0 = a2 << 0x3
 96883: c8 87 07                 a0 = a0 + a1
 96886: 82 77                    a0 = u64 [a0]
 96888: 28 04 04                 jump @7674
      :                          @7577
 96891: 33 03 b0 02 03           t1 = 0x302b0
 96896: 33 02 00 00 10           t0 = 0x100000
 96901: c8 23 04                 t2 = t1 + t0
 96904: 01                       fallthrough
      :                          @7578
 96905: 82 4a                    a3 = u64 [t2]
 96907: 95 ab 18                 a4 = a3 + 0x18
 96910: ac ab 08 04              jump @7683 if a4 <u a3
      :                          @7579
 96914: 95 bc 08                 a5 = a4 + 0x8
 96917: d8 bc 06                 s1 = a5 <u a4
 96920: d8 c2 0c                 a5 = t0 <u a5
 96923: d4 6c 0c                 a5 = a5 | s1
 96926: 52 0c f8 03              jump @7683 if a5 != 0
      :                          @7580
 96930: c9 b3 05                 s0 = t1 - a4
 96933: c8 25 00                 ra = s0 + t0
 96936: 84 0c 07                 a5 = ra & 0x7
 96939: c8 cb 0b                 a4 = a4 + a5
 96942: 01                       fallthrough
      :                          @7581
 96943: 82 46                    s1 = u64 [t2]
 96945: ab a6 d8                 jump @7578 if s1 != a3
      :                          @7582
 96948: 7b 4b                    u64 [t2] = a4
 96950: 64 76                    s1 = a0
 96952: 7b 19 20                 u64 [sp + 0x20] = a2
 96955: 7b 18                    u64 [sp] = a1
 96957: c9 c0 05                 s0 = ra - a5
 96960: 33 09 18                 a2 = 0x18
 96963: 64 57                    a0 = s0
 96965: 33 08                    a1 = 0
 96967: 50 20 6c 04 46 91 01     ra = 1132, jump @13689
      :                          @7583 [@dyn 566]
 96974: 49 21 90 00 03           u64 [sp + 144] = 0x3
 96979: 7b 15 98 00              u64 [sp + 0x98] = s0
 96983: 49 21 a0 00 03           u64 [sp + 160] = 0x3
 96988: 95 17 30                 a0 = sp + 0x30
 96991: 95 18 90 00              a1 = sp + 0x90
 96995: 33 09 03                 a2 = 0x3
 96998: 50 20 6e 04 36 e3 fe     ra = 1134, jump @1783
      :                          @7584 [@dyn 567]
 97005: 82 1b 40                 a4 = u64 [sp + 0x40]
 97008: 33 07 01                 a0 = 0x1
 97011: e4 7b 09                 a2 = maxu(a4, a0)
 97014: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 97017: 51 09 9b 03              jump @7681 if a2 == 0
      :                          @7585
 97021: 82 1a 38                 a3 = u64 [sp + 0x38]
 97024: 82 a8 28                 a1 = u64 [a3 + 0x28]
 97027: 51 08 8d 03              jump @7677 if a1 == 0
      :                          @7586
 97031: 82 a8 20                 a1 = u64 [a3 + 0x20]
 97034: 49 08 01                 u64 [a1 + 0] = 0x1
 97037: 51 19 01 86 03           jump @7680 if a2 == 1
      :                          @7587
 97042: 82 a8 40                 a1 = u64 [a3 + 0x40]
 97045: 53 18 02 7c 03           jump @7678 if a1 <u 2
      :                          @7588
 97050: 82 a7 38                 a0 = u64 [a3 + 0x38]
 97053: 49 17 08 01              u64 [a0 + 8] = 0x1
 97057: 51 0b 71 03              jump @7679 if a4 == 0
      :                          @7589
 97061: 82 a8 10                 a1 = u64 [a3 + 0x10]
 97064: 51 08 68 03              jump @7677 if a1 == 0
      :                          @7590
 97068: 82 67                    a0 = u64 [s1]
 97070: 82 a8 08                 a1 = u64 [a3 + 0x8]
 97073: 7b 87                    u64 [a1] = a0
 97075: 82 a8 10                 a1 = u64 [a3 + 0x10]
 97078: 53 18 02 5f 03           jump @7682 if a1 <u 2
      :                          @7591
 97083: 82 68 08                 a1 = u64 [s1 + 0x8]
 97086: 82 a9 08                 a2 = u64 [a3 + 0x8]
 97089: 7b 98 08                 u64 [a2 + 0x8] = a1
 97092: 82 a8 10                 a1 = u64 [a3 + 0x10]
 97095: 53 18 03 4a 03           jump @7678 if a1 <u 3
      :                          @7592
 97100: 82 68 10                 a1 = u64 [s1 + 0x10]
 97103: 7b 1a 28                 u64 [sp + 0x28] = a3
 97106: 82 a9 08                 a2 = u64 [a3 + 0x8]
 97109: 98 b7 3c                 a0 = a4 >> 0x3c
 97112: 7b 98 10                 u64 [a2 + 0x10] = a1
 97115: 52 07 3d 03              jump @7685 if a0 != 0
      :                          @7593
 97119: 82 18 30                 a1 = u64 [sp + 0x30]
 97122: 7b 18 10                 u64 [sp + 0x10] = a1
 97125: 82 18 20                 a1 = u64 [sp + 0x20]
 97128: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 97131: 7b 18 18                 u64 [sp + 0x18] = a1
 97134: 88 72 01                 t0 = a0 <u 0x1
 97137: 7b 1b 20                 u64 [sp + 0x20] = a4
 97140: 97 b9 03                 a2 = a4 << 0x3
 97143: 97 22 03                 t0 = t0 << 0x3
 97146: 33 04 b0 02 03           t2 = 0x302b0
 97151: 33 03 00 00 10           t1 = 0x100000
 97156: c8 34 00                 ra = t2 + t1
 97159: 01                       fallthrough
      :                          @7594
 97160: 82 05                    s0 = u64 [ra]
 97162: c8 95 0c                 a5 = s0 + a2
 97165: ac 5c 0a 03              jump @7684 if a5 <u s0
      :                          @7595
 97169: c8 2c 07                 a0 = a5 + t0
 97172: d8 c7 0a                 a3 = a0 <u a5
 97175: d8 73 07                 a0 = t1 <u a0
 97178: d4 a7 07                 a0 = a0 | a3
 97181: 52 07 fa 02              jump @7684 if a0 != 0
      :                          @7596
 97185: c9 c4 07                 a0 = t2 - a5
 97188: c8 37 07                 a0 = a0 + t1
 97191: 84 7a 07                 a3 = a0 & 0x7
 97194: c8 ac 0c                 a5 = a5 + a3
 97197: 01                       fallthrough
      :                          @7597
 97198: 82 08                    a1 = u64 [ra]
 97200: ab 58 d8                 jump @7594 if a1 != s0
      :                          @7598
 97203: 7b 0c                    u64 [ra] = a5
 97205: 33 0b                    a4 = 0
 97207: c9 a7 06                 s1 = a0 - a3
 97210: 64 67                    a0 = s1
 97212: 33 08                    a1 = 0
 97214: 50 20 70 04 4f 90 01     ra = 1136, jump @13689
      :                          @7599 [@dyn 568]
 97221: 82 15 20                 s0 = u64 [sp + 0x20]
 97224: 7b 15 90 00              u64 [sp + 0x90] = s0
 97228: 7b 16 98 00              u64 [sp + 0x98] = s1
 97232: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 97236: 95 17 48                 a0 = sp + 0x48
 97239: 95 18 90 00              a1 = sp + 0x90
 97243: 64 59                    a2 = s0
 97245: 50 20 72 04 3f e2 fe     ra = 1138, jump @1783
      :                          @7600 [@dyn 569]
 97252: 64 59                    a2 = s0
 97254: 82 1b 50                 a4 = u64 [sp + 0x50]
 97257: 82 17 58                 a0 = u64 [sp + 0x58]
 97260: 33 0a                    a3 = 0
 97262: 33 05                    s0 = 0
 97264: 95 bb 10                 a4 = a4 + 0x10
 97267: 33 0c 01                 a5 = 0x1
 97270: 82 16 28                 s1 = u64 [sp + 0x28]
 97273: 01                       fallthrough
      :                          @7601
 97274: aa 57 94 02              jump @7675 if a0 == s0
      :                          @7602
 97278: 82 b8                    a1 = u64 [a4]
 97280: ae 85 8f 02              jump @7676 if s0 >=u a1
      :                          @7603
 97284: 82 b8 f8                 a1 = u64 [a4 + 0xfffffffffffffff8]
 97287: 95 55 01                 s0 = s0 + 0x1
 97290: c8 a8 08                 a1 = a1 + a3
 97293: 7b 8c                    u64 [a1] = a5
 97295: 95 bb 18                 a4 = a4 + 0x18
 97298: 95 aa 08                 a3 = a3 + 0x8
 97301: ab 59 e5                 jump @7601 if a2 != s0
      :                          @7604
 97304: 49 11 08 aa aa 00        u64 [sp + 8] = 0xaaaa
 97310: 33 05 b0 02 03           s0 = 0x302b0
 97315: 95 55 00 00 10           s0 = s0 + 0x100000
 97320: 82 17 18                 a0 = u64 [sp + 0x18]
 97323: 28 18                    jump @7606
      :                          @7605
 97325: 82 17 60                 a0 = u64 [sp + 0x60]
 97328: 7b 17 10                 u64 [sp + 0x10] = a0
 97331: 82 16 68                 s1 = u64 [sp + 0x68]
 97334: 82 19 70                 a2 = u64 [sp + 0x70]
 97337: 82 17 18                 a0 = u64 [sp + 0x18]
 97340: 98 77 01                 a0 = a0 >> 0x1
 97343: 51 07 f2 00              jump @7634 if a0 == 0
      :                          @7606
 97347: 7b 17 18                 u64 [sp + 0x18] = a0
 97350: 84 77 01                 a0 = a0 & 0x1
 97353: 7b 16 28                 u64 [sp + 0x28] = s1
 97356: 7b 19 20                 u64 [sp + 0x20] = a2
 97359: 51 07 3b                 jump @7610 if a0 == 0
      :                          @7607
 97362: 95 17 90 00              a0 = sp + 0x90
 97366: 64 68                    a1 = s1
 97368: 50 20 74 04 22 f5 fe     ra = 1140, jump @2112
      :                          @7608 [@dyn 570]
 97375: 95 17 78                 a0 = sp + 0x78
 97378: 95 18 48                 a1 = sp + 0x48
 97381: 95 19 90 00              a2 = sp + 0x90
 97385: 50 20 76 04 30 02        ra = 1142, jump @7686
      :                          @7609 [@dyn 571]
 97391: 82 19 20                 a2 = u64 [sp + 0x20]
 97394: 82 16 28                 s1 = u64 [sp + 0x28]
 97397: 82 17 78                 a0 = u64 [sp + 0x78]
 97400: 82 18 80 00              a1 = u64 [sp + 0x80]
 97404: 82 1a 88 00              a3 = u64 [sp + 0x88]
 97408: 7b 17 48                 u64 [sp + 0x48] = a0
 97411: 7b 18 50                 u64 [sp + 0x50] = a1
 97414: 7b 1a 58                 u64 [sp + 0x58] = a3
 97417: 01                       fallthrough
      :                          @7610
 97418: 95 17 78                 a0 = sp + 0x78
 97421: 64 68                    a1 = s1
 97423: 50 20 78 04 eb f4 fe     ra = 1144, jump @2112
      :                          @7611 [@dyn 572]
 97430: 95 17 90 00              a0 = sp + 0x90
 97434: 82 18 28                 a1 = u64 [sp + 0x28]
 97437: 82 19 20                 a2 = u64 [sp + 0x20]
 97440: 50 20 7a 04 da f4 fe     ra = 1146, jump @2112
      :                          @7612 [@dyn 573]
 97447: 95 17 60                 a0 = sp + 0x60
 97450: 95 18 78                 a1 = sp + 0x78
 97453: 95 19 90 00              a2 = sp + 0x90
 97457: 50 20 7c 04 e8 01        ra = 1148, jump @7686
      :                          @7613 [@dyn 574]
 97463: 82 13 20                 t1 = u64 [sp + 0x20]
 97466: 82 12 28                 t0 = u64 [sp + 0x28]
 97469: 33 04 18                 t2 = 0x18
 97472: 33 00 00 00 02           ra = 0x20000
 97477: 51 03 3d                 jump @7625 if t1 == 0
      :                          @7614
 97480: 33 07                    a0 = 0
 97482: 28 08                    jump @7616
      :                          @7615
 97484: 95 77 01                 a0 = a0 + 0x1
 97487: aa 37 33                 jump @7625 if a0 == t1
      :                          @7616
 97490: ca 47 08                 a1 = a0 * t2
 97493: c8 28 08                 a1 = a1 + t0
 97496: 82 89                    a2 = u64 [a1]
 97498: 51 09 f2                 jump @7615 if a2 == 0
      :                          @7617
 97501: ac 90 ef                 jump @7615 if ra <u a2
      :                          @7618
 97504: 82 88 08                 a1 = u64 [a1 + 0x8]
 97507: 97 99 03                 a2 = a2 << 0x3
 97510: 01                       fallthrough
      :                          @7619
 97511: 82 5a                    a3 = u64 [s0]
 97513: c9 a5 0b                 a4 = s0 - a3
 97516: ab 8b e0                 jump @7615 if a4 != a1
      :                          @7620
 97519: c9 9a 0b                 a4 = a3 - a2
 97522: 01                       fallthrough
      :                          @7621
 97523: 82 5c                    a5 = u64 [s0]
 97525: ab ac f2                 jump @7619 if a5 != a3
      :                          @7622
 97528: 7b 5b                    u64 [s0] = a4
 97530: 33 06                    s1 = 0
 97532: 01                       fallthrough
      :                          @7623
 97533: ab ac ea                 jump @7619 if a5 != a3
      :                          @7624
 97536: 28 cc                    jump @7615
      :                          @7625
 97538: 82 17 10                 a0 = u64 [sp + 0x10]
 97541: 51 07 28 ff              jump @7605 if a0 == 0
      :                          @7626
 97545: 82 18 08                 a1 = u64 [sp + 0x8]
 97548: ac 78 21 ff              jump @7605 if a1 <u a0
      :                          @7627
 97552: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
 97555: 01                       fallthrough
      :                          @7628
 97556: 82 58                    a1 = u64 [s0]
 97558: c9 85 09                 a2 = s0 - a1
 97561: ab 29 14 ff              jump @7605 if a2 != t0
      :                          @7629
 97565: c8 78 09                 a2 = a1 + a0
 97568: 01                       fallthrough
      :                          @7630
 97569: 82 5a                    a3 = u64 [s0]
 97571: ab 8a f1                 jump @7628 if a3 != a1
      :                          @7631
 97574: 7b 59                    u64 [s0] = a2
 97576: 33 0b                    a4 = 0
 97578: 01                       fallthrough
      :                          @7632
 97579: ab 8a e9                 jump @7628 if a3 != a1
      :                          @7633
 97582: 28 ff fe                 jump @7605
      :                          @7634
 97585: 82 17 48                 a0 = u64 [sp + 0x48]
 97588: 7b 17 20                 u64 [sp + 0x20] = a0
 97591: 82 13 50                 t1 = u64 [sp + 0x50]
 97594: 82 17 58                 a0 = u64 [sp + 0x58]
 97597: 7b 17 28                 u64 [sp + 0x28] = a0
 97600: 51 09 52                 jump @7646 if a2 == 0
      :                          @7635
 97603: 33 07                    a0 = 0
 97605: 33 0b b0 02 03           a4 = 0x302b0
 97610: 95 ba 00 00 10           a3 = a4 + 0x100000
 97615: 28 0c                    jump @7637
      :                          @7636
 97617: 95 77 01                 a0 = a0 + 0x1
 97620: 64 46                    s1 = t2
 97622: 64 29                    a2 = t0
 97624: aa 27 3a                 jump @7646 if a0 == t0
      :                          @7637
 97627: 64 92                    t0 = a2
 97629: 96 75 18                 s0 = a0 * 0x18
 97632: 64 64                    t2 = s1
 97634: c8 65 05                 s0 = s0 + s1
 97637: 82 5c                    a5 = u64 [s0]
 97639: 51 0c ea                 jump @7636 if a5 == 0
      :                          @7638
 97642: 56 3c 00 00 02 e7        jump @7636 if a5 >u 131072
      :                          @7639
 97648: 82 55 08                 s0 = u64 [s0 + 0x8]
 97651: 97 cc 03                 a5 = a5 << 0x3
 97654: 01                       fallthrough
      :                          @7640
 97655: 82 a9                    a2 = u64 [a3]
 97657: c9 9a 0b                 a4 = a3 - a2
 97660: ab 5b d5                 jump @7636 if a4 != s0
      :                          @7641
 97663: c9 c9 0b                 a4 = a2 - a5
 97666: 01                       fallthrough
      :                          @7642
 97667: 82 a8                    a1 = u64 [a3]
 97669: ab 98 f2                 jump @7640 if a1 != a2
      :                          @7643
 97672: 7b ab                    u64 [a3] = a4
 97674: 33 00                    ra = 0
 97676: 01                       fallthrough
      :                          @7644
 97677: ab 98 ea                 jump @7640 if a1 != a2
      :                          @7645
 97680: 28 c1                    jump @7636
      :                          @7646
 97682: 82 18 10                 a1 = u64 [sp + 0x10]
 97685: 51 08 2b                 jump @7653 if a1 == 0
      :                          @7647
 97688: 56 38 aa aa 00 28        jump @7653 if a1 >u 43690
      :                          @7648
 97694: 96 87 e8                 a0 = a1 * 0xffffffffffffffe8
 97697: 33 09 b0 02 03           a2 = 0x302b0
 97702: 95 99 00 00 10           a2 = a2 + 0x100000
 97707: 01                       fallthrough
      :                          @7649
 97708: 82 9b                    a4 = u64 [a2]
 97710: c9 b9 08                 a1 = a2 - a4
 97713: ab 68 0f                 jump @7653 if a1 != s1
      :                          @7650
 97716: c8 7b 08                 a1 = a4 + a0
 97719: 01                       fallthrough
      :                          @7651
 97720: 82 9a                    a3 = u64 [a2]
 97722: ab ba f2                 jump @7649 if a3 != a4
      :                          @7652
 97725: 7b 98                    u64 [a2] = a1
 97727: 01                       fallthrough
      :                          @7653
 97728: 82 16 28                 s1 = u64 [sp + 0x28]
 97731: 51 06 cf 00              jump @7679 if s1 == 0
      :                          @7654
 97735: 82 37 10                 a0 = u64 [t1 + 0x10]
 97738: 53 17 03 c4 00           jump @7675 if a0 <u 3
      :                          @7655
 97743: 82 37 08                 a0 = u64 [t1 + 0x8]
 97746: 33 0c                    a5 = 0
 97748: 82 15                    s0 = u64 [sp]
 97750: 82 58 10                 a1 = u64 [s0 + 0x10]
 97753: 82 79                    a2 = u64 [a0]
 97755: 82 7a 08                 a3 = u64 [a0 + 0x8]
 97758: 82 5b 08                 a4 = u64 [s0 + 0x8]
 97761: 82 77 10                 a0 = u64 [a0 + 0x10]
 97764: 82 55                    s0 = u64 [s0]
 97766: ca 98 08                 a1 = a1 * a2
 97769: ca ab 09                 a2 = a4 * a3
 97772: c8 98 08                 a1 = a1 + a2
 97775: 7b 18 18                 u64 [sp + 0x18] = a1
 97778: ca 75 07                 a0 = s0 * a0
 97781: 7b 17 10                 u64 [sp + 0x10] = a0
 97784: 33 02 18                 t0 = 0x18
 97787: 33 05 b0 02 03           s0 = 0x302b0
 97792: 95 55 00 00 10           s0 = s0 + 0x100000
 97797: 33 00 00 00 02           ra = 0x20000
 97802: 28 08                    jump @7657
      :                          @7656
 97804: 95 cc 01                 a5 = a5 + 0x1
 97807: aa 6c 33                 jump @7666 if a5 == s1
      :                          @7657
 97810: ca 2c 07                 a0 = a5 * t0
 97813: c8 37 07                 a0 = a0 + t1
 97816: 82 7b                    a4 = u64 [a0]
 97818: 51 0b f2                 jump @7656 if a4 == 0
      :                          @7658
 97821: ac b0 ef                 jump @7656 if ra <u a4
      :                          @7659
 97824: 82 77 08                 a0 = u64 [a0 + 0x8]
 97827: 97 bb 03                 a4 = a4 << 0x3
 97830: 01                       fallthrough
      :                          @7660
 97831: 82 59                    a2 = u64 [s0]
 97833: c9 95 0a                 a3 = s0 - a2
 97836: ab 7a e0                 jump @7656 if a3 != a0
      :                          @7661
 97839: c9 b9 0a                 a3 = a2 - a4
 97842: 01                       fallthrough
      :                          @7662
 97843: 82 58                    a1 = u64 [s0]
 97845: ab 98 f2                 jump @7660 if a1 != a2
      :                          @7663
 97848: 7b 5a                    u64 [s0] = a3
 97850: 33 04                    t2 = 0
 97852: 01                       fallthrough
      :                          @7664
 97853: ab 98 ea                 jump @7660 if a1 != a2
      :                          @7665
 97856: 28 cc                    jump @7656
      :                          @7666
 97858: 82 18 20                 a1 = u64 [sp + 0x20]
 97861: 51 08 2d                 jump @7673 if a1 == 0
      :                          @7667
 97864: 56 38 aa aa 00 2a        jump @7673 if a1 >u 43690
      :                          @7668
 97870: 96 89 e8                 a2 = a1 * 0xffffffffffffffe8
 97873: 33 07 b0 02 03           a0 = 0x302b0
 97878: 95 77 00 00 10           a0 = a0 + 0x100000
 97883: 01                       fallthrough
      :                          @7669
 97884: 82 7a                    a3 = u64 [a0]
 97886: c9 a7 08                 a1 = a0 - a3
 97889: ab 38 11                 jump @7673 if a1 != t1
      :                          @7670
 97892: c8 9a 08                 a1 = a3 + a2
 97895: 01                       fallthrough
      :                          @7671
 97896: 82 7b                    a4 = u64 [a0]
 97898: ab ab f2                 jump @7669 if a4 != a3
      :                          @7672
 97901: 7b 78                    u64 [a0] = a1
 97903: 33 0c                    a5 = 0
 97905: 01                       fallthrough
      :                          @7673
 97906: 82 17 18                 a0 = u64 [sp + 0x18]
 97909: 82 18 10                 a1 = u64 [sp + 0x10]
 97912: c8 87 07                 a0 = a0 + a1
 97915: 01                       fallthrough
      :                          @7674
 97916: 82 10 b8 00              ra = u64 [sp + 0xb8]
 97920: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 97924: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 97928: 95 11 c0 00              sp = sp + 0xc0
 97932: 32 00                    ret
      :                          @7675
 97934: 00                       trap
      :                          @7676
 97935: 00                       trap
      :                          @7677
 97936: 00                       trap
      :                          @7678
 97937: 00                       trap
      :                          @7679
 97938: 00                       trap
      :                          @7680
 97939: 00                       trap
      :                          @7681
 97940: 00                       trap
      :                          @7682
 97941: 00                       trap
      :                          @7683
 97942: 00                       trap
      :                          @7684
 97943: 00                       trap
      :                          @7685
 97944: 00                       trap
      :                          @7686
 97945: 95 11 50 ff              sp = sp + 0xffffffffffffff50
 97949: 7b 10 a8 00              u64 [sp + 0xa8] = ra
 97953: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 97957: 7b 16 98 00              u64 [sp + 0x98] = s1
 97961: 7b 18 30                 u64 [sp + 0x30] = a1
 97964: 82 86 10                 s1 = u64 [a1 + 0x10]
 97967: 64 7b                    a4 = a0
 97969: 7b 19 28                 u64 [sp + 0x28] = a2
 97972: 51 06 52 01              jump @7707 if s1 == 0
      :                          @7687
 97976: 98 67 3c                 a0 = s1 >> 0x3c
 97979: 52 07 b0 02              jump @7753 if a0 != 0
      :                          @7688
 97983: 7b 1b                    u64 [sp] = a4
 97985: 88 72 01                 t0 = a0 <u 0x1
 97988: 97 69 03                 a2 = s1 << 0x3
 97991: 97 22 03                 t0 = t0 << 0x3
 97994: 33 04 b0 02 03           t2 = 0x302b0
 97999: 33 03 00 00 10           t1 = 0x100000
 98004: c8 34 00                 ra = t2 + t1
 98007: 01                       fallthrough
      :                          @7689
 98008: 82 05                    s0 = u64 [ra]
 98010: c8 95 0c                 a5 = s0 + a2
 98013: ac 5c 8d 02              jump @7752 if a5 <u s0
      :                          @7690
 98017: c8 2c 07                 a0 = a5 + t0
 98020: d8 c7 0a                 a3 = a0 <u a5
 98023: d8 73 07                 a0 = t1 <u a0
 98026: d4 a7 07                 a0 = a0 | a3
 98029: 52 07 7d 02              jump @7752 if a0 != 0
      :                          @7691
 98033: c9 c4 07                 a0 = t2 - a5
 98036: c8 37 07                 a0 = a0 + t1
 98039: 84 7a 07                 a3 = a0 & 0x7
 98042: c8 ac 0c                 a5 = a5 + a3
 98045: 01                       fallthrough
      :                          @7692
 98046: 82 08                    a1 = u64 [ra]
 98048: ab 58 d8                 jump @7689 if a1 != s0
      :                          @7693
 98051: 7b 0c                    u64 [ra] = a5
 98053: 33 0b                    a4 = 0
 98055: c9 a7 05                 s0 = a0 - a3
 98058: 64 57                    a0 = s0
 98060: 33 08                    a1 = 0
 98062: 50 20 7e 04 ff 8c 01     ra = 1150, jump @13689
      :                          @7694 [@dyn 575]
 98069: 7b 16 80 00              u64 [sp + 0x80] = s1
 98073: 7b 15 88 00              u64 [sp + 0x88] = s0
 98077: 7b 16 90 00              u64 [sp + 0x90] = s1
 98081: 95 17 68                 a0 = sp + 0x68
 98084: 95 18 80 00              a1 = sp + 0x80
 98088: 64 69                    a2 = s1
 98090: 50 20 80 04 f2 de fe     ra = 1152, jump @1783
      :                          @7695 [@dyn 576]
 98097: 82 17 30                 a0 = u64 [sp + 0x30]
 98100: 82 7a 08                 a3 = u64 [a0 + 0x8]
 98103: 82 17 28                 a0 = u64 [sp + 0x28]
 98106: 82 70 10                 ra = u64 [a0 + 0x10]
 98109: 82 77 08                 a0 = u64 [a0 + 0x8]
 98112: 82 18 78                 a1 = u64 [sp + 0x78]
 98115: 82 1b 70                 a4 = u64 [sp + 0x70]
 98118: 33 09                    a2 = 0
 98120: 7b 17 38                 u64 [sp + 0x38] = a0
 98123: 95 77 10                 a0 = a0 + 0x10
 98126: 7b 17 40                 u64 [sp + 0x40] = a0
 98129: 7b 18 18                 u64 [sp + 0x18] = a1
 98132: 7b 1a 10                 u64 [sp + 0x10] = a3
 98135: 7b 1b 08                 u64 [sp + 0x8] = a4
 98138: 01                       fallthrough
      :                          @7696
 98139: 96 93 18                 t1 = a2 * 0x18
 98142: c8 3a 02                 t0 = a3 + t1
 98145: 95 27 10                 a0 = t0 + 0x10
 98148: 7b 17 60                 u64 [sp + 0x60] = a0
 98151: ae 89 ee 01              jump @7748 if a2 >=u a1
      :                          @7697
 98155: 33 07                    a0 = 0
 98157: 95 99 01                 a2 = a2 + 0x1
 98160: 7b 19 20                 u64 [sp + 0x20] = a2
 98163: 95 22 08                 t0 = t0 + 0x8
 98166: 7b 12 50                 u64 [sp + 0x50] = t0
 98169: c8 b3 03                 t1 = t1 + a4
 98172: 95 38 10                 a1 = t1 + 0x10
 98175: 7b 18 58                 u64 [sp + 0x58] = a1
 98178: 95 33 08                 t1 = t1 + 0x8
 98181: 33 0c 01                 a5 = 0x1
 98184: 01                       fallthrough
      :                          @7698
 98185: 33 09                    a2 = 0
 98187: 33 0b                    a4 = 0
 98189: 7b 1c 48                 u64 [sp + 0x48] = a5
 98192: 82 15 40                 s0 = u64 [sp + 0x40]
 98195: 01                       fallthrough
      :                          @7699
 98196: 82 18 60                 a1 = u64 [sp + 0x60]
 98199: 82 8c                    a5 = u64 [a1]
 98201: ae cb d4 01              jump @7755 if a4 >=u a5
      :                          @7700
 98205: aa b0 b7 01              jump @7747 if ra == a4
      :                          @7701
 98209: 82 5c                    a5 = u64 [s0]
 98211: ae c7 cd 01              jump @7758 if a0 >=u a5
      :                          @7702
 98215: 82 18 58                 a1 = u64 [sp + 0x58]
 98218: 82 8c                    a5 = u64 [a1]
 98220: ae c7 c4 01              jump @7758 if a0 >=u a5
      :                          @7703
 98224: 82 18 50                 a1 = u64 [sp + 0x50]
 98227: 82 8c                    a5 = u64 [a1]
 98229: c8 9c 0c                 a5 = a5 + a2
 98232: 82 54 f8                 t2 = u64 [s0 + 0xfffffffffffffff8]
 98235: 82 cc                    a5 = u64 [a5]
 98237: 64 62                    t0 = s1
 98239: 82 36                    s1 = u64 [t1]
 98241: 97 7a 03                 a3 = a0 << 0x3
 98244: c8 a4 04                 t2 = t2 + a3
 98247: 82 48                    a1 = u64 [t2]
 98249: c8 6a 0a                 a3 = a3 + s1
 98252: 82 a6                    s1 = u64 [a3]
 98254: ca c8 08                 a1 = a1 * a5
 98257: 95 bb 01                 a4 = a4 + 0x1
 98260: c8 68 08                 a1 = a1 + s1
 98263: 64 26                    s1 = t0
 98265: 7b a8                    u64 [a3] = a1
 98267: 95 55 18                 s0 = s0 + 0x18
 98270: 95 99 08                 a2 = a2 + 0x8
 98273: ab b2 b3                 jump @7699 if t0 != a4
      :                          @7704
 98276: 82 18 48                 a1 = u64 [sp + 0x48]
 98279: d8 68 0c                 a5 = a1 <u s1
 98282: c8 8c 0c                 a5 = a5 + a1
 98285: 64 87                    a0 = a1
 98287: ac 68 9a                 jump @7698 if a1 <u s1
      :                          @7705
 98290: 82 18 18                 a1 = u64 [sp + 0x18]
 98293: 82 19 20                 a2 = u64 [sp + 0x20]
 98296: 82 1a 10                 a3 = u64 [sp + 0x10]
 98299: 82 1b 08                 a4 = u64 [sp + 0x8]
 98302: ab 69 5d ff              jump @7696 if a2 != s1
      :                          @7706
 98306: 82 1b                    a4 = u64 [sp]
 98308: 28 18                    jump @7708
      :                          @7707
 98310: 64 62                    t0 = s1
 98312: 49 11 68                 u64 [sp + 104] = 0
 98315: 82 97 08                 a0 = u64 [a2 + 0x8]
 98318: 7b 17 38                 u64 [sp + 0x38] = a0
 98321: 82 90 10                 ra = u64 [a2 + 0x10]
 98324: 49 11 70 08              u64 [sp + 112] = 0x8
 98328: 49 11 78                 u64 [sp + 120] = 0
 98331: 01                       fallthrough
      :                          @7708
 98332: 82 17 78                 a0 = u64 [sp + 0x78]
 98335: 82 18 70                 a1 = u64 [sp + 0x70]
 98338: 82 1a 68                 a3 = u64 [sp + 0x68]
 98341: 7b b7 10                 u64 [a4 + 0x10] = a0
 98344: 7b b8 08                 u64 [a4 + 0x8] = a1
 98347: 7b ba                    u64 [a4] = a3
 98349: 51 00 54                 jump @7720 if ra == 0
      :                          @7709
 98352: 64 03                    t1 = ra
 98354: 33 08                    a1 = 0
 98356: 33 04 18                 t2 = 0x18
 98359: 33 0a b0 02 03           a3 = 0x302b0
 98364: 95 aa 00 00 10           a3 = a3 + 0x100000
 98369: 33 09 00 00 02           a2 = 0x20000
 98374: 28 08                    jump @7711
      :                          @7710
 98376: 95 88 01                 a1 = a1 + 0x1
 98379: aa 38 36                 jump @7720 if a1 == t1
      :                          @7711
 98382: ca 48 0c                 a5 = a1 * t2
 98385: 82 17 38                 a0 = u64 [sp + 0x38]
 98388: c8 7c 0c                 a5 = a5 + a0
 98391: 82 c5                    s0 = u64 [a5]
 98393: 51 05 ef                 jump @7710 if s0 == 0
      :                          @7712
 98396: ac 59 ec                 jump @7710 if a2 <u s0
      :                          @7713
 98399: 82 cc 08                 a5 = u64 [a5 + 0x8]
 98402: 97 50 03                 ra = s0 << 0x3
 98405: 01                       fallthrough
      :                          @7714
 98406: 82 ab                    a4 = u64 [a3]
 98408: c9 ba 07                 a0 = a3 - a4
 98411: ab c7 dd                 jump @7710 if a0 != a5
      :                          @7715
 98414: c9 0b 07                 a0 = a4 - ra
 98417: 01                       fallthrough
      :                          @7716
 98418: 82 a6                    s1 = u64 [a3]
 98420: ab b6 f2                 jump @7714 if s1 != a4
      :                          @7717
 98423: 7b a7                    u64 [a3] = a0
 98425: 33 05                    s0 = 0
 98427: 01                       fallthrough
      :                          @7718
 98428: ab b6 ea                 jump @7714 if s1 != a4
      :                          @7719
 98431: 28 c9                    jump @7710
      :                          @7720
 98433: 82 17 28                 a0 = u64 [sp + 0x28]
 98436: 82 77                    a0 = u64 [a0]
 98438: 51 07 30                 jump @7727 if a0 == 0
      :                          @7721
 98441: 56 37 aa aa 00 2d        jump @7727 if a0 >u 43690
      :                          @7722
 98447: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
 98450: 33 08 b0 02 03           a1 = 0x302b0
 98455: 95 88 00 00 10           a1 = a1 + 0x100000
 98460: 01                       fallthrough
      :                          @7723
 98461: 82 89                    a2 = u64 [a1]
 98463: c9 98 0a                 a3 = a1 - a2
 98466: 82 1b 38                 a4 = u64 [sp + 0x38]
 98469: ab ba 11                 jump @7727 if a3 != a4
      :                          @7724
 98472: c8 79 0a                 a3 = a2 + a0
 98475: 01                       fallthrough
      :                          @7725
 98476: 82 8b                    a4 = u64 [a1]
 98478: ab 9b ef                 jump @7723 if a4 != a2
      :                          @7726
 98481: 7b 8a                    u64 [a1] = a3
 98483: 33 0c                    a5 = 0
 98485: 01                       fallthrough
      :                          @7727
 98486: 82 17 30                 a0 = u64 [sp + 0x30]
 98489: 82 74 08                 t2 = u64 [a0 + 0x8]
 98492: 51 02 52                 jump @7739 if t0 == 0
      :                          @7728
 98495: 33 08                    a1 = 0
 98497: 33 03 18                 t1 = 0x18
 98500: 33 0a b0 02 03           a3 = 0x302b0
 98505: 33 0b 00 00 10           a4 = 0x100000
 98510: c8 ba 06                 s1 = a3 + a4
 98513: 33 00 00 00 02           ra = 0x20000
 98518: 28 08                    jump @7730
      :                          @7729
 98520: 95 88 01                 a1 = a1 + 0x1
 98523: aa 28 33                 jump @7739 if a1 == t0
      :                          @7730
 98526: ca 38 0c                 a5 = a1 * t1
 98529: c8 4c 0c                 a5 = a5 + t2
 98532: 82 c5                    s0 = u64 [a5]
 98534: 51 05 f2                 jump @7729 if s0 == 0
      :                          @7731
 98537: ac 50 ef                 jump @7729 if ra <u s0
      :                          @7732
 98540: 82 cc 08                 a5 = u64 [a5 + 0x8]
 98543: 97 55 03                 s0 = s0 << 0x3
 98546: 01                       fallthrough
      :                          @7733
 98547: 82 6b                    a4 = u64 [s1]
 98549: c9 b6 0a                 a3 = s1 - a4
 98552: ab ca e0                 jump @7729 if a3 != a5
      :                          @7734
 98555: c9 5b 0a                 a3 = a4 - s0
 98558: 01                       fallthrough
      :                          @7735
 98559: 82 69                    a2 = u64 [s1]
 98561: ab b9 f2                 jump @7733 if a2 != a4
      :                          @7736
 98564: 7b 6a                    u64 [s1] = a3
 98566: 33 07                    a0 = 0
 98568: 01                       fallthrough
      :                          @7737
 98569: ab b9 ea                 jump @7733 if a2 != a4
      :                          @7738
 98572: 28 cc                    jump @7729
      :                          @7739
 98574: 82 17 30                 a0 = u64 [sp + 0x30]
 98577: 82 78                    a1 = u64 [a0]
 98579: 51 08 2f                 jump @7746 if a1 == 0
      :                          @7740
 98582: 33 07 aa aa 00           a0 = 0xaaaa
 98587: ac 87 27                 jump @7746 if a0 <u a1
      :                          @7741
 98590: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 98593: 33 09 b0 02 03           a2 = 0x302b0
 98598: 95 99 00 00 10           a2 = a2 + 0x100000
 98603: 01                       fallthrough
      :                          @7742
 98604: 82 9a                    a3 = u64 [a2]
 98606: c9 a9 07                 a0 = a2 - a3
 98609: ab 47 11                 jump @7746 if a0 != t2
      :                          @7743
 98612: c8 8a 07                 a0 = a3 + a1
 98615: 01                       fallthrough
      :                          @7744
 98616: 82 9b                    a4 = u64 [a2]
 98618: ab ab f2                 jump @7742 if a4 != a3
      :                          @7745
 98621: 7b 97                    u64 [a2] = a0
 98623: 33 0c                    a5 = 0
 98625: 01                       fallthrough
      :                          @7746
 98626: 82 10 a8 00              ra = u64 [sp + 0xa8]
 98630: 82 15 a0 00              s0 = u64 [sp + 0xa0]
 98634: 82 16 98 00              s1 = u64 [sp + 0x98]
 98638: 95 11 b0 00              sp = sp + 0xb0
 98642: 32 00                    ret
      :                          @7747
 98644: 00                       trap
      :                          @7748
 98645: 82 17 60                 a0 = u64 [sp + 0x60]
 98648: 82 77                    a0 = u64 [a0]
 98650: 51 07 12                 jump @7754 if a0 == 0
      :                          @7749
 98653: 51 00 11                 jump @7756 if ra == 0
      :                          @7750
 98656: 82 17 38                 a0 = u64 [sp + 0x38]
 98659: 82 77 10                 a0 = u64 [a0 + 0x10]
 98662: 51 07 09                 jump @7757 if a0 == 0
      :                          @7751
 98665: 00                       trap
      :                          @7752
 98666: 00                       trap
      :                          @7753
 98667: 00                       trap
      :                          @7754
 98668: 00                       trap
      :                          @7755
 98669: 00                       trap
      :                          @7756
 98670: 00                       trap
      :                          @7757
 98671: 00                       trap
      :                          @7758
 98672: 00                       trap
      :                          @7759 [@dyn 577]
 98673: 82 18 18                 a1 = u64 [sp + 0x18]
 98676: 82 17 20                 a0 = u64 [sp + 0x20]
 98679: 7b 17                    u64 [sp] = a0
 98681: 82 17 28                 a0 = u64 [sp + 0x28]
 98684: 7b 17 08                 u64 [sp + 0x8] = a0
 98687: 95 17 18                 a0 = sp + 0x18
 98690: 64 59                    a2 = s0
 98692: 50 20 84 04 a8 09 ff     ra = 1156, jump @2409
      :                          @7760 [@dyn 578]
 98699: 82 18 18                 a1 = u64 [sp + 0x18]
 98702: 51 08 37                 jump @7763 if a1 == 0
      :                          @7761
 98705: cc 86 07                 a0 = s1 /s a1
 98708: ca 87 08                 a1 = a0 * a1
 98711: ab 68 31                 jump @7764 if a1 != s1
      :                          @7762
 98714: 82 18 20                 a1 = u64 [sp + 0x20]
 98717: 82 19 28                 a2 = u64 [sp + 0x28]
 98720: 82 1a                    a3 = u64 [sp]
 98722: ca a8 0a                 a3 = a1 * a3
 98725: ca 7a 0a                 a3 = a3 * a0
 98728: 82 1b 08                 a4 = u64 [sp + 0x8]
 98731: ca b8 08                 a1 = a1 * a4
 98734: ca 78 08                 a1 = a1 * a0
 98737: ca 97 07                 a0 = a0 * a2
 98740: 82 19 10                 a2 = u64 [sp + 0x10]
 98743: 7b 9a 08                 u64 [a2 + 0x8] = a3
 98746: 7b 98 10                 u64 [a2 + 0x10] = a1
 98749: 7b 97 18                 u64 [a2 + 0x18] = a0
 98752: 33 07 01                 a0 = 0x1
 98755: 28 1c                    jump @7766
      :                          @7763
 98757: 51 06 0a                 jump @7765 if s1 == 0
      :                          @7764
 98760: 33 07                    a0 = 0
 98762: 82 19 10                 a2 = u64 [sp + 0x10]
 98765: 28 12                    jump @7766
      :                          @7765
 98767: 82 19 10                 a2 = u64 [sp + 0x10]
 98770: 49 19 18                 u64 [a2 + 24] = 0
 98773: 49 19 10                 u64 [a2 + 16] = 0
 98776: 49 19 08                 u64 [a2 + 8] = 0
 98779: 33 07 01                 a0 = 0x1
 98782: 01                       fallthrough
      :                          @7766
 98783: 7b 97                    u64 [a2] = a0
 98785: 82 10 40                 ra = u64 [sp + 0x40]
 98788: 82 15 38                 s0 = u64 [sp + 0x38]
 98791: 82 16 30                 s1 = u64 [sp + 0x30]
 98794: 95 11 48                 sp = sp + 0x48
 98797: 32 00                    ret
      :                          @7767
 98799: 82 9a                    a3 = u64 [a2]
 98801: 95 ab 08                 a4 = a3 + 0x8
 98804: ac ab f1 06              jump @7890 if a4 <u a3
      :                          @7768
 98808: 95 b8 08                 a1 = a4 + 0x8
 98811: d8 b8 0c                 a5 = a1 <u a4
 98814: d8 82 08                 a1 = t0 <u a1
 98817: d4 c8 08                 a1 = a1 | a5
 98820: 52 08 e1 06              jump @7890 if a1 != 0
      :                          @7769
 98824: c9 b3 08                 a1 = t1 - a4
 98827: c8 28 08                 a1 = a1 + t0
 98830: 84 8c 07                 a5 = a1 & 0x7
 98833: c8 cb 0b                 a4 = a4 + a5
 98836: 01                       fallthrough
      :                          @7770
 98837: 82 95                    s0 = u64 [a2]
 98839: ab a5 d8                 jump @7767 if s0 != a3
      :                          @7771
 98842: 7b 9b                    u64 [a2] = a4
 98844: 33 06                    s1 = 0
 98846: 7b 17                    u64 [sp] = a0
 98848: c9 c8 05                 s0 = a1 - a5
 98851: 49 05                    u64 [s0 + 0] = 0
 98853: 95 17 b8 00              a0 = sp + 0xb8
 98857: 33 08                    a1 = 0
 98859: 50 20 86 04 5d d2 fe     ra = 1158, jump @1617
      :                          @7772 [@dyn 579]
 98866: 82 12 c8 00              t0 = u64 [sp + 0xc8]
 98870: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 98874: 97 27 05                 a0 = t0 << 0x5
 98877: 7b 18 88 00              u64 [sp + 0x88] = a1
 98881: c8 87 07                 a0 = a0 + a1
 98884: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 98887: 49 17 08 01              u64 [a0 + 8] = 0x1
 98891: 7b 75 10                 u64 [a0 + 0x10] = s0
 98894: 49 17 18 01              u64 [a0 + 24] = 0x1
 98898: 95 2c 01                 a5 = t0 + 0x1
 98901: 7b 1c c8 00              u64 [sp + 0xc8] = a5
 98905: 82 19 98 00              a2 = u64 [sp + 0x98]
 98909: 82 97 10                 a0 = u64 [a2 + 0x10]
 98912: 7b 17 10                 u64 [sp + 0x10] = a0
 98915: 82 97 08                 a0 = u64 [a2 + 0x8]
 98918: 7b 17 08                 u64 [sp + 0x8] = a0
 98921: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 98931: 7b 18 18                 u64 [sp + 0x18] = a1
 98934: 33 02 b0 02 03           t0 = 0x302b0
 98939: 33 04 00 00 10           t2 = 0x100000
 98944: c8 42 03                 t1 = t0 + t2
 98947: 7b 12 38                 u64 [sp + 0x38] = t0
 98950: 7b 13 30                 u64 [sp + 0x30] = t1
 98953: 28 0a                    jump @7774
      :                          @7773
 98955: 82 1c c8 00              a5 = u64 [sp + 0xc8]
 98959: 51 0c 53 05              jump @7859 if a5 == 0
      :                          @7774
 98963: 95 c7 ff                 a0 = a5 + 0xffffffffffffffff
 98966: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 98970: 97 7a 05                 a3 = a0 << 0x5
 98973: 82 18 88 00              a1 = u64 [sp + 0x88]
 98977: c8 8a 0a                 a3 = a3 + a1
 98980: 82 a8 08                 a1 = u64 [a3 + 0x8]
 98983: 82 19 18                 a2 = u64 [sp + 0x18]
 98986: aa 98 88 05              jump @7867 if a1 == a2
      :                          @7775
 98990: 82 a9                    a2 = u64 [a3]
 98992: 51 07 85 00              jump @7780 if a0 == 0
      :                          @7776
 98996: 95 aa 10                 a3 = a3 + 0x10
 98999: 82 16 88 00              s1 = u64 [sp + 0x88]
 99003: 82 6b                    a4 = u64 [s1]
 99005: 7b 1b 48                 u64 [sp + 0x48] = a4
 99008: 82 6b 08                 a4 = u64 [s1 + 0x8]
 99011: 7b 1b 20                 u64 [sp + 0x20] = a4
 99014: 7b 69                    u64 [s1] = a2
 99016: 7b 68 08                 u64 [s1 + 0x8] = a1
 99019: 82 a8 08                 a1 = u64 [a3 + 0x8]
 99022: 82 69 18                 a2 = u64 [s1 + 0x18]
 99025: 7b 19 50                 u64 [sp + 0x50] = a2
 99028: 82 a9                    a2 = u64 [a3]
 99030: 7b 68 18                 u64 [s1 + 0x18] = a1
 99033: 82 68 18                 a1 = u64 [s1 + 0x18]
 99036: 82 6a 10                 a3 = u64 [s1 + 0x10]
 99039: 7b 1a 60                 u64 [sp + 0x60] = a3
 99042: 7b 69 10                 u64 [s1 + 0x10] = a2
 99045: 7b 18 e8 00              u64 [sp + 0xe8] = a1
 99049: 82 68 10                 a1 = u64 [s1 + 0x10]
 99052: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 99056: 82 68 08                 a1 = u64 [s1 + 0x8]
 99059: 7b 18 d8 00              u64 [sp + 0xd8] = a1
 99063: 82 68                    a1 = u64 [s1]
 99065: 7b 18 d0 00              u64 [sp + 0xd0] = a1
 99069: 64 c2                    t0 = a5
 99071: 55 1c 04 42              jump @7781 if a5 >=u 4
      :                          @7777
 99075: 33 0b                    a4 = 0
 99077: 33 07 01                 a0 = 0x1
 99080: 01                       fallthrough
      :                          @7778
 99081: 95 22 fe                 t0 = t0 + 0xfffffffffffffffe
 99084: ab 27 db 00              jump @7791 if a0 != t0
      :                          @7779
 99088: 97 78 05                 a1 = a0 << 0x5
 99091: c8 68 08                 a1 = a1 + s1
 99094: 82 89 18                 a2 = u64 [a1 + 0x18]
 99097: 97 bb 05                 a4 = a4 << 0x5
 99100: c8 6b 0b                 a4 = a4 + s1
 99103: 7b b9 18                 u64 [a4 + 0x18] = a2
 99106: 82 89 10                 a2 = u64 [a1 + 0x10]
 99109: 7b b9 10                 u64 [a4 + 0x10] = a2
 99112: 82 89 08                 a2 = u64 [a1 + 0x8]
 99115: 7b b9 08                 u64 [a4 + 0x8] = a2
 99118: 82 88                    a1 = u64 [a1]
 99120: 7b b8                    u64 [a4] = a1
 99122: 28 b8 00                 jump @7792
      :                          @7780
 99125: 82 ab 10                 a4 = u64 [a3 + 0x10]
 99128: 82 ac 18                 a5 = u64 [a3 + 0x18]
 99131: 7b 19 48                 u64 [sp + 0x48] = a2
 99134: 28 af 01                 jump @7806
      :                          @7781
 99137: 33 0a                    a3 = 0
 99139: 33 08 02                 a1 = 0x2
 99142: e4 87 03                 t1 = maxu(a0, a1)
 99145: 95 33 fe                 t1 = t1 + 0xfffffffffffffffe
 99148: 33 07 01                 a0 = 0x1
 99151: 28 36                    jump @7784
      :                          @7782
 99153: d8 cb 0b                 a4 = a4 <u a5
 99156: 01                       fallthrough
      :                          @7783
 99157: c8 7b 0b                 a4 = a4 + a0
 99160: 97 b7 05                 a0 = a4 << 0x5
 99163: c8 67 07                 a0 = a0 + s1
 99166: 82 78 18                 a1 = u64 [a0 + 0x18]
 99169: 97 aa 05                 a3 = a3 << 0x5
 99172: c8 6a 0a                 a3 = a3 + s1
 99175: 7b a8 18                 u64 [a3 + 0x18] = a1
 99178: 82 78 10                 a1 = u64 [a0 + 0x10]
 99181: 7b a8 10                 u64 [a3 + 0x10] = a1
 99184: 82 78 08                 a1 = u64 [a0 + 0x8]
 99187: 7b a8 08                 u64 [a3 + 0x8] = a1
 99190: 82 78                    a1 = u64 [a0]
 99192: 97 b7 01                 a0 = a4 << 0x1
 99195: 95 77 01                 a0 = a0 + 0x1
 99198: 7b a8                    u64 [a3] = a1
 99200: 64 ba                    a3 = a4
 99202: ac 73 87                 jump @7778 if t1 <u a0
      :                          @7784
 99205: 97 78 05                 a1 = a0 << 0x5
 99208: c8 68 08                 a1 = a1 + s1
 99211: 95 79 01                 a2 = a0 + 0x1
 99214: 97 99 05                 a2 = a2 << 0x5
 99217: c8 69 09                 a2 = a2 + s1
 99220: 82 8b                    a4 = u64 [a1]
 99222: 82 9c                    a5 = u64 [a2]
 99224: ab cb b9                 jump @7782 if a4 != a5
      :                          @7785
 99227: 82 84 18                 t2 = u64 [a1 + 0x18]
 99230: 82 90 18                 ra = u64 [a2 + 0x18]
 99233: 82 88 10                 a1 = u64 [a1 + 0x10]
 99236: 82 95 10                 s0 = u64 [a2 + 0x10]
 99239: e6 04 06                 s1 = minu(t2, ra)
 99242: 95 66 01                 s1 = s1 + 0x1
 99245: 01                       fallthrough
      :                          @7786
 99246: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 99249: 51 06 1d                 jump @7789 if s1 == 0
      :                          @7787
 99252: 82 89                    a2 = u64 [a1]
 99254: 82 5b                    a4 = u64 [s0]
 99256: 95 88 08                 a1 = a1 + 0x8
 99259: 95 55 08                 s0 = s0 + 0x8
 99262: d8 b9 0c                 a5 = a2 <u a4
 99265: d3 b9 09                 a2 = a2 ^ a4
 99268: 8e 99                    a2 = a2 >u 0
 99270: 94 c9 ff                 a2 = 0xffffffffffffffff if a5 != 0
 99273: 51 09 e5                 jump @7786 if a2 == 0
      :                          @7788
 99276: 28 0e                    jump @7790
      :                          @7789
 99278: d8 04 08                 a1 = t2 <u ra
 99281: d3 04 0b                 a4 = t2 ^ ra
 99284: 8e b9                    a2 = a4 >u 0
 99286: 94 89 ff                 a2 = 0xffffffffffffffff if a1 != 0
 99289: 01                       fallthrough
      :                          @7790
 99290: 95 99 01                 a2 = a2 + 0x1
 99293: 88 9b 02                 a4 = a2 <u 0x2
 99296: 82 16 88 00              s1 = u64 [sp + 0x88]
 99300: 28 71 ff                 jump @7783
      :                          @7791
 99303: 64 b7                    a0 = a4
 99305: 01                       fallthrough
      :                          @7792
 99306: 82 19 e8 00              a2 = u64 [sp + 0xe8]
 99310: 97 78 05                 a1 = a0 << 0x5
 99313: c8 68 08                 a1 = a1 + s1
 99316: 7b 19 98 00              u64 [sp + 0x98] = a2
 99320: 7b 89 18                 u64 [a1 + 0x18] = a2
 99323: 82 19 e0 00              a2 = u64 [sp + 0xe0]
 99327: 7b 19 90 00              u64 [sp + 0x90] = a2
 99331: 7b 89 10                 u64 [a1 + 0x10] = a2
 99334: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 99338: 7b 19 78                 u64 [sp + 0x78] = a2
 99341: 7b 89 08                 u64 [a1 + 0x8] = a2
 99344: 82 19 d0 00              a2 = u64 [sp + 0xd0]
 99348: 7b 89                    u64 [a1] = a2
 99350: 51 07 9d 00              jump @7804 if a0 == 0
      :                          @7793
 99354: 7b 19 80 00              u64 [sp + 0x80] = a2
 99358: 28 28                    jump @7796
      :                          @7794
 99360: ac 89 8f 00              jump @7803 if a2 <u a1
      :                          @7795
 99364: 82 58 18                 a1 = u64 [s0 + 0x18]
 99367: 97 77 05                 a0 = a0 << 0x5
 99370: c8 67 07                 a0 = a0 + s1
 99373: 7b 78 18                 u64 [a0 + 0x18] = a1
 99376: 82 58 10                 a1 = u64 [s0 + 0x10]
 99379: 7b 78 10                 u64 [a0 + 0x10] = a1
 99382: 82 58 08                 a1 = u64 [s0 + 0x8]
 99385: 7b 78 08                 u64 [a0 + 0x8] = a1
 99388: 82 58                    a1 = u64 [s0]
 99390: 7b 78                    u64 [a0] = a1
 99392: 64 47                    a0 = t2
 99394: 54 1c 01 74              jump @7805 if a5 <=u 1
      :                          @7796
 99398: 95 7c ff                 a5 = a0 + 0xffffffffffffffff
 99401: 98 c4 01                 t2 = a5 >> 0x1
 99404: 97 45 05                 s0 = t2 << 0x5
 99407: c8 65 05                 s0 = s0 + s1
 99410: 82 58                    a1 = u64 [s0]
 99412: ab 89 cc                 jump @7794 if a2 != a1
      :                          @7797
 99415: 82 53 18                 t1 = u64 [s0 + 0x18]
 99418: 82 58 10                 a1 = u64 [s0 + 0x10]
 99421: 82 19 98 00              a2 = u64 [sp + 0x98]
 99425: e6 39 09                 a2 = minu(a2, t1)
 99428: 95 99 01                 a2 = a2 + 0x1
 99431: 82 1b 90 00              a4 = u64 [sp + 0x90]
 99435: 01                       fallthrough
      :                          @7798
 99436: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 99439: 51 09 20                 jump @7801 if a2 == 0
      :                          @7799
 99442: 82 ba                    a3 = u64 [a4]
 99444: 82 86                    s1 = u64 [a1]
 99446: 95 bb 08                 a4 = a4 + 0x8
 99449: 95 88 08                 a1 = a1 + 0x8
 99452: d8 6a 00                 ra = a3 <u s1
 99455: d3 6a 0a                 a3 = a3 ^ s1
 99458: 8e a2                    t0 = a3 >u 0
 99460: 33 0a ff                 a3 = 0xffffffffffffffff
 99463: db 0a 02                 t0 = a3 if ra != 0
 99466: 51 02 e2                 jump @7798 if t0 == 0
      :                          @7800
 99469: 28 12                    jump @7802
      :                          @7801
 99471: 82 19 98 00              a2 = u64 [sp + 0x98]
 99475: d8 39 08                 a1 = a2 <u t1
 99478: d3 39 09                 a2 = a2 ^ t1
 99481: 8e 92                    t0 = a2 >u 0
 99483: 94 82 ff                 t0 = 0xffffffffffffffff if a1 != 0
 99486: 01                       fallthrough
      :                          @7802
 99487: 95 22 01                 t0 = t0 + 0x1
 99490: 82 16 88 00              s1 = u64 [sp + 0x88]
 99494: 82 19 80 00              a2 = u64 [sp + 0x80]
 99498: 55 12 02 7a ff           jump @7795 if t0 >=u 2
      :                          @7803
 99503: 64 74                    t2 = a0
 99505: 28 05                    jump @7805
      :                          @7804
 99507: 33 04                    t2 = 0
 99509: 01                       fallthrough
      :                          @7805
 99510: 97 44 05                 t2 = t2 << 0x5
 99513: c8 64 04                 t2 = t2 + s1
 99516: 7b 49                    u64 [t2] = a2
 99518: 82 17 78                 a0 = u64 [sp + 0x78]
 99521: 7b 47 08                 u64 [t2 + 0x8] = a0
 99524: 82 17 90 00              a0 = u64 [sp + 0x90]
 99528: 7b 47 10                 u64 [t2 + 0x10] = a0
 99531: 82 17 98 00              a0 = u64 [sp + 0x98]
 99535: 7b 47 18                 u64 [t2 + 0x18] = a0
 99538: 82 17 18                 a0 = u64 [sp + 0x18]
 99541: 82 12 38                 t0 = u64 [sp + 0x38]
 99544: 33 04 00 00 10           t2 = 0x100000
 99549: 82 13 30                 t1 = u64 [sp + 0x30]
 99552: 82 1b 60                 a4 = u64 [sp + 0x60]
 99555: 82 18 20                 a1 = u64 [sp + 0x20]
 99558: 82 1c 50                 a5 = u64 [sp + 0x50]
 99561: aa 78 49 03              jump @7867 if a1 == a0
      :                          @7806
 99565: 7b 18 20                 u64 [sp + 0x20] = a1
 99568: 88 c7 01                 a0 = a5 <u 0x1
 99571: 88 b8 01                 a1 = a4 <u 0x1
 99574: d4 87 07                 a0 = a0 | a1
 99577: 52 07 ed 03              jump @7891 if a0 != 0
      :                          @7807
 99581: 97 c0 03                 ra = a5 << 0x3
 99584: 7b 1b 60                 u64 [sp + 0x60] = a4
 99587: c8 b0 07                 a0 = ra + a4
 99590: 82 75 f8                 s0 = u64 [a0 + 0xfffffffffffffff8]
 99593: 7b 1c 50                 u64 [sp + 0x50] = a5
 99596: 7b 10 78                 u64 [sp + 0x78] = ra
 99599: 52 15 05 4e              jump @7812 if s0 != 5
      :                          @7808
 99603: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 99607: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 99611: ab 78 24                 jump @7811 if a1 != a0
      :                          @7809
 99614: 95 17 a0 00              a0 = sp + 0xa0
 99618: 50 20 88 04 ed cd fe     ra = 1160, jump @1581
      :                          @7810 [@dyn 580]
 99625: 82 10 78                 ra = u64 [sp + 0x78]
 99628: 82 1c 50                 a5 = u64 [sp + 0x50]
 99631: 82 13 30                 t1 = u64 [sp + 0x30]
 99634: 33 04 00 00 10           t2 = 0x100000
 99639: 82 12 38                 t0 = u64 [sp + 0x38]
 99642: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 99646: 01                       fallthrough
      :                          @7811
 99647: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 99651: 82 19 48                 a2 = u64 [sp + 0x48]
 99654: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
 99657: 97 8a 03                 a3 = a1 << 0x3
 99660: c8 a7 07                 a0 = a0 + a3
 99663: 7b 79                    u64 [a0] = a2
 99665: 95 88 01                 a1 = a1 + 0x1
 99668: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 99672: 55 18 03 a7 02           jump @7860 if a1 >=u 3
      :                          @7812
 99677: 82 17 10                 a0 = u64 [sp + 0x10]
 99680: ae 75 82 03              jump @7887 if s0 >=u a0
      :                          @7813
 99684: 96 57 18                 a0 = s0 * 0x18
 99687: 82 18 08                 a1 = u64 [sp + 0x8]
 99690: c8 87 07                 a0 = a0 + a1
 99693: 82 78 10                 a1 = u64 [a0 + 0x10]
 99696: 51 08 40 02              jump @7850 if a1 == 0
      :                          @7814
 99700: 82 75 08                 s0 = u64 [a0 + 0x8]
 99703: 97 88 04                 a1 = a1 << 0x4
 99706: 98 c7 3c                 a0 = a5 >> 0x3c
 99709: c8 58 08                 a1 = a1 + s0
 99712: 7b 18 40                 u64 [sp + 0x40] = a1
 99715: 52 07 0a 02              jump @7845 if a0 != 0
      :                          @7815
 99719: 88 77 01                 a0 = a0 <u 0x1
 99722: 97 76 03                 s1 = a0 << 0x3
 99725: 97 cc 03                 a5 = a5 << 0x3
 99728: 82 1a 40                 a3 = u64 [sp + 0x40]
 99731: 7b 16 98 00              u64 [sp + 0x98] = s1
 99735: 7b 1c 28                 u64 [sp + 0x28] = a5
 99738: 28 41                    jump @7819
      :                          @7816
 99740: 33 04                    t2 = 0
 99742: 82 10 78                 ra = u64 [sp + 0x78]
 99745: 82 16 98 00              s1 = u64 [sp + 0x98]
 99749: 01                       fallthrough
      :                          @7817
 99750: 97 44 05                 t2 = t2 << 0x5
 99753: c8 a4 04                 t2 = t2 + a3
 99756: 7b 49                    u64 [t2] = a2
 99758: 82 17 58                 a0 = u64 [sp + 0x58]
 99761: 7b 47 08                 u64 [t2 + 0x8] = a0
 99764: 82 17 80 00              a0 = u64 [sp + 0x80]
 99768: 7b 47 10                 u64 [t2 + 0x10] = a0
 99771: 82 17 90 00              a0 = u64 [sp + 0x90]
 99775: 7b 47 18                 u64 [t2 + 0x18] = a0
 99778: 82 12 38                 t0 = u64 [sp + 0x38]
 99781: 33 04 00 00 10           t2 = 0x100000
 99786: 82 13 30                 t1 = u64 [sp + 0x30]
 99789: 82 1a 40                 a3 = u64 [sp + 0x40]
 99792: 82 1c 28                 a5 = u64 [sp + 0x28]
 99795: 01                       fallthrough
      :                          @7818
 99796: 82 15 68                 s0 = u64 [sp + 0x68]
 99799: aa a5 d9 01              jump @7850 if s0 == a3
      :                          @7819
 99803: 64 57                    a0 = s0
 99805: 82 55                    s0 = u64 [s0]
 99807: 82 7b 08                 a4 = u64 [a0 + 0x8]
 99810: 95 77 10                 a0 = a0 + 0x10
 99813: 7b 17 68                 u64 [sp + 0x68] = a0
 99816: 64 c7                    a0 = a5
 99818: 82 18 60                 a1 = u64 [sp + 0x60]
 99821: 01                       fallthrough
      :                          @7820
 99822: 51 07 10                 jump @7823 if a0 == 0
      :                          @7821
 99825: 82 89                    a2 = u64 [a1]
 99827: 95 88 08                 a1 = a1 + 0x8
 99830: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
 99833: ab 59 f5                 jump @7820 if a2 != s0
      :                          @7822
 99836: 28 d8                    jump @7818
      :                          @7823
 99838: 7b 1b 90 00              u64 [sp + 0x90] = a4
 99842: 01                       fallthrough
      :                          @7824
 99843: 82 37                    a0 = u64 [t1]
 99845: c8 07 08                 a1 = a0 + ra
 99848: ac 78 db 02              jump @7888 if a1 <u a0
      :                          @7825
 99852: c8 68 09                 a2 = a1 + s1
 99855: d8 89 0a                 a3 = a2 <u a1
 99858: d8 94 09                 a2 = t2 <u a2
 99861: d4 a9 09                 a2 = a2 | a3
 99864: 52 09 cb 02              jump @7888 if a2 != 0
      :                          @7826
 99868: c9 82 09                 a2 = t0 - a1
 99871: c8 49 09                 a2 = a2 + t2
 99874: 84 9a 07                 a3 = a2 & 0x7
 99877: c8 a8 08                 a1 = a1 + a3
 99880: 01                       fallthrough
      :                          @7827
 99881: 82 3b                    a4 = u64 [t1]
 99883: ab 7b d8                 jump @7824 if a4 != a0
      :                          @7828
 99886: 7b 38                    u64 [t1] = a1
 99888: 33 0c                    a5 = 0
 99890: c9 a9 06                 s1 = a2 - a3
 99893: 64 67                    a0 = s1
 99895: 82 18 60                 a1 = u64 [sp + 0x60]
 99898: 64 09                    a2 = ra
 99900: 50 20 8a 04 a4 83 01     ra = 1162, jump @13635
      :                          @7829 [@dyn 581]
 99907: 82 18 50                 a1 = u64 [sp + 0x50]
 99910: 7b 18 d0 00              u64 [sp + 0xd0] = a1
 99914: 7b 16 d8 00              u64 [sp + 0xd8] = s1
 99918: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 99922: 95 17 d0 00              a0 = sp + 0xd0
 99926: 50 20 8c 04 b9 cc fe     ra = 1164, jump @1581
      :                          @7830 [@dyn 582]
 99933: 82 17 e0 00              a0 = u64 [sp + 0xe0]
 99937: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 99941: 97 79 03                 a2 = a0 << 0x3
 99944: c8 98 08                 a1 = a1 + a2
 99947: 7b 85                    u64 [a1] = s0
 99949: 82 15 c8 00              s0 = u64 [sp + 0xc8]
 99953: 82 18 b8 00              a1 = u64 [sp + 0xb8]
 99957: 95 77 01                 a0 = a0 + 0x1
 99960: 7b 17 e0 00              u64 [sp + 0xe0] = a0
 99964: 64 57                    a0 = s0
 99966: ab 85 15                 jump @7833 if s0 != a1
      :                          @7831
 99969: 95 17 b8 00              a0 = sp + 0xb8
 99973: 64 58                    a1 = s0
 99975: 50 20 8e 04 01 ce fe     ra = 1166, jump @1617
      :                          @7832 [@dyn 583]
 99982: 82 17 c8 00              a0 = u64 [sp + 0xc8]
 99986: 01                       fallthrough
      :                          @7833
 99987: 82 1a c0 00              a3 = u64 [sp + 0xc0]
 99991: 82 18 48                 a1 = u64 [sp + 0x48]
 99994: 82 19 90 00              a2 = u64 [sp + 0x90]
 99998: c9 98 08                 a1 = a1 - a2
100001: 97 79 05                 a2 = a0 << 0x5
100004: c8 a9 09                 a2 = a2 + a3
100007: 7b 98                    u64 [a2] = a1
100009: 82 18 d0 00              a1 = u64 [sp + 0xd0]
100013: 7b 98 08                 u64 [a2 + 0x8] = a1
100016: 82 18 d8 00              a1 = u64 [sp + 0xd8]
100020: 7b 98 10                 u64 [a2 + 0x10] = a1
100023: 82 18 e0 00              a1 = u64 [sp + 0xe0]
100027: 7b 98 18                 u64 [a2 + 0x18] = a1
100030: 95 77 01                 a0 = a0 + 0x1
100033: 7b 17 c8 00              u64 [sp + 0xc8] = a0
100037: 97 57 05                 a0 = s0 << 0x5
100040: c8 a7 07                 a0 = a0 + a3
100043: 82 79                    a2 = u64 [a0]
100045: 82 78 08                 a1 = u64 [a0 + 0x8]
100048: 7b 18 58                 u64 [sp + 0x58] = a1
100051: 82 78 10                 a1 = u64 [a0 + 0x10]
100054: 7b 18 80 00              u64 [sp + 0x80] = a1
100058: 82 77 18                 a0 = u64 [a0 + 0x18]
100061: 7b 17 90 00              u64 [sp + 0x90] = a0
100065: 7b 1a 88 00              u64 [sp + 0x88] = a3
100069: 51 05 b7 fe              jump @7816 if s0 == 0
      :                          @7834
100073: 82 10 78                 ra = u64 [sp + 0x78]
100076: 7b 19 70                 u64 [sp + 0x70] = a2
100079: 28 2d                    jump @7837
      :                          @7835
100081: ac 79 93 00              jump @7844 if a2 <u a0
      :                          @7836
100085: 82 87 18                 a0 = u64 [a1 + 0x18]
100088: 97 55 05                 s0 = s0 << 0x5
100091: c8 a5 05                 s0 = s0 + a3
100094: 7b 57 18                 u64 [s0 + 0x18] = a0
100097: 82 87 10                 a0 = u64 [a1 + 0x10]
100100: 7b 57 10                 u64 [s0 + 0x10] = a0
100103: 82 87 08                 a0 = u64 [a1 + 0x8]
100106: 7b 57 08                 u64 [s0 + 0x8] = a0
100109: 82 87                    a0 = u64 [a1]
100111: 7b 57                    u64 [s0] = a0
100113: 64 45                    s0 = t2
100115: 82 16 98 00              s1 = u64 [sp + 0x98]
100119: 54 1c 01 8f fe           jump @7817 if a5 <=u 1
      :                          @7837
100124: 95 5c ff                 a5 = s0 + 0xffffffffffffffff
100127: 98 c4 01                 t2 = a5 >> 0x1
100130: 97 48 05                 a1 = t2 << 0x5
100133: c8 a8 08                 a1 = a1 + a3
100136: 82 87                    a0 = u64 [a1]
100138: ab 79 c7                 jump @7835 if a2 != a0
      :                          @7838
100141: 82 83 18                 t1 = u64 [a1 + 0x18]
100144: 82 86 10                 s1 = u64 [a1 + 0x10]
100147: 82 17 90 00              a0 = u64 [sp + 0x90]
100151: e6 37 0a                 a3 = minu(a0, t1)
100154: 95 aa 01                 a3 = a3 + 0x1
100157: 82 17 80 00              a0 = u64 [sp + 0x80]
100161: 01                       fallthrough
      :                          @7839
100162: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
100165: 51 0a 1d                 jump @7842 if a3 == 0
      :                          @7840
100168: 82 79                    a2 = u64 [a0]
100170: 82 6b                    a4 = u64 [s1]
100172: 95 77 08                 a0 = a0 + 0x8
100175: 95 66 08                 s1 = s1 + 0x8
100178: d8 b9 00                 ra = a2 <u a4
100181: d3 b9 09                 a2 = a2 ^ a4
100184: 8e 92                    t0 = a2 >u 0
100186: 94 02 ff                 t0 = 0xffffffffffffffff if ra != 0
100189: 51 02 e5                 jump @7839 if t0 == 0
      :                          @7841
100192: 28 12                    jump @7843
      :                          @7842
100194: 82 19 90 00              a2 = u64 [sp + 0x90]
100198: d8 39 07                 a0 = a2 <u t1
100201: d3 39 09                 a2 = a2 ^ t1
100204: 8e 92                    t0 = a2 >u 0
100206: 94 72 ff                 t0 = 0xffffffffffffffff if a0 != 0
100209: 01                       fallthrough
      :                          @7843
100210: 95 22 01                 t0 = t0 + 0x1
100213: 82 1a 88 00              a3 = u64 [sp + 0x88]
100217: 82 10 78                 ra = u64 [sp + 0x78]
100220: 82 19 70                 a2 = u64 [sp + 0x70]
100223: 55 12 02 76 ff           jump @7836 if t0 >=u 2
      :                          @7844
100228: 64 54                    t2 = s0
100230: 82 16 98 00              s1 = u64 [sp + 0x98]
100234: 28 1c fe                 jump @7817
      :                          @7845
100237: 82 1b 60                 a4 = u64 [sp + 0x60]
100240: 82 1c 40                 a5 = u64 [sp + 0x40]
100243: 01                       fallthrough
      :                          @7846
100244: 82 57                    a0 = u64 [s0]
100246: 95 55 10                 s0 = s0 + 0x10
100249: 64 08                    a1 = ra
100251: 64 b9                    a2 = a4
100253: 01                       fallthrough
      :                          @7847
100254: 51 08 46 01              jump @7889 if a1 == 0
      :                          @7848
100258: 82 9a                    a3 = u64 [a2]
100260: 95 99 08                 a2 = a2 + 0x8
100263: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
100266: ab 7a f4                 jump @7847 if a3 != a0
      :                          @7849
100269: ab c5 e7                 jump @7846 if s0 != a5
      :                          @7850
100272: 82 1c 60                 a5 = u64 [sp + 0x60]
100275: 82 18 20                 a1 = u64 [sp + 0x20]
100278: 51 08 d5 fa              jump @7773 if a1 == 0
      :                          @7851
100282: 56 38 00 00 02 d1 fa     jump @7773 if a1 >u 131072
      :                          @7852
100289: 97 87 03                 a0 = a1 << 0x3
100292: 01                       fallthrough
      :                          @7853
100293: 82 38                    a1 = u64 [t1]
100295: c9 83 09                 a2 = t1 - a1
100298: ab c9 c1 fa              jump @7773 if a2 != a5
      :                          @7854
100302: c9 78 09                 a2 = a1 - a0
100305: 01                       fallthrough
      :                          @7855
100306: 82 3a                    a3 = u64 [t1]
100308: ab 8a f1                 jump @7853 if a3 != a1
      :                          @7856
100311: 7b 39                    u64 [t1] = a2
100313: 33 0b                    a4 = 0
100315: 01                       fallthrough
      :                          @7857
100316: ab 8a e9                 jump @7853 if a3 != a1
      :                          @7858
100319: 28 ac fa                 jump @7773
      :                          @7859
100322: 82 18 b0 00              a1 = u64 [sp + 0xb0]
100326: 82 19 a8 00              a2 = u64 [sp + 0xa8]
100330: 82 1a a0 00              a3 = u64 [sp + 0xa0]
100334: 82 13 c0 00              t1 = u64 [sp + 0xc0]
100338: 82 17                    a0 = u64 [sp]
100340: 7b 78 10                 u64 [a0 + 0x10] = a1
100343: 7b 79 08                 u64 [a0 + 0x8] = a2
100346: 7b 7a                    u64 [a0] = a3
100348: 28 a1 00                 jump @7879
      :                          @7860
100351: 82 16 60                 s1 = u64 [sp + 0x60]
100354: 82 18 20                 a1 = u64 [sp + 0x20]
100357: 51 08 2d                 jump @7867 if a1 == 0
      :                          @7861
100360: 56 38 00 00 02 2a        jump @7867 if a1 >u 131072
      :                          @7862
100366: 97 87 03                 a0 = a1 << 0x3
100369: 33 08 b0 02 03           a1 = 0x302b0
100374: 95 88 00 00 10           a1 = a1 + 0x100000
100379: 01                       fallthrough
      :                          @7863
100380: 82 89                    a2 = u64 [a1]
100382: c9 98 0a                 a3 = a1 - a2
100385: ab 6a 11                 jump @7867 if a3 != s1
      :                          @7864
100388: c9 79 0a                 a3 = a2 - a0
100391: 01                       fallthrough
      :                          @7865
100392: 82 8b                    a4 = u64 [a1]
100394: ab 9b f2                 jump @7863 if a4 != a2
      :                          @7866
100397: 7b 8a                    u64 [a1] = a3
100399: 33 0c                    a5 = 0
100401: 01                       fallthrough
      :                          @7867
100402: 82 14 c8 00              t2 = u64 [sp + 0xc8]
100406: 82 19 b0 00              a2 = u64 [sp + 0xb0]
100410: 82 1a a8 00              a3 = u64 [sp + 0xa8]
100414: 82 1b a0 00              a4 = u64 [sp + 0xa0]
100418: 82 13 c0 00              t1 = u64 [sp + 0xc0]
100422: 82 17                    a0 = u64 [sp]
100424: 7b 79 10                 u64 [a0 + 0x10] = a2
100427: 7b 7a 08                 u64 [a0 + 0x8] = a3
100430: 7b 7b                    u64 [a0] = a4
100432: 51 04 4d                 jump @7879 if t2 == 0
      :                          @7868
100435: 33 09                    a2 = 0
100437: 33 0a b0 02 03           a3 = 0x302b0
100442: 95 ab 00 00 10           a4 = a3 + 0x100000
100447: 33 02 00 00 02           t0 = 0x20000
100452: 28 08                    jump @7870
      :                          @7869
100454: 95 99 01                 a2 = a2 + 0x1
100457: aa 49 34                 jump @7879 if a2 == t2
      :                          @7870
100460: 97 9c 05                 a5 = a2 << 0x5
100463: c8 3c 0c                 a5 = a5 + t1
100466: 82 c6 08                 s1 = u64 [a5 + 0x8]
100469: 51 06 f1                 jump @7869 if s1 == 0
      :                          @7871
100472: ac 62 ee                 jump @7869 if t0 <u s1
      :                          @7872
100475: 82 cc 10                 a5 = u64 [a5 + 0x10]
100478: 97 66 03                 s1 = s1 << 0x3
100481: 01                       fallthrough
      :                          @7873
100482: 82 b5                    s0 = u64 [a4]
100484: c9 5b 0a                 a3 = a4 - s0
100487: ab ca df                 jump @7869 if a3 != a5
      :                          @7874
100490: c9 65 0a                 a3 = s0 - s1
100493: 01                       fallthrough
      :                          @7875
100494: 82 b7                    a0 = u64 [a4]
100496: ab 57 f2                 jump @7873 if a0 != s0
      :                          @7876
100499: 7b ba                    u64 [a4] = a3
100501: 33 08                    a1 = 0
100503: 01                       fallthrough
      :                          @7877
100504: ab 57 ea                 jump @7873 if a0 != s0
      :                          @7878
100507: 28 cb                    jump @7869
      :                          @7879
100509: 82 18 b8 00              a1 = u64 [sp + 0xb8]
100513: 51 08 2f                 jump @7886 if a1 == 0
      :                          @7880
100516: 33 07 00 80 00           a0 = 0x8000
100521: ac 87 27                 jump @7886 if a0 <u a1
      :                          @7881
100524: 97 88 05                 a1 = a1 << 0x5
100527: 33 09 b0 02 03           a2 = 0x302b0
100532: 95 99 00 00 10           a2 = a2 + 0x100000
100537: 01                       fallthrough
      :                          @7882
100538: 82 9a                    a3 = u64 [a2]
100540: c9 a9 07                 a0 = a2 - a3
100543: ab 37 11                 jump @7886 if a0 != t1
      :                          @7883
100546: c9 8a 07                 a0 = a3 - a1
100549: 01                       fallthrough
      :                          @7884
100550: 82 9b                    a4 = u64 [a2]
100552: ab ab f2                 jump @7882 if a4 != a3
      :                          @7885
100555: 7b 97                    u64 [a2] = a0
100557: 33 0c                    a5 = 0
100559: 01                       fallthrough
      :                          @7886
100560: 82 10 00 01              ra = u64 [sp + 0x100]
100564: 82 15 f8 00              s0 = u64 [sp + 0xf8]
100568: 82 16 f0 00              s1 = u64 [sp + 0xf0]
100572: 95 11 08 01              sp = sp + 0x108
100576: 32 00                    ret
      :                          @7887
100578: 00                       trap
      :                          @7888
100579: 00                       trap
      :                          @7889
100580: 00                       trap
      :                          @7890
100581: 00                       trap
      :                          @7891
100582: 00                       trap
      :                          @7892
100583: 95 11 90                 sp = sp + 0xffffffffffffff90
100586: 7b 10 68                 u64 [sp + 0x68] = ra
100589: 7b 15 60                 u64 [sp + 0x60] = s0
100592: 7b 16 58                 u64 [sp + 0x58] = s1
100595: 64 72                    t0 = a0
100597: 84 79 01                 a2 = a0 & 0x1
100600: 33 07 01                 a0 = 0x1
100603: 33 08 02                 a1 = 0x2
100606: 51 09 a8 01              jump @7922 if a2 == 0
      :                          @7893
100610: 33 09                    a2 = 0
100612: 64 26                    s1 = t0
100614: 01                       fallthrough
      :                          @7894
100615: c8 96 0a                 a3 = s1 + a2
100618: 98 aa 01                 a3 = a3 >> 0x1
100621: ca aa 08                 a1 = a3 * a3
100624: d6 aa 0c                 a5 = a3 mulhu a3
100627: 33 0b ff                 a4 = 0xffffffffffffffff
100630: da c8 0b                 a4 = a1 if a5 == 0
100633: aa 2b 80 01              jump @7919 if a4 == t0
      :                          @7895
100637: d8 2b 08                 a1 = a4 <u t0
100640: 95 ab 01                 a4 = a3 + 0x1
100643: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
100646: da 8a 06                 s1 = a3 if a1 == 0
100649: db 8b 09                 a2 = a4 if a1 != 0
100652: ae 96 db                 jump @7894 if s1 >=u a2
      :                          @7896
100655: ca 66 08                 a1 = s1 * s1
100658: aa 82 6d 01              jump @7920 if t0 == a1
      :                          @7897
100662: 33 04                    t2 = 0
100664: 49 11 40                 u64 [sp + 64] = 0
100667: 33 00                    ra = 0
100669: 33 0c                    a5 = 0
100671: c9 82 0b                 a4 = t0 - a1
100674: 49 11 48 01              u64 [sp + 72] = 0x1
100678: 33 09 87 13              a2 = 0x1387
100682: 64 65                    s0 = s1
100684: 64 63                    t1 = s1
100686: 49 11 38 01              u64 [sp + 56] = 0x1
100690: 7b 12 18                 u64 [sp + 0x18] = t0
100693: 7b 19                    u64 [sp] = a2
100695: 01                       fallthrough
      :                          @7898
100696: 7b 1b 08                 u64 [sp + 0x8] = a4
100699: ca 3b 07                 a0 = a4 * t1
100702: 7b 17 10                 u64 [sp + 0x10] = a0
100705: 64 0a                    a3 = ra
100707: e3 9c 00                 ra = maxs(a5, a2)
100710: 7b 14 30                 u64 [sp + 0x30] = t2
100713: 82 19 40                 a2 = u64 [sp + 0x40]
100716: 82 1b 48                 a4 = u64 [sp + 0x48]
100719: 82 18 38                 a1 = u64 [sp + 0x38]
100722: 64 a4                    t2 = a3
100724: 28 0c                    jump @7901
      :                          @7899
100726: 64 a4                    t2 = a3
100728: 01                       fallthrough
      :                          @7900
100729: 82 17 50                 a0 = u64 [sp + 0x50]
100732: aa 07 27 01              jump @7921 if a0 == ra
      :                          @7901
100736: ca b3 07                 a0 = t1 * a4
100739: c8 97 07                 a0 = a0 + a2
100742: 7b 17 48                 u64 [sp + 0x48] = a0
100745: d6 77 07                 a0 = a0 mulhu a0
100748: 7b 1c 50                 u64 [sp + 0x50] = a5
100751: 83 cc 01                 i32 a5 = a5 + 0x1
100754: 52 07 e7                 jump @7900 if a0 != 0
      :                          @7902
100757: ca 43 07                 a0 = t1 * t2
100760: 64 4a                    a3 = t2
100762: c8 87 04                 t2 = a0 + a1
100765: d6 44 07                 a0 = t2 mulhu t2
100768: 52 07 d6                 jump @7899 if a0 != 0
      :                          @7903
100771: 7b 1a 38                 u64 [sp + 0x38] = a3
100774: 7b 1b 40                 u64 [sp + 0x40] = a4
100777: 7b 1c 20                 u64 [sp + 0x20] = a5
100780: 7b 15 28                 u64 [sp + 0x28] = s0
100783: 82 17 48                 a0 = u64 [sp + 0x48]
100786: ca 77 07                 a0 = a0 * a0
100789: ca 44 08                 a1 = t2 * t2
100792: d6 28 09                 a2 = a1 mulhu t0
100795: ca 28 0c                 a5 = a1 * t0
100798: d8 c7 08                 a1 = a0 <u a5
100801: 8e 9b                    a4 = a2 >u 0
100803: da 98 0b                 a4 = a1 if a2 == 0
100806: c9 c7 08                 a1 = a0 - a5
100809: c9 7c 0c                 a5 = a5 - a0
100812: da b8 0c                 a5 = a1 if a4 == 0
100815: 33 05                    s0 = 0
100817: 64 c8                    a1 = a5
100819: 01                       fallthrough
      :                          @7904
100820: c8 58 09                 a2 = a1 + s0
100823: 98 99 01                 a2 = a2 >> 0x1
100826: ca 99 07                 a0 = a2 * a2
100829: d6 99 02                 t0 = a2 mulhu a2
100832: 33 0b ff                 a4 = 0xffffffffffffffff
100835: da 27 0b                 a4 = a0 if t0 == 0
100838: aa cb 1a                 jump @7907 if a4 == a5
      :                          @7905
100841: d8 cb 07                 a0 = a4 <u a5
100844: 95 9b 01                 a4 = a2 + 0x1
100847: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
100850: da 79 08                 a1 = a2 if a0 == 0
100853: db 7b 05                 s0 = a4 if a0 != 0
100856: ae 58 dc                 jump @7904 if a1 >=u s0
      :                          @7906
100859: ca 88 07                 a0 = a1 * a1
100862: 28 05                    jump @7908
      :                          @7907
100864: 64 98                    a1 = a2
100866: 01                       fallthrough
      :                          @7908
100867: 8e 89                    a2 = a1 >u 0
100869: d3 c7 07                 a0 = a0 ^ a5
100872: 88 77 01                 a0 = a0 <u 0x1
100875: d2 97 07                 a0 = a0 & a2
100878: 82 12 18                 t0 = u64 [sp + 0x18]
100881: 82 1b 28                 a4 = u64 [sp + 0x28]
100884: 82 1c 20                 a5 = u64 [sp + 0x20]
100887: 51 07 22                 jump @7912 if a0 == 0
      :                          @7909
100890: 82 17 48                 a0 = u64 [sp + 0x48]
100893: c8 87 07                 a0 = a0 + a1
100896: 64 29                    a2 = t0
100898: 01                       fallthrough
      :                          @7910
100899: 64 98                    a1 = a2
100901: cd 97 09                 a2 = a0 %u a2
100904: 64 87                    a0 = a1
100906: 52 09 f9                 jump @7910 if a2 != 0
      :                          @7911
100909: 88 87 02                 a0 = a1 <u 0x2
100912: d8 28 09                 a2 = a1 <u t0
100915: e0 79 07                 a0 = a2 & ~a0
100918: 52 07 7e                 jump @7923 if a0 != 0
      :                          @7912
100921: 82 17 10                 a0 = u64 [sp + 0x10]
100924: 82 18 30                 a1 = u64 [sp + 0x30]
100927: c9 87 05                 s0 = a0 - a1
100930: d6 55 08                 a1 = s0 mulhu s0
100933: ca 55 07                 a0 = s0 * s0
100936: d8 72 09                 a2 = t0 <u a0
100939: 9a 88                    a1 = -a1
100941: c9 98 08                 a1 = a1 - a2
100944: 59 08 12                 jump @7914 if a1 >=s 0
      :                          @7913
100947: 82 18 38                 a1 = u64 [sp + 0x38]
100950: 82 19 40                 a2 = u64 [sp + 0x40]
100953: 7b 1b 30                 u64 [sp + 0x30] = a4
100956: 82 1b 48                 a4 = u64 [sp + 0x48]
100959: 28 1a ff                 jump @7900
      :                          @7914
100962: 82 19 08                 a2 = u64 [sp + 0x8]
100965: 51 09 3e                 jump @7921 if a2 == 0
      :                          @7915
100968: 7b 14 30                 u64 [sp + 0x30] = t2
100971: c9 72 07                 a0 = t0 - a0
100974: 50 20 90 04 0d 7f 01     ra = 1168, jump @13631
      :                          @7916 [@dyn 584]
100981: 51 07 44                 jump @7924 if a0 == 0
      :                          @7917
100984: 64 7b                    a4 = a0
100986: 33 07                    a0 = 0
100988: c8 65 08                 a1 = s0 + s1
100991: cb b8 03                 t1 = a1 /u a4
100994: 82 12 18                 t0 = u64 [sp + 0x18]
100997: 82 19                    a2 = u64 [sp]
100999: 82 14 28                 t2 = u64 [sp + 0x28]
101002: 82 1c 20                 a5 = u64 [sp + 0x20]
101005: 82 10 30                 ra = u64 [sp + 0x30]
101008: 82 1a 50                 a3 = u64 [sp + 0x50]
101011: ad 9a c5 fe              jump @7898 if a3 <s a2
      :                          @7918
101015: 28 0f                    jump @7922
      :                          @7919
101017: 64 a6                    s1 = a3
101019: ab 82 9b fe              jump @7897 if t0 != a1
      :                          @7920
101023: 64 68                    a1 = s1
101025: 28 05                    jump @7922
      :                          @7921
101027: 33 07                    a0 = 0
101029: 01                       fallthrough
      :                          @7922
101030: 82 10 68                 ra = u64 [sp + 0x68]
101033: 82 15 60                 s0 = u64 [sp + 0x60]
101036: 82 16 58                 s1 = u64 [sp + 0x58]
101039: 95 11 70                 sp = sp + 0x70
101042: 32 00                    ret
      :                          @7923
101044: 33 07 01                 a0 = 0x1
101047: 28 ef                    jump @7922
      :                          @7924
101049: 00                       trap
      :                          @7925
101050: 33 0b 02                 a4 = 0x2
101053: aa b9 2e                 jump @7934 if a2 == a4
      :                          @7926
101056: 64 98                    a1 = a2
101058: 95 99 01                 a2 = a2 + 0x1
101061: ac 79 fb                 jump @7926 if a2 <u a0
      :                          @7927
101064: 84 9b 01                 a4 = a2 & 0x1
101067: 51 0b ef                 jump @7925 if a4 == 0
      :                          @7928
101070: ac a9 1a                 jump @7933 if a2 <u a3
      :                          @7929
101073: 33 0b 03                 a4 = 0x3
101076: 01                       fallthrough
      :                          @7930
101077: 51 0b 04 01              jump @7952 if a4 == 0
      :                          @7931
101081: cd b9 0c                 a5 = a2 %u a4
101084: 51 0c e4                 jump @7926 if a5 == 0
      :                          @7932
101087: 95 bb 02                 a4 = a4 + 0x2
101090: ca bb 0c                 a5 = a4 * a4
101093: ae c9 f0                 jump @7930 if a2 >=u a5
      :                          @7933
101096: 64 9b                    a4 = a2
101098: 01                       fallthrough
      :                          @7934
101099: 7b 1b 10                 u64 [sp + 0x10] = a4
101102: 33 09 70 02 03           a2 = 0x30270
101107: 3a 0a 38 01 03           a3 = u64 [0x30138]
101112: 33 02 e8 03              t0 = 0x3e8
101116: 33 0c 02                 a5 = 0x2
101119: 33 04 09                 t2 = 0x9
101122: 01                       fallthrough
      :                          @7935
101123: 3a 07 70 02 03           a0 = u64 [0x30270]
101128: 97 7b 0d                 a4 = a0 << 0xd
101131: d3 b7 07                 a0 = a0 ^ a4
101134: 98 7b 07                 a4 = a0 >> 0x7
101137: d3 b7 07                 a0 = a0 ^ a4
101140: 97 7b 11                 a4 = a0 << 0x11
101143: d3 b7 07                 a0 = a0 ^ a4
101146: ca 37 0b                 a4 = a0 * t1
101149: 3e 07 70 02 03           u64 [0x30270] = a0
101154: 98 b7 03                 a0 = a4 >> 0x3
101157: d6 a7 07                 a0 = a0 mulhu a3
101160: 98 77 04                 a0 = a0 >> 0x4
101163: ca 27 07                 a0 = a0 * t0
101166: c9 7b 0b                 a4 = a4 - a0
101169: 95 b7 64                 a0 = a4 + 0x64
101172: 28 08                    jump @7937
      :                          @7936
101174: 33 05 02                 s0 = 0x2
101177: aa 57 2e                 jump @7945 if a0 == s0
      :                          @7937
101180: 64 76                    s1 = a0
101182: 95 77 01                 a0 = a0 + 0x1
101185: ac c7 fb                 jump @7937 if a0 <u a5
      :                          @7938
101188: 84 7b 01                 a4 = a0 & 0x1
101191: 51 0b ef                 jump @7936 if a4 == 0
      :                          @7939
101194: ac 47 1a                 jump @7944 if a0 <u t2
      :                          @7940
101197: 33 05 03                 s0 = 0x3
101200: 01                       fallthrough
      :                          @7941
101201: 51 05 88 00              jump @7952 if s0 == 0
      :                          @7942
101205: cd 57 0b                 a4 = a0 %u s0
101208: 51 0b e4                 jump @7937 if a4 == 0
      :                          @7943
101211: 95 55 02                 s0 = s0 + 0x2
101214: ca 55 0b                 a4 = s0 * s0
101217: ae b7 f0                 jump @7941 if a0 >=u a4
      :                          @7944
101220: 64 75                    s0 = a0
101222: 01                       fallthrough
      :                          @7945
101223: aa 86 9c                 jump @7935 if s1 == a1
      :                          @7946
101226: ca 86 06                 s1 = s1 * a1
101229: 51 06 6c                 jump @7952 if s1 == 0
      :                          @7947
101232: 7b 10 08                 u64 [sp + 0x8] = ra
101235: 33 07 01 00 01           a0 = 0x10001
101240: cd 67 08                 a1 = a0 %u s1
101243: 95 17 18                 a0 = sp + 0x18
101246: 7b 18                    u64 [sp] = a1
101248: 64 69                    a2 = s1
101250: 50 20 92 04 aa ff fe     ra = 1170, jump @2409
      :                          @7948 [@dyn 585]
101257: 82 17 18                 a0 = u64 [sp + 0x18]
101260: 52 17 01 4f              jump @7954 if a0 != 1
      :                          @7949
101264: 82 17 20                 a0 = u64 [sp + 0x20]
101267: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
101277: d3 87 09                 a2 = a0 ^ a1
101280: e1 69 09                 a2 = a2 | ~s1
101283: 82 1a 08                 a3 = u64 [sp + 0x8]
101286: 51 09 34                 jump @7953 if a2 == 0
      :                          @7950
101289: ce 67 07                 a0 = a0 %s s1
101292: c8 67 07                 a0 = a0 + s1
101295: d3 78 08                 a1 = a1 ^ a0
101298: e1 68 08                 a1 = a1 | ~s1
101301: 51 08 25                 jump @7953 if a1 == 0
      :                          @7951
101304: ce 67 07                 a0 = a0 %s s1
101307: 82 18 10                 a1 = u64 [sp + 0x10]
101310: ca 85 08                 a1 = s0 * a1
101313: 7b a8                    u64 [a3] = a1
101315: 82 18                    a1 = u64 [sp]
101317: 7b a8 08                 u64 [a3 + 0x8] = a1
101320: 7b a7 10                 u64 [a3 + 0x10] = a0
101323: 82 10 40                 ra = u64 [sp + 0x40]
101326: 82 15 38                 s0 = u64 [sp + 0x38]
101329: 82 16 30                 s1 = u64 [sp + 0x30]
101332: 95 11 48                 sp = sp + 0x48
101335: 32 00                    ret
      :                          @7952
101337: 00                       trap
      :                          @7953
101338: 00                       trap
      :                          @7954
101339: 00                       trap
      :                          @7955
101340: aa 6c 2e                 jump @7964 if a5 == s1
      :                          @7956
101343: 64 c5                    s0 = a5
101345: 95 cc 01                 a5 = a5 + 0x1
101348: ac 8c fb                 jump @7956 if a5 <u a1
      :                          @7957
101351: 84 ca 01                 a3 = a5 & 0x1
101354: 51 0a f2                 jump @7955 if a3 == 0
      :                          @7958
101357: ac 9c 1a                 jump @7963 if a5 <u a2
      :                          @7959
101360: 33 0a 03                 a3 = 0x3
101363: 01                       fallthrough
      :                          @7960
101364: 51 0a 8f 00              jump @7971 if a3 == 0
      :                          @7961
101368: cd ac 0b                 a4 = a5 %u a3
101371: 51 0b e4                 jump @7956 if a4 == 0
      :                          @7962
101374: 95 aa 02                 a3 = a3 + 0x2
101377: ca aa 0b                 a4 = a3 * a3
101380: ae bc f0                 jump @7960 if a5 >=u a4
      :                          @7963
101383: 64 c6                    s1 = a5
101385: 01                       fallthrough
      :                          @7964
101386: 7b 12                    u64 [sp] = t0
101388: 7b 17 08                 u64 [sp + 0x8] = a0
101391: 64 67                    a0 = s1
101393: 50 20 94 04 92 00 ff     ra = 1172, jump @2452
      :                          @7965 [@dyn 586]
101400: 3a 08 70 02 03           a1 = u64 [0x30270]
101405: 97 89 0d                 a2 = a1 << 0xd
101408: d3 98 08                 a1 = a1 ^ a2
101411: 98 89 07                 a2 = a1 >> 0x7
101414: d3 98 08                 a1 = a1 ^ a2
101417: 97 89 11                 a2 = a1 << 0x11
101420: d3 98 08                 a1 = a1 ^ a2
101423: 95 59 ff                 a2 = s0 + 0xffffffffffffffff
101426: 3e 08 70 02 03           u64 [0x30270] = a1
101431: 51 09 4c                 jump @7971 if a2 == 0
      :                          @7966
101434: 82 1a                    a3 = u64 [sp]
101436: ca a8 08                 a1 = a1 * a3
101439: cd 98 08                 a1 = a1 %u a2
101442: 95 88 01                 a1 = a1 + 0x1
101445: 8e 59                    a2 = s0 >u 0
101447: 64 7b                    a4 = a0
101449: 64 8a                    a3 = a1
101451: 28 0b                    jump @7968
      :                          @7967
101453: 98 aa 01                 a3 = a3 >> 0x1
101456: ca bb 0b                 a4 = a4 * a4
101459: 51 0a 14                 jump @7970 if a3 == 0
      :                          @7968
101462: 84 ac 01                 a5 = a3 & 0x1
101465: cd 6b 0b                 a4 = a4 %u s1
101468: 51 0c f1                 jump @7967 if a5 == 0
      :                          @7969
101471: ca 9b 09                 a2 = a4 * a2
101474: cd 69 09                 a2 = a2 %u s1
101477: 28 e8                    jump @7967
      :                          @7970
101479: 82 1a 08                 a3 = u64 [sp + 0x8]
101482: 7b a6                    u64 [a3] = s1
101484: 7b a7 08                 u64 [a3 + 0x8] = a0
101487: 7b a9 10                 u64 [a3 + 0x10] = a2
101490: 7b a8 18                 u64 [a3 + 0x18] = a1
101493: 82 10 20                 ra = u64 [sp + 0x20]
101496: 82 15 18                 s0 = u64 [sp + 0x18]
101499: 82 16 10                 s1 = u64 [sp + 0x10]
101502: 95 11 28                 sp = sp + 0x28
101505: 32 00                    ret
      :                          @7971
101507: 00                       trap
      :                          @7972
101508: 98 77 01                 a0 = a0 >> 0x1
101511: ca aa 0a                 a3 = a3 * a3
101514: 51 07 14                 jump @7975 if a0 == 0
      :                          @7973
101517: 84 7b 01                 a4 = a0 & 0x1
101520: cd 8a 0a                 a3 = a3 %u a1
101523: 51 0b f1                 jump @7972 if a4 == 0
      :                          @7974
101526: ca 6a 0b                 a4 = a3 * s1
101529: cd 8b 06                 s1 = a4 %u a1
101532: 28 e8                    jump @7972
      :                          @7975
101534: 95 17 10                 a0 = sp + 0x10
101537: 64 98                    a1 = a2
101539: 64 59                    a2 = s0
101541: 50 20 96 04 87 fe fe     ra = 1174, jump @2409
      :                          @7976 [@dyn 587]
101548: 82 17 10                 a0 = u64 [sp + 0x10]
101551: 52 17 01 52              jump @7981 if a0 != 1
      :                          @7977
101555: 82 17 18                 a0 = u64 [sp + 0x18]
101558: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
101568: d3 87 09                 a2 = a0 ^ a1
101571: e1 59 09                 a2 = a2 | ~s0
101574: 51 09 3a                 jump @7980 if a2 == 0
      :                          @7978
101577: ce 57 07                 a0 = a0 %s s0
101580: c8 57 07                 a0 = a0 + s0
101583: d3 78 08                 a1 = a1 ^ a0
101586: e1 58 08                 a1 = a1 | ~s0
101589: 51 08 2b                 jump @7980 if a1 == 0
      :                          @7979
101592: ce 57 08                 a1 = a0 %s s0
101595: cd 56 07                 a0 = s1 %u s0
101598: 82 19 08                 a2 = u64 [sp + 0x8]
101601: ca 97 09                 a2 = a0 * a2
101604: 82 1a                    a3 = u64 [sp]
101606: c8 a9 09                 a2 = a2 + a3
101609: cd 59 09                 a2 = a2 %u s0
101612: ca 89 08                 a1 = a2 * a1
101615: cd 58 08                 a1 = a1 %u s0
101618: 82 10 38                 ra = u64 [sp + 0x38]
101621: 82 15 30                 s0 = u64 [sp + 0x30]
101624: 82 16 28                 s1 = u64 [sp + 0x28]
101627: 95 11 40                 sp = sp + 0x40
101630: 32 00                    ret
      :                          @7980
101632: 00                       trap
      :                          @7981
101633: 00                       trap
      :                          @7982
101634: 95 11 b0                 sp = sp + 0xffffffffffffffb0
101637: 7b 10 48                 u64 [sp + 0x48] = ra
101640: 7b 15 40                 u64 [sp + 0x40] = s0
101643: 7b 16 38                 u64 [sp + 0x38] = s1
101646: 88 82 01                 t0 = a1 <u 0x1
101649: d8 b8 06                 s1 = a1 <u a4
101652: 85 63 01                 t1 = s1 ^ 0x1
101655: 88 96 01                 s1 = a2 <u 0x1
101658: d4 26 05                 s0 = s1 | t0
101661: d4 35 05                 s0 = s0 | t1
101664: d8 b9 06                 s1 = a2 <u a4
101667: 85 66 01                 s1 = s1 ^ 0x1
101670: d4 56 02                 t0 = s1 | s0
101673: 51 02 08                 jump @7984 if t0 == 0
      :                          @7983
101676: 33 07                    a0 = 0
101678: 28 c3 00                 jump @7999
      :                          @7984
101681: 64 45                    s0 = t2
101683: 64 c6                    s1 = a5
101685: 7b 17                    u64 [sp] = a0
101687: 7b 1a 08                 u64 [sp + 0x8] = a3
101690: 7b 18 10                 u64 [sp + 0x10] = a1
101693: 95 17 20                 a0 = sp + 0x20
101696: 64 98                    a1 = a2
101698: 64 b9                    a2 = a4
101700: 7b 1b 18                 u64 [sp + 0x18] = a4
101703: 50 20 98 04 e5 fd fe     ra = 1176, jump @2409
      :                          @7985 [@dyn 588]
101710: 82 17 20                 a0 = u64 [sp + 0x20]
101713: 52 17 01 af 00           jump @8001 if a0 != 1
      :                          @7986
101718: 82 17 28                 a0 = u64 [sp + 0x28]
101721: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
101731: d3 87 09                 a2 = a0 ^ a1
101734: 82 12 18                 t0 = u64 [sp + 0x18]
101737: e1 29 09                 a2 = a2 | ~t0
101740: 51 09 93 00              jump @8000 if a2 == 0
      :                          @7987
101744: ce 27 07                 a0 = a0 %s t0
101747: c8 27 07                 a0 = a0 + t0
101750: d3 78 08                 a1 = a1 ^ a0
101753: e1 28 08                 a1 = a1 | ~t0
101756: 51 08 83 00              jump @8000 if a1 == 0
      :                          @7988
101760: ce 27 08                 a1 = a0 %s t0
101763: 82 13 10                 t1 = u64 [sp + 0x10]
101766: ca 38 07                 a0 = a1 * t1
101769: cd 27 07                 a0 = a0 %u t0
101772: 82 19                    a2 = u64 [sp]
101774: ca 98 08                 a1 = a1 * a2
101777: cd 28 0a                 a3 = a1 %u t0
101780: 33 08 01                 a1 = 0x1
101783: 33 09 01                 a2 = 0x1
101786: 82 14 08                 t2 = u64 [sp + 0x8]
101789: 51 0a 22                 jump @7993 if a3 == 0
      :                          @7989
101792: 33 09 01                 a2 = 0x1
101795: 28 0b                    jump @7991
      :                          @7990
101797: 98 aa 01                 a3 = a3 >> 0x1
101800: ca bb 06                 s1 = a4 * a4
101803: 51 0a 14                 jump @7993 if a3 == 0
      :                          @7991
101806: 84 ac 01                 a5 = a3 & 0x1
101809: cd 46 0b                 a4 = s1 %u t2
101812: 51 0c f1                 jump @7990 if a5 == 0
      :                          @7992
101815: ca 9b 09                 a2 = a4 * a2
101818: cd 49 09                 a2 = a2 %u t2
101821: 28 e8                    jump @7990
      :                          @7993
101823: 51 07 22                 jump @7998 if a0 == 0
      :                          @7994
101826: 33 08 01                 a1 = 0x1
101829: 28 0b                    jump @7996
      :                          @7995
101831: 98 77 01                 a0 = a0 >> 0x1
101834: ca aa 05                 s0 = a3 * a3
101837: 51 07 14                 jump @7998 if a0 == 0
      :                          @7996
101840: 84 7b 01                 a4 = a0 & 0x1
101843: cd 45 0a                 a3 = s0 %u t2
101846: 51 0b f1                 jump @7995 if a4 == 0
      :                          @7997
101849: ca 8a 08                 a1 = a3 * a1
101852: cd 48 08                 a1 = a1 %u t2
101855: 28 e8                    jump @7995
      :                          @7998
101857: ca 98 07                 a0 = a1 * a2
101860: cd 47 07                 a0 = a0 %u t2
101863: cd 27 07                 a0 = a0 %u t0
101866: d3 37 07                 a0 = a0 ^ t1
101869: 88 77 01                 a0 = a0 <u 0x1
101872: 01                       fallthrough
      :                          @7999
101873: 82 10 48                 ra = u64 [sp + 0x48]
101876: 82 15 40                 s0 = u64 [sp + 0x40]
101879: 82 16 38                 s1 = u64 [sp + 0x38]
101882: 95 11 50                 sp = sp + 0x50
101885: 32 00                    ret
      :                          @8000
101887: 00                       trap
      :                          @8001
101888: 00                       trap
      :                          @8002
101889: 82 4b                    a4 = u64 [t2]
101891: c8 9b 0c                 a5 = a4 + a2
101894: ac bc da 00              jump @8023 if a5 <u a4
      :                          @8003
101898: 95 c8 08                 a1 = a5 + 0x8
101901: d8 c8 06                 s1 = a1 <u a5
101904: d8 82 08                 a1 = t0 <u a1
101907: d4 68 08                 a1 = a1 | s1
101910: 52 08 ca 00              jump @8023 if a1 != 0
      :                          @8004
101914: c9 c3 06                 s1 = t1 - a5
101917: c8 26 06                 s1 = s1 + t0
101920: 84 68 07                 a1 = s1 & 0x7
101923: c8 8c 0c                 a5 = a5 + a1
101926: 01                       fallthrough
      :                          @8005
101927: 82 47                    a0 = u64 [t2]
101929: ab b7 d8                 jump @8002 if a0 != a4
      :                          @8006
101932: 7b 4c                    u64 [t2] = a5
101934: c9 86 06                 s1 = s1 - a1
101937: 64 67                    a0 = s1
101939: 33 08                    a1 = 0
101941: 7b 1a 10                 u64 [sp + 0x10] = a3
101944: 64 05                    s0 = ra
101946: 50 20 9a 04 d3 7d 01     ra = 1178, jump @13689
      :                          @8007 [@dyn 589]
101953: 64 64                    t2 = s1
101955: 64 56                    s1 = s0
101957: 82 1a 10                 a3 = u64 [sp + 0x10]
101960: 33 07                    a0 = 0
101962: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
101972: 33 02 02                 t0 = 0x2
101975: 82 13 18                 t1 = u64 [sp + 0x18]
101978: 01                       fallthrough
      :                          @8008
101979: 51 07 35                 jump @8013 if a0 == 0
      :                          @8009
101982: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
101985: ac 8a 7e                 jump @8022 if a3 <u a1
      :                          @8010
101988: 97 88 03                 a1 = a1 << 0x3
101991: c8 48 08                 a1 = a1 + t2
101994: 82 88                    a1 = u64 [a1]
101996: 82 6b 08                 a4 = u64 [s1 + 0x8]
101999: ca 8b 08                 a1 = a4 * a1
102002: 9a 8b                    a4 = -a1
102004: ac 27 1f                 jump @8014 if a0 <u t0
      :                          @8011
102007: 95 78 fe                 a1 = a0 + 0xfffffffffffffffe
102010: ac 8a 65                 jump @8022 if a3 <u a1
      :                          @8012
102013: 97 88 03                 a1 = a1 << 0x3
102016: c8 48 08                 a1 = a1 + t2
102019: 82 88                    a1 = u64 [a1]
102021: 82 6c 10                 a5 = u64 [s1 + 0x10]
102024: ca 8c 08                 a1 = a5 * a1
102027: c9 8b 0b                 a4 = a4 - a1
102030: 28 05                    jump @8014
      :                          @8013
102032: 82 3b                    a4 = u64 [t1]
102034: 01                       fallthrough
      :                          @8014
102035: 82 68                    a1 = u64 [s1]
102037: 51 08 47                 jump @8019 if a1 == 0
      :                          @8015
102040: d3 9b 0c                 a5 = a4 ^ a2
102043: e1 8c 0c                 a5 = a5 | ~a1
102046: 51 0c 3f                 jump @8020 if a5 == 0
      :                          @8016
102049: ac 7a 3d                 jump @8021 if a3 <u a0
      :                          @8017
102052: d8 a7 0c                 a5 = a0 <u a3
102055: 97 75 03                 s0 = a0 << 0x3
102058: c8 c7 07                 a0 = a0 + a5
102061: c8 45 05                 s0 = s0 + t2
102064: cc 8b 08                 a1 = a4 /s a1
102067: d8 7a 0b                 a4 = a3 <u a0
102070: 85 bb 01                 a4 = a4 ^ 0x1
102073: d2 cb 0b                 a4 = a4 & a5
102076: 7b 58                    u64 [s0] = a1
102078: 52 0b 9d                 jump @8008 if a4 != 0
      :                          @8018
102081: 82 17 08                 a0 = u64 [sp + 0x8]
102084: 82 18                    a1 = u64 [sp]
102086: 7b 87                    u64 [a1] = a0
102088: 7b 84 08                 u64 [a1 + 0x8] = t2
102091: 7b 87 10                 u64 [a1 + 0x10] = a0
102094: 82 10 30                 ra = u64 [sp + 0x30]
102097: 82 15 28                 s0 = u64 [sp + 0x28]
102100: 82 16 20                 s1 = u64 [sp + 0x20]
102103: 95 11 38                 sp = sp + 0x38
102106: 32 00                    ret
      :                          @8019
102108: 00                       trap
      :                          @8020
102109: 00                       trap
      :                          @8021
102110: 00                       trap
      :                          @8022
102111: 00                       trap
      :                          @8023
102112: 00                       trap
      :                          @8024
102113: 33 02                    t0 = 0
102115: 51 08 30                 jump @8029 if a1 == 0
      :                          @8025
102118: 64 83                    t1 = a1
102120: 64 8b                    a4 = a1
102122: 01                       fallthrough
      :                          @8026
102123: 98 bb 01                 a4 = a4 >> 0x1
102126: c8 2b 0b                 a4 = a4 + t0
102129: 97 bc 03                 a5 = a4 << 0x3
102132: c8 7c 0c                 a5 = a5 + a0
102135: 82 cc                    a5 = u64 [a5]
102137: aa 9c 2a                 jump @8031 if a5 == a2
      :                          @8027
102140: d9 9c 04                 t2 = a5 <s a2
102143: d9 c9 0c                 a5 = a2 <s a5
102146: db cb 03                 t1 = a4 if a5 != 0
102149: 95 bb 01                 a4 = a4 + 0x1
102152: db 4b 02                 t0 = a4 if t2 != 0
102155: c9 23 0b                 a4 = t1 - t0
102158: ac 32 dd                 jump @8026 if t0 <u t1
      :                          @8028
102161: 28 1a                    jump @8032
      :                          @8029
102163: 33 0c                    a5 = 0
102165: 33 07                    a0 = 0
102167: 28 2c b5 00              jump @10763
      :                          @8030
102171: e4 2c 07                 a0 = maxu(a5, t0)
102174: c9 27 07                 a0 = a0 - t0
102177: 32 00                    ret
      :                          @8031
102179: 64 b2                    t0 = a4
102181: 33 09                    a2 = 0
102183: 64 8b                    a4 = a1
102185: 28 07                    jump @8033
      :                          @8032
102187: 33 09                    a2 = 0
102189: 64 8b                    a4 = a1
102191: 01                       fallthrough
      :                          @8033
102192: 98 bb 01                 a4 = a4 >> 0x1
102195: c8 9b 0c                 a5 = a4 + a2
102198: 97 cb 03                 a4 = a5 << 0x3
102201: c8 7b 0b                 a4 = a4 + a0
102204: 82 bb                    a4 = u64 [a4]
102206: aa ab dd                 jump @8030 if a4 == a3
      :                          @8034
102209: d9 ab 03                 t1 = a4 <s a3
102212: d9 ba 0b                 a4 = a3 <s a4
102215: db bc 08                 a1 = a5 if a4 != 0
102218: 95 cc 01                 a5 = a5 + 0x1
102221: db 3c 09                 a2 = a5 if t1 != 0
102224: c9 98 0b                 a4 = a1 - a2
102227: ac 89 dd                 jump @8033 if a2 <u a1
      :                          @8035
102230: e4 29 07                 a0 = maxu(a2, t0)
102233: c9 27 07                 a0 = a0 - t0
102236: 32 00                    ret
      :                          @8036
102238: 95 11 50 fc              sp = sp + 0xfffffffffffffc50
102242: 7b 10 a8 03              u64 [sp + 0x3a8] = ra
102246: 7b 15 a0 03              u64 [sp + 0x3a0] = s0
102250: 7b 16 98 03              u64 [sp + 0x398] = s1
102254: 95 15 b0 03              s0 = sp + 0x3b0
102258: 84 11 f0                 sp = sp & 0xfffffffffffffff0
102261: 64 76                    s1 = a0
102263: 78 17 6f                 u8 [sp + 0x6f] = a0
102266: 33 00 9c 04              ra = 0x49c
102270: 0a                       ecalli 0 // 'gas'
102271: 7b 17 48                 u64 [sp + 0x48] = a0
102274: 28 06                    jump @8038
      :                          @8037 [@dyn 590]
102276: 7b 17 48                 u64 [sp + 0x48] = a0
102279: 01                       fallthrough
      :                          @8038
102280: 84 67 ff 00              a0 = s1 & 0xff
102284: 97 77 02                 a0 = a0 << 0x2
102287: 33 08 00 00 01           a1 = 0x10000
102292: c8 87 07                 a0 = a0 + a1
102295: 81 77                    a0 = i32 [a0]
102297: 32 07                    jump [a0]
      :                          @8039 [@dyn 591]
102299: 3a 08 70 02 03           a1 = u64 [0x30270]
102304: 97 89 0d                 a2 = a1 << 0xd
102307: d3 98 08                 a1 = a1 ^ a2
102310: 98 89 07                 a2 = a1 >> 0x7
102313: d3 98 08                 a1 = a1 ^ a2
102316: 97 89 11                 a2 = a1 << 0x11
102319: d3 98 08                 a1 = a1 ^ a2
102322: 3a 09 58 01 03           a2 = u64 [0x30158]
102327: 3a 0a 68 01 03           a3 = u64 [0x30168]
102332: 3e 08 70 02 03           u64 [0x30270] = a1
102337: ca 98 07                 a0 = a1 * a2
102340: 98 78 01                 a1 = a0 >> 0x1
102343: d6 a8 08                 a1 = a1 mulhu a3
102346: 98 88 04                 a1 = a1 >> 0x4
102349: 96 88 32                 a1 = a1 * 0x32
102352: c9 87 0a                 a3 = a0 - a1
102355: 7a 1a 10 01              u32 [sp + 0x110] = a3
102359: 33 07 02                 a0 = 0x2
102362: 33 08 02                 a1 = 0x2
102365: 52 0a 07                 jump @8041 if a3 != 0
      :                          @8040
102368: 28 2b 5f 01              jump @13077
      :                          @8041
102372: 33 08 01                 a1 = 0x1
102375: aa 8a 07                 jump @8043 if a3 == a1
      :                          @8042
102378: 28 ff 5e 01              jump @13075
      :                          @8043
102382: 33 08 01                 a1 = 0x1
102385: 28 1a 5f 01              jump @13077
      :                          @8044 [@dyn 592]
102389: 3a 08 70 02 03           a1 = u64 [0x30270]
102394: 97 89 0d                 a2 = a1 << 0xd
102397: d3 98 08                 a1 = a1 ^ a2
102400: 98 89 07                 a2 = a1 >> 0x7
102403: d3 98 08                 a1 = a1 ^ a2
102406: 3a 09 58 01 03           a2 = u64 [0x30158]
102411: 97 8a 11                 a3 = a1 << 0x11
102414: d3 a8 08                 a1 = a1 ^ a3
102417: ca 98 09                 a2 = a1 * a2
102420: 3e 08 70 02 03           u64 [0x30270] = a1
102425: 14 07 89 88 88 88 88 88 88 88 a0 = 0x8888888888888889
102435: d6 79 07                 a0 = a2 mulhu a0
102438: 98 77 04                 a0 = a0 >> 0x4
102441: 96 77 1e                 a0 = a0 * 0x1e
102444: c9 79 08                 a1 = a2 - a0
102447: bf 79 09                 i32 a2 = a2 - a0
102450: 33 07 03                 a0 = 0x3
102453: 7a 18 10 01              u32 [sp + 0x110] = a1
102457: ac 79 07                 jump @8046 if a2 <u a0
      :                          @8045
102460: 28 cc 51 01              jump @12863
      :                          @8046
102464: 97 88 03                 a1 = a1 << 0x3
102467: 33 07 f8 2f 01           a0 = 0x12ff8
102472: c8 87 07                 a0 = a0 + a1
102475: 82 7b                    a4 = u64 [a0]
102477: 28 e2 51 01              jump @12865
      :                          @8047 [@dyn 593]
102481: 3a 08 70 02 03           a1 = u64 [0x30270]
102486: 97 89 0d                 a2 = a1 << 0xd
102489: d3 98 08                 a1 = a1 ^ a2
102492: 98 89 07                 a2 = a1 >> 0x7
102495: d3 98 08                 a1 = a1 ^ a2
102498: 3a 09 58 01 03           a2 = u64 [0x30158]
102503: 97 8a 11                 a3 = a1 << 0x11
102506: d3 a8 08                 a1 = a1 ^ a3
102509: ca 98 09                 a2 = a1 * a2
102512: 3e 08 70 02 03           u64 [0x30270] = a1
102517: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
102527: d6 79 07                 a0 = a2 mulhu a0
102530: 98 77 05                 a0 = a0 >> 0x5
102533: 96 77 28                 a0 = a0 * 0x28
102536: c9 79 09                 a2 = a2 - a0
102539: 7a 19 10 01              u32 [sp + 0x110] = a2
102543: 52 09 07                 jump @8049 if a2 != 0
      :                          @8048
102546: 28 1f 5f 01              jump @13087
      :                          @8049
102550: 33 07 01                 a0 = 0x1
102553: aa 79 07                 jump @8051 if a2 == a0
      :                          @8050
102556: 28 19 5f 01              jump @13088
      :                          @8051
102560: 33 07 01                 a0 = 0x1
102563: 28 36 5f 01              jump @13090
      :                          @8052 [@dyn 594]
102567: 3a 09 70 02 03           a2 = u64 [0x30270]
102572: 3a 08 58 01 03           a1 = u64 [0x30158]
102577: 97 9a 0d                 a3 = a2 << 0xd
102580: d3 a9 09                 a2 = a2 ^ a3
102583: 98 9a 07                 a3 = a2 >> 0x7
102586: d3 a9 09                 a2 = a2 ^ a3
102589: 97 9a 11                 a3 = a2 << 0x11
102592: d3 a9 09                 a2 = a2 ^ a3
102595: ca 89 0a                 a3 = a2 * a1
102598: 3e 09 70 02 03           u64 [0x30270] = a2
102603: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
102613: d6 9a 09                 a2 = a3 mulhu a2
102616: 98 99 04                 a2 = a2 >> 0x4
102619: 33 0b 14                 a4 = 0x14
102622: ca b9 09                 a2 = a2 * a4
102625: c9 9a 0a                 a3 = a3 - a2
102628: 7b 1a b8 01              u64 [sp + 0x1b8] = a3
102632: 3a 09 70 02 03           a2 = u64 [0x30270]
102637: 97 9a 0d                 a3 = a2 << 0xd
102640: d3 a9 09                 a2 = a2 ^ a3
102643: 98 9a 07                 a3 = a2 >> 0x7
102646: d3 a9 09                 a2 = a2 ^ a3
102649: 97 9a 11                 a3 = a2 << 0x11
102652: d3 a9 09                 a2 = a2 ^ a3
102655: 3e 09 70 02 03           u64 [0x30270] = a2
102660: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
102664: 95 7a 01                 a3 = a0 + 0x1
102667: 52 0a 07                 jump @8054 if a3 != 0
      :                          @8053
102670: 28 44 62 01              jump @13226
      :                          @8054
102674: ca 89 08                 a1 = a2 * a1
102677: cd a8 08                 a1 = a1 %u a3
102680: 7b 18 10 01              u64 [sp + 0x110] = a1
102684: 50 20 a6 04 3b 49 ff     ra = 1190, jump @4196
      :                          @8055 [@dyn 595]
102691: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
102695: 95 17 b8 01              a0 = sp + 0x1b8
102699: 7b 17 80 02              u64 [sp + 0x280] = a0
102703: 33 07 28 0c              a0 = 0xc28
102707: 7b 17 88 02              u64 [sp + 0x288] = a0
102711: 95 18 10 01              a1 = sp + 0x110
102715: 7b 18 90 02              u64 [sp + 0x290] = a1
102719: 7b 17 98 02              u64 [sp + 0x298] = a0
102723: 95 17 d0 01              a0 = sp + 0x1d0
102727: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
102731: 33 07 94 0c              a0 = 0xc94
102735: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
102739: 33 07 78 06 01           a0 = 0x10678
102744: 7b 17 28 02              u64 [sp + 0x228] = a0
102748: 49 21 30 02 03           u64 [sp + 560] = 0x3
102753: 49 21 48 02              u64 [sp + 584] = 0
102757: 95 18 80 02              a1 = sp + 0x280
102761: 7b 18 38 02              u64 [sp + 0x238] = a1
102765: 49 21 40 02 03           u64 [sp + 576] = 0x3
102770: 95 17 f8 01              a0 = sp + 0x1f8
102774: 95 18 28 02              a1 = sp + 0x228
102778: 50 20 a8 04 cd bd fe     ra = 1192, jump @1491
      :                          @8056 [@dyn 596]
102785: 82 16 00 02              s1 = u64 [sp + 0x200]
102789: 82 1b 08 02              a4 = u64 [sp + 0x208]
102793: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
102797: 7b 17 60                 u64 [sp + 0x60] = a0
102800: 33 07 02                 a0 = 0x2
102803: 33 08                    a1 = 0
102805: 33 09                    a2 = 0
102807: 64 6a                    a3 = s1
102809: 33 00 aa 04              ra = 0x4aa
102813: 0a 64                    ecalli 100 // 'log'
102815: 01                       fallthrough
      :                          @8057 [@dyn 597]
102816: 82 1c 60                 a5 = u64 [sp + 0x60]
102819: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
102824: 55 38 00 00 f0 0a        jump @8059 if a1 >=u 4293918720
      :                          @8058
102830: 28 3d 50 01              jump @12862
      :                          @8059
102834: 33 07 b0 02 03           a0 = 0x302b0
102839: 95 77 00 00 10           a0 = a0 + 0x100000
102844: 01                       fallthrough
      :                          @8060
102845: 82 78                    a1 = u64 [a0]
102847: c9 87 09                 a2 = a0 - a1
102850: aa 69 07                 jump @8062 if a2 == s1
      :                          @8061
102853: 28 26 50 01              jump @12862
      :                          @8062
102857: c9 c8 09                 a2 = a1 - a5
102860: 01                       fallthrough
      :                          @8063
102861: 82 7a                    a3 = u64 [a0]
102863: ab 8a ee                 jump @8060 if a3 != a1
      :                          @8064
102866: 7b 79                    u64 [a0] = a2
102868: 33 0b                    a4 = 0
102870: 01                       fallthrough
      :                          @8065
102871: ab 8a e6                 jump @8060 if a3 != a1
      :                          @8066
102874: 28 11 50 01              jump @12862
      :                          @8067 [@dyn 598]
102878: 3a 09 70 02 03           a2 = u64 [0x30270]
102883: 3a 08 58 01 03           a1 = u64 [0x30158]
102888: 97 9a 0d                 a3 = a2 << 0xd
102891: d3 a9 09                 a2 = a2 ^ a3
102894: 98 9a 07                 a3 = a2 >> 0x7
102897: d3 a9 09                 a2 = a2 ^ a3
102900: 97 9a 11                 a3 = a2 << 0x11
102903: d3 a9 09                 a2 = a2 ^ a3
102906: ca 89 0a                 a3 = a2 * a1
102909: 3e 09 70 02 03           u64 [0x30270] = a2
102914: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
102924: d6 9a 09                 a2 = a3 mulhu a2
102927: 98 99 04                 a2 = a2 >> 0x4
102930: 33 0b 14                 a4 = 0x14
102933: ca b9 09                 a2 = a2 * a4
102936: c9 9a 0a                 a3 = a3 - a2
102939: 7b 1a b8 01              u64 [sp + 0x1b8] = a3
102943: 3a 09 70 02 03           a2 = u64 [0x30270]
102948: 97 9a 0d                 a3 = a2 << 0xd
102951: d3 a9 09                 a2 = a2 ^ a3
102954: 98 9a 07                 a3 = a2 >> 0x7
102957: d3 a9 09                 a2 = a2 ^ a3
102960: 97 9a 11                 a3 = a2 << 0x11
102963: d3 a9 09                 a2 = a2 ^ a3
102966: 3e 09 70 02 03           u64 [0x30270] = a2
102971: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
102975: 95 7a 01                 a3 = a0 + 0x1
102978: 52 0a 07                 jump @8069 if a3 != 0
      :                          @8068
102981: 28 0d 61 01              jump @13226
      :                          @8069
102985: ca 89 08                 a1 = a2 * a1
102988: cd a8 08                 a1 = a1 %u a3
102991: 7b 18 10 01              u64 [sp + 0x110] = a1
102995: 50 20 ae 04 2a 4a ff     ra = 1198, jump @4254
      :                          @8070 [@dyn 599]
103002: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
103006: 95 17 b8 01              a0 = sp + 0x1b8
103010: 7b 17 80 02              u64 [sp + 0x280] = a0
103014: 33 07 28 0c              a0 = 0xc28
103018: 7b 17 88 02              u64 [sp + 0x288] = a0
103022: 95 18 10 01              a1 = sp + 0x110
103026: 7b 18 90 02              u64 [sp + 0x290] = a1
103030: 7b 17 98 02              u64 [sp + 0x298] = a0
103034: 95 18 d0 01              a1 = sp + 0x1d0
103038: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
103042: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
103046: 33 07 b8 06 01           a0 = 0x106b8
103051: 7b 17 28 02              u64 [sp + 0x228] = a0
103055: 49 21 30 02 03           u64 [sp + 560] = 0x3
103060: 49 21 48 02              u64 [sp + 584] = 0
103064: 95 18 80 02              a1 = sp + 0x280
103068: 7b 18 38 02              u64 [sp + 0x238] = a1
103072: 49 21 40 02 03           u64 [sp + 576] = 0x3
103077: 95 17 f8 01              a0 = sp + 0x1f8
103081: 95 18 28 02              a1 = sp + 0x228
103085: 50 20 b0 04 9a bc fe     ra = 1200, jump @1491
      :                          @8071 [@dyn 600]
103092: 82 16 00 02              s1 = u64 [sp + 0x200]
103096: 82 1b 08 02              a4 = u64 [sp + 0x208]
103100: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
103104: 7b 17 60                 u64 [sp + 0x60] = a0
103107: 33 07 02                 a0 = 0x2
103110: 33 08                    a1 = 0
103112: 33 09                    a2 = 0
103114: 64 6a                    a3 = s1
103116: 33 00 b2 04              ra = 0x4b2
103120: 0a 64                    ecalli 100 // 'log'
103122: 01                       fallthrough
      :                          @8072 [@dyn 601]
103123: 82 1c 60                 a5 = u64 [sp + 0x60]
103126: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
103131: 55 38 00 00 f0 0a        jump @8074 if a1 >=u 4293918720
      :                          @8073
103137: 28 0a 4f 01              jump @12862
      :                          @8074
103141: 33 07 b0 02 03           a0 = 0x302b0
103146: 95 77 00 00 10           a0 = a0 + 0x100000
103151: 01                       fallthrough
      :                          @8075
103152: 82 78                    a1 = u64 [a0]
103154: c9 87 09                 a2 = a0 - a1
103157: aa 69 07                 jump @8077 if a2 == s1
      :                          @8076
103160: 28 f3 4e 01              jump @12862
      :                          @8077
103164: c9 c8 09                 a2 = a1 - a5
103167: 01                       fallthrough
      :                          @8078
103168: 82 7a                    a3 = u64 [a0]
103170: ab 8a ee                 jump @8075 if a3 != a1
      :                          @8079
103173: 7b 79                    u64 [a0] = a2
103175: 33 0b                    a4 = 0
103177: 01                       fallthrough
      :                          @8080
103178: ab 8a e6                 jump @8075 if a3 != a1
      :                          @8081
103181: 28 de 4e 01              jump @12862
      :                          @8082 [@dyn 602]
103185: 3a 08 70 02 03           a1 = u64 [0x30270]
103190: 97 89 0d                 a2 = a1 << 0xd
103193: d3 98 08                 a1 = a1 ^ a2
103196: 98 89 07                 a2 = a1 >> 0x7
103199: d3 98 08                 a1 = a1 ^ a2
103202: 3a 09 58 01 03           a2 = u64 [0x30158]
103207: 97 8a 11                 a3 = a1 << 0x11
103210: d3 a8 08                 a1 = a1 ^ a3
103213: ca 98 09                 a2 = a1 * a2
103216: 3e 08 70 02 03           u64 [0x30270] = a1
103221: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
103231: d6 79 07                 a0 = a2 mulhu a0
103234: 98 77 04                 a0 = a0 >> 0x4
103237: 96 77 14                 a0 = a0 * 0x14
103240: c9 79 07                 a0 = a2 - a0
103243: 7b 17 10 01              u64 [sp + 0x110] = a0
103247: 33 00 b6 04              ra = 0x4b6
103251: 95 11 98                 sp = sp + 0xffffffffffffff98
103254: 7b 10 60                 u64 [sp + 0x60] = ra
103257: 7b 15 58                 u64 [sp + 0x58] = s0
103260: 7b 16 50                 u64 [sp + 0x50] = s1
103263: 7b 17 08                 u64 [sp + 0x8] = a0
103266: 95 77 01                 a0 = a0 + 0x1
103269: 7b 17 18                 u64 [sp + 0x18] = a0
103272: 97 79 03                 a2 = a0 << 0x3
103275: 33 07 b0 02 03           a0 = 0x302b0
103280: 33 03 b0 02 03           t1 = 0x302b0
103285: 33 02 00 00 10           t0 = 0x100000
103290: c8 23 0a                 a3 = t1 + t0
103293: 28 21 4b ff              jump @4309
      :                          @8083 [@dyn 603]
103297: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
103301: 95 17 10 01              a0 = sp + 0x110
103305: 7b 17 28 02              u64 [sp + 0x228] = a0
103309: 33 07 28 0c              a0 = 0xc28
103313: 7b 17 30 02              u64 [sp + 0x230] = a0
103317: 95 18 d0 01              a1 = sp + 0x1d0
103321: 7b 18 38 02              u64 [sp + 0x238] = a1
103325: 7b 17 40 02              u64 [sp + 0x240] = a0
103329: 33 07 f0 06 01           a0 = 0x106f0
103334: 7b 17 80 02              u64 [sp + 0x280] = a0
103338: 49 21 88 02 02           u64 [sp + 648] = 0x2
103343: 49 21 a0 02              u64 [sp + 672] = 0
103347: 95 18 28 02              a1 = sp + 0x228
103351: 7b 18 90 02              u64 [sp + 0x290] = a1
103355: 49 21 98 02 02           u64 [sp + 664] = 0x2
103360: 95 17 f8 01              a0 = sp + 0x1f8
103364: 95 18 80 02              a1 = sp + 0x280
103368: 50 20 b8 04 7f bb fe     ra = 1208, jump @1491
      :                          @8084 [@dyn 604]
103375: 82 16 00 02              s1 = u64 [sp + 0x200]
103379: 82 1b 08 02              a4 = u64 [sp + 0x208]
103383: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
103387: 7b 17 60                 u64 [sp + 0x60] = a0
103390: 33 07 02                 a0 = 0x2
103393: 33 08                    a1 = 0
103395: 33 09                    a2 = 0
103397: 64 6a                    a3 = s1
103399: 33 00 ba 04              ra = 0x4ba
103403: 0a 64                    ecalli 100 // 'log'
103405: 01                       fallthrough
      :                          @8085 [@dyn 605]
103406: 82 1c 60                 a5 = u64 [sp + 0x60]
103409: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
103414: 55 38 00 00 f0 0a        jump @8087 if a1 >=u 4293918720
      :                          @8086
103420: 28 ef 4d 01              jump @12862
      :                          @8087
103424: 33 07 b0 02 03           a0 = 0x302b0
103429: 95 77 00 00 10           a0 = a0 + 0x100000
103434: 01                       fallthrough
      :                          @8088
103435: 82 78                    a1 = u64 [a0]
103437: c9 87 09                 a2 = a0 - a1
103440: aa 69 07                 jump @8090 if a2 == s1
      :                          @8089
103443: 28 d8 4d 01              jump @12862
      :                          @8090
103447: c9 c8 09                 a2 = a1 - a5
103450: 01                       fallthrough
      :                          @8091
103451: 82 7a                    a3 = u64 [a0]
103453: ab 8a ee                 jump @8088 if a3 != a1
      :                          @8092
103456: 7b 79                    u64 [a0] = a2
103458: 33 0b                    a4 = 0
103460: 01                       fallthrough
      :                          @8093
103461: ab 8a e6                 jump @8088 if a3 != a1
      :                          @8094
103464: 28 c3 4d 01              jump @12862
      :                          @8095 [@dyn 606]
103468: 3a 08 70 02 03           a1 = u64 [0x30270]
103473: 97 89 0d                 a2 = a1 << 0xd
103476: d3 98 08                 a1 = a1 ^ a2
103479: 98 89 07                 a2 = a1 >> 0x7
103482: d3 98 08                 a1 = a1 ^ a2
103485: 3a 09 58 01 03           a2 = u64 [0x30158]
103490: 97 8a 11                 a3 = a1 << 0x11
103493: d3 a8 08                 a1 = a1 ^ a3
103496: ca 98 09                 a2 = a1 * a2
103499: 3e 08 70 02 03           u64 [0x30270] = a1
103504: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
103514: d6 79 07                 a0 = a2 mulhu a0
103517: 98 77 04                 a0 = a0 >> 0x4
103520: 33 08 14                 a1 = 0x14
103523: ca 87 07                 a0 = a0 * a1
103526: c9 79 07                 a0 = a2 - a0
103529: 7a 17 10 01              u32 [sp + 0x110] = a0
103533: 50 20 be 04 07 4c ff     ra = 1214, jump @4360
      :                          @8096 [@dyn 607]
103540: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
103544: 95 17 10 01              a0 = sp + 0x110
103548: 7b 17 28 02              u64 [sp + 0x228] = a0
103552: 33 07 5e 0c              a0 = 0xc5e
103556: 7b 17 30 02              u64 [sp + 0x230] = a0
103560: 95 17 d0 01              a0 = sp + 0x1d0
103564: 7b 17 38 02              u64 [sp + 0x238] = a0
103568: 33 07 28 0c              a0 = 0xc28
103572: 7b 17 40 02              u64 [sp + 0x240] = a0
103576: 33 07 20 07 01           a0 = 0x10720
103581: 7b 17 80 02              u64 [sp + 0x280] = a0
103585: 49 21 88 02 02           u64 [sp + 648] = 0x2
103590: 49 21 a0 02              u64 [sp + 672] = 0
103594: 95 18 28 02              a1 = sp + 0x228
103598: 7b 18 90 02              u64 [sp + 0x290] = a1
103602: 49 21 98 02 02           u64 [sp + 664] = 0x2
103607: 95 17 f8 01              a0 = sp + 0x1f8
103611: 95 18 80 02              a1 = sp + 0x280
103615: 50 20 c0 04 88 ba fe     ra = 1216, jump @1491
      :                          @8097 [@dyn 608]
103622: 82 16 00 02              s1 = u64 [sp + 0x200]
103626: 82 1b 08 02              a4 = u64 [sp + 0x208]
103630: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
103634: 7b 17 60                 u64 [sp + 0x60] = a0
103637: 33 07 02                 a0 = 0x2
103640: 33 08                    a1 = 0
103642: 33 09                    a2 = 0
103644: 64 6a                    a3 = s1
103646: 33 00 c2 04              ra = 0x4c2
103650: 0a 64                    ecalli 100 // 'log'
103652: 01                       fallthrough
      :                          @8098 [@dyn 609]
103653: 82 1c 60                 a5 = u64 [sp + 0x60]
103656: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
103661: 55 38 00 00 f0 0a        jump @8100 if a1 >=u 4293918720
      :                          @8099
103667: 28 f8 4c 01              jump @12862
      :                          @8100
103671: 33 07 b0 02 03           a0 = 0x302b0
103676: 95 77 00 00 10           a0 = a0 + 0x100000
103681: 01                       fallthrough
      :                          @8101
103682: 82 78                    a1 = u64 [a0]
103684: c9 87 09                 a2 = a0 - a1
103687: aa 69 07                 jump @8103 if a2 == s1
      :                          @8102
103690: 28 e1 4c 01              jump @12862
      :                          @8103
103694: c9 c8 09                 a2 = a1 - a5
103697: 01                       fallthrough
      :                          @8104
103698: 82 7a                    a3 = u64 [a0]
103700: ab 8a ee                 jump @8101 if a3 != a1
      :                          @8105
103703: 7b 79                    u64 [a0] = a2
103705: 33 0b                    a4 = 0
103707: 01                       fallthrough
      :                          @8106
103708: ab 8a e6                 jump @8101 if a3 != a1
      :                          @8107
103711: 28 cc 4c 01              jump @12862
      :                          @8108 [@dyn 610]
103715: 3a 09 70 02 03           a2 = u64 [0x30270]
103720: 3a 08 58 01 03           a1 = u64 [0x30158]
103725: 97 9a 0d                 a3 = a2 << 0xd
103728: d3 a9 09                 a2 = a2 ^ a3
103731: 98 9a 07                 a3 = a2 >> 0x7
103734: d3 a9 09                 a2 = a2 ^ a3
103737: 97 9a 11                 a3 = a2 << 0x11
103740: d3 a9 09                 a2 = a2 ^ a3
103743: ca 89 0a                 a3 = a2 * a1
103746: 3e 09 70 02 03           u64 [0x30270] = a2
103751: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
103761: d6 9a 09                 a2 = a3 mulhu a2
103764: 98 99 04                 a2 = a2 >> 0x4
103767: 33 0b 14                 a4 = 0x14
103770: ca b9 09                 a2 = a2 * a4
103773: c9 9a 0a                 a3 = a3 - a2
103776: 95 aa 01                 a3 = a3 + 0x1
103779: 7b 1a b8 01              u64 [sp + 0x1b8] = a3
103783: 3a 09 70 02 03           a2 = u64 [0x30270]
103788: 97 9a 0d                 a3 = a2 << 0xd
103791: d3 a9 09                 a2 = a2 ^ a3
103794: 98 9a 07                 a3 = a2 >> 0x7
103797: d3 a9 09                 a2 = a2 ^ a3
103800: 97 9a 11                 a3 = a2 << 0x11
103803: d3 a9 09                 a2 = a2 ^ a3
103806: 3e 09 70 02 03           u64 [0x30270] = a2
103811: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
103815: 52 07 07                 jump @8110 if a0 != 0
      :                          @8109
103818: 28 c8 5d 01              jump @13226
      :                          @8110
103822: ca 89 08                 a1 = a2 * a1
103825: cd 78 08                 a1 = a1 %u a0
103828: 7b 18 10 01              u64 [sp + 0x110] = a1
103832: 50 20 c6 04 19 4b ff     ra = 1222, jump @4366
      :                          @8111 [@dyn 611]
103839: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
103843: 95 17 b8 01              a0 = sp + 0x1b8
103847: 7b 17 80 02              u64 [sp + 0x280] = a0
103851: 33 07 28 0c              a0 = 0xc28
103855: 7b 17 88 02              u64 [sp + 0x288] = a0
103859: 95 18 10 01              a1 = sp + 0x110
103863: 7b 18 90 02              u64 [sp + 0x290] = a1
103867: 7b 17 98 02              u64 [sp + 0x298] = a0
103871: 95 18 d0 01              a1 = sp + 0x1d0
103875: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
103879: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
103883: 33 07 50 07 01           a0 = 0x10750
103888: 7b 17 28 02              u64 [sp + 0x228] = a0
103892: 49 21 30 02 03           u64 [sp + 560] = 0x3
103897: 49 21 48 02              u64 [sp + 584] = 0
103901: 95 18 80 02              a1 = sp + 0x280
103905: 7b 18 38 02              u64 [sp + 0x238] = a1
103909: 49 21 40 02 03           u64 [sp + 576] = 0x3
103914: 95 17 f8 01              a0 = sp + 0x1f8
103918: 95 18 28 02              a1 = sp + 0x228
103922: 50 20 c8 04 55 b9 fe     ra = 1224, jump @1491
      :                          @8112 [@dyn 612]
103929: 82 16 00 02              s1 = u64 [sp + 0x200]
103933: 82 1b 08 02              a4 = u64 [sp + 0x208]
103937: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
103941: 7b 17 60                 u64 [sp + 0x60] = a0
103944: 33 07 02                 a0 = 0x2
103947: 33 08                    a1 = 0
103949: 33 09                    a2 = 0
103951: 64 6a                    a3 = s1
103953: 33 00 ca 04              ra = 0x4ca
103957: 0a 64                    ecalli 100 // 'log'
103959: 01                       fallthrough
      :                          @8113 [@dyn 613]
103960: 82 1c 60                 a5 = u64 [sp + 0x60]
103963: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
103968: 55 38 00 00 f0 0a        jump @8115 if a1 >=u 4293918720
      :                          @8114
103974: 28 c5 4b 01              jump @12862
      :                          @8115
103978: 33 07 b0 02 03           a0 = 0x302b0
103983: 95 77 00 00 10           a0 = a0 + 0x100000
103988: 01                       fallthrough
      :                          @8116
103989: 82 78                    a1 = u64 [a0]
103991: c9 87 09                 a2 = a0 - a1
103994: aa 69 07                 jump @8118 if a2 == s1
      :                          @8117
103997: 28 ae 4b 01              jump @12862
      :                          @8118
104001: c9 c8 09                 a2 = a1 - a5
104004: 01                       fallthrough
      :                          @8119
104005: 82 7a                    a3 = u64 [a0]
104007: ab 8a ee                 jump @8116 if a3 != a1
      :                          @8120
104010: 7b 79                    u64 [a0] = a2
104012: 33 0b                    a4 = 0
104014: 01                       fallthrough
      :                          @8121
104015: ab 8a e6                 jump @8116 if a3 != a1
      :                          @8122
104018: 28 99 4b 01              jump @12862
      :                          @8123 [@dyn 614]
104022: 3a 09 70 02 03           a2 = u64 [0x30270]
104027: 3a 08 58 01 03           a1 = u64 [0x30158]
104032: 97 9a 0d                 a3 = a2 << 0xd
104035: d3 a9 09                 a2 = a2 ^ a3
104038: 98 9a 07                 a3 = a2 >> 0x7
104041: d3 a9 09                 a2 = a2 ^ a3
104044: 97 9a 11                 a3 = a2 << 0x11
104047: d3 a9 09                 a2 = a2 ^ a3
104050: ca 89 0a                 a3 = a2 * a1
104053: 3e 09 70 02 03           u64 [0x30270] = a2
104058: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
104068: d6 9a 09                 a2 = a3 mulhu a2
104071: 98 99 04                 a2 = a2 >> 0x4
104074: 33 0b 14                 a4 = 0x14
104077: ca b9 09                 a2 = a2 * a4
104080: c9 9a 0a                 a3 = a3 - a2
104083: 95 aa 01                 a3 = a3 + 0x1
104086: 7b 1a b8 01              u64 [sp + 0x1b8] = a3
104090: 3a 09 70 02 03           a2 = u64 [0x30270]
104095: 97 9a 0d                 a3 = a2 << 0xd
104098: d3 a9 09                 a2 = a2 ^ a3
104101: 98 9a 07                 a3 = a2 >> 0x7
104104: d3 a9 09                 a2 = a2 ^ a3
104107: 97 9a 11                 a3 = a2 << 0x11
104110: d3 a9 09                 a2 = a2 ^ a3
104113: 3e 09 70 02 03           u64 [0x30270] = a2
104118: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
104122: 52 07 07                 jump @8125 if a0 != 0
      :                          @8124
104125: 28 95 5c 01              jump @13226
      :                          @8125
104129: ca 89 08                 a1 = a2 * a1
104132: cd 78 08                 a1 = a1 %u a0
104135: 95 88 01                 a1 = a1 + 0x1
104138: 7b 18 10 01              u64 [sp + 0x110] = a1
104142: 50 20 ce 04 6c 4c ff     ra = 1230, jump @4446
      :                          @8126 [@dyn 615]
104149: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
104153: 95 17 b8 01              a0 = sp + 0x1b8
104157: 7b 17 80 02              u64 [sp + 0x280] = a0
104161: 33 07 28 0c              a0 = 0xc28
104165: 7b 17 88 02              u64 [sp + 0x288] = a0
104169: 95 18 10 01              a1 = sp + 0x110
104173: 7b 18 90 02              u64 [sp + 0x290] = a1
104177: 7b 17 98 02              u64 [sp + 0x298] = a0
104181: 95 18 d0 01              a1 = sp + 0x1d0
104185: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
104189: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
104193: 33 07 90 07 01           a0 = 0x10790
104198: 7b 17 28 02              u64 [sp + 0x228] = a0
104202: 49 21 30 02 03           u64 [sp + 560] = 0x3
104207: 49 21 48 02              u64 [sp + 584] = 0
104211: 95 18 80 02              a1 = sp + 0x280
104215: 7b 18 38 02              u64 [sp + 0x238] = a1
104219: 49 21 40 02 03           u64 [sp + 576] = 0x3
104224: 95 17 f8 01              a0 = sp + 0x1f8
104228: 95 18 28 02              a1 = sp + 0x228
104232: 50 20 d0 04 1f b8 fe     ra = 1232, jump @1491
      :                          @8127 [@dyn 616]
104239: 82 16 00 02              s1 = u64 [sp + 0x200]
104243: 82 1b 08 02              a4 = u64 [sp + 0x208]
104247: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
104251: 7b 17 60                 u64 [sp + 0x60] = a0
104254: 33 07 02                 a0 = 0x2
104257: 33 08                    a1 = 0
104259: 33 09                    a2 = 0
104261: 64 6a                    a3 = s1
104263: 33 00 d2 04              ra = 0x4d2
104267: 0a 64                    ecalli 100 // 'log'
104269: 01                       fallthrough
      :                          @8128 [@dyn 617]
104270: 82 1c 60                 a5 = u64 [sp + 0x60]
104273: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
104278: 55 38 00 00 f0 0a        jump @8130 if a1 >=u 4293918720
      :                          @8129
104284: 28 8f 4a 01              jump @12862
      :                          @8130
104288: 33 07 b0 02 03           a0 = 0x302b0
104293: 95 77 00 00 10           a0 = a0 + 0x100000
104298: 01                       fallthrough
      :                          @8131
104299: 82 78                    a1 = u64 [a0]
104301: c9 87 09                 a2 = a0 - a1
104304: aa 69 07                 jump @8133 if a2 == s1
      :                          @8132
104307: 28 78 4a 01              jump @12862
      :                          @8133
104311: c9 c8 09                 a2 = a1 - a5
104314: 01                       fallthrough
      :                          @8134
104315: 82 7a                    a3 = u64 [a0]
104317: ab 8a ee                 jump @8131 if a3 != a1
      :                          @8135
104320: 7b 79                    u64 [a0] = a2
104322: 33 0b                    a4 = 0
104324: 01                       fallthrough
      :                          @8136
104325: ab 8a e6                 jump @8131 if a3 != a1
      :                          @8137
104328: 28 63 4a 01              jump @12862
      :                          @8138 [@dyn 618]
104332: 3a 08 70 02 03           a1 = u64 [0x30270]
104337: 97 89 0d                 a2 = a1 << 0xd
104340: d3 98 08                 a1 = a1 ^ a2
104343: 98 89 07                 a2 = a1 >> 0x7
104346: d3 98 08                 a1 = a1 ^ a2
104349: 3a 09 58 01 03           a2 = u64 [0x30158]
104354: 97 8a 11                 a3 = a1 << 0x11
104357: d3 a8 08                 a1 = a1 ^ a3
104360: ca 98 09                 a2 = a1 * a2
104363: 3e 08 70 02 03           u64 [0x30270] = a1
104368: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
104378: d6 79 07                 a0 = a2 mulhu a0
104381: 98 77 04                 a0 = a0 >> 0x4
104384: 96 77 14                 a0 = a0 * 0x14
104387: c9 79 07                 a0 = a2 - a0
104390: 7b 17 10 01              u64 [sp + 0x110] = a0
104394: 50 20 d6 04 f3 4b ff     ra = 1238, jump @4455
      :                          @8139 [@dyn 619]
104401: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
104405: 95 17 10 01              a0 = sp + 0x110
104409: 7b 17 28 02              u64 [sp + 0x228] = a0
104413: 33 07 28 0c              a0 = 0xc28
104417: 7b 17 30 02              u64 [sp + 0x230] = a0
104421: 95 18 d0 01              a1 = sp + 0x1d0
104425: 7b 18 38 02              u64 [sp + 0x238] = a1
104429: 7b 17 40 02              u64 [sp + 0x240] = a0
104433: 33 07 c0 07 01           a0 = 0x107c0
104438: 7b 17 80 02              u64 [sp + 0x280] = a0
104442: 49 21 88 02 02           u64 [sp + 648] = 0x2
104447: 49 21 a0 02              u64 [sp + 672] = 0
104451: 95 18 28 02              a1 = sp + 0x228
104455: 7b 18 90 02              u64 [sp + 0x290] = a1
104459: 49 21 98 02 02           u64 [sp + 664] = 0x2
104464: 95 17 f8 01              a0 = sp + 0x1f8
104468: 95 18 80 02              a1 = sp + 0x280
104472: 50 20 d8 04 2f b7 fe     ra = 1240, jump @1491
      :                          @8140 [@dyn 620]
104479: 82 16 00 02              s1 = u64 [sp + 0x200]
104483: 82 1b 08 02              a4 = u64 [sp + 0x208]
104487: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
104491: 7b 17 60                 u64 [sp + 0x60] = a0
104494: 33 07 02                 a0 = 0x2
104497: 33 08                    a1 = 0
104499: 33 09                    a2 = 0
104501: 64 6a                    a3 = s1
104503: 33 00 da 04              ra = 0x4da
104507: 0a 64                    ecalli 100 // 'log'
104509: 01                       fallthrough
      :                          @8141 [@dyn 621]
104510: 82 1c 60                 a5 = u64 [sp + 0x60]
104513: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
104518: 55 38 00 00 f0 0a        jump @8143 if a1 >=u 4293918720
      :                          @8142
104524: 28 9f 49 01              jump @12862
      :                          @8143
104528: 33 07 b0 02 03           a0 = 0x302b0
104533: 95 77 00 00 10           a0 = a0 + 0x100000
104538: 01                       fallthrough
      :                          @8144
104539: 82 78                    a1 = u64 [a0]
104541: c9 87 09                 a2 = a0 - a1
104544: aa 69 07                 jump @8146 if a2 == s1
      :                          @8145
104547: 28 88 49 01              jump @12862
      :                          @8146
104551: c9 c8 09                 a2 = a1 - a5
104554: 01                       fallthrough
      :                          @8147
104555: 82 7a                    a3 = u64 [a0]
104557: ab 8a ee                 jump @8144 if a3 != a1
      :                          @8148
104560: 7b 79                    u64 [a0] = a2
104562: 33 0b                    a4 = 0
104564: 01                       fallthrough
      :                          @8149
104565: ab 8a e6                 jump @8144 if a3 != a1
      :                          @8150
104568: 28 73 49 01              jump @12862
      :                          @8151 [@dyn 622]
104572: 95 17 80 02              a0 = sp + 0x280
104576: 33 09 04                 a2 = 0x4
104579: 33 08                    a1 = 0
104581: 50 20 de 04 6d cb fe     ra = 1246, jump @1877
      :                          @8152 [@dyn 623]
104588: 95 17 10 01              a0 = sp + 0x110
104592: 95 18 80 02              a1 = sp + 0x280
104596: 33 09 04                 a2 = 0x4
104599: 50 20 e0 04 85 c5 fe     ra = 1248, jump @1783
      :                          @8153 [@dyn 624]
104606: 33 04 04                 t2 = 0x4
104609: 33 07                    a0 = 0
104611: 33 0c 10                 a5 = 0x10
104614: 33 0a 70 02 03           a3 = 0x30270
104619: 33 02 02                 t0 = 0x2
104622: 33 03 03                 t1 = 0x3
104625: 33 06 70                 s1 = 0x70
104628: 01                       fallthrough
      :                          @8154
104629: 3a 08 70 02 03           a1 = u64 [0x30270]
104634: 97 89 0d                 a2 = a1 << 0xd
104637: d3 98 08                 a1 = a1 ^ a2
104640: 98 8b 07                 a4 = a1 >> 0x7
104643: d3 8b 0b                 a4 = a4 ^ a1
104646: 97 b8 11                 a1 = a4 << 0x11
104649: d3 b8 08                 a1 = a1 ^ a4
104652: 3e 08 70 02 03           u64 [0x30270] = a1
104657: 82 18 20 01              a1 = u64 [sp + 0x120]
104661: ac 87 07                 jump @8156 if a0 <u a1
      :                          @8155
104664: 28 6f 5a 01              jump @13215
      :                          @8156
104668: 82 18 18 01              a1 = u64 [sp + 0x118]
104672: c8 c8 08                 a1 = a1 + a5
104675: 82 89                    a2 = u64 [a1]
104677: 52 09 07                 jump @8158 if a2 != 0
      :                          @8157
104680: 28 5b 5a 01              jump @13213
      :                          @8158
104684: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
104687: 84 bb 01                 a4 = a4 & 0x1
104690: 7b 8b                    u64 [a1] = a4
104692: 3a 08 70 02 03           a1 = u64 [0x30270]
104697: 97 89 0d                 a2 = a1 << 0xd
104700: d3 98 08                 a1 = a1 ^ a2
104703: 98 8b 07                 a4 = a1 >> 0x7
104706: d3 8b 0b                 a4 = a4 ^ a1
104709: 97 b8 11                 a1 = a4 << 0x11
104712: d3 b8 08                 a1 = a1 ^ a4
104715: 3e 08 70 02 03           u64 [0x30270] = a1
104720: 82 18 20 01              a1 = u64 [sp + 0x120]
104724: ac 87 07                 jump @8160 if a0 <u a1
      :                          @8159
104727: 28 30 5a 01              jump @13215
      :                          @8160
104731: 82 19 18 01              a2 = u64 [sp + 0x118]
104735: c8 c9 09                 a2 = a2 + a5
104738: 82 98                    a1 = u64 [a2]
104740: ae 28 07                 jump @8162 if a1 >=u t0
      :                          @8161
104743: 28 58 59 01              jump @13195
      :                          @8162
104747: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
104750: 84 bb 01                 a4 = a4 & 0x1
104753: 7b 8b 08                 u64 [a1 + 0x8] = a4
104756: 3a 08 70 02 03           a1 = u64 [0x30270]
104761: 97 89 0d                 a2 = a1 << 0xd
104764: d3 98 08                 a1 = a1 ^ a2
104767: 98 8b 07                 a4 = a1 >> 0x7
104770: d3 8b 0b                 a4 = a4 ^ a1
104773: 97 b8 11                 a1 = a4 << 0x11
104776: d3 b8 08                 a1 = a1 ^ a4
104779: 3e 08 70 02 03           u64 [0x30270] = a1
104784: 82 18 20 01              a1 = u64 [sp + 0x120]
104788: ac 87 07                 jump @8164 if a0 <u a1
      :                          @8163
104791: 28 f0 59 01              jump @13215
      :                          @8164
104795: 82 19 18 01              a2 = u64 [sp + 0x118]
104799: c8 c9 09                 a2 = a2 + a5
104802: 82 98                    a1 = u64 [a2]
104804: ae 38 07                 jump @8166 if a1 >=u t1
      :                          @8165
104807: 28 1a 59 01              jump @13197
      :                          @8166
104811: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
104814: 84 bb 01                 a4 = a4 & 0x1
104817: 7b 8b 10                 u64 [a1 + 0x10] = a4
104820: 3a 08 70 02 03           a1 = u64 [0x30270]
104825: 97 89 0d                 a2 = a1 << 0xd
104828: d3 98 08                 a1 = a1 ^ a2
104831: 98 8b 07                 a4 = a1 >> 0x7
104834: d3 8b 0b                 a4 = a4 ^ a1
104837: 97 b8 11                 a1 = a4 << 0x11
104840: d3 b8 08                 a1 = a1 ^ a4
104843: 3e 08 70 02 03           u64 [0x30270] = a1
104848: 82 18 20 01              a1 = u64 [sp + 0x120]
104852: ac 87 07                 jump @8168 if a0 <u a1
      :                          @8167
104855: 28 b0 59 01              jump @13215
      :                          @8168
104859: 82 19 18 01              a2 = u64 [sp + 0x118]
104863: c8 c9 09                 a2 = a2 + a5
104866: 82 98                    a1 = u64 [a2]
104868: ae 48 07                 jump @8170 if a1 >=u t2
      :                          @8169
104871: 28 d9 58 01              jump @13196
      :                          @8170
104875: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
104878: 84 bb 01                 a4 = a4 & 0x1
104881: 7b 8b 18                 u64 [a1 + 0x18] = a4
104884: 95 cc 18                 a5 = a5 + 0x18
104887: 95 77 01                 a0 = a0 + 0x1
104890: ab 6c fb fe              jump @8154 if a5 != s1
      :                          @8171
104894: 3a 08 70 02 03           a1 = u64 [0x30270]
104899: 97 89 0d                 a2 = a1 << 0xd
104902: d3 98 08                 a1 = a1 ^ a2
104905: 98 89 07                 a2 = a1 >> 0x7
104908: d3 98 08                 a1 = a1 ^ a2
104911: 3a 09 58 01 03           a2 = u64 [0x30158]
104916: 97 8a 11                 a3 = a1 << 0x11
104919: d3 a8 08                 a1 = a1 ^ a3
104922: ca 98 09                 a2 = a1 * a2
104925: 3e 08 70 02 03           u64 [0x30270] = a1
104930: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
104940: d6 79 07                 a0 = a2 mulhu a0
104943: 98 78 02                 a1 = a0 >> 0x2
104946: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
104949: c8 87 07                 a0 = a0 + a1
104952: bf 79 09                 i32 a2 = a2 - a0
104955: 83 99 01                 i32 a2 = a2 + 0x1
104958: 7a 19 b8 01              u32 [sp + 0x1b8] = a2
104962: 95 17 d0 01              a0 = sp + 0x1d0
104966: 95 18 10 01              a1 = sp + 0x110
104970: 95 16 d0 01              s1 = sp + 0x1d0
104974: 50 20 e2 04 5c 4c ff     ra = 1250, jump @4508
      :                          @8172 [@dyn 625]
104981: 95 17 b8 01              a0 = sp + 0x1b8
104985: 7b 17 28 02              u64 [sp + 0x228] = a0
104989: 33 07 5e 0c              a0 = 0xc5e
104993: 7b 17 30 02              u64 [sp + 0x230] = a0
104997: 7b 16 38 02              u64 [sp + 0x238] = s1
105001: 33 07 30 02              a0 = 0x230
105005: 7b 17 40 02              u64 [sp + 0x240] = a0
105009: 33 07 e8 07 01           a0 = 0x107e8
105014: 7b 17 80 02              u64 [sp + 0x280] = a0
105018: 49 21 88 02 02           u64 [sp + 648] = 0x2
105023: 49 21 a0 02              u64 [sp + 672] = 0
105027: 95 18 28 02              a1 = sp + 0x228
105031: 7b 18 90 02              u64 [sp + 0x290] = a1
105035: 49 21 98 02 02           u64 [sp + 664] = 0x2
105040: 95 17 f8 01              a0 = sp + 0x1f8
105044: 95 18 80 02              a1 = sp + 0x280
105048: 50 20 e4 04 ef b4 fe     ra = 1252, jump @1491
      :                          @8173 [@dyn 626]
105055: 82 16 00 02              s1 = u64 [sp + 0x200]
105059: 82 1b 08 02              a4 = u64 [sp + 0x208]
105063: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
105067: 7b 17 60                 u64 [sp + 0x60] = a0
105070: 33 07 02                 a0 = 0x2
105073: 33 08                    a1 = 0
105075: 33 09                    a2 = 0
105077: 64 6a                    a3 = s1
105079: 33 00 e6 04              ra = 0x4e6
105083: 0a 64                    ecalli 100 // 'log'
105085: 01                       fallthrough
      :                          @8174 [@dyn 627]
105086: 82 1c 60                 a5 = u64 [sp + 0x60]
105089: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
105094: 53 38 00 00 f0 32        jump @8180 if a1 <u 4293918720
      :                          @8175
105100: 33 07 b0 02 03           a0 = 0x302b0
105105: 95 77 00 00 10           a0 = a0 + 0x100000
105110: 01                       fallthrough
      :                          @8176
105111: 82 78                    a1 = u64 [a0]
105113: c9 87 09                 a2 = a0 - a1
105116: ab 69 1c                 jump @8180 if a2 != s1
      :                          @8177
105119: c9 c8 09                 a2 = a1 - a5
105122: 01                       fallthrough
      :                          @8178
105123: 82 7a                    a3 = u64 [a0]
105125: ab 8a f2                 jump @8176 if a3 != a1
      :                          @8179
105128: 7b 79                    u64 [a0] = a2
105130: 33 0b                    a4 = 0
105132: 95 17 d0 01              a0 = sp + 0x1d0
105136: 33 00 e8 04              ra = 0x4e8
105140: 28 a6 71 fe              jump @229
      :                          @8180
105144: 95 17 d0 01              a0 = sp + 0x1d0
105148: 50 20 e8 04 9e 71 fe     ra = 1256, jump @229
      :                          @8181 [@dyn 628]
105155: 95 17 10 01              a0 = sp + 0x110
105159: 50 20 ea 04 93 71 fe     ra = 1258, jump @229
      :                          @8182 [@dyn 629]
105166: 28 1d 47 01              jump @12862
      :                          @8183 [@dyn 630]
105170: 95 17 80 02              a0 = sp + 0x280
105174: 33 08 06                 a1 = 0x6
105177: 50 20 ee 04 d7 c2 fe     ra = 1262, jump @1776
      :                          @8184 [@dyn 631]
105184: 95 17 f8 01              a0 = sp + 0x1f8
105188: 95 18 80 02              a1 = sp + 0x280
105192: 33 09 06                 a2 = 0x6
105195: 50 20 f0 04 e6 c9 fe     ra = 1264, jump @1895
      :                          @8185 [@dyn 632]
105202: 3a 07 70 02 03           a0 = u64 [0x30270]
105207: 97 79 0d                 a2 = a0 << 0xd
105210: d3 97 07                 a0 = a0 ^ a2
105213: 98 79 07                 a2 = a0 >> 0x7
105216: d3 97 07                 a0 = a0 ^ a2
105219: 97 79 11                 a2 = a0 << 0x11
105222: d3 79 09                 a2 = a2 ^ a0
105225: 3e 09 70 02 03           u64 [0x30270] = a2
105230: 82 1c 08 02              a5 = u64 [sp + 0x208]
105234: 52 0c 07                 jump @8187 if a5 != 0
      :                          @8186
105237: 28 3a 58 01              jump @13223
      :                          @8187
105241: 82 1b 00 02              a4 = u64 [sp + 0x200]
105245: 82 b9 10                 a2 = u64 [a4 + 0x10]
105248: 56 19 01 08              jump @8189 if a2 >u 1
      :                          @8188
105252: 28 36 58 01              jump @13234
      :                          @8189
105256: 82 b8 08                 a1 = u64 [a4 + 0x8]
105259: 84 79 01                 a2 = a0 & 0x1
105262: 78 89 01                 u8 [a1 + 0x1] = a2
105265: 56 1c 01 08              jump @8191 if a5 >u 1
      :                          @8190
105269: 28 12 58 01              jump @13215
      :                          @8191
105273: 82 b7 28                 a0 = u64 [a4 + 0x28]
105276: 52 07 07                 jump @8193 if a0 != 0
      :                          @8192
105279: 28 1f 58 01              jump @13238
      :                          @8193
105283: 82 b7 20                 a0 = u64 [a4 + 0x20]
105286: 78 79                    u8 [a0] = a2
105288: 3a 07 70 02 03           a0 = u64 [0x30270]
105293: 97 79 0d                 a2 = a0 << 0xd
105296: d3 97 07                 a0 = a0 ^ a2
105299: 98 79 07                 a2 = a0 >> 0x7
105302: d3 97 07                 a0 = a0 ^ a2
105305: 97 79 11                 a2 = a0 << 0x11
105308: d3 79 09                 a2 = a2 ^ a0
105311: 3e 09 70 02 03           u64 [0x30270] = a2
105316: 82 18 08 02              a1 = u64 [sp + 0x208]
105320: 52 08 07                 jump @8195 if a1 != 0
      :                          @8194
105323: 28 db 57 01              jump @13214
      :                          @8195
105327: 82 1a 00 02              a3 = u64 [sp + 0x200]
105331: 82 a9 10                 a2 = u64 [a3 + 0x10]
105334: 55 19 03 08              jump @8197 if a2 >=u 3
      :                          @8196
105338: 28 ec 57 01              jump @13246
      :                          @8197
105342: 82 a9 08                 a2 = u64 [a3 + 0x8]
105345: 84 77 01                 a0 = a0 & 0x1
105348: 78 97 02                 u8 [a2 + 0x2] = a0
105351: 55 18 03 08              jump @8199 if a1 >=u 3
      :                          @8198
105355: 28 f6 56 01              jump @13197
      :                          @8199
105359: 82 a8 40                 a1 = u64 [a3 + 0x40]
105362: 52 08 07                 jump @8201 if a1 != 0
      :                          @8200
105365: 28 b1 57 01              jump @13214
      :                          @8201
105369: 82 a8 38                 a1 = u64 [a3 + 0x38]
105372: 78 87                    u8 [a1] = a0
105374: 3a 07 70 02 03           a0 = u64 [0x30270]
105379: 97 79 0d                 a2 = a0 << 0xd
105382: d3 97 07                 a0 = a0 ^ a2
105385: 98 79 07                 a2 = a0 >> 0x7
105388: d3 97 07                 a0 = a0 ^ a2
105391: 97 79 11                 a2 = a0 << 0x11
105394: d3 79 09                 a2 = a2 ^ a0
105397: 3e 09 70 02 03           u64 [0x30270] = a2
105402: 82 18 08 02              a1 = u64 [sp + 0x208]
105406: 52 08 07                 jump @8203 if a1 != 0
      :                          @8202
105409: 28 85 57 01              jump @13214
      :                          @8203
105413: 82 1a 00 02              a3 = u64 [sp + 0x200]
105417: 82 a9 10                 a2 = u64 [a3 + 0x10]
105420: 55 19 04 08              jump @8205 if a2 >=u 4
      :                          @8204
105424: 28 89 57 01              jump @13233
      :                          @8205
105428: 82 a9 08                 a2 = u64 [a3 + 0x8]
105431: 84 77 01                 a0 = a0 & 0x1
105434: 78 97 03                 u8 [a2 + 0x3] = a0
105437: 55 18 04 08              jump @8207 if a1 >=u 4
      :                          @8206
105441: 28 9f 56 01              jump @13196
      :                          @8207
105445: 82 a8 58                 a1 = u64 [a3 + 0x58]
105448: 52 08 07                 jump @8209 if a1 != 0
      :                          @8208
105451: 28 5b 57 01              jump @13214
      :                          @8209
105455: 82 a8 50                 a1 = u64 [a3 + 0x50]
105458: 78 87                    u8 [a1] = a0
105460: 3a 07 70 02 03           a0 = u64 [0x30270]
105465: 97 79 0d                 a2 = a0 << 0xd
105468: d3 97 07                 a0 = a0 ^ a2
105471: 98 79 07                 a2 = a0 >> 0x7
105474: d3 97 07                 a0 = a0 ^ a2
105477: 97 79 11                 a2 = a0 << 0x11
105480: d3 79 09                 a2 = a2 ^ a0
105483: 3e 09 70 02 03           u64 [0x30270] = a2
105488: 82 18 08 02              a1 = u64 [sp + 0x208]
105492: 52 08 07                 jump @8211 if a1 != 0
      :                          @8210
105495: 28 2f 57 01              jump @13214
      :                          @8211
105499: 82 1a 00 02              a3 = u64 [sp + 0x200]
105503: 82 a9 10                 a2 = u64 [a3 + 0x10]
105506: 55 19 05 08              jump @8213 if a2 >=u 5
      :                          @8212
105510: 28 41 57 01              jump @13247
      :                          @8213
105514: 82 a9 08                 a2 = u64 [a3 + 0x8]
105517: 84 77 01                 a0 = a0 & 0x1
105520: 78 97 04                 u8 [a2 + 0x4] = a0
105523: 55 18 05 08              jump @8215 if a1 >=u 5
      :                          @8214
105527: 28 12 57 01              jump @13217
      :                          @8215
105531: 82 a8 70                 a1 = u64 [a3 + 0x70]
105534: 52 08 07                 jump @8217 if a1 != 0
      :                          @8216
105537: 28 05 57 01              jump @13214
      :                          @8217
105541: 82 a8 68                 a1 = u64 [a3 + 0x68]
105544: 78 87                    u8 [a1] = a0
105546: 3a 07 70 02 03           a0 = u64 [0x30270]
105551: 97 79 0d                 a2 = a0 << 0xd
105554: d3 97 07                 a0 = a0 ^ a2
105557: 98 79 07                 a2 = a0 >> 0x7
105560: d3 97 07                 a0 = a0 ^ a2
105563: 97 79 11                 a2 = a0 << 0x11
105566: d3 79 09                 a2 = a2 ^ a0
105569: 3e 09 70 02 03           u64 [0x30270] = a2
105574: 82 18 08 02              a1 = u64 [sp + 0x208]
105578: 52 08 07                 jump @8219 if a1 != 0
      :                          @8218
105581: 28 d9 56 01              jump @13214
      :                          @8219
105585: 82 1a 00 02              a3 = u64 [sp + 0x200]
105589: 82 a9 10                 a2 = u64 [a3 + 0x10]
105592: 55 19 06 08              jump @8221 if a2 >=u 6
      :                          @8220
105596: 28 f2 56 01              jump @13252
      :                          @8221
105600: 82 a9 08                 a2 = u64 [a3 + 0x8]
105603: 84 77 01                 a0 = a0 & 0x1
105606: 78 97 05                 u8 [a2 + 0x5] = a0
105609: 55 18 06 08              jump @8223 if a1 >=u 6
      :                          @8222
105613: 28 c0 56 01              jump @13221
      :                          @8223
105617: 82 a8 88 00              a1 = u64 [a3 + 0x88]
105621: 52 08 07                 jump @8225 if a1 != 0
      :                          @8224
105624: 28 ae 56 01              jump @13214
      :                          @8225
105628: 82 a8 80 00              a1 = u64 [a3 + 0x80]
105632: 78 87                    u8 [a1] = a0
105634: 3a 07 70 02 03           a0 = u64 [0x30270]
105639: 97 79 0d                 a2 = a0 << 0xd
105642: d3 97 07                 a0 = a0 ^ a2
105645: 98 79 07                 a2 = a0 >> 0x7
105648: d3 97 07                 a0 = a0 ^ a2
105651: 97 79 11                 a2 = a0 << 0x11
105654: d3 79 09                 a2 = a2 ^ a0
105657: 3e 09 70 02 03           u64 [0x30270] = a2
105662: 82 18 08 02              a1 = u64 [sp + 0x208]
105666: 55 18 02 08              jump @8227 if a1 >=u 2
      :                          @8226
105670: 28 b9 55 01              jump @13195
      :                          @8227
105674: 82 1b 00 02              a4 = u64 [sp + 0x200]
105678: 82 b9 28                 a2 = u64 [a4 + 0x28]
105681: 33 0c 03                 a5 = 0x3
105684: ae c9 07                 jump @8229 if a2 >=u a5
      :                          @8228
105687: 28 83 56 01              jump @13234
      :                          @8229
105691: 82 ba 20                 a3 = u64 [a4 + 0x20]
105694: 84 79 01                 a2 = a0 & 0x1
105697: 78 a9 02                 u8 [a3 + 0x2] = a2
105700: 55 18 03 08              jump @8231 if a1 >=u 3
      :                          @8230
105704: 28 7c 56 01              jump @13244
      :                          @8231
105708: 82 b8 40                 a1 = u64 [a4 + 0x40]
105711: 55 18 02 08              jump @8233 if a1 >=u 2
      :                          @8232
105715: 28 8c 55 01              jump @13195
      :                          @8233
105719: 82 b8 38                 a1 = u64 [a4 + 0x38]
105722: 78 89 01                 u8 [a1 + 0x1] = a2
105725: 3a 09 70 02 03           a2 = u64 [0x30270]
105730: 97 9a 0d                 a3 = a2 << 0xd
105733: d3 a9 09                 a2 = a2 ^ a3
105736: 98 9a 07                 a3 = a2 >> 0x7
105739: d3 9a 0a                 a3 = a3 ^ a2
105742: 97 a9 11                 a2 = a3 << 0x11
105745: d3 a9 09                 a2 = a2 ^ a3
105748: 3e 09 70 02 03           u64 [0x30270] = a2
105753: 82 18 08 02              a1 = u64 [sp + 0x208]
105757: 55 18 02 08              jump @8235 if a1 >=u 2
      :                          @8234
105761: 28 2f 56 01              jump @13224
      :                          @8235
105765: 82 1b 00 02              a4 = u64 [sp + 0x200]
105769: 82 b9 28                 a2 = u64 [a4 + 0x28]
105772: 55 19 04 08              jump @8237 if a2 >=u 4
      :                          @8236
105776: 28 29 56 01              jump @13233
      :                          @8237
105780: 82 b9 20                 a2 = u64 [a4 + 0x20]
105783: 84 aa 01                 a3 = a3 & 0x1
105786: 78 9a 03                 u8 [a2 + 0x3] = a3
105789: 55 18 04 08              jump @8239 if a1 >=u 4
      :                          @8238
105793: 28 16 56 01              jump @13231
      :                          @8239
105797: 82 b8 58                 a1 = u64 [a4 + 0x58]
105800: 55 18 02 08              jump @8241 if a1 >=u 2
      :                          @8240
105804: 28 04 56 01              jump @13224
      :                          @8241
105808: 82 b8 50                 a1 = u64 [a4 + 0x50]
105811: 78 8a 01                 u8 [a1 + 0x1] = a3
105814: 3a 09 70 02 03           a2 = u64 [0x30270]
105819: 97 9a 0d                 a3 = a2 << 0xd
105822: d3 a9 09                 a2 = a2 ^ a3
105825: 98 9a 07                 a3 = a2 >> 0x7
105828: d3 9a 0a                 a3 = a3 ^ a2
105831: 97 a9 11                 a2 = a3 << 0x11
105834: d3 a9 09                 a2 = a2 ^ a3
105837: 3e 09 70 02 03           u64 [0x30270] = a2
105842: 82 18 08 02              a1 = u64 [sp + 0x208]
105846: 55 18 02 08              jump @8243 if a1 >=u 2
      :                          @8242
105850: 28 d6 55 01              jump @13224
      :                          @8243
105854: 82 1b 00 02              a4 = u64 [sp + 0x200]
105858: 82 b9 28                 a2 = u64 [a4 + 0x28]
105861: 55 19 05 08              jump @8245 if a2 >=u 5
      :                          @8244
105865: 28 d2 55 01              jump @13235
      :                          @8245
105869: 82 b9 20                 a2 = u64 [a4 + 0x20]
105872: 84 aa 01                 a3 = a3 & 0x1
105875: 78 9a 04                 u8 [a2 + 0x4] = a3
105878: 55 18 05 08              jump @8247 if a1 >=u 5
      :                          @8246
105882: 28 be 55 01              jump @13232
      :                          @8247
105886: 82 b8 70                 a1 = u64 [a4 + 0x70]
105889: 55 18 02 08              jump @8249 if a1 >=u 2
      :                          @8248
105893: 28 ab 55 01              jump @13224
      :                          @8249
105897: 82 b8 68                 a1 = u64 [a4 + 0x68]
105900: 78 8a 01                 u8 [a1 + 0x1] = a3
105903: 3a 09 70 02 03           a2 = u64 [0x30270]
105908: 97 9a 0d                 a3 = a2 << 0xd
105911: d3 a9 09                 a2 = a2 ^ a3
105914: 98 9a 07                 a3 = a2 >> 0x7
105917: d3 9a 0a                 a3 = a3 ^ a2
105920: 97 a9 11                 a2 = a3 << 0x11
105923: d3 a9 09                 a2 = a2 ^ a3
105926: 3e 09 70 02 03           u64 [0x30270] = a2
105931: 82 18 08 02              a1 = u64 [sp + 0x208]
105935: 55 18 02 08              jump @8251 if a1 >=u 2
      :                          @8250
105939: 28 7d 55 01              jump @13224
      :                          @8251
105943: 82 1b 00 02              a4 = u64 [sp + 0x200]
105947: 82 b9 28                 a2 = u64 [a4 + 0x28]
105950: 55 19 06 08              jump @8253 if a2 >=u 6
      :                          @8252
105954: 28 7a 55 01              jump @13236
      :                          @8253
105958: 82 b9 20                 a2 = u64 [a4 + 0x20]
105961: 84 aa 01                 a3 = a3 & 0x1
105964: 78 9a 05                 u8 [a2 + 0x5] = a3
105967: 55 18 06 08              jump @8255 if a1 >=u 6
      :                          @8254
105971: 28 6a 55 01              jump @13237
      :                          @8255
105975: 82 b8 88 00              a1 = u64 [a4 + 0x88]
105979: 55 18 02 08              jump @8257 if a1 >=u 2
      :                          @8256
105983: 28 51 55 01              jump @13224
      :                          @8257
105987: 82 b8 80 00              a1 = u64 [a4 + 0x80]
105991: 78 8a 01                 u8 [a1 + 0x1] = a3
105994: 3a 09 70 02 03           a2 = u64 [0x30270]
105999: 97 9a 0d                 a3 = a2 << 0xd
106002: d3 a9 09                 a2 = a2 ^ a3
106005: 98 9b 07                 a4 = a2 >> 0x7
106008: d3 9b 0b                 a4 = a4 ^ a2
106011: 97 b9 11                 a2 = a4 << 0x11
106014: d3 b9 09                 a2 = a2 ^ a4
106017: 3e 09 70 02 03           u64 [0x30270] = a2
106022: 82 18 08 02              a1 = u64 [sp + 0x208]
106026: 55 18 03 08              jump @8259 if a1 >=u 3
      :                          @8258
106030: 28 19 55 01              jump @13215
      :                          @8259
106034: 82 1c 00 02              a5 = u64 [sp + 0x200]
106038: 82 c9 40                 a2 = u64 [a5 + 0x40]
106041: 55 19 04 08              jump @8261 if a2 >=u 4
      :                          @8260
106045: 28 1d 55 01              jump @13234
      :                          @8261
106049: 82 c9 38                 a2 = u64 [a5 + 0x38]
106052: 84 bb 01                 a4 = a4 & 0x1
106055: 78 9b 03                 u8 [a2 + 0x3] = a4
106058: 55 18 04 08              jump @8263 if a1 >=u 4
      :                          @8262
106062: 28 1a 55 01              jump @13248
      :                          @8263
106066: 82 c8 58                 a1 = u64 [a5 + 0x58]
106069: 55 18 03 08              jump @8265 if a1 >=u 3
      :                          @8264
106073: 28 f8 54 01              jump @13225
      :                          @8265
106077: 82 c8 50                 a1 = u64 [a5 + 0x50]
106080: 78 8b 02                 u8 [a1 + 0x2] = a4
106083: 3a 09 70 02 03           a2 = u64 [0x30270]
106088: 97 9a 0d                 a3 = a2 << 0xd
106091: d3 a9 09                 a2 = a2 ^ a3
106094: 98 9a 07                 a3 = a2 >> 0x7
106097: d3 9a 0a                 a3 = a3 ^ a2
106100: 97 a9 11                 a2 = a3 << 0x11
106103: d3 a9 09                 a2 = a2 ^ a3
106106: 3e 09 70 02 03           u64 [0x30270] = a2
106111: 82 18 08 02              a1 = u64 [sp + 0x208]
106115: 55 18 03 08              jump @8267 if a1 >=u 3
      :                          @8266
106119: 28 ca 54 01              jump @13225
      :                          @8267
106123: 82 1b 00 02              a4 = u64 [sp + 0x200]
106127: 82 b9 40                 a2 = u64 [a4 + 0x40]
106130: 55 19 05 08              jump @8269 if a2 >=u 5
      :                          @8268
106134: 28 c5 54 01              jump @13235
      :                          @8269
106138: 82 b9 38                 a2 = u64 [a4 + 0x38]
106141: 84 aa 01                 a3 = a3 & 0x1
106144: 78 9a 04                 u8 [a2 + 0x4] = a3
106147: 55 18 05 08              jump @8271 if a1 >=u 5
      :                          @8270
106151: 28 b1 54 01              jump @13232
      :                          @8271
106155: 82 b8 70                 a1 = u64 [a4 + 0x70]
106158: 55 18 03 08              jump @8273 if a1 >=u 3
      :                          @8272
106162: 28 9f 54 01              jump @13225
      :                          @8273
106166: 82 b8 68                 a1 = u64 [a4 + 0x68]
106169: 78 8a 02                 u8 [a1 + 0x2] = a3
106172: 3a 09 70 02 03           a2 = u64 [0x30270]
106177: 97 9a 0d                 a3 = a2 << 0xd
106180: d3 a9 09                 a2 = a2 ^ a3
106183: 98 9a 07                 a3 = a2 >> 0x7
106186: d3 9a 0a                 a3 = a3 ^ a2
106189: 97 a9 11                 a2 = a3 << 0x11
106192: d3 a9 09                 a2 = a2 ^ a3
106195: 3e 09 70 02 03           u64 [0x30270] = a2
106200: 82 18 08 02              a1 = u64 [sp + 0x208]
106204: 55 18 03 08              jump @8275 if a1 >=u 3
      :                          @8274
106208: 28 71 54 01              jump @13225
      :                          @8275
106212: 82 1b 00 02              a4 = u64 [sp + 0x200]
106216: 82 b9 40                 a2 = u64 [a4 + 0x40]
106219: 55 19 06 08              jump @8277 if a2 >=u 6
      :                          @8276
106223: 28 6d 54 01              jump @13236
      :                          @8277
106227: 82 b9 38                 a2 = u64 [a4 + 0x38]
106230: 84 aa 01                 a3 = a3 & 0x1
106233: 78 9a 05                 u8 [a2 + 0x5] = a3
106236: 55 18 06 08              jump @8279 if a1 >=u 6
      :                          @8278
106240: 28 5d 54 01              jump @13237
      :                          @8279
106244: 82 b8 88 00              a1 = u64 [a4 + 0x88]
106248: 55 18 03 08              jump @8281 if a1 >=u 3
      :                          @8280
106252: 28 45 54 01              jump @13225
      :                          @8281
106256: 82 b8 80 00              a1 = u64 [a4 + 0x80]
106260: 78 8a 02                 u8 [a1 + 0x2] = a3
106263: 3a 09 70 02 03           a2 = u64 [0x30270]
106268: 97 9a 0d                 a3 = a2 << 0xd
106271: d3 a9 09                 a2 = a2 ^ a3
106274: 98 9b 07                 a4 = a2 >> 0x7
106277: d3 9b 0b                 a4 = a4 ^ a2
106280: 97 b9 11                 a2 = a4 << 0x11
106283: d3 b9 09                 a2 = a2 ^ a4
106286: 3e 09 70 02 03           u64 [0x30270] = a2
106291: 82 18 08 02              a1 = u64 [sp + 0x208]
106295: 55 18 04 08              jump @8283 if a1 >=u 4
      :                          @8282
106299: 28 0c 54 01              jump @13215
      :                          @8283
106303: 82 1c 00 02              a5 = u64 [sp + 0x200]
106307: 82 c9 58                 a2 = u64 [a5 + 0x58]
106310: 55 19 05 08              jump @8285 if a2 >=u 5
      :                          @8284
106314: 28 10 54 01              jump @13234
      :                          @8285
106318: 82 c9 50                 a2 = u64 [a5 + 0x50]
106321: 84 bb 01                 a4 = a4 & 0x1
106324: 78 9b 04                 u8 [a2 + 0x4] = a4
106327: 55 18 05 08              jump @8287 if a1 >=u 5
      :                          @8286
106331: 28 0a 54 01              jump @13245
      :                          @8287
106335: 82 c8 70                 a1 = u64 [a5 + 0x70]
106338: 55 18 04 08              jump @8289 if a1 >=u 4
      :                          @8288
106342: 28 f1 53 01              jump @13231
      :                          @8289
106346: 82 c8 68                 a1 = u64 [a5 + 0x68]
106349: 78 8b 03                 u8 [a1 + 0x3] = a4
106352: 3a 09 70 02 03           a2 = u64 [0x30270]
106357: 97 9a 0d                 a3 = a2 << 0xd
106360: d3 a9 09                 a2 = a2 ^ a3
106363: 98 9a 07                 a3 = a2 >> 0x7
106366: d3 9a 0a                 a3 = a3 ^ a2
106369: 97 a9 11                 a2 = a3 << 0x11
106372: d3 a9 09                 a2 = a2 ^ a3
106375: 3e 09 70 02 03           u64 [0x30270] = a2
106380: 82 18 08 02              a1 = u64 [sp + 0x208]
106384: 55 18 04 08              jump @8291 if a1 >=u 4
      :                          @8290
106388: 28 c3 53 01              jump @13231
      :                          @8291
106392: 82 1b 00 02              a4 = u64 [sp + 0x200]
106396: 82 b9 58                 a2 = u64 [a4 + 0x58]
106399: 55 19 06 08              jump @8293 if a2 >=u 6
      :                          @8292
106403: 28 b9 53 01              jump @13236
      :                          @8293
106407: 82 b9 50                 a2 = u64 [a4 + 0x50]
106410: 84 aa 01                 a3 = a3 & 0x1
106413: 78 9a 05                 u8 [a2 + 0x5] = a3
106416: 55 18 06 08              jump @8295 if a1 >=u 6
      :                          @8294
106420: 28 a9 53 01              jump @13237
      :                          @8295
106424: 82 b8 88 00              a1 = u64 [a4 + 0x88]
106428: 55 18 04 08              jump @8297 if a1 >=u 4
      :                          @8296
106432: 28 97 53 01              jump @13231
      :                          @8297
106436: 82 b8 80 00              a1 = u64 [a4 + 0x80]
106440: 78 8a 03                 u8 [a1 + 0x3] = a3
106443: 3a 09 70 02 03           a2 = u64 [0x30270]
106448: 97 9a 0d                 a3 = a2 << 0xd
106451: d3 a9 09                 a2 = a2 ^ a3
106454: 98 9b 07                 a4 = a2 >> 0x7
106457: d3 9b 0b                 a4 = a4 ^ a2
106460: 97 b9 11                 a2 = a4 << 0x11
106463: d3 b9 09                 a2 = a2 ^ a4
106466: 3e 09 70 02 03           u64 [0x30270] = a2
106471: 82 18 08 02              a1 = u64 [sp + 0x208]
106475: 55 18 05 08              jump @8299 if a1 >=u 5
      :                          @8298
106479: 28 58 53 01              jump @13215
      :                          @8299
106483: 82 17 00 02              a0 = u64 [sp + 0x200]
106487: 82 79 70                 a2 = u64 [a0 + 0x70]
106490: 55 19 06 08              jump @8301 if a2 >=u 6
      :                          @8300
106494: 28 5c 53 01              jump @13234
      :                          @8301
106498: 82 79 68                 a2 = u64 [a0 + 0x68]
106501: 84 bb 01                 a4 = a4 & 0x1
106504: 78 9b 05                 u8 [a2 + 0x5] = a4
106507: 55 18 06 08              jump @8303 if a1 >=u 6
      :                          @8302
106511: 28 61 53 01              jump @13254
      :                          @8303
106515: 82 78 88 00              a1 = u64 [a0 + 0x88]
106519: 55 18 05 08              jump @8305 if a1 >=u 5
      :                          @8304
106523: 28 3d 53 01              jump @13232
      :                          @8305
106527: 82 77 80 00              a0 = u64 [a0 + 0x80]
106531: 78 7b 04                 u8 [a0 + 0x4] = a4
106534: 95 17 f8 01              a0 = sp + 0x1f8
106538: 50 20 f2 04 73 4a ff     ra = 1266, jump @4612
      :                          @8306 [@dyn 633]
106545: 7b 17 10 01              u64 [sp + 0x110] = a0
106549: 95 17 10 01              a0 = sp + 0x110
106553: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
106557: 33 07 28 0c              a0 = 0xc28
106561: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
106565: 33 07 20 08 01           a0 = 0x10820
106570: 7b 17 80 02              u64 [sp + 0x280] = a0
106574: 49 21 88 02 01           u64 [sp + 648] = 0x1
106579: 49 21 a0 02              u64 [sp + 672] = 0
106583: 95 18 d0 01              a1 = sp + 0x1d0
106587: 7b 18 90 02              u64 [sp + 0x290] = a1
106591: 49 21 98 02 01           u64 [sp + 664] = 0x1
106596: 95 17 28 02              a0 = sp + 0x228
106600: 95 18 80 02              a1 = sp + 0x280
106604: 50 20 f4 04 db ae fe     ra = 1268, jump @1491
      :                          @8307 [@dyn 634]
106611: 82 16 30 02              s1 = u64 [sp + 0x230]
106615: 82 1b 38 02              a4 = u64 [sp + 0x238]
106619: 82 17 28 02              a0 = u64 [sp + 0x228]
106623: 7b 17 60                 u64 [sp + 0x60] = a0
106626: 33 07 02                 a0 = 0x2
106629: 33 08                    a1 = 0
106631: 33 09                    a2 = 0
106633: 64 6a                    a3 = s1
106635: 33 00 f6 04              ra = 0x4f6
106639: 0a 64                    ecalli 100 // 'log'
106641: 01                       fallthrough
      :                          @8308 [@dyn 635]
106642: 82 1c 60                 a5 = u64 [sp + 0x60]
106645: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
106650: 55 38 00 00 f0 0a        jump @8310 if a1 >=u 4293918720
      :                          @8309
106656: 28 40 41 01              jump @12861
      :                          @8310
106660: 33 07 b0 02 03           a0 = 0x302b0
106665: 95 77 00 00 10           a0 = a0 + 0x100000
106670: 01                       fallthrough
      :                          @8311
106671: 82 78                    a1 = u64 [a0]
106673: c9 87 09                 a2 = a0 - a1
106676: aa 69 07                 jump @8313 if a2 == s1
      :                          @8312
106679: 28 29 41 01              jump @12861
      :                          @8313
106683: c9 c8 09                 a2 = a1 - a5
106686: 01                       fallthrough
      :                          @8314
106687: 82 7a                    a3 = u64 [a0]
106689: ab 8a ee                 jump @8311 if a3 != a1
      :                          @8315
106692: 7b 79                    u64 [a0] = a2
106694: 33 0b                    a4 = 0
106696: 01                       fallthrough
      :                          @8316
106697: ab 8a e6                 jump @8311 if a3 != a1
      :                          @8317
106700: 28 14 41 01              jump @12861
      :                          @8318 [@dyn 636]
106704: 95 17 80 02              a0 = sp + 0x280
106708: 33 08 05                 a1 = 0x5
106711: 50 20 fa 04 d9 bc fe     ra = 1274, jump @1776
      :                          @8319 [@dyn 637]
106718: 95 17 d0 01              a0 = sp + 0x1d0
106722: 95 18 80 02              a1 = sp + 0x280
106726: 33 09 05                 a2 = 0x5
106729: 50 20 fc 04 e8 c3 fe     ra = 1276, jump @1895
      :                          @8320 [@dyn 638]
106736: 3a 07 70 02 03           a0 = u64 [0x30270]
106741: 97 79 0d                 a2 = a0 << 0xd
106744: d3 97 07                 a0 = a0 ^ a2
106747: 98 79 07                 a2 = a0 >> 0x7
106750: d3 97 07                 a0 = a0 ^ a2
106753: 97 79 11                 a2 = a0 << 0x11
106756: d3 79 09                 a2 = a2 ^ a0
106759: 3e 09 70 02 03           u64 [0x30270] = a2
106764: 82 1c e0 01              a5 = u64 [sp + 0x1e0]
106768: 52 0c 07                 jump @8322 if a5 != 0
      :                          @8321
106771: 28 3c 52 01              jump @13223
      :                          @8322
106775: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
106779: 82 b9 10                 a2 = u64 [a4 + 0x10]
106782: 56 19 01 08              jump @8324 if a2 >u 1
      :                          @8323
106786: 28 38 52 01              jump @13234
      :                          @8324
106790: 82 b8 08                 a1 = u64 [a4 + 0x8]
106793: 84 79 01                 a2 = a0 & 0x1
106796: 78 89 01                 u8 [a1 + 0x1] = a2
106799: 56 1c 01 08              jump @8326 if a5 >u 1
      :                          @8325
106803: 28 14 52 01              jump @13215
      :                          @8326
106807: 82 b7 28                 a0 = u64 [a4 + 0x28]
106810: 52 07 07                 jump @8328 if a0 != 0
      :                          @8327
106813: 28 21 52 01              jump @13238
      :                          @8328
106817: 82 b7 20                 a0 = u64 [a4 + 0x20]
106820: 78 79                    u8 [a0] = a2
106822: 3a 07 70 02 03           a0 = u64 [0x30270]
106827: 97 79 0d                 a2 = a0 << 0xd
106830: d3 97 07                 a0 = a0 ^ a2
106833: 98 79 07                 a2 = a0 >> 0x7
106836: d3 97 07                 a0 = a0 ^ a2
106839: 97 79 11                 a2 = a0 << 0x11
106842: d3 79 09                 a2 = a2 ^ a0
106845: 3e 09 70 02 03           u64 [0x30270] = a2
106850: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
106854: 52 08 07                 jump @8330 if a1 != 0
      :                          @8329
106857: 28 dd 51 01              jump @13214
      :                          @8330
106861: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
106865: 82 a9 10                 a2 = u64 [a3 + 0x10]
106868: 55 19 03 08              jump @8332 if a2 >=u 3
      :                          @8331
106872: 28 ee 51 01              jump @13246
      :                          @8332
106876: 82 a9 08                 a2 = u64 [a3 + 0x8]
106879: 84 77 01                 a0 = a0 & 0x1
106882: 78 97 02                 u8 [a2 + 0x2] = a0
106885: 55 18 03 08              jump @8334 if a1 >=u 3
      :                          @8333
106889: 28 f8 50 01              jump @13197
      :                          @8334
106893: 82 a8 40                 a1 = u64 [a3 + 0x40]
106896: 52 08 07                 jump @8336 if a1 != 0
      :                          @8335
106899: 28 b3 51 01              jump @13214
      :                          @8336
106903: 82 a8 38                 a1 = u64 [a3 + 0x38]
106906: 78 87                    u8 [a1] = a0
106908: 3a 07 70 02 03           a0 = u64 [0x30270]
106913: 97 79 0d                 a2 = a0 << 0xd
106916: d3 97 07                 a0 = a0 ^ a2
106919: 98 79 07                 a2 = a0 >> 0x7
106922: d3 97 07                 a0 = a0 ^ a2
106925: 97 79 11                 a2 = a0 << 0x11
106928: d3 79 09                 a2 = a2 ^ a0
106931: 3e 09 70 02 03           u64 [0x30270] = a2
106936: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
106940: 52 08 07                 jump @8338 if a1 != 0
      :                          @8337
106943: 28 87 51 01              jump @13214
      :                          @8338
106947: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
106951: 82 a9 10                 a2 = u64 [a3 + 0x10]
106954: 55 19 04 08              jump @8340 if a2 >=u 4
      :                          @8339
106958: 28 8b 51 01              jump @13233
      :                          @8340
106962: 82 a9 08                 a2 = u64 [a3 + 0x8]
106965: 84 77 01                 a0 = a0 & 0x1
106968: 78 97 03                 u8 [a2 + 0x3] = a0
106971: 55 18 04 08              jump @8342 if a1 >=u 4
      :                          @8341
106975: 28 a1 50 01              jump @13196
      :                          @8342
106979: 82 a8 58                 a1 = u64 [a3 + 0x58]
106982: 52 08 07                 jump @8344 if a1 != 0
      :                          @8343
106985: 28 5d 51 01              jump @13214
      :                          @8344
106989: 82 a8 50                 a1 = u64 [a3 + 0x50]
106992: 78 87                    u8 [a1] = a0
106994: 3a 07 70 02 03           a0 = u64 [0x30270]
106999: 97 79 0d                 a2 = a0 << 0xd
107002: d3 97 07                 a0 = a0 ^ a2
107005: 98 79 07                 a2 = a0 >> 0x7
107008: d3 97 07                 a0 = a0 ^ a2
107011: 97 79 11                 a2 = a0 << 0x11
107014: d3 79 09                 a2 = a2 ^ a0
107017: 3e 09 70 02 03           u64 [0x30270] = a2
107022: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
107026: 52 08 07                 jump @8346 if a1 != 0
      :                          @8345
107029: 28 31 51 01              jump @13214
      :                          @8346
107033: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
107037: 82 a9 10                 a2 = u64 [a3 + 0x10]
107040: 55 19 05 08              jump @8348 if a2 >=u 5
      :                          @8347
107044: 28 43 51 01              jump @13247
      :                          @8348
107048: 82 a9 08                 a2 = u64 [a3 + 0x8]
107051: 84 77 01                 a0 = a0 & 0x1
107054: 78 97 04                 u8 [a2 + 0x4] = a0
107057: 55 18 05 08              jump @8350 if a1 >=u 5
      :                          @8349
107061: 28 14 51 01              jump @13217
      :                          @8350
107065: 82 a8 70                 a1 = u64 [a3 + 0x70]
107068: 52 08 07                 jump @8352 if a1 != 0
      :                          @8351
107071: 28 07 51 01              jump @13214
      :                          @8352
107075: 82 a8 68                 a1 = u64 [a3 + 0x68]
107078: 78 87                    u8 [a1] = a0
107080: 3a 07 70 02 03           a0 = u64 [0x30270]
107085: 97 79 0d                 a2 = a0 << 0xd
107088: d3 97 07                 a0 = a0 ^ a2
107091: 98 79 07                 a2 = a0 >> 0x7
107094: d3 97 07                 a0 = a0 ^ a2
107097: 97 79 11                 a2 = a0 << 0x11
107100: d3 79 09                 a2 = a2 ^ a0
107103: 3e 09 70 02 03           u64 [0x30270] = a2
107108: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
107112: 55 18 02 08              jump @8354 if a1 >=u 2
      :                          @8353
107116: 28 13 50 01              jump @13195
      :                          @8354
107120: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
107124: 82 b9 28                 a2 = u64 [a4 + 0x28]
107127: 55 19 03 08              jump @8356 if a2 >=u 3
      :                          @8355
107131: 28 df 50 01              jump @13234
      :                          @8356
107135: 82 ba 20                 a3 = u64 [a4 + 0x20]
107138: 84 79 01                 a2 = a0 & 0x1
107141: 78 a9 02                 u8 [a3 + 0x2] = a2
107144: 55 18 03 08              jump @8358 if a1 >=u 3
      :                          @8357
107148: 28 d8 50 01              jump @13244
      :                          @8358
107152: 82 b8 40                 a1 = u64 [a4 + 0x40]
107155: 55 18 02 08              jump @8360 if a1 >=u 2
      :                          @8359
107159: 28 e8 4f 01              jump @13195
      :                          @8360
107163: 82 b8 38                 a1 = u64 [a4 + 0x38]
107166: 78 89 01                 u8 [a1 + 0x1] = a2
107169: 3a 09 70 02 03           a2 = u64 [0x30270]
107174: 97 9a 0d                 a3 = a2 << 0xd
107177: d3 a9 09                 a2 = a2 ^ a3
107180: 98 9a 07                 a3 = a2 >> 0x7
107183: d3 9a 0a                 a3 = a3 ^ a2
107186: 97 a9 11                 a2 = a3 << 0x11
107189: d3 a9 09                 a2 = a2 ^ a3
107192: 3e 09 70 02 03           u64 [0x30270] = a2
107197: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
107201: 55 18 02 08              jump @8362 if a1 >=u 2
      :                          @8361
107205: 28 ba 4f 01              jump @13195
      :                          @8362
107209: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
107213: 82 b9 28                 a2 = u64 [a4 + 0x28]
107216: 55 19 04 08              jump @8364 if a2 >=u 4
      :                          @8363
107220: 28 85 50 01              jump @13233
      :                          @8364
107224: 82 b9 20                 a2 = u64 [a4 + 0x20]
107227: 84 aa 01                 a3 = a3 & 0x1
107230: 78 9a 03                 u8 [a2 + 0x3] = a3
107233: 55 18 04 08              jump @8366 if a1 >=u 4
      :                          @8365
107237: 28 9b 4f 01              jump @13196
      :                          @8366
107241: 82 b8 58                 a1 = u64 [a4 + 0x58]
107244: 55 18 02 08              jump @8368 if a1 >=u 2
      :                          @8367
107248: 28 8f 4f 01              jump @13195
      :                          @8368
107252: 82 b8 50                 a1 = u64 [a4 + 0x50]
107255: 78 8a 01                 u8 [a1 + 0x1] = a3
107258: 3a 09 70 02 03           a2 = u64 [0x30270]
107263: 97 9a 0d                 a3 = a2 << 0xd
107266: d3 a9 09                 a2 = a2 ^ a3
107269: 98 9a 07                 a3 = a2 >> 0x7
107272: d3 9a 0a                 a3 = a3 ^ a2
107275: 97 a9 11                 a2 = a3 << 0x11
107278: d3 a9 09                 a2 = a2 ^ a3
107281: 3e 09 70 02 03           u64 [0x30270] = a2
107286: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
107290: 55 18 02 08              jump @8370 if a1 >=u 2
      :                          @8369
107294: 28 32 50 01              jump @13224
      :                          @8370
107298: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
107302: 82 b9 28                 a2 = u64 [a4 + 0x28]
107305: 55 19 05 08              jump @8372 if a2 >=u 5
      :                          @8371
107309: 28 2e 50 01              jump @13235
      :                          @8372
107313: 82 b9 20                 a2 = u64 [a4 + 0x20]
107316: 84 aa 01                 a3 = a3 & 0x1
107319: 78 9a 04                 u8 [a2 + 0x4] = a3
107322: 55 18 05 08              jump @8374 if a1 >=u 5
      :                          @8373
107326: 28 1a 50 01              jump @13232
      :                          @8374
107330: 82 b8 70                 a1 = u64 [a4 + 0x70]
107333: 55 18 02 08              jump @8376 if a1 >=u 2
      :                          @8375
107337: 28 07 50 01              jump @13224
      :                          @8376
107341: 82 b8 68                 a1 = u64 [a4 + 0x68]
107344: 78 8a 01                 u8 [a1 + 0x1] = a3
107347: 3a 09 70 02 03           a2 = u64 [0x30270]
107352: 97 9a 0d                 a3 = a2 << 0xd
107355: d3 a9 09                 a2 = a2 ^ a3
107358: 98 9b 07                 a4 = a2 >> 0x7
107361: d3 9b 0b                 a4 = a4 ^ a2
107364: 97 b9 11                 a2 = a4 << 0x11
107367: d3 b9 09                 a2 = a2 ^ a4
107370: 3e 09 70 02 03           u64 [0x30270] = a2
107375: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
107379: 55 18 03 08              jump @8378 if a1 >=u 3
      :                          @8377
107383: 28 d0 4f 01              jump @13215
      :                          @8378
107387: 82 1c d8 01              a5 = u64 [sp + 0x1d8]
107391: 82 c9 40                 a2 = u64 [a5 + 0x40]
107394: 55 19 04 08              jump @8380 if a2 >=u 4
      :                          @8379
107398: 28 d4 4f 01              jump @13234
      :                          @8380
107402: 82 c9 38                 a2 = u64 [a5 + 0x38]
107405: 84 bb 01                 a4 = a4 & 0x1
107408: 78 9b 03                 u8 [a2 + 0x3] = a4
107411: 55 18 04 08              jump @8382 if a1 >=u 4
      :                          @8381
107415: 28 d1 4f 01              jump @13248
      :                          @8382
107419: 82 c8 58                 a1 = u64 [a5 + 0x58]
107422: 55 18 03 08              jump @8384 if a1 >=u 3
      :                          @8383
107426: 28 af 4f 01              jump @13225
      :                          @8384
107430: 82 c8 50                 a1 = u64 [a5 + 0x50]
107433: 78 8b 02                 u8 [a1 + 0x2] = a4
107436: 3a 09 70 02 03           a2 = u64 [0x30270]
107441: 97 9a 0d                 a3 = a2 << 0xd
107444: d3 a9 09                 a2 = a2 ^ a3
107447: 98 9a 07                 a3 = a2 >> 0x7
107450: d3 9a 0a                 a3 = a3 ^ a2
107453: 97 a9 11                 a2 = a3 << 0x11
107456: d3 a9 09                 a2 = a2 ^ a3
107459: 3e 09 70 02 03           u64 [0x30270] = a2
107464: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
107468: 55 18 03 08              jump @8386 if a1 >=u 3
      :                          @8385
107472: 28 81 4f 01              jump @13225
      :                          @8386
107476: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
107480: 82 b9 40                 a2 = u64 [a4 + 0x40]
107483: 55 19 05 08              jump @8388 if a2 >=u 5
      :                          @8387
107487: 28 7c 4f 01              jump @13235
      :                          @8388
107491: 82 b9 38                 a2 = u64 [a4 + 0x38]
107494: 84 aa 01                 a3 = a3 & 0x1
107497: 78 9a 04                 u8 [a2 + 0x4] = a3
107500: 55 18 05 08              jump @8390 if a1 >=u 5
      :                          @8389
107504: 28 68 4f 01              jump @13232
      :                          @8390
107508: 82 b8 70                 a1 = u64 [a4 + 0x70]
107511: 55 18 03 08              jump @8392 if a1 >=u 3
      :                          @8391
107515: 28 56 4f 01              jump @13225
      :                          @8392
107519: 82 b8 68                 a1 = u64 [a4 + 0x68]
107522: 78 8a 02                 u8 [a1 + 0x2] = a3
107525: 3a 09 70 02 03           a2 = u64 [0x30270]
107530: 97 9a 0d                 a3 = a2 << 0xd
107533: d3 a9 09                 a2 = a2 ^ a3
107536: 98 9b 07                 a4 = a2 >> 0x7
107539: d3 9b 0b                 a4 = a4 ^ a2
107542: 97 b9 11                 a2 = a4 << 0x11
107545: d3 b9 09                 a2 = a2 ^ a4
107548: 3e 09 70 02 03           u64 [0x30270] = a2
107553: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
107557: 33 0a 04                 a3 = 0x4
107560: ae a8 07                 jump @8394 if a1 >=u a3
      :                          @8393
107563: 28 1c 4f 01              jump @13215
      :                          @8394
107567: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
107571: 82 79 58                 a2 = u64 [a0 + 0x58]
107574: 33 0c 05                 a5 = 0x5
107577: ae c9 07                 jump @8396 if a2 >=u a5
      :                          @8395
107580: 28 1e 4f 01              jump @13234
      :                          @8396
107584: 82 79 50                 a2 = u64 [a0 + 0x50]
107587: 84 bb 01                 a4 = a4 & 0x1
107590: 78 9b 04                 u8 [a2 + 0x4] = a4
107593: 55 18 05 08              jump @8398 if a1 >=u 5
      :                          @8397
107597: 28 18 4f 01              jump @13245
      :                          @8398
107601: 82 78 70                 a1 = u64 [a0 + 0x70]
107604: 55 18 04 08              jump @8400 if a1 >=u 4
      :                          @8399
107608: 28 ff 4e 01              jump @13231
      :                          @8400
107612: 82 77 68                 a0 = u64 [a0 + 0x68]
107615: 78 7b 03                 u8 [a0 + 0x3] = a4
107618: 3a 08 70 02 03           a1 = u64 [0x30270]
107623: 97 89 0d                 a2 = a1 << 0xd
107626: d3 98 08                 a1 = a1 ^ a2
107629: 98 89 07                 a2 = a1 >> 0x7
107632: d3 98 08                 a1 = a1 ^ a2
107635: 97 89 11                 a2 = a1 << 0x11
107638: d3 89 09                 a2 = a2 ^ a1
107641: 3e 09 70 02 03           u64 [0x30270] = a2
107646: 84 88 03                 a1 = a1 & 0x3
107649: 95 88 01                 a1 = a1 + 0x1
107652: 7a 18 b8 01              u32 [sp + 0x1b8] = a1
107656: 95 17 d0 01              a0 = sp + 0x1d0
107660: 50 20 fe 04 56 47 ff     ra = 1278, jump @4641
      :                          @8401 [@dyn 639]
107667: 7b 17 10 01              u64 [sp + 0x110] = a0
107671: 95 17 b8 01              a0 = sp + 0x1b8
107675: 7b 17 28 02              u64 [sp + 0x228] = a0
107679: 33 07 5e 0c              a0 = 0xc5e
107683: 7b 17 30 02              u64 [sp + 0x230] = a0
107687: 95 17 10 01              a0 = sp + 0x110
107691: 7b 17 38 02              u64 [sp + 0x238] = a0
107695: 33 07 28 0c              a0 = 0xc28
107699: 7b 17 40 02              u64 [sp + 0x240] = a0
107703: 33 07 48 08 01           a0 = 0x10848
107708: 7b 17 80 02              u64 [sp + 0x280] = a0
107712: 49 21 88 02 02           u64 [sp + 648] = 0x2
107717: 49 21 a0 02              u64 [sp + 672] = 0
107721: 95 18 28 02              a1 = sp + 0x228
107725: 7b 18 90 02              u64 [sp + 0x290] = a1
107729: 49 21 98 02 02           u64 [sp + 664] = 0x2
107734: 95 17 f8 01              a0 = sp + 0x1f8
107738: 95 18 80 02              a1 = sp + 0x280
107742: 50 20 00 05 69 aa fe     ra = 1280, jump @1491
      :                          @8402 [@dyn 640]
107749: 82 16 00 02              s1 = u64 [sp + 0x200]
107753: 82 1b 08 02              a4 = u64 [sp + 0x208]
107757: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
107761: 7b 17 60                 u64 [sp + 0x60] = a0
107764: 33 07 02                 a0 = 0x2
107767: 33 08                    a1 = 0
107769: 33 09                    a2 = 0
107771: 64 6a                    a3 = s1
107773: 33 00 02 05              ra = 0x502
107777: 0a 64                    ecalli 100 // 'log'
107779: 01                       fallthrough
      :                          @8403 [@dyn 641]
107780: 82 1c 60                 a5 = u64 [sp + 0x60]
107783: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
107788: 55 38 00 00 f0 0a        jump @8405 if a1 >=u 4293918720
      :                          @8404
107794: 28 3b 88 00              jump @10535
      :                          @8405
107798: 33 07 b0 02 03           a0 = 0x302b0
107803: 95 77 00 00 10           a0 = a0 + 0x100000
107808: 01                       fallthrough
      :                          @8406
107809: 82 78                    a1 = u64 [a0]
107811: c9 87 09                 a2 = a0 - a1
107814: aa 69 07                 jump @8408 if a2 == s1
      :                          @8407
107817: 28 24 88 00              jump @10535
      :                          @8408
107821: c9 c8 09                 a2 = a1 - a5
107824: 01                       fallthrough
      :                          @8409
107825: 82 7a                    a3 = u64 [a0]
107827: ab 8a ee                 jump @8406 if a3 != a1
      :                          @8410
107830: 7b 79                    u64 [a0] = a2
107832: 33 0b                    a4 = 0
107834: 01                       fallthrough
      :                          @8411
107835: ab 8a e6                 jump @8406 if a3 != a1
      :                          @8412
107838: 28 0f 88 00              jump @10535
      :                          @8413 [@dyn 642]
107842: 95 17 80 02              a0 = sp + 0x280
107846: 33 09 05                 a2 = 0x5
107849: 33 08                    a1 = 0
107851: 50 20 06 05 a7 be fe     ra = 1286, jump @1877
      :                          @8414 [@dyn 643]
107858: 95 17 f8 01              a0 = sp + 0x1f8
107862: 95 18 80 02              a1 = sp + 0x280
107866: 33 09 05                 a2 = 0x5
107869: 50 20 08 05 bf b8 fe     ra = 1288, jump @1783
      :                          @8415 [@dyn 644]
107876: 3a 07 70 02 03           a0 = u64 [0x30270]
107881: 97 79 0d                 a2 = a0 << 0xd
107884: d3 97 07                 a0 = a0 ^ a2
107887: 98 79 07                 a2 = a0 >> 0x7
107890: d3 97 07                 a0 = a0 ^ a2
107893: 97 79 11                 a2 = a0 << 0x11
107896: d3 79 09                 a2 = a2 ^ a0
107899: 3e 09 70 02 03           u64 [0x30270] = a2
107904: 82 1c 08 02              a5 = u64 [sp + 0x208]
107908: 52 0c 07                 jump @8417 if a5 != 0
      :                          @8416
107911: 28 c8 4d 01              jump @13223
      :                          @8417
107915: 82 1b 00 02              a4 = u64 [sp + 0x200]
107919: 82 b9 10                 a2 = u64 [a4 + 0x10]
107922: 56 19 01 08              jump @8419 if a2 >u 1
      :                          @8418
107926: 28 c4 4d 01              jump @13234
      :                          @8419
107930: 82 b8 08                 a1 = u64 [a4 + 0x8]
107933: 84 79 01                 a2 = a0 & 0x1
107936: 7b 89 08                 u64 [a1 + 0x8] = a2
107939: 56 1c 01 08              jump @8421 if a5 >u 1
      :                          @8420
107943: 28 a0 4d 01              jump @13215
      :                          @8421
107947: 82 b7 28                 a0 = u64 [a4 + 0x28]
107950: 52 07 07                 jump @8423 if a0 != 0
      :                          @8422
107953: 28 ad 4d 01              jump @13238
      :                          @8423
107957: 82 b7 20                 a0 = u64 [a4 + 0x20]
107960: 7b 79                    u64 [a0] = a2
107962: 3a 07 70 02 03           a0 = u64 [0x30270]
107967: 97 79 0d                 a2 = a0 << 0xd
107970: d3 97 07                 a0 = a0 ^ a2
107973: 98 79 07                 a2 = a0 >> 0x7
107976: d3 97 07                 a0 = a0 ^ a2
107979: 97 79 11                 a2 = a0 << 0x11
107982: d3 79 09                 a2 = a2 ^ a0
107985: 3e 09 70 02 03           u64 [0x30270] = a2
107990: 82 18 08 02              a1 = u64 [sp + 0x208]
107994: 52 08 07                 jump @8425 if a1 != 0
      :                          @8424
107997: 28 69 4d 01              jump @13214
      :                          @8425
108001: 82 1a 00 02              a3 = u64 [sp + 0x200]
108005: 82 a9 10                 a2 = u64 [a3 + 0x10]
108008: 55 19 03 08              jump @8427 if a2 >=u 3
      :                          @8426
108012: 28 7a 4d 01              jump @13246
      :                          @8427
108016: 82 a9 08                 a2 = u64 [a3 + 0x8]
108019: 84 77 01                 a0 = a0 & 0x1
108022: 7b 97 10                 u64 [a2 + 0x10] = a0
108025: 55 18 03 08              jump @8429 if a1 >=u 3
      :                          @8428
108029: 28 84 4c 01              jump @13197
      :                          @8429
108033: 82 a8 40                 a1 = u64 [a3 + 0x40]
108036: 52 08 07                 jump @8431 if a1 != 0
      :                          @8430
108039: 28 3f 4d 01              jump @13214
      :                          @8431
108043: 82 a8 38                 a1 = u64 [a3 + 0x38]
108046: 7b 87                    u64 [a1] = a0
108048: 3a 07 70 02 03           a0 = u64 [0x30270]
108053: 97 79 0d                 a2 = a0 << 0xd
108056: d3 97 07                 a0 = a0 ^ a2
108059: 98 79 07                 a2 = a0 >> 0x7
108062: d3 97 07                 a0 = a0 ^ a2
108065: 97 79 11                 a2 = a0 << 0x11
108068: d3 79 09                 a2 = a2 ^ a0
108071: 3e 09 70 02 03           u64 [0x30270] = a2
108076: 82 18 08 02              a1 = u64 [sp + 0x208]
108080: 52 08 07                 jump @8433 if a1 != 0
      :                          @8432
108083: 28 13 4d 01              jump @13214
      :                          @8433
108087: 82 1a 00 02              a3 = u64 [sp + 0x200]
108091: 82 a9 10                 a2 = u64 [a3 + 0x10]
108094: 55 19 04 08              jump @8435 if a2 >=u 4
      :                          @8434
108098: 28 17 4d 01              jump @13233
      :                          @8435
108102: 82 a9 08                 a2 = u64 [a3 + 0x8]
108105: 84 77 01                 a0 = a0 & 0x1
108108: 7b 97 18                 u64 [a2 + 0x18] = a0
108111: 55 18 04 08              jump @8437 if a1 >=u 4
      :                          @8436
108115: 28 2d 4c 01              jump @13196
      :                          @8437
108119: 82 a8 58                 a1 = u64 [a3 + 0x58]
108122: 52 08 07                 jump @8439 if a1 != 0
      :                          @8438
108125: 28 e9 4c 01              jump @13214
      :                          @8439
108129: 82 a8 50                 a1 = u64 [a3 + 0x50]
108132: 7b 87                    u64 [a1] = a0
108134: 3a 07 70 02 03           a0 = u64 [0x30270]
108139: 97 79 0d                 a2 = a0 << 0xd
108142: d3 97 07                 a0 = a0 ^ a2
108145: 98 79 07                 a2 = a0 >> 0x7
108148: d3 97 07                 a0 = a0 ^ a2
108151: 97 79 11                 a2 = a0 << 0x11
108154: d3 79 09                 a2 = a2 ^ a0
108157: 3e 09 70 02 03           u64 [0x30270] = a2
108162: 82 18 08 02              a1 = u64 [sp + 0x208]
108166: 52 08 07                 jump @8441 if a1 != 0
      :                          @8440
108169: 28 bd 4c 01              jump @13214
      :                          @8441
108173: 82 1a 00 02              a3 = u64 [sp + 0x200]
108177: 82 a9 10                 a2 = u64 [a3 + 0x10]
108180: 55 19 05 08              jump @8443 if a2 >=u 5
      :                          @8442
108184: 28 cf 4c 01              jump @13247
      :                          @8443
108188: 82 a9 08                 a2 = u64 [a3 + 0x8]
108191: 84 77 01                 a0 = a0 & 0x1
108194: 7b 97 20                 u64 [a2 + 0x20] = a0
108197: 55 18 05 08              jump @8445 if a1 >=u 5
      :                          @8444
108201: 28 a0 4c 01              jump @13217
      :                          @8445
108205: 82 a8 70                 a1 = u64 [a3 + 0x70]
108208: 52 08 07                 jump @8447 if a1 != 0
      :                          @8446
108211: 28 93 4c 01              jump @13214
      :                          @8447
108215: 82 a8 68                 a1 = u64 [a3 + 0x68]
108218: 7b 87                    u64 [a1] = a0
108220: 3a 07 70 02 03           a0 = u64 [0x30270]
108225: 97 79 0d                 a2 = a0 << 0xd
108228: d3 97 07                 a0 = a0 ^ a2
108231: 98 79 07                 a2 = a0 >> 0x7
108234: d3 97 07                 a0 = a0 ^ a2
108237: 97 79 11                 a2 = a0 << 0x11
108240: d3 79 09                 a2 = a2 ^ a0
108243: 3e 09 70 02 03           u64 [0x30270] = a2
108248: 82 18 08 02              a1 = u64 [sp + 0x208]
108252: 55 18 02 08              jump @8449 if a1 >=u 2
      :                          @8448
108256: 28 9f 4b 01              jump @13195
      :                          @8449
108260: 82 1b 00 02              a4 = u64 [sp + 0x200]
108264: 82 b9 28                 a2 = u64 [a4 + 0x28]
108267: 55 19 03 08              jump @8451 if a2 >=u 3
      :                          @8450
108271: 28 6b 4c 01              jump @13234
      :                          @8451
108275: 82 ba 20                 a3 = u64 [a4 + 0x20]
108278: 84 79 01                 a2 = a0 & 0x1
108281: 7b a9 10                 u64 [a3 + 0x10] = a2
108284: 55 18 03 08              jump @8453 if a1 >=u 3
      :                          @8452
108288: 28 64 4c 01              jump @13244
      :                          @8453
108292: 82 b8 40                 a1 = u64 [a4 + 0x40]
108295: 55 18 02 08              jump @8455 if a1 >=u 2
      :                          @8454
108299: 28 74 4b 01              jump @13195
      :                          @8455
108303: 82 b8 38                 a1 = u64 [a4 + 0x38]
108306: 7b 89 08                 u64 [a1 + 0x8] = a2
108309: 3a 09 70 02 03           a2 = u64 [0x30270]
108314: 97 9a 0d                 a3 = a2 << 0xd
108317: d3 a9 09                 a2 = a2 ^ a3
108320: 98 9a 07                 a3 = a2 >> 0x7
108323: d3 9a 0a                 a3 = a3 ^ a2
108326: 97 a9 11                 a2 = a3 << 0x11
108329: d3 a9 09                 a2 = a2 ^ a3
108332: 3e 09 70 02 03           u64 [0x30270] = a2
108337: 82 18 08 02              a1 = u64 [sp + 0x208]
108341: 55 18 02 08              jump @8457 if a1 >=u 2
      :                          @8456
108345: 28 46 4b 01              jump @13195
      :                          @8457
108349: 82 1b 00 02              a4 = u64 [sp + 0x200]
108353: 82 b9 28                 a2 = u64 [a4 + 0x28]
108356: 55 19 04 08              jump @8459 if a2 >=u 4
      :                          @8458
108360: 28 11 4c 01              jump @13233
      :                          @8459
108364: 82 b9 20                 a2 = u64 [a4 + 0x20]
108367: 84 aa 01                 a3 = a3 & 0x1
108370: 7b 9a 18                 u64 [a2 + 0x18] = a3
108373: 55 18 04 08              jump @8461 if a1 >=u 4
      :                          @8460
108377: 28 27 4b 01              jump @13196
      :                          @8461
108381: 82 b8 58                 a1 = u64 [a4 + 0x58]
108384: 55 18 02 08              jump @8463 if a1 >=u 2
      :                          @8462
108388: 28 1b 4b 01              jump @13195
      :                          @8463
108392: 82 b8 50                 a1 = u64 [a4 + 0x50]
108395: 7b 8a 08                 u64 [a1 + 0x8] = a3
108398: 3a 09 70 02 03           a2 = u64 [0x30270]
108403: 97 9a 0d                 a3 = a2 << 0xd
108406: d3 a9 09                 a2 = a2 ^ a3
108409: 98 9a 07                 a3 = a2 >> 0x7
108412: d3 9a 0a                 a3 = a3 ^ a2
108415: 97 a9 11                 a2 = a3 << 0x11
108418: d3 a9 09                 a2 = a2 ^ a3
108421: 3e 09 70 02 03           u64 [0x30270] = a2
108426: 82 18 08 02              a1 = u64 [sp + 0x208]
108430: 55 18 02 08              jump @8465 if a1 >=u 2
      :                          @8464
108434: 28 be 4b 01              jump @13224
      :                          @8465
108438: 82 1b 00 02              a4 = u64 [sp + 0x200]
108442: 82 b9 28                 a2 = u64 [a4 + 0x28]
108445: 55 19 05 08              jump @8467 if a2 >=u 5
      :                          @8466
108449: 28 ba 4b 01              jump @13235
      :                          @8467
108453: 82 b9 20                 a2 = u64 [a4 + 0x20]
108456: 84 aa 01                 a3 = a3 & 0x1
108459: 7b 9a 20                 u64 [a2 + 0x20] = a3
108462: 55 18 05 08              jump @8469 if a1 >=u 5
      :                          @8468
108466: 28 a6 4b 01              jump @13232
      :                          @8469
108470: 82 b8 70                 a1 = u64 [a4 + 0x70]
108473: 55 18 02 08              jump @8471 if a1 >=u 2
      :                          @8470
108477: 28 93 4b 01              jump @13224
      :                          @8471
108481: 82 b8 68                 a1 = u64 [a4 + 0x68]
108484: 7b 8a 08                 u64 [a1 + 0x8] = a3
108487: 3a 09 70 02 03           a2 = u64 [0x30270]
108492: 97 9a 0d                 a3 = a2 << 0xd
108495: d3 a9 09                 a2 = a2 ^ a3
108498: 98 9b 07                 a4 = a2 >> 0x7
108501: d3 9b 0b                 a4 = a4 ^ a2
108504: 97 b9 11                 a2 = a4 << 0x11
108507: d3 b9 09                 a2 = a2 ^ a4
108510: 3e 09 70 02 03           u64 [0x30270] = a2
108515: 82 18 08 02              a1 = u64 [sp + 0x208]
108519: 55 18 03 08              jump @8473 if a1 >=u 3
      :                          @8472
108523: 28 5c 4b 01              jump @13215
      :                          @8473
108527: 82 1c 00 02              a5 = u64 [sp + 0x200]
108531: 82 c9 40                 a2 = u64 [a5 + 0x40]
108534: 55 19 04 08              jump @8475 if a2 >=u 4
      :                          @8474
108538: 28 60 4b 01              jump @13234
      :                          @8475
108542: 82 c9 38                 a2 = u64 [a5 + 0x38]
108545: 84 bb 01                 a4 = a4 & 0x1
108548: 7b 9b 18                 u64 [a2 + 0x18] = a4
108551: 55 18 04 08              jump @8477 if a1 >=u 4
      :                          @8476
108555: 28 5d 4b 01              jump @13248
      :                          @8477
108559: 82 c8 58                 a1 = u64 [a5 + 0x58]
108562: 55 18 03 08              jump @8479 if a1 >=u 3
      :                          @8478
108566: 28 3b 4b 01              jump @13225
      :                          @8479
108570: 82 c8 50                 a1 = u64 [a5 + 0x50]
108573: 7b 8b 10                 u64 [a1 + 0x10] = a4
108576: 3a 09 70 02 03           a2 = u64 [0x30270]
108581: 97 9a 0d                 a3 = a2 << 0xd
108584: d3 a9 09                 a2 = a2 ^ a3
108587: 98 9a 07                 a3 = a2 >> 0x7
108590: d3 9a 0a                 a3 = a3 ^ a2
108593: 97 a9 11                 a2 = a3 << 0x11
108596: d3 a9 09                 a2 = a2 ^ a3
108599: 3e 09 70 02 03           u64 [0x30270] = a2
108604: 82 18 08 02              a1 = u64 [sp + 0x208]
108608: 55 18 03 08              jump @8481 if a1 >=u 3
      :                          @8480
108612: 28 0d 4b 01              jump @13225
      :                          @8481
108616: 82 1b 00 02              a4 = u64 [sp + 0x200]
108620: 82 b9 40                 a2 = u64 [a4 + 0x40]
108623: 55 19 05 08              jump @8483 if a2 >=u 5
      :                          @8482
108627: 28 08 4b 01              jump @13235
      :                          @8483
108631: 82 b9 38                 a2 = u64 [a4 + 0x38]
108634: 84 aa 01                 a3 = a3 & 0x1
108637: 7b 9a 20                 u64 [a2 + 0x20] = a3
108640: 55 18 05 08              jump @8485 if a1 >=u 5
      :                          @8484
108644: 28 f4 4a 01              jump @13232
      :                          @8485
108648: 82 b8 70                 a1 = u64 [a4 + 0x70]
108651: 55 18 03 08              jump @8487 if a1 >=u 3
      :                          @8486
108655: 28 e2 4a 01              jump @13225
      :                          @8487
108659: 82 b8 68                 a1 = u64 [a4 + 0x68]
108662: 7b 8a 10                 u64 [a1 + 0x10] = a3
108665: 3a 09 70 02 03           a2 = u64 [0x30270]
108670: 97 9a 0d                 a3 = a2 << 0xd
108673: d3 a9 09                 a2 = a2 ^ a3
108676: 98 9b 07                 a4 = a2 >> 0x7
108679: d3 9b 0b                 a4 = a4 ^ a2
108682: 97 b9 11                 a2 = a4 << 0x11
108685: d3 b9 09                 a2 = a2 ^ a4
108688: 3e 09 70 02 03           u64 [0x30270] = a2
108693: 82 18 08 02              a1 = u64 [sp + 0x208]
108697: 55 18 04 08              jump @8489 if a1 >=u 4
      :                          @8488
108701: 28 aa 4a 01              jump @13215
      :                          @8489
108705: 82 17 00 02              a0 = u64 [sp + 0x200]
108709: 82 79 58                 a2 = u64 [a0 + 0x58]
108712: 55 19 05 08              jump @8491 if a2 >=u 5
      :                          @8490
108716: 28 ae 4a 01              jump @13234
      :                          @8491
108720: 82 79 50                 a2 = u64 [a0 + 0x50]
108723: 84 bb 01                 a4 = a4 & 0x1
108726: 7b 9b 20                 u64 [a2 + 0x20] = a4
108729: 55 18 05 08              jump @8493 if a1 >=u 5
      :                          @8492
108733: 28 a8 4a 01              jump @13245
      :                          @8493
108737: 82 78 70                 a1 = u64 [a0 + 0x70]
108740: 55 18 04 08              jump @8495 if a1 >=u 4
      :                          @8494
108744: 28 8f 4a 01              jump @13231
      :                          @8495
108748: 82 77 68                 a0 = u64 [a0 + 0x68]
108751: 7b 7b 18                 u64 [a0 + 0x18] = a4
108754: 95 17 f8 01              a0 = sp + 0x1f8
108758: 50 20 0a 05 3d 45 ff     ra = 1290, jump @4697
      :                          @8496 [@dyn 645]
108765: 7b 17 10 01              u64 [sp + 0x110] = a0
108769: 95 17 10 01              a0 = sp + 0x110
108773: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
108777: 33 07 28 0c              a0 = 0xc28
108781: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
108785: 33 07 80 08 01           a0 = 0x10880
108790: 7b 17 80 02              u64 [sp + 0x280] = a0
108794: 49 21 88 02 01           u64 [sp + 648] = 0x1
108799: 49 21 a0 02              u64 [sp + 672] = 0
108803: 95 18 d0 01              a1 = sp + 0x1d0
108807: 7b 18 90 02              u64 [sp + 0x290] = a1
108811: 49 21 98 02 01           u64 [sp + 664] = 0x1
108816: 95 17 28 02              a0 = sp + 0x228
108820: 95 18 80 02              a1 = sp + 0x280
108824: 50 20 0c 05 2f a6 fe     ra = 1292, jump @1491
      :                          @8497 [@dyn 646]
108831: 82 16 30 02              s1 = u64 [sp + 0x230]
108835: 82 1b 38 02              a4 = u64 [sp + 0x238]
108839: 82 17 28 02              a0 = u64 [sp + 0x228]
108843: 7b 17 60                 u64 [sp + 0x60] = a0
108846: 33 07 02                 a0 = 0x2
108849: 33 08                    a1 = 0
108851: 33 09                    a2 = 0
108853: 64 6a                    a3 = s1
108855: 33 00 0e 05              ra = 0x50e
108859: 0a 64                    ecalli 100 // 'log'
108861: 01                       fallthrough
      :                          @8498 [@dyn 647]
108862: 82 1c 60                 a5 = u64 [sp + 0x60]
108865: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
108870: 55 38 00 00 f0 0a        jump @8500 if a1 >=u 4293918720
      :                          @8499
108876: 28 b3 33 01              jump @12761
      :                          @8500
108880: 33 07 b0 02 03           a0 = 0x302b0
108885: 95 77 00 00 10           a0 = a0 + 0x100000
108890: 01                       fallthrough
      :                          @8501
108891: 82 78                    a1 = u64 [a0]
108893: c9 87 09                 a2 = a0 - a1
108896: aa 69 07                 jump @8503 if a2 == s1
      :                          @8502
108899: 28 9c 33 01              jump @12761
      :                          @8503
108903: c9 c8 09                 a2 = a1 - a5
108906: 01                       fallthrough
      :                          @8504
108907: 82 7a                    a3 = u64 [a0]
108909: ab 8a ee                 jump @8501 if a3 != a1
      :                          @8505
108912: 7b 79                    u64 [a0] = a2
108914: 33 0b                    a4 = 0
108916: 01                       fallthrough
      :                          @8506
108917: ab 8a e6                 jump @8501 if a3 != a1
      :                          @8507
108920: 28 87 33 01              jump @12761
      :                          @8508 [@dyn 648]
108924: 95 17 80 02              a0 = sp + 0x280
108928: 33 08 06                 a1 = 0x6
108931: 50 20 12 05 2d b4 fe     ra = 1298, jump @1776
      :                          @8509 [@dyn 649]
108938: 95 17 d0 01              a0 = sp + 0x1d0
108942: 95 18 80 02              a1 = sp + 0x280
108946: 33 09 06                 a2 = 0x6
108949: 50 20 14 05 3c bb fe     ra = 1300, jump @1895
      :                          @8510 [@dyn 650]
108956: 3a 07 70 02 03           a0 = u64 [0x30270]
108961: 97 79 0d                 a2 = a0 << 0xd
108964: d3 97 07                 a0 = a0 ^ a2
108967: 98 79 07                 a2 = a0 >> 0x7
108970: d3 97 07                 a0 = a0 ^ a2
108973: 97 79 11                 a2 = a0 << 0x11
108976: d3 79 09                 a2 = a2 ^ a0
108979: 3e 09 70 02 03           u64 [0x30270] = a2
108984: 82 1c e0 01              a5 = u64 [sp + 0x1e0]
108988: 52 0c 07                 jump @8512 if a5 != 0
      :                          @8511
108991: 28 90 49 01              jump @13223
      :                          @8512
108995: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
108999: 82 b9 10                 a2 = u64 [a4 + 0x10]
109002: 56 19 01 08              jump @8514 if a2 >u 1
      :                          @8513
109006: 28 8c 49 01              jump @13234
      :                          @8514
109010: 82 b8 08                 a1 = u64 [a4 + 0x8]
109013: 84 79 01                 a2 = a0 & 0x1
109016: 78 89 01                 u8 [a1 + 0x1] = a2
109019: 56 1c 01 08              jump @8516 if a5 >u 1
      :                          @8515
109023: 28 68 49 01              jump @13215
      :                          @8516
109027: 82 b7 28                 a0 = u64 [a4 + 0x28]
109030: 52 07 07                 jump @8518 if a0 != 0
      :                          @8517
109033: 28 83 49 01              jump @13250
      :                          @8518
109037: 82 b7 20                 a0 = u64 [a4 + 0x20]
109040: 78 79                    u8 [a0] = a2
109042: 3a 07 70 02 03           a0 = u64 [0x30270]
109047: 97 79 0d                 a2 = a0 << 0xd
109050: d3 97 07                 a0 = a0 ^ a2
109053: 98 79 07                 a2 = a0 >> 0x7
109056: d3 97 07                 a0 = a0 ^ a2
109059: 97 79 11                 a2 = a0 << 0x11
109062: d3 79 09                 a2 = a2 ^ a0
109065: 3e 09 70 02 03           u64 [0x30270] = a2
109070: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
109074: 52 08 07                 jump @8520 if a1 != 0
      :                          @8519
109077: 28 31 49 01              jump @13214
      :                          @8520
109081: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
109085: 82 a9 10                 a2 = u64 [a3 + 0x10]
109088: 55 19 03 08              jump @8522 if a2 >=u 3
      :                          @8521
109092: 28 42 49 01              jump @13246
      :                          @8522
109096: 82 a9 08                 a2 = u64 [a3 + 0x8]
109099: 84 77 01                 a0 = a0 & 0x1
109102: 78 97 02                 u8 [a2 + 0x2] = a0
109105: 55 18 03 08              jump @8524 if a1 >=u 3
      :                          @8523
109109: 28 4c 48 01              jump @13197
      :                          @8524
109113: 82 a8 40                 a1 = u64 [a3 + 0x40]
109116: 52 08 07                 jump @8526 if a1 != 0
      :                          @8525
109119: 28 2a 49 01              jump @13249
      :                          @8526
109123: 82 a8 38                 a1 = u64 [a3 + 0x38]
109126: 78 87                    u8 [a1] = a0
109128: 3a 07 70 02 03           a0 = u64 [0x30270]
109133: 97 79 0d                 a2 = a0 << 0xd
109136: d3 97 07                 a0 = a0 ^ a2
109139: 98 79 07                 a2 = a0 >> 0x7
109142: d3 97 07                 a0 = a0 ^ a2
109145: 97 79 11                 a2 = a0 << 0x11
109148: d3 79 09                 a2 = a2 ^ a0
109151: 3e 09 70 02 03           u64 [0x30270] = a2
109156: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
109160: 52 08 07                 jump @8528 if a1 != 0
      :                          @8527
109163: 28 db 48 01              jump @13214
      :                          @8528
109167: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
109171: 82 a9 10                 a2 = u64 [a3 + 0x10]
109174: 55 19 04 08              jump @8530 if a2 >=u 4
      :                          @8529
109178: 28 df 48 01              jump @13233
      :                          @8530
109182: 82 a9 08                 a2 = u64 [a3 + 0x8]
109185: 84 77 01                 a0 = a0 & 0x1
109188: 78 97 03                 u8 [a2 + 0x3] = a0
109191: 55 18 04 08              jump @8532 if a1 >=u 4
      :                          @8531
109195: 28 f5 47 01              jump @13196
      :                          @8532
109199: 82 a8 58                 a1 = u64 [a3 + 0x58]
109202: 52 08 07                 jump @8534 if a1 != 0
      :                          @8533
109205: 28 d4 48 01              jump @13249
      :                          @8534
109209: 82 a8 50                 a1 = u64 [a3 + 0x50]
109212: 78 87                    u8 [a1] = a0
109214: 3a 07 70 02 03           a0 = u64 [0x30270]
109219: 97 79 0d                 a2 = a0 << 0xd
109222: d3 97 07                 a0 = a0 ^ a2
109225: 98 79 07                 a2 = a0 >> 0x7
109228: d3 97 07                 a0 = a0 ^ a2
109231: 97 79 11                 a2 = a0 << 0x11
109234: d3 79 09                 a2 = a2 ^ a0
109237: 3e 09 70 02 03           u64 [0x30270] = a2
109242: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
109246: 52 08 07                 jump @8536 if a1 != 0
      :                          @8535
109249: 28 85 48 01              jump @13214
      :                          @8536
109253: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
109257: 82 a9 10                 a2 = u64 [a3 + 0x10]
109260: 55 19 05 08              jump @8538 if a2 >=u 5
      :                          @8537
109264: 28 97 48 01              jump @13247
      :                          @8538
109268: 82 a9 08                 a2 = u64 [a3 + 0x8]
109271: 84 77 01                 a0 = a0 & 0x1
109274: 78 97 04                 u8 [a2 + 0x4] = a0
109277: 55 18 05 08              jump @8540 if a1 >=u 5
      :                          @8539
109281: 28 68 48 01              jump @13217
      :                          @8540
109285: 82 a8 70                 a1 = u64 [a3 + 0x70]
109288: 52 08 07                 jump @8542 if a1 != 0
      :                          @8541
109291: 28 7e 48 01              jump @13249
      :                          @8542
109295: 82 a8 68                 a1 = u64 [a3 + 0x68]
109298: 78 87                    u8 [a1] = a0
109300: 3a 07 70 02 03           a0 = u64 [0x30270]
109305: 97 79 0d                 a2 = a0 << 0xd
109308: d3 97 07                 a0 = a0 ^ a2
109311: 98 79 07                 a2 = a0 >> 0x7
109314: d3 97 07                 a0 = a0 ^ a2
109317: 97 79 11                 a2 = a0 << 0x11
109320: d3 79 09                 a2 = a2 ^ a0
109323: 3e 09 70 02 03           u64 [0x30270] = a2
109328: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
109332: 52 08 07                 jump @8544 if a1 != 0
      :                          @8543
109335: 28 2f 48 01              jump @13214
      :                          @8544
109339: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
109343: 82 a9 10                 a2 = u64 [a3 + 0x10]
109346: 55 19 06 08              jump @8546 if a2 >=u 6
      :                          @8545
109350: 28 48 48 01              jump @13252
      :                          @8546
109354: 82 a9 08                 a2 = u64 [a3 + 0x8]
109357: 84 77 01                 a0 = a0 & 0x1
109360: 78 97 05                 u8 [a2 + 0x5] = a0
109363: 55 18 06 08              jump @8548 if a1 >=u 6
      :                          @8547
109367: 28 16 48 01              jump @13221
      :                          @8548
109371: 82 a8 88 00              a1 = u64 [a3 + 0x88]
109375: 52 08 07                 jump @8550 if a1 != 0
      :                          @8549
109378: 28 27 48 01              jump @13249
      :                          @8550
109382: 82 a8 80 00              a1 = u64 [a3 + 0x80]
109386: 78 87                    u8 [a1] = a0
109388: 3a 07 70 02 03           a0 = u64 [0x30270]
109393: 97 79 0d                 a2 = a0 << 0xd
109396: d3 97 07                 a0 = a0 ^ a2
109399: 98 79 07                 a2 = a0 >> 0x7
109402: d3 97 07                 a0 = a0 ^ a2
109405: 97 79 11                 a2 = a0 << 0x11
109408: d3 79 09                 a2 = a2 ^ a0
109411: 3e 09 70 02 03           u64 [0x30270] = a2
109416: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
109420: 55 18 02 08              jump @8552 if a1 >=u 2
      :                          @8551
109424: 28 0f 47 01              jump @13195
      :                          @8552
109428: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
109432: 82 b9 28                 a2 = u64 [a4 + 0x28]
109435: 33 0c 03                 a5 = 0x3
109438: ae c9 07                 jump @8554 if a2 >=u a5
      :                          @8553
109441: 28 d9 47 01              jump @13234
      :                          @8554
109445: 82 b9 20                 a2 = u64 [a4 + 0x20]
109448: 84 7a 01                 a3 = a0 & 0x1
109451: 78 9a 02                 u8 [a2 + 0x2] = a3
109454: 55 18 03 08              jump @8556 if a1 >=u 3
      :                          @8555
109458: 28 d2 47 01              jump @13244
      :                          @8556
109462: 82 b9 40                 a2 = u64 [a4 + 0x40]
109465: 55 19 02 08              jump @8558 if a2 >=u 2
      :                          @8557
109469: 28 d2 47 01              jump @13253
      :                          @8558
109473: 82 b8 38                 a1 = u64 [a4 + 0x38]
109476: 78 8a 01                 u8 [a1 + 0x1] = a3
109479: 3a 09 70 02 03           a2 = u64 [0x30270]
109484: 97 9a 0d                 a3 = a2 << 0xd
109487: d3 a9 09                 a2 = a2 ^ a3
109490: 98 9a 07                 a3 = a2 >> 0x7
109493: d3 9a 0a                 a3 = a3 ^ a2
109496: 97 a9 11                 a2 = a3 << 0x11
109499: d3 a9 09                 a2 = a2 ^ a3
109502: 3e 09 70 02 03           u64 [0x30270] = a2
109507: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
109511: 55 18 02 08              jump @8560 if a1 >=u 2
      :                          @8559
109515: 28 85 47 01              jump @13224
      :                          @8560
109519: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
109523: 82 b9 28                 a2 = u64 [a4 + 0x28]
109526: 55 19 04 08              jump @8562 if a2 >=u 4
      :                          @8561
109530: 28 7f 47 01              jump @13233
      :                          @8562
109534: 82 b9 20                 a2 = u64 [a4 + 0x20]
109537: 84 aa 01                 a3 = a3 & 0x1
109540: 78 9a 03                 u8 [a2 + 0x3] = a3
109543: 55 18 04 08              jump @8564 if a1 >=u 4
      :                          @8563
109547: 28 6c 47 01              jump @13231
      :                          @8564
109551: 82 b9 58                 a2 = u64 [a4 + 0x58]
109554: 55 19 02 08              jump @8566 if a2 >=u 2
      :                          @8565
109558: 28 79 47 01              jump @13253
      :                          @8566
109562: 82 b8 50                 a1 = u64 [a4 + 0x50]
109565: 78 8a 01                 u8 [a1 + 0x1] = a3
109568: 3a 09 70 02 03           a2 = u64 [0x30270]
109573: 97 9a 0d                 a3 = a2 << 0xd
109576: d3 a9 09                 a2 = a2 ^ a3
109579: 98 9a 07                 a3 = a2 >> 0x7
109582: d3 9a 0a                 a3 = a3 ^ a2
109585: 97 a9 11                 a2 = a3 << 0x11
109588: d3 a9 09                 a2 = a2 ^ a3
109591: 3e 09 70 02 03           u64 [0x30270] = a2
109596: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
109600: 55 18 02 08              jump @8568 if a1 >=u 2
      :                          @8567
109604: 28 2c 47 01              jump @13224
      :                          @8568
109608: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
109612: 82 b9 28                 a2 = u64 [a4 + 0x28]
109615: 55 19 05 08              jump @8570 if a2 >=u 5
      :                          @8569
109619: 28 28 47 01              jump @13235
      :                          @8570
109623: 82 b9 20                 a2 = u64 [a4 + 0x20]
109626: 84 aa 01                 a3 = a3 & 0x1
109629: 78 9a 04                 u8 [a2 + 0x4] = a3
109632: 55 18 05 08              jump @8572 if a1 >=u 5
      :                          @8571
109636: 28 14 47 01              jump @13232
      :                          @8572
109640: 82 b9 70                 a2 = u64 [a4 + 0x70]
109643: 55 19 02 08              jump @8574 if a2 >=u 2
      :                          @8573
109647: 28 20 47 01              jump @13253
      :                          @8574
109651: 82 b8 68                 a1 = u64 [a4 + 0x68]
109654: 78 8a 01                 u8 [a1 + 0x1] = a3
109657: 3a 09 70 02 03           a2 = u64 [0x30270]
109662: 97 9a 0d                 a3 = a2 << 0xd
109665: d3 a9 09                 a2 = a2 ^ a3
109668: 98 9a 07                 a3 = a2 >> 0x7
109671: d3 9a 0a                 a3 = a3 ^ a2
109674: 97 a9 11                 a2 = a3 << 0x11
109677: d3 a9 09                 a2 = a2 ^ a3
109680: 3e 09 70 02 03           u64 [0x30270] = a2
109685: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
109689: 55 18 02 08              jump @8576 if a1 >=u 2
      :                          @8575
109693: 28 d3 46 01              jump @13224
      :                          @8576
109697: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
109701: 82 b9 28                 a2 = u64 [a4 + 0x28]
109704: 55 19 06 08              jump @8578 if a2 >=u 6
      :                          @8577
109708: 28 d0 46 01              jump @13236
      :                          @8578
109712: 82 b9 20                 a2 = u64 [a4 + 0x20]
109715: 84 aa 01                 a3 = a3 & 0x1
109718: 78 9a 05                 u8 [a2 + 0x5] = a3
109721: 55 18 06 08              jump @8580 if a1 >=u 6
      :                          @8579
109725: 28 c0 46 01              jump @13237
      :                          @8580
109729: 82 b9 88 00              a2 = u64 [a4 + 0x88]
109733: 55 19 02 08              jump @8582 if a2 >=u 2
      :                          @8581
109737: 28 c6 46 01              jump @13253
      :                          @8582
109741: 82 b8 80 00              a1 = u64 [a4 + 0x80]
109745: 78 8a 01                 u8 [a1 + 0x1] = a3
109748: 3a 09 70 02 03           a2 = u64 [0x30270]
109753: 97 9a 0d                 a3 = a2 << 0xd
109756: d3 a9 09                 a2 = a2 ^ a3
109759: 98 9b 07                 a4 = a2 >> 0x7
109762: d3 9b 0b                 a4 = a4 ^ a2
109765: 97 b9 11                 a2 = a4 << 0x11
109768: d3 b9 09                 a2 = a2 ^ a4
109771: 3e 09 70 02 03           u64 [0x30270] = a2
109776: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
109780: 55 18 03 08              jump @8584 if a1 >=u 3
      :                          @8583
109784: 28 6f 46 01              jump @13215
      :                          @8584
109788: 82 1c d8 01              a5 = u64 [sp + 0x1d8]
109792: 82 c9 40                 a2 = u64 [a5 + 0x40]
109795: 55 19 04 08              jump @8586 if a2 >=u 4
      :                          @8585
109799: 28 73 46 01              jump @13234
      :                          @8586
109803: 82 c9 38                 a2 = u64 [a5 + 0x38]
109806: 84 bb 01                 a4 = a4 & 0x1
109809: 78 9b 03                 u8 [a2 + 0x3] = a4
109812: 55 18 04 08              jump @8588 if a1 >=u 4
      :                          @8587
109816: 28 70 46 01              jump @13248
      :                          @8588
109820: 82 c9 58                 a2 = u64 [a5 + 0x58]
109823: 55 19 03 08              jump @8590 if a2 >=u 3
      :                          @8589
109827: 28 6f 46 01              jump @13256
      :                          @8590
109831: 82 c8 50                 a1 = u64 [a5 + 0x50]
109834: 78 8b 02                 u8 [a1 + 0x2] = a4
109837: 3a 09 70 02 03           a2 = u64 [0x30270]
109842: 97 9a 0d                 a3 = a2 << 0xd
109845: d3 a9 09                 a2 = a2 ^ a3
109848: 98 9a 07                 a3 = a2 >> 0x7
109851: d3 9a 0a                 a3 = a3 ^ a2
109854: 97 a9 11                 a2 = a3 << 0x11
109857: d3 a9 09                 a2 = a2 ^ a3
109860: 3e 09 70 02 03           u64 [0x30270] = a2
109865: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
109869: 55 18 03 08              jump @8592 if a1 >=u 3
      :                          @8591
109873: 28 20 46 01              jump @13225
      :                          @8592
109877: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
109881: 82 b9 40                 a2 = u64 [a4 + 0x40]
109884: 55 19 05 08              jump @8594 if a2 >=u 5
      :                          @8593
109888: 28 1b 46 01              jump @13235
      :                          @8594
109892: 82 b9 38                 a2 = u64 [a4 + 0x38]
109895: 84 aa 01                 a3 = a3 & 0x1
109898: 78 9a 04                 u8 [a2 + 0x4] = a3
109901: 55 18 05 08              jump @8596 if a1 >=u 5
      :                          @8595
109905: 28 07 46 01              jump @13232
      :                          @8596
109909: 82 b9 70                 a2 = u64 [a4 + 0x70]
109912: 55 19 03 08              jump @8598 if a2 >=u 3
      :                          @8597
109916: 28 16 46 01              jump @13256
      :                          @8598
109920: 82 b8 68                 a1 = u64 [a4 + 0x68]
109923: 78 8a 02                 u8 [a1 + 0x2] = a3
109926: 3a 09 70 02 03           a2 = u64 [0x30270]
109931: 97 9a 0d                 a3 = a2 << 0xd
109934: d3 a9 09                 a2 = a2 ^ a3
109937: 98 9a 07                 a3 = a2 >> 0x7
109940: d3 9a 0a                 a3 = a3 ^ a2
109943: 97 a9 11                 a2 = a3 << 0x11
109946: d3 a9 09                 a2 = a2 ^ a3
109949: 3e 09 70 02 03           u64 [0x30270] = a2
109954: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
109958: 55 18 03 08              jump @8600 if a1 >=u 3
      :                          @8599
109962: 28 c7 45 01              jump @13225
      :                          @8600
109966: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
109970: 82 b9 40                 a2 = u64 [a4 + 0x40]
109973: 55 19 06 08              jump @8602 if a2 >=u 6
      :                          @8601
109977: 28 c3 45 01              jump @13236
      :                          @8602
109981: 82 b9 38                 a2 = u64 [a4 + 0x38]
109984: 84 aa 01                 a3 = a3 & 0x1
109987: 78 9a 05                 u8 [a2 + 0x5] = a3
109990: 55 18 06 08              jump @8604 if a1 >=u 6
      :                          @8603
109994: 28 b3 45 01              jump @13237
      :                          @8604
109998: 82 b9 88 00              a2 = u64 [a4 + 0x88]
110002: 55 19 03 08              jump @8606 if a2 >=u 3
      :                          @8605
110006: 28 bc 45 01              jump @13256
      :                          @8606
110010: 82 b8 80 00              a1 = u64 [a4 + 0x80]
110014: 78 8a 02                 u8 [a1 + 0x2] = a3
110017: 3a 09 70 02 03           a2 = u64 [0x30270]
110022: 97 9a 0d                 a3 = a2 << 0xd
110025: d3 a9 09                 a2 = a2 ^ a3
110028: 98 9b 07                 a4 = a2 >> 0x7
110031: d3 9b 0b                 a4 = a4 ^ a2
110034: 97 b9 11                 a2 = a4 << 0x11
110037: d3 b9 09                 a2 = a2 ^ a4
110040: 3e 09 70 02 03           u64 [0x30270] = a2
110045: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
110049: 55 18 04 08              jump @8608 if a1 >=u 4
      :                          @8607
110053: 28 62 45 01              jump @13215
      :                          @8608
110057: 82 1c d8 01              a5 = u64 [sp + 0x1d8]
110061: 82 c9 58                 a2 = u64 [a5 + 0x58]
110064: 55 19 05 08              jump @8610 if a2 >=u 5
      :                          @8609
110068: 28 66 45 01              jump @13234
      :                          @8610
110072: 82 c9 50                 a2 = u64 [a5 + 0x50]
110075: 84 bb 01                 a4 = a4 & 0x1
110078: 78 9b 04                 u8 [a2 + 0x4] = a4
110081: 55 18 05 08              jump @8612 if a1 >=u 5
      :                          @8611
110085: 28 60 45 01              jump @13245
      :                          @8612
110089: 82 c9 70                 a2 = u64 [a5 + 0x70]
110092: 55 19 04 08              jump @8614 if a2 >=u 4
      :                          @8613
110096: 28 6b 45 01              jump @13263
      :                          @8614
110100: 82 c8 68                 a1 = u64 [a5 + 0x68]
110103: 78 8b 03                 u8 [a1 + 0x3] = a4
110106: 3a 09 70 02 03           a2 = u64 [0x30270]
110111: 97 9a 0d                 a3 = a2 << 0xd
110114: d3 a9 09                 a2 = a2 ^ a3
110117: 98 9a 07                 a3 = a2 >> 0x7
110120: d3 9a 0a                 a3 = a3 ^ a2
110123: 97 a9 11                 a2 = a3 << 0x11
110126: d3 a9 09                 a2 = a2 ^ a3
110129: 3e 09 70 02 03           u64 [0x30270] = a2
110134: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
110138: 55 18 04 08              jump @8616 if a1 >=u 4
      :                          @8615
110142: 28 19 45 01              jump @13231
      :                          @8616
110146: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
110150: 82 b9 58                 a2 = u64 [a4 + 0x58]
110153: 55 19 06 08              jump @8618 if a2 >=u 6
      :                          @8617
110157: 28 0f 45 01              jump @13236
      :                          @8618
110161: 82 b9 50                 a2 = u64 [a4 + 0x50]
110164: 84 aa 01                 a3 = a3 & 0x1
110167: 78 9a 05                 u8 [a2 + 0x5] = a3
110170: 55 18 06 08              jump @8620 if a1 >=u 6
      :                          @8619
110174: 28 ff 44 01              jump @13237
      :                          @8620
110178: 82 b9 88 00              a2 = u64 [a4 + 0x88]
110182: 55 19 04 08              jump @8622 if a2 >=u 4
      :                          @8621
110186: 28 11 45 01              jump @13263
      :                          @8622
110190: 82 b8 80 00              a1 = u64 [a4 + 0x80]
110194: 78 8a 03                 u8 [a1 + 0x3] = a3
110197: 3a 09 70 02 03           a2 = u64 [0x30270]
110202: 97 9a 0d                 a3 = a2 << 0xd
110205: d3 a9 09                 a2 = a2 ^ a3
110208: 98 9b 07                 a4 = a2 >> 0x7
110211: d3 9b 0b                 a4 = a4 ^ a2
110214: 97 b9 11                 a2 = a4 << 0x11
110217: d3 b9 09                 a2 = a2 ^ a4
110220: 3e 09 70 02 03           u64 [0x30270] = a2
110225: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
110229: 55 18 05 08              jump @8624 if a1 >=u 5
      :                          @8623
110233: 28 ae 44 01              jump @13215
      :                          @8624
110237: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
110241: 82 79 70                 a2 = u64 [a0 + 0x70]
110244: 33 0c 06                 a5 = 0x6
110247: ae c9 07                 jump @8626 if a2 >=u a5
      :                          @8625
110250: 28 b0 44 01              jump @13234
      :                          @8626
110254: 82 79 68                 a2 = u64 [a0 + 0x68]
110257: 84 bb 01                 a4 = a4 & 0x1
110260: 78 9b 05                 u8 [a2 + 0x5] = a4
110263: 55 18 06 08              jump @8628 if a1 >=u 6
      :                          @8627
110267: 28 b5 44 01              jump @13254
      :                          @8628
110271: 82 79 88 00              a2 = u64 [a0 + 0x88]
110275: 33 0a 05                 a3 = 0x5
110278: ae a9 07                 jump @8630 if a2 >=u a3
      :                          @8629
110281: 28 bd 44 01              jump @13274
      :                          @8630
110285: 82 79 80 00              a2 = u64 [a0 + 0x80]
110289: 78 9b 04                 u8 [a2 + 0x4] = a4
110292: 50 20 16 05 1b 34 ff     ra = 1302, jump @4437
      :                          @8631 [@dyn 651]
110299: 84 77 01                 a0 = a0 & 0x1
110302: 84 88 01                 a1 = a1 & 0x1
110305: 78 17 b8 01              u8 [sp + 0x1b8] = a0
110309: 78 18 10 01              u8 [sp + 0x110] = a1
110313: 95 17 b8 01              a0 = sp + 0x1b8
110317: 7b 17 28 02              u64 [sp + 0x228] = a0
110321: 33 07 80 0c              a0 = 0xc80
110325: 7b 17 30 02              u64 [sp + 0x230] = a0
110329: 95 18 10 01              a1 = sp + 0x110
110333: 7b 18 38 02              u64 [sp + 0x238] = a1
110337: 7b 17 40 02              u64 [sp + 0x240] = a0
110341: 33 07 98 08 01           a0 = 0x10898
110346: 7b 17 80 02              u64 [sp + 0x280] = a0
110350: 49 21 88 02 02           u64 [sp + 648] = 0x2
110355: 49 21 a0 02              u64 [sp + 672] = 0
110359: 95 18 28 02              a1 = sp + 0x228
110363: 7b 18 90 02              u64 [sp + 0x290] = a1
110367: 49 21 98 02 02           u64 [sp + 664] = 0x2
110372: 95 17 f8 01              a0 = sp + 0x1f8
110376: 95 18 80 02              a1 = sp + 0x280
110380: 50 20 18 05 1b a0 fe     ra = 1304, jump @1491
      :                          @8632 [@dyn 652]
110387: 82 16 00 02              s1 = u64 [sp + 0x200]
110391: 82 1b 08 02              a4 = u64 [sp + 0x208]
110395: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
110399: 7b 17 60                 u64 [sp + 0x60] = a0
110402: 33 07 02                 a0 = 0x2
110405: 33 08                    a1 = 0
110407: 33 09                    a2 = 0
110409: 64 6a                    a3 = s1
110411: 33 00 1a 05              ra = 0x51a
110415: 0a 64                    ecalli 100 // 'log'
110417: 01                       fallthrough
      :                          @8633 [@dyn 653]
110418: 82 1c 60                 a5 = u64 [sp + 0x60]
110421: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
110426: 55 38 00 00 f0 09        jump @8635 if a1 >=u 4293918720
      :                          @8634
110432: 28 ed 7d                 jump @10535
      :                          @8635
110435: 33 07 b0 02 03           a0 = 0x302b0
110440: 95 77 00 00 10           a0 = a0 + 0x100000
110445: 01                       fallthrough
      :                          @8636
110446: 82 78                    a1 = u64 [a0]
110448: c9 87 09                 a2 = a0 - a1
110451: aa 69 06                 jump @8638 if a2 == s1
      :                          @8637
110454: 28 d7 7d                 jump @10535
      :                          @8638
110457: c9 c8 09                 a2 = a1 - a5
110460: 01                       fallthrough
      :                          @8639
110461: 82 7a                    a3 = u64 [a0]
110463: ab 8a ef                 jump @8636 if a3 != a1
      :                          @8640
110466: 7b 79                    u64 [a0] = a2
110468: 33 0b                    a4 = 0
110470: 01                       fallthrough
      :                          @8641
110471: ab 8a e7                 jump @8636 if a3 != a1
      :                          @8642
110474: 28 c3 7d                 jump @10535
      :                          @8643 [@dyn 654]
110477: 95 17 80 02              a0 = sp + 0x280
110481: 33 08 05                 a1 = 0x5
110484: 50 20 1e 05 1c ae fe     ra = 1310, jump @1776
      :                          @8644 [@dyn 655]
110491: 95 17 d0 01              a0 = sp + 0x1d0
110495: 95 18 80 02              a1 = sp + 0x280
110499: 33 09 05                 a2 = 0x5
110502: 50 20 20 05 2b b5 fe     ra = 1312, jump @1895
      :                          @8645 [@dyn 656]
110509: 3a 07 70 02 03           a0 = u64 [0x30270]
110514: 97 78 0d                 a1 = a0 << 0xd
110517: d3 87 07                 a0 = a0 ^ a1
110520: 98 78 07                 a1 = a0 >> 0x7
110523: d3 87 07                 a0 = a0 ^ a1
110526: 97 78 11                 a1 = a0 << 0x11
110529: d3 78 08                 a1 = a1 ^ a0
110532: 84 77 01                 a0 = a0 & 0x1
110535: 3e 08 70 02 03           u64 [0x30270] = a1
110540: 51 07 25                 jump @8651 if a0 == 0
      :                          @8646
110543: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
110547: 52 07 07                 jump @8648 if a0 != 0
      :                          @8647
110550: 28 9d 43 01              jump @13257
      :                          @8648
110554: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
110558: 82 a8 10                 a1 = u64 [a3 + 0x10]
110561: 56 18 01 08              jump @8650 if a1 >u 1
      :                          @8649
110565: 28 62 43 01              jump @13215
      :                          @8650
110569: 82 a7 08                 a0 = u64 [a3 + 0x8]
110572: 46 17 01 01              u8 [a0 + 1] = 0x1
110576: 01                       fallthrough
      :                          @8651
110577: 3a 07 70 02 03           a0 = u64 [0x30270]
110582: 97 78 0d                 a1 = a0 << 0xd
110585: d3 87 07                 a0 = a0 ^ a1
110588: 98 78 07                 a1 = a0 >> 0x7
110591: d3 87 07                 a0 = a0 ^ a1
110594: 97 78 11                 a1 = a0 << 0x11
110597: d3 78 08                 a1 = a1 ^ a0
110600: 84 77 01                 a0 = a0 & 0x1
110603: 3e 08 70 02 03           u64 [0x30270] = a1
110608: 51 07 25                 jump @8657 if a0 == 0
      :                          @8652
110611: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
110615: 52 07 07                 jump @8654 if a0 != 0
      :                          @8653
110618: 28 59 43 01              jump @13257
      :                          @8654
110622: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
110626: 82 78 10                 a1 = u64 [a0 + 0x10]
110629: 55 18 03 08              jump @8656 if a1 >=u 3
      :                          @8655
110633: 28 28 43 01              jump @13225
      :                          @8656
110637: 82 77 08                 a0 = u64 [a0 + 0x8]
110640: 46 17 02 01              u8 [a0 + 2] = 0x1
110644: 01                       fallthrough
      :                          @8657
110645: 3a 08 70 02 03           a1 = u64 [0x30270]
110650: 97 89 0d                 a2 = a1 << 0xd
110653: d3 98 08                 a1 = a1 ^ a2
110656: 98 89 07                 a2 = a1 >> 0x7
110659: d3 98 08                 a1 = a1 ^ a2
110662: 97 89 11                 a2 = a1 << 0x11
110665: d3 89 09                 a2 = a2 ^ a1
110668: 84 88 01                 a1 = a1 & 0x1
110671: 3e 09 70 02 03           u64 [0x30270] = a2
110676: 51 08 27                 jump @8663 if a1 == 0
      :                          @8658
110679: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
110683: 52 08 07                 jump @8660 if a1 != 0
      :                          @8659
110686: 28 e8 42 01              jump @13214
      :                          @8660
110690: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
110694: 82 98 10                 a1 = u64 [a2 + 0x10]
110697: 33 0a 04                 a3 = 0x4
110700: ae a8 07                 jump @8662 if a1 >=u a3
      :                          @8661
110703: 28 e8 42 01              jump @13231
      :                          @8662
110707: 82 98 08                 a1 = u64 [a2 + 0x8]
110710: 46 18 03 01              u8 [a1 + 3] = 0x1
110714: 01                       fallthrough
      :                          @8663
110715: 3a 08 70 02 03           a1 = u64 [0x30270]
110720: 97 89 0d                 a2 = a1 << 0xd
110723: d3 98 08                 a1 = a1 ^ a2
110726: 98 89 07                 a2 = a1 >> 0x7
110729: d3 98 08                 a1 = a1 ^ a2
110732: 97 89 11                 a2 = a1 << 0x11
110735: d3 89 09                 a2 = a2 ^ a1
110738: 84 88 01                 a1 = a1 & 0x1
110741: 3e 09 70 02 03           u64 [0x30270] = a2
110746: 51 08 25                 jump @8669 if a1 == 0
      :                          @8664
110749: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
110753: 52 07 07                 jump @8666 if a0 != 0
      :                          @8665
110756: 28 cf 42 01              jump @13257
      :                          @8666
110760: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
110764: 82 78 10                 a1 = u64 [a0 + 0x10]
110767: 55 18 05 08              jump @8668 if a1 >=u 5
      :                          @8667
110771: 28 ad 42 01              jump @13240
      :                          @8668
110775: 82 77 08                 a0 = u64 [a0 + 0x8]
110778: 46 17 04 01              u8 [a0 + 4] = 0x1
110782: 01                       fallthrough
      :                          @8669
110783: 3a 07 70 02 03           a0 = u64 [0x30270]
110788: 97 78 0d                 a1 = a0 << 0xd
110791: d3 87 07                 a0 = a0 ^ a1
110794: 98 78 07                 a1 = a0 >> 0x7
110797: d3 87 07                 a0 = a0 ^ a1
110800: 97 78 11                 a1 = a0 << 0x11
110803: d3 78 08                 a1 = a1 ^ a0
110806: 84 77 01                 a0 = a0 & 0x1
110809: 3e 08 70 02 03           u64 [0x30270] = a1
110814: 51 07 28                 jump @8675 if a0 == 0
      :                          @8670
110817: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
110821: 55 18 02 08              jump @8672 if a1 >=u 2
      :                          @8671
110825: 28 7a 42 01              jump @13243
      :                          @8672
110829: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
110833: 82 a8 28                 a1 = u64 [a3 + 0x28]
110836: 33 0b 03                 a4 = 0x3
110839: ae b8 07                 jump @8674 if a1 >=u a4
      :                          @8673
110842: 28 4d 42 01              jump @13215
      :                          @8674
110846: 82 a7 20                 a0 = u64 [a3 + 0x20]
110849: 46 17 02 01              u8 [a0 + 2] = 0x1
110853: 01                       fallthrough
      :                          @8675
110854: 3a 07 70 02 03           a0 = u64 [0x30270]
110859: 97 78 0d                 a1 = a0 << 0xd
110862: d3 87 07                 a0 = a0 ^ a1
110865: 98 78 07                 a1 = a0 >> 0x7
110868: d3 87 07                 a0 = a0 ^ a1
110871: 97 78 11                 a1 = a0 << 0x11
110874: d3 78 08                 a1 = a1 ^ a0
110877: 84 77 01                 a0 = a0 & 0x1
110880: 3e 08 70 02 03           u64 [0x30270] = a1
110885: 51 07 26                 jump @8681 if a0 == 0
      :                          @8676
110888: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
110892: 55 18 02 08              jump @8678 if a1 >=u 2
      :                          @8677
110896: 28 33 42 01              jump @13243
      :                          @8678
110900: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
110904: 82 78 28                 a1 = u64 [a0 + 0x28]
110907: 55 18 04 08              jump @8680 if a1 >=u 4
      :                          @8679
110911: 28 23 42 01              jump @13242
      :                          @8680
110915: 82 77 20                 a0 = u64 [a0 + 0x20]
110918: 46 17 03 01              u8 [a0 + 3] = 0x1
110922: 01                       fallthrough
      :                          @8681
110923: 3a 08 70 02 03           a1 = u64 [0x30270]
110928: 97 89 0d                 a2 = a1 << 0xd
110931: d3 98 08                 a1 = a1 ^ a2
110934: 98 89 07                 a2 = a1 >> 0x7
110937: d3 98 08                 a1 = a1 ^ a2
110940: 97 89 11                 a2 = a1 << 0x11
110943: d3 89 09                 a2 = a2 ^ a1
110946: 84 88 01                 a1 = a1 & 0x1
110949: 3e 09 70 02 03           u64 [0x30270] = a2
110954: 51 08 28                 jump @8687 if a1 == 0
      :                          @8682
110957: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
110961: 55 18 02 08              jump @8684 if a1 >=u 2
      :                          @8683
110965: 28 ee 41 01              jump @13243
      :                          @8684
110969: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
110973: 82 98 28                 a1 = u64 [a2 + 0x28]
110976: 33 0a 05                 a3 = 0x5
110979: ae a8 07                 jump @8686 if a1 >=u a3
      :                          @8685
110982: 28 da 41 01              jump @13240
      :                          @8686
110986: 82 98 20                 a1 = u64 [a2 + 0x20]
110989: 46 18 04 01              u8 [a1 + 4] = 0x1
110993: 01                       fallthrough
      :                          @8687
110994: 3a 08 70 02 03           a1 = u64 [0x30270]
110999: 97 89 0d                 a2 = a1 << 0xd
111002: d3 98 08                 a1 = a1 ^ a2
111005: 98 89 07                 a2 = a1 >> 0x7
111008: d3 98 08                 a1 = a1 ^ a2
111011: 97 89 11                 a2 = a1 << 0x11
111014: d3 89 09                 a2 = a2 ^ a1
111017: 84 88 01                 a1 = a1 & 0x1
111020: 3e 09 70 02 03           u64 [0x30270] = a2
111025: 51 08 28                 jump @8693 if a1 == 0
      :                          @8688
111028: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
111032: 55 18 03 08              jump @8690 if a1 >=u 3
      :                          @8689
111036: 28 a5 41 01              jump @13241
      :                          @8690
111040: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
111044: 82 98 40                 a1 = u64 [a2 + 0x40]
111047: 33 0a 04                 a3 = 0x4
111050: ae a8 07                 jump @8692 if a1 >=u a3
      :                          @8691
111053: 28 7a 41 01              jump @13215
      :                          @8692
111057: 82 97 38                 a0 = u64 [a2 + 0x38]
111060: 46 17 03 01              u8 [a0 + 3] = 0x1
111064: 01                       fallthrough
      :                          @8693
111065: 3a 08 70 02 03           a1 = u64 [0x30270]
111070: 97 89 0d                 a2 = a1 << 0xd
111073: d3 98 08                 a1 = a1 ^ a2
111076: 98 89 07                 a2 = a1 >> 0x7
111079: d3 98 08                 a1 = a1 ^ a2
111082: 97 89 11                 a2 = a1 << 0x11
111085: d3 89 09                 a2 = a2 ^ a1
111088: 84 88 01                 a1 = a1 & 0x1
111091: 3e 09 70 02 03           u64 [0x30270] = a2
111096: 51 08 28                 jump @8699 if a1 == 0
      :                          @8694
111099: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
111103: 55 18 03 08              jump @8696 if a1 >=u 3
      :                          @8695
111107: 28 5e 41 01              jump @13241
      :                          @8696
111111: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
111115: 82 98 40                 a1 = u64 [a2 + 0x40]
111118: 33 0a 05                 a3 = 0x5
111121: ae a8 07                 jump @8698 if a1 >=u a3
      :                          @8697
111124: 28 4c 41 01              jump @13240
      :                          @8698
111128: 82 98 38                 a1 = u64 [a2 + 0x38]
111131: 46 18 04 01              u8 [a1 + 4] = 0x1
111135: 01                       fallthrough
      :                          @8699
111136: 3a 08 70 02 03           a1 = u64 [0x30270]
111141: 97 89 0d                 a2 = a1 << 0xd
111144: d3 98 08                 a1 = a1 ^ a2
111147: 98 89 07                 a2 = a1 >> 0x7
111150: d3 98 08                 a1 = a1 ^ a2
111153: 97 89 11                 a2 = a1 << 0x11
111156: d3 89 09                 a2 = a2 ^ a1
111159: 84 88 01                 a1 = a1 & 0x1
111162: 3e 09 70 02 03           u64 [0x30270] = a2
111167: 51 08 28                 jump @8705 if a1 == 0
      :                          @8700
111170: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
111174: 55 18 04 08              jump @8702 if a1 >=u 4
      :                          @8701
111178: 28 18 41 01              jump @13242
      :                          @8702
111182: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
111186: 82 98 58                 a1 = u64 [a2 + 0x58]
111189: 33 0a 05                 a3 = 0x5
111192: ae a8 07                 jump @8704 if a1 >=u a3
      :                          @8703
111195: 28 ec 40 01              jump @13215
      :                          @8704
111199: 82 97 50                 a0 = u64 [a2 + 0x50]
111202: 46 17 04 01              u8 [a0 + 4] = 0x1
111206: 01                       fallthrough
      :                          @8705
111207: 95 17 80 02              a0 = sp + 0x280
111211: 95 18 d0 01              a1 = sp + 0x1d0
111215: 50 20 22 05 50 41 ff     ra = 1314, jump @4853
      :                          @8706 [@dyn 657]
111222: 82 17 80 02              a0 = u64 [sp + 0x280]
111226: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
111236: aa 87 07                 jump @8708 if a0 == a1
      :                          @8707
111239: 28 bd 31 01              jump @12906
      :                          @8708
111243: 49 21 f8 01              u64 [sp + 504] = 0
111247: 49 21 00 02 08           u64 [sp + 512] = 0x8
111252: 49 21 08 02              u64 [sp + 520] = 0
111256: 28 c5 31 01              jump @12907
      :                          @8709 [@dyn 658]
111260: 95 17 80 02              a0 = sp + 0x280
111264: 33 08 05                 a1 = 0x5
111267: 50 20 26 05 0d ab fe     ra = 1318, jump @1776
      :                          @8710 [@dyn 659]
111274: 95 17 d0 01              a0 = sp + 0x1d0
111278: 95 18 80 02              a1 = sp + 0x280
111282: 33 09 05                 a2 = 0x5
111285: 50 20 28 05 1c b2 fe     ra = 1320, jump @1895
      :                          @8711 [@dyn 660]
111292: 3a 08 70 02 03           a1 = u64 [0x30270]
111297: 97 89 0d                 a2 = a1 << 0xd
111300: d3 98 08                 a1 = a1 ^ a2
111303: 98 89 07                 a2 = a1 >> 0x7
111306: d3 98 08                 a1 = a1 ^ a2
111309: 97 89 11                 a2 = a1 << 0x11
111312: d3 89 09                 a2 = a2 ^ a1
111315: 84 88 01                 a1 = a1 & 0x1
111318: 3e 09 70 02 03           u64 [0x30270] = a2
111323: 51 08 27                 jump @8717 if a1 == 0
      :                          @8712
111326: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
111330: 52 08 07                 jump @8714 if a1 != 0
      :                          @8713
111333: 28 99 40 01              jump @13266
      :                          @8714
111337: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
111341: 82 98 10                 a1 = u64 [a2 + 0x10]
111344: 33 0a 02                 a3 = 0x2
111347: ae a8 07                 jump @8716 if a1 >=u a3
      :                          @8715
111350: 28 5a 40 01              jump @13224
      :                          @8716
111354: 82 98 08                 a1 = u64 [a2 + 0x8]
111357: 46 18 01 01              u8 [a1 + 1] = 0x1
111361: 01                       fallthrough
      :                          @8717
111362: 3a 08 70 02 03           a1 = u64 [0x30270]
111367: 97 89 0d                 a2 = a1 << 0xd
111370: d3 98 08                 a1 = a1 ^ a2
111373: 98 89 07                 a2 = a1 >> 0x7
111376: d3 98 08                 a1 = a1 ^ a2
111379: 97 89 11                 a2 = a1 << 0x11
111382: d3 89 09                 a2 = a2 ^ a1
111385: 84 88 01                 a1 = a1 & 0x1
111388: 3e 09 70 02 03           u64 [0x30270] = a2
111393: 51 08 25                 jump @8723 if a1 == 0
      :                          @8718
111396: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
111400: 52 07 07                 jump @8720 if a0 != 0
      :                          @8719
111403: 28 48 40 01              jump @13257
      :                          @8720
111407: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
111411: 82 78 10                 a1 = u64 [a0 + 0x10]
111414: 55 18 03 08              jump @8722 if a1 >=u 3
      :                          @8721
111418: 28 17 40 01              jump @13225
      :                          @8722
111422: 82 77 08                 a0 = u64 [a0 + 0x8]
111425: 46 17 02 01              u8 [a0 + 2] = 0x1
111429: 01                       fallthrough
      :                          @8723
111430: 3a 08 70 02 03           a1 = u64 [0x30270]
111435: 97 89 0d                 a2 = a1 << 0xd
111438: d3 98 08                 a1 = a1 ^ a2
111441: 98 89 07                 a2 = a1 >> 0x7
111444: d3 98 08                 a1 = a1 ^ a2
111447: 97 89 11                 a2 = a1 << 0x11
111450: d3 89 09                 a2 = a2 ^ a1
111453: 84 88 01                 a1 = a1 & 0x1
111456: 3e 09 70 02 03           u64 [0x30270] = a2
111461: 51 08 27                 jump @8729 if a1 == 0
      :                          @8724
111464: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
111468: 52 08 07                 jump @8726 if a1 != 0
      :                          @8725
111471: 28 0f 40 01              jump @13266
      :                          @8726
111475: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
111479: 82 98 10                 a1 = u64 [a2 + 0x10]
111482: 33 0a 04                 a3 = 0x4
111485: ae a8 07                 jump @8728 if a1 >=u a3
      :                          @8727
111488: 28 e2 3f 01              jump @13242
      :                          @8728
111492: 82 98 08                 a1 = u64 [a2 + 0x8]
111495: 46 18 03 01              u8 [a1 + 3] = 0x1
111499: 01                       fallthrough
      :                          @8729
111500: 3a 08 70 02 03           a1 = u64 [0x30270]
111505: 97 89 0d                 a2 = a1 << 0xd
111508: d3 98 08                 a1 = a1 ^ a2
111511: 98 89 07                 a2 = a1 >> 0x7
111514: d3 98 08                 a1 = a1 ^ a2
111517: 97 89 11                 a2 = a1 << 0x11
111520: d3 89 09                 a2 = a2 ^ a1
111523: 84 88 01                 a1 = a1 & 0x1
111526: 3e 09 70 02 03           u64 [0x30270] = a2
111531: 51 08 25                 jump @8735 if a1 == 0
      :                          @8730
111534: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
111538: 52 07 07                 jump @8732 if a0 != 0
      :                          @8731
111541: 28 ca 3f 01              jump @13267
      :                          @8732
111545: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
111549: 82 78 10                 a1 = u64 [a0 + 0x10]
111552: 55 18 05 08              jump @8734 if a1 >=u 5
      :                          @8733
111556: 28 9c 3f 01              jump @13240
      :                          @8734
111560: 82 77 08                 a0 = u64 [a0 + 0x8]
111563: 46 17 04 01              u8 [a0 + 4] = 0x1
111567: 01                       fallthrough
      :                          @8735
111568: 3a 08 70 02 03           a1 = u64 [0x30270]
111573: 97 89 0d                 a2 = a1 << 0xd
111576: d3 98 08                 a1 = a1 ^ a2
111579: 98 89 07                 a2 = a1 >> 0x7
111582: d3 98 08                 a1 = a1 ^ a2
111585: 97 89 11                 a2 = a1 << 0x11
111588: d3 89 09                 a2 = a2 ^ a1
111591: 84 88 01                 a1 = a1 & 0x1
111594: 3e 09 70 02 03           u64 [0x30270] = a2
111599: 51 08 24                 jump @8741 if a1 == 0
      :                          @8736
111602: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
111606: 55 18 02 08              jump @8738 if a1 >=u 2
      :                          @8737
111610: 28 69 3f 01              jump @13243
      :                          @8738
111614: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
111618: 82 89 28                 a2 = u64 [a1 + 0x28]
111621: 52 09 07                 jump @8740 if a2 != 0
      :                          @8739
111624: 28 47 3f 01              jump @13223
      :                          @8740
111628: 82 88 20                 a1 = u64 [a1 + 0x20]
111631: 46 08 01                 u8 [a1 + 0] = 0x1
111634: 01                       fallthrough
      :                          @8741
111635: 3a 08 70 02 03           a1 = u64 [0x30270]
111640: 97 89 0d                 a2 = a1 << 0xd
111643: d3 98 08                 a1 = a1 ^ a2
111646: 98 89 07                 a2 = a1 >> 0x7
111649: d3 98 08                 a1 = a1 ^ a2
111652: 97 89 11                 a2 = a1 << 0x11
111655: d3 89 09                 a2 = a2 ^ a1
111658: 84 88 01                 a1 = a1 & 0x1
111661: 3e 09 70 02 03           u64 [0x30270] = a2
111666: 51 08 28                 jump @8747 if a1 == 0
      :                          @8742
111669: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
111673: 55 18 02 08              jump @8744 if a1 >=u 2
      :                          @8743
111677: 28 26 3f 01              jump @13243
      :                          @8744
111681: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
111685: 82 98 28                 a1 = u64 [a2 + 0x28]
111688: 33 0a 03                 a3 = 0x3
111691: ae a8 07                 jump @8746 if a1 >=u a3
      :                          @8745
111694: 28 f9 3e 01              jump @13215
      :                          @8746
111698: 82 97 20                 a0 = u64 [a2 + 0x20]
111701: 46 17 02 01              u8 [a0 + 2] = 0x1
111705: 01                       fallthrough
      :                          @8747
111706: 3a 08 70 02 03           a1 = u64 [0x30270]
111711: 97 89 0d                 a2 = a1 << 0xd
111714: d3 98 08                 a1 = a1 ^ a2
111717: 98 89 07                 a2 = a1 >> 0x7
111720: d3 98 08                 a1 = a1 ^ a2
111723: 97 89 11                 a2 = a1 << 0x11
111726: d3 89 09                 a2 = a2 ^ a1
111729: 84 88 01                 a1 = a1 & 0x1
111732: 3e 09 70 02 03           u64 [0x30270] = a2
111737: 51 08 28                 jump @8753 if a1 == 0
      :                          @8748
111740: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
111744: 55 18 02 08              jump @8750 if a1 >=u 2
      :                          @8749
111748: 28 df 3e 01              jump @13243
      :                          @8750
111752: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
111756: 82 98 28                 a1 = u64 [a2 + 0x28]
111759: 33 0a 04                 a3 = 0x4
111762: ae a8 07                 jump @8752 if a1 >=u a3
      :                          @8751
111765: 28 cd 3e 01              jump @13242
      :                          @8752
111769: 82 98 20                 a1 = u64 [a2 + 0x20]
111772: 46 18 03 01              u8 [a1 + 3] = 0x1
111776: 01                       fallthrough
      :                          @8753
111777: 3a 08 70 02 03           a1 = u64 [0x30270]
111782: 97 89 0d                 a2 = a1 << 0xd
111785: d3 98 08                 a1 = a1 ^ a2
111788: 98 89 07                 a2 = a1 >> 0x7
111791: d3 98 08                 a1 = a1 ^ a2
111794: 97 89 11                 a2 = a1 << 0x11
111797: d3 89 09                 a2 = a2 ^ a1
111800: 84 88 01                 a1 = a1 & 0x1
111803: 3e 09 70 02 03           u64 [0x30270] = a2
111808: 51 08 26                 jump @8759 if a1 == 0
      :                          @8754
111811: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
111815: 55 18 02 08              jump @8756 if a1 >=u 2
      :                          @8755
111819: 28 98 3e 01              jump @13243
      :                          @8756
111823: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
111827: 82 78 28                 a1 = u64 [a0 + 0x28]
111830: 55 18 05 08              jump @8758 if a1 >=u 5
      :                          @8757
111834: 28 86 3e 01              jump @13240
      :                          @8758
111838: 82 77 20                 a0 = u64 [a0 + 0x20]
111841: 46 17 04 01              u8 [a0 + 4] = 0x1
111845: 01                       fallthrough
      :                          @8759
111846: 3a 08 70 02 03           a1 = u64 [0x30270]
111851: 97 89 0d                 a2 = a1 << 0xd
111854: d3 98 08                 a1 = a1 ^ a2
111857: 98 89 07                 a2 = a1 >> 0x7
111860: d3 98 08                 a1 = a1 ^ a2
111863: 97 89 11                 a2 = a1 << 0x11
111866: d3 89 09                 a2 = a2 ^ a1
111869: 84 88 01                 a1 = a1 & 0x1
111872: 3e 09 70 02 03           u64 [0x30270] = a2
111877: 51 08 24                 jump @8765 if a1 == 0
      :                          @8760
111880: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
111884: 55 18 03 08              jump @8762 if a1 >=u 3
      :                          @8761
111888: 28 51 3e 01              jump @13241
      :                          @8762
111892: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
111896: 82 89 40                 a2 = u64 [a1 + 0x40]
111899: 52 09 07                 jump @8764 if a2 != 0
      :                          @8763
111902: 28 31 3e 01              jump @13223
      :                          @8764
111906: 82 88 38                 a1 = u64 [a1 + 0x38]
111909: 46 08 01                 u8 [a1 + 0] = 0x1
111912: 01                       fallthrough
      :                          @8765
111913: 3a 08 70 02 03           a1 = u64 [0x30270]
111918: 97 89 0d                 a2 = a1 << 0xd
111921: d3 98 08                 a1 = a1 ^ a2
111924: 98 89 07                 a2 = a1 >> 0x7
111927: d3 98 08                 a1 = a1 ^ a2
111930: 97 89 11                 a2 = a1 << 0x11
111933: d3 89 09                 a2 = a2 ^ a1
111936: 84 88 01                 a1 = a1 & 0x1
111939: 3e 09 70 02 03           u64 [0x30270] = a2
111944: 51 08 26                 jump @8771 if a1 == 0
      :                          @8766
111947: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
111951: 55 18 03 08              jump @8768 if a1 >=u 3
      :                          @8767
111955: 28 0e 3e 01              jump @13241
      :                          @8768
111959: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
111963: 82 78 40                 a1 = u64 [a0 + 0x40]
111966: 55 18 02 08              jump @8770 if a1 >=u 2
      :                          @8769
111970: 28 01 3e 01              jump @13243
      :                          @8770
111974: 82 77 38                 a0 = u64 [a0 + 0x38]
111977: 46 17 01 01              u8 [a0 + 1] = 0x1
111981: 01                       fallthrough
      :                          @8771
111982: 3a 07 70 02 03           a0 = u64 [0x30270]
111987: 97 78 0d                 a1 = a0 << 0xd
111990: d3 87 07                 a0 = a0 ^ a1
111993: 98 78 07                 a1 = a0 >> 0x7
111996: d3 87 07                 a0 = a0 ^ a1
111999: 97 78 11                 a1 = a0 << 0x11
112002: d3 78 08                 a1 = a1 ^ a0
112005: 84 77 01                 a0 = a0 & 0x1
112008: 3e 08 70 02 03           u64 [0x30270] = a1
112013: 51 07 28                 jump @8777 if a0 == 0
      :                          @8772
112016: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
112020: 55 18 03 08              jump @8774 if a1 >=u 3
      :                          @8773
112024: 28 c9 3d 01              jump @13241
      :                          @8774
112028: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
112032: 82 a8 40                 a1 = u64 [a3 + 0x40]
112035: 33 0b 04                 a4 = 0x4
112038: ae b8 07                 jump @8776 if a1 >=u a4
      :                          @8775
112041: 28 9e 3d 01              jump @13215
      :                          @8776
112045: 82 a7 38                 a0 = u64 [a3 + 0x38]
112048: 46 17 03 01              u8 [a0 + 3] = 0x1
112052: 01                       fallthrough
      :                          @8777
112053: 3a 07 70 02 03           a0 = u64 [0x30270]
112058: 97 78 0d                 a1 = a0 << 0xd
112061: d3 87 07                 a0 = a0 ^ a1
112064: 98 78 07                 a1 = a0 >> 0x7
112067: d3 87 07                 a0 = a0 ^ a1
112070: 97 78 11                 a1 = a0 << 0x11
112073: d3 78 08                 a1 = a1 ^ a0
112076: 84 77 01                 a0 = a0 & 0x1
112079: 3e 08 70 02 03           u64 [0x30270] = a1
112084: 51 07 26                 jump @8783 if a0 == 0
      :                          @8778
112087: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
112091: 55 18 03 08              jump @8780 if a1 >=u 3
      :                          @8779
112095: 28 82 3d 01              jump @13241
      :                          @8780
112099: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
112103: 82 78 40                 a1 = u64 [a0 + 0x40]
112106: 55 18 05 08              jump @8782 if a1 >=u 5
      :                          @8781
112110: 28 72 3d 01              jump @13240
      :                          @8782
112114: 82 77 38                 a0 = u64 [a0 + 0x38]
112117: 46 17 04 01              u8 [a0 + 4] = 0x1
112121: 01                       fallthrough
      :                          @8783
112122: 3a 08 70 02 03           a1 = u64 [0x30270]
112127: 97 89 0d                 a2 = a1 << 0xd
112130: d3 98 08                 a1 = a1 ^ a2
112133: 98 89 07                 a2 = a1 >> 0x7
112136: d3 98 08                 a1 = a1 ^ a2
112139: 97 89 11                 a2 = a1 << 0x11
112142: d3 89 09                 a2 = a2 ^ a1
112145: 84 88 01                 a1 = a1 & 0x1
112148: 3e 09 70 02 03           u64 [0x30270] = a2
112153: 51 08 24                 jump @8789 if a1 == 0
      :                          @8784
112156: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
112160: 55 18 04 08              jump @8786 if a1 >=u 4
      :                          @8785
112164: 28 3e 3d 01              jump @13242
      :                          @8786
112168: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
112172: 82 89 58                 a2 = u64 [a1 + 0x58]
112175: 52 09 07                 jump @8788 if a2 != 0
      :                          @8787
112178: 28 1d 3d 01              jump @13223
      :                          @8788
112182: 82 88 50                 a1 = u64 [a1 + 0x50]
112185: 46 08 01                 u8 [a1 + 0] = 0x1
112188: 01                       fallthrough
      :                          @8789
112189: 3a 08 70 02 03           a1 = u64 [0x30270]
112194: 97 89 0d                 a2 = a1 << 0xd
112197: d3 98 08                 a1 = a1 ^ a2
112200: 98 89 07                 a2 = a1 >> 0x7
112203: d3 98 08                 a1 = a1 ^ a2
112206: 97 89 11                 a2 = a1 << 0x11
112209: d3 89 09                 a2 = a2 ^ a1
112212: 84 88 01                 a1 = a1 & 0x1
112215: 3e 09 70 02 03           u64 [0x30270] = a2
112220: 51 08 26                 jump @8795 if a1 == 0
      :                          @8790
112223: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
112227: 55 18 04 08              jump @8792 if a1 >=u 4
      :                          @8791
112231: 28 fb 3c 01              jump @13242
      :                          @8792
112235: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
112239: 82 78 58                 a1 = u64 [a0 + 0x58]
112242: 55 18 02 08              jump @8794 if a1 >=u 2
      :                          @8793
112246: 28 ed 3c 01              jump @13243
      :                          @8794
112250: 82 77 50                 a0 = u64 [a0 + 0x50]
112253: 46 17 01 01              u8 [a0 + 1] = 0x1
112257: 01                       fallthrough
      :                          @8795
112258: 3a 08 70 02 03           a1 = u64 [0x30270]
112263: 97 89 0d                 a2 = a1 << 0xd
112266: d3 98 08                 a1 = a1 ^ a2
112269: 98 89 07                 a2 = a1 >> 0x7
112272: d3 98 08                 a1 = a1 ^ a2
112275: 97 89 11                 a2 = a1 << 0x11
112278: d3 89 09                 a2 = a2 ^ a1
112281: 84 88 01                 a1 = a1 & 0x1
112284: 3e 09 70 02 03           u64 [0x30270] = a2
112289: 51 08 28                 jump @8801 if a1 == 0
      :                          @8796
112292: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
112296: 55 18 04 08              jump @8798 if a1 >=u 4
      :                          @8797
112300: 28 b6 3c 01              jump @13242
      :                          @8798
112304: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
112308: 82 98 58                 a1 = u64 [a2 + 0x58]
112311: 33 0a 03                 a3 = 0x3
112314: ae a8 07                 jump @8800 if a1 >=u a3
      :                          @8799
112317: 28 a4 3c 01              jump @13241
      :                          @8800
112321: 82 98 50                 a1 = u64 [a2 + 0x50]
112324: 46 18 02 01              u8 [a1 + 2] = 0x1
112328: 01                       fallthrough
      :                          @8801
112329: 3a 08 70 02 03           a1 = u64 [0x30270]
112334: 97 89 0d                 a2 = a1 << 0xd
112337: d3 98 08                 a1 = a1 ^ a2
112340: 98 89 07                 a2 = a1 >> 0x7
112343: d3 98 08                 a1 = a1 ^ a2
112346: 97 89 11                 a2 = a1 << 0x11
112349: d3 89 09                 a2 = a2 ^ a1
112352: 84 88 01                 a1 = a1 & 0x1
112355: 3e 09 70 02 03           u64 [0x30270] = a2
112360: 51 08 28                 jump @8807 if a1 == 0
      :                          @8802
112363: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
112367: 55 18 04 08              jump @8804 if a1 >=u 4
      :                          @8803
112371: 28 6f 3c 01              jump @13242
      :                          @8804
112375: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
112379: 82 98 58                 a1 = u64 [a2 + 0x58]
112382: 33 0a 05                 a3 = 0x5
112385: ae a8 07                 jump @8806 if a1 >=u a3
      :                          @8805
112388: 28 43 3c 01              jump @13215
      :                          @8806
112392: 82 97 50                 a0 = u64 [a2 + 0x50]
112395: 46 17 04 01              u8 [a0 + 4] = 0x1
112399: 01                       fallthrough
      :                          @8807
112400: 3a 08 70 02 03           a1 = u64 [0x30270]
112405: 97 89 0d                 a2 = a1 << 0xd
112408: d3 98 08                 a1 = a1 ^ a2
112411: 98 89 07                 a2 = a1 >> 0x7
112414: d3 98 08                 a1 = a1 ^ a2
112417: 97 89 11                 a2 = a1 << 0x11
112420: d3 89 09                 a2 = a2 ^ a1
112423: 84 88 01                 a1 = a1 & 0x1
112426: 3e 09 70 02 03           u64 [0x30270] = a2
112431: 51 08 24                 jump @8813 if a1 == 0
      :                          @8808
112434: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
112438: 55 18 05 08              jump @8810 if a1 >=u 5
      :                          @8809
112442: 28 26 3c 01              jump @13240
      :                          @8810
112446: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
112450: 82 89 70                 a2 = u64 [a1 + 0x70]
112453: 52 09 07                 jump @8812 if a2 != 0
      :                          @8811
112456: 28 07 3c 01              jump @13223
      :                          @8812
112460: 82 88 68                 a1 = u64 [a1 + 0x68]
112463: 46 08 01                 u8 [a1 + 0] = 0x1
112466: 01                       fallthrough
      :                          @8813
112467: 3a 08 70 02 03           a1 = u64 [0x30270]
112472: 97 89 0d                 a2 = a1 << 0xd
112475: d3 98 08                 a1 = a1 ^ a2
112478: 98 89 07                 a2 = a1 >> 0x7
112481: d3 98 08                 a1 = a1 ^ a2
112484: 97 89 11                 a2 = a1 << 0x11
112487: d3 89 09                 a2 = a2 ^ a1
112490: 84 88 01                 a1 = a1 & 0x1
112493: 3e 09 70 02 03           u64 [0x30270] = a2
112498: 51 08 26                 jump @8819 if a1 == 0
      :                          @8814
112501: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
112505: 55 18 05 08              jump @8816 if a1 >=u 5
      :                          @8815
112509: 28 e3 3b 01              jump @13240
      :                          @8816
112513: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
112517: 82 78 70                 a1 = u64 [a0 + 0x70]
112520: 55 18 02 08              jump @8818 if a1 >=u 2
      :                          @8817
112524: 28 d7 3b 01              jump @13243
      :                          @8818
112528: 82 77 68                 a0 = u64 [a0 + 0x68]
112531: 46 17 01 01              u8 [a0 + 1] = 0x1
112535: 01                       fallthrough
      :                          @8819
112536: 3a 08 70 02 03           a1 = u64 [0x30270]
112541: 97 89 0d                 a2 = a1 << 0xd
112544: d3 98 08                 a1 = a1 ^ a2
112547: 98 89 07                 a2 = a1 >> 0x7
112550: d3 98 08                 a1 = a1 ^ a2
112553: 97 89 11                 a2 = a1 << 0x11
112556: d3 89 09                 a2 = a2 ^ a1
112559: 84 88 01                 a1 = a1 & 0x1
112562: 3e 09 70 02 03           u64 [0x30270] = a2
112567: 51 08 28                 jump @8825 if a1 == 0
      :                          @8820
112570: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
112574: 55 18 05 08              jump @8822 if a1 >=u 5
      :                          @8821
112578: 28 9e 3b 01              jump @13240
      :                          @8822
112582: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
112586: 82 98 70                 a1 = u64 [a2 + 0x70]
112589: 33 0a 03                 a3 = 0x3
112592: ae a8 07                 jump @8824 if a1 >=u a3
      :                          @8823
112595: 28 8e 3b 01              jump @13241
      :                          @8824
112599: 82 98 68                 a1 = u64 [a2 + 0x68]
112602: 46 18 02 01              u8 [a1 + 2] = 0x1
112606: 01                       fallthrough
      :                          @8825
112607: 3a 08 70 02 03           a1 = u64 [0x30270]
112612: 97 89 0d                 a2 = a1 << 0xd
112615: d3 98 08                 a1 = a1 ^ a2
112618: 98 89 07                 a2 = a1 >> 0x7
112621: d3 98 08                 a1 = a1 ^ a2
112624: 97 89 11                 a2 = a1 << 0x11
112627: d3 89 09                 a2 = a2 ^ a1
112630: 84 88 01                 a1 = a1 & 0x1
112633: 3e 09 70 02 03           u64 [0x30270] = a2
112638: 51 08 28                 jump @8831 if a1 == 0
      :                          @8826
112641: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
112645: 55 18 05 08              jump @8828 if a1 >=u 5
      :                          @8827
112649: 28 57 3b 01              jump @13240
      :                          @8828
112653: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
112657: 82 78 70                 a1 = u64 [a0 + 0x70]
112660: 33 09 04                 a2 = 0x4
112663: ae 98 07                 jump @8830 if a1 >=u a2
      :                          @8829
112666: 28 48 3b 01              jump @13242
      :                          @8830
112670: 82 77 68                 a0 = u64 [a0 + 0x68]
112673: 46 17 03 01              u8 [a0 + 3] = 0x1
112677: 01                       fallthrough
      :                          @8831
112678: 95 17 f8 01              a0 = sp + 0x1f8
112682: 95 18 d0 01              a1 = sp + 0x1d0
112686: 95 16 f8 01              s1 = sp + 0x1f8
112690: 50 20 2a 05 8b 3e ff     ra = 1322, jump @4923
      :                          @8832 [@dyn 661]
112697: 7b 16 10 01              u64 [sp + 0x110] = s1
112701: 33 07 30 02              a0 = 0x230
112705: 7b 17 18 01              u64 [sp + 0x118] = a0
112709: 33 07 e0 08 01           a0 = 0x108e0
112714: 7b 17 80 02              u64 [sp + 0x280] = a0
112718: 49 21 88 02 01           u64 [sp + 648] = 0x1
112723: 49 21 a0 02              u64 [sp + 672] = 0
112727: 95 18 10 01              a1 = sp + 0x110
112731: 7b 18 90 02              u64 [sp + 0x290] = a1
112735: 49 21 98 02 01           u64 [sp + 664] = 0x1
112740: 95 17 28 02              a0 = sp + 0x228
112744: 95 18 80 02              a1 = sp + 0x280
112748: 50 20 2c 05 db 96 fe     ra = 1324, jump @1491
      :                          @8833 [@dyn 662]
112755: 82 16 30 02              s1 = u64 [sp + 0x230]
112759: 82 1b 38 02              a4 = u64 [sp + 0x238]
112763: 82 17 28 02              a0 = u64 [sp + 0x228]
112767: 7b 17 60                 u64 [sp + 0x60] = a0
112770: 33 07 02                 a0 = 0x2
112773: 33 08                    a1 = 0
112775: 33 09                    a2 = 0
112777: 64 6a                    a3 = s1
112779: 33 00 2e 05              ra = 0x52e
112783: 0a 64                    ecalli 100 // 'log'
112785: 01                       fallthrough
      :                          @8834 [@dyn 663]
112786: 82 1c 60                 a5 = u64 [sp + 0x60]
112789: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
112794: 55 38 00 00 f0 09        jump @8836 if a1 >=u 4293918720
      :                          @8835
112800: 28 a2 74                 jump @10534
      :                          @8836
112803: 33 07 b0 02 03           a0 = 0x302b0
112808: 95 77 00 00 10           a0 = a0 + 0x100000
112813: 01                       fallthrough
      :                          @8837
112814: 82 78                    a1 = u64 [a0]
112816: c9 87 09                 a2 = a0 - a1
112819: aa 69 06                 jump @8839 if a2 == s1
      :                          @8838
112822: 28 8c 74                 jump @10534
      :                          @8839
112825: c9 c8 09                 a2 = a1 - a5
112828: 01                       fallthrough
      :                          @8840
112829: 82 7a                    a3 = u64 [a0]
112831: ab 8a ef                 jump @8837 if a3 != a1
      :                          @8841
112834: 7b 79                    u64 [a0] = a2
112836: 33 0b                    a4 = 0
112838: 01                       fallthrough
      :                          @8842
112839: ab 8a e7                 jump @8837 if a3 != a1
      :                          @8843
112842: 28 78 74                 jump @10534
      :                          @8844 [@dyn 664]
112845: 95 17 80 02              a0 = sp + 0x280
112849: 33 08 04                 a1 = 0x4
112852: 50 20 32 05 dc a4 fe     ra = 1330, jump @1776
      :                          @8845 [@dyn 665]
112859: 95 17 f8 01              a0 = sp + 0x1f8
112863: 95 18 80 02              a1 = sp + 0x280
112867: 33 09 04                 a2 = 0x4
112870: 50 20 34 05 eb ab fe     ra = 1332, jump @1895
      :                          @8846 [@dyn 666]
112877: 33 04 04                 t2 = 0x4
112880: 33 07                    a0 = 0
112882: 33 0c 10                 a5 = 0x10
112885: 33 0a 70 02 03           a3 = 0x30270
112890: 33 02 02                 t0 = 0x2
112893: 33 03 03                 t1 = 0x3
112896: 33 06 70                 s1 = 0x70
112899: 01                       fallthrough
      :                          @8847
112900: 3a 08 70 02 03           a1 = u64 [0x30270]
112905: 97 89 0d                 a2 = a1 << 0xd
112908: d3 98 08                 a1 = a1 ^ a2
112911: 98 8b 07                 a4 = a1 >> 0x7
112914: d3 8b 0b                 a4 = a4 ^ a1
112917: 97 b8 11                 a1 = a4 << 0x11
112920: d3 b8 08                 a1 = a1 ^ a4
112923: 3e 08 70 02 03           u64 [0x30270] = a1
112928: 82 18 08 02              a1 = u64 [sp + 0x208]
112932: ac 87 07                 jump @8849 if a0 <u a1
      :                          @8848
112935: 28 20 3a 01              jump @13215
      :                          @8849
112939: 82 18 00 02              a1 = u64 [sp + 0x200]
112943: c8 c8 08                 a1 = a1 + a5
112946: 82 89                    a2 = u64 [a1]
112948: 52 09 07                 jump @8851 if a2 != 0
      :                          @8850
112951: 28 17 3a 01              jump @13222
      :                          @8851
112955: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
112958: 84 bb 01                 a4 = a4 & 0x1
112961: 78 8b                    u8 [a1] = a4
112963: 3a 08 70 02 03           a1 = u64 [0x30270]
112968: 97 89 0d                 a2 = a1 << 0xd
112971: d3 98 08                 a1 = a1 ^ a2
112974: 98 8b 07                 a4 = a1 >> 0x7
112977: d3 8b 0b                 a4 = a4 ^ a1
112980: 97 b8 11                 a1 = a4 << 0x11
112983: d3 b8 08                 a1 = a1 ^ a4
112986: 3e 08 70 02 03           u64 [0x30270] = a1
112991: 82 18 08 02              a1 = u64 [sp + 0x208]
112995: ac 87 07                 jump @8853 if a0 <u a1
      :                          @8852
112998: 28 e1 39 01              jump @13215
      :                          @8853
113002: 82 19 00 02              a2 = u64 [sp + 0x200]
113006: c8 c9 09                 a2 = a2 + a5
113009: 82 98                    a1 = u64 [a2]
113011: ae 28 07                 jump @8855 if a1 >=u t0
      :                          @8854
113014: 28 09 39 01              jump @13195
      :                          @8855
113018: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
113021: 84 bb 01                 a4 = a4 & 0x1
113024: 78 8b 01                 u8 [a1 + 0x1] = a4
113027: 3a 08 70 02 03           a1 = u64 [0x30270]
113032: 97 89 0d                 a2 = a1 << 0xd
113035: d3 98 08                 a1 = a1 ^ a2
113038: 98 8b 07                 a4 = a1 >> 0x7
113041: d3 8b 0b                 a4 = a4 ^ a1
113044: 97 b8 11                 a1 = a4 << 0x11
113047: d3 b8 08                 a1 = a1 ^ a4
113050: 3e 08 70 02 03           u64 [0x30270] = a1
113055: 82 18 08 02              a1 = u64 [sp + 0x208]
113059: ac 87 07                 jump @8857 if a0 <u a1
      :                          @8856
113062: 28 a1 39 01              jump @13215
      :                          @8857
113066: 82 19 00 02              a2 = u64 [sp + 0x200]
113070: c8 c9 09                 a2 = a2 + a5
113073: 82 98                    a1 = u64 [a2]
113075: ae 38 07                 jump @8859 if a1 >=u t1
      :                          @8858
113078: 28 cb 38 01              jump @13197
      :                          @8859
113082: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
113085: 84 bb 01                 a4 = a4 & 0x1
113088: 78 8b 02                 u8 [a1 + 0x2] = a4
113091: 3a 08 70 02 03           a1 = u64 [0x30270]
113096: 97 89 0d                 a2 = a1 << 0xd
113099: d3 98 08                 a1 = a1 ^ a2
113102: 98 8b 07                 a4 = a1 >> 0x7
113105: d3 8b 0b                 a4 = a4 ^ a1
113108: 97 b8 11                 a1 = a4 << 0x11
113111: d3 b8 08                 a1 = a1 ^ a4
113114: 3e 08 70 02 03           u64 [0x30270] = a1
113119: 82 18 08 02              a1 = u64 [sp + 0x208]
113123: ac 87 07                 jump @8861 if a0 <u a1
      :                          @8860
113126: 28 61 39 01              jump @13215
      :                          @8861
113130: 82 19 00 02              a2 = u64 [sp + 0x200]
113134: c8 c9 09                 a2 = a2 + a5
113137: 82 98                    a1 = u64 [a2]
113139: ae 48 07                 jump @8863 if a1 >=u t2
      :                          @8862
113142: 28 8a 38 01              jump @13196
      :                          @8863
113146: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
113149: 84 bb 01                 a4 = a4 & 0x1
113152: 78 8b 03                 u8 [a1 + 0x3] = a4
113155: 95 cc 18                 a5 = a5 + 0x18
113158: 95 77 01                 a0 = a0 + 0x1
113161: ab 6c fb fe              jump @8847 if a5 != s1
      :                          @8864
113165: 95 17 f8 01              a0 = sp + 0x1f8
113169: 50 20 36 05 f6 41 ff     ra = 1334, jump @5024
      :                          @8865 [@dyn 667]
113176: 7b 17 10 01              u64 [sp + 0x110] = a0
113180: 95 17 10 01              a0 = sp + 0x110
113184: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
113188: 33 07 28 0c              a0 = 0xc28
113192: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
113196: 33 07 08 09 01           a0 = 0x10908
113201: 7b 17 80 02              u64 [sp + 0x280] = a0
113205: 49 21 88 02 01           u64 [sp + 648] = 0x1
113210: 49 21 a0 02              u64 [sp + 672] = 0
113214: 95 18 d0 01              a1 = sp + 0x1d0
113218: 7b 18 90 02              u64 [sp + 0x290] = a1
113222: 49 21 98 02 01           u64 [sp + 664] = 0x1
113227: 95 17 28 02              a0 = sp + 0x228
113231: 95 18 80 02              a1 = sp + 0x280
113235: 50 20 38 05 f4 94 fe     ra = 1336, jump @1491
      :                          @8866 [@dyn 668]
113242: 82 16 30 02              s1 = u64 [sp + 0x230]
113246: 82 1b 38 02              a4 = u64 [sp + 0x238]
113250: 82 17 28 02              a0 = u64 [sp + 0x228]
113254: 7b 17 60                 u64 [sp + 0x60] = a0
113257: 33 07 02                 a0 = 0x2
113260: 33 08                    a1 = 0
113262: 33 09                    a2 = 0
113264: 64 6a                    a3 = s1
113266: 33 00 3a 05              ra = 0x53a
113270: 0a 64                    ecalli 100 // 'log'
113272: 01                       fallthrough
      :                          @8867 [@dyn 669]
113273: 82 1c 60                 a5 = u64 [sp + 0x60]
113276: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
113281: 55 38 00 00 f0 0a        jump @8869 if a1 >=u 4293918720
      :                          @8868
113287: 28 59 27 01              jump @12861
      :                          @8869
113291: 33 07 b0 02 03           a0 = 0x302b0
113296: 95 77 00 00 10           a0 = a0 + 0x100000
113301: 01                       fallthrough
      :                          @8870
113302: 82 78                    a1 = u64 [a0]
113304: c9 87 09                 a2 = a0 - a1
113307: aa 69 07                 jump @8872 if a2 == s1
      :                          @8871
113310: 28 42 27 01              jump @12861
      :                          @8872
113314: c9 c8 09                 a2 = a1 - a5
113317: 01                       fallthrough
      :                          @8873
113318: 82 7a                    a3 = u64 [a0]
113320: ab 8a ee                 jump @8870 if a3 != a1
      :                          @8874
113323: 7b 79                    u64 [a0] = a2
113325: 33 0b                    a4 = 0
113327: 01                       fallthrough
      :                          @8875
113328: ab 8a e6                 jump @8870 if a3 != a1
      :                          @8876
113331: 28 2d 27 01              jump @12861
      :                          @8877 [@dyn 670]
113335: 95 17 80 02              a0 = sp + 0x280
113339: 33 09 06                 a2 = 0x6
113342: 33 08                    a1 = 0
113344: 50 20 3e 05 32 a9 fe     ra = 1342, jump @1877
      :                          @8878 [@dyn 671]
113351: 95 17 f8 01              a0 = sp + 0x1f8
113355: 95 18 80 02              a1 = sp + 0x280
113359: 33 09 06                 a2 = 0x6
113362: 50 20 40 05 4a a3 fe     ra = 1344, jump @1783
      :                          @8879 [@dyn 672]
113369: 3a 07 70 02 03           a0 = u64 [0x30270]
113374: 97 79 0d                 a2 = a0 << 0xd
113377: d3 97 07                 a0 = a0 ^ a2
113380: 98 79 07                 a2 = a0 >> 0x7
113383: d3 97 07                 a0 = a0 ^ a2
113386: 97 79 11                 a2 = a0 << 0x11
113389: d3 97 07                 a0 = a0 ^ a2
113392: 3e 07 70 02 03           u64 [0x30270] = a0
113397: 82 16 08 02              s1 = u64 [sp + 0x208]
113401: 52 06 07                 jump @8881 if s1 != 0
      :                          @8880
113404: 28 53 38 01              jump @13223
      :                          @8881
113408: 82 1c 00 02              a5 = u64 [sp + 0x200]
113412: 82 c9 10                 a2 = u64 [a5 + 0x10]
113415: 56 19 01 08              jump @8883 if a2 >u 1
      :                          @8882
113419: 28 4f 38 01              jump @13234
      :                          @8883
113423: 3a 02 58 01 03           t0 = u64 [0x30158]
113428: ca 27 07                 a0 = a0 * t0
113431: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
113441: d6 87 08                 a1 = a0 mulhu a1
113444: 98 88 03                 a1 = a1 >> 0x3
113447: 82 ca 08                 a3 = u64 [a5 + 0x8]
113450: 96 88 0a                 a1 = a1 * 0xa
113453: c9 87 09                 a2 = a0 - a1
113456: 7b a9 08                 u64 [a3 + 0x8] = a2
113459: 56 16 01 08              jump @8885 if s1 >u 1
      :                          @8884
113463: 28 10 38 01              jump @13215
      :                          @8885
113467: 82 c7 28                 a0 = u64 [a5 + 0x28]
113470: 52 07 07                 jump @8887 if a0 != 0
      :                          @8886
113473: 28 1d 38 01              jump @13238
      :                          @8887
113477: 82 c7 20                 a0 = u64 [a5 + 0x20]
113480: 7b 79                    u64 [a0] = a2
113482: 3a 08 70 02 03           a1 = u64 [0x30270]
113487: 97 89 0d                 a2 = a1 << 0xd
113490: d3 98 08                 a1 = a1 ^ a2
113493: 98 89 07                 a2 = a1 >> 0x7
113496: d3 98 08                 a1 = a1 ^ a2
113499: 97 8c 11                 a5 = a1 << 0x11
113502: d3 8c 0c                 a5 = a5 ^ a1
113505: 3e 0c 70 02 03           u64 [0x30270] = a5
113510: 82 18 08 02              a1 = u64 [sp + 0x208]
113514: 52 08 07                 jump @8889 if a1 != 0
      :                          @8888
113517: 28 f2 37 01              jump @13239
      :                          @8889
113521: 82 17 00 02              a0 = u64 [sp + 0x200]
113525: 82 79 10                 a2 = u64 [a0 + 0x10]
113528: 55 19 03 08              jump @8891 if a2 >=u 3
      :                          @8890
113532: 28 ea 37 01              jump @13246
      :                          @8891
113536: ca 2c 09                 a2 = a5 * t0
113539: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
113549: d6 b9 0b                 a4 = a2 mulhu a4
113552: 98 bb 03                 a4 = a4 >> 0x3
113555: 82 7c 08                 a5 = u64 [a0 + 0x8]
113558: 96 bb 0a                 a4 = a4 * 0xa
113561: c9 b9 09                 a2 = a2 - a4
113564: 7b c9 10                 u64 [a5 + 0x10] = a2
113567: 55 18 03 08              jump @8893 if a1 >=u 3
      :                          @8892
113571: 28 de 36 01              jump @13197
      :                          @8893
113575: 82 78 40                 a1 = u64 [a0 + 0x40]
113578: 52 08 07                 jump @8895 if a1 != 0
      :                          @8894
113581: 28 b2 37 01              jump @13239
      :                          @8895
113585: 82 77 38                 a0 = u64 [a0 + 0x38]
113588: 7b 79                    u64 [a0] = a2
113590: 3a 08 70 02 03           a1 = u64 [0x30270]
113595: 97 89 0d                 a2 = a1 << 0xd
113598: d3 98 08                 a1 = a1 ^ a2
113601: 98 89 07                 a2 = a1 >> 0x7
113604: d3 98 08                 a1 = a1 ^ a2
113607: 97 8c 11                 a5 = a1 << 0x11
113610: d3 8c 0c                 a5 = a5 ^ a1
113613: 3e 0c 70 02 03           u64 [0x30270] = a5
113618: 82 18 08 02              a1 = u64 [sp + 0x208]
113622: 52 08 07                 jump @8897 if a1 != 0
      :                          @8896
113625: 28 86 37 01              jump @13239
      :                          @8897
113629: 82 17 00 02              a0 = u64 [sp + 0x200]
113633: 82 79 10                 a2 = u64 [a0 + 0x10]
113636: 55 19 04 08              jump @8899 if a2 >=u 4
      :                          @8898
113640: 28 71 37 01              jump @13233
      :                          @8899
113644: ca 2c 09                 a2 = a5 * t0
113647: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
113657: d6 b9 0b                 a4 = a2 mulhu a4
113660: 98 bb 03                 a4 = a4 >> 0x3
113663: 82 7c 08                 a5 = u64 [a0 + 0x8]
113666: 96 bb 0a                 a4 = a4 * 0xa
113669: c9 b9 09                 a2 = a2 - a4
113672: 7b c9 18                 u64 [a5 + 0x18] = a2
113675: 55 18 04 08              jump @8901 if a1 >=u 4
      :                          @8900
113679: 28 71 36 01              jump @13196
      :                          @8901
113683: 82 78 58                 a1 = u64 [a0 + 0x58]
113686: 52 08 07                 jump @8903 if a1 != 0
      :                          @8902
113689: 28 46 37 01              jump @13239
      :                          @8903
113693: 82 77 50                 a0 = u64 [a0 + 0x50]
113696: 7b 79                    u64 [a0] = a2
113698: 3a 08 70 02 03           a1 = u64 [0x30270]
113703: 97 89 0d                 a2 = a1 << 0xd
113706: d3 98 08                 a1 = a1 ^ a2
113709: 98 89 07                 a2 = a1 >> 0x7
113712: d3 98 08                 a1 = a1 ^ a2
113715: 97 8c 11                 a5 = a1 << 0x11
113718: d3 8c 0c                 a5 = a5 ^ a1
113721: 3e 0c 70 02 03           u64 [0x30270] = a5
113726: 82 18 08 02              a1 = u64 [sp + 0x208]
113730: 52 08 07                 jump @8905 if a1 != 0
      :                          @8904
113733: 28 1a 37 01              jump @13239
      :                          @8905
113737: 82 17 00 02              a0 = u64 [sp + 0x200]
113741: 82 79 10                 a2 = u64 [a0 + 0x10]
113744: 55 19 05 08              jump @8907 if a2 >=u 5
      :                          @8906
113748: 28 13 37 01              jump @13247
      :                          @8907
113752: ca 2c 09                 a2 = a5 * t0
113755: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
113765: d6 b9 0b                 a4 = a2 mulhu a4
113768: 98 bb 03                 a4 = a4 >> 0x3
113771: 82 7c 08                 a5 = u64 [a0 + 0x8]
113774: 96 bb 0a                 a4 = a4 * 0xa
113777: c9 b9 09                 a2 = a2 - a4
113780: 7b c9 20                 u64 [a5 + 0x20] = a2
113783: 55 18 05 08              jump @8909 if a1 >=u 5
      :                          @8908
113787: 28 ce 36 01              jump @13217
      :                          @8909
113791: 82 78 70                 a1 = u64 [a0 + 0x70]
113794: 52 08 07                 jump @8911 if a1 != 0
      :                          @8910
113797: 28 da 36 01              jump @13239
      :                          @8911
113801: 82 77 68                 a0 = u64 [a0 + 0x68]
113804: 7b 79                    u64 [a0] = a2
113806: 3a 08 70 02 03           a1 = u64 [0x30270]
113811: 97 89 0d                 a2 = a1 << 0xd
113814: d3 98 08                 a1 = a1 ^ a2
113817: 98 89 07                 a2 = a1 >> 0x7
113820: d3 98 08                 a1 = a1 ^ a2
113823: 97 8c 11                 a5 = a1 << 0x11
113826: d3 8c 0c                 a5 = a5 ^ a1
113829: 3e 0c 70 02 03           u64 [0x30270] = a5
113834: 82 18 08 02              a1 = u64 [sp + 0x208]
113838: 52 08 07                 jump @8913 if a1 != 0
      :                          @8912
113841: 28 ae 36 01              jump @13239
      :                          @8913
113845: 82 17 00 02              a0 = u64 [sp + 0x200]
113849: 82 79 10                 a2 = u64 [a0 + 0x10]
113852: 55 19 06 08              jump @8915 if a2 >=u 6
      :                          @8914
113856: 28 ae 36 01              jump @13252
      :                          @8915
113860: ca 2c 09                 a2 = a5 * t0
113863: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
113873: d6 b9 0b                 a4 = a2 mulhu a4
113876: 98 bb 03                 a4 = a4 >> 0x3
113879: 82 7c 08                 a5 = u64 [a0 + 0x8]
113882: 96 bb 0a                 a4 = a4 * 0xa
113885: c9 b9 09                 a2 = a2 - a4
113888: 7b c9 28                 u64 [a5 + 0x28] = a2
113891: 55 18 06 08              jump @8917 if a1 >=u 6
      :                          @8916
113895: 28 66 36 01              jump @13221
      :                          @8917
113899: 82 78 88 00              a1 = u64 [a0 + 0x88]
113903: 52 08 07                 jump @8919 if a1 != 0
      :                          @8918
113906: 28 6d 36 01              jump @13239
      :                          @8919
113910: 82 77 80 00              a0 = u64 [a0 + 0x80]
113914: 7b 79                    u64 [a0] = a2
113916: 3a 08 70 02 03           a1 = u64 [0x30270]
113921: 97 89 0d                 a2 = a1 << 0xd
113924: d3 98 08                 a1 = a1 ^ a2
113927: 98 89 07                 a2 = a1 >> 0x7
113930: d3 98 08                 a1 = a1 ^ a2
113933: 97 86 11                 s1 = a1 << 0x11
113936: d3 86 06                 s1 = s1 ^ a1
113939: 3e 06 70 02 03           u64 [0x30270] = s1
113944: 82 18 08 02              a1 = u64 [sp + 0x208]
113948: 55 18 02 08              jump @8921 if a1 >=u 2
      :                          @8920
113952: 28 5f 35 01              jump @13195
      :                          @8921
113956: 82 17 00 02              a0 = u64 [sp + 0x200]
113960: 82 79 28                 a2 = u64 [a0 + 0x28]
113963: 55 19 03 08              jump @8923 if a2 >=u 3
      :                          @8922
113967: 28 2b 36 01              jump @13234
      :                          @8923
113971: ca 26 09                 a2 = s1 * t0
113974: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
113984: d6 a9 0a                 a3 = a2 mulhu a3
113987: 98 aa 03                 a3 = a3 >> 0x3
113990: 82 76 20                 s1 = u64 [a0 + 0x20]
113993: 96 aa 0a                 a3 = a3 * 0xa
113996: c9 a9 0a                 a3 = a2 - a3
113999: 7b 6a 10                 u64 [s1 + 0x10] = a3
114002: 55 18 03 08              jump @8925 if a1 >=u 3
      :                          @8924
114006: 28 0e 36 01              jump @13244
      :                          @8925
114010: 82 78 40                 a1 = u64 [a0 + 0x40]
114013: 55 18 02 08              jump @8927 if a1 >=u 2
      :                          @8926
114017: 28 ef 35 01              jump @13224
      :                          @8927
114021: 82 77 38                 a0 = u64 [a0 + 0x38]
114024: 7b 7a 08                 u64 [a0 + 0x8] = a3
114027: 3a 08 70 02 03           a1 = u64 [0x30270]
114032: 97 8a 0d                 a3 = a1 << 0xd
114035: d3 a8 08                 a1 = a1 ^ a3
114038: 98 8a 07                 a3 = a1 >> 0x7
114041: d3 a8 08                 a1 = a1 ^ a3
114044: 97 8c 11                 a5 = a1 << 0x11
114047: d3 8c 0c                 a5 = a5 ^ a1
114050: 3e 0c 70 02 03           u64 [0x30270] = a5
114055: 82 18 08 02              a1 = u64 [sp + 0x208]
114059: 55 18 02 08              jump @8929 if a1 >=u 2
      :                          @8928
114063: 28 c1 35 01              jump @13224
      :                          @8929
114067: 82 17 00 02              a0 = u64 [sp + 0x200]
114071: 82 79 28                 a2 = u64 [a0 + 0x28]
114074: 55 19 04 08              jump @8931 if a2 >=u 4
      :                          @8930
114078: 28 bb 35 01              jump @13233
      :                          @8931
114082: ca 2c 09                 a2 = a5 * t0
114085: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
114095: d6 b9 0b                 a4 = a2 mulhu a4
114098: 98 bb 03                 a4 = a4 >> 0x3
114101: 82 76 20                 s1 = u64 [a0 + 0x20]
114104: 96 bb 0a                 a4 = a4 * 0xa
114107: c9 b9 0c                 a5 = a2 - a4
114110: 7b 6c 18                 u64 [s1 + 0x18] = a5
114113: 55 18 04 08              jump @8933 if a1 >=u 4
      :                          @8932
114117: 28 92 35 01              jump @13231
      :                          @8933
114121: 82 78 58                 a1 = u64 [a0 + 0x58]
114124: 55 18 02 08              jump @8935 if a1 >=u 2
      :                          @8934
114128: 28 80 35 01              jump @13224
      :                          @8935
114132: 82 77 50                 a0 = u64 [a0 + 0x50]
114135: 7b 7c 08                 u64 [a0 + 0x8] = a5
114138: 3a 08 70 02 03           a1 = u64 [0x30270]
114143: 97 8a 0d                 a3 = a1 << 0xd
114146: d3 a8 08                 a1 = a1 ^ a3
114149: 98 8a 07                 a3 = a1 >> 0x7
114152: d3 a8 08                 a1 = a1 ^ a3
114155: 97 8c 11                 a5 = a1 << 0x11
114158: d3 8c 0c                 a5 = a5 ^ a1
114161: 3e 0c 70 02 03           u64 [0x30270] = a5
114166: 82 18 08 02              a1 = u64 [sp + 0x208]
114170: 55 18 02 08              jump @8937 if a1 >=u 2
      :                          @8936
114174: 28 52 35 01              jump @13224
      :                          @8937
114178: 82 17 00 02              a0 = u64 [sp + 0x200]
114182: 82 79 28                 a2 = u64 [a0 + 0x28]
114185: 55 19 05 08              jump @8939 if a2 >=u 5
      :                          @8938
114189: 28 4e 35 01              jump @13235
      :                          @8939
114193: ca 2c 09                 a2 = a5 * t0
114196: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
114206: d6 b9 0b                 a4 = a2 mulhu a4
114209: 98 bb 03                 a4 = a4 >> 0x3
114212: 82 76 20                 s1 = u64 [a0 + 0x20]
114215: 96 bb 0a                 a4 = a4 * 0xa
114218: c9 b9 0c                 a5 = a2 - a4
114221: 7b 6c 20                 u64 [s1 + 0x20] = a5
114224: 55 18 05 08              jump @8941 if a1 >=u 5
      :                          @8940
114228: 28 24 35 01              jump @13232
      :                          @8941
114232: 82 78 70                 a1 = u64 [a0 + 0x70]
114235: 55 18 02 08              jump @8943 if a1 >=u 2
      :                          @8942
114239: 28 11 35 01              jump @13224
      :                          @8943
114243: 82 77 68                 a0 = u64 [a0 + 0x68]
114246: 7b 7c 08                 u64 [a0 + 0x8] = a5
114249: 3a 08 70 02 03           a1 = u64 [0x30270]
114254: 97 8a 0d                 a3 = a1 << 0xd
114257: d3 a8 08                 a1 = a1 ^ a3
114260: 98 8a 07                 a3 = a1 >> 0x7
114263: d3 a8 08                 a1 = a1 ^ a3
114266: 97 8c 11                 a5 = a1 << 0x11
114269: d3 8c 0c                 a5 = a5 ^ a1
114272: 3e 0c 70 02 03           u64 [0x30270] = a5
114277: 82 18 08 02              a1 = u64 [sp + 0x208]
114281: 55 18 02 08              jump @8945 if a1 >=u 2
      :                          @8944
114285: 28 e3 34 01              jump @13224
      :                          @8945
114289: 82 1a 00 02              a3 = u64 [sp + 0x200]
114293: 82 a9 28                 a2 = u64 [a3 + 0x28]
114296: 55 19 06 08              jump @8947 if a2 >=u 6
      :                          @8946
114300: 28 e0 34 01              jump @13236
      :                          @8947
114304: ca 2c 09                 a2 = a5 * t0
114307: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
114317: d6 b9 0b                 a4 = a2 mulhu a4
114320: 98 bb 03                 a4 = a4 >> 0x3
114323: 82 ac 20                 a5 = u64 [a3 + 0x20]
114326: 96 bb 0a                 a4 = a4 * 0xa
114329: c9 b9 09                 a2 = a2 - a4
114332: 7b c9 28                 u64 [a5 + 0x28] = a2
114335: 55 18 06 08              jump @8949 if a1 >=u 6
      :                          @8948
114339: 28 ba 34 01              jump @13237
      :                          @8949
114343: 82 a8 88 00              a1 = u64 [a3 + 0x88]
114347: 55 18 02 08              jump @8951 if a1 >=u 2
      :                          @8950
114351: 28 a1 34 01              jump @13224
      :                          @8951
114355: 82 a8 80 00              a1 = u64 [a3 + 0x80]
114359: 7b 89 08                 u64 [a1 + 0x8] = a2
114362: 3a 09 70 02 03           a2 = u64 [0x30270]
114367: 97 9a 0d                 a3 = a2 << 0xd
114370: d3 a9 09                 a2 = a2 ^ a3
114373: 98 9a 07                 a3 = a2 >> 0x7
114376: d3 a9 09                 a2 = a2 ^ a3
114379: 97 96 11                 s1 = a2 << 0x11
114382: d3 96 06                 s1 = s1 ^ a2
114385: 3e 06 70 02 03           u64 [0x30270] = s1
114390: 82 18 08 02              a1 = u64 [sp + 0x208]
114394: 55 18 03 08              jump @8953 if a1 >=u 3
      :                          @8952
114398: 28 69 34 01              jump @13215
      :                          @8953
114402: 82 17 00 02              a0 = u64 [sp + 0x200]
114406: 82 79 40                 a2 = u64 [a0 + 0x40]
114409: 55 19 04 08              jump @8955 if a2 >=u 4
      :                          @8954
114413: 28 6d 34 01              jump @13234
      :                          @8955
114417: ca 26 09                 a2 = s1 * t0
114420: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
114430: d6 a9 0a                 a3 = a2 mulhu a3
114433: 98 aa 03                 a3 = a3 >> 0x3
114436: 82 7b 38                 a4 = u64 [a0 + 0x38]
114439: 96 aa 0a                 a3 = a3 * 0xa
114442: c9 a9 0a                 a3 = a2 - a3
114445: 7b ba 18                 u64 [a4 + 0x18] = a3
114448: 55 18 04 08              jump @8957 if a1 >=u 4
      :                          @8956
114452: 28 6f 34 01              jump @13271
      :                          @8957
114456: 82 78 58                 a1 = u64 [a0 + 0x58]
114459: 55 18 03 08              jump @8959 if a1 >=u 3
      :                          @8958
114463: 28 32 34 01              jump @13225
      :                          @8959
114467: 82 77 50                 a0 = u64 [a0 + 0x50]
114470: 7b 7a 10                 u64 [a0 + 0x10] = a3
114473: 3a 08 70 02 03           a1 = u64 [0x30270]
114478: 97 8a 0d                 a3 = a1 << 0xd
114481: d3 a8 08                 a1 = a1 ^ a3
114484: 98 8a 07                 a3 = a1 >> 0x7
114487: d3 a8 08                 a1 = a1 ^ a3
114490: 97 8c 11                 a5 = a1 << 0x11
114493: d3 8c 0c                 a5 = a5 ^ a1
114496: 3e 0c 70 02 03           u64 [0x30270] = a5
114501: 82 18 08 02              a1 = u64 [sp + 0x208]
114505: 55 18 03 08              jump @8961 if a1 >=u 3
      :                          @8960
114509: 28 04 34 01              jump @13225
      :                          @8961
114513: 82 17 00 02              a0 = u64 [sp + 0x200]
114517: 82 79 40                 a2 = u64 [a0 + 0x40]
114520: 55 19 05 08              jump @8963 if a2 >=u 5
      :                          @8962
114524: 28 ff 33 01              jump @13235
      :                          @8963
114528: ca 2c 09                 a2 = a5 * t0
114531: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
114541: d6 b9 0b                 a4 = a2 mulhu a4
114544: 98 bb 03                 a4 = a4 >> 0x3
114547: 82 76 38                 s1 = u64 [a0 + 0x38]
114550: 96 bb 0a                 a4 = a4 * 0xa
114553: c9 b9 0c                 a5 = a2 - a4
114556: 7b 6c 20                 u64 [s1 + 0x20] = a5
114559: 55 18 05 08              jump @8965 if a1 >=u 5
      :                          @8964
114563: 28 d5 33 01              jump @13232
      :                          @8965
114567: 82 78 70                 a1 = u64 [a0 + 0x70]
114570: 55 18 03 08              jump @8967 if a1 >=u 3
      :                          @8966
114574: 28 c3 33 01              jump @13225
      :                          @8967
114578: 82 77 68                 a0 = u64 [a0 + 0x68]
114581: 7b 7c 10                 u64 [a0 + 0x10] = a5
114584: 3a 08 70 02 03           a1 = u64 [0x30270]
114589: 97 8a 0d                 a3 = a1 << 0xd
114592: d3 a8 08                 a1 = a1 ^ a3
114595: 98 8a 07                 a3 = a1 >> 0x7
114598: d3 a8 08                 a1 = a1 ^ a3
114601: 97 8c 11                 a5 = a1 << 0x11
114604: d3 8c 0c                 a5 = a5 ^ a1
114607: 3e 0c 70 02 03           u64 [0x30270] = a5
114612: 82 18 08 02              a1 = u64 [sp + 0x208]
114616: 55 18 03 08              jump @8969 if a1 >=u 3
      :                          @8968
114620: 28 95 33 01              jump @13225
      :                          @8969
114624: 82 1a 00 02              a3 = u64 [sp + 0x200]
114628: 82 a9 40                 a2 = u64 [a3 + 0x40]
114631: 55 19 06 08              jump @8971 if a2 >=u 6
      :                          @8970
114635: 28 91 33 01              jump @13236
      :                          @8971
114639: ca 2c 09                 a2 = a5 * t0
114642: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
114652: d6 b9 0b                 a4 = a2 mulhu a4
114655: 98 bb 03                 a4 = a4 >> 0x3
114658: 82 ac 38                 a5 = u64 [a3 + 0x38]
114661: 96 bb 0a                 a4 = a4 * 0xa
114664: c9 b9 09                 a2 = a2 - a4
114667: 7b c9 28                 u64 [a5 + 0x28] = a2
114670: 55 18 06 08              jump @8973 if a1 >=u 6
      :                          @8972
114674: 28 6b 33 01              jump @13237
      :                          @8973
114678: 82 a8 88 00              a1 = u64 [a3 + 0x88]
114682: 55 18 03 08              jump @8975 if a1 >=u 3
      :                          @8974
114686: 28 53 33 01              jump @13225
      :                          @8975
114690: 82 a8 80 00              a1 = u64 [a3 + 0x80]
114694: 7b 89 10                 u64 [a1 + 0x10] = a2
114697: 3a 09 70 02 03           a2 = u64 [0x30270]
114702: 97 9a 0d                 a3 = a2 << 0xd
114705: d3 a9 09                 a2 = a2 ^ a3
114708: 98 9a 07                 a3 = a2 >> 0x7
114711: d3 a9 09                 a2 = a2 ^ a3
114714: 97 96 11                 s1 = a2 << 0x11
114717: d3 96 06                 s1 = s1 ^ a2
114720: 3e 06 70 02 03           u64 [0x30270] = s1
114725: 82 18 08 02              a1 = u64 [sp + 0x208]
114729: 55 18 04 08              jump @8977 if a1 >=u 4
      :                          @8976
114733: 28 1a 33 01              jump @13215
      :                          @8977
114737: 82 17 00 02              a0 = u64 [sp + 0x200]
114741: 82 79 58                 a2 = u64 [a0 + 0x58]
114744: 55 19 05 08              jump @8979 if a2 >=u 5
      :                          @8978
114748: 28 1e 33 01              jump @13234
      :                          @8979
114752: ca 26 09                 a2 = s1 * t0
114755: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
114765: d6 a9 0a                 a3 = a2 mulhu a3
114768: 98 aa 03                 a3 = a3 >> 0x3
114771: 82 7b 50                 a4 = u64 [a0 + 0x50]
114774: 96 aa 0a                 a3 = a3 * 0xa
114777: c9 a9 0a                 a3 = a2 - a3
114780: 7b ba 20                 u64 [a4 + 0x20] = a3
114783: 55 18 05 08              jump @8981 if a1 >=u 5
      :                          @8980
114787: 28 21 33 01              jump @13272
      :                          @8981
114791: 82 78 70                 a1 = u64 [a0 + 0x70]
114794: 55 18 04 08              jump @8983 if a1 >=u 4
      :                          @8982
114798: 28 e9 32 01              jump @13231
      :                          @8983
114802: 82 77 68                 a0 = u64 [a0 + 0x68]
114805: 7b 7a 18                 u64 [a0 + 0x18] = a3
114808: 3a 08 70 02 03           a1 = u64 [0x30270]
114813: 97 8a 0d                 a3 = a1 << 0xd
114816: d3 a8 08                 a1 = a1 ^ a3
114819: 98 8a 07                 a3 = a1 >> 0x7
114822: d3 a8 08                 a1 = a1 ^ a3
114825: 97 8c 11                 a5 = a1 << 0x11
114828: d3 8c 0c                 a5 = a5 ^ a1
114831: 3e 0c 70 02 03           u64 [0x30270] = a5
114836: 82 18 08 02              a1 = u64 [sp + 0x208]
114840: 55 18 04 08              jump @8985 if a1 >=u 4
      :                          @8984
114844: 28 bb 32 01              jump @13231
      :                          @8985
114848: 82 1a 00 02              a3 = u64 [sp + 0x200]
114852: 82 a9 58                 a2 = u64 [a3 + 0x58]
114855: 55 19 06 08              jump @8987 if a2 >=u 6
      :                          @8986
114859: 28 b1 32 01              jump @13236
      :                          @8987
114863: ca 2c 09                 a2 = a5 * t0
114866: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
114876: d6 b9 0b                 a4 = a2 mulhu a4
114879: 98 bb 03                 a4 = a4 >> 0x3
114882: 82 ac 50                 a5 = u64 [a3 + 0x50]
114885: 96 bb 0a                 a4 = a4 * 0xa
114888: c9 b9 09                 a2 = a2 - a4
114891: 7b c9 28                 u64 [a5 + 0x28] = a2
114894: 55 18 06 08              jump @8989 if a1 >=u 6
      :                          @8988
114898: 28 8b 32 01              jump @13237
      :                          @8989
114902: 82 a8 88 00              a1 = u64 [a3 + 0x88]
114906: 55 18 04 08              jump @8991 if a1 >=u 4
      :                          @8990
114910: 28 79 32 01              jump @13231
      :                          @8991
114914: 82 a8 80 00              a1 = u64 [a3 + 0x80]
114918: 7b 89 18                 u64 [a1 + 0x18] = a2
114921: 3a 09 70 02 03           a2 = u64 [0x30270]
114926: 97 9a 0d                 a3 = a2 << 0xd
114929: d3 a9 09                 a2 = a2 ^ a3
114932: 98 9a 07                 a3 = a2 >> 0x7
114935: d3 a9 09                 a2 = a2 ^ a3
114938: 97 96 11                 s1 = a2 << 0x11
114941: d3 96 06                 s1 = s1 ^ a2
114944: 3e 06 70 02 03           u64 [0x30270] = s1
114949: 82 18 08 02              a1 = u64 [sp + 0x208]
114953: 55 18 05 08              jump @8993 if a1 >=u 5
      :                          @8992
114957: 28 3a 32 01              jump @13215
      :                          @8993
114961: 82 17 00 02              a0 = u64 [sp + 0x200]
114965: 82 79 70                 a2 = u64 [a0 + 0x70]
114968: 33 0c 06                 a5 = 0x6
114971: ae c9 07                 jump @8995 if a2 >=u a5
      :                          @8994
114974: 28 3c 32 01              jump @13234
      :                          @8995
114978: ca 26 09                 a2 = s1 * t0
114981: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
114991: d6 a9 0a                 a3 = a2 mulhu a3
114994: 98 aa 03                 a3 = a3 >> 0x3
114997: 82 7b 68                 a4 = u64 [a0 + 0x68]
115000: 33 06 0a                 s1 = 0xa
115003: ca 6a 0a                 a3 = a3 * s1
115006: c9 a9 09                 a2 = a2 - a3
115009: 7b b9 28                 u64 [a4 + 0x28] = a2
115012: 55 18 06 08              jump @8997 if a1 >=u 6
      :                          @8996
115016: 28 3d 32 01              jump @13273
      :                          @8997
115020: 82 78 88 00              a1 = u64 [a0 + 0x88]
115024: 33 0a 05                 a3 = 0x5
115027: ae a8 07                 jump @8999 if a1 >=u a3
      :                          @8998
115030: 28 02 32 01              jump @13232
      :                          @8999
115034: 82 77 80 00              a0 = u64 [a0 + 0x80]
115038: 7b 79 20                 u64 [a0 + 0x20] = a2
115041: 82 17 08 02              a0 = u64 [sp + 0x208]
115045: 82 18 00 02              a1 = u64 [sp + 0x200]
115049: 82 19 f8 01              a2 = u64 [sp + 0x1f8]
115053: 7b 17 90 02              u64 [sp + 0x290] = a0
115057: 7b 18 88 02              u64 [sp + 0x288] = a1
115061: 7b 19 80 02              u64 [sp + 0x280] = a2
115065: 95 17 80 02              a0 = sp + 0x280
115069: 50 20 42 05 62 3d ff     ra = 1346, jump @5084
      :                          @9000 [@dyn 673]
115076: 7b 17 10 01              u64 [sp + 0x110] = a0
115080: 95 17 10 01              a0 = sp + 0x110
115084: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
115088: 33 07 28 0c              a0 = 0xc28
115092: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
115096: 33 07 28 09 01           a0 = 0x10928
115101: 7b 17 80 02              u64 [sp + 0x280] = a0
115105: 49 21 88 02 01           u64 [sp + 648] = 0x1
115110: 49 21 a0 02              u64 [sp + 672] = 0
115114: 95 18 d0 01              a1 = sp + 0x1d0
115118: 7b 18 90 02              u64 [sp + 0x290] = a1
115122: 49 21 98 02 01           u64 [sp + 664] = 0x1
115127: 95 17 28 02              a0 = sp + 0x228
115131: 95 18 80 02              a1 = sp + 0x280
115135: 50 20 44 05 88 8d fe     ra = 1348, jump @1491
      :                          @9001 [@dyn 674]
115142: 82 16 30 02              s1 = u64 [sp + 0x230]
115146: 82 1b 38 02              a4 = u64 [sp + 0x238]
115150: 82 17 28 02              a0 = u64 [sp + 0x228]
115154: 7b 17 60                 u64 [sp + 0x60] = a0
115157: 33 07 02                 a0 = 0x2
115160: 33 08                    a1 = 0
115162: 33 09                    a2 = 0
115164: 64 6a                    a3 = s1
115166: 33 00 46 05              ra = 0x546
115170: 0a 64                    ecalli 100 // 'log'
115172: 01                       fallthrough
      :                          @9002 [@dyn 675]
115173: 82 1c 60                 a5 = u64 [sp + 0x60]
115176: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
115181: 55 38 00 00 f0 0a        jump @9004 if a1 >=u 4293918720
      :                          @9003
115187: 28 f8 1f 01              jump @12862
      :                          @9004
115191: 33 07 b0 02 03           a0 = 0x302b0
115196: 95 77 00 00 10           a0 = a0 + 0x100000
115201: 01                       fallthrough
      :                          @9005
115202: 82 78                    a1 = u64 [a0]
115204: c9 87 09                 a2 = a0 - a1
115207: aa 69 07                 jump @9007 if a2 == s1
      :                          @9006
115210: 28 e1 1f 01              jump @12862
      :                          @9007
115214: c9 c8 09                 a2 = a1 - a5
115217: 01                       fallthrough
      :                          @9008
115218: 82 7a                    a3 = u64 [a0]
115220: ab 8a ee                 jump @9005 if a3 != a1
      :                          @9009
115223: 7b 79                    u64 [a0] = a2
115225: 33 0b                    a4 = 0
115227: 01                       fallthrough
      :                          @9010
115228: ab 8a e6                 jump @9005 if a3 != a1
      :                          @9011
115231: 28 cc 1f 01              jump @12862
      :                          @9012 [@dyn 676]
115235: 95 17 80 02              a0 = sp + 0x280
115239: 33 08 05                 a1 = 0x5
115242: 50 20 4a 05 86 9b fe     ra = 1354, jump @1776
      :                          @9013 [@dyn 677]
115249: 95 17 d0 01              a0 = sp + 0x1d0
115253: 95 18 80 02              a1 = sp + 0x280
115257: 33 09 05                 a2 = 0x5
115260: 50 20 4c 05 95 a2 fe     ra = 1356, jump @1895
      :                          @9014 [@dyn 678]
115267: 95 17 80 02              a0 = sp + 0x280
115271: 33 08 05                 a1 = 0x5
115274: 50 20 4e 05 66 9b fe     ra = 1358, jump @1776
      :                          @9015 [@dyn 679]
115281: 95 17 f8 01              a0 = sp + 0x1f8
115285: 95 18 80 02              a1 = sp + 0x280
115289: 33 09 05                 a2 = 0x5
115292: 50 20 50 05 75 a2 fe     ra = 1360, jump @1895
      :                          @9016 [@dyn 680]
115299: 49 11 60                 u64 [sp + 96] = 0
115302: 33 07                    a0 = 0
115304: 49 11 58 01              u64 [sp + 88] = 0x1
115308: 33 00 70 02 03           ra = 0x30270
115313: 28 1f                    jump @9019
      :                          @9017
115315: 95 77 01                 a0 = a0 + 0x1
115318: 82 18 58                 a1 = u64 [sp + 0x58]
115321: 95 88 01                 a1 = a1 + 0x1
115324: 7b 18 58                 u64 [sp + 0x58] = a1
115327: 82 18 60                 a1 = u64 [sp + 0x60]
115330: 95 88 18                 a1 = a1 + 0x18
115333: 7b 18 60                 u64 [sp + 0x60] = a1
115336: 52 17 05 08              jump @9019 if a0 != 5
      :                          @9018
115340: 28 a4 2b 01              jump @13064
      :                          @9019
115344: 56 17 03 e3              jump @9017 if a0 >u 3
      :                          @9020
115348: 82 1c 60                 a5 = u64 [sp + 0x60]
115351: 82 19 58                 a2 = u64 [sp + 0x58]
115354: 01                       fallthrough
      :                          @9021
115355: 3a 08 70 02 03           a1 = u64 [0x30270]
115360: 97 8a 0d                 a3 = a1 << 0xd
115363: d3 a8 08                 a1 = a1 ^ a3
115366: 98 8a 07                 a3 = a1 >> 0x7
115369: d3 8a 02                 t0 = a3 ^ a1
115372: 97 28 11                 a1 = t0 << 0x11
115375: d3 28 08                 a1 = a1 ^ t0
115378: 3e 08 70 02 03           u64 [0x30270] = a1
115383: 3a 08 70 02 03           a1 = u64 [0x30270]
115388: 97 8a 0d                 a3 = a1 << 0xd
115391: d3 a8 08                 a1 = a1 ^ a3
115394: 98 8b 07                 a4 = a1 >> 0x7
115397: d3 8b 0b                 a4 = a4 ^ a1
115400: 97 b8 11                 a1 = a4 << 0x11
115403: d3 b8 08                 a1 = a1 ^ a4
115406: 3e 08 70 02 03           u64 [0x30270] = a1
115411: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
115415: ac 87 07                 jump @9023 if a0 <u a1
      :                          @9022
115418: 28 6d 30 01              jump @13215
      :                          @9023
115422: 82 14 d8 01              t2 = u64 [sp + 0x1d8]
115426: 96 73 18                 t1 = a0 * 0x18
115429: c8 34 06                 s1 = t2 + t1
115432: 82 6a 10                 a3 = u64 [s1 + 0x10]
115435: ac a9 07                 jump @9025 if a2 <u a3
      :                          @9024
115438: 28 c7 1c 01              jump @12820
      :                          @9025
115442: 82 6a 08                 a3 = u64 [s1 + 0x8]
115445: c8 9a 06                 s1 = a3 + a2
115448: 84 2a 01                 a3 = t0 & 0x1
115451: 78 6a                    u8 [s1] = a3
115453: ac 89 07                 jump @9027 if a2 <u a1
      :                          @9026
115456: 28 7a 30 01              jump @13262
      :                          @9027
115460: c8 c4 04                 t2 = t2 + a5
115463: 82 48 28                 a1 = u64 [t2 + 0x28]
115466: ac 87 07                 jump @9029 if a0 <u a1
      :                          @9028
115469: 28 3a 30 01              jump @13215
      :                          @9029
115473: 82 48 20                 a1 = u64 [t2 + 0x20]
115476: c8 78 08                 a1 = a1 + a0
115479: 78 8a                    u8 [a1] = a3
115481: 82 18 08 02              a1 = u64 [sp + 0x208]
115485: ac 87 07                 jump @9031 if a0 <u a1
      :                          @9030
115488: 28 27 30 01              jump @13215
      :                          @9031
115492: 82 16 00 02              s1 = u64 [sp + 0x200]
115496: c8 63 03                 t1 = t1 + s1
115499: 82 3a 10                 a3 = u64 [t1 + 0x10]
115502: ac a9 07                 jump @9033 if a2 <u a3
      :                          @9032
115505: 28 84 1c 01              jump @12820
      :                          @9033
115509: 82 3a 08                 a3 = u64 [t1 + 0x8]
115512: c8 9a 0a                 a3 = a3 + a2
115515: 84 bb 01                 a4 = a4 & 0x1
115518: 78 ab                    u8 [a3] = a4
115520: ac 89 07                 jump @9035 if a2 <u a1
      :                          @9034
115523: 28 37 30 01              jump @13262
      :                          @9035
115527: c8 c6 06                 s1 = s1 + a5
115530: 82 68 28                 a1 = u64 [s1 + 0x28]
115533: ac 87 07                 jump @9037 if a0 <u a1
      :                          @9036
115536: 28 f7 2f 01              jump @13215
      :                          @9037
115540: 82 68 20                 a1 = u64 [s1 + 0x20]
115543: c8 78 08                 a1 = a1 + a0
115546: 78 8b                    u8 [a1] = a4
115548: 95 99 01                 a2 = a2 + 0x1
115551: 95 cc 18                 a5 = a5 + 0x18
115554: 52 19 05 39 ff           jump @9021 if a2 != 5
      :                          @9038
115559: 28 0c ff                 jump @9017
      :                          @9039 [@dyn 681]
115562: 3a 08 70 02 03           a1 = u64 [0x30270]
115567: 97 89 0d                 a2 = a1 << 0xd
115570: d3 89 09                 a2 = a2 ^ a1
115573: 98 9a 07                 a3 = a2 >> 0x7
115576: 3a 08 58 01 03           a1 = u64 [0x30158]
115581: d3 a9 09                 a2 = a2 ^ a3
115584: 97 9a 11                 a3 = a2 << 0x11
115587: d3 a9 09                 a2 = a2 ^ a3
115590: ca 89 0a                 a3 = a2 * a1
115593: 3e 09 70 02 03           u64 [0x30270] = a2
115598: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
115608: d6 9a 0b                 a4 = a3 mulhu a2
115611: 98 bb 03                 a4 = a4 >> 0x3
115614: 3a 06 70 02 03           s1 = u64 [0x30270]
115619: 96 bb 0a                 a4 = a4 * 0xa
115622: c9 ba 0a                 a3 = a3 - a4
115625: 7b 1a 60                 u64 [sp + 0x60] = a3
115628: 97 6a 0d                 a3 = s1 << 0xd
115631: d3 6a 0a                 a3 = a3 ^ s1
115634: 98 ab 07                 a4 = a3 >> 0x7
115637: d3 ba 0a                 a3 = a3 ^ a4
115640: 97 ab 11                 a4 = a3 << 0x11
115643: d3 ba 0a                 a3 = a3 ^ a4
115646: ca 8a 0b                 a4 = a3 * a1
115649: 3e 0a 70 02 03           u64 [0x30270] = a3
115654: d6 9b 0a                 a3 = a4 mulhu a2
115657: 98 aa 03                 a3 = a3 >> 0x3
115660: 3a 0c 70 02 03           a5 = u64 [0x30270]
115665: 96 aa 0a                 a3 = a3 * 0xa
115668: c9 ab 0b                 a4 = a4 - a3
115671: 7b 1b 58                 u64 [sp + 0x58] = a4
115674: 97 ca 0d                 a3 = a5 << 0xd
115677: d3 ca 0a                 a3 = a3 ^ a5
115680: 98 ab 07                 a4 = a3 >> 0x7
115683: d3 ba 0a                 a3 = a3 ^ a4
115686: 97 ab 11                 a4 = a3 << 0x11
115689: d3 ba 0a                 a3 = a3 ^ a4
115692: ca 8a 0b                 a4 = a3 * a1
115695: 3e 0a 70 02 03           u64 [0x30270] = a3
115700: d6 9b 0a                 a3 = a4 mulhu a2
115703: 98 ac 02                 a5 = a3 >> 0x2
115706: 84 aa fc                 a3 = a3 & 0xfffffffffffffffc
115709: 3a 07 70 02 03           a0 = u64 [0x30270]
115714: c8 ca 0a                 a3 = a3 + a5
115717: c9 ab 0b                 a4 = a4 - a3
115720: 7b 1b 50                 u64 [sp + 0x50] = a4
115723: 97 7a 0d                 a3 = a0 << 0xd
115726: d3 a7 07                 a0 = a0 ^ a3
115729: 98 7a 07                 a3 = a0 >> 0x7
115732: d3 a7 07                 a0 = a0 ^ a3
115735: 97 7a 11                 a3 = a0 << 0x11
115738: d3 a7 07                 a0 = a0 ^ a3
115741: ca 87 08                 a1 = a0 * a1
115744: 3e 07 70 02 03           u64 [0x30270] = a0
115749: d6 98 07                 a0 = a1 mulhu a2
115752: 98 79 02                 a2 = a0 >> 0x2
115755: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
115758: c8 97 07                 a0 = a0 + a2
115761: c9 78 06                 s1 = a1 - a0
115764: 33 07 40                 a0 = 0x40
115767: 50 20 54 05 c7 8b fe     ra = 1364, jump @1509
      :                          @9040 [@dyn 682]
115774: 64 78                    a1 = a0
115776: 82 19 60                 a2 = u64 [sp + 0x60]
115779: 82 17 50                 a0 = u64 [sp + 0x50]
115782: c8 97 07                 a0 = a0 + a2
115785: 95 77 01                 a0 = a0 + 0x1
115788: 82 1a 58                 a3 = u64 [sp + 0x58]
115791: c8 a6 06                 s1 = s1 + a3
115794: 95 66 01                 s1 = s1 + 0x1
115797: 7b 89                    u64 [a1] = a2
115799: 7b 8a 08                 u64 [a1 + 0x8] = a3
115802: 7b 87 10                 u64 [a1 + 0x10] = a0
115805: 7b 8a 18                 u64 [a1 + 0x18] = a3
115808: 7b 87 20                 u64 [a1 + 0x20] = a0
115811: 7b 86 28                 u64 [a1 + 0x28] = s1
115814: 7b 89 30                 u64 [a1 + 0x30] = a2
115817: 7b 86 38                 u64 [a1 + 0x38] = s1
115820: 33 06 04                 s1 = 0x4
115823: 7b 16 d0 01              u64 [sp + 0x1d0] = s1
115827: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
115831: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
115835: 95 17 80 02              a0 = sp + 0x280
115839: 50 20 56 05 73 42 ff     ra = 1366, jump @5284
      :                          @9041 [@dyn 683]
115846: 82 17 80 02              a0 = u64 [sp + 0x280]
115850: 82 18 88 02              a1 = u64 [sp + 0x288]
115854: 82 19 90 02              a2 = u64 [sp + 0x290]
115858: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
115862: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
115866: 7b 19 10 01              u64 [sp + 0x110] = a2
115870: 95 17 d0 01              a0 = sp + 0x1d0
115874: 7b 17 80 02              u64 [sp + 0x280] = a0
115878: 33 07 08 02              a0 = 0x208
115882: 7b 17 88 02              u64 [sp + 0x288] = a0
115886: 95 17 a0 01              a0 = sp + 0x1a0
115890: 7b 17 90 02              u64 [sp + 0x290] = a0
115894: 33 07 94 0c              a0 = 0xc94
115898: 7b 17 98 02              u64 [sp + 0x298] = a0
115902: 95 18 b8 01              a1 = sp + 0x1b8
115906: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
115910: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
115914: 95 18 10 01              a1 = sp + 0x110
115918: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
115922: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
115926: 33 07 10 0a 01           a0 = 0x10a10
115931: 7b 17 28 02              u64 [sp + 0x228] = a0
115935: 7b 16 30 02              u64 [sp + 0x230] = s1
115939: 49 21 48 02              u64 [sp + 584] = 0
115943: 95 17 80 02              a0 = sp + 0x280
115947: 7b 17 38 02              u64 [sp + 0x238] = a0
115951: 7b 16 40 02              u64 [sp + 0x240] = s1
115955: 95 17 f8 01              a0 = sp + 0x1f8
115959: 95 18 28 02              a1 = sp + 0x228
115963: 50 20 58 05 4c 8a fe     ra = 1368, jump @1491
      :                          @9042 [@dyn 684]
115970: 82 16 00 02              s1 = u64 [sp + 0x200]
115974: 82 1b 08 02              a4 = u64 [sp + 0x208]
115978: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
115982: 7b 17 60                 u64 [sp + 0x60] = a0
115985: 33 07 02                 a0 = 0x2
115988: 33 08                    a1 = 0
115990: 33 09                    a2 = 0
115992: 64 6a                    a3 = s1
115994: 33 00 5a 05              ra = 0x55a
115998: 0a 64                    ecalli 100 // 'log'
116000: 01                       fallthrough
      :                          @9043 [@dyn 685]
116001: 82 1c 60                 a5 = u64 [sp + 0x60]
116004: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
116009: 53 38 00 00 f0 25        jump @9049 if a1 <u 4293918720
      :                          @9044
116015: 33 07 b0 02 03           a0 = 0x302b0
116020: 95 77 00 00 10           a0 = a0 + 0x100000
116025: 01                       fallthrough
      :                          @9045
116026: 82 78                    a1 = u64 [a0]
116028: c9 87 09                 a2 = a0 - a1
116031: ab 69 0f                 jump @9049 if a2 != s1
      :                          @9046
116034: c9 c8 09                 a2 = a1 - a5
116037: 01                       fallthrough
      :                          @9047
116038: 82 7a                    a3 = u64 [a0]
116040: ab 8a f2                 jump @9045 if a3 != a1
      :                          @9048
116043: 7b 79                    u64 [a0] = a2
116045: 01                       fallthrough
      :                          @9049
116046: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
116050: 52 08 07                 jump @9051 if a1 != 0
      :                          @9050
116053: 28 96 1c 01              jump @12862
      :                          @9051
116057: 54 38 00 00 01 0a        jump @9053 if a1 <=u 65536
      :                          @9052
116063: 28 8c 1c 01              jump @12862
      :                          @9053
116067: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
116071: 97 88 04                 a1 = a1 << 0x4
116074: 33 09 b0 02 03           a2 = 0x302b0
116079: 95 99 00 00 10           a2 = a2 + 0x100000
116084: 01                       fallthrough
      :                          @9054
116085: 82 9a                    a3 = u64 [a2]
116087: c9 a9 0b                 a4 = a2 - a3
116090: aa 7b 07                 jump @9056 if a4 == a0
      :                          @9055
116093: 28 6e 1c 01              jump @12862
      :                          @9056
116097: c9 8a 0b                 a4 = a3 - a1
116100: 01                       fallthrough
      :                          @9057
116101: 82 9c                    a5 = u64 [a2]
116103: ab ac ee                 jump @9054 if a5 != a3
      :                          @9058
116106: 7b 9b                    u64 [a2] = a4
116108: 33 06                    s1 = 0
116110: 01                       fallthrough
      :                          @9059
116111: ab ac e6                 jump @9054 if a5 != a3
      :                          @9060
116114: 28 59 1c 01              jump @12862
      :                          @9061 [@dyn 686]
116118: 3a 08 70 02 03           a1 = u64 [0x30270]
116123: 97 89 0d                 a2 = a1 << 0xd
116126: d3 89 09                 a2 = a2 ^ a1
116129: 98 9a 07                 a3 = a2 >> 0x7
116132: 3a 08 58 01 03           a1 = u64 [0x30158]
116137: d3 a9 09                 a2 = a2 ^ a3
116140: 97 9a 11                 a3 = a2 << 0x11
116143: d3 9a 0a                 a3 = a3 ^ a2
116146: ca 8a 0b                 a4 = a3 * a1
116149: 3a 09 68 01 03           a2 = u64 [0x30168]
116154: 3e 0a 70 02 03           u64 [0x30270] = a3
116159: 98 ba 01                 a3 = a4 >> 0x1
116162: d6 9a 0a                 a3 = a3 mulhu a2
116165: 98 ac 04                 a5 = a3 >> 0x4
116168: 3a 06 70 02 03           s1 = u64 [0x30270]
116173: 96 cc 32                 a5 = a5 * 0x32
116176: c9 cb 0b                 a4 = a4 - a5
116179: 97 6c 0d                 a5 = s1 << 0xd
116182: d3 c6 06                 s1 = s1 ^ a5
116185: 98 6c 07                 a5 = s1 >> 0x7
116188: d3 c6 06                 s1 = s1 ^ a5
116191: 97 6c 11                 a5 = s1 << 0x11
116194: d3 6c 0c                 a5 = a5 ^ s1
116197: ca 8c 06                 s1 = a5 * a1
116200: 3e 0c 70 02 03           u64 [0x30270] = a5
116205: 98 6c 01                 a5 = s1 >> 0x1
116208: d6 9c 0c                 a5 = a5 mulhu a2
116211: 98 cc 04                 a5 = a5 >> 0x4
116214: 96 cc 32                 a5 = a5 * 0x32
116217: c9 c6 06                 s1 = s1 - a5
116220: 7b 1b 10 01              u64 [sp + 0x110] = a4
116224: 7b 16 18 01              u64 [sp + 0x118] = s1
116228: 3a 0b 70 02 03           a4 = u64 [0x30270]
116233: 97 bc 0d                 a5 = a4 << 0xd
116236: d3 cb 0b                 a4 = a4 ^ a5
116239: 98 bc 07                 a5 = a4 >> 0x7
116242: d3 cb 0b                 a4 = a4 ^ a5
116245: 97 bc 11                 a5 = a4 << 0x11
116248: d3 cb 0b                 a4 = a4 ^ a5
116251: ca 8b 0c                 a5 = a4 * a1
116254: 3e 0b 70 02 03           u64 [0x30270] = a4
116259: 98 cb 01                 a4 = a5 >> 0x1
116262: d6 9b 0b                 a4 = a4 mulhu a2
116265: 98 bb 04                 a4 = a4 >> 0x4
116268: 3a 06 70 02 03           s1 = u64 [0x30270]
116273: 96 bb 32                 a4 = a4 * 0x32
116276: c9 bc 0c                 a5 = a5 - a4
116279: 97 6b 0d                 a4 = s1 << 0xd
116282: d3 b6 06                 s1 = s1 ^ a4
116285: 98 6b 07                 a4 = s1 >> 0x7
116288: d3 b6 06                 s1 = s1 ^ a4
116291: 97 6b 11                 a4 = s1 << 0x11
116294: d3 6b 0b                 a4 = a4 ^ s1
116297: ca 8b 08                 a1 = a4 * a1
116300: 3e 0b 70 02 03           u64 [0x30270] = a4
116305: 98 87 01                 a0 = a1 >> 0x1
116308: d6 97 07                 a0 = a0 mulhu a2
116311: 98 77 04                 a0 = a0 >> 0x4
116314: 96 77 32                 a0 = a0 * 0x32
116317: c9 78 08                 a1 = a1 - a0
116320: 82 17 10 01              a0 = u64 [sp + 0x110]
116324: 7b 1c d0 01              u64 [sp + 0x1d0] = a5
116328: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
116332: 82 19 18 01              a2 = u64 [sp + 0x118]
116336: c9 c7 07                 a0 = a0 - a5
116339: 9a 7a                    a3 = -a0
116341: e3 a7 07                 a0 = maxs(a0, a3)
116344: c9 89 09                 a2 = a2 - a1
116347: 9a 98                    a1 = -a2
116349: e3 89 08                 a1 = maxs(a2, a1)
116352: c8 87 07                 a0 = a0 + a1
116355: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
116359: 95 17 10 01              a0 = sp + 0x110
116363: 7b 17 80 02              u64 [sp + 0x280] = a0
116367: 33 07 8e 01              a0 = 0x18e
116371: 7b 17 88 02              u64 [sp + 0x288] = a0
116375: 95 18 d0 01              a1 = sp + 0x1d0
116379: 7b 18 90 02              u64 [sp + 0x290] = a1
116383: 7b 17 98 02              u64 [sp + 0x298] = a0
116387: 95 17 b8 01              a0 = sp + 0x1b8
116391: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
116395: 33 07 28 0c              a0 = 0xc28
116399: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
116403: 33 07 60 0a 01           a0 = 0x10a60
116408: 7b 17 28 02              u64 [sp + 0x228] = a0
116412: 49 21 30 02 03           u64 [sp + 560] = 0x3
116417: 49 21 48 02              u64 [sp + 584] = 0
116421: 95 18 80 02              a1 = sp + 0x280
116425: 7b 18 38 02              u64 [sp + 0x238] = a1
116429: 49 21 40 02 03           u64 [sp + 576] = 0x3
116434: 95 17 f8 01              a0 = sp + 0x1f8
116438: 95 18 28 02              a1 = sp + 0x228
116442: 50 20 5e 05 6d 88 fe     ra = 1374, jump @1491
      :                          @9062 [@dyn 687]
116449: 82 16 00 02              s1 = u64 [sp + 0x200]
116453: 82 1b 08 02              a4 = u64 [sp + 0x208]
116457: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
116461: 7b 17 60                 u64 [sp + 0x60] = a0
116464: 33 07 02                 a0 = 0x2
116467: 33 08                    a1 = 0
116469: 33 09                    a2 = 0
116471: 64 6a                    a3 = s1
116473: 33 00 60 05              ra = 0x560
116477: 0a 64                    ecalli 100 // 'log'
116479: 01                       fallthrough
      :                          @9063 [@dyn 688]
116480: 82 1c 60                 a5 = u64 [sp + 0x60]
116483: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
116488: 55 38 00 00 f0 0a        jump @9065 if a1 >=u 4293918720
      :                          @9064
116494: 28 dd 1a 01              jump @12862
      :                          @9065
116498: 33 07 b0 02 03           a0 = 0x302b0
116503: 95 77 00 00 10           a0 = a0 + 0x100000
116508: 01                       fallthrough
      :                          @9066
116509: 82 78                    a1 = u64 [a0]
116511: c9 87 09                 a2 = a0 - a1
116514: aa 69 07                 jump @9068 if a2 == s1
      :                          @9067
116517: 28 c6 1a 01              jump @12862
      :                          @9068
116521: c9 c8 09                 a2 = a1 - a5
116524: 01                       fallthrough
      :                          @9069
116525: 82 7a                    a3 = u64 [a0]
116527: ab 8a ee                 jump @9066 if a3 != a1
      :                          @9070
116530: 7b 79                    u64 [a0] = a2
116532: 33 0b                    a4 = 0
116534: 01                       fallthrough
      :                          @9071
116535: ab 8a e6                 jump @9066 if a3 != a1
      :                          @9072
116538: 28 b1 1a 01              jump @12862
      :                          @9073 [@dyn 689]
116542: 3a 08 70 02 03           a1 = u64 [0x30270]
116547: 97 89 0d                 a2 = a1 << 0xd
116550: d3 89 09                 a2 = a2 ^ a1
116553: 98 9a 07                 a3 = a2 >> 0x7
116556: 3a 08 58 01 03           a1 = u64 [0x30158]
116561: d3 a9 09                 a2 = a2 ^ a3
116564: 97 9a 11                 a3 = a2 << 0x11
116567: d3 9a 0a                 a3 = a3 ^ a2
116570: ca 8a 0b                 a4 = a3 * a1
116573: 3a 09 68 01 03           a2 = u64 [0x30168]
116578: 3e 0a 70 02 03           u64 [0x30270] = a3
116583: 98 ba 01                 a3 = a4 >> 0x1
116586: d6 9a 0a                 a3 = a3 mulhu a2
116589: 98 ac 04                 a5 = a3 >> 0x4
116592: 3a 06 70 02 03           s1 = u64 [0x30270]
116597: 96 cc 32                 a5 = a5 * 0x32
116600: c9 cb 0b                 a4 = a4 - a5
116603: 97 6c 0d                 a5 = s1 << 0xd
116606: d3 c6 06                 s1 = s1 ^ a5
116609: 98 6c 07                 a5 = s1 >> 0x7
116612: d3 c6 06                 s1 = s1 ^ a5
116615: 97 6c 11                 a5 = s1 << 0x11
116618: d3 6c 0c                 a5 = a5 ^ s1
116621: ca 8c 06                 s1 = a5 * a1
116624: 3e 0c 70 02 03           u64 [0x30270] = a5
116629: 98 6c 01                 a5 = s1 >> 0x1
116632: d6 9c 0c                 a5 = a5 mulhu a2
116635: 98 cc 04                 a5 = a5 >> 0x4
116638: 96 cc 32                 a5 = a5 * 0x32
116641: c9 c6 06                 s1 = s1 - a5
116644: 7b 1b 10 01              u64 [sp + 0x110] = a4
116648: 7b 16 18 01              u64 [sp + 0x118] = s1
116652: 3a 0b 70 02 03           a4 = u64 [0x30270]
116657: 97 bc 0d                 a5 = a4 << 0xd
116660: d3 cb 0b                 a4 = a4 ^ a5
116663: 98 bc 07                 a5 = a4 >> 0x7
116666: d3 cb 0b                 a4 = a4 ^ a5
116669: 97 bc 11                 a5 = a4 << 0x11
116672: d3 cb 0b                 a4 = a4 ^ a5
116675: ca 8b 0c                 a5 = a4 * a1
116678: 3e 0b 70 02 03           u64 [0x30270] = a4
116683: 98 cb 01                 a4 = a5 >> 0x1
116686: d6 9b 0b                 a4 = a4 mulhu a2
116689: 98 bb 04                 a4 = a4 >> 0x4
116692: 3a 06 70 02 03           s1 = u64 [0x30270]
116697: 96 bb 32                 a4 = a4 * 0x32
116700: c9 bc 0c                 a5 = a5 - a4
116703: 97 6b 0d                 a4 = s1 << 0xd
116706: d3 b6 06                 s1 = s1 ^ a4
116709: 98 6b 07                 a4 = s1 >> 0x7
116712: d3 b6 06                 s1 = s1 ^ a4
116715: 97 6b 11                 a4 = s1 << 0x11
116718: d3 6b 0b                 a4 = a4 ^ s1
116721: ca 8b 08                 a1 = a4 * a1
116724: 3e 0b 70 02 03           u64 [0x30270] = a4
116729: 98 87 01                 a0 = a1 >> 0x1
116732: d6 97 07                 a0 = a0 mulhu a2
116735: 98 77 04                 a0 = a0 >> 0x4
116738: 96 77 32                 a0 = a0 * 0x32
116741: c9 78 08                 a1 = a1 - a0
116744: 82 17 10 01              a0 = u64 [sp + 0x110]
116748: 7b 1c d0 01              u64 [sp + 0x1d0] = a5
116752: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
116756: 82 19 18 01              a2 = u64 [sp + 0x118]
116760: c9 c7 07                 a0 = a0 - a5
116763: 9a 7a                    a3 = -a0
116765: e3 a7 07                 a0 = maxs(a0, a3)
116768: c9 89 09                 a2 = a2 - a1
116771: 9a 98                    a1 = -a2
116773: e3 89 08                 a1 = maxs(a2, a1)
116776: e4 87 07                 a0 = maxu(a0, a1)
116779: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
116783: 95 17 10 01              a0 = sp + 0x110
116787: 7b 17 80 02              u64 [sp + 0x280] = a0
116791: 33 07 8e 01              a0 = 0x18e
116795: 7b 17 88 02              u64 [sp + 0x288] = a0
116799: 95 18 d0 01              a1 = sp + 0x1d0
116803: 7b 18 90 02              u64 [sp + 0x290] = a1
116807: 7b 17 98 02              u64 [sp + 0x298] = a0
116811: 95 17 b8 01              a0 = sp + 0x1b8
116815: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
116819: 33 07 28 0c              a0 = 0xc28
116823: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
116827: 33 07 a0 0a 01           a0 = 0x10aa0
116832: 7b 17 28 02              u64 [sp + 0x228] = a0
116836: 49 21 30 02 03           u64 [sp + 560] = 0x3
116841: 49 21 48 02              u64 [sp + 584] = 0
116845: 95 18 80 02              a1 = sp + 0x280
116849: 7b 18 38 02              u64 [sp + 0x238] = a1
116853: 49 21 40 02 03           u64 [sp + 576] = 0x3
116858: 95 17 f8 01              a0 = sp + 0x1f8
116862: 95 18 28 02              a1 = sp + 0x228
116866: 50 20 64 05 c5 86 fe     ra = 1380, jump @1491
      :                          @9074 [@dyn 690]
116873: 82 16 00 02              s1 = u64 [sp + 0x200]
116877: 82 1b 08 02              a4 = u64 [sp + 0x208]
116881: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
116885: 7b 17 60                 u64 [sp + 0x60] = a0
116888: 33 07 02                 a0 = 0x2
116891: 33 08                    a1 = 0
116893: 33 09                    a2 = 0
116895: 64 6a                    a3 = s1
116897: 33 00 66 05              ra = 0x566
116901: 0a 64                    ecalli 100 // 'log'
116903: 01                       fallthrough
      :                          @9075 [@dyn 691]
116904: 82 1c 60                 a5 = u64 [sp + 0x60]
116907: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
116912: 55 38 00 00 f0 0a        jump @9077 if a1 >=u 4293918720
      :                          @9076
116918: 28 35 19 01              jump @12862
      :                          @9077
116922: 33 07 b0 02 03           a0 = 0x302b0
116927: 95 77 00 00 10           a0 = a0 + 0x100000
116932: 01                       fallthrough
      :                          @9078
116933: 82 78                    a1 = u64 [a0]
116935: c9 87 09                 a2 = a0 - a1
116938: aa 69 07                 jump @9080 if a2 == s1
      :                          @9079
116941: 28 1e 19 01              jump @12862
      :                          @9080
116945: c9 c8 09                 a2 = a1 - a5
116948: 01                       fallthrough
      :                          @9081
116949: 82 7a                    a3 = u64 [a0]
116951: ab 8a ee                 jump @9078 if a3 != a1
      :                          @9082
116954: 7b 79                    u64 [a0] = a2
116956: 33 0b                    a4 = 0
116958: 01                       fallthrough
      :                          @9083
116959: ab 8a e6                 jump @9078 if a3 != a1
      :                          @9084
116962: 28 09 19 01              jump @12862
      :                          @9085 [@dyn 692]
116966: 3a 07 70 02 03           a0 = u64 [0x30270]
116971: 97 78 0d                 a1 = a0 << 0xd
116974: d3 87 07                 a0 = a0 ^ a1
116977: 98 78 07                 a1 = a0 >> 0x7
116980: 3a 09 58 01 03           a2 = u64 [0x30158]
116985: d3 87 07                 a0 = a0 ^ a1
116988: 97 78 11                 a1 = a0 << 0x11
116991: d3 87 07                 a0 = a0 ^ a1
116994: ca 97 08                 a1 = a0 * a2
116997: 64 9c                    a5 = a2
116999: 7b 19 50                 u64 [sp + 0x50] = a2
117002: 3e 07 70 02 03           u64 [0x30270] = a0
117007: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
117017: d6 98 07                 a0 = a1 mulhu a2
117020: 98 77 03                 a0 = a0 >> 0x3
117023: 3a 0a 70 02 03           a3 = u64 [0x30270]
117028: 96 77 0a                 a0 = a0 * 0xa
117031: c9 78 08                 a1 = a1 - a0
117034: 7b 18 60                 u64 [sp + 0x60] = a1
117037: 97 a7 0d                 a0 = a3 << 0xd
117040: d3 a7 07                 a0 = a0 ^ a3
117043: 98 78 07                 a1 = a0 >> 0x7
117046: d3 87 07                 a0 = a0 ^ a1
117049: 97 78 11                 a1 = a0 << 0x11
117052: d3 87 07                 a0 = a0 ^ a1
117055: ca c7 08                 a1 = a0 * a5
117058: 3e 07 70 02 03           u64 [0x30270] = a0
117063: d6 98 07                 a0 = a1 mulhu a2
117066: 98 77 03                 a0 = a0 >> 0x3
117069: 3a 0a 70 02 03           a3 = u64 [0x30270]
117074: 96 77 0a                 a0 = a0 * 0xa
117077: c9 78 08                 a1 = a1 - a0
117080: 7b 18 58                 u64 [sp + 0x58] = a1
117083: 97 a7 0d                 a0 = a3 << 0xd
117086: d3 a7 07                 a0 = a0 ^ a3
117089: 98 78 07                 a1 = a0 >> 0x7
117092: d3 87 07                 a0 = a0 ^ a1
117095: 97 78 11                 a1 = a0 << 0x11
117098: d3 87 07                 a0 = a0 ^ a1
117101: ca c7 08                 a1 = a0 * a5
117104: 3e 07 70 02 03           u64 [0x30270] = a0
117109: d6 98 07                 a0 = a1 mulhu a2
117112: 7b 19 40                 u64 [sp + 0x40] = a2
117115: 98 76 02                 s1 = a0 >> 0x2
117118: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
117121: 3a 0a 70 02 03           a3 = u64 [0x30270]
117126: c8 67 07                 a0 = a0 + s1
117129: c9 78 08                 a1 = a1 - a0
117132: 7b 18 38                 u64 [sp + 0x38] = a1
117135: 97 a7 0d                 a0 = a3 << 0xd
117138: d3 a7 07                 a0 = a0 ^ a3
117141: 98 78 07                 a1 = a0 >> 0x7
117144: d3 87 07                 a0 = a0 ^ a1
117147: 97 78 11                 a1 = a0 << 0x11
117150: d3 87 07                 a0 = a0 ^ a1
117153: ca c7 08                 a1 = a0 * a5
117156: 3e 07 70 02 03           u64 [0x30270] = a0
117161: d6 98 07                 a0 = a1 mulhu a2
117164: 98 79 02                 a2 = a0 >> 0x2
117167: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
117170: c8 97 07                 a0 = a0 + a2
117173: c9 78 06                 s1 = a1 - a0
117176: 33 07 40                 a0 = 0x40
117179: 50 20 6a 05 43 86 fe     ra = 1386, jump @1509
      :                          @9086 [@dyn 693]
117186: 82 19 60                 a2 = u64 [sp + 0x60]
117189: 82 18 38                 a1 = u64 [sp + 0x38]
117192: c8 98 08                 a1 = a1 + a2
117195: 95 88 01                 a1 = a1 + 0x1
117198: 82 1a 58                 a3 = u64 [sp + 0x58]
117201: c8 a6 06                 s1 = s1 + a3
117204: 95 66 01                 s1 = s1 + 0x1
117207: 7b 79                    u64 [a0] = a2
117209: 7b 7a 08                 u64 [a0 + 0x8] = a3
117212: 7b 78 10                 u64 [a0 + 0x10] = a1
117215: 7b 7a 18                 u64 [a0 + 0x18] = a3
117218: 7b 78 20                 u64 [a0 + 0x20] = a1
117221: 7b 76 28                 u64 [a0 + 0x28] = s1
117224: 7b 79 30                 u64 [a0 + 0x30] = a2
117227: 7b 76 38                 u64 [a0 + 0x38] = s1
117230: 49 21 d0 01 04           u64 [sp + 464] = 0x4
117235: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
117239: 49 21 e0 01 04           u64 [sp + 480] = 0x4
117244: 3a 07 70 02 03           a0 = u64 [0x30270]
117249: 97 78 0d                 a1 = a0 << 0xd
117252: d3 87 07                 a0 = a0 ^ a1
117255: 98 78 07                 a1 = a0 >> 0x7
117258: d3 87 07                 a0 = a0 ^ a1
117261: 97 78 11                 a1 = a0 << 0x11
117264: d3 87 07                 a0 = a0 ^ a1
117267: 82 1b 50                 a4 = u64 [sp + 0x50]
117270: ca b7 08                 a1 = a0 * a4
117273: 3e 07 70 02 03           u64 [0x30270] = a0
117278: 82 16 40                 s1 = u64 [sp + 0x40]
117281: d6 68 07                 a0 = a1 mulhu s1
117284: 98 77 04                 a0 = a0 >> 0x4
117287: 3a 0a 70 02 03           a3 = u64 [0x30270]
117292: 33 0c 70 02 03           a5 = 0x30270
117297: 96 77 14                 a0 = a0 * 0x14
117300: c9 78 07                 a0 = a1 - a0
117303: 97 a8 0d                 a1 = a3 << 0xd
117306: d3 a8 08                 a1 = a1 ^ a3
117309: 98 8a 07                 a3 = a1 >> 0x7
117312: d3 a8 08                 a1 = a1 ^ a3
117315: 97 8a 11                 a3 = a1 << 0x11
117318: d3 a8 08                 a1 = a1 ^ a3
117321: ca b8 0b                 a4 = a1 * a4
117324: 3e 08 70 02 03           u64 [0x30270] = a1
117329: d6 6b 08                 a1 = a4 mulhu s1
117332: 98 88 04                 a1 = a1 >> 0x4
117335: 96 88 14                 a1 = a1 * 0x14
117338: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
117342: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
117346: c9 8b 08                 a1 = a4 - a1
117349: 7b 17 10 01              u64 [sp + 0x110] = a0
117353: 7b 18 18 01              u64 [sp + 0x118] = a1
117357: 50 20 6c 05 dc 3d ff     ra = 1388, jump @5301
      :                          @9087 [@dyn 694]
117364: 78 17 b8 01              u8 [sp + 0x1b8] = a0
117368: 95 17 10 01              a0 = sp + 0x110
117372: 7b 17 80 02              u64 [sp + 0x280] = a0
117376: 33 07 8e 01              a0 = 0x18e
117380: 7b 17 88 02              u64 [sp + 0x288] = a0
117384: 95 17 d0 01              a0 = sp + 0x1d0
117388: 7b 17 90 02              u64 [sp + 0x290] = a0
117392: 33 07 08 02              a0 = 0x208
117396: 7b 17 98 02              u64 [sp + 0x298] = a0
117400: 95 17 b8 01              a0 = sp + 0x1b8
117404: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
117408: 33 07 80 0c              a0 = 0xc80
117412: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
117416: 33 07 d8 0a 01           a0 = 0x10ad8
117421: 7b 17 28 02              u64 [sp + 0x228] = a0
117425: 49 21 30 02 03           u64 [sp + 560] = 0x3
117430: 49 21 48 02              u64 [sp + 584] = 0
117434: 95 18 80 02              a1 = sp + 0x280
117438: 7b 18 38 02              u64 [sp + 0x238] = a1
117442: 49 21 40 02 03           u64 [sp + 576] = 0x3
117447: 95 17 f8 01              a0 = sp + 0x1f8
117451: 95 18 28 02              a1 = sp + 0x228
117455: 50 20 6e 05 78 84 fe     ra = 1390, jump @1491
      :                          @9088 [@dyn 695]
117462: 82 16 00 02              s1 = u64 [sp + 0x200]
117466: 82 1b 08 02              a4 = u64 [sp + 0x208]
117470: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
117474: 7b 17 60                 u64 [sp + 0x60] = a0
117477: 33 07 02                 a0 = 0x2
117480: 33 08                    a1 = 0
117482: 33 09                    a2 = 0
117484: 64 6a                    a3 = s1
117486: 33 00 70 05              ra = 0x570
117490: 0a 64                    ecalli 100 // 'log'
117492: 01                       fallthrough
      :                          @9089 [@dyn 696]
117493: 82 1c 60                 a5 = u64 [sp + 0x60]
117496: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
117501: 53 38 00 00 f0 25        jump @9095 if a1 <u 4293918720
      :                          @9090
117507: 33 07 b0 02 03           a0 = 0x302b0
117512: 95 77 00 00 10           a0 = a0 + 0x100000
117517: 01                       fallthrough
      :                          @9091
117518: 82 78                    a1 = u64 [a0]
117520: c9 87 09                 a2 = a0 - a1
117523: ab 69 0f                 jump @9095 if a2 != s1
      :                          @9092
117526: c9 c8 09                 a2 = a1 - a5
117529: 01                       fallthrough
      :                          @9093
117530: 82 7a                    a3 = u64 [a0]
117532: ab 8a f2                 jump @9091 if a3 != a1
      :                          @9094
117535: 7b 79                    u64 [a0] = a2
117537: 01                       fallthrough
      :                          @9095
117538: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
117542: 52 08 07                 jump @9097 if a1 != 0
      :                          @9096
117545: 28 c2 16 01              jump @12862
      :                          @9097
117549: 54 38 00 00 01 0a        jump @9099 if a1 <=u 65536
      :                          @9098
117555: 28 b8 16 01              jump @12862
      :                          @9099
117559: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
117563: 97 88 04                 a1 = a1 << 0x4
117566: 33 09 b0 02 03           a2 = 0x302b0
117571: 95 99 00 00 10           a2 = a2 + 0x100000
117576: 01                       fallthrough
      :                          @9100
117577: 82 9a                    a3 = u64 [a2]
117579: c9 a9 0b                 a4 = a2 - a3
117582: aa 7b 07                 jump @9102 if a4 == a0
      :                          @9101
117585: 28 9a 16 01              jump @12862
      :                          @9102
117589: c9 8a 0b                 a4 = a3 - a1
117592: 01                       fallthrough
      :                          @9103
117593: 82 9c                    a5 = u64 [a2]
117595: ab ac ee                 jump @9100 if a5 != a3
      :                          @9104
117598: 7b 9b                    u64 [a2] = a4
117600: 33 06                    s1 = 0
117602: 01                       fallthrough
      :                          @9105
117603: ab ac e6                 jump @9100 if a5 != a3
      :                          @9106
117606: 28 85 16 01              jump @12862
      :                          @9107 [@dyn 697]
117610: 3a 07 70 02 03           a0 = u64 [0x30270]
117615: 3a 08 58 01 03           a1 = u64 [0x30158]
117620: 7b 18 60                 u64 [sp + 0x60] = a1
117623: 97 78 0d                 a1 = a0 << 0xd
117626: d3 87 07                 a0 = a0 ^ a1
117629: 98 78 07                 a1 = a0 >> 0x7
117632: d3 87 07                 a0 = a0 ^ a1
117635: 97 78 11                 a1 = a0 << 0x11
117638: d3 78 08                 a1 = a1 ^ a0
117641: 97 79 02                 a2 = a0 << 0x2
117644: c8 97 07                 a0 = a0 + a2
117647: 3e 08 70 02 03           u64 [0x30270] = a1
117652: 84 77 07                 a0 = a0 & 0x7
117655: 95 76 03                 s1 = a0 + 0x3
117658: 64 67                    a0 = s1
117660: 50 20 74 05 5c 86 fe     ra = 1396, jump @1554
      :                          @9108 [@dyn 698]
117667: 7b 17 10 01              u64 [sp + 0x110] = a0
117671: 3a 03 68 01 03           t1 = u64 [0x30168]
117676: 7b 18 18 01              u64 [sp + 0x118] = a1
117680: 49 21 20 01              u64 [sp + 288] = 0
117684: 33 02 32                 t0 = 0x32
117687: 7b 13 40                 u64 [sp + 0x40] = t1
117690: 28 49                    jump @9111
      :                          @9109
117692: 82 1a 60                 a3 = u64 [sp + 0x60]
117695: ca ab 07                 a0 = a4 * a3
117698: 98 79 01                 a2 = a0 >> 0x1
117701: d6 39 09                 a2 = a2 mulhu t1
117704: 98 99 04                 a2 = a2 >> 0x4
117707: ca 29 09                 a2 = a2 * t0
117710: c9 97 07                 a0 = a0 - a2
117713: ca ac 09                 a2 = a5 * a3
117716: 98 9a 01                 a3 = a2 >> 0x1
117719: d6 3a 0a                 a3 = a3 mulhu t1
117722: 98 aa 04                 a3 = a3 >> 0x4
117725: 82 1b 18 01              a4 = u64 [sp + 0x118]
117729: ca 2a 0a                 a3 = a3 * t0
117732: c9 a9 09                 a2 = a2 - a3
117735: 97 8a 04                 a3 = a1 << 0x4
117738: c8 ba 0a                 a3 = a3 + a4
117741: 7b a7                    u64 [a3] = a0
117743: 7b a9 08                 u64 [a3 + 0x8] = a2
117746: 95 89 01                 a2 = a1 + 0x1
117749: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
117752: 7b 19 20 01              u64 [sp + 0x120] = a2
117756: 52 06 07                 jump @9111 if s1 != 0
      :                          @9110
117759: 28 aa fe 00              jump @12396
      :                          @9111
117763: 3a 07 70 02 03           a0 = u64 [0x30270]
117768: 97 78 0d                 a1 = a0 << 0xd
117771: d3 87 07                 a0 = a0 ^ a1
117774: 98 78 07                 a1 = a0 >> 0x7
117777: d3 87 07                 a0 = a0 ^ a1
117780: 97 78 11                 a1 = a0 << 0x11
117783: d3 78 0b                 a4 = a1 ^ a0
117786: 3e 0b 70 02 03           u64 [0x30270] = a4
117791: 3a 07 70 02 03           a0 = u64 [0x30270]
117796: 97 78 0d                 a1 = a0 << 0xd
117799: d3 87 07                 a0 = a0 ^ a1
117802: 98 78 07                 a1 = a0 >> 0x7
117805: d3 87 07                 a0 = a0 ^ a1
117808: 97 78 11                 a1 = a0 << 0x11
117811: d3 78 0c                 a5 = a1 ^ a0
117814: 3e 0c 70 02 03           u64 [0x30270] = a5
117819: 82 18 20 01              a1 = u64 [sp + 0x120]
117823: 82 17 10 01              a0 = u64 [sp + 0x110]
117827: ab 78 79 ff              jump @9109 if a1 != a0
      :                          @9112
117831: 95 17 10 01              a0 = sp + 0x110
117835: 7b 1b 58                 u64 [sp + 0x58] = a4
117838: 7b 1c 50                 u64 [sp + 0x50] = a5
117841: 50 20 76 05 b7 87 fe     ra = 1398, jump @1605
      :                          @9113 [@dyn 699]
117848: 82 1c 50                 a5 = u64 [sp + 0x50]
117851: 82 1b 58                 a4 = u64 [sp + 0x58]
117854: 33 02 32                 t0 = 0x32
117857: 82 13 40                 t1 = u64 [sp + 0x40]
117860: 82 18 20 01              a1 = u64 [sp + 0x120]
117864: 28 54 ff                 jump @9109
      :                          @9114 [@dyn 700]
117867: 3a 08 70 02 03           a1 = u64 [0x30270]
117872: 97 89 0d                 a2 = a1 << 0xd
117875: d3 89 09                 a2 = a2 ^ a1
117878: 98 9a 07                 a3 = a2 >> 0x7
117881: 3a 08 58 01 03           a1 = u64 [0x30158]
117886: d3 a9 09                 a2 = a2 ^ a3
117889: 97 9a 11                 a3 = a2 << 0x11
117892: d3 9a 0a                 a3 = a3 ^ a2
117895: ca 8a 0b                 a4 = a3 * a1
117898: 3a 09 68 01 03           a2 = u64 [0x30168]
117903: 3e 0a 70 02 03           u64 [0x30270] = a3
117908: 98 ba 01                 a3 = a4 >> 0x1
117911: d6 9a 0a                 a3 = a3 mulhu a2
117914: 98 ac 04                 a5 = a3 >> 0x4
117917: 3a 06 70 02 03           s1 = u64 [0x30270]
117922: 96 cc 32                 a5 = a5 * 0x32
117925: c9 cb 0b                 a4 = a4 - a5
117928: 97 6c 0d                 a5 = s1 << 0xd
117931: d3 c6 06                 s1 = s1 ^ a5
117934: 98 6c 07                 a5 = s1 >> 0x7
117937: d3 c6 06                 s1 = s1 ^ a5
117940: 97 6c 11                 a5 = s1 << 0x11
117943: d3 6c 0c                 a5 = a5 ^ s1
117946: ca 8c 06                 s1 = a5 * a1
117949: 3e 0c 70 02 03           u64 [0x30270] = a5
117954: 98 6c 01                 a5 = s1 >> 0x1
117957: d6 9c 0c                 a5 = a5 mulhu a2
117960: 98 cc 04                 a5 = a5 >> 0x4
117963: 96 cc 32                 a5 = a5 * 0x32
117966: c9 c6 06                 s1 = s1 - a5
117969: 7b 1b a0 01              u64 [sp + 0x1a0] = a4
117973: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
117977: 3a 0b 70 02 03           a4 = u64 [0x30270]
117982: 97 bc 0d                 a5 = a4 << 0xd
117985: d3 cb 0b                 a4 = a4 ^ a5
117988: 98 bc 07                 a5 = a4 >> 0x7
117991: d3 cb 0b                 a4 = a4 ^ a5
117994: 97 bc 11                 a5 = a4 << 0x11
117997: d3 cb 0b                 a4 = a4 ^ a5
118000: ca 8b 0c                 a5 = a4 * a1
118003: 3e 0b 70 02 03           u64 [0x30270] = a4
118008: 98 cb 01                 a4 = a5 >> 0x1
118011: d6 9b 0b                 a4 = a4 mulhu a2
118014: 98 bb 04                 a4 = a4 >> 0x4
118017: 3a 06 70 02 03           s1 = u64 [0x30270]
118022: 96 bb 32                 a4 = a4 * 0x32
118025: c9 bc 0c                 a5 = a5 - a4
118028: 97 6b 0d                 a4 = s1 << 0xd
118031: d3 b6 06                 s1 = s1 ^ a4
118034: 98 6b 07                 a4 = s1 >> 0x7
118037: d3 b6 06                 s1 = s1 ^ a4
118040: 97 6b 11                 a4 = s1 << 0x11
118043: d3 6b 0b                 a4 = a4 ^ s1
118046: ca 8b 06                 s1 = a4 * a1
118049: 3e 0b 70 02 03           u64 [0x30270] = a4
118054: 98 6b 01                 a4 = s1 >> 0x1
118057: d6 9b 0b                 a4 = a4 mulhu a2
118060: 98 bb 04                 a4 = a4 >> 0x4
118063: 96 bb 32                 a4 = a4 * 0x32
118066: c9 b6 06                 s1 = s1 - a4
118069: 7b 1c b8 01              u64 [sp + 0x1b8] = a5
118073: 7b 16 c0 01              u64 [sp + 0x1c0] = s1
118077: 3a 0b 70 02 03           a4 = u64 [0x30270]
118082: 97 bc 0d                 a5 = a4 << 0xd
118085: d3 cb 0b                 a4 = a4 ^ a5
118088: 98 bc 07                 a5 = a4 >> 0x7
118091: d3 cb 0b                 a4 = a4 ^ a5
118094: 97 bc 11                 a5 = a4 << 0x11
118097: d3 cb 0b                 a4 = a4 ^ a5
118100: ca 8b 0c                 a5 = a4 * a1
118103: 3e 0b 70 02 03           u64 [0x30270] = a4
118108: 98 cb 01                 a4 = a5 >> 0x1
118111: d6 9b 0b                 a4 = a4 mulhu a2
118114: 98 bb 04                 a4 = a4 >> 0x4
118117: 3a 06 70 02 03           s1 = u64 [0x30270]
118122: 96 bb 32                 a4 = a4 * 0x32
118125: c9 bc 0c                 a5 = a5 - a4
118128: 97 6b 0d                 a4 = s1 << 0xd
118131: d3 b6 06                 s1 = s1 ^ a4
118134: 98 6b 07                 a4 = s1 >> 0x7
118137: d3 b6 06                 s1 = s1 ^ a4
118140: 97 6b 11                 a4 = s1 << 0x11
118143: d3 6b 0b                 a4 = a4 ^ s1
118146: ca 8b 06                 s1 = a4 * a1
118149: 3e 0b 70 02 03           u64 [0x30270] = a4
118154: 98 6b 01                 a4 = s1 >> 0x1
118157: d6 9b 0b                 a4 = a4 mulhu a2
118160: 98 bb 04                 a4 = a4 >> 0x4
118163: 96 bb 32                 a4 = a4 * 0x32
118166: c9 b6 06                 s1 = s1 - a4
118169: 7b 1c 10 01              u64 [sp + 0x110] = a5
118173: 7b 16 18 01              u64 [sp + 0x118] = s1
118177: 3a 0b 70 02 03           a4 = u64 [0x30270]
118182: 97 bc 0d                 a5 = a4 << 0xd
118185: d3 cb 0b                 a4 = a4 ^ a5
118188: 98 bc 07                 a5 = a4 >> 0x7
118191: d3 cb 0b                 a4 = a4 ^ a5
118194: 97 bc 11                 a5 = a4 << 0x11
118197: d3 cb 0b                 a4 = a4 ^ a5
118200: ca 8b 0c                 a5 = a4 * a1
118203: 3e 0b 70 02 03           u64 [0x30270] = a4
118208: 98 cb 01                 a4 = a5 >> 0x1
118211: d6 9b 0b                 a4 = a4 mulhu a2
118214: 98 bb 04                 a4 = a4 >> 0x4
118217: 3a 06 70 02 03           s1 = u64 [0x30270]
118222: 96 bb 32                 a4 = a4 * 0x32
118225: c9 bc 04                 t2 = a5 - a4
118228: 97 6b 0d                 a4 = s1 << 0xd
118231: d3 6b 0b                 a4 = a4 ^ s1
118234: 98 bc 07                 a5 = a4 >> 0x7
118237: d3 cb 0b                 a4 = a4 ^ a5
118240: 97 bc 11                 a5 = a4 << 0x11
118243: d3 cb 0b                 a4 = a4 ^ a5
118246: ca 8b 06                 s1 = a4 * a1
118249: 3e 0b 70 02 03           u64 [0x30270] = a4
118254: 98 67 01                 a0 = s1 >> 0x1
118257: d6 97 07                 a0 = a0 mulhu a2
118260: 98 77 04                 a0 = a0 >> 0x4
118263: 96 72 32                 t0 = a0 * 0x32
118266: 82 17 a0 01              a0 = u64 [sp + 0x1a0]
118270: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
118274: 82 19 b8 01              a2 = u64 [sp + 0x1b8]
118278: 82 1a c0 01              a3 = u64 [sp + 0x1c0]
118282: 82 1b 10 01              a4 = u64 [sp + 0x110]
118286: 82 1c 18 01              a5 = u64 [sp + 0x118]
118290: c9 26 06                 s1 = s1 - t0
118293: 7b 14 d0 01              u64 [sp + 0x1d0] = t2
118297: 7b 16 d8 01              u64 [sp + 0x1d8] = s1
118301: 7b 16                    u64 [sp] = s1
118303: 50 20 7a 05 66 3d ff     ra = 1402, jump @5371
      :                          @9115 [@dyn 701]
118310: 78 17 00 01              u8 [sp + 0x100] = a0
118314: 95 17 a0 01              a0 = sp + 0x1a0
118318: 7b 17 80 02              u64 [sp + 0x280] = a0
118322: 33 07 8e 01              a0 = 0x18e
118326: 7b 17 88 02              u64 [sp + 0x288] = a0
118330: 95 18 b8 01              a1 = sp + 0x1b8
118334: 7b 18 90 02              u64 [sp + 0x290] = a1
118338: 7b 17 98 02              u64 [sp + 0x298] = a0
118342: 95 18 10 01              a1 = sp + 0x110
118346: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
118350: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
118354: 95 18 d0 01              a1 = sp + 0x1d0
118358: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
118362: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
118366: 95 17 00 01              a0 = sp + 0x100
118370: 7b 17 c0 02              u64 [sp + 0x2c0] = a0
118374: 33 07 80 0c              a0 = 0xc80
118378: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
118382: 33 07 60 0b 01           a0 = 0x10b60
118387: 7b 17 28 02              u64 [sp + 0x228] = a0
118391: 49 21 30 02 05           u64 [sp + 560] = 0x5
118396: 49 21 48 02              u64 [sp + 584] = 0
118400: 95 18 80 02              a1 = sp + 0x280
118404: 7b 18 38 02              u64 [sp + 0x238] = a1
118408: 49 21 40 02 05           u64 [sp + 576] = 0x5
118413: 95 17 f8 01              a0 = sp + 0x1f8
118417: 95 18 28 02              a1 = sp + 0x228
118421: 50 20 7c 05 b2 80 fe     ra = 1404, jump @1491
      :                          @9116 [@dyn 702]
118428: 82 16 00 02              s1 = u64 [sp + 0x200]
118432: 82 1b 08 02              a4 = u64 [sp + 0x208]
118436: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
118440: 7b 17 60                 u64 [sp + 0x60] = a0
118443: 33 07 02                 a0 = 0x2
118446: 33 08                    a1 = 0
118448: 33 09                    a2 = 0
118450: 64 6a                    a3 = s1
118452: 33 00 7e 05              ra = 0x57e
118456: 0a 64                    ecalli 100 // 'log'
118458: 01                       fallthrough
      :                          @9117 [@dyn 703]
118459: 82 1c 60                 a5 = u64 [sp + 0x60]
118462: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
118467: 55 38 00 00 f0 0a        jump @9119 if a1 >=u 4293918720
      :                          @9118
118473: 28 22 13 01              jump @12862
      :                          @9119
118477: 33 07 b0 02 03           a0 = 0x302b0
118482: 95 77 00 00 10           a0 = a0 + 0x100000
118487: 01                       fallthrough
      :                          @9120
118488: 82 78                    a1 = u64 [a0]
118490: c9 87 09                 a2 = a0 - a1
118493: aa 69 07                 jump @9122 if a2 == s1
      :                          @9121
118496: 28 0b 13 01              jump @12862
      :                          @9122
118500: c9 c8 09                 a2 = a1 - a5
118503: 01                       fallthrough
      :                          @9123
118504: 82 7a                    a3 = u64 [a0]
118506: ab 8a ee                 jump @9120 if a3 != a1
      :                          @9124
118509: 7b 79                    u64 [a0] = a2
118511: 33 0b                    a4 = 0
118513: 01                       fallthrough
      :                          @9125
118514: ab 8a e6                 jump @9120 if a3 != a1
      :                          @9126
118517: 28 f6 12 01              jump @12862
      :                          @9127 [@dyn 704]
118521: 3a 07 58 01 03           a0 = u64 [0x30158]
118526: 7b 17 60                 u64 [sp + 0x60] = a0
118529: 95 17 80 02              a0 = sp + 0x280
118533: 33 00 82 05              ra = 0x582
118537: 95 11 e8                 sp = sp + 0xffffffffffffffe8
118540: 7b 10 10                 u64 [sp + 0x10] = ra
118543: 7b 15 08                 u64 [sp + 0x8] = s0
118546: 7b 16                    u64 [sp] = s1
118548: 64 75                    s0 = a0
118550: 33 09 b0 02 03           a2 = 0x302b0
118555: 33 07 00 00 10           a0 = 0x100000
118560: c8 79 09                 a2 = a2 + a0
118563: 28 53 97 fe              jump @1929
      :                          @9128 [@dyn 705]
118567: 95 17 d0 01              a0 = sp + 0x1d0
118571: 95 18 80 02              a1 = sp + 0x280
118575: 33 00 84 05              ra = 0x584
118579: 95 11 b8                 sp = sp + 0xffffffffffffffb8
118582: 7b 10 40                 u64 [sp + 0x40] = ra
118585: 7b 15 38                 u64 [sp + 0x38] = s0
118588: 7b 16 30                 u64 [sp + 0x30] = s1
118591: 7b 18 18                 u64 [sp + 0x18] = a1
118594: 7b 17 10                 u64 [sp + 0x10] = a0
118597: 33 07 b0 02 03           a0 = 0x302b0
118602: 33 02 00 00 10           t0 = 0x100000
118607: c8 27 09                 a2 = a0 + t0
118610: 28 89 90 fe              jump @1819
      :                          @9129 [@dyn 706]
118614: 33 07                    a0 = 0
118616: 33 04 10                 t2 = 0x10
118619: 33 0a 70 02 03           a3 = 0x30270
118624: 14 0b ab aa aa aa aa aa aa aa a4 = 0xaaaaaaaaaaaaaaab
118634: 33 00 0a                 ra = 0xa
118637: 33 03 00 01              t1 = 0x100
118641: 01                       fallthrough
      :                          @9130
118642: 3a 08 70 02 03           a1 = u64 [0x30270]
118647: 97 89 0d                 a2 = a1 << 0xd
118650: d3 98 08                 a1 = a1 ^ a2
118653: 98 89 07                 a2 = a1 >> 0x7
118656: d3 98 08                 a1 = a1 ^ a2
118659: 97 89 11                 a2 = a1 << 0x11
118662: d3 89 02                 t0 = a2 ^ a1
118665: 3e 02 70 02 03           u64 [0x30270] = t0
118670: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
118674: ac 87 07                 jump @9132 if a0 <u a1
      :                          @9131
118677: 28 b2 23 01              jump @13215
      :                          @9132
118681: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
118685: c8 48 08                 a1 = a1 + t2
118688: 82 89                    a2 = u64 [a1]
118690: 52 09 07                 jump @9134 if a2 != 0
      :                          @9133
118693: 28 a9 23 01              jump @13222
      :                          @9134
118697: 82 19 60                 a2 = u64 [sp + 0x60]
118700: ca 92 09                 a2 = t0 * a2
118703: d6 b9 0c                 a5 = a2 mulhu a4
118706: 98 c6 01                 s1 = a5 >> 0x1
118709: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
118712: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
118715: c8 6c 0c                 a5 = a5 + s1
118718: c9 c9 09                 a2 = a2 - a5
118721: 78 89                    u8 [a1] = a2
118723: 3a 08 70 02 03           a1 = u64 [0x30270]
118728: 97 89 0d                 a2 = a1 << 0xd
118731: d3 98 08                 a1 = a1 ^ a2
118734: 98 89 07                 a2 = a1 >> 0x7
118737: d3 98 08                 a1 = a1 ^ a2
118740: 97 8c 11                 a5 = a1 << 0x11
118743: d3 8c 0c                 a5 = a5 ^ a1
118746: 3e 0c 70 02 03           u64 [0x30270] = a5
118751: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
118755: ac 87 07                 jump @9136 if a0 <u a1
      :                          @9135
118758: 28 61 23 01              jump @13215
      :                          @9136
118762: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
118766: c8 49 09                 a2 = a2 + t2
118769: 82 98                    a1 = u64 [a2]
118771: 55 18 02 08              jump @9138 if a1 >=u 2
      :                          @9137
118775: 28 88 22 01              jump @13195
      :                          @9138
118779: 82 18 60                 a1 = u64 [sp + 0x60]
118782: ca 8c 08                 a1 = a5 * a1
118785: d6 b8 0c                 a5 = a1 mulhu a4
118788: 98 c6 01                 s1 = a5 >> 0x1
118791: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
118794: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
118797: c8 6c 0c                 a5 = a5 + s1
118800: c9 c8 08                 a1 = a1 - a5
118803: 78 98 01                 u8 [a2 + 0x1] = a1
118806: 3a 08 70 02 03           a1 = u64 [0x30270]
118811: 97 89 0d                 a2 = a1 << 0xd
118814: d3 98 08                 a1 = a1 ^ a2
118817: 98 89 07                 a2 = a1 >> 0x7
118820: d3 98 08                 a1 = a1 ^ a2
118823: 97 8c 11                 a5 = a1 << 0x11
118826: d3 8c 0c                 a5 = a5 ^ a1
118829: 3e 0c 70 02 03           u64 [0x30270] = a5
118834: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
118838: ac 87 07                 jump @9140 if a0 <u a1
      :                          @9139
118841: 28 0e 23 01              jump @13215
      :                          @9140
118845: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
118849: c8 49 09                 a2 = a2 + t2
118852: 82 98                    a1 = u64 [a2]
118854: 55 18 03 08              jump @9142 if a1 >=u 3
      :                          @9141
118858: 28 37 22 01              jump @13197
      :                          @9142
118862: 82 18 60                 a1 = u64 [sp + 0x60]
118865: ca 8c 08                 a1 = a5 * a1
118868: d6 b8 0c                 a5 = a1 mulhu a4
118871: 98 c6 01                 s1 = a5 >> 0x1
118874: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
118877: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
118880: c8 6c 0c                 a5 = a5 + s1
118883: c9 c8 08                 a1 = a1 - a5
118886: 78 98 02                 u8 [a2 + 0x2] = a1
118889: 3a 08 70 02 03           a1 = u64 [0x30270]
118894: 97 89 0d                 a2 = a1 << 0xd
118897: d3 98 08                 a1 = a1 ^ a2
118900: 98 89 07                 a2 = a1 >> 0x7
118903: d3 98 08                 a1 = a1 ^ a2
118906: 97 8c 11                 a5 = a1 << 0x11
118909: d3 8c 0c                 a5 = a5 ^ a1
118912: 3e 0c 70 02 03           u64 [0x30270] = a5
118917: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
118921: ac 87 07                 jump @9144 if a0 <u a1
      :                          @9143
118924: 28 bb 22 01              jump @13215
      :                          @9144
118928: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
118932: c8 49 09                 a2 = a2 + t2
118935: 82 98                    a1 = u64 [a2]
118937: 55 18 04 08              jump @9146 if a1 >=u 4
      :                          @9145
118941: 28 e3 21 01              jump @13196
      :                          @9146
118945: 82 18 60                 a1 = u64 [sp + 0x60]
118948: ca 8c 08                 a1 = a5 * a1
118951: d6 b8 0c                 a5 = a1 mulhu a4
118954: 98 c6 01                 s1 = a5 >> 0x1
118957: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
118960: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
118963: c8 6c 0c                 a5 = a5 + s1
118966: c9 c8 08                 a1 = a1 - a5
118969: 78 98 03                 u8 [a2 + 0x3] = a1
118972: 3a 08 70 02 03           a1 = u64 [0x30270]
118977: 97 89 0d                 a2 = a1 << 0xd
118980: d3 98 08                 a1 = a1 ^ a2
118983: 98 89 07                 a2 = a1 >> 0x7
118986: d3 98 08                 a1 = a1 ^ a2
118989: 97 8c 11                 a5 = a1 << 0x11
118992: d3 8c 0c                 a5 = a5 ^ a1
118995: 3e 0c 70 02 03           u64 [0x30270] = a5
119000: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
119004: ac 87 07                 jump @9148 if a0 <u a1
      :                          @9147
119007: 28 68 22 01              jump @13215
      :                          @9148
119011: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
119015: c8 49 09                 a2 = a2 + t2
119018: 82 98                    a1 = u64 [a2]
119020: 55 18 05 08              jump @9150 if a1 >=u 5
      :                          @9149
119024: 28 59 22 01              jump @13217
      :                          @9150
119028: 82 18 60                 a1 = u64 [sp + 0x60]
119031: ca 8c 08                 a1 = a5 * a1
119034: d6 b8 0c                 a5 = a1 mulhu a4
119037: 98 c6 01                 s1 = a5 >> 0x1
119040: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119043: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119046: c8 6c 0c                 a5 = a5 + s1
119049: c9 c8 08                 a1 = a1 - a5
119052: 78 98 04                 u8 [a2 + 0x4] = a1
119055: 3a 08 70 02 03           a1 = u64 [0x30270]
119060: 97 89 0d                 a2 = a1 << 0xd
119063: d3 98 08                 a1 = a1 ^ a2
119066: 98 89 07                 a2 = a1 >> 0x7
119069: d3 98 08                 a1 = a1 ^ a2
119072: 97 8c 11                 a5 = a1 << 0x11
119075: d3 8c 0c                 a5 = a5 ^ a1
119078: 3e 0c 70 02 03           u64 [0x30270] = a5
119083: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
119087: ac 87 07                 jump @9152 if a0 <u a1
      :                          @9151
119090: 28 15 22 01              jump @13215
      :                          @9152
119094: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
119098: c8 49 09                 a2 = a2 + t2
119101: 82 98                    a1 = u64 [a2]
119103: 55 18 06 08              jump @9154 if a1 >=u 6
      :                          @9153
119107: 28 0a 22 01              jump @13221
      :                          @9154
119111: 82 18 60                 a1 = u64 [sp + 0x60]
119114: ca 8c 08                 a1 = a5 * a1
119117: d6 b8 0c                 a5 = a1 mulhu a4
119120: 98 c6 01                 s1 = a5 >> 0x1
119123: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119126: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119129: c8 6c 0c                 a5 = a5 + s1
119132: c9 c8 08                 a1 = a1 - a5
119135: 78 98 05                 u8 [a2 + 0x5] = a1
119138: 3a 08 70 02 03           a1 = u64 [0x30270]
119143: 97 89 0d                 a2 = a1 << 0xd
119146: d3 98 08                 a1 = a1 ^ a2
119149: 98 89 07                 a2 = a1 >> 0x7
119152: d3 98 08                 a1 = a1 ^ a2
119155: 97 8c 11                 a5 = a1 << 0x11
119158: d3 8c 0c                 a5 = a5 ^ a1
119161: 3e 0c 70 02 03           u64 [0x30270] = a5
119166: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
119170: ac 87 07                 jump @9156 if a0 <u a1
      :                          @9155
119173: 28 c2 21 01              jump @13215
      :                          @9156
119177: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
119181: c8 49 09                 a2 = a2 + t2
119184: 82 98                    a1 = u64 [a2]
119186: 55 18 07 08              jump @9158 if a1 >=u 7
      :                          @9157
119190: 28 bd 21 01              jump @13227
      :                          @9158
119194: 82 18 60                 a1 = u64 [sp + 0x60]
119197: ca 8c 08                 a1 = a5 * a1
119200: d6 b8 0c                 a5 = a1 mulhu a4
119203: 98 c6 01                 s1 = a5 >> 0x1
119206: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119209: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119212: c8 6c 0c                 a5 = a5 + s1
119215: c9 c8 08                 a1 = a1 - a5
119218: 78 98 06                 u8 [a2 + 0x6] = a1
119221: 3a 08 70 02 03           a1 = u64 [0x30270]
119226: 97 89 0d                 a2 = a1 << 0xd
119229: d3 98 08                 a1 = a1 ^ a2
119232: 98 89 07                 a2 = a1 >> 0x7
119235: d3 98 08                 a1 = a1 ^ a2
119238: 97 8c 11                 a5 = a1 << 0x11
119241: d3 8c 0c                 a5 = a5 ^ a1
119244: 3e 0c 70 02 03           u64 [0x30270] = a5
119249: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
119253: ac 87 07                 jump @9160 if a0 <u a1
      :                          @9159
119256: 28 6f 21 01              jump @13215
      :                          @9160
119260: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
119264: c8 49 09                 a2 = a2 + t2
119267: 82 98                    a1 = u64 [a2]
119269: 55 18 08 08              jump @9162 if a1 >=u 8
      :                          @9161
119273: 28 6b 21 01              jump @13228
      :                          @9162
119277: 82 18 60                 a1 = u64 [sp + 0x60]
119280: ca 8c 08                 a1 = a5 * a1
119283: d6 b8 0c                 a5 = a1 mulhu a4
119286: 98 c6 01                 s1 = a5 >> 0x1
119289: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119292: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119295: c8 6c 0c                 a5 = a5 + s1
119298: c9 c8 08                 a1 = a1 - a5
119301: 78 98 07                 u8 [a2 + 0x7] = a1
119304: 3a 08 70 02 03           a1 = u64 [0x30270]
119309: 97 89 0d                 a2 = a1 << 0xd
119312: d3 98 08                 a1 = a1 ^ a2
119315: 98 89 07                 a2 = a1 >> 0x7
119318: d3 98 08                 a1 = a1 ^ a2
119321: 97 8c 11                 a5 = a1 << 0x11
119324: d3 8c 0c                 a5 = a5 ^ a1
119327: 3e 0c 70 02 03           u64 [0x30270] = a5
119332: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
119336: ac 87 07                 jump @9164 if a0 <u a1
      :                          @9163
119339: 28 1c 21 01              jump @13215
      :                          @9164
119343: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
119347: c8 49 09                 a2 = a2 + t2
119350: 82 98                    a1 = u64 [a2]
119352: 55 18 09 08              jump @9166 if a1 >=u 9
      :                          @9165
119356: 28 19 21 01              jump @13229
      :                          @9166
119360: 82 18 60                 a1 = u64 [sp + 0x60]
119363: ca 8c 08                 a1 = a5 * a1
119366: d6 b8 0c                 a5 = a1 mulhu a4
119369: 98 c6 01                 s1 = a5 >> 0x1
119372: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119375: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119378: c8 6c 0c                 a5 = a5 + s1
119381: c9 c8 08                 a1 = a1 - a5
119384: 78 98 08                 u8 [a2 + 0x8] = a1
119387: 3a 08 70 02 03           a1 = u64 [0x30270]
119392: 97 89 0d                 a2 = a1 << 0xd
119395: d3 98 08                 a1 = a1 ^ a2
119398: 98 89 07                 a2 = a1 >> 0x7
119401: d3 98 08                 a1 = a1 ^ a2
119404: 97 8c 11                 a5 = a1 << 0x11
119407: d3 8c 0c                 a5 = a5 ^ a1
119410: 3e 0c 70 02 03           u64 [0x30270] = a5
119415: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
119419: ac 87 07                 jump @9168 if a0 <u a1
      :                          @9167
119422: 28 c9 20 01              jump @13215
      :                          @9168
119426: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
119430: c8 49 09                 a2 = a2 + t2
119433: 82 98                    a1 = u64 [a2]
119435: ae 08 07                 jump @9170 if a1 >=u ra
      :                          @9169
119438: 28 c8 20 01              jump @13230
      :                          @9170
119442: 82 18 60                 a1 = u64 [sp + 0x60]
119445: ca 8c 08                 a1 = a5 * a1
119448: d6 b8 0c                 a5 = a1 mulhu a4
119451: 98 c6 01                 s1 = a5 >> 0x1
119454: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119457: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119460: c8 6c 0c                 a5 = a5 + s1
119463: c9 c8 08                 a1 = a1 - a5
119466: 78 98 09                 u8 [a2 + 0x9] = a1
119469: 95 44 18                 t2 = t2 + 0x18
119472: 95 77 01                 a0 = a0 + 0x1
119475: ab 34 bf fc              jump @9130 if t2 != t1
      :                          @9171
119479: 3a 08 70 02 03           a1 = u64 [0x30270]
119484: 97 89 0d                 a2 = a1 << 0xd
119487: d3 98 08                 a1 = a1 ^ a2
119490: 98 89 07                 a2 = a1 >> 0x7
119493: d3 98 08                 a1 = a1 ^ a2
119496: 97 89 11                 a2 = a1 << 0x11
119499: d3 98 08                 a1 = a1 ^ a2
119502: 82 1c 60                 a5 = u64 [sp + 0x60]
119505: ca c8 09                 a2 = a1 * a5
119508: 3e 08 70 02 03           u64 [0x30270] = a1
119513: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
119523: d6 89 0a                 a3 = a2 mulhu a1
119526: 98 aa 03                 a3 = a3 >> 0x3
119529: 96 aa 0a                 a3 = a3 * 0xa
119532: c9 a9 09                 a2 = a2 - a3
119535: 7b 19 a0 01              u64 [sp + 0x1a0] = a2
119539: 3a 09 70 02 03           a2 = u64 [0x30270]
119544: 97 9a 0d                 a3 = a2 << 0xd
119547: d3 a9 09                 a2 = a2 ^ a3
119550: 98 9a 07                 a3 = a2 >> 0x7
119553: d3 a9 09                 a2 = a2 ^ a3
119556: 97 9a 11                 a3 = a2 << 0x11
119559: d3 a9 09                 a2 = a2 ^ a3
119562: ca c9 0a                 a3 = a2 * a5
119565: 3e 09 70 02 03           u64 [0x30270] = a2
119570: d6 8a 08                 a1 = a3 mulhu a1
119573: 98 88 03                 a1 = a1 >> 0x3
119576: 96 88 0a                 a1 = a1 * 0xa
119579: c9 8a 0a                 a3 = a3 - a1
119582: 7b 1a b8 01              u64 [sp + 0x1b8] = a3
119586: 3a 08 70 02 03           a1 = u64 [0x30270]
119591: 97 89 0d                 a2 = a1 << 0xd
119594: d3 98 08                 a1 = a1 ^ a2
119597: 98 89 07                 a2 = a1 >> 0x7
119600: d3 98 08                 a1 = a1 ^ a2
119603: 97 89 11                 a2 = a1 << 0x11
119606: d3 98 08                 a1 = a1 ^ a2
119609: ca c8 0b                 a4 = a1 * a5
119612: 3e 08 70 02 03           u64 [0x30270] = a1
119617: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
119627: d6 7b 07                 a0 = a4 mulhu a0
119630: 98 7c 01                 a5 = a0 >> 0x1
119633: 84 77 fe                 a0 = a0 & 0xfffffffffffffffe
119636: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
119640: 82 1a b8 01              a3 = u64 [sp + 0x1b8]
119644: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
119648: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
119652: 7b 18 58                 u64 [sp + 0x58] = a1
119655: c8 c7 07                 a0 = a0 + a5
119658: c9 7b 0b                 a4 = a4 - a0
119661: 95 bb 03                 a4 = a4 + 0x3
119664: 7b 1b 60                 u64 [sp + 0x60] = a4
119667: 64 67                    a0 = s1
119669: 50 20 86 05 ab 39 ff     ra = 1414, jump @5387
      :                          @9172 [@dyn 707]
119676: 82 18 58                 a1 = u64 [sp + 0x58]
119679: 96 87 18                 a0 = a1 * 0x18
119682: c8 67 07                 a0 = a0 + s1
119685: 7b 16 70                 u64 [sp + 0x70] = s1
119688: 7b 17 78                 u64 [sp + 0x78] = a0
119691: 49 21 80 00              u64 [sp + 128] = 0
119695: 49 21 90 00              u64 [sp + 144] = 0
119699: 95 17 70                 a0 = sp + 0x70
119702: 82 18 60                 a1 = u64 [sp + 0x60]
119705: 50 20 88 05 1b 2d fe     ra = 1416, jump @23
      :                          @9173 [@dyn 708]
119712: 7b 17 10 01              u64 [sp + 0x110] = a0
119716: 95 17 10 01              a0 = sp + 0x110
119720: 7b 17 80 02              u64 [sp + 0x280] = a0
119724: 33 07 28 0c              a0 = 0xc28
119728: 7b 17 88 02              u64 [sp + 0x288] = a0
119732: 95 18 a0 01              a1 = sp + 0x1a0
119736: 7b 18 90 02              u64 [sp + 0x290] = a1
119740: 7b 17 98 02              u64 [sp + 0x298] = a0
119744: 95 18 b8 01              a1 = sp + 0x1b8
119748: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
119752: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
119756: 33 07 c8 0b 01           a0 = 0x10bc8
119761: 7b 17 28 02              u64 [sp + 0x228] = a0
119765: 49 21 30 02 04           u64 [sp + 560] = 0x4
119770: 49 21 48 02              u64 [sp + 584] = 0
119774: 95 17 80 02              a0 = sp + 0x280
119778: 7b 17 38 02              u64 [sp + 0x238] = a0
119782: 49 21 40 02 03           u64 [sp + 576] = 0x3
119787: 95 17 f8 01              a0 = sp + 0x1f8
119791: 95 18 28 02              a1 = sp + 0x228
119795: 50 20 8a 05 54 7b fe     ra = 1418, jump @1491
      :                          @9174 [@dyn 709]
119802: 82 16 00 02              s1 = u64 [sp + 0x200]
119806: 82 1b 08 02              a4 = u64 [sp + 0x208]
119810: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
119814: 7b 17 60                 u64 [sp + 0x60] = a0
119817: 33 07 02                 a0 = 0x2
119820: 33 08                    a1 = 0
119822: 33 09                    a2 = 0
119824: 64 6a                    a3 = s1
119826: 33 00 8c 05              ra = 0x58c
119830: 0a 64                    ecalli 100 // 'log'
119832: 01                       fallthrough
      :                          @9175 [@dyn 710]
119833: 82 1c 60                 a5 = u64 [sp + 0x60]
119836: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
119841: 55 38 00 00 f0 09        jump @9177 if a1 >=u 4293918720
      :                          @9176
119847: 28 26 59                 jump @10535
      :                          @9177
119850: 33 07 b0 02 03           a0 = 0x302b0
119855: 95 77 00 00 10           a0 = a0 + 0x100000
119860: 01                       fallthrough
      :                          @9178
119861: 82 78                    a1 = u64 [a0]
119863: c9 87 09                 a2 = a0 - a1
119866: aa 69 06                 jump @9180 if a2 == s1
      :                          @9179
119869: 28 10 59                 jump @10535
      :                          @9180
119872: c9 c8 09                 a2 = a1 - a5
119875: 01                       fallthrough
      :                          @9181
119876: 82 7a                    a3 = u64 [a0]
119878: ab 8a ef                 jump @9178 if a3 != a1
      :                          @9182
119881: 7b 79                    u64 [a0] = a2
119883: 33 0b                    a4 = 0
119885: 01                       fallthrough
      :                          @9183
119886: ab 8a e7                 jump @9178 if a3 != a1
      :                          @9184
119889: 28 fc 58                 jump @10535
      :                          @9185 [@dyn 711]
119892: 3a 08 70 02 03           a1 = u64 [0x30270]
119897: 97 89 0d                 a2 = a1 << 0xd
119900: d3 89 09                 a2 = a2 ^ a1
119903: 98 9a 07                 a3 = a2 >> 0x7
119906: 3a 08 58 01 03           a1 = u64 [0x30158]
119911: d3 a9 09                 a2 = a2 ^ a3
119914: 97 9a 11                 a3 = a2 << 0x11
119917: d3 a9 09                 a2 = a2 ^ a3
119920: ca 89 0a                 a3 = a2 * a1
119923: 3e 09 70 02 03           u64 [0x30270] = a2
119928: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
119938: d6 9a 0b                 a4 = a3 mulhu a2
119941: 98 bb 03                 a4 = a4 >> 0x3
119944: 3a 06 70 02 03           s1 = u64 [0x30270]
119949: 96 bb 0a                 a4 = a4 * 0xa
119952: c9 ba 0a                 a3 = a3 - a4
119955: 7b 1a 60                 u64 [sp + 0x60] = a3
119958: 97 6a 0d                 a3 = s1 << 0xd
119961: d3 6a 0a                 a3 = a3 ^ s1
119964: 98 ab 07                 a4 = a3 >> 0x7
119967: d3 ba 0a                 a3 = a3 ^ a4
119970: 97 ab 11                 a4 = a3 << 0x11
119973: d3 ba 0a                 a3 = a3 ^ a4
119976: ca 8a 0b                 a4 = a3 * a1
119979: 3e 0a 70 02 03           u64 [0x30270] = a3
119984: d6 9b 0a                 a3 = a4 mulhu a2
119987: 98 aa 03                 a3 = a3 >> 0x3
119990: 3a 0c 70 02 03           a5 = u64 [0x30270]
119995: 96 aa 0a                 a3 = a3 * 0xa
119998: c9 ab 0b                 a4 = a4 - a3
120001: 7b 1b 58                 u64 [sp + 0x58] = a4
120004: 97 ca 0d                 a3 = a5 << 0xd
120007: d3 ca 0a                 a3 = a3 ^ a5
120010: 98 ab 07                 a4 = a3 >> 0x7
120013: d3 ba 0a                 a3 = a3 ^ a4
120016: 97 ab 11                 a4 = a3 << 0x11
120019: d3 ba 0a                 a3 = a3 ^ a4
120022: ca 8a 0b                 a4 = a3 * a1
120025: 3e 0a 70 02 03           u64 [0x30270] = a3
120030: d6 9b 0a                 a3 = a4 mulhu a2
120033: 98 ac 02                 a5 = a3 >> 0x2
120036: 84 aa fc                 a3 = a3 & 0xfffffffffffffffc
120039: 3a 07 70 02 03           a0 = u64 [0x30270]
120044: c8 ca 0a                 a3 = a3 + a5
120047: c9 ab 0b                 a4 = a4 - a3
120050: 7b 1b 50                 u64 [sp + 0x50] = a4
120053: 97 7a 0d                 a3 = a0 << 0xd
120056: d3 a7 07                 a0 = a0 ^ a3
120059: 98 7a 07                 a3 = a0 >> 0x7
120062: d3 a7 07                 a0 = a0 ^ a3
120065: 97 7a 11                 a3 = a0 << 0x11
120068: d3 a7 07                 a0 = a0 ^ a3
120071: ca 87 08                 a1 = a0 * a1
120074: 3e 07 70 02 03           u64 [0x30270] = a0
120079: d6 98 07                 a0 = a1 mulhu a2
120082: 98 79 02                 a2 = a0 >> 0x2
120085: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
120088: c8 97 07                 a0 = a0 + a2
120091: c9 78 06                 s1 = a1 - a0
120094: 33 07 40                 a0 = 0x40
120097: 50 20 90 05 dd 7a fe     ra = 1424, jump @1509
      :                          @9186 [@dyn 712]
120104: 64 78                    a1 = a0
120106: 82 19 60                 a2 = u64 [sp + 0x60]
120109: 82 17 50                 a0 = u64 [sp + 0x50]
120112: c8 97 07                 a0 = a0 + a2
120115: 95 77 01                 a0 = a0 + 0x1
120118: 82 1a 58                 a3 = u64 [sp + 0x58]
120121: c8 a6 06                 s1 = s1 + a3
120124: 95 66 01                 s1 = s1 + 0x1
120127: 7b 89                    u64 [a1] = a2
120129: 7b 8a 08                 u64 [a1 + 0x8] = a3
120132: 7b 87 10                 u64 [a1 + 0x10] = a0
120135: 7b 8a 18                 u64 [a1 + 0x18] = a3
120138: 7b 87 20                 u64 [a1 + 0x20] = a0
120141: 7b 86 28                 u64 [a1 + 0x28] = s1
120144: 7b 89 30                 u64 [a1 + 0x30] = a2
120147: 7b 86 38                 u64 [a1 + 0x38] = s1
120150: 49 21 10 01 04           u64 [sp + 272] = 0x4
120155: 7b 18 18 01              u64 [sp + 0x118] = a1
120159: 49 21 20 01 04           u64 [sp + 288] = 0x4
120164: 95 17 d0 01              a0 = sp + 0x1d0
120168: 33 00 92 05              ra = 0x592
120172: 95 11 48 ff              sp = sp + 0xffffffffffffff48
120176: 7b 10 b0 00              u64 [sp + 0xb0] = ra
120180: 7b 15 a8 00              u64 [sp + 0xa8] = s0
120184: 7b 16 a0 00              u64 [sp + 0xa0] = s1
120188: 7b 18 38                 u64 [sp + 0x38] = a1
120191: 33 09 b0 02 03           a2 = 0x302b0
120196: 33 08 00 00 10           a1 = 0x100000
120201: c8 89 09                 a2 = a2 + a1
120204: 28 7e 39 ff              jump @5432
      :                          @9187 [@dyn 713]
120208: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
120212: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
120216: 33 09 18                 a2 = 0x18
120219: ca 97 07                 a0 = a0 * a2
120222: c8 87 07                 a0 = a0 + a1
120225: 7b 18 a0 00              u64 [sp + 0xa0] = a1
120229: 7b 17 a8 00              u64 [sp + 0xa8] = a0
120233: 49 21 b0 00              u64 [sp + 176] = 0
120237: 49 21 c0 00              u64 [sp + 192] = 0
120241: 95 17 a0 00              a0 = sp + 0xa0
120245: 50 20 94 05 59 2a fe     ra = 1428, jump @3
      :                          @9188 [@dyn 714]
120252: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
120256: 95 17 10 01              a0 = sp + 0x110
120260: 7b 17 28 02              u64 [sp + 0x228] = a0
120264: 33 07 08 02              a0 = 0x208
120268: 7b 17 30 02              u64 [sp + 0x230] = a0
120272: 95 17 b8 01              a0 = sp + 0x1b8
120276: 7b 17 38 02              u64 [sp + 0x238] = a0
120280: 33 07 28 0c              a0 = 0xc28
120284: 7b 17 40 02              u64 [sp + 0x240] = a0
120288: 33 07 28 0c 01           a0 = 0x10c28
120293: 7b 17 80 02              u64 [sp + 0x280] = a0
120297: 49 21 88 02 03           u64 [sp + 648] = 0x3
120302: 49 21 a0 02              u64 [sp + 672] = 0
120306: 95 17 28 02              a0 = sp + 0x228
120310: 7b 17 90 02              u64 [sp + 0x290] = a0
120314: 49 21 98 02 02           u64 [sp + 664] = 0x2
120319: 95 17 f8 01              a0 = sp + 0x1f8
120323: 95 18 80 02              a1 = sp + 0x280
120327: 50 20 96 05 40 79 fe     ra = 1430, jump @1491
      :                          @9189 [@dyn 715]
120334: 82 16 00 02              s1 = u64 [sp + 0x200]
120338: 82 1b 08 02              a4 = u64 [sp + 0x208]
120342: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
120346: 7b 17 60                 u64 [sp + 0x60] = a0
120349: 33 07 02                 a0 = 0x2
120352: 33 08                    a1 = 0
120354: 33 09                    a2 = 0
120356: 64 6a                    a3 = s1
120358: 33 00 98 05              ra = 0x598
120362: 0a 64                    ecalli 100 // 'log'
120364: 01                       fallthrough
      :                          @9190 [@dyn 716]
120365: 82 1c 60                 a5 = u64 [sp + 0x60]
120368: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
120373: 53 38 00 00 f0 32        jump @9196 if a1 <u 4293918720
      :                          @9191
120379: 33 07 b0 02 03           a0 = 0x302b0
120384: 95 77 00 00 10           a0 = a0 + 0x100000
120389: 01                       fallthrough
      :                          @9192
120390: 82 78                    a1 = u64 [a0]
120392: c9 87 09                 a2 = a0 - a1
120395: ab 69 1c                 jump @9196 if a2 != s1
      :                          @9193
120398: c9 c8 09                 a2 = a1 - a5
120401: 01                       fallthrough
      :                          @9194
120402: 82 7a                    a3 = u64 [a0]
120404: ab 8a f2                 jump @9192 if a3 != a1
      :                          @9195
120407: 7b 79                    u64 [a0] = a2
120409: 33 0b                    a4 = 0
120411: 95 17 d0 01              a0 = sp + 0x1d0
120415: 33 00 9a 05              ra = 0x59a
120419: 28 58 35 fe              jump @209
      :                          @9196
120423: 95 17 d0 01              a0 = sp + 0x1d0
120427: 50 20 9a 05 50 35 fe     ra = 1434, jump @209
      :                          @9197 [@dyn 717]
120434: 82 18 10 01              a1 = u64 [sp + 0x110]
120438: 52 08 07                 jump @9199 if a1 != 0
      :                          @9198
120441: 28 72 0b 01              jump @12862
      :                          @9199
120445: 54 38 00 00 01 0a        jump @9201 if a1 <=u 65536
      :                          @9200
120451: 28 68 0b 01              jump @12862
      :                          @9201
120455: 82 17 18 01              a0 = u64 [sp + 0x118]
120459: 97 88 04                 a1 = a1 << 0x4
120462: 33 09 b0 02 03           a2 = 0x302b0
120467: 95 99 00 00 10           a2 = a2 + 0x100000
120472: 01                       fallthrough
      :                          @9202
120473: 82 9a                    a3 = u64 [a2]
120475: c9 a9 0b                 a4 = a2 - a3
120478: aa 7b 07                 jump @9204 if a4 == a0
      :                          @9203
120481: 28 4a 0b 01              jump @12862
      :                          @9204
120485: c9 8a 0b                 a4 = a3 - a1
120488: 01                       fallthrough
      :                          @9205
120489: 82 9c                    a5 = u64 [a2]
120491: ab ac ee                 jump @9202 if a5 != a3
      :                          @9206
120494: 7b 9b                    u64 [a2] = a4
120496: 33 06                    s1 = 0
120498: 01                       fallthrough
      :                          @9207
120499: ab ac e6                 jump @9202 if a5 != a3
      :                          @9208
120502: 28 35 0b 01              jump @12862
      :                          @9209 [@dyn 718]
120506: 3a 08 70 02 03           a1 = u64 [0x30270]
120511: 97 89 0d                 a2 = a1 << 0xd
120514: d3 89 09                 a2 = a2 ^ a1
120517: 98 9a 07                 a3 = a2 >> 0x7
120520: 3a 03 58 01 03           t1 = u64 [0x30158]
120525: d3 a9 09                 a2 = a2 ^ a3
120528: 97 9a 11                 a3 = a2 << 0x11
120531: d3 a9 09                 a2 = a2 ^ a3
120534: ca 39 0b                 a4 = a2 * t1
120537: 3e 09 70 02 03           u64 [0x30270] = a2
120542: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
120552: d6 7b 0a                 a3 = a4 mulhu a0
120555: 98 ac 04                 a5 = a3 >> 0x4
120558: 3a 06 70 02 03           s1 = u64 [0x30270]
120563: 96 cc 14                 a5 = a5 * 0x14
120566: c9 cb 08                 a1 = a4 - a5
120569: 7b 18 60                 u64 [sp + 0x60] = a1
120572: 97 6b 0d                 a4 = s1 << 0xd
120575: d3 6b 0b                 a4 = a4 ^ s1
120578: 98 bc 07                 a5 = a4 >> 0x7
120581: d3 cb 0b                 a4 = a4 ^ a5
120584: 97 bc 11                 a5 = a4 << 0x11
120587: d3 cb 0b                 a4 = a4 ^ a5
120590: ca 3b 0c                 a5 = a4 * t1
120593: 3e 0b 70 02 03           u64 [0x30270] = a4
120598: d6 7c 0b                 a4 = a5 mulhu a0
120601: 98 bb 04                 a4 = a4 >> 0x4
120604: 3a 06 70 02 03           s1 = u64 [0x30270]
120609: 96 bb 14                 a4 = a4 * 0x14
120612: c9 bc 09                 a2 = a5 - a4
120615: 7b 19 58                 u64 [sp + 0x58] = a2
120618: 97 6b 0d                 a4 = s1 << 0xd
120621: d3 6b 0b                 a4 = a4 ^ s1
120624: 98 bc 07                 a5 = a4 >> 0x7
120627: d3 cb 0b                 a4 = a4 ^ a5
120630: 97 bc 11                 a5 = a4 << 0x11
120633: d3 cb 0b                 a4 = a4 ^ a5
120636: ca 3b 0c                 a5 = a4 * t1
120639: 3e 0b 70 02 03           u64 [0x30270] = a4
120644: d6 7c 0b                 a4 = a5 mulhu a0
120647: 98 bb 04                 a4 = a4 >> 0x4
120650: 3a 06 70 02 03           s1 = u64 [0x30270]
120655: 96 bb 14                 a4 = a4 * 0x14
120658: c9 bc 0a                 a3 = a5 - a4
120661: 7b 1a 50                 u64 [sp + 0x50] = a3
120664: 97 6b 0d                 a4 = s1 << 0xd
120667: d3 6b 0b                 a4 = a4 ^ s1
120670: 98 bc 07                 a5 = a4 >> 0x7
120673: d3 cb 0b                 a4 = a4 ^ a5
120676: 97 bc 11                 a5 = a4 << 0x11
120679: d3 cb 0b                 a4 = a4 ^ a5
120682: ca 3b 06                 s1 = a4 * t1
120685: 3e 0b 70 02 03           u64 [0x30270] = a4
120690: d6 76 07                 a0 = s1 mulhu a0
120693: 98 77 04                 a0 = a0 >> 0x4
120696: 96 77 14                 a0 = a0 * 0x14
120699: c9 76 06                 s1 = s1 - a0
120702: 49 21 d8 01              u64 [sp + 472] = 0
120706: 49 21 d0 01              u64 [sp + 464] = 0
120710: 49 21 e0 01 0f           u64 [sp + 480] = 0xf
120715: 49 21 e8 01 0f           u64 [sp + 488] = 0xf
120720: 95 17 f8 01              a0 = sp + 0x1f8
120724: 64 6b                    a4 = s1
120726: 50 20 9e 05 6d 3b ff     ra = 1438, jump @5500
      :                          @9210 [@dyn 719]
120733: 82 17 60                 a0 = u64 [sp + 0x60]
120736: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
120740: 82 17 58                 a0 = u64 [sp + 0x58]
120743: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
120747: 82 17 50                 a0 = u64 [sp + 0x50]
120750: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
120754: 7b 16 c0 01              u64 [sp + 0x1c0] = s1
120758: 95 17 a0 01              a0 = sp + 0x1a0
120762: 7b 17 80 02              u64 [sp + 0x280] = a0
120766: 33 07 8e 01              a0 = 0x18e
120770: 7b 17 88 02              u64 [sp + 0x288] = a0
120774: 95 18 b8 01              a1 = sp + 0x1b8
120778: 7b 18 90 02              u64 [sp + 0x290] = a1
120782: 7b 17 98 02              u64 [sp + 0x298] = a0
120786: 95 17 d0 01              a0 = sp + 0x1d0
120790: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
120794: 33 07 a6 01              a0 = 0x1a6
120798: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
120802: 95 17 f8 01              a0 = sp + 0x1f8
120806: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
120810: 33 07 7c 02              a0 = 0x27c
120814: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
120818: 33 07 80 0c 01           a0 = 0x10c80
120823: 7b 17 28 02              u64 [sp + 0x228] = a0
120827: 49 21 30 02 04           u64 [sp + 560] = 0x4
120832: 49 21 48 02              u64 [sp + 584] = 0
120836: 95 18 80 02              a1 = sp + 0x280
120840: 7b 18 38 02              u64 [sp + 0x238] = a1
120844: 49 21 40 02 04           u64 [sp + 576] = 0x4
120849: 95 17 10 01              a0 = sp + 0x110
120853: 95 18 28 02              a1 = sp + 0x228
120857: 50 20 a0 05 2e 77 fe     ra = 1440, jump @1491
      :                          @9211 [@dyn 720]
120864: 82 16 18 01              s1 = u64 [sp + 0x118]
120868: 82 1b 20 01              a4 = u64 [sp + 0x120]
120872: 82 17 10 01              a0 = u64 [sp + 0x110]
120876: 7b 17 60                 u64 [sp + 0x60] = a0
120879: 33 07 02                 a0 = 0x2
120882: 33 08                    a1 = 0
120884: 33 09                    a2 = 0
120886: 64 6a                    a3 = s1
120888: 33 00 a2 05              ra = 0x5a2
120892: 0a 64                    ecalli 100 // 'log'
120894: 01                       fallthrough
      :                          @9212 [@dyn 721]
120895: 82 1c 60                 a5 = u64 [sp + 0x60]
120898: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
120903: 55 38 00 00 f0 0a        jump @9214 if a1 >=u 4293918720
      :                          @9213
120909: 28 9e 09 01              jump @12862
      :                          @9214
120913: 33 07 b0 02 03           a0 = 0x302b0
120918: 95 77 00 00 10           a0 = a0 + 0x100000
120923: 01                       fallthrough
      :                          @9215
120924: 82 78                    a1 = u64 [a0]
120926: c9 87 09                 a2 = a0 - a1
120929: aa 69 07                 jump @9217 if a2 == s1
      :                          @9216
120932: 28 87 09 01              jump @12862
      :                          @9217
120936: c9 c8 09                 a2 = a1 - a5
120939: 01                       fallthrough
      :                          @9218
120940: 82 7a                    a3 = u64 [a0]
120942: ab 8a ee                 jump @9215 if a3 != a1
      :                          @9219
120945: 7b 79                    u64 [a0] = a2
120947: 33 0b                    a4 = 0
120949: 01                       fallthrough
      :                          @9220
120950: ab 8a e6                 jump @9215 if a3 != a1
      :                          @9221
120953: 28 72 09 01              jump @12862
      :                          @9222 [@dyn 722]
120957: 3a 08 70 02 03           a1 = u64 [0x30270]
120962: 97 89 0d                 a2 = a1 << 0xd
120965: d3 89 09                 a2 = a2 ^ a1
120968: 98 9a 07                 a3 = a2 >> 0x7
120971: 3a 08 58 01 03           a1 = u64 [0x30158]
120976: d3 a9 09                 a2 = a2 ^ a3
120979: 97 9a 11                 a3 = a2 << 0x11
120982: d3 a9 09                 a2 = a2 ^ a3
120985: ca 89 0a                 a3 = a2 * a1
120988: 3e 09 70 02 03           u64 [0x30270] = a2
120993: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
121003: d6 9a 0b                 a4 = a3 mulhu a2
121006: 98 bb 04                 a4 = a4 >> 0x4
121009: 96 bb 14                 a4 = a4 * 0x14
121012: c9 ba 0a                 a3 = a3 - a4
121015: 7b 1a 00 01              u64 [sp + 0x100] = a3
121019: 3a 0a 70 02 03           a3 = u64 [0x30270]
121024: 97 ab 0d                 a4 = a3 << 0xd
121027: d3 ba 0a                 a3 = a3 ^ a4
121030: 98 ab 07                 a4 = a3 >> 0x7
121033: d3 ba 0a                 a3 = a3 ^ a4
121036: 97 ab 11                 a4 = a3 << 0x11
121039: d3 ba 0a                 a3 = a3 ^ a4
121042: ca 8a 0b                 a4 = a3 * a1
121045: 3e 0a 70 02 03           u64 [0x30270] = a3
121050: d6 9b 0a                 a3 = a4 mulhu a2
121053: 98 aa 04                 a3 = a3 >> 0x4
121056: 96 aa 14                 a3 = a3 * 0x14
121059: c9 ab 0b                 a4 = a4 - a3
121062: 7b 1b a0 01              u64 [sp + 0x1a0] = a4
121066: 3a 0a 70 02 03           a3 = u64 [0x30270]
121071: 97 ab 0d                 a4 = a3 << 0xd
121074: d3 ba 0a                 a3 = a3 ^ a4
121077: 98 ab 07                 a4 = a3 >> 0x7
121080: d3 ba 0a                 a3 = a3 ^ a4
121083: 97 ab 11                 a4 = a3 << 0x11
121086: d3 ba 0a                 a3 = a3 ^ a4
121089: ca 8a 0b                 a4 = a3 * a1
121092: 3e 0a 70 02 03           u64 [0x30270] = a3
121097: d6 9b 07                 a0 = a4 mulhu a2
121100: 98 77 03                 a0 = a0 >> 0x3
121103: 96 77 0a                 a0 = a0 * 0xa
121106: 82 18 00 01              a1 = u64 [sp + 0x100]
121110: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
121114: c9 7b 0a                 a3 = a4 - a0
121117: 95 aa 01                 a3 = a3 + 0x1
121120: 7b 1a b8 01              u64 [sp + 0x1b8] = a3
121124: 95 17 d0 01              a0 = sp + 0x1d0
121128: 33 00 a6 05              ra = 0x5a6
121132: 95 11 98                 sp = sp + 0xffffffffffffff98
121135: 7b 10 60                 u64 [sp + 0x60] = ra
121138: 7b 15 58                 u64 [sp + 0x58] = s0
121141: 7b 16 50                 u64 [sp + 0x50] = s1
121144: 64 92                    t0 = a2
121146: 64 83                    t1 = a1
121148: 7b 17                    u64 [sp] = a0
121150: 33 08                    a1 = 0
121152: 33 05                    s0 = 0
121154: 49 11 38                 u64 [sp + 56] = 0
121157: 33 07 08                 a0 = 0x8
121160: 7b 17 40                 u64 [sp + 0x40] = a0
121163: 49 11 48                 u64 [sp + 72] = 0
121166: 9a ac 01                 a5 = 0x1 - a3
121169: 33 04 03                 t2 = 0x3
121172: 33 00 07                 ra = 0x7
121175: 7b 13 30                 u64 [sp + 0x30] = t1
121178: 64 26                    s1 = t0
121180: 7b 12 10                 u64 [sp + 0x10] = t0
121183: 7b 13 08                 u64 [sp + 0x8] = t1
121186: 28 41 3b ff              jump @5527
      :                          @9223 [@dyn 723]
121190: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
121194: 7b 17 10 01              u64 [sp + 0x110] = a0
121198: 95 17 00 01              a0 = sp + 0x100
121202: 7b 17 80 02              u64 [sp + 0x280] = a0
121206: 33 07 94 0c              a0 = 0xc94
121210: 7b 17 88 02              u64 [sp + 0x288] = a0
121214: 95 18 a0 01              a1 = sp + 0x1a0
121218: 7b 18 90 02              u64 [sp + 0x290] = a1
121222: 7b 17 98 02              u64 [sp + 0x298] = a0
121226: 95 18 b8 01              a1 = sp + 0x1b8
121230: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
121234: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
121238: 95 17 10 01              a0 = sp + 0x110
121242: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
121246: 33 07 28 0c              a0 = 0xc28
121250: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
121254: 33 07 d8 0c 01           a0 = 0x10cd8
121259: 7b 17 28 02              u64 [sp + 0x228] = a0
121263: 49 21 30 02 05           u64 [sp + 560] = 0x5
121268: 49 21 48 02              u64 [sp + 584] = 0
121272: 95 17 80 02              a0 = sp + 0x280
121276: 7b 17 38 02              u64 [sp + 0x238] = a0
121280: 49 21 40 02 04           u64 [sp + 576] = 0x4
121285: 95 17 f8 01              a0 = sp + 0x1f8
121289: 95 18 28 02              a1 = sp + 0x228
121293: 50 20 a8 05 7a 75 fe     ra = 1448, jump @1491
      :                          @9224 [@dyn 724]
121300: 82 16 00 02              s1 = u64 [sp + 0x200]
121304: 82 1b 08 02              a4 = u64 [sp + 0x208]
121308: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
121312: 7b 17 60                 u64 [sp + 0x60] = a0
121315: 33 07 02                 a0 = 0x2
121318: 33 08                    a1 = 0
121320: 33 09                    a2 = 0
121322: 64 6a                    a3 = s1
121324: 33 00 aa 05              ra = 0x5aa
121328: 0a 64                    ecalli 100 // 'log'
121330: 01                       fallthrough
      :                          @9225 [@dyn 725]
121331: 82 1c 60                 a5 = u64 [sp + 0x60]
121334: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
121339: 53 38 00 00 f0 25        jump @9231 if a1 <u 4293918720
      :                          @9226
121345: 33 07 b0 02 03           a0 = 0x302b0
121350: 95 77 00 00 10           a0 = a0 + 0x100000
121355: 01                       fallthrough
      :                          @9227
121356: 82 78                    a1 = u64 [a0]
121358: c9 87 09                 a2 = a0 - a1
121361: ab 69 0f                 jump @9231 if a2 != s1
      :                          @9228
121364: c9 c8 09                 a2 = a1 - a5
121367: 01                       fallthrough
      :                          @9229
121368: 82 7a                    a3 = u64 [a0]
121370: ab 8a f2                 jump @9227 if a3 != a1
      :                          @9230
121373: 7b 79                    u64 [a0] = a2
121375: 01                       fallthrough
      :                          @9231
121376: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
121380: 52 08 07                 jump @9233 if a1 != 0
      :                          @9232
121383: 28 c4 07 01              jump @12862
      :                          @9233
121387: 54 38 00 00 01 0a        jump @9235 if a1 <=u 65536
      :                          @9234
121393: 28 ba 07 01              jump @12862
      :                          @9235
121397: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
121401: 97 88 04                 a1 = a1 << 0x4
121404: 33 09 b0 02 03           a2 = 0x302b0
121409: 95 99 00 00 10           a2 = a2 + 0x100000
121414: 01                       fallthrough
      :                          @9236
121415: 82 9a                    a3 = u64 [a2]
121417: c9 a9 0b                 a4 = a2 - a3
121420: aa 7b 07                 jump @9238 if a4 == a0
      :                          @9237
121423: 28 9c 07 01              jump @12862
      :                          @9238
121427: c9 8a 0b                 a4 = a3 - a1
121430: 01                       fallthrough
      :                          @9239
121431: 82 9c                    a5 = u64 [a2]
121433: ab ac ee                 jump @9236 if a5 != a3
      :                          @9240
121436: 7b 9b                    u64 [a2] = a4
121438: 33 06                    s1 = 0
121440: 01                       fallthrough
      :                          @9241
121441: ab ac e6                 jump @9236 if a5 != a3
      :                          @9242
121444: 28 87 07 01              jump @12862
      :                          @9243 [@dyn 726]
121448: 3a 08 70 02 03           a1 = u64 [0x30270]
121453: 97 89 0d                 a2 = a1 << 0xd
121456: d3 98 08                 a1 = a1 ^ a2
121459: 98 89 07                 a2 = a1 >> 0x7
121462: d3 98 08                 a1 = a1 ^ a2
121465: 3a 09 58 01 03           a2 = u64 [0x30158]
121470: 97 8a 11                 a3 = a1 << 0x11
121473: d3 a8 08                 a1 = a1 ^ a3
121476: ca 98 09                 a2 = a1 * a2
121479: 3e 08 70 02 03           u64 [0x30270] = a1
121484: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
121494: d6 79 07                 a0 = a2 mulhu a0
121497: 98 77 04                 a0 = a0 >> 0x4
121500: 96 77 14                 a0 = a0 * 0x14
121503: c9 79 08                 a1 = a2 - a0
121506: 95 88 01                 a1 = a1 + 0x1
121509: 95 17 f8 01              a0 = sp + 0x1f8
121513: 95 16 f8 01              s1 = sp + 0x1f8
121517: 50 20 ae 05 70 9e fe     ra = 1454, jump @2209
      :                          @9244 [@dyn 727]
121524: 82 17 00 02              a0 = u64 [sp + 0x200]
121528: 82 18 08 02              a1 = u64 [sp + 0x208]
121532: 50 20 b0 05 99 3a ff     ra = 1456, jump @5533
      :                          @9245 [@dyn 728]
121539: 7b 16 d0 01              u64 [sp + 0x1d0] = s1
121543: 33 07 20 02              a0 = 0x220
121547: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
121551: 33 07 38 0d 01           a0 = 0x10d38
121556: 7b 17 80 02              u64 [sp + 0x280] = a0
121560: 49 21 88 02 01           u64 [sp + 648] = 0x1
121565: 49 21 a0 02              u64 [sp + 672] = 0
121569: 95 18 d0 01              a1 = sp + 0x1d0
121573: 7b 18 90 02              u64 [sp + 0x290] = a1
121577: 49 21 98 02 01           u64 [sp + 664] = 0x1
121582: 95 17 28 02              a0 = sp + 0x228
121586: 95 18 80 02              a1 = sp + 0x280
121590: 50 20 b2 05 51 74 fe     ra = 1458, jump @1491
      :                          @9246 [@dyn 729]
121597: 82 16 30 02              s1 = u64 [sp + 0x230]
121601: 82 1b 38 02              a4 = u64 [sp + 0x238]
121605: 82 17 28 02              a0 = u64 [sp + 0x228]
121609: 7b 17 60                 u64 [sp + 0x60] = a0
121612: 33 07 02                 a0 = 0x2
121615: 33 08                    a1 = 0
121617: 33 09                    a2 = 0
121619: 64 6a                    a3 = s1
121621: 33 00 b4 05              ra = 0x5b4
121625: 0a 64                    ecalli 100 // 'log'
121627: 01                       fallthrough
      :                          @9247 [@dyn 730]
121628: 82 1c 60                 a5 = u64 [sp + 0x60]
121631: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
121636: 53 38 00 00 f0 25        jump @9253 if a1 <u 4293918720
      :                          @9248
121642: 33 07 b0 02 03           a0 = 0x302b0
121647: 95 77 00 00 10           a0 = a0 + 0x100000
121652: 01                       fallthrough
      :                          @9249
121653: 82 78                    a1 = u64 [a0]
121655: c9 87 09                 a2 = a0 - a1
121658: ab 69 0f                 jump @9253 if a2 != s1
      :                          @9250
121661: c9 c8 09                 a2 = a1 - a5
121664: 01                       fallthrough
      :                          @9251
121665: 82 7a                    a3 = u64 [a0]
121667: ab 8a f2                 jump @9249 if a3 != a1
      :                          @9252
121670: 7b 79                    u64 [a0] = a2
121672: 01                       fallthrough
      :                          @9253
121673: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
121677: 52 08 07                 jump @9255 if a1 != 0
      :                          @9254
121680: 28 9b 06 01              jump @12862
      :                          @9255
121684: 54 38 00 00 02 0a        jump @9257 if a1 <=u 131072
      :                          @9256
121690: 28 91 06 01              jump @12862
      :                          @9257
121694: 82 17 00 02              a0 = u64 [sp + 0x200]
121698: 97 88 03                 a1 = a1 << 0x3
121701: 33 09 b0 02 03           a2 = 0x302b0
121706: 95 99 00 00 10           a2 = a2 + 0x100000
121711: 01                       fallthrough
      :                          @9258
121712: 82 9a                    a3 = u64 [a2]
121714: c9 a9 0b                 a4 = a2 - a3
121717: aa 7b 07                 jump @9260 if a4 == a0
      :                          @9259
121720: 28 73 06 01              jump @12862
      :                          @9260
121724: c9 8a 0b                 a4 = a3 - a1
121727: 01                       fallthrough
      :                          @9261
121728: 82 9c                    a5 = u64 [a2]
121730: ab ac ee                 jump @9258 if a5 != a3
      :                          @9262
121733: 7b 9b                    u64 [a2] = a4
121735: 33 06                    s1 = 0
121737: 01                       fallthrough
      :                          @9263
121738: ab ac e6                 jump @9258 if a5 != a3
      :                          @9264
121741: 28 5e 06 01              jump @12862
      :                          @9265 [@dyn 731]
121745: 3a 08 70 02 03           a1 = u64 [0x30270]
121750: 97 89 0d                 a2 = a1 << 0xd
121753: d3 98 08                 a1 = a1 ^ a2
121756: 98 89 07                 a2 = a1 >> 0x7
121759: d3 98 08                 a1 = a1 ^ a2
121762: 3a 09 58 01 03           a2 = u64 [0x30158]
121767: 97 8a 11                 a3 = a1 << 0x11
121770: d3 a8 08                 a1 = a1 ^ a3
121773: ca 98 09                 a2 = a1 * a2
121776: 3e 08 70 02 03           u64 [0x30270] = a1
121781: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
121791: d6 79 07                 a0 = a2 mulhu a0
121794: 98 77 04                 a0 = a0 >> 0x4
121797: 96 77 14                 a0 = a0 * 0x14
121800: c9 79 08                 a1 = a2 - a0
121803: 95 88 01                 a1 = a1 + 0x1
121806: 95 17 f8 01              a0 = sp + 0x1f8
121810: 95 16 f8 01              s1 = sp + 0x1f8
121814: 50 20 b8 05 47 9d fe     ra = 1464, jump @2209
      :                          @9266 [@dyn 732]
121821: 82 17 00 02              a0 = u64 [sp + 0x200]
121825: 82 18 08 02              a1 = u64 [sp + 0x208]
121829: 50 20 ba 05 23 3b ff     ra = 1466, jump @5570
      :                          @9267 [@dyn 733]
121836: 7b 16 d0 01              u64 [sp + 0x1d0] = s1
121840: 33 07 20 02              a0 = 0x220
121844: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
121848: 33 07 58 0d 01           a0 = 0x10d58
121853: 7b 17 80 02              u64 [sp + 0x280] = a0
121857: 49 21 88 02 01           u64 [sp + 648] = 0x1
121862: 49 21 a0 02              u64 [sp + 672] = 0
121866: 95 18 d0 01              a1 = sp + 0x1d0
121870: 7b 18 90 02              u64 [sp + 0x290] = a1
121874: 49 21 98 02 01           u64 [sp + 664] = 0x1
121879: 95 17 28 02              a0 = sp + 0x228
121883: 95 18 80 02              a1 = sp + 0x280
121887: 50 20 bc 05 28 73 fe     ra = 1468, jump @1491
      :                          @9268 [@dyn 734]
121894: 82 16 30 02              s1 = u64 [sp + 0x230]
121898: 82 1b 38 02              a4 = u64 [sp + 0x238]
121902: 82 17 28 02              a0 = u64 [sp + 0x228]
121906: 7b 17 60                 u64 [sp + 0x60] = a0
121909: 33 07 02                 a0 = 0x2
121912: 33 08                    a1 = 0
121914: 33 09                    a2 = 0
121916: 64 6a                    a3 = s1
121918: 33 00 be 05              ra = 0x5be
121922: 0a 64                    ecalli 100 // 'log'
121924: 01                       fallthrough
      :                          @9269 [@dyn 735]
121925: 82 1c 60                 a5 = u64 [sp + 0x60]
121928: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
121933: 53 38 00 00 f0 25        jump @9275 if a1 <u 4293918720
      :                          @9270
121939: 33 07 b0 02 03           a0 = 0x302b0
121944: 95 77 00 00 10           a0 = a0 + 0x100000
121949: 01                       fallthrough
      :                          @9271
121950: 82 78                    a1 = u64 [a0]
121952: c9 87 09                 a2 = a0 - a1
121955: ab 69 0f                 jump @9275 if a2 != s1
      :                          @9272
121958: c9 c8 09                 a2 = a1 - a5
121961: 01                       fallthrough
      :                          @9273
121962: 82 7a                    a3 = u64 [a0]
121964: ab 8a f2                 jump @9271 if a3 != a1
      :                          @9274
121967: 7b 79                    u64 [a0] = a2
121969: 01                       fallthrough
      :                          @9275
121970: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
121974: 52 08 07                 jump @9277 if a1 != 0
      :                          @9276
121977: 28 72 05 01              jump @12862
      :                          @9277
121981: 54 38 00 00 02 0a        jump @9279 if a1 <=u 131072
      :                          @9278
121987: 28 68 05 01              jump @12862
      :                          @9279
121991: 82 17 00 02              a0 = u64 [sp + 0x200]
121995: 97 88 03                 a1 = a1 << 0x3
121998: 33 09 b0 02 03           a2 = 0x302b0
122003: 95 99 00 00 10           a2 = a2 + 0x100000
122008: 01                       fallthrough
      :                          @9280
122009: 82 9a                    a3 = u64 [a2]
122011: c9 a9 0b                 a4 = a2 - a3
122014: aa 7b 07                 jump @9282 if a4 == a0
      :                          @9281
122017: 28 4a 05 01              jump @12862
      :                          @9282
122021: c9 8a 0b                 a4 = a3 - a1
122024: 01                       fallthrough
      :                          @9283
122025: 82 9c                    a5 = u64 [a2]
122027: ab ac ee                 jump @9280 if a5 != a3
      :                          @9284
122030: 7b 9b                    u64 [a2] = a4
122032: 33 06                    s1 = 0
122034: 01                       fallthrough
      :                          @9285
122035: ab ac e6                 jump @9280 if a5 != a3
      :                          @9286
122038: 28 35 05 01              jump @12862
      :                          @9287 [@dyn 736]
122042: 3a 08 70 02 03           a1 = u64 [0x30270]
122047: 97 89 0d                 a2 = a1 << 0xd
122050: d3 98 08                 a1 = a1 ^ a2
122053: 98 89 07                 a2 = a1 >> 0x7
122056: d3 98 08                 a1 = a1 ^ a2
122059: 3a 09 58 01 03           a2 = u64 [0x30158]
122064: 97 8a 11                 a3 = a1 << 0x11
122067: d3 a8 08                 a1 = a1 ^ a3
122070: ca 98 09                 a2 = a1 * a2
122073: 3e 08 70 02 03           u64 [0x30270] = a1
122078: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
122088: d6 79 07                 a0 = a2 mulhu a0
122091: 98 77 04                 a0 = a0 >> 0x4
122094: 96 77 14                 a0 = a0 * 0x14
122097: c9 79 08                 a1 = a2 - a0
122100: 95 88 01                 a1 = a1 + 0x1
122103: 95 17 f8 01              a0 = sp + 0x1f8
122107: 95 16 f8 01              s1 = sp + 0x1f8
122111: 50 20 c2 05 1e 9c fe     ra = 1474, jump @2209
      :                          @9288 [@dyn 737]
122118: 82 17 00 02              a0 = u64 [sp + 0x200]
122122: 82 18 08 02              a1 = u64 [sp + 0x208]
122126: 50 20 c4 05 84 2d ff     ra = 1476, jump @5346
      :                          @9289 [@dyn 738]
122133: 7b 16 d0 01              u64 [sp + 0x1d0] = s1
122137: 33 07 20 02              a0 = 0x220
122141: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
122145: 33 07 78 0d 01           a0 = 0x10d78
122150: 7b 17 80 02              u64 [sp + 0x280] = a0
122154: 49 21 88 02 01           u64 [sp + 648] = 0x1
122159: 49 21 a0 02              u64 [sp + 672] = 0
122163: 95 18 d0 01              a1 = sp + 0x1d0
122167: 7b 18 90 02              u64 [sp + 0x290] = a1
122171: 49 21 98 02 01           u64 [sp + 664] = 0x1
122176: 95 17 28 02              a0 = sp + 0x228
122180: 95 18 80 02              a1 = sp + 0x280
122184: 50 20 c6 05 ff 71 fe     ra = 1478, jump @1491
      :                          @9290 [@dyn 739]
122191: 82 16 30 02              s1 = u64 [sp + 0x230]
122195: 82 1b 38 02              a4 = u64 [sp + 0x238]
122199: 82 17 28 02              a0 = u64 [sp + 0x228]
122203: 7b 17 60                 u64 [sp + 0x60] = a0
122206: 33 07 02                 a0 = 0x2
122209: 33 08                    a1 = 0
122211: 33 09                    a2 = 0
122213: 64 6a                    a3 = s1
122215: 33 00 c8 05              ra = 0x5c8
122219: 0a 64                    ecalli 100 // 'log'
122221: 01                       fallthrough
      :                          @9291 [@dyn 740]
122222: 82 1c 60                 a5 = u64 [sp + 0x60]
122225: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
122230: 53 38 00 00 f0 25        jump @9297 if a1 <u 4293918720
      :                          @9292
122236: 33 07 b0 02 03           a0 = 0x302b0
122241: 95 77 00 00 10           a0 = a0 + 0x100000
122246: 01                       fallthrough
      :                          @9293
122247: 82 78                    a1 = u64 [a0]
122249: c9 87 09                 a2 = a0 - a1
122252: ab 69 0f                 jump @9297 if a2 != s1
      :                          @9294
122255: c9 c8 09                 a2 = a1 - a5
122258: 01                       fallthrough
      :                          @9295
122259: 82 7a                    a3 = u64 [a0]
122261: ab 8a f2                 jump @9293 if a3 != a1
      :                          @9296
122264: 7b 79                    u64 [a0] = a2
122266: 01                       fallthrough
      :                          @9297
122267: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
122271: 52 08 07                 jump @9299 if a1 != 0
      :                          @9298
122274: 28 49 04 01              jump @12862
      :                          @9299
122278: 54 38 00 00 02 0a        jump @9301 if a1 <=u 131072
      :                          @9300
122284: 28 3f 04 01              jump @12862
      :                          @9301
122288: 82 17 00 02              a0 = u64 [sp + 0x200]
122292: 97 88 03                 a1 = a1 << 0x3
122295: 33 09 b0 02 03           a2 = 0x302b0
122300: 95 99 00 00 10           a2 = a2 + 0x100000
122305: 01                       fallthrough
      :                          @9302
122306: 82 9a                    a3 = u64 [a2]
122308: c9 a9 0b                 a4 = a2 - a3
122311: aa 7b 07                 jump @9304 if a4 == a0
      :                          @9303
122314: 28 21 04 01              jump @12862
      :                          @9304
122318: c9 8a 0b                 a4 = a3 - a1
122321: 01                       fallthrough
      :                          @9305
122322: 82 9c                    a5 = u64 [a2]
122324: ab ac ee                 jump @9302 if a5 != a3
      :                          @9306
122327: 7b 9b                    u64 [a2] = a4
122329: 33 06                    s1 = 0
122331: 01                       fallthrough
      :                          @9307
122332: ab ac e6                 jump @9302 if a5 != a3
      :                          @9308
122335: 28 0c 04 01              jump @12862
      :                          @9309 [@dyn 741]
122339: 3a 08 70 02 03           a1 = u64 [0x30270]
122344: 97 89 0d                 a2 = a1 << 0xd
122347: d3 98 08                 a1 = a1 ^ a2
122350: 98 89 07                 a2 = a1 >> 0x7
122353: d3 98 08                 a1 = a1 ^ a2
122356: 3a 09 58 01 03           a2 = u64 [0x30158]
122361: 97 8a 11                 a3 = a1 << 0x11
122364: d3 a8 08                 a1 = a1 ^ a3
122367: ca 98 09                 a2 = a1 * a2
122370: 3e 08 70 02 03           u64 [0x30270] = a1
122375: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
122385: d6 79 07                 a0 = a2 mulhu a0
122388: 98 77 04                 a0 = a0 >> 0x4
122391: 96 77 14                 a0 = a0 * 0x14
122394: c9 79 08                 a1 = a2 - a0
122397: 95 88 01                 a1 = a1 + 0x1
122400: 95 17 10 01              a0 = sp + 0x110
122404: 33 00 cc 05              ra = 0x5cc
122408: 95 11 e8                 sp = sp + 0xffffffffffffffe8
122411: 7b 10 10                 u64 [sp + 0x10] = ra
122414: 7b 15 08                 u64 [sp + 0x8] = s0
122417: 7b 16                    u64 [sp] = s1
122419: 97 82 03                 t0 = a1 << 0x3
122422: 33 04 b0 02 03           t2 = 0x302b0
122427: 33 03 00 00 10           t1 = 0x100000
122432: c8 34 00                 ra = t2 + t1
122435: 28 8d 9b fe              jump @2218
      :                          @9310 [@dyn 742]
122439: 82 18 18 01              a1 = u64 [sp + 0x118]
122443: 82 19 20 01              a2 = u64 [sp + 0x120]
122447: 95 17 d0 01              a0 = sp + 0x1d0
122451: 95 16 d0 01              s1 = sp + 0x1d0
122455: 50 20 ce 05 67 39 ff     ra = 1486, jump @5598
      :                          @9311 [@dyn 743]
122462: 95 17 10 01              a0 = sp + 0x110
122466: 7b 17 28 02              u64 [sp + 0x228] = a0
122470: 33 07 20 02              a0 = 0x220
122474: 7b 17 30 02              u64 [sp + 0x230] = a0
122478: 7b 16 38 02              u64 [sp + 0x238] = s1
122482: 7b 17 40 02              u64 [sp + 0x240] = a0
122486: 33 07 98 0d 01           a0 = 0x10d98
122491: 7b 17 80 02              u64 [sp + 0x280] = a0
122495: 49 21 88 02 02           u64 [sp + 648] = 0x2
122500: 49 21 a0 02              u64 [sp + 672] = 0
122504: 95 18 28 02              a1 = sp + 0x228
122508: 7b 18 90 02              u64 [sp + 0x290] = a1
122512: 49 21 98 02 02           u64 [sp + 664] = 0x2
122517: 95 17 f8 01              a0 = sp + 0x1f8
122521: 95 18 80 02              a1 = sp + 0x280
122525: 50 20 d0 05 aa 70 fe     ra = 1488, jump @1491
      :                          @9312 [@dyn 744]
122532: 82 16 00 02              s1 = u64 [sp + 0x200]
122536: 82 1b 08 02              a4 = u64 [sp + 0x208]
122540: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
122544: 7b 17 60                 u64 [sp + 0x60] = a0
122547: 33 07 02                 a0 = 0x2
122550: 33 08                    a1 = 0
122552: 33 09                    a2 = 0
122554: 64 6a                    a3 = s1
122556: 33 00 d2 05              ra = 0x5d2
122560: 0a 64                    ecalli 100 // 'log'
122562: 01                       fallthrough
      :                          @9313 [@dyn 745]
122563: 82 1c 60                 a5 = u64 [sp + 0x60]
122566: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
122571: 53 38 00 00 f0 25        jump @9319 if a1 <u 4293918720
      :                          @9314
122577: 33 07 b0 02 03           a0 = 0x302b0
122582: 95 77 00 00 10           a0 = a0 + 0x100000
122587: 01                       fallthrough
      :                          @9315
122588: 82 78                    a1 = u64 [a0]
122590: c9 87 09                 a2 = a0 - a1
122593: ab 69 0f                 jump @9319 if a2 != s1
      :                          @9316
122596: c9 c8 09                 a2 = a1 - a5
122599: 01                       fallthrough
      :                          @9317
122600: 82 7a                    a3 = u64 [a0]
122602: ab 8a f2                 jump @9315 if a3 != a1
      :                          @9318
122605: 7b 79                    u64 [a0] = a2
122607: 01                       fallthrough
      :                          @9319
122608: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
122612: 51 08 31                 jump @9326 if a1 == 0
      :                          @9320
122615: 56 38 00 00 02 2e        jump @9326 if a1 >u 131072
      :                          @9321
122621: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
122625: 97 88 03                 a1 = a1 << 0x3
122628: 33 09 b0 02 03           a2 = 0x302b0
122633: 95 99 00 00 10           a2 = a2 + 0x100000
122638: 01                       fallthrough
      :                          @9322
122639: 82 9a                    a3 = u64 [a2]
122641: c9 a9 0b                 a4 = a2 - a3
122644: ab 7b 11                 jump @9326 if a4 != a0
      :                          @9323
122647: c9 8a 0b                 a4 = a3 - a1
122650: 01                       fallthrough
      :                          @9324
122651: 82 9c                    a5 = u64 [a2]
122653: ab ac f2                 jump @9322 if a5 != a3
      :                          @9325
122656: 7b 9b                    u64 [a2] = a4
122658: 33 06                    s1 = 0
122660: 01                       fallthrough
      :                          @9326
122661: 82 18 10 01              a1 = u64 [sp + 0x110]
122665: 52 08 07                 jump @9328 if a1 != 0
      :                          @9327
122668: 28 bf 02 01              jump @12862
      :                          @9328
122672: 54 38 00 00 02 0a        jump @9330 if a1 <=u 131072
      :                          @9329
122678: 28 b5 02 01              jump @12862
      :                          @9330
122682: 82 17 18 01              a0 = u64 [sp + 0x118]
122686: 97 88 03                 a1 = a1 << 0x3
122689: 33 09 b0 02 03           a2 = 0x302b0
122694: 95 99 00 00 10           a2 = a2 + 0x100000
122699: 01                       fallthrough
      :                          @9331
122700: 82 9a                    a3 = u64 [a2]
122702: c9 a9 0b                 a4 = a2 - a3
122705: aa 7b 07                 jump @9333 if a4 == a0
      :                          @9332
122708: 28 97 02 01              jump @12862
      :                          @9333
122712: c9 8a 0b                 a4 = a3 - a1
122715: 01                       fallthrough
      :                          @9334
122716: 82 9c                    a5 = u64 [a2]
122718: ab ac ee                 jump @9331 if a5 != a3
      :                          @9335
122721: 7b 9b                    u64 [a2] = a4
122723: 33 06                    s1 = 0
122725: 01                       fallthrough
      :                          @9336
122726: ab ac e6                 jump @9331 if a5 != a3
      :                          @9337
122729: 28 82 02 01              jump @12862
      :                          @9338 [@dyn 746]
122733: 3a 08 70 02 03           a1 = u64 [0x30270]
122738: 97 89 0d                 a2 = a1 << 0xd
122741: d3 98 08                 a1 = a1 ^ a2
122744: 98 89 07                 a2 = a1 >> 0x7
122747: d3 98 08                 a1 = a1 ^ a2
122750: 3a 09 58 01 03           a2 = u64 [0x30158]
122755: 97 8a 11                 a3 = a1 << 0x11
122758: d3 a8 08                 a1 = a1 ^ a3
122761: ca 98 09                 a2 = a1 * a2
122764: 3e 08 70 02 03           u64 [0x30270] = a1
122769: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
122779: d6 79 07                 a0 = a2 mulhu a0
122782: 98 77 04                 a0 = a0 >> 0x4
122785: 96 77 14                 a0 = a0 * 0x14
122788: c9 79 08                 a1 = a2 - a0
122791: 95 88 01                 a1 = a1 + 0x1
122794: 95 17 f8 01              a0 = sp + 0x1f8
122798: 95 16 f8 01              s1 = sp + 0x1f8
122802: 33 00 d6 05              ra = 0x5d6
122806: 95 11 e8                 sp = sp + 0xffffffffffffffe8
122809: 7b 10 10                 u64 [sp + 0x10] = ra
122812: 7b 15 08                 u64 [sp + 0x8] = s0
122815: 7b 16                    u64 [sp] = s1
122817: 97 82 03                 t0 = a1 << 0x3
122820: 33 04 b0 02 03           t2 = 0x302b0
122825: 33 03 00 00 10           t1 = 0x100000
122830: c8 34 00                 ra = t2 + t1
122833: 28 3b 9c fe              jump @2262
      :                          @9339 [@dyn 747]
122837: 82 17 00 02              a0 = u64 [sp + 0x200]
122841: 82 18 08 02              a1 = u64 [sp + 0x208]
122845: 50 20 d8 05 fb 39 ff     ra = 1496, jump @5647
      :                          @9340 [@dyn 748]
122852: 7b 16 d0 01              u64 [sp + 0x1d0] = s1
122856: 33 07 20 02              a0 = 0x220
122860: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
122864: 33 07 c8 0d 01           a0 = 0x10dc8
122869: 7b 17 80 02              u64 [sp + 0x280] = a0
122873: 49 21 88 02 01           u64 [sp + 648] = 0x1
122878: 49 21 a0 02              u64 [sp + 672] = 0
122882: 95 18 d0 01              a1 = sp + 0x1d0
122886: 7b 18 90 02              u64 [sp + 0x290] = a1
122890: 49 21 98 02 01           u64 [sp + 664] = 0x1
122895: 95 17 28 02              a0 = sp + 0x228
122899: 95 18 80 02              a1 = sp + 0x280
122903: 50 20 da 05 30 6f fe     ra = 1498, jump @1491
      :                          @9341 [@dyn 749]
122910: 82 16 30 02              s1 = u64 [sp + 0x230]
122914: 82 1b 38 02              a4 = u64 [sp + 0x238]
122918: 82 17 28 02              a0 = u64 [sp + 0x228]
122922: 7b 17 60                 u64 [sp + 0x60] = a0
122925: 33 07 02                 a0 = 0x2
122928: 33 08                    a1 = 0
122930: 33 09                    a2 = 0
122932: 64 6a                    a3 = s1
122934: 33 00 dc 05              ra = 0x5dc
122938: 0a 64                    ecalli 100 // 'log'
122940: 01                       fallthrough
      :                          @9342 [@dyn 750]
122941: 82 1c 60                 a5 = u64 [sp + 0x60]
122944: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
122949: 53 38 00 00 f0 25        jump @9348 if a1 <u 4293918720
      :                          @9343
122955: 33 07 b0 02 03           a0 = 0x302b0
122960: 95 77 00 00 10           a0 = a0 + 0x100000
122965: 01                       fallthrough
      :                          @9344
122966: 82 78                    a1 = u64 [a0]
122968: c9 87 09                 a2 = a0 - a1
122971: ab 69 0f                 jump @9348 if a2 != s1
      :                          @9345
122974: c9 c8 09                 a2 = a1 - a5
122977: 01                       fallthrough
      :                          @9346
122978: 82 7a                    a3 = u64 [a0]
122980: ab 8a f2                 jump @9344 if a3 != a1
      :                          @9347
122983: 7b 79                    u64 [a0] = a2
122985: 01                       fallthrough
      :                          @9348
122986: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
122990: 52 08 07                 jump @9350 if a1 != 0
      :                          @9349
122993: 28 7a 01 01              jump @12862
      :                          @9350
122997: 54 38 00 00 02 0a        jump @9352 if a1 <=u 131072
      :                          @9351
123003: 28 70 01 01              jump @12862
      :                          @9352
123007: 82 17 00 02              a0 = u64 [sp + 0x200]
123011: 97 88 03                 a1 = a1 << 0x3
123014: 33 09 b0 02 03           a2 = 0x302b0
123019: 95 99 00 00 10           a2 = a2 + 0x100000
123024: 01                       fallthrough
      :                          @9353
123025: 82 9a                    a3 = u64 [a2]
123027: c9 a9 0b                 a4 = a2 - a3
123030: aa 7b 07                 jump @9355 if a4 == a0
      :                          @9354
123033: 28 52 01 01              jump @12862
      :                          @9355
123037: c9 8a 0b                 a4 = a3 - a1
123040: 01                       fallthrough
      :                          @9356
123041: 82 9c                    a5 = u64 [a2]
123043: ab ac ee                 jump @9353 if a5 != a3
      :                          @9357
123046: 7b 9b                    u64 [a2] = a4
123048: 33 06                    s1 = 0
123050: 01                       fallthrough
      :                          @9358
123051: ab ac e6                 jump @9353 if a5 != a3
      :                          @9359
123054: 28 3d 01 01              jump @12862
      :                          @9360 [@dyn 751]
123058: 3a 07 70 02 03           a0 = u64 [0x30270]
123063: 33 0a 70 02 03           a3 = 0x30270
123068: 97 78 0d                 a1 = a0 << 0xd
123071: d3 87 07                 a0 = a0 ^ a1
123074: 98 78 07                 a1 = a0 >> 0x7
123077: 3a 06 58 01 03           s1 = u64 [0x30158]
123082: d3 87 07                 a0 = a0 ^ a1
123085: 97 78 11                 a1 = a0 << 0x11
123088: d3 87 07                 a0 = a0 ^ a1
123091: ca 67 08                 a1 = a0 * s1
123094: 3e 07 70 02 03           u64 [0x30270] = a0
123099: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
123109: d6 78 07                 a0 = a1 mulhu a0
123112: 98 77 04                 a0 = a0 >> 0x4
123115: 33 09 14                 a2 = 0x14
123118: ca 97 07                 a0 = a0 * a2
123121: c9 78 08                 a1 = a1 - a0
123124: 95 88 01                 a1 = a1 + 0x1
123127: 7b 18 60                 u64 [sp + 0x60] = a1
123130: 95 17 10 01              a0 = sp + 0x110
123134: 50 20 e0 05 cd 92 fe     ra = 1504, jump @2157
      :                          @9361 [@dyn 752]
123141: 82 18 18 01              a1 = u64 [sp + 0x118]
123145: 82 19 20 01              a2 = u64 [sp + 0x120]
123149: 95 17 d0 01              a0 = sp + 0x1d0
123153: 50 20 e2 05 ee 3a ff     ra = 1506, jump @5693
      :                          @9362 [@dyn 753]
123160: 3a 07 70 02 03           a0 = u64 [0x30270]
123165: 97 78 0d                 a1 = a0 << 0xd
123168: d3 87 07                 a0 = a0 ^ a1
123171: 98 78 07                 a1 = a0 >> 0x7
123174: d3 87 07                 a0 = a0 ^ a1
123177: 97 78 11                 a1 = a0 << 0x11
123180: d3 78 09                 a2 = a1 ^ a0
123183: 3e 09 70 02 03           u64 [0x30270] = a2
123188: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
123192: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
123196: ca 69 09                 a2 = a2 * s1
123199: 82 1a 60                 a3 = u64 [sp + 0x60]
123202: cd a9 09                 a2 = a2 %u a3
123205: 7b 19 a0 01              u64 [sp + 0x1a0] = a2
123209: 7b 17 60                 u64 [sp + 0x60] = a0
123212: 50 20 e4 05 79 3b ff     ra = 1508, jump @5710
      :                          @9363 [@dyn 754]
123219: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
123223: 95 17 10 01              a0 = sp + 0x110
123227: 7b 17 80 02              u64 [sp + 0x280] = a0
123231: 33 07 20 02              a0 = 0x220
123235: 7b 17 88 02              u64 [sp + 0x288] = a0
123239: 95 17 a0 01              a0 = sp + 0x1a0
123243: 7b 17 90 02              u64 [sp + 0x290] = a0
123247: 33 07 28 0c              a0 = 0xc28
123251: 7b 17 98 02              u64 [sp + 0x298] = a0
123255: 95 18 b8 01              a1 = sp + 0x1b8
123259: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
123263: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
123267: 33 07 e8 0d 01           a0 = 0x10de8
123272: 7b 17 28 02              u64 [sp + 0x228] = a0
123276: 49 21 30 02 03           u64 [sp + 560] = 0x3
123281: 49 21 48 02              u64 [sp + 584] = 0
123285: 95 18 80 02              a1 = sp + 0x280
123289: 7b 18 38 02              u64 [sp + 0x238] = a1
123293: 49 21 40 02 03           u64 [sp + 576] = 0x3
123298: 95 17 f8 01              a0 = sp + 0x1f8
123302: 95 18 28 02              a1 = sp + 0x228
123306: 50 20 e6 05 9d 6d fe     ra = 1510, jump @1491
      :                          @9364 [@dyn 755]
123313: 82 16 00 02              s1 = u64 [sp + 0x200]
123317: 82 1b 08 02              a4 = u64 [sp + 0x208]
123321: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
123325: 7b 17 58                 u64 [sp + 0x58] = a0
123328: 33 07 02                 a0 = 0x2
123331: 33 08                    a1 = 0
123333: 33 09                    a2 = 0
123335: 64 6a                    a3 = s1
123337: 33 00 e8 05              ra = 0x5e8
123341: 0a 64                    ecalli 100 // 'log'
123343: 01                       fallthrough
      :                          @9365 [@dyn 756]
123344: 82 1c 58                 a5 = u64 [sp + 0x58]
123347: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
123352: 53 38 00 00 f0 25        jump @9371 if a1 <u 4293918720
      :                          @9366
123358: 33 07 b0 02 03           a0 = 0x302b0
123363: 95 77 00 00 10           a0 = a0 + 0x100000
123368: 01                       fallthrough
      :                          @9367
123369: 82 78                    a1 = u64 [a0]
123371: c9 87 09                 a2 = a0 - a1
123374: ab 69 0f                 jump @9371 if a2 != s1
      :                          @9368
123377: c9 c8 09                 a2 = a1 - a5
123380: 01                       fallthrough
      :                          @9369
123381: 82 7a                    a3 = u64 [a0]
123383: ab 8a f2                 jump @9367 if a3 != a1
      :                          @9370
123386: 7b 79                    u64 [a0] = a2
123388: 01                       fallthrough
      :                          @9371
123389: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
123393: 82 16 60                 s1 = u64 [sp + 0x60]
123396: 51 07 2b                 jump @9378 if a0 == 0
      :                          @9372
123399: 56 37 00 00 02 28        jump @9378 if a0 >u 131072
      :                          @9373
123405: 97 77 03                 a0 = a0 << 0x3
123408: 33 08 b0 02 03           a1 = 0x302b0
123413: 95 88 00 00 10           a1 = a1 + 0x100000
123418: 01                       fallthrough
      :                          @9374
123419: 82 89                    a2 = u64 [a1]
123421: c9 98 0a                 a3 = a1 - a2
123424: ab 6a 0f                 jump @9378 if a3 != s1
      :                          @9375
123427: c9 79 0a                 a3 = a2 - a0
123430: 01                       fallthrough
      :                          @9376
123431: 82 8b                    a4 = u64 [a1]
123433: ab 9b f2                 jump @9374 if a4 != a2
      :                          @9377
123436: 7b 8a                    u64 [a1] = a3
123438: 01                       fallthrough
      :                          @9378
123439: 82 18 10 01              a1 = u64 [sp + 0x110]
123443: 52 08 07                 jump @9380 if a1 != 0
      :                          @9379
123446: 28 b5 ff 00              jump @12862
      :                          @9380
123450: 54 38 00 00 02 0a        jump @9382 if a1 <=u 131072
      :                          @9381
123456: 28 ab ff 00              jump @12862
      :                          @9382
123460: 82 17 18 01              a0 = u64 [sp + 0x118]
123464: 97 88 03                 a1 = a1 << 0x3
123467: 33 09 b0 02 03           a2 = 0x302b0
123472: 95 99 00 00 10           a2 = a2 + 0x100000
123477: 01                       fallthrough
      :                          @9383
123478: 82 9a                    a3 = u64 [a2]
123480: c9 a9 0b                 a4 = a2 - a3
123483: aa 7b 07                 jump @9385 if a4 == a0
      :                          @9384
123486: 28 8d ff 00              jump @12862
      :                          @9385
123490: c9 8a 0b                 a4 = a3 - a1
123493: 01                       fallthrough
      :                          @9386
123494: 82 9c                    a5 = u64 [a2]
123496: ab ac ee                 jump @9383 if a5 != a3
      :                          @9387
123499: 7b 9b                    u64 [a2] = a4
123501: 33 06                    s1 = 0
123503: 01                       fallthrough
      :                          @9388
123504: ab ac e6                 jump @9383 if a5 != a3
      :                          @9389
123507: 28 78 ff 00              jump @12862
      :                          @9390 [@dyn 757]
123511: 33 0a 70 02 03           a3 = 0x30270
123516: 3a 07 70 02 03           a0 = u64 [0x30270]
123521: 97 78 0d                 a1 = a0 << 0xd
123524: d3 87 07                 a0 = a0 ^ a1
123527: 98 78 07                 a1 = a0 >> 0x7
123530: 3a 09 58 01 03           a2 = u64 [0x30158]
123535: 7b 19 60                 u64 [sp + 0x60] = a2
123538: d3 87 07                 a0 = a0 ^ a1
123541: 97 78 11                 a1 = a0 << 0x11
123544: d3 87 07                 a0 = a0 ^ a1
123547: ca 97 08                 a1 = a0 * a2
123550: 3e 07 70 02 03           u64 [0x30270] = a0
123555: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
123565: d6 78 07                 a0 = a1 mulhu a0
123568: 98 77 04                 a0 = a0 >> 0x4
123571: 33 09 14                 a2 = 0x14
123574: ca 97 07                 a0 = a0 * a2
123577: c9 78 08                 a1 = a1 - a0
123580: 95 86 01                 s1 = a1 + 0x1
123583: 95 17 10 01              a0 = sp + 0x110
123587: 64 68                    a1 = s1
123589: 50 20 ec 05 06 91 fe     ra = 1516, jump @2157
      :                          @9391 [@dyn 758]
123596: 82 18 18 01              a1 = u64 [sp + 0x118]
123600: 82 19 20 01              a2 = u64 [sp + 0x120]
123604: 95 17 f8 01              a0 = sp + 0x1f8
123608: 50 20 ee 05 12 3a ff     ra = 1518, jump @5716
      :                          @9392 [@dyn 759]
123615: 3a 07 70 02 03           a0 = u64 [0x30270]
123620: 97 78 0d                 a1 = a0 << 0xd
123623: d3 87 07                 a0 = a0 ^ a1
123626: 98 78 07                 a1 = a0 >> 0x7
123629: d3 87 07                 a0 = a0 ^ a1
123632: 97 78 11                 a1 = a0 << 0x11
123635: d3 87 07                 a0 = a0 ^ a1
123638: 3e 07 70 02 03           u64 [0x30270] = a0
123643: 3a 08 70 02 03           a1 = u64 [0x30270]
123648: 82 1b 60                 a4 = u64 [sp + 0x60]
123651: ca b7 07                 a0 = a0 * a4
123654: cd 67 07                 a0 = a0 %u s1
123657: 97 89 0d                 a2 = a1 << 0xd
123660: d3 98 08                 a1 = a1 ^ a2
123663: 98 89 07                 a2 = a1 >> 0x7
123666: d3 98 08                 a1 = a1 ^ a2
123669: 97 89 11                 a2 = a1 << 0x11
123672: d3 98 08                 a1 = a1 ^ a2
123675: ca b8 09                 a2 = a1 * a4
123678: 3e 08 70 02 03           u64 [0x30270] = a1
123683: cd 69 09                 a2 = a2 %u s1
123686: e6 97 08                 a1 = minu(a0, a2)
123689: e4 97 09                 a2 = maxu(a0, a2)
123692: 7b 18 00 01              u64 [sp + 0x100] = a1
123696: 7b 19 a0 01              u64 [sp + 0x1a0] = a2
123700: 95 17 f8 01              a0 = sp + 0x1f8
123704: 50 20 f0 05 cb 3a ff     ra = 1520, jump @5742
      :                          @9393 [@dyn 760]
123711: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
123715: 95 17 10 01              a0 = sp + 0x110
123719: 7b 17 80 02              u64 [sp + 0x280] = a0
123723: 33 07 20 02              a0 = 0x220
123727: 7b 17 88 02              u64 [sp + 0x288] = a0
123731: 95 17 00 01              a0 = sp + 0x100
123735: 7b 17 90 02              u64 [sp + 0x290] = a0
123739: 33 07 28 0c              a0 = 0xc28
123743: 7b 17 98 02              u64 [sp + 0x298] = a0
123747: 95 18 a0 01              a1 = sp + 0x1a0
123751: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
123755: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
123759: 95 18 b8 01              a1 = sp + 0x1b8
123763: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
123767: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
123771: 33 07 28 0e 01           a0 = 0x10e28
123776: 7b 17 28 02              u64 [sp + 0x228] = a0
123780: 49 21 30 02 04           u64 [sp + 560] = 0x4
123785: 49 21 48 02              u64 [sp + 584] = 0
123789: 95 18 80 02              a1 = sp + 0x280
123793: 7b 18 38 02              u64 [sp + 0x238] = a1
123797: 49 21 40 02 04           u64 [sp + 576] = 0x4
123802: 95 17 d0 01              a0 = sp + 0x1d0
123806: 95 18 28 02              a1 = sp + 0x228
123810: 50 20 f2 05 a5 6b fe     ra = 1522, jump @1491
      :                          @9394 [@dyn 761]
123817: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
123821: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
123825: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
123829: 7b 17 60                 u64 [sp + 0x60] = a0
123832: 33 07 02                 a0 = 0x2
123835: 33 08                    a1 = 0
123837: 33 09                    a2 = 0
123839: 64 6a                    a3 = s1
123841: 33 00 f4 05              ra = 0x5f4
123845: 0a 64                    ecalli 100 // 'log'
123847: 01                       fallthrough
      :                          @9395 [@dyn 762]
123848: 82 1c 60                 a5 = u64 [sp + 0x60]
123851: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
123856: 53 38 00 00 f0 25        jump @9401 if a1 <u 4293918720
      :                          @9396
123862: 33 07 b0 02 03           a0 = 0x302b0
123867: 95 77 00 00 10           a0 = a0 + 0x100000
123872: 01                       fallthrough
      :                          @9397
123873: 82 78                    a1 = u64 [a0]
123875: c9 87 09                 a2 = a0 - a1
123878: ab 69 0f                 jump @9401 if a2 != s1
      :                          @9398
123881: c9 c8 09                 a2 = a1 - a5
123884: 01                       fallthrough
      :                          @9399
123885: 82 7a                    a3 = u64 [a0]
123887: ab 8a f2                 jump @9397 if a3 != a1
      :                          @9400
123890: 7b 79                    u64 [a0] = a2
123892: 01                       fallthrough
      :                          @9401
123893: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
123897: 51 08 31                 jump @9408 if a1 == 0
      :                          @9402
123900: 56 38 00 00 02 2e        jump @9408 if a1 >u 131072
      :                          @9403
123906: 82 17 00 02              a0 = u64 [sp + 0x200]
123910: 97 88 03                 a1 = a1 << 0x3
123913: 33 09 b0 02 03           a2 = 0x302b0
123918: 95 99 00 00 10           a2 = a2 + 0x100000
123923: 01                       fallthrough
      :                          @9404
123924: 82 9a                    a3 = u64 [a2]
123926: c9 a9 0b                 a4 = a2 - a3
123929: ab 7b 11                 jump @9408 if a4 != a0
      :                          @9405
123932: c9 8a 0b                 a4 = a3 - a1
123935: 01                       fallthrough
      :                          @9406
123936: 82 9c                    a5 = u64 [a2]
123938: ab ac f2                 jump @9404 if a5 != a3
      :                          @9407
123941: 7b 9b                    u64 [a2] = a4
123943: 33 06                    s1 = 0
123945: 01                       fallthrough
      :                          @9408
123946: 82 18 10 01              a1 = u64 [sp + 0x110]
123950: 52 08 07                 jump @9410 if a1 != 0
      :                          @9409
123953: 28 ba fd 00              jump @12862
      :                          @9410
123957: 54 38 00 00 02 0a        jump @9412 if a1 <=u 131072
      :                          @9411
123963: 28 b0 fd 00              jump @12862
      :                          @9412
123967: 82 17 18 01              a0 = u64 [sp + 0x118]
123971: 97 88 03                 a1 = a1 << 0x3
123974: 33 09 b0 02 03           a2 = 0x302b0
123979: 95 99 00 00 10           a2 = a2 + 0x100000
123984: 01                       fallthrough
      :                          @9413
123985: 82 9a                    a3 = u64 [a2]
123987: c9 a9 0b                 a4 = a2 - a3
123990: aa 7b 07                 jump @9415 if a4 == a0
      :                          @9414
123993: 28 92 fd 00              jump @12862
      :                          @9415
123997: c9 8a 0b                 a4 = a3 - a1
124000: 01                       fallthrough
      :                          @9416
124001: 82 9c                    a5 = u64 [a2]
124003: ab ac ee                 jump @9413 if a5 != a3
      :                          @9417
124006: 7b 9b                    u64 [a2] = a4
124008: 33 06                    s1 = 0
124010: 01                       fallthrough
      :                          @9418
124011: ab ac e6                 jump @9413 if a5 != a3
      :                          @9419
124014: 28 7d fd 00              jump @12862
      :                          @9420 [@dyn 763]
124018: 3a 09 70 02 03           a2 = u64 [0x30270]
124023: 3a 07 58 01 03           a0 = u64 [0x30158]
124028: 97 9a 0d                 a3 = a2 << 0xd
124031: d3 a9 09                 a2 = a2 ^ a3
124034: 98 9a 07                 a3 = a2 >> 0x7
124037: d3 a9 09                 a2 = a2 ^ a3
124040: 97 9a 11                 a3 = a2 << 0x11
124043: d3 a9 09                 a2 = a2 ^ a3
124046: ca 79 0a                 a3 = a2 * a0
124049: 3a 0b 68 01 03           a4 = u64 [0x30168]
124054: 3e 09 70 02 03           u64 [0x30270] = a2
124059: 98 a9 01                 a2 = a3 >> 0x1
124062: d6 b9 09                 a2 = a2 mulhu a4
124065: 98 99 04                 a2 = a2 >> 0x4
124068: 33 0b 32                 a4 = 0x32
124071: ca b9 09                 a2 = a2 * a4
124074: c9 9a 0a                 a3 = a3 - a2
124077: 86 a9 01                 a2 = a3 | 0x1
124080: 95 99 02                 a2 = a2 + 0x2
124083: 7b 19 10 01              u64 [sp + 0x110] = a2
124087: 3a 09 70 02 03           a2 = u64 [0x30270]
124092: 97 9a 0d                 a3 = a2 << 0xd
124095: d3 a9 09                 a2 = a2 ^ a3
124098: 98 9a 07                 a3 = a2 >> 0x7
124101: d3 a9 09                 a2 = a2 ^ a3
124104: 97 9a 11                 a3 = a2 << 0x11
124107: d3 a9 09                 a2 = a2 ^ a3
124110: 3e 09 70 02 03           u64 [0x30270] = a2
124115: 82 18 10 01              a1 = u64 [sp + 0x110]
124119: 52 08 07                 jump @9422 if a1 != 0
      :                          @9421
124122: 28 78 0e 01              jump @13226
      :                          @9422
124126: ca 79 07                 a0 = a2 * a0
124129: cd 87 07                 a0 = a0 %u a1
124132: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
124136: 50 20 f8 05 79 39 ff     ra = 1528, jump @5755
      :                          @9423 [@dyn 764]
124143: 78 17 b8 01              u8 [sp + 0x1b8] = a0
124147: 95 17 d0 01              a0 = sp + 0x1d0
124151: 7b 17 80 02              u64 [sp + 0x280] = a0
124155: 33 07 28 0c              a0 = 0xc28
124159: 7b 17 88 02              u64 [sp + 0x288] = a0
124163: 95 18 10 01              a1 = sp + 0x110
124167: 7b 18 90 02              u64 [sp + 0x290] = a1
124171: 7b 17 98 02              u64 [sp + 0x298] = a0
124175: 95 17 b8 01              a0 = sp + 0x1b8
124179: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
124183: 33 07 80 0c              a0 = 0xc80
124187: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
124191: 33 07 80 0e 01           a0 = 0x10e80
124196: 7b 17 28 02              u64 [sp + 0x228] = a0
124200: 49 21 30 02 03           u64 [sp + 560] = 0x3
124205: 49 21 48 02              u64 [sp + 584] = 0
124209: 95 18 80 02              a1 = sp + 0x280
124213: 7b 18 38 02              u64 [sp + 0x238] = a1
124217: 49 21 40 02 03           u64 [sp + 576] = 0x3
124222: 95 17 f8 01              a0 = sp + 0x1f8
124226: 95 18 28 02              a1 = sp + 0x228
124230: 50 20 fa 05 01 6a fe     ra = 1530, jump @1491
      :                          @9424 [@dyn 765]
124237: 82 16 00 02              s1 = u64 [sp + 0x200]
124241: 82 1b 08 02              a4 = u64 [sp + 0x208]
124245: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
124249: 7b 17 60                 u64 [sp + 0x60] = a0
124252: 33 07 02                 a0 = 0x2
124255: 33 08                    a1 = 0
124257: 33 09                    a2 = 0
124259: 64 6a                    a3 = s1
124261: 33 00 fc 05              ra = 0x5fc
124265: 0a 64                    ecalli 100 // 'log'
124267: 01                       fallthrough
      :                          @9425 [@dyn 766]
124268: 82 1c 60                 a5 = u64 [sp + 0x60]
124271: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
124276: 55 38 00 00 f0 0a        jump @9427 if a1 >=u 4293918720
      :                          @9426
124282: 28 71 fc 00              jump @12862
      :                          @9427
124286: 33 07 b0 02 03           a0 = 0x302b0
124291: 95 77 00 00 10           a0 = a0 + 0x100000
124296: 01                       fallthrough
      :                          @9428
124297: 82 78                    a1 = u64 [a0]
124299: c9 87 09                 a2 = a0 - a1
124302: aa 69 07                 jump @9430 if a2 == s1
      :                          @9429
124305: 28 5a fc 00              jump @12862
      :                          @9430
124309: c9 c8 09                 a2 = a1 - a5
124312: 01                       fallthrough
      :                          @9431
124313: 82 7a                    a3 = u64 [a0]
124315: ab 8a ee                 jump @9428 if a3 != a1
      :                          @9432
124318: 7b 79                    u64 [a0] = a2
124320: 33 0b                    a4 = 0
124322: 01                       fallthrough
      :                          @9433
124323: ab 8a e6                 jump @9428 if a3 != a1
      :                          @9434
124326: 28 45 fc 00              jump @12862
      :                          @9435 [@dyn 767]
124330: 3a 08 70 02 03           a1 = u64 [0x30270]
124335: 97 89 0d                 a2 = a1 << 0xd
124338: d3 98 08                 a1 = a1 ^ a2
124341: 98 89 07                 a2 = a1 >> 0x7
124344: d3 98 08                 a1 = a1 ^ a2
124347: 97 89 11                 a2 = a1 << 0x11
124350: d3 98 08                 a1 = a1 ^ a2
124353: 3a 09 58 01 03           a2 = u64 [0x30158]
124358: 3a 0a 60 01 03           a3 = u64 [0x30160]
124363: 3e 08 70 02 03           u64 [0x30270] = a1
124368: ca 98 07                 a0 = a1 * a2
124371: 98 78 03                 a1 = a0 >> 0x3
124374: d6 a8 08                 a1 = a1 mulhu a3
124377: 98 88 04                 a1 = a1 >> 0x4
124380: 96 88 e8 03              a1 = a1 * 0x3e8
124384: c9 87 07                 a0 = a0 - a1
124387: 95 77 02                 a0 = a0 + 0x2
124390: 7b 17 10 01              u64 [sp + 0x110] = a0
124394: 33 00 00 06              ra = 0x600
124398: 95 11 40 ff              sp = sp + 0xffffffffffffff40
124402: 7b 10 b8 00              u64 [sp + 0xb8] = ra
124406: 7b 15 b0 00              u64 [sp + 0xb0] = s0
124410: 7b 16 a8 00              u64 [sp + 0xa8] = s1
124414: 64 78                    a1 = a0
124416: 95 17 50                 a0 = sp + 0x50
124419: 33 00 a4 03              ra = 0x3a4
124423: 28 72 40 ff              jump @5877
      :                          @9436 [@dyn 768]
124427: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
124431: 95 17 10 01              a0 = sp + 0x110
124435: 7b 17 28 02              u64 [sp + 0x228] = a0
124439: 33 07 28 0c              a0 = 0xc28
124443: 7b 17 30 02              u64 [sp + 0x230] = a0
124447: 95 18 d0 01              a1 = sp + 0x1d0
124451: 7b 18 38 02              u64 [sp + 0x238] = a1
124455: 7b 17 40 02              u64 [sp + 0x240] = a0
124459: 33 07 c0 0e 01           a0 = 0x10ec0
124464: 7b 17 80 02              u64 [sp + 0x280] = a0
124468: 49 21 88 02 02           u64 [sp + 648] = 0x2
124473: 49 21 a0 02              u64 [sp + 672] = 0
124477: 95 18 28 02              a1 = sp + 0x228
124481: 7b 18 90 02              u64 [sp + 0x290] = a1
124485: 49 21 98 02 02           u64 [sp + 664] = 0x2
124490: 95 17 f8 01              a0 = sp + 0x1f8
124494: 95 18 80 02              a1 = sp + 0x280
124498: 50 20 02 06 f5 68 fe     ra = 1538, jump @1491
      :                          @9437 [@dyn 769]
124505: 82 16 00 02              s1 = u64 [sp + 0x200]
124509: 82 1b 08 02              a4 = u64 [sp + 0x208]
124513: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
124517: 7b 17 60                 u64 [sp + 0x60] = a0
124520: 33 07 02                 a0 = 0x2
124523: 33 08                    a1 = 0
124525: 33 09                    a2 = 0
124527: 64 6a                    a3 = s1
124529: 33 00 04 06              ra = 0x604
124533: 0a 64                    ecalli 100 // 'log'
124535: 01                       fallthrough
      :                          @9438 [@dyn 770]
124536: 82 1c 60                 a5 = u64 [sp + 0x60]
124539: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
124544: 55 38 00 00 f0 0a        jump @9440 if a1 >=u 4293918720
      :                          @9439
124550: 28 65 fb 00              jump @12862
      :                          @9440
124554: 33 07 b0 02 03           a0 = 0x302b0
124559: 95 77 00 00 10           a0 = a0 + 0x100000
124564: 01                       fallthrough
      :                          @9441
124565: 82 78                    a1 = u64 [a0]
124567: c9 87 09                 a2 = a0 - a1
124570: aa 69 07                 jump @9443 if a2 == s1
      :                          @9442
124573: 28 4e fb 00              jump @12862
      :                          @9443
124577: c9 c8 09                 a2 = a1 - a5
124580: 01                       fallthrough
      :                          @9444
124581: 82 7a                    a3 = u64 [a0]
124583: ab 8a ee                 jump @9441 if a3 != a1
      :                          @9445
124586: 7b 79                    u64 [a0] = a2
124588: 33 0b                    a4 = 0
124590: 01                       fallthrough
      :                          @9446
124591: ab 8a e6                 jump @9441 if a3 != a1
      :                          @9447
124594: 28 39 fb 00              jump @12862
      :                          @9448 [@dyn 771]
124598: 3a 09 70 02 03           a2 = u64 [0x30270]
124603: 3a 07 58 01 03           a0 = u64 [0x30158]
124608: 97 9a 0d                 a3 = a2 << 0xd
124611: d3 a9 09                 a2 = a2 ^ a3
124614: 98 9a 07                 a3 = a2 >> 0x7
124617: d3 a9 09                 a2 = a2 ^ a3
124620: 97 9a 11                 a3 = a2 << 0x11
124623: d3 a9 09                 a2 = a2 ^ a3
124626: ca 79 0a                 a3 = a2 * a0
124629: 3a 0b 60 01 03           a4 = u64 [0x30160]
124634: 3e 09 70 02 03           u64 [0x30270] = a2
124639: 98 a9 03                 a2 = a3 >> 0x3
124642: d6 b9 09                 a2 = a2 mulhu a4
124645: 98 99 04                 a2 = a2 >> 0x4
124648: 33 0b e8 03              a4 = 0x3e8
124652: ca b9 09                 a2 = a2 * a4
124655: c9 9a 0a                 a3 = a3 - a2
124658: 95 aa 02                 a3 = a3 + 0x2
124661: 7b 1a b8 01              u64 [sp + 0x1b8] = a3
124665: 3a 09 70 02 03           a2 = u64 [0x30270]
124670: 97 9a 0d                 a3 = a2 << 0xd
124673: d3 a9 09                 a2 = a2 ^ a3
124676: 98 9a 07                 a3 = a2 >> 0x7
124679: d3 a9 09                 a2 = a2 ^ a3
124682: 97 9a 11                 a3 = a2 << 0x11
124685: d3 a9 09                 a2 = a2 ^ a3
124688: 3e 09 70 02 03           u64 [0x30270] = a2
124693: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
124697: 95 8a ff                 a3 = a1 + 0xffffffffffffffff
124700: 52 0a 07                 jump @9450 if a3 != 0
      :                          @9449
124703: 28 33 0c 01              jump @13226
      :                          @9450
124707: ca 79 07                 a0 = a2 * a0
124710: cd a7 07                 a0 = a0 %u a3
124713: 95 77 01                 a0 = a0 + 0x1
124716: 7b 17 10 01              u64 [sp + 0x110] = a0
124720: 50 20 08 06 43 3d ff     ra = 1544, jump @5833
      :                          @9451 [@dyn 772]
124727: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
124731: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
124735: 95 17 10 01              a0 = sp + 0x110
124739: 7b 17 80 02              u64 [sp + 0x280] = a0
124743: 33 07 28 0c              a0 = 0xc28
124747: 7b 17 88 02              u64 [sp + 0x288] = a0
124751: 95 18 b8 01              a1 = sp + 0x1b8
124755: 7b 18 90 02              u64 [sp + 0x290] = a1
124759: 7b 17 98 02              u64 [sp + 0x298] = a0
124763: 95 17 d0 01              a0 = sp + 0x1d0
124767: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
124771: 33 07 4a 02              a0 = 0x24a
124775: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
124779: 33 07 e0 0e 01           a0 = 0x10ee0
124784: 7b 17 28 02              u64 [sp + 0x228] = a0
124788: 49 21 30 02 03           u64 [sp + 560] = 0x3
124793: 49 21 48 02              u64 [sp + 584] = 0
124797: 95 18 80 02              a1 = sp + 0x280
124801: 7b 18 38 02              u64 [sp + 0x238] = a1
124805: 49 21 40 02 03           u64 [sp + 576] = 0x3
124810: 95 17 f8 01              a0 = sp + 0x1f8
124814: 95 18 28 02              a1 = sp + 0x228
124818: 50 20 0a 06 b5 67 fe     ra = 1546, jump @1491
      :                          @9452 [@dyn 773]
124825: 82 16 00 02              s1 = u64 [sp + 0x200]
124829: 82 1b 08 02              a4 = u64 [sp + 0x208]
124833: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
124837: 7b 17 60                 u64 [sp + 0x60] = a0
124840: 33 07 02                 a0 = 0x2
124843: 33 08                    a1 = 0
124845: 33 09                    a2 = 0
124847: 64 6a                    a3 = s1
124849: 33 00 0c 06              ra = 0x60c
124853: 0a 64                    ecalli 100 // 'log'
124855: 01                       fallthrough
      :                          @9453 [@dyn 774]
124856: 82 1c 60                 a5 = u64 [sp + 0x60]
124859: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
124864: 55 38 00 00 f0 0a        jump @9455 if a1 >=u 4293918720
      :                          @9454
124870: 28 25 fa 00              jump @12862
      :                          @9455
124874: 33 07 b0 02 03           a0 = 0x302b0
124879: 95 77 00 00 10           a0 = a0 + 0x100000
124884: 01                       fallthrough
      :                          @9456
124885: 82 78                    a1 = u64 [a0]
124887: c9 87 09                 a2 = a0 - a1
124890: aa 69 07                 jump @9458 if a2 == s1
      :                          @9457
124893: 28 0e fa 00              jump @12862
      :                          @9458
124897: c9 c8 09                 a2 = a1 - a5
124900: 01                       fallthrough
      :                          @9459
124901: 82 7a                    a3 = u64 [a0]
124903: ab 8a ee                 jump @9456 if a3 != a1
      :                          @9460
124906: 7b 79                    u64 [a0] = a2
124908: 33 0b                    a4 = 0
124910: 01                       fallthrough
      :                          @9461
124911: ab 8a e6                 jump @9456 if a3 != a1
      :                          @9462
124914: 28 f9 f9 00              jump @12862
      :                          @9463 [@dyn 775]
124918: 3a 08 70 02 03           a1 = u64 [0x30270]
124923: 97 89 0d                 a2 = a1 << 0xd
124926: d3 98 08                 a1 = a1 ^ a2
124929: 98 89 07                 a2 = a1 >> 0x7
124932: d3 98 08                 a1 = a1 ^ a2
124935: 97 89 11                 a2 = a1 << 0x11
124938: d3 98 08                 a1 = a1 ^ a2
124941: 3a 09 58 01 03           a2 = u64 [0x30158]
124946: 3a 0a 68 01 03           a3 = u64 [0x30168]
124951: 3e 08 70 02 03           u64 [0x30270] = a1
124956: ca 98 07                 a0 = a1 * a2
124959: 98 78 01                 a1 = a0 >> 0x1
124962: d6 a8 08                 a1 = a1 mulhu a3
124965: 98 88 04                 a1 = a1 >> 0x4
124968: 96 88 32                 a1 = a1 * 0x32
124971: c9 87 07                 a0 = a0 - a1
124974: 86 77 01                 a0 = a0 | 0x1
124977: 95 77 02                 a0 = a0 + 0x2
124980: 7b 17 10 01              u64 [sp + 0x110] = a0
124984: 50 20 10 06 6b a4 fe     ra = 1552, jump @2452
      :                          @9464 [@dyn 776]
124991: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
124995: 95 17 10 01              a0 = sp + 0x110
124999: 7b 17 28 02              u64 [sp + 0x228] = a0
125003: 33 07 28 0c              a0 = 0xc28
125007: 7b 17 30 02              u64 [sp + 0x230] = a0
125011: 95 17 d0 01              a0 = sp + 0x1d0
125015: 7b 17 38 02              u64 [sp + 0x238] = a0
125019: 33 07 78                 a0 = 0x78
125022: 7b 17 40 02              u64 [sp + 0x240] = a0
125026: 33 07 20 0f 01           a0 = 0x10f20
125031: 7b 17 80 02              u64 [sp + 0x280] = a0
125035: 49 21 88 02 02           u64 [sp + 648] = 0x2
125040: 49 21 a0 02              u64 [sp + 672] = 0
125044: 95 18 28 02              a1 = sp + 0x228
125048: 7b 18 90 02              u64 [sp + 0x290] = a1
125052: 49 21 98 02 02           u64 [sp + 664] = 0x2
125057: 95 17 f8 01              a0 = sp + 0x1f8
125061: 95 18 80 02              a1 = sp + 0x280
125065: 50 20 12 06 be 66 fe     ra = 1554, jump @1491
      :                          @9465 [@dyn 777]
125072: 82 16 00 02              s1 = u64 [sp + 0x200]
125076: 82 1b 08 02              a4 = u64 [sp + 0x208]
125080: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
125084: 7b 17 60                 u64 [sp + 0x60] = a0
125087: 33 07 02                 a0 = 0x2
125090: 33 08                    a1 = 0
125092: 33 09                    a2 = 0
125094: 64 6a                    a3 = s1
125096: 33 00 14 06              ra = 0x614
125100: 0a 64                    ecalli 100 // 'log'
125102: 01                       fallthrough
      :                          @9466 [@dyn 778]
125103: 82 1c 60                 a5 = u64 [sp + 0x60]
125106: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
125111: 55 38 00 00 f0 0a        jump @9468 if a1 >=u 4293918720
      :                          @9467
125117: 28 2e f9 00              jump @12862
      :                          @9468
125121: 33 07 b0 02 03           a0 = 0x302b0
125126: 95 77 00 00 10           a0 = a0 + 0x100000
125131: 01                       fallthrough
      :                          @9469
125132: 82 78                    a1 = u64 [a0]
125134: c9 87 09                 a2 = a0 - a1
125137: aa 69 07                 jump @9471 if a2 == s1
      :                          @9470
125140: 28 17 f9 00              jump @12862
      :                          @9471
125144: c9 c8 09                 a2 = a1 - a5
125147: 01                       fallthrough
      :                          @9472
125148: 82 7a                    a3 = u64 [a0]
125150: ab 8a ee                 jump @9469 if a3 != a1
      :                          @9473
125153: 7b 79                    u64 [a0] = a2
125155: 33 0b                    a4 = 0
125157: 01                       fallthrough
      :                          @9474
125158: ab 8a e6                 jump @9469 if a3 != a1
      :                          @9475
125161: 28 02 f9 00              jump @12862
      :                          @9476 [@dyn 779]
125165: 3a 08 70 02 03           a1 = u64 [0x30270]
125170: 97 89 0d                 a2 = a1 << 0xd
125173: d3 98 08                 a1 = a1 ^ a2
125176: 98 89 07                 a2 = a1 >> 0x7
125179: 3a 0a 58 01 03           a3 = u64 [0x30158]
125184: d3 98 08                 a1 = a1 ^ a2
125187: 97 89 11                 a2 = a1 << 0x11
125190: d3 98 08                 a1 = a1 ^ a2
125193: ca a8 09                 a2 = a1 * a3
125196: 3a 0a 68 01 03           a3 = u64 [0x30168]
125201: 3e 08 70 02 03           u64 [0x30270] = a1
125206: 98 97 01                 a0 = a2 >> 0x1
125209: d6 a7 07                 a0 = a0 mulhu a3
125212: 98 77 04                 a0 = a0 >> 0x4
125215: 96 77 32                 a0 = a0 * 0x32
125218: c9 79 09                 a2 = a2 - a0
125221: 86 97 01                 a0 = a2 | 0x1
125224: 95 78 02                 a1 = a0 + 0x2
125227: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
125231: 9a 76                    s1 = -a0
125233: 33 0a 01                 a3 = 0x1
125236: 33 0b 02                 a4 = 0x2
125239: 33 0c 01                 a5 = 0x1
125242: 01                       fallthrough
      :                          @9477
125243: ca ac 0a                 a3 = a5 * a3
125246: 95 cc 01                 a5 = a5 + 0x1
125249: c8 c6 09                 a2 = s1 + a5
125252: cd 8a 0a                 a3 = a3 %u a1
125255: ab b9 f4                 jump @9477 if a2 != a4
      :                          @9478
125258: 95 77 01                 a0 = a0 + 0x1
125261: d3 a7 07                 a0 = a0 ^ a3
125264: 88 77 01                 a0 = a0 <u 0x1
125267: 78 17 10 01              u8 [sp + 0x110] = a0
125271: 95 17 d0 01              a0 = sp + 0x1d0
125275: 7b 17 28 02              u64 [sp + 0x228] = a0
125279: 33 07 28 0c              a0 = 0xc28
125283: 7b 17 30 02              u64 [sp + 0x230] = a0
125287: 95 17 10 01              a0 = sp + 0x110
125291: 7b 17 38 02              u64 [sp + 0x238] = a0
125295: 33 07 80 0c              a0 = 0xc80
125299: 7b 17 40 02              u64 [sp + 0x240] = a0
125303: 33 07 40 0f 01           a0 = 0x10f40
125308: 7b 17 80 02              u64 [sp + 0x280] = a0
125312: 49 21 88 02 02           u64 [sp + 648] = 0x2
125317: 49 21 a0 02              u64 [sp + 672] = 0
125321: 95 18 28 02              a1 = sp + 0x228
125325: 7b 18 90 02              u64 [sp + 0x290] = a1
125329: 49 21 98 02 02           u64 [sp + 664] = 0x2
125334: 95 17 f8 01              a0 = sp + 0x1f8
125338: 95 18 80 02              a1 = sp + 0x280
125342: 50 20 18 06 a9 65 fe     ra = 1560, jump @1491
      :                          @9479 [@dyn 780]
125349: 82 16 00 02              s1 = u64 [sp + 0x200]
125353: 82 1b 08 02              a4 = u64 [sp + 0x208]
125357: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
125361: 7b 17 60                 u64 [sp + 0x60] = a0
125364: 33 07 02                 a0 = 0x2
125367: 33 08                    a1 = 0
125369: 33 09                    a2 = 0
125371: 64 6a                    a3 = s1
125373: 33 00 1a 06              ra = 0x61a
125377: 0a 64                    ecalli 100 // 'log'
125379: 01                       fallthrough
      :                          @9480 [@dyn 781]
125380: 82 1c 60                 a5 = u64 [sp + 0x60]
125383: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
125388: 55 38 00 00 f0 0a        jump @9482 if a1 >=u 4293918720
      :                          @9481
125394: 28 19 f8 00              jump @12862
      :                          @9482
125398: 33 07 b0 02 03           a0 = 0x302b0
125403: 95 77 00 00 10           a0 = a0 + 0x100000
125408: 01                       fallthrough
      :                          @9483
125409: 82 78                    a1 = u64 [a0]
125411: c9 87 09                 a2 = a0 - a1
125414: aa 69 07                 jump @9485 if a2 == s1
      :                          @9484
125417: 28 02 f8 00              jump @12862
      :                          @9485
125421: c9 c8 09                 a2 = a1 - a5
125424: 01                       fallthrough
      :                          @9486
125425: 82 7a                    a3 = u64 [a0]
125427: ab 8a ee                 jump @9483 if a3 != a1
      :                          @9487
125430: 7b 79                    u64 [a0] = a2
125432: 33 0b                    a4 = 0
125434: 01                       fallthrough
      :                          @9488
125435: ab 8a e6                 jump @9483 if a3 != a1
      :                          @9489
125438: 28 ed f7 00              jump @12862
      :                          @9490 [@dyn 782]
125442: 3a 08 70 02 03           a1 = u64 [0x30270]
125447: 97 89 0d                 a2 = a1 << 0xd
125450: d3 98 08                 a1 = a1 ^ a2
125453: 98 89 07                 a2 = a1 >> 0x7
125456: d3 98 08                 a1 = a1 ^ a2
125459: 97 89 11                 a2 = a1 << 0x11
125462: d3 98 08                 a1 = a1 ^ a2
125465: 3a 09 58 01 03           a2 = u64 [0x30158]
125470: 3a 0a 60 01 03           a3 = u64 [0x30160]
125475: 3e 08 70 02 03           u64 [0x30270] = a1
125480: ca 98 07                 a0 = a1 * a2
125483: 98 78 03                 a1 = a0 >> 0x3
125486: d6 a8 08                 a1 = a1 mulhu a3
125489: 98 88 04                 a1 = a1 >> 0x4
125492: 96 88 e8 03              a1 = a1 * 0x3e8
125496: c9 87 07                 a0 = a0 - a1
125499: 95 77 03                 a0 = a0 + 0x3
125502: 86 77 01                 a0 = a0 | 0x1
125505: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
125509: 50 20 1e 06 85 3a ff     ra = 1566, jump @5845
      :                          @9491 [@dyn 783]
125516: 78 17 10 01              u8 [sp + 0x110] = a0
125520: 95 17 d0 01              a0 = sp + 0x1d0
125524: 7b 17 28 02              u64 [sp + 0x228] = a0
125528: 33 07 28 0c              a0 = 0xc28
125532: 7b 17 30 02              u64 [sp + 0x230] = a0
125536: 95 17 10 01              a0 = sp + 0x110
125540: 7b 17 38 02              u64 [sp + 0x238] = a0
125544: 33 07 80 0c              a0 = 0xc80
125548: 7b 17 40 02              u64 [sp + 0x240] = a0
125552: 33 07 78 0f 01           a0 = 0x10f78
125557: 7b 17 80 02              u64 [sp + 0x280] = a0
125561: 49 21 88 02 02           u64 [sp + 648] = 0x2
125566: 49 21 a0 02              u64 [sp + 672] = 0
125570: 95 18 28 02              a1 = sp + 0x228
125574: 7b 18 90 02              u64 [sp + 0x290] = a1
125578: 49 21 98 02 02           u64 [sp + 664] = 0x2
125583: 95 17 f8 01              a0 = sp + 0x1f8
125587: 95 18 80 02              a1 = sp + 0x280
125591: 50 20 20 06 b0 64 fe     ra = 1568, jump @1491
      :                          @9492 [@dyn 784]
125598: 82 16 00 02              s1 = u64 [sp + 0x200]
125602: 82 1b 08 02              a4 = u64 [sp + 0x208]
125606: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
125610: 7b 17 60                 u64 [sp + 0x60] = a0
125613: 33 07 02                 a0 = 0x2
125616: 33 08                    a1 = 0
125618: 33 09                    a2 = 0
125620: 64 6a                    a3 = s1
125622: 33 00 22 06              ra = 0x622
125626: 0a 64                    ecalli 100 // 'log'
125628: 01                       fallthrough
      :                          @9493 [@dyn 785]
125629: 82 1c 60                 a5 = u64 [sp + 0x60]
125632: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
125637: 55 38 00 00 f0 0a        jump @9495 if a1 >=u 4293918720
      :                          @9494
125643: 28 20 f7 00              jump @12862
      :                          @9495
125647: 33 07 b0 02 03           a0 = 0x302b0
125652: 95 77 00 00 10           a0 = a0 + 0x100000
125657: 01                       fallthrough
      :                          @9496
125658: 82 78                    a1 = u64 [a0]
125660: c9 87 09                 a2 = a0 - a1
125663: aa 69 07                 jump @9498 if a2 == s1
      :                          @9497
125666: 28 09 f7 00              jump @12862
      :                          @9498
125670: c9 c8 09                 a2 = a1 - a5
125673: 01                       fallthrough
      :                          @9499
125674: 82 7a                    a3 = u64 [a0]
125676: ab 8a ee                 jump @9496 if a3 != a1
      :                          @9500
125679: 7b 79                    u64 [a0] = a2
125681: 33 0b                    a4 = 0
125683: 01                       fallthrough
      :                          @9501
125684: ab 8a e6                 jump @9496 if a3 != a1
      :                          @9502
125687: 28 f4 f6 00              jump @12862
      :                          @9503 [@dyn 786]
125691: 3a 08 70 02 03           a1 = u64 [0x30270]
125696: 97 89 0d                 a2 = a1 << 0xd
125699: d3 98 08                 a1 = a1 ^ a2
125702: 98 89 07                 a2 = a1 >> 0x7
125705: d3 98 08                 a1 = a1 ^ a2
125708: 97 89 11                 a2 = a1 << 0x11
125711: d3 98 08                 a1 = a1 ^ a2
125714: 3a 09 58 01 03           a2 = u64 [0x30158]
125719: 3a 0a 60 01 03           a3 = u64 [0x30160]
125724: 3e 08 70 02 03           u64 [0x30270] = a1
125729: ca 98 07                 a0 = a1 * a2
125732: 98 78 02                 a1 = a0 >> 0x2
125735: d6 a8 08                 a1 = a1 mulhu a3
125738: 98 88 04                 a1 = a1 >> 0x4
125741: 96 88 f4 01              a1 = a1 * 0x1f4
125745: c9 87 07                 a0 = a0 - a1
125748: 97 77 01                 a0 = a0 << 0x1
125751: 95 78 09                 a1 = a0 + 0x9
125754: 7b 18 10 01              u64 [sp + 0x110] = a1
125758: 95 17 f8 01              a0 = sp + 0x1f8
125762: 95 16 f8 01              s1 = sp + 0x1f8
125766: 33 00 26 06              ra = 0x626
125770: 95 11 f0                 sp = sp + 0xfffffffffffffff0
125773: 7b 15 08                 u64 [sp + 0x8] = s0
125776: 33 0a                    a3 = 0
125778: 33 03 ff                 t1 = 0xffffffffffffffff
125781: 64 82                    t0 = a1
125783: 28 9f 3a ff              jump @5867
      :                          @9504 [@dyn 787]
125787: 95 17 10 01              a0 = sp + 0x110
125791: 7b 17 28 02              u64 [sp + 0x228] = a0
125795: 33 07 28 0c              a0 = 0xc28
125799: 7b 17 30 02              u64 [sp + 0x230] = a0
125803: 7b 16 38 02              u64 [sp + 0x238] = s1
125807: 33 07 68 02              a0 = 0x268
125811: 7b 17 40 02              u64 [sp + 0x240] = a0
125815: 33 07 a8 0f 01           a0 = 0x10fa8
125820: 7b 17 80 02              u64 [sp + 0x280] = a0
125824: 49 21 88 02 02           u64 [sp + 648] = 0x2
125829: 49 21 a0 02              u64 [sp + 672] = 0
125833: 95 18 28 02              a1 = sp + 0x228
125837: 7b 18 90 02              u64 [sp + 0x290] = a1
125841: 49 21 98 02 02           u64 [sp + 664] = 0x2
125846: 95 17 d0 01              a0 = sp + 0x1d0
125850: 95 18 80 02              a1 = sp + 0x280
125854: 50 20 28 06 a9 63 fe     ra = 1576, jump @1491
      :                          @9505 [@dyn 788]
125861: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
125865: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
125869: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
125873: 7b 17 60                 u64 [sp + 0x60] = a0
125876: 33 07 02                 a0 = 0x2
125879: 33 08                    a1 = 0
125881: 33 09                    a2 = 0
125883: 64 6a                    a3 = s1
125885: 33 00 2a 06              ra = 0x62a
125889: 0a 64                    ecalli 100 // 'log'
125891: 01                       fallthrough
      :                          @9506 [@dyn 789]
125892: 82 1c 60                 a5 = u64 [sp + 0x60]
125895: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
125900: 55 38 00 00 f0 0a        jump @9508 if a1 >=u 4293918720
      :                          @9507
125906: 28 19 f6 00              jump @12862
      :                          @9508
125910: 33 07 b0 02 03           a0 = 0x302b0
125915: 95 77 00 00 10           a0 = a0 + 0x100000
125920: 01                       fallthrough
      :                          @9509
125921: 82 78                    a1 = u64 [a0]
125923: c9 87 09                 a2 = a0 - a1
125926: aa 69 07                 jump @9511 if a2 == s1
      :                          @9510
125929: 28 02 f6 00              jump @12862
      :                          @9511
125933: c9 c8 09                 a2 = a1 - a5
125936: 01                       fallthrough
      :                          @9512
125937: 82 7a                    a3 = u64 [a0]
125939: ab 8a ee                 jump @9509 if a3 != a1
      :                          @9513
125942: 7b 79                    u64 [a0] = a2
125944: 33 0b                    a4 = 0
125946: 01                       fallthrough
      :                          @9514
125947: ab 8a e6                 jump @9509 if a3 != a1
      :                          @9515
125950: 28 ed f5 00              jump @12862
      :                          @9516 [@dyn 790]
125954: 3a 08 70 02 03           a1 = u64 [0x30270]
125959: 97 89 0d                 a2 = a1 << 0xd
125962: d3 98 08                 a1 = a1 ^ a2
125965: 98 89 07                 a2 = a1 >> 0x7
125968: d3 98 08                 a1 = a1 ^ a2
125971: 97 89 11                 a2 = a1 << 0x11
125974: d3 98 08                 a1 = a1 ^ a2
125977: 3a 09 58 01 03           a2 = u64 [0x30158]
125982: 3a 0a 60 01 03           a3 = u64 [0x30160]
125987: 3e 08 70 02 03           u64 [0x30270] = a1
125992: ca 98 07                 a0 = a1 * a2
125995: 98 78 03                 a1 = a0 >> 0x3
125998: d6 a8 08                 a1 = a1 mulhu a3
126001: 98 88 04                 a1 = a1 >> 0x4
126004: 96 88 e8 03              a1 = a1 * 0x3e8
126008: c9 87 07                 a0 = a0 - a1
126011: 95 78 02                 a1 = a0 + 0x2
126014: 7b 18 10 01              u64 [sp + 0x110] = a1
126018: 95 17 f8 01              a0 = sp + 0x1f8
126022: 95 16 f8 01              s1 = sp + 0x1f8
126026: 50 20 2e 06 2f 3a ff     ra = 1582, jump @5877
      :                          @9517 [@dyn 791]
126033: 95 17 10 01              a0 = sp + 0x110
126037: 7b 17 28 02              u64 [sp + 0x228] = a0
126041: 33 07 28 0c              a0 = 0xc28
126045: 7b 17 30 02              u64 [sp + 0x230] = a0
126049: 7b 16 38 02              u64 [sp + 0x238] = s1
126053: 33 07 20 02              a0 = 0x220
126057: 7b 17 40 02              u64 [sp + 0x240] = a0
126061: 33 07 e0 0f 01           a0 = 0x10fe0
126066: 7b 17 80 02              u64 [sp + 0x280] = a0
126070: 49 21 88 02 02           u64 [sp + 648] = 0x2
126075: 49 21 a0 02              u64 [sp + 672] = 0
126079: 95 18 28 02              a1 = sp + 0x228
126083: 7b 18 90 02              u64 [sp + 0x290] = a1
126087: 49 21 98 02 02           u64 [sp + 664] = 0x2
126092: 95 17 d0 01              a0 = sp + 0x1d0
126096: 95 18 80 02              a1 = sp + 0x280
126100: 50 20 30 06 b3 62 fe     ra = 1584, jump @1491
      :                          @9518 [@dyn 792]
126107: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
126111: 51 08 2f                 jump @9525 if a1 == 0
      :                          @9519
126114: 56 38 00 00 02 2c        jump @9525 if a1 >u 131072
      :                          @9520
126120: 82 17 00 02              a0 = u64 [sp + 0x200]
126124: 97 88 03                 a1 = a1 << 0x3
126127: 33 09 b0 02 03           a2 = 0x302b0
126132: 95 99 00 00 10           a2 = a2 + 0x100000
126137: 01                       fallthrough
      :                          @9521
126138: 82 9a                    a3 = u64 [a2]
126140: c9 a9 0b                 a4 = a2 - a3
126143: ab 7b 0f                 jump @9525 if a4 != a0
      :                          @9522
126146: c9 8a 0b                 a4 = a3 - a1
126149: 01                       fallthrough
      :                          @9523
126150: 82 9c                    a5 = u64 [a2]
126152: ab ac f2                 jump @9521 if a5 != a3
      :                          @9524
126155: 7b 9b                    u64 [a2] = a4
126157: 01                       fallthrough
      :                          @9525
126158: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
126162: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
126166: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
126170: 7b 17 60                 u64 [sp + 0x60] = a0
126173: 33 07 02                 a0 = 0x2
126176: 33 08                    a1 = 0
126178: 33 09                    a2 = 0
126180: 64 6a                    a3 = s1
126182: 33 00 32 06              ra = 0x632
126186: 0a 64                    ecalli 100 // 'log'
126188: 01                       fallthrough
      :                          @9526 [@dyn 793]
126189: 82 1c 60                 a5 = u64 [sp + 0x60]
126192: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
126197: 55 38 00 00 f0 0a        jump @9528 if a1 >=u 4293918720
      :                          @9527
126203: 28 f0 f4 00              jump @12862
      :                          @9528
126207: 33 07 b0 02 03           a0 = 0x302b0
126212: 95 77 00 00 10           a0 = a0 + 0x100000
126217: 01                       fallthrough
      :                          @9529
126218: 82 78                    a1 = u64 [a0]
126220: c9 87 09                 a2 = a0 - a1
126223: aa 69 07                 jump @9531 if a2 == s1
      :                          @9530
126226: 28 d9 f4 00              jump @12862
      :                          @9531
126230: c9 c8 09                 a2 = a1 - a5
126233: 01                       fallthrough
      :                          @9532
126234: 82 7a                    a3 = u64 [a0]
126236: ab 8a ee                 jump @9529 if a3 != a1
      :                          @9533
126239: 7b 79                    u64 [a0] = a2
126241: 33 0b                    a4 = 0
126243: 01                       fallthrough
      :                          @9534
126244: ab 8a e6                 jump @9529 if a3 != a1
      :                          @9535
126247: 28 c4 f4 00              jump @12862
      :                          @9536 [@dyn 794]
126251: 3a 08 70 02 03           a1 = u64 [0x30270]
126256: 97 89 0d                 a2 = a1 << 0xd
126259: d3 98 08                 a1 = a1 ^ a2
126262: 98 89 07                 a2 = a1 >> 0x7
126265: d3 98 08                 a1 = a1 ^ a2
126268: 97 89 11                 a2 = a1 << 0x11
126271: d3 98 08                 a1 = a1 ^ a2
126274: 3a 09 58 01 03           a2 = u64 [0x30158]
126279: 3a 0a 60 01 03           a3 = u64 [0x30160]
126284: 3e 08 70 02 03           u64 [0x30270] = a1
126289: ca 98 07                 a0 = a1 * a2
126292: 98 78 03                 a1 = a0 >> 0x3
126295: d6 a8 08                 a1 = a1 mulhu a3
126298: 98 88 04                 a1 = a1 >> 0x4
126301: 96 88 e8 03              a1 = a1 * 0x3e8
126305: c9 87 07                 a0 = a0 - a1
126308: 95 77 03                 a0 = a0 + 0x3
126311: 86 77 01                 a0 = a0 | 0x1
126314: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
126318: 33 00 36 06              ra = 0x636
126322: 95 11 a0                 sp = sp + 0xffffffffffffffa0
126325: 7b 10 58                 u64 [sp + 0x58] = ra
126328: 7b 15 50                 u64 [sp + 0x50] = s0
126331: 7b 16 48                 u64 [sp + 0x48] = s1
126334: 7b 17 18                 u64 [sp + 0x18] = a0
126337: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
126340: 95 17 30                 a0 = sp + 0x30
126343: 7b 18 28                 u64 [sp + 0x28] = a1
126346: 33 00 b8 03              ra = 0x3b8
126350: 28 eb 38 ff              jump @5877
      :                          @9537 [@dyn 795]
126354: 78 17 10 01              u8 [sp + 0x110] = a0
126358: 95 17 d0 01              a0 = sp + 0x1d0
126362: 7b 17 28 02              u64 [sp + 0x228] = a0
126366: 33 07 28 0c              a0 = 0xc28
126370: 7b 17 30 02              u64 [sp + 0x230] = a0
126374: 95 17 10 01              a0 = sp + 0x110
126378: 7b 17 38 02              u64 [sp + 0x238] = a0
126382: 33 07 80 0c              a0 = 0xc80
126386: 7b 17 40 02              u64 [sp + 0x240] = a0
126390: 33 07 10 10 01           a0 = 0x11010
126395: 7b 17 80 02              u64 [sp + 0x280] = a0
126399: 49 21 88 02 02           u64 [sp + 648] = 0x2
126404: 49 21 a0 02              u64 [sp + 672] = 0
126408: 95 18 28 02              a1 = sp + 0x228
126412: 7b 18 90 02              u64 [sp + 0x290] = a1
126416: 49 21 98 02 02           u64 [sp + 664] = 0x2
126421: 95 17 f8 01              a0 = sp + 0x1f8
126425: 95 18 80 02              a1 = sp + 0x280
126429: 50 20 38 06 6a 61 fe     ra = 1592, jump @1491
      :                          @9538 [@dyn 796]
126436: 82 16 00 02              s1 = u64 [sp + 0x200]
126440: 82 1b 08 02              a4 = u64 [sp + 0x208]
126444: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
126448: 7b 17 60                 u64 [sp + 0x60] = a0
126451: 33 07 02                 a0 = 0x2
126454: 33 08                    a1 = 0
126456: 33 09                    a2 = 0
126458: 64 6a                    a3 = s1
126460: 33 00 3a 06              ra = 0x63a
126464: 0a 64                    ecalli 100 // 'log'
126466: 01                       fallthrough
      :                          @9539 [@dyn 797]
126467: 82 1c 60                 a5 = u64 [sp + 0x60]
126470: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
126475: 55 38 00 00 f0 0a        jump @9541 if a1 >=u 4293918720
      :                          @9540
126481: 28 da f3 00              jump @12862
      :                          @9541
126485: 33 07 b0 02 03           a0 = 0x302b0
126490: 95 77 00 00 10           a0 = a0 + 0x100000
126495: 01                       fallthrough
      :                          @9542
126496: 82 78                    a1 = u64 [a0]
126498: c9 87 09                 a2 = a0 - a1
126501: aa 69 07                 jump @9544 if a2 == s1
      :                          @9543
126504: 28 c3 f3 00              jump @12862
      :                          @9544
126508: c9 c8 09                 a2 = a1 - a5
126511: 01                       fallthrough
      :                          @9545
126512: 82 7a                    a3 = u64 [a0]
126514: ab 8a ee                 jump @9542 if a3 != a1
      :                          @9546
126517: 7b 79                    u64 [a0] = a2
126519: 33 0b                    a4 = 0
126521: 01                       fallthrough
      :                          @9547
126522: ab 8a e6                 jump @9542 if a3 != a1
      :                          @9548
126525: 28 ae f3 00              jump @12862
      :                          @9549 [@dyn 798]
126529: 33 00 3e 06              ra = 0x63e
126533: 95 11 f0                 sp = sp + 0xfffffffffffffff0
126536: 7b 15 08                 u64 [sp + 0x8] = s0
126539: 3a 07 70 02 03           a0 = u64 [0x30270]
126544: 97 79 0d                 a2 = a0 << 0xd
126547: d3 97 07                 a0 = a0 ^ a2
126550: 98 79 07                 a2 = a0 >> 0x7
126553: d3 97 07                 a0 = a0 ^ a2
126556: 97 79 11                 a2 = a0 << 0x11
126559: d3 79 02                 t0 = a2 ^ a0
126562: 3e 02 70 02 03           u64 [0x30270] = t0
126567: 3a 07 70 02 03           a0 = u64 [0x30270]
126572: 3a 03 e0 00 03           t1 = u64 [0x300e0]
126577: 97 7a 0d                 a3 = a0 << 0xd
126580: d3 a7 07                 a0 = a0 ^ a3
126583: 98 7a 07                 a3 = a0 >> 0x7
126586: d3 a7 07                 a0 = a0 ^ a3
126589: 97 7a 11                 a3 = a0 << 0x11
126592: d3 a7 07                 a0 = a0 ^ a3
126595: 3a 0a e8 00 03           a3 = u64 [0x300e8]
126600: ca 37 0b                 a4 = a0 * t1
126603: 3e 07 70 02 03           u64 [0x30270] = a0
126608: d6 ab 07                 a0 = a4 mulhu a3
126611: c9 7b 08                 a1 = a4 - a0
126614: 98 88 01                 a1 = a1 >> 0x1
126617: c8 87 07                 a0 = a0 + a1
126620: 98 77 04                 a0 = a0 >> 0x4
126623: 33 08 15                 a1 = 0x15
126626: ca 87 07                 a0 = a0 * a1
126629: c9 7b 0a                 a3 = a4 - a0
126632: 95 aa 01                 a3 = a3 + 0x1
126635: 3a 0b f0 00 03           a4 = u64 [0x300f0]
126640: 33 05 01                 s0 = 0x1
126643: 33 0c 05                 a5 = 0x5
126646: 33 04 17                 t2 = 0x17
126649: 28 85 3b ff              jump @5972
      :                          @9550 [@dyn 799]
126653: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
126657: 95 17 d0 01              a0 = sp + 0x1d0
126661: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
126665: 33 07 28 0c              a0 = 0xc28
126669: 7b 17 00 02              u64 [sp + 0x200] = a0
126673: 33 07 48 30 01           a0 = 0x13048
126678: 7b 17 80 02              u64 [sp + 0x280] = a0
126682: 49 21 88 02 01           u64 [sp + 648] = 0x1
126687: 49 21 a0 02              u64 [sp + 672] = 0
126691: 95 18 f8 01              a1 = sp + 0x1f8
126695: 7b 18 90 02              u64 [sp + 0x290] = a1
126699: 49 21 98 02 01           u64 [sp + 664] = 0x1
126704: 95 17 28 02              a0 = sp + 0x228
126708: 95 18 80 02              a1 = sp + 0x280
126712: 50 20 40 06 4f 60 fe     ra = 1600, jump @1491
      :                          @9551 [@dyn 800]
126719: 82 16 30 02              s1 = u64 [sp + 0x230]
126723: 82 1b 38 02              a4 = u64 [sp + 0x238]
126727: 82 17 28 02              a0 = u64 [sp + 0x228]
126731: 7b 17 60                 u64 [sp + 0x60] = a0
126734: 33 07 02                 a0 = 0x2
126737: 33 08                    a1 = 0
126739: 33 09                    a2 = 0
126741: 64 6a                    a3 = s1
126743: 33 00 42 06              ra = 0x642
126747: 0a 64                    ecalli 100 // 'log'
126749: 01                       fallthrough
      :                          @9552 [@dyn 801]
126750: 82 1c 60                 a5 = u64 [sp + 0x60]
126753: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
126758: 55 38 00 00 f0 0a        jump @9554 if a1 >=u 4293918720
      :                          @9553
126764: 28 bf f2 00              jump @12862
      :                          @9554
126768: 33 07 b0 02 03           a0 = 0x302b0
126773: 95 77 00 00 10           a0 = a0 + 0x100000
126778: 01                       fallthrough
      :                          @9555
126779: 82 78                    a1 = u64 [a0]
126781: c9 87 09                 a2 = a0 - a1
126784: aa 69 07                 jump @9557 if a2 == s1
      :                          @9556
126787: 28 a8 f2 00              jump @12862
      :                          @9557
126791: c9 c8 09                 a2 = a1 - a5
126794: 01                       fallthrough
      :                          @9558
126795: 82 7a                    a3 = u64 [a0]
126797: ab 8a ee                 jump @9555 if a3 != a1
      :                          @9559
126800: 7b 79                    u64 [a0] = a2
126802: 33 0b                    a4 = 0
126804: 01                       fallthrough
      :                          @9560
126805: ab 8a e6                 jump @9555 if a3 != a1
      :                          @9561
126808: 28 93 f2 00              jump @12862
      :                          @9562 [@dyn 802]
126812: 3a 08 70 02 03           a1 = u64 [0x30270]
126817: 97 89 0d                 a2 = a1 << 0xd
126820: d3 98 08                 a1 = a1 ^ a2
126823: 98 89 07                 a2 = a1 >> 0x7
126826: d3 98 08                 a1 = a1 ^ a2
126829: 97 89 11                 a2 = a1 << 0x11
126832: d3 98 08                 a1 = a1 ^ a2
126835: 3a 09 58 01 03           a2 = u64 [0x30158]
126840: 3a 0a 60 01 03           a3 = u64 [0x30160]
126845: 3e 08 70 02 03           u64 [0x30270] = a1
126850: ca 98 07                 a0 = a1 * a2
126853: 98 78 03                 a1 = a0 >> 0x3
126856: d6 a8 08                 a1 = a1 mulhu a3
126859: 98 88 04                 a1 = a1 >> 0x4
126862: 96 88 e8 03              a1 = a1 * 0x3e8
126866: c9 87 08                 a1 = a0 - a1
126869: 7b 18 10 01              u64 [sp + 0x110] = a1
126873: 95 17 d0 01              a0 = sp + 0x1d0
126877: 95 16 d0 01              s1 = sp + 0x1d0
126881: 33 00 46 06              ra = 0x646
126885: 95 11 b8                 sp = sp + 0xffffffffffffffb8
126888: 7b 10 40                 u64 [sp + 0x40] = ra
126891: 7b 15 38                 u64 [sp + 0x38] = s0
126894: 7b 16 30                 u64 [sp + 0x30] = s1
126897: 64 74                    t2 = a0
126899: 33 07 b0 02 03           a0 = 0x302b0
126904: 33 03 b0 02 03           t1 = 0x302b0
126909: 33 02 00 00 10           t0 = 0x100000
126914: c8 23 0a                 a3 = t1 + t0
126917: 28 21 3b ff              jump @5979
      :                          @9563 [@dyn 803]
126921: 95 17 10 01              a0 = sp + 0x110
126925: 7b 17 28 02              u64 [sp + 0x228] = a0
126929: 33 07 28 0c              a0 = 0xc28
126933: 7b 17 30 02              u64 [sp + 0x230] = a0
126937: 7b 16 38 02              u64 [sp + 0x238] = s1
126941: 33 07 10 02              a0 = 0x210
126945: 7b 17 40 02              u64 [sp + 0x240] = a0
126949: 33 07 38 10 01           a0 = 0x11038
126954: 7b 17 80 02              u64 [sp + 0x280] = a0
126958: 49 21 88 02 02           u64 [sp + 648] = 0x2
126963: 49 21 a0 02              u64 [sp + 672] = 0
126967: 95 18 28 02              a1 = sp + 0x228
126971: 7b 18 90 02              u64 [sp + 0x290] = a1
126975: 49 21 98 02 02           u64 [sp + 664] = 0x2
126980: 95 17 f8 01              a0 = sp + 0x1f8
126984: 95 18 80 02              a1 = sp + 0x280
126988: 50 20 48 06 3b 5f fe     ra = 1608, jump @1491
      :                          @9564 [@dyn 804]
126995: 82 16 00 02              s1 = u64 [sp + 0x200]
126999: 82 1b 08 02              a4 = u64 [sp + 0x208]
127003: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
127007: 7b 17 60                 u64 [sp + 0x60] = a0
127010: 33 07 02                 a0 = 0x2
127013: 33 08                    a1 = 0
127015: 33 09                    a2 = 0
127017: 64 6a                    a3 = s1
127019: 33 00 4a 06              ra = 0x64a
127023: 0a 64                    ecalli 100 // 'log'
127025: 01                       fallthrough
      :                          @9565 [@dyn 805]
127026: 82 1c 60                 a5 = u64 [sp + 0x60]
127029: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
127034: 53 38 00 00 f0 25        jump @9571 if a1 <u 4293918720
      :                          @9566
127040: 33 07 b0 02 03           a0 = 0x302b0
127045: 95 77 00 00 10           a0 = a0 + 0x100000
127050: 01                       fallthrough
      :                          @9567
127051: 82 78                    a1 = u64 [a0]
127053: c9 87 09                 a2 = a0 - a1
127056: ab 69 0f                 jump @9571 if a2 != s1
      :                          @9568
127059: c9 c8 09                 a2 = a1 - a5
127062: 01                       fallthrough
      :                          @9569
127063: 82 7a                    a3 = u64 [a0]
127065: ab 8a f2                 jump @9567 if a3 != a1
      :                          @9570
127068: 7b 79                    u64 [a0] = a2
127070: 01                       fallthrough
      :                          @9571
127071: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
127075: 52 08 07                 jump @9573 if a1 != 0
      :                          @9572
127078: 28 85 f1 00              jump @12862
      :                          @9573
127082: 54 38 00 00 01 0a        jump @9575 if a1 <=u 65536
      :                          @9574
127088: 28 7b f1 00              jump @12862
      :                          @9575
127092: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
127096: 97 88 04                 a1 = a1 << 0x4
127099: 33 09 b0 02 03           a2 = 0x302b0
127104: 95 99 00 00 10           a2 = a2 + 0x100000
127109: 01                       fallthrough
      :                          @9576
127110: 82 9a                    a3 = u64 [a2]
127112: c9 a9 0b                 a4 = a2 - a3
127115: aa 7b 07                 jump @9578 if a4 == a0
      :                          @9577
127118: 28 5d f1 00              jump @12862
      :                          @9578
127122: c9 8a 0b                 a4 = a3 - a1
127125: 01                       fallthrough
      :                          @9579
127126: 82 9c                    a5 = u64 [a2]
127128: ab ac ee                 jump @9576 if a5 != a3
      :                          @9580
127131: 7b 9b                    u64 [a2] = a4
127133: 33 06                    s1 = 0
127135: 01                       fallthrough
      :                          @9581
127136: ab ac e6                 jump @9576 if a5 != a3
      :                          @9582
127139: 28 48 f1 00              jump @12862
      :                          @9583 [@dyn 806]
127143: 3a 08 70 02 03           a1 = u64 [0x30270]
127148: 97 89 0d                 a2 = a1 << 0xd
127151: d3 98 08                 a1 = a1 ^ a2
127154: 98 89 07                 a2 = a1 >> 0x7
127157: d3 98 08                 a1 = a1 ^ a2
127160: 97 89 11                 a2 = a1 << 0x11
127163: d3 89 09                 a2 = a2 ^ a1
127166: 3e 09 70 02 03           u64 [0x30270] = a2
127171: 87 87 1d dd              i32 a0 = a1 * 0xffffffffffffdd1d
127175: 97 78 38                 a1 = a0 << 0x38
127178: 98 88 39                 a1 = a1 >> 0x39
127181: 98 77 01                 a0 = a0 >> 0x1
127184: 84 77 80 00              a0 = a0 & 0x80
127188: d4 87 07                 a0 = a0 | a1
127191: 78 17 10 01              u8 [sp + 0x110] = a0
127195: 95 17 10 01              a0 = sp + 0x110
127199: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
127203: 33 07 86 0c              a0 = 0xc86
127207: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
127211: 49 21 80 02 02           u64 [sp + 640] = 0x2
127216: 49 21 90 02              u64 [sp + 656] = 0
127220: 49 21 98 02 02           u64 [sp + 664] = 0x2
127225: 49 21 a0 02              u64 [sp + 672] = 0
127229: 14 08 20 00 00 00 08 00 00 00 a1 = 0x800000020
127239: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
127243: 46 21 b0 02 03           u8 [sp + 688] = 0x3
127248: 33 08 60 10 01           a1 = 0x11060
127253: 7b 18 28 02              u64 [sp + 0x228] = a1
127257: 49 21 30 02 01           u64 [sp + 560] = 0x1
127262: 95 18 80 02              a1 = sp + 0x280
127266: 7b 18 48 02              u64 [sp + 0x248] = a1
127270: 49 21 50 02 01           u64 [sp + 592] = 0x1
127275: 95 18 d0 01              a1 = sp + 0x1d0
127279: 7b 18 38 02              u64 [sp + 0x238] = a1
127283: 49 21 40 02 01           u64 [sp + 576] = 0x1
127288: 95 17 f8 01              a0 = sp + 0x1f8
127292: 95 18 28 02              a1 = sp + 0x228
127296: 50 20 4e 06 07 5e fe     ra = 1614, jump @1491
      :                          @9584 [@dyn 807]
127303: 82 16 00 02              s1 = u64 [sp + 0x200]
127307: 82 1b 08 02              a4 = u64 [sp + 0x208]
127311: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
127315: 7b 17 60                 u64 [sp + 0x60] = a0
127318: 33 07 02                 a0 = 0x2
127321: 33 08                    a1 = 0
127323: 33 09                    a2 = 0
127325: 64 6a                    a3 = s1
127327: 33 00 50 06              ra = 0x650
127331: 0a 64                    ecalli 100 // 'log'
127333: 01                       fallthrough
      :                          @9585 [@dyn 808]
127334: 82 1c 60                 a5 = u64 [sp + 0x60]
127337: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
127342: 55 38 00 00 f0 0a        jump @9587 if a1 >=u 4293918720
      :                          @9586
127348: 28 77 f0 00              jump @12862
      :                          @9587
127352: 33 07 b0 02 03           a0 = 0x302b0
127357: 95 77 00 00 10           a0 = a0 + 0x100000
127362: 01                       fallthrough
      :                          @9588
127363: 82 78                    a1 = u64 [a0]
127365: c9 87 09                 a2 = a0 - a1
127368: aa 69 07                 jump @9590 if a2 == s1
      :                          @9589
127371: 28 60 f0 00              jump @12862
      :                          @9590
127375: c9 c8 09                 a2 = a1 - a5
127378: 01                       fallthrough
      :                          @9591
127379: 82 7a                    a3 = u64 [a0]
127381: ab 8a ee                 jump @9588 if a3 != a1
      :                          @9592
127384: 7b 79                    u64 [a0] = a2
127386: 33 0b                    a4 = 0
127388: 01                       fallthrough
      :                          @9593
127389: ab 8a e6                 jump @9588 if a3 != a1
      :                          @9594
127392: 28 4b f0 00              jump @12862
      :                          @9595 [@dyn 809]
127396: 3a 03 58 01 03           t1 = u64 [0x30158]
127401: 33 08 70 02 03           a1 = 0x30270
127406: 3a 09 d0 01 03           a2 = u64 [0x301d0]
127411: 33 0a a5 98 0f           a3 = 0xf98a5
127416: 33 02 01                 t0 = 0x1
127419: 01                       fallthrough
      :                          @9596
127420: 3a 07 70 02 03           a0 = u64 [0x30270]
127425: 97 7b 0d                 a4 = a0 << 0xd
127428: d3 b7 07                 a0 = a0 ^ a4
127431: 98 7b 07                 a4 = a0 >> 0x7
127434: d3 b7 07                 a0 = a0 ^ a4
127437: 97 7b 11                 a4 = a0 << 0x11
127440: d3 b7 07                 a0 = a0 ^ a4
127443: 3e 07 70 02 03           u64 [0x30270] = a0
127448: ca 37 07                 a0 = a0 * t1
127451: d6 97 0b                 a4 = a0 mulhu a2
127454: 98 bb 13                 a4 = a4 >> 0x13
127457: ca ab 0b                 a4 = a4 * a3
127460: c9 b7 07                 a0 = a0 - a4
127463: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
127467: 64 7b                    a4 = a0
127469: 64 ac                    a5 = a3
127471: 01                       fallthrough
      :                          @9597
127472: 64 c6                    s1 = a5
127474: cd cb 0c                 a5 = a4 %u a5
127477: 64 6b                    a4 = s1
127479: 52 0c f9                 jump @9597 if a5 != 0
      :                          @9598
127482: ab 26 c2                 jump @9596 if s1 != t0
      :                          @9599
127485: 3a 08 d0 01 03           a1 = u64 [0x301d0]
127490: ca 77 07                 a0 = a0 * a0
127493: d6 87 08                 a1 = a0 mulhu a1
127496: 98 88 13                 a1 = a1 >> 0x13
127499: 96 88 a5 98 0f           a1 = a1 * 0xf98a5
127504: c9 87 07                 a0 = a0 - a1
127507: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
127511: 95 17 d0 01              a0 = sp + 0x1d0
127515: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
127519: 33 07 28 0c              a0 = 0xc28
127523: 7b 17 00 02              u64 [sp + 0x200] = a0
127527: 33 07 80 10 01           a0 = 0x11080
127532: 7b 17 80 02              u64 [sp + 0x280] = a0
127536: 49 21 88 02 01           u64 [sp + 648] = 0x1
127541: 49 21 a0 02              u64 [sp + 672] = 0
127545: 95 18 f8 01              a1 = sp + 0x1f8
127549: 7b 18 90 02              u64 [sp + 0x290] = a1
127553: 49 21 98 02 01           u64 [sp + 664] = 0x1
127558: 95 17 28 02              a0 = sp + 0x228
127562: 95 18 80 02              a1 = sp + 0x280
127566: 50 20 54 06 f9 5c fe     ra = 1620, jump @1491
      :                          @9600 [@dyn 810]
127573: 82 16 30 02              s1 = u64 [sp + 0x230]
127577: 82 1b 38 02              a4 = u64 [sp + 0x238]
127581: 82 17 28 02              a0 = u64 [sp + 0x228]
127585: 7b 17 60                 u64 [sp + 0x60] = a0
127588: 33 07 02                 a0 = 0x2
127591: 33 08                    a1 = 0
127593: 33 09                    a2 = 0
127595: 64 6a                    a3 = s1
127597: 33 00 56 06              ra = 0x656
127601: 0a 64                    ecalli 100 // 'log'
127603: 01                       fallthrough
      :                          @9601 [@dyn 811]
127604: 82 1c 60                 a5 = u64 [sp + 0x60]
127607: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
127612: 55 38 00 00 f0 0a        jump @9603 if a1 >=u 4293918720
      :                          @9602
127618: 28 69 ef 00              jump @12862
      :                          @9603
127622: 33 07 b0 02 03           a0 = 0x302b0
127627: 95 77 00 00 10           a0 = a0 + 0x100000
127632: 01                       fallthrough
      :                          @9604
127633: 82 78                    a1 = u64 [a0]
127635: c9 87 09                 a2 = a0 - a1
127638: aa 69 07                 jump @9606 if a2 == s1
      :                          @9605
127641: 28 52 ef 00              jump @12862
      :                          @9606
127645: c9 c8 09                 a2 = a1 - a5
127648: 01                       fallthrough
      :                          @9607
127649: 82 7a                    a3 = u64 [a0]
127651: ab 8a ee                 jump @9604 if a3 != a1
      :                          @9608
127654: 7b 79                    u64 [a0] = a2
127656: 33 0b                    a4 = 0
127658: 01                       fallthrough
      :                          @9609
127659: ab 8a e6                 jump @9604 if a3 != a1
      :                          @9610
127662: 28 3d ef 00              jump @12862
      :                          @9611 [@dyn 812]
127666: 3a 08 70 02 03           a1 = u64 [0x30270]
127671: 97 89 0d                 a2 = a1 << 0xd
127674: d3 98 08                 a1 = a1 ^ a2
127677: 98 89 07                 a2 = a1 >> 0x7
127680: 3a 0a 58 01 03           a3 = u64 [0x30158]
127685: d3 98 08                 a1 = a1 ^ a2
127688: 97 89 11                 a2 = a1 << 0x11
127691: d3 98 08                 a1 = a1 ^ a2
127694: ca a8 09                 a2 = a1 * a3
127697: 3e 08 70 02 03           u64 [0x30270] = a1
127702: 7b 19 b8 01              u64 [sp + 0x1b8] = a2
127706: 3a 08 70 02 03           a1 = u64 [0x30270]
127711: 97 89 0d                 a2 = a1 << 0xd
127714: d3 98 08                 a1 = a1 ^ a2
127717: 98 89 07                 a2 = a1 >> 0x7
127720: d3 98 08                 a1 = a1 ^ a2
127723: 97 89 11                 a2 = a1 << 0x11
127726: d3 98 08                 a1 = a1 ^ a2
127729: 3e 08 70 02 03           u64 [0x30270] = a1
127734: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
127738: ca a8 08                 a1 = a1 * a3
127741: d3 78 08                 a1 = a1 ^ a0
127744: 7b 18 10 01              u64 [sp + 0x110] = a1
127748: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
127752: 95 17 b8 01              a0 = sp + 0x1b8
127756: 7b 17 80 02              u64 [sp + 0x280] = a0
127760: 33 07 28 0c              a0 = 0xc28
127764: 7b 17 88 02              u64 [sp + 0x288] = a0
127768: 95 18 10 01              a1 = sp + 0x110
127772: 7b 18 90 02              u64 [sp + 0x290] = a1
127776: 7b 17 98 02              u64 [sp + 0x298] = a0
127780: 95 18 d0 01              a1 = sp + 0x1d0
127784: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
127788: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
127792: 33 07 a8 10 01           a0 = 0x110a8
127797: 7b 17 28 02              u64 [sp + 0x228] = a0
127801: 49 21 30 02 03           u64 [sp + 560] = 0x3
127806: 49 21 48 02              u64 [sp + 584] = 0
127810: 95 18 80 02              a1 = sp + 0x280
127814: 7b 18 38 02              u64 [sp + 0x238] = a1
127818: 49 21 40 02 03           u64 [sp + 576] = 0x3
127823: 95 17 f8 01              a0 = sp + 0x1f8
127827: 95 18 28 02              a1 = sp + 0x228
127831: 50 20 5a 06 f0 5b fe     ra = 1626, jump @1491
      :                          @9612 [@dyn 813]
127838: 82 16 00 02              s1 = u64 [sp + 0x200]
127842: 82 1b 08 02              a4 = u64 [sp + 0x208]
127846: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
127850: 7b 17 60                 u64 [sp + 0x60] = a0
127853: 33 07 02                 a0 = 0x2
127856: 33 08                    a1 = 0
127858: 33 09                    a2 = 0
127860: 64 6a                    a3 = s1
127862: 33 00 5c 06              ra = 0x65c
127866: 0a 64                    ecalli 100 // 'log'
127868: 01                       fallthrough
      :                          @9613 [@dyn 814]
127869: 82 1c 60                 a5 = u64 [sp + 0x60]
127872: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
127877: 55 38 00 00 f0 0a        jump @9615 if a1 >=u 4293918720
      :                          @9614
127883: 28 60 ee 00              jump @12862
      :                          @9615
127887: 33 07 b0 02 03           a0 = 0x302b0
127892: 95 77 00 00 10           a0 = a0 + 0x100000
127897: 01                       fallthrough
      :                          @9616
127898: 82 78                    a1 = u64 [a0]
127900: c9 87 09                 a2 = a0 - a1
127903: aa 69 07                 jump @9618 if a2 == s1
      :                          @9617
127906: 28 49 ee 00              jump @12862
      :                          @9618
127910: c9 c8 09                 a2 = a1 - a5
127913: 01                       fallthrough
      :                          @9619
127914: 82 7a                    a3 = u64 [a0]
127916: ab 8a ee                 jump @9616 if a3 != a1
      :                          @9620
127919: 7b 79                    u64 [a0] = a2
127921: 33 0b                    a4 = 0
127923: 01                       fallthrough
      :                          @9621
127924: ab 8a e6                 jump @9616 if a3 != a1
      :                          @9622
127927: 28 34 ee 00              jump @12862
      :                          @9623 [@dyn 815]
127931: 3a 06 58 01 03           s1 = u64 [0x30158]
127936: 95 17 d0 01              a0 = sp + 0x1d0
127940: 33 00 60 06              ra = 0x660
127944: 95 11 a8                 sp = sp + 0xffffffffffffffa8
127947: 7b 10 50                 u64 [sp + 0x50] = ra
127950: 7b 15 48                 u64 [sp + 0x48] = s0
127953: 7b 16 40                 u64 [sp + 0x40] = s1
127956: 7b 17                    u64 [sp] = a0
127958: 33 06 b0 02 03           s1 = 0x302b0
127963: 33 02 00 00 10           t0 = 0x100000
127968: c8 26 09                 a2 = s1 + t0
127971: 28 bf 82 fe              jump @2185
      :                          @9624 [@dyn 816]
127975: 3a 07 70 02 03           a0 = u64 [0x30270]
127980: 97 78 0d                 a1 = a0 << 0xd
127983: d3 87 07                 a0 = a0 ^ a1
127986: 98 78 07                 a1 = a0 >> 0x7
127989: d3 87 07                 a0 = a0 ^ a1
127992: 97 78 11                 a1 = a0 << 0x11
127995: d3 87 07                 a0 = a0 ^ a1
127998: 3a 0a e8 01 03           a3 = u64 [0x301e8]
128003: ca 67 0c                 a5 = a0 * s1
128006: 3e 07 70 02 03           u64 [0x30270] = a0
128011: d6 ac 07                 a0 = a5 mulhu a3
128014: 98 77 03                 a0 = a0 >> 0x3
128017: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
128021: 96 77 1a                 a0 = a0 * 0x1a
128024: c9 7c 07                 a0 = a5 - a0
128027: ac 87 07                 jump @9626 if a0 <u a1
      :                          @9625
128030: 28 29 ff 00              jump @13215
      :                          @9626
128034: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
128038: 97 77 02                 a0 = a0 << 0x2
128041: c8 87 07                 a0 = a0 + a1
128044: 81 77                    a0 = i32 [a0]
128046: 7a 17 a0 01              u32 [sp + 0x1a0] = a0
128050: 3a 07 70 02 03           a0 = u64 [0x30270]
128055: 97 78 0d                 a1 = a0 << 0xd
128058: d3 87 07                 a0 = a0 ^ a1
128061: 98 78 07                 a1 = a0 >> 0x7
128064: d3 87 07                 a0 = a0 ^ a1
128067: 97 78 11                 a1 = a0 << 0x11
128070: d3 87 07                 a0 = a0 ^ a1
128073: ca 67 08                 a1 = a0 * s1
128076: 3e 07 70 02 03           u64 [0x30270] = a0
128081: d6 a8 07                 a0 = a1 mulhu a3
128084: 98 77 03                 a0 = a0 >> 0x3
128087: 96 79 1a                 a2 = a0 * 0x1a
128090: 80 17 a0 01              a0 = u32 [sp + 0x1a0]
128094: c9 98 08                 a1 = a1 - a2
128097: 84 79 df ff 1f           a2 = a0 & 0x1fffdf
128102: 95 9a bf                 a3 = a2 + 0xffffffffffffffbf
128105: 78 18 00 01              u8 [sp + 0x100] = a1
128109: 56 1a 19 37              jump @9628 if a3 >u 25
      :                          @9627
128113: 88 7a 61                 a3 = a0 <u 0x61
128116: 33 0c bf                 a5 = 0xffffffffffffffbf
128119: 93 ac 9f                 a5 = 0xffffffffffffff9f if a3 == 0
128122: 33 06 41                 s1 = 0x41
128125: 93 a6 61                 s1 = 0x61 if a3 == 0
128128: c8 c7 07                 a0 = a0 + a5
128131: c8 87 07                 a0 = a0 + a1
128134: 84 7a ff 00              a3 = a0 & 0xff
128138: 96 aa 4f                 a3 = a3 * 0x4f
128141: 98 aa 0b                 a3 = a3 >> 0xb
128144: 96 aa 1a                 a3 = a3 * 0x1a
128147: c8 67 07                 a0 = a0 + s1
128150: bf a7 0a                 i32 a3 = a0 - a3
128153: 84 a7 ff 00              a0 = a3 & 0xff
128157: 84 aa 5f                 a3 = a3 & 0x5f
128160: 95 aa bf                 a3 = a3 + 0xffffffffffffffbf
128163: 01                       fallthrough
      :                          @9628
128164: 7a 17 b8 01              u32 [sp + 0x1b8] = a0
128168: 56 1a 19 40              jump @9630 if a3 >u 25
      :                          @9629
128172: 84 89 ff 00              a2 = a1 & 0xff
128176: 33 02 1a                 t0 = 0x1a
128179: c9 82 08                 a1 = t0 - a1
128182: 88 7b 61                 a4 = a0 <u 0x61
128185: 33 06 bf                 s1 = 0xffffffffffffffbf
128188: 93 b6 9f                 s1 = 0xffffffffffffff9f if a4 == 0
128191: 33 0c 61                 a5 = 0x61
128194: 33 0a 41                 a3 = 0x41
128197: da bc 0a                 a3 = a5 if a4 == 0
128200: 93 98                    a1 = 0 if a2 == 0
128202: c8 67 07                 a0 = a0 + s1
128205: c8 87 07                 a0 = a0 + a1
128208: 84 78 ff 00              a1 = a0 & 0xff
128212: 96 88 4f                 a1 = a1 * 0x4f
128215: 98 88 0b                 a1 = a1 >> 0xb
128218: ca 28 08                 a1 = a1 * t0
128221: c8 a7 07                 a0 = a0 + a3
128224: bf 87 07                 i32 a0 = a0 - a1
128227: 84 77 ff 00              a0 = a0 & 0xff
128231: 01                       fallthrough
      :                          @9630
128232: 7a 17 10 01              u32 [sp + 0x110] = a0
128236: 95 17 a0 01              a0 = sp + 0x1a0
128240: 7b 17 80 02              u64 [sp + 0x280] = a0
128244: 33 07 82 0c              a0 = 0xc82
128248: 7b 17 88 02              u64 [sp + 0x288] = a0
128252: 95 18 00 01              a1 = sp + 0x100
128256: 7b 18 90 02              u64 [sp + 0x290] = a1
128260: 33 08 5c 0c              a1 = 0xc5c
128264: 7b 18 98 02              u64 [sp + 0x298] = a1
128268: 95 18 b8 01              a1 = sp + 0x1b8
128272: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
128276: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
128280: 95 18 10 01              a1 = sp + 0x110
128284: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
128288: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
128292: 33 07 e0 10 01           a0 = 0x110e0
128297: 7b 17 28 02              u64 [sp + 0x228] = a0
128301: 49 21 30 02 04           u64 [sp + 560] = 0x4
128306: 49 21 48 02              u64 [sp + 584] = 0
128310: 95 18 80 02              a1 = sp + 0x280
128314: 7b 18 38 02              u64 [sp + 0x238] = a1
128318: 49 21 40 02 04           u64 [sp + 576] = 0x4
128323: 95 17 f8 01              a0 = sp + 0x1f8
128327: 95 18 28 02              a1 = sp + 0x228
128331: 50 20 62 06 fc 59 fe     ra = 1634, jump @1491
      :                          @9631 [@dyn 817]
128338: 82 16 00 02              s1 = u64 [sp + 0x200]
128342: 82 1b 08 02              a4 = u64 [sp + 0x208]
128346: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
128350: 7b 17 60                 u64 [sp + 0x60] = a0
128353: 33 07 02                 a0 = 0x2
128356: 33 08                    a1 = 0
128358: 33 09                    a2 = 0
128360: 64 6a                    a3 = s1
128362: 33 00 64 06              ra = 0x664
128366: 0a 64                    ecalli 100 // 'log'
128368: 01                       fallthrough
      :                          @9632 [@dyn 818]
128369: 82 1c 60                 a5 = u64 [sp + 0x60]
128372: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
128377: 53 38 00 00 f0 25        jump @9638 if a1 <u 4293918720
      :                          @9633
128383: 33 07 b0 02 03           a0 = 0x302b0
128388: 95 77 00 00 10           a0 = a0 + 0x100000
128393: 01                       fallthrough
      :                          @9634
128394: 82 78                    a1 = u64 [a0]
128396: c9 87 09                 a2 = a0 - a1
128399: ab 69 0f                 jump @9638 if a2 != s1
      :                          @9635
128402: c9 c8 09                 a2 = a1 - a5
128405: 01                       fallthrough
      :                          @9636
128406: 82 7a                    a3 = u64 [a0]
128408: ab 8a f2                 jump @9634 if a3 != a1
      :                          @9637
128411: 7b 79                    u64 [a0] = a2
128413: 01                       fallthrough
      :                          @9638
128414: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
128418: 52 08 07                 jump @9640 if a1 != 0
      :                          @9639
128421: 28 46 ec 00              jump @12862
      :                          @9640
128425: 54 38 00 00 04 0a        jump @9642 if a1 <=u 262144
      :                          @9641
128431: 28 3c ec 00              jump @12862
      :                          @9642
128435: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
128439: 97 88 02                 a1 = a1 << 0x2
128442: 33 09 b0 02 03           a2 = 0x302b0
128447: 95 99 00 00 10           a2 = a2 + 0x100000
128452: 01                       fallthrough
      :                          @9643
128453: 82 9a                    a3 = u64 [a2]
128455: c9 a9 0b                 a4 = a2 - a3
128458: aa 7b 07                 jump @9645 if a4 == a0
      :                          @9644
128461: 28 1e ec 00              jump @12862
      :                          @9645
128465: c9 8a 0b                 a4 = a3 - a1
128468: 01                       fallthrough
      :                          @9646
128469: 82 9c                    a5 = u64 [a2]
128471: ab ac ee                 jump @9643 if a5 != a3
      :                          @9647
128474: 7b 9b                    u64 [a2] = a4
128476: 33 06                    s1 = 0
128478: 01                       fallthrough
      :                          @9648
128479: ab ac e6                 jump @9643 if a5 != a3
      :                          @9649
128482: 28 09 ec 00              jump @12862
      :                          @9650 [@dyn 819]
128486: 3a 08 70 02 03           a1 = u64 [0x30270]
128491: 97 89 0d                 a2 = a1 << 0xd
128494: d3 98 08                 a1 = a1 ^ a2
128497: 98 89 07                 a2 = a1 >> 0x7
128500: d3 98 08                 a1 = a1 ^ a2
128503: 97 89 11                 a2 = a1 << 0x11
128506: d3 98 08                 a1 = a1 ^ a2
128509: 3a 09 58 01 03           a2 = u64 [0x30158]
128514: 3a 0a 68 01 03           a3 = u64 [0x30168]
128519: 3e 08 70 02 03           u64 [0x30270] = a1
128524: ca 98 07                 a0 = a1 * a2
128527: 98 78 01                 a1 = a0 >> 0x1
128530: d6 a8 08                 a1 = a1 mulhu a3
128533: 98 88 04                 a1 = a1 >> 0x4
128536: 96 88 32                 a1 = a1 * 0x32
128539: c9 87 07                 a0 = a0 - a1
128542: 7b 17 10 01              u64 [sp + 0x110] = a0
128546: 50 20 68 06 a7 4b ff     ra = 1640, jump @6529
      :                          @9651 [@dyn 820]
128553: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
128557: 95 17 10 01              a0 = sp + 0x110
128561: 7b 17 28 02              u64 [sp + 0x228] = a0
128565: 33 07 28 0c              a0 = 0xc28
128569: 7b 17 30 02              u64 [sp + 0x230] = a0
128573: 95 18 d0 01              a1 = sp + 0x1d0
128577: 7b 18 38 02              u64 [sp + 0x238] = a1
128581: 7b 17 40 02              u64 [sp + 0x240] = a0
128585: 33 07 20 11 01           a0 = 0x11120
128590: 7b 17 80 02              u64 [sp + 0x280] = a0
128594: 49 21 88 02 02           u64 [sp + 648] = 0x2
128599: 49 21 a0 02              u64 [sp + 672] = 0
128603: 95 18 28 02              a1 = sp + 0x228
128607: 7b 18 90 02              u64 [sp + 0x290] = a1
128611: 49 21 98 02 02           u64 [sp + 664] = 0x2
128616: 95 17 f8 01              a0 = sp + 0x1f8
128620: 95 18 80 02              a1 = sp + 0x280
128624: 50 20 6a 06 d7 58 fe     ra = 1642, jump @1491
      :                          @9652 [@dyn 821]
128631: 82 16 00 02              s1 = u64 [sp + 0x200]
128635: 82 1b 08 02              a4 = u64 [sp + 0x208]
128639: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
128643: 7b 17 60                 u64 [sp + 0x60] = a0
128646: 33 07 02                 a0 = 0x2
128649: 33 08                    a1 = 0
128651: 33 09                    a2 = 0
128653: 64 6a                    a3 = s1
128655: 33 00 6c 06              ra = 0x66c
128659: 0a 64                    ecalli 100 // 'log'
128661: 01                       fallthrough
      :                          @9653 [@dyn 822]
128662: 82 1c 60                 a5 = u64 [sp + 0x60]
128665: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
128670: 55 38 00 00 f0 0a        jump @9655 if a1 >=u 4293918720
      :                          @9654
128676: 28 47 eb 00              jump @12862
      :                          @9655
128680: 33 07 b0 02 03           a0 = 0x302b0
128685: 95 77 00 00 10           a0 = a0 + 0x100000
128690: 01                       fallthrough
      :                          @9656
128691: 82 78                    a1 = u64 [a0]
128693: c9 87 09                 a2 = a0 - a1
128696: aa 69 07                 jump @9658 if a2 == s1
      :                          @9657
128699: 28 30 eb 00              jump @12862
      :                          @9658
128703: c9 c8 09                 a2 = a1 - a5
128706: 01                       fallthrough
      :                          @9659
128707: 82 7a                    a3 = u64 [a0]
128709: ab 8a ee                 jump @9656 if a3 != a1
      :                          @9660
128712: 7b 79                    u64 [a0] = a2
128714: 33 0b                    a4 = 0
128716: 01                       fallthrough
      :                          @9661
128717: ab 8a e6                 jump @9656 if a3 != a1
      :                          @9662
128720: 28 1b eb 00              jump @12862
      :                          @9663 [@dyn 823]
128724: 95 17 80 02              a0 = sp + 0x280
128728: 33 09 05                 a2 = 0x5
128731: 33 08                    a1 = 0
128733: 50 20 70 06 15 6d fe     ra = 1648, jump @1877
      :                          @9664 [@dyn 824]
128740: 95 17 f8 01              a0 = sp + 0x1f8
128744: 95 18 80 02              a1 = sp + 0x280
128748: 33 09 05                 a2 = 0x5
128751: 50 20 72 06 2d 67 fe     ra = 1650, jump @1783
      :                          @9665 [@dyn 825]
128758: 82 17 08 02              a0 = u64 [sp + 0x208]
128762: 52 07 07                 jump @9667 if a0 != 0
      :                          @9666
128765: 28 61 fc 00              jump @13238
      :                          @9667
128769: 82 17 00 02              a0 = u64 [sp + 0x200]
128773: 82 78 10                 a1 = u64 [a0 + 0x10]
128776: 52 08 07                 jump @9669 if a1 != 0
      :                          @9668
128779: 28 6e fc 00              jump @13261
      :                          @9669
128783: 82 77 08                 a0 = u64 [a0 + 0x8]
128786: 49 07                    u64 [a0 + 0] = 0
128788: 3a 08 70 02 03           a1 = u64 [0x30270]
128793: 97 89 0d                 a2 = a1 << 0xd
128796: d3 98 08                 a1 = a1 ^ a2
128799: 98 89 07                 a2 = a1 >> 0x7
128802: d3 98 08                 a1 = a1 ^ a2
128805: 97 89 11                 a2 = a1 << 0x11
128808: d3 89 09                 a2 = a2 ^ a1
128811: 3e 09 70 02 03           u64 [0x30270] = a2
128816: 82 17 08 02              a0 = u64 [sp + 0x208]
128820: 52 07 07                 jump @9671 if a0 != 0
      :                          @9670
128823: 28 27 fc 00              jump @13238
      :                          @9671
128827: 82 17 00 02              a0 = u64 [sp + 0x200]
128831: 82 78 10                 a1 = u64 [a0 + 0x10]
128834: 55 18 02 08              jump @9673 if a1 >=u 2
      :                          @9672
128838: 28 39 fb 00              jump @13195
      :                          @9673
128842: 3a 0a 58 01 03           a3 = u64 [0x30158]
128847: 3a 08 68 01 03           a1 = u64 [0x30168]
128852: ca a9 09                 a2 = a2 * a3
128855: 98 9b 01                 a4 = a2 >> 0x1
128858: d6 8b 08                 a1 = a4 mulhu a1
128861: 98 88 04                 a1 = a1 >> 0x4
128864: 82 77 08                 a0 = u64 [a0 + 0x8]
128867: 96 88 32                 a1 = a1 * 0x32
128870: c9 89 09                 a2 = a2 - a1
128873: 95 99 01                 a2 = a2 + 0x1
128876: 7b 79 08                 u64 [a0 + 0x8] = a2
128879: 3a 08 70 02 03           a1 = u64 [0x30270]
128884: 97 89 0d                 a2 = a1 << 0xd
128887: d3 98 08                 a1 = a1 ^ a2
128890: 98 89 07                 a2 = a1 >> 0x7
128893: d3 98 08                 a1 = a1 ^ a2
128896: 97 89 11                 a2 = a1 << 0x11
128899: d3 89 09                 a2 = a2 ^ a1
128902: 3e 09 70 02 03           u64 [0x30270] = a2
128907: 82 17 08 02              a0 = u64 [sp + 0x208]
128911: 52 07 07                 jump @9675 if a0 != 0
      :                          @9674
128914: 28 cc fb 00              jump @13238
      :                          @9675
128918: 82 17 00 02              a0 = u64 [sp + 0x200]
128922: 82 78 10                 a1 = u64 [a0 + 0x10]
128925: 55 18 03 08              jump @9677 if a1 >=u 3
      :                          @9676
128929: 28 e0 fa 00              jump @13197
      :                          @9677
128933: 3a 08 68 01 03           a1 = u64 [0x30168]
128938: ca a9 09                 a2 = a2 * a3
128941: 98 9b 01                 a4 = a2 >> 0x1
128944: d6 8b 08                 a1 = a4 mulhu a1
128947: 98 88 04                 a1 = a1 >> 0x4
128950: 82 77 08                 a0 = u64 [a0 + 0x8]
128953: 96 88 32                 a1 = a1 * 0x32
128956: c9 89 09                 a2 = a2 - a1
128959: 95 99 01                 a2 = a2 + 0x1
128962: 7b 79 10                 u64 [a0 + 0x10] = a2
128965: 3a 08 70 02 03           a1 = u64 [0x30270]
128970: 97 89 0d                 a2 = a1 << 0xd
128973: d3 98 08                 a1 = a1 ^ a2
128976: 98 89 07                 a2 = a1 >> 0x7
128979: d3 98 08                 a1 = a1 ^ a2
128982: 97 89 11                 a2 = a1 << 0x11
128985: d3 89 09                 a2 = a2 ^ a1
128988: 3e 09 70 02 03           u64 [0x30270] = a2
128993: 82 17 08 02              a0 = u64 [sp + 0x208]
128997: 52 07 07                 jump @9679 if a0 != 0
      :                          @9678
129000: 28 76 fb 00              jump @13238
      :                          @9679
129004: 82 17 00 02              a0 = u64 [sp + 0x200]
129008: 82 78 10                 a1 = u64 [a0 + 0x10]
129011: 55 18 04 08              jump @9681 if a1 >=u 4
      :                          @9680
129015: 28 89 fa 00              jump @13196
      :                          @9681
129019: 3a 08 68 01 03           a1 = u64 [0x30168]
129024: ca a9 09                 a2 = a2 * a3
129027: 98 9b 01                 a4 = a2 >> 0x1
129030: d6 8b 08                 a1 = a4 mulhu a1
129033: 98 88 04                 a1 = a1 >> 0x4
129036: 82 77 08                 a0 = u64 [a0 + 0x8]
129039: 96 88 32                 a1 = a1 * 0x32
129042: c9 89 09                 a2 = a2 - a1
129045: 95 99 01                 a2 = a2 + 0x1
129048: 7b 79 18                 u64 [a0 + 0x18] = a2
129051: 3a 08 70 02 03           a1 = u64 [0x30270]
129056: 97 89 0d                 a2 = a1 << 0xd
129059: d3 98 08                 a1 = a1 ^ a2
129062: 98 89 07                 a2 = a1 >> 0x7
129065: d3 98 08                 a1 = a1 ^ a2
129068: 97 89 11                 a2 = a1 << 0x11
129071: d3 89 09                 a2 = a2 ^ a1
129074: 3e 09 70 02 03           u64 [0x30270] = a2
129079: 82 17 08 02              a0 = u64 [sp + 0x208]
129083: 52 07 07                 jump @9683 if a0 != 0
      :                          @9682
129086: 28 20 fb 00              jump @13238
      :                          @9683
129090: 82 17 00 02              a0 = u64 [sp + 0x200]
129094: 82 78 10                 a1 = u64 [a0 + 0x10]
129097: 55 18 05 08              jump @9685 if a1 >=u 5
      :                          @9684
129101: 28 fc fa 00              jump @13217
      :                          @9685
129105: 3a 08 68 01 03           a1 = u64 [0x30168]
129110: ca a9 09                 a2 = a2 * a3
129113: 98 9b 01                 a4 = a2 >> 0x1
129116: d6 8b 08                 a1 = a4 mulhu a1
129119: 98 88 04                 a1 = a1 >> 0x4
129122: 82 77 08                 a0 = u64 [a0 + 0x8]
129125: 96 88 32                 a1 = a1 * 0x32
129128: c9 89 09                 a2 = a2 - a1
129131: 95 99 01                 a2 = a2 + 0x1
129134: 7b 79 20                 u64 [a0 + 0x20] = a2
129137: 3a 08 70 02 03           a1 = u64 [0x30270]
129142: 97 89 0d                 a2 = a1 << 0xd
129145: d3 98 08                 a1 = a1 ^ a2
129148: 98 89 07                 a2 = a1 >> 0x7
129151: d3 98 08                 a1 = a1 ^ a2
129154: 97 89 11                 a2 = a1 << 0x11
129157: d3 89 09                 a2 = a2 ^ a1
129160: 3e 09 70 02 03           u64 [0x30270] = a2
129165: 82 18 08 02              a1 = u64 [sp + 0x208]
129169: 55 18 02 08              jump @9687 if a1 >=u 2
      :                          @9686
129173: 28 ea f9 00              jump @13195
      :                          @9687
129177: 82 17 00 02              a0 = u64 [sp + 0x200]
129181: 82 78 28                 a1 = u64 [a0 + 0x28]
129184: 52 08 07                 jump @9689 if a1 != 0
      :                          @9688
129187: 28 d6 fa 00              jump @13261
      :                          @9689
129191: 3a 08 68 01 03           a1 = u64 [0x30168]
129196: ca a9 09                 a2 = a2 * a3
129199: 98 9b 01                 a4 = a2 >> 0x1
129202: d6 8b 08                 a1 = a4 mulhu a1
129205: 98 88 04                 a1 = a1 >> 0x4
129208: 82 7c 20                 a5 = u64 [a0 + 0x20]
129211: 96 88 32                 a1 = a1 * 0x32
129214: c9 89 09                 a2 = a2 - a1
129217: 95 99 01                 a2 = a2 + 0x1
129220: 7b c9                    u64 [a5] = a2
129222: 82 78 28                 a1 = u64 [a0 + 0x28]
129225: 55 18 02 08              jump @9691 if a1 >=u 2
      :                          @9690
129229: 28 b2 f9 00              jump @13195
      :                          @9691
129233: 82 77 20                 a0 = u64 [a0 + 0x20]
129236: 49 17 08                 u64 [a0 + 8] = 0
129239: 3a 08 70 02 03           a1 = u64 [0x30270]
129244: 97 8b 0d                 a4 = a1 << 0xd
129247: d3 b8 08                 a1 = a1 ^ a4
129250: 98 8b 07                 a4 = a1 >> 0x7
129253: d3 b8 08                 a1 = a1 ^ a4
129256: 97 8b 11                 a4 = a1 << 0x11
129259: d3 8b 0b                 a4 = a4 ^ a1
129262: 3e 0b 70 02 03           u64 [0x30270] = a4
129267: 82 18 08 02              a1 = u64 [sp + 0x208]
129271: 55 18 02 08              jump @9693 if a1 >=u 2
      :                          @9692
129275: 28 4c fa 00              jump @13215
      :                          @9693
129279: 82 19 00 02              a2 = u64 [sp + 0x200]
129283: 82 98 28                 a1 = u64 [a2 + 0x28]
129286: 55 18 03 08              jump @9695 if a1 >=u 3
      :                          @9694
129290: 28 77 f9 00              jump @13197
      :                          @9695
129294: 3a 08 68 01 03           a1 = u64 [0x30168]
129299: ca ab 0b                 a4 = a4 * a3
129302: 98 bc 01                 a5 = a4 >> 0x1
129305: d6 8c 08                 a1 = a5 mulhu a1
129308: 98 88 04                 a1 = a1 >> 0x4
129311: 82 99 20                 a2 = u64 [a2 + 0x20]
129314: 96 88 32                 a1 = a1 * 0x32
129317: c9 8b 0b                 a4 = a4 - a1
129320: 95 bb 01                 a4 = a4 + 0x1
129323: 7b 9b 10                 u64 [a2 + 0x10] = a4
129326: 3a 09 70 02 03           a2 = u64 [0x30270]
129331: 97 9b 0d                 a4 = a2 << 0xd
129334: d3 b9 09                 a2 = a2 ^ a4
129337: 98 9b 07                 a4 = a2 >> 0x7
129340: d3 b9 09                 a2 = a2 ^ a4
129343: 97 9b 11                 a4 = a2 << 0x11
129346: d3 b9 09                 a2 = a2 ^ a4
129349: 3e 09 70 02 03           u64 [0x30270] = a2
129354: 82 18 08 02              a1 = u64 [sp + 0x208]
129358: 55 18 02 08              jump @9697 if a1 >=u 2
      :                          @9696
129362: 28 f5 f9 00              jump @13215
      :                          @9697
129366: 82 1b 00 02              a4 = u64 [sp + 0x200]
129370: 82 b8 28                 a1 = u64 [a4 + 0x28]
129373: 55 18 04 08              jump @9699 if a1 >=u 4
      :                          @9698
129377: 28 1f f9 00              jump @13196
      :                          @9699
129381: 3a 08 68 01 03           a1 = u64 [0x30168]
129386: ca a9 09                 a2 = a2 * a3
129389: 98 9c 01                 a5 = a2 >> 0x1
129392: d6 8c 08                 a1 = a5 mulhu a1
129395: 98 88 04                 a1 = a1 >> 0x4
129398: 82 bb 20                 a4 = u64 [a4 + 0x20]
129401: 96 88 32                 a1 = a1 * 0x32
129404: c9 89 09                 a2 = a2 - a1
129407: 95 99 01                 a2 = a2 + 0x1
129410: 7b b9 18                 u64 [a4 + 0x18] = a2
129413: 3a 09 70 02 03           a2 = u64 [0x30270]
129418: 97 9b 0d                 a4 = a2 << 0xd
129421: d3 b9 09                 a2 = a2 ^ a4
129424: 98 9b 07                 a4 = a2 >> 0x7
129427: d3 b9 09                 a2 = a2 ^ a4
129430: 97 9b 11                 a4 = a2 << 0x11
129433: d3 b9 09                 a2 = a2 ^ a4
129436: 3e 09 70 02 03           u64 [0x30270] = a2
129441: 82 18 08 02              a1 = u64 [sp + 0x208]
129445: 55 18 02 08              jump @9701 if a1 >=u 2
      :                          @9700
129449: 28 9e f9 00              jump @13215
      :                          @9701
129453: 82 17 00 02              a0 = u64 [sp + 0x200]
129457: 82 78 28                 a1 = u64 [a0 + 0x28]
129460: 55 18 05 08              jump @9703 if a1 >=u 5
      :                          @9702
129464: 28 91 f9 00              jump @13217
      :                          @9703
129468: 3a 08 68 01 03           a1 = u64 [0x30168]
129473: ca a9 09                 a2 = a2 * a3
129476: 98 9b 01                 a4 = a2 >> 0x1
129479: d6 8b 08                 a1 = a4 mulhu a1
129482: 98 88 04                 a1 = a1 >> 0x4
129485: 82 77 20                 a0 = u64 [a0 + 0x20]
129488: 96 88 32                 a1 = a1 * 0x32
129491: c9 89 09                 a2 = a2 - a1
129494: 95 99 01                 a2 = a2 + 0x1
129497: 7b 79 20                 u64 [a0 + 0x20] = a2
129500: 3a 08 70 02 03           a1 = u64 [0x30270]
129505: 97 89 0d                 a2 = a1 << 0xd
129508: d3 98 08                 a1 = a1 ^ a2
129511: 98 89 07                 a2 = a1 >> 0x7
129514: d3 98 08                 a1 = a1 ^ a2
129517: 97 89 11                 a2 = a1 << 0x11
129520: d3 89 09                 a2 = a2 ^ a1
129523: 3e 09 70 02 03           u64 [0x30270] = a2
129528: 82 18 08 02              a1 = u64 [sp + 0x208]
129532: 55 18 03 08              jump @9705 if a1 >=u 3
      :                          @9704
129536: 28 47 f9 00              jump @13215
      :                          @9705
129540: 82 18 00 02              a1 = u64 [sp + 0x200]
129544: 82 8b 40                 a4 = u64 [a1 + 0x40]
129547: 52 0b 07                 jump @9707 if a4 != 0
      :                          @9706
129550: 28 68 f9 00              jump @13260
      :                          @9707
129554: 3a 0b 68 01 03           a4 = u64 [0x30168]
129559: ca a9 09                 a2 = a2 * a3
129562: 98 9c 01                 a5 = a2 >> 0x1
129565: d6 bc 0b                 a4 = a5 mulhu a4
129568: 98 bb 04                 a4 = a4 >> 0x4
129571: 82 88 38                 a1 = u64 [a1 + 0x38]
129574: 96 bb 32                 a4 = a4 * 0x32
129577: c9 b9 09                 a2 = a2 - a4
129580: 95 99 01                 a2 = a2 + 0x1
129583: 7b 89                    u64 [a1] = a2
129585: 3a 09 70 02 03           a2 = u64 [0x30270]
129590: 97 9b 0d                 a4 = a2 << 0xd
129593: d3 b9 09                 a2 = a2 ^ a4
129596: 98 9b 07                 a4 = a2 >> 0x7
129599: d3 b9 09                 a2 = a2 ^ a4
129602: 97 9b 11                 a4 = a2 << 0x11
129605: d3 9b 0b                 a4 = a4 ^ a2
129608: 3e 0b 70 02 03           u64 [0x30270] = a4
129613: 82 18 08 02              a1 = u64 [sp + 0x208]
129617: 55 18 03 08              jump @9709 if a1 >=u 3
      :                          @9708
129621: 28 f2 f8 00              jump @13215
      :                          @9709
129625: 82 17 00 02              a0 = u64 [sp + 0x200]
129629: 82 78 40                 a1 = u64 [a0 + 0x40]
129632: 55 18 02 08              jump @9711 if a1 >=u 2
      :                          @9710
129636: 28 1b f8 00              jump @13195
      :                          @9711
129640: 3a 08 68 01 03           a1 = u64 [0x30168]
129645: ca ab 0b                 a4 = a4 * a3
129648: 98 bc 01                 a5 = a4 >> 0x1
129651: d6 8c 08                 a1 = a5 mulhu a1
129654: 98 88 04                 a1 = a1 >> 0x4
129657: 82 77 38                 a0 = u64 [a0 + 0x38]
129660: 96 88 32                 a1 = a1 * 0x32
129663: c9 8b 0b                 a4 = a4 - a1
129666: 95 bb 01                 a4 = a4 + 0x1
129669: 7b 7b 08                 u64 [a0 + 0x8] = a4
129672: 82 17 00 02              a0 = u64 [sp + 0x200]
129676: 82 78 40                 a1 = u64 [a0 + 0x40]
129679: 55 18 03 08              jump @9713 if a1 >=u 3
      :                          @9712
129683: 28 e7 f8 00              jump @13262
      :                          @9713
129687: 82 77 38                 a0 = u64 [a0 + 0x38]
129690: 49 17 10                 u64 [a0 + 16] = 0
129693: 3a 08 70 02 03           a1 = u64 [0x30270]
129698: 97 89 0d                 a2 = a1 << 0xd
129701: d3 98 08                 a1 = a1 ^ a2
129704: 98 89 07                 a2 = a1 >> 0x7
129707: d3 98 08                 a1 = a1 ^ a2
129710: 97 89 11                 a2 = a1 << 0x11
129713: d3 89 09                 a2 = a2 ^ a1
129716: 3e 09 70 02 03           u64 [0x30270] = a2
129721: 82 18 08 02              a1 = u64 [sp + 0x208]
129725: 55 18 03 08              jump @9715 if a1 >=u 3
      :                          @9714
129729: 28 86 f8 00              jump @13215
      :                          @9715
129733: 82 1b 00 02              a4 = u64 [sp + 0x200]
129737: 82 b8 40                 a1 = u64 [a4 + 0x40]
129740: 55 18 04 08              jump @9717 if a1 >=u 4
      :                          @9716
129744: 28 87 f8 00              jump @13231
      :                          @9717
129748: 3a 08 68 01 03           a1 = u64 [0x30168]
129753: ca a9 09                 a2 = a2 * a3
129756: 98 9c 01                 a5 = a2 >> 0x1
129759: d6 8c 08                 a1 = a5 mulhu a1
129762: 98 88 04                 a1 = a1 >> 0x4
129765: 82 bb 38                 a4 = u64 [a4 + 0x38]
129768: 96 88 32                 a1 = a1 * 0x32
129771: c9 89 09                 a2 = a2 - a1
129774: 95 99 01                 a2 = a2 + 0x1
129777: 7b b9 18                 u64 [a4 + 0x18] = a2
129780: 3a 09 70 02 03           a2 = u64 [0x30270]
129785: 97 9b 0d                 a4 = a2 << 0xd
129788: d3 b9 09                 a2 = a2 ^ a4
129791: 98 9b 07                 a4 = a2 >> 0x7
129794: d3 b9 09                 a2 = a2 ^ a4
129797: 97 9b 11                 a4 = a2 << 0x11
129800: d3 b9 09                 a2 = a2 ^ a4
129803: 3e 09 70 02 03           u64 [0x30270] = a2
129808: 82 18 08 02              a1 = u64 [sp + 0x208]
129812: 55 18 03 08              jump @9719 if a1 >=u 3
      :                          @9718
129816: 28 2f f8 00              jump @13215
      :                          @9719
129820: 82 17 00 02              a0 = u64 [sp + 0x200]
129824: 82 78 40                 a1 = u64 [a0 + 0x40]
129827: 55 18 05 08              jump @9721 if a1 >=u 5
      :                          @9720
129831: 28 31 f8 00              jump @13232
      :                          @9721
129835: 3a 08 68 01 03           a1 = u64 [0x30168]
129840: ca a9 09                 a2 = a2 * a3
129843: 98 9b 01                 a4 = a2 >> 0x1
129846: d6 8b 08                 a1 = a4 mulhu a1
129849: 98 88 04                 a1 = a1 >> 0x4
129852: 82 77 38                 a0 = u64 [a0 + 0x38]
129855: 96 88 32                 a1 = a1 * 0x32
129858: c9 89 09                 a2 = a2 - a1
129861: 95 99 01                 a2 = a2 + 0x1
129864: 7b 79 20                 u64 [a0 + 0x20] = a2
129867: 3a 08 70 02 03           a1 = u64 [0x30270]
129872: 97 89 0d                 a2 = a1 << 0xd
129875: d3 98 08                 a1 = a1 ^ a2
129878: 98 89 07                 a2 = a1 >> 0x7
129881: d3 98 08                 a1 = a1 ^ a2
129884: 97 89 11                 a2 = a1 << 0x11
129887: d3 89 09                 a2 = a2 ^ a1
129890: 3e 09 70 02 03           u64 [0x30270] = a2
129895: 82 18 08 02              a1 = u64 [sp + 0x208]
129899: 56 18 03 08              jump @9723 if a1 >u 3
      :                          @9722
129903: 28 d8 f7 00              jump @13215
      :                          @9723
129907: 82 18 00 02              a1 = u64 [sp + 0x200]
129911: 82 8b 58                 a4 = u64 [a1 + 0x58]
129914: 52 0b 07                 jump @9725 if a4 != 0
      :                          @9724
129917: 28 f9 f7 00              jump @13260
      :                          @9725
129921: 3a 0b 68 01 03           a4 = u64 [0x30168]
129926: ca a9 09                 a2 = a2 * a3
129929: 98 9c 01                 a5 = a2 >> 0x1
129932: d6 bc 0b                 a4 = a5 mulhu a4
129935: 98 bb 04                 a4 = a4 >> 0x4
129938: 82 88 50                 a1 = u64 [a1 + 0x50]
129941: 96 bb 32                 a4 = a4 * 0x32
129944: c9 b9 09                 a2 = a2 - a4
129947: 95 99 01                 a2 = a2 + 0x1
129950: 7b 89                    u64 [a1] = a2
129952: 3a 09 70 02 03           a2 = u64 [0x30270]
129957: 97 9b 0d                 a4 = a2 << 0xd
129960: d3 b9 09                 a2 = a2 ^ a4
129963: 98 9b 07                 a4 = a2 >> 0x7
129966: d3 b9 09                 a2 = a2 ^ a4
129969: 97 9b 11                 a4 = a2 << 0x11
129972: d3 b9 09                 a2 = a2 ^ a4
129975: 3e 09 70 02 03           u64 [0x30270] = a2
129980: 82 18 08 02              a1 = u64 [sp + 0x208]
129984: 55 18 04 08              jump @9727 if a1 >=u 4
      :                          @9726
129988: 28 83 f7 00              jump @13215
      :                          @9727
129992: 82 1b 00 02              a4 = u64 [sp + 0x200]
129996: 82 b8 58                 a1 = u64 [a4 + 0x58]
129999: 55 18 02 08              jump @9729 if a1 >=u 2
      :                          @9728
130003: 28 7d f7 00              jump @13224
      :                          @9729
130007: 3a 08 68 01 03           a1 = u64 [0x30168]
130012: ca a9 09                 a2 = a2 * a3
130015: 98 9c 01                 a5 = a2 >> 0x1
130018: d6 8c 08                 a1 = a5 mulhu a1
130021: 98 88 04                 a1 = a1 >> 0x4
130024: 82 bb 50                 a4 = u64 [a4 + 0x50]
130027: 96 88 32                 a1 = a1 * 0x32
130030: c9 89 09                 a2 = a2 - a1
130033: 95 99 01                 a2 = a2 + 0x1
130036: 7b b9 08                 u64 [a4 + 0x8] = a2
130039: 3a 09 70 02 03           a2 = u64 [0x30270]
130044: 97 9b 0d                 a4 = a2 << 0xd
130047: d3 b9 09                 a2 = a2 ^ a4
130050: 98 9b 07                 a4 = a2 >> 0x7
130053: d3 b9 09                 a2 = a2 ^ a4
130056: 97 9b 11                 a4 = a2 << 0x11
130059: d3 9b 0b                 a4 = a4 ^ a2
130062: 3e 0b 70 02 03           u64 [0x30270] = a4
130067: 82 18 08 02              a1 = u64 [sp + 0x208]
130071: 55 18 04 08              jump @9731 if a1 >=u 4
      :                          @9730
130075: 28 2c f7 00              jump @13215
      :                          @9731
130079: 82 17 00 02              a0 = u64 [sp + 0x200]
130083: 82 78 58                 a1 = u64 [a0 + 0x58]
130086: 55 18 03 08              jump @9733 if a1 >=u 3
      :                          @9732
130090: 28 27 f7 00              jump @13225
      :                          @9733
130094: 3a 08 68 01 03           a1 = u64 [0x30168]
130099: ca ab 0b                 a4 = a4 * a3
130102: 98 bc 01                 a5 = a4 >> 0x1
130105: d6 8c 08                 a1 = a5 mulhu a1
130108: 98 88 04                 a1 = a1 >> 0x4
130111: 82 77 50                 a0 = u64 [a0 + 0x50]
130114: 96 88 32                 a1 = a1 * 0x32
130117: c9 8b 0b                 a4 = a4 - a1
130120: 95 bb 01                 a4 = a4 + 0x1
130123: 7b 7b 10                 u64 [a0 + 0x10] = a4
130126: 82 1b 00 02              a4 = u64 [sp + 0x200]
130130: 82 b8 58                 a1 = u64 [a4 + 0x58]
130133: 55 18 04 08              jump @9735 if a1 >=u 4
      :                          @9734
130137: 28 21 f7 00              jump @13262
      :                          @9735
130141: 82 b8 50                 a1 = u64 [a4 + 0x50]
130144: 49 18 18                 u64 [a1 + 24] = 0
130147: 3a 09 70 02 03           a2 = u64 [0x30270]
130152: 97 9b 0d                 a4 = a2 << 0xd
130155: d3 b9 09                 a2 = a2 ^ a4
130158: 98 9b 07                 a4 = a2 >> 0x7
130161: d3 b9 09                 a2 = a2 ^ a4
130164: 97 9b 11                 a4 = a2 << 0x11
130167: d3 9b 0b                 a4 = a4 ^ a2
130170: 3e 0b 70 02 03           u64 [0x30270] = a4
130175: 82 18 08 02              a1 = u64 [sp + 0x208]
130179: 55 18 04 08              jump @9737 if a1 >=u 4
      :                          @9736
130183: 28 d0 f6 00              jump @13231
      :                          @9737
130187: 82 17 00 02              a0 = u64 [sp + 0x200]
130191: 82 78 58                 a1 = u64 [a0 + 0x58]
130194: 55 18 05 08              jump @9739 if a1 >=u 5
      :                          @9738
130198: 28 c2 f6 00              jump @13232
      :                          @9739
130202: 3a 08 68 01 03           a1 = u64 [0x30168]
130207: ca ab 0b                 a4 = a4 * a3
130210: 98 bc 01                 a5 = a4 >> 0x1
130213: d6 8c 08                 a1 = a5 mulhu a1
130216: 98 88 04                 a1 = a1 >> 0x4
130219: 82 77 50                 a0 = u64 [a0 + 0x50]
130222: 96 88 32                 a1 = a1 * 0x32
130225: c9 8b 0b                 a4 = a4 - a1
130228: 95 bb 01                 a4 = a4 + 0x1
130231: 7b 7b 20                 u64 [a0 + 0x20] = a4
130234: 3a 08 70 02 03           a1 = u64 [0x30270]
130239: 97 8b 0d                 a4 = a1 << 0xd
130242: d3 b8 08                 a1 = a1 ^ a4
130245: 98 8b 07                 a4 = a1 >> 0x7
130248: d3 b8 08                 a1 = a1 ^ a4
130251: 97 8b 11                 a4 = a1 << 0x11
130254: d3 8b 0b                 a4 = a4 ^ a1
130257: 3e 0b 70 02 03           u64 [0x30270] = a4
130262: 82 18 08 02              a1 = u64 [sp + 0x208]
130266: 55 18 05 08              jump @9741 if a1 >=u 5
      :                          @9740
130270: 28 69 f6 00              jump @13215
      :                          @9741
130274: 82 18 00 02              a1 = u64 [sp + 0x200]
130278: 82 89 70                 a2 = u64 [a1 + 0x70]
130281: 52 09 07                 jump @9743 if a2 != 0
      :                          @9742
130284: 28 96 f6 00              jump @13270
      :                          @9743
130288: 3a 09 68 01 03           a2 = u64 [0x30168]
130293: ca ab 0b                 a4 = a4 * a3
130296: 98 bc 01                 a5 = a4 >> 0x1
130299: d6 9c 09                 a2 = a5 mulhu a2
130302: 98 99 04                 a2 = a2 >> 0x4
130305: 82 88 68                 a1 = u64 [a1 + 0x68]
130308: 96 99 32                 a2 = a2 * 0x32
130311: c9 9b 0b                 a4 = a4 - a2
130314: 95 bb 01                 a4 = a4 + 0x1
130317: 7b 8b                    u64 [a1] = a4
130319: 3a 09 70 02 03           a2 = u64 [0x30270]
130324: 97 9b 0d                 a4 = a2 << 0xd
130327: d3 b9 09                 a2 = a2 ^ a4
130330: 98 9b 07                 a4 = a2 >> 0x7
130333: d3 b9 09                 a2 = a2 ^ a4
130336: 97 9b 11                 a4 = a2 << 0x11
130339: d3 9b 0b                 a4 = a4 ^ a2
130342: 3e 0b 70 02 03           u64 [0x30270] = a4
130347: 82 18 08 02              a1 = u64 [sp + 0x208]
130351: 55 18 05 08              jump @9745 if a1 >=u 5
      :                          @9744
130355: 28 14 f6 00              jump @13215
      :                          @9745
130359: 82 1c 00 02              a5 = u64 [sp + 0x200]
130363: 82 c8 70                 a1 = u64 [a5 + 0x70]
130366: 55 18 02 08              jump @9747 if a1 >=u 2
      :                          @9746
130370: 28 38 f6 00              jump @13262
      :                          @9747
130374: 3a 08 68 01 03           a1 = u64 [0x30168]
130379: ca ab 09                 a2 = a4 * a3
130382: 98 9b 01                 a4 = a2 >> 0x1
130385: d6 8b 08                 a1 = a4 mulhu a1
130388: 98 88 04                 a1 = a1 >> 0x4
130391: 82 cc 68                 a5 = u64 [a5 + 0x68]
130394: 96 88 32                 a1 = a1 * 0x32
130397: c9 89 09                 a2 = a2 - a1
130400: 95 99 01                 a2 = a2 + 0x1
130403: 7b c9 08                 u64 [a5 + 0x8] = a2
130406: 3a 09 70 02 03           a2 = u64 [0x30270]
130411: 97 9b 0d                 a4 = a2 << 0xd
130414: d3 b9 09                 a2 = a2 ^ a4
130417: 98 9b 07                 a4 = a2 >> 0x7
130420: d3 b9 09                 a2 = a2 ^ a4
130423: 97 9b 11                 a4 = a2 << 0x11
130426: d3 b9 09                 a2 = a2 ^ a4
130429: 3e 09 70 02 03           u64 [0x30270] = a2
130434: 82 18 08 02              a1 = u64 [sp + 0x208]
130438: 55 18 05 08              jump @9749 if a1 >=u 5
      :                          @9748
130442: 28 bd f5 00              jump @13215
      :                          @9749
130446: 82 1b 00 02              a4 = u64 [sp + 0x200]
130450: 82 b8 70                 a1 = u64 [a4 + 0x70]
130453: 55 18 03 08              jump @9751 if a1 >=u 3
      :                          @9750
130457: 28 b8 f5 00              jump @13225
      :                          @9751
130461: 3a 08 68 01 03           a1 = u64 [0x30168]
130466: ca a9 09                 a2 = a2 * a3
130469: 98 9c 01                 a5 = a2 >> 0x1
130472: d6 8c 08                 a1 = a5 mulhu a1
130475: 98 88 04                 a1 = a1 >> 0x4
130478: 82 bb 68                 a4 = u64 [a4 + 0x68]
130481: 96 88 32                 a1 = a1 * 0x32
130484: c9 89 09                 a2 = a2 - a1
130487: 95 99 01                 a2 = a2 + 0x1
130490: 7b b9 10                 u64 [a4 + 0x10] = a2
130493: 3a 09 70 02 03           a2 = u64 [0x30270]
130498: 97 9b 0d                 a4 = a2 << 0xd
130501: d3 b9 09                 a2 = a2 ^ a4
130504: 98 9b 07                 a4 = a2 >> 0x7
130507: d3 b9 09                 a2 = a2 ^ a4
130510: 97 9b 11                 a4 = a2 << 0x11
130513: d3 9b 0b                 a4 = a4 ^ a2
130516: 3e 0b 70 02 03           u64 [0x30270] = a4
130521: 82 18 08 02              a1 = u64 [sp + 0x208]
130525: 55 18 05 08              jump @9753 if a1 >=u 5
      :                          @9752
130529: 28 66 f5 00              jump @13215
      :                          @9753
130533: 82 17 00 02              a0 = u64 [sp + 0x200]
130537: 82 78 70                 a1 = u64 [a0 + 0x70]
130540: 55 18 04 08              jump @9755 if a1 >=u 4
      :                          @9754
130544: 28 67 f5 00              jump @13231
      :                          @9755
130548: 3a 08 68 01 03           a1 = u64 [0x30168]
130553: ca ab 0a                 a3 = a4 * a3
130556: 98 ab 01                 a4 = a3 >> 0x1
130559: d6 8b 08                 a1 = a4 mulhu a1
130562: 98 88 04                 a1 = a1 >> 0x4
130565: 33 0b 32                 a4 = 0x32
130568: 82 77 68                 a0 = u64 [a0 + 0x68]
130571: ca b8 08                 a1 = a1 * a4
130574: c9 8a 0a                 a3 = a3 - a1
130577: 95 aa 01                 a3 = a3 + 0x1
130580: 7b 7a 18                 u64 [a0 + 0x18] = a3
130583: 82 17 00 02              a0 = u64 [sp + 0x200]
130587: 82 78 70                 a1 = u64 [a0 + 0x70]
130590: 55 18 05 08              jump @9757 if a1 >=u 5
      :                          @9756
130594: 28 58 f5 00              jump @13262
      :                          @9757
130598: 82 77 68                 a0 = u64 [a0 + 0x68]
130601: 49 17 20                 u64 [a0 + 32] = 0
130604: 95 17 f8 01              a0 = sp + 0x1f8
130608: 50 20 74 06 04 31 ff     ra = 1652, jump @6058
      :                          @9758 [@dyn 826]
130615: 7b 17 10 01              u64 [sp + 0x110] = a0
130619: 95 17 10 01              a0 = sp + 0x110
130623: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
130627: 33 07 28 0c              a0 = 0xc28
130631: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
130635: 33 07 60 11 01           a0 = 0x11160
130640: 7b 17 80 02              u64 [sp + 0x280] = a0
130644: 49 21 88 02 01           u64 [sp + 648] = 0x1
130649: 49 21 a0 02              u64 [sp + 672] = 0
130653: 95 18 d0 01              a1 = sp + 0x1d0
130657: 7b 18 90 02              u64 [sp + 0x290] = a1
130661: 49 21 98 02 01           u64 [sp + 664] = 0x1
130666: 95 17 28 02              a0 = sp + 0x228
130670: 95 18 80 02              a1 = sp + 0x280
130674: 50 20 76 06 d5 50 fe     ra = 1654, jump @1491
      :                          @9759 [@dyn 827]
130681: 82 16 30 02              s1 = u64 [sp + 0x230]
130685: 82 1b 38 02              a4 = u64 [sp + 0x238]
130689: 82 17 28 02              a0 = u64 [sp + 0x228]
130693: 7b 17 60                 u64 [sp + 0x60] = a0
130696: 33 07 02                 a0 = 0x2
130699: 33 08                    a1 = 0
130701: 33 09                    a2 = 0
130703: 64 6a                    a3 = s1
130705: 33 00 78 06              ra = 0x678
130709: 0a 64                    ecalli 100 // 'log'
130711: 01                       fallthrough
      :                          @9760 [@dyn 828]
130712: 82 1c 60                 a5 = u64 [sp + 0x60]
130715: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
130720: 55 38 00 00 f0 0a        jump @9762 if a1 >=u 4293918720
      :                          @9761
130726: 28 59 de 00              jump @12761
      :                          @9762
130730: 33 07 b0 02 03           a0 = 0x302b0
130735: 95 77 00 00 10           a0 = a0 + 0x100000
130740: 01                       fallthrough
      :                          @9763
130741: 82 78                    a1 = u64 [a0]
130743: c9 87 09                 a2 = a0 - a1
130746: aa 69 07                 jump @9765 if a2 == s1
      :                          @9764
130749: 28 42 de 00              jump @12761
      :                          @9765
130753: c9 c8 09                 a2 = a1 - a5
130756: 01                       fallthrough
      :                          @9766
130757: 82 7a                    a3 = u64 [a0]
130759: ab 8a ee                 jump @9763 if a3 != a1
      :                          @9767
130762: 7b 79                    u64 [a0] = a2
130764: 33 0b                    a4 = 0
130766: 01                       fallthrough
      :                          @9768
130767: ab 8a e6                 jump @9763 if a3 != a1
      :                          @9769
130770: 28 2d de 00              jump @12761
      :                          @9770 [@dyn 829]
130774: 95 17 f8 01              a0 = sp + 0x1f8
130778: 33 00 7c 06              ra = 0x67c
130782: 95 11 f8                 sp = sp + 0xfffffffffffffff8
130785: 7b 15                    u64 [sp] = s0
130787: 33 03 b0 02 03           t1 = 0x302b0
130792: 33 02 00 00 10           t0 = 0x100000
130797: c8 23 04                 t2 = t1 + t0
130800: 28 db 80 fe              jump @2284
      :                          @9771 [@dyn 830]
130804: 82 17 00 02              a0 = u64 [sp + 0x200]
130808: 82 18 08 02              a1 = u64 [sp + 0x208]
130812: 7b 17 60                 u64 [sp + 0x60] = a0
130815: 33 00 7e 06              ra = 0x67e
130819: 95 11 c0                 sp = sp + 0xffffffffffffffc0
130822: 7b 10 38                 u64 [sp + 0x38] = ra
130825: 7b 15 30                 u64 [sp + 0x30] = s0
130828: 7b 16 28                 u64 [sp + 0x28] = s1
130831: 64 86                    s1 = a1
130833: 64 75                    s0 = a0
130835: 68 87                    a0 = clz a1
130837: 9a 7a 40                 a3 = 0x40 - a0
130840: 64 57                    a0 = s0
130842: 33 09                    a2 = 0
130844: 33 00 c8 03              ra = 0x3c8
130848: 28 67 3b fe              jump @1111
      :                          @9772 [@dyn 831]
130852: 7b 17 10 01              u64 [sp + 0x110] = a0
130856: 95 17 10 01              a0 = sp + 0x110
130860: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
130864: 33 07 28 0c              a0 = 0xc28
130868: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
130872: 33 07 88 11 01           a0 = 0x11188
130877: 7b 17 80 02              u64 [sp + 0x280] = a0
130881: 49 21 88 02 01           u64 [sp + 648] = 0x1
130886: 49 21 a0 02              u64 [sp + 672] = 0
130890: 95 18 d0 01              a1 = sp + 0x1d0
130894: 7b 18 90 02              u64 [sp + 0x290] = a1
130898: 49 21 98 02 01           u64 [sp + 664] = 0x1
130903: 95 17 28 02              a0 = sp + 0x228
130907: 95 18 80 02              a1 = sp + 0x280
130911: 50 20 80 06 e8 4f fe     ra = 1664, jump @1491
      :                          @9773 [@dyn 832]
130918: 82 16 30 02              s1 = u64 [sp + 0x230]
130922: 82 1b 38 02              a4 = u64 [sp + 0x238]
130926: 82 17 28 02              a0 = u64 [sp + 0x228]
130930: 7b 17 58                 u64 [sp + 0x58] = a0
130933: 33 07 02                 a0 = 0x2
130936: 33 08                    a1 = 0
130938: 33 09                    a2 = 0
130940: 64 6a                    a3 = s1
130942: 33 00 82 06              ra = 0x682
130946: 0a 64                    ecalli 100 // 'log'
130948: 01                       fallthrough
      :                          @9774 [@dyn 833]
130949: 82 1c 58                 a5 = u64 [sp + 0x58]
130952: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
130957: 53 38 00 00 f0 25        jump @9780 if a1 <u 4293918720
      :                          @9775
130963: 33 07 b0 02 03           a0 = 0x302b0
130968: 95 77 00 00 10           a0 = a0 + 0x100000
130973: 01                       fallthrough
      :                          @9776
130974: 82 78                    a1 = u64 [a0]
130976: c9 87 09                 a2 = a0 - a1
130979: ab 69 0f                 jump @9780 if a2 != s1
      :                          @9777
130982: c9 c8 09                 a2 = a1 - a5
130985: 01                       fallthrough
      :                          @9778
130986: 82 7a                    a3 = u64 [a0]
130988: ab 8a f2                 jump @9776 if a3 != a1
      :                          @9779
130991: 7b 79                    u64 [a0] = a2
130993: 01                       fallthrough
      :                          @9780
130994: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
130998: 82 16 60                 s1 = u64 [sp + 0x60]
131001: 52 07 07                 jump @9782 if a0 != 0
      :                          @9781
131004: 28 2f e2 00              jump @12862
      :                          @9782
131008: 54 37 00 00 02 0a        jump @9784 if a0 <=u 131072
      :                          @9783
131014: 28 25 e2 00              jump @12862
      :                          @9784
131018: 97 77 03                 a0 = a0 << 0x3
131021: 33 08 b0 02 03           a1 = 0x302b0
131026: 95 88 00 00 10           a1 = a1 + 0x100000
131031: 01                       fallthrough
      :                          @9785
131032: 82 89                    a2 = u64 [a1]
131034: c9 98 0a                 a3 = a1 - a2
131037: aa 6a 07                 jump @9787 if a3 == s1
      :                          @9786
131040: 28 0b e2 00              jump @12862
      :                          @9787
131044: c9 79 0a                 a3 = a2 - a0
131047: 01                       fallthrough
      :                          @9788
131048: 82 8b                    a4 = u64 [a1]
131050: ab 9b ee                 jump @9785 if a4 != a2
      :                          @9789
131053: 7b 8a                    u64 [a1] = a3
131055: 33 0c                    a5 = 0
131057: 01                       fallthrough
      :                          @9790
131058: ab 9b e6                 jump @9785 if a4 != a2
      :                          @9791
131061: 28 f6 e1 00              jump @12862
      :                          @9792 [@dyn 834]
131065: 95 17 80 02              a0 = sp + 0x280
131069: 33 08 0a                 a1 = 0xa
131072: 50 20 86 06 b0 5d fe     ra = 1670, jump @1776
      :                          @9793 [@dyn 835]
131079: 95 17 f8 01              a0 = sp + 0x1f8
131083: 95 18 80 02              a1 = sp + 0x280
131087: 33 09 0a                 a2 = 0xa
131090: 50 20 88 06 bf 64 fe     ra = 1672, jump @1895
      :                          @9794 [@dyn 836]
131097: 49 11 60                 u64 [sp + 96] = 0
131100: 33 07                    a0 = 0
131102: 33 04 01                 t2 = 0x1
131105: 33 0b 70 02 03           a4 = 0x30270
131110: 33 00 18                 ra = 0x18
131113: 28 1b                    jump @9797
      :                          @9795
131115: 95 77 01                 a0 = a0 + 0x1
131118: 95 44 01                 t2 = t2 + 0x1
131121: 82 18 60                 a1 = u64 [sp + 0x60]
131124: 95 88 18                 a1 = a1 + 0x18
131127: 7b 18 60                 u64 [sp + 0x60] = a1
131130: 33 08 0a                 a1 = 0xa
131133: ab 87 07                 jump @9797 if a0 != a1
      :                          @9796
131136: 28 76 df 00              jump @12821
      :                          @9797
131140: 56 17 08 e7              jump @9795 if a0 >u 8
      :                          @9798
131144: 82 16 60                 s1 = u64 [sp + 0x60]
131147: 64 49                    a2 = t2
131149: 01                       fallthrough
      :                          @9799
131150: 3a 08 70 02 03           a1 = u64 [0x30270]
131155: 97 8a 0d                 a3 = a1 << 0xd
131158: d3 a8 08                 a1 = a1 ^ a3
131161: 98 8c 07                 a5 = a1 >> 0x7
131164: d3 8c 0c                 a5 = a5 ^ a1
131167: 97 c8 11                 a1 = a5 << 0x11
131170: d3 c8 08                 a1 = a1 ^ a5
131173: 3e 08 70 02 03           u64 [0x30270] = a1
131178: 82 18 08 02              a1 = u64 [sp + 0x208]
131182: ac 87 07                 jump @9801 if a0 <u a1
      :                          @9800
131185: 28 d6 f2 00              jump @13215
      :                          @9801
131189: 82 13 00 02              t1 = u64 [sp + 0x200]
131193: ca 07 02                 t0 = a0 * ra
131196: c8 32 02                 t0 = t0 + t1
131199: 82 2a 10                 a3 = u64 [t0 + 0x10]
131202: ac a9 07                 jump @9803 if a2 <u a3
      :                          @9802
131205: 28 30 df 00              jump @12820
      :                          @9803
131209: 82 2a 08                 a3 = u64 [t0 + 0x8]
131212: c8 9a 0a                 a3 = a3 + a2
131215: 84 cc 01                 a5 = a5 & 0x1
131218: 78 ac                    u8 [a3] = a5
131220: ac 89 07                 jump @9805 if a2 <u a1
      :                          @9804
131223: 28 e3 f2 00              jump @13262
      :                          @9805
131227: c8 63 03                 t1 = t1 + s1
131230: 82 38 28                 a1 = u64 [t1 + 0x28]
131233: ac 87 07                 jump @9807 if a0 <u a1
      :                          @9806
131236: 28 a3 f2 00              jump @13215
      :                          @9807
131240: 82 38 20                 a1 = u64 [t1 + 0x20]
131243: c8 78 08                 a1 = a1 + a0
131246: 78 8c                    u8 [a1] = a5
131248: 95 99 01                 a2 = a2 + 0x1
131251: 95 66 18                 s1 = s1 + 0x18
131254: 52 19 0a 98              jump @9799 if a2 != 10
      :                          @9808
131258: 28 71 ff                 jump @9795
      :                          @9809 [@dyn 837]
131261: 95 17 80 02              a0 = sp + 0x280
131265: 33 08 08                 a1 = 0x8
131268: 50 20 8c 06 ec 5c fe     ra = 1676, jump @1776
      :                          @9810 [@dyn 838]
131275: 95 17 d0 01              a0 = sp + 0x1d0
131279: 95 18 80 02              a1 = sp + 0x280
131283: 33 09 08                 a2 = 0x8
131286: 50 20 8e 06 fb 63 fe     ra = 1678, jump @1895
      :                          @9811 [@dyn 839]
131293: 49 11 60                 u64 [sp + 96] = 0
131296: 33 07                    a0 = 0
131298: 33 04 01                 t2 = 0x1
131301: 33 0b 70 02 03           a4 = 0x30270
131306: 33 00 18                 ra = 0x18
131309: 28 19                    jump @9814
      :                          @9812
131311: 95 77 01                 a0 = a0 + 0x1
131314: 95 44 01                 t2 = t2 + 0x1
131317: 82 18 60                 a1 = u64 [sp + 0x60]
131320: 95 88 18                 a1 = a1 + 0x18
131323: 7b 18 60                 u64 [sp + 0x60] = a1
131326: 52 17 08 08              jump @9814 if a0 != 8
      :                          @9813
131330: 28 57 df 00              jump @12832
      :                          @9814
131334: 56 17 06 e9              jump @9812 if a0 >u 6
      :                          @9815
131338: 82 16 60                 s1 = u64 [sp + 0x60]
131341: 64 49                    a2 = t2
131343: 01                       fallthrough
      :                          @9816
131344: 3a 08 70 02 03           a1 = u64 [0x30270]
131349: 97 8a 0d                 a3 = a1 << 0xd
131352: d3 a8 08                 a1 = a1 ^ a3
131355: 98 8c 07                 a5 = a1 >> 0x7
131358: d3 8c 0c                 a5 = a5 ^ a1
131361: 97 c8 11                 a1 = a5 << 0x11
131364: d3 c8 08                 a1 = a1 ^ a5
131367: 3e 08 70 02 03           u64 [0x30270] = a1
131372: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
131376: ac 87 07                 jump @9818 if a0 <u a1
      :                          @9817
131379: 28 14 f2 00              jump @13215
      :                          @9818
131383: 82 13 d8 01              t1 = u64 [sp + 0x1d8]
131387: ca 07 02                 t0 = a0 * ra
131390: c8 32 02                 t0 = t0 + t1
131393: 82 2a 10                 a3 = u64 [t0 + 0x10]
131396: ac a9 07                 jump @9820 if a2 <u a3
      :                          @9819
131399: 28 6e de 00              jump @12820
      :                          @9820
131403: 82 2a 08                 a3 = u64 [t0 + 0x8]
131406: c8 9a 0a                 a3 = a3 + a2
131409: 84 cc 01                 a5 = a5 & 0x1
131412: 78 ac                    u8 [a3] = a5
131414: ac 89 07                 jump @9822 if a2 <u a1
      :                          @9821
131417: 28 21 f2 00              jump @13262
      :                          @9822
131421: c8 63 03                 t1 = t1 + s1
131424: 82 38 28                 a1 = u64 [t1 + 0x28]
131427: ac 87 07                 jump @9824 if a0 <u a1
      :                          @9823
131430: 28 e1 f1 00              jump @13215
      :                          @9824
131434: 82 38 20                 a1 = u64 [t1 + 0x20]
131437: c8 78 08                 a1 = a1 + a0
131440: 78 8c                    u8 [a1] = a5
131442: 95 99 01                 a2 = a2 + 0x1
131445: 95 66 18                 s1 = s1 + 0x18
131448: 52 19 08 98              jump @9816 if a2 != 8
      :                          @9825
131452: 28 73 ff                 jump @9812
      :                          @9826 [@dyn 840]
131455: 95 17 80 02              a0 = sp + 0x280
131459: 33 09 06                 a2 = 0x6
131462: 33 08                    a1 = 0
131464: 50 20 92 06 6a 62 fe     ra = 1682, jump @1877
      :                          @9827 [@dyn 841]
131471: 95 17 a0 01              a0 = sp + 0x1a0
131475: 95 18 80 02              a1 = sp + 0x280
131479: 33 09 06                 a2 = 0x6
131482: 50 20 94 06 82 5c fe     ra = 1684, jump @1783
      :                          @9828 [@dyn 842]
131489: 3a 07 70 02 03           a0 = u64 [0x30270]
131494: 97 79 0d                 a2 = a0 << 0xd
131497: d3 97 07                 a0 = a0 ^ a2
131500: 98 79 07                 a2 = a0 >> 0x7
131503: d3 97 07                 a0 = a0 ^ a2
131506: 97 79 11                 a2 = a0 << 0x11
131509: d3 97 07                 a0 = a0 ^ a2
131512: 3e 07 70 02 03           u64 [0x30270] = a0
131517: 82 1c b0 01              a5 = u64 [sp + 0x1b0]
131521: 52 0c 07                 jump @9830 if a5 != 0
      :                          @9829
131524: 28 8b f1 00              jump @13223
      :                          @9830
131528: 82 1b a8 01              a4 = u64 [sp + 0x1a8]
131532: 82 b9 10                 a2 = u64 [a4 + 0x10]
131535: 56 19 01 08              jump @9832 if a2 >u 1
      :                          @9831
131539: 28 87 f1 00              jump @13234
      :                          @9832
131543: 3a 02 58 01 03           t0 = u64 [0x30158]
131548: ca 27 07                 a0 = a0 * t0
131551: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
131561: d6 87 08                 a1 = a0 mulhu a1
131564: 98 88 04                 a1 = a1 >> 0x4
131567: 82 ba 08                 a3 = u64 [a4 + 0x8]
131570: 96 88 14                 a1 = a1 * 0x14
131573: c9 87 07                 a0 = a0 - a1
131576: 95 79 01                 a2 = a0 + 0x1
131579: 7b a9 08                 u64 [a3 + 0x8] = a2
131582: 56 1c 01 08              jump @9834 if a5 >u 1
      :                          @9833
131586: 28 45 f1 00              jump @13215
      :                          @9834
131590: 82 b7 28                 a0 = u64 [a4 + 0x28]
131593: 52 07 07                 jump @9836 if a0 != 0
      :                          @9835
131596: 28 52 f1 00              jump @13238
      :                          @9836
131600: 82 b7 20                 a0 = u64 [a4 + 0x20]
131603: 7b 79                    u64 [a0] = a2
131605: 3a 08 70 02 03           a1 = u64 [0x30270]
131610: 97 89 0d                 a2 = a1 << 0xd
131613: d3 98 08                 a1 = a1 ^ a2
131616: 98 89 07                 a2 = a1 >> 0x7
131619: d3 98 08                 a1 = a1 ^ a2
131622: 97 8b 11                 a4 = a1 << 0x11
131625: d3 8b 0b                 a4 = a4 ^ a1
131628: 3e 0b 70 02 03           u64 [0x30270] = a4
131633: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
131637: 52 08 07                 jump @9838 if a1 != 0
      :                          @9837
131640: 28 0e f1 00              jump @13214
      :                          @9838
131644: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
131648: 82 79 10                 a2 = u64 [a0 + 0x10]
131651: 55 19 03 08              jump @9840 if a2 >=u 3
      :                          @9839
131655: 28 1f f1 00              jump @13246
      :                          @9840
131659: ca 2b 09                 a2 = a4 * t0
131662: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
131672: d6 b9 0b                 a4 = a2 mulhu a4
131675: 98 bb 04                 a4 = a4 >> 0x4
131678: 82 76 08                 s1 = u64 [a0 + 0x8]
131681: 96 bb 14                 a4 = a4 * 0x14
131684: c9 b9 09                 a2 = a2 - a4
131687: 95 99 01                 a2 = a2 + 0x1
131690: 7b 69 10                 u64 [s1 + 0x10] = a2
131693: 55 18 03 08              jump @9842 if a1 >=u 3
      :                          @9841
131697: 28 10 f0 00              jump @13197
      :                          @9842
131701: 82 78 40                 a1 = u64 [a0 + 0x40]
131704: 52 08 07                 jump @9844 if a1 != 0
      :                          @9843
131707: 28 cb f0 00              jump @13214
      :                          @9844
131711: 82 77 38                 a0 = u64 [a0 + 0x38]
131714: 7b 79                    u64 [a0] = a2
131716: 3a 08 70 02 03           a1 = u64 [0x30270]
131721: 97 89 0d                 a2 = a1 << 0xd
131724: d3 98 08                 a1 = a1 ^ a2
131727: 98 89 07                 a2 = a1 >> 0x7
131730: d3 98 08                 a1 = a1 ^ a2
131733: 97 8b 11                 a4 = a1 << 0x11
131736: d3 8b 0b                 a4 = a4 ^ a1
131739: 3e 0b 70 02 03           u64 [0x30270] = a4
131744: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
131748: 52 08 07                 jump @9846 if a1 != 0
      :                          @9845
131751: 28 9f f0 00              jump @13214
      :                          @9846
131755: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
131759: 82 79 10                 a2 = u64 [a0 + 0x10]
131762: 55 19 04 08              jump @9848 if a2 >=u 4
      :                          @9847
131766: 28 a3 f0 00              jump @13233
      :                          @9848
131770: ca 2b 09                 a2 = a4 * t0
131773: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
131783: d6 b9 0b                 a4 = a2 mulhu a4
131786: 98 bb 04                 a4 = a4 >> 0x4
131789: 82 76 08                 s1 = u64 [a0 + 0x8]
131792: 96 bb 14                 a4 = a4 * 0x14
131795: c9 b9 09                 a2 = a2 - a4
131798: 95 99 01                 a2 = a2 + 0x1
131801: 7b 69 18                 u64 [s1 + 0x18] = a2
131804: 55 18 04 08              jump @9850 if a1 >=u 4
      :                          @9849
131808: 28 a0 ef 00              jump @13196
      :                          @9850
131812: 82 78 58                 a1 = u64 [a0 + 0x58]
131815: 52 08 07                 jump @9852 if a1 != 0
      :                          @9851
131818: 28 5c f0 00              jump @13214
      :                          @9852
131822: 82 77 50                 a0 = u64 [a0 + 0x50]
131825: 7b 79                    u64 [a0] = a2
131827: 3a 08 70 02 03           a1 = u64 [0x30270]
131832: 97 89 0d                 a2 = a1 << 0xd
131835: d3 98 08                 a1 = a1 ^ a2
131838: 98 89 07                 a2 = a1 >> 0x7
131841: d3 98 08                 a1 = a1 ^ a2
131844: 97 8b 11                 a4 = a1 << 0x11
131847: d3 8b 0b                 a4 = a4 ^ a1
131850: 3e 0b 70 02 03           u64 [0x30270] = a4
131855: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
131859: 52 08 07                 jump @9854 if a1 != 0
      :                          @9853
131862: 28 30 f0 00              jump @13214
      :                          @9854
131866: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
131870: 82 79 10                 a2 = u64 [a0 + 0x10]
131873: 55 19 05 08              jump @9856 if a2 >=u 5
      :                          @9855
131877: 28 42 f0 00              jump @13247
      :                          @9856
131881: ca 2b 09                 a2 = a4 * t0
131884: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
131894: d6 b9 0b                 a4 = a2 mulhu a4
131897: 98 bb 04                 a4 = a4 >> 0x4
131900: 82 76 08                 s1 = u64 [a0 + 0x8]
131903: 96 bb 14                 a4 = a4 * 0x14
131906: c9 b9 09                 a2 = a2 - a4
131909: 95 99 01                 a2 = a2 + 0x1
131912: 7b 69 20                 u64 [s1 + 0x20] = a2
131915: 55 18 05 08              jump @9858 if a1 >=u 5
      :                          @9857
131919: 28 fa ef 00              jump @13217
      :                          @9858
131923: 82 78 70                 a1 = u64 [a0 + 0x70]
131926: 52 08 07                 jump @9860 if a1 != 0
      :                          @9859
131929: 28 ed ef 00              jump @13214
      :                          @9860
131933: 82 77 68                 a0 = u64 [a0 + 0x68]
131936: 7b 79                    u64 [a0] = a2
131938: 3a 08 70 02 03           a1 = u64 [0x30270]
131943: 97 89 0d                 a2 = a1 << 0xd
131946: d3 98 08                 a1 = a1 ^ a2
131949: 98 89 07                 a2 = a1 >> 0x7
131952: d3 98 08                 a1 = a1 ^ a2
131955: 97 8b 11                 a4 = a1 << 0x11
131958: d3 8b 0b                 a4 = a4 ^ a1
131961: 3e 0b 70 02 03           u64 [0x30270] = a4
131966: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
131970: 52 08 07                 jump @9862 if a1 != 0
      :                          @9861
131973: 28 c1 ef 00              jump @13214
      :                          @9862
131977: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
131981: 82 79 10                 a2 = u64 [a0 + 0x10]
131984: 55 19 06 08              jump @9864 if a2 >=u 6
      :                          @9863
131988: 28 da ef 00              jump @13252
      :                          @9864
131992: ca 2b 09                 a2 = a4 * t0
131995: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132005: d6 b9 0b                 a4 = a2 mulhu a4
132008: 98 bb 04                 a4 = a4 >> 0x4
132011: 82 76 08                 s1 = u64 [a0 + 0x8]
132014: 96 bb 14                 a4 = a4 * 0x14
132017: c9 b9 09                 a2 = a2 - a4
132020: 95 99 01                 a2 = a2 + 0x1
132023: 7b 69 28                 u64 [s1 + 0x28] = a2
132026: 55 18 06 08              jump @9866 if a1 >=u 6
      :                          @9865
132030: 28 8f ef 00              jump @13221
      :                          @9866
132034: 82 78 88 00              a1 = u64 [a0 + 0x88]
132038: 52 08 07                 jump @9868 if a1 != 0
      :                          @9867
132041: 28 7d ef 00              jump @13214
      :                          @9868
132045: 82 77 80 00              a0 = u64 [a0 + 0x80]
132049: 7b 79                    u64 [a0] = a2
132051: 3a 08 70 02 03           a1 = u64 [0x30270]
132056: 97 89 0d                 a2 = a1 << 0xd
132059: d3 98 08                 a1 = a1 ^ a2
132062: 98 89 07                 a2 = a1 >> 0x7
132065: d3 98 08                 a1 = a1 ^ a2
132068: 97 8c 11                 a5 = a1 << 0x11
132071: d3 8c 0c                 a5 = a5 ^ a1
132074: 3e 0c 70 02 03           u64 [0x30270] = a5
132079: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
132083: 55 18 02 08              jump @9870 if a1 >=u 2
      :                          @9869
132087: 28 88 ee 00              jump @13195
      :                          @9870
132091: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
132095: 82 79 28                 a2 = u64 [a0 + 0x28]
132098: 55 19 03 08              jump @9872 if a2 >=u 3
      :                          @9871
132102: 28 54 ef 00              jump @13234
      :                          @9872
132106: ca 2c 09                 a2 = a5 * t0
132109: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
132119: d6 a9 0a                 a3 = a2 mulhu a3
132122: 98 aa 04                 a3 = a3 >> 0x4
132125: 82 76 20                 s1 = u64 [a0 + 0x20]
132128: 96 aa 14                 a3 = a3 * 0x14
132131: c9 a9 09                 a2 = a2 - a3
132134: 95 9a 01                 a3 = a2 + 0x1
132137: 7b 6a 10                 u64 [s1 + 0x10] = a3
132140: 55 18 03 08              jump @9874 if a1 >=u 3
      :                          @9873
132144: 28 34 ef 00              jump @13244
      :                          @9874
132148: 82 78 40                 a1 = u64 [a0 + 0x40]
132151: 55 18 02 08              jump @9876 if a1 >=u 2
      :                          @9875
132155: 28 15 ef 00              jump @13224
      :                          @9876
132159: 82 77 38                 a0 = u64 [a0 + 0x38]
132162: 7b 7a 08                 u64 [a0 + 0x8] = a3
132165: 3a 08 70 02 03           a1 = u64 [0x30270]
132170: 97 8a 0d                 a3 = a1 << 0xd
132173: d3 a8 08                 a1 = a1 ^ a3
132176: 98 8a 07                 a3 = a1 >> 0x7
132179: d3 a8 08                 a1 = a1 ^ a3
132182: 97 8b 11                 a4 = a1 << 0x11
132185: d3 8b 0b                 a4 = a4 ^ a1
132188: 3e 0b 70 02 03           u64 [0x30270] = a4
132193: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
132197: 55 18 02 08              jump @9878 if a1 >=u 2
      :                          @9877
132201: 28 e7 ee 00              jump @13224
      :                          @9878
132205: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
132209: 82 79 28                 a2 = u64 [a0 + 0x28]
132212: 55 19 04 08              jump @9880 if a2 >=u 4
      :                          @9879
132216: 28 e1 ee 00              jump @13233
      :                          @9880
132220: ca 2b 09                 a2 = a4 * t0
132223: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132233: d6 b9 0b                 a4 = a2 mulhu a4
132236: 98 bb 04                 a4 = a4 >> 0x4
132239: 82 76 20                 s1 = u64 [a0 + 0x20]
132242: 96 bb 14                 a4 = a4 * 0x14
132245: c9 b9 09                 a2 = a2 - a4
132248: 95 9b 01                 a4 = a2 + 0x1
132251: 7b 6b 18                 u64 [s1 + 0x18] = a4
132254: 55 18 04 08              jump @9882 if a1 >=u 4
      :                          @9881
132258: 28 b5 ee 00              jump @13231
      :                          @9882
132262: 82 78 58                 a1 = u64 [a0 + 0x58]
132265: 55 18 02 08              jump @9884 if a1 >=u 2
      :                          @9883
132269: 28 a3 ee 00              jump @13224
      :                          @9884
132273: 82 77 50                 a0 = u64 [a0 + 0x50]
132276: 7b 7b 08                 u64 [a0 + 0x8] = a4
132279: 3a 08 70 02 03           a1 = u64 [0x30270]
132284: 97 8a 0d                 a3 = a1 << 0xd
132287: d3 a8 08                 a1 = a1 ^ a3
132290: 98 8a 07                 a3 = a1 >> 0x7
132293: d3 a8 08                 a1 = a1 ^ a3
132296: 97 8b 11                 a4 = a1 << 0x11
132299: d3 8b 0b                 a4 = a4 ^ a1
132302: 3e 0b 70 02 03           u64 [0x30270] = a4
132307: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
132311: 55 18 02 08              jump @9886 if a1 >=u 2
      :                          @9885
132315: 28 75 ee 00              jump @13224
      :                          @9886
132319: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
132323: 82 79 28                 a2 = u64 [a0 + 0x28]
132326: 55 19 05 08              jump @9888 if a2 >=u 5
      :                          @9887
132330: 28 71 ee 00              jump @13235
      :                          @9888
132334: ca 2b 09                 a2 = a4 * t0
132337: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132347: d6 b9 0b                 a4 = a2 mulhu a4
132350: 98 bb 04                 a4 = a4 >> 0x4
132353: 82 76 20                 s1 = u64 [a0 + 0x20]
132356: 96 bb 14                 a4 = a4 * 0x14
132359: c9 b9 09                 a2 = a2 - a4
132362: 95 9b 01                 a4 = a2 + 0x1
132365: 7b 6b 20                 u64 [s1 + 0x20] = a4
132368: 55 18 05 08              jump @9890 if a1 >=u 5
      :                          @9889
132372: 28 44 ee 00              jump @13232
      :                          @9890
132376: 82 78 70                 a1 = u64 [a0 + 0x70]
132379: 55 18 02 08              jump @9892 if a1 >=u 2
      :                          @9891
132383: 28 31 ee 00              jump @13224
      :                          @9892
132387: 82 77 68                 a0 = u64 [a0 + 0x68]
132390: 7b 7b 08                 u64 [a0 + 0x8] = a4
132393: 3a 08 70 02 03           a1 = u64 [0x30270]
132398: 97 8a 0d                 a3 = a1 << 0xd
132401: d3 a8 08                 a1 = a1 ^ a3
132404: 98 8a 07                 a3 = a1 >> 0x7
132407: d3 a8 08                 a1 = a1 ^ a3
132410: 97 8b 11                 a4 = a1 << 0x11
132413: d3 8b 0b                 a4 = a4 ^ a1
132416: 3e 0b 70 02 03           u64 [0x30270] = a4
132421: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
132425: 55 18 02 08              jump @9894 if a1 >=u 2
      :                          @9893
132429: 28 03 ee 00              jump @13224
      :                          @9894
132433: 82 1a a8 01              a3 = u64 [sp + 0x1a8]
132437: 82 a9 28                 a2 = u64 [a3 + 0x28]
132440: 55 19 06 08              jump @9896 if a2 >=u 6
      :                          @9895
132444: 28 00 ee 00              jump @13236
      :                          @9896
132448: ca 2b 09                 a2 = a4 * t0
132451: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132461: d6 b9 0b                 a4 = a2 mulhu a4
132464: 98 bb 04                 a4 = a4 >> 0x4
132467: 82 a6 20                 s1 = u64 [a3 + 0x20]
132470: 96 bb 14                 a4 = a4 * 0x14
132473: c9 b9 09                 a2 = a2 - a4
132476: 95 99 01                 a2 = a2 + 0x1
132479: 7b 69 28                 u64 [s1 + 0x28] = a2
132482: 55 18 06 08              jump @9898 if a1 >=u 6
      :                          @9897
132486: 28 d7 ed 00              jump @13237
      :                          @9898
132490: 82 a8 88 00              a1 = u64 [a3 + 0x88]
132494: 55 18 02 08              jump @9900 if a1 >=u 2
      :                          @9899
132498: 28 be ed 00              jump @13224
      :                          @9900
132502: 82 a8 80 00              a1 = u64 [a3 + 0x80]
132506: 7b 89 08                 u64 [a1 + 0x8] = a2
132509: 3a 09 70 02 03           a2 = u64 [0x30270]
132514: 97 9a 0d                 a3 = a2 << 0xd
132517: d3 a9 09                 a2 = a2 ^ a3
132520: 98 9a 07                 a3 = a2 >> 0x7
132523: d3 a9 09                 a2 = a2 ^ a3
132526: 97 9c 11                 a5 = a2 << 0x11
132529: d3 9c 0c                 a5 = a5 ^ a2
132532: 3e 0c 70 02 03           u64 [0x30270] = a5
132537: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
132541: 55 18 03 08              jump @9902 if a1 >=u 3
      :                          @9901
132545: 28 86 ed 00              jump @13215
      :                          @9902
132549: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
132553: 82 79 40                 a2 = u64 [a0 + 0x40]
132556: 55 19 04 08              jump @9904 if a2 >=u 4
      :                          @9903
132560: 28 8a ed 00              jump @13234
      :                          @9904
132564: ca 2c 09                 a2 = a5 * t0
132567: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
132577: d6 a9 0a                 a3 = a2 mulhu a3
132580: 98 aa 04                 a3 = a3 >> 0x4
132583: 82 76 38                 s1 = u64 [a0 + 0x38]
132586: 96 aa 14                 a3 = a3 * 0x14
132589: c9 a9 09                 a2 = a2 - a3
132592: 95 9a 01                 a3 = a2 + 0x1
132595: 7b 6a 18                 u64 [s1 + 0x18] = a3
132598: 55 18 04 08              jump @9906 if a1 >=u 4
      :                          @9905
132602: 28 6e ed 00              jump @13248
      :                          @9906
132606: 82 78 58                 a1 = u64 [a0 + 0x58]
132609: 55 18 03 08              jump @9908 if a1 >=u 3
      :                          @9907
132613: 28 4c ed 00              jump @13225
      :                          @9908
132617: 82 77 50                 a0 = u64 [a0 + 0x50]
132620: 7b 7a 10                 u64 [a0 + 0x10] = a3
132623: 3a 08 70 02 03           a1 = u64 [0x30270]
132628: 97 8a 0d                 a3 = a1 << 0xd
132631: d3 a8 08                 a1 = a1 ^ a3
132634: 98 8a 07                 a3 = a1 >> 0x7
132637: d3 a8 08                 a1 = a1 ^ a3
132640: 97 8b 11                 a4 = a1 << 0x11
132643: d3 8b 0b                 a4 = a4 ^ a1
132646: 3e 0b 70 02 03           u64 [0x30270] = a4
132651: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
132655: 55 18 03 08              jump @9910 if a1 >=u 3
      :                          @9909
132659: 28 1e ed 00              jump @13225
      :                          @9910
132663: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
132667: 82 79 40                 a2 = u64 [a0 + 0x40]
132670: 55 19 05 08              jump @9912 if a2 >=u 5
      :                          @9911
132674: 28 19 ed 00              jump @13235
      :                          @9912
132678: ca 2b 09                 a2 = a4 * t0
132681: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132691: d6 b9 0b                 a4 = a2 mulhu a4
132694: 98 bb 04                 a4 = a4 >> 0x4
132697: 82 76 38                 s1 = u64 [a0 + 0x38]
132700: 96 bb 14                 a4 = a4 * 0x14
132703: c9 b9 09                 a2 = a2 - a4
132706: 95 9b 01                 a4 = a2 + 0x1
132709: 7b 6b 20                 u64 [s1 + 0x20] = a4
132712: 55 18 05 08              jump @9914 if a1 >=u 5
      :                          @9913
132716: 28 ec ec 00              jump @13232
      :                          @9914
132720: 82 78 70                 a1 = u64 [a0 + 0x70]
132723: 55 18 03 08              jump @9916 if a1 >=u 3
      :                          @9915
132727: 28 da ec 00              jump @13225
      :                          @9916
132731: 82 77 68                 a0 = u64 [a0 + 0x68]
132734: 7b 7b 10                 u64 [a0 + 0x10] = a4
132737: 3a 08 70 02 03           a1 = u64 [0x30270]
132742: 97 8a 0d                 a3 = a1 << 0xd
132745: d3 a8 08                 a1 = a1 ^ a3
132748: 98 8a 07                 a3 = a1 >> 0x7
132751: d3 a8 08                 a1 = a1 ^ a3
132754: 97 8b 11                 a4 = a1 << 0x11
132757: d3 8b 0b                 a4 = a4 ^ a1
132760: 3e 0b 70 02 03           u64 [0x30270] = a4
132765: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
132769: 55 18 03 08              jump @9918 if a1 >=u 3
      :                          @9917
132773: 28 ac ec 00              jump @13225
      :                          @9918
132777: 82 1a a8 01              a3 = u64 [sp + 0x1a8]
132781: 82 a9 40                 a2 = u64 [a3 + 0x40]
132784: 55 19 06 08              jump @9920 if a2 >=u 6
      :                          @9919
132788: 28 a8 ec 00              jump @13236
      :                          @9920
132792: ca 2b 09                 a2 = a4 * t0
132795: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132805: d6 b9 0b                 a4 = a2 mulhu a4
132808: 98 bb 04                 a4 = a4 >> 0x4
132811: 82 a6 38                 s1 = u64 [a3 + 0x38]
132814: 96 bb 14                 a4 = a4 * 0x14
132817: c9 b9 09                 a2 = a2 - a4
132820: 95 99 01                 a2 = a2 + 0x1
132823: 7b 69 28                 u64 [s1 + 0x28] = a2
132826: 55 18 06 08              jump @9922 if a1 >=u 6
      :                          @9921
132830: 28 7f ec 00              jump @13237
      :                          @9922
132834: 82 a8 88 00              a1 = u64 [a3 + 0x88]
132838: 55 18 03 08              jump @9924 if a1 >=u 3
      :                          @9923
132842: 28 67 ec 00              jump @13225
      :                          @9924
132846: 82 a8 80 00              a1 = u64 [a3 + 0x80]
132850: 7b 89 10                 u64 [a1 + 0x10] = a2
132853: 3a 09 70 02 03           a2 = u64 [0x30270]
132858: 97 9a 0d                 a3 = a2 << 0xd
132861: d3 a9 09                 a2 = a2 ^ a3
132864: 98 9a 07                 a3 = a2 >> 0x7
132867: d3 a9 09                 a2 = a2 ^ a3
132870: 97 9c 11                 a5 = a2 << 0x11
132873: d3 9c 0c                 a5 = a5 ^ a2
132876: 3e 0c 70 02 03           u64 [0x30270] = a5
132881: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
132885: 55 18 04 08              jump @9926 if a1 >=u 4
      :                          @9925
132889: 28 2e ec 00              jump @13215
      :                          @9926
132893: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
132897: 82 79 58                 a2 = u64 [a0 + 0x58]
132900: 55 19 05 08              jump @9928 if a2 >=u 5
      :                          @9927
132904: 28 32 ec 00              jump @13234
      :                          @9928
132908: ca 2c 09                 a2 = a5 * t0
132911: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
132921: d6 a9 0a                 a3 = a2 mulhu a3
132924: 98 aa 04                 a3 = a3 >> 0x4
132927: 82 76 50                 s1 = u64 [a0 + 0x50]
132930: 96 aa 14                 a3 = a3 * 0x14
132933: c9 a9 09                 a2 = a2 - a3
132936: 95 9a 01                 a3 = a2 + 0x1
132939: 7b 6a 20                 u64 [s1 + 0x20] = a3
132942: 55 18 05 08              jump @9930 if a1 >=u 5
      :                          @9929
132946: 28 13 ec 00              jump @13245
      :                          @9930
132950: 82 78 70                 a1 = u64 [a0 + 0x70]
132953: 55 18 04 08              jump @9932 if a1 >=u 4
      :                          @9931
132957: 28 fa eb 00              jump @13231
      :                          @9932
132961: 82 77 68                 a0 = u64 [a0 + 0x68]
132964: 7b 7a 18                 u64 [a0 + 0x18] = a3
132967: 3a 08 70 02 03           a1 = u64 [0x30270]
132972: 97 8a 0d                 a3 = a1 << 0xd
132975: d3 a8 08                 a1 = a1 ^ a3
132978: 98 8a 07                 a3 = a1 >> 0x7
132981: d3 a8 08                 a1 = a1 ^ a3
132984: 97 8b 11                 a4 = a1 << 0x11
132987: d3 8b 0b                 a4 = a4 ^ a1
132990: 3e 0b 70 02 03           u64 [0x30270] = a4
132995: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
132999: 55 18 04 08              jump @9934 if a1 >=u 4
      :                          @9933
133003: 28 cc eb 00              jump @13231
      :                          @9934
133007: 82 1a a8 01              a3 = u64 [sp + 0x1a8]
133011: 82 a9 58                 a2 = u64 [a3 + 0x58]
133014: 55 19 06 08              jump @9936 if a2 >=u 6
      :                          @9935
133018: 28 c2 eb 00              jump @13236
      :                          @9936
133022: ca 2b 09                 a2 = a4 * t0
133025: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
133035: d6 b9 0b                 a4 = a2 mulhu a4
133038: 98 bb 04                 a4 = a4 >> 0x4
133041: 82 a6 50                 s1 = u64 [a3 + 0x50]
133044: 96 bb 14                 a4 = a4 * 0x14
133047: c9 b9 09                 a2 = a2 - a4
133050: 95 99 01                 a2 = a2 + 0x1
133053: 7b 69 28                 u64 [s1 + 0x28] = a2
133056: 55 18 06 08              jump @9938 if a1 >=u 6
      :                          @9937
133060: 28 99 eb 00              jump @13237
      :                          @9938
133064: 82 a8 88 00              a1 = u64 [a3 + 0x88]
133068: 55 18 04 08              jump @9940 if a1 >=u 4
      :                          @9939
133072: 28 87 eb 00              jump @13231
      :                          @9940
133076: 82 a8 80 00              a1 = u64 [a3 + 0x80]
133080: 7b 89 18                 u64 [a1 + 0x18] = a2
133083: 3a 09 70 02 03           a2 = u64 [0x30270]
133088: 97 9a 0d                 a3 = a2 << 0xd
133091: d3 a9 09                 a2 = a2 ^ a3
133094: 98 9a 07                 a3 = a2 >> 0x7
133097: d3 a9 09                 a2 = a2 ^ a3
133100: 97 9c 11                 a5 = a2 << 0x11
133103: d3 9c 0c                 a5 = a5 ^ a2
133106: 3e 0c 70 02 03           u64 [0x30270] = a5
133111: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
133115: 55 18 05 08              jump @9942 if a1 >=u 5
      :                          @9941
133119: 28 48 eb 00              jump @13215
      :                          @9942
133123: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
133127: 82 79 70                 a2 = u64 [a0 + 0x70]
133130: 55 19 06 08              jump @9944 if a2 >=u 6
      :                          @9943
133134: 28 4c eb 00              jump @13234
      :                          @9944
133138: ca 2c 09                 a2 = a5 * t0
133141: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
133151: d6 a9 0a                 a3 = a2 mulhu a3
133154: 98 aa 04                 a3 = a3 >> 0x4
133157: 33 0c 14                 a5 = 0x14
133160: 82 76 68                 s1 = u64 [a0 + 0x68]
133163: ca ca 0a                 a3 = a3 * a5
133166: c9 a9 09                 a2 = a2 - a3
133169: 95 99 01                 a2 = a2 + 0x1
133172: 7b 69 28                 u64 [s1 + 0x28] = a2
133175: 55 18 06 08              jump @9946 if a1 >=u 6
      :                          @9945
133179: 28 35 eb 00              jump @13254
      :                          @9946
133183: 7b 12 60                 u64 [sp + 0x60] = t0
133186: 82 78 88 00              a1 = u64 [a0 + 0x88]
133190: 55 18 05 08              jump @9948 if a1 >=u 5
      :                          @9947
133194: 28 0e eb 00              jump @13232
      :                          @9948
133198: 82 77 80 00              a0 = u64 [a0 + 0x80]
133202: 7b 79 20                 u64 [a0 + 0x20] = a2
133205: 95 17 b8 01              a0 = sp + 0x1b8
133209: 33 08 06                 a1 = 0x6
133212: 50 20 96 06 0c 72 fe     ra = 1686, jump @2226
      :                          @9949 [@dyn 843]
133219: 49 21 10 01              u64 [sp + 272] = 0
133223: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
133227: 82 19 c8 01              a2 = u64 [sp + 0x1c8]
133231: 49 21 18 01 08           u64 [sp + 280] = 0x8
133236: 49 21 20 01              u64 [sp + 288] = 0
133240: 95 17 d0 01              a0 = sp + 0x1d0
133244: 50 20 98 06 67 68 fe     ra = 1688, jump @2100
      :                          @9950 [@dyn 844]
133251: 3a 07 70 02 03           a0 = u64 [0x30270]
133256: 97 79 0d                 a2 = a0 << 0xd
133259: d3 97 07                 a0 = a0 ^ a2
133262: 98 79 07                 a2 = a0 >> 0x7
133265: d3 97 07                 a0 = a0 ^ a2
133268: 97 79 11                 a2 = a0 << 0x11
133271: d3 97 07                 a0 = a0 ^ a2
133274: 3e 07 70 02 03           u64 [0x30270] = a0
133279: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
133283: 82 19 60                 a2 = u64 [sp + 0x60]
133286: 52 06 07                 jump @9952 if s1 != 0
      :                          @9951
133289: 28 a9 ea 00              jump @13226
      :                          @9952
133293: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
133297: ca 97 07                 a0 = a0 * a2
133300: cd 67 09                 a2 = a0 %u s1
133303: 97 97 03                 a0 = a2 << 0x3
133306: c8 87 07                 a0 = a0 + a1
133309: 82 78                    a1 = u64 [a0]
133311: 7b 18 58                 u64 [sp + 0x58] = a1
133314: 95 78 08                 a1 = a0 + 0x8
133317: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
133320: c8 69 09                 a2 = a2 + s1
133323: 97 99 03                 a2 = a2 << 0x3
133326: 50 20 9a 06 c4 01 01     ra = 1690, jump @13653
      :                          @9953 [@dyn 845]
133333: 82 18 20 01              a1 = u64 [sp + 0x120]
133337: 82 17 10 01              a0 = u64 [sp + 0x110]
133341: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
133344: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
133348: ab 78 13                 jump @9956 if a1 != a0
      :                          @9954
133351: 95 17 10 01              a0 = sp + 0x110
133355: 50 20 9c 06 24 4a fe     ra = 1692, jump @1581
      :                          @9955 [@dyn 846]
133362: 82 18 20 01              a1 = u64 [sp + 0x120]
133366: 01                       fallthrough
      :                          @9956
133367: 82 17 18 01              a0 = u64 [sp + 0x118]
133371: 97 89 03                 a2 = a1 << 0x3
133374: c8 97 07                 a0 = a0 + a2
133377: 82 19 58                 a2 = u64 [sp + 0x58]
133380: 7b 79                    u64 [a0] = a2
133382: 95 88 01                 a1 = a1 + 0x1
133385: 7b 18 20 01              u64 [sp + 0x120] = a1
133389: 3a 07 70 02 03           a0 = u64 [0x30270]
133394: 97 79 0d                 a2 = a0 << 0xd
133397: d3 97 07                 a0 = a0 ^ a2
133400: 98 79 07                 a2 = a0 >> 0x7
133403: d3 97 07                 a0 = a0 ^ a2
133406: 97 79 11                 a2 = a0 << 0x11
133409: d3 97 07                 a0 = a0 ^ a2
133412: 3e 07 70 02 03           u64 [0x30270] = a0
133417: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
133421: 82 19 60                 a2 = u64 [sp + 0x60]
133424: 52 06 07                 jump @9958 if s1 != 0
      :                          @9957
133427: 28 1f ea 00              jump @13226
      :                          @9958
133431: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
133435: ca 97 07                 a0 = a0 * a2
133438: cd 67 09                 a2 = a0 %u s1
133441: 97 97 03                 a0 = a2 << 0x3
133444: c8 87 07                 a0 = a0 + a1
133447: 82 78                    a1 = u64 [a0]
133449: 7b 18 58                 u64 [sp + 0x58] = a1
133452: 95 78 08                 a1 = a0 + 0x8
133455: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
133458: c8 69 09                 a2 = a2 + s1
133461: 97 99 03                 a2 = a2 << 0x3
133464: 50 20 9e 06 3a 01 01     ra = 1694, jump @13653
      :                          @9959 [@dyn 847]
133471: 82 18 20 01              a1 = u64 [sp + 0x120]
133475: 82 17 10 01              a0 = u64 [sp + 0x110]
133479: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
133482: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
133486: ab 78 13                 jump @9962 if a1 != a0
      :                          @9960
133489: 95 17 10 01              a0 = sp + 0x110
133493: 50 20 a0 06 9a 49 fe     ra = 1696, jump @1581
      :                          @9961 [@dyn 848]
133500: 82 18 20 01              a1 = u64 [sp + 0x120]
133504: 01                       fallthrough
      :                          @9962
133505: 82 17 18 01              a0 = u64 [sp + 0x118]
133509: 97 89 03                 a2 = a1 << 0x3
133512: c8 97 07                 a0 = a0 + a2
133515: 82 19 58                 a2 = u64 [sp + 0x58]
133518: 7b 79                    u64 [a0] = a2
133520: 95 88 01                 a1 = a1 + 0x1
133523: 7b 18 20 01              u64 [sp + 0x120] = a1
133527: 3a 07 70 02 03           a0 = u64 [0x30270]
133532: 97 79 0d                 a2 = a0 << 0xd
133535: d3 97 07                 a0 = a0 ^ a2
133538: 98 79 07                 a2 = a0 >> 0x7
133541: d3 97 07                 a0 = a0 ^ a2
133544: 97 79 11                 a2 = a0 << 0x11
133547: d3 97 07                 a0 = a0 ^ a2
133550: 3e 07 70 02 03           u64 [0x30270] = a0
133555: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
133559: 82 18 60                 a1 = u64 [sp + 0x60]
133562: 52 06 07                 jump @9964 if s1 != 0
      :                          @9963
133565: 28 95 e9 00              jump @13226
      :                          @9964
133569: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
133573: ca 87 07                 a0 = a0 * a1
133576: cd 67 09                 a2 = a0 %u s1
133579: 97 97 03                 a0 = a2 << 0x3
133582: 7b 1a 60                 u64 [sp + 0x60] = a3
133585: c8 a7 07                 a0 = a0 + a3
133588: 82 78                    a1 = u64 [a0]
133590: 7b 18 58                 u64 [sp + 0x58] = a1
133593: 95 78 08                 a1 = a0 + 0x8
133596: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
133599: c8 69 09                 a2 = a2 + s1
133602: 97 99 03                 a2 = a2 << 0x3
133605: 50 20 a2 06 ad 00 01     ra = 1698, jump @13653
      :                          @9965 [@dyn 849]
133612: 82 18 20 01              a1 = u64 [sp + 0x120]
133616: 82 17 10 01              a0 = u64 [sp + 0x110]
133620: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
133623: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
133627: ab 78 13                 jump @9968 if a1 != a0
      :                          @9966
133630: 95 17 10 01              a0 = sp + 0x110
133634: 50 20 a4 06 0d 49 fe     ra = 1700, jump @1581
      :                          @9967 [@dyn 850]
133641: 82 18 20 01              a1 = u64 [sp + 0x120]
133645: 01                       fallthrough
      :                          @9968
133646: 82 17 18 01              a0 = u64 [sp + 0x118]
133650: 97 89 03                 a2 = a1 << 0x3
133653: c8 97 07                 a0 = a0 + a2
133656: 82 19 58                 a2 = u64 [sp + 0x58]
133659: 7b 79                    u64 [a0] = a2
133661: 95 89 01                 a2 = a1 + 0x1
133664: 7b 19 20 01              u64 [sp + 0x120] = a2
133668: 82 18 18 01              a1 = u64 [sp + 0x118]
133672: 95 17 a0 01              a0 = sp + 0x1a0
133676: 50 20 a6 06 16 31 ff     ra = 1702, jump @6374
      :                          @9969 [@dyn 851]
133683: 7b 17 00 01              u64 [sp + 0x100] = a0
133687: 95 17 10 01              a0 = sp + 0x110
133691: 7b 17 28 02              u64 [sp + 0x228] = a0
133695: 33 07 20 02              a0 = 0x220
133699: 7b 17 30 02              u64 [sp + 0x230] = a0
133703: 95 17 00 01              a0 = sp + 0x100
133707: 7b 17 38 02              u64 [sp + 0x238] = a0
133711: 33 07 28 0c              a0 = 0xc28
133715: 7b 17 40 02              u64 [sp + 0x240] = a0
133719: 33 07 00 12 01           a0 = 0x11200
133724: 7b 17 80 02              u64 [sp + 0x280] = a0
133728: 49 21 88 02 02           u64 [sp + 648] = 0x2
133733: 49 21 a0 02              u64 [sp + 672] = 0
133737: 95 18 28 02              a1 = sp + 0x228
133741: 7b 18 90 02              u64 [sp + 0x290] = a1
133745: 49 21 98 02 02           u64 [sp + 664] = 0x2
133750: 95 17 f8 01              a0 = sp + 0x1f8
133754: 95 18 80 02              a1 = sp + 0x280
133758: 50 20 a8 06 c9 44 fe     ra = 1704, jump @1491
      :                          @9970 [@dyn 852]
133765: 82 16 00 02              s1 = u64 [sp + 0x200]
133769: 82 1b 08 02              a4 = u64 [sp + 0x208]
133773: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
133777: 7b 17 58                 u64 [sp + 0x58] = a0
133780: 33 07 02                 a0 = 0x2
133783: 33 08                    a1 = 0
133785: 33 09                    a2 = 0
133787: 64 6a                    a3 = s1
133789: 33 00 aa 06              ra = 0x6aa
133793: 0a 64                    ecalli 100 // 'log'
133795: 01                       fallthrough
      :                          @9971 [@dyn 853]
133796: 82 1c 58                 a5 = u64 [sp + 0x58]
133799: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
133804: 53 38 00 00 f0 27        jump @9977 if a1 <u 4293918720
      :                          @9972
133810: 33 07 b0 02 03           a0 = 0x302b0
133815: 95 77 00 00 10           a0 = a0 + 0x100000
133820: 01                       fallthrough
      :                          @9973
133821: 82 78                    a1 = u64 [a0]
133823: c9 87 09                 a2 = a0 - a1
133826: ab 69 11                 jump @9977 if a2 != s1
      :                          @9974
133829: c9 c8 09                 a2 = a1 - a5
133832: 01                       fallthrough
      :                          @9975
133833: 82 7a                    a3 = u64 [a0]
133835: ab 8a f2                 jump @9973 if a3 != a1
      :                          @9976
133838: 7b 79                    u64 [a0] = a2
133840: 33 0b                    a4 = 0
133842: 01                       fallthrough
      :                          @9977
133843: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
133847: 82 16 60                 s1 = u64 [sp + 0x60]
133850: 51 07 2d                 jump @9984 if a0 == 0
      :                          @9978
133853: 56 37 00 00 02 2a        jump @9984 if a0 >u 131072
      :                          @9979
133859: 97 77 03                 a0 = a0 << 0x3
133862: 33 08 b0 02 03           a1 = 0x302b0
133867: 95 88 00 00 10           a1 = a1 + 0x100000
133872: 01                       fallthrough
      :                          @9980
133873: 82 89                    a2 = u64 [a1]
133875: c9 98 0a                 a3 = a1 - a2
133878: ab 6a 11                 jump @9984 if a3 != s1
      :                          @9981
133881: c9 79 0a                 a3 = a2 - a0
133884: 01                       fallthrough
      :                          @9982
133885: 82 8b                    a4 = u64 [a1]
133887: ab 9b f2                 jump @9980 if a4 != a2
      :                          @9983
133890: 7b 8a                    u64 [a1] = a3
133892: 33 0c                    a5 = 0
133894: 01                       fallthrough
      :                          @9984
133895: 82 18 10 01              a1 = u64 [sp + 0x110]
133899: 51 08 31                 jump @9991 if a1 == 0
      :                          @9985
133902: 56 38 00 00 02 2e        jump @9991 if a1 >u 131072
      :                          @9986
133908: 82 17 18 01              a0 = u64 [sp + 0x118]
133912: 97 88 03                 a1 = a1 << 0x3
133915: 33 09 b0 02 03           a2 = 0x302b0
133920: 95 99 00 00 10           a2 = a2 + 0x100000
133925: 01                       fallthrough
      :                          @9987
133926: 82 9a                    a3 = u64 [a2]
133928: c9 a9 0b                 a4 = a2 - a3
133931: ab 7b 11                 jump @9991 if a4 != a0
      :                          @9988
133934: c9 8a 0b                 a4 = a3 - a1
133937: 01                       fallthrough
      :                          @9989
133938: 82 9c                    a5 = u64 [a2]
133940: ab ac f2                 jump @9987 if a5 != a3
      :                          @9990
133943: 7b 9b                    u64 [a2] = a4
133945: 33 06                    s1 = 0
133947: 01                       fallthrough
      :                          @9991
133948: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
133952: 51 08 3c                 jump @9998 if a1 == 0
      :                          @9992
133955: 56 38 00 00 02 39        jump @9998 if a1 >u 131072
      :                          @9993
133961: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
133965: 97 88 03                 a1 = a1 << 0x3
133968: 33 09 b0 02 03           a2 = 0x302b0
133973: 95 99 00 00 10           a2 = a2 + 0x100000
133978: 01                       fallthrough
      :                          @9994
133979: 82 9a                    a3 = u64 [a2]
133981: c9 a9 0b                 a4 = a2 - a3
133984: ab 7b 1c                 jump @9998 if a4 != a0
      :                          @9995
133987: c9 8a 0b                 a4 = a3 - a1
133990: 01                       fallthrough
      :                          @9996
133991: 82 9c                    a5 = u64 [a2]
133993: ab ac f2                 jump @9994 if a5 != a3
      :                          @9997
133996: 7b 9b                    u64 [a2] = a4
133998: 33 06                    s1 = 0
134000: 95 17 a0 01              a0 = sp + 0x1a0
134004: 33 00 ac 06              ra = 0x6ac
134008: 28 e2 00 fe              jump @229
      :                          @9998
134012: 95 17 a0 01              a0 = sp + 0x1a0
134016: 50 20 ac 06 da 00 fe     ra = 1708, jump @229
      :                          @9999 [@dyn 854]
134023: 28 64 d6 00              jump @12862
      :                          @10000 [@dyn 855]
134027: 33 06                    s1 = 0
134029: 3a 02 58 01 03           t0 = u64 [0x30158]
134034: 49 21 10 01              u64 [sp + 272] = 0
134038: 49 21 18 01 08           u64 [sp + 280] = 0x8
134043: 49 21 20 01              u64 [sp + 288] = 0
134047: 3a 03 68 01 03           t1 = u64 [0x30168]
134052: 33 0c 70 02 03           a5 = 0x30270
134057: 33 04 32                 t2 = 0x32
134060: 33 00 0a                 ra = 0xa
134063: 7b 12 58                 u64 [sp + 0x58] = t0
134066: 7b 13 50                 u64 [sp + 0x50] = t1
134069: 28 39                    jump @10003
      :                          @10001
134071: 95 67 01                 a0 = s1 + 0x1
134074: ca 29 09                 a2 = a2 * t0
134077: 98 9a 01                 a3 = a2 >> 0x1
134080: d6 3a 0a                 a3 = a3 mulhu t1
134083: 98 aa 04                 a3 = a3 >> 0x4
134086: ca 4a 0a                 a3 = a3 * t2
134089: 82 1b 18 01              a4 = u64 [sp + 0x118]
134093: c9 a9 09                 a2 = a2 - a3
134096: 95 99 01                 a2 = a2 + 0x1
134099: 97 8a 04                 a3 = a1 << 0x4
134102: c8 ba 0a                 a3 = a3 + a4
134105: 7b a6                    u64 [a3] = s1
134107: 7b a9 08                 u64 [a3 + 0x8] = a2
134110: 95 89 01                 a2 = a1 + 0x1
134113: 7b 19 20 01              u64 [sp + 0x120] = a2
134117: 64 76                    s1 = a0
134119: ab 07 07                 jump @10003 if a0 != ra
      :                          @10002
134122: 28 dd bf 00              jump @12424
      :                          @10003
134126: 3a 07 70 02 03           a0 = u64 [0x30270]
134131: 97 78 0d                 a1 = a0 << 0xd
134134: d3 87 07                 a0 = a0 ^ a1
134137: 98 78 07                 a1 = a0 >> 0x7
134140: d3 87 07                 a0 = a0 ^ a1
134143: 97 78 11                 a1 = a0 << 0x11
134146: d3 78 09                 a2 = a1 ^ a0
134149: 3e 09 70 02 03           u64 [0x30270] = a2
134154: 82 18 20 01              a1 = u64 [sp + 0x120]
134158: 82 17 10 01              a0 = u64 [sp + 0x110]
134162: ab 78 a5                 jump @10001 if a1 != a0
      :                          @10004
134165: 95 17 10 01              a0 = sp + 0x110
134169: 7b 19 60                 u64 [sp + 0x60] = a2
134172: 50 20 b0 06 ec 47 fe     ra = 1712, jump @1605
      :                          @10005 [@dyn 856]
134179: 82 19 60                 a2 = u64 [sp + 0x60]
134182: 33 00 0a                 ra = 0xa
134185: 33 04 32                 t2 = 0x32
134188: 33 0c 70 02 03           a5 = 0x30270
134193: 82 13 50                 t1 = u64 [sp + 0x50]
134196: 82 12 58                 t0 = u64 [sp + 0x58]
134199: 82 18 20 01              a1 = u64 [sp + 0x120]
134203: 28 7c ff                 jump @10001
      :                          @10006 [@dyn 857]
134206: 49 21 f8 01              u64 [sp + 504] = 0
134210: 49 21 00 02 08           u64 [sp + 512] = 0x8
134215: 49 21 08 02              u64 [sp + 520] = 0
134219: 33 06 70 02 03           s1 = 0x30270
134224: 49 11 60 03              u64 [sp + 96] = 0x3
134228: 28 37                    jump @10009
      :                          @10007
134230: 82 17 00 02              a0 = u64 [sp + 0x200]
134234: 82 19 90 02              a2 = u64 [sp + 0x290]
134238: 96 8a 18                 a3 = a1 * 0x18
134241: c8 7a 0a                 a3 = a3 + a0
134244: 7b a9 10                 u64 [a3 + 0x10] = a2
134247: 82 19 88 02              a2 = u64 [sp + 0x288]
134251: 7b a9 08                 u64 [a3 + 0x8] = a2
134254: 82 19 80 02              a2 = u64 [sp + 0x280]
134258: 7b a9                    u64 [a3] = a2
134260: 95 88 01                 a1 = a1 + 0x1
134263: 82 19 60                 a2 = u64 [sp + 0x60]
134266: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
134269: 7b 18 08 02              u64 [sp + 0x208] = a1
134273: 7b 19 60                 u64 [sp + 0x60] = a2
134276: 52 09 07                 jump @10009 if a2 != 0
      :                          @10008
134279: 28 62 c0 00              jump @12452
      :                          @10009
134283: 49 21 80 02              u64 [sp + 640] = 0
134287: 49 21 88 02 08           u64 [sp + 648] = 0x8
134292: 49 21 90 02              u64 [sp + 656] = 0
134296: 3a 07 70 02 03           a0 = u64 [0x30270]
134301: 97 78 0d                 a1 = a0 << 0xd
134304: d3 87 07                 a0 = a0 ^ a1
134307: 98 78 07                 a1 = a0 >> 0x7
134310: d3 87 07                 a0 = a0 ^ a1
134313: 97 78 11                 a1 = a0 << 0x11
134316: d3 78 08                 a1 = a1 ^ a0
134319: 84 77 01                 a0 = a0 & 0x1
134322: 3e 08 70 02 03           u64 [0x30270] = a1
134327: 52 07 32                 jump @10014 if a0 != 0
      :                          @10010
134330: 82 18 90 02              a1 = u64 [sp + 0x290]
134334: 82 17 80 02              a0 = u64 [sp + 0x280]
134338: ab 78 13                 jump @10013 if a1 != a0
      :                          @10011
134341: 95 17 80 02              a0 = sp + 0x280
134345: 50 20 b4 06 46 46 fe     ra = 1716, jump @1581
      :                          @10012 [@dyn 858]
134352: 82 18 90 02              a1 = u64 [sp + 0x290]
134356: 01                       fallthrough
      :                          @10013
134357: 82 17 88 02              a0 = u64 [sp + 0x288]
134361: 97 89 03                 a2 = a1 << 0x3
134364: c8 97 07                 a0 = a0 + a2
134367: 49 07                    u64 [a0 + 0] = 0
134369: 95 88 01                 a1 = a1 + 0x1
134372: 7b 18 90 02              u64 [sp + 0x290] = a1
134376: 01                       fallthrough
      :                          @10014
134377: 3a 07 70 02 03           a0 = u64 [0x30270]
134382: 97 78 0d                 a1 = a0 << 0xd
134385: d3 87 07                 a0 = a0 ^ a1
134388: 98 78 07                 a1 = a0 >> 0x7
134391: d3 87 07                 a0 = a0 ^ a1
134394: 97 78 11                 a1 = a0 << 0x11
134397: d3 78 08                 a1 = a1 ^ a0
134400: 84 77 01                 a0 = a0 & 0x1
134403: 3e 08 70 02 03           u64 [0x30270] = a1
134408: 52 07 33                 jump @10019 if a0 != 0
      :                          @10015
134411: 82 18 90 02              a1 = u64 [sp + 0x290]
134415: 82 17 80 02              a0 = u64 [sp + 0x280]
134419: ab 78 13                 jump @10018 if a1 != a0
      :                          @10016
134422: 95 17 80 02              a0 = sp + 0x280
134426: 50 20 b6 06 f5 45 fe     ra = 1718, jump @1581
      :                          @10017 [@dyn 859]
134433: 82 18 90 02              a1 = u64 [sp + 0x290]
134437: 01                       fallthrough
      :                          @10018
134438: 82 17 88 02              a0 = u64 [sp + 0x288]
134442: 97 89 03                 a2 = a1 << 0x3
134445: c8 97 07                 a0 = a0 + a2
134448: 49 07 01                 u64 [a0 + 0] = 0x1
134451: 95 88 01                 a1 = a1 + 0x1
134454: 7b 18 90 02              u64 [sp + 0x290] = a1
134458: 01                       fallthrough
      :                          @10019
134459: 3a 07 70 02 03           a0 = u64 [0x30270]
134464: 97 78 0d                 a1 = a0 << 0xd
134467: d3 87 07                 a0 = a0 ^ a1
134470: 98 78 07                 a1 = a0 >> 0x7
134473: d3 87 07                 a0 = a0 ^ a1
134476: 97 78 11                 a1 = a0 << 0x11
134479: d3 78 08                 a1 = a1 ^ a0
134482: 84 77 01                 a0 = a0 & 0x1
134485: 3e 08 70 02 03           u64 [0x30270] = a1
134490: 52 07 33                 jump @10024 if a0 != 0
      :                          @10020
134493: 82 18 90 02              a1 = u64 [sp + 0x290]
134497: 82 17 80 02              a0 = u64 [sp + 0x280]
134501: ab 78 13                 jump @10023 if a1 != a0
      :                          @10021
134504: 95 17 80 02              a0 = sp + 0x280
134508: 50 20 b8 06 a3 45 fe     ra = 1720, jump @1581
      :                          @10022 [@dyn 860]
134515: 82 18 90 02              a1 = u64 [sp + 0x290]
134519: 01                       fallthrough
      :                          @10023
134520: 82 17 88 02              a0 = u64 [sp + 0x288]
134524: 97 89 03                 a2 = a1 << 0x3
134527: c8 97 07                 a0 = a0 + a2
134530: 49 07 02                 u64 [a0 + 0] = 0x2
134533: 95 88 01                 a1 = a1 + 0x1
134536: 7b 18 90 02              u64 [sp + 0x290] = a1
134540: 01                       fallthrough
      :                          @10024
134541: 3a 07 70 02 03           a0 = u64 [0x30270]
134546: 97 78 0d                 a1 = a0 << 0xd
134549: d3 87 07                 a0 = a0 ^ a1
134552: 98 78 07                 a1 = a0 >> 0x7
134555: d3 87 07                 a0 = a0 ^ a1
134558: 97 78 11                 a1 = a0 << 0x11
134561: d3 78 08                 a1 = a1 ^ a0
134564: 84 77 01                 a0 = a0 & 0x1
134567: 3e 08 70 02 03           u64 [0x30270] = a1
134572: 52 07 33                 jump @10029 if a0 != 0
      :                          @10025
134575: 82 18 90 02              a1 = u64 [sp + 0x290]
134579: 82 17 80 02              a0 = u64 [sp + 0x280]
134583: ab 78 13                 jump @10028 if a1 != a0
      :                          @10026
134586: 95 17 80 02              a0 = sp + 0x280
134590: 50 20 ba 06 51 45 fe     ra = 1722, jump @1581
      :                          @10027 [@dyn 861]
134597: 82 18 90 02              a1 = u64 [sp + 0x290]
134601: 01                       fallthrough
      :                          @10028
134602: 82 17 88 02              a0 = u64 [sp + 0x288]
134606: 97 89 03                 a2 = a1 << 0x3
134609: c8 97 07                 a0 = a0 + a2
134612: 49 07 03                 u64 [a0 + 0] = 0x3
134615: 95 88 01                 a1 = a1 + 0x1
134618: 7b 18 90 02              u64 [sp + 0x290] = a1
134622: 01                       fallthrough
      :                          @10029
134623: 3a 07 70 02 03           a0 = u64 [0x30270]
134628: 97 78 0d                 a1 = a0 << 0xd
134631: d3 87 07                 a0 = a0 ^ a1
134634: 98 78 07                 a1 = a0 >> 0x7
134637: d3 87 07                 a0 = a0 ^ a1
134640: 97 78 11                 a1 = a0 << 0x11
134643: d3 78 08                 a1 = a1 ^ a0
134646: 84 77 01                 a0 = a0 & 0x1
134649: 3e 08 70 02 03           u64 [0x30270] = a1
134654: 52 07 33                 jump @10034 if a0 != 0
      :                          @10030
134657: 82 18 90 02              a1 = u64 [sp + 0x290]
134661: 82 17 80 02              a0 = u64 [sp + 0x280]
134665: ab 78 13                 jump @10033 if a1 != a0
      :                          @10031
134668: 95 17 80 02              a0 = sp + 0x280
134672: 50 20 bc 06 ff 44 fe     ra = 1724, jump @1581
      :                          @10032 [@dyn 862]
134679: 82 18 90 02              a1 = u64 [sp + 0x290]
134683: 01                       fallthrough
      :                          @10033
134684: 82 17 88 02              a0 = u64 [sp + 0x288]
134688: 97 89 03                 a2 = a1 << 0x3
134691: c8 97 07                 a0 = a0 + a2
134694: 49 07 04                 u64 [a0 + 0] = 0x4
134697: 95 88 01                 a1 = a1 + 0x1
134700: 7b 18 90 02              u64 [sp + 0x290] = a1
134704: 01                       fallthrough
      :                          @10034
134705: 3a 07 70 02 03           a0 = u64 [0x30270]
134710: 97 78 0d                 a1 = a0 << 0xd
134713: d3 87 07                 a0 = a0 ^ a1
134716: 98 78 07                 a1 = a0 >> 0x7
134719: d3 87 07                 a0 = a0 ^ a1
134722: 97 78 11                 a1 = a0 << 0x11
134725: d3 78 08                 a1 = a1 ^ a0
134728: 84 77 01                 a0 = a0 & 0x1
134731: 3e 08 70 02 03           u64 [0x30270] = a1
134736: 52 07 33                 jump @10039 if a0 != 0
      :                          @10035
134739: 82 18 90 02              a1 = u64 [sp + 0x290]
134743: 82 17 80 02              a0 = u64 [sp + 0x280]
134747: ab 78 13                 jump @10038 if a1 != a0
      :                          @10036
134750: 95 17 80 02              a0 = sp + 0x280
134754: 50 20 be 06 ad 44 fe     ra = 1726, jump @1581
      :                          @10037 [@dyn 863]
134761: 82 18 90 02              a1 = u64 [sp + 0x290]
134765: 01                       fallthrough
      :                          @10038
134766: 82 17 88 02              a0 = u64 [sp + 0x288]
134770: 97 89 03                 a2 = a1 << 0x3
134773: c8 97 07                 a0 = a0 + a2
134776: 49 07 05                 u64 [a0 + 0] = 0x5
134779: 95 88 01                 a1 = a1 + 0x1
134782: 7b 18 90 02              u64 [sp + 0x290] = a1
134786: 01                       fallthrough
      :                          @10039
134787: 3a 07 70 02 03           a0 = u64 [0x30270]
134792: 97 78 0d                 a1 = a0 << 0xd
134795: d3 87 07                 a0 = a0 ^ a1
134798: 98 78 07                 a1 = a0 >> 0x7
134801: d3 87 07                 a0 = a0 ^ a1
134804: 97 78 11                 a1 = a0 << 0x11
134807: d3 78 08                 a1 = a1 ^ a0
134810: 84 77 01                 a0 = a0 & 0x1
134813: 3e 08 70 02 03           u64 [0x30270] = a1
134818: 52 07 33                 jump @10044 if a0 != 0
      :                          @10040
134821: 82 18 90 02              a1 = u64 [sp + 0x290]
134825: 82 17 80 02              a0 = u64 [sp + 0x280]
134829: ab 78 13                 jump @10043 if a1 != a0
      :                          @10041
134832: 95 17 80 02              a0 = sp + 0x280
134836: 50 20 c0 06 5b 44 fe     ra = 1728, jump @1581
      :                          @10042 [@dyn 864]
134843: 82 18 90 02              a1 = u64 [sp + 0x290]
134847: 01                       fallthrough
      :                          @10043
134848: 82 17 88 02              a0 = u64 [sp + 0x288]
134852: 97 89 03                 a2 = a1 << 0x3
134855: c8 97 07                 a0 = a0 + a2
134858: 49 07 06                 u64 [a0 + 0] = 0x6
134861: 95 88 01                 a1 = a1 + 0x1
134864: 7b 18 90 02              u64 [sp + 0x290] = a1
134868: 01                       fallthrough
      :                          @10044
134869: 3a 07 70 02 03           a0 = u64 [0x30270]
134874: 97 78 0d                 a1 = a0 << 0xd
134877: d3 87 07                 a0 = a0 ^ a1
134880: 98 78 07                 a1 = a0 >> 0x7
134883: d3 87 07                 a0 = a0 ^ a1
134886: 97 78 11                 a1 = a0 << 0x11
134889: d3 78 08                 a1 = a1 ^ a0
134892: 84 77 01                 a0 = a0 & 0x1
134895: 3e 08 70 02 03           u64 [0x30270] = a1
134900: 52 07 33                 jump @10049 if a0 != 0
      :                          @10045
134903: 82 18 90 02              a1 = u64 [sp + 0x290]
134907: 82 17 80 02              a0 = u64 [sp + 0x280]
134911: ab 78 13                 jump @10048 if a1 != a0
      :                          @10046
134914: 95 17 80 02              a0 = sp + 0x280
134918: 50 20 c2 06 09 44 fe     ra = 1730, jump @1581
      :                          @10047 [@dyn 865]
134925: 82 18 90 02              a1 = u64 [sp + 0x290]
134929: 01                       fallthrough
      :                          @10048
134930: 82 17 88 02              a0 = u64 [sp + 0x288]
134934: 97 89 03                 a2 = a1 << 0x3
134937: c8 97 07                 a0 = a0 + a2
134940: 49 07 07                 u64 [a0 + 0] = 0x7
134943: 95 88 01                 a1 = a1 + 0x1
134946: 7b 18 90 02              u64 [sp + 0x290] = a1
134950: 01                       fallthrough
      :                          @10049
134951: 3a 07 70 02 03           a0 = u64 [0x30270]
134956: 97 78 0d                 a1 = a0 << 0xd
134959: d3 87 07                 a0 = a0 ^ a1
134962: 98 78 07                 a1 = a0 >> 0x7
134965: d3 87 07                 a0 = a0 ^ a1
134968: 97 78 11                 a1 = a0 << 0x11
134971: d3 78 08                 a1 = a1 ^ a0
134974: 84 77 01                 a0 = a0 & 0x1
134977: 3e 08 70 02 03           u64 [0x30270] = a1
134982: 52 07 33                 jump @10054 if a0 != 0
      :                          @10050
134985: 82 18 90 02              a1 = u64 [sp + 0x290]
134989: 82 17 80 02              a0 = u64 [sp + 0x280]
134993: ab 78 13                 jump @10053 if a1 != a0
      :                          @10051
134996: 95 17 80 02              a0 = sp + 0x280
135000: 50 20 c4 06 b7 43 fe     ra = 1732, jump @1581
      :                          @10052 [@dyn 866]
135007: 82 18 90 02              a1 = u64 [sp + 0x290]
135011: 01                       fallthrough
      :                          @10053
135012: 82 17 88 02              a0 = u64 [sp + 0x288]
135016: 97 89 03                 a2 = a1 << 0x3
135019: c8 97 07                 a0 = a0 + a2
135022: 49 07 08                 u64 [a0 + 0] = 0x8
135025: 95 88 01                 a1 = a1 + 0x1
135028: 7b 18 90 02              u64 [sp + 0x290] = a1
135032: 01                       fallthrough
      :                          @10054
135033: 3a 07 70 02 03           a0 = u64 [0x30270]
135038: 97 78 0d                 a1 = a0 << 0xd
135041: d3 87 07                 a0 = a0 ^ a1
135044: 98 78 07                 a1 = a0 >> 0x7
135047: d3 87 07                 a0 = a0 ^ a1
135050: 97 78 11                 a1 = a0 << 0x11
135053: d3 78 08                 a1 = a1 ^ a0
135056: 84 77 01                 a0 = a0 & 0x1
135059: 3e 08 70 02 03           u64 [0x30270] = a1
135064: 52 07 33                 jump @10059 if a0 != 0
      :                          @10055
135067: 82 18 90 02              a1 = u64 [sp + 0x290]
135071: 82 17 80 02              a0 = u64 [sp + 0x280]
135075: ab 78 13                 jump @10058 if a1 != a0
      :                          @10056
135078: 95 17 80 02              a0 = sp + 0x280
135082: 50 20 c6 06 65 43 fe     ra = 1734, jump @1581
      :                          @10057 [@dyn 867]
135089: 82 18 90 02              a1 = u64 [sp + 0x290]
135093: 01                       fallthrough
      :                          @10058
135094: 82 17 88 02              a0 = u64 [sp + 0x288]
135098: 97 89 03                 a2 = a1 << 0x3
135101: c8 97 07                 a0 = a0 + a2
135104: 49 07 09                 u64 [a0 + 0] = 0x9
135107: 95 88 01                 a1 = a1 + 0x1
135110: 7b 18 90 02              u64 [sp + 0x290] = a1
135114: 01                       fallthrough
      :                          @10059
135115: 82 18 08 02              a1 = u64 [sp + 0x208]
135119: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
135123: ab 78 83 fc              jump @10007 if a1 != a0
      :                          @10060
135127: 95 17 f8 01              a0 = sp + 0x1f8
135131: 50 20 c8 06 b2 42 fe     ra = 1736, jump @1569
      :                          @10061 [@dyn 868]
135138: 82 18 08 02              a1 = u64 [sp + 0x208]
135142: 28 70 fc                 jump @10007
      :                          @10062 [@dyn 869]
135145: 3a 07 70 02 03           a0 = u64 [0x30270]
135150: 97 79 0d                 a2 = a0 << 0xd
135153: d3 97 07                 a0 = a0 ^ a2
135156: 98 7a 07                 a3 = a0 >> 0x7
135159: 3a 09 58 01 03           a2 = u64 [0x30158]
135164: d3 a7 07                 a0 = a0 ^ a3
135167: 97 7a 11                 a3 = a0 << 0x11
135170: d3 a7 07                 a0 = a0 ^ a3
135173: ca 97 0a                 a3 = a0 * a2
135176: 3e 07 70 02 03           u64 [0x30270] = a0
135181: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
135191: d6 ba 07                 a0 = a3 mulhu a4
135194: 98 77 03                 a0 = a0 >> 0x3
135197: 96 77 0a                 a0 = a0 * 0xa
135200: 3a 0c 70 02 03           a5 = u64 [0x30270]
135205: c9 7a 07                 a0 = a3 - a0
135208: 95 77 01                 a0 = a0 + 0x1
135211: 97 ca 0d                 a3 = a5 << 0xd
135214: d3 ca 0a                 a3 = a3 ^ a5
135217: 98 ac 07                 a5 = a3 >> 0x7
135220: d3 ca 0a                 a3 = a3 ^ a5
135223: 97 ac 11                 a5 = a3 << 0x11
135226: d3 ca 0a                 a3 = a3 ^ a5
135229: ca 9a 09                 a2 = a3 * a2
135232: 3e 0a 70 02 03           u64 [0x30270] = a3
135237: d6 b9 08                 a1 = a2 mulhu a4
135240: 98 8a 02                 a3 = a1 >> 0x2
135243: 84 88 fc                 a1 = a1 & 0xfffffffffffffffc
135246: c8 a8 08                 a1 = a1 + a3
135249: c9 89 08                 a1 = a2 - a1
135252: 95 88 02                 a1 = a1 + 0x2
135255: 33 00 cc 06              ra = 0x6cc
135259: 95 11 e0                 sp = sp + 0xffffffffffffffe0
135262: 7b 10 18                 u64 [sp + 0x18] = ra
135265: 7b 15 10                 u64 [sp + 0x10] = s0
135268: 7b 16 08                 u64 [sp + 0x8] = s1
135271: 33 04                    t2 = 0
135273: 33 00                    ra = 0
135275: 33 02 01                 t0 = 0x1
135278: 33 03 03                 t1 = 0x3
135281: 33 09                    a2 = 0
135283: 64 7c                    a5 = a0
135285: 28 f6 2e ff              jump @6468
      :                          @10063 [@dyn 870]
135289: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
135293: 95 17 d0 01              a0 = sp + 0x1d0
135297: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
135301: 33 07 28 0c              a0 = 0xc28
135305: 7b 17 00 02              u64 [sp + 0x200] = a0
135309: 33 07 98 12 01           a0 = 0x11298
135314: 7b 17 80 02              u64 [sp + 0x280] = a0
135318: 49 21 88 02 01           u64 [sp + 648] = 0x1
135323: 49 21 a0 02              u64 [sp + 672] = 0
135327: 95 18 f8 01              a1 = sp + 0x1f8
135331: 7b 18 90 02              u64 [sp + 0x290] = a1
135335: 49 21 98 02 01           u64 [sp + 664] = 0x1
135340: 95 17 28 02              a0 = sp + 0x228
135344: 95 18 80 02              a1 = sp + 0x280
135348: 50 20 ce 06 93 3e fe     ra = 1742, jump @1491
      :                          @10064 [@dyn 871]
135355: 82 16 30 02              s1 = u64 [sp + 0x230]
135359: 82 1b 38 02              a4 = u64 [sp + 0x238]
135363: 82 17 28 02              a0 = u64 [sp + 0x228]
135367: 7b 17 60                 u64 [sp + 0x60] = a0
135370: 33 07 02                 a0 = 0x2
135373: 33 08                    a1 = 0
135375: 33 09                    a2 = 0
135377: 64 6a                    a3 = s1
135379: 33 00 d0 06              ra = 0x6d0
135383: 0a 64                    ecalli 100 // 'log'
135385: 01                       fallthrough
      :                          @10065 [@dyn 872]
135386: 82 1c 60                 a5 = u64 [sp + 0x60]
135389: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
135394: 55 38 00 00 f0 0a        jump @10067 if a1 >=u 4293918720
      :                          @10066
135400: 28 03 d1 00              jump @12862
      :                          @10067
135404: 33 07 b0 02 03           a0 = 0x302b0
135409: 95 77 00 00 10           a0 = a0 + 0x100000
135414: 01                       fallthrough
      :                          @10068
135415: 82 78                    a1 = u64 [a0]
135417: c9 87 09                 a2 = a0 - a1
135420: aa 69 07                 jump @10070 if a2 == s1
      :                          @10069
135423: 28 ec d0 00              jump @12862
      :                          @10070
135427: c9 c8 09                 a2 = a1 - a5
135430: 01                       fallthrough
      :                          @10071
135431: 82 7a                    a3 = u64 [a0]
135433: ab 8a ee                 jump @10068 if a3 != a1
      :                          @10072
135436: 7b 79                    u64 [a0] = a2
135438: 33 0b                    a4 = 0
135440: 01                       fallthrough
      :                          @10073
135441: ab 8a e6                 jump @10068 if a3 != a1
      :                          @10074
135444: 28 d7 d0 00              jump @12862
      :                          @10075 [@dyn 873]
135448: 3a 08 70 02 03           a1 = u64 [0x30270]
135453: 97 89 0d                 a2 = a1 << 0xd
135456: d3 98 08                 a1 = a1 ^ a2
135459: 98 89 07                 a2 = a1 >> 0x7
135462: d3 98 08                 a1 = a1 ^ a2
135465: 3a 09 58 01 03           a2 = u64 [0x30158]
135470: 97 8a 11                 a3 = a1 << 0x11
135473: d3 a8 08                 a1 = a1 ^ a3
135476: ca 98 09                 a2 = a1 * a2
135479: 3e 08 70 02 03           u64 [0x30270] = a1
135484: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
135494: d6 79 07                 a0 = a2 mulhu a0
135497: 98 77 02                 a0 = a0 >> 0x2
135500: 96 77 06                 a0 = a0 * 0x6
135503: c9 79 08                 a1 = a2 - a0
135506: 95 88 01                 a1 = a1 + 0x1
135509: 7b 18 10 01              u64 [sp + 0x110] = a1
135513: 95 17 f8 01              a0 = sp + 0x1f8
135517: 95 16 f8 01              s1 = sp + 0x1f8
135521: 33 00 d4 06              ra = 0x6d4
135525: 95 11 e0                 sp = sp + 0xffffffffffffffe0
135528: 7b 10 18                 u64 [sp + 0x18] = ra
135531: 7b 15 10                 u64 [sp + 0x10] = s0
135534: 7b 16 08                 u64 [sp + 0x8] = s1
135537: 7b 17                    u64 [sp] = a0
135539: 95 87 01                 a0 = a1 + 0x1
135542: 97 73 03                 t1 = a0 << 0x3
135545: 33 00 b0 02 03           ra = 0x302b0
135550: 33 04 00 00 10           t2 = 0x100000
135555: c8 40 0c                 a5 = ra + t2
135558: 28 35 2e ff              jump @6476
      :                          @10076 [@dyn 874]
135562: 95 17 10 01              a0 = sp + 0x110
135566: 7b 17 28 02              u64 [sp + 0x228] = a0
135570: 33 07 28 0c              a0 = 0xc28
135574: 7b 17 30 02              u64 [sp + 0x230] = a0
135578: 7b 16 38 02              u64 [sp + 0x238] = s1
135582: 33 07 20 02              a0 = 0x220
135586: 7b 17 40 02              u64 [sp + 0x240] = a0
135590: 33 07 b8 12 01           a0 = 0x112b8
135595: 7b 17 80 02              u64 [sp + 0x280] = a0
135599: 49 21 88 02 02           u64 [sp + 648] = 0x2
135604: 49 21 a0 02              u64 [sp + 672] = 0
135608: 95 18 28 02              a1 = sp + 0x228
135612: 7b 18 90 02              u64 [sp + 0x290] = a1
135616: 49 21 98 02 02           u64 [sp + 664] = 0x2
135621: 95 17 d0 01              a0 = sp + 0x1d0
135625: 95 18 80 02              a1 = sp + 0x280
135629: 50 20 d6 06 7a 3d fe     ra = 1750, jump @1491
      :                          @10077 [@dyn 875]
135636: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
135640: 51 08 2f                 jump @10084 if a1 == 0
      :                          @10078
135643: 56 38 00 00 02 2c        jump @10084 if a1 >u 131072
      :                          @10079
135649: 82 17 00 02              a0 = u64 [sp + 0x200]
135653: 97 88 03                 a1 = a1 << 0x3
135656: 33 09 b0 02 03           a2 = 0x302b0
135661: 95 99 00 00 10           a2 = a2 + 0x100000
135666: 01                       fallthrough
      :                          @10080
135667: 82 9a                    a3 = u64 [a2]
135669: c9 a9 0b                 a4 = a2 - a3
135672: ab 7b 0f                 jump @10084 if a4 != a0
      :                          @10081
135675: c9 8a 0b                 a4 = a3 - a1
135678: 01                       fallthrough
      :                          @10082
135679: 82 9c                    a5 = u64 [a2]
135681: ab ac f2                 jump @10080 if a5 != a3
      :                          @10083
135684: 7b 9b                    u64 [a2] = a4
135686: 01                       fallthrough
      :                          @10084
135687: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
135691: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
135695: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
135699: 7b 17 60                 u64 [sp + 0x60] = a0
135702: 33 07 02                 a0 = 0x2
135705: 33 08                    a1 = 0
135707: 33 09                    a2 = 0
135709: 64 6a                    a3 = s1
135711: 33 00 d8 06              ra = 0x6d8
135715: 0a 64                    ecalli 100 // 'log'
135717: 01                       fallthrough
      :                          @10085 [@dyn 876]
135718: 82 1c 60                 a5 = u64 [sp + 0x60]
135721: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
135726: 55 38 00 00 f0 0a        jump @10087 if a1 >=u 4293918720
      :                          @10086
135732: 28 b7 cf 00              jump @12862
      :                          @10087
135736: 33 07 b0 02 03           a0 = 0x302b0
135741: 95 77 00 00 10           a0 = a0 + 0x100000
135746: 01                       fallthrough
      :                          @10088
135747: 82 78                    a1 = u64 [a0]
135749: c9 87 09                 a2 = a0 - a1
135752: aa 69 07                 jump @10090 if a2 == s1
      :                          @10089
135755: 28 a0 cf 00              jump @12862
      :                          @10090
135759: c9 c8 09                 a2 = a1 - a5
135762: 01                       fallthrough
      :                          @10091
135763: 82 7a                    a3 = u64 [a0]
135765: ab 8a ee                 jump @10088 if a3 != a1
      :                          @10092
135768: 7b 79                    u64 [a0] = a2
135770: 33 0b                    a4 = 0
135772: 01                       fallthrough
      :                          @10093
135773: ab 8a e6                 jump @10088 if a3 != a1
      :                          @10094
135776: 28 8b cf 00              jump @12862
      :                          @10095 [@dyn 877]
135780: 95 17 80 02              a0 = sp + 0x280
135784: 33 09 04                 a2 = 0x4
135787: 33 08                    a1 = 0
135789: 50 20 dc 06 85 51 fe     ra = 1756, jump @1877
      :                          @10096 [@dyn 878]
135796: 95 17 f8 01              a0 = sp + 0x1f8
135800: 95 18 80 02              a1 = sp + 0x280
135804: 33 09 04                 a2 = 0x4
135807: 50 20 de 06 9d 4b fe     ra = 1758, jump @1783
      :                          @10097 [@dyn 879]
135814: 33 07                    a0 = 0
135816: 33 0b 10                 a4 = 0x10
135819: 33 00 70 02 03           ra = 0x30270
135824: 33 03 03                 t1 = 0x3
135827: 33 04 70                 t2 = 0x70
135830: 33 02 04                 t0 = 0x4
135833: 01                       fallthrough
      :                          @10098
135834: 3a 08 70 02 03           a1 = u64 [0x30270]
135839: 97 89 0d                 a2 = a1 << 0xd
135842: d3 98 08                 a1 = a1 ^ a2
135845: 98 89 07                 a2 = a1 >> 0x7
135848: d3 89 09                 a2 = a2 ^ a1
135851: 97 98 11                 a1 = a2 << 0x11
135854: d3 98 08                 a1 = a1 ^ a2
135857: 3e 08 70 02 03           u64 [0x30270] = a1
135862: 82 18 08 02              a1 = u64 [sp + 0x208]
135866: ac 87 07                 jump @10100 if a0 <u a1
      :                          @10099
135869: 28 8a e0 00              jump @13215
      :                          @10100
135873: 82 18 00 02              a1 = u64 [sp + 0x200]
135877: c8 b8 08                 a1 = a1 + a4
135880: 82 8a                    a3 = u64 [a1]
135882: 52 0a 07                 jump @10102 if a3 != 0
      :                          @10101
135885: 28 82 e0 00              jump @13223
      :                          @10102
135889: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
135892: 84 99 01                 a2 = a2 & 0x1
135895: 7b 89                    u64 [a1] = a2
135897: 3a 08 70 02 03           a1 = u64 [0x30270]
135902: 97 89 0d                 a2 = a1 << 0xd
135905: d3 98 08                 a1 = a1 ^ a2
135908: 98 8a 07                 a3 = a1 >> 0x7
135911: d3 8a 0a                 a3 = a3 ^ a1
135914: 97 a8 11                 a1 = a3 << 0x11
135917: d3 a8 08                 a1 = a1 ^ a3
135920: 3e 08 70 02 03           u64 [0x30270] = a1
135925: 82 18 08 02              a1 = u64 [sp + 0x208]
135929: ac 87 07                 jump @10104 if a0 <u a1
      :                          @10103
135932: 28 4b e0 00              jump @13215
      :                          @10104
135936: 82 18 00 02              a1 = u64 [sp + 0x200]
135940: c8 b8 08                 a1 = a1 + a4
135943: 82 89                    a2 = u64 [a1]
135945: 55 19 02 08              jump @10106 if a2 >=u 2
      :                          @10105
135949: 28 3d e0 00              jump @13218
      :                          @10106
135953: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
135956: 84 aa 01                 a3 = a3 & 0x1
135959: 7b 8a 08                 u64 [a1 + 0x8] = a3
135962: 3a 08 70 02 03           a1 = u64 [0x30270]
135967: 97 89 0d                 a2 = a1 << 0xd
135970: d3 98 08                 a1 = a1 ^ a2
135973: 98 8a 07                 a3 = a1 >> 0x7
135976: d3 8a 0a                 a3 = a3 ^ a1
135979: 97 a8 11                 a1 = a3 << 0x11
135982: d3 a8 08                 a1 = a1 ^ a3
135985: 3e 08 70 02 03           u64 [0x30270] = a1
135990: 82 18 08 02              a1 = u64 [sp + 0x208]
135994: ac 87 07                 jump @10108 if a0 <u a1
      :                          @10107
135997: 28 0a e0 00              jump @13215
      :                          @10108
136001: 82 18 00 02              a1 = u64 [sp + 0x200]
136005: c8 b8 08                 a1 = a1 + a4
136008: 82 89                    a2 = u64 [a1]
136010: ae 39 07                 jump @10110 if a2 >=u t1
      :                          @10109
136013: 28 fe df 00              jump @13219
      :                          @10110
136017: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
136020: 84 aa 01                 a3 = a3 & 0x1
136023: 7b 8a 10                 u64 [a1 + 0x10] = a3
136026: 3a 08 70 02 03           a1 = u64 [0x30270]
136031: 97 89 0d                 a2 = a1 << 0xd
136034: d3 98 08                 a1 = a1 ^ a2
136037: 98 86 07                 s1 = a1 >> 0x7
136040: d3 86 06                 s1 = s1 ^ a1
136043: 97 68 11                 a1 = s1 << 0x11
136046: d3 68 08                 a1 = a1 ^ s1
136049: 3e 08 70 02 03           u64 [0x30270] = a1
136054: 82 18 08 02              a1 = u64 [sp + 0x208]
136058: ac 87 07                 jump @10112 if a0 <u a1
      :                          @10111
136061: 28 ca df 00              jump @13215
      :                          @10112
136065: 82 1c 00 02              a5 = u64 [sp + 0x200]
136069: c8 bc 0a                 a3 = a5 + a4
136072: 82 a9                    a2 = u64 [a3]
136074: ae 29 07                 jump @10114 if a2 >=u t0
      :                          @10113
136077: 28 bf df 00              jump @13220
      :                          @10114
136081: 82 a9 f8                 a2 = u64 [a3 + 0xfffffffffffffff8]
136084: 84 66 01                 s1 = s1 & 0x1
136087: 7b 96 18                 u64 [a2 + 0x18] = s1
136090: 95 bb 18                 a4 = a4 + 0x18
136093: 95 77 01                 a0 = a0 + 0x1
136096: ab 4b fa fe              jump @10098 if a4 != t2
      :                          @10115
136100: 64 c7                    a0 = a5
136102: 50 20 e0 06 26 2d ff     ra = 1760, jump @6501
      :                          @10116 [@dyn 880]
136109: 7b 17 10 01              u64 [sp + 0x110] = a0
136113: 95 17 10 01              a0 = sp + 0x110
136117: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
136121: 33 07 28 0c              a0 = 0xc28
136125: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
136129: 33 07 e8 12 01           a0 = 0x112e8
136134: 7b 17 80 02              u64 [sp + 0x280] = a0
136138: 49 21 88 02 01           u64 [sp + 648] = 0x1
136143: 49 21 a0 02              u64 [sp + 672] = 0
136147: 95 18 d0 01              a1 = sp + 0x1d0
136151: 7b 18 90 02              u64 [sp + 0x290] = a1
136155: 49 21 98 02 01           u64 [sp + 664] = 0x1
136160: 95 17 28 02              a0 = sp + 0x228
136164: 95 18 80 02              a1 = sp + 0x280
136168: 50 20 e2 06 5f 3b fe     ra = 1762, jump @1491
      :                          @10117 [@dyn 881]
136175: 82 16 30 02              s1 = u64 [sp + 0x230]
136179: 82 1b 38 02              a4 = u64 [sp + 0x238]
136183: 82 17 28 02              a0 = u64 [sp + 0x228]
136187: 7b 17 60                 u64 [sp + 0x60] = a0
136190: 33 07 02                 a0 = 0x2
136193: 33 08                    a1 = 0
136195: 33 09                    a2 = 0
136197: 64 6a                    a3 = s1
136199: 33 00 e4 06              ra = 0x6e4
136203: 0a 64                    ecalli 100 // 'log'
136205: 01                       fallthrough
      :                          @10118 [@dyn 882]
136206: 82 1c 60                 a5 = u64 [sp + 0x60]
136209: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
136214: 55 38 00 00 f0 0a        jump @10120 if a1 >=u 4293918720
      :                          @10119
136220: 28 e3 c8 00              jump @12761
      :                          @10120
136224: 33 07 b0 02 03           a0 = 0x302b0
136229: 95 77 00 00 10           a0 = a0 + 0x100000
136234: 01                       fallthrough
      :                          @10121
136235: 82 78                    a1 = u64 [a0]
136237: c9 87 09                 a2 = a0 - a1
136240: aa 69 07                 jump @10123 if a2 == s1
      :                          @10122
136243: 28 cc c8 00              jump @12761
      :                          @10123
136247: c9 c8 09                 a2 = a1 - a5
136250: 01                       fallthrough
      :                          @10124
136251: 82 7a                    a3 = u64 [a0]
136253: ab 8a ee                 jump @10121 if a3 != a1
      :                          @10125
136256: 7b 79                    u64 [a0] = a2
136258: 33 0b                    a4 = 0
136260: 01                       fallthrough
      :                          @10126
136261: ab 8a e6                 jump @10121 if a3 != a1
      :                          @10127
136264: 28 b7 c8 00              jump @12761
      :                          @10128 [@dyn 883]
136268: 49 21 f8 01              u64 [sp + 504] = 0
136272: 49 21 00 02 08           u64 [sp + 512] = 0x8
136277: 49 21 08 02              u64 [sp + 520] = 0
136281: 3a 07 70 02 03           a0 = u64 [0x30270]
136286: 3a 02 58 01 03           t0 = u64 [0x30158]
136291: 97 78 0d                 a1 = a0 << 0xd
136294: d3 87 07                 a0 = a0 ^ a1
136297: 98 78 07                 a1 = a0 >> 0x7
136300: d3 87 07                 a0 = a0 ^ a1
136303: 97 78 11                 a1 = a0 << 0x11
136306: d3 87 07                 a0 = a0 ^ a1
136309: 3a 0c e0 01 03           a5 = u64 [0x301e0]
136314: ca 27 09                 a2 = a0 * t0
136317: 3e 07 70 02 03           u64 [0x30270] = a0
136322: d5 c9 07                 a0 = a2 mulh a5
136325: 98 7a 3f                 a3 = a0 >> 0x3f
136328: 99 77 03                 a0 = a0 >>a 0x3
136331: 82 18 08 02              a1 = u64 [sp + 0x208]
136335: 82 1b f8 01              a4 = u64 [sp + 0x1f8]
136339: c8 a7 07                 a0 = a0 + a3
136342: 33 03 14                 t1 = 0x14
136345: ca 37 07                 a0 = a0 * t1
136348: c9 79 0a                 a3 = a2 - a0
136351: 7b 12 60                 u64 [sp + 0x60] = t0
136354: ab b8 23                 jump @10131 if a1 != a4
      :                          @10129
136357: 95 17 f8 01              a0 = sp + 0x1f8
136361: 64 c6                    s1 = a5
136363: 7b 1a 58                 u64 [sp + 0x58] = a3
136366: 50 20 e8 06 61 3e fe     ra = 1768, jump @1581
      :                          @10130 [@dyn 884]
136373: 82 1a 58                 a3 = u64 [sp + 0x58]
136376: 33 03 14                 t1 = 0x14
136379: 64 6c                    a5 = s1
136381: 82 12 60                 t0 = u64 [sp + 0x60]
136384: 82 18 08 02              a1 = u64 [sp + 0x208]
136388: 01                       fallthrough
      :                          @10131
136389: 82 17 00 02              a0 = u64 [sp + 0x200]
136393: 97 89 03                 a2 = a1 << 0x3
136396: c8 97 07                 a0 = a0 + a2
136399: 7b 7a                    u64 [a0] = a3
136401: 95 88 01                 a1 = a1 + 0x1
136404: 7b 18 08 02              u64 [sp + 0x208] = a1
136408: 3a 07 70 02 03           a0 = u64 [0x30270]
136413: 97 78 0d                 a1 = a0 << 0xd
136416: d3 87 07                 a0 = a0 ^ a1
136419: 98 78 07                 a1 = a0 >> 0x7
136422: d3 87 07                 a0 = a0 ^ a1
136425: 97 78 11                 a1 = a0 << 0x11
136428: d3 87 07                 a0 = a0 ^ a1
136431: ca 27 09                 a2 = a0 * t0
136434: 3e 07 70 02 03           u64 [0x30270] = a0
136439: d5 c9 07                 a0 = a2 mulh a5
136442: 98 7a 3f                 a3 = a0 >> 0x3f
136445: 82 18 08 02              a1 = u64 [sp + 0x208]
136449: 82 1b f8 01              a4 = u64 [sp + 0x1f8]
136453: 99 77 03                 a0 = a0 >>a 0x3
136456: c8 a7 07                 a0 = a0 + a3
136459: 96 77 14                 a0 = a0 * 0x14
136462: c9 79 06                 s1 = a2 - a0
136465: ab b8 16                 jump @10134 if a1 != a4
      :                          @10132
136468: 95 17 f8 01              a0 = sp + 0x1f8
136472: 50 20 ea 06 f7 3d fe     ra = 1770, jump @1581
      :                          @10133 [@dyn 885]
136479: 82 12 60                 t0 = u64 [sp + 0x60]
136482: 82 18 08 02              a1 = u64 [sp + 0x208]
136486: 01                       fallthrough
      :                          @10134
136487: 82 17 00 02              a0 = u64 [sp + 0x200]
136491: 97 89 03                 a2 = a1 << 0x3
136494: c8 97 07                 a0 = a0 + a2
136497: 7b 76                    u64 [a0] = s1
136499: 95 88 01                 a1 = a1 + 0x1
136502: 7b 18 08 02              u64 [sp + 0x208] = a1
136506: 3a 07 70 02 03           a0 = u64 [0x30270]
136511: 97 78 0d                 a1 = a0 << 0xd
136514: d3 87 07                 a0 = a0 ^ a1
136517: 98 78 07                 a1 = a0 >> 0x7
136520: d3 87 07                 a0 = a0 ^ a1
136523: 97 78 11                 a1 = a0 << 0x11
136526: d3 87 07                 a0 = a0 ^ a1
136529: 3a 0c e0 01 03           a5 = u64 [0x301e0]
136534: ca 27 09                 a2 = a0 * t0
136537: 3e 07 70 02 03           u64 [0x30270] = a0
136542: d5 c9 07                 a0 = a2 mulh a5
136545: 98 7a 3f                 a3 = a0 >> 0x3f
136548: 99 77 03                 a0 = a0 >>a 0x3
136551: 82 18 08 02              a1 = u64 [sp + 0x208]
136555: 82 1b f8 01              a4 = u64 [sp + 0x1f8]
136559: c8 a7 07                 a0 = a0 + a3
136562: 33 03 14                 t1 = 0x14
136565: ca 37 07                 a0 = a0 * t1
136568: c9 79 0a                 a3 = a2 - a0
136571: ab b8 23                 jump @10137 if a1 != a4
      :                          @10135
136574: 95 17 f8 01              a0 = sp + 0x1f8
136578: 64 c6                    s1 = a5
136580: 7b 1a 58                 u64 [sp + 0x58] = a3
136583: 50 20 ec 06 88 3d fe     ra = 1772, jump @1581
      :                          @10136 [@dyn 886]
136590: 82 1a 58                 a3 = u64 [sp + 0x58]
136593: 33 03 14                 t1 = 0x14
136596: 64 6c                    a5 = s1
136598: 82 12 60                 t0 = u64 [sp + 0x60]
136601: 82 18 08 02              a1 = u64 [sp + 0x208]
136605: 01                       fallthrough
      :                          @10137
136606: 82 17 00 02              a0 = u64 [sp + 0x200]
136610: 97 89 03                 a2 = a1 << 0x3
136613: c8 97 07                 a0 = a0 + a2
136616: 7b 7a                    u64 [a0] = a3
136618: 95 88 01                 a1 = a1 + 0x1
136621: 7b 18 08 02              u64 [sp + 0x208] = a1
136625: 3a 07 70 02 03           a0 = u64 [0x30270]
136630: 97 78 0d                 a1 = a0 << 0xd
136633: d3 87 07                 a0 = a0 ^ a1
136636: 98 78 07                 a1 = a0 >> 0x7
136639: d3 87 07                 a0 = a0 ^ a1
136642: 97 78 11                 a1 = a0 << 0x11
136645: d3 87 07                 a0 = a0 ^ a1
136648: ca 27 09                 a2 = a0 * t0
136651: 3e 07 70 02 03           u64 [0x30270] = a0
136656: d5 c9 07                 a0 = a2 mulh a5
136659: 98 7a 3f                 a3 = a0 >> 0x3f
136662: 82 18 08 02              a1 = u64 [sp + 0x208]
136666: 82 1b f8 01              a4 = u64 [sp + 0x1f8]
136670: 99 77 03                 a0 = a0 >>a 0x3
136673: c8 a7 07                 a0 = a0 + a3
136676: 96 77 14                 a0 = a0 * 0x14
136679: c9 79 06                 s1 = a2 - a0
136682: ab b8 16                 jump @10140 if a1 != a4
      :                          @10138
136685: 95 17 f8 01              a0 = sp + 0x1f8
136689: 50 20 ee 06 1e 3d fe     ra = 1774, jump @1581
      :                          @10139 [@dyn 887]
136696: 82 12 60                 t0 = u64 [sp + 0x60]
136699: 82 18 08 02              a1 = u64 [sp + 0x208]
136703: 01                       fallthrough
      :                          @10140
136704: 82 17 00 02              a0 = u64 [sp + 0x200]
136708: 97 89 03                 a2 = a1 << 0x3
136711: c8 97 07                 a0 = a0 + a2
136714: 7b 76                    u64 [a0] = s1
136716: 95 88 01                 a1 = a1 + 0x1
136719: 7b 18 08 02              u64 [sp + 0x208] = a1
136723: 3a 08 70 02 03           a1 = u64 [0x30270]
136728: 97 89 0d                 a2 = a1 << 0xd
136731: d3 98 08                 a1 = a1 ^ a2
136734: 98 89 07                 a2 = a1 >> 0x7
136737: d3 98 08                 a1 = a1 ^ a2
136740: 97 89 11                 a2 = a1 << 0x11
136743: d3 98 08                 a1 = a1 ^ a2
136746: 3a 09 e0 01 03           a2 = u64 [0x301e0]
136751: ca 28 0a                 a3 = a1 * t0
136754: 3e 08 70 02 03           u64 [0x30270] = a1
136759: d5 9a 07                 a0 = a3 mulh a2
136762: 98 7b 3f                 a4 = a0 >> 0x3f
136765: 99 77 03                 a0 = a0 >>a 0x3
136768: 82 18 08 02              a1 = u64 [sp + 0x208]
136772: 82 19 f8 01              a2 = u64 [sp + 0x1f8]
136776: c8 b7 07                 a0 = a0 + a4
136779: 33 0b 14                 a4 = 0x14
136782: ca b7 07                 a0 = a0 * a4
136785: c9 7a 06                 s1 = a3 - a0
136788: ab 98 13                 jump @10143 if a1 != a2
      :                          @10141
136791: 95 17 f8 01              a0 = sp + 0x1f8
136795: 50 20 f0 06 b4 3c fe     ra = 1776, jump @1581
      :                          @10142 [@dyn 888]
136802: 82 18 08 02              a1 = u64 [sp + 0x208]
136806: 01                       fallthrough
      :                          @10143
136807: 82 19 00 02              a2 = u64 [sp + 0x200]
136811: 97 87 03                 a0 = a1 << 0x3
136814: 7b 19 58                 u64 [sp + 0x58] = a2
136817: c8 97 07                 a0 = a0 + a2
136820: 7b 76                    u64 [a0] = s1
136822: 95 87 01                 a0 = a1 + 0x1
136825: 7b 17 08 02              u64 [sp + 0x208] = a0
136829: 33 0a 01                 a3 = 0x1
136832: 7b 17 60                 u64 [sp + 0x60] = a0
136835: 51 07 07                 jump @10145 if a0 == 0
      :                          @10144
136838: 28 51 cc 00              jump @12875
      :                          @10145
136842: 7b 1a 10 01              u64 [sp + 0x110] = a3
136846: 95 17 10 01              a0 = sp + 0x110
136850: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
136854: 33 07 94 0c              a0 = 0xc94
136858: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
136862: 33 07 00 13 01           a0 = 0x11300
136867: 7b 17 80 02              u64 [sp + 0x280] = a0
136871: 49 21 88 02 01           u64 [sp + 648] = 0x1
136876: 49 21 a0 02              u64 [sp + 672] = 0
136880: 95 17 d0 01              a0 = sp + 0x1d0
136884: 7b 17 90 02              u64 [sp + 0x290] = a0
136888: 49 21 98 02 01           u64 [sp + 664] = 0x1
136893: 95 17 28 02              a0 = sp + 0x228
136897: 95 18 80 02              a1 = sp + 0x280
136901: 50 20 f2 06 82 38 fe     ra = 1778, jump @1491
      :                          @10146 [@dyn 889]
136908: 82 16 30 02              s1 = u64 [sp + 0x230]
136912: 82 1b 38 02              a4 = u64 [sp + 0x238]
136916: 82 17 28 02              a0 = u64 [sp + 0x228]
136920: 7b 17 60                 u64 [sp + 0x60] = a0
136923: 33 07 02                 a0 = 0x2
136926: 33 08                    a1 = 0
136928: 33 09                    a2 = 0
136930: 64 6a                    a3 = s1
136932: 33 00 f4 06              ra = 0x6f4
136936: 0a 64                    ecalli 100 // 'log'
136938: 01                       fallthrough
      :                          @10147 [@dyn 890]
136939: 82 1c 60                 a5 = u64 [sp + 0x60]
136942: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
136947: 53 38 00 00 f0 25        jump @10153 if a1 <u 4293918720
      :                          @10148
136953: 33 07 b0 02 03           a0 = 0x302b0
136958: 95 77 00 00 10           a0 = a0 + 0x100000
136963: 01                       fallthrough
      :                          @10149
136964: 82 78                    a1 = u64 [a0]
136966: c9 87 09                 a2 = a0 - a1
136969: ab 69 0f                 jump @10153 if a2 != s1
      :                          @10150
136972: c9 c8 09                 a2 = a1 - a5
136975: 01                       fallthrough
      :                          @10151
136976: 82 7a                    a3 = u64 [a0]
136978: ab 8a f2                 jump @10149 if a3 != a1
      :                          @10152
136981: 7b 79                    u64 [a0] = a2
136983: 01                       fallthrough
      :                          @10153
136984: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
136988: 52 07 07                 jump @10155 if a0 != 0
      :                          @10154
136991: 28 cc ca 00              jump @12862
      :                          @10155
136995: 54 37 00 00 02 0a        jump @10157 if a0 <=u 131072
      :                          @10156
137001: 28 c2 ca 00              jump @12862
      :                          @10157
137005: 97 77 03                 a0 = a0 << 0x3
137008: 33 08 b0 02 03           a1 = 0x302b0
137013: 95 88 00 00 10           a1 = a1 + 0x100000
137018: 01                       fallthrough
      :                          @10158
137019: 82 89                    a2 = u64 [a1]
137021: c9 98 0a                 a3 = a1 - a2
137024: 82 1b 58                 a4 = u64 [sp + 0x58]
137027: aa ba 07                 jump @10160 if a3 == a4
      :                          @10159
137030: 28 a5 ca 00              jump @12862
      :                          @10160
137034: c9 79 0a                 a3 = a2 - a0
137037: 01                       fallthrough
      :                          @10161
137038: 82 8b                    a4 = u64 [a1]
137040: ab 9b eb                 jump @10158 if a4 != a2
      :                          @10162
137043: 7b 8a                    u64 [a1] = a3
137045: 33 0c                    a5 = 0
137047: 01                       fallthrough
      :                          @10163
137048: ab 9b e3                 jump @10158 if a4 != a2
      :                          @10164
137051: 28 90 ca 00              jump @12862
      :                          @10165 [@dyn 891]
137055: 3a 08 70 02 03           a1 = u64 [0x30270]
137060: 97 89 0d                 a2 = a1 << 0xd
137063: d3 98 08                 a1 = a1 ^ a2
137066: 98 89 07                 a2 = a1 >> 0x7
137069: d3 98 08                 a1 = a1 ^ a2
137072: 97 89 11                 a2 = a1 << 0x11
137075: d3 89 09                 a2 = a2 ^ a1
137078: 3e 09 70 02 03           u64 [0x30270] = a2
137083: 84 88 03                 a1 = a1 & 0x3
137086: 95 88 01                 a1 = a1 + 0x1
137089: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
137093: 3a 08 70 02 03           a1 = u64 [0x30270]
137098: 97 89 0d                 a2 = a1 << 0xd
137101: d3 98 08                 a1 = a1 ^ a2
137104: 98 89 07                 a2 = a1 >> 0x7
137107: d3 98 08                 a1 = a1 ^ a2
137110: 97 89 11                 a2 = a1 << 0x11
137113: d3 89 09                 a2 = a2 ^ a1
137116: 3e 09 70 02 03           u64 [0x30270] = a2
137121: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
137125: 84 88 03                 a1 = a1 & 0x3
137128: 95 88 01                 a1 = a1 + 0x1
137131: 7b 18 10 01              u64 [sp + 0x110] = a1
137135: 50 20 f8 06 bd 29 ff     ra = 1784, jump @6515
      :                          @10166 [@dyn 892]
137142: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
137146: 95 17 b8 01              a0 = sp + 0x1b8
137150: 7b 17 80 02              u64 [sp + 0x280] = a0
137154: 33 07 28 0c              a0 = 0xc28
137158: 7b 17 88 02              u64 [sp + 0x288] = a0
137162: 95 18 10 01              a1 = sp + 0x110
137166: 7b 18 90 02              u64 [sp + 0x290] = a1
137170: 7b 17 98 02              u64 [sp + 0x298] = a0
137174: 95 18 d0 01              a1 = sp + 0x1d0
137178: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
137182: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
137186: 33 07 28 13 01           a0 = 0x11328
137191: 7b 17 28 02              u64 [sp + 0x228] = a0
137195: 49 21 30 02 03           u64 [sp + 560] = 0x3
137200: 49 21 48 02              u64 [sp + 584] = 0
137204: 95 18 80 02              a1 = sp + 0x280
137208: 7b 18 38 02              u64 [sp + 0x238] = a1
137212: 49 21 40 02 03           u64 [sp + 576] = 0x3
137217: 95 17 f8 01              a0 = sp + 0x1f8
137221: 95 18 28 02              a1 = sp + 0x228
137225: 50 20 fa 06 3e 37 fe     ra = 1786, jump @1491
      :                          @10167 [@dyn 893]
137232: 82 16 00 02              s1 = u64 [sp + 0x200]
137236: 82 1b 08 02              a4 = u64 [sp + 0x208]
137240: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
137244: 7b 17 60                 u64 [sp + 0x60] = a0
137247: 33 07 02                 a0 = 0x2
137250: 33 08                    a1 = 0
137252: 33 09                    a2 = 0
137254: 64 6a                    a3 = s1
137256: 33 00 fc 06              ra = 0x6fc
137260: 0a 64                    ecalli 100 // 'log'
137262: 01                       fallthrough
      :                          @10168 [@dyn 894]
137263: 82 1c 60                 a5 = u64 [sp + 0x60]
137266: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
137271: 55 38 00 00 f0 0a        jump @10170 if a1 >=u 4293918720
      :                          @10169
137277: 28 ae c9 00              jump @12862
      :                          @10170
137281: 33 07 b0 02 03           a0 = 0x302b0
137286: 95 77 00 00 10           a0 = a0 + 0x100000
137291: 01                       fallthrough
      :                          @10171
137292: 82 78                    a1 = u64 [a0]
137294: c9 87 09                 a2 = a0 - a1
137297: aa 69 07                 jump @10173 if a2 == s1
      :                          @10172
137300: 28 97 c9 00              jump @12862
      :                          @10173
137304: c9 c8 09                 a2 = a1 - a5
137307: 01                       fallthrough
      :                          @10174
137308: 82 7a                    a3 = u64 [a0]
137310: ab 8a ee                 jump @10171 if a3 != a1
      :                          @10175
137313: 7b 79                    u64 [a0] = a2
137315: 33 0b                    a4 = 0
137317: 01                       fallthrough
      :                          @10176
137318: ab 8a e6                 jump @10171 if a3 != a1
      :                          @10177
137321: 28 82 c9 00              jump @12862
      :                          @10178 [@dyn 895]
137325: 3a 08 70 02 03           a1 = u64 [0x30270]
137330: 97 89 0d                 a2 = a1 << 0xd
137333: d3 89 09                 a2 = a2 ^ a1
137336: 98 9a 07                 a3 = a2 >> 0x7
137339: 3a 08 58 01 03           a1 = u64 [0x30158]
137344: d3 a9 09                 a2 = a2 ^ a3
137347: 97 9a 11                 a3 = a2 << 0x11
137350: d3 a9 09                 a2 = a2 ^ a3
137353: ca 89 0a                 a3 = a2 * a1
137356: 3e 09 70 02 03           u64 [0x30270] = a2
137361: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
137371: d6 ba 09                 a2 = a3 mulhu a4
137374: 98 9c 04                 a5 = a2 >> 0x4
137377: 96 cc 14                 a5 = a5 * 0x14
137380: c9 ca 0a                 a3 = a3 - a5
137383: 95 aa 02                 a3 = a3 + 0x2
137386: 7b 1a b8 01              u64 [sp + 0x1b8] = a3
137390: 3a 0a 70 02 03           a3 = u64 [0x30270]
137395: 97 ac 0d                 a5 = a3 << 0xd
137398: d3 ca 0a                 a3 = a3 ^ a5
137401: 98 ac 07                 a5 = a3 >> 0x7
137404: d3 ca 0a                 a3 = a3 ^ a5
137407: 97 ac 11                 a5 = a3 << 0x11
137410: d3 ca 0a                 a3 = a3 ^ a5
137413: ca 8a 0c                 a5 = a3 * a1
137416: 3e 0a 70 02 03           u64 [0x30270] = a3
137421: d6 bc 07                 a0 = a5 mulhu a4
137424: 98 77 04                 a0 = a0 >> 0x4
137427: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
137431: 96 77 14                 a0 = a0 * 0x14
137434: c9 7c 09                 a2 = a5 - a0
137437: 95 97 02                 a0 = a2 + 0x2
137440: 7b 17 10 01              u64 [sp + 0x110] = a0
137444: 64 8b                    a4 = a1
137446: 64 7c                    a5 = a0
137448: 01                       fallthrough
      :                          @10179
137449: 64 ca                    a3 = a5
137451: cd cb 0c                 a5 = a4 %u a5
137454: 64 ab                    a4 = a3
137456: 52 0c f9                 jump @10179 if a5 != 0
      :                          @10180
137459: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
137462: 95 99 01                 a2 = a2 + 0x1
137465: ca 89 08                 a1 = a2 * a1
137468: c9 78 08                 a1 = a1 - a0
137471: 94 a8                    a1 = 0 if a3 != 0
137473: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
137477: 95 17 b8 01              a0 = sp + 0x1b8
137481: 7b 17 80 02              u64 [sp + 0x280] = a0
137485: 33 07 28 0c              a0 = 0xc28
137489: 7b 17 88 02              u64 [sp + 0x288] = a0
137493: 95 18 10 01              a1 = sp + 0x110
137497: 7b 18 90 02              u64 [sp + 0x290] = a1
137501: 7b 17 98 02              u64 [sp + 0x298] = a0
137505: 95 18 d0 01              a1 = sp + 0x1d0
137509: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
137513: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
137517: 33 07 68 13 01           a0 = 0x11368
137522: 7b 17 28 02              u64 [sp + 0x228] = a0
137526: 49 21 30 02 03           u64 [sp + 560] = 0x3
137531: 49 21 48 02              u64 [sp + 584] = 0
137535: 95 18 80 02              a1 = sp + 0x280
137539: 7b 18 38 02              u64 [sp + 0x238] = a1
137543: 49 21 40 02 03           u64 [sp + 576] = 0x3
137548: 95 17 f8 01              a0 = sp + 0x1f8
137552: 95 18 28 02              a1 = sp + 0x228
137556: 50 20 00 07 f3 35 fe     ra = 1792, jump @1491
      :                          @10181 [@dyn 896]
137563: 82 16 00 02              s1 = u64 [sp + 0x200]
137567: 82 1b 08 02              a4 = u64 [sp + 0x208]
137571: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
137575: 7b 17 60                 u64 [sp + 0x60] = a0
137578: 33 07 02                 a0 = 0x2
137581: 33 08                    a1 = 0
137583: 33 09                    a2 = 0
137585: 64 6a                    a3 = s1
137587: 33 00 02 07              ra = 0x702
137591: 0a 64                    ecalli 100 // 'log'
137593: 01                       fallthrough
      :                          @10182 [@dyn 897]
137594: 82 1c 60                 a5 = u64 [sp + 0x60]
137597: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
137602: 55 38 00 00 f0 0a        jump @10184 if a1 >=u 4293918720
      :                          @10183
137608: 28 63 c8 00              jump @12862
      :                          @10184
137612: 33 07 b0 02 03           a0 = 0x302b0
137617: 95 77 00 00 10           a0 = a0 + 0x100000
137622: 01                       fallthrough
      :                          @10185
137623: 82 78                    a1 = u64 [a0]
137625: c9 87 09                 a2 = a0 - a1
137628: aa 69 07                 jump @10187 if a2 == s1
      :                          @10186
137631: 28 4c c8 00              jump @12862
      :                          @10187
137635: c9 c8 09                 a2 = a1 - a5
137638: 01                       fallthrough
      :                          @10188
137639: 82 7a                    a3 = u64 [a0]
137641: ab 8a ee                 jump @10185 if a3 != a1
      :                          @10189
137644: 7b 79                    u64 [a0] = a2
137646: 33 0b                    a4 = 0
137648: 01                       fallthrough
      :                          @10190
137649: ab 8a e6                 jump @10185 if a3 != a1
      :                          @10191
137652: 28 37 c8 00              jump @12862
      :                          @10192 [@dyn 898]
137656: 3a 08 70 02 03           a1 = u64 [0x30270]
137661: 97 89 0d                 a2 = a1 << 0xd
137664: d3 98 08                 a1 = a1 ^ a2
137667: 98 89 07                 a2 = a1 >> 0x7
137670: 3a 0a 58 01 03           a3 = u64 [0x30158]
137675: d3 98 08                 a1 = a1 ^ a2
137678: 97 89 11                 a2 = a1 << 0x11
137681: d3 98 08                 a1 = a1 ^ a2
137684: ca a8 09                 a2 = a1 * a3
137687: 3a 0b 68 01 03           a4 = u64 [0x30168]
137692: 3e 08 70 02 03           u64 [0x30270] = a1
137697: 98 98 01                 a1 = a2 >> 0x1
137700: d6 b8 08                 a1 = a1 mulhu a4
137703: 98 88 04                 a1 = a1 >> 0x4
137706: 96 88 32                 a1 = a1 * 0x32
137709: c9 89 09                 a2 = a2 - a1
137712: 7b 19 b8 01              u64 [sp + 0x1b8] = a2
137716: 3a 08 70 02 03           a1 = u64 [0x30270]
137721: 97 89 0d                 a2 = a1 << 0xd
137724: d3 98 08                 a1 = a1 ^ a2
137727: 98 89 07                 a2 = a1 >> 0x7
137730: d3 98 08                 a1 = a1 ^ a2
137733: 97 89 11                 a2 = a1 << 0x11
137736: d3 98 08                 a1 = a1 ^ a2
137739: ca a8 09                 a2 = a1 * a3
137742: 3a 0a a8 01 03           a3 = u64 [0x301a8]
137747: 3e 08 70 02 03           u64 [0x30270] = a1
137752: 98 97 02                 a0 = a2 >> 0x2
137755: d6 a7 07                 a0 = a0 mulhu a3
137758: 98 77 02                 a0 = a0 >> 0x2
137761: 96 78 64                 a1 = a0 * 0x64
137764: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
137768: c9 89 08                 a1 = a2 - a1
137771: 95 88 01                 a1 = a1 + 0x1
137774: 7b 18 10 01              u64 [sp + 0x110] = a1
137778: 50 20 06 07 00 28 ff     ra = 1798, jump @6536
      :                          @10193 [@dyn 899]
137785: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
137789: 95 17 b8 01              a0 = sp + 0x1b8
137793: 7b 17 80 02              u64 [sp + 0x280] = a0
137797: 33 07 28 0c              a0 = 0xc28
137801: 7b 17 88 02              u64 [sp + 0x288] = a0
137805: 95 18 10 01              a1 = sp + 0x110
137809: 7b 18 90 02              u64 [sp + 0x290] = a1
137813: 7b 17 98 02              u64 [sp + 0x298] = a0
137817: 95 18 d0 01              a1 = sp + 0x1d0
137821: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
137825: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
137829: 33 07 a0 13 01           a0 = 0x113a0
137834: 7b 17 28 02              u64 [sp + 0x228] = a0
137838: 49 21 30 02 03           u64 [sp + 560] = 0x3
137843: 49 21 48 02              u64 [sp + 584] = 0
137847: 95 18 80 02              a1 = sp + 0x280
137851: 7b 18 38 02              u64 [sp + 0x238] = a1
137855: 49 21 40 02 03           u64 [sp + 576] = 0x3
137860: 95 17 f8 01              a0 = sp + 0x1f8
137864: 95 18 28 02              a1 = sp + 0x228
137868: 50 20 08 07 bb 34 fe     ra = 1800, jump @1491
      :                          @10194 [@dyn 900]
137875: 82 16 00 02              s1 = u64 [sp + 0x200]
137879: 82 1b 08 02              a4 = u64 [sp + 0x208]
137883: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
137887: 7b 17 60                 u64 [sp + 0x60] = a0
137890: 33 07 02                 a0 = 0x2
137893: 33 08                    a1 = 0
137895: 33 09                    a2 = 0
137897: 64 6a                    a3 = s1
137899: 33 00 0a 07              ra = 0x70a
137903: 0a 64                    ecalli 100 // 'log'
137905: 01                       fallthrough
      :                          @10195 [@dyn 901]
137906: 82 1c 60                 a5 = u64 [sp + 0x60]
137909: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
137914: 55 38 00 00 f0 0a        jump @10197 if a1 >=u 4293918720
      :                          @10196
137920: 28 2b c7 00              jump @12862
      :                          @10197
137924: 33 07 b0 02 03           a0 = 0x302b0
137929: 95 77 00 00 10           a0 = a0 + 0x100000
137934: 01                       fallthrough
      :                          @10198
137935: 82 78                    a1 = u64 [a0]
137937: c9 87 09                 a2 = a0 - a1
137940: aa 69 07                 jump @10200 if a2 == s1
      :                          @10199
137943: 28 14 c7 00              jump @12862
      :                          @10200
137947: c9 c8 09                 a2 = a1 - a5
137950: 01                       fallthrough
      :                          @10201
137951: 82 7a                    a3 = u64 [a0]
137953: ab 8a ee                 jump @10198 if a3 != a1
      :                          @10202
137956: 7b 79                    u64 [a0] = a2
137958: 33 0b                    a4 = 0
137960: 01                       fallthrough
      :                          @10203
137961: ab 8a e6                 jump @10198 if a3 != a1
      :                          @10204
137964: 28 ff c6 00              jump @12862
      :                          @10205 [@dyn 902]
137968: 3a 08 70 02 03           a1 = u64 [0x30270]
137973: 97 89 0d                 a2 = a1 << 0xd
137976: d3 89 09                 a2 = a2 ^ a1
137979: 98 9a 07                 a3 = a2 >> 0x7
137982: 3a 08 58 01 03           a1 = u64 [0x30158]
137987: d3 a9 09                 a2 = a2 ^ a3
137990: 97 9a 11                 a3 = a2 << 0x11
137993: d3 a9 09                 a2 = a2 ^ a3
137996: ca 89 0a                 a3 = a2 * a1
137999: 3e 09 70 02 03           u64 [0x30270] = a2
138004: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
138014: d6 9a 0b                 a4 = a3 mulhu a2
138017: 98 bb 04                 a4 = a4 >> 0x4
138020: 33 0c 14                 a5 = 0x14
138023: ca cb 0b                 a4 = a4 * a5
138026: c9 ba 0a                 a3 = a3 - a4
138029: 7b 1a b8 01              u64 [sp + 0x1b8] = a3
138033: 3a 0a 70 02 03           a3 = u64 [0x30270]
138038: 97 ab 0d                 a4 = a3 << 0xd
138041: d3 ba 0a                 a3 = a3 ^ a4
138044: 98 ab 07                 a4 = a3 >> 0x7
138047: d3 ba 0a                 a3 = a3 ^ a4
138050: 97 ab 11                 a4 = a3 << 0x11
138053: d3 ba 0a                 a3 = a3 ^ a4
138056: ca 8a 08                 a1 = a3 * a1
138059: 3e 0a 70 02 03           u64 [0x30270] = a3
138064: d6 98 07                 a0 = a1 mulhu a2
138067: 98 79 02                 a2 = a0 >> 0x2
138070: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
138073: c8 79 09                 a2 = a2 + a0
138076: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
138080: c9 98 08                 a1 = a1 - a2
138083: 95 88 01                 a1 = a1 + 0x1
138086: 7b 18 10 01              u64 [sp + 0x110] = a1
138090: 50 20 0e 07 4a 28 ff     ra = 1806, jump @6567
      :                          @10206 [@dyn 903]
138097: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
138101: 95 17 b8 01              a0 = sp + 0x1b8
138105: 7b 17 80 02              u64 [sp + 0x280] = a0
138109: 33 07 28 0c              a0 = 0xc28
138113: 7b 17 88 02              u64 [sp + 0x288] = a0
138117: 95 18 10 01              a1 = sp + 0x110
138121: 7b 18 90 02              u64 [sp + 0x290] = a1
138125: 7b 17 98 02              u64 [sp + 0x298] = a0
138129: 95 18 d0 01              a1 = sp + 0x1d0
138133: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
138137: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
138141: 33 07 e0 13 01           a0 = 0x113e0
138146: 7b 17 28 02              u64 [sp + 0x228] = a0
138150: 49 21 30 02 03           u64 [sp + 560] = 0x3
138155: 49 21 48 02              u64 [sp + 584] = 0
138159: 95 18 80 02              a1 = sp + 0x280
138163: 7b 18 38 02              u64 [sp + 0x238] = a1
138167: 49 21 40 02 03           u64 [sp + 576] = 0x3
138172: 95 17 f8 01              a0 = sp + 0x1f8
138176: 95 18 28 02              a1 = sp + 0x228
138180: 50 20 10 07 83 33 fe     ra = 1808, jump @1491
      :                          @10207 [@dyn 904]
138187: 82 16 00 02              s1 = u64 [sp + 0x200]
138191: 82 1b 08 02              a4 = u64 [sp + 0x208]
138195: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
138199: 7b 17 60                 u64 [sp + 0x60] = a0
138202: 33 07 02                 a0 = 0x2
138205: 33 08                    a1 = 0
138207: 33 09                    a2 = 0
138209: 64 6a                    a3 = s1
138211: 33 00 12 07              ra = 0x712
138215: 0a 64                    ecalli 100 // 'log'
138217: 01                       fallthrough
      :                          @10208 [@dyn 905]
138218: 82 1c 60                 a5 = u64 [sp + 0x60]
138221: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
138226: 55 38 00 00 f0 0a        jump @10210 if a1 >=u 4293918720
      :                          @10209
138232: 28 f3 c5 00              jump @12862
      :                          @10210
138236: 33 07 b0 02 03           a0 = 0x302b0
138241: 95 77 00 00 10           a0 = a0 + 0x100000
138246: 01                       fallthrough
      :                          @10211
138247: 82 78                    a1 = u64 [a0]
138249: c9 87 09                 a2 = a0 - a1
138252: aa 69 07                 jump @10213 if a2 == s1
      :                          @10212
138255: 28 dc c5 00              jump @12862
      :                          @10213
138259: c9 c8 09                 a2 = a1 - a5
138262: 01                       fallthrough
      :                          @10214
138263: 82 7a                    a3 = u64 [a0]
138265: ab 8a ee                 jump @10211 if a3 != a1
      :                          @10215
138268: 7b 79                    u64 [a0] = a2
138270: 33 0b                    a4 = 0
138272: 01                       fallthrough
      :                          @10216
138273: ab 8a e6                 jump @10211 if a3 != a1
      :                          @10217
138276: 28 c7 c5 00              jump @12862
      :                          @10218 [@dyn 906]
138280: 3a 08 70 02 03           a1 = u64 [0x30270]
138285: 97 89 0d                 a2 = a1 << 0xd
138288: d3 89 09                 a2 = a2 ^ a1
138291: 98 9a 07                 a3 = a2 >> 0x7
138294: 3a 08 58 01 03           a1 = u64 [0x30158]
138299: d3 a9 09                 a2 = a2 ^ a3
138302: 97 9a 11                 a3 = a2 << 0x11
138305: d3 a9 09                 a2 = a2 ^ a3
138308: ca 89 0a                 a3 = a2 * a1
138311: 3e 09 70 02 03           u64 [0x30270] = a2
138316: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
138326: d6 9a 0b                 a4 = a3 mulhu a2
138329: 98 bb 03                 a4 = a4 >> 0x3
138332: 33 0c 0a                 a5 = 0xa
138335: ca cb 0b                 a4 = a4 * a5
138338: c9 ba 0a                 a3 = a3 - a4
138341: 95 aa 01                 a3 = a3 + 0x1
138344: 7b 1a b8 01              u64 [sp + 0x1b8] = a3
138348: 3a 0a 70 02 03           a3 = u64 [0x30270]
138353: 97 ab 0d                 a4 = a3 << 0xd
138356: d3 ba 0a                 a3 = a3 ^ a4
138359: 98 ab 07                 a4 = a3 >> 0x7
138362: d3 ba 0a                 a3 = a3 ^ a4
138365: 97 ab 11                 a4 = a3 << 0x11
138368: d3 ba 0a                 a3 = a3 ^ a4
138371: ca 8a 08                 a1 = a3 * a1
138374: 3e 0a 70 02 03           u64 [0x30270] = a3
138379: d6 98 07                 a0 = a1 mulhu a2
138382: 98 79 02                 a2 = a0 >> 0x2
138385: 84 7a fc                 a3 = a0 & 0xfffffffffffffffc
138388: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
138392: c8 a9 09                 a2 = a2 + a3
138395: c9 98 08                 a1 = a1 - a2
138398: 7b 18 10 01              u64 [sp + 0x110] = a1
138402: 50 20 16 07 5d 27 ff     ra = 1814, jump @6574
      :                          @10219 [@dyn 907]
138409: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
138413: 95 17 b8 01              a0 = sp + 0x1b8
138417: 7b 17 80 02              u64 [sp + 0x280] = a0
138421: 33 07 28 0c              a0 = 0xc28
138425: 7b 17 88 02              u64 [sp + 0x288] = a0
138429: 95 18 10 01              a1 = sp + 0x110
138433: 7b 18 90 02              u64 [sp + 0x290] = a1
138437: 33 08 94 0c              a1 = 0xc94
138441: 7b 18 98 02              u64 [sp + 0x298] = a1
138445: 95 18 d0 01              a1 = sp + 0x1d0
138449: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
138453: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
138457: 33 07 18 14 01           a0 = 0x11418
138462: 7b 17 28 02              u64 [sp + 0x228] = a0
138466: 49 21 30 02 03           u64 [sp + 560] = 0x3
138471: 49 21 48 02              u64 [sp + 584] = 0
138475: 95 18 80 02              a1 = sp + 0x280
138479: 7b 18 38 02              u64 [sp + 0x238] = a1
138483: 49 21 40 02 03           u64 [sp + 576] = 0x3
138488: 95 17 f8 01              a0 = sp + 0x1f8
138492: 95 18 28 02              a1 = sp + 0x228
138496: 50 20 18 07 47 32 fe     ra = 1816, jump @1491
      :                          @10220 [@dyn 908]
138503: 82 16 00 02              s1 = u64 [sp + 0x200]
138507: 82 1b 08 02              a4 = u64 [sp + 0x208]
138511: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
138515: 7b 17 60                 u64 [sp + 0x60] = a0
138518: 33 07 02                 a0 = 0x2
138521: 33 08                    a1 = 0
138523: 33 09                    a2 = 0
138525: 64 6a                    a3 = s1
138527: 33 00 1a 07              ra = 0x71a
138531: 0a 64                    ecalli 100 // 'log'
138533: 01                       fallthrough
      :                          @10221 [@dyn 909]
138534: 82 1c 60                 a5 = u64 [sp + 0x60]
138537: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
138542: 55 38 00 00 f0 0a        jump @10223 if a1 >=u 4293918720
      :                          @10222
138548: 28 b7 c4 00              jump @12862
      :                          @10223
138552: 33 07 b0 02 03           a0 = 0x302b0
138557: 95 77 00 00 10           a0 = a0 + 0x100000
138562: 01                       fallthrough
      :                          @10224
138563: 82 78                    a1 = u64 [a0]
138565: c9 87 09                 a2 = a0 - a1
138568: aa 69 07                 jump @10226 if a2 == s1
      :                          @10225
138571: 28 a0 c4 00              jump @12862
      :                          @10226
138575: c9 c8 09                 a2 = a1 - a5
138578: 01                       fallthrough
      :                          @10227
138579: 82 7a                    a3 = u64 [a0]
138581: ab 8a ee                 jump @10224 if a3 != a1
      :                          @10228
138584: 7b 79                    u64 [a0] = a2
138586: 33 0b                    a4 = 0
138588: 01                       fallthrough
      :                          @10229
138589: ab 8a e6                 jump @10224 if a3 != a1
      :                          @10230
138592: 28 8b c4 00              jump @12862
      :                          @10231 [@dyn 910]
138596: 3a 08 70 02 03           a1 = u64 [0x30270]
138601: 97 89 0d                 a2 = a1 << 0xd
138604: d3 98 08                 a1 = a1 ^ a2
138607: 98 89 07                 a2 = a1 >> 0x7
138610: d3 98 08                 a1 = a1 ^ a2
138613: 3a 09 58 01 03           a2 = u64 [0x30158]
138618: 97 8a 11                 a3 = a1 << 0x11
138621: d3 a8 08                 a1 = a1 ^ a3
138624: ca 98 09                 a2 = a1 * a2
138627: 3e 08 70 02 03           u64 [0x30270] = a1
138632: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
138642: d6 79 07                 a0 = a2 mulhu a0
138645: 98 77 04                 a0 = a0 >> 0x4
138648: 96 77 14                 a0 = a0 * 0x14
138651: c9 79 09                 a2 = a2 - a0
138654: 95 99 01                 a2 = a2 + 0x1
138657: 49 21 d0 00              u64 [sp + 208] = 0
138661: 7b 19 d8 00              u64 [sp + 0xd8] = a2
138665: 46 21 e0 00              u8 [sp + 224] = 0
138669: 95 17 d0 01              a0 = sp + 0x1d0
138673: 95 18 d0 00              a1 = sp + 0xd0
138677: 50 20 1e 07 25 5d fe     ra = 1822, jump @2235
      :                          @10232 [@dyn 911]
138684: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
138688: 82 19 e0 01              a2 = u64 [sp + 0x1e0]
138692: 95 17 28 02              a0 = sp + 0x228
138696: 95 16 28 02              s1 = sp + 0x228
138700: 7b 18 60                 u64 [sp + 0x60] = a1
138703: 50 20 20 07 69 27 ff     ra = 1824, jump @6596
      :                          @10233 [@dyn 912]
138710: 7b 16 10 01              u64 [sp + 0x110] = s1
138714: 33 07 38 02              a0 = 0x238
138718: 7b 17 18 01              u64 [sp + 0x118] = a0
138722: 33 07 48 14 01           a0 = 0x11448
138727: 7b 17 80 02              u64 [sp + 0x280] = a0
138731: 49 21 88 02 01           u64 [sp + 648] = 0x1
138736: 49 21 a0 02              u64 [sp + 672] = 0
138740: 95 18 10 01              a1 = sp + 0x110
138744: 7b 18 90 02              u64 [sp + 0x290] = a1
138748: 49 21 98 02 01           u64 [sp + 664] = 0x1
138753: 95 17 f8 01              a0 = sp + 0x1f8
138757: 95 18 80 02              a1 = sp + 0x280
138761: 50 20 22 07 3e 31 fe     ra = 1826, jump @1491
      :                          @10234 [@dyn 913]
138768: 82 18 28 02              a1 = u64 [sp + 0x228]
138772: 51 08 2f                 jump @10241 if a1 == 0
      :                          @10235
138775: 56 38 00 00 02 2c        jump @10241 if a1 >u 131072
      :                          @10236
138781: 82 17 30 02              a0 = u64 [sp + 0x230]
138785: 97 88 03                 a1 = a1 << 0x3
138788: 33 09 b0 02 03           a2 = 0x302b0
138793: 95 99 00 00 10           a2 = a2 + 0x100000
138798: 01                       fallthrough
      :                          @10237
138799: 82 9a                    a3 = u64 [a2]
138801: c9 a9 0b                 a4 = a2 - a3
138804: ab 7b 0f                 jump @10241 if a4 != a0
      :                          @10238
138807: c9 8a 0b                 a4 = a3 - a1
138810: 01                       fallthrough
      :                          @10239
138811: 82 9c                    a5 = u64 [a2]
138813: ab ac f2                 jump @10237 if a5 != a3
      :                          @10240
138816: 7b 9b                    u64 [a2] = a4
138818: 01                       fallthrough
      :                          @10241
138819: 82 16 00 02              s1 = u64 [sp + 0x200]
138823: 82 1b 08 02              a4 = u64 [sp + 0x208]
138827: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
138831: 7b 17 58                 u64 [sp + 0x58] = a0
138834: 33 07 02                 a0 = 0x2
138837: 33 08                    a1 = 0
138839: 33 09                    a2 = 0
138841: 64 6a                    a3 = s1
138843: 33 00 24 07              ra = 0x724
138847: 0a 64                    ecalli 100 // 'log'
138849: 01                       fallthrough
      :                          @10242 [@dyn 914]
138850: 82 1c 58                 a5 = u64 [sp + 0x58]
138853: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
138858: 53 38 00 00 f0 25        jump @10248 if a1 <u 4293918720
      :                          @10243
138864: 33 07 b0 02 03           a0 = 0x302b0
138869: 95 77 00 00 10           a0 = a0 + 0x100000
138874: 01                       fallthrough
      :                          @10244
138875: 82 78                    a1 = u64 [a0]
138877: c9 87 09                 a2 = a0 - a1
138880: ab 69 0f                 jump @10248 if a2 != s1
      :                          @10245
138883: c9 c8 09                 a2 = a1 - a5
138886: 01                       fallthrough
      :                          @10246
138887: 82 7a                    a3 = u64 [a0]
138889: ab 8a f2                 jump @10244 if a3 != a1
      :                          @10247
138892: 7b 79                    u64 [a0] = a2
138894: 01                       fallthrough
      :                          @10248
138895: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
138899: 82 16 60                 s1 = u64 [sp + 0x60]
138902: 52 07 07                 jump @10250 if a0 != 0
      :                          @10249
138905: 28 52 c3 00              jump @12862
      :                          @10250
138909: 54 37 00 00 02 0a        jump @10252 if a0 <=u 131072
      :                          @10251
138915: 28 48 c3 00              jump @12862
      :                          @10252
138919: 97 77 03                 a0 = a0 << 0x3
138922: 33 08 b0 02 03           a1 = 0x302b0
138927: 95 88 00 00 10           a1 = a1 + 0x100000
138932: 01                       fallthrough
      :                          @10253
138933: 82 89                    a2 = u64 [a1]
138935: c9 98 0a                 a3 = a1 - a2
138938: aa 6a 07                 jump @10255 if a3 == s1
      :                          @10254
138941: 28 2e c3 00              jump @12862
      :                          @10255
138945: c9 79 0a                 a3 = a2 - a0
138948: 01                       fallthrough
      :                          @10256
138949: 82 8b                    a4 = u64 [a1]
138951: ab 9b ee                 jump @10253 if a4 != a2
      :                          @10257
138954: 7b 8a                    u64 [a1] = a3
138956: 33 0c                    a5 = 0
138958: 01                       fallthrough
      :                          @10258
138959: ab 9b e6                 jump @10253 if a4 != a2
      :                          @10259
138962: 28 19 c3 00              jump @12862
      :                          @10260 [@dyn 915]
138966: 3a 08 70 02 03           a1 = u64 [0x30270]
138971: 97 89 0d                 a2 = a1 << 0xd
138974: d3 98 08                 a1 = a1 ^ a2
138977: 98 8a 07                 a3 = a1 >> 0x7
138980: 3a 09 58 01 03           a2 = u64 [0x30158]
138985: d3 a8 08                 a1 = a1 ^ a3
138988: 97 8a 11                 a3 = a1 << 0x11
138991: d3 a8 08                 a1 = a1 ^ a3
138994: ca 98 0a                 a3 = a1 * a2
138997: 3e 08 70 02 03           u64 [0x30270] = a1
139002: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
139012: d6 ba 08                 a1 = a3 mulhu a4
139015: 98 8c 02                 a5 = a1 >> 0x2
139018: 84 88 fc                 a1 = a1 & 0xfffffffffffffffc
139021: c8 c8 08                 a1 = a1 + a5
139024: 3a 06 70 02 03           s1 = u64 [0x30270]
139029: c9 8a 08                 a1 = a3 - a1
139032: 95 8a 03                 a3 = a1 + 0x3
139035: 97 6c 0d                 a5 = s1 << 0xd
139038: d3 c6 06                 s1 = s1 ^ a5
139041: 98 6c 07                 a5 = s1 >> 0x7
139044: d3 c6 06                 s1 = s1 ^ a5
139047: 97 6c 11                 a5 = s1 << 0x11
139050: d3 6c 0c                 a5 = a5 ^ s1
139053: ca 9c 09                 a2 = a5 * a2
139056: 3e 0c 70 02 03           u64 [0x30270] = a5
139061: d6 b9 07                 a0 = a2 mulhu a4
139064: 98 7b 02                 a4 = a0 >> 0x2
139067: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
139070: c8 b7 07                 a0 = a0 + a4
139073: c9 79 07                 a0 = a2 - a0
139076: 95 79 03                 a2 = a0 + 0x3
139079: 7b 1a b8 01              u64 [sp + 0x1b8] = a3
139083: 7b 19 10 01              u64 [sp + 0x110] = a2
139087: 52 08 07                 jump @10262 if a1 != 0
      :                          @10261
139090: 28 e7 d2 00              jump @13180
      :                          @10262
139094: 52 18 01 08              jump @10264 if a1 != 1
      :                          @10263
139098: 28 f6 d2 00              jump @13184
      :                          @10264
139102: 51 18 02 08              jump @10266 if a1 == 2
      :                          @10265
139106: 28 01 d3 00              jump @13187
      :                          @10266
139110: 51 07 de d2 00           jump @13183 if a0 == 0
      :                          @10267
139115: 28 f8 d2 00              jump @13187
      :                          @10268 [@dyn 916]
139119: 3a 02 58 01 03           t0 = u64 [0x30158]
139124: 49 21 b8 01              u64 [sp + 440] = 0
139128: 49 21 c0 01 08           u64 [sp + 448] = 0x8
139133: 49 21 c8 01              u64 [sp + 456] = 0
139137: 33 06 0c                 s1 = 0xc
139140: 33 03 70 02 03           t1 = 0x30270
139145: 14 04 ab aa aa aa aa aa aa aa t2 = 0xaaaaaaaaaaaaaaab
139155: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
139165: 7b 17 60                 u64 [sp + 0x60] = a0
139168: 7b 12 38                 u64 [sp + 0x38] = t0
139171: 7b 14 30                 u64 [sp + 0x30] = t2
139174: 28 58                    jump @10271
      :                          @10269
139176: ca 29 07                 a0 = a2 * t0
139179: d6 47 09                 a2 = a0 mulhu t2
139182: 98 99 02                 a2 = a2 >> 0x2
139185: 96 99 06                 a2 = a2 * 0x6
139188: c9 97 07                 a0 = a0 - a2
139191: ca 2a 09                 a2 = a3 * t0
139194: d6 49 0a                 a3 = a2 mulhu t2
139197: 98 aa 02                 a3 = a3 >> 0x2
139200: 96 aa 06                 a3 = a3 * 0x6
139203: c9 a9 09                 a2 = a2 - a3
139206: ca 2c 0a                 a3 = a5 * t0
139209: 82 1b 60                 a4 = u64 [sp + 0x60]
139212: d6 ba 0b                 a4 = a3 mulhu a4
139215: 98 bb 04                 a4 = a4 >> 0x4
139218: 82 1c c0 01              a5 = u64 [sp + 0x1c0]
139222: 96 bb 14                 a4 = a4 * 0x14
139225: c9 ba 0a                 a3 = a3 - a4
139228: 96 8b 18                 a4 = a1 * 0x18
139231: c8 cb 0b                 a4 = a4 + a5
139234: 7b b7                    u64 [a4] = a0
139236: 7b b9 08                 u64 [a4 + 0x8] = a2
139239: 95 aa f6                 a3 = a3 + 0xfffffffffffffff6
139242: 7b ba 10                 u64 [a4 + 0x10] = a3
139245: 95 89 01                 a2 = a1 + 0x1
139248: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
139251: 7b 19 c8 01              u64 [sp + 0x1c8] = a2
139255: 52 06 07                 jump @10271 if s1 != 0
      :                          @10270
139258: 28 8e ad 00              jump @12463
      :                          @10271
139262: 3a 07 70 02 03           a0 = u64 [0x30270]
139267: 97 78 0d                 a1 = a0 << 0xd
139270: d3 87 07                 a0 = a0 ^ a1
139273: 98 78 07                 a1 = a0 >> 0x7
139276: d3 87 07                 a0 = a0 ^ a1
139279: 97 78 11                 a1 = a0 << 0x11
139282: d3 78 09                 a2 = a1 ^ a0
139285: 3e 09 70 02 03           u64 [0x30270] = a2
139290: 3a 07 70 02 03           a0 = u64 [0x30270]
139295: 97 78 0d                 a1 = a0 << 0xd
139298: d3 87 07                 a0 = a0 ^ a1
139301: 98 78 07                 a1 = a0 >> 0x7
139304: d3 87 07                 a0 = a0 ^ a1
139307: 97 78 11                 a1 = a0 << 0x11
139310: d3 78 0a                 a3 = a1 ^ a0
139313: 3e 0a 70 02 03           u64 [0x30270] = a3
139318: 3a 07 70 02 03           a0 = u64 [0x30270]
139323: 97 78 0d                 a1 = a0 << 0xd
139326: d3 87 07                 a0 = a0 ^ a1
139329: 98 78 07                 a1 = a0 >> 0x7
139332: d3 87 07                 a0 = a0 ^ a1
139335: 97 78 11                 a1 = a0 << 0x11
139338: d3 78 0c                 a5 = a1 ^ a0
139341: 3e 0c 70 02 03           u64 [0x30270] = a5
139346: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
139350: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
139354: ab 78 4e ff              jump @10269 if a1 != a0
      :                          @10272
139358: 95 17 b8 01              a0 = sp + 0x1b8
139362: 7b 19 58                 u64 [sp + 0x58] = a2
139365: 7b 1a 50                 u64 [sp + 0x50] = a3
139368: 7b 1c 40                 u64 [sp + 0x40] = a5
139371: 50 20 2a 07 22 32 fe     ra = 1834, jump @1569
      :                          @10273 [@dyn 917]
139378: 82 1c 40                 a5 = u64 [sp + 0x40]
139381: 82 1a 50                 a3 = u64 [sp + 0x50]
139384: 82 19 58                 a2 = u64 [sp + 0x58]
139387: 82 14 30                 t2 = u64 [sp + 0x30]
139390: 33 03 70 02 03           t1 = 0x30270
139395: 82 12 38                 t0 = u64 [sp + 0x38]
139398: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
139402: 28 1e ff                 jump @10269
      :                          @10274 [@dyn 918]
139405: 14 08 ff ff ff ff ff ff ff 3f a1 = 0x3fffffffffffffff
139415: 95 17 80 02              a0 = sp + 0x280
139419: 33 09 05                 a2 = 0x5
139422: 50 20 2e 07 54 43 fe     ra = 1838, jump @1877
      :                          @10275 [@dyn 919]
139429: 95 17 f8 01              a0 = sp + 0x1f8
139433: 95 18 80 02              a1 = sp + 0x280
139437: 33 09 05                 a2 = 0x5
139440: 50 20 30 07 6c 3d fe     ra = 1840, jump @1783
      :                          @10276 [@dyn 920]
139447: 82 17 08 02              a0 = u64 [sp + 0x208]
139451: 52 07 07                 jump @10278 if a0 != 0
      :                          @10277
139454: 28 a0 d2 00              jump @13238
      :                          @10278
139458: 82 17 00 02              a0 = u64 [sp + 0x200]
139462: 82 78 10                 a1 = u64 [a0 + 0x10]
139465: 52 08 07                 jump @10280 if a1 != 0
      :                          @10279
139468: 28 83 d2 00              jump @13223
      :                          @10280
139472: 82 77 08                 a0 = u64 [a0 + 0x8]
139475: 49 07                    u64 [a0 + 0] = 0
139477: 82 18 08 02              a1 = u64 [sp + 0x208]
139481: 55 18 02 08              jump @10282 if a1 >=u 2
      :                          @10281
139485: 28 a2 d1 00              jump @13195
      :                          @10282
139489: 82 18 00 02              a1 = u64 [sp + 0x200]
139493: 82 89 28                 a2 = u64 [a1 + 0x28]
139496: 55 19 02 08              jump @10284 if a2 >=u 2
      :                          @10283
139500: 28 5e d2 00              jump @13218
      :                          @10284
139504: 82 87 20                 a0 = u64 [a1 + 0x20]
139507: 49 17 08                 u64 [a0 + 8] = 0
139510: 82 18 08 02              a1 = u64 [sp + 0x208]
139514: 55 18 03 08              jump @10286 if a1 >=u 3
      :                          @10285
139518: 28 83 d1 00              jump @13197
      :                          @10286
139522: 82 17 00 02              a0 = u64 [sp + 0x200]
139526: 82 79 40                 a2 = u64 [a0 + 0x40]
139529: 55 19 03 08              jump @10288 if a2 >=u 3
      :                          @10287
139533: 28 3e d2 00              jump @13219
      :                          @10288
139537: 82 78 38                 a1 = u64 [a0 + 0x38]
139540: 49 18 10                 u64 [a1 + 16] = 0
139543: 82 18 08 02              a1 = u64 [sp + 0x208]
139547: 55 18 04 08              jump @10290 if a1 >=u 4
      :                          @10289
139551: 28 61 d1 00              jump @13196
      :                          @10290
139555: 82 79 58                 a2 = u64 [a0 + 0x58]
139558: 55 19 04 08              jump @10292 if a2 >=u 4
      :                          @10291
139562: 28 22 d2 00              jump @13220
      :                          @10292
139566: 82 79 50                 a2 = u64 [a0 + 0x50]
139569: 49 19 18                 u64 [a2 + 24] = 0
139572: 55 18 05 08              jump @10294 if a1 >=u 5
      :                          @10293
139576: 28 2d d2 00              jump @13245
      :                          @10294
139580: 82 79 70                 a2 = u64 [a0 + 0x70]
139583: 55 19 05 08              jump @10296 if a2 >=u 5
      :                          @10295
139587: 28 3d d2 00              jump @13268
      :                          @10296
139591: 82 77 68                 a0 = u64 [a0 + 0x68]
139594: 3a 0c 58 01 03           a5 = u64 [0x30158]
139599: 49 17 20                 u64 [a0 + 32] = 0
139602: 33 04 0a                 t2 = 0xa
139605: 33 00 70 02 03           ra = 0x30270
139610: 14 03 cd cc cc cc cc cc cc cc t1 = 0xcccccccccccccccd
139620: 01                       fallthrough
      :                          @10297
139621: 3a 07 70 02 03           a0 = u64 [0x30270]
139626: 97 78 0d                 a1 = a0 << 0xd
139629: d3 87 07                 a0 = a0 ^ a1
139632: 98 78 07                 a1 = a0 >> 0x7
139635: d3 87 07                 a0 = a0 ^ a1
139638: 97 78 11                 a1 = a0 << 0x11
139641: d3 87 07                 a0 = a0 ^ a1
139644: 3e 07 70 02 03           u64 [0x30270] = a0
139649: 3a 08 70 02 03           a1 = u64 [0x30270]
139654: ca c7 07                 a0 = a0 * a5
139657: 97 89 0d                 a2 = a1 << 0xd
139660: d3 98 08                 a1 = a1 ^ a2
139663: 98 89 07                 a2 = a1 >> 0x7
139666: d3 98 08                 a1 = a1 ^ a2
139669: 97 89 11                 a2 = a1 << 0x11
139672: d3 89 09                 a2 = a2 ^ a1
139675: 3e 09 70 02 03           u64 [0x30270] = a2
139680: 3a 08 70 02 03           a1 = u64 [0x30270]
139685: d6 37 0b                 a4 = a0 mulhu t1
139688: 98 b2 02                 t0 = a4 >> 0x2
139691: 97 86 0d                 s1 = a1 << 0xd
139694: d3 68 08                 a1 = a1 ^ s1
139697: 98 86 07                 s1 = a1 >> 0x7
139700: d3 68 08                 a1 = a1 ^ s1
139703: 97 86 11                 s1 = a1 << 0x11
139706: d3 86 06                 s1 = s1 ^ a1
139709: 3e 06 70 02 03           u64 [0x30270] = s1
139714: 82 18 08 02              a1 = u64 [sp + 0x208]
139718: 84 bb fc                 a4 = a4 & 0xfffffffffffffffc
139721: c8 2b 0b                 a4 = a4 + t0
139724: c9 b7 07                 a0 = a0 - a4
139727: ac 87 07                 jump @10299 if a0 <u a1
      :                          @10298
139730: 28 75 d1 00              jump @13215
      :                          @10299
139734: 64 cb                    a4 = a5
139736: ca c9 02                 t0 = a2 * a5
139739: 82 19 00 02              a2 = u64 [sp + 0x200]
139743: d6 32 0c                 a5 = t0 mulhu t1
139746: 98 ca 02                 a3 = a5 >> 0x2
139749: 96 77 18                 a0 = a0 * 0x18
139752: c8 79 09                 a2 = a2 + a0
139755: 82 98 10                 a1 = u64 [a2 + 0x10]
139758: 84 cc fc                 a5 = a5 & 0xfffffffffffffffc
139761: c8 ca 0a                 a3 = a3 + a5
139764: c9 a2 07                 a0 = t0 - a3
139767: ac 87 07                 jump @10301 if a0 <u a1
      :                          @10300
139770: 28 4d d1 00              jump @13215
      :                          @10301
139774: 82 98 08                 a1 = u64 [a2 + 0x8]
139777: 64 bc                    a5 = a4
139779: ca b6 09                 a2 = s1 * a4
139782: d6 39 0a                 a3 = a2 mulhu t1
139785: 97 77 03                 a0 = a0 << 0x3
139788: c8 87 07                 a0 = a0 + a1
139791: 82 78                    a1 = u64 [a0]
139793: 98 aa 04                 a3 = a3 >> 0x4
139796: 33 0b 14                 a4 = 0x14
139799: ca ba 0a                 a3 = a3 * a4
139802: c9 a9 09                 a2 = a2 - a3
139805: e5 89 08                 a1 = mins(a2, a1)
139808: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
139811: 7b 78                    u64 [a0] = a1
139813: 52 04 40 ff              jump @10297 if t2 != 0
      :                          @10302
139817: 82 17 00 02              a0 = u64 [sp + 0x200]
139821: 82 18 08 02              a1 = u64 [sp + 0x208]
139825: 50 20 32 07 01 27 ff     ra = 1842, jump @6705
      :                          @10303 [@dyn 921]
139832: 95 17 f8 01              a0 = sp + 0x1f8
139836: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
139840: 33 07 40 02              a0 = 0x240
139844: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
139848: 33 07 00 15 01           a0 = 0x11500
139853: 7b 17 80 02              u64 [sp + 0x280] = a0
139857: 49 21 88 02 01           u64 [sp + 648] = 0x1
139862: 49 21 a0 02              u64 [sp + 672] = 0
139866: 95 18 d0 01              a1 = sp + 0x1d0
139870: 7b 18 90 02              u64 [sp + 0x290] = a1
139874: 49 21 98 02 01           u64 [sp + 664] = 0x1
139879: 95 17 28 02              a0 = sp + 0x228
139883: 95 18 80 02              a1 = sp + 0x280
139887: 50 20 34 07 d8 2c fe     ra = 1844, jump @1491
      :                          @10304 [@dyn 922]
139894: 82 16 30 02              s1 = u64 [sp + 0x230]
139898: 82 1b 38 02              a4 = u64 [sp + 0x238]
139902: 82 17 28 02              a0 = u64 [sp + 0x228]
139906: 7b 17 60                 u64 [sp + 0x60] = a0
139909: 33 07 02                 a0 = 0x2
139912: 33 08                    a1 = 0
139914: 33 09                    a2 = 0
139916: 64 6a                    a3 = s1
139918: 33 00 36 07              ra = 0x736
139922: 0a 64                    ecalli 100 // 'log'
139924: 01                       fallthrough
      :                          @10305 [@dyn 923]
139925: 82 1c 60                 a5 = u64 [sp + 0x60]
139928: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
139933: 55 38 00 00 f0 0a        jump @10307 if a1 >=u 4293918720
      :                          @10306
139939: 28 5c ba 00              jump @12761
      :                          @10307
139943: 33 07 b0 02 03           a0 = 0x302b0
139948: 95 77 00 00 10           a0 = a0 + 0x100000
139953: 01                       fallthrough
      :                          @10308
139954: 82 78                    a1 = u64 [a0]
139956: c9 87 09                 a2 = a0 - a1
139959: aa 69 07                 jump @10310 if a2 == s1
      :                          @10309
139962: 28 45 ba 00              jump @12761
      :                          @10310
139966: c9 c8 09                 a2 = a1 - a5
139969: 01                       fallthrough
      :                          @10311
139970: 82 7a                    a3 = u64 [a0]
139972: ab 8a ee                 jump @10308 if a3 != a1
      :                          @10312
139975: 7b 79                    u64 [a0] = a2
139977: 33 0b                    a4 = 0
139979: 01                       fallthrough
      :                          @10313
139980: ab 8a e6                 jump @10308 if a3 != a1
      :                          @10314
139983: 28 30 ba 00              jump @12761
      :                          @10315 [@dyn 924]
139987: 3a 06 58 01 03           s1 = u64 [0x30158]
139992: 49 21 80 02              u64 [sp + 640] = 0
139996: 49 21 88 02 08           u64 [sp + 648] = 0x8
140001: 49 21 90 02              u64 [sp + 656] = 0
140005: 95 17 f8 01              a0 = sp + 0x1f8
140009: 95 18 80 02              a1 = sp + 0x280
140013: 33 09 0a                 a2 = 0xa
140016: 50 20 3a 07 2c 3b fe     ra = 1850, jump @1783
      :                          @10316 [@dyn 925]
140023: 33 02 0a                 t0 = 0xa
140026: 64 69                    a2 = s1
140028: 49 11 10                 u64 [sp + 16] = 0
140031: 33 00                    ra = 0
140033: 49 11 08 01              u64 [sp + 8] = 0x1
140037: 33 0c 70 02 03           a5 = 0x30270
140042: 14 03 ab aa aa aa aa aa aa aa t1 = 0xaaaaaaaaaaaaaaab
140052: 14 08 00 00 00 00 55 55 55 55 a1 = 0x5555555500000000
140062: 14 04 55 55 55 55 55 55 55 55 t2 = 0x5555555555555555
140072: 7b 16 50                 u64 [sp + 0x50] = s1
140075: 7b 13 40                 u64 [sp + 0x40] = t1
140078: 7b 14 38                 u64 [sp + 0x38] = t2
140081: 28 1e                    jump @10319
      :                          @10317
140083: 95 00 01                 ra = ra + 0x1
140086: 82 17 08                 a0 = u64 [sp + 0x8]
140089: 95 77 01                 a0 = a0 + 0x1
140092: 7b 17 08                 u64 [sp + 0x8] = a0
140095: 82 17 10                 a0 = u64 [sp + 0x10]
140098: 95 77 18                 a0 = a0 + 0x18
140101: 7b 17 10                 u64 [sp + 0x10] = a0
140104: ab 20 07                 jump @10319 if ra != t0
      :                          @10318
140107: 28 0e b9 00              jump @12752
      :                          @10319
140111: 56 10 08 e4              jump @10317 if ra >u 8
      :                          @10320
140115: 82 1a 10                 a3 = u64 [sp + 0x10]
140118: 82 16 08                 s1 = u64 [sp + 0x8]
140121: 7b 10 58                 u64 [sp + 0x58] = ra
140124: 28 31                    jump @10323
      :                          @10321
140126: 33 02 0a                 t0 = 0xa
140129: 82 10 58                 ra = u64 [sp + 0x58]
140132: 33 0c 70 02 03           a5 = 0x30270
140137: 82 13 40                 t1 = u64 [sp + 0x40]
140140: 82 14 38                 t2 = u64 [sp + 0x38]
140143: 82 b7 20                 a0 = u64 [a4 + 0x20]
140146: 97 89 03                 a2 = a1 << 0x3
140149: c8 97 07                 a0 = a0 + a2
140152: 7b 70                    u64 [a0] = ra
140154: 95 88 01                 a1 = a1 + 0x1
140157: 7b b8 28                 u64 [a4 + 0x28] = a1
140160: 82 19 50                 a2 = u64 [sp + 0x50]
140163: 01                       fallthrough
      :                          @10322
140164: 95 66 01                 s1 = s1 + 0x1
140167: 95 aa 18                 a3 = a3 + 0x18
140170: aa 26 a9                 jump @10317 if s1 == t0
      :                          @10323
140173: 3a 07 70 02 03           a0 = u64 [0x30270]
140178: 97 78 0d                 a1 = a0 << 0xd
140181: d3 87 07                 a0 = a0 ^ a1
140184: 98 78 07                 a1 = a0 >> 0x7
140187: d3 87 07                 a0 = a0 ^ a1
140190: 97 78 11                 a1 = a0 << 0x11
140193: d3 87 07                 a0 = a0 ^ a1
140196: ca 39 08                 a1 = a2 * t1
140199: ca 87 08                 a1 = a0 * a1
140202: 3e 07 70 02 03           u64 [0x30270] = a0
140207: ac 84 d5                 jump @10322 if t2 <u a1
      :                          @10324
140210: 82 1c 08 02              a5 = u64 [sp + 0x208]
140214: ac c0 07                 jump @10326 if ra <u a5
      :                          @10325
140217: 28 c4 ce 00              jump @13193
      :                          @10326
140221: 82 12 00 02              t0 = u64 [sp + 0x200]
140225: 96 07 18                 a0 = ra * 0x18
140228: c8 27 07                 a0 = a0 + t0
140231: 82 78 10                 a1 = u64 [a0 + 0x10]
140234: 82 79                    a2 = u64 [a0]
140236: 95 7b 10                 a4 = a0 + 0x10
140239: 7b 1a 60                 u64 [sp + 0x60] = a3
140242: ab 98 28                 jump @10329 if a1 != a2
      :                          @10327
140245: 7b 1c 30                 u64 [sp + 0x30] = a5
140248: 7b 12 28                 u64 [sp + 0x28] = t0
140251: 7b 1b 20                 u64 [sp + 0x20] = a4
140254: 7b 17 18                 u64 [sp + 0x18] = a0
140257: 50 20 3c 07 2e 2f fe     ra = 1852, jump @1581
      :                          @10328 [@dyn 926]
140264: 82 17 18                 a0 = u64 [sp + 0x18]
140267: 82 1b 20                 a4 = u64 [sp + 0x20]
140270: 82 12 28                 t0 = u64 [sp + 0x28]
140273: 82 1c 30                 a5 = u64 [sp + 0x30]
140276: 82 1a 60                 a3 = u64 [sp + 0x60]
140279: 82 b8                    a1 = u64 [a4]
140281: 01                       fallthrough
      :                          @10329
140282: 82 77 08                 a0 = u64 [a0 + 0x8]
140285: 97 89 03                 a2 = a1 << 0x3
140288: c8 97 07                 a0 = a0 + a2
140291: 7b 76                    u64 [a0] = s1
140293: 95 88 01                 a1 = a1 + 0x1
140296: 7b b8                    u64 [a4] = a1
140298: ac c6 07                 jump @10331 if s1 <u a5
      :                          @10330
140301: 28 71 ce 00              jump @13194
      :                          @10331
140305: c8 a2 0b                 a4 = t0 + a3
140308: 82 b8 28                 a1 = u64 [a4 + 0x28]
140311: 82 b7 18                 a0 = u64 [a4 + 0x18]
140314: ab 78 44 ff              jump @10321 if a1 != a0
      :                          @10332
140318: 95 b7 18                 a0 = a4 + 0x18
140321: 7b 1b 30                 u64 [sp + 0x30] = a4
140324: 50 20 3e 07 eb 2e fe     ra = 1854, jump @1581
      :                          @10333 [@dyn 927]
140331: 82 1b 30                 a4 = u64 [sp + 0x30]
140334: 82 1a 60                 a3 = u64 [sp + 0x60]
140337: 82 b8 28                 a1 = u64 [a4 + 0x28]
140340: 28 2a ff                 jump @10321
      :                          @10334 [@dyn 928]
140343: 49 21 80 02              u64 [sp + 640] = 0
140347: 49 21 88 02 08           u64 [sp + 648] = 0x8
140352: 49 21 90 02              u64 [sp + 656] = 0
140356: 95 17 d0 01              a0 = sp + 0x1d0
140360: 95 18 80 02              a1 = sp + 0x280
140364: 33 09 08                 a2 = 0x8
140367: 50 20 42 07 cd 39 fe     ra = 1858, jump @1783
      :                          @10335 [@dyn 929]
140374: 33 09 08                 a2 = 0x8
140377: 49 11 28                 u64 [sp + 40] = 0
140380: 33 07                    a0 = 0
140382: 49 11 20 01              u64 [sp + 32] = 0x1
140386: 33 02 70 02 03           t0 = 0x30270
140391: 28 1e                    jump @10338
      :                          @10336
140393: 95 77 01                 a0 = a0 + 0x1
140396: 82 18 20                 a1 = u64 [sp + 0x20]
140399: 95 88 01                 a1 = a1 + 0x1
140402: 7b 18 20                 u64 [sp + 0x20] = a1
140405: 82 18 28                 a1 = u64 [sp + 0x28]
140408: 95 88 18                 a1 = a1 + 0x18
140411: 7b 18 28                 u64 [sp + 0x28] = a1
140414: ab 97 07                 jump @10338 if a0 != a2
      :                          @10337
140417: 28 8c b8 00              jump @12763
      :                          @10338
140421: 56 17 06 e4              jump @10336 if a0 >u 6
      :                          @10339
140425: 82 1c 28                 a5 = u64 [sp + 0x28]
140428: 82 16 20                 s1 = u64 [sp + 0x20]
140431: 7b 17 58                 u64 [sp + 0x58] = a0
140434: 28 28                    jump @10342
      :                          @10340
140436: 82 17 58                 a0 = u64 [sp + 0x58]
140439: 33 02 70 02 03           t0 = 0x30270
140444: 82 ba 20                 a3 = u64 [a4 + 0x20]
140447: 97 89 03                 a2 = a1 << 0x3
140450: c8 a9 09                 a2 = a2 + a3
140453: 7b 97                    u64 [a2] = a0
140455: 95 88 01                 a1 = a1 + 0x1
140458: 7b b8 28                 u64 [a4 + 0x28] = a1
140461: 33 09 08                 a2 = 0x8
140464: 01                       fallthrough
      :                          @10341
140465: 95 66 01                 s1 = s1 + 0x1
140468: 95 cc 18                 a5 = a5 + 0x18
140471: aa 96 b2                 jump @10336 if s1 == a2
      :                          @10342
140474: 3a 0a 70 02 03           a3 = u64 [0x30270]
140479: 97 a8 0d                 a1 = a3 << 0xd
140482: d3 8a 0a                 a3 = a3 ^ a1
140485: 98 a8 07                 a1 = a3 >> 0x7
140488: d3 8a 0a                 a3 = a3 ^ a1
140491: 97 a8 11                 a1 = a3 << 0x11
140494: d3 a8 08                 a1 = a1 ^ a3
140497: 84 aa 01                 a3 = a3 & 0x1
140500: 3e 08 70 02 03           u64 [0x30270] = a1
140505: 52 0a d8                 jump @10341 if a3 != 0
      :                          @10343
140508: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
140512: ac a7 07                 jump @10345 if a0 <u a3
      :                          @10344
140515: 28 96 cd 00              jump @13189
      :                          @10345
140519: 82 12 d8 01              t0 = u64 [sp + 0x1d8]
140523: 96 77 18                 a0 = a0 * 0x18
140526: c8 27 07                 a0 = a0 + t0
140529: 82 78 10                 a1 = u64 [a0 + 0x10]
140532: 82 79                    a2 = u64 [a0]
140534: 95 7b 10                 a4 = a0 + 0x10
140537: 7b 1c 60                 u64 [sp + 0x60] = a5
140540: ab 98 28                 jump @10348 if a1 != a2
      :                          @10346
140543: 7b 1a 50                 u64 [sp + 0x50] = a3
140546: 7b 12 40                 u64 [sp + 0x40] = t0
140549: 7b 1b 38                 u64 [sp + 0x38] = a4
140552: 7b 17 30                 u64 [sp + 0x30] = a0
140555: 50 20 44 07 04 2e fe     ra = 1860, jump @1581
      :                          @10347 [@dyn 930]
140562: 82 17 30                 a0 = u64 [sp + 0x30]
140565: 82 1b 38                 a4 = u64 [sp + 0x38]
140568: 82 12 40                 t0 = u64 [sp + 0x40]
140571: 82 1a 50                 a3 = u64 [sp + 0x50]
140574: 82 1c 60                 a5 = u64 [sp + 0x60]
140577: 82 b8                    a1 = u64 [a4]
140579: 01                       fallthrough
      :                          @10348
140580: 82 77 08                 a0 = u64 [a0 + 0x8]
140583: 97 89 03                 a2 = a1 << 0x3
140586: c8 97 07                 a0 = a0 + a2
140589: 7b 76                    u64 [a0] = s1
140591: 95 88 01                 a1 = a1 + 0x1
140594: 7b b8                    u64 [a4] = a1
140596: ac a6 07                 jump @10350 if s1 <u a3
      :                          @10349
140599: 28 44 cd 00              jump @13191
      :                          @10350
140603: c8 c2 0b                 a4 = t0 + a5
140606: 82 b8 28                 a1 = u64 [a4 + 0x28]
140609: 82 b7 18                 a0 = u64 [a4 + 0x18]
140612: ab 78 50 ff              jump @10340 if a1 != a0
      :                          @10351
140616: 95 b7 18                 a0 = a4 + 0x18
140619: 7b 1b 50                 u64 [sp + 0x50] = a4
140622: 50 20 46 07 c1 2d fe     ra = 1862, jump @1581
      :                          @10352 [@dyn 931]
140629: 82 1b 50                 a4 = u64 [sp + 0x50]
140632: 82 1c 60                 a5 = u64 [sp + 0x60]
140635: 82 b8 28                 a1 = u64 [a4 + 0x28]
140638: 28 36 ff                 jump @10340
      :                          @10353 [@dyn 932]
140641: 49 21 80 02              u64 [sp + 640] = 0
140645: 49 21 88 02 08           u64 [sp + 648] = 0x8
140650: 49 21 90 02              u64 [sp + 656] = 0
140654: 95 17 d0 01              a0 = sp + 0x1d0
140658: 95 18 80 02              a1 = sp + 0x280
140662: 33 09 08                 a2 = 0x8
140665: 50 20 4a 07 a3 38 fe     ra = 1866, jump @1783
      :                          @10354 [@dyn 933]
140672: 33 02 08                 t0 = 0x8
140675: 49 11 28                 u64 [sp + 40] = 0
140678: 33 07                    a0 = 0
140680: 49 11 20 01              u64 [sp + 32] = 0x1
140684: 33 03 70 02 03           t1 = 0x30270
140689: 28 1e                    jump @10357
      :                          @10355
140691: 95 77 01                 a0 = a0 + 0x1
140694: 82 18 20                 a1 = u64 [sp + 0x20]
140697: 95 88 01                 a1 = a1 + 0x1
140700: 7b 18 20                 u64 [sp + 0x20] = a1
140703: 82 18 28                 a1 = u64 [sp + 0x28]
140706: 95 88 18                 a1 = a1 + 0x18
140709: 7b 18 28                 u64 [sp + 0x28] = a1
140712: ab 27 07                 jump @10357 if a0 != t0
      :                          @10356
140715: 28 38 b8 00              jump @12781
      :                          @10357
140719: 56 17 06 e4              jump @10355 if a0 >u 6
      :                          @10358
140723: 82 1c 28                 a5 = u64 [sp + 0x28]
140726: 82 16 20                 s1 = u64 [sp + 0x20]
140729: 7b 17 58                 u64 [sp + 0x58] = a0
140732: 28 28                    jump @10361
      :                          @10359
140734: 33 02 08                 t0 = 0x8
140737: 82 17 58                 a0 = u64 [sp + 0x58]
140740: 33 03 70 02 03           t1 = 0x30270
140745: 82 ab 20                 a4 = u64 [a3 + 0x20]
140748: 97 89 03                 a2 = a1 << 0x3
140751: c8 b9 09                 a2 = a2 + a4
140754: 7b 97                    u64 [a2] = a0
140756: 95 88 01                 a1 = a1 + 0x1
140759: 7b a8 28                 u64 [a3 + 0x28] = a1
140762: 01                       fallthrough
      :                          @10360
140763: 95 66 01                 s1 = s1 + 0x1
140766: 95 cc 18                 a5 = a5 + 0x18
140769: aa 26 b2                 jump @10355 if s1 == t0
      :                          @10361
140772: 3a 09 70 02 03           a2 = u64 [0x30270]
140777: 97 98 0d                 a1 = a2 << 0xd
140780: d3 89 09                 a2 = a2 ^ a1
140783: 98 98 07                 a1 = a2 >> 0x7
140786: d3 89 09                 a2 = a2 ^ a1
140789: 97 98 11                 a1 = a2 << 0x11
140792: d3 98 08                 a1 = a1 ^ a2
140795: 84 99 01                 a2 = a2 & 0x1
140798: 3e 08 70 02 03           u64 [0x30270] = a1
140803: 52 09 d8                 jump @10360 if a2 != 0
      :                          @10362
140806: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
140810: ac b7 07                 jump @10364 if a0 <u a4
      :                          @10363
140813: 28 6d cc 00              jump @13190
      :                          @10364
140817: 82 12 d8 01              t0 = u64 [sp + 0x1d8]
140821: 96 77 18                 a0 = a0 * 0x18
140824: c8 27 07                 a0 = a0 + t0
140827: 82 78 10                 a1 = u64 [a0 + 0x10]
140830: 82 79                    a2 = u64 [a0]
140832: 95 7a 10                 a3 = a0 + 0x10
140835: 7b 1c 60                 u64 [sp + 0x60] = a5
140838: ab 98 28                 jump @10367 if a1 != a2
      :                          @10365
140841: 7b 1b 50                 u64 [sp + 0x50] = a4
140844: 7b 12 40                 u64 [sp + 0x40] = t0
140847: 7b 1a 38                 u64 [sp + 0x38] = a3
140850: 7b 17 30                 u64 [sp + 0x30] = a0
140853: 50 20 4c 07 da 2c fe     ra = 1868, jump @1581
      :                          @10366 [@dyn 934]
140860: 82 17 30                 a0 = u64 [sp + 0x30]
140863: 82 1a 38                 a3 = u64 [sp + 0x38]
140866: 82 12 40                 t0 = u64 [sp + 0x40]
140869: 82 1b 50                 a4 = u64 [sp + 0x50]
140872: 82 1c 60                 a5 = u64 [sp + 0x60]
140875: 82 a8                    a1 = u64 [a3]
140877: 01                       fallthrough
      :                          @10367
140878: 82 77 08                 a0 = u64 [a0 + 0x8]
140881: 97 89 03                 a2 = a1 << 0x3
140884: c8 97 07                 a0 = a0 + a2
140887: 7b 76                    u64 [a0] = s1
140889: 95 88 01                 a1 = a1 + 0x1
140892: 7b a8                    u64 [a3] = a1
140894: ac b6 07                 jump @10369 if s1 <u a4
      :                          @10368
140897: 28 1b cc 00              jump @13192
      :                          @10369
140901: c8 c2 0a                 a3 = t0 + a5
140904: 82 a8 28                 a1 = u64 [a3 + 0x28]
140907: 82 a7 18                 a0 = u64 [a3 + 0x18]
140910: ab 78 50 ff              jump @10359 if a1 != a0
      :                          @10370
140914: 95 a7 18                 a0 = a3 + 0x18
140917: 7b 1a 50                 u64 [sp + 0x50] = a3
140920: 50 20 4e 07 97 2c fe     ra = 1870, jump @1581
      :                          @10371 [@dyn 935]
140927: 82 1a 50                 a3 = u64 [sp + 0x50]
140930: 82 1c 60                 a5 = u64 [sp + 0x60]
140933: 82 a8 28                 a1 = u64 [a3 + 0x28]
140936: 28 36 ff                 jump @10359
      :                          @10372 [@dyn 936]
140939: 95 17 80 02              a0 = sp + 0x280
140943: 33 08 06                 a1 = 0x6
140946: 50 20 52 07 1e 37 fe     ra = 1874, jump @1776
      :                          @10373 [@dyn 937]
140953: 95 17 d0 01              a0 = sp + 0x1d0
140957: 95 18 80 02              a1 = sp + 0x280
140961: 33 09 06                 a2 = 0x6
140964: 50 20 54 07 2d 3e fe     ra = 1876, jump @1895
      :                          @10374 [@dyn 938]
140971: 33 0a 70 02 03           a3 = 0x30270
140976: 3a 07 70 02 03           a0 = u64 [0x30270]
140981: 97 78 0d                 a1 = a0 << 0xd
140984: d3 87 07                 a0 = a0 ^ a1
140987: 98 78 07                 a1 = a0 >> 0x7
140990: d3 87 07                 a0 = a0 ^ a1
140993: 97 78 11                 a1 = a0 << 0x11
140996: d3 78 08                 a1 = a1 ^ a0
140999: 84 77 01                 a0 = a0 & 0x1
141002: 3e 08 70 02 03           u64 [0x30270] = a1
141007: 52 07 3d                 jump @10384 if a0 != 0
      :                          @10375
141010: 82 1c e0 01              a5 = u64 [sp + 0x1e0]
141014: 52 0c 07                 jump @10377 if a5 != 0
      :                          @10376
141017: 28 76 cc 00              jump @13223
      :                          @10377
141021: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
141025: 82 b9 10                 a2 = u64 [a4 + 0x10]
141028: 56 19 01 08              jump @10379 if a2 >u 1
      :                          @10378
141032: 28 85 cc 00              jump @13251
      :                          @10379
141036: 82 b8 08                 a1 = u64 [a4 + 0x8]
141039: 46 18 01 01              u8 [a1 + 1] = 0x1
141043: 56 1c 01 08              jump @10381 if a5 >u 1
      :                          @10380
141047: 28 50 cc 00              jump @13215
      :                          @10381
141051: 82 b7 28                 a0 = u64 [a4 + 0x28]
141054: 52 07 07                 jump @10383 if a0 != 0
      :                          @10382
141057: 28 7e cc 00              jump @13267
      :                          @10383
141061: 82 b7 20                 a0 = u64 [a4 + 0x20]
141064: 46 07 01                 u8 [a0 + 0] = 0x1
141067: 01                       fallthrough
      :                          @10384
141068: 3a 07 70 02 03           a0 = u64 [0x30270]
141073: 97 78 0d                 a1 = a0 << 0xd
141076: d3 87 07                 a0 = a0 ^ a1
141079: 98 78 07                 a1 = a0 >> 0x7
141082: d3 87 07                 a0 = a0 ^ a1
141085: 97 78 11                 a1 = a0 << 0x11
141088: d3 78 08                 a1 = a1 ^ a0
141091: 84 77 01                 a0 = a0 & 0x1
141094: 3e 08 70 02 03           u64 [0x30270] = a1
141099: 52 07 3d                 jump @10394 if a0 != 0
      :                          @10385
141102: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
141106: 52 08 07                 jump @10387 if a1 != 0
      :                          @10386
141109: 28 11 cc 00              jump @13214
      :                          @10387
141113: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
141117: 82 79 10                 a2 = u64 [a0 + 0x10]
141120: 55 19 03 08              jump @10389 if a2 >=u 3
      :                          @10388
141124: 28 44 cc 00              jump @13276
      :                          @10389
141128: 82 79 08                 a2 = u64 [a0 + 0x8]
141131: 46 19 02 01              u8 [a2 + 2] = 0x1
141135: 55 18 03 08              jump @10391 if a1 >=u 3
      :                          @10390
141139: 28 0e cc 00              jump @13241
      :                          @10391
141143: 82 78 40                 a1 = u64 [a0 + 0x40]
141146: 52 08 07                 jump @10393 if a1 != 0
      :                          @10392
141149: 28 e9 cb 00              jump @13214
      :                          @10393
141153: 82 77 38                 a0 = u64 [a0 + 0x38]
141156: 46 07 01                 u8 [a0 + 0] = 0x1
141159: 01                       fallthrough
      :                          @10394
141160: 3a 08 70 02 03           a1 = u64 [0x30270]
141165: 97 89 0d                 a2 = a1 << 0xd
141168: d3 98 08                 a1 = a1 ^ a2
141171: 98 89 07                 a2 = a1 >> 0x7
141174: d3 98 08                 a1 = a1 ^ a2
141177: 97 89 11                 a2 = a1 << 0x11
141180: d3 89 09                 a2 = a2 ^ a1
141183: 84 88 01                 a1 = a1 & 0x1
141186: 3e 09 70 02 03           u64 [0x30270] = a2
141191: 52 08 3f                 jump @10404 if a1 != 0
      :                          @10395
141194: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
141198: 52 08 07                 jump @10397 if a1 != 0
      :                          @10396
141201: 28 b5 cb 00              jump @13214
      :                          @10397
141205: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
141209: 82 a9 10                 a2 = u64 [a3 + 0x10]
141212: 55 19 04 08              jump @10399 if a2 >=u 4
      :                          @10398
141216: 28 e1 cb 00              jump @13269
      :                          @10399
141220: 82 a9 08                 a2 = u64 [a3 + 0x8]
141223: 33 0c 01                 a5 = 0x1
141226: 78 9c 03                 u8 [a2 + 0x3] = a5
141229: 55 18 04 08              jump @10401 if a1 >=u 4
      :                          @10400
141233: 28 b1 cb 00              jump @13242
      :                          @10401
141237: 82 a8 58                 a1 = u64 [a3 + 0x58]
141240: 52 08 07                 jump @10403 if a1 != 0
      :                          @10402
141243: 28 8b cb 00              jump @13214
      :                          @10403
141247: 82 a8 50                 a1 = u64 [a3 + 0x50]
141250: 46 08 01                 u8 [a1 + 0] = 0x1
141253: 01                       fallthrough
      :                          @10404
141254: 3a 08 70 02 03           a1 = u64 [0x30270]
141259: 97 89 0d                 a2 = a1 << 0xd
141262: d3 98 08                 a1 = a1 ^ a2
141265: 98 89 07                 a2 = a1 >> 0x7
141268: d3 98 08                 a1 = a1 ^ a2
141271: 97 89 11                 a2 = a1 << 0x11
141274: d3 89 09                 a2 = a2 ^ a1
141277: 84 88 01                 a1 = a1 & 0x1
141280: 3e 09 70 02 03           u64 [0x30270] = a2
141285: 52 08 3d                 jump @10414 if a1 != 0
      :                          @10405
141288: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
141292: 52 08 07                 jump @10407 if a1 != 0
      :                          @10406
141295: 28 57 cb 00              jump @13214
      :                          @10407
141299: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
141303: 82 79 10                 a2 = u64 [a0 + 0x10]
141306: 55 19 05 08              jump @10409 if a2 >=u 5
      :                          @10408
141310: 28 7e cb 00              jump @13264
      :                          @10409
141314: 82 79 08                 a2 = u64 [a0 + 0x8]
141317: 46 19 04 01              u8 [a2 + 4] = 0x1
141321: 55 18 05 08              jump @10411 if a1 >=u 5
      :                          @10410
141325: 28 53 cb 00              jump @13240
      :                          @10411
141329: 82 78 70                 a1 = u64 [a0 + 0x70]
141332: 52 08 07                 jump @10413 if a1 != 0
      :                          @10412
141335: 28 2f cb 00              jump @13214
      :                          @10413
141339: 82 77 68                 a0 = u64 [a0 + 0x68]
141342: 46 07 01                 u8 [a0 + 0] = 0x1
141345: 01                       fallthrough
      :                          @10414
141346: 3a 08 70 02 03           a1 = u64 [0x30270]
141351: 97 89 0d                 a2 = a1 << 0xd
141354: d3 98 08                 a1 = a1 ^ a2
141357: 98 89 07                 a2 = a1 >> 0x7
141360: d3 98 08                 a1 = a1 ^ a2
141363: 97 89 11                 a2 = a1 << 0x11
141366: d3 89 09                 a2 = a2 ^ a1
141369: 84 88 01                 a1 = a1 & 0x1
141372: 3e 09 70 02 03           u64 [0x30270] = a2
141377: 52 08 41                 jump @10424 if a1 != 0
      :                          @10415
141380: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
141384: 52 08 07                 jump @10417 if a1 != 0
      :                          @10416
141387: 28 fb ca 00              jump @13214
      :                          @10417
141391: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
141395: 82 a9 10                 a2 = u64 [a3 + 0x10]
141398: 55 19 06 08              jump @10419 if a2 >=u 6
      :                          @10418
141402: 28 1a cb 00              jump @13258
      :                          @10419
141406: 82 a9 08                 a2 = u64 [a3 + 0x8]
141409: 33 0c 01                 a5 = 0x1
141412: 78 9c 05                 u8 [a2 + 0x5] = a5
141415: 55 18 06 08              jump @10421 if a1 >=u 6
      :                          @10420
141419: 28 0a cb 00              jump @13259
      :                          @10421
141423: 82 a8 88 00              a1 = u64 [a3 + 0x88]
141427: 52 08 07                 jump @10423 if a1 != 0
      :                          @10422
141430: 28 d0 ca 00              jump @13214
      :                          @10423
141434: 82 a8 80 00              a1 = u64 [a3 + 0x80]
141438: 46 08 01                 u8 [a1 + 0] = 0x1
141441: 01                       fallthrough
      :                          @10424
141442: 3a 08 70 02 03           a1 = u64 [0x30270]
141447: 97 89 0d                 a2 = a1 << 0xd
141450: d3 98 08                 a1 = a1 ^ a2
141453: 98 89 07                 a2 = a1 >> 0x7
141456: d3 98 08                 a1 = a1 ^ a2
141459: 97 89 11                 a2 = a1 << 0x11
141462: d3 89 09                 a2 = a2 ^ a1
141465: 84 88 01                 a1 = a1 & 0x1
141468: 3e 09 70 02 03           u64 [0x30270] = a2
141473: 52 08 40                 jump @10434 if a1 != 0
      :                          @10425
141476: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
141480: 55 18 02 08              jump @10427 if a1 >=u 2
      :                          @10426
141484: 28 b7 ca 00              jump @13243
      :                          @10427
141488: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
141492: 82 a9 28                 a2 = u64 [a3 + 0x28]
141495: 55 19 03 08              jump @10429 if a2 >=u 3
      :                          @10428
141499: 28 b2 ca 00              jump @13251
      :                          @10429
141503: 82 a9 20                 a2 = u64 [a3 + 0x20]
141506: 46 19 02 01              u8 [a2 + 2] = 0x1
141510: 55 18 03 08              jump @10431 if a1 >=u 3
      :                          @10430
141514: 28 9a ca 00              jump @13244
      :                          @10431
141518: 82 a8 40                 a1 = u64 [a3 + 0x40]
141521: 55 18 02 08              jump @10433 if a1 >=u 2
      :                          @10432
141525: 28 72 ca 00              jump @13215
      :                          @10433
141529: 82 a7 38                 a0 = u64 [a3 + 0x38]
141532: 46 17 01 01              u8 [a0 + 1] = 0x1
141536: 01                       fallthrough
      :                          @10434
141537: 3a 07 70 02 03           a0 = u64 [0x30270]
141542: 97 78 0d                 a1 = a0 << 0xd
141545: d3 87 07                 a0 = a0 ^ a1
141548: 98 78 07                 a1 = a0 >> 0x7
141551: d3 87 07                 a0 = a0 ^ a1
141554: 97 78 11                 a1 = a0 << 0x11
141557: d3 78 08                 a1 = a1 ^ a0
141560: 84 77 01                 a0 = a0 & 0x1
141563: 3e 08 70 02 03           u64 [0x30270] = a1
141568: 52 07 42                 jump @10444 if a0 != 0
      :                          @10435
141571: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
141575: 55 18 02 08              jump @10437 if a1 >=u 2
      :                          @10436
141579: 28 58 ca 00              jump @13243
      :                          @10437
141583: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
141587: 82 b9 28                 a2 = u64 [a4 + 0x28]
141590: 33 0c 04                 a5 = 0x4
141593: ae c9 07                 jump @10439 if a2 >=u a5
      :                          @10438
141596: 28 65 ca 00              jump @13269
      :                          @10439
141600: 82 b9 20                 a2 = u64 [a4 + 0x20]
141603: 46 19 03 01              u8 [a2 + 3] = 0x1
141607: 55 18 04 08              jump @10441 if a1 >=u 4
      :                          @10440
141611: 28 37 ca 00              jump @13242
      :                          @10441
141615: 82 b8 58                 a1 = u64 [a4 + 0x58]
141618: 55 18 02 08              jump @10443 if a1 >=u 2
      :                          @10442
141622: 28 11 ca 00              jump @13215
      :                          @10443
141626: 82 b7 50                 a0 = u64 [a4 + 0x50]
141629: 46 17 01 01              u8 [a0 + 1] = 0x1
141633: 01                       fallthrough
      :                          @10444
141634: 3a 07 70 02 03           a0 = u64 [0x30270]
141639: 97 78 0d                 a1 = a0 << 0xd
141642: d3 87 07                 a0 = a0 ^ a1
141645: 98 78 07                 a1 = a0 >> 0x7
141648: d3 87 07                 a0 = a0 ^ a1
141651: 97 78 11                 a1 = a0 << 0x11
141654: d3 78 08                 a1 = a1 ^ a0
141657: 84 77 01                 a0 = a0 & 0x1
141660: 3e 08 70 02 03           u64 [0x30270] = a1
141665: 52 07 40                 jump @10454 if a0 != 0
      :                          @10445
141668: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
141672: 55 18 02 08              jump @10447 if a1 >=u 2
      :                          @10446
141676: 28 f7 c9 00              jump @13243
      :                          @10447
141680: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
141684: 82 a9 28                 a2 = u64 [a3 + 0x28]
141687: 55 19 05 08              jump @10449 if a2 >=u 5
      :                          @10448
141691: 28 01 ca 00              jump @13264
      :                          @10449
141695: 82 a9 20                 a2 = u64 [a3 + 0x20]
141698: 46 19 04 01              u8 [a2 + 4] = 0x1
141702: 55 18 05 08              jump @10451 if a1 >=u 5
      :                          @10450
141706: 28 d6 c9 00              jump @13240
      :                          @10451
141710: 82 a8 70                 a1 = u64 [a3 + 0x70]
141713: 55 18 02 08              jump @10453 if a1 >=u 2
      :                          @10452
141717: 28 b2 c9 00              jump @13215
      :                          @10453
141721: 82 a7 68                 a0 = u64 [a3 + 0x68]
141724: 46 17 01 01              u8 [a0 + 1] = 0x1
141728: 01                       fallthrough
      :                          @10454
141729: 3a 07 70 02 03           a0 = u64 [0x30270]
141734: 97 78 0d                 a1 = a0 << 0xd
141737: d3 87 07                 a0 = a0 ^ a1
141740: 98 78 07                 a1 = a0 >> 0x7
141743: d3 87 07                 a0 = a0 ^ a1
141746: 97 78 11                 a1 = a0 << 0x11
141749: d3 78 08                 a1 = a1 ^ a0
141752: 84 77 01                 a0 = a0 & 0x1
141755: 3e 08 70 02 03           u64 [0x30270] = a1
141760: 52 07 44                 jump @10464 if a0 != 0
      :                          @10455
141763: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
141767: 55 18 02 08              jump @10457 if a1 >=u 2
      :                          @10456
141771: 28 98 c9 00              jump @13243
      :                          @10457
141775: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
141779: 82 b9 28                 a2 = u64 [a4 + 0x28]
141782: 33 0c 06                 a5 = 0x6
141785: ae c9 07                 jump @10459 if a2 >=u a5
      :                          @10458
141788: 28 98 c9 00              jump @13258
      :                          @10459
141792: 82 b9 20                 a2 = u64 [a4 + 0x20]
141795: 46 19 05 01              u8 [a2 + 5] = 0x1
141799: 55 18 06 08              jump @10461 if a1 >=u 6
      :                          @10460
141803: 28 8a c9 00              jump @13259
      :                          @10461
141807: 82 b8 88 00              a1 = u64 [a4 + 0x88]
141811: 55 18 02 08              jump @10463 if a1 >=u 2
      :                          @10462
141815: 28 50 c9 00              jump @13215
      :                          @10463
141819: 82 b7 80 00              a0 = u64 [a4 + 0x80]
141823: 46 17 01 01              u8 [a0 + 1] = 0x1
141827: 01                       fallthrough
      :                          @10464
141828: 3a 07 70 02 03           a0 = u64 [0x30270]
141833: 97 78 0d                 a1 = a0 << 0xd
141836: d3 87 07                 a0 = a0 ^ a1
141839: 98 78 07                 a1 = a0 >> 0x7
141842: d3 87 07                 a0 = a0 ^ a1
141845: 97 78 11                 a1 = a0 << 0x11
141848: d3 78 08                 a1 = a1 ^ a0
141851: 84 77 01                 a0 = a0 & 0x1
141854: 3e 08 70 02 03           u64 [0x30270] = a1
141859: 52 07 40                 jump @10474 if a0 != 0
      :                          @10465
141862: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
141866: 55 18 03 08              jump @10467 if a1 >=u 3
      :                          @10466
141870: 28 33 c9 00              jump @13241
      :                          @10467
141874: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
141878: 82 a9 40                 a2 = u64 [a3 + 0x40]
141881: 55 19 04 08              jump @10469 if a2 >=u 4
      :                          @10468
141885: 28 30 c9 00              jump @13251
      :                          @10469
141889: 82 a7 38                 a0 = u64 [a3 + 0x38]
141892: 46 17 03 01              u8 [a0 + 3] = 0x1
141896: 55 18 04 08              jump @10471 if a1 >=u 4
      :                          @10470
141900: 28 1c c9 00              jump @13248
      :                          @10471
141904: 82 a8 58                 a1 = u64 [a3 + 0x58]
141907: 55 18 03 08              jump @10473 if a1 >=u 3
      :                          @10472
141911: 28 0a c9 00              jump @13241
      :                          @10473
141915: 82 a7 50                 a0 = u64 [a3 + 0x50]
141918: 46 17 02 01              u8 [a0 + 2] = 0x1
141922: 01                       fallthrough
      :                          @10474
141923: 3a 08 70 02 03           a1 = u64 [0x30270]
141928: 97 89 0d                 a2 = a1 << 0xd
141931: d3 98 08                 a1 = a1 ^ a2
141934: 98 89 07                 a2 = a1 >> 0x7
141937: d3 98 08                 a1 = a1 ^ a2
141940: 97 89 11                 a2 = a1 << 0x11
141943: d3 89 09                 a2 = a2 ^ a1
141946: 84 88 01                 a1 = a1 & 0x1
141949: 3e 09 70 02 03           u64 [0x30270] = a2
141954: 52 08 42                 jump @10484 if a1 != 0
      :                          @10475
141957: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
141961: 55 18 03 08              jump @10477 if a1 >=u 3
      :                          @10476
141965: 28 d4 c8 00              jump @13241
      :                          @10477
141969: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
141973: 82 a9 40                 a2 = u64 [a3 + 0x40]
141976: 55 19 05 08              jump @10479 if a2 >=u 5
      :                          @10478
141980: 28 e0 c8 00              jump @13264
      :                          @10479
141984: 82 a9 38                 a2 = u64 [a3 + 0x38]
141987: 33 0c 01                 a5 = 0x1
141990: 78 9c 04                 u8 [a2 + 0x4] = a5
141993: 55 18 05 08              jump @10481 if a1 >=u 5
      :                          @10480
141997: 28 b3 c8 00              jump @13240
      :                          @10481
142001: 82 a8 70                 a1 = u64 [a3 + 0x70]
142004: 55 18 03 08              jump @10483 if a1 >=u 3
      :                          @10482
142008: 28 a9 c8 00              jump @13241
      :                          @10483
142012: 82 a8 68                 a1 = u64 [a3 + 0x68]
142015: 46 18 02 01              u8 [a1 + 2] = 0x1
142019: 01                       fallthrough
      :                          @10484
142020: 3a 08 70 02 03           a1 = u64 [0x30270]
142025: 97 89 0d                 a2 = a1 << 0xd
142028: d3 98 08                 a1 = a1 ^ a2
142031: 98 89 07                 a2 = a1 >> 0x7
142034: d3 98 08                 a1 = a1 ^ a2
142037: 97 89 11                 a2 = a1 << 0x11
142040: d3 89 09                 a2 = a2 ^ a1
142043: 84 88 01                 a1 = a1 & 0x1
142046: 3e 09 70 02 03           u64 [0x30270] = a2
142051: 52 08 42                 jump @10494 if a1 != 0
      :                          @10485
142054: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
142058: 55 18 03 08              jump @10487 if a1 >=u 3
      :                          @10486
142062: 28 73 c8 00              jump @13241
      :                          @10487
142066: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
142070: 82 79 40                 a2 = u64 [a0 + 0x40]
142073: 55 19 06 08              jump @10489 if a2 >=u 6
      :                          @10488
142077: 28 77 c8 00              jump @13258
      :                          @10489
142081: 82 79 38                 a2 = u64 [a0 + 0x38]
142084: 46 19 05 01              u8 [a2 + 5] = 0x1
142088: 55 18 06 08              jump @10491 if a1 >=u 6
      :                          @10490
142092: 28 69 c8 00              jump @13259
      :                          @10491
142096: 82 78 88 00              a1 = u64 [a0 + 0x88]
142100: 55 18 03 08              jump @10493 if a1 >=u 3
      :                          @10492
142104: 28 49 c8 00              jump @13241
      :                          @10493
142108: 82 77 80 00              a0 = u64 [a0 + 0x80]
142112: 46 17 02 01              u8 [a0 + 2] = 0x1
142116: 01                       fallthrough
      :                          @10494
142117: 3a 07 70 02 03           a0 = u64 [0x30270]
142122: 97 78 0d                 a1 = a0 << 0xd
142125: d3 87 07                 a0 = a0 ^ a1
142128: 98 78 07                 a1 = a0 >> 0x7
142131: d3 87 07                 a0 = a0 ^ a1
142134: 97 78 11                 a1 = a0 << 0x11
142137: d3 78 08                 a1 = a1 ^ a0
142140: 84 77 01                 a0 = a0 & 0x1
142143: 3e 08 70 02 03           u64 [0x30270] = a1
142148: 52 07 42                 jump @10504 if a0 != 0
      :                          @10495
142151: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
142155: 55 18 04 08              jump @10497 if a1 >=u 4
      :                          @10496
142159: 28 13 c8 00              jump @13242
      :                          @10497
142163: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
142167: 82 b9 58                 a2 = u64 [a4 + 0x58]
142170: 33 0c 05                 a5 = 0x5
142173: ae c9 07                 jump @10499 if a2 >=u a5
      :                          @10498
142176: 28 0d c8 00              jump @13251
      :                          @10499
142180: 82 b7 50                 a0 = u64 [a4 + 0x50]
142183: 46 17 04 01              u8 [a0 + 4] = 0x1
142187: 55 18 05 08              jump @10501 if a1 >=u 5
      :                          @10500
142191: 28 f6 c7 00              jump @13245
      :                          @10501
142195: 82 b8 70                 a1 = u64 [a4 + 0x70]
142198: 55 18 04 08              jump @10503 if a1 >=u 4
      :                          @10502
142202: 28 e8 c7 00              jump @13242
      :                          @10503
142206: 82 b7 68                 a0 = u64 [a4 + 0x68]
142209: 46 17 03 01              u8 [a0 + 3] = 0x1
142213: 01                       fallthrough
      :                          @10504
142214: 3a 07 70 02 03           a0 = u64 [0x30270]
142219: 97 78 0d                 a1 = a0 << 0xd
142222: d3 87 07                 a0 = a0 ^ a1
142225: 98 78 07                 a1 = a0 >> 0x7
142228: d3 87 07                 a0 = a0 ^ a1
142231: 97 78 11                 a1 = a0 << 0x11
142234: d3 78 08                 a1 = a1 ^ a0
142237: 84 77 01                 a0 = a0 & 0x1
142240: 3e 08 70 02 03           u64 [0x30270] = a1
142245: 52 07 42                 jump @10514 if a0 != 0
      :                          @10505
142248: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
142252: 55 18 04 08              jump @10507 if a1 >=u 4
      :                          @10506
142256: 28 b2 c7 00              jump @13242
      :                          @10507
142260: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
142264: 82 79 58                 a2 = u64 [a0 + 0x58]
142267: 55 19 06 08              jump @10509 if a2 >=u 6
      :                          @10508
142271: 28 b5 c7 00              jump @13258
      :                          @10509
142275: 82 79 50                 a2 = u64 [a0 + 0x50]
142278: 46 19 05 01              u8 [a2 + 5] = 0x1
142282: 55 18 06 08              jump @10511 if a1 >=u 6
      :                          @10510
142286: 28 a7 c7 00              jump @13259
      :                          @10511
142290: 82 78 88 00              a1 = u64 [a0 + 0x88]
142294: 55 18 04 08              jump @10513 if a1 >=u 4
      :                          @10512
142298: 28 88 c7 00              jump @13242
      :                          @10513
142302: 82 77 80 00              a0 = u64 [a0 + 0x80]
142306: 46 17 03 01              u8 [a0 + 3] = 0x1
142310: 01                       fallthrough
      :                          @10514
142311: 3a 08 70 02 03           a1 = u64 [0x30270]
142316: 97 89 0d                 a2 = a1 << 0xd
142319: d3 98 08                 a1 = a1 ^ a2
142322: 98 89 07                 a2 = a1 >> 0x7
142325: d3 98 08                 a1 = a1 ^ a2
142328: 97 89 11                 a2 = a1 << 0x11
142331: d3 89 09                 a2 = a2 ^ a1
142334: 84 88 01                 a1 = a1 & 0x1
142337: 3e 09 70 02 03           u64 [0x30270] = a2
142342: 52 08 42                 jump @10524 if a1 != 0
      :                          @10515
142345: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
142349: 55 18 05 08              jump @10517 if a1 >=u 5
      :                          @10516
142353: 28 4f c7 00              jump @13240
      :                          @10517
142357: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
142361: 82 a9 70                 a2 = u64 [a3 + 0x70]
142364: 55 19 06 08              jump @10519 if a2 >=u 6
      :                          @10518
142368: 28 4d c7 00              jump @13251
      :                          @10519
142372: 82 a7 68                 a0 = u64 [a3 + 0x68]
142375: 46 17 05 01              u8 [a0 + 5] = 0x1
142379: 55 18 06 08              jump @10521 if a1 >=u 6
      :                          @10520
142383: 28 41 c7 00              jump @13254
      :                          @10521
142387: 82 a8 88 00              a1 = u64 [a3 + 0x88]
142391: 55 18 05 08              jump @10523 if a1 >=u 5
      :                          @10522
142395: 28 25 c7 00              jump @13240
      :                          @10523
142399: 82 a7 80 00              a0 = u64 [a3 + 0x80]
142403: 46 17 04 01              u8 [a0 + 4] = 0x1
142407: 01                       fallthrough
      :                          @10524
142408: 49 21 f8 01              u64 [sp + 504] = 0
142412: 49 21 00 02 08           u64 [sp + 512] = 0x8
142417: 49 21 08 02              u64 [sp + 520] = 0
142421: 49 21 e8 00              u64 [sp + 232] = 0
142425: 49 21 f0 00 08           u64 [sp + 240] = 0x8
142430: 49 21 f8 00              u64 [sp + 248] = 0
142434: 95 17 28 02              a0 = sp + 0x228
142438: 33 08 06                 a1 = 0x6
142441: 50 20 56 07 ff 4d fe     ra = 1878, jump @2226
      :                          @10525 [@dyn 939]
142448: 82 17 f8 00              a0 = u64 [sp + 0xf8]
142452: 82 18 f0 00              a1 = u64 [sp + 0xf0]
142456: 82 19 e8 00              a2 = u64 [sp + 0xe8]
142460: 7b 17 90 02              u64 [sp + 0x290] = a0
142464: 7b 18 88 02              u64 [sp + 0x288] = a1
142468: 7b 19 80 02              u64 [sp + 0x280] = a2
142472: 95 17 80 02              a0 = sp + 0x280
142476: 95 18 28 02              a1 = sp + 0x228
142480: 95 19 e8 00              a2 = sp + 0xe8
142484: 95 1a d0 01              a3 = sp + 0x1d0
142488: 95 1b f8 01              a4 = sp + 0x1f8
142492: 50 20 58 07 1b 2a ff     ra = 1880, jump @6976
      :                          @10526 [@dyn 940]
142499: 82 17 08 02              a0 = u64 [sp + 0x208]
142503: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
142507: 95 17 b8 01              a0 = sp + 0x1b8
142511: 7b 17 10 01              u64 [sp + 0x110] = a0
142515: 33 07 28 0c              a0 = 0xc28
142519: 7b 17 18 01              u64 [sp + 0x118] = a0
142523: 33 07 90 15 01           a0 = 0x11590
142528: 7b 17 80 02              u64 [sp + 0x280] = a0
142532: 49 21 88 02 02           u64 [sp + 648] = 0x2
142537: 49 21 a0 02              u64 [sp + 672] = 0
142541: 95 17 10 01              a0 = sp + 0x110
142545: 7b 17 90 02              u64 [sp + 0x290] = a0
142549: 49 21 98 02 01           u64 [sp + 664] = 0x1
142554: 95 17 28 02              a0 = sp + 0x228
142558: 95 18 80 02              a1 = sp + 0x280
142562: 50 20 5a 07 65 22 fe     ra = 1882, jump @1491
      :                          @10527 [@dyn 941]
142569: 82 16 30 02              s1 = u64 [sp + 0x230]
142573: 82 1b 38 02              a4 = u64 [sp + 0x238]
142577: 82 17 28 02              a0 = u64 [sp + 0x228]
142581: 7b 17 60                 u64 [sp + 0x60] = a0
142584: 33 07 02                 a0 = 0x2
142587: 33 08                    a1 = 0
142589: 33 09                    a2 = 0
142591: 64 6a                    a3 = s1
142593: 33 00 5c 07              ra = 0x75c
142597: 0a 64                    ecalli 100 // 'log'
142599: 01                       fallthrough
      :                          @10528 [@dyn 942]
142600: 82 1c 60                 a5 = u64 [sp + 0x60]
142603: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
142608: 53 38 00 00 f0 32        jump @10534 if a1 <u 4293918720
      :                          @10529
142614: 33 07 b0 02 03           a0 = 0x302b0
142619: 95 77 00 00 10           a0 = a0 + 0x100000
142624: 01                       fallthrough
      :                          @10530
142625: 82 78                    a1 = u64 [a0]
142627: c9 87 09                 a2 = a0 - a1
142630: ab 69 1c                 jump @10534 if a2 != s1
      :                          @10531
142633: c9 c8 09                 a2 = a1 - a5
142636: 01                       fallthrough
      :                          @10532
142637: 82 7a                    a3 = u64 [a0]
142639: ab 8a f2                 jump @10530 if a3 != a1
      :                          @10533
142642: 7b 79                    u64 [a0] = a2
142644: 33 0b                    a4 = 0
142646: 95 17 f8 01              a0 = sp + 0x1f8
142650: 33 00 5e 07              ra = 0x75e
142654: 28 1c df fd              jump @229
      :                          @10534
142658: 95 17 f8 01              a0 = sp + 0x1f8
142662: 50 20 5e 07 14 df fd     ra = 1886, jump @229
      :                          @10535 [@dyn 943]
142669: 95 17 d0 01              a0 = sp + 0x1d0
142673: 33 00 7c 0b              ra = 0xb7c
142677: 28 66 de fd              jump @209
      :                          @10536 [@dyn 944]
142681: 3a 06 58 01 03           s1 = u64 [0x30158]
142686: 95 17 80 02              a0 = sp + 0x280
142690: 33 08 0a                 a1 = 0xa
142693: 50 20 62 07 4b 30 fe     ra = 1890, jump @1776
      :                          @10537 [@dyn 945]
142700: 95 17 d0 01              a0 = sp + 0x1d0
142704: 95 18 80 02              a1 = sp + 0x280
142708: 33 09 0a                 a2 = 0xa
142711: 50 20 64 07 5a 37 fe     ra = 1892, jump @1895
      :                          @10538 [@dyn 946]
142718: 33 03 0a                 t1 = 0xa
142721: 64 6c                    a5 = s1
142723: 49 11 60                 u64 [sp + 96] = 0
142726: 33 07                    a0 = 0
142728: 33 06 70 02 03           s1 = 0x30270
142733: 14 0b ab aa aa aa aa aa aa aa a4 = 0xaaaaaaaaaaaaaaab
142743: 14 02 55 55 55 55 55 55 55 55 t0 = 0x5555555555555555
142753: 49 11 58 01              u64 [sp + 88] = 0x1
142757: 28 1e                    jump @10541
      :                          @10539
142759: 95 77 01                 a0 = a0 + 0x1
142762: 82 18 58                 a1 = u64 [sp + 0x58]
142765: 95 88 01                 a1 = a1 + 0x1
142768: 7b 18 58                 u64 [sp + 0x58] = a1
142771: 82 18 60                 a1 = u64 [sp + 0x60]
142774: 95 88 18                 a1 = a1 + 0x18
142777: 7b 18 60                 u64 [sp + 0x60] = a1
142780: ab 37 07                 jump @10541 if a0 != t1
      :                          @10540
142783: 28 0b b1 00              jump @12799
      :                          @10541
142787: 56 17 08 e4              jump @10539 if a0 >u 8
      :                          @10542
142791: 82 14 60                 t2 = u64 [sp + 0x60]
142794: 82 19 58                 a2 = u64 [sp + 0x58]
142797: 28 1d                    jump @10545
      :                          @10543
142799: 82 08 20                 a1 = u64 [ra + 0x20]
142802: c8 78 08                 a1 = a1 + a0
142805: 46 08 01                 u8 [a1 + 0] = 0x1
142808: 33 03 0a                 t1 = 0xa
142811: 33 06 70 02 03           s1 = 0x30270
142816: 01                       fallthrough
      :                          @10544
142817: 95 99 01                 a2 = a2 + 0x1
142820: 95 44 18                 t2 = t2 + 0x18
142823: aa 39 c0                 jump @10539 if a2 == t1
      :                          @10545
142826: 3a 08 70 02 03           a1 = u64 [0x30270]
142831: 97 8a 0d                 a3 = a1 << 0xd
142834: d3 a8 08                 a1 = a1 ^ a3
142837: 98 8a 07                 a3 = a1 >> 0x7
142840: d3 a8 08                 a1 = a1 ^ a3
142843: 97 8a 11                 a3 = a1 << 0x11
142846: d3 a8 08                 a1 = a1 ^ a3
142849: ca bc 0a                 a3 = a5 * a4
142852: ca a8 0a                 a3 = a1 * a3
142855: 3e 08 70 02 03           u64 [0x30270] = a1
142860: ac a2 d5                 jump @10544 if t0 <u a3
      :                          @10546
142863: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
142867: ac 87 07                 jump @10548 if a0 <u a1
      :                          @10547
142870: 28 31 c5 00              jump @13215
      :                          @10548
142874: 82 10 d8 01              ra = u64 [sp + 0x1d8]
142878: 96 73 18                 t1 = a0 * 0x18
142881: c8 03 03                 t1 = t1 + ra
142884: 82 3a 10                 a3 = u64 [t1 + 0x10]
142887: ac a9 07                 jump @10550 if a2 <u a3
      :                          @10549
142890: 28 8b b1 00              jump @12820
      :                          @10550
142894: 82 3a 08                 a3 = u64 [t1 + 0x8]
142897: c8 9a 0a                 a3 = a3 + a2
142900: 46 0a 01                 u8 [a3 + 0] = 0x1
142903: ac 89 07                 jump @10552 if a2 <u a1
      :                          @10551
142906: 28 40 c5 00              jump @13262
      :                          @10552
142910: c8 40 00                 ra = ra + t2
142913: 82 08 28                 a1 = u64 [ra + 0x28]
142916: ac 87 8b                 jump @10543 if a0 <u a1
      :                          @10553
142919: 28 00 c5 00              jump @13215
      :                          @10554 [@dyn 947]
142923: 3a 02 58 01 03           t0 = u64 [0x30158]
142928: 49 21 d0 01              u64 [sp + 464] = 0
142932: 49 21 d8 01 08           u64 [sp + 472] = 0x8
142937: 49 21 e0 01              u64 [sp + 480] = 0
142941: 3a 03 a8 01 03           t1 = u64 [0x301a8]
142946: 33 06 14                 s1 = 0x14
142949: 33 0c 70 02 03           a5 = 0x30270
142954: 33 04 64                 t2 = 0x64
142957: 7b 12 50                 u64 [sp + 0x50] = t0
142960: 7b 13 40                 u64 [sp + 0x40] = t1
142963: 28 46                    jump @10557
      :                          @10555
142965: ca 29 07                 a0 = a2 * t0
142968: 98 79 02                 a2 = a0 >> 0x2
142971: d6 39 09                 a2 = a2 mulhu t1
142974: 98 99 02                 a2 = a2 >> 0x2
142977: ca 49 09                 a2 = a2 * t2
142980: c9 97 07                 a0 = a0 - a2
142983: ca 2a 09                 a2 = a3 * t0
142986: 98 9a 02                 a3 = a2 >> 0x2
142989: d6 3a 0a                 a3 = a3 mulhu t1
142992: 98 aa 02                 a3 = a3 >> 0x2
142995: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
142999: ca 4a 0a                 a3 = a3 * t2
143002: c9 a9 09                 a2 = a2 - a3
143005: 97 8a 04                 a3 = a1 << 0x4
143008: c8 ba 0a                 a3 = a3 + a4
143011: 7b a7                    u64 [a3] = a0
143013: 7b a9 08                 u64 [a3 + 0x8] = a2
143016: 95 89 01                 a2 = a1 + 0x1
143019: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
143022: 7b 19 e0 01              u64 [sp + 0x1e0] = a2
143026: 52 06 07                 jump @10557 if s1 != 0
      :                          @10556
143029: 28 a4 9f 00              jump @12478
      :                          @10557
143033: 3a 07 70 02 03           a0 = u64 [0x30270]
143038: 97 78 0d                 a1 = a0 << 0xd
143041: d3 87 07                 a0 = a0 ^ a1
143044: 98 78 07                 a1 = a0 >> 0x7
143047: d3 87 07                 a0 = a0 ^ a1
143050: 97 78 11                 a1 = a0 << 0x11
143053: d3 78 09                 a2 = a1 ^ a0
143056: 3e 09 70 02 03           u64 [0x30270] = a2
143061: 3a 07 70 02 03           a0 = u64 [0x30270]
143066: 97 78 0d                 a1 = a0 << 0xd
143069: d3 87 07                 a0 = a0 ^ a1
143072: 98 78 07                 a1 = a0 >> 0x7
143075: d3 87 07                 a0 = a0 ^ a1
143078: 97 78 11                 a1 = a0 << 0x11
143081: d3 78 0a                 a3 = a1 ^ a0
143084: 3e 0a 70 02 03           u64 [0x30270] = a3
143089: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
143093: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
143097: ab 78 7c ff              jump @10555 if a1 != a0
      :                          @10558
143101: 95 17 d0 01              a0 = sp + 0x1d0
143105: 7b 19 60                 u64 [sp + 0x60] = a2
143108: 7b 1a 58                 u64 [sp + 0x58] = a3
143111: 50 20 68 07 01 25 fe     ra = 1896, jump @1605
      :                          @10559 [@dyn 948]
143118: 82 1a 58                 a3 = u64 [sp + 0x58]
143121: 82 19 60                 a2 = u64 [sp + 0x60]
143124: 33 04 64                 t2 = 0x64
143127: 33 0c 70 02 03           a5 = 0x30270
143132: 82 13 40                 t1 = u64 [sp + 0x40]
143135: 82 12 50                 t0 = u64 [sp + 0x50]
143138: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
143142: 28 4f ff                 jump @10555
      :                          @10560 [@dyn 949]
143145: 3a 02 58 01 03           t0 = u64 [0x30158]
143150: 49 21 f8 01              u64 [sp + 504] = 0
143154: 49 21 00 02 08           u64 [sp + 512] = 0x8
143159: 49 21 08 02              u64 [sp + 520] = 0
143163: 3a 03 a8 01 03           t1 = u64 [0x301a8]
143168: 33 06 14                 s1 = 0x14
143171: 33 0c 70 02 03           a5 = 0x30270
143176: 33 04 64                 t2 = 0x64
143179: 7b 12 50                 u64 [sp + 0x50] = t0
143182: 7b 13 40                 u64 [sp + 0x40] = t1
143185: 28 46                    jump @10563
      :                          @10561
143187: ca 29 07                 a0 = a2 * t0
143190: 98 79 02                 a2 = a0 >> 0x2
143193: d6 39 09                 a2 = a2 mulhu t1
143196: 98 99 02                 a2 = a2 >> 0x2
143199: ca 49 09                 a2 = a2 * t2
143202: c9 97 0b                 a4 = a0 - a2
143205: ca 2a 09                 a2 = a3 * t0
143208: 98 9a 02                 a3 = a2 >> 0x2
143211: d6 3a 0a                 a3 = a3 mulhu t1
143214: 98 aa 02                 a3 = a3 >> 0x2
143217: 82 17 00 02              a0 = u64 [sp + 0x200]
143221: ca 4a 0a                 a3 = a3 * t2
143224: c9 a9 09                 a2 = a2 - a3
143227: 97 8a 04                 a3 = a1 << 0x4
143230: c8 7a 0a                 a3 = a3 + a0
143233: 7b ab                    u64 [a3] = a4
143235: 7b a9 08                 u64 [a3 + 0x8] = a2
143238: 95 88 01                 a1 = a1 + 0x1
143241: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
143244: 7b 18 08 02              u64 [sp + 0x208] = a1
143248: 52 06 07                 jump @10563 if s1 != 0
      :                          @10562
143251: 28 d4 9f 00              jump @12506
      :                          @10563
143255: 3a 07 70 02 03           a0 = u64 [0x30270]
143260: 97 78 0d                 a1 = a0 << 0xd
143263: d3 87 07                 a0 = a0 ^ a1
143266: 98 78 07                 a1 = a0 >> 0x7
143269: d3 87 07                 a0 = a0 ^ a1
143272: 97 78 11                 a1 = a0 << 0x11
143275: d3 78 09                 a2 = a1 ^ a0
143278: 3e 09 70 02 03           u64 [0x30270] = a2
143283: 3a 07 70 02 03           a0 = u64 [0x30270]
143288: 97 78 0d                 a1 = a0 << 0xd
143291: d3 87 07                 a0 = a0 ^ a1
143294: 98 78 07                 a1 = a0 >> 0x7
143297: d3 87 07                 a0 = a0 ^ a1
143300: 97 78 11                 a1 = a0 << 0x11
143303: d3 78 0a                 a3 = a1 ^ a0
143306: 3e 0a 70 02 03           u64 [0x30270] = a3
143311: 82 18 08 02              a1 = u64 [sp + 0x208]
143315: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
143319: ab 78 7c ff              jump @10561 if a1 != a0
      :                          @10564
143323: 95 17 f8 01              a0 = sp + 0x1f8
143327: 7b 19 60                 u64 [sp + 0x60] = a2
143330: 7b 1a 58                 u64 [sp + 0x58] = a3
143333: 50 20 6c 07 23 24 fe     ra = 1900, jump @1605
      :                          @10565 [@dyn 950]
143340: 82 1a 58                 a3 = u64 [sp + 0x58]
143343: 82 19 60                 a2 = u64 [sp + 0x60]
143346: 33 04 64                 t2 = 0x64
143349: 33 0c 70 02 03           a5 = 0x30270
143354: 82 13 40                 t1 = u64 [sp + 0x40]
143357: 82 12 50                 t0 = u64 [sp + 0x50]
143360: 82 18 08 02              a1 = u64 [sp + 0x208]
143364: 28 4f ff                 jump @10561
      :                          @10566 [@dyn 951]
143367: 3a 02 58 01 03           t0 = u64 [0x30158]
143372: 49 21 10 01              u64 [sp + 272] = 0
143376: 49 21 18 01 08           u64 [sp + 280] = 0x8
143381: 49 21 20 01              u64 [sp + 288] = 0
143385: 3a 03 a8 01 03           t1 = u64 [0x301a8]
143390: 33 06 0a                 s1 = 0xa
143393: 33 0c 70 02 03           a5 = 0x30270
143398: 33 04 64                 t2 = 0x64
143401: 7b 12 50                 u64 [sp + 0x50] = t0
143404: 7b 13 40                 u64 [sp + 0x40] = t1
143407: 28 46                    jump @10569
      :                          @10567
143409: ca 29 07                 a0 = a2 * t0
143412: 98 79 02                 a2 = a0 >> 0x2
143415: d6 39 09                 a2 = a2 mulhu t1
143418: 98 99 02                 a2 = a2 >> 0x2
143421: ca 49 09                 a2 = a2 * t2
143424: c9 97 07                 a0 = a0 - a2
143427: ca 2a 09                 a2 = a3 * t0
143430: 98 9a 02                 a3 = a2 >> 0x2
143433: d6 3a 0a                 a3 = a3 mulhu t1
143436: 98 aa 02                 a3 = a3 >> 0x2
143439: 82 1b 18 01              a4 = u64 [sp + 0x118]
143443: ca 4a 0a                 a3 = a3 * t2
143446: c9 a9 09                 a2 = a2 - a3
143449: 97 8a 04                 a3 = a1 << 0x4
143452: c8 ba 0a                 a3 = a3 + a4
143455: 7b a7                    u64 [a3] = a0
143457: 7b a9 08                 u64 [a3 + 0x8] = a2
143460: 95 89 01                 a2 = a1 + 0x1
143463: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
143466: 7b 19 20 01              u64 [sp + 0x120] = a2
143470: 52 06 07                 jump @10569 if s1 != 0
      :                          @10568
143473: 28 e7 9f 00              jump @12527
      :                          @10569
143477: 3a 07 70 02 03           a0 = u64 [0x30270]
143482: 97 78 0d                 a1 = a0 << 0xd
143485: d3 87 07                 a0 = a0 ^ a1
143488: 98 78 07                 a1 = a0 >> 0x7
143491: d3 87 07                 a0 = a0 ^ a1
143494: 97 78 11                 a1 = a0 << 0x11
143497: d3 78 09                 a2 = a1 ^ a0
143500: 3e 09 70 02 03           u64 [0x30270] = a2
143505: 3a 07 70 02 03           a0 = u64 [0x30270]
143510: 97 78 0d                 a1 = a0 << 0xd
143513: d3 87 07                 a0 = a0 ^ a1
143516: 98 78 07                 a1 = a0 >> 0x7
143519: d3 87 07                 a0 = a0 ^ a1
143522: 97 78 11                 a1 = a0 << 0x11
143525: d3 78 0a                 a3 = a1 ^ a0
143528: 3e 0a 70 02 03           u64 [0x30270] = a3
143533: 82 18 20 01              a1 = u64 [sp + 0x120]
143537: 82 17 10 01              a0 = u64 [sp + 0x110]
143541: ab 78 7c ff              jump @10567 if a1 != a0
      :                          @10570
143545: 95 17 10 01              a0 = sp + 0x110
143549: 7b 19 60                 u64 [sp + 0x60] = a2
143552: 7b 1a 58                 u64 [sp + 0x58] = a3
143555: 50 20 70 07 45 23 fe     ra = 1904, jump @1605
      :                          @10571 [@dyn 952]
143562: 82 1a 58                 a3 = u64 [sp + 0x58]
143565: 82 19 60                 a2 = u64 [sp + 0x60]
143568: 33 04 64                 t2 = 0x64
143571: 33 0c 70 02 03           a5 = 0x30270
143576: 82 13 40                 t1 = u64 [sp + 0x40]
143579: 82 12 50                 t0 = u64 [sp + 0x50]
143582: 82 18 20 01              a1 = u64 [sp + 0x120]
143586: 28 4f ff                 jump @10567
      :                          @10572 [@dyn 953]
143589: 3a 02 58 01 03           t0 = u64 [0x30158]
143594: 49 21 a0 01              u64 [sp + 416] = 0
143598: 49 21 a8 01 08           u64 [sp + 424] = 0x8
143603: 49 21 b0 01              u64 [sp + 432] = 0
143607: 49 21 b8 01              u64 [sp + 440] = 0
143611: 49 21 c0 01 08           u64 [sp + 448] = 0x8
143616: 49 21 c8 01              u64 [sp + 456] = 0
143620: 3a 03 68 01 03           t1 = u64 [0x30168]
143625: 33 0c 05                 a5 = 0x5
143628: 33 04 70 02 03           t2 = 0x30270
143633: 33 00 32                 ra = 0x32
143636: 7b 12 58                 u64 [sp + 0x58] = t0
143639: 7b 13 50                 u64 [sp + 0x50] = t1
143642: 28 49                    jump @10575
      :                          @10573
143644: 82 1c 60                 a5 = u64 [sp + 0x60]
143647: ca 29 07                 a0 = a2 * t0
143650: 98 79 01                 a2 = a0 >> 0x1
143653: d6 39 09                 a2 = a2 mulhu t1
143656: 98 99 04                 a2 = a2 >> 0x4
143659: ca 09 09                 a2 = a2 * ra
143662: c9 97 07                 a0 = a0 - a2
143665: ca 26 09                 a2 = s1 * t0
143668: 98 9a 01                 a3 = a2 >> 0x1
143671: d6 3a 0a                 a3 = a3 mulhu t1
143674: 98 aa 04                 a3 = a3 >> 0x4
143677: 82 1b c0 01              a4 = u64 [sp + 0x1c0]
143681: ca 0a 0a                 a3 = a3 * ra
143684: c9 a9 09                 a2 = a2 - a3
143687: 97 8a 04                 a3 = a1 << 0x4
143690: c8 ba 0a                 a3 = a3 + a4
143693: 7b a7                    u64 [a3] = a0
143695: 7b a9 08                 u64 [a3 + 0x8] = a2
143698: 95 86 01                 s1 = a1 + 0x1
143701: 83 cc ff                 i32 a5 = a5 + 0xffffffffffffffff
143704: 7b 16 c8 01              u64 [sp + 0x1c8] = s1
143708: 52 0c 07                 jump @10575 if a5 != 0
      :                          @10574
143711: 28 4d a0 00              jump @12563
      :                          @10575
143715: 3a 07 70 02 03           a0 = u64 [0x30270]
143720: 97 78 0d                 a1 = a0 << 0xd
143723: d3 87 07                 a0 = a0 ^ a1
143726: 98 78 07                 a1 = a0 >> 0x7
143729: d3 87 07                 a0 = a0 ^ a1
143732: 97 78 11                 a1 = a0 << 0x11
143735: d3 78 09                 a2 = a1 ^ a0
143738: 3e 09 70 02 03           u64 [0x30270] = a2
143743: 3a 07 70 02 03           a0 = u64 [0x30270]
143748: 97 78 0d                 a1 = a0 << 0xd
143751: d3 87 07                 a0 = a0 ^ a1
143754: 98 78 07                 a1 = a0 >> 0x7
143757: d3 87 07                 a0 = a0 ^ a1
143760: 97 76 11                 s1 = a0 << 0x11
143763: d3 76 06                 s1 = s1 ^ a0
143766: 3e 06 70 02 03           u64 [0x30270] = s1
143771: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
143775: 82 17 a0 01              a0 = u64 [sp + 0x1a0]
143779: 7b 1c 60                 u64 [sp + 0x60] = a5
143782: ab 78 27                 jump @10578 if a1 != a0
      :                          @10576
143785: 95 17 a0 01              a0 = sp + 0x1a0
143789: 7b 19 40                 u64 [sp + 0x40] = a2
143792: 50 20 74 07 58 22 fe     ra = 1908, jump @1605
      :                          @10577 [@dyn 954]
143799: 82 19 40                 a2 = u64 [sp + 0x40]
143802: 33 00 32                 ra = 0x32
143805: 33 04 70 02 03           t2 = 0x30270
143810: 82 13 50                 t1 = u64 [sp + 0x50]
143813: 82 12 58                 t0 = u64 [sp + 0x58]
143816: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
143820: 01                       fallthrough
      :                          @10578
143821: ca 29 07                 a0 = a2 * t0
143824: 98 79 01                 a2 = a0 >> 0x1
143827: d6 39 09                 a2 = a2 mulhu t1
143830: 98 99 04                 a2 = a2 >> 0x4
143833: ca 09 09                 a2 = a2 * ra
143836: c9 97 07                 a0 = a0 - a2
143839: ca 26 09                 a2 = s1 * t0
143842: 98 9a 01                 a3 = a2 >> 0x1
143845: d6 3a 0a                 a3 = a3 mulhu t1
143848: 98 aa 04                 a3 = a3 >> 0x4
143851: 82 1b a8 01              a4 = u64 [sp + 0x1a8]
143855: ca 0a 0a                 a3 = a3 * ra
143858: c9 a9 09                 a2 = a2 - a3
143861: 97 8a 04                 a3 = a1 << 0x4
143864: c8 ba 0a                 a3 = a3 + a4
143867: 7b a7                    u64 [a3] = a0
143869: 7b a9 08                 u64 [a3 + 0x8] = a2
143872: 95 88 01                 a1 = a1 + 0x1
143875: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
143879: 3a 07 70 02 03           a0 = u64 [0x30270]
143884: 97 78 0d                 a1 = a0 << 0xd
143887: d3 87 07                 a0 = a0 ^ a1
143890: 98 78 07                 a1 = a0 >> 0x7
143893: d3 87 07                 a0 = a0 ^ a1
143896: 97 78 11                 a1 = a0 << 0x11
143899: d3 78 09                 a2 = a1 ^ a0
143902: 3e 09 70 02 03           u64 [0x30270] = a2
143907: 3a 07 70 02 03           a0 = u64 [0x30270]
143912: 97 78 0d                 a1 = a0 << 0xd
143915: d3 87 07                 a0 = a0 ^ a1
143918: 98 78 07                 a1 = a0 >> 0x7
143921: d3 87 07                 a0 = a0 ^ a1
143924: 97 76 11                 s1 = a0 << 0x11
143927: d3 76 06                 s1 = s1 ^ a0
143930: 3e 06 70 02 03           u64 [0x30270] = s1
143935: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
143939: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
143943: ab 78 d5 fe              jump @10573 if a1 != a0
      :                          @10579
143947: 95 17 b8 01              a0 = sp + 0x1b8
143951: 7b 19 40                 u64 [sp + 0x40] = a2
143954: 50 20 76 07 b6 21 fe     ra = 1910, jump @1605
      :                          @10580 [@dyn 955]
143961: 82 19 40                 a2 = u64 [sp + 0x40]
143964: 33 00 32                 ra = 0x32
143967: 33 04 70 02 03           t2 = 0x30270
143972: 82 13 50                 t1 = u64 [sp + 0x50]
143975: 82 12 58                 t0 = u64 [sp + 0x58]
143978: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
143982: 28 ae fe                 jump @10573
      :                          @10581 [@dyn 956]
143985: 3a 02 58 01 03           t0 = u64 [0x30158]
143990: 49 21 10 01              u64 [sp + 272] = 0
143994: 49 21 18 01 08           u64 [sp + 280] = 0x8
143999: 49 21 20 01              u64 [sp + 288] = 0
144003: 3a 03 a8 01 03           t1 = u64 [0x301a8]
144008: 33 06 0a                 s1 = 0xa
144011: 33 0c 70 02 03           a5 = 0x30270
144016: 33 04 64                 t2 = 0x64
144019: 7b 12 50                 u64 [sp + 0x50] = t0
144022: 7b 13 40                 u64 [sp + 0x40] = t1
144025: 28 46                    jump @10584
      :                          @10582
144027: ca 29 07                 a0 = a2 * t0
144030: 98 79 02                 a2 = a0 >> 0x2
144033: d6 39 09                 a2 = a2 mulhu t1
144036: 98 99 02                 a2 = a2 >> 0x2
144039: ca 49 09                 a2 = a2 * t2
144042: c9 97 07                 a0 = a0 - a2
144045: ca 2a 09                 a2 = a3 * t0
144048: 98 9a 02                 a3 = a2 >> 0x2
144051: d6 3a 0a                 a3 = a3 mulhu t1
144054: 98 aa 02                 a3 = a3 >> 0x2
144057: 82 1b 18 01              a4 = u64 [sp + 0x118]
144061: ca 4a 0a                 a3 = a3 * t2
144064: c9 a9 09                 a2 = a2 - a3
144067: 97 8a 04                 a3 = a1 << 0x4
144070: c8 ba 0a                 a3 = a3 + a4
144073: 7b a7                    u64 [a3] = a0
144075: 7b a9 08                 u64 [a3 + 0x8] = a2
144078: 95 89 01                 a2 = a1 + 0x1
144081: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
144084: 7b 19 20 01              u64 [sp + 0x120] = a2
144088: 52 06 07                 jump @10584 if s1 != 0
      :                          @10583
144091: 28 b1 a0 00              jump @12611
      :                          @10584
144095: 3a 07 70 02 03           a0 = u64 [0x30270]
144100: 97 78 0d                 a1 = a0 << 0xd
144103: d3 87 07                 a0 = a0 ^ a1
144106: 98 78 07                 a1 = a0 >> 0x7
144109: d3 87 07                 a0 = a0 ^ a1
144112: 97 78 11                 a1 = a0 << 0x11
144115: d3 78 09                 a2 = a1 ^ a0
144118: 3e 09 70 02 03           u64 [0x30270] = a2
144123: 3a 07 70 02 03           a0 = u64 [0x30270]
144128: 97 78 0d                 a1 = a0 << 0xd
144131: d3 87 07                 a0 = a0 ^ a1
144134: 98 78 07                 a1 = a0 >> 0x7
144137: d3 87 07                 a0 = a0 ^ a1
144140: 97 78 11                 a1 = a0 << 0x11
144143: d3 78 0a                 a3 = a1 ^ a0
144146: 3e 0a 70 02 03           u64 [0x30270] = a3
144151: 82 18 20 01              a1 = u64 [sp + 0x120]
144155: 82 17 10 01              a0 = u64 [sp + 0x110]
144159: ab 78 7c ff              jump @10582 if a1 != a0
      :                          @10585
144163: 95 17 10 01              a0 = sp + 0x110
144167: 7b 19 60                 u64 [sp + 0x60] = a2
144170: 7b 1a 58                 u64 [sp + 0x58] = a3
144173: 50 20 7a 07 db 20 fe     ra = 1914, jump @1605
      :                          @10586 [@dyn 957]
144180: 82 1a 58                 a3 = u64 [sp + 0x58]
144183: 82 19 60                 a2 = u64 [sp + 0x60]
144186: 33 04 64                 t2 = 0x64
144189: 33 0c 70 02 03           a5 = 0x30270
144194: 82 13 40                 t1 = u64 [sp + 0x40]
144197: 82 12 50                 t0 = u64 [sp + 0x50]
144200: 82 18 20 01              a1 = u64 [sp + 0x120]
144204: 28 4f ff                 jump @10582
      :                          @10587 [@dyn 958]
144207: 3a 08 70 02 03           a1 = u64 [0x30270]
144212: 97 89 0d                 a2 = a1 << 0xd
144215: d3 98 08                 a1 = a1 ^ a2
144218: 98 89 07                 a2 = a1 >> 0x7
144221: d3 98 08                 a1 = a1 ^ a2
144224: 97 89 11                 a2 = a1 << 0x11
144227: d3 89 09                 a2 = a2 ^ a1
144230: 3a 08 58 01 03           a1 = u64 [0x30158]
144235: 3e 09 70 02 03           u64 [0x30270] = a2
144240: 3a 0a 70 02 03           a3 = u64 [0x30270]
144245: ca 89 0b                 a4 = a2 * a1
144248: 97 a9 0d                 a2 = a3 << 0xd
144251: d3 a9 09                 a2 = a2 ^ a3
144254: 98 9a 07                 a3 = a2 >> 0x7
144257: d3 a9 09                 a2 = a2 ^ a3
144260: 97 9a 11                 a3 = a2 << 0x11
144263: d3 9a 0a                 a3 = a3 ^ a2
144266: 3a 09 e0 01 03           a2 = u64 [0x301e0]
144271: ca 8a 0c                 a5 = a3 * a1
144274: 3e 0a 70 02 03           u64 [0x30270] = a3
144279: d5 9b 0a                 a3 = a4 mulh a2
144282: 98 a6 3f                 s1 = a3 >> 0x3f
144285: 99 aa 02                 a3 = a3 >>a 0x2
144288: c8 a6 06                 s1 = s1 + a3
144291: 96 66 0a                 s1 = s1 * 0xa
144294: c9 6b 02                 t0 = a4 - s1
144297: d5 9c 06                 s1 = a5 mulh a2
144300: 98 6b 3f                 a4 = s1 >> 0x3f
144303: 99 66 02                 s1 = s1 >>a 0x2
144306: 3a 07 70 02 03           a0 = u64 [0x30270]
144311: c8 6b 0b                 a4 = a4 + s1
144314: 96 bb 0a                 a4 = a4 * 0xa
144317: 97 7a 0d                 a3 = a0 << 0xd
144320: d3 a7 07                 a0 = a0 ^ a3
144323: 98 7a 07                 a3 = a0 >> 0x7
144326: d3 a7 07                 a0 = a0 ^ a3
144329: 97 7a 11                 a3 = a0 << 0x11
144332: d3 a7 07                 a0 = a0 ^ a3
144335: 3e 07 70 02 03           u64 [0x30270] = a0
144340: 3a 0a 70 02 03           a3 = u64 [0x30270]
144345: c9 bc 0c                 a5 = a5 - a4
144348: ca 87 07                 a0 = a0 * a1
144351: 97 ab 0d                 a4 = a3 << 0xd
144354: d3 ba 0a                 a3 = a3 ^ a4
144357: 98 ab 07                 a4 = a3 >> 0x7
144360: d3 ba 0a                 a3 = a3 ^ a4
144363: 97 ab 11                 a4 = a3 << 0x11
144366: d3 ba 0a                 a3 = a3 ^ a4
144369: ca 8a 0b                 a4 = a3 * a1
144372: 3e 0a 70 02 03           u64 [0x30270] = a3
144377: d5 97 0a                 a3 = a0 mulh a2
144380: 98 a6 3f                 s1 = a3 >> 0x3f
144383: 99 aa 02                 a3 = a3 >>a 0x2
144386: c8 6a 0a                 a3 = a3 + s1
144389: 96 aa 0a                 a3 = a3 * 0xa
144392: c9 a7 07                 a0 = a0 - a3
144395: d5 9b 0a                 a3 = a4 mulh a2
144398: 98 a6 3f                 s1 = a3 >> 0x3f
144401: 99 aa 02                 a3 = a3 >>a 0x2
144404: c8 6a 0a                 a3 = a3 + s1
144407: 96 aa 0a                 a3 = a3 * 0xa
144410: c9 ab 0b                 a4 = a4 - a3
144413: 7b 1c 18 01              u64 [sp + 0x118] = a5
144417: 7b 12 10 01              u64 [sp + 0x110] = t0
144421: 7b 17 20 01              u64 [sp + 0x120] = a0
144425: 7b 1b 28 01              u64 [sp + 0x128] = a4
144429: 3a 07 70 02 03           a0 = u64 [0x30270]
144434: 97 7a 0d                 a3 = a0 << 0xd
144437: d3 a7 07                 a0 = a0 ^ a3
144440: 98 7a 07                 a3 = a0 >> 0x7
144443: d3 a7 07                 a0 = a0 ^ a3
144446: 97 7a 11                 a3 = a0 << 0x11
144449: d3 a7 07                 a0 = a0 ^ a3
144452: 3e 07 70 02 03           u64 [0x30270] = a0
144457: 3a 0a 70 02 03           a3 = u64 [0x30270]
144462: ca 87 07                 a0 = a0 * a1
144465: 97 ab 0d                 a4 = a3 << 0xd
144468: d3 ba 0a                 a3 = a3 ^ a4
144471: 98 ab 07                 a4 = a3 >> 0x7
144474: d3 ba 0a                 a3 = a3 ^ a4
144477: 97 ab 11                 a4 = a3 << 0x11
144480: d3 ba 0a                 a3 = a3 ^ a4
144483: ca 8a 0c                 a5 = a3 * a1
144486: 3e 0a 70 02 03           u64 [0x30270] = a3
144491: d5 97 0a                 a3 = a0 mulh a2
144494: 98 ab 3f                 a4 = a3 >> 0x3f
144497: 99 aa 02                 a3 = a3 >>a 0x2
144500: c8 ba 0a                 a3 = a3 + a4
144503: 96 aa 0a                 a3 = a3 * 0xa
144506: c9 a7 0b                 a4 = a0 - a3
144509: d5 9c 07                 a0 = a5 mulh a2
144512: 98 7a 3f                 a3 = a0 >> 0x3f
144515: 99 77 02                 a0 = a0 >>a 0x2
144518: 3a 06 70 02 03           s1 = u64 [0x30270]
144523: c8 a7 07                 a0 = a0 + a3
144526: 96 77 0a                 a0 = a0 * 0xa
144529: 97 6a 0d                 a3 = s1 << 0xd
144532: d3 a6 06                 s1 = s1 ^ a3
144535: 98 6a 07                 a3 = s1 >> 0x7
144538: d3 a6 06                 s1 = s1 ^ a3
144541: 97 6a 11                 a3 = s1 << 0x11
144544: d3 6a 0a                 a3 = a3 ^ s1
144547: 3e 0a 70 02 03           u64 [0x30270] = a3
144552: 3a 06 70 02 03           s1 = u64 [0x30270]
144557: c9 7c 0c                 a5 = a5 - a0
144560: ca 8a 07                 a0 = a3 * a1
144563: 97 6a 0d                 a3 = s1 << 0xd
144566: d3 a6 06                 s1 = s1 ^ a3
144569: 98 6a 07                 a3 = s1 >> 0x7
144572: d3 a6 06                 s1 = s1 ^ a3
144575: 97 6a 11                 a3 = s1 << 0x11
144578: d3 6a 0a                 a3 = a3 ^ s1
144581: ca 8a 08                 a1 = a3 * a1
144584: 3e 0a 70 02 03           u64 [0x30270] = a3
144589: d5 97 0a                 a3 = a0 mulh a2
144592: 98 a6 3f                 s1 = a3 >> 0x3f
144595: 99 aa 02                 a3 = a3 >>a 0x2
144598: c8 6a 0a                 a3 = a3 + s1
144601: 96 aa 0a                 a3 = a3 * 0xa
144604: c9 a7 07                 a0 = a0 - a3
144607: d5 98 09                 a2 = a1 mulh a2
144610: 98 9a 3f                 a3 = a2 >> 0x3f
144613: 99 99 02                 a2 = a2 >>a 0x2
144616: c8 a9 09                 a2 = a2 + a3
144619: 96 99 0a                 a2 = a2 * 0xa
144622: c9 98 08                 a1 = a1 - a2
144625: 7b 1c d8 01              u64 [sp + 0x1d8] = a5
144629: 7b 1b d0 01              u64 [sp + 0x1d0] = a4
144633: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
144637: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
144641: 95 17 f8 01              a0 = sp + 0x1f8
144645: 95 18 10 01              a1 = sp + 0x110
144649: 95 19 d0 01              a2 = sp + 0x1d0
144653: 95 16 d0 01              s1 = sp + 0x1d0
144657: 33 00 7e 07              ra = 0x77e
144661: 95 11 e0                 sp = sp + 0xffffffffffffffe0
144664: 7b 10 18                 u64 [sp + 0x18] = ra
144667: 7b 15 10                 u64 [sp + 0x10] = s0
144670: 7b 16 08                 u64 [sp + 0x8] = s1
144673: 82 82                    t0 = u64 [a1]
144675: 82 8b 18                 a4 = u64 [a1 + 0x18]
144678: 82 95                    s0 = u64 [a2]
144680: 82 9a 18                 a3 = u64 [a2 + 0x18]
144683: c8 2b 03                 t1 = a4 + t0
144686: 82 84 10                 t2 = u64 [a1 + 0x10]
144689: 82 90 08                 ra = u64 [a2 + 0x8]
144692: c8 5a 06                 s1 = a3 + s0
144695: ca 36 03                 t1 = s1 * t1
144698: c9 24 06                 s1 = t2 - t0
144701: c8 50 0c                 a5 = ra + s0
144704: ca 6c 0c                 a5 = a5 * s1
144707: c8 b4 04                 t2 = t2 + a4
144710: ca 54 06                 s1 = t2 * s0
144713: 82 99 10                 a2 = u64 [a2 + 0x10]
144716: c9 a0 04                 t2 = ra - a3
144719: 82 88 08                 a1 = u64 [a1 + 0x8]
144722: ca 24 04                 t2 = t2 * t0
144725: c9 59 05                 s0 = a2 - s0
144728: ca b5 05                 s0 = s0 * a4
144731: c8 82 02                 t0 = t0 + a1
144734: c9 b8 08                 a1 = a1 - a4
144737: ca a2 0b                 a4 = t0 * a3
144740: c8 a9 09                 a2 = a2 + a3
144743: ca 98 08                 a1 = a1 * a2
144746: c8 35 09                 a2 = s0 + t1
144749: c9 8b 08                 a1 = a4 - a1
144752: c9 89 09                 a2 = a2 - a1
144755: c8 65 05                 s0 = s0 + s1
144758: c9 63 08                 a1 = t1 - s1
144761: c8 4b 0b                 a4 = a4 + t2
144764: c8 4c 0c                 a5 = a5 + t2
144767: c8 c8 08                 a1 = a1 + a5
144770: 7b 7b 08                 u64 [a0 + 0x8] = a4
144773: 7b 79                    u64 [a0] = a2
144775: 7b 75 10                 u64 [a0 + 0x10] = s0
144778: 7b 78 18                 u64 [a0 + 0x18] = a1
144781: 82 10 18                 ra = u64 [sp + 0x18]
144784: 82 15 10                 s0 = u64 [sp + 0x10]
144787: 82 16 08                 s1 = u64 [sp + 0x8]
144790: 95 11 20                 sp = sp + 0x20
144793: 32 00                    ret
      :                          @10588 [@dyn 959]
144795: 95 17 10 01              a0 = sp + 0x110
144799: 7b 17 80 02              u64 [sp + 0x280] = a0
144803: 33 07 e2 00              a0 = 0xe2
144807: 7b 17 88 02              u64 [sp + 0x288] = a0
144811: 7b 16 90 02              u64 [sp + 0x290] = s1
144815: 7b 17 98 02              u64 [sp + 0x298] = a0
144819: 95 18 f8 01              a1 = sp + 0x1f8
144823: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
144827: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
144831: 33 07 a8 16 01           a0 = 0x116a8
144836: 7b 17 28 02              u64 [sp + 0x228] = a0
144840: 49 21 30 02 03           u64 [sp + 560] = 0x3
144845: 49 21 48 02              u64 [sp + 584] = 0
144849: 95 18 80 02              a1 = sp + 0x280
144853: 7b 18 38 02              u64 [sp + 0x238] = a1
144857: 49 21 40 02 03           u64 [sp + 576] = 0x3
144862: 95 17 b8 01              a0 = sp + 0x1b8
144866: 95 18 28 02              a1 = sp + 0x228
144870: 50 20 80 07 61 19 fe     ra = 1920, jump @1491
      :                          @10589 [@dyn 960]
144877: 82 16 c0 01              s1 = u64 [sp + 0x1c0]
144881: 82 1b c8 01              a4 = u64 [sp + 0x1c8]
144885: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
144889: 7b 17 60                 u64 [sp + 0x60] = a0
144892: 33 07 02                 a0 = 0x2
144895: 33 08                    a1 = 0
144897: 33 09                    a2 = 0
144899: 64 6a                    a3 = s1
144901: 33 00 82 07              ra = 0x782
144905: 0a 64                    ecalli 100 // 'log'
144907: 01                       fallthrough
      :                          @10590 [@dyn 961]
144908: 82 1c 60                 a5 = u64 [sp + 0x60]
144911: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
144916: 55 38 00 00 f0 0a        jump @10592 if a1 >=u 4293918720
      :                          @10591
144922: 28 d1 ab 00              jump @12862
      :                          @10592
144926: 33 07 b0 02 03           a0 = 0x302b0
144931: 95 77 00 00 10           a0 = a0 + 0x100000
144936: 01                       fallthrough
      :                          @10593
144937: 82 78                    a1 = u64 [a0]
144939: c9 87 09                 a2 = a0 - a1
144942: aa 69 07                 jump @10595 if a2 == s1
      :                          @10594
144945: 28 ba ab 00              jump @12862
      :                          @10595
144949: c9 c8 09                 a2 = a1 - a5
144952: 01                       fallthrough
      :                          @10596
144953: 82 7a                    a3 = u64 [a0]
144955: ab 8a ee                 jump @10593 if a3 != a1
      :                          @10597
144958: 7b 79                    u64 [a0] = a2
144960: 33 0b                    a4 = 0
144962: 01                       fallthrough
      :                          @10598
144963: ab 8a e6                 jump @10593 if a3 != a1
      :                          @10599
144966: 28 a5 ab 00              jump @12862
      :                          @10600 [@dyn 962]
144970: 3a 06 58 01 03           s1 = u64 [0x30158]
144975: 95 17 80 02              a0 = sp + 0x280
144979: 33 09 04                 a2 = 0x4
144982: 33 08                    a1 = 0
144984: 50 20 86 07 9a 2d fe     ra = 1926, jump @1877
      :                          @10601 [@dyn 963]
144991: 95 17 10 01              a0 = sp + 0x110
144995: 95 18 80 02              a1 = sp + 0x280
144999: 33 09 04                 a2 = 0x4
145002: 50 20 88 07 b2 27 fe     ra = 1928, jump @1783
      :                          @10602 [@dyn 964]
145009: 33 07                    a0 = 0
145011: 33 02 10                 t0 = 0x10
145014: 33 04 70 02 03           t2 = 0x30270
145019: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
145029: 33 00 14                 ra = 0x14
145032: 33 03 04                 t1 = 0x4
145035: 01                       fallthrough
      :                          @10603
145036: 3a 08 70 02 03           a1 = u64 [0x30270]
145041: 97 89 0d                 a2 = a1 << 0xd
145044: d3 98 08                 a1 = a1 ^ a2
145047: 98 89 07                 a2 = a1 >> 0x7
145050: d3 98 08                 a1 = a1 ^ a2
145053: 97 8c 11                 a5 = a1 << 0x11
145056: d3 8c 0c                 a5 = a5 ^ a1
145059: 3e 0c 70 02 03           u64 [0x30270] = a5
145064: 82 18 20 01              a1 = u64 [sp + 0x120]
145068: ac 87 07                 jump @10605 if a0 <u a1
      :                          @10604
145071: 28 98 bc 00              jump @13215
      :                          @10605
145075: 82 18 18 01              a1 = u64 [sp + 0x118]
145079: c8 28 08                 a1 = a1 + t0
145082: 82 89                    a2 = u64 [a1]
145084: 52 09 07                 jump @10607 if a2 != 0
      :                          @10606
145087: 28 84 bc 00              jump @13213
      :                          @10607
145091: ca 6c 09                 a2 = a5 * s1
145094: d6 b9 0c                 a5 = a2 mulhu a4
145097: 98 cc 04                 a5 = a5 >> 0x4
145100: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
145103: ca 0c 0c                 a5 = a5 * ra
145106: c9 c9 09                 a2 = a2 - a5
145109: 95 99 f6                 a2 = a2 + 0xfffffffffffffff6
145112: 7b 89                    u64 [a1] = a2
145114: 3a 08 70 02 03           a1 = u64 [0x30270]
145119: 97 89 0d                 a2 = a1 << 0xd
145122: d3 98 08                 a1 = a1 ^ a2
145125: 98 89 07                 a2 = a1 >> 0x7
145128: d3 98 08                 a1 = a1 ^ a2
145131: 97 8c 11                 a5 = a1 << 0x11
145134: d3 8c 0c                 a5 = a5 ^ a1
145137: 3e 0c 70 02 03           u64 [0x30270] = a5
145142: 82 18 20 01              a1 = u64 [sp + 0x120]
145146: ac 87 07                 jump @10609 if a0 <u a1
      :                          @10608
145149: 28 4a bc 00              jump @13215
      :                          @10609
145153: 64 6a                    a3 = s1
145155: 82 19 18 01              a2 = u64 [sp + 0x118]
145159: c8 29 09                 a2 = a2 + t0
145162: 82 98                    a1 = u64 [a2]
145164: 55 18 02 08              jump @10611 if a1 >=u 2
      :                          @10610
145168: 28 6f bb 00              jump @13195
      :                          @10611
145172: ca ac 08                 a1 = a5 * a3
145175: d6 b8 0c                 a5 = a1 mulhu a4
145178: 98 cc 04                 a5 = a5 >> 0x4
145181: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145184: ca 0c 0c                 a5 = a5 * ra
145187: c9 c8 08                 a1 = a1 - a5
145190: 95 88 f6                 a1 = a1 + 0xfffffffffffffff6
145193: 7b 98 08                 u64 [a2 + 0x8] = a1
145196: 3a 08 70 02 03           a1 = u64 [0x30270]
145201: 97 89 0d                 a2 = a1 << 0xd
145204: d3 98 08                 a1 = a1 ^ a2
145207: 98 89 07                 a2 = a1 >> 0x7
145210: d3 98 08                 a1 = a1 ^ a2
145213: 97 8c 11                 a5 = a1 << 0x11
145216: d3 8c 0c                 a5 = a5 ^ a1
145219: 3e 0c 70 02 03           u64 [0x30270] = a5
145224: 82 18 20 01              a1 = u64 [sp + 0x120]
145228: ac 87 07                 jump @10613 if a0 <u a1
      :                          @10612
145231: 28 f8 bb 00              jump @13215
      :                          @10613
145235: 64 a6                    s1 = a3
145237: 82 19 18 01              a2 = u64 [sp + 0x118]
145241: c8 29 09                 a2 = a2 + t0
145244: 82 98                    a1 = u64 [a2]
145246: 55 18 03 08              jump @10615 if a1 >=u 3
      :                          @10614
145250: 28 1f bb 00              jump @13197
      :                          @10615
145254: ca 6c 08                 a1 = a5 * s1
145257: d6 b8 0c                 a5 = a1 mulhu a4
145260: 98 cc 04                 a5 = a5 >> 0x4
145263: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145266: ca 0c 0c                 a5 = a5 * ra
145269: c9 c8 08                 a1 = a1 - a5
145272: 95 88 f6                 a1 = a1 + 0xfffffffffffffff6
145275: 7b 98 10                 u64 [a2 + 0x10] = a1
145278: 3a 08 70 02 03           a1 = u64 [0x30270]
145283: 97 89 0d                 a2 = a1 << 0xd
145286: d3 98 08                 a1 = a1 ^ a2
145289: 98 89 07                 a2 = a1 >> 0x7
145292: d3 98 08                 a1 = a1 ^ a2
145295: 97 8c 11                 a5 = a1 << 0x11
145298: d3 8c 0c                 a5 = a5 ^ a1
145301: 3e 0c 70 02 03           u64 [0x30270] = a5
145306: 82 18 20 01              a1 = u64 [sp + 0x120]
145310: ac 87 07                 jump @10617 if a0 <u a1
      :                          @10616
145313: 28 a6 bb 00              jump @13215
      :                          @10617
145317: 82 19 18 01              a2 = u64 [sp + 0x118]
145321: c8 29 09                 a2 = a2 + t0
145324: 82 98                    a1 = u64 [a2]
145326: ae 38 07                 jump @10619 if a1 >=u t1
      :                          @10618
145329: 28 cf ba 00              jump @13196
      :                          @10619
145333: ca 6c 08                 a1 = a5 * s1
145336: d6 b8 0c                 a5 = a1 mulhu a4
145339: 98 cc 04                 a5 = a5 >> 0x4
145342: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145345: ca 0c 0c                 a5 = a5 * ra
145348: c9 c8 08                 a1 = a1 - a5
145351: 95 88 f6                 a1 = a1 + 0xfffffffffffffff6
145354: 7b 98 18                 u64 [a2 + 0x18] = a1
145357: 95 22 18                 t0 = t0 + 0x18
145360: 95 77 01                 a0 = a0 + 0x1
145363: 52 12 70 b9 fe           jump @10603 if t0 != 112
      :                          @10620
145368: 95 17 d0 01              a0 = sp + 0x1d0
145372: 95 18 10 01              a1 = sp + 0x110
145376: 95 16 10 01              s1 = sp + 0x110
145380: 50 20 8a 07 b4 31 ff     ra = 1930, jump @7315
      :                          @10621 [@dyn 965]
145387: 7b 16 28 02              u64 [sp + 0x228] = s1
145391: 33 07 40 02              a0 = 0x240
145395: 7b 17 30 02              u64 [sp + 0x230] = a0
145399: 95 17 d0 01              a0 = sp + 0x1d0
145403: 7b 17 38 02              u64 [sp + 0x238] = a0
145407: 33 07 08 02              a0 = 0x208
145411: 7b 17 40 02              u64 [sp + 0x240] = a0
145415: 33 07 f8 16 01           a0 = 0x116f8
145420: 7b 17 80 02              u64 [sp + 0x280] = a0
145424: 49 21 88 02 02           u64 [sp + 648] = 0x2
145429: 49 21 a0 02              u64 [sp + 672] = 0
145433: 95 18 28 02              a1 = sp + 0x228
145437: 7b 18 90 02              u64 [sp + 0x290] = a1
145441: 49 21 98 02 02           u64 [sp + 664] = 0x2
145446: 95 17 f8 01              a0 = sp + 0x1f8
145450: 95 18 80 02              a1 = sp + 0x280
145454: 50 20 8c 07 19 17 fe     ra = 1932, jump @1491
      :                          @10622 [@dyn 966]
145461: 82 16 00 02              s1 = u64 [sp + 0x200]
145465: 82 1b 08 02              a4 = u64 [sp + 0x208]
145469: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
145473: 7b 17 60                 u64 [sp + 0x60] = a0
145476: 33 07 02                 a0 = 0x2
145479: 33 08                    a1 = 0
145481: 33 09                    a2 = 0
145483: 64 6a                    a3 = s1
145485: 33 00 8e 07              ra = 0x78e
145489: 0a 64                    ecalli 100 // 'log'
145491: 01                       fallthrough
      :                          @10623 [@dyn 967]
145492: 82 1c 60                 a5 = u64 [sp + 0x60]
145495: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
145500: 53 38 00 00 f0 27        jump @10629 if a1 <u 4293918720
      :                          @10624
145506: 33 07 b0 02 03           a0 = 0x302b0
145511: 95 77 00 00 10           a0 = a0 + 0x100000
145516: 01                       fallthrough
      :                          @10625
145517: 82 78                    a1 = u64 [a0]
145519: c9 87 09                 a2 = a0 - a1
145522: ab 69 11                 jump @10629 if a2 != s1
      :                          @10626
145525: c9 c8 09                 a2 = a1 - a5
145528: 01                       fallthrough
      :                          @10627
145529: 82 7a                    a3 = u64 [a0]
145531: ab 8a f2                 jump @10625 if a3 != a1
      :                          @10628
145534: 7b 79                    u64 [a0] = a2
145536: 33 0b                    a4 = 0
145538: 01                       fallthrough
      :                          @10629
145539: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
145543: 51 08 3c                 jump @10636 if a1 == 0
      :                          @10630
145546: 56 38 00 00 01 39        jump @10636 if a1 >u 65536
      :                          @10631
145552: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
145556: 97 88 04                 a1 = a1 << 0x4
145559: 33 09 b0 02 03           a2 = 0x302b0
145564: 95 99 00 00 10           a2 = a2 + 0x100000
145569: 01                       fallthrough
      :                          @10632
145570: 82 9a                    a3 = u64 [a2]
145572: c9 a9 0b                 a4 = a2 - a3
145575: ab 7b 1c                 jump @10636 if a4 != a0
      :                          @10633
145578: c9 8a 0b                 a4 = a3 - a1
145581: 01                       fallthrough
      :                          @10634
145582: 82 9c                    a5 = u64 [a2]
145584: ab ac f2                 jump @10632 if a5 != a3
      :                          @10635
145587: 7b 9b                    u64 [a2] = a4
145589: 33 06                    s1 = 0
145591: 95 17 10 01              a0 = sp + 0x110
145595: 33 00 90 07              ra = 0x790
145599: 28 9b d3 fd              jump @229
      :                          @10636
145603: 95 17 10 01              a0 = sp + 0x110
145607: 50 20 90 07 93 d3 fd     ra = 1936, jump @229
      :                          @10637 [@dyn 968]
145614: 28 1d a9 00              jump @12862
      :                          @10638 [@dyn 969]
145618: 3a 07 58 01 03           a0 = u64 [0x30158]
145623: 7b 17 60                 u64 [sp + 0x60] = a0
145626: 95 17 80 02              a0 = sp + 0x280
145630: 33 09 06                 a2 = 0x6
145633: 33 08                    a1 = 0
145635: 50 20 94 07 0f 2b fe     ra = 1940, jump @1877
      :                          @10639 [@dyn 970]
145642: 95 17 d0 01              a0 = sp + 0x1d0
145646: 95 18 80 02              a1 = sp + 0x280
145650: 33 09 05                 a2 = 0x5
145653: 50 20 96 07 27 25 fe     ra = 1942, jump @1783
      :                          @10640 [@dyn 971]
145660: 33 07                    a0 = 0
145662: 33 0b 10                 a4 = 0x10
145665: 33 0c 70 02 03           a5 = 0x30270
145670: 14 02 cd cc cc cc cc cc cc cc t0 = 0xcccccccccccccccd
145680: 33 04 0a                 t2 = 0xa
145683: 82 13 60                 t1 = u64 [sp + 0x60]
145686: 01                       fallthrough
      :                          @10641
145687: 3a 08 70 02 03           a1 = u64 [0x30270]
145692: 97 89 0d                 a2 = a1 << 0xd
145695: d3 98 08                 a1 = a1 ^ a2
145698: 98 89 07                 a2 = a1 >> 0x7
145701: d3 98 08                 a1 = a1 ^ a2
145704: 97 89 11                 a2 = a1 << 0x11
145707: d3 98 08                 a1 = a1 ^ a2
145710: 3e 08 70 02 03           u64 [0x30270] = a1
145715: 82 19 e0 01              a2 = u64 [sp + 0x1e0]
145719: ac 97 07                 jump @10643 if a0 <u a2
      :                          @10642
145722: 28 33 ba 00              jump @13251
      :                          @10643
145726: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
145730: c8 b9 09                 a2 = a2 + a4
145733: 82 9a                    a3 = u64 [a2]
145735: 52 0a 07                 jump @10645 if a3 != 0
      :                          @10644
145738: 28 f9 b9 00              jump @13213
      :                          @10645
145742: ca 38 08                 a1 = a1 * t1
145745: d6 28 0a                 a3 = a1 mulhu t0
145748: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145751: 98 aa 03                 a3 = a3 >> 0x3
145754: 96 aa 0a                 a3 = a3 * 0xa
145757: c9 a8 08                 a1 = a1 - a3
145760: 7b 98                    u64 [a2] = a1
145762: 3a 08 70 02 03           a1 = u64 [0x30270]
145767: 97 89 0d                 a2 = a1 << 0xd
145770: d3 98 08                 a1 = a1 ^ a2
145773: 98 89 07                 a2 = a1 >> 0x7
145776: d3 98 08                 a1 = a1 ^ a2
145779: 97 8a 11                 a3 = a1 << 0x11
145782: d3 8a 0a                 a3 = a3 ^ a1
145785: 3e 0a 70 02 03           u64 [0x30270] = a3
145790: 82 19 e0 01              a2 = u64 [sp + 0x1e0]
145794: ac 97 07                 jump @10647 if a0 <u a2
      :                          @10646
145797: 28 e8 b9 00              jump @13251
      :                          @10647
145801: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
145805: c8 b9 09                 a2 = a2 + a4
145808: 82 98                    a1 = u64 [a2]
145810: 55 18 02 08              jump @10649 if a1 >=u 2
      :                          @10648
145814: 28 e9 b8 00              jump @13195
      :                          @10649
145818: ca 3a 08                 a1 = a3 * t1
145821: d6 28 0a                 a3 = a1 mulhu t0
145824: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145827: 98 aa 03                 a3 = a3 >> 0x3
145830: 96 aa 0a                 a3 = a3 * 0xa
145833: c9 a8 08                 a1 = a1 - a3
145836: 7b 98 08                 u64 [a2 + 0x8] = a1
145839: 3a 08 70 02 03           a1 = u64 [0x30270]
145844: 97 89 0d                 a2 = a1 << 0xd
145847: d3 98 08                 a1 = a1 ^ a2
145850: 98 89 07                 a2 = a1 >> 0x7
145853: d3 98 08                 a1 = a1 ^ a2
145856: 97 8a 11                 a3 = a1 << 0x11
145859: d3 8a 0a                 a3 = a3 ^ a1
145862: 3e 0a 70 02 03           u64 [0x30270] = a3
145867: 82 19 e0 01              a2 = u64 [sp + 0x1e0]
145871: ac 97 07                 jump @10651 if a0 <u a2
      :                          @10650
145874: 28 9b b9 00              jump @13251
      :                          @10651
145878: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
145882: c8 b9 09                 a2 = a2 + a4
145885: 82 98                    a1 = u64 [a2]
145887: 55 18 03 08              jump @10653 if a1 >=u 3
      :                          @10652
145891: 28 9e b8 00              jump @13197
      :                          @10653
145895: ca 3a 08                 a1 = a3 * t1
145898: d6 28 0a                 a3 = a1 mulhu t0
145901: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145904: 98 aa 03                 a3 = a3 >> 0x3
145907: 96 aa 0a                 a3 = a3 * 0xa
145910: c9 a8 08                 a1 = a1 - a3
145913: 7b 98 10                 u64 [a2 + 0x10] = a1
145916: 3a 08 70 02 03           a1 = u64 [0x30270]
145921: 97 89 0d                 a2 = a1 << 0xd
145924: d3 98 08                 a1 = a1 ^ a2
145927: 98 89 07                 a2 = a1 >> 0x7
145930: d3 98 08                 a1 = a1 ^ a2
145933: 97 8a 11                 a3 = a1 << 0x11
145936: d3 8a 0a                 a3 = a3 ^ a1
145939: 3e 0a 70 02 03           u64 [0x30270] = a3
145944: 82 19 e0 01              a2 = u64 [sp + 0x1e0]
145948: ac 97 07                 jump @10655 if a0 <u a2
      :                          @10654
145951: 28 4e b9 00              jump @13251
      :                          @10655
145955: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
145959: c8 b9 09                 a2 = a2 + a4
145962: 82 98                    a1 = u64 [a2]
145964: 55 18 04 08              jump @10657 if a1 >=u 4
      :                          @10656
145968: 28 50 b8 00              jump @13196
      :                          @10657
145972: ca 3a 08                 a1 = a3 * t1
145975: d6 28 0a                 a3 = a1 mulhu t0
145978: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145981: 98 aa 03                 a3 = a3 >> 0x3
145984: 96 aa 0a                 a3 = a3 * 0xa
145987: c9 a8 08                 a1 = a1 - a3
145990: 7b 98 18                 u64 [a2 + 0x18] = a1
145993: 3a 08 70 02 03           a1 = u64 [0x30270]
145998: 97 89 0d                 a2 = a1 << 0xd
146001: d3 98 08                 a1 = a1 ^ a2
146004: 98 89 07                 a2 = a1 >> 0x7
146007: d3 98 08                 a1 = a1 ^ a2
146010: 97 8a 11                 a3 = a1 << 0x11
146013: d3 8a 0a                 a3 = a3 ^ a1
146016: 3e 0a 70 02 03           u64 [0x30270] = a3
146021: 82 19 e0 01              a2 = u64 [sp + 0x1e0]
146025: ac 97 07                 jump @10659 if a0 <u a2
      :                          @10658
146028: 28 01 b9 00              jump @13251
      :                          @10659
146032: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
146036: c8 b9 09                 a2 = a2 + a4
146039: 82 98                    a1 = u64 [a2]
146041: 55 18 05 08              jump @10661 if a1 >=u 5
      :                          @10660
146045: 28 cc b8 00              jump @13217
      :                          @10661
146049: ca 3a 08                 a1 = a3 * t1
146052: d6 28 0a                 a3 = a1 mulhu t0
146055: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
146058: 98 aa 03                 a3 = a3 >> 0x3
146061: 96 aa 0a                 a3 = a3 * 0xa
146064: c9 a8 08                 a1 = a1 - a3
146067: 7b 98 20                 u64 [a2 + 0x20] = a1
146070: 3a 08 70 02 03           a1 = u64 [0x30270]
146075: 97 89 0d                 a2 = a1 << 0xd
146078: d3 98 08                 a1 = a1 ^ a2
146081: 98 89 07                 a2 = a1 >> 0x7
146084: d3 98 08                 a1 = a1 ^ a2
146087: 97 89 11                 a2 = a1 << 0x11
146090: d3 89 04                 t2 = a2 ^ a1
146093: 3e 04 70 02 03           u64 [0x30270] = t2
146098: 82 19 e0 01              a2 = u64 [sp + 0x1e0]
146102: ac 97 07                 jump @10663 if a0 <u a2
      :                          @10662
146105: 28 b4 b8 00              jump @13251
      :                          @10663
146109: 64 26                    s1 = t0
146111: 82 10 d8 01              ra = u64 [sp + 0x1d8]
146115: c8 b0 0a                 a3 = ra + a4
146118: 82 a8                    a1 = u64 [a3]
146120: 55 18 06 08              jump @10665 if a1 >=u 6
      :                          @10664
146124: 28 81 b8 00              jump @13221
      :                          @10665
146128: ca 34 08                 a1 = t2 * t1
146131: 64 62                    t0 = s1
146133: d6 68 0c                 a5 = a1 mulhu s1
146136: 82 aa f8                 a3 = u64 [a3 + 0xfffffffffffffff8]
146139: 98 cc 03                 a5 = a5 >> 0x3
146142: 33 04 0a                 t2 = 0xa
146145: ca 4c 0c                 a5 = a5 * t2
146148: c9 c8 08                 a1 = a1 - a5
146151: 7b a8 28                 u64 [a3 + 0x28] = a1
146154: 95 bb 18                 a4 = a4 + 0x18
146157: 95 77 01                 a0 = a0 + 0x1
146160: 33 0c 70 02 03           a5 = 0x30270
146165: 52 2b 88 00 22 fe        jump @10641 if a4 != 136
      :                          @10666
146171: 95 17 80 02              a0 = sp + 0x280
146175: 64 08                    a1 = ra
146177: 50 20 98 07 79 36 fe     ra = 1944, jump @2112
      :                          @10667 [@dyn 972]
146184: 95 17 80 02              a0 = sp + 0x280
146188: 50 20 9a 07 c3 2f ff     ra = 1946, jump @7339
      :                          @10668 [@dyn 973]
146195: 7b 17 10 01              u64 [sp + 0x110] = a0
146199: 95 17 d0 01              a0 = sp + 0x1d0
146203: 7b 17 28 02              u64 [sp + 0x228] = a0
146207: 33 07 40 02              a0 = 0x240
146211: 7b 17 30 02              u64 [sp + 0x230] = a0
146215: 95 17 10 01              a0 = sp + 0x110
146219: 7b 17 38 02              u64 [sp + 0x238] = a0
146223: 33 07 28 0c              a0 = 0xc28
146227: 7b 17 40 02              u64 [sp + 0x240] = a0
146231: 33 07 20 17 01           a0 = 0x11720
146236: 7b 17 80 02              u64 [sp + 0x280] = a0
146240: 49 21 88 02 02           u64 [sp + 648] = 0x2
146245: 49 21 a0 02              u64 [sp + 672] = 0
146249: 95 18 28 02              a1 = sp + 0x228
146253: 7b 18 90 02              u64 [sp + 0x290] = a1
146257: 49 21 98 02 02           u64 [sp + 664] = 0x2
146262: 95 17 f8 01              a0 = sp + 0x1f8
146266: 95 18 80 02              a1 = sp + 0x280
146270: 50 20 9c 07 e9 13 fe     ra = 1948, jump @1491
      :                          @10669 [@dyn 974]
146277: 82 16 00 02              s1 = u64 [sp + 0x200]
146281: 82 1b 08 02              a4 = u64 [sp + 0x208]
146285: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
146289: 7b 17 60                 u64 [sp + 0x60] = a0
146292: 33 07 02                 a0 = 0x2
146295: 33 08                    a1 = 0
146297: 33 09                    a2 = 0
146299: 64 6a                    a3 = s1
146301: 33 00 9e 07              ra = 0x79e
146305: 0a 64                    ecalli 100 // 'log'
146307: 01                       fallthrough
      :                          @10670 [@dyn 975]
146308: 82 1c 60                 a5 = u64 [sp + 0x60]
146311: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
146316: 55 38 00 00 f0 0a        jump @10672 if a1 >=u 4293918720
      :                          @10671
146322: 28 2a a3 00              jump @12797
      :                          @10672
146326: 33 07 b0 02 03           a0 = 0x302b0
146331: 95 77 00 00 10           a0 = a0 + 0x100000
146336: 01                       fallthrough
      :                          @10673
146337: 82 78                    a1 = u64 [a0]
146339: c9 87 09                 a2 = a0 - a1
146342: aa 69 07                 jump @10675 if a2 == s1
      :                          @10674
146345: 28 13 a3 00              jump @12797
      :                          @10675
146349: c9 c8 09                 a2 = a1 - a5
146352: 01                       fallthrough
      :                          @10676
146353: 82 7a                    a3 = u64 [a0]
146355: ab 8a ee                 jump @10673 if a3 != a1
      :                          @10677
146358: 7b 79                    u64 [a0] = a2
146360: 33 0b                    a4 = 0
146362: 01                       fallthrough
      :                          @10678
146363: ab 8a e6                 jump @10673 if a3 != a1
      :                          @10679
146366: 28 fe a2 00              jump @12797
      :                          @10680 [@dyn 976]
146370: 3a 08 70 02 03           a1 = u64 [0x30270]
146375: 97 89 0d                 a2 = a1 << 0xd
146378: d3 98 08                 a1 = a1 ^ a2
146381: 98 89 07                 a2 = a1 >> 0x7
146384: d3 89 09                 a2 = a2 ^ a1
146387: 97 9a 11                 a3 = a2 << 0x11
146390: 3a 08 58 01 03           a1 = u64 [0x30158]
146395: d3 9a 0a                 a3 = a3 ^ a2
146398: 3a 09 c8 01 03           a2 = u64 [0x301c8]
146403: ca 8a 0b                 a4 = a3 * a1
146406: 3e 0a 70 02 03           u64 [0x30270] = a3
146411: d6 9b 0a                 a3 = a4 mulhu a2
146414: c9 ab 0c                 a5 = a4 - a3
146417: 98 cc 01                 a5 = a5 >> 0x1
146420: c8 ca 0a                 a3 = a3 + a5
146423: 98 ac 06                 a5 = a3 >> 0x6
146426: 33 03 65                 t1 = 0x65
146429: ca 3c 0c                 a5 = a5 * t1
146432: 3a 06 70 02 03           s1 = u64 [0x30270]
146437: c9 cb 0b                 a4 = a4 - a5
146440: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
146443: 97 6c 0d                 a5 = s1 << 0xd
146446: d3 c6 06                 s1 = s1 ^ a5
146449: 98 6c 07                 a5 = s1 >> 0x7
146452: d3 c6 06                 s1 = s1 ^ a5
146455: 97 6c 11                 a5 = s1 << 0x11
146458: d3 6c 0c                 a5 = a5 ^ s1
146461: ca 8c 0b                 a4 = a5 * a1
146464: 3e 0c 70 02 03           u64 [0x30270] = a5
146469: d6 9b 0c                 a5 = a4 mulhu a2
146472: c9 cb 06                 s1 = a4 - a5
146475: 98 66 01                 s1 = s1 >> 0x1
146478: c8 6c 0c                 a5 = a5 + s1
146481: 98 cc 06                 a5 = a5 >> 0x6
146484: ca 3c 0c                 a5 = a5 * t1
146487: 3a 06 70 02 03           s1 = u64 [0x30270]
146492: c9 cb 0b                 a4 = a4 - a5
146495: 95 bc ce                 a5 = a4 + 0xffffffffffffffce
146498: 97 6b 0d                 a4 = s1 << 0xd
146501: d3 b6 06                 s1 = s1 ^ a4
146504: 98 6b 07                 a4 = s1 >> 0x7
146507: d3 b6 06                 s1 = s1 ^ a4
146510: 97 6b 11                 a4 = s1 << 0x11
146513: d3 6b 0b                 a4 = a4 ^ s1
146516: ca 8b 0a                 a3 = a4 * a1
146519: 3e 0b 70 02 03           u64 [0x30270] = a4
146524: d6 9a 0b                 a4 = a3 mulhu a2
146527: c9 ba 06                 s1 = a3 - a4
146530: 98 66 01                 s1 = s1 >> 0x1
146533: c8 6b 0b                 a4 = a4 + s1
146536: 98 bb 06                 a4 = a4 >> 0x6
146539: ca 3b 0b                 a4 = a4 * t1
146542: 3a 06 70 02 03           s1 = u64 [0x30270]
146547: c9 ba 0a                 a3 = a3 - a4
146550: 95 aa ce                 a3 = a3 + 0xffffffffffffffce
146553: 97 6b 0d                 a4 = s1 << 0xd
146556: d3 b6 06                 s1 = s1 ^ a4
146559: 98 6b 07                 a4 = s1 >> 0x7
146562: d3 b6 06                 s1 = s1 ^ a4
146565: 97 6b 11                 a4 = s1 << 0x11
146568: d3 6b 0b                 a4 = a4 ^ s1
146571: ca 8b 08                 a1 = a4 * a1
146574: 3e 0b 70 02 03           u64 [0x30270] = a4
146579: d6 98 07                 a0 = a1 mulhu a2
146582: c9 78 09                 a2 = a1 - a0
146585: 98 99 01                 a2 = a2 >> 0x1
146588: c8 97 07                 a0 = a0 + a2
146591: 98 77 06                 a0 = a0 >> 0x6
146594: ca 37 07                 a0 = a0 * t1
146597: c9 78 08                 a1 = a1 - a0
146600: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
146603: 7b 1c 00 02              u64 [sp + 0x200] = a5
146607: 7b 12 f8 01              u64 [sp + 0x1f8] = t0
146611: 7b 1a 08 02              u64 [sp + 0x208] = a3
146615: 7b 17 10 02              u64 [sp + 0x210] = a0
146619: 95 17 f8 01              a0 = sp + 0x1f8
146623: 95 16 f8 01              s1 = sp + 0x1f8
146627: 28 8f 30 ff              jump @7399
      :                          @10681
146631: 7b 17 10 01              u64 [sp + 0x110] = a0
146635: 7b 16 28 02              u64 [sp + 0x228] = s1
146639: 33 07 e2 00              a0 = 0xe2
146643: 7b 17 30 02              u64 [sp + 0x230] = a0
146647: 95 17 10 01              a0 = sp + 0x110
146651: 7b 17 38 02              u64 [sp + 0x238] = a0
146655: 33 07 28 0c              a0 = 0xc28
146659: 7b 17 40 02              u64 [sp + 0x240] = a0
146663: 33 07 60 17 01           a0 = 0x11760
146668: 7b 17 80 02              u64 [sp + 0x280] = a0
146672: 49 21 88 02 02           u64 [sp + 648] = 0x2
146677: 49 21 a0 02              u64 [sp + 672] = 0
146681: 95 18 28 02              a1 = sp + 0x228
146685: 7b 18 90 02              u64 [sp + 0x290] = a1
146689: 49 21 98 02 02           u64 [sp + 664] = 0x2
146694: 95 17 d0 01              a0 = sp + 0x1d0
146698: 95 18 80 02              a1 = sp + 0x280
146702: 50 20 a2 07 39 12 fe     ra = 1954, jump @1491
      :                          @10682 [@dyn 977]
146709: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
146713: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
146717: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
146721: 7b 17 60                 u64 [sp + 0x60] = a0
146724: 33 07 02                 a0 = 0x2
146727: 33 08                    a1 = 0
146729: 33 09                    a2 = 0
146731: 64 6a                    a3 = s1
146733: 33 00 a4 07              ra = 0x7a4
146737: 0a 64                    ecalli 100 // 'log'
146739: 01                       fallthrough
      :                          @10683 [@dyn 978]
146740: 82 1c 60                 a5 = u64 [sp + 0x60]
146743: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
146748: 55 38 00 00 f0 0a        jump @10685 if a1 >=u 4293918720
      :                          @10684
146754: 28 a9 a4 00              jump @12862
      :                          @10685
146758: 33 07 b0 02 03           a0 = 0x302b0
146763: 95 77 00 00 10           a0 = a0 + 0x100000
146768: 01                       fallthrough
      :                          @10686
146769: 82 78                    a1 = u64 [a0]
146771: c9 87 09                 a2 = a0 - a1
146774: aa 69 07                 jump @10688 if a2 == s1
      :                          @10687
146777: 28 92 a4 00              jump @12862
      :                          @10688
146781: c9 c8 09                 a2 = a1 - a5
146784: 01                       fallthrough
      :                          @10689
146785: 82 7a                    a3 = u64 [a0]
146787: ab 8a ee                 jump @10686 if a3 != a1
      :                          @10690
146790: 7b 79                    u64 [a0] = a2
146792: 33 0b                    a4 = 0
146794: 01                       fallthrough
      :                          @10691
146795: ab 8a e6                 jump @10686 if a3 != a1
      :                          @10692
146798: 28 7d a4 00              jump @12862
      :                          @10693 [@dyn 979]
146802: 3a 07 58 01 03           a0 = u64 [0x30158]
146807: 7b 17 60                 u64 [sp + 0x60] = a0
146810: 49 21 80 02              u64 [sp + 640] = 0
146814: 49 21 88 02 08           u64 [sp + 648] = 0x8
146819: 49 21 90 02              u64 [sp + 656] = 0
146823: 95 17 b8 01              a0 = sp + 0x1b8
146827: 95 18 80 02              a1 = sp + 0x280
146831: 33 00 a8 07              ra = 0x7a8
146835: 95 11 b8                 sp = sp + 0xffffffffffffffb8
146838: 7b 10 40                 u64 [sp + 0x40] = ra
146841: 7b 15 38                 u64 [sp + 0x38] = s0
146844: 7b 16 30                 u64 [sp + 0x30] = s1
146847: 7b 18 08                 u64 [sp + 0x8] = a1
146850: 33 03 b0 02 03           t1 = 0x302b0
146855: 33 02 00 00 10           t0 = 0x100000
146860: c8 23 09                 a2 = t1 + t0
146863: 28 8f 1b fe              jump @1709
      :                          @10694 [@dyn 980]
146867: 33 03                    t1 = 0
146869: 33 02                    t0 = 0
146871: 33 00 70 02 03           ra = 0x30270
146876: 3a 07 d8 01 03           a0 = u64 [0x301d8]
146881: 7b 17 58                 u64 [sp + 0x58] = a0
146884: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
146894: 7b 17 50                 u64 [sp + 0x50] = a0
146897: 28 7d                    jump @10699
      :                          @10695
146899: 7b 1a 30                 u64 [sp + 0x30] = a3
146902: 7b 17 28                 u64 [sp + 0x28] = a0
146905: 50 20 aa 07 2f 16 fe     ra = 1962, jump @1605
      :                          @10696 [@dyn 981]
146912: 82 1c 28                 a5 = u64 [sp + 0x28]
146915: 82 1a 30                 a3 = u64 [sp + 0x30]
146918: 33 00 70 02 03           ra = 0x30270
146923: 82 13 38                 t1 = u64 [sp + 0x38]
146926: 82 12 40                 t0 = u64 [sp + 0x40]
146929: 82 c8 10                 a1 = u64 [a5 + 0x10]
146932: 01                       fallthrough
      :                          @10697
146933: 82 19 60                 a2 = u64 [sp + 0x60]
146936: ca 96 07                 a0 = s1 * a2
146939: ca 9a 09                 a2 = a3 * a2
146942: 82 1a 58                 a3 = u64 [sp + 0x58]
146945: d6 a7 0a                 a3 = a0 mulhu a3
146948: c9 a7 0b                 a4 = a0 - a3
146951: 98 bb 01                 a4 = a4 >> 0x1
146954: c8 ba 0a                 a3 = a3 + a4
146957: 98 aa 04                 a3 = a3 >> 0x4
146960: 96 aa 15                 a3 = a3 * 0x15
146963: c9 a7 07                 a0 = a0 - a3
146966: 82 1a 50                 a3 = u64 [sp + 0x50]
146969: d6 a9 0a                 a3 = a2 mulhu a3
146972: 98 aa 03                 a3 = a3 >> 0x3
146975: 82 cb 08                 a4 = u64 [a5 + 0x8]
146978: 33 06 0a                 s1 = 0xa
146981: ca 6a 0a                 a3 = a3 * s1
146984: c9 a9 09                 a2 = a2 - a3
146987: 97 8a 04                 a3 = a1 << 0x4
146990: c8 ba 0a                 a3 = a3 + a4
146993: 7b a9                    u64 [a3] = a2
146995: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
146998: 7b a7 08                 u64 [a3 + 0x8] = a0
147001: 95 88 01                 a1 = a1 + 0x1
147004: 7b c8 10                 u64 [a5 + 0x10] = a1
147007: 95 33 18                 t1 = t1 + 0x18
147010: 95 22 01                 t0 = t0 + 0x1
147013: 52 23 f0 00 09           jump @10699 if t1 != 240
      :                          @10698
147018: 28 c3 9c 00              jump @12726
      :                          @10699
147022: 3a 07 70 02 03           a0 = u64 [0x30270]
147027: 97 78 0d                 a1 = a0 << 0xd
147030: d3 87 07                 a0 = a0 ^ a1
147033: 98 78 07                 a1 = a0 >> 0x7
147036: d3 87 07                 a0 = a0 ^ a1
147039: 97 78 11                 a1 = a0 << 0x11
147042: d3 78 0a                 a3 = a1 ^ a0
147045: 3e 0a 70 02 03           u64 [0x30270] = a3
147050: 3a 07 70 02 03           a0 = u64 [0x30270]
147055: 97 78 0d                 a1 = a0 << 0xd
147058: d3 87 07                 a0 = a0 ^ a1
147061: 98 78 07                 a1 = a0 >> 0x7
147064: d3 87 07                 a0 = a0 ^ a1
147067: 97 76 11                 s1 = a0 << 0x11
147070: d3 76 06                 s1 = s1 ^ a0
147073: 3e 06 70 02 03           u64 [0x30270] = s1
147078: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
147082: ac 82 07                 jump @10701 if t0 <u a1
      :                          @10700
147085: 28 b5 b4 00              jump @13212
      :                          @10701
147089: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
147093: c8 37 04                 t2 = a0 + t1
147096: 82 48 10                 a1 = u64 [t2 + 0x10]
147099: 82 49                    a2 = u64 [t2]
147101: 7b 12 40                 u64 [sp + 0x40] = t0
147104: 7b 13 38                 u64 [sp + 0x38] = t1
147107: ab 98 29                 jump @10704 if a1 != a2
      :                          @10702
147110: 64 47                    a0 = t2
147112: 7b 1a 30                 u64 [sp + 0x30] = a3
147115: 7b 14 28                 u64 [sp + 0x28] = t2
147118: 50 20 ac 07 5a 15 fe     ra = 1964, jump @1605
      :                          @10703 [@dyn 982]
147125: 82 1a 30                 a3 = u64 [sp + 0x30]
147128: 33 00 70 02 03           ra = 0x30270
147133: 82 13 38                 t1 = u64 [sp + 0x38]
147136: 82 12 40                 t0 = u64 [sp + 0x40]
147139: 82 17 28                 a0 = u64 [sp + 0x28]
147142: 64 74                    t2 = a0
147144: 82 78 10                 a1 = u64 [a0 + 0x10]
147147: 01                       fallthrough
      :                          @10704
147148: 82 19 60                 a2 = u64 [sp + 0x60]
147151: ca 96 07                 a0 = s1 * a2
147154: ca 9a 09                 a2 = a3 * a2
147157: 82 1a 58                 a3 = u64 [sp + 0x58]
147160: d6 a7 0a                 a3 = a0 mulhu a3
147163: c9 a7 0b                 a4 = a0 - a3
147166: 98 bb 01                 a4 = a4 >> 0x1
147169: c8 ba 0a                 a3 = a3 + a4
147172: 98 aa 04                 a3 = a3 >> 0x4
147175: 96 aa 15                 a3 = a3 * 0x15
147178: c9 a7 07                 a0 = a0 - a3
147181: 82 1a 50                 a3 = u64 [sp + 0x50]
147184: d6 a9 0a                 a3 = a2 mulhu a3
147187: 98 aa 03                 a3 = a3 >> 0x3
147190: 82 4b 08                 a4 = u64 [t2 + 0x8]
147193: 96 aa 0a                 a3 = a3 * 0xa
147196: c9 a9 09                 a2 = a2 - a3
147199: 97 8a 04                 a3 = a1 << 0x4
147202: c8 ba 0a                 a3 = a3 + a4
147205: 7b a9                    u64 [a3] = a2
147207: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
147210: 7b a7 08                 u64 [a3 + 0x8] = a0
147213: 95 88 01                 a1 = a1 + 0x1
147216: 7b 48 10                 u64 [t2 + 0x10] = a1
147219: 3a 07 70 02 03           a0 = u64 [0x30270]
147224: 97 78 0d                 a1 = a0 << 0xd
147227: d3 87 07                 a0 = a0 ^ a1
147230: 98 78 07                 a1 = a0 >> 0x7
147233: d3 87 07                 a0 = a0 ^ a1
147236: 97 78 11                 a1 = a0 << 0x11
147239: d3 78 0a                 a3 = a1 ^ a0
147242: 3e 0a 70 02 03           u64 [0x30270] = a3
147247: 3a 07 70 02 03           a0 = u64 [0x30270]
147252: 97 78 0d                 a1 = a0 << 0xd
147255: d3 87 07                 a0 = a0 ^ a1
147258: 98 78 07                 a1 = a0 >> 0x7
147261: d3 87 07                 a0 = a0 ^ a1
147264: 97 76 11                 s1 = a0 << 0x11
147267: d3 76 06                 s1 = s1 ^ a0
147270: 3e 06 70 02 03           u64 [0x30270] = s1
147275: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
147279: ac 82 07                 jump @10706 if t0 <u a1
      :                          @10705
147282: 28 f0 b3 00              jump @13212
      :                          @10706
147286: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
147290: c8 37 07                 a0 = a0 + t1
147293: 82 78 10                 a1 = u64 [a0 + 0x10]
147296: 82 79                    a2 = u64 [a0]
147298: ab 98 26                 jump @10709 if a1 != a2
      :                          @10707
147301: 7b 1a 30                 u64 [sp + 0x30] = a3
147304: 7b 17 28                 u64 [sp + 0x28] = a0
147307: 50 20 ae 07 9d 14 fe     ra = 1966, jump @1605
      :                          @10708 [@dyn 983]
147314: 82 1c 28                 a5 = u64 [sp + 0x28]
147317: 82 1a 30                 a3 = u64 [sp + 0x30]
147320: 33 00 70 02 03           ra = 0x30270
147325: 82 13 38                 t1 = u64 [sp + 0x38]
147328: 82 12 40                 t0 = u64 [sp + 0x40]
147331: 82 c8 10                 a1 = u64 [a5 + 0x10]
147334: 28 05                    jump @10710
      :                          @10709
147336: 64 7c                    a5 = a0
147338: 01                       fallthrough
      :                          @10710
147339: 82 19 60                 a2 = u64 [sp + 0x60]
147342: ca 96 07                 a0 = s1 * a2
147345: ca 9a 09                 a2 = a3 * a2
147348: 82 1a 58                 a3 = u64 [sp + 0x58]
147351: d6 a7 0a                 a3 = a0 mulhu a3
147354: c9 a7 0b                 a4 = a0 - a3
147357: 98 bb 01                 a4 = a4 >> 0x1
147360: c8 ba 0a                 a3 = a3 + a4
147363: 98 aa 04                 a3 = a3 >> 0x4
147366: 96 aa 15                 a3 = a3 * 0x15
147369: c9 a7 07                 a0 = a0 - a3
147372: 82 1a 50                 a3 = u64 [sp + 0x50]
147375: d6 a9 0a                 a3 = a2 mulhu a3
147378: 98 aa 03                 a3 = a3 >> 0x3
147381: 82 cb 08                 a4 = u64 [a5 + 0x8]
147384: 96 aa 0a                 a3 = a3 * 0xa
147387: c9 a9 09                 a2 = a2 - a3
147390: 97 8a 04                 a3 = a1 << 0x4
147393: c8 ba 0a                 a3 = a3 + a4
147396: 7b a9                    u64 [a3] = a2
147398: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
147401: 7b a7 08                 u64 [a3 + 0x8] = a0
147404: 95 88 01                 a1 = a1 + 0x1
147407: 7b c8 10                 u64 [a5 + 0x10] = a1
147410: 3a 07 70 02 03           a0 = u64 [0x30270]
147415: 97 78 0d                 a1 = a0 << 0xd
147418: d3 87 07                 a0 = a0 ^ a1
147421: 98 78 07                 a1 = a0 >> 0x7
147424: d3 87 07                 a0 = a0 ^ a1
147427: 97 78 11                 a1 = a0 << 0x11
147430: d3 78 0a                 a3 = a1 ^ a0
147433: 3e 0a 70 02 03           u64 [0x30270] = a3
147438: 3a 07 70 02 03           a0 = u64 [0x30270]
147443: 97 78 0d                 a1 = a0 << 0xd
147446: d3 87 07                 a0 = a0 ^ a1
147449: 98 78 07                 a1 = a0 >> 0x7
147452: d3 87 07                 a0 = a0 ^ a1
147455: 97 76 11                 s1 = a0 << 0x11
147458: d3 76 06                 s1 = s1 ^ a0
147461: 3e 06 70 02 03           u64 [0x30270] = s1
147466: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
147470: ac 82 07                 jump @10712 if t0 <u a1
      :                          @10711
147473: 28 31 b3 00              jump @13212
      :                          @10712
147477: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
147481: c8 37 07                 a0 = a0 + t1
147484: 82 78 10                 a1 = u64 [a0 + 0x10]
147487: 82 79                    a2 = u64 [a0]
147489: aa 98 b2 fd              jump @10695 if a1 == a2
      :                          @10713
147493: 64 7c                    a5 = a0
147495: 28 ce fd                 jump @10697
      :                          @10714 [@dyn 984]
147498: 3a 06 58 01 03           s1 = u64 [0x30158]
147503: 95 17 80 02              a0 = sp + 0x280
147507: 33 09 04                 a2 = 0x4
147510: 33 08                    a1 = 0
147512: 50 20 b2 07 ba 23 fe     ra = 1970, jump @1877
      :                          @10715 [@dyn 985]
147519: 95 17 d0 01              a0 = sp + 0x1d0
147523: 95 18 80 02              a1 = sp + 0x280
147527: 33 09 04                 a2 = 0x4
147530: 50 20 b4 07 d2 1d fe     ra = 1972, jump @1783
      :                          @10716 [@dyn 986]
147537: 33 03                    t1 = 0
147539: 33 0b 10                 a4 = 0x10
147542: 3a 02 d8 01 03           t0 = u64 [0x301d8]
147547: 01                       fallthrough
      :                          @10717
147548: 3a 07 70 02 03           a0 = u64 [0x30270]
147553: 97 78 0d                 a1 = a0 << 0xd
147556: d3 87 07                 a0 = a0 ^ a1
147559: 98 78 07                 a1 = a0 >> 0x7
147562: d3 87 07                 a0 = a0 ^ a1
147565: 97 79 11                 a2 = a0 << 0x11
147568: d3 79 09                 a2 = a2 ^ a0
147571: 3e 09 70 02 03           u64 [0x30270] = a2
147576: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
147580: ac 83 07                 jump @10719 if t1 <u a1
      :                          @10718
147583: 28 c2 b2 00              jump @13211
      :                          @10719
147587: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
147591: c8 b8 08                 a1 = a1 + a4
147594: 82 87                    a0 = u64 [a1]
147596: 52 07 07                 jump @10721 if a0 != 0
      :                          @10720
147599: 28 dd b2 00              jump @13250
      :                          @10721
147603: ca 69 07                 a0 = a2 * s1
147606: d6 27 09                 a2 = a0 mulhu t0
147609: c9 97 0a                 a3 = a0 - a2
147612: 98 aa 01                 a3 = a3 >> 0x1
147615: c8 a9 09                 a2 = a2 + a3
147618: 98 99 04                 a2 = a2 >> 0x4
147621: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
147624: 96 99 15                 a2 = a2 * 0x15
147627: c9 97 07                 a0 = a0 - a2
147630: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
147633: 7b 87                    u64 [a1] = a0
147635: 3a 07 70 02 03           a0 = u64 [0x30270]
147640: 97 78 0d                 a1 = a0 << 0xd
147643: d3 87 07                 a0 = a0 ^ a1
147646: 98 78 07                 a1 = a0 >> 0x7
147649: d3 87 07                 a0 = a0 ^ a1
147652: 97 7a 11                 a3 = a0 << 0x11
147655: d3 7a 0a                 a3 = a3 ^ a0
147658: 3e 0a 70 02 03           u64 [0x30270] = a3
147663: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
147667: ac 83 07                 jump @10723 if t1 <u a1
      :                          @10722
147670: 28 6b b2 00              jump @13211
      :                          @10723
147674: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
147678: c8 b8 08                 a1 = a1 + a4
147681: 82 89                    a2 = u64 [a1]
147683: 55 19 02 08              jump @10725 if a2 >=u 2
      :                          @10724
147687: 28 63 b2 00              jump @13218
      :                          @10725
147691: ca 6a 07                 a0 = a3 * s1
147694: d6 27 09                 a2 = a0 mulhu t0
147697: c9 97 0a                 a3 = a0 - a2
147700: 98 aa 01                 a3 = a3 >> 0x1
147703: c8 a9 09                 a2 = a2 + a3
147706: 98 99 04                 a2 = a2 >> 0x4
147709: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
147712: 96 99 15                 a2 = a2 * 0x15
147715: c9 97 07                 a0 = a0 - a2
147718: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
147721: 7b 87 08                 u64 [a1 + 0x8] = a0
147724: 3a 07 70 02 03           a0 = u64 [0x30270]
147729: 97 78 0d                 a1 = a0 << 0xd
147732: d3 87 07                 a0 = a0 ^ a1
147735: 98 78 07                 a1 = a0 >> 0x7
147738: d3 87 07                 a0 = a0 ^ a1
147741: 97 7a 11                 a3 = a0 << 0x11
147744: d3 7a 0a                 a3 = a3 ^ a0
147747: 3e 0a 70 02 03           u64 [0x30270] = a3
147752: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
147756: ac 83 07                 jump @10727 if t1 <u a1
      :                          @10726
147759: 28 12 b2 00              jump @13211
      :                          @10727
147763: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
147767: c8 b8 08                 a1 = a1 + a4
147770: 82 89                    a2 = u64 [a1]
147772: 55 19 03 08              jump @10729 if a2 >=u 3
      :                          @10728
147776: 28 0b b2 00              jump @13219
      :                          @10729
147780: ca 6a 07                 a0 = a3 * s1
147783: d6 27 09                 a2 = a0 mulhu t0
147786: c9 97 0a                 a3 = a0 - a2
147789: 98 aa 01                 a3 = a3 >> 0x1
147792: c8 a9 09                 a2 = a2 + a3
147795: 98 99 04                 a2 = a2 >> 0x4
147798: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
147801: 96 99 15                 a2 = a2 * 0x15
147804: c9 97 07                 a0 = a0 - a2
147807: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
147810: 7b 87 10                 u64 [a1 + 0x10] = a0
147813: 3a 07 70 02 03           a0 = u64 [0x30270]
147818: 97 78 0d                 a1 = a0 << 0xd
147821: d3 87 07                 a0 = a0 ^ a1
147824: 98 78 07                 a1 = a0 >> 0x7
147827: d3 87 07                 a0 = a0 ^ a1
147830: 97 78 11                 a1 = a0 << 0x11
147833: d3 78 04                 t2 = a1 ^ a0
147836: 3e 04 70 02 03           u64 [0x30270] = t2
147841: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
147845: ac 83 07                 jump @10731 if t1 <u a1
      :                          @10730
147848: 28 b9 b1 00              jump @13211
      :                          @10731
147852: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
147856: c8 b7 0a                 a3 = a0 + a4
147859: 82 a9                    a2 = u64 [a3]
147861: 55 19 04 08              jump @10733 if a2 >=u 4
      :                          @10732
147865: 28 b3 b1 00              jump @13220
      :                          @10733
147869: 64 60                    ra = s1
147871: ca 64 06                 s1 = t2 * s1
147874: d6 26 0c                 a5 = s1 mulhu t0
147877: c9 c6 09                 a2 = s1 - a5
147880: 98 99 01                 a2 = a2 >> 0x1
147883: c8 c9 09                 a2 = a2 + a5
147886: 98 99 04                 a2 = a2 >> 0x4
147889: 82 aa f8                 a3 = u64 [a3 + 0xfffffffffffffff8]
147892: 96 99 15                 a2 = a2 * 0x15
147895: c9 96 06                 s1 = s1 - a2
147898: 95 66 f6                 s1 = s1 + 0xfffffffffffffff6
147901: 7b a6 18                 u64 [a3 + 0x18] = s1
147904: 64 06                    s1 = ra
147906: 95 bb 18                 a4 = a4 + 0x18
147909: 95 33 01                 t1 = t1 + 0x1
147912: 33 0c 70 02 03           a5 = 0x30270
147917: 33 09 70                 a2 = 0x70
147920: ab 9b 8c fe              jump @10717 if a4 != a2
      :                          @10734
147924: 50 20 b6 07 c9 2c ff     ra = 1974, jump @7422
      :                          @10735 [@dyn 987]
147931: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
147935: 7b 18 10 01              u64 [sp + 0x110] = a1
147939: 95 17 d0 01              a0 = sp + 0x1d0
147943: 7b 17 80 02              u64 [sp + 0x280] = a0
147947: 33 07 40 02              a0 = 0x240
147951: 7b 17 88 02              u64 [sp + 0x288] = a0
147955: 95 17 b8 01              a0 = sp + 0x1b8
147959: 7b 17 90 02              u64 [sp + 0x290] = a0
147963: 33 07 28 0c              a0 = 0xc28
147967: 7b 17 98 02              u64 [sp + 0x298] = a0
147971: 95 18 10 01              a1 = sp + 0x110
147975: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
147979: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
147983: 33 07 d0 17 01           a0 = 0x117d0
147988: 7b 17 28 02              u64 [sp + 0x228] = a0
147992: 49 21 30 02 04           u64 [sp + 560] = 0x4
147997: 49 21 48 02              u64 [sp + 584] = 0
148001: 95 17 80 02              a0 = sp + 0x280
148005: 7b 17 38 02              u64 [sp + 0x238] = a0
148009: 49 21 40 02 03           u64 [sp + 576] = 0x3
148014: 95 17 f8 01              a0 = sp + 0x1f8
148018: 95 18 28 02              a1 = sp + 0x228
148022: 50 20 b8 07 11 0d fe     ra = 1976, jump @1491
      :                          @10736 [@dyn 988]
148029: 82 16 00 02              s1 = u64 [sp + 0x200]
148033: 82 1b 08 02              a4 = u64 [sp + 0x208]
148037: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
148041: 7b 17 60                 u64 [sp + 0x60] = a0
148044: 33 07 02                 a0 = 0x2
148047: 33 08                    a1 = 0
148049: 33 09                    a2 = 0
148051: 64 6a                    a3 = s1
148053: 33 00 ba 07              ra = 0x7ba
148057: 0a 64                    ecalli 100 // 'log'
148059: 01                       fallthrough
      :                          @10737 [@dyn 989]
148060: 82 1c 60                 a5 = u64 [sp + 0x60]
148063: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
148068: 55 38 00 00 f0 0a        jump @10739 if a1 >=u 4293918720
      :                          @10738
148074: 28 52 9c 00              jump @12797
      :                          @10739
148078: 33 07 b0 02 03           a0 = 0x302b0
148083: 95 77 00 00 10           a0 = a0 + 0x100000
148088: 01                       fallthrough
      :                          @10740
148089: 82 78                    a1 = u64 [a0]
148091: c9 87 09                 a2 = a0 - a1
148094: aa 69 07                 jump @10742 if a2 == s1
      :                          @10741
148097: 28 3b 9c 00              jump @12797
      :                          @10742
148101: c9 c8 09                 a2 = a1 - a5
148104: 01                       fallthrough
      :                          @10743
148105: 82 7a                    a3 = u64 [a0]
148107: ab 8a ee                 jump @10740 if a3 != a1
      :                          @10744
148110: 7b 79                    u64 [a0] = a2
148112: 33 0b                    a4 = 0
148114: 01                       fallthrough
      :                          @10745
148115: ab 8a e6                 jump @10740 if a3 != a1
      :                          @10746
148118: 28 26 9c 00              jump @12797
      :                          @10747 [@dyn 990]
148122: 3a 08 70 02 03           a1 = u64 [0x30270]
148127: 97 89 0d                 a2 = a1 << 0xd
148130: d3 98 08                 a1 = a1 ^ a2
148133: 98 89 07                 a2 = a1 >> 0x7
148136: d3 98 08                 a1 = a1 ^ a2
148139: 97 89 11                 a2 = a1 << 0x11
148142: d3 98 08                 a1 = a1 ^ a2
148145: 3a 09 58 01 03           a2 = u64 [0x30158]
148150: 3a 0a 60 01 03           a3 = u64 [0x30160]
148155: 3e 08 70 02 03           u64 [0x30270] = a1
148160: ca 98 07                 a0 = a1 * a2
148163: 98 78 03                 a1 = a0 >> 0x3
148166: d6 a8 08                 a1 = a1 mulhu a3
148169: 98 88 04                 a1 = a1 >> 0x4
148172: 96 88 e8 03              a1 = a1 * 0x3e8
148176: c9 87 07                 a0 = a0 - a1
148179: 86 77 01                 a0 = a0 | 0x1
148182: 50 20 be 07 3d 2c ff     ra = 1982, jump @7435
      :                          @10748 [@dyn 991]
148189: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
148193: 7b 18 00 02              u64 [sp + 0x200] = a1
148197: 95 17 f8 01              a0 = sp + 0x1f8
148201: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
148205: 33 07 4a 02              a0 = 0x24a
148209: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
148213: 33 07 28 18 01           a0 = 0x11828
148218: 7b 17 80 02              u64 [sp + 0x280] = a0
148222: 49 21 88 02 01           u64 [sp + 648] = 0x1
148227: 49 21 a0 02              u64 [sp + 672] = 0
148231: 95 18 d0 01              a1 = sp + 0x1d0
148235: 7b 18 90 02              u64 [sp + 0x290] = a1
148239: 49 21 98 02 01           u64 [sp + 664] = 0x1
148244: 95 17 28 02              a0 = sp + 0x228
148248: 95 18 80 02              a1 = sp + 0x280
148252: 50 20 c0 07 2b 0c fe     ra = 1984, jump @1491
      :                          @10749 [@dyn 992]
148259: 82 16 30 02              s1 = u64 [sp + 0x230]
148263: 82 1b 38 02              a4 = u64 [sp + 0x238]
148267: 82 17 28 02              a0 = u64 [sp + 0x228]
148271: 7b 17 60                 u64 [sp + 0x60] = a0
148274: 33 07 02                 a0 = 0x2
148277: 33 08                    a1 = 0
148279: 33 09                    a2 = 0
148281: 64 6a                    a3 = s1
148283: 33 00 c2 07              ra = 0x7c2
148287: 0a 64                    ecalli 100 // 'log'
148289: 01                       fallthrough
      :                          @10750 [@dyn 993]
148290: 82 1c 60                 a5 = u64 [sp + 0x60]
148293: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
148298: 55 38 00 00 f0 0a        jump @10752 if a1 >=u 4293918720
      :                          @10751
148304: 28 9b 9e 00              jump @12862
      :                          @10752
148308: 33 07 b0 02 03           a0 = 0x302b0
148313: 95 77 00 00 10           a0 = a0 + 0x100000
148318: 01                       fallthrough
      :                          @10753
148319: 82 78                    a1 = u64 [a0]
148321: c9 87 09                 a2 = a0 - a1
148324: aa 69 07                 jump @10755 if a2 == s1
      :                          @10754
148327: 28 84 9e 00              jump @12862
      :                          @10755
148331: c9 c8 09                 a2 = a1 - a5
148334: 01                       fallthrough
      :                          @10756
148335: 82 7a                    a3 = u64 [a0]
148337: ab 8a ee                 jump @10753 if a3 != a1
      :                          @10757
148340: 7b 79                    u64 [a0] = a2
148342: 33 0b                    a4 = 0
148344: 01                       fallthrough
      :                          @10758
148345: ab 8a e6                 jump @10753 if a3 != a1
      :                          @10759
148348: 28 6f 9e 00              jump @12862
      :                          @10760 [@dyn 994]
148352: 95 17 30 01              a0 = sp + 0x130
148356: 33 00 c6 07              ra = 0x7c6
148360: 95 11 f8                 sp = sp + 0xfffffffffffffff8
148363: 7b 15                    u64 [sp] = s0
148365: 33 03 b0 02 03           t1 = 0x302b0
148370: 33 02 00 00 10           t0 = 0x100000
148375: c8 23 04                 t2 = t1 + t0
148378: 28 05 39 fe              jump @2270
      :                          @10761 [@dyn 995]
148382: 82 18 40 01              a1 = u64 [sp + 0x140]
148386: 7b 18 50                 u64 [sp + 0x50] = a1
148389: 82 16 38 01              s1 = u64 [sp + 0x138]
148393: 68 87                    a0 = clz a1
148395: 9a 7a 40                 a3 = 0x40 - a0
148398: 64 67                    a0 = s1
148400: 33 09                    a2 = 0
148402: 50 20 c8 07 e2 e7 fd     ra = 1992, jump @879
      :                          @10762 [@dyn 996]
148409: 82 17 30 01              a0 = u64 [sp + 0x130]
148413: 7b 17 58                 u64 [sp + 0x58] = a0
148416: 3a 08 70 02 03           a1 = u64 [0x30270]
148421: 97 89 0d                 a2 = a1 << 0xd
148424: d3 98 08                 a1 = a1 ^ a2
148427: 98 89 07                 a2 = a1 >> 0x7
148430: 3a 0a 58 01 03           a3 = u64 [0x30158]
148435: d3 98 08                 a1 = a1 ^ a2
148438: 97 89 11                 a2 = a1 << 0x11
148441: d3 98 08                 a1 = a1 ^ a2
148444: ca a8 09                 a2 = a1 * a3
148447: 3a 0b a8 01 03           a4 = u64 [0x301a8]
148452: 3e 08 70 02 03           u64 [0x30270] = a1
148457: 98 98 02                 a1 = a2 >> 0x2
148460: d6 b8 08                 a1 = a1 mulhu a4
148463: 98 88 02                 a1 = a1 >> 0x2
148466: 3a 0c 70 02 03           a5 = u64 [0x30270]
148471: 96 88 64                 a1 = a1 * 0x64
148474: c9 89 08                 a1 = a2 - a1
148477: 97 c9 0d                 a2 = a5 << 0xd
148480: d3 c9 09                 a2 = a2 ^ a5
148483: 98 9c 07                 a5 = a2 >> 0x7
148486: d3 c9 09                 a2 = a2 ^ a5
148489: 97 9c 11                 a5 = a2 << 0x11
148492: d3 c9 09                 a2 = a2 ^ a5
148495: ca a9 0a                 a3 = a2 * a3
148498: 3e 09 70 02 03           u64 [0x30270] = a2
148503: 98 a7 02                 a0 = a3 >> 0x2
148506: d6 b7 07                 a0 = a0 mulhu a4
148509: 98 77 02                 a0 = a0 >> 0x2
148512: 96 77 64                 a0 = a0 * 0x64
148515: c9 7a 0a                 a3 = a3 - a0
148518: e6 a8 09                 a2 = minu(a1, a3)
148521: e4 a8 0a                 a3 = maxu(a1, a3)
148524: 7b 19 b8 01              u64 [sp + 0x1b8] = a2
148528: 7b 1a 10 01              u64 [sp + 0x110] = a3
148532: 7b 16 60                 u64 [sp + 0x60] = s1
148535: 64 67                    a0 = s1
148537: 82 18 50                 a1 = u64 [sp + 0x50]
148540: 50 20 ca 07 a5 4a ff     ra = 1994, jump @8024
      :                          @10763 [@dyn 997]
148547: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
148551: 95 17 b8 01              a0 = sp + 0x1b8
148555: 7b 17 80 02              u64 [sp + 0x280] = a0
148559: 33 07 94 0c              a0 = 0xc94
148563: 7b 17 88 02              u64 [sp + 0x288] = a0
148567: 95 18 10 01              a1 = sp + 0x110
148571: 7b 18 90 02              u64 [sp + 0x290] = a1
148575: 7b 17 98 02              u64 [sp + 0x298] = a0
148579: 95 17 d0 01              a0 = sp + 0x1d0
148583: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
148587: 33 07 28 0c              a0 = 0xc28
148591: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
148595: 33 07 58 18 01           a0 = 0x11858
148600: 7b 17 28 02              u64 [sp + 0x228] = a0
148604: 49 21 30 02 03           u64 [sp + 560] = 0x3
148609: 49 21 48 02              u64 [sp + 584] = 0
148613: 95 18 80 02              a1 = sp + 0x280
148617: 7b 18 38 02              u64 [sp + 0x238] = a1
148621: 49 21 40 02 03           u64 [sp + 576] = 0x3
148626: 95 17 f8 01              a0 = sp + 0x1f8
148630: 95 18 28 02              a1 = sp + 0x228
148634: 50 20 cc 07 ad 0a fe     ra = 1996, jump @1491
      :                          @10764 [@dyn 998]
148641: 82 16 00 02              s1 = u64 [sp + 0x200]
148645: 82 1b 08 02              a4 = u64 [sp + 0x208]
148649: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
148653: 7b 17 50                 u64 [sp + 0x50] = a0
148656: 33 07 02                 a0 = 0x2
148659: 33 08                    a1 = 0
148661: 33 09                    a2 = 0
148663: 64 6a                    a3 = s1
148665: 33 00 ce 07              ra = 0x7ce
148669: 0a 64                    ecalli 100 // 'log'
148671: 01                       fallthrough
      :                          @10765 [@dyn 999]
148672: 82 1c 50                 a5 = u64 [sp + 0x50]
148675: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
148680: 53 38 00 00 f0 25        jump @10771 if a1 <u 4293918720
      :                          @10766
148686: 33 07 b0 02 03           a0 = 0x302b0
148691: 95 77 00 00 10           a0 = a0 + 0x100000
148696: 01                       fallthrough
      :                          @10767
148697: 82 78                    a1 = u64 [a0]
148699: c9 87 09                 a2 = a0 - a1
148702: ab 69 0f                 jump @10771 if a2 != s1
      :                          @10768
148705: c9 c8 09                 a2 = a1 - a5
148708: 01                       fallthrough
      :                          @10769
148709: 82 7a                    a3 = u64 [a0]
148711: ab 8a f2                 jump @10767 if a3 != a1
      :                          @10770
148714: 7b 79                    u64 [a0] = a2
148716: 01                       fallthrough
      :                          @10771
148717: 82 17 58                 a0 = u64 [sp + 0x58]
148720: 52 07 07                 jump @10773 if a0 != 0
      :                          @10772
148723: 28 f8 9c 00              jump @12862
      :                          @10773
148727: 82 18 58                 a1 = u64 [sp + 0x58]
148730: 54 38 00 00 02 0a        jump @10775 if a1 <=u 131072
      :                          @10774
148736: 28 eb 9c 00              jump @12862
      :                          @10775
148740: 82 17 58                 a0 = u64 [sp + 0x58]
148743: 97 77 03                 a0 = a0 << 0x3
148746: 33 08 b0 02 03           a1 = 0x302b0
148751: 95 88 00 00 10           a1 = a1 + 0x100000
148756: 01                       fallthrough
      :                          @10776
148757: 82 89                    a2 = u64 [a1]
148759: c9 98 0a                 a3 = a1 - a2
148762: 82 1b 60                 a4 = u64 [sp + 0x60]
148765: aa ba 07                 jump @10778 if a3 == a4
      :                          @10777
148768: 28 cb 9c 00              jump @12862
      :                          @10778
148772: c9 79 0a                 a3 = a2 - a0
148775: 01                       fallthrough
      :                          @10779
148776: 82 8b                    a4 = u64 [a1]
148778: ab 9b eb                 jump @10776 if a4 != a2
      :                          @10780
148781: 7b 8a                    u64 [a1] = a3
148783: 33 0c                    a5 = 0
148785: 01                       fallthrough
      :                          @10781
148786: ab 9b e3                 jump @10776 if a4 != a2
      :                          @10782
148789: 28 b6 9c 00              jump @12862
      :                          @10783 [@dyn 1000]
148793: 3a 08 70 02 03           a1 = u64 [0x30270]
148798: 97 89 0d                 a2 = a1 << 0xd
148801: d3 98 08                 a1 = a1 ^ a2
148804: 98 89 07                 a2 = a1 >> 0x7
148807: d3 98 08                 a1 = a1 ^ a2
148810: 97 89 11                 a2 = a1 << 0x11
148813: d3 98 08                 a1 = a1 ^ a2
148816: 3a 09 58 01 03           a2 = u64 [0x30158]
148821: 3a 0a d0 01 03           a3 = u64 [0x301d0]
148826: 3e 08 70 02 03           u64 [0x30270] = a1
148831: ca 98 07                 a0 = a1 * a2
148834: d6 a7 08                 a1 = a0 mulhu a3
148837: 98 88 13                 a1 = a1 >> 0x13
148840: 96 88 a5 98 0f           a1 = a1 * 0xf98a5
148845: c9 87 07                 a0 = a0 - a1
148848: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
148852: ca 77 07                 a0 = a0 * a0
148855: 14 08 e1 19 ee 07 6a 10 00 00 a1 = 0x106a07ee19e1
148865: d6 87 08                 a1 = a0 mulhu a1
148868: 96 88 a5 98 0f           a1 = a1 * 0xf98a5
148873: c9 87 08                 a1 = a0 - a1
148876: 7b 18 10 01              u64 [sp + 0x110] = a1
148880: 95 17 d0 01              a0 = sp + 0x1d0
148884: 95 16 d0 01              s1 = sp + 0x1d0
148888: 33 00 d2 07              ra = 0x7d2
148892: 95 11 90                 sp = sp + 0xffffffffffffff90
148895: 7b 10 68                 u64 [sp + 0x68] = ra
148898: 7b 15 60                 u64 [sp + 0x60] = s0
148901: 7b 16 58                 u64 [sp + 0x58] = s1
148904: 3a 09 10 01 03           a2 = u64 [0x30110]
148909: 64 85                    s0 = a1
148911: 7b 17 20                 u64 [sp + 0x20] = a0
148914: d6 98 07                 a0 = a1 mulhu a2
148917: 98 77 09                 a0 = a0 >> 0x9
148920: 96 77 f1 03              a0 = a0 * 0x3f1
148924: c9 75 07                 a0 = s0 - a0
148927: 33 08 f1 03              a1 = 0x3f1
148931: 33 00 46 04              ra = 0x446
148935: 28 b9 56 fe              jump @2781
      :                          @10784 [@dyn 1001]
148939: 95 17 b8 01              a0 = sp + 0x1b8
148943: 7b 17 80 02              u64 [sp + 0x280] = a0
148947: 33 07 28 0c              a0 = 0xc28
148951: 7b 17 88 02              u64 [sp + 0x288] = a0
148955: 95 18 10 01              a1 = sp + 0x110
148959: 7b 18 90 02              u64 [sp + 0x290] = a1
148963: 7b 17 98 02              u64 [sp + 0x298] = a0
148967: 7b 16 a0 02              u64 [sp + 0x2a0] = s1
148971: 33 07 20 02              a0 = 0x220
148975: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
148979: 33 07 90 18 01           a0 = 0x11890
148984: 7b 17 28 02              u64 [sp + 0x228] = a0
148988: 49 21 30 02 03           u64 [sp + 560] = 0x3
148993: 49 21 48 02              u64 [sp + 584] = 0
148997: 95 18 80 02              a1 = sp + 0x280
149001: 7b 18 38 02              u64 [sp + 0x238] = a1
149005: 49 21 40 02 03           u64 [sp + 576] = 0x3
149010: 95 17 f8 01              a0 = sp + 0x1f8
149014: 95 18 28 02              a1 = sp + 0x228
149018: 50 20 d4 07 2d 09 fe     ra = 2004, jump @1491
      :                          @10785 [@dyn 1002]
149025: 82 16 00 02              s1 = u64 [sp + 0x200]
149029: 82 1b 08 02              a4 = u64 [sp + 0x208]
149033: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
149037: 7b 17 60                 u64 [sp + 0x60] = a0
149040: 33 07 02                 a0 = 0x2
149043: 33 08                    a1 = 0
149045: 33 09                    a2 = 0
149047: 64 6a                    a3 = s1
149049: 33 00 d6 07              ra = 0x7d6
149053: 0a 64                    ecalli 100 // 'log'
149055: 01                       fallthrough
      :                          @10786 [@dyn 1003]
149056: 82 1c 60                 a5 = u64 [sp + 0x60]
149059: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
149064: 53 38 00 00 f0 25        jump @10792 if a1 <u 4293918720
      :                          @10787
149070: 33 07 b0 02 03           a0 = 0x302b0
149075: 95 77 00 00 10           a0 = a0 + 0x100000
149080: 01                       fallthrough
      :                          @10788
149081: 82 78                    a1 = u64 [a0]
149083: c9 87 09                 a2 = a0 - a1
149086: ab 69 0f                 jump @10792 if a2 != s1
      :                          @10789
149089: c9 c8 09                 a2 = a1 - a5
149092: 01                       fallthrough
      :                          @10790
149093: 82 7a                    a3 = u64 [a0]
149095: ab 8a f2                 jump @10788 if a3 != a1
      :                          @10791
149098: 7b 79                    u64 [a0] = a2
149100: 01                       fallthrough
      :                          @10792
149101: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
149105: 52 08 07                 jump @10794 if a1 != 0
      :                          @10793
149108: 28 77 9b 00              jump @12862
      :                          @10794
149112: 54 38 00 00 02 0a        jump @10796 if a1 <=u 131072
      :                          @10795
149118: 28 6d 9b 00              jump @12862
      :                          @10796
149122: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
149126: 97 88 03                 a1 = a1 << 0x3
149129: 33 09 b0 02 03           a2 = 0x302b0
149134: 95 99 00 00 10           a2 = a2 + 0x100000
149139: 01                       fallthrough
      :                          @10797
149140: 82 9a                    a3 = u64 [a2]
149142: c9 a9 0b                 a4 = a2 - a3
149145: aa 7b 07                 jump @10799 if a4 == a0
      :                          @10798
149148: 28 4f 9b 00              jump @12862
      :                          @10799
149152: c9 8a 0b                 a4 = a3 - a1
149155: 01                       fallthrough
      :                          @10800
149156: 82 9c                    a5 = u64 [a2]
149158: ab ac ee                 jump @10797 if a5 != a3
      :                          @10801
149161: 7b 9b                    u64 [a2] = a4
149163: 33 06                    s1 = 0
149165: 01                       fallthrough
      :                          @10802
149166: ab ac e6                 jump @10797 if a5 != a3
      :                          @10803
149169: 28 3a 9b 00              jump @12862
      :                          @10804 [@dyn 1004]
149173: 95 17 80 02              a0 = sp + 0x280
149177: 33 00 da 07              ra = 0x7da
149181: 95 11 b8                 sp = sp + 0xffffffffffffffb8
149184: 7b 10 40                 u64 [sp + 0x40] = ra
149187: 7b 15 38                 u64 [sp + 0x38] = s0
149190: 7b 16 30                 u64 [sp + 0x30] = s1
149193: 7b 17 10                 u64 [sp + 0x10] = a0
149196: 33 07 b0 02 03           a0 = 0x302b0
149201: 33 02 00 00 10           t0 = 0x100000
149206: c8 27 09                 a2 = a0 + t0
149209: 28 5b 2d ff              jump @7500
      :                          @10805 [@dyn 1005]
149213: 82 17 80 02              a0 = u64 [sp + 0x280]
149217: 7b 17 58                 u64 [sp + 0x58] = a0
149220: 82 17 88 02              a0 = u64 [sp + 0x288]
149224: 7b 17 60                 u64 [sp + 0x60] = a0
149227: 82 16 90 02              s1 = u64 [sp + 0x290]
149231: 82 17 98 02              a0 = u64 [sp + 0x298]
149235: 7b 17 50                 u64 [sp + 0x50] = a0
149238: 82 17 a0 02              a0 = u64 [sp + 0x2a0]
149242: 7b 17 40                 u64 [sp + 0x40] = a0
149245: 95 17 10 01              a0 = sp + 0x110
149249: 33 00 dc 07              ra = 0x7dc
149253: 33 0a b0 02 03           a3 = 0x302b0
149258: 33 02 00 00 10           t0 = 0x100000
149263: c8 2a 0a                 a3 = a3 + t0
149266: 28 c4 30 fe              jump @2204
      :                          @10806 [@dyn 1006]
149270: 64 69                    a2 = s1
149272: 82 17 20 01              a0 = u64 [sp + 0x120]
149276: e6 67 02                 t0 = minu(a0, s1)
149279: 52 02 07                 jump @10808 if t0 != 0
      :                          @10807
149282: 28 0f 9e 00              jump @12927
      :                          @10808
149286: 82 16 18 01              s1 = u64 [sp + 0x118]
149290: 33 0c                    a5 = 0
149292: 82 18 60                 a1 = u64 [sp + 0x60]
149295: 64 87                    a0 = a1
149297: 01                       fallthrough
      :                          @10809
149298: 7c 6a                    a3 = u8 [s1]
149300: 82 7b                    a4 = u64 [a0]
149302: ca ab 0a                 a3 = a4 * a3
149305: c8 ac 0c                 a5 = a5 + a3
149308: 95 77 08                 a0 = a0 + 0x8
149311: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
149314: 95 66 01                 s1 = s1 + 0x1
149317: 52 02 ed                 jump @10809 if t0 != 0
      :                          @10810
149320: 28 ef 9d 00              jump @12928
      :                          @10811 [@dyn 1007]
149324: 33 07 18                 a0 = 0x18
149327: 50 20 e0 07 af 08 fe     ra = 2016, jump @1509
      :                          @10812 [@dyn 1008]
149334: 64 76                    s1 = a0
149336: 49 06 01                 u64 [s1 + 0] = 0x1
149339: 49 16 08 01              u64 [s1 + 8] = 0x1
149343: 49 16 10 01              u64 [s1 + 16] = 0x1
149347: 33 07 18                 a0 = 0x18
149350: 50 20 e2 07 98 08 fe     ra = 2018, jump @1509
      :                          @10813 [@dyn 1009]
149357: 64 7b                    a4 = a0
149359: 49 07                    u64 [a0 + 0] = 0
149361: 49 1b 08 01              u64 [a4 + 8] = 0x1
149365: 49 1b 10 01              u64 [a4 + 16] = 0x1
149369: 3a 08 70 02 03           a1 = u64 [0x30270]
149374: 97 89 0d                 a2 = a1 << 0xd
149377: d3 98 08                 a1 = a1 ^ a2
149380: 98 89 07                 a2 = a1 >> 0x7
149383: d3 98 08                 a1 = a1 ^ a2
149386: 3a 09 58 01 03           a2 = u64 [0x30158]
149391: 97 8a 11                 a3 = a1 << 0x11
149394: d3 a8 08                 a1 = a1 ^ a3
149397: ca 98 09                 a2 = a1 * a2
149400: 3e 08 70 02 03           u64 [0x30270] = a1
149405: 14 07 89 88 88 88 88 88 88 88 a0 = 0x8888888888888889
149415: d6 79 07                 a0 = a2 mulhu a0
149418: 98 77 04                 a0 = a0 >> 0x4
149421: 96 77 1e                 a0 = a0 * 0x1e
149424: c9 79 09                 a2 = a2 - a0
149427: 7b 19 10 01              u64 [sp + 0x110] = a2
149431: 7b 16 60                 u64 [sp + 0x60] = s1
149434: 64 67                    a0 = s1
149436: 7b 1b 58                 u64 [sp + 0x58] = a4
149439: 64 b8                    a1 = a4
149441: 50 20 e4 07 99 32 ff     ra = 2020, jump @7575
      :                          @10814 [@dyn 1010]
149448: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
149452: 95 17 10 01              a0 = sp + 0x110
149456: 7b 17 28 02              u64 [sp + 0x228] = a0
149460: 33 07 28 0c              a0 = 0xc28
149464: 7b 17 30 02              u64 [sp + 0x230] = a0
149468: 95 17 d0 01              a0 = sp + 0x1d0
149472: 7b 17 38 02              u64 [sp + 0x238] = a0
149476: 33 07 94 0c              a0 = 0xc94
149480: 7b 17 40 02              u64 [sp + 0x240] = a0
149484: 33 07 10 19 01           a0 = 0x11910
149489: 7b 17 80 02              u64 [sp + 0x280] = a0
149493: 49 21 88 02 02           u64 [sp + 648] = 0x2
149498: 49 21 a0 02              u64 [sp + 672] = 0
149502: 95 18 28 02              a1 = sp + 0x228
149506: 7b 18 90 02              u64 [sp + 0x290] = a1
149510: 49 21 98 02 02           u64 [sp + 664] = 0x2
149515: 95 17 f8 01              a0 = sp + 0x1f8
149519: 95 18 80 02              a1 = sp + 0x280
149523: 50 20 e6 07 34 07 fe     ra = 2022, jump @1491
      :                          @10815 [@dyn 1011]
149530: 82 16 00 02              s1 = u64 [sp + 0x200]
149534: 82 1b 08 02              a4 = u64 [sp + 0x208]
149538: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
149542: 7b 17 50                 u64 [sp + 0x50] = a0
149545: 33 07 02                 a0 = 0x2
149548: 33 08                    a1 = 0
149550: 33 09                    a2 = 0
149552: 64 6a                    a3 = s1
149554: 33 00 e8 07              ra = 0x7e8
149558: 0a 64                    ecalli 100 // 'log'
149560: 01                       fallthrough
      :                          @10816 [@dyn 1012]
149561: 82 1c 50                 a5 = u64 [sp + 0x50]
149564: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
149569: 53 38 00 00 f0 27        jump @10822 if a1 <u 4293918720
      :                          @10817
149575: 33 07 b0 02 03           a0 = 0x302b0
149580: 95 77 00 00 10           a0 = a0 + 0x100000
149585: 01                       fallthrough
      :                          @10818
149586: 82 78                    a1 = u64 [a0]
149588: c9 87 09                 a2 = a0 - a1
149591: ab 69 11                 jump @10822 if a2 != s1
      :                          @10819
149594: c9 c8 09                 a2 = a1 - a5
149597: 01                       fallthrough
      :                          @10820
149598: 82 7a                    a3 = u64 [a0]
149600: ab 8a f2                 jump @10818 if a3 != a1
      :                          @10821
149603: 7b 79                    u64 [a0] = a2
149605: 33 0b                    a4 = 0
149607: 01                       fallthrough
      :                          @10822
149608: 33 07 b0 02 03           a0 = 0x302b0
149613: 95 77 00 00 10           a0 = a0 + 0x100000
149618: 82 1c 58                 a5 = u64 [sp + 0x58]
149621: 01                       fallthrough
      :                          @10823
149622: 82 78                    a1 = u64 [a0]
149624: c9 87 09                 a2 = a0 - a1
149627: ab c9 11                 jump @10827 if a2 != a5
      :                          @10824
149630: 95 89 e8                 a2 = a1 + 0xffffffffffffffe8
149633: 01                       fallthrough
      :                          @10825
149634: 82 7a                    a3 = u64 [a0]
149636: ab 8a f2                 jump @10823 if a3 != a1
      :                          @10826
149639: 7b 79                    u64 [a0] = a2
149641: 33 0b                    a4 = 0
149643: 01                       fallthrough
      :                          @10827
149644: 33 07 b0 02 03           a0 = 0x302b0
149649: 95 77 00 00 10           a0 = a0 + 0x100000
149654: 82 1c 60                 a5 = u64 [sp + 0x60]
149657: 01                       fallthrough
      :                          @10828
149658: 82 78                    a1 = u64 [a0]
149660: c9 87 09                 a2 = a0 - a1
149663: aa c9 07                 jump @10830 if a2 == a5
      :                          @10829
149666: 28 49 99 00              jump @12862
      :                          @10830
149670: 95 89 e8                 a2 = a1 + 0xffffffffffffffe8
149673: 01                       fallthrough
      :                          @10831
149674: 82 7a                    a3 = u64 [a0]
149676: ab 8a ee                 jump @10828 if a3 != a1
      :                          @10832
149679: 7b 79                    u64 [a0] = a2
149681: 33 0b                    a4 = 0
149683: 01                       fallthrough
      :                          @10833
149684: ab 8a e6                 jump @10828 if a3 != a1
      :                          @10834
149687: 28 34 99 00              jump @12862
      :                          @10835 [@dyn 1013]
149691: 33 03 70 02 03           t1 = 0x30270
149696: 3a 08 70 02 03           a1 = u64 [0x30270]
149701: 97 89 0d                 a2 = a1 << 0xd
149704: d3 98 08                 a1 = a1 ^ a2
149707: 98 89 07                 a2 = a1 >> 0x7
149710: 3a 0b 58 01 03           a4 = u64 [0x30158]
149715: d3 98 08                 a1 = a1 ^ a2
149718: 97 89 11                 a2 = a1 << 0x11
149721: d3 98 08                 a1 = a1 ^ a2
149724: ca b8 09                 a2 = a1 * a4
149727: 3e 08 70 02 03           u64 [0x30270] = a1
149732: 14 0c cd cc cc cc cc cc cc cc a5 = 0xcccccccccccccccd
149742: d6 c9 08                 a1 = a2 mulhu a5
149745: 98 88 03                 a1 = a1 >> 0x3
149748: 33 02 0a                 t0 = 0xa
149751: 3a 06 70 02 03           s1 = u64 [0x30270]
149756: ca 28 08                 a1 = a1 * t0
149759: c9 89 08                 a1 = a2 - a1
149762: 97 69 0d                 a2 = s1 << 0xd
149765: d3 96 06                 s1 = s1 ^ a2
149768: 98 69 07                 a2 = s1 >> 0x7
149771: d3 96 06                 s1 = s1 ^ a2
149774: 97 69 11                 a2 = s1 << 0x11
149777: d3 69 09                 a2 = a2 ^ s1
149780: ca b9 06                 s1 = a2 * a4
149783: 3e 09 70 02 03           u64 [0x30270] = a2
149788: d6 c6 09                 a2 = s1 mulhu a5
149791: 98 99 03                 a2 = a2 >> 0x3
149794: 3a 07 70 02 03           a0 = u64 [0x30270]
149799: ca 29 09                 a2 = a2 * t0
149802: c9 96 09                 a2 = s1 - a2
149805: 97 7a 0d                 a3 = a0 << 0xd
149808: d3 a7 07                 a0 = a0 ^ a3
149811: 98 7a 07                 a3 = a0 >> 0x7
149814: d3 a7 07                 a0 = a0 ^ a3
149817: 97 7a 11                 a3 = a0 << 0x11
149820: d3 a7 07                 a0 = a0 ^ a3
149823: ca b7 0a                 a3 = a0 * a4
149826: 3e 07 70 02 03           u64 [0x30270] = a0
149831: d6 ca 07                 a0 = a3 mulhu a5
149834: 98 77 03                 a0 = a0 >> 0x3
149837: 3a 06 70 02 03           s1 = u64 [0x30270]
149842: ca 27 07                 a0 = a0 * t0
149845: c9 7a 0a                 a3 = a3 - a0
149848: 97 67 0d                 a0 = s1 << 0xd
149851: d3 76 06                 s1 = s1 ^ a0
149854: 98 67 07                 a0 = s1 >> 0x7
149857: d3 76 06                 s1 = s1 ^ a0
149860: 97 67 11                 a0 = s1 << 0x11
149863: d3 67 07                 a0 = a0 ^ s1
149866: ca b7 0b                 a4 = a0 * a4
149869: 3e 07 70 02 03           u64 [0x30270] = a0
149874: d6 cb 07                 a0 = a4 mulhu a5
149877: 98 77 04                 a0 = a0 >> 0x4
149880: 33 0c 14                 a5 = 0x14
149883: ca c7 07                 a0 = a0 * a5
149886: c9 7b 0b                 a4 = a4 - a0
149889: 95 17 28 02              a0 = sp + 0x228
149893: 95 16 28 02              s1 = sp + 0x228
149897: 33 00 ec 07              ra = 0x7ec
149901: 95 11 b8                 sp = sp + 0xffffffffffffffb8
149904: 7b 10 40                 u64 [sp + 0x40] = ra
149907: 7b 15 38                 u64 [sp + 0x38] = s0
149910: 7b 16 30                 u64 [sp + 0x30] = s1
149913: 64 b6                    s1 = a4
149915: 64 a5                    s0 = a3
149917: 7b 17 10                 u64 [sp + 0x10] = a0
149920: 95 17 18                 a0 = sp + 0x18
149923: 33 00 82 04              ra = 0x482
149927: 28 85 41 fe              jump @2409
      :                          @10836 [@dyn 1014]
149931: 7b 16 d0 01              u64 [sp + 0x1d0] = s1
149935: 33 07 72 02              a0 = 0x272
149939: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
149943: 33 07 40 19 01           a0 = 0x11940
149948: 7b 17 80 02              u64 [sp + 0x280] = a0
149952: 49 21 88 02 01           u64 [sp + 648] = 0x1
149957: 49 21 a0 02              u64 [sp + 672] = 0
149961: 95 18 d0 01              a1 = sp + 0x1d0
149965: 7b 18 90 02              u64 [sp + 0x290] = a1
149969: 49 21 98 02 01           u64 [sp + 664] = 0x1
149974: 95 17 f8 01              a0 = sp + 0x1f8
149978: 95 18 80 02              a1 = sp + 0x280
149982: 50 20 ee 07 69 05 fe     ra = 2030, jump @1491
      :                          @10837 [@dyn 1015]
149989: 82 16 00 02              s1 = u64 [sp + 0x200]
149993: 82 1b 08 02              a4 = u64 [sp + 0x208]
149997: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
150001: 7b 17 60                 u64 [sp + 0x60] = a0
150004: 33 07 02                 a0 = 0x2
150007: 33 08                    a1 = 0
150009: 33 09                    a2 = 0
150011: 64 6a                    a3 = s1
150013: 33 00 f0 07              ra = 0x7f0
150017: 0a 64                    ecalli 100 // 'log'
150019: 01                       fallthrough
      :                          @10838 [@dyn 1016]
150020: 82 1c 60                 a5 = u64 [sp + 0x60]
150023: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
150028: 55 38 00 00 f0 0a        jump @10840 if a1 >=u 4293918720
      :                          @10839
150034: 28 d9 97 00              jump @12862
      :                          @10840
150038: 33 07 b0 02 03           a0 = 0x302b0
150043: 95 77 00 00 10           a0 = a0 + 0x100000
150048: 01                       fallthrough
      :                          @10841
150049: 82 78                    a1 = u64 [a0]
150051: c9 87 09                 a2 = a0 - a1
150054: aa 69 07                 jump @10843 if a2 == s1
      :                          @10842
150057: 28 c2 97 00              jump @12862
      :                          @10843
150061: c9 c8 09                 a2 = a1 - a5
150064: 01                       fallthrough
      :                          @10844
150065: 82 7a                    a3 = u64 [a0]
150067: ab 8a ee                 jump @10841 if a3 != a1
      :                          @10845
150070: 7b 79                    u64 [a0] = a2
150072: 33 0b                    a4 = 0
150074: 01                       fallthrough
      :                          @10846
150075: ab 8a e6                 jump @10841 if a3 != a1
      :                          @10847
150078: 28 ad 97 00              jump @12862
      :                          @10848 [@dyn 1017]
150082: 3a 07 58 01 03           a0 = u64 [0x30158]
150087: 7b 17 60                 u64 [sp + 0x60] = a0
150090: 49 21 80 02              u64 [sp + 640] = 0
150094: 49 21 88 02 08           u64 [sp + 648] = 0x8
150099: 49 21 90 02              u64 [sp + 656] = 0
150103: 95 17 d0 01              a0 = sp + 0x1d0
150107: 95 18 80 02              a1 = sp + 0x280
150111: 33 00 f4 07              ra = 0x7f4
150115: 95 11 b8                 sp = sp + 0xffffffffffffffb8
150118: 7b 10 40                 u64 [sp + 0x40] = ra
150121: 7b 15 38                 u64 [sp + 0x38] = s0
150124: 7b 16 30                 u64 [sp + 0x30] = s1
150127: 7b 18 08                 u64 [sp + 0x8] = a1
150130: 33 03 b0 02 03           t1 = 0x302b0
150135: 33 02 00 00 10           t0 = 0x100000
150140: c8 23 09                 a2 = t1 + t0
150143: 28 17 0c fe              jump @1666
      :                          @10849 [@dyn 1018]
150147: 33 0c                    a5 = 0
150149: 33 0b                    a4 = 0
150151: 33 02 70 02 03           t0 = 0x30270
150156: 14 03 cd cc cc cc cc cc cc cc t1 = 0xcccccccccccccccd
150166: 33 04 0a                 t2 = 0xa
150169: 7b 13 40                 u64 [sp + 0x40] = t1
150172: 28 3b                    jump @10852
      :                          @10850
150174: 82 17 60                 a0 = u64 [sp + 0x60]
150177: ca 79 07                 a0 = a2 * a0
150180: d6 37 09                 a2 = a0 mulhu t1
150183: 98 99 03                 a2 = a2 >> 0x3
150186: 82 6a 08                 a3 = u64 [s1 + 0x8]
150189: ca 49 09                 a2 = a2 * t2
150192: c9 97 07                 a0 = a0 - a2
150195: 97 89 04                 a2 = a1 << 0x4
150198: c8 a9 09                 a2 = a2 + a3
150201: 95 77 01                 a0 = a0 + 0x1
150204: 7b 97 08                 u64 [a2 + 0x8] = a0
150207: 49 09 05                 u64 [a2 + 0] = 0x5
150210: 95 88 01                 a1 = a1 + 0x1
150213: 7b 68 10                 u64 [s1 + 0x10] = a1
150216: 95 cc 18                 a5 = a5 + 0x18
150219: 95 bb 01                 a4 = a4 + 0x1
150222: 52 2c 90 00 09           jump @10852 if a5 != 144
      :                          @10851
150227: 28 15 8f 00              jump @12708
      :                          @10852
150231: 7b 1b 58                 u64 [sp + 0x58] = a4
150234: 7b 1c 50                 u64 [sp + 0x50] = a5
150237: 51 0c 8c 00              jump @10859 if a5 == 0
      :                          @10853
150241: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
150245: ac 8b 07                 jump @10855 if a4 <u a1
      :                          @10854
150248: 28 60 a8 00              jump @13216
      :                          @10855
150252: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
150256: 3a 07 70 02 03           a0 = u64 [0x30270]
150261: c8 c6 06                 s1 = s1 + a5
150264: 97 78 0d                 a1 = a0 << 0xd
150267: d3 87 07                 a0 = a0 ^ a1
150270: 98 78 07                 a1 = a0 >> 0x7
150273: d3 87 07                 a0 = a0 ^ a1
150276: 97 78 11                 a1 = a0 << 0x11
150279: d3 78 09                 a2 = a1 ^ a0
150282: 3e 09 70 02 03           u64 [0x30270] = a2
150287: 82 68 10                 a1 = u64 [s1 + 0x10]
150290: 82 67                    a0 = u64 [s1]
150292: ab 78 27                 jump @10858 if a1 != a0
      :                          @10856
150295: 64 67                    a0 = s1
150297: 7b 19 38                 u64 [sp + 0x38] = a2
150300: 50 20 f6 07 ec 08 fe     ra = 2038, jump @1605
      :                          @10857 [@dyn 1019]
150307: 82 19 38                 a2 = u64 [sp + 0x38]
150310: 33 04 0a                 t2 = 0xa
150313: 82 13 40                 t1 = u64 [sp + 0x40]
150316: 33 02 70 02 03           t0 = 0x30270
150321: 82 1c 50                 a5 = u64 [sp + 0x50]
150324: 82 1b 58                 a4 = u64 [sp + 0x58]
150327: 82 68 10                 a1 = u64 [s1 + 0x10]
150330: 01                       fallthrough
      :                          @10858
150331: 82 17 60                 a0 = u64 [sp + 0x60]
150334: ca 79 07                 a0 = a2 * a0
150337: d6 37 09                 a2 = a0 mulhu t1
150340: 98 99 03                 a2 = a2 >> 0x3
150343: ca 49 09                 a2 = a2 * t2
150346: 82 6a 08                 a3 = u64 [s1 + 0x8]
150349: c9 97 07                 a0 = a0 - a2
150352: 95 77 01                 a0 = a0 + 0x1
150355: 97 89 04                 a2 = a1 << 0x4
150358: c8 a9 09                 a2 = a2 + a3
150361: 49 09                    u64 [a2 + 0] = 0
150363: 7b 97 08                 u64 [a2 + 0x8] = a0
150366: 95 88 01                 a1 = a1 + 0x1
150369: 7b 68 10                 u64 [s1 + 0x10] = a1
150372: 51 1c 18 8e 00           jump @10865 if a5 == 24
      :                          @10859
150377: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
150381: ac 8b 07                 jump @10861 if a4 <u a1
      :                          @10860
150384: 28 d8 a7 00              jump @13216
      :                          @10861
150388: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
150392: 3a 07 70 02 03           a0 = u64 [0x30270]
150397: c8 c6 06                 s1 = s1 + a5
150400: 97 78 0d                 a1 = a0 << 0xd
150403: d3 87 07                 a0 = a0 ^ a1
150406: 98 78 07                 a1 = a0 >> 0x7
150409: d3 87 07                 a0 = a0 ^ a1
150412: 97 78 11                 a1 = a0 << 0x11
150415: d3 78 09                 a2 = a1 ^ a0
150418: 3e 09 70 02 03           u64 [0x30270] = a2
150423: 82 68 10                 a1 = u64 [s1 + 0x10]
150426: 82 67                    a0 = u64 [s1]
150428: ab 78 27                 jump @10864 if a1 != a0
      :                          @10862
150431: 64 67                    a0 = s1
150433: 7b 19 38                 u64 [sp + 0x38] = a2
150436: 50 20 f8 07 64 08 fe     ra = 2040, jump @1605
      :                          @10863 [@dyn 1020]
150443: 82 19 38                 a2 = u64 [sp + 0x38]
150446: 33 04 0a                 t2 = 0xa
150449: 82 13 40                 t1 = u64 [sp + 0x40]
150452: 33 02 70 02 03           t0 = 0x30270
150457: 82 1c 50                 a5 = u64 [sp + 0x50]
150460: 82 1b 58                 a4 = u64 [sp + 0x58]
150463: 82 68 10                 a1 = u64 [s1 + 0x10]
150466: 01                       fallthrough
      :                          @10864
150467: 82 17 60                 a0 = u64 [sp + 0x60]
150470: ca 79 07                 a0 = a2 * a0
150473: d6 37 09                 a2 = a0 mulhu t1
150476: 98 99 03                 a2 = a2 >> 0x3
150479: ca 49 09                 a2 = a2 * t2
150482: 82 6a 08                 a3 = u64 [s1 + 0x8]
150485: c9 97 07                 a0 = a0 - a2
150488: 95 77 01                 a0 = a0 + 0x1
150491: 97 89 04                 a2 = a1 << 0x4
150494: c8 a9 09                 a2 = a2 + a3
150497: 49 09 01                 u64 [a2 + 0] = 0x1
150500: 7b 97 08                 u64 [a2 + 0x8] = a0
150503: 95 88 01                 a1 = a1 + 0x1
150506: 7b 68 10                 u64 [s1 + 0x10] = a1
150509: 51 1c 30 8e 00           jump @10871 if a5 == 48
      :                          @10865
150514: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
150518: ac 8b 07                 jump @10867 if a4 <u a1
      :                          @10866
150521: 28 4f a7 00              jump @13216
      :                          @10867
150525: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
150529: 3a 07 70 02 03           a0 = u64 [0x30270]
150534: c8 c6 06                 s1 = s1 + a5
150537: 97 78 0d                 a1 = a0 << 0xd
150540: d3 87 07                 a0 = a0 ^ a1
150543: 98 78 07                 a1 = a0 >> 0x7
150546: d3 87 07                 a0 = a0 ^ a1
150549: 97 78 11                 a1 = a0 << 0x11
150552: d3 78 09                 a2 = a1 ^ a0
150555: 3e 09 70 02 03           u64 [0x30270] = a2
150560: 82 68 10                 a1 = u64 [s1 + 0x10]
150563: 82 67                    a0 = u64 [s1]
150565: ab 78 27                 jump @10870 if a1 != a0
      :                          @10868
150568: 64 67                    a0 = s1
150570: 7b 19 38                 u64 [sp + 0x38] = a2
150573: 50 20 fa 07 db 07 fe     ra = 2042, jump @1605
      :                          @10869 [@dyn 1021]
150580: 82 19 38                 a2 = u64 [sp + 0x38]
150583: 33 04 0a                 t2 = 0xa
150586: 82 13 40                 t1 = u64 [sp + 0x40]
150589: 33 02 70 02 03           t0 = 0x30270
150594: 82 1c 50                 a5 = u64 [sp + 0x50]
150597: 82 1b 58                 a4 = u64 [sp + 0x58]
150600: 82 68 10                 a1 = u64 [s1 + 0x10]
150603: 01                       fallthrough
      :                          @10870
150604: 82 17 60                 a0 = u64 [sp + 0x60]
150607: ca 79 07                 a0 = a2 * a0
150610: d6 37 09                 a2 = a0 mulhu t1
150613: 98 99 03                 a2 = a2 >> 0x3
150616: ca 49 09                 a2 = a2 * t2
150619: 82 6a 08                 a3 = u64 [s1 + 0x8]
150622: c9 97 07                 a0 = a0 - a2
150625: 95 77 01                 a0 = a0 + 0x1
150628: 97 89 04                 a2 = a1 << 0x4
150631: c8 a9 09                 a2 = a2 + a3
150634: 49 09 02                 u64 [a2 + 0] = 0x2
150637: 7b 97 08                 u64 [a2 + 0x8] = a0
150640: 95 88 01                 a1 = a1 + 0x1
150643: 7b 68 10                 u64 [s1 + 0x10] = a1
150646: 51 1c 48 8e 00           jump @10877 if a5 == 72
      :                          @10871
150651: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
150655: ac 8b 07                 jump @10873 if a4 <u a1
      :                          @10872
150658: 28 c6 a6 00              jump @13216
      :                          @10873
150662: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
150666: 3a 07 70 02 03           a0 = u64 [0x30270]
150671: c8 c6 06                 s1 = s1 + a5
150674: 97 78 0d                 a1 = a0 << 0xd
150677: d3 87 07                 a0 = a0 ^ a1
150680: 98 78 07                 a1 = a0 >> 0x7
150683: d3 87 07                 a0 = a0 ^ a1
150686: 97 78 11                 a1 = a0 << 0x11
150689: d3 78 09                 a2 = a1 ^ a0
150692: 3e 09 70 02 03           u64 [0x30270] = a2
150697: 82 68 10                 a1 = u64 [s1 + 0x10]
150700: 82 67                    a0 = u64 [s1]
150702: ab 78 27                 jump @10876 if a1 != a0
      :                          @10874
150705: 64 67                    a0 = s1
150707: 7b 19 38                 u64 [sp + 0x38] = a2
150710: 50 20 fc 07 52 07 fe     ra = 2044, jump @1605
      :                          @10875 [@dyn 1022]
150717: 82 19 38                 a2 = u64 [sp + 0x38]
150720: 33 04 0a                 t2 = 0xa
150723: 82 13 40                 t1 = u64 [sp + 0x40]
150726: 33 02 70 02 03           t0 = 0x30270
150731: 82 1c 50                 a5 = u64 [sp + 0x50]
150734: 82 1b 58                 a4 = u64 [sp + 0x58]
150737: 82 68 10                 a1 = u64 [s1 + 0x10]
150740: 01                       fallthrough
      :                          @10876
150741: 82 17 60                 a0 = u64 [sp + 0x60]
150744: ca 79 07                 a0 = a2 * a0
150747: d6 37 09                 a2 = a0 mulhu t1
150750: 98 99 03                 a2 = a2 >> 0x3
150753: ca 49 09                 a2 = a2 * t2
150756: 82 6a 08                 a3 = u64 [s1 + 0x8]
150759: c9 97 07                 a0 = a0 - a2
150762: 95 77 01                 a0 = a0 + 0x1
150765: 97 89 04                 a2 = a1 << 0x4
150768: c8 a9 09                 a2 = a2 + a3
150771: 49 09 03                 u64 [a2 + 0] = 0x3
150774: 7b 97 08                 u64 [a2 + 0x8] = a0
150777: 95 88 01                 a1 = a1 + 0x1
150780: 7b 68 10                 u64 [s1 + 0x10] = a1
150783: 51 1c 60 91 00           jump @10884 if a5 == 96
      :                          @10877
150788: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
150792: ac 8b 07                 jump @10879 if a4 <u a1
      :                          @10878
150795: 28 3d a6 00              jump @13216
      :                          @10879
150799: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
150803: 3a 07 70 02 03           a0 = u64 [0x30270]
150808: c8 c6 06                 s1 = s1 + a5
150811: 97 78 0d                 a1 = a0 << 0xd
150814: d3 87 07                 a0 = a0 ^ a1
150817: 98 78 07                 a1 = a0 >> 0x7
150820: d3 87 07                 a0 = a0 ^ a1
150823: 97 78 11                 a1 = a0 << 0x11
150826: d3 78 09                 a2 = a1 ^ a0
150829: 3e 09 70 02 03           u64 [0x30270] = a2
150834: 82 68 10                 a1 = u64 [s1 + 0x10]
150837: 82 67                    a0 = u64 [s1]
150839: ab 78 27                 jump @10882 if a1 != a0
      :                          @10880
150842: 64 67                    a0 = s1
150844: 7b 19 38                 u64 [sp + 0x38] = a2
150847: 50 20 fe 07 c9 06 fe     ra = 2046, jump @1605
      :                          @10881 [@dyn 1023]
150854: 82 19 38                 a2 = u64 [sp + 0x38]
150857: 33 04 0a                 t2 = 0xa
150860: 82 13 40                 t1 = u64 [sp + 0x40]
150863: 33 02 70 02 03           t0 = 0x30270
150868: 82 1c 50                 a5 = u64 [sp + 0x50]
150871: 82 1b 58                 a4 = u64 [sp + 0x58]
150874: 82 68 10                 a1 = u64 [s1 + 0x10]
150877: 01                       fallthrough
      :                          @10882
150878: 82 17 60                 a0 = u64 [sp + 0x60]
150881: ca 79 07                 a0 = a2 * a0
150884: d6 37 09                 a2 = a0 mulhu t1
150887: 98 99 03                 a2 = a2 >> 0x3
150890: ca 49 09                 a2 = a2 * t2
150893: 82 6a 08                 a3 = u64 [s1 + 0x8]
150896: c9 97 07                 a0 = a0 - a2
150899: 95 77 01                 a0 = a0 + 0x1
150902: 97 89 04                 a2 = a1 << 0x4
150905: c8 a9 09                 a2 = a2 + a3
150908: 49 09 04                 u64 [a2 + 0] = 0x4
150911: 7b 97 08                 u64 [a2 + 0x8] = a0
150914: 95 88 01                 a1 = a1 + 0x1
150917: 7b 68 10                 u64 [s1 + 0x10] = a1
150920: 52 1c 78 08              jump @10884 if a5 != 120
      :                          @10883
150924: 28 5c 8c 00              jump @12708
      :                          @10884
150928: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
150932: ac 8b 07                 jump @10886 if a4 <u a1
      :                          @10885
150935: 28 b1 a5 00              jump @13216
      :                          @10886
150939: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
150943: 3a 07 70 02 03           a0 = u64 [0x30270]
150948: c8 c6 06                 s1 = s1 + a5
150951: 97 78 0d                 a1 = a0 << 0xd
150954: d3 87 07                 a0 = a0 ^ a1
150957: 98 78 07                 a1 = a0 >> 0x7
150960: d3 87 07                 a0 = a0 ^ a1
150963: 97 78 11                 a1 = a0 << 0x11
150966: d3 78 09                 a2 = a1 ^ a0
150969: 3e 09 70 02 03           u64 [0x30270] = a2
150974: 82 68 10                 a1 = u64 [s1 + 0x10]
150977: 82 67                    a0 = u64 [s1]
150979: ab 78 db fc              jump @10850 if a1 != a0
      :                          @10887
150983: 64 67                    a0 = s1
150985: 7b 19 38                 u64 [sp + 0x38] = a2
150988: 50 20 00 08 3c 06 fe     ra = 2048, jump @1605
      :                          @10888 [@dyn 1024]
150995: 82 19 38                 a2 = u64 [sp + 0x38]
150998: 33 04 0a                 t2 = 0xa
151001: 82 13 40                 t1 = u64 [sp + 0x40]
151004: 33 02 70 02 03           t0 = 0x30270
151009: 82 1c 50                 a5 = u64 [sp + 0x50]
151012: 82 1b 58                 a4 = u64 [sp + 0x58]
151015: 82 68 10                 a1 = u64 [s1 + 0x10]
151018: 28 b4 fc                 jump @10850
      :                          @10889 [@dyn 1025]
151021: 3a 08 70 02 03           a1 = u64 [0x30270]
151026: 97 89 0d                 a2 = a1 << 0xd
151029: d3 98 08                 a1 = a1 ^ a2
151032: 98 89 07                 a2 = a1 >> 0x7
151035: d3 98 08                 a1 = a1 ^ a2
151038: 97 89 11                 a2 = a1 << 0x11
151041: d3 98 08                 a1 = a1 ^ a2
151044: 3a 09 58 01 03           a2 = u64 [0x30158]
151049: 3a 0a 60 01 03           a3 = u64 [0x30160]
151054: 3e 08 70 02 03           u64 [0x30270] = a1
151059: ca 98 07                 a0 = a1 * a2
151062: 98 78 02                 a1 = a0 >> 0x2
151065: d6 a8 08                 a1 = a1 mulhu a3
151068: 98 88 04                 a1 = a1 >> 0x4
151071: 96 88 f4 01              a1 = a1 * 0x1f4
151075: c9 87 07                 a0 = a0 - a1
151078: 86 77 01                 a0 = a0 | 0x1
151081: 95 77 02                 a0 = a0 + 0x2
151084: 50 20 04 08 bb 3a ff     ra = 2052, jump @7892
      :                          @10890 [@dyn 1026]
151091: 52 07 07                 jump @10892 if a0 != 0
      :                          @10891
151094: 28 87 98 00              jump @12960
      :                          @10892
151098: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
151102: 95 17 d0 01              a0 = sp + 0x1d0
151106: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
151110: 33 07 28 0c              a0 = 0xc28
151114: 7b 17 00 02              u64 [sp + 0x200] = a0
151118: 33 07 a8 19 01           a0 = 0x119a8
151123: 7b 17 80 02              u64 [sp + 0x280] = a0
151127: 49 21 88 02 01           u64 [sp + 648] = 0x1
151132: 49 21 a0 02              u64 [sp + 672] = 0
151136: 95 18 f8 01              a1 = sp + 0x1f8
151140: 7b 18 90 02              u64 [sp + 0x290] = a1
151144: 49 21 98 02 01           u64 [sp + 664] = 0x1
151149: 95 17 28 02              a0 = sp + 0x228
151153: 95 18 80 02              a1 = sp + 0x280
151157: 50 20 06 08 d2 00 fe     ra = 2054, jump @1491
      :                          @10893 [@dyn 1027]
151164: 82 16 30 02              s1 = u64 [sp + 0x230]
151168: 82 1b 38 02              a4 = u64 [sp + 0x238]
151172: 82 17 28 02              a0 = u64 [sp + 0x228]
151176: 7b 17 60                 u64 [sp + 0x60] = a0
151179: 33 07 02                 a0 = 0x2
151182: 33 08                    a1 = 0
151184: 33 09                    a2 = 0
151186: 64 6a                    a3 = s1
151188: 33 00 08 08              ra = 0x808
151192: 0a 64                    ecalli 100 // 'log'
151194: 01                       fallthrough
      :                          @10894 [@dyn 1028]
151195: 82 1c 60                 a5 = u64 [sp + 0x60]
151198: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
151203: 55 38 00 00 f0 0a        jump @10896 if a1 >=u 4293918720
      :                          @10895
151209: 28 42 93 00              jump @12862
      :                          @10896
151213: 33 07 b0 02 03           a0 = 0x302b0
151218: 95 77 00 00 10           a0 = a0 + 0x100000
151223: 01                       fallthrough
      :                          @10897
151224: 82 78                    a1 = u64 [a0]
151226: c9 87 09                 a2 = a0 - a1
151229: aa 69 07                 jump @10899 if a2 == s1
      :                          @10898
151232: 28 2b 93 00              jump @12862
      :                          @10899
151236: c9 c8 09                 a2 = a1 - a5
151239: 01                       fallthrough
      :                          @10900
151240: 82 7a                    a3 = u64 [a0]
151242: ab 8a ee                 jump @10897 if a3 != a1
      :                          @10901
151245: 7b 79                    u64 [a0] = a2
151247: 33 0b                    a4 = 0
151249: 01                       fallthrough
      :                          @10902
151250: ab 8a e6                 jump @10897 if a3 != a1
      :                          @10903
151253: 28 16 93 00              jump @12862
      :                          @10904 [@dyn 1029]
151257: 95 17 80 02              a0 = sp + 0x280
151261: 95 16 80 02              s1 = sp + 0x280
151265: 33 00 0c 08              ra = 0x80c
151269: 95 11 b8                 sp = sp + 0xffffffffffffffb8
151272: 7b 10 40                 u64 [sp + 0x40] = ra
151275: 7b 15 38                 u64 [sp + 0x38] = s0
151278: 7b 16 30                 u64 [sp + 0x30] = s1
151281: 64 70                    ra = a0
151283: 3a 08 70 02 03           a1 = u64 [0x30270]
151288: 3a 03 30 01 03           t1 = u64 [0x30130]
151293: 97 89 0d                 a2 = a1 << 0xd
151296: d3 98 08                 a1 = a1 ^ a2
151299: 98 89 07                 a2 = a1 >> 0x7
151302: d3 98 08                 a1 = a1 ^ a2
151305: 97 89 11                 a2 = a1 << 0x11
151308: d3 98 08                 a1 = a1 ^ a2
151311: 3a 09 38 01 03           a2 = u64 [0x30138]
151316: 3e 08 70 02 03           u64 [0x30270] = a1
151321: ca 38 07                 a0 = a1 * t1
151324: 98 78 03                 a1 = a0 >> 0x3
151327: d6 98 08                 a1 = a1 mulhu a2
151330: 98 88 04                 a1 = a1 >> 0x4
151333: 96 88 e8 03              a1 = a1 * 0x3e8
151337: c9 87 07                 a0 = a0 - a1
151340: 95 79 64                 a2 = a0 + 0x64
151343: 33 07 02                 a0 = 0x2
151346: 33 0a 09                 a3 = 0x9
151349: 28 8b 3b ff              jump @7926
      :                          @10905 [@dyn 1030]
151353: 82 17 80 02              a0 = u64 [sp + 0x280]
151357: 82 18 88 02              a1 = u64 [sp + 0x288]
151361: 82 19 90 02              a2 = u64 [sp + 0x290]
151365: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
151369: 7b 18 10 01              u64 [sp + 0x110] = a1
151373: 7b 19 d0 01              u64 [sp + 0x1d0] = a2
151377: 95 17 b8 01              a0 = sp + 0x1b8
151381: 7b 17 80 02              u64 [sp + 0x280] = a0
151385: 33 07 28 0c              a0 = 0xc28
151389: 7b 17 88 02              u64 [sp + 0x288] = a0
151393: 95 18 10 01              a1 = sp + 0x110
151397: 7b 18 90 02              u64 [sp + 0x290] = a1
151401: 7b 17 98 02              u64 [sp + 0x298] = a0
151405: 95 18 d0 01              a1 = sp + 0x1d0
151409: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
151413: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
151417: 33 07 c8 19 01           a0 = 0x119c8
151422: 7b 17 28 02              u64 [sp + 0x228] = a0
151426: 49 21 30 02 03           u64 [sp + 560] = 0x3
151431: 49 21 48 02              u64 [sp + 584] = 0
151435: 7b 16 38 02              u64 [sp + 0x238] = s1
151439: 49 21 40 02 03           u64 [sp + 576] = 0x3
151444: 95 17 f8 01              a0 = sp + 0x1f8
151448: 95 18 28 02              a1 = sp + 0x228
151452: 50 20 0e 08 ab ff fd     ra = 2062, jump @1491
      :                          @10906 [@dyn 1031]
151459: 82 16 00 02              s1 = u64 [sp + 0x200]
151463: 82 1b 08 02              a4 = u64 [sp + 0x208]
151467: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
151471: 7b 17 60                 u64 [sp + 0x60] = a0
151474: 33 07 02                 a0 = 0x2
151477: 33 08                    a1 = 0
151479: 33 09                    a2 = 0
151481: 64 6a                    a3 = s1
151483: 33 00 10 08              ra = 0x810
151487: 0a 64                    ecalli 100 // 'log'
151489: 01                       fallthrough
      :                          @10907 [@dyn 1032]
151490: 82 1c 60                 a5 = u64 [sp + 0x60]
151493: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
151498: 55 38 00 00 f0 0a        jump @10909 if a1 >=u 4293918720
      :                          @10908
151504: 28 1b 92 00              jump @12862
      :                          @10909
151508: 33 07 b0 02 03           a0 = 0x302b0
151513: 95 77 00 00 10           a0 = a0 + 0x100000
151518: 01                       fallthrough
      :                          @10910
151519: 82 78                    a1 = u64 [a0]
151521: c9 87 09                 a2 = a0 - a1
151524: aa 69 07                 jump @10912 if a2 == s1
      :                          @10911
151527: 28 04 92 00              jump @12862
      :                          @10912
151531: c9 c8 09                 a2 = a1 - a5
151534: 01                       fallthrough
      :                          @10913
151535: 82 7a                    a3 = u64 [a0]
151537: ab 8a ee                 jump @10910 if a3 != a1
      :                          @10914
151540: 7b 79                    u64 [a0] = a2
151542: 33 0b                    a4 = 0
151544: 01                       fallthrough
      :                          @10915
151545: ab 8a e6                 jump @10910 if a3 != a1
      :                          @10916
151548: 28 ef 91 00              jump @12862
      :                          @10917 [@dyn 1033]
151552: 95 17 80 02              a0 = sp + 0x280
151556: 95 16 80 02              s1 = sp + 0x280
151560: 33 00 14 08              ra = 0x814
151564: 95 11 d8                 sp = sp + 0xffffffffffffffd8
151567: 7b 10 20                 u64 [sp + 0x20] = ra
151570: 7b 15 18                 u64 [sp + 0x18] = s0
151573: 7b 16 10                 u64 [sp + 0x10] = s1
151576: 3a 08 70 02 03           a1 = u64 [0x30270]
151581: 3a 02 40 01 03           t0 = u64 [0x30140]
151586: 97 89 0d                 a2 = a1 << 0xd
151589: d3 98 08                 a1 = a1 ^ a2
151592: 98 89 07                 a2 = a1 >> 0x7
151595: d3 98 08                 a1 = a1 ^ a2
151598: 97 89 11                 a2 = a1 << 0x11
151601: d3 98 08                 a1 = a1 ^ a2
151604: 3a 09 48 01 03           a2 = u64 [0x30148]
151609: 3e 08 70 02 03           u64 [0x30270] = a1
151614: ca 28 0a                 a3 = a1 * t0
151617: 98 a8 03                 a1 = a3 >> 0x3
151620: d6 98 08                 a1 = a1 mulhu a2
151623: 98 88 04                 a1 = a1 >> 0x4
151626: 96 88 e8 03              a1 = a1 * 0x3e8
151630: c9 8a 0a                 a3 = a3 - a1
151633: 95 ac 64                 a5 = a3 + 0x64
151636: 33 08 02                 a1 = 0x2
151639: 33 09 09                 a2 = 0x9
151642: 33 06 02                 s1 = 0x2
151645: 28 82 3b ff              jump @7956
      :                          @10918 [@dyn 1034]
151649: 82 17 80 02              a0 = u64 [sp + 0x280]
151653: 82 18 88 02              a1 = u64 [sp + 0x288]
151657: 82 19 90 02              a2 = u64 [sp + 0x290]
151661: 82 1a 98 02              a3 = u64 [sp + 0x298]
151665: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
151669: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
151673: 7b 19 10 01              u64 [sp + 0x110] = a2
151677: 7b 1a d0 01              u64 [sp + 0x1d0] = a3
151681: 95 17 a0 01              a0 = sp + 0x1a0
151685: 7b 17 80 02              u64 [sp + 0x280] = a0
151689: 33 07 28 0c              a0 = 0xc28
151693: 7b 17 88 02              u64 [sp + 0x288] = a0
151697: 95 18 b8 01              a1 = sp + 0x1b8
151701: 7b 18 90 02              u64 [sp + 0x290] = a1
151705: 7b 17 98 02              u64 [sp + 0x298] = a0
151709: 95 18 10 01              a1 = sp + 0x110
151713: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
151717: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
151721: 95 18 d0 01              a1 = sp + 0x1d0
151725: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
151729: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
151733: 33 07 10 1a 01           a0 = 0x11a10
151738: 7b 17 28 02              u64 [sp + 0x228] = a0
151742: 49 21 30 02 04           u64 [sp + 560] = 0x4
151747: 49 21 48 02              u64 [sp + 584] = 0
151751: 7b 16 38 02              u64 [sp + 0x238] = s1
151755: 49 21 40 02 04           u64 [sp + 576] = 0x4
151760: 95 17 f8 01              a0 = sp + 0x1f8
151764: 95 18 28 02              a1 = sp + 0x228
151768: 50 20 16 08 6f fe fd     ra = 2070, jump @1491
      :                          @10919 [@dyn 1035]
151775: 82 16 00 02              s1 = u64 [sp + 0x200]
151779: 82 1b 08 02              a4 = u64 [sp + 0x208]
151783: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
151787: 7b 17 60                 u64 [sp + 0x60] = a0
151790: 33 07 02                 a0 = 0x2
151793: 33 08                    a1 = 0
151795: 33 09                    a2 = 0
151797: 64 6a                    a3 = s1
151799: 33 00 18 08              ra = 0x818
151803: 0a 64                    ecalli 100 // 'log'
151805: 01                       fallthrough
      :                          @10920 [@dyn 1036]
151806: 82 1c 60                 a5 = u64 [sp + 0x60]
151809: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
151814: 55 38 00 00 f0 0a        jump @10922 if a1 >=u 4293918720
      :                          @10921
151820: 28 df 90 00              jump @12862
      :                          @10922
151824: 33 07 b0 02 03           a0 = 0x302b0
151829: 95 77 00 00 10           a0 = a0 + 0x100000
151834: 01                       fallthrough
      :                          @10923
151835: 82 78                    a1 = u64 [a0]
151837: c9 87 09                 a2 = a0 - a1
151840: aa 69 07                 jump @10925 if a2 == s1
      :                          @10924
151843: 28 c8 90 00              jump @12862
      :                          @10925
151847: c9 c8 09                 a2 = a1 - a5
151850: 01                       fallthrough
      :                          @10926
151851: 82 7a                    a3 = u64 [a0]
151853: ab 8a ee                 jump @10923 if a3 != a1
      :                          @10927
151856: 7b 79                    u64 [a0] = a2
151858: 33 0b                    a4 = 0
151860: 01                       fallthrough
      :                          @10928
151861: ab 8a e6                 jump @10923 if a3 != a1
      :                          @10929
151864: 28 b3 90 00              jump @12862
      :                          @10930 [@dyn 1037]
151868: 3a 07 58 01 03           a0 = u64 [0x30158]
151873: 7b 17 58                 u64 [sp + 0x58] = a0
151876: 33 07 f4 01              a0 = 0x1f4
151880: 33 00 1c 08              ra = 0x81c
151884: 33 09 02                 a2 = 0x2
151887: 33 0a 09                 a3 = 0x9
151890: 28 22 3b fe              jump @2441
      :                          @10931 [@dyn 1038]
151894: 64 76                    s1 = a0
151896: 33 07 64                 a0 = 0x64
151899: 33 00 1e 08              ra = 0x81e
151903: 33 09 02                 a2 = 0x2
151906: 33 0a 09                 a3 = 0x9
151909: 28 0f 3b fe              jump @2441
      :                          @10932 [@dyn 1039]
151913: 7b 17 60                 u64 [sp + 0x60] = a0
151916: 64 67                    a0 = s1
151918: 50 20 20 08 35 3b fe     ra = 2080, jump @2452
      :                          @10933 [@dyn 1040]
151925: 82 13 58                 t1 = u64 [sp + 0x58]
151928: 3a 09 70 02 03           a2 = u64 [0x30270]
151933: 64 7a                    a3 = a0
151935: 97 97 0d                 a0 = a2 << 0xd
151938: d3 97 07                 a0 = a0 ^ a2
151941: 98 79 07                 a2 = a0 >> 0x7
151944: d3 97 07                 a0 = a0 ^ a2
151947: 97 79 11                 a2 = a0 << 0x11
151950: d3 97 07                 a0 = a0 ^ a2
151953: 3e 07 70 02 03           u64 [0x30270] = a0
151958: 82 18 60                 a1 = u64 [sp + 0x60]
151961: 64 82                    t0 = a1
151963: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
151966: ca 37 07                 a0 = a0 * t1
151969: cd 87 0b                 a4 = a0 %u a1
151972: 95 bb 01                 a4 = a4 + 0x1
151975: 33 0c 01                 a5 = 0x1
151978: 64 a8                    a1 = a3
151980: 64 b7                    a0 = a4
151982: 28 0f                    jump @10936
      :                          @10934
151984: 98 77 01                 a0 = a0 >> 0x1
151987: ca 88 08                 a1 = a1 * a1
151990: 52 07 07                 jump @10936 if a0 != 0
      :                          @10935
151993: 28 21 83 00              jump @12639
      :                          @10936
151997: 84 79 01                 a2 = a0 & 0x1
152000: cd 68 08                 a1 = a1 %u s1
152003: 51 09 ed                 jump @10934 if a2 == 0
      :                          @10937
152006: ca c8 09                 a2 = a1 * a5
152009: cd 69 0c                 a5 = a2 %u s1
152012: 28 e4                    jump @10934
      :                          @10938 [@dyn 1041]
152014: 33 07 08                 a0 = 0x8
152017: 50 20 24 08 2d fe fd     ra = 2084, jump @1509
      :                          @10939 [@dyn 1042]
152024: 7b 17 60                 u64 [sp + 0x60] = a0
152027: 33 06 01                 s1 = 0x1
152030: 7b 76                    u64 [a0] = s1
152032: 33 07 18                 a0 = 0x18
152035: 50 20 26 08 1b fe fd     ra = 2086, jump @1509
      :                          @10940 [@dyn 1043]
152042: 64 7b                    a4 = a0
152044: 7b 76                    u64 [a0] = s1
152046: 49 1b 08 ff              u64 [a4 + 8] = 0xffffffffffffffff
152050: 49 1b 10 ff              u64 [a4 + 16] = 0xffffffffffffffff
152054: 3a 08 70 02 03           a1 = u64 [0x30270]
152059: 97 89 0d                 a2 = a1 << 0xd
152062: d3 98 08                 a1 = a1 ^ a2
152065: 98 89 07                 a2 = a1 >> 0x7
152068: d3 98 08                 a1 = a1 ^ a2
152071: 3a 09 58 01 03           a2 = u64 [0x30158]
152076: 97 8a 11                 a3 = a1 << 0x11
152079: d3 a8 08                 a1 = a1 ^ a3
152082: ca 98 09                 a2 = a1 * a2
152085: 3e 08 70 02 03           u64 [0x30270] = a1
152090: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
152100: d6 79 07                 a0 = a2 mulhu a0
152103: 98 77 04                 a0 = a0 >> 0x4
152106: 96 77 14                 a0 = a0 * 0x14
152109: c9 79 06                 s1 = a2 - a0
152112: 7b 16 10 01              u64 [sp + 0x110] = s1
152116: 95 17 d0 01              a0 = sp + 0x1d0
152120: 82 18 60                 a1 = u64 [sp + 0x60]
152123: 7b 1b 58                 u64 [sp + 0x58] = a4
152126: 64 b9                    a2 = a4
152128: 64 6a                    a3 = s1
152130: 33 00 28 08              ra = 0x828
152134: 95 11 c8                 sp = sp + 0xffffffffffffffc8
152137: 7b 10 30                 u64 [sp + 0x30] = ra
152140: 7b 15 28                 u64 [sp + 0x28] = s0
152143: 7b 16 20                 u64 [sp + 0x20] = s1
152146: 64 90                    ra = a2
152148: 7b 18 18                 u64 [sp + 0x18] = a1
152151: 7b 17                    u64 [sp] = a0
152153: 95 a9 01                 a2 = a3 + 0x1
152156: 7b 19 08                 u64 [sp + 0x8] = a2
152159: 97 99 03                 a2 = a2 << 0x3
152162: 33 03 b0 02 03           t1 = 0x302b0
152167: 33 02 00 00 10           t0 = 0x100000
152172: c8 23 04                 t2 = t1 + t0
152175: 28 92 3b ff              jump @8002
      :                          @10941 [@dyn 1044]
152179: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
152183: ac 86 07                 jump @10943 if s1 <u a1
      :                          @10942
152186: 28 f7 a0 00              jump @13255
      :                          @10943
152190: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
152194: 97 66 03                 s1 = s1 << 0x3
152197: 7b 17 50                 u64 [sp + 0x50] = a0
152200: c8 76 06                 s1 = s1 + a0
152203: 95 17 10 01              a0 = sp + 0x110
152207: 7b 17 28 02              u64 [sp + 0x228] = a0
152211: 33 07 28 0c              a0 = 0xc28
152215: 7b 17 30 02              u64 [sp + 0x230] = a0
152219: 7b 16 38 02              u64 [sp + 0x238] = s1
152223: 33 07 94 0c              a0 = 0xc94
152227: 7b 17 40 02              u64 [sp + 0x240] = a0
152231: 33 07 a8 1a 01           a0 = 0x11aa8
152236: 7b 17 80 02              u64 [sp + 0x280] = a0
152240: 49 21 88 02 02           u64 [sp + 648] = 0x2
152245: 49 21 a0 02              u64 [sp + 672] = 0
152249: 95 18 28 02              a1 = sp + 0x228
152253: 7b 18 90 02              u64 [sp + 0x290] = a1
152257: 49 21 98 02 02           u64 [sp + 664] = 0x2
152262: 95 17 f8 01              a0 = sp + 0x1f8
152266: 95 18 80 02              a1 = sp + 0x280
152270: 50 20 2a 08 79 fc fd     ra = 2090, jump @1491
      :                          @10944 [@dyn 1045]
152277: 82 16 00 02              s1 = u64 [sp + 0x200]
152281: 82 1b 08 02              a4 = u64 [sp + 0x208]
152285: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
152289: 7b 17 40                 u64 [sp + 0x40] = a0
152292: 33 07 02                 a0 = 0x2
152295: 33 08                    a1 = 0
152297: 33 09                    a2 = 0
152299: 64 6a                    a3 = s1
152301: 33 00 2c 08              ra = 0x82c
152305: 0a 64                    ecalli 100 // 'log'
152307: 01                       fallthrough
      :                          @10945 [@dyn 1046]
152308: 82 1c 40                 a5 = u64 [sp + 0x40]
152311: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
152316: 53 38 00 00 f0 27        jump @10951 if a1 <u 4293918720
      :                          @10946
152322: 33 07 b0 02 03           a0 = 0x302b0
152327: 95 77 00 00 10           a0 = a0 + 0x100000
152332: 01                       fallthrough
      :                          @10947
152333: 82 78                    a1 = u64 [a0]
152335: c9 87 09                 a2 = a0 - a1
152338: ab 69 11                 jump @10951 if a2 != s1
      :                          @10948
152341: c9 c8 09                 a2 = a1 - a5
152344: 01                       fallthrough
      :                          @10949
152345: 82 7a                    a3 = u64 [a0]
152347: ab 8a f2                 jump @10947 if a3 != a1
      :                          @10950
152350: 7b 79                    u64 [a0] = a2
152352: 33 0b                    a4 = 0
152354: 01                       fallthrough
      :                          @10951
152355: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
152359: 82 16 50                 s1 = u64 [sp + 0x50]
152362: 51 07 2b                 jump @10958 if a0 == 0
      :                          @10952
152365: 56 37 00 00 02 28        jump @10958 if a0 >u 131072
      :                          @10953
152371: 97 77 03                 a0 = a0 << 0x3
152374: 33 08 b0 02 03           a1 = 0x302b0
152379: 95 88 00 00 10           a1 = a1 + 0x100000
152384: 01                       fallthrough
      :                          @10954
152385: 82 89                    a2 = u64 [a1]
152387: c9 98 0a                 a3 = a1 - a2
152390: ab 6a 0f                 jump @10958 if a3 != s1
      :                          @10955
152393: c9 79 0a                 a3 = a2 - a0
152396: 01                       fallthrough
      :                          @10956
152397: 82 8b                    a4 = u64 [a1]
152399: ab 9b f2                 jump @10954 if a4 != a2
      :                          @10957
152402: 7b 8a                    u64 [a1] = a3
152404: 01                       fallthrough
      :                          @10958
152405: 33 07 b0 02 03           a0 = 0x302b0
152410: 95 77 00 00 10           a0 = a0 + 0x100000
152415: 82 1c 58                 a5 = u64 [sp + 0x58]
152418: 01                       fallthrough
      :                          @10959
152419: 82 78                    a1 = u64 [a0]
152421: c9 87 09                 a2 = a0 - a1
152424: ab c9 11                 jump @10963 if a2 != a5
      :                          @10960
152427: 95 89 e8                 a2 = a1 + 0xffffffffffffffe8
152430: 01                       fallthrough
      :                          @10961
152431: 82 7a                    a3 = u64 [a0]
152433: ab 8a f2                 jump @10959 if a3 != a1
      :                          @10962
152436: 7b 79                    u64 [a0] = a2
152438: 33 0b                    a4 = 0
152440: 01                       fallthrough
      :                          @10963
152441: 33 07 b0 02 03           a0 = 0x302b0
152446: 95 77 00 00 10           a0 = a0 + 0x100000
152451: 82 1c 60                 a5 = u64 [sp + 0x60]
152454: 01                       fallthrough
      :                          @10964
152455: 82 78                    a1 = u64 [a0]
152457: c9 87 09                 a2 = a0 - a1
152460: aa c9 07                 jump @10966 if a2 == a5
      :                          @10965
152463: 28 5c 8e 00              jump @12862
      :                          @10966
152467: 95 89 f8                 a2 = a1 + 0xfffffffffffffff8
152470: 01                       fallthrough
      :                          @10967
152471: 82 7a                    a3 = u64 [a0]
152473: ab 8a ee                 jump @10964 if a3 != a1
      :                          @10968
152476: 7b 79                    u64 [a0] = a2
152478: 33 0b                    a4 = 0
152480: 01                       fallthrough
      :                          @10969
152481: ab 8a e6                 jump @10964 if a3 != a1
      :                          @10970
152484: 28 47 8e 00              jump @12862
      :                          @10971 [@dyn 1047]
152488: 3a 09 70 02 03           a2 = u64 [0x30270]
152493: 3a 07 58 01 03           a0 = u64 [0x30158]
152498: 97 9a 0d                 a3 = a2 << 0xd
152501: d3 a9 09                 a2 = a2 ^ a3
152504: 98 9a 07                 a3 = a2 >> 0x7
152507: d3 a9 09                 a2 = a2 ^ a3
152510: 97 9a 11                 a3 = a2 << 0x11
152513: d3 a9 09                 a2 = a2 ^ a3
152516: ca 79 0a                 a3 = a2 * a0
152519: 3a 0b 60 01 03           a4 = u64 [0x30160]
152524: 3e 09 70 02 03           u64 [0x30270] = a2
152529: 98 a9 03                 a2 = a3 >> 0x3
152532: d6 b9 09                 a2 = a2 mulhu a4
152535: 98 99 04                 a2 = a2 >> 0x4
152538: 96 99 e8 03              a2 = a2 * 0x3e8
152542: c9 9a 0a                 a3 = a3 - a2
152545: 86 a9 01                 a2 = a3 | 0x1
152548: 95 99 02                 a2 = a2 + 0x2
152551: 7b 19 10 01              u64 [sp + 0x110] = a2
152555: 3a 09 70 02 03           a2 = u64 [0x30270]
152560: 97 9a 0d                 a3 = a2 << 0xd
152563: d3 a9 09                 a2 = a2 ^ a3
152566: 98 9a 07                 a3 = a2 >> 0x7
152569: d3 a9 09                 a2 = a2 ^ a3
152572: 97 9a 11                 a3 = a2 << 0x11
152575: d3 a9 09                 a2 = a2 ^ a3
152578: 3e 09 70 02 03           u64 [0x30270] = a2
152583: 82 18 10 01              a1 = u64 [sp + 0x110]
152587: 52 08 07                 jump @10973 if a1 != 0
      :                          @10972
152590: 28 44 9f 00              jump @13226
      :                          @10973
152594: ca 79 07                 a0 = a2 * a0
152597: cd 87 07                 a0 = a0 %u a1
152600: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
152604: 50 20 30 08 fc 47 fe     ra = 2096, jump @2773
      :                          @10974 [@dyn 1048]
152611: 7a 17 b8 01              u32 [sp + 0x1b8] = a0
152615: 95 17 d0 01              a0 = sp + 0x1d0
152619: 7b 17 80 02              u64 [sp + 0x280] = a0
152623: 33 07 94 0c              a0 = 0xc94
152627: 7b 17 88 02              u64 [sp + 0x288] = a0
152631: 95 17 10 01              a0 = sp + 0x110
152635: 7b 17 90 02              u64 [sp + 0x290] = a0
152639: 33 07 28 0c              a0 = 0xc28
152643: 7b 17 98 02              u64 [sp + 0x298] = a0
152647: 95 17 b8 01              a0 = sp + 0x1b8
152651: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
152655: 33 07 92 0c              a0 = 0xc92
152659: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
152663: 33 07 e0 1a 01           a0 = 0x11ae0
152668: 7b 17 28 02              u64 [sp + 0x228] = a0
152672: 49 21 30 02 03           u64 [sp + 560] = 0x3
152677: 49 21 48 02              u64 [sp + 584] = 0
152681: 95 18 80 02              a1 = sp + 0x280
152685: 7b 18 38 02              u64 [sp + 0x238] = a1
152689: 49 21 40 02 03           u64 [sp + 576] = 0x3
152694: 95 17 f8 01              a0 = sp + 0x1f8
152698: 95 18 28 02              a1 = sp + 0x228
152702: 50 20 32 08 c9 fa fd     ra = 2098, jump @1491
      :                          @10975 [@dyn 1049]
152709: 82 16 00 02              s1 = u64 [sp + 0x200]
152713: 82 1b 08 02              a4 = u64 [sp + 0x208]
152717: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
152721: 7b 17 60                 u64 [sp + 0x60] = a0
152724: 33 07 02                 a0 = 0x2
152727: 33 08                    a1 = 0
152729: 33 09                    a2 = 0
152731: 64 6a                    a3 = s1
152733: 33 00 34 08              ra = 0x834
152737: 0a 64                    ecalli 100 // 'log'
152739: 01                       fallthrough
      :                          @10976 [@dyn 1050]
152740: 82 1c 60                 a5 = u64 [sp + 0x60]
152743: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
152748: 55 38 00 00 f0 0a        jump @10978 if a1 >=u 4293918720
      :                          @10977
152754: 28 39 8d 00              jump @12862
      :                          @10978
152758: 33 07 b0 02 03           a0 = 0x302b0
152763: 95 77 00 00 10           a0 = a0 + 0x100000
152768: 01                       fallthrough
      :                          @10979
152769: 82 78                    a1 = u64 [a0]
152771: c9 87 09                 a2 = a0 - a1
152774: aa 69 07                 jump @10981 if a2 == s1
      :                          @10980
152777: 28 22 8d 00              jump @12862
      :                          @10981
152781: c9 c8 09                 a2 = a1 - a5
152784: 01                       fallthrough
      :                          @10982
152785: 82 7a                    a3 = u64 [a0]
152787: ab 8a ee                 jump @10979 if a3 != a1
      :                          @10983
152790: 7b 79                    u64 [a0] = a2
152792: 33 0b                    a4 = 0
152794: 01                       fallthrough
      :                          @10984
152795: ab 8a e6                 jump @10979 if a3 != a1
      :                          @10985
152798: 28 0d 8d 00              jump @12862
      :                          @10986 [@dyn 1051]
152802: 3a 08 70 02 03           a1 = u64 [0x30270]
152807: 97 89 0d                 a2 = a1 << 0xd
152810: d3 98 08                 a1 = a1 ^ a2
152813: 98 89 07                 a2 = a1 >> 0x7
152816: d3 98 08                 a1 = a1 ^ a2
152819: 97 89 11                 a2 = a1 << 0x11
152822: d3 98 08                 a1 = a1 ^ a2
152825: 3a 09 58 01 03           a2 = u64 [0x30158]
152830: 3a 0a 68 01 03           a3 = u64 [0x30168]
152835: 3e 08 70 02 03           u64 [0x30270] = a1
152840: ca 98 07                 a0 = a1 * a2
152843: 98 78 01                 a1 = a0 >> 0x1
152846: d6 a8 08                 a1 = a1 mulhu a3
152849: 98 88 04                 a1 = a1 >> 0x4
152852: 96 88 32                 a1 = a1 * 0x32
152855: c9 87 07                 a0 = a0 - a1
152858: 95 77 02                 a0 = a0 + 0x2
152861: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
152865: 50 20 38 08 07 4a fe     ra = 2104, jump @2852
      :                          @10987 [@dyn 1052]
152872: 78 17 10 01              u8 [sp + 0x110] = a0
152876: 95 17 d0 01              a0 = sp + 0x1d0
152880: 7b 17 28 02              u64 [sp + 0x228] = a0
152884: 33 07 28 0c              a0 = 0xc28
152888: 7b 17 30 02              u64 [sp + 0x230] = a0
152892: 95 17 10 01              a0 = sp + 0x110
152896: 7b 17 38 02              u64 [sp + 0x238] = a0
152900: 33 07 80 0c              a0 = 0xc80
152904: 7b 17 40 02              u64 [sp + 0x240] = a0
152908: 33 07 30 1b 01           a0 = 0x11b30
152913: 7b 17 80 02              u64 [sp + 0x280] = a0
152917: 49 21 88 02 02           u64 [sp + 648] = 0x2
152922: 49 21 a0 02              u64 [sp + 672] = 0
152926: 95 18 28 02              a1 = sp + 0x228
152930: 7b 18 90 02              u64 [sp + 0x290] = a1
152934: 49 21 98 02 02           u64 [sp + 664] = 0x2
152939: 95 17 f8 01              a0 = sp + 0x1f8
152943: 95 18 80 02              a1 = sp + 0x280
152947: 50 20 3a 08 d4 f9 fd     ra = 2106, jump @1491
      :                          @10988 [@dyn 1053]
152954: 82 16 00 02              s1 = u64 [sp + 0x200]
152958: 82 1b 08 02              a4 = u64 [sp + 0x208]
152962: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
152966: 7b 17 60                 u64 [sp + 0x60] = a0
152969: 33 07 02                 a0 = 0x2
152972: 33 08                    a1 = 0
152974: 33 09                    a2 = 0
152976: 64 6a                    a3 = s1
152978: 33 00 3c 08              ra = 0x83c
152982: 0a 64                    ecalli 100 // 'log'
152984: 01                       fallthrough
      :                          @10989 [@dyn 1054]
152985: 82 1c 60                 a5 = u64 [sp + 0x60]
152988: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
152993: 55 38 00 00 f0 0a        jump @10991 if a1 >=u 4293918720
      :                          @10990
152999: 28 44 8c 00              jump @12862
      :                          @10991
153003: 33 07 b0 02 03           a0 = 0x302b0
153008: 95 77 00 00 10           a0 = a0 + 0x100000
153013: 01                       fallthrough
      :                          @10992
153014: 82 78                    a1 = u64 [a0]
153016: c9 87 09                 a2 = a0 - a1
153019: aa 69 07                 jump @10994 if a2 == s1
      :                          @10993
153022: 28 2d 8c 00              jump @12862
      :                          @10994
153026: c9 c8 09                 a2 = a1 - a5
153029: 01                       fallthrough
      :                          @10995
153030: 82 7a                    a3 = u64 [a0]
153032: ab 8a ee                 jump @10992 if a3 != a1
      :                          @10996
153035: 7b 79                    u64 [a0] = a2
153037: 33 0b                    a4 = 0
153039: 01                       fallthrough
      :                          @10997
153040: ab 8a e6                 jump @10992 if a3 != a1
      :                          @10998
153043: 28 18 8c 00              jump @12862
      :                          @10999 [@dyn 1055]
153047: 3a 08 70 02 03           a1 = u64 [0x30270]
153052: 97 89 0d                 a2 = a1 << 0xd
153055: d3 89 09                 a2 = a2 ^ a1
153058: 98 9a 07                 a3 = a2 >> 0x7
153061: 3a 08 58 01 03           a1 = u64 [0x30158]
153066: d3 a9 09                 a2 = a2 ^ a3
153069: 97 9a 11                 a3 = a2 << 0x11
153072: d3 a9 09                 a2 = a2 ^ a3
153075: ca 89 0a                 a3 = a2 * a1
153078: 3e 09 70 02 03           u64 [0x30270] = a2
153083: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
153093: d6 9a 09                 a2 = a3 mulhu a2
153096: 98 99 04                 a2 = a2 >> 0x4
153099: 96 99 14                 a2 = a2 * 0x14
153102: c9 9a 0a                 a3 = a3 - a2
153105: 7b 1a a0 01              u64 [sp + 0x1a0] = a3
153109: 3a 09 70 02 03           a2 = u64 [0x30270]
153114: 97 9a 0d                 a3 = a2 << 0xd
153117: d3 a9 09                 a2 = a2 ^ a3
153120: 98 9a 07                 a3 = a2 >> 0x7
153123: d3 a9 09                 a2 = a2 ^ a3
153126: 97 9a 11                 a3 = a2 << 0x11
153129: d3 a9 09                 a2 = a2 ^ a3
153132: ca 89 08                 a1 = a2 * a1
153135: 3a 0a a8 01 03           a3 = u64 [0x301a8]
153140: 3e 09 70 02 03           u64 [0x30270] = a2
153145: 98 87 02                 a0 = a1 >> 0x2
153148: d6 a7 07                 a0 = a0 mulhu a3
153151: 98 77 02                 a0 = a0 >> 0x2
153154: 96 79 64                 a2 = a0 * 0x64
153157: 82 17 a0 01              a0 = u64 [sp + 0x1a0]
153161: c9 98 08                 a1 = a1 - a2
153164: 95 89 01                 a2 = a1 + 0x1
153167: 7b 19 b8 01              u64 [sp + 0x1b8] = a2
153171: 33 08 01                 a1 = 0x1
153174: 50 20 40 08 07 49 fe     ra = 2112, jump @2859
      :                          @11000 [@dyn 1056]
153181: 7b 17 10 01              u64 [sp + 0x110] = a0
153185: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
153189: 95 17 a0 01              a0 = sp + 0x1a0
153193: 7b 17 80 02              u64 [sp + 0x280] = a0
153197: 33 08 28 0c              a1 = 0xc28
153201: 7b 18 88 02              u64 [sp + 0x288] = a1
153205: 7b 17 90 02              u64 [sp + 0x290] = a0
153209: 7b 18 98 02              u64 [sp + 0x298] = a1
153213: 95 17 b8 01              a0 = sp + 0x1b8
153217: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
153221: 33 07 94 0c              a0 = 0xc94
153225: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
153229: 95 18 10 01              a1 = sp + 0x110
153233: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
153237: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
153241: 95 18 d0 01              a1 = sp + 0x1d0
153245: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
153249: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
153253: 33 07 70 1b 01           a0 = 0x11b70
153258: 7b 17 28 02              u64 [sp + 0x228] = a0
153262: 49 21 30 02 06           u64 [sp + 560] = 0x6
153267: 49 21 48 02              u64 [sp + 584] = 0
153271: 95 17 80 02              a0 = sp + 0x280
153275: 7b 17 38 02              u64 [sp + 0x238] = a0
153279: 49 21 40 02 05           u64 [sp + 576] = 0x5
153284: 95 17 f8 01              a0 = sp + 0x1f8
153288: 95 18 28 02              a1 = sp + 0x228
153292: 50 20 42 08 7b f8 fd     ra = 2114, jump @1491
      :                          @11001 [@dyn 1057]
153299: 82 16 00 02              s1 = u64 [sp + 0x200]
153303: 82 1b 08 02              a4 = u64 [sp + 0x208]
153307: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
153311: 7b 17 60                 u64 [sp + 0x60] = a0
153314: 33 07 02                 a0 = 0x2
153317: 33 08                    a1 = 0
153319: 33 09                    a2 = 0
153321: 64 6a                    a3 = s1
153323: 33 00 44 08              ra = 0x844
153327: 0a 64                    ecalli 100 // 'log'
153329: 01                       fallthrough
      :                          @11002 [@dyn 1058]
153330: 82 1c 60                 a5 = u64 [sp + 0x60]
153333: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
153338: 55 38 00 00 f0 0a        jump @11004 if a1 >=u 4293918720
      :                          @11003
153344: 28 eb 8a 00              jump @12862
      :                          @11004
153348: 33 07 b0 02 03           a0 = 0x302b0
153353: 95 77 00 00 10           a0 = a0 + 0x100000
153358: 01                       fallthrough
      :                          @11005
153359: 82 78                    a1 = u64 [a0]
153361: c9 87 09                 a2 = a0 - a1
153364: aa 69 07                 jump @11007 if a2 == s1
      :                          @11006
153367: 28 d4 8a 00              jump @12862
      :                          @11007
153371: c9 c8 09                 a2 = a1 - a5
153374: 01                       fallthrough
      :                          @11008
153375: 82 7a                    a3 = u64 [a0]
153377: ab 8a ee                 jump @11005 if a3 != a1
      :                          @11009
153380: 7b 79                    u64 [a0] = a2
153382: 33 0b                    a4 = 0
153384: 01                       fallthrough
      :                          @11010
153385: ab 8a e6                 jump @11005 if a3 != a1
      :                          @11011
153388: 28 bf 8a 00              jump @12862
      :                          @11012 [@dyn 1059]
153392: 3a 07 58 01 03           a0 = u64 [0x30158]
153397: 7b 17 60                 u64 [sp + 0x60] = a0
153400: 33 07 14                 a0 = 0x14
153403: 33 06 14                 s1 = 0x14
153406: 50 20 48 08 ba fa fd     ra = 2120, jump @1554
      :                          @11013 [@dyn 1060]
153413: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
153417: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
153421: 3a 02 a8 01 03           t0 = u64 [0x301a8]
153426: 49 21 e0 01              u64 [sp + 480] = 0
153430: 33 0c 70 02 03           a5 = 0x30270
153435: 33 03 64                 t1 = 0x64
153438: 7b 12 40                 u64 [sp + 0x40] = t0
153441: 28 48                    jump @11016
      :                          @11014
153443: 82 1a 60                 a3 = u64 [sp + 0x60]
153446: ca a9 07                 a0 = a2 * a3
153449: 98 79 02                 a2 = a0 >> 0x2
153452: d6 29 09                 a2 = a2 mulhu t0
153455: 98 99 02                 a2 = a2 >> 0x2
153458: ca 39 09                 a2 = a2 * t1
153461: c9 97 07                 a0 = a0 - a2
153464: ca ab 09                 a2 = a4 * a3
153467: 98 9a 02                 a3 = a2 >> 0x2
153470: d6 2a 0a                 a3 = a3 mulhu t0
153473: 98 aa 02                 a3 = a3 >> 0x2
153476: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
153480: ca 3a 0a                 a3 = a3 * t1
153483: c9 a9 09                 a2 = a2 - a3
153486: 97 8a 04                 a3 = a1 << 0x4
153489: c8 ba 0a                 a3 = a3 + a4
153492: 7b a7                    u64 [a3] = a0
153494: 7b a9 08                 u64 [a3 + 0x8] = a2
153497: 95 89 01                 a2 = a1 + 0x1
153500: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
153503: 7b 19 e0 01              u64 [sp + 0x1e0] = a2
153507: 52 06 06                 jump @11016 if s1 != 0
      :                          @11015
153510: 28 9e 7e                 jump @12651
      :                          @11016
153513: 3a 07 70 02 03           a0 = u64 [0x30270]
153518: 97 78 0d                 a1 = a0 << 0xd
153521: d3 87 07                 a0 = a0 ^ a1
153524: 98 78 07                 a1 = a0 >> 0x7
153527: d3 87 07                 a0 = a0 ^ a1
153530: 97 78 11                 a1 = a0 << 0x11
153533: d3 78 09                 a2 = a1 ^ a0
153536: 3e 09 70 02 03           u64 [0x30270] = a2
153541: 3a 07 70 02 03           a0 = u64 [0x30270]
153546: 97 78 0d                 a1 = a0 << 0xd
153549: d3 87 07                 a0 = a0 ^ a1
153552: 98 78 07                 a1 = a0 >> 0x7
153555: d3 87 07                 a0 = a0 ^ a1
153558: 97 78 11                 a1 = a0 << 0x11
153561: d3 78 0b                 a4 = a1 ^ a0
153564: 3e 0b 70 02 03           u64 [0x30270] = a4
153569: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
153573: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
153577: ab 78 7a ff              jump @11014 if a1 != a0
      :                          @11017
153581: 95 17 d0 01              a0 = sp + 0x1d0
153585: 7b 19 58                 u64 [sp + 0x58] = a2
153588: 7b 1b 50                 u64 [sp + 0x50] = a4
153591: 50 20 4a 08 11 fc fd     ra = 2122, jump @1605
      :                          @11018 [@dyn 1061]
153598: 82 1b 50                 a4 = u64 [sp + 0x50]
153601: 82 19 58                 a2 = u64 [sp + 0x58]
153604: 33 03 64                 t1 = 0x64
153607: 33 0c 70 02 03           a5 = 0x30270
153612: 82 12 40                 t0 = u64 [sp + 0x40]
153615: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
153619: 28 50 ff                 jump @11014
      :                          @11019 [@dyn 1062]
153622: 3a 08 70 02 03           a1 = u64 [0x30270]
153627: 97 89 0d                 a2 = a1 << 0xd
153630: d3 98 08                 a1 = a1 ^ a2
153633: 98 89 07                 a2 = a1 >> 0x7
153636: d3 98 08                 a1 = a1 ^ a2
153639: 97 89 11                 a2 = a1 << 0x11
153642: d3 98 08                 a1 = a1 ^ a2
153645: 3a 09 58 01 03           a2 = u64 [0x30158]
153650: 3a 0a 70 01 03           a3 = u64 [0x30170]
153655: 3e 08 70 02 03           u64 [0x30270] = a1
153660: ca 98 07                 a0 = a1 * a2
153663: d6 a7 08                 a1 = a0 mulhu a3
153666: 98 88 0b                 a1 = a1 >> 0xb
153669: 96 88 10 27              a1 = a1 * 0x2710
153673: c9 87 07                 a0 = a0 - a1
153676: 86 77 01                 a0 = a0 | 0x1
153679: 95 77 02                 a0 = a0 + 0x2
153682: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
153686: 50 20 4e 08 e9 48 fe     ra = 2126, jump @2886
      :                          @11020 [@dyn 1063]
153693: 78 17 10 01              u8 [sp + 0x110] = a0
153697: 95 17 d0 01              a0 = sp + 0x1d0
153701: 7b 17 28 02              u64 [sp + 0x228] = a0
153705: 33 07 28 0c              a0 = 0xc28
153709: 7b 17 30 02              u64 [sp + 0x230] = a0
153713: 95 17 10 01              a0 = sp + 0x110
153717: 7b 17 38 02              u64 [sp + 0x238] = a0
153721: 33 07 80 0c              a0 = 0xc80
153725: 7b 17 40 02              u64 [sp + 0x240] = a0
153729: 33 07 40 1c 01           a0 = 0x11c40
153734: 7b 17 80 02              u64 [sp + 0x280] = a0
153738: 49 21 88 02 02           u64 [sp + 648] = 0x2
153743: 49 21 a0 02              u64 [sp + 672] = 0
153747: 95 18 28 02              a1 = sp + 0x228
153751: 7b 18 90 02              u64 [sp + 0x290] = a1
153755: 49 21 98 02 02           u64 [sp + 664] = 0x2
153760: 95 17 f8 01              a0 = sp + 0x1f8
153764: 95 18 80 02              a1 = sp + 0x280
153768: 50 20 50 08 9f f6 fd     ra = 2128, jump @1491
      :                          @11021 [@dyn 1064]
153775: 82 16 00 02              s1 = u64 [sp + 0x200]
153779: 82 1b 08 02              a4 = u64 [sp + 0x208]
153783: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
153787: 7b 17 60                 u64 [sp + 0x60] = a0
153790: 33 07 02                 a0 = 0x2
153793: 33 08                    a1 = 0
153795: 33 09                    a2 = 0
153797: 64 6a                    a3 = s1
153799: 33 00 52 08              ra = 0x852
153803: 0a 64                    ecalli 100 // 'log'
153805: 01                       fallthrough
      :                          @11022 [@dyn 1065]
153806: 82 1c 60                 a5 = u64 [sp + 0x60]
153809: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
153814: 55 38 00 00 f0 0a        jump @11024 if a1 >=u 4293918720
      :                          @11023
153820: 28 0f 89 00              jump @12862
      :                          @11024
153824: 33 07 b0 02 03           a0 = 0x302b0
153829: 95 77 00 00 10           a0 = a0 + 0x100000
153834: 01                       fallthrough
      :                          @11025
153835: 82 78                    a1 = u64 [a0]
153837: c9 87 09                 a2 = a0 - a1
153840: aa 69 07                 jump @11027 if a2 == s1
      :                          @11026
153843: 28 f8 88 00              jump @12862
      :                          @11027
153847: c9 c8 09                 a2 = a1 - a5
153850: 01                       fallthrough
      :                          @11028
153851: 82 7a                    a3 = u64 [a0]
153853: ab 8a ee                 jump @11025 if a3 != a1
      :                          @11029
153856: 7b 79                    u64 [a0] = a2
153858: 33 0b                    a4 = 0
153860: 01                       fallthrough
      :                          @11030
153861: ab 8a e6                 jump @11025 if a3 != a1
      :                          @11031
153864: 28 e3 88 00              jump @12862
      :                          @11032 [@dyn 1066]
153868: 3a 08 70 02 03           a1 = u64 [0x30270]
153873: 97 89 0d                 a2 = a1 << 0xd
153876: d3 98 08                 a1 = a1 ^ a2
153879: 98 89 07                 a2 = a1 >> 0x7
153882: d3 98 08                 a1 = a1 ^ a2
153885: 97 89 11                 a2 = a1 << 0x11
153888: d3 98 08                 a1 = a1 ^ a2
153891: 3a 09 58 01 03           a2 = u64 [0x30158]
153896: 3a 0a b0 01 03           a3 = u64 [0x301b0]
153901: 3e 08 70 02 03           u64 [0x30270] = a1
153906: ca 98 07                 a0 = a1 * a2
153909: d6 a7 08                 a1 = a0 mulhu a3
153912: 98 88 12                 a1 = a1 >> 0x12
153915: 96 88 40 42 0f           a1 = a1 * 0xf4240
153920: c9 87 07                 a0 = a0 - a1
153923: 7b 17 10 01              u64 [sp + 0x110] = a0
153927: 50 20 56 08 42 4a fe     ra = 2134, jump @2944
      :                          @11033 [@dyn 1067]
153934: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
153938: 95 17 10 01              a0 = sp + 0x110
153942: 7b 17 28 02              u64 [sp + 0x228] = a0
153946: 33 07 28 0c              a0 = 0xc28
153950: 7b 17 30 02              u64 [sp + 0x230] = a0
153954: 95 18 d0 01              a1 = sp + 0x1d0
153958: 7b 18 38 02              u64 [sp + 0x238] = a1
153962: 7b 17 40 02              u64 [sp + 0x240] = a0
153966: 33 07 70 1c 01           a0 = 0x11c70
153971: 7b 17 80 02              u64 [sp + 0x280] = a0
153975: 49 21 88 02 02           u64 [sp + 648] = 0x2
153980: 49 21 a0 02              u64 [sp + 672] = 0
153984: 95 18 28 02              a1 = sp + 0x228
153988: 7b 18 90 02              u64 [sp + 0x290] = a1
153992: 49 21 98 02 02           u64 [sp + 664] = 0x2
153997: 95 17 f8 01              a0 = sp + 0x1f8
154001: 95 18 80 02              a1 = sp + 0x280
154005: 50 20 58 08 b2 f5 fd     ra = 2136, jump @1491
      :                          @11034 [@dyn 1068]
154012: 82 16 00 02              s1 = u64 [sp + 0x200]
154016: 82 1b 08 02              a4 = u64 [sp + 0x208]
154020: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
154024: 7b 17 60                 u64 [sp + 0x60] = a0
154027: 33 07 02                 a0 = 0x2
154030: 33 08                    a1 = 0
154032: 33 09                    a2 = 0
154034: 64 6a                    a3 = s1
154036: 33 00 5a 08              ra = 0x85a
154040: 0a 64                    ecalli 100 // 'log'
154042: 01                       fallthrough
      :                          @11035 [@dyn 1069]
154043: 82 1c 60                 a5 = u64 [sp + 0x60]
154046: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
154051: 55 38 00 00 f0 0a        jump @11037 if a1 >=u 4293918720
      :                          @11036
154057: 28 22 88 00              jump @12862
      :                          @11037
154061: 33 07 b0 02 03           a0 = 0x302b0
154066: 95 77 00 00 10           a0 = a0 + 0x100000
154071: 01                       fallthrough
      :                          @11038
154072: 82 78                    a1 = u64 [a0]
154074: c9 87 09                 a2 = a0 - a1
154077: aa 69 07                 jump @11040 if a2 == s1
      :                          @11039
154080: 28 0b 88 00              jump @12862
      :                          @11040
154084: c9 c8 09                 a2 = a1 - a5
154087: 01                       fallthrough
      :                          @11041
154088: 82 7a                    a3 = u64 [a0]
154090: ab 8a ee                 jump @11038 if a3 != a1
      :                          @11042
154093: 7b 79                    u64 [a0] = a2
154095: 33 0b                    a4 = 0
154097: 01                       fallthrough
      :                          @11043
154098: ab 8a e6                 jump @11038 if a3 != a1
      :                          @11044
154101: 28 f6 87 00              jump @12862
      :                          @11045 [@dyn 1070]
154105: 3a 08 70 02 03           a1 = u64 [0x30270]
154110: 97 89 0d                 a2 = a1 << 0xd
154113: d3 98 08                 a1 = a1 ^ a2
154116: 98 89 07                 a2 = a1 >> 0x7
154119: d3 89 09                 a2 = a2 ^ a1
154122: 97 9a 11                 a3 = a2 << 0x11
154125: 3a 08 58 01 03           a1 = u64 [0x30158]
154130: d3 9a 0a                 a3 = a3 ^ a2
154133: 3a 09 c8 01 03           a2 = u64 [0x301c8]
154138: ca 8a 0b                 a4 = a3 * a1
154141: 3e 0a 70 02 03           u64 [0x30270] = a3
154146: d6 9b 0a                 a3 = a4 mulhu a2
154149: c9 ab 0c                 a5 = a4 - a3
154152: 98 cc 01                 a5 = a5 >> 0x1
154155: c8 ca 0a                 a3 = a3 + a5
154158: 98 aa 06                 a3 = a3 >> 0x6
154161: 3a 06 70 02 03           s1 = u64 [0x30270]
154166: 96 aa 65                 a3 = a3 * 0x65
154169: c9 ab 0b                 a4 = a4 - a3
154172: 7b 1b 60                 u64 [sp + 0x60] = a4
154175: 97 6a 0d                 a3 = s1 << 0xd
154178: d3 6a 0a                 a3 = a3 ^ s1
154181: 98 ab 07                 a4 = a3 >> 0x7
154184: d3 ba 0a                 a3 = a3 ^ a4
154187: 97 ab 11                 a4 = a3 << 0x11
154190: d3 ba 0a                 a3 = a3 ^ a4
154193: ca 8a 06                 s1 = a3 * a1
154196: 3e 0a 70 02 03           u64 [0x30270] = a3
154201: d6 96 0a                 a3 = s1 mulhu a2
154204: c9 a6 0b                 a4 = s1 - a3
154207: 98 bb 01                 a4 = a4 >> 0x1
154210: c8 ba 0a                 a3 = a3 + a4
154213: 98 aa 06                 a3 = a3 >> 0x6
154216: 3a 0b 70 02 03           a4 = u64 [0x30270]
154221: 96 aa 65                 a3 = a3 * 0x65
154224: c9 a6 06                 s1 = s1 - a3
154227: 7b 16 58                 u64 [sp + 0x58] = s1
154230: 97 ba 0d                 a3 = a4 << 0xd
154233: d3 ba 0a                 a3 = a3 ^ a4
154236: 98 ab 07                 a4 = a3 >> 0x7
154239: d3 ba 0a                 a3 = a3 ^ a4
154242: 97 ab 11                 a4 = a3 << 0x11
154245: d3 ba 0a                 a3 = a3 ^ a4
154248: ca 8a 06                 s1 = a3 * a1
154251: 3e 0a 70 02 03           u64 [0x30270] = a3
154256: d6 96 0a                 a3 = s1 mulhu a2
154259: c9 a6 0b                 a4 = s1 - a3
154262: 98 bb 01                 a4 = a4 >> 0x1
154265: c8 ba 0a                 a3 = a3 + a4
154268: 98 aa 06                 a3 = a3 >> 0x6
154271: 3a 0b 70 02 03           a4 = u64 [0x30270]
154276: 96 aa 65                 a3 = a3 * 0x65
154279: c9 a6 06                 s1 = s1 - a3
154282: 7b 16 50                 u64 [sp + 0x50] = s1
154285: 97 ba 0d                 a3 = a4 << 0xd
154288: d3 ba 0a                 a3 = a3 ^ a4
154291: 98 ab 07                 a4 = a3 >> 0x7
154294: d3 ba 0a                 a3 = a3 ^ a4
154297: 97 ab 11                 a4 = a3 << 0x11
154300: d3 ba 0a                 a3 = a3 ^ a4
154303: ca 8a 06                 s1 = a3 * a1
154306: 3e 0a 70 02 03           u64 [0x30270] = a3
154311: d6 96 0a                 a3 = s1 mulhu a2
154314: c9 a6 0b                 a4 = s1 - a3
154317: 98 bb 01                 a4 = a4 >> 0x1
154320: c8 ba 0a                 a3 = a3 + a4
154323: 98 aa 06                 a3 = a3 >> 0x6
154326: 3a 0b 70 02 03           a4 = u64 [0x30270]
154331: 96 aa 65                 a3 = a3 * 0x65
154334: c9 a6 00                 ra = s1 - a3
154337: 97 ba 0d                 a3 = a4 << 0xd
154340: d3 ba 0a                 a3 = a3 ^ a4
154343: 98 ab 07                 a4 = a3 >> 0x7
154346: d3 ba 0a                 a3 = a3 ^ a4
154349: 97 ab 11                 a4 = a3 << 0x11
154352: d3 ba 0a                 a3 = a3 ^ a4
154355: ca 8a 06                 s1 = a3 * a1
154358: 3e 0a 70 02 03           u64 [0x30270] = a3
154363: d6 96 0a                 a3 = s1 mulhu a2
154366: c9 a6 0b                 a4 = s1 - a3
154369: 98 bb 01                 a4 = a4 >> 0x1
154372: c8 ba 0a                 a3 = a3 + a4
154375: 98 aa 06                 a3 = a3 >> 0x6
154378: 3a 0b 70 02 03           a4 = u64 [0x30270]
154383: 96 aa 65                 a3 = a3 * 0x65
154386: c9 a6 04                 t2 = s1 - a3
154389: 97 ba 0d                 a3 = a4 << 0xd
154392: d3 ba 0a                 a3 = a3 ^ a4
154395: 98 ab 07                 a4 = a3 >> 0x7
154398: d3 ba 0a                 a3 = a3 ^ a4
154401: 97 ab 11                 a4 = a3 << 0x11
154404: d3 ba 0a                 a3 = a3 ^ a4
154407: ca 8a 0b                 a4 = a3 * a1
154410: 3e 0a 70 02 03           u64 [0x30270] = a3
154415: d6 9b 0a                 a3 = a4 mulhu a2
154418: c9 ab 06                 s1 = a4 - a3
154421: 98 66 01                 s1 = s1 >> 0x1
154424: c8 6a 0a                 a3 = a3 + s1
154427: 3a 07 70 02 03           a0 = u64 [0x30270]
154432: 98 aa 06                 a3 = a3 >> 0x6
154435: 96 aa 65                 a3 = a3 * 0x65
154438: c9 ab 06                 s1 = a4 - a3
154441: 97 7a 0d                 a3 = a0 << 0xd
154444: d3 a7 07                 a0 = a0 ^ a3
154447: 98 7a 07                 a3 = a0 >> 0x7
154450: d3 a7 07                 a0 = a0 ^ a3
154453: 97 7a 11                 a3 = a0 << 0x11
154456: d3 a7 07                 a0 = a0 ^ a3
154459: 3e 07 70 02 03           u64 [0x30270] = a0
154464: ca 87 07                 a0 = a0 * a1
154467: d6 97 0a                 a3 = a0 mulhu a2
154470: c9 a7 0b                 a4 = a0 - a3
154473: 98 bb 01                 a4 = a4 >> 0x1
154476: c8 ba 0a                 a3 = a3 + a4
154479: 3a 0b 70 02 03           a4 = u64 [0x30270]
154484: 98 aa 06                 a3 = a3 >> 0x6
154487: 96 aa 65                 a3 = a3 * 0x65
154490: c9 a7 0c                 a5 = a0 - a3
154493: 97 ba 0d                 a3 = a4 << 0xd
154496: d3 ba 0a                 a3 = a3 ^ a4
154499: 98 ab 07                 a4 = a3 >> 0x7
154502: d3 ba 0a                 a3 = a3 ^ a4
154505: 97 ab 11                 a4 = a3 << 0x11
154508: d3 ba 0a                 a3 = a3 ^ a4
154511: 3e 0a 70 02 03           u64 [0x30270] = a3
154516: ca 8a 07                 a0 = a3 * a1
154519: d6 97 0b                 a4 = a0 mulhu a2
154522: c9 b7 0a                 a3 = a0 - a4
154525: 98 aa 01                 a3 = a3 >> 0x1
154528: c8 ba 0a                 a3 = a3 + a4
154531: 3a 0b 70 02 03           a4 = u64 [0x30270]
154536: 98 aa 06                 a3 = a3 >> 0x6
154539: 96 aa 65                 a3 = a3 * 0x65
154542: c9 a7 0a                 a3 = a0 - a3
154545: 97 b7 0d                 a0 = a4 << 0xd
154548: d3 b7 07                 a0 = a0 ^ a4
154551: 98 7b 07                 a4 = a0 >> 0x7
154554: d3 b7 07                 a0 = a0 ^ a4
154557: 97 7b 11                 a4 = a0 << 0x11
154560: d3 b7 07                 a0 = a0 ^ a4
154563: 3e 07 70 02 03           u64 [0x30270] = a0
154568: ca 87 07                 a0 = a0 * a1
154571: d6 97 08                 a1 = a0 mulhu a2
154574: c9 87 09                 a2 = a0 - a1
154577: 98 99 01                 a2 = a2 >> 0x1
154580: c8 98 08                 a1 = a1 + a2
154583: 98 88 06                 a1 = a1 >> 0x6
154586: 96 88 65                 a1 = a1 * 0x65
154589: c9 87 07                 a0 = a0 - a1
154592: 82 18 60                 a1 = u64 [sp + 0x60]
154595: 95 88 ce                 a1 = a1 + 0xffffffffffffffce
154598: 7b 18 80 02              u64 [sp + 0x280] = a1
154602: 82 18 58                 a1 = u64 [sp + 0x58]
154605: 95 88 ce                 a1 = a1 + 0xffffffffffffffce
154608: 7b 18 88 02              u64 [sp + 0x288] = a1
154612: 82 18 50                 a1 = u64 [sp + 0x50]
154615: 95 88 ce                 a1 = a1 + 0xffffffffffffffce
154618: 7b 18 90 02              u64 [sp + 0x290] = a1
154622: 95 08 ce                 a1 = ra + 0xffffffffffffffce
154625: 7b 18 98 02              u64 [sp + 0x298] = a1
154629: 95 48 ce                 a1 = t2 + 0xffffffffffffffce
154632: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
154636: 95 68 ce                 a1 = s1 + 0xffffffffffffffce
154639: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
154643: 95 c8 ce                 a1 = a5 + 0xffffffffffffffce
154646: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
154650: 95 a8 ce                 a1 = a3 + 0xffffffffffffffce
154653: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
154657: 95 77 ce                 a0 = a0 + 0xffffffffffffffce
154660: 7b 17 c0 02              u64 [sp + 0x2c0] = a0
154664: 95 17 80 02              a0 = sp + 0x280
154668: 28 7e 47 fe              jump @2951
      :                          @11046
154672: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
154676: 95 17 d0 01              a0 = sp + 0x1d0
154680: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
154684: 33 07 94 0c              a0 = 0xc94
154688: 7b 17 00 02              u64 [sp + 0x200] = a0
154692: 33 07 a8 1c 01           a0 = 0x11ca8
154697: 7b 17 80 02              u64 [sp + 0x280] = a0
154701: 49 21 88 02 01           u64 [sp + 648] = 0x1
154706: 49 21 a0 02              u64 [sp + 672] = 0
154710: 95 18 f8 01              a1 = sp + 0x1f8
154714: 7b 18 90 02              u64 [sp + 0x290] = a1
154718: 49 21 98 02 01           u64 [sp + 664] = 0x1
154723: 95 17 28 02              a0 = sp + 0x228
154727: 95 18 80 02              a1 = sp + 0x280
154731: 50 20 5e 08 dc f2 fd     ra = 2142, jump @1491
      :                          @11047 [@dyn 1071]
154738: 82 16 30 02              s1 = u64 [sp + 0x230]
154742: 82 1b 38 02              a4 = u64 [sp + 0x238]
154746: 82 17 28 02              a0 = u64 [sp + 0x228]
154750: 7b 17 60                 u64 [sp + 0x60] = a0
154753: 33 07 02                 a0 = 0x2
154756: 33 08                    a1 = 0
154758: 33 09                    a2 = 0
154760: 64 6a                    a3 = s1
154762: 33 00 60 08              ra = 0x860
154766: 0a 64                    ecalli 100 // 'log'
154768: 01                       fallthrough
      :                          @11048 [@dyn 1072]
154769: 82 1c 60                 a5 = u64 [sp + 0x60]
154772: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
154777: 55 38 00 00 f0 0a        jump @11050 if a1 >=u 4293918720
      :                          @11049
154783: 28 4c 85 00              jump @12862
      :                          @11050
154787: 33 07 b0 02 03           a0 = 0x302b0
154792: 95 77 00 00 10           a0 = a0 + 0x100000
154797: 01                       fallthrough
      :                          @11051
154798: 82 78                    a1 = u64 [a0]
154800: c9 87 09                 a2 = a0 - a1
154803: aa 69 07                 jump @11053 if a2 == s1
      :                          @11052
154806: 28 35 85 00              jump @12862
      :                          @11053
154810: c9 c8 09                 a2 = a1 - a5
154813: 01                       fallthrough
      :                          @11054
154814: 82 7a                    a3 = u64 [a0]
154816: ab 8a ee                 jump @11051 if a3 != a1
      :                          @11055
154819: 7b 79                    u64 [a0] = a2
154821: 33 0b                    a4 = 0
154823: 01                       fallthrough
      :                          @11056
154824: ab 8a e6                 jump @11051 if a3 != a1
      :                          @11057
154827: 28 20 85 00              jump @12862
      :                          @11058 [@dyn 1073]
154831: 3a 08 70 02 03           a1 = u64 [0x30270]
154836: 97 89 0d                 a2 = a1 << 0xd
154839: d3 98 08                 a1 = a1 ^ a2
154842: 98 89 07                 a2 = a1 >> 0x7
154845: d3 89 09                 a2 = a2 ^ a1
154848: 97 9a 11                 a3 = a2 << 0x11
154851: 3a 08 58 01 03           a1 = u64 [0x30158]
154856: d3 9a 0a                 a3 = a3 ^ a2
154859: 3a 09 c8 01 03           a2 = u64 [0x301c8]
154864: ca 8a 0b                 a4 = a3 * a1
154867: 3e 0a 70 02 03           u64 [0x30270] = a3
154872: d6 9b 0a                 a3 = a4 mulhu a2
154875: c9 ab 0c                 a5 = a4 - a3
154878: 98 cc 01                 a5 = a5 >> 0x1
154881: c8 ca 0a                 a3 = a3 + a5
154884: 98 ac 06                 a5 = a3 >> 0x6
154887: 33 03 65                 t1 = 0x65
154890: ca 3c 0c                 a5 = a5 * t1
154893: 3a 06 70 02 03           s1 = u64 [0x30270]
154898: c9 cb 0b                 a4 = a4 - a5
154901: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
154904: 97 6c 0d                 a5 = s1 << 0xd
154907: d3 c6 06                 s1 = s1 ^ a5
154910: 98 6c 07                 a5 = s1 >> 0x7
154913: d3 c6 06                 s1 = s1 ^ a5
154916: 97 6c 11                 a5 = s1 << 0x11
154919: d3 6c 0c                 a5 = a5 ^ s1
154922: ca 8c 0b                 a4 = a5 * a1
154925: 3e 0c 70 02 03           u64 [0x30270] = a5
154930: d6 9b 0c                 a5 = a4 mulhu a2
154933: c9 cb 06                 s1 = a4 - a5
154936: 98 66 01                 s1 = s1 >> 0x1
154939: c8 6c 0c                 a5 = a5 + s1
154942: 98 cc 06                 a5 = a5 >> 0x6
154945: ca 3c 0c                 a5 = a5 * t1
154948: 3a 06 70 02 03           s1 = u64 [0x30270]
154953: c9 cb 0b                 a4 = a4 - a5
154956: 95 bc ce                 a5 = a4 + 0xffffffffffffffce
154959: 97 6b 0d                 a4 = s1 << 0xd
154962: d3 b6 06                 s1 = s1 ^ a4
154965: 98 6b 07                 a4 = s1 >> 0x7
154968: d3 b6 06                 s1 = s1 ^ a4
154971: 97 6b 11                 a4 = s1 << 0x11
154974: d3 6b 0b                 a4 = a4 ^ s1
154977: ca 8b 0a                 a3 = a4 * a1
154980: 3e 0b 70 02 03           u64 [0x30270] = a4
154985: d6 9a 0b                 a4 = a3 mulhu a2
154988: c9 ba 06                 s1 = a3 - a4
154991: 98 66 01                 s1 = s1 >> 0x1
154994: c8 6b 0b                 a4 = a4 + s1
154997: 98 bb 06                 a4 = a4 >> 0x6
155000: ca 3b 0b                 a4 = a4 * t1
155003: 3a 06 70 02 03           s1 = u64 [0x30270]
155008: c9 ba 0a                 a3 = a3 - a4
155011: 95 aa ce                 a3 = a3 + 0xffffffffffffffce
155014: 97 6b 0d                 a4 = s1 << 0xd
155017: d3 b6 06                 s1 = s1 ^ a4
155020: 98 6b 07                 a4 = s1 >> 0x7
155023: d3 b6 06                 s1 = s1 ^ a4
155026: 97 6b 11                 a4 = s1 << 0x11
155029: d3 6b 0b                 a4 = a4 ^ s1
155032: ca 8b 08                 a1 = a4 * a1
155035: 3e 0b 70 02 03           u64 [0x30270] = a4
155040: d6 98 07                 a0 = a1 mulhu a2
155043: c9 78 09                 a2 = a1 - a0
155046: 98 99 01                 a2 = a2 >> 0x1
155049: c8 97 07                 a0 = a0 + a2
155052: 98 77 06                 a0 = a0 >> 0x6
155055: ca 37 07                 a0 = a0 * t1
155058: c9 78 08                 a1 = a1 - a0
155061: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
155064: 7b 1c 50 01              u64 [sp + 0x150] = a5
155068: 7b 12 48 01              u64 [sp + 0x148] = t0
155072: 7b 1a 58 01              u64 [sp + 0x158] = a3
155076: 7b 17 60 01              u64 [sp + 0x160] = a0
155080: 95 17 48 01              a0 = sp + 0x148
155084: 50 20 64 08 98 46 fe     ra = 2148, jump @2959
      :                          @11059 [@dyn 1074]
155091: 7b 17 10 01              u64 [sp + 0x110] = a0
155095: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
155099: 95 17 10 01              a0 = sp + 0x110
155103: 7b 17 28 02              u64 [sp + 0x228] = a0
155107: 33 07 94 0c              a0 = 0xc94
155111: 7b 17 30 02              u64 [sp + 0x230] = a0
155115: 95 18 d0 01              a1 = sp + 0x1d0
155119: 7b 18 38 02              u64 [sp + 0x238] = a1
155123: 7b 17 40 02              u64 [sp + 0x240] = a0
155127: 33 07 d8 1c 01           a0 = 0x11cd8
155132: 7b 17 80 02              u64 [sp + 0x280] = a0
155136: 49 21 88 02 03           u64 [sp + 648] = 0x3
155141: 49 21 a0 02              u64 [sp + 672] = 0
155145: 95 17 28 02              a0 = sp + 0x228
155149: 7b 17 90 02              u64 [sp + 0x290] = a0
155153: 49 21 98 02 02           u64 [sp + 664] = 0x2
155158: 95 17 f8 01              a0 = sp + 0x1f8
155162: 95 18 80 02              a1 = sp + 0x280
155166: 50 20 66 08 29 f1 fd     ra = 2150, jump @1491
      :                          @11060 [@dyn 1075]
155173: 82 16 00 02              s1 = u64 [sp + 0x200]
155177: 82 1b 08 02              a4 = u64 [sp + 0x208]
155181: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
155185: 7b 17 60                 u64 [sp + 0x60] = a0
155188: 33 07 02                 a0 = 0x2
155191: 33 08                    a1 = 0
155193: 33 09                    a2 = 0
155195: 64 6a                    a3 = s1
155197: 33 00 68 08              ra = 0x868
155201: 0a 64                    ecalli 100 // 'log'
155203: 01                       fallthrough
      :                          @11061 [@dyn 1076]
155204: 82 1c 60                 a5 = u64 [sp + 0x60]
155207: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
155212: 55 38 00 00 f0 0a        jump @11063 if a1 >=u 4293918720
      :                          @11062
155218: 28 99 83 00              jump @12862
      :                          @11063
155222: 33 07 b0 02 03           a0 = 0x302b0
155227: 95 77 00 00 10           a0 = a0 + 0x100000
155232: 01                       fallthrough
      :                          @11064
155233: 82 78                    a1 = u64 [a0]
155235: c9 87 09                 a2 = a0 - a1
155238: aa 69 07                 jump @11066 if a2 == s1
      :                          @11065
155241: 28 82 83 00              jump @12862
      :                          @11066
155245: c9 c8 09                 a2 = a1 - a5
155248: 01                       fallthrough
      :                          @11067
155249: 82 7a                    a3 = u64 [a0]
155251: ab 8a ee                 jump @11064 if a3 != a1
      :                          @11068
155254: 7b 79                    u64 [a0] = a2
155256: 33 0b                    a4 = 0
155258: 01                       fallthrough
      :                          @11069
155259: ab 8a e6                 jump @11064 if a3 != a1
      :                          @11070
155262: 28 6d 83 00              jump @12862
      :                          @11071 [@dyn 1077]
155266: 3a 08 70 02 03           a1 = u64 [0x30270]
155271: 97 89 0d                 a2 = a1 << 0xd
155274: d3 98 08                 a1 = a1 ^ a2
155277: 98 89 07                 a2 = a1 >> 0x7
155280: d3 89 09                 a2 = a2 ^ a1
155283: 97 9a 11                 a3 = a2 << 0x11
155286: 3a 08 58 01 03           a1 = u64 [0x30158]
155291: d3 9a 0a                 a3 = a3 ^ a2
155294: 3a 09 c8 01 03           a2 = u64 [0x301c8]
155299: ca 8a 0b                 a4 = a3 * a1
155302: 3e 0a 70 02 03           u64 [0x30270] = a3
155307: d6 9b 0a                 a3 = a4 mulhu a2
155310: c9 ab 0c                 a5 = a4 - a3
155313: 98 cc 01                 a5 = a5 >> 0x1
155316: c8 ca 0a                 a3 = a3 + a5
155319: 98 ac 06                 a5 = a3 >> 0x6
155322: 33 03 65                 t1 = 0x65
155325: ca 3c 0c                 a5 = a5 * t1
155328: 3a 06 70 02 03           s1 = u64 [0x30270]
155333: c9 cb 0b                 a4 = a4 - a5
155336: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
155339: 97 6c 0d                 a5 = s1 << 0xd
155342: d3 c6 06                 s1 = s1 ^ a5
155345: 98 6c 07                 a5 = s1 >> 0x7
155348: d3 c6 06                 s1 = s1 ^ a5
155351: 97 6c 11                 a5 = s1 << 0x11
155354: d3 6c 0c                 a5 = a5 ^ s1
155357: ca 8c 0b                 a4 = a5 * a1
155360: 3e 0c 70 02 03           u64 [0x30270] = a5
155365: d6 9b 0c                 a5 = a4 mulhu a2
155368: c9 cb 06                 s1 = a4 - a5
155371: 98 66 01                 s1 = s1 >> 0x1
155374: c8 6c 0c                 a5 = a5 + s1
155377: 98 cc 06                 a5 = a5 >> 0x6
155380: ca 3c 0c                 a5 = a5 * t1
155383: 3a 06 70 02 03           s1 = u64 [0x30270]
155388: c9 cb 0b                 a4 = a4 - a5
155391: 95 bc ce                 a5 = a4 + 0xffffffffffffffce
155394: 97 6b 0d                 a4 = s1 << 0xd
155397: d3 b6 06                 s1 = s1 ^ a4
155400: 98 6b 07                 a4 = s1 >> 0x7
155403: d3 b6 06                 s1 = s1 ^ a4
155406: 97 6b 11                 a4 = s1 << 0x11
155409: d3 6b 0b                 a4 = a4 ^ s1
155412: ca 8b 0a                 a3 = a4 * a1
155415: 3e 0b 70 02 03           u64 [0x30270] = a4
155420: d6 9a 0b                 a4 = a3 mulhu a2
155423: c9 ba 06                 s1 = a3 - a4
155426: 98 66 01                 s1 = s1 >> 0x1
155429: c8 6b 0b                 a4 = a4 + s1
155432: 98 bb 06                 a4 = a4 >> 0x6
155435: ca 3b 0b                 a4 = a4 * t1
155438: 3a 06 70 02 03           s1 = u64 [0x30270]
155443: c9 ba 0a                 a3 = a3 - a4
155446: 95 aa ce                 a3 = a3 + 0xffffffffffffffce
155449: 97 6b 0d                 a4 = s1 << 0xd
155452: d3 b6 06                 s1 = s1 ^ a4
155455: 98 6b 07                 a4 = s1 >> 0x7
155458: d3 b6 06                 s1 = s1 ^ a4
155461: 97 6b 11                 a4 = s1 << 0x11
155464: d3 6b 0b                 a4 = a4 ^ s1
155467: ca 8b 08                 a1 = a4 * a1
155470: 3e 0b 70 02 03           u64 [0x30270] = a4
155475: d6 98 07                 a0 = a1 mulhu a2
155478: c9 78 09                 a2 = a1 - a0
155481: 98 99 01                 a2 = a2 >> 0x1
155484: c8 97 07                 a0 = a0 + a2
155487: 98 77 06                 a0 = a0 >> 0x6
155490: ca 37 07                 a0 = a0 * t1
155493: c9 78 08                 a1 = a1 - a0
155496: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
155499: 7b 1c 70 01              u64 [sp + 0x170] = a5
155503: 7b 12 68 01              u64 [sp + 0x168] = t0
155507: 7b 1a 78 01              u64 [sp + 0x178] = a3
155511: 7b 17 80 01              u64 [sp + 0x180] = a0
155515: 95 17 f8 01              a0 = sp + 0x1f8
155519: 95 18 68 01              a1 = sp + 0x168
155523: 95 16 f8 01              s1 = sp + 0x1f8
155527: 50 20 6c 08 4e 45 fe     ra = 2156, jump @2974
      :                          @11072 [@dyn 1078]
155534: 95 17 00 02              a0 = sp + 0x200
155538: 95 18 08 02              a1 = sp + 0x208
155542: 95 19 10 02              a2 = sp + 0x210
155546: 7b 16 80 02              u64 [sp + 0x280] = s1
155550: 33 0a 94 0c              a3 = 0xc94
155554: 7b 1a 88 02              u64 [sp + 0x288] = a3
155558: 7b 17 90 02              u64 [sp + 0x290] = a0
155562: 7b 1a 98 02              u64 [sp + 0x298] = a3
155566: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
155570: 7b 1a a8 02              u64 [sp + 0x2a8] = a3
155574: 7b 19 b0 02              u64 [sp + 0x2b0] = a2
155578: 7b 1a b8 02              u64 [sp + 0x2b8] = a3
155582: 33 07 30 1d 01           a0 = 0x11d30
155587: 7b 17 28 02              u64 [sp + 0x228] = a0
155591: 49 21 30 02 05           u64 [sp + 560] = 0x5
155596: 49 21 48 02              u64 [sp + 584] = 0
155600: 95 17 80 02              a0 = sp + 0x280
155604: 7b 17 38 02              u64 [sp + 0x238] = a0
155608: 49 21 40 02 04           u64 [sp + 576] = 0x4
155613: 95 17 d0 01              a0 = sp + 0x1d0
155617: 95 18 28 02              a1 = sp + 0x228
155621: 50 20 6e 08 62 ef fd     ra = 2158, jump @1491
      :                          @11073 [@dyn 1079]
155628: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
155632: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
155636: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
155640: 7b 17 60                 u64 [sp + 0x60] = a0
155643: 33 07 02                 a0 = 0x2
155646: 33 08                    a1 = 0
155648: 33 09                    a2 = 0
155650: 64 6a                    a3 = s1
155652: 33 00 70 08              ra = 0x870
155656: 0a 64                    ecalli 100 // 'log'
155658: 01                       fallthrough
      :                          @11074 [@dyn 1080]
155659: 82 1c 60                 a5 = u64 [sp + 0x60]
155662: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
155667: 55 38 00 00 f0 0a        jump @11076 if a1 >=u 4293918720
      :                          @11075
155673: 28 d2 81 00              jump @12862
      :                          @11076
155677: 33 07 b0 02 03           a0 = 0x302b0
155682: 95 77 00 00 10           a0 = a0 + 0x100000
155687: 01                       fallthrough
      :                          @11077
155688: 82 78                    a1 = u64 [a0]
155690: c9 87 09                 a2 = a0 - a1
155693: aa 69 07                 jump @11079 if a2 == s1
      :                          @11078
155696: 28 bb 81 00              jump @12862
      :                          @11079
155700: c9 c8 09                 a2 = a1 - a5
155703: 01                       fallthrough
      :                          @11080
155704: 82 7a                    a3 = u64 [a0]
155706: ab 8a ee                 jump @11077 if a3 != a1
      :                          @11081
155709: 7b 79                    u64 [a0] = a2
155711: 33 0b                    a4 = 0
155713: 01                       fallthrough
      :                          @11082
155714: ab 8a e6                 jump @11077 if a3 != a1
      :                          @11083
155717: 28 a6 81 00              jump @12862
      :                          @11084 [@dyn 1081]
155721: 3a 08 70 02 03           a1 = u64 [0x30270]
155726: 97 89 0d                 a2 = a1 << 0xd
155729: d3 98 08                 a1 = a1 ^ a2
155732: 98 89 07                 a2 = a1 >> 0x7
155735: d3 98 08                 a1 = a1 ^ a2
155738: 97 89 11                 a2 = a1 << 0x11
155741: 3a 04 58 01 03           t2 = u64 [0x30158]
155746: d3 98 08                 a1 = a1 ^ a2
155749: 3a 0c c8 01 03           a5 = u64 [0x301c8]
155754: ca 48 09                 a2 = a1 * t2
155757: 3e 08 70 02 03           u64 [0x30270] = a1
155762: d6 c9 08                 a1 = a2 mulhu a5
155765: c9 89 0a                 a3 = a2 - a1
155768: 98 aa 01                 a3 = a3 >> 0x1
155771: c8 a8 08                 a1 = a1 + a3
155774: 98 88 06                 a1 = a1 >> 0x6
155777: 96 88 65                 a1 = a1 * 0x65
155780: 3a 0a 70 02 03           a3 = u64 [0x30270]
155785: c9 89 09                 a2 = a2 - a1
155788: 95 98 ce                 a1 = a2 + 0xffffffffffffffce
155791: 97 a9 0d                 a2 = a3 << 0xd
155794: d3 a9 09                 a2 = a2 ^ a3
155797: 98 9a 07                 a3 = a2 >> 0x7
155800: d3 a9 09                 a2 = a2 ^ a3
155803: 97 9a 11                 a3 = a2 << 0x11
155806: d3 a9 09                 a2 = a2 ^ a3
155809: ca 49 06                 s1 = a2 * t2
155812: 3e 09 70 02 03           u64 [0x30270] = a2
155817: d6 c6 09                 a2 = s1 mulhu a5
155820: c9 96 0a                 a3 = s1 - a2
155823: 98 aa 01                 a3 = a3 >> 0x1
155826: c8 a9 09                 a2 = a2 + a3
155829: 98 99 06                 a2 = a2 >> 0x6
155832: 96 99 65                 a2 = a2 * 0x65
155835: 3a 07 70 02 03           a0 = u64 [0x30270]
155840: c9 96 06                 s1 = s1 - a2
155843: 95 69 ce                 a2 = s1 + 0xffffffffffffffce
155846: 97 7a 0d                 a3 = a0 << 0xd
155849: d3 a7 07                 a0 = a0 ^ a3
155852: 98 7a 07                 a3 = a0 >> 0x7
155855: d3 a7 07                 a0 = a0 ^ a3
155858: 97 7a 11                 a3 = a0 << 0x11
155861: d3 a7 07                 a0 = a0 ^ a3
155864: ca 47 06                 s1 = a0 * t2
155867: 3e 07 70 02 03           u64 [0x30270] = a0
155872: d6 c6 07                 a0 = s1 mulhu a5
155875: c9 76 0a                 a3 = s1 - a0
155878: 98 aa 01                 a3 = a3 >> 0x1
155881: c8 a7 07                 a0 = a0 + a3
155884: 98 77 06                 a0 = a0 >> 0x6
155887: 96 77 65                 a0 = a0 * 0x65
155890: 3a 0b 70 02 03           a4 = u64 [0x30270]
155895: c9 76 06                 s1 = s1 - a0
155898: 95 6a ce                 a3 = s1 + 0xffffffffffffffce
155901: 97 b7 0d                 a0 = a4 << 0xd
155904: d3 b7 07                 a0 = a0 ^ a4
155907: 98 7b 07                 a4 = a0 >> 0x7
155910: d3 b7 07                 a0 = a0 ^ a4
155913: 97 7b 11                 a4 = a0 << 0x11
155916: d3 b7 07                 a0 = a0 ^ a4
155919: ca 47 0b                 a4 = a0 * t2
155922: 3e 07 70 02 03           u64 [0x30270] = a0
155927: d6 cb 07                 a0 = a4 mulhu a5
155930: c9 7b 0c                 a5 = a4 - a0
155933: 98 cc 01                 a5 = a5 >> 0x1
155936: c8 c7 07                 a0 = a0 + a5
155939: 98 77 06                 a0 = a0 >> 0x6
155942: 96 77 65                 a0 = a0 * 0x65
155945: c9 7b 0b                 a4 = a4 - a0
155948: 95 bb ce                 a4 = a4 + 0xffffffffffffffce
155951: 95 17 80 02              a0 = sp + 0x280
155955: 50 20 74 08 66 44 fe     ra = 2164, jump @2987
      :                          @11085 [@dyn 1082]
155962: 82 17 80 02              a0 = u64 [sp + 0x280]
155966: 82 18 88 02              a1 = u64 [sp + 0x288]
155970: 82 19 90 02              a2 = u64 [sp + 0x290]
155974: 82 1a 98 02              a3 = u64 [sp + 0x298]
155978: 7b 17 10 01              u64 [sp + 0x110] = a0
155982: 7b 18 18 01              u64 [sp + 0x118] = a1
155986: 7b 19 d0 01              u64 [sp + 0x1d0] = a2
155990: 7b 1a d8 01              u64 [sp + 0x1d8] = a3
155994: 95 17 10 01              a0 = sp + 0x110
155998: 7b 17 28 02              u64 [sp + 0x228] = a0
156002: 33 07 8e 01              a0 = 0x18e
156006: 7b 17 30 02              u64 [sp + 0x230] = a0
156010: 95 18 d0 01              a1 = sp + 0x1d0
156014: 7b 18 38 02              u64 [sp + 0x238] = a1
156018: 7b 17 40 02              u64 [sp + 0x240] = a0
156022: 33 07 98 1d 01           a0 = 0x11d98
156027: 7b 17 80 02              u64 [sp + 0x280] = a0
156031: 49 21 88 02 02           u64 [sp + 648] = 0x2
156036: 49 21 a0 02              u64 [sp + 672] = 0
156040: 95 18 28 02              a1 = sp + 0x228
156044: 7b 18 90 02              u64 [sp + 0x290] = a1
156048: 49 21 98 02 02           u64 [sp + 664] = 0x2
156053: 95 17 f8 01              a0 = sp + 0x1f8
156057: 95 18 80 02              a1 = sp + 0x280
156061: 50 20 76 08 aa ed fd     ra = 2166, jump @1491
      :                          @11086 [@dyn 1083]
156068: 82 16 00 02              s1 = u64 [sp + 0x200]
156072: 82 1b 08 02              a4 = u64 [sp + 0x208]
156076: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
156080: 7b 17 60                 u64 [sp + 0x60] = a0
156083: 33 07 02                 a0 = 0x2
156086: 33 08                    a1 = 0
156088: 33 09                    a2 = 0
156090: 64 6a                    a3 = s1
156092: 33 00 78 08              ra = 0x878
156096: 0a 64                    ecalli 100 // 'log'
156098: 01                       fallthrough
      :                          @11087 [@dyn 1084]
156099: 82 1c 60                 a5 = u64 [sp + 0x60]
156102: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
156107: 55 38 00 00 f0 0a        jump @11089 if a1 >=u 4293918720
      :                          @11088
156113: 28 1a 80 00              jump @12862
      :                          @11089
156117: 33 07 b0 02 03           a0 = 0x302b0
156122: 95 77 00 00 10           a0 = a0 + 0x100000
156127: 01                       fallthrough
      :                          @11090
156128: 82 78                    a1 = u64 [a0]
156130: c9 87 09                 a2 = a0 - a1
156133: aa 69 07                 jump @11092 if a2 == s1
      :                          @11091
156136: 28 03 80 00              jump @12862
      :                          @11092
156140: c9 c8 09                 a2 = a1 - a5
156143: 01                       fallthrough
      :                          @11093
156144: 82 7a                    a3 = u64 [a0]
156146: ab 8a ee                 jump @11090 if a3 != a1
      :                          @11094
156149: 7b 79                    u64 [a0] = a2
156151: 33 0b                    a4 = 0
156153: 01                       fallthrough
      :                          @11095
156154: ab 8a e6                 jump @11090 if a3 != a1
      :                          @11096
156157: 28 ee 7f                 jump @12862
      :                          @11097 [@dyn 1085]
156160: 3a 08 70 02 03           a1 = u64 [0x30270]
156165: 97 89 0d                 a2 = a1 << 0xd
156168: d3 89 09                 a2 = a2 ^ a1
156171: 98 9a 07                 a3 = a2 >> 0x7
156174: 3a 08 58 01 03           a1 = u64 [0x30158]
156179: d3 a9 09                 a2 = a2 ^ a3
156182: 97 9a 11                 a3 = a2 << 0x11
156185: d3 a9 09                 a2 = a2 ^ a3
156188: ca 89 0a                 a3 = a2 * a1
156191: 3e 09 70 02 03           u64 [0x30270] = a2
156196: 7b 1a a0 01              u64 [sp + 0x1a0] = a3
156200: 3a 09 70 02 03           a2 = u64 [0x30270]
156205: 33 0b                    a4 = 0
156207: 33 0a                    a3 = 0
156209: 97 9c 0d                 a5 = a2 << 0xd
156212: d3 c9 09                 a2 = a2 ^ a5
156215: 98 9c 07                 a5 = a2 >> 0x7
156218: d3 c9 09                 a2 = a2 ^ a5
156221: 97 9c 11                 a5 = a2 << 0x11
156224: d3 c9 09                 a2 = a2 ^ a5
156227: 3a 0c b0 01 03           a5 = u64 [0x301b0]
156232: ca 89 08                 a1 = a2 * a1
156235: 3e 09 70 02 03           u64 [0x30270] = a2
156240: d6 c8 07                 a0 = a1 mulhu a5
156243: 98 77 12                 a0 = a0 >> 0x12
156246: 96 77 40 42 0f           a0 = a0 * 0xf4240
156251: c9 78 03                 t1 = a1 - a0
156254: 95 38 01                 a1 = t1 + 0x1
156257: 82 12 a0 01              t0 = u64 [sp + 0x1a0]
156261: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
156265: 33 0c 41                 a5 = 0x41
156268: 33 06 01                 s1 = 0x1
156271: 01                       fallthrough
      :                          @11098
156272: 83 c9 fe                 i32 a2 = a5 + 0xfffffffffffffffe
156275: 97 bb 01                 a4 = a4 << 0x1
156278: d0 92 07                 a0 = t0 >> a2
156281: 84 77 01                 a0 = a0 & 0x1
156284: d4 b7 07                 a0 = a0 | a4
156287: d8 73 0b                 a4 = t1 <u a0
156290: cf 96 09                 a2 = s1 << a2
156293: 93 b9                    a2 = 0 if a4 == 0
156295: d4 9a 0a                 a3 = a3 | a2
156298: 64 89                    a2 = a1
156300: 93 b9                    a2 = 0 if a4 == 0
156302: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
156305: c9 97 0b                 a4 = a0 - a2
156308: ac c6 dc                 jump @11098 if s1 <u a5
      :                          @11099
156311: 7b 1a 10 01              u64 [sp + 0x110] = a3
156315: 7b 1b d0 01              u64 [sp + 0x1d0] = a4
156319: 95 17 a0 01              a0 = sp + 0x1a0
156323: 7b 17 80 02              u64 [sp + 0x280] = a0
156327: 33 07 28 0c              a0 = 0xc28
156331: 7b 17 88 02              u64 [sp + 0x288] = a0
156335: 95 18 b8 01              a1 = sp + 0x1b8
156339: 7b 18 90 02              u64 [sp + 0x290] = a1
156343: 7b 17 98 02              u64 [sp + 0x298] = a0
156347: 95 18 10 01              a1 = sp + 0x110
156351: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
156355: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
156359: 95 18 d0 01              a1 = sp + 0x1d0
156363: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
156367: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
156371: 33 07 c8 1d 01           a0 = 0x11dc8
156376: 7b 17 28 02              u64 [sp + 0x228] = a0
156380: 49 21 30 02 04           u64 [sp + 560] = 0x4
156385: 49 21 48 02              u64 [sp + 584] = 0
156389: 95 18 80 02              a1 = sp + 0x280
156393: 7b 18 38 02              u64 [sp + 0x238] = a1
156397: 49 21 40 02 04           u64 [sp + 576] = 0x4
156402: 95 17 f8 01              a0 = sp + 0x1f8
156406: 95 18 28 02              a1 = sp + 0x228
156410: 50 20 7c 08 4d ec fd     ra = 2172, jump @1491
      :                          @11100 [@dyn 1086]
156417: 82 16 00 02              s1 = u64 [sp + 0x200]
156421: 82 1b 08 02              a4 = u64 [sp + 0x208]
156425: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
156429: 7b 17 60                 u64 [sp + 0x60] = a0
156432: 33 07 02                 a0 = 0x2
156435: 33 08                    a1 = 0
156437: 33 09                    a2 = 0
156439: 64 6a                    a3 = s1
156441: 33 00 7e 08              ra = 0x87e
156445: 0a 64                    ecalli 100 // 'log'
156447: 01                       fallthrough
      :                          @11101 [@dyn 1087]
156448: 82 1c 60                 a5 = u64 [sp + 0x60]
156451: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
156456: 55 38 00 00 f0 09        jump @11103 if a1 >=u 4293918720
      :                          @11102
156462: 28 bd 7e                 jump @12862
      :                          @11103
156465: 33 07 b0 02 03           a0 = 0x302b0
156470: 95 77 00 00 10           a0 = a0 + 0x100000
156475: 01                       fallthrough
      :                          @11104
156476: 82 78                    a1 = u64 [a0]
156478: c9 87 09                 a2 = a0 - a1
156481: aa 69 06                 jump @11106 if a2 == s1
      :                          @11105
156484: 28 a7 7e                 jump @12862
      :                          @11106
156487: c9 c8 09                 a2 = a1 - a5
156490: 01                       fallthrough
      :                          @11107
156491: 82 7a                    a3 = u64 [a0]
156493: ab 8a ef                 jump @11104 if a3 != a1
      :                          @11108
156496: 7b 79                    u64 [a0] = a2
156498: 33 0b                    a4 = 0
156500: 01                       fallthrough
      :                          @11109
156501: ab 8a e7                 jump @11104 if a3 != a1
      :                          @11110
156504: 28 93 7e                 jump @12862
      :                          @11111 [@dyn 1088]
156507: 3a 08 70 02 03           a1 = u64 [0x30270]
156512: 97 89 0d                 a2 = a1 << 0xd
156515: d3 98 08                 a1 = a1 ^ a2
156518: 98 89 07                 a2 = a1 >> 0x7
156521: d3 98 08                 a1 = a1 ^ a2
156524: 97 8a 11                 a3 = a1 << 0x11
156527: 3a 09 58 01 03           a2 = u64 [0x30158]
156532: d3 a8 08                 a1 = a1 ^ a3
156535: 3a 0a b0 01 03           a3 = u64 [0x301b0]
156540: ca 98 0b                 a4 = a1 * a2
156543: 3e 08 70 02 03           u64 [0x30270] = a1
156548: d6 ab 08                 a1 = a4 mulhu a3
156551: 98 88 12                 a1 = a1 >> 0x12
156554: 96 88 40 42 0f           a1 = a1 * 0xf4240
156559: c9 8b 0b                 a4 = a4 - a1
156562: 95 bb 01                 a4 = a4 + 0x1
156565: 7b 1b b8 01              u64 [sp + 0x1b8] = a4
156569: 3a 08 70 02 03           a1 = u64 [0x30270]
156574: 97 8a 0d                 a3 = a1 << 0xd
156577: d3 a8 08                 a1 = a1 ^ a3
156580: 98 8a 07                 a3 = a1 >> 0x7
156583: d3 a8 08                 a1 = a1 ^ a3
156586: 97 8a 11                 a3 = a1 << 0x11
156589: d3 8a 0a                 a3 = a3 ^ a1
156592: 3e 0a 70 02 03           u64 [0x30270] = a3
156597: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
156601: ca 9a 07                 a0 = a3 * a2
156604: 7b 17 10 01              u64 [sp + 0x110] = a0
156608: 50 20 82 08 32 42 fe     ra = 2178, jump @2994
      :                          @11112 [@dyn 1089]
156615: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
156619: 95 17 10 01              a0 = sp + 0x110
156623: 7b 17 80 02              u64 [sp + 0x280] = a0
156627: 33 07 28 0c              a0 = 0xc28
156631: 7b 17 88 02              u64 [sp + 0x288] = a0
156635: 95 18 b8 01              a1 = sp + 0x1b8
156639: 7b 18 90 02              u64 [sp + 0x290] = a1
156643: 7b 17 98 02              u64 [sp + 0x298] = a0
156647: 95 18 d0 01              a1 = sp + 0x1d0
156651: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
156655: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
156659: 33 07 18 1e 01           a0 = 0x11e18
156664: 7b 17 28 02              u64 [sp + 0x228] = a0
156668: 49 21 30 02 03           u64 [sp + 560] = 0x3
156673: 49 21 48 02              u64 [sp + 584] = 0
156677: 95 18 80 02              a1 = sp + 0x280
156681: 7b 18 38 02              u64 [sp + 0x238] = a1
156685: 49 21 40 02 03           u64 [sp + 576] = 0x3
156690: 95 17 f8 01              a0 = sp + 0x1f8
156694: 95 18 28 02              a1 = sp + 0x228
156698: 50 20 84 08 2d eb fd     ra = 2180, jump @1491
      :                          @11113 [@dyn 1090]
156705: 82 16 00 02              s1 = u64 [sp + 0x200]
156709: 82 1b 08 02              a4 = u64 [sp + 0x208]
156713: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
156717: 7b 17 60                 u64 [sp + 0x60] = a0
156720: 33 07 02                 a0 = 0x2
156723: 33 08                    a1 = 0
156725: 33 09                    a2 = 0
156727: 64 6a                    a3 = s1
156729: 33 00 86 08              ra = 0x886
156733: 0a 64                    ecalli 100 // 'log'
156735: 01                       fallthrough
      :                          @11114 [@dyn 1091]
156736: 82 1c 60                 a5 = u64 [sp + 0x60]
156739: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
156744: 55 38 00 00 f0 09        jump @11116 if a1 >=u 4293918720
      :                          @11115
156750: 28 9d 7d                 jump @12862
      :                          @11116
156753: 33 07 b0 02 03           a0 = 0x302b0
156758: 95 77 00 00 10           a0 = a0 + 0x100000
156763: 01                       fallthrough
      :                          @11117
156764: 82 78                    a1 = u64 [a0]
156766: c9 87 09                 a2 = a0 - a1
156769: aa 69 06                 jump @11119 if a2 == s1
      :                          @11118
156772: 28 87 7d                 jump @12862
      :                          @11119
156775: c9 c8 09                 a2 = a1 - a5
156778: 01                       fallthrough
      :                          @11120
156779: 82 7a                    a3 = u64 [a0]
156781: ab 8a ef                 jump @11117 if a3 != a1
      :                          @11121
156784: 7b 79                    u64 [a0] = a2
156786: 33 0b                    a4 = 0
156788: 01                       fallthrough
      :                          @11122
156789: ab 8a e7                 jump @11117 if a3 != a1
      :                          @11123
156792: 28 73 7d                 jump @12862
      :                          @11124 [@dyn 1092]
156795: 3a 08 70 02 03           a1 = u64 [0x30270]
156800: 97 89 0d                 a2 = a1 << 0xd
156803: d3 89 09                 a2 = a2 ^ a1
156806: 98 9a 07                 a3 = a2 >> 0x7
156809: 3a 08 58 01 03           a1 = u64 [0x30158]
156814: d3 a9 09                 a2 = a2 ^ a3
156817: 97 9a 11                 a3 = a2 << 0x11
156820: d3 9a 0a                 a3 = a3 ^ a2
156823: ca 8a 0b                 a4 = a3 * a1
156826: 3a 09 60 01 03           a2 = u64 [0x30160]
156831: 3e 0a 70 02 03           u64 [0x30270] = a3
156836: 98 ba 03                 a3 = a4 >> 0x3
156839: d6 9a 0a                 a3 = a3 mulhu a2
156842: 98 ac 04                 a5 = a3 >> 0x4
156845: 96 cc e8 03              a5 = a5 * 0x3e8
156849: c9 cb 0b                 a4 = a4 - a5
156852: 7b 1b a0 01              u64 [sp + 0x1a0] = a4
156856: 3a 0b 70 02 03           a4 = u64 [0x30270]
156861: 97 bc 0d                 a5 = a4 << 0xd
156864: d3 cb 0b                 a4 = a4 ^ a5
156867: 98 bc 07                 a5 = a4 >> 0x7
156870: d3 cb 0b                 a4 = a4 ^ a5
156873: 97 bc 11                 a5 = a4 << 0x11
156876: d3 cb 0b                 a4 = a4 ^ a5
156879: ca 8b 0c                 a5 = a4 * a1
156882: 3e 0b 70 02 03           u64 [0x30270] = a4
156887: 98 cb 03                 a4 = a5 >> 0x3
156890: d6 9b 0b                 a4 = a4 mulhu a2
156893: 98 bb 04                 a4 = a4 >> 0x4
156896: 96 bb e8 03              a4 = a4 * 0x3e8
156900: c9 bc 0c                 a5 = a5 - a4
156903: 7b 1c b8 01              u64 [sp + 0x1b8] = a5
156907: 3a 0b 70 02 03           a4 = u64 [0x30270]
156912: 97 bc 0d                 a5 = a4 << 0xd
156915: d3 cb 0b                 a4 = a4 ^ a5
156918: 98 bc 07                 a5 = a4 >> 0x7
156921: d3 cb 0b                 a4 = a4 ^ a5
156924: 97 bc 11                 a5 = a4 << 0x11
156927: d3 cb 0b                 a4 = a4 ^ a5
156930: ca 8b 0c                 a5 = a4 * a1
156933: 3e 0b 70 02 03           u64 [0x30270] = a4
156938: 98 c7 03                 a0 = a5 >> 0x3
156941: d6 97 07                 a0 = a0 mulhu a2
156944: 98 77 04                 a0 = a0 >> 0x4
156947: 96 79 e8 03              a2 = a0 * 0x3e8
156951: 82 17 a0 01              a0 = u64 [sp + 0x1a0]
156955: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
156959: c9 9c 09                 a2 = a5 - a2
156962: 95 99 01                 a2 = a2 + 0x1
156965: 7b 19 10 01              u64 [sp + 0x110] = a2
156969: 33 00 8a 08              ra = 0x88a
156973: 95 11 98                 sp = sp + 0xffffffffffffff98
156976: 7b 10 60                 u64 [sp + 0x60] = ra
156979: 7b 15 58                 u64 [sp + 0x58] = s0
156982: 7b 16 50                 u64 [sp + 0x50] = s1
156985: 7b 19 10                 u64 [sp + 0x10] = a2
156988: 64 84                    t2 = a1
156990: 33 03 b0 02 03           t1 = 0x302b0
156995: 33 02 00 00 10           t0 = 0x100000
157000: c8 23 0a                 a3 = t1 + t0
157003: 28 e7 40 fe              jump @2998
      :                          @11125 [@dyn 1093]
157007: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
157011: 95 17 a0 01              a0 = sp + 0x1a0
157015: 7b 17 80 02              u64 [sp + 0x280] = a0
157019: 33 07 28 0c              a0 = 0xc28
157023: 7b 17 88 02              u64 [sp + 0x288] = a0
157027: 95 18 b8 01              a1 = sp + 0x1b8
157031: 7b 18 90 02              u64 [sp + 0x290] = a1
157035: 7b 17 98 02              u64 [sp + 0x298] = a0
157039: 95 18 10 01              a1 = sp + 0x110
157043: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
157047: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
157051: 95 18 d0 01              a1 = sp + 0x1d0
157055: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
157059: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
157063: 33 07 48 1e 01           a0 = 0x11e48
157068: 7b 17 28 02              u64 [sp + 0x228] = a0
157072: 49 21 30 02 04           u64 [sp + 560] = 0x4
157077: 49 21 48 02              u64 [sp + 584] = 0
157081: 95 18 80 02              a1 = sp + 0x280
157085: 7b 18 38 02              u64 [sp + 0x238] = a1
157089: 49 21 40 02 04           u64 [sp + 576] = 0x4
157094: 95 17 f8 01              a0 = sp + 0x1f8
157098: 95 18 28 02              a1 = sp + 0x228
157102: 50 20 8c 08 99 e9 fd     ra = 2188, jump @1491
      :                          @11126 [@dyn 1094]
157109: 82 16 00 02              s1 = u64 [sp + 0x200]
157113: 82 1b 08 02              a4 = u64 [sp + 0x208]
157117: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
157121: 7b 17 60                 u64 [sp + 0x60] = a0
157124: 33 07 02                 a0 = 0x2
157127: 33 08                    a1 = 0
157129: 33 09                    a2 = 0
157131: 64 6a                    a3 = s1
157133: 33 00 8e 08              ra = 0x88e
157137: 0a 64                    ecalli 100 // 'log'
157139: 01                       fallthrough
      :                          @11127 [@dyn 1095]
157140: 82 1c 60                 a5 = u64 [sp + 0x60]
157143: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
157148: 55 38 00 00 f0 09        jump @11129 if a1 >=u 4293918720
      :                          @11128
157154: 28 09 7c                 jump @12862
      :                          @11129
157157: 33 07 b0 02 03           a0 = 0x302b0
157162: 95 77 00 00 10           a0 = a0 + 0x100000
157167: 01                       fallthrough
      :                          @11130
157168: 82 78                    a1 = u64 [a0]
157170: c9 87 09                 a2 = a0 - a1
157173: aa 69 06                 jump @11132 if a2 == s1
      :                          @11131
157176: 28 f3 7b                 jump @12862
      :                          @11132
157179: c9 c8 09                 a2 = a1 - a5
157182: 01                       fallthrough
      :                          @11133
157183: 82 7a                    a3 = u64 [a0]
157185: ab 8a ef                 jump @11130 if a3 != a1
      :                          @11134
157188: 7b 79                    u64 [a0] = a2
157190: 33 0b                    a4 = 0
157192: 01                       fallthrough
      :                          @11135
157193: ab 8a e7                 jump @11130 if a3 != a1
      :                          @11136
157196: 28 df 7b                 jump @12862
      :                          @11137 [@dyn 1096]
157199: 3a 08 70 02 03           a1 = u64 [0x30270]
157204: 97 89 0d                 a2 = a1 << 0xd
157207: d3 89 09                 a2 = a2 ^ a1
157210: 98 9a 07                 a3 = a2 >> 0x7
157213: 3a 08 58 01 03           a1 = u64 [0x30158]
157218: d3 a9 09                 a2 = a2 ^ a3
157221: 97 9a 11                 a3 = a2 << 0x11
157224: d3 9a 0a                 a3 = a3 ^ a2
157227: ca 8a 0b                 a4 = a3 * a1
157230: 3a 09 60 01 03           a2 = u64 [0x30160]
157235: 3e 0a 70 02 03           u64 [0x30270] = a3
157240: 98 ba 03                 a3 = a4 >> 0x3
157243: d6 9a 0a                 a3 = a3 mulhu a2
157246: 98 ac 04                 a5 = a3 >> 0x4
157249: 96 cc e8 03              a5 = a5 * 0x3e8
157253: c9 cb 0b                 a4 = a4 - a5
157256: 7b 1b a0 01              u64 [sp + 0x1a0] = a4
157260: 3a 0b 70 02 03           a4 = u64 [0x30270]
157265: 97 bc 0d                 a5 = a4 << 0xd
157268: d3 cb 0b                 a4 = a4 ^ a5
157271: 98 bc 07                 a5 = a4 >> 0x7
157274: d3 cb 0b                 a4 = a4 ^ a5
157277: 97 bc 11                 a5 = a4 << 0x11
157280: d3 cb 0b                 a4 = a4 ^ a5
157283: ca 8b 0c                 a5 = a4 * a1
157286: 3e 0b 70 02 03           u64 [0x30270] = a4
157291: 98 cb 03                 a4 = a5 >> 0x3
157294: d6 9b 0b                 a4 = a4 mulhu a2
157297: 98 bb 04                 a4 = a4 >> 0x4
157300: 96 bb e8 03              a4 = a4 * 0x3e8
157304: c9 bc 0c                 a5 = a5 - a4
157307: 7b 1c b8 01              u64 [sp + 0x1b8] = a5
157311: 3a 0b 70 02 03           a4 = u64 [0x30270]
157316: 97 bc 0d                 a5 = a4 << 0xd
157319: d3 cb 0b                 a4 = a4 ^ a5
157322: 98 bc 07                 a5 = a4 >> 0x7
157325: d3 cb 0b                 a4 = a4 ^ a5
157328: 97 bc 11                 a5 = a4 << 0x11
157331: d3 cb 0b                 a4 = a4 ^ a5
157334: ca 8b 08                 a1 = a4 * a1
157337: 3e 0b 70 02 03           u64 [0x30270] = a4
157342: 98 87 03                 a0 = a1 >> 0x3
157345: d6 97 07                 a0 = a0 mulhu a2
157348: 98 77 04                 a0 = a0 >> 0x4
157351: 96 77 e8 03              a0 = a0 * 0x3e8
157355: c9 78 09                 a2 = a1 - a0
157358: 95 97 01                 a0 = a2 + 0x1
157361: 7b 17 10 01              u64 [sp + 0x110] = a0
157365: 82 1c a0 01              a5 = u64 [sp + 0x1a0]
157369: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
157373: 8e 9b                    a4 = a2 >u 0
157375: 33 06 41                 s1 = 0x41
157378: 33 02 01                 t0 = 0x1
157381: 01                       fallthrough
      :                          @11138
157382: cd 7c 0c                 a5 = a5 %u a0
157385: 83 69 fe                 i32 a2 = s1 + 0xfffffffffffffffe
157388: d0 98 09                 a2 = a1 >> a2
157391: 84 99 01                 a2 = a2 & 0x1
157394: 64 ba                    a3 = a4
157396: db 9c 0a                 a3 = a5 if a2 != 0
157399: ca ca 0c                 a5 = a3 * a5
157402: ca ba 09                 a2 = a3 * a4
157405: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
157408: cd 79 0b                 a4 = a2 %u a0
157411: ac 62 e3                 jump @11138 if t0 <u s1
      :                          @11139
157414: 7b 1b d0 01              u64 [sp + 0x1d0] = a4
157418: 95 17 a0 01              a0 = sp + 0x1a0
157422: 7b 17 80 02              u64 [sp + 0x280] = a0
157426: 33 07 28 0c              a0 = 0xc28
157430: 7b 17 88 02              u64 [sp + 0x288] = a0
157434: 95 18 b8 01              a1 = sp + 0x1b8
157438: 7b 18 90 02              u64 [sp + 0x290] = a1
157442: 7b 17 98 02              u64 [sp + 0x298] = a0
157446: 95 18 10 01              a1 = sp + 0x110
157450: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
157454: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
157458: 95 18 d0 01              a1 = sp + 0x1d0
157462: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
157466: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
157470: 33 07 98 1e 01           a0 = 0x11e98
157475: 7b 17 28 02              u64 [sp + 0x228] = a0
157479: 49 21 30 02 04           u64 [sp + 560] = 0x4
157484: 49 21 48 02              u64 [sp + 584] = 0
157488: 95 18 80 02              a1 = sp + 0x280
157492: 7b 18 38 02              u64 [sp + 0x238] = a1
157496: 49 21 40 02 04           u64 [sp + 576] = 0x4
157501: 95 17 f8 01              a0 = sp + 0x1f8
157505: 95 18 28 02              a1 = sp + 0x228
157509: 50 20 92 08 02 e8 fd     ra = 2194, jump @1491
      :                          @11140 [@dyn 1097]
157516: 82 16 00 02              s1 = u64 [sp + 0x200]
157520: 82 1b 08 02              a4 = u64 [sp + 0x208]
157524: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
157528: 7b 17 60                 u64 [sp + 0x60] = a0
157531: 33 07 02                 a0 = 0x2
157534: 33 08                    a1 = 0
157536: 33 09                    a2 = 0
157538: 64 6a                    a3 = s1
157540: 33 00 94 08              ra = 0x894
157544: 0a 64                    ecalli 100 // 'log'
157546: 01                       fallthrough
      :                          @11141 [@dyn 1098]
157547: 82 1c 60                 a5 = u64 [sp + 0x60]
157550: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
157555: 55 38 00 00 f0 09        jump @11143 if a1 >=u 4293918720
      :                          @11142
157561: 28 72 7a                 jump @12862
      :                          @11143
157564: 33 07 b0 02 03           a0 = 0x302b0
157569: 95 77 00 00 10           a0 = a0 + 0x100000
157574: 01                       fallthrough
      :                          @11144
157575: 82 78                    a1 = u64 [a0]
157577: c9 87 09                 a2 = a0 - a1
157580: aa 69 06                 jump @11146 if a2 == s1
      :                          @11145
157583: 28 5c 7a                 jump @12862
      :                          @11146
157586: c9 c8 09                 a2 = a1 - a5
157589: 01                       fallthrough
      :                          @11147
157590: 82 7a                    a3 = u64 [a0]
157592: ab 8a ef                 jump @11144 if a3 != a1
      :                          @11148
157595: 7b 79                    u64 [a0] = a2
157597: 33 0b                    a4 = 0
157599: 01                       fallthrough
      :                          @11149
157600: ab 8a e7                 jump @11144 if a3 != a1
      :                          @11150
157603: 28 48 7a                 jump @12862
      :                          @11151 [@dyn 1099]
157606: 3a 08 70 02 03           a1 = u64 [0x30270]
157611: 97 89 0d                 a2 = a1 << 0xd
157614: d3 98 08                 a1 = a1 ^ a2
157617: 98 89 07                 a2 = a1 >> 0x7
157620: 3a 0a 58 01 03           a3 = u64 [0x30158]
157625: d3 98 08                 a1 = a1 ^ a2
157628: 97 89 11                 a2 = a1 << 0x11
157631: d3 98 08                 a1 = a1 ^ a2
157634: ca a8 09                 a2 = a1 * a3
157637: 3e 08 70 02 03           u64 [0x30270] = a1
157642: 7b 19 b8 01              u64 [sp + 0x1b8] = a2
157646: 3a 08 70 02 03           a1 = u64 [0x30270]
157651: 97 89 0d                 a2 = a1 << 0xd
157654: d3 98 08                 a1 = a1 ^ a2
157657: 98 89 07                 a2 = a1 >> 0x7
157660: d3 98 08                 a1 = a1 ^ a2
157663: 97 89 11                 a2 = a1 << 0x11
157666: d3 98 08                 a1 = a1 ^ a2
157669: 3e 08 70 02 03           u64 [0x30270] = a1
157674: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
157678: ca a8 08                 a1 = a1 * a3
157681: 7b 18 10 01              u64 [sp + 0x110] = a1
157685: 33 00 98 08              ra = 0x898
157689: 95 11 d0                 sp = sp + 0xffffffffffffffd0
157692: 7b 10 28                 u64 [sp + 0x28] = ra
157695: 7b 15 20                 u64 [sp + 0x20] = s0
157698: 7b 16 18                 u64 [sp + 0x18] = s1
157701: 98 74 2a                 t2 = a0 >> 0x2a
157704: 98 89 2a                 a2 = a1 >> 0x2a
157707: ca 49 03                 t1 = a2 * t2
157710: 7b 13 10                 u64 [sp + 0x10] = t1
157713: 64 96                    s1 = a2
157715: 7b 19 08                 u64 [sp + 0x8] = a2
157718: 84 7b ff ff 1f           a4 = a0 & 0x1fffff
157723: 84 8a ff ff 1f           a3 = a1 & 0x1fffff
157728: ca ba 00                 ra = a3 * a4
157731: 97 77 16                 a0 = a0 << 0x16
157734: 98 7c 2b                 a5 = a0 >> 0x2b
157737: c8 b4 07                 a0 = t2 + a4
157740: c8 c7 02                 t0 = a0 + a5
157743: 97 88 16                 a1 = a1 << 0x16
157746: 98 89 2b                 a2 = a1 >> 0x2b
157749: c8 a6 06                 s1 = s1 + a3
157752: c8 96 08                 a1 = s1 + a2
157755: ca 28 08                 a1 = a1 * t0
157758: c8 30 02                 t0 = ra + t1
157761: d8 02 05                 s0 = t0 <u ra
157764: d8 28 03                 t1 = a1 <u t0
157767: c8 53 03                 t1 = t1 + s0
157770: c9 c7 07                 a0 = a0 - a5
157773: c9 96 06                 s1 = s1 - a2
157776: ca 76 07                 a0 = s1 * a0
157779: c9 28 05                 s0 = a1 - t0
157782: c9 27 07                 a0 = a0 - t0
157785: c8 57 07                 a0 = a0 + s0
157788: 98 78 3f                 a1 = a0 >> 0x3f
157791: c8 78 08                 a1 = a1 + a0
157794: 99 87 01                 a0 = a1 >>a 0x1
157797: 99 88 3f                 a1 = a1 >>a 0x3f
157800: c8 83 03                 t1 = t1 + a1
157803: d8 75 06                 s1 = s0 <u a0
157806: c8 63 03                 t1 = t1 + s1
157809: 97 44 02                 t2 = t2 << 0x2
157812: c8 4b 0b                 a4 = a4 + t2
157815: 97 cc 01                 a5 = a5 << 0x1
157818: c8 cb 0b                 a4 = a4 + a5
157821: 82 1c 08                 a5 = u64 [sp + 0x8]
157824: 97 cc 02                 a5 = a5 << 0x2
157827: c8 ca 0a                 a3 = a3 + a5
157830: 97 99 01                 a2 = a2 << 0x1
157833: c8 a9 09                 a2 = a2 + a3
157836: ca b9 09                 a2 = a2 * a4
157839: 98 7a 3e                 a3 = a0 >> 0x3e
157842: 97 88 02                 a1 = a1 << 0x2
157845: d4 a8 08                 a1 = a1 | a3
157848: 97 7a 02                 a3 = a0 << 0x2
157851: c8 0a 0a                 a3 = a3 + ra
157854: d8 0a 0b                 a4 = a3 <u ra
157857: c8 b8 08                 a1 = a1 + a4
157860: 9a 3b                    a4 = -t1
157862: c9 75 05                 s0 = s0 - a0
157865: 82 1c 10                 a5 = u64 [sp + 0x10]
157868: 97 cc 04                 a5 = a5 << 0x4
157871: c8 ca 0a                 a3 = a3 + a5
157874: d8 ca 0c                 a5 = a3 <u a5
157877: c8 c8 08                 a1 = a1 + a5
157880: 97 bb 01                 a4 = a4 << 0x1
157883: 98 5c 3f                 a5 = s0 >> 0x3f
157886: d4 cb 0b                 a4 = a4 | a5
157889: 97 5c 01                 a5 = s0 << 0x1
157892: c8 b8 08                 a1 = a1 + a4
157895: c8 ac 0c                 a5 = a5 + a3
157898: d8 ac 0a                 a3 = a5 <u a3
157901: d8 c9 0b                 a4 = a2 <u a5
157904: c8 ba 0a                 a3 = a3 + a4
157907: c8 a8 08                 a1 = a1 + a3
157910: bf c9 09                 i32 a2 = a2 - a5
157913: 9a 88                    a1 = -a1
157915: 99 88 3f                 a1 = a1 >>a 0x3f
157918: 98 88 3d                 a1 = a1 >> 0x3d
157921: c8 98 08                 a1 = a1 + a2
157924: 97 77 2a                 a0 = a0 << 0x2a
157927: d4 07 07                 a0 = a0 | ra
157930: 97 55 15                 s0 = s0 << 0x15
157933: c8 57 07                 a0 = a0 + s0
157936: 98 88 03                 a1 = a1 >> 0x3
157939: 97 88 3f                 a1 = a1 << 0x3f
157942: c8 87 07                 a0 = a0 + a1
157945: 82 10 28                 ra = u64 [sp + 0x28]
157948: 82 15 20                 s0 = u64 [sp + 0x20]
157951: 82 16 18                 s1 = u64 [sp + 0x18]
157954: 95 11 30                 sp = sp + 0x30
157957: 32 00                    ret
      :                          @11152 [@dyn 1100]
157959: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
157963: 95 17 b8 01              a0 = sp + 0x1b8
157967: 7b 17 80 02              u64 [sp + 0x280] = a0
157971: 33 07 28 0c              a0 = 0xc28
157975: 7b 17 88 02              u64 [sp + 0x288] = a0
157979: 95 18 10 01              a1 = sp + 0x110
157983: 7b 18 90 02              u64 [sp + 0x290] = a1
157987: 7b 17 98 02              u64 [sp + 0x298] = a0
157991: 95 18 d0 01              a1 = sp + 0x1d0
157995: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
157999: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
158003: 33 07 e8 1e 01           a0 = 0x11ee8
158008: 7b 17 28 02              u64 [sp + 0x228] = a0
158012: 49 21 30 02 03           u64 [sp + 560] = 0x3
158017: 49 21 48 02              u64 [sp + 584] = 0
158021: 95 18 80 02              a1 = sp + 0x280
158025: 7b 18 38 02              u64 [sp + 0x238] = a1
158029: 49 21 40 02 03           u64 [sp + 576] = 0x3
158034: 95 17 f8 01              a0 = sp + 0x1f8
158038: 95 18 28 02              a1 = sp + 0x228
158042: 50 20 9a 08 ed e5 fd     ra = 2202, jump @1491
      :                          @11153 [@dyn 1101]
158049: 82 16 00 02              s1 = u64 [sp + 0x200]
158053: 82 1b 08 02              a4 = u64 [sp + 0x208]
158057: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
158061: 7b 17 60                 u64 [sp + 0x60] = a0
158064: 33 07 02                 a0 = 0x2
158067: 33 08                    a1 = 0
158069: 33 09                    a2 = 0
158071: 64 6a                    a3 = s1
158073: 33 00 9c 08              ra = 0x89c
158077: 0a 64                    ecalli 100 // 'log'
158079: 01                       fallthrough
      :                          @11154 [@dyn 1102]
158080: 82 1c 60                 a5 = u64 [sp + 0x60]
158083: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
158088: 55 38 00 00 f0 09        jump @11156 if a1 >=u 4293918720
      :                          @11155
158094: 28 5d 78                 jump @12862
      :                          @11156
158097: 33 07 b0 02 03           a0 = 0x302b0
158102: 95 77 00 00 10           a0 = a0 + 0x100000
158107: 01                       fallthrough
      :                          @11157
158108: 82 78                    a1 = u64 [a0]
158110: c9 87 09                 a2 = a0 - a1
158113: aa 69 06                 jump @11159 if a2 == s1
      :                          @11158
158116: 28 47 78                 jump @12862
      :                          @11159
158119: c9 c8 09                 a2 = a1 - a5
158122: 01                       fallthrough
      :                          @11160
158123: 82 7a                    a3 = u64 [a0]
158125: ab 8a ef                 jump @11157 if a3 != a1
      :                          @11161
158128: 7b 79                    u64 [a0] = a2
158130: 33 0b                    a4 = 0
158132: 01                       fallthrough
      :                          @11162
158133: ab 8a e7                 jump @11157 if a3 != a1
      :                          @11163
158136: 28 33 78                 jump @12862
      :                          @11164 [@dyn 1103]
158139: 3a 08 70 02 03           a1 = u64 [0x30270]
158144: 97 89 0d                 a2 = a1 << 0xd
158147: d3 98 08                 a1 = a1 ^ a2
158150: 98 89 07                 a2 = a1 >> 0x7
158153: d3 98 08                 a1 = a1 ^ a2
158156: 97 89 11                 a2 = a1 << 0x11
158159: 3a 0a 58 01 03           a3 = u64 [0x30158]
158164: d3 98 08                 a1 = a1 ^ a2
158167: 3a 09 b0 01 03           a2 = u64 [0x301b0]
158172: ca a8 0b                 a4 = a1 * a3
158175: 3e 08 70 02 03           u64 [0x30270] = a1
158180: d6 9b 08                 a1 = a4 mulhu a2
158183: 98 88 12                 a1 = a1 >> 0x12
158186: 33 0c 40 42 0f           a5 = 0xf4240
158191: ca c8 08                 a1 = a1 * a5
158194: c9 8b 0b                 a4 = a4 - a1
158197: 7b 1b b8 01              u64 [sp + 0x1b8] = a4
158201: 3a 08 70 02 03           a1 = u64 [0x30270]
158206: 97 8b 0d                 a4 = a1 << 0xd
158209: d3 b8 08                 a1 = a1 ^ a4
158212: 98 8b 07                 a4 = a1 >> 0x7
158215: d3 b8 08                 a1 = a1 ^ a4
158218: 97 8b 11                 a4 = a1 << 0x11
158221: d3 b8 08                 a1 = a1 ^ a4
158224: ca a8 0a                 a3 = a1 * a3
158227: 3e 08 70 02 03           u64 [0x30270] = a1
158232: d6 9a 07                 a0 = a3 mulhu a2
158235: 98 78 12                 a1 = a0 >> 0x12
158238: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
158242: ca c8 08                 a1 = a1 * a5
158245: c9 8a 08                 a1 = a3 - a1
158248: 7b 18 10 01              u64 [sp + 0x110] = a1
158252: 50 20 a0 08 b2 6b fe     ra = 2208, jump @4113
      :                          @11165 [@dyn 1104]
158259: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
158263: 95 17 b8 01              a0 = sp + 0x1b8
158267: 7b 17 80 02              u64 [sp + 0x280] = a0
158271: 33 07 28 0c              a0 = 0xc28
158275: 7b 17 88 02              u64 [sp + 0x288] = a0
158279: 95 18 10 01              a1 = sp + 0x110
158283: 7b 18 90 02              u64 [sp + 0x290] = a1
158287: 7b 17 98 02              u64 [sp + 0x298] = a0
158291: 95 18 d0 01              a1 = sp + 0x1d0
158295: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
158299: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
158303: 33 07 28 1f 01           a0 = 0x11f28
158308: 7b 17 28 02              u64 [sp + 0x228] = a0
158312: 49 21 30 02 03           u64 [sp + 560] = 0x3
158317: 49 21 48 02              u64 [sp + 584] = 0
158321: 95 18 80 02              a1 = sp + 0x280
158325: 7b 18 38 02              u64 [sp + 0x238] = a1
158329: 49 21 40 02 03           u64 [sp + 576] = 0x3
158334: 95 17 f8 01              a0 = sp + 0x1f8
158338: 95 18 28 02              a1 = sp + 0x228
158342: 50 20 a2 08 c1 e4 fd     ra = 2210, jump @1491
      :                          @11166 [@dyn 1105]
158349: 82 16 00 02              s1 = u64 [sp + 0x200]
158353: 82 1b 08 02              a4 = u64 [sp + 0x208]
158357: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
158361: 7b 17 60                 u64 [sp + 0x60] = a0
158364: 33 07 02                 a0 = 0x2
158367: 33 08                    a1 = 0
158369: 33 09                    a2 = 0
158371: 64 6a                    a3 = s1
158373: 33 00 a4 08              ra = 0x8a4
158377: 0a 64                    ecalli 100 // 'log'
158379: 01                       fallthrough
      :                          @11167 [@dyn 1106]
158380: 82 1c 60                 a5 = u64 [sp + 0x60]
158383: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
158388: 55 38 00 00 f0 09        jump @11169 if a1 >=u 4293918720
      :                          @11168
158394: 28 31 77                 jump @12862
      :                          @11169
158397: 33 07 b0 02 03           a0 = 0x302b0
158402: 95 77 00 00 10           a0 = a0 + 0x100000
158407: 01                       fallthrough
      :                          @11170
158408: 82 78                    a1 = u64 [a0]
158410: c9 87 09                 a2 = a0 - a1
158413: aa 69 06                 jump @11172 if a2 == s1
      :                          @11171
158416: 28 1b 77                 jump @12862
      :                          @11172
158419: c9 c8 09                 a2 = a1 - a5
158422: 01                       fallthrough
      :                          @11173
158423: 82 7a                    a3 = u64 [a0]
158425: ab 8a ef                 jump @11170 if a3 != a1
      :                          @11174
158428: 7b 79                    u64 [a0] = a2
158430: 33 0b                    a4 = 0
158432: 01                       fallthrough
      :                          @11175
158433: ab 8a e7                 jump @11170 if a3 != a1
      :                          @11176
158436: 28 07 77                 jump @12862
      :                          @11177 [@dyn 1107]
158439: 3a 08 70 02 03           a1 = u64 [0x30270]
158444: 97 89 0d                 a2 = a1 << 0xd
158447: d3 98 08                 a1 = a1 ^ a2
158450: 98 89 07                 a2 = a1 >> 0x7
158453: d3 98 08                 a1 = a1 ^ a2
158456: 97 89 11                 a2 = a1 << 0x11
158459: 3a 0a 58 01 03           a3 = u64 [0x30158]
158464: d3 98 08                 a1 = a1 ^ a2
158467: 3a 09 b0 01 03           a2 = u64 [0x301b0]
158472: ca a8 0b                 a4 = a1 * a3
158475: 3e 08 70 02 03           u64 [0x30270] = a1
158480: d6 9b 08                 a1 = a4 mulhu a2
158483: 98 88 12                 a1 = a1 >> 0x12
158486: 33 0c 40 42 0f           a5 = 0xf4240
158491: ca c8 08                 a1 = a1 * a5
158494: c9 8b 0b                 a4 = a4 - a1
158497: 7b 1b b8 01              u64 [sp + 0x1b8] = a4
158501: 3a 08 70 02 03           a1 = u64 [0x30270]
158506: 97 8b 0d                 a4 = a1 << 0xd
158509: d3 b8 08                 a1 = a1 ^ a4
158512: 98 8b 07                 a4 = a1 >> 0x7
158515: d3 b8 08                 a1 = a1 ^ a4
158518: 97 8b 11                 a4 = a1 << 0x11
158521: d3 b8 08                 a1 = a1 ^ a4
158524: ca a8 0a                 a3 = a1 * a3
158527: 3e 08 70 02 03           u64 [0x30270] = a1
158532: d6 9a 08                 a1 = a3 mulhu a2
158535: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
158539: 98 88 12                 a1 = a1 >> 0x12
158542: ca c8 08                 a1 = a1 * a5
158545: c9 8a 08                 a1 = a3 - a1
158548: 7b 18 10 01              u64 [sp + 0x110] = a1
158552: 52 07 06                 jump @11179 if a0 != 0
      :                          @11178
158555: 28 e8 7b                 jump @12970
      :                          @11179
158558: 88 89 01                 a2 = a1 <u 0x1
158561: d3 87 0a                 a3 = a0 ^ a1
158564: 88 aa 01                 a3 = a3 <u 0x1
158567: d4 a9 09                 a2 = a2 | a3
158570: 51 09 08                 jump @11181 if a2 == 0
      :                          @11180
158573: 64 79                    a2 = a0
158575: 28 d7 7b                 jump @12971
      :                          @11181
158578: d8 78 0a                 a3 = a1 <u a0
158581: 64 79                    a2 = a0
158583: 94 a9                    a2 = 0 if a3 != 0
158585: c9 98 09                 a2 = a1 - a2
158588: 93 a8                    a1 = 0 if a3 == 0
158590: c9 87 07                 a0 = a0 - a1
158593: 64 98                    a1 = a2
158595: ab 97 ef                 jump @11181 if a0 != a2
      :                          @11182
158598: 28 c0 7b                 jump @12971
      :                          @11183 [@dyn 1108]
158601: 3a 08 70 02 03           a1 = u64 [0x30270]
158606: 97 89 0d                 a2 = a1 << 0xd
158609: d3 98 08                 a1 = a1 ^ a2
158612: 98 89 07                 a2 = a1 >> 0x7
158615: d3 89 09                 a2 = a2 ^ a1
158618: 97 9a 11                 a3 = a2 << 0x11
158621: 3a 08 58 01 03           a1 = u64 [0x30158]
158626: d3 a9 09                 a2 = a2 ^ a3
158629: 3a 0a b0 01 03           a3 = u64 [0x301b0]
158634: ca 89 0b                 a4 = a2 * a1
158637: 3e 09 70 02 03           u64 [0x30270] = a2
158642: d6 ab 09                 a2 = a4 mulhu a3
158645: 98 99 12                 a2 = a2 >> 0x12
158648: 96 99 40 42 0f           a2 = a2 * 0xf4240
158653: c9 9b 0b                 a4 = a4 - a2
158656: 7b 1b b8 01              u64 [sp + 0x1b8] = a4
158660: 3a 09 70 02 03           a2 = u64 [0x30270]
158665: 97 9b 0d                 a4 = a2 << 0xd
158668: d3 b9 09                 a2 = a2 ^ a4
158671: 98 9b 07                 a4 = a2 >> 0x7
158674: d3 b9 09                 a2 = a2 ^ a4
158677: 97 9b 11                 a4 = a2 << 0x11
158680: d3 b9 09                 a2 = a2 ^ a4
158683: 3a 0b c0 01 03           a4 = u64 [0x301c0]
158688: ca 89 08                 a1 = a2 * a1
158691: 3e 09 70 02 03           u64 [0x30270] = a2
158696: d6 b8 07                 a0 = a1 mulhu a4
158699: 98 77 13                 a0 = a0 >> 0x13
158702: 96 79 3f 42 0f           a2 = a0 * 0xf423f
158707: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
158711: c9 98 08                 a1 = a1 - a2
158714: 95 88 01                 a1 = a1 + 0x1
158717: 7b 18 10 01              u64 [sp + 0x110] = a1
158721: 33 00 aa 08              ra = 0x8aa
158725: 33 0b 01                 a4 = 0x1
158728: 33 09 ff                 a2 = 0xffffffffffffffff
158731: 28 0a 6a fe              jump @4120
      :                          @11184 [@dyn 1109]
158735: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
158739: 95 17 b8 01              a0 = sp + 0x1b8
158743: 7b 17 80 02              u64 [sp + 0x280] = a0
158747: 33 07 28 0c              a0 = 0xc28
158751: 7b 17 88 02              u64 [sp + 0x288] = a0
158755: 95 18 10 01              a1 = sp + 0x110
158759: 7b 18 90 02              u64 [sp + 0x290] = a1
158763: 7b 17 98 02              u64 [sp + 0x298] = a0
158767: 95 18 d0 01              a1 = sp + 0x1d0
158771: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
158775: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
158779: 33 07 88 1f 01           a0 = 0x11f88
158784: 7b 17 28 02              u64 [sp + 0x228] = a0
158788: 49 21 30 02 03           u64 [sp + 560] = 0x3
158793: 49 21 48 02              u64 [sp + 584] = 0
158797: 95 18 80 02              a1 = sp + 0x280
158801: 7b 18 38 02              u64 [sp + 0x238] = a1
158805: 49 21 40 02 03           u64 [sp + 576] = 0x3
158810: 95 17 f8 01              a0 = sp + 0x1f8
158814: 95 18 28 02              a1 = sp + 0x228
158818: 50 20 ac 08 e5 e2 fd     ra = 2220, jump @1491
      :                          @11185 [@dyn 1110]
158825: 82 16 00 02              s1 = u64 [sp + 0x200]
158829: 82 1b 08 02              a4 = u64 [sp + 0x208]
158833: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
158837: 7b 17 60                 u64 [sp + 0x60] = a0
158840: 33 07 02                 a0 = 0x2
158843: 33 08                    a1 = 0
158845: 33 09                    a2 = 0
158847: 64 6a                    a3 = s1
158849: 33 00 ae 08              ra = 0x8ae
158853: 0a 64                    ecalli 100 // 'log'
158855: 01                       fallthrough
      :                          @11186 [@dyn 1111]
158856: 82 1c 60                 a5 = u64 [sp + 0x60]
158859: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
158864: 55 38 00 00 f0 09        jump @11188 if a1 >=u 4293918720
      :                          @11187
158870: 28 55 75                 jump @12862
      :                          @11188
158873: 33 07 b0 02 03           a0 = 0x302b0
158878: 95 77 00 00 10           a0 = a0 + 0x100000
158883: 01                       fallthrough
      :                          @11189
158884: 82 78                    a1 = u64 [a0]
158886: c9 87 09                 a2 = a0 - a1
158889: aa 69 06                 jump @11191 if a2 == s1
      :                          @11190
158892: 28 3f 75                 jump @12862
      :                          @11191
158895: c9 c8 09                 a2 = a1 - a5
158898: 01                       fallthrough
      :                          @11192
158899: 82 7a                    a3 = u64 [a0]
158901: ab 8a ef                 jump @11189 if a3 != a1
      :                          @11193
158904: 7b 79                    u64 [a0] = a2
158906: 33 0b                    a4 = 0
158908: 01                       fallthrough
      :                          @11194
158909: ab 8a e7                 jump @11189 if a3 != a1
      :                          @11195
158912: 28 2b 75                 jump @12862
      :                          @11196 [@dyn 1112]
158915: 3a 08 70 02 03           a1 = u64 [0x30270]
158920: 97 89 0d                 a2 = a1 << 0xd
158923: d3 98 08                 a1 = a1 ^ a2
158926: 98 89 07                 a2 = a1 >> 0x7
158929: d3 89 09                 a2 = a2 ^ a1
158932: 97 9a 11                 a3 = a2 << 0x11
158935: 3a 08 58 01 03           a1 = u64 [0x30158]
158940: d3 a9 09                 a2 = a2 ^ a3
158943: 3a 0a b0 01 03           a3 = u64 [0x301b0]
158948: ca 89 0b                 a4 = a2 * a1
158951: 3e 09 70 02 03           u64 [0x30270] = a2
158956: d6 ab 09                 a2 = a4 mulhu a3
158959: 98 99 12                 a2 = a2 >> 0x12
158962: 96 99 40 42 0f           a2 = a2 * 0xf4240
158967: c9 9b 0b                 a4 = a4 - a2
158970: 95 bb 01                 a4 = a4 + 0x1
158973: 7b 1b 10 01              u64 [sp + 0x110] = a4
158977: 3a 09 70 02 03           a2 = u64 [0x30270]
158982: 97 9a 0d                 a3 = a2 << 0xd
158985: d3 a9 09                 a2 = a2 ^ a3
158988: 98 9a 07                 a3 = a2 >> 0x7
158991: d3 a9 09                 a2 = a2 ^ a3
158994: 97 9a 11                 a3 = a2 << 0x11
158997: d3 a9 09                 a2 = a2 ^ a3
159000: 3a 0a b8 01 03           a3 = u64 [0x301b8]
159005: ca 89 08                 a1 = a2 * a1
159008: 3e 09 70 02 03           u64 [0x30270] = a2
159013: d6 a8 07                 a0 = a1 mulhu a3
159016: 98 79 03                 a2 = a0 >> 0x3
159019: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
159022: 82 17 10 01              a0 = u64 [sp + 0x110]
159026: c8 a9 09                 a2 = a2 + a3
159029: c9 98 08                 a1 = a1 - a2
159032: 95 88 02                 a1 = a1 + 0x2
159035: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
159039: 33 09                    a2 = 0
159041: ac 87 18                 jump @11199 if a0 <u a1
      :                          @11197
159044: 33 0a ff                 a3 = 0xffffffffffffffff
159047: 64 8b                    a4 = a1
159049: 01                       fallthrough
      :                          @11198
159050: d6 8b 0c                 a5 = a4 mulhu a1
159053: ca 8b 0b                 a4 = a4 * a1
159056: db ca 0b                 a4 = a3 if a5 != 0
159059: 83 99 01                 i32 a2 = a2 + 0x1
159062: ae b7 f4                 jump @11198 if a0 >=u a4
      :                          @11199
159065: 7a 19 b8 01              u32 [sp + 0x1b8] = a2
159069: 95 17 10 01              a0 = sp + 0x110
159073: 7b 17 80 02              u64 [sp + 0x280] = a0
159077: 33 07 28 0c              a0 = 0xc28
159081: 7b 17 88 02              u64 [sp + 0x288] = a0
159085: 95 18 d0 01              a1 = sp + 0x1d0
159089: 7b 18 90 02              u64 [sp + 0x290] = a1
159093: 7b 17 98 02              u64 [sp + 0x298] = a0
159097: 95 17 b8 01              a0 = sp + 0x1b8
159101: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
159105: 33 07 5e 0c              a0 = 0xc5e
159109: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
159113: 33 07 b8 1f 01           a0 = 0x11fb8
159118: 7b 17 28 02              u64 [sp + 0x228] = a0
159122: 49 21 30 02 03           u64 [sp + 560] = 0x3
159127: 49 21 48 02              u64 [sp + 584] = 0
159131: 95 18 80 02              a1 = sp + 0x280
159135: 7b 18 38 02              u64 [sp + 0x238] = a1
159139: 49 21 40 02 03           u64 [sp + 576] = 0x3
159144: 95 17 f8 01              a0 = sp + 0x1f8
159148: 95 18 28 02              a1 = sp + 0x228
159152: 50 20 b2 08 97 e1 fd     ra = 2226, jump @1491
      :                          @11200 [@dyn 1113]
159159: 82 16 00 02              s1 = u64 [sp + 0x200]
159163: 82 1b 08 02              a4 = u64 [sp + 0x208]
159167: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
159171: 7b 17 60                 u64 [sp + 0x60] = a0
159174: 33 07 02                 a0 = 0x2
159177: 33 08                    a1 = 0
159179: 33 09                    a2 = 0
159181: 64 6a                    a3 = s1
159183: 33 00 b4 08              ra = 0x8b4
159187: 0a 64                    ecalli 100 // 'log'
159189: 01                       fallthrough
      :                          @11201 [@dyn 1114]
159190: 82 1c 60                 a5 = u64 [sp + 0x60]
159193: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
159198: 55 38 00 00 f0 09        jump @11203 if a1 >=u 4293918720
      :                          @11202
159204: 28 07 74                 jump @12862
      :                          @11203
159207: 33 07 b0 02 03           a0 = 0x302b0
159212: 95 77 00 00 10           a0 = a0 + 0x100000
159217: 01                       fallthrough
      :                          @11204
159218: 82 78                    a1 = u64 [a0]
159220: c9 87 09                 a2 = a0 - a1
159223: aa 69 06                 jump @11206 if a2 == s1
      :                          @11205
159226: 28 f1 73                 jump @12862
      :                          @11206
159229: c9 c8 09                 a2 = a1 - a5
159232: 01                       fallthrough
      :                          @11207
159233: 82 7a                    a3 = u64 [a0]
159235: ab 8a ef                 jump @11204 if a3 != a1
      :                          @11208
159238: 7b 79                    u64 [a0] = a2
159240: 33 0b                    a4 = 0
159242: 01                       fallthrough
      :                          @11209
159243: ab 8a e7                 jump @11204 if a3 != a1
      :                          @11210
159246: 28 dd 73                 jump @12862
      :                          @11211 [@dyn 1115]
159249: 3a 08 70 02 03           a1 = u64 [0x30270]
159254: 97 89 0d                 a2 = a1 << 0xd
159257: d3 98 08                 a1 = a1 ^ a2
159260: 98 89 07                 a2 = a1 >> 0x7
159263: d3 89 09                 a2 = a2 ^ a1
159266: 97 9a 11                 a3 = a2 << 0x11
159269: 3a 08 58 01 03           a1 = u64 [0x30158]
159274: d3 a9 09                 a2 = a2 ^ a3
159277: 3a 0a b0 01 03           a3 = u64 [0x301b0]
159282: ca 89 0b                 a4 = a2 * a1
159285: 3e 09 70 02 03           u64 [0x30270] = a2
159290: d6 ab 09                 a2 = a4 mulhu a3
159293: 98 99 12                 a2 = a2 >> 0x12
159296: 96 99 40 42 0f           a2 = a2 * 0xf4240
159301: c9 9b 0b                 a4 = a4 - a2
159304: 95 bb 01                 a4 = a4 + 0x1
159307: 7b 1b 10 01              u64 [sp + 0x110] = a4
159311: 3a 09 70 02 03           a2 = u64 [0x30270]
159316: 97 9a 0d                 a3 = a2 << 0xd
159319: d3 a9 09                 a2 = a2 ^ a3
159322: 98 9a 07                 a3 = a2 >> 0x7
159325: d3 a9 09                 a2 = a2 ^ a3
159328: 97 9a 11                 a3 = a2 << 0x11
159331: d3 a9 09                 a2 = a2 ^ a3
159334: 3a 0a b8 01 03           a3 = u64 [0x301b8]
159339: ca 89 08                 a1 = a2 * a1
159342: 3e 09 70 02 03           u64 [0x30270] = a2
159347: d6 a8 07                 a0 = a1 mulhu a3
159350: 98 79 03                 a2 = a0 >> 0x3
159353: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
159356: 82 17 10 01              a0 = u64 [sp + 0x110]
159360: c8 a9 09                 a2 = a2 + a3
159363: c9 98 08                 a1 = a1 - a2
159366: 95 88 02                 a1 = a1 + 0x2
159369: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
159373: 33 09                    a2 = 0
159375: ac 87 0c                 jump @11213 if a0 <u a1
      :                          @11212
159378: cb 87 07                 a0 = a0 /u a1
159381: 83 99 01                 i32 a2 = a2 + 0x1
159384: ae 87 fa                 jump @11212 if a0 >=u a1
      :                          @11213
159387: 7a 19 b8 01              u32 [sp + 0x1b8] = a2
159391: 95 17 10 01              a0 = sp + 0x110
159395: 7b 17 80 02              u64 [sp + 0x280] = a0
159399: 33 07 28 0c              a0 = 0xc28
159403: 7b 17 88 02              u64 [sp + 0x288] = a0
159407: 95 18 d0 01              a1 = sp + 0x1d0
159411: 7b 18 90 02              u64 [sp + 0x290] = a1
159415: 7b 17 98 02              u64 [sp + 0x298] = a0
159419: 95 17 b8 01              a0 = sp + 0x1b8
159423: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
159427: 33 07 5e 0c              a0 = 0xc5e
159431: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
159435: 33 07 e8 1f 01           a0 = 0x11fe8
159440: 7b 17 28 02              u64 [sp + 0x228] = a0
159444: 49 21 30 02 03           u64 [sp + 560] = 0x3
159449: 49 21 48 02              u64 [sp + 584] = 0
159453: 95 18 80 02              a1 = sp + 0x280
159457: 7b 18 38 02              u64 [sp + 0x238] = a1
159461: 49 21 40 02 03           u64 [sp + 576] = 0x3
159466: 95 17 f8 01              a0 = sp + 0x1f8
159470: 95 18 28 02              a1 = sp + 0x228
159474: 50 20 b8 08 55 e0 fd     ra = 2232, jump @1491
      :                          @11214 [@dyn 1116]
159481: 82 16 00 02              s1 = u64 [sp + 0x200]
159485: 82 1b 08 02              a4 = u64 [sp + 0x208]
159489: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
159493: 7b 17 60                 u64 [sp + 0x60] = a0
159496: 33 07 02                 a0 = 0x2
159499: 33 08                    a1 = 0
159501: 33 09                    a2 = 0
159503: 64 6a                    a3 = s1
159505: 33 00 ba 08              ra = 0x8ba
159509: 0a 64                    ecalli 100 // 'log'
159511: 01                       fallthrough
      :                          @11215 [@dyn 1117]
159512: 82 1c 60                 a5 = u64 [sp + 0x60]
159515: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
159520: 55 38 00 00 f0 09        jump @11217 if a1 >=u 4293918720
      :                          @11216
159526: 28 c5 72                 jump @12862
      :                          @11217
159529: 33 07 b0 02 03           a0 = 0x302b0
159534: 95 77 00 00 10           a0 = a0 + 0x100000
159539: 01                       fallthrough
      :                          @11218
159540: 82 78                    a1 = u64 [a0]
159542: c9 87 09                 a2 = a0 - a1
159545: aa 69 06                 jump @11220 if a2 == s1
      :                          @11219
159548: 28 af 72                 jump @12862
      :                          @11220
159551: c9 c8 09                 a2 = a1 - a5
159554: 01                       fallthrough
      :                          @11221
159555: 82 7a                    a3 = u64 [a0]
159557: ab 8a ef                 jump @11218 if a3 != a1
      :                          @11222
159560: 7b 79                    u64 [a0] = a2
159562: 33 0b                    a4 = 0
159564: 01                       fallthrough
      :                          @11223
159565: ab 8a e7                 jump @11218 if a3 != a1
      :                          @11224
159568: 28 9b 72                 jump @12862
      :                          @11225 [@dyn 1118]
159571: 3a 08 70 02 03           a1 = u64 [0x30270]
159576: 33 09                    a2 = 0
159578: 97 8a 0d                 a3 = a1 << 0xd
159581: d3 a8 08                 a1 = a1 ^ a3
159584: 98 8a 07                 a3 = a1 >> 0x7
159587: d3 a8 08                 a1 = a1 ^ a3
159590: 97 8a 11                 a3 = a1 << 0x11
159593: d3 a8 08                 a1 = a1 ^ a3
159596: 3a 0a 58 01 03           a3 = u64 [0x30158]
159601: 3a 0b b0 01 03           a4 = u64 [0x301b0]
159606: 3e 08 70 02 03           u64 [0x30270] = a1
159611: ca a8 07                 a0 = a1 * a3
159614: d6 b7 08                 a1 = a0 mulhu a4
159617: 98 88 12                 a1 = a1 >> 0x12
159620: 96 88 40 42 0f           a1 = a1 * 0xf4240
159625: c9 87 07                 a0 = a0 - a1
159628: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
159632: 98 78 01                 a1 = a0 >> 0x1
159635: 95 88 01                 a1 = a1 + 0x1
159638: 33 02 ff                 t0 = 0xffffffffffffffff
159641: 01                       fallthrough
      :                          @11226
159642: c8 98 0c                 a5 = a1 + a2
159645: 98 cc 01                 a5 = a5 >> 0x1
159648: d6 cc 06                 s1 = a5 mulhu a5
159651: ca cc 0b                 a4 = a5 * a5
159654: db 62 0b                 a4 = t0 if s1 != 0
159657: aa 7b 15                 jump @11228 if a4 == a0
      :                          @11227
159660: d8 7b 06                 s1 = a4 <u a0
159663: 95 ca 01                 a3 = a5 + 0x1
159666: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
159669: da 6c 08                 a1 = a5 if s1 == 0
159672: db 6a 09                 a2 = a3 if s1 != 0
159675: ae 98 df                 jump @11226 if a1 >=u a2
      :                          @11228
159678: d3 b7 07                 a0 = a0 ^ a4
159681: 88 77 01                 a0 = a0 <u 0x1
159684: 78 17 10 01              u8 [sp + 0x110] = a0
159688: 95 17 d0 01              a0 = sp + 0x1d0
159692: 7b 17 28 02              u64 [sp + 0x228] = a0
159696: 33 07 28 0c              a0 = 0xc28
159700: 7b 17 30 02              u64 [sp + 0x230] = a0
159704: 95 17 10 01              a0 = sp + 0x110
159708: 7b 17 38 02              u64 [sp + 0x238] = a0
159712: 33 07 80 0c              a0 = 0xc80
159716: 7b 17 40 02              u64 [sp + 0x240] = a0
159720: 33 07 30 20 01           a0 = 0x12030
159725: 7b 17 80 02              u64 [sp + 0x280] = a0
159729: 49 21 88 02 02           u64 [sp + 648] = 0x2
159734: 49 21 a0 02              u64 [sp + 672] = 0
159738: 95 18 28 02              a1 = sp + 0x228
159742: 7b 18 90 02              u64 [sp + 0x290] = a1
159746: 49 21 98 02 02           u64 [sp + 664] = 0x2
159751: 95 17 f8 01              a0 = sp + 0x1f8
159755: 95 18 80 02              a1 = sp + 0x280
159759: 50 20 be 08 38 df fd     ra = 2238, jump @1491
      :                          @11229 [@dyn 1119]
159766: 82 16 00 02              s1 = u64 [sp + 0x200]
159770: 82 1b 08 02              a4 = u64 [sp + 0x208]
159774: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
159778: 7b 17 60                 u64 [sp + 0x60] = a0
159781: 33 07 02                 a0 = 0x2
159784: 33 08                    a1 = 0
159786: 33 09                    a2 = 0
159788: 64 6a                    a3 = s1
159790: 33 00 c0 08              ra = 0x8c0
159794: 0a 64                    ecalli 100 // 'log'
159796: 01                       fallthrough
      :                          @11230 [@dyn 1120]
159797: 82 1c 60                 a5 = u64 [sp + 0x60]
159800: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
159805: 55 38 00 00 f0 09        jump @11232 if a1 >=u 4293918720
      :                          @11231
159811: 28 a8 71                 jump @12862
      :                          @11232
159814: 33 07 b0 02 03           a0 = 0x302b0
159819: 95 77 00 00 10           a0 = a0 + 0x100000
159824: 01                       fallthrough
      :                          @11233
159825: 82 78                    a1 = u64 [a0]
159827: c9 87 09                 a2 = a0 - a1
159830: aa 69 06                 jump @11235 if a2 == s1
      :                          @11234
159833: 28 92 71                 jump @12862
      :                          @11235
159836: c9 c8 09                 a2 = a1 - a5
159839: 01                       fallthrough
      :                          @11236
159840: 82 7a                    a3 = u64 [a0]
159842: ab 8a ef                 jump @11233 if a3 != a1
      :                          @11237
159845: 7b 79                    u64 [a0] = a2
159847: 33 0b                    a4 = 0
159849: 01                       fallthrough
      :                          @11238
159850: ab 8a e7                 jump @11233 if a3 != a1
      :                          @11239
159853: 28 7e 71                 jump @12862
      :                          @11240 [@dyn 1121]
159856: 3a 08 70 02 03           a1 = u64 [0x30270]
159861: 97 89 0d                 a2 = a1 << 0xd
159864: d3 98 08                 a1 = a1 ^ a2
159867: 98 89 07                 a2 = a1 >> 0x7
159870: d3 98 08                 a1 = a1 ^ a2
159873: 97 89 11                 a2 = a1 << 0x11
159876: d3 98 08                 a1 = a1 ^ a2
159879: 3a 09 58 01 03           a2 = u64 [0x30158]
159884: 3a 0a b0 01 03           a3 = u64 [0x301b0]
159889: 3e 08 70 02 03           u64 [0x30270] = a1
159894: ca 98 07                 a0 = a1 * a2
159897: d6 a7 08                 a1 = a0 mulhu a3
159900: 98 88 12                 a1 = a1 >> 0x12
159903: 96 88 40 42 0f           a1 = a1 * 0xf4240
159908: c9 87 07                 a0 = a0 - a1
159911: 95 78 01                 a1 = a0 + 0x1
159914: 7b 18 10 01              u64 [sp + 0x110] = a1
159918: 95 17 f8 01              a0 = sp + 0x1f8
159922: 95 16 f8 01              s1 = sp + 0x1f8
159926: 50 20 c4 08 9e 65 fe     ra = 2244, jump @4125
      :                          @11241 [@dyn 1122]
159933: 95 17 10 01              a0 = sp + 0x110
159937: 7b 17 28 02              u64 [sp + 0x228] = a0
159941: 33 07 28 0c              a0 = 0xc28
159945: 7b 17 30 02              u64 [sp + 0x230] = a0
159949: 7b 16 38 02              u64 [sp + 0x238] = s1
159953: 33 07 54 02              a0 = 0x254
159957: 7b 17 40 02              u64 [sp + 0x240] = a0
159961: 33 07 60 20 01           a0 = 0x12060
159966: 7b 17 80 02              u64 [sp + 0x280] = a0
159970: 49 21 88 02 02           u64 [sp + 648] = 0x2
159975: 49 21 a0 02              u64 [sp + 672] = 0
159979: 95 18 28 02              a1 = sp + 0x228
159983: 7b 18 90 02              u64 [sp + 0x290] = a1
159987: 49 21 98 02 02           u64 [sp + 664] = 0x2
159992: 95 17 d0 01              a0 = sp + 0x1d0
159996: 95 18 80 02              a1 = sp + 0x280
160000: 50 20 c6 08 47 de fd     ra = 2246, jump @1491
      :                          @11242 [@dyn 1123]
160007: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
160011: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
160015: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
160019: 7b 17 60                 u64 [sp + 0x60] = a0
160022: 33 07 02                 a0 = 0x2
160025: 33 08                    a1 = 0
160027: 33 09                    a2 = 0
160029: 64 6a                    a3 = s1
160031: 33 00 c8 08              ra = 0x8c8
160035: 0a 64                    ecalli 100 // 'log'
160037: 01                       fallthrough
      :                          @11243 [@dyn 1124]
160038: 82 1c 60                 a5 = u64 [sp + 0x60]
160041: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
160046: 55 38 00 00 f0 09        jump @11245 if a1 >=u 4293918720
      :                          @11244
160052: 28 b7 70                 jump @12862
      :                          @11245
160055: 33 07 b0 02 03           a0 = 0x302b0
160060: 95 77 00 00 10           a0 = a0 + 0x100000
160065: 01                       fallthrough
      :                          @11246
160066: 82 78                    a1 = u64 [a0]
160068: c9 87 09                 a2 = a0 - a1
160071: aa 69 06                 jump @11248 if a2 == s1
      :                          @11247
160074: 28 a1 70                 jump @12862
      :                          @11248
160077: c9 c8 09                 a2 = a1 - a5
160080: 01                       fallthrough
      :                          @11249
160081: 82 7a                    a3 = u64 [a0]
160083: ab 8a ef                 jump @11246 if a3 != a1
      :                          @11250
160086: 7b 79                    u64 [a0] = a2
160088: 33 0b                    a4 = 0
160090: 01                       fallthrough
      :                          @11251
160091: ab 8a e7                 jump @11246 if a3 != a1
      :                          @11252
160094: 28 8d 70                 jump @12862
      :                          @11253 [@dyn 1125]
160097: 49 21 b8 02              u64 [sp + 696] = 0
160101: 49 21 b0 02              u64 [sp + 688] = 0
160105: 49 21 a8 02              u64 [sp + 680] = 0
160109: 49 21 a0 02              u64 [sp + 672] = 0
160113: 49 21 98 02              u64 [sp + 664] = 0
160117: 49 21 90 02              u64 [sp + 656] = 0
160121: 49 21 88 02              u64 [sp + 648] = 0
160125: 49 21 80 02              u64 [sp + 640] = 0
160129: 3a 08 70 02 03           a1 = u64 [0x30270]
160134: 97 89 0d                 a2 = a1 << 0xd
160137: d3 89 09                 a2 = a2 ^ a1
160140: 98 9a 07                 a3 = a2 >> 0x7
160143: 3a 08 58 01 03           a1 = u64 [0x30158]
160148: d3 a9 09                 a2 = a2 ^ a3
160151: 97 9a 11                 a3 = a2 << 0x11
160154: d3 a9 09                 a2 = a2 ^ a3
160157: ca 89 0a                 a3 = a2 * a1
160160: 3e 09 70 02 03           u64 [0x30270] = a2
160165: 7b 1a 80 02              u64 [sp + 0x280] = a3
160169: 3a 09 70 02 03           a2 = u64 [0x30270]
160174: 97 9a 0d                 a3 = a2 << 0xd
160177: d3 a9 09                 a2 = a2 ^ a3
160180: 98 9a 07                 a3 = a2 >> 0x7
160183: d3 a9 09                 a2 = a2 ^ a3
160186: 97 9a 11                 a3 = a2 << 0x11
160189: d3 a9 09                 a2 = a2 ^ a3
160192: ca 89 0a                 a3 = a2 * a1
160195: 3e 09 70 02 03           u64 [0x30270] = a2
160200: 7b 1a 88 02              u64 [sp + 0x288] = a3
160204: 3a 09 70 02 03           a2 = u64 [0x30270]
160209: 97 9a 0d                 a3 = a2 << 0xd
160212: d3 a9 09                 a2 = a2 ^ a3
160215: 98 9a 07                 a3 = a2 >> 0x7
160218: d3 a9 09                 a2 = a2 ^ a3
160221: 97 9a 11                 a3 = a2 << 0x11
160224: d3 a9 09                 a2 = a2 ^ a3
160227: ca 89 0a                 a3 = a2 * a1
160230: 3e 09 70 02 03           u64 [0x30270] = a2
160235: 7b 1a 90 02              u64 [sp + 0x290] = a3
160239: 3a 09 70 02 03           a2 = u64 [0x30270]
160244: 97 9a 0d                 a3 = a2 << 0xd
160247: d3 a9 09                 a2 = a2 ^ a3
160250: 98 9a 07                 a3 = a2 >> 0x7
160253: d3 a9 09                 a2 = a2 ^ a3
160256: 97 9a 11                 a3 = a2 << 0x11
160259: d3 a9 09                 a2 = a2 ^ a3
160262: ca 89 0a                 a3 = a2 * a1
160265: 3e 09 70 02 03           u64 [0x30270] = a2
160270: 7b 1a 98 02              u64 [sp + 0x298] = a3
160274: 3a 09 70 02 03           a2 = u64 [0x30270]
160279: 97 9a 0d                 a3 = a2 << 0xd
160282: d3 a9 09                 a2 = a2 ^ a3
160285: 98 9a 07                 a3 = a2 >> 0x7
160288: d3 a9 09                 a2 = a2 ^ a3
160291: 97 9a 11                 a3 = a2 << 0x11
160294: d3 a9 09                 a2 = a2 ^ a3
160297: ca 89 0a                 a3 = a2 * a1
160300: 3e 09 70 02 03           u64 [0x30270] = a2
160305: 7b 1a a0 02              u64 [sp + 0x2a0] = a3
160309: 3a 09 70 02 03           a2 = u64 [0x30270]
160314: 97 9a 0d                 a3 = a2 << 0xd
160317: d3 a9 09                 a2 = a2 ^ a3
160320: 98 9a 07                 a3 = a2 >> 0x7
160323: d3 a9 09                 a2 = a2 ^ a3
160326: 97 9a 11                 a3 = a2 << 0x11
160329: d3 a9 09                 a2 = a2 ^ a3
160332: ca 89 0a                 a3 = a2 * a1
160335: 3e 09 70 02 03           u64 [0x30270] = a2
160340: 7b 1a a8 02              u64 [sp + 0x2a8] = a3
160344: 3a 09 70 02 03           a2 = u64 [0x30270]
160349: 97 9a 0d                 a3 = a2 << 0xd
160352: d3 a9 09                 a2 = a2 ^ a3
160355: 98 9a 07                 a3 = a2 >> 0x7
160358: d3 a9 09                 a2 = a2 ^ a3
160361: 97 9a 11                 a3 = a2 << 0x11
160364: d3 a9 09                 a2 = a2 ^ a3
160367: ca 89 0a                 a3 = a2 * a1
160370: 3e 09 70 02 03           u64 [0x30270] = a2
160375: 7b 1a b0 02              u64 [sp + 0x2b0] = a3
160379: 3a 09 70 02 03           a2 = u64 [0x30270]
160384: 97 9a 0d                 a3 = a2 << 0xd
160387: d3 a9 09                 a2 = a2 ^ a3
160390: 98 9a 07                 a3 = a2 >> 0x7
160393: d3 a9 09                 a2 = a2 ^ a3
160396: 97 9a 11                 a3 = a2 << 0x11
160399: d3 a9 09                 a2 = a2 ^ a3
160402: ca 89 08                 a1 = a2 * a1
160405: 3e 09 70 02 03           u64 [0x30270] = a2
160410: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
160414: 95 17 80 02              a0 = sp + 0x280
160418: 95 16 80 02              s1 = sp + 0x280
160422: 95 11 f0                 sp = sp + 0xfffffffffffffff0
160425: 7b 15 08                 u64 [sp + 0x8] = s0
160428: 7b 16                    u64 [sp] = s1
160430: 82 78                    a1 = u64 [a0]
160432: 82 79 08                 a2 = u64 [a0 + 0x8]
160435: 82 7a 10                 a3 = u64 [a0 + 0x10]
160438: 82 7b 18                 a4 = u64 [a0 + 0x18]
160441: c8 89 03                 t1 = a2 + a1
160444: c9 98 02                 t0 = a1 - a2
160447: c8 ab 04                 t2 = a4 + a3
160450: 82 78 20                 a1 = u64 [a0 + 0x20]
160453: 82 7c 28                 a5 = u64 [a0 + 0x28]
160456: 82 79 30                 a2 = u64 [a0 + 0x30]
160459: 82 75 38                 s0 = u64 [a0 + 0x38]
160462: c9 ba 0a                 a3 = a3 - a4
160465: c8 8c 06                 s1 = a5 + a1
160468: c9 c8 08                 a1 = a1 - a5
160471: c8 95 0c                 a5 = s0 + a2
160474: c9 59 09                 a2 = a2 - s0
160477: c8 34 05                 s0 = t2 + t1
160480: c9 43 03                 t1 = t1 - t2
160483: c8 2a 04                 t2 = a3 + t0
160486: c9 a2 0a                 a3 = t0 - a3
160489: c8 6c 0b                 a4 = a5 + s1
160492: c9 c6 06                 s1 = s1 - a5
160495: c8 89 0c                 a5 = a2 + a1
160498: c9 98 08                 a1 = a1 - a2
160501: c8 5b 09                 a2 = a4 + s0
160504: 7b 79                    u64 [a0] = a2
160506: c9 b5 05                 s0 = s0 - a4
160509: 7b 75 20                 u64 [a0 + 0x20] = s0
160512: c8 4c 09                 a2 = a5 + t2
160515: 7b 79 08                 u64 [a0 + 0x8] = a2
160518: c9 c4 09                 a2 = t2 - a5
160521: 7b 79 28                 u64 [a0 + 0x28] = a2
160524: c8 36 09                 a2 = s1 + t1
160527: 7b 79 10                 u64 [a0 + 0x10] = a2
160530: c9 63 09                 a2 = t1 - s1
160533: 7b 79 30                 u64 [a0 + 0x30] = a2
160536: c8 a8 09                 a2 = a1 + a3
160539: 7b 79 18                 u64 [a0 + 0x18] = a2
160542: c9 8a 0a                 a3 = a3 - a1
160545: 7b 7a 38                 u64 [a0 + 0x38] = a3
160548: 82 15 08                 s0 = u64 [sp + 0x8]
160551: 82 16                    s1 = u64 [sp]
160553: 95 11 10                 sp = sp + 0x10
160556: 7b 16 d0 01              u64 [sp + 0x1d0] = s1
160560: 33 07 ec 00              a0 = 0xec
160564: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
160568: 33 07 88 20 01           a0 = 0x12088
160573: 7b 17 28 02              u64 [sp + 0x228] = a0
160577: 49 21 30 02 01           u64 [sp + 560] = 0x1
160582: 49 21 48 02              u64 [sp + 584] = 0
160586: 95 18 d0 01              a1 = sp + 0x1d0
160590: 7b 18 38 02              u64 [sp + 0x238] = a1
160594: 49 21 40 02 01           u64 [sp + 576] = 0x1
160599: 95 17 f8 01              a0 = sp + 0x1f8
160603: 95 18 28 02              a1 = sp + 0x228
160607: 50 20 cc 08 e8 db fd     ra = 2252, jump @1491
      :                          @11254 [@dyn 1126]
160614: 82 16 00 02              s1 = u64 [sp + 0x200]
160618: 82 1b 08 02              a4 = u64 [sp + 0x208]
160622: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
160626: 7b 17 60                 u64 [sp + 0x60] = a0
160629: 33 07 02                 a0 = 0x2
160632: 33 08                    a1 = 0
160634: 33 09                    a2 = 0
160636: 64 6a                    a3 = s1
160638: 33 00 ce 08              ra = 0x8ce
160642: 0a 64                    ecalli 100 // 'log'
160644: 01                       fallthrough
      :                          @11255 [@dyn 1127]
160645: 82 1c 60                 a5 = u64 [sp + 0x60]
160648: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
160653: 55 38 00 00 f0 09        jump @11257 if a1 >=u 4293918720
      :                          @11256
160659: 28 58 6e                 jump @12862
      :                          @11257
160662: 33 07 b0 02 03           a0 = 0x302b0
160667: 95 77 00 00 10           a0 = a0 + 0x100000
160672: 01                       fallthrough
      :                          @11258
160673: 82 78                    a1 = u64 [a0]
160675: c9 87 09                 a2 = a0 - a1
160678: aa 69 06                 jump @11260 if a2 == s1
      :                          @11259
160681: 28 42 6e                 jump @12862
      :                          @11260
160684: c9 c8 09                 a2 = a1 - a5
160687: 01                       fallthrough
      :                          @11261
160688: 82 7a                    a3 = u64 [a0]
160690: ab 8a ef                 jump @11258 if a3 != a1
      :                          @11262
160693: 7b 79                    u64 [a0] = a2
160695: 33 0b                    a4 = 0
160697: 01                       fallthrough
      :                          @11263
160698: ab 8a e7                 jump @11258 if a3 != a1
      :                          @11264
160701: 28 2e 6e                 jump @12862
      :                          @11265 [@dyn 1128]
160704: 3a 08 70 02 03           a1 = u64 [0x30270]
160709: 97 89 0d                 a2 = a1 << 0xd
160712: d3 89 09                 a2 = a2 ^ a1
160715: 98 9a 07                 a3 = a2 >> 0x7
160718: 3a 08 58 01 03           a1 = u64 [0x30158]
160723: d3 a9 09                 a2 = a2 ^ a3
160726: 97 9a 11                 a3 = a2 << 0x11
160729: d3 a9 09                 a2 = a2 ^ a3
160732: ca 89 0a                 a3 = a2 * a1
160735: 3a 0b a8 01 03           a4 = u64 [0x301a8]
160740: 3e 09 70 02 03           u64 [0x30270] = a2
160745: 98 a9 02                 a2 = a3 >> 0x2
160748: d6 b9 09                 a2 = a2 mulhu a4
160751: 98 99 02                 a2 = a2 >> 0x2
160754: 33 0c 64                 a5 = 0x64
160757: ca c9 09                 a2 = a2 * a5
160760: c9 9a 0a                 a3 = a3 - a2
160763: 95 aa 01                 a3 = a3 + 0x1
160766: 7b 1a b8 01              u64 [sp + 0x1b8] = a3
160770: 3a 09 70 02 03           a2 = u64 [0x30270]
160775: 97 9a 0d                 a3 = a2 << 0xd
160778: d3 a9 09                 a2 = a2 ^ a3
160781: 98 9a 07                 a3 = a2 >> 0x7
160784: d3 a9 09                 a2 = a2 ^ a3
160787: 97 9a 11                 a3 = a2 << 0x11
160790: d3 a9 09                 a2 = a2 ^ a3
160793: ca 89 0a                 a3 = a2 * a1
160796: 3e 09 70 02 03           u64 [0x30270] = a2
160801: 98 a7 02                 a0 = a3 >> 0x2
160804: d6 b7 07                 a0 = a0 mulhu a4
160807: 98 77 02                 a0 = a0 >> 0x2
160810: ca c7 07                 a0 = a0 * a5
160813: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
160817: c9 7a 09                 a2 = a3 - a0
160820: 95 99 01                 a2 = a2 + 0x1
160823: 7b 19 10 01              u64 [sp + 0x110] = a2
160827: 95 17 f8 01              a0 = sp + 0x1f8
160831: 95 16 f8 01              s1 = sp + 0x1f8
160835: 33 00 d2 08              ra = 0x8d2
160839: 95 11 88                 sp = sp + 0xffffffffffffff88
160842: 7b 10 70                 u64 [sp + 0x70] = ra
160845: 7b 15 68                 u64 [sp + 0x68] = s0
160848: 7b 16 60                 u64 [sp + 0x60] = s1
160851: 64 85                    s0 = a1
160853: 7b 17                    u64 [sp] = a0
160855: 33 08                    a1 = 0
160857: 49 11 30                 u64 [sp + 48] = 0
160860: 33 07 08                 a0 = 0x8
160863: 7b 17 38                 u64 [sp + 0x38] = a0
160866: 49 11 40                 u64 [sp + 64] = 0
160869: 28 fe 63 fe              jump @4163
      :                          @11266 [@dyn 1129]
160873: 95 17 b8 01              a0 = sp + 0x1b8
160877: 7b 17 80 02              u64 [sp + 0x280] = a0
160881: 33 07 28 0c              a0 = 0xc28
160885: 7b 17 88 02              u64 [sp + 0x288] = a0
160889: 95 18 10 01              a1 = sp + 0x110
160893: 7b 18 90 02              u64 [sp + 0x290] = a1
160897: 7b 17 98 02              u64 [sp + 0x298] = a0
160901: 7b 16 a0 02              u64 [sp + 0x2a0] = s1
160905: 33 07 10 02              a0 = 0x210
160909: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
160913: 33 07 b8 20 01           a0 = 0x120b8
160918: 7b 17 28 02              u64 [sp + 0x228] = a0
160922: 49 21 30 02 03           u64 [sp + 560] = 0x3
160927: 49 21 48 02              u64 [sp + 584] = 0
160931: 95 18 80 02              a1 = sp + 0x280
160935: 7b 18 38 02              u64 [sp + 0x238] = a1
160939: 49 21 40 02 03           u64 [sp + 576] = 0x3
160944: 95 17 d0 01              a0 = sp + 0x1d0
160948: 95 18 28 02              a1 = sp + 0x228
160952: 50 20 d4 08 8f da fd     ra = 2260, jump @1491
      :                          @11267 [@dyn 1130]
160959: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
160963: 51 08 2f                 jump @11274 if a1 == 0
      :                          @11268
160966: 56 38 00 00 01 2c        jump @11274 if a1 >u 65536
      :                          @11269
160972: 82 17 00 02              a0 = u64 [sp + 0x200]
160976: 97 88 04                 a1 = a1 << 0x4
160979: 33 09 b0 02 03           a2 = 0x302b0
160984: 95 99 00 00 10           a2 = a2 + 0x100000
160989: 01                       fallthrough
      :                          @11270
160990: 82 9a                    a3 = u64 [a2]
160992: c9 a9 0b                 a4 = a2 - a3
160995: ab 7b 0f                 jump @11274 if a4 != a0
      :                          @11271
160998: c9 8a 0b                 a4 = a3 - a1
161001: 01                       fallthrough
      :                          @11272
161002: 82 9c                    a5 = u64 [a2]
161004: ab ac f2                 jump @11270 if a5 != a3
      :                          @11273
161007: 7b 9b                    u64 [a2] = a4
161009: 01                       fallthrough
      :                          @11274
161010: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
161014: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
161018: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
161022: 7b 17 60                 u64 [sp + 0x60] = a0
161025: 33 07 02                 a0 = 0x2
161028: 33 08                    a1 = 0
161030: 33 09                    a2 = 0
161032: 64 6a                    a3 = s1
161034: 33 00 d6 08              ra = 0x8d6
161038: 0a 64                    ecalli 100 // 'log'
161040: 01                       fallthrough
      :                          @11275 [@dyn 1131]
161041: 82 1c 60                 a5 = u64 [sp + 0x60]
161044: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
161049: 55 38 00 00 f0 09        jump @11277 if a1 >=u 4293918720
      :                          @11276
161055: 28 cc 6c                 jump @12862
      :                          @11277
161058: 33 07 b0 02 03           a0 = 0x302b0
161063: 95 77 00 00 10           a0 = a0 + 0x100000
161068: 01                       fallthrough
      :                          @11278
161069: 82 78                    a1 = u64 [a0]
161071: c9 87 09                 a2 = a0 - a1
161074: aa 69 06                 jump @11280 if a2 == s1
      :                          @11279
161077: 28 b6 6c                 jump @12862
      :                          @11280
161080: c9 c8 09                 a2 = a1 - a5
161083: 01                       fallthrough
      :                          @11281
161084: 82 7a                    a3 = u64 [a0]
161086: ab 8a ef                 jump @11278 if a3 != a1
      :                          @11282
161089: 7b 79                    u64 [a0] = a2
161091: 33 0b                    a4 = 0
161093: 01                       fallthrough
      :                          @11283
161094: ab 8a e7                 jump @11278 if a3 != a1
      :                          @11284
161097: 28 a2 6c                 jump @12862
      :                          @11285 [@dyn 1132]
161100: 3a 08 70 02 03           a1 = u64 [0x30270]
161105: 97 89 0d                 a2 = a1 << 0xd
161108: d3 98 08                 a1 = a1 ^ a2
161111: 98 89 07                 a2 = a1 >> 0x7
161114: d3 98 08                 a1 = a1 ^ a2
161117: 97 89 11                 a2 = a1 << 0x11
161120: d3 98 08                 a1 = a1 ^ a2
161123: 3a 09 58 01 03           a2 = u64 [0x30158]
161128: 3a 0a 68 01 03           a3 = u64 [0x30168]
161133: 3e 08 70 02 03           u64 [0x30270] = a1
161138: ca 98 07                 a0 = a1 * a2
161141: 98 78 01                 a1 = a0 >> 0x1
161144: d6 a8 08                 a1 = a1 mulhu a3
161147: 98 88 04                 a1 = a1 >> 0x4
161150: 96 88 32                 a1 = a1 * 0x32
161153: c9 87 07                 a0 = a0 - a1
161156: 95 78 01                 a1 = a0 + 0x1
161159: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
161163: 95 17 f8 01              a0 = sp + 0x1f8
161167: 33 00 da 08              ra = 0x8da
161171: 95 11 b0                 sp = sp + 0xffffffffffffffb0
161174: 7b 10 48                 u64 [sp + 0x48] = ra
161177: 7b 15 40                 u64 [sp + 0x40] = s0
161180: 7b 16 38                 u64 [sp + 0x38] = s1
161183: 64 83                    t1 = a1
161185: 7b 17                    u64 [sp] = a0
161187: 33 09 b0 02 03           a2 = 0x302b0
161192: 33 02 00 00 10           t0 = 0x100000
161197: c8 29 0b                 a4 = a2 + t0
161200: 28 d6 63 fe              jump @4183
      :                          @11286 [@dyn 1133]
161204: 82 17 08 02              a0 = u64 [sp + 0x208]
161208: 7b 17 10 01              u64 [sp + 0x110] = a0
161212: 95 17 b8 01              a0 = sp + 0x1b8
161216: 7b 17 28 02              u64 [sp + 0x228] = a0
161220: 33 07 28 0c              a0 = 0xc28
161224: 7b 17 30 02              u64 [sp + 0x230] = a0
161228: 95 18 10 01              a1 = sp + 0x110
161232: 7b 18 38 02              u64 [sp + 0x238] = a1
161236: 7b 17 40 02              u64 [sp + 0x240] = a0
161240: 33 07 08 21 01           a0 = 0x12108
161245: 7b 17 80 02              u64 [sp + 0x280] = a0
161249: 49 21 88 02 02           u64 [sp + 648] = 0x2
161254: 49 21 a0 02              u64 [sp + 672] = 0
161258: 95 18 28 02              a1 = sp + 0x228
161262: 7b 18 90 02              u64 [sp + 0x290] = a1
161266: 49 21 98 02 02           u64 [sp + 664] = 0x2
161271: 95 17 d0 01              a0 = sp + 0x1d0
161275: 95 18 80 02              a1 = sp + 0x280
161279: 50 20 dc 08 48 d9 fd     ra = 2268, jump @1491
      :                          @11287 [@dyn 1134]
161286: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
161290: 51 08 2f                 jump @11294 if a1 == 0
      :                          @11288
161293: 56 38 00 00 01 2c        jump @11294 if a1 >u 65536
      :                          @11289
161299: 82 17 00 02              a0 = u64 [sp + 0x200]
161303: 97 88 04                 a1 = a1 << 0x4
161306: 33 09 b0 02 03           a2 = 0x302b0
161311: 95 99 00 00 10           a2 = a2 + 0x100000
161316: 01                       fallthrough
      :                          @11290
161317: 82 9a                    a3 = u64 [a2]
161319: c9 a9 0b                 a4 = a2 - a3
161322: ab 7b 0f                 jump @11294 if a4 != a0
      :                          @11291
161325: c9 8a 0b                 a4 = a3 - a1
161328: 01                       fallthrough
      :                          @11292
161329: 82 9c                    a5 = u64 [a2]
161331: ab ac f2                 jump @11290 if a5 != a3
      :                          @11293
161334: 7b 9b                    u64 [a2] = a4
161336: 01                       fallthrough
      :                          @11294
161337: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
161341: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
161345: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
161349: 7b 17 60                 u64 [sp + 0x60] = a0
161352: 33 07 02                 a0 = 0x2
161355: 33 08                    a1 = 0
161357: 33 09                    a2 = 0
161359: 64 6a                    a3 = s1
161361: 33 00 de 08              ra = 0x8de
161365: 0a 64                    ecalli 100 // 'log'
161367: 01                       fallthrough
      :                          @11295 [@dyn 1135]
161368: 82 1c 60                 a5 = u64 [sp + 0x60]
161371: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
161376: 55 38 00 00 f0 09        jump @11297 if a1 >=u 4293918720
      :                          @11296
161382: 28 85 6b                 jump @12862
      :                          @11297
161385: 33 07 b0 02 03           a0 = 0x302b0
161390: 95 77 00 00 10           a0 = a0 + 0x100000
161395: 01                       fallthrough
      :                          @11298
161396: 82 78                    a1 = u64 [a0]
161398: c9 87 09                 a2 = a0 - a1
161401: aa 69 06                 jump @11300 if a2 == s1
      :                          @11299
161404: 28 6f 6b                 jump @12862
      :                          @11300
161407: c9 c8 09                 a2 = a1 - a5
161410: 01                       fallthrough
      :                          @11301
161411: 82 7a                    a3 = u64 [a0]
161413: ab 8a ef                 jump @11298 if a3 != a1
      :                          @11302
161416: 7b 79                    u64 [a0] = a2
161418: 33 0b                    a4 = 0
161420: 01                       fallthrough
      :                          @11303
161421: ab 8a e7                 jump @11298 if a3 != a1
      :                          @11304
161424: 28 5b 6b                 jump @12862
      :                          @11305 [@dyn 1136]
161427: 95 17 d0 01              a0 = sp + 0x1d0
161431: 95 16 d0 01              s1 = sp + 0x1d0
161435: 33 00 e2 08              ra = 0x8e2
161439: 95 11 f8                 sp = sp + 0xfffffffffffffff8
161442: 7b 15                    u64 [sp] = s0
161444: 33 03 b0 02 03           t1 = 0x302b0
161449: 33 02 00 00 10           t0 = 0x100000
161454: c8 23 04                 t2 = t1 + t0
161457: 28 6a fe fd              jump @2179
      :                          @11306 [@dyn 1137]
161461: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
161465: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
161469: 50 20 e4 08 14 32 fe     ra = 2276, jump @3049
      :                          @11307 [@dyn 1138]
161476: 78 17 10 01              u8 [sp + 0x110] = a0
161480: 95 17 10 01              a0 = sp + 0x110
161484: 7b 17 28 02              u64 [sp + 0x228] = a0
161488: 33 07 80 0c              a0 = 0xc80
161492: 7b 17 30 02              u64 [sp + 0x230] = a0
161496: 7b 16 38 02              u64 [sp + 0x238] = s1
161500: 33 07 20 02              a0 = 0x220
161504: 7b 17 40 02              u64 [sp + 0x240] = a0
161508: 33 07 38 21 01           a0 = 0x12138
161513: 7b 17 80 02              u64 [sp + 0x280] = a0
161517: 49 21 88 02 02           u64 [sp + 648] = 0x2
161522: 49 21 a0 02              u64 [sp + 672] = 0
161526: 95 18 28 02              a1 = sp + 0x228
161530: 7b 18 90 02              u64 [sp + 0x290] = a1
161534: 49 21 98 02 02           u64 [sp + 664] = 0x2
161539: 95 17 f8 01              a0 = sp + 0x1f8
161543: 95 18 80 02              a1 = sp + 0x280
161547: 50 20 e6 08 3c d8 fd     ra = 2278, jump @1491
      :                          @11308 [@dyn 1139]
161554: 82 16 00 02              s1 = u64 [sp + 0x200]
161558: 82 1b 08 02              a4 = u64 [sp + 0x208]
161562: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
161566: 7b 17 60                 u64 [sp + 0x60] = a0
161569: 33 07 02                 a0 = 0x2
161572: 33 08                    a1 = 0
161574: 33 09                    a2 = 0
161576: 64 6a                    a3 = s1
161578: 33 00 e8 08              ra = 0x8e8
161582: 0a 64                    ecalli 100 // 'log'
161584: 01                       fallthrough
      :                          @11309 [@dyn 1140]
161585: 82 1c 60                 a5 = u64 [sp + 0x60]
161588: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
161593: 53 38 00 00 f0 25        jump @11315 if a1 <u 4293918720
      :                          @11310
161599: 33 07 b0 02 03           a0 = 0x302b0
161604: 95 77 00 00 10           a0 = a0 + 0x100000
161609: 01                       fallthrough
      :                          @11311
161610: 82 78                    a1 = u64 [a0]
161612: c9 87 09                 a2 = a0 - a1
161615: ab 69 0f                 jump @11315 if a2 != s1
      :                          @11312
161618: c9 c8 09                 a2 = a1 - a5
161621: 01                       fallthrough
      :                          @11313
161622: 82 7a                    a3 = u64 [a0]
161624: ab 8a f2                 jump @11311 if a3 != a1
      :                          @11314
161627: 7b 79                    u64 [a0] = a2
161629: 01                       fallthrough
      :                          @11315
161630: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
161634: 52 08 06                 jump @11317 if a1 != 0
      :                          @11316
161637: 28 86 6a                 jump @12862
      :                          @11317
161640: 54 38 00 00 02 09        jump @11319 if a1 <=u 131072
      :                          @11318
161646: 28 7d 6a                 jump @12862
      :                          @11319
161649: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
161653: 97 88 03                 a1 = a1 << 0x3
161656: 33 09 b0 02 03           a2 = 0x302b0
161661: 95 99 00 00 10           a2 = a2 + 0x100000
161666: 01                       fallthrough
      :                          @11320
161667: 82 9a                    a3 = u64 [a2]
161669: c9 a9 0b                 a4 = a2 - a3
161672: aa 7b 06                 jump @11322 if a4 == a0
      :                          @11321
161675: 28 60 6a                 jump @12862
      :                          @11322
161678: c9 8a 0b                 a4 = a3 - a1
161681: 01                       fallthrough
      :                          @11323
161682: 82 9c                    a5 = u64 [a2]
161684: ab ac ef                 jump @11320 if a5 != a3
      :                          @11324
161687: 7b 9b                    u64 [a2] = a4
161689: 33 06                    s1 = 0
161691: 01                       fallthrough
      :                          @11325
161692: ab ac e7                 jump @11320 if a5 != a3
      :                          @11326
161695: 28 4c 6a                 jump @12862
      :                          @11327 [@dyn 1141]
161698: 95 17 d0 01              a0 = sp + 0x1d0
161702: 33 08 04                 a1 = 0x4
161705: 95 16 d0 01              s1 = sp + 0x1d0
161709: 50 20 ec 08 bb 02 fe     ra = 2284, jump @2226
      :                          @11328 [@dyn 1142]
161716: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
161720: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
161724: 33 00 ee 08              ra = 0x8ee
161728: 33 0a                    a3 = 0
161730: 97 89 03                 a2 = a1 << 0x3
161733: c8 97 07                 a0 = a0 + a2
161736: 28 82 31 fe              jump @3063
      :                          @11329 [@dyn 1143]
161740: 78 17 10 01              u8 [sp + 0x110] = a0
161744: 95 17 10 01              a0 = sp + 0x110
161748: 7b 17 28 02              u64 [sp + 0x228] = a0
161752: 33 07 80 0c              a0 = 0xc80
161756: 7b 17 30 02              u64 [sp + 0x230] = a0
161760: 7b 16 38 02              u64 [sp + 0x238] = s1
161764: 33 07 20 02              a0 = 0x220
161768: 7b 17 40 02              u64 [sp + 0x240] = a0
161772: 33 07 60 21 01           a0 = 0x12160
161777: 7b 17 80 02              u64 [sp + 0x280] = a0
161781: 49 21 88 02 02           u64 [sp + 648] = 0x2
161786: 49 21 a0 02              u64 [sp + 672] = 0
161790: 95 18 28 02              a1 = sp + 0x228
161794: 7b 18 90 02              u64 [sp + 0x290] = a1
161798: 49 21 98 02 02           u64 [sp + 664] = 0x2
161803: 95 17 f8 01              a0 = sp + 0x1f8
161807: 95 18 80 02              a1 = sp + 0x280
161811: 50 20 f0 08 34 d7 fd     ra = 2288, jump @1491
      :                          @11330 [@dyn 1144]
161818: 82 16 00 02              s1 = u64 [sp + 0x200]
161822: 82 1b 08 02              a4 = u64 [sp + 0x208]
161826: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
161830: 7b 17 60                 u64 [sp + 0x60] = a0
161833: 33 07 02                 a0 = 0x2
161836: 33 08                    a1 = 0
161838: 33 09                    a2 = 0
161840: 64 6a                    a3 = s1
161842: 33 00 f2 08              ra = 0x8f2
161846: 0a 64                    ecalli 100 // 'log'
161848: 01                       fallthrough
      :                          @11331 [@dyn 1145]
161849: 82 1c 60                 a5 = u64 [sp + 0x60]
161852: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
161857: 53 38 00 00 f0 25        jump @11337 if a1 <u 4293918720
      :                          @11332
161863: 33 07 b0 02 03           a0 = 0x302b0
161868: 95 77 00 00 10           a0 = a0 + 0x100000
161873: 01                       fallthrough
      :                          @11333
161874: 82 78                    a1 = u64 [a0]
161876: c9 87 09                 a2 = a0 - a1
161879: ab 69 0f                 jump @11337 if a2 != s1
      :                          @11334
161882: c9 c8 09                 a2 = a1 - a5
161885: 01                       fallthrough
      :                          @11335
161886: 82 7a                    a3 = u64 [a0]
161888: ab 8a f2                 jump @11333 if a3 != a1
      :                          @11336
161891: 7b 79                    u64 [a0] = a2
161893: 01                       fallthrough
      :                          @11337
161894: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
161898: 52 08 06                 jump @11339 if a1 != 0
      :                          @11338
161901: 28 7e 69                 jump @12862
      :                          @11339
161904: 54 38 00 00 02 09        jump @11341 if a1 <=u 131072
      :                          @11340
161910: 28 75 69                 jump @12862
      :                          @11341
161913: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
161917: 97 88 03                 a1 = a1 << 0x3
161920: 33 09 b0 02 03           a2 = 0x302b0
161925: 95 99 00 00 10           a2 = a2 + 0x100000
161930: 01                       fallthrough
      :                          @11342
161931: 82 9a                    a3 = u64 [a2]
161933: c9 a9 0b                 a4 = a2 - a3
161936: aa 7b 06                 jump @11344 if a4 == a0
      :                          @11343
161939: 28 58 69                 jump @12862
      :                          @11344
161942: c9 8a 0b                 a4 = a3 - a1
161945: 01                       fallthrough
      :                          @11345
161946: 82 9c                    a5 = u64 [a2]
161948: ab ac ef                 jump @11342 if a5 != a3
      :                          @11346
161951: 7b 9b                    u64 [a2] = a4
161953: 33 06                    s1 = 0
161955: 01                       fallthrough
      :                          @11347
161956: ab ac e7                 jump @11342 if a5 != a3
      :                          @11348
161959: 28 44 69                 jump @12862
      :                          @11349 [@dyn 1146]
161962: 95 17 10 01              a0 = sp + 0x110
161966: 33 00 f6 08              ra = 0x8f6
161970: 95 11 f8                 sp = sp + 0xfffffffffffffff8
161973: 7b 15                    u64 [sp] = s0
161975: 33 03 b0 02 03           t1 = 0x302b0
161980: 33 02 00 00 10           t0 = 0x100000
161985: c8 23 04                 t2 = t1 + t0
161988: 28 f5 02 fe              jump @2256
      :                          @11350 [@dyn 1147]
161992: 3a 07 70 02 03           a0 = u64 [0x30270]
161997: 97 78 0d                 a1 = a0 << 0xd
162000: d3 87 07                 a0 = a0 ^ a1
162003: 98 78 07                 a1 = a0 >> 0x7
162006: d3 87 07                 a0 = a0 ^ a1
162009: 97 7a 11                 a3 = a0 << 0x11
162012: d3 7a 0a                 a3 = a3 ^ a0
162015: 3e 0a 70 02 03           u64 [0x30270] = a3
162020: 82 18 20 01              a1 = u64 [sp + 0x120]
162024: 56 18 04 07              jump @11352 if a1 >u 4
      :                          @11351
162028: 28 5b 7a                 jump @13215
      :                          @11352
162031: 3a 07 58 01 03           a0 = u64 [0x30158]
162036: 82 18 18 01              a1 = u64 [sp + 0x118]
162040: ca 7a 0a                 a3 = a3 * a0
162043: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
162053: d6 ba 0b                 a4 = a3 mulhu a4
162056: 98 bc 02                 a5 = a4 >> 0x2
162059: 84 bb fc                 a4 = a4 & 0xfffffffffffffffc
162062: c8 cb 0b                 a4 = a4 + a5
162065: c9 ba 0a                 a3 = a3 - a4
162068: 97 aa 03                 a3 = a3 << 0x3
162071: c8 8a 0a                 a3 = a3 + a1
162074: 82 ab                    a4 = u64 [a3]
162076: 82 8c 20                 a5 = u64 [a1 + 0x20]
162079: 7b 8b 20                 u64 [a1 + 0x20] = a4
162082: 7b ac                    u64 [a3] = a5
162084: 3a 08 70 02 03           a1 = u64 [0x30270]
162089: 97 8a 0d                 a3 = a1 << 0xd
162092: d3 a8 08                 a1 = a1 ^ a3
162095: 98 8a 07                 a3 = a1 >> 0x7
162098: d3 8a 0a                 a3 = a3 ^ a1
162101: 97 a8 11                 a1 = a3 << 0x11
162104: d3 a8 08                 a1 = a1 ^ a3
162107: 3e 08 70 02 03           u64 [0x30270] = a1
162112: 82 18 20 01              a1 = u64 [sp + 0x120]
162116: 55 18 04 07              jump @11354 if a1 >=u 4
      :                          @11353
162120: 28 38 79                 jump @13196
      :                          @11354
162123: 82 18 18 01              a1 = u64 [sp + 0x118]
162127: 84 aa 03                 a3 = a3 & 0x3
162130: 97 aa 03                 a3 = a3 << 0x3
162133: c8 8a 0a                 a3 = a3 + a1
162136: 82 a9                    a2 = u64 [a3]
162138: 82 8b 18                 a4 = u64 [a1 + 0x18]
162141: 7b 89 18                 u64 [a1 + 0x18] = a2
162144: 7b ab                    u64 [a3] = a4
162146: 3a 08 70 02 03           a1 = u64 [0x30270]
162151: 97 8a 0d                 a3 = a1 << 0xd
162154: d3 a8 08                 a1 = a1 ^ a3
162157: 98 8a 07                 a3 = a1 >> 0x7
162160: d3 a8 08                 a1 = a1 ^ a3
162163: 97 8a 11                 a3 = a1 << 0x11
162166: d3 8a 0a                 a3 = a3 ^ a1
162169: 3e 0a 70 02 03           u64 [0x30270] = a3
162174: 82 18 20 01              a1 = u64 [sp + 0x120]
162178: 55 18 03 07              jump @11356 if a1 >=u 3
      :                          @11355
162182: 28 fb 78                 jump @13197
      :                          @11356
162185: 82 18 18 01              a1 = u64 [sp + 0x118]
162189: ca 7a 07                 a0 = a3 * a0
162192: 14 0a ab aa aa aa aa aa aa aa a3 = 0xaaaaaaaaaaaaaaab
162202: d6 a7 0a                 a3 = a0 mulhu a3
162205: 98 ab 01                 a4 = a3 >> 0x1
162208: 84 aa fe                 a3 = a3 & 0xfffffffffffffffe
162211: c8 ba 0a                 a3 = a3 + a4
162214: c9 a7 07                 a0 = a0 - a3
162217: 97 77 03                 a0 = a0 << 0x3
162220: c8 87 07                 a0 = a0 + a1
162223: 82 7a                    a3 = u64 [a0]
162225: 82 8b 10                 a4 = u64 [a1 + 0x10]
162228: 7b 8a 10                 u64 [a1 + 0x10] = a3
162231: 7b 7b                    u64 [a0] = a4
162233: 3a 07 70 02 03           a0 = u64 [0x30270]
162238: 97 78 0d                 a1 = a0 << 0xd
162241: d3 87 07                 a0 = a0 ^ a1
162244: 98 78 07                 a1 = a0 >> 0x7
162247: d3 87 07                 a0 = a0 ^ a1
162250: 97 78 11                 a1 = a0 << 0x11
162253: d3 78 08                 a1 = a1 ^ a0
162256: 3e 08 70 02 03           u64 [0x30270] = a1
162261: 82 18 20 01              a1 = u64 [sp + 0x120]
162265: 55 18 02 07              jump @11358 if a1 >=u 2
      :                          @11357
162269: 28 a2 78                 jump @13195
      :                          @11358
162272: 82 18 18 01              a1 = u64 [sp + 0x118]
162276: 84 77 01                 a0 = a0 & 0x1
162279: 97 77 03                 a0 = a0 << 0x3
162282: c8 87 07                 a0 = a0 + a1
162285: 82 79                    a2 = u64 [a0]
162287: 82 8a 08                 a3 = u64 [a1 + 0x8]
162290: 7b 89 08                 u64 [a1 + 0x8] = a2
162293: 7b 7a                    u64 [a0] = a3
162295: 82 17 18 01              a0 = u64 [sp + 0x118]
162299: 82 18 20 01              a1 = u64 [sp + 0x120]
162303: 50 20 f8 08 95 2f fe     ra = 2296, jump @3071
      :                          @11359 [@dyn 1148]
162310: 64 78                    a1 = a0
162312: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
162316: 95 17 d0 01              a0 = sp + 0x1d0
162320: 95 16 d0 01              s1 = sp + 0x1d0
162324: 33 00 fa 08              ra = 0x8fa
162328: 95 11 d0                 sp = sp + 0xffffffffffffffd0
162331: 7b 10 28                 u64 [sp + 0x28] = ra
162334: 7b 15 20                 u64 [sp + 0x20] = s0
162337: 7b 16 18                 u64 [sp + 0x18] = s1
162340: 64 74                    t2 = a0
162342: 33 07 b0 02 03           a0 = 0x302b0
162347: 33 03 b0 02 03           t1 = 0x302b0
162352: 33 02 00 00 10           t0 = 0x100000
162357: c8 23 0a                 a3 = t1 + t0
162360: 28 be 30 fe              jump @3106
      :                          @11360 [@dyn 1149]
162364: 95 17 10 01              a0 = sp + 0x110
162368: 7b 17 80 02              u64 [sp + 0x280] = a0
162372: 33 07 20 02              a0 = 0x220
162376: 7b 17 88 02              u64 [sp + 0x288] = a0
162380: 95 18 b8 01              a1 = sp + 0x1b8
162384: 7b 18 90 02              u64 [sp + 0x290] = a1
162388: 33 08 28 0c              a1 = 0xc28
162392: 7b 18 98 02              u64 [sp + 0x298] = a1
162396: 7b 16 a0 02              u64 [sp + 0x2a0] = s1
162400: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
162404: 33 07 90 21 01           a0 = 0x12190
162409: 7b 17 28 02              u64 [sp + 0x228] = a0
162413: 49 21 30 02 03           u64 [sp + 560] = 0x3
162418: 49 21 48 02              u64 [sp + 584] = 0
162422: 95 18 80 02              a1 = sp + 0x280
162426: 7b 18 38 02              u64 [sp + 0x238] = a1
162430: 49 21 40 02 03           u64 [sp + 576] = 0x3
162435: 95 17 f8 01              a0 = sp + 0x1f8
162439: 95 18 28 02              a1 = sp + 0x228
162443: 50 20 fc 08 bc d4 fd     ra = 2300, jump @1491
      :                          @11361 [@dyn 1150]
162450: 82 16 00 02              s1 = u64 [sp + 0x200]
162454: 82 1b 08 02              a4 = u64 [sp + 0x208]
162458: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
162462: 7b 17 60                 u64 [sp + 0x60] = a0
162465: 33 07 02                 a0 = 0x2
162468: 33 08                    a1 = 0
162470: 33 09                    a2 = 0
162472: 64 6a                    a3 = s1
162474: 33 00 fe 08              ra = 0x8fe
162478: 0a 64                    ecalli 100 // 'log'
162480: 01                       fallthrough
      :                          @11362 [@dyn 1151]
162481: 82 1c 60                 a5 = u64 [sp + 0x60]
162484: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
162489: 53 38 00 00 f0 25        jump @11368 if a1 <u 4293918720
      :                          @11363
162495: 33 07 b0 02 03           a0 = 0x302b0
162500: 95 77 00 00 10           a0 = a0 + 0x100000
162505: 01                       fallthrough
      :                          @11364
162506: 82 78                    a1 = u64 [a0]
162508: c9 87 09                 a2 = a0 - a1
162511: ab 69 0f                 jump @11368 if a2 != s1
      :                          @11365
162514: c9 c8 09                 a2 = a1 - a5
162517: 01                       fallthrough
      :                          @11366
162518: 82 7a                    a3 = u64 [a0]
162520: ab 8a f2                 jump @11364 if a3 != a1
      :                          @11367
162523: 7b 79                    u64 [a0] = a2
162525: 01                       fallthrough
      :                          @11368
162526: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
162530: 51 08 31                 jump @11375 if a1 == 0
      :                          @11369
162533: 56 38 00 00 02 2e        jump @11375 if a1 >u 131072
      :                          @11370
162539: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
162543: 97 88 03                 a1 = a1 << 0x3
162546: 33 09 b0 02 03           a2 = 0x302b0
162551: 95 99 00 00 10           a2 = a2 + 0x100000
162556: 01                       fallthrough
      :                          @11371
162557: 82 9a                    a3 = u64 [a2]
162559: c9 a9 0b                 a4 = a2 - a3
162562: ab 7b 11                 jump @11375 if a4 != a0
      :                          @11372
162565: c9 8a 0b                 a4 = a3 - a1
162568: 01                       fallthrough
      :                          @11373
162569: 82 9c                    a5 = u64 [a2]
162571: ab ac f2                 jump @11371 if a5 != a3
      :                          @11374
162574: 7b 9b                    u64 [a2] = a4
162576: 33 06                    s1 = 0
162578: 01                       fallthrough
      :                          @11375
162579: 82 18 10 01              a1 = u64 [sp + 0x110]
162583: 52 08 06                 jump @11377 if a1 != 0
      :                          @11376
162586: 28 d1 66                 jump @12862
      :                          @11377
162589: 54 38 00 00 02 09        jump @11379 if a1 <=u 131072
      :                          @11378
162595: 28 c8 66                 jump @12862
      :                          @11379
162598: 82 17 18 01              a0 = u64 [sp + 0x118]
162602: 97 88 03                 a1 = a1 << 0x3
162605: 33 09 b0 02 03           a2 = 0x302b0
162610: 95 99 00 00 10           a2 = a2 + 0x100000
162615: 01                       fallthrough
      :                          @11380
162616: 82 9a                    a3 = u64 [a2]
162618: c9 a9 0b                 a4 = a2 - a3
162621: aa 7b 06                 jump @11382 if a4 == a0
      :                          @11381
162624: 28 ab 66                 jump @12862
      :                          @11382
162627: c9 8a 0b                 a4 = a3 - a1
162630: 01                       fallthrough
      :                          @11383
162631: 82 9c                    a5 = u64 [a2]
162633: ab ac ef                 jump @11380 if a5 != a3
      :                          @11384
162636: 7b 9b                    u64 [a2] = a4
162638: 33 06                    s1 = 0
162640: 01                       fallthrough
      :                          @11385
162641: ab ac e7                 jump @11380 if a5 != a3
      :                          @11386
162644: 28 97 66                 jump @12862
      :                          @11387 [@dyn 1152]
162647: 95 17 10 01              a0 = sp + 0x110
162651: 33 08 05                 a1 = 0x5
162654: 50 20 02 09 0a ff fd     ra = 2306, jump @2226
      :                          @11388 [@dyn 1153]
162661: 82 17 18 01              a0 = u64 [sp + 0x118]
162665: 82 18 20 01              a1 = u64 [sp + 0x120]
162669: 50 20 04 09 03 31 fe     ra = 2308, jump @3129
      :                          @11389 [@dyn 1154]
162676: 64 78                    a1 = a0
162678: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
162682: 95 17 d0 01              a0 = sp + 0x1d0
162686: 95 16 d0 01              s1 = sp + 0x1d0
162690: 33 00 06 09              ra = 0x906
162694: 95 11 c8                 sp = sp + 0xffffffffffffffc8
162697: 7b 10 30                 u64 [sp + 0x30] = ra
162700: 7b 15 28                 u64 [sp + 0x28] = s0
162703: 7b 16 20                 u64 [sp + 0x20] = s1
162706: 64 84                    t2 = a1
162708: 64 73                    t1 = a0
162710: 33 05 b0 02 03           s0 = 0x302b0
162715: 33 02 00 00 10           t0 = 0x100000
162720: c8 25 09                 a2 = s0 + t0
162723: 28 66 31 fe              jump @3143
      :                          @11390 [@dyn 1155]
162727: 95 17 10 01              a0 = sp + 0x110
162731: 7b 17 80 02              u64 [sp + 0x280] = a0
162735: 33 07 20 02              a0 = 0x220
162739: 7b 17 88 02              u64 [sp + 0x288] = a0
162743: 95 18 b8 01              a1 = sp + 0x1b8
162747: 7b 18 90 02              u64 [sp + 0x290] = a1
162751: 33 08 28 0c              a1 = 0xc28
162755: 7b 18 98 02              u64 [sp + 0x298] = a1
162759: 7b 16 a0 02              u64 [sp + 0x2a0] = s1
162763: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
162767: 33 07 c8 21 01           a0 = 0x121c8
162772: 7b 17 28 02              u64 [sp + 0x228] = a0
162776: 49 21 30 02 03           u64 [sp + 560] = 0x3
162781: 49 21 48 02              u64 [sp + 584] = 0
162785: 95 18 80 02              a1 = sp + 0x280
162789: 7b 18 38 02              u64 [sp + 0x238] = a1
162793: 49 21 40 02 03           u64 [sp + 576] = 0x3
162798: 95 17 f8 01              a0 = sp + 0x1f8
162802: 95 18 28 02              a1 = sp + 0x228
162806: 50 20 08 09 51 d3 fd     ra = 2312, jump @1491
      :                          @11391 [@dyn 1156]
162813: 82 16 00 02              s1 = u64 [sp + 0x200]
162817: 82 1b 08 02              a4 = u64 [sp + 0x208]
162821: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
162825: 7b 17 60                 u64 [sp + 0x60] = a0
162828: 33 07 02                 a0 = 0x2
162831: 33 08                    a1 = 0
162833: 33 09                    a2 = 0
162835: 64 6a                    a3 = s1
162837: 33 00 0a 09              ra = 0x90a
162841: 0a 64                    ecalli 100 // 'log'
162843: 01                       fallthrough
      :                          @11392 [@dyn 1157]
162844: 82 1c 60                 a5 = u64 [sp + 0x60]
162847: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
162852: 53 38 00 00 f0 25        jump @11398 if a1 <u 4293918720
      :                          @11393
162858: 33 07 b0 02 03           a0 = 0x302b0
162863: 95 77 00 00 10           a0 = a0 + 0x100000
162868: 01                       fallthrough
      :                          @11394
162869: 82 78                    a1 = u64 [a0]
162871: c9 87 09                 a2 = a0 - a1
162874: ab 69 0f                 jump @11398 if a2 != s1
      :                          @11395
162877: c9 c8 09                 a2 = a1 - a5
162880: 01                       fallthrough
      :                          @11396
162881: 82 7a                    a3 = u64 [a0]
162883: ab 8a f2                 jump @11394 if a3 != a1
      :                          @11397
162886: 7b 79                    u64 [a0] = a2
162888: 01                       fallthrough
      :                          @11398
162889: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
162893: 51 08 31                 jump @11405 if a1 == 0
      :                          @11399
162896: 56 38 00 00 02 2e        jump @11405 if a1 >u 131072
      :                          @11400
162902: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
162906: 97 88 03                 a1 = a1 << 0x3
162909: 33 09 b0 02 03           a2 = 0x302b0
162914: 95 99 00 00 10           a2 = a2 + 0x100000
162919: 01                       fallthrough
      :                          @11401
162920: 82 9a                    a3 = u64 [a2]
162922: c9 a9 0b                 a4 = a2 - a3
162925: ab 7b 11                 jump @11405 if a4 != a0
      :                          @11402
162928: c9 8a 0b                 a4 = a3 - a1
162931: 01                       fallthrough
      :                          @11403
162932: 82 9c                    a5 = u64 [a2]
162934: ab ac f2                 jump @11401 if a5 != a3
      :                          @11404
162937: 7b 9b                    u64 [a2] = a4
162939: 33 06                    s1 = 0
162941: 01                       fallthrough
      :                          @11405
162942: 82 18 10 01              a1 = u64 [sp + 0x110]
162946: 52 08 06                 jump @11407 if a1 != 0
      :                          @11406
162949: 28 66 65                 jump @12862
      :                          @11407
162952: 54 38 00 00 02 09        jump @11409 if a1 <=u 131072
      :                          @11408
162958: 28 5d 65                 jump @12862
      :                          @11409
162961: 82 17 18 01              a0 = u64 [sp + 0x118]
162965: 97 88 03                 a1 = a1 << 0x3
162968: 33 09 b0 02 03           a2 = 0x302b0
162973: 95 99 00 00 10           a2 = a2 + 0x100000
162978: 01                       fallthrough
      :                          @11410
162979: 82 9a                    a3 = u64 [a2]
162981: c9 a9 0b                 a4 = a2 - a3
162984: aa 7b 06                 jump @11412 if a4 == a0
      :                          @11411
162987: 28 40 65                 jump @12862
      :                          @11412
162990: c9 8a 0b                 a4 = a3 - a1
162993: 01                       fallthrough
      :                          @11413
162994: 82 9c                    a5 = u64 [a2]
162996: ab ac ef                 jump @11410 if a5 != a3
      :                          @11414
162999: 7b 9b                    u64 [a2] = a4
163001: 33 06                    s1 = 0
163003: 01                       fallthrough
      :                          @11415
163004: ab ac e7                 jump @11410 if a5 != a3
      :                          @11416
163007: 28 2c 65                 jump @12862
      :                          @11417 [@dyn 1158]
163010: 3a 08 70 02 03           a1 = u64 [0x30270]
163015: 97 89 0d                 a2 = a1 << 0xd
163018: d3 98 08                 a1 = a1 ^ a2
163021: 98 89 07                 a2 = a1 >> 0x7
163024: d3 98 08                 a1 = a1 ^ a2
163027: 3a 09 58 01 03           a2 = u64 [0x30158]
163032: 97 8a 11                 a3 = a1 << 0x11
163035: d3 a8 08                 a1 = a1 ^ a3
163038: ca 98 09                 a2 = a1 * a2
163041: 3e 08 70 02 03           u64 [0x30270] = a1
163046: 14 07 89 88 88 88 88 88 88 88 a0 = 0x8888888888888889
163056: d6 79 07                 a0 = a2 mulhu a0
163059: 98 77 04                 a0 = a0 >> 0x4
163062: 96 77 1e                 a0 = a0 * 0x1e
163065: c9 79 07                 a0 = a2 - a0
163068: 7b 17 10 01              u64 [sp + 0x110] = a0
163072: 33 00 0e 09              ra = 0x90e
163076: 95 11 d0                 sp = sp + 0xffffffffffffffd0
163079: 7b 10 28                 u64 [sp + 0x28] = ra
163082: 7b 15 20                 u64 [sp + 0x20] = s0
163085: 7b 16 18                 u64 [sp + 0x18] = s1
163088: 7b 17 10                 u64 [sp + 0x10] = a0
163091: 95 79 01                 a2 = a0 + 0x1
163094: 7b 19                    u64 [sp] = a2
163096: 97 99 03                 a2 = a2 << 0x3
163099: 33 07 b0 02 03           a0 = 0x302b0
163104: 33 03 b0 02 03           t1 = 0x302b0
163109: 33 02 00 00 10           t0 = 0x100000
163114: c8 23 06                 s1 = t1 + t0
163117: 28 52 34 fe              jump @3230
      :                          @11418 [@dyn 1159]
163121: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
163125: 95 17 10 01              a0 = sp + 0x110
163129: 7b 17 28 02              u64 [sp + 0x228] = a0
163133: 33 07 28 0c              a0 = 0xc28
163137: 7b 17 30 02              u64 [sp + 0x230] = a0
163141: 95 18 d0 01              a1 = sp + 0x1d0
163145: 7b 18 38 02              u64 [sp + 0x238] = a1
163149: 7b 17 40 02              u64 [sp + 0x240] = a0
163153: 33 07 f8 21 01           a0 = 0x121f8
163158: 7b 17 80 02              u64 [sp + 0x280] = a0
163162: 49 21 88 02 02           u64 [sp + 648] = 0x2
163167: 49 21 a0 02              u64 [sp + 672] = 0
163171: 95 18 28 02              a1 = sp + 0x228
163175: 7b 18 90 02              u64 [sp + 0x290] = a1
163179: 49 21 98 02 02           u64 [sp + 664] = 0x2
163184: 95 17 f8 01              a0 = sp + 0x1f8
163188: 95 18 80 02              a1 = sp + 0x280
163192: 50 20 10 09 cf d1 fd     ra = 2320, jump @1491
      :                          @11419 [@dyn 1160]
163199: 82 16 00 02              s1 = u64 [sp + 0x200]
163203: 82 1b 08 02              a4 = u64 [sp + 0x208]
163207: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
163211: 7b 17 60                 u64 [sp + 0x60] = a0
163214: 33 07 02                 a0 = 0x2
163217: 33 08                    a1 = 0
163219: 33 09                    a2 = 0
163221: 64 6a                    a3 = s1
163223: 33 00 12 09              ra = 0x912
163227: 0a 64                    ecalli 100 // 'log'
163229: 01                       fallthrough
      :                          @11420 [@dyn 1161]
163230: 82 1c 60                 a5 = u64 [sp + 0x60]
163233: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
163238: 55 38 00 00 f0 09        jump @11422 if a1 >=u 4293918720
      :                          @11421
163244: 28 3f 64                 jump @12862
      :                          @11422
163247: 33 07 b0 02 03           a0 = 0x302b0
163252: 95 77 00 00 10           a0 = a0 + 0x100000
163257: 01                       fallthrough
      :                          @11423
163258: 82 78                    a1 = u64 [a0]
163260: c9 87 09                 a2 = a0 - a1
163263: aa 69 06                 jump @11425 if a2 == s1
      :                          @11424
163266: 28 29 64                 jump @12862
      :                          @11425
163269: c9 c8 09                 a2 = a1 - a5
163272: 01                       fallthrough
      :                          @11426
163273: 82 7a                    a3 = u64 [a0]
163275: ab 8a ef                 jump @11423 if a3 != a1
      :                          @11427
163278: 7b 79                    u64 [a0] = a2
163280: 33 0b                    a4 = 0
163282: 01                       fallthrough
      :                          @11428
163283: ab 8a e7                 jump @11423 if a3 != a1
      :                          @11429
163286: 28 15 64                 jump @12862
      :                          @11430 [@dyn 1162]
163289: 3a 08 70 02 03           a1 = u64 [0x30270]
163294: 97 89 0d                 a2 = a1 << 0xd
163297: d3 98 08                 a1 = a1 ^ a2
163300: 98 89 07                 a2 = a1 >> 0x7
163303: d3 98 08                 a1 = a1 ^ a2
163306: 3a 09 58 01 03           a2 = u64 [0x30158]
163311: 97 8a 11                 a3 = a1 << 0x11
163314: d3 a8 08                 a1 = a1 ^ a3
163317: ca 98 09                 a2 = a1 * a2
163320: 3e 08 70 02 03           u64 [0x30270] = a1
163325: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
163335: d6 79 07                 a0 = a2 mulhu a0
163338: 98 77 02                 a0 = a0 >> 0x2
163341: 96 77 06                 a0 = a0 * 0x6
163344: c9 79 08                 a1 = a2 - a0
163347: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
163351: 95 17 d0 01              a0 = sp + 0x1d0
163355: 95 16 d0 01              s1 = sp + 0x1d0
163359: 33 00 16 09              ra = 0x916
163363: 95 11 b8                 sp = sp + 0xffffffffffffffb8
163366: 7b 10 40                 u64 [sp + 0x40] = ra
163369: 7b 15 38                 u64 [sp + 0x38] = s0
163372: 7b 16 30                 u64 [sp + 0x30] = s1
163375: 64 76                    s1 = a0
163377: 49 01                    u64 [sp + 0] = 0
163379: 49 11 08 08              u64 [sp + 8] = 0x8
163383: 49 11 10                 u64 [sp + 16] = 0
163386: 49 11 18                 u64 [sp + 24] = 0
163389: 49 11 20 08              u64 [sp + 32] = 0x8
163393: 49 11 28                 u64 [sp + 40] = 0
163396: 95 19 18                 a2 = sp + 0x18
163399: 64 1a                    a3 = sp
163401: 64 87                    a0 = a1
163403: 33 00 d4 02              ra = 0x2d4
163407: 28 63 34 fe              jump @3260
      :                          @11431 [@dyn 1163]
163411: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
163415: 7b 17 10 01              u64 [sp + 0x110] = a0
163419: 95 17 b8 01              a0 = sp + 0x1b8
163423: 7b 17 80 02              u64 [sp + 0x280] = a0
163427: 33 07 28 0c              a0 = 0xc28
163431: 7b 17 88 02              u64 [sp + 0x288] = a0
163435: 95 18 10 01              a1 = sp + 0x110
163439: 7b 18 90 02              u64 [sp + 0x290] = a1
163443: 7b 17 98 02              u64 [sp + 0x298] = a0
163447: 7b 16 a0 02              u64 [sp + 0x2a0] = s1
163451: 33 07 30 02              a0 = 0x230
163455: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
163459: 33 07 20 22 01           a0 = 0x12220
163464: 7b 17 28 02              u64 [sp + 0x228] = a0
163468: 49 21 30 02 03           u64 [sp + 560] = 0x3
163473: 49 21 48 02              u64 [sp + 584] = 0
163477: 95 18 80 02              a1 = sp + 0x280
163481: 7b 18 38 02              u64 [sp + 0x238] = a1
163485: 49 21 40 02 03           u64 [sp + 576] = 0x3
163490: 95 17 f8 01              a0 = sp + 0x1f8
163494: 95 18 28 02              a1 = sp + 0x228
163498: 50 20 18 09 9d d0 fd     ra = 2328, jump @1491
      :                          @11432 [@dyn 1164]
163505: 82 16 00 02              s1 = u64 [sp + 0x200]
163509: 82 1b 08 02              a4 = u64 [sp + 0x208]
163513: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
163517: 7b 17 60                 u64 [sp + 0x60] = a0
163520: 33 07 02                 a0 = 0x2
163523: 33 08                    a1 = 0
163525: 33 09                    a2 = 0
163527: 64 6a                    a3 = s1
163529: 33 00 1a 09              ra = 0x91a
163533: 0a 64                    ecalli 100 // 'log'
163535: 01                       fallthrough
      :                          @11433 [@dyn 1165]
163536: 82 1c 60                 a5 = u64 [sp + 0x60]
163539: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
163544: 55 38 00 00 f0 09        jump @11435 if a1 >=u 4293918720
      :                          @11434
163550: 28 de 5f                 jump @12797
      :                          @11435
163553: 33 07 b0 02 03           a0 = 0x302b0
163558: 95 77 00 00 10           a0 = a0 + 0x100000
163563: 01                       fallthrough
      :                          @11436
163564: 82 78                    a1 = u64 [a0]
163566: c9 87 09                 a2 = a0 - a1
163569: aa 69 06                 jump @11438 if a2 == s1
      :                          @11437
163572: 28 c8 5f                 jump @12797
      :                          @11438
163575: c9 c8 09                 a2 = a1 - a5
163578: 01                       fallthrough
      :                          @11439
163579: 82 7a                    a3 = u64 [a0]
163581: ab 8a ef                 jump @11436 if a3 != a1
      :                          @11440
163584: 7b 79                    u64 [a0] = a2
163586: 33 0b                    a4 = 0
163588: 01                       fallthrough
      :                          @11441
163589: ab 8a e7                 jump @11436 if a3 != a1
      :                          @11442
163592: 28 b4 5f                 jump @12797
      :                          @11443 [@dyn 1166]
163595: 3a 08 70 02 03           a1 = u64 [0x30270]
163600: 97 89 0d                 a2 = a1 << 0xd
163603: d3 98 08                 a1 = a1 ^ a2
163606: 98 89 07                 a2 = a1 >> 0x7
163609: d3 98 08                 a1 = a1 ^ a2
163612: 97 89 11                 a2 = a1 << 0x11
163615: d3 98 08                 a1 = a1 ^ a2
163618: 3a 09 58 01 03           a2 = u64 [0x30158]
163623: 3a 0a a8 01 03           a3 = u64 [0x301a8]
163628: 3e 08 70 02 03           u64 [0x30270] = a1
163633: ca 98 07                 a0 = a1 * a2
163636: 98 78 02                 a1 = a0 >> 0x2
163639: d6 a8 08                 a1 = a1 mulhu a3
163642: 98 88 02                 a1 = a1 >> 0x2
163645: 96 88 64                 a1 = a1 * 0x64
163648: c9 87 07                 a0 = a0 - a1
163651: 7b 17 10 01              u64 [sp + 0x110] = a0
163655: 33 00 1e 09              ra = 0x91e
163659: 95 11 d0                 sp = sp + 0xffffffffffffffd0
163662: 7b 10 28                 u64 [sp + 0x28] = ra
163665: 7b 15 20                 u64 [sp + 0x20] = s0
163668: 7b 16 18                 u64 [sp + 0x18] = s1
163671: 7b 17 10                 u64 [sp + 0x10] = a0
163674: 95 77 01                 a0 = a0 + 0x1
163677: 7b 17                    u64 [sp] = a0
163679: 97 79 03                 a2 = a0 << 0x3
163682: 33 07 b0 02 03           a0 = 0x302b0
163687: 33 03 b0 02 03           t1 = 0x302b0
163692: 33 02 00 00 10           t0 = 0x100000
163697: c8 23 05                 s0 = t1 + t0
163700: 28 65 34 fe              jump @3286
      :                          @11444 [@dyn 1167]
163704: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
163708: 95 17 10 01              a0 = sp + 0x110
163712: 7b 17 28 02              u64 [sp + 0x228] = a0
163716: 33 07 28 0c              a0 = 0xc28
163720: 7b 17 30 02              u64 [sp + 0x230] = a0
163724: 95 18 d0 01              a1 = sp + 0x1d0
163728: 7b 18 38 02              u64 [sp + 0x238] = a1
163732: 7b 17 40 02              u64 [sp + 0x240] = a0
163736: 33 07 68 22 01           a0 = 0x12268
163741: 7b 17 80 02              u64 [sp + 0x280] = a0
163745: 49 21 88 02 02           u64 [sp + 648] = 0x2
163750: 49 21 a0 02              u64 [sp + 672] = 0
163754: 95 18 28 02              a1 = sp + 0x228
163758: 7b 18 90 02              u64 [sp + 0x290] = a1
163762: 49 21 98 02 02           u64 [sp + 664] = 0x2
163767: 95 17 f8 01              a0 = sp + 0x1f8
163771: 95 18 80 02              a1 = sp + 0x280
163775: 50 20 20 09 88 cf fd     ra = 2336, jump @1491
      :                          @11445 [@dyn 1168]
163782: 82 16 00 02              s1 = u64 [sp + 0x200]
163786: 82 1b 08 02              a4 = u64 [sp + 0x208]
163790: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
163794: 7b 17 60                 u64 [sp + 0x60] = a0
163797: 33 07 02                 a0 = 0x2
163800: 33 08                    a1 = 0
163802: 33 09                    a2 = 0
163804: 64 6a                    a3 = s1
163806: 33 00 22 09              ra = 0x922
163810: 0a 64                    ecalli 100 // 'log'
163812: 01                       fallthrough
      :                          @11446 [@dyn 1169]
163813: 82 1c 60                 a5 = u64 [sp + 0x60]
163816: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
163821: 55 38 00 00 f0 09        jump @11448 if a1 >=u 4293918720
      :                          @11447
163827: 28 f8 61                 jump @12862
      :                          @11448
163830: 33 07 b0 02 03           a0 = 0x302b0
163835: 95 77 00 00 10           a0 = a0 + 0x100000
163840: 01                       fallthrough
      :                          @11449
163841: 82 78                    a1 = u64 [a0]
163843: c9 87 09                 a2 = a0 - a1
163846: aa 69 06                 jump @11451 if a2 == s1
      :                          @11450
163849: 28 e2 61                 jump @12862
      :                          @11451
163852: c9 c8 09                 a2 = a1 - a5
163855: 01                       fallthrough
      :                          @11452
163856: 82 7a                    a3 = u64 [a0]
163858: ab 8a ef                 jump @11449 if a3 != a1
      :                          @11453
163861: 7b 79                    u64 [a0] = a2
163863: 33 0b                    a4 = 0
163865: 01                       fallthrough
      :                          @11454
163866: ab 8a e7                 jump @11449 if a3 != a1
      :                          @11455
163869: 28 ce 61                 jump @12862
      :                          @11456 [@dyn 1170]
163872: 3a 08 70 02 03           a1 = u64 [0x30270]
163877: 97 89 0d                 a2 = a1 << 0xd
163880: d3 98 08                 a1 = a1 ^ a2
163883: 98 89 07                 a2 = a1 >> 0x7
163886: d3 98 08                 a1 = a1 ^ a2
163889: 97 89 11                 a2 = a1 << 0x11
163892: d3 98 08                 a1 = a1 ^ a2
163895: 3a 09 58 01 03           a2 = u64 [0x30158]
163900: 3a 0a a8 01 03           a3 = u64 [0x301a8]
163905: 3e 08 70 02 03           u64 [0x30270] = a1
163910: ca 98 07                 a0 = a1 * a2
163913: 98 78 02                 a1 = a0 >> 0x2
163916: d6 a8 08                 a1 = a1 mulhu a3
163919: 98 88 02                 a1 = a1 >> 0x2
163922: 96 88 64                 a1 = a1 * 0x64
163925: c9 87 07                 a0 = a0 - a1
163928: 7b 17 10 01              u64 [sp + 0x110] = a0
163932: 33 00 26 09              ra = 0x926
163936: 95 11 e8                 sp = sp + 0xffffffffffffffe8
163939: 7b 10 10                 u64 [sp + 0x10] = ra
163942: 7b 15 08                 u64 [sp + 0x8] = s0
163945: 7b 16                    u64 [sp] = s1
163947: 64 73                    t1 = a0
163949: 95 78 01                 a1 = a0 + 0x1
163952: 97 87 03                 a0 = a1 << 0x3
163955: 33 04 b0 02 03           t2 = 0x302b0
163960: 33 02 00 00 10           t0 = 0x100000
163965: c8 24 00                 ra = t2 + t0
163968: 28 b9 34 fe              jump @3316
      :                          @11457 [@dyn 1171]
163972: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
163976: 95 17 10 01              a0 = sp + 0x110
163980: 7b 17 28 02              u64 [sp + 0x228] = a0
163984: 33 07 28 0c              a0 = 0xc28
163988: 7b 17 30 02              u64 [sp + 0x230] = a0
163992: 95 17 d0 01              a0 = sp + 0x1d0
163996: 7b 17 38 02              u64 [sp + 0x238] = a0
164000: 33 07 94 0c              a0 = 0xc94
164004: 7b 17 40 02              u64 [sp + 0x240] = a0
164008: 33 07 88 22 01           a0 = 0x12288
164013: 7b 17 80 02              u64 [sp + 0x280] = a0
164017: 49 21 88 02 02           u64 [sp + 648] = 0x2
164022: 49 21 a0 02              u64 [sp + 672] = 0
164026: 95 18 28 02              a1 = sp + 0x228
164030: 7b 18 90 02              u64 [sp + 0x290] = a1
164034: 49 21 98 02 02           u64 [sp + 664] = 0x2
164039: 95 17 f8 01              a0 = sp + 0x1f8
164043: 95 18 80 02              a1 = sp + 0x280
164047: 50 20 28 09 78 ce fd     ra = 2344, jump @1491
      :                          @11458 [@dyn 1172]
164054: 82 16 00 02              s1 = u64 [sp + 0x200]
164058: 82 1b 08 02              a4 = u64 [sp + 0x208]
164062: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
164066: 7b 17 60                 u64 [sp + 0x60] = a0
164069: 33 07 02                 a0 = 0x2
164072: 33 08                    a1 = 0
164074: 33 09                    a2 = 0
164076: 64 6a                    a3 = s1
164078: 33 00 2a 09              ra = 0x92a
164082: 0a 64                    ecalli 100 // 'log'
164084: 01                       fallthrough
      :                          @11459 [@dyn 1173]
164085: 82 1c 60                 a5 = u64 [sp + 0x60]
164088: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
164093: 55 38 00 00 f0 09        jump @11461 if a1 >=u 4293918720
      :                          @11460
164099: 28 e8 60                 jump @12862
      :                          @11461
164102: 33 07 b0 02 03           a0 = 0x302b0
164107: 95 77 00 00 10           a0 = a0 + 0x100000
164112: 01                       fallthrough
      :                          @11462
164113: 82 78                    a1 = u64 [a0]
164115: c9 87 09                 a2 = a0 - a1
164118: aa 69 06                 jump @11464 if a2 == s1
      :                          @11463
164121: 28 d2 60                 jump @12862
      :                          @11464
164124: c9 c8 09                 a2 = a1 - a5
164127: 01                       fallthrough
      :                          @11465
164128: 82 7a                    a3 = u64 [a0]
164130: ab 8a ef                 jump @11462 if a3 != a1
      :                          @11466
164133: 7b 79                    u64 [a0] = a2
164135: 33 0b                    a4 = 0
164137: 01                       fallthrough
      :                          @11467
164138: ab 8a e7                 jump @11462 if a3 != a1
      :                          @11468
164141: 28 be 60                 jump @12862
      :                          @11469 [@dyn 1174]
164144: 3a 08 70 02 03           a1 = u64 [0x30270]
164149: 3a 02 58 01 03           t0 = u64 [0x30158]
164154: 97 89 0d                 a2 = a1 << 0xd
164157: d3 98 08                 a1 = a1 ^ a2
164160: 98 89 07                 a2 = a1 >> 0x7
164163: d3 98 08                 a1 = a1 ^ a2
164166: 97 89 11                 a2 = a1 << 0x11
164169: d3 98 08                 a1 = a1 ^ a2
164172: ca 28 09                 a2 = a1 * t0
164175: 3a 0a a8 01 03           a3 = u64 [0x301a8]
164180: 3e 08 70 02 03           u64 [0x30270] = a1
164185: 98 98 02                 a1 = a2 >> 0x2
164188: d6 a8 08                 a1 = a1 mulhu a3
164191: 98 88 02                 a1 = a1 >> 0x2
164194: 96 88 64                 a1 = a1 * 0x64
164197: c9 89 09                 a2 = a2 - a1
164200: 95 99 01                 a2 = a2 + 0x1
164203: 7b 19 a0 01              u64 [sp + 0x1a0] = a2
164207: 49 21 10 01              u64 [sp + 272] = 0
164211: 49 21 18 01 08           u64 [sp + 280] = 0x8
164216: 49 21 20 01              u64 [sp + 288] = 0
164220: 49 21 d0 01              u64 [sp + 464] = 0
164224: 49 21 d8 01 08           u64 [sp + 472] = 0x8
164229: 49 21 e0 01              u64 [sp + 480] = 0
164233: 3a 08 70 02 03           a1 = u64 [0x30270]
164238: 97 89 0d                 a2 = a1 << 0xd
164241: d3 98 08                 a1 = a1 ^ a2
164244: 98 89 07                 a2 = a1 >> 0x7
164247: d3 98 08                 a1 = a1 ^ a2
164250: 97 89 11                 a2 = a1 << 0x11
164253: d3 89 09                 a2 = a2 ^ a1
164256: 3e 09 70 02 03           u64 [0x30270] = a2
164261: 82 17 a0 01              a0 = u64 [sp + 0x1a0]
164265: 52 07 06                 jump @11471 if a0 != 0
      :                          @11470
164268: 28 a6 71                 jump @13226
      :                          @11471
164271: 82 18 20 01              a1 = u64 [sp + 0x120]
164275: 82 1a 10 01              a3 = u64 [sp + 0x110]
164279: ca 29 09                 a2 = a2 * t0
164282: cd 79 06                 s1 = a2 %u a0
164285: 95 66 01                 s1 = s1 + 0x1
164288: 7b 12 60                 u64 [sp + 0x60] = t0
164291: ab a8 16                 jump @11474 if a1 != a3
      :                          @11472
164294: 95 17 10 01              a0 = sp + 0x110
164298: 50 20 2e 09 45 d1 fd     ra = 2350, jump @1581
      :                          @11473 [@dyn 1175]
164305: 82 12 60                 t0 = u64 [sp + 0x60]
164308: 82 18 20 01              a1 = u64 [sp + 0x120]
164312: 01                       fallthrough
      :                          @11474
164313: 82 17 18 01              a0 = u64 [sp + 0x118]
164317: 97 89 03                 a2 = a1 << 0x3
164320: c8 97 07                 a0 = a0 + a2
164323: 7b 76                    u64 [a0] = s1
164325: 95 88 01                 a1 = a1 + 0x1
164328: 7b 18 20 01              u64 [sp + 0x120] = a1
164332: 33 0c 70 02 03           a5 = 0x30270
164337: 3a 07 70 02 03           a0 = u64 [0x30270]
164342: 97 78 0d                 a1 = a0 << 0xd
164345: d3 87 07                 a0 = a0 ^ a1
164348: 98 78 07                 a1 = a0 >> 0x7
164351: d3 87 07                 a0 = a0 ^ a1
164354: 97 78 11                 a1 = a0 << 0x11
164357: d3 87 07                 a0 = a0 ^ a1
164360: ca 27 09                 a2 = a0 * t0
164363: 3a 08 60 01 03           a1 = u64 [0x30160]
164368: 3e 07 70 02 03           u64 [0x30270] = a0
164373: 98 97 03                 a0 = a2 >> 0x3
164376: d6 87 07                 a0 = a0 mulhu a1
164379: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
164383: 82 1a d0 01              a3 = u64 [sp + 0x1d0]
164387: 98 77 04                 a0 = a0 >> 0x4
164390: 33 0b e8 03              a4 = 0x3e8
164394: ca b7 07                 a0 = a0 * a4
164397: c9 79 06                 s1 = a2 - a0
164400: ab a8 1b                 jump @11477 if a1 != a3
      :                          @11475
164403: 95 17 d0 01              a0 = sp + 0x1d0
164407: 50 20 30 09 d8 d0 fd     ra = 2352, jump @1581
      :                          @11476 [@dyn 1176]
164414: 33 0c 70 02 03           a5 = 0x30270
164419: 82 12 60                 t0 = u64 [sp + 0x60]
164422: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
164426: 01                       fallthrough
      :                          @11477
164427: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
164431: 97 89 03                 a2 = a1 << 0x3
164434: c8 97 07                 a0 = a0 + a2
164437: 7b 76                    u64 [a0] = s1
164439: 95 88 01                 a1 = a1 + 0x1
164442: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
164446: 3a 07 70 02 03           a0 = u64 [0x30270]
164451: 97 78 0d                 a1 = a0 << 0xd
164454: d3 87 07                 a0 = a0 ^ a1
164457: 98 78 07                 a1 = a0 >> 0x7
164460: d3 87 07                 a0 = a0 ^ a1
164463: 97 78 11                 a1 = a0 << 0x11
164466: d3 87 07                 a0 = a0 ^ a1
164469: 3e 07 70 02 03           u64 [0x30270] = a0
164474: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
164478: 52 09 06                 jump @11479 if a2 != 0
      :                          @11478
164481: 28 d1 70                 jump @13226
      :                          @11479
164484: 82 18 20 01              a1 = u64 [sp + 0x120]
164488: 82 1a 10 01              a3 = u64 [sp + 0x110]
164492: ca 27 07                 a0 = a0 * t0
164495: cd 97 06                 s1 = a0 %u a2
164498: 95 66 01                 s1 = s1 + 0x1
164501: ab a8 16                 jump @11482 if a1 != a3
      :                          @11480
164504: 95 17 10 01              a0 = sp + 0x110
164508: 50 20 32 09 73 d0 fd     ra = 2354, jump @1581
      :                          @11481 [@dyn 1177]
164515: 82 12 60                 t0 = u64 [sp + 0x60]
164518: 82 18 20 01              a1 = u64 [sp + 0x120]
164522: 01                       fallthrough
      :                          @11482
164523: 82 17 18 01              a0 = u64 [sp + 0x118]
164527: 97 89 03                 a2 = a1 << 0x3
164530: c8 97 07                 a0 = a0 + a2
164533: 7b 76                    u64 [a0] = s1
164535: 95 88 01                 a1 = a1 + 0x1
164538: 7b 18 20 01              u64 [sp + 0x120] = a1
164542: 33 0c 70 02 03           a5 = 0x30270
164547: 3a 07 70 02 03           a0 = u64 [0x30270]
164552: 97 78 0d                 a1 = a0 << 0xd
164555: d3 87 07                 a0 = a0 ^ a1
164558: 98 78 07                 a1 = a0 >> 0x7
164561: d3 87 07                 a0 = a0 ^ a1
164564: 97 78 11                 a1 = a0 << 0x11
164567: d3 87 07                 a0 = a0 ^ a1
164570: ca 27 09                 a2 = a0 * t0
164573: 3a 08 60 01 03           a1 = u64 [0x30160]
164578: 3e 07 70 02 03           u64 [0x30270] = a0
164583: 98 97 03                 a0 = a2 >> 0x3
164586: d6 87 07                 a0 = a0 mulhu a1
164589: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
164593: 82 1a d0 01              a3 = u64 [sp + 0x1d0]
164597: 98 77 04                 a0 = a0 >> 0x4
164600: 33 0b e8 03              a4 = 0x3e8
164604: ca b7 07                 a0 = a0 * a4
164607: c9 79 06                 s1 = a2 - a0
164610: ab a8 1b                 jump @11485 if a1 != a3
      :                          @11483
164613: 95 17 d0 01              a0 = sp + 0x1d0
164617: 50 20 34 09 06 d0 fd     ra = 2356, jump @1581
      :                          @11484 [@dyn 1178]
164624: 33 0c 70 02 03           a5 = 0x30270
164629: 82 12 60                 t0 = u64 [sp + 0x60]
164632: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
164636: 01                       fallthrough
      :                          @11485
164637: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
164641: 97 89 03                 a2 = a1 << 0x3
164644: c8 97 07                 a0 = a0 + a2
164647: 7b 76                    u64 [a0] = s1
164649: 95 88 01                 a1 = a1 + 0x1
164652: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
164656: 3a 07 70 02 03           a0 = u64 [0x30270]
164661: 97 78 0d                 a1 = a0 << 0xd
164664: d3 87 07                 a0 = a0 ^ a1
164667: 98 78 07                 a1 = a0 >> 0x7
164670: d3 87 07                 a0 = a0 ^ a1
164673: 97 78 11                 a1 = a0 << 0x11
164676: d3 87 07                 a0 = a0 ^ a1
164679: 3e 07 70 02 03           u64 [0x30270] = a0
164684: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
164688: 52 09 06                 jump @11487 if a2 != 0
      :                          @11486
164691: 28 ff 6f                 jump @13226
      :                          @11487
164694: 82 18 20 01              a1 = u64 [sp + 0x120]
164698: 82 1a 10 01              a3 = u64 [sp + 0x110]
164702: ca 27 07                 a0 = a0 * t0
164705: cd 97 06                 s1 = a0 %u a2
164708: 95 66 01                 s1 = s1 + 0x1
164711: ab a8 16                 jump @11490 if a1 != a3
      :                          @11488
164714: 95 17 10 01              a0 = sp + 0x110
164718: 50 20 36 09 a1 cf fd     ra = 2358, jump @1581
      :                          @11489 [@dyn 1179]
164725: 82 12 60                 t0 = u64 [sp + 0x60]
164728: 82 18 20 01              a1 = u64 [sp + 0x120]
164732: 01                       fallthrough
      :                          @11490
164733: 82 17 18 01              a0 = u64 [sp + 0x118]
164737: 97 89 03                 a2 = a1 << 0x3
164740: c8 97 07                 a0 = a0 + a2
164743: 7b 76                    u64 [a0] = s1
164745: 95 88 01                 a1 = a1 + 0x1
164748: 7b 18 20 01              u64 [sp + 0x120] = a1
164752: 33 0c 70 02 03           a5 = 0x30270
164757: 3a 07 70 02 03           a0 = u64 [0x30270]
164762: 97 78 0d                 a1 = a0 << 0xd
164765: d3 87 07                 a0 = a0 ^ a1
164768: 98 78 07                 a1 = a0 >> 0x7
164771: d3 87 07                 a0 = a0 ^ a1
164774: 97 78 11                 a1 = a0 << 0x11
164777: d3 87 07                 a0 = a0 ^ a1
164780: ca 27 09                 a2 = a0 * t0
164783: 3a 08 60 01 03           a1 = u64 [0x30160]
164788: 3e 07 70 02 03           u64 [0x30270] = a0
164793: 98 97 03                 a0 = a2 >> 0x3
164796: d6 87 07                 a0 = a0 mulhu a1
164799: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
164803: 82 1a d0 01              a3 = u64 [sp + 0x1d0]
164807: 98 77 04                 a0 = a0 >> 0x4
164810: 33 0b e8 03              a4 = 0x3e8
164814: ca b7 07                 a0 = a0 * a4
164817: c9 79 06                 s1 = a2 - a0
164820: ab a8 1b                 jump @11493 if a1 != a3
      :                          @11491
164823: 95 17 d0 01              a0 = sp + 0x1d0
164827: 50 20 38 09 34 cf fd     ra = 2360, jump @1581
      :                          @11492 [@dyn 1180]
164834: 33 0c 70 02 03           a5 = 0x30270
164839: 82 12 60                 t0 = u64 [sp + 0x60]
164842: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
164846: 01                       fallthrough
      :                          @11493
164847: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
164851: 97 89 03                 a2 = a1 << 0x3
164854: c8 97 07                 a0 = a0 + a2
164857: 7b 76                    u64 [a0] = s1
164859: 95 88 01                 a1 = a1 + 0x1
164862: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
164866: 3a 07 70 02 03           a0 = u64 [0x30270]
164871: 97 78 0d                 a1 = a0 << 0xd
164874: d3 87 07                 a0 = a0 ^ a1
164877: 98 78 07                 a1 = a0 >> 0x7
164880: d3 87 07                 a0 = a0 ^ a1
164883: 97 78 11                 a1 = a0 << 0x11
164886: d3 87 07                 a0 = a0 ^ a1
164889: 3e 07 70 02 03           u64 [0x30270] = a0
164894: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
164898: 52 09 06                 jump @11495 if a2 != 0
      :                          @11494
164901: 28 2d 6f                 jump @13226
      :                          @11495
164904: 82 18 20 01              a1 = u64 [sp + 0x120]
164908: 82 1a 10 01              a3 = u64 [sp + 0x110]
164912: ca 27 07                 a0 = a0 * t0
164915: cd 97 06                 s1 = a0 %u a2
164918: 95 66 01                 s1 = s1 + 0x1
164921: ab a8 16                 jump @11498 if a1 != a3
      :                          @11496
164924: 95 17 10 01              a0 = sp + 0x110
164928: 50 20 3a 09 cf ce fd     ra = 2362, jump @1581
      :                          @11497 [@dyn 1181]
164935: 82 12 60                 t0 = u64 [sp + 0x60]
164938: 82 18 20 01              a1 = u64 [sp + 0x120]
164942: 01                       fallthrough
      :                          @11498
164943: 82 17 18 01              a0 = u64 [sp + 0x118]
164947: 97 89 03                 a2 = a1 << 0x3
164950: c8 97 07                 a0 = a0 + a2
164953: 7b 76                    u64 [a0] = s1
164955: 95 88 01                 a1 = a1 + 0x1
164958: 7b 18 20 01              u64 [sp + 0x120] = a1
164962: 33 0c 70 02 03           a5 = 0x30270
164967: 3a 07 70 02 03           a0 = u64 [0x30270]
164972: 97 78 0d                 a1 = a0 << 0xd
164975: d3 87 07                 a0 = a0 ^ a1
164978: 98 78 07                 a1 = a0 >> 0x7
164981: d3 87 07                 a0 = a0 ^ a1
164984: 97 78 11                 a1 = a0 << 0x11
164987: d3 87 07                 a0 = a0 ^ a1
164990: ca 27 09                 a2 = a0 * t0
164993: 3a 08 60 01 03           a1 = u64 [0x30160]
164998: 3e 07 70 02 03           u64 [0x30270] = a0
165003: 98 97 03                 a0 = a2 >> 0x3
165006: d6 87 07                 a0 = a0 mulhu a1
165009: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
165013: 82 1a d0 01              a3 = u64 [sp + 0x1d0]
165017: 98 77 04                 a0 = a0 >> 0x4
165020: 33 0b e8 03              a4 = 0x3e8
165024: ca b7 07                 a0 = a0 * a4
165027: c9 79 06                 s1 = a2 - a0
165030: ab a8 1b                 jump @11501 if a1 != a3
      :                          @11499
165033: 95 17 d0 01              a0 = sp + 0x1d0
165037: 50 20 3c 09 62 ce fd     ra = 2364, jump @1581
      :                          @11500 [@dyn 1182]
165044: 33 0c 70 02 03           a5 = 0x30270
165049: 82 12 60                 t0 = u64 [sp + 0x60]
165052: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
165056: 01                       fallthrough
      :                          @11501
165057: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
165061: 97 89 03                 a2 = a1 << 0x3
165064: c8 97 07                 a0 = a0 + a2
165067: 7b 76                    u64 [a0] = s1
165069: 95 88 01                 a1 = a1 + 0x1
165072: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
165076: 3a 07 70 02 03           a0 = u64 [0x30270]
165081: 97 78 0d                 a1 = a0 << 0xd
165084: d3 87 07                 a0 = a0 ^ a1
165087: 98 78 07                 a1 = a0 >> 0x7
165090: d3 87 07                 a0 = a0 ^ a1
165093: 97 78 11                 a1 = a0 << 0x11
165096: d3 87 07                 a0 = a0 ^ a1
165099: 3e 07 70 02 03           u64 [0x30270] = a0
165104: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
165108: 52 09 06                 jump @11503 if a2 != 0
      :                          @11502
165111: 28 5b 6e                 jump @13226
      :                          @11503
165114: 82 18 20 01              a1 = u64 [sp + 0x120]
165118: 82 1a 10 01              a3 = u64 [sp + 0x110]
165122: ca 27 07                 a0 = a0 * t0
165125: cd 97 06                 s1 = a0 %u a2
165128: 95 66 01                 s1 = s1 + 0x1
165131: ab a8 16                 jump @11506 if a1 != a3
      :                          @11504
165134: 95 17 10 01              a0 = sp + 0x110
165138: 50 20 3e 09 fd cd fd     ra = 2366, jump @1581
      :                          @11505 [@dyn 1183]
165145: 82 12 60                 t0 = u64 [sp + 0x60]
165148: 82 18 20 01              a1 = u64 [sp + 0x120]
165152: 01                       fallthrough
      :                          @11506
165153: 82 17 18 01              a0 = u64 [sp + 0x118]
165157: 97 89 03                 a2 = a1 << 0x3
165160: c8 97 07                 a0 = a0 + a2
165163: 7b 76                    u64 [a0] = s1
165165: 95 88 01                 a1 = a1 + 0x1
165168: 7b 18 20 01              u64 [sp + 0x120] = a1
165172: 3a 08 70 02 03           a1 = u64 [0x30270]
165177: 97 89 0d                 a2 = a1 << 0xd
165180: d3 98 08                 a1 = a1 ^ a2
165183: 98 89 07                 a2 = a1 >> 0x7
165186: d3 98 08                 a1 = a1 ^ a2
165189: 97 89 11                 a2 = a1 << 0x11
165192: d3 98 08                 a1 = a1 ^ a2
165195: ca 28 09                 a2 = a1 * t0
165198: 3a 0a 60 01 03           a3 = u64 [0x30160]
165203: 3e 08 70 02 03           u64 [0x30270] = a1
165208: 98 97 03                 a0 = a2 >> 0x3
165211: d6 a7 07                 a0 = a0 mulhu a3
165214: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
165218: 82 1a d0 01              a3 = u64 [sp + 0x1d0]
165222: 98 77 04                 a0 = a0 >> 0x4
165225: 33 0b e8 03              a4 = 0x3e8
165229: ca b7 07                 a0 = a0 * a4
165232: c9 79 06                 s1 = a2 - a0
165235: ab a8 13                 jump @11509 if a1 != a3
      :                          @11507
165238: 95 17 d0 01              a0 = sp + 0x1d0
165242: 50 20 40 09 95 cd fd     ra = 2368, jump @1581
      :                          @11508 [@dyn 1184]
165249: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
165253: 01                       fallthrough
      :                          @11509
165254: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
165258: 97 89 03                 a2 = a1 << 0x3
165261: c8 97 07                 a0 = a0 + a2
165264: 7b 76                    u64 [a0] = s1
165266: 95 8a 01                 a3 = a1 + 0x1
165269: 7b 1a e0 01              u64 [sp + 0x1e0] = a3
165273: 82 17 18 01              a0 = u64 [sp + 0x118]
165277: 82 18 20 01              a1 = u64 [sp + 0x120]
165281: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
165285: 82 1b a0 01              a4 = u64 [sp + 0x1a0]
165289: 50 20 42 09 5e 31 fe     ra = 2370, jump @3363
      :                          @11510 [@dyn 1185]
165296: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
165300: 95 17 a0 01              a0 = sp + 0x1a0
165304: 7b 17 80 02              u64 [sp + 0x280] = a0
165308: 33 07 28 0c              a0 = 0xc28
165312: 7b 17 88 02              u64 [sp + 0x288] = a0
165316: 95 18 10 01              a1 = sp + 0x110
165320: 7b 18 90 02              u64 [sp + 0x290] = a1
165324: 33 08 20 02              a1 = 0x220
165328: 7b 18 98 02              u64 [sp + 0x298] = a1
165332: 95 19 d0 01              a2 = sp + 0x1d0
165336: 7b 19 a0 02              u64 [sp + 0x2a0] = a2
165340: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
165344: 95 18 b8 01              a1 = sp + 0x1b8
165348: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
165352: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
165356: 33 07 c8 22 01           a0 = 0x122c8
165361: 7b 17 28 02              u64 [sp + 0x228] = a0
165365: 49 21 30 02 04           u64 [sp + 560] = 0x4
165370: 49 21 48 02              u64 [sp + 584] = 0
165374: 95 18 80 02              a1 = sp + 0x280
165378: 7b 18 38 02              u64 [sp + 0x238] = a1
165382: 49 21 40 02 04           u64 [sp + 576] = 0x4
165387: 95 17 f8 01              a0 = sp + 0x1f8
165391: 95 18 28 02              a1 = sp + 0x228
165395: 50 20 44 09 34 c9 fd     ra = 2372, jump @1491
      :                          @11511 [@dyn 1186]
165402: 82 16 00 02              s1 = u64 [sp + 0x200]
165406: 82 1b 08 02              a4 = u64 [sp + 0x208]
165410: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
165414: 7b 17 60                 u64 [sp + 0x60] = a0
165417: 33 07 02                 a0 = 0x2
165420: 33 08                    a1 = 0
165422: 33 09                    a2 = 0
165424: 64 6a                    a3 = s1
165426: 33 00 46 09              ra = 0x946
165430: 0a 64                    ecalli 100 // 'log'
165432: 01                       fallthrough
      :                          @11512 [@dyn 1187]
165433: 82 1c 60                 a5 = u64 [sp + 0x60]
165436: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
165441: 53 38 00 00 f0 25        jump @11518 if a1 <u 4293918720
      :                          @11513
165447: 33 07 b0 02 03           a0 = 0x302b0
165452: 95 77 00 00 10           a0 = a0 + 0x100000
165457: 01                       fallthrough
      :                          @11514
165458: 82 78                    a1 = u64 [a0]
165460: c9 87 09                 a2 = a0 - a1
165463: ab 69 0f                 jump @11518 if a2 != s1
      :                          @11515
165466: c9 c8 09                 a2 = a1 - a5
165469: 01                       fallthrough
      :                          @11516
165470: 82 7a                    a3 = u64 [a0]
165472: ab 8a f2                 jump @11514 if a3 != a1
      :                          @11517
165475: 7b 79                    u64 [a0] = a2
165477: 01                       fallthrough
      :                          @11518
165478: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
165482: 51 08 31                 jump @11525 if a1 == 0
      :                          @11519
165485: 56 38 00 00 02 2e        jump @11525 if a1 >u 131072
      :                          @11520
165491: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
165495: 97 88 03                 a1 = a1 << 0x3
165498: 33 09 b0 02 03           a2 = 0x302b0
165503: 95 99 00 00 10           a2 = a2 + 0x100000
165508: 01                       fallthrough
      :                          @11521
165509: 82 9a                    a3 = u64 [a2]
165511: c9 a9 0b                 a4 = a2 - a3
165514: ab 7b 11                 jump @11525 if a4 != a0
      :                          @11522
165517: c9 8a 0b                 a4 = a3 - a1
165520: 01                       fallthrough
      :                          @11523
165521: 82 9c                    a5 = u64 [a2]
165523: ab ac f2                 jump @11521 if a5 != a3
      :                          @11524
165526: 7b 9b                    u64 [a2] = a4
165528: 33 06                    s1 = 0
165530: 01                       fallthrough
      :                          @11525
165531: 82 18 10 01              a1 = u64 [sp + 0x110]
165535: 52 08 06                 jump @11527 if a1 != 0
      :                          @11526
165538: 28 49 5b                 jump @12862
      :                          @11527
165541: 54 38 00 00 02 09        jump @11529 if a1 <=u 131072
      :                          @11528
165547: 28 40 5b                 jump @12862
      :                          @11529
165550: 82 17 18 01              a0 = u64 [sp + 0x118]
165554: 97 88 03                 a1 = a1 << 0x3
165557: 33 09 b0 02 03           a2 = 0x302b0
165562: 95 99 00 00 10           a2 = a2 + 0x100000
165567: 01                       fallthrough
      :                          @11530
165568: 82 9a                    a3 = u64 [a2]
165570: c9 a9 0b                 a4 = a2 - a3
165573: aa 7b 06                 jump @11532 if a4 == a0
      :                          @11531
165576: 28 23 5b                 jump @12862
      :                          @11532
165579: c9 8a 0b                 a4 = a3 - a1
165582: 01                       fallthrough
      :                          @11533
165583: 82 9c                    a5 = u64 [a2]
165585: ab ac ef                 jump @11530 if a5 != a3
      :                          @11534
165588: 7b 9b                    u64 [a2] = a4
165590: 33 06                    s1 = 0
165592: 01                       fallthrough
      :                          @11535
165593: ab ac e7                 jump @11530 if a5 != a3
      :                          @11536
165596: 28 0f 5b                 jump @12862
      :                          @11537 [@dyn 1188]
165599: 3a 08 70 02 03           a1 = u64 [0x30270]
165604: 3a 02 58 01 03           t0 = u64 [0x30158]
165609: 97 89 0d                 a2 = a1 << 0xd
165612: d3 98 08                 a1 = a1 ^ a2
165615: 98 89 07                 a2 = a1 >> 0x7
165618: d3 98 08                 a1 = a1 ^ a2
165621: 97 89 11                 a2 = a1 << 0x11
165624: d3 98 08                 a1 = a1 ^ a2
165627: ca 28 09                 a2 = a1 * t0
165630: 3a 0a a8 01 03           a3 = u64 [0x301a8]
165635: 3e 08 70 02 03           u64 [0x30270] = a1
165640: 98 98 02                 a1 = a2 >> 0x2
165643: d6 a8 08                 a1 = a1 mulhu a3
165646: 98 88 02                 a1 = a1 >> 0x2
165649: 96 88 64                 a1 = a1 * 0x64
165652: c9 89 09                 a2 = a2 - a1
165655: 95 99 01                 a2 = a2 + 0x1
165658: 7b 19 a0 01              u64 [sp + 0x1a0] = a2
165662: 49 21 10 01              u64 [sp + 272] = 0
165666: 49 21 18 01 08           u64 [sp + 280] = 0x8
165671: 49 21 20 01              u64 [sp + 288] = 0
165675: 49 21 d0 01              u64 [sp + 464] = 0
165679: 49 21 d8 01 08           u64 [sp + 472] = 0x8
165684: 49 21 e0 01              u64 [sp + 480] = 0
165688: 3a 08 70 02 03           a1 = u64 [0x30270]
165693: 97 89 0d                 a2 = a1 << 0xd
165696: d3 98 08                 a1 = a1 ^ a2
165699: 98 89 07                 a2 = a1 >> 0x7
165702: d3 98 08                 a1 = a1 ^ a2
165705: 97 89 11                 a2 = a1 << 0x11
165708: d3 89 09                 a2 = a2 ^ a1
165711: 3e 09 70 02 03           u64 [0x30270] = a2
165716: 82 17 a0 01              a0 = u64 [sp + 0x1a0]
165720: 52 07 06                 jump @11539 if a0 != 0
      :                          @11538
165723: 28 f7 6b                 jump @13226
      :                          @11539
165726: 82 18 20 01              a1 = u64 [sp + 0x120]
165730: 82 1a 10 01              a3 = u64 [sp + 0x110]
165734: ca 29 09                 a2 = a2 * t0
165737: cd 79 06                 s1 = a2 %u a0
165740: 95 66 01                 s1 = s1 + 0x1
165743: 7b 12 60                 u64 [sp + 0x60] = t0
165746: ab a8 16                 jump @11542 if a1 != a3
      :                          @11540
165749: 95 17 10 01              a0 = sp + 0x110
165753: 50 20 4a 09 96 cb fd     ra = 2378, jump @1581
      :                          @11541 [@dyn 1189]
165760: 82 12 60                 t0 = u64 [sp + 0x60]
165763: 82 18 20 01              a1 = u64 [sp + 0x120]
165767: 01                       fallthrough
      :                          @11542
165768: 82 17 18 01              a0 = u64 [sp + 0x118]
165772: 97 89 03                 a2 = a1 << 0x3
165775: c8 97 07                 a0 = a0 + a2
165778: 7b 76                    u64 [a0] = s1
165780: 95 88 01                 a1 = a1 + 0x1
165783: 7b 18 20 01              u64 [sp + 0x120] = a1
165787: 33 0c 70 02 03           a5 = 0x30270
165792: 3a 07 70 02 03           a0 = u64 [0x30270]
165797: 97 78 0d                 a1 = a0 << 0xd
165800: d3 87 07                 a0 = a0 ^ a1
165803: 98 78 07                 a1 = a0 >> 0x7
165806: d3 87 07                 a0 = a0 ^ a1
165809: 97 78 11                 a1 = a0 << 0x11
165812: d3 87 07                 a0 = a0 ^ a1
165815: ca 27 09                 a2 = a0 * t0
165818: 3a 08 60 01 03           a1 = u64 [0x30160]
165823: 3e 07 70 02 03           u64 [0x30270] = a0
165828: 98 97 03                 a0 = a2 >> 0x3
165831: d6 87 07                 a0 = a0 mulhu a1
165834: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
165838: 82 1a d0 01              a3 = u64 [sp + 0x1d0]
165842: 98 77 04                 a0 = a0 >> 0x4
165845: 33 0b e8 03              a4 = 0x3e8
165849: ca b7 07                 a0 = a0 * a4
165852: c9 79 06                 s1 = a2 - a0
165855: ab a8 1b                 jump @11545 if a1 != a3
      :                          @11543
165858: 95 17 d0 01              a0 = sp + 0x1d0
165862: 50 20 4c 09 29 cb fd     ra = 2380, jump @1581
      :                          @11544 [@dyn 1190]
165869: 33 0c 70 02 03           a5 = 0x30270
165874: 82 12 60                 t0 = u64 [sp + 0x60]
165877: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
165881: 01                       fallthrough
      :                          @11545
165882: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
165886: 97 89 03                 a2 = a1 << 0x3
165889: c8 97 07                 a0 = a0 + a2
165892: 7b 76                    u64 [a0] = s1
165894: 95 88 01                 a1 = a1 + 0x1
165897: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
165901: 3a 07 70 02 03           a0 = u64 [0x30270]
165906: 97 78 0d                 a1 = a0 << 0xd
165909: d3 87 07                 a0 = a0 ^ a1
165912: 98 78 07                 a1 = a0 >> 0x7
165915: d3 87 07                 a0 = a0 ^ a1
165918: 97 78 11                 a1 = a0 << 0x11
165921: d3 87 07                 a0 = a0 ^ a1
165924: 3e 07 70 02 03           u64 [0x30270] = a0
165929: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
165933: 52 09 06                 jump @11547 if a2 != 0
      :                          @11546
165936: 28 22 6b                 jump @13226
      :                          @11547
165939: 82 18 20 01              a1 = u64 [sp + 0x120]
165943: 82 1a 10 01              a3 = u64 [sp + 0x110]
165947: ca 27 07                 a0 = a0 * t0
165950: cd 97 06                 s1 = a0 %u a2
165953: 95 66 01                 s1 = s1 + 0x1
165956: ab a8 16                 jump @11550 if a1 != a3
      :                          @11548
165959: 95 17 10 01              a0 = sp + 0x110
165963: 50 20 4e 09 c4 ca fd     ra = 2382, jump @1581
      :                          @11549 [@dyn 1191]
165970: 82 12 60                 t0 = u64 [sp + 0x60]
165973: 82 18 20 01              a1 = u64 [sp + 0x120]
165977: 01                       fallthrough
      :                          @11550
165978: 82 17 18 01              a0 = u64 [sp + 0x118]
165982: 97 89 03                 a2 = a1 << 0x3
165985: c8 97 07                 a0 = a0 + a2
165988: 7b 76                    u64 [a0] = s1
165990: 95 88 01                 a1 = a1 + 0x1
165993: 7b 18 20 01              u64 [sp + 0x120] = a1
165997: 33 0c 70 02 03           a5 = 0x30270
166002: 3a 07 70 02 03           a0 = u64 [0x30270]
166007: 97 78 0d                 a1 = a0 << 0xd
166010: d3 87 07                 a0 = a0 ^ a1
166013: 98 78 07                 a1 = a0 >> 0x7
166016: d3 87 07                 a0 = a0 ^ a1
166019: 97 78 11                 a1 = a0 << 0x11
166022: d3 87 07                 a0 = a0 ^ a1
166025: ca 27 09                 a2 = a0 * t0
166028: 3a 08 60 01 03           a1 = u64 [0x30160]
166033: 3e 07 70 02 03           u64 [0x30270] = a0
166038: 98 97 03                 a0 = a2 >> 0x3
166041: d6 87 07                 a0 = a0 mulhu a1
166044: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
166048: 82 1a d0 01              a3 = u64 [sp + 0x1d0]
166052: 98 77 04                 a0 = a0 >> 0x4
166055: 33 0b e8 03              a4 = 0x3e8
166059: ca b7 07                 a0 = a0 * a4
166062: c9 79 06                 s1 = a2 - a0
166065: ab a8 1b                 jump @11553 if a1 != a3
      :                          @11551
166068: 95 17 d0 01              a0 = sp + 0x1d0
166072: 50 20 50 09 57 ca fd     ra = 2384, jump @1581
      :                          @11552 [@dyn 1192]
166079: 33 0c 70 02 03           a5 = 0x30270
166084: 82 12 60                 t0 = u64 [sp + 0x60]
166087: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
166091: 01                       fallthrough
      :                          @11553
166092: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
166096: 97 89 03                 a2 = a1 << 0x3
166099: c8 97 07                 a0 = a0 + a2
166102: 7b 76                    u64 [a0] = s1
166104: 95 88 01                 a1 = a1 + 0x1
166107: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
166111: 3a 07 70 02 03           a0 = u64 [0x30270]
166116: 97 78 0d                 a1 = a0 << 0xd
166119: d3 87 07                 a0 = a0 ^ a1
166122: 98 78 07                 a1 = a0 >> 0x7
166125: d3 87 07                 a0 = a0 ^ a1
166128: 97 78 11                 a1 = a0 << 0x11
166131: d3 87 07                 a0 = a0 ^ a1
166134: 3e 07 70 02 03           u64 [0x30270] = a0
166139: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
166143: 52 09 06                 jump @11555 if a2 != 0
      :                          @11554
166146: 28 50 6a                 jump @13226
      :                          @11555
166149: 82 18 20 01              a1 = u64 [sp + 0x120]
166153: 82 1a 10 01              a3 = u64 [sp + 0x110]
166157: ca 27 07                 a0 = a0 * t0
166160: cd 97 06                 s1 = a0 %u a2
166163: 95 66 01                 s1 = s1 + 0x1
166166: ab a8 16                 jump @11558 if a1 != a3
      :                          @11556
166169: 95 17 10 01              a0 = sp + 0x110
166173: 50 20 52 09 f2 c9 fd     ra = 2386, jump @1581
      :                          @11557 [@dyn 1193]
166180: 82 12 60                 t0 = u64 [sp + 0x60]
166183: 82 18 20 01              a1 = u64 [sp + 0x120]
166187: 01                       fallthrough
      :                          @11558
166188: 82 17 18 01              a0 = u64 [sp + 0x118]
166192: 97 89 03                 a2 = a1 << 0x3
166195: c8 97 07                 a0 = a0 + a2
166198: 7b 76                    u64 [a0] = s1
166200: 95 88 01                 a1 = a1 + 0x1
166203: 7b 18 20 01              u64 [sp + 0x120] = a1
166207: 33 0c 70 02 03           a5 = 0x30270
166212: 3a 07 70 02 03           a0 = u64 [0x30270]
166217: 97 78 0d                 a1 = a0 << 0xd
166220: d3 87 07                 a0 = a0 ^ a1
166223: 98 78 07                 a1 = a0 >> 0x7
166226: d3 87 07                 a0 = a0 ^ a1
166229: 97 78 11                 a1 = a0 << 0x11
166232: d3 87 07                 a0 = a0 ^ a1
166235: ca 27 09                 a2 = a0 * t0
166238: 3a 08 60 01 03           a1 = u64 [0x30160]
166243: 3e 07 70 02 03           u64 [0x30270] = a0
166248: 98 97 03                 a0 = a2 >> 0x3
166251: d6 87 07                 a0 = a0 mulhu a1
166254: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
166258: 82 1a d0 01              a3 = u64 [sp + 0x1d0]
166262: 98 77 04                 a0 = a0 >> 0x4
166265: 33 0b e8 03              a4 = 0x3e8
166269: ca b7 07                 a0 = a0 * a4
166272: c9 79 06                 s1 = a2 - a0
166275: ab a8 1b                 jump @11561 if a1 != a3
      :                          @11559
166278: 95 17 d0 01              a0 = sp + 0x1d0
166282: 50 20 54 09 85 c9 fd     ra = 2388, jump @1581
      :                          @11560 [@dyn 1194]
166289: 33 0c 70 02 03           a5 = 0x30270
166294: 82 12 60                 t0 = u64 [sp + 0x60]
166297: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
166301: 01                       fallthrough
      :                          @11561
166302: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
166306: 97 89 03                 a2 = a1 << 0x3
166309: c8 97 07                 a0 = a0 + a2
166312: 7b 76                    u64 [a0] = s1
166314: 95 88 01                 a1 = a1 + 0x1
166317: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
166321: 3a 07 70 02 03           a0 = u64 [0x30270]
166326: 97 78 0d                 a1 = a0 << 0xd
166329: d3 87 07                 a0 = a0 ^ a1
166332: 98 78 07                 a1 = a0 >> 0x7
166335: d3 87 07                 a0 = a0 ^ a1
166338: 97 78 11                 a1 = a0 << 0x11
166341: d3 87 07                 a0 = a0 ^ a1
166344: 3e 07 70 02 03           u64 [0x30270] = a0
166349: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
166353: 52 09 06                 jump @11563 if a2 != 0
      :                          @11562
166356: 28 7e 69                 jump @13226
      :                          @11563
166359: 82 18 20 01              a1 = u64 [sp + 0x120]
166363: 82 1a 10 01              a3 = u64 [sp + 0x110]
166367: ca 27 07                 a0 = a0 * t0
166370: cd 97 06                 s1 = a0 %u a2
166373: 95 66 01                 s1 = s1 + 0x1
166376: ab a8 16                 jump @11566 if a1 != a3
      :                          @11564
166379: 95 17 10 01              a0 = sp + 0x110
166383: 50 20 56 09 20 c9 fd     ra = 2390, jump @1581
      :                          @11565 [@dyn 1195]
166390: 82 12 60                 t0 = u64 [sp + 0x60]
166393: 82 18 20 01              a1 = u64 [sp + 0x120]
166397: 01                       fallthrough
      :                          @11566
166398: 82 17 18 01              a0 = u64 [sp + 0x118]
166402: 97 89 03                 a2 = a1 << 0x3
166405: c8 97 07                 a0 = a0 + a2
166408: 7b 76                    u64 [a0] = s1
166410: 95 88 01                 a1 = a1 + 0x1
166413: 7b 18 20 01              u64 [sp + 0x120] = a1
166417: 33 0c 70 02 03           a5 = 0x30270
166422: 3a 07 70 02 03           a0 = u64 [0x30270]
166427: 97 78 0d                 a1 = a0 << 0xd
166430: d3 87 07                 a0 = a0 ^ a1
166433: 98 78 07                 a1 = a0 >> 0x7
166436: d3 87 07                 a0 = a0 ^ a1
166439: 97 78 11                 a1 = a0 << 0x11
166442: d3 87 07                 a0 = a0 ^ a1
166445: ca 27 09                 a2 = a0 * t0
166448: 3a 08 60 01 03           a1 = u64 [0x30160]
166453: 3e 07 70 02 03           u64 [0x30270] = a0
166458: 98 97 03                 a0 = a2 >> 0x3
166461: d6 87 07                 a0 = a0 mulhu a1
166464: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
166468: 82 1a d0 01              a3 = u64 [sp + 0x1d0]
166472: 98 77 04                 a0 = a0 >> 0x4
166475: 33 0b e8 03              a4 = 0x3e8
166479: ca b7 07                 a0 = a0 * a4
166482: c9 79 06                 s1 = a2 - a0
166485: ab a8 1b                 jump @11569 if a1 != a3
      :                          @11567
166488: 95 17 d0 01              a0 = sp + 0x1d0
166492: 50 20 58 09 b3 c8 fd     ra = 2392, jump @1581
      :                          @11568 [@dyn 1196]
166499: 33 0c 70 02 03           a5 = 0x30270
166504: 82 12 60                 t0 = u64 [sp + 0x60]
166507: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
166511: 01                       fallthrough
      :                          @11569
166512: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
166516: 97 89 03                 a2 = a1 << 0x3
166519: c8 97 07                 a0 = a0 + a2
166522: 7b 76                    u64 [a0] = s1
166524: 95 88 01                 a1 = a1 + 0x1
166527: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
166531: 3a 07 70 02 03           a0 = u64 [0x30270]
166536: 97 78 0d                 a1 = a0 << 0xd
166539: d3 87 07                 a0 = a0 ^ a1
166542: 98 78 07                 a1 = a0 >> 0x7
166545: d3 87 07                 a0 = a0 ^ a1
166548: 97 78 11                 a1 = a0 << 0x11
166551: d3 87 07                 a0 = a0 ^ a1
166554: 3e 07 70 02 03           u64 [0x30270] = a0
166559: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
166563: 52 09 06                 jump @11571 if a2 != 0
      :                          @11570
166566: 28 ac 68                 jump @13226
      :                          @11571
166569: 82 18 20 01              a1 = u64 [sp + 0x120]
166573: 82 1a 10 01              a3 = u64 [sp + 0x110]
166577: ca 27 07                 a0 = a0 * t0
166580: cd 97 06                 s1 = a0 %u a2
166583: 95 66 01                 s1 = s1 + 0x1
166586: ab a8 16                 jump @11574 if a1 != a3
      :                          @11572
166589: 95 17 10 01              a0 = sp + 0x110
166593: 50 20 5a 09 4e c8 fd     ra = 2394, jump @1581
      :                          @11573 [@dyn 1197]
166600: 82 12 60                 t0 = u64 [sp + 0x60]
166603: 82 18 20 01              a1 = u64 [sp + 0x120]
166607: 01                       fallthrough
      :                          @11574
166608: 82 17 18 01              a0 = u64 [sp + 0x118]
166612: 97 89 03                 a2 = a1 << 0x3
166615: c8 97 07                 a0 = a0 + a2
166618: 7b 76                    u64 [a0] = s1
166620: 95 88 01                 a1 = a1 + 0x1
166623: 7b 18 20 01              u64 [sp + 0x120] = a1
166627: 3a 08 70 02 03           a1 = u64 [0x30270]
166632: 97 89 0d                 a2 = a1 << 0xd
166635: d3 98 08                 a1 = a1 ^ a2
166638: 98 89 07                 a2 = a1 >> 0x7
166641: d3 98 08                 a1 = a1 ^ a2
166644: 97 89 11                 a2 = a1 << 0x11
166647: d3 98 08                 a1 = a1 ^ a2
166650: ca 28 09                 a2 = a1 * t0
166653: 3a 0a 60 01 03           a3 = u64 [0x30160]
166658: 3e 08 70 02 03           u64 [0x30270] = a1
166663: 98 97 03                 a0 = a2 >> 0x3
166666: d6 a7 07                 a0 = a0 mulhu a3
166669: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
166673: 82 1a d0 01              a3 = u64 [sp + 0x1d0]
166677: 98 77 04                 a0 = a0 >> 0x4
166680: 33 0b e8 03              a4 = 0x3e8
166684: ca b7 07                 a0 = a0 * a4
166687: c9 79 06                 s1 = a2 - a0
166690: ab a8 13                 jump @11577 if a1 != a3
      :                          @11575
166693: 95 17 d0 01              a0 = sp + 0x1d0
166697: 50 20 5c 09 e6 c7 fd     ra = 2396, jump @1581
      :                          @11576 [@dyn 1198]
166704: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
166708: 01                       fallthrough
      :                          @11577
166709: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
166713: 97 89 03                 a2 = a1 << 0x3
166716: c8 97 07                 a0 = a0 + a2
166719: 7b 76                    u64 [a0] = s1
166721: 95 8a 01                 a3 = a1 + 0x1
166724: 7b 1a e0 01              u64 [sp + 0x1e0] = a3
166728: 82 17 18 01              a0 = u64 [sp + 0x118]
166732: 82 18 20 01              a1 = u64 [sp + 0x120]
166736: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
166740: 82 1b a0 01              a4 = u64 [sp + 0x1a0]
166744: 50 20 5e 09 18 2d fe     ra = 2398, jump @3400
      :                          @11578 [@dyn 1199]
166751: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
166755: 95 17 a0 01              a0 = sp + 0x1a0
166759: 7b 17 80 02              u64 [sp + 0x280] = a0
166763: 33 07 28 0c              a0 = 0xc28
166767: 7b 17 88 02              u64 [sp + 0x288] = a0
166771: 95 18 10 01              a1 = sp + 0x110
166775: 7b 18 90 02              u64 [sp + 0x290] = a1
166779: 33 08 20 02              a1 = 0x220
166783: 7b 18 98 02              u64 [sp + 0x298] = a1
166787: 95 19 d0 01              a2 = sp + 0x1d0
166791: 7b 19 a0 02              u64 [sp + 0x2a0] = a2
166795: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
166799: 95 18 b8 01              a1 = sp + 0x1b8
166803: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
166807: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
166811: 33 07 20 23 01           a0 = 0x12320
166816: 7b 17 28 02              u64 [sp + 0x228] = a0
166820: 49 21 30 02 04           u64 [sp + 560] = 0x4
166825: 49 21 48 02              u64 [sp + 584] = 0
166829: 95 18 80 02              a1 = sp + 0x280
166833: 7b 18 38 02              u64 [sp + 0x238] = a1
166837: 49 21 40 02 04           u64 [sp + 576] = 0x4
166842: 95 17 f8 01              a0 = sp + 0x1f8
166846: 95 18 28 02              a1 = sp + 0x228
166850: 50 20 60 09 85 c3 fd     ra = 2400, jump @1491
      :                          @11579 [@dyn 1200]
166857: 82 16 00 02              s1 = u64 [sp + 0x200]
166861: 82 1b 08 02              a4 = u64 [sp + 0x208]
166865: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
166869: 7b 17 60                 u64 [sp + 0x60] = a0
166872: 33 07 02                 a0 = 0x2
166875: 33 08                    a1 = 0
166877: 33 09                    a2 = 0
166879: 64 6a                    a3 = s1
166881: 33 00 62 09              ra = 0x962
166885: 0a 64                    ecalli 100 // 'log'
166887: 01                       fallthrough
      :                          @11580 [@dyn 1201]
166888: 82 1c 60                 a5 = u64 [sp + 0x60]
166891: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
166896: 53 38 00 00 f0 25        jump @11586 if a1 <u 4293918720
      :                          @11581
166902: 33 07 b0 02 03           a0 = 0x302b0
166907: 95 77 00 00 10           a0 = a0 + 0x100000
166912: 01                       fallthrough
      :                          @11582
166913: 82 78                    a1 = u64 [a0]
166915: c9 87 09                 a2 = a0 - a1
166918: ab 69 0f                 jump @11586 if a2 != s1
      :                          @11583
166921: c9 c8 09                 a2 = a1 - a5
166924: 01                       fallthrough
      :                          @11584
166925: 82 7a                    a3 = u64 [a0]
166927: ab 8a f2                 jump @11582 if a3 != a1
      :                          @11585
166930: 7b 79                    u64 [a0] = a2
166932: 01                       fallthrough
      :                          @11586
166933: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
166937: 51 08 31                 jump @11593 if a1 == 0
      :                          @11587
166940: 56 38 00 00 02 2e        jump @11593 if a1 >u 131072
      :                          @11588
166946: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
166950: 97 88 03                 a1 = a1 << 0x3
166953: 33 09 b0 02 03           a2 = 0x302b0
166958: 95 99 00 00 10           a2 = a2 + 0x100000
166963: 01                       fallthrough
      :                          @11589
166964: 82 9a                    a3 = u64 [a2]
166966: c9 a9 0b                 a4 = a2 - a3
166969: ab 7b 11                 jump @11593 if a4 != a0
      :                          @11590
166972: c9 8a 0b                 a4 = a3 - a1
166975: 01                       fallthrough
      :                          @11591
166976: 82 9c                    a5 = u64 [a2]
166978: ab ac f2                 jump @11589 if a5 != a3
      :                          @11592
166981: 7b 9b                    u64 [a2] = a4
166983: 33 06                    s1 = 0
166985: 01                       fallthrough
      :                          @11593
166986: 82 18 10 01              a1 = u64 [sp + 0x110]
166990: 52 08 06                 jump @11595 if a1 != 0
      :                          @11594
166993: 28 9a 55                 jump @12862
      :                          @11595
166996: 54 38 00 00 02 09        jump @11597 if a1 <=u 131072
      :                          @11596
167002: 28 91 55                 jump @12862
      :                          @11597
167005: 82 17 18 01              a0 = u64 [sp + 0x118]
167009: 97 88 03                 a1 = a1 << 0x3
167012: 33 09 b0 02 03           a2 = 0x302b0
167017: 95 99 00 00 10           a2 = a2 + 0x100000
167022: 01                       fallthrough
      :                          @11598
167023: 82 9a                    a3 = u64 [a2]
167025: c9 a9 0b                 a4 = a2 - a3
167028: aa 7b 06                 jump @11600 if a4 == a0
      :                          @11599
167031: 28 74 55                 jump @12862
      :                          @11600
167034: c9 8a 0b                 a4 = a3 - a1
167037: 01                       fallthrough
      :                          @11601
167038: 82 9c                    a5 = u64 [a2]
167040: ab ac ef                 jump @11598 if a5 != a3
      :                          @11602
167043: 7b 9b                    u64 [a2] = a4
167045: 33 06                    s1 = 0
167047: 01                       fallthrough
      :                          @11603
167048: ab ac e7                 jump @11598 if a5 != a3
      :                          @11604
167051: 28 60 55                 jump @12862
      :                          @11605 [@dyn 1202]
167054: 3a 08 70 02 03           a1 = u64 [0x30270]
167059: 97 89 0d                 a2 = a1 << 0xd
167062: d3 98 08                 a1 = a1 ^ a2
167065: 98 89 07                 a2 = a1 >> 0x7
167068: 3a 0a 58 01 03           a3 = u64 [0x30158]
167073: d3 98 08                 a1 = a1 ^ a2
167076: 97 89 11                 a2 = a1 << 0x11
167079: d3 98 08                 a1 = a1 ^ a2
167082: ca a8 09                 a2 = a1 * a3
167085: 3e 08 70 02 03           u64 [0x30270] = a1
167090: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
167100: d6 b9 08                 a1 = a2 mulhu a4
167103: 98 88 03                 a1 = a1 >> 0x3
167106: 33 0c 0a                 a5 = 0xa
167109: 3a 06 70 02 03           s1 = u64 [0x30270]
167114: ca c8 08                 a1 = a1 * a5
167117: c9 89 08                 a1 = a2 - a1
167120: 97 69 0d                 a2 = s1 << 0xd
167123: d3 96 06                 s1 = s1 ^ a2
167126: 98 69 07                 a2 = s1 >> 0x7
167129: d3 96 06                 s1 = s1 ^ a2
167132: 97 69 11                 a2 = s1 << 0x11
167135: d3 69 09                 a2 = a2 ^ s1
167138: ca a9 0a                 a3 = a2 * a3
167141: 3e 09 70 02 03           u64 [0x30270] = a2
167146: d6 ba 07                 a0 = a3 mulhu a4
167149: 98 77 03                 a0 = a0 >> 0x3
167152: ca c7 07                 a0 = a0 * a5
167155: c9 7a 06                 s1 = a3 - a0
167158: 95 17 10 01              a0 = sp + 0x110
167162: 50 20 66 09 8d e7 fd     ra = 2406, jump @2169
      :                          @11606 [@dyn 1203]
167169: 95 17 d0 01              a0 = sp + 0x1d0
167173: 64 68                    a1 = s1
167175: 50 20 68 09 80 e7 fd     ra = 2408, jump @2169
      :                          @11607 [@dyn 1204]
167182: 82 17 18 01              a0 = u64 [sp + 0x118]
167186: 82 18 20 01              a1 = u64 [sp + 0x120]
167190: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
167194: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
167198: 50 20 6a 09 b9 2c fe     ra = 2410, jump @3437
      :                          @11608 [@dyn 1205]
167205: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
167209: 95 17 10 01              a0 = sp + 0x110
167213: 7b 17 80 02              u64 [sp + 0x280] = a0
167217: 33 07 18 02              a0 = 0x218
167221: 7b 17 88 02              u64 [sp + 0x288] = a0
167225: 95 18 d0 01              a1 = sp + 0x1d0
167229: 7b 18 90 02              u64 [sp + 0x290] = a1
167233: 7b 17 98 02              u64 [sp + 0x298] = a0
167237: 95 17 b8 01              a0 = sp + 0x1b8
167241: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
167245: 33 07 28 0c              a0 = 0xc28
167249: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
167253: 33 07 60 23 01           a0 = 0x12360
167258: 7b 17 28 02              u64 [sp + 0x228] = a0
167262: 49 21 30 02 03           u64 [sp + 560] = 0x3
167267: 49 21 48 02              u64 [sp + 584] = 0
167271: 95 18 80 02              a1 = sp + 0x280
167275: 7b 18 38 02              u64 [sp + 0x238] = a1
167279: 49 21 40 02 03           u64 [sp + 576] = 0x3
167284: 95 17 f8 01              a0 = sp + 0x1f8
167288: 95 18 28 02              a1 = sp + 0x228
167292: 50 20 6c 09 cb c1 fd     ra = 2412, jump @1491
      :                          @11609 [@dyn 1206]
167299: 82 16 00 02              s1 = u64 [sp + 0x200]
167303: 82 1b 08 02              a4 = u64 [sp + 0x208]
167307: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
167311: 7b 17 60                 u64 [sp + 0x60] = a0
167314: 33 07 02                 a0 = 0x2
167317: 33 08                    a1 = 0
167319: 33 09                    a2 = 0
167321: 64 6a                    a3 = s1
167323: 33 00 6e 09              ra = 0x96e
167327: 0a 64                    ecalli 100 // 'log'
167329: 01                       fallthrough
      :                          @11610 [@dyn 1207]
167330: 82 1c 60                 a5 = u64 [sp + 0x60]
167333: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
167338: 53 38 00 00 f0 25        jump @11616 if a1 <u 4293918720
      :                          @11611
167344: 33 07 b0 02 03           a0 = 0x302b0
167349: 95 77 00 00 10           a0 = a0 + 0x100000
167354: 01                       fallthrough
      :                          @11612
167355: 82 78                    a1 = u64 [a0]
167357: c9 87 09                 a2 = a0 - a1
167360: ab 69 0f                 jump @11616 if a2 != s1
      :                          @11613
167363: c9 c8 09                 a2 = a1 - a5
167366: 01                       fallthrough
      :                          @11614
167367: 82 7a                    a3 = u64 [a0]
167369: ab 8a f2                 jump @11612 if a3 != a1
      :                          @11615
167372: 7b 79                    u64 [a0] = a2
167374: 01                       fallthrough
      :                          @11616
167375: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
167379: 51 07 2e                 jump @11623 if a0 == 0
      :                          @11617
167382: 56 37 00 00 10 2b        jump @11623 if a0 >u 1048576
      :                          @11618
167388: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
167392: 33 0a b0 02 03           a3 = 0x302b0
167397: 95 a9 00 00 10           a2 = a3 + 0x100000
167402: 01                       fallthrough
      :                          @11619
167403: 82 9a                    a3 = u64 [a2]
167405: c9 a9 0b                 a4 = a2 - a3
167408: ab 8b 11                 jump @11623 if a4 != a1
      :                          @11620
167411: c9 7a 0b                 a4 = a3 - a0
167414: 01                       fallthrough
      :                          @11621
167415: 82 9c                    a5 = u64 [a2]
167417: ab ac f2                 jump @11619 if a5 != a3
      :                          @11622
167420: 7b 9b                    u64 [a2] = a4
167422: 33 06                    s1 = 0
167424: 01                       fallthrough
      :                          @11623
167425: 82 17 10 01              a0 = u64 [sp + 0x110]
167429: 52 07 06                 jump @11625 if a0 != 0
      :                          @11624
167432: 28 e3 53                 jump @12862
      :                          @11625
167435: 54 37 00 00 10 09        jump @11627 if a0 <=u 1048576
      :                          @11626
167441: 28 da 53                 jump @12862
      :                          @11627
167444: 82 18 18 01              a1 = u64 [sp + 0x118]
167448: 33 0a b0 02 03           a3 = 0x302b0
167453: 95 a9 00 00 10           a2 = a3 + 0x100000
167458: 01                       fallthrough
      :                          @11628
167459: 82 9a                    a3 = u64 [a2]
167461: c9 a9 0b                 a4 = a2 - a3
167464: aa 8b 06                 jump @11630 if a4 == a1
      :                          @11629
167467: 28 c0 53                 jump @12862
      :                          @11630
167470: c9 7a 0b                 a4 = a3 - a0
167473: 01                       fallthrough
      :                          @11631
167474: 82 9c                    a5 = u64 [a2]
167476: ab ac ef                 jump @11628 if a5 != a3
      :                          @11632
167479: 7b 9b                    u64 [a2] = a4
167481: 33 06                    s1 = 0
167483: 01                       fallthrough
      :                          @11633
167484: ab ac e7                 jump @11628 if a5 != a3
      :                          @11634
167487: 28 ac 53                 jump @12862
      :                          @11635 [@dyn 1208]
167490: 3a 08 70 02 03           a1 = u64 [0x30270]
167495: 97 89 0d                 a2 = a1 << 0xd
167498: d3 98 08                 a1 = a1 ^ a2
167501: 98 89 07                 a2 = a1 >> 0x7
167504: d3 98 08                 a1 = a1 ^ a2
167507: 3a 09 58 01 03           a2 = u64 [0x30158]
167512: 97 8a 11                 a3 = a1 << 0x11
167515: d3 a8 08                 a1 = a1 ^ a3
167518: ca 98 09                 a2 = a1 * a2
167521: 3e 08 70 02 03           u64 [0x30270] = a1
167526: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
167536: d6 79 07                 a0 = a2 mulhu a0
167539: 98 77 04                 a0 = a0 >> 0x4
167542: 96 77 14                 a0 = a0 * 0x14
167545: c9 79 08                 a1 = a2 - a0
167548: 95 17 d0 01              a0 = sp + 0x1d0
167552: 95 16 d0 01              s1 = sp + 0x1d0
167556: 50 20 72 09 47 e5 fd     ra = 2418, jump @2157
      :                          @11636 [@dyn 1209]
167563: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
167567: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
167571: 50 20 74 09 ba 2d fe     ra = 2420, jump @3503
      :                          @11637 [@dyn 1210]
167578: 7b 17 10 01              u64 [sp + 0x110] = a0
167582: 7b 16 28 02              u64 [sp + 0x228] = s1
167586: 33 07 20 02              a0 = 0x220
167590: 7b 17 30 02              u64 [sp + 0x230] = a0
167594: 95 17 10 01              a0 = sp + 0x110
167598: 7b 17 38 02              u64 [sp + 0x238] = a0
167602: 33 07 28 0c              a0 = 0xc28
167606: 7b 17 40 02              u64 [sp + 0x240] = a0
167610: 33 07 a0 23 01           a0 = 0x123a0
167615: 7b 17 80 02              u64 [sp + 0x280] = a0
167619: 49 21 88 02 02           u64 [sp + 648] = 0x2
167624: 49 21 a0 02              u64 [sp + 672] = 0
167628: 95 18 28 02              a1 = sp + 0x228
167632: 7b 18 90 02              u64 [sp + 0x290] = a1
167636: 49 21 98 02 02           u64 [sp + 664] = 0x2
167641: 95 17 f8 01              a0 = sp + 0x1f8
167645: 95 18 80 02              a1 = sp + 0x280
167649: 50 20 76 09 66 c0 fd     ra = 2422, jump @1491
      :                          @11638 [@dyn 1211]
167656: 82 16 00 02              s1 = u64 [sp + 0x200]
167660: 82 1b 08 02              a4 = u64 [sp + 0x208]
167664: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
167668: 7b 17 60                 u64 [sp + 0x60] = a0
167671: 33 07 02                 a0 = 0x2
167674: 33 08                    a1 = 0
167676: 33 09                    a2 = 0
167678: 64 6a                    a3 = s1
167680: 33 00 78 09              ra = 0x978
167684: 0a 64                    ecalli 100 // 'log'
167686: 01                       fallthrough
      :                          @11639 [@dyn 1212]
167687: 82 1c 60                 a5 = u64 [sp + 0x60]
167690: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
167695: 53 38 00 00 f0 25        jump @11645 if a1 <u 4293918720
      :                          @11640
167701: 33 07 b0 02 03           a0 = 0x302b0
167706: 95 77 00 00 10           a0 = a0 + 0x100000
167711: 01                       fallthrough
      :                          @11641
167712: 82 78                    a1 = u64 [a0]
167714: c9 87 09                 a2 = a0 - a1
167717: ab 69 0f                 jump @11645 if a2 != s1
      :                          @11642
167720: c9 c8 09                 a2 = a1 - a5
167723: 01                       fallthrough
      :                          @11643
167724: 82 7a                    a3 = u64 [a0]
167726: ab 8a f2                 jump @11641 if a3 != a1
      :                          @11644
167729: 7b 79                    u64 [a0] = a2
167731: 01                       fallthrough
      :                          @11645
167732: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
167736: 52 08 06                 jump @11647 if a1 != 0
      :                          @11646
167739: 28 b0 52                 jump @12862
      :                          @11647
167742: 54 38 00 00 02 09        jump @11649 if a1 <=u 131072
      :                          @11648
167748: 28 a7 52                 jump @12862
      :                          @11649
167751: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
167755: 97 88 03                 a1 = a1 << 0x3
167758: 33 09 b0 02 03           a2 = 0x302b0
167763: 95 99 00 00 10           a2 = a2 + 0x100000
167768: 01                       fallthrough
      :                          @11650
167769: 82 9a                    a3 = u64 [a2]
167771: c9 a9 0b                 a4 = a2 - a3
167774: aa 7b 06                 jump @11652 if a4 == a0
      :                          @11651
167777: 28 8a 52                 jump @12862
      :                          @11652
167780: c9 8a 0b                 a4 = a3 - a1
167783: 01                       fallthrough
      :                          @11653
167784: 82 9c                    a5 = u64 [a2]
167786: ab ac ef                 jump @11650 if a5 != a3
      :                          @11654
167789: 7b 9b                    u64 [a2] = a4
167791: 33 06                    s1 = 0
167793: 01                       fallthrough
      :                          @11655
167794: ab ac e7                 jump @11650 if a5 != a3
      :                          @11656
167797: 28 76 52                 jump @12862
      :                          @11657 [@dyn 1213]
167800: 3a 08 70 02 03           a1 = u64 [0x30270]
167805: 97 89 0d                 a2 = a1 << 0xd
167808: d3 98 08                 a1 = a1 ^ a2
167811: 98 89 07                 a2 = a1 >> 0x7
167814: d3 98 08                 a1 = a1 ^ a2
167817: 97 89 11                 a2 = a1 << 0x11
167820: d3 89 09                 a2 = a2 ^ a1
167823: 97 8a 02                 a3 = a1 << 0x2
167826: 3e 09 70 02 03           u64 [0x30270] = a2
167831: 3a 09 70 02 03           a2 = u64 [0x30270]
167836: c8 a8 08                 a1 = a1 + a3
167839: 84 88 07                 a1 = a1 & 0x7
167842: 97 9a 0d                 a3 = a2 << 0xd
167845: d3 a9 09                 a2 = a2 ^ a3
167848: 98 9a 07                 a3 = a2 >> 0x7
167851: d3 a9 09                 a2 = a2 ^ a3
167854: 97 9a 11                 a3 = a2 << 0x11
167857: d3 9a 0a                 a3 = a3 ^ a2
167860: 97 9b 02                 a4 = a2 << 0x2
167863: c8 b9 09                 a2 = a2 + a4
167866: 3e 0a 70 02 03           u64 [0x30270] = a3
167871: 84 96 07                 s1 = a2 & 0x7
167874: 95 17 a0 01              a0 = sp + 0x1a0
167878: 50 20 7c 09 c1 e4 fd     ra = 2428, jump @2169
      :                          @11658 [@dyn 1214]
167885: 95 17 b8 01              a0 = sp + 0x1b8
167889: 64 68                    a1 = s1
167891: 50 20 7e 09 b4 e4 fd     ra = 2430, jump @2169
      :                          @11659 [@dyn 1215]
167898: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
167902: 7b 18 60                 u64 [sp + 0x60] = a1
167905: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
167909: 7b 19 58                 u64 [sp + 0x58] = a2
167912: 95 17 d0 01              a0 = sp + 0x1d0
167916: 50 20 80 09 dc 71        ra = 2432, jump @13509
      :                          @11660 [@dyn 1216]
167922: 82 16 c0 01              s1 = u64 [sp + 0x1c0]
167926: 82 19 c8 01              a2 = u64 [sp + 0x1c8]
167930: 7b 19 50                 u64 [sp + 0x50] = a2
167933: 95 17 f8 01              a0 = sp + 0x1f8
167937: 64 68                    a1 = s1
167939: 50 20 82 09 c5 71        ra = 2434, jump @13509
      :                          @11661 [@dyn 1217]
167945: 82 17 60                 a0 = u64 [sp + 0x60]
167948: 82 18 58                 a1 = u64 [sp + 0x58]
167951: 7b 16 58                 u64 [sp + 0x58] = s1
167954: 64 69                    a2 = s1
167956: 82 1a 50                 a3 = u64 [sp + 0x50]
167959: 50 20 84 09 7c 2d fe     ra = 2436, jump @3540
      :                          @11662 [@dyn 1218]
167966: 7b 17 00 01              u64 [sp + 0x100] = a0
167970: 95 17 d0 01              a0 = sp + 0x1d0
167974: 7b 17 80 02              u64 [sp + 0x280] = a0
167978: 33 07 48 02              a0 = 0x248
167982: 7b 17 88 02              u64 [sp + 0x288] = a0
167986: 95 18 f8 01              a1 = sp + 0x1f8
167990: 7b 18 90 02              u64 [sp + 0x290] = a1
167994: 7b 17 98 02              u64 [sp + 0x298] = a0
167998: 95 17 00 01              a0 = sp + 0x100
168002: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
168006: 33 07 28 0c              a0 = 0xc28
168010: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
168014: 33 07 c0 23 01           a0 = 0x123c0
168019: 7b 17 28 02              u64 [sp + 0x228] = a0
168023: 49 21 30 02 03           u64 [sp + 560] = 0x3
168028: 49 21 48 02              u64 [sp + 584] = 0
168032: 95 18 80 02              a1 = sp + 0x280
168036: 7b 18 38 02              u64 [sp + 0x238] = a1
168040: 49 21 40 02 03           u64 [sp + 576] = 0x3
168045: 95 17 10 01              a0 = sp + 0x110
168049: 95 18 28 02              a1 = sp + 0x228
168053: 50 20 86 09 d2 be fd     ra = 2438, jump @1491
      :                          @11663 [@dyn 1219]
168060: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
168064: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
168074: d4 78 09                 a2 = a1 | a0
168077: aa 79 06                 jump @11665 if a2 == a0
      :                          @11664
168080: 28 f1 5f                 jump @13100
      :                          @11665
168083: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
168087: d4 78 09                 a2 = a1 | a0
168090: aa 79 06                 jump @11667 if a2 == a0
      :                          @11666
168093: 28 1b 60                 jump @13110
      :                          @11667
168096: 82 16 18 01              s1 = u64 [sp + 0x118]
168100: 82 1b 20 01              a4 = u64 [sp + 0x120]
168104: 82 17 10 01              a0 = u64 [sp + 0x110]
168108: 7b 17 50                 u64 [sp + 0x50] = a0
168111: 33 07 02                 a0 = 0x2
168114: 33 08                    a1 = 0
168116: 33 09                    a2 = 0
168118: 64 6a                    a3 = s1
168120: 33 00 88 09              ra = 0x988
168124: 0a 64                    ecalli 100 // 'log'
168126: 01                       fallthrough
      :                          @11668 [@dyn 1220]
168127: 82 17 50                 a0 = u64 [sp + 0x50]
168130: 33 02 00 00 f0           t0 = 0xfffffffffff00000
168135: 33 03 ff ff ef           t1 = 0xffffffffffefffff
168140: c8 37 09                 a2 = a0 + t1
168143: ac 29 22                 jump @11674 if a2 <u t0
      :                          @11669
168146: 33 09 b0 02 03           a2 = 0x302b0
168151: 95 99 00 00 10           a2 = a2 + 0x100000
168156: 01                       fallthrough
      :                          @11670
168157: 82 9a                    a3 = u64 [a2]
168159: c9 a9 0b                 a4 = a2 - a3
168162: ab 6b 0f                 jump @11674 if a4 != s1
      :                          @11671
168165: c9 7a 0b                 a4 = a3 - a0
168168: 01                       fallthrough
      :                          @11672
168169: 82 9c                    a5 = u64 [a2]
168171: ab ac f2                 jump @11670 if a5 != a3
      :                          @11673
168174: 7b 9b                    u64 [a2] = a4
168176: 01                       fallthrough
      :                          @11674
168177: 82 19 b8 01              a2 = u64 [sp + 0x1b8]
168181: c8 39 08                 a1 = a2 + t1
168184: 82 17 58                 a0 = u64 [sp + 0x58]
168187: ac 28 22                 jump @11680 if a1 <u t0
      :                          @11675
168190: 33 08 b0 02 03           a1 = 0x302b0
168195: 95 88 00 00 10           a1 = a1 + 0x100000
168200: 01                       fallthrough
      :                          @11676
168201: 82 8a                    a3 = u64 [a1]
168203: c9 a8 0b                 a4 = a1 - a3
168206: ab 7b 0f                 jump @11680 if a4 != a0
      :                          @11677
168209: c9 9a 0b                 a4 = a3 - a2
168212: 01                       fallthrough
      :                          @11678
168213: 82 8c                    a5 = u64 [a1]
168215: ab ac f2                 jump @11676 if a5 != a3
      :                          @11679
168218: 7b 8b                    u64 [a1] = a4
168220: 01                       fallthrough
      :                          @11680
168221: 82 18 a0 01              a1 = u64 [sp + 0x1a0]
168225: c8 38 07                 a0 = a1 + t1
168228: 82 16 60                 s1 = u64 [sp + 0x60]
168231: 55 37 00 00 f0 09        jump @11682 if a0 >=u 4293918720
      :                          @11681
168237: 28 be 50                 jump @12862
      :                          @11682
168240: 33 07 b0 02 03           a0 = 0x302b0
168245: 95 77 00 00 10           a0 = a0 + 0x100000
168250: 01                       fallthrough
      :                          @11683
168251: 82 79                    a2 = u64 [a0]
168253: c9 97 0a                 a3 = a0 - a2
168256: aa 6a 06                 jump @11685 if a3 == s1
      :                          @11684
168259: 28 a8 50                 jump @12862
      :                          @11685
168262: c9 89 0a                 a3 = a2 - a1
168265: 01                       fallthrough
      :                          @11686
168266: 82 7b                    a4 = u64 [a0]
168268: ab 9b ef                 jump @11683 if a4 != a2
      :                          @11687
168271: 7b 7a                    u64 [a0] = a3
168273: 33 0c                    a5 = 0
168275: 01                       fallthrough
      :                          @11688
168276: ab 9b e7                 jump @11683 if a4 != a2
      :                          @11689
168279: 28 94 50                 jump @12862
      :                          @11690 [@dyn 1221]
168282: 3a 08 70 02 03           a1 = u64 [0x30270]
168287: 97 89 0d                 a2 = a1 << 0xd
168290: d3 98 08                 a1 = a1 ^ a2
168293: 98 89 07                 a2 = a1 >> 0x7
168296: d3 98 08                 a1 = a1 ^ a2
168299: 97 89 11                 a2 = a1 << 0x11
168302: d3 89 09                 a2 = a2 ^ a1
168305: 97 8a 02                 a3 = a1 << 0x2
168308: 3e 09 70 02 03           u64 [0x30270] = a2
168313: 3a 09 70 02 03           a2 = u64 [0x30270]
168318: c8 a8 08                 a1 = a1 + a3
168321: 84 88 07                 a1 = a1 & 0x7
168324: 97 9a 0d                 a3 = a2 << 0xd
168327: d3 a9 09                 a2 = a2 ^ a3
168330: 98 9a 07                 a3 = a2 >> 0x7
168333: d3 a9 09                 a2 = a2 ^ a3
168336: 97 9a 11                 a3 = a2 << 0x11
168339: d3 9a 0a                 a3 = a3 ^ a2
168342: 97 9b 02                 a4 = a2 << 0x2
168345: c8 b9 09                 a2 = a2 + a4
168348: 3e 0a 70 02 03           u64 [0x30270] = a3
168353: 84 96 07                 s1 = a2 & 0x7
168356: 95 17 a0 01              a0 = sp + 0x1a0
168360: 50 20 8c 09 df e2 fd     ra = 2444, jump @2169
      :                          @11691 [@dyn 1222]
168367: 95 17 b8 01              a0 = sp + 0x1b8
168371: 64 68                    a1 = s1
168373: 50 20 8e 09 d2 e2 fd     ra = 2446, jump @2169
      :                          @11692 [@dyn 1223]
168380: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
168384: 7b 18 60                 u64 [sp + 0x60] = a1
168387: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
168391: 7b 19 58                 u64 [sp + 0x58] = a2
168394: 95 17 d0 01              a0 = sp + 0x1d0
168398: 50 20 90 09 fa 6f        ra = 2448, jump @13509
      :                          @11693 [@dyn 1224]
168404: 82 16 c0 01              s1 = u64 [sp + 0x1c0]
168408: 82 19 c8 01              a2 = u64 [sp + 0x1c8]
168412: 7b 19 50                 u64 [sp + 0x50] = a2
168415: 95 17 f8 01              a0 = sp + 0x1f8
168419: 64 68                    a1 = s1
168421: 50 20 92 09 e3 6f        ra = 2450, jump @13509
      :                          @11694 [@dyn 1225]
168427: 82 17 60                 a0 = u64 [sp + 0x60]
168430: 82 18 58                 a1 = u64 [sp + 0x58]
168433: 7b 16 58                 u64 [sp + 0x58] = s1
168436: 64 69                    a2 = s1
168438: 82 1a 50                 a3 = u64 [sp + 0x50]
168441: 50 20 94 09 51 2e fe     ra = 2452, jump @3610
      :                          @11695 [@dyn 1226]
168448: 7b 17 00 01              u64 [sp + 0x100] = a0
168452: 95 17 d0 01              a0 = sp + 0x1d0
168456: 7b 17 80 02              u64 [sp + 0x280] = a0
168460: 33 07 48 02              a0 = 0x248
168464: 7b 17 88 02              u64 [sp + 0x288] = a0
168468: 95 18 f8 01              a1 = sp + 0x1f8
168472: 7b 18 90 02              u64 [sp + 0x290] = a1
168476: 7b 17 98 02              u64 [sp + 0x298] = a0
168480: 95 17 00 01              a0 = sp + 0x100
168484: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
168488: 33 07 28 0c              a0 = 0xc28
168492: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
168496: 33 07 08 24 01           a0 = 0x12408
168501: 7b 17 28 02              u64 [sp + 0x228] = a0
168505: 49 21 30 02 03           u64 [sp + 560] = 0x3
168510: 49 21 48 02              u64 [sp + 584] = 0
168514: 95 18 80 02              a1 = sp + 0x280
168518: 7b 18 38 02              u64 [sp + 0x238] = a1
168522: 49 21 40 02 03           u64 [sp + 576] = 0x3
168527: 95 17 10 01              a0 = sp + 0x110
168531: 95 18 28 02              a1 = sp + 0x228
168535: 50 20 96 09 f0 bc fd     ra = 2454, jump @1491
      :                          @11696 [@dyn 1227]
168542: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
168546: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
168556: d4 78 09                 a2 = a1 | a0
168559: aa 79 06                 jump @11698 if a2 == a0
      :                          @11697
168562: 28 7d 5e                 jump @13120
      :                          @11698
168565: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
168569: d4 78 09                 a2 = a1 | a0
168572: aa 79 06                 jump @11700 if a2 == a0
      :                          @11699
168575: 28 a7 5e                 jump @13130
      :                          @11700
168578: 82 16 18 01              s1 = u64 [sp + 0x118]
168582: 82 1b 20 01              a4 = u64 [sp + 0x120]
168586: 82 17 10 01              a0 = u64 [sp + 0x110]
168590: 7b 17 50                 u64 [sp + 0x50] = a0
168593: 33 07 02                 a0 = 0x2
168596: 33 08                    a1 = 0
168598: 33 09                    a2 = 0
168600: 64 6a                    a3 = s1
168602: 33 00 98 09              ra = 0x998
168606: 0a 64                    ecalli 100 // 'log'
168608: 01                       fallthrough
      :                          @11701 [@dyn 1228]
168609: 82 17 50                 a0 = u64 [sp + 0x50]
168612: 33 02 00 00 f0           t0 = 0xfffffffffff00000
168617: 33 03 ff ff ef           t1 = 0xffffffffffefffff
168622: c8 37 09                 a2 = a0 + t1
168625: ac 29 22                 jump @11707 if a2 <u t0
      :                          @11702
168628: 33 09 b0 02 03           a2 = 0x302b0
168633: 95 99 00 00 10           a2 = a2 + 0x100000
168638: 01                       fallthrough
      :                          @11703
168639: 82 9a                    a3 = u64 [a2]
168641: c9 a9 0b                 a4 = a2 - a3
168644: ab 6b 0f                 jump @11707 if a4 != s1
      :                          @11704
168647: c9 7a 0b                 a4 = a3 - a0
168650: 01                       fallthrough
      :                          @11705
168651: 82 9c                    a5 = u64 [a2]
168653: ab ac f2                 jump @11703 if a5 != a3
      :                          @11706
168656: 7b 9b                    u64 [a2] = a4
168658: 01                       fallthrough
      :                          @11707
168659: 82 19 b8 01              a2 = u64 [sp + 0x1b8]
168663: c8 39 08                 a1 = a2 + t1
168666: 82 17 58                 a0 = u64 [sp + 0x58]
168669: ac 28 22                 jump @11713 if a1 <u t0
      :                          @11708
168672: 33 08 b0 02 03           a1 = 0x302b0
168677: 95 88 00 00 10           a1 = a1 + 0x100000
168682: 01                       fallthrough
      :                          @11709
168683: 82 8a                    a3 = u64 [a1]
168685: c9 a8 0b                 a4 = a1 - a3
168688: ab 7b 0f                 jump @11713 if a4 != a0
      :                          @11710
168691: c9 9a 0b                 a4 = a3 - a2
168694: 01                       fallthrough
      :                          @11711
168695: 82 8c                    a5 = u64 [a1]
168697: ab ac f2                 jump @11709 if a5 != a3
      :                          @11712
168700: 7b 8b                    u64 [a1] = a4
168702: 01                       fallthrough
      :                          @11713
168703: 82 18 a0 01              a1 = u64 [sp + 0x1a0]
168707: c8 38 07                 a0 = a1 + t1
168710: 82 16 60                 s1 = u64 [sp + 0x60]
168713: 55 37 00 00 f0 09        jump @11715 if a0 >=u 4293918720
      :                          @11714
168719: 28 dc 4e                 jump @12862
      :                          @11715
168722: 33 07 b0 02 03           a0 = 0x302b0
168727: 95 77 00 00 10           a0 = a0 + 0x100000
168732: 01                       fallthrough
      :                          @11716
168733: 82 79                    a2 = u64 [a0]
168735: c9 97 0a                 a3 = a0 - a2
168738: aa 6a 06                 jump @11718 if a3 == s1
      :                          @11717
168741: 28 c6 4e                 jump @12862
      :                          @11718
168744: c9 89 0a                 a3 = a2 - a1
168747: 01                       fallthrough
      :                          @11719
168748: 82 7b                    a4 = u64 [a0]
168750: ab 9b ef                 jump @11716 if a4 != a2
      :                          @11720
168753: 7b 7a                    u64 [a0] = a3
168755: 33 0c                    a5 = 0
168757: 01                       fallthrough
      :                          @11721
168758: ab 9b e7                 jump @11716 if a4 != a2
      :                          @11722
168761: 28 b2 4e                 jump @12862
      :                          @11723 [@dyn 1229]
168764: 3a 08 70 02 03           a1 = u64 [0x30270]
168769: 97 89 0d                 a2 = a1 << 0xd
168772: d3 98 08                 a1 = a1 ^ a2
168775: 98 89 07                 a2 = a1 >> 0x7
168778: d3 98 08                 a1 = a1 ^ a2
168781: 3a 09 58 01 03           a2 = u64 [0x30158]
168786: 97 8a 11                 a3 = a1 << 0x11
168789: d3 a8 08                 a1 = a1 ^ a3
168792: ca 98 09                 a2 = a1 * a2
168795: 3e 08 70 02 03           u64 [0x30270] = a1
168800: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
168810: d6 79 07                 a0 = a2 mulhu a0
168813: 98 78 02                 a1 = a0 >> 0x2
168816: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
168819: c8 87 07                 a0 = a0 + a1
168822: c9 79 09                 a2 = a2 - a0
168825: 95 99 02                 a2 = a2 + 0x2
168828: 49 21 88 01              u64 [sp + 392] = 0
168832: 7b 19 90 01              u64 [sp + 0x190] = a2
168836: 46 21 98 01              u8 [sp + 408] = 0
168840: 95 17 d0 01              a0 = sp + 0x1d0
168844: 95 18 88 01              a1 = sp + 0x188
168848: 95 16 d0 01              s1 = sp + 0x1d0
168852: 50 20 9c 09 93 ee fd     ra = 2460, jump @2290
      :                          @11724 [@dyn 1230]
168859: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
168863: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
168867: 50 20 9e 09 30 30 fe     ra = 2462, jump @3694
      :                          @11725 [@dyn 1231]
168874: 7b 17 10 01              u64 [sp + 0x110] = a0
168878: 7b 16 28 02              u64 [sp + 0x228] = s1
168882: 33 07 20 02              a0 = 0x220
168886: 7b 17 30 02              u64 [sp + 0x230] = a0
168890: 95 17 10 01              a0 = sp + 0x110
168894: 7b 17 38 02              u64 [sp + 0x238] = a0
168898: 33 07 28 0c              a0 = 0xc28
168902: 7b 17 40 02              u64 [sp + 0x240] = a0
168906: 33 07 50 24 01           a0 = 0x12450
168911: 7b 17 80 02              u64 [sp + 0x280] = a0
168915: 49 21 88 02 02           u64 [sp + 648] = 0x2
168920: 49 21 a0 02              u64 [sp + 672] = 0
168924: 95 18 28 02              a1 = sp + 0x228
168928: 7b 18 90 02              u64 [sp + 0x290] = a1
168932: 49 21 98 02 02           u64 [sp + 664] = 0x2
168937: 95 17 f8 01              a0 = sp + 0x1f8
168941: 95 18 80 02              a1 = sp + 0x280
168945: 50 20 a0 09 56 bb fd     ra = 2464, jump @1491
      :                          @11726 [@dyn 1232]
168952: 82 16 00 02              s1 = u64 [sp + 0x200]
168956: 82 1b 08 02              a4 = u64 [sp + 0x208]
168960: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
168964: 7b 17 60                 u64 [sp + 0x60] = a0
168967: 33 07 02                 a0 = 0x2
168970: 33 08                    a1 = 0
168972: 33 09                    a2 = 0
168974: 64 6a                    a3 = s1
168976: 33 00 a2 09              ra = 0x9a2
168980: 0a 64                    ecalli 100 // 'log'
168982: 01                       fallthrough
      :                          @11727 [@dyn 1233]
168983: 82 1c 60                 a5 = u64 [sp + 0x60]
168986: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
168991: 53 38 00 00 f0 25        jump @11733 if a1 <u 4293918720
      :                          @11728
168997: 33 07 b0 02 03           a0 = 0x302b0
169002: 95 77 00 00 10           a0 = a0 + 0x100000
169007: 01                       fallthrough
      :                          @11729
169008: 82 78                    a1 = u64 [a0]
169010: c9 87 09                 a2 = a0 - a1
169013: ab 69 0f                 jump @11733 if a2 != s1
      :                          @11730
169016: c9 c8 09                 a2 = a1 - a5
169019: 01                       fallthrough
      :                          @11731
169020: 82 7a                    a3 = u64 [a0]
169022: ab 8a f2                 jump @11729 if a3 != a1
      :                          @11732
169025: 7b 79                    u64 [a0] = a2
169027: 01                       fallthrough
      :                          @11733
169028: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
169032: 52 08 06                 jump @11735 if a1 != 0
      :                          @11734
169035: 28 a0 4d                 jump @12862
      :                          @11735
169038: 54 38 00 00 02 09        jump @11737 if a1 <=u 131072
      :                          @11736
169044: 28 97 4d                 jump @12862
      :                          @11737
169047: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
169051: 97 88 03                 a1 = a1 << 0x3
169054: 33 09 b0 02 03           a2 = 0x302b0
169059: 95 99 00 00 10           a2 = a2 + 0x100000
169064: 01                       fallthrough
      :                          @11738
169065: 82 9a                    a3 = u64 [a2]
169067: c9 a9 0b                 a4 = a2 - a3
169070: aa 7b 06                 jump @11740 if a4 == a0
      :                          @11739
169073: 28 7a 4d                 jump @12862
      :                          @11740
169076: c9 8a 0b                 a4 = a3 - a1
169079: 01                       fallthrough
      :                          @11741
169080: 82 9c                    a5 = u64 [a2]
169082: ab ac ef                 jump @11738 if a5 != a3
      :                          @11742
169085: 7b 9b                    u64 [a2] = a4
169087: 33 06                    s1 = 0
169089: 01                       fallthrough
      :                          @11743
169090: ab ac e7                 jump @11738 if a5 != a3
      :                          @11744
169093: 28 66 4d                 jump @12862
      :                          @11745 [@dyn 1234]
169096: 3a 08 70 02 03           a1 = u64 [0x30270]
169101: 97 89 0d                 a2 = a1 << 0xd
169104: d3 98 08                 a1 = a1 ^ a2
169107: 98 89 07                 a2 = a1 >> 0x7
169110: d3 98 08                 a1 = a1 ^ a2
169113: 3a 09 58 01 03           a2 = u64 [0x30158]
169118: 97 8a 11                 a3 = a1 << 0x11
169121: d3 a8 08                 a1 = a1 ^ a3
169124: ca 98 09                 a2 = a1 * a2
169127: 3e 08 70 02 03           u64 [0x30270] = a1
169132: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
169142: d6 79 07                 a0 = a2 mulhu a0
169145: 98 78 02                 a1 = a0 >> 0x2
169148: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
169151: c8 87 07                 a0 = a0 + a1
169154: c9 79 08                 a1 = a2 - a0
169157: 95 88 01                 a1 = a1 + 0x1
169160: 95 17 d0 01              a0 = sp + 0x1d0
169164: 95 16 d0 01              s1 = sp + 0x1d0
169168: 50 20 a6 09 fb de fd     ra = 2470, jump @2157
      :                          @11746 [@dyn 1235]
169175: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
169179: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
169183: 50 20 a8 09 84 33 fe     ra = 2472, jump @3781
      :                          @11747 [@dyn 1236]
169190: 7b 17 10 01              u64 [sp + 0x110] = a0
169194: 7b 16 28 02              u64 [sp + 0x228] = s1
169198: 33 07 20 02              a0 = 0x220
169202: 7b 17 30 02              u64 [sp + 0x230] = a0
169206: 95 17 10 01              a0 = sp + 0x110
169210: 7b 17 38 02              u64 [sp + 0x238] = a0
169214: 33 07 28 0c              a0 = 0xc28
169218: 7b 17 40 02              u64 [sp + 0x240] = a0
169222: 33 07 88 24 01           a0 = 0x12488
169227: 7b 17 80 02              u64 [sp + 0x280] = a0
169231: 49 21 88 02 02           u64 [sp + 648] = 0x2
169236: 49 21 a0 02              u64 [sp + 672] = 0
169240: 95 18 28 02              a1 = sp + 0x228
169244: 7b 18 90 02              u64 [sp + 0x290] = a1
169248: 49 21 98 02 02           u64 [sp + 664] = 0x2
169253: 95 17 f8 01              a0 = sp + 0x1f8
169257: 95 18 80 02              a1 = sp + 0x280
169261: 50 20 aa 09 1a ba fd     ra = 2474, jump @1491
      :                          @11748 [@dyn 1237]
169268: 82 16 00 02              s1 = u64 [sp + 0x200]
169272: 82 1b 08 02              a4 = u64 [sp + 0x208]
169276: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
169280: 7b 17 60                 u64 [sp + 0x60] = a0
169283: 33 07 02                 a0 = 0x2
169286: 33 08                    a1 = 0
169288: 33 09                    a2 = 0
169290: 64 6a                    a3 = s1
169292: 33 00 ac 09              ra = 0x9ac
169296: 0a 64                    ecalli 100 // 'log'
169298: 01                       fallthrough
      :                          @11749 [@dyn 1238]
169299: 82 1c 60                 a5 = u64 [sp + 0x60]
169302: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
169307: 53 38 00 00 f0 25        jump @11755 if a1 <u 4293918720
      :                          @11750
169313: 33 07 b0 02 03           a0 = 0x302b0
169318: 95 77 00 00 10           a0 = a0 + 0x100000
169323: 01                       fallthrough
      :                          @11751
169324: 82 78                    a1 = u64 [a0]
169326: c9 87 09                 a2 = a0 - a1
169329: ab 69 0f                 jump @11755 if a2 != s1
      :                          @11752
169332: c9 c8 09                 a2 = a1 - a5
169335: 01                       fallthrough
      :                          @11753
169336: 82 7a                    a3 = u64 [a0]
169338: ab 8a f2                 jump @11751 if a3 != a1
      :                          @11754
169341: 7b 79                    u64 [a0] = a2
169343: 01                       fallthrough
      :                          @11755
169344: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
169348: 52 08 06                 jump @11757 if a1 != 0
      :                          @11756
169351: 28 64 4c                 jump @12862
      :                          @11757
169354: 54 38 00 00 02 09        jump @11759 if a1 <=u 131072
      :                          @11758
169360: 28 5b 4c                 jump @12862
      :                          @11759
169363: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
169367: 97 88 03                 a1 = a1 << 0x3
169370: 33 09 b0 02 03           a2 = 0x302b0
169375: 95 99 00 00 10           a2 = a2 + 0x100000
169380: 01                       fallthrough
      :                          @11760
169381: 82 9a                    a3 = u64 [a2]
169383: c9 a9 0b                 a4 = a2 - a3
169386: aa 7b 06                 jump @11762 if a4 == a0
      :                          @11761
169389: 28 3e 4c                 jump @12862
      :                          @11762
169392: c9 8a 0b                 a4 = a3 - a1
169395: 01                       fallthrough
      :                          @11763
169396: 82 9c                    a5 = u64 [a2]
169398: ab ac ef                 jump @11760 if a5 != a3
      :                          @11764
169401: 7b 9b                    u64 [a2] = a4
169403: 33 06                    s1 = 0
169405: 01                       fallthrough
      :                          @11765
169406: ab ac e7                 jump @11760 if a5 != a3
      :                          @11766
169409: 28 2a 4c                 jump @12862
      :                          @11767 [@dyn 1239]
169412: 3a 08 70 02 03           a1 = u64 [0x30270]
169417: 97 89 0d                 a2 = a1 << 0xd
169420: d3 98 08                 a1 = a1 ^ a2
169423: 98 89 07                 a2 = a1 >> 0x7
169426: 3a 0a 58 01 03           a3 = u64 [0x30158]
169431: d3 98 08                 a1 = a1 ^ a2
169434: 97 89 11                 a2 = a1 << 0x11
169437: d3 98 08                 a1 = a1 ^ a2
169440: ca a8 09                 a2 = a1 * a3
169443: 3e 08 70 02 03           u64 [0x30270] = a1
169448: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
169458: d6 b9 08                 a1 = a2 mulhu a4
169461: 98 88 03                 a1 = a1 >> 0x3
169464: 33 0c 0a                 a5 = 0xa
169467: 3a 06 70 02 03           s1 = u64 [0x30270]
169472: ca c8 08                 a1 = a1 * a5
169475: c9 89 08                 a1 = a2 - a1
169478: 97 69 0d                 a2 = s1 << 0xd
169481: d3 96 06                 s1 = s1 ^ a2
169484: 98 69 07                 a2 = s1 >> 0x7
169487: d3 96 06                 s1 = s1 ^ a2
169490: 97 69 11                 a2 = s1 << 0x11
169493: d3 69 09                 a2 = a2 ^ s1
169496: ca a9 0a                 a3 = a2 * a3
169499: 3e 09 70 02 03           u64 [0x30270] = a2
169504: d6 ba 07                 a0 = a3 mulhu a4
169507: 98 77 03                 a0 = a0 >> 0x3
169510: ca c7 07                 a0 = a0 * a5
169513: c9 7a 06                 s1 = a3 - a0
169516: 95 17 10 01              a0 = sp + 0x110
169520: 50 20 b0 09 9b dd fd     ra = 2480, jump @2157
      :                          @11768 [@dyn 1240]
169527: 95 17 d0 01              a0 = sp + 0x1d0
169531: 64 68                    a1 = s1
169533: 50 20 b2 09 8e dd fd     ra = 2482, jump @2157
      :                          @11769 [@dyn 1241]
169540: 82 17 18 01              a0 = u64 [sp + 0x118]
169544: 82 18 20 01              a1 = u64 [sp + 0x120]
169548: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
169552: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
169556: 50 20 b4 09 9e 36 fe     ra = 2484, jump @3890
      :                          @11770 [@dyn 1242]
169563: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
169567: 95 17 10 01              a0 = sp + 0x110
169571: 7b 17 80 02              u64 [sp + 0x280] = a0
169575: 33 07 20 02              a0 = 0x220
169579: 7b 17 88 02              u64 [sp + 0x288] = a0
169583: 95 18 d0 01              a1 = sp + 0x1d0
169587: 7b 18 90 02              u64 [sp + 0x290] = a1
169591: 7b 17 98 02              u64 [sp + 0x298] = a0
169595: 95 17 b8 01              a0 = sp + 0x1b8
169599: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
169603: 33 07 28 0c              a0 = 0xc28
169607: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
169611: 33 07 a8 24 01           a0 = 0x124a8
169616: 7b 17 28 02              u64 [sp + 0x228] = a0
169620: 49 21 30 02 03           u64 [sp + 560] = 0x3
169625: 49 21 48 02              u64 [sp + 584] = 0
169629: 95 18 80 02              a1 = sp + 0x280
169633: 7b 18 38 02              u64 [sp + 0x238] = a1
169637: 49 21 40 02 03           u64 [sp + 576] = 0x3
169642: 95 17 f8 01              a0 = sp + 0x1f8
169646: 95 18 28 02              a1 = sp + 0x228
169650: 50 20 b6 09 95 b8 fd     ra = 2486, jump @1491
      :                          @11771 [@dyn 1243]
169657: 82 16 00 02              s1 = u64 [sp + 0x200]
169661: 82 1b 08 02              a4 = u64 [sp + 0x208]
169665: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
169669: 7b 17 60                 u64 [sp + 0x60] = a0
169672: 33 07 02                 a0 = 0x2
169675: 33 08                    a1 = 0
169677: 33 09                    a2 = 0
169679: 64 6a                    a3 = s1
169681: 33 00 b8 09              ra = 0x9b8
169685: 0a 64                    ecalli 100 // 'log'
169687: 01                       fallthrough
      :                          @11772 [@dyn 1244]
169688: 82 1c 60                 a5 = u64 [sp + 0x60]
169691: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
169696: 53 38 00 00 f0 25        jump @11778 if a1 <u 4293918720
      :                          @11773
169702: 33 07 b0 02 03           a0 = 0x302b0
169707: 95 77 00 00 10           a0 = a0 + 0x100000
169712: 01                       fallthrough
      :                          @11774
169713: 82 78                    a1 = u64 [a0]
169715: c9 87 09                 a2 = a0 - a1
169718: ab 69 0f                 jump @11778 if a2 != s1
      :                          @11775
169721: c9 c8 09                 a2 = a1 - a5
169724: 01                       fallthrough
      :                          @11776
169725: 82 7a                    a3 = u64 [a0]
169727: ab 8a f2                 jump @11774 if a3 != a1
      :                          @11777
169730: 7b 79                    u64 [a0] = a2
169732: 01                       fallthrough
      :                          @11778
169733: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
169737: 51 08 31                 jump @11785 if a1 == 0
      :                          @11779
169740: 56 38 00 00 02 2e        jump @11785 if a1 >u 131072
      :                          @11780
169746: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
169750: 97 88 03                 a1 = a1 << 0x3
169753: 33 09 b0 02 03           a2 = 0x302b0
169758: 95 99 00 00 10           a2 = a2 + 0x100000
169763: 01                       fallthrough
      :                          @11781
169764: 82 9a                    a3 = u64 [a2]
169766: c9 a9 0b                 a4 = a2 - a3
169769: ab 7b 11                 jump @11785 if a4 != a0
      :                          @11782
169772: c9 8a 0b                 a4 = a3 - a1
169775: 01                       fallthrough
      :                          @11783
169776: 82 9c                    a5 = u64 [a2]
169778: ab ac f2                 jump @11781 if a5 != a3
      :                          @11784
169781: 7b 9b                    u64 [a2] = a4
169783: 33 06                    s1 = 0
169785: 01                       fallthrough
      :                          @11785
169786: 82 18 10 01              a1 = u64 [sp + 0x110]
169790: 52 08 06                 jump @11787 if a1 != 0
      :                          @11786
169793: 28 aa 4a                 jump @12862
      :                          @11787
169796: 54 38 00 00 02 09        jump @11789 if a1 <=u 131072
      :                          @11788
169802: 28 a1 4a                 jump @12862
      :                          @11789
169805: 82 17 18 01              a0 = u64 [sp + 0x118]
169809: 97 88 03                 a1 = a1 << 0x3
169812: 33 09 b0 02 03           a2 = 0x302b0
169817: 95 99 00 00 10           a2 = a2 + 0x100000
169822: 01                       fallthrough
      :                          @11790
169823: 82 9a                    a3 = u64 [a2]
169825: c9 a9 0b                 a4 = a2 - a3
169828: aa 7b 06                 jump @11792 if a4 == a0
      :                          @11791
169831: 28 84 4a                 jump @12862
      :                          @11792
169834: c9 8a 0b                 a4 = a3 - a1
169837: 01                       fallthrough
      :                          @11793
169838: 82 9c                    a5 = u64 [a2]
169840: ab ac ef                 jump @11790 if a5 != a3
      :                          @11794
169843: 7b 9b                    u64 [a2] = a4
169845: 33 06                    s1 = 0
169847: 01                       fallthrough
      :                          @11795
169848: ab ac e7                 jump @11790 if a5 != a3
      :                          @11796
169851: 28 70 4a                 jump @12862
      :                          @11797 [@dyn 1245]
169854: 3a 08 70 02 03           a1 = u64 [0x30270]
169859: 97 89 0d                 a2 = a1 << 0xd
169862: d3 98 08                 a1 = a1 ^ a2
169865: 98 89 07                 a2 = a1 >> 0x7
169868: d3 98 08                 a1 = a1 ^ a2
169871: 97 89 11                 a2 = a1 << 0x11
169874: d3 89 09                 a2 = a2 ^ a1
169877: 97 8a 02                 a3 = a1 << 0x2
169880: 3e 09 70 02 03           u64 [0x30270] = a2
169885: 3a 09 70 02 03           a2 = u64 [0x30270]
169890: c8 a8 08                 a1 = a1 + a3
169893: 84 88 07                 a1 = a1 & 0x7
169896: 97 9a 0d                 a3 = a2 << 0xd
169899: d3 a9 09                 a2 = a2 ^ a3
169902: 98 9a 07                 a3 = a2 >> 0x7
169905: d3 a9 09                 a2 = a2 ^ a3
169908: 97 9a 11                 a3 = a2 << 0x11
169911: d3 9a 0a                 a3 = a3 ^ a2
169914: 97 9b 02                 a4 = a2 << 0x2
169917: c8 b9 09                 a2 = a2 + a4
169920: 3e 0a 70 02 03           u64 [0x30270] = a3
169925: 84 96 07                 s1 = a2 & 0x7
169928: 95 17 a0 01              a0 = sp + 0x1a0
169932: 50 20 bc 09 65 db fd     ra = 2492, jump @2147
      :                          @11798 [@dyn 1246]
169939: 95 17 b8 01              a0 = sp + 0x1b8
169943: 64 68                    a1 = s1
169945: 50 20 be 09 58 db fd     ra = 2494, jump @2147
      :                          @11799 [@dyn 1247]
169952: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
169956: 7b 18 60                 u64 [sp + 0x60] = a1
169959: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
169963: 7b 19 58                 u64 [sp + 0x58] = a2
169966: 95 17 d0 01              a0 = sp + 0x1d0
169970: 50 20 c0 09 d6 69        ra = 2496, jump @13509
      :                          @11800 [@dyn 1248]
169976: 82 16 c0 01              s1 = u64 [sp + 0x1c0]
169980: 82 19 c8 01              a2 = u64 [sp + 0x1c8]
169984: 7b 19 50                 u64 [sp + 0x50] = a2
169987: 95 17 f8 01              a0 = sp + 0x1f8
169991: 64 68                    a1 = s1
169993: 50 20 c2 09 bf 69        ra = 2498, jump @13509
      :                          @11801 [@dyn 1249]
169999: 82 17 60                 a0 = u64 [sp + 0x60]
170002: 82 18 58                 a1 = u64 [sp + 0x58]
170005: 7b 16 58                 u64 [sp + 0x58] = s1
170008: 64 69                    a2 = s1
170010: 82 1a 50                 a3 = u64 [sp + 0x50]
170013: 50 20 c4 09 13 38 fe     ra = 2500, jump @3972
      :                          @11802 [@dyn 1250]
170020: 7b 17 00 01              u64 [sp + 0x100] = a0
170024: 95 17 d0 01              a0 = sp + 0x1d0
170028: 7b 17 80 02              u64 [sp + 0x280] = a0
170032: 33 07 48 02              a0 = 0x248
170036: 7b 17 88 02              u64 [sp + 0x288] = a0
170040: 95 18 f8 01              a1 = sp + 0x1f8
170044: 7b 18 90 02              u64 [sp + 0x290] = a1
170048: 7b 17 98 02              u64 [sp + 0x298] = a0
170052: 95 17 00 01              a0 = sp + 0x100
170056: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
170060: 33 07 94 0c              a0 = 0xc94
170064: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
170068: 33 07 f0 24 01           a0 = 0x124f0
170073: 7b 17 28 02              u64 [sp + 0x228] = a0
170077: 49 21 30 02 03           u64 [sp + 560] = 0x3
170082: 49 21 48 02              u64 [sp + 584] = 0
170086: 95 18 80 02              a1 = sp + 0x280
170090: 7b 18 38 02              u64 [sp + 0x238] = a1
170094: 49 21 40 02 03           u64 [sp + 576] = 0x3
170099: 95 17 10 01              a0 = sp + 0x110
170103: 95 18 28 02              a1 = sp + 0x228
170107: 50 20 c6 09 cc b6 fd     ra = 2502, jump @1491
      :                          @11803 [@dyn 1251]
170114: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
170118: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
170128: d4 78 09                 a2 = a1 | a0
170131: aa 79 06                 jump @11805 if a2 == a0
      :                          @11804
170134: 28 c7 58                 jump @13140
      :                          @11805
170137: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
170141: d4 78 09                 a2 = a1 | a0
170144: aa 79 06                 jump @11807 if a2 == a0
      :                          @11806
170147: 28 f1 58                 jump @13150
      :                          @11807
170150: 82 16 18 01              s1 = u64 [sp + 0x118]
170154: 82 1b 20 01              a4 = u64 [sp + 0x120]
170158: 82 17 10 01              a0 = u64 [sp + 0x110]
170162: 7b 17 50                 u64 [sp + 0x50] = a0
170165: 33 07 02                 a0 = 0x2
170168: 33 08                    a1 = 0
170170: 33 09                    a2 = 0
170172: 64 6a                    a3 = s1
170174: 33 00 c8 09              ra = 0x9c8
170178: 0a 64                    ecalli 100 // 'log'
170180: 01                       fallthrough
      :                          @11808 [@dyn 1252]
170181: 82 17 50                 a0 = u64 [sp + 0x50]
170184: 33 02 00 00 f0           t0 = 0xfffffffffff00000
170189: 33 03 ff ff ef           t1 = 0xffffffffffefffff
170194: c8 37 09                 a2 = a0 + t1
170197: ac 29 22                 jump @11814 if a2 <u t0
      :                          @11809
170200: 33 09 b0 02 03           a2 = 0x302b0
170205: 95 99 00 00 10           a2 = a2 + 0x100000
170210: 01                       fallthrough
      :                          @11810
170211: 82 9a                    a3 = u64 [a2]
170213: c9 a9 0b                 a4 = a2 - a3
170216: ab 6b 0f                 jump @11814 if a4 != s1
      :                          @11811
170219: c9 7a 0b                 a4 = a3 - a0
170222: 01                       fallthrough
      :                          @11812
170223: 82 9c                    a5 = u64 [a2]
170225: ab ac f2                 jump @11810 if a5 != a3
      :                          @11813
170228: 7b 9b                    u64 [a2] = a4
170230: 01                       fallthrough
      :                          @11814
170231: 82 19 b8 01              a2 = u64 [sp + 0x1b8]
170235: c8 39 08                 a1 = a2 + t1
170238: 82 17 58                 a0 = u64 [sp + 0x58]
170241: ac 28 22                 jump @11820 if a1 <u t0
      :                          @11815
170244: 33 08 b0 02 03           a1 = 0x302b0
170249: 95 88 00 00 10           a1 = a1 + 0x100000
170254: 01                       fallthrough
      :                          @11816
170255: 82 8a                    a3 = u64 [a1]
170257: c9 a8 0b                 a4 = a1 - a3
170260: ab 7b 0f                 jump @11820 if a4 != a0
      :                          @11817
170263: c9 9a 0b                 a4 = a3 - a2
170266: 01                       fallthrough
      :                          @11818
170267: 82 8c                    a5 = u64 [a1]
170269: ab ac f2                 jump @11816 if a5 != a3
      :                          @11819
170272: 7b 8b                    u64 [a1] = a4
170274: 01                       fallthrough
      :                          @11820
170275: 82 18 a0 01              a1 = u64 [sp + 0x1a0]
170279: c8 38 07                 a0 = a1 + t1
170282: 82 16 60                 s1 = u64 [sp + 0x60]
170285: 55 37 00 00 f0 09        jump @11822 if a0 >=u 4293918720
      :                          @11821
170291: 28 b8 48                 jump @12862
      :                          @11822
170294: 33 07 b0 02 03           a0 = 0x302b0
170299: 95 77 00 00 10           a0 = a0 + 0x100000
170304: 01                       fallthrough
      :                          @11823
170305: 82 79                    a2 = u64 [a0]
170307: c9 97 0a                 a3 = a0 - a2
170310: aa 6a 06                 jump @11825 if a3 == s1
      :                          @11824
170313: 28 a2 48                 jump @12862
      :                          @11825
170316: c9 89 0a                 a3 = a2 - a1
170319: 01                       fallthrough
      :                          @11826
170320: 82 7b                    a4 = u64 [a0]
170322: ab 9b ef                 jump @11823 if a4 != a2
      :                          @11827
170325: 7b 7a                    u64 [a0] = a3
170327: 33 0c                    a5 = 0
170329: 01                       fallthrough
      :                          @11828
170330: ab 9b e7                 jump @11823 if a4 != a2
      :                          @11829
170333: 28 8e 48                 jump @12862
      :                          @11830 [@dyn 1253]
170336: 3a 08 70 02 03           a1 = u64 [0x30270]
170341: 97 89 0d                 a2 = a1 << 0xd
170344: d3 98 08                 a1 = a1 ^ a2
170347: 98 89 07                 a2 = a1 >> 0x7
170350: d3 98 08                 a1 = a1 ^ a2
170353: 97 89 11                 a2 = a1 << 0x11
170356: d3 89 09                 a2 = a2 ^ a1
170359: 97 8a 02                 a3 = a1 << 0x2
170362: 3e 09 70 02 03           u64 [0x30270] = a2
170367: 3a 09 70 02 03           a2 = u64 [0x30270]
170372: c8 a8 08                 a1 = a1 + a3
170375: 84 88 07                 a1 = a1 & 0x7
170378: 97 9a 0d                 a3 = a2 << 0xd
170381: d3 a9 09                 a2 = a2 ^ a3
170384: 98 9a 07                 a3 = a2 >> 0x7
170387: d3 a9 09                 a2 = a2 ^ a3
170390: 97 9a 11                 a3 = a2 << 0x11
170393: d3 9a 0a                 a3 = a3 ^ a2
170396: 97 9b 02                 a4 = a2 << 0x2
170399: c8 b9 09                 a2 = a2 + a4
170402: 3e 0a 70 02 03           u64 [0x30270] = a3
170407: 84 96 07                 s1 = a2 & 0x7
170410: 95 17 a0 01              a0 = sp + 0x1a0
170414: 50 20 cc 09 83 d9 fd     ra = 2508, jump @2147
      :                          @11831 [@dyn 1254]
170421: 95 17 b8 01              a0 = sp + 0x1b8
170425: 64 68                    a1 = s1
170427: 50 20 ce 09 76 d9 fd     ra = 2510, jump @2147
      :                          @11832 [@dyn 1255]
170434: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
170438: 7b 18 60                 u64 [sp + 0x60] = a1
170441: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
170445: 7b 19 58                 u64 [sp + 0x58] = a2
170448: 95 17 d0 01              a0 = sp + 0x1d0
170452: 50 20 d0 09 f4 67        ra = 2512, jump @13509
      :                          @11833 [@dyn 1256]
170458: 82 16 c0 01              s1 = u64 [sp + 0x1c0]
170462: 82 19 c8 01              a2 = u64 [sp + 0x1c8]
170466: 7b 19 50                 u64 [sp + 0x50] = a2
170469: 95 17 f8 01              a0 = sp + 0x1f8
170473: 64 68                    a1 = s1
170475: 50 20 d2 09 dd 67        ra = 2514, jump @13509
      :                          @11834 [@dyn 1257]
170481: 82 17 60                 a0 = u64 [sp + 0x60]
170484: 82 18 58                 a1 = u64 [sp + 0x58]
170487: 7b 16 58                 u64 [sp + 0x58] = s1
170490: 64 69                    a2 = s1
170492: 82 1a 50                 a3 = u64 [sp + 0x50]
170495: 50 20 d4 09 66 39 fe     ra = 2516, jump @4051
      :                          @11835 [@dyn 1258]
170502: 7b 17 00 01              u64 [sp + 0x100] = a0
170506: 95 17 d0 01              a0 = sp + 0x1d0
170510: 7b 17 80 02              u64 [sp + 0x280] = a0
170514: 33 07 48 02              a0 = 0x248
170518: 7b 17 88 02              u64 [sp + 0x288] = a0
170522: 95 18 f8 01              a1 = sp + 0x1f8
170526: 7b 18 90 02              u64 [sp + 0x290] = a1
170530: 7b 17 98 02              u64 [sp + 0x298] = a0
170534: 95 17 00 01              a0 = sp + 0x100
170538: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
170542: 33 07 94 0c              a0 = 0xc94
170546: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
170550: 33 07 30 25 01           a0 = 0x12530
170555: 7b 17 28 02              u64 [sp + 0x228] = a0
170559: 49 21 30 02 03           u64 [sp + 560] = 0x3
170564: 49 21 48 02              u64 [sp + 584] = 0
170568: 95 18 80 02              a1 = sp + 0x280
170572: 7b 18 38 02              u64 [sp + 0x238] = a1
170576: 49 21 40 02 03           u64 [sp + 576] = 0x3
170581: 95 17 10 01              a0 = sp + 0x110
170585: 95 18 28 02              a1 = sp + 0x228
170589: 50 20 d6 09 ea b4 fd     ra = 2518, jump @1491
      :                          @11836 [@dyn 1259]
170596: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
170600: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
170610: d4 78 09                 a2 = a1 | a0
170613: aa 79 06                 jump @11838 if a2 == a0
      :                          @11837
170616: 28 53 57                 jump @13160
      :                          @11838
170619: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
170623: d4 78 09                 a2 = a1 | a0
170626: aa 79 06                 jump @11840 if a2 == a0
      :                          @11839
170629: 28 7d 57                 jump @13170
      :                          @11840
170632: 82 16 18 01              s1 = u64 [sp + 0x118]
170636: 82 1b 20 01              a4 = u64 [sp + 0x120]
170640: 82 17 10 01              a0 = u64 [sp + 0x110]
170644: 7b 17 50                 u64 [sp + 0x50] = a0
170647: 33 07 02                 a0 = 0x2
170650: 33 08                    a1 = 0
170652: 33 09                    a2 = 0
170654: 64 6a                    a3 = s1
170656: 33 00 d8 09              ra = 0x9d8
170660: 0a 64                    ecalli 100 // 'log'
170662: 01                       fallthrough
      :                          @11841 [@dyn 1260]
170663: 82 17 50                 a0 = u64 [sp + 0x50]
170666: 33 02 00 00 f0           t0 = 0xfffffffffff00000
170671: 33 03 ff ff ef           t1 = 0xffffffffffefffff
170676: c8 37 09                 a2 = a0 + t1
170679: ac 29 22                 jump @11847 if a2 <u t0
      :                          @11842
170682: 33 09 b0 02 03           a2 = 0x302b0
170687: 95 99 00 00 10           a2 = a2 + 0x100000
170692: 01                       fallthrough
      :                          @11843
170693: 82 9a                    a3 = u64 [a2]
170695: c9 a9 0b                 a4 = a2 - a3
170698: ab 6b 0f                 jump @11847 if a4 != s1
      :                          @11844
170701: c9 7a 0b                 a4 = a3 - a0
170704: 01                       fallthrough
      :                          @11845
170705: 82 9c                    a5 = u64 [a2]
170707: ab ac f2                 jump @11843 if a5 != a3
      :                          @11846
170710: 7b 9b                    u64 [a2] = a4
170712: 01                       fallthrough
      :                          @11847
170713: 82 19 b8 01              a2 = u64 [sp + 0x1b8]
170717: c8 39 08                 a1 = a2 + t1
170720: 82 17 58                 a0 = u64 [sp + 0x58]
170723: ac 28 22                 jump @11853 if a1 <u t0
      :                          @11848
170726: 33 08 b0 02 03           a1 = 0x302b0
170731: 95 88 00 00 10           a1 = a1 + 0x100000
170736: 01                       fallthrough
      :                          @11849
170737: 82 8a                    a3 = u64 [a1]
170739: c9 a8 0b                 a4 = a1 - a3
170742: ab 7b 0f                 jump @11853 if a4 != a0
      :                          @11850
170745: c9 9a 0b                 a4 = a3 - a2
170748: 01                       fallthrough
      :                          @11851
170749: 82 8c                    a5 = u64 [a1]
170751: ab ac f2                 jump @11849 if a5 != a3
      :                          @11852
170754: 7b 8b                    u64 [a1] = a4
170756: 01                       fallthrough
      :                          @11853
170757: 82 18 a0 01              a1 = u64 [sp + 0x1a0]
170761: c8 38 07                 a0 = a1 + t1
170764: 82 16 60                 s1 = u64 [sp + 0x60]
170767: 55 37 00 00 f0 09        jump @11855 if a0 >=u 4293918720
      :                          @11854
170773: 28 d6 46                 jump @12862
      :                          @11855
170776: 33 07 b0 02 03           a0 = 0x302b0
170781: 95 77 00 00 10           a0 = a0 + 0x100000
170786: 01                       fallthrough
      :                          @11856
170787: 82 79                    a2 = u64 [a0]
170789: c9 97 0a                 a3 = a0 - a2
170792: aa 6a 06                 jump @11858 if a3 == s1
      :                          @11857
170795: 28 c0 46                 jump @12862
      :                          @11858
170798: c9 89 0a                 a3 = a2 - a1
170801: 01                       fallthrough
      :                          @11859
170802: 82 7b                    a4 = u64 [a0]
170804: ab 9b ef                 jump @11856 if a4 != a2
      :                          @11860
170807: 7b 7a                    u64 [a0] = a3
170809: 33 0c                    a5 = 0
170811: 01                       fallthrough
      :                          @11861
170812: ab 9b e7                 jump @11856 if a4 != a2
      :                          @11862
170815: 28 ac 46                 jump @12862
      :                          @11863 [@dyn 1261]
170818: 3a 08 70 02 03           a1 = u64 [0x30270]
170823: 97 89 0d                 a2 = a1 << 0xd
170826: d3 98 08                 a1 = a1 ^ a2
170829: 98 89 07                 a2 = a1 >> 0x7
170832: d3 98 08                 a1 = a1 ^ a2
170835: 97 89 11                 a2 = a1 << 0x11
170838: 3a 0a 58 01 03           a3 = u64 [0x30158]
170843: d3 98 08                 a1 = a1 ^ a2
170846: 3a 09 b0 01 03           a2 = u64 [0x301b0]
170851: ca a8 0b                 a4 = a1 * a3
170854: 3e 08 70 02 03           u64 [0x30270] = a1
170859: d6 9b 08                 a1 = a4 mulhu a2
170862: 98 88 12                 a1 = a1 >> 0x12
170865: 33 0c 40 42 0f           a5 = 0xf4240
170870: ca c8 08                 a1 = a1 * a5
170873: c9 8b 0b                 a4 = a4 - a1
170876: 7b 1b a0 01              u64 [sp + 0x1a0] = a4
170880: 3a 08 70 02 03           a1 = u64 [0x30270]
170885: 97 8b 0d                 a4 = a1 << 0xd
170888: d3 b8 08                 a1 = a1 ^ a4
170891: 98 8b 07                 a4 = a1 >> 0x7
170894: d3 b8 08                 a1 = a1 ^ a4
170897: 97 8b 11                 a4 = a1 << 0x11
170900: d3 b8 08                 a1 = a1 ^ a4
170903: ca a8 0a                 a3 = a1 * a3
170906: 3e 08 70 02 03           u64 [0x30270] = a1
170911: d6 9a 07                 a0 = a3 mulhu a2
170914: 98 78 12                 a1 = a0 >> 0x12
170917: 82 17 a0 01              a0 = u64 [sp + 0x1a0]
170921: ca c8 08                 a1 = a1 * a5
170924: c9 8a 08                 a1 = a3 - a1
170927: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
170931: 52 08 06                 jump @11865 if a1 != 0
      :                          @11864
170934: 28 40 4c                 jump @12981
      :                          @11865
170937: 64 79                    a2 = a0
170939: 64 8b                    a4 = a1
170941: 01                       fallthrough
      :                          @11866
170942: 64 ba                    a3 = a4
170944: cd b9 0b                 a4 = a2 %u a4
170947: 64 a9                    a2 = a3
170949: 52 0b f9                 jump @11866 if a4 != 0
      :                          @11867
170952: 7b 1a 10 01              u64 [sp + 0x110] = a3
170956: 50 20 dc 09 3e ef fd     ra = 2524, jump @2402
      :                          @11868 [@dyn 1262]
170963: 28 2e 4c                 jump @12983
      :                          @11869 [@dyn 1263]
170966: 3a 08 70 02 03           a1 = u64 [0x30270]
170971: 97 89 0d                 a2 = a1 << 0xd
170974: d3 89 09                 a2 = a2 ^ a1
170977: 98 9a 07                 a3 = a2 >> 0x7
170980: 3a 08 58 01 03           a1 = u64 [0x30158]
170985: d3 a9 09                 a2 = a2 ^ a3
170988: 97 9a 11                 a3 = a2 << 0x11
170991: d3 a9 09                 a2 = a2 ^ a3
170994: ca 89 0a                 a3 = a2 * a1
170997: 3a 0b 60 01 03           a4 = u64 [0x30160]
171002: 3e 09 70 02 03           u64 [0x30270] = a2
171007: 98 a9 03                 a2 = a3 >> 0x3
171010: d6 b9 09                 a2 = a2 mulhu a4
171013: 98 99 04                 a2 = a2 >> 0x4
171016: 33 0c e8 03              a5 = 0x3e8
171020: ca c9 09                 a2 = a2 * a5
171023: c9 9a 0a                 a3 = a3 - a2
171026: 95 aa 01                 a3 = a3 + 0x1
171029: 7b 1a 00 01              u64 [sp + 0x100] = a3
171033: 3a 09 70 02 03           a2 = u64 [0x30270]
171038: 97 9a 0d                 a3 = a2 << 0xd
171041: d3 a9 09                 a2 = a2 ^ a3
171044: 98 9a 07                 a3 = a2 >> 0x7
171047: d3 a9 09                 a2 = a2 ^ a3
171050: 97 9a 11                 a3 = a2 << 0x11
171053: d3 a9 09                 a2 = a2 ^ a3
171056: ca 89 0a                 a3 = a2 * a1
171059: 3e 09 70 02 03           u64 [0x30270] = a2
171064: 98 a9 03                 a2 = a3 >> 0x3
171067: d6 b9 09                 a2 = a2 mulhu a4
171070: 98 99 04                 a2 = a2 >> 0x4
171073: ca c9 09                 a2 = a2 * a5
171076: c9 9a 0a                 a3 = a3 - a2
171079: 7b 1a a0 01              u64 [sp + 0x1a0] = a3
171083: 3a 09 70 02 03           a2 = u64 [0x30270]
171088: 97 9a 0d                 a3 = a2 << 0xd
171091: d3 a9 09                 a2 = a2 ^ a3
171094: 98 9a 07                 a3 = a2 >> 0x7
171097: d3 a9 09                 a2 = a2 ^ a3
171100: 97 9a 11                 a3 = a2 << 0x11
171103: d3 a9 09                 a2 = a2 ^ a3
171106: 3a 0a 78 01 03           a3 = u64 [0x30178]
171111: ca 89 08                 a1 = a2 * a1
171114: 3e 09 70 02 03           u64 [0x30270] = a2
171119: d6 a8 07                 a0 = a1 mulhu a3
171122: c9 78 09                 a2 = a1 - a0
171125: 98 99 01                 a2 = a2 >> 0x1
171128: c8 97 07                 a0 = a0 + a2
171131: 98 77 09                 a0 = a0 >> 0x9
171134: 96 77 e7 03              a0 = a0 * 0x3e7
171138: c9 78 09                 a2 = a1 - a0
171141: 82 1a a0 01              a3 = u64 [sp + 0x1a0]
171145: 82 17 00 01              a0 = u64 [sp + 0x100]
171149: 95 98 01                 a1 = a2 + 0x1
171152: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
171156: 8e 99                    a2 = a2 >u 0
171158: 52 0a 06                 jump @11871 if a3 != 0
      :                          @11870
171161: 28 d6 3a                 jump @12669
      :                          @11871
171164: 64 7b                    a4 = a0
171166: 28 0e                    jump @11874
      :                          @11872
171168: 98 aa 01                 a3 = a3 >> 0x1
171171: ca bb 0b                 a4 = a4 * a4
171174: 52 0a 06                 jump @11874 if a3 != 0
      :                          @11873
171177: 28 c6 3a                 jump @12669
      :                          @11874
171180: 84 ac 01                 a5 = a3 & 0x1
171183: cd 8b 0b                 a4 = a4 %u a1
171186: 51 0c ee                 jump @11872 if a5 == 0
      :                          @11875
171189: ca 9b 09                 a2 = a4 * a2
171192: cd 89 09                 a2 = a2 %u a1
171195: 28 e5                    jump @11872
      :                          @11876 [@dyn 1264]
171197: 3a 07 70 02 03           a0 = u64 [0x30270]
171202: 97 78 0d                 a1 = a0 << 0xd
171205: d3 87 07                 a0 = a0 ^ a1
171208: 98 78 07                 a1 = a0 >> 0x7
171211: d3 87 07                 a0 = a0 ^ a1
171214: 97 78 11                 a1 = a0 << 0x11
171217: d3 78 02                 t0 = a1 ^ a0
171220: 3e 02 70 02 03           u64 [0x30270] = t0
171225: 3a 08 70 02 03           a1 = u64 [0x30270]
171230: 3a 04 58 01 03           t2 = u64 [0x30158]
171235: 97 8a 0d                 a3 = a1 << 0xd
171238: d3 a8 08                 a1 = a1 ^ a3
171241: 98 8a 07                 a3 = a1 >> 0x7
171244: d3 a8 08                 a1 = a1 ^ a3
171247: 97 8a 11                 a3 = a1 << 0x11
171250: d3 a8 08                 a1 = a1 ^ a3
171253: ca 48 0a                 a3 = a1 * t2
171256: 3e 08 70 02 03           u64 [0x30270] = a1
171261: 3a 08 a0 01 03           a1 = u64 [0x301a0]
171266: 98 ab 01                 a4 = a3 >> 0x1
171269: 3a 0c 70 02 03           a5 = u64 [0x30270]
171274: d6 8b 0b                 a4 = a4 mulhu a1
171277: 98 bb 04                 a4 = a4 >> 0x4
171280: 97 c7 0d                 a0 = a5 << 0xd
171283: d3 c7 07                 a0 = a0 ^ a5
171286: 98 7c 07                 a5 = a0 >> 0x7
171289: d3 c7 07                 a0 = a0 ^ a5
171292: 97 7c 11                 a5 = a0 << 0x11
171295: d3 7c 03                 t1 = a5 ^ a0
171298: 3e 03 70 02 03           u64 [0x30270] = t1
171303: 3a 0c 70 02 03           a5 = u64 [0x30270]
171308: 96 bb 62                 a4 = a4 * 0x62
171311: c9 ba 0a                 a3 = a3 - a4
171314: 97 cb 0d                 a4 = a5 << 0xd
171317: d3 cb 0b                 a4 = a4 ^ a5
171320: 98 bc 07                 a5 = a4 >> 0x7
171323: d3 cb 0b                 a4 = a4 ^ a5
171326: 97 bc 11                 a5 = a4 << 0x11
171329: d3 cb 0b                 a4 = a4 ^ a5
171332: ca 4b 07                 a0 = a4 * t2
171335: 98 7c 01                 a5 = a0 >> 0x1
171338: d6 8c 0c                 a5 = a5 mulhu a1
171341: 95 a8 02                 a1 = a3 + 0x2
171344: 98 cc 04                 a5 = a5 >> 0x4
171347: 96 ca 62                 a3 = a5 * 0x62
171350: c9 a7 07                 a0 = a0 - a3
171353: 95 7a 02                 a3 = a0 + 0x2
171356: 3e 0b 70 02 03           u64 [0x30270] = a4
171361: 64 86                    s1 = a1
171363: 64 a9                    a2 = a3
171365: 01                       fallthrough
      :                          @11877
171366: 64 9c                    a5 = a2
171368: cd 96 09                 a2 = s1 %u a2
171371: 64 c6                    s1 = a5
171373: 52 09 f9                 jump @11877 if a2 != 0
      :                          @11878
171376: 49 11 60 ff ff ef        u64 [sp + 96] = 0xffffffffffefffff
171382: 7b 14 58                 u64 [sp + 0x58] = t2
171385: 52 1c 01 e7 00           jump @11888 if a5 != 1
      :                          @11879
171390: 3a 07 a8 01 03           a0 = u64 [0x301a8]
171395: ca 43 09                 a2 = t1 * t2
171398: ca 42 0b                 a4 = t0 * t2
171401: 98 9c 02                 a5 = a2 >> 0x2
171404: d6 7c 0c                 a5 = a5 mulhu a0
171407: 98 cc 02                 a5 = a5 >> 0x2
171410: 96 cc 64                 a5 = a5 * 0x64
171413: c9 c9 09                 a2 = a2 - a5
171416: 98 bc 02                 a5 = a4 >> 0x2
171419: d6 7c 07                 a0 = a5 mulhu a0
171422: 98 77 02                 a0 = a0 >> 0x2
171425: 96 77 64                 a0 = a0 * 0x64
171428: c9 7b 07                 a0 = a4 - a0
171431: 33 00 e2 09              ra = 0x9e2
171435: 95 11 c0                 sp = sp + 0xffffffffffffffc0
171438: 7b 10 38                 u64 [sp + 0x38] = ra
171441: 7b 15 30                 u64 [sp + 0x30] = s0
171444: 49 11 28 64              u64 [sp + 40] = 0x64
171448: 64 a5                    s0 = a3
171450: 7b 19                    u64 [sp] = a2
171452: 64 86                    s1 = a1
171454: 7b 17 08                 u64 [sp + 0x8] = a0
171457: 95 17 10                 a0 = sp + 0x10
171460: 64 a9                    a2 = a3
171462: 33 00 a4 02              ra = 0x2a4
171466: 28 62 ed fd              jump @2409
      :                          @11880 [@dyn 1265]
171470: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
171474: 95 17 d0 01              a0 = sp + 0x1d0
171478: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
171482: 33 07 94 0c              a0 = 0xc94
171486: 7b 17 00 02              u64 [sp + 0x200] = a0
171490: 33 07 10 26 01           a0 = 0x12610
171495: 7b 17 80 02              u64 [sp + 0x280] = a0
171499: 49 21 88 02 01           u64 [sp + 648] = 0x1
171504: 49 21 a0 02              u64 [sp + 672] = 0
171508: 95 17 f8 01              a0 = sp + 0x1f8
171512: 7b 17 90 02              u64 [sp + 0x290] = a0
171516: 49 21 98 02 01           u64 [sp + 664] = 0x1
171521: 95 17 28 02              a0 = sp + 0x228
171525: 95 18 80 02              a1 = sp + 0x280
171529: 50 20 e4 09 3e b1 fd     ra = 2532, jump @1491
      :                          @11881 [@dyn 1266]
171536: 82 16 30 02              s1 = u64 [sp + 0x230]
171540: 82 1b 38 02              a4 = u64 [sp + 0x238]
171544: 82 17 28 02              a0 = u64 [sp + 0x228]
171548: 7b 17 50                 u64 [sp + 0x50] = a0
171551: 33 07 02                 a0 = 0x2
171554: 33 08                    a1 = 0
171556: 33 09                    a2 = 0
171558: 64 6a                    a3 = s1
171560: 33 00 e6 09              ra = 0x9e6
171564: 0a 64                    ecalli 100 // 'log'
171566: 01                       fallthrough
      :                          @11882 [@dyn 1267]
171567: 82 1c 50                 a5 = u64 [sp + 0x50]
171570: 82 14 58                 t2 = u64 [sp + 0x58]
171573: 82 17 60                 a0 = u64 [sp + 0x60]
171576: c8 c7 07                 a0 = a0 + a5
171579: 53 37 00 00 f0 25        jump @11888 if a0 <u 4293918720
      :                          @11883
171585: 33 07 b0 02 03           a0 = 0x302b0
171590: 95 77 00 00 10           a0 = a0 + 0x100000
171595: 01                       fallthrough
      :                          @11884
171596: 82 78                    a1 = u64 [a0]
171598: c9 87 09                 a2 = a0 - a1
171601: ab 69 0f                 jump @11888 if a2 != s1
      :                          @11885
171604: c9 c8 09                 a2 = a1 - a5
171607: 01                       fallthrough
      :                          @11886
171608: 82 7a                    a3 = u64 [a0]
171610: ab 8a f2                 jump @11884 if a3 != a1
      :                          @11887
171613: 7b 79                    u64 [a0] = a2
171615: 01                       fallthrough
      :                          @11888
171616: 49 21 10 01 02           u64 [sp + 272] = 0x2
171621: 49 21 18 01 03           u64 [sp + 280] = 0x3
171626: 49 21 20 01 05           u64 [sp + 288] = 0x5
171631: 33 0c 70 02 03           a5 = 0x30270
171636: 3a 07 70 02 03           a0 = u64 [0x30270]
171641: 97 78 0d                 a1 = a0 << 0xd
171644: d3 87 07                 a0 = a0 ^ a1
171647: 98 78 07                 a1 = a0 >> 0x7
171650: d3 87 07                 a0 = a0 ^ a1
171653: 97 78 11                 a1 = a0 << 0x11
171656: d3 78 08                 a1 = a1 ^ a0
171659: 3e 08 70 02 03           u64 [0x30270] = a1
171664: 3a 08 70 02 03           a1 = u64 [0x30270]
171669: 84 77 01                 a0 = a0 & 0x1
171672: 97 89 0d                 a2 = a1 << 0xd
171675: d3 98 08                 a1 = a1 ^ a2
171678: 98 89 07                 a2 = a1 >> 0x7
171681: d3 98 08                 a1 = a1 ^ a2
171684: 97 89 11                 a2 = a1 << 0x11
171687: d3 98 08                 a1 = a1 ^ a2
171690: ca 48 09                 a2 = a1 * t2
171693: 3e 08 70 02 03           u64 [0x30270] = a1
171698: 14 08 ab aa aa aa aa aa aa aa a1 = 0xaaaaaaaaaaaaaaab
171708: d6 89 08                 a1 = a2 mulhu a1
171711: 98 8a 01                 a3 = a1 >> 0x1
171714: 84 88 fe                 a1 = a1 & 0xfffffffffffffffe
171717: 3a 0b 70 02 03           a4 = u64 [0x30270]
171722: c8 a8 08                 a1 = a1 + a3
171725: c9 89 09                 a2 = a2 - a1
171728: 97 b8 0d                 a1 = a4 << 0xd
171731: d3 b8 08                 a1 = a1 ^ a4
171734: 98 8a 07                 a3 = a1 >> 0x7
171737: d3 a8 08                 a1 = a1 ^ a3
171740: 97 8a 11                 a3 = a1 << 0x11
171743: d3 a8 08                 a1 = a1 ^ a3
171746: ca 48 0a                 a3 = a1 * t2
171749: 3e 08 70 02 03           u64 [0x30270] = a1
171754: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
171764: d6 8a 08                 a1 = a3 mulhu a1
171767: 98 8b 02                 a4 = a1 >> 0x2
171770: 84 88 fc                 a1 = a1 & 0xfffffffffffffffc
171773: c8 b8 08                 a1 = a1 + a4
171776: c9 8a 0a                 a3 = a3 - a1
171779: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
171783: 7b 19 d8 01              u64 [sp + 0x1d8] = a2
171787: 7b 1a e0 01              u64 [sp + 0x1e0] = a3
171791: 95 17 d0 01              a0 = sp + 0x1d0
171795: 95 18 10 01              a1 = sp + 0x110
171799: 50 20 e8 09 0b f0 fd     ra = 2536, jump @2519
      :                          @11889 [@dyn 1268]
171806: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
171810: 95 17 b8 01              a0 = sp + 0x1b8
171814: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
171818: 33 07 94 0c              a0 = 0xc94
171822: 7b 17 00 02              u64 [sp + 0x200] = a0
171826: 33 07 30 26 01           a0 = 0x12630
171831: 7b 17 80 02              u64 [sp + 0x280] = a0
171835: 49 21 88 02 01           u64 [sp + 648] = 0x1
171840: 49 21 a0 02              u64 [sp + 672] = 0
171844: 95 17 f8 01              a0 = sp + 0x1f8
171848: 7b 17 90 02              u64 [sp + 0x290] = a0
171852: 49 21 98 02 01           u64 [sp + 664] = 0x1
171857: 95 17 28 02              a0 = sp + 0x228
171861: 95 18 80 02              a1 = sp + 0x280
171865: 50 20 ea 09 ee af fd     ra = 2538, jump @1491
      :                          @11890 [@dyn 1269]
171872: 82 16 30 02              s1 = u64 [sp + 0x230]
171876: 82 1b 38 02              a4 = u64 [sp + 0x238]
171880: 82 17 28 02              a0 = u64 [sp + 0x228]
171884: 7b 17 50                 u64 [sp + 0x50] = a0
171887: 33 07 02                 a0 = 0x2
171890: 33 08                    a1 = 0
171892: 33 09                    a2 = 0
171894: 64 6a                    a3 = s1
171896: 33 00 ec 09              ra = 0x9ec
171900: 0a 64                    ecalli 100 // 'log'
171902: 01                       fallthrough
      :                          @11891 [@dyn 1270]
171903: 82 1c 50                 a5 = u64 [sp + 0x50]
171906: 82 17 60                 a0 = u64 [sp + 0x60]
171909: c8 c7 07                 a0 = a0 + a5
171912: 53 37 00 00 f0 25        jump @11897 if a0 <u 4293918720
      :                          @11892
171918: 33 07 b0 02 03           a0 = 0x302b0
171923: 95 77 00 00 10           a0 = a0 + 0x100000
171928: 01                       fallthrough
      :                          @11893
171929: 82 78                    a1 = u64 [a0]
171931: c9 87 09                 a2 = a0 - a1
171934: ab 69 0f                 jump @11897 if a2 != s1
      :                          @11894
171937: c9 c8 09                 a2 = a1 - a5
171940: 01                       fallthrough
      :                          @11895
171941: 82 7a                    a3 = u64 [a0]
171943: ab 8a f2                 jump @11893 if a3 != a1
      :                          @11896
171946: 7b 79                    u64 [a0] = a2
171948: 01                       fallthrough
      :                          @11897
171949: 3a 07 70 02 03           a0 = u64 [0x30270]
171954: 97 78 0d                 a1 = a0 << 0xd
171957: d3 87 07                 a0 = a0 ^ a1
171960: 98 78 07                 a1 = a0 >> 0x7
171963: d3 87 07                 a0 = a0 ^ a1
171966: 97 78 11                 a1 = a0 << 0x11
171969: d3 87 07                 a0 = a0 ^ a1
171972: 3a 08 b0 01 03           a1 = u64 [0x301b0]
171977: 82 19 58                 a2 = u64 [sp + 0x58]
171980: ca 97 09                 a2 = a0 * a2
171983: 3e 07 70 02 03           u64 [0x30270] = a0
171988: d6 89 07                 a0 = a2 mulhu a1
171991: 98 77 12                 a0 = a0 >> 0x12
171994: 96 77 40 42 0f           a0 = a0 * 0xf4240
171999: c9 79 09                 a2 = a2 - a0
172002: 7b 19 00 01              u64 [sp + 0x100] = a2
172006: 3a 07 70 02 03           a0 = u64 [0x30270]
172011: 97 78 0d                 a1 = a0 << 0xd
172014: d3 87 07                 a0 = a0 ^ a1
172017: 98 78 07                 a1 = a0 >> 0x7
172020: d3 78 08                 a1 = a1 ^ a0
172023: 97 87 11                 a0 = a1 << 0x11
172026: d3 87 07                 a0 = a0 ^ a1
172029: 3e 07 70 02 03           u64 [0x30270] = a0
172034: 82 17 00 01              a0 = u64 [sp + 0x100]
172038: 84 88 03                 a1 = a1 & 0x3
172041: 95 88 02                 a1 = a1 + 0x2
172044: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
172048: 33 00 ee 09              ra = 0x9ee
172052: 33 03                    t1 = 0
172054: 33 09 40                 a2 = 0x40
172057: c1 89 09                 i32 a2 = a2 /u a1
172060: 9b 99 01                 a2 = 0x1 << a2
172063: e6 97 0a                 a3 = minu(a0, a2)
172066: 95 a4 01                 t2 = a3 + 0x1
172069: 83 82 01                 i32 t0 = a1 + 0x1
172072: 33 0b ff                 a4 = 0xffffffffffffffff
172075: 28 ab eb fd              jump @2420
      :                          @11898 [@dyn 1271]
172079: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
172083: 95 17 00 01              a0 = sp + 0x100
172087: 7b 17 80 02              u64 [sp + 0x280] = a0
172091: 33 07 28 0c              a0 = 0xc28
172095: 7b 17 88 02              u64 [sp + 0x288] = a0
172099: 95 18 a0 01              a1 = sp + 0x1a0
172103: 7b 18 90 02              u64 [sp + 0x290] = a1
172107: 7b 17 98 02              u64 [sp + 0x298] = a0
172111: 95 18 b8 01              a1 = sp + 0x1b8
172115: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
172119: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
172123: 33 07 50 26 01           a0 = 0x12650
172128: 7b 17 28 02              u64 [sp + 0x228] = a0
172132: 49 21 30 02 03           u64 [sp + 560] = 0x3
172137: 49 21 48 02              u64 [sp + 584] = 0
172141: 95 18 80 02              a1 = sp + 0x280
172145: 7b 18 38 02              u64 [sp + 0x238] = a1
172149: 49 21 40 02 03           u64 [sp + 576] = 0x3
172154: 95 17 f8 01              a0 = sp + 0x1f8
172158: 95 18 28 02              a1 = sp + 0x228
172162: 50 20 f0 09 c5 ae fd     ra = 2544, jump @1491
      :                          @11899 [@dyn 1272]
172169: 82 16 00 02              s1 = u64 [sp + 0x200]
172173: 82 1b 08 02              a4 = u64 [sp + 0x208]
172177: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
172181: 7b 17 58                 u64 [sp + 0x58] = a0
172184: 33 07 02                 a0 = 0x2
172187: 33 08                    a1 = 0
172189: 33 09                    a2 = 0
172191: 64 6a                    a3 = s1
172193: 33 00 f2 09              ra = 0x9f2
172197: 0a 64                    ecalli 100 // 'log'
172199: 01                       fallthrough
      :                          @11900 [@dyn 1273]
172200: 82 1c 58                 a5 = u64 [sp + 0x58]
172203: 82 17 60                 a0 = u64 [sp + 0x60]
172206: c8 c7 07                 a0 = a0 + a5
172209: 55 37 00 00 f0 09        jump @11902 if a0 >=u 4293918720
      :                          @11901
172215: 28 34 41                 jump @12862
      :                          @11902
172218: 33 07 b0 02 03           a0 = 0x302b0
172223: 95 77 00 00 10           a0 = a0 + 0x100000
172228: 01                       fallthrough
      :                          @11903
172229: 82 78                    a1 = u64 [a0]
172231: c9 87 09                 a2 = a0 - a1
172234: aa 69 06                 jump @11905 if a2 == s1
      :                          @11904
172237: 28 1e 41                 jump @12862
      :                          @11905
172240: c9 c8 09                 a2 = a1 - a5
172243: 01                       fallthrough
      :                          @11906
172244: 82 7a                    a3 = u64 [a0]
172246: ab 8a ef                 jump @11903 if a3 != a1
      :                          @11907
172249: 7b 79                    u64 [a0] = a2
172251: 33 0b                    a4 = 0
172253: 01                       fallthrough
      :                          @11908
172254: ab 8a e7                 jump @11903 if a3 != a1
      :                          @11909
172257: 28 0a 41                 jump @12862
      :                          @11910 [@dyn 1274]
172260: 49 11 60 ff ff ef        u64 [sp + 96] = 0xffffffffffefffff
172266: 3a 07 70 02 03           a0 = u64 [0x30270]
172271: 3a 0a 58 01 03           a3 = u64 [0x30158]
172276: 97 78 0d                 a1 = a0 << 0xd
172279: d3 87 07                 a0 = a0 ^ a1
172282: 98 78 07                 a1 = a0 >> 0x7
172285: d3 87 07                 a0 = a0 ^ a1
172288: 97 78 11                 a1 = a0 << 0x11
172291: d3 87 07                 a0 = a0 ^ a1
172294: 7b 1a 58                 u64 [sp + 0x58] = a3
172297: ca a7 08                 a1 = a0 * a3
172300: 3e 07 70 02 03           u64 [0x30270] = a0
172305: 68 87                    a0 = clz a1
172307: 7a 17 a0 01              u32 [sp + 0x1a0] = a0
172311: 6a 87                    a0 = ctz a1
172313: 7a 17 b8 01              u32 [sp + 0x1b8] = a0
172317: 66 87                    a0 = cpop a1
172319: 7a 17 10 01              u32 [sp + 0x110] = a0
172323: 84 77 01                 a0 = a0 & 0x1
172326: 7a 17 d0 01              u32 [sp + 0x1d0] = a0
172330: 95 17 a0 01              a0 = sp + 0x1a0
172334: 7b 17 80 02              u64 [sp + 0x280] = a0
172338: 33 07 5e 0c              a0 = 0xc5e
172342: 7b 17 88 02              u64 [sp + 0x288] = a0
172346: 95 18 b8 01              a1 = sp + 0x1b8
172350: 7b 18 90 02              u64 [sp + 0x290] = a1
172354: 7b 17 98 02              u64 [sp + 0x298] = a0
172358: 95 18 10 01              a1 = sp + 0x110
172362: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
172366: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
172370: 95 18 d0 01              a1 = sp + 0x1d0
172374: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
172378: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
172382: 33 07 a0 26 01           a0 = 0x126a0
172387: 7b 17 28 02              u64 [sp + 0x228] = a0
172391: 49 21 30 02 04           u64 [sp + 560] = 0x4
172396: 49 21 48 02              u64 [sp + 584] = 0
172400: 95 18 80 02              a1 = sp + 0x280
172404: 7b 18 38 02              u64 [sp + 0x238] = a1
172408: 49 21 40 02 04           u64 [sp + 576] = 0x4
172413: 95 17 f8 01              a0 = sp + 0x1f8
172417: 95 18 28 02              a1 = sp + 0x228
172421: 50 20 f6 09 c2 ad fd     ra = 2550, jump @1491
      :                          @11911 [@dyn 1275]
172428: 82 16 00 02              s1 = u64 [sp + 0x200]
172432: 82 1b 08 02              a4 = u64 [sp + 0x208]
172436: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
172440: 7b 17 50                 u64 [sp + 0x50] = a0
172443: 33 07 02                 a0 = 0x2
172446: 33 08                    a1 = 0
172448: 33 09                    a2 = 0
172450: 64 6a                    a3 = s1
172452: 33 00 f8 09              ra = 0x9f8
172456: 0a 64                    ecalli 100 // 'log'
172458: 01                       fallthrough
      :                          @11912 [@dyn 1276]
172459: 82 1c 50                 a5 = u64 [sp + 0x50]
172462: 82 17 60                 a0 = u64 [sp + 0x60]
172465: c8 c7 07                 a0 = a0 + a5
172468: 53 37 00 00 f0 25        jump @11918 if a0 <u 4293918720
      :                          @11913
172474: 33 07 b0 02 03           a0 = 0x302b0
172479: 95 77 00 00 10           a0 = a0 + 0x100000
172484: 01                       fallthrough
      :                          @11914
172485: 82 78                    a1 = u64 [a0]
172487: c9 87 09                 a2 = a0 - a1
172490: ab 69 0f                 jump @11918 if a2 != s1
      :                          @11915
172493: c9 c8 09                 a2 = a1 - a5
172496: 01                       fallthrough
      :                          @11916
172497: 82 7a                    a3 = u64 [a0]
172499: ab 8a f2                 jump @11914 if a3 != a1
      :                          @11917
172502: 7b 79                    u64 [a0] = a2
172504: 01                       fallthrough
      :                          @11918
172505: 3a 07 70 02 03           a0 = u64 [0x30270]
172510: 97 78 0d                 a1 = a0 << 0xd
172513: d3 87 07                 a0 = a0 ^ a1
172516: 98 78 07                 a1 = a0 >> 0x7
172519: d3 87 07                 a0 = a0 ^ a1
172522: 97 78 11                 a1 = a0 << 0x11
172525: d3 87 07                 a0 = a0 ^ a1
172528: 82 18 58                 a1 = u64 [sp + 0x58]
172531: ca 87 0a                 a3 = a0 * a1
172534: 3e 07 70 02 03           u64 [0x30270] = a0
172539: 97 a8 20                 a1 = a3 << 0x20
172542: 98 88 20                 a1 = a1 >> 0x20
172545: 8b a9 01                 i32 a2 = a3 >> 0x1
172548: d3 89 07                 a0 = a2 ^ a1
172551: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
172555: 6f aa                    a3 = reverse a3
172557: 98 ab 24                 a4 = a3 >> 0x24
172560: 84 bb 0f 0f 0f 0f        a4 = a4 & 0xf0f0f0f
172566: 98 aa 1c                 a3 = a3 >> 0x1c
172569: 84 aa f0 f0 f0 f0        a3 = a3 & 0xfffffffff0f0f0f0
172575: 83 aa                    i32 a3 = a3 + 0
172577: d4 ba 0a                 a3 = a3 | a4
172580: 98 ab 02                 a4 = a3 >> 0x2
172583: 84 bb 33 33 33 33        a4 = a4 & 0x33333333
172589: 84 aa 33 33 33 33        a3 = a3 & 0x33333333
172595: 8a aa 02                 i32 a3 = a3 << 0x2
172598: d4 ba 0a                 a3 = a3 | a4
172601: 98 ab 01                 a4 = a3 >> 0x1
172604: 33 0c 55 55 55 55        a5 = 0x55555555
172610: d2 cb 0b                 a4 = a4 & a5
172613: d2 ca 0a                 a3 = a3 & a5
172616: 97 aa 01                 a3 = a3 << 0x1
172619: d4 ba 0a                 a3 = a3 | a4
172622: 7a 1a a0 01              u32 [sp + 0x1a0] = a3
172626: ab 89 06                 jump @11920 if a2 != a1
      :                          @11919
172629: 28 68 46                 jump @12993
      :                          @11920
172632: 64 78                    a1 = a0
172634: 01                       fallthrough
      :                          @11921
172635: 98 88 01                 a1 = a1 >> 0x1
172638: d3 87 07                 a0 = a0 ^ a1
172641: 52 08 fa                 jump @11921 if a1 != 0
      :                          @11922
172644: 28 5c 46                 jump @12994
      :                          @11923 [@dyn 1277]
172647: 95 17 28 02              a0 = sp + 0x228
172651: 95 16 28 02              s1 = sp + 0x228
172655: 33 00 fc 09              ra = 0x9fc
172659: 95 11 b8                 sp = sp + 0xffffffffffffffb8
172662: 7b 10 40                 u64 [sp + 0x40] = ra
172665: 7b 15 38                 u64 [sp + 0x38] = s0
172668: 7b 16 30                 u64 [sp + 0x30] = s1
172671: 33 09 b0 02 03           a2 = 0x302b0
172676: 33 08 00 00 10           a1 = 0x100000
172681: c8 89 09                 a2 = a2 + a1
172684: 28 49 ee fd              jump @2539
      :                          @11924 [@dyn 1278]
172688: 7b 16 d0 01              u64 [sp + 0x1d0] = s1
172692: 33 07 20 02              a0 = 0x220
172696: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
172700: 33 07 48 27 01           a0 = 0x12748
172705: 7b 17 80 02              u64 [sp + 0x280] = a0
172709: 49 21 88 02 01           u64 [sp + 648] = 0x1
172714: 49 21 a0 02              u64 [sp + 672] = 0
172718: 95 18 d0 01              a1 = sp + 0x1d0
172722: 7b 18 90 02              u64 [sp + 0x290] = a1
172726: 49 21 98 02 01           u64 [sp + 664] = 0x1
172731: 95 17 f8 01              a0 = sp + 0x1f8
172735: 95 18 80 02              a1 = sp + 0x280
172739: 50 20 fe 09 84 ac fd     ra = 2558, jump @1491
      :                          @11925 [@dyn 1279]
172746: 82 18 28 02              a1 = u64 [sp + 0x228]
172750: 51 08 2f                 jump @11932 if a1 == 0
      :                          @11926
172753: 56 38 00 00 02 2c        jump @11932 if a1 >u 131072
      :                          @11927
172759: 82 17 30 02              a0 = u64 [sp + 0x230]
172763: 97 88 03                 a1 = a1 << 0x3
172766: 33 09 b0 02 03           a2 = 0x302b0
172771: 95 99 00 00 10           a2 = a2 + 0x100000
172776: 01                       fallthrough
      :                          @11928
172777: 82 9a                    a3 = u64 [a2]
172779: c9 a9 0b                 a4 = a2 - a3
172782: ab 7b 0f                 jump @11932 if a4 != a0
      :                          @11929
172785: c9 8a 0b                 a4 = a3 - a1
172788: 01                       fallthrough
      :                          @11930
172789: 82 9c                    a5 = u64 [a2]
172791: ab ac f2                 jump @11928 if a5 != a3
      :                          @11931
172794: 7b 9b                    u64 [a2] = a4
172796: 01                       fallthrough
      :                          @11932
172797: 82 16 00 02              s1 = u64 [sp + 0x200]
172801: 82 1b 08 02              a4 = u64 [sp + 0x208]
172805: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
172809: 7b 17 60                 u64 [sp + 0x60] = a0
172812: 33 07 02                 a0 = 0x2
172815: 33 08                    a1 = 0
172817: 33 09                    a2 = 0
172819: 64 6a                    a3 = s1
172821: 33 00 00 0a              ra = 0xa00
172825: 0a 64                    ecalli 100 // 'log'
172827: 01                       fallthrough
      :                          @11933 [@dyn 1280]
172828: 82 1c 60                 a5 = u64 [sp + 0x60]
172831: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
172836: 55 38 00 00 f0 09        jump @11935 if a1 >=u 4293918720
      :                          @11934
172842: 28 c1 3e                 jump @12862
      :                          @11935
172845: 33 07 b0 02 03           a0 = 0x302b0
172850: 95 77 00 00 10           a0 = a0 + 0x100000
172855: 01                       fallthrough
      :                          @11936
172856: 82 78                    a1 = u64 [a0]
172858: c9 87 09                 a2 = a0 - a1
172861: aa 69 06                 jump @11938 if a2 == s1
      :                          @11937
172864: 28 ab 3e                 jump @12862
      :                          @11938
172867: c9 c8 09                 a2 = a1 - a5
172870: 01                       fallthrough
      :                          @11939
172871: 82 7a                    a3 = u64 [a0]
172873: ab 8a ef                 jump @11936 if a3 != a1
      :                          @11940
172876: 7b 79                    u64 [a0] = a2
172878: 33 0b                    a4 = 0
172880: 01                       fallthrough
      :                          @11941
172881: ab 8a e7                 jump @11936 if a3 != a1
      :                          @11942
172884: 28 97 3e                 jump @12862
      :                          @11943 [@dyn 1281]
172887: 3a 08 70 02 03           a1 = u64 [0x30270]
172892: 97 89 0d                 a2 = a1 << 0xd
172895: d3 98 08                 a1 = a1 ^ a2
172898: 98 89 07                 a2 = a1 >> 0x7
172901: d3 98 08                 a1 = a1 ^ a2
172904: 97 89 11                 a2 = a1 << 0x11
172907: d3 98 08                 a1 = a1 ^ a2
172910: 3a 09 58 01 03           a2 = u64 [0x30158]
172915: 3a 0a 60 01 03           a3 = u64 [0x30160]
172920: 3e 08 70 02 03           u64 [0x30270] = a1
172925: ca 98 07                 a0 = a1 * a2
172928: 98 78 03                 a1 = a0 >> 0x3
172931: d6 a8 08                 a1 = a1 mulhu a3
172934: 98 88 04                 a1 = a1 >> 0x4
172937: 33 09 e8 03              a2 = 0x3e8
172941: ca 98 08                 a1 = a1 * a2
172944: c9 87 07                 a0 = a0 - a1
172947: 7b 17 10 01              u64 [sp + 0x110] = a0
172951: 50 20 04 0a 4e ee fd     ra = 2564, jump @2559
      :                          @11944 [@dyn 1282]
172958: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
172962: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
172966: 95 17 10 01              a0 = sp + 0x110
172970: 7b 17 28 02              u64 [sp + 0x228] = a0
172974: 33 07 28 0c              a0 = 0xc28
172978: 7b 17 30 02              u64 [sp + 0x230] = a0
172982: 95 18 d0 01              a1 = sp + 0x1d0
172986: 7b 18 38 02              u64 [sp + 0x238] = a1
172990: 7b 17 40 02              u64 [sp + 0x240] = a0
172994: 33 07 20 11 01           a0 = 0x11120
172999: 7b 17 80 02              u64 [sp + 0x280] = a0
173003: 49 21 88 02 02           u64 [sp + 648] = 0x2
173008: 49 21 a0 02              u64 [sp + 672] = 0
173012: 95 18 28 02              a1 = sp + 0x228
173016: 7b 18 90 02              u64 [sp + 0x290] = a1
173020: 49 21 98 02 02           u64 [sp + 664] = 0x2
173025: 95 17 f8 01              a0 = sp + 0x1f8
173029: 95 18 80 02              a1 = sp + 0x280
173033: 50 20 06 0a 5e ab fd     ra = 2566, jump @1491
      :                          @11945 [@dyn 1283]
173040: 82 16 00 02              s1 = u64 [sp + 0x200]
173044: 82 1b 08 02              a4 = u64 [sp + 0x208]
173048: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
173052: 7b 17 60                 u64 [sp + 0x60] = a0
173055: 33 07 02                 a0 = 0x2
173058: 33 08                    a1 = 0
173060: 33 09                    a2 = 0
173062: 64 6a                    a3 = s1
173064: 33 00 08 0a              ra = 0xa08
173068: 0a 64                    ecalli 100 // 'log'
173070: 01                       fallthrough
      :                          @11946 [@dyn 1284]
173071: 82 1c 60                 a5 = u64 [sp + 0x60]
173074: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
173079: 55 38 00 00 f0 09        jump @11948 if a1 >=u 4293918720
      :                          @11947
173085: 28 ce 3d                 jump @12862
      :                          @11948
173088: 33 07 b0 02 03           a0 = 0x302b0
173093: 95 77 00 00 10           a0 = a0 + 0x100000
173098: 01                       fallthrough
      :                          @11949
173099: 82 78                    a1 = u64 [a0]
173101: c9 87 09                 a2 = a0 - a1
173104: aa 69 06                 jump @11951 if a2 == s1
      :                          @11950
173107: 28 b8 3d                 jump @12862
      :                          @11951
173110: c9 c8 09                 a2 = a1 - a5
173113: 01                       fallthrough
      :                          @11952
173114: 82 7a                    a3 = u64 [a0]
173116: ab 8a ef                 jump @11949 if a3 != a1
      :                          @11953
173119: 7b 79                    u64 [a0] = a2
173121: 33 0b                    a4 = 0
173123: 01                       fallthrough
      :                          @11954
173124: ab 8a e7                 jump @11949 if a3 != a1
      :                          @11955
173127: 28 a4 3d                 jump @12862
      :                          @11956 [@dyn 1285]
173130: 3a 08 70 02 03           a1 = u64 [0x30270]
173135: 3a 09 58 01 03           a2 = u64 [0x30158]
173140: 97 8a 0d                 a3 = a1 << 0xd
173143: d3 a8 08                 a1 = a1 ^ a3
173146: 98 8a 07                 a3 = a1 >> 0x7
173149: d3 a8 08                 a1 = a1 ^ a3
173152: 97 8a 11                 a3 = a1 << 0x11
173155: d3 a8 08                 a1 = a1 ^ a3
173158: ca 98 0a                 a3 = a1 * a2
173161: 3e 08 70 02 03           u64 [0x30270] = a1
173166: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
173176: d6 8a 08                 a1 = a3 mulhu a1
173179: 98 88 04                 a1 = a1 >> 0x4
173182: 96 88 14                 a1 = a1 * 0x14
173185: c9 8a 0a                 a3 = a3 - a1
173188: 7b 1a 00 01              u64 [sp + 0x100] = a3
173192: 3a 08 70 02 03           a1 = u64 [0x30270]
173197: 97 8a 0d                 a3 = a1 << 0xd
173200: d3 a8 08                 a1 = a1 ^ a3
173203: 98 8a 07                 a3 = a1 >> 0x7
173206: d3 a8 08                 a1 = a1 ^ a3
173209: 97 8a 11                 a3 = a1 << 0x11
173212: d3 8a 0a                 a3 = a3 ^ a1
173215: 3e 0a 70 02 03           u64 [0x30270] = a3
173220: 82 17 00 01              a0 = u64 [sp + 0x100]
173224: 95 72 01                 t0 = a0 + 0x1
173227: 52 02 06                 jump @11958 if t0 != 0
      :                          @11957
173230: 28 a4 4e                 jump @13226
      :                          @11958
173233: ca 9a 09                 a2 = a3 * a2
173236: cd 29 0a                 a3 = a2 %u t0
173239: 7b 1a a0 01              u64 [sp + 0x1a0] = a3
173243: 33 09 01                 a2 = 0x1
173246: 33 0b 01                 a4 = 0x1
173249: 51 07 1e                 jump @11963 if a0 == 0
      :                          @11959
173252: 33 0c 01                 a5 = 0x1
173255: 64 7b                    a4 = a0
173257: aa c7 12                 jump @11962 if a0 == a5
      :                          @11960
173260: 33 0b 01                 a4 = 0x1
173263: 01                       fallthrough
      :                          @11961
173264: 95 c6 01                 s1 = a5 + 0x1
173267: ca bc 0b                 a4 = a5 * a4
173270: 64 6c                    a5 = s1
173272: ab 67 f8                 jump @11961 if a0 != s1
      :                          @11962
173275: ca 7b 0b                 a4 = a4 * a0
173278: 01                       fallthrough
      :                          @11963
173279: c9 a7 0c                 a5 = a0 - a3
173282: e6 ca 0a                 a3 = minu(a3, a5)
173285: 7b 1b b8 01              u64 [sp + 0x1b8] = a4
173289: 51 0a 27                 jump @11966 if a3 == 0
      :                          @11964
173292: 33 09 01                 a2 = 0x1
173295: 33 0b 01                 a4 = 0x1
173298: 01                       fallthrough
      :                          @11965
173299: d8 ab 0c                 a5 = a4 <u a3
173302: 85 c6 01                 s1 = a5 ^ 0x1
173305: c9 b2 08                 a1 = t0 - a4
173308: c8 bc 0c                 a5 = a5 + a4
173311: ca 98 08                 a1 = a1 * a2
173314: d8 ca 09                 a2 = a3 <u a5
173317: d4 96 06                 s1 = s1 | a2
173320: cb b8 09                 a2 = a1 /u a4
173323: 64 cb                    a4 = a5
173325: 51 06 e6                 jump @11965 if s1 == 0
      :                          @11966
173328: 7b 19 10 01              u64 [sp + 0x110] = a2
173332: 50 20 0c 0a 17 ed fd     ra = 2572, jump @2563
      :                          @11967 [@dyn 1286]
173339: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
173343: 95 17 00 01              a0 = sp + 0x100
173347: 7b 17 80 02              u64 [sp + 0x280] = a0
173351: 33 08 28 0c              a1 = 0xc28
173355: 7b 18 88 02              u64 [sp + 0x288] = a1
173359: 95 19 b8 01              a2 = sp + 0x1b8
173363: 7b 19 90 02              u64 [sp + 0x290] = a2
173367: 7b 18 98 02              u64 [sp + 0x298] = a1
173371: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
173375: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
173379: 95 19 a0 01              a2 = sp + 0x1a0
173383: 7b 19 b0 02              u64 [sp + 0x2b0] = a2
173387: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
173391: 95 19 10 01              a2 = sp + 0x110
173395: 7b 19 c0 02              u64 [sp + 0x2c0] = a2
173399: 7b 18 c8 02              u64 [sp + 0x2c8] = a1
173403: 7b 17 d0 02              u64 [sp + 0x2d0] = a0
173407: 7b 18 d8 02              u64 [sp + 0x2d8] = a1
173411: 95 17 d0 01              a0 = sp + 0x1d0
173415: 7b 17 e0 02              u64 [sp + 0x2e0] = a0
173419: 7b 18 e8 02              u64 [sp + 0x2e8] = a1
173423: 33 07 78 27 01           a0 = 0x12778
173428: 7b 17 28 02              u64 [sp + 0x228] = a0
173432: 49 21 30 02 07           u64 [sp + 560] = 0x7
173437: 49 21 48 02              u64 [sp + 584] = 0
173441: 95 18 80 02              a1 = sp + 0x280
173445: 7b 18 38 02              u64 [sp + 0x238] = a1
173449: 49 21 40 02 07           u64 [sp + 576] = 0x7
173454: 95 17 f8 01              a0 = sp + 0x1f8
173458: 95 18 28 02              a1 = sp + 0x228
173462: 50 20 0e 0a b1 a9 fd     ra = 2574, jump @1491
      :                          @11968 [@dyn 1287]
173469: 82 16 00 02              s1 = u64 [sp + 0x200]
173473: 82 1b 08 02              a4 = u64 [sp + 0x208]
173477: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
173481: 7b 17 60                 u64 [sp + 0x60] = a0
173484: 33 07 02                 a0 = 0x2
173487: 33 08                    a1 = 0
173489: 33 09                    a2 = 0
173491: 64 6a                    a3 = s1
173493: 33 00 10 0a              ra = 0xa10
173497: 0a 64                    ecalli 100 // 'log'
173499: 01                       fallthrough
      :                          @11969 [@dyn 1288]
173500: 82 1c 60                 a5 = u64 [sp + 0x60]
173503: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
173508: 55 38 00 00 f0 09        jump @11971 if a1 >=u 4293918720
      :                          @11970
173514: 28 21 3c                 jump @12862
      :                          @11971
173517: 33 07 b0 02 03           a0 = 0x302b0
173522: 95 77 00 00 10           a0 = a0 + 0x100000
173527: 01                       fallthrough
      :                          @11972
173528: 82 78                    a1 = u64 [a0]
173530: c9 87 09                 a2 = a0 - a1
173533: aa 69 06                 jump @11974 if a2 == s1
      :                          @11973
173536: 28 0b 3c                 jump @12862
      :                          @11974
173539: c9 c8 09                 a2 = a1 - a5
173542: 01                       fallthrough
      :                          @11975
173543: 82 7a                    a3 = u64 [a0]
173545: ab 8a ef                 jump @11972 if a3 != a1
      :                          @11976
173548: 7b 79                    u64 [a0] = a2
173550: 33 0b                    a4 = 0
173552: 01                       fallthrough
      :                          @11977
173553: ab 8a e7                 jump @11972 if a3 != a1
      :                          @11978
173556: 28 f7 3b                 jump @12862
      :                          @11979 [@dyn 1289]
173559: 3a 07 70 02 03           a0 = u64 [0x30270]
173564: 3a 0a 58 01 03           a3 = u64 [0x30158]
173569: 97 78 0d                 a1 = a0 << 0xd
173572: d3 87 07                 a0 = a0 ^ a1
173575: 98 78 07                 a1 = a0 >> 0x7
173578: d3 87 07                 a0 = a0 ^ a1
173581: 97 78 11                 a1 = a0 << 0x11
173584: d3 87 07                 a0 = a0 ^ a1
173587: ca a7 08                 a1 = a0 * a3
173590: 3e 07 70 02 03           u64 [0x30270] = a0
173595: 7b 18 00 01              u64 [sp + 0x100] = a1
173599: 3a 07 70 02 03           a0 = u64 [0x30270]
173604: 97 78 0d                 a1 = a0 << 0xd
173607: d3 87 07                 a0 = a0 ^ a1
173610: 98 78 07                 a1 = a0 >> 0x7
173613: d3 87 07                 a0 = a0 ^ a1
173616: 97 78 11                 a1 = a0 << 0x11
173619: d3 87 07                 a0 = a0 ^ a1
173622: 3e 07 70 02 03           u64 [0x30270] = a0
173627: 82 18 00 01              a1 = u64 [sp + 0x100]
173631: 49 11 60 ff ff ef        u64 [sp + 96] = 0xffffffffffefffff
173637: 7b 1a 58                 u64 [sp + 0x58] = a3
173640: ca a7 07                 a0 = a0 * a3
173643: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
173647: 97 89 20                 a2 = a1 << 0x20
173650: 98 9a 20                 a3 = a2 >> 0x20
173653: 98 88 20                 a1 = a1 >> 0x20
173656: 97 7b 20                 a4 = a0 << 0x20
173659: 98 bc 20                 a5 = a4 >> 0x20
173662: 98 77 20                 a0 = a0 >> 0x20
173665: d6 b9 09                 a2 = a2 mulhu a4
173668: ca 78 0b                 a4 = a1 * a0
173671: c8 a8 08                 a1 = a1 + a3
173674: c8 c7 07                 a0 = a0 + a5
173677: d6 78 0a                 a3 = a1 mulhu a0
173680: ca 78 07                 a0 = a1 * a0
173683: c8 b9 08                 a1 = a2 + a4
173686: d8 98 0c                 a5 = a1 <u a2
173689: d8 87 06                 s1 = a0 <u a1
173692: bf ca 0a                 i32 a3 = a3 - a5
173695: bf 6a 0a                 i32 a3 = a3 - s1
173698: c9 87 07                 a0 = a0 - a1
173701: 97 aa 20                 a3 = a3 << 0x20
173704: 98 78 20                 a1 = a0 >> 0x20
173707: 97 77 20                 a0 = a0 << 0x20
173710: d4 b8 08                 a1 = a1 | a4
173713: d4 a8 08                 a1 = a1 | a3
173716: d4 97 07                 a0 = a0 | a2
173719: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
173723: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
173727: 95 17 00 01              a0 = sp + 0x100
173731: 7b 17 80 02              u64 [sp + 0x280] = a0
173735: 33 07 28 0c              a0 = 0xc28
173739: 7b 17 88 02              u64 [sp + 0x288] = a0
173743: 95 18 a0 01              a1 = sp + 0x1a0
173747: 7b 18 90 02              u64 [sp + 0x290] = a1
173751: 7b 17 98 02              u64 [sp + 0x298] = a0
173755: 95 17 d0 01              a0 = sp + 0x1d0
173759: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
173763: 33 07 74 0c              a0 = 0xc74
173767: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
173771: 33 07 f8 27 01           a0 = 0x127f8
173776: 7b 17 28 02              u64 [sp + 0x228] = a0
173780: 49 21 30 02 03           u64 [sp + 560] = 0x3
173785: 49 21 48 02              u64 [sp + 584] = 0
173789: 95 18 80 02              a1 = sp + 0x280
173793: 7b 18 38 02              u64 [sp + 0x238] = a1
173797: 49 21 40 02 03           u64 [sp + 576] = 0x3
173802: 95 17 f8 01              a0 = sp + 0x1f8
173806: 95 18 28 02              a1 = sp + 0x228
173810: 50 20 14 0a 55 a8 fd     ra = 2580, jump @1491
      :                          @11980 [@dyn 1290]
173817: 82 16 00 02              s1 = u64 [sp + 0x200]
173821: 82 1b 08 02              a4 = u64 [sp + 0x208]
173825: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
173829: 7b 17 50                 u64 [sp + 0x50] = a0
173832: 33 07 02                 a0 = 0x2
173835: 33 08                    a1 = 0
173837: 33 09                    a2 = 0
173839: 64 6a                    a3 = s1
173841: 33 00 16 0a              ra = 0xa16
173845: 0a 64                    ecalli 100 // 'log'
173847: 01                       fallthrough
      :                          @11981 [@dyn 1291]
173848: 82 1c 50                 a5 = u64 [sp + 0x50]
173851: 82 17 60                 a0 = u64 [sp + 0x60]
173854: c8 c7 07                 a0 = a0 + a5
173857: 53 37 00 00 f0 25        jump @11987 if a0 <u 4293918720
      :                          @11982
173863: 33 07 b0 02 03           a0 = 0x302b0
173868: 95 77 00 00 10           a0 = a0 + 0x100000
173873: 01                       fallthrough
      :                          @11983
173874: 82 78                    a1 = u64 [a0]
173876: c9 87 09                 a2 = a0 - a1
173879: ab 69 0f                 jump @11987 if a2 != s1
      :                          @11984
173882: c9 c8 09                 a2 = a1 - a5
173885: 01                       fallthrough
      :                          @11985
173886: 82 7a                    a3 = u64 [a0]
173888: ab 8a f2                 jump @11983 if a3 != a1
      :                          @11986
173891: 7b 79                    u64 [a0] = a2
173893: 01                       fallthrough
      :                          @11987
173894: 33 02 70 02 03           t0 = 0x30270
173899: 3a 07 70 02 03           a0 = u64 [0x30270]
173904: 97 78 0d                 a1 = a0 << 0xd
173907: d3 87 07                 a0 = a0 ^ a1
173910: 98 78 07                 a1 = a0 >> 0x7
173913: d3 87 07                 a0 = a0 ^ a1
173916: 97 78 11                 a1 = a0 << 0x11
173919: d3 87 07                 a0 = a0 ^ a1
173922: 3e 07 70 02 03           u64 [0x30270] = a0
173927: 3a 08 70 02 03           a1 = u64 [0x30270]
173932: 97 89 0d                 a2 = a1 << 0xd
173935: d3 98 08                 a1 = a1 ^ a2
173938: 98 89 07                 a2 = a1 >> 0x7
173941: d3 98 08                 a1 = a1 ^ a2
173944: 97 89 11                 a2 = a1 << 0x11
173947: d3 98 08                 a1 = a1 ^ a2
173950: 3e 08 70 02 03           u64 [0x30270] = a1
173955: 3a 09 70 02 03           a2 = u64 [0x30270]
173960: 82 1c 58                 a5 = u64 [sp + 0x58]
173963: ca c7 07                 a0 = a0 * a5
173966: 97 9a 0d                 a3 = a2 << 0xd
173969: d3 a9 09                 a2 = a2 ^ a3
173972: 98 9a 07                 a3 = a2 >> 0x7
173975: d3 a9 09                 a2 = a2 ^ a3
173978: 97 9a 11                 a3 = a2 << 0x11
173981: d3 a9 09                 a2 = a2 ^ a3
173984: 3e 09 70 02 03           u64 [0x30270] = a2
173989: 3a 0a 70 02 03           a3 = u64 [0x30270]
173994: ca c8 06                 s1 = a1 * a5
173997: ca c9 09                 a2 = a2 * a5
174000: 97 ab 0d                 a4 = a3 << 0xd
174003: d3 ba 0a                 a3 = a3 ^ a4
174006: 98 ab 07                 a4 = a3 >> 0x7
174009: d3 ba 0a                 a3 = a3 ^ a4
174012: 97 ab 11                 a4 = a3 << 0x11
174015: d3 ab 0b                 a4 = a4 ^ a3
174018: ca cb 0a                 a3 = a4 * a5
174021: 3e 0b 70 02 03           u64 [0x30270] = a4
174026: c8 97 0b                 a4 = a0 + a2
174029: d8 7b 0c                 a5 = a4 <u a0
174032: c8 6a 08                 a1 = a3 + s1
174035: c8 c8 08                 a1 = a1 + a5
174038: 7b 1b b8 01              u64 [sp + 0x1b8] = a4
174042: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
174046: c9 97 08                 a1 = a0 - a2
174049: d8 97 0b                 a4 = a0 <u a2
174052: c9 a6 0c                 a5 = s1 - a3
174055: c9 bc 0c                 a5 = a5 - a4
174058: 7b 18 10 01              u64 [sp + 0x110] = a1
174062: 7b 1c 18 01              u64 [sp + 0x118] = a5
174066: ca 79 0b                 a4 = a2 * a0
174069: d6 79 08                 a1 = a2 mulhu a0
174072: d6 7a 0c                 a5 = a3 mulhu a0
174075: ca 7a 07                 a0 = a3 * a0
174078: c8 78 08                 a1 = a1 + a0
174081: d8 78 07                 a0 = a1 <u a0
174084: c8 c7 07                 a0 = a0 + a5
174087: d6 69 0c                 a5 = a2 mulhu s1
174090: ca 69 09                 a2 = a2 * s1
174093: c8 89 09                 a2 = a2 + a1
174096: d8 89 08                 a1 = a2 <u a1
174099: c8 c8 08                 a1 = a1 + a5
174102: d6 6a 0c                 a5 = a3 mulhu s1
174105: ca 6a 0a                 a3 = a3 * s1
174108: c8 7a 0a                 a3 = a3 + a0
174111: d8 7a 07                 a0 = a3 <u a0
174114: c8 c7 07                 a0 = a0 + a5
174117: c8 a8 08                 a1 = a1 + a3
174120: d8 a8 0a                 a3 = a1 <u a3
174123: c8 a7 07                 a0 = a0 + a3
174126: 7b 17 10 02              u64 [sp + 0x210] = a0
174130: 7b 18 08 02              u64 [sp + 0x208] = a1
174134: 7b 19 00 02              u64 [sp + 0x200] = a2
174138: 7b 1b f8 01              u64 [sp + 0x1f8] = a4
174142: 95 17 b8 01              a0 = sp + 0x1b8
174146: 7b 17 80 02              u64 [sp + 0x280] = a0
174150: 33 07 8a 00              a0 = 0x8a
174154: 7b 17 88 02              u64 [sp + 0x288] = a0
174158: 95 18 10 01              a1 = sp + 0x110
174162: 7b 18 90 02              u64 [sp + 0x290] = a1
174166: 7b 17 98 02              u64 [sp + 0x298] = a0
174170: 95 17 f8 01              a0 = sp + 0x1f8
174174: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
174178: 33 07 7c                 a0 = 0x7c
174181: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
174185: 33 07 48 28 01           a0 = 0x12848
174190: 7b 17 28 02              u64 [sp + 0x228] = a0
174194: 49 21 30 02 03           u64 [sp + 560] = 0x3
174199: 49 21 48 02              u64 [sp + 584] = 0
174203: 95 18 80 02              a1 = sp + 0x280
174207: 7b 18 38 02              u64 [sp + 0x238] = a1
174211: 49 21 40 02 03           u64 [sp + 576] = 0x3
174216: 95 17 d0 01              a0 = sp + 0x1d0
174220: 95 18 28 02              a1 = sp + 0x228
174224: 50 20 18 0a b7 a6 fd     ra = 2584, jump @1491
      :                          @11988 [@dyn 1292]
174231: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
174235: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
174239: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
174243: 7b 17 58                 u64 [sp + 0x58] = a0
174246: 33 07 02                 a0 = 0x2
174249: 33 08                    a1 = 0
174251: 33 09                    a2 = 0
174253: 64 6a                    a3 = s1
174255: 33 00 1a 0a              ra = 0xa1a
174259: 0a 64                    ecalli 100 // 'log'
174261: 01                       fallthrough
      :                          @11989 [@dyn 1293]
174262: 82 1c 58                 a5 = u64 [sp + 0x58]
174265: 82 17 60                 a0 = u64 [sp + 0x60]
174268: c8 c7 07                 a0 = a0 + a5
174271: 55 37 00 00 f0 09        jump @11991 if a0 >=u 4293918720
      :                          @11990
174277: 28 26 39                 jump @12862
      :                          @11991
174280: 33 07 b0 02 03           a0 = 0x302b0
174285: 95 77 00 00 10           a0 = a0 + 0x100000
174290: 01                       fallthrough
      :                          @11992
174291: 82 78                    a1 = u64 [a0]
174293: c9 87 09                 a2 = a0 - a1
174296: aa 69 06                 jump @11994 if a2 == s1
      :                          @11993
174299: 28 10 39                 jump @12862
      :                          @11994
174302: c9 c8 09                 a2 = a1 - a5
174305: 01                       fallthrough
      :                          @11995
174306: 82 7a                    a3 = u64 [a0]
174308: ab 8a ef                 jump @11992 if a3 != a1
      :                          @11996
174311: 7b 79                    u64 [a0] = a2
174313: 33 0b                    a4 = 0
174315: 01                       fallthrough
      :                          @11997
174316: ab 8a e7                 jump @11992 if a3 != a1
      :                          @11998
174319: 28 fc 38                 jump @12862
      :                          @11999 [@dyn 1294]
174322: 3a 07 70 02 03           a0 = u64 [0x30270]
174327: 49 11 60 ff ff ef        u64 [sp + 96] = 0xffffffffffefffff
174333: 97 78 0d                 a1 = a0 << 0xd
174336: d3 87 07                 a0 = a0 ^ a1
174339: 98 78 07                 a1 = a0 >> 0x7
174342: d3 87 07                 a0 = a0 ^ a1
174345: 97 78 11                 a1 = a0 << 0x11
174348: d3 87 07                 a0 = a0 ^ a1
174351: 3e 07 70 02 03           u64 [0x30270] = a0
174356: 49 11 40 1d dd 6c 4f     u64 [sp + 64] = 0x4f6cdd1d
174363: 87 77 1d dd 6c 4f        i32 a0 = a0 * 0x4f6cdd1d
174369: 86 77 01                 a0 = a0 | 0x1
174372: 33 08 03                 a1 = 0x3
174375: e4 87 06                 s1 = maxu(a0, a1)
174378: 97 68 20                 a1 = s1 << 0x20
174381: 7b 18 50                 u64 [sp + 0x50] = a1
174384: 98 88 20                 a1 = a1 >> 0x20
174387: 14 09 00 00 00 00 01 00 00 00 a2 = 0x100000000
174397: 95 17 80 02              a0 = sp + 0x280
174401: 7b 18 58                 u64 [sp + 0x58] = a1
174404: 50 20 1e 0a e8 e1 fd     ra = 2590, jump @2409
      :                          @12000 [@dyn 1295]
174411: 82 17 88 02              a0 = u64 [sp + 0x288]
174415: 3a 08 70 02 03           a1 = u64 [0x30270]
174420: 97 89 0d                 a2 = a1 << 0xd
174423: d3 98 08                 a1 = a1 ^ a2
174426: 98 89 07                 a2 = a1 >> 0x7
174429: d3 98 08                 a1 = a1 ^ a2
174432: 97 89 11                 a2 = a1 << 0x11
174435: d3 98 08                 a1 = a1 ^ a2
174438: 3e 08 70 02 03           u64 [0x30270] = a1
174443: 82 19 40                 a2 = u64 [sp + 0x40]
174446: ca 98 08                 a1 = a1 * a2
174449: c3 68 08                 i32 a1 = a1 %u s1
174452: 7a 18 b8 01              u32 [sp + 0x1b8] = a1
174456: 97 88 20                 a1 = a1 << 0x20
174459: d6 88 08                 a1 = a1 mulhu a1
174462: ca 87 07                 a0 = a0 * a1
174465: 8d 77                    i32 a0 = -a0
174467: 97 77 20                 a0 = a0 << 0x20
174470: 82 19 50                 a2 = u64 [sp + 0x50]
174473: d6 97 07                 a0 = a0 mulhu a2
174476: c8 87 07                 a0 = a0 + a1
174479: 98 78 20                 a1 = a0 >> 0x20
174482: 99 77 20                 a0 = a0 >>a 0x20
174485: d8 67 07                 a0 = a0 <u s1
174488: 7b 16 50                 u64 [sp + 0x50] = s1
174491: 94 76                    s1 = 0 if a0 != 0
174493: bf 68 08                 i32 a1 = a1 - s1
174496: 7a 18 d0 01              u32 [sp + 0x1d0] = a1
174500: 95 17 b8 01              a0 = sp + 0x1b8
174504: 7b 17 80 02              u64 [sp + 0x280] = a0
174508: 33 08 5e 0c              a1 = 0xc5e
174512: 7b 18 88 02              u64 [sp + 0x288] = a1
174516: 7b 17 90 02              u64 [sp + 0x290] = a0
174520: 7b 18 98 02              u64 [sp + 0x298] = a1
174524: 95 17 d0 01              a0 = sp + 0x1d0
174528: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
174532: 7b 18 40                 u64 [sp + 0x40] = a1
174535: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
174539: 33 07 88 28 01           a0 = 0x12888
174544: 7b 17 28 02              u64 [sp + 0x228] = a0
174548: 49 21 30 02 03           u64 [sp + 560] = 0x3
174553: 49 21 48 02              u64 [sp + 584] = 0
174557: 95 18 80 02              a1 = sp + 0x280
174561: 7b 18 38 02              u64 [sp + 0x238] = a1
174565: 49 21 40 02 03           u64 [sp + 576] = 0x3
174570: 95 17 f8 01              a0 = sp + 0x1f8
174574: 95 18 28 02              a1 = sp + 0x228
174578: 50 20 20 0a 55 a5 fd     ra = 2592, jump @1491
      :                          @12001 [@dyn 1296]
174585: 82 16 00 02              s1 = u64 [sp + 0x200]
174589: 82 1b 08 02              a4 = u64 [sp + 0x208]
174593: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
174597: 7b 17 38                 u64 [sp + 0x38] = a0
174600: 33 07 02                 a0 = 0x2
174603: 33 08                    a1 = 0
174605: 33 09                    a2 = 0
174607: 64 6a                    a3 = s1
174609: 33 00 22 0a              ra = 0xa22
174613: 0a 64                    ecalli 100 // 'log'
174615: 01                       fallthrough
      :                          @12002 [@dyn 1297]
174616: 82 1c 38                 a5 = u64 [sp + 0x38]
174619: 82 17 60                 a0 = u64 [sp + 0x60]
174622: c8 c7 07                 a0 = a0 + a5
174625: 53 37 00 00 f0 25        jump @12008 if a0 <u 4293918720
      :                          @12003
174631: 33 07 b0 02 03           a0 = 0x302b0
174636: 95 77 00 00 10           a0 = a0 + 0x100000
174641: 01                       fallthrough
      :                          @12004
174642: 82 78                    a1 = u64 [a0]
174644: c9 87 09                 a2 = a0 - a1
174647: ab 69 0f                 jump @12008 if a2 != s1
      :                          @12005
174650: c9 c8 09                 a2 = a1 - a5
174653: 01                       fallthrough
      :                          @12006
174654: 82 7a                    a3 = u64 [a0]
174656: ab 8a f2                 jump @12004 if a3 != a1
      :                          @12007
174659: 7b 79                    u64 [a0] = a2
174661: 01                       fallthrough
      :                          @12008
174662: 81 17 b8 01              a0 = i32 [sp + 0x1b8]
174666: 7b 17 38                 u64 [sp + 0x38] = a0
174669: 33 08 01                 a1 = 0x1
174672: 33 07                    a0 = 0
174674: 82 16 58                 s1 = u64 [sp + 0x58]
174677: 64 69                    a2 = s1
174679: 50 20 24 0a 24 5f        ra = 2596, jump @13631
      :                          @12009 [@dyn 1298]
174685: 82 19 50                 a2 = u64 [sp + 0x50]
174688: 82 1a 38                 a3 = u64 [sp + 0x38]
174691: d8 9a 08                 a1 = a3 <u a2
174694: 94 89                    a2 = 0 if a1 != 0
174696: bf 9a 08                 i32 a1 = a3 - a2
174699: 7a 18 10 01              u32 [sp + 0x110] = a1
174703: 3a 08 70 02 03           a1 = u64 [0x30270]
174708: 97 89 0d                 a2 = a1 << 0xd
174711: d3 98 08                 a1 = a1 ^ a2
174714: 98 89 07                 a2 = a1 >> 0x7
174717: 3a 0a 58 01 03           a3 = u64 [0x30158]
174722: d3 98 08                 a1 = a1 ^ a2
174725: 97 89 11                 a2 = a1 << 0x11
174728: d3 98 08                 a1 = a1 ^ a2
174731: ca a8 09                 a2 = a1 * a3
174734: 3e 08 70 02 03           u64 [0x30270] = a1
174739: d6 97 07                 a0 = a0 mulhu a2
174742: ca 67 07                 a0 = a0 * s1
174745: c9 79 09                 a2 = a2 - a0
174748: d8 69 07                 a0 = a2 <u s1
174751: 94 76                    s1 = 0 if a0 != 0
174753: bf 69 07                 i32 a0 = a2 - s1
174756: 7a 17 d0 01              u32 [sp + 0x1d0] = a0
174760: 95 17 10 01              a0 = sp + 0x110
174764: 7b 17 28 02              u64 [sp + 0x228] = a0
174768: 82 17 40                 a0 = u64 [sp + 0x40]
174771: 7b 17 30 02              u64 [sp + 0x230] = a0
174775: 95 18 d0 01              a1 = sp + 0x1d0
174779: 7b 18 38 02              u64 [sp + 0x238] = a1
174783: 7b 17 40 02              u64 [sp + 0x240] = a0
174787: 33 07 c8 28 01           a0 = 0x128c8
174792: 7b 17 80 02              u64 [sp + 0x280] = a0
174796: 49 21 88 02 02           u64 [sp + 648] = 0x2
174801: 49 21 a0 02              u64 [sp + 672] = 0
174805: 95 17 28 02              a0 = sp + 0x228
174809: 7b 17 90 02              u64 [sp + 0x290] = a0
174813: 49 21 98 02 02           u64 [sp + 664] = 0x2
174818: 95 17 f8 01              a0 = sp + 0x1f8
174822: 95 18 80 02              a1 = sp + 0x280
174826: 50 20 26 0a 5d a4 fd     ra = 2598, jump @1491
      :                          @12010 [@dyn 1299]
174833: 82 16 00 02              s1 = u64 [sp + 0x200]
174837: 82 1b 08 02              a4 = u64 [sp + 0x208]
174841: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
174845: 7b 17 58                 u64 [sp + 0x58] = a0
174848: 33 07 02                 a0 = 0x2
174851: 33 08                    a1 = 0
174853: 33 09                    a2 = 0
174855: 64 6a                    a3 = s1
174857: 33 00 28 0a              ra = 0xa28
174861: 0a 64                    ecalli 100 // 'log'
174863: 01                       fallthrough
      :                          @12011 [@dyn 1300]
174864: 82 1c 58                 a5 = u64 [sp + 0x58]
174867: 82 17 60                 a0 = u64 [sp + 0x60]
174870: c8 c7 07                 a0 = a0 + a5
174873: 55 37 00 00 f0 09        jump @12013 if a0 >=u 4293918720
      :                          @12012
174879: 28 cc 36                 jump @12862
      :                          @12013
174882: 33 07 b0 02 03           a0 = 0x302b0
174887: 95 77 00 00 10           a0 = a0 + 0x100000
174892: 01                       fallthrough
      :                          @12014
174893: 82 78                    a1 = u64 [a0]
174895: c9 87 09                 a2 = a0 - a1
174898: aa 69 06                 jump @12016 if a2 == s1
      :                          @12015
174901: 28 b6 36                 jump @12862
      :                          @12016
174904: c9 c8 09                 a2 = a1 - a5
174907: 01                       fallthrough
      :                          @12017
174908: 82 7a                    a3 = u64 [a0]
174910: ab 8a ef                 jump @12014 if a3 != a1
      :                          @12018
174913: 7b 79                    u64 [a0] = a2
174915: 33 0b                    a4 = 0
174917: 01                       fallthrough
      :                          @12019
174918: ab 8a e7                 jump @12014 if a3 != a1
      :                          @12020
174921: 28 a2 36                 jump @12862
      :                          @12021 [@dyn 1301]
174924: 49 21 60 02              u64 [sp + 608] = 0
174928: 49 21 58 02              u64 [sp + 600] = 0
174932: 49 21 50 02              u64 [sp + 592] = 0
174936: 49 21 48 02              u64 [sp + 584] = 0
174940: 49 21 40 02              u64 [sp + 576] = 0
174944: 49 21 38 02              u64 [sp + 568] = 0
174948: 49 21 30 02              u64 [sp + 560] = 0
174952: 49 21 28 02              u64 [sp + 552] = 0
174956: 3a 08 70 02 03           a1 = u64 [0x30270]
174961: 97 89 0d                 a2 = a1 << 0xd
174964: d3 89 09                 a2 = a2 ^ a1
174967: 98 9a 07                 a3 = a2 >> 0x7
174970: 3a 08 58 01 03           a1 = u64 [0x30158]
174975: d3 a9 09                 a2 = a2 ^ a3
174978: 97 9a 11                 a3 = a2 << 0x11
174981: d3 a9 09                 a2 = a2 ^ a3
174984: ca 89 0a                 a3 = a2 * a1
174987: 3e 09 70 02 03           u64 [0x30270] = a2
174992: 14 09 f1 f0 f0 f0 f0 f0 f0 f0 a2 = 0xf0f0f0f0f0f0f0f1
175002: d6 9a 0b                 a4 = a3 mulhu a2
175005: 98 bc 04                 a5 = a4 >> 0x4
175008: 84 bb f0                 a4 = a4 & 0xfffffffffffffff0
175011: c8 cb 0b                 a4 = a4 + a5
175014: c9 ba 0a                 a3 = a3 - a4
175017: 7b 1a 28 02              u64 [sp + 0x228] = a3
175021: 3a 0a 70 02 03           a3 = u64 [0x30270]
175026: 97 ab 0d                 a4 = a3 << 0xd
175029: d3 ba 0a                 a3 = a3 ^ a4
175032: 98 ab 07                 a4 = a3 >> 0x7
175035: d3 ba 0a                 a3 = a3 ^ a4
175038: 97 ab 11                 a4 = a3 << 0x11
175041: d3 ba 0a                 a3 = a3 ^ a4
175044: ca 8a 0b                 a4 = a3 * a1
175047: 3e 0a 70 02 03           u64 [0x30270] = a3
175052: d6 9b 0a                 a3 = a4 mulhu a2
175055: 98 ac 04                 a5 = a3 >> 0x4
175058: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175061: c8 ca 0a                 a3 = a3 + a5
175064: c9 ab 0b                 a4 = a4 - a3
175067: 7b 1b 30 02              u64 [sp + 0x230] = a4
175071: 3a 0a 70 02 03           a3 = u64 [0x30270]
175076: 97 ab 0d                 a4 = a3 << 0xd
175079: d3 ba 0a                 a3 = a3 ^ a4
175082: 98 ab 07                 a4 = a3 >> 0x7
175085: d3 ba 0a                 a3 = a3 ^ a4
175088: 97 ab 11                 a4 = a3 << 0x11
175091: d3 ba 0a                 a3 = a3 ^ a4
175094: ca 8a 0b                 a4 = a3 * a1
175097: 3e 0a 70 02 03           u64 [0x30270] = a3
175102: d6 9b 0a                 a3 = a4 mulhu a2
175105: 98 ac 04                 a5 = a3 >> 0x4
175108: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175111: c8 ca 0a                 a3 = a3 + a5
175114: c9 ab 0b                 a4 = a4 - a3
175117: 7b 1b 38 02              u64 [sp + 0x238] = a4
175121: 3a 0a 70 02 03           a3 = u64 [0x30270]
175126: 97 ab 0d                 a4 = a3 << 0xd
175129: d3 ba 0a                 a3 = a3 ^ a4
175132: 98 ab 07                 a4 = a3 >> 0x7
175135: d3 ba 0a                 a3 = a3 ^ a4
175138: 97 ab 11                 a4 = a3 << 0x11
175141: d3 ba 0a                 a3 = a3 ^ a4
175144: ca 8a 0b                 a4 = a3 * a1
175147: 3e 0a 70 02 03           u64 [0x30270] = a3
175152: d6 9b 0a                 a3 = a4 mulhu a2
175155: 98 ac 04                 a5 = a3 >> 0x4
175158: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175161: c8 ca 0a                 a3 = a3 + a5
175164: c9 ab 0b                 a4 = a4 - a3
175167: 7b 1b 40 02              u64 [sp + 0x240] = a4
175171: 3a 0a 70 02 03           a3 = u64 [0x30270]
175176: 97 ab 0d                 a4 = a3 << 0xd
175179: d3 ba 0a                 a3 = a3 ^ a4
175182: 98 ab 07                 a4 = a3 >> 0x7
175185: d3 ba 0a                 a3 = a3 ^ a4
175188: 97 ab 11                 a4 = a3 << 0x11
175191: d3 ba 0a                 a3 = a3 ^ a4
175194: ca 8a 0b                 a4 = a3 * a1
175197: 3e 0a 70 02 03           u64 [0x30270] = a3
175202: d6 9b 0a                 a3 = a4 mulhu a2
175205: 98 ac 04                 a5 = a3 >> 0x4
175208: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175211: c8 ca 0a                 a3 = a3 + a5
175214: c9 ab 0b                 a4 = a4 - a3
175217: 7b 1b 48 02              u64 [sp + 0x248] = a4
175221: 3a 0a 70 02 03           a3 = u64 [0x30270]
175226: 97 ab 0d                 a4 = a3 << 0xd
175229: d3 ba 0a                 a3 = a3 ^ a4
175232: 98 ab 07                 a4 = a3 >> 0x7
175235: d3 ba 0a                 a3 = a3 ^ a4
175238: 97 ab 11                 a4 = a3 << 0x11
175241: d3 ba 0a                 a3 = a3 ^ a4
175244: ca 8a 0b                 a4 = a3 * a1
175247: 3e 0a 70 02 03           u64 [0x30270] = a3
175252: d6 9b 0a                 a3 = a4 mulhu a2
175255: 98 ac 04                 a5 = a3 >> 0x4
175258: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175261: c8 ca 0a                 a3 = a3 + a5
175264: c9 ab 0b                 a4 = a4 - a3
175267: 7b 1b 50 02              u64 [sp + 0x250] = a4
175271: 3a 0a 70 02 03           a3 = u64 [0x30270]
175276: 97 ab 0d                 a4 = a3 << 0xd
175279: d3 ba 0a                 a3 = a3 ^ a4
175282: 98 ab 07                 a4 = a3 >> 0x7
175285: d3 ba 0a                 a3 = a3 ^ a4
175288: 97 ab 11                 a4 = a3 << 0x11
175291: d3 ba 0a                 a3 = a3 ^ a4
175294: ca 8a 0b                 a4 = a3 * a1
175297: 3e 0a 70 02 03           u64 [0x30270] = a3
175302: d6 9b 0a                 a3 = a4 mulhu a2
175305: 98 ac 04                 a5 = a3 >> 0x4
175308: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175311: c8 ca 0a                 a3 = a3 + a5
175314: c9 ab 0b                 a4 = a4 - a3
175317: 7b 1b 58 02              u64 [sp + 0x258] = a4
175321: 3a 0a 70 02 03           a3 = u64 [0x30270]
175326: 97 ab 0d                 a4 = a3 << 0xd
175329: d3 ba 0a                 a3 = a3 ^ a4
175332: 98 ab 07                 a4 = a3 >> 0x7
175335: d3 ba 0a                 a3 = a3 ^ a4
175338: 97 ab 11                 a4 = a3 << 0x11
175341: d3 ba 0a                 a3 = a3 ^ a4
175344: ca 8a 08                 a1 = a3 * a1
175347: 3e 0a 70 02 03           u64 [0x30270] = a3
175352: d6 98 07                 a0 = a1 mulhu a2
175355: 98 79 04                 a2 = a0 >> 0x4
175358: 84 77 f0                 a0 = a0 & 0xfffffffffffffff0
175361: c8 97 07                 a0 = a0 + a2
175364: c9 78 08                 a1 = a1 - a0
175367: 7b 18 60 02              u64 [sp + 0x260] = a1
175371: 95 17 80 02              a0 = sp + 0x280
175375: 95 18 28 02              a1 = sp + 0x228
175379: 95 16 28 02              s1 = sp + 0x228
175383: 33 00 2c 0a              ra = 0xa2c
175387: 95 11 60 ff              sp = sp + 0xffffffffffffff60
175391: 7b 10 98 00              u64 [sp + 0x98] = ra
175395: 7b 15 90 00              u64 [sp + 0x90] = s0
175399: 7b 16 88 00              u64 [sp + 0x88] = s1
175403: 7b 17                    u64 [sp] = a0
175405: 33 00                    ra = 0
175407: 82 87                    a0 = u64 [a1]
175409: 14 0a f1 f0 f0 f0 f0 f0 f0 f0 a3 = 0xf0f0f0f0f0f0f0f1
175419: d6 a7 09                 a2 = a0 mulhu a3
175422: 98 9b 04                 a4 = a2 >> 0x4
175425: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175428: c8 b9 09                 a2 = a2 + a4
175431: c9 97 07                 a0 = a0 - a2
175434: 82 89 08                 a2 = u64 [a1 + 0x8]
175437: 82 8c 10                 a5 = u64 [a1 + 0x10]
175440: 82 86 18                 s1 = u64 [a1 + 0x18]
175443: 82 85 20                 s0 = u64 [a1 + 0x20]
175446: 7b 17 40                 u64 [sp + 0x40] = a0
175449: 7b 19 38                 u64 [sp + 0x38] = a2
175452: c8 97 07                 a0 = a0 + a2
175455: d6 a7 09                 a2 = a0 mulhu a3
175458: 98 9b 04                 a4 = a2 >> 0x4
175461: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175464: c8 b9 09                 a2 = a2 + a4
175467: 7b 1c 30                 u64 [sp + 0x30] = a5
175470: c8 c7 07                 a0 = a0 + a5
175473: c9 97 07                 a0 = a0 - a2
175476: d6 a7 09                 a2 = a0 mulhu a3
175479: 98 9b 04                 a4 = a2 >> 0x4
175482: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175485: c8 b9 09                 a2 = a2 + a4
175488: 7b 16 28                 u64 [sp + 0x28] = s1
175491: c8 67 07                 a0 = a0 + s1
175494: c9 97 07                 a0 = a0 - a2
175497: d6 a7 09                 a2 = a0 mulhu a3
175500: 98 9b 04                 a4 = a2 >> 0x4
175503: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175506: c8 b9 09                 a2 = a2 + a4
175509: 82 8c 28                 a5 = u64 [a1 + 0x28]
175512: 7b 15 20                 u64 [sp + 0x20] = s0
175515: c8 57 07                 a0 = a0 + s0
175518: c9 97 07                 a0 = a0 - a2
175521: d6 a7 09                 a2 = a0 mulhu a3
175524: 98 9b 04                 a4 = a2 >> 0x4
175527: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175530: c8 b9 09                 a2 = a2 + a4
175533: 7b 1c 18                 u64 [sp + 0x18] = a5
175536: c8 c7 07                 a0 = a0 + a5
175539: c9 97 07                 a0 = a0 - a2
175542: 82 8c 30                 a5 = u64 [a1 + 0x30]
175545: d6 a7 09                 a2 = a0 mulhu a3
175548: 98 9b 04                 a4 = a2 >> 0x4
175551: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175554: c8 b9 09                 a2 = a2 + a4
175557: 7b 1c 10                 u64 [sp + 0x10] = a5
175560: c8 c7 07                 a0 = a0 + a5
175563: c9 97 07                 a0 = a0 - a2
175566: 7b 17 08                 u64 [sp + 0x8] = a0
175569: 49 21 80 00              u64 [sp + 128] = 0
175573: 49 11 78                 u64 [sp + 120] = 0
175576: 49 11 70                 u64 [sp + 112] = 0
175579: 49 11 68                 u64 [sp + 104] = 0
175582: 49 11 60                 u64 [sp + 96] = 0
175585: 49 11 58                 u64 [sp + 88] = 0
175588: 49 11 50                 u64 [sp + 80] = 0
175591: 49 11 48                 u64 [sp + 72] = 0
175594: 82 88 38                 a1 = u64 [a1 + 0x38]
175597: 28 d1 e4 fd              jump @2573
      :                          @12022 [@dyn 1302]
175601: 7b 16 d0 01              u64 [sp + 0x1d0] = s1
175605: 33 07 ec 00              a0 = 0xec
175609: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
175613: 95 18 80 02              a1 = sp + 0x280
175617: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
175621: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
175625: 33 07 e8 28 01           a0 = 0x128e8
175630: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
175634: 49 21 00 02 02           u64 [sp + 512] = 0x2
175639: 49 21 18 02              u64 [sp + 536] = 0
175643: 95 18 d0 01              a1 = sp + 0x1d0
175647: 7b 18 08 02              u64 [sp + 0x208] = a1
175651: 49 21 10 02 02           u64 [sp + 528] = 0x2
175656: 95 17 10 01              a0 = sp + 0x110
175660: 95 18 f8 01              a1 = sp + 0x1f8
175664: 50 20 2e 0a 17 a1 fd     ra = 2606, jump @1491
      :                          @12023 [@dyn 1303]
175671: 82 16 18 01              s1 = u64 [sp + 0x118]
175675: 82 1b 20 01              a4 = u64 [sp + 0x120]
175679: 82 17 10 01              a0 = u64 [sp + 0x110]
175683: 7b 17 60                 u64 [sp + 0x60] = a0
175686: 33 07 02                 a0 = 0x2
175689: 33 08                    a1 = 0
175691: 33 09                    a2 = 0
175693: 64 6a                    a3 = s1
175695: 33 00 30 0a              ra = 0xa30
175699: 0a 64                    ecalli 100 // 'log'
175701: 01                       fallthrough
      :                          @12024 [@dyn 1304]
175702: 82 1c 60                 a5 = u64 [sp + 0x60]
175705: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
175710: 55 38 00 00 f0 09        jump @12026 if a1 >=u 4293918720
      :                          @12025
175716: 28 87 33                 jump @12862
      :                          @12026
175719: 33 07 b0 02 03           a0 = 0x302b0
175724: 95 77 00 00 10           a0 = a0 + 0x100000
175729: 01                       fallthrough
      :                          @12027
175730: 82 78                    a1 = u64 [a0]
175732: c9 87 09                 a2 = a0 - a1
175735: aa 69 06                 jump @12029 if a2 == s1
      :                          @12028
175738: 28 71 33                 jump @12862
      :                          @12029
175741: c9 c8 09                 a2 = a1 - a5
175744: 01                       fallthrough
      :                          @12030
175745: 82 7a                    a3 = u64 [a0]
175747: ab 8a ef                 jump @12027 if a3 != a1
      :                          @12031
175750: 7b 79                    u64 [a0] = a2
175752: 33 0b                    a4 = 0
175754: 01                       fallthrough
      :                          @12032
175755: ab 8a e7                 jump @12027 if a3 != a1
      :                          @12033
175758: 28 5d 33                 jump @12862
      :                          @12034 [@dyn 1305]
175761: 3a 08 70 02 03           a1 = u64 [0x30270]
175766: 97 89 0d                 a2 = a1 << 0xd
175769: d3 98 08                 a1 = a1 ^ a2
175772: 98 89 07                 a2 = a1 >> 0x7
175775: d3 98 08                 a1 = a1 ^ a2
175778: 97 89 11                 a2 = a1 << 0x11
175781: d3 98 08                 a1 = a1 ^ a2
175784: 3a 09 58 01 03           a2 = u64 [0x30158]
175789: 3a 0a 98 01 03           a3 = u64 [0x30198]
175794: 3e 08 70 02 03           u64 [0x30270] = a1
175799: ca 98 07                 a0 = a1 * a2
175802: d6 a7 08                 a1 = a0 mulhu a3
175805: 98 88 0c                 a1 = a1 >> 0xc
175808: 96 88 41 0d 03           a1 = a1 * 0x30d41
175813: 95 77 60 79 fe           a0 = a0 + 0xfffffffffffe7960
175818: bf 87 07                 i32 a0 = a0 - a1
175821: 7a 17 b8 01              u32 [sp + 0x1b8] = a0
175825: 95 11 f0                 sp = sp + 0xfffffffffffffff0
175828: 7b 15 08                 u64 [sp + 0x8] = s0
175831: 7b 16                    u64 [sp] = s1
175833: 83 78                    i32 a1 = a0 + 0
175835: 89 88                    a1 = a1 <s 0
175837: 33 0a 0f c9 00           a3 = 0xc90f
175842: 93 8a f1 36 ff           a3 = 0xffffffffffff36f1 if a1 == 0
175847: 33 0b 8b 64 ff           a4 = 0xffffffffffff648b
175852: 93 8b 75 9b 00           a4 = 0x9b75 if a1 == 0
175857: be 7a 02                 i32 t0 = a3 + a0
175860: 99 b8 01                 a1 = a4 >>a 0x1
175863: 89 2a                    a3 = t0 <s 0
175865: 33 07 b1 76              a0 = 0x76b1
175869: 93 a7 4f 89              a0 = 0xffffffffffff894f if a3 == 0
175873: 9a 8c                    a5 = -a1
175875: db a8 0c                 a5 = a1 if a3 != 0
175878: 83 c3 75 9b 00           i32 t1 = a5 + 0x9b75
175883: 33 0c 46 b2              a5 = 0xffffffffffffb246
175887: 93 ac ba 4d              a5 = 0x4dba if a3 == 0
175891: c8 cb 0b                 a4 = a4 + a5
175894: be 72 04                 i32 t2 = t0 + a0
175897: 8b 38 02                 i32 a1 = t1 >> 0x2
175900: 99 ba 02                 a3 = a4 >>a 0x2
175903: 89 4c                    a5 = t2 <s 0
175905: 33 09 b6 3e              a2 = 0x3eb6
175909: 93 c9 4a c1              a2 = 0xffffffffffffc14a if a5 == 0
175913: 9a a7                    a0 = -a3
175915: db ca 07                 a0 = a3 if a5 != 0
175918: be 73 02                 i32 t0 = t1 + a0
175921: 9a 8a                    a3 = -a1
175923: da c8 0a                 a3 = a1 if a5 == 0
175926: c8 ba 0a                 a3 = a3 + a4
175929: be 94 04                 i32 t2 = t2 + a2
175932: 8b 29 03                 i32 a2 = t0 >> 0x3
175935: 99 ab 03                 a4 = a3 >>a 0x3
175938: 89 4c                    a5 = t2 <s 0
175940: 33 07 d9 1f              a0 = 0x1fd9
175944: 93 c7 27 e0              a0 = 0xffffffffffffe027 if a5 == 0
175948: 9a b8                    a1 = -a4
175950: db cb 08                 a1 = a4 if a5 != 0
175953: c8 28 08                 a1 = a1 + t0
175956: 9a 9b                    a4 = -a2
175958: da c9 0b                 a4 = a2 if a5 == 0
175961: be ba 0a                 i32 a3 = a3 + a4
175964: be 74 06                 i32 s1 = t2 + a0
175967: 8c 89 04                 i32 a2 = a1 >>a 0x4
175970: 8c ab 04                 i32 a4 = a3 >>a 0x4
175973: 89 6c                    a5 = s1 <s 0
175975: 33 02 00 f0              t0 = 0xfffffffffffff000
175979: 33 03 ff ef              t1 = 0xffffffffffffefff
175983: 33 04 00 10              t2 = 0x1000
175987: 33 05 01 10              s0 = 0x1001
175991: da c3 05                 s0 = t1 if a5 == 0
175994: 9a b7                    a0 = -a4
175996: db cb 07                 a0 = a4 if a5 != 0
175999: c8 87 07                 a0 = a0 + a1
176002: 9a 98                    a1 = -a2
176004: da c9 08                 a1 = a2 if a5 == 0
176007: be a8 08                 i32 a1 = a1 + a3
176010: be 65 05                 i32 s0 = s0 + s1
176013: 8c 79 05                 i32 a2 = a0 >>a 0x5
176016: 8c 8a 05                 i32 a3 = a1 >>a 0x5
176019: 89 5b                    a4 = s0 <s 0
176021: 33 06 01 08              s1 = 0x801
176025: 93 b6 ff f7              s1 = 0xfffffffffffff7ff if a4 == 0
176029: 9a ac                    a5 = -a3
176031: db ba 0c                 a5 = a3 if a4 != 0
176034: c8 c7 07                 a0 = a0 + a5
176037: 9a 9a                    a3 = -a2
176039: da b9 0a                 a3 = a2 if a4 == 0
176042: be a8 08                 i32 a1 = a1 + a3
176045: be 65 05                 i32 s0 = s0 + s1
176048: 8c 79 06                 i32 a2 = a0 >>a 0x6
176051: 8c 8a 06                 i32 a3 = a1 >>a 0x6
176054: 89 5b                    a4 = s0 <s 0
176056: 33 06 01 04              s1 = 0x401
176060: 93 b6 ff fb              s1 = 0xfffffffffffffbff if a4 == 0
176064: 9a ac                    a5 = -a3
176066: db ba 0c                 a5 = a3 if a4 != 0
176069: c8 c7 07                 a0 = a0 + a5
176072: 9a 9a                    a3 = -a2
176074: da b9 0a                 a3 = a2 if a4 == 0
176077: be a8 08                 i32 a1 = a1 + a3
176080: be 65 05                 i32 s0 = s0 + s1
176083: 8c 79 07                 i32 a2 = a0 >>a 0x7
176086: 8c 8a 07                 i32 a3 = a1 >>a 0x7
176089: 89 5b                    a4 = s0 <s 0
176091: 33 06 00 02              s1 = 0x200
176095: 93 b6 00 fe              s1 = 0xfffffffffffffe00 if a4 == 0
176099: 9a ac                    a5 = -a3
176101: db ba 0c                 a5 = a3 if a4 != 0
176104: c8 c7 07                 a0 = a0 + a5
176107: 9a 9a                    a3 = -a2
176109: da b9 0a                 a3 = a2 if a4 == 0
176112: be a8 08                 i32 a1 = a1 + a3
176115: be 65 05                 i32 s0 = s0 + s1
176118: 8c 79 08                 i32 a2 = a0 >>a 0x8
176121: 8c 8a 08                 i32 a3 = a1 >>a 0x8
176124: 89 5b                    a4 = s0 <s 0
176126: 33 06 00 01              s1 = 0x100
176130: 93 b6 00 ff              s1 = 0xffffffffffffff00 if a4 == 0
176134: 9a ac                    a5 = -a3
176136: db ba 0c                 a5 = a3 if a4 != 0
176139: c8 c7 07                 a0 = a0 + a5
176142: 9a 9a                    a3 = -a2
176144: da b9 0a                 a3 = a2 if a4 == 0
176147: be a8 08                 i32 a1 = a1 + a3
176150: be 65 05                 i32 s0 = s0 + s1
176153: 8c 79 09                 i32 a2 = a0 >>a 0x9
176156: 8c 8a 09                 i32 a3 = a1 >>a 0x9
176159: 89 5b                    a4 = s0 <s 0
176161: 33 06 80 00              s1 = 0x80
176165: 93 b6 80                 s1 = 0xffffffffffffff80 if a4 == 0
176168: 9a ac                    a5 = -a3
176170: db ba 0c                 a5 = a3 if a4 != 0
176173: c8 c7 07                 a0 = a0 + a5
176176: 9a 9a                    a3 = -a2
176178: da b9 0a                 a3 = a2 if a4 == 0
176181: be a8 08                 i32 a1 = a1 + a3
176184: be 65 05                 i32 s0 = s0 + s1
176187: 8c 79 0a                 i32 a2 = a0 >>a 0xa
176190: 8c 8a 0a                 i32 a3 = a1 >>a 0xa
176193: 89 5b                    a4 = s0 <s 0
176195: 33 06 40                 s1 = 0x40
176198: 93 b6 c0                 s1 = 0xffffffffffffffc0 if a4 == 0
176201: 9a ac                    a5 = -a3
176203: db ba 0c                 a5 = a3 if a4 != 0
176206: c8 c7 07                 a0 = a0 + a5
176209: 9a 9a                    a3 = -a2
176211: da b9 0a                 a3 = a2 if a4 == 0
176214: be a8 08                 i32 a1 = a1 + a3
176217: be 65 05                 i32 s0 = s0 + s1
176220: 8c 79 0b                 i32 a2 = a0 >>a 0xb
176223: 8c 8a 0b                 i32 a3 = a1 >>a 0xb
176226: 89 5b                    a4 = s0 <s 0
176228: 33 06 20                 s1 = 0x20
176231: 93 b6 e0                 s1 = 0xffffffffffffffe0 if a4 == 0
176234: 9a ac                    a5 = -a3
176236: db ba 0c                 a5 = a3 if a4 != 0
176239: c8 c7 07                 a0 = a0 + a5
176242: 9a 9a                    a3 = -a2
176244: da b9 0a                 a3 = a2 if a4 == 0
176247: be a8 08                 i32 a1 = a1 + a3
176250: be 65 05                 i32 s0 = s0 + s1
176253: 8c 79 0c                 i32 a2 = a0 >>a 0xc
176256: 8c 8a 0c                 i32 a3 = a1 >>a 0xc
176259: 89 5b                    a4 = s0 <s 0
176261: 33 06 10                 s1 = 0x10
176264: 93 b6 f0                 s1 = 0xfffffffffffffff0 if a4 == 0
176267: 9a ac                    a5 = -a3
176269: db ba 0c                 a5 = a3 if a4 != 0
176272: c8 c7 07                 a0 = a0 + a5
176275: 9a 9a                    a3 = -a2
176277: da b9 0a                 a3 = a2 if a4 == 0
176280: be a8 08                 i32 a1 = a1 + a3
176283: be 65 05                 i32 s0 = s0 + s1
176286: 8c 79 0d                 i32 a2 = a0 >>a 0xd
176289: 8c 8a 0d                 i32 a3 = a1 >>a 0xd
176292: 89 5b                    a4 = s0 <s 0
176294: 33 06 08                 s1 = 0x8
176297: 93 b6 f8                 s1 = 0xfffffffffffffff8 if a4 == 0
176300: 9a ac                    a5 = -a3
176302: db ba 0c                 a5 = a3 if a4 != 0
176305: c8 c7 07                 a0 = a0 + a5
176308: 9a 9a                    a3 = -a2
176310: da b9 0a                 a3 = a2 if a4 == 0
176313: be a8 08                 i32 a1 = a1 + a3
176316: be 65 05                 i32 s0 = s0 + s1
176319: 8c 79 0e                 i32 a2 = a0 >>a 0xe
176322: 8c 8a 0e                 i32 a3 = a1 >>a 0xe
176325: 89 5b                    a4 = s0 <s 0
176327: 33 06 04                 s1 = 0x4
176330: 93 b6 fc                 s1 = 0xfffffffffffffffc if a4 == 0
176333: 9a ac                    a5 = -a3
176335: db ba 0c                 a5 = a3 if a4 != 0
176338: c8 c7 07                 a0 = a0 + a5
176341: 9a 9a                    a3 = -a2
176343: da b9 0a                 a3 = a2 if a4 == 0
176346: be a8 08                 i32 a1 = a1 + a3
176349: be 65 05                 i32 s0 = s0 + s1
176352: 8c 79 0f                 i32 a2 = a0 >>a 0xf
176355: 8c 8a 0f                 i32 a3 = a1 >>a 0xf
176358: 89 5b                    a4 = s0 <s 0
176360: 9a ac                    a5 = -a3
176362: db ba 0c                 a5 = a3 if a4 != 0
176365: be c7 07                 i32 a0 = a0 + a5
176368: 9a 9a                    a3 = -a2
176370: da b9 0a                 a3 = a2 if a4 == 0
176373: be a8 08                 i32 a1 = a1 + a3
176376: 82 15 08                 s0 = u64 [sp + 0x8]
176379: 82 16                    s1 = u64 [sp]
176381: 95 11 10                 sp = sp + 0x10
176384: 7a 17 10 01              u32 [sp + 0x110] = a0
176388: 7a 18 d0 01              u32 [sp + 0x1d0] = a1
176392: 95 17 b8 01              a0 = sp + 0x1b8
176396: 7b 17 80 02              u64 [sp + 0x280] = a0
176400: 33 07 92 0c              a0 = 0xc92
176404: 7b 17 88 02              u64 [sp + 0x288] = a0
176408: 95 18 10 01              a1 = sp + 0x110
176412: 7b 18 90 02              u64 [sp + 0x290] = a1
176416: 7b 17 98 02              u64 [sp + 0x298] = a0
176420: 95 18 d0 01              a1 = sp + 0x1d0
176424: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
176428: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
176432: 33 07 20 29 01           a0 = 0x12920
176437: 7b 17 28 02              u64 [sp + 0x228] = a0
176441: 49 21 30 02 03           u64 [sp + 560] = 0x3
176446: 49 21 48 02              u64 [sp + 584] = 0
176450: 95 18 80 02              a1 = sp + 0x280
176454: 7b 18 38 02              u64 [sp + 0x238] = a1
176458: 49 21 40 02 03           u64 [sp + 576] = 0x3
176463: 95 17 f8 01              a0 = sp + 0x1f8
176467: 95 18 28 02              a1 = sp + 0x228
176471: 50 20 34 0a f0 9d fd     ra = 2612, jump @1491
      :                          @12035 [@dyn 1306]
176478: 82 16 00 02              s1 = u64 [sp + 0x200]
176482: 82 1b 08 02              a4 = u64 [sp + 0x208]
176486: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
176490: 7b 17 60                 u64 [sp + 0x60] = a0
176493: 33 07 02                 a0 = 0x2
176496: 33 08                    a1 = 0
176498: 33 09                    a2 = 0
176500: 64 6a                    a3 = s1
176502: 33 00 36 0a              ra = 0xa36
176506: 0a 64                    ecalli 100 // 'log'
176508: 01                       fallthrough
      :                          @12036 [@dyn 1307]
176509: 82 1c 60                 a5 = u64 [sp + 0x60]
176512: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
176517: 55 38 00 00 f0 09        jump @12038 if a1 >=u 4293918720
      :                          @12037
176523: 28 60 30                 jump @12862
      :                          @12038
176526: 33 07 b0 02 03           a0 = 0x302b0
176531: 95 77 00 00 10           a0 = a0 + 0x100000
176536: 01                       fallthrough
      :                          @12039
176537: 82 78                    a1 = u64 [a0]
176539: c9 87 09                 a2 = a0 - a1
176542: aa 69 06                 jump @12041 if a2 == s1
      :                          @12040
176545: 28 4a 30                 jump @12862
      :                          @12041
176548: c9 c8 09                 a2 = a1 - a5
176551: 01                       fallthrough
      :                          @12042
176552: 82 7a                    a3 = u64 [a0]
176554: ab 8a ef                 jump @12039 if a3 != a1
      :                          @12043
176557: 7b 79                    u64 [a0] = a2
176559: 33 0b                    a4 = 0
176561: 01                       fallthrough
      :                          @12044
176562: ab 8a e7                 jump @12039 if a3 != a1
      :                          @12045
176565: 28 36 30                 jump @12862
      :                          @12046 [@dyn 1308]
176568: 3a 08 70 02 03           a1 = u64 [0x30270]
176573: 97 89 0d                 a2 = a1 << 0xd
176576: d3 89 09                 a2 = a2 ^ a1
176579: 98 9a 07                 a3 = a2 >> 0x7
176582: 3a 08 58 01 03           a1 = u64 [0x30158]
176587: d3 a9 09                 a2 = a2 ^ a3
176590: 97 9a 11                 a3 = a2 << 0x11
176593: d3 a9 09                 a2 = a2 ^ a3
176596: ca 89 0a                 a3 = a2 * a1
176599: 3a 0b 90 01 03           a4 = u64 [0x30190]
176604: 3e 09 70 02 03           u64 [0x30270] = a2
176609: 98 a9 04                 a2 = a3 >> 0x4
176612: d6 b9 09                 a2 = a2 mulhu a4
176615: 33 02 d0 07              t0 = 0x7d0
176619: ca 29 09                 a2 = a2 * t0
176622: bf 9a 0a                 i32 a3 = a3 - a2
176625: 97 aa 10                 a3 = a3 << 0x10
176628: 3a 06 70 02 03           s1 = u64 [0x30270]
176633: 33 0c 00 00 18 fc        a5 = 0xfffffffffc180000
176639: be ca 09                 i32 a2 = a3 + a5
176642: 97 6a 0d                 a3 = s1 << 0xd
176645: d3 a6 06                 s1 = s1 ^ a3
176648: 98 6a 07                 a3 = s1 >> 0x7
176651: d3 a6 06                 s1 = s1 ^ a3
176654: 97 6a 11                 a3 = s1 << 0x11
176657: d3 6a 0a                 a3 = a3 ^ s1
176660: ca 8a 08                 a1 = a3 * a1
176663: 3e 0a 70 02 03           u64 [0x30270] = a3
176668: 98 87 04                 a0 = a1 >> 0x4
176671: d6 b7 07                 a0 = a0 mulhu a4
176674: ca 27 07                 a0 = a0 * t0
176677: bf 78 08                 i32 a1 = a1 - a0
176680: 97 87 10                 a0 = a1 << 0x10
176683: be c7 07                 i32 a0 = a0 + a5
176686: ca 97 08                 a1 = a0 * a2
176689: 98 88 10                 a1 = a1 >> 0x10
176692: 7a 18 10 01              u32 [sp + 0x110] = a1
176696: 51 07 0a                 jump @12048 if a0 == 0
      :                          @12047
176699: 97 99 10                 a2 = a2 << 0x10
176702: cc 79 07                 a0 = a2 /s a0
176705: 01                       fallthrough
      :                          @12048
176706: 7a 17 d0 01              u32 [sp + 0x1d0] = a0
176710: 95 17 10 01              a0 = sp + 0x110
176714: 7b 17 28 02              u64 [sp + 0x228] = a0
176718: 33 07 92 0c              a0 = 0xc92
176722: 7b 17 30 02              u64 [sp + 0x230] = a0
176726: 95 18 d0 01              a1 = sp + 0x1d0
176730: 7b 18 38 02              u64 [sp + 0x238] = a1
176734: 7b 17 40 02              u64 [sp + 0x240] = a0
176738: 33 07 60 29 01           a0 = 0x12960
176743: 7b 17 80 02              u64 [sp + 0x280] = a0
176747: 49 21 88 02 02           u64 [sp + 648] = 0x2
176752: 49 21 a0 02              u64 [sp + 672] = 0
176756: 95 18 28 02              a1 = sp + 0x228
176760: 7b 18 90 02              u64 [sp + 0x290] = a1
176764: 49 21 98 02 02           u64 [sp + 664] = 0x2
176769: 95 17 f8 01              a0 = sp + 0x1f8
176773: 95 18 80 02              a1 = sp + 0x280
176777: 50 20 3a 0a be 9c fd     ra = 2618, jump @1491
      :                          @12049 [@dyn 1309]
176784: 82 16 00 02              s1 = u64 [sp + 0x200]
176788: 82 1b 08 02              a4 = u64 [sp + 0x208]
176792: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
176796: 7b 17 60                 u64 [sp + 0x60] = a0
176799: 33 07 02                 a0 = 0x2
176802: 33 08                    a1 = 0
176804: 33 09                    a2 = 0
176806: 64 6a                    a3 = s1
176808: 33 00 3c 0a              ra = 0xa3c
176812: 0a 64                    ecalli 100 // 'log'
176814: 01                       fallthrough
      :                          @12050 [@dyn 1310]
176815: 82 1c 60                 a5 = u64 [sp + 0x60]
176818: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
176823: 55 38 00 00 f0 09        jump @12052 if a1 >=u 4293918720
      :                          @12051
176829: 28 2e 2f                 jump @12862
      :                          @12052
176832: 33 07 b0 02 03           a0 = 0x302b0
176837: 95 77 00 00 10           a0 = a0 + 0x100000
176842: 01                       fallthrough
      :                          @12053
176843: 82 78                    a1 = u64 [a0]
176845: c9 87 09                 a2 = a0 - a1
176848: aa 69 06                 jump @12055 if a2 == s1
      :                          @12054
176851: 28 18 2f                 jump @12862
      :                          @12055
176854: c9 c8 09                 a2 = a1 - a5
176857: 01                       fallthrough
      :                          @12056
176858: 82 7a                    a3 = u64 [a0]
176860: ab 8a ef                 jump @12053 if a3 != a1
      :                          @12057
176863: 7b 79                    u64 [a0] = a2
176865: 33 0b                    a4 = 0
176867: 01                       fallthrough
      :                          @12058
176868: ab 8a e7                 jump @12053 if a3 != a1
      :                          @12059
176871: 28 04 2f                 jump @12862
      :                          @12060 [@dyn 1311]
176874: 3a 07 70 02 03           a0 = u64 [0x30270]
176879: 49 11 60 ff ff ef        u64 [sp + 96] = 0xffffffffffefffff
176885: 97 78 0d                 a1 = a0 << 0xd
176888: d3 87 07                 a0 = a0 ^ a1
176891: 98 78 07                 a1 = a0 >> 0x7
176894: d3 87 07                 a0 = a0 ^ a1
176897: 97 78 11                 a1 = a0 << 0x11
176900: d3 87 07                 a0 = a0 ^ a1
176903: 3e 07 70 02 03           u64 [0x30270] = a0
176908: 87 77 79 c8 75           i32 a0 = a0 * 0x75c879
176913: 83 77 5f f3 6e 3c        i32 a0 = a0 + 0x3c6ef35f
176919: 7a 17 d0 01              u32 [sp + 0x1d0] = a0
176923: 95 17 d0 01              a0 = sp + 0x1d0
176927: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
176931: 33 07 5e 0c              a0 = 0xc5e
176935: 7b 17 00 02              u64 [sp + 0x200] = a0
176939: 33 07 90 29 01           a0 = 0x12990
176944: 7b 17 80 02              u64 [sp + 0x280] = a0
176948: 49 21 88 02 01           u64 [sp + 648] = 0x1
176953: 49 21 a0 02              u64 [sp + 672] = 0
176957: 95 18 f8 01              a1 = sp + 0x1f8
176961: 7b 18 90 02              u64 [sp + 0x290] = a1
176965: 49 21 98 02 01           u64 [sp + 664] = 0x1
176970: 95 17 28 02              a0 = sp + 0x228
176974: 95 18 80 02              a1 = sp + 0x280
176978: 50 20 40 0a f5 9b fd     ra = 2624, jump @1491
      :                          @12061 [@dyn 1312]
176985: 82 16 30 02              s1 = u64 [sp + 0x230]
176989: 82 1b 38 02              a4 = u64 [sp + 0x238]
176993: 82 17 28 02              a0 = u64 [sp + 0x228]
176997: 7b 17 58                 u64 [sp + 0x58] = a0
177000: 33 07 02                 a0 = 0x2
177003: 33 08                    a1 = 0
177005: 33 09                    a2 = 0
177007: 64 6a                    a3 = s1
177009: 33 00 42 0a              ra = 0xa42
177013: 0a 64                    ecalli 100 // 'log'
177015: 01                       fallthrough
      :                          @12062 [@dyn 1313]
177016: 82 1c 58                 a5 = u64 [sp + 0x58]
177019: 82 17 60                 a0 = u64 [sp + 0x60]
177022: c8 c7 07                 a0 = a0 + a5
177025: 53 37 00 00 f0 25        jump @12068 if a0 <u 4293918720
      :                          @12063
177031: 33 07 b0 02 03           a0 = 0x302b0
177036: 95 77 00 00 10           a0 = a0 + 0x100000
177041: 01                       fallthrough
      :                          @12064
177042: 82 78                    a1 = u64 [a0]
177044: c9 87 09                 a2 = a0 - a1
177047: ab 69 0f                 jump @12068 if a2 != s1
      :                          @12065
177050: c9 c8 09                 a2 = a1 - a5
177053: 01                       fallthrough
      :                          @12066
177054: 82 7a                    a3 = u64 [a0]
177056: ab 8a f2                 jump @12064 if a3 != a1
      :                          @12067
177059: 7b 79                    u64 [a0] = a2
177061: 01                       fallthrough
      :                          @12068
177062: 3a 07 70 02 03           a0 = u64 [0x30270]
177067: 3a 0a 58 01 03           a3 = u64 [0x30158]
177072: 97 78 0d                 a1 = a0 << 0xd
177075: d3 87 07                 a0 = a0 ^ a1
177078: 98 78 07                 a1 = a0 >> 0x7
177081: d3 87 07                 a0 = a0 ^ a1
177084: 97 78 11                 a1 = a0 << 0x11
177087: d3 87 07                 a0 = a0 ^ a1
177090: 3a 08 88 01 03           a1 = u64 [0x30188]
177095: 3e 07 70 02 03           u64 [0x30270] = a0
177100: 7b 1a 58                 u64 [sp + 0x58] = a3
177103: ca a7 09                 a2 = a0 * a3
177106: ca 87 07                 a0 = a0 * a1
177109: d3 97 07                 a0 = a0 ^ a2
177112: 98 78 07                 a1 = a0 >> 0x7
177115: d3 87 07                 a0 = a0 ^ a1
177118: 97 78 11                 a1 = a0 << 0x11
177121: d3 87 07                 a0 = a0 ^ a1
177124: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
177128: 95 17 d0 01              a0 = sp + 0x1d0
177132: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
177136: 33 07 28 0c              a0 = 0xc28
177140: 7b 17 00 02              u64 [sp + 0x200] = a0
177144: 33 07 b0 29 01           a0 = 0x129b0
177149: 7b 17 80 02              u64 [sp + 0x280] = a0
177153: 49 21 88 02 01           u64 [sp + 648] = 0x1
177158: 49 21 a0 02              u64 [sp + 672] = 0
177162: 95 18 f8 01              a1 = sp + 0x1f8
177166: 7b 18 90 02              u64 [sp + 0x290] = a1
177170: 49 21 98 02 01           u64 [sp + 664] = 0x1
177175: 95 17 28 02              a0 = sp + 0x228
177179: 95 18 80 02              a1 = sp + 0x280
177183: 50 20 44 0a 28 9b fd     ra = 2628, jump @1491
      :                          @12069 [@dyn 1314]
177190: 82 16 30 02              s1 = u64 [sp + 0x230]
177194: 82 1b 38 02              a4 = u64 [sp + 0x238]
177198: 82 17 28 02              a0 = u64 [sp + 0x228]
177202: 7b 17 50                 u64 [sp + 0x50] = a0
177205: 33 07 02                 a0 = 0x2
177208: 33 08                    a1 = 0
177210: 33 09                    a2 = 0
177212: 64 6a                    a3 = s1
177214: 33 00 46 0a              ra = 0xa46
177218: 0a 64                    ecalli 100 // 'log'
177220: 01                       fallthrough
      :                          @12070 [@dyn 1315]
177221: 82 1c 50                 a5 = u64 [sp + 0x50]
177224: 82 17 60                 a0 = u64 [sp + 0x60]
177227: c8 c7 07                 a0 = a0 + a5
177230: 53 37 00 00 f0 25        jump @12076 if a0 <u 4293918720
      :                          @12071
177236: 33 07 b0 02 03           a0 = 0x302b0
177241: 95 77 00 00 10           a0 = a0 + 0x100000
177246: 01                       fallthrough
      :                          @12072
177247: 82 78                    a1 = u64 [a0]
177249: c9 87 09                 a2 = a0 - a1
177252: ab 69 0f                 jump @12076 if a2 != s1
      :                          @12073
177255: c9 c8 09                 a2 = a1 - a5
177258: 01                       fallthrough
      :                          @12074
177259: 82 7a                    a3 = u64 [a0]
177261: ab 8a f2                 jump @12072 if a3 != a1
      :                          @12075
177264: 7b 79                    u64 [a0] = a2
177266: 01                       fallthrough
      :                          @12076
177267: 3a 07 70 02 03           a0 = u64 [0x30270]
177272: 97 78 0d                 a1 = a0 << 0xd
177275: d3 87 07                 a0 = a0 ^ a1
177278: 98 78 07                 a1 = a0 >> 0x7
177281: d3 87 07                 a0 = a0 ^ a1
177284: 97 78 11                 a1 = a0 << 0x11
177287: d3 87 07                 a0 = a0 ^ a1
177290: 3e 07 70 02 03           u64 [0x30270] = a0
177295: 3a 08 70 02 03           a1 = u64 [0x30270]
177300: 82 19 58                 a2 = u64 [sp + 0x58]
177303: ca 97 07                 a0 = a0 * a2
177306: 97 89 0d                 a2 = a1 << 0xd
177309: d3 98 08                 a1 = a1 ^ a2
177312: 98 89 07                 a2 = a1 >> 0x7
177315: d3 98 08                 a1 = a1 ^ a2
177318: 97 89 11                 a2 = a1 << 0x11
177321: d3 98 08                 a1 = a1 ^ a2
177324: 3e 08 70 02 03           u64 [0x30270] = a1
177329: 98 78 2d                 a1 = a0 >> 0x2d
177332: 98 79 1b                 a2 = a0 >> 0x1b
177335: d3 98 08                 a1 = a1 ^ a2
177338: 98 77 3b                 a0 = a0 >> 0x3b
177341: df 78 07                 i32 a0 = a1 >>r a0
177344: 7a 17 d0 01              u32 [sp + 0x1d0] = a0
177348: 95 17 d0 01              a0 = sp + 0x1d0
177352: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
177356: 33 07 5e 0c              a0 = 0xc5e
177360: 7b 17 58                 u64 [sp + 0x58] = a0
177363: 7b 17 00 02              u64 [sp + 0x200] = a0
177367: 33 07 d0 29 01           a0 = 0x129d0
177372: 7b 17 80 02              u64 [sp + 0x280] = a0
177376: 49 21 88 02 01           u64 [sp + 648] = 0x1
177381: 49 21 a0 02              u64 [sp + 672] = 0
177385: 95 18 f8 01              a1 = sp + 0x1f8
177389: 7b 18 90 02              u64 [sp + 0x290] = a1
177393: 49 21 98 02 01           u64 [sp + 664] = 0x1
177398: 95 17 28 02              a0 = sp + 0x228
177402: 95 18 80 02              a1 = sp + 0x280
177406: 50 20 48 0a 49 9a fd     ra = 2632, jump @1491
      :                          @12077 [@dyn 1316]
177413: 82 16 30 02              s1 = u64 [sp + 0x230]
177417: 82 1b 38 02              a4 = u64 [sp + 0x238]
177421: 82 17 28 02              a0 = u64 [sp + 0x228]
177425: 7b 17 50                 u64 [sp + 0x50] = a0
177428: 33 07 02                 a0 = 0x2
177431: 33 08                    a1 = 0
177433: 33 09                    a2 = 0
177435: 64 6a                    a3 = s1
177437: 33 00 4a 0a              ra = 0xa4a
177441: 0a 64                    ecalli 100 // 'log'
177443: 01                       fallthrough
      :                          @12078 [@dyn 1317]
177444: 82 1c 50                 a5 = u64 [sp + 0x50]
177447: 82 17 60                 a0 = u64 [sp + 0x60]
177450: c8 c7 07                 a0 = a0 + a5
177453: 53 37 00 00 f0 25        jump @12084 if a0 <u 4293918720
      :                          @12079
177459: 33 07 b0 02 03           a0 = 0x302b0
177464: 95 77 00 00 10           a0 = a0 + 0x100000
177469: 01                       fallthrough
      :                          @12080
177470: 82 78                    a1 = u64 [a0]
177472: c9 87 09                 a2 = a0 - a1
177475: ab 69 0f                 jump @12084 if a2 != s1
      :                          @12081
177478: c9 c8 09                 a2 = a1 - a5
177481: 01                       fallthrough
      :                          @12082
177482: 82 7a                    a3 = u64 [a0]
177484: ab 8a f2                 jump @12080 if a3 != a1
      :                          @12083
177487: 7b 79                    u64 [a0] = a2
177489: 01                       fallthrough
      :                          @12084
177490: 3a 07 70 02 03           a0 = u64 [0x30270]
177495: 97 78 0d                 a1 = a0 << 0xd
177498: d3 87 07                 a0 = a0 ^ a1
177501: 98 78 07                 a1 = a0 >> 0x7
177504: d3 87 07                 a0 = a0 ^ a1
177507: 97 78 11                 a1 = a0 << 0x11
177510: d3 87 07                 a0 = a0 ^ a1
177513: 3e 07 70 02 03           u64 [0x30270] = a0
177518: 3a 08 70 02 03           a1 = u64 [0x30270]
177523: 97 89 0d                 a2 = a1 << 0xd
177526: d3 98 08                 a1 = a1 ^ a2
177529: 98 89 07                 a2 = a1 >> 0x7
177532: d3 98 08                 a1 = a1 ^ a2
177535: 97 89 11                 a2 = a1 << 0x11
177538: d3 98 08                 a1 = a1 ^ a2
177541: 87 89 1d dd 6c 4f        i32 a2 = a1 * 0x4f6cdd1d
177547: 3e 08 70 02 03           u64 [0x30270] = a1
177552: 96 77 fd 79 6d ef        a0 = a0 * 0xffffffffef6d79fd
177558: c8 97 07                 a0 = a0 + a2
177561: 7a 17 d0 01              u32 [sp + 0x1d0] = a0
177565: 95 17 d0 01              a0 = sp + 0x1d0
177569: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
177573: 82 17 58                 a0 = u64 [sp + 0x58]
177576: 7b 17 00 02              u64 [sp + 0x200] = a0
177580: 33 07 f0 29 01           a0 = 0x129f0
177585: 7b 17 80 02              u64 [sp + 0x280] = a0
177589: 49 21 88 02 01           u64 [sp + 648] = 0x1
177594: 49 21 a0 02              u64 [sp + 672] = 0
177598: 95 18 f8 01              a1 = sp + 0x1f8
177602: 7b 18 90 02              u64 [sp + 0x290] = a1
177606: 49 21 98 02 01           u64 [sp + 664] = 0x1
177611: 95 17 28 02              a0 = sp + 0x228
177615: 95 18 80 02              a1 = sp + 0x280
177619: 50 20 4c 0a 74 99 fd     ra = 2636, jump @1491
      :                          @12085 [@dyn 1318]
177626: 82 16 30 02              s1 = u64 [sp + 0x230]
177630: 82 1b 38 02              a4 = u64 [sp + 0x238]
177634: 82 17 28 02              a0 = u64 [sp + 0x228]
177638: 7b 17 58                 u64 [sp + 0x58] = a0
177641: 33 07 02                 a0 = 0x2
177644: 33 08                    a1 = 0
177646: 33 09                    a2 = 0
177648: 64 6a                    a3 = s1
177650: 33 00 4e 0a              ra = 0xa4e
177654: 0a 64                    ecalli 100 // 'log'
177656: 01                       fallthrough
      :                          @12086 [@dyn 1319]
177657: 82 1c 58                 a5 = u64 [sp + 0x58]
177660: 82 17 60                 a0 = u64 [sp + 0x60]
177663: c8 c7 07                 a0 = a0 + a5
177666: 55 37 00 00 f0 09        jump @12088 if a0 >=u 4293918720
      :                          @12087
177672: 28 e3 2b                 jump @12862
      :                          @12088
177675: 33 07 b0 02 03           a0 = 0x302b0
177680: 95 77 00 00 10           a0 = a0 + 0x100000
177685: 01                       fallthrough
      :                          @12089
177686: 82 78                    a1 = u64 [a0]
177688: c9 87 09                 a2 = a0 - a1
177691: aa 69 06                 jump @12091 if a2 == s1
      :                          @12090
177694: 28 cd 2b                 jump @12862
      :                          @12091
177697: c9 c8 09                 a2 = a1 - a5
177700: 01                       fallthrough
      :                          @12092
177701: 82 7a                    a3 = u64 [a0]
177703: ab 8a ef                 jump @12089 if a3 != a1
      :                          @12093
177706: 7b 79                    u64 [a0] = a2
177708: 33 0b                    a4 = 0
177710: 01                       fallthrough
      :                          @12094
177711: ab 8a e7                 jump @12089 if a3 != a1
      :                          @12095
177714: 28 b9 2b                 jump @12862
      :                          @12096 [@dyn 1320]
177717: 3a 07 70 02 03           a0 = u64 [0x30270]
177722: 97 78 0d                 a1 = a0 << 0xd
177725: d3 87 07                 a0 = a0 ^ a1
177728: 98 78 07                 a1 = a0 >> 0x7
177731: d3 87 07                 a0 = a0 ^ a1
177734: 97 78 11                 a1 = a0 << 0x11
177737: d3 78 08                 a1 = a1 ^ a0
177740: 96 77 1d                 a0 = a0 * 0x1d
177743: 3e 08 70 02 03           u64 [0x30270] = a1
177748: 84 76 1f                 s1 = a0 & 0x1f
177751: 64 67                    a0 = s1
177753: 50 20 52 0a f1 9b fd     ra = 2642, jump @1561
      :                          @12097 [@dyn 1321]
177760: 7b 17 10 01              u64 [sp + 0x110] = a0
177764: 7b 18 18 01              u64 [sp + 0x118] = a1
177768: 49 21 20 01              u64 [sp + 288] = 0
177772: 52 06 06                 jump @12099 if s1 != 0
      :                          @12098
177775: 28 66 33                 jump @13004
      :                          @12099
177778: 64 6b                    a4 = s1
177780: 28 1e                    jump @12102
      :                          @12100
177782: 82 1a 18 01              a3 = u64 [sp + 0x118]
177786: 96 67 1d                 a0 = s1 * 0x1d
177789: c8 8a 09                 a2 = a3 + a1
177792: 78 97                    u8 [a2] = a0
177794: 95 86 01                 s1 = a1 + 0x1
177797: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
177800: 7b 16 20 01              u64 [sp + 0x120] = s1
177804: 52 0b 06                 jump @12102 if a4 != 0
      :                          @12101
177807: 28 49 33                 jump @13005
      :                          @12102
177810: 3a 07 70 02 03           a0 = u64 [0x30270]
177815: 97 78 0d                 a1 = a0 << 0xd
177818: d3 87 07                 a0 = a0 ^ a1
177821: 98 76 07                 s1 = a0 >> 0x7
177824: d3 76 06                 s1 = s1 ^ a0
177827: 97 67 11                 a0 = s1 << 0x11
177830: d3 67 07                 a0 = a0 ^ s1
177833: 3e 07 70 02 03           u64 [0x30270] = a0
177838: 82 18 20 01              a1 = u64 [sp + 0x120]
177842: 82 17 10 01              a0 = u64 [sp + 0x110]
177846: ab 78 c0                 jump @12100 if a1 != a0
      :                          @12103
177849: 95 17 10 01              a0 = sp + 0x110
177853: 7b 1b 60                 u64 [sp + 0x60] = a4
177856: 50 20 54 0a cf 9c fd     ra = 2644, jump @1593
      :                          @12104 [@dyn 1322]
177863: 82 1b 60                 a4 = u64 [sp + 0x60]
177866: 82 18 20 01              a1 = u64 [sp + 0x120]
177870: 28 a8                    jump @12100
      :                          @12105 [@dyn 1323]
177872: 3a 08 70 02 03           a1 = u64 [0x30270]
177877: 97 89 0d                 a2 = a1 << 0xd
177880: d3 98 08                 a1 = a1 ^ a2
177883: 98 89 07                 a2 = a1 >> 0x7
177886: d3 98 08                 a1 = a1 ^ a2
177889: 97 89 11                 a2 = a1 << 0x11
177892: d3 98 08                 a1 = a1 ^ a2
177895: 3a 09 58 01 03           a2 = u64 [0x30158]
177900: 3a 0a 80 01 03           a3 = u64 [0x30180]
177905: 3e 08 70 02 03           u64 [0x30270] = a1
177910: ca 98 07                 a0 = a1 * a2
177913: 98 78 05                 a1 = a0 >> 0x5
177916: d6 a8 08                 a1 = a1 mulhu a3
177919: 98 88 07                 a1 = a1 >> 0x7
177922: 96 88 a0 86 01           a1 = a1 * 0x186a0
177927: c9 87 07                 a0 = a0 - a1
177930: 95 77 01                 a0 = a0 + 0x1
177933: 7b 17 10 01              u64 [sp + 0x110] = a0
177937: 50 20 58 0a c4 de fd     ra = 2648, jump @2609
      :                          @12106 [@dyn 1324]
177944: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
177948: 95 17 10 01              a0 = sp + 0x110
177952: 7b 17 28 02              u64 [sp + 0x228] = a0
177956: 33 07 28 0c              a0 = 0xc28
177960: 7b 17 30 02              u64 [sp + 0x230] = a0
177964: 95 18 d0 01              a1 = sp + 0x1d0
177968: 7b 18 38 02              u64 [sp + 0x238] = a1
177972: 7b 17 40 02              u64 [sp + 0x240] = a0
177976: 33 07 90 2a 01           a0 = 0x12a90
177981: 7b 17 80 02              u64 [sp + 0x280] = a0
177985: 49 21 88 02 02           u64 [sp + 648] = 0x2
177990: 49 21 a0 02              u64 [sp + 672] = 0
177994: 95 18 28 02              a1 = sp + 0x228
177998: 7b 18 90 02              u64 [sp + 0x290] = a1
178002: 49 21 98 02 02           u64 [sp + 664] = 0x2
178007: 95 17 f8 01              a0 = sp + 0x1f8
178011: 95 18 80 02              a1 = sp + 0x280
178015: 50 20 5a 0a e8 97 fd     ra = 2650, jump @1491
      :                          @12107 [@dyn 1325]
178022: 82 16 00 02              s1 = u64 [sp + 0x200]
178026: 82 1b 08 02              a4 = u64 [sp + 0x208]
178030: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
178034: 7b 17 60                 u64 [sp + 0x60] = a0
178037: 33 07 02                 a0 = 0x2
178040: 33 08                    a1 = 0
178042: 33 09                    a2 = 0
178044: 64 6a                    a3 = s1
178046: 33 00 5c 0a              ra = 0xa5c
178050: 0a 64                    ecalli 100 // 'log'
178052: 01                       fallthrough
      :                          @12108 [@dyn 1326]
178053: 82 1c 60                 a5 = u64 [sp + 0x60]
178056: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
178061: 55 38 00 00 f0 09        jump @12110 if a1 >=u 4293918720
      :                          @12109
178067: 28 58 2a                 jump @12862
      :                          @12110
178070: 33 07 b0 02 03           a0 = 0x302b0
178075: 95 77 00 00 10           a0 = a0 + 0x100000
178080: 01                       fallthrough
      :                          @12111
178081: 82 78                    a1 = u64 [a0]
178083: c9 87 09                 a2 = a0 - a1
178086: aa 69 06                 jump @12113 if a2 == s1
      :                          @12112
178089: 28 42 2a                 jump @12862
      :                          @12113
178092: c9 c8 09                 a2 = a1 - a5
178095: 01                       fallthrough
      :                          @12114
178096: 82 7a                    a3 = u64 [a0]
178098: ab 8a ef                 jump @12111 if a3 != a1
      :                          @12115
178101: 7b 79                    u64 [a0] = a2
178103: 33 0b                    a4 = 0
178105: 01                       fallthrough
      :                          @12116
178106: ab 8a e7                 jump @12111 if a3 != a1
      :                          @12117
178109: 28 2e 2a                 jump @12862
      :                          @12118 [@dyn 1327]
178112: 3a 08 70 02 03           a1 = u64 [0x30270]
178117: 97 89 0d                 a2 = a1 << 0xd
178120: d3 98 08                 a1 = a1 ^ a2
178123: 98 89 07                 a2 = a1 >> 0x7
178126: d3 98 08                 a1 = a1 ^ a2
178129: 97 89 11                 a2 = a1 << 0x11
178132: d3 98 08                 a1 = a1 ^ a2
178135: 3a 09 58 01 03           a2 = u64 [0x30158]
178140: 3a 0a 60 01 03           a3 = u64 [0x30160]
178145: 3e 08 70 02 03           u64 [0x30270] = a1
178150: ca 98 07                 a0 = a1 * a2
178153: 98 78 03                 a1 = a0 >> 0x3
178156: d6 a8 08                 a1 = a1 mulhu a3
178159: 98 88 04                 a1 = a1 >> 0x4
178162: 96 88 e8 03              a1 = a1 * 0x3e8
178166: c9 87 07                 a0 = a0 - a1
178169: 95 76 01                 s1 = a0 + 0x1
178172: 7b 16 10 01              u64 [sp + 0x110] = s1
178176: 95 17 80 02              a0 = sp + 0x280
178180: 64 68                    a1 = s1
178182: 33 00 60 0a              ra = 0xa60
178186: 95 11 90                 sp = sp + 0xffffffffffffff90
178189: 7b 10 68                 u64 [sp + 0x68] = ra
178192: 7b 15 60                 u64 [sp + 0x60] = s0
178195: 7b 16 58                 u64 [sp + 0x58] = s1
178198: 95 89 01                 a2 = a1 + 0x1
178201: 33 06 b0 02 03           s1 = 0x302b0
178206: 33 02 00 00 10           t0 = 0x100000
178211: c8 26 06                 s1 = s1 + t0
178214: 28 12 de fd              jump @2626
      :                          @12119 [@dyn 1328]
178218: 82 12 80 02              t0 = u64 [sp + 0x280]
178222: 82 13 88 02              t1 = u64 [sp + 0x288]
178226: 82 17 90 02              a0 = u64 [sp + 0x290]
178230: 82 1b 98 02              a4 = u64 [sp + 0x298]
178234: 82 1c a0 02              a5 = u64 [sp + 0x2a0]
178238: 82 18 a8 02              a1 = u64 [sp + 0x2a8]
178242: 82 19 b0 02              a2 = u64 [sp + 0x2b0]
178246: 82 1a b8 02              a3 = u64 [sp + 0x2b8]
178250: 82 14 c0 02              t2 = u64 [sp + 0x2c0]
178254: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
178258: ac 86 06                 jump @12121 if s1 <u a1
      :                          @12120
178261: 28 1c 3b                 jump @13255
      :                          @12121
178264: 7b 19 40                 u64 [sp + 0x40] = a2
178267: 7b 1b 50                 u64 [sp + 0x50] = a4
178270: 7b 12 58                 u64 [sp + 0x58] = t0
178273: 7b 13 60                 u64 [sp + 0x60] = t1
178276: ac 46 06                 jump @12123 if s1 <u t2
      :                          @12122
178279: 28 16 3b                 jump @13265
      :                          @12123
178282: 97 67 03                 a0 = s1 << 0x3
178285: 7b 1c 38                 u64 [sp + 0x38] = a5
178288: c8 c7 07                 a0 = a0 + a5
178291: 97 66 02                 s1 = s1 << 0x2
178294: 7b 1a 30                 u64 [sp + 0x30] = a3
178297: c8 a6 06                 s1 = s1 + a3
178300: 95 18 10 01              a1 = sp + 0x110
178304: 7b 18 80 02              u64 [sp + 0x280] = a1
178308: 33 08 28 0c              a1 = 0xc28
178312: 7b 18 88 02              u64 [sp + 0x288] = a1
178316: 95 19 d0 01              a2 = sp + 0x1d0
178320: 7b 19 90 02              u64 [sp + 0x290] = a2
178324: 7b 18 98 02              u64 [sp + 0x298] = a1
178328: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
178332: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
178336: 7b 16 b0 02              u64 [sp + 0x2b0] = s1
178340: 33 07 92 0c              a0 = 0xc92
178344: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
178348: 33 07 c8 2a 01           a0 = 0x12ac8
178353: 7b 17 28 02              u64 [sp + 0x228] = a0
178357: 49 21 30 02 04           u64 [sp + 560] = 0x4
178362: 49 21 48 02              u64 [sp + 584] = 0
178366: 95 18 80 02              a1 = sp + 0x280
178370: 7b 18 38 02              u64 [sp + 0x238] = a1
178374: 49 21 40 02 04           u64 [sp + 576] = 0x4
178379: 95 17 f8 01              a0 = sp + 0x1f8
178383: 95 18 28 02              a1 = sp + 0x228
178387: 50 20 62 0a 74 96 fd     ra = 2658, jump @1491
      :                          @12124 [@dyn 1329]
178394: 82 16 00 02              s1 = u64 [sp + 0x200]
178398: 82 1b 08 02              a4 = u64 [sp + 0x208]
178402: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
178406: 7b 17 28                 u64 [sp + 0x28] = a0
178409: 33 07 02                 a0 = 0x2
178412: 33 08                    a1 = 0
178414: 33 09                    a2 = 0
178416: 64 6a                    a3 = s1
178418: 33 00 64 0a              ra = 0xa64
178422: 0a 64                    ecalli 100 // 'log'
178424: 01                       fallthrough
      :                          @12125 [@dyn 1330]
178425: 82 1c 28                 a5 = u64 [sp + 0x28]
178428: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
178433: 53 38 00 00 f0 25        jump @12131 if a1 <u 4293918720
      :                          @12126
178439: 33 07 b0 02 03           a0 = 0x302b0
178444: 95 77 00 00 10           a0 = a0 + 0x100000
178449: 01                       fallthrough
      :                          @12127
178450: 82 78                    a1 = u64 [a0]
178452: c9 87 09                 a2 = a0 - a1
178455: ab 69 0f                 jump @12131 if a2 != s1
      :                          @12128
178458: c9 c8 09                 a2 = a1 - a5
178461: 01                       fallthrough
      :                          @12129
178462: 82 7a                    a3 = u64 [a0]
178464: ab 8a f2                 jump @12127 if a3 != a1
      :                          @12130
178467: 7b 79                    u64 [a0] = a2
178469: 01                       fallthrough
      :                          @12131
178470: 82 13 50                 t1 = u64 [sp + 0x50]
178473: 82 16 30                 s1 = u64 [sp + 0x30]
178476: 82 18 40                 a1 = u64 [sp + 0x40]
178479: 51 08 2d                 jump @12138 if a1 == 0
      :                          @12132
178482: 56 38 00 00 04 2a        jump @12138 if a1 >u 262144
      :                          @12133
178488: 97 87 02                 a0 = a1 << 0x2
178491: 33 08 b0 02 03           a1 = 0x302b0
178496: 95 88 00 00 10           a1 = a1 + 0x100000
178501: 01                       fallthrough
      :                          @12134
178502: 82 89                    a2 = u64 [a1]
178504: c9 98 0a                 a3 = a1 - a2
178507: ab 6a 11                 jump @12138 if a3 != s1
      :                          @12135
178510: c9 79 0a                 a3 = a2 - a0
178513: 01                       fallthrough
      :                          @12136
178514: 82 8b                    a4 = u64 [a1]
178516: ab 9b f2                 jump @12134 if a4 != a2
      :                          @12137
178519: 7b 8a                    u64 [a1] = a3
178521: 33 0c                    a5 = 0
178523: 01                       fallthrough
      :                          @12138
178524: 82 12 60                 t0 = u64 [sp + 0x60]
178527: 82 16 38                 s1 = u64 [sp + 0x38]
178530: 51 03 2d                 jump @12145 if t1 == 0
      :                          @12139
178533: 56 33 00 00 02 2a        jump @12145 if t1 >u 131072
      :                          @12140
178539: 97 37 03                 a0 = t1 << 0x3
178542: 33 08 b0 02 03           a1 = 0x302b0
178547: 95 88 00 00 10           a1 = a1 + 0x100000
178552: 01                       fallthrough
      :                          @12141
178553: 82 89                    a2 = u64 [a1]
178555: c9 98 0a                 a3 = a1 - a2
178558: ab 6a 11                 jump @12145 if a3 != s1
      :                          @12142
178561: c9 79 0a                 a3 = a2 - a0
178564: 01                       fallthrough
      :                          @12143
178565: 82 8b                    a4 = u64 [a1]
178567: ab 9b f2                 jump @12141 if a4 != a2
      :                          @12144
178570: 7b 8a                    u64 [a1] = a3
178572: 33 0c                    a5 = 0
178574: 01                       fallthrough
      :                          @12145
178575: 82 18 58                 a1 = u64 [sp + 0x58]
178578: 52 08 06                 jump @12147 if a1 != 0
      :                          @12146
178581: 28 56 28                 jump @12862
      :                          @12147
178584: 54 38 00 00 02 09        jump @12149 if a1 <=u 131072
      :                          @12148
178590: 28 4d 28                 jump @12862
      :                          @12149
178593: 97 87 03                 a0 = a1 << 0x3
178596: 33 08 b0 02 03           a1 = 0x302b0
178601: 95 88 00 00 10           a1 = a1 + 0x100000
178606: 01                       fallthrough
      :                          @12150
178607: 82 89                    a2 = u64 [a1]
178609: c9 98 0a                 a3 = a1 - a2
178612: aa 2a 06                 jump @12152 if a3 == t0
      :                          @12151
178615: 28 34 28                 jump @12862
      :                          @12152
178618: c9 79 0a                 a3 = a2 - a0
178621: 01                       fallthrough
      :                          @12153
178622: 82 8b                    a4 = u64 [a1]
178624: ab 9b ef                 jump @12150 if a4 != a2
      :                          @12154
178627: 7b 8a                    u64 [a1] = a3
178629: 33 0c                    a5 = 0
178631: 01                       fallthrough
      :                          @12155
178632: ab 9b e7                 jump @12150 if a4 != a2
      :                          @12156
178635: 28 20 28                 jump @12862
      :                          @12157 [@dyn 1331]
178638: 3a 08 70 02 03           a1 = u64 [0x30270]
178643: 97 89 0d                 a2 = a1 << 0xd
178646: d3 98 08                 a1 = a1 ^ a2
178649: 98 89 07                 a2 = a1 >> 0x7
178652: d3 98 08                 a1 = a1 ^ a2
178655: 97 89 11                 a2 = a1 << 0x11
178658: d3 98 08                 a1 = a1 ^ a2
178661: 3a 09 58 01 03           a2 = u64 [0x30158]
178666: 3a 0a 60 01 03           a3 = u64 [0x30160]
178671: 3e 08 70 02 03           u64 [0x30270] = a1
178676: ca 98 07                 a0 = a1 * a2
178679: 98 78 03                 a1 = a0 >> 0x3
178682: d6 a8 08                 a1 = a1 mulhu a3
178685: 98 88 04                 a1 = a1 >> 0x4
178688: 96 88 e8 03              a1 = a1 * 0x3e8
178692: c9 87 07                 a0 = a0 - a1
178695: 95 76 01                 s1 = a0 + 0x1
178698: 7b 16 10 01              u64 [sp + 0x110] = s1
178702: 95 17 d0 01              a0 = sp + 0x1d0
178706: 64 68                    a1 = s1
178708: 33 00 68 0a              ra = 0xa68
178712: 95 11 a8                 sp = sp + 0xffffffffffffffa8
178715: 7b 10 50                 u64 [sp + 0x50] = ra
178718: 7b 15 48                 u64 [sp + 0x48] = s0
178721: 7b 16 40                 u64 [sp + 0x40] = s1
178724: 95 86 01                 s1 = a1 + 0x1
178727: 33 09 b0 02 03           a2 = 0x302b0
178732: 33 02 00 00 10           t0 = 0x100000
178737: c8 29 09                 a2 = a2 + t0
178740: 28 64 df fd              jump @2702
      :                          @12158 [@dyn 1332]
178744: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
178748: ac 86 06                 jump @12160 if s1 <u a1
      :                          @12159
178751: 28 32 39                 jump @13255
      :                          @12160
178754: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
178758: 97 66 02                 s1 = s1 << 0x2
178761: 7b 17 60                 u64 [sp + 0x60] = a0
178764: c8 76 06                 s1 = s1 + a0
178767: 95 17 10 01              a0 = sp + 0x110
178771: 7b 17 28 02              u64 [sp + 0x228] = a0
178775: 33 07 28 0c              a0 = 0xc28
178779: 7b 17 30 02              u64 [sp + 0x230] = a0
178783: 7b 16 38 02              u64 [sp + 0x238] = s1
178787: 33 07 92 0c              a0 = 0xc92
178791: 7b 17 40 02              u64 [sp + 0x240] = a0
178795: 33 07 20 2b 01           a0 = 0x12b20
178800: 7b 17 80 02              u64 [sp + 0x280] = a0
178804: 49 21 88 02 02           u64 [sp + 648] = 0x2
178809: 49 21 a0 02              u64 [sp + 672] = 0
178813: 95 18 28 02              a1 = sp + 0x228
178817: 7b 18 90 02              u64 [sp + 0x290] = a1
178821: 49 21 98 02 02           u64 [sp + 664] = 0x2
178826: 95 17 f8 01              a0 = sp + 0x1f8
178830: 95 18 80 02              a1 = sp + 0x280
178834: 50 20 6a 0a b5 94 fd     ra = 2666, jump @1491
      :                          @12161 [@dyn 1333]
178841: 82 16 00 02              s1 = u64 [sp + 0x200]
178845: 82 1b 08 02              a4 = u64 [sp + 0x208]
178849: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
178853: 7b 17 58                 u64 [sp + 0x58] = a0
178856: 33 07 02                 a0 = 0x2
178859: 33 08                    a1 = 0
178861: 33 09                    a2 = 0
178863: 64 6a                    a3 = s1
178865: 33 00 6c 0a              ra = 0xa6c
178869: 0a 64                    ecalli 100 // 'log'
178871: 01                       fallthrough
      :                          @12162 [@dyn 1334]
178872: 82 1c 58                 a5 = u64 [sp + 0x58]
178875: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
178880: 53 38 00 00 f0 25        jump @12168 if a1 <u 4293918720
      :                          @12163
178886: 33 07 b0 02 03           a0 = 0x302b0
178891: 95 77 00 00 10           a0 = a0 + 0x100000
178896: 01                       fallthrough
      :                          @12164
178897: 82 78                    a1 = u64 [a0]
178899: c9 87 09                 a2 = a0 - a1
178902: ab 69 0f                 jump @12168 if a2 != s1
      :                          @12165
178905: c9 c8 09                 a2 = a1 - a5
178908: 01                       fallthrough
      :                          @12166
178909: 82 7a                    a3 = u64 [a0]
178911: ab 8a f2                 jump @12164 if a3 != a1
      :                          @12167
178914: 7b 79                    u64 [a0] = a2
178916: 01                       fallthrough
      :                          @12168
178917: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
178921: 82 16 60                 s1 = u64 [sp + 0x60]
178924: 52 07 06                 jump @12170 if a0 != 0
      :                          @12169
178927: 28 fc 26                 jump @12862
      :                          @12170
178930: 54 37 00 00 04 09        jump @12172 if a0 <=u 262144
      :                          @12171
178936: 28 f3 26                 jump @12862
      :                          @12172
178939: 97 77 02                 a0 = a0 << 0x2
178942: 33 08 b0 02 03           a1 = 0x302b0
178947: 95 88 00 00 10           a1 = a1 + 0x100000
178952: 01                       fallthrough
      :                          @12173
178953: 82 89                    a2 = u64 [a1]
178955: c9 98 0a                 a3 = a1 - a2
178958: aa 6a 06                 jump @12175 if a3 == s1
      :                          @12174
178961: 28 da 26                 jump @12862
      :                          @12175
178964: c9 79 0a                 a3 = a2 - a0
178967: 01                       fallthrough
      :                          @12176
178968: 82 8b                    a4 = u64 [a1]
178970: ab 9b ef                 jump @12173 if a4 != a2
      :                          @12177
178973: 7b 8a                    u64 [a1] = a3
178975: 33 0c                    a5 = 0
178977: 01                       fallthrough
      :                          @12178
178978: ab 9b e7                 jump @12173 if a4 != a2
      :                          @12179
178981: 28 c6 26                 jump @12862
      :                          @12180 [@dyn 1335]
178984: 3a 08 70 02 03           a1 = u64 [0x30270]
178989: 97 89 0d                 a2 = a1 << 0xd
178992: d3 98 08                 a1 = a1 ^ a2
178995: 98 89 07                 a2 = a1 >> 0x7
178998: d3 98 08                 a1 = a1 ^ a2
179001: 97 89 11                 a2 = a1 << 0x11
179004: d3 98 08                 a1 = a1 ^ a2
179007: 3a 09 58 01 03           a2 = u64 [0x30158]
179012: 3a 0a 80 01 03           a3 = u64 [0x30180]
179017: 3e 08 70 02 03           u64 [0x30270] = a1
179022: ca 98 07                 a0 = a1 * a2
179025: 98 78 05                 a1 = a0 >> 0x5
179028: d6 a8 08                 a1 = a1 mulhu a3
179031: 98 88 07                 a1 = a1 >> 0x7
179034: 96 88 a0 86 01           a1 = a1 * 0x186a0
179039: c9 87 07                 a0 = a0 - a1
179042: 95 77 01                 a0 = a0 + 0x1
179045: 7b 17 10 01              u64 [sp + 0x110] = a0
179049: 50 20 70 0a 3b dd fd     ra = 2672, jump @2669
      :                          @12181 [@dyn 1336]
179056: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
179060: 95 17 10 01              a0 = sp + 0x110
179064: 7b 17 28 02              u64 [sp + 0x228] = a0
179068: 33 07 28 0c              a0 = 0xc28
179072: 7b 17 30 02              u64 [sp + 0x230] = a0
179076: 95 18 d0 01              a1 = sp + 0x1d0
179080: 7b 18 38 02              u64 [sp + 0x238] = a1
179084: 7b 17 40 02              u64 [sp + 0x240] = a0
179088: 33 07 58 2b 01           a0 = 0x12b58
179093: 7b 17 80 02              u64 [sp + 0x280] = a0
179097: 49 21 88 02 02           u64 [sp + 648] = 0x2
179102: 49 21 a0 02              u64 [sp + 672] = 0
179106: 95 18 28 02              a1 = sp + 0x228
179110: 7b 18 90 02              u64 [sp + 0x290] = a1
179114: 49 21 98 02 02           u64 [sp + 664] = 0x2
179119: 95 17 f8 01              a0 = sp + 0x1f8
179123: 95 18 80 02              a1 = sp + 0x280
179127: 50 20 72 0a 90 93 fd     ra = 2674, jump @1491
      :                          @12182 [@dyn 1337]
179134: 82 16 00 02              s1 = u64 [sp + 0x200]
179138: 82 1b 08 02              a4 = u64 [sp + 0x208]
179142: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
179146: 7b 17 60                 u64 [sp + 0x60] = a0
179149: 33 07 02                 a0 = 0x2
179152: 33 08                    a1 = 0
179154: 33 09                    a2 = 0
179156: 64 6a                    a3 = s1
179158: 33 00 74 0a              ra = 0xa74
179162: 0a 64                    ecalli 100 // 'log'
179164: 01                       fallthrough
      :                          @12183 [@dyn 1338]
179165: 82 1c 60                 a5 = u64 [sp + 0x60]
179168: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
179173: 55 38 00 00 f0 09        jump @12185 if a1 >=u 4293918720
      :                          @12184
179179: 28 00 26                 jump @12862
      :                          @12185
179182: 33 07 b0 02 03           a0 = 0x302b0
179187: 95 77 00 00 10           a0 = a0 + 0x100000
179192: 01                       fallthrough
      :                          @12186
179193: 82 78                    a1 = u64 [a0]
179195: c9 87 09                 a2 = a0 - a1
179198: aa 69 06                 jump @12188 if a2 == s1
      :                          @12187
179201: 28 ea 25                 jump @12862
      :                          @12188
179204: c9 c8 09                 a2 = a1 - a5
179207: 01                       fallthrough
      :                          @12189
179208: 82 7a                    a3 = u64 [a0]
179210: ab 8a ef                 jump @12186 if a3 != a1
      :                          @12190
179213: 7b 79                    u64 [a0] = a2
179215: 33 0b                    a4 = 0
179217: 01                       fallthrough
      :                          @12191
179218: ab 8a e7                 jump @12186 if a3 != a1
      :                          @12192
179221: 28 d6 25                 jump @12862
      :                          @12193 [@dyn 1339]
179224: 3a 08 70 02 03           a1 = u64 [0x30270]
179229: 97 89 0d                 a2 = a1 << 0xd
179232: d3 98 08                 a1 = a1 ^ a2
179235: 98 89 07                 a2 = a1 >> 0x7
179238: d3 98 08                 a1 = a1 ^ a2
179241: 97 89 11                 a2 = a1 << 0x11
179244: d3 98 08                 a1 = a1 ^ a2
179247: 3a 09 58 01 03           a2 = u64 [0x30158]
179252: 3a 0a 80 01 03           a3 = u64 [0x30180]
179257: 3e 08 70 02 03           u64 [0x30270] = a1
179262: ca 98 07                 a0 = a1 * a2
179265: 98 78 05                 a1 = a0 >> 0x5
179268: d6 a8 08                 a1 = a1 mulhu a3
179271: 98 88 07                 a1 = a1 >> 0x7
179274: 96 88 a0 86 01           a1 = a1 * 0x186a0
179279: c9 87 07                 a0 = a0 - a1
179282: 95 77 01                 a0 = a0 + 0x1
179285: 7b 17 10 01              u64 [sp + 0x110] = a0
179289: 50 20 78 0a a3 dc fd     ra = 2680, jump @2680
      :                          @12194 [@dyn 1340]
179296: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
179300: 95 17 10 01              a0 = sp + 0x110
179304: 7b 17 28 02              u64 [sp + 0x228] = a0
179308: 33 07 28 0c              a0 = 0xc28
179312: 7b 17 30 02              u64 [sp + 0x230] = a0
179316: 95 18 d0 01              a1 = sp + 0x1d0
179320: 7b 18 38 02              u64 [sp + 0x238] = a1
179324: 7b 17 40 02              u64 [sp + 0x240] = a0
179328: 33 07 88 2b 01           a0 = 0x12b88
179333: 7b 17 80 02              u64 [sp + 0x280] = a0
179337: 49 21 88 02 02           u64 [sp + 648] = 0x2
179342: 49 21 a0 02              u64 [sp + 672] = 0
179346: 95 18 28 02              a1 = sp + 0x228
179350: 7b 18 90 02              u64 [sp + 0x290] = a1
179354: 49 21 98 02 02           u64 [sp + 664] = 0x2
179359: 95 17 f8 01              a0 = sp + 0x1f8
179363: 95 18 80 02              a1 = sp + 0x280
179367: 50 20 7a 0a a0 92 fd     ra = 2682, jump @1491
      :                          @12195 [@dyn 1341]
179374: 82 16 00 02              s1 = u64 [sp + 0x200]
179378: 82 1b 08 02              a4 = u64 [sp + 0x208]
179382: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
179386: 7b 17 60                 u64 [sp + 0x60] = a0
179389: 33 07 02                 a0 = 0x2
179392: 33 08                    a1 = 0
179394: 33 09                    a2 = 0
179396: 64 6a                    a3 = s1
179398: 33 00 7c 0a              ra = 0xa7c
179402: 0a 64                    ecalli 100 // 'log'
179404: 01                       fallthrough
      :                          @12196 [@dyn 1342]
179405: 82 1c 60                 a5 = u64 [sp + 0x60]
179408: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
179413: 55 38 00 00 f0 09        jump @12198 if a1 >=u 4293918720
      :                          @12197
179419: 28 10 25                 jump @12862
      :                          @12198
179422: 33 07 b0 02 03           a0 = 0x302b0
179427: 95 77 00 00 10           a0 = a0 + 0x100000
179432: 01                       fallthrough
      :                          @12199
179433: 82 78                    a1 = u64 [a0]
179435: c9 87 09                 a2 = a0 - a1
179438: aa 69 06                 jump @12201 if a2 == s1
      :                          @12200
179441: 28 fa 24                 jump @12862
      :                          @12201
179444: c9 c8 09                 a2 = a1 - a5
179447: 01                       fallthrough
      :                          @12202
179448: 82 7a                    a3 = u64 [a0]
179450: ab 8a ef                 jump @12199 if a3 != a1
      :                          @12203
179453: 7b 79                    u64 [a0] = a2
179455: 33 0b                    a4 = 0
179457: 01                       fallthrough
      :                          @12204
179458: ab 8a e7                 jump @12199 if a3 != a1
      :                          @12205
179461: 28 e6 24                 jump @12862
      :                          @12206 [@dyn 1343]
179464: 3a 08 70 02 03           a1 = u64 [0x30270]
179469: 97 89 0d                 a2 = a1 << 0xd
179472: d3 98 08                 a1 = a1 ^ a2
179475: 98 89 07                 a2 = a1 >> 0x7
179478: d3 98 08                 a1 = a1 ^ a2
179481: 97 89 11                 a2 = a1 << 0x11
179484: d3 98 08                 a1 = a1 ^ a2
179487: 3a 09 58 01 03           a2 = u64 [0x30158]
179492: 3a 0a 80 01 03           a3 = u64 [0x30180]
179497: 3e 08 70 02 03           u64 [0x30270] = a1
179502: ca 98 07                 a0 = a1 * a2
179505: 98 78 05                 a1 = a0 >> 0x5
179508: d6 a8 08                 a1 = a1 mulhu a3
179511: 98 88 07                 a1 = a1 >> 0x7
179514: 96 88 a0 86 01           a1 = a1 * 0x186a0
179519: c9 87 07                 a0 = a0 - a1
179522: 95 77 01                 a0 = a0 + 0x1
179525: 7b 17 10 01              u64 [sp + 0x110] = a0
179529: 50 20 80 0a 03 dc fd     ra = 2688, jump @2690
      :                          @12207 [@dyn 1344]
179536: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
179540: 95 17 10 01              a0 = sp + 0x110
179544: 7b 17 28 02              u64 [sp + 0x228] = a0
179548: 33 07 28 0c              a0 = 0xc28
179552: 7b 17 30 02              u64 [sp + 0x230] = a0
179556: 95 17 d0 01              a0 = sp + 0x1d0
179560: 7b 17 38 02              u64 [sp + 0x238] = a0
179564: 33 07 94 0c              a0 = 0xc94
179568: 7b 17 40 02              u64 [sp + 0x240] = a0
179572: 33 07 b0 2b 01           a0 = 0x12bb0
179577: 7b 17 80 02              u64 [sp + 0x280] = a0
179581: 49 21 88 02 02           u64 [sp + 648] = 0x2
179586: 49 21 a0 02              u64 [sp + 672] = 0
179590: 95 18 28 02              a1 = sp + 0x228
179594: 7b 18 90 02              u64 [sp + 0x290] = a1
179598: 49 21 98 02 02           u64 [sp + 664] = 0x2
179603: 95 17 f8 01              a0 = sp + 0x1f8
179607: 95 18 80 02              a1 = sp + 0x280
179611: 50 20 82 0a ac 91 fd     ra = 2690, jump @1491
      :                          @12208 [@dyn 1345]
179618: 82 16 00 02              s1 = u64 [sp + 0x200]
179622: 82 1b 08 02              a4 = u64 [sp + 0x208]
179626: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
179630: 7b 17 60                 u64 [sp + 0x60] = a0
179633: 33 07 02                 a0 = 0x2
179636: 33 08                    a1 = 0
179638: 33 09                    a2 = 0
179640: 64 6a                    a3 = s1
179642: 33 00 84 0a              ra = 0xa84
179646: 0a 64                    ecalli 100 // 'log'
179648: 01                       fallthrough
      :                          @12209 [@dyn 1346]
179649: 82 1c 60                 a5 = u64 [sp + 0x60]
179652: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
179657: 55 38 00 00 f0 09        jump @12211 if a1 >=u 4293918720
      :                          @12210
179663: 28 1c 24                 jump @12862
      :                          @12211
179666: 33 07 b0 02 03           a0 = 0x302b0
179671: 95 77 00 00 10           a0 = a0 + 0x100000
179676: 01                       fallthrough
      :                          @12212
179677: 82 78                    a1 = u64 [a0]
179679: c9 87 09                 a2 = a0 - a1
179682: aa 69 06                 jump @12214 if a2 == s1
      :                          @12213
179685: 28 06 24                 jump @12862
      :                          @12214
179688: c9 c8 09                 a2 = a1 - a5
179691: 01                       fallthrough
      :                          @12215
179692: 82 7a                    a3 = u64 [a0]
179694: ab 8a ef                 jump @12212 if a3 != a1
      :                          @12216
179697: 7b 79                    u64 [a0] = a2
179699: 33 0b                    a4 = 0
179701: 01                       fallthrough
      :                          @12217
179702: ab 8a e7                 jump @12212 if a3 != a1
      :                          @12218
179705: 28 f2 23                 jump @12862
      :                          @12219 [@dyn 1347]
179708: 3a 08 70 02 03           a1 = u64 [0x30270]
179713: 97 89 0d                 a2 = a1 << 0xd
179716: d3 98 08                 a1 = a1 ^ a2
179719: 98 89 07                 a2 = a1 >> 0x7
179722: d3 98 08                 a1 = a1 ^ a2
179725: 97 89 11                 a2 = a1 << 0x11
179728: d3 98 08                 a1 = a1 ^ a2
179731: 3a 09 58 01 03           a2 = u64 [0x30158]
179736: 3a 0a 60 01 03           a3 = u64 [0x30160]
179741: 3e 08 70 02 03           u64 [0x30270] = a1
179746: ca 98 07                 a0 = a1 * a2
179749: 98 78 03                 a1 = a0 >> 0x3
179752: d6 a8 08                 a1 = a1 mulhu a3
179755: 98 88 04                 a1 = a1 >> 0x4
179758: 96 88 e8 03              a1 = a1 * 0x3e8
179762: c9 87 07                 a0 = a0 - a1
179765: 95 77 01                 a0 = a0 + 0x1
179768: 7b 17 10 01              u64 [sp + 0x110] = a0
179772: 33 00 88 0a              ra = 0xa88
179776: 33 08                    a1 = 0
179778: 33 09 01                 a2 = 0x1
179781: 28 63 dd fd              jump @2751
      :                          @12220 [@dyn 1348]
179785: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
179789: 95 17 10 01              a0 = sp + 0x110
179793: 7b 17 28 02              u64 [sp + 0x228] = a0
179797: 33 07 28 0c              a0 = 0xc28
179801: 7b 17 30 02              u64 [sp + 0x230] = a0
179805: 95 18 d0 01              a1 = sp + 0x1d0
179809: 7b 18 38 02              u64 [sp + 0x238] = a1
179813: 7b 17 40 02              u64 [sp + 0x240] = a0
179817: 33 07 f0 2b 01           a0 = 0x12bf0
179822: 7b 17 80 02              u64 [sp + 0x280] = a0
179826: 49 21 88 02 02           u64 [sp + 648] = 0x2
179831: 49 21 a0 02              u64 [sp + 672] = 0
179835: 95 18 28 02              a1 = sp + 0x228
179839: 7b 18 90 02              u64 [sp + 0x290] = a1
179843: 49 21 98 02 02           u64 [sp + 664] = 0x2
179848: 95 17 f8 01              a0 = sp + 0x1f8
179852: 95 18 80 02              a1 = sp + 0x280
179856: 50 20 8a 0a b7 90 fd     ra = 2698, jump @1491
      :                          @12221 [@dyn 1349]
179863: 82 16 00 02              s1 = u64 [sp + 0x200]
179867: 82 1b 08 02              a4 = u64 [sp + 0x208]
179871: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
179875: 7b 17 60                 u64 [sp + 0x60] = a0
179878: 33 07 02                 a0 = 0x2
179881: 33 08                    a1 = 0
179883: 33 09                    a2 = 0
179885: 64 6a                    a3 = s1
179887: 33 00 8c 0a              ra = 0xa8c
179891: 0a 64                    ecalli 100 // 'log'
179893: 01                       fallthrough
      :                          @12222 [@dyn 1350]
179894: 82 1c 60                 a5 = u64 [sp + 0x60]
179897: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
179902: 55 38 00 00 f0 09        jump @12224 if a1 >=u 4293918720
      :                          @12223
179908: 28 27 23                 jump @12862
      :                          @12224
179911: 33 07 b0 02 03           a0 = 0x302b0
179916: 95 77 00 00 10           a0 = a0 + 0x100000
179921: 01                       fallthrough
      :                          @12225
179922: 82 78                    a1 = u64 [a0]
179924: c9 87 09                 a2 = a0 - a1
179927: aa 69 06                 jump @12227 if a2 == s1
      :                          @12226
179930: 28 11 23                 jump @12862
      :                          @12227
179933: c9 c8 09                 a2 = a1 - a5
179936: 01                       fallthrough
      :                          @12228
179937: 82 7a                    a3 = u64 [a0]
179939: ab 8a ef                 jump @12225 if a3 != a1
      :                          @12229
179942: 7b 79                    u64 [a0] = a2
179944: 33 0b                    a4 = 0
179946: 01                       fallthrough
      :                          @12230
179947: ab 8a e7                 jump @12225 if a3 != a1
      :                          @12231
179950: 28 fd 22                 jump @12862
      :                          @12232 [@dyn 1351]
179953: 3a 08 70 02 03           a1 = u64 [0x30270]
179958: 97 89 0d                 a2 = a1 << 0xd
179961: d3 98 08                 a1 = a1 ^ a2
179964: 98 89 07                 a2 = a1 >> 0x7
179967: d3 98 08                 a1 = a1 ^ a2
179970: 97 89 11                 a2 = a1 << 0x11
179973: d3 98 08                 a1 = a1 ^ a2
179976: 3a 09 58 01 03           a2 = u64 [0x30158]
179981: 3a 0a 70 01 03           a3 = u64 [0x30170]
179986: 3e 08 70 02 03           u64 [0x30270] = a1
179991: ca 98 07                 a0 = a1 * a2
179994: d6 a7 08                 a1 = a0 mulhu a3
179997: 98 88 0b                 a1 = a1 >> 0xb
180000: 96 88 10 27              a1 = a1 * 0x2710
180004: c9 87 07                 a0 = a0 - a1
180007: 95 77 01                 a0 = a0 + 0x1
180010: 7b 17 10 01              u64 [sp + 0x110] = a0
180014: 50 20 90 0a 96 dc fd     ra = 2704, jump @2757
      :                          @12233 [@dyn 1352]
180021: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
180025: 95 17 10 01              a0 = sp + 0x110
180029: 7b 17 28 02              u64 [sp + 0x228] = a0
180033: 33 07 28 0c              a0 = 0xc28
180037: 7b 17 30 02              u64 [sp + 0x230] = a0
180041: 95 18 d0 01              a1 = sp + 0x1d0
180045: 7b 18 38 02              u64 [sp + 0x238] = a1
180049: 7b 17 40 02              u64 [sp + 0x240] = a0
180053: 33 07 20 2c 01           a0 = 0x12c20
180058: 7b 17 80 02              u64 [sp + 0x280] = a0
180062: 49 21 88 02 02           u64 [sp + 648] = 0x2
180067: 49 21 a0 02              u64 [sp + 672] = 0
180071: 95 18 28 02              a1 = sp + 0x228
180075: 7b 18 90 02              u64 [sp + 0x290] = a1
180079: 49 21 98 02 02           u64 [sp + 664] = 0x2
180084: 95 17 f8 01              a0 = sp + 0x1f8
180088: 95 18 80 02              a1 = sp + 0x280
180092: 50 20 92 0a cb 8f fd     ra = 2706, jump @1491
      :                          @12234 [@dyn 1353]
180099: 82 16 00 02              s1 = u64 [sp + 0x200]
180103: 82 1b 08 02              a4 = u64 [sp + 0x208]
180107: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
180111: 7b 17 60                 u64 [sp + 0x60] = a0
180114: 33 07 02                 a0 = 0x2
180117: 33 08                    a1 = 0
180119: 33 09                    a2 = 0
180121: 64 6a                    a3 = s1
180123: 33 00 94 0a              ra = 0xa94
180127: 0a 64                    ecalli 100 // 'log'
180129: 01                       fallthrough
      :                          @12235 [@dyn 1354]
180130: 82 1c 60                 a5 = u64 [sp + 0x60]
180133: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
180138: 55 38 00 00 f0 09        jump @12237 if a1 >=u 4293918720
      :                          @12236
180144: 28 3b 22                 jump @12862
      :                          @12237
180147: 33 07 b0 02 03           a0 = 0x302b0
180152: 95 77 00 00 10           a0 = a0 + 0x100000
180157: 01                       fallthrough
      :                          @12238
180158: 82 78                    a1 = u64 [a0]
180160: c9 87 09                 a2 = a0 - a1
180163: aa 69 06                 jump @12240 if a2 == s1
      :                          @12239
180166: 28 25 22                 jump @12862
      :                          @12240
180169: c9 c8 09                 a2 = a1 - a5
180172: 01                       fallthrough
      :                          @12241
180173: 82 7a                    a3 = u64 [a0]
180175: ab 8a ef                 jump @12238 if a3 != a1
      :                          @12242
180178: 7b 79                    u64 [a0] = a2
180180: 33 0b                    a4 = 0
180182: 01                       fallthrough
      :                          @12243
180183: ab 8a e7                 jump @12238 if a3 != a1
      :                          @12244
180186: 28 11 22                 jump @12862
      :                          @12245 [@dyn 1355]
180189: 3a 09 70 02 03           a2 = u64 [0x30270]
180194: 3a 07 58 01 03           a0 = u64 [0x30158]
180199: 97 9a 0d                 a3 = a2 << 0xd
180202: d3 a9 09                 a2 = a2 ^ a3
180205: 98 9a 07                 a3 = a2 >> 0x7
180208: d3 a9 09                 a2 = a2 ^ a3
180211: 97 9a 11                 a3 = a2 << 0x11
180214: d3 a9 09                 a2 = a2 ^ a3
180217: 3a 0a 78 01 03           a3 = u64 [0x30178]
180222: ca 79 0b                 a4 = a2 * a0
180225: 3e 09 70 02 03           u64 [0x30270] = a2
180230: d6 ab 09                 a2 = a4 mulhu a3
180233: c9 9b 0a                 a3 = a4 - a2
180236: 98 aa 01                 a3 = a3 >> 0x1
180239: c8 a9 09                 a2 = a2 + a3
180242: 98 99 09                 a2 = a2 >> 0x9
180245: 96 99 e7 03              a2 = a2 * 0x3e7
180249: c9 9b 0b                 a4 = a4 - a2
180252: 86 b9 01                 a2 = a4 | 0x1
180255: 95 99 02                 a2 = a2 + 0x2
180258: 7b 19 b8 01              u64 [sp + 0x1b8] = a2
180262: 3a 09 70 02 03           a2 = u64 [0x30270]
180267: 97 9a 0d                 a3 = a2 << 0xd
180270: d3 a9 09                 a2 = a2 ^ a3
180273: 98 9a 07                 a3 = a2 >> 0x7
180276: d3 a9 09                 a2 = a2 ^ a3
180279: 97 9a 11                 a3 = a2 << 0x11
180282: d3 a9 09                 a2 = a2 ^ a3
180285: 3e 09 70 02 03           u64 [0x30270] = a2
180290: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
180294: 52 08 06                 jump @12247 if a1 != 0
      :                          @12246
180297: 28 09 33                 jump @13226
      :                          @12247
180300: ca 79 07                 a0 = a2 * a0
180303: cd 87 07                 a0 = a0 %u a1
180306: 7b 17 10 01              u64 [sp + 0x110] = a0
180310: 59 07 06                 jump @12249 if a0 >=s 0
      :                          @12248
180313: 28 30 33                 jump @13277
      :                          @12249
180316: 59 08 06                 jump @12251 if a1 >=s 0
      :                          @12250
180319: 28 2a 33                 jump @13277
      :                          @12251
180322: 50 20 98 0a 9b cb fd     ra = 2712, jump @2425
      :                          @12252 [@dyn 1356]
180329: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
180333: 95 17 10 01              a0 = sp + 0x110
180337: 7b 17 80 02              u64 [sp + 0x280] = a0
180341: 33 07 94 0c              a0 = 0xc94
180345: 7b 17 88 02              u64 [sp + 0x288] = a0
180349: 95 18 b8 01              a1 = sp + 0x1b8
180353: 7b 18 90 02              u64 [sp + 0x290] = a1
180357: 33 08 28 0c              a1 = 0xc28
180361: 7b 18 98 02              u64 [sp + 0x298] = a1
180365: 95 18 d0 01              a1 = sp + 0x1d0
180369: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
180373: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
180377: 33 07 40 2c 01           a0 = 0x12c40
180382: 7b 17 28 02              u64 [sp + 0x228] = a0
180386: 49 21 30 02 03           u64 [sp + 560] = 0x3
180391: 49 21 48 02              u64 [sp + 584] = 0
180395: 95 18 80 02              a1 = sp + 0x280
180399: 7b 18 38 02              u64 [sp + 0x238] = a1
180403: 49 21 40 02 03           u64 [sp + 576] = 0x3
180408: 95 17 f8 01              a0 = sp + 0x1f8
180412: 95 18 28 02              a1 = sp + 0x228
180416: 50 20 9a 0a 87 8e fd     ra = 2714, jump @1491
      :                          @12253 [@dyn 1357]
180423: 82 16 00 02              s1 = u64 [sp + 0x200]
180427: 82 1b 08 02              a4 = u64 [sp + 0x208]
180431: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
180435: 7b 17 60                 u64 [sp + 0x60] = a0
180438: 33 07 02                 a0 = 0x2
180441: 33 08                    a1 = 0
180443: 33 09                    a2 = 0
180445: 64 6a                    a3 = s1
180447: 33 00 9c 0a              ra = 0xa9c
180451: 0a 64                    ecalli 100 // 'log'
180453: 01                       fallthrough
      :                          @12254 [@dyn 1358]
180454: 82 1c 60                 a5 = u64 [sp + 0x60]
180457: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
180462: 55 38 00 00 f0 09        jump @12256 if a1 >=u 4293918720
      :                          @12255
180468: 28 f7 20                 jump @12862
      :                          @12256
180471: 33 07 b0 02 03           a0 = 0x302b0
180476: 95 77 00 00 10           a0 = a0 + 0x100000
180481: 01                       fallthrough
      :                          @12257
180482: 82 78                    a1 = u64 [a0]
180484: c9 87 09                 a2 = a0 - a1
180487: aa 69 06                 jump @12259 if a2 == s1
      :                          @12258
180490: 28 e1 20                 jump @12862
      :                          @12259
180493: c9 c8 09                 a2 = a1 - a5
180496: 01                       fallthrough
      :                          @12260
180497: 82 7a                    a3 = u64 [a0]
180499: ab 8a ef                 jump @12257 if a3 != a1
      :                          @12261
180502: 7b 79                    u64 [a0] = a2
180504: 33 0b                    a4 = 0
180506: 01                       fallthrough
      :                          @12262
180507: ab 8a e7                 jump @12257 if a3 != a1
      :                          @12263
180510: 28 cd 20                 jump @12862
      :                          @12264 [@dyn 1359]
180513: 3a 08 70 02 03           a1 = u64 [0x30270]
180518: 97 89 0d                 a2 = a1 << 0xd
180521: d3 98 08                 a1 = a1 ^ a2
180524: 98 89 07                 a2 = a1 >> 0x7
180527: d3 98 08                 a1 = a1 ^ a2
180530: 97 89 11                 a2 = a1 << 0x11
180533: d3 98 08                 a1 = a1 ^ a2
180536: 3a 09 58 01 03           a2 = u64 [0x30158]
180541: 3e 08 70 02 03           u64 [0x30270] = a1
180546: 3a 0a 70 02 03           a3 = u64 [0x30270]
180551: ca 98 08                 a1 = a1 * a2
180554: 97 ab 0d                 a4 = a3 << 0xd
180557: d3 ba 0a                 a3 = a3 ^ a4
180560: 98 ab 07                 a4 = a3 >> 0x7
180563: d3 ba 0a                 a3 = a3 ^ a4
180566: 97 ab 11                 a4 = a3 << 0x11
180569: d3 ba 0a                 a3 = a3 ^ a4
180572: ca 9a 09                 a2 = a3 * a2
180575: 3a 0b 60 01 03           a4 = u64 [0x30160]
180580: 3e 0a 70 02 03           u64 [0x30270] = a3
180585: 98 87 03                 a0 = a1 >> 0x3
180588: d6 b7 07                 a0 = a0 mulhu a4
180591: 98 77 04                 a0 = a0 >> 0x4
180594: 96 77 e8 03              a0 = a0 * 0x3e8
180598: c9 78 08                 a1 = a1 - a0
180601: 86 88 01                 a1 = a1 | 0x1
180604: 95 88 02                 a1 = a1 + 0x2
180607: cd 89 07                 a0 = a2 %u a1
180610: 50 20 a0 0a 9d dc fd     ra = 2720, jump @2831
      :                          @12265 [@dyn 1360]
180617: 52 07 06                 jump @12267 if a0 != 0
      :                          @12266
180620: 28 de 28                 jump @13012
      :                          @12267
180623: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
180627: 95 17 d0 01              a0 = sp + 0x1d0
180631: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
180635: 33 07 28 0c              a0 = 0xc28
180639: 7b 17 00 02              u64 [sp + 0x200] = a0
180643: 33 07 48 30 01           a0 = 0x13048
180648: 7b 17 80 02              u64 [sp + 0x280] = a0
180652: 49 21 88 02 01           u64 [sp + 648] = 0x1
180657: 49 21 a0 02              u64 [sp + 672] = 0
180661: 95 18 f8 01              a1 = sp + 0x1f8
180665: 7b 18 90 02              u64 [sp + 0x290] = a1
180669: 49 21 98 02 01           u64 [sp + 664] = 0x1
180674: 95 17 28 02              a0 = sp + 0x228
180678: 95 18 80 02              a1 = sp + 0x280
180682: 50 20 a2 0a 7d 8d fd     ra = 2722, jump @1491
      :                          @12268 [@dyn 1361]
180689: 82 16 30 02              s1 = u64 [sp + 0x230]
180693: 82 1b 38 02              a4 = u64 [sp + 0x238]
180697: 82 17 28 02              a0 = u64 [sp + 0x228]
180701: 7b 17 60                 u64 [sp + 0x60] = a0
180704: 33 07 02                 a0 = 0x2
180707: 33 08                    a1 = 0
180709: 33 09                    a2 = 0
180711: 64 6a                    a3 = s1
180713: 33 00 a4 0a              ra = 0xaa4
180717: 0a 64                    ecalli 100 // 'log'
180719: 01                       fallthrough
      :                          @12269 [@dyn 1362]
180720: 82 1c 60                 a5 = u64 [sp + 0x60]
180723: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
180728: 55 38 00 00 f0 09        jump @12271 if a1 >=u 4293918720
      :                          @12270
180734: 28 ed 1f                 jump @12862
      :                          @12271
180737: 33 07 b0 02 03           a0 = 0x302b0
180742: 95 77 00 00 10           a0 = a0 + 0x100000
180747: 01                       fallthrough
      :                          @12272
180748: 82 78                    a1 = u64 [a0]
180750: c9 87 09                 a2 = a0 - a1
180753: aa 69 06                 jump @12274 if a2 == s1
      :                          @12273
180756: 28 d7 1f                 jump @12862
      :                          @12274
180759: c9 c8 09                 a2 = a1 - a5
180762: 01                       fallthrough
      :                          @12275
180763: 82 7a                    a3 = u64 [a0]
180765: ab 8a ef                 jump @12272 if a3 != a1
      :                          @12276
180768: 7b 79                    u64 [a0] = a2
180770: 33 0b                    a4 = 0
180772: 01                       fallthrough
      :                          @12277
180773: ab 8a e7                 jump @12272 if a3 != a1
      :                          @12278
180776: 28 c3 1f                 jump @12862
      :                          @12279 [@dyn 1363]
180779: 3a 08 70 02 03           a1 = u64 [0x30270]
180784: 97 89 0d                 a2 = a1 << 0xd
180787: d3 98 08                 a1 = a1 ^ a2
180790: 98 89 07                 a2 = a1 >> 0x7
180793: d3 98 08                 a1 = a1 ^ a2
180796: 97 89 11                 a2 = a1 << 0x11
180799: d3 98 08                 a1 = a1 ^ a2
180802: 3a 09 58 01 03           a2 = u64 [0x30158]
180807: 3a 0a 70 01 03           a3 = u64 [0x30170]
180812: 3e 08 70 02 03           u64 [0x30270] = a1
180817: ca 98 07                 a0 = a1 * a2
180820: d6 a7 08                 a1 = a0 mulhu a3
180823: 98 88 0b                 a1 = a1 >> 0xb
180826: 33 09 10 27              a2 = 0x2710
180830: ca 98 08                 a1 = a1 * a2
180833: c9 87 07                 a0 = a0 - a1
180836: 95 77 02                 a0 = a0 + 0x2
180839: 7b 17 10 01              u64 [sp + 0x110] = a0
180843: 33 00 a8 0a              ra = 0xaa8
180847: 95 11 f8                 sp = sp + 0xfffffffffffffff8
180850: 7b 15                    u64 [sp] = s0
180852: 33 03 02                 t1 = 0x2
180855: 33 04 e8 03              t2 = 0x3e8
180859: 33 02 09                 t0 = 0x9
180862: 33 0b 02                 a4 = 0x2
180865: 33 0c 02                 a5 = 0x2
180868: 28 3b 6c fe              jump @6040
      :                          @12280 [@dyn 1364]
180872: 52 07 06                 jump @12282 if a0 != 0
      :                          @12281
180875: 28 65 28                 jump @13022
      :                          @12282
180878: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
180882: 95 17 10 01              a0 = sp + 0x110
180886: 7b 17 28 02              u64 [sp + 0x228] = a0
180890: 33 07 28 0c              a0 = 0xc28
180894: 7b 17 30 02              u64 [sp + 0x230] = a0
180898: 95 18 d0 01              a1 = sp + 0x1d0
180902: 7b 18 38 02              u64 [sp + 0x238] = a1
180906: 7b 17 40 02              u64 [sp + 0x240] = a0
180910: 33 07 c0 2c 01           a0 = 0x12cc0
180915: 7b 17 80 02              u64 [sp + 0x280] = a0
180919: 49 21 88 02 02           u64 [sp + 648] = 0x2
180924: 49 21 a0 02              u64 [sp + 672] = 0
180928: 95 18 28 02              a1 = sp + 0x228
180932: 7b 18 90 02              u64 [sp + 0x290] = a1
180936: 49 21 98 02 02           u64 [sp + 664] = 0x2
180941: 95 17 f8 01              a0 = sp + 0x1f8
180945: 95 18 80 02              a1 = sp + 0x280
180949: 50 20 aa 0a 72 8c fd     ra = 2730, jump @1491
      :                          @12283 [@dyn 1365]
180956: 82 16 00 02              s1 = u64 [sp + 0x200]
180960: 82 1b 08 02              a4 = u64 [sp + 0x208]
180964: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
180968: 7b 17 60                 u64 [sp + 0x60] = a0
180971: 33 07 02                 a0 = 0x2
180974: 33 08                    a1 = 0
180976: 33 09                    a2 = 0
180978: 64 6a                    a3 = s1
180980: 33 00 ac 0a              ra = 0xaac
180984: 0a 64                    ecalli 100 // 'log'
180986: 01                       fallthrough
      :                          @12284 [@dyn 1366]
180987: 82 1c 60                 a5 = u64 [sp + 0x60]
180990: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
180995: 55 38 00 00 f0 09        jump @12286 if a1 >=u 4293918720
      :                          @12285
181001: 28 e2 1e                 jump @12862
      :                          @12286
181004: 33 07 b0 02 03           a0 = 0x302b0
181009: 95 77 00 00 10           a0 = a0 + 0x100000
181014: 01                       fallthrough
      :                          @12287
181015: 82 78                    a1 = u64 [a0]
181017: c9 87 09                 a2 = a0 - a1
181020: aa 69 06                 jump @12289 if a2 == s1
      :                          @12288
181023: 28 cc 1e                 jump @12862
      :                          @12289
181026: c9 c8 09                 a2 = a1 - a5
181029: 01                       fallthrough
      :                          @12290
181030: 82 7a                    a3 = u64 [a0]
181032: ab 8a ef                 jump @12287 if a3 != a1
      :                          @12291
181035: 7b 79                    u64 [a0] = a2
181037: 33 0b                    a4 = 0
181039: 01                       fallthrough
      :                          @12292
181040: ab 8a e7                 jump @12287 if a3 != a1
      :                          @12293
181043: 28 b8 1e                 jump @12862
      :                          @12294 [@dyn 1367]
181046: 3a 08 70 02 03           a1 = u64 [0x30270]
181051: 97 89 0d                 a2 = a1 << 0xd
181054: d3 89 09                 a2 = a2 ^ a1
181057: 98 9a 07                 a3 = a2 >> 0x7
181060: 3a 08 58 01 03           a1 = u64 [0x30158]
181065: d3 a9 09                 a2 = a2 ^ a3
181068: 97 9a 11                 a3 = a2 << 0x11
181071: d3 a9 09                 a2 = a2 ^ a3
181074: ca 89 0a                 a3 = a2 * a1
181077: 3a 0b 68 01 03           a4 = u64 [0x30168]
181082: 3e 09 70 02 03           u64 [0x30270] = a2
181087: 98 a9 01                 a2 = a3 >> 0x1
181090: d6 b9 09                 a2 = a2 mulhu a4
181093: 98 99 04                 a2 = a2 >> 0x4
181096: 33 0c 32                 a5 = 0x32
181099: ca c9 09                 a2 = a2 * a5
181102: c9 9a 0a                 a3 = a3 - a2
181105: 95 aa 01                 a3 = a3 + 0x1
181108: 7b 1a b8 01              u64 [sp + 0x1b8] = a3
181112: 3a 09 70 02 03           a2 = u64 [0x30270]
181117: 97 9a 0d                 a3 = a2 << 0xd
181120: d3 a9 09                 a2 = a2 ^ a3
181123: 98 9a 07                 a3 = a2 >> 0x7
181126: d3 a9 09                 a2 = a2 ^ a3
181129: 97 9a 11                 a3 = a2 << 0x11
181132: d3 a9 09                 a2 = a2 ^ a3
181135: ca 89 0a                 a3 = a2 * a1
181138: 3e 09 70 02 03           u64 [0x30270] = a2
181143: 98 a7 01                 a0 = a3 >> 0x1
181146: d6 b7 07                 a0 = a0 mulhu a4
181149: 98 77 04                 a0 = a0 >> 0x4
181152: ca c7 07                 a0 = a0 * a5
181155: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
181159: c9 7a 09                 a2 = a3 - a0
181162: 95 99 01                 a2 = a2 + 0x1
181165: 7b 19 10 01              u64 [sp + 0x110] = a2
181169: 95 17 f8 01              a0 = sp + 0x1f8
181173: 95 16 f8 01              s1 = sp + 0x1f8
181177: 50 20 b0 0a 8f 13 fe     ra = 2736, jump @4147
      :                          @12295 [@dyn 1368]
181184: 95 17 b8 01              a0 = sp + 0x1b8
181188: 7b 17 80 02              u64 [sp + 0x280] = a0
181192: 33 07 28 0c              a0 = 0xc28
181196: 7b 17 88 02              u64 [sp + 0x288] = a0
181200: 95 18 10 01              a1 = sp + 0x110
181204: 7b 18 90 02              u64 [sp + 0x290] = a1
181208: 7b 17 98 02              u64 [sp + 0x298] = a0
181212: 7b 16 a0 02              u64 [sp + 0x2a0] = s1
181216: 33 07 ce 01              a0 = 0x1ce
181220: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
181224: 33 07 f8 2c 01           a0 = 0x12cf8
181229: 7b 17 28 02              u64 [sp + 0x228] = a0
181233: 49 21 30 02 03           u64 [sp + 560] = 0x3
181238: 49 21 48 02              u64 [sp + 584] = 0
181242: 95 18 80 02              a1 = sp + 0x280
181246: 7b 18 38 02              u64 [sp + 0x238] = a1
181250: 49 21 40 02 03           u64 [sp + 576] = 0x3
181255: 95 17 d0 01              a0 = sp + 0x1d0
181259: 95 18 28 02              a1 = sp + 0x228
181263: 50 20 b2 0a 38 8b fd     ra = 2738, jump @1491
      :                          @12296 [@dyn 1369]
181270: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
181274: 51 07 2c                 jump @12303 if a0 == 0
      :                          @12297
181277: 56 37 00 00 10 29        jump @12303 if a0 >u 1048576
      :                          @12298
181283: 82 18 00 02              a1 = u64 [sp + 0x200]
181287: 33 0a b0 02 03           a3 = 0x302b0
181292: 95 a9 00 00 10           a2 = a3 + 0x100000
181297: 01                       fallthrough
      :                          @12299
181298: 82 9a                    a3 = u64 [a2]
181300: c9 a9 0b                 a4 = a2 - a3
181303: ab 8b 0f                 jump @12303 if a4 != a1
      :                          @12300
181306: c9 7a 0b                 a4 = a3 - a0
181309: 01                       fallthrough
      :                          @12301
181310: 82 9c                    a5 = u64 [a2]
181312: ab ac f2                 jump @12299 if a5 != a3
      :                          @12302
181315: 7b 9b                    u64 [a2] = a4
181317: 01                       fallthrough
      :                          @12303
181318: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
181322: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
181326: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
181330: 7b 17 60                 u64 [sp + 0x60] = a0
181333: 33 07 02                 a0 = 0x2
181336: 33 08                    a1 = 0
181338: 33 09                    a2 = 0
181340: 64 6a                    a3 = s1
181342: 33 00 b4 0a              ra = 0xab4
181346: 0a 64                    ecalli 100 // 'log'
181348: 01                       fallthrough
      :                          @12304 [@dyn 1370]
181349: 82 1c 60                 a5 = u64 [sp + 0x60]
181352: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
181357: 55 38 00 00 f0 09        jump @12306 if a1 >=u 4293918720
      :                          @12305
181363: 28 78 1d                 jump @12862
      :                          @12306
181366: 33 07 b0 02 03           a0 = 0x302b0
181371: 95 77 00 00 10           a0 = a0 + 0x100000
181376: 01                       fallthrough
      :                          @12307
181377: 82 78                    a1 = u64 [a0]
181379: c9 87 09                 a2 = a0 - a1
181382: aa 69 06                 jump @12309 if a2 == s1
      :                          @12308
181385: 28 62 1d                 jump @12862
      :                          @12309
181388: c9 c8 09                 a2 = a1 - a5
181391: 01                       fallthrough
      :                          @12310
181392: 82 7a                    a3 = u64 [a0]
181394: ab 8a ef                 jump @12307 if a3 != a1
      :                          @12311
181397: 7b 79                    u64 [a0] = a2
181399: 33 0b                    a4 = 0
181401: 01                       fallthrough
      :                          @12312
181402: ab 8a e7                 jump @12307 if a3 != a1
      :                          @12313
181405: 28 4e 1d                 jump @12862
      :                          @12314 [@dyn 1371]
181408: 3a 08 70 02 03           a1 = u64 [0x30270]
181413: 97 89 0d                 a2 = a1 << 0xd
181416: d3 98 08                 a1 = a1 ^ a2
181419: 98 89 07                 a2 = a1 >> 0x7
181422: d3 98 08                 a1 = a1 ^ a2
181425: 97 89 11                 a2 = a1 << 0x11
181428: d3 98 08                 a1 = a1 ^ a2
181431: 3a 09 58 01 03           a2 = u64 [0x30158]
181436: 3a 0a 60 01 03           a3 = u64 [0x30160]
181441: 3e 08 70 02 03           u64 [0x30270] = a1
181446: ca 98 07                 a0 = a1 * a2
181449: 98 78 03                 a1 = a0 >> 0x3
181452: d6 a8 08                 a1 = a1 mulhu a3
181455: 98 88 04                 a1 = a1 >> 0x4
181458: 96 88 e8 03              a1 = a1 * 0x3e8
181462: c9 87 07                 a0 = a0 - a1
181465: 86 77 01                 a0 = a0 | 0x1
181468: 95 77 02                 a0 = a0 + 0x2
181471: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
181475: 50 20 b8 0a 0d db fd     ra = 2744, jump @2866
      :                          @12315 [@dyn 1372]
181482: 78 17 10 01              u8 [sp + 0x110] = a0
181486: 95 17 d0 01              a0 = sp + 0x1d0
181490: 7b 17 28 02              u64 [sp + 0x228] = a0
181494: 33 07 28 0c              a0 = 0xc28
181498: 7b 17 30 02              u64 [sp + 0x230] = a0
181502: 95 17 10 01              a0 = sp + 0x110
181506: 7b 17 38 02              u64 [sp + 0x238] = a0
181510: 33 07 80 0c              a0 = 0xc80
181514: 7b 17 40 02              u64 [sp + 0x240] = a0
181518: 33 07 40 2d 01           a0 = 0x12d40
181523: 7b 17 80 02              u64 [sp + 0x280] = a0
181527: 49 21 88 02 02           u64 [sp + 648] = 0x2
181532: 49 21 a0 02              u64 [sp + 672] = 0
181536: 95 18 28 02              a1 = sp + 0x228
181540: 7b 18 90 02              u64 [sp + 0x290] = a1
181544: 49 21 98 02 02           u64 [sp + 664] = 0x2
181549: 95 17 f8 01              a0 = sp + 0x1f8
181553: 95 18 80 02              a1 = sp + 0x280
181557: 50 20 ba 0a 12 8a fd     ra = 2746, jump @1491
      :                          @12316 [@dyn 1373]
181564: 82 16 00 02              s1 = u64 [sp + 0x200]
181568: 82 1b 08 02              a4 = u64 [sp + 0x208]
181572: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
181576: 7b 17 60                 u64 [sp + 0x60] = a0
181579: 33 07 02                 a0 = 0x2
181582: 33 08                    a1 = 0
181584: 33 09                    a2 = 0
181586: 64 6a                    a3 = s1
181588: 33 00 bc 0a              ra = 0xabc
181592: 0a 64                    ecalli 100 // 'log'
181594: 01                       fallthrough
      :                          @12317 [@dyn 1374]
181595: 82 1c 60                 a5 = u64 [sp + 0x60]
181598: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
181603: 55 38 00 00 f0 09        jump @12319 if a1 >=u 4293918720
      :                          @12318
181609: 28 82 1c                 jump @12862
      :                          @12319
181612: 33 07 b0 02 03           a0 = 0x302b0
181617: 95 77 00 00 10           a0 = a0 + 0x100000
181622: 01                       fallthrough
      :                          @12320
181623: 82 78                    a1 = u64 [a0]
181625: c9 87 09                 a2 = a0 - a1
181628: aa 69 06                 jump @12322 if a2 == s1
      :                          @12321
181631: 28 6c 1c                 jump @12862
      :                          @12322
181634: c9 c8 09                 a2 = a1 - a5
181637: 01                       fallthrough
      :                          @12323
181638: 82 7a                    a3 = u64 [a0]
181640: ab 8a ef                 jump @12320 if a3 != a1
      :                          @12324
181643: 7b 79                    u64 [a0] = a2
181645: 33 0b                    a4 = 0
181647: 01                       fallthrough
      :                          @12325
181648: ab 8a e7                 jump @12320 if a3 != a1
      :                          @12326
181651: 28 58 1c                 jump @12862
      :                          @12327 [@dyn 1375]
181654: 3a 09 70 02 03           a2 = u64 [0x30270]
181659: 3a 07 58 01 03           a0 = u64 [0x30158]
181664: 97 9a 0d                 a3 = a2 << 0xd
181667: d3 a9 09                 a2 = a2 ^ a3
181670: 98 9a 07                 a3 = a2 >> 0x7
181673: d3 a9 09                 a2 = a2 ^ a3
181676: 97 9a 11                 a3 = a2 << 0x11
181679: d3 a9 09                 a2 = a2 ^ a3
181682: ca 79 0a                 a3 = a2 * a0
181685: 3a 0b 68 01 03           a4 = u64 [0x30168]
181690: 3e 09 70 02 03           u64 [0x30270] = a2
181695: 98 a9 01                 a2 = a3 >> 0x1
181698: d6 b9 09                 a2 = a2 mulhu a4
181701: 98 99 04                 a2 = a2 >> 0x4
181704: 96 99 32                 a2 = a2 * 0x32
181707: c9 9a 0a                 a3 = a3 - a2
181710: 86 a9 01                 a2 = a3 | 0x1
181713: 95 99 02                 a2 = a2 + 0x2
181716: 7b 19 00 01              u64 [sp + 0x100] = a2
181720: 3a 09 70 02 03           a2 = u64 [0x30270]
181725: 97 9a 0d                 a3 = a2 << 0xd
181728: d3 a9 09                 a2 = a2 ^ a3
181731: 98 9a 07                 a3 = a2 >> 0x7
181734: d3 a9 09                 a2 = a2 ^ a3
181737: 97 9a 11                 a3 = a2 << 0x11
181740: d3 a9 09                 a2 = a2 ^ a3
181743: 3e 09 70 02 03           u64 [0x30270] = a2
181748: 82 1a 00 01              a3 = u64 [sp + 0x100]
181752: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
181755: 52 0a 06                 jump @12329 if a3 != 0
      :                          @12328
181758: 28 54 2d                 jump @13226
      :                          @12329
181761: ca 79 09                 a2 = a2 * a0
181764: cd a9 09                 a2 = a2 %u a3
181767: 95 99 01                 a2 = a2 + 0x1
181770: 7b 19 a0 01              u64 [sp + 0x1a0] = a2
181774: 3a 09 70 02 03           a2 = u64 [0x30270]
181779: 97 9a 0d                 a3 = a2 << 0xd
181782: d3 a9 09                 a2 = a2 ^ a3
181785: 98 9a 07                 a3 = a2 >> 0x7
181788: d3 a9 09                 a2 = a2 ^ a3
181791: 97 9a 11                 a3 = a2 << 0x11
181794: d3 a9 09                 a2 = a2 ^ a3
181797: 3e 09 70 02 03           u64 [0x30270] = a2
181802: 82 18 00 01              a1 = u64 [sp + 0x100]
181806: 52 08 06                 jump @12331 if a1 != 0
      :                          @12330
181809: 28 21 2d                 jump @13226
      :                          @12331
181812: ca 79 09                 a2 = a2 * a0
181815: cd 89 08                 a1 = a2 %u a1
181818: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
181822: 3a 09 70 02 03           a2 = u64 [0x30270]
181827: 97 9a 0d                 a3 = a2 << 0xd
181830: d3 a9 09                 a2 = a2 ^ a3
181833: 98 9a 07                 a3 = a2 >> 0x7
181836: d3 a9 09                 a2 = a2 ^ a3
181839: 97 9a 11                 a3 = a2 << 0x11
181842: d3 9a 0a                 a3 = a3 ^ a2
181845: 3e 0a 70 02 03           u64 [0x30270] = a3
181850: 82 1b 00 01              a4 = u64 [sp + 0x100]
181854: 52 0b 06                 jump @12333 if a4 != 0
      :                          @12332
181857: 28 f1 2c                 jump @13226
      :                          @12333
181860: 82 18 a0 01              a1 = u64 [sp + 0x1a0]
181864: 82 19 b8 01              a2 = u64 [sp + 0x1b8]
181868: ca 7a 07                 a0 = a3 * a0
181871: cd b7 0a                 a3 = a0 %u a4
181874: 7b 1a 10 01              u64 [sp + 0x110] = a3
181878: 95 17 f8 01              a0 = sp + 0x1f8
181882: 95 16 f8 01              s1 = sp + 0x1f8
181886: 33 00 c0 0a              ra = 0xac0
181890: 95 11 a8                 sp = sp + 0xffffffffffffffa8
181893: 7b 10 50                 u64 [sp + 0x50] = ra
181896: 7b 15 48                 u64 [sp + 0x48] = s0
181899: 7b 16 40                 u64 [sp + 0x40] = s1
181902: 64 b6                    s1 = a4
181904: 7b 1a 18                 u64 [sp + 0x18] = a3
181907: 7b 19 20                 u64 [sp + 0x20] = a2
181910: 64 85                    s0 = a1
181912: 7b 17 10                 u64 [sp + 0x10] = a0
181915: 97 87 01                 a0 = a1 << 0x1
181918: 98 88 3f                 a1 = a1 >> 0x3f
181921: 64 b9                    a2 = a4
181923: 33 00 3a 04              ra = 0x43a
181927: 28 06 43                 jump @13633
      :                          @12334 [@dyn 1376]
181930: 95 17 a0 01              a0 = sp + 0x1a0
181934: 7b 17 80 02              u64 [sp + 0x280] = a0
181938: 33 07 28 0c              a0 = 0xc28
181942: 7b 17 88 02              u64 [sp + 0x288] = a0
181946: 95 18 b8 01              a1 = sp + 0x1b8
181950: 7b 18 90 02              u64 [sp + 0x290] = a1
181954: 7b 17 98 02              u64 [sp + 0x298] = a0
181958: 95 18 10 01              a1 = sp + 0x110
181962: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
181966: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
181970: 95 18 00 01              a1 = sp + 0x100
181974: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
181978: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
181982: 7b 16 c0 02              u64 [sp + 0x2c0] = s1
181986: 33 07 20 02              a0 = 0x220
181990: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
181994: 33 07 78 2d 01           a0 = 0x12d78
181999: 7b 17 28 02              u64 [sp + 0x228] = a0
182003: 49 21 30 02 05           u64 [sp + 560] = 0x5
182008: 49 21 48 02              u64 [sp + 584] = 0
182012: 95 18 80 02              a1 = sp + 0x280
182016: 7b 18 38 02              u64 [sp + 0x238] = a1
182020: 49 21 40 02 05           u64 [sp + 576] = 0x5
182025: 95 17 d0 01              a0 = sp + 0x1d0
182029: 95 18 28 02              a1 = sp + 0x228
182033: 50 20 c2 0a 36 88 fd     ra = 2754, jump @1491
      :                          @12335 [@dyn 1377]
182040: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
182044: 51 08 2f                 jump @12342 if a1 == 0
      :                          @12336
182047: 56 38 00 00 02 2c        jump @12342 if a1 >u 131072
      :                          @12337
182053: 82 17 00 02              a0 = u64 [sp + 0x200]
182057: 97 88 03                 a1 = a1 << 0x3
182060: 33 09 b0 02 03           a2 = 0x302b0
182065: 95 99 00 00 10           a2 = a2 + 0x100000
182070: 01                       fallthrough
      :                          @12338
182071: 82 9a                    a3 = u64 [a2]
182073: c9 a9 0b                 a4 = a2 - a3
182076: ab 7b 0f                 jump @12342 if a4 != a0
      :                          @12339
182079: c9 8a 0b                 a4 = a3 - a1
182082: 01                       fallthrough
      :                          @12340
182083: 82 9c                    a5 = u64 [a2]
182085: ab ac f2                 jump @12338 if a5 != a3
      :                          @12341
182088: 7b 9b                    u64 [a2] = a4
182090: 01                       fallthrough
      :                          @12342
182091: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
182095: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
182099: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
182103: 7b 17 60                 u64 [sp + 0x60] = a0
182106: 33 07 02                 a0 = 0x2
182109: 33 08                    a1 = 0
182111: 33 09                    a2 = 0
182113: 64 6a                    a3 = s1
182115: 33 00 c4 0a              ra = 0xac4
182119: 0a 64                    ecalli 100 // 'log'
182121: 01                       fallthrough
      :                          @12343 [@dyn 1378]
182122: 82 1c 60                 a5 = u64 [sp + 0x60]
182125: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
182130: 55 38 00 00 f0 09        jump @12345 if a1 >=u 4293918720
      :                          @12344
182136: 28 73 1a                 jump @12862
      :                          @12345
182139: 33 07 b0 02 03           a0 = 0x302b0
182144: 95 77 00 00 10           a0 = a0 + 0x100000
182149: 01                       fallthrough
      :                          @12346
182150: 82 78                    a1 = u64 [a0]
182152: c9 87 09                 a2 = a0 - a1
182155: aa 69 06                 jump @12348 if a2 == s1
      :                          @12347
182158: 28 5d 1a                 jump @12862
      :                          @12348
182161: c9 c8 09                 a2 = a1 - a5
182164: 01                       fallthrough
      :                          @12349
182165: 82 7a                    a3 = u64 [a0]
182167: ab 8a ef                 jump @12346 if a3 != a1
      :                          @12350
182170: 7b 79                    u64 [a0] = a2
182172: 33 0b                    a4 = 0
182174: 01                       fallthrough
      :                          @12351
182175: ab 8a e7                 jump @12346 if a3 != a1
      :                          @12352
182178: 28 49 1a                 jump @12862
      :                          @12353 [@dyn 1379]
182181: 95 17 80 02              a0 = sp + 0x280
182185: 33 08 08                 a1 = 0x8
182188: 50 20 c8 0a 04 96 fd     ra = 2760, jump @1776
      :                          @12354 [@dyn 1380]
182195: 95 17 f8 01              a0 = sp + 0x1f8
182199: 95 18 80 02              a1 = sp + 0x280
182203: 33 09 08                 a2 = 0x8
182206: 50 20 ca 0a 13 9d fd     ra = 2762, jump @1895
      :                          @12355 [@dyn 1381]
182213: 49 11 60                 u64 [sp + 96] = 0
182216: 33 07                    a0 = 0
182218: 33 04 01                 t2 = 0x1
182221: 33 0b 70 02 03           a4 = 0x30270
182226: 33 00 18                 ra = 0x18
182229: 28 18                    jump @12358
      :                          @12356
182231: 95 77 01                 a0 = a0 + 0x1
182234: 95 44 01                 t2 = t2 + 0x1
182237: 82 18 60                 a1 = u64 [sp + 0x60]
182240: 95 88 18                 a1 = a1 + 0x18
182243: 7b 18 60                 u64 [sp + 0x60] = a1
182246: 52 17 08 07              jump @12358 if a0 != 8
      :                          @12357
182250: 28 4c 19                 jump @12852
      :                          @12358
182253: 56 17 06 ea              jump @12356 if a0 >u 6
      :                          @12359
182257: 82 16 60                 s1 = u64 [sp + 0x60]
182260: 64 49                    a2 = t2
182262: 01                       fallthrough
      :                          @12360
182263: 3a 08 70 02 03           a1 = u64 [0x30270]
182268: 97 8a 0d                 a3 = a1 << 0xd
182271: d3 a8 08                 a1 = a1 ^ a3
182274: 98 8c 07                 a5 = a1 >> 0x7
182277: d3 8c 0c                 a5 = a5 ^ a1
182280: 97 c8 11                 a1 = a5 << 0x11
182283: d3 c8 08                 a1 = a1 ^ a5
182286: 3e 08 70 02 03           u64 [0x30270] = a1
182291: 82 18 08 02              a1 = u64 [sp + 0x208]
182295: ac 87 06                 jump @12362 if a0 <u a1
      :                          @12361
182298: 28 2d 2b                 jump @13215
      :                          @12362
182301: 82 13 00 02              t1 = u64 [sp + 0x200]
182305: ca 07 02                 t0 = a0 * ra
182308: c8 32 02                 t0 = t0 + t1
182311: 82 2a 10                 a3 = u64 [t0 + 0x10]
182314: ac a9 06                 jump @12364 if a2 <u a3
      :                          @12363
182317: 28 88 17                 jump @12820
      :                          @12364
182320: 82 2a 08                 a3 = u64 [t0 + 0x8]
182323: c8 9a 0a                 a3 = a3 + a2
182326: 84 cc 01                 a5 = a5 & 0x1
182329: 78 ac                    u8 [a3] = a5
182331: ac 89 06                 jump @12366 if a2 <u a1
      :                          @12365
182334: 28 3c 2b                 jump @13262
      :                          @12366
182337: c8 63 03                 t1 = t1 + s1
182340: 82 38 28                 a1 = u64 [t1 + 0x28]
182343: ac 87 06                 jump @12368 if a0 <u a1
      :                          @12367
182346: 28 fd 2a                 jump @13215
      :                          @12368
182349: 82 38 20                 a1 = u64 [t1 + 0x20]
182352: c8 78 08                 a1 = a1 + a0
182355: 78 8c                    u8 [a1] = a5
182357: 95 99 01                 a2 = a2 + 0x1
182360: 95 66 18                 s1 = s1 + 0x18
182363: 52 19 08 9c              jump @12360 if a2 != 8
      :                          @12369
182367: 28 78 ff                 jump @12356
      :                          @12370 [@dyn 1382]
182370: 33 0a                    a3 = 0
182372: 3a 02 58 01 03           t0 = u64 [0x30158]
182377: 49 21 d0 01              u64 [sp + 464] = 0
182381: 49 21 d8 01 08           u64 [sp + 472] = 0x8
182386: 49 21 e0 01              u64 [sp + 480] = 0
182390: 33 0c 70 02 03           a5 = 0x30270
182395: 14 03 cd cc cc cc cc cc cc cc t1 = 0xcccccccccccccccd
182405: 7b 12 58                 u64 [sp + 0x58] = t0
182408: 7b 13 50                 u64 [sp + 0x50] = t1
182411: 28 34                    jump @12373
      :                          @12371
182413: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
182417: 82 19 90 02              a2 = u64 [sp + 0x290]
182421: 96 8a 18                 a3 = a1 * 0x18
182424: c8 a7 07                 a0 = a0 + a3
182427: 7b 79 10                 u64 [a0 + 0x10] = a2
182430: 82 19 88 02              a2 = u64 [sp + 0x288]
182434: 7b 79 08                 u64 [a0 + 0x8] = a2
182437: 82 19 80 02              a2 = u64 [sp + 0x280]
182441: 82 1a 40                 a3 = u64 [sp + 0x40]
182444: 83 aa 01                 i32 a3 = a3 + 0x1
182447: 7b 79                    u64 [a0] = a2
182449: 95 88 01                 a1 = a1 + 0x1
182452: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
182456: 52 1a 0a 07              jump @12373 if a3 != 10
      :                          @12372
182460: 28 a4 0f                 jump @12680
      :                          @12373
182463: 7b 1a 40                 u64 [sp + 0x40] = a3
182466: 3a 07 70 02 03           a0 = u64 [0x30270]
182471: 97 78 0d                 a1 = a0 << 0xd
182474: d3 87 07                 a0 = a0 ^ a1
182477: 98 78 07                 a1 = a0 >> 0x7
182480: d3 87 07                 a0 = a0 ^ a1
182483: 97 78 11                 a1 = a0 << 0x11
182486: d3 87 07                 a0 = a0 ^ a1
182489: ca 27 08                 a1 = a0 * t0
182492: 3e 07 70 02 03           u64 [0x30270] = a0
182497: 49 21 80 02              u64 [sp + 640] = 0
182501: 49 21 88 02 08           u64 [sp + 648] = 0x8
182506: 49 21 90 02              u64 [sp + 656] = 0
182510: d6 38 07                 a0 = a1 mulhu t1
182513: 98 79 02                 a2 = a0 >> 0x2
182516: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
182519: c8 97 07                 a0 = a0 + a2
182522: c9 78 08                 a1 = a1 - a0
182525: 95 86 01                 s1 = a1 + 0x1
182528: 28 2d                    jump @12375
      :                          @12374
182530: ca 29 07                 a0 = a2 * t0
182533: d6 37 09                 a2 = a0 mulhu t1
182536: 98 99 04                 a2 = a2 >> 0x4
182539: 82 1a 88 02              a3 = u64 [sp + 0x288]
182543: 33 0b 14                 a4 = 0x14
182546: ca b9 09                 a2 = a2 * a4
182549: c9 97 07                 a0 = a0 - a2
182552: 97 89 03                 a2 = a1 << 0x3
182555: c8 a9 09                 a2 = a2 + a3
182558: 7b 97                    u64 [a2] = a0
182560: 95 88 01                 a1 = a1 + 0x1
182563: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
182566: 7b 18 90 02              u64 [sp + 0x290] = a1
182570: 51 06 4c                 jump @12378 if s1 == 0
      :                          @12375
182573: 3a 07 70 02 03           a0 = u64 [0x30270]
182578: 97 78 0d                 a1 = a0 << 0xd
182581: d3 87 07                 a0 = a0 ^ a1
182584: 98 78 07                 a1 = a0 >> 0x7
182587: d3 87 07                 a0 = a0 ^ a1
182590: 97 78 11                 a1 = a0 << 0x11
182593: d3 78 09                 a2 = a1 ^ a0
182596: 3e 09 70 02 03           u64 [0x30270] = a2
182601: 82 18 90 02              a1 = u64 [sp + 0x290]
182605: 82 17 80 02              a0 = u64 [sp + 0x280]
182609: ab 78 b1                 jump @12374 if a1 != a0
      :                          @12376
182612: 95 17 80 02              a0 = sp + 0x280
182616: 7b 19 60                 u64 [sp + 0x60] = a2
182619: 50 20 ce 0a b4 89 fd     ra = 2766, jump @1581
      :                          @12377 [@dyn 1383]
182626: 82 19 60                 a2 = u64 [sp + 0x60]
182629: 82 13 50                 t1 = u64 [sp + 0x50]
182632: 33 0c 70 02 03           a5 = 0x30270
182637: 82 12 58                 t0 = u64 [sp + 0x58]
182640: 82 18 90 02              a1 = u64 [sp + 0x290]
182644: 28 8e                    jump @12374
      :                          @12378
182646: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
182650: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
182654: ab 78 0f ff              jump @12371 if a1 != a0
      :                          @12379
182658: 95 17 d0 01              a0 = sp + 0x1d0
182662: 50 20 d0 0a 07 89 fd     ra = 2768, jump @1569
      :                          @12380 [@dyn 1384]
182669: 82 13 50                 t1 = u64 [sp + 0x50]
182672: 33 0c 70 02 03           a5 = 0x30270
182677: 82 12 58                 t0 = u64 [sp + 0x58]
182680: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
182684: 28 f1 fe                 jump @12371
      :                          @12381 [@dyn 1385]
182687: 3a 08 70 02 03           a1 = u64 [0x30270]
182692: 97 89 0d                 a2 = a1 << 0xd
182695: d3 98 08                 a1 = a1 ^ a2
182698: 98 89 07                 a2 = a1 >> 0x7
182701: d3 98 08                 a1 = a1 ^ a2
182704: 97 89 11                 a2 = a1 << 0x11
182707: d3 98 08                 a1 = a1 ^ a2
182710: 3a 09 58 01 03           a2 = u64 [0x30158]
182715: 3e 08 70 02 03           u64 [0x30270] = a1
182720: 3a 0a 70 02 03           a3 = u64 [0x30270]
182725: ca 98 08                 a1 = a1 * a2
182728: 97 ab 0d                 a4 = a3 << 0xd
182731: d3 ba 0a                 a3 = a3 ^ a4
182734: 98 ab 07                 a4 = a3 >> 0x7
182737: d3 ba 0a                 a3 = a3 ^ a4
182740: 97 ab 11                 a4 = a3 << 0x11
182743: d3 ba 0a                 a3 = a3 ^ a4
182746: ca 9a 09                 a2 = a3 * a2
182749: 3a 0b 60 01 03           a4 = u64 [0x30160]
182754: 3e 0a 70 02 03           u64 [0x30270] = a3
182759: 98 87 03                 a0 = a1 >> 0x3
182762: d6 b7 07                 a0 = a0 mulhu a4
182765: 98 77 04                 a0 = a0 >> 0x4
182768: 96 77 e8 03              a0 = a0 * 0x3e8
182772: c9 78 08                 a1 = a1 - a0
182775: 86 88 01                 a1 = a1 | 0x1
182778: 95 88 02                 a1 = a1 + 0x2
182781: cd 89 07                 a0 = a2 %u a1
182784: 50 20 d4 0a 80 d2 fd     ra = 2772, jump @2781
      :                          @12382 [@dyn 1386]
182791: 52 07 06                 jump @12384 if a0 != 0
      :                          @12383
182794: 28 7a 21                 jump @13032
      :                          @12384
182797: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
182801: 95 17 d0 01              a0 = sp + 0x1d0
182805: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
182809: 33 07 28 0c              a0 = 0xc28
182813: 7b 17 00 02              u64 [sp + 0x200] = a0
182817: 33 07 48 30 01           a0 = 0x13048
182822: 7b 17 80 02              u64 [sp + 0x280] = a0
182826: 49 21 88 02 01           u64 [sp + 648] = 0x1
182831: 49 21 a0 02              u64 [sp + 672] = 0
182835: 95 18 f8 01              a1 = sp + 0x1f8
182839: 7b 18 90 02              u64 [sp + 0x290] = a1
182843: 49 21 98 02 01           u64 [sp + 664] = 0x1
182848: 95 17 28 02              a0 = sp + 0x228
182852: 95 18 80 02              a1 = sp + 0x280
182856: 50 20 d6 0a ff 84 fd     ra = 2774, jump @1491
      :                          @12385 [@dyn 1387]
182863: 82 16 30 02              s1 = u64 [sp + 0x230]
182867: 82 1b 38 02              a4 = u64 [sp + 0x238]
182871: 82 17 28 02              a0 = u64 [sp + 0x228]
182875: 7b 17 60                 u64 [sp + 0x60] = a0
182878: 33 07 02                 a0 = 0x2
182881: 33 08                    a1 = 0
182883: 33 09                    a2 = 0
182885: 64 6a                    a3 = s1
182887: 33 00 d8 0a              ra = 0xad8
182891: 0a 64                    ecalli 100 // 'log'
182893: 01                       fallthrough
      :                          @12386 [@dyn 1388]
182894: 82 1c 60                 a5 = u64 [sp + 0x60]
182897: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
182902: 55 38 00 00 f0 09        jump @12388 if a1 >=u 4293918720
      :                          @12387
182908: 28 6f 17                 jump @12862
      :                          @12388
182911: 33 07 b0 02 03           a0 = 0x302b0
182916: 95 77 00 00 10           a0 = a0 + 0x100000
182921: 01                       fallthrough
      :                          @12389
182922: 82 78                    a1 = u64 [a0]
182924: c9 87 09                 a2 = a0 - a1
182927: aa 69 06                 jump @12391 if a2 == s1
      :                          @12390
182930: 28 59 17                 jump @12862
      :                          @12391
182933: c9 c8 09                 a2 = a1 - a5
182936: 01                       fallthrough
      :                          @12392
182937: 82 7a                    a3 = u64 [a0]
182939: ab 8a ef                 jump @12389 if a3 != a1
      :                          @12393
182942: 7b 79                    u64 [a0] = a2
182944: 33 0b                    a4 = 0
182946: 01                       fallthrough
      :                          @12394
182947: ab 8a e7                 jump @12389 if a3 != a1
      :                          @12395
182950: 28 45 17                 jump @12862
      :                          @12396
182953: 82 18 18 01              a1 = u64 [sp + 0x118]
182957: 95 17 d0 01              a0 = sp + 0x1d0
182961: 95 16 d0 01              s1 = sp + 0x1d0
182965: 50 20 da 0a 2a 3e fe     ra = 2778, jump @5312
      :                          @12397 [@dyn 1389]
182972: 95 17 10 01              a0 = sp + 0x110
182976: 7b 17 28 02              u64 [sp + 0x228] = a0
182980: 33 07 08 02              a0 = 0x208
182984: 7b 17 30 02              u64 [sp + 0x230] = a0
182988: 7b 16 38 02              u64 [sp + 0x238] = s1
182992: 7b 17 40 02              u64 [sp + 0x240] = a0
182996: 33 07 20 0b 01           a0 = 0x10b20
183001: 7b 17 80 02              u64 [sp + 0x280] = a0
183005: 49 21 88 02 02           u64 [sp + 648] = 0x2
183010: 49 21 a0 02              u64 [sp + 672] = 0
183014: 95 18 28 02              a1 = sp + 0x228
183018: 7b 18 90 02              u64 [sp + 0x290] = a1
183022: 49 21 98 02 02           u64 [sp + 664] = 0x2
183027: 95 17 f8 01              a0 = sp + 0x1f8
183031: 95 18 80 02              a1 = sp + 0x280
183035: 50 20 dc 0a 4c 84 fd     ra = 2780, jump @1491
      :                          @12398 [@dyn 1390]
183042: 82 16 00 02              s1 = u64 [sp + 0x200]
183046: 82 1b 08 02              a4 = u64 [sp + 0x208]
183050: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
183054: 7b 17 60                 u64 [sp + 0x60] = a0
183057: 33 07 02                 a0 = 0x2
183060: 33 08                    a1 = 0
183062: 33 09                    a2 = 0
183064: 64 6a                    a3 = s1
183066: 33 00 de 0a              ra = 0xade
183070: 0a 64                    ecalli 100 // 'log'
183072: 01                       fallthrough
      :                          @12399 [@dyn 1391]
183073: 82 1c 60                 a5 = u64 [sp + 0x60]
183076: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
183081: 53 38 00 00 f0 25        jump @12405 if a1 <u 4293918720
      :                          @12400
183087: 33 07 b0 02 03           a0 = 0x302b0
183092: 95 77 00 00 10           a0 = a0 + 0x100000
183097: 01                       fallthrough
      :                          @12401
183098: 82 78                    a1 = u64 [a0]
183100: c9 87 09                 a2 = a0 - a1
183103: ab 69 0f                 jump @12405 if a2 != s1
      :                          @12402
183106: c9 c8 09                 a2 = a1 - a5
183109: 01                       fallthrough
      :                          @12403
183110: 82 7a                    a3 = u64 [a0]
183112: ab 8a f2                 jump @12401 if a3 != a1
      :                          @12404
183115: 7b 79                    u64 [a0] = a2
183117: 01                       fallthrough
      :                          @12405
183118: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
183122: 51 08 31                 jump @12412 if a1 == 0
      :                          @12406
183125: 56 38 00 00 01 2e        jump @12412 if a1 >u 65536
      :                          @12407
183131: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
183135: 97 88 04                 a1 = a1 << 0x4
183138: 33 09 b0 02 03           a2 = 0x302b0
183143: 95 99 00 00 10           a2 = a2 + 0x100000
183148: 01                       fallthrough
      :                          @12408
183149: 82 9a                    a3 = u64 [a2]
183151: c9 a9 0b                 a4 = a2 - a3
183154: ab 7b 11                 jump @12412 if a4 != a0
      :                          @12409
183157: c9 8a 0b                 a4 = a3 - a1
183160: 01                       fallthrough
      :                          @12410
183161: 82 9c                    a5 = u64 [a2]
183163: ab ac f2                 jump @12408 if a5 != a3
      :                          @12411
183166: 7b 9b                    u64 [a2] = a4
183168: 33 06                    s1 = 0
183170: 01                       fallthrough
      :                          @12412
183171: 82 18 10 01              a1 = u64 [sp + 0x110]
183175: 52 08 06                 jump @12414 if a1 != 0
      :                          @12413
183178: 28 61 16                 jump @12862
      :                          @12414
183181: 54 38 00 00 01 09        jump @12416 if a1 <=u 65536
      :                          @12415
183187: 28 58 16                 jump @12862
      :                          @12416
183190: 82 17 18 01              a0 = u64 [sp + 0x118]
183194: 97 88 04                 a1 = a1 << 0x4
183197: 33 09 b0 02 03           a2 = 0x302b0
183202: 95 99 00 00 10           a2 = a2 + 0x100000
183207: 01                       fallthrough
      :                          @12417
183208: 82 9a                    a3 = u64 [a2]
183210: c9 a9 0b                 a4 = a2 - a3
183213: aa 7b 06                 jump @12419 if a4 == a0
      :                          @12418
183216: 28 3b 16                 jump @12862
      :                          @12419
183219: c9 8a 0b                 a4 = a3 - a1
183222: 01                       fallthrough
      :                          @12420
183223: 82 9c                    a5 = u64 [a2]
183225: ab ac ef                 jump @12417 if a5 != a3
      :                          @12421
183228: 7b 9b                    u64 [a2] = a4
183230: 33 06                    s1 = 0
183232: 01                       fallthrough
      :                          @12422
183233: ab ac e7                 jump @12417 if a5 != a3
      :                          @12423
183236: 28 27 16                 jump @12862
      :                          @12424
183239: 82 18 18 01              a1 = u64 [sp + 0x118]
183243: 95 17 d0 01              a0 = sp + 0x1d0
183247: 95 16 d0 01              s1 = sp + 0x1d0
183251: 50 20 e0 0a 0d 72 fe     ra = 2784, jump @6435
      :                          @12425 [@dyn 1392]
183258: 95 17 10 01              a0 = sp + 0x110
183262: 7b 17 28 02              u64 [sp + 0x228] = a0
183266: 33 07 10 02              a0 = 0x210
183270: 7b 17 30 02              u64 [sp + 0x230] = a0
183274: 7b 16 38 02              u64 [sp + 0x238] = s1
183278: 33 07 20 02              a0 = 0x220
183282: 7b 17 40 02              u64 [sp + 0x240] = a0
183286: 33 07 30 12 01           a0 = 0x11230
183291: 7b 17 80 02              u64 [sp + 0x280] = a0
183295: 49 21 88 02 02           u64 [sp + 648] = 0x2
183300: 49 21 a0 02              u64 [sp + 672] = 0
183304: 95 18 28 02              a1 = sp + 0x228
183308: 7b 18 90 02              u64 [sp + 0x290] = a1
183312: 49 21 98 02 02           u64 [sp + 664] = 0x2
183317: 95 17 f8 01              a0 = sp + 0x1f8
183321: 95 18 80 02              a1 = sp + 0x280
183325: 50 20 e2 0a 2a 83 fd     ra = 2786, jump @1491
      :                          @12426 [@dyn 1393]
183332: 82 16 00 02              s1 = u64 [sp + 0x200]
183336: 82 1b 08 02              a4 = u64 [sp + 0x208]
183340: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
183344: 7b 17 60                 u64 [sp + 0x60] = a0
183347: 33 07 02                 a0 = 0x2
183350: 33 08                    a1 = 0
183352: 33 09                    a2 = 0
183354: 64 6a                    a3 = s1
183356: 33 00 e4 0a              ra = 0xae4
183360: 0a 64                    ecalli 100 // 'log'
183362: 01                       fallthrough
      :                          @12427 [@dyn 1394]
183363: 82 1c 60                 a5 = u64 [sp + 0x60]
183366: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
183371: 53 38 00 00 f0 25        jump @12433 if a1 <u 4293918720
      :                          @12428
183377: 33 07 b0 02 03           a0 = 0x302b0
183382: 95 77 00 00 10           a0 = a0 + 0x100000
183387: 01                       fallthrough
      :                          @12429
183388: 82 78                    a1 = u64 [a0]
183390: c9 87 09                 a2 = a0 - a1
183393: ab 69 0f                 jump @12433 if a2 != s1
      :                          @12430
183396: c9 c8 09                 a2 = a1 - a5
183399: 01                       fallthrough
      :                          @12431
183400: 82 7a                    a3 = u64 [a0]
183402: ab 8a f2                 jump @12429 if a3 != a1
      :                          @12432
183405: 7b 79                    u64 [a0] = a2
183407: 01                       fallthrough
      :                          @12433
183408: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
183412: 51 08 31                 jump @12440 if a1 == 0
      :                          @12434
183415: 56 38 00 00 02 2e        jump @12440 if a1 >u 131072
      :                          @12435
183421: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
183425: 97 88 03                 a1 = a1 << 0x3
183428: 33 09 b0 02 03           a2 = 0x302b0
183433: 95 99 00 00 10           a2 = a2 + 0x100000
183438: 01                       fallthrough
      :                          @12436
183439: 82 9a                    a3 = u64 [a2]
183441: c9 a9 0b                 a4 = a2 - a3
183444: ab 7b 11                 jump @12440 if a4 != a0
      :                          @12437
183447: c9 8a 0b                 a4 = a3 - a1
183450: 01                       fallthrough
      :                          @12438
183451: 82 9c                    a5 = u64 [a2]
183453: ab ac f2                 jump @12436 if a5 != a3
      :                          @12439
183456: 7b 9b                    u64 [a2] = a4
183458: 33 06                    s1 = 0
183460: 01                       fallthrough
      :                          @12440
183461: 82 18 10 01              a1 = u64 [sp + 0x110]
183465: 52 08 06                 jump @12442 if a1 != 0
      :                          @12441
183468: 28 3f 15                 jump @12862
      :                          @12442
183471: 54 38 00 00 01 09        jump @12444 if a1 <=u 65536
      :                          @12443
183477: 28 36 15                 jump @12862
      :                          @12444
183480: 82 17 18 01              a0 = u64 [sp + 0x118]
183484: 97 88 04                 a1 = a1 << 0x4
183487: 33 09 b0 02 03           a2 = 0x302b0
183492: 95 99 00 00 10           a2 = a2 + 0x100000
183497: 01                       fallthrough
      :                          @12445
183498: 82 9a                    a3 = u64 [a2]
183500: c9 a9 0b                 a4 = a2 - a3
183503: aa 7b 06                 jump @12447 if a4 == a0
      :                          @12446
183506: 28 19 15                 jump @12862
      :                          @12447
183509: c9 8a 0b                 a4 = a3 - a1
183512: 01                       fallthrough
      :                          @12448
183513: 82 9c                    a5 = u64 [a2]
183515: ab ac ef                 jump @12445 if a5 != a3
      :                          @12449
183518: 7b 9b                    u64 [a2] = a4
183520: 33 06                    s1 = 0
183522: 01                       fallthrough
      :                          @12450
183523: ab ac e7                 jump @12445 if a5 != a3
      :                          @12451
183526: 28 05 15                 jump @12862
      :                          @12452
183529: 50 20 e6 0a c3 71 fe     ra = 2790, jump @6451
      :                          @12453 [@dyn 1395]
183536: 7b 17 10 01              u64 [sp + 0x110] = a0
183540: 95 17 10 01              a0 = sp + 0x110
183544: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
183548: 33 07 28 0c              a0 = 0xc28
183552: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
183556: 33 07 60 12 01           a0 = 0x11260
183561: 7b 17 80 02              u64 [sp + 0x280] = a0
183565: 49 21 88 02 01           u64 [sp + 648] = 0x1
183570: 49 21 a0 02              u64 [sp + 672] = 0
183574: 95 18 d0 01              a1 = sp + 0x1d0
183578: 7b 18 90 02              u64 [sp + 0x290] = a1
183582: 49 21 98 02 01           u64 [sp + 664] = 0x1
183587: 95 17 28 02              a0 = sp + 0x228
183591: 95 18 80 02              a1 = sp + 0x280
183595: 50 20 e8 0a 1c 82 fd     ra = 2792, jump @1491
      :                          @12454 [@dyn 1396]
183602: 82 16 30 02              s1 = u64 [sp + 0x230]
183606: 82 1b 38 02              a4 = u64 [sp + 0x238]
183610: 82 17 28 02              a0 = u64 [sp + 0x228]
183614: 7b 17 60                 u64 [sp + 0x60] = a0
183617: 33 07 02                 a0 = 0x2
183620: 33 08                    a1 = 0
183622: 33 09                    a2 = 0
183624: 64 6a                    a3 = s1
183626: 33 00 ea 0a              ra = 0xaea
183630: 0a 64                    ecalli 100 // 'log'
183632: 01                       fallthrough
      :                          @12455 [@dyn 1397]
183633: 82 1c 60                 a5 = u64 [sp + 0x60]
183636: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
183641: 53 38 00 00 f0 a6 0f     jump @12761 if a1 <u 4293918720
      :                          @12456
183648: 33 07 b0 02 03           a0 = 0x302b0
183653: 95 77 00 00 10           a0 = a0 + 0x100000
183658: 01                       fallthrough
      :                          @12457
183659: 82 78                    a1 = u64 [a0]
183661: c9 87 09                 a2 = a0 - a1
183664: ab 69 8f 0f              jump @12761 if a2 != s1
      :                          @12458
183668: c9 c8 09                 a2 = a1 - a5
183671: 01                       fallthrough
      :                          @12459
183672: 82 7a                    a3 = u64 [a0]
183674: ab 8a f1                 jump @12457 if a3 != a1
      :                          @12460
183677: 7b 79                    u64 [a0] = a2
183679: 33 0b                    a4 = 0
183681: 01                       fallthrough
      :                          @12461
183682: ab 8a e9                 jump @12457 if a3 != a1
      :                          @12462
183685: 28 7a 0f                 jump @12761
      :                          @12463
183688: 49 11 58 ff ff ef        u64 [sp + 88] = 0xffffffffffefffff
183694: 49 21 a0 01              u64 [sp + 416] = 0
183698: 95 17 10 01              a0 = sp + 0x110
183702: 7b 1c 60                 u64 [sp + 0x60] = a5
183705: 64 c8                    a1 = a5
183707: 33 00 ec 0a              ra = 0xaec
183711: 95 11 e8                 sp = sp + 0xffffffffffffffe8
183714: 7b 10 10                 u64 [sp + 0x10] = ra
183717: 7b 15 08                 u64 [sp + 0x8] = s0
183720: 7b 16                    u64 [sp] = s1
183722: 33 03 b0 02 03           t1 = 0x302b0
183727: 33 02 00 00 10           t0 = 0x100000
183732: c8 23 04                 t2 = t1 + t0
183735: 28 8d 79 fe              jump @6652
      :                          @12464 [@dyn 1398]
183739: 82 17 10 01              a0 = u64 [sp + 0x110]
183743: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
183753: aa 87 06                 jump @12466 if a0 == a1
      :                          @12465
183756: 28 55 15                 jump @12882
      :                          @12466
183759: 33 07 a8 14 01           a0 = 0x114a8
183764: 7b 17 80 02              u64 [sp + 0x280] = a0
183768: 49 21 88 02 01           u64 [sp + 648] = 0x1
183773: 49 21 a0 02              u64 [sp + 672] = 0
183777: 33 07 40 30 01           a0 = 0x13040
183782: 7b 17 90 02              u64 [sp + 0x290] = a0
183786: 49 21 98 02              u64 [sp + 664] = 0
183790: 95 17 28 02              a0 = sp + 0x228
183794: 95 18 80 02              a1 = sp + 0x280
183798: 50 20 ee 0a 51 81 fd     ra = 2798, jump @1491
      :                          @12467 [@dyn 1399]
183805: 82 1a 30 02              a3 = u64 [sp + 0x230]
183809: 7b 1a 50                 u64 [sp + 0x50] = a3
183812: 82 1b 38 02              a4 = u64 [sp + 0x238]
183816: 82 16 28 02              s1 = u64 [sp + 0x228]
183820: 33 07 02                 a0 = 0x2
183823: 33 08                    a1 = 0
183825: 33 09                    a2 = 0
183827: 33 00 f0 0a              ra = 0xaf0
183831: 0a 64                    ecalli 100 // 'log'
183833: 01                       fallthrough
      :                          @12468 [@dyn 1400]
183834: 82 1c 50                 a5 = u64 [sp + 0x50]
183837: 82 17 58                 a0 = u64 [sp + 0x58]
183840: c8 67 07                 a0 = a0 + s1
183843: 82 12 60                 t0 = u64 [sp + 0x60]
183846: 55 37 00 00 f0 09        jump @12470 if a0 >=u 4293918720
      :                          @12469
183852: 28 de 15                 jump @12897
      :                          @12470
183855: 33 07 b0 02 03           a0 = 0x302b0
183860: 95 77 00 00 10           a0 = a0 + 0x100000
183865: 01                       fallthrough
      :                          @12471
183866: 82 78                    a1 = u64 [a0]
183868: c9 87 09                 a2 = a0 - a1
183871: aa c9 06                 jump @12473 if a2 == a5
      :                          @12472
183874: 28 c8 15                 jump @12897
      :                          @12473
183877: c9 68 09                 a2 = a1 - s1
183880: 01                       fallthrough
      :                          @12474
183881: 82 7a                    a3 = u64 [a0]
183883: ab 8a ef                 jump @12471 if a3 != a1
      :                          @12475
183886: 7b 79                    u64 [a0] = a2
183888: 33 0b                    a4 = 0
183890: 01                       fallthrough
      :                          @12476
183891: ab 8a e7                 jump @12471 if a3 != a1
      :                          @12477
183894: 28 b4 15                 jump @12897
      :                          @12478
183897: 95 17 f8 01              a0 = sp + 0x1f8
183901: 95 16 f8 01              s1 = sp + 0x1f8
183905: 7b 1b 60                 u64 [sp + 0x60] = a4
183908: 64 b8                    a1 = a4
183910: 50 20 f2 0a 77 91 fe     ra = 2802, jump @7165
      :                          @12479 [@dyn 1401]
183917: 7b 16 10 01              u64 [sp + 0x110] = s1
183921: 33 07 08 02              a0 = 0x208
183925: 7b 17 18 01              u64 [sp + 0x118] = a0
183929: 33 07 e8 15 01           a0 = 0x115e8
183934: 7b 17 80 02              u64 [sp + 0x280] = a0
183938: 49 21 88 02 01           u64 [sp + 648] = 0x1
183943: 49 21 a0 02              u64 [sp + 672] = 0
183947: 95 18 10 01              a1 = sp + 0x110
183951: 7b 18 90 02              u64 [sp + 0x290] = a1
183955: 49 21 98 02 01           u64 [sp + 664] = 0x1
183960: 95 17 28 02              a0 = sp + 0x228
183964: 95 18 80 02              a1 = sp + 0x280
183968: 50 20 f4 0a a7 80 fd     ra = 2804, jump @1491
      :                          @12480 [@dyn 1402]
183975: 82 1a 30 02              a3 = u64 [sp + 0x230]
183979: 7b 1a 58                 u64 [sp + 0x58] = a3
183982: 82 1b 38 02              a4 = u64 [sp + 0x238]
183986: 82 16 28 02              s1 = u64 [sp + 0x228]
183990: 33 07 02                 a0 = 0x2
183993: 33 08                    a1 = 0
183995: 33 09                    a2 = 0
183997: 33 00 f6 0a              ra = 0xaf6
184001: 0a 64                    ecalli 100 // 'log'
184003: 01                       fallthrough
      :                          @12481 [@dyn 1403]
184004: 82 1c 58                 a5 = u64 [sp + 0x58]
184007: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
184012: 53 38 00 00 f0 25        jump @12487 if a1 <u 4293918720
      :                          @12482
184018: 33 07 b0 02 03           a0 = 0x302b0
184023: 95 77 00 00 10           a0 = a0 + 0x100000
184028: 01                       fallthrough
      :                          @12483
184029: 82 78                    a1 = u64 [a0]
184031: c9 87 09                 a2 = a0 - a1
184034: ab c9 0f                 jump @12487 if a2 != a5
      :                          @12484
184037: c9 68 09                 a2 = a1 - s1
184040: 01                       fallthrough
      :                          @12485
184041: 82 7a                    a3 = u64 [a0]
184043: ab 8a f2                 jump @12483 if a3 != a1
      :                          @12486
184046: 7b 79                    u64 [a0] = a2
184048: 01                       fallthrough
      :                          @12487
184049: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
184053: 51 08 2f                 jump @12494 if a1 == 0
      :                          @12488
184056: 56 38 00 00 01 2c        jump @12494 if a1 >u 65536
      :                          @12489
184062: 82 17 00 02              a0 = u64 [sp + 0x200]
184066: 97 88 04                 a1 = a1 << 0x4
184069: 33 09 b0 02 03           a2 = 0x302b0
184074: 95 99 00 00 10           a2 = a2 + 0x100000
184079: 01                       fallthrough
      :                          @12490
184080: 82 9a                    a3 = u64 [a2]
184082: c9 a9 0b                 a4 = a2 - a3
184085: ab 7b 0f                 jump @12494 if a4 != a0
      :                          @12491
184088: c9 8a 0b                 a4 = a3 - a1
184091: 01                       fallthrough
      :                          @12492
184092: 82 9c                    a5 = u64 [a2]
184094: ab ac f2                 jump @12490 if a5 != a3
      :                          @12493
184097: 7b 9b                    u64 [a2] = a4
184099: 01                       fallthrough
      :                          @12494
184100: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
184104: 82 16 60                 s1 = u64 [sp + 0x60]
184107: 52 07 06                 jump @12496 if a0 != 0
      :                          @12495
184110: 28 bd 12                 jump @12862
      :                          @12496
184113: 54 37 00 00 01 09        jump @12498 if a0 <=u 65536
      :                          @12497
184119: 28 b4 12                 jump @12862
      :                          @12498
184122: 97 77 04                 a0 = a0 << 0x4
184125: 33 08 b0 02 03           a1 = 0x302b0
184130: 95 88 00 00 10           a1 = a1 + 0x100000
184135: 01                       fallthrough
      :                          @12499
184136: 82 89                    a2 = u64 [a1]
184138: c9 98 0a                 a3 = a1 - a2
184141: aa 6a 06                 jump @12501 if a3 == s1
      :                          @12500
184144: 28 9b 12                 jump @12862
      :                          @12501
184147: c9 79 0a                 a3 = a2 - a0
184150: 01                       fallthrough
      :                          @12502
184151: 82 8b                    a4 = u64 [a1]
184153: ab 9b ef                 jump @12499 if a4 != a2
      :                          @12503
184156: 7b 8a                    u64 [a1] = a3
184158: 33 0c                    a5 = 0
184160: 01                       fallthrough
      :                          @12504
184161: ab 9b e7                 jump @12499 if a4 != a2
      :                          @12505
184164: 28 87 12                 jump @12862
      :                          @12506
184167: 7b 17 60                 u64 [sp + 0x60] = a0
184170: 33 00 f8 0a              ra = 0xaf8
184174: 95 11 80                 sp = sp + 0xffffffffffffff80
184177: 7b 10 78                 u64 [sp + 0x78] = ra
184180: 7b 15 70                 u64 [sp + 0x70] = s0
184183: 7b 16 68                 u64 [sp + 0x68] = s1
184186: 64 89                    a2 = a1
184188: 64 78                    a1 = a0
184190: 95 17 50                 a0 = sp + 0x50
184193: 33 00 2a 04              ra = 0x42a
184197: 28 58 90 fe              jump @7165
      :                          @12507 [@dyn 1404]
184201: 7b 17 10 01              u64 [sp + 0x110] = a0
184205: 95 17 10 01              a0 = sp + 0x110
184209: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
184213: 33 07 28 0c              a0 = 0xc28
184217: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
184221: 33 07 08 16 01           a0 = 0x11608
184226: 7b 17 80 02              u64 [sp + 0x280] = a0
184230: 49 21 88 02 01           u64 [sp + 648] = 0x1
184235: 49 21 a0 02              u64 [sp + 672] = 0
184239: 95 18 d0 01              a1 = sp + 0x1d0
184243: 7b 18 90 02              u64 [sp + 0x290] = a1
184247: 49 21 98 02 01           u64 [sp + 664] = 0x1
184252: 95 17 28 02              a0 = sp + 0x228
184256: 95 18 80 02              a1 = sp + 0x280
184260: 50 20 fa 0a 83 7f fd     ra = 2810, jump @1491
      :                          @12508 [@dyn 1405]
184267: 82 1a 30 02              a3 = u64 [sp + 0x230]
184271: 7b 1a 58                 u64 [sp + 0x58] = a3
184274: 82 1b 38 02              a4 = u64 [sp + 0x238]
184278: 82 16 28 02              s1 = u64 [sp + 0x228]
184282: 33 07 02                 a0 = 0x2
184285: 33 08                    a1 = 0
184287: 33 09                    a2 = 0
184289: 33 00 fc 0a              ra = 0xafc
184293: 0a 64                    ecalli 100 // 'log'
184295: 01                       fallthrough
      :                          @12509 [@dyn 1406]
184296: 82 1c 58                 a5 = u64 [sp + 0x58]
184299: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
184304: 53 38 00 00 f0 25        jump @12515 if a1 <u 4293918720
      :                          @12510
184310: 33 07 b0 02 03           a0 = 0x302b0
184315: 95 77 00 00 10           a0 = a0 + 0x100000
184320: 01                       fallthrough
      :                          @12511
184321: 82 78                    a1 = u64 [a0]
184323: c9 87 09                 a2 = a0 - a1
184326: ab c9 0f                 jump @12515 if a2 != a5
      :                          @12512
184329: c9 68 09                 a2 = a1 - s1
184332: 01                       fallthrough
      :                          @12513
184333: 82 7a                    a3 = u64 [a0]
184335: ab 8a f2                 jump @12511 if a3 != a1
      :                          @12514
184338: 7b 79                    u64 [a0] = a2
184340: 01                       fallthrough
      :                          @12515
184341: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
184345: 82 16 60                 s1 = u64 [sp + 0x60]
184348: 52 07 06                 jump @12517 if a0 != 0
      :                          @12516
184351: 28 cc 11                 jump @12862
      :                          @12517
184354: 54 37 00 00 01 09        jump @12519 if a0 <=u 65536
      :                          @12518
184360: 28 c3 11                 jump @12862
      :                          @12519
184363: 97 77 04                 a0 = a0 << 0x4
184366: 33 08 b0 02 03           a1 = 0x302b0
184371: 95 88 00 00 10           a1 = a1 + 0x100000
184376: 01                       fallthrough
      :                          @12520
184377: 82 89                    a2 = u64 [a1]
184379: c9 98 0a                 a3 = a1 - a2
184382: aa 6a 06                 jump @12522 if a3 == s1
      :                          @12521
184385: 28 aa 11                 jump @12862
      :                          @12522
184388: c9 79 0a                 a3 = a2 - a0
184391: 01                       fallthrough
      :                          @12523
184392: 82 8b                    a4 = u64 [a1]
184394: ab 9b ef                 jump @12520 if a4 != a2
      :                          @12524
184397: 7b 8a                    u64 [a1] = a3
184399: 33 0c                    a5 = 0
184401: 01                       fallthrough
      :                          @12525
184402: ab 9b e7                 jump @12520 if a4 != a2
      :                          @12526
184405: 28 96 11                 jump @12862
      :                          @12527
184408: 95 17 d0 01              a0 = sp + 0x1d0
184412: 7b 1b 60                 u64 [sp + 0x60] = a4
184415: 64 b8                    a1 = a4
184417: 50 20 fe 0a 7c 8f fe     ra = 2814, jump @7165
      :                          @12528 [@dyn 1407]
184424: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
184428: 95 17 f8 01              a0 = sp + 0x1f8
184432: 95 16 f8 01              s1 = sp + 0x1f8
184436: 50 20 00 0b ee 93 fe     ra = 2816, jump @7247
      :                          @12529 [@dyn 1408]
184443: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
184447: 33 07 28 02              a0 = 0x228
184451: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
184455: 33 07 30 16 01           a0 = 0x11630
184460: 7b 17 80 02              u64 [sp + 0x280] = a0
184464: 49 21 88 02 01           u64 [sp + 648] = 0x1
184469: 49 21 a0 02              u64 [sp + 672] = 0
184473: 95 18 b8 01              a1 = sp + 0x1b8
184477: 7b 18 90 02              u64 [sp + 0x290] = a1
184481: 49 21 98 02 01           u64 [sp + 664] = 0x1
184486: 95 17 28 02              a0 = sp + 0x228
184490: 95 18 80 02              a1 = sp + 0x280
184494: 50 20 02 0b 99 7e fd     ra = 2818, jump @1491
      :                          @12530 [@dyn 1409]
184501: 82 1a 30 02              a3 = u64 [sp + 0x230]
184505: 7b 1a 58                 u64 [sp + 0x58] = a3
184508: 82 1b 38 02              a4 = u64 [sp + 0x238]
184512: 82 16 28 02              s1 = u64 [sp + 0x228]
184516: 33 07 02                 a0 = 0x2
184519: 33 08                    a1 = 0
184521: 33 09                    a2 = 0
184523: 33 00 04 0b              ra = 0xb04
184527: 0a 64                    ecalli 100 // 'log'
184529: 01                       fallthrough
      :                          @12531 [@dyn 1410]
184530: 82 1c 58                 a5 = u64 [sp + 0x58]
184533: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
184538: 53 38 00 00 f0 25        jump @12537 if a1 <u 4293918720
      :                          @12532
184544: 33 07 b0 02 03           a0 = 0x302b0
184549: 95 77 00 00 10           a0 = a0 + 0x100000
184554: 01                       fallthrough
      :                          @12533
184555: 82 78                    a1 = u64 [a0]
184557: c9 87 09                 a2 = a0 - a1
184560: ab c9 0f                 jump @12537 if a2 != a5
      :                          @12534
184563: c9 68 09                 a2 = a1 - s1
184566: 01                       fallthrough
      :                          @12535
184567: 82 7a                    a3 = u64 [a0]
184569: ab 8a f2                 jump @12533 if a3 != a1
      :                          @12536
184572: 7b 79                    u64 [a0] = a2
184574: 01                       fallthrough
      :                          @12537
184575: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
184579: 51 08 31                 jump @12544 if a1 == 0
      :                          @12538
184582: 56 38 aa aa 00 2e        jump @12544 if a1 >u 43690
      :                          @12539
184588: 82 17 00 02              a0 = u64 [sp + 0x200]
184592: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
184595: 33 09 b0 02 03           a2 = 0x302b0
184600: 95 99 00 00 10           a2 = a2 + 0x100000
184605: 01                       fallthrough
      :                          @12540
184606: 82 9a                    a3 = u64 [a2]
184608: c9 a9 0b                 a4 = a2 - a3
184611: ab 7b 11                 jump @12544 if a4 != a0
      :                          @12541
184614: c8 8a 0b                 a4 = a3 + a1
184617: 01                       fallthrough
      :                          @12542
184618: 82 9c                    a5 = u64 [a2]
184620: ab ac f2                 jump @12540 if a5 != a3
      :                          @12543
184623: 7b 9b                    u64 [a2] = a4
184625: 33 06                    s1 = 0
184627: 01                       fallthrough
      :                          @12544
184628: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
184632: 82 12 60                 t0 = u64 [sp + 0x60]
184635: 51 08 31                 jump @12551 if a1 == 0
      :                          @12545
184638: 56 38 00 00 01 2e        jump @12551 if a1 >u 65536
      :                          @12546
184644: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
184648: 97 88 04                 a1 = a1 << 0x4
184651: 33 09 b0 02 03           a2 = 0x302b0
184656: 95 99 00 00 10           a2 = a2 + 0x100000
184661: 01                       fallthrough
      :                          @12547
184662: 82 9a                    a3 = u64 [a2]
184664: c9 a9 0b                 a4 = a2 - a3
184667: ab 7b 11                 jump @12551 if a4 != a0
      :                          @12548
184670: c9 8a 0b                 a4 = a3 - a1
184673: 01                       fallthrough
      :                          @12549
184674: 82 9c                    a5 = u64 [a2]
184676: ab ac f2                 jump @12547 if a5 != a3
      :                          @12550
184679: 7b 9b                    u64 [a2] = a4
184681: 33 06                    s1 = 0
184683: 01                       fallthrough
      :                          @12551
184684: 82 17 10 01              a0 = u64 [sp + 0x110]
184688: 52 07 06                 jump @12553 if a0 != 0
      :                          @12552
184691: 28 78 10                 jump @12862
      :                          @12553
184694: 54 37 00 00 01 09        jump @12555 if a0 <=u 65536
      :                          @12554
184700: 28 6f 10                 jump @12862
      :                          @12555
184703: 97 77 04                 a0 = a0 << 0x4
184706: 33 08 b0 02 03           a1 = 0x302b0
184711: 95 88 00 00 10           a1 = a1 + 0x100000
184716: 01                       fallthrough
      :                          @12556
184717: 82 89                    a2 = u64 [a1]
184719: c9 98 0a                 a3 = a1 - a2
184722: aa 2a 06                 jump @12558 if a3 == t0
      :                          @12557
184725: 28 56 10                 jump @12862
      :                          @12558
184728: c9 79 0a                 a3 = a2 - a0
184731: 01                       fallthrough
      :                          @12559
184732: 82 8b                    a4 = u64 [a1]
184734: ab 9b ef                 jump @12556 if a4 != a2
      :                          @12560
184737: 7b 8a                    u64 [a1] = a3
184739: 33 0c                    a5 = 0
184741: 01                       fallthrough
      :                          @12561
184742: ab 9b e7                 jump @12556 if a4 != a2
      :                          @12562
184745: 28 42 10                 jump @12862
      :                          @12563
184748: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
184752: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
184756: 95 17 10 01              a0 = sp + 0x110
184760: 7b 18 58                 u64 [sp + 0x58] = a1
184763: 7b 1b 60                 u64 [sp + 0x60] = a4
184766: 50 20 06 0b 1f 8e fe     ra = 2822, jump @7165
      :                          @12564 [@dyn 1411]
184773: 95 17 d0 01              a0 = sp + 0x1d0
184777: 82 18 60                 a1 = u64 [sp + 0x60]
184780: 64 69                    a2 = s1
184782: 50 20 08 0b 0f 8e fe     ra = 2824, jump @7165
      :                          @12565 [@dyn 1412]
184789: 82 18 18 01              a1 = u64 [sp + 0x118]
184793: 82 19 20 01              a2 = u64 [sp + 0x120]
184797: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
184801: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
184805: 95 17 f8 01              a0 = sp + 0x1f8
184809: 95 16 f8 01              s1 = sp + 0x1f8
184813: 7b 18 50                 u64 [sp + 0x50] = a1
184816: 7b 1a 40                 u64 [sp + 0x40] = a3
184819: 50 20 0a 0b f4 92 fe     ra = 2826, jump @7254
      :                          @12566 [@dyn 1413]
184826: 7b 16 00 01              u64 [sp + 0x100] = s1
184830: 33 07 08 02              a0 = 0x208
184834: 7b 17 08 01              u64 [sp + 0x108] = a0
184838: 33 07 58 16 01           a0 = 0x11658
184843: 7b 17 80 02              u64 [sp + 0x280] = a0
184847: 49 21 88 02 01           u64 [sp + 648] = 0x1
184852: 49 21 a0 02              u64 [sp + 672] = 0
184856: 95 18 00 01              a1 = sp + 0x100
184860: 7b 18 90 02              u64 [sp + 0x290] = a1
184864: 49 21 98 02 01           u64 [sp + 664] = 0x1
184869: 95 17 28 02              a0 = sp + 0x228
184873: 95 18 80 02              a1 = sp + 0x280
184877: 50 20 0c 0b 1a 7d fd     ra = 2828, jump @1491
      :                          @12567 [@dyn 1414]
184884: 82 1a 30 02              a3 = u64 [sp + 0x230]
184888: 7b 1a 38                 u64 [sp + 0x38] = a3
184891: 82 1b 38 02              a4 = u64 [sp + 0x238]
184895: 82 16 28 02              s1 = u64 [sp + 0x228]
184899: 33 07 02                 a0 = 0x2
184902: 33 08                    a1 = 0
184904: 33 09                    a2 = 0
184906: 33 00 0e 0b              ra = 0xb0e
184910: 0a 64                    ecalli 100 // 'log'
184912: 01                       fallthrough
      :                          @12568 [@dyn 1415]
184913: 82 1c 38                 a5 = u64 [sp + 0x38]
184916: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
184921: 53 38 00 00 f0 27        jump @12574 if a1 <u 4293918720
      :                          @12569
184927: 33 07 b0 02 03           a0 = 0x302b0
184932: 95 77 00 00 10           a0 = a0 + 0x100000
184937: 01                       fallthrough
      :                          @12570
184938: 82 78                    a1 = u64 [a0]
184940: c9 87 09                 a2 = a0 - a1
184943: ab c9 11                 jump @12574 if a2 != a5
      :                          @12571
184946: c9 68 09                 a2 = a1 - s1
184949: 01                       fallthrough
      :                          @12572
184950: 82 7a                    a3 = u64 [a0]
184952: ab 8a f2                 jump @12570 if a3 != a1
      :                          @12573
184955: 7b 79                    u64 [a0] = a2
184957: 33 0b                    a4 = 0
184959: 01                       fallthrough
      :                          @12574
184960: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
184964: 51 08 2f                 jump @12581 if a1 == 0
      :                          @12575
184967: 56 38 00 00 01 2c        jump @12581 if a1 >u 65536
      :                          @12576
184973: 82 17 00 02              a0 = u64 [sp + 0x200]
184977: 97 88 04                 a1 = a1 << 0x4
184980: 33 09 b0 02 03           a2 = 0x302b0
184985: 95 99 00 00 10           a2 = a2 + 0x100000
184990: 01                       fallthrough
      :                          @12577
184991: 82 9a                    a3 = u64 [a2]
184993: c9 a9 0b                 a4 = a2 - a3
184996: ab 7b 0f                 jump @12581 if a4 != a0
      :                          @12578
184999: c9 8a 0b                 a4 = a3 - a1
185002: 01                       fallthrough
      :                          @12579
185003: 82 9c                    a5 = u64 [a2]
185005: ab ac f2                 jump @12577 if a5 != a3
      :                          @12580
185008: 7b 9b                    u64 [a2] = a4
185010: 01                       fallthrough
      :                          @12581
185011: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
185015: 82 12 58                 t0 = u64 [sp + 0x58]
185018: 82 13 60                 t1 = u64 [sp + 0x60]
185021: 82 14 50                 t2 = u64 [sp + 0x50]
185024: 82 16 40                 s1 = u64 [sp + 0x40]
185027: 51 07 2d                 jump @12588 if a0 == 0
      :                          @12582
185030: 56 37 00 00 01 2a        jump @12588 if a0 >u 65536
      :                          @12583
185036: 97 77 04                 a0 = a0 << 0x4
185039: 33 08 b0 02 03           a1 = 0x302b0
185044: 95 88 00 00 10           a1 = a1 + 0x100000
185049: 01                       fallthrough
      :                          @12584
185050: 82 89                    a2 = u64 [a1]
185052: c9 98 0a                 a3 = a1 - a2
185055: ab 6a 11                 jump @12588 if a3 != s1
      :                          @12585
185058: c9 79 0a                 a3 = a2 - a0
185061: 01                       fallthrough
      :                          @12586
185062: 82 8b                    a4 = u64 [a1]
185064: ab 9b f2                 jump @12584 if a4 != a2
      :                          @12587
185067: 7b 8a                    u64 [a1] = a3
185069: 33 0c                    a5 = 0
185071: 01                       fallthrough
      :                          @12588
185072: 82 17 10 01              a0 = u64 [sp + 0x110]
185076: 51 07 2d                 jump @12595 if a0 == 0
      :                          @12589
185079: 56 37 00 00 01 2a        jump @12595 if a0 >u 65536
      :                          @12590
185085: 97 77 04                 a0 = a0 << 0x4
185088: 33 08 b0 02 03           a1 = 0x302b0
185093: 95 88 00 00 10           a1 = a1 + 0x100000
185098: 01                       fallthrough
      :                          @12591
185099: 82 89                    a2 = u64 [a1]
185101: c9 98 0a                 a3 = a1 - a2
185104: ab 4a 11                 jump @12595 if a3 != t2
      :                          @12592
185107: c9 79 0a                 a3 = a2 - a0
185110: 01                       fallthrough
      :                          @12593
185111: 82 8b                    a4 = u64 [a1]
185113: ab 9b f2                 jump @12591 if a4 != a2
      :                          @12594
185116: 7b 8a                    u64 [a1] = a3
185118: 33 0c                    a5 = 0
185120: 01                       fallthrough
      :                          @12595
185121: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
185125: 51 07 2d                 jump @12602 if a0 == 0
      :                          @12596
185128: 56 37 00 00 01 2a        jump @12602 if a0 >u 65536
      :                          @12597
185134: 97 77 04                 a0 = a0 << 0x4
185137: 33 08 b0 02 03           a1 = 0x302b0
185142: 95 88 00 00 10           a1 = a1 + 0x100000
185147: 01                       fallthrough
      :                          @12598
185148: 82 89                    a2 = u64 [a1]
185150: c9 98 0a                 a3 = a1 - a2
185153: ab 3a 11                 jump @12602 if a3 != t1
      :                          @12599
185156: c9 79 0a                 a3 = a2 - a0
185159: 01                       fallthrough
      :                          @12600
185160: 82 8b                    a4 = u64 [a1]
185162: ab 9b f2                 jump @12598 if a4 != a2
      :                          @12601
185165: 7b 8a                    u64 [a1] = a3
185167: 33 0c                    a5 = 0
185169: 01                       fallthrough
      :                          @12602
185170: 82 17 a0 01              a0 = u64 [sp + 0x1a0]
185174: 51 07 95 0e              jump @12862 if a0 == 0
      :                          @12603
185178: 56 37 00 00 01 91 0e     jump @12862 if a0 >u 65536
      :                          @12604
185185: 97 77 04                 a0 = a0 << 0x4
185188: 33 08 b0 02 03           a1 = 0x302b0
185193: 95 88 00 00 10           a1 = a1 + 0x100000
185198: 01                       fallthrough
      :                          @12605
185199: 82 89                    a2 = u64 [a1]
185201: c9 98 0a                 a3 = a1 - a2
185204: ab 2a 77 0e              jump @12862 if a3 != t0
      :                          @12606
185208: c9 79 0a                 a3 = a2 - a0
185211: 01                       fallthrough
      :                          @12607
185212: 82 8b                    a4 = u64 [a1]
185214: ab 9b f1                 jump @12605 if a4 != a2
      :                          @12608
185217: 7b 8a                    u64 [a1] = a3
185219: 33 0c                    a5 = 0
185221: 01                       fallthrough
      :                          @12609
185222: ab 9b e9                 jump @12605 if a4 != a2
      :                          @12610
185225: 28 62 0e                 jump @12862
      :                          @12611
185228: 95 17 d0 01              a0 = sp + 0x1d0
185232: 7b 1b 60                 u64 [sp + 0x60] = a4
185235: 64 b8                    a1 = a4
185237: 50 20 10 0b 48 8c fe     ra = 2832, jump @7165
      :                          @12612 [@dyn 1416]
185244: 95 17 f8 01              a0 = sp + 0x1f8
185248: 95 18 d0 01              a1 = sp + 0x1d0
185252: 50 20 12 0b 48 92 fe     ra = 2834, jump @7273
      :                          @12613 [@dyn 1417]
185259: 82 18 08 02              a1 = u64 [sp + 0x208]
185263: 82 17 00 02              a0 = u64 [sp + 0x200]
185267: 33 09 18                 a2 = 0x18
185270: ca 98 08                 a1 = a1 * a2
185273: c8 78 08                 a1 = a1 + a0
185276: 50 20 14 0b 1d 9f fd     ra = 2836, jump @2137
      :                          @12614 [@dyn 1418]
185283: 98 77 01                 a0 = a0 >> 0x1
185286: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
185290: 95 17 a0 01              a0 = sp + 0x1a0
185294: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
185298: 33 07 28 0c              a0 = 0xc28
185302: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
185306: 33 07 80 16 01           a0 = 0x11680
185311: 7b 17 80 02              u64 [sp + 0x280] = a0
185315: 49 21 88 02 01           u64 [sp + 648] = 0x1
185320: 49 21 a0 02              u64 [sp + 672] = 0
185324: 95 18 b8 01              a1 = sp + 0x1b8
185328: 7b 18 90 02              u64 [sp + 0x290] = a1
185332: 49 21 98 02 01           u64 [sp + 664] = 0x1
185337: 95 17 28 02              a0 = sp + 0x228
185341: 95 18 80 02              a1 = sp + 0x280
185345: 50 20 16 0b 46 7b fd     ra = 2838, jump @1491
      :                          @12615 [@dyn 1419]
185352: 82 1a 30 02              a3 = u64 [sp + 0x230]
185356: 7b 1a 58                 u64 [sp + 0x58] = a3
185359: 82 1b 38 02              a4 = u64 [sp + 0x238]
185363: 82 16 28 02              s1 = u64 [sp + 0x228]
185367: 33 07 02                 a0 = 0x2
185370: 33 08                    a1 = 0
185372: 33 09                    a2 = 0
185374: 33 00 18 0b              ra = 0xb18
185378: 0a 64                    ecalli 100 // 'log'
185380: 01                       fallthrough
      :                          @12616 [@dyn 1420]
185381: 82 1c 58                 a5 = u64 [sp + 0x58]
185384: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
185389: 53 38 00 00 f0 32        jump @12622 if a1 <u 4293918720
      :                          @12617
185395: 33 07 b0 02 03           a0 = 0x302b0
185400: 95 77 00 00 10           a0 = a0 + 0x100000
185405: 01                       fallthrough
      :                          @12618
185406: 82 78                    a1 = u64 [a0]
185408: c9 87 09                 a2 = a0 - a1
185411: ab c9 1c                 jump @12622 if a2 != a5
      :                          @12619
185414: c9 68 09                 a2 = a1 - s1
185417: 01                       fallthrough
      :                          @12620
185418: 82 7a                    a3 = u64 [a0]
185420: ab 8a f2                 jump @12618 if a3 != a1
      :                          @12621
185423: 7b 79                    u64 [a0] = a2
185425: 33 0b                    a4 = 0
185427: 95 17 f8 01              a0 = sp + 0x1f8
185431: 33 00 1a 0b              ra = 0xb1a
185435: 28 60 37 fd              jump @209
      :                          @12622
185439: 95 17 f8 01              a0 = sp + 0x1f8
185443: 50 20 1a 0b 58 37 fd     ra = 2842, jump @209
      :                          @12623 [@dyn 1421]
185450: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
185454: 51 08 2f                 jump @12630 if a1 == 0
      :                          @12624
185457: 56 38 00 00 01 2c        jump @12630 if a1 >u 65536
      :                          @12625
185463: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
185467: 97 88 04                 a1 = a1 << 0x4
185470: 33 09 b0 02 03           a2 = 0x302b0
185475: 95 99 00 00 10           a2 = a2 + 0x100000
185480: 01                       fallthrough
      :                          @12626
185481: 82 9a                    a3 = u64 [a2]
185483: c9 a9 0b                 a4 = a2 - a3
185486: ab 7b 0f                 jump @12630 if a4 != a0
      :                          @12627
185489: c9 8a 0b                 a4 = a3 - a1
185492: 01                       fallthrough
      :                          @12628
185493: 82 9c                    a5 = u64 [a2]
185495: ab ac f2                 jump @12626 if a5 != a3
      :                          @12629
185498: 7b 9b                    u64 [a2] = a4
185500: 01                       fallthrough
      :                          @12630
185501: 82 17 10 01              a0 = u64 [sp + 0x110]
185505: 82 16 60                 s1 = u64 [sp + 0x60]
185508: 51 07 47 0d              jump @12862 if a0 == 0
      :                          @12631
185512: 56 37 00 00 01 43 0d     jump @12862 if a0 >u 65536
      :                          @12632
185519: 97 77 04                 a0 = a0 << 0x4
185522: 33 08 b0 02 03           a1 = 0x302b0
185527: 95 88 00 00 10           a1 = a1 + 0x100000
185532: 01                       fallthrough
      :                          @12633
185533: 82 89                    a2 = u64 [a1]
185535: c9 98 0a                 a3 = a1 - a2
185538: ab 6a 29 0d              jump @12862 if a3 != s1
      :                          @12634
185542: c9 79 0a                 a3 = a2 - a0
185545: 01                       fallthrough
      :                          @12635
185546: 82 8b                    a4 = u64 [a1]
185548: ab 9b f1                 jump @12633 if a4 != a2
      :                          @12636
185551: 7b 8a                    u64 [a1] = a3
185553: 33 0c                    a5 = 0
185555: 01                       fallthrough
      :                          @12637
185556: ab 9b e9                 jump @12633 if a4 != a2
      :                          @12638
185559: 28 14 0d                 jump @12862
      :                          @12639
185562: 3a 08 70 02 03           a1 = u64 [0x30270]
185567: 97 89 0d                 a2 = a1 << 0xd
185570: d3 98 08                 a1 = a1 ^ a2
185573: 98 89 07                 a2 = a1 >> 0x7
185576: d3 98 08                 a1 = a1 ^ a2
185579: 97 89 11                 a2 = a1 << 0x11
185582: d3 98 08                 a1 = a1 ^ a2
185585: 3e 08 70 02 03           u64 [0x30270] = a1
185590: ca 38 07                 a0 = a1 * t1
185593: 64 29                    a2 = t0
185595: cd 27 07                 a0 = a0 %u t0
185598: 7b 17 40                 u64 [sp + 0x40] = a0
185601: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
185605: 64 68                    a1 = s1
185607: 7b 1a 50                 u64 [sp + 0x50] = a3
185610: 7b 1c 58                 u64 [sp + 0x58] = a5
185613: 33 00 1c 0b              ra = 0xb1c
185617: 95 11 c0                 sp = sp + 0xffffffffffffffc0
185620: 7b 10 38                 u64 [sp + 0x38] = ra
185623: 7b 15 30                 u64 [sp + 0x30] = s0
185626: 7b 16 28                 u64 [sp + 0x28] = s1
185629: 33 0c 70 02 03           a5 = 0x30270
185634: 3a 06 70 02 03           s1 = u64 [0x30270]
185639: 7b 1b 08                 u64 [sp + 0x8] = a4
185642: 64 95                    s0 = a2
185644: 7b 17                    u64 [sp] = a0
185646: 97 67 0d                 a0 = s1 << 0xd
185649: d3 67 07                 a0 = a0 ^ s1
185652: 98 79 07                 a2 = a0 >> 0x7
185655: d3 97 07                 a0 = a0 ^ a2
185658: 97 79 11                 a2 = a0 << 0x11
185661: d3 97 07                 a0 = a0 ^ a2
185664: 3a 09 50 01 03           a2 = u64 [0x30150]
185669: 3e 07 70 02 03           u64 [0x30270] = a0
185674: 95 5b ff                 a4 = s0 + 0xffffffffffffffff
185677: ca 97 07                 a0 = a0 * a2
185680: cd b7 09                 a2 = a0 %u a4
185683: 95 99 01                 a2 = a2 + 0x1
185686: 33 06 01                 s1 = 0x1
185689: 64 97                    a0 = a2
185691: 28 32 b7 fe              jump @7973
      :                          @12640 [@dyn 1422]
185695: 64 79                    a2 = a0
185697: 64 8a                    a3 = a1
185699: 7b 17 10 01              u64 [sp + 0x110] = a0
185703: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
185707: 82 17 40                 a0 = u64 [sp + 0x40]
185710: 64 98                    a1 = a2
185712: 64 a9                    a2 = a3
185714: 64 6a                    a3 = s1
185716: 82 1b 60                 a4 = u64 [sp + 0x60]
185719: 82 1c 50                 a5 = u64 [sp + 0x50]
185722: 82 14 58                 t2 = u64 [sp + 0x58]
185725: 50 20 1e 0b 85 b7 fe     ra = 2846, jump @7982
      :                          @12641 [@dyn 1423]
185732: 78 17 a0 01              u8 [sp + 0x1a0] = a0
185736: 95 17 b8 01              a0 = sp + 0x1b8
185740: 7b 17 80 02              u64 [sp + 0x280] = a0
185744: 33 07 28 0c              a0 = 0xc28
185748: 7b 17 88 02              u64 [sp + 0x288] = a0
185752: 95 18 10 01              a1 = sp + 0x110
185756: 7b 18 90 02              u64 [sp + 0x290] = a1
185760: 7b 17 98 02              u64 [sp + 0x298] = a0
185764: 95 18 d0 01              a1 = sp + 0x1d0
185768: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
185772: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
185776: 95 17 a0 01              a0 = sp + 0x1a0
185780: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
185784: 33 07 80 0c              a0 = 0xc80
185788: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
185792: 33 07 58 1a 01           a0 = 0x11a58
185797: 7b 17 28 02              u64 [sp + 0x228] = a0
185801: 49 21 30 02 04           u64 [sp + 560] = 0x4
185806: 49 21 48 02              u64 [sp + 584] = 0
185810: 95 18 80 02              a1 = sp + 0x280
185814: 7b 18 38 02              u64 [sp + 0x238] = a1
185818: 49 21 40 02 04           u64 [sp + 576] = 0x4
185823: 95 17 f8 01              a0 = sp + 0x1f8
185827: 95 18 28 02              a1 = sp + 0x228
185831: 50 20 20 0b 60 79 fd     ra = 2848, jump @1491
      :                          @12642 [@dyn 1424]
185838: 82 16 00 02              s1 = u64 [sp + 0x200]
185842: 82 1b 08 02              a4 = u64 [sp + 0x208]
185846: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
185850: 7b 17 60                 u64 [sp + 0x60] = a0
185853: 33 07 02                 a0 = 0x2
185856: 33 08                    a1 = 0
185858: 33 09                    a2 = 0
185860: 64 6a                    a3 = s1
185862: 33 00 22 0b              ra = 0xb22
185866: 0a 64                    ecalli 100 // 'log'
185868: 01                       fallthrough
      :                          @12643 [@dyn 1425]
185869: 82 1c 60                 a5 = u64 [sp + 0x60]
185872: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
185877: 53 38 00 00 f0 d6 0b     jump @12862 if a1 <u 4293918720
      :                          @12644
185884: 33 07 b0 02 03           a0 = 0x302b0
185889: 95 77 00 00 10           a0 = a0 + 0x100000
185894: 01                       fallthrough
      :                          @12645
185895: 82 78                    a1 = u64 [a0]
185897: c9 87 09                 a2 = a0 - a1
185900: ab 69 bf 0b              jump @12862 if a2 != s1
      :                          @12646
185904: c9 c8 09                 a2 = a1 - a5
185907: 01                       fallthrough
      :                          @12647
185908: 82 7a                    a3 = u64 [a0]
185910: ab 8a f1                 jump @12645 if a3 != a1
      :                          @12648
185913: 7b 79                    u64 [a0] = a2
185915: 33 0b                    a4 = 0
185917: 01                       fallthrough
      :                          @12649
185918: ab 8a e9                 jump @12645 if a3 != a1
      :                          @12650
185921: 28 aa 0b                 jump @12862
      :                          @12651
185924: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
185928: 95 17 80 02              a0 = sp + 0x280
185932: 95 16 80 02              s1 = sp + 0x280
185936: 50 20 24 0b d4 88 fe     ra = 2852, jump @7154
      :                          @12652 [@dyn 1426]
185943: 82 17 80 02              a0 = u64 [sp + 0x280]
185947: 82 18 88 02              a1 = u64 [sp + 0x288]
185951: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
185955: 82 17 90 02              a0 = u64 [sp + 0x290]
185959: 82 19 98 02              a2 = u64 [sp + 0x298]
185963: 82 1a a0 02              a3 = u64 [sp + 0x2a0]
185967: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
185971: 7b 17 10 01              u64 [sp + 0x110] = a0
185975: 7b 19 18 01              u64 [sp + 0x118] = a2
185979: 7b 1a a0 01              u64 [sp + 0x1a0] = a3
185983: 95 17 d0 01              a0 = sp + 0x1d0
185987: 7b 17 80 02              u64 [sp + 0x280] = a0
185991: 33 07 08 02              a0 = 0x208
185995: 7b 17 88 02              u64 [sp + 0x288] = a0
185999: 95 17 b8 01              a0 = sp + 0x1b8
186003: 7b 17 90 02              u64 [sp + 0x290] = a0
186007: 33 07 8e 01              a0 = 0x18e
186011: 7b 17 98 02              u64 [sp + 0x298] = a0
186015: 95 18 10 01              a1 = sp + 0x110
186019: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
186023: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
186027: 95 17 a0 01              a0 = sp + 0x1a0
186031: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
186035: 33 07 28 0c              a0 = 0xc28
186039: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
186043: 33 07 f0 1b 01           a0 = 0x11bf0
186048: 7b 17 28 02              u64 [sp + 0x228] = a0
186052: 49 21 30 02 04           u64 [sp + 560] = 0x4
186057: 49 21 48 02              u64 [sp + 584] = 0
186061: 7b 16 38 02              u64 [sp + 0x238] = s1
186065: 49 21 40 02 04           u64 [sp + 576] = 0x4
186070: 95 17 f8 01              a0 = sp + 0x1f8
186074: 95 18 28 02              a1 = sp + 0x228
186078: 50 20 26 0b 69 78 fd     ra = 2854, jump @1491
      :                          @12653 [@dyn 1427]
186085: 82 16 00 02              s1 = u64 [sp + 0x200]
186089: 82 1b 08 02              a4 = u64 [sp + 0x208]
186093: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
186097: 7b 17 60                 u64 [sp + 0x60] = a0
186100: 33 07 02                 a0 = 0x2
186103: 33 08                    a1 = 0
186105: 33 09                    a2 = 0
186107: 64 6a                    a3 = s1
186109: 33 00 28 0b              ra = 0xb28
186113: 0a 64                    ecalli 100 // 'log'
186115: 01                       fallthrough
      :                          @12654 [@dyn 1428]
186116: 82 1c 60                 a5 = u64 [sp + 0x60]
186119: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
186124: 53 38 00 00 f0 25        jump @12660 if a1 <u 4293918720
      :                          @12655
186130: 33 07 b0 02 03           a0 = 0x302b0
186135: 95 77 00 00 10           a0 = a0 + 0x100000
186140: 01                       fallthrough
      :                          @12656
186141: 82 78                    a1 = u64 [a0]
186143: c9 87 09                 a2 = a0 - a1
186146: ab 69 0f                 jump @12660 if a2 != s1
      :                          @12657
186149: c9 c8 09                 a2 = a1 - a5
186152: 01                       fallthrough
      :                          @12658
186153: 82 7a                    a3 = u64 [a0]
186155: ab 8a f2                 jump @12656 if a3 != a1
      :                          @12659
186158: 7b 79                    u64 [a0] = a2
186160: 01                       fallthrough
      :                          @12660
186161: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
186165: 51 08 b6 0a              jump @12862 if a1 == 0
      :                          @12661
186169: 56 38 00 00 01 b2 0a     jump @12862 if a1 >u 65536
      :                          @12662
186176: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
186180: 97 88 04                 a1 = a1 << 0x4
186183: 33 09 b0 02 03           a2 = 0x302b0
186188: 95 99 00 00 10           a2 = a2 + 0x100000
186193: 01                       fallthrough
      :                          @12663
186194: 82 9a                    a3 = u64 [a2]
186196: c9 a9 0b                 a4 = a2 - a3
186199: ab 7b 94 0a              jump @12862 if a4 != a0
      :                          @12664
186203: c9 8a 0b                 a4 = a3 - a1
186206: 01                       fallthrough
      :                          @12665
186207: 82 9c                    a5 = u64 [a2]
186209: ab ac f1                 jump @12663 if a5 != a3
      :                          @12666
186212: 7b 9b                    u64 [a2] = a4
186214: 33 06                    s1 = 0
186216: 01                       fallthrough
      :                          @12667
186217: ab ac e9                 jump @12663 if a5 != a3
      :                          @12668
186220: 28 7f 0a                 jump @12862
      :                          @12669
186223: 7b 19 10 01              u64 [sp + 0x110] = a2
186227: 33 00 2a 0b              ra = 0xb2a
186231: 95 11 d8                 sp = sp + 0xffffffffffffffd8
186234: 7b 10 20                 u64 [sp + 0x20] = ra
186237: 7b 15 18                 u64 [sp + 0x18] = s0
186240: 64 85                    s0 = a1
186242: 64 78                    a1 = a0
186244: 64 17                    a0 = sp
186246: 64 59                    a2 = s0
186248: 33 00 9a 02              ra = 0x29a
186252: 28 a0 b3 fd              jump @2409
      :                          @12670 [@dyn 1429]
186256: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
186260: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
186264: 95 17 00 01              a0 = sp + 0x100
186268: 7b 17 80 02              u64 [sp + 0x280] = a0
186272: 33 07 28 0c              a0 = 0xc28
186276: 7b 17 88 02              u64 [sp + 0x288] = a0
186280: 95 18 a0 01              a1 = sp + 0x1a0
186284: 7b 18 90 02              u64 [sp + 0x290] = a1
186288: 7b 17 98 02              u64 [sp + 0x298] = a0
186292: 95 18 b8 01              a1 = sp + 0x1b8
186296: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
186300: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
186304: 95 18 10 01              a1 = sp + 0x110
186308: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
186312: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
186316: 95 17 d0 01              a0 = sp + 0x1d0
186320: 7b 17 c0 02              u64 [sp + 0x2c0] = a0
186324: 33 07 5e 02              a0 = 0x25e
186328: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
186332: 33 07 b8 25 01           a0 = 0x125b8
186337: 7b 17 28 02              u64 [sp + 0x228] = a0
186341: 49 21 30 02 05           u64 [sp + 560] = 0x5
186346: 49 21 48 02              u64 [sp + 584] = 0
186350: 95 18 80 02              a1 = sp + 0x280
186354: 7b 18 38 02              u64 [sp + 0x238] = a1
186358: 49 21 40 02 05           u64 [sp + 576] = 0x5
186363: 95 17 f8 01              a0 = sp + 0x1f8
186367: 95 18 28 02              a1 = sp + 0x228
186371: 50 20 2c 0b 44 77 fd     ra = 2860, jump @1491
      :                          @12671 [@dyn 1430]
186378: 82 16 00 02              s1 = u64 [sp + 0x200]
186382: 82 1b 08 02              a4 = u64 [sp + 0x208]
186386: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
186390: 7b 17 60                 u64 [sp + 0x60] = a0
186393: 33 07 02                 a0 = 0x2
186396: 33 08                    a1 = 0
186398: 33 09                    a2 = 0
186400: 64 6a                    a3 = s1
186402: 33 00 2e 0b              ra = 0xb2e
186406: 0a 64                    ecalli 100 // 'log'
186408: 01                       fallthrough
      :                          @12672 [@dyn 1431]
186409: 82 1c 60                 a5 = u64 [sp + 0x60]
186412: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
186417: 53 38 00 00 f0 ba 09     jump @12862 if a1 <u 4293918720
      :                          @12673
186424: 33 07 b0 02 03           a0 = 0x302b0
186429: 95 77 00 00 10           a0 = a0 + 0x100000
186434: 01                       fallthrough
      :                          @12674
186435: 82 78                    a1 = u64 [a0]
186437: c9 87 09                 a2 = a0 - a1
186440: ab 69 a3 09              jump @12862 if a2 != s1
      :                          @12675
186444: c9 c8 09                 a2 = a1 - a5
186447: 01                       fallthrough
      :                          @12676
186448: 82 7a                    a3 = u64 [a0]
186450: ab 8a f1                 jump @12674 if a3 != a1
      :                          @12677
186453: 7b 79                    u64 [a0] = a2
186455: 33 0b                    a4 = 0
186457: 01                       fallthrough
      :                          @12678
186458: ab 8a e9                 jump @12674 if a3 != a1
      :                          @12679
186461: 28 8e 09                 jump @12862
      :                          @12680
186464: 95 17 f8 01              a0 = sp + 0x1f8
186468: 95 18 d0 01              a1 = sp + 0x1d0
186472: 95 16 f8 01              s1 = sp + 0x1f8
186476: 33 00 30 0b              ra = 0xb30
186480: 95 11 a0                 sp = sp + 0xffffffffffffffa0
186483: 7b 10 58                 u64 [sp + 0x58] = ra
186486: 7b 15 50                 u64 [sp + 0x50] = s0
186489: 7b 16 48                 u64 [sp + 0x48] = s1
186492: 64 85                    s0 = a1
186494: 33 09 b0 02 03           a2 = 0x302b0
186499: 33 06 00 00 10           s1 = 0x100000
186504: c8 69 09                 a2 = a2 + s1
186507: 28 fa 59 fe              jump @6149
      :                          @12681 [@dyn 1432]
186511: 7b 16 10 01              u64 [sp + 0x110] = s1
186515: 33 07 20 02              a0 = 0x220
186519: 7b 17 18 01              u64 [sp + 0x118] = a0
186523: 33 07 08 2e 01           a0 = 0x12e08
186528: 7b 17 80 02              u64 [sp + 0x280] = a0
186532: 49 21 88 02 01           u64 [sp + 648] = 0x1
186537: 49 21 a0 02              u64 [sp + 672] = 0
186541: 95 18 10 01              a1 = sp + 0x110
186545: 7b 18 90 02              u64 [sp + 0x290] = a1
186549: 49 21 98 02 01           u64 [sp + 664] = 0x1
186554: 95 17 28 02              a0 = sp + 0x228
186558: 95 18 80 02              a1 = sp + 0x280
186562: 50 20 32 0b 85 76 fd     ra = 2866, jump @1491
      :                          @12682 [@dyn 1433]
186569: 82 16 30 02              s1 = u64 [sp + 0x230]
186573: 82 1b 38 02              a4 = u64 [sp + 0x238]
186577: 82 17 28 02              a0 = u64 [sp + 0x228]
186581: 7b 17 60                 u64 [sp + 0x60] = a0
186584: 33 07 02                 a0 = 0x2
186587: 33 08                    a1 = 0
186589: 33 09                    a2 = 0
186591: 64 6a                    a3 = s1
186593: 33 00 34 0b              ra = 0xb34
186597: 0a 64                    ecalli 100 // 'log'
186599: 01                       fallthrough
      :                          @12683 [@dyn 1434]
186600: 82 1c 60                 a5 = u64 [sp + 0x60]
186603: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
186608: 53 38 00 00 f0 27        jump @12689 if a1 <u 4293918720
      :                          @12684
186614: 33 07 b0 02 03           a0 = 0x302b0
186619: 95 77 00 00 10           a0 = a0 + 0x100000
186624: 01                       fallthrough
      :                          @12685
186625: 82 78                    a1 = u64 [a0]
186627: c9 87 09                 a2 = a0 - a1
186630: ab 69 11                 jump @12689 if a2 != s1
      :                          @12686
186633: c9 c8 09                 a2 = a1 - a5
186636: 01                       fallthrough
      :                          @12687
186637: 82 7a                    a3 = u64 [a0]
186639: ab 8a f2                 jump @12685 if a3 != a1
      :                          @12688
186642: 7b 79                    u64 [a0] = a2
186644: 33 0b                    a4 = 0
186646: 01                       fallthrough
      :                          @12689
186647: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
186651: 51 08 a1 05              jump @12797 if a1 == 0
      :                          @12690
186655: 56 38 00 00 02 9d 05     jump @12797 if a1 >u 131072
      :                          @12691
186662: 82 17 00 02              a0 = u64 [sp + 0x200]
186666: 97 88 03                 a1 = a1 << 0x3
186669: 33 09 b0 02 03           a2 = 0x302b0
186674: 95 99 00 00 10           a2 = a2 + 0x100000
186679: 01                       fallthrough
      :                          @12692
186680: 82 9a                    a3 = u64 [a2]
186682: c9 a9 0b                 a4 = a2 - a3
186685: ab 7b 7f 05              jump @12797 if a4 != a0
      :                          @12693
186689: c9 8a 0b                 a4 = a3 - a1
186692: 01                       fallthrough
      :                          @12694
186693: 82 9c                    a5 = u64 [a2]
186695: ab ac f1                 jump @12692 if a5 != a3
      :                          @12695
186698: 7b 9b                    u64 [a2] = a4
186700: 33 06                    s1 = 0
186702: 01                       fallthrough
      :                          @12696
186703: ab ac e9                 jump @12692 if a5 != a3
      :                          @12697
186706: 28 6a 05                 jump @12797
      :                          @12698 [@dyn 1435]
186709: 95 17 6f                 a0 = sp + 0x6f
186712: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
186716: 33 07 5c 0c              a0 = 0xc5c
186720: 7b 17 00 02              u64 [sp + 0x200] = a0
186724: 33 07 18 2e 01           a0 = 0x12e18
186729: 7b 17 80 02              u64 [sp + 0x280] = a0
186733: 49 21 88 02 01           u64 [sp + 648] = 0x1
186738: 49 21 a0 02              u64 [sp + 672] = 0
186742: 95 18 f8 01              a1 = sp + 0x1f8
186746: 7b 18 90 02              u64 [sp + 0x290] = a1
186750: 49 21 98 02 01           u64 [sp + 664] = 0x1
186755: 95 17 28 02              a0 = sp + 0x228
186759: 95 18 80 02              a1 = sp + 0x280
186763: 50 20 38 0b bc 75 fd     ra = 2872, jump @1491
      :                          @12699 [@dyn 1436]
186770: 82 16 30 02              s1 = u64 [sp + 0x230]
186774: 82 1b 38 02              a4 = u64 [sp + 0x238]
186778: 82 17 28 02              a0 = u64 [sp + 0x228]
186782: 7b 17 60                 u64 [sp + 0x60] = a0
186785: 33 07 02                 a0 = 0x2
186788: 33 08                    a1 = 0
186790: 33 09                    a2 = 0
186792: 64 6a                    a3 = s1
186794: 33 00 3a 0b              ra = 0xb3a
186798: 0a 64                    ecalli 100 // 'log'
186800: 01                       fallthrough
      :                          @12700 [@dyn 1437]
186801: 82 1c 60                 a5 = u64 [sp + 0x60]
186804: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
186809: 53 38 00 00 f0 32 08     jump @12862 if a1 <u 4293918720
      :                          @12701
186816: 33 07 b0 02 03           a0 = 0x302b0
186821: 95 77 00 00 10           a0 = a0 + 0x100000
186826: 01                       fallthrough
      :                          @12702
186827: 82 78                    a1 = u64 [a0]
186829: c9 87 09                 a2 = a0 - a1
186832: ab 69 1b 08              jump @12862 if a2 != s1
      :                          @12703
186836: c9 c8 09                 a2 = a1 - a5
186839: 01                       fallthrough
      :                          @12704
186840: 82 7a                    a3 = u64 [a0]
186842: ab 8a f1                 jump @12702 if a3 != a1
      :                          @12705
186845: 7b 79                    u64 [a0] = a2
186847: 33 0b                    a4 = 0
186849: 01                       fallthrough
      :                          @12706
186850: ab 8a e9                 jump @12702 if a3 != a1
      :                          @12707
186853: 28 06 08                 jump @12862
      :                          @12708
186856: 95 17 f8 01              a0 = sp + 0x1f8
186860: 95 18 d0 01              a1 = sp + 0x1d0
186864: 95 16 f8 01              s1 = sp + 0x1f8
186868: 33 00 3c 0b              ra = 0xb3c
186872: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
186876: 7b 10 00 01              u64 [sp + 0x100] = ra
186880: 7b 15 f8 00              u64 [sp + 0xf8] = s0
186884: 7b 16 f0 00              u64 [sp + 0xf0] = s1
186888: 7b 18 98 00              u64 [sp + 0x98] = a1
186892: 49 21 a0 00              u64 [sp + 160] = 0
186896: 49 21 a8 00 08           u64 [sp + 168] = 0x8
186901: 49 21 b0 00              u64 [sp + 176] = 0
186905: 49 21 b8 00              u64 [sp + 184] = 0
186909: 49 21 c0 00 08           u64 [sp + 192] = 0x8
186914: 49 21 c8 00              u64 [sp + 200] = 0
186918: 33 03 b0 02 03           t1 = 0x302b0
186923: 33 02 00 00 10           t0 = 0x100000
186928: c8 23 09                 a2 = t1 + t0
186931: 28 bc a7 fe              jump @7767
      :                          @12709 [@dyn 1438]
186935: 7b 16 10 01              u64 [sp + 0x110] = s1
186939: 33 07 20 02              a0 = 0x220
186943: 7b 17 18 01              u64 [sp + 0x118] = a0
186947: 33 07 60 19 01           a0 = 0x11960
186952: 7b 17 80 02              u64 [sp + 0x280] = a0
186956: 49 21 88 02 01           u64 [sp + 648] = 0x1
186961: 49 21 a0 02              u64 [sp + 672] = 0
186965: 95 18 10 01              a1 = sp + 0x110
186969: 7b 18 90 02              u64 [sp + 0x290] = a1
186973: 49 21 98 02 01           u64 [sp + 664] = 0x1
186978: 95 17 28 02              a0 = sp + 0x228
186982: 95 18 80 02              a1 = sp + 0x280
186986: 50 20 3e 0b dd 74 fd     ra = 2878, jump @1491
      :                          @12710 [@dyn 1439]
186993: 82 16 30 02              s1 = u64 [sp + 0x230]
186997: 82 1b 38 02              a4 = u64 [sp + 0x238]
187001: 82 17 28 02              a0 = u64 [sp + 0x228]
187005: 7b 17 60                 u64 [sp + 0x60] = a0
187008: 33 07 02                 a0 = 0x2
187011: 33 08                    a1 = 0
187013: 33 09                    a2 = 0
187015: 64 6a                    a3 = s1
187017: 33 00 40 0b              ra = 0xb40
187021: 0a 64                    ecalli 100 // 'log'
187023: 01                       fallthrough
      :                          @12711 [@dyn 1440]
187024: 82 1c 60                 a5 = u64 [sp + 0x60]
187027: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
187032: 53 38 00 00 f0 27        jump @12717 if a1 <u 4293918720
      :                          @12712
187038: 33 07 b0 02 03           a0 = 0x302b0
187043: 95 77 00 00 10           a0 = a0 + 0x100000
187048: 01                       fallthrough
      :                          @12713
187049: 82 78                    a1 = u64 [a0]
187051: c9 87 09                 a2 = a0 - a1
187054: ab 69 11                 jump @12717 if a2 != s1
      :                          @12714
187057: c9 c8 09                 a2 = a1 - a5
187060: 01                       fallthrough
      :                          @12715
187061: 82 7a                    a3 = u64 [a0]
187063: ab 8a f2                 jump @12713 if a3 != a1
      :                          @12716
187066: 7b 79                    u64 [a0] = a2
187068: 33 0b                    a4 = 0
187070: 01                       fallthrough
      :                          @12717
187071: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
187075: 51 08 3c                 jump @12724 if a1 == 0
      :                          @12718
187078: 56 38 00 00 02 39        jump @12724 if a1 >u 131072
      :                          @12719
187084: 82 17 00 02              a0 = u64 [sp + 0x200]
187088: 97 88 03                 a1 = a1 << 0x3
187091: 33 09 b0 02 03           a2 = 0x302b0
187096: 95 99 00 00 10           a2 = a2 + 0x100000
187101: 01                       fallthrough
      :                          @12720
187102: 82 9a                    a3 = u64 [a2]
187104: c9 a9 0b                 a4 = a2 - a3
187107: ab 7b 1c                 jump @12724 if a4 != a0
      :                          @12721
187110: c9 8a 0b                 a4 = a3 - a1
187113: 01                       fallthrough
      :                          @12722
187114: 82 9c                    a5 = u64 [a2]
187116: ab ac f2                 jump @12720 if a5 != a3
      :                          @12723
187119: 7b 9b                    u64 [a2] = a4
187121: 33 06                    s1 = 0
187123: 95 17 d0 01              a0 = sp + 0x1d0
187127: 33 00 42 0b              ra = 0xb42
187131: 28 03 32 fd              jump @249
      :                          @12724
187135: 95 17 d0 01              a0 = sp + 0x1d0
187139: 50 20 42 0b fb 31 fd     ra = 2882, jump @249
      :                          @12725 [@dyn 1441]
187146: 28 e1 06                 jump @12862
      :                          @12726
187149: 95 17 10 01              a0 = sp + 0x110
187153: 33 00 44 0b              ra = 0xb44
187157: 95 11 f8                 sp = sp + 0xfffffffffffffff8
187160: 7b 15                    u64 [sp] = s0
187162: 33 03 b0 02 03           t1 = 0x302b0
187167: 33 02 00 00 10           t0 = 0x100000
187172: c8 23 04                 t2 = t1 + t0
187175: 28 0c a2 fd              jump @2278
      :                          @12727 [@dyn 1442]
187179: 95 17 d0 01              a0 = sp + 0x1d0
187183: 95 18 b8 01              a1 = sp + 0x1b8
187187: 95 19 10 01              a2 = sp + 0x110
187191: 95 16 d0 01              s1 = sp + 0x1d0
187195: 50 20 46 0b 68 92 fe     ra = 2886, jump @7401
      :                          @12728 [@dyn 1443]
187202: 95 17 10 01              a0 = sp + 0x110
187206: 7b 17 28 02              u64 [sp + 0x228] = a0
187210: 33 07 38 02              a0 = 0x238
187214: 7b 17 30 02              u64 [sp + 0x230] = a0
187218: 7b 16 38 02              u64 [sp + 0x238] = s1
187222: 7b 17 40 02              u64 [sp + 0x240] = a0
187226: 33 07 90 17 01           a0 = 0x11790
187231: 7b 17 80 02              u64 [sp + 0x280] = a0
187235: 49 21 88 02 02           u64 [sp + 648] = 0x2
187240: 49 21 a0 02              u64 [sp + 672] = 0
187244: 95 18 28 02              a1 = sp + 0x228
187248: 7b 18 90 02              u64 [sp + 0x290] = a1
187252: 49 21 98 02 02           u64 [sp + 664] = 0x2
187257: 95 17 f8 01              a0 = sp + 0x1f8
187261: 95 18 80 02              a1 = sp + 0x280
187265: 50 20 48 0b c6 73 fd     ra = 2888, jump @1491
      :                          @12729 [@dyn 1444]
187272: 82 16 00 02              s1 = u64 [sp + 0x200]
187276: 82 1b 08 02              a4 = u64 [sp + 0x208]
187280: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
187284: 7b 17 60                 u64 [sp + 0x60] = a0
187287: 33 07 02                 a0 = 0x2
187290: 33 08                    a1 = 0
187292: 33 09                    a2 = 0
187294: 64 6a                    a3 = s1
187296: 33 00 4a 0b              ra = 0xb4a
187300: 0a 64                    ecalli 100 // 'log'
187302: 01                       fallthrough
      :                          @12730 [@dyn 1445]
187303: 82 1c 60                 a5 = u64 [sp + 0x60]
187306: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
187311: 53 38 00 00 f0 27        jump @12736 if a1 <u 4293918720
      :                          @12731
187317: 33 07 b0 02 03           a0 = 0x302b0
187322: 95 77 00 00 10           a0 = a0 + 0x100000
187327: 01                       fallthrough
      :                          @12732
187328: 82 78                    a1 = u64 [a0]
187330: c9 87 09                 a2 = a0 - a1
187333: ab 69 11                 jump @12736 if a2 != s1
      :                          @12733
187336: c9 c8 09                 a2 = a1 - a5
187339: 01                       fallthrough
      :                          @12734
187340: 82 7a                    a3 = u64 [a0]
187342: ab 8a f2                 jump @12732 if a3 != a1
      :                          @12735
187345: 7b 79                    u64 [a0] = a2
187347: 33 0b                    a4 = 0
187349: 01                       fallthrough
      :                          @12736
187350: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
187354: 51 08 31                 jump @12743 if a1 == 0
      :                          @12737
187357: 56 38 00 00 02 2e        jump @12743 if a1 >u 131072
      :                          @12738
187363: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
187367: 97 88 03                 a1 = a1 << 0x3
187370: 33 09 b0 02 03           a2 = 0x302b0
187375: 95 99 00 00 10           a2 = a2 + 0x100000
187380: 01                       fallthrough
      :                          @12739
187381: 82 9a                    a3 = u64 [a2]
187383: c9 a9 0b                 a4 = a2 - a3
187386: ab 7b 11                 jump @12743 if a4 != a0
      :                          @12740
187389: c9 8a 0b                 a4 = a3 - a1
187392: 01                       fallthrough
      :                          @12741
187393: 82 9c                    a5 = u64 [a2]
187395: ab ac f2                 jump @12739 if a5 != a3
      :                          @12742
187398: 7b 9b                    u64 [a2] = a4
187400: 33 06                    s1 = 0
187402: 01                       fallthrough
      :                          @12743
187403: 82 18 10 01              a1 = u64 [sp + 0x110]
187407: 51 08 3c                 jump @12750 if a1 == 0
      :                          @12744
187410: 56 38 00 00 02 39        jump @12750 if a1 >u 131072
      :                          @12745
187416: 82 17 18 01              a0 = u64 [sp + 0x118]
187420: 97 88 03                 a1 = a1 << 0x3
187423: 33 09 b0 02 03           a2 = 0x302b0
187428: 95 99 00 00 10           a2 = a2 + 0x100000
187433: 01                       fallthrough
      :                          @12746
187434: 82 9a                    a3 = u64 [a2]
187436: c9 a9 0b                 a4 = a2 - a3
187439: ab 7b 1c                 jump @12750 if a4 != a0
      :                          @12747
187442: c9 8a 0b                 a4 = a3 - a1
187445: 01                       fallthrough
      :                          @12748
187446: 82 9c                    a5 = u64 [a2]
187448: ab ac f2                 jump @12746 if a5 != a3
      :                          @12749
187451: 7b 9b                    u64 [a2] = a4
187453: 33 06                    s1 = 0
187455: 95 17 b8 01              a0 = sp + 0x1b8
187459: 33 00 4c 0b              ra = 0xb4c
187463: 28 b7 30 fd              jump @249
      :                          @12750
187467: 95 17 b8 01              a0 = sp + 0x1b8
187471: 50 20 4c 0b af 30 fd     ra = 2892, jump @249
      :                          @12751 [@dyn 1446]
187478: 28 95 05                 jump @12862
      :                          @12752
187481: 95 17 f8 01              a0 = sp + 0x1f8
187485: 50 20 4e 0b b1 6d fe     ra = 2894, jump @6721
      :                          @12753 [@dyn 1447]
187492: 7b 17 10 01              u64 [sp + 0x110] = a0
187496: 95 17 10 01              a0 = sp + 0x110
187500: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
187504: 33 07 28 0c              a0 = 0xc28
187508: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
187512: 33 07 28 15 01           a0 = 0x11528
187517: 7b 17 80 02              u64 [sp + 0x280] = a0
187521: 49 21 88 02 01           u64 [sp + 648] = 0x1
187526: 49 21 a0 02              u64 [sp + 672] = 0
187530: 95 18 d0 01              a1 = sp + 0x1d0
187534: 7b 18 90 02              u64 [sp + 0x290] = a1
187538: 49 21 98 02 01           u64 [sp + 664] = 0x1
187543: 95 17 28 02              a0 = sp + 0x228
187547: 95 18 80 02              a1 = sp + 0x280
187551: 50 20 50 0b a8 72 fd     ra = 2896, jump @1491
      :                          @12754 [@dyn 1448]
187558: 82 16 30 02              s1 = u64 [sp + 0x230]
187562: 82 1b 38 02              a4 = u64 [sp + 0x238]
187566: 82 17 28 02              a0 = u64 [sp + 0x228]
187570: 7b 17 60                 u64 [sp + 0x60] = a0
187573: 33 07 02                 a0 = 0x2
187576: 33 08                    a1 = 0
187578: 33 09                    a2 = 0
187580: 64 6a                    a3 = s1
187582: 33 00 52 0b              ra = 0xb52
187586: 0a 64                    ecalli 100 // 'log'
187588: 01                       fallthrough
      :                          @12755 [@dyn 1449]
187589: 82 1c 60                 a5 = u64 [sp + 0x60]
187592: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
187597: 53 38 00 00 f0 32        jump @12761 if a1 <u 4293918720
      :                          @12756
187603: 33 07 b0 02 03           a0 = 0x302b0
187608: 95 77 00 00 10           a0 = a0 + 0x100000
187613: 01                       fallthrough
      :                          @12757
187614: 82 78                    a1 = u64 [a0]
187616: c9 87 09                 a2 = a0 - a1
187619: ab 69 1c                 jump @12761 if a2 != s1
      :                          @12758
187622: c9 c8 09                 a2 = a1 - a5
187625: 01                       fallthrough
      :                          @12759
187626: 82 7a                    a3 = u64 [a0]
187628: ab 8a f2                 jump @12757 if a3 != a1
      :                          @12760
187631: 7b 79                    u64 [a0] = a2
187633: 33 0b                    a4 = 0
187635: 95 17 f8 01              a0 = sp + 0x1f8
187639: 33 00 54 0b              ra = 0xb54
187643: 28 5f 2f fd              jump @229
      :                          @12761
187647: 95 17 f8 01              a0 = sp + 0x1f8
187651: 50 20 54 0b 57 2f fd     ra = 2900, jump @229
      :                          @12762 [@dyn 1450]
187658: 28 e1 04                 jump @12862
      :                          @12763
187661: 95 17 28 02              a0 = sp + 0x228
187665: 95 18 d0 01              a1 = sp + 0x1d0
187669: 95 16 28 02              s1 = sp + 0x228
187673: 50 20 56 0b d2 6f fe     ra = 2902, jump @6782
      :                          @12764 [@dyn 1451]
187680: 7b 16 10 01              u64 [sp + 0x110] = s1
187684: 33 07 20 02              a0 = 0x220
187688: 7b 17 18 01              u64 [sp + 0x118] = a0
187692: 33 07 50 15 01           a0 = 0x11550
187697: 7b 17 80 02              u64 [sp + 0x280] = a0
187701: 49 21 88 02 01           u64 [sp + 648] = 0x1
187706: 49 21 a0 02              u64 [sp + 672] = 0
187710: 95 18 10 01              a1 = sp + 0x110
187714: 7b 18 90 02              u64 [sp + 0x290] = a1
187718: 49 21 98 02 01           u64 [sp + 664] = 0x1
187723: 95 17 f8 01              a0 = sp + 0x1f8
187727: 95 18 80 02              a1 = sp + 0x280
187731: 50 20 58 0b f4 71 fd     ra = 2904, jump @1491
      :                          @12765 [@dyn 1452]
187738: 82 18 28 02              a1 = u64 [sp + 0x228]
187742: 51 08 2f                 jump @12772 if a1 == 0
      :                          @12766
187745: 56 38 00 00 02 2c        jump @12772 if a1 >u 131072
      :                          @12767
187751: 82 17 30 02              a0 = u64 [sp + 0x230]
187755: 97 88 03                 a1 = a1 << 0x3
187758: 33 09 b0 02 03           a2 = 0x302b0
187763: 95 99 00 00 10           a2 = a2 + 0x100000
187768: 01                       fallthrough
      :                          @12768
187769: 82 9a                    a3 = u64 [a2]
187771: c9 a9 0b                 a4 = a2 - a3
187774: ab 7b 0f                 jump @12772 if a4 != a0
      :                          @12769
187777: c9 8a 0b                 a4 = a3 - a1
187780: 01                       fallthrough
      :                          @12770
187781: 82 9c                    a5 = u64 [a2]
187783: ab ac f2                 jump @12768 if a5 != a3
      :                          @12771
187786: 7b 9b                    u64 [a2] = a4
187788: 01                       fallthrough
      :                          @12772
187789: 82 16 00 02              s1 = u64 [sp + 0x200]
187793: 82 1b 08 02              a4 = u64 [sp + 0x208]
187797: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
187801: 7b 17 60                 u64 [sp + 0x60] = a0
187804: 33 07 02                 a0 = 0x2
187807: 33 08                    a1 = 0
187809: 33 09                    a2 = 0
187811: 64 6a                    a3 = s1
187813: 33 00 5a 0b              ra = 0xb5a
187817: 0a 64                    ecalli 100 // 'log'
187819: 01                       fallthrough
      :                          @12773 [@dyn 1453]
187820: 82 1c 60                 a5 = u64 [sp + 0x60]
187823: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
187828: 53 38 00 00 f0 08 01     jump @12797 if a1 <u 4293918720
      :                          @12774
187835: 33 07 b0 02 03           a0 = 0x302b0
187840: 95 77 00 00 10           a0 = a0 + 0x100000
187845: 01                       fallthrough
      :                          @12775
187846: 82 78                    a1 = u64 [a0]
187848: c9 87 09                 a2 = a0 - a1
187851: ab 69 f1 00              jump @12797 if a2 != s1
      :                          @12776
187855: c9 c8 09                 a2 = a1 - a5
187858: 01                       fallthrough
      :                          @12777
187859: 82 7a                    a3 = u64 [a0]
187861: ab 8a f1                 jump @12775 if a3 != a1
      :                          @12778
187864: 7b 79                    u64 [a0] = a2
187866: 33 0b                    a4 = 0
187868: 01                       fallthrough
      :                          @12779
187869: ab 8a e9                 jump @12775 if a3 != a1
      :                          @12780
187872: 28 dc 00                 jump @12797
      :                          @12781
187875: 95 17 28 02              a0 = sp + 0x228
187879: 95 18 d0 01              a1 = sp + 0x1d0
187883: 95 16 28 02              s1 = sp + 0x228
187887: 50 20 5c 0b c8 74 fe     ra = 2908, jump @6898
      :                          @12782 [@dyn 1454]
187894: 7b 16 10 01              u64 [sp + 0x110] = s1
187898: 33 07 10 02              a0 = 0x210
187902: 7b 17 18 01              u64 [sp + 0x118] = a0
187906: 33 07 70 15 01           a0 = 0x11570
187911: 7b 17 80 02              u64 [sp + 0x280] = a0
187915: 49 21 88 02 01           u64 [sp + 648] = 0x1
187920: 49 21 a0 02              u64 [sp + 672] = 0
187924: 95 18 10 01              a1 = sp + 0x110
187928: 7b 18 90 02              u64 [sp + 0x290] = a1
187932: 49 21 98 02 01           u64 [sp + 664] = 0x1
187937: 95 17 f8 01              a0 = sp + 0x1f8
187941: 95 18 80 02              a1 = sp + 0x280
187945: 50 20 5e 0b 1e 71 fd     ra = 2910, jump @1491
      :                          @12783 [@dyn 1455]
187952: 82 18 28 02              a1 = u64 [sp + 0x228]
187956: 51 08 2f                 jump @12790 if a1 == 0
      :                          @12784
187959: 56 38 00 00 01 2c        jump @12790 if a1 >u 65536
      :                          @12785
187965: 82 17 30 02              a0 = u64 [sp + 0x230]
187969: 97 88 04                 a1 = a1 << 0x4
187972: 33 09 b0 02 03           a2 = 0x302b0
187977: 95 99 00 00 10           a2 = a2 + 0x100000
187982: 01                       fallthrough
      :                          @12786
187983: 82 9a                    a3 = u64 [a2]
187985: c9 a9 0b                 a4 = a2 - a3
187988: ab 7b 0f                 jump @12790 if a4 != a0
      :                          @12787
187991: c9 8a 0b                 a4 = a3 - a1
187994: 01                       fallthrough
      :                          @12788
187995: 82 9c                    a5 = u64 [a2]
187997: ab ac f2                 jump @12786 if a5 != a3
      :                          @12789
188000: 7b 9b                    u64 [a2] = a4
188002: 01                       fallthrough
      :                          @12790
188003: 82 16 00 02              s1 = u64 [sp + 0x200]
188007: 82 1b 08 02              a4 = u64 [sp + 0x208]
188011: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
188015: 7b 17 60                 u64 [sp + 0x60] = a0
188018: 33 07 02                 a0 = 0x2
188021: 33 08                    a1 = 0
188023: 33 09                    a2 = 0
188025: 64 6a                    a3 = s1
188027: 33 00 60 0b              ra = 0xb60
188031: 0a 64                    ecalli 100 // 'log'
188033: 01                       fallthrough
      :                          @12791 [@dyn 1456]
188034: 82 1c 60                 a5 = u64 [sp + 0x60]
188037: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
188042: 53 38 00 00 f0 32        jump @12797 if a1 <u 4293918720
      :                          @12792
188048: 33 07 b0 02 03           a0 = 0x302b0
188053: 95 77 00 00 10           a0 = a0 + 0x100000
188058: 01                       fallthrough
      :                          @12793
188059: 82 78                    a1 = u64 [a0]
188061: c9 87 09                 a2 = a0 - a1
188064: ab 69 1c                 jump @12797 if a2 != s1
      :                          @12794
188067: c9 c8 09                 a2 = a1 - a5
188070: 01                       fallthrough
      :                          @12795
188071: 82 7a                    a3 = u64 [a0]
188073: ab 8a f2                 jump @12793 if a3 != a1
      :                          @12796
188076: 7b 79                    u64 [a0] = a2
188078: 33 0b                    a4 = 0
188080: 95 17 d0 01              a0 = sp + 0x1d0
188084: 33 00 62 0b              ra = 0xb62
188088: 28 a2 2d fd              jump @229
      :                          @12797
188092: 95 17 d0 01              a0 = sp + 0x1d0
188096: 50 20 62 0b 9a 2d fd     ra = 2914, jump @229
      :                          @12798 [@dyn 1457]
188103: 28 24 03                 jump @12862
      :                          @12799
188106: 95 17 f8 01              a0 = sp + 0x1f8
188110: 95 18 d0 01              a1 = sp + 0x1d0
188114: 50 20 64 0b 64 7e fe     ra = 2916, jump @7108
      :                          @12800 [@dyn 1458]
188121: 82 17 08 02              a0 = u64 [sp + 0x208]
188125: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
188129: 95 17 b8 01              a0 = sp + 0x1b8
188133: 7b 17 10 01              u64 [sp + 0x110] = a0
188137: 33 07 28 0c              a0 = 0xc28
188141: 7b 17 18 01              u64 [sp + 0x118] = a0
188145: 33 07 c8 15 01           a0 = 0x115c8
188150: 7b 17 80 02              u64 [sp + 0x280] = a0
188154: 49 21 88 02 01           u64 [sp + 648] = 0x1
188159: 49 21 a0 02              u64 [sp + 672] = 0
188163: 95 18 10 01              a1 = sp + 0x110
188167: 7b 18 90 02              u64 [sp + 0x290] = a1
188171: 49 21 98 02 01           u64 [sp + 664] = 0x1
188176: 95 17 28 02              a0 = sp + 0x228
188180: 95 18 80 02              a1 = sp + 0x280
188184: 50 20 66 0b 2f 70 fd     ra = 2918, jump @1491
      :                          @12801 [@dyn 1459]
188191: 82 16 30 02              s1 = u64 [sp + 0x230]
188195: 82 1b 38 02              a4 = u64 [sp + 0x238]
188199: 82 17 28 02              a0 = u64 [sp + 0x228]
188203: 7b 17 60                 u64 [sp + 0x60] = a0
188206: 33 07 02                 a0 = 0x2
188209: 33 08                    a1 = 0
188211: 33 09                    a2 = 0
188213: 64 6a                    a3 = s1
188215: 33 00 68 0b              ra = 0xb68
188219: 0a 64                    ecalli 100 // 'log'
188221: 01                       fallthrough
      :                          @12802 [@dyn 1460]
188222: 82 1c 60                 a5 = u64 [sp + 0x60]
188225: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
188230: 53 38 00 00 f0 27        jump @12808 if a1 <u 4293918720
      :                          @12803
188236: 33 07 b0 02 03           a0 = 0x302b0
188241: 95 77 00 00 10           a0 = a0 + 0x100000
188246: 01                       fallthrough
      :                          @12804
188247: 82 78                    a1 = u64 [a0]
188249: c9 87 09                 a2 = a0 - a1
188252: ab 69 11                 jump @12808 if a2 != s1
      :                          @12805
188255: c9 c8 09                 a2 = a1 - a5
188258: 01                       fallthrough
      :                          @12806
188259: 82 7a                    a3 = u64 [a0]
188261: ab 8a f2                 jump @12804 if a3 != a1
      :                          @12807
188264: 7b 79                    u64 [a0] = a2
188266: 33 0b                    a4 = 0
188268: 01                       fallthrough
      :                          @12808
188269: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
188273: 52 08 07                 jump @12810 if a1 != 0
      :                          @12809
188276: 28 d9 4d ff              jump @10535
      :                          @12810
188280: 54 38 00 00 02 0a        jump @12812 if a1 <=u 131072
      :                          @12811
188286: 28 cf 4d ff              jump @10535
      :                          @12812
188290: 82 17 00 02              a0 = u64 [sp + 0x200]
188294: 97 88 03                 a1 = a1 << 0x3
188297: 33 09 b0 02 03           a2 = 0x302b0
188302: 95 99 00 00 10           a2 = a2 + 0x100000
188307: 01                       fallthrough
      :                          @12813
188308: 82 9a                    a3 = u64 [a2]
188310: c9 a9 0b                 a4 = a2 - a3
188313: aa 7b 07                 jump @12815 if a4 == a0
      :                          @12814
188316: 28 b1 4d ff              jump @10535
      :                          @12815
188320: c9 8a 0b                 a4 = a3 - a1
188323: 01                       fallthrough
      :                          @12816
188324: 82 9c                    a5 = u64 [a2]
188326: ab ac ee                 jump @12813 if a5 != a3
      :                          @12817
188329: 7b 9b                    u64 [a2] = a4
188331: 33 06                    s1 = 0
188333: 01                       fallthrough
      :                          @12818
188334: ab ac e6                 jump @12813 if a5 != a3
      :                          @12819
188337: 28 9c 4d ff              jump @10535
      :                          @12820
188341: 00                       trap
      :                          @12821
188342: 95 17 f8 01              a0 = sp + 0x1f8
188346: 50 20 6a 0b f1 55 fe     ra = 2922, jump @6233
      :                          @12822 [@dyn 1461]
188353: 7b 17 10 01              u64 [sp + 0x110] = a0
188357: 95 17 10 01              a0 = sp + 0x110
188361: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
188365: 33 07 28 0c              a0 = 0xc28
188369: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
188373: 33 07 b0 11 01           a0 = 0x111b0
188378: 7b 17 80 02              u64 [sp + 0x280] = a0
188382: 49 21 88 02 01           u64 [sp + 648] = 0x1
188387: 49 21 a0 02              u64 [sp + 672] = 0
188391: 95 18 d0 01              a1 = sp + 0x1d0
188395: 7b 18 90 02              u64 [sp + 0x290] = a1
188399: 49 21 98 02 01           u64 [sp + 664] = 0x1
188404: 95 17 28 02              a0 = sp + 0x228
188408: 95 18 80 02              a1 = sp + 0x280
188412: 50 20 6c 0b 4b 6f fd     ra = 2924, jump @1491
      :                          @12823 [@dyn 1462]
188419: 82 16 30 02              s1 = u64 [sp + 0x230]
188423: 82 1b 38 02              a4 = u64 [sp + 0x238]
188427: 82 17 28 02              a0 = u64 [sp + 0x228]
188431: 7b 17 60                 u64 [sp + 0x60] = a0
188434: 33 07 02                 a0 = 0x2
188437: 33 08                    a1 = 0
188439: 33 09                    a2 = 0
188441: 64 6a                    a3 = s1
188443: 33 00 6e 0b              ra = 0xb6e
188447: 0a 64                    ecalli 100 // 'log'
188449: 01                       fallthrough
      :                          @12824 [@dyn 1463]
188450: 82 1c 60                 a5 = u64 [sp + 0x60]
188453: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
188458: 53 38 00 00 f0 b6 01     jump @12861 if a1 <u 4293918720
      :                          @12825
188465: 33 07 b0 02 03           a0 = 0x302b0
188470: 95 77 00 00 10           a0 = a0 + 0x100000
188475: 01                       fallthrough
      :                          @12826
188476: 82 78                    a1 = u64 [a0]
188478: c9 87 09                 a2 = a0 - a1
188481: ab 69 9f 01              jump @12861 if a2 != s1
      :                          @12827
188485: c9 c8 09                 a2 = a1 - a5
188488: 01                       fallthrough
      :                          @12828
188489: 82 7a                    a3 = u64 [a0]
188491: ab 8a f1                 jump @12826 if a3 != a1
      :                          @12829
188494: 7b 79                    u64 [a0] = a2
188496: 33 0b                    a4 = 0
188498: 01                       fallthrough
      :                          @12830
188499: ab 8a e9                 jump @12826 if a3 != a1
      :                          @12831
188502: 28 8a 01                 jump @12861
      :                          @12832
188505: 95 17 28 02              a0 = sp + 0x228
188509: 95 18 d0 01              a1 = sp + 0x1d0
188513: 95 16 28 02              s1 = sp + 0x228
188517: 50 20 70 0b e4 57 fe     ra = 2928, jump @6303
      :                          @12833 [@dyn 1464]
188524: 7b 16 10 01              u64 [sp + 0x110] = s1
188528: 33 07 10 02              a0 = 0x210
188532: 7b 17 18 01              u64 [sp + 0x118] = a0
188536: 33 07 d0 11 01           a0 = 0x111d0
188541: 7b 17 80 02              u64 [sp + 0x280] = a0
188545: 49 21 88 02 01           u64 [sp + 648] = 0x1
188550: 49 21 a0 02              u64 [sp + 672] = 0
188554: 95 18 10 01              a1 = sp + 0x110
188558: 7b 18 90 02              u64 [sp + 0x290] = a1
188562: 49 21 98 02 01           u64 [sp + 664] = 0x1
188567: 95 17 f8 01              a0 = sp + 0x1f8
188571: 95 18 80 02              a1 = sp + 0x280
188575: 50 20 72 0b a8 6e fd     ra = 2930, jump @1491
      :                          @12834 [@dyn 1465]
188582: 82 18 28 02              a1 = u64 [sp + 0x228]
188586: 51 08 2f                 jump @12841 if a1 == 0
      :                          @12835
188589: 56 38 00 00 01 2c        jump @12841 if a1 >u 65536
      :                          @12836
188595: 82 17 30 02              a0 = u64 [sp + 0x230]
188599: 97 88 04                 a1 = a1 << 0x4
188602: 33 09 b0 02 03           a2 = 0x302b0
188607: 95 99 00 00 10           a2 = a2 + 0x100000
188612: 01                       fallthrough
      :                          @12837
188613: 82 9a                    a3 = u64 [a2]
188615: c9 a9 0b                 a4 = a2 - a3
188618: ab 7b 0f                 jump @12841 if a4 != a0
      :                          @12838
188621: c9 8a 0b                 a4 = a3 - a1
188624: 01                       fallthrough
      :                          @12839
188625: 82 9c                    a5 = u64 [a2]
188627: ab ac f2                 jump @12837 if a5 != a3
      :                          @12840
188630: 7b 9b                    u64 [a2] = a4
188632: 01                       fallthrough
      :                          @12841
188633: 82 16 00 02              s1 = u64 [sp + 0x200]
188637: 82 1b 08 02              a4 = u64 [sp + 0x208]
188641: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
188645: 7b 17 60                 u64 [sp + 0x60] = a0
188648: 33 07 02                 a0 = 0x2
188651: 33 08                    a1 = 0
188653: 33 09                    a2 = 0
188655: 64 6a                    a3 = s1
188657: 33 00 74 0b              ra = 0xb74
188661: 0a 64                    ecalli 100 // 'log'
188663: 01                       fallthrough
      :                          @12842 [@dyn 1466]
188664: 82 1c 60                 a5 = u64 [sp + 0x60]
188667: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
188672: 55 38 00 00 f0 0a        jump @12844 if a1 >=u 4293918720
      :                          @12843
188678: 28 47 4c ff              jump @10535
      :                          @12844
188682: 33 07 b0 02 03           a0 = 0x302b0
188687: 95 77 00 00 10           a0 = a0 + 0x100000
188692: 01                       fallthrough
      :                          @12845
188693: 82 78                    a1 = u64 [a0]
188695: c9 87 09                 a2 = a0 - a1
188698: aa 69 07                 jump @12847 if a2 == s1
      :                          @12846
188701: 28 30 4c ff              jump @10535
      :                          @12847
188705: c9 c8 09                 a2 = a1 - a5
188708: 01                       fallthrough
      :                          @12848
188709: 82 7a                    a3 = u64 [a0]
188711: ab 8a ee                 jump @12845 if a3 != a1
      :                          @12849
188714: 7b 79                    u64 [a0] = a2
188716: 33 0b                    a4 = 0
188718: 01                       fallthrough
      :                          @12850
188719: ab 8a e6                 jump @12845 if a3 != a1
      :                          @12851
188722: 28 1b 4c ff              jump @10535
      :                          @12852
188726: 82 17 00 02              a0 = u64 [sp + 0x200]
188730: 82 18 08 02              a1 = u64 [sp + 0x208]
188734: 50 20 76 0b 60 56 fe     ra = 2934, jump @6285
      :                          @12853 [@dyn 1467]
188741: 7b 17 10 01              u64 [sp + 0x110] = a0
188745: 95 17 10 01              a0 = sp + 0x110
188749: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
188753: 33 07 28 0c              a0 = 0xc28
188757: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
188761: 33 07 e0 2d 01           a0 = 0x12de0
188766: 7b 17 80 02              u64 [sp + 0x280] = a0
188770: 49 21 88 02 01           u64 [sp + 648] = 0x1
188775: 49 21 a0 02              u64 [sp + 672] = 0
188779: 95 18 d0 01              a1 = sp + 0x1d0
188783: 7b 18 90 02              u64 [sp + 0x290] = a1
188787: 49 21 98 02 01           u64 [sp + 664] = 0x1
188792: 95 17 28 02              a0 = sp + 0x228
188796: 95 18 80 02              a1 = sp + 0x280
188800: 50 20 78 0b c7 6d fd     ra = 2936, jump @1491
      :                          @12854 [@dyn 1468]
188807: 82 16 30 02              s1 = u64 [sp + 0x230]
188811: 82 1b 38 02              a4 = u64 [sp + 0x238]
188815: 82 17 28 02              a0 = u64 [sp + 0x228]
188819: 7b 17 60                 u64 [sp + 0x60] = a0
188822: 33 07 02                 a0 = 0x2
188825: 33 08                    a1 = 0
188827: 33 09                    a2 = 0
188829: 64 6a                    a3 = s1
188831: 33 00 7a 0b              ra = 0xb7a
188835: 0a 64                    ecalli 100 // 'log'
188837: 01                       fallthrough
      :                          @12855 [@dyn 1469]
188838: 82 1c 60                 a5 = u64 [sp + 0x60]
188841: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
188846: 53 38 00 00 f0 32        jump @12861 if a1 <u 4293918720
      :                          @12856
188852: 33 07 b0 02 03           a0 = 0x302b0
188857: 95 77 00 00 10           a0 = a0 + 0x100000
188862: 01                       fallthrough
      :                          @12857
188863: 82 78                    a1 = u64 [a0]
188865: c9 87 09                 a2 = a0 - a1
188868: ab 69 1c                 jump @12861 if a2 != s1
      :                          @12858
188871: c9 c8 09                 a2 = a1 - a5
188874: 01                       fallthrough
      :                          @12859
188875: 82 7a                    a3 = u64 [a0]
188877: ab 8a f2                 jump @12857 if a3 != a1
      :                          @12860
188880: 7b 79                    u64 [a0] = a2
188882: 33 0b                    a4 = 0
188884: 95 17 f8 01              a0 = sp + 0x1f8
188888: 33 00 7c 0b              ra = 0xb7c
188892: 28 df 29 fd              jump @209
      :                          @12861
188896: 95 17 f8 01              a0 = sp + 0x1f8
188900: 50 20 7c 0b d7 29 fd     ra = 2940, jump @209
      :                          @12862 [@dyn 1470]
188907: 0a                       ecalli 0 // 'gas'
188908: 82 18 48                 a1 = u64 [sp + 0x48]
188911: c9 78 07                 a0 = a1 - a0
188914: 95 51 50 fc              sp = s0 + 0xfffffffffffffc50
188918: 82 10 a8 03              ra = u64 [sp + 0x3a8]
188922: 82 15 a0 03              s0 = u64 [sp + 0x3a0]
188926: 82 16 98 03              s1 = u64 [sp + 0x398]
188930: 95 11 b0 03              sp = sp + 0x3b0
188934: 32 00                    ret
      :                          @12863
188936: 33 0a                    a3 = 0
188938: 33 0b 01                 a4 = 0x1
188941: 83 88                    i32 a1 = a1 + 0
188943: 33 09 01                 a2 = 0x1
188946: 01                       fallthrough
      :                          @12864
188947: d8 87 0c                 a5 = a0 <u a1
188950: 85 c6 01                 s1 = a5 ^ 0x1
188953: be c7 07                 i32 a0 = a0 + a5
188956: c8 9a 0c                 a5 = a3 + a2
188959: d8 78 0a                 a3 = a1 <u a0
188962: d4 a6 06                 s1 = s1 | a3
188965: 64 9a                    a3 = a2
188967: 64 b9                    a2 = a4
188969: c8 cb 0b                 a4 = a4 + a5
188972: 51 06 e7                 jump @12864 if s1 == 0
      :                          @12865
188975: 7b 1b d0 01              u64 [sp + 0x1d0] = a4
188979: 95 17 10 01              a0 = sp + 0x110
188983: 7b 17 28 02              u64 [sp + 0x228] = a0
188987: 33 07 5e 0c              a0 = 0xc5e
188991: 7b 17 30 02              u64 [sp + 0x230] = a0
188995: 95 17 d0 01              a0 = sp + 0x1d0
188999: 7b 17 38 02              u64 [sp + 0x238] = a0
189003: 33 07 28 0c              a0 = 0xc28
189007: 7b 17 40 02              u64 [sp + 0x240] = a0
189011: 33 07 20 06 01           a0 = 0x10620
189016: 7b 17 80 02              u64 [sp + 0x280] = a0
189020: 49 21 88 02 02           u64 [sp + 648] = 0x2
189025: 49 21 a0 02              u64 [sp + 672] = 0
189029: 95 18 28 02              a1 = sp + 0x228
189033: 7b 18 90 02              u64 [sp + 0x290] = a1
189037: 49 21 98 02 02           u64 [sp + 664] = 0x2
189042: 95 17 f8 01              a0 = sp + 0x1f8
189046: 95 18 80 02              a1 = sp + 0x280
189050: 50 20 7e 0b cd 6c fd     ra = 2942, jump @1491
      :                          @12866 [@dyn 1471]
189057: 82 16 00 02              s1 = u64 [sp + 0x200]
189061: 82 1b 08 02              a4 = u64 [sp + 0x208]
189065: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
189069: 7b 17 60                 u64 [sp + 0x60] = a0
189072: 33 07 02                 a0 = 0x2
189075: 33 08                    a1 = 0
189077: 33 09                    a2 = 0
189079: 64 6a                    a3 = s1
189081: 33 00 80 0b              ra = 0xb80
189085: 0a 64                    ecalli 100 // 'log'
189087: 01                       fallthrough
      :                          @12867 [@dyn 1472]
189088: 82 1c 60                 a5 = u64 [sp + 0x60]
189091: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
189096: 53 38 00 00 f0 43 ff     jump @12862 if a1 <u 4293918720
      :                          @12868
189103: 33 07 b0 02 03           a0 = 0x302b0
189108: 95 77 00 00 10           a0 = a0 + 0x100000
189113: 01                       fallthrough
      :                          @12869
189114: 82 78                    a1 = u64 [a0]
189116: c9 87 09                 a2 = a0 - a1
189119: ab 69 2c ff              jump @12862 if a2 != s1
      :                          @12870
189123: c9 c8 09                 a2 = a1 - a5
189126: 01                       fallthrough
      :                          @12871
189127: 82 7a                    a3 = u64 [a0]
189129: ab 8a f1                 jump @12869 if a3 != a1
      :                          @12872
189132: 7b 79                    u64 [a0] = a2
189134: 33 0b                    a4 = 0
189136: 01                       fallthrough
      :                          @12873
189137: ab 8a e9                 jump @12869 if a3 != a1
      :                          @12874
189140: 28 17 ff                 jump @12862
      :                          @12875
189143: 33 04                    t2 = 0
189145: 82 13 58                 t1 = u64 [sp + 0x58]
189148: 95 33 08                 t1 = t1 + 0x8
189151: 33 0a 01                 a3 = 0x1
189154: 64 86                    s1 = a1
189156: 28 0f                    jump @12878
      :                          @12876
189158: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
189161: 95 33 08                 t1 = t1 + 0x8
189164: ab 80 07                 jump @12878 if ra != a1
      :                          @12877
189167: 28 9b 33 ff              jump @10145
      :                          @12878
189171: 64 40                    ra = t2
189173: 95 44 01                 t2 = t2 + 0x1
189176: 82 17 60                 a0 = u64 [sp + 0x60]
189179: ae 74 eb                 jump @12876 if t2 >=u a0
      :                          @12879
189182: 97 09 03                 a2 = ra << 0x3
189185: 82 17 58                 a0 = u64 [sp + 0x58]
189188: c8 79 09                 a2 = a2 + a0
189191: 82 99                    a2 = u64 [a2]
189193: 64 3b                    a4 = t1
189195: 64 6c                    a5 = s1
189197: 01                       fallthrough
      :                          @12880
189198: 82 b2                    t0 = u64 [a4]
189200: c9 92 07                 a0 = t0 - a2
189203: ca a7 0a                 a3 = a0 * a3
189206: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
189209: 95 bb 08                 a4 = a4 + 0x8
189212: 52 0c f2                 jump @12880 if a5 != 0
      :                          @12881
189215: 28 c7                    jump @12876
      :                          @12882
189217: 82 17 20 01              a0 = u64 [sp + 0x120]
189221: 82 18 18 01              a1 = u64 [sp + 0x118]
189225: 82 19 10 01              a2 = u64 [sp + 0x110]
189229: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
189233: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
189237: 7b 19 d0 01              u64 [sp + 0x1d0] = a2
189241: 95 17 a0 01              a0 = sp + 0x1a0
189245: 7b 17 28 02              u64 [sp + 0x228] = a0
189249: 33 07 28 0c              a0 = 0xc28
189253: 7b 17 30 02              u64 [sp + 0x230] = a0
189257: 95 17 d0 01              a0 = sp + 0x1d0
189261: 7b 17 38 02              u64 [sp + 0x238] = a0
189265: 33 07 38 02              a0 = 0x238
189269: 7b 17 40 02              u64 [sp + 0x240] = a0
189273: 33 07 d0 14 01           a0 = 0x114d0
189278: 7b 17 80 02              u64 [sp + 0x280] = a0
189282: 49 21 88 02 02           u64 [sp + 648] = 0x2
189287: 49 21 a0 02              u64 [sp + 672] = 0
189291: 95 18 28 02              a1 = sp + 0x228
189295: 7b 18 90 02              u64 [sp + 0x290] = a1
189299: 49 21 98 02 02           u64 [sp + 664] = 0x2
189304: 95 17 f8 01              a0 = sp + 0x1f8
189308: 95 18 80 02              a1 = sp + 0x280
189312: 50 20 82 0b c7 6b fd     ra = 2946, jump @1491
      :                          @12883 [@dyn 1473]
189319: 82 1a 00 02              a3 = u64 [sp + 0x200]
189323: 7b 1a 50                 u64 [sp + 0x50] = a3
189326: 82 1b 08 02              a4 = u64 [sp + 0x208]
189330: 82 16 f8 01              s1 = u64 [sp + 0x1f8]
189334: 33 07 02                 a0 = 0x2
189337: 33 08                    a1 = 0
189339: 33 09                    a2 = 0
189341: 33 00 84 0b              ra = 0xb84
189345: 0a 64                    ecalli 100 // 'log'
189347: 01                       fallthrough
      :                          @12884 [@dyn 1474]
189348: 82 1c 50                 a5 = u64 [sp + 0x50]
189351: 82 17 58                 a0 = u64 [sp + 0x58]
189354: c8 67 07                 a0 = a0 + s1
189357: 53 37 00 00 f0 25        jump @12890 if a0 <u 4293918720
      :                          @12885
189363: 33 07 b0 02 03           a0 = 0x302b0
189368: 95 77 00 00 10           a0 = a0 + 0x100000
189373: 01                       fallthrough
      :                          @12886
189374: 82 78                    a1 = u64 [a0]
189376: c9 87 09                 a2 = a0 - a1
189379: ab c9 0f                 jump @12890 if a2 != a5
      :                          @12887
189382: c9 68 09                 a2 = a1 - s1
189385: 01                       fallthrough
      :                          @12888
189386: 82 7a                    a3 = u64 [a0]
189388: ab 8a f2                 jump @12886 if a3 != a1
      :                          @12889
189391: 7b 79                    u64 [a0] = a2
189393: 01                       fallthrough
      :                          @12890
189394: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
189398: 82 12 60                 t0 = u64 [sp + 0x60]
189401: 51 08 31                 jump @12897 if a1 == 0
      :                          @12891
189404: 56 38 00 00 02 2e        jump @12897 if a1 >u 131072
      :                          @12892
189410: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
189414: 97 88 03                 a1 = a1 << 0x3
189417: 33 09 b0 02 03           a2 = 0x302b0
189422: 95 99 00 00 10           a2 = a2 + 0x100000
189427: 01                       fallthrough
      :                          @12893
189428: 82 9a                    a3 = u64 [a2]
189430: c9 a9 0b                 a4 = a2 - a3
189433: ab 7b 11                 jump @12897 if a4 != a0
      :                          @12894
189436: c9 8a 0b                 a4 = a3 - a1
189439: 01                       fallthrough
      :                          @12895
189440: 82 9c                    a5 = u64 [a2]
189442: ab ac f2                 jump @12893 if a5 != a3
      :                          @12896
189445: 7b 9b                    u64 [a2] = a4
189447: 33 06                    s1 = 0
189449: 01                       fallthrough
      :                          @12897
189450: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
189454: 51 07 dd fd              jump @12862 if a0 == 0
      :                          @12898
189458: 56 37 aa aa 00 d9 fd     jump @12862 if a0 >u 43690
      :                          @12899
189465: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
189468: 33 08 b0 02 03           a1 = 0x302b0
189473: 95 88 00 00 10           a1 = a1 + 0x100000
189478: 01                       fallthrough
      :                          @12900
189479: 82 89                    a2 = u64 [a1]
189481: c9 98 0a                 a3 = a1 - a2
189484: ab 2a bf fd              jump @12862 if a3 != t0
      :                          @12901
189488: c8 79 0a                 a3 = a2 + a0
189491: 01                       fallthrough
      :                          @12902
189492: 82 8b                    a4 = u64 [a1]
189494: ab 9b f1                 jump @12900 if a4 != a2
      :                          @12903
189497: 7b 8a                    u64 [a1] = a3
189499: 33 0c                    a5 = 0
189501: 01                       fallthrough
      :                          @12904
189502: ab 9b e9                 jump @12900 if a4 != a2
      :                          @12905
189505: 28 aa fd                 jump @12862
      :                          @12906
189508: 82 17 90 02              a0 = u64 [sp + 0x290]
189512: 82 18 88 02              a1 = u64 [sp + 0x288]
189516: 82 19 80 02              a2 = u64 [sp + 0x280]
189520: 7b 17 08 02              u64 [sp + 0x208] = a0
189524: 7b 18 00 02              u64 [sp + 0x200] = a1
189528: 7b 19 f8 01              u64 [sp + 0x1f8] = a2
189532: 01                       fallthrough
      :                          @12907
189533: 95 17 f8 01              a0 = sp + 0x1f8
189537: 7b 17 10 01              u64 [sp + 0x110] = a0
189541: 33 07 20 02              a0 = 0x220
189545: 7b 17 18 01              u64 [sp + 0x118] = a0
189549: 33 07 c8 08 01           a0 = 0x108c8
189554: 7b 17 80 02              u64 [sp + 0x280] = a0
189558: 49 21 88 02 01           u64 [sp + 648] = 0x1
189563: 49 21 a0 02              u64 [sp + 672] = 0
189567: 95 18 10 01              a1 = sp + 0x110
189571: 7b 18 90 02              u64 [sp + 0x290] = a1
189575: 49 21 98 02 01           u64 [sp + 664] = 0x1
189580: 95 17 28 02              a0 = sp + 0x228
189584: 95 18 80 02              a1 = sp + 0x280
189588: 50 20 86 0b b3 6a fd     ra = 2950, jump @1491
      :                          @12908 [@dyn 1475]
189595: 82 16 30 02              s1 = u64 [sp + 0x230]
189599: 82 1b 38 02              a4 = u64 [sp + 0x238]
189603: 82 17 28 02              a0 = u64 [sp + 0x228]
189607: 7b 17 60                 u64 [sp + 0x60] = a0
189610: 33 07 02                 a0 = 0x2
189613: 33 08                    a1 = 0
189615: 33 09                    a2 = 0
189617: 64 6a                    a3 = s1
189619: 33 00 88 0b              ra = 0xb88
189623: 0a 64                    ecalli 100 // 'log'
189625: 01                       fallthrough
      :                          @12909 [@dyn 1476]
189626: 82 1c 60                 a5 = u64 [sp + 0x60]
189629: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
189634: 53 38 00 00 f0 27        jump @12915 if a1 <u 4293918720
      :                          @12910
189640: 33 07 b0 02 03           a0 = 0x302b0
189645: 95 77 00 00 10           a0 = a0 + 0x100000
189650: 01                       fallthrough
      :                          @12911
189651: 82 78                    a1 = u64 [a0]
189653: c9 87 09                 a2 = a0 - a1
189656: ab 69 11                 jump @12915 if a2 != s1
      :                          @12912
189659: c9 c8 09                 a2 = a1 - a5
189662: 01                       fallthrough
      :                          @12913
189663: 82 7a                    a3 = u64 [a0]
189665: ab 8a f2                 jump @12911 if a3 != a1
      :                          @12914
189668: 7b 79                    u64 [a0] = a2
189670: 33 0b                    a4 = 0
189672: 01                       fallthrough
      :                          @12915
189673: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
189677: 52 08 07                 jump @12917 if a1 != 0
      :                          @12916
189680: 28 5d 48 ff              jump @10535
      :                          @12917
189684: 54 38 00 00 02 0a        jump @12919 if a1 <=u 131072
      :                          @12918
189690: 28 53 48 ff              jump @10535
      :                          @12919
189694: 82 17 00 02              a0 = u64 [sp + 0x200]
189698: 97 88 03                 a1 = a1 << 0x3
189701: 33 09 b0 02 03           a2 = 0x302b0
189706: 95 99 00 00 10           a2 = a2 + 0x100000
189711: 01                       fallthrough
      :                          @12920
189712: 82 9a                    a3 = u64 [a2]
189714: c9 a9 0b                 a4 = a2 - a3
189717: aa 7b 07                 jump @12922 if a4 == a0
      :                          @12921
189720: 28 35 48 ff              jump @10535
      :                          @12922
189724: c9 8a 0b                 a4 = a3 - a1
189727: 01                       fallthrough
      :                          @12923
189728: 82 9c                    a5 = u64 [a2]
189730: ab ac ee                 jump @12920 if a5 != a3
      :                          @12924
189733: 7b 9b                    u64 [a2] = a4
189735: 33 06                    s1 = 0
189737: 01                       fallthrough
      :                          @12925
189738: ab ac e6                 jump @12920 if a5 != a3
      :                          @12926
189741: 28 20 48 ff              jump @10535
      :                          @12927
189745: 33 0c                    a5 = 0
189747: 82 18 60                 a1 = u64 [sp + 0x60]
189750: 01                       fallthrough
      :                          @12928
189751: 7b 1c b8 01              u64 [sp + 0x1b8] = a5
189755: 95 17 d0 01              a0 = sp + 0x1d0
189759: 95 16 d0 01              s1 = sp + 0x1d0
189763: 82 1a 50                 a3 = u64 [sp + 0x50]
189766: 82 1b 40                 a4 = u64 [sp + 0x40]
189769: 33 00 8a 0b              ra = 0xb8a
189773: 95 11 b0                 sp = sp + 0xffffffffffffffb0
189776: 7b 10 48                 u64 [sp + 0x48] = ra
189779: 7b 15 40                 u64 [sp + 0x40] = s0
189782: 7b 16 38                 u64 [sp + 0x38] = s1
189785: 7b 1c 10                 u64 [sp + 0x10] = a5
189788: 64 a6                    s1 = a3
189790: 7b 19 18                 u64 [sp + 0x18] = a2
189793: 7b 18 08                 u64 [sp + 0x8] = a1
189796: 64 75                    s0 = a0
189798: 95 17 20                 a0 = sp + 0x20
189801: 64 b8                    a1 = a4
189803: 64 a9                    a2 = a3
189805: 33 00 66 04              ra = 0x466
189809: 28 bb a5 fd              jump @2409
      :                          @12929 [@dyn 1477]
189813: 95 17 10 01              a0 = sp + 0x110
189817: 7b 17 80 02              u64 [sp + 0x280] = a0
189821: 33 07 18 02              a0 = 0x218
189825: 7b 17 88 02              u64 [sp + 0x288] = a0
189829: 95 18 b8 01              a1 = sp + 0x1b8
189833: 7b 18 90 02              u64 [sp + 0x290] = a1
189837: 33 08 28 0c              a1 = 0xc28
189841: 7b 18 98 02              u64 [sp + 0x298] = a1
189845: 7b 16 a0 02              u64 [sp + 0x2a0] = s1
189849: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
189853: 33 07 d0 18 01           a0 = 0x118d0
189858: 7b 17 28 02              u64 [sp + 0x228] = a0
189862: 49 21 30 02 03           u64 [sp + 560] = 0x3
189867: 49 21 48 02              u64 [sp + 584] = 0
189871: 95 18 80 02              a1 = sp + 0x280
189875: 7b 18 38 02              u64 [sp + 0x238] = a1
189879: 49 21 40 02 03           u64 [sp + 576] = 0x3
189884: 95 17 f8 01              a0 = sp + 0x1f8
189888: 95 18 28 02              a1 = sp + 0x228
189892: 50 20 8c 0b 83 69 fd     ra = 2956, jump @1491
      :                          @12930 [@dyn 1478]
189899: 82 16 00 02              s1 = u64 [sp + 0x200]
189903: 82 1b 08 02              a4 = u64 [sp + 0x208]
189907: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
189911: 7b 17 50                 u64 [sp + 0x50] = a0
189914: 33 07 02                 a0 = 0x2
189917: 33 08                    a1 = 0
189919: 33 09                    a2 = 0
189921: 64 6a                    a3 = s1
189923: 33 00 8e 0b              ra = 0xb8e
189927: 0a 64                    ecalli 100 // 'log'
189929: 01                       fallthrough
      :                          @12931 [@dyn 1479]
189930: 82 1c 50                 a5 = u64 [sp + 0x50]
189933: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
189938: 53 38 00 00 f0 25        jump @12937 if a1 <u 4293918720
      :                          @12932
189944: 33 07 b0 02 03           a0 = 0x302b0
189949: 95 77 00 00 10           a0 = a0 + 0x100000
189954: 01                       fallthrough
      :                          @12933
189955: 82 78                    a1 = u64 [a0]
189957: c9 87 09                 a2 = a0 - a1
189960: ab 69 0f                 jump @12937 if a2 != s1
      :                          @12934
189963: c9 c8 09                 a2 = a1 - a5
189966: 01                       fallthrough
      :                          @12935
189967: 82 7a                    a3 = u64 [a0]
189969: ab 8a f2                 jump @12933 if a3 != a1
      :                          @12936
189972: 7b 79                    u64 [a0] = a2
189974: 01                       fallthrough
      :                          @12937
189975: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
189979: 51 07 2e                 jump @12944 if a0 == 0
      :                          @12938
189982: 56 37 00 00 10 2b        jump @12944 if a0 >u 1048576
      :                          @12939
189988: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
189992: 33 0a b0 02 03           a3 = 0x302b0
189997: 95 a9 00 00 10           a2 = a3 + 0x100000
190002: 01                       fallthrough
      :                          @12940
190003: 82 9a                    a3 = u64 [a2]
190005: c9 a9 0b                 a4 = a2 - a3
190008: ab 8b 11                 jump @12944 if a4 != a1
      :                          @12941
190011: c9 7a 0b                 a4 = a3 - a0
190014: 01                       fallthrough
      :                          @12942
190015: 82 9c                    a5 = u64 [a2]
190017: ab ac f2                 jump @12940 if a5 != a3
      :                          @12943
190020: 7b 9b                    u64 [a2] = a4
190022: 33 06                    s1 = 0
190024: 01                       fallthrough
      :                          @12944
190025: 82 17 10 01              a0 = u64 [sp + 0x110]
190029: 51 07 2e                 jump @12951 if a0 == 0
      :                          @12945
190032: 56 37 00 00 10 2b        jump @12951 if a0 >u 1048576
      :                          @12946
190038: 82 18 18 01              a1 = u64 [sp + 0x118]
190042: 33 0a b0 02 03           a3 = 0x302b0
190047: 95 a9 00 00 10           a2 = a3 + 0x100000
190052: 01                       fallthrough
      :                          @12947
190053: 82 9a                    a3 = u64 [a2]
190055: c9 a9 0b                 a4 = a2 - a3
190058: ab 8b 11                 jump @12951 if a4 != a1
      :                          @12948
190061: c9 7a 0b                 a4 = a3 - a0
190064: 01                       fallthrough
      :                          @12949
190065: 82 9c                    a5 = u64 [a2]
190067: ab ac f2                 jump @12947 if a5 != a3
      :                          @12950
190070: 7b 9b                    u64 [a2] = a4
190072: 33 06                    s1 = 0
190074: 01                       fallthrough
      :                          @12951
190075: 82 17 58                 a0 = u64 [sp + 0x58]
190078: 51 07 6d fb              jump @12862 if a0 == 0
      :                          @12952
190082: 82 18 58                 a1 = u64 [sp + 0x58]
190085: 56 38 00 00 02 66 fb     jump @12862 if a1 >u 131072
      :                          @12953
190092: 82 17 58                 a0 = u64 [sp + 0x58]
190095: 97 77 03                 a0 = a0 << 0x3
190098: 33 08 b0 02 03           a1 = 0x302b0
190103: 95 88 00 00 10           a1 = a1 + 0x100000
190108: 01                       fallthrough
      :                          @12954
190109: 82 89                    a2 = u64 [a1]
190111: c9 98 0a                 a3 = a1 - a2
190114: 82 1b 60                 a4 = u64 [sp + 0x60]
190117: ab ba 46 fb              jump @12862 if a3 != a4
      :                          @12955
190121: c9 79 0a                 a3 = a2 - a0
190124: 01                       fallthrough
      :                          @12956
190125: 82 8b                    a4 = u64 [a1]
190127: ab 9b ee                 jump @12954 if a4 != a2
      :                          @12957
190130: 7b 8a                    u64 [a1] = a3
190132: 33 0c                    a5 = 0
190134: 01                       fallthrough
      :                          @12958
190135: ab 9b e6                 jump @12954 if a4 != a2
      :                          @12959
190138: 28 31 fb                 jump @12862
      :                          @12960
190141: 33 07 80 19 01           a0 = 0x11980
190146: 7b 17 80 02              u64 [sp + 0x280] = a0
190150: 49 21 88 02 01           u64 [sp + 648] = 0x1
190155: 49 21 a0 02              u64 [sp + 672] = 0
190159: 33 07 40 30 01           a0 = 0x13040
190164: 7b 17 90 02              u64 [sp + 0x290] = a0
190168: 49 21 98 02              u64 [sp + 664] = 0
190172: 95 17 28 02              a0 = sp + 0x228
190176: 95 18 80 02              a1 = sp + 0x280
190180: 50 20 90 0b 63 68 fd     ra = 2960, jump @1491
      :                          @12961 [@dyn 1480]
190187: 82 16 30 02              s1 = u64 [sp + 0x230]
190191: 82 1b 38 02              a4 = u64 [sp + 0x238]
190195: 82 17 28 02              a0 = u64 [sp + 0x228]
190199: 7b 17 60                 u64 [sp + 0x60] = a0
190202: 33 07 02                 a0 = 0x2
190205: 33 08                    a1 = 0
190207: 33 09                    a2 = 0
190209: 64 6a                    a3 = s1
190211: 33 00 92 0b              ra = 0xb92
190215: 0a 64                    ecalli 100 // 'log'
190217: 01                       fallthrough
      :                          @12962 [@dyn 1481]
190218: 82 19 60                 a2 = u64 [sp + 0x60]
190221: 95 98 ff ff ef           a1 = a2 + 0xffffffffffefffff
190226: 53 38 00 00 f0 d9 fa     jump @12862 if a1 <u 4293918720
      :                          @12963
190233: 64 9c                    a5 = a2
190235: 33 07 b0 02 03           a0 = 0x302b0
190240: 95 77 00 00 10           a0 = a0 + 0x100000
190245: 01                       fallthrough
      :                          @12964
190246: 82 78                    a1 = u64 [a0]
190248: c9 87 09                 a2 = a0 - a1
190251: ab 69 c0 fa              jump @12862 if a2 != s1
      :                          @12965
190255: c9 c8 09                 a2 = a1 - a5
190258: 01                       fallthrough
      :                          @12966
190259: 82 7a                    a3 = u64 [a0]
190261: ab 8a f1                 jump @12964 if a3 != a1
      :                          @12967
190264: 7b 79                    u64 [a0] = a2
190266: 33 0b                    a4 = 0
190268: 01                       fallthrough
      :                          @12968
190269: ab 8a e9                 jump @12964 if a3 != a1
      :                          @12969
190272: 28 ab fa                 jump @12862
      :                          @12970
190275: 64 89                    a2 = a1
190277: 01                       fallthrough
      :                          @12971
190278: 7b 19 d0 01              u64 [sp + 0x1d0] = a2
190282: 95 17 b8 01              a0 = sp + 0x1b8
190286: 7b 17 80 02              u64 [sp + 0x280] = a0
190290: 33 07 28 0c              a0 = 0xc28
190294: 7b 17 88 02              u64 [sp + 0x288] = a0
190298: 95 18 10 01              a1 = sp + 0x110
190302: 7b 18 90 02              u64 [sp + 0x290] = a1
190306: 7b 17 98 02              u64 [sp + 0x298] = a0
190310: 95 18 d0 01              a1 = sp + 0x1d0
190314: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
190318: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
190322: 33 07 58 1f 01           a0 = 0x11f58
190327: 7b 17 28 02              u64 [sp + 0x228] = a0
190331: 49 21 30 02 03           u64 [sp + 560] = 0x3
190336: 49 21 48 02              u64 [sp + 584] = 0
190340: 95 18 80 02              a1 = sp + 0x280
190344: 7b 18 38 02              u64 [sp + 0x238] = a1
190348: 49 21 40 02 03           u64 [sp + 576] = 0x3
190353: 95 17 f8 01              a0 = sp + 0x1f8
190357: 95 18 28 02              a1 = sp + 0x228
190361: 50 20 94 0b ae 67 fd     ra = 2964, jump @1491
      :                          @12972 [@dyn 1482]
190368: 82 16 00 02              s1 = u64 [sp + 0x200]
190372: 82 1b 08 02              a4 = u64 [sp + 0x208]
190376: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
190380: 7b 17 60                 u64 [sp + 0x60] = a0
190383: 33 07 02                 a0 = 0x2
190386: 33 08                    a1 = 0
190388: 33 09                    a2 = 0
190390: 64 6a                    a3 = s1
190392: 33 00 96 0b              ra = 0xb96
190396: 0a 64                    ecalli 100 // 'log'
190398: 01                       fallthrough
      :                          @12973 [@dyn 1483]
190399: 82 1c 60                 a5 = u64 [sp + 0x60]
190402: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
190407: 53 38 00 00 f0 24 fa     jump @12862 if a1 <u 4293918720
      :                          @12974
190414: 33 07 b0 02 03           a0 = 0x302b0
190419: 95 77 00 00 10           a0 = a0 + 0x100000
190424: 01                       fallthrough
      :                          @12975
190425: 82 78                    a1 = u64 [a0]
190427: c9 87 09                 a2 = a0 - a1
190430: ab 69 0d fa              jump @12862 if a2 != s1
      :                          @12976
190434: c9 c8 09                 a2 = a1 - a5
190437: 01                       fallthrough
      :                          @12977
190438: 82 7a                    a3 = u64 [a0]
190440: ab 8a f1                 jump @12975 if a3 != a1
      :                          @12978
190443: 7b 79                    u64 [a0] = a2
190445: 33 0b                    a4 = 0
190447: 01                       fallthrough
      :                          @12979
190448: ab 8a e9                 jump @12975 if a3 != a1
      :                          @12980
190451: 28 f8 f9                 jump @12862
      :                          @12981
190454: 7b 17 10 01              u64 [sp + 0x110] = a0
190458: 51 07 8d 0b              jump @13275 if a0 == 0
      :                          @12982
190462: 33 07                    a0 = 0
190464: 01                       fallthrough
      :                          @12983
190465: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
190469: 95 17 a0 01              a0 = sp + 0x1a0
190473: 7b 17 80 02              u64 [sp + 0x280] = a0
190477: 33 07 28 0c              a0 = 0xc28
190481: 7b 17 88 02              u64 [sp + 0x288] = a0
190485: 95 18 b8 01              a1 = sp + 0x1b8
190489: 7b 18 90 02              u64 [sp + 0x290] = a1
190493: 7b 17 98 02              u64 [sp + 0x298] = a0
190497: 95 18 10 01              a1 = sp + 0x110
190501: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
190505: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
190509: 95 18 d0 01              a1 = sp + 0x1d0
190513: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
190517: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
190521: 33 07 68 25 01           a0 = 0x12568
190526: 7b 17 28 02              u64 [sp + 0x228] = a0
190530: 49 21 30 02 04           u64 [sp + 560] = 0x4
190535: 49 21 48 02              u64 [sp + 584] = 0
190539: 95 18 80 02              a1 = sp + 0x280
190543: 7b 18 38 02              u64 [sp + 0x238] = a1
190547: 49 21 40 02 04           u64 [sp + 576] = 0x4
190552: 95 17 f8 01              a0 = sp + 0x1f8
190556: 95 18 28 02              a1 = sp + 0x228
190560: 50 20 98 0b e7 66 fd     ra = 2968, jump @1491
      :                          @12984 [@dyn 1484]
190567: 82 16 00 02              s1 = u64 [sp + 0x200]
190571: 82 1b 08 02              a4 = u64 [sp + 0x208]
190575: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
190579: 7b 17 60                 u64 [sp + 0x60] = a0
190582: 33 07 02                 a0 = 0x2
190585: 33 08                    a1 = 0
190587: 33 09                    a2 = 0
190589: 64 6a                    a3 = s1
190591: 33 00 9a 0b              ra = 0xb9a
190595: 0a 64                    ecalli 100 // 'log'
190597: 01                       fallthrough
      :                          @12985 [@dyn 1485]
190598: 82 1c 60                 a5 = u64 [sp + 0x60]
190601: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
190606: 53 38 00 00 f0 5d f9     jump @12862 if a1 <u 4293918720
      :                          @12986
190613: 33 07 b0 02 03           a0 = 0x302b0
190618: 95 77 00 00 10           a0 = a0 + 0x100000
190623: 01                       fallthrough
      :                          @12987
190624: 82 78                    a1 = u64 [a0]
190626: c9 87 09                 a2 = a0 - a1
190629: ab 69 46 f9              jump @12862 if a2 != s1
      :                          @12988
190633: c9 c8 09                 a2 = a1 - a5
190636: 01                       fallthrough
      :                          @12989
190637: 82 7a                    a3 = u64 [a0]
190639: ab 8a f1                 jump @12987 if a3 != a1
      :                          @12990
190642: 7b 79                    u64 [a0] = a2
190644: 33 0b                    a4 = 0
190646: 01                       fallthrough
      :                          @12991
190647: ab 8a e9                 jump @12987 if a3 != a1
      :                          @12992
190650: 28 31 f9                 jump @12862
      :                          @12993
190653: 33 07                    a0 = 0
190655: 01                       fallthrough
      :                          @12994
190656: 7b 17 10 01              u64 [sp + 0x110] = a0
190660: 95 17 a0 01              a0 = sp + 0x1a0
190664: 7b 17 28 02              u64 [sp + 0x228] = a0
190668: 33 07 8e 0c              a0 = 0xc8e
190672: 7b 17 30 02              u64 [sp + 0x230] = a0
190676: 95 17 b8 01              a0 = sp + 0x1b8
190680: 7b 17 38 02              u64 [sp + 0x238] = a0
190684: 33 07 28 0c              a0 = 0xc28
190688: 7b 17 40 02              u64 [sp + 0x240] = a0
190692: 95 18 10 01              a1 = sp + 0x110
190696: 7b 18 48 02              u64 [sp + 0x248] = a1
190700: 7b 17 50 02              u64 [sp + 0x250] = a0
190704: 49 21 80 02 02           u64 [sp + 640] = 0x2
190709: 49 21 90 02              u64 [sp + 656] = 0
190713: 49 21 98 02 22           u64 [sp + 664] = 0x22
190718: 49 21 a0 02              u64 [sp + 672] = 0
190722: 14 09 20 00 00 00 0c 00 00 00 a2 = 0xc00000020
190732: 7b 19 a8 02              u64 [sp + 0x2a8] = a2
190736: 46 21 b0 02 03           u8 [sp + 688] = 0x3
190741: 49 21 b8 02 02           u64 [sp + 696] = 0x2
190746: 49 21 c8 02 02           u64 [sp + 712] = 0x2
190751: 49 21 d8 02 01           u64 [sp + 728] = 0x1
190756: 49 21 e0 02 20           u64 [sp + 736] = 0x20
190761: 46 21 e8 02 03           u8 [sp + 744] = 0x3
190766: 49 21 f0 02 02           u64 [sp + 752] = 0x2
190771: 49 21 00 03 02           u64 [sp + 768] = 0x2
190776: 49 21 10 03 02           u64 [sp + 784] = 0x2
190781: 49 21 18 03 20           u64 [sp + 792] = 0x20
190786: 46 21 20 03 03           u8 [sp + 800] = 0x3
190791: 33 08 00 27 01           a1 = 0x12700
190796: 7b 18 f8 01              u64 [sp + 0x1f8] = a1
190800: 49 21 00 02 03           u64 [sp + 512] = 0x3
190805: 95 18 80 02              a1 = sp + 0x280
190809: 7b 18 18 02              u64 [sp + 0x218] = a1
190813: 49 21 20 02 03           u64 [sp + 544] = 0x3
190818: 95 18 28 02              a1 = sp + 0x228
190822: 7b 18 08 02              u64 [sp + 0x208] = a1
190826: 49 21 10 02 03           u64 [sp + 528] = 0x3
190831: 95 17 d0 01              a0 = sp + 0x1d0
190835: 95 18 f8 01              a1 = sp + 0x1f8
190839: 50 20 9c 0b d0 65 fd     ra = 2972, jump @1491
      :                          @12995 [@dyn 1486]
190846: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
190850: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
190854: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
190858: 7b 17 58                 u64 [sp + 0x58] = a0
190861: 33 07 02                 a0 = 0x2
190864: 33 08                    a1 = 0
190866: 33 09                    a2 = 0
190868: 64 6a                    a3 = s1
190870: 33 00 9e 0b              ra = 0xb9e
190874: 0a 64                    ecalli 100 // 'log'
190876: 01                       fallthrough
      :                          @12996 [@dyn 1487]
190877: 82 1c 58                 a5 = u64 [sp + 0x58]
190880: 82 17 60                 a0 = u64 [sp + 0x60]
190883: c8 c7 07                 a0 = a0 + a5
190886: 53 37 00 00 f0 45 f8     jump @12862 if a0 <u 4293918720
      :                          @12997
190893: 33 07 b0 02 03           a0 = 0x302b0
190898: 95 77 00 00 10           a0 = a0 + 0x100000
190903: 01                       fallthrough
      :                          @12998
190904: 82 78                    a1 = u64 [a0]
190906: c9 87 09                 a2 = a0 - a1
190909: ab 69 2e f8              jump @12862 if a2 != s1
      :                          @12999
190913: c9 c8 09                 a2 = a1 - a5
190916: 01                       fallthrough
      :                          @13000
190917: 82 7a                    a3 = u64 [a0]
190919: ab 8a f1                 jump @12998 if a3 != a1
      :                          @13001
190922: 7b 79                    u64 [a0] = a2
190924: 33 0b                    a4 = 0
190926: 01                       fallthrough
      :                          @13002
190927: ab 8a e9                 jump @12998 if a3 != a1
      :                          @13003
190930: 28 19 f8                 jump @12862
      :                          @13004
190933: 64 8a                    a3 = a1
190935: 01                       fallthrough
      :                          @13005
190936: 7b 1a 60                 u64 [sp + 0x60] = a3
190939: 64 a7                    a0 = a3
190941: 64 68                    a1 = s1
190943: 50 20 a0 0b 56 ab fd     ra = 2976, jump @2604
      :                          @13006 [@dyn 1488]
190950: 7a 17 78 02              u32 [sp + 0x278] = a0
190954: 51 06 20 02              jump @13042 if s1 == 0
      :                          @13007
190958: 33 0b                    a4 = 0
190960: 33 0a 01                 a3 = 0x1
190963: 14 02 71 80 07 80 00 00 00 00 t0 = 0x80078071
190973: 33 08 f1 ff 00           a1 = 0xfff1
190978: 64 69                    a2 = s1
190980: 82 13 60                 t1 = u64 [sp + 0x60]
190983: 64 3c                    a5 = t1
190985: 01                       fallthrough
      :                          @13008
190986: 7c c7                    a0 = u8 [a5]
190988: 95 cc 01                 a5 = a5 + 0x1
190991: c8 a7 07                 a0 = a0 + a3
190994: 97 7a 20                 a3 = a0 << 0x20
190997: 98 aa 20                 a3 = a3 >> 0x20
191000: ca 2a 0a                 a3 = a3 * t0
191003: 98 aa 2f                 a3 = a3 >> 0x2f
191006: ca 8a 0a                 a3 = a3 * a1
191009: bf a7 0a                 i32 a3 = a0 - a3
191012: c8 ab 0b                 a4 = a4 + a3
191015: 97 b7 20                 a0 = a4 << 0x20
191018: 98 77 20                 a0 = a0 >> 0x20
191021: ca 27 07                 a0 = a0 * t0
191024: 98 77 2f                 a0 = a0 >> 0x2f
191027: ca 87 07                 a0 = a0 * a1
191030: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
191033: bf 7b 0b                 i32 a4 = a4 - a0
191036: 52 09 ce                 jump @13008 if a2 != 0
      :                          @13009
191039: 97 bb 10                 a4 = a4 << 0x10
191042: d4 ba 0a                 a3 = a3 | a4
191045: 7a 1a 7c 02              u32 [sp + 0x27c] = a3
191049: 33 07 c5 9d 1c 81        a0 = 0xffffffff811c9dc5
191055: 33 08 93 01 00 01        a1 = 0x1000193
191061: 01                       fallthrough
      :                          @13010
191062: 7c 39                    a2 = u8 [t1]
191064: 95 33 01                 t1 = t1 + 0x1
191067: d3 97 07                 a0 = a0 ^ a2
191070: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
191073: c0 87 07                 i32 a0 = a0 * a1
191076: 52 06 f2                 jump @13010 if s1 != 0
      :                          @13011
191079: 28 af 01                 jump @13043
      :                          @13012
191082: 33 07 70 2c 01           a0 = 0x12c70
191087: 7b 17 80 02              u64 [sp + 0x280] = a0
191091: 49 21 88 02 01           u64 [sp + 648] = 0x1
191096: 49 21 a0 02              u64 [sp + 672] = 0
191100: 33 07 40 30 01           a0 = 0x13040
191105: 7b 17 90 02              u64 [sp + 0x290] = a0
191109: 49 21 98 02              u64 [sp + 664] = 0
191113: 95 17 28 02              a0 = sp + 0x228
191117: 95 18 80 02              a1 = sp + 0x280
191121: 50 20 a2 0b b6 64 fd     ra = 2978, jump @1491
      :                          @13013 [@dyn 1489]
191128: 82 16 30 02              s1 = u64 [sp + 0x230]
191132: 82 1b 38 02              a4 = u64 [sp + 0x238]
191136: 82 17 28 02              a0 = u64 [sp + 0x228]
191140: 7b 17 60                 u64 [sp + 0x60] = a0
191143: 33 07 02                 a0 = 0x2
191146: 33 08                    a1 = 0
191148: 33 09                    a2 = 0
191150: 64 6a                    a3 = s1
191152: 33 00 a4 0b              ra = 0xba4
191156: 0a 64                    ecalli 100 // 'log'
191158: 01                       fallthrough
      :                          @13014 [@dyn 1490]
191159: 82 19 60                 a2 = u64 [sp + 0x60]
191162: 95 98 ff ff ef           a1 = a2 + 0xffffffffffefffff
191167: 53 38 00 00 f0 2c f7     jump @12862 if a1 <u 4293918720
      :                          @13015
191174: 64 9c                    a5 = a2
191176: 33 07 b0 02 03           a0 = 0x302b0
191181: 95 77 00 00 10           a0 = a0 + 0x100000
191186: 01                       fallthrough
      :                          @13016
191187: 82 78                    a1 = u64 [a0]
191189: c9 87 09                 a2 = a0 - a1
191192: ab 69 13 f7              jump @12862 if a2 != s1
      :                          @13017
191196: c9 c8 09                 a2 = a1 - a5
191199: 01                       fallthrough
      :                          @13018
191200: 82 7a                    a3 = u64 [a0]
191202: ab 8a f1                 jump @13016 if a3 != a1
      :                          @13019
191205: 7b 79                    u64 [a0] = a2
191207: 33 0b                    a4 = 0
191209: 01                       fallthrough
      :                          @13020
191210: ab 8a e9                 jump @13016 if a3 != a1
      :                          @13021
191213: 28 fe f6                 jump @12862
      :                          @13022
191216: 95 17 10 01              a0 = sp + 0x110
191220: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
191224: 33 07 28 0c              a0 = 0xc28
191228: 7b 17 00 02              u64 [sp + 0x200] = a0
191232: 33 07 90 2c 01           a0 = 0x12c90
191237: 7b 17 80 02              u64 [sp + 0x280] = a0
191241: 49 21 88 02 02           u64 [sp + 648] = 0x2
191246: 49 21 a0 02              u64 [sp + 672] = 0
191250: 95 17 f8 01              a0 = sp + 0x1f8
191254: 7b 17 90 02              u64 [sp + 0x290] = a0
191258: 49 21 98 02 01           u64 [sp + 664] = 0x1
191263: 95 17 28 02              a0 = sp + 0x228
191267: 95 18 80 02              a1 = sp + 0x280
191271: 50 20 a6 0b 20 64 fd     ra = 2982, jump @1491
      :                          @13023 [@dyn 1491]
191278: 82 16 30 02              s1 = u64 [sp + 0x230]
191282: 82 1b 38 02              a4 = u64 [sp + 0x238]
191286: 82 17 28 02              a0 = u64 [sp + 0x228]
191290: 7b 17 60                 u64 [sp + 0x60] = a0
191293: 33 07 02                 a0 = 0x2
191296: 33 08                    a1 = 0
191298: 33 09                    a2 = 0
191300: 64 6a                    a3 = s1
191302: 33 00 a8 0b              ra = 0xba8
191306: 0a 64                    ecalli 100 // 'log'
191308: 01                       fallthrough
      :                          @13024 [@dyn 1492]
191309: 82 1c 60                 a5 = u64 [sp + 0x60]
191312: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
191317: 53 38 00 00 f0 96 f6     jump @12862 if a1 <u 4293918720
      :                          @13025
191324: 33 07 b0 02 03           a0 = 0x302b0
191329: 95 77 00 00 10           a0 = a0 + 0x100000
191334: 01                       fallthrough
      :                          @13026
191335: 82 78                    a1 = u64 [a0]
191337: c9 87 09                 a2 = a0 - a1
191340: ab 69 7f f6              jump @12862 if a2 != s1
      :                          @13027
191344: c9 c8 09                 a2 = a1 - a5
191347: 01                       fallthrough
      :                          @13028
191348: 82 7a                    a3 = u64 [a0]
191350: ab 8a f1                 jump @13026 if a3 != a1
      :                          @13029
191353: 7b 79                    u64 [a0] = a2
191355: 33 0b                    a4 = 0
191357: 01                       fallthrough
      :                          @13030
191358: ab 8a e9                 jump @13026 if a3 != a1
      :                          @13031
191361: 28 6a f6                 jump @12862
      :                          @13032
191364: 33 07 70 2c 01           a0 = 0x12c70
191369: 7b 17 80 02              u64 [sp + 0x280] = a0
191373: 49 21 88 02 01           u64 [sp + 648] = 0x1
191378: 49 21 a0 02              u64 [sp + 672] = 0
191382: 33 07 40 30 01           a0 = 0x13040
191387: 7b 17 90 02              u64 [sp + 0x290] = a0
191391: 49 21 98 02              u64 [sp + 664] = 0
191395: 95 17 28 02              a0 = sp + 0x228
191399: 95 18 80 02              a1 = sp + 0x280
191403: 50 20 aa 0b 9c 63 fd     ra = 2986, jump @1491
      :                          @13033 [@dyn 1493]
191410: 82 16 30 02              s1 = u64 [sp + 0x230]
191414: 82 1b 38 02              a4 = u64 [sp + 0x238]
191418: 82 17 28 02              a0 = u64 [sp + 0x228]
191422: 7b 17 60                 u64 [sp + 0x60] = a0
191425: 33 07 02                 a0 = 0x2
191428: 33 08                    a1 = 0
191430: 33 09                    a2 = 0
191432: 64 6a                    a3 = s1
191434: 33 00 ac 0b              ra = 0xbac
191438: 0a 64                    ecalli 100 // 'log'
191440: 01                       fallthrough
      :                          @13034 [@dyn 1494]
191441: 82 19 60                 a2 = u64 [sp + 0x60]
191444: 95 98 ff ff ef           a1 = a2 + 0xffffffffffefffff
191449: 53 38 00 00 f0 12 f6     jump @12862 if a1 <u 4293918720
      :                          @13035
191456: 64 9c                    a5 = a2
191458: 33 07 b0 02 03           a0 = 0x302b0
191463: 95 77 00 00 10           a0 = a0 + 0x100000
191468: 01                       fallthrough
      :                          @13036
191469: 82 78                    a1 = u64 [a0]
191471: c9 87 09                 a2 = a0 - a1
191474: ab 69 f9 f5              jump @12862 if a2 != s1
      :                          @13037
191478: c9 c8 09                 a2 = a1 - a5
191481: 01                       fallthrough
      :                          @13038
191482: 82 7a                    a3 = u64 [a0]
191484: ab 8a f1                 jump @13036 if a3 != a1
      :                          @13039
191487: 7b 79                    u64 [a0] = a2
191489: 33 0b                    a4 = 0
191491: 01                       fallthrough
      :                          @13040
191492: ab 8a e9                 jump @13036 if a3 != a1
      :                          @13041
191495: 28 e4 f5                 jump @12862
      :                          @13042
191498: 48 21 7c 02 01           u32 [sp + 636] = 0x1
191503: 33 07 c5 9d 1c 81        a0 = 0xffffffff811c9dc5
191509: 01                       fallthrough
      :                          @13043
191510: 7a 17 00 01              u32 [sp + 0x100] = a0
191514: 3a 08 70 02 03           a1 = u64 [0x30270]
191519: 97 89 0d                 a2 = a1 << 0xd
191522: d3 98 08                 a1 = a1 ^ a2
191525: 98 89 07                 a2 = a1 >> 0x7
191528: d3 98 08                 a1 = a1 ^ a2
191531: 97 89 11                 a2 = a1 << 0x11
191534: d3 98 08                 a1 = a1 ^ a2
191537: 3e 08 70 02 03           u64 [0x30270] = a1
191542: 87 87 1d dd 6c 4f        i32 a0 = a1 * 0x4f6cdd1d
191548: 8b 78 10                 i32 a1 = a0 >> 0x10
191551: d3 87 07                 a0 = a0 ^ a1
191554: 87 77 6b ca eb 85        i32 a0 = a0 * 0xffffffff85ebca6b
191560: 8b 78 0d                 i32 a1 = a0 >> 0xd
191563: d3 78 08                 a1 = a1 ^ a0
191566: 82 17 20 01              a0 = u64 [sp + 0x120]
191570: 87 88 35 ae b2 c2        i32 a1 = a1 * 0xffffffffc2b2ae35
191576: 8b 89 10                 i32 a2 = a1 >> 0x10
191579: d3 98 08                 a1 = a1 ^ a2
191582: 7a 18 a0 01              u32 [sp + 0x1a0] = a1
191586: 51 07 2b                 jump @13047 if a0 == 0
      :                          @13044
191589: 82 19 18 01              a2 = u64 [sp + 0x118]
191593: 33 08                    a1 = 0
191595: 01                       fallthrough
      :                          @13045
191596: 7c 9a                    a3 = u8 [a2]
191598: 95 99 01                 a2 = a2 + 0x1
191601: be a8 08                 i32 a1 = a1 + a3
191604: 97 8a 0a                 a3 = a1 << 0xa
191607: be a8 08                 i32 a1 = a1 + a3
191610: 8b 8a 06                 i32 a3 = a1 >> 0x6
191613: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
191616: d3 a8 08                 a1 = a1 ^ a3
191619: 52 07 e9                 jump @13045 if a0 != 0
      :                          @13046
191622: 97 87 03                 a0 = a1 << 0x3
191625: be 87 07                 i32 a0 = a0 + a1
191628: 01                       fallthrough
      :                          @13047
191629: 8b 78 0b                 i32 a1 = a0 >> 0xb
191632: d3 87 07                 a0 = a0 ^ a1
191635: 97 78 0f                 a1 = a0 << 0xf
191638: be 87 07                 i32 a0 = a0 + a1
191641: 7a 17 b8 01              u32 [sp + 0x1b8] = a0
191645: 95 17 78 02              a0 = sp + 0x278
191649: 7b 17 28 02              u64 [sp + 0x228] = a0
191653: 33 07 8a 0c              a0 = 0xc8a
191657: 7b 17 30 02              u64 [sp + 0x230] = a0
191661: 95 18 7c 02              a1 = sp + 0x27c
191665: 7b 18 38 02              u64 [sp + 0x238] = a1
191669: 7b 17 40 02              u64 [sp + 0x240] = a0
191673: 95 18 00 01              a1 = sp + 0x100
191677: 7b 18 48 02              u64 [sp + 0x248] = a1
191681: 7b 17 50 02              u64 [sp + 0x250] = a0
191685: 95 18 a0 01              a1 = sp + 0x1a0
191689: 7b 18 58 02              u64 [sp + 0x258] = a1
191693: 7b 17 60 02              u64 [sp + 0x260] = a0
191697: 95 18 b8 01              a1 = sp + 0x1b8
191701: 7b 18 68 02              u64 [sp + 0x268] = a1
191705: 7b 17 70 02              u64 [sp + 0x270] = a0
191709: 49 21 80 02 02           u64 [sp + 640] = 0x2
191714: 49 21 90 02              u64 [sp + 656] = 0
191718: 49 21 98 02 08           u64 [sp + 664] = 0x8
191723: 49 21 a0 02              u64 [sp + 672] = 0
191727: 14 09 20 00 00 00 08 00 00 00 a2 = 0x800000020
191737: 7b 19 a8 02              u64 [sp + 0x2a8] = a2
191741: 46 21 b0 02 03           u8 [sp + 688] = 0x3
191746: 49 21 b8 02 02           u64 [sp + 696] = 0x2
191751: 49 21 c8 02              u64 [sp + 712] = 0
191755: 49 21 d0 02 08           u64 [sp + 720] = 0x8
191760: 49 21 d8 02 01           u64 [sp + 728] = 0x1
191765: 7b 19 e0 02              u64 [sp + 0x2e0] = a2
191769: 46 21 e8 02 03           u8 [sp + 744] = 0x3
191774: 49 21 f0 02 02           u64 [sp + 752] = 0x2
191779: 49 21 00 03              u64 [sp + 768] = 0
191783: 49 21 08 03 08           u64 [sp + 776] = 0x8
191788: 49 21 10 03 02           u64 [sp + 784] = 0x2
191793: 7b 19 18 03              u64 [sp + 0x318] = a2
191797: 46 21 20 03 03           u8 [sp + 800] = 0x3
191802: 49 21 28 03 02           u64 [sp + 808] = 0x2
191807: 49 21 38 03              u64 [sp + 824] = 0
191811: 49 21 40 03 08           u64 [sp + 832] = 0x8
191816: 49 21 48 03 03           u64 [sp + 840] = 0x3
191821: 7b 19 50 03              u64 [sp + 0x350] = a2
191825: 46 21 58 03 03           u8 [sp + 856] = 0x3
191830: 49 21 60 03 02           u64 [sp + 864] = 0x2
191835: 49 21 70 03              u64 [sp + 880] = 0
191839: 49 21 78 03 08           u64 [sp + 888] = 0x8
191844: 49 21 80 03 04           u64 [sp + 896] = 0x4
191849: 7b 19 88 03              u64 [sp + 0x388] = a2
191853: 46 21 90 03 03           u8 [sp + 912] = 0x3
191858: 33 07 28 2a 01           a0 = 0x12a28
191863: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
191867: 49 21 00 02 05           u64 [sp + 512] = 0x5
191872: 95 18 80 02              a1 = sp + 0x280
191876: 7b 18 18 02              u64 [sp + 0x218] = a1
191880: 49 21 20 02 05           u64 [sp + 544] = 0x5
191885: 95 18 28 02              a1 = sp + 0x228
191889: 7b 18 08 02              u64 [sp + 0x208] = a1
191893: 49 21 10 02 05           u64 [sp + 528] = 0x5
191898: 95 17 d0 01              a0 = sp + 0x1d0
191902: 95 18 f8 01              a1 = sp + 0x1f8
191906: 50 20 ae 0b a5 61 fd     ra = 2990, jump @1491
      :                          @13048 [@dyn 1495]
191913: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
191917: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
191921: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
191925: 7b 17 60                 u64 [sp + 0x60] = a0
191928: 33 07 02                 a0 = 0x2
191931: 33 08                    a1 = 0
191933: 33 09                    a2 = 0
191935: 64 6a                    a3 = s1
191937: 33 00 b0 0b              ra = 0xbb0
191941: 0a 64                    ecalli 100 // 'log'
191943: 01                       fallthrough
      :                          @13049 [@dyn 1496]
191944: 82 1c 60                 a5 = u64 [sp + 0x60]
191947: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
191952: 53 38 00 00 f0 25        jump @13055 if a1 <u 4293918720
      :                          @13050
191958: 33 07 b0 02 03           a0 = 0x302b0
191963: 95 77 00 00 10           a0 = a0 + 0x100000
191968: 01                       fallthrough
      :                          @13051
191969: 82 78                    a1 = u64 [a0]
191971: c9 87 09                 a2 = a0 - a1
191974: ab 69 0f                 jump @13055 if a2 != s1
      :                          @13052
191977: c9 c8 09                 a2 = a1 - a5
191980: 01                       fallthrough
      :                          @13053
191981: 82 7a                    a3 = u64 [a0]
191983: ab 8a f2                 jump @13051 if a3 != a1
      :                          @13054
191986: 7b 79                    u64 [a0] = a2
191988: 01                       fallthrough
      :                          @13055
191989: 82 17 10 01              a0 = u64 [sp + 0x110]
191993: 51 07 f2 f3              jump @12862 if a0 == 0
      :                          @13056
191997: 56 37 00 00 10 ee f3     jump @12862 if a0 >u 1048576
      :                          @13057
192004: 82 18 18 01              a1 = u64 [sp + 0x118]
192008: 33 0a b0 02 03           a3 = 0x302b0
192013: 95 a9 00 00 10           a2 = a3 + 0x100000
192018: 01                       fallthrough
      :                          @13058
192019: 82 9a                    a3 = u64 [a2]
192021: c9 a9 0b                 a4 = a2 - a3
192024: ab 8b d3 f3              jump @12862 if a4 != a1
      :                          @13059
192028: c9 7a 0b                 a4 = a3 - a0
192031: 01                       fallthrough
      :                          @13060
192032: 82 9c                    a5 = u64 [a2]
192034: ab ac f1                 jump @13058 if a5 != a3
      :                          @13061
192037: 7b 9b                    u64 [a2] = a4
192039: 33 06                    s1 = 0
192041: 01                       fallthrough
      :                          @13062
192042: ab ac e9                 jump @13058 if a5 != a3
      :                          @13063
192045: 28 be f3                 jump @12862
      :                          @13064
192048: 95 17 d0 01              a0 = sp + 0x1d0
192052: 95 18 f8 01              a1 = sp + 0x1f8
192056: 50 20 b2 0b 57 16 fe     ra = 2994, jump @5225
      :                          @13065 [@dyn 1497]
192063: 78 17 b8 01              u8 [sp + 0x1b8] = a0
192067: 95 17 b8 01              a0 = sp + 0x1b8
192071: 7b 17 10 01              u64 [sp + 0x110] = a0
192075: 33 07 80 0c              a0 = 0xc80
192079: 7b 17 18 01              u64 [sp + 0x118] = a0
192083: 33 07 e8 09 01           a0 = 0x109e8
192088: 7b 17 80 02              u64 [sp + 0x280] = a0
192092: 49 21 88 02 01           u64 [sp + 648] = 0x1
192097: 49 21 a0 02              u64 [sp + 672] = 0
192101: 95 18 10 01              a1 = sp + 0x110
192105: 7b 18 90 02              u64 [sp + 0x290] = a1
192109: 49 21 98 02 01           u64 [sp + 664] = 0x1
192114: 95 17 28 02              a0 = sp + 0x228
192118: 95 18 80 02              a1 = sp + 0x280
192122: 50 20 b4 0b cd 60 fd     ra = 2996, jump @1491
      :                          @13066 [@dyn 1498]
192129: 82 16 30 02              s1 = u64 [sp + 0x230]
192133: 82 1b 38 02              a4 = u64 [sp + 0x238]
192137: 82 17 28 02              a0 = u64 [sp + 0x228]
192141: 7b 17 60                 u64 [sp + 0x60] = a0
192144: 33 07 02                 a0 = 0x2
192147: 33 08                    a1 = 0
192149: 33 09                    a2 = 0
192151: 64 6a                    a3 = s1
192153: 33 00 b6 0b              ra = 0xbb6
192157: 0a 64                    ecalli 100 // 'log'
192159: 01                       fallthrough
      :                          @13067 [@dyn 1499]
192160: 82 1c 60                 a5 = u64 [sp + 0x60]
192163: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
192168: 53 38 00 00 f0 32        jump @13073 if a1 <u 4293918720
      :                          @13068
192174: 33 07 b0 02 03           a0 = 0x302b0
192179: 95 77 00 00 10           a0 = a0 + 0x100000
192184: 01                       fallthrough
      :                          @13069
192185: 82 78                    a1 = u64 [a0]
192187: c9 87 09                 a2 = a0 - a1
192190: ab 69 1c                 jump @13073 if a2 != s1
      :                          @13070
192193: c9 c8 09                 a2 = a1 - a5
192196: 01                       fallthrough
      :                          @13071
192197: 82 7a                    a3 = u64 [a0]
192199: ab 8a f2                 jump @13069 if a3 != a1
      :                          @13072
192202: 7b 79                    u64 [a0] = a2
192204: 33 0b                    a4 = 0
192206: 95 17 f8 01              a0 = sp + 0x1f8
192210: 33 00 b8 0b              ra = 0xbb8
192214: 28 e5 1c fd              jump @209
      :                          @13073
192218: 95 17 f8 01              a0 = sp + 0x1f8
192222: 50 20 b8 0b dd 1c fd     ra = 3000, jump @209
      :                          @13074 [@dyn 1500]
192229: 28 68 3e ff              jump @10535
      :                          @13075
192233: 33 09 02                 a2 = 0x2
192236: 83 aa                    i32 a3 = a3 + 0
192238: 33 0b 02                 a4 = 0x2
192241: 01                       fallthrough
      :                          @13076
192242: 64 8c                    a5 = a1
192244: d8 ab 08                 a1 = a4 <u a3
192247: 85 86 01                 s1 = a1 ^ 0x1
192250: be 8b 0b                 i32 a4 = a4 + a1
192253: d8 ba 08                 a1 = a3 <u a4
192256: d4 86 06                 s1 = s1 | a1
192259: c8 c9 08                 a1 = a2 + a5
192262: 64 c9                    a2 = a5
192264: 51 06 ea                 jump @13076 if s1 == 0
      :                          @13077
192267: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
192271: 95 18 10 01              a1 = sp + 0x110
192275: 7b 18 28 02              u64 [sp + 0x228] = a1
192279: 33 08 5e 0c              a1 = 0xc5e
192283: 7b 18 30 02              u64 [sp + 0x230] = a1
192287: 95 18 d0 01              a1 = sp + 0x1d0
192291: 7b 18 38 02              u64 [sp + 0x238] = a1
192295: 33 08 28 0c              a1 = 0xc28
192299: 7b 18 40 02              u64 [sp + 0x240] = a1
192303: 33 08 f0 05 01           a1 = 0x105f0
192308: 7b 18 80 02              u64 [sp + 0x280] = a1
192312: 7b 17 88 02              u64 [sp + 0x288] = a0
192316: 49 21 a0 02              u64 [sp + 672] = 0
192320: 95 18 28 02              a1 = sp + 0x228
192324: 7b 18 90 02              u64 [sp + 0x290] = a1
192328: 7b 17 98 02              u64 [sp + 0x298] = a0
192332: 95 17 f8 01              a0 = sp + 0x1f8
192336: 95 18 80 02              a1 = sp + 0x280
192340: 50 20 ba 0b f3 5f fd     ra = 3002, jump @1491
      :                          @13078 [@dyn 1501]
192347: 82 16 00 02              s1 = u64 [sp + 0x200]
192351: 82 1b 08 02              a4 = u64 [sp + 0x208]
192355: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
192359: 7b 17 60                 u64 [sp + 0x60] = a0
192362: 33 07 02                 a0 = 0x2
192365: 33 08                    a1 = 0
192367: 33 09                    a2 = 0
192369: 64 6a                    a3 = s1
192371: 33 00 bc 0b              ra = 0xbbc
192375: 0a 64                    ecalli 100 // 'log'
192377: 01                       fallthrough
      :                          @13079 [@dyn 1502]
192378: 82 1c 60                 a5 = u64 [sp + 0x60]
192381: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
192386: 53 38 00 00 f0 69 f2     jump @12862 if a1 <u 4293918720
      :                          @13080
192393: 33 07 b0 02 03           a0 = 0x302b0
192398: 95 77 00 00 10           a0 = a0 + 0x100000
192403: 01                       fallthrough
      :                          @13081
192404: 82 78                    a1 = u64 [a0]
192406: c9 87 09                 a2 = a0 - a1
192409: ab 69 52 f2              jump @12862 if a2 != s1
      :                          @13082
192413: c9 c8 09                 a2 = a1 - a5
192416: 01                       fallthrough
      :                          @13083
192417: 82 7a                    a3 = u64 [a0]
192419: ab 8a f1                 jump @13081 if a3 != a1
      :                          @13084
192422: 7b 79                    u64 [a0] = a2
192424: 33 0b                    a4 = 0
192426: 01                       fallthrough
      :                          @13085
192427: ab 8a e9                 jump @13081 if a3 != a1
      :                          @13086
192430: 28 3d f2                 jump @12862
      :                          @13087
192433: 64 97                    a0 = a2
192435: 28 26                    jump @13090
      :                          @13088
192437: 33 0a                    a3 = 0
192439: 33 08 02                 a1 = 0x2
192442: 83 99                    i32 a2 = a2 + 0
192444: 01                       fallthrough
      :                          @13089
192445: 64 7b                    a4 = a0
192447: d8 98 07                 a0 = a1 <u a2
192450: 85 7c 01                 a5 = a0 ^ 0x1
192453: be 78 08                 i32 a1 = a1 + a0
192456: d8 89 07                 a0 = a2 <u a1
192459: d4 7c 0c                 a5 = a5 | a0
192462: 97 b7 01                 a0 = a4 << 0x1
192465: c8 a7 07                 a0 = a0 + a3
192468: 64 ba                    a3 = a4
192470: 51 0c e7                 jump @13089 if a5 == 0
      :                          @13090
192473: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
192477: 95 17 10 01              a0 = sp + 0x110
192481: 7b 17 28 02              u64 [sp + 0x228] = a0
192485: 33 07 5e 0c              a0 = 0xc5e
192489: 7b 17 30 02              u64 [sp + 0x230] = a0
192493: 95 17 d0 01              a0 = sp + 0x1d0
192497: 7b 17 38 02              u64 [sp + 0x238] = a0
192501: 33 07 28 0c              a0 = 0xc28
192505: 7b 17 40 02              u64 [sp + 0x240] = a0
192509: 33 07 48 06 01           a0 = 0x10648
192514: 7b 17 80 02              u64 [sp + 0x280] = a0
192518: 49 21 88 02 02           u64 [sp + 648] = 0x2
192523: 49 21 a0 02              u64 [sp + 672] = 0
192527: 95 18 28 02              a1 = sp + 0x228
192531: 7b 18 90 02              u64 [sp + 0x290] = a1
192535: 49 21 98 02 02           u64 [sp + 664] = 0x2
192540: 95 17 f8 01              a0 = sp + 0x1f8
192544: 95 18 80 02              a1 = sp + 0x280
192548: 50 20 be 0b 23 5f fd     ra = 3006, jump @1491
      :                          @13091 [@dyn 1503]
192555: 82 16 00 02              s1 = u64 [sp + 0x200]
192559: 82 1b 08 02              a4 = u64 [sp + 0x208]
192563: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
192567: 7b 17 60                 u64 [sp + 0x60] = a0
192570: 33 07 02                 a0 = 0x2
192573: 33 08                    a1 = 0
192575: 33 09                    a2 = 0
192577: 64 6a                    a3 = s1
192579: 33 00 c0 0b              ra = 0xbc0
192583: 0a 64                    ecalli 100 // 'log'
192585: 01                       fallthrough
      :                          @13092 [@dyn 1504]
192586: 82 1c 60                 a5 = u64 [sp + 0x60]
192589: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
192594: 53 38 00 00 f0 99 f1     jump @12862 if a1 <u 4293918720
      :                          @13093
192601: 33 07 b0 02 03           a0 = 0x302b0
192606: 95 77 00 00 10           a0 = a0 + 0x100000
192611: 01                       fallthrough
      :                          @13094
192612: 82 78                    a1 = u64 [a0]
192614: c9 87 09                 a2 = a0 - a1
192617: ab 69 82 f1              jump @12862 if a2 != s1
      :                          @13095
192621: c9 c8 09                 a2 = a1 - a5
192624: 01                       fallthrough
      :                          @13096
192625: 82 7a                    a3 = u64 [a0]
192627: ab 8a f1                 jump @13094 if a3 != a1
      :                          @13097
192630: 7b 79                    u64 [a0] = a2
192632: 33 0b                    a4 = 0
192634: 01                       fallthrough
      :                          @13098
192635: ab 8a e9                 jump @13094 if a3 != a1
      :                          @13099
192638: 28 6d f1                 jump @12862
      :                          @13100
192641: 54 38 00 00 10 09        jump @13102 if a1 <=u 1048576
      :                          @13101
192647: 28 0c a0                 jump @11665
      :                          @13102
192650: 82 12 00 02              t0 = u64 [sp + 0x200]
192654: 33 0b b0 02 03           a4 = 0x302b0
192659: 95 ba 00 00 10           a3 = a4 + 0x100000
192664: 01                       fallthrough
      :                          @13103
192665: 82 ab                    a4 = u64 [a3]
192667: c9 ba 0c                 a5 = a3 - a4
192670: aa 2c 06                 jump @13105 if a5 == t0
      :                          @13104
192673: 28 f2 9f                 jump @11665
      :                          @13105
192676: c9 8b 0c                 a5 = a4 - a1
192679: 01                       fallthrough
      :                          @13106
192680: 82 a6                    s1 = u64 [a3]
192682: ab b6 ef                 jump @13103 if s1 != a4
      :                          @13107
192685: 7b ac                    u64 [a3] = a5
192687: 33 09                    a2 = 0
192689: 01                       fallthrough
      :                          @13108
192690: ab b6 e7                 jump @13103 if s1 != a4
      :                          @13109
192693: 28 de 9f                 jump @11665
      :                          @13110
192696: 54 38 00 00 10 09        jump @13112 if a1 <=u 1048576
      :                          @13111
192702: 28 e2 9f                 jump @11667
      :                          @13112
192705: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
192709: 33 0a b0 02 03           a3 = 0x302b0
192714: 95 a9 00 00 10           a2 = a3 + 0x100000
192719: 01                       fallthrough
      :                          @13113
192720: 82 9a                    a3 = u64 [a2]
192722: c9 a9 0b                 a4 = a2 - a3
192725: aa 7b 06                 jump @13115 if a4 == a0
      :                          @13114
192728: 28 c8 9f                 jump @11667
      :                          @13115
192731: c9 8a 0b                 a4 = a3 - a1
192734: 01                       fallthrough
      :                          @13116
192735: 82 9c                    a5 = u64 [a2]
192737: ab ac ef                 jump @13113 if a5 != a3
      :                          @13117
192740: 7b 9b                    u64 [a2] = a4
192742: 33 06                    s1 = 0
192744: 01                       fallthrough
      :                          @13118
192745: ab ac e7                 jump @13113 if a5 != a3
      :                          @13119
192748: 28 b4 9f                 jump @11667
      :                          @13120
192751: 54 38 00 00 10 09        jump @13122 if a1 <=u 1048576
      :                          @13121
192757: 28 80 a1                 jump @11698
      :                          @13122
192760: 82 12 00 02              t0 = u64 [sp + 0x200]
192764: 33 0b b0 02 03           a4 = 0x302b0
192769: 95 ba 00 00 10           a3 = a4 + 0x100000
192774: 01                       fallthrough
      :                          @13123
192775: 82 ab                    a4 = u64 [a3]
192777: c9 ba 0c                 a5 = a3 - a4
192780: aa 2c 06                 jump @13125 if a5 == t0
      :                          @13124
192783: 28 66 a1                 jump @11698
      :                          @13125
192786: c9 8b 0c                 a5 = a4 - a1
192789: 01                       fallthrough
      :                          @13126
192790: 82 a6                    s1 = u64 [a3]
192792: ab b6 ef                 jump @13123 if s1 != a4
      :                          @13127
192795: 7b ac                    u64 [a3] = a5
192797: 33 09                    a2 = 0
192799: 01                       fallthrough
      :                          @13128
192800: ab b6 e7                 jump @13123 if s1 != a4
      :                          @13129
192803: 28 52 a1                 jump @11698
      :                          @13130
192806: 54 38 00 00 10 09        jump @13132 if a1 <=u 1048576
      :                          @13131
192812: 28 56 a1                 jump @11700
      :                          @13132
192815: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
192819: 33 0a b0 02 03           a3 = 0x302b0
192824: 95 a9 00 00 10           a2 = a3 + 0x100000
192829: 01                       fallthrough
      :                          @13133
192830: 82 9a                    a3 = u64 [a2]
192832: c9 a9 0b                 a4 = a2 - a3
192835: aa 7b 06                 jump @13135 if a4 == a0
      :                          @13134
192838: 28 3c a1                 jump @11700
      :                          @13135
192841: c9 8a 0b                 a4 = a3 - a1
192844: 01                       fallthrough
      :                          @13136
192845: 82 9c                    a5 = u64 [a2]
192847: ab ac ef                 jump @13133 if a5 != a3
      :                          @13137
192850: 7b 9b                    u64 [a2] = a4
192852: 33 06                    s1 = 0
192854: 01                       fallthrough
      :                          @13138
192855: ab ac e7                 jump @13133 if a5 != a3
      :                          @13139
192858: 28 28 a1                 jump @11700
      :                          @13140
192861: 54 38 00 00 10 09        jump @13142 if a1 <=u 1048576
      :                          @13141
192867: 28 36 a7                 jump @11805
      :                          @13142
192870: 82 12 00 02              t0 = u64 [sp + 0x200]
192874: 33 0b b0 02 03           a4 = 0x302b0
192879: 95 ba 00 00 10           a3 = a4 + 0x100000
192884: 01                       fallthrough
      :                          @13143
192885: 82 ab                    a4 = u64 [a3]
192887: c9 ba 0c                 a5 = a3 - a4
192890: aa 2c 06                 jump @13145 if a5 == t0
      :                          @13144
192893: 28 1c a7                 jump @11805
      :                          @13145
192896: c9 8b 0c                 a5 = a4 - a1
192899: 01                       fallthrough
      :                          @13146
192900: 82 a6                    s1 = u64 [a3]
192902: ab b6 ef                 jump @13143 if s1 != a4
      :                          @13147
192905: 7b ac                    u64 [a3] = a5
192907: 33 09                    a2 = 0
192909: 01                       fallthrough
      :                          @13148
192910: ab b6 e7                 jump @13143 if s1 != a4
      :                          @13149
192913: 28 08 a7                 jump @11805
      :                          @13150
192916: 54 38 00 00 10 09        jump @13152 if a1 <=u 1048576
      :                          @13151
192922: 28 0c a7                 jump @11807
      :                          @13152
192925: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
192929: 33 0a b0 02 03           a3 = 0x302b0
192934: 95 a9 00 00 10           a2 = a3 + 0x100000
192939: 01                       fallthrough
      :                          @13153
192940: 82 9a                    a3 = u64 [a2]
192942: c9 a9 0b                 a4 = a2 - a3
192945: aa 7b 06                 jump @13155 if a4 == a0
      :                          @13154
192948: 28 f2 a6                 jump @11807
      :                          @13155
192951: c9 8a 0b                 a4 = a3 - a1
192954: 01                       fallthrough
      :                          @13156
192955: 82 9c                    a5 = u64 [a2]
192957: ab ac ef                 jump @13153 if a5 != a3
      :                          @13157
192960: 7b 9b                    u64 [a2] = a4
192962: 33 06                    s1 = 0
192964: 01                       fallthrough
      :                          @13158
192965: ab ac e7                 jump @13153 if a5 != a3
      :                          @13159
192968: 28 de a6                 jump @11807
      :                          @13160
192971: 54 38 00 00 10 09        jump @13162 if a1 <=u 1048576
      :                          @13161
192977: 28 aa a8                 jump @11838
      :                          @13162
192980: 82 12 00 02              t0 = u64 [sp + 0x200]
192984: 33 0b b0 02 03           a4 = 0x302b0
192989: 95 ba 00 00 10           a3 = a4 + 0x100000
192994: 01                       fallthrough
      :                          @13163
192995: 82 ab                    a4 = u64 [a3]
192997: c9 ba 0c                 a5 = a3 - a4
193000: aa 2c 06                 jump @13165 if a5 == t0
      :                          @13164
193003: 28 90 a8                 jump @11838
      :                          @13165
193006: c9 8b 0c                 a5 = a4 - a1
193009: 01                       fallthrough
      :                          @13166
193010: 82 a6                    s1 = u64 [a3]
193012: ab b6 ef                 jump @13163 if s1 != a4
      :                          @13167
193015: 7b ac                    u64 [a3] = a5
193017: 33 09                    a2 = 0
193019: 01                       fallthrough
      :                          @13168
193020: ab b6 e7                 jump @13163 if s1 != a4
      :                          @13169
193023: 28 7c a8                 jump @11838
      :                          @13170
193026: 54 38 00 00 10 09        jump @13172 if a1 <=u 1048576
      :                          @13171
193032: 28 80 a8                 jump @11840
      :                          @13172
193035: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
193039: 33 0a b0 02 03           a3 = 0x302b0
193044: 95 a9 00 00 10           a2 = a3 + 0x100000
193049: 01                       fallthrough
      :                          @13173
193050: 82 9a                    a3 = u64 [a2]
193052: c9 a9 0b                 a4 = a2 - a3
193055: aa 7b 06                 jump @13175 if a4 == a0
      :                          @13174
193058: 28 66 a8                 jump @11840
      :                          @13175
193061: c9 8a 0b                 a4 = a3 - a1
193064: 01                       fallthrough
      :                          @13176
193065: 82 9c                    a5 = u64 [a2]
193067: ab ac ef                 jump @13173 if a5 != a3
      :                          @13177
193070: 7b 9b                    u64 [a2] = a4
193072: 33 06                    s1 = 0
193074: 01                       fallthrough
      :                          @13178
193075: ab ac e7                 jump @13173 if a5 != a3
      :                          @13179
193078: 28 52 a8                 jump @11840
      :                          @13180
193081: 51 07 49                 jump @13198 if a0 == 0
      :                          @13181
193084: 51 17 01 31              jump @13188 if a0 == 1
      :                          @13182
193088: 52 17 02 23              jump @13187 if a0 != 2
      :                          @13183
193092: 49 21 d0 01 0e           u64 [sp + 464] = 0xe
193097: 49 21 d8 01 19           u64 [sp + 472] = 0x19
193102: 28 3f                    jump @13199
      :                          @13184
193104: 51 07 1d                 jump @13188 if a0 == 0
      :                          @13185
193107: 52 17 01 10              jump @13187 if a0 != 1
      :                          @13186
193111: 49 21 d0 01 12           u64 [sp + 464] = 0x12
193116: 49 21 d8 01 19           u64 [sp + 472] = 0x19
193121: 28 2c                    jump @13199
      :                          @13187
193123: 49 21 d8 01              u64 [sp + 472] = 0
193127: 49 21 d0 01              u64 [sp + 464] = 0
193131: 28 22                    jump @13199
      :                          @13188
193133: 49 21 d0 01 09           u64 [sp + 464] = 0x9
193138: 49 21 d8 01 09           u64 [sp + 472] = 0x9
193143: 28 16                    jump @13199
      :                          @13189
193145: 00                       trap
      :                          @13190
193146: 00                       trap
      :                          @13191
193147: 00                       trap
      :                          @13192
193148: 00                       trap
      :                          @13193
193149: 00                       trap
      :                          @13194
193150: 00                       trap
      :                          @13195
193151: 00                       trap
      :                          @13196
193152: 00                       trap
      :                          @13197
193153: 00                       trap
      :                          @13198
193154: 49 21 d0 01 06           u64 [sp + 464] = 0x6
193159: 49 21 d8 01 06           u64 [sp + 472] = 0x6
193164: 01                       fallthrough
      :                          @13199
193165: 95 17 b8 01              a0 = sp + 0x1b8
193169: 7b 17 80 02              u64 [sp + 0x280] = a0
193173: 33 07 28 0c              a0 = 0xc28
193177: 7b 17 88 02              u64 [sp + 0x288] = a0
193181: 95 18 10 01              a1 = sp + 0x110
193185: 7b 18 90 02              u64 [sp + 0x290] = a1
193189: 7b 17 98 02              u64 [sp + 0x298] = a0
193193: 95 17 d0 01              a0 = sp + 0x1d0
193197: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
193201: 33 07 9a 01              a0 = 0x19a
193205: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
193209: 33 07 60 14 01           a0 = 0x11460
193214: 7b 17 28 02              u64 [sp + 0x228] = a0
193218: 49 21 30 02 03           u64 [sp + 560] = 0x3
193223: 49 21 48 02              u64 [sp + 584] = 0
193227: 95 18 80 02              a1 = sp + 0x280
193231: 7b 18 38 02              u64 [sp + 0x238] = a1
193235: 49 21 40 02 03           u64 [sp + 576] = 0x3
193240: 95 17 f8 01              a0 = sp + 0x1f8
193244: 95 18 28 02              a1 = sp + 0x228
193248: 50 20 c2 0b 67 5c fd     ra = 3010, jump @1491
      :                          @13200 [@dyn 1505]
193255: 82 16 00 02              s1 = u64 [sp + 0x200]
193259: 82 1b 08 02              a4 = u64 [sp + 0x208]
193263: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
193267: 7b 17 60                 u64 [sp + 0x60] = a0
193270: 33 07 02                 a0 = 0x2
193273: 33 08                    a1 = 0
193275: 33 09                    a2 = 0
193277: 64 6a                    a3 = s1
193279: 33 00 c4 0b              ra = 0xbc4
193283: 0a 64                    ecalli 100 // 'log'
193285: 01                       fallthrough
      :                          @13201 [@dyn 1506]
193286: 82 1c 60                 a5 = u64 [sp + 0x60]
193289: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
193294: 55 38 00 00 f0 09        jump @13203 if a1 >=u 4293918720
      :                          @13202
193300: 28 d7 ee                 jump @12862
      :                          @13203
193303: 33 07 b0 02 03           a0 = 0x302b0
193308: 95 77 00 00 10           a0 = a0 + 0x100000
193313: 01                       fallthrough
      :                          @13204
193314: 82 78                    a1 = u64 [a0]
193316: c9 87 09                 a2 = a0 - a1
193319: aa 69 06                 jump @13206 if a2 == s1
      :                          @13205
193322: 28 c1 ee                 jump @12862
      :                          @13206
193325: c9 c8 09                 a2 = a1 - a5
193328: 01                       fallthrough
      :                          @13207
193329: 82 7a                    a3 = u64 [a0]
193331: ab 8a ef                 jump @13204 if a3 != a1
      :                          @13208
193334: 7b 79                    u64 [a0] = a2
193336: 33 0b                    a4 = 0
193338: 01                       fallthrough
      :                          @13209
193339: ab 8a e7                 jump @13204 if a3 != a1
      :                          @13210
193342: 28 ad ee                 jump @12862
      :                          @13211
193345: 00                       trap
      :                          @13212
193346: 00                       trap
      :                          @13213
193347: 28 29 19                 jump @13704
      :                          @13214
193350: 00                       trap
      :                          @13215
193351: 00                       trap
      :                          @13216
193352: 00                       trap
      :                          @13217
193353: 00                       trap
      :                          @13218
193354: 00                       trap
      :                          @13219
193355: 00                       trap
      :                          @13220
193356: 00                       trap
      :                          @13221
193357: 00                       trap
      :                          @13222
193358: 00                       trap
      :                          @13223
193359: 00                       trap
      :                          @13224
193360: 00                       trap
      :                          @13225
193361: 00                       trap
      :                          @13226
193362: 00                       trap
      :                          @13227
193363: 00                       trap
      :                          @13228
193364: 00                       trap
      :                          @13229
193365: 00                       trap
      :                          @13230
193366: 00                       trap
      :                          @13231
193367: 00                       trap
      :                          @13232
193368: 00                       trap
      :                          @13233
193369: 00                       trap
      :                          @13234
193370: 00                       trap
      :                          @13235
193371: 00                       trap
      :                          @13236
193372: 00                       trap
      :                          @13237
193373: 00                       trap
      :                          @13238
193374: 00                       trap
      :                          @13239
193375: 00                       trap
      :                          @13240
193376: 00                       trap
      :                          @13241
193377: 00                       trap
      :                          @13242
193378: 00                       trap
      :                          @13243
193379: 00                       trap
      :                          @13244
193380: 00                       trap
      :                          @13245
193381: 00                       trap
      :                          @13246
193382: 00                       trap
      :                          @13247
193383: 00                       trap
      :                          @13248
193384: 00                       trap
      :                          @13249
193385: 28 03 19                 jump @13704
      :                          @13250
193388: 00                       trap
      :                          @13251
193389: 00                       trap
      :                          @13252
193390: 00                       trap
      :                          @13253
193391: 00                       trap
      :                          @13254
193392: 00                       trap
      :                          @13255
193393: 00                       trap
      :                          @13256
193394: 00                       trap
      :                          @13257
193395: 00                       trap
      :                          @13258
193396: 00                       trap
      :                          @13259
193397: 00                       trap
      :                          @13260
193398: 28 f6 18                 jump @13704
      :                          @13261
193401: 00                       trap
      :                          @13262
193402: 00                       trap
      :                          @13263
193403: 00                       trap
      :                          @13264
193404: 00                       trap
      :                          @13265
193405: 00                       trap
      :                          @13266
193406: 00                       trap
      :                          @13267
193407: 00                       trap
      :                          @13268
193408: 00                       trap
      :                          @13269
193409: 00                       trap
      :                          @13270
193410: 00                       trap
      :                          @13271
193411: 00                       trap
      :                          @13272
193412: 00                       trap
      :                          @13273
193413: 00                       trap
      :                          @13274
193414: 00                       trap
      :                          @13275
193415: 00                       trap
      :                          @13276
193416: 00                       trap
      :                          @13277
193417: 00                       trap
      :                          @13278 [export #0: 'refine']
193418: 95 11 e0 fe              sp = sp + 0xfffffffffffffee0
193422: 7b 10 18 01              u64 [sp + 0x118] = ra
193426: 7b 15 10 01              u64 [sp + 0x110] = s0
193430: 7b 16 08 01              u64 [sp + 0x108] = s1
193434: 64 85                    s0 = a1
193436: 64 7a                    a3 = a0
193438: 33 07 00 00 01           a0 = 0x10000
193443: 53 15 04 43              jump @13287 if s0 <u 4
      :                          @13279
193447: 7d a8                    a1 = i8 [a3]
193449: 33 06 01                 s1 = 0x1
193452: 59 08 37                 jump @13286 if a1 >=s 0
      :                          @13280
193455: 84 89 ff 00              a2 = a1 & 0xff
193459: 33 06 02                 s1 = 0x2
193462: 53 29 c0 00 2d           jump @13286 if a2 <u 192
      :                          @13281
193467: 33 06 03                 s1 = 0x3
193470: 53 29 e0 00 25           jump @13286 if a2 <u 224
      :                          @13282
193475: 33 06 04                 s1 = 0x4
193478: 53 29 f0 00 1d           jump @13286 if a2 <u 240
      :                          @13283
193483: 33 06 05                 s1 = 0x5
193486: 53 29 f8 00 15           jump @13286 if a2 <u 248
      :                          @13284
193491: 33 06 06                 s1 = 0x6
193494: 53 29 fc 00 0d           jump @13286 if a2 <u 252
      :                          @13285
193499: 88 98 fe 00              a1 = a2 <u 0xfe
193503: 9a 86 08                 s1 = 0x8 - a1
193506: 01                       fallthrough
      :                          @13286
193507: ae 65 08                 jump @13288 if s0 >=u s1
      :                          @13287
193510: 33 08                    a1 = 0
193512: 28 e2 00                 jump @13313
      :                          @13288
193515: 64 a7                    a0 = a3
193517: 64 68                    a1 = s1
193519: 7b 1a 60                 u64 [sp + 0x60] = a3
193522: 50 20 c6 0b 7b 2f        ra = 3014, jump @14065
      :                          @13289 [@dyn 1507]
193528: aa 65 ca 00              jump @13312 if s0 == s1
      :                          @13290
193532: 82 17 60                 a0 = u64 [sp + 0x60]
193535: c8 67 07                 a0 = a0 + s1
193538: 7d 78                    a1 = i8 [a0]
193540: c9 65 06                 s1 = s0 - s1
193543: 33 05 01                 s0 = 0x1
193546: 59 08 37                 jump @13297 if a1 >=s 0
      :                          @13291
193549: 84 89 ff 00              a2 = a1 & 0xff
193553: 33 05 02                 s0 = 0x2
193556: 53 29 c0 00 2d           jump @13297 if a2 <u 192
      :                          @13292
193561: 33 05 03                 s0 = 0x3
193564: 53 29 e0 00 25           jump @13297 if a2 <u 224
      :                          @13293
193569: 33 05 04                 s0 = 0x4
193572: 53 29 f0 00 1d           jump @13297 if a2 <u 240
      :                          @13294
193577: 33 05 05                 s0 = 0x5
193580: 53 29 f8 00 15           jump @13297 if a2 <u 248
      :                          @13295
193585: 33 05 06                 s0 = 0x6
193588: 53 29 fc 00 0d           jump @13297 if a2 <u 252
      :                          @13296
193593: 88 98 fe 00              a1 = a2 <u 0xfe
193597: 9a 85 08                 s0 = 0x8 - a1
193600: 01                       fallthrough
      :                          @13297
193601: ac 56 81 00              jump @13312 if s1 <u s0
      :                          @13298
193605: 64 58                    a1 = s0
193607: 7b 17 60                 u64 [sp + 0x60] = a0
193610: 50 20 c8 0b 23 2f        ra = 3016, jump @14065
      :                          @13299 [@dyn 1508]
193616: 82 17 60                 a0 = u64 [sp + 0x60]
193619: c8 57 07                 a0 = a0 + s0
193622: 7b 17 60                 u64 [sp + 0x60] = a0
193625: ab 56 0b                 jump @13301 if s1 != s0
      :                          @13300
193628: 33 08                    a1 = 0
193630: 33 06                    s1 = 0
193632: 33 07                    a0 = 0
193634: 28 56                    jump @13311
      :                          @13301
193636: 7d 78                    a1 = i8 [a0]
193638: c9 56 05                 s0 = s1 - s0
193641: 33 06 01                 s1 = 0x1
193644: 59 08 37                 jump @13308 if a1 >=s 0
      :                          @13302
193647: 84 89 ff 00              a2 = a1 & 0xff
193651: 33 06 02                 s1 = 0x2
193654: 53 29 c0 00 2d           jump @13308 if a2 <u 192
      :                          @13303
193659: 33 06 03                 s1 = 0x3
193662: 53 29 e0 00 25           jump @13308 if a2 <u 224
      :                          @13304
193667: 33 06 04                 s1 = 0x4
193670: 53 29 f0 00 1d           jump @13308 if a2 <u 240
      :                          @13305
193675: 33 06 05                 s1 = 0x5
193678: 53 29 f8 00 15           jump @13308 if a2 <u 248
      :                          @13306
193683: 33 06 06                 s1 = 0x6
193686: 53 29 fc 00 0d           jump @13308 if a2 <u 252
      :                          @13307
193691: 88 99 fe 00              a2 = a2 <u 0xfe
193695: 9a 96 08                 s1 = 0x8 - a2
193698: 01                       fallthrough
      :                          @13308
193699: ac 65 02 03              jump @13352 if s0 <u s1
      :                          @13309
193703: 64 68                    a1 = s1
193705: 50 20 ca 0b c4 2e        ra = 3018, jump @14065
      :                          @13310 [@dyn 1509]
193711: e4 65 08                 a1 = maxu(s0, s1)
193714: c9 68 08                 a1 = a1 - s1
193717: ac 78 0d                 jump @13312 if a1 <u a0
      :                          @13311
193720: e4 78 08                 a1 = maxu(a1, a0)
193723: c9 78 09                 a2 = a1 - a0
193726: 55 19 20 1e              jump @13314 if a2 >=u 32
      :                          @13312
193730: 33 08                    a1 = 0
193732: 33 07 00 00 01           a0 = 0x10000
193737: 01                       fallthrough
      :                          @13313
193738: 82 10 18 01              ra = u64 [sp + 0x118]
193742: 82 15 10 01              s0 = u64 [sp + 0x110]
193746: 82 16 08 01              s1 = u64 [sp + 0x108]
193750: 95 11 20 01              sp = sp + 0x120
193754: 32 00                    ret
      :                          @13314
193756: 7b 16 50                 u64 [sp + 0x50] = s1
193759: 49 11 58 ff ff ef        u64 [sp + 88] = 0xffffffffffefffff
193765: 7b 17 68                 u64 [sp + 0x68] = a0
193768: 7b 17 28                 u64 [sp + 0x28] = a0
193771: 98 77 01                 a0 = a0 >> 0x1
193774: 7b 17 70                 u64 [sp + 0x70] = a0
193777: 95 17 68                 a0 = sp + 0x68
193780: 7b 17 a8 00              u64 [sp + 0xa8] = a0
193784: 33 07 28 0c              a0 = 0xc28
193788: 7b 17 b0 00              u64 [sp + 0xb0] = a0
193792: 95 18 70                 a1 = sp + 0x70
193795: 7b 18 b8 00              u64 [sp + 0xb8] = a1
193799: 7b 17 c0 00              u64 [sp + 0xc0] = a0
193803: 33 07 30 2e 01           a0 = 0x12e30
193808: 7b 17 d8 00              u64 [sp + 0xd8] = a0
193812: 49 21 e0 00 02           u64 [sp + 224] = 0x2
193817: 49 21 f8 00              u64 [sp + 248] = 0
193821: 95 18 a8 00              a1 = sp + 0xa8
193825: 7b 18 e8 00              u64 [sp + 0xe8] = a1
193829: 49 21 f0 00 02           u64 [sp + 240] = 0x2
193834: 95 17 90 00              a0 = sp + 0x90
193838: 95 18 d8 00              a1 = sp + 0xd8
193842: 50 20 cc 0b 91 0e        ra = 3020, jump @13549
      :                          @13315 [@dyn 1510]
193848: 82 15 98 00              s0 = u64 [sp + 0x98]
193852: 82 1b a0 00              a4 = u64 [sp + 0xa0]
193856: 82 16 90 00              s1 = u64 [sp + 0x90]
193860: 33 07 02                 a0 = 0x2
193863: 33 08                    a1 = 0
193865: 33 09                    a2 = 0
193867: 64 5a                    a3 = s0
193869: 33 00 ce 0b              ra = 0xbce
193873: 0a 64                    ecalli 100 // 'log'
193875: 01                       fallthrough
      :                          @13316 [@dyn 1511]
193876: 82 17 58                 a0 = u64 [sp + 0x58]
193879: c8 67 07                 a0 = a0 + s1
193882: 53 37 00 00 f0 27        jump @13322 if a0 <u 4293918720
      :                          @13317
193888: 33 07 b0 02 03           a0 = 0x302b0
193893: 95 77 00 00 10           a0 = a0 + 0x100000
193898: 01                       fallthrough
      :                          @13318
193899: 82 78                    a1 = u64 [a0]
193901: c9 87 09                 a2 = a0 - a1
193904: ab 59 11                 jump @13322 if a2 != s0
      :                          @13319
193907: c9 68 09                 a2 = a1 - s1
193910: 01                       fallthrough
      :                          @13320
193911: 82 7a                    a3 = u64 [a0]
193913: ab 8a f2                 jump @13318 if a3 != a1
      :                          @13321
193916: 7b 79                    u64 [a0] = a2
193918: 33 0b                    a4 = 0
193920: 01                       fallthrough
      :                          @13322
193921: 82 17 70                 a0 = u64 [sp + 0x70]
193924: 7b 17 20                 u64 [sp + 0x20] = a0
193927: 51 07 04 02              jump @13349 if a0 == 0
      :                          @13323
193931: 49 11 30                 u64 [sp + 48] = 0
193934: 33 0a                    a3 = 0
193936: 82 17 60                 a0 = u64 [sp + 0x60]
193939: 82 1b 50                 a4 = u64 [sp + 0x50]
193942: c8 7b 0b                 a4 = a4 + a0
193945: 33 07 5c 0c              a0 = 0xc5c
193949: 7b 17 50                 u64 [sp + 0x50] = a0
193952: 33 07 28 0c              a0 = 0xc28
193956: 7b 17 48                 u64 [sp + 0x48] = a0
193959: 33 07 68 2e 01           a0 = 0x12e68
193964: 7b 17 10                 u64 [sp + 0x10] = a0
193967: 33 07 81 02 03           a0 = 0x30281
193972: 7b 17                    u64 [sp] = a0
193974: 33 07 b0 02 03           a0 = 0x302b0
193979: 95 7c 00 00 10           a5 = a0 + 0x100000
193984: 33 07 a0 2e 01           a0 = 0x12ea0
193989: 7b 17 08                 u64 [sp + 0x8] = a0
193992: 7b 1b 18                 u64 [sp + 0x18] = a4
193995: 7b 1c 40                 u64 [sp + 0x40] = a5
193998: 28 12                    jump @13325
      :                          @13324
194000: 82 1a 60                 a3 = u64 [sp + 0x60]
194003: 95 aa 01                 a3 = a3 + 0x1
194006: 82 17 20                 a0 = u64 [sp + 0x20]
194009: 82 1b 18                 a4 = u64 [sp + 0x18]
194012: aa 7a bd 01              jump @13350 if a3 == a0
      :                          @13325
194016: 97 a7 01                 a0 = a3 << 0x1
194019: 82 18 28                 a1 = u64 [sp + 0x28]
194022: ae 87 be 01              jump @13351 if a0 >=u a1
      :                          @13326
194026: c8 7b 09                 a2 = a4 + a0
194029: 7c 99                    a2 = u8 [a2]
194031: 86 77 01                 a0 = a0 | 0x1
194034: 78 19 7f                 u8 [sp + 0x7f] = a2
194037: ae 87 af 01              jump @13351 if a0 >=u a1
      :                          @13327
194041: 7b 19 38                 u64 [sp + 0x38] = a2
194044: 7b 1a 60                 u64 [sp + 0x60] = a3
194047: c8 b7 07                 a0 = a0 + a4
194050: 7c 77                    a0 = u8 [a0]
194052: ca 77 08                 a1 = a0 * a0
194055: ca 78 07                 a0 = a1 * a0
194058: 7b 17 80 00              u64 [sp + 0x80] = a0
194062: 95 17 7f                 a0 = sp + 0x7f
194065: 7b 17 a8 00              u64 [sp + 0xa8] = a0
194069: 82 17 50                 a0 = u64 [sp + 0x50]
194072: 7b 17 b0 00              u64 [sp + 0xb0] = a0
194076: 95 17 80 00              a0 = sp + 0x80
194080: 7b 17 b8 00              u64 [sp + 0xb8] = a0
194084: 82 17 48                 a0 = u64 [sp + 0x48]
194087: 7b 17 c0 00              u64 [sp + 0xc0] = a0
194091: 82 17 10                 a0 = u64 [sp + 0x10]
194094: 7b 17 d8 00              u64 [sp + 0xd8] = a0
194098: 49 21 e0 00 02           u64 [sp + 224] = 0x2
194103: 49 21 f8 00              u64 [sp + 248] = 0
194107: 95 18 a8 00              a1 = sp + 0xa8
194111: 7b 18 e8 00              u64 [sp + 0xe8] = a1
194115: 49 21 f0 00 02           u64 [sp + 240] = 0x2
194120: 95 17 90 00              a0 = sp + 0x90
194124: 95 18 d8 00              a1 = sp + 0xd8
194128: 50 20 d0 0b 73 0d        ra = 3024, jump @13549
      :                          @13328 [@dyn 1512]
194134: 82 16 98 00              s1 = u64 [sp + 0x98]
194138: 82 1b a0 00              a4 = u64 [sp + 0xa0]
194142: 82 15 90 00              s0 = u64 [sp + 0x90]
194146: 33 07 02                 a0 = 0x2
194149: 33 08                    a1 = 0
194151: 33 09                    a2 = 0
194153: 64 6a                    a3 = s1
194155: 33 00 d2 0b              ra = 0xbd2
194159: 0a 64                    ecalli 100 // 'log'
194161: 01                       fallthrough
      :                          @13329 [@dyn 1513]
194162: 82 1b 40                 a4 = u64 [sp + 0x40]
194165: 82 17 58                 a0 = u64 [sp + 0x58]
194168: c8 57 07                 a0 = a0 + s0
194171: 53 37 00 00 f0 1a        jump @13334 if a0 <u 4293918720
      :                          @13330
194177: 82 b7                    a0 = u64 [a4]
194179: c9 7b 08                 a1 = a4 - a0
194182: ab 68 0f                 jump @13334 if a1 != s1
      :                          @13331
194185: c9 57 08                 a1 = a0 - s0
194188: 01                       fallthrough
      :                          @13332
194189: 82 b9                    a2 = u64 [a4]
194191: ab 79 f2                 jump @13330 if a2 != a0
      :                          @13333
194194: 7b b8                    u64 [a4] = a1
194196: 01                       fallthrough
      :                          @13334
194197: 82 15 80 00              s0 = u64 [sp + 0x80]
194201: 49 21 88 00              u64 [sp + 136] = 0
194205: 51 05 36                 jump @13338 if s0 == 0
      :                          @13335
194208: 82 18 38                 a1 = u64 [sp + 0x38]
194211: 88 87 aa 00              a0 = a1 <u 0xaa
194215: 33 06 56                 s1 = 0x56
194218: 94 76                    s1 = 0 if a0 != 0
194220: c8 86 06                 s1 = s1 + a1
194223: 64 67                    a0 = s1
194225: 33 00 d4 0b              ra = 0xbd4
194229: 28 a9 98 fe              jump @8036
      :                          @13336
194233: 64 67                    a0 = s1
194235: 50 20 d4 0b a3 98 fe     ra = 3028, jump @8036
      :                          @13337 [@dyn 1514]
194242: 82 18 88 00              a1 = u64 [sp + 0x88]
194246: c8 87 07                 a0 = a0 + a1
194249: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
194252: 7b 17 88 00              u64 [sp + 0x88] = a0
194256: 52 05 e9                 jump @13336 if s0 != 0
      :                          @13338
194259: 82 18 60                 a1 = u64 [sp + 0x60]
194262: 55 18 20 18              jump @13340 if a1 >=u 32
      :                          @13339
194266: 7c 17 7f                 a0 = u8 [sp + 0x7f]
194269: 82 19                    a2 = u64 [sp]
194271: c8 98 08                 a1 = a1 + a2
194274: 78 87                    u8 [a1] = a0
194276: 82 17 30                 a0 = u64 [sp + 0x30]
194279: 95 77 01                 a0 = a0 + 0x1
194282: 7b 17 30                 u64 [sp + 0x30] = a0
194285: 01                       fallthrough
      :                          @13340
194286: 95 17 7f                 a0 = sp + 0x7f
194289: 7b 17 d8 00              u64 [sp + 0xd8] = a0
194293: 82 17 50                 a0 = u64 [sp + 0x50]
194296: 7b 17 e0 00              u64 [sp + 0xe0] = a0
194300: 95 17 80 00              a0 = sp + 0x80
194304: 7b 17 e8 00              u64 [sp + 0xe8] = a0
194308: 82 17 48                 a0 = u64 [sp + 0x48]
194311: 7b 17 f0 00              u64 [sp + 0xf0] = a0
194315: 95 18 88 00              a1 = sp + 0x88
194319: 7b 18 f8 00              u64 [sp + 0xf8] = a1
194323: 7b 17 00 01              u64 [sp + 0x100] = a0
194327: 82 17 08                 a0 = u64 [sp + 0x8]
194330: 7b 17 a8 00              u64 [sp + 0xa8] = a0
194334: 49 21 b0 00 03           u64 [sp + 176] = 0x3
194339: 49 21 c8 00              u64 [sp + 200] = 0
194343: 95 17 d8 00              a0 = sp + 0xd8
194347: 7b 17 b8 00              u64 [sp + 0xb8] = a0
194351: 49 21 c0 00 03           u64 [sp + 192] = 0x3
194356: 95 17 90 00              a0 = sp + 0x90
194360: 95 18 a8 00              a1 = sp + 0xa8
194364: 50 20 d6 0b 87 0c        ra = 3030, jump @13549
      :                          @13341 [@dyn 1515]
194370: 82 16 98 00              s1 = u64 [sp + 0x98]
194374: 82 1b a0 00              a4 = u64 [sp + 0xa0]
194378: 82 15 90 00              s0 = u64 [sp + 0x90]
194382: 33 07 02                 a0 = 0x2
194385: 33 08                    a1 = 0
194387: 33 09                    a2 = 0
194389: 64 6a                    a3 = s1
194391: 33 00 d8 0b              ra = 0xbd8
194395: 0a 64                    ecalli 100 // 'log'
194397: 01                       fallthrough
      :                          @13342 [@dyn 1516]
194398: 82 17 58                 a0 = u64 [sp + 0x58]
194401: c8 57 07                 a0 = a0 + s0
194404: 82 1c 40                 a5 = u64 [sp + 0x40]
194407: 53 37 00 00 f0 69 fe     jump @13324 if a0 <u 4293918720
      :                          @13343
194414: 82 c7                    a0 = u64 [a5]
194416: c9 7c 08                 a1 = a5 - a0
194419: ab 68 5d fe              jump @13324 if a1 != s1
      :                          @13344
194423: c9 57 08                 a1 = a0 - s0
194426: 01                       fallthrough
      :                          @13345
194427: 82 c9                    a2 = u64 [a5]
194429: ab 79 f1                 jump @13343 if a2 != a0
      :                          @13346
194432: 7b c8                    u64 [a5] = a1
194434: 33 0a                    a3 = 0
194436: 01                       fallthrough
      :                          @13347
194437: ab 79 e9                 jump @13343 if a2 != a0
      :                          @13348
194440: 28 48 fe                 jump @13324
      :                          @13349
194443: 49 11 30                 u64 [sp + 48] = 0
194446: 33 07 81 02 03           a0 = 0x30281
194451: 82 18 30                 a1 = u64 [sp + 0x30]
194454: 28 34 fd                 jump @13313
      :                          @13350
194457: 33 07 81 02 03           a0 = 0x30281
194462: 82 18 30                 a1 = u64 [sp + 0x30]
194465: 28 29 fd                 jump @13313
      :                          @13351
194468: 00                       trap
      :                          @13352
194469: 00                       trap
      :                          @13353 [export #1: 'accumulate']
194470: 95 11 38 ff              sp = sp + 0xffffffffffffff38
194474: 7b 10 c0 00              u64 [sp + 0xc0] = ra
194478: 7b 15 b8 00              u64 [sp + 0xb8] = s0
194482: 7b 16 b0 00              u64 [sp + 0xb0] = s1
194486: 33 05 00 00 01           s0 = 0x10000
194491: 51 08 a3 00              jump @13373 if a1 == 0
      :                          @13354
194495: 64 86                    s1 = a1
194497: 7d 78                    a1 = i8 [a0]
194499: 33 05 01                 s0 = 0x1
194502: 59 08 37                 jump @13361 if a1 >=s 0
      :                          @13355
194505: 84 89 ff 00              a2 = a1 & 0xff
194509: 33 05 02                 s0 = 0x2
194512: 53 29 c0 00 2d           jump @13361 if a2 <u 192
      :                          @13356
194517: 33 05 03                 s0 = 0x3
194520: 53 29 e0 00 25           jump @13361 if a2 <u 224
      :                          @13357
194525: 33 05 04                 s0 = 0x4
194528: 53 29 f0 00 1d           jump @13361 if a2 <u 240
      :                          @13358
194533: 33 05 05                 s0 = 0x5
194536: 53 29 f8 00 15           jump @13361 if a2 <u 248
      :                          @13359
194541: 33 05 06                 s0 = 0x6
194544: 53 29 fc 00 0d           jump @13361 if a2 <u 252
      :                          @13360
194549: 88 98 fe 00              a1 = a2 <u 0xfe
194553: 9a 85 08                 s0 = 0x8 - a1
194556: 01                       fallthrough
      :                          @13361
194557: ac 56 59                 jump @13372 if s1 <u s0
      :                          @13362
194560: 64 58                    a1 = s0
194562: 7b 17 38                 u64 [sp + 0x38] = a0
194565: 50 20 da 0b 68 2b        ra = 3034, jump @14065
      :                          @13363 [@dyn 1517]
194571: aa 56 4b                 jump @13372 if s1 == s0
      :                          @13364
194574: 82 17 38                 a0 = u64 [sp + 0x38]
194577: c8 57 07                 a0 = a0 + s0
194580: 7d 78                    a1 = i8 [a0]
194582: c9 56 06                 s1 = s1 - s0
194585: 33 05 01                 s0 = 0x1
194588: 59 08 37                 jump @13371 if a1 >=s 0
      :                          @13365
194591: 84 89 ff 00              a2 = a1 & 0xff
194595: 33 05 02                 s0 = 0x2
194598: 53 29 c0 00 2d           jump @13371 if a2 <u 192
      :                          @13366
194603: 33 05 03                 s0 = 0x3
194606: 53 29 e0 00 25           jump @13371 if a2 <u 224
      :                          @13367
194611: 33 05 04                 s0 = 0x4
194614: 53 29 f0 00 1d           jump @13371 if a2 <u 240
      :                          @13368
194619: 33 05 05                 s0 = 0x5
194622: 53 29 f8 00 15           jump @13371 if a2 <u 248
      :                          @13369
194627: 33 05 06                 s0 = 0x6
194630: 53 29 fc 00 0d           jump @13371 if a2 <u 252
      :                          @13370
194635: 88 98 fe 00              a1 = a2 <u 0xfe
194639: 9a 85 08                 s0 = 0x8 - a1
194642: 01                       fallthrough
      :                          @13371
194643: ae 56 1f                 jump @13374 if s1 >=u s0
      :                          @13372
194646: 33 08                    a1 = 0
194648: 33 05 00 00 01           s0 = 0x10000
194653: 01                       fallthrough
      :                          @13373
194654: 64 57                    a0 = s0
194656: 82 10 c0 00              ra = u64 [sp + 0xc0]
194660: 82 15 b8 00              s0 = u64 [sp + 0xb8]
194664: 82 16 b0 00              s1 = u64 [sp + 0xb0]
194668: 95 11 c8 00              sp = sp + 0xc8
194672: 32 00                    ret
      :                          @13374
194674: 64 58                    a1 = s0
194676: 7b 16 38                 u64 [sp + 0x38] = s1
194679: 64 76                    s1 = a0
194681: 50 20 dc 0b f4 2a        ra = 3036, jump @14065
      :                          @13375 [@dyn 1518]
194687: c8 65 07                 a0 = s0 + s1
194690: 82 16 38                 s1 = u64 [sp + 0x38]
194693: ab 56 0c                 jump @13377 if s1 != s0
      :                          @13376
194696: 33 08                    a1 = 0
194698: 33 00 de 0b              ra = 0xbde
194702: 28 df 2a                 jump @14065
      :                          @13377
194705: 7d 79                    a2 = i8 [a0]
194707: c9 56 06                 s1 = s1 - s0
194710: 33 08 01                 a1 = 0x1
194713: 59 09 44                 jump @13384 if a2 >=s 0
      :                          @13378
194716: 84 99 ff 00              a2 = a2 & 0xff
194720: 33 0a c0 00              a3 = 0xc0
194724: 33 08 02                 a1 = 0x2
194727: ac a9 36                 jump @13384 if a2 <u a3
      :                          @13379
194730: 33 0a e0 00              a3 = 0xe0
194734: 33 08 03                 a1 = 0x3
194737: ac a9 2c                 jump @13384 if a2 <u a3
      :                          @13380
194740: 33 0a f0 00              a3 = 0xf0
194744: 33 08 04                 a1 = 0x4
194747: ac a9 22                 jump @13384 if a2 <u a3
      :                          @13381
194750: 33 0a f8 00              a3 = 0xf8
194754: 33 08 05                 a1 = 0x5
194757: ac a9 18                 jump @13384 if a2 <u a3
      :                          @13382
194760: 33 0a fc 00              a3 = 0xfc
194764: 33 08 06                 a1 = 0x6
194767: ac a9 0e                 jump @13384 if a2 <u a3
      :                          @13383
194770: 88 98 fe 00              a1 = a2 <u 0xfe
194774: 33 09 08                 a2 = 0x8
194777: c9 89 08                 a1 = a2 - a1
194780: 01                       fallthrough
      :                          @13384
194781: 33 05 00 00 01           s0 = 0x10000
194786: ae 86 08                 jump @13386 if s1 >=u a1
      :                          @13385
194789: 33 08                    a1 = 0
194791: 28 77 ff                 jump @13373
      :                          @13386
194794: 50 20 de 0b 83 2a        ra = 3038, jump @14065
      :                          @13387 [@dyn 1519]
194800: 83 79                    i32 a2 = a0 + 0
194802: 51 09 00 01              jump @13400 if a2 == 0
      :                          @13388
194806: 33 0b                    a4 = 0
194808: 14 09 ff ff ff ff 00 00 00 00 a2 = 0xffffffff
194818: d2 97 07                 a0 = a0 & a2
194821: 7b 17 20                 u64 [sp + 0x20] = a0
194824: 33 05 81 02 03           s0 = 0x30281
194829: 33 07 94 00              a0 = 0x94
194833: 7b 17 18                 u64 [sp + 0x18] = a0
194836: 33 07 28 0c              a0 = 0xc28
194840: 7b 17 10                 u64 [sp + 0x10] = a0
194843: 33 07 d0 2e 01           a0 = 0x12ed0
194848: 7b 17 08                 u64 [sp + 0x8] = a0
194851: 33 06 b0 02 03           s1 = 0x302b0
194856: 95 66 00 00 10           s1 = s1 + 0x100000
194861: 49 01 ff ff ef           u64 [sp + 0] = 0xffffffffffefffff
194866: 7b 15 28                 u64 [sp + 0x28] = s0
194869: 28 23                    jump @13391
      :                          @13389
194871: 46 11 60                 u8 [sp + 96] = 0
194874: 95 17 60                 a0 = sp + 0x60
194877: 33 08 01                 a1 = 0x1
194880: 33 0a 08                 a3 = 0x8
194883: 82 15 28                 s0 = u64 [sp + 0x28]
194886: 64 59                    a2 = s0
194888: 0a 04                    ecalli 4 // 'write'
194890: 01                       fallthrough
      :                          @13390
194891: 82 1b 38                 a4 = u64 [sp + 0x38]
194894: 95 bb 01                 a4 = a4 + 0x1
194897: 82 17 20                 a0 = u64 [sp + 0x20]
194900: aa 7b a9 00              jump @13401 if a4 == a0
      :                          @13391
194904: 33 09 20                 a2 = 0x20
194907: 33 0a 0f                 a3 = 0xf
194910: 64 57                    a0 = s0
194912: 33 08                    a1 = 0
194914: 7b 1b 38                 u64 [sp + 0x38] = a4
194917: 33 0c                    a5 = 0
194919: 0a 01                    ecalli 1 // 'fetch'
194921: 7b 17 40                 u64 [sp + 0x40] = a0
194924: 7b 15 90 00              u64 [sp + 0x90] = s0
194928: 82 17 18                 a0 = u64 [sp + 0x18]
194931: 7b 17 98 00              u64 [sp + 0x98] = a0
194935: 95 17 40                 a0 = sp + 0x40
194938: 7b 17 a0 00              u64 [sp + 0xa0] = a0
194942: 82 17 10                 a0 = u64 [sp + 0x10]
194945: 7b 17 a8 00              u64 [sp + 0xa8] = a0
194949: 82 17 08                 a0 = u64 [sp + 0x8]
194952: 7b 17 60                 u64 [sp + 0x60] = a0
194955: 49 11 68 02              u64 [sp + 104] = 0x2
194959: 49 21 80 00              u64 [sp + 128] = 0
194963: 95 18 90 00              a1 = sp + 0x90
194967: 7b 18 70                 u64 [sp + 0x70] = a1
194970: 49 11 78 02              u64 [sp + 120] = 0x2
194974: 95 17 48                 a0 = sp + 0x48
194977: 95 18 60                 a1 = sp + 0x60
194980: 50 20 e0 0b 1f 0a        ra = 3040, jump @13549
      :                          @13392 [@dyn 1520]
194986: 82 15 50                 s0 = u64 [sp + 0x50]
194989: 82 1b 58                 a4 = u64 [sp + 0x58]
194992: 82 17 48                 a0 = u64 [sp + 0x48]
194995: 7b 17 30                 u64 [sp + 0x30] = a0
194998: 33 07 02                 a0 = 0x2
195001: 33 08                    a1 = 0
195003: 33 09                    a2 = 0
195005: 64 5a                    a3 = s0
195007: 33 00 e2 0b              ra = 0xbe2
195011: 0a 64                    ecalli 100 // 'log'
195013: 01                       fallthrough
      :                          @13393 [@dyn 1521]
195014: 82 1b 30                 a4 = u64 [sp + 0x30]
195017: 82 17                    a0 = u64 [sp]
195019: c8 b7 07                 a0 = a0 + a4
195022: 53 37 00 00 f0 69 ff     jump @13389 if a0 <u 4293918720
      :                          @13394
195029: 82 67                    a0 = u64 [s1]
195031: c9 76 08                 a1 = s1 - a0
195034: ab 58 5d ff              jump @13389 if a1 != s0
      :                          @13395
195038: c9 b7 08                 a1 = a0 - a4
195041: 01                       fallthrough
      :                          @13396
195042: 82 69                    a2 = u64 [s1]
195044: ab 79 f1                 jump @13394 if a2 != a0
      :                          @13397
195047: 7b 68                    u64 [s1] = a1
195049: 33 0a                    a3 = 0
195051: 01                       fallthrough
      :                          @13398
195052: ab 79 e9                 jump @13394 if a2 != a0
      :                          @13399
195055: 28 48 ff                 jump @13389
      :                          @13400
195058: 33 05 81 02 03           s0 = 0x30281
195063: 33 08 20                 a1 = 0x20
195066: 28 64 fe                 jump @13373
      :                          @13401
195069: 33 08 20                 a1 = 0x20
195072: 28 5e fe                 jump @13373
      :                          @13402 [export #2: 'on_transfer']
195075: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
195079: 7b 10 88 02              u64 [sp + 0x288] = ra
195083: 7b 15 80 02              u64 [sp + 0x280] = s0
195087: 7b 16 78 02              u64 [sp + 0x278] = s1
195091: 64 8c                    a5 = a1
195093: 64 79                    a2 = a0
195095: 33 02                    t0 = 0
195097: 95 7b 04                 a4 = a0 + 0x4
195100: 33 07 74                 a0 = 0x74
195103: 7b 17 28                 u64 [sp + 0x28] = a0
195106: 33 07 78                 a0 = 0x78
195109: 7b 17 58                 u64 [sp + 0x58] = a0
195112: 33 07 da 00              a0 = 0xda
195116: 7b 17 20                 u64 [sp + 0x20] = a0
195119: 33 07 38 2f 01           a0 = 0x12f38
195124: 7b 17 18                 u64 [sp + 0x18] = a0
195127: 33 07 96 0c              a0 = 0xc96
195131: 7b 17 10                 u64 [sp + 0x10] = a0
195134: 33 07 88 32 01           a0 = 0x13288
195139: 7b 17 08                 u64 [sp + 0x8] = a0
195142: 33 07 b0 02 03           a0 = 0x302b0
195147: 95 77 00 00 10           a0 = a0 + 0x100000
195152: 7b 17 50                 u64 [sp + 0x50] = a0
195155: 33 07 d8 2f 01           a0 = 0x12fd8
195160: 7b 17                    u64 [sp] = a0
195162: 95 97 08                 a0 = a2 + 0x8
195165: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
195168: 95 98 0c                 a1 = a2 + 0xc
195171: 7b 18 60                 u64 [sp + 0x60] = a1
195174: 33 08 08                 a1 = 0x8
195177: 33 06 ff ff ef           s1 = 0xffffffffffefffff
195182: 7b 16 48                 u64 [sp + 0x48] = s1
195185: 7b 17 c0 00              u64 [sp + 0xc0] = a0
195189: 7b 17 b8 00              u64 [sp + 0xb8] = a0
195193: 7b 1c 40                 u64 [sp + 0x40] = a5
195196: 7b 19 38                 u64 [sp + 0x38] = a2
195199: 7b 1b 30                 u64 [sp + 0x30] = a4
195202: 7b 1a a8 00              u64 [sp + 0xa8] = a3
195206: ac 8c c9 04              jump @13450 if a5 <u a1
      :                          @13403
195210: 51 09 de 04              jump @13451 if a2 == 0
      :                          @13404
195214: 51 0b da 04              jump @13451 if a4 == 0
      :                          @13405
195218: 7c 97                    a0 = u8 [a2]
195220: 7b 17 78                 u64 [sp + 0x78] = a0
195223: 7c 97 01                 a0 = u8 [a2 + 0x1]
195226: 7b 17 68                 u64 [sp + 0x68] = a0
195229: 7c 97 02                 a0 = u8 [a2 + 0x2]
195232: 7b 17 70                 u64 [sp + 0x70] = a0
195235: 7c 97 03                 a0 = u8 [a2 + 0x3]
195238: 7b 17 80 00              u64 [sp + 0x80] = a0
195242: 7c b7                    a0 = u8 [a4]
195244: 7b 17 98 00              u64 [sp + 0x98] = a0
195248: 7c b7 01                 a0 = u8 [a4 + 0x1]
195251: 7b 17 88 00              u64 [sp + 0x88] = a0
195255: 7c b7 02                 a0 = u8 [a4 + 0x2]
195258: 7b 17 90 00              u64 [sp + 0x90] = a0
195262: 7c b7 03                 a0 = u8 [a4 + 0x3]
195265: 7b 17 a0 00              u64 [sp + 0xa0] = a0
195269: 51 0a 53                 jump @13415 if a3 == 0
      :                          @13406
195272: 82 17 c0 00              a0 = u64 [sp + 0xc0]
195276: 7d 77                    a0 = i8 [a0]
195278: 33 05 01                 s0 = 0x1
195281: 59 07 4a                 jump @13416 if a0 >=s 0
      :                          @13407
195284: 84 77 ff 00              a0 = a0 & 0xff
195288: 33 05 02                 s0 = 0x2
195291: 33 06 c0 00              s1 = 0xc0
195295: ac 67 33                 jump @13413 if a0 <u s1
      :                          @13408
195298: 33 05 03                 s0 = 0x3
195301: 33 06 e0 00              s1 = 0xe0
195305: ac 67 29                 jump @13413 if a0 <u s1
      :                          @13409
195308: 33 05 04                 s0 = 0x4
195311: 33 06 f0 00              s1 = 0xf0
195315: ac 67 1f                 jump @13413 if a0 <u s1
      :                          @13410
195318: 33 05 05                 s0 = 0x5
195321: 33 06 f8 00              s1 = 0xf8
195325: ac 67 15                 jump @13413 if a0 <u s1
      :                          @13411
195328: 33 05 06                 s0 = 0x6
195331: 33 06 fc 00              s1 = 0xfc
195335: ac 67 0b                 jump @13413 if a0 <u s1
      :                          @13412
195338: 88 77 fe 00              a0 = a0 <u 0xfe
195342: 9a 75 08                 s0 = 0x8 - a0
195345: 01                       fallthrough
      :                          @13413
195346: ae 5a 09                 jump @13416 if a3 >=u s0
      :                          @13414
195349: 28 3a 04                 jump @13450
      :                          @13415
195352: 33 05                    s0 = 0
195354: 01                       fallthrough
      :                          @13416
195355: 82 17 c0 00              a0 = u64 [sp + 0xc0]
195359: 64 58                    a1 = s0
195361: 7b 12 b0 00              u64 [sp + 0xb0] = t0
195365: 50 20 e4 0b 48 28        ra = 3044, jump @14065
      :                          @13417 [@dyn 1522]
195371: 33 03 98 00              t1 = 0x98
195375: 33 02 04                 t0 = 0x4
195378: 33 06 08                 s1 = 0x8
195381: 82 1c a8 00              a5 = u64 [sp + 0xa8]
195385: 82 1b b0 00              a4 = u64 [sp + 0xb0]
195389: ae 7b 12 04              jump @13450 if a4 >=u a0
      :                          @13418
195393: 82 18 68                 a1 = u64 [sp + 0x68]
195396: 97 88 08                 a1 = a1 << 0x8
195399: 82 19 78                 a2 = u64 [sp + 0x78]
195402: d4 98 08                 a1 = a1 | a2
195405: 82 19 70                 a2 = u64 [sp + 0x70]
195408: 97 99 10                 a2 = a2 << 0x10
195411: 82 1a 80 00              a3 = u64 [sp + 0x80]
195415: 97 aa 18                 a3 = a3 << 0x18
195418: d4 a9 09                 a2 = a2 | a3
195421: d4 89 04                 t2 = a2 | a1
195424: 82 18 88 00              a1 = u64 [sp + 0x88]
195428: 97 88 08                 a1 = a1 << 0x8
195431: 82 19 98 00              a2 = u64 [sp + 0x98]
195435: d4 98 08                 a1 = a1 | a2
195438: 82 19 90 00              a2 = u64 [sp + 0x90]
195442: 97 99 10                 a2 = a2 << 0x10
195445: 82 1a a0 00              a3 = u64 [sp + 0xa0]
195449: 97 aa 18                 a3 = a3 << 0x18
195452: d4 a9 09                 a2 = a2 | a3
195455: d4 89 00                 ra = a2 | a1
195458: e4 5c 08                 a1 = maxu(a5, s0)
195461: c9 58 08                 a1 = a1 - s0
195464: 82 19 b8 00              a2 = u64 [sp + 0xb8]
195468: c8 59 09                 a2 = a2 + s0
195471: 82 1a 60                 a3 = u64 [sp + 0x60]
195474: c8 a5 05                 s0 = s0 + a3
195477: 64 ba                    a3 = a4
195479: 01                       fallthrough
      :                          @13419
195480: ac 68 b7 03              jump @13450 if a1 <u s1
      :                          @13420
195484: aa 25 cc 03              jump @13451 if s0 == t0
      :                          @13421
195488: 51 05 c8 03              jump @13451 if s0 == 0
      :                          @13422
195492: ac 38 ab 03              jump @13450 if a1 <u t1
      :                          @13423
195496: 51 0a 17                 jump @13426 if a3 == 0
      :                          @13424
195499: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
195503: 95 55 98 00              s0 = s0 + 0x98
195507: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
195510: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
195513: 52 07 df                 jump @13419 if a0 != 0
      :                          @13425
195516: 28 93 03                 jump @13450
      :                          @13426
195519: 7c 97 01                 a0 = u8 [a2 + 0x1]
195522: 7c 98                    a1 = u8 [a2]
195524: 7c 9a 02                 a3 = u8 [a2 + 0x2]
195527: 7d 9b 03                 a4 = i8 [a2 + 0x3]
195530: 8a 77 08                 i32 a0 = a0 << 0x8
195533: d4 87 07                 a0 = a0 | a1
195536: 8a a8 10                 i32 a1 = a3 << 0x10
195539: 8a ba 18                 i32 a3 = a4 << 0x18
195542: d4 a8 08                 a1 = a1 | a3
195545: d4 87 07                 a0 = a0 | a1
195548: 7b 17 a0 00              u64 [sp + 0xa0] = a0
195552: 7c 57 01                 a0 = u8 [s0 + 0x1]
195555: 7c 58                    a1 = u8 [s0]
195557: 7c 5a 02                 a3 = u8 [s0 + 0x2]
195560: 7d 5b 03                 a4 = i8 [s0 + 0x3]
195563: 8a 77 08                 i32 a0 = a0 << 0x8
195566: d4 87 07                 a0 = a0 | a1
195569: 8a a8 10                 i32 a1 = a3 << 0x10
195572: 8a ba 18                 i32 a3 = a4 << 0x18
195575: d4 a8 08                 a1 = a1 | a3
195578: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
195581: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
195584: d4 87 07                 a0 = a0 | a1
195587: 7b 17 98 00              u64 [sp + 0x98] = a0
195591: 7c 97 0d                 a0 = u8 [a2 + 0xd]
195594: 97 aa 10                 a3 = a3 << 0x10
195597: 97 bb 08                 a4 = a4 << 0x8
195600: d4 ba 0a                 a3 = a3 | a4
195603: 7c 98 0c                 a1 = u8 [a2 + 0xc]
195606: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
195609: d4 a7 07                 a0 = a0 | a3
195612: 97 77 10                 a0 = a0 << 0x10
195615: 97 88 08                 a1 = a1 << 0x8
195618: d4 b8 08                 a1 = a1 | a4
195621: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
195624: 7c 9b 09                 a4 = u8 [a2 + 0x9]
195627: d4 87 07                 a0 = a0 | a1
195630: 97 77 10                 a0 = a0 << 0x10
195633: 97 aa 08                 a3 = a3 << 0x8
195636: d4 ba 0a                 a3 = a3 | a4
195639: d4 a7 07                 a0 = a0 | a3
195642: 7c 98 08                 a1 = u8 [a2 + 0x8]
195645: 97 77 08                 a0 = a0 << 0x8
195648: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
195652: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
195656: d4 87 07                 a0 = a0 | a1
195659: 7b 17 90 00              u64 [sp + 0x90] = a0
195663: 7c 97 95 00              a0 = u8 [a2 + 0x95]
195667: 97 aa 10                 a3 = a3 << 0x10
195670: 97 bb 08                 a4 = a4 << 0x8
195673: d4 ba 0a                 a3 = a3 | a4
195676: d4 a7 07                 a0 = a0 | a3
195679: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
195683: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
195687: 95 98 10                 a1 = a2 + 0x10
195690: 97 77 10                 a0 = a0 << 0x10
195693: 97 aa 08                 a3 = a3 << 0x8
195696: d4 ba 0a                 a3 = a3 | a4
195699: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
195703: d4 a7 07                 a0 = a0 | a3
195706: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
195710: 97 77 10                 a0 = a0 << 0x10
195713: 97 bb 08                 a4 = a4 << 0x8
195716: 7c 99 90 00              a2 = u8 [a2 + 0x90]
195720: d4 ba 0a                 a3 = a3 | a4
195723: d4 a7 07                 a0 = a0 | a3
195726: 97 77 08                 a0 = a0 << 0x8
195729: d4 97 07                 a0 = a0 | a2
195732: 7b 17 88 00              u64 [sp + 0x88] = a0
195736: 95 17 68 01              a0 = sp + 0x168
195740: 33 09 80 00              a2 = 0x80
195744: 64 45                    s0 = t2
195746: 64 06                    s1 = ra
195748: 50 20 e6 0b 3c 0d        ra = 3046, jump @13635
      :                          @13427 [@dyn 1523]
195754: 95 17 e0 00              a0 = sp + 0xe0
195758: 95 18 68 01              a1 = sp + 0x168
195762: 33 09 80 00              a2 = 0x80
195766: 50 20 e8 0b 2a 0d        ra = 3048, jump @13635
      :                          @13428 [@dyn 1524]
195772: 7a 15 c8 00              u32 [sp + 0xc8] = s0
195776: 7a 16 cc 00              u32 [sp + 0xcc] = s1
195780: 82 17 a0 00              a0 = u64 [sp + 0xa0]
195784: 7a 17 d0 00              u32 [sp + 0xd0] = a0
195788: 82 17 98 00              a0 = u64 [sp + 0x98]
195792: 7a 17 d4 00              u32 [sp + 0xd4] = a0
195796: 82 17 90 00              a0 = u64 [sp + 0x90]
195800: 7b 17 d8 00              u64 [sp + 0xd8] = a0
195804: 82 17 88 00              a0 = u64 [sp + 0x88]
195808: 7b 17 60 01              u64 [sp + 0x160] = a0
195812: 95 17 c8 00              a0 = sp + 0xc8
195816: 7b 17 68 01              u64 [sp + 0x168] = a0
195820: 82 17 28                 a0 = u64 [sp + 0x28]
195823: 7b 17 70 01              u64 [sp + 0x170] = a0
195827: 95 18 cc 00              a1 = sp + 0xcc
195831: 7b 18 78 01              u64 [sp + 0x178] = a1
195835: 7b 17 80 01              u64 [sp + 0x180] = a0
195839: 95 18 d0 00              a1 = sp + 0xd0
195843: 7b 18 88 01              u64 [sp + 0x188] = a1
195847: 7b 17 90 01              u64 [sp + 0x190] = a0
195851: 95 18 d4 00              a1 = sp + 0xd4
195855: 7b 18 98 01              u64 [sp + 0x198] = a1
195859: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
195863: 95 17 d8 00              a0 = sp + 0xd8
195867: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
195871: 82 17 58                 a0 = u64 [sp + 0x58]
195874: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
195878: 95 18 e0 00              a1 = sp + 0xe0
195882: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
195886: 82 18 20                 a1 = u64 [sp + 0x20]
195889: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
195893: 95 18 60 01              a1 = sp + 0x160
195897: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
195901: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
195905: 82 17 18                 a0 = u64 [sp + 0x18]
195908: 7b 17 28 02              u64 [sp + 0x228] = a0
195912: 49 21 30 02 07           u64 [sp + 560] = 0x7
195917: 49 21 48 02              u64 [sp + 584] = 0
195921: 95 17 68 01              a0 = sp + 0x168
195925: 7b 17 38 02              u64 [sp + 0x238] = a0
195929: 49 21 40 02 07           u64 [sp + 576] = 0x7
195934: 95 17 58 02              a0 = sp + 0x258
195938: 95 18 28 02              a1 = sp + 0x228
195942: 50 20 ea 0b 5d 06        ra = 3050, jump @13549
      :                          @13429 [@dyn 1525]
195948: 82 15 60 02              s0 = u64 [sp + 0x260]
195952: 82 1b 68 02              a4 = u64 [sp + 0x268]
195956: 82 16 58 02              s1 = u64 [sp + 0x258]
195960: 33 07 02                 a0 = 0x2
195963: 33 08                    a1 = 0
195965: 33 09                    a2 = 0
195967: 64 5a                    a3 = s0
195969: 33 00 ec 0b              ra = 0xbec
195973: 0a 64                    ecalli 100 // 'log'
195975: 01                       fallthrough
      :                          @13430 [@dyn 1526]
195976: 82 17 48                 a0 = u64 [sp + 0x48]
195979: c8 67 07                 a0 = a0 + s1
195982: 82 1b 50                 a4 = u64 [sp + 0x50]
195985: 53 37 00 00 f0 1a        jump @13435 if a0 <u 4293918720
      :                          @13431
195991: 82 b7                    a0 = u64 [a4]
195993: c9 7b 08                 a1 = a4 - a0
195996: ab 58 0f                 jump @13435 if a1 != s0
      :                          @13432
195999: c9 67 08                 a1 = a0 - s1
196002: 01                       fallthrough
      :                          @13433
196003: 82 b9                    a2 = u64 [a4]
196005: ab 79 f2                 jump @13431 if a2 != a0
      :                          @13434
196008: 7b b8                    u64 [a4] = a1
196010: 01                       fallthrough
      :                          @13435
196011: 81 17 cc 00              a0 = i32 [sp + 0xcc]
196015: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
196019: 95 17 ec 01              a0 = sp + 0x1ec
196023: 33 08 04                 a1 = 0x4
196026: 95 19 e0 00              a2 = sp + 0xe0
196030: 33 0a 80 00              a3 = 0x80
196034: 0a 04                    ecalli 4 // 'write'
196036: 0a                       ecalli 0 // 'gas'
196037: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
196041: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
196045: 46 21 07 02 04           u8 [sp + 519] = 0x4
196050: 7b 17 08 02              u64 [sp + 0x208] = a0
196054: 95 17 07 02              a0 = sp + 0x207
196058: 33 08 01                 a1 = 0x1
196061: 95 19 08 02              a2 = sp + 0x208
196065: 33 0a 08                 a3 = 0x8
196068: 0a 04                    ecalli 4 // 'write'
196070: 49 21 68 01 02           u64 [sp + 360] = 0x2
196075: 49 21 78 01 02           u64 [sp + 376] = 0x2
196080: 49 21 88 01              u64 [sp + 392] = 0
196084: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
196094: 7b 17 90 01              u64 [sp + 0x190] = a0
196098: 46 21 98 01 03           u8 [sp + 408] = 0x3
196103: 49 21 a0 01 02           u64 [sp + 416] = 0x2
196108: 49 21 b0 01 02           u64 [sp + 432] = 0x2
196113: 49 21 c0 01 01           u64 [sp + 448] = 0x1
196118: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
196122: 95 17 07 02              a0 = sp + 0x207
196126: 7b 17 58 02              u64 [sp + 0x258] = a0
196130: 82 17 10                 a0 = u64 [sp + 0x10]
196133: 7b 17 60 02              u64 [sp + 0x260] = a0
196137: 95 17 f8 01              a0 = sp + 0x1f8
196141: 7b 17 68 02              u64 [sp + 0x268] = a0
196145: 82 17 58                 a0 = u64 [sp + 0x58]
196148: 7b 17 70 02              u64 [sp + 0x270] = a0
196152: 46 21 d0 01 03           u8 [sp + 464] = 0x3
196157: 82 17 08                 a0 = u64 [sp + 0x8]
196160: 7b 17 28 02              u64 [sp + 0x228] = a0
196164: 49 21 30 02 02           u64 [sp + 560] = 0x2
196169: 95 17 68 01              a0 = sp + 0x168
196173: 7b 17 48 02              u64 [sp + 0x248] = a0
196177: 49 21 50 02 02           u64 [sp + 592] = 0x2
196182: 95 17 58 02              a0 = sp + 0x258
196186: 7b 17 38 02              u64 [sp + 0x238] = a0
196190: 49 21 40 02 02           u64 [sp + 576] = 0x2
196195: 95 17 10 02              a0 = sp + 0x210
196199: 95 18 28 02              a1 = sp + 0x228
196203: 50 20 ee 0b 58 05        ra = 3054, jump @13549
      :                          @13436 [@dyn 1527]
196209: 82 15 18 02              s0 = u64 [sp + 0x218]
196213: 82 1b 20 02              a4 = u64 [sp + 0x220]
196217: 82 16 10 02              s1 = u64 [sp + 0x210]
196221: 33 07 02                 a0 = 0x2
196224: 33 08                    a1 = 0
196226: 33 09                    a2 = 0
196228: 64 5a                    a3 = s0
196230: 33 00 f0 0b              ra = 0xbf0
196234: 0a 64                    ecalli 100 // 'log'
196236: 01                       fallthrough
      :                          @13437 [@dyn 1528]
196237: 82 1b 50                 a4 = u64 [sp + 0x50]
196240: 82 17 48                 a0 = u64 [sp + 0x48]
196243: c8 67 07                 a0 = a0 + s1
196246: 53 37 00 00 f0 1a        jump @13442 if a0 <u 4293918720
      :                          @13438
196252: 82 b7                    a0 = u64 [a4]
196254: c9 7b 08                 a1 = a4 - a0
196257: ab 58 0f                 jump @13442 if a1 != s0
      :                          @13439
196260: c9 67 08                 a1 = a0 - s1
196263: 01                       fallthrough
      :                          @13440
196264: 82 b9                    a2 = u64 [a4]
196266: ab 79 f2                 jump @13438 if a2 != a0
      :                          @13441
196269: 7b b8                    u64 [a4] = a1
196271: 01                       fallthrough
      :                          @13442
196272: 95 17 f0 01              a0 = sp + 0x1f0
196276: 7b 17 58 02              u64 [sp + 0x258] = a0
196280: 82 17 58                 a0 = u64 [sp + 0x58]
196283: 7b 17 60 02              u64 [sp + 0x260] = a0
196287: 82 17                    a0 = u64 [sp]
196289: 7b 17 68 01              u64 [sp + 0x168] = a0
196293: 49 21 70 01 02           u64 [sp + 368] = 0x2
196298: 49 21 88 01              u64 [sp + 392] = 0
196302: 95 17 58 02              a0 = sp + 0x258
196306: 7b 17 78 01              u64 [sp + 0x178] = a0
196310: 49 21 80 01 01           u64 [sp + 384] = 0x1
196315: 95 17 28 02              a0 = sp + 0x228
196319: 95 18 68 01              a1 = sp + 0x168
196323: 50 20 f2 0b e0 04        ra = 3058, jump @13549
      :                          @13443 [@dyn 1529]
196329: 82 15 30 02              s0 = u64 [sp + 0x230]
196333: 82 1b 38 02              a4 = u64 [sp + 0x238]
196337: 82 16 28 02              s1 = u64 [sp + 0x228]
196341: 33 07 02                 a0 = 0x2
196344: 33 08                    a1 = 0
196346: 33 09                    a2 = 0
196348: 64 5a                    a3 = s0
196350: 33 00 f4 0b              ra = 0xbf4
196354: 0a 64                    ecalli 100 // 'log'
196356: 01                       fallthrough
      :                          @13444 [@dyn 1530]
196357: 82 1b 50                 a4 = u64 [sp + 0x50]
196360: 82 17 48                 a0 = u64 [sp + 0x48]
196363: c8 67 07                 a0 = a0 + s1
196366: 53 37 00 00 f0 1a        jump @13449 if a0 <u 4293918720
      :                          @13445
196372: 82 b7                    a0 = u64 [a4]
196374: c9 7b 08                 a1 = a4 - a0
196377: ab 58 0f                 jump @13449 if a1 != s0
      :                          @13446
196380: c9 67 08                 a1 = a0 - s1
196383: 01                       fallthrough
      :                          @13447
196384: 82 b9                    a2 = u64 [a4]
196386: ab 79 f2                 jump @13445 if a2 != a0
      :                          @13448
196389: 7b b8                    u64 [a4] = a1
196391: 01                       fallthrough
      :                          @13449
196392: 82 12 b0 00              t0 = u64 [sp + 0xb0]
196396: 95 22 01                 t0 = t0 + 0x1
196399: 82 17 b8 00              a0 = u64 [sp + 0xb8]
196403: 95 77 98 00              a0 = a0 + 0x98
196407: 7b 17 b8 00              u64 [sp + 0xb8] = a0
196411: 82 1c 40                 a5 = u64 [sp + 0x40]
196414: 82 19 38                 a2 = u64 [sp + 0x38]
196417: 82 1b 30                 a4 = u64 [sp + 0x30]
196420: 82 1a a8 00              a3 = u64 [sp + 0xa8]
196424: 33 08 08                 a1 = 0x8
196427: ae 8c 3f fb              jump @13403 if a5 >=u a1
      :                          @13450
196431: 33 07 00 00 01           a0 = 0x10000
196436: 33 08                    a1 = 0
196438: 82 10 88 02              ra = u64 [sp + 0x288]
196442: 82 15 80 02              s0 = u64 [sp + 0x280]
196446: 82 16 78 02              s1 = u64 [sp + 0x278]
196450: 95 11 90 02              sp = sp + 0x290
196454: 32 00                    ret
      :                          @13451
196456: 00                       trap
      :                          @13452 [@dyn 1531]
196457: 3e 02 00 00 03           u64 [0x30000] = t0
196462: 3e 04 08 00 03           u64 [0x30008] = t2
196467: 82 72                    t0 = u64 [a0]
196469: c8 72 04                 t2 = t0 + a0
196472: 7b 74                    u64 [a0] = t2
196474: 64 27                    a0 = t0
196476: 3a 02 00 00 03           t0 = u64 [0x30000]
196481: 3a 04 08 00 03           t2 = u64 [0x30008]
196486: 32 00                    ret
      :                          @13453
196488: 95 11 b8                 sp = sp + 0xffffffffffffffb8
196491: 7b 10 40                 u64 [sp + 0x40] = ra
196494: 7b 15 38                 u64 [sp + 0x38] = s0
196497: 7b 16 30                 u64 [sp + 0x30] = s1
196500: c8 89 09                 a2 = a2 + a1
196503: ac 89 53                 jump @13461 if a2 <u a1
      :                          @13454
196506: 64 75                    s0 = a0
196508: 82 77                    a0 = u64 [a0]
196510: 97 78 01                 a1 = a0 << 0x1
196513: 33 0a 08                 a3 = 0x8
196516: e4 a9 09                 a2 = maxu(a2, a3)
196519: e4 98 06                 s1 = maxu(a1, a2)
196522: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
196525: 98 88 3f                 a1 = a1 >> 0x3f
196528: 51 07 12                 jump @13456 if a0 == 0
      :                          @13455
196531: 82 59 08                 a2 = u64 [s0 + 0x8]
196534: 7b 19 18                 u64 [sp + 0x18] = a2
196537: 49 11 20 01              u64 [sp + 32] = 0x1
196541: 7b 17 28                 u64 [sp + 0x28] = a0
196544: 28 06                    jump @13457
      :                          @13456
196546: 49 11 20                 u64 [sp + 32] = 0
196549: 01                       fallthrough
      :                          @13457
196550: 64 17                    a0 = sp
196552: 95 1a 18                 a3 = sp + 0x18
196555: 64 69                    a2 = s1
196557: 50 20 f8 0b 33           ra = 3064, jump @13465
      :                          @13458 [@dyn 1532]
196562: 82 18                    a1 = u64 [sp]
196564: 82 17 08                 a0 = u64 [sp + 0x8]
196567: 51 08 14                 jump @13462 if a1 == 0
      :                          @13459
196570: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
196580: aa 87 0d                 jump @13463 if a0 == a1
      :                          @13460
196583: 52 07 18                 jump @13464 if a0 != 0
      :                          @13461
196586: 00                       trap
      :                          @13462
196587: 7b 57 08                 u64 [s0 + 0x8] = a0
196590: 7b 56                    u64 [s0] = s1
196592: 01                       fallthrough
      :                          @13463
196593: 82 10 40                 ra = u64 [sp + 0x40]
196596: 82 15 38                 s0 = u64 [sp + 0x38]
196599: 82 16 30                 s1 = u64 [sp + 0x30]
196602: 95 11 48                 sp = sp + 0x48
196605: 32 00                    ret
      :                          @13464
196607: 00                       trap
      :                          @13465
196608: 95 11 c8                 sp = sp + 0xffffffffffffffc8
196611: 7b 10 30                 u64 [sp + 0x30] = ra
196614: 7b 15 28                 u64 [sp + 0x28] = s0
196617: 7b 16 20                 u64 [sp + 0x20] = s1
196620: 64 95                    s0 = a2
196622: 64 72                    t0 = a0
196624: 51 08 7a                 jump @13475 if a1 == 0
      :                          @13466
196627: 82 a7 08                 a0 = u64 [a3 + 0x8]
196630: 51 07 7d                 jump @13476 if a0 == 0
      :                          @13467
196633: 82 a9 10                 a2 = u64 [a3 + 0x10]
196636: 51 09 ab 00              jump @13483 if a2 == 0
      :                          @13468
196640: 82 a8                    a1 = u64 [a3]
196642: 33 06 b0 02 03           s1 = 0x302b0
196647: 33 03 00 00 10           t1 = 0x100000
196652: c8 36 06                 s1 = s1 + t1
196655: 01                       fallthrough
      :                          @13469
196656: 82 6a                    a3 = u64 [s1]
196658: c8 5a 07                 a0 = a3 + s0
196661: ac a7 d0 00              jump @13489 if a0 <u a3
      :                          @13470
196665: 95 7b 01                 a4 = a0 + 0x1
196668: 88 bc 01                 a5 = a4 <u 0x1
196671: d8 b3 0b                 a4 = t1 <u a4
196674: d4 cb 0b                 a4 = a4 | a5
196677: 52 0b c0 00              jump @13489 if a4 != 0
      :                          @13471
196681: 82 6b                    a4 = u64 [s1]
196683: ab ab e5                 jump @13469 if a4 != a3
      :                          @13472
196686: 7b 67                    u64 [s1] = a0
196688: 33 0c                    a5 = 0
196690: 7b 12 18                 u64 [sp + 0x18] = t0
196693: 33 0a b0 02 03           a3 = 0x302b0
196698: 33 0b 00 00 10           a4 = 0x100000
196703: 7b 1a                    u64 [sp] = a3
196705: c8 ba 0a                 a3 = a3 + a4
196708: c9 7a 07                 a0 = a3 - a0
196711: 7b 17 10                 u64 [sp + 0x10] = a0
196714: 7b 18 08                 u64 [sp + 0x8] = a1
196717: 64 96                    s1 = a2
196719: 50 20 fa 0b 71 09        ra = 3066, jump @13635
      :                          @13473 [@dyn 1533]
196725: 54 36 00 00 10 98 00     jump @13490 if s1 <=u 1048576
      :                          @13474
196732: 82 12 18                 t0 = u64 [sp + 0x18]
196735: 82 18 10                 a1 = u64 [sp + 0x10]
196738: 33 07                    a0 = 0
196740: 7b 28 08                 u64 [t0 + 0x8] = a1
196743: 28 b5 00                 jump @13496
      :                          @13475
196746: 49 12 08                 u64 [t0 + 8] = 0
196749: 33 07 01                 a0 = 0x1
196752: 28 ac 00                 jump @13496
      :                          @13476
196755: 33 09 b0 02 03           a2 = 0x302b0
196760: 33 07 00 00 10           a0 = 0x100000
196765: c8 79 09                 a2 = a2 + a0
196768: 01                       fallthrough
      :                          @13477
196769: 82 9a                    a3 = u64 [a2]
196771: c8 5a 08                 a1 = a3 + s0
196774: ac a8 5f                 jump @13489 if a1 <u a3
      :                          @13478
196777: 95 8b 01                 a4 = a1 + 0x1
196780: 88 bc 01                 a5 = a4 <u 0x1
196783: d8 b7 0b                 a4 = a0 <u a4
196786: d4 cb 0b                 a4 = a4 | a5
196789: 52 0b 50                 jump @13489 if a4 != 0
      :                          @13479
196792: 82 9b                    a4 = u64 [a2]
196794: ab ab e7                 jump @13477 if a4 != a3
      :                          @13480
196797: 7b 98                    u64 [a2] = a1
196799: 33 0c                    a5 = 0
196801: 01                       fallthrough
      :                          @13481
196802: ab ab df                 jump @13477 if a4 != a3
      :                          @13482
196805: 28 31                    jump @13488
      :                          @13483
196807: 33 09 b0 02 03           a2 = 0x302b0
196812: 33 07 00 00 10           a0 = 0x100000
196817: c8 79 09                 a2 = a2 + a0
196820: 01                       fallthrough
      :                          @13484
196821: 82 9a                    a3 = u64 [a2]
196823: c8 5a 08                 a1 = a3 + s0
196826: ac a8 2b                 jump @13489 if a1 <u a3
      :                          @13485
196829: 95 8b 01                 a4 = a1 + 0x1
196832: 88 bc 01                 a5 = a4 <u 0x1
196835: d8 b7 0b                 a4 = a0 <u a4
196838: d4 cb 0b                 a4 = a4 | a5
196841: 52 0b 1c                 jump @13489 if a4 != 0
      :                          @13486
196844: 82 9b                    a4 = u64 [a2]
196846: ab ab e7                 jump @13484 if a4 != a3
      :                          @13487
196849: 7b 98                    u64 [a2] = a1
196851: 33 0c                    a5 = 0
196853: 01                       fallthrough
      :                          @13488
196854: 33 07 b0 02 13           a0 = 0x1302b0
196859: c9 87 08                 a1 = a0 - a1
196862: 33 07                    a0 = 0
196864: 7b 28 08                 u64 [t0 + 0x8] = a1
196867: 28 39                    jump @13496
      :                          @13489
196869: 33 07 01                 a0 = 0x1
196872: 7b 27 08                 u64 [t0 + 0x8] = a0
196875: 28 31                    jump @13496
      :                          @13490
196877: 64 6c                    a5 = s1
196879: 82 17                    a0 = u64 [sp]
196881: 95 77 00 00 10           a0 = a0 + 0x100000
196886: 82 12 18                 t0 = u64 [sp + 0x18]
196889: 82 16 08                 s1 = u64 [sp + 0x8]
196892: 01                       fallthrough
      :                          @13491
196893: 82 78                    a1 = u64 [a0]
196895: c9 87 09                 a2 = a0 - a1
196898: ab 69 11                 jump @13495 if a2 != s1
      :                          @13492
196901: c9 c8 09                 a2 = a1 - a5
196904: 01                       fallthrough
      :                          @13493
196905: 82 7a                    a3 = u64 [a0]
196907: ab 8a f2                 jump @13491 if a3 != a1
      :                          @13494
196910: 7b 79                    u64 [a0] = a2
196912: 33 0b                    a4 = 0
196914: 01                       fallthrough
      :                          @13495
196915: 82 18 10                 a1 = u64 [sp + 0x10]
196918: 33 07                    a0 = 0
196920: 7b 28 08                 u64 [t0 + 0x8] = a1
196923: 01                       fallthrough
      :                          @13496
196924: 7b 25 10                 u64 [t0 + 0x10] = s0
196927: 7b 27                    u64 [t0] = a0
196929: 82 10 30                 ra = u64 [sp + 0x30]
196932: 82 15 28                 s0 = u64 [sp + 0x28]
196935: 82 16 20                 s1 = u64 [sp + 0x20]
196938: 95 11 38                 sp = sp + 0x38
196941: 32 00                    ret
      :                          @13497
196943: 95 11 b8                 sp = sp + 0xffffffffffffffb8
196946: 7b 10 40                 u64 [sp + 0x40] = ra
196949: 7b 15 38                 u64 [sp + 0x38] = s0
196952: 7b 16 30                 u64 [sp + 0x30] = s1
196955: 95 88 01                 a1 = a1 + 0x1
196958: 51 08 54                 jump @13505 if a1 == 0
      :                          @13498
196961: 64 75                    s0 = a0
196963: 82 77                    a0 = u64 [a0]
196965: 97 79 01                 a2 = a0 << 0x1
196968: 33 0a 08                 a3 = 0x8
196971: e4 a8 08                 a1 = maxu(a1, a3)
196974: e4 89 06                 s1 = maxu(a2, a1)
196977: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
196980: 98 88 3f                 a1 = a1 >> 0x3f
196983: 51 07 12                 jump @13500 if a0 == 0
      :                          @13499
196986: 82 59 08                 a2 = u64 [s0 + 0x8]
196989: 7b 19 18                 u64 [sp + 0x18] = a2
196992: 49 11 20 01              u64 [sp + 32] = 0x1
196996: 7b 17 28                 u64 [sp + 0x28] = a0
196999: 28 06                    jump @13501
      :                          @13500
197001: 49 11 20                 u64 [sp + 32] = 0
197004: 01                       fallthrough
      :                          @13501
197005: 64 17                    a0 = sp
197007: 95 1a 18                 a3 = sp + 0x18
197010: 64 69                    a2 = s1
197012: 50 20 fc 0b 6c fe        ra = 3068, jump @13465
      :                          @13502 [@dyn 1534]
197018: 82 18                    a1 = u64 [sp]
197020: 82 17 08                 a0 = u64 [sp + 0x8]
197023: 51 08 14                 jump @13506 if a1 == 0
      :                          @13503
197026: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
197036: aa 87 0d                 jump @13507 if a0 == a1
      :                          @13504
197039: 52 07 18                 jump @13508 if a0 != 0
      :                          @13505
197042: 00                       trap
      :                          @13506
197043: 7b 57 08                 u64 [s0 + 0x8] = a0
197046: 7b 56                    u64 [s0] = s1
197048: 01                       fallthrough
      :                          @13507
197049: 82 10 40                 ra = u64 [sp + 0x40]
197052: 82 15 38                 s0 = u64 [sp + 0x38]
197055: 82 16 30                 s1 = u64 [sp + 0x30]
197058: 95 11 48                 sp = sp + 0x48
197061: 32 00                    ret
      :                          @13508
197063: 00                       trap
      :                          @13509
197064: 95 11 70 ff              sp = sp + 0xffffffffffffff70
197068: 7b 10 88 00              u64 [sp + 0x88] = ra
197072: 7b 15 80 00              u64 [sp + 0x80] = s0
197076: 7b 16 78                 u64 [sp + 0x78] = s1
197079: 64 95                    s0 = a2
197081: 7b 17                    u64 [sp] = a0
197083: 7b 18 20                 u64 [sp + 0x20] = a1
197086: 7b 19 28                 u64 [sp + 0x28] = a2
197089: 95 17 58                 a0 = sp + 0x58
197092: 95 18 20                 a1 = sp + 0x20
197095: 50 20 fe 0b ac 1e        ra = 3070, jump @14013
      :                          @13510 [@dyn 1535]
197101: 82 12 58                 t0 = u64 [sp + 0x58]
197104: 51 02 4d                 jump @13519 if t0 == 0
      :                          @13511
197107: 82 17 70                 a0 = u64 [sp + 0x70]
197110: 82 19 60                 a2 = u64 [sp + 0x60]
197113: 51 07 4c                 jump @13520 if a0 == 0
      :                          @13512
197116: 51 05 60                 jump @13521 if s0 == 0
      :                          @13513
197119: 57 05 c3 01              jump @13548 if s0 <s 0
      :                          @13514
197123: 33 07 b0 02 03           a0 = 0x302b0
197128: 33 06 00 00 10           s1 = 0x100000
197133: c8 67 07                 a0 = a0 + s1
197136: 01                       fallthrough
      :                          @13515
197137: 82 7a                    a3 = u64 [a0]
197139: c8 5a 08                 a1 = a3 + s0
197142: ac a8 ab 01              jump @13547 if a1 <u a3
      :                          @13516
197146: 95 8b 01                 a4 = a1 + 0x1
197149: 88 bc 01                 a5 = a4 <u 0x1
197152: d8 b6 0b                 a4 = s1 <u a4
197155: d4 cb 0b                 a4 = a4 | a5
197158: 52 0b 9b 01              jump @13547 if a4 != 0
      :                          @13517
197162: 82 7b                    a4 = u64 [a0]
197164: ab ab e5                 jump @13515 if a4 != a3
      :                          @13518
197167: 7b 78                    u64 [a0] = a1
197169: 33 0c                    a5 = 0
197171: 33 07 b0 02 13           a0 = 0x1302b0
197176: c9 87 07                 a0 = a0 - a1
197179: 28 25                    jump @13522
      :                          @13519
197181: 33 09                    a2 = 0
197183: 33 02 40 30 01           t0 = 0x13040
197188: 01                       fallthrough
      :                          @13520
197189: 82 18                    a1 = u64 [sp]
197191: 7b 82 08                 u64 [a1 + 0x8] = t0
197194: 7b 89 10                 u64 [a1 + 0x10] = a2
197197: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
197207: 7b 87                    u64 [a1] = a0
197209: 28 23 01                 jump @13542
      :                          @13521
197212: 33 07 01                 a0 = 0x1
197215: 01                       fallthrough
      :                          @13522
197216: 33 08                    a1 = 0
197218: 7b 15 30                 u64 [sp + 0x30] = s0
197221: 7b 17 38                 u64 [sp + 0x38] = a0
197224: 49 11 40                 u64 [sp + 64] = 0
197227: ac 95 22 01              jump @13543 if s0 <u a2
      :                          @13523
197231: 7b 18 10                 u64 [sp + 0x10] = a1
197234: 7b 17 18                 u64 [sp + 0x18] = a0
197237: c8 87 07                 a0 = a0 + a1
197240: 64 28                    a1 = t0
197242: 64 96                    s1 = a2
197244: 50 20 00 0c 64 07        ra = 3072, jump @13635
      :                          @13524 [@dyn 1536]
197250: 82 18 10                 a1 = u64 [sp + 0x10]
197253: c8 68 08                 a1 = a1 + s1
197256: c9 85 05                 s0 = s0 - a1
197259: 7b 18 40                 u64 [sp + 0x40] = a1
197262: 54 15 02 1e 01           jump @13545 if s0 <=u 2
      :                          @13525
197267: 82 17 18                 a0 = u64 [sp + 0x18]
197270: 01                       fallthrough
      :                          @13526
197271: 7b 17 18                 u64 [sp + 0x18] = a0
197274: c8 87 07                 a0 = a0 + a1
197277: 46 17 02 bd 00           u8 [a0 + 2] = 0xbd
197282: 46 17 01 bf 00           u8 [a0 + 1] = 0xbf
197287: 46 07 ef 00              u8 [a0 + 0] = 0xef
197291: 82 17 20                 a0 = u64 [sp + 0x20]
197294: 82 19 28                 a2 = u64 [sp + 0x28]
197297: 95 88 03                 a1 = a1 + 0x3
197300: 7b 18 10                 u64 [sp + 0x10] = a1
197303: 7b 18 40                 u64 [sp + 0x40] = a1
197306: 7b 17 48                 u64 [sp + 0x48] = a0
197309: 7b 19 50                 u64 [sp + 0x50] = a2
197312: 28 06                    jump @13528
      :                          @13527
197314: 7b 1a 10                 u64 [sp + 0x10] = a3
197317: 01                       fallthrough
      :                          @13528
197318: 95 17 58                 a0 = sp + 0x58
197321: 95 18 48                 a1 = sp + 0x48
197324: 50 20 02 0c c7 1d        ra = 3074, jump @14013
      :                          @13529 [@dyn 1537]
197330: 82 15 58                 s0 = u64 [sp + 0x58]
197333: 51 05 93 00              jump @13541 if s0 == 0
      :                          @13530
197337: 82 17 30                 a0 = u64 [sp + 0x30]
197340: 82 16 60                 s1 = u64 [sp + 0x60]
197343: 82 18 70                 a1 = u64 [sp + 0x70]
197346: 7b 18 08                 u64 [sp + 0x8] = a1
197349: 82 1a 10                 a3 = u64 [sp + 0x10]
197352: c9 a7 07                 a0 = a0 - a3
197355: ac 67 52                 jump @13537 if a0 <u s1
      :                          @13531
197358: 82 17 18                 a0 = u64 [sp + 0x18]
197361: 01                       fallthrough
      :                          @13532
197362: 7b 17 18                 u64 [sp + 0x18] = a0
197365: c8 a7 07                 a0 = a0 + a3
197368: 64 58                    a1 = s0
197370: 64 69                    a2 = s1
197372: 64 a5                    s0 = a3
197374: 50 20 04 0c e2 06        ra = 3076, jump @13635
      :                          @13533 [@dyn 1538]
197380: c8 65 0a                 a3 = s0 + s1
197383: 7b 1a 40                 u64 [sp + 0x40] = a3
197386: 82 17 08                 a0 = u64 [sp + 0x8]
197389: 51 07 b5                 jump @13527 if a0 == 0
      :                          @13534
197392: 82 17 30                 a0 = u64 [sp + 0x30]
197395: c9 a7 07                 a0 = a0 - a3
197398: 54 17 02 3c              jump @13539 if a0 <=u 2
      :                          @13535
197402: 82 17 18                 a0 = u64 [sp + 0x18]
197405: 01                       fallthrough
      :                          @13536
197406: 7b 17 18                 u64 [sp + 0x18] = a0
197409: c8 a7 07                 a0 = a0 + a3
197412: 46 17 02 bd 00           u8 [a0 + 2] = 0xbd
197417: 46 17 01 bf 00           u8 [a0 + 1] = 0xbf
197422: 46 07 ef 00              u8 [a0 + 0] = 0xef
197426: 95 aa 03                 a3 = a3 + 0x3
197429: 7b 1a 10                 u64 [sp + 0x10] = a3
197432: 7b 1a 40                 u64 [sp + 0x40] = a3
197435: 28 8b                    jump @13528
      :                          @13537
197437: 95 17 30                 a0 = sp + 0x30
197440: 64 a8                    a1 = a3
197442: 64 69                    a2 = s1
197444: 50 20 06 0c 44 fc        ra = 3078, jump @13453
      :                          @13538 [@dyn 1539]
197450: 82 1a 40                 a3 = u64 [sp + 0x40]
197453: 82 17 38                 a0 = u64 [sp + 0x38]
197456: 28 a2                    jump @13532
      :                          @13539
197458: 95 17 30                 a0 = sp + 0x30
197461: 33 09 03                 a2 = 0x3
197464: 64 a8                    a1 = a3
197466: 50 20 08 0c 2e fc        ra = 3080, jump @13453
      :                          @13540 [@dyn 1540]
197472: 82 1a 40                 a3 = u64 [sp + 0x40]
197475: 82 17 38                 a0 = u64 [sp + 0x38]
197478: 28 b8                    jump @13536
      :                          @13541
197480: 82 17 40                 a0 = u64 [sp + 0x40]
197483: 82 18 38                 a1 = u64 [sp + 0x38]
197486: 82 19 30                 a2 = u64 [sp + 0x30]
197489: 82 1a                    a3 = u64 [sp]
197491: 7b a7 10                 u64 [a3 + 0x10] = a0
197494: 7b a8 08                 u64 [a3 + 0x8] = a1
197497: 7b a9                    u64 [a3] = a2
197499: 01                       fallthrough
      :                          @13542
197500: 82 10 88 00              ra = u64 [sp + 0x88]
197504: 82 15 80 00              s0 = u64 [sp + 0x80]
197508: 82 16 78                 s1 = u64 [sp + 0x78]
197511: 95 11 90 00              sp = sp + 0x90
197515: 32 00                    ret
      :                          @13543
197517: 95 17 30                 a0 = sp + 0x30
197520: 33 08                    a1 = 0
197522: 64 95                    s0 = a2
197524: 64 26                    s1 = t0
197526: 50 20 0a 0c f2 fb        ra = 3082, jump @13453
      :                          @13544 [@dyn 1541]
197532: 64 62                    t0 = s1
197534: 64 59                    a2 = s0
197536: 82 18 40                 a1 = u64 [sp + 0x40]
197539: 82 17 38                 a0 = u64 [sp + 0x38]
197542: 82 15 30                 s0 = u64 [sp + 0x30]
197545: 28 c6 fe                 jump @13523
      :                          @13545
197548: 95 17 30                 a0 = sp + 0x30
197551: 33 09 03                 a2 = 0x3
197554: 50 20 0c 0c d6 fb        ra = 3084, jump @13453
      :                          @13546 [@dyn 1542]
197560: 82 18 40                 a1 = u64 [sp + 0x40]
197563: 82 17 38                 a0 = u64 [sp + 0x38]
197566: 28 d9 fe                 jump @13526
      :                          @13547
197569: 00                       trap
      :                          @13548
197570: 00                       trap
      :                          @13549
197571: 95 11 c8                 sp = sp + 0xffffffffffffffc8
197574: 7b 10 30                 u64 [sp + 0x30] = ra
197577: 7b 15 28                 u64 [sp + 0x28] = s0
197580: 7b 16 20                 u64 [sp + 0x20] = s1
197583: 64 89                    a2 = a1
197585: 82 8a 08                 a3 = u64 [a1 + 0x8]
197588: 64 75                    s0 = a0
197590: 51 0a 35                 jump @13554 if a3 == 0
      :                          @13550
197593: 82 98                    a1 = u64 [a2]
197595: 33 07                    a0 = 0
197597: 95 8b 08                 a4 = a1 + 0x8
197600: 01                       fallthrough
      :                          @13551
197601: 82 bc                    a5 = u64 [a4]
197603: c8 c7 07                 a0 = a0 + a5
197606: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
197609: 95 bb 10                 a4 = a4 + 0x10
197612: 52 0a f5                 jump @13551 if a3 != 0
      :                          @13552
197615: 82 9a 18                 a3 = u64 [a2 + 0x18]
197618: 51 0a 24                 jump @13556 if a3 == 0
      :                          @13553
197621: 82 88 08                 a1 = u64 [a1 + 0x8]
197624: 8e 88                    a1 = a1 >u 0
197626: 88 7a 10                 a3 = a0 <u 0x10
197629: 85 aa 01                 a3 = a3 ^ 0x1
197632: d4 a8 08                 a1 = a1 | a3
197635: 89 7a                    a3 = a0 <s 0
197637: e0 a8 08                 a1 = a1 & ~a3
197640: 52 08 0a                 jump @13555 if a1 != 0
      :                          @13554
197643: 33 07                    a0 = 0
197645: 33 08 01                 a1 = 0x1
197648: 28 4a                    jump @13564
      :                          @13555
197650: 97 77 01                 a0 = a0 << 0x1
197653: 01                       fallthrough
      :                          @13556
197654: 51 07 40                 jump @13563 if a0 == 0
      :                          @13557
197657: 57 07 79                 jump @13569 if a0 <s 0
      :                          @13558
197660: 64 52                    t0 = s0
197662: 33 0b b0 02 03           a4 = 0x302b0
197667: 33 08 00 00 10           a1 = 0x100000
197672: c8 8b 0b                 a4 = a4 + a1
197675: 01                       fallthrough
      :                          @13559
197676: 82 bc                    a5 = u64 [a4]
197678: c8 7c 0a                 a3 = a5 + a0
197681: ac ca 5f                 jump @13567 if a3 <u a5
      :                          @13560
197684: 95 a5 01                 s0 = a3 + 0x1
197687: 88 56 01                 s1 = s0 <u 0x1
197690: d8 58 05                 s0 = a1 <u s0
197693: d4 65 05                 s0 = s0 | s1
197696: 52 05 50                 jump @13567 if s0 != 0
      :                          @13561
197699: 82 b6                    s1 = u64 [a4]
197701: ab c6 e7                 jump @13559 if s1 != a5
      :                          @13562
197704: 7b ba                    u64 [a4] = a3
197706: 33 08 b0 02 13           a1 = 0x1302b0
197711: c9 a8 08                 a1 = a1 - a3
197714: 64 25                    s0 = t0
197716: 28 06                    jump @13564
      :                          @13563
197718: 33 08 01                 a1 = 0x1
197721: 01                       fallthrough
      :                          @13564
197722: 7b 17                    u64 [sp] = a0
197724: 7b 18 08                 u64 [sp + 0x8] = a1
197727: 49 11 10                 u64 [sp + 16] = 0
197730: 33 08 10 30 01           a1 = 0x13010
197735: 64 17                    a0 = sp
197737: 50 20 0e 0c a2 0f        ra = 3086, jump @13843
      :                          @13565 [@dyn 1543]
197743: 52 07 22                 jump @13568 if a0 != 0
      :                          @13566
197746: 82 17 10                 a0 = u64 [sp + 0x10]
197749: 82 18 08                 a1 = u64 [sp + 0x8]
197752: 82 19                    a2 = u64 [sp]
197754: 7b 57 10                 u64 [s0 + 0x10] = a0
197757: 7b 58 08                 u64 [s0 + 0x8] = a1
197760: 7b 59                    u64 [s0] = a2
197762: 82 10 30                 ra = u64 [sp + 0x30]
197765: 82 15 28                 s0 = u64 [sp + 0x28]
197768: 82 16 20                 s1 = u64 [sp + 0x20]
197771: 95 11 38                 sp = sp + 0x38
197774: 32 00                    ret
      :                          @13567
197776: 00                       trap
      :                          @13568
197777: 00                       trap
      :                          @13569
197778: 00                       trap
      :                          @13570 [@dyn 1544]
197779: 82 72                    t0 = u64 [a0]
197781: 33 09 00 00 f0           a2 = 0xfffffffffff00000
197786: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
197791: ac 9a 28                 jump @13576 if a3 <u a2
      :                          @13571
197794: 82 77 08                 a0 = u64 [a0 + 0x8]
197797: 33 09 b0 02 03           a2 = 0x302b0
197802: 95 99 00 00 10           a2 = a2 + 0x100000
197807: 01                       fallthrough
      :                          @13572
197808: 82 9a                    a3 = u64 [a2]
197810: c9 a9 0b                 a4 = a2 - a3
197813: ab 7b 12                 jump @13576 if a4 != a0
      :                          @13573
197816: c9 2a 0b                 a4 = a3 - t0
197819: 01                       fallthrough
      :                          @13574
197820: 82 9c                    a5 = u64 [a2]
197822: ab ac f2                 jump @13572 if a5 != a3
      :                          @13575
197825: 7b 9b                    u64 [a2] = a4
197827: 33 08                    a1 = 0
197829: 32 00                    ret
      :                          @13576
197831: 32 00                    ret
      :                          @13577 [@dyn 1545]
197833: 95 11 e0                 sp = sp + 0xffffffffffffffe0
197836: 7b 10 18                 u64 [sp + 0x18] = ra
197839: 7b 15 10                 u64 [sp + 0x10] = s0
197842: 7b 16 08                 u64 [sp + 0x8] = s1
197845: 64 75                    s0 = a0
197847: 82 7a 10                 a3 = u64 [a0 + 0x10]
197850: 82 77                    a0 = u64 [a0]
197852: c9 a7 07                 a0 = a0 - a3
197855: 64 96                    s1 = a2
197857: ac 97 2b                 jump @13580 if a0 <u a2
      :                          @13578
197860: 7b 1a                    u64 [sp] = a3
197862: 82 57 08                 a0 = u64 [s0 + 0x8]
197865: c8 a7 07                 a0 = a0 + a3
197868: 64 69                    a2 = s1
197870: 50 20 14 0c f2 04        ra = 3092, jump @13635
      :                          @13579 [@dyn 1546]
197876: 82 17                    a0 = u64 [sp]
197878: c8 76 06                 s1 = s1 + a0
197881: 7b 56 10                 u64 [s0 + 0x10] = s1
197884: 33 07                    a0 = 0
197886: 82 10 18                 ra = u64 [sp + 0x18]
197889: 82 15 10                 s0 = u64 [sp + 0x10]
197892: 82 16 08                 s1 = u64 [sp + 0x8]
197895: 95 11 20                 sp = sp + 0x20
197898: 32 00                    ret
      :                          @13580
197900: 64 57                    a0 = s0
197902: 7b 18                    u64 [sp] = a1
197904: 64 a8                    a1 = a3
197906: 64 69                    a2 = s1
197908: 50 20 16 0c 74 fa        ra = 3094, jump @13453
      :                          @13581 [@dyn 1547]
197914: 82 18                    a1 = u64 [sp]
197916: 82 5a 10                 a3 = u64 [s0 + 0x10]
197919: 28 c5                    jump @13578
      :                          @13582 [@dyn 1548]
197921: 95 11 d8                 sp = sp + 0xffffffffffffffd8
197924: 7b 10 20                 u64 [sp + 0x20] = ra
197927: 7b 15 18                 u64 [sp + 0x18] = s0
197930: 7b 16 10                 u64 [sp + 0x10] = s1
197933: 64 86                    s1 = a1
197935: 83 88                    i32 a1 = a1 + 0
197937: 33 09 80 00              a2 = 0x80
197941: 64 7a                    a3 = a0
197943: ae 98 2c                 jump @13587 if a1 >=u a2
      :                          @13583
197946: 82 a8 10                 a1 = u64 [a3 + 0x10]
197949: 82 a7                    a0 = u64 [a3]
197951: ab 78 13                 jump @13586 if a1 != a0
      :                          @13584
197954: 64 a7                    a0 = a3
197956: 64 a5                    s0 = a3
197958: 50 20 1a 0c 09 fc        ra = 3098, jump @13497
      :                          @13585 [@dyn 1549]
197964: 64 5a                    a3 = s0
197966: 82 58 10                 a1 = u64 [s0 + 0x10]
197969: 01                       fallthrough
      :                          @13586
197970: 82 a7 08                 a0 = u64 [a3 + 0x8]
197973: c8 87 07                 a0 = a0 + a1
197976: 78 76                    u8 [a0] = s1
197978: 95 88 01                 a1 = a1 + 0x1
197981: 7b a8 10                 u64 [a3 + 0x10] = a1
197984: 28 ad 00                 jump @13595
      :                          @13587
197987: 8b 67 0b                 i32 a0 = s1 >> 0xb
197990: 48 11 0c                 u32 [sp + 12] = 0
197993: 52 07 1c                 jump @13589 if a0 != 0
      :                          @13588
197996: 98 67 06                 a0 = s1 >> 0x6
197999: 86 77 c0 00              a0 = a0 | 0xc0
198003: 78 17 0c                 u8 [sp + 0xc] = a0
198006: 84 67 3f                 a0 = s1 & 0x3f
198009: 86 77 80 00              a0 = a0 | 0x80
198013: 78 17 0d                 u8 [sp + 0xd] = a0
198016: 33 06 02                 s1 = 0x2
198019: 28 63                    jump @13592
      :                          @13589
198021: 8b 67 10                 i32 a0 = s1 >> 0x10
198024: 52 07 29                 jump @13591 if a0 != 0
      :                          @13590
198027: 98 67 0c                 a0 = s1 >> 0xc
198030: 86 77 e0 00              a0 = a0 | 0xe0
198034: 78 17 0c                 u8 [sp + 0xc] = a0
198037: 97 67 34                 a0 = s1 << 0x34
198040: 98 77 3a                 a0 = a0 >> 0x3a
198043: 95 77 80 00              a0 = a0 + 0x80
198047: 78 17 0d                 u8 [sp + 0xd] = a0
198050: 84 67 3f                 a0 = s1 & 0x3f
198053: 86 77 80 00              a0 = a0 | 0x80
198057: 78 17 0e                 u8 [sp + 0xe] = a0
198060: 33 06 03                 s1 = 0x3
198063: 28 37                    jump @13592
      :                          @13591
198065: 97 67 2b                 a0 = s1 << 0x2b
198068: 98 77 3d                 a0 = a0 >> 0x3d
198071: 95 77 f0 00              a0 = a0 + 0xf0
198075: 78 17 0c                 u8 [sp + 0xc] = a0
198078: 97 67 2e                 a0 = s1 << 0x2e
198081: 98 77 3a                 a0 = a0 >> 0x3a
198084: 95 77 80 00              a0 = a0 + 0x80
198088: 78 17 0d                 u8 [sp + 0xd] = a0
198091: 97 67 34                 a0 = s1 << 0x34
198094: 98 77 3a                 a0 = a0 >> 0x3a
198097: 95 77 80 00              a0 = a0 + 0x80
198101: 78 17 0e                 u8 [sp + 0xe] = a0
198104: 84 67 3f                 a0 = s1 & 0x3f
198107: 86 77 80 00              a0 = a0 | 0x80
198111: 78 17 0f                 u8 [sp + 0xf] = a0
198114: 33 06 04                 s1 = 0x4
198117: 01                       fallthrough
      :                          @13592
198118: 82 a5 10                 s0 = u64 [a3 + 0x10]
198121: 82 a7                    a0 = u64 [a3]
198123: c9 57 07                 a0 = a0 - s0
198126: ac 67 2f                 jump @13596 if a0 <u s1
      :                          @13593
198129: 7b 1a                    u64 [sp] = a3
198131: 82 a7 08                 a0 = u64 [a3 + 0x8]
198134: c8 57 07                 a0 = a0 + s0
198137: 95 18 0c                 a1 = sp + 0xc
198140: 64 69                    a2 = s1
198142: 50 20 1c 0c e2 03        ra = 3100, jump @13635
      :                          @13594 [@dyn 1550]
198148: c8 56 06                 s1 = s1 + s0
198151: 82 17                    a0 = u64 [sp]
198153: 7b 76 10                 u64 [a0 + 0x10] = s1
198156: 01                       fallthrough
      :                          @13595
198157: 33 07                    a0 = 0
198159: 82 10 20                 ra = u64 [sp + 0x20]
198162: 82 15 18                 s0 = u64 [sp + 0x18]
198165: 82 16 10                 s1 = u64 [sp + 0x10]
198168: 95 11 28                 sp = sp + 0x28
198171: 32 00                    ret
      :                          @13596
198173: 64 a7                    a0 = a3
198175: 64 58                    a1 = s0
198177: 64 69                    a2 = s1
198179: 64 a5                    s0 = a3
198181: 50 20 1e 0c 63 f9        ra = 3102, jump @13453
      :                          @13597 [@dyn 1551]
198187: 64 5a                    a3 = s0
198189: 82 55 10                 s0 = u64 [s0 + 0x10]
198192: 28 c1                    jump @13593
      :                          @13598 [@dyn 1552]
198194: 64 8a                    a3 = a1
198196: 33 08 10 30 01           a1 = 0x13010
198201: 64 a9                    a2 = a3
198203: 28 d0 0d                 jump @13843
      :                          @13599
198206: 95 11 90                 sp = sp + 0xffffffffffffff90
198209: 7b 10 68                 u64 [sp + 0x68] = ra
198212: 7b 15 60                 u64 [sp + 0x60] = s0
198215: 7b 16 58                 u64 [sp + 0x58] = s1
198218: 68 bc                    a5 = clz a4
198220: 68 a6                    s1 = clz a3
198222: 95 65 40                 s0 = s1 + 0x40
198225: db bc 05                 s0 = a5 if a4 != 0
198228: 68 9c                    a5 = clz a2
198230: 68 86                    s1 = clz a1
198232: 95 66 40                 s1 = s1 + 0x40
198235: db 9c 06                 s1 = a5 if a2 != 0
198238: 64 70                    ra = a0
198240: ae 56 13                 jump @13603 if s1 >=u s0
      :                          @13600
198243: 33 07 3f                 a0 = 0x3f
198246: ae 67 2f                 jump @13604 if a0 >=u s1
      :                          @13601
198249: 51 0a b4 00              jump @13610 if a3 == 0
      :                          @13602
198253: cb a8 03                 t1 = a1 /u a3
198256: 28 ad 00                 jump @13610
      :                          @13603
198259: 33 02                    t0 = 0
198261: d8 a8 07                 a0 = a1 <u a3
198264: 85 9c                    a5 = a2 ^ 0
198266: 88 96                    s1 = a2 <u 0
198268: da c7 06                 s1 = a0 if a5 == 0
198271: 85 63 01                 t1 = s1 ^ 0x1
198274: 94 6b                    a4 = 0 if s1 != 0
198276: 94 6a                    a3 = 0 if s1 != 0
198278: d8 a8 07                 a0 = a1 <u a3
198281: c9 b9 09                 a2 = a2 - a4
198284: c9 79 09                 a2 = a2 - a0
198287: c9 a8 08                 a1 = a1 - a3
198290: 28 d0 02                 jump @13630
      :                          @13604
198293: 54 15 5f 42              jump @13607 if s0 <=u 95
      :                          @13605
198297: 97 ab 20                 a4 = a3 << 0x20
198300: 98 bb 20                 a4 = a4 >> 0x20
198303: 51 0b 96 01              jump @13617 if a4 == 0
      :                          @13606
198307: 14 07 ff ff ff ff 00 00 00 00 a0 = 0xffffffff
198317: cb b9 0c                 a5 = a2 /u a4
198320: c0 ac 0a                 i32 a3 = a5 * a3
198323: bf a9 09                 i32 a2 = a2 - a3
198326: 97 99 20                 a2 = a2 << 0x20
198329: 98 86 20                 s1 = a1 >> 0x20
198332: d4 69 09                 a2 = a2 | s1
198335: cb b9 0a                 a3 = a2 /u a4
198338: ca ba 09                 a2 = a3 * a4
198341: bf 96 06                 i32 s1 = s1 - a2
198344: d2 87 07                 a0 = a0 & a1
198347: 97 68 20                 a1 = s1 << 0x20
198350: d4 78 08                 a1 = a1 | a0
198353: cb b8 06                 s1 = a1 /u a4
198356: 28 61 01                 jump @13617
      :                          @13607
198359: c9 65 07                 a0 = s0 - s1
198362: 49 11 30                 u64 [sp + 48] = 0
198365: 55 17 20 4a              jump @13611 if a0 >=u 32
      :                          @13608
198369: 9a 64 40                 t2 = 0x40 - s1
198372: 8d 67                    i32 a0 = -s1
198374: d0 7a 02                 t0 = a3 >> a0
198377: 97 4c 20                 a5 = t2 << 0x20
198380: 98 cc 20                 a5 = a5 >> 0x20
198383: 85 c6 ff                 s1 = a5 ^ 0xffffffffffffffff
198386: 9b 67                    a0 = 0 << s1
198388: d4 72 03                 t1 = t0 | a0
198391: 9c c7                    a0 = 0 >> a5
198393: 95 c5 c0                 s0 = a5 + 0xffffffffffffffc0
198396: 89 52                    t0 = s0 <s 0
198398: db 23 07                 a0 = t1 if t0 != 0
198401: 51 07 48 01              jump @13618 if a0 == 0
      :                          @13609
198405: d0 48 03                 t1 = a1 >> t2
198408: 97 95 01                 s0 = a2 << 0x1
198411: cf 65 06                 s1 = s0 << s1
198414: d4 63 06                 s1 = t1 | s1
198417: d0 c9 0c                 a5 = a2 >> a5
198420: db 26 0c                 a5 = s1 if t0 != 0
198423: cb 7c 03                 t1 = a5 /u a0
198426: 28 2f 01                 jump @13618
      :                          @13610
198429: 33 09                    a2 = 0
198431: 33 02                    t0 = 0
198433: cd a8 08                 a1 = a1 %u a3
198436: 28 3e 02                 jump @13630
      :                          @13611
198439: 7b 10 10                 u64 [sp + 0x10] = ra
198442: 33 03                    t1 = 0
198444: 33 02                    t0 = 0
198446: 7b 15 28                 u64 [sp + 0x28] = s0
198449: 9a 54 60                 t2 = 0x60 - s0
198452: d0 4a 00                 ra = a3 >> t2
198455: 97 4c 20                 a5 = t2 << 0x20
198458: 98 cc 20                 a5 = a5 >> 0x20
198461: 85 c5 ff                 s0 = a5 ^ 0xffffffffffffffff
198464: 49 11 08                 u64 [sp + 8] = 0
198467: 9b 55                    s0 = 0 << s0
198469: d4 50 07                 a0 = ra | s0
198472: 9c c5                    s0 = 0 >> a5
198474: 95 cc c0                 a5 = a5 + 0xffffffffffffffc0
198477: 89 cc                    a5 = a5 <s 0
198479: db c7 05                 s0 = a0 if a5 != 0
198482: 97 55 20                 s0 = s0 << 0x20
198485: 98 55 20                 s0 = s0 >> 0x20
198488: 95 55 01                 s0 = s0 + 0x1
198491: 7b 15 20                 u64 [sp + 0x20] = s0
198494: 7b 14 18                 u64 [sp + 0x18] = t2
198497: 01                       fallthrough
      :                          @13612
198498: 7b 12 50                 u64 [sp + 0x50] = t0
198501: 8d 65 40                 i32 s0 = 0x40 - s1
198504: d0 58 07                 a0 = a1 >> s0
198507: 97 5c 20                 a5 = s0 << 0x20
198510: 98 cc 20                 a5 = a5 >> 0x20
198513: 85 c0 ff                 ra = a5 ^ 0xffffffffffffffff
198516: 97 96 01                 s1 = a2 << 0x1
198519: cf 06 06                 s1 = s1 << ra
198522: d4 67 02                 t0 = a0 | s1
198525: d0 c9 06                 s1 = a2 >> a5
198528: 95 c7 c0                 a0 = a5 + 0xffffffffffffffc0
198531: 89 77                    a0 = a0 <s 0
198533: db 72 06                 s1 = t0 if a0 != 0
198536: ac 45 1b 01              jump @13621 if s0 <u t2
      :                          @13613
198540: 82 17 20                 a0 = u64 [sp + 0x20]
198543: cb 76 06                 s1 = s1 /u a0
198546: bf 45 00                 i32 ra = s0 - t2
198549: 84 07 7f                 a0 = ra & 0x7f
198552: cf 76 02                 t0 = s1 << a0
198555: 98 65 01                 s0 = s1 >> 0x1
198558: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
198561: d0 c5 05                 s0 = s0 >> a5
198564: 7b 18 48                 u64 [sp + 0x48] = a1
198567: 7b 13 40                 u64 [sp + 0x40] = t1
198570: 95 73 c0                 t1 = a0 + 0xffffffffffffffc0
198573: 7b 19 38                 u64 [sp + 0x38] = a2
198576: 89 39                    a2 = t1 <s 0
198578: da 92 05                 s0 = t0 if a2 == 0
198581: ca b6 02                 t0 = s1 * a4
198584: d6 a6 04                 t2 = s1 mulhu a3
198587: c8 42 02                 t0 = t0 + t2
198590: 64 a4                    t2 = a3
198592: ca a6 08                 a1 = s1 * a3
198595: 98 8a 01                 a3 = a1 >> 0x1
198598: d0 ca 0a                 a3 = a3 >> a5
198601: cf 02 0c                 a5 = t0 << ra
198604: d4 ca 0a                 a3 = a3 | a5
198607: cf 78 07                 a0 = a1 << a0
198610: db 9a 07                 a0 = a3 if a2 != 0
198613: 82 19 50                 a2 = u64 [sp + 0x50]
198616: c8 95 05                 s0 = s0 + a2
198619: cf 06 0a                 a3 = s1 << ra
198622: cf 08 0c                 a5 = a1 << ra
198625: 99 3b 3f                 a4 = t1 >>a 0x3f
198628: 82 13 40                 t1 = u64 [sp + 0x40]
198631: 82 18 48                 a1 = u64 [sp + 0x48]
198634: d2 ba 0a                 a3 = a3 & a4
198637: d2 bc 0c                 a5 = a5 & a4
198640: d8 c8 0b                 a4 = a1 <u a5
198643: 82 19 38                 a2 = u64 [sp + 0x38]
198646: c9 b9 09                 a2 = a2 - a4
198649: c9 79 09                 a2 = a2 - a0
198652: c9 c8 08                 a1 = a1 - a5
198655: 68 97                    a0 = clz a2
198657: 68 8b                    a4 = clz a1
198659: 95 b6 40                 s1 = a4 + 0x40
198662: db 97 06                 s1 = a0 if a2 != 0
198665: c8 a3 03                 t1 = t1 + a3
198668: d8 a3 07                 a0 = t1 <u a3
198671: c8 75 02                 t0 = s0 + a0
198674: 82 17 28                 a0 = u64 [sp + 0x28]
198677: ae 76 a8 00              jump @13623 if s1 >=u a0
      :                          @13614
198681: 64 4a                    a3 = t2
198683: 82 1b 30                 a4 = u64 [sp + 0x30]
198686: 82 14 18                 t2 = u64 [sp + 0x18]
198689: 33 07 3f                 a0 = 0x3f
198692: ae 67 3e ff              jump @13612 if a0 >=u s1
      :                          @13615
198696: 82 10 10                 ra = u64 [sp + 0x10]
198699: 51 0a c0 00              jump @13626 if a3 == 0
      :                          @13616
198703: cb a8 07                 a0 = a1 /u a3
198706: 28 b9 00                 jump @13626
      :                          @13617
198709: 33 09                    a2 = 0
198711: cd b8 08                 a1 = a1 %u a4
198714: 97 a7 20                 a0 = a3 << 0x20
198717: d4 67 03                 t1 = a0 | s1
198720: 98 aa 20                 a3 = a3 >> 0x20
198723: d4 ca 02                 t0 = a3 | a5
198726: 28 1c 01                 jump @13630
      :                          @13618
198729: ca 3a 04                 t2 = a3 * t1
198732: d6 3a 07                 a0 = a3 mulhu t1
198735: 82 1b 30                 a4 = u64 [sp + 0x30]
198738: d6 3b 05                 s0 = a4 mulhu t1
198741: ca 3b 06                 s1 = a4 * t1
198744: c8 76 06                 s1 = s1 + a0
198747: d8 76 07                 a0 = s1 <u a0
198750: c8 57 07                 a0 = a0 + s0
198753: 8e 72                    t0 = a0 >u 0
198755: d3 69 0c                 a5 = a2 ^ s1
198758: d8 69 05                 s0 = a2 <u s1
198761: d8 48 07                 a0 = a1 <u t2
198764: da c7 05                 s0 = a0 if a5 == 0
198767: d4 52 0c                 a5 = t0 | s0
198770: 51 0c 23                 jump @13620 if a5 == 0
      :                          @13619
198773: 33 02                    t0 = 0
198775: c8 b9 09                 a2 = a2 + a4
198778: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
198781: c8 8a 07                 a0 = a3 + a1
198784: d8 a7 08                 a1 = a0 <u a3
198787: c8 98 08                 a1 = a1 + a2
198790: c9 68 08                 a1 = a1 - s1
198793: d8 47 09                 a2 = a0 <u t2
198796: c9 98 09                 a2 = a1 - a2
198799: c9 47 08                 a1 = a0 - t2
198802: 28 d0 00                 jump @13630
      :                          @13620
198805: 33 02                    t0 = 0
198807: c9 69 09                 a2 = a2 - s1
198810: c9 79 09                 a2 = a2 - a0
198813: c9 48 08                 a1 = a1 - t2
198816: 28 c2 00                 jump @13630
      :                          @13621
198819: d0 5a 02                 t0 = a3 >> s0
198822: 82 15 08                 s0 = u64 [sp + 0x8]
198825: cf 05 05                 s0 = s0 << ra
198828: d4 52 05                 s0 = t0 | s0
198831: d0 cb 0c                 a5 = a4 >> a5
198834: db 75 0c                 a5 = s0 if a0 != 0
198837: 51 0c 48                 jump @13627 if a5 == 0
      :                          @13622
198840: cb c6 05                 s0 = s1 /u a5
198843: 28 42                    jump @13627
      :                          @13623
198845: d8 48 07                 a0 = a1 <u t2
198848: 82 1c 30                 a5 = u64 [sp + 0x30]
198851: d3 c9 0b                 a4 = a2 ^ a5
198854: d8 c9 0a                 a3 = a2 <u a5
198857: da b7 0a                 a3 = a0 if a4 == 0
198860: 52 0a 1a                 jump @13625 if a3 != 0
      :                          @13624
198863: 95 33 01                 t1 = t1 + 0x1
198866: 88 3a 01                 a3 = t1 <u 0x1
198869: c8 a2 02                 t0 = t0 + a3
198872: c9 c9 09                 a2 = a2 - a5
198875: c9 79 09                 a2 = a2 - a0
198878: c9 48 08                 a1 = a1 - t2
198881: 82 10 10                 ra = u64 [sp + 0x10]
198884: 28 7e                    jump @13630
      :                          @13625
198886: 82 10 10                 ra = u64 [sp + 0x10]
198889: 28 79                    jump @13630
      :                          @13626
198891: 33 09                    a2 = 0
198893: cd a8 08                 a1 = a1 %u a3
198896: c8 37 07                 a0 = a0 + t1
198899: d8 37 0a                 a3 = a0 <u t1
198902: c8 a2 02                 t0 = t0 + a3
198905: 64 73                    t1 = a0
198907: 28 67                    jump @13630
      :                          @13627
198909: 82 10 10                 ra = u64 [sp + 0x10]
198912: d6 a5 06                 s1 = s0 mulhu a3
198915: ca b5 07                 a0 = s0 * a4
198918: c8 76 06                 s1 = s1 + a0
198921: ca a5 02                 t0 = s0 * a3
198924: d3 69 04                 t2 = a2 ^ s1
198927: d8 69 0c                 a5 = a2 <u s1
198930: d8 28 07                 a0 = a1 <u t0
198933: da 47 0c                 a5 = a0 if t2 == 0
198936: 51 0c 30                 jump @13629 if a5 == 0
      :                          @13628
198939: c8 35 05                 s0 = s0 + t1
198942: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
198945: d8 35 07                 a0 = s0 <u t1
198948: 82 1c 50                 a5 = u64 [sp + 0x50]
198951: c8 7c 0c                 a5 = a5 + a0
198954: c8 a8 07                 a0 = a1 + a3
198957: d8 87 08                 a1 = a0 <u a1
198960: c8 b9 09                 a2 = a2 + a4
198963: c8 98 08                 a1 = a1 + a2
198966: c9 68 08                 a1 = a1 - s1
198969: d8 27 09                 a2 = a0 <u t0
198972: c9 98 09                 a2 = a1 - a2
198975: c9 27 08                 a1 = a0 - t0
198978: 64 c2                    t0 = a5
198980: 64 53                    t1 = s0
198982: 28 1c                    jump @13630
      :                          @13629
198984: c8 35 05                 s0 = s0 + t1
198987: d8 35 0a                 a3 = s0 <u t1
198990: 82 1b 50                 a4 = u64 [sp + 0x50]
198993: c8 ab 0b                 a4 = a4 + a3
198996: c9 69 09                 a2 = a2 - s1
198999: c9 79 09                 a2 = a2 - a0
199002: c9 28 08                 a1 = a1 - t0
199005: 64 b2                    t0 = a4
199007: 64 53                    t1 = s0
199009: 01                       fallthrough
      :                          @13630
199010: 7b 08 10                 u64 [ra + 0x10] = a1
199013: 7b 03                    u64 [ra] = t1
199015: 7b 09 18                 u64 [ra + 0x18] = a2
199018: 7b 02 08                 u64 [ra + 0x8] = t0
199021: 82 10 68                 ra = u64 [sp + 0x68]
199024: 82 15 60                 s0 = u64 [sp + 0x60]
199027: 82 16 58                 s1 = u64 [sp + 0x58]
199030: 95 11 70                 sp = sp + 0x70
199033: 32 00                    ret
      :                          @13631
199035: 95 11 d0                 sp = sp + 0xffffffffffffffd0
199038: 7b 10 28                 u64 [sp + 0x28] = ra
199041: 7b 15 20                 u64 [sp + 0x20] = s0
199044: 95 15 30                 s0 = sp + 0x30
199047: 84 11 f0                 sp = sp & 0xfffffffffffffff0
199050: 33 0b                    a4 = 0
199052: 64 9a                    a3 = a2
199054: 64 89                    a2 = a1
199056: 64 78                    a1 = a0
199058: 64 17                    a0 = sp
199060: 50 20 22 0c aa fc        ra = 3106, jump @13599
      :                          @13632 [@dyn 1553]
199066: 82 18 08                 a1 = u64 [sp + 0x8]
199069: 82 17                    a0 = u64 [sp]
199071: 95 51 d0                 sp = s0 + 0xffffffffffffffd0
199074: 82 10 28                 ra = u64 [sp + 0x28]
199077: 82 15 20                 s0 = u64 [sp + 0x20]
199080: 95 11 30                 sp = sp + 0x30
199083: 32 00                    ret
      :                          @13633
199085: 95 11 d0                 sp = sp + 0xffffffffffffffd0
199088: 7b 10 28                 u64 [sp + 0x28] = ra
199091: 7b 15 20                 u64 [sp + 0x20] = s0
199094: 95 15 30                 s0 = sp + 0x30
199097: 84 11 f0                 sp = sp & 0xfffffffffffffff0
199100: 33 0b                    a4 = 0
199102: 64 9a                    a3 = a2
199104: 64 89                    a2 = a1
199106: 64 78                    a1 = a0
199108: 64 17                    a0 = sp
199110: 50 20 24 0c 78 fc        ra = 3108, jump @13599
      :                          @13634 [@dyn 1554]
199116: 82 18 18                 a1 = u64 [sp + 0x18]
199119: 82 17 10                 a0 = u64 [sp + 0x10]
199122: 95 51 d0                 sp = s0 + 0xffffffffffffffd0
199125: 82 10 28                 ra = u64 [sp + 0x28]
199128: 82 15 20                 s0 = u64 [sp + 0x20]
199131: 95 11 30                 sp = sp + 0x30
199134: 32 00                    ret
      :                          @13635
199136: 95 11 e0                 sp = sp + 0xffffffffffffffe0
199139: 7b 10 18                 u64 [sp + 0x18] = ra
199142: 7b 15 10                 u64 [sp + 0x10] = s0
199145: 7b 16 08                 u64 [sp + 0x8] = s1
199148: 53 19 10 64              jump @13644 if a2 <u 16
      :                          @13636
199152: 8d 7a                    i32 a3 = -a0
199154: 84 a2 07                 t0 = a3 & 0x7
199157: c8 27 0b                 a4 = a0 + t0
199160: 51 02 15                 jump @13639 if t0 == 0
      :                          @13637
199163: 64 8c                    a5 = a1
199165: 64 75                    s0 = a0
199167: 01                       fallthrough
      :                          @13638
199168: 7c ca                    a3 = u8 [a5]
199170: 78 5a                    u8 [s0] = a3
199172: 95 55 01                 s0 = s0 + 0x1
199175: 95 cc 01                 a5 = a5 + 0x1
199178: ac b5 f6                 jump @13638 if s0 <u a4
      :                          @13639
199181: c8 28 03                 t1 = a1 + t0
199184: c9 29 02                 t0 = a2 - t0
199187: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
199190: 84 38 07                 a1 = t1 & 0x7
199193: c8 4b 0a                 a3 = a4 + t2
199196: 51 08 3b                 jump @13646 if a1 == 0
      :                          @13640
199199: 58 04 4b                 jump @13649 if t2 <=s 0
      :                          @13641
199202: 97 38 03                 a1 = t1 << 0x3
199205: 84 80 38                 ra = a1 & 0x38
199208: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
199211: 82 c5                    s0 = u64 [a5]
199213: 8d 88                    i32 a1 = -a1
199215: 84 88 38                 a1 = a1 & 0x38
199218: 95 cc 08                 a5 = a5 + 0x8
199221: 01                       fallthrough
      :                          @13642
199222: 82 c6                    s1 = u64 [a5]
199224: d0 05 05                 s0 = s0 >> ra
199227: cf 86 09                 a2 = s1 << a1
199230: d4 59 09                 a2 = a2 | s0
199233: 7b b9                    u64 [a4] = a2
199235: 95 bb 08                 a4 = a4 + 0x8
199238: 95 cc 08                 a5 = a5 + 0x8
199241: 64 65                    s0 = s1
199243: ac ab eb                 jump @13642 if a4 <u a3
      :                          @13643
199246: 28 1c                    jump @13649
      :                          @13644
199248: 64 7a                    a3 = a0
199250: 52 09 21                 jump @13650 if a2 != 0
      :                          @13645
199253: 28 2f                    jump @13652
      :                          @13646
199255: 58 04 13                 jump @13649 if t2 <=s 0
      :                          @13647
199258: 64 38                    a1 = t1
199260: 01                       fallthrough
      :                          @13648
199261: 82 89                    a2 = u64 [a1]
199263: 7b b9                    u64 [a4] = a2
199265: 95 bb 08                 a4 = a4 + 0x8
199268: 95 88 08                 a1 = a1 + 0x8
199271: ac ab f6                 jump @13648 if a4 <u a3
      :                          @13649
199274: c8 43 08                 a1 = t1 + t2
199277: 84 29 07                 a2 = t0 & 0x7
199280: 51 09 14                 jump @13652 if a2 == 0
      :                          @13650
199283: c8 a9 09                 a2 = a2 + a3
199286: 01                       fallthrough
      :                          @13651
199287: 7c 8b                    a4 = u8 [a1]
199289: 78 ab                    u8 [a3] = a4
199291: 95 aa 01                 a3 = a3 + 0x1
199294: 95 88 01                 a1 = a1 + 0x1
199297: ac 9a f6                 jump @13651 if a3 <u a2
      :                          @13652
199300: 82 10 18                 ra = u64 [sp + 0x18]
199303: 82 15 10                 s0 = u64 [sp + 0x10]
199306: 82 16 08                 s1 = u64 [sp + 0x8]
199309: 95 11 20                 sp = sp + 0x20
199312: 32 00                    ret
      :                          @13653
199314: 95 11 e0                 sp = sp + 0xffffffffffffffe0
199317: 7b 10 18                 u64 [sp + 0x18] = ra
199320: 7b 15 10                 u64 [sp + 0x10] = s0
199323: 7b 16 08                 u64 [sp + 0x8] = s1
199326: c9 87 0a                 a3 = a0 - a1
199329: ae 9a 7d                 jump @13663 if a3 >=u a2
      :                          @13654
199332: c8 97 0a                 a3 = a0 + a2
199335: c8 98 02                 t0 = a1 + a2
199338: 53 19 10 da 00           jump @13672 if a2 <u 16
      :                          @13655
199343: 84 a4 07                 t2 = a3 & 0x7
199346: 9a 43                    t1 = -t2
199348: 84 ab f8                 a4 = a3 & 0xfffffffffffffff8
199351: 51 04 1a                 jump @13658 if t2 == 0
      :                          @13656
199354: c8 98 05                 s0 = a1 + a2
199357: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
199360: 01                       fallthrough
      :                          @13657
199361: 7c 5c                    a5 = u8 [s0]
199363: 95 a6 ff                 s1 = a3 + 0xffffffffffffffff
199366: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
199369: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
199372: 64 6a                    a3 = s1
199374: ac 6b f3                 jump @13657 if a4 <u s1
      :                          @13658
199377: c8 32 02                 t0 = t0 + t1
199380: c9 49 03                 t1 = a2 - t2
199383: 84 34 f8                 t2 = t1 & 0xfffffffffffffff8
199386: 7b 12                    u64 [sp] = t0
199388: 84 29 07                 a2 = t0 & 0x7
199391: c9 4b 0a                 a3 = a4 - t2
199394: 51 09 b0 00              jump @13675 if a2 == 0
      :                          @13659
199398: 58 04 c6 00              jump @13678 if t2 <=s 0
      :                          @13660
199402: 82 16                    s1 = u64 [sp]
199404: 97 69 03                 a2 = s1 << 0x3
199407: 84 90 38                 ra = a2 & 0x38
199410: 84 66 f8                 s1 = s1 & 0xfffffffffffffff8
199413: 82 65                    s0 = u64 [s1]
199415: 8d 99                    i32 a2 = -a2
199417: 84 9c 38                 a5 = a2 & 0x38
199420: 95 69 f8                 a2 = s1 + 0xfffffffffffffff8
199423: 01                       fallthrough
      :                          @13661
199424: 82 96                    s1 = u64 [a2]
199426: cf c5 05                 s0 = s0 << a5
199429: d0 06 08                 a1 = s1 >> ra
199432: d4 58 08                 a1 = a1 | s0
199435: 95 b2 f8                 t0 = a4 + 0xfffffffffffffff8
199438: 7b b8 f8                 u64 [a4 + 0xfffffffffffffff8] = a1
199441: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
199444: 64 65                    s0 = s1
199446: 64 2b                    a4 = t0
199448: ac 2a e8                 jump @13661 if a3 <u t0
      :                          @13662
199451: 28 91 00                 jump @13678
      :                          @13663
199454: 53 19 10 6d              jump @13673 if a2 <u 16
      :                          @13664
199458: 8d 7a                    i32 a3 = -a0
199460: 84 aa 07                 a3 = a3 & 0x7
199463: c8 a7 0b                 a4 = a0 + a3
199466: 51 0a 15                 jump @13667 if a3 == 0
      :                          @13665
199469: 64 8c                    a5 = a1
199471: 64 75                    s0 = a0
199473: 01                       fallthrough
      :                          @13666
199474: 7c c6                    s1 = u8 [a5]
199476: 78 56                    u8 [s0] = s1
199478: 95 55 01                 s0 = s0 + 0x1
199481: 95 cc 01                 a5 = a5 + 0x1
199484: ac b5 f6                 jump @13666 if s0 <u a4
      :                          @13667
199487: c8 a8 03                 t1 = a1 + a3
199490: c9 a9 02                 t0 = a2 - a3
199493: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
199496: 84 38 07                 a1 = t1 & 0x7
199499: c8 4b 0a                 a3 = a4 + t2
199502: 51 08 84 00              jump @13682 if a1 == 0
      :                          @13668
199506: 58 04 93 00              jump @13685 if t2 <=s 0
      :                          @13669
199510: 97 38 03                 a1 = t1 << 0x3
199513: 84 80 38                 ra = a1 & 0x38
199516: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
199519: 82 c5                    s0 = u64 [a5]
199521: 8d 88                    i32 a1 = -a1
199523: 84 88 38                 a1 = a1 & 0x38
199526: 95 cc 08                 a5 = a5 + 0x8
199529: 01                       fallthrough
      :                          @13670
199530: 82 c6                    s1 = u64 [a5]
199532: d0 05 05                 s0 = s0 >> ra
199535: cf 86 09                 a2 = s1 << a1
199538: d4 59 09                 a2 = a2 | s0
199541: 7b b9                    u64 [a4] = a2
199543: 95 bb 08                 a4 = a4 + 0x8
199546: 95 cc 08                 a5 = a5 + 0x8
199549: 64 65                    s0 = s1
199551: ac ab eb                 jump @13670 if a4 <u a3
      :                          @13671
199554: 28 63                    jump @13685
      :                          @13672
199556: 64 78                    a1 = a0
199558: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
199561: 28 37                    jump @13680
      :                          @13673
199563: 64 7a                    a3 = a0
199565: 52 09 61                 jump @13686 if a2 != 0
      :                          @13674
199568: 28 6f                    jump @13688
      :                          @13675
199570: 58 04 1a                 jump @13678 if t2 <=s 0
      :                          @13676
199573: c8 38 08                 a1 = a1 + t1
199576: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
199579: 01                       fallthrough
      :                          @13677
199580: 82 89                    a2 = u64 [a1]
199582: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
199585: 7b b9 f8                 u64 [a4 + 0xfffffffffffffff8] = a2
199588: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
199591: 64 cb                    a4 = a5
199593: ac ca f3                 jump @13677 if a3 <u a5
      :                          @13678
199596: 84 38 07                 a1 = t1 & 0x7
199599: 51 08 50                 jump @13688 if a1 == 0
      :                          @13679
199602: 9a 49                    a2 = -t2
199604: 82 12                    t0 = u64 [sp]
199606: c8 92 02                 t0 = t0 + a2
199609: c9 8a 08                 a1 = a3 - a1
199612: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
199615: 01                       fallthrough
      :                          @13680
199616: 7c 29                    a2 = u8 [t0]
199618: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
199621: 78 a9 ff                 u8 [a3 + 0xffffffffffffffff] = a2
199624: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
199627: 64 ba                    a3 = a4
199629: ac b8 f3                 jump @13680 if a1 <u a4
      :                          @13681
199632: 28 2f                    jump @13688
      :                          @13682
199634: 58 04 13                 jump @13685 if t2 <=s 0
      :                          @13683
199637: 64 38                    a1 = t1
199639: 01                       fallthrough
      :                          @13684
199640: 82 89                    a2 = u64 [a1]
199642: 7b b9                    u64 [a4] = a2
199644: 95 bb 08                 a4 = a4 + 0x8
199647: 95 88 08                 a1 = a1 + 0x8
199650: ac ab f6                 jump @13684 if a4 <u a3
      :                          @13685
199653: c8 43 08                 a1 = t1 + t2
199656: 84 29 07                 a2 = t0 & 0x7
199659: 51 09 14                 jump @13688 if a2 == 0
      :                          @13686
199662: c8 a9 09                 a2 = a2 + a3
199665: 01                       fallthrough
      :                          @13687
199666: 7c 8b                    a4 = u8 [a1]
199668: 78 ab                    u8 [a3] = a4
199670: 95 aa 01                 a3 = a3 + 0x1
199673: 95 88 01                 a1 = a1 + 0x1
199676: ac 9a f6                 jump @13687 if a3 <u a2
      :                          @13688
199679: 82 10 18                 ra = u64 [sp + 0x18]
199682: 82 15 10                 s0 = u64 [sp + 0x10]
199685: 82 16 08                 s1 = u64 [sp + 0x8]
199688: 95 11 20                 sp = sp + 0x20
199691: 32 00                    ret
      :                          @13689
199693: 53 19 10 48              jump @13698 if a2 <u 16
      :                          @13690
199697: 8d 7a                    i32 a3 = -a0
199699: 84 aa 07                 a3 = a3 & 0x7
199702: c8 a7 0b                 a4 = a0 + a3
199705: 51 0a 0e                 jump @13693 if a3 == 0
      :                          @13691
199708: 64 7c                    a5 = a0
199710: 01                       fallthrough
      :                          @13692
199711: 78 c8                    u8 [a5] = a1
199713: 95 cc 01                 a5 = a5 + 0x1
199716: ac bc fb                 jump @13692 if a5 <u a4
      :                          @13693
199719: c9 a9 03                 t1 = a2 - a3
199722: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
199725: c8 cb 0a                 a3 = a4 + a5
199728: 58 0c 1d                 jump @13696 if a5 <=s 0
      :                          @13694
199731: 84 82 ff 00              t0 = a1 & 0xff
199735: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
199745: ca 92 0c                 a5 = t0 * a2
199748: 01                       fallthrough
      :                          @13695
199749: 7b bc                    u64 [a4] = a5
199751: 95 bb 08                 a4 = a4 + 0x8
199754: ac ab fb                 jump @13695 if a4 <u a3
      :                          @13696
199757: 84 39 07                 a2 = t1 & 0x7
199760: 52 09 0a                 jump @13699 if a2 != 0
      :                          @13697
199763: 28 13                    jump @13701
      :                          @13698
199765: 64 7a                    a3 = a0
199767: 51 09 0f                 jump @13701 if a2 == 0
      :                          @13699
199770: c8 a9 09                 a2 = a2 + a3
199773: 01                       fallthrough
      :                          @13700
199774: 78 a8                    u8 [a3] = a1
199776: 95 aa 01                 a3 = a3 + 0x1
199779: ac 9a fb                 jump @13700 if a3 <u a2
      :                          @13701
199782: 32 00                    ret
      :                          @13702 [@dyn 1555]
199784: 82 77                    a0 = u64 [a0]
199786: 01                       fallthrough
      :                          @13703
199787: 28                       jump @13703
      :                          @13704
199788: 00                       trap
      :                          @13705 [@dyn 1556]
199789: 82 77                    a0 = u64 [a0]
199791: 64 89                    a2 = a1
199793: 33 08 01                 a1 = 0x1
199796: 01                       fallthrough
      :                          @13706
199797: 95 11 a0                 sp = sp + 0xffffffffffffffa0
199800: 7b 10 58                 u64 [sp + 0x58] = ra
199803: 7b 15 50                 u64 [sp + 0x50] = s0
199806: 7b 16 48                 u64 [sp + 0x48] = s1
199809: 7b 19 08                 u64 [sp + 0x8] = a2
199812: 7b 18                    u64 [sp] = a1
199814: 98 7a 04                 a3 = a0 >> 0x4
199817: 33 09 27                 a2 = 0x27
199820: 53 2a 71 02 81 00        jump @13709 if a3 <u 625
      :                          @13707
199826: 33 09 27                 a2 = 0x27
199829: 95 1b 46                 a4 = sp + 0x46
199832: 3a 08 f0 01 03           a1 = u64 [0x301f0]
199837: 7b 18 18                 u64 [sp + 0x18] = a1
199840: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
199846: 33 03 7b 14              t1 = 0x147b
199850: 33 05 9e 30 01           s0 = 0x1309e
199855: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
199861: 01                       fallthrough
      :                          @13708
199862: 64 74                    t2 = a0
199864: 82 17 18                 a0 = u64 [sp + 0x18]
199867: d6 74 07                 a0 = t2 mulhu a0
199870: 98 77 0b                 a0 = a0 >> 0xb
199873: 82 18 10                 a1 = u64 [sp + 0x10]
199876: c0 87 02                 i32 t0 = a0 * a1
199879: c8 42 0a                 a3 = t0 + t2
199882: 97 a2 30                 t0 = a3 << 0x30
199885: 98 28 32                 a1 = t0 >> 0x32
199888: ca 38 08                 a1 = a1 * t1
199891: 98 8c 11                 a5 = a1 >> 0x11
199894: 98 88 10                 a1 = a1 >> 0x10
199897: 84 88 fe 07              a1 = a1 & 0x7fe
199901: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
199904: c8 ca 0a                 a3 = a3 + a5
199907: 97 aa 31                 a3 = a3 << 0x31
199910: 98 aa 30                 a3 = a3 >> 0x30
199913: c8 58 08                 a1 = a1 + s0
199916: 7c 8c                    a5 = u8 [a1]
199918: 7c 88 01                 a1 = u8 [a1 + 0x1]
199921: c8 5a 0a                 a3 = a3 + s0
199924: 7c a6 01                 s1 = u8 [a3 + 0x1]
199927: 7c aa                    a3 = u8 [a3]
199929: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
199932: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
199935: 78 b6 01                 u8 [a4 + 0x1] = s1
199938: 78 ba                    u8 [a4] = a3
199940: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
199943: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
199946: ac 40 ac                 jump @13708 if ra <u t2
      :                          @13709
199949: 54 17 63 3b              jump @13711 if a0 <=u 99
      :                          @13710
199953: 97 78 30                 a1 = a0 << 0x30
199956: 98 88 32                 a1 = a1 >> 0x32
199959: 96 88 7b 14              a1 = a1 * 0x147b
199963: 98 88 11                 a1 = a1 >> 0x11
199966: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
199969: c8 a7 07                 a0 = a0 + a3
199972: 97 77 31                 a0 = a0 << 0x31
199975: 98 77 30                 a0 = a0 >> 0x30
199978: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
199981: 33 0a 9e 30 01           a3 = 0x1309e
199986: c8 a7 07                 a0 = a0 + a3
199989: 7c 7a 01                 a3 = u8 [a0 + 0x1]
199992: 7c 77                    a0 = u8 [a0]
199994: 95 1b 21                 a4 = sp + 0x21
199997: c8 9b 0b                 a4 = a4 + a2
200000: 78 ba 01                 u8 [a4 + 0x1] = a3
200003: 78 b7                    u8 [a4] = a0
200005: 64 87                    a0 = a1
200007: 01                       fallthrough
      :                          @13711
200008: 55 17 0a 14              jump @13713 if a0 >=u 10
      :                          @13712
200012: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
200015: 95 18 21                 a1 = sp + 0x21
200018: c8 98 08                 a1 = a1 + a2
200021: 83 77 30                 i32 a0 = a0 + 0x30
200024: 78 87                    u8 [a1] = a0
200026: 28 21                    jump @13714
      :                          @13713
200028: 97 77 01                 a0 = a0 << 0x1
200031: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
200034: 33 08 9e 30 01           a1 = 0x1309e
200039: c8 87 07                 a0 = a0 + a1
200042: 7c 78 01                 a1 = u8 [a0 + 0x1]
200045: 7c 77                    a0 = u8 [a0]
200047: 95 1a 21                 a3 = sp + 0x21
200050: c8 9a 0a                 a3 = a3 + a2
200053: 78 a8 01                 u8 [a3 + 0x1] = a1
200056: 78 a7                    u8 [a3] = a0
200058: 01                       fallthrough
      :                          @13714
200059: 95 1b 21                 a4 = sp + 0x21
200062: c8 9b 0b                 a4 = a4 + a2
200065: 9a 9c 27                 a5 = 0x27 - a2
200068: 33 09 40 30 01           a2 = 0x13040
200073: 82 17 08                 a0 = u64 [sp + 0x8]
200076: 82 18                    a1 = u64 [sp]
200078: 33 0a                    a3 = 0
200080: 50 20 2a 0c 13           ra = 3114, jump @13716
      :                          @13715 [@dyn 1557]
200085: 82 10 58                 ra = u64 [sp + 0x58]
200088: 82 15 50                 s0 = u64 [sp + 0x50]
200091: 82 16 48                 s1 = u64 [sp + 0x48]
200094: 95 11 60                 sp = sp + 0x60
200097: 32 00                    ret
      :                          @13716
200099: 95 11 98                 sp = sp + 0xffffffffffffff98
200102: 7b 10 60                 u64 [sp + 0x60] = ra
200105: 7b 15 58                 u64 [sp + 0x58] = s0
200108: 7b 16 50                 u64 [sp + 0x50] = s1
200111: 7b 1b 18                 u64 [sp + 0x18] = a4
200114: 51 08 4f                 jump @13723 if a1 == 0
      :                          @13717
200117: 80 76 34                 s1 = u32 [a0 + 0x34]
200120: 84 68 01                 a1 = s1 & 0x1
200123: 33 0b 2b                 a4 = 0x2b
200126: 33 05 00 00 11           s0 = 0x110000
200131: db 8b 05                 s0 = a4 if a1 != 0
200134: 7b 15 28                 u64 [sp + 0x28] = s0
200137: c8 c8 02                 t0 = a1 + a5
200140: 84 68 04                 a1 = s1 & 0x4
200143: 51 08 42                 jump @13724 if a1 == 0
      :                          @13718
200146: 7b 19 30                 u64 [sp + 0x30] = a2
200149: 33 08                    a1 = 0
200151: 51 0a 1a                 jump @13721 if a3 == 0
      :                          @13719
200154: 64 a5                    s0 = a3
200156: 01                       fallthrough
      :                          @13720
200157: 7d 9b                    a4 = i8 [a2]
200159: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
200162: 85 bb 01                 a4 = a4 ^ 0x1
200165: c8 b8 08                 a1 = a1 + a4
200168: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
200171: 95 99 01                 a2 = a2 + 0x1
200174: 52 05 ef                 jump @13720 if s0 != 0
      :                          @13721
200177: c8 82 02                 t0 = t0 + a1
200180: 7b 1a 38                 u64 [sp + 0x38] = a3
200183: 82 78                    a1 = u64 [a0]
200185: 7b 1c 20                 u64 [sp + 0x20] = a5
200188: 52 08 23                 jump @13725 if a1 != 0
      :                          @13722
200191: 28 41                    jump @13730
      :                          @13723
200193: 81 76 34                 s1 = i32 [a0 + 0x34]
200196: 95 c2 01                 t0 = a5 + 0x1
200199: 49 11 28 2d              u64 [sp + 40] = 0x2d
200203: 84 68 04                 a1 = s1 & 0x4
200206: 52 08 c4                 jump @13718 if a1 != 0
      :                          @13724
200209: 49 11 30                 u64 [sp + 48] = 0
200212: 7b 1a 38                 u64 [sp + 0x38] = a3
200215: 82 78                    a1 = u64 [a0]
200217: 7b 1c 20                 u64 [sp + 0x20] = a5
200220: 51 08 24                 jump @13730 if a1 == 0
      :                          @13725
200223: 82 75 08                 s0 = u64 [a0 + 0x8]
200226: ae 52 1e                 jump @13730 if t0 >=u s0
      :                          @13726
200229: 84 66 08                 s1 = s1 & 0x8
200232: 52 06 51                 jump @13733 if s1 != 0
      :                          @13727
200235: 7c 79 38                 a2 = u8 [a0 + 0x38]
200238: c9 25 0a                 a3 = s0 - t0
200241: 5a 19 01 a4 00           jump @13740 if a2 >s 1
      :                          @13728
200246: 52 09 b1 00              jump @13742 if a2 != 0
      :                          @13729
200250: 7b 1a 10                 u64 [sp + 0x10] = a3
200253: 28 b0 00                 jump @13743
      :                          @13730
200256: 82 75 20                 s0 = u64 [a0 + 0x20]
200259: 82 76 28                 s1 = u64 [a0 + 0x28]
200262: 64 57                    a0 = s0
200264: 64 68                    a1 = s1
200266: 82 19 28                 a2 = u64 [sp + 0x28]
200269: 82 1a 30                 a3 = u64 [sp + 0x30]
200272: 82 1b 38                 a4 = u64 [sp + 0x38]
200275: 50 20 2c 0c 76 01        ra = 3116, jump @13763
      :                          @13731 [@dyn 1558]
200281: 33 08 01                 a1 = 0x1
200284: 52 07 bf 00              jump @13748 if a0 != 0
      :                          @13732
200288: 82 6c 18                 a5 = u64 [s1 + 0x18]
200291: 64 57                    a0 = s0
200293: 82 18 18                 a1 = u64 [sp + 0x18]
200296: 82 19 20                 a2 = u64 [sp + 0x20]
200299: 82 10 60                 ra = u64 [sp + 0x60]
200302: 82 15 58                 s0 = u64 [sp + 0x58]
200305: 82 16 50                 s1 = u64 [sp + 0x50]
200308: 95 11 68                 sp = sp + 0x68
200311: 32 0c                    jump [a5]
      :                          @13733
200313: 7b 12 40                 u64 [sp + 0x40] = t0
200316: 81 78 30                 a1 = i32 [a0 + 0x30]
200319: 7b 18 08                 u64 [sp + 0x8] = a1
200322: 7c 79 38                 a2 = u8 [a0 + 0x38]
200325: 7b 19                    u64 [sp] = a2
200327: 82 79 20                 a2 = u64 [a0 + 0x20]
200330: 82 76 28                 s1 = u64 [a0 + 0x28]
200333: 48 17 30 30              u32 [a0 + 48] = 0x30
200337: 7b 17 10                 u64 [sp + 0x10] = a0
200340: 46 17 38 01              u8 [a0 + 56] = 0x1
200344: 7b 19 48                 u64 [sp + 0x48] = a2
200347: 64 97                    a0 = a2
200349: 64 68                    a1 = s1
200351: 82 19 28                 a2 = u64 [sp + 0x28]
200354: 82 1a 30                 a3 = u64 [sp + 0x30]
200357: 82 1b 38                 a4 = u64 [sp + 0x38]
200360: 50 20 2e 0c 21 01        ra = 3118, jump @13763
      :                          @13734 [@dyn 1559]
200366: 52 07 69                 jump @13747 if a0 != 0
      :                          @13735
200369: 82 17 40                 a0 = u64 [sp + 0x40]
200372: c9 75 05                 s0 = s0 - a0
200375: 95 55 01                 s0 = s0 + 0x1
200378: 01                       fallthrough
      :                          @13736
200379: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
200382: 51 05 cb 00              jump @13758 if s0 == 0
      :                          @13737
200386: 82 69 20                 a2 = u64 [s1 + 0x20]
200389: 33 08 30                 a1 = 0x30
200392: 82 17 48                 a0 = u64 [sp + 0x48]
200395: b4 90 02 30 0c           ra = 3120, jump [a2]
      :                          @13738 [@dyn 1560]
200400: 51 07 eb                 jump @13736 if a0 == 0
      :                          @13739
200403: 28 44                    jump @13747
      :                          @13740
200405: 52 19 02 12              jump @13742 if a2 != 2
      :                          @13741
200409: 98 a9 01                 a2 = a3 >> 0x1
200412: 95 a8 01                 a1 = a3 + 0x1
200415: 98 88 01                 a1 = a1 >> 0x1
200418: 7b 18 10                 u64 [sp + 0x10] = a1
200421: 28 08                    jump @13743
      :                          @13742
200423: 64 a9                    a2 = a3
200425: 49 11 10                 u64 [sp + 16] = 0
200428: 01                       fallthrough
      :                          @13743
200429: 82 78 20                 a1 = u64 [a0 + 0x20]
200432: 7b 18 48                 u64 [sp + 0x48] = a1
200435: 82 76 28                 s1 = u64 [a0 + 0x28]
200438: 81 77 30                 a0 = i32 [a0 + 0x30]
200441: 7b 17 40                 u64 [sp + 0x40] = a0
200444: 95 95 01                 s0 = a2 + 0x1
200447: 01                       fallthrough
      :                          @13744
200448: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
200451: 51 05 28                 jump @13749 if s0 == 0
      :                          @13745
200454: 82 69 20                 a2 = u64 [s1 + 0x20]
200457: 82 17 48                 a0 = u64 [sp + 0x48]
200460: 82 18 40                 a1 = u64 [sp + 0x40]
200463: b4 90 02 32 0c           ra = 3122, jump [a2]
      :                          @13746 [@dyn 1561]
200468: 51 07 ec                 jump @13744 if a0 == 0
      :                          @13747
200471: 33 08 01                 a1 = 0x1
200474: 01                       fallthrough
      :                          @13748
200475: 64 87                    a0 = a1
200477: 82 10 60                 ra = u64 [sp + 0x60]
200480: 82 15 58                 s0 = u64 [sp + 0x58]
200483: 82 16 50                 s1 = u64 [sp + 0x50]
200486: 95 11 68                 sp = sp + 0x68
200489: 32 00                    ret
      :                          @13749
200491: 82 15 48                 s0 = u64 [sp + 0x48]
200494: 64 57                    a0 = s0
200496: 64 68                    a1 = s1
200498: 82 19 28                 a2 = u64 [sp + 0x28]
200501: 82 1a 30                 a3 = u64 [sp + 0x30]
200504: 82 1b 38                 a4 = u64 [sp + 0x38]
200507: 50 20 34 0c 8e 00        ra = 3124, jump @13763
      :                          @13750 [@dyn 1562]
200513: 33 08 01                 a1 = 0x1
200516: 52 07 d7                 jump @13748 if a0 != 0
      :                          @13751
200519: 82 6a 18                 a3 = u64 [s1 + 0x18]
200522: 64 57                    a0 = s0
200524: 82 18 18                 a1 = u64 [sp + 0x18]
200527: 82 19 20                 a2 = u64 [sp + 0x20]
200530: b4 a0 02 36 0c           ra = 3126, jump [a3]
      :                          @13752 [@dyn 1563]
200535: 33 08 01                 a1 = 0x1
200538: 52 07 c1                 jump @13748 if a0 != 0
      :                          @13753
200541: 82 17 10                 a0 = u64 [sp + 0x10]
200544: 9a 77                    a0 = -a0
200546: 7b 17 38                 u64 [sp + 0x38] = a0
200549: 33 05 ff                 s0 = 0xffffffffffffffff
200552: 01                       fallthrough
      :                          @13754
200553: 82 17 38                 a0 = u64 [sp + 0x38]
200556: c8 57 07                 a0 = a0 + s0
200559: 51 17 ff 45              jump @13761 if a0 == 4294967295
      :                          @13755
200563: 82 69 20                 a2 = u64 [s1 + 0x20]
200566: 82 17 48                 a0 = u64 [sp + 0x48]
200569: 82 18 40                 a1 = u64 [sp + 0x40]
200572: b4 90 02 38 0c           ra = 3128, jump [a2]
      :                          @13756 [@dyn 1564]
200577: 95 55 01                 s0 = s0 + 0x1
200580: 51 07 e5                 jump @13754 if a0 == 0
      :                          @13757
200583: 28 39                    jump @13762
      :                          @13758
200585: 82 6a 18                 a3 = u64 [s1 + 0x18]
200588: 82 17 48                 a0 = u64 [sp + 0x48]
200591: 82 18 18                 a1 = u64 [sp + 0x18]
200594: 82 19 20                 a2 = u64 [sp + 0x20]
200597: b4 a0 02 3a 0c           ra = 3130, jump [a3]
      :                          @13759 [@dyn 1565]
200602: 33 08 01                 a1 = 0x1
200605: 52 07 7e ff              jump @13748 if a0 != 0
      :                          @13760
200609: 33 08                    a1 = 0
200611: 82 17 10                 a0 = u64 [sp + 0x10]
200614: 82 19 08                 a2 = u64 [sp + 0x8]
200617: 7a 79 30                 u32 [a0 + 0x30] = a2
200620: 82 19                    a2 = u64 [sp]
200622: 78 79 38                 u8 [a0 + 0x38] = a2
200625: 28 6a ff                 jump @13748
      :                          @13761
200628: 82 15 10                 s0 = u64 [sp + 0x10]
200631: 82 17 10                 a0 = u64 [sp + 0x10]
200634: d8 75 08                 a1 = s0 <u a0
200637: 28 5e ff                 jump @13748
      :                          @13762
200640: 82 17 10                 a0 = u64 [sp + 0x10]
200643: d8 75 08                 a1 = s0 <u a0
200646: 28 55 ff                 jump @13748
      :                          @13763
200649: 95 11 d8                 sp = sp + 0xffffffffffffffd8
200652: 7b 10 20                 u64 [sp + 0x20] = ra
200655: 7b 15 18                 u64 [sp + 0x18] = s0
200658: 7b 16 10                 u64 [sp + 0x10] = s1
200661: 83 9c                    i32 a5 = a2 + 0
200663: 33 02 00 00 11           t0 = 0x110000
200668: 64 a6                    s1 = a3
200670: 64 85                    s0 = a1
200672: 64 7a                    a3 = a0
200674: aa 2c 21                 jump @13766 if a5 == t0
      :                          @13764
200677: 82 5c 20                 a5 = u64 [s0 + 0x20]
200680: 64 a7                    a0 = a3
200682: 64 98                    a1 = a2
200684: 7b 1b 08                 u64 [sp + 0x8] = a4
200687: 7b 1a                    u64 [sp] = a3
200689: b4 c0 02 3c 0c           ra = 3132, jump [a5]
      :                          @13765 [@dyn 1566]
200694: 82 1a                    a3 = u64 [sp]
200696: 82 1b 08                 a4 = u64 [sp + 0x8]
200699: 64 78                    a1 = a0
200701: 33 07 01                 a0 = 0x1
200704: 52 08 20                 jump @13769 if a1 != 0
      :                          @13766
200707: 51 06 1a                 jump @13768 if s1 == 0
      :                          @13767
200710: 82 5c 18                 a5 = u64 [s0 + 0x18]
200713: 64 a7                    a0 = a3
200715: 64 68                    a1 = s1
200717: 64 b9                    a2 = a4
200719: 82 10 20                 ra = u64 [sp + 0x20]
200722: 82 15 18                 s0 = u64 [sp + 0x18]
200725: 82 16 10                 s1 = u64 [sp + 0x10]
200728: 95 11 28                 sp = sp + 0x28
200731: 32 0c                    jump [a5]
      :                          @13768
200733: 33 07                    a0 = 0
200735: 01                       fallthrough
      :                          @13769
200736: 82 10 20                 ra = u64 [sp + 0x20]
200739: 82 15 18                 s0 = u64 [sp + 0x18]
200742: 82 16 10                 s1 = u64 [sp + 0x10]
200745: 95 11 28                 sp = sp + 0x28
200748: 32 00                    ret
      :                          @13770
200750: 95 11 b8                 sp = sp + 0xffffffffffffffb8
200753: 7b 10 40                 u64 [sp + 0x40] = ra
200756: 7b 15 38                 u64 [sp + 0x38] = s0
200759: 7b 16 30                 u64 [sp + 0x30] = s1
200762: 82 74                    t2 = u64 [a0]
200764: 82 7a 10                 a3 = u64 [a0 + 0x10]
200767: d4 a4 0b                 a4 = t2 | a3
200770: 64 93                    t1 = a2
200772: 64 85                    s0 = a1
200774: 51 0b aa 03              jump @13842 if a4 == 0
      :                          @13771
200778: 7b 17 08                 u64 [sp + 0x8] = a0
200781: 51 0a f4 00              jump @13790 if a3 == 0
      :                          @13772
200785: 82 7c 18                 a5 = u64 [a0 + 0x18]
200788: 33 0a                    a3 = 0
200790: 7b 13 18                 u64 [sp + 0x18] = t1
200793: c8 53 03                 t1 = t1 + s0
200796: 95 cc 01                 a5 = a5 + 0x1
200799: 33 00 00 00 11           ra = 0x110000
200804: 33 07 df 00              a0 = 0xdf
200808: 7b 15 10                 u64 [sp + 0x10] = s0
200811: 64 59                    a2 = s0
200813: 28 12                    jump @13775
      :                          @13773
200815: 95 98 01                 a1 = a2 + 0x1
200818: 01                       fallthrough
      :                          @13774
200819: c9 9a 0a                 a3 = a3 - a2
200822: c8 8a 0a                 a3 = a3 + a1
200825: 64 89                    a2 = a1
200827: aa 05 bc 00              jump @13789 if s0 == ra
      :                          @13775
200831: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
200834: 51 0c 68                 jump @13784 if a5 == 0
      :                          @13776
200837: aa 39 b2 00              jump @13789 if a2 == t1
      :                          @13777
200841: 7d 98                    a1 = i8 [a2]
200843: 84 85 ff 00              s0 = a1 & 0xff
200847: 59 08 e0                 jump @13773 if a1 >=s 0
      :                          @13778
200850: 7c 98 01                 a1 = u8 [a2 + 0x1]
200853: 84 56 1f                 s1 = s0 & 0x1f
200856: 84 8b 3f                 a4 = a1 & 0x3f
200859: ae 57 35                 jump @13782 if a0 >=u s0
      :                          @13779
200862: 7c 98 02                 a1 = u8 [a2 + 0x2]
200865: 97 bb 06                 a4 = a4 << 0x6
200868: 84 88 3f                 a1 = a1 & 0x3f
200871: d4 8b 02                 t0 = a4 | a1
200874: 53 25 f0 00 31           jump @13783 if s0 <u 240
      :                          @13780
200879: 7c 98 03                 a1 = u8 [a2 + 0x3]
200882: 97 66 3d                 s1 = s1 << 0x3d
200885: 98 66 2b                 s1 = s1 >> 0x2b
200888: 97 22 06                 t0 = t0 << 0x6
200891: 84 88 3f                 a1 = a1 & 0x3f
200894: d4 82 05                 s0 = t0 | a1
200897: d4 65 05                 s0 = s0 | s1
200900: aa 05 73                 jump @13789 if s0 == ra
      :                          @13781
200903: 95 98 04                 a1 = a2 + 0x4
200906: 33 07 df 00              a0 = 0xdf
200910: 28 a5                    jump @13774
      :                          @13782
200912: 95 98 02                 a1 = a2 + 0x2
200915: 97 65 06                 s0 = s1 << 0x6
200918: d4 b5 05                 s0 = s0 | a4
200921: 28 9a                    jump @13774
      :                          @13783
200923: 95 98 03                 a1 = a2 + 0x3
200926: 97 66 0c                 s1 = s1 << 0xc
200929: d4 62 05                 s0 = t0 | s1
200932: 33 07 df 00              a0 = 0xdf
200936: 28 8b                    jump @13774
      :                          @13784
200938: aa 39 4d                 jump @13789 if a2 == t1
      :                          @13785
200941: 7d 98                    a1 = i8 [a2]
200943: 59 08 b6 02              jump @13832 if a1 >=s 0
      :                          @13786
200947: 84 88 ff 00              a1 = a1 & 0xff
200951: 33 0b e0 00              a4 = 0xe0
200955: ac b8 aa 02              jump @13832 if a1 <u a4
      :                          @13787
200959: 33 0b f0 00              a4 = 0xf0
200963: ac b8 a2 02              jump @13832 if a1 <u a4
      :                          @13788
200967: 7c 9b 01                 a4 = u8 [a2 + 0x1]
200970: 7c 9c 02                 a5 = u8 [a2 + 0x2]
200973: 84 bb 3f                 a4 = a4 & 0x3f
200976: 84 cc 3f                 a5 = a5 & 0x3f
200979: 7c 99 03                 a2 = u8 [a2 + 0x3]
200982: 97 88 3d                 a1 = a1 << 0x3d
200985: 98 88 2b                 a1 = a1 >> 0x2b
200988: 97 bb 0c                 a4 = a4 << 0xc
200991: 97 cc 06                 a5 = a5 << 0x6
200994: d4 cb 0b                 a4 = a4 | a5
200997: 84 99 3f                 a2 = a2 & 0x3f
201000: d4 b9 09                 a2 = a2 | a4
201003: d4 98 08                 a1 = a1 | a2
201006: 33 09 00 00 11           a2 = 0x110000
201011: ab 98 72 02              jump @13832 if a1 != a2
      :                          @13789
201015: 82 13 18                 t1 = u64 [sp + 0x18]
201018: 82 15 10                 s0 = u64 [sp + 0x10]
201021: 82 17 08                 a0 = u64 [sp + 0x8]
201024: 01                       fallthrough
      :                          @13790
201025: 51 04 af 02              jump @13842 if t2 == 0
      :                          @13791
201029: 82 7c 08                 a5 = u64 [a0 + 0x8]
201032: 7b 13 18                 u64 [sp + 0x18] = t1
201035: 7b 15 10                 u64 [sp + 0x10] = s0
201038: 55 13 20 29              jump @13797 if t1 >=u 32
      :                          @13792
201042: 33 09                    a2 = 0
201044: 51 03 1c                 jump @13795 if t1 == 0
      :                          @13793
201047: 64 58                    a1 = s0
201049: 64 3a                    a3 = t1
201051: 01                       fallthrough
      :                          @13794
201052: 7d 8b                    a4 = i8 [a1]
201054: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
201057: 85 bb 01                 a4 = a4 ^ 0x1
201060: c8 b9 09                 a2 = a2 + a4
201063: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
201066: 95 88 01                 a1 = a1 + 0x1
201069: 52 0a ef                 jump @13794 if a3 != 0
      :                          @13795
201072: ac c9 95 01              jump @13814 if a2 <u a5
      :                          @13796
201076: 28 7c 02                 jump @13842
      :                          @13797
201079: 7b 1c                    u64 [sp] = a5
201081: 95 58 07                 a1 = s0 + 0x7
201084: 64 5c                    a5 = s0
201086: 84 85 f8                 s0 = a1 & 0xfffffffffffffff8
201089: c9 5c 0b                 a4 = a5 - s0
201092: c8 b3 02                 t0 = t1 + a4
201095: 84 2a 07                 a3 = t0 & 0x7
201098: 33 08                    a1 = 0
201100: aa c5 17                 jump @13799 if s0 == a5
      :                          @13798
201103: 7d c6                    s1 = i8 [a5]
201105: 89 66 c0                 s1 = s1 <s 0xffffffffffffffc0
201108: 85 69 01                 a2 = s1 ^ 0x1
201111: c8 98 08                 a1 = a1 + a2
201114: 95 bb 01                 a4 = a4 + 0x1
201117: 95 cc 01                 a5 = a5 + 0x1
201120: 52 0b ef                 jump @13798 if a4 != 0
      :                          @13799
201123: 33 0b                    a4 = 0
201125: 51 0a 1e                 jump @13802 if a3 == 0
      :                          @13800
201128: 84 2c f8                 a5 = t0 & 0xfffffffffffffff8
201131: c8 5c 0c                 a5 = a5 + s0
201134: 01                       fallthrough
      :                          @13801
201135: 7d c7                    a0 = i8 [a5]
201137: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
201140: 85 77 01                 a0 = a0 ^ 0x1
201143: c8 7b 0b                 a4 = a4 + a0
201146: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
201149: 95 cc 01                 a5 = a5 + 0x1
201152: 52 0a ef                 jump @13801 if a3 != 0
      :                          @13802
201155: 98 20 03                 ra = t0 >> 0x3
201158: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
201168: 14 07 ff 00 ff 00 ff 00 ff 00 a0 = 0xff00ff00ff00ff
201178: 7b 17 28                 u64 [sp + 0x28] = a0
201181: 14 04 00 00 00 00 01 00 01 00 t2 = 0x1000100000000
201191: 14 07 01 00 01 00 01 00 01 00 a0 = 0x1000100010001
201201: 7b 17 20                 u64 [sp + 0x20] = a0
201204: c8 8b 09                 a2 = a4 + a1
201207: 28 2d                    jump @13804
      :                          @13803
201209: 97 45 03                 s0 = t2 << 0x3
201212: c8 35 05                 s0 = s0 + t1
201215: c9 40 00                 ra = ra - t2
201218: 84 46 03                 s1 = t2 & 0x3
201221: 82 1b 28                 a4 = u64 [sp + 0x28]
201224: d2 b2 07                 a0 = t0 & a4
201227: 98 28 08                 a1 = t0 >> 0x8
201230: d2 b8 08                 a1 = a1 & a4
201233: c8 87 07                 a0 = a0 + a1
201236: 82 18 20                 a1 = u64 [sp + 0x20]
201239: ca 87 07                 a0 = a0 * a1
201242: 98 77 30                 a0 = a0 >> 0x30
201245: c8 79 09                 a2 = a2 + a0
201248: 52 06 8e 00              jump @13811 if s1 != 0
      :                          @13804
201252: 51 00 79                 jump @13809 if ra == 0
      :                          @13805
201255: 64 53                    t1 = s0
201257: 33 07 c0 00              a0 = 0xc0
201261: e6 70 04                 t2 = minu(ra, a0)
201264: 33 02                    t0 = 0
201266: 98 48 02                 a1 = t2 >> 0x2
201269: 51 08 c4                 jump @13803 if a1 == 0
      :                          @13806
201272: 97 88 05                 a1 = a1 << 0x5
201275: c8 38 08                 a1 = a1 + t1
201278: 64 36                    s1 = t1
201280: 01                       fallthrough
      :                          @13807
201281: 82 67                    a0 = u64 [s1]
201283: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
201286: 98 cc 07                 a5 = a5 >> 0x7
201289: 98 77 06                 a0 = a0 >> 0x6
201292: 82 6b 08                 a4 = u64 [s1 + 0x8]
201295: d4 c7 07                 a0 = a0 | a5
201298: d2 a7 07                 a0 = a0 & a3
201301: c8 27 07                 a0 = a0 + t0
201304: 85 bc ff                 a5 = a4 ^ 0xffffffffffffffff
201307: 98 cc 07                 a5 = a5 >> 0x7
201310: 82 65 10                 s0 = u64 [s1 + 0x10]
201313: 98 bb 06                 a4 = a4 >> 0x6
201316: d4 cb 0b                 a4 = a4 | a5
201319: d2 ab 0b                 a4 = a4 & a3
201322: 85 5c ff                 a5 = s0 ^ 0xffffffffffffffff
201325: 98 cc 07                 a5 = a5 >> 0x7
201328: 98 55 06                 s0 = s0 >> 0x6
201331: d4 5c 0c                 a5 = a5 | s0
201334: 82 65 18                 s0 = u64 [s1 + 0x18]
201337: d2 ac 0c                 a5 = a5 & a3
201340: c8 cb 0b                 a4 = a4 + a5
201343: c8 b7 07                 a0 = a0 + a4
201346: 85 5b ff                 a4 = s0 ^ 0xffffffffffffffff
201349: 98 bb 07                 a4 = a4 >> 0x7
201352: 98 55 06                 s0 = s0 >> 0x6
201355: d4 5b 0b                 a4 = a4 | s0
201358: d2 ab 0b                 a4 = a4 & a3
201361: 95 66 20                 s1 = s1 + 0x20
201364: c8 7b 02                 t0 = a4 + a0
201367: ab 86 aa                 jump @13807 if s1 != a1
      :                          @13808
201370: 28 5f ff                 jump @13803
      :                          @13809
201373: 82 13 18                 t1 = u64 [sp + 0x18]
201376: 82 15 10                 s0 = u64 [sp + 0x10]
201379: 82 17 08                 a0 = u64 [sp + 0x8]
201382: 82 1c                    a5 = u64 [sp]
201384: ac c9 5d                 jump @13814 if a2 <u a5
      :                          @13810
201387: 28 45 01                 jump @13842
      :                          @13811
201390: 33 08                    a1 = 0
201392: 84 47 fc 00              a0 = t2 & 0xfc
201396: 97 77 03                 a0 = a0 << 0x3
201399: c8 73 0b                 a4 = t1 + a0
201402: 97 66 03                 s1 = s1 << 0x3
201405: 82 13 18                 t1 = u64 [sp + 0x18]
201408: 82 15 10                 s0 = u64 [sp + 0x10]
201411: 01                       fallthrough
      :                          @13812
201412: 82 b7                    a0 = u64 [a4]
201414: 95 bb 08                 a4 = a4 + 0x8
201417: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
201420: 98 cc 07                 a5 = a5 >> 0x7
201423: 98 77 06                 a0 = a0 >> 0x6
201426: d4 c7 07                 a0 = a0 | a5
201429: d2 a7 07                 a0 = a0 & a3
201432: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
201435: c8 78 08                 a1 = a1 + a0
201438: 52 06 e6                 jump @13812 if s1 != 0
      :                          @13813
201441: 82 1a 28                 a3 = u64 [sp + 0x28]
201444: d2 a8 07                 a0 = a1 & a3
201447: 98 88 08                 a1 = a1 >> 0x8
201450: d2 a8 08                 a1 = a1 & a3
201453: c8 87 07                 a0 = a0 + a1
201456: 82 18 20                 a1 = u64 [sp + 0x20]
201459: ca 87 07                 a0 = a0 * a1
201462: 98 77 30                 a0 = a0 >> 0x30
201465: c8 79 09                 a2 = a2 + a0
201468: 82 17 08                 a0 = u64 [sp + 0x8]
201471: 82 1c                    a5 = u64 [sp]
201473: ae c9 ef 00              jump @13842 if a2 >=u a5
      :                          @13814
201477: 7c 7a 38                 a3 = u8 [a0 + 0x38]
201480: 33 08                    a1 = 0
201482: 33 0b 01                 a4 = 0x1
201485: c9 9c 0c                 a5 = a5 - a2
201488: ad ab 0c                 jump @13817 if a4 <s a3
      :                          @13815
201491: 51 0a 1a                 jump @13819 if a3 == 0
      :                          @13816
201494: 64 c8                    a1 = a5
201496: 49 01                    u64 [sp + 0] = 0
201498: 28 16                    jump @13820
      :                          @13817
201500: 52 1a 02 11              jump @13819 if a3 != 2
      :                          @13818
201504: 98 c8 01                 a1 = a5 >> 0x1
201507: 95 c9 01                 a2 = a5 + 0x1
201510: 98 99 01                 a2 = a2 >> 0x1
201513: 7b 19                    u64 [sp] = a2
201515: 28 05                    jump @13820
      :                          @13819
201517: 7b 1c                    u64 [sp] = a5
201519: 01                       fallthrough
      :                          @13820
201520: 82 79 20                 a2 = u64 [a0 + 0x20]
201523: 7b 19 28                 u64 [sp + 0x28] = a2
201526: 82 75 28                 s0 = u64 [a0 + 0x28]
201529: 81 77 30                 a0 = i32 [a0 + 0x30]
201532: 7b 17 20                 u64 [sp + 0x20] = a0
201535: 95 86 01                 s1 = a1 + 0x1
201538: 01                       fallthrough
      :                          @13821
201539: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
201542: 51 06 19                 jump @13825 if s1 == 0
      :                          @13822
201545: 82 59 20                 a2 = u64 [s0 + 0x20]
201548: 82 17 28                 a0 = u64 [sp + 0x28]
201551: 82 18 20                 a1 = u64 [sp + 0x20]
201554: b4 90 02 3e 0c           ra = 3134, jump [a2]
      :                          @13823 [@dyn 1567]
201559: 51 07 ec                 jump @13821 if a0 == 0
      :                          @13824
201562: 33 07 01                 a0 = 0x1
201565: 28 72                    jump @13838
      :                          @13825
201567: 82 5a 18                 a3 = u64 [s0 + 0x18]
201570: 82 17 28                 a0 = u64 [sp + 0x28]
201573: 82 18 10                 a1 = u64 [sp + 0x10]
201576: 82 19 18                 a2 = u64 [sp + 0x18]
201579: b4 a0 02 40 0c           ra = 3136, jump [a3]
      :                          @13826 [@dyn 1568]
201584: 64 78                    a1 = a0
201586: 33 07 01                 a0 = 0x1
201589: 52 08 5a                 jump @13838 if a1 != 0
      :                          @13827
201592: 82 17                    a0 = u64 [sp]
201594: 9a 77                    a0 = -a0
201596: 7b 17 18                 u64 [sp + 0x18] = a0
201599: 33 06 ff                 s1 = 0xffffffffffffffff
201602: 01                       fallthrough
      :                          @13828
201603: 82 17 18                 a0 = u64 [sp + 0x18]
201606: c8 67 07                 a0 = a0 + s1
201609: 33 08 ff                 a1 = 0xffffffffffffffff
201612: aa 87 34                 jump @13836 if a0 == a1
      :                          @13829
201615: 82 59 20                 a2 = u64 [s0 + 0x20]
201618: 82 17 28                 a0 = u64 [sp + 0x28]
201621: 82 18 20                 a1 = u64 [sp + 0x20]
201624: b4 90 02 42 0c           ra = 3138, jump [a2]
      :                          @13830 [@dyn 1569]
201629: 95 66 01                 s1 = s1 + 0x1
201632: 51 07 e3                 jump @13828 if a0 == 0
      :                          @13831
201635: 28 26                    jump @13837
      :                          @13832
201637: 82 13 18                 t1 = u64 [sp + 0x18]
201640: 82 15 10                 s0 = u64 [sp + 0x10]
201643: 51 0a 35                 jump @13840 if a3 == 0
      :                          @13833
201646: ae 3a 2f                 jump @13839 if a3 >=u t1
      :                          @13834
201649: c8 a5 08                 a1 = s0 + a3
201652: 7d 88                    a1 = i8 [a1]
201654: 33 09 c0                 a2 = 0xffffffffffffffc0
201657: af 98 27                 jump @13840 if a1 >=s a2
      :                          @13835
201660: 33 08                    a1 = 0
201662: 28 25                    jump @13841
      :                          @13836
201664: 82 16                    s1 = u64 [sp]
201666: 82 17                    a0 = u64 [sp]
201668: d8 76 07                 a0 = s1 <u a0
201671: 28 08                    jump @13838
      :                          @13837
201673: 82 17                    a0 = u64 [sp]
201675: d8 76 07                 a0 = s1 <u a0
201678: 01                       fallthrough
      :                          @13838
201679: 82 10 40                 ra = u64 [sp + 0x40]
201682: 82 15 38                 s0 = u64 [sp + 0x38]
201685: 82 16 30                 s1 = u64 [sp + 0x30]
201688: 95 11 48                 sp = sp + 0x48
201691: 32 00                    ret
      :                          @13839
201693: ab 3a df                 jump @13835 if a3 != t1
      :                          @13840
201696: 64 58                    a1 = s0
201698: 01                       fallthrough
      :                          @13841
201699: 82 17 08                 a0 = u64 [sp + 0x8]
201702: db 8a 03                 t1 = a3 if a1 != 0
201705: db 88 05                 s0 = a1 if a1 != 0
201708: 52 04 59 fd              jump @13791 if t2 != 0
      :                          @13842
201712: 82 78 28                 a1 = u64 [a0 + 0x28]
201715: 82 77 20                 a0 = u64 [a0 + 0x20]
201718: 82 8c 18                 a5 = u64 [a1 + 0x18]
201721: 64 58                    a1 = s0
201723: 64 39                    a2 = t1
201725: 82 10 40                 ra = u64 [sp + 0x40]
201728: 82 15 38                 s0 = u64 [sp + 0x38]
201731: 82 16 30                 s1 = u64 [sp + 0x30]
201734: 95 11 48                 sp = sp + 0x48
201737: 32 0c                    jump [a5]
      :                          @13843
201739: 95 11 78 ff              sp = sp + 0xffffffffffffff78
201743: 7b 10 80 00              u64 [sp + 0x80] = ra
201747: 7b 15 78                 u64 [sp + 0x78] = s0
201750: 7b 16 70                 u64 [sp + 0x70] = s1
201753: 49 11 60 20              u64 [sp + 96] = 0x20
201757: 33 0a 03                 a3 = 0x3
201760: 78 1a 68                 u8 [sp + 0x68] = a3
201763: 82 96 20                 s1 = u64 [a2 + 0x20]
201766: 49 11 30                 u64 [sp + 48] = 0
201769: 49 11 40                 u64 [sp + 64] = 0
201772: 7b 17 50                 u64 [sp + 0x50] = a0
201775: 7b 18 58                 u64 [sp + 0x58] = a1
201778: 51 06 0a 01              jump @13865 if s1 == 0
      :                          @13844
201782: 82 97 28                 a0 = u64 [a2 + 0x28]
201785: 51 07 79 01              jump @13875 if a0 == 0
      :                          @13845
201789: 49 11 28                 u64 [sp + 40] = 0
201792: 82 95                    s0 = u64 [a2]
201794: 7b 19 08                 u64 [sp + 0x8] = a2
201797: 82 98 10                 a1 = u64 [a2 + 0x10]
201800: 7b 18 18                 u64 [sp + 0x18] = a1
201803: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
201806: 97 88 03                 a1 = a1 << 0x3
201809: 98 88 03                 a1 = a1 >> 0x3
201812: 95 88 01                 a1 = a1 + 0x1
201815: 7b 18                    u64 [sp] = a1
201817: 95 55 08                 s0 = s0 + 0x8
201820: 96 78 38                 a1 = a0 * 0x38
201823: 95 66 18                 s1 = s1 + 0x18
201826: 33 07 26 0c              a0 = 0xc26
201830: 7b 17 10                 u64 [sp + 0x10] = a0
201833: 01                       fallthrough
      :                          @13846
201834: 7b 18 20                 u64 [sp + 0x20] = a1
201837: 82 59                    a2 = u64 [s0]
201839: 51 09 18                 jump @13849 if a2 == 0
      :                          @13847
201842: 82 1a 58                 a3 = u64 [sp + 0x58]
201845: 82 17 50                 a0 = u64 [sp + 0x50]
201848: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
201851: 82 aa 18                 a3 = u64 [a3 + 0x18]
201854: b4 a0 02 44 0c           ra = 3140, jump [a3]
      :                          @13848 [@dyn 1570]
201859: 52 07 55 01              jump @13878 if a0 != 0
      :                          @13849
201863: 81 67 10                 a0 = i32 [s1 + 0x10]
201866: 7a 17 60                 u32 [sp + 0x60] = a0
201869: 7c 67 18                 a0 = u8 [s1 + 0x18]
201872: 78 17 68                 u8 [sp + 0x68] = a0
201875: 81 67 14                 a0 = i32 [s1 + 0x14]
201878: 7a 17 64                 u32 [sp + 0x64] = a0
201881: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
201884: 82 67                    a0 = u64 [s1]
201886: 51 08 26                 jump @13854 if a1 == 0
      :                          @13850
201889: 52 18 01 16              jump @13852 if a1 != 1
      :                          @13851
201893: 97 77 04                 a0 = a0 << 0x4
201896: 82 18 18                 a1 = u64 [sp + 0x18]
201899: c8 87 07                 a0 = a0 + a1
201902: 82 78 08                 a1 = u64 [a0 + 0x8]
201905: 82 19 10                 a2 = u64 [sp + 0x10]
201908: aa 98 07                 jump @13853 if a1 == a2
      :                          @13852
201911: 33 08                    a1 = 0
201913: 28 0f                    jump @13855
      :                          @13853
201915: 82 77                    a0 = u64 [a0]
201917: 82 77                    a0 = u64 [a0]
201919: 33 08 01                 a1 = 0x1
201922: 28 06                    jump @13855
      :                          @13854
201924: 33 08 01                 a1 = 0x1
201927: 01                       fallthrough
      :                          @13855
201928: 7b 18 30                 u64 [sp + 0x30] = a1
201931: 7b 17 38                 u64 [sp + 0x38] = a0
201934: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
201937: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
201940: 51 08 26                 jump @13860 if a1 == 0
      :                          @13856
201943: 52 18 01 16              jump @13858 if a1 != 1
      :                          @13857
201947: 97 77 04                 a0 = a0 << 0x4
201950: 82 18 18                 a1 = u64 [sp + 0x18]
201953: c8 87 07                 a0 = a0 + a1
201956: 82 78 08                 a1 = u64 [a0 + 0x8]
201959: 82 19 10                 a2 = u64 [sp + 0x10]
201962: aa 98 07                 jump @13859 if a1 == a2
      :                          @13858
201965: 33 08                    a1 = 0
201967: 28 0f                    jump @13861
      :                          @13859
201969: 82 77                    a0 = u64 [a0]
201971: 82 77                    a0 = u64 [a0]
201973: 33 08 01                 a1 = 0x1
201976: 28 06                    jump @13861
      :                          @13860
201978: 33 08 01                 a1 = 0x1
201981: 01                       fallthrough
      :                          @13861
201982: 7b 18 40                 u64 [sp + 0x40] = a1
201985: 7b 17 48                 u64 [sp + 0x48] = a0
201988: 82 67 08                 a0 = u64 [s1 + 0x8]
201991: 97 77 04                 a0 = a0 << 0x4
201994: 82 18 18                 a1 = u64 [sp + 0x18]
201997: c8 78 08                 a1 = a1 + a0
202000: 82 87                    a0 = u64 [a1]
202002: 82 89 08                 a2 = u64 [a1 + 0x8]
202005: 95 18 30                 a1 = sp + 0x30
202008: b4 90 02 46 0c           ra = 3142, jump [a2]
      :                          @13862 [@dyn 1571]
202013: 52 07 bb 00              jump @13878 if a0 != 0
      :                          @13863
202017: 95 55 10                 s0 = s0 + 0x10
202020: 82 18 20                 a1 = u64 [sp + 0x20]
202023: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
202026: 95 66 38                 s1 = s1 + 0x38
202029: 82 17 28                 a0 = u64 [sp + 0x28]
202032: 95 77 01                 a0 = a0 + 0x1
202035: 7b 17 28                 u64 [sp + 0x28] = a0
202038: 52 08 34 ff              jump @13846 if a1 != 0
      :                          @13864
202042: 28 6b                    jump @13873
      :                          @13865
202044: 82 97 18                 a0 = u64 [a2 + 0x18]
202047: 51 07 73                 jump @13875 if a0 == 0
      :                          @13866
202050: 82 95 10                 s0 = u64 [a2 + 0x10]
202053: 33 0a                    a3 = 0
202055: 97 78 04                 a1 = a0 << 0x4
202058: c8 58 08                 a1 = a1 + s0
202061: 7b 18 20                 u64 [sp + 0x20] = a1
202064: 7b 19 08                 u64 [sp + 0x8] = a2
202067: 82 96                    s1 = u64 [a2]
202069: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
202072: 97 77 04                 a0 = a0 << 0x4
202075: 98 77 04                 a0 = a0 >> 0x4
202078: 95 77 01                 a0 = a0 + 0x1
202081: 7b 17                    u64 [sp] = a0
202083: 95 66 08                 s1 = s1 + 0x8
202086: 01                       fallthrough
      :                          @13867
202087: 7b 1a 28                 u64 [sp + 0x28] = a3
202090: 82 69                    a2 = u64 [s1]
202092: 51 09 17                 jump @13870 if a2 == 0
      :                          @13868
202095: 82 1a 58                 a3 = u64 [sp + 0x58]
202098: 82 17 50                 a0 = u64 [sp + 0x50]
202101: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
202104: 82 aa 18                 a3 = u64 [a3 + 0x18]
202107: b4 a0 02 48 0c           ra = 3144, jump [a3]
      :                          @13869 [@dyn 1572]
202112: 52 07 58                 jump @13878 if a0 != 0
      :                          @13870
202115: 82 57                    a0 = u64 [s0]
202117: 82 59 08                 a2 = u64 [s0 + 0x8]
202120: 95 18 30                 a1 = sp + 0x30
202123: b4 90 02 4a 0c           ra = 3146, jump [a2]
      :                          @13871 [@dyn 1573]
202128: 52 07 48                 jump @13878 if a0 != 0
      :                          @13872
202131: 95 66 10                 s1 = s1 + 0x10
202134: 95 55 10                 s0 = s0 + 0x10
202137: 82 1a 28                 a3 = u64 [sp + 0x28]
202140: 95 aa 01                 a3 = a3 + 0x1
202143: 82 17 20                 a0 = u64 [sp + 0x20]
202146: ab 75 c5                 jump @13867 if s0 != a0
      :                          @13873
202149: 82 19 08                 a2 = u64 [sp + 0x8]
202152: 82 1a                    a3 = u64 [sp]
202154: 82 97 08                 a0 = u64 [a2 + 0x8]
202157: ac 7a 0d                 jump @13876 if a3 <u a0
      :                          @13874
202160: 28 2d                    jump @13879
      :                          @13875
202162: 33 0a                    a3 = 0
202164: 82 97 08                 a0 = u64 [a2 + 0x8]
202167: 54 07 26                 jump @13879 if a0 <=u 0
      :                          @13876
202170: 82 97                    a0 = u64 [a2]
202172: 97 a8 04                 a1 = a3 << 0x4
202175: c8 87 09                 a2 = a0 + a1
202178: 82 1a 58                 a3 = u64 [sp + 0x58]
202181: 82 17 50                 a0 = u64 [sp + 0x50]
202184: 82 98                    a1 = u64 [a2]
202186: 82 99 08                 a2 = u64 [a2 + 0x8]
202189: 82 aa 18                 a3 = u64 [a3 + 0x18]
202192: b4 a0 02 4c 0c           ra = 3148, jump [a3]
      :                          @13877 [@dyn 1574]
202197: 51 07 08                 jump @13879 if a0 == 0
      :                          @13878
202200: 33 07 01                 a0 = 0x1
202203: 28 05                    jump @13880
      :                          @13879
202205: 33 07                    a0 = 0
202207: 01                       fallthrough
      :                          @13880
202208: 82 10 80 00              ra = u64 [sp + 0x80]
202212: 82 15 78                 s0 = u64 [sp + 0x78]
202215: 82 16 70                 s1 = u64 [sp + 0x70]
202218: 95 11 88 00              sp = sp + 0x88
202222: 32 00                    ret
      :                          @13881 [@dyn 1575]
202224: 32 00                    ret
      :                          @13882 [@dyn 1576]
202226: 95 11 80                 sp = sp + 0xffffffffffffff80
202229: 7b 10 78                 u64 [sp + 0x78] = ra
202232: 7b 15 70                 u64 [sp + 0x70] = s0
202235: 7b 16 68                 u64 [sp + 0x68] = s1
202238: 64 92                    t0 = a2
202240: 33 00                    ra = 0
202242: 33 0b                    a4 = 0
202244: 33 05                    s0 = 0
202246: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
202256: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
202262: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
202272: 82 79 10                 a2 = u64 [a0 + 0x10]
202275: 7b 19 48                 u64 [sp + 0x48] = a2
202278: 82 79                    a2 = u64 [a0]
202280: 7b 19 38                 u64 [sp + 0x38] = a2
202283: 82 77 08                 a0 = u64 [a0 + 0x8]
202286: 7b 17 30                 u64 [sp + 0x30] = a0
202289: 33 07 bc 04 01           a0 = 0x104bc
202294: 7b 17 08                 u64 [sp + 0x8] = a0
202297: 3a 07 f8 01 03           a0 = u64 [0x301f8]
202302: 7b 17 60                 u64 [sp + 0x60] = a0
202305: 7b 18 58                 u64 [sp + 0x58] = a1
202308: 95 88 08                 a1 = a1 + 0x8
202311: 7b 18                    u64 [sp] = a1
202313: 33 0c 0a                 a5 = 0xa
202316: 7b 12 20                 u64 [sp + 0x20] = t0
202319: 7b 13 18                 u64 [sp + 0x18] = t1
202322: 7b 14 10                 u64 [sp + 0x10] = t2
202325: 28 3b                    jump @13886
      :                          @13883
202327: 64 06                    s1 = ra
202329: c8 89 07                 a0 = a2 + a1
202332: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
202335: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
202338: 88 77 01                 a0 = a0 <u 0x1
202341: 01                       fallthrough
      :                          @13884
202342: 82 1a 48                 a3 = u64 [sp + 0x48]
202345: 78 a7                    u8 [a3] = a0
202347: 82 17 30                 a0 = u64 [sp + 0x30]
202350: 82 7a 18                 a3 = u64 [a0 + 0x18]
202353: 82 17 38                 a0 = u64 [sp + 0x38]
202356: b4 a0 02 52 0c           ra = 3154, jump [a3]
      :                          @13885 [@dyn 1577]
202361: 64 5b                    a4 = s0
202363: 82 12 20                 t0 = u64 [sp + 0x20]
202366: 82 13 18                 t1 = u64 [sp + 0x18]
202369: 82 14 10                 t2 = u64 [sp + 0x10]
202372: 64 60                    ra = s1
202374: 33 0c 0a                 a5 = 0xa
202377: 82 15 40                 s0 = u64 [sp + 0x40]
202380: 52 07 64 01              jump @13927 if a0 != 0
      :                          @13886
202384: 84 57 ff 00              a0 = s0 & 0xff
202388: 52 07 58 01              jump @13926 if a0 != 0
      :                          @13887
202392: 7b 1b 50                 u64 [sp + 0x50] = a4
202395: ae 02 0a                 jump @13890 if t0 >=u ra
      :                          @13888
202398: 28 ef 00                 jump @13917
      :                          @13889
202401: ac 02 ec 00              jump @13917 if t0 <u ra
      :                          @13890
202405: c9 02 08                 a1 = t0 - ra
202408: 82 16 58                 s1 = u64 [sp + 0x58]
202411: c8 06 06                 s1 = s1 + ra
202414: 55 18 10 1d              jump @13896 if a1 >=u 16
      :                          @13891
202418: aa 02 d8 00              jump @13916 if t0 == ra
      :                          @13892
202422: 33 0a                    a3 = 0
202424: 01                       fallthrough
      :                          @13893
202425: c8 a6 07                 a0 = s1 + a3
202428: 7c 77                    a0 = u8 [a0]
202430: aa c7 a5 00              jump @13911 if a0 == a5
      :                          @13894
202434: 95 aa 01                 a3 = a3 + 0x1
202437: ab a8 f4                 jump @13893 if a1 != a3
      :                          @13895
202440: 28 c2 00                 jump @13916
      :                          @13896
202443: 95 69 07                 a2 = s1 + 0x7
202446: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
202449: c9 6a 07                 a0 = a3 - s1
202452: d3 6a 0a                 a3 = a3 ^ s1
202455: 88 aa 01                 a3 = a3 <u 0x1
202458: 88 7b 01                 a4 = a0 <u 0x1
202461: d4 ba 0a                 a3 = a3 | a4
202464: 51 0a 45                 jump @13902 if a3 == 0
      :                          @13897
202467: 33 07                    a0 = 0
202469: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
202472: 82 1b                    a4 = u64 [sp]
202474: c8 0b 0b                 a4 = a4 + ra
202477: 28 08                    jump @13899
      :                          @13898
202479: 82 1b                    a4 = u64 [sp]
202481: c8 0b 0b                 a4 = a4 + ra
202484: 01                       fallthrough
      :                          @13899
202485: c8 76 0c                 a5 = s1 + a0
202488: 82 cc                    a5 = u64 [a5]
202490: c8 7b 09                 a2 = a4 + a0
202493: 82 99                    a2 = u64 [a2]
202495: d3 4c 05                 s0 = a5 ^ t2
202498: c8 35 05                 s0 = s0 + t1
202501: e0 c5 0c                 a5 = s0 & ~a5
202504: d3 49 05                 s0 = a2 ^ t2
202507: c8 35 05                 s0 = s0 + t1
202510: e0 95 09                 a2 = s0 & ~a2
202513: d4 c9 09                 a2 = a2 | a5
202516: 82 1c 60                 a5 = u64 [sp + 0x60]
202519: d2 c9 09                 a2 = a2 & a5
202522: 52 09 1f                 jump @13905 if a2 != 0
      :                          @13900
202525: 95 77 10                 a0 = a0 + 0x10
202528: ae 7a d5                 jump @13899 if a3 >=u a0
      :                          @13901
202531: 28 16                    jump @13905
      :                          @13902
202533: c8 a6 0b                 a4 = s1 + a3
202536: 7c bb                    a4 = u8 [a4]
202538: aa cb 51                 jump @13914 if a4 == a5
      :                          @13903
202541: 95 aa 01                 a3 = a3 + 0x1
202544: ab a7 f5                 jump @13902 if a0 != a3
      :                          @13904
202547: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
202550: ae 7a b9                 jump @13898 if a3 >=u a0
      :                          @13905
202553: aa 87 9b 00              jump @13923 if a0 == a1
      :                          @13906
202557: 33 0a                    a3 = 0
202559: c8 76 06                 s1 = s1 + a0
202562: c9 72 08                 a1 = t0 - a0
202565: c9 08 08                 a1 = a1 - ra
202568: 33 0c 0a                 a5 = 0xa
202571: 82 1b 50                 a4 = u64 [sp + 0x50]
202574: 01                       fallthrough
      :                          @13907
202575: c8 a6 09                 a2 = s1 + a3
202578: 7c 99                    a2 = u8 [a2]
202580: aa c9 0b                 jump @13910 if a2 == a5
      :                          @13908
202583: 95 aa 01                 a3 = a3 + 0x1
202586: ab a8 f5                 jump @13907 if a1 != a3
      :                          @13909
202589: 28 2d                    jump @13916
      :                          @13910
202591: c8 7a 0a                 a3 = a3 + a0
202594: 01                       fallthrough
      :                          @13911
202595: c8 0a 0a                 a3 = a3 + ra
202598: 95 a0 01                 ra = a3 + 0x1
202601: ae 2a 38 ff              jump @13889 if a3 >=u t0
      :                          @13912
202605: 82 17 58                 a0 = u64 [sp + 0x58]
202608: c8 7a 0a                 a3 = a3 + a0
202611: 7c a7                    a0 = u8 [a3]
202613: ab c7 2c ff              jump @13889 if a0 != a5
      :                          @13913
202617: 28 62                    jump @13924
      :                          @13914
202619: 82 1b 50                 a4 = u64 [sp + 0x50]
202622: c8 0a 0a                 a3 = a3 + ra
202625: 95 a0 01                 ra = a3 + 0x1
202628: ac 2a e9                 jump @13912 if a3 <u t0
      :                          @13915
202631: 28 1a ff                 jump @13889
      :                          @13916
202634: 64 20                    ra = t0
202636: 01                       fallthrough
      :                          @13917
202637: 49 11 40 01              u64 [sp + 64] = 0x1
202641: 64 b5                    s0 = a4
202643: 64 26                    s1 = t0
202645: aa 2b 57                 jump @13926 if a4 == t0
      :                          @13918
202648: 82 17 48                 a0 = u64 [sp + 0x48]
202651: 7c 77                    a0 = u8 [a0]
202653: 51 07 23                 jump @13921 if a0 == 0
      :                          @13919
202656: 82 17 30                 a0 = u64 [sp + 0x30]
202659: 82 7a 18                 a3 = u64 [a0 + 0x18]
202662: 33 09 04                 a2 = 0x4
202665: 82 17 38                 a0 = u64 [sp + 0x38]
202668: 82 18 08                 a1 = u64 [sp + 0x8]
202671: 7b 10 28                 u64 [sp + 0x28] = ra
202674: b4 a0 02 54 0c           ra = 3156, jump [a3]
      :                          @13920 [@dyn 1578]
202679: 82 1b 50                 a4 = u64 [sp + 0x50]
202682: 82 10 28                 ra = u64 [sp + 0x28]
202685: 52 07 33                 jump @13927 if a0 != 0
      :                          @13921
202688: c9 b6 09                 a2 = s1 - a4
202691: 82 18 58                 a1 = u64 [sp + 0x58]
202694: c8 b8 08                 a1 = a1 + a4
202697: ab b6 8e fe              jump @13883 if s1 != a4
      :                          @13922
202701: 64 06                    s1 = ra
202703: 33 07                    a0 = 0
202705: 28 95 fe                 jump @13884
      :                          @13923
202708: 64 20                    ra = t0
202710: 82 1b 50                 a4 = u64 [sp + 0x50]
202713: 28 b4                    jump @13917
      :                          @13924
202715: 49 11 40                 u64 [sp + 64] = 0
202718: 64 05                    s0 = ra
202720: 64 06                    s1 = ra
202722: 82 17 48                 a0 = u64 [sp + 0x48]
202725: 7c 77                    a0 = u8 [a0]
202727: 52 07 b9                 jump @13919 if a0 != 0
      :                          @13925
202730: 28 d6                    jump @13921
      :                          @13926
202732: 33 07                    a0 = 0
202734: 28 06                    jump @13928
      :                          @13927
202736: 33 07 01                 a0 = 0x1
202739: 01                       fallthrough
      :                          @13928
202740: 82 10 78                 ra = u64 [sp + 0x78]
202743: 82 15 70                 s0 = u64 [sp + 0x70]
202746: 82 16 68                 s1 = u64 [sp + 0x68]
202749: 95 11 80 00              sp = sp + 0x80
202753: 32 00                    ret
      :                          @13929 [@dyn 1579]
202755: 95 11 d8                 sp = sp + 0xffffffffffffffd8
202758: 7b 10 20                 u64 [sp + 0x20] = ra
202761: 7b 15 18                 u64 [sp + 0x18] = s0
202764: 7b 16 10                 u64 [sp + 0x10] = s1
202767: 82 75 10                 s0 = u64 [a0 + 0x10]
202770: 7c 59                    a2 = u8 [s0]
202772: 82 7b                    a4 = u64 [a0]
202774: 82 76 08                 s1 = u64 [a0 + 0x8]
202777: 51 09 33                 jump @13933 if a2 == 0
      :                          @13930
202780: 82 6a 18                 a3 = u64 [s1 + 0x18]
202783: 7b 18 08                 u64 [sp + 0x8] = a1
202786: 33 08 bc 04 01           a1 = 0x104bc
202791: 33 09 04                 a2 = 0x4
202794: 64 b7                    a0 = a4
202796: 7b 1b                    u64 [sp] = a4
202798: b4 a0 02 58 0c           ra = 3160, jump [a3]
      :                          @13931 [@dyn 1580]
202803: 82 18 08                 a1 = u64 [sp + 0x8]
202806: 82 1b                    a4 = u64 [sp]
202808: 51 07 14                 jump @13933 if a0 == 0
      :                          @13932
202811: 33 07 01                 a0 = 0x1
202814: 82 10 20                 ra = u64 [sp + 0x20]
202817: 82 15 18                 s0 = u64 [sp + 0x18]
202820: 82 16 10                 s1 = u64 [sp + 0x10]
202823: 95 11 28                 sp = sp + 0x28
202826: 32 00                    ret
      :                          @13933
202828: 83 87                    i32 a0 = a1 + 0
202830: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
202833: 88 77 01                 a0 = a0 <u 0x1
202836: 78 57                    u8 [s0] = a0
202838: 82 6c 20                 a5 = u64 [s1 + 0x20]
202841: 64 b7                    a0 = a4
202843: 82 10 20                 ra = u64 [sp + 0x20]
202846: 82 15 18                 s0 = u64 [sp + 0x18]
202849: 82 16 10                 s1 = u64 [sp + 0x10]
202852: 95 11 28                 sp = sp + 0x28
202855: 32 0c                    jump [a5]
      :                          @13934 [@dyn 1581]
202857: 64 8a                    a3 = a1
202859: 33 08 60 30 01           a1 = 0x13060
202864: 64 a9                    a2 = a3
202866: 28 99 fb                 jump @13843
      :                          @13935 [@dyn 1582]
202869: 7c 77                    a0 = u8 [a0]
202871: 64 89                    a2 = a1
202873: 33 08 01                 a1 = 0x1
202876: 28 f9 f3                 jump @13706
      :                          @13936 [@dyn 1583]
202879: 80 77                    a0 = u32 [a0]
202881: 64 89                    a2 = a1
202883: 33 08 01                 a1 = 0x1
202886: 28 ef f3                 jump @13706
      :                          @13937
202889: 00                       trap
      :                          @13938
202890: 95 11 70 ff              sp = sp + 0xffffffffffffff70
202894: 7b 10 88 00              u64 [sp + 0x88] = ra
202898: 7b 15 80 00              u64 [sp + 0x80] = s0
202902: 7b 16 78                 u64 [sp + 0x78] = s1
202905: 64 75                    s0 = a0
202907: 7c 77 10                 a0 = u8 [a0 + 0x10]
202910: 82 5c                    a5 = u64 [s0]
202912: 64 8b                    a4 = a1
202914: 33 08 01                 a1 = 0x1
202917: 51 07 1e                 jump @13940 if a0 == 0
      :                          @13939
202920: 78 58 10                 u8 [s0 + 0x10] = a1
202923: 95 c7 01                 a0 = a5 + 0x1
202926: 7b 57                    u64 [s0] = a0
202928: 64 57                    a0 = s0
202930: 82 10 88 00              ra = u64 [sp + 0x88]
202934: 82 15 80 00              s0 = u64 [sp + 0x80]
202938: 82 16 78                 s1 = u64 [sp + 0x78]
202941: 95 11 90 00              sp = sp + 0x90
202945: 32 00                    ret
      :                          @13940
202947: 82 56 08                 s1 = u64 [s0 + 0x8]
202950: 80 67 34                 a0 = u32 [s1 + 0x34]
202953: 84 78 04                 a1 = a0 & 0x4
202956: 7b 1c 10                 u64 [sp + 0x10] = a5
202959: 52 08 48                 jump @13945 if a1 != 0
      :                          @13941
202962: 7b 1b                    u64 [sp] = a4
202964: 7b 19 08                 u64 [sp + 0x8] = a2
202967: 88 c9 01                 a2 = a5 <u 0x1
202970: 33 0a 90 30 01           a3 = 0x13090
202975: 82 6b 28                 a4 = u64 [s1 + 0x28]
202978: 33 08 94 30 01           a1 = 0x13094
202983: 82 67 20                 a0 = u64 [s1 + 0x20]
202986: 82 bb 18                 a4 = u64 [a4 + 0x18]
202989: db ca 08                 a1 = a3 if a5 != 0
202992: 33 0a 02                 a3 = 0x2
202995: c9 9a 09                 a2 = a3 - a2
202998: b4 b0 02 60 0c           ra = 3168, jump [a4]
      :                          @13942 [@dyn 1584]
203003: 33 08 01                 a1 = 0x1
203006: 82 1c 10                 a5 = u64 [sp + 0x10]
203009: 52 07 a7                 jump @13939 if a0 != 0
      :                          @13943
203012: 82 17                    a0 = u64 [sp]
203014: 64 68                    a1 = s1
203016: 82 19 08                 a2 = u64 [sp + 0x8]
203019: b4 90 02 62 0c           ra = 3170, jump [a2]
      :                          @13944 [@dyn 1585]
203024: 82 1c 10                 a5 = u64 [sp + 0x10]
203027: 64 78                    a1 = a0
203029: 28 93                    jump @13939
      :                          @13945
203031: 52 0c 31                 jump @13949 if a5 != 0
      :                          @13946
203034: 7b 1b                    u64 [sp] = a4
203036: 7b 19 08                 u64 [sp + 0x8] = a2
203039: 82 68 28                 a1 = u64 [s1 + 0x28]
203042: 82 67 20                 a0 = u64 [s1 + 0x20]
203045: 82 8a 18                 a3 = u64 [a1 + 0x18]
203048: 33 08 95 30 01           a1 = 0x13095
203053: 33 09 02                 a2 = 0x2
203056: b4 a0 02 64 0c           ra = 3172, jump [a3]
      :                          @13947 [@dyn 1586]
203061: 33 08 01                 a1 = 0x1
203064: 82 1c 10                 a5 = u64 [sp + 0x10]
203067: 52 07 6d ff              jump @13939 if a0 != 0
      :                          @13948
203071: 81 67 34                 a0 = i32 [s1 + 0x34]
203074: 82 19 08                 a2 = u64 [sp + 0x8]
203077: 82 1b                    a4 = u64 [sp]
203079: 01                       fallthrough
      :                          @13949
203080: 46 11 37 01              u8 [sp + 55] = 0x1
203084: 82 68 20                 a1 = u64 [s1 + 0x20]
203087: 82 6a 28                 a3 = u64 [s1 + 0x28]
203090: 7b 18 18                 u64 [sp + 0x18] = a1
203093: 7b 1a 20                 u64 [sp + 0x20] = a3
203096: 95 18 37                 a1 = sp + 0x37
203099: 7b 18 28                 u64 [sp + 0x28] = a1
203102: 81 68 30                 a1 = i32 [s1 + 0x30]
203105: 7c 62 38                 t0 = u8 [s1 + 0x38]
203108: 82 6a                    a3 = u64 [s1]
203110: 82 63 08                 t1 = u64 [s1 + 0x8]
203113: 82 6c 10                 a5 = u64 [s1 + 0x10]
203116: 82 66 18                 s1 = u64 [s1 + 0x18]
203119: 7a 17 6c                 u32 [sp + 0x6c] = a0
203122: 7a 18 68                 u32 [sp + 0x68] = a1
203125: 78 12 70                 u8 [sp + 0x70] = t0
203128: 7b 1a 38                 u64 [sp + 0x38] = a3
203131: 7b 13 40                 u64 [sp + 0x40] = t1
203134: 7b 1c 48                 u64 [sp + 0x48] = a5
203137: 7b 16 50                 u64 [sp + 0x50] = s1
203140: 95 17 18                 a0 = sp + 0x18
203143: 7b 17 58                 u64 [sp + 0x58] = a0
203146: 33 07 60 30 01           a0 = 0x13060
203151: 7b 17 60                 u64 [sp + 0x60] = a0
203154: 95 18 38                 a1 = sp + 0x38
203157: 64 b7                    a0 = a4
203159: b4 90 02 66 0c           ra = 3174, jump [a2]
      :                          @13950 [@dyn 1587]
203164: 51 07 0c                 jump @13952 if a0 == 0
      :                          @13951
203167: 82 1c 10                 a5 = u64 [sp + 0x10]
203170: 33 08 01                 a1 = 0x1
203173: 28 03 ff                 jump @13939
      :                          @13952
203176: 82 18 60                 a1 = u64 [sp + 0x60]
203179: 82 17 58                 a0 = u64 [sp + 0x58]
203182: 82 8a 18                 a3 = u64 [a1 + 0x18]
203185: 33 08 92 30 01           a1 = 0x13092
203190: 33 09 02                 a2 = 0x2
203193: b4 a0 02 68 0c           ra = 3176, jump [a3]
      :                          @13953 [@dyn 1588]
203198: 64 78                    a1 = a0
203200: 82 1c 10                 a5 = u64 [sp + 0x10]
203203: 28 e5 fe                 jump @13939
      :                          @13954
203206: 95 11 70 ff              sp = sp + 0xffffffffffffff70
203210: 7b 10 88 00              u64 [sp + 0x88] = ra
203214: 7b 15 80 00              u64 [sp + 0x80] = s0
203218: 7b 16 78                 u64 [sp + 0x78] = s1
203221: 64 75                    s0 = a0
203223: 7c 77 08                 a0 = u8 [a0 + 0x8]
203226: 64 8b                    a4 = a1
203228: 33 08 01                 a1 = 0x1
203231: 33 06 01                 s1 = 0x1
203234: 51 07 1d                 jump @13956 if a0 == 0
      :                          @13955
203237: 78 56 08                 u8 [s0 + 0x8] = s1
203240: 46 15 09 01              u8 [s0 + 9] = 0x1
203244: 64 57                    a0 = s0
203246: 82 10 88 00              ra = u64 [sp + 0x88]
203250: 82 15 80 00              s0 = u64 [sp + 0x80]
203254: 82 16 78                 s1 = u64 [sp + 0x78]
203257: 95 11 90 00              sp = sp + 0x90
203261: 32 00                    ret
      :                          @13956
203263: 64 9a                    a3 = a2
203265: 82 5c                    a5 = u64 [s0]
203267: 80 c7 34                 a0 = u32 [a5 + 0x34]
203270: 7c 58 09                 a1 = u8 [s0 + 0x9]
203273: 84 79 04                 a2 = a0 & 0x4
203276: 52 09 45                 jump @13962 if a2 != 0
      :                          @13957
203279: 51 08 32                 jump @13960 if a1 == 0
      :                          @13958
203282: 82 c8 28                 a1 = u64 [a5 + 0x28]
203285: 82 c7 20                 a0 = u64 [a5 + 0x20]
203288: 82 83 18                 t1 = u64 [a1 + 0x18]
203291: 33 08 90 30 01           a1 = 0x13090
203296: 33 09 02                 a2 = 0x2
203299: 64 a6                    s1 = a3
203301: 7b 1b 10                 u64 [sp + 0x10] = a4
203304: 7b 1c 08                 u64 [sp + 0x8] = a5
203307: b4 30 02 6a 0c           ra = 3178, jump [t1]
      :                          @13959 [@dyn 1589]
203312: 82 1c 08                 a5 = u64 [sp + 0x8]
203315: 82 1b 10                 a4 = u64 [sp + 0x10]
203318: 64 6a                    a3 = s1
203320: 33 08 01                 a1 = 0x1
203323: 33 06 01                 s1 = 0x1
203326: 52 07 a7                 jump @13955 if a0 != 0
      :                          @13960
203329: 64 b7                    a0 = a4
203331: 64 c8                    a1 = a5
203333: b4 a0 02 6c 0c           ra = 3180, jump [a3]
      :                          @13961 [@dyn 1590]
203338: 33 08 01                 a1 = 0x1
203341: 64 76                    s1 = a0
203343: 28 96                    jump @13955
      :                          @13962
203345: 52 08 37                 jump @13966 if a1 != 0
      :                          @13963
203348: 82 c8 28                 a1 = u64 [a5 + 0x28]
203351: 82 c7 20                 a0 = u64 [a5 + 0x20]
203354: 82 83 18                 t1 = u64 [a1 + 0x18]
203357: 33 08 98 30 01           a1 = 0x13098
203362: 33 09 01                 a2 = 0x1
203365: 33 06 01                 s1 = 0x1
203368: 7b 1a                    u64 [sp] = a3
203370: 7b 1b 10                 u64 [sp + 0x10] = a4
203373: 7b 1c 08                 u64 [sp + 0x8] = a5
203376: b4 30 02 6e 0c           ra = 3182, jump [t1]
      :                          @13964 [@dyn 1591]
203381: 82 1c 08                 a5 = u64 [sp + 0x8]
203384: 82 1b 10                 a4 = u64 [sp + 0x10]
203387: 82 1a                    a3 = u64 [sp]
203389: 33 08 01                 a1 = 0x1
203392: 52 07 65 ff              jump @13955 if a0 != 0
      :                          @13965
203396: 81 c7 34                 a0 = i32 [a5 + 0x34]
203399: 01                       fallthrough
      :                          @13966
203400: 33 06 01                 s1 = 0x1
203403: 78 16 37                 u8 [sp + 0x37] = s1
203406: 82 c8 20                 a1 = u64 [a5 + 0x20]
203409: 82 c9 28                 a2 = u64 [a5 + 0x28]
203412: 7b 18 18                 u64 [sp + 0x18] = a1
203415: 7b 19 20                 u64 [sp + 0x20] = a2
203418: 95 18 37                 a1 = sp + 0x37
203421: 7b 18 28                 u64 [sp + 0x28] = a1
203424: 81 c8 30                 a1 = i32 [a5 + 0x30]
203427: 7c c9 38                 a2 = u8 [a5 + 0x38]
203430: 82 c3                    t1 = u64 [a5]
203432: 82 c4 08                 t2 = u64 [a5 + 0x8]
203435: 82 c0 10                 ra = u64 [a5 + 0x10]
203438: 82 c2 18                 t0 = u64 [a5 + 0x18]
203441: 7a 17 6c                 u32 [sp + 0x6c] = a0
203444: 7a 18 68                 u32 [sp + 0x68] = a1
203447: 78 19 70                 u8 [sp + 0x70] = a2
203450: 7b 13 38                 u64 [sp + 0x38] = t1
203453: 7b 14 40                 u64 [sp + 0x40] = t2
203456: 7b 10 48                 u64 [sp + 0x48] = ra
203459: 7b 12 50                 u64 [sp + 0x50] = t0
203462: 95 17 18                 a0 = sp + 0x18
203465: 7b 17 58                 u64 [sp + 0x58] = a0
203468: 33 07 60 30 01           a0 = 0x13060
203473: 7b 17 60                 u64 [sp + 0x60] = a0
203476: 95 18 38                 a1 = sp + 0x38
203479: 64 b7                    a0 = a4
203481: b4 a0 02 70 0c           ra = 3184, jump [a3]
      :                          @13967 [@dyn 1592]
203486: 52 07 21                 jump @13970 if a0 != 0
      :                          @13968
203489: 82 18 60                 a1 = u64 [sp + 0x60]
203492: 82 17 58                 a0 = u64 [sp + 0x58]
203495: 82 8a 18                 a3 = u64 [a1 + 0x18]
203498: 33 08 92 30 01           a1 = 0x13092
203503: 33 09 02                 a2 = 0x2
203506: b4 a0 02 72 0c           ra = 3186, jump [a3]
      :                          @13969 [@dyn 1593]
203511: 64 76                    s1 = a0
203513: 33 08 01                 a1 = 0x1
203516: 28 e9 fe                 jump @13955
      :                          @13970
203519: 33 08 01                 a1 = 0x1
203522: 28 e3 fe                 jump @13955
      :                          @13971 [@dyn 1594]
203525: 95 11 a8                 sp = sp + 0xffffffffffffffa8
203528: 7b 10 50                 u64 [sp + 0x50] = ra
203531: 7b 15 48                 u64 [sp + 0x48] = s0
203534: 7b 16 40                 u64 [sp + 0x40] = s1
203537: 82 79 08                 a2 = u64 [a0 + 0x8]
203540: 82 77                    a0 = u64 [a0]
203542: 98 9a 13                 a3 = a2 >> 0x13
203545: 49 11 38 27              u64 [sp + 56] = 0x27
203549: 7b 18                    u64 [sp] = a1
203551: 52 0a 1c                 jump @13973 if a3 != 0
      :                          @13972
203554: 49 11 08                 u64 [sp + 8] = 0
203557: 3a 08 10 02 03           a1 = u64 [0x30210]
203562: 98 7a 13                 a3 = a0 >> 0x13
203565: 97 99 2d                 a2 = a2 << 0x2d
203568: d4 a9 09                 a2 = a2 | a3
203571: d6 89 06                 s1 = a2 mulhu a1
203574: 98 66 2b                 s1 = s1 >> 0x2b
203577: 28 55                    jump @13974
      :                          @13973
203579: 3a 08 00 02 03           a1 = u64 [0x30200]
203584: 3a 0a 08 02 03           a3 = u64 [0x30208]
203589: d6 87 0b                 a4 = a0 mulhu a1
203592: d6 a7 0c                 a5 = a0 mulhu a3
203595: ca a7 06                 s1 = a0 * a3
203598: c8 b6 06                 s1 = s1 + a4
203601: d8 b6 0b                 a4 = s1 <u a4
203604: c8 cb 0b                 a4 = a4 + a5
203607: d6 89 0c                 a5 = a2 mulhu a1
203610: ca 89 08                 a1 = a2 * a1
203613: c8 68 08                 a1 = a1 + s1
203616: d8 68 08                 a1 = a1 <u s1
203619: c8 c8 08                 a1 = a1 + a5
203622: d6 a9 0c                 a5 = a2 mulhu a3
203625: ca a9 09                 a2 = a2 * a3
203628: c8 b9 09                 a2 = a2 + a4
203631: d8 b9 0a                 a3 = a2 <u a4
203634: c8 ca 0a                 a3 = a3 + a5
203637: c8 98 08                 a1 = a1 + a2
203640: d8 98 09                 a2 = a1 <u a2
203643: c8 a9 09                 a2 = a2 + a3
203646: 97 9a 02                 a3 = a2 << 0x2
203649: 98 88 3e                 a1 = a1 >> 0x3e
203652: d4 a8 06                 s1 = a1 | a3
203655: 98 99 3e                 a2 = a2 >> 0x3e
203658: 7b 19 08                 u64 [sp + 0x8] = a2
203661: 01                       fallthrough
      :                          @13974
203662: 3a 05 18 02 03           s0 = u64 [0x30218]
203667: ca 56 08                 a1 = s1 * s0
203670: c8 87 07                 a0 = a0 + a1
203673: 95 18 11                 a1 = sp + 0x11
203676: 95 19 38                 a2 = sp + 0x38
203679: 50 20 76 0c a6 00        ra = 3190, jump @13983
      :                          @13975 [@dyn 1595]
203685: 82 19 38                 a2 = u64 [sp + 0x38]
203688: 82 17 08                 a0 = u64 [sp + 0x8]
203691: d4 67 07                 a0 = a0 | s1
203694: 51 07 6e                 jump @13981 if a0 == 0
      :                          @13976
203697: 95 17 25                 a0 = sp + 0x25
203700: 95 99 ec                 a2 = a2 + 0xffffffffffffffec
203703: 33 08 30                 a1 = 0x30
203706: 50 20 78 0c 53 f0        ra = 3192, jump @13689
      :                          @13977 [@dyn 1596]
203712: 49 11 38 14              u64 [sp + 56] = 0x14
203716: 3a 07 10 02 03           a0 = u64 [0x30210]
203721: 98 68 13                 a1 = s1 >> 0x13
203724: 82 19 08                 a2 = u64 [sp + 0x8]
203727: 97 99 2d                 a2 = a2 << 0x2d
203730: d4 98 08                 a1 = a1 | a2
203733: 7b 18 08                 u64 [sp + 0x8] = a1
203736: d6 78 07                 a0 = a1 mulhu a0
203739: 98 78 2b                 a1 = a0 >> 0x2b
203742: ca 58 07                 a0 = a1 * s0
203745: 64 85                    s0 = a1
203747: c8 67 07                 a0 = a0 + s1
203750: 95 18 11                 a1 = sp + 0x11
203753: 95 19 38                 a2 = sp + 0x38
203756: 50 20 7a 0c 59           ra = 3194, jump @13983
      :                          @13978 [@dyn 1597]
203761: 82 19 38                 a2 = u64 [sp + 0x38]
203764: 14 07 3d 91 60 e4 58 11 00 00 a0 = 0x1158e460913d
203774: 82 18 08                 a1 = u64 [sp + 0x8]
203777: ac 78 1b                 jump @13981 if a1 <u a0
      :                          @13979
203780: 95 17 12                 a0 = sp + 0x12
203783: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
203786: 33 08 30                 a1 = 0x30
203789: 50 20 7c 0c 00 f0        ra = 3196, jump @13689
      :                          @13980 [@dyn 1598]
203795: 33 09                    a2 = 0
203797: 86 57 30                 a0 = s0 | 0x30
203800: 78 17 11                 u8 [sp + 0x11] = a0
203803: 01                       fallthrough
      :                          @13981
203804: 95 1b 11                 a4 = sp + 0x11
203807: c8 9b 0b                 a4 = a4 + a2
203810: 9a 9c 27                 a5 = 0x27 - a2
203813: 33 09 40 30 01           a2 = 0x13040
203818: 33 08 01                 a1 = 0x1
203821: 82 17                    a0 = u64 [sp]
203823: 33 0a                    a3 = 0
203825: 50 20 7e 0c 72 f1        ra = 3198, jump @13716
      :                          @13982 [@dyn 1599]
203831: 82 10 50                 ra = u64 [sp + 0x50]
203834: 82 15 48                 s0 = u64 [sp + 0x48]
203837: 82 16 40                 s1 = u64 [sp + 0x40]
203840: 95 11 58                 sp = sp + 0x58
203843: 32 00                    ret
      :                          @13983
203845: 95 11 b0                 sp = sp + 0xffffffffffffffb0
203848: 7b 10 48                 u64 [sp + 0x48] = ra
203851: 7b 15 40                 u64 [sp + 0x40] = s0
203854: 7b 16 38                 u64 [sp + 0x38] = s1
203857: 64 95                    s0 = a2
203859: 82 90                    ra = u64 [a2]
203861: 54 10 13 5f 03           jump @13998 if ra <=u 19
      :                          @13984
203866: 14 09 00 00 c1 6f f2 86 23 00 a2 = 0x2386f26fc10000
203876: c8 80 02                 t0 = ra + a1
203879: 7b 18 30                 u64 [sp + 0x30] = a1
203882: ac 97 6c 01              jump @13986 if a0 <u a2
      :                          @13985
203886: 3a 09 28 02 03           a2 = u64 [0x30228]
203891: d6 97 09                 a2 = a0 mulhu a2
203894: 98 9a 33                 a3 = a2 >> 0x33
203897: 7b 1a 20                 u64 [sp + 0x20] = a3
203900: 14 09 00 00 3f 90 0d 79 dc ff a2 = 0xffdc790d903f0000
203910: ca 9a 09                 a2 = a3 * a2
203913: 3a 0a 30 02 03           a3 = u64 [0x30230]
203918: c8 97 07                 a0 = a0 + a2
203921: 3a 09 38 02 03           a2 = u64 [0x30238]
203926: d6 a7 0a                 a3 = a0 mulhu a3
203929: 98 aa 29                 a3 = a3 >> 0x29
203932: 7b 15 28                 u64 [sp + 0x28] = s0
203935: 84 a3 fe                 t1 = a3 & 0xfffffffffffffffe
203938: d6 97 09                 a2 = a0 mulhu a2
203941: 98 96 25                 s1 = a2 >> 0x25
203944: 98 99 27                 a2 = a2 >> 0x27
203947: 97 99 32                 a2 = a2 << 0x32
203950: 33 0c 00 c0 1e 05        a5 = 0x51ec000
203956: d6 c9 09                 a2 = a2 mulhu a5
203959: 98 99 11                 a2 = a2 >> 0x11
203962: 3a 05 40 02 03           s0 = u64 [0x30240]
203967: 96 99 64                 a2 = a2 * 0x64
203970: bf 96 06                 i32 s1 = s1 - a2
203973: 7b 16 18                 u64 [sp + 0x18] = s1
203976: d6 57 09                 a2 = a0 mulhu s0
203979: 98 99 21                 a2 = a2 >> 0x21
203982: 96 95 1f 85 eb 51        s0 = a2 * 0x51eb851f
203988: 3a 0a 20 02 03           a3 = u64 [0x30220]
203993: 98 55 25                 s0 = s0 >> 0x25
203996: 96 55 64                 s0 = s0 * 0x64
203999: bf 59 09                 i32 a2 = a2 - s0
204002: 7b 19 10                 u64 [sp + 0x10] = a2
204005: d6 a7 09                 a2 = a0 mulhu a3
204008: 98 9a 1a                 a3 = a2 >> 0x1a
204011: 97 99 06                 a2 = a2 << 0x6
204014: 98 99 20                 a2 = a2 >> 0x20
204017: 96 99 1f 85 eb 51        a2 = a2 * 0x51eb851f
204023: 98 99 25                 a2 = a2 >> 0x25
204026: 96 99 64                 a2 = a2 * 0x64
204029: bf 9a 0a                 i32 a3 = a3 - a2
204032: 7b 1a 08                 u64 [sp + 0x8] = a3
204035: 3a 05 48 02 03           s0 = u64 [0x30248]
204040: 33 04 9e 30 01           t2 = 0x1309e
204045: c8 43 03                 t1 = t1 + t2
204048: 7c 39 01                 a2 = u8 [t1 + 0x1]
204051: 95 0a f0                 a3 = ra + 0xfffffffffffffff0
204054: 7c 3b                    a4 = u8 [t1]
204056: 64 83                    t1 = a1
204058: c8 a8 08                 a1 = a1 + a3
204061: 78 89 01                 u8 [a1 + 0x1] = a2
204064: d6 57 09                 a2 = a0 mulhu s0
204067: 78 8b                    u8 [a1] = a4
204069: 3a 08 50 02 03           a1 = u64 [0x30250]
204074: 98 99 12                 a2 = a2 >> 0x12
204077: 3a 0b 58 02 03           a4 = u64 [0x30258]
204082: d6 89 05                 s0 = a2 mulhu a1
204085: 96 55 64                 s0 = s0 * 0x64
204088: c9 59 09                 a2 = a2 - s0
204091: 7b 19                    u64 [sp] = a2
204093: d6 b7 09                 a2 = a0 mulhu a4
204096: 98 99 0b                 a2 = a2 >> 0xb
204099: d6 89 08                 a1 = a2 mulhu a1
204102: 96 88 64                 a1 = a1 * 0x64
204105: c9 89 08                 a1 = a2 - a1
204108: 3a 09 60 02 03           a2 = u64 [0x30260]
204113: 3a 0b 68 02 03           a4 = u64 [0x30268]
204118: 98 75 02                 s0 = a0 >> 0x2
204121: d6 95 09                 a2 = s0 mulhu a2
204124: 98 99 02                 a2 = a2 >> 0x2
204127: d6 b9 0b                 a4 = a2 mulhu a4
204130: 98 bb 01                 a4 = a4 >> 0x1
204133: 96 bb 64                 a4 = a4 * 0x64
204136: 82 1c 18                 a5 = u64 [sp + 0x18]
204139: 97 cc 31                 a5 = a5 << 0x31
204142: 98 cc 30                 a5 = a5 >> 0x30
204145: c9 b9 05                 s0 = a2 - a4
204148: c8 4c 0c                 a5 = a5 + t2
204151: 7c cb 01                 a4 = u8 [a5 + 0x1]
204154: 96 99 9c                 a2 = a2 * 0xffffffffffffff9c
204157: c8 97 07                 a0 = a0 + a2
204160: 78 2b f3                 u8 [t0 + 0xfffffffffffffff3] = a4
204163: 82 19 10                 a2 = u64 [sp + 0x10]
204166: 97 99 21                 a2 = a2 << 0x21
204169: 7c cb                    a4 = u8 [a5]
204171: 98 99 20                 a2 = a2 >> 0x20
204174: 82 1c 08                 a5 = u64 [sp + 0x8]
204177: 97 cc 21                 a5 = a5 << 0x21
204180: 98 cc 20                 a5 = a5 >> 0x20
204183: 78 2b f2                 u8 [t0 + 0xfffffffffffffff2] = a4
204186: c8 49 09                 a2 = a2 + t2
204189: 7c 9b                    a4 = u8 [a2]
204191: 7c 99 01                 a2 = u8 [a2 + 0x1]
204194: c8 4c 0c                 a5 = a5 + t2
204197: 7c c6 01                 s1 = u8 [a5 + 0x1]
204200: 7c cc                    a5 = u8 [a5]
204202: 78 29 f5                 u8 [t0 + 0xfffffffffffffff5] = a2
204205: 78 2b f4                 u8 [t0 + 0xfffffffffffffff4] = a4
204208: 78 26 f7                 u8 [t0 + 0xfffffffffffffff7] = s1
204211: 78 2c f6                 u8 [t0 + 0xfffffffffffffff6] = a5
204214: 95 09 f8                 a2 = ra + 0xfffffffffffffff8
204217: 82 1b                    a4 = u64 [sp]
204219: 97 bb 01                 a4 = a4 << 0x1
204222: 97 86 01                 s1 = a1 << 0x1
204225: 97 54 01                 t2 = s0 << 0x1
204228: 97 7c 01                 a5 = a0 << 0x1
204231: 82 17 28                 a0 = u64 [sp + 0x28]
204234: 7b 7a                    u64 [a0] = a3
204236: 64 a0                    ra = a3
204238: 64 3a                    a3 = t1
204240: 82 17 20                 a0 = u64 [sp + 0x20]
204243: 28 a4 00                 jump @13988
      :                          @13986
204246: 53 47 00 e1 f5 05 e4 00  jump @13989 if a0 <u 100000000
      :                          @13987
204254: 7b 15 28                 u64 [sp + 0x28] = s0
204257: 3a 08 20 02 03           a1 = u64 [0x30220]
204262: d6 87 0a                 a3 = a0 mulhu a1
204265: 98 aa 1a                 a3 = a3 >> 0x1a
204268: 87 a8 00 1f 0a fa        i32 a1 = a3 * 0xfffffffffa0a1f00
204274: c8 87 07                 a0 = a0 + a1
204277: 97 78 20                 a1 = a0 << 0x20
204280: 14 09 00 00 00 00 83 de 1b 43 a2 = 0x431bde8300000000
204290: d6 98 09                 a2 = a1 mulhu a2
204293: 98 99 31                 a2 = a2 >> 0x31
204296: 84 95 fe                 s0 = a2 & 0xfffffffffffffffe
204299: 14 09 00 00 00 00 59 17 b7 d1 a2 = 0xd1b7175900000000
204309: d6 98 09                 a2 = a1 mulhu a2
204312: 98 9b 2d                 a4 = a2 >> 0x2d
204315: 98 99 2f                 a2 = a2 >> 0x2f
204318: 97 99 32                 a2 = a2 << 0x32
204321: 33 0c 00 c0 1e 05        a5 = 0x51ec000
204327: d6 c9 09                 a2 = a2 mulhu a5
204330: 98 99 11                 a2 = a2 >> 0x11
204333: 96 99 64                 a2 = a2 * 0x64
204336: bf 9b 0b                 i32 a4 = a4 - a2
204339: 97 bb 31                 a4 = a4 << 0x31
204342: 98 b6 30                 s1 = a4 >> 0x30
204345: 64 5b                    a4 = s0
204347: 14 09 00 00 00 00 1f 85 eb 51 a2 = 0x51eb851f00000000
204357: d6 98 08                 a1 = a1 mulhu a2
204360: 98 88 25                 a1 = a1 >> 0x25
204363: 96 89 29 5c 8f 02        a2 = a1 * 0x28f5c29
204369: 98 99 20                 a2 = a2 >> 0x20
204372: 96 99 64                 a2 = a2 * 0x64
204375: bf 98 09                 i32 a2 = a1 - a2
204378: 97 99 21                 a2 = a2 << 0x21
204381: 98 94 20                 t2 = a2 >> 0x20
204384: 96 88 9c                 a1 = a1 * 0xffffffffffffff9c
204387: c8 87 07                 a0 = a0 + a1
204390: 97 77 21                 a0 = a0 << 0x21
204393: 95 09 f8                 a2 = ra + 0xfffffffffffffff8
204396: 98 7c 20                 a5 = a0 >> 0x20
204399: 64 90                    ra = a2
204401: 64 a7                    a0 = a3
204403: 82 1a 30                 a3 = u64 [sp + 0x30]
204406: 01                       fallthrough
      :                          @13988
204407: 33 08 9e 30 01           a1 = 0x1309e
204412: c8 b8 03                 t1 = a1 + a4
204415: c8 a9 09                 a2 = a2 + a3
204418: 7c 3a                    a3 = u8 [t1]
204420: 7c 3b 01                 a4 = u8 [t1 + 0x1]
204423: c8 86 06                 s1 = s1 + a1
204426: 7c 65 01                 s0 = u8 [s1 + 0x1]
204429: 7c 66                    s1 = u8 [s1]
204431: 78 9b 01                 u8 [a2 + 0x1] = a4
204434: 78 9a                    u8 [a2] = a3
204436: 78 25 fb                 u8 [t0 + 0xfffffffffffffffb] = s0
204439: 78 26 fa                 u8 [t0 + 0xfffffffffffffffa] = s1
204442: c8 84 04                 t2 = t2 + a1
204445: 7c 49                    a2 = u8 [t2]
204447: 7c 4a 01                 a3 = u8 [t2 + 0x1]
204450: c8 c8 08                 a1 = a1 + a5
204453: 7c 8b 01                 a4 = u8 [a1 + 0x1]
204456: 7c 88                    a1 = u8 [a1]
204458: 78 2a fd                 u8 [t0 + 0xfffffffffffffffd] = a3
204461: 78 29 fc                 u8 [t0 + 0xfffffffffffffffc] = a2
204464: 78 2b ff                 u8 [t0 + 0xffffffffffffffff] = a4
204467: 78 28 fe                 u8 [t0 + 0xfffffffffffffffe] = a1
204470: 82 15 28                 s0 = u64 [sp + 0x28]
204473: 01                       fallthrough
      :                          @13989
204474: 8b 78 04                 i32 a1 = a0 >> 0x4
204477: 53 28 71 02 76           jump @13992 if a1 <u 625
      :                          @13990
204482: 97 78 20                 a1 = a0 << 0x20
204485: 14 09 00 00 00 00 59 17 b7 d1 a2 = 0xd1b7175900000000
204495: d6 98 0b                 a4 = a1 mulhu a2
204498: 98 b2 2d                 t0 = a4 >> 0x2d
204501: 87 28 f0 d8 00           i32 a1 = t0 * 0xd8f0
204506: c8 87 07                 a0 = a0 + a1
204509: 97 78 30                 a1 = a0 << 0x30
204512: 98 88 32                 a1 = a1 >> 0x32
204515: 96 88 7b 14              a1 = a1 * 0x147b
204519: 98 89 10                 a2 = a1 >> 0x10
204522: 98 88 11                 a1 = a1 >> 0x11
204525: 96 88 9c                 a1 = a1 * 0xffffffffffffff9c
204528: c8 87 07                 a0 = a0 + a1
204531: 82 1b 30                 a4 = u64 [sp + 0x30]
204534: c8 b0 08                 a1 = ra + a4
204537: 95 00 fc                 ra = ra + 0xfffffffffffffffc
204540: 84 99 fe 07              a2 = a2 & 0x7fe
204544: 33 0a 9e 30 01           a3 = 0x1309e
204549: c8 a9 09                 a2 = a2 + a3
204552: c8 0b 0c                 a5 = a4 + ra
204555: 7c 96                    s1 = u8 [a2]
204557: 7c 99 01                 a2 = u8 [a2 + 0x1]
204560: 97 77 31                 a0 = a0 << 0x31
204563: 98 77 30                 a0 = a0 >> 0x30
204566: c8 a7 07                 a0 = a0 + a3
204569: 7c 7a 01                 a3 = u8 [a0 + 0x1]
204572: 7c 77                    a0 = u8 [a0]
204574: 78 c9 01                 u8 [a5 + 0x1] = a2
204577: 78 c6                    u8 [a5] = s1
204579: 78 8a ff                 u8 [a1 + 0xffffffffffffffff] = a3
204582: 78 87 fe                 u8 [a1 + 0xfffffffffffffffe] = a0
204585: 64 27                    a0 = t0
204587: 6e 28                    a1 = zext.h t0
204589: 55 18 64 0f              jump @13993 if a1 >=u 100
      :                          @13991
204593: 28 3f                    jump @13994
      :                          @13992
204595: 82 1b 30                 a4 = u64 [sp + 0x30]
204598: 6e 78                    a1 = zext.h a0
204600: 53 18 64 38              jump @13994 if a1 <u 100
      :                          @13993
204604: 97 78 30                 a1 = a0 << 0x30
204607: 98 88 32                 a1 = a1 >> 0x32
204610: 96 88 7b 14              a1 = a1 * 0x147b
204614: 98 88 11                 a1 = a1 >> 0x11
204617: 96 89 9c                 a2 = a1 * 0xffffffffffffff9c
204620: c8 97 07                 a0 = a0 + a2
204623: 97 77 31                 a0 = a0 << 0x31
204626: 98 77 30                 a0 = a0 >> 0x30
204629: 33 09 9e 30 01           a2 = 0x1309e
204634: c8 97 07                 a0 = a0 + a2
204637: 7c 79 01                 a2 = u8 [a0 + 0x1]
204640: 7c 77                    a0 = u8 [a0]
204642: 95 00 fe                 ra = ra + 0xfffffffffffffffe
204645: c8 0b 0a                 a3 = a4 + ra
204648: 78 a9 01                 u8 [a3 + 0x1] = a2
204651: 78 a7                    u8 [a3] = a0
204653: 64 87                    a0 = a1
204655: 01                       fallthrough
      :                          @13994
204656: 6e 78                    a1 = zext.h a0
204658: 33 09 0a                 a2 = 0xa
204661: ae 98 10                 jump @13996 if a1 >=u a2
      :                          @13995
204664: 95 02 ff                 t0 = ra + 0xffffffffffffffff
204667: c8 2b 08                 a1 = a4 + t0
204670: 83 77 30                 i32 a0 = a0 + 0x30
204673: 78 87                    u8 [a1] = a0
204675: 28 21                    jump @13997
      :                          @13996
204677: 97 77 31                 a0 = a0 << 0x31
204680: 98 77 30                 a0 = a0 >> 0x30
204683: 33 08 9e 30 01           a1 = 0x1309e
204688: c8 87 07                 a0 = a0 + a1
204691: 7c 78 01                 a1 = u8 [a0 + 0x1]
204694: 7c 77                    a0 = u8 [a0]
204696: 95 02 fe                 t0 = ra + 0xfffffffffffffffe
204699: c8 2b 09                 a2 = a4 + t0
204702: 78 98 01                 u8 [a2 + 0x1] = a1
204705: 78 97                    u8 [a2] = a0
204707: 01                       fallthrough
      :                          @13997
204708: 7b 52                    u64 [s0] = t0
204710: 82 10 48                 ra = u64 [sp + 0x48]
204713: 82 15 40                 s0 = u64 [sp + 0x40]
204716: 82 16 38                 s1 = u64 [sp + 0x38]
204719: 95 11 50                 sp = sp + 0x50
204722: 32 00                    ret
      :                          @13998
204724: 00                       trap
      :                          @13999 [@dyn 1600]
204725: 7c 79                    a2 = u8 [a0]
204727: 64 87                    a0 = a1
204729: 51 09 0e                 jump @14001 if a2 == 0
      :                          @14000
204732: 33 08 8c 04 01           a1 = 0x1048c
204737: 33 09 04                 a2 = 0x4
204740: 28 6a f0                 jump @13770
      :                          @14001
204743: 33 08 66 31 01           a1 = 0x13166
204748: 33 09 05                 a2 = 0x5
204751: 28 5f f0                 jump @13770
      :                          @14002 [@dyn 1601]
204754: 64 8a                    a3 = a1
204756: 82 89                    a2 = u64 [a1]
204758: 82 8b 10                 a4 = u64 [a1 + 0x10]
204761: 81 78                    a1 = i32 [a0]
204763: d4 b9 09                 a2 = a2 | a4
204766: 52 09 0e                 jump @14004 if a2 != 0
      :                          @14003
204769: 82 a9 28                 a2 = u64 [a3 + 0x28]
204772: 82 a7 20                 a0 = u64 [a3 + 0x20]
204775: 82 9c 20                 a5 = u64 [a2 + 0x20]
204778: 32 0c                    jump [a5]
      :                          @14004
204780: 95 11 f0                 sp = sp + 0xfffffffffffffff0
204783: 7b 10 08                 u64 [sp + 0x8] = ra
204786: 48 11 04                 u32 [sp + 4] = 0
204789: 55 28 80 00 0e           jump @14006 if a1 >=u 128
      :                          @14005
204794: 78 18 04                 u8 [sp + 0x4] = a1
204797: 33 09 01                 a2 = 0x1
204800: 28 80 00                 jump @14011
      :                          @14006
204803: 8b 87 0b                 i32 a0 = a1 >> 0xb
204806: 52 07 1c                 jump @14008 if a0 != 0
      :                          @14007
204809: 98 87 06                 a0 = a1 >> 0x6
204812: 86 77 c0 00              a0 = a0 | 0xc0
204816: 78 17 04                 u8 [sp + 0x4] = a0
204819: 84 87 3f                 a0 = a1 & 0x3f
204822: 86 77 80 00              a0 = a0 | 0x80
204826: 78 17 05                 u8 [sp + 0x5] = a0
204829: 33 09 02                 a2 = 0x2
204832: 28 60                    jump @14011
      :                          @14008
204834: 8b 87 10                 i32 a0 = a1 >> 0x10
204837: 52 07 29                 jump @14010 if a0 != 0
      :                          @14009
204840: 98 87 0c                 a0 = a1 >> 0xc
204843: 86 77 e0 00              a0 = a0 | 0xe0
204847: 78 17 04                 u8 [sp + 0x4] = a0
204850: 97 87 34                 a0 = a1 << 0x34
204853: 98 77 3a                 a0 = a0 >> 0x3a
204856: 95 77 80 00              a0 = a0 + 0x80
204860: 78 17 05                 u8 [sp + 0x5] = a0
204863: 84 87 3f                 a0 = a1 & 0x3f
204866: 86 77 80 00              a0 = a0 | 0x80
204870: 78 17 06                 u8 [sp + 0x6] = a0
204873: 33 09 03                 a2 = 0x3
204876: 28 34                    jump @14011
      :                          @14010
204878: 98 87 12                 a0 = a1 >> 0x12
204881: 86 77 f0 00              a0 = a0 | 0xf0
204885: 78 17 04                 u8 [sp + 0x4] = a0
204888: 97 87 2e                 a0 = a1 << 0x2e
204891: 98 77 3a                 a0 = a0 >> 0x3a
204894: 95 77 80 00              a0 = a0 + 0x80
204898: 78 17 05                 u8 [sp + 0x5] = a0
204901: 97 87 34                 a0 = a1 << 0x34
204904: 98 77 3a                 a0 = a0 >> 0x3a
204907: 95 77 80 00              a0 = a0 + 0x80
204911: 78 17 06                 u8 [sp + 0x6] = a0
204914: 84 87 3f                 a0 = a1 & 0x3f
204917: 86 77 80 00              a0 = a0 | 0x80
204921: 78 17 07                 u8 [sp + 0x7] = a0
204924: 33 09 04                 a2 = 0x4
204927: 01                       fallthrough
      :                          @14011
204928: 95 18 04                 a1 = sp + 0x4
204931: 64 a7                    a0 = a3
204933: 50 20 84 0c a9 ef        ra = 3204, jump @13770
      :                          @14012 [@dyn 1602]
204939: 82 10 08                 ra = u64 [sp + 0x8]
204942: 95 11 10                 sp = sp + 0x10
204945: 32 00                    ret
      :                          @14013
204947: 82 89 08                 a2 = u64 [a1 + 0x8]
204950: 51 09 78 01              jump @14044 if a2 == 0
      :                          @14014
204954: 95 11 d0                 sp = sp + 0xffffffffffffffd0
204957: 7b 10 28                 u64 [sp + 0x28] = ra
204960: 7b 15 20                 u64 [sp + 0x20] = s0
204963: 7b 16 18                 u64 [sp + 0x18] = s1
204966: 7b 17 10                 u64 [sp + 0x10] = a0
204969: 33 04                    t2 = 0
204971: 7b 18 08                 u64 [sp + 0x8] = a1
204974: 82 82                    t0 = u64 [a1]
204976: 33 08 6b 31 01           a1 = 0x1316b
204981: 33 03 04                 t1 = 0x4
204984: 33 07 40 30 01           a0 = 0x13040
204989: 28 2f                    jump @14019
      :                          @14015
204991: 84 3a e0                 a3 = t1 & 0xffffffffffffffe0
204994: 52 1a a0 1c 01           jump @14043 if a3 != 4294967200
      :                          @14016
204999: 95 4b 02                 a4 = t2 + 0x2
205002: d8 9b 0a                 a3 = a4 <u a2
205005: c8 b2 0c                 a5 = t0 + a4
205008: da a7 0c                 a5 = a0 if a3 == 0
205011: 7c ca                    a3 = u8 [a5]
205013: 84 aa c0 00              a3 = a3 & 0xc0
205017: 52 2a 80 00 05 01        jump @14043 if a3 != 128
      :                          @14017
205023: 95 4b 03                 a4 = t2 + 0x3
205026: 33 03 04                 t1 = 0x4
205029: 01                       fallthrough
      :                          @14018
205030: 64 b4                    t2 = a4
205032: ae 9b f6 00              jump @14043 if a4 >=u a2
      :                          @14019
205036: c8 42 0c                 a5 = t0 + t2
205039: 7c c0                    ra = u8 [a5]
205041: 6c 05                    s0 = sext.b ra
205043: 95 4b 01                 a4 = t2 + 0x1
205046: 59 05 f0                 jump @14018 if s0 >=s 0
      :                          @14020
205049: c8 08 06                 s1 = a1 + ra
205052: 7c 66                    s1 = u8 [s1]
205054: aa 36 28                 jump @14025 if s1 == t1
      :                          @14021
205057: 51 16 03 43              jump @14029 if s1 == 3
      :                          @14022
205061: 33 0a 02                 a3 = 0x2
205064: ab a6 d6 00              jump @14043 if s1 != a3
      :                          @14023
205068: d8 9b 06                 s1 = a4 <u a2
205071: c8 b2 0a                 a3 = t0 + a4
205074: da 67 0a                 a3 = a0 if s1 == 0
205077: 7c aa                    a3 = u8 [a3]
205079: 84 aa c0 00              a3 = a3 & 0xc0
205083: 52 2a 80 00 c3 00        jump @14043 if a3 != 128
      :                          @14024
205089: 95 4b 02                 a4 = t2 + 0x2
205092: 28 c2                    jump @14018
      :                          @14025
205094: d8 9b 0a                 a3 = a4 <u a2
205097: c8 b2 0c                 a5 = t0 + a4
205100: da a7 0c                 a5 = a0 if a3 == 0
205103: 7d c6                    s1 = i8 [a5]
205105: 51 20 f0 00 32           jump @14033 if ra == 240
      :                          @14026
205110: 52 20 f4 00 3a           jump @14035 if ra != 244
      :                          @14027
205115: 33 0a 8f                 a3 = 0xffffffffffffff8f
205118: af 6a 45                 jump @14036 if a3 >=s s1
      :                          @14028
205121: 28 9d 00                 jump @14043
      :                          @14029
205124: d8 9b 0a                 a3 = a4 <u a2
205127: c8 b2 0c                 a5 = t0 + a4
205130: da a7 0c                 a5 = a0 if a3 == 0
205133: 7d c3                    t1 = i8 [a5]
205135: 51 20 e0 00 70 ff        jump @14015 if ra == 224
      :                          @14030
205141: 52 20 ed 00 62           jump @14039 if ra != 237
      :                          @14031
205146: 33 0a 9f                 a3 = 0xffffffffffffff9f
205149: af 3a 6a ff              jump @14016 if a3 >=s t1
      :                          @14032
205153: 28 7d                    jump @14043
      :                          @14033
205155: 83 6a 70                 i32 a3 = s1 + 0x70
205158: 84 aa ff 00              a3 = a3 & 0xff
205162: 53 1a 30 19              jump @14036 if a3 <u 48
      :                          @14034
205166: 28 70                    jump @14043
      :                          @14035
205168: 83 55 0f                 i32 s0 = s0 + 0xf
205171: 84 5a ff 00              a3 = s0 & 0xff
205175: 88 aa 03                 a3 = a3 <u 0x3
205178: 89 6c c0                 a5 = s1 <s 0xffffffffffffffc0
205181: d2 ca 0a                 a3 = a3 & a5
205184: 51 0a 5e                 jump @14043 if a3 == 0
      :                          @14036
205187: 95 4b 02                 a4 = t2 + 0x2
205190: d8 9b 0a                 a3 = a4 <u a2
205193: c8 b2 0c                 a5 = t0 + a4
205196: da a7 0c                 a5 = a0 if a3 == 0
205199: 7c ca                    a3 = u8 [a5]
205201: 84 aa c0 00              a3 = a3 & 0xc0
205205: 52 2a 80 00 49           jump @14043 if a3 != 128
      :                          @14037
205210: 95 4b 03                 a4 = t2 + 0x3
205213: d8 9b 0a                 a3 = a4 <u a2
205216: c8 b2 0c                 a5 = t0 + a4
205219: da a7 0c                 a5 = a0 if a3 == 0
205222: 7c ca                    a3 = u8 [a5]
205224: 84 aa c0 00              a3 = a3 & 0xc0
205228: 52 2a 80 00 32           jump @14043 if a3 != 128
      :                          @14038
205233: 95 4b 04                 a4 = t2 + 0x4
205236: 28 32 ff                 jump @14018
      :                          @14039
205239: 83 5a 1f                 i32 a3 = s0 + 0x1f
205242: 84 aa ff 00              a3 = a3 & 0xff
205246: 55 1a 0c 0d              jump @14042 if a3 >=u 12
      :                          @14040
205250: 33 0a c0                 a3 = 0xffffffffffffffc0
205253: ad a3 02 ff              jump @14016 if t1 <s a3
      :                          @14041
205257: 28 15                    jump @14043
      :                          @14042
205259: 84 55 fe                 s0 = s0 & 0xfffffffffffffffe
205262: 95 55 12                 s0 = s0 + 0x12
205265: 88 5a 01                 a3 = s0 <u 0x1
205268: 89 3c c0                 a5 = t1 <s 0xffffffffffffffc0
205271: d2 ca 0a                 a3 = a3 & a5
205274: 52 0a ed fe              jump @14016 if a3 != 0
      :                          @14043
205278: c8 b2 07                 a0 = t0 + a4
205281: c9 b9 09                 a2 = a2 - a4
205284: 82 18 08                 a1 = u64 [sp + 0x8]
205287: 7b 87                    u64 [a1] = a0
205289: 7b 89 08                 u64 [a1 + 0x8] = a2
205292: c8 42 07                 a0 = t0 + t2
205295: c9 4b 0c                 a5 = a4 - t2
205298: 82 19 10                 a2 = u64 [sp + 0x10]
205301: 7b 92                    u64 [a2] = t0
205303: 7b 94 08                 u64 [a2 + 0x8] = t2
205306: 7b 97 10                 u64 [a2 + 0x10] = a0
205309: 7b 9c 18                 u64 [a2 + 0x18] = a5
205312: 82 10 28                 ra = u64 [sp + 0x28]
205315: 82 15 20                 s0 = u64 [sp + 0x20]
205318: 82 16 18                 s1 = u64 [sp + 0x18]
205321: 95 11 30                 sp = sp + 0x30
205324: 32 00                    ret
      :                          @14044
205326: 49 07                    u64 [a0 + 0] = 0
205328: 32 00                    ret
      :                          @14045 [@dyn 1603]
205330: 95 11 78 ff              sp = sp + 0xffffffffffffff78
205334: 7b 10 80 00              u64 [sp + 0x80] = ra
205338: 64 82                    t0 = a1
205340: 7c 77                    a0 = u8 [a0]
205342: 33 0a 81 00              a3 = 0x81
205346: 95 18 7f                 a1 = sp + 0x7f
205349: 33 03 37                 t1 = 0x37
205352: 01                       fallthrough
      :                          @14046
205353: 64 ab                    a4 = a3
205355: 84 7a 0f                 a3 = a0 & 0xf
205358: 97 77 38                 a0 = a0 << 0x38
205361: 98 77 3c                 a0 = a0 >> 0x3c
205364: 88 ac 0a                 a5 = a3 <u 0xa
205367: 33 09 30                 a2 = 0x30
205370: da c3 09                 a2 = t1 if a5 == 0
205373: be a9 09                 i32 a2 = a2 + a3
205376: 78 89                    u8 [a1] = a2
205378: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
205381: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
205384: 52 07 e1                 jump @14046 if a0 != 0
      :                          @14047
205387: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
205390: 56 27 80 00 2b           jump @14050 if a0 >u 128
      :                          @14048
205395: 9a ac 81 00              a5 = 0x81 - a3
205399: 64 1b                    a4 = sp
205401: c8 7b 0b                 a4 = a4 + a0
205404: 33 09 9a 30 01           a2 = 0x1309a
205409: 33 08 01                 a1 = 0x1
205412: 33 0a 02                 a3 = 0x2
205415: 64 27                    a0 = t0
205417: 50 20 88 0c 3a eb        ra = 3208, jump @13716
      :                          @14049 [@dyn 1604]
205423: 82 10 80 00              ra = u64 [sp + 0x80]
205427: 95 11 88 00              sp = sp + 0x88
205431: 32 00                    ret
      :                          @14050
205433: 00                       trap
      :                          @14051 [@dyn 1605]
205434: 95 11 78 ff              sp = sp + 0xffffffffffffff78
205438: 7b 10 80 00              u64 [sp + 0x80] = ra
205442: 64 82                    t0 = a1
205444: 81 7a                    a3 = i32 [a0]
205446: 33 08 81 00              a1 = 0x81
205450: 95 17 7f                 a0 = sp + 0x7f
205453: 33 03 57                 t1 = 0x57
205456: 01                       fallthrough
      :                          @14052
205457: 64 8b                    a4 = a1
205459: 8b ac 04                 i32 a5 = a3 >> 0x4
205462: 84 aa 0f                 a3 = a3 & 0xf
205465: 88 a8 0a                 a1 = a3 <u 0xa
205468: 33 09 30                 a2 = 0x30
205471: da 83 09                 a2 = t1 if a1 == 0
205474: be a9 09                 i32 a2 = a2 + a3
205477: 78 79                    u8 [a0] = a2
205479: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
205482: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
205485: 64 ca                    a3 = a5
205487: 52 0c e2                 jump @14052 if a5 != 0
      :                          @14053
205490: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
205493: 56 27 80 00 2b           jump @14056 if a0 >u 128
      :                          @14054
205498: 9a 8c 81 00              a5 = 0x81 - a1
205502: 64 1b                    a4 = sp
205504: c8 7b 0b                 a4 = a4 + a0
205507: 33 09 9a 30 01           a2 = 0x1309a
205512: 33 08 01                 a1 = 0x1
205515: 33 0a 02                 a3 = 0x2
205518: 64 27                    a0 = t0
205520: 50 20 8c 0c d3 ea        ra = 3212, jump @13716
      :                          @14055 [@dyn 1606]
205526: 82 10 80 00              ra = u64 [sp + 0x80]
205530: 95 11 88 00              sp = sp + 0x88
205534: 32 00                    ret
      :                          @14056
205536: 00                       trap
      :                          @14057 [@dyn 1607]
205537: 95 11 78 ff              sp = sp + 0xffffffffffffff78
205541: 7b 10 80 00              u64 [sp + 0x80] = ra
205545: 81 79                    a2 = i32 [a0]
205547: 64 82                    t0 = a1
205549: 33 08 81 00              a1 = 0x81
205553: 95 17 7f                 a0 = sp + 0x7f
205556: 01                       fallthrough
      :                          @14058
205557: 64 8a                    a3 = a1
205559: 8b 9b 01                 i32 a4 = a2 >> 0x1
205562: 84 99 01                 a2 = a2 & 0x1
205565: 86 98 30                 a1 = a2 | 0x30
205568: 78 78                    u8 [a0] = a1
205570: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
205573: 95 a8 ff                 a1 = a3 + 0xffffffffffffffff
205576: 64 b9                    a2 = a4
205578: 52 0b eb                 jump @14058 if a4 != 0
      :                          @14059
205581: 95 a7 fe                 a0 = a3 + 0xfffffffffffffffe
205584: 56 27 80 00 2b           jump @14062 if a0 >u 128
      :                          @14060
205589: 9a 8c 81 00              a5 = 0x81 - a1
205593: 64 1b                    a4 = sp
205595: c8 7b 0b                 a4 = a4 + a0
205598: 33 09 9c 30 01           a2 = 0x1309c
205603: 33 08 01                 a1 = 0x1
205606: 33 0a 02                 a3 = 0x2
205609: 64 27                    a0 = t0
205611: 50 20 90 0c 78 ea        ra = 3216, jump @13716
      :                          @14061 [@dyn 1608]
205617: 82 10 80 00              ra = u64 [sp + 0x80]
205621: 95 11 88 00              sp = sp + 0x88
205625: 32 00                    ret
      :                          @14062
205627: 00                       trap
      :                          @14063 [@dyn 1609]
205628: 81 77                    a0 = i32 [a0]
205630: 89 7a                    a3 = a0 <s 0
205632: 85 a9 01                 a2 = a3 ^ 0x1
205635: 97 7b 20                 a4 = a0 << 0x20
205638: 98 bb 20                 a4 = a4 >> 0x20
205641: 9a 77                    a0 = -a0
205643: da ab 07                 a0 = a4 if a3 == 0
205646: 64 8a                    a3 = a1
205648: 64 98                    a1 = a2
205650: 64 a9                    a2 = a3
205652: 28 21 e9                 jump @13706
      :                          @14064 [@dyn 1610]
205655: 82 79                    a2 = u64 [a0]
205657: 9a 97                    a0 = -a2
205659: e3 79 07                 a0 = maxs(a2, a0)
205662: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
205665: 98 99 3f                 a2 = a2 >> 0x3f
205668: 64 8a                    a3 = a1
205670: 64 98                    a1 = a2
205672: 64 a9                    a2 = a3
205674: 28 0b e9                 jump @13706
      :                          @14065
205677: 51 08 9b 00              jump @14086 if a1 == 0
      :                          @14066
205681: 64 79                    a2 = a0
205683: 7c 77                    a0 = u8 [a0]
205685: 51 07 91 00              jump @14085 if a0 == 0
      :                          @14067
205689: 51 27 ff 00 90 00        jump @14087 if a0 == 255
      :                          @14068
205695: 6c 7a                    a3 = sext.b a0
205697: 57 0a 09                 jump @14070 if a3 <s 0
      :                          @14069
205700: 33 0a                    a3 = 0
205702: 33 08                    a1 = 0
205704: 28 73                    jump @14084
      :                          @14070
205706: 55 27 c0 00 0d           jump @14072 if a0 >=u 192
      :                          @14071
205711: 33 0a 01                 a3 = 0x1
205714: 33 0b 80                 a4 = 0xffffffffffffff80
205717: 28 4a                    jump @14081
      :                          @14072
205719: 55 27 e0 00 0e           jump @14074 if a0 >=u 224
      :                          @14073
205724: 33 0a 02                 a3 = 0x2
205727: 33 0b 40 ff              a4 = 0xffffffffffffff40
205731: 28 3c                    jump @14081
      :                          @14074
205733: 55 27 f0 00 0e           jump @14076 if a0 >=u 240
      :                          @14075
205738: 33 0a 03                 a3 = 0x3
205741: 33 0b 20 ff              a4 = 0xffffffffffffff20
205745: 28 2e                    jump @14081
      :                          @14076
205747: 55 27 f8 00 0e           jump @14078 if a0 >=u 248
      :                          @14077
205752: 33 0a 04                 a3 = 0x4
205755: 33 0b 10 ff              a4 = 0xffffffffffffff10
205759: 28 20                    jump @14081
      :                          @14078
205761: 55 27 fc 00 0e           jump @14080 if a0 >=u 252
      :                          @14079
205766: 33 0a 05                 a3 = 0x5
205769: 33 0b 08 ff              a4 = 0xffffffffffffff08
205773: 28 12                    jump @14081
      :                          @14080
205775: 88 7a fe 00              a3 = a0 <u 0xfe
205779: 33 0b 04 ff              a4 = 0xffffffffffffff04
205783: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
205787: 85 aa 07                 a3 = a3 ^ 0x7
205790: 01                       fallthrough
      :                          @14081
205791: ae 8a 2b                 jump @14088 if a3 >=u a1
      :                          @14082
205794: 33 08                    a1 = 0
205796: c8 b7 07                 a0 = a0 + a4
205799: 64 ab                    a4 = a3
205801: 01                       fallthrough
      :                          @14083
205802: c8 b9 0c                 a5 = a2 + a4
205805: 7c cc                    a5 = u8 [a5]
205807: 97 88 08                 a1 = a1 << 0x8
205810: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
205813: d4 c8 08                 a1 = a1 | a5
205816: 52 0b f2                 jump @14083 if a4 != 0
      :                          @14084
205819: 8a a9 03                 i32 a2 = a3 << 0x3
205822: cf 97 07                 a0 = a0 << a2
205825: c8 87 07                 a0 = a0 + a1
205828: 32 00                    ret
      :                          @14085
205830: 32 00                    ret
      :                          @14086
205832: 00                       trap
      :                          @14087
205833: 00                       trap
      :                          @14088
205834: 00                       trap
      :                          @14089 [@dyn 1611]
205835: 95 11 d0                 sp = sp + 0xffffffffffffffd0
205838: 7b 10 28                 u64 [sp + 0x28] = ra
205841: 7b 15 20                 u64 [sp + 0x20] = s0
205844: 7b 16 18                 u64 [sp + 0x18] = s1
205847: 64 86                    s1 = a1
205849: 82 88 28                 a1 = u64 [a1 + 0x28]
205852: 82 6a 20                 a3 = u64 [s1 + 0x20]
205855: 82 8b 18                 a4 = u64 [a1 + 0x18]
205858: 64 75                    s0 = a0
205860: 33 08 58 30 01           a1 = 0x13058
205865: 33 09 01                 a2 = 0x1
205868: 64 a7                    a0 = a3
205870: b4 b0 02 98 0c           ra = 3224, jump [a4]
      :                          @14090 [@dyn 1612]
205875: 7b 16                    u64 [sp] = s1
205877: 78 17 08                 u8 [sp + 0x8] = a0
205880: 46 11 09                 u8 [sp + 9] = 0
205883: 7b 15 10                 u64 [sp + 0x10] = s0
205886: 33 09 9e 0c              a2 = 0xc9e
205890: 64 17                    a0 = sp
205892: 95 18 10                 a1 = sp + 0x10
205895: 50 20 9a 0c 7f f5        ra = 3226, jump @13954
      :                          @14091 [@dyn 1613]
205901: 33 07 01                 a0 = 0x1
205904: 7c 18 08                 a1 = u8 [sp + 0x8]
205907: 52 08 1b                 jump @14093 if a1 != 0
      :                          @14092
205910: 82 17                    a0 = u64 [sp]
205912: 82 78 28                 a1 = u64 [a0 + 0x28]
205915: 82 77 20                 a0 = u64 [a0 + 0x20]
205918: 82 8a 18                 a3 = u64 [a1 + 0x18]
205921: 33 08 99 30 01           a1 = 0x13099
205926: 33 09 01                 a2 = 0x1
205929: b4 a0 02 9c 0c           ra = 3228, jump [a3]
      :                          @14093 [@dyn 1614]
205934: 82 10 28                 ra = u64 [sp + 0x28]
205937: 82 15 20                 s0 = u64 [sp + 0x20]
205940: 82 16 18                 s1 = u64 [sp + 0x18]
205943: 95 11 30                 sp = sp + 0x30
205946: 32 00                    ret
      :                          @14094 [@dyn 1615]
205948: 95 11 78 ff              sp = sp + 0xffffffffffffff78
205952: 7b 10 80 00              u64 [sp + 0x80] = ra
205956: 64 82                    t0 = a1
205958: 80 88 34                 a1 = u32 [a1 + 0x34]
205961: 82 77                    a0 = u64 [a0]
205963: 84 89 10                 a2 = a1 & 0x10
205966: 52 09 1b                 jump @14097 if a2 != 0
      :                          @14095
205969: 84 88 20                 a1 = a1 & 0x20
205972: 52 08 46                 jump @14100 if a1 != 0
      :                          @14096
205975: 7c 77                    a0 = u8 [a0]
205977: 33 08 01                 a1 = 0x1
205980: 64 29                    a2 = t0
205982: 82 10 80 00              ra = u64 [sp + 0x80]
205986: 95 11 88 00              sp = sp + 0x88
205990: 28 cf e7                 jump @13706
      :                          @14097
205993: 7c 77                    a0 = u8 [a0]
205995: 33 0a 81 00              a3 = 0x81
205999: 95 18 7f                 a1 = sp + 0x7f
206002: 33 03 57                 t1 = 0x57
206005: 01                       fallthrough
      :                          @14098
206006: 64 ab                    a4 = a3
206008: 84 7a 0f                 a3 = a0 & 0xf
206011: 97 77 38                 a0 = a0 << 0x38
206014: 98 77 3c                 a0 = a0 >> 0x3c
206017: 88 ac 0a                 a5 = a3 <u 0xa
206020: 33 09 30                 a2 = 0x30
206023: da c3 09                 a2 = t1 if a5 == 0
206026: be a9 09                 i32 a2 = a2 + a3
206029: 78 89                    u8 [a1] = a2
206031: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
206034: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
206037: 52 07 e1                 jump @14098 if a0 != 0
      :                          @14099
206040: 28 31                    jump @14102
      :                          @14100
206042: 7c 77                    a0 = u8 [a0]
206044: 33 0a 81 00              a3 = 0x81
206048: 95 18 7f                 a1 = sp + 0x7f
206051: 33 03 37                 t1 = 0x37
206054: 01                       fallthrough
      :                          @14101
206055: 64 ab                    a4 = a3
206057: 84 7a 0f                 a3 = a0 & 0xf
206060: 97 77 38                 a0 = a0 << 0x38
206063: 98 77 3c                 a0 = a0 >> 0x3c
206066: 88 ac 0a                 a5 = a3 <u 0xa
206069: 33 09 30                 a2 = 0x30
206072: da c3 09                 a2 = t1 if a5 == 0
206075: be a9 09                 i32 a2 = a2 + a3
206078: 78 89                    u8 [a1] = a2
206080: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
206083: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
206086: 52 07 e1                 jump @14101 if a0 != 0
      :                          @14102
206089: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
206092: 56 27 80 00 2b           jump @14105 if a0 >u 128
      :                          @14103
206097: 9a ac 81 00              a5 = 0x81 - a3
206101: 64 1b                    a4 = sp
206103: c8 7b 0b                 a4 = a4 + a0
206106: 33 09 9a 30 01           a2 = 0x1309a
206111: 33 08 01                 a1 = 0x1
206114: 33 0a 02                 a3 = 0x2
206117: 64 27                    a0 = t0
206119: 50 20 a0 0c 7c e8        ra = 3232, jump @13716
      :                          @14104 [@dyn 1616]
206125: 82 10 80 00              ra = u64 [sp + 0x80]
206129: 95 11 88 00              sp = sp + 0x88
206133: 32 00                    ret
      :                          @14105
206135: 00                       trap
