// RO data = 4600/4600 bytes
// RW data = 232/1048864 bytes
// Stack size = 65536 bytes
// RO data = [66, 1, 0, 0, 68, 1, 0, 0, 76, 1, 0, 0, 84, 1, 0, 0, 92, 1, 0, 0, 98, 1, 0, 0, 106, 1, 0, 0, 114, 1, 0, 0, 122, 1, 0, 0, 128, 1, 0, 0, 134, 1, 0, 0, 144, 1, 0, 0, 152, 1, 0, 0, 160, 1, 0, 0, 166, 1, 0, 0, 174, 1, 0, 0, 182, 1, 0, 0, 188, 1, 0, 0, 196, 1, 0, 0, 208, 1, 0, 0, 216, 1, 0, 0, 224, 1, 0, 0, 236, 1, 0, 0, 244, 1, 0, 0, 252, 1, 0, 0, 4, 2, 0, 0, 12, 2, 0, 0, 20, 2, 0, 0, 26, 2, 0, 0, 34, 2, 0, 0, 42, 2, 0, 0, 50, 2, 0, 0, 56, 2, 0, 0, 64, 2, 0, 0, 66, 2, 0, 0, 72, 2, 0, 0, 78, 2, 0, 0, 84, 2, 0, 0, 92, 2, 0, 0, 100, 2, 0, 0, 102, 2, 0, 0, 122, 2, 0, 0, 130, 2, 0, 0, 136, 2, 0, 0, 154, 2, 0, 0, 162, 2, 0, 0, 170, 2, 0, 0, 178, 2, 0, 0, 186, 2, 0, 0, 194, 2, 0, 0, 202, 2, 0, 0, 210, 2, 0, 0, 218, 2, 0, 0, 41, 32, 61, 32, 44, 32, 115, 61, 110, 116, 116, 40, 32, 61, 32, 40, 102, 105, 98, 32, 83, 111, 109, 101, 93, 32, 61, 32, 116, 114, 117, 101, 110, 111, 110, 101, 78, 111, 110, 101, 44, 32, 101, 61, 44, 32, 114, 61, 32, 32, 32, 32, 44, 32, 100, 61, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 0, 0, 159, 36, 0, 0, 0, 0, 0, 0, 18, 110, 0, 0, 0, 0, 0, 0, 215, 224, 6, 0, 0, 0, 0, 0, 24, 61, 149, 0, 0, 0, 0, 0, 254, 145, 1, 107, 0, 0, 0, 0, 116, 114, 105, 98, 111, 110, 97, 99, 99, 105, 40, 0, 0, 0, 0, 0, 72, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 110, 97, 114, 97, 121, 97, 110, 97, 40, 0, 0, 0, 0, 0, 0, 0, 120, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 32, 115, 101, 110, 100, 101, 114, 61, 109, 111, 116, 122, 107, 105, 110, 40, 106, 97, 99, 111, 98, 105, 40, 32, 80, 65, 89, 76, 79, 65, 68, 32, 32, 97, 109, 111, 117, 110, 116, 61, 109, 111, 100, 95, 101, 120, 112, 40, 44, 32, 102, 110, 118, 49, 97, 61, 32, 114, 101, 115, 117, 108, 116, 61, 44, 32, 115, 105, 110, 226, 137, 136, 115, 117, 98, 95, 103, 99, 100, 40, 192, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 115, 95, 113, 117, 97, 100, 114, 97, 116, 105, 99, 95, 114, 101, 115, 105, 100, 117, 101, 40, 0, 0, 0, 40, 2, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 110, 116, 101, 103, 101, 114, 95, 108, 111, 103, 95, 100, 105, 118, 40, 110, 111, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 32, 105, 115, 95, 119, 105, 108, 115, 111, 110, 95, 112, 114, 105, 109, 101, 40, 105, 110, 116, 101, 103, 101, 114, 95, 108, 111, 103, 95, 109, 117, 108, 40, 99, 111, 105, 110, 95, 99, 104, 97, 110, 103, 101, 95, 109, 105, 110, 40, 144, 2, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 111, 118, 97, 121, 95, 115, 116, 114, 97, 115, 115, 101, 110, 40, 0, 0, 0, 0, 0, 0, 0, 224, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 102, 101, 114, 109, 97, 116, 95, 102, 97, 99, 116, 111, 114, 40, 0, 0, 24, 3, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 105, 102, 102, 105, 101, 32, 104, 101, 108, 108, 109, 97, 110, 32, 0, 72, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 108, 102, 115, 114, 32, 0, 0, 0, 104, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 98, 98, 115, 95, 110, 101, 120, 116, 32, 0, 0, 0, 0, 0, 0, 0, 128, 3, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 98, 105, 110, 95, 112, 97, 99, 107, 105, 110, 103, 95, 102, 102, 100, 32, 61, 32, 0, 0, 0, 0, 0, 0, 160, 3, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 98, 117, 114, 110, 115, 105, 100, 101, 95, 110, 101, 99, 107, 108, 97, 99, 101, 32, 100, 105, 115, 116, 105, 110, 99, 116, 32, 99, 111, 108, 111, 114, 105, 110, 103, 115, 32, 61, 32, 0, 200, 3, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 121, 111, 117, 110, 103, 95, 116, 97, 98, 108, 101, 97, 117, 120, 32, 195, 151, 32, 226, 134, 146, 32, 0, 0, 0, 4, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 15, 4, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 17, 4, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 102, 114, 111, 98, 101, 110, 105, 117, 115, 40, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 40, 41, 32, 109, 111, 100, 32, 32, 61, 32, 0, 0, 0, 0, 0, 136, 4, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 138, 4, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 144, 4, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 113, 95, 97, 110, 97, 108, 111, 103, 91, 93, 95, 0, 0, 0, 0, 0, 200, 4, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 209, 4, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 144, 4, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 99, 111, 110, 100, 105, 116, 105, 111, 110, 95, 110, 117, 109, 98, 101, 114, 95, 50, 120, 50, 32, 65, 61, 32, 61, 0, 0, 0, 0, 0, 0, 0, 8, 5, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 31, 5, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 112, 111, 108, 108, 97, 114, 100, 95, 114, 104, 111, 95, 98, 114, 101, 110, 116, 32, 0, 0, 0, 0, 0, 0, 72, 5, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 79, 110, 101, 68, 82, 97, 110, 103, 101, 84, 114, 101, 101, 81, 117, 101, 114, 121, 32, 91, 93, 32, 226, 134, 146, 32, 0, 0, 0, 0, 0, 0, 112, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 231, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 132, 5, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 114, 115, 97, 95, 107, 101, 121, 103, 101, 110, 32, 110, 61, 0, 0, 0, 192, 5, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 252, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 8, 1, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 61, 44, 32, 111, 107, 61, 0, 0, 6, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 216, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 2, 6, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 103, 102, 95, 99, 111, 101, 102, 102, 91, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 236, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 101, 103, 101, 110, 100, 114, 101, 95, 115, 121, 109, 98, 111, 108, 32, 40, 32, 47, 0, 0, 0, 0, 0, 120, 6, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 138, 6, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 117, 99, 97, 115, 95, 108, 101, 104, 109, 101, 114, 32, 77, 95, 32, 105, 115, 32, 112, 114, 105, 109, 101, 63, 32, 0, 0, 0, 0, 0, 0, 192, 6, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 207, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 108, 117, 99, 97, 115, 95, 115, 101, 113, 117, 101, 110, 99, 101, 32, 85, 95, 44, 86, 95, 32, 109, 111, 100, 32, 0, 0, 0, 0, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 17, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 20, 7, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 224, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 231, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 168, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 98, 97, 105, 108, 108, 105, 101, 95, 112, 115, 119, 32, 0, 0, 0, 0, 128, 7, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 207, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 110, 101, 119, 116, 111, 110, 95, 115, 113, 114, 116, 32, 0, 0, 0, 0, 176, 7, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 144, 4, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 100, 101, 116, 95, 98, 97, 114, 101, 105, 115, 115, 95, 51, 120, 51, 32, 100, 101, 116, 32, 61, 32, 0, 0, 224, 7, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 115, 109, 105, 116, 104, 95, 110, 111, 114, 109, 97, 108, 95, 102, 111, 114, 109, 95, 50, 120, 50, 32, 100, 105, 97, 103, 40, 0, 0, 0, 0, 0, 8, 8, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 168, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 104, 101, 114, 109, 105, 116, 101, 95, 110, 111, 114, 109, 97, 108, 95, 102, 111, 114, 109, 95, 50, 120, 50, 32, 72, 32, 61, 32, 91, 91, 93, 44, 91, 93, 93, 0, 0, 0, 0, 0, 88, 8, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 231, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 118, 8, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 231, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 121, 8, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 108, 108, 108, 95, 114, 101, 100, 117, 99, 101, 95, 50, 100, 32, 98, 49, 61, 44, 32, 98, 50, 61, 0, 0, 208, 8, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 225, 8, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 109, 111, 100, 95, 101, 120, 112, 95, 108, 97, 100, 100, 101, 114, 40, 0, 8, 9, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 116, 101, 105, 110, 95, 103, 99, 100, 40, 0, 0, 0, 0, 0, 0, 88, 9, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 160, 2, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 2, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 224, 16, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 115, 95, 112, 101, 114, 102, 101, 99, 116, 95, 115, 113, 117, 97, 114, 101, 40, 0, 0, 0, 0, 0, 0, 40, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 99, 111, 105, 110, 95, 99, 104, 97, 110, 103, 101, 95, 99, 111, 117, 110, 116, 40, 41, 61, 0, 0, 0, 0, 96, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 114, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 176, 2, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 114, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 44, 32, 109, 111, 100, 95, 105, 110, 118, 61, 0, 0, 0, 0, 0, 0, 224, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 231, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 231, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 114, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 184, 10, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 99, 114, 116, 50, 32, 61, 32, 0, 24, 11, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 103, 97, 114, 110, 101, 114, 32, 61, 32, 0, 0, 0, 0, 0, 0, 0, 48, 11, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 110, 116, 104, 95, 114, 111, 111, 116, 40, 0, 0, 0, 0, 0, 0, 0, 80, 11, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 231, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 220, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 97, 110, 103, 108, 101, 61, 32, 226, 134, 146, 32, 99, 111, 115, 226, 137, 136, 0, 0, 0, 0, 0, 0, 0, 176, 11, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 182, 11, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 248, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 108, 99, 103, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 248, 11, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 120, 111, 114, 115, 104, 105, 102, 116, 54, 52, 32, 61, 32, 0, 0, 0, 24, 12, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 112, 99, 103, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 56, 12, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 109, 119, 99, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 88, 12, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 99, 114, 99, 51, 50, 61, 44, 32, 97, 100, 108, 101, 114, 51, 50, 61, 44, 32, 109, 117, 114, 109, 117, 114, 51, 61, 44, 32, 106, 101, 110, 107, 105, 110, 115, 61, 0, 0, 0, 0, 120, 12, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 126, 12, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 232, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 136, 12, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 146, 12, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 101, 117, 108, 101, 114, 84, 111, 116, 105, 101, 110, 116, 32, 112, 104, 105, 40, 0, 0, 0, 0, 0, 0, 0, 240, 12, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 105, 110, 101, 97, 114, 95, 109, 117, 32, 110, 61, 44, 32, 91, 110, 93, 61, 0, 0, 0, 0, 0, 0, 40, 13, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 52, 13, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 83, 117, 109, 79, 102, 68, 105, 118, 105, 115, 111, 114, 115, 32, 115, 105, 103, 109, 97, 40, 0, 0, 0, 0, 96, 13, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 105, 118, 105, 115, 111, 114, 95, 99, 111, 117, 110, 116, 40, 0, 0, 152, 13, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 111, 98, 105, 117, 115, 40, 0, 200, 13, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 105, 114, 105, 99, 104, 108, 101, 116, 95, 99, 111, 110, 118, 111, 108, 117, 116, 105, 111, 110, 32, 40, 49, 32, 42, 32, 105, 100, 41, 40, 0, 240, 13, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 200, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 138, 6, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 244, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 168, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 2, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 208, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 144, 14, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 32, 32, 73, 84, 69, 82, 65, 84, 73, 79, 78, 83, 32, 0, 184, 14, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 195, 14, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 114, 117, 110, 95, 112, 114, 111, 103, 114, 97, 109, 32, 32, 103, 97, 115, 95, 117, 115, 101, 100, 32, 0, 0, 240, 14, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 195, 14, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 252, 14, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 228, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 240, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 88, 15, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 114, 15, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 184, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 129, 15, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 139, 15, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 145, 15, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 16, 16, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 41, 16, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 60, 3, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 62, 3, 0, 0, 0, 0, 0, 0, 68, 3, 0, 0, 0, 0, 0, 0, 76, 3, 0, 0, 0, 0, 0, 0, 41, 91, 0, 0, 0, 0, 0, 0, 118, 3, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 120, 3, 0, 0, 0, 0, 0, 0, 126, 3, 0, 0, 0, 0, 0, 0, 130, 3, 0, 0, 0, 0, 0, 0, 44, 32, 44, 10, 40, 40, 10, 44, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 102, 97, 108, 115, 101, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 185, 17, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 202, 17, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [29, 221, 108, 79, 145, 244, 69, 37, 11, 215, 163, 112, 61, 10, 215, 163, 29, 221, 108, 79, 145, 244, 69, 37, 195, 245, 40, 92, 143, 194, 245, 40, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 25, 134, 97, 24, 134, 97, 24, 134, 201, 66, 22, 178, 144, 133, 44, 100, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 165, 128, 102, 16, 64, 10, 104, 6, 67, 120, 180, 113, 196, 90, 124, 10, 0, 160, 163, 155, 237, 41, 146, 190, 243, 187, 108, 107, 170, 43, 62, 5, 225, 229, 20, 188, 156, 130, 151, 83, 195, 245, 40, 92, 143, 194, 245, 40, 219, 52, 182, 215, 130, 222, 27, 67, 143, 227, 56, 142, 227, 56, 142, 227, 229, 174, 159, 45, 86, 134, 111, 68, 75, 89, 134, 56, 214, 197, 109, 52, 11, 215, 163, 112, 61, 10, 215, 163, 37, 82, 6, 207, 112, 63, 80, 131, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128, 241, 222, 188, 154, 120, 86, 52, 18]
// Instructions = 16355
// Code size = 50530 bytes

      :                          @0
     0: 28 c2 a0 00 00           jump @2559
      :                          @1
     5: 28 d7 a4 00 00           jump @2634
      :                          @2
    10: 28 2e a7 00              jump @2683
      :                          @3 [@dyn 1]
    14: 95 11 d0                 sp = sp + 0xffffffffffffffd0
    17: 7b 10 28                 u64 [sp + 0x28] = ra
    20: 7b 15 20                 u64 [sp + 0x20] = s0
    23: 7b 16 18                 u64 [sp + 0x18] = s1
    26: 64 86                    s1 = a1
    28: 82 88 28                 a1 = u64 [a1 + 0x28]
    31: 82 75                    s0 = u64 [a0]
    33: 82 67 20                 a0 = u64 [s1 + 0x20]
    36: 82 8a 18                 a3 = u64 [a1 + 0x18]
    39: 33 08 a9 10 01           a1 = 0x110a9
    44: 33 09 01                 a2 = 0x1
    47: b4 a0 01 04              ra = 4, jump [a3]
      :                          @4 [@dyn 2]
    51: 7b 16                    u64 [sp] = s1
    53: 78 17 08                 u8 [sp + 0x8] = a0
    56: 46 11 09                 u8 [sp + 9] = 0
    59: 7b 15 10                 u64 [sp + 0x10] = s0
    62: 33 06 1c                 s1 = 0x1c
    65: 64 17                    a0 = sp
    67: 95 18 10                 a1 = sp + 0x10
    70: 33 09 1c                 a2 = 0x1c
    73: 50 10 06 f2 c0 00        ra = 6, jump @3156
      :                          @5 [@dyn 3]
    79: 95 55 08                 s0 = s0 + 0x8
    82: 7b 15 10                 u64 [sp + 0x10] = s0
    85: 64 17                    a0 = sp
    87: 95 18 10                 a1 = sp + 0x10
    90: 64 69                    a2 = s1
    92: 50 10 08 df c0 00        ra = 8, jump @3156
      :                          @6 [@dyn 4]
    98: 33 07 01                 a0 = 0x1
   101: 7c 18 08                 a1 = u8 [sp + 0x8]
   104: 52 08 1a                 jump @8 if a1 != 0
      :                          @7
   107: 82 17                    a0 = u64 [sp]
   109: 82 78 28                 a1 = u64 [a0 + 0x28]
   112: 82 77 20                 a0 = u64 [a0 + 0x20]
   115: 82 8a 18                 a3 = u64 [a1 + 0x18]
   118: 33 08 e9 10 01           a1 = 0x110e9
   123: 33 09 01                 a2 = 0x1
   126: b4 a0 01 0a              ra = 10, jump [a3]
      :                          @8 [@dyn 5]
   130: 82 10 28                 ra = u64 [sp + 0x28]
   133: 82 15 20                 s0 = u64 [sp + 0x20]
   136: 82 16 18                 s1 = u64 [sp + 0x18]
   139: 95 11 30                 sp = sp + 0x30
   142: 32 00                    ret
      :                          @9 [@dyn 6]
   144: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   147: 7b 10 38                 u64 [sp + 0x38] = ra
   150: 7b 15 30                 u64 [sp + 0x30] = s0
   153: 7b 16 28                 u64 [sp + 0x28] = s1
   156: 64 85                    s0 = a1
   158: 82 88 28                 a1 = u64 [a1 + 0x28]
   161: 82 76                    s1 = u64 [a0]
   163: 82 57 20                 a0 = u64 [s0 + 0x20]
   166: 82 8a 18                 a3 = u64 [a1 + 0x18]
   169: 33 08 a8 10 01           a1 = 0x110a8
   174: 33 09                    a2 = 0
   176: b4 a0 01 0e              ra = 14, jump [a3]
      :                          @10 [@dyn 7]
   180: 7b 15 08                 u64 [sp + 0x8] = s0
   183: 78 17 10                 u8 [sp + 0x10] = a0
   186: 49 01                    u64 [sp + 0] = 0
   188: 33 05 01                 s0 = 0x1
   191: 78 15 11                 u8 [sp + 0x11] = s0
   194: 7b 16 18                 u64 [sp + 0x18] = s1
   197: 95 66 08                 s1 = s1 + 0x8
   200: 7b 16 20                 u64 [sp + 0x20] = s1
   203: 33 06 18                 s1 = 0x18
   206: 64 17                    a0 = sp
   208: 95 18 18                 a1 = sp + 0x18
   211: 33 09 18                 a2 = 0x18
   214: 50 10 10 29 bf 00        ra = 16, jump @3140
      :                          @11 [@dyn 8]
   220: 64 17                    a0 = sp
   222: 95 18 20                 a1 = sp + 0x20
   225: 64 69                    a2 = s1
   227: 50 10 12 1c bf 00        ra = 18, jump @3140
      :                          @12 [@dyn 9]
   233: 82 17                    a0 = u64 [sp]
   235: 7c 18 10                 a1 = u8 [sp + 0x10]
   238: 51 07 57                 jump @20 if a0 == 0
      :                          @13
   241: 52 08 57                 jump @21 if a1 != 0
      :                          @14
   244: 7c 18 11                 a1 = u8 [sp + 0x11]
   247: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   250: 8e 77                    a0 = a0 >u 0
   252: 82 16 08                 s1 = u64 [sp + 0x8]
   255: 88 88 01                 a1 = a1 <u 0x1
   258: d4 87 07                 a0 = a0 | a1
   261: 52 07 27                 jump @18 if a0 != 0
      :                          @15
   264: 7c 67 34                 a0 = u8 [s1 + 0x34]
   267: 84 77 04                 a0 = a0 & 0x4
   270: 52 07 1e                 jump @18 if a0 != 0
      :                          @16
   273: 82 68 28                 a1 = u64 [s1 + 0x28]
   276: 82 67 20                 a0 = u64 [s1 + 0x20]
   279: 82 8a 18                 a3 = u64 [a1 + 0x18]
   282: 33 08 e7 10 01           a1 = 0x110e7
   287: 33 09 01                 a2 = 0x1
   290: 33 05 01                 s0 = 0x1
   293: b4 a0 01 14              ra = 20, jump [a3]
      :                          @17 [@dyn 10]
   297: 52 07 1f                 jump @21 if a0 != 0
      :                          @18
   300: 82 68 28                 a1 = u64 [s1 + 0x28]
   303: 82 67 20                 a0 = u64 [s1 + 0x20]
   306: 82 8a 18                 a3 = u64 [a1 + 0x18]
   309: 33 08 a8 10 01           a1 = 0x110a8
   314: 33 09 01                 a2 = 0x1
   317: b4 a0 01 16              ra = 22, jump [a3]
      :                          @19 [@dyn 11]
   321: 64 75                    s0 = a0
   323: 28 05                    jump @21
      :                          @20
   325: 8e 85                    s0 = a1 >u 0
   327: 01                       fallthrough
      :                          @21
   328: 64 57                    a0 = s0
   330: 82 10 38                 ra = u64 [sp + 0x38]
   333: 82 15 30                 s0 = u64 [sp + 0x30]
   336: 82 16 28                 s1 = u64 [sp + 0x28]
   339: 95 11 40                 sp = sp + 0x40
   342: 32 00                    ret
      :                          @22 [@dyn 12]
   344: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   348: 7b 10 80 00              u64 [sp + 0x80] = ra
   352: 64 82                    t0 = a1
   354: 80 88 34                 a1 = u32 [a1 + 0x34]
   357: 82 77                    a0 = u64 [a0]
   359: 84 89 10                 a2 = a1 & 0x10
   362: 52 09 1c                 jump @25 if a2 != 0
      :                          @23
   365: 84 88 20                 a1 = a1 & 0x20
   368: 52 08 46                 jump @28 if a1 != 0
      :                          @24
   371: 82 77                    a0 = u64 [a0]
   373: 33 08 01                 a1 = 0x1
   376: 64 29                    a2 = t0
   378: 82 10 80 00              ra = u64 [sp + 0x80]
   382: 95 11 88 00              sp = sp + 0x88
   386: 28 69 b2 00              jump @2909
      :                          @25
   390: 82 7a                    a3 = u64 [a0]
   392: 33 08 81 00              a1 = 0x81
   396: 95 17 7f                 a0 = sp + 0x7f
   399: 33 03 57                 t1 = 0x57
   402: 01                       fallthrough
      :                          @26
   403: 64 8b                    a4 = a1
   405: 98 ac 04                 a5 = a3 >> 0x4
   408: 84 aa 0f                 a3 = a3 & 0xf
   411: 88 a8 0a                 a1 = a3 <u 0xa
   414: 33 09 30                 a2 = 0x30
   417: da 83 09                 a2 = t1 if a1 == 0
   420: be a9 09                 i32 a2 = a2 + a3
   423: 78 79                    u8 [a0] = a2
   425: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   428: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   431: 64 ca                    a3 = a5
   433: 52 0c e2                 jump @26 if a5 != 0
      :                          @27
   436: 28 30                    jump @30
      :                          @28
   438: 82 7a                    a3 = u64 [a0]
   440: 33 08 81 00              a1 = 0x81
   444: 95 17 7f                 a0 = sp + 0x7f
   447: 33 03 37                 t1 = 0x37
   450: 01                       fallthrough
      :                          @29
   451: 64 8b                    a4 = a1
   453: 98 ac 04                 a5 = a3 >> 0x4
   456: 84 aa 0f                 a3 = a3 & 0xf
   459: 88 a8 0a                 a1 = a3 <u 0xa
   462: 33 09 30                 a2 = 0x30
   465: da 83 09                 a2 = t1 if a1 == 0
   468: be a9 09                 i32 a2 = a2 + a3
   471: 78 79                    u8 [a0] = a2
   473: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   476: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   479: 64 ca                    a3 = a5
   481: 52 0c e2                 jump @29 if a5 != 0
      :                          @30
   484: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   487: 56 27 80 00 2b           jump @33 if a0 >u 128
      :                          @31
   492: 9a 8c 81 00              a5 = 0x81 - a1
   496: 64 1b                    a4 = sp
   498: c8 7b 0b                 a4 = a4 + a0
   501: 33 09 ea 10 01           a2 = 0x110ea
   506: 33 08 01                 a1 = 0x1
   509: 33 0a 02                 a3 = 0x2
   512: 64 27                    a0 = t0
   514: 50 10 1a 17 b3 00        ra = 26, jump @2919
      :                          @32 [@dyn 13]
   520: 82 10 80 00              ra = u64 [sp + 0x80]
   524: 95 11 88 00              sp = sp + 0x88
   528: 32 00                    ret
      :                          @33
   530: 00                       trap
      :                          @34 [@dyn 14]
   531: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   535: 7b 10 80 00              u64 [sp + 0x80] = ra
   539: 64 82                    t0 = a1
   541: 80 88 34                 a1 = u32 [a1 + 0x34]
   544: 82 77                    a0 = u64 [a0]
   546: 84 89 10                 a2 = a1 & 0x10
   549: 52 09 24                 jump @37 if a2 != 0
      :                          @35
   552: 84 88 20                 a1 = a1 & 0x20
   555: 52 08 4e                 jump @40 if a1 != 0
      :                          @36
   558: 82 78                    a1 = u64 [a0]
   560: 9a 87                    a0 = -a1
   562: e3 78 07                 a0 = maxs(a1, a0)
   565: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
   568: 98 88 3f                 a1 = a1 >> 0x3f
   571: 64 29                    a2 = t0
   573: 82 10 80 00              ra = u64 [sp + 0x80]
   577: 95 11 88 00              sp = sp + 0x88
   581: 28 a6 b1 00              jump @2909
      :                          @37
   585: 82 7a                    a3 = u64 [a0]
   587: 33 08 81 00              a1 = 0x81
   591: 95 17 7f                 a0 = sp + 0x7f
   594: 33 03 57                 t1 = 0x57
   597: 01                       fallthrough
      :                          @38
   598: 64 8b                    a4 = a1
   600: 98 ac 04                 a5 = a3 >> 0x4
   603: 84 aa 0f                 a3 = a3 & 0xf
   606: 88 a8 0a                 a1 = a3 <u 0xa
   609: 33 09 30                 a2 = 0x30
   612: da 83 09                 a2 = t1 if a1 == 0
   615: be a9 09                 i32 a2 = a2 + a3
   618: 78 79                    u8 [a0] = a2
   620: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   623: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   626: 64 ca                    a3 = a5
   628: 52 0c e2                 jump @38 if a5 != 0
      :                          @39
   631: 28 30                    jump @42
      :                          @40
   633: 82 7a                    a3 = u64 [a0]
   635: 33 08 81 00              a1 = 0x81
   639: 95 17 7f                 a0 = sp + 0x7f
   642: 33 03 37                 t1 = 0x37
   645: 01                       fallthrough
      :                          @41
   646: 64 8b                    a4 = a1
   648: 98 ac 04                 a5 = a3 >> 0x4
   651: 84 aa 0f                 a3 = a3 & 0xf
   654: 88 a8 0a                 a1 = a3 <u 0xa
   657: 33 09 30                 a2 = 0x30
   660: da 83 09                 a2 = t1 if a1 == 0
   663: be a9 09                 i32 a2 = a2 + a3
   666: 78 79                    u8 [a0] = a2
   668: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   671: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   674: 64 ca                    a3 = a5
   676: 52 0c e2                 jump @41 if a5 != 0
      :                          @42
   679: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   682: 56 27 80 00 2b           jump @45 if a0 >u 128
      :                          @43
   687: 9a 8c 81 00              a5 = 0x81 - a1
   691: 64 1b                    a4 = sp
   693: c8 7b 0b                 a4 = a4 + a0
   696: 33 09 ea 10 01           a2 = 0x110ea
   701: 33 08 01                 a1 = 0x1
   704: 33 0a 02                 a3 = 0x2
   707: 64 27                    a0 = t0
   709: 50 10 1e 54 b2 00        ra = 30, jump @2919
      :                          @44 [@dyn 15]
   715: 82 10 80 00              ra = u64 [sp + 0x80]
   719: 95 11 88 00              sp = sp + 0x88
   723: 32 00                    ret
      :                          @45
   725: 00                       trap
      :                          @46 [@dyn 16]
   726: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   730: 7b 10 80 00              u64 [sp + 0x80] = ra
   734: 64 82                    t0 = a1
   736: 80 88 34                 a1 = u32 [a1 + 0x34]
   739: 84 89 10                 a2 = a1 & 0x10
   742: 52 09 1c                 jump @49 if a2 != 0
      :                          @47
   745: 84 88 20                 a1 = a1 & 0x20
   748: 52 08 46                 jump @52 if a1 != 0
      :                          @48
   751: 80 77                    a0 = u32 [a0]
   753: 33 08 01                 a1 = 0x1
   756: 64 29                    a2 = t0
   758: 82 10 80 00              ra = u64 [sp + 0x80]
   762: 95 11 88 00              sp = sp + 0x88
   766: 28 ed b0 00              jump @2909
      :                          @49
   770: 81 7a                    a3 = i32 [a0]
   772: 33 08 81 00              a1 = 0x81
   776: 95 17 7f                 a0 = sp + 0x7f
   779: 33 03 57                 t1 = 0x57
   782: 01                       fallthrough
      :                          @50
   783: 64 8b                    a4 = a1
   785: 8b ac 04                 i32 a5 = a3 >> 0x4
   788: 84 aa 0f                 a3 = a3 & 0xf
   791: 88 a8 0a                 a1 = a3 <u 0xa
   794: 33 09 30                 a2 = 0x30
   797: da 83 09                 a2 = t1 if a1 == 0
   800: be a9 09                 i32 a2 = a2 + a3
   803: 78 79                    u8 [a0] = a2
   805: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   808: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   811: 64 ca                    a3 = a5
   813: 52 0c e2                 jump @50 if a5 != 0
      :                          @51
   816: 28 30                    jump @54
      :                          @52
   818: 81 7a                    a3 = i32 [a0]
   820: 33 08 81 00              a1 = 0x81
   824: 95 17 7f                 a0 = sp + 0x7f
   827: 33 03 37                 t1 = 0x37
   830: 01                       fallthrough
      :                          @53
   831: 64 8b                    a4 = a1
   833: 8b ac 04                 i32 a5 = a3 >> 0x4
   836: 84 aa 0f                 a3 = a3 & 0xf
   839: 88 a8 0a                 a1 = a3 <u 0xa
   842: 33 09 30                 a2 = 0x30
   845: da 83 09                 a2 = t1 if a1 == 0
   848: be a9 09                 i32 a2 = a2 + a3
   851: 78 79                    u8 [a0] = a2
   853: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   856: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   859: 64 ca                    a3 = a5
   861: 52 0c e2                 jump @53 if a5 != 0
      :                          @54
   864: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   867: 56 27 80 00 2b           jump @57 if a0 >u 128
      :                          @55
   872: 9a 8c 81 00              a5 = 0x81 - a1
   876: 64 1b                    a4 = sp
   878: c8 7b 0b                 a4 = a4 + a0
   881: 33 09 ea 10 01           a2 = 0x110ea
   886: 33 08 01                 a1 = 0x1
   889: 33 0a 02                 a3 = 0x2
   892: 64 27                    a0 = t0
   894: 50 10 22 9b b1 00        ra = 34, jump @2919
      :                          @56 [@dyn 17]
   900: 82 10 80 00              ra = u64 [sp + 0x80]
   904: 95 11 88 00              sp = sp + 0x88
   908: 32 00                    ret
      :                          @57
   910: 00                       trap
      :                          @58 [@dyn 18]
   911: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   915: 7b 10 80 00              u64 [sp + 0x80] = ra
   919: 64 82                    t0 = a1
   921: 80 88 34                 a1 = u32 [a1 + 0x34]
   924: 84 89 10                 a2 = a1 & 0x10
   927: 52 09 1c                 jump @61 if a2 != 0
      :                          @59
   930: 84 88 20                 a1 = a1 & 0x20
   933: 52 08 46                 jump @64 if a1 != 0
      :                          @60
   936: 82 77                    a0 = u64 [a0]
   938: 33 08 01                 a1 = 0x1
   941: 64 29                    a2 = t0
   943: 82 10 80 00              ra = u64 [sp + 0x80]
   947: 95 11 88 00              sp = sp + 0x88
   951: 28 34 b0 00              jump @2909
      :                          @61
   955: 82 7a                    a3 = u64 [a0]
   957: 33 08 81 00              a1 = 0x81
   961: 95 17 7f                 a0 = sp + 0x7f
   964: 33 03 57                 t1 = 0x57
   967: 01                       fallthrough
      :                          @62
   968: 64 8b                    a4 = a1
   970: 98 ac 04                 a5 = a3 >> 0x4
   973: 84 aa 0f                 a3 = a3 & 0xf
   976: 88 a8 0a                 a1 = a3 <u 0xa
   979: 33 09 30                 a2 = 0x30
   982: da 83 09                 a2 = t1 if a1 == 0
   985: be a9 09                 i32 a2 = a2 + a3
   988: 78 79                    u8 [a0] = a2
   990: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   993: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   996: 64 ca                    a3 = a5
   998: 52 0c e2                 jump @62 if a5 != 0
      :                          @63
  1001: 28 30                    jump @66
      :                          @64
  1003: 82 7a                    a3 = u64 [a0]
  1005: 33 08 81 00              a1 = 0x81
  1009: 95 17 7f                 a0 = sp + 0x7f
  1012: 33 03 37                 t1 = 0x37
  1015: 01                       fallthrough
      :                          @65
  1016: 64 8b                    a4 = a1
  1018: 98 ac 04                 a5 = a3 >> 0x4
  1021: 84 aa 0f                 a3 = a3 & 0xf
  1024: 88 a8 0a                 a1 = a3 <u 0xa
  1027: 33 09 30                 a2 = 0x30
  1030: da 83 09                 a2 = t1 if a1 == 0
  1033: be a9 09                 i32 a2 = a2 + a3
  1036: 78 79                    u8 [a0] = a2
  1038: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1041: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  1044: 64 ca                    a3 = a5
  1046: 52 0c e2                 jump @65 if a5 != 0
      :                          @66
  1049: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  1052: 56 27 80 00 2b           jump @69 if a0 >u 128
      :                          @67
  1057: 9a 8c 81 00              a5 = 0x81 - a1
  1061: 64 1b                    a4 = sp
  1063: c8 7b 0b                 a4 = a4 + a0
  1066: 33 09 ea 10 01           a2 = 0x110ea
  1071: 33 08 01                 a1 = 0x1
  1074: 33 0a 02                 a3 = 0x2
  1077: 64 27                    a0 = t0
  1079: 50 10 26 e2 b0 00        ra = 38, jump @2919
      :                          @68 [@dyn 19]
  1085: 82 10 80 00              ra = u64 [sp + 0x80]
  1089: 95 11 88 00              sp = sp + 0x88
  1093: 32 00                    ret
      :                          @69
  1095: 00                       trap
      :                          @70 [@dyn 20]
  1096: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  1099: 7b 10 28                 u64 [sp + 0x28] = ra
  1102: 7b 15 20                 u64 [sp + 0x20] = s0
  1105: 7b 16 18                 u64 [sp + 0x18] = s1
  1108: 64 85                    s0 = a1
  1110: 82 88 28                 a1 = u64 [a1 + 0x28]
  1113: 82 5a 20                 a3 = u64 [s0 + 0x20]
  1116: 82 8b 18                 a4 = u64 [a1 + 0x18]
  1119: 64 76                    s1 = a0
  1121: 33 08 a9 10 01           a1 = 0x110a9
  1126: 33 09 01                 a2 = 0x1
  1129: 64 a7                    a0 = a3
  1131: b4 b0 01 2a              ra = 42, jump [a4]
      :                          @71 [@dyn 21]
  1135: 7b 15                    u64 [sp] = s0
  1137: 78 17 08                 u8 [sp + 0x8] = a0
  1140: 46 11 09                 u8 [sp + 9] = 0
  1143: 7b 16 10                 u64 [sp + 0x10] = s1
  1146: 33 05 b2 03              s0 = 0x3b2
  1150: 64 17                    a0 = sp
  1152: 95 18 10                 a1 = sp + 0x10
  1155: 33 09 b2 03              a2 = 0x3b2
  1159: 50 10 2c b4 bc 00        ra = 44, jump @3156
      :                          @72 [@dyn 22]
  1165: 95 67 01                 a0 = s1 + 0x1
  1168: 7b 17 10                 u64 [sp + 0x10] = a0
  1171: 64 17                    a0 = sp
  1173: 95 18 10                 a1 = sp + 0x10
  1176: 64 59                    a2 = s0
  1178: 50 10 2e a1 bc 00        ra = 46, jump @3156
      :                          @73 [@dyn 23]
  1184: 95 67 02                 a0 = s1 + 0x2
  1187: 7b 17 10                 u64 [sp + 0x10] = a0
  1190: 64 17                    a0 = sp
  1192: 95 18 10                 a1 = sp + 0x10
  1195: 64 59                    a2 = s0
  1197: 50 10 30 8e bc 00        ra = 48, jump @3156
      :                          @74 [@dyn 24]
  1203: 95 67 03                 a0 = s1 + 0x3
  1206: 7b 17 10                 u64 [sp + 0x10] = a0
  1209: 64 17                    a0 = sp
  1211: 95 18 10                 a1 = sp + 0x10
  1214: 64 59                    a2 = s0
  1216: 50 10 32 7b bc 00        ra = 50, jump @3156
      :                          @75 [@dyn 25]
  1222: 95 67 04                 a0 = s1 + 0x4
  1225: 7b 17 10                 u64 [sp + 0x10] = a0
  1228: 64 17                    a0 = sp
  1230: 95 18 10                 a1 = sp + 0x10
  1233: 64 59                    a2 = s0
  1235: 50 10 34 68 bc 00        ra = 52, jump @3156
      :                          @76 [@dyn 26]
  1241: 95 67 05                 a0 = s1 + 0x5
  1244: 7b 17 10                 u64 [sp + 0x10] = a0
  1247: 64 17                    a0 = sp
  1249: 95 18 10                 a1 = sp + 0x10
  1252: 64 59                    a2 = s0
  1254: 50 10 36 55 bc 00        ra = 54, jump @3156
      :                          @77 [@dyn 27]
  1260: 95 67 06                 a0 = s1 + 0x6
  1263: 7b 17 10                 u64 [sp + 0x10] = a0
  1266: 64 17                    a0 = sp
  1268: 95 18 10                 a1 = sp + 0x10
  1271: 64 59                    a2 = s0
  1273: 50 10 38 42 bc 00        ra = 56, jump @3156
      :                          @78 [@dyn 28]
  1279: 95 67 07                 a0 = s1 + 0x7
  1282: 7b 17 10                 u64 [sp + 0x10] = a0
  1285: 64 17                    a0 = sp
  1287: 95 18 10                 a1 = sp + 0x10
  1290: 64 59                    a2 = s0
  1292: 50 10 3a 2f bc 00        ra = 58, jump @3156
      :                          @79 [@dyn 29]
  1298: 95 67 08                 a0 = s1 + 0x8
  1301: 7b 17 10                 u64 [sp + 0x10] = a0
  1304: 64 17                    a0 = sp
  1306: 95 18 10                 a1 = sp + 0x10
  1309: 64 59                    a2 = s0
  1311: 50 10 3c 1c bc 00        ra = 60, jump @3156
      :                          @80 [@dyn 30]
  1317: 95 67 09                 a0 = s1 + 0x9
  1320: 7b 17 10                 u64 [sp + 0x10] = a0
  1323: 64 17                    a0 = sp
  1325: 95 18 10                 a1 = sp + 0x10
  1328: 64 59                    a2 = s0
  1330: 50 10 3e 09 bc 00        ra = 62, jump @3156
      :                          @81 [@dyn 31]
  1336: 95 67 0a                 a0 = s1 + 0xa
  1339: 7b 17 10                 u64 [sp + 0x10] = a0
  1342: 64 17                    a0 = sp
  1344: 95 18 10                 a1 = sp + 0x10
  1347: 64 59                    a2 = s0
  1349: 50 10 40 f6 bb 00        ra = 64, jump @3156
      :                          @82 [@dyn 32]
  1355: 95 67 0b                 a0 = s1 + 0xb
  1358: 7b 17 10                 u64 [sp + 0x10] = a0
  1361: 64 17                    a0 = sp
  1363: 95 18 10                 a1 = sp + 0x10
  1366: 64 59                    a2 = s0
  1368: 50 10 42 e3 bb 00        ra = 66, jump @3156
      :                          @83 [@dyn 33]
  1374: 95 67 0c                 a0 = s1 + 0xc
  1377: 7b 17 10                 u64 [sp + 0x10] = a0
  1380: 64 17                    a0 = sp
  1382: 95 18 10                 a1 = sp + 0x10
  1385: 64 59                    a2 = s0
  1387: 50 10 44 d0 bb 00        ra = 68, jump @3156
      :                          @84 [@dyn 34]
  1393: 95 67 0d                 a0 = s1 + 0xd
  1396: 7b 17 10                 u64 [sp + 0x10] = a0
  1399: 64 17                    a0 = sp
  1401: 95 18 10                 a1 = sp + 0x10
  1404: 64 59                    a2 = s0
  1406: 50 10 46 bd bb 00        ra = 70, jump @3156
      :                          @85 [@dyn 35]
  1412: 95 67 0e                 a0 = s1 + 0xe
  1415: 7b 17 10                 u64 [sp + 0x10] = a0
  1418: 64 17                    a0 = sp
  1420: 95 18 10                 a1 = sp + 0x10
  1423: 64 59                    a2 = s0
  1425: 50 10 48 aa bb 00        ra = 72, jump @3156
      :                          @86 [@dyn 36]
  1431: 95 67 0f                 a0 = s1 + 0xf
  1434: 7b 17 10                 u64 [sp + 0x10] = a0
  1437: 64 17                    a0 = sp
  1439: 95 18 10                 a1 = sp + 0x10
  1442: 64 59                    a2 = s0
  1444: 50 10 4a 97 bb 00        ra = 74, jump @3156
      :                          @87 [@dyn 37]
  1450: 95 67 10                 a0 = s1 + 0x10
  1453: 7b 17 10                 u64 [sp + 0x10] = a0
  1456: 64 17                    a0 = sp
  1458: 95 18 10                 a1 = sp + 0x10
  1461: 64 59                    a2 = s0
  1463: 50 10 4c 84 bb 00        ra = 76, jump @3156
      :                          @88 [@dyn 38]
  1469: 95 67 11                 a0 = s1 + 0x11
  1472: 7b 17 10                 u64 [sp + 0x10] = a0
  1475: 64 17                    a0 = sp
  1477: 95 18 10                 a1 = sp + 0x10
  1480: 64 59                    a2 = s0
  1482: 50 10 4e 71 bb 00        ra = 78, jump @3156
      :                          @89 [@dyn 39]
  1488: 95 67 12                 a0 = s1 + 0x12
  1491: 7b 17 10                 u64 [sp + 0x10] = a0
  1494: 64 17                    a0 = sp
  1496: 95 18 10                 a1 = sp + 0x10
  1499: 64 59                    a2 = s0
  1501: 50 10 50 5e bb 00        ra = 80, jump @3156
      :                          @90 [@dyn 40]
  1507: 95 67 13                 a0 = s1 + 0x13
  1510: 7b 17 10                 u64 [sp + 0x10] = a0
  1513: 64 17                    a0 = sp
  1515: 95 18 10                 a1 = sp + 0x10
  1518: 64 59                    a2 = s0
  1520: 50 10 52 4b bb 00        ra = 82, jump @3156
      :                          @91 [@dyn 41]
  1526: 95 67 14                 a0 = s1 + 0x14
  1529: 7b 17 10                 u64 [sp + 0x10] = a0
  1532: 64 17                    a0 = sp
  1534: 95 18 10                 a1 = sp + 0x10
  1537: 64 59                    a2 = s0
  1539: 50 10 54 38 bb 00        ra = 84, jump @3156
      :                          @92 [@dyn 42]
  1545: 95 67 15                 a0 = s1 + 0x15
  1548: 7b 17 10                 u64 [sp + 0x10] = a0
  1551: 64 17                    a0 = sp
  1553: 95 18 10                 a1 = sp + 0x10
  1556: 64 59                    a2 = s0
  1558: 50 10 56 25 bb 00        ra = 86, jump @3156
      :                          @93 [@dyn 43]
  1564: 95 67 16                 a0 = s1 + 0x16
  1567: 7b 17 10                 u64 [sp + 0x10] = a0
  1570: 64 17                    a0 = sp
  1572: 95 18 10                 a1 = sp + 0x10
  1575: 64 59                    a2 = s0
  1577: 50 10 58 12 bb 00        ra = 88, jump @3156
      :                          @94 [@dyn 44]
  1583: 95 67 17                 a0 = s1 + 0x17
  1586: 7b 17 10                 u64 [sp + 0x10] = a0
  1589: 64 17                    a0 = sp
  1591: 95 18 10                 a1 = sp + 0x10
  1594: 64 59                    a2 = s0
  1596: 50 10 5a ff ba 00        ra = 90, jump @3156
      :                          @95 [@dyn 45]
  1602: 95 67 18                 a0 = s1 + 0x18
  1605: 7b 17 10                 u64 [sp + 0x10] = a0
  1608: 64 17                    a0 = sp
  1610: 95 18 10                 a1 = sp + 0x10
  1613: 64 59                    a2 = s0
  1615: 50 10 5c ec ba 00        ra = 92, jump @3156
      :                          @96 [@dyn 46]
  1621: 95 67 19                 a0 = s1 + 0x19
  1624: 7b 17 10                 u64 [sp + 0x10] = a0
  1627: 64 17                    a0 = sp
  1629: 95 18 10                 a1 = sp + 0x10
  1632: 64 59                    a2 = s0
  1634: 50 10 5e d9 ba 00        ra = 94, jump @3156
      :                          @97 [@dyn 47]
  1640: 95 67 1a                 a0 = s1 + 0x1a
  1643: 7b 17 10                 u64 [sp + 0x10] = a0
  1646: 64 17                    a0 = sp
  1648: 95 18 10                 a1 = sp + 0x10
  1651: 64 59                    a2 = s0
  1653: 50 10 60 c6 ba 00        ra = 96, jump @3156
      :                          @98 [@dyn 48]
  1659: 95 67 1b                 a0 = s1 + 0x1b
  1662: 7b 17 10                 u64 [sp + 0x10] = a0
  1665: 64 17                    a0 = sp
  1667: 95 18 10                 a1 = sp + 0x10
  1670: 64 59                    a2 = s0
  1672: 50 10 62 b3 ba 00        ra = 98, jump @3156
      :                          @99 [@dyn 49]
  1678: 95 67 1c                 a0 = s1 + 0x1c
  1681: 7b 17 10                 u64 [sp + 0x10] = a0
  1684: 64 17                    a0 = sp
  1686: 95 18 10                 a1 = sp + 0x10
  1689: 64 59                    a2 = s0
  1691: 50 10 64 a0 ba 00        ra = 100, jump @3156
      :                          @100 [@dyn 50]
  1697: 95 67 1d                 a0 = s1 + 0x1d
  1700: 7b 17 10                 u64 [sp + 0x10] = a0
  1703: 64 17                    a0 = sp
  1705: 95 18 10                 a1 = sp + 0x10
  1708: 64 59                    a2 = s0
  1710: 50 10 66 8d ba 00        ra = 102, jump @3156
      :                          @101 [@dyn 51]
  1716: 95 67 1e                 a0 = s1 + 0x1e
  1719: 7b 17 10                 u64 [sp + 0x10] = a0
  1722: 64 17                    a0 = sp
  1724: 95 18 10                 a1 = sp + 0x10
  1727: 64 59                    a2 = s0
  1729: 50 10 68 7a ba 00        ra = 104, jump @3156
      :                          @102 [@dyn 52]
  1735: 95 66 1f                 s1 = s1 + 0x1f
  1738: 7b 16 10                 u64 [sp + 0x10] = s1
  1741: 64 17                    a0 = sp
  1743: 95 18 10                 a1 = sp + 0x10
  1746: 64 59                    a2 = s0
  1748: 50 10 6a 67 ba 00        ra = 106, jump @3156
      :                          @103 [@dyn 53]
  1754: 33 07 01                 a0 = 0x1
  1757: 7c 18 08                 a1 = u8 [sp + 0x8]
  1760: 52 08 1a                 jump @105 if a1 != 0
      :                          @104
  1763: 82 17                    a0 = u64 [sp]
  1765: 82 78 28                 a1 = u64 [a0 + 0x28]
  1768: 82 77 20                 a0 = u64 [a0 + 0x20]
  1771: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1774: 33 08 e9 10 01           a1 = 0x110e9
  1779: 33 09 01                 a2 = 0x1
  1782: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @105 [@dyn 54]
  1786: 82 10 28                 ra = u64 [sp + 0x28]
  1789: 82 15 20                 s0 = u64 [sp + 0x20]
  1792: 82 16 18                 s1 = u64 [sp + 0x18]
  1795: 95 11 30                 sp = sp + 0x30
  1798: 32 00                    ret
      :                          @106 [@dyn 55]
  1800: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  1803: 7b 10 30                 u64 [sp + 0x30] = ra
  1806: 7b 15 28                 u64 [sp + 0x28] = s0
  1809: 7b 16 20                 u64 [sp + 0x20] = s1
  1812: 64 86                    s1 = a1
  1814: 82 88 28                 a1 = u64 [a1 + 0x28]
  1817: 82 6a 20                 a3 = u64 [s1 + 0x20]
  1820: 82 8b 18                 a4 = u64 [a1 + 0x18]
  1823: 64 75                    s0 = a0
  1825: 33 08 a9 10 01           a1 = 0x110a9
  1830: 33 09 01                 a2 = 0x1
  1833: 64 a7                    a0 = a3
  1835: b4 b0 01 70              ra = 112, jump [a4]
      :                          @107 [@dyn 56]
  1839: 7b 16 08                 u64 [sp + 0x8] = s1
  1842: 78 17 10                 u8 [sp + 0x10] = a0
  1845: 46 11 11                 u8 [sp + 17] = 0
  1848: 33 06 80 00              s1 = 0x80
  1852: 33 07 b2 03              a0 = 0x3b2
  1856: 7b 17                    u64 [sp] = a0
  1858: 01                       fallthrough
      :                          @108
  1859: 7b 15 18                 u64 [sp + 0x18] = s0
  1862: 95 17 08                 a0 = sp + 0x8
  1865: 95 18 18                 a1 = sp + 0x18
  1868: 82 19                    a2 = u64 [sp]
  1870: 50 10 72 ed b9 00        ra = 114, jump @3156
      :                          @109 [@dyn 57]
  1876: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  1879: 95 55 01                 s0 = s0 + 0x1
  1882: 52 06 e9                 jump @108 if s1 != 0
      :                          @110
  1885: 7c 18 10                 a1 = u8 [sp + 0x10]
  1888: 33 07 01                 a0 = 0x1
  1891: 52 08 1b                 jump @112 if a1 != 0
      :                          @111
  1894: 82 17 08                 a0 = u64 [sp + 0x8]
  1897: 82 78 28                 a1 = u64 [a0 + 0x28]
  1900: 82 77 20                 a0 = u64 [a0 + 0x20]
  1903: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1906: 33 08 e9 10 01           a1 = 0x110e9
  1911: 33 09 01                 a2 = 0x1
  1914: b4 a0 01 74              ra = 116, jump [a3]
      :                          @112 [@dyn 58]
  1918: 82 10 30                 ra = u64 [sp + 0x30]
  1921: 82 15 28                 s0 = u64 [sp + 0x28]
  1924: 82 16 20                 s1 = u64 [sp + 0x20]
  1927: 95 11 38                 sp = sp + 0x38
  1930: 32 00                    ret
      :                          @113 [@dyn 59]
  1932: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  1935: 7b 10 28                 u64 [sp + 0x28] = ra
  1938: 7b 15 20                 u64 [sp + 0x20] = s0
  1941: 7b 16 18                 u64 [sp + 0x18] = s1
  1944: 64 85                    s0 = a1
  1946: 82 88 28                 a1 = u64 [a1 + 0x28]
  1949: 82 5a 20                 a3 = u64 [s0 + 0x20]
  1952: 82 8b 18                 a4 = u64 [a1 + 0x18]
  1955: 64 76                    s1 = a0
  1957: 33 08 a9 10 01           a1 = 0x110a9
  1962: 33 09 01                 a2 = 0x1
  1965: 64 a7                    a0 = a3
  1967: b4 b0 01 78              ra = 120, jump [a4]
      :                          @114 [@dyn 60]
  1971: 7b 15                    u64 [sp] = s0
  1973: 78 17 08                 u8 [sp + 0x8] = a0
  1976: 46 11 09                 u8 [sp + 9] = 0
  1979: 7b 16 10                 u64 [sp + 0x10] = s1
  1982: 33 05 02                 s0 = 0x2
  1985: 64 17                    a0 = sp
  1987: 95 18 10                 a1 = sp + 0x10
  1990: 33 09 02                 a2 = 0x2
  1993: 50 10 7a 72 b9 00        ra = 122, jump @3156
      :                          @115 [@dyn 61]
  1999: 95 66 10                 s1 = s1 + 0x10
  2002: 7b 16 10                 u64 [sp + 0x10] = s1
  2005: 64 17                    a0 = sp
  2007: 95 18 10                 a1 = sp + 0x10
  2010: 64 59                    a2 = s0
  2012: 50 10 7c 5f b9 00        ra = 124, jump @3156
      :                          @116 [@dyn 62]
  2018: 33 07 01                 a0 = 0x1
  2021: 7c 18 08                 a1 = u8 [sp + 0x8]
  2024: 52 08 1a                 jump @118 if a1 != 0
      :                          @117
  2027: 82 17                    a0 = u64 [sp]
  2029: 82 78 28                 a1 = u64 [a0 + 0x28]
  2032: 82 77 20                 a0 = u64 [a0 + 0x20]
  2035: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2038: 33 08 e9 10 01           a1 = 0x110e9
  2043: 33 09 01                 a2 = 0x1
  2046: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @118 [@dyn 63]
  2050: 82 10 28                 ra = u64 [sp + 0x28]
  2053: 82 15 20                 s0 = u64 [sp + 0x20]
  2056: 82 16 18                 s1 = u64 [sp + 0x18]
  2059: 95 11 30                 sp = sp + 0x30
  2062: 32 00                    ret
      :                          @119 [@dyn 64]
  2064: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  2067: 7b 10 28                 u64 [sp + 0x28] = ra
  2070: 7b 15 20                 u64 [sp + 0x20] = s0
  2073: 7b 16 18                 u64 [sp + 0x18] = s1
  2076: 64 85                    s0 = a1
  2078: 82 88 28                 a1 = u64 [a1 + 0x28]
  2081: 82 5a 20                 a3 = u64 [s0 + 0x20]
  2084: 82 8b 18                 a4 = u64 [a1 + 0x18]
  2087: 64 76                    s1 = a0
  2089: 33 08 a9 10 01           a1 = 0x110a9
  2094: 33 09 01                 a2 = 0x1
  2097: 64 a7                    a0 = a3
  2099: b4 b0 02 82 00           ra = 130, jump [a4]
      :                          @120 [@dyn 65]
  2104: 7b 15                    u64 [sp] = s0
  2106: 78 17 08                 u8 [sp + 0x8] = a0
  2109: 46 11 09                 u8 [sp + 9] = 0
  2112: 7b 16 10                 u64 [sp + 0x10] = s1
  2115: 33 05 18                 s0 = 0x18
  2118: 64 17                    a0 = sp
  2120: 95 18 10                 a1 = sp + 0x10
  2123: 33 09 18                 a2 = 0x18
  2126: 50 20 84 00 ed b8 00     ra = 132, jump @3156
      :                          @121 [@dyn 66]
  2133: 95 67 08                 a0 = s1 + 0x8
  2136: 7b 17 10                 u64 [sp + 0x10] = a0
  2139: 64 17                    a0 = sp
  2141: 95 18 10                 a1 = sp + 0x10
  2144: 64 59                    a2 = s0
  2146: 50 20 86 00 d9 b8 00     ra = 134, jump @3156
      :                          @122 [@dyn 67]
  2153: 95 67 10                 a0 = s1 + 0x10
  2156: 7b 17 10                 u64 [sp + 0x10] = a0
  2159: 64 17                    a0 = sp
  2161: 95 18 10                 a1 = sp + 0x10
  2164: 64 59                    a2 = s0
  2166: 50 20 88 00 c5 b8 00     ra = 136, jump @3156
      :                          @123 [@dyn 68]
  2173: 95 67 18                 a0 = s1 + 0x18
  2176: 7b 17 10                 u64 [sp + 0x10] = a0
  2179: 64 17                    a0 = sp
  2181: 95 18 10                 a1 = sp + 0x10
  2184: 64 59                    a2 = s0
  2186: 50 20 8a 00 b1 b8 00     ra = 138, jump @3156
      :                          @124 [@dyn 69]
  2193: 95 67 20                 a0 = s1 + 0x20
  2196: 7b 17 10                 u64 [sp + 0x10] = a0
  2199: 64 17                    a0 = sp
  2201: 95 18 10                 a1 = sp + 0x10
  2204: 64 59                    a2 = s0
  2206: 50 20 8c 00 9d b8 00     ra = 140, jump @3156
      :                          @125 [@dyn 70]
  2213: 95 67 28                 a0 = s1 + 0x28
  2216: 7b 17 10                 u64 [sp + 0x10] = a0
  2219: 64 17                    a0 = sp
  2221: 95 18 10                 a1 = sp + 0x10
  2224: 64 59                    a2 = s0
  2226: 50 20 8e 00 89 b8 00     ra = 142, jump @3156
      :                          @126 [@dyn 71]
  2233: 95 67 30                 a0 = s1 + 0x30
  2236: 7b 17 10                 u64 [sp + 0x10] = a0
  2239: 64 17                    a0 = sp
  2241: 95 18 10                 a1 = sp + 0x10
  2244: 64 59                    a2 = s0
  2246: 50 20 90 00 75 b8 00     ra = 144, jump @3156
      :                          @127 [@dyn 72]
  2253: 95 67 38                 a0 = s1 + 0x38
  2256: 7b 17 10                 u64 [sp + 0x10] = a0
  2259: 64 17                    a0 = sp
  2261: 95 18 10                 a1 = sp + 0x10
  2264: 64 59                    a2 = s0
  2266: 50 20 92 00 61 b8 00     ra = 146, jump @3156
      :                          @128 [@dyn 73]
  2273: 33 07 01                 a0 = 0x1
  2276: 7c 18 08                 a1 = u8 [sp + 0x8]
  2279: 52 08 1b                 jump @130 if a1 != 0
      :                          @129
  2282: 82 17                    a0 = u64 [sp]
  2284: 82 78 28                 a1 = u64 [a0 + 0x28]
  2287: 82 77 20                 a0 = u64 [a0 + 0x20]
  2290: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2293: 33 08 e9 10 01           a1 = 0x110e9
  2298: 33 09 01                 a2 = 0x1
  2301: b4 a0 02 94 00           ra = 148, jump [a3]
      :                          @130 [@dyn 74]
  2306: 82 10 28                 ra = u64 [sp + 0x28]
  2309: 82 15 20                 s0 = u64 [sp + 0x20]
  2312: 82 16 18                 s1 = u64 [sp + 0x18]
  2315: 95 11 30                 sp = sp + 0x30
  2318: 32 00                    ret
      :                          @131
  2320: 95 11 f8                 sp = sp + 0xfffffffffffffff8
  2323: 7b 15                    u64 [sp] = s0
  2325: 98 82 01                 t0 = a1 >> 0x1
  2328: 84 24 fe                 t2 = t0 & 0xfffffffffffffffe
  2331: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  2334: ae 89 c1 00              jump @140 if a2 >=u a1
      :                          @132
  2338: 95 8a ff                 a3 = a1 + 0xffffffffffffffff
  2341: 68 aa                    a3 = clz a3
  2343: 9c a3 ff                 t1 = 0xffffffffffffffff >> a3
  2346: 97 8a 0d                 a3 = a1 << 0xd
  2349: d3 8a 0a                 a3 = a3 ^ a1
  2352: 98 ab 07                 a4 = a3 >> 0x7
  2355: d3 ba 0a                 a3 = a3 ^ a4
  2358: 97 ab 11                 a4 = a3 << 0x11
  2361: d3 ab 0b                 a4 = a4 ^ a3
  2364: d2 3b 0a                 a3 = a4 & t1
  2367: d8 8a 0c                 a5 = a3 <u a1
  2370: 64 85                    s0 = a1
  2372: 94 c5                    s0 = 0 if a5 != 0
  2374: c9 5a 0a                 a3 = a3 - s0
  2377: ae 8a 94 00              jump @138 if a3 >=u a1
      :                          @133
  2381: 97 99 03                 a2 = a2 << 0x3
  2384: c8 79 09                 a2 = a2 + a0
  2387: 97 aa 03                 a3 = a3 << 0x3
  2390: c8 7a 0a                 a3 = a3 + a0
  2393: 82 ac                    a5 = u64 [a3]
  2395: 82 95                    s0 = u64 [a2]
  2397: 7b 9c                    u64 [a2] = a5
  2399: 7b a5                    u64 [a3] = s0
  2401: ae 84 7d                 jump @139 if t2 >=u a1
      :                          @134
  2404: 97 b9 0d                 a2 = a4 << 0xd
  2407: d3 b9 09                 a2 = a2 ^ a4
  2410: 98 9a 07                 a3 = a2 >> 0x7
  2413: d3 a9 09                 a2 = a2 ^ a3
  2416: 97 9b 11                 a4 = a2 << 0x11
  2419: d3 9b 0b                 a4 = a4 ^ a2
  2422: d2 3b 09                 a2 = a4 & t1
  2425: d8 89 0a                 a3 = a2 <u a1
  2428: 64 8c                    a5 = a1
  2430: 94 ac                    a5 = 0 if a3 != 0
  2432: c9 c9 0a                 a3 = a2 - a5
  2435: ae 8a 5a                 jump @138 if a3 >=u a1
      :                          @135
  2438: 97 44 03                 t2 = t2 << 0x3
  2441: 97 aa 03                 a3 = a3 << 0x3
  2444: c8 7a 0a                 a3 = a3 + a0
  2447: 82 a9                    a2 = u64 [a3]
  2449: c8 74 04                 t2 = t2 + a0
  2452: 82 4c                    a5 = u64 [t2]
  2454: 7b 49                    u64 [t2] = a2
  2456: 86 29 01                 a2 = t0 | 0x1
  2459: 7b ac                    u64 [a3] = a5
  2461: ae 89 42                 jump @140 if a2 >=u a1
      :                          @136
  2464: 97 ba 0d                 a3 = a4 << 0xd
  2467: d3 ba 0a                 a3 = a3 ^ a4
  2470: 98 ab 07                 a4 = a3 >> 0x7
  2473: d3 ba 0a                 a3 = a3 ^ a4
  2476: 97 ab 11                 a4 = a3 << 0x11
  2479: d3 ba 0a                 a3 = a3 ^ a4
  2482: d2 3a 0a                 a3 = a3 & t1
  2485: d8 8a 0b                 a4 = a3 <u a1
  2488: 64 8c                    a5 = a1
  2490: 94 bc                    a5 = 0 if a4 != 0
  2492: c9 ca 0a                 a3 = a3 - a5
  2495: ae 8a 1e                 jump @138 if a3 >=u a1
      :                          @137
  2498: 97 99 03                 a2 = a2 << 0x3
  2501: c8 79 09                 a2 = a2 + a0
  2504: 97 aa 03                 a3 = a3 << 0x3
  2507: c8 a7 07                 a0 = a0 + a3
  2510: 82 78                    a1 = u64 [a0]
  2512: 82 9a                    a3 = u64 [a2]
  2514: 7b 98                    u64 [a2] = a1
  2516: 7b 7a                    u64 [a0] = a3
  2518: 82 15                    s0 = u64 [sp]
  2520: 95 11 08                 sp = sp + 0x8
  2523: 32 00                    ret
      :                          @138
  2525: 00                       trap
      :                          @139
  2526: 00                       trap
      :                          @140
  2527: 00                       trap
      :                          @141
  2528: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  2531: 7b 10 28                 u64 [sp + 0x28] = ra
  2534: 7b 15 20                 u64 [sp + 0x20] = s0
  2537: 7b 16 18                 u64 [sp + 0x18] = s1
  2540: 33 09 32                 a2 = 0x32
  2543: 64 82                    t0 = a1
  2545: 64 73                    t1 = a0
  2547: ae 98 33                 jump @147 if a1 >=u a2
      :                          @142
  2550: 82 37 08                 a0 = u64 [t1 + 0x8]
  2553: 82 39                    a2 = u64 [t1]
  2555: 33 08 01                 a1 = 0x1
  2558: ac 79 64 02              jump @210 if a2 <u a0
      :                          @143
  2562: 95 39 10                 a2 = t1 + 0x10
  2565: 9a 26 02                 s1 = 0x2 - t0
  2568: 33 0b 01                 a4 = 0x1
  2571: 33 08 01                 a1 = 0x1
  2574: 01                       fallthrough
      :                          @144
  2575: c8 86 0a                 a3 = s1 + a1
  2578: aa ba 46 02              jump @209 if a3 == a4
      :                          @145
  2582: 64 7c                    a5 = a0
  2584: 82 97                    a0 = u64 [a2]
  2586: 95 88 01                 a1 = a1 + 0x1
  2589: 95 99 08                 a2 = a2 + 0x8
  2592: ae 7c ef                 jump @144 if a5 >=u a0
      :                          @146
  2595: 28 3f 02                 jump @210
      :                          @147
  2598: 82 37                    a0 = u64 [t1]
  2600: 82 38 08                 a1 = u64 [t1 + 0x8]
  2603: ae 87 0f                 jump @150 if a0 >=u a1
      :                          @148
  2606: 33 07 01                 a0 = 0x1
  2609: 33 06 01                 s1 = 0x1
  2612: ab 62 2b                 jump @154 if t0 != s1
      :                          @149
  2615: 28 32 02                 jump @211
      :                          @150
  2618: 95 39 10                 a2 = t1 + 0x10
  2621: 9a 2a 02                 a3 = 0x2 - t0
  2624: 33 07 01                 a0 = 0x1
  2627: 33 06 01                 s1 = 0x1
  2630: 01                       fallthrough
      :                          @151
  2631: c8 6a 0c                 a5 = a3 + s1
  2634: aa 7c 1f 02              jump @211 if a5 == a0
      :                          @152
  2638: 64 8b                    a4 = a1
  2640: 82 98                    a1 = u64 [a2]
  2642: 95 99 08                 a2 = a2 + 0x8
  2645: 95 66 01                 s1 = s1 + 0x1
  2648: ae 8b ef                 jump @151 if a4 >=u a1
      :                          @153
  2651: d8 26 07                 a0 = s1 <u t0
  2654: 01                       fallthrough
      :                          @154
  2655: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  2658: ae 29 20 02              jump @215 if a2 >=u t0
      :                          @155
  2662: 51 07 1b 02              jump @214 if a0 == 0
      :                          @156
  2666: 97 95 03                 s0 = a2 << 0x3
  2669: 97 67 03                 a0 = s1 << 0x3
  2672: c8 73 0a                 a3 = t1 + a0
  2675: 82 a7                    a0 = u64 [a3]
  2677: c8 35 05                 s0 = s0 + t1
  2680: 82 58                    a1 = u64 [s0]
  2682: 7b 57                    u64 [s0] = a0
  2684: 7b a8                    u64 [a3] = a1
  2686: 7b 12 08                 u64 [sp + 0x8] = t0
  2689: 7b 13 10                 u64 [sp + 0x10] = t1
  2692: 53 16 02 24              jump @160 if s1 <u 2
      :                          @157
  2696: 64 37                    a0 = t1
  2698: 64 68                    a1 = s1
  2700: 7b 1a                    u64 [sp] = a3
  2702: 50 20 96 00 98 04        ra = 150, jump @291
      :                          @158 [@dyn 75]
  2708: 82 17 10                 a0 = u64 [sp + 0x10]
  2711: 64 68                    a1 = s1
  2713: 50 20 98 00 98 05        ra = 152, jump @330
      :                          @159 [@dyn 76]
  2719: 82 1a                    a3 = u64 [sp]
  2721: 82 13 10                 t1 = u64 [sp + 0x10]
  2724: 82 12 08                 t0 = u64 [sp + 0x8]
  2727: 01                       fallthrough
      :                          @160
  2728: ae 26 d3 01              jump @213 if s1 >=u t0
      :                          @161
  2732: 82 59                    a2 = u64 [s0]
  2734: 82 a8                    a1 = u64 [a3]
  2736: 33 07 01                 a0 = 0x1
  2739: ac 89 1f                 jump @166 if a2 <u a1
      :                          @162
  2742: 95 a7 08                 a0 = a3 + 0x8
  2745: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  2748: 01                       fallthrough
      :                          @163
  2749: aa 69 96 01              jump @208 if a2 == s1
      :                          @164
  2753: 64 8a                    a3 = a1
  2755: 82 78                    a1 = u64 [a0]
  2757: 95 77 08                 a0 = a0 + 0x8
  2760: 95 66 01                 s1 = s1 + 0x1
  2763: ae 8a f2                 jump @163 if a3 >=u a1
      :                          @165
  2766: d8 26 07                 a0 = s1 <u t0
  2769: 01                       fallthrough
      :                          @166
  2770: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  2773: ae 29 ad 01              jump @215 if a2 >=u t0
      :                          @167
  2777: 51 07 a8 01              jump @214 if a0 == 0
      :                          @168
  2781: 97 95 03                 s0 = a2 << 0x3
  2784: 97 67 03                 a0 = s1 << 0x3
  2787: c8 73 0a                 a3 = t1 + a0
  2790: 82 a7                    a0 = u64 [a3]
  2792: c8 35 05                 s0 = s0 + t1
  2795: 82 58                    a1 = u64 [s0]
  2797: 7b 57                    u64 [s0] = a0
  2799: 7b a8                    u64 [a3] = a1
  2801: 53 16 02 24              jump @172 if s1 <u 2
      :                          @169
  2805: 64 37                    a0 = t1
  2807: 64 68                    a1 = s1
  2809: 7b 1a                    u64 [sp] = a3
  2811: 50 20 9a 00 2b 04        ra = 154, jump @291
      :                          @170 [@dyn 77]
  2817: 82 17 10                 a0 = u64 [sp + 0x10]
  2820: 64 68                    a1 = s1
  2822: 50 20 9c 00 2b 05        ra = 156, jump @330
      :                          @171 [@dyn 78]
  2828: 82 1a                    a3 = u64 [sp]
  2830: 82 13 10                 t1 = u64 [sp + 0x10]
  2833: 82 12 08                 t0 = u64 [sp + 0x8]
  2836: 01                       fallthrough
      :                          @172
  2837: ae 26 66 01              jump @213 if s1 >=u t0
      :                          @173
  2841: 82 59                    a2 = u64 [s0]
  2843: 82 a8                    a1 = u64 [a3]
  2845: 33 07 01                 a0 = 0x1
  2848: ac 89 1f                 jump @178 if a2 <u a1
      :                          @174
  2851: 95 a7 08                 a0 = a3 + 0x8
  2854: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  2857: 01                       fallthrough
      :                          @175
  2858: aa 69 29 01              jump @208 if a2 == s1
      :                          @176
  2862: 64 8a                    a3 = a1
  2864: 82 78                    a1 = u64 [a0]
  2866: 95 77 08                 a0 = a0 + 0x8
  2869: 95 66 01                 s1 = s1 + 0x1
  2872: ae 8a f2                 jump @175 if a3 >=u a1
      :                          @177
  2875: d8 26 07                 a0 = s1 <u t0
  2878: 01                       fallthrough
      :                          @178
  2879: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  2882: ae 29 40 01              jump @215 if a2 >=u t0
      :                          @179
  2886: 51 07 3b 01              jump @214 if a0 == 0
      :                          @180
  2890: 97 95 03                 s0 = a2 << 0x3
  2893: 97 67 03                 a0 = s1 << 0x3
  2896: c8 73 0a                 a3 = t1 + a0
  2899: 82 a7                    a0 = u64 [a3]
  2901: c8 35 05                 s0 = s0 + t1
  2904: 82 58                    a1 = u64 [s0]
  2906: 7b 57                    u64 [s0] = a0
  2908: 7b a8                    u64 [a3] = a1
  2910: 53 16 02 24              jump @184 if s1 <u 2
      :                          @181
  2914: 64 37                    a0 = t1
  2916: 64 68                    a1 = s1
  2918: 7b 1a                    u64 [sp] = a3
  2920: 50 20 9e 00 be 03        ra = 158, jump @291
      :                          @182 [@dyn 79]
  2926: 82 17 10                 a0 = u64 [sp + 0x10]
  2929: 64 68                    a1 = s1
  2931: 50 20 a0 00 be 04        ra = 160, jump @330
      :                          @183 [@dyn 80]
  2937: 82 1a                    a3 = u64 [sp]
  2939: 82 13 10                 t1 = u64 [sp + 0x10]
  2942: 82 12 08                 t0 = u64 [sp + 0x8]
  2945: 01                       fallthrough
      :                          @184
  2946: ae 26 f9 00              jump @213 if s1 >=u t0
      :                          @185
  2950: 82 59                    a2 = u64 [s0]
  2952: 82 a8                    a1 = u64 [a3]
  2954: 33 07 01                 a0 = 0x1
  2957: ac 89 1f                 jump @190 if a2 <u a1
      :                          @186
  2960: 95 a7 08                 a0 = a3 + 0x8
  2963: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  2966: 01                       fallthrough
      :                          @187
  2967: aa 69 bc 00              jump @208 if a2 == s1
      :                          @188
  2971: 64 8a                    a3 = a1
  2973: 82 78                    a1 = u64 [a0]
  2975: 95 77 08                 a0 = a0 + 0x8
  2978: 95 66 01                 s1 = s1 + 0x1
  2981: ae 8a f2                 jump @187 if a3 >=u a1
      :                          @189
  2984: d8 26 07                 a0 = s1 <u t0
  2987: 01                       fallthrough
      :                          @190
  2988: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  2991: ae 29 d3 00              jump @215 if a2 >=u t0
      :                          @191
  2995: 51 07 ce 00              jump @214 if a0 == 0
      :                          @192
  2999: 97 95 03                 s0 = a2 << 0x3
  3002: 97 67 03                 a0 = s1 << 0x3
  3005: c8 73 0a                 a3 = t1 + a0
  3008: 82 a7                    a0 = u64 [a3]
  3010: c8 35 05                 s0 = s0 + t1
  3013: 82 58                    a1 = u64 [s0]
  3015: 7b 57                    u64 [s0] = a0
  3017: 7b a8                    u64 [a3] = a1
  3019: 53 16 02 24              jump @196 if s1 <u 2
      :                          @193
  3023: 64 37                    a0 = t1
  3025: 64 68                    a1 = s1
  3027: 7b 1a                    u64 [sp] = a3
  3029: 50 20 a2 00 51 03        ra = 162, jump @291
      :                          @194 [@dyn 81]
  3035: 82 17 10                 a0 = u64 [sp + 0x10]
  3038: 64 68                    a1 = s1
  3040: 50 20 a4 00 51 04        ra = 164, jump @330
      :                          @195 [@dyn 82]
  3046: 82 1a                    a3 = u64 [sp]
  3048: 82 13 10                 t1 = u64 [sp + 0x10]
  3051: 82 12 08                 t0 = u64 [sp + 0x8]
  3054: 01                       fallthrough
      :                          @196
  3055: ae 26 8c 00              jump @213 if s1 >=u t0
      :                          @197
  3059: 82 59                    a2 = u64 [s0]
  3061: 82 a8                    a1 = u64 [a3]
  3063: 33 07 01                 a0 = 0x1
  3066: ac 89 1e                 jump @202 if a2 <u a1
      :                          @198
  3069: 95 a7 08                 a0 = a3 + 0x8
  3072: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  3075: 01                       fallthrough
      :                          @199
  3076: aa 69 4f                 jump @208 if a2 == s1
      :                          @200
  3079: 64 8a                    a3 = a1
  3081: 82 78                    a1 = u64 [a0]
  3083: 95 77 08                 a0 = a0 + 0x8
  3086: 95 66 01                 s1 = s1 + 0x1
  3089: ae 8a f3                 jump @199 if a3 >=u a1
      :                          @201
  3092: d8 26 07                 a0 = s1 <u t0
  3095: 01                       fallthrough
      :                          @202
  3096: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3099: ae 29 67                 jump @215 if a2 >=u t0
      :                          @203
  3102: 51 07 63                 jump @214 if a0 == 0
      :                          @204
  3105: 97 97 03                 a0 = a2 << 0x3
  3108: 97 68 03                 a1 = s1 << 0x3
  3111: c8 38 08                 a1 = a1 + t1
  3114: 82 8a                    a3 = u64 [a1]
  3116: c8 37 07                 a0 = a0 + t1
  3119: 82 7b                    a4 = u64 [a0]
  3121: 7b 7a                    u64 [a0] = a3
  3123: 7b 8b                    u64 [a1] = a4
  3125: 53 16 02 42              jump @212 if s1 <u 2
      :                          @205
  3129: 64 37                    a0 = t1
  3131: 64 68                    a1 = s1
  3133: 64 35                    s0 = t1
  3135: 50 20 a6 00 e7 02        ra = 166, jump @291
      :                          @206 [@dyn 83]
  3141: 64 57                    a0 = s0
  3143: 64 68                    a1 = s1
  3145: 50 20 a8 00 e8 03        ra = 168, jump @330
      :                          @207 [@dyn 84]
  3151: 33 07                    a0 = 0
  3153: 28 18                    jump @211
      :                          @208
  3155: 33 07 01                 a0 = 0x1
  3158: 28 13                    jump @211
      :                          @209
  3160: 64 28                    a1 = t0
  3162: d3 28 07                 a0 = a1 ^ t0
  3165: 88 77 01                 a0 = a0 <u 0x1
  3168: 28 09                    jump @211
      :                          @210
  3170: d3 28 07                 a0 = a1 ^ t0
  3173: 88 77 01                 a0 = a0 <u 0x1
  3176: 01                       fallthrough
      :                          @211
  3177: 82 10 28                 ra = u64 [sp + 0x28]
  3180: 82 15 20                 s0 = u64 [sp + 0x20]
  3183: 82 16 18                 s1 = u64 [sp + 0x18]
  3186: 95 11 30                 sp = sp + 0x30
  3189: 32 00                    ret
      :                          @212
  3191: 33 07                    a0 = 0
  3193: 28 f0                    jump @211
      :                          @213
  3195: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3198: ae 29 04                 jump @215 if a2 >=u t0
      :                          @214
  3201: 00                       trap
      :                          @215
  3202: 00                       trap
      :                          @216
  3203: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  3206: 7b 10 28                 u64 [sp + 0x28] = ra
  3209: 7b 15 20                 u64 [sp + 0x20] = s0
  3212: 7b 16 18                 u64 [sp + 0x18] = s1
  3215: 33 09 32                 a2 = 0x32
  3218: 64 82                    t0 = a1
  3220: 64 73                    t1 = a0
  3222: ae 98 33                 jump @222 if a1 >=u a2
      :                          @217
  3225: 82 37 08                 a0 = u64 [t1 + 0x8]
  3228: 82 39                    a2 = u64 [t1]
  3230: 33 08 01                 a1 = 0x1
  3233: ad 97 64 02              jump @285 if a0 <s a2
      :                          @218
  3237: 95 39 10                 a2 = t1 + 0x10
  3240: 9a 26 02                 s1 = 0x2 - t0
  3243: 33 0b 01                 a4 = 0x1
  3246: 33 08 01                 a1 = 0x1
  3249: 01                       fallthrough
      :                          @219
  3250: c8 86 0a                 a3 = s1 + a1
  3253: aa ba 46 02              jump @284 if a3 == a4
      :                          @220
  3257: 64 7c                    a5 = a0
  3259: 82 97                    a0 = u64 [a2]
  3261: 95 88 01                 a1 = a1 + 0x1
  3264: 95 99 08                 a2 = a2 + 0x8
  3267: af c7 ef                 jump @219 if a0 >=s a5
      :                          @221
  3270: 28 3f 02                 jump @285
      :                          @222
  3273: 82 37                    a0 = u64 [t1]
  3275: 82 38 08                 a1 = u64 [t1 + 0x8]
  3278: af 78 0f                 jump @225 if a1 >=s a0
      :                          @223
  3281: 33 07 01                 a0 = 0x1
  3284: 33 06 01                 s1 = 0x1
  3287: ab 62 2b                 jump @229 if t0 != s1
      :                          @224
  3290: 28 32 02                 jump @286
      :                          @225
  3293: 95 39 10                 a2 = t1 + 0x10
  3296: 9a 2a 02                 a3 = 0x2 - t0
  3299: 33 07 01                 a0 = 0x1
  3302: 33 06 01                 s1 = 0x1
  3305: 01                       fallthrough
      :                          @226
  3306: c8 6a 0c                 a5 = a3 + s1
  3309: aa 7c 1f 02              jump @286 if a5 == a0
      :                          @227
  3313: 64 8b                    a4 = a1
  3315: 82 98                    a1 = u64 [a2]
  3317: 95 99 08                 a2 = a2 + 0x8
  3320: 95 66 01                 s1 = s1 + 0x1
  3323: af b8 ef                 jump @226 if a1 >=s a4
      :                          @228
  3326: d8 26 07                 a0 = s1 <u t0
  3329: 01                       fallthrough
      :                          @229
  3330: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3333: ae 29 20 02              jump @290 if a2 >=u t0
      :                          @230
  3337: 51 07 1b 02              jump @289 if a0 == 0
      :                          @231
  3341: 97 95 03                 s0 = a2 << 0x3
  3344: 97 67 03                 a0 = s1 << 0x3
  3347: c8 73 0a                 a3 = t1 + a0
  3350: 82 a7                    a0 = u64 [a3]
  3352: c8 35 05                 s0 = s0 + t1
  3355: 82 58                    a1 = u64 [s0]
  3357: 7b 57                    u64 [s0] = a0
  3359: 7b a8                    u64 [a3] = a1
  3361: 7b 12 08                 u64 [sp + 0x8] = t0
  3364: 7b 13 10                 u64 [sp + 0x10] = t1
  3367: 53 16 02 24              jump @235 if s1 <u 2
      :                          @232
  3371: 64 37                    a0 = t1
  3373: 64 68                    a1 = s1
  3375: 7b 1a                    u64 [sp] = a3
  3377: 50 20 aa 00 a7 02        ra = 170, jump @317
      :                          @233 [@dyn 85]
  3383: 82 17 10                 a0 = u64 [sp + 0x10]
  3386: 64 68                    a1 = s1
  3388: 50 20 ac 00 4c 03        ra = 172, jump @340
      :                          @234 [@dyn 86]
  3394: 82 1a                    a3 = u64 [sp]
  3396: 82 13 10                 t1 = u64 [sp + 0x10]
  3399: 82 12 08                 t0 = u64 [sp + 0x8]
  3402: 01                       fallthrough
      :                          @235
  3403: ae 26 d3 01              jump @288 if s1 >=u t0
      :                          @236
  3407: 82 59                    a2 = u64 [s0]
  3409: 82 a8                    a1 = u64 [a3]
  3411: 33 07 01                 a0 = 0x1
  3414: ad 98 1f                 jump @241 if a1 <s a2
      :                          @237
  3417: 95 a7 08                 a0 = a3 + 0x8
  3420: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  3423: 01                       fallthrough
      :                          @238
  3424: aa 69 96 01              jump @283 if a2 == s1
      :                          @239
  3428: 64 8a                    a3 = a1
  3430: 82 78                    a1 = u64 [a0]
  3432: 95 77 08                 a0 = a0 + 0x8
  3435: 95 66 01                 s1 = s1 + 0x1
  3438: af a8 f2                 jump @238 if a1 >=s a3
      :                          @240
  3441: d8 26 07                 a0 = s1 <u t0
  3444: 01                       fallthrough
      :                          @241
  3445: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3448: ae 29 ad 01              jump @290 if a2 >=u t0
      :                          @242
  3452: 51 07 a8 01              jump @289 if a0 == 0
      :                          @243
  3456: 97 95 03                 s0 = a2 << 0x3
  3459: 97 67 03                 a0 = s1 << 0x3
  3462: c8 73 0a                 a3 = t1 + a0
  3465: 82 a7                    a0 = u64 [a3]
  3467: c8 35 05                 s0 = s0 + t1
  3470: 82 58                    a1 = u64 [s0]
  3472: 7b 57                    u64 [s0] = a0
  3474: 7b a8                    u64 [a3] = a1
  3476: 53 16 02 24              jump @247 if s1 <u 2
      :                          @244
  3480: 64 37                    a0 = t1
  3482: 64 68                    a1 = s1
  3484: 7b 1a                    u64 [sp] = a3
  3486: 50 20 ae 00 3a 02        ra = 174, jump @317
      :                          @245 [@dyn 87]
  3492: 82 17 10                 a0 = u64 [sp + 0x10]
  3495: 64 68                    a1 = s1
  3497: 50 20 b0 00 df 02        ra = 176, jump @340
      :                          @246 [@dyn 88]
  3503: 82 1a                    a3 = u64 [sp]
  3505: 82 13 10                 t1 = u64 [sp + 0x10]
  3508: 82 12 08                 t0 = u64 [sp + 0x8]
  3511: 01                       fallthrough
      :                          @247
  3512: ae 26 66 01              jump @288 if s1 >=u t0
      :                          @248
  3516: 82 59                    a2 = u64 [s0]
  3518: 82 a8                    a1 = u64 [a3]
  3520: 33 07 01                 a0 = 0x1
  3523: ad 98 1f                 jump @253 if a1 <s a2
      :                          @249
  3526: 95 a7 08                 a0 = a3 + 0x8
  3529: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  3532: 01                       fallthrough
      :                          @250
  3533: aa 69 29 01              jump @283 if a2 == s1
      :                          @251
  3537: 64 8a                    a3 = a1
  3539: 82 78                    a1 = u64 [a0]
  3541: 95 77 08                 a0 = a0 + 0x8
  3544: 95 66 01                 s1 = s1 + 0x1
  3547: af a8 f2                 jump @250 if a1 >=s a3
      :                          @252
  3550: d8 26 07                 a0 = s1 <u t0
  3553: 01                       fallthrough
      :                          @253
  3554: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3557: ae 29 40 01              jump @290 if a2 >=u t0
      :                          @254
  3561: 51 07 3b 01              jump @289 if a0 == 0
      :                          @255
  3565: 97 95 03                 s0 = a2 << 0x3
  3568: 97 67 03                 a0 = s1 << 0x3
  3571: c8 73 0a                 a3 = t1 + a0
  3574: 82 a7                    a0 = u64 [a3]
  3576: c8 35 05                 s0 = s0 + t1
  3579: 82 58                    a1 = u64 [s0]
  3581: 7b 57                    u64 [s0] = a0
  3583: 7b a8                    u64 [a3] = a1
  3585: 53 16 02 24              jump @259 if s1 <u 2
      :                          @256
  3589: 64 37                    a0 = t1
  3591: 64 68                    a1 = s1
  3593: 7b 1a                    u64 [sp] = a3
  3595: 50 20 b2 00 cd 01        ra = 178, jump @317
      :                          @257 [@dyn 89]
  3601: 82 17 10                 a0 = u64 [sp + 0x10]
  3604: 64 68                    a1 = s1
  3606: 50 20 b4 00 72 02        ra = 180, jump @340
      :                          @258 [@dyn 90]
  3612: 82 1a                    a3 = u64 [sp]
  3614: 82 13 10                 t1 = u64 [sp + 0x10]
  3617: 82 12 08                 t0 = u64 [sp + 0x8]
  3620: 01                       fallthrough
      :                          @259
  3621: ae 26 f9 00              jump @288 if s1 >=u t0
      :                          @260
  3625: 82 59                    a2 = u64 [s0]
  3627: 82 a8                    a1 = u64 [a3]
  3629: 33 07 01                 a0 = 0x1
  3632: ad 98 1f                 jump @265 if a1 <s a2
      :                          @261
  3635: 95 a7 08                 a0 = a3 + 0x8
  3638: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  3641: 01                       fallthrough
      :                          @262
  3642: aa 69 bc 00              jump @283 if a2 == s1
      :                          @263
  3646: 64 8a                    a3 = a1
  3648: 82 78                    a1 = u64 [a0]
  3650: 95 77 08                 a0 = a0 + 0x8
  3653: 95 66 01                 s1 = s1 + 0x1
  3656: af a8 f2                 jump @262 if a1 >=s a3
      :                          @264
  3659: d8 26 07                 a0 = s1 <u t0
  3662: 01                       fallthrough
      :                          @265
  3663: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3666: ae 29 d3 00              jump @290 if a2 >=u t0
      :                          @266
  3670: 51 07 ce 00              jump @289 if a0 == 0
      :                          @267
  3674: 97 95 03                 s0 = a2 << 0x3
  3677: 97 67 03                 a0 = s1 << 0x3
  3680: c8 73 0a                 a3 = t1 + a0
  3683: 82 a7                    a0 = u64 [a3]
  3685: c8 35 05                 s0 = s0 + t1
  3688: 82 58                    a1 = u64 [s0]
  3690: 7b 57                    u64 [s0] = a0
  3692: 7b a8                    u64 [a3] = a1
  3694: 53 16 02 24              jump @271 if s1 <u 2
      :                          @268
  3698: 64 37                    a0 = t1
  3700: 64 68                    a1 = s1
  3702: 7b 1a                    u64 [sp] = a3
  3704: 50 20 b6 00 60 01        ra = 182, jump @317
      :                          @269 [@dyn 91]
  3710: 82 17 10                 a0 = u64 [sp + 0x10]
  3713: 64 68                    a1 = s1
  3715: 50 20 b8 00 05 02        ra = 184, jump @340
      :                          @270 [@dyn 92]
  3721: 82 1a                    a3 = u64 [sp]
  3723: 82 13 10                 t1 = u64 [sp + 0x10]
  3726: 82 12 08                 t0 = u64 [sp + 0x8]
  3729: 01                       fallthrough
      :                          @271
  3730: ae 26 8c 00              jump @288 if s1 >=u t0
      :                          @272
  3734: 82 59                    a2 = u64 [s0]
  3736: 82 a8                    a1 = u64 [a3]
  3738: 33 07 01                 a0 = 0x1
  3741: ad 98 1e                 jump @277 if a1 <s a2
      :                          @273
  3744: 95 a7 08                 a0 = a3 + 0x8
  3747: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  3750: 01                       fallthrough
      :                          @274
  3751: aa 69 4f                 jump @283 if a2 == s1
      :                          @275
  3754: 64 8a                    a3 = a1
  3756: 82 78                    a1 = u64 [a0]
  3758: 95 77 08                 a0 = a0 + 0x8
  3761: 95 66 01                 s1 = s1 + 0x1
  3764: af a8 f3                 jump @274 if a1 >=s a3
      :                          @276
  3767: d8 26 07                 a0 = s1 <u t0
  3770: 01                       fallthrough
      :                          @277
  3771: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3774: ae 29 67                 jump @290 if a2 >=u t0
      :                          @278
  3777: 51 07 63                 jump @289 if a0 == 0
      :                          @279
  3780: 97 97 03                 a0 = a2 << 0x3
  3783: 97 68 03                 a1 = s1 << 0x3
  3786: c8 38 08                 a1 = a1 + t1
  3789: 82 8a                    a3 = u64 [a1]
  3791: c8 37 07                 a0 = a0 + t1
  3794: 82 7b                    a4 = u64 [a0]
  3796: 7b 7a                    u64 [a0] = a3
  3798: 7b 8b                    u64 [a1] = a4
  3800: 53 16 02 42              jump @287 if s1 <u 2
      :                          @280
  3804: 64 37                    a0 = t1
  3806: 64 68                    a1 = s1
  3808: 64 35                    s0 = t1
  3810: 50 20 ba 00 f6 00        ra = 186, jump @317
      :                          @281 [@dyn 93]
  3816: 64 57                    a0 = s0
  3818: 64 68                    a1 = s1
  3820: 50 20 bc 00 9c 01        ra = 188, jump @340
      :                          @282 [@dyn 94]
  3826: 33 07                    a0 = 0
  3828: 28 18                    jump @286
      :                          @283
  3830: 33 07 01                 a0 = 0x1
  3833: 28 13                    jump @286
      :                          @284
  3835: 64 28                    a1 = t0
  3837: d3 28 07                 a0 = a1 ^ t0
  3840: 88 77 01                 a0 = a0 <u 0x1
  3843: 28 09                    jump @286
      :                          @285
  3845: d3 28 07                 a0 = a1 ^ t0
  3848: 88 77 01                 a0 = a0 <u 0x1
  3851: 01                       fallthrough
      :                          @286
  3852: 82 10 28                 ra = u64 [sp + 0x28]
  3855: 82 15 20                 s0 = u64 [sp + 0x20]
  3858: 82 16 18                 s1 = u64 [sp + 0x18]
  3861: 95 11 30                 sp = sp + 0x30
  3864: 32 00                    ret
      :                          @287
  3866: 33 07                    a0 = 0
  3868: 28 f0                    jump @286
      :                          @288
  3870: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3873: ae 29 04                 jump @290 if a2 >=u t0
      :                          @289
  3876: 00                       trap
      :                          @290
  3877: 00                       trap
      :                          @291
  3878: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  3881: ae 8a 55                 jump @303 if a3 >=u a1
      :                          @292
  3884: ae 89 50                 jump @302 if a2 >=u a1
      :                          @293
  3887: 97 9a 03                 a3 = a2 << 0x3
  3890: c8 7a 0a                 a3 = a3 + a0
  3893: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
  3896: 28 15                    jump @297
      :                          @294
  3898: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
  3901: 7b c4                    u64 [a5] = t2
  3903: 28 05                    jump @296
      :                          @295
  3905: 7b c4                    u64 [a5] = t2
  3907: 01                       fallthrough
      :                          @296
  3908: 95 99 01                 a2 = a2 + 0x1
  3911: 95 22 08                 t0 = t0 + 0x8
  3914: aa 89 32                 jump @302 if a2 == a1
      :                          @297
  3917: 97 93 03                 t1 = a2 << 0x3
  3920: c8 73 03                 t1 = t1 + a0
  3923: 82 34                    t2 = u64 [t1]
  3925: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
  3928: ae 4c ec                 jump @296 if a5 >=u t2
      :                          @298
  3931: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  3934: 7b 3c                    u64 [t1] = a5
  3936: 64 2c                    a5 = t0
  3938: 51 0a d8                 jump @294 if a3 == 0
      :                          @299
  3941: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
  3944: ae 4b d9                 jump @295 if a4 >=u t2
      :                          @300
  3947: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3950: 7b cb                    u64 [a5] = a4
  3952: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
  3955: 52 0a f2                 jump @299 if a3 != 0
      :                          @301
  3958: 64 7c                    a5 = a0
  3960: 7b c4                    u64 [a5] = t2
  3962: 28 ca                    jump @296
      :                          @302
  3964: 32 00                    ret
      :                          @303
  3966: 00                       trap
      :                          @304
  3967: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  3970: ae 8a 55                 jump @316 if a3 >=u a1
      :                          @305
  3973: ae 89 50                 jump @315 if a2 >=u a1
      :                          @306
  3976: 97 9a 03                 a3 = a2 << 0x3
  3979: c8 7a 0a                 a3 = a3 + a0
  3982: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
  3985: 28 15                    jump @310
      :                          @307
  3987: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
  3990: 7b c4                    u64 [a5] = t2
  3992: 28 05                    jump @309
      :                          @308
  3994: 7b c4                    u64 [a5] = t2
  3996: 01                       fallthrough
      :                          @309
  3997: 95 99 01                 a2 = a2 + 0x1
  4000: 95 22 08                 t0 = t0 + 0x8
  4003: aa 89 32                 jump @315 if a2 == a1
      :                          @310
  4006: 97 93 03                 t1 = a2 << 0x3
  4009: c8 73 03                 t1 = t1 + a0
  4012: 82 34                    t2 = u64 [t1]
  4014: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
  4017: ae c4 ec                 jump @309 if t2 >=u a5
      :                          @311
  4020: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  4023: 7b 3c                    u64 [t1] = a5
  4025: 64 2c                    a5 = t0
  4027: 51 0a d8                 jump @307 if a3 == 0
      :                          @312
  4030: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
  4033: ae b4 d9                 jump @308 if t2 >=u a4
      :                          @313
  4036: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  4039: 7b cb                    u64 [a5] = a4
  4041: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
  4044: 52 0a f2                 jump @312 if a3 != 0
      :                          @314
  4047: 64 7c                    a5 = a0
  4049: 7b c4                    u64 [a5] = t2
  4051: 28 ca                    jump @309
      :                          @315
  4053: 32 00                    ret
      :                          @316
  4055: 00                       trap
      :                          @317
  4056: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  4059: ae 8a 55                 jump @329 if a3 >=u a1
      :                          @318
  4062: ae 89 50                 jump @328 if a2 >=u a1
      :                          @319
  4065: 97 9a 03                 a3 = a2 << 0x3
  4068: c8 7a 0a                 a3 = a3 + a0
  4071: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
  4074: 28 15                    jump @323
      :                          @320
  4076: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
  4079: 7b c4                    u64 [a5] = t2
  4081: 28 05                    jump @322
      :                          @321
  4083: 7b c4                    u64 [a5] = t2
  4085: 01                       fallthrough
      :                          @322
  4086: 95 99 01                 a2 = a2 + 0x1
  4089: 95 22 08                 t0 = t0 + 0x8
  4092: aa 89 32                 jump @328 if a2 == a1
      :                          @323
  4095: 97 93 03                 t1 = a2 << 0x3
  4098: c8 73 03                 t1 = t1 + a0
  4101: 82 34                    t2 = u64 [t1]
  4103: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
  4106: af c4 ec                 jump @322 if t2 >=s a5
      :                          @324
  4109: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  4112: 7b 3c                    u64 [t1] = a5
  4114: 64 2c                    a5 = t0
  4116: 51 0a d8                 jump @320 if a3 == 0
      :                          @325
  4119: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
  4122: af b4 d9                 jump @321 if t2 >=s a4
      :                          @326
  4125: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  4128: 7b cb                    u64 [a5] = a4
  4130: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
  4133: 52 0a f2                 jump @325 if a3 != 0
      :                          @327
  4136: 64 7c                    a5 = a0
  4138: 7b c4                    u64 [a5] = t2
  4140: 28 ca                    jump @322
      :                          @328
  4142: 32 00                    ret
      :                          @329
  4144: 00                       trap
      :                          @330
  4145: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4148: 82 79                    a2 = u64 [a0]
  4150: ae a9 50                 jump @339 if a2 >=u a3
      :                          @331
  4153: 7b 7a                    u64 [a0] = a3
  4155: 33 0b 03                 a4 = 0x3
  4158: 95 7a 08                 a3 = a0 + 0x8
  4161: ac b8 41                 jump @338 if a1 <u a4
      :                          @332
  4164: 82 7b 10                 a4 = u64 [a0 + 0x10]
  4167: ae b9 3b                 jump @338 if a2 >=u a4
      :                          @333
  4170: 97 8c 03                 a5 = a1 << 0x3
  4173: c8 7c 02                 t0 = a5 + a0
  4176: 7b ab                    u64 [a3] = a4
  4178: 33 0c 03                 a5 = 0x3
  4181: 95 22 f8                 t0 = t0 + 0xfffffffffffffff8
  4184: aa c8 24                 jump @337 if a1 == a5
      :                          @334
  4187: 95 7a 10                 a3 = a0 + 0x10
  4190: 9a 87 03                 a0 = 0x3 - a1
  4193: 33 08 04                 a1 = 0x4
  4196: 33 0c 04                 a5 = 0x4
  4199: 01                       fallthrough
      :                          @335
  4200: 82 ab 08                 a4 = u64 [a3 + 0x8]
  4203: ae b9 17                 jump @338 if a2 >=u a4
      :                          @336
  4206: 7b ab                    u64 [a3] = a4
  4208: 95 cc 01                 a5 = a5 + 0x1
  4211: c8 c7 0b                 a4 = a0 + a5
  4214: 95 aa 08                 a3 = a3 + 0x8
  4217: ab 8b ef                 jump @335 if a4 != a1
      :                          @337
  4220: 64 2a                    a3 = t0
  4222: 7b a9                    u64 [a3] = a2
  4224: 32 00                    ret
      :                          @338
  4226: 7b a9                    u64 [a3] = a2
  4228: 32 00                    ret
      :                          @339
  4230: 32 00                    ret
      :                          @340
  4232: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4235: 82 79                    a2 = u64 [a0]
  4237: af 9a 50                 jump @349 if a3 >=s a2
      :                          @341
  4240: 7b 7a                    u64 [a0] = a3
  4242: 33 0b 03                 a4 = 0x3
  4245: 95 7a 08                 a3 = a0 + 0x8
  4248: ac b8 41                 jump @348 if a1 <u a4
      :                          @342
  4251: 82 7b 10                 a4 = u64 [a0 + 0x10]
  4254: af 9b 3b                 jump @348 if a4 >=s a2
      :                          @343
  4257: 97 8c 03                 a5 = a1 << 0x3
  4260: c8 7c 02                 t0 = a5 + a0
  4263: 7b ab                    u64 [a3] = a4
  4265: 33 0c 03                 a5 = 0x3
  4268: 95 22 f8                 t0 = t0 + 0xfffffffffffffff8
  4271: aa c8 24                 jump @347 if a1 == a5
      :                          @344
  4274: 95 7a 10                 a3 = a0 + 0x10
  4277: 9a 87 03                 a0 = 0x3 - a1
  4280: 33 08 04                 a1 = 0x4
  4283: 33 0c 04                 a5 = 0x4
  4286: 01                       fallthrough
      :                          @345
  4287: 82 ab 08                 a4 = u64 [a3 + 0x8]
  4290: af 9b 17                 jump @348 if a4 >=s a2
      :                          @346
  4293: 7b ab                    u64 [a3] = a4
  4295: 95 cc 01                 a5 = a5 + 0x1
  4298: c8 c7 0b                 a4 = a0 + a5
  4301: 95 aa 08                 a3 = a3 + 0x8
  4304: ab 8b ef                 jump @345 if a4 != a1
      :                          @347
  4307: 64 2a                    a3 = t0
  4309: 7b a9                    u64 [a3] = a2
  4311: 32 00                    ret
      :                          @348
  4313: 7b a9                    u64 [a3] = a2
  4315: 32 00                    ret
      :                          @349
  4317: 32 00                    ret
      :                          @350
  4319: 95 11 60 fe              sp = sp + 0xfffffffffffffe60
  4323: 7b 10 98 01              u64 [sp + 0x198] = ra
  4327: 7b 15 90 01              u64 [sp + 0x190] = s0
  4331: 7b 16 88 01              u64 [sp + 0x188] = s1
  4335: 33 0b 15                 a4 = 0x15
  4338: 7b 1a 48                 u64 [sp + 0x48] = a3
  4341: 7b 19 58                 u64 [sp + 0x58] = a2
  4344: 64 80                    ra = a1
  4346: ae b8 2b                 jump @355 if a1 >=u a4
      :                          @351
  4349: 64 72                    t0 = a0
  4351: 01                       fallthrough
      :                          @352
  4352: 33 07 01                 a0 = 0x1
  4355: ae 07 10                 jump @354 if a0 >=u ra
      :                          @353
  4358: 33 09 01                 a2 = 0x1
  4361: 64 27                    a0 = t0
  4363: 64 08                    a1 = ra
  4365: 50 20 be 00 cb fe        ra = 190, jump @317
      :                          @354 [@dyn 95]
  4371: 82 10 98 01              ra = u64 [sp + 0x198]
  4375: 82 15 90 01              s0 = u64 [sp + 0x190]
  4379: 82 16 88 01              s1 = u64 [sp + 0x188]
  4383: 95 11 a0 01              sp = sp + 0x1a0
  4387: 32 00                    ret
      :                          @355
  4389: 7b 17 08                 u64 [sp + 0x8] = a0
  4392: 49 11 78 01              u64 [sp + 120] = 0x1
  4396: 33 05 01 01              s0 = 0x101
  4400: 33 07 01                 a0 = 0x1
  4403: 7b 10                    u64 [sp] = ra
  4405: 01                       fallthrough
      :                          @356
  4406: 82 18 78                 a1 = u64 [sp + 0x78]
  4409: d2 87 07                 a0 = a0 & a1
  4412: 7b 17 70                 u64 [sp + 0x70] = a0
  4415: 82 12 08                 t0 = u64 [sp + 0x8]
  4418: 01                       fallthrough
      :                          @357
  4419: 81 17 48                 a0 = i32 [sp + 0x48]
  4422: 51 07 b6 05              jump @453 if a0 == 0
      :                          @358
  4426: 82 17 78                 a0 = u64 [sp + 0x78]
  4429: 84 77 01                 a0 = a0 & 0x1
  4432: 7b 12 80 00              u64 [sp + 0x80] = t0
  4436: 51 07 74 02              jump @398 if a0 == 0
      :                          @359
  4440: 98 0b 02                 a4 = ra >> 0x2
  4443: 97 b6 01                 s1 = a4 << 0x1
  4446: c8 b6 03                 t1 = s1 + a4
  4449: 54 10 31 29              jump @362 if ra <=u 49
      :                          @360
  4453: 95 b5 ff                 s0 = a4 + 0xffffffffffffffff
  4456: 97 b7 03                 a0 = a4 << 0x3
  4459: c8 27 07                 a0 = a0 + t0
  4462: 97 58 03                 a1 = s0 << 0x3
  4465: c8 28 08                 a1 = a1 + t0
  4468: 82 79                    a2 = u64 [a0]
  4470: 82 88                    a1 = u64 [a1]
  4472: af 89 17                 jump @363 if a2 >=s a1
      :                          @361
  4475: 49 11 28 01              u64 [sp + 40] = 0x1
  4479: 64 94                    t2 = a2
  4481: 7b 15 50                 u64 [sp + 0x50] = s0
  4484: 64 b5                    s0 = a4
  4486: 64 89                    a2 = a1
  4488: 28 10                    jump @364
      :                          @362
  4490: 33 09                    a2 = 0
  4492: 28 1e 01                 jump @371
      :                          @363
  4495: 49 11 28                 u64 [sp + 40] = 0
  4498: 64 84                    t2 = a1
  4500: 7b 1b 50                 u64 [sp + 0x50] = a4
  4503: 01                       fallthrough
      :                          @364
  4504: 95 b8 01                 a1 = a4 + 0x1
  4507: 7b 18 40                 u64 [sp + 0x40] = a1
  4510: 97 88 03                 a1 = a1 << 0x3
  4513: 82 1b 80 00              a4 = u64 [sp + 0x80]
  4517: c8 b8 08                 a1 = a1 + a4
  4520: 82 87                    a0 = u64 [a1]
  4522: d9 97 02                 t0 = a0 <s a2
  4525: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
  4528: 97 68 03                 a1 = s1 << 0x3
  4531: c8 b8 08                 a1 = a1 + a4
  4534: 97 ac 03                 a5 = a3 << 0x3
  4537: c8 cb 0b                 a4 = a4 + a5
  4540: 82 8c                    a5 = u64 [a1]
  4542: 82 b8                    a1 = u64 [a4]
  4544: e5 97 07                 a0 = mins(a0, a2)
  4547: d9 47 09                 a2 = a0 <s t2
  4550: 7b 12 38                 u64 [sp + 0x38] = t0
  4553: 82 17 28                 a0 = u64 [sp + 0x28]
  4556: c8 27 07                 a0 = a0 + t0
  4559: c8 97 07                 a0 = a0 + a2
  4562: 7b 10 68                 u64 [sp + 0x68] = ra
  4565: 7b 15 60                 u64 [sp + 0x60] = s0
  4568: 7b 19 30                 u64 [sp + 0x30] = a2
  4571: af 8c 13                 jump @366 if a5 >=s a1
      :                          @365
  4574: 95 77 01                 a0 = a0 + 0x1
  4577: 7b 17 18                 u64 [sp + 0x18] = a0
  4580: 7b 1c 20                 u64 [sp + 0x20] = a5
  4583: 7b 1a 28                 u64 [sp + 0x28] = a3
  4586: 64 6a                    a3 = s1
  4588: 28 0e                    jump @367
      :                          @366
  4590: 7b 18 20                 u64 [sp + 0x20] = a1
  4593: 7b 16 28                 u64 [sp + 0x28] = s1
  4596: 64 c8                    a1 = a5
  4598: 7b 17 18                 u64 [sp + 0x18] = a0
  4601: 01                       fallthrough
      :                          @367
  4602: 86 66 01                 s1 = s1 | 0x1
  4605: 97 6b 03                 a4 = s1 << 0x3
  4608: 82 15 80 00              s0 = u64 [sp + 0x80]
  4612: c8 5b 0b                 a4 = a4 + s0
  4615: 82 bb                    a4 = u64 [a4]
  4617: d9 8b 07                 a0 = a4 <s a1
  4620: 95 34 ff                 t2 = t1 + 0xffffffffffffffff
  4623: 97 39 03                 a2 = t1 << 0x3
  4626: c8 59 09                 a2 = a2 + s0
  4629: 97 4c 03                 a5 = t2 << 0x3
  4632: c8 5c 0c                 a5 = a5 + s0
  4635: 82 92                    t0 = u64 [a2]
  4637: 82 c0                    ra = u64 [a5]
  4639: e5 8b 08                 a1 = mins(a4, a1)
  4642: 82 19 20                 a2 = u64 [sp + 0x20]
  4645: d9 98 09                 a2 = a1 <s a2
  4648: 7b 17 20                 u64 [sp + 0x20] = a0
  4651: 82 18 18                 a1 = u64 [sp + 0x18]
  4654: c8 87 07                 a0 = a0 + a1
  4657: c8 97 07                 a0 = a0 + a2
  4660: af 02 12                 jump @369 if t0 >=s ra
      :                          @368
  4663: 95 77 01                 a0 = a0 + 0x1
  4666: 7b 17 18                 u64 [sp + 0x18] = a0
  4669: 7b 12 10                 u64 [sp + 0x10] = t0
  4672: 64 47                    a0 = t2
  4674: 64 34                    t2 = t1
  4676: 28 0d                    jump @370
      :                          @369
  4678: 7b 10 10                 u64 [sp + 0x10] = ra
  4681: 7b 17 18                 u64 [sp + 0x18] = a0
  4684: 64 37                    a0 = t1
  4686: 64 20                    ra = t0
  4688: 01                       fallthrough
      :                          @370
  4689: 82 15 60                 s0 = u64 [sp + 0x60]
  4692: 82 1c 50                 a5 = u64 [sp + 0x50]
  4695: 82 18 40                 a1 = u64 [sp + 0x40]
  4698: 82 1b 38                 a4 = u64 [sp + 0x38]
  4701: da bc 08                 a1 = a5 if a4 == 0
  4704: 95 33 01                 t1 = t1 + 0x1
  4707: 97 3c 03                 a5 = t1 << 0x3
  4710: 82 12 80 00              t0 = u64 [sp + 0x80]
  4714: c8 2c 0c                 a5 = a5 + t0
  4717: 82 cc                    a5 = u64 [a5]
  4719: 82 1b 30                 a4 = u64 [sp + 0x30]
  4722: da b8 05                 s0 = a1 if a4 == 0
  4725: 82 18 28                 a1 = u64 [sp + 0x28]
  4728: 82 1b 20                 a4 = u64 [sp + 0x20]
  4731: da b8 06                 s1 = a1 if a4 == 0
  4734: da 96 0a                 a3 = s1 if a2 == 0
  4737: d9 0c 09                 a2 = a5 <s ra
  4740: db 93 07                 a0 = t1 if a2 != 0
  4743: e5 0c 0c                 a5 = mins(a5, ra)
  4746: 82 18 10                 a1 = u64 [sp + 0x10]
  4749: d9 8c 08                 a1 = a5 <s a1
  4752: db 84 07                 a0 = t2 if a1 != 0
  4755: c8 98 08                 a1 = a1 + a2
  4758: 82 19 18                 a2 = u64 [sp + 0x18]
  4761: c8 89 09                 a2 = a2 + a1
  4764: 64 73                    t1 = a0
  4766: 64 a6                    s1 = a3
  4768: 64 5b                    a4 = s0
  4770: 82 10 68                 ra = u64 [sp + 0x68]
  4773: 33 05 01 01              s0 = 0x101
  4777: 01                       fallthrough
      :                          @371
  4778: 97 67 03                 a0 = s1 << 0x3
  4781: c8 27 07                 a0 = a0 + t0
  4784: 97 b8 03                 a1 = a4 << 0x3
  4787: c8 82 0a                 a3 = t0 + a1
  4790: 82 78                    a1 = u64 [a0]
  4792: 82 a7                    a0 = u64 [a3]
  4794: af 78 0c                 jump @373 if a1 >=s a0
      :                          @372
  4797: 95 99 01                 a2 = a2 + 0x1
  4800: 64 8c                    a5 = a1
  4802: 64 ba                    a3 = a4
  4804: 28 0b                    jump @374
      :                          @373
  4806: 64 7c                    a5 = a0
  4808: 64 6a                    a3 = s1
  4810: 64 b6                    s1 = a4
  4812: 64 87                    a0 = a1
  4814: 01                       fallthrough
      :                          @374
  4815: 97 38 03                 a1 = t1 << 0x3
  4818: c8 28 08                 a1 = a1 + t0
  4821: 82 8b                    a4 = u64 [a1]
  4823: d9 7b 08                 a1 = a4 <s a0
  4826: e5 7b 07                 a0 = mins(a4, a0)
  4829: c8 89 09                 a2 = a2 + a1
  4832: af c7 09                 jump @377 if a0 >=s a5
      :                          @375
  4835: 55 19 0b 1a              jump @379 if a2 >=u 11
      :                          @376
  4839: 28 49                    jump @382
      :                          @377
  4841: da 8a 03                 t1 = a3 if a1 == 0
  4844: 64 36                    s1 = t1
  4846: 88 97 01                 a0 = a2 <u 0x1
  4849: 82 18 70                 a1 = u64 [sp + 0x70]
  4852: d2 87 07                 a0 = a0 & a1
  4855: 51 07 39                 jump @382 if a0 == 0
      :                          @378
  4858: 28 f0 00                 jump @400
      :                          @379
  4861: 98 07 01                 a0 = ra >> 0x1
  4864: 97 08 03                 a1 = ra << 0x3
  4867: c8 28 08                 a1 = a1 + t0
  4870: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  4873: 64 29                    a2 = t0
  4875: 01                       fallthrough
      :                          @380
  4876: 82 8a                    a3 = u64 [a1]
  4878: 82 9b                    a4 = u64 [a2]
  4880: 7b 9a                    u64 [a2] = a3
  4882: 7b 8b                    u64 [a1] = a4
  4884: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  4887: 95 99 08                 a2 = a2 + 0x8
  4890: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  4893: 52 07 ef                 jump @380 if a0 != 0
      :                          @381
  4896: 85 66 ff                 s1 = s1 ^ 0xffffffffffffffff
  4899: c8 06 06                 s1 = s1 + ra
  4902: 82 18 70                 a1 = u64 [sp + 0x70]
  4905: 84 87 01                 a0 = a1 & 0x1
  4908: 52 07 be 00              jump @400 if a0 != 0
      :                          @382
  4912: 97 67 03                 a0 = s1 << 0x3
  4915: 82 18 58                 a1 = u64 [sp + 0x58]
  4918: 51 08 d1 00              jump @403 if a1 == 0
      :                          @383
  4922: ae 06 d3 03              jump @455 if s1 >=u ra
      :                          @384
  4926: c8 72 08                 a1 = t0 + a0
  4929: 82 19 58                 a2 = u64 [sp + 0x58]
  4932: 82 9a                    a3 = u64 [a2]
  4934: 82 89                    a2 = u64 [a1]
  4936: ad 9a c3 00              jump @404 if a3 <s a2
      :                          @385
  4940: 82 27                    a0 = u64 [t0]
  4942: 7b 29                    u64 [t0] = a2
  4944: 7b 87                    u64 [a1] = a0
  4946: 82 28                    a1 = u64 [t0]
  4948: 33 07                    a0 = 0
  4950: 95 29 08                 a2 = t0 + 0x8
  4953: 95 0a ff                 a3 = ra + 0xffffffffffffffff
  4956: 54 0a 22                 jump @390 if a3 <=u 0
      :                          @386
  4959: 97 7b 03                 a4 = a0 << 0x3
  4962: c8 9b 0b                 a4 = a4 + a2
  4965: 01                       fallthrough
      :                          @387
  4966: 82 bc                    a5 = u64 [a4]
  4968: ad c8 16                 jump @390 if a1 <s a5
      :                          @388
  4971: 95 77 01                 a0 = a0 + 0x1
  4974: 95 bb 08                 a4 = a4 + 0x8
  4977: ab 7a f5                 jump @387 if a3 != a0
      :                          @389
  4980: 64 a7                    a0 = a3
  4982: 97 ab 03                 a4 = a3 << 0x3
  4985: c8 9b 0b                 a4 = a4 + a2
  4988: 28 09                    jump @391
      :                          @390
  4990: 97 ab 03                 a4 = a3 << 0x3
  4993: c8 9b 0b                 a4 = a4 + a2
  4996: 01                       fallthrough
      :                          @391
  4997: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  5000: ae a7 26                 jump @395 if a0 >=u a3
      :                          @392
  5003: 82 b6 f8                 s1 = u64 [a4 + 0xfffffffffffffff8]
  5006: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
  5009: 64 cb                    a4 = a5
  5011: ad 68 f2                 jump @391 if a1 <s s1
      :                          @393
  5014: 97 7b 03                 a4 = a0 << 0x3
  5017: c8 9b 0b                 a4 = a4 + a2
  5020: 82 b5                    s0 = u64 [a4]
  5022: 7b b6                    u64 [a4] = s1
  5024: 7b c5                    u64 [a5] = s0
  5026: 33 05 01 01              s0 = 0x101
  5030: 95 77 01                 a0 = a0 + 0x1
  5033: ac a7 b6                 jump @386 if a0 <u a3
      :                          @394
  5036: 28 d2                    jump @390
      :                          @395
  5038: 95 77 01                 a0 = a0 + 0x1
  5041: 7b 28                    u64 [t0] = a1
  5043: ac 70 5c 03              jump @457 if ra <u a0
      :                          @396
  5047: c9 70 00                 ra = ra - a0
  5050: 97 77 03                 a0 = a0 << 0x3
  5053: c8 72 02                 t0 = t0 + a0
  5056: 55 10 15 83 fd           jump @357 if ra >=u 21
      :                          @397
  5061: 28 3b fd                 jump @352
      :                          @398
  5064: 64 27                    a0 = t0
  5066: 64 08                    a1 = ra
  5068: 64 05                    s0 = ra
  5070: 50 20 c0 00 42 f5        ra = 192, jump @131
      :                          @399 [@dyn 96]
  5076: 82 12 80 00              t0 = u64 [sp + 0x80]
  5080: 64 50                    ra = s0
  5082: 33 05 01 01              s0 = 0x101
  5086: 82 17 48                 a0 = u64 [sp + 0x48]
  5089: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
  5092: 7b 17 48                 u64 [sp + 0x48] = a0
  5095: 28 71 fd                 jump @359
      :                          @400
  5098: 64 27                    a0 = t0
  5100: 64 08                    a1 = ra
  5102: 64 05                    s0 = ra
  5104: 50 20 c2 00 93 f8        ra = 194, jump @216
      :                          @401 [@dyn 97]
  5110: 82 12 80 00              t0 = u64 [sp + 0x80]
  5114: 64 50                    ra = s0
  5116: 33 05 01 01              s0 = 0x101
  5120: 51 07 30 ff              jump @382 if a0 == 0
      :                          @402
  5124: 28 0f fd                 jump @354
      :                          @403
  5127: 82 18                    a1 = u64 [sp]
  5129: 28 08                    jump @405
      :                          @404
  5131: 7b 12 08                 u64 [sp + 0x8] = t0
  5134: 64 08                    a1 = ra
  5136: 01                       fallthrough
      :                          @405
  5137: ae 86 fd 02              jump @456 if s1 >=u a1
      :                          @406
  5141: 82 1b 08                 a4 = u64 [sp + 0x8]
  5144: c8 b7 07                 a0 = a0 + a4
  5147: 82 7a                    a3 = u64 [a0]
  5149: 82 b9                    a2 = u64 [a4]
  5151: 7b ba                    u64 [a4] = a3
  5153: 7b 79                    u64 [a0] = a2
  5155: 82 b0                    ra = u64 [a4]
  5157: 33 09                    a2 = 0
  5159: 95 b2 08                 t0 = a4 + 0x8
  5162: 7b 18                    u64 [sp] = a1
  5164: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  5167: 64 27                    a0 = t0
  5169: 01                       fallthrough
      :                          @407
  5170: 82 7a                    a3 = u64 [a0]
  5172: af 0a 0f                 jump @410 if a3 >=s ra
      :                          @408
  5175: 95 99 01                 a2 = a2 + 0x1
  5178: 95 77 08                 a0 = a0 + 0x8
  5181: ab 98 f5                 jump @407 if a1 != a2
      :                          @409
  5184: 64 89                    a2 = a1
  5186: 01                       fallthrough
      :                          @410
  5187: 82 17                    a0 = u64 [sp]
  5189: 97 77 03                 a0 = a0 << 0x3
  5192: 82 1a 08                 a3 = u64 [sp + 0x8]
  5195: c8 a7 07                 a0 = a0 + a3
  5198: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
  5201: 01                       fallthrough
      :                          @411
  5202: 64 8b                    a4 = a1
  5204: ae 89 0e                 jump @413 if a2 >=u a1
      :                          @412
  5207: 82 a7                    a0 = u64 [a3]
  5209: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  5212: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
  5215: af 07 f3                 jump @411 if a0 >=s ra
      :                          @413
  5218: 64 b8                    a1 = a4
  5220: ac 9b ac 02              jump @458 if a4 <u a2
      :                          @414
  5224: 33 0b                    a4 = 0
  5226: 33 0c                    a5 = 0
  5228: 33 06                    s1 = 0
  5230: 33 03                    t1 = 0
  5232: 7b 19 40                 u64 [sp + 0x40] = a2
  5235: 97 97 03                 a0 = a2 << 0x3
  5238: c8 72 09                 a2 = t0 + a0
  5241: 7b 18 30                 u64 [sp + 0x30] = a1
  5244: 97 87 03                 a0 = a1 << 0x3
  5247: c8 72 08                 a1 = t0 + a0
  5250: 33 04 80 00              t2 = 0x80
  5254: 7b 19 38                 u64 [sp + 0x38] = a2
  5257: 64 9a                    a3 = a2
  5259: 33 02 80 00              t0 = 0x80
  5263: 7b 10 50                 u64 [sp + 0x50] = ra
  5266: 28 42                    jump @417
      :                          @415
  5268: 97 00 03                 ra = ra << 0x3
  5271: c8 80 00                 ra = ra + a1
  5274: 82 17 60                 a0 = u64 [sp + 0x60]
  5277: 7b 07                    u64 [ra] = a0
  5279: 95 bb 01                 a4 = a4 + 0x1
  5282: 95 66 01                 s1 = s1 + 0x1
  5285: 82 10 50                 ra = u64 [sp + 0x50]
  5288: 82 14 68                 t2 = u64 [sp + 0x68]
  5291: 01                       fallthrough
      :                          @416
  5292: d3 cb 07                 a0 = a4 ^ a5
  5295: 64 49                    a2 = t2
  5297: 94 79                    a2 = 0 if a0 != 0
  5299: 97 99 03                 a2 = a2 << 0x3
  5302: c8 9a 0a                 a3 = a3 + a2
  5305: d3 36 07                 a0 = s1 ^ t1
  5308: 82 12 70                 t0 = u64 [sp + 0x70]
  5311: 9a 29                    a2 = -t0
  5313: 94 79                    a2 = 0 if a0 != 0
  5315: 97 99 03                 a2 = a2 << 0x3
  5318: c8 98 08                 a1 = a1 + a2
  5321: 33 05 01 01              s0 = 0x101
  5325: 82 17 78                 a0 = u64 [sp + 0x78]
  5328: ac 57 3e 01              jump @439 if a0 <u s0
      :                          @417
  5332: c9 a8 07                 a0 = a1 - a3
  5335: 98 79 03                 a2 = a0 >> 0x3
  5338: 7b 1a 80 00              u64 [sp + 0x80] = a3
  5342: 7b 19 78                 u64 [sp + 0x78] = a2
  5345: ac 59 38                 jump @424 if a2 <u s0
      :                          @418
  5348: aa cb 71                 jump @428 if a4 == a5
      :                          @419
  5351: ab 36 b4 00              jump @435 if s1 != t1
      :                          @420
  5355: 51 02 9a 00              jump @433 if t0 == 0
      :                          @421
  5359: 33 07                    a0 = 0
  5361: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  5364: 95 16 08 01              s1 = sp + 0x108
  5368: 95 13 08 01              t1 = sp + 0x108
  5372: 01                       fallthrough
      :                          @422
  5373: 82 a9                    a2 = u64 [a3]
  5375: 78 37                    u8 [t1] = a0
  5377: 95 75 01                 s0 = a0 + 0x1
  5380: d9 09 07                 a0 = a2 <s ra
  5383: c8 73 03                 t1 = t1 + a0
  5386: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
  5389: 64 57                    a0 = s0
  5391: ab 52 ee                 jump @422 if t0 != s0
      :                          @423
  5394: 82 1a 80 00              a3 = u64 [sp + 0x80]
  5398: 28 85 00                 jump @435
      :                          @424
  5401: 64 25                    s0 = t0
  5403: 64 49                    a2 = t2
  5405: d8 cb 04                 t2 = a4 <u a5
  5408: d8 36 0a                 a3 = s1 <u t1
  5411: d4 a4 02                 t0 = t2 | a3
  5414: 51 02 1f                 jump @427 if t0 == 0
      :                          @425
  5417: 82 1a 78                 a3 = u64 [sp + 0x78]
  5420: 95 a7 80                 a0 = a3 + 0xffffffffffffff80
  5423: db 47 05                 s0 = a0 if t2 != 0
  5426: da 2a 07                 a0 = a3 if t0 == 0
  5429: 64 52                    t0 = s0
  5431: da 47 09                 a2 = a0 if t2 == 0
  5434: 64 94                    t2 = a2
  5436: 82 1a 80 00              a3 = u64 [sp + 0x80]
  5440: ab cb a7                 jump @419 if a4 != a5
      :                          @426
  5443: 28 12                    jump @428
      :                          @427
  5445: 98 74 04                 t2 = a0 >> 0x4
  5448: 82 17 78                 a0 = u64 [sp + 0x78]
  5451: c9 47 02                 t0 = a0 - t2
  5454: 82 1a 80 00              a3 = u64 [sp + 0x80]
  5458: ab cb 95                 jump @419 if a4 != a5
      :                          @428
  5461: 51 04 3a                 jump @434 if t2 == 0
      :                          @429
  5464: 33 07                    a0 = 0
  5466: 95 1b 88 00              a4 = sp + 0x88
  5470: 95 1c 88 00              a5 = sp + 0x88
  5474: 01                       fallthrough
      :                          @430
  5475: 82 a5                    s0 = u64 [a3]
  5477: 78 c7                    u8 [a5] = a0
  5479: 95 79 01                 a2 = a0 + 0x1
  5482: d9 05 07                 a0 = s0 <s ra
  5485: 85 77 01                 a0 = a0 ^ 0x1
  5488: c8 7c 0c                 a5 = a5 + a0
  5491: 95 aa 08                 a3 = a3 + 0x8
  5494: 64 97                    a0 = a2
  5496: ab 94 eb                 jump @430 if t2 != a2
      :                          @431
  5499: 82 1a 80 00              a3 = u64 [sp + 0x80]
  5503: ab 36 1c                 jump @435 if s1 != t1
      :                          @432
  5506: 28 69 ff                 jump @420
      :                          @433
  5509: 95 16 08 01              s1 = sp + 0x108
  5513: 95 13 08 01              t1 = sp + 0x108
  5517: 28 0e                    jump @435
      :                          @434
  5519: 95 1b 88 00              a4 = sp + 0x88
  5523: 95 1c 88 00              a5 = sp + 0x88
  5527: aa 36 54 ff              jump @420 if s1 == t1
      :                          @435
  5531: 7b 12 70                 u64 [sp + 0x70] = t0
  5534: c9 bc 07                 a0 = a5 - a4
  5537: c9 63 09                 a2 = t1 - s1
  5540: e6 97 02                 t0 = minu(a0, a2)
  5543: 51 02 05 ff              jump @416 if t0 == 0
      :                          @436
  5547: 7b 14 68                 u64 [sp + 0x68] = t2
  5550: 7c b7                    a0 = u8 [a4]
  5552: 7c 64                    t2 = u8 [s1]
  5554: 97 77 03                 a0 = a0 << 0x3
  5557: c8 a7 07                 a0 = a0 + a3
  5560: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
  5563: 97 09 03                 a2 = ra << 0x3
  5566: c8 89 09                 a2 = a2 + a1
  5569: 82 99                    a2 = u64 [a2]
  5571: 82 75                    s0 = u64 [a0]
  5573: 7b 15 60                 u64 [sp + 0x60] = s0
  5576: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  5579: 7b 79                    u64 [a0] = a2
  5581: 51 02 c7 fe              jump @415 if t0 == 0
      :                          @437
  5585: 7c b7 01                 a0 = u8 [a4 + 0x1]
  5588: 97 77 03                 a0 = a0 << 0x3
  5591: c8 a7 07                 a0 = a0 + a3
  5594: 85 49 ff                 a2 = t2 ^ 0xffffffffffffffff
  5597: 82 7a                    a3 = u64 [a0]
  5599: 97 99 03                 a2 = a2 << 0x3
  5602: 86 99 00 f8              a2 = a2 | 0xfffffffffffff800
  5606: c8 89 09                 a2 = a2 + a1
  5609: 7b 9a                    u64 [a2] = a3
  5611: 82 1a 80 00              a3 = u64 [sp + 0x80]
  5615: 7c 64 01                 t2 = u8 [s1 + 0x1]
  5618: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
  5621: 97 09 03                 a2 = ra << 0x3
  5624: c8 89 09                 a2 = a2 + a1
  5627: 82 99                    a2 = u64 [a2]
  5629: 95 bb 01                 a4 = a4 + 0x1
  5632: 95 66 01                 s1 = s1 + 0x1
  5635: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  5638: 7b 79                    u64 [a0] = a2
  5640: 52 02 c9                 jump @437 if t0 != 0
      :                          @438
  5643: 28 89 fe                 jump @415
      :                          @439
  5646: ae cb 2b                 jump @443 if a4 >=u a5
      :                          @440
  5649: 82 12 08                 t0 = u64 [sp + 0x8]
  5652: 64 a3                    t1 = a3
  5654: 01                       fallthrough
      :                          @441
  5655: 7c c7 ff                 a0 = u8 [a5 + 0xffffffffffffffff]
  5658: 97 77 03                 a0 = a0 << 0x3
  5661: c8 37 07                 a0 = a0 + t1
  5664: 82 85 f8                 s0 = u64 [a1 + 0xfffffffffffffff8]
  5667: 82 79                    a2 = u64 [a0]
  5669: 95 c6 ff                 s1 = a5 + 0xffffffffffffffff
  5672: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  5675: 7b 75                    u64 [a0] = s0
  5677: 7b 89 f8                 u64 [a1 + 0xfffffffffffffff8] = a2
  5680: 64 a8                    a1 = a3
  5682: 64 6c                    a5 = s1
  5684: ac 6b e3                 jump @441 if a4 <u s1
      :                          @442
  5687: 28 27                    jump @445
      :                          @443
  5689: 82 12 08                 t0 = u64 [sp + 0x8]
  5692: ae 36 22                 jump @445 if s1 >=u t1
      :                          @444
  5695: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
  5698: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
  5701: 97 77 03                 a0 = a0 << 0x3
  5704: c8 87 07                 a0 = a0 + a1
  5707: 82 79                    a2 = u64 [a0]
  5709: 82 ab                    a4 = u64 [a3]
  5711: 95 3c ff                 a5 = t1 + 0xffffffffffffffff
  5714: 7b a9                    u64 [a3] = a2
  5716: 7b 7b                    u64 [a0] = a4
  5718: 95 aa 08                 a3 = a3 + 0x8
  5721: 64 c3                    t1 = a5
  5723: ac c6 e4                 jump @444 if s1 <u a5
      :                          @445
  5726: 82 17 38                 a0 = u64 [sp + 0x38]
  5729: c9 7a 07                 a0 = a3 - a0
  5732: 98 77 03                 a0 = a0 >> 0x3
  5735: 82 16 40                 s1 = u64 [sp + 0x40]
  5738: c8 76 06                 s1 = s1 + a0
  5741: 7b 20                    u64 [t0] = ra
  5743: 82 18                    a1 = u64 [sp]
  5745: ae 86 9d 00              jump @456 if s1 >=u a1
      :                          @446
  5749: 97 67 03                 a0 = s1 << 0x3
  5752: c8 72 09                 a2 = t0 + a0
  5755: 82 97                    a0 = u64 [a2]
  5757: 7b 27                    u64 [t0] = a0
  5759: 7b 90                    u64 [a2] = ra
  5761: 64 25                    s0 = t0
  5763: c9 68 08                 a1 = a1 - s1
  5766: 7b 18 80 00              u64 [sp + 0x80] = a1
  5770: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
  5773: 95 97 08                 a0 = a2 + 0x8
  5776: ae b6 28                 jump @449 if s1 >=u a4
      :                          @447
  5779: 7b 17 78                 u64 [sp + 0x78] = a0
  5782: 64 57                    a0 = s0
  5784: 64 68                    a1 = s1
  5786: 7b 19 70                 u64 [sp + 0x70] = a2
  5789: 82 19 58                 a2 = u64 [sp + 0x58]
  5792: 82 1a 48                 a3 = u64 [sp + 0x48]
  5795: 64 b5                    s0 = a4
  5797: 50 20 c4 00 3a fa        ra = 196, jump @350
      :                          @448 [@dyn 98]
  5803: 64 50                    ra = s0
  5805: 82 17 70                 a0 = u64 [sp + 0x70]
  5808: 7b 17 58                 u64 [sp + 0x58] = a0
  5811: 82 15 78                 s0 = u64 [sp + 0x78]
  5814: 28 10                    jump @451
      :                          @449
  5816: 64 b8                    a1 = a4
  5818: 82 1a 48                 a3 = u64 [sp + 0x48]
  5821: 50 20 c6 00 22 fa        ra = 198, jump @350
      :                          @450 [@dyn 99]
  5827: 64 60                    ra = s1
  5829: 01                       fallthrough
      :                          @451
  5830: 82 17 40                 a0 = u64 [sp + 0x40]
  5833: 82 18 30                 a1 = u64 [sp + 0x30]
  5836: d8 87 07                 a0 = a0 <u a1
  5839: 85 77 01                 a0 = a0 ^ 0x1
  5842: 82 18 80 00              a1 = u64 [sp + 0x80]
  5846: e6 86 08                 a1 = minu(s1, a1)
  5849: 82 19                    a2 = u64 [sp]
  5851: 98 99 03                 a2 = a2 >> 0x3
  5854: d8 98 08                 a1 = a1 <u a2
  5857: 85 88 01                 a1 = a1 ^ 0x1
  5860: 7b 18 78                 u64 [sp + 0x78] = a1
  5863: 7b 10                    u64 [sp] = ra
  5865: 7b 15 08                 u64 [sp + 0x8] = s0
  5868: 64 52                    t0 = s0
  5870: 33 08 15                 a1 = 0x15
  5873: 33 05 01 01              s0 = 0x101
  5877: ae 80 41 fa              jump @356 if ra >=u a1
      :                          @452
  5881: 28 07 fa                 jump @352
      :                          @453
  5884: 64 27                    a0 = t0
  5886: 64 08                    a1 = ra
  5888: 33 00 c8 00              ra = 0xc8
  5892: 98 82 01                 t0 = a1 >> 0x1
  5895: 28 18 07                 jump @597
      :                          @454 [@dyn 100]
  5898: 28 09 fa                 jump @354
      :                          @455
  5901: 00                       trap
      :                          @456
  5902: 00                       trap
      :                          @457
  5903: 00                       trap
      :                          @458
  5904: 00                       trap
      :                          @459
  5905: 95 11 60 fe              sp = sp + 0xfffffffffffffe60
  5909: 7b 10 98 01              u64 [sp + 0x198] = ra
  5913: 7b 15 90 01              u64 [sp + 0x190] = s0
  5917: 7b 16 88 01              u64 [sp + 0x188] = s1
  5921: 33 0b 15                 a4 = 0x15
  5924: 7b 1a 48                 u64 [sp + 0x48] = a3
  5927: 7b 19 58                 u64 [sp + 0x58] = a2
  5930: 64 80                    ra = a1
  5932: ae b8 2b                 jump @464 if a1 >=u a4
      :                          @460
  5935: 64 72                    t0 = a0
  5937: 01                       fallthrough
      :                          @461
  5938: 33 07 01                 a0 = 0x1
  5941: ae 07 10                 jump @463 if a0 >=u ra
      :                          @462
  5944: 33 09 01                 a2 = 0x1
  5947: 64 27                    a0 = t0
  5949: 64 08                    a1 = ra
  5951: 50 20 ca 00 e7 f7        ra = 202, jump @291
      :                          @463 [@dyn 101]
  5957: 82 10 98 01              ra = u64 [sp + 0x198]
  5961: 82 15 90 01              s0 = u64 [sp + 0x190]
  5965: 82 16 88 01              s1 = u64 [sp + 0x188]
  5969: 95 11 a0 01              sp = sp + 0x1a0
  5973: 32 00                    ret
      :                          @464
  5975: 7b 17 08                 u64 [sp + 0x8] = a0
  5978: 49 11 78 01              u64 [sp + 120] = 0x1
  5982: 33 05 01 01              s0 = 0x101
  5986: 33 07 01                 a0 = 0x1
  5989: 7b 10                    u64 [sp] = ra
  5991: 01                       fallthrough
      :                          @465
  5992: 82 18 78                 a1 = u64 [sp + 0x78]
  5995: d2 87 07                 a0 = a0 & a1
  5998: 7b 17 70                 u64 [sp + 0x70] = a0
  6001: 82 12 08                 t0 = u64 [sp + 0x8]
  6004: 01                       fallthrough
      :                          @466
  6005: 81 17 48                 a0 = i32 [sp + 0x48]
  6008: 51 07 b6 05              jump @562 if a0 == 0
      :                          @467
  6012: 82 17 78                 a0 = u64 [sp + 0x78]
  6015: 84 77 01                 a0 = a0 & 0x1
  6018: 7b 12 80 00              u64 [sp + 0x80] = t0
  6022: 51 07 74 02              jump @507 if a0 == 0
      :                          @468
  6026: 98 0b 02                 a4 = ra >> 0x2
  6029: 97 b6 01                 s1 = a4 << 0x1
  6032: c8 b6 03                 t1 = s1 + a4
  6035: 54 10 31 29              jump @471 if ra <=u 49
      :                          @469
  6039: 95 b5 ff                 s0 = a4 + 0xffffffffffffffff
  6042: 97 b7 03                 a0 = a4 << 0x3
  6045: c8 27 07                 a0 = a0 + t0
  6048: 97 58 03                 a1 = s0 << 0x3
  6051: c8 28 08                 a1 = a1 + t0
  6054: 82 79                    a2 = u64 [a0]
  6056: 82 88                    a1 = u64 [a1]
  6058: ae 98 17                 jump @472 if a1 >=u a2
      :                          @470
  6061: 49 11 28 01              u64 [sp + 40] = 0x1
  6065: 64 94                    t2 = a2
  6067: 7b 15 50                 u64 [sp + 0x50] = s0
  6070: 64 b5                    s0 = a4
  6072: 64 89                    a2 = a1
  6074: 28 10                    jump @473
      :                          @471
  6076: 33 09                    a2 = 0
  6078: 28 1e 01                 jump @480
      :                          @472
  6081: 49 11 28                 u64 [sp + 40] = 0
  6084: 64 84                    t2 = a1
  6086: 7b 1b 50                 u64 [sp + 0x50] = a4
  6089: 01                       fallthrough
      :                          @473
  6090: 95 b8 01                 a1 = a4 + 0x1
  6093: 7b 18 40                 u64 [sp + 0x40] = a1
  6096: 97 88 03                 a1 = a1 << 0x3
  6099: 82 1b 80 00              a4 = u64 [sp + 0x80]
  6103: c8 b8 08                 a1 = a1 + a4
  6106: 82 87                    a0 = u64 [a1]
  6108: d8 79 02                 t0 = a2 <u a0
  6111: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
  6114: 97 68 03                 a1 = s1 << 0x3
  6117: c8 b8 08                 a1 = a1 + a4
  6120: 97 ac 03                 a5 = a3 << 0x3
  6123: c8 cb 0b                 a4 = a4 + a5
  6126: 82 8c                    a5 = u64 [a1]
  6128: 82 b8                    a1 = u64 [a4]
  6130: e4 79 07                 a0 = maxu(a2, a0)
  6133: d8 74 09                 a2 = t2 <u a0
  6136: 7b 12 38                 u64 [sp + 0x38] = t0
  6139: 82 17 28                 a0 = u64 [sp + 0x28]
  6142: c8 27 07                 a0 = a0 + t0
  6145: c8 97 07                 a0 = a0 + a2
  6148: 7b 10 68                 u64 [sp + 0x68] = ra
  6151: 7b 15 60                 u64 [sp + 0x60] = s0
  6154: 7b 19 30                 u64 [sp + 0x30] = a2
  6157: ae c8 13                 jump @475 if a1 >=u a5
      :                          @474
  6160: 95 77 01                 a0 = a0 + 0x1
  6163: 7b 17 18                 u64 [sp + 0x18] = a0
  6166: 7b 1c 20                 u64 [sp + 0x20] = a5
  6169: 7b 1a 28                 u64 [sp + 0x28] = a3
  6172: 64 6a                    a3 = s1
  6174: 28 0e                    jump @476
      :                          @475
  6176: 7b 18 20                 u64 [sp + 0x20] = a1
  6179: 7b 16 28                 u64 [sp + 0x28] = s1
  6182: 64 c8                    a1 = a5
  6184: 7b 17 18                 u64 [sp + 0x18] = a0
  6187: 01                       fallthrough
      :                          @476
  6188: 86 66 01                 s1 = s1 | 0x1
  6191: 97 6b 03                 a4 = s1 << 0x3
  6194: 82 15 80 00              s0 = u64 [sp + 0x80]
  6198: c8 5b 0b                 a4 = a4 + s0
  6201: 82 bb                    a4 = u64 [a4]
  6203: d8 b8 07                 a0 = a1 <u a4
  6206: 95 34 ff                 t2 = t1 + 0xffffffffffffffff
  6209: 97 39 03                 a2 = t1 << 0x3
  6212: c8 59 09                 a2 = a2 + s0
  6215: 97 4c 03                 a5 = t2 << 0x3
  6218: c8 5c 0c                 a5 = a5 + s0
  6221: 82 92                    t0 = u64 [a2]
  6223: 82 c0                    ra = u64 [a5]
  6225: e4 b8 08                 a1 = maxu(a1, a4)
  6228: 82 19 20                 a2 = u64 [sp + 0x20]
  6231: d8 89 09                 a2 = a2 <u a1
  6234: 7b 17 20                 u64 [sp + 0x20] = a0
  6237: 82 18 18                 a1 = u64 [sp + 0x18]
  6240: c8 87 07                 a0 = a0 + a1
  6243: c8 97 07                 a0 = a0 + a2
  6246: ae 20 12                 jump @478 if ra >=u t0
      :                          @477
  6249: 95 77 01                 a0 = a0 + 0x1
  6252: 7b 17 18                 u64 [sp + 0x18] = a0
  6255: 7b 12 10                 u64 [sp + 0x10] = t0
  6258: 64 47                    a0 = t2
  6260: 64 34                    t2 = t1
  6262: 28 0d                    jump @479
      :                          @478
  6264: 7b 10 10                 u64 [sp + 0x10] = ra
  6267: 7b 17 18                 u64 [sp + 0x18] = a0
  6270: 64 37                    a0 = t1
  6272: 64 20                    ra = t0
  6274: 01                       fallthrough
      :                          @479
  6275: 82 15 60                 s0 = u64 [sp + 0x60]
  6278: 82 1c 50                 a5 = u64 [sp + 0x50]
  6281: 82 18 40                 a1 = u64 [sp + 0x40]
  6284: 82 1b 38                 a4 = u64 [sp + 0x38]
  6287: da bc 08                 a1 = a5 if a4 == 0
  6290: 95 33 01                 t1 = t1 + 0x1
  6293: 97 3c 03                 a5 = t1 << 0x3
  6296: 82 12 80 00              t0 = u64 [sp + 0x80]
  6300: c8 2c 0c                 a5 = a5 + t0
  6303: 82 cc                    a5 = u64 [a5]
  6305: 82 1b 30                 a4 = u64 [sp + 0x30]
  6308: da b8 05                 s0 = a1 if a4 == 0
  6311: 82 18 28                 a1 = u64 [sp + 0x28]
  6314: 82 1b 20                 a4 = u64 [sp + 0x20]
  6317: da b8 06                 s1 = a1 if a4 == 0
  6320: da 96 0a                 a3 = s1 if a2 == 0
  6323: d8 c0 09                 a2 = ra <u a5
  6326: db 93 07                 a0 = t1 if a2 != 0
  6329: e4 c0 0c                 a5 = maxu(ra, a5)
  6332: 82 18 10                 a1 = u64 [sp + 0x10]
  6335: d8 c8 08                 a1 = a1 <u a5
  6338: db 84 07                 a0 = t2 if a1 != 0
  6341: c8 98 08                 a1 = a1 + a2
  6344: 82 19 18                 a2 = u64 [sp + 0x18]
  6347: c8 89 09                 a2 = a2 + a1
  6350: 64 73                    t1 = a0
  6352: 64 a6                    s1 = a3
  6354: 64 5b                    a4 = s0
  6356: 82 10 68                 ra = u64 [sp + 0x68]
  6359: 33 05 01 01              s0 = 0x101
  6363: 01                       fallthrough
      :                          @480
  6364: 97 67 03                 a0 = s1 << 0x3
  6367: c8 27 07                 a0 = a0 + t0
  6370: 97 b8 03                 a1 = a4 << 0x3
  6373: c8 82 0a                 a3 = t0 + a1
  6376: 82 78                    a1 = u64 [a0]
  6378: 82 a7                    a0 = u64 [a3]
  6380: ae 87 0c                 jump @482 if a0 >=u a1
      :                          @481
  6383: 95 99 01                 a2 = a2 + 0x1
  6386: 64 8c                    a5 = a1
  6388: 64 ba                    a3 = a4
  6390: 28 0b                    jump @483
      :                          @482
  6392: 64 7c                    a5 = a0
  6394: 64 6a                    a3 = s1
  6396: 64 b6                    s1 = a4
  6398: 64 87                    a0 = a1
  6400: 01                       fallthrough
      :                          @483
  6401: 97 38 03                 a1 = t1 << 0x3
  6404: c8 28 08                 a1 = a1 + t0
  6407: 82 8b                    a4 = u64 [a1]
  6409: d8 b7 08                 a1 = a0 <u a4
  6412: e4 b7 07                 a0 = maxu(a0, a4)
  6415: c8 89 09                 a2 = a2 + a1
  6418: ae 7c 09                 jump @486 if a5 >=u a0
      :                          @484
  6421: 55 19 0b 1a              jump @488 if a2 >=u 11
      :                          @485
  6425: 28 49                    jump @491
      :                          @486
  6427: da 8a 03                 t1 = a3 if a1 == 0
  6430: 64 36                    s1 = t1
  6432: 88 97 01                 a0 = a2 <u 0x1
  6435: 82 18 70                 a1 = u64 [sp + 0x70]
  6438: d2 87 07                 a0 = a0 & a1
  6441: 51 07 39                 jump @491 if a0 == 0
      :                          @487
  6444: 28 f0 00                 jump @509
      :                          @488
  6447: 98 07 01                 a0 = ra >> 0x1
  6450: 97 08 03                 a1 = ra << 0x3
  6453: c8 28 08                 a1 = a1 + t0
  6456: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  6459: 64 29                    a2 = t0
  6461: 01                       fallthrough
      :                          @489
  6462: 82 8a                    a3 = u64 [a1]
  6464: 82 9b                    a4 = u64 [a2]
  6466: 7b 9a                    u64 [a2] = a3
  6468: 7b 8b                    u64 [a1] = a4
  6470: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6473: 95 99 08                 a2 = a2 + 0x8
  6476: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  6479: 52 07 ef                 jump @489 if a0 != 0
      :                          @490
  6482: 85 66 ff                 s1 = s1 ^ 0xffffffffffffffff
  6485: c8 06 06                 s1 = s1 + ra
  6488: 82 18 70                 a1 = u64 [sp + 0x70]
  6491: 84 87 01                 a0 = a1 & 0x1
  6494: 52 07 be 00              jump @509 if a0 != 0
      :                          @491
  6498: 97 67 03                 a0 = s1 << 0x3
  6501: 82 18 58                 a1 = u64 [sp + 0x58]
  6504: 51 08 d1 00              jump @512 if a1 == 0
      :                          @492
  6508: ae 06 d2 03              jump @564 if s1 >=u ra
      :                          @493
  6512: c8 72 08                 a1 = t0 + a0
  6515: 82 19 58                 a2 = u64 [sp + 0x58]
  6518: 82 9a                    a3 = u64 [a2]
  6520: 82 89                    a2 = u64 [a1]
  6522: ac a9 c3 00              jump @513 if a2 <u a3
      :                          @494
  6526: 82 27                    a0 = u64 [t0]
  6528: 7b 29                    u64 [t0] = a2
  6530: 7b 87                    u64 [a1] = a0
  6532: 82 28                    a1 = u64 [t0]
  6534: 33 07                    a0 = 0
  6536: 95 29 08                 a2 = t0 + 0x8
  6539: 95 0a ff                 a3 = ra + 0xffffffffffffffff
  6542: 54 0a 22                 jump @499 if a3 <=u 0
      :                          @495
  6545: 97 7b 03                 a4 = a0 << 0x3
  6548: c8 9b 0b                 a4 = a4 + a2
  6551: 01                       fallthrough
      :                          @496
  6552: 82 bc                    a5 = u64 [a4]
  6554: ac 8c 16                 jump @499 if a5 <u a1
      :                          @497
  6557: 95 77 01                 a0 = a0 + 0x1
  6560: 95 bb 08                 a4 = a4 + 0x8
  6563: ab 7a f5                 jump @496 if a3 != a0
      :                          @498
  6566: 64 a7                    a0 = a3
  6568: 97 ab 03                 a4 = a3 << 0x3
  6571: c8 9b 0b                 a4 = a4 + a2
  6574: 28 09                    jump @500
      :                          @499
  6576: 97 ab 03                 a4 = a3 << 0x3
  6579: c8 9b 0b                 a4 = a4 + a2
  6582: 01                       fallthrough
      :                          @500
  6583: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  6586: ae a7 26                 jump @504 if a0 >=u a3
      :                          @501
  6589: 82 b6 f8                 s1 = u64 [a4 + 0xfffffffffffffff8]
  6592: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
  6595: 64 cb                    a4 = a5
  6597: ac 86 f2                 jump @500 if s1 <u a1
      :                          @502
  6600: 97 7b 03                 a4 = a0 << 0x3
  6603: c8 9b 0b                 a4 = a4 + a2
  6606: 82 b5                    s0 = u64 [a4]
  6608: 7b b6                    u64 [a4] = s1
  6610: 7b c5                    u64 [a5] = s0
  6612: 33 05 01 01              s0 = 0x101
  6616: 95 77 01                 a0 = a0 + 0x1
  6619: ac a7 b6                 jump @495 if a0 <u a3
      :                          @503
  6622: 28 d2                    jump @499
      :                          @504
  6624: 95 77 01                 a0 = a0 + 0x1
  6627: 7b 28                    u64 [t0] = a1
  6629: ac 70 5b 03              jump @566 if ra <u a0
      :                          @505
  6633: c9 70 00                 ra = ra - a0
  6636: 97 77 03                 a0 = a0 << 0x3
  6639: c8 72 02                 t0 = t0 + a0
  6642: 55 10 15 83 fd           jump @466 if ra >=u 21
      :                          @506
  6647: 28 3b fd                 jump @461
      :                          @507
  6650: 64 27                    a0 = t0
  6652: 64 08                    a1 = ra
  6654: 64 05                    s0 = ra
  6656: 50 20 cc 00 10 ef        ra = 204, jump @131
      :                          @508 [@dyn 102]
  6662: 82 12 80 00              t0 = u64 [sp + 0x80]
  6666: 64 50                    ra = s0
  6668: 33 05 01 01              s0 = 0x101
  6672: 82 17 48                 a0 = u64 [sp + 0x48]
  6675: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
  6678: 7b 17 48                 u64 [sp + 0x48] = a0
  6681: 28 71 fd                 jump @468
      :                          @509
  6684: 64 27                    a0 = t0
  6686: 64 08                    a1 = ra
  6688: 64 05                    s0 = ra
  6690: 50 20 ce 00 be ef        ra = 206, jump @141
      :                          @510 [@dyn 103]
  6696: 82 12 80 00              t0 = u64 [sp + 0x80]
  6700: 64 50                    ra = s0
  6702: 33 05 01 01              s0 = 0x101
  6706: 51 07 30 ff              jump @491 if a0 == 0
      :                          @511
  6710: 28 0f fd                 jump @463
      :                          @512
  6713: 82 18                    a1 = u64 [sp]
  6715: 28 08                    jump @514
      :                          @513
  6717: 7b 12 08                 u64 [sp + 0x8] = t0
  6720: 64 08                    a1 = ra
  6722: 01                       fallthrough
      :                          @514
  6723: ae 86 fc 02              jump @565 if s1 >=u a1
      :                          @515
  6727: 82 1b 08                 a4 = u64 [sp + 0x8]
  6730: c8 b7 07                 a0 = a0 + a4
  6733: 82 7a                    a3 = u64 [a0]
  6735: 82 b9                    a2 = u64 [a4]
  6737: 7b ba                    u64 [a4] = a3
  6739: 7b 79                    u64 [a0] = a2
  6741: 82 b0                    ra = u64 [a4]
  6743: 33 09                    a2 = 0
  6745: 95 b2 08                 t0 = a4 + 0x8
  6748: 7b 18                    u64 [sp] = a1
  6750: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  6753: 64 27                    a0 = t0
  6755: 01                       fallthrough
      :                          @516
  6756: 82 7a                    a3 = u64 [a0]
  6758: ae a0 0f                 jump @519 if ra >=u a3
      :                          @517
  6761: 95 99 01                 a2 = a2 + 0x1
  6764: 95 77 08                 a0 = a0 + 0x8
  6767: ab 98 f5                 jump @516 if a1 != a2
      :                          @518
  6770: 64 89                    a2 = a1
  6772: 01                       fallthrough
      :                          @519
  6773: 82 17                    a0 = u64 [sp]
  6775: 97 77 03                 a0 = a0 << 0x3
  6778: 82 1a 08                 a3 = u64 [sp + 0x8]
  6781: c8 a7 07                 a0 = a0 + a3
  6784: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
  6787: 01                       fallthrough
      :                          @520
  6788: 64 8b                    a4 = a1
  6790: ae 89 0e                 jump @522 if a2 >=u a1
      :                          @521
  6793: 82 a7                    a0 = u64 [a3]
  6795: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  6798: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
  6801: ae 70 f3                 jump @520 if ra >=u a0
      :                          @522
  6804: 64 b8                    a1 = a4
  6806: ac 9b ab 02              jump @567 if a4 <u a2
      :                          @523
  6810: 33 0b                    a4 = 0
  6812: 33 0c                    a5 = 0
  6814: 33 06                    s1 = 0
  6816: 33 03                    t1 = 0
  6818: 7b 19 40                 u64 [sp + 0x40] = a2
  6821: 97 97 03                 a0 = a2 << 0x3
  6824: c8 72 09                 a2 = t0 + a0
  6827: 7b 18 30                 u64 [sp + 0x30] = a1
  6830: 97 87 03                 a0 = a1 << 0x3
  6833: c8 72 08                 a1 = t0 + a0
  6836: 33 04 80 00              t2 = 0x80
  6840: 7b 19 38                 u64 [sp + 0x38] = a2
  6843: 64 9a                    a3 = a2
  6845: 33 02 80 00              t0 = 0x80
  6849: 7b 10 50                 u64 [sp + 0x50] = ra
  6852: 28 42                    jump @526
      :                          @524
  6854: 97 00 03                 ra = ra << 0x3
  6857: c8 80 00                 ra = ra + a1
  6860: 82 17 60                 a0 = u64 [sp + 0x60]
  6863: 7b 07                    u64 [ra] = a0
  6865: 95 bb 01                 a4 = a4 + 0x1
  6868: 95 66 01                 s1 = s1 + 0x1
  6871: 82 10 50                 ra = u64 [sp + 0x50]
  6874: 82 14 68                 t2 = u64 [sp + 0x68]
  6877: 01                       fallthrough
      :                          @525
  6878: d3 cb 07                 a0 = a4 ^ a5
  6881: 64 49                    a2 = t2
  6883: 94 79                    a2 = 0 if a0 != 0
  6885: 97 99 03                 a2 = a2 << 0x3
  6888: c8 9a 0a                 a3 = a3 + a2
  6891: d3 36 07                 a0 = s1 ^ t1
  6894: 82 12 70                 t0 = u64 [sp + 0x70]
  6897: 9a 29                    a2 = -t0
  6899: 94 79                    a2 = 0 if a0 != 0
  6901: 97 99 03                 a2 = a2 << 0x3
  6904: c8 98 08                 a1 = a1 + a2
  6907: 33 05 01 01              s0 = 0x101
  6911: 82 17 78                 a0 = u64 [sp + 0x78]
  6914: ac 57 3e 01              jump @548 if a0 <u s0
      :                          @526
  6918: c9 a8 07                 a0 = a1 - a3
  6921: 98 79 03                 a2 = a0 >> 0x3
  6924: 7b 1a 80 00              u64 [sp + 0x80] = a3
  6928: 7b 19 78                 u64 [sp + 0x78] = a2
  6931: ac 59 38                 jump @533 if a2 <u s0
      :                          @527
  6934: aa cb 71                 jump @537 if a4 == a5
      :                          @528
  6937: ab 36 b4 00              jump @544 if s1 != t1
      :                          @529
  6941: 51 02 9a 00              jump @542 if t0 == 0
      :                          @530
  6945: 33 07                    a0 = 0
  6947: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  6950: 95 16 08 01              s1 = sp + 0x108
  6954: 95 13 08 01              t1 = sp + 0x108
  6958: 01                       fallthrough
      :                          @531
  6959: 82 a9                    a2 = u64 [a3]
  6961: 78 37                    u8 [t1] = a0
  6963: 95 75 01                 s0 = a0 + 0x1
  6966: d8 90 07                 a0 = ra <u a2
  6969: c8 73 03                 t1 = t1 + a0
  6972: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
  6975: 64 57                    a0 = s0
  6977: ab 52 ee                 jump @531 if t0 != s0
      :                          @532
  6980: 82 1a 80 00              a3 = u64 [sp + 0x80]
  6984: 28 85 00                 jump @544
      :                          @533
  6987: 64 25                    s0 = t0
  6989: 64 49                    a2 = t2
  6991: d8 cb 04                 t2 = a4 <u a5
  6994: d8 36 0a                 a3 = s1 <u t1
  6997: d4 a4 02                 t0 = t2 | a3
  7000: 51 02 1f                 jump @536 if t0 == 0
      :                          @534
  7003: 82 1a 78                 a3 = u64 [sp + 0x78]
  7006: 95 a7 80                 a0 = a3 + 0xffffffffffffff80
  7009: db 47 05                 s0 = a0 if t2 != 0
  7012: da 2a 07                 a0 = a3 if t0 == 0
  7015: 64 52                    t0 = s0
  7017: da 47 09                 a2 = a0 if t2 == 0
  7020: 64 94                    t2 = a2
  7022: 82 1a 80 00              a3 = u64 [sp + 0x80]
  7026: ab cb a7                 jump @528 if a4 != a5
      :                          @535
  7029: 28 12                    jump @537
      :                          @536
  7031: 98 74 04                 t2 = a0 >> 0x4
  7034: 82 17 78                 a0 = u64 [sp + 0x78]
  7037: c9 47 02                 t0 = a0 - t2
  7040: 82 1a 80 00              a3 = u64 [sp + 0x80]
  7044: ab cb 95                 jump @528 if a4 != a5
      :                          @537
  7047: 51 04 3a                 jump @543 if t2 == 0
      :                          @538
  7050: 33 07                    a0 = 0
  7052: 95 1b 88 00              a4 = sp + 0x88
  7056: 95 1c 88 00              a5 = sp + 0x88
  7060: 01                       fallthrough
      :                          @539
  7061: 82 a5                    s0 = u64 [a3]
  7063: 78 c7                    u8 [a5] = a0
  7065: 95 79 01                 a2 = a0 + 0x1
  7068: d8 50 07                 a0 = ra <u s0
  7071: 85 77 01                 a0 = a0 ^ 0x1
  7074: c8 7c 0c                 a5 = a5 + a0
  7077: 95 aa 08                 a3 = a3 + 0x8
  7080: 64 97                    a0 = a2
  7082: ab 94 eb                 jump @539 if t2 != a2
      :                          @540
  7085: 82 1a 80 00              a3 = u64 [sp + 0x80]
  7089: ab 36 1c                 jump @544 if s1 != t1
      :                          @541
  7092: 28 69 ff                 jump @529
      :                          @542
  7095: 95 16 08 01              s1 = sp + 0x108
  7099: 95 13 08 01              t1 = sp + 0x108
  7103: 28 0e                    jump @544
      :                          @543
  7105: 95 1b 88 00              a4 = sp + 0x88
  7109: 95 1c 88 00              a5 = sp + 0x88
  7113: aa 36 54 ff              jump @529 if s1 == t1
      :                          @544
  7117: 7b 12 70                 u64 [sp + 0x70] = t0
  7120: c9 bc 07                 a0 = a5 - a4
  7123: c9 63 09                 a2 = t1 - s1
  7126: e6 97 02                 t0 = minu(a0, a2)
  7129: 51 02 05 ff              jump @525 if t0 == 0
      :                          @545
  7133: 7b 14 68                 u64 [sp + 0x68] = t2
  7136: 7c b7                    a0 = u8 [a4]
  7138: 7c 64                    t2 = u8 [s1]
  7140: 97 77 03                 a0 = a0 << 0x3
  7143: c8 a7 07                 a0 = a0 + a3
  7146: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
  7149: 97 09 03                 a2 = ra << 0x3
  7152: c8 89 09                 a2 = a2 + a1
  7155: 82 99                    a2 = u64 [a2]
  7157: 82 75                    s0 = u64 [a0]
  7159: 7b 15 60                 u64 [sp + 0x60] = s0
  7162: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  7165: 7b 79                    u64 [a0] = a2
  7167: 51 02 c7 fe              jump @524 if t0 == 0
      :                          @546
  7171: 7c b7 01                 a0 = u8 [a4 + 0x1]
  7174: 97 77 03                 a0 = a0 << 0x3
  7177: c8 a7 07                 a0 = a0 + a3
  7180: 85 49 ff                 a2 = t2 ^ 0xffffffffffffffff
  7183: 82 7a                    a3 = u64 [a0]
  7185: 97 99 03                 a2 = a2 << 0x3
  7188: 86 99 00 f8              a2 = a2 | 0xfffffffffffff800
  7192: c8 89 09                 a2 = a2 + a1
  7195: 7b 9a                    u64 [a2] = a3
  7197: 82 1a 80 00              a3 = u64 [sp + 0x80]
  7201: 7c 64 01                 t2 = u8 [s1 + 0x1]
  7204: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
  7207: 97 09 03                 a2 = ra << 0x3
  7210: c8 89 09                 a2 = a2 + a1
  7213: 82 99                    a2 = u64 [a2]
  7215: 95 bb 01                 a4 = a4 + 0x1
  7218: 95 66 01                 s1 = s1 + 0x1
  7221: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  7224: 7b 79                    u64 [a0] = a2
  7226: 52 02 c9                 jump @546 if t0 != 0
      :                          @547
  7229: 28 89 fe                 jump @524
      :                          @548
  7232: ae cb 2b                 jump @552 if a4 >=u a5
      :                          @549
  7235: 82 12 08                 t0 = u64 [sp + 0x8]
  7238: 64 a3                    t1 = a3
  7240: 01                       fallthrough
      :                          @550
  7241: 7c c7 ff                 a0 = u8 [a5 + 0xffffffffffffffff]
  7244: 97 77 03                 a0 = a0 << 0x3
  7247: c8 37 07                 a0 = a0 + t1
  7250: 82 85 f8                 s0 = u64 [a1 + 0xfffffffffffffff8]
  7253: 82 79                    a2 = u64 [a0]
  7255: 95 c6 ff                 s1 = a5 + 0xffffffffffffffff
  7258: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  7261: 7b 75                    u64 [a0] = s0
  7263: 7b 89 f8                 u64 [a1 + 0xfffffffffffffff8] = a2
  7266: 64 a8                    a1 = a3
  7268: 64 6c                    a5 = s1
  7270: ac 6b e3                 jump @550 if a4 <u s1
      :                          @551
  7273: 28 27                    jump @554
      :                          @552
  7275: 82 12 08                 t0 = u64 [sp + 0x8]
  7278: ae 36 22                 jump @554 if s1 >=u t1
      :                          @553
  7281: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
  7284: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
  7287: 97 77 03                 a0 = a0 << 0x3
  7290: c8 87 07                 a0 = a0 + a1
  7293: 82 79                    a2 = u64 [a0]
  7295: 82 ab                    a4 = u64 [a3]
  7297: 95 3c ff                 a5 = t1 + 0xffffffffffffffff
  7300: 7b a9                    u64 [a3] = a2
  7302: 7b 7b                    u64 [a0] = a4
  7304: 95 aa 08                 a3 = a3 + 0x8
  7307: 64 c3                    t1 = a5
  7309: ac c6 e4                 jump @553 if s1 <u a5
      :                          @554
  7312: 82 17 38                 a0 = u64 [sp + 0x38]
  7315: c9 7a 07                 a0 = a3 - a0
  7318: 98 77 03                 a0 = a0 >> 0x3
  7321: 82 16 40                 s1 = u64 [sp + 0x40]
  7324: c8 76 06                 s1 = s1 + a0
  7327: 7b 20                    u64 [t0] = ra
  7329: 82 18                    a1 = u64 [sp]
  7331: ae 86 9c 00              jump @565 if s1 >=u a1
      :                          @555
  7335: 97 67 03                 a0 = s1 << 0x3
  7338: c8 72 09                 a2 = t0 + a0
  7341: 82 97                    a0 = u64 [a2]
  7343: 7b 27                    u64 [t0] = a0
  7345: 7b 90                    u64 [a2] = ra
  7347: 64 25                    s0 = t0
  7349: c9 68 08                 a1 = a1 - s1
  7352: 7b 18 80 00              u64 [sp + 0x80] = a1
  7356: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
  7359: 95 97 08                 a0 = a2 + 0x8
  7362: ae b6 28                 jump @558 if s1 >=u a4
      :                          @556
  7365: 7b 17 78                 u64 [sp + 0x78] = a0
  7368: 64 57                    a0 = s0
  7370: 64 68                    a1 = s1
  7372: 7b 19 70                 u64 [sp + 0x70] = a2
  7375: 82 19 58                 a2 = u64 [sp + 0x58]
  7378: 82 1a 48                 a3 = u64 [sp + 0x48]
  7381: 64 b5                    s0 = a4
  7383: 50 20 d0 00 3a fa        ra = 208, jump @459
      :                          @557 [@dyn 104]
  7389: 64 50                    ra = s0
  7391: 82 17 70                 a0 = u64 [sp + 0x70]
  7394: 7b 17 58                 u64 [sp + 0x58] = a0
  7397: 82 15 78                 s0 = u64 [sp + 0x78]
  7400: 28 10                    jump @560
      :                          @558
  7402: 64 b8                    a1 = a4
  7404: 82 1a 48                 a3 = u64 [sp + 0x48]
  7407: 50 20 d2 00 22 fa        ra = 210, jump @459
      :                          @559 [@dyn 105]
  7413: 64 60                    ra = s1
  7415: 01                       fallthrough
      :                          @560
  7416: 82 17 40                 a0 = u64 [sp + 0x40]
  7419: 82 18 30                 a1 = u64 [sp + 0x30]
  7422: d8 87 07                 a0 = a0 <u a1
  7425: 85 77 01                 a0 = a0 ^ 0x1
  7428: 82 18 80 00              a1 = u64 [sp + 0x80]
  7432: e6 86 08                 a1 = minu(s1, a1)
  7435: 82 19                    a2 = u64 [sp]
  7437: 98 99 03                 a2 = a2 >> 0x3
  7440: d8 98 08                 a1 = a1 <u a2
  7443: 85 88 01                 a1 = a1 ^ 0x1
  7446: 7b 18 78                 u64 [sp + 0x78] = a1
  7449: 7b 10                    u64 [sp] = ra
  7451: 7b 15 08                 u64 [sp + 0x8] = s0
  7454: 64 52                    t0 = s0
  7456: 33 08 15                 a1 = 0x15
  7459: 33 05 01 01              s0 = 0x101
  7463: ae 80 41 fa              jump @465 if ra >=u a1
      :                          @561
  7467: 28 07 fa                 jump @461
      :                          @562
  7470: 64 27                    a0 = t0
  7472: 64 08                    a1 = ra
  7474: 33 00 d4 00              ra = 0xd4
  7478: 98 82 01                 t0 = a1 >> 0x1
  7481: 28 0c                    jump @569
      :                          @563 [@dyn 106]
  7483: 28 0a fa                 jump @463
      :                          @564
  7486: 00                       trap
      :                          @565
  7487: 00                       trap
      :                          @566
  7488: 00                       trap
      :                          @567
  7489: 00                       trap
      :                          @568
  7490: 51 02 62                 jump @579 if t0 == 0
      :                          @569
  7493: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  7496: 97 2a 01                 a3 = t0 << 0x1
  7499: 95 ac 01                 a5 = a3 + 0x1
  7502: ae 8c f4                 jump @568 if a5 >=u a1
      :                          @570
  7505: 64 2b                    a4 = t0
  7507: 01                       fallthrough
      :                          @571
  7508: 95 aa 02                 a3 = a3 + 0x2
  7511: ae 8a 1f                 jump @574 if a3 >=u a1
      :                          @572
  7514: 97 c9 03                 a2 = a5 << 0x3
  7517: c8 79 09                 a2 = a2 + a0
  7520: 97 aa 03                 a3 = a3 << 0x3
  7523: c8 7a 0a                 a3 = a3 + a0
  7526: 82 99                    a2 = u64 [a2]
  7528: 82 aa                    a3 = u64 [a3]
  7530: d8 9a 03                 t1 = a3 <u a2
  7533: c8 c3 03                 t1 = t1 + a5
  7536: ac 8b 0c                 jump @575 if a4 <u a1
      :                          @573
  7539: 28 a7 00                 jump @594
      :                          @574
  7542: 64 c3                    t1 = a5
  7544: ae 8b a2 00              jump @594 if a4 >=u a1
      :                          @575
  7548: ae 83 9f 00              jump @595 if t1 >=u a1
      :                          @576
  7552: 97 ba 03                 a3 = a4 << 0x3
  7555: c8 7a 0a                 a3 = a3 + a0
  7558: 97 3b 03                 a4 = t1 << 0x3
  7561: c8 7b 0b                 a4 = a4 + a0
  7564: 82 a9                    a2 = u64 [a3]
  7566: 82 bc                    a5 = u64 [a4]
  7568: ae 9c b2                 jump @568 if a5 >=u a2
      :                          @577
  7571: 7b ac                    u64 [a3] = a5
  7573: 97 3a 01                 a3 = t1 << 0x1
  7576: 95 ac 01                 a5 = a3 + 0x1
  7579: 7b b9                    u64 [a4] = a2
  7581: 64 3b                    a4 = t1
  7583: ac 8c b5                 jump @571 if a5 <u a1
      :                          @578
  7586: 28 a0                    jump @568
      :                          @579
  7588: 33 02 02                 t0 = 0x2
  7591: 64 83                    t1 = a1
  7593: 01                       fallthrough
      :                          @580
  7594: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
  7597: ae 83 6e                 jump @595 if t1 >=u a1
      :                          @581
  7600: 97 39 03                 a2 = t1 << 0x3
  7603: c8 79 09                 a2 = a2 + a0
  7606: 82 9a                    a3 = u64 [a2]
  7608: 82 7b                    a4 = u64 [a0]
  7610: 7b 7a                    u64 [a0] = a3
  7612: 7b 9b                    u64 [a2] = a4
  7614: ac 23 58                 jump @591 if t1 <u t0
      :                          @582
  7617: 33 0a                    a3 = 0
  7619: 33 09                    a2 = 0
  7621: 33 0b 01                 a4 = 0x1
  7624: 01                       fallthrough
      :                          @583
  7625: 95 aa 02                 a3 = a3 + 0x2
  7628: ae 3a 1e                 jump @586 if a3 >=u t1
      :                          @584
  7631: 97 bc 03                 a5 = a4 << 0x3
  7634: c8 7c 0c                 a5 = a5 + a0
  7637: 97 aa 03                 a3 = a3 << 0x3
  7640: c8 7a 0a                 a3 = a3 + a0
  7643: 82 cc                    a5 = u64 [a5]
  7645: 82 aa                    a3 = u64 [a3]
  7647: d8 ca 04                 t2 = a3 <u a5
  7650: c8 b4 04                 t2 = t2 + a4
  7653: ac 39 0a                 jump @587 if a2 <u t1
      :                          @585
  7656: 28 30                    jump @592
      :                          @586
  7658: 64 b4                    t2 = a4
  7660: ae 39 2c                 jump @592 if a2 >=u t1
      :                          @587
  7663: ae 34 2a                 jump @593 if t2 >=u t1
      :                          @588
  7666: 97 99 03                 a2 = a2 << 0x3
  7669: c8 97 0a                 a3 = a0 + a2
  7672: 97 49 03                 a2 = t2 << 0x3
  7675: c8 79 09                 a2 = a2 + a0
  7678: 82 ac                    a5 = u64 [a3]
  7680: 82 9b                    a4 = u64 [a2]
  7682: ae cb a8                 jump @580 if a4 >=u a5
      :                          @589
  7685: 7b ab                    u64 [a3] = a4
  7687: 97 4a 01                 a3 = t2 << 0x1
  7690: 95 ab 01                 a4 = a3 + 0x1
  7693: 7b 9c                    u64 [a2] = a5
  7695: 64 49                    a2 = t2
  7697: ac 3b b8                 jump @583 if a4 <u t1
      :                          @590
  7700: 28 96                    jump @580
      :                          @591
  7702: 32 00                    ret
      :                          @592
  7704: 00                       trap
      :                          @593
  7705: 00                       trap
      :                          @594
  7706: 00                       trap
      :                          @595
  7707: 00                       trap
      :                          @596
  7708: 51 02 62                 jump @607 if t0 == 0
      :                          @597
  7711: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  7714: 97 2a 01                 a3 = t0 << 0x1
  7717: 95 ac 01                 a5 = a3 + 0x1
  7720: ae 8c f4                 jump @596 if a5 >=u a1
      :                          @598
  7723: 64 2b                    a4 = t0
  7725: 01                       fallthrough
      :                          @599
  7726: 95 aa 02                 a3 = a3 + 0x2
  7729: ae 8a 1f                 jump @602 if a3 >=u a1
      :                          @600
  7732: 97 c9 03                 a2 = a5 << 0x3
  7735: c8 79 09                 a2 = a2 + a0
  7738: 97 aa 03                 a3 = a3 << 0x3
  7741: c8 7a 0a                 a3 = a3 + a0
  7744: 82 99                    a2 = u64 [a2]
  7746: 82 aa                    a3 = u64 [a3]
  7748: d9 a9 03                 t1 = a2 <s a3
  7751: c8 c3 03                 t1 = t1 + a5
  7754: ac 8b 0c                 jump @603 if a4 <u a1
      :                          @601
  7757: 28 a7 00                 jump @622
      :                          @602
  7760: 64 c3                    t1 = a5
  7762: ae 8b a2 00              jump @622 if a4 >=u a1
      :                          @603
  7766: ae 83 9f 00              jump @623 if t1 >=u a1
      :                          @604
  7770: 97 ba 03                 a3 = a4 << 0x3
  7773: c8 7a 0a                 a3 = a3 + a0
  7776: 97 3b 03                 a4 = t1 << 0x3
  7779: c8 7b 0b                 a4 = a4 + a0
  7782: 82 a9                    a2 = u64 [a3]
  7784: 82 bc                    a5 = u64 [a4]
  7786: af c9 b2                 jump @596 if a2 >=s a5
      :                          @605
  7789: 7b ac                    u64 [a3] = a5
  7791: 97 3a 01                 a3 = t1 << 0x1
  7794: 95 ac 01                 a5 = a3 + 0x1
  7797: 7b b9                    u64 [a4] = a2
  7799: 64 3b                    a4 = t1
  7801: ac 8c b5                 jump @599 if a5 <u a1
      :                          @606
  7804: 28 a0                    jump @596
      :                          @607
  7806: 33 02 02                 t0 = 0x2
  7809: 64 83                    t1 = a1
  7811: 01                       fallthrough
      :                          @608
  7812: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
  7815: ae 83 6e                 jump @623 if t1 >=u a1
      :                          @609
  7818: 97 39 03                 a2 = t1 << 0x3
  7821: c8 79 09                 a2 = a2 + a0
  7824: 82 9a                    a3 = u64 [a2]
  7826: 82 7b                    a4 = u64 [a0]
  7828: 7b 7a                    u64 [a0] = a3
  7830: 7b 9b                    u64 [a2] = a4
  7832: ac 23 58                 jump @619 if t1 <u t0
      :                          @610
  7835: 33 0a                    a3 = 0
  7837: 33 09                    a2 = 0
  7839: 33 0b 01                 a4 = 0x1
  7842: 01                       fallthrough
      :                          @611
  7843: 95 aa 02                 a3 = a3 + 0x2
  7846: ae 3a 1e                 jump @614 if a3 >=u t1
      :                          @612
  7849: 97 bc 03                 a5 = a4 << 0x3
  7852: c8 7c 0c                 a5 = a5 + a0
  7855: 97 aa 03                 a3 = a3 << 0x3
  7858: c8 7a 0a                 a3 = a3 + a0
  7861: 82 cc                    a5 = u64 [a5]
  7863: 82 aa                    a3 = u64 [a3]
  7865: d9 ac 04                 t2 = a5 <s a3
  7868: c8 b4 04                 t2 = t2 + a4
  7871: ac 39 0a                 jump @615 if a2 <u t1
      :                          @613
  7874: 28 30                    jump @620
      :                          @614
  7876: 64 b4                    t2 = a4
  7878: ae 39 2c                 jump @620 if a2 >=u t1
      :                          @615
  7881: ae 34 2a                 jump @621 if t2 >=u t1
      :                          @616
  7884: 97 99 03                 a2 = a2 << 0x3
  7887: c8 97 0a                 a3 = a0 + a2
  7890: 97 49 03                 a2 = t2 << 0x3
  7893: c8 79 09                 a2 = a2 + a0
  7896: 82 ac                    a5 = u64 [a3]
  7898: 82 9b                    a4 = u64 [a2]
  7900: af bc a8                 jump @608 if a5 >=s a4
      :                          @617
  7903: 7b ab                    u64 [a3] = a4
  7905: 97 4a 01                 a3 = t2 << 0x1
  7908: 95 ab 01                 a4 = a3 + 0x1
  7911: 7b 9c                    u64 [a2] = a5
  7913: 64 49                    a2 = t2
  7915: ac 3b b8                 jump @611 if a4 <u t1
      :                          @618
  7918: 28 96                    jump @608
      :                          @619
  7920: 32 00                    ret
      :                          @620
  7922: 00                       trap
      :                          @621
  7923: 00                       trap
      :                          @622
  7924: 00                       trap
      :                          @623
  7925: 00                       trap
      :                          @624 [@dyn 107]
  7926: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  7929: 7b 10 38                 u64 [sp + 0x38] = ra
  7932: 7b 15 30                 u64 [sp + 0x30] = s0
  7935: 7b 16 28                 u64 [sp + 0x28] = s1
  7938: 64 85                    s0 = a1
  7940: 82 88 28                 a1 = u64 [a1 + 0x28]
  7943: 82 59 20                 a2 = u64 [s0 + 0x20]
  7946: 82 8a 18                 a3 = u64 [a1 + 0x18]
  7949: 64 76                    s1 = a0
  7951: 33 08 a8 10 01           a1 = 0x110a8
  7956: 64 97                    a0 = a2
  7958: 33 09                    a2 = 0
  7960: b4 a0 02 d8 00           ra = 216, jump [a3]
      :                          @625 [@dyn 108]
  7965: 7b 15 08                 u64 [sp + 0x8] = s0
  7968: 78 17 10                 u8 [sp + 0x10] = a0
  7971: 49 01                    u64 [sp + 0] = 0
  7973: 33 05 01                 s0 = 0x1
  7976: 78 15 11                 u8 [sp + 0x11] = s0
  7979: 7b 16 18                 u64 [sp + 0x18] = s1
  7982: 95 66 08                 s1 = s1 + 0x8
  7985: 7b 16 20                 u64 [sp + 0x20] = s1
  7988: 33 06 1c                 s1 = 0x1c
  7991: 64 17                    a0 = sp
  7993: 95 18 18                 a1 = sp + 0x18
  7996: 33 09 1c                 a2 = 0x1c
  7999: 50 20 da 00 c0 a0 00     ra = 218, jump @3140
      :                          @626 [@dyn 109]
  8006: 64 17                    a0 = sp
  8008: 95 18 20                 a1 = sp + 0x20
  8011: 64 69                    a2 = s1
  8013: 50 20 dc 00 b2 a0 00     ra = 220, jump @3140
      :                          @627 [@dyn 110]
  8020: 82 17                    a0 = u64 [sp]
  8022: 7c 18 10                 a1 = u8 [sp + 0x10]
  8025: 51 07 59                 jump @635 if a0 == 0
      :                          @628
  8028: 52 08 59                 jump @636 if a1 != 0
      :                          @629
  8031: 7c 18 11                 a1 = u8 [sp + 0x11]
  8034: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  8037: 8e 77                    a0 = a0 >u 0
  8039: 82 16 08                 s1 = u64 [sp + 0x8]
  8042: 88 88 01                 a1 = a1 <u 0x1
  8045: d4 87 07                 a0 = a0 | a1
  8048: 52 07 28                 jump @633 if a0 != 0
      :                          @630
  8051: 7c 67 34                 a0 = u8 [s1 + 0x34]
  8054: 84 77 04                 a0 = a0 & 0x4
  8057: 52 07 1f                 jump @633 if a0 != 0
      :                          @631
  8060: 82 68 28                 a1 = u64 [s1 + 0x28]
  8063: 82 67 20                 a0 = u64 [s1 + 0x20]
  8066: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8069: 33 08 e7 10 01           a1 = 0x110e7
  8074: 33 09 01                 a2 = 0x1
  8077: 33 05 01                 s0 = 0x1
  8080: b4 a0 02 de 00           ra = 222, jump [a3]
      :                          @632 [@dyn 111]
  8085: 52 07 20                 jump @636 if a0 != 0
      :                          @633
  8088: 82 68 28                 a1 = u64 [s1 + 0x28]
  8091: 82 67 20                 a0 = u64 [s1 + 0x20]
  8094: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8097: 33 08 a8 10 01           a1 = 0x110a8
  8102: 33 09 01                 a2 = 0x1
  8105: b4 a0 02 e0 00           ra = 224, jump [a3]
      :                          @634 [@dyn 112]
  8110: 64 75                    s0 = a0
  8112: 28 05                    jump @636
      :                          @635
  8114: 8e 85                    s0 = a1 >u 0
  8116: 01                       fallthrough
      :                          @636
  8117: 64 57                    a0 = s0
  8119: 82 10 38                 ra = u64 [sp + 0x38]
  8122: 82 15 30                 s0 = u64 [sp + 0x30]
  8125: 82 16 28                 s1 = u64 [sp + 0x28]
  8128: 95 11 40                 sp = sp + 0x40
  8131: 32 00                    ret
      :                          @637
  8133: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  8136: 7b 10 18                 u64 [sp + 0x18] = ra
  8139: 7b 15 10                 u64 [sp + 0x10] = s0
  8142: 7b 16 08                 u64 [sp + 0x8] = s1
  8145: 82 8a 08                 a3 = u64 [a1 + 0x8]
  8148: 82 89 18                 a2 = u64 [a1 + 0x18]
  8151: 33 0b 01                 a4 = 0x1
  8154: 64 75                    s0 = a0
  8156: aa ba 15                 jump @641 if a3 == a4
      :                          @638
  8159: 52 0a 15                 jump @642 if a3 != 0
      :                          @639
  8162: 52 09 12                 jump @642 if a2 != 0
      :                          @640
  8165: 33 06                    s1 = 0
  8167: 33 08 a8 10 01           a1 = 0x110a8
  8172: 33 07 01                 a0 = 0x1
  8175: 28 67                    jump @651
      :                          @641
  8177: 51 09 15                 jump @643 if a2 == 0
      :                          @642
  8180: 64 57                    a0 = s0
  8182: 82 10 18                 ra = u64 [sp + 0x18]
  8185: 82 15 10                 s0 = u64 [sp + 0x10]
  8188: 82 16 08                 s1 = u64 [sp + 0x8]
  8191: 95 11 20                 sp = sp + 0x20
  8194: 28 db 8e 00              jump @2789
      :                          @643
  8198: 82 87                    a0 = u64 [a1]
  8200: 82 76 08                 s1 = u64 [a0 + 0x8]
  8203: 82 78                    a1 = u64 [a0]
  8205: 51 06 45                 jump @650 if s1 == 0
      :                          @644
  8208: 57 06 6a                 jump @654 if s1 <s 0
      :                          @645
  8211: 64 53                    t1 = s0
  8213: 89 67                    a0 = s1 <s 0
  8215: 85 75 01                 s0 = a0 ^ 0x1
  8218: 33 0b 10 01 03           a4 = 0x30110
  8223: 33 02 00 00 10           t0 = 0x100000
  8228: c8 2b 0b                 a4 = a4 + t0
  8231: 01                       fallthrough
      :                          @646
  8232: 82 bc                    a5 = u64 [a4]
  8234: c8 6c 0a                 a3 = a5 + s1
  8237: ac ca 4c                 jump @653 if a3 <u a5
      :                          @647
  8240: c8 5a 07                 a0 = a3 + s0
  8243: d8 a7 09                 a2 = a0 <u a3
  8246: d8 72 07                 a0 = t0 <u a0
  8249: d4 97 07                 a0 = a0 | a2
  8252: 52 07 3d                 jump @653 if a0 != 0
      :                          @648
  8255: 82 b7                    a0 = u64 [a4]
  8257: ab c7 e7                 jump @646 if a0 != a5
      :                          @649
  8260: 7b ba                    u64 [a4] = a3
  8262: 33 07 10 01 13           a0 = 0x130110
  8267: c9 a7 07                 a0 = a0 - a3
  8270: 64 35                    s0 = t1
  8272: 28 06                    jump @651
      :                          @650
  8274: 33 07 01                 a0 = 0x1
  8277: 01                       fallthrough
      :                          @651
  8278: 7b 17                    u64 [sp] = a0
  8280: 64 69                    a2 = s1
  8282: 50 20 e2 00 fd 90 00     ra = 226, jump @2839
      :                          @652 [@dyn 113]
  8289: 7b 56                    u64 [s0] = s1
  8291: 82 17                    a0 = u64 [sp]
  8293: 7b 57 08                 u64 [s0 + 0x8] = a0
  8296: 7b 56 10                 u64 [s0 + 0x10] = s1
  8299: 82 10 18                 ra = u64 [sp + 0x18]
  8302: 82 15 10                 s0 = u64 [sp + 0x10]
  8305: 82 16 08                 s1 = u64 [sp + 0x8]
  8308: 95 11 20                 sp = sp + 0x20
  8311: 32 00                    ret
      :                          @653
  8313: 00                       trap
      :                          @654
  8314: 00                       trap
      :                          @655
  8315: 95 11 f8                 sp = sp + 0xfffffffffffffff8
  8318: 7b 15                    u64 [sp] = s0
  8320: 33 03 10 01 03           t1 = 0x30110
  8325: 33 02 00 00 10           t0 = 0x100000
  8330: c8 23 04                 t2 = t1 + t0
  8333: 01                       fallthrough
      :                          @656
  8334: 82 4b                    a4 = u64 [t2]
  8336: c8 7b 0c                 a5 = a4 + a0
  8339: ac bc 30                 jump @661 if a5 <u a4
      :                          @657
  8342: 95 c8 08                 a1 = a5 + 0x8
  8345: d8 c8 09                 a2 = a1 <u a5
  8348: d8 82 08                 a1 = t0 <u a1
  8351: d4 98 08                 a1 = a1 | a2
  8354: 52 08 21                 jump @661 if a1 != 0
      :                          @658
  8357: c9 c3 08                 a1 = t1 - a5
  8360: c8 28 08                 a1 = a1 + t0
  8363: 84 89 07                 a2 = a1 & 0x7
  8366: c8 9c 0c                 a5 = a5 + a2
  8369: 01                       fallthrough
      :                          @659
  8370: 82 4a                    a3 = u64 [t2]
  8372: ab ba da                 jump @656 if a3 != a4
      :                          @660
  8375: 7b 4c                    u64 [t2] = a5
  8377: c9 98 07                 a0 = a1 - a2
  8380: 82 15                    s0 = u64 [sp]
  8382: 95 11 08                 sp = sp + 0x8
  8385: 32 00                    ret
      :                          @661
  8387: 00                       trap
      :                          @662
  8388: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  8391: 7b 10 30                 u64 [sp + 0x30] = ra
  8394: 7b 15 28                 u64 [sp + 0x28] = s0
  8397: 7b 16 20                 u64 [sp + 0x20] = s1
  8400: 64 90                    ra = a2
  8402: 51 08 90 00              jump @674 if a1 == 0
      :                          @663
  8406: 64 86                    s1 = a1
  8408: 82 a8 08                 a1 = u64 [a3 + 0x8]
  8411: 51 08 90 00              jump @675 if a1 == 0
      :                          @664
  8415: 82 a8 10                 a1 = u64 [a3 + 0x10]
  8418: 51 08 e4 00              jump @683 if a1 == 0
      :                          @665
  8422: 7b 18 10                 u64 [sp + 0x10] = a1
  8425: 7b 17 18                 u64 [sp + 0x18] = a0
  8428: 66 67                    a0 = cpop s1
  8430: 33 08 01                 a1 = 0x1
  8433: ab 87 2d 01              jump @691 if a0 != a1
      :                          @666
  8437: 82 a7                    a0 = u64 [a3]
  8439: 7b 17 08                 u64 [sp + 0x8] = a0
  8442: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
  8445: 33 04 10 01 03           t2 = 0x30110
  8450: 33 03 00 00 10           t1 = 0x100000
  8455: c8 34 0a                 a3 = t2 + t1
  8458: 01                       fallthrough
      :                          @667
  8459: 82 ab                    a4 = u64 [a3]
  8461: c8 0b 0c                 a5 = a4 + ra
  8464: ac bc 0e 01              jump @691 if a5 <u a4
      :                          @668
  8468: c8 6c 07                 a0 = a5 + s1
  8471: d8 c7 09                 a2 = a0 <u a5
  8474: d8 73 07                 a0 = t1 <u a0
  8477: d4 97 07                 a0 = a0 | a2
  8480: 52 07 fe 00              jump @691 if a0 != 0
      :                          @669
  8484: c9 c4 09                 a2 = t2 - a5
  8487: c8 39 09                 a2 = a2 + t1
  8490: d2 92 07                 a0 = t0 & a2
  8493: c8 7c 0c                 a5 = a5 + a0
  8496: 01                       fallthrough
      :                          @670
  8497: 82 a5                    s0 = u64 [a3]
  8499: ab b5 d8                 jump @667 if s0 != a4
      :                          @671
  8502: 7b ac                    u64 [a3] = a5
  8504: 7b 10                    u64 [sp] = ra
  8506: c9 79 06                 s1 = a2 - a0
  8509: 64 67                    a0 = s1
  8511: 82 18 08                 a1 = u64 [sp + 0x8]
  8514: 82 15 10                 s0 = u64 [sp + 0x10]
  8517: 64 59                    a2 = s0
  8519: 50 20 e4 00 10 90 00     ra = 228, jump @2839
      :                          @672 [@dyn 114]
  8526: 54 35 00 00 10 db 00     jump @692 if s0 <=u 1048576
      :                          @673
  8533: 82 10                    ra = u64 [sp]
  8535: 82 17 18                 a0 = u64 [sp + 0x18]
  8538: 33 08                    a1 = 0
  8540: 7b 76 08                 u64 [a0 + 0x8] = s1
  8543: 28 03 01                 jump @699
      :                          @674
  8546: 49 17 08                 u64 [a0 + 8] = 0
  8549: 33 08 01                 a1 = 0x1
  8552: 28 fa 00                 jump @699
      :                          @675
  8555: 51 00 f1 00              jump @698 if ra == 0
      :                          @676
  8559: 7b 17 18                 u64 [sp + 0x18] = a0
  8562: 66 67                    a0 = cpop s1
  8564: 33 08 01                 a1 = 0x1
  8567: ab 87 a7 00              jump @691 if a0 != a1
      :                          @677
  8571: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
  8574: 33 04 10 01 03           t2 = 0x30110
  8579: 33 03 00 00 10           t1 = 0x100000
  8584: c8 34 0a                 a3 = t2 + t1
  8587: 01                       fallthrough
      :                          @678
  8588: 82 ab                    a4 = u64 [a3]
  8590: c8 0b 0c                 a5 = a4 + ra
  8593: ac bc 8d 00              jump @691 if a5 <u a4
      :                          @679
  8597: c8 6c 07                 a0 = a5 + s1
  8600: d8 c7 09                 a2 = a0 <u a5
  8603: d8 73 07                 a0 = t1 <u a0
  8606: d4 97 07                 a0 = a0 | a2
  8609: 52 07 7d                 jump @691 if a0 != 0
      :                          @680
  8612: c9 c4 09                 a2 = t2 - a5
  8615: c8 39 09                 a2 = a2 + t1
  8618: d2 92 07                 a0 = t0 & a2
  8621: c8 7c 0c                 a5 = a5 + a0
  8624: 01                       fallthrough
      :                          @681
  8625: 82 a5                    s0 = u64 [a3]
  8627: ab b5 d9                 jump @678 if s0 != a4
      :                          @682
  8630: 7b ac                    u64 [a3] = a5
  8632: c9 79 06                 s1 = a2 - a0
  8635: 82 17 18                 a0 = u64 [sp + 0x18]
  8638: 33 08                    a1 = 0
  8640: 7b 76 08                 u64 [a0 + 0x8] = s1
  8643: 28 9f 00                 jump @699
      :                          @683
  8646: 51 00 96 00              jump @698 if ra == 0
      :                          @684
  8650: 7b 17 18                 u64 [sp + 0x18] = a0
  8653: 66 67                    a0 = cpop s1
  8655: 33 08 01                 a1 = 0x1
  8658: ab 87 4c                 jump @691 if a0 != a1
      :                          @685
  8661: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
  8664: 33 04 10 01 03           t2 = 0x30110
  8669: 33 03 00 00 10           t1 = 0x100000
  8674: c8 34 0a                 a3 = t2 + t1
  8677: 01                       fallthrough
      :                          @686
  8678: 82 ab                    a4 = u64 [a3]
  8680: c8 0b 0c                 a5 = a4 + ra
  8683: ac bc 33                 jump @691 if a5 <u a4
      :                          @687
  8686: c8 6c 09                 a2 = a5 + s1
  8689: d8 c9 05                 s0 = a2 <u a5
  8692: d8 93 09                 a2 = t1 <u a2
  8695: d4 59 09                 a2 = a2 | s0
  8698: 52 09 24                 jump @691 if a2 != 0
      :                          @688
  8701: c9 c4 09                 a2 = t2 - a5
  8704: c8 39 09                 a2 = a2 + t1
  8707: d2 92 05                 s0 = t0 & a2
  8710: c8 5c 0c                 a5 = a5 + s0
  8713: 01                       fallthrough
      :                          @689
  8714: 82 a7                    a0 = u64 [a3]
  8716: ab b7 da                 jump @686 if a0 != a4
      :                          @690
  8719: 7b ac                    u64 [a3] = a5
  8721: c9 59 06                 s1 = a2 - s0
  8724: 82 17 18                 a0 = u64 [sp + 0x18]
  8727: 33 08                    a1 = 0
  8729: 7b 76 08                 u64 [a0 + 0x8] = s1
  8732: 28 46                    jump @699
      :                          @691
  8734: 82 17 18                 a0 = u64 [sp + 0x18]
  8737: 7b 76 08                 u64 [a0 + 0x8] = s1
  8740: 33 08 01                 a1 = 0x1
  8743: 28 3b                    jump @699
      :                          @692
  8745: 33 08 10 01 03           a1 = 0x30110
  8750: 95 87 00 00 10           a0 = a1 + 0x100000
  8755: 82 10                    ra = u64 [sp]
  8757: 82 1c 10                 a5 = u64 [sp + 0x10]
  8760: 82 15 08                 s0 = u64 [sp + 0x8]
  8763: 01                       fallthrough
      :                          @693
  8764: 82 78                    a1 = u64 [a0]
  8766: c9 87 09                 a2 = a0 - a1
  8769: ab 59 11                 jump @697 if a2 != s0
      :                          @694
  8772: c9 c8 09                 a2 = a1 - a5
  8775: 01                       fallthrough
      :                          @695
  8776: 82 7a                    a3 = u64 [a0]
  8778: ab 8a f2                 jump @693 if a3 != a1
      :                          @696
  8781: 7b 79                    u64 [a0] = a2
  8783: 33 0b                    a4 = 0
  8785: 01                       fallthrough
      :                          @697
  8786: 82 17 18                 a0 = u64 [sp + 0x18]
  8789: 33 08                    a1 = 0
  8791: 7b 76 08                 u64 [a0 + 0x8] = s1
  8794: 28 08                    jump @699
      :                          @698
  8796: 33 08                    a1 = 0
  8798: 7b 76 08                 u64 [a0 + 0x8] = s1
  8801: 01                       fallthrough
      :                          @699
  8802: 7b 70 10                 u64 [a0 + 0x10] = ra
  8805: 7b 78                    u64 [a0] = a1
  8807: 82 10 30                 ra = u64 [sp + 0x30]
  8810: 82 15 28                 s0 = u64 [sp + 0x28]
  8813: 82 16 20                 s1 = u64 [sp + 0x20]
  8816: 95 11 38                 sp = sp + 0x38
  8819: 32 00                    ret
      :                          @700
  8821: 51 07 3b                 jump @706 if a0 == 0
      :                          @701
  8824: 33 0a 10 01 03           a3 = 0x30110
  8829: 33 02 00 00 10           t0 = 0x100000
  8834: c8 2a 0a                 a3 = a3 + t0
  8837: 01                       fallthrough
      :                          @702
  8838: 82 ab                    a4 = u64 [a3]
  8840: c8 7b 09                 a2 = a4 + a0
  8843: ac b9 2b                 jump @707 if a2 <u a4
      :                          @703
  8846: 95 9c 01                 a5 = a2 + 0x1
  8849: 88 c8 01                 a1 = a5 <u 0x1
  8852: d8 c2 0c                 a5 = t0 <u a5
  8855: d4 c8 08                 a1 = a1 | a5
  8858: 52 08 1c                 jump @707 if a1 != 0
      :                          @704
  8861: 82 a8                    a1 = u64 [a3]
  8863: ab b8 e7                 jump @702 if a1 != a4
      :                          @705
  8866: 7b a9                    u64 [a3] = a2
  8868: 33 0c                    a5 = 0
  8870: 33 08 10 01 13           a1 = 0x130110
  8875: c9 98 08                 a1 = a1 - a2
  8878: 32 00                    ret
      :                          @706
  8880: 33 08 01                 a1 = 0x1
  8883: 28 2c 6e                 jump @2354
      :                          @707
  8886: 00                       trap
      :                          @708
  8887: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  8890: 7b 10 40                 u64 [sp + 0x40] = ra
  8893: 7b 15 38                 u64 [sp + 0x38] = s0
  8896: 7b 16 30                 u64 [sp + 0x30] = s1
  8899: 95 88 01                 a1 = a1 + 0x1
  8902: 51 08 5b                 jump @716 if a1 == 0
      :                          @709
  8905: 64 75                    s0 = a0
  8907: 82 77                    a0 = u64 [a0]
  8909: 97 79 01                 a2 = a0 << 0x1
  8912: 33 0a 04                 a3 = 0x4
  8915: e4 a8 08                 a1 = maxu(a1, a3)
  8918: e4 89 06                 s1 = maxu(a2, a1)
  8921: 98 68 3c                 a1 = s1 >> 0x3c
  8924: 88 88 01                 a1 = a1 <u 0x1
  8927: 97 69 03                 a2 = s1 << 0x3
  8930: 97 88 03                 a1 = a1 << 0x3
  8933: 51 07 15                 jump @711 if a0 == 0
      :                          @710
  8936: 82 5a 08                 a3 = u64 [s0 + 0x8]
  8939: 97 77 03                 a0 = a0 << 0x3
  8942: 7b 1a 18                 u64 [sp + 0x18] = a3
  8945: 49 11 20 08              u64 [sp + 32] = 0x8
  8949: 7b 17 28                 u64 [sp + 0x28] = a0
  8952: 28 06                    jump @712
      :                          @711
  8954: 49 11 20                 u64 [sp + 32] = 0
  8957: 01                       fallthrough
      :                          @712
  8958: 64 17                    a0 = sp
  8960: 95 1a 18                 a3 = sp + 0x18
  8963: 50 20 e6 00 c1 fd        ra = 230, jump @662
      :                          @713 [@dyn 115]
  8969: 82 18                    a1 = u64 [sp]
  8971: 82 17 08                 a0 = u64 [sp + 0x8]
  8974: 51 08 14                 jump @717 if a1 == 0
      :                          @714
  8977: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  8987: aa 87 0d                 jump @718 if a0 == a1
      :                          @715
  8990: 52 07 18                 jump @719 if a0 != 0
      :                          @716
  8993: 00                       trap
      :                          @717
  8994: 7b 57 08                 u64 [s0 + 0x8] = a0
  8997: 7b 56                    u64 [s0] = s1
  8999: 01                       fallthrough
      :                          @718
  9000: 82 10 40                 ra = u64 [sp + 0x40]
  9003: 82 15 38                 s0 = u64 [sp + 0x38]
  9006: 82 16 30                 s1 = u64 [sp + 0x30]
  9009: 95 11 48                 sp = sp + 0x48
  9012: 32 00                    ret
      :                          @719
  9014: 00                       trap
      :                          @720
  9015: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  9018: 7b 10 40                 u64 [sp + 0x40] = ra
  9021: 7b 15 38                 u64 [sp + 0x38] = s0
  9024: 7b 16 30                 u64 [sp + 0x30] = s1
  9027: 95 88 01                 a1 = a1 + 0x1
  9030: 51 08 54                 jump @728 if a1 == 0
      :                          @721
  9033: 64 75                    s0 = a0
  9035: 82 77                    a0 = u64 [a0]
  9037: 97 79 01                 a2 = a0 << 0x1
  9040: 33 0a 08                 a3 = 0x8
  9043: e4 a8 08                 a1 = maxu(a1, a3)
  9046: e4 89 06                 s1 = maxu(a2, a1)
  9049: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  9052: 98 88 3f                 a1 = a1 >> 0x3f
  9055: 51 07 12                 jump @723 if a0 == 0
      :                          @722
  9058: 82 59 08                 a2 = u64 [s0 + 0x8]
  9061: 7b 19 18                 u64 [sp + 0x18] = a2
  9064: 49 11 20 01              u64 [sp + 32] = 0x1
  9068: 7b 17 28                 u64 [sp + 0x28] = a0
  9071: 28 06                    jump @724
      :                          @723
  9073: 49 11 20                 u64 [sp + 32] = 0
  9076: 01                       fallthrough
      :                          @724
  9077: 64 17                    a0 = sp
  9079: 95 1a 18                 a3 = sp + 0x18
  9082: 64 69                    a2 = s1
  9084: 50 20 e8 00 48 fd        ra = 232, jump @662
      :                          @725 [@dyn 116]
  9090: 82 18                    a1 = u64 [sp]
  9092: 82 17 08                 a0 = u64 [sp + 0x8]
  9095: 51 08 14                 jump @729 if a1 == 0
      :                          @726
  9098: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  9108: aa 87 0d                 jump @730 if a0 == a1
      :                          @727
  9111: 52 07 18                 jump @731 if a0 != 0
      :                          @728
  9114: 00                       trap
      :                          @729
  9115: 7b 57 08                 u64 [s0 + 0x8] = a0
  9118: 7b 56                    u64 [s0] = s1
  9120: 01                       fallthrough
      :                          @730
  9121: 82 10 40                 ra = u64 [sp + 0x40]
  9124: 82 15 38                 s0 = u64 [sp + 0x38]
  9127: 82 16 30                 s1 = u64 [sp + 0x30]
  9130: 95 11 48                 sp = sp + 0x48
  9133: 32 00                    ret
      :                          @731
  9135: 00                       trap
      :                          @732 [@dyn 117]
  9136: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  9139: 7b 10 30                 u64 [sp + 0x30] = ra
  9142: 7b 15 28                 u64 [sp + 0x28] = s0
  9145: 7b 16 20                 u64 [sp + 0x20] = s1
  9148: 82 79                    a2 = u64 [a0]
  9150: 64 85                    s0 = a1
  9152: 51 09 9c 00              jump @743 if a2 == 0
      :                          @733
  9156: 82 58 28                 a1 = u64 [s0 + 0x28]
  9159: 95 77 08                 a0 = a0 + 0x8
  9162: 7b 17                    u64 [sp] = a0
  9164: 82 57 20                 a0 = u64 [s0 + 0x20]
  9167: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9170: 33 08 e8 00 01           a1 = 0x100e8
  9175: 33 09 04                 a2 = 0x4
  9178: b4 a0 02 ec 00           ra = 236, jump [a3]
      :                          @734 [@dyn 118]
  9183: 7b 15 10                 u64 [sp + 0x10] = s0
  9186: 78 17 18                 u8 [sp + 0x18] = a0
  9189: 49 11 08                 u64 [sp + 8] = 0
  9192: 46 11 19                 u8 [sp + 25] = 0
  9195: 33 09 18                 a2 = 0x18
  9198: 95 17 08                 a0 = sp + 0x8
  9201: 64 18                    a1 = sp
  9203: 50 20 ee 00 0c 9c 00     ra = 238, jump @3140
      :                          @735 [@dyn 119]
  9210: 82 17 08                 a0 = u64 [sp + 0x8]
  9213: 7c 18 18                 a1 = u8 [sp + 0x18]
  9216: 51 07 7b                 jump @744 if a0 == 0
      :                          @736
  9219: 33 05 01                 s0 = 0x1
  9222: 52 08 78                 jump @745 if a1 != 0
      :                          @737
  9225: 7c 18 19                 a1 = u8 [sp + 0x19]
  9228: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9231: 8e 77                    a0 = a0 >u 0
  9233: 82 16 10                 s1 = u64 [sp + 0x10]
  9236: 88 88 01                 a1 = a1 <u 0x1
  9239: d4 87 07                 a0 = a0 | a1
  9242: 52 07 28                 jump @741 if a0 != 0
      :                          @738
  9245: 7c 67 34                 a0 = u8 [s1 + 0x34]
  9248: 84 77 04                 a0 = a0 & 0x4
  9251: 52 07 1f                 jump @741 if a0 != 0
      :                          @739
  9254: 82 68 28                 a1 = u64 [s1 + 0x28]
  9257: 82 67 20                 a0 = u64 [s1 + 0x20]
  9260: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9263: 33 08 e7 10 01           a1 = 0x110e7
  9268: 33 09 01                 a2 = 0x1
  9271: 33 05 01                 s0 = 0x1
  9274: b4 a0 02 f0 00           ra = 240, jump [a3]
      :                          @740 [@dyn 120]
  9279: 52 07 3f                 jump @745 if a0 != 0
      :                          @741
  9282: 82 68 28                 a1 = u64 [s1 + 0x28]
  9285: 82 67 20                 a0 = u64 [s1 + 0x20]
  9288: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9291: 33 08 a8 10 01           a1 = 0x110a8
  9296: 33 09 01                 a2 = 0x1
  9299: b4 a0 02 f2 00           ra = 242, jump [a3]
      :                          @742 [@dyn 121]
  9304: 64 75                    s0 = a0
  9306: 28 24                    jump @745
      :                          @743
  9308: 82 58 28                 a1 = u64 [s0 + 0x28]
  9311: 82 57 20                 a0 = u64 [s0 + 0x20]
  9314: 82 8c 18                 a5 = u64 [a1 + 0x18]
  9317: 33 08 f8 00 01           a1 = 0x100f8
  9322: 33 09 04                 a2 = 0x4
  9325: 82 10 30                 ra = u64 [sp + 0x30]
  9328: 82 15 28                 s0 = u64 [sp + 0x28]
  9331: 82 16 20                 s1 = u64 [sp + 0x20]
  9334: 95 11 38                 sp = sp + 0x38
  9337: 32 0c                    jump [a5]
      :                          @744
  9339: 8e 85                    s0 = a1 >u 0
  9341: 01                       fallthrough
      :                          @745
  9342: 64 57                    a0 = s0
  9344: 82 10 30                 ra = u64 [sp + 0x30]
  9347: 82 15 28                 s0 = u64 [sp + 0x28]
  9350: 82 16 20                 s1 = u64 [sp + 0x20]
  9353: 95 11 38                 sp = sp + 0x38
  9356: 32 00                    ret
      :                          @746 [@dyn 122]
  9358: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  9361: 7b 10 30                 u64 [sp + 0x30] = ra
  9364: 7b 15 28                 u64 [sp + 0x28] = s0
  9367: 7b 16 20                 u64 [sp + 0x20] = s1
  9370: 82 79                    a2 = u64 [a0]
  9372: 64 85                    s0 = a1
  9374: 51 09 9c 00              jump @757 if a2 == 0
      :                          @747
  9378: 82 58 28                 a1 = u64 [s0 + 0x28]
  9381: 95 77 08                 a0 = a0 + 0x8
  9384: 7b 17                    u64 [sp] = a0
  9386: 82 57 20                 a0 = u64 [s0 + 0x20]
  9389: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9392: 33 08 e8 00 01           a1 = 0x100e8
  9397: 33 09 04                 a2 = 0x4
  9400: b4 a0 02 f6 00           ra = 246, jump [a3]
      :                          @748 [@dyn 123]
  9405: 7b 15 10                 u64 [sp + 0x10] = s0
  9408: 78 17 18                 u8 [sp + 0x18] = a0
  9411: 49 11 08                 u64 [sp + 8] = 0
  9414: 46 11 19                 u8 [sp + 25] = 0
  9417: 33 09 1c                 a2 = 0x1c
  9420: 95 17 08                 a0 = sp + 0x8
  9423: 64 18                    a1 = sp
  9425: 50 20 f8 00 2e 9b 00     ra = 248, jump @3140
      :                          @749 [@dyn 124]
  9432: 82 17 08                 a0 = u64 [sp + 0x8]
  9435: 7c 18 18                 a1 = u8 [sp + 0x18]
  9438: 51 07 7b                 jump @758 if a0 == 0
      :                          @750
  9441: 33 05 01                 s0 = 0x1
  9444: 52 08 78                 jump @759 if a1 != 0
      :                          @751
  9447: 7c 18 19                 a1 = u8 [sp + 0x19]
  9450: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9453: 8e 77                    a0 = a0 >u 0
  9455: 82 16 10                 s1 = u64 [sp + 0x10]
  9458: 88 88 01                 a1 = a1 <u 0x1
  9461: d4 87 07                 a0 = a0 | a1
  9464: 52 07 28                 jump @755 if a0 != 0
      :                          @752
  9467: 7c 67 34                 a0 = u8 [s1 + 0x34]
  9470: 84 77 04                 a0 = a0 & 0x4
  9473: 52 07 1f                 jump @755 if a0 != 0
      :                          @753
  9476: 82 68 28                 a1 = u64 [s1 + 0x28]
  9479: 82 67 20                 a0 = u64 [s1 + 0x20]
  9482: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9485: 33 08 e7 10 01           a1 = 0x110e7
  9490: 33 09 01                 a2 = 0x1
  9493: 33 05 01                 s0 = 0x1
  9496: b4 a0 02 fa 00           ra = 250, jump [a3]
      :                          @754 [@dyn 125]
  9501: 52 07 3f                 jump @759 if a0 != 0
      :                          @755
  9504: 82 68 28                 a1 = u64 [s1 + 0x28]
  9507: 82 67 20                 a0 = u64 [s1 + 0x20]
  9510: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9513: 33 08 a8 10 01           a1 = 0x110a8
  9518: 33 09 01                 a2 = 0x1
  9521: b4 a0 02 fc 00           ra = 252, jump [a3]
      :                          @756 [@dyn 126]
  9526: 64 75                    s0 = a0
  9528: 28 24                    jump @759
      :                          @757
  9530: 82 58 28                 a1 = u64 [s0 + 0x28]
  9533: 82 57 20                 a0 = u64 [s0 + 0x20]
  9536: 82 8c 18                 a5 = u64 [a1 + 0x18]
  9539: 33 08 f8 00 01           a1 = 0x100f8
  9544: 33 09 04                 a2 = 0x4
  9547: 82 10 30                 ra = u64 [sp + 0x30]
  9550: 82 15 28                 s0 = u64 [sp + 0x28]
  9553: 82 16 20                 s1 = u64 [sp + 0x20]
  9556: 95 11 38                 sp = sp + 0x38
  9559: 32 0c                    jump [a5]
      :                          @758
  9561: 8e 85                    s0 = a1 >u 0
  9563: 01                       fallthrough
      :                          @759
  9564: 64 57                    a0 = s0
  9566: 82 10 30                 ra = u64 [sp + 0x30]
  9569: 82 15 28                 s0 = u64 [sp + 0x28]
  9572: 82 16 20                 s1 = u64 [sp + 0x20]
  9575: 95 11 38                 sp = sp + 0x38
  9578: 32 00                    ret
      :                          @760 [@dyn 127]
  9580: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  9583: 7b 10 30                 u64 [sp + 0x30] = ra
  9586: 7b 15 28                 u64 [sp + 0x28] = s0
  9589: 7b 16 20                 u64 [sp + 0x20] = s1
  9592: 82 79                    a2 = u64 [a0]
  9594: 64 85                    s0 = a1
  9596: 51 09 9c 00              jump @771 if a2 == 0
      :                          @761
  9600: 82 58 28                 a1 = u64 [s0 + 0x28]
  9603: 95 77 08                 a0 = a0 + 0x8
  9606: 7b 17                    u64 [sp] = a0
  9608: 82 57 20                 a0 = u64 [s0 + 0x20]
  9611: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9614: 33 08 e8 00 01           a1 = 0x100e8
  9619: 33 09 04                 a2 = 0x4
  9622: b4 a0 02 00 01           ra = 256, jump [a3]
      :                          @762 [@dyn 128]
  9627: 7b 15 10                 u64 [sp + 0x10] = s0
  9630: 78 17 18                 u8 [sp + 0x18] = a0
  9633: 49 11 08                 u64 [sp + 8] = 0
  9636: 46 11 19                 u8 [sp + 25] = 0
  9639: 33 09 0c                 a2 = 0xc
  9642: 95 17 08                 a0 = sp + 0x8
  9645: 64 18                    a1 = sp
  9647: 50 20 02 01 50 9a 00     ra = 258, jump @3140
      :                          @763 [@dyn 129]
  9654: 82 17 08                 a0 = u64 [sp + 0x8]
  9657: 7c 18 18                 a1 = u8 [sp + 0x18]
  9660: 51 07 7b                 jump @772 if a0 == 0
      :                          @764
  9663: 33 05 01                 s0 = 0x1
  9666: 52 08 78                 jump @773 if a1 != 0
      :                          @765
  9669: 7c 18 19                 a1 = u8 [sp + 0x19]
  9672: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9675: 8e 77                    a0 = a0 >u 0
  9677: 82 16 10                 s1 = u64 [sp + 0x10]
  9680: 88 88 01                 a1 = a1 <u 0x1
  9683: d4 87 07                 a0 = a0 | a1
  9686: 52 07 28                 jump @769 if a0 != 0
      :                          @766
  9689: 7c 67 34                 a0 = u8 [s1 + 0x34]
  9692: 84 77 04                 a0 = a0 & 0x4
  9695: 52 07 1f                 jump @769 if a0 != 0
      :                          @767
  9698: 82 68 28                 a1 = u64 [s1 + 0x28]
  9701: 82 67 20                 a0 = u64 [s1 + 0x20]
  9704: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9707: 33 08 e7 10 01           a1 = 0x110e7
  9712: 33 09 01                 a2 = 0x1
  9715: 33 05 01                 s0 = 0x1
  9718: b4 a0 02 04 01           ra = 260, jump [a3]
      :                          @768 [@dyn 130]
  9723: 52 07 3f                 jump @773 if a0 != 0
      :                          @769
  9726: 82 68 28                 a1 = u64 [s1 + 0x28]
  9729: 82 67 20                 a0 = u64 [s1 + 0x20]
  9732: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9735: 33 08 a8 10 01           a1 = 0x110a8
  9740: 33 09 01                 a2 = 0x1
  9743: b4 a0 02 06 01           ra = 262, jump [a3]
      :                          @770 [@dyn 131]
  9748: 64 75                    s0 = a0
  9750: 28 24                    jump @773
      :                          @771
  9752: 82 58 28                 a1 = u64 [s0 + 0x28]
  9755: 82 57 20                 a0 = u64 [s0 + 0x20]
  9758: 82 8c 18                 a5 = u64 [a1 + 0x18]
  9761: 33 08 f8 00 01           a1 = 0x100f8
  9766: 33 09 04                 a2 = 0x4
  9769: 82 10 30                 ra = u64 [sp + 0x30]
  9772: 82 15 28                 s0 = u64 [sp + 0x28]
  9775: 82 16 20                 s1 = u64 [sp + 0x20]
  9778: 95 11 38                 sp = sp + 0x38
  9781: 32 0c                    jump [a5]
      :                          @772
  9783: 8e 85                    s0 = a1 >u 0
  9785: 01                       fallthrough
      :                          @773
  9786: 64 57                    a0 = s0
  9788: 82 10 30                 ra = u64 [sp + 0x30]
  9791: 82 15 28                 s0 = u64 [sp + 0x28]
  9794: 82 16 20                 s1 = u64 [sp + 0x20]
  9797: 95 11 38                 sp = sp + 0x38
  9800: 32 00                    ret
      :                          @774
  9802: 82 4b                    a4 = u64 [t2]
  9804: 95 bc 50                 a5 = a4 + 0x50
  9807: ac bc 56 02              jump @779 if a5 <u a4
      :                          @775
  9811: 95 c8 08                 a1 = a5 + 0x8
  9814: d8 c8 09                 a2 = a1 <u a5
  9817: d8 82 08                 a1 = t0 <u a1
  9820: d4 98 08                 a1 = a1 | a2
  9823: 52 08 46 02              jump @779 if a1 != 0
      :                          @776
  9827: c9 c3 08                 a1 = t1 - a5
  9830: c8 28 08                 a1 = a1 + t0
  9833: 84 89 07                 a2 = a1 & 0x7
  9836: c8 9c 0c                 a5 = a5 + a2
  9839: 01                       fallthrough
      :                          @777
  9840: 82 4a                    a3 = u64 [t2]
  9842: ab ba d8                 jump @774 if a3 != a4
      :                          @778
  9845: 7b 4c                    u64 [t2] = a5
  9847: 33 0c e0 00 03           a5 = 0x300e0
  9852: 3a 0a e0 00 03           a3 = u64 [0x300e0]
  9857: c9 98 08                 a1 = a1 - a2
  9860: 97 a9 0d                 a2 = a3 << 0xd
  9863: d3 a9 09                 a2 = a2 ^ a3
  9866: 98 9b 07                 a4 = a2 >> 0x7
  9869: 3a 0a 00 00 03           a3 = u64 [0x30000]
  9874: d3 b9 09                 a2 = a2 ^ a4
  9877: 97 9b 11                 a4 = a2 << 0x11
  9880: d3 b9 09                 a2 = a2 ^ a4
  9883: ca a9 05                 s0 = a2 * a3
  9886: 3a 0b 08 00 03           a4 = u64 [0x30008]
  9891: 3e 09 e0 00 03           u64 [0x300e0] = a2
  9896: 98 59 01                 a2 = s0 >> 0x1
  9899: d6 b9 09                 a2 = a2 mulhu a4
  9902: 98 99 04                 a2 = a2 >> 0x4
  9905: 33 02 32                 t0 = 0x32
  9908: ca 29 09                 a2 = a2 * t0
  9911: c9 95 05                 s0 = s0 - a2
  9914: 95 55 01                 s0 = s0 + 0x1
  9917: 7b 85                    u64 [a1] = s0
  9919: 3a 05 e0 00 03           s0 = u64 [0x300e0]
  9924: 97 59 0d                 a2 = s0 << 0xd
  9927: d3 95 05                 s0 = s0 ^ a2
  9930: 98 59 07                 a2 = s0 >> 0x7
  9933: d3 95 05                 s0 = s0 ^ a2
  9936: 97 59 11                 a2 = s0 << 0x11
  9939: d3 59 09                 a2 = a2 ^ s0
  9942: ca a9 05                 s0 = a2 * a3
  9945: 3e 09 e0 00 03           u64 [0x300e0] = a2
  9950: 98 59 01                 a2 = s0 >> 0x1
  9953: d6 b9 09                 a2 = a2 mulhu a4
  9956: 98 99 04                 a2 = a2 >> 0x4
  9959: ca 29 09                 a2 = a2 * t0
  9962: c9 95 05                 s0 = s0 - a2
  9965: 95 55 01                 s0 = s0 + 0x1
  9968: 7b 85 08                 u64 [a1 + 0x8] = s0
  9971: 3a 05 e0 00 03           s0 = u64 [0x300e0]
  9976: 97 59 0d                 a2 = s0 << 0xd
  9979: d3 95 05                 s0 = s0 ^ a2
  9982: 98 59 07                 a2 = s0 >> 0x7
  9985: d3 95 05                 s0 = s0 ^ a2
  9988: 97 59 11                 a2 = s0 << 0x11
  9991: d3 59 09                 a2 = a2 ^ s0
  9994: ca a9 05                 s0 = a2 * a3
  9997: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10002: 98 59 01                 a2 = s0 >> 0x1
 10005: d6 b9 09                 a2 = a2 mulhu a4
 10008: 98 99 04                 a2 = a2 >> 0x4
 10011: ca 29 09                 a2 = a2 * t0
 10014: c9 95 05                 s0 = s0 - a2
 10017: 95 55 01                 s0 = s0 + 0x1
 10020: 7b 85 10                 u64 [a1 + 0x10] = s0
 10023: 3a 05 e0 00 03           s0 = u64 [0x300e0]
 10028: 97 59 0d                 a2 = s0 << 0xd
 10031: d3 95 05                 s0 = s0 ^ a2
 10034: 98 59 07                 a2 = s0 >> 0x7
 10037: d3 95 05                 s0 = s0 ^ a2
 10040: 97 59 11                 a2 = s0 << 0x11
 10043: d3 59 09                 a2 = a2 ^ s0
 10046: ca a9 05                 s0 = a2 * a3
 10049: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10054: 98 59 01                 a2 = s0 >> 0x1
 10057: d6 b9 09                 a2 = a2 mulhu a4
 10060: 98 99 04                 a2 = a2 >> 0x4
 10063: ca 29 09                 a2 = a2 * t0
 10066: c9 95 05                 s0 = s0 - a2
 10069: 95 55 01                 s0 = s0 + 0x1
 10072: 7b 85 18                 u64 [a1 + 0x18] = s0
 10075: 3a 05 e0 00 03           s0 = u64 [0x300e0]
 10080: 97 59 0d                 a2 = s0 << 0xd
 10083: d3 95 05                 s0 = s0 ^ a2
 10086: 98 59 07                 a2 = s0 >> 0x7
 10089: d3 95 05                 s0 = s0 ^ a2
 10092: 97 59 11                 a2 = s0 << 0x11
 10095: d3 59 09                 a2 = a2 ^ s0
 10098: ca a9 05                 s0 = a2 * a3
 10101: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10106: 98 59 01                 a2 = s0 >> 0x1
 10109: d6 b9 09                 a2 = a2 mulhu a4
 10112: 98 99 04                 a2 = a2 >> 0x4
 10115: ca 29 09                 a2 = a2 * t0
 10118: c9 95 05                 s0 = s0 - a2
 10121: 95 55 01                 s0 = s0 + 0x1
 10124: 7b 85 20                 u64 [a1 + 0x20] = s0
 10127: 3a 05 e0 00 03           s0 = u64 [0x300e0]
 10132: 97 59 0d                 a2 = s0 << 0xd
 10135: d3 95 05                 s0 = s0 ^ a2
 10138: 98 59 07                 a2 = s0 >> 0x7
 10141: d3 95 05                 s0 = s0 ^ a2
 10144: 97 59 11                 a2 = s0 << 0x11
 10147: d3 59 09                 a2 = a2 ^ s0
 10150: ca a9 05                 s0 = a2 * a3
 10153: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10158: 98 59 01                 a2 = s0 >> 0x1
 10161: d6 b9 09                 a2 = a2 mulhu a4
 10164: 98 99 04                 a2 = a2 >> 0x4
 10167: ca 29 09                 a2 = a2 * t0
 10170: c9 95 05                 s0 = s0 - a2
 10173: 95 55 01                 s0 = s0 + 0x1
 10176: 7b 85 28                 u64 [a1 + 0x28] = s0
 10179: 3a 05 e0 00 03           s0 = u64 [0x300e0]
 10184: 97 59 0d                 a2 = s0 << 0xd
 10187: d3 95 05                 s0 = s0 ^ a2
 10190: 98 59 07                 a2 = s0 >> 0x7
 10193: d3 95 05                 s0 = s0 ^ a2
 10196: 97 59 11                 a2 = s0 << 0x11
 10199: d3 59 09                 a2 = a2 ^ s0
 10202: ca a9 05                 s0 = a2 * a3
 10205: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10210: 98 59 01                 a2 = s0 >> 0x1
 10213: d6 b9 09                 a2 = a2 mulhu a4
 10216: 98 99 04                 a2 = a2 >> 0x4
 10219: ca 29 09                 a2 = a2 * t0
 10222: c9 95 05                 s0 = s0 - a2
 10225: 95 55 01                 s0 = s0 + 0x1
 10228: 7b 85 30                 u64 [a1 + 0x30] = s0
 10231: 3a 05 e0 00 03           s0 = u64 [0x300e0]
 10236: 97 59 0d                 a2 = s0 << 0xd
 10239: d3 95 05                 s0 = s0 ^ a2
 10242: 98 59 07                 a2 = s0 >> 0x7
 10245: d3 95 05                 s0 = s0 ^ a2
 10248: 97 59 11                 a2 = s0 << 0x11
 10251: d3 59 09                 a2 = a2 ^ s0
 10254: ca a9 05                 s0 = a2 * a3
 10257: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10262: 98 59 01                 a2 = s0 >> 0x1
 10265: d6 b9 09                 a2 = a2 mulhu a4
 10268: 98 99 04                 a2 = a2 >> 0x4
 10271: ca 29 09                 a2 = a2 * t0
 10274: c9 95 05                 s0 = s0 - a2
 10277: 95 55 01                 s0 = s0 + 0x1
 10280: 7b 85 38                 u64 [a1 + 0x38] = s0
 10283: 3a 05 e0 00 03           s0 = u64 [0x300e0]
 10288: 97 59 0d                 a2 = s0 << 0xd
 10291: d3 95 05                 s0 = s0 ^ a2
 10294: 98 59 07                 a2 = s0 >> 0x7
 10297: d3 95 05                 s0 = s0 ^ a2
 10300: 97 59 11                 a2 = s0 << 0x11
 10303: d3 59 09                 a2 = a2 ^ s0
 10306: ca a9 05                 s0 = a2 * a3
 10309: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10314: 98 59 01                 a2 = s0 >> 0x1
 10317: d6 b9 09                 a2 = a2 mulhu a4
 10320: 98 99 04                 a2 = a2 >> 0x4
 10323: ca 29 09                 a2 = a2 * t0
 10326: c9 95 05                 s0 = s0 - a2
 10329: 95 55 01                 s0 = s0 + 0x1
 10332: 7b 85 40                 u64 [a1 + 0x40] = s0
 10335: 3a 05 e0 00 03           s0 = u64 [0x300e0]
 10340: 97 59 0d                 a2 = s0 << 0xd
 10343: d3 95 05                 s0 = s0 ^ a2
 10346: 98 59 07                 a2 = s0 >> 0x7
 10349: d3 95 05                 s0 = s0 ^ a2
 10352: 97 59 11                 a2 = s0 << 0x11
 10355: d3 59 09                 a2 = a2 ^ s0
 10358: ca a9 0a                 a3 = a2 * a3
 10361: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10366: 98 a9 01                 a2 = a3 >> 0x1
 10369: d6 b9 09                 a2 = a2 mulhu a4
 10372: 98 99 04                 a2 = a2 >> 0x4
 10375: ca 29 09                 a2 = a2 * t0
 10378: c9 9a 0a                 a3 = a3 - a2
 10381: 95 aa 01                 a3 = a3 + 0x1
 10384: 7b 8a 48                 u64 [a1 + 0x48] = a3
 10387: 33 09 0a                 a2 = 0xa
 10390: 7b 79                    u64 [a0] = a2
 10392: 7b 78 08                 u64 [a0 + 0x8] = a1
 10395: 7b 79 10                 u64 [a0 + 0x10] = a2
 10398: 82 15                    s0 = u64 [sp]
 10400: 95 11 08                 sp = sp + 0x8
 10403: 32 00                    ret
      :                          @779
 10405: 00                       trap
      :                          @780
 10406: 82 4b                    a4 = u64 [t2]
 10408: 95 bc a0 00              a5 = a4 + 0xa0
 10412: ac bc 8d 00              jump @787 if a5 <u a4
      :                          @781
 10416: 95 c8 08                 a1 = a5 + 0x8
 10419: d8 c8 09                 a2 = a1 <u a5
 10422: d8 82 08                 a1 = t0 <u a1
 10425: d4 98 08                 a1 = a1 | a2
 10428: 52 08 7d                 jump @787 if a1 != 0
      :                          @782
 10431: c9 c3 08                 a1 = t1 - a5
 10434: c8 28 08                 a1 = a1 + t0
 10437: 84 89 07                 a2 = a1 & 0x7
 10440: c8 9c 0c                 a5 = a5 + a2
 10443: 01                       fallthrough
      :                          @783
 10444: 82 4a                    a3 = u64 [t2]
 10446: ab ba d8                 jump @780 if a3 != a4
      :                          @784
 10449: 7b 4c                    u64 [t2] = a5
 10451: c9 98 02                 t0 = a1 - a2
 10454: 3a 04 10 00 03           t2 = u64 [0x30010]
 10459: 3a 0a 18 00 03           a3 = u64 [0x30018]
 10464: 33 0b 14                 a4 = 0x14
 10467: 33 0c e0 00 03           a5 = 0x300e0
 10472: 33 03 64                 t1 = 0x64
 10475: 64 28                    a1 = t0
 10477: 01                       fallthrough
      :                          @785
 10478: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 10483: 97 95 0d                 s0 = a2 << 0xd
 10486: d3 59 09                 a2 = a2 ^ s0
 10489: 98 95 07                 s0 = a2 >> 0x7
 10492: d3 59 09                 a2 = a2 ^ s0
 10495: 97 95 11                 s0 = a2 << 0x11
 10498: d3 59 09                 a2 = a2 ^ s0
 10501: ca 49 05                 s0 = a2 * t2
 10504: 3e 09 e0 00 03           u64 [0x300e0] = a2
 10509: 98 59 02                 a2 = s0 >> 0x2
 10512: d6 a9 09                 a2 = a2 mulhu a3
 10515: 98 99 02                 a2 = a2 >> 0x2
 10518: ca 39 09                 a2 = a2 * t1
 10521: c9 95 05                 s0 = s0 - a2
 10524: 7b 85                    u64 [a1] = s0
 10526: 83 bb ff                 i32 a4 = a4 + 0xffffffffffffffff
 10529: 95 88 08                 a1 = a1 + 0x8
 10532: 52 0b ca                 jump @785 if a4 != 0
      :                          @786
 10535: 33 08 14                 a1 = 0x14
 10538: 7b 78                    u64 [a0] = a1
 10540: 7b 72 08                 u64 [a0 + 0x8] = t0
 10543: 7b 78 10                 u64 [a0 + 0x10] = a1
 10546: 82 15                    s0 = u64 [sp]
 10548: 95 11 08                 sp = sp + 0x8
 10551: 32 00                    ret
      :                          @787
 10553: 00                       trap
      :                          @788
 10554: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 10557: 7b 10 28                 u64 [sp + 0x28] = ra
 10560: 7b 15 20                 u64 [sp + 0x20] = s0
 10563: 7b 16 18                 u64 [sp + 0x18] = s1
 10566: 64 75                    s0 = a0
 10568: 51 09 3a                 jump @792 if a2 == 0
      :                          @789
 10571: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 10581: d3 87 07                 a0 = a0 ^ a1
 10584: e1 97 07                 a0 = a0 | ~a2
 10587: 51 07 4d                 jump @794 if a0 == 0
      :                          @790
 10590: cc 98 06                 s1 = a1 /s a2
 10593: ca 96 07                 a0 = s1 * a2
 10596: c9 78 0a                 a3 = a1 - a0
 10599: 64 17                    a0 = sp
 10601: 64 98                    a1 = a2
 10603: 64 a9                    a2 = a3
 10605: 50 20 08 01 cd           ra = 264, jump @788
      :                          @791 [@dyn 132]
 10610: 82 17 10                 a0 = u64 [sp + 0x10]
 10613: 82 19 08                 a2 = u64 [sp + 0x8]
 10616: 82 18                    a1 = u64 [sp]
 10618: ca 76 0a                 a3 = s1 * a0
 10621: c9 a9 09                 a2 = a2 - a3
 10624: 28 12                    jump @793
      :                          @792
 10626: 8e 8a                    a3 = a1 >u 0
 10628: 89 8b                    a4 = a1 <s 0
 10630: 33 07 ff                 a0 = 0xffffffffffffffff
 10633: da ba 07                 a0 = a3 if a4 == 0
 10636: 9a 8a                    a3 = -a1
 10638: e3 a8 08                 a1 = maxs(a1, a3)
 10641: 01                       fallthrough
      :                          @793
 10642: 7b 58                    u64 [s0] = a1
 10644: 7b 57 08                 u64 [s0 + 0x8] = a0
 10647: 7b 59 10                 u64 [s0 + 0x10] = a2
 10650: 82 10 28                 ra = u64 [sp + 0x28]
 10653: 82 15 20                 s0 = u64 [sp + 0x20]
 10656: 82 16 18                 s1 = u64 [sp + 0x18]
 10659: 95 11 30                 sp = sp + 0x30
 10662: 32 00                    ret
      :                          @794
 10664: 00                       trap
      :                          @795 [@dyn 133]
 10665: 82 18                    a1 = u64 [sp]
 10667: 33 07 01                 a0 = 0x1
 10670: ab 78 1a                 jump @797 if a1 != a0
      :                          @796
 10673: 82 18 08                 a1 = u64 [sp + 0x8]
 10676: ce 58 08                 a1 = a1 %s s0
 10679: c8 58 08                 a1 = a1 + s0
 10682: ce 58 08                 a1 = a1 %s s0
 10685: 82 10 20                 ra = u64 [sp + 0x20]
 10688: 82 15 18                 s0 = u64 [sp + 0x18]
 10691: 95 11 28                 sp = sp + 0x28
 10694: 32 00                    ret
      :                          @797
 10696: 33 07                    a0 = 0
 10698: 82 10 20                 ra = u64 [sp + 0x20]
 10701: 82 15 18                 s0 = u64 [sp + 0x18]
 10704: 95 11 28                 sp = sp + 0x28
 10707: 32 00                    ret
      :                          @798
 10709: d8 87 08                 a1 = a0 <u a1
 10712: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
 10715: db 89 04                 t2 = a2 if a1 != 0
 10718: da 8c 03                 t1 = a5 if a1 == 0
 10721: ae 43 26                 jump @803 if t1 >=u t2
      :                          @799
 10724: c8 34 08                 a1 = t2 + t1
 10727: 95 88 01                 a1 = a1 + 0x1
 10730: 98 8c 01                 a5 = a1 >> 0x1
 10733: 64 29                    a2 = t0
 10735: 33 08 01                 a1 = 0x1
 10738: 01                       fallthrough
      :                          @800
 10739: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 10742: 51 09 df                 jump @798 if a2 == 0
      :                          @801
 10745: d6 c8 0a                 a3 = a1 mulhu a5
 10748: ca c8 08                 a1 = a1 * a5
 10751: db ab 08                 a1 = a4 if a3 != 0
 10754: ae 87 f1                 jump @800 if a0 >=u a1
      :                          @802
 10757: 28 d0                    jump @798
      :                          @803
 10759: 64 37                    a0 = t1
 10761: 32 00                    ret
      :                          @804
 10763: 84 89 01                 a2 = a1 & 0x1
 10766: 52 09 08                 jump @806 if a2 != 0
      :                          @805
 10769: 33 07                    a0 = 0
 10771: 28 0d 6e                 jump @2445
      :                          @806
 10774: cd 87 0c                 a5 = a0 %u a1
 10777: 51 0c 4f                 jump @817 if a5 == 0
      :                          @807
 10780: 33 07 01                 a0 = 0x1
 10783: 33 03 03                 t1 = 0x3
 10786: 33 02 05                 t0 = 0x5
 10789: 64 8b                    a4 = a1
 10791: 28 18                    jump @810
      :                          @808
 10793: 64 c8                    a1 = a5
 10795: 01                       fallthrough
      :                          @809
 10796: d2 8b 0a                 a3 = a4 & a1
 10799: 84 aa 02                 a3 = a3 & 0x2
 10802: 9a 79                    a2 = -a0
 10804: cd 8b 0c                 a5 = a4 %u a1
 10807: db a9 07                 a0 = a2 if a3 != 0
 10810: 64 8b                    a4 = a1
 10812: 51 0c 37                 jump @818 if a5 == 0
      :                          @810
 10815: 84 c8 01                 a1 = a5 & 0x1
 10818: 52 08 e7                 jump @808 if a1 != 0
      :                          @811
 10821: 84 b8 07                 a1 = a4 & 0x7
 10824: aa 38 06                 jump @813 if a1 == t1
      :                          @812
 10827: ab 28 12                 jump @815 if a1 != t0
      :                          @813
 10830: 98 c8 01                 a1 = a5 >> 0x1
 10833: 84 ca 02                 a3 = a5 & 0x2
 10836: 9a 77                    a0 = -a0
 10838: 64 8c                    a5 = a1
 10840: 51 0a f6                 jump @813 if a3 == 0
      :                          @814
 10843: 28 d1                    jump @809
      :                          @815
 10845: 84 c8 02                 a1 = a5 & 0x2
 10848: 98 cc 01                 a5 = a5 >> 0x1
 10851: 51 08 fa                 jump @815 if a1 == 0
      :                          @816
 10854: 28 c3                    jump @808
      :                          @817
 10856: 33 07 01                 a0 = 0x1
 10859: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 10862: 94 87                    a0 = 0 if a1 != 0
 10864: 28 b0 6d                 jump @2445
      :                          @818
 10867: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 10870: 94 87                    a0 = 0 if a1 != 0
 10872: 32 00                    ret
      :                          @819
 10874: 33 08 02                 a1 = 0x2
 10877: aa 87 2a                 jump @828 if a0 == a1
      :                          @820
 10880: 95 77 01                 a0 = a0 + 0x1
 10883: ac 97 fd                 jump @820 if a0 <u a2
      :                          @821
 10886: 84 78 01                 a1 = a0 & 0x1
 10889: 51 08 f1                 jump @819 if a1 == 0
      :                          @822
 10892: ac a7 20                 jump @829 if a0 <u a3
      :                          @823
 10895: 33 08 03                 a1 = 0x3
 10898: 01                       fallthrough
      :                          @824
 10899: 51 08 1b                 jump @830 if a1 == 0
      :                          @825
 10902: cd 87 0b                 a4 = a0 %u a1
 10905: 51 0b e7                 jump @820 if a4 == 0
      :                          @826
 10908: 95 88 02                 a1 = a1 + 0x2
 10911: ca 88 0b                 a4 = a1 * a1
 10914: ae b7 f1                 jump @824 if a0 >=u a4
      :                          @827
 10917: 32 00                    ret
      :                          @828
 10919: 33 07 02                 a0 = 0x2
 10922: 32 00                    ret
      :                          @829
 10924: 32 00                    ret
      :                          @830
 10926: 00                       trap
      :                          @831
 10927: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 10931: 7b 10 00 01              u64 [sp + 0x100] = ra
 10935: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 10939: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 10943: 64 73                    t1 = a0
 10945: 33 00                    ra = 0
 10947: 95 75 ff                 s0 = a0 + 0xffffffffffffffff
 10950: 49 21 d8 00              u64 [sp + 216] = 0
 10954: 33 07 08                 a0 = 0x8
 10957: 7b 17 e0 00              u64 [sp + 0xe0] = a0
 10961: 84 58 01                 a1 = s0 & 0x1
 10964: 49 21 e8 00              u64 [sp + 232] = 0
 10968: 7b 15 38                 u64 [sp + 0x38] = s0
 10971: 7b 13 50                 u64 [sp + 0x50] = t1
 10974: 52 08 4a                 jump @837 if a1 != 0
      :                          @832
 10977: 33 00                    ra = 0
 10979: 33 09 02                 a2 = 0x2
 10982: 82 16 38                 s1 = u64 [sp + 0x38]
 10985: 28 1c                    jump @834
      :                          @833
 10987: 97 08 03                 a1 = ra << 0x3
 10990: c8 78 08                 a1 = a1 + a0
 10993: 7b 89                    u64 [a1] = a2
 10995: 95 00 01                 ra = ra + 0x1
 10998: 98 65 01                 s0 = s1 >> 0x1
 11001: 84 68 02                 a1 = s1 & 0x2
 11004: 7b 10 e8 00              u64 [sp + 0xe8] = ra
 11008: 64 56                    s1 = s0
 11010: 52 08 26                 jump @837 if a1 != 0
      :                          @834
 11013: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 11017: ab 80 e2                 jump @833 if ra != a1
      :                          @835
 11020: 95 17 d8 00              a0 = sp + 0xd8
 11024: 64 08                    a1 = ra
 11026: 50 20 0c 01 a5 f7        ra = 268, jump @708
      :                          @836 [@dyn 134]
 11032: 33 09 02                 a2 = 0x2
 11035: 82 13 50                 t1 = u64 [sp + 0x50]
 11038: 82 10 e8 00              ra = u64 [sp + 0xe8]
 11042: 82 17 e0 00              a0 = u64 [sp + 0xe0]
 11046: 28 c5                    jump @833
      :                          @837
 11048: 55 15 09 39              jump @843 if s0 >=u 9
      :                          @838
 11052: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 11056: 54 15 01 83 00           jump @852 if s0 <=u 1
      :                          @839
 11061: ab 80 1b                 jump @842 if ra != a1
      :                          @840
 11064: 95 17 d8 00              a0 = sp + 0xd8
 11068: 64 08                    a1 = ra
 11070: 50 20 0e 01 79 f7        ra = 270, jump @708
      :                          @841 [@dyn 135]
 11076: 82 13 50                 t1 = u64 [sp + 0x50]
 11079: 82 10 e8 00              ra = u64 [sp + 0xe8]
 11083: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 11087: 01                       fallthrough
      :                          @842
 11088: 82 14 e0 00              t2 = u64 [sp + 0xe0]
 11092: 97 07 03                 a0 = ra << 0x3
 11095: c8 47 07                 a0 = a0 + t2
 11098: 7b 75                    u64 [a0] = s0
 11100: 95 00 01                 ra = ra + 0x1
 11103: 28 59                    jump @853
      :                          @843
 11105: 33 06 03                 s1 = 0x3
 11108: 28 0b                    jump @845
      :                          @844
 11110: 95 66 02                 s1 = s1 + 0x2
 11113: ca 66 07                 a0 = s1 * s1
 11116: ac 75 c0                 jump @838 if s0 <u a0
      :                          @845
 11119: 51 06 18 07              jump @998 if s1 == 0
      :                          @846
 11123: cd 65 07                 a0 = s0 %u s1
 11126: 52 07 f0                 jump @844 if a0 != 0
      :                          @847
 11129: 28 1e                    jump @849
      :                          @848
 11131: 82 17 e0 00              a0 = u64 [sp + 0xe0]
 11135: 97 08 03                 a1 = ra << 0x3
 11138: c8 87 07                 a0 = a0 + a1
 11141: 7b 76                    u64 [a0] = s1
 11143: 95 00 01                 ra = ra + 0x1
 11146: cb 65 05                 s0 = s0 /u s1
 11149: cd 65 07                 a0 = s0 %u s1
 11152: 7b 10 e8 00              u64 [sp + 0xe8] = ra
 11156: 52 07 d2                 jump @844 if a0 != 0
      :                          @849
 11159: 82 17 d8 00              a0 = u64 [sp + 0xd8]
 11163: ab 70 e0                 jump @848 if ra != a0
      :                          @850
 11166: 95 17 d8 00              a0 = sp + 0xd8
 11170: 64 08                    a1 = ra
 11172: 50 20 10 01 13 f7        ra = 272, jump @708
      :                          @851 [@dyn 136]
 11178: 82 13 50                 t1 = u64 [sp + 0x50]
 11181: 82 10 e8 00              ra = u64 [sp + 0xe8]
 11185: 28 ca                    jump @848
      :                          @852
 11187: 82 14 e0 00              t2 = u64 [sp + 0xe0]
 11191: 01                       fallthrough
      :                          @853
 11192: 95 45 10                 s0 = t2 + 0x10
 11195: 7b 14 80 00              u64 [sp + 0x80] = t2
 11199: 7b 10 78                 u64 [sp + 0x78] = ra
 11202: 7b 18                    u64 [sp] = a1
 11204: 55 10 15 23              jump @857 if ra >=u 21
      :                          @854
 11208: 54 10 01 c1 05           jump @964 if ra <=u 1
      :                          @855
 11213: 33 09 01                 a2 = 0x1
 11216: 64 47                    a0 = t2
 11218: 64 08                    a1 = ra
 11220: 50 20 12 01 ab e3        ra = 274, jump @304
      :                          @856 [@dyn 137]
 11226: 82 10 78                 ra = u64 [sp + 0x78]
 11229: 82 14 80 00              t2 = u64 [sp + 0x80]
 11233: 82 13 50                 t1 = u64 [sp + 0x50]
 11236: 28 85 05                 jump @961
      :                          @857
 11239: 7b 15 08                 u64 [sp + 0x8] = s0
 11242: 97 07 02                 a0 = ra << 0x2
 11245: 14 08 f8 ff ff ff ff ff ff 7f a1 = 0x7ffffffffffffff8
 11255: d2 87 07                 a0 = a0 & a1
 11258: 7b 17 28                 u64 [sp + 0x28] = a0
 11261: 33 07 10 01 03           a0 = 0x30110
 11266: 33 02 00 00 10           t0 = 0x100000
 11271: c8 27 09                 a2 = a0 + t0
 11274: 01                       fallthrough
      :                          @858
 11275: 82 9a                    a3 = u64 [a2]
 11277: 82 1b 28                 a4 = u64 [sp + 0x28]
 11280: c8 ab 0b                 a4 = a4 + a3
 11283: ac ab 76 06              jump @1000 if a4 <u a3
      :                          @859
 11287: 95 b8 08                 a1 = a4 + 0x8
 11290: d8 b8 0c                 a5 = a1 <u a4
 11293: d8 82 08                 a1 = t0 <u a1
 11296: d4 c8 08                 a1 = a1 | a5
 11299: 52 08 66 06              jump @1000 if a1 != 0
      :                          @860
 11303: c9 b7 08                 a1 = a0 - a4
 11306: c8 28 08                 a1 = a1 + t0
 11309: 84 8c 07                 a5 = a1 & 0x7
 11312: c8 cb 0b                 a4 = a4 + a5
 11315: 01                       fallthrough
      :                          @861
 11316: 82 95                    s0 = u64 [a2]
 11318: ab a5 d5                 jump @858 if s0 != a3
      :                          @862
 11321: 7b 9b                    u64 [a2] = a4
 11323: c9 c8 08                 a1 = a1 - a5
 11326: 7b 18 c8 00              u64 [sp + 0xc8] = a1
 11330: 33 08 10 01 03           a1 = 0x30110
 11335: 33 02 00 00 10           t0 = 0x100000
 11340: c8 28 0b                 a4 = a1 + t0
 11343: 01                       fallthrough
      :                          @863
 11344: 82 bc                    a5 = u64 [a4]
 11346: 95 c6 00 01              s1 = a5 + 0x100
 11350: ac c6 33 06              jump @1000 if s1 <u a5
      :                          @864
 11354: 95 67 08                 a0 = s1 + 0x8
 11357: d8 67 09                 a2 = a0 <u s1
 11360: d8 72 07                 a0 = t0 <u a0
 11363: d4 97 07                 a0 = a0 | a2
 11366: 52 07 23 06              jump @1000 if a0 != 0
      :                          @865
 11370: c9 68 07                 a0 = a1 - s1
 11373: c8 27 07                 a0 = a0 + t0
 11376: 84 79 07                 a2 = a0 & 0x7
 11379: c8 96 06                 s1 = s1 + a2
 11382: 01                       fallthrough
      :                          @866
 11383: 82 b5                    s0 = u64 [a4]
 11385: ab c5 d7                 jump @863 if s0 != a5
      :                          @867
 11388: 7b b6                    u64 [a4] = s1
 11390: 33 0c                    a5 = 0
 11392: 33 0b                    a4 = 0
 11394: c9 97 02                 t0 = a0 - a2
 11397: 95 47 f8                 a0 = t2 + 0xfffffffffffffff8
 11400: 7b 17 48                 u64 [sp + 0x48] = a0
 11403: 49 11 30 10              u64 [sp + 48] = 0x10
 11407: 33 07 10 01 03           a0 = 0x30110
 11412: 7b 17 18                 u64 [sp + 0x18] = a0
 11415: 95 77 00 00 10           a0 = a0 + 0x100000
 11420: 7b 17 20                 u64 [sp + 0x20] = a0
 11423: 49 11 10 01 00 01        u64 [sp + 16] = 0x10001
 11429: 28 13                    jump @870
      :                          @868
 11431: 64 52                    t0 = s0
 11433: 82 13 50                 t1 = u64 [sp + 0x50]
 11436: 82 14 80 00              t2 = u64 [sp + 0x80]
 11440: 82 1c 40                 a5 = u64 [sp + 0x40]
 11443: 01                       fallthrough
      :                          @869
 11444: ae 0c 5b 04              jump @949 if a5 >=u ra
      :                          @870
 11448: 64 b6                    s1 = a4
 11450: 64 c5                    s0 = a5
 11452: c9 c0 09                 a2 = ra - a5
 11455: 97 cb 03                 a4 = a5 << 0x3
 11458: c8 b4 07                 a0 = t2 + a4
 11461: 7b 12 d0 00              u64 [sp + 0xd0] = t0
 11465: 55 19 02 67              jump @878 if a2 >=u 2
      :                          @871
 11469: 64 98                    a1 = a2
 11471: c8 58 0c                 a5 = a1 + s0
 11474: 64 6b                    a4 = s1
 11476: 28 08                    jump @873
      :                          @872
 11478: c8 58 0c                 a5 = a1 + s0
 11481: 64 6b                    a4 = s1
 11483: 01                       fallthrough
      :                          @873
 11484: d8 5c 09                 a2 = a5 <u s0
 11487: d8 c0 0a                 a3 = ra <u a5
 11490: d4 a9 09                 a2 = a2 | a3
 11493: 52 09 a8 05              jump @1004 if a2 != 0
      :                          @874
 11497: 88 89 0a                 a2 = a1 <u 0xa
 11500: d8 0c 0a                 a3 = a5 <u ra
 11503: d2 a9 09                 a2 = a2 & a3
 11506: 7b 1b b8 00              u64 [sp + 0xb8] = a4
 11510: 51 09 b4 00              jump @890 if a2 == 0
      :                          @875
 11514: 95 59 0a                 a2 = s0 + 0xa
 11517: e6 09 0a                 a3 = minu(a2, ra)
 11520: ac 5a 8e 05              jump @1005 if a3 <u s0
      :                          @876
 11524: 33 09 01                 a2 = 0x1
 11527: e4 98 09                 a2 = maxu(a1, a2)
 11530: c9 5a 06                 s1 = a3 - s0
 11533: 64 68                    a1 = s1
 11535: 7b 1a 40                 u64 [sp + 0x40] = a3
 11538: 50 20 14 01 6d e2        ra = 276, jump @304
      :                          @877 [@dyn 138]
 11544: 82 1c 40                 a5 = u64 [sp + 0x40]
 11547: 82 13 50                 t1 = u64 [sp + 0x50]
 11550: 82 14 80 00              t2 = u64 [sp + 0x80]
 11554: 82 10 78                 ra = u64 [sp + 0x78]
 11557: 82 12 d0 00              t0 = u64 [sp + 0xd0]
 11561: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 11565: 28 81 00                 jump @891
      :                          @878
 11568: 82 7a 08                 a3 = u64 [a0 + 0x8]
 11571: 82 78                    a1 = u64 [a0]
 11573: ae 8a 12 01              jump @900 if a3 >=u a1
      :                          @879
 11577: 33 08 02                 a1 = 0x2
 11580: aa 89 20                 jump @884 if a2 == a1
      :                          @880
 11583: 82 18 08                 a1 = u64 [sp + 0x8]
 11586: c8 8b 0b                 a4 = a4 + a1
 11589: 33 08 02                 a1 = 0x2
 11592: 01                       fallthrough
      :                          @881
 11593: 64 ac                    a5 = a3
 11595: 82 ba                    a3 = u64 [a4]
 11597: ae ca 0f                 jump @884 if a3 >=u a5
      :                          @882
 11600: 95 88 01                 a1 = a1 + 0x1
 11603: 95 bb 08                 a4 = a4 + 0x8
 11606: ab 89 f3                 jump @881 if a2 != a1
      :                          @883
 11609: 64 98                    a1 = a2
 11611: 01                       fallthrough
      :                          @884
 11612: c8 58 0c                 a5 = a1 + s0
 11615: ac 8c 30 05              jump @1006 if a5 <u a1
      :                          @885
 11619: ac c0 2d 05              jump @1007 if ra <u a5
      :                          @886
 11623: 64 6b                    a4 = s1
 11625: 98 89 01                 a2 = a1 >> 0x1
 11628: 51 09 70 ff              jump @873 if a2 == 0
      :                          @887
 11632: 64 b2                    t0 = a4
 11634: 64 c6                    s1 = a5
 11636: 7b 15 b0 00              u64 [sp + 0xb0] = s0
 11640: c8 58 0a                 a3 = a1 + s0
 11643: 97 aa 03                 a3 = a3 << 0x3
 11646: 82 1b 48                 a4 = u64 [sp + 0x48]
 11649: c8 ba 0a                 a3 = a3 + a4
 11652: 64 7b                    a4 = a0
 11654: 01                       fallthrough
      :                          @888
 11655: 82 ac                    a5 = u64 [a3]
 11657: 82 b5                    s0 = u64 [a4]
 11659: 7b bc                    u64 [a4] = a5
 11661: 7b a5                    u64 [a3] = s0
 11663: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 11666: 95 bb 08                 a4 = a4 + 0x8
 11669: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 11672: 52 09 ef                 jump @888 if a2 != 0
      :                          @889
 11675: 64 6c                    a5 = s1
 11677: 64 2b                    a4 = t0
 11679: 82 12 d0 00              t0 = u64 [sp + 0xd0]
 11683: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 11687: 28 35 ff                 jump @873
      :                          @890
 11690: c9 5c 06                 s1 = a5 - s0
 11693: 01                       fallthrough
      :                          @891
 11694: 97 b7 04                 a0 = a4 << 0x4
 11697: 7b 17 c0 00              u64 [sp + 0xc0] = a0
 11701: 82 17 30                 a0 = u64 [sp + 0x30]
 11704: 7b 1c 40                 u64 [sp + 0x40] = a5
 11707: ab 7b e9 00              jump @911 if a4 != a0
      :                          @892
 11711: 7b 16 a8 00              u64 [sp + 0xa8] = s1
 11715: 7b 15 b0 00              u64 [sp + 0xb0] = s0
 11719: 97 b7 01                 a0 = a4 << 0x1
 11722: 7b 17 30                 u64 [sp + 0x30] = a0
 11725: 97 b2 05                 t0 = a4 << 0x5
 11728: 82 14 18                 t2 = u64 [sp + 0x18]
 11731: 33 03 00 00 10           t1 = 0x100000
 11736: 82 17 20                 a0 = u64 [sp + 0x20]
 11739: 82 19 c0 00              a2 = u64 [sp + 0xc0]
 11743: 01                       fallthrough
      :                          @893
 11744: 82 78                    a1 = u64 [a0]
 11746: c8 28 0c                 a5 = a1 + t0
 11749: ac 8c a4 04              jump @1000 if a5 <u a1
      :                          @894
 11753: 95 ca 08                 a3 = a5 + 0x8
 11756: d8 ca 0b                 a4 = a3 <u a5
 11759: d8 a3 0a                 a3 = t1 <u a3
 11762: d4 ba 0a                 a3 = a3 | a4
 11765: 52 0a 94 04              jump @1000 if a3 != 0
      :                          @895
 11769: c9 c4 0a                 a3 = t2 - a5
 11772: c8 3a 06                 s1 = a3 + t1
 11775: 84 6a 07                 a3 = s1 & 0x7
 11778: c8 ca 0b                 a4 = a3 + a5
 11781: 01                       fallthrough
      :                          @896
 11782: 82 7c                    a5 = u64 [a0]
 11784: ab 8c d8                 jump @893 if a5 != a1
      :                          @897
 11787: 7b 7b                    u64 [a0] = a4
 11789: c9 a6 05                 s0 = s1 - a3
 11792: 64 57                    a0 = s0
 11794: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 11798: 64 96                    s1 = a2
 11800: 50 20 16 01 3f 83 00     ra = 278, jump @2839
      :                          @898 [@dyn 139]
 11807: 82 17 10                 a0 = u64 [sp + 0x10]
 11810: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 11814: ac 7b 46                 jump @905 if a4 <u a0
      :                          @899
 11817: c8 65 07                 a0 = s0 + s1
 11820: 82 18 a8 00              a1 = u64 [sp + 0xa8]
 11824: 7b 78                    u64 [a0] = a1
 11826: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 11830: 7b 78 08                 u64 [a0 + 0x8] = a1
 11833: 95 bb 01                 a4 = a4 + 0x1
 11836: 82 10 78                 ra = u64 [sp + 0x78]
 11839: 64 b7                    a0 = a4
 11841: 7b 15 70                 u64 [sp + 0x70] = s0
 11844: 28 e2 00                 jump @917
      :                          @900
 11847: 33 08 02                 a1 = 0x2
 11850: aa 89 8c fe              jump @872 if a2 == a1
      :                          @901
 11854: 82 18 08                 a1 = u64 [sp + 0x8]
 11857: c8 8b 0b                 a4 = a4 + a1
 11860: 33 08 02                 a1 = 0x2
 11863: 01                       fallthrough
      :                          @902
 11864: 64 ac                    a5 = a3
 11866: 82 ba                    a3 = u64 [a4]
 11868: ac ca 7a fe              jump @872 if a3 <u a5
      :                          @903
 11872: 95 88 01                 a1 = a1 + 0x1
 11875: 95 bb 08                 a4 = a4 + 0x8
 11878: ab 89 f2                 jump @902 if a2 != a1
      :                          @904
 11881: 28 64 fe                 jump @871
      :                          @905
 11884: 64 52                    t0 = s0
 11886: 82 13 50                 t1 = u64 [sp + 0x50]
 11889: 82 1b 20                 a4 = u64 [sp + 0x20]
 11892: 82 1c 40                 a5 = u64 [sp + 0x40]
 11895: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 11899: 01                       fallthrough
      :                          @906
 11900: 82 b7                    a0 = u64 [a4]
 11902: c9 7b 08                 a1 = a4 - a0
 11905: ab 58 0f                 jump @910 if a1 != s0
      :                          @907
 11908: c9 67 08                 a1 = a0 - s1
 11911: 01                       fallthrough
      :                          @908
 11912: 82 b9                    a2 = u64 [a4]
 11914: ab 79 f2                 jump @906 if a2 != a0
      :                          @909
 11917: 7b b8                    u64 [a4] = a1
 11919: 01                       fallthrough
      :                          @910
 11920: 82 14 80 00              t2 = u64 [sp + 0x80]
 11924: 82 10 78                 ra = u64 [sp + 0x78]
 11927: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 11931: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 11935: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 11939: 01                       fallthrough
      :                          @911
 11940: 82 17 c0 00              a0 = u64 [sp + 0xc0]
 11944: c8 27 07                 a0 = a0 + t0
 11947: 7b 76                    u64 [a0] = s1
 11949: 95 bb 01                 a4 = a4 + 0x1
 11952: 7b 75 08                 u64 [a0 + 0x8] = s0
 11955: 64 25                    s0 = t0
 11957: 53 1b 02 ff fd           jump @869 if a4 <u 2
      :                          @912
 11962: 64 b7                    a0 = a4
 11964: 7b 15 70                 u64 [sp + 0x70] = s0
 11967: 28 67                    jump @917
      :                          @913
 11969: 64 65                    s0 = s1
 11971: 64 b8                    a1 = a4
 11973: 01                       fallthrough
      :                          @914
 11974: 82 16 c0 00              s1 = u64 [sp + 0xc0]
 11978: 95 67 08                 a0 = s1 + 0x8
 11981: 7b 17 88 00              u64 [sp + 0x88] = a0
 11985: c9 89 09                 a2 = a2 - a1
 11988: 64 57                    a0 = s0
 11990: 50 20 18 01 81 82 00     ra = 280, jump @2839
      :                          @915 [@dyn 140]
 11997: 82 17 90 00              a0 = u64 [sp + 0x90]
 12001: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 12005: c8 87 07                 a0 = a0 + a1
 12008: 7b 67                    u64 [s1] = a0
 12010: 82 17 98 00              a0 = u64 [sp + 0x98]
 12014: 82 18 88 00              a1 = u64 [sp + 0x88]
 12018: 7b 87                    u64 [a1] = a0
 12020: 82 1a a0 00              a3 = u64 [sp + 0xa0]
 12024: 95 a8 10                 a1 = a3 + 0x10
 12027: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 12031: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 12034: 82 19 b0 00              a2 = u64 [sp + 0xb0]
 12038: c8 97 07                 a0 = a0 + a2
 12041: 97 79 04                 a2 = a0 << 0x4
 12044: 64 a7                    a0 = a3
 12046: 50 20 1a 01 fb 82 00     ra = 282, jump @2857
      :                          @916 [@dyn 141]
 12053: 33 0b 01                 a4 = 0x1
 12056: 82 10 78                 ra = u64 [sp + 0x78]
 12059: 82 15 70                 s0 = u64 [sp + 0x70]
 12062: 82 17 b8 00              a0 = u64 [sp + 0xb8]
 12066: ae 7b 85 fd              jump @868 if a4 >=u a0
      :                          @917
 12070: 64 76                    s1 = a0
 12072: 95 72 ff                 t0 = a0 + 0xffffffffffffffff
 12075: 97 27 04                 a0 = t0 << 0x4
 12078: c8 57 07                 a0 = a0 + s0
 12081: 82 78 08                 a1 = u64 [a0 + 0x8]
 12084: 82 7c                    a5 = u64 [a0]
 12086: c8 c8 08                 a1 = a1 + a5
 12089: aa 08 4e                 jump @924 if a1 == ra
      :                          @918
 12092: 97 6a 04                 a3 = s1 << 0x4
 12095: c8 5a 0a                 a3 = a3 + s0
 12098: 82 a9 e0                 a2 = u64 [a3 + 0xffffffffffffffe0]
 12101: ae 9c 42                 jump @924 if a5 >=u a2
      :                          @919
 12104: 33 0b 02                 a4 = 0x2
 12107: 82 13 50                 t1 = u64 [sp + 0x50]
 12110: 82 14 80 00              t2 = u64 [sp + 0x80]
 12114: 82 17 c8 00              a0 = u64 [sp + 0xc8]
 12118: ae 6b 93 01              jump @945 if a4 >=u s1
      :                          @920
 12122: 64 43                    t1 = t2
 12124: 95 68 fd                 a1 = s1 + 0xfffffffffffffffd
 12127: 64 84                    t2 = a1
 12129: 97 88 04                 a1 = a1 << 0x4
 12132: c8 58 08                 a1 = a1 + s0
 12135: 82 88                    a1 = u64 [a1]
 12137: c8 c9 0b                 a4 = a2 + a5
 12140: ae 8b 72 01              jump @943 if a4 >=u a1
      :                          @921
 12144: 33 0b 03                 a4 = 0x3
 12147: ae 6b 7e 01              jump @946 if a4 >=u s1
      :                          @922
 12151: 82 aa c0                 a3 = u64 [a3 + 0xffffffffffffffc0]
 12154: c8 89 09                 a2 = a2 + a1
 12157: 64 4b                    a4 = t2
 12159: 64 34                    t2 = t1
 12161: ae a9 1e                 jump @926 if a2 >=u a3
      :                          @923
 12164: 28 7d 01                 jump @948
      :                          @924
 12167: 82 14 80 00              t2 = u64 [sp + 0x80]
 12171: 82 17 c8 00              a0 = u64 [sp + 0xc8]
 12175: 53 16 03 13              jump @927 if s1 <u 3
      :                          @925
 12179: 95 6b fd                 a4 = s1 + 0xfffffffffffffffd
 12182: 97 b8 04                 a1 = a4 << 0x4
 12185: c8 58 08                 a1 = a1 + s0
 12188: 82 88                    a1 = u64 [a1]
 12190: 01                       fallthrough
      :                          @926
 12191: ac c8 07                 jump @928 if a1 <u a5
      :                          @927
 12194: 95 6b fe                 a4 = s1 + 0xfffffffffffffffe
 12197: 01                       fallthrough
      :                          @928
 12198: ae 6b e4 02              jump @1001 if a4 >=u s1
      :                          @929
 12202: 95 b9 01                 a2 = a4 + 0x1
 12205: ae 69 dd 02              jump @1001 if a2 >=u s1
      :                          @930
 12209: 97 b8 04                 a1 = a4 << 0x4
 12212: c8 85 0a                 a3 = s0 + a1
 12215: 97 99 04                 a2 = a2 << 0x4
 12218: c8 59 09                 a2 = a2 + s0
 12221: 82 9c                    a5 = u64 [a2]
 12223: 7b 19 c0 00              u64 [sp + 0xc0] = a2
 12227: 82 98 08                 a1 = u64 [a2 + 0x8]
 12230: 82 a9 08                 a2 = u64 [a3 + 0x8]
 12233: c8 c8 08                 a1 = a1 + a5
 12236: ac 98 bf 02              jump @1002 if a1 <u a2
      :                          @931
 12240: ac 80 bc 02              jump @1003 if ra <u a1
      :                          @932
 12244: 7b 1c 90 00              u64 [sp + 0x90] = a5
 12248: 7b 1b a8 00              u64 [sp + 0xa8] = a4
 12252: 7b 16 b0 00              u64 [sp + 0xb0] = s1
 12256: 7b 12 b8 00              u64 [sp + 0xb8] = t0
 12260: 7b 1a a0 00              u64 [sp + 0xa0] = a3
 12264: 82 aa                    a3 = u64 [a3]
 12266: c9 98 0b                 a4 = a1 - a2
 12269: 7b 19 98 00              u64 [sp + 0x98] = a2
 12273: 97 95 03                 s0 = a2 << 0x3
 12276: c8 45 05                 s0 = s0 + t2
 12279: 97 a9 03                 a2 = a3 << 0x3
 12282: c8 95 06                 s1 = s0 + a2
 12285: c9 ab 0c                 a5 = a4 - a3
 12288: 97 88 03                 a1 = a1 << 0x3
 12291: 7b 18 88 00              u64 [sp + 0x88] = a1
 12295: 7b 1a d0 00              u64 [sp + 0xd0] = a3
 12299: ae ac 68                 jump @938 if a5 >=u a3
      :                          @933
 12302: 97 c9 03                 a2 = a5 << 0x3
 12305: 7b 19 68                 u64 [sp + 0x68] = a2
 12308: 64 68                    a1 = s1
 12310: 7b 1c 60                 u64 [sp + 0x60] = a5
 12313: 50 20 1c 01 3e 81 00     ra = 284, jump @2839
      :                          @934 [@dyn 142]
 12320: 82 1b c8 00              a4 = u64 [sp + 0xc8]
 12324: 82 18 60                 a1 = u64 [sp + 0x60]
 12327: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 12331: e5 87 07                 a0 = mins(a0, a1)
 12334: 82 19 68                 a2 = u64 [sp + 0x68]
 12337: c8 b9 09                 a2 = a2 + a4
 12340: 58 07 8d fe              jump @913 if a0 <=s 0
      :                          @935
 12344: 82 17 48                 a0 = u64 [sp + 0x48]
 12347: 82 18 88 00              a1 = u64 [sp + 0x88]
 12351: c8 87 07                 a0 = a0 + a1
 12354: 01                       fallthrough
      :                          @936
 12355: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
 12358: 82 6a f8                 a3 = u64 [s1 + 0xfffffffffffffff8]
 12361: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 12364: d8 a8 08                 a1 = a1 <u a3
 12367: 97 8a 03                 a3 = a1 << 0x3
 12370: c9 a6 06                 s1 = s1 - a3
 12373: c8 a9 09                 a2 = a2 + a3
 12376: 64 6a                    a3 = s1
 12378: da 89 0a                 a3 = a2 if a1 == 0
 12381: 82 a8                    a1 = u64 [a3]
 12383: 7b 78                    u64 [a0] = a1
 12385: d8 65 08                 a1 = s0 <u s1
 12388: d8 9b 0a                 a3 = a4 <u a2
 12391: d2 a8 08                 a1 = a1 & a3
 12394: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
 12397: 52 08 d6                 jump @936 if a1 != 0
      :                          @937
 12400: 28 51 fe                 jump @913
      :                          @938
 12403: 8f a8                    a1 = a3 >s 0
 12405: 7b 18 68                 u64 [sp + 0x68] = a1
 12408: 64 58                    a1 = s0
 12410: 7b 19 60                 u64 [sp + 0x60] = a2
 12413: 7b 1b 58                 u64 [sp + 0x58] = a4
 12416: 50 20 1e 01 d7 80 00     ra = 286, jump @2839
      :                          @939 [@dyn 143]
 12423: 82 18 c8 00              a1 = u64 [sp + 0xc8]
 12427: 82 19 58                 a2 = u64 [sp + 0x58]
 12430: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 12434: d9 97 07                 a0 = a0 <s a2
 12437: 82 19 68                 a2 = u64 [sp + 0x68]
 12440: d2 97 07                 a0 = a0 & a2
 12443: 82 19 60                 a2 = u64 [sp + 0x60]
 12446: c8 89 09                 a2 = a2 + a1
 12449: 51 07 25 fe              jump @914 if a0 == 0
      :                          @940
 12453: 82 12 80 00              t0 = u64 [sp + 0x80]
 12457: 82 17 88 00              a0 = u64 [sp + 0x88]
 12461: c8 72 02                 t0 = t0 + a0
 12464: 01                       fallthrough
      :                          @941
 12465: 82 6a                    a3 = u64 [s1]
 12467: 82 8b                    a4 = u64 [a1]
 12469: d8 ba 0c                 a5 = a3 <u a4
 12472: 85 c7 01                 a0 = a5 ^ 0x1
 12475: e6 ba 0a                 a3 = minu(a3, a4)
 12478: 7b 5a                    u64 [s0] = a3
 12480: 97 cc 03                 a5 = a5 << 0x3
 12483: c8 c6 06                 s1 = s1 + a5
 12486: 97 77 03                 a0 = a0 << 0x3
 12489: c8 78 08                 a1 = a1 + a0
 12492: d8 98 07                 a0 = a1 <u a2
 12495: d8 26 0a                 a3 = s1 <u t0
 12498: d2 a7 07                 a0 = a0 & a3
 12501: 95 55 08                 s0 = s0 + 0x8
 12504: 52 07 d9                 jump @941 if a0 != 0
      :                          @942
 12507: 28 eb fd                 jump @914
      :                          @943
 12510: 64 4b                    a4 = t2
 12512: 64 34                    t2 = t1
 12514: ae c8 c0 fe              jump @927 if a1 >=u a5
      :                          @944
 12518: 28 c0 fe                 jump @928
      :                          @945
 12521: 64 52                    t0 = s0
 12523: 82 1c 40                 a5 = u64 [sp + 0x40]
 12526: 28 c6 fb                 jump @869
      :                          @946
 12529: 64 52                    t0 = s0
 12531: 82 1c 40                 a5 = u64 [sp + 0x40]
 12534: 64 34                    t2 = t1
 12536: 82 13 50                 t1 = u64 [sp + 0x50]
 12539: ac 0c bd fb              jump @870 if a5 <u ra
      :                          @947
 12543: 28 10                    jump @949
      :                          @948
 12545: 64 6b                    a4 = s1
 12547: 64 52                    t0 = s0
 12549: 82 1c 40                 a5 = u64 [sp + 0x40]
 12552: 82 13 50                 t1 = u64 [sp + 0x50]
 12555: ac 0c ad fb              jump @870 if a5 <u ra
      :                          @949
 12559: 82 15 08                 s0 = u64 [sp + 0x8]
 12562: 82 18 30                 a1 = u64 [sp + 0x30]
 12565: 56 38 00 00 01 28        jump @955 if a1 >u 65536
      :                          @950
 12571: 97 87 04                 a0 = a1 << 0x4
 12574: 33 08 10 01 03           a1 = 0x30110
 12579: 95 88 00 00 10           a1 = a1 + 0x100000
 12584: 01                       fallthrough
      :                          @951
 12585: 82 89                    a2 = u64 [a1]
 12587: c9 98 0a                 a3 = a1 - a2
 12590: ab 2a 0f                 jump @955 if a3 != t0
      :                          @952
 12593: c9 79 0a                 a3 = a2 - a0
 12596: 01                       fallthrough
      :                          @953
 12597: 82 8b                    a4 = u64 [a1]
 12599: ab 9b f2                 jump @951 if a4 != a2
      :                          @954
 12602: 7b 8a                    u64 [a1] = a3
 12604: 01                       fallthrough
      :                          @955
 12605: 82 1c c8 00              a5 = u64 [sp + 0xc8]
 12609: 56 30 01 00 04 28        jump @961 if ra >u 262145
      :                          @956
 12615: 33 07 10 01 03           a0 = 0x30110
 12620: 95 77 00 00 10           a0 = a0 + 0x100000
 12625: 01                       fallthrough
      :                          @957
 12626: 82 78                    a1 = u64 [a0]
 12628: c9 87 09                 a2 = a0 - a1
 12631: ab c9 12                 jump @961 if a2 != a5
      :                          @958
 12634: 82 19 28                 a2 = u64 [sp + 0x28]
 12637: c9 98 09                 a2 = a1 - a2
 12640: 01                       fallthrough
      :                          @959
 12641: 82 7a                    a3 = u64 [a0]
 12643: ab 8a ef                 jump @957 if a3 != a1
      :                          @960
 12646: 7b 79                    u64 [a0] = a2
 12648: 01                       fallthrough
      :                          @961
 12649: 82 4a                    a3 = u64 [t2]
 12651: 9a 07 01                 a0 = 0x1 - ra
 12654: 33 09 02                 a2 = 0x2
 12657: 33 08 02                 a1 = 0x2
 12660: 01                       fallthrough
      :                          @962
 12661: 64 ab                    a4 = a3
 12663: 82 5a f8                 a3 = u64 [s0 + 0xfffffffffffffff8]
 12666: aa ba 13                 jump @965 if a3 == a4
      :                          @963
 12669: 95 88 01                 a1 = a1 + 0x1
 12672: c8 87 0b                 a4 = a0 + a1
 12675: 95 55 08                 s0 = s0 + 0x8
 12678: ab 9b ef                 jump @962 if a4 != a2
      :                          @964
 12681: 64 07                    a0 = ra
 12683: 28 2b                    jump @970
      :                          @965
 12685: 95 87 ff                 a0 = a1 + 0xffffffffffffffff
 12688: ae 08 26                 jump @970 if a1 >=u ra
      :                          @966
 12691: c9 80 08                 a1 = ra - a1
 12694: 28 0b                    jump @968
      :                          @967
 12696: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 12699: 95 55 08                 s0 = s0 + 0x8
 12702: 51 08 18                 jump @970 if a1 == 0
      :                          @968
 12705: 97 79 03                 a2 = a0 << 0x3
 12708: c8 49 09                 a2 = a2 + t2
 12711: 82 5a                    a3 = u64 [s0]
 12713: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
 12716: aa ba ec                 jump @967 if a3 == a4
      :                          @969
 12719: 7b 9a                    u64 [a2] = a3
 12721: 95 77 01                 a0 = a0 + 0x1
 12724: 28 e4                    jump @967
      :                          @970
 12726: 53 13 03 5a              jump @982 if t1 <u 3
      :                          @971
 12730: 97 77 03                 a0 = a0 << 0x3
 12733: c8 74 08                 a1 = t2 + a0
 12736: 33 02 02                 t0 = 0x2
 12739: 33 0a 01                 a3 = 0x1
 12742: 28 05                    jump @973
      :                          @972
 12744: aa 32 48                 jump @982 if t0 == t1
      :                          @973
 12747: 64 27                    a0 = t0
 12749: 95 22 01                 t0 = t0 + 0x1
 12752: 64 4b                    a4 = t2
 12754: 28 05                    jump @975
      :                          @974
 12756: aa ac f4                 jump @972 if a5 == a3
      :                          @975
 12759: aa 8b 6f                 jump @990 if a4 == a1
      :                          @976
 12762: 82 bc                    a5 = u64 [a4]
 12764: 51 0c ac 00              jump @999 if a5 == 0
      :                          @977
 12768: 82 19 38                 a2 = u64 [sp + 0x38]
 12771: ac c9 e5                 jump @972 if a2 <u a5
      :                          @978
 12774: 95 bb 08                 a4 = a4 + 0x8
 12777: 82 19 38                 a2 = u64 [sp + 0x38]
 12780: cb c9 06                 s1 = a2 /u a5
 12783: 33 0c 01                 a5 = 0x1
 12786: 64 75                    s0 = a0
 12788: 28 0b                    jump @980
      :                          @979
 12790: 98 66 01                 s1 = s1 >> 0x1
 12793: ca 55 05                 s0 = s0 * s0
 12796: 51 06 d8                 jump @974 if s1 == 0
      :                          @980
 12799: 84 69 01                 a2 = s1 & 0x1
 12802: cd 35 05                 s0 = s0 %u t1
 12805: 51 09 f1                 jump @979 if a2 == 0
      :                          @981
 12808: ca c5 09                 a2 = s0 * a5
 12811: cd 39 0c                 a5 = a2 %u t1
 12814: 28 e8                    jump @979
      :                          @982
 12816: 82 18                    a1 = u64 [sp]
 12818: 51 08 30                 jump @989 if a1 == 0
      :                          @983
 12821: 56 38 00 00 02 2d        jump @989 if a1 >u 131072
      :                          @984
 12827: 97 87 03                 a0 = a1 << 0x3
 12830: 33 08 10 01 03           a1 = 0x30110
 12835: 95 88 00 00 10           a1 = a1 + 0x100000
 12840: 01                       fallthrough
      :                          @985
 12841: 82 89                    a2 = u64 [a1]
 12843: c9 98 0a                 a3 = a1 - a2
 12846: ab 4a 14                 jump @989 if a3 != t2
      :                          @986
 12849: c9 79 0a                 a3 = a2 - a0
 12852: 01                       fallthrough
      :                          @987
 12853: 82 8b                    a4 = u64 [a1]
 12855: ab 9b f2                 jump @985 if a4 != a2
      :                          @988
 12858: 7b 8a                    u64 [a1] = a3
 12860: 33 0c                    a5 = 0
 12862: 33 07                    a0 = 0
 12864: 28 35                    jump @997
      :                          @989
 12866: 33 07                    a0 = 0
 12868: 28 31                    jump @997
      :                          @990
 12870: 82 19                    a2 = u64 [sp]
 12872: 51 09 2d                 jump @997 if a2 == 0
      :                          @991
 12875: 33 08 00 00 02           a1 = 0x20000
 12880: ac 98 25                 jump @997 if a1 <u a2
      :                          @992
 12883: 97 98 03                 a1 = a2 << 0x3
 12886: 33 09 10 01 03           a2 = 0x30110
 12891: 95 99 00 00 10           a2 = a2 + 0x100000
 12896: 01                       fallthrough
      :                          @993
 12897: 82 9a                    a3 = u64 [a2]
 12899: c9 a9 0b                 a4 = a2 - a3
 12902: ab 4b 0f                 jump @997 if a4 != t2
      :                          @994
 12905: c9 8a 0b                 a4 = a3 - a1
 12908: 01                       fallthrough
      :                          @995
 12909: 82 9c                    a5 = u64 [a2]
 12911: ab ac f2                 jump @993 if a5 != a3
      :                          @996
 12914: 7b 9b                    u64 [a2] = a4
 12916: 01                       fallthrough
      :                          @997
 12917: 82 10 00 01              ra = u64 [sp + 0x100]
 12921: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 12925: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 12929: 95 11 08 01              sp = sp + 0x108
 12933: 32 00                    ret
      :                          @998
 12935: 00                       trap
      :                          @999
 12936: 00                       trap
      :                          @1000
 12937: 00                       trap
      :                          @1001
 12938: 00                       trap
      :                          @1002
 12939: 00                       trap
      :                          @1003
 12940: 00                       trap
      :                          @1004
 12941: 00                       trap
      :                          @1005
 12942: 00                       trap
      :                          @1006
 12943: 00                       trap
      :                          @1007
 12944: 00                       trap
      :                          @1008 [@dyn 144]
 12945: 82 17 10                 a0 = u64 [sp + 0x10]
 12948: 52 17 01 4c              jump @1010 if a0 != 1
      :                          @1009
 12952: 82 17 18                 a0 = u64 [sp + 0x18]
 12955: 82 1b 08                 a4 = u64 [sp + 0x8]
 12958: 82 18                    a1 = u64 [sp]
 12960: c9 b8 08                 a1 = a1 - a4
 12963: ce 58 08                 a1 = a1 %s s0
 12966: 9a 59                    a2 = -s0
 12968: e3 95 09                 a2 = maxs(s0, a2)
 12971: 99 8a 3f                 a3 = a1 >>a 0x3f
 12974: d2 9a 0a                 a3 = a3 & a2
 12977: c8 a8 08                 a1 = a1 + a3
 12980: ce 57 07                 a0 = a0 %s s0
 12983: c8 57 07                 a0 = a0 + s0
 12986: ce 57 07                 a0 = a0 %s s0
 12989: ca 78 07                 a0 = a1 * a0
 12992: ce 57 07                 a0 = a0 %s s0
 12995: 99 78 3f                 a1 = a0 >>a 0x3f
 12998: d2 98 08                 a1 = a1 & a2
 13001: c8 87 07                 a0 = a0 + a1
 13004: ca 67 07                 a0 = a0 * s1
 13007: c8 b7 07                 a0 = a0 + a4
 13010: 82 10 38                 ra = u64 [sp + 0x38]
 13013: 82 15 30                 s0 = u64 [sp + 0x30]
 13016: 82 16 28                 s1 = u64 [sp + 0x28]
 13019: 95 11 40                 sp = sp + 0x40
 13022: 32 00                    ret
      :                          @1010
 13024: 00                       trap
      :                          @1011
 13025: 95 11 98                 sp = sp + 0xffffffffffffff98
 13028: 7b 10 60                 u64 [sp + 0x60] = ra
 13031: 7b 15 58                 u64 [sp + 0x58] = s0
 13034: 7b 16 50                 u64 [sp + 0x50] = s1
 13037: 82 86 08                 s1 = u64 [a1 + 0x8]
 13040: 51 06 a2 01              jump @1029 if s1 == 0
      :                          @1012
 13044: 64 85                    s0 = a1
 13046: 82 89                    a2 = u64 [a1]
 13048: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 13058: d3 98 08                 a1 = a1 ^ a2
 13061: e1 68 08                 a1 = a1 | ~s1
 13064: 51 08 89 01              jump @1028 if a1 == 0
      :                          @1013
 13068: 7b 17 30                 u64 [sp + 0x30] = a0
 13071: 82 77                    a0 = u64 [a0]
 13073: 7b 17 28                 u64 [sp + 0x28] = a0
 13076: 7b 19 18                 u64 [sp + 0x18] = a2
 13079: ce 69 08                 a1 = a2 %s s1
 13082: 9a 67                    a0 = -s1
 13084: e3 76 09                 a2 = maxs(s1, a0)
 13087: 99 87 3f                 a0 = a1 >>a 0x3f
 13090: 7b 19 20                 u64 [sp + 0x20] = a2
 13093: d2 97 07                 a0 = a0 & a2
 13096: c8 78 08                 a1 = a1 + a0
 13099: 95 17 38                 a0 = sp + 0x38
 13102: 64 69                    a2 = s1
 13104: 50 20 22 01 0a f6        ra = 290, jump @788
      :                          @1014 [@dyn 145]
 13110: 82 17 38                 a0 = u64 [sp + 0x38]
 13113: 52 17 01 5a 01           jump @1030 if a0 != 1
      :                          @1015
 13118: 82 17 40                 a0 = u64 [sp + 0x40]
 13121: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 13131: d3 87 09                 a2 = a0 ^ a1
 13134: e1 69 09                 a2 = a2 | ~s1
 13137: 51 09 40 01              jump @1028 if a2 == 0
      :                          @1016
 13141: ce 67 07                 a0 = a0 %s s1
 13144: c8 67 07                 a0 = a0 + s1
 13147: d3 78 08                 a1 = a1 ^ a0
 13150: e1 68 08                 a1 = a1 | ~s1
 13153: 51 08 30 01              jump @1028 if a1 == 0
      :                          @1017
 13157: 82 18 30                 a1 = u64 [sp + 0x30]
 13160: 82 88 08                 a1 = u64 [a1 + 0x8]
 13163: 82 19 28                 a2 = u64 [sp + 0x28]
 13166: c9 98 09                 a2 = a1 - a2
 13169: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 13179: d3 89 0a                 a3 = a2 ^ a1
 13182: e1 6a 0a                 a3 = a3 | ~s1
 13185: 51 0a 10 01              jump @1028 if a3 == 0
      :                          @1018
 13189: ce 67 07                 a0 = a0 %s s1
 13192: ce 69 09                 a2 = a2 %s s1
 13195: 99 9a 3f                 a3 = a2 >>a 0x3f
 13198: 82 1b 20                 a4 = u64 [sp + 0x20]
 13201: d2 ba 0a                 a3 = a3 & a4
 13204: c8 a9 09                 a2 = a2 + a3
 13207: ca 79 09                 a2 = a2 * a0
 13210: d3 89 07                 a0 = a2 ^ a1
 13213: e1 67 07                 a0 = a0 | ~s1
 13216: 51 07 f1 00              jump @1028 if a0 == 0
      :                          @1019
 13220: 82 55 10                 s0 = u64 [s0 + 0x10]
 13223: 51 05 eb 00              jump @1029 if s0 == 0
      :                          @1020
 13227: 82 17 18                 a0 = u64 [sp + 0x18]
 13230: ca 76 08                 a1 = s1 * a0
 13233: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 13243: d3 87 07                 a0 = a0 ^ a1
 13246: e1 57 07                 a0 = a0 | ~s0
 13249: 51 07 d0 00              jump @1028 if a0 == 0
      :                          @1021
 13253: 7b 19 10                 u64 [sp + 0x10] = a2
 13256: 7b 18                    u64 [sp] = a1
 13258: ce 58 08                 a1 = a1 %s s0
 13261: 9a 57                    a0 = -s0
 13263: e3 75 09                 a2 = maxs(s0, a0)
 13266: 99 87 3f                 a0 = a1 >>a 0x3f
 13269: 7b 19 08                 u64 [sp + 0x8] = a2
 13272: d2 97 07                 a0 = a0 & a2
 13275: c8 78 08                 a1 = a1 + a0
 13278: 95 17 38                 a0 = sp + 0x38
 13281: 64 59                    a2 = s0
 13283: 50 20 24 01 57 f5        ra = 292, jump @788
      :                          @1022 [@dyn 146]
 13289: 82 17 38                 a0 = u64 [sp + 0x38]
 13292: 52 17 01 a7 00           jump @1030 if a0 != 1
      :                          @1023
 13297: 82 17 40                 a0 = u64 [sp + 0x40]
 13300: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 13310: d3 97 08                 a1 = a0 ^ a2
 13313: e1 58 08                 a1 = a1 | ~s0
 13316: 51 08 8d 00              jump @1028 if a1 == 0
      :                          @1024
 13320: ce 57 08                 a1 = a0 %s s0
 13323: c8 58 08                 a1 = a1 + s0
 13326: d3 89 09                 a2 = a2 ^ a1
 13329: e1 59 07                 a0 = a2 | ~s0
 13332: 51 07 7d                 jump @1028 if a0 == 0
      :                          @1025
 13335: 82 17 10                 a0 = u64 [sp + 0x10]
 13338: ce 67 07                 a0 = a0 %s s1
 13341: 99 79 3f                 a2 = a0 >>a 0x3f
 13344: 82 1a 20                 a3 = u64 [sp + 0x20]
 13347: d2 a9 09                 a2 = a2 & a3
 13350: 82 1a 30                 a3 = u64 [sp + 0x30]
 13353: 82 aa 10                 a3 = u64 [a3 + 0x10]
 13356: c8 97 07                 a0 = a0 + a2
 13359: 82 19 18                 a2 = u64 [sp + 0x18]
 13362: ca 97 07                 a0 = a0 * a2
 13365: 82 19 28                 a2 = u64 [sp + 0x28]
 13368: c8 97 07                 a0 = a0 + a2
 13371: c9 7a 0a                 a3 = a3 - a0
 13374: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 13384: d3 9a 0b                 a4 = a3 ^ a2
 13387: e1 5b 0b                 a4 = a4 | ~s0
 13390: 51 0b 43                 jump @1028 if a4 == 0
      :                          @1026
 13393: ce 58 08                 a1 = a1 %s s0
 13396: ce 5a 0a                 a3 = a3 %s s0
 13399: 99 ab 3f                 a4 = a3 >>a 0x3f
 13402: 82 1c 08                 a5 = u64 [sp + 0x8]
 13405: d2 cb 0b                 a4 = a4 & a5
 13408: c8 ba 0a                 a3 = a3 + a4
 13411: ca 8a 08                 a1 = a3 * a1
 13414: d3 89 09                 a2 = a2 ^ a1
 13417: e1 59 09                 a2 = a2 | ~s0
 13420: 51 09 25                 jump @1028 if a2 == 0
      :                          @1027
 13423: ce 58 08                 a1 = a1 %s s0
 13426: 99 89 3f                 a2 = a1 >>a 0x3f
 13429: d2 c9 09                 a2 = a2 & a5
 13432: c8 98 08                 a1 = a1 + a2
 13435: 82 19                    a2 = u64 [sp]
 13437: ca 98 08                 a1 = a1 * a2
 13440: c8 87 07                 a0 = a0 + a1
 13443: 82 10 60                 ra = u64 [sp + 0x60]
 13446: 82 15 58                 s0 = u64 [sp + 0x58]
 13449: 82 16 50                 s1 = u64 [sp + 0x50]
 13452: 95 11 68                 sp = sp + 0x68
 13455: 32 00                    ret
      :                          @1028
 13457: 00                       trap
      :                          @1029
 13458: 00                       trap
      :                          @1030
 13459: 00                       trap
      :                          @1031
 13460: d6 a7 09                 a2 = a0 mulhu a3
 13463: 98 9b 04                 a4 = a2 >> 0x4
 13466: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13469: c8 b9 09                 a2 = a2 + a4
 13472: c8 37 07                 a0 = a0 + t1
 13475: c9 97 07                 a0 = a0 - a2
 13478: 01                       fallthrough
      :                          @1032
 13479: d6 a7 09                 a2 = a0 mulhu a3
 13482: 98 9b 04                 a4 = a2 >> 0x4
 13485: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13488: c8 b9 09                 a2 = a2 + a4
 13491: ca 82 0b                 a4 = t0 * a1
 13494: c8 b7 07                 a0 = a0 + a4
 13497: c9 97 07                 a0 = a0 - a2
 13500: d6 a7 09                 a2 = a0 mulhu a3
 13503: 98 9b 04                 a4 = a2 >> 0x4
 13506: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13509: c8 b9 09                 a2 = a2 + a4
 13512: c9 97 07                 a0 = a0 - a2
 13515: 95 00 01                 ra = ra + 0x1
 13518: 95 19 48                 a2 = sp + 0x48
 13521: c8 94 04                 t2 = t2 + a2
 13524: 7b 47                    u64 [t2] = a0
 13526: 51 10 08 38 02           jump @1063 if ra == 8
      :                          @1033
 13531: 97 04 03                 t2 = ra << 0x3
 13534: 51 00 27 02              jump @1062 if ra == 0
      :                          @1034
 13538: 33 07 01                 a0 = 0x1
 13541: 33 0b 09                 a4 = 0x9
 13544: 64 09                    a2 = ra
 13546: 28 0b                    jump @1036
      :                          @1035
 13548: 98 99 01                 a2 = a2 >> 0x1
 13551: ca bb 0b                 a4 = a4 * a4
 13554: 51 09 2c                 jump @1038 if a2 == 0
      :                          @1036
 13557: d6 ab 0c                 a5 = a4 mulhu a3
 13560: 98 c5 04                 s0 = a5 >> 0x4
 13563: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 13566: c8 5c 0c                 a5 = a5 + s0
 13569: 84 95 01                 s0 = a2 & 0x1
 13572: c9 cb 0b                 a4 = a4 - a5
 13575: 51 05 e5                 jump @1035 if s0 == 0
      :                          @1037
 13578: ca b7 07                 a0 = a0 * a4
 13581: d6 a7 0c                 a5 = a0 mulhu a3
 13584: 98 c5 04                 s0 = a5 >> 0x4
 13587: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 13590: c8 5c 0c                 a5 = a5 + s0
 13593: c9 c7 07                 a0 = a0 - a5
 13596: 28 d0                    jump @1035
      :                          @1038
 13598: 82 19 38                 a2 = u64 [sp + 0x38]
 13601: ca 97 07                 a0 = a0 * a2
 13604: 82 19 40                 a2 = u64 [sp + 0x40]
 13607: c8 97 07                 a0 = a0 + a2
 13610: 97 09 01                 a2 = ra << 0x1
 13613: 33 0c 01                 a5 = 0x1
 13616: 33 0b 09                 a4 = 0x9
 13619: 28 0b                    jump @1040
      :                          @1039
 13621: 98 99 01                 a2 = a2 >> 0x1
 13624: ca bb 0b                 a4 = a4 * a4
 13627: 51 09 2c                 jump @1042 if a2 == 0
      :                          @1040
 13630: d6 ab 05                 s0 = a4 mulhu a3
 13633: 98 56 04                 s1 = s0 >> 0x4
 13636: 84 55 f0                 s0 = s0 & 0xfffffffffffffff0
 13639: c8 65 05                 s0 = s0 + s1
 13642: 84 96 01                 s1 = a2 & 0x1
 13645: c9 5b 0b                 a4 = a4 - s0
 13648: 51 06 e5                 jump @1039 if s1 == 0
      :                          @1041
 13651: ca bc 0c                 a5 = a5 * a4
 13654: d6 ac 06                 s1 = a5 mulhu a3
 13657: 98 65 04                 s0 = s1 >> 0x4
 13660: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13663: c8 65 05                 s0 = s0 + s1
 13666: c9 5c 0c                 a5 = a5 - s0
 13669: 28 d0                    jump @1039
      :                          @1042
 13671: d6 a7 09                 a2 = a0 mulhu a3
 13674: 98 9b 04                 a4 = a2 >> 0x4
 13677: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13680: c8 b9 09                 a2 = a2 + a4
 13683: 82 1b 30                 a4 = u64 [sp + 0x30]
 13686: ca bc 0b                 a4 = a5 * a4
 13689: c8 b7 07                 a0 = a0 + a4
 13692: c9 97 07                 a0 = a0 - a2
 13695: 97 09 01                 a2 = ra << 0x1
 13698: c8 09 09                 a2 = a2 + ra
 13701: 33 0c 01                 a5 = 0x1
 13704: 33 0b 09                 a4 = 0x9
 13707: 28 0b                    jump @1044
      :                          @1043
 13709: 98 99 01                 a2 = a2 >> 0x1
 13712: ca bb 0b                 a4 = a4 * a4
 13715: 51 09 2c                 jump @1046 if a2 == 0
      :                          @1044
 13718: d6 ab 06                 s1 = a4 mulhu a3
 13721: 98 65 04                 s0 = s1 >> 0x4
 13724: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13727: c8 65 05                 s0 = s0 + s1
 13730: 84 96 01                 s1 = a2 & 0x1
 13733: c9 5b 0b                 a4 = a4 - s0
 13736: 51 06 e5                 jump @1043 if s1 == 0
      :                          @1045
 13739: ca bc 0c                 a5 = a5 * a4
 13742: d6 ac 06                 s1 = a5 mulhu a3
 13745: 98 65 04                 s0 = s1 >> 0x4
 13748: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13751: c8 65 05                 s0 = s0 + s1
 13754: c9 5c 0c                 a5 = a5 - s0
 13757: 28 d0                    jump @1043
      :                          @1046
 13759: d6 a7 09                 a2 = a0 mulhu a3
 13762: 98 9b 04                 a4 = a2 >> 0x4
 13765: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13768: c8 b9 09                 a2 = a2 + a4
 13771: 82 1b 28                 a4 = u64 [sp + 0x28]
 13774: ca bc 0b                 a4 = a5 * a4
 13777: c8 b7 07                 a0 = a0 + a4
 13780: c9 97 07                 a0 = a0 - a2
 13783: 97 09 02                 a2 = ra << 0x2
 13786: 33 0c 01                 a5 = 0x1
 13789: 33 0b 09                 a4 = 0x9
 13792: 28 0b                    jump @1048
      :                          @1047
 13794: 98 99 01                 a2 = a2 >> 0x1
 13797: ca bb 0b                 a4 = a4 * a4
 13800: 51 09 2c                 jump @1050 if a2 == 0
      :                          @1048
 13803: d6 ab 06                 s1 = a4 mulhu a3
 13806: 98 65 04                 s0 = s1 >> 0x4
 13809: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13812: c8 65 05                 s0 = s0 + s1
 13815: 84 96 01                 s1 = a2 & 0x1
 13818: c9 5b 0b                 a4 = a4 - s0
 13821: 51 06 e5                 jump @1047 if s1 == 0
      :                          @1049
 13824: ca bc 0c                 a5 = a5 * a4
 13827: d6 ac 06                 s1 = a5 mulhu a3
 13830: 98 65 04                 s0 = s1 >> 0x4
 13833: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13836: c8 65 05                 s0 = s0 + s1
 13839: c9 5c 0c                 a5 = a5 - s0
 13842: 28 d0                    jump @1047
      :                          @1050
 13844: d6 a7 09                 a2 = a0 mulhu a3
 13847: 98 9b 04                 a4 = a2 >> 0x4
 13850: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13853: c8 b9 09                 a2 = a2 + a4
 13856: 82 1b 20                 a4 = u64 [sp + 0x20]
 13859: ca bc 0b                 a4 = a5 * a4
 13862: c8 b7 07                 a0 = a0 + a4
 13865: c9 97 07                 a0 = a0 - a2
 13868: 97 09 02                 a2 = ra << 0x2
 13871: c8 09 09                 a2 = a2 + ra
 13874: 33 0c 01                 a5 = 0x1
 13877: 33 0b 09                 a4 = 0x9
 13880: 28 0b                    jump @1052
      :                          @1051
 13882: 98 99 01                 a2 = a2 >> 0x1
 13885: ca bb 0b                 a4 = a4 * a4
 13888: 51 09 2c                 jump @1054 if a2 == 0
      :                          @1052
 13891: d6 ab 06                 s1 = a4 mulhu a3
 13894: 98 65 04                 s0 = s1 >> 0x4
 13897: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13900: c8 65 05                 s0 = s0 + s1
 13903: 84 96 01                 s1 = a2 & 0x1
 13906: c9 5b 0b                 a4 = a4 - s0
 13909: 51 06 e5                 jump @1051 if s1 == 0
      :                          @1053
 13912: ca bc 0c                 a5 = a5 * a4
 13915: d6 ac 06                 s1 = a5 mulhu a3
 13918: 98 65 04                 s0 = s1 >> 0x4
 13921: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13924: c8 65 05                 s0 = s0 + s1
 13927: c9 5c 0c                 a5 = a5 - s0
 13930: 28 d0                    jump @1051
      :                          @1054
 13932: d6 a7 09                 a2 = a0 mulhu a3
 13935: 98 9b 04                 a4 = a2 >> 0x4
 13938: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13941: c8 b9 09                 a2 = a2 + a4
 13944: 82 1b 18                 a4 = u64 [sp + 0x18]
 13947: ca bc 0b                 a4 = a5 * a4
 13950: c8 b7 07                 a0 = a0 + a4
 13953: c9 97 07                 a0 = a0 - a2
 13956: 96 09 06                 a2 = ra * 0x6
 13959: 33 0c 01                 a5 = 0x1
 13962: 33 0b 09                 a4 = 0x9
 13965: 28 0b                    jump @1056
      :                          @1055
 13967: 98 99 01                 a2 = a2 >> 0x1
 13970: ca bb 0b                 a4 = a4 * a4
 13973: 51 09 2c                 jump @1058 if a2 == 0
      :                          @1056
 13976: d6 ab 06                 s1 = a4 mulhu a3
 13979: 98 65 04                 s0 = s1 >> 0x4
 13982: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13985: c8 65 05                 s0 = s0 + s1
 13988: 84 96 01                 s1 = a2 & 0x1
 13991: c9 5b 0b                 a4 = a4 - s0
 13994: 51 06 e5                 jump @1055 if s1 == 0
      :                          @1057
 13997: ca bc 0c                 a5 = a5 * a4
 14000: d6 ac 06                 s1 = a5 mulhu a3
 14003: 98 65 04                 s0 = s1 >> 0x4
 14006: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 14009: c8 65 05                 s0 = s0 + s1
 14012: c9 5c 0c                 a5 = a5 - s0
 14015: 28 d0                    jump @1055
      :                          @1058
 14017: 82 19 10                 a2 = u64 [sp + 0x10]
 14020: ca 9c 03                 t1 = a5 * a2
 14023: c9 04 09                 a2 = t2 - ra
 14026: 33 02 01                 t0 = 0x1
 14029: 33 0b 09                 a4 = 0x9
 14032: 28 0c                    jump @1060
      :                          @1059
 14034: 98 99 01                 a2 = a2 >> 0x1
 14037: ca bb 0b                 a4 = a4 * a4
 14040: 51 09 bc fd              jump @1031 if a2 == 0
      :                          @1060
 14044: d6 ab 0c                 a5 = a4 mulhu a3
 14047: 98 c5 04                 s0 = a5 >> 0x4
 14050: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 14053: c8 5c 0c                 a5 = a5 + s0
 14056: 84 95 01                 s0 = a2 & 0x1
 14059: c9 cb 0b                 a4 = a4 - a5
 14062: 51 05 e4                 jump @1059 if s0 == 0
      :                          @1061
 14065: ca b2 0c                 a5 = t0 * a4
 14068: d6 ac 06                 s1 = a5 mulhu a3
 14071: 98 65 04                 s0 = s1 >> 0x4
 14074: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 14077: c8 65 05                 s0 = s0 + s1
 14080: c9 5c 02                 t0 = a5 - s0
 14083: 28 cf                    jump @1059
      :                          @1062
 14085: 33 02 01                 t0 = 0x1
 14088: 82 17 08                 a0 = u64 [sp + 0x8]
 14091: 28 9c fd                 jump @1032
      :                          @1063
 14094: 82 17 80 00              a0 = u64 [sp + 0x80]
 14098: 82 18 78                 a1 = u64 [sp + 0x78]
 14101: 82 19 70                 a2 = u64 [sp + 0x70]
 14104: 82 1a 68                 a3 = u64 [sp + 0x68]
 14107: 82 1b                    a4 = u64 [sp]
 14109: 7b b7 38                 u64 [a4 + 0x38] = a0
 14112: 7b b8 30                 u64 [a4 + 0x30] = a1
 14115: 7b b9 28                 u64 [a4 + 0x28] = a2
 14118: 7b ba 20                 u64 [a4 + 0x20] = a3
 14121: 82 17 60                 a0 = u64 [sp + 0x60]
 14124: 82 18 58                 a1 = u64 [sp + 0x58]
 14127: 82 19 50                 a2 = u64 [sp + 0x50]
 14130: 82 1a 48                 a3 = u64 [sp + 0x48]
 14133: 7b b7 18                 u64 [a4 + 0x18] = a0
 14136: 7b b8 10                 u64 [a4 + 0x10] = a1
 14139: 7b b9 08                 u64 [a4 + 0x8] = a2
 14142: 7b ba                    u64 [a4] = a3
 14144: 82 10 98 00              ra = u64 [sp + 0x98]
 14148: 82 15 90 00              s0 = u64 [sp + 0x90]
 14152: 82 16 88 00              s1 = u64 [sp + 0x88]
 14156: 95 11 a0 00              sp = sp + 0xa0
 14160: 32 00                    ret
      :                          @1064
 14162: 51 08 9a 00              jump @1068 if a1 == 0
      :                          @1065
 14166: 33 0a ff                 a3 = 0xffffffffffffffff
 14169: 33 09 20 83 b8 ed        a2 = 0xffffffffedb88320
 14175: 01                       fallthrough
      :                          @1066
 14176: 7c 7b                    a4 = u8 [a0]
 14178: d3 ba 0a                 a3 = a3 ^ a4
 14181: 97 ab 3f                 a4 = a3 << 0x3f
 14184: 99 bb 3f                 a4 = a4 >>a 0x3f
 14187: 8b aa 01                 i32 a3 = a3 >> 0x1
 14190: d2 9b 0b                 a4 = a4 & a2
 14193: d3 ba 0a                 a3 = a3 ^ a4
 14196: 97 ab 3f                 a4 = a3 << 0x3f
 14199: 99 bb 3f                 a4 = a4 >>a 0x3f
 14202: 8b aa 01                 i32 a3 = a3 >> 0x1
 14205: d2 9b 0b                 a4 = a4 & a2
 14208: d3 ba 0a                 a3 = a3 ^ a4
 14211: 97 ab 3f                 a4 = a3 << 0x3f
 14214: 99 bb 3f                 a4 = a4 >>a 0x3f
 14217: 8b aa 01                 i32 a3 = a3 >> 0x1
 14220: d2 9b 0b                 a4 = a4 & a2
 14223: d3 ba 0a                 a3 = a3 ^ a4
 14226: 97 ab 3f                 a4 = a3 << 0x3f
 14229: 99 bb 3f                 a4 = a4 >>a 0x3f
 14232: 8b aa 01                 i32 a3 = a3 >> 0x1
 14235: d2 9b 0b                 a4 = a4 & a2
 14238: d3 ba 0a                 a3 = a3 ^ a4
 14241: 97 ab 3f                 a4 = a3 << 0x3f
 14244: 99 bb 3f                 a4 = a4 >>a 0x3f
 14247: 8b aa 01                 i32 a3 = a3 >> 0x1
 14250: d2 9b 0b                 a4 = a4 & a2
 14253: d3 ba 0a                 a3 = a3 ^ a4
 14256: 97 ab 3f                 a4 = a3 << 0x3f
 14259: 99 bb 3f                 a4 = a4 >>a 0x3f
 14262: 8b aa 01                 i32 a3 = a3 >> 0x1
 14265: d2 9b 0b                 a4 = a4 & a2
 14268: d3 ba 0a                 a3 = a3 ^ a4
 14271: 97 ab 3f                 a4 = a3 << 0x3f
 14274: 99 bb 3f                 a4 = a4 >>a 0x3f
 14277: 8b aa 01                 i32 a3 = a3 >> 0x1
 14280: d2 9b 0b                 a4 = a4 & a2
 14283: d3 ba 0a                 a3 = a3 ^ a4
 14286: 97 ab 3f                 a4 = a3 << 0x3f
 14289: 99 bb 3f                 a4 = a4 >>a 0x3f
 14292: 8b aa 01                 i32 a3 = a3 >> 0x1
 14295: d2 9b 0b                 a4 = a4 & a2
 14298: d3 ba 0a                 a3 = a3 ^ a4
 14301: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 14304: 95 77 01                 a0 = a0 + 0x1
 14307: 52 08 7d ff              jump @1066 if a1 != 0
      :                          @1067
 14311: 85 a7 ff                 a0 = a3 ^ 0xffffffffffffffff
 14314: 32 00                    ret
      :                          @1068
 14316: 33 07                    a0 = 0
 14318: 28 12 59                 jump @2357
      :                          @1069
 14321: 84 78 01                 a1 = a0 & 0x1
 14324: 52 08 1a                 jump @1074 if a1 != 0
      :                          @1070
 14327: 64 79                    a2 = a0
 14329: 01                       fallthrough
      :                          @1071
 14330: 64 98                    a1 = a2
 14332: 84 9a 01                 a3 = a2 & 0x1
 14335: 98 99 01                 a2 = a2 >> 0x1
 14338: 51 0a f8                 jump @1071 if a3 == 0
      :                          @1072
 14341: 98 77 01                 a0 = a0 >> 0x1
 14344: 53 18 09 0c              jump @1075 if a1 <u 9
      :                          @1073
 14348: 28 1b                    jump @1078
      :                          @1074
 14350: 64 78                    a1 = a0
 14352: 55 17 09 17              jump @1078 if a0 >=u 9
      :                          @1075
 14356: 33 09 01                 a2 = 0x1
 14359: ae 89 0e                 jump @1077 if a2 >=u a1
      :                          @1076
 14362: cb 87 07                 a0 = a0 /u a1
 14365: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 14368: ca 87 07                 a0 = a0 * a1
 14371: 32 00                    ret
      :                          @1077
 14373: 32 00                    ret
      :                          @1078
 14375: 33 09 03                 a2 = 0x3
 14378: 28 0b                    jump @1080
      :                          @1079
 14380: 95 99 02                 a2 = a2 + 0x2
 14383: ca 99 0a                 a3 = a2 * a2
 14386: ac a8 e2                 jump @1075 if a1 <u a3
      :                          @1080
 14389: 51 09 1e                 jump @1085 if a2 == 0
      :                          @1081
 14392: cd 98 0a                 a3 = a1 %u a2
 14395: 52 0a f1                 jump @1079 if a3 != 0
      :                          @1082
 14398: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 14401: 01                       fallthrough
      :                          @1083
 14402: cb 98 08                 a1 = a1 /u a2
 14405: cd 98 0b                 a4 = a1 %u a2
 14408: 51 0b fa                 jump @1083 if a4 == 0
      :                          @1084
 14411: cb 97 07                 a0 = a0 /u a2
 14414: ca a7 07                 a0 = a0 * a3
 14417: 28 db                    jump @1079
      :                          @1085
 14419: 00                       trap
      :                          @1086
 14420: 33 02 01                 t0 = 0x1
 14423: 55 17 04 16              jump @1089 if a0 >=u 4
      :                          @1087
 14427: 33 09 01                 a2 = 0x1
 14430: 01                       fallthrough
      :                          @1088
 14431: 88 7a 02                 a3 = a0 <u 0x2
 14434: 95 77 01                 a0 = a0 + 0x1
 14437: da a7 02                 t0 = a0 if a3 == 0
 14440: ca 92 07                 a0 = t0 * a2
 14443: 32 00                    ret
      :                          @1089
 14445: 33 0a 02                 a3 = 0x2
 14448: 33 09 01                 a2 = 0x1
 14451: 28 14                    jump @1091
      :                          @1090
 14453: 95 a8 fe                 a1 = a3 + 0xfffffffffffffffe
 14456: 88 88 01                 a1 = a1 <u 0x1
 14459: c9 8a 0a                 a3 = a3 - a1
 14462: 95 aa 02                 a3 = a3 + 0x2
 14465: ca aa 08                 a1 = a3 * a3
 14468: ac 87 db                 jump @1088 if a0 <u a1
      :                          @1091
 14471: 51 0a 24                 jump @1096 if a3 == 0
      :                          @1092
 14474: cd a7 0b                 a4 = a0 %u a3
 14477: 52 0b e8                 jump @1090 if a4 != 0
      :                          @1093
 14480: 33 0b 01                 a4 = 0x1
 14483: 33 0c 01                 a5 = 0x1
 14486: 01                       fallthrough
      :                          @1094
 14487: cb a7 07                 a0 = a0 /u a3
 14490: ca ac 0c                 a5 = a5 * a3
 14493: cd a7 08                 a1 = a0 %u a3
 14496: c8 cb 0b                 a4 = a4 + a5
 14499: 51 08 f4                 jump @1094 if a1 == 0
      :                          @1095
 14502: ca 9b 09                 a2 = a4 * a2
 14505: 28 cc                    jump @1090
      :                          @1096
 14507: 00                       trap
      :                          @1097
 14508: 33 09 04                 a2 = 0x4
 14511: 33 08 01                 a1 = 0x1
 14514: ae 97 0e                 jump @1099 if a0 >=u a2
      :                          @1098
 14517: 88 77 02                 a0 = a0 <u 0x2
 14520: 85 77 01                 a0 = a0 ^ 0x1
 14523: cf 78 07                 a0 = a1 << a0
 14526: 32 00                    ret
      :                          @1099
 14528: 33 09 02                 a2 = 0x2
 14531: 33 08 01                 a1 = 0x1
 14534: 28 14                    jump @1101
      :                          @1100
 14536: 95 9a fe                 a3 = a2 + 0xfffffffffffffffe
 14539: 88 aa 01                 a3 = a3 <u 0x1
 14542: c9 a9 09                 a2 = a2 - a3
 14545: 95 99 02                 a2 = a2 + 0x2
 14548: ca 99 0a                 a3 = a2 * a2
 14551: ac a7 de                 jump @1098 if a0 <u a3
      :                          @1101
 14554: 51 09 21                 jump @1106 if a2 == 0
      :                          @1102
 14557: cd 97 0a                 a3 = a0 %u a2
 14560: 52 0a e8                 jump @1100 if a3 != 0
      :                          @1103
 14563: 33 0a ff                 a3 = 0xffffffffffffffff
 14566: 01                       fallthrough
      :                          @1104
 14567: cb 97 07                 a0 = a0 /u a2
 14570: cd 97 0b                 a4 = a0 %u a2
 14573: 95 aa 01                 a3 = a3 + 0x1
 14576: 51 0b f7                 jump @1104 if a4 == 0
      :                          @1105
 14579: 95 aa 02                 a3 = a3 + 0x2
 14582: ca 8a 08                 a1 = a3 * a1
 14585: 28 cf                    jump @1100
      :                          @1106
 14587: 00                       trap
      :                          @1107
 14588: 33 08 01                 a1 = 0x1
 14591: 55 17 04 13              jump @1111 if a0 >=u 4
      :                          @1108
 14595: 64 7a                    a3 = a0
 14597: 01                       fallthrough
      :                          @1109
 14598: 88 a9 02                 a2 = a3 <u 0x2
 14601: 9a 87                    a0 = -a1
 14603: db 98 07                 a0 = a1 if a2 != 0
 14606: 32 00                    ret
      :                          @1110
 14608: 32 00                    ret
      :                          @1111
 14610: 33 09 02                 a2 = 0x2
 14613: 33 08 01                 a1 = 0x1
 14616: 28 17                    jump @1114
      :                          @1112
 14618: 64 7a                    a3 = a0
 14620: 01                       fallthrough
      :                          @1113
 14621: 95 9b fe                 a4 = a2 + 0xfffffffffffffffe
 14624: 88 bb 01                 a4 = a4 <u 0x1
 14627: c9 b9 09                 a2 = a2 - a4
 14630: 95 99 02                 a2 = a2 + 0x2
 14633: ca 99 0b                 a4 = a2 * a2
 14636: ac ba da                 jump @1109 if a3 <u a4
      :                          @1114
 14639: 51 09 18                 jump @1118 if a2 == 0
      :                          @1115
 14642: cb 97 0a                 a3 = a0 /u a2
 14645: ca 9a 0b                 a4 = a3 * a2
 14648: ab b7 e2                 jump @1112 if a0 != a4
      :                          @1116
 14651: cd 9a 07                 a0 = a3 %u a2
 14654: 51 07 d2                 jump @1110 if a0 == 0
      :                          @1117
 14657: 9a 88                    a1 = -a1
 14659: 64 a7                    a0 = a3
 14661: 28 d8                    jump @1113
      :                          @1118
 14663: 00                       trap
      :                          @1119
 14664: 82 9a                    a3 = u64 [a2]
 14666: c8 6a 05                 s0 = a3 + s1
 14669: ac a5 fa 01              jump @1164 if s0 <u a3
      :                          @1120
 14673: 95 5b 01                 a4 = s0 + 0x1
 14676: 88 bc 01                 a5 = a4 <u 0x1
 14679: d8 b2 0b                 a4 = t0 <u a4
 14682: d4 cb 0b                 a4 = a4 | a5
 14685: 52 0b ea 01              jump @1164 if a4 != 0
      :                          @1121
 14689: 82 9b                    a4 = u64 [a2]
 14691: ab ab e5                 jump @1119 if a4 != a3
      :                          @1122
 14694: 7b 95                    u64 [a2] = s0
 14696: 33 0c                    a5 = 0
 14698: 7b 18 10                 u64 [sp + 0x10] = a1
 14701: 7b 17                    u64 [sp] = a0
 14703: 33 07 10 01 03           a0 = 0x30110
 14708: 7b 17 20                 u64 [sp + 0x20] = a0
 14711: 95 78 00 00 10           a1 = a0 + 0x100000
 14716: c9 58 07                 a0 = a1 - s0
 14719: 7b 17 18                 u64 [sp + 0x18] = a0
 14722: 33 08                    a1 = 0
 14724: 64 69                    a2 = s1
 14726: 50 20 26 01 fe 79        ra = 294, jump @2893
      :                          @1123 [@dyn 147]
 14732: 33 03 00 00 10           t1 = 0x100000
 14737: 82 12 20                 t0 = u64 [sp + 0x20]
 14740: 49 11 28                 u64 [sp + 40] = 0
 14743: 49 11 30 08              u64 [sp + 48] = 0x8
 14747: 49 11 38                 u64 [sp + 56] = 0
 14750: 7b 16 08                 u64 [sp + 0x8] = s1
 14753: 97 69 02                 a2 = s1 << 0x2
 14756: c8 32 07                 a0 = t0 + t1
 14759: 01                       fallthrough
      :                          @1124
 14760: 82 78                    a1 = u64 [a0]
 14762: c8 98 0a                 a3 = a1 + a2
 14765: ac 8a 9b 01              jump @1165 if a3 <u a1
      :                          @1125
 14769: 95 ab 04                 a4 = a3 + 0x4
 14772: d8 ab 0c                 a5 = a4 <u a3
 14775: d8 b3 0b                 a4 = t1 <u a4
 14778: d4 cb 0b                 a4 = a4 | a5
 14781: 52 0b 8b 01              jump @1165 if a4 != 0
      :                          @1126
 14785: c9 a2 0b                 a4 = t0 - a3
 14788: c8 3b 0b                 a4 = a4 + t1
 14791: 84 bc 03                 a5 = a4 & 0x3
 14794: c8 ca 0a                 a3 = a3 + a5
 14797: 01                       fallthrough
      :                          @1127
 14798: 82 76                    s1 = u64 [a0]
 14800: ab 86 d8                 jump @1124 if s1 != a1
      :                          @1128
 14803: 7b 7a                    u64 [a0] = a3
 14805: c9 cb 05                 s0 = a4 - a5
 14808: 64 57                    a0 = s0
 14810: 33 08                    a1 = 0
 14812: 50 20 28 01 a8 79        ra = 296, jump @2893
      :                          @1129 [@dyn 148]
 14818: 64 50                    ra = s0
 14820: 33 05 02                 s0 = 0x2
 14823: 48 10 04 01              u32 [ra + 4] = 0x1
 14827: 82 14 10                 t2 = u64 [sp + 0x10]
 14830: ae 54 20                 jump @1131 if t2 >=u s0
      :                          @1130
 14833: 82 16 08                 s1 = u64 [sp + 0x8]
 14836: 82 17                    a0 = u64 [sp]
 14838: 7b 76                    u64 [a0] = s1
 14840: 7b 70 08                 u64 [a0 + 0x8] = ra
 14843: 7b 76 10                 u64 [a0 + 0x10] = s1
 14846: 82 13 18                 t1 = u64 [sp + 0x18]
 14849: 33 07 10 01 03           a0 = 0x30110
 14854: 95 77 00 00 10           a0 = a0 + 0x100000
 14859: 28 16 01                 jump @1157
      :                          @1131
 14862: 33 08                    a1 = 0
 14864: 49 11 20 08              u64 [sp + 32] = 0x8
 14868: 82 13 18                 t1 = u64 [sp + 0x18]
 14871: 28 1e                    jump @1134
      :                          @1132
 14873: 97 66 02                 s1 = s1 << 0x2
 14876: c8 06 06                 s1 = s1 + ra
 14879: 48 06                    u32 [s1 + 0] = 0
 14881: 01                       fallthrough
      :                          @1133
 14882: d8 45 07                 a0 = s0 <u t2
 14885: c8 75 05                 s0 = s0 + a0
 14888: d8 54 09                 a2 = t2 <u s0
 14891: 85 99 01                 a2 = a2 ^ 0x1
 14894: d2 97 07                 a0 = a0 & a2
 14897: 51 07 9a 00              jump @1149 if a0 == 0
      :                          @1134
 14901: ac 54 11 01              jump @1163 if t2 <u s0
      :                          @1135
 14905: c8 53 07                 a0 = t1 + s0
 14908: 7c 77                    a0 = u8 [a0]
 14910: 51 07 08                 jump @1138 if a0 == 0
      :                          @1136
 14913: 52 08 4a                 jump @1143 if a1 != 0
      :                          @1137
 14916: 28 de                    jump @1133
      :                          @1138
 14918: 82 17 28                 a0 = u64 [sp + 0x28]
 14921: ab 78 1e                 jump @1141 if a1 != a0
      :                          @1139
 14924: 95 17 28                 a0 = sp + 0x28
 14927: 64 06                    s1 = ra
 14929: 50 20 2a 01 66 e8        ra = 298, jump @708
      :                          @1140 [@dyn 149]
 14935: 64 60                    ra = s1
 14937: 82 14 10                 t2 = u64 [sp + 0x10]
 14940: 82 13 18                 t1 = u64 [sp + 0x18]
 14943: 82 18 38                 a1 = u64 [sp + 0x38]
 14946: 82 19 30                 a2 = u64 [sp + 0x30]
 14949: 28 06                    jump @1142
      :                          @1141
 14951: 82 19 20                 a2 = u64 [sp + 0x20]
 14954: 01                       fallthrough
      :                          @1142
 14955: 97 87 03                 a0 = a1 << 0x3
 14958: c8 97 07                 a0 = a0 + a2
 14961: 7b 75                    u64 [a0] = s0
 14963: 95 88 01                 a1 = a1 + 0x1
 14966: 7b 18 38                 u64 [sp + 0x38] = a1
 14969: 82 17 30                 a0 = u64 [sp + 0x30]
 14972: 7b 17 20                 u64 [sp + 0x20] = a0
 14975: 97 57 02                 a0 = s0 << 0x2
 14978: c8 07 07                 a0 = a0 + ra
 14981: 48 07 ff                 u32 [a0 + 0] = 0xffffffffffffffff
 14984: 51 08 9a                 jump @1133 if a1 == 0
      :                          @1143
 14987: 97 59 02                 a2 = s0 << 0x2
 14990: c8 09 09                 a2 = a2 + ra
 14993: 97 8a 03                 a3 = a1 << 0x3
 14996: 82 1b 20                 a4 = u64 [sp + 0x20]
 14999: 01                       fallthrough
      :                          @1144
 15000: 82 b7                    a0 = u64 [a4]
 15002: ca 57 06                 s1 = a0 * s0
 15005: ac 64 85                 jump @1133 if t2 <u s1
      :                          @1145
 15008: c8 63 0c                 a5 = t1 + s1
 15011: 33 02 01                 t0 = 0x1
 15014: 78 c2                    u8 [a5] = t0
 15016: 51 07 9d 00              jump @1162 if a0 == 0
      :                          @1146
 15020: cd 75 07                 a0 = s0 %u a0
 15023: 51 07 6a ff              jump @1132 if a0 == 0
      :                          @1147
 15027: 81 97                    a0 = i32 [a2]
 15029: 95 bb 08                 a4 = a4 + 0x8
 15032: 97 66 02                 s1 = s1 << 0x2
 15035: c8 06 06                 s1 = s1 + ra
 15038: 8d 77                    i32 a0 = -a0
 15040: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 15043: 7a 67                    u32 [s1] = a0
 15045: 52 0a d3                 jump @1144 if a3 != 0
      :                          @1148
 15048: 28 5a ff                 jump @1133
      :                          @1149
 15051: 82 18 28                 a1 = u64 [sp + 0x28]
 15054: 82 16 08                 s1 = u64 [sp + 0x8]
 15057: 82 17                    a0 = u64 [sp]
 15059: 7b 76                    u64 [a0] = s1
 15061: 7b 70 08                 u64 [a0 + 0x8] = ra
 15064: 7b 76 10                 u64 [a0 + 0x10] = s1
 15067: 82 15 20                 s0 = u64 [sp + 0x20]
 15070: 51 08 38                 jump @1156 if a1 == 0
      :                          @1150
 15073: 56 38 00 00 02 35        jump @1156 if a1 >u 131072
      :                          @1151
 15079: 97 88 03                 a1 = a1 << 0x3
 15082: 33 09 10 01 03           a2 = 0x30110
 15087: 95 99 00 00 10           a2 = a2 + 0x100000
 15092: 01                       fallthrough
      :                          @1152
 15093: 82 97                    a0 = u64 [a2]
 15095: c9 79 0a                 a3 = a2 - a0
 15098: ab 5a 1c                 jump @1156 if a3 != s0
      :                          @1153
 15101: c9 87 0a                 a3 = a0 - a1
 15104: 01                       fallthrough
      :                          @1154
 15105: 82 9b                    a4 = u64 [a2]
 15107: ab 7b f2                 jump @1152 if a4 != a0
      :                          @1155
 15110: 7b 9a                    u64 [a2] = a3
 15112: 33 0c                    a5 = 0
 15114: 33 07 10 01 03           a0 = 0x30110
 15119: 95 77 00 00 10           a0 = a0 + 0x100000
 15124: 28 0d                    jump @1157
      :                          @1156
 15126: 33 07 10 01 03           a0 = 0x30110
 15131: 95 77 00 00 10           a0 = a0 + 0x100000
 15136: 01                       fallthrough
      :                          @1157
 15137: 82 78                    a1 = u64 [a0]
 15139: c9 87 09                 a2 = a0 - a1
 15142: ab 39 11                 jump @1161 if a2 != t1
      :                          @1158
 15145: c9 68 09                 a2 = a1 - s1
 15148: 01                       fallthrough
      :                          @1159
 15149: 82 7a                    a3 = u64 [a0]
 15151: ab 8a f2                 jump @1157 if a3 != a1
      :                          @1160
 15154: 7b 79                    u64 [a0] = a2
 15156: 33 0b                    a4 = 0
 15158: 01                       fallthrough
      :                          @1161
 15159: 82 10 50                 ra = u64 [sp + 0x50]
 15162: 82 15 48                 s0 = u64 [sp + 0x48]
 15165: 82 16 40                 s1 = u64 [sp + 0x40]
 15168: 95 11 58                 sp = sp + 0x58
 15171: 32 00                    ret
      :                          @1162
 15173: 00                       trap
      :                          @1163
 15174: 00                       trap
      :                          @1164
 15175: 00                       trap
      :                          @1165
 15176: 00                       trap
      :                          @1166
 15177: c8 98 08                 a1 = a1 + a2
 15180: 01                       fallthrough
      :                          @1167
 15181: 95 99 01                 a2 = a2 + 0x1
 15184: ca 99 0a                 a3 = a2 * a2
 15187: ac a7 1a                 jump @1172 if a0 <u a3
      :                          @1168
 15190: 51 09 1b                 jump @1173 if a2 == 0
      :                          @1169
 15193: cb 97 0a                 a3 = a0 /u a2
 15196: ca 9a 0b                 a4 = a3 * a2
 15199: ab 7b ee                 jump @1167 if a4 != a0
      :                          @1170
 15202: aa a9 e7                 jump @1166 if a2 == a3
      :                          @1171
 15205: c8 98 08                 a1 = a1 + a2
 15208: c8 a8 08                 a1 = a1 + a3
 15211: 28 e2                    jump @1167
      :                          @1172
 15213: 64 87                    a0 = a1
 15215: 32 00                    ret
      :                          @1173
 15217: 00                       trap
      :                          @1174
 15218: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 15228: d3 79 09                 a2 = a2 ^ a0
 15231: e1 89 09                 a2 = a2 | ~a1
 15234: 51 09 57                 jump @1181 if a2 == 0
      :                          @1175
 15237: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 15240: 33 0b 03                 a4 = 0x3
 15243: 8e 9a                    a3 = a2 >u 0
 15245: ae b8 16                 jump @1177 if a1 >=u a4
      :                          @1176
 15248: 95 a8 ff                 a1 = a3 + 0xffffffffffffffff
 15251: d3 a9 09                 a2 = a2 ^ a3
 15254: 8e 97                    a0 = a2 >u 0
 15256: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 15259: 33 07 01                 a0 = 0x1
 15262: db 89 07                 a0 = a2 if a1 != 0
 15265: 32 00                    ret
      :                          @1177
 15267: 98 9b 3f                 a4 = a2 >> 0x3f
 15270: c8 9b 0b                 a4 = a4 + a2
 15273: 99 bb 01                 a4 = a4 >>a 0x1
 15276: ce 87 02                 t0 = a0 %s a1
 15279: 9a 8c                    a5 = -a1
 15281: e3 c8 0c                 a5 = maxs(a1, a5)
 15284: 99 27 3f                 a0 = t0 >>a 0x3f
 15287: d2 c7 07                 a0 = a0 & a5
 15290: c8 27 07                 a0 = a0 + t0
 15293: 28 0b                    jump @1179
      :                          @1178
 15295: 98 bb 01                 a4 = a4 >> 0x1
 15298: ca 77 07                 a0 = a0 * a0
 15301: 51 0b cb                 jump @1176 if a4 == 0
      :                          @1179
 15304: 84 bc 01                 a5 = a4 & 0x1
 15307: cd 87 07                 a0 = a0 %u a1
 15310: 51 0c f1                 jump @1178 if a5 == 0
      :                          @1180
 15313: ca a7 0a                 a3 = a0 * a3
 15316: cd 8a 0a                 a3 = a3 %u a1
 15319: 28 e8                    jump @1178
      :                          @1181
 15321: 00                       trap
      :                          @1182
 15322: 51 07 eb 00              jump @1200 if a0 == 0
      :                          @1183
 15326: 95 82 ff                 t0 = a1 + 0xffffffffffffffff
 15329: 98 24 01                 t2 = t0 >> 0x1
 15332: 33 03 01                 t1 = 0x1
 15335: 64 7b                    a4 = a0
 15337: 64 4a                    a3 = t2
 15339: 28 0b                    jump @1185
      :                          @1184
 15341: 98 aa 01                 a3 = a3 >> 0x1
 15344: ca 99 0b                 a4 = a2 * a2
 15347: 51 0a 14                 jump @1187 if a3 == 0
      :                          @1185
 15350: 84 ac 01                 a5 = a3 & 0x1
 15353: cd 8b 09                 a2 = a4 %u a1
 15356: 51 0c f1                 jump @1184 if a5 == 0
      :                          @1186
 15359: ca 39 0b                 a4 = a2 * t1
 15362: cd 8b 03                 t1 = a4 %u a1
 15365: 28 e8                    jump @1184
      :                          @1187
 15367: 33 0a 01                 a3 = 0x1
 15370: ab a3 c3 00              jump @1201 if t1 != a3
      :                          @1188
 15374: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 15377: 7b 15 08                 u64 [sp + 0x8] = s0
 15380: 7b 16                    u64 [sp] = s1
 15382: cd 87 07                 a0 = a0 %u a1
 15385: 01                       fallthrough
      :                          @1189
 15386: ca aa 09                 a2 = a3 * a3
 15389: c8 89 09                 a2 = a2 + a1
 15392: c9 79 09                 a2 = a2 - a0
 15395: cd 89 03                 t1 = a2 %u a1
 15398: 33 0c 01                 a5 = 0x1
 15401: 64 39                    a2 = t1
 15403: 64 4b                    a4 = t2
 15405: 28 0b                    jump @1191
      :                          @1190
 15407: 98 bb 01                 a4 = a4 >> 0x1
 15410: ca 99 09                 a2 = a2 * a2
 15413: 51 0b 14                 jump @1193 if a4 == 0
      :                          @1191
 15416: 84 b5 01                 s0 = a4 & 0x1
 15419: cd 89 09                 a2 = a2 %u a1
 15422: 51 05 f1                 jump @1190 if s0 == 0
      :                          @1192
 15425: ca c9 0c                 a5 = a2 * a5
 15428: cd 8c 0c                 a5 = a5 %u a1
 15431: 28 e8                    jump @1190
      :                          @1193
 15433: aa 2c 0c                 jump @1196 if a5 == t0
      :                          @1194
 15436: 95 aa 01                 a3 = a3 + 0x1
 15439: ab 8a cb                 jump @1189 if a3 != a1
      :                          @1195
 15442: 33 0a                    a3 = 0
 15444: 01                       fallthrough
      :                          @1196
 15445: 33 0c                    a5 = 0
 15447: 95 87 01                 a0 = a1 + 0x1
 15450: 33 0b 01                 a4 = 0x1
 15453: 33 02 04                 t0 = 0x4
 15456: 33 04 01                 t2 = 0x1
 15459: 28 2e                    jump @1198
      :                          @1197
 15461: 98 97 01                 a0 = a2 >> 0x1
 15464: ca aa 05                 s0 = a3 * a3
 15467: cd 85 05                 s0 = s0 %u a1
 15470: ca bb 06                 s1 = a4 * a4
 15473: cd 86 06                 s1 = s1 %u a1
 15476: ca 36 06                 s1 = s1 * t1
 15479: cd 86 06                 s1 = s1 %u a1
 15482: c8 65 05                 s0 = s0 + s1
 15485: ca ba 0a                 a3 = a3 * a4
 15488: cd 85 05                 s0 = s0 %u a1
 15491: cd 8a 0a                 a3 = a3 %u a1
 15494: 97 aa 01                 a3 = a3 << 0x1
 15497: cd 8a 0b                 a4 = a3 %u a1
 15500: 64 5a                    a3 = s0
 15502: ac 29 45                 jump @1202 if a2 <u t0
      :                          @1198
 15505: 64 79                    a2 = a0
 15507: 84 77 02                 a0 = a0 & 0x2
 15510: 51 07 cf                 jump @1197 if a0 == 0
      :                          @1199
 15513: ca 4a 07                 a0 = a3 * t2
 15516: cd 87 07                 a0 = a0 %u a1
 15519: ca bc 05                 s0 = a5 * a4
 15522: cd 85 05                 s0 = s0 %u a1
 15525: ca 35 05                 s0 = s0 * t1
 15528: cd 85 05                 s0 = s0 %u a1
 15531: c8 57 07                 a0 = a0 + s0
 15534: ca b4 05                 s0 = t2 * a4
 15537: cd 87 04                 t2 = a0 %u a1
 15540: cd 85 07                 a0 = s0 %u a1
 15543: ca ca 0c                 a5 = a3 * a5
 15546: cd 8c 0c                 a5 = a5 %u a1
 15549: c8 c7 07                 a0 = a0 + a5
 15552: cd 87 0c                 a5 = a0 %u a1
 15555: 28 a2                    jump @1197
      :                          @1200
 15557: 33 07 01                 a0 = 0x1
 15560: 33 08                    a1 = 0
 15562: 28 6a 5c                 jump @2456
      :                          @1201
 15565: 33 07                    a0 = 0
 15567: 64 48                    a1 = t2
 15569: 32 00                    ret
      :                          @1202
 15571: 33 07 01                 a0 = 0x1
 15574: 82 15 08                 s0 = u64 [sp + 0x8]
 15577: 82 16                    s1 = u64 [sp]
 15579: 95 11 10                 sp = sp + 0x10
 15582: 64 48                    a1 = t2
 15584: 32 00                    ret
      :                          @1203
 15586: 51 17 02 2d              jump @1208 if a0 == 2
      :                          @1204
 15590: 84 78 3f                 a1 = a0 & 0x3f
 15593: 51 08 2c                 jump @1209 if a1 == 0
      :                          @1205
 15596: 9b 78 ff                 a1 = 0xffffffffffffffff << a0
 15599: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 15602: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 15605: 33 09 04                 a2 = 0x4
 15608: 01                       fallthrough
      :                          @1206
 15609: ca 99 09                 a2 = a2 * a2
 15612: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 15615: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 15618: cd 89 09                 a2 = a2 %u a1
 15621: 52 07 f4                 jump @1206 if a0 != 0
      :                          @1207
 15624: 88 98 01                 a1 = a2 <u 0x1
 15627: 64 87                    a0 = a1
 15629: 32 00                    ret
      :                          @1208
 15631: 33 07 01                 a0 = 0x1
 15634: 28 96 30                 jump @2047
      :                          @1209
 15637: 00                       trap
      :                          @1210
 15638: 51 17 01 14              jump @1213 if a0 == 1
      :                          @1211
 15642: 52 07 1e                 jump @1214 if a0 != 0
      :                          @1212
 15645: 33 07 02                 a0 = 0x2
 15648: cd 97 03                 t1 = a0 %u a2
 15651: 33 07                    a0 = 0
 15653: 64 38                    a1 = t1
 15655: 28 ab 31                 jump @2060
      :                          @1213
 15658: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 15661: 8e 93                    t1 = a2 >u 0
 15663: 64 3b                    a4 = t1
 15665: 64 b7                    a0 = a4
 15667: 64 38                    a1 = t1
 15669: 28 9d 31                 jump @2060
      :                          @1214
 15672: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 15675: 7b 10 18                 u64 [sp + 0x18] = ra
 15678: 7b 15 10                 u64 [sp + 0x10] = s0
 15681: 7b 16 08                 u64 [sp + 0x8] = s1
 15684: 33 04                    t2 = 0
 15686: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 15689: 8e a3                    t1 = a3 >u 0
 15691: 33 0c 02                 a5 = 0x2
 15694: cd 9c 05                 s0 = a5 %u a2
 15697: 9a 9a                    a3 = -a2
 15699: e3 a9 02                 t0 = maxs(a2, a3)
 15702: 64 3a                    a3 = t1
 15704: 01                       fallthrough
      :                          @1215
 15705: ca 85 0b                 a4 = s0 * a1
 15708: d8 7c 05                 s0 = a5 <u a0
 15711: 85 50 01                 ra = s0 ^ 0x1
 15714: c8 5c 0c                 a5 = a5 + s0
 15717: ca 84 05                 s0 = t2 * a1
 15720: c9 5a 05                 s0 = a3 - s0
 15723: c9 b3 06                 s1 = t1 - a4
 15726: ce 95 05                 s0 = s0 %s a2
 15729: 99 5b 3f                 a4 = s0 >>a 0x3f
 15732: d2 2b 0b                 a4 = a4 & t0
 15735: c8 5b 0b                 a4 = a4 + s0
 15738: ce 96 04                 t2 = s1 %s a2
 15741: d8 c7 05                 s0 = a0 <u a5
 15744: d4 50 00                 ra = ra | s0
 15747: 99 46 3f                 s1 = t2 >>a 0x3f
 15750: d2 26 06                 s1 = s1 & t0
 15753: 64 35                    s0 = t1
 15755: c8 46 03                 t1 = s1 + t2
 15758: 64 a4                    t2 = a3
 15760: 64 ba                    a3 = a4
 15762: 51 00 c7                 jump @1215 if ra == 0
      :                          @1216
 15765: 82 10 18                 ra = u64 [sp + 0x18]
 15768: 82 15 10                 s0 = u64 [sp + 0x10]
 15771: 82 16 08                 s1 = u64 [sp + 0x8]
 15774: 95 11 20                 sp = sp + 0x20
 15777: 64 b7                    a0 = a4
 15779: 64 38                    a1 = t1
 15781: 32 00                    ret
      :                          @1217
 15783: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 15786: 7b 10 18                 u64 [sp + 0x18] = ra
 15789: 7b 15 10                 u64 [sp + 0x10] = s0
 15792: 7b 16 08                 u64 [sp + 0x8] = s1
 15795: 95 74 ff                 t2 = a0 + 0xffffffffffffffff
 15798: 84 48 01                 a1 = t2 & 0x1
 15801: 52 08 81 00              jump @1232 if a1 != 0
      :                          @1218
 15805: 33 09 10 01 01           a2 = 0x10110
 15810: 95 93 38                 t1 = a2 + 0x38
 15813: 33 02 01                 t0 = 0x1
 15816: 28 06                    jump @1220
      :                          @1219
 15818: aa 39 27 02              jump @1275 if a2 == t1
      :                          @1220
 15822: 82 9a                    a3 = u64 [a2]
 15824: cd 7a 08                 a1 = a3 %u a0
 15827: 51 08 1e 02              jump @1275 if a1 == 0
      :                          @1221
 15831: 33 0c                    a5 = 0
 15833: 95 99 08                 a2 = a2 + 0x8
 15836: 33 05 01                 s0 = 0x1
 15839: 64 48                    a1 = t2
 15841: 01                       fallthrough
      :                          @1222
 15842: 64 5b                    a4 = s0
 15844: 84 86 02                 s1 = a1 & 0x2
 15847: 98 88 01                 a1 = a1 >> 0x1
 15850: 83 cc 01                 i32 a5 = a5 + 0x1
 15853: 83 55 01                 i32 s0 = s0 + 0x1
 15856: 51 06 f2                 jump @1222 if s1 == 0
      :                          @1223
 15859: 33 0c 01                 a5 = 0x1
 15862: 28 0b                    jump @1225
      :                          @1224
 15864: 98 88 01                 a1 = a1 >> 0x1
 15867: ca aa 0a                 a3 = a3 * a3
 15870: 51 08 14                 jump @1227 if a1 == 0
      :                          @1225
 15873: 84 85 01                 s0 = a1 & 0x1
 15876: cd 7a 0a                 a3 = a3 %u a0
 15879: 51 05 f1                 jump @1224 if s0 == 0
      :                          @1226
 15882: ca ca 0c                 a5 = a3 * a5
 15885: cd 7c 0c                 a5 = a5 %u a0
 15888: 28 e8                    jump @1224
      :                          @1227
 15890: 95 c8 ff                 a1 = a5 + 0xffffffffffffffff
 15893: 88 88 01                 a1 = a1 <u 0x1
 15896: d3 4c 0a                 a3 = a5 ^ t2
 15899: 88 aa 01                 a3 = a3 <u 0x1
 15902: d4 a8 08                 a1 = a1 | a3
 15905: 52 08 a9                 jump @1219 if a1 != 0
      :                          @1228
 15908: e3 2b 08                 a1 = maxs(a4, t0)
 15911: 01                       fallthrough
      :                          @1229
 15912: 83 88 ff                 i32 a1 = a1 + 0xffffffffffffffff
 15915: 51 08 b6 01              jump @1274 if a1 == 0
      :                          @1230
 15919: ca cc 0a                 a3 = a5 * a5
 15922: cd 7a 0c                 a5 = a3 %u a0
 15925: ab 4c f3                 jump @1229 if a5 != t2
      :                          @1231
 15928: 28 92                    jump @1219
      :                          @1232
 15930: 33 08 01                 a1 = 0x1
 15933: 33 0a 02                 a3 = 0x2
 15936: 64 49                    a2 = t2
 15938: 28 0b                    jump @1234
      :                          @1233
 15940: 98 99 01                 a2 = a2 >> 0x1
 15943: ca aa 0a                 a3 = a3 * a3
 15946: 51 09 14                 jump @1236 if a2 == 0
      :                          @1234
 15949: 84 9b 01                 a4 = a2 & 0x1
 15952: cd 7a 0a                 a3 = a3 %u a0
 15955: 51 0b f1                 jump @1233 if a4 == 0
      :                          @1235
 15958: ca 8a 08                 a1 = a3 * a1
 15961: cd 78 08                 a1 = a1 %u a0
 15964: 28 e8                    jump @1233
      :                          @1236
 15966: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 15969: 8e 99                    a2 = a2 >u 0
 15971: d3 48 08                 a1 = a1 ^ t2
 15974: 8e 88                    a1 = a1 >u 0
 15976: d2 98 08                 a1 = a1 & a2
 15979: 52 08 73 01              jump @1273 if a1 != 0
      :                          @1237
 15983: 33 0a 45 01              a3 = 0x145
 15987: cd 7a 08                 a1 = a3 %u a0
 15990: 51 08 7b 01              jump @1275 if a1 == 0
      :                          @1238
 15994: 33 08 01                 a1 = 0x1
 15997: 64 49                    a2 = t2
 15999: 28 0b                    jump @1240
      :                          @1239
 16001: 98 99 01                 a2 = a2 >> 0x1
 16004: ca aa 0a                 a3 = a3 * a3
 16007: 51 09 14                 jump @1242 if a2 == 0
      :                          @1240
 16010: 84 9b 01                 a4 = a2 & 0x1
 16013: cd 7a 0a                 a3 = a3 %u a0
 16016: 51 0b f1                 jump @1239 if a4 == 0
      :                          @1241
 16019: ca 8a 08                 a1 = a3 * a1
 16022: cd 78 08                 a1 = a1 %u a0
 16025: 28 e8                    jump @1239
      :                          @1242
 16027: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 16030: 8e 99                    a2 = a2 >u 0
 16032: d3 48 08                 a1 = a1 ^ t2
 16035: 8e 88                    a1 = a1 >u 0
 16037: d2 98 08                 a1 = a1 & a2
 16040: 52 08 36 01              jump @1273 if a1 != 0
      :                          @1243
 16044: 33 0a 9f 24              a3 = 0x249f
 16048: cd 7a 08                 a1 = a3 %u a0
 16051: 51 08 3e 01              jump @1275 if a1 == 0
      :                          @1244
 16055: 33 08 01                 a1 = 0x1
 16058: 64 49                    a2 = t2
 16060: 28 0b                    jump @1246
      :                          @1245
 16062: 98 99 01                 a2 = a2 >> 0x1
 16065: ca aa 0a                 a3 = a3 * a3
 16068: 51 09 14                 jump @1248 if a2 == 0
      :                          @1246
 16071: 84 9b 01                 a4 = a2 & 0x1
 16074: cd 7a 0a                 a3 = a3 %u a0
 16077: 51 0b f1                 jump @1245 if a4 == 0
      :                          @1247
 16080: ca 8a 08                 a1 = a3 * a1
 16083: cd 78 08                 a1 = a1 %u a0
 16086: 28 e8                    jump @1245
      :                          @1248
 16088: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 16091: 8e 99                    a2 = a2 >u 0
 16093: d3 48 08                 a1 = a1 ^ t2
 16096: 8e 88                    a1 = a1 >u 0
 16098: d2 98 08                 a1 = a1 & a2
 16101: 52 08 f9 00              jump @1273 if a1 != 0
      :                          @1249
 16105: 33 0a 12 6e              a3 = 0x6e12
 16109: cd 7a 08                 a1 = a3 %u a0
 16112: 51 08 01 01              jump @1275 if a1 == 0
      :                          @1250
 16116: 33 08 01                 a1 = 0x1
 16119: 64 49                    a2 = t2
 16121: 28 0b                    jump @1252
      :                          @1251
 16123: 98 99 01                 a2 = a2 >> 0x1
 16126: ca aa 0a                 a3 = a3 * a3
 16129: 51 09 14                 jump @1254 if a2 == 0
      :                          @1252
 16132: 84 9b 01                 a4 = a2 & 0x1
 16135: cd 7a 0a                 a3 = a3 %u a0
 16138: 51 0b f1                 jump @1251 if a4 == 0
      :                          @1253
 16141: ca 8a 08                 a1 = a3 * a1
 16144: cd 78 08                 a1 = a1 %u a0
 16147: 28 e8                    jump @1251
      :                          @1254
 16149: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 16152: 8e 99                    a2 = a2 >u 0
 16154: d3 48 08                 a1 = a1 ^ t2
 16157: 8e 88                    a1 = a1 >u 0
 16159: d2 98 08                 a1 = a1 & a2
 16162: 52 08 bc 00              jump @1273 if a1 != 0
      :                          @1255
 16166: 33 0a d7 e0 06           a3 = 0x6e0d7
 16171: cd 7a 08                 a1 = a3 %u a0
 16174: 51 08 c3 00              jump @1275 if a1 == 0
      :                          @1256
 16178: 33 08 01                 a1 = 0x1
 16181: 64 49                    a2 = t2
 16183: 28 0b                    jump @1258
      :                          @1257
 16185: 98 99 01                 a2 = a2 >> 0x1
 16188: ca aa 0a                 a3 = a3 * a3
 16191: 51 09 14                 jump @1260 if a2 == 0
      :                          @1258
 16194: 84 9b 01                 a4 = a2 & 0x1
 16197: cd 7a 0a                 a3 = a3 %u a0
 16200: 51 0b f1                 jump @1257 if a4 == 0
      :                          @1259
 16203: ca 8a 08                 a1 = a3 * a1
 16206: cd 78 08                 a1 = a1 %u a0
 16209: 28 e8                    jump @1257
      :                          @1260
 16211: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 16214: 8e 99                    a2 = a2 >u 0
 16216: d3 48 08                 a1 = a1 ^ t2
 16219: 8e 88                    a1 = a1 >u 0
 16221: d2 98 08                 a1 = a1 & a2
 16224: 52 08 7e                 jump @1273 if a1 != 0
      :                          @1261
 16227: 33 0a 18 3d 95 00        a3 = 0x953d18
 16233: cd 7a 08                 a1 = a3 %u a0
 16236: 51 08 85 00              jump @1275 if a1 == 0
      :                          @1262
 16240: 33 08 01                 a1 = 0x1
 16243: 64 49                    a2 = t2
 16245: 28 0b                    jump @1264
      :                          @1263
 16247: 98 99 01                 a2 = a2 >> 0x1
 16250: ca aa 0a                 a3 = a3 * a3
 16253: 51 09 14                 jump @1266 if a2 == 0
      :                          @1264
 16256: 84 9b 01                 a4 = a2 & 0x1
 16259: cd 7a 0a                 a3 = a3 %u a0
 16262: 51 0b f1                 jump @1263 if a4 == 0
      :                          @1265
 16265: ca 8a 08                 a1 = a3 * a1
 16268: cd 78 08                 a1 = a1 %u a0
 16271: 28 e8                    jump @1263
      :                          @1266
 16273: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 16276: 8e 99                    a2 = a2 >u 0
 16278: d3 48 08                 a1 = a1 ^ t2
 16281: 8e 88                    a1 = a1 >u 0
 16283: d2 98 08                 a1 = a1 & a2
 16286: 52 08 40                 jump @1273 if a1 != 0
      :                          @1267
 16289: 33 0a fe 91 01 6b        a3 = 0x6b0191fe
 16295: cd 7a 08                 a1 = a3 %u a0
 16298: 51 08 47                 jump @1275 if a1 == 0
      :                          @1268
 16301: 33 08 01                 a1 = 0x1
 16304: 64 49                    a2 = t2
 16306: 28 0b                    jump @1270
      :                          @1269
 16308: 98 99 01                 a2 = a2 >> 0x1
 16311: ca aa 0a                 a3 = a3 * a3
 16314: 51 09 14                 jump @1272 if a2 == 0
      :                          @1270
 16317: 84 9b 01                 a4 = a2 & 0x1
 16320: cd 7a 0a                 a3 = a3 %u a0
 16323: 51 0b f1                 jump @1269 if a4 == 0
      :                          @1271
 16326: ca 8a 08                 a1 = a3 * a1
 16329: cd 78 08                 a1 = a1 %u a0
 16332: 28 e8                    jump @1269
      :                          @1272
 16334: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 16337: 8e 99                    a2 = a2 >u 0
 16339: d3 48 08                 a1 = a1 ^ t2
 16342: 8e 88                    a1 = a1 >u 0
 16344: d2 98 08                 a1 = a1 & a2
 16347: 51 08 16                 jump @1275 if a1 == 0
      :                          @1273
 16350: 33 08                    a1 = 0
 16352: 01                       fallthrough
      :                          @1274
 16353: 64 87                    a0 = a1
 16355: 82 10 18                 ra = u64 [sp + 0x18]
 16358: 82 15 10                 s0 = u64 [sp + 0x10]
 16361: 82 16 08                 s1 = u64 [sp + 0x8]
 16364: 95 11 20                 sp = sp + 0x20
 16367: 32 00                    ret
      :                          @1275
 16369: 9a 78                    a1 = -a0
 16371: e3 87 02                 t0 = maxs(a0, a1)
 16374: 33 0b 01                 a4 = 0x1
 16377: 33 0a 05                 a3 = 0x5
 16380: 33 09 04                 a2 = 0x4
 16383: 01                       fallthrough
      :                          @1276
 16384: ce 7a 06                 s1 = a3 %s a0
 16387: 99 68 3f                 a1 = s1 >>a 0x3f
 16390: d2 28 08                 a1 = a1 & t0
 16393: c8 86 06                 s1 = s1 + a1
 16396: 64 4c                    a5 = t2
 16398: 33 08 01                 a1 = 0x1
 16401: 28 0b                    jump @1278
      :                          @1277
 16403: 98 5c 01                 a5 = s0 >> 0x1
 16406: ca 66 06                 s1 = s1 * s1
 16409: ac 95 16                 jump @1280 if s0 <u a2
      :                          @1278
 16412: 64 c5                    s0 = a5
 16414: 84 cc 02                 a5 = a5 & 0x2
 16417: cd 76 06                 s1 = s1 %u a0
 16420: 51 0c ef                 jump @1277 if a5 == 0
      :                          @1279
 16423: ca 86 08                 a1 = s1 * a1
 16426: cd 78 08                 a1 = a1 %u a0
 16429: 28 e6                    jump @1277
      :                          @1280
 16431: 95 8c ff                 a5 = a1 + 0xffffffffffffffff
 16434: 88 cc 01                 a5 = a5 <u 0x1
 16437: d3 48 08                 a1 = a1 ^ t2
 16440: 8e 88                    a1 = a1 >u 0
 16442: d4 c8 08                 a1 = a1 | a5
 16445: 51 08 0f                 jump @1282 if a1 == 0
      :                          @1281
 16448: 97 b8 01                 a1 = a4 << 0x1
 16451: 9a aa                    a3 = -a3
 16453: c9 8a 0a                 a3 = a3 - a1
 16456: 9a bb                    a4 = -a4
 16458: 28 b6                    jump @1276
      :                          @1282
 16460: 95 74 01                 t2 = a0 + 0x1
 16463: 33 0b                    a4 = 0
 16465: 84 48 01                 a1 = t2 & 0x1
 16468: 52 08 14                 jump @1285 if a1 != 0
      :                          @1283
 16471: 64 48                    a1 = t2
 16473: 01                       fallthrough
      :                          @1284
 16474: 98 84 01                 t2 = a1 >> 0x1
 16477: 84 89 02                 a2 = a1 & 0x2
 16480: 83 bb 01                 i32 a4 = a4 + 0x1
 16483: 64 48                    a1 = t2
 16485: 51 09 f5                 jump @1284 if a2 == 0
      :                          @1285
 16488: 33 08 01                 a1 = 0x1
 16491: 51 04 76 ff              jump @1274 if t2 == 0
      :                          @1286
 16495: 9a a8 01                 a1 = 0x1 - a3
 16498: 99 89 3f                 a2 = a1 >>a 0x3f
 16501: 98 99 3e                 a2 = a2 >> 0x3e
 16504: c8 98 08                 a1 = a1 + a2
 16507: 33 09 01                 a2 = 0x1
 16510: 99 83 02                 t1 = a1 >>a 0x2
 16513: ab 94 0c                 jump @1288 if t2 != a2
      :                          @1287
 16516: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 16519: 8e 8c                    a5 = a1 >u 0
 16521: 64 ca                    a3 = a5
 16523: 28 4e                    jump @1290
      :                          @1288
 16525: 33 05                    s0 = 0
 16527: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 16530: 8e 8c                    a5 = a1 >u 0
 16532: 33 08 02                 a1 = 0x2
 16535: cd 78 06                 s1 = a1 %u a0
 16538: 64 c9                    a2 = a5
 16540: 01                       fallthrough
      :                          @1289
 16541: ca 36 0a                 a3 = s1 * t1
 16544: 64 c6                    s1 = a5
 16546: d8 48 0c                 a5 = a1 <u t2
 16549: 85 c0 01                 ra = a5 ^ 0x1
 16552: c8 c8 08                 a1 = a1 + a5
 16555: ca 35 0c                 a5 = s0 * t1
 16558: c9 c9 0c                 a5 = a2 - a5
 16561: c9 a6 05                 s0 = s1 - a3
 16564: ce 7c 0a                 a3 = a5 %s a0
 16567: 99 ac 3f                 a5 = a3 >>a 0x3f
 16570: d2 2c 0c                 a5 = a5 & t0
 16573: c8 ca 0a                 a3 = a3 + a5
 16576: ce 75 0c                 a5 = s0 %s a0
 16579: d8 84 05                 s0 = t2 <u a1
 16582: d4 50 00                 ra = ra | s0
 16585: 99 c5 3f                 s0 = a5 >>a 0x3f
 16588: d2 25 05                 s0 = s0 & t0
 16591: c8 5c 0c                 a5 = a5 + s0
 16594: 64 95                    s0 = a2
 16596: 64 a9                    a2 = a3
 16598: 51 00 c7                 jump @1289 if ra == 0
      :                          @1290
 16601: 33 08 01                 a1 = 0x1
 16604: 51 0a 05 ff              jump @1274 if a3 == 0
      :                          @1291
 16608: e3 8b 0b                 a4 = maxs(a4, a1)
 16611: ce 73 08                 a1 = t1 %s a0
 16614: 99 89 3f                 a2 = a1 >>a 0x3f
 16617: d2 29 09                 a2 = a2 & t0
 16620: c8 98 08                 a1 = a1 + a2
 16623: cd 78 09                 a2 = a1 %u a0
 16626: 97 99 01                 a2 = a2 << 0x1
 16629: 01                       fallthrough
      :                          @1292
 16630: 83 bb ff                 i32 a4 = a4 + 0xffffffffffffffff
 16633: 8e b8                    a1 = a4 >u 0
 16635: 51 0b e6 fe              jump @1274 if a4 == 0
      :                          @1293
 16639: ca ca 0a                 a3 = a3 * a5
 16642: ce 7a 06                 s1 = a3 %s a0
 16645: 99 6a 3f                 a3 = s1 >>a 0x3f
 16648: d2 2a 0a                 a3 = a3 & t0
 16651: c8 6a 0a                 a3 = a3 + s1
 16654: ca cc 0c                 a5 = a5 * a5
 16657: c9 9c 0c                 a5 = a5 - a2
 16660: ce 7c 06                 s1 = a5 %s a0
 16663: 99 6c 3f                 a5 = s1 >>a 0x3f
 16666: d2 2c 0c                 a5 = a5 & t0
 16669: c8 6c 0c                 a5 = a5 + s1
 16672: 52 0a d6                 jump @1292 if a3 != 0
      :                          @1294
 16675: 28 be fe                 jump @1274
      :                          @1295
 16678: 55 17 02 07              jump @1297 if a0 >=u 2
      :                          @1296
 16682: 28 9d 2f                 jump @2086
      :                          @1297
 16685: 64 79                    a2 = a0
 16687: 01                       fallthrough
      :                          @1298
 16688: 51 09 15                 jump @1301 if a2 == 0
      :                          @1299
 16691: 64 98                    a1 = a2
 16693: cb 97 09                 a2 = a0 /u a2
 16696: c8 89 09                 a2 = a2 + a1
 16699: 98 99 01                 a2 = a2 >> 0x1
 16702: ac 89 f2                 jump @1298 if a2 <u a1
      :                          @1300
 16705: 64 87                    a0 = a1
 16707: 32 00                    ret
      :                          @1301
 16709: 00                       trap
      :                          @1302
 16710: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 16713: 7b 15 08                 u64 [sp + 0x8] = s0
 16716: 7b 16                    u64 [sp] = s1
 16718: 82 78                    a1 = u64 [a0]
 16720: 82 73 08                 t1 = u64 [a0 + 0x8]
 16723: 82 72 10                 t0 = u64 [a0 + 0x10]
 16726: 82 7a 18                 a3 = u64 [a0 + 0x18]
 16729: 82 79 20                 a2 = u64 [a0 + 0x20]
 16732: 82 74 28                 t2 = u64 [a0 + 0x28]
 16735: 82 7c 30                 a5 = u64 [a0 + 0x30]
 16738: 82 7b 38                 a4 = u64 [a0 + 0x38]
 16741: 82 77 40                 a0 = u64 [a0 + 0x40]
 16744: 51 08 0c                 jump @1304 if a1 == 0
      :                          @1303
 16747: ca 89 05                 s0 = a2 * a1
 16750: ca a3 06                 s1 = t1 * a3
 16753: ab 65 38                 jump @1305 if s0 != s1
      :                          @1304
 16756: ca 97 05                 s0 = a0 * a2
 16759: ca 4b 06                 s1 = a4 * t2
 16762: c9 65 05                 s0 = s0 - s1
 16765: ca 85 08                 a1 = s0 * a1
 16768: ca a7 07                 a0 = a0 * a3
 16771: ca 4c 06                 s1 = a5 * t2
 16774: c9 76 06                 s1 = s1 - a0
 16777: ca 36 07                 a0 = s1 * t1
 16780: ca ab 0a                 a3 = a4 * a3
 16783: ca 9c 09                 a2 = a5 * a2
 16786: c9 9a 0a                 a3 = a3 - a2
 16789: ca 2a 09                 a2 = a3 * t0
 16792: c8 98 08                 a1 = a1 + a2
 16795: c8 87 07                 a0 = a0 + a1
 16798: 82 15 08                 s0 = u64 [sp + 0x8]
 16801: 82 16                    s1 = u64 [sp]
 16803: 95 11 10                 sp = sp + 0x10
 16806: 28 f2 31                 jump @2099
      :                          @1305
 16809: ca 87 07                 a0 = a0 * a1
 16812: ca c2 09                 a2 = t0 * a5
 16815: c9 97 07                 a0 = a0 - a2
 16818: ca 8b 09                 a2 = a4 * a1
 16821: ca c3 0b                 a4 = t1 * a5
 16824: c9 9b 0b                 a4 = a4 - a2
 16827: ca 84 09                 a2 = t2 * a1
 16830: ca a2 0a                 a3 = t0 * a3
 16833: c9 a9 09                 a2 = a2 - a3
 16836: c9 65 05                 s0 = s0 - s1
 16839: ca 57 07                 a0 = a0 * s0
 16842: ca 9b 0a                 a3 = a4 * a2
 16845: c8 a7 07                 a0 = a0 + a3
 16848: 51 18 ff 12              jump @1307 if a1 == 4294967295
      :                          @1306
 16852: cc 87 07                 a0 = a0 /s a1
 16855: 82 15 08                 s0 = u64 [sp + 0x8]
 16858: 82 16                    s1 = u64 [sp]
 16860: 95 11 10                 sp = sp + 0x10
 16863: 28 b9 31                 jump @2099
      :                          @1307
 16866: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 16876: aa 97 10                 jump @1309 if a0 == a2
      :                          @1308
 16879: 9a 77                    a0 = -a0
 16881: 82 15 08                 s0 = u64 [sp + 0x8]
 16884: 82 16                    s1 = u64 [sp]
 16886: 95 11 10                 sp = sp + 0x10
 16889: 28 9f 31                 jump @2099
      :                          @1309
 16892: 00                       trap
      :                          @1310
 16893: 82 72                    t0 = u64 [a0]
 16895: 82 79 08                 a2 = u64 [a0 + 0x8]
 16898: 82 7a 10                 a3 = u64 [a0 + 0x10]
 16901: 9a 28                    a1 = -t0
 16903: e3 82 0b                 a4 = maxs(t0, a1)
 16906: 51 09 40                 jump @1320 if a2 == 0
      :                          @1311
 16909: 9a 98                    a1 = -a2
 16911: e3 89 08                 a1 = maxs(a2, a1)
 16914: 01                       fallthrough
      :                          @1312
 16915: 64 8c                    a5 = a1
 16917: cd 8b 08                 a1 = a4 %u a1
 16920: 64 cb                    a4 = a5
 16922: 52 08 f9                 jump @1312 if a1 != 0
      :                          @1313
 16925: 82 7b 18                 a4 = u64 [a0 + 0x18]
 16928: 51 0a 32                 jump @1321 if a3 == 0
      :                          @1314
 16931: 9a a7                    a0 = -a3
 16933: e3 7a 08                 a1 = maxs(a3, a0)
 16936: 01                       fallthrough
      :                          @1315
 16937: 64 87                    a0 = a1
 16939: cd 8c 08                 a1 = a5 %u a1
 16942: 64 7c                    a5 = a0
 16944: 52 08 f9                 jump @1315 if a1 != 0
      :                          @1316
 16947: 51 0b 24                 jump @1322 if a4 == 0
      :                          @1317
 16950: 9a b8                    a1 = -a4
 16952: e3 8b 0c                 a5 = maxs(a4, a1)
 16955: 64 78                    a1 = a0
 16957: 01                       fallthrough
      :                          @1318
 16958: 64 c7                    a0 = a5
 16960: cd c8 0c                 a5 = a1 %u a5
 16963: 64 78                    a1 = a0
 16965: 52 0c f9                 jump @1318 if a5 != 0
      :                          @1319
 16968: 28 12                    jump @1323
      :                          @1320
 16970: 64 bc                    a5 = a4
 16972: 82 7b 18                 a4 = u64 [a0 + 0x18]
 16975: 52 0a d4                 jump @1314 if a3 != 0
      :                          @1321
 16978: 64 c7                    a0 = a5
 16980: 52 0b e2                 jump @1317 if a4 != 0
      :                          @1322
 16983: 51 07 16                 jump @1324 if a0 == 0
      :                          @1323
 16986: ca 2b 08                 a1 = a4 * t0
 16989: ca 9a 09                 a2 = a3 * a2
 16992: c9 98 08                 a1 = a1 - a2
 16995: 9a 89                    a2 = -a1
 16997: e3 98 08                 a1 = maxs(a1, a2)
 17000: cb 78 08                 a1 = a1 /u a0
 17003: 32 00                    ret
      :                          @1324
 17005: 00                       trap
      :                          @1325
 17006: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 17009: 7b 10 40                 u64 [sp + 0x40] = ra
 17012: 7b 15 38                 u64 [sp + 0x38] = s0
 17015: 7b 16 30                 u64 [sp + 0x30] = s1
 17018: 82 86                    s1 = u64 [a1]
 17020: 82 89 10                 a2 = u64 [a1 + 0x10]
 17023: 82 8a 08                 a3 = u64 [a1 + 0x8]
 17026: 82 8b 18                 a4 = u64 [a1 + 0x18]
 17029: d4 69 08                 a1 = a2 | s1
 17032: 64 75                    s0 = a0
 17034: 51 08 89 00              jump @1333 if a1 == 0
      :                          @1326
 17038: 7b 1a                    u64 [sp] = a3
 17040: 7b 1b 08                 u64 [sp + 0x8] = a4
 17043: 95 17 18                 a0 = sp + 0x18
 17046: 64 68                    a1 = s1
 17048: 7b 19 10                 u64 [sp + 0x10] = a2
 17051: 50 20 2c 01 9f e6        ra = 300, jump @788
      :                          @1327 [@dyn 150]
 17057: 82 17 18                 a0 = u64 [sp + 0x18]
 17060: 51 07 8d 00              jump @1337 if a0 == 0
      :                          @1328
 17064: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 17074: d3 86 09                 a2 = s1 ^ a1
 17077: e1 79 09                 a2 = a2 | ~a0
 17080: 51 09 77                 jump @1335 if a2 == 0
      :                          @1329
 17083: 82 12 10                 t0 = u64 [sp + 0x10]
 17086: d3 82 08                 a1 = t0 ^ a1
 17089: e1 78 08                 a1 = a1 | ~a0
 17092: 51 08 6b                 jump @1335 if a1 == 0
      :                          @1330
 17095: 82 18 20                 a1 = u64 [sp + 0x20]
 17098: 82 19 28                 a2 = u64 [sp + 0x28]
 17101: 82 1c                    a5 = u64 [sp]
 17103: ca c8 08                 a1 = a1 * a5
 17106: 82 1b 08                 a4 = u64 [sp + 0x8]
 17109: ca b9 09                 a2 = a2 * a4
 17112: c8 98 08                 a1 = a1 + a2
 17115: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 17125: d3 98 0a                 a3 = a1 ^ a2
 17128: e1 7a 0a                 a3 = a3 | ~a0
 17131: 51 0a 45                 jump @1336 if a3 == 0
      :                          @1331
 17134: ce 78 08                 a1 = a1 %s a0
 17137: c8 78 08                 a1 = a1 + a0
 17140: d3 89 09                 a2 = a2 ^ a1
 17143: e1 79 09                 a2 = a2 | ~a0
 17146: 51 09 36                 jump @1336 if a2 == 0
      :                          @1332
 17149: cc 76 09                 a2 = s1 /s a0
 17152: cc 72 0a                 a3 = t0 /s a0
 17155: ca ca 0a                 a3 = a3 * a5
 17158: ce 78 08                 a1 = a1 %s a0
 17161: ca b9 09                 a2 = a2 * a4
 17164: c9 a9 0b                 a4 = a2 - a3
 17167: 64 8a                    a3 = a1
 17169: 28 05                    jump @1334
      :                          @1333
 17171: 33 07                    a0 = 0
 17173: 01                       fallthrough
      :                          @1334
 17174: 7b 57                    u64 [s0] = a0
 17176: 7b 5a 08                 u64 [s0 + 0x8] = a3
 17179: 7b 5b 18                 u64 [s0 + 0x18] = a4
 17182: 49 15 10                 u64 [s0 + 16] = 0
 17185: 82 10 40                 ra = u64 [sp + 0x40]
 17188: 82 15 38                 s0 = u64 [sp + 0x38]
 17191: 82 16 30                 s1 = u64 [sp + 0x30]
 17194: 95 11 48                 sp = sp + 0x48
 17197: 32 00                    ret
      :                          @1335
 17199: 00                       trap
      :                          @1336
 17200: 00                       trap
      :                          @1337
 17201: 00                       trap
      :                          @1338
 17202: 64 82                    t0 = a1
 17204: 64 93                    t1 = a2
 17206: ca 88 0c                 a5 = a1 * a1
 17209: ca 99 08                 a1 = a2 * a2
 17212: c8 8c 0c                 a5 = a5 + a1
 17215: 51 0c 39                 jump @1342 if a5 == 0
      :                          @1339
 17218: 97 c8 01                 a1 = a5 << 0x1
 17221: 51 08 45                 jump @1344 if a1 == 0
      :                          @1340
 17224: ca a2 04                 t2 = t0 * a3
 17227: ca b3 09                 a2 = t1 * a4
 17230: c8 49 09                 a2 = a2 + t2
 17233: 97 99 01                 a2 = a2 << 0x1
 17236: c8 c9 09                 a2 = a2 + a5
 17239: cc 89 09                 a2 = a2 /s a1
 17242: ca 29 08                 a1 = a2 * t0
 17245: c9 8a 08                 a1 = a3 - a1
 17248: ca 39 09                 a2 = a2 * t1
 17251: c9 9b 09                 a2 = a4 - a2
 17254: ca 88 0a                 a3 = a1 * a1
 17257: ca 99 0b                 a4 = a2 * a2
 17260: c8 ba 04                 t2 = a3 + a4
 17263: 64 3b                    a4 = t1
 17265: 64 2a                    a3 = t0
 17267: ad c4 bf                 jump @1338 if t2 <s a5
      :                          @1341
 17270: 28 07                    jump @1343
      :                          @1342
 17272: 64 b9                    a2 = a4
 17274: 64 a8                    a1 = a3
 17276: 01                       fallthrough
      :                          @1343
 17277: 7b 72                    u64 [a0] = t0
 17279: 7b 73 08                 u64 [a0 + 0x8] = t1
 17282: 7b 78 10                 u64 [a0 + 0x10] = a1
 17285: 7b 79 18                 u64 [a0 + 0x18] = a2
 17288: 32 00                    ret
      :                          @1344
 17290: 00                       trap
      :                          @1345
 17291: 82 5a                    a3 = u64 [s0]
 17293: c8 9a 0b                 a4 = a3 + a2
 17296: ac ab 59 01              jump @1374 if a4 <u a3
      :                          @1346
 17300: 95 bc 08                 a5 = a4 + 0x8
 17303: d8 bc 06                 s1 = a5 <u a4
 17306: d8 c2 0c                 a5 = t0 <u a5
 17309: d4 6c 0c                 a5 = a5 | s1
 17312: 52 0c 49 01              jump @1374 if a5 != 0
      :                          @1347
 17316: c9 b3 06                 s1 = t1 - a4
 17319: c8 26 06                 s1 = s1 + t0
 17322: 84 6c 07                 a5 = s1 & 0x7
 17325: c8 cb 0b                 a4 = a4 + a5
 17328: 01                       fallthrough
      :                          @1348
 17329: 82 58                    a1 = u64 [s0]
 17331: ab a8 d8                 jump @1345 if a1 != a3
      :                          @1349
 17334: 7b 5b                    u64 [s0] = a4
 17336: c9 c6 06                 s1 = s1 - a5
 17339: 64 67                    a0 = s1
 17341: 33 08                    a1 = 0
 17343: 7b 19 08                 u64 [sp + 0x8] = a2
 17346: 50 20 2e 01 c2 6f        ra = 302, jump @2893
      :                          @1350 [@dyn 151]
 17352: 33 07 01                 a0 = 0x1
 17355: 7b 67                    u64 [s1] = a0
 17357: 82 15 10                 s0 = u64 [sp + 0x10]
 17360: 51 05 dd 00              jump @1366 if s0 == 0
      :                          @1351
 17364: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 17367: ac 85 10 01              jump @1372 if s0 <u a1
      :                          @1352
 17371: ac 75 0d 01              jump @1373 if s0 <u a0
      :                          @1353
 17375: 97 88 03                 a1 = a1 << 0x3
 17378: c8 68 08                 a1 = a1 + s1
 17381: 82 88                    a1 = u64 [a1]
 17383: 97 79 03                 a2 = a0 << 0x3
 17386: c8 69 09                 a2 = a2 + s1
 17389: 82 9a                    a3 = u64 [a2]
 17391: d8 57 0b                 a4 = a0 <u s0
 17394: c8 b7 07                 a0 = a0 + a4
 17397: c8 a8 08                 a1 = a1 + a3
 17400: d8 75 0a                 a3 = s0 <u a0
 17403: 85 aa 01                 a3 = a3 ^ 0x1
 17406: d2 ba 0a                 a3 = a3 & a4
 17409: 7b 98                    u64 [a2] = a1
 17411: 52 0a d1                 jump @1351 if a3 != 0
      :                          @1354
 17414: 33 07 05                 a0 = 0x5
 17417: ac 75 a4 00              jump @1366 if s0 <u a0
      :                          @1355
 17421: 95 78 fb                 a1 = a0 + 0xfffffffffffffffb
 17424: ac 85 d7 00              jump @1372 if s0 <u a1
      :                          @1356
 17428: ac 75 d4 00              jump @1373 if s0 <u a0
      :                          @1357
 17432: 97 88 03                 a1 = a1 << 0x3
 17435: c8 68 08                 a1 = a1 + s1
 17438: 82 88                    a1 = u64 [a1]
 17440: 97 79 03                 a2 = a0 << 0x3
 17443: c8 69 09                 a2 = a2 + s1
 17446: 82 9a                    a3 = u64 [a2]
 17448: d8 57 0b                 a4 = a0 <u s0
 17451: c8 b7 07                 a0 = a0 + a4
 17454: c8 a8 08                 a1 = a1 + a3
 17457: d8 75 0a                 a3 = s0 <u a0
 17460: 85 aa 01                 a3 = a3 ^ 0x1
 17463: d2 ba 0a                 a3 = a3 & a4
 17466: 7b 98                    u64 [a2] = a1
 17468: 52 0a d1                 jump @1355 if a3 != 0
      :                          @1358
 17471: 33 07 0a                 a0 = 0xa
 17474: ac 75 6b                 jump @1366 if s0 <u a0
      :                          @1359
 17477: 95 78 f6                 a1 = a0 + 0xfffffffffffffff6
 17480: ac 85 9f 00              jump @1372 if s0 <u a1
      :                          @1360
 17484: ac 75 9c 00              jump @1373 if s0 <u a0
      :                          @1361
 17488: 97 88 03                 a1 = a1 << 0x3
 17491: c8 68 08                 a1 = a1 + s1
 17494: 82 88                    a1 = u64 [a1]
 17496: 97 79 03                 a2 = a0 << 0x3
 17499: c8 69 09                 a2 = a2 + s1
 17502: 82 9a                    a3 = u64 [a2]
 17504: d8 57 0b                 a4 = a0 <u s0
 17507: c8 b7 07                 a0 = a0 + a4
 17510: c8 a8 08                 a1 = a1 + a3
 17513: d8 75 0a                 a3 = s0 <u a0
 17516: 85 aa 01                 a3 = a3 ^ 0x1
 17519: d2 ba 0a                 a3 = a3 & a4
 17522: 7b 98                    u64 [a2] = a1
 17524: 52 0a d1                 jump @1359 if a3 != 0
      :                          @1362
 17527: 33 07 19                 a0 = 0x19
 17530: ac 75 33                 jump @1366 if s0 <u a0
      :                          @1363
 17533: 95 78 e7                 a1 = a0 + 0xffffffffffffffe7
 17536: ac 85 67                 jump @1372 if s0 <u a1
      :                          @1364
 17539: ac 75 65                 jump @1373 if s0 <u a0
      :                          @1365
 17542: 97 88 03                 a1 = a1 << 0x3
 17545: c8 68 08                 a1 = a1 + s1
 17548: 82 88                    a1 = u64 [a1]
 17550: 97 79 03                 a2 = a0 << 0x3
 17553: c8 69 09                 a2 = a2 + s1
 17556: 82 9a                    a3 = u64 [a2]
 17558: d8 57 0b                 a4 = a0 <u s0
 17561: c8 b7 07                 a0 = a0 + a4
 17564: c8 a8 08                 a1 = a1 + a3
 17567: d8 75 0a                 a3 = s0 <u a0
 17570: 85 aa 01                 a3 = a3 ^ 0x1
 17573: d2 ba 0a                 a3 = a3 & a4
 17576: 7b 98                    u64 [a2] = a1
 17578: 52 0a d3                 jump @1363 if a3 != 0
      :                          @1366
 17581: 97 55 03                 s0 = s0 << 0x3
 17584: c8 65 05                 s0 = s0 + s1
 17587: 82 57                    a0 = u64 [s0]
 17589: 33 08 10 01 03           a1 = 0x30110
 17594: 95 88 00 00 10           a1 = a1 + 0x100000
 17599: 82 15 08                 s0 = u64 [sp + 0x8]
 17602: 01                       fallthrough
      :                          @1367
 17603: 82 89                    a2 = u64 [a1]
 17605: c9 98 0a                 a3 = a1 - a2
 17608: ab 6a 11                 jump @1371 if a3 != s1
      :                          @1368
 17611: c9 59 0a                 a3 = a2 - s0
 17614: 01                       fallthrough
      :                          @1369
 17615: 82 8b                    a4 = u64 [a1]
 17617: ab 9b f2                 jump @1367 if a4 != a2
      :                          @1370
 17620: 7b 8a                    u64 [a1] = a3
 17622: 33 0c                    a5 = 0
 17624: 01                       fallthrough
      :                          @1371
 17625: 82 10 28                 ra = u64 [sp + 0x28]
 17628: 82 15 20                 s0 = u64 [sp + 0x20]
 17631: 82 16 18                 s1 = u64 [sp + 0x18]
 17634: 95 11 30                 sp = sp + 0x30
 17637: 32 00                    ret
      :                          @1372
 17639: 00                       trap
      :                          @1373
 17640: 00                       trap
      :                          @1374
 17641: 00                       trap
      :                          @1375
 17642: 82 0b                    a4 = u64 [ra]
 17644: c8 7b 09                 a2 = a4 + a0
 17647: ac b9 c8 01              jump @1421 if a2 <u a4
      :                          @1376
 17651: 95 9a 08                 a3 = a2 + 0x8
 17654: d8 9a 05                 s0 = a3 <u a2
 17657: d8 a2 0a                 a3 = t0 <u a3
 17660: d4 5a 0a                 a3 = a3 | s0
 17663: 52 0a b8 01              jump @1421 if a3 != 0
      :                          @1377
 17667: c9 94 0a                 a3 = t2 - a2
 17670: c8 2a 0a                 a3 = a3 + t0
 17673: 84 a5 07                 s0 = a3 & 0x7
 17676: c8 59 09                 a2 = a2 + s0
 17679: 01                       fallthrough
      :                          @1378
 17680: 82 06                    s1 = u64 [ra]
 17682: ab b6 d8                 jump @1375 if s1 != a4
      :                          @1379
 17685: 7b 09                    u64 [ra] = a2
 17687: 01                       fallthrough
      :                          @1380
 17688: c9 5a 0c                 a5 = a3 - s0
 17691: 51 03 b6 00              jump @1397 if t1 == 0
      :                          @1381
 17695: 14 0a ff ff ff ff ff ff ff 7f a3 = 0x7fffffffffffffff
 17705: 64 3b                    a4 = t1
 17707: 64 c9                    a2 = a5
 17709: 01                       fallthrough
      :                          @1382
 17710: 7b 9a                    u64 [a2] = a3
 17712: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 17715: 95 99 08                 a2 = a2 + 0x8
 17718: 52 0b f8                 jump @1382 if a4 != 0
      :                          @1383
 17721: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 17731: 7b 92                    u64 [a2] = t0
 17733: 49 0c                    u64 [a5 + 0] = 0
 17735: 33 0a 01                 a3 = 0x1
 17738: 28 14                    jump @1385
      :                          @1384
 17740: d8 3a 09                 a2 = a3 <u t1
 17743: c8 9a 0a                 a3 = a3 + a2
 17746: d8 a3 0b                 a4 = t1 <u a3
 17749: 85 bb 01                 a4 = a4 ^ 0x1
 17752: d2 b9 09                 a2 = a2 & a4
 17755: 51 09 2a                 jump @1389 if a2 == 0
      :                          @1385
 17758: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
 17761: ac b3 55 01              jump @1420 if t1 <u a4
      :                          @1386
 17765: 97 bb 03                 a4 = a4 << 0x3
 17768: c8 cb 0b                 a4 = a4 + a5
 17771: 82 b9                    a2 = u64 [a4]
 17773: aa 29 df                 jump @1384 if a2 == t0
      :                          @1387
 17776: ac a3 60                 jump @1396 if t1 <u a3
      :                          @1388
 17779: 97 ab 03                 a4 = a3 << 0x3
 17782: c8 cb 0b                 a4 = a4 + a5
 17785: 82 b6                    s1 = u64 [a4]
 17787: 95 99 01                 a2 = a2 + 0x1
 17790: e5 96 09                 a2 = mins(s1, a2)
 17793: 7b b9                    u64 [a4] = a2
 17795: 28 c9                    jump @1384
      :                          @1389
 17797: 33 0a 05                 a3 = 0x5
 17800: ac a3 a0 00              jump @1406 if t1 <u a3
      :                          @1390
 17804: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 17814: 28 25                    jump @1393
      :                          @1391
 17816: 97 ab 03                 a4 = a3 << 0x3
 17819: c8 cb 0b                 a4 = a4 + a5
 17822: 82 b6                    s1 = u64 [a4]
 17824: 95 99 01                 a2 = a2 + 0x1
 17827: e5 96 09                 a2 = mins(s1, a2)
 17830: 7b b9                    u64 [a4] = a2
 17832: 01                       fallthrough
      :                          @1392
 17833: d8 3a 09                 a2 = a3 <u t1
 17836: c8 9a 0a                 a3 = a3 + a2
 17839: d8 a3 0b                 a4 = t1 <u a3
 17842: 85 bb 01                 a4 = a4 ^ 0x1
 17845: d2 b9 09                 a2 = a2 & a4
 17848: 51 09 1f                 jump @1398 if a2 == 0
      :                          @1393
 17851: 95 ab fb                 a4 = a3 + 0xfffffffffffffffb
 17854: ac b3 f8 00              jump @1420 if t1 <u a4
      :                          @1394
 17858: 97 bb 03                 a4 = a4 << 0x3
 17861: c8 cb 0b                 a4 = a4 + a5
 17864: 82 b9                    a2 = u64 [a4]
 17866: aa 29 df                 jump @1392 if a2 == t0
      :                          @1395
 17869: ae a3 cb                 jump @1391 if t1 >=u a3
      :                          @1396
 17872: 00                       trap
      :                          @1397
 17873: 49 0c                    u64 [a5 + 0] = 0
 17875: 64 c8                    a1 = a5
 17877: 28 5a                    jump @1407
      :                          @1398
 17879: 33 0a 0a                 a3 = 0xa
 17882: ac a3 4e                 jump @1406 if t1 <u a3
      :                          @1399
 17885: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 17895: 28 14                    jump @1401
      :                          @1400
 17897: d8 3a 09                 a2 = a3 <u t1
 17900: c8 9a 0a                 a3 = a3 + a2
 17903: d8 a3 0b                 a4 = t1 <u a3
 17906: 85 bb 01                 a4 = a4 ^ 0x1
 17909: d2 b9 09                 a2 = a2 & a4
 17912: 51 09 2a                 jump @1405 if a2 == 0
      :                          @1401
 17915: 95 ab f6                 a4 = a3 + 0xfffffffffffffff6
 17918: ac b3 b8 00              jump @1420 if t1 <u a4
      :                          @1402
 17922: 97 bb 03                 a4 = a4 << 0x3
 17925: c8 cb 0b                 a4 = a4 + a5
 17928: 82 b9                    a2 = u64 [a4]
 17930: aa 29 df                 jump @1400 if a2 == t0
      :                          @1403
 17933: ac a3 c3                 jump @1396 if t1 <u a3
      :                          @1404
 17936: 97 ab 03                 a4 = a3 << 0x3
 17939: c8 cb 0b                 a4 = a4 + a5
 17942: 82 b6                    s1 = u64 [a4]
 17944: 95 99 01                 a2 = a2 + 0x1
 17947: e5 96 09                 a2 = mins(s1, a2)
 17950: 7b b9                    u64 [a4] = a2
 17952: 28 c9                    jump @1400
      :                          @1405
 17954: 33 0a 19                 a3 = 0x19
 17957: ae a3 4b                 jump @1413 if t1 >=u a3
      :                          @1406
 17960: 97 38 03                 a1 = t1 << 0x3
 17963: c8 c8 08                 a1 = a1 + a5
 17966: 01                       fallthrough
      :                          @1407
 17967: 82 88                    a1 = u64 [a1]
 17969: 33 09 10 01 03           a2 = 0x30110
 17974: 95 99 00 00 10           a2 = a2 + 0x100000
 17979: 01                       fallthrough
      :                          @1408
 17980: 82 9a                    a3 = u64 [a2]
 17982: c9 a9 0b                 a4 = a2 - a3
 17985: ab cb 0f                 jump @1412 if a4 != a5
      :                          @1409
 17988: c9 7a 0b                 a4 = a3 - a0
 17991: 01                       fallthrough
      :                          @1410
 17992: 82 96                    s1 = u64 [a2]
 17994: ab a6 f2                 jump @1408 if s1 != a3
      :                          @1411
 17997: 7b 9b                    u64 [a2] = a4
 17999: 01                       fallthrough
      :                          @1412
 18000: 33 07 ff                 a0 = 0xffffffffffffffff
 18003: 14 09 ff ff ff ff ff ff ff 7f a2 = 0x7fffffffffffffff
 18013: d3 89 09                 a2 = a2 ^ a1
 18016: db 98 07                 a0 = a1 if a2 != 0
 18019: 82 10 10                 ra = u64 [sp + 0x10]
 18022: 82 15 08                 s0 = u64 [sp + 0x8]
 18025: 82 16                    s1 = u64 [sp]
 18027: 95 11 18                 sp = sp + 0x18
 18030: 32 00                    ret
      :                          @1413
 18032: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 18042: 28 25                    jump @1416
      :                          @1414
 18044: 97 ab 03                 a4 = a3 << 0x3
 18047: c8 cb 0b                 a4 = a4 + a5
 18050: 82 b6                    s1 = u64 [a4]
 18052: 95 99 01                 a2 = a2 + 0x1
 18055: e5 96 09                 a2 = mins(s1, a2)
 18058: 7b b9                    u64 [a4] = a2
 18060: 01                       fallthrough
      :                          @1415
 18061: d8 3a 09                 a2 = a3 <u t1
 18064: c8 9a 0a                 a3 = a3 + a2
 18067: d8 a3 0b                 a4 = t1 <u a3
 18070: 85 bb 01                 a4 = a4 ^ 0x1
 18073: d2 b9 09                 a2 = a2 & a4
 18076: 51 09 8c                 jump @1406 if a2 == 0
      :                          @1416
 18079: 95 ab e7                 a4 = a3 + 0xffffffffffffffe7
 18082: ac b3 14                 jump @1420 if t1 <u a4
      :                          @1417
 18085: 97 bb 03                 a4 = a4 << 0x3
 18088: c8 cb 0b                 a4 = a4 + a5
 18091: 82 b9                    a2 = u64 [a4]
 18093: aa 29 e0                 jump @1415 if a2 == t0
      :                          @1418
 18096: ae a3 cc                 jump @1414 if t1 >=u a3
      :                          @1419
 18099: 28 1d ff                 jump @1396
      :                          @1420
 18102: 00                       trap
      :                          @1421
 18103: 00                       trap
      :                          @1422
 18104: 51 07 30                 jump @1428 if a0 == 0
      :                          @1423
 18107: 51 08 26                 jump @1427 if a1 == 0
      :                          @1424
 18110: 6a 79                    a2 = ctz a0
 18112: d0 97 09                 a2 = a0 >> a2
 18115: 64 8a                    a3 = a1
 18117: 01                       fallthrough
      :                          @1425
 18118: 6a ab                    a4 = ctz a3
 18120: d0 ba 0a                 a3 = a3 >> a4
 18123: e4 a9 0b                 a4 = maxu(a2, a3)
 18126: e6 a9 09                 a2 = minu(a2, a3)
 18129: c9 9b 0a                 a3 = a4 - a2
 18132: ab 9b f2                 jump @1425 if a4 != a2
      :                          @1426
 18135: d4 87 07                 a0 = a0 | a1
 18138: 6a 77                    a0 = ctz a0
 18140: cf 7b 07                 a0 = a4 << a0
 18143: 32 00                    ret
      :                          @1427
 18145: 64 78                    a1 = a0
 18147: 64 87                    a0 = a1
 18149: 28 56 34                 jump @2165
      :                          @1428
 18152: 64 87                    a0 = a1
 18154: 28 51 34                 jump @2165
      :                          @1429
 18157: 95 82 ff                 t0 = a1 + 0xffffffffffffffff
 18160: ae 72 7a                 jump @1437 if t0 >=u a0
      :                          @1430
 18163: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 18166: 7b 15 08                 u64 [sp + 0x8] = s0
 18169: c9 87 09                 a2 = a0 - a1
 18172: e6 98 04                 t2 = minu(a1, a2)
 18175: 33 09 01                 a2 = 0x1
 18178: c8 97 03                 t1 = a0 + a2
 18181: 33 0a 01                 a3 = 0x1
 18184: 51 04 27                 jump @1433 if t2 == 0
      :                          @1431
 18187: 33 0a 01                 a3 = 0x1
 18190: 33 0b 01                 a4 = 0x1
 18193: 01                       fallthrough
      :                          @1432
 18194: d8 4b 08                 a1 = a4 <u t2
 18197: 85 8c 01                 a5 = a1 ^ 0x1
 18200: c9 b3 05                 s0 = t1 - a4
 18203: c8 b8 08                 a1 = a1 + a4
 18206: ca a5 0a                 a3 = s0 * a3
 18209: d8 84 05                 s0 = t2 <u a1
 18212: d4 5c 0c                 a5 = a5 | s0
 18215: cb ba 0a                 a3 = a3 /u a4
 18218: 64 8b                    a4 = a1
 18220: 51 0c e6                 jump @1432 if a5 == 0
      :                          @1433
 18223: c9 27 08                 a1 = a0 - t0
 18226: e6 82 02                 t0 = minu(t0, a1)
 18229: 51 02 27                 jump @1436 if t0 == 0
      :                          @1434
 18232: 33 09 01                 a2 = 0x1
 18235: 33 0c 01                 a5 = 0x1
 18238: 01                       fallthrough
      :                          @1435
 18239: d8 2c 08                 a1 = a5 <u t0
 18242: 85 85 01                 s0 = a1 ^ 0x1
 18245: c9 c3 0b                 a4 = t1 - a5
 18248: c8 c8 08                 a1 = a1 + a5
 18251: ca 9b 09                 a2 = a4 * a2
 18254: d8 82 0b                 a4 = t0 <u a1
 18257: d4 5b 0b                 a4 = a4 | s0
 18260: cb c9 09                 a2 = a2 /u a5
 18263: 64 8c                    a5 = a1
 18265: 51 0b e6                 jump @1435 if a4 == 0
      :                          @1436
 18268: ca a9 08                 a1 = a2 * a3
 18271: cb 78 07                 a0 = a1 /u a0
 18274: 82 15 08                 s0 = u64 [sp + 0x8]
 18277: 95 11 10                 sp = sp + 0x10
 18280: 32 00                    ret
      :                          @1437
 18282: 33 07                    a0 = 0
 18284: 28 a7 0d                 jump @1719
      :                          @1438
 18287: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 18290: 7b 10 20                 u64 [sp + 0x20] = ra
 18293: 7b 15 18                 u64 [sp + 0x18] = s0
 18296: 7b 16 10                 u64 [sp + 0x10] = s1
 18299: 64 74                    t2 = a0
 18301: 33 08 02                 a1 = 0x2
 18304: 33 07 01                 a0 = 0x1
 18307: ac 84 f4 00              jump @1456 if t2 <u a1
      :                          @1439
 18311: 95 49 01                 a2 = t2 + 0x1
 18314: 7b 19                    u64 [sp] = a2
 18316: 97 99 03                 a2 = a2 << 0x3
 18319: 33 07 10 01 03           a0 = 0x30110
 18324: 33 03 10 01 03           t1 = 0x30110
 18329: 33 02 00 00 10           t0 = 0x100000
 18334: c8 23 06                 s1 = t1 + t0
 18337: 01                       fallthrough
      :                          @1440
 18338: 82 6a                    a3 = u64 [s1]
 18340: c8 9a 0b                 a4 = a3 + a2
 18343: ac ab e2 00              jump @1461 if a4 <u a3
      :                          @1441
 18347: 95 bc 08                 a5 = a4 + 0x8
 18350: d8 bc 05                 s0 = a5 <u a4
 18353: d8 c2 0c                 a5 = t0 <u a5
 18356: d4 5c 0c                 a5 = a5 | s0
 18359: 52 0c d2 00              jump @1461 if a5 != 0
      :                          @1442
 18363: c9 b3 05                 s0 = t1 - a4
 18366: c8 25 05                 s0 = s0 + t0
 18369: 84 5c 07                 a5 = s0 & 0x7
 18372: c8 cb 0b                 a4 = a4 + a5
 18375: 01                       fallthrough
      :                          @1443
 18376: 82 68                    a1 = u64 [s1]
 18378: ab a8 d8                 jump @1440 if a1 != a3
      :                          @1444
 18381: 7b 6b                    u64 [s1] = a4
 18383: c9 c5 06                 s1 = s0 - a5
 18386: 64 67                    a0 = s1
 18388: 33 08                    a1 = 0
 18390: 7b 19 08                 u64 [sp + 0x8] = a2
 18393: 64 45                    s0 = t2
 18395: 50 20 30 01 a9 6b        ra = 304, jump @2893
      :                          @1445 [@dyn 152]
 18401: 64 63                    t1 = s1
 18403: 64 5b                    a4 = s0
 18405: 49 06 01                 u64 [s1 + 0] = 0x1
 18408: 49 16 08 01              u64 [s1 + 8] = 0x1
 18412: 33 07 02                 a0 = 0x2
 18415: 01                       fallthrough
      :                          @1446
 18416: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 18419: ac 8b 92 00              jump @1457 if a4 <u a1
      :                          @1447
 18423: 95 79 fe                 a2 = a0 + 0xfffffffffffffffe
 18426: ac 9b 8c 00              jump @1458 if a4 <u a2
      :                          @1448
 18430: 95 7a 02                 a3 = a0 + 0x2
 18433: 51 0a 86 00              jump @1459 if a3 == 0
      :                          @1449
 18437: ac 7b 83 00              jump @1460 if a4 <u a0
      :                          @1450
 18441: d8 b7 02                 t0 = a0 <u a4
 18444: 97 7c 01                 a5 = a0 << 0x1
 18447: c8 7c 05                 s0 = a5 + a0
 18450: 97 76 03                 s1 = a0 << 0x3
 18453: c8 27 07                 a0 = a0 + t0
 18456: 97 88 03                 a1 = a1 << 0x3
 18459: c8 38 08                 a1 = a1 + t1
 18462: 82 88                    a1 = u64 [a1]
 18464: 97 99 03                 a2 = a2 << 0x3
 18467: c8 39 09                 a2 = a2 + t1
 18470: 82 99                    a2 = u64 [a2]
 18472: 95 55 fd                 s0 = s0 + 0xfffffffffffffffd
 18475: 95 cc 01                 a5 = a5 + 0x1
 18478: ca c8 08                 a1 = a1 * a5
 18481: ca 59 09                 a2 = a2 * s0
 18484: c8 98 08                 a1 = a1 + a2
 18487: c8 36 06                 s1 = s1 + t1
 18490: cb a8 08                 a1 = a1 /u a3
 18493: d8 7b 09                 a2 = a4 <u a0
 18496: 85 99 01                 a2 = a2 ^ 0x1
 18499: d2 92 09                 a2 = t0 & a2
 18502: 7b 68                    u64 [s1] = a1
 18504: 52 09 a8                 jump @1446 if a2 != 0
      :                          @1451
 18507: 97 b6 03                 s1 = a4 << 0x3
 18510: c8 36 06                 s1 = s1 + t1
 18513: 82 67                    a0 = u64 [s1]
 18515: 33 08 10 01 03           a1 = 0x30110
 18520: 95 88 00 00 10           a1 = a1 + 0x100000
 18525: 82 16 08                 s1 = u64 [sp + 0x8]
 18528: 01                       fallthrough
      :                          @1452
 18529: 82 89                    a2 = u64 [a1]
 18531: c9 98 0a                 a3 = a1 - a2
 18534: ab 3a 11                 jump @1456 if a3 != t1
      :                          @1453
 18537: c9 69 0a                 a3 = a2 - s1
 18540: 01                       fallthrough
      :                          @1454
 18541: 82 8b                    a4 = u64 [a1]
 18543: ab 9b f2                 jump @1452 if a4 != a2
      :                          @1455
 18546: 7b 8a                    u64 [a1] = a3
 18548: 33 0c                    a5 = 0
 18550: 01                       fallthrough
      :                          @1456
 18551: 82 10 20                 ra = u64 [sp + 0x20]
 18554: 82 15 18                 s0 = u64 [sp + 0x18]
 18557: 82 16 10                 s1 = u64 [sp + 0x10]
 18560: 95 11 28                 sp = sp + 0x28
 18563: 32 00                    ret
      :                          @1457
 18565: 00                       trap
      :                          @1458
 18566: 00                       trap
      :                          @1459
 18567: 00                       trap
      :                          @1460
 18568: 00                       trap
      :                          @1461
 18569: 00                       trap
      :                          @1462
 18570: cd 87 0a                 a3 = a0 %u a1
 18573: 51 0a 32                 jump @1468 if a3 == 0
      :                          @1463
 18576: 95 8c ff                 a5 = a1 + 0xffffffffffffffff
 18579: 33 09 03                 a2 = 0x3
 18582: 8e c7                    a0 = a5 >u 0
 18584: ae 98 14                 jump @1466 if a1 >=u a2
      :                          @1464
 18587: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 18590: 88 77 01                 a0 = a0 <u 0x1
 18593: 32 00                    ret
      :                          @1465
 18595: 98 bc 01                 a5 = a4 >> 0x1
 18598: ca aa 0a                 a3 = a3 * a3
 18601: ae b9 f2                 jump @1464 if a2 >=u a4
      :                          @1466
 18604: 64 cb                    a4 = a5
 18606: 84 cc 02                 a5 = a5 & 0x2
 18609: cd 8a 0a                 a3 = a3 %u a1
 18612: 51 0c ef                 jump @1465 if a5 == 0
      :                          @1467
 18615: ca 7a 07                 a0 = a3 * a0
 18618: cd 87 07                 a0 = a0 %u a1
 18621: 28 e6                    jump @1465
      :                          @1468
 18623: 33 07 01                 a0 = 0x1
 18626: 28 5e 0e                 jump @1747
      :                          @1469
 18629: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 18632: 7b 10 38                 u64 [sp + 0x38] = ra
 18635: 7b 15 30                 u64 [sp + 0x30] = s0
 18638: 7b 16 28                 u64 [sp + 0x28] = s1
 18641: 64 70                    ra = a0
 18643: 84 77 01                 a0 = a0 & 0x1
 18646: 52 07 25                 jump @1471 if a0 != 0
      :                          @1470
 18649: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 18654: 49 11 20                 u64 [sp + 32] = 0
 18657: 97 89 0d                 a2 = a1 << 0xd
 18660: d3 98 08                 a1 = a1 ^ a2
 18663: 98 89 07                 a2 = a1 >> 0x7
 18666: d3 98 08                 a1 = a1 ^ a2
 18669: 97 89 11                 a2 = a1 << 0x11
 18672: d3 98 08                 a1 = a1 ^ a2
 18675: 3e 08 e0 00 03           u64 [0x300e0] = a1
 18680: 28 e8 00                 jump @1490
      :                          @1471
 18683: 33 09                    a2 = 0
 18685: 95 07 fe                 a0 = ra + 0xfffffffffffffffe
 18688: 7b 17 18                 u64 [sp + 0x18] = a0
 18691: 95 07 ff                 a0 = ra + 0xffffffffffffffff
 18694: 7b 17 10                 u64 [sp + 0x10] = a0
 18697: 3a 07 20 00 03           a0 = u64 [0x30020]
 18702: 7b 17 08                 u64 [sp + 0x8] = a0
 18705: 33 0a 05                 a3 = 0x5
 18708: 33 0c 03                 a5 = 0x3
 18711: 01                       fallthrough
      :                          @1472
 18712: 95 97 fb                 a0 = a2 + 0xfffffffffffffffb
 18715: 88 77 01                 a0 = a0 <u 0x1
 18718: 7b 17 20                 u64 [sp + 0x20] = a0
 18721: aa a9 bf 00              jump @1490 if a2 == a3
      :                          @1473
 18725: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 18730: 97 78 0d                 a1 = a0 << 0xd
 18733: d3 87 07                 a0 = a0 ^ a1
 18736: 98 78 07                 a1 = a0 >> 0x7
 18739: d3 87 07                 a0 = a0 ^ a1
 18742: 97 78 11                 a1 = a0 << 0x11
 18745: d3 87 07                 a0 = a0 ^ a1
 18748: 3e 07 e0 00 03           u64 [0x300e0] = a0
 18753: 82 18 08                 a1 = u64 [sp + 0x8]
 18756: ca 87 07                 a0 = a0 * a1
 18759: 82 18 18                 a1 = u64 [sp + 0x18]
 18762: cd 87 0b                 a4 = a0 %u a1
 18765: 95 bb 02                 a4 = a4 + 0x2
 18768: cd 0b 07                 a0 = a4 %u ra
 18771: 33 05 01                 s0 = 0x1
 18774: 64 02                    t0 = ra
 18776: 33 06 01                 s1 = 0x1
 18779: 51 07 49                 jump @1484 if a0 == 0
      :                          @1474
 18782: 33 06 01                 s1 = 0x1
 18785: 64 03                    t1 = ra
 18787: 28 18                    jump @1477
      :                          @1475
 18789: 64 72                    t0 = a0
 18791: 01                       fallthrough
      :                          @1476
 18792: d2 23 07                 a0 = t1 & t0
 18795: 84 78 02                 a1 = a0 & 0x2
 18798: 9a 64                    t2 = -s1
 18800: cd 23 07                 a0 = t1 %u t0
 18803: db 84 06                 s1 = t2 if a1 != 0
 18806: 64 23                    t1 = t0
 18808: 51 07 2c                 jump @1484 if a0 == 0
      :                          @1477
 18811: 84 78 01                 a1 = a0 & 0x1
 18814: 52 08 e7                 jump @1475 if a1 != 0
      :                          @1478
 18817: 84 38 07                 a1 = t1 & 0x7
 18820: aa c8 06                 jump @1480 if a1 == a5
      :                          @1479
 18823: ab a8 12                 jump @1482 if a1 != a3
      :                          @1480
 18826: 98 72 01                 t0 = a0 >> 0x1
 18829: 84 78 02                 a1 = a0 & 0x2
 18832: 9a 66                    s1 = -s1
 18834: 64 27                    a0 = t0
 18836: 51 08 f6                 jump @1480 if a1 == 0
      :                          @1481
 18839: 28 d1                    jump @1476
      :                          @1482
 18841: 84 78 02                 a1 = a0 & 0x2
 18844: 98 77 01                 a0 = a0 >> 0x1
 18847: 51 08 fa                 jump @1482 if a1 == 0
      :                          @1483
 18850: 28 c3                    jump @1475
      :                          @1484
 18852: 83 99 01                 i32 a2 = a2 + 0x1
 18855: 82 17 10                 a0 = u64 [sp + 0x10]
 18858: 28 0b                    jump @1486
      :                          @1485
 18860: 98 87 01                 a0 = a1 >> 0x1
 18863: ca bb 0b                 a4 = a4 * a4
 18866: ae 8c 16                 jump @1488 if a5 >=u a1
      :                          @1486
 18869: 64 78                    a1 = a0
 18871: 84 77 02                 a0 = a0 & 0x2
 18874: cd 0b 0b                 a4 = a4 %u ra
 18877: 51 07 ef                 jump @1485 if a0 == 0
      :                          @1487
 18880: ca 5b 07                 a0 = a4 * s0
 18883: cd 07 05                 s0 = a0 %u ra
 18886: 28 e6                    jump @1485
      :                          @1488
 18888: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 18891: 8e 27                    a0 = t0 >u 0
 18893: 88 68 01                 a1 = s1 <u 0x1
 18896: d4 87 07                 a0 = a0 | a1
 18899: 52 07 0d                 jump @1490 if a0 != 0
      :                          @1489
 18902: c9 65 05                 s0 = s0 - s1
 18905: ce 05 07                 a0 = s0 %s ra
 18908: 51 07 3c ff              jump @1472 if a0 == 0
      :                          @1490
 18912: 82 17 20                 a0 = u64 [sp + 0x20]
 18915: 82 10 38                 ra = u64 [sp + 0x38]
 18918: 82 15 30                 s0 = u64 [sp + 0x30]
 18921: 82 16 28                 s1 = u64 [sp + 0x28]
 18924: 95 11 40                 sp = sp + 0x40
 18927: 32 00                    ret
      :                          @1491
 18929: c8 a2 09                 a2 = t0 + a3
 18932: 98 99 01                 a2 = a2 >> 0x1
 18935: d6 99 0b                 a4 = a2 mulhu a2
 18938: ca 99 0c                 a5 = a2 * a2
 18941: db b3 0c                 a5 = t1 if a4 != 0
 18944: aa 8c 17                 jump @1494 if a5 == a1
      :                          @1492
 18947: d8 8c 0b                 a4 = a5 <u a1
 18950: 95 9c 01                 a5 = a2 + 0x1
 18953: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 18956: da b9 02                 t0 = a2 if a4 == 0
 18959: db bc 0a                 a3 = a5 if a4 != 0
 18962: ae a2 df                 jump @1491 if t0 >=u a3
      :                          @1493
 18965: 28 0b                    jump @1496
      :                          @1494
 18967: 64 92                    t0 = a2
 18969: 28 07                    jump @1496
      :                          @1495
 18971: 64 ba                    a3 = a4
 18973: aa 34 3e                 jump @1500 if t2 == t1
      :                          @1496
 18976: 95 22 01                 t0 = t0 + 0x1
 18979: ca 22 09                 a2 = t0 * t0
 18982: c9 89 03                 t1 = a2 - a1
 18985: 33 0c                    a5 = 0
 18987: 64 3a                    a3 = t1
 18989: 01                       fallthrough
      :                          @1497
 18990: c8 ca 0b                 a4 = a3 + a5
 18993: 98 bb 01                 a4 = a4 >> 0x1
 18996: ca bb 04                 t2 = a4 * a4
 18999: d6 bb 05                 s0 = a4 mulhu a4
 19002: 33 09 ff                 a2 = 0xffffffffffffffff
 19005: da 54 09                 a2 = t2 if s0 == 0
 19008: aa 39 db                 jump @1495 if a2 == t1
      :                          @1498
 19011: d8 39 09                 a2 = a2 <u t1
 19014: 95 b5 01                 s0 = a4 + 0x1
 19017: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 19020: da 9b 0a                 a3 = a4 if a2 == 0
 19023: db 95 0c                 a5 = s0 if a2 != 0
 19026: ae ca dc                 jump @1497 if a3 >=u a5
      :                          @1499
 19029: ca aa 04                 t2 = a3 * a3
 19032: ab 34 c8                 jump @1496 if t2 != t1
      :                          @1500
 19035: c9 a2 08                 a1 = t0 - a3
 19038: c8 2a 0a                 a3 = a3 + t0
 19041: 7b 78 08                 u64 [a0 + 0x8] = a1
 19044: 7b 7a 10                 u64 [a0 + 0x10] = a3
 19047: 33 08 01                 a1 = 0x1
 19050: 7b 78                    u64 [a0] = a1
 19052: 82 15 08                 s0 = u64 [sp + 0x8]
 19055: 95 11 10                 sp = sp + 0x10
 19058: 32 00                    ret
      :                          @1501
 19060: 98 aa 01                 a3 = a3 >> 0x1
 19063: ca 77 0c                 a5 = a0 * a0
 19066: 51 0a 38                 jump @1504 if a3 == 0
      :                          @1502
 19069: d6 bc 09                 a2 = a5 mulhu a4
 19072: c9 9c 07                 a0 = a5 - a2
 19075: 98 77 01                 a0 = a0 >> 0x1
 19078: c8 97 07                 a0 = a0 + a2
 19081: 98 77 04                 a0 = a0 >> 0x4
 19084: ca 47 07                 a0 = a0 * t2
 19087: 84 a9 01                 a2 = a3 & 0x1
 19090: c9 7c 07                 a0 = a5 - a0
 19093: 51 09 df                 jump @1501 if a2 == 0
      :                          @1503
 19096: ca 75 08                 a1 = s0 * a0
 19099: d6 b8 09                 a2 = a1 mulhu a4
 19102: c9 98 0c                 a5 = a1 - a2
 19105: 98 cc 01                 a5 = a5 >> 0x1
 19108: c8 c9 09                 a2 = a2 + a5
 19111: 98 99 04                 a2 = a2 >> 0x4
 19114: ca 49 09                 a2 = a2 * t2
 19117: c9 98 05                 s0 = a1 - a2
 19120: 28 c4                    jump @1501
      :                          @1504
 19122: 3a 07 30 00 03           a0 = u64 [0x30030]
 19127: ca 32 09                 a2 = t0 * t1
 19130: d6 79 07                 a0 = a2 mulhu a0
 19133: c9 79 0a                 a3 = a2 - a0
 19136: 98 aa 01                 a3 = a3 >> 0x1
 19139: c8 a7 07                 a0 = a0 + a3
 19142: 98 77 04                 a0 = a0 >> 0x4
 19145: 96 77 15                 a0 = a0 * 0x15
 19148: c9 79 0a                 a3 = a2 - a0
 19151: 3a 09 38 00 03           a2 = u64 [0x30038]
 19156: 95 aa 01                 a3 = a3 + 0x1
 19159: 33 07 01                 a0 = 0x1
 19162: 33 0b 17                 a4 = 0x17
 19165: 28 0b                    jump @1506
      :                          @1505
 19167: 98 aa 01                 a3 = a3 >> 0x1
 19170: ca 88 05                 s0 = a1 * a1
 19173: 51 0a 38                 jump @1508 if a3 == 0
      :                          @1506
 19176: d6 95 0c                 a5 = s0 mulhu a2
 19179: c9 c5 08                 a1 = s0 - a5
 19182: 98 88 01                 a1 = a1 >> 0x1
 19185: c8 c8 08                 a1 = a1 + a5
 19188: 98 88 04                 a1 = a1 >> 0x4
 19191: ca b8 08                 a1 = a1 * a4
 19194: 84 ac 01                 a5 = a3 & 0x1
 19197: c9 85 08                 a1 = s0 - a1
 19200: 51 0c df                 jump @1505 if a5 == 0
      :                          @1507
 19203: ca 87 05                 s0 = a0 * a1
 19206: d6 95 0c                 a5 = s0 mulhu a2
 19209: c9 c5 07                 a0 = s0 - a5
 19212: 98 77 01                 a0 = a0 >> 0x1
 19215: c8 c7 07                 a0 = a0 + a5
 19218: 98 77 04                 a0 = a0 >> 0x4
 19221: ca b7 07                 a0 = a0 * a4
 19224: c9 75 07                 a0 = s0 - a0
 19227: 28 c4                    jump @1505
      :                          @1508
 19229: 82 15 08                 s0 = u64 [sp + 0x8]
 19232: 95 11 10                 sp = sp + 0x10
 19235: 32 00                    ret
      :                          @1509 [@dyn 153]
 19237: 49 11 10                 u64 [sp + 16] = 0
 19240: 33 07 08                 a0 = 0x8
 19243: 7b 17 18                 u64 [sp + 0x18] = a0
 19246: 49 11 20                 u64 [sp + 32] = 0
 19249: 51 06 aa 00              jump @1529 if s1 == 0
      :                          @1510
 19253: 97 66 03                 s1 = s1 << 0x3
 19256: c8 65 03                 t1 = s0 + s1
 19259: 33 06 64                 s1 = 0x64
 19262: 64 52                    t0 = s0
 19264: 7b 13                    u64 [sp] = t1
 19266: 28 13                    jump @1512
      :                          @1511
 19268: 97 89 03                 a2 = a1 << 0x3
 19271: c8 79 09                 a2 = a2 + a0
 19274: 7b 95                    u64 [a2] = s0
 19276: 95 88 01                 a1 = a1 + 0x1
 19279: 7b 18 20                 u64 [sp + 0x20] = a1
 19282: aa 32 4c                 jump @1520 if t0 == t1
      :                          @1512
 19285: 82 18 20                 a1 = u64 [sp + 0x20]
 19288: 82 25                    s0 = u64 [t0]
 19290: 95 22 08                 t0 = t0 + 0x8
 19293: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
 19296: 97 89 03                 a2 = a1 << 0x3
 19299: 01                       fallthrough
      :                          @1513
 19300: 51 09 1b                 jump @1517 if a2 == 0
      :                          @1514
 19303: 82 ac 08                 a5 = u64 [a3 + 0x8]
 19306: 95 ab 08                 a4 = a3 + 0x8
 19309: c8 5c 0c                 a5 = a5 + s0
 19312: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 19315: 64 ba                    a3 = a4
 19317: ac c6 ef                 jump @1513 if s1 <u a5
      :                          @1515
 19320: 7b bc                    u64 [a4] = a5
 19322: ab 32 db                 jump @1512 if t0 != t1
      :                          @1516
 19325: 28 21                    jump @1520
      :                          @1517
 19327: 82 19 10                 a2 = u64 [sp + 0x10]
 19330: ab 98 c2                 jump @1511 if a1 != a2
      :                          @1518
 19333: 95 17 10                 a0 = sp + 0x10
 19336: 7b 12 08                 u64 [sp + 0x8] = t0
 19339: 50 20 34 01 2c d7        ra = 308, jump @708
      :                          @1519 [@dyn 154]
 19345: 82 13                    t1 = u64 [sp]
 19347: 82 12 08                 t0 = u64 [sp + 0x8]
 19350: 82 18 20                 a1 = u64 [sp + 0x20]
 19353: 82 17 18                 a0 = u64 [sp + 0x18]
 19356: 28 a8                    jump @1511
      :                          @1520
 19358: 82 19 10                 a2 = u64 [sp + 0x10]
 19361: 82 17 20                 a0 = u64 [sp + 0x20]
 19364: 51 09 3a                 jump @1530 if a2 == 0
      :                          @1521
 19367: 33 08 00 00 02           a1 = 0x20000
 19372: ac 98 32                 jump @1530 if a1 <u a2
      :                          @1522
 19375: 82 18 18                 a1 = u64 [sp + 0x18]
 19378: 97 99 03                 a2 = a2 << 0x3
 19381: 33 0a 10 01 03           a3 = 0x30110
 19386: 95 aa 00 00 10           a3 = a3 + 0x100000
 19391: 01                       fallthrough
      :                          @1523
 19392: 82 ab                    a4 = u64 [a3]
 19394: c9 ba 0c                 a5 = a3 - a4
 19397: ab 8c 19                 jump @1530 if a5 != a1
      :                          @1524
 19400: c9 9b 0c                 a5 = a4 - a2
 19403: 01                       fallthrough
      :                          @1525
 19404: 82 a6                    s1 = u64 [a3]
 19406: ab b6 f2                 jump @1523 if s1 != a4
      :                          @1526
 19409: 7b ac                    u64 [a3] = a5
 19411: 33 05                    s0 = 0
 19413: 01                       fallthrough
      :                          @1527
 19414: ab b6 ea                 jump @1523 if s1 != a4
      :                          @1528
 19417: 28 05                    jump @1530
      :                          @1529
 19419: 33 07                    a0 = 0
 19421: 01                       fallthrough
      :                          @1530
 19422: 82 10 38                 ra = u64 [sp + 0x38]
 19425: 82 15 30                 s0 = u64 [sp + 0x30]
 19428: 82 16 28                 s1 = u64 [sp + 0x28]
 19431: 95 11 40                 sp = sp + 0x40
 19434: 32 00                    ret
      :                          @1531
 19436: ca c9 09                 a2 = a2 * a5
 19439: 95 00 01                 ra = ra + 0x1
 19442: c8 94 04                 t2 = t2 + a2
 19445: aa 70 47                 jump @1540 if ra == a0
      :                          @1532
 19448: 64 09                    a2 = ra
 19450: 64 7c                    a5 = a0
 19452: 01                       fallthrough
      :                          @1533
 19453: 64 cb                    a4 = a5
 19455: cd c9 0c                 a5 = a2 %u a5
 19458: 64 b9                    a2 = a4
 19460: 52 0c f9                 jump @1533 if a5 != 0
      :                          @1534
 19463: 83 bc                    i32 a5 = a4 + 0
 19465: 51 0c 27                 jump @1539 if a5 == 0
      :                          @1535
 19468: 64 89                    a2 = a1
 19470: aa 2c de                 jump @1531 if a5 == t0
      :                          @1536
 19473: 33 0c 01                 a5 = 0x1
 19476: 64 89                    a2 = a1
 19478: 01                       fallthrough
      :                          @1537
 19479: 83 b5                    i32 s0 = a4 + 0
 19481: 84 b6 01                 s1 = a4 & 0x1
 19484: 33 0a 01                 a3 = 0x1
 19487: db 69 0a                 a3 = a2 if s1 != 0
 19490: ca ca 0c                 a5 = a3 * a5
 19493: 8b bb 01                 i32 a4 = a4 >> 0x1
 19496: ca 99 09                 a2 = a2 * a2
 19499: ac 53 ec                 jump @1537 if t1 <u s0
      :                          @1538
 19502: 28 be                    jump @1531
      :                          @1539
 19504: 33 09 01                 a2 = 0x1
 19507: c8 90 00                 ra = ra + a2
 19510: c8 94 04                 t2 = t2 + a2
 19513: ab 70 bf                 jump @1532 if ra != a0
      :                          @1540
 19516: cb 74 07                 a0 = t2 /u a0
 19519: 82 10 18                 ra = u64 [sp + 0x18]
 19522: 82 15 10                 s0 = u64 [sp + 0x10]
 19525: 82 16 08                 s1 = u64 [sp + 0x8]
 19528: 95 11 20                 sp = sp + 0x20
 19531: 32 00                    ret
      :                          @1541
 19533: 51 07 4f                 jump @1552 if a0 == 0
      :                          @1542
 19536: 33 03                    t1 = 0
 19538: ca 78 02                 t0 = a1 * a0
 19541: 95 7b ff                 a4 = a0 + 0xffffffffffffffff
 19544: 33 09 01                 a2 = 0x1
 19547: 64 8a                    a3 = a1
 19549: 28 05                    jump @1544
      :                          @1543
 19551: 64 8a                    a3 = a1
 19553: 01                       fallthrough
      :                          @1544
 19554: c8 ab 0c                 a5 = a4 + a3
 19557: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 19560: ca c9 09                 a2 = a2 * a5
 19563: 52 0a f7                 jump @1544 if a3 != 0
      :                          @1545
 19566: 95 33 01                 t1 = t1 + 0x1
 19569: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 19572: ab 73 eb                 jump @1543 if t1 != a0
      :                          @1546
 19575: 51 02 2b                 jump @1553 if t0 == 0
      :                          @1547
 19578: 33 08 01                 a1 = 0x1
 19581: 64 27                    a0 = t0
 19583: aa 82 12                 jump @1550 if t0 == a1
      :                          @1548
 19586: 33 07 01                 a0 = 0x1
 19589: 01                       fallthrough
      :                          @1549
 19590: 95 8a 01                 a3 = a1 + 0x1
 19593: ca 78 07                 a0 = a1 * a0
 19596: 64 a8                    a1 = a3
 19598: ab a2 f8                 jump @1549 if t0 != a3
      :                          @1550
 19601: ca 27 07                 a0 = a0 * t0
 19604: 51 09 14                 jump @1554 if a2 == 0
      :                          @1551
 19607: cb 97 07                 a0 = a0 /u a2
 19610: 32 00                    ret
      :                          @1552
 19612: 33 07 01                 a0 = 0x1
 19615: 28 be 13                 jump @1876
      :                          @1553
 19618: 33 07 01                 a0 = 0x1
 19621: 52 09 f2                 jump @1551 if a2 != 0
      :                          @1554
 19624: 00                       trap
      :                          @1555
 19625: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 19628: 7b 10 40                 u64 [sp + 0x40] = ra
 19631: 7b 15 38                 u64 [sp + 0x38] = s0
 19634: 7b 16 30                 u64 [sp + 0x30] = s1
 19637: 95 79 01                 a2 = a0 + 0x1
 19640: 51 09 70 01              jump @1584 if a2 == 0
      :                          @1556
 19644: 64 85                    s0 = a1
 19646: 98 98 3c                 a1 = a2 >> 0x3c
 19649: 52 08 68 01              jump @1585 if a1 != 0
      :                          @1557
 19653: 7b 17 08                 u64 [sp + 0x8] = a0
 19656: 88 82 01                 t0 = a1 <u 0x1
 19659: 7b 19 28                 u64 [sp + 0x28] = a2
 19662: 97 99 03                 a2 = a2 << 0x3
 19665: 97 22 03                 t0 = t0 << 0x3
 19668: 33 04 10 01 03           t2 = 0x30110
 19673: 33 03 00 00 10           t1 = 0x100000
 19678: c8 34 00                 ra = t2 + t1
 19681: 01                       fallthrough
      :                          @1558
 19682: 82 0b                    a4 = u64 [ra]
 19684: c8 9b 0c                 a5 = a4 + a2
 19687: ac bc 40 01              jump @1583 if a5 <u a4
      :                          @1559
 19691: c8 2c 07                 a0 = a5 + t0
 19694: d8 c7 06                 s1 = a0 <u a5
 19697: d8 73 07                 a0 = t1 <u a0
 19700: d4 67 07                 a0 = a0 | s1
 19703: 52 07 30 01              jump @1583 if a0 != 0
      :                          @1560
 19707: c9 c4 06                 s1 = t2 - a5
 19710: c8 36 0a                 a3 = s1 + t1
 19713: 84 a6 07                 s1 = a3 & 0x7
 19716: c8 6c 0c                 a5 = a5 + s1
 19719: 01                       fallthrough
      :                          @1561
 19720: 82 07                    a0 = u64 [ra]
 19722: ab b7 d8                 jump @1558 if a0 != a4
      :                          @1562
 19725: 7b 0c                    u64 [ra] = a5
 19727: c9 6a 06                 s1 = a3 - s1
 19730: 64 67                    a0 = s1
 19732: 33 08                    a1 = 0
 19734: 7b 19                    u64 [sp] = a2
 19736: 50 20 36 01 6c 66        ra = 310, jump @2893
      :                          @1563 [@dyn 155]
 19742: 33 07 01                 a0 = 0x1
 19745: 64 64                    t2 = s1
 19747: 7b 67                    u64 [s1] = a0
 19749: 82 19 08                 a2 = u64 [sp + 0x8]
 19752: 51 09 cc 00              jump @1575 if a2 == 0
      :                          @1564
 19756: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
 19759: 7b 17 20                 u64 [sp + 0x20] = a0
 19762: 33 07 01                 a0 = 0x1
 19765: 82 1c 28                 a5 = u64 [sp + 0x28]
 19768: 33 02 01                 t0 = 0x1
 19771: 28 1a                    jump @1566
      :                          @1565
 19773: 82 19 08                 a2 = u64 [sp + 0x8]
 19776: 82 1a 18                 a3 = u64 [sp + 0x18]
 19779: d8 a9 07                 a0 = a2 <u a3
 19782: 85 77 01                 a0 = a0 ^ 0x1
 19785: 82 18 10                 a1 = u64 [sp + 0x10]
 19788: d2 78 08                 a1 = a1 & a0
 19791: 64 a7                    a0 = a3
 19793: 51 08 93 00              jump @1574 if a1 == 0
      :                          @1566
 19797: ae c7 d1 00              jump @1582 if a0 >=u a5
      :                          @1567
 19801: d8 97 08                 a1 = a0 <u a2
 19804: 7b 18 10                 u64 [sp + 0x10] = a1
 19807: c8 78 08                 a1 = a1 + a0
 19810: 7b 18 18                 u64 [sp + 0x18] = a1
 19813: 97 76 03                 s1 = a0 << 0x3
 19816: c8 46 06                 s1 = s1 + t2
 19819: 82 6b                    a4 = u64 [s1]
 19821: 33 08 01                 a1 = 0x1
 19824: 33 03 02                 t1 = 0x2
 19827: 33 0a 05                 a3 = 0x5
 19830: 33 09 02                 a2 = 0x2
 19833: 28 1e                    jump @1570
      :                          @1568
 19835: 82 1c 28                 a5 = u64 [sp + 0x28]
 19838: 01                       fallthrough
      :                          @1569
 19839: ca 3a 08                 a1 = a3 * t1
 19842: 98 88 01                 a1 = a1 >> 0x1
 19845: 95 a9 02                 a2 = a3 + 0x2
 19848: ca 39 09                 a2 = a2 * t1
 19851: 98 99 01                 a2 = a2 >> 0x1
 19854: 95 33 01                 t1 = t1 + 0x1
 19857: 95 aa 03                 a3 = a3 + 0x3
 19860: ac 87 a9                 jump @1565 if a0 <u a1
      :                          @1570
 19863: c9 87 08                 a1 = a0 - a1
 19866: ae c8 8b 00              jump @1581 if a1 >=u a5
      :                          @1571
 19870: 97 88 03                 a1 = a1 << 0x3
 19873: c8 48 08                 a1 = a1 + t2
 19876: 82 88                    a1 = u64 [a1]
 19878: 83 3c ff                 i32 a5 = t1 + 0xffffffffffffffff
 19881: 84 cc 01                 a5 = a5 & 0x1
 19884: 82 10 20                 ra = u64 [sp + 0x20]
 19887: db c2 00                 ra = t0 if a5 != 0
 19890: ca 08 08                 a1 = a1 * ra
 19893: cd 58 08                 a1 = a1 %u s0
 19896: c8 b8 08                 a1 = a1 + a4
 19899: cd 58 0b                 a4 = a1 %u s0
 19902: 7b 6b                    u64 [s1] = a4
 19904: ac 97 bb                 jump @1568 if a0 <u a2
      :                          @1572
 19907: c9 97 08                 a1 = a0 - a2
 19910: 82 1c 28                 a5 = u64 [sp + 0x28]
 19913: ae c8 5c                 jump @1581 if a1 >=u a5
      :                          @1573
 19916: 97 88 03                 a1 = a1 << 0x3
 19919: c8 48 08                 a1 = a1 + t2
 19922: 82 88                    a1 = u64 [a1]
 19924: ca 08 08                 a1 = a1 * ra
 19927: cd 58 08                 a1 = a1 %u s0
 19930: c8 b8 08                 a1 = a1 + a4
 19933: cd 58 0b                 a4 = a1 %u s0
 19936: 7b 6b                    u64 [s1] = a4
 19938: 28 9d                    jump @1569
      :                          @1574
 19940: 97 97 03                 a0 = a2 << 0x3
 19943: c8 47 07                 a0 = a0 + t2
 19946: 82 77                    a0 = u64 [a0]
 19948: 33 08 00 00 02           a1 = 0x20000
 19953: ac c8 26                 jump @1580 if a1 <u a5
      :                          @1575
 19956: 33 08 10 01 03           a1 = 0x30110
 19961: 95 88 00 00 10           a1 = a1 + 0x100000
 19966: 82 16                    s1 = u64 [sp]
 19968: 01                       fallthrough
      :                          @1576
 19969: 82 89                    a2 = u64 [a1]
 19971: c9 98 0a                 a3 = a1 - a2
 19974: ab 4a 11                 jump @1580 if a3 != t2
      :                          @1577
 19977: c9 69 0a                 a3 = a2 - s1
 19980: 01                       fallthrough
      :                          @1578
 19981: 82 8b                    a4 = u64 [a1]
 19983: ab 9b f2                 jump @1576 if a4 != a2
      :                          @1579
 19986: 7b 8a                    u64 [a1] = a3
 19988: 33 0c                    a5 = 0
 19990: 01                       fallthrough
      :                          @1580
 19991: 82 10 40                 ra = u64 [sp + 0x40]
 19994: 82 15 38                 s0 = u64 [sp + 0x38]
 19997: 82 16 30                 s1 = u64 [sp + 0x30]
 20000: 95 11 48                 sp = sp + 0x48
 20003: 32 00                    ret
      :                          @1581
 20005: 00                       trap
      :                          @1582
 20006: 00                       trap
      :                          @1583
 20007: 00                       trap
      :                          @1584
 20008: 00                       trap
      :                          @1585
 20009: 00                       trap
      :                          @1586
 20010: 51 18 01 ce 15           jump @1916 if a1 == 1
      :                          @1587
 20015: 83 79                    i32 a2 = a0 + 0
 20017: 51 09 39                 jump @1592 if a2 == 0
      :                          @1588
 20020: 33 0b 01                 a4 = 0x1
 20023: 64 8a                    a3 = a1
 20025: aa b9 23                 jump @1591 if a2 == a4
      :                          @1589
 20028: 33 02 03                 t0 = 0x3
 20031: 64 8a                    a3 = a1
 20033: 33 09 01                 a2 = 0x1
 20036: 01                       fallthrough
      :                          @1590
 20037: 83 73                    i32 t1 = a0 + 0
 20039: 84 7b 01                 a4 = a0 & 0x1
 20042: 33 0c 01                 a5 = 0x1
 20045: db ba 0c                 a5 = a3 if a4 != 0
 20048: ca 9c 09                 a2 = a5 * a2
 20051: 8b 77 01                 i32 a0 = a0 >> 0x1
 20054: ca aa 0a                 a3 = a3 * a3
 20057: ac 32 ec                 jump @1590 if t0 <u t1
      :                          @1591
 20060: ca 9a 09                 a2 = a3 * a2
 20063: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 20066: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 20069: cb 89 07                 a0 = a2 /u a1
 20072: 32 00                    ret
      :                          @1592
 20074: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 20077: cb 89 07                 a0 = a2 /u a1
 20080: 28 88 15                 jump @1916
      :                          @1593
 20083: 82 7b                    a4 = u64 [a0]
 20085: 82 7a 08                 a3 = u64 [a0 + 0x8]
 20088: 82 72 18                 t0 = u64 [a0 + 0x18]
 20091: 82 79 10                 a2 = u64 [a0 + 0x10]
 20094: ca b2 0c                 a5 = t0 * a4
 20097: ca a9 08                 a1 = a2 * a3
 20100: 33 07 ff                 a0 = 0xffffffffffffffff
 20103: aa 8c 22 17              jump @1929 if a5 == a1
      :                          @1594
 20107: c9 8c 0c                 a5 = a5 - a1
 20110: 9a b7                    a0 = -a4
 20112: e3 7b 07                 a0 = maxs(a4, a0)
 20115: 9a a8                    a1 = -a3
 20117: e3 8a 08                 a1 = maxs(a3, a1)
 20120: c8 78 03                 t1 = a1 + a0
 20123: 9a 9b                    a4 = -a2
 20125: e3 b9 0a                 a3 = maxs(a2, a4)
 20128: 9a 2b                    a4 = -t0
 20130: e3 b2 0b                 a4 = maxs(t0, a4)
 20133: c8 ab 09                 a2 = a4 + a3
 20136: e3 93 09                 a2 = maxs(t1, a2)
 20139: c8 b8 08                 a1 = a1 + a4
 20142: c8 a7 07                 a0 = a0 + a3
 20145: e3 78 07                 a0 = maxs(a1, a0)
 20148: ca 79 07                 a0 = a2 * a0
 20151: 9a c8                    a1 = -a5
 20153: e3 8c 08                 a1 = maxs(a5, a1)
 20156: cb 87 07                 a0 = a0 /u a1
 20159: 28 ea 16                 jump @1929
      :                          @1595
 20162: 55 17 02 0b              jump @1597 if a0 >=u 2
      :                          @1596
 20166: 33 07                    a0 = 0
 20168: 64 c8                    a1 = a5
 20170: 28 c1 17                 jump @1942
      :                          @1597
 20173: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 20176: 7b 10 18                 u64 [sp + 0x18] = ra
 20179: 7b 15 10                 u64 [sp + 0x10] = s0
 20182: 7b 16 08                 u64 [sp + 0x8] = s1
 20185: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 20190: 97 9a 0d                 a3 = a2 << 0xd
 20193: d3 a9 09                 a2 = a2 ^ a3
 20196: 98 9a 07                 a3 = a2 >> 0x7
 20199: d3 a9 09                 a2 = a2 ^ a3
 20202: 97 9a 11                 a3 = a2 << 0x11
 20205: d3 a9 09                 a2 = a2 ^ a3
 20208: 3a 0a 40 00 03           a3 = u64 [0x30040]
 20213: 3e 09 e0 00 03           u64 [0x300e0] = a2
 20218: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 20223: 49 01                    u64 [sp + 0] = 0
 20225: ca a9 0c                 a5 = a2 * a3
 20228: 97 b9 0d                 a2 = a4 << 0xd
 20231: d3 b9 09                 a2 = a2 ^ a4
 20234: 98 9b 07                 a4 = a2 >> 0x7
 20237: d3 b9 09                 a2 = a2 ^ a4
 20240: 97 9b 11                 a4 = a2 << 0x11
 20243: d3 b9 09                 a2 = a2 ^ a4
 20246: 3e 09 e0 00 03           u64 [0x300e0] = a2
 20251: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 20256: ca a9 09                 a2 = a2 * a3
 20259: cd 79 09                 a2 = a2 %u a0
 20262: 97 6b 0d                 a4 = s1 << 0xd
 20265: d3 b6 06                 s1 = s1 ^ a4
 20268: 98 6b 07                 a4 = s1 >> 0x7
 20271: d3 b6 06                 s1 = s1 ^ a4
 20274: 97 6b 11                 a4 = s1 << 0x11
 20277: d3 6b 0b                 a4 = a4 ^ s1
 20280: ca ab 0a                 a3 = a4 * a3
 20283: 3e 0b e0 00 03           u64 [0x300e0] = a4
 20288: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 20291: cd 7c 03                 t1 = a5 %u a0
 20294: cd 8a 00                 ra = a3 %u a1
 20297: 95 00 01                 ra = ra + 0x1
 20300: 33 04 01                 t2 = 0x1
 20303: 33 02 01                 t0 = 0x1
 20306: 28 0f                    jump @1600
      :                          @1598
 20308: 33 0c 01                 a5 = 0x1
 20311: 64 a3                    t1 = a3
 20313: 01                       fallthrough
      :                          @1599
 20314: 97 44 01                 t2 = t2 << 0x1
 20317: 52 1c 01 6b              jump @1609 if a5 != 1
      :                          @1600
 20321: 64 3a                    a3 = t1
 20323: 64 48                    a1 = t2
 20325: 51 04 ef                 jump @1598 if t2 == 0
      :                          @1601
 20328: ca 33 0b                 a4 = t1 * t1
 20331: c8 9b 0b                 a4 = a4 + a2
 20334: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 20337: cd 7b 03                 t1 = a4 %u a0
 20340: 52 08 f4                 jump @1601 if a1 != 0
      :                          @1602
 20343: 33 06                    s1 = 0
 20345: 7b 13                    u64 [sp] = t1
 20347: 64 08                    a1 = ra
 20349: 28 07                    jump @1604
      :                          @1603
 20351: 7b 13                    u64 [sp] = t1
 20353: 64 08                    a1 = ra
 20355: 01                       fallthrough
      :                          @1604
 20356: ca 33 0b                 a4 = t1 * t1
 20359: c8 9b 0b                 a4 = a4 + a2
 20362: cd 7b 03                 t1 = a4 %u a0
 20365: d8 a3 0b                 a4 = t1 <u a3
 20368: c9 3a 0c                 a5 = a3 - t1
 20371: c9 a3 05                 s0 = t1 - a3
 20374: db bc 05                 s0 = a5 if a4 != 0
 20377: ca 25 0b                 a4 = s0 * t0
 20380: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 20383: cd 7b 02                 t0 = a4 %u a0
 20386: 52 08 e2                 jump @1604 if a1 != 0
      :                          @1605
 20389: 64 2b                    a4 = t0
 20391: 64 78                    a1 = a0
 20393: 01                       fallthrough
      :                          @1606
 20394: 64 8c                    a5 = a1
 20396: cd 8b 08                 a1 = a4 %u a1
 20399: 64 cb                    a4 = a5
 20401: 52 08 f9                 jump @1606 if a1 != 0
      :                          @1607
 20404: c8 06 06                 s1 = s1 + ra
 20407: d8 46 08                 a1 = s1 <u t2
 20410: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 20413: 88 bb 01                 a4 = a4 <u 0x1
 20416: d2 b8 08                 a1 = a1 & a4
 20419: 52 08 bc                 jump @1603 if a1 != 0
      :                          @1608
 20422: 28 94                    jump @1599
      :                          @1609
 20424: 82 15                    s0 = u64 [sp]
 20426: ab 7c 2c                 jump @1614 if a5 != a0
      :                          @1610
 20429: 33 0b 01                 a4 = 0x1
 20432: 01                       fallthrough
      :                          @1611
 20433: ca 55 08                 a1 = s0 * s0
 20436: c8 98 08                 a1 = a1 + a2
 20439: cd 78 05                 s0 = a1 %u a0
 20442: d8 a5 0c                 a5 = s0 <u a3
 20445: c9 5a 06                 s1 = a3 - s0
 20448: c9 a5 08                 a1 = s0 - a3
 20451: db c6 08                 a1 = s1 if a5 != 0
 20454: 64 76                    s1 = a0
 20456: 01                       fallthrough
      :                          @1612
 20457: 64 6c                    a5 = s1
 20459: cd 68 06                 s1 = a1 %u s1
 20462: 64 c8                    a1 = a5
 20464: 52 06 f9                 jump @1612 if s1 != 0
      :                          @1613
 20467: ae cb de                 jump @1611 if a4 >=u a5
      :                          @1614
 20470: d3 c7 07                 a0 = a0 ^ a5
 20473: 8e 77                    a0 = a0 >u 0
 20475: 82 10 18                 ra = u64 [sp + 0x18]
 20478: 82 15 10                 s0 = u64 [sp + 0x10]
 20481: 82 16 08                 s1 = u64 [sp + 0x8]
 20484: 95 11 20                 sp = sp + 0x20
 20487: 64 c8                    a1 = a5
 20489: 32 00                    ret
      :                          @1615
 20491: 33 0b 02                 a4 = 0x2
 20494: aa b9 2e                 jump @1624 if a2 == a4
      :                          @1616
 20497: 64 98                    a1 = a2
 20499: 95 99 01                 a2 = a2 + 0x1
 20502: ac 79 fb                 jump @1616 if a2 <u a0
      :                          @1617
 20505: 84 9b 01                 a4 = a2 & 0x1
 20508: 51 0b ef                 jump @1615 if a4 == 0
      :                          @1618
 20511: ac a9 1a                 jump @1623 if a2 <u a3
      :                          @1619
 20514: 33 0b 03                 a4 = 0x3
 20517: 01                       fallthrough
      :                          @1620
 20518: 51 0b 03 01              jump @1642 if a4 == 0
      :                          @1621
 20522: cd b9 0c                 a5 = a2 %u a4
 20525: 51 0c e4                 jump @1616 if a5 == 0
      :                          @1622
 20528: 95 bb 02                 a4 = a4 + 0x2
 20531: ca bb 0c                 a5 = a4 * a4
 20534: ae c9 f0                 jump @1620 if a2 >=u a5
      :                          @1623
 20537: 64 9b                    a4 = a2
 20539: 01                       fallthrough
      :                          @1624
 20540: 7b 1b 10                 u64 [sp + 0x10] = a4
 20543: 33 09 e0 00 03           a2 = 0x300e0
 20548: 3a 0a 50 00 03           a3 = u64 [0x30050]
 20553: 33 02 e8 03              t0 = 0x3e8
 20557: 33 0c 02                 a5 = 0x2
 20560: 33 04 09                 t2 = 0x9
 20563: 01                       fallthrough
      :                          @1625
 20564: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 20569: 97 7b 0d                 a4 = a0 << 0xd
 20572: d3 b7 07                 a0 = a0 ^ a4
 20575: 98 7b 07                 a4 = a0 >> 0x7
 20578: d3 b7 07                 a0 = a0 ^ a4
 20581: 97 7b 11                 a4 = a0 << 0x11
 20584: d3 b7 07                 a0 = a0 ^ a4
 20587: ca 37 0b                 a4 = a0 * t1
 20590: 3e 07 e0 00 03           u64 [0x300e0] = a0
 20595: 98 b7 03                 a0 = a4 >> 0x3
 20598: d6 a7 07                 a0 = a0 mulhu a3
 20601: 98 77 04                 a0 = a0 >> 0x4
 20604: ca 27 07                 a0 = a0 * t0
 20607: c9 7b 0b                 a4 = a4 - a0
 20610: 95 b7 64                 a0 = a4 + 0x64
 20613: 28 08                    jump @1627
      :                          @1626
 20615: 33 05 02                 s0 = 0x2
 20618: aa 57 2e                 jump @1635 if a0 == s0
      :                          @1627
 20621: 64 76                    s1 = a0
 20623: 95 77 01                 a0 = a0 + 0x1
 20626: ac c7 fb                 jump @1627 if a0 <u a5
      :                          @1628
 20629: 84 7b 01                 a4 = a0 & 0x1
 20632: 51 0b ef                 jump @1626 if a4 == 0
      :                          @1629
 20635: ac 47 1a                 jump @1634 if a0 <u t2
      :                          @1630
 20638: 33 05 03                 s0 = 0x3
 20641: 01                       fallthrough
      :                          @1631
 20642: 51 05 87 00              jump @1642 if s0 == 0
      :                          @1632
 20646: cd 57 0b                 a4 = a0 %u s0
 20649: 51 0b e4                 jump @1627 if a4 == 0
      :                          @1633
 20652: 95 55 02                 s0 = s0 + 0x2
 20655: ca 55 0b                 a4 = s0 * s0
 20658: ae b7 f0                 jump @1631 if a0 >=u a4
      :                          @1634
 20661: 64 75                    s0 = a0
 20663: 01                       fallthrough
      :                          @1635
 20664: aa 86 9c                 jump @1625 if s1 == a1
      :                          @1636
 20667: ca 86 06                 s1 = s1 * a1
 20670: 51 06 6b                 jump @1642 if s1 == 0
      :                          @1637
 20673: 7b 10 08                 u64 [sp + 0x8] = ra
 20676: 33 07 01 00 01           a0 = 0x10001
 20681: cd 67 08                 a1 = a0 %u s1
 20684: 95 17 18                 a0 = sp + 0x18
 20687: 7b 18                    u64 [sp] = a1
 20689: 64 69                    a2 = s1
 20691: 50 20 38 01 67 d8        ra = 312, jump @788
      :                          @1638 [@dyn 156]
 20697: 82 17 18                 a0 = u64 [sp + 0x18]
 20700: 52 17 01 4f              jump @1644 if a0 != 1
      :                          @1639
 20704: 82 17 20                 a0 = u64 [sp + 0x20]
 20707: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 20717: d3 87 09                 a2 = a0 ^ a1
 20720: e1 69 09                 a2 = a2 | ~s1
 20723: 82 1a 08                 a3 = u64 [sp + 0x8]
 20726: 51 09 34                 jump @1643 if a2 == 0
      :                          @1640
 20729: ce 67 07                 a0 = a0 %s s1
 20732: c8 67 07                 a0 = a0 + s1
 20735: d3 78 08                 a1 = a1 ^ a0
 20738: e1 68 08                 a1 = a1 | ~s1
 20741: 51 08 25                 jump @1643 if a1 == 0
      :                          @1641
 20744: ce 67 07                 a0 = a0 %s s1
 20747: 82 18 10                 a1 = u64 [sp + 0x10]
 20750: ca 85 08                 a1 = s0 * a1
 20753: 7b a8                    u64 [a3] = a1
 20755: 82 18                    a1 = u64 [sp]
 20757: 7b a8 08                 u64 [a3 + 0x8] = a1
 20760: 7b a7 10                 u64 [a3 + 0x10] = a0
 20763: 82 10 40                 ra = u64 [sp + 0x40]
 20766: 82 15 38                 s0 = u64 [sp + 0x38]
 20769: 82 16 30                 s1 = u64 [sp + 0x30]
 20772: 95 11 48                 sp = sp + 0x48
 20775: 32 00                    ret
      :                          @1642
 20777: 00                       trap
      :                          @1643
 20778: 00                       trap
      :                          @1644
 20779: 00                       trap
      :                          @1645
 20780: 98 77 01                 a0 = a0 >> 0x1
 20783: ca aa 0a                 a3 = a3 * a3
 20786: 51 07 14                 jump @1648 if a0 == 0
      :                          @1646
 20789: 84 7b 01                 a4 = a0 & 0x1
 20792: cd 8a 0a                 a3 = a3 %u a1
 20795: 51 0b f1                 jump @1645 if a4 == 0
      :                          @1647
 20798: ca 6a 0b                 a4 = a3 * s1
 20801: cd 8b 06                 s1 = a4 %u a1
 20804: 28 e8                    jump @1645
      :                          @1648
 20806: 95 17 10                 a0 = sp + 0x10
 20809: 64 98                    a1 = a2
 20811: 64 59                    a2 = s0
 20813: 50 20 3a 01 ed d7        ra = 314, jump @788
      :                          @1649 [@dyn 157]
 20819: 82 17 10                 a0 = u64 [sp + 0x10]
 20822: 52 17 01 52              jump @1654 if a0 != 1
      :                          @1650
 20826: 82 17 18                 a0 = u64 [sp + 0x18]
 20829: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 20839: d3 87 09                 a2 = a0 ^ a1
 20842: e1 59 09                 a2 = a2 | ~s0
 20845: 51 09 3a                 jump @1653 if a2 == 0
      :                          @1651
 20848: ce 57 07                 a0 = a0 %s s0
 20851: c8 57 07                 a0 = a0 + s0
 20854: d3 78 08                 a1 = a1 ^ a0
 20857: e1 58 08                 a1 = a1 | ~s0
 20860: 51 08 2b                 jump @1653 if a1 == 0
      :                          @1652
 20863: ce 57 08                 a1 = a0 %s s0
 20866: cd 56 07                 a0 = s1 %u s0
 20869: 82 19 08                 a2 = u64 [sp + 0x8]
 20872: ca 97 09                 a2 = a0 * a2
 20875: 82 1a                    a3 = u64 [sp]
 20877: c8 a9 09                 a2 = a2 + a3
 20880: cd 59 09                 a2 = a2 %u s0
 20883: ca 89 08                 a1 = a2 * a1
 20886: cd 58 08                 a1 = a1 %u s0
 20889: 82 10 38                 ra = u64 [sp + 0x38]
 20892: 82 15 30                 s0 = u64 [sp + 0x30]
 20895: 82 16 28                 s1 = u64 [sp + 0x28]
 20898: 95 11 40                 sp = sp + 0x40
 20901: 32 00                    ret
      :                          @1653
 20903: 00                       trap
      :                          @1654
 20904: 00                       trap
      :                          @1655
 20905: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 20908: 7b 10 48                 u64 [sp + 0x48] = ra
 20911: 7b 15 40                 u64 [sp + 0x40] = s0
 20914: 7b 16 38                 u64 [sp + 0x38] = s1
 20917: 88 82 01                 t0 = a1 <u 0x1
 20920: d8 b8 06                 s1 = a1 <u a4
 20923: 85 63 01                 t1 = s1 ^ 0x1
 20926: 88 96 01                 s1 = a2 <u 0x1
 20929: d4 26 05                 s0 = s1 | t0
 20932: d4 35 05                 s0 = s0 | t1
 20935: d8 b9 06                 s1 = a2 <u a4
 20938: 85 66 01                 s1 = s1 ^ 0x1
 20941: d4 56 02                 t0 = s1 | s0
 20944: 51 02 08                 jump @1657 if t0 == 0
      :                          @1656
 20947: 33 07                    a0 = 0
 20949: 28 c2 00                 jump @1672
      :                          @1657
 20952: 64 45                    s0 = t2
 20954: 64 c6                    s1 = a5
 20956: 7b 17                    u64 [sp] = a0
 20958: 7b 1a 08                 u64 [sp + 0x8] = a3
 20961: 7b 18 10                 u64 [sp + 0x10] = a1
 20964: 95 17 20                 a0 = sp + 0x20
 20967: 64 98                    a1 = a2
 20969: 64 b9                    a2 = a4
 20971: 7b 1b 18                 u64 [sp + 0x18] = a4
 20974: 50 20 3c 01 4c d7        ra = 316, jump @788
      :                          @1658 [@dyn 158]
 20980: 82 17 20                 a0 = u64 [sp + 0x20]
 20983: 52 17 01 af 00           jump @1674 if a0 != 1
      :                          @1659
 20988: 82 17 28                 a0 = u64 [sp + 0x28]
 20991: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 21001: d3 87 09                 a2 = a0 ^ a1
 21004: 82 12 18                 t0 = u64 [sp + 0x18]
 21007: e1 29 09                 a2 = a2 | ~t0
 21010: 51 09 93 00              jump @1673 if a2 == 0
      :                          @1660
 21014: ce 27 07                 a0 = a0 %s t0
 21017: c8 27 07                 a0 = a0 + t0
 21020: d3 78 08                 a1 = a1 ^ a0
 21023: e1 28 08                 a1 = a1 | ~t0
 21026: 51 08 83 00              jump @1673 if a1 == 0
      :                          @1661
 21030: ce 27 08                 a1 = a0 %s t0
 21033: 82 13 10                 t1 = u64 [sp + 0x10]
 21036: ca 38 07                 a0 = a1 * t1
 21039: cd 27 07                 a0 = a0 %u t0
 21042: 82 19                    a2 = u64 [sp]
 21044: ca 98 08                 a1 = a1 * a2
 21047: cd 28 0a                 a3 = a1 %u t0
 21050: 33 08 01                 a1 = 0x1
 21053: 33 09 01                 a2 = 0x1
 21056: 82 14 08                 t2 = u64 [sp + 0x8]
 21059: 51 0a 22                 jump @1666 if a3 == 0
      :                          @1662
 21062: 33 09 01                 a2 = 0x1
 21065: 28 0b                    jump @1664
      :                          @1663
 21067: 98 aa 01                 a3 = a3 >> 0x1
 21070: ca bb 06                 s1 = a4 * a4
 21073: 51 0a 14                 jump @1666 if a3 == 0
      :                          @1664
 21076: 84 ac 01                 a5 = a3 & 0x1
 21079: cd 46 0b                 a4 = s1 %u t2
 21082: 51 0c f1                 jump @1663 if a5 == 0
      :                          @1665
 21085: ca 9b 09                 a2 = a4 * a2
 21088: cd 49 09                 a2 = a2 %u t2
 21091: 28 e8                    jump @1663
      :                          @1666
 21093: 51 07 22                 jump @1671 if a0 == 0
      :                          @1667
 21096: 33 08 01                 a1 = 0x1
 21099: 28 0b                    jump @1669
      :                          @1668
 21101: 98 77 01                 a0 = a0 >> 0x1
 21104: ca aa 05                 s0 = a3 * a3
 21107: 51 07 14                 jump @1671 if a0 == 0
      :                          @1669
 21110: 84 7b 01                 a4 = a0 & 0x1
 21113: cd 45 0a                 a3 = s0 %u t2
 21116: 51 0b f1                 jump @1668 if a4 == 0
      :                          @1670
 21119: ca 8a 08                 a1 = a3 * a1
 21122: cd 48 08                 a1 = a1 %u t2
 21125: 28 e8                    jump @1668
      :                          @1671
 21127: ca 98 07                 a0 = a1 * a2
 21130: cd 47 07                 a0 = a0 %u t2
 21133: cd 27 07                 a0 = a0 %u t0
 21136: d3 37 07                 a0 = a0 ^ t1
 21139: 88 77 01                 a0 = a0 <u 0x1
 21142: 01                       fallthrough
      :                          @1672
 21143: 82 10 48                 ra = u64 [sp + 0x48]
 21146: 82 15 40                 s0 = u64 [sp + 0x40]
 21149: 82 16 38                 s1 = u64 [sp + 0x38]
 21152: 95 11 50                 sp = sp + 0x50
 21155: 32 00                    ret
      :                          @1673
 21157: 00                       trap
      :                          @1674
 21158: 00                       trap
      :                          @1675
 21159: 82 4b                    a4 = u64 [t2]
 21161: c8 9b 0c                 a5 = a4 + a2
 21164: ac bc d9 00              jump @1696 if a5 <u a4
      :                          @1676
 21168: 95 c8 08                 a1 = a5 + 0x8
 21171: d8 c8 06                 s1 = a1 <u a5
 21174: d8 82 08                 a1 = t0 <u a1
 21177: d4 68 08                 a1 = a1 | s1
 21180: 52 08 c9 00              jump @1696 if a1 != 0
      :                          @1677
 21184: c9 c3 06                 s1 = t1 - a5
 21187: c8 26 06                 s1 = s1 + t0
 21190: 84 68 07                 a1 = s1 & 0x7
 21193: c8 8c 0c                 a5 = a5 + a1
 21196: 01                       fallthrough
      :                          @1678
 21197: 82 47                    a0 = u64 [t2]
 21199: ab b7 d8                 jump @1675 if a0 != a4
      :                          @1679
 21202: 7b 4c                    u64 [t2] = a5
 21204: c9 86 06                 s1 = s1 - a1
 21207: 64 67                    a0 = s1
 21209: 33 08                    a1 = 0
 21211: 7b 1a 10                 u64 [sp + 0x10] = a3
 21214: 64 05                    s0 = ra
 21216: 50 20 3e 01 a4 60        ra = 318, jump @2893
      :                          @1680 [@dyn 159]
 21222: 64 64                    t2 = s1
 21224: 64 56                    s1 = s0
 21226: 82 1a 10                 a3 = u64 [sp + 0x10]
 21229: 33 07                    a0 = 0
 21231: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 21241: 33 02 02                 t0 = 0x2
 21244: 82 13 18                 t1 = u64 [sp + 0x18]
 21247: 01                       fallthrough
      :                          @1681
 21248: 51 07 35                 jump @1686 if a0 == 0
      :                          @1682
 21251: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 21254: ac 8a 7e                 jump @1695 if a3 <u a1
      :                          @1683
 21257: 97 88 03                 a1 = a1 << 0x3
 21260: c8 48 08                 a1 = a1 + t2
 21263: 82 88                    a1 = u64 [a1]
 21265: 82 6b 08                 a4 = u64 [s1 + 0x8]
 21268: ca 8b 08                 a1 = a4 * a1
 21271: 9a 8b                    a4 = -a1
 21273: ac 27 1f                 jump @1687 if a0 <u t0
      :                          @1684
 21276: 95 78 fe                 a1 = a0 + 0xfffffffffffffffe
 21279: ac 8a 65                 jump @1695 if a3 <u a1
      :                          @1685
 21282: 97 88 03                 a1 = a1 << 0x3
 21285: c8 48 08                 a1 = a1 + t2
 21288: 82 88                    a1 = u64 [a1]
 21290: 82 6c 10                 a5 = u64 [s1 + 0x10]
 21293: ca 8c 08                 a1 = a5 * a1
 21296: c9 8b 0b                 a4 = a4 - a1
 21299: 28 05                    jump @1687
      :                          @1686
 21301: 82 3b                    a4 = u64 [t1]
 21303: 01                       fallthrough
      :                          @1687
 21304: 82 68                    a1 = u64 [s1]
 21306: 51 08 47                 jump @1692 if a1 == 0
      :                          @1688
 21309: d3 9b 0c                 a5 = a4 ^ a2
 21312: e1 8c 0c                 a5 = a5 | ~a1
 21315: 51 0c 3f                 jump @1693 if a5 == 0
      :                          @1689
 21318: ac 7a 3d                 jump @1694 if a3 <u a0
      :                          @1690
 21321: d8 a7 0c                 a5 = a0 <u a3
 21324: 97 75 03                 s0 = a0 << 0x3
 21327: c8 c7 07                 a0 = a0 + a5
 21330: c8 45 05                 s0 = s0 + t2
 21333: cc 8b 08                 a1 = a4 /s a1
 21336: d8 7a 0b                 a4 = a3 <u a0
 21339: 85 bb 01                 a4 = a4 ^ 0x1
 21342: d2 cb 0b                 a4 = a4 & a5
 21345: 7b 58                    u64 [s0] = a1
 21347: 52 0b 9d                 jump @1681 if a4 != 0
      :                          @1691
 21350: 82 17 08                 a0 = u64 [sp + 0x8]
 21353: 82 18                    a1 = u64 [sp]
 21355: 7b 87                    u64 [a1] = a0
 21357: 7b 84 08                 u64 [a1 + 0x8] = t2
 21360: 7b 87 10                 u64 [a1 + 0x10] = a0
 21363: 82 10 30                 ra = u64 [sp + 0x30]
 21366: 82 15 28                 s0 = u64 [sp + 0x28]
 21369: 82 16 20                 s1 = u64 [sp + 0x20]
 21372: 95 11 38                 sp = sp + 0x38
 21375: 32 00                    ret
      :                          @1692
 21377: 00                       trap
      :                          @1693
 21378: 00                       trap
      :                          @1694
 21379: 00                       trap
      :                          @1695
 21380: 00                       trap
      :                          @1696
 21381: 00                       trap
      :                          @1697
 21382: 33 02                    t0 = 0
 21384: 51 08 30                 jump @1702 if a1 == 0
      :                          @1698
 21387: 64 83                    t1 = a1
 21389: 64 8b                    a4 = a1
 21391: 01                       fallthrough
      :                          @1699
 21392: 98 bb 01                 a4 = a4 >> 0x1
 21395: c8 2b 0b                 a4 = a4 + t0
 21398: 97 bc 03                 a5 = a4 << 0x3
 21401: c8 7c 0c                 a5 = a5 + a0
 21404: 82 cc                    a5 = u64 [a5]
 21406: aa 9c 29                 jump @1704 if a5 == a2
      :                          @1700
 21409: d9 9c 04                 t2 = a5 <s a2
 21412: d9 c9 0c                 a5 = a2 <s a5
 21415: db cb 03                 t1 = a4 if a5 != 0
 21418: 95 bb 01                 a4 = a4 + 0x1
 21421: db 4b 02                 t0 = a4 if t2 != 0
 21424: c9 23 0b                 a4 = t1 - t0
 21427: ac 32 dd                 jump @1699 if t0 <u t1
      :                          @1701
 21430: 28 19                    jump @1705
      :                          @1702
 21432: 33 0c                    a5 = 0
 21434: 33 07                    a0 = 0
 21436: 28 22 14                 jump @1957
      :                          @1703
 21439: e4 2c 07                 a0 = maxu(a5, t0)
 21442: c9 27 07                 a0 = a0 - t0
 21445: 32 00                    ret
      :                          @1704
 21447: 64 b2                    t0 = a4
 21449: 33 09                    a2 = 0
 21451: 64 8b                    a4 = a1
 21453: 28 07                    jump @1706
      :                          @1705
 21455: 33 09                    a2 = 0
 21457: 64 8b                    a4 = a1
 21459: 01                       fallthrough
      :                          @1706
 21460: 98 bb 01                 a4 = a4 >> 0x1
 21463: c8 9b 0c                 a5 = a4 + a2
 21466: 97 cb 03                 a4 = a5 << 0x3
 21469: c8 7b 0b                 a4 = a4 + a0
 21472: 82 bb                    a4 = u64 [a4]
 21474: aa ab dd                 jump @1703 if a4 == a3
      :                          @1707
 21477: d9 ab 03                 t1 = a4 <s a3
 21480: d9 ba 0b                 a4 = a3 <s a4
 21483: db bc 08                 a1 = a5 if a4 != 0
 21486: 95 cc 01                 a5 = a5 + 0x1
 21489: db 3c 09                 a2 = a5 if t1 != 0
 21492: c9 98 0b                 a4 = a1 - a2
 21495: ac 89 dd                 jump @1706 if a2 <u a1
      :                          @1708
 21498: e4 29 07                 a0 = maxu(a2, t0)
 21501: c9 27 07                 a0 = a0 - t0
 21504: 32 00                    ret
      :                          @1709
 21506: 95 11 78 fd              sp = sp + 0xfffffffffffffd78
 21510: 7b 10 80 02              u64 [sp + 0x280] = ra
 21514: 7b 15 78 02              u64 [sp + 0x278] = s0
 21518: 7b 16 70 02              u64 [sp + 0x270] = s1
 21522: 78 17 27                 u8 [sp + 0x27] = a0
 21525: 84 75 ff 00              s0 = a0 & 0xff
 21529: 33 06 34                 s1 = 0x34
 21532: 33 00 40 01              ra = 0x140
 21536: 0a                       ecalli 0 // 'gas'
 21537: 01                       fallthrough
      :                          @1710 [@dyn 160]
 21538: 64 72                    t0 = a0
 21540: 7b 17 18                 u64 [sp + 0x18] = a0
 21543: ae 56 06                 jump @1712 if s1 >=u s0
      :                          @1711
 21546: 28 e6 47                 jump @2490
      :                          @1712
 21549: 97 55 02                 s0 = s0 << 0x2
 21552: 33 07 00 00 01           a0 = 0x10000
 21557: c8 57 07                 a0 = a0 + s0
 21560: 81 77                    a0 = i32 [a0]
 21562: 32 07                    jump [a0]
      :                          @1713 [@dyn 161]
 21564: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 21569: 97 89 0d                 a2 = a1 << 0xd
 21572: d3 98 08                 a1 = a1 ^ a2
 21575: 98 89 07                 a2 = a1 >> 0x7
 21578: d3 98 08                 a1 = a1 ^ a2
 21581: 3a 09 60 00 03           a2 = u64 [0x30060]
 21586: 97 8a 11                 a3 = a1 << 0x11
 21589: d3 a8 08                 a1 = a1 ^ a3
 21592: ca 98 09                 a2 = a1 * a2
 21595: 3e 08 e0 00 03           u64 [0x300e0] = a1
 21600: 14 07 89 88 88 88 88 88 88 88 a0 = 0x8888888888888889
 21610: d6 79 07                 a0 = a2 mulhu a0
 21613: 98 77 04                 a0 = a0 >> 0x4
 21616: 96 77 1e                 a0 = a0 * 0x1e
 21619: c9 79 08                 a1 = a2 - a0
 21622: bf 79 09                 i32 a2 = a2 - a0
 21625: 33 07 03                 a0 = 0x3
 21628: 7a 18 b0 00              u32 [sp + 0xb0] = a1
 21632: ac 79 06                 jump @1715 if a2 <u a0
      :                          @1714
 21635: 28 19 48                 jump @2500
      :                          @1715
 21638: 97 88 03                 a1 = a1 << 0x3
 21641: 33 07 60 10 01           a0 = 0x11060
 21646: c8 87 07                 a0 = a0 + a1
 21649: 82 7b                    a4 = u64 [a0]
 21651: 28 30 48                 jump @2502
      :                          @1716 [@dyn 162]
 21654: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 21659: 3a 08 60 00 03           a1 = u64 [0x30060]
 21664: 97 9a 0d                 a3 = a2 << 0xd
 21667: d3 a9 09                 a2 = a2 ^ a3
 21670: 98 9a 07                 a3 = a2 >> 0x7
 21673: d3 a9 09                 a2 = a2 ^ a3
 21676: 97 9a 11                 a3 = a2 << 0x11
 21679: d3 a9 09                 a2 = a2 ^ a3
 21682: ca 89 0a                 a3 = a2 * a1
 21685: 3e 09 e0 00 03           u64 [0x300e0] = a2
 21690: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
 21700: d6 9a 09                 a2 = a3 mulhu a2
 21703: 98 99 04                 a2 = a2 >> 0x4
 21706: 33 0b 14                 a4 = 0x14
 21709: ca b9 09                 a2 = a2 * a4
 21712: c9 9a 0a                 a3 = a3 - a2
 21715: 95 aa 01                 a3 = a3 + 0x1
 21718: 7b 1a 68 02              u64 [sp + 0x268] = a3
 21722: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 21727: 97 9a 0d                 a3 = a2 << 0xd
 21730: d3 a9 09                 a2 = a2 ^ a3
 21733: 98 9a 07                 a3 = a2 >> 0x7
 21736: d3 a9 09                 a2 = a2 ^ a3
 21739: 97 9a 11                 a3 = a2 << 0x11
 21742: d3 a9 09                 a2 = a2 ^ a3
 21745: 3e 09 e0 00 03           u64 [0x300e0] = a2
 21750: 82 17 68 02              a0 = u64 [sp + 0x268]
 21754: 52 07 06                 jump @1718 if a0 != 0
      :                          @1717
 21757: 28 c1 4b                 jump @2555
      :                          @1718
 21760: ca 89 08                 a1 = a2 * a1
 21763: cd 78 08                 a1 = a1 %u a0
 21766: 95 88 01                 a1 = a1 + 0x1
 21769: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 21773: 50 20 46 01 e0 f1        ra = 326, jump @1429
      :                          @1719 [@dyn 163]
 21779: 7b 17 90 00              u64 [sp + 0x90] = a0
 21783: 95 17 68 02              a0 = sp + 0x268
 21787: 7b 17 50 01              u64 [sp + 0x150] = a0
 21791: 33 07 50 03              a0 = 0x350
 21795: 7b 17 58 01              u64 [sp + 0x158] = a0
 21799: 95 18 b0 00              a1 = sp + 0xb0
 21803: 7b 18 60 01              u64 [sp + 0x160] = a1
 21807: 7b 17 68 01              u64 [sp + 0x168] = a0
 21811: 95 18 90 00              a1 = sp + 0x90
 21815: 7b 18 70 01              u64 [sp + 0x170] = a1
 21819: 7b 17 78 01              u64 [sp + 0x178] = a0
 21823: 33 07 88 01 01           a0 = 0x10188
 21828: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 21832: 49 21 00 01 03           u64 [sp + 256] = 0x3
 21837: 49 21 18 01              u64 [sp + 280] = 0
 21841: 95 18 50 01              a1 = sp + 0x150
 21845: 7b 18 08 01              u64 [sp + 0x108] = a1
 21849: 49 21 10 01 03           u64 [sp + 272] = 0x3
 21854: 95 17 c8 00              a0 = sp + 0xc8
 21858: 95 18 f8 00              a1 = sp + 0xf8
 21862: 50 20 48 01 5f ca        ra = 328, jump @637
      :                          @1720 [@dyn 164]
 21868: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 21872: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 21876: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 21880: 33 07 02                 a0 = 0x2
 21883: 33 08                    a1 = 0
 21885: 33 09                    a2 = 0
 21887: 64 5a                    a3 = s0
 21889: 33 00 4a 01              ra = 0x14a
 21893: 0a 64                    ecalli 100 // 'log'
 21895: 01                       fallthrough
      :                          @1721 [@dyn 165]
 21896: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 21901: 55 38 00 00 f0 09        jump @1723 if a1 >=u 4293918720
      :                          @1722
 21907: 28 11 4b                 jump @2553
      :                          @1723
 21910: 33 07 10 01 03           a0 = 0x30110
 21915: 95 77 00 00 10           a0 = a0 + 0x100000
 21920: 01                       fallthrough
      :                          @1724
 21921: 82 78                    a1 = u64 [a0]
 21923: c9 87 09                 a2 = a0 - a1
 21926: aa 59 06                 jump @1726 if a2 == s0
      :                          @1725
 21929: 28 fb 4a                 jump @2553
      :                          @1726
 21932: c9 68 09                 a2 = a1 - s1
 21935: 01                       fallthrough
      :                          @1727
 21936: 82 7a                    a3 = u64 [a0]
 21938: ab 8a ef                 jump @1724 if a3 != a1
      :                          @1728
 21941: 7b 79                    u64 [a0] = a2
 21943: 33 0b                    a4 = 0
 21945: 01                       fallthrough
      :                          @1729
 21946: ab 8a e7                 jump @1724 if a3 != a1
      :                          @1730
 21949: 28 e7 4a                 jump @2553
      :                          @1731 [@dyn 166]
 21952: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 21957: 97 89 0d                 a2 = a1 << 0xd
 21960: d3 98 08                 a1 = a1 ^ a2
 21963: 98 89 07                 a2 = a1 >> 0x7
 21966: d3 98 08                 a1 = a1 ^ a2
 21969: 3a 09 60 00 03           a2 = u64 [0x30060]
 21974: 97 8a 11                 a3 = a1 << 0x11
 21977: d3 a8 08                 a1 = a1 ^ a3
 21980: ca 98 09                 a2 = a1 * a2
 21983: 3e 08 e0 00 03           u64 [0x300e0] = a1
 21988: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
 21998: d6 79 07                 a0 = a2 mulhu a0
 22001: 98 77 04                 a0 = a0 >> 0x4
 22004: 96 77 14                 a0 = a0 * 0x14
 22007: c9 79 07                 a0 = a2 - a0
 22010: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 22014: 50 20 4e 01 71 f1        ra = 334, jump @1438
      :                          @1732 [@dyn 167]
 22020: 7b 17 90 00              u64 [sp + 0x90] = a0
 22024: 95 17 b0 00              a0 = sp + 0xb0
 22028: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 22032: 33 07 50 03              a0 = 0x350
 22036: 7b 17 00 01              u64 [sp + 0x100] = a0
 22040: 95 18 90 00              a1 = sp + 0x90
 22044: 7b 18 08 01              u64 [sp + 0x108] = a1
 22048: 7b 17 10 01              u64 [sp + 0x110] = a0
 22052: 33 07 08 02 01           a0 = 0x10208
 22057: 7b 17 50 01              u64 [sp + 0x150] = a0
 22061: 49 21 58 01 02           u64 [sp + 344] = 0x2
 22066: 49 21 70 01              u64 [sp + 368] = 0
 22070: 95 18 f8 00              a1 = sp + 0xf8
 22074: 7b 18 60 01              u64 [sp + 0x160] = a1
 22078: 49 21 68 01 02           u64 [sp + 360] = 0x2
 22083: 95 17 c8 00              a0 = sp + 0xc8
 22087: 95 18 50 01              a1 = sp + 0x150
 22091: 50 20 50 01 7a c9        ra = 336, jump @637
      :                          @1733 [@dyn 168]
 22097: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 22101: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 22105: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 22109: 33 07 02                 a0 = 0x2
 22112: 33 08                    a1 = 0
 22114: 33 09                    a2 = 0
 22116: 64 5a                    a3 = s0
 22118: 33 00 52 01              ra = 0x152
 22122: 0a 64                    ecalli 100 // 'log'
 22124: 01                       fallthrough
      :                          @1734 [@dyn 169]
 22125: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 22130: 55 38 00 00 f0 09        jump @1736 if a1 >=u 4293918720
      :                          @1735
 22136: 28 2c 4a                 jump @2553
      :                          @1736
 22139: 33 07 10 01 03           a0 = 0x30110
 22144: 95 77 00 00 10           a0 = a0 + 0x100000
 22149: 01                       fallthrough
      :                          @1737
 22150: 82 78                    a1 = u64 [a0]
 22152: c9 87 09                 a2 = a0 - a1
 22155: aa 59 06                 jump @1739 if a2 == s0
      :                          @1738
 22158: 28 16 4a                 jump @2553
      :                          @1739
 22161: c9 68 09                 a2 = a1 - s1
 22164: 01                       fallthrough
      :                          @1740
 22165: 82 7a                    a3 = u64 [a0]
 22167: ab 8a ef                 jump @1737 if a3 != a1
      :                          @1741
 22170: 7b 79                    u64 [a0] = a2
 22172: 33 0b                    a4 = 0
 22174: 01                       fallthrough
      :                          @1742
 22175: ab 8a e7                 jump @1737 if a3 != a1
      :                          @1743
 22178: 28 02 4a                 jump @2553
      :                          @1744 [@dyn 170]
 22181: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 22186: 3a 07 60 00 03           a0 = u64 [0x30060]
 22191: 97 9a 0d                 a3 = a2 << 0xd
 22194: d3 a9 09                 a2 = a2 ^ a3
 22197: 98 9a 07                 a3 = a2 >> 0x7
 22200: d3 a9 09                 a2 = a2 ^ a3
 22203: 97 9a 11                 a3 = a2 << 0x11
 22206: d3 a9 09                 a2 = a2 ^ a3
 22209: ca 79 0a                 a3 = a2 * a0
 22212: 3a 0b c0 00 03           a4 = u64 [0x300c0]
 22217: 3e 09 e0 00 03           u64 [0x300e0] = a2
 22222: 98 a9 01                 a2 = a3 >> 0x1
 22225: d6 b9 09                 a2 = a2 mulhu a4
 22228: 98 99 04                 a2 = a2 >> 0x4
 22231: 33 0b 32                 a4 = 0x32
 22234: ca b9 09                 a2 = a2 * a4
 22237: c9 9a 0a                 a3 = a3 - a2
 22240: 86 a9 01                 a2 = a3 | 0x1
 22243: 95 99 02                 a2 = a2 + 0x2
 22246: 7b 19 b0 00              u64 [sp + 0xb0] = a2
 22250: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 22255: 97 9a 0d                 a3 = a2 << 0xd
 22258: d3 a9 09                 a2 = a2 ^ a3
 22261: 98 9a 07                 a3 = a2 >> 0x7
 22264: d3 a9 09                 a2 = a2 ^ a3
 22267: 97 9a 11                 a3 = a2 << 0x11
 22270: d3 a9 09                 a2 = a2 ^ a3
 22273: 3e 09 e0 00 03           u64 [0x300e0] = a2
 22278: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 22282: 52 08 06                 jump @1746 if a1 != 0
      :                          @1745
 22285: 28 b1 49                 jump @2555
      :                          @1746
 22288: ca 79 07                 a0 = a2 * a0
 22291: cd 87 07                 a0 = a0 %u a1
 22294: 7b 17 90 00              u64 [sp + 0x90] = a0
 22298: 50 20 56 01 70 f1        ra = 342, jump @1462
      :                          @1747 [@dyn 171]
 22304: 78 17 68 02              u8 [sp + 0x268] = a0
 22308: 95 17 90 00              a0 = sp + 0x90
 22312: 7b 17 50 01              u64 [sp + 0x150] = a0
 22316: 33 07 50 03              a0 = 0x350
 22320: 7b 17 58 01              u64 [sp + 0x158] = a0
 22324: 95 18 b0 00              a1 = sp + 0xb0
 22328: 7b 18 60 01              u64 [sp + 0x160] = a1
 22332: 7b 17 68 01              u64 [sp + 0x168] = a0
 22336: 95 17 68 02              a0 = sp + 0x268
 22340: 7b 17 70 01              u64 [sp + 0x170] = a0
 22344: 33 07 9c 03              a0 = 0x39c
 22348: 7b 17 78 01              u64 [sp + 0x178] = a0
 22352: 33 07 40 02 01           a0 = 0x10240
 22357: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 22361: 49 21 00 01 03           u64 [sp + 256] = 0x3
 22366: 49 21 18 01              u64 [sp + 280] = 0
 22370: 95 18 50 01              a1 = sp + 0x150
 22374: 7b 18 08 01              u64 [sp + 0x108] = a1
 22378: 49 21 10 01 03           u64 [sp + 272] = 0x3
 22383: 95 17 c8 00              a0 = sp + 0xc8
 22387: 95 18 f8 00              a1 = sp + 0xf8
 22391: 50 20 58 01 4e c8        ra = 344, jump @637
      :                          @1748 [@dyn 172]
 22397: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 22401: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 22405: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 22409: 33 07 02                 a0 = 0x2
 22412: 33 08                    a1 = 0
 22414: 33 09                    a2 = 0
 22416: 64 5a                    a3 = s0
 22418: 33 00 5a 01              ra = 0x15a
 22422: 0a 64                    ecalli 100 // 'log'
 22424: 01                       fallthrough
      :                          @1749 [@dyn 173]
 22425: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 22430: 55 38 00 00 f0 09        jump @1751 if a1 >=u 4293918720
      :                          @1750
 22436: 28 00 49                 jump @2553
      :                          @1751
 22439: 33 07 10 01 03           a0 = 0x30110
 22444: 95 77 00 00 10           a0 = a0 + 0x100000
 22449: 01                       fallthrough
      :                          @1752
 22450: 82 78                    a1 = u64 [a0]
 22452: c9 87 09                 a2 = a0 - a1
 22455: aa 59 06                 jump @1754 if a2 == s0
      :                          @1753
 22458: 28 ea 48                 jump @2553
      :                          @1754
 22461: c9 68 09                 a2 = a1 - s1
 22464: 01                       fallthrough
      :                          @1755
 22465: 82 7a                    a3 = u64 [a0]
 22467: ab 8a ef                 jump @1752 if a3 != a1
      :                          @1756
 22470: 7b 79                    u64 [a0] = a2
 22472: 33 0b                    a4 = 0
 22474: 01                       fallthrough
      :                          @1757
 22475: ab 8a e7                 jump @1752 if a3 != a1
      :                          @1758
 22478: 28 d6 48                 jump @2553
      :                          @1759 [@dyn 174]
 22481: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 22486: 97 89 0d                 a2 = a1 << 0xd
 22489: d3 98 08                 a1 = a1 ^ a2
 22492: 98 89 07                 a2 = a1 >> 0x7
 22495: 3a 0a 60 00 03           a3 = u64 [0x30060]
 22500: d3 98 08                 a1 = a1 ^ a2
 22503: 97 89 11                 a2 = a1 << 0x11
 22506: d3 98 08                 a1 = a1 ^ a2
 22509: ca a8 09                 a2 = a1 * a3
 22512: 3a 0a c0 00 03           a3 = u64 [0x300c0]
 22517: 3e 08 e0 00 03           u64 [0x300e0] = a1
 22522: 98 97 01                 a0 = a2 >> 0x1
 22525: d6 a7 07                 a0 = a0 mulhu a3
 22528: 98 77 04                 a0 = a0 >> 0x4
 22531: 96 77 32                 a0 = a0 * 0x32
 22534: c9 79 09                 a2 = a2 - a0
 22537: 86 97 01                 a0 = a2 | 0x1
 22540: 95 78 02                 a1 = a0 + 0x2
 22543: 7b 18 90 00              u64 [sp + 0x90] = a1
 22547: 9a 76                    s1 = -a0
 22549: 33 0a 01                 a3 = 0x1
 22552: 33 0b 02                 a4 = 0x2
 22555: 33 0c 01                 a5 = 0x1
 22558: 01                       fallthrough
      :                          @1760
 22559: ca ac 0a                 a3 = a5 * a3
 22562: 95 cc 01                 a5 = a5 + 0x1
 22565: c8 c6 09                 a2 = s1 + a5
 22568: cd 8a 0a                 a3 = a3 %u a1
 22571: ab b9 f4                 jump @1760 if a2 != a4
      :                          @1761
 22574: 95 77 01                 a0 = a0 + 0x1
 22577: d3 a7 07                 a0 = a0 ^ a3
 22580: 88 77 01                 a0 = a0 <u 0x1
 22583: 78 17 b0 00              u8 [sp + 0xb0] = a0
 22587: 95 17 90 00              a0 = sp + 0x90
 22591: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 22595: 33 07 50 03              a0 = 0x350
 22599: 7b 17 00 01              u64 [sp + 0x100] = a0
 22603: 95 17 b0 00              a0 = sp + 0xb0
 22607: 7b 17 08 01              u64 [sp + 0x108] = a0
 22611: 33 07 9c 03              a0 = 0x39c
 22615: 7b 17 10 01              u64 [sp + 0x110] = a0
 22619: 33 07 c0 02 01           a0 = 0x102c0
 22624: 7b 17 50 01              u64 [sp + 0x150] = a0
 22628: 49 21 58 01 02           u64 [sp + 344] = 0x2
 22633: 49 21 70 01              u64 [sp + 368] = 0
 22637: 95 18 f8 00              a1 = sp + 0xf8
 22641: 7b 18 60 01              u64 [sp + 0x160] = a1
 22645: 49 21 68 01 02           u64 [sp + 360] = 0x2
 22650: 95 17 c8 00              a0 = sp + 0xc8
 22654: 95 18 50 01              a1 = sp + 0x150
 22658: 50 20 5e 01 43 c7        ra = 350, jump @637
      :                          @1762 [@dyn 175]
 22664: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 22668: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 22672: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 22676: 33 07 02                 a0 = 0x2
 22679: 33 08                    a1 = 0
 22681: 33 09                    a2 = 0
 22683: 64 5a                    a3 = s0
 22685: 33 00 60 01              ra = 0x160
 22689: 0a 64                    ecalli 100 // 'log'
 22691: 01                       fallthrough
      :                          @1763 [@dyn 176]
 22692: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 22697: 55 38 00 00 f0 09        jump @1765 if a1 >=u 4293918720
      :                          @1764
 22703: 28 f5 47                 jump @2553
      :                          @1765
 22706: 33 07 10 01 03           a0 = 0x30110
 22711: 95 77 00 00 10           a0 = a0 + 0x100000
 22716: 01                       fallthrough
      :                          @1766
 22717: 82 78                    a1 = u64 [a0]
 22719: c9 87 09                 a2 = a0 - a1
 22722: aa 59 06                 jump @1768 if a2 == s0
      :                          @1767
 22725: 28 df 47                 jump @2553
      :                          @1768
 22728: c9 68 09                 a2 = a1 - s1
 22731: 01                       fallthrough
      :                          @1769
 22732: 82 7a                    a3 = u64 [a0]
 22734: ab 8a ef                 jump @1766 if a3 != a1
      :                          @1770
 22737: 7b 79                    u64 [a0] = a2
 22739: 33 0b                    a4 = 0
 22741: 01                       fallthrough
      :                          @1771
 22742: ab 8a e7                 jump @1766 if a3 != a1
      :                          @1772
 22745: 28 cb 47                 jump @2553
      :                          @1773 [@dyn 177]
 22748: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 22753: 97 89 0d                 a2 = a1 << 0xd
 22756: d3 98 08                 a1 = a1 ^ a2
 22759: 98 89 07                 a2 = a1 >> 0x7
 22762: d3 98 08                 a1 = a1 ^ a2
 22765: 97 89 11                 a2 = a1 << 0x11
 22768: d3 98 08                 a1 = a1 ^ a2
 22771: 3a 09 60 00 03           a2 = u64 [0x30060]
 22776: 3a 0a 68 00 03           a3 = u64 [0x30068]
 22781: 3e 08 e0 00 03           u64 [0x300e0] = a1
 22786: ca 98 07                 a0 = a1 * a2
 22789: 98 78 03                 a1 = a0 >> 0x3
 22792: d6 a8 08                 a1 = a1 mulhu a3
 22795: 98 88 04                 a1 = a1 >> 0x4
 22798: 96 88 e8 03              a1 = a1 * 0x3e8
 22802: c9 87 07                 a0 = a0 - a1
 22805: 95 77 03                 a0 = a0 + 0x3
 22808: 86 77 01                 a0 = a0 | 0x1
 22811: 7b 17 90 00              u64 [sp + 0x90] = a0
 22815: 50 20 64 01 a6 ef        ra = 356, jump @1469
      :                          @1774 [@dyn 178]
 22821: 78 17 b0 00              u8 [sp + 0xb0] = a0
 22825: 95 17 90 00              a0 = sp + 0x90
 22829: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 22833: 33 07 50 03              a0 = 0x350
 22837: 7b 17 00 01              u64 [sp + 0x100] = a0
 22841: 95 17 b0 00              a0 = sp + 0xb0
 22845: 7b 17 08 01              u64 [sp + 0x108] = a0
 22849: 33 07 9c 03              a0 = 0x39c
 22853: 7b 17 10 01              u64 [sp + 0x110] = a0
 22857: 33 07 f8 02 01           a0 = 0x102f8
 22862: 7b 17 50 01              u64 [sp + 0x150] = a0
 22866: 49 21 58 01 02           u64 [sp + 344] = 0x2
 22871: 49 21 70 01              u64 [sp + 368] = 0
 22875: 95 18 f8 00              a1 = sp + 0xf8
 22879: 7b 18 60 01              u64 [sp + 0x160] = a1
 22883: 49 21 68 01 02           u64 [sp + 360] = 0x2
 22888: 95 17 c8 00              a0 = sp + 0xc8
 22892: 95 18 50 01              a1 = sp + 0x150
 22896: 50 20 66 01 55 c6        ra = 358, jump @637
      :                          @1775 [@dyn 179]
 22902: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 22906: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 22910: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 22914: 33 07 02                 a0 = 0x2
 22917: 33 08                    a1 = 0
 22919: 33 09                    a2 = 0
 22921: 64 5a                    a3 = s0
 22923: 33 00 68 01              ra = 0x168
 22927: 0a 64                    ecalli 100 // 'log'
 22929: 01                       fallthrough
      :                          @1776 [@dyn 180]
 22930: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 22935: 55 38 00 00 f0 09        jump @1778 if a1 >=u 4293918720
      :                          @1777
 22941: 28 07 47                 jump @2553
      :                          @1778
 22944: 33 07 10 01 03           a0 = 0x30110
 22949: 95 77 00 00 10           a0 = a0 + 0x100000
 22954: 01                       fallthrough
      :                          @1779
 22955: 82 78                    a1 = u64 [a0]
 22957: c9 87 09                 a2 = a0 - a1
 22960: aa 59 06                 jump @1781 if a2 == s0
      :                          @1780
 22963: 28 f1 46                 jump @2553
      :                          @1781
 22966: c9 68 09                 a2 = a1 - s1
 22969: 01                       fallthrough
      :                          @1782
 22970: 82 7a                    a3 = u64 [a0]
 22972: ab 8a ef                 jump @1779 if a3 != a1
      :                          @1783
 22975: 7b 79                    u64 [a0] = a2
 22977: 33 0b                    a4 = 0
 22979: 01                       fallthrough
      :                          @1784
 22980: ab 8a e7                 jump @1779 if a3 != a1
      :                          @1785
 22983: 28 dd 46                 jump @2553
      :                          @1786 [@dyn 181]
 22986: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 22991: 97 89 0d                 a2 = a1 << 0xd
 22994: d3 98 08                 a1 = a1 ^ a2
 22997: 98 89 07                 a2 = a1 >> 0x7
 23000: d3 98 08                 a1 = a1 ^ a2
 23003: 97 89 11                 a2 = a1 << 0x11
 23006: d3 98 08                 a1 = a1 ^ a2
 23009: 3a 09 60 00 03           a2 = u64 [0x30060]
 23014: 3a 0a 68 00 03           a3 = u64 [0x30068]
 23019: 3e 08 e0 00 03           u64 [0x300e0] = a1
 23024: ca 98 07                 a0 = a1 * a2
 23027: 98 78 02                 a1 = a0 >> 0x2
 23030: d6 a8 08                 a1 = a1 mulhu a3
 23033: 98 88 04                 a1 = a1 >> 0x4
 23036: 96 88 f4 01              a1 = a1 * 0x1f4
 23040: c9 87 07                 a0 = a0 - a1
 23043: 97 77 01                 a0 = a0 << 0x1
 23046: 95 78 09                 a1 = a0 + 0x9
 23049: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 23053: 95 17 c8 00              a0 = sp + 0xc8
 23057: 95 15 c8 00              s0 = sp + 0xc8
 23061: 33 00 6c 01              ra = 0x16c
 23065: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 23068: 7b 15 08                 u64 [sp + 0x8] = s0
 23071: 33 0a                    a3 = 0
 23073: 33 03 ff                 t1 = 0xffffffffffffffff
 23076: 64 82                    t0 = a1
 23078: 28 cb ef                 jump @1491
      :                          @1787 [@dyn 182]
 23081: 95 17 b0 00              a0 = sp + 0xb0
 23085: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 23089: 33 07 50 03              a0 = 0x350
 23093: 7b 17 00 01              u64 [sp + 0x100] = a0
 23097: 7b 15 08 01              u64 [sp + 0x108] = s0
 23101: 33 07 fe 00              a0 = 0xfe
 23105: 7b 17 10 01              u64 [sp + 0x110] = a0
 23109: 33 07 28 03 01           a0 = 0x10328
 23114: 7b 17 50 01              u64 [sp + 0x150] = a0
 23118: 49 21 58 01 02           u64 [sp + 344] = 0x2
 23123: 49 21 70 01              u64 [sp + 368] = 0
 23127: 95 18 f8 00              a1 = sp + 0xf8
 23131: 7b 18 60 01              u64 [sp + 0x160] = a1
 23135: 49 21 68 01 02           u64 [sp + 360] = 0x2
 23140: 95 17 90 00              a0 = sp + 0x90
 23144: 95 18 50 01              a1 = sp + 0x150
 23148: 50 20 6e 01 59 c5        ra = 366, jump @637
      :                          @1788 [@dyn 183]
 23154: 82 15 98 00              s0 = u64 [sp + 0x98]
 23158: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 23162: 82 16 90 00              s1 = u64 [sp + 0x90]
 23166: 33 07 02                 a0 = 0x2
 23169: 33 08                    a1 = 0
 23171: 33 09                    a2 = 0
 23173: 64 5a                    a3 = s0
 23175: 33 00 70 01              ra = 0x170
 23179: 0a 64                    ecalli 100 // 'log'
 23181: 01                       fallthrough
      :                          @1789 [@dyn 184]
 23182: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 23187: 55 38 00 00 f0 09        jump @1791 if a1 >=u 4293918720
      :                          @1790
 23193: 28 0b 46                 jump @2553
      :                          @1791
 23196: 33 07 10 01 03           a0 = 0x30110
 23201: 95 77 00 00 10           a0 = a0 + 0x100000
 23206: 01                       fallthrough
      :                          @1792
 23207: 82 78                    a1 = u64 [a0]
 23209: c9 87 09                 a2 = a0 - a1
 23212: aa 59 06                 jump @1794 if a2 == s0
      :                          @1793
 23215: 28 f5 45                 jump @2553
      :                          @1794
 23218: c9 68 09                 a2 = a1 - s1
 23221: 01                       fallthrough
      :                          @1795
 23222: 82 7a                    a3 = u64 [a0]
 23224: ab 8a ef                 jump @1792 if a3 != a1
      :                          @1796
 23227: 7b 79                    u64 [a0] = a2
 23229: 33 0b                    a4 = 0
 23231: 01                       fallthrough
      :                          @1797
 23232: ab 8a e7                 jump @1792 if a3 != a1
      :                          @1798
 23235: 28 e1 45                 jump @2553
      :                          @1799 [@dyn 185]
 23238: 33 00 74 01              ra = 0x174
 23242: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 23245: 7b 15 08                 u64 [sp + 0x8] = s0
 23248: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 23253: 97 79 0d                 a2 = a0 << 0xd
 23256: d3 97 07                 a0 = a0 ^ a2
 23259: 98 79 07                 a2 = a0 >> 0x7
 23262: d3 97 07                 a0 = a0 ^ a2
 23265: 97 79 11                 a2 = a0 << 0x11
 23268: d3 79 02                 t0 = a2 ^ a0
 23271: 3e 02 e0 00 03           u64 [0x300e0] = t0
 23276: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 23281: 3a 03 28 00 03           t1 = u64 [0x30028]
 23286: 97 7a 0d                 a3 = a0 << 0xd
 23289: d3 a7 07                 a0 = a0 ^ a3
 23292: 98 7a 07                 a3 = a0 >> 0x7
 23295: d3 a7 07                 a0 = a0 ^ a3
 23298: 97 7a 11                 a3 = a0 << 0x11
 23301: d3 a7 07                 a0 = a0 ^ a3
 23304: 3a 0a 30 00 03           a3 = u64 [0x30030]
 23309: ca 37 0b                 a4 = a0 * t1
 23312: 3e 07 e0 00 03           u64 [0x300e0] = a0
 23317: d6 ab 07                 a0 = a4 mulhu a3
 23320: c9 7b 08                 a1 = a4 - a0
 23323: 98 88 01                 a1 = a1 >> 0x1
 23326: c8 87 07                 a0 = a0 + a1
 23329: 98 77 04                 a0 = a0 >> 0x4
 23332: 33 08 15                 a1 = 0x15
 23335: ca 87 07                 a0 = a0 * a1
 23338: c9 7b 0a                 a3 = a4 - a0
 23341: 95 aa 01                 a3 = a3 + 0x1
 23344: 3a 0b 38 00 03           a4 = u64 [0x30038]
 23349: 33 05 01                 s0 = 0x1
 23352: 33 0c 05                 a5 = 0x5
 23355: 33 04 17                 t2 = 0x17
 23358: 28 3f ef                 jump @1502
      :                          @1800 [@dyn 186]
 23361: 7b 17 90 00              u64 [sp + 0x90] = a0
 23365: 95 17 90 00              a0 = sp + 0x90
 23369: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 23373: 33 07 50 03              a0 = 0x350
 23377: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 23381: 33 07 58 03 01           a0 = 0x10358
 23386: 7b 17 50 01              u64 [sp + 0x150] = a0
 23390: 49 21 58 01 01           u64 [sp + 344] = 0x1
 23395: 49 21 70 01              u64 [sp + 368] = 0
 23399: 95 18 c8 00              a1 = sp + 0xc8
 23403: 7b 18 60 01              u64 [sp + 0x160] = a1
 23407: 49 21 68 01 01           u64 [sp + 360] = 0x1
 23412: 95 17 f8 00              a0 = sp + 0xf8
 23416: 95 18 50 01              a1 = sp + 0x150
 23420: 50 20 76 01 49 c4        ra = 374, jump @637
      :                          @1801 [@dyn 187]
 23426: 82 15 00 01              s0 = u64 [sp + 0x100]
 23430: 82 1b 08 01              a4 = u64 [sp + 0x108]
 23434: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 23438: 33 07 02                 a0 = 0x2
 23441: 33 08                    a1 = 0
 23443: 33 09                    a2 = 0
 23445: 64 5a                    a3 = s0
 23447: 33 00 78 01              ra = 0x178
 23451: 0a 64                    ecalli 100 // 'log'
 23453: 01                       fallthrough
      :                          @1802 [@dyn 188]
 23454: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 23459: 55 38 00 00 f0 09        jump @1804 if a1 >=u 4293918720
      :                          @1803
 23465: 28 fb 44                 jump @2553
      :                          @1804
 23468: 33 07 10 01 03           a0 = 0x30110
 23473: 95 77 00 00 10           a0 = a0 + 0x100000
 23478: 01                       fallthrough
      :                          @1805
 23479: 82 78                    a1 = u64 [a0]
 23481: c9 87 09                 a2 = a0 - a1
 23484: aa 59 06                 jump @1807 if a2 == s0
      :                          @1806
 23487: 28 e5 44                 jump @2553
      :                          @1807
 23490: c9 68 09                 a2 = a1 - s1
 23493: 01                       fallthrough
      :                          @1808
 23494: 82 7a                    a3 = u64 [a0]
 23496: ab 8a ef                 jump @1805 if a3 != a1
      :                          @1809
 23499: 7b 79                    u64 [a0] = a2
 23501: 33 0b                    a4 = 0
 23503: 01                       fallthrough
      :                          @1810
 23504: ab 8a e7                 jump @1805 if a3 != a1
      :                          @1811
 23507: 28 d1 44                 jump @2553
      :                          @1812 [@dyn 189]
 23510: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 23515: 97 89 0d                 a2 = a1 << 0xd
 23518: d3 98 08                 a1 = a1 ^ a2
 23521: 98 89 07                 a2 = a1 >> 0x7
 23524: d3 98 08                 a1 = a1 ^ a2
 23527: 97 89 11                 a2 = a1 << 0x11
 23530: d3 89 09                 a2 = a2 ^ a1
 23533: 3e 09 e0 00 03           u64 [0x300e0] = a2
 23538: 87 87 1d dd              i32 a0 = a1 * 0xffffffffffffdd1d
 23542: 97 78 38                 a1 = a0 << 0x38
 23545: 98 88 39                 a1 = a1 >> 0x39
 23548: 98 77 01                 a0 = a0 >> 0x1
 23551: 84 77 80 00              a0 = a0 & 0x80
 23555: d4 87 07                 a0 = a0 | a1
 23558: 78 17 b0 00              u8 [sp + 0xb0] = a0
 23562: 95 17 b0 00              a0 = sp + 0xb0
 23566: 7b 17 90 00              u64 [sp + 0x90] = a0
 23570: 33 07 9e 03              a0 = 0x39e
 23574: 7b 17 98 00              u64 [sp + 0x98] = a0
 23578: 49 21 50 01 02           u64 [sp + 336] = 0x2
 23583: 49 21 60 01              u64 [sp + 352] = 0
 23587: 49 21 68 01 02           u64 [sp + 360] = 0x2
 23592: 49 21 70 01              u64 [sp + 368] = 0
 23596: 14 08 20 00 00 00 08 00 00 00 a1 = 0x800000020
 23606: 7b 18 78 01              u64 [sp + 0x178] = a1
 23610: 46 21 80 01 03           u8 [sp + 384] = 0x3
 23615: 33 08 70 03 01           a1 = 0x10370
 23620: 7b 18 f8 00              u64 [sp + 0xf8] = a1
 23624: 49 21 00 01 01           u64 [sp + 256] = 0x1
 23629: 95 18 50 01              a1 = sp + 0x150
 23633: 7b 18 18 01              u64 [sp + 0x118] = a1
 23637: 49 21 20 01 01           u64 [sp + 288] = 0x1
 23642: 95 18 90 00              a1 = sp + 0x90
 23646: 7b 18 08 01              u64 [sp + 0x108] = a1
 23650: 49 21 10 01 01           u64 [sp + 272] = 0x1
 23655: 95 17 c8 00              a0 = sp + 0xc8
 23659: 95 18 f8 00              a1 = sp + 0xf8
 23663: 50 20 7c 01 56 c3        ra = 380, jump @637
      :                          @1813 [@dyn 190]
 23669: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 23673: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 23677: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 23681: 33 07 02                 a0 = 0x2
 23684: 33 08                    a1 = 0
 23686: 33 09                    a2 = 0
 23688: 64 5a                    a3 = s0
 23690: 33 00 7e 01              ra = 0x17e
 23694: 0a 64                    ecalli 100 // 'log'
 23696: 01                       fallthrough
      :                          @1814 [@dyn 191]
 23697: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 23702: 55 38 00 00 f0 09        jump @1816 if a1 >=u 4293918720
      :                          @1815
 23708: 28 08 44                 jump @2553
      :                          @1816
 23711: 33 07 10 01 03           a0 = 0x30110
 23716: 95 77 00 00 10           a0 = a0 + 0x100000
 23721: 01                       fallthrough
      :                          @1817
 23722: 82 78                    a1 = u64 [a0]
 23724: c9 87 09                 a2 = a0 - a1
 23727: aa 59 06                 jump @1819 if a2 == s0
      :                          @1818
 23730: 28 f2 43                 jump @2553
      :                          @1819
 23733: c9 68 09                 a2 = a1 - s1
 23736: 01                       fallthrough
      :                          @1820
 23737: 82 7a                    a3 = u64 [a0]
 23739: ab 8a ef                 jump @1817 if a3 != a1
      :                          @1821
 23742: 7b 79                    u64 [a0] = a2
 23744: 33 0b                    a4 = 0
 23746: 01                       fallthrough
      :                          @1822
 23747: ab 8a e7                 jump @1817 if a3 != a1
      :                          @1823
 23750: 28 de 43                 jump @2553
      :                          @1824 [@dyn 192]
 23753: 3a 07 60 00 03           a0 = u64 [0x30060]
 23758: 33 08 e0 00 03           a1 = 0x300e0
 23763: 3a 09 c8 00 03           a2 = u64 [0x300c8]
 23768: 33 0a a5 98 0f           a3 = 0xf98a5
 23773: 33 02 01                 t0 = 0x1
 23776: 01                       fallthrough
      :                          @1825
 23777: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 23782: 97 bc 0d                 a5 = a4 << 0xd
 23785: d3 cb 0b                 a4 = a4 ^ a5
 23788: 98 bc 07                 a5 = a4 >> 0x7
 23791: d3 cb 0b                 a4 = a4 ^ a5
 23794: 97 bc 11                 a5 = a4 << 0x11
 23797: d3 cb 0b                 a4 = a4 ^ a5
 23800: 3e 0b e0 00 03           u64 [0x300e0] = a4
 23805: ca 7b 0b                 a4 = a4 * a0
 23808: d6 9b 0c                 a5 = a4 mulhu a2
 23811: 98 cc 13                 a5 = a5 >> 0x13
 23814: ca ac 0c                 a5 = a5 * a3
 23817: c9 cb 0b                 a4 = a4 - a5
 23820: 7b 1b 90 00              u64 [sp + 0x90] = a4
 23824: 64 b5                    s0 = a4
 23826: 64 ac                    a5 = a3
 23828: 01                       fallthrough
      :                          @1826
 23829: 64 c6                    s1 = a5
 23831: cd c5 0c                 a5 = s0 %u a5
 23834: 64 65                    s0 = s1
 23836: 52 0c f9                 jump @1826 if a5 != 0
      :                          @1827
 23839: ab 26 c2                 jump @1825 if s1 != t0
      :                          @1828
 23842: 3a 07 c8 00 03           a0 = u64 [0x300c8]
 23847: ca bb 08                 a1 = a4 * a4
 23850: d6 78 07                 a0 = a1 mulhu a0
 23853: 98 77 13                 a0 = a0 >> 0x13
 23856: 96 77 a5 98 0f           a0 = a0 * 0xf98a5
 23861: c9 78 08                 a1 = a1 - a0
 23864: 7b 18 90 00              u64 [sp + 0x90] = a1
 23868: 95 17 90 00              a0 = sp + 0x90
 23872: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 23876: 33 07 50 03              a0 = 0x350
 23880: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 23884: 33 07 90 03 01           a0 = 0x10390
 23889: 7b 17 50 01              u64 [sp + 0x150] = a0
 23893: 49 21 58 01 01           u64 [sp + 344] = 0x1
 23898: 49 21 70 01              u64 [sp + 368] = 0
 23902: 95 18 c8 00              a1 = sp + 0xc8
 23906: 7b 18 60 01              u64 [sp + 0x160] = a1
 23910: 49 21 68 01 01           u64 [sp + 360] = 0x1
 23915: 95 17 f8 00              a0 = sp + 0xf8
 23919: 95 18 50 01              a1 = sp + 0x150
 23923: 50 20 82 01 52 c2        ra = 386, jump @637
      :                          @1829 [@dyn 193]
 23929: 82 15 00 01              s0 = u64 [sp + 0x100]
 23933: 82 1b 08 01              a4 = u64 [sp + 0x108]
 23937: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 23941: 33 07 02                 a0 = 0x2
 23944: 33 08                    a1 = 0
 23946: 33 09                    a2 = 0
 23948: 64 5a                    a3 = s0
 23950: 33 00 84 01              ra = 0x184
 23954: 0a 64                    ecalli 100 // 'log'
 23956: 01                       fallthrough
      :                          @1830 [@dyn 194]
 23957: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 23962: 55 38 00 00 f0 09        jump @1832 if a1 >=u 4293918720
      :                          @1831
 23968: 28 04 43                 jump @2553
      :                          @1832
 23971: 33 07 10 01 03           a0 = 0x30110
 23976: 95 77 00 00 10           a0 = a0 + 0x100000
 23981: 01                       fallthrough
      :                          @1833
 23982: 82 78                    a1 = u64 [a0]
 23984: c9 87 09                 a2 = a0 - a1
 23987: aa 59 06                 jump @1835 if a2 == s0
      :                          @1834
 23990: 28 ee 42                 jump @2553
      :                          @1835
 23993: c9 68 09                 a2 = a1 - s1
 23996: 01                       fallthrough
      :                          @1836
 23997: 82 7a                    a3 = u64 [a0]
 23999: ab 8a ef                 jump @1833 if a3 != a1
      :                          @1837
 24002: 7b 79                    u64 [a0] = a2
 24004: 33 0b                    a4 = 0
 24006: 01                       fallthrough
      :                          @1838
 24007: ab 8a e7                 jump @1833 if a3 != a1
      :                          @1839
 24010: 28 da 42                 jump @2553
      :                          @1840 [@dyn 195]
 24013: 95 17 c8 00              a0 = sp + 0xc8
 24017: 33 00 88 01              ra = 0x188
 24021: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 24024: 7b 15                    u64 [sp] = s0
 24026: 33 03 10 01 03           t1 = 0x30110
 24031: 33 02 00 00 10           t0 = 0x100000
 24036: c8 23 04                 t2 = t1 + t0
 24039: 28 63 c8                 jump @774
      :                          @1841 [@dyn 196]
 24042: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 24046: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 24050: 7b 17 10                 u64 [sp + 0x10] = a0
 24053: 33 00 8a 01              ra = 0x18a
 24057: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 24060: 7b 10 38                 u64 [sp + 0x38] = ra
 24063: 7b 15 30                 u64 [sp + 0x30] = s0
 24066: 7b 16 28                 u64 [sp + 0x28] = s1
 24069: 64 86                    s1 = a1
 24071: 64 75                    s0 = a0
 24073: 68 87                    a0 = clz a1
 24075: 9a 7a 40                 a3 = 0x40 - a0
 24078: 64 57                    a0 = s0
 24080: 33 09                    a2 = 0
 24082: 33 00 32 01              ra = 0x132
 24086: 28 fb b8                 jump @459
      :                          @1842 [@dyn 197]
 24089: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 24093: 95 17 b0 00              a0 = sp + 0xb0
 24097: 7b 17 90 00              u64 [sp + 0x90] = a0
 24101: 33 07 50 03              a0 = 0x350
 24105: 7b 17 98 00              u64 [sp + 0x98] = a0
 24109: 33 07 b8 03 01           a0 = 0x103b8
 24114: 7b 17 50 01              u64 [sp + 0x150] = a0
 24118: 49 21 58 01 01           u64 [sp + 344] = 0x1
 24123: 49 21 70 01              u64 [sp + 368] = 0
 24127: 95 18 90 00              a1 = sp + 0x90
 24131: 7b 18 60 01              u64 [sp + 0x160] = a1
 24135: 49 21 68 01 01           u64 [sp + 360] = 0x1
 24140: 95 17 f8 00              a0 = sp + 0xf8
 24144: 95 18 50 01              a1 = sp + 0x150
 24148: 50 20 8c 01 71 c1        ra = 396, jump @637
      :                          @1843 [@dyn 198]
 24154: 82 16 00 01              s1 = u64 [sp + 0x100]
 24158: 82 1b 08 01              a4 = u64 [sp + 0x108]
 24162: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 24166: 33 07 02                 a0 = 0x2
 24169: 33 08                    a1 = 0
 24171: 33 09                    a2 = 0
 24173: 64 6a                    a3 = s1
 24175: 33 00 8e 01              ra = 0x18e
 24179: 0a 64                    ecalli 100 // 'log'
 24181: 01                       fallthrough
      :                          @1844 [@dyn 199]
 24182: 95 58 ff ff ef           a1 = s0 + 0xffffffffffefffff
 24187: 53 38 00 00 f0 25        jump @1850 if a1 <u 4293918720
      :                          @1845
 24193: 33 07 10 01 03           a0 = 0x30110
 24198: 95 77 00 00 10           a0 = a0 + 0x100000
 24203: 01                       fallthrough
      :                          @1846
 24204: 82 78                    a1 = u64 [a0]
 24206: c9 87 09                 a2 = a0 - a1
 24209: ab 69 0f                 jump @1850 if a2 != s1
      :                          @1847
 24212: c9 58 09                 a2 = a1 - s0
 24215: 01                       fallthrough
      :                          @1848
 24216: 82 7a                    a3 = u64 [a0]
 24218: ab 8a f2                 jump @1846 if a3 != a1
      :                          @1849
 24221: 7b 79                    u64 [a0] = a2
 24223: 01                       fallthrough
      :                          @1850
 24224: 82 17 c8 00              a0 = u64 [sp + 0xc8]
 24228: 82 16 10                 s1 = u64 [sp + 0x10]
 24231: 52 07 06                 jump @1852 if a0 != 0
      :                          @1851
 24234: 28 fa 41                 jump @2553
      :                          @1852
 24237: 54 37 00 00 02 09        jump @1854 if a0 <=u 131072
      :                          @1853
 24243: 28 f1 41                 jump @2553
      :                          @1854
 24246: 97 77 03                 a0 = a0 << 0x3
 24249: 33 08 10 01 03           a1 = 0x30110
 24254: 95 88 00 00 10           a1 = a1 + 0x100000
 24259: 01                       fallthrough
      :                          @1855
 24260: 82 89                    a2 = u64 [a1]
 24262: c9 98 0a                 a3 = a1 - a2
 24265: aa 6a 06                 jump @1857 if a3 == s1
      :                          @1856
 24268: 28 d8 41                 jump @2553
      :                          @1857
 24271: c9 79 0a                 a3 = a2 - a0
 24274: 01                       fallthrough
      :                          @1858
 24275: 82 8b                    a4 = u64 [a1]
 24277: ab 9b ef                 jump @1855 if a4 != a2
      :                          @1859
 24280: 7b 8a                    u64 [a1] = a3
 24282: 33 0c                    a5 = 0
 24284: 01                       fallthrough
      :                          @1860
 24285: ab 9b e7                 jump @1855 if a4 != a2
      :                          @1861
 24288: 28 c4 41                 jump @2553
      :                          @1862 [@dyn 200]
 24291: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 24296: 97 79 0d                 a2 = a0 << 0xd
 24299: d3 97 07                 a0 = a0 ^ a2
 24302: 98 79 07                 a2 = a0 >> 0x7
 24305: 3a 0a 60 00 03           a3 = u64 [0x30060]
 24310: d3 97 07                 a0 = a0 ^ a2
 24313: 97 79 11                 a2 = a0 << 0x11
 24316: d3 97 07                 a0 = a0 ^ a2
 24319: ca a7 09                 a2 = a0 * a3
 24322: 3e 07 e0 00 03           u64 [0x300e0] = a0
 24327: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
 24337: d6 b9 07                 a0 = a2 mulhu a4
 24340: 98 77 03                 a0 = a0 >> 0x3
 24343: 96 77 0a                 a0 = a0 * 0xa
 24346: 3a 0c e0 00 03           a5 = u64 [0x300e0]
 24351: c9 79 07                 a0 = a2 - a0
 24354: 95 77 01                 a0 = a0 + 0x1
 24357: 97 c9 0d                 a2 = a5 << 0xd
 24360: d3 c9 09                 a2 = a2 ^ a5
 24363: 98 9c 07                 a5 = a2 >> 0x7
 24366: d3 c9 09                 a2 = a2 ^ a5
 24369: 97 9c 11                 a5 = a2 << 0x11
 24372: d3 c9 09                 a2 = a2 ^ a5
 24375: ca a9 0a                 a3 = a2 * a3
 24378: 3e 09 e0 00 03           u64 [0x300e0] = a2
 24383: d6 ba 08                 a1 = a3 mulhu a4
 24386: 98 89 02                 a2 = a1 >> 0x2
 24389: 84 88 fc                 a1 = a1 & 0xfffffffffffffffc
 24392: c8 98 08                 a1 = a1 + a2
 24395: c9 8a 08                 a1 = a3 - a1
 24398: 95 88 02                 a1 = a1 + 0x2
 24401: 33 00 92 01              ra = 0x192
 24405: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 24408: 7b 10 18                 u64 [sp + 0x18] = ra
 24411: 7b 15 10                 u64 [sp + 0x10] = s0
 24414: 7b 16 08                 u64 [sp + 0x8] = s1
 24417: 33 04                    t2 = 0
 24419: 33 00                    ra = 0
 24421: 33 02 01                 t0 = 0x1
 24424: 33 03 03                 t1 = 0x3
 24427: 33 09                    a2 = 0
 24429: 64 7c                    a5 = a0
 24431: 28 8e ec                 jump @1533
      :                          @1863 [@dyn 201]
 24434: 7b 17 90 00              u64 [sp + 0x90] = a0
 24438: 95 17 90 00              a0 = sp + 0x90
 24442: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 24446: 33 07 50 03              a0 = 0x350
 24450: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 24454: 33 07 f0 03 01           a0 = 0x103f0
 24459: 7b 17 50 01              u64 [sp + 0x150] = a0
 24463: 49 21 58 01 01           u64 [sp + 344] = 0x1
 24468: 49 21 70 01              u64 [sp + 368] = 0
 24472: 95 18 c8 00              a1 = sp + 0xc8
 24476: 7b 18 60 01              u64 [sp + 0x160] = a1
 24480: 49 21 68 01 01           u64 [sp + 360] = 0x1
 24485: 95 17 f8 00              a0 = sp + 0xf8
 24489: 95 18 50 01              a1 = sp + 0x150
 24493: 50 20 94 01 18 c0        ra = 404, jump @637
      :                          @1864 [@dyn 202]
 24499: 82 15 00 01              s0 = u64 [sp + 0x100]
 24503: 82 1b 08 01              a4 = u64 [sp + 0x108]
 24507: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 24511: 33 07 02                 a0 = 0x2
 24514: 33 08                    a1 = 0
 24516: 33 09                    a2 = 0
 24518: 64 5a                    a3 = s0
 24520: 33 00 96 01              ra = 0x196
 24524: 0a 64                    ecalli 100 // 'log'
 24526: 01                       fallthrough
      :                          @1865 [@dyn 203]
 24527: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 24532: 55 38 00 00 f0 09        jump @1867 if a1 >=u 4293918720
      :                          @1866
 24538: 28 ca 40                 jump @2553
      :                          @1867
 24541: 33 07 10 01 03           a0 = 0x30110
 24546: 95 77 00 00 10           a0 = a0 + 0x100000
 24551: 01                       fallthrough
      :                          @1868
 24552: 82 78                    a1 = u64 [a0]
 24554: c9 87 09                 a2 = a0 - a1
 24557: aa 59 06                 jump @1870 if a2 == s0
      :                          @1869
 24560: 28 b4 40                 jump @2553
      :                          @1870
 24563: c9 68 09                 a2 = a1 - s1
 24566: 01                       fallthrough
      :                          @1871
 24567: 82 7a                    a3 = u64 [a0]
 24569: ab 8a ef                 jump @1868 if a3 != a1
      :                          @1872
 24572: 7b 79                    u64 [a0] = a2
 24574: 33 0b                    a4 = 0
 24576: 01                       fallthrough
      :                          @1873
 24577: ab 8a e7                 jump @1868 if a3 != a1
      :                          @1874
 24580: 28 a0 40                 jump @2553
      :                          @1875 [@dyn 204]
 24583: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 24588: 97 89 0d                 a2 = a1 << 0xd
 24591: d3 98 08                 a1 = a1 ^ a2
 24594: 98 89 07                 a2 = a1 >> 0x7
 24597: d3 98 08                 a1 = a1 ^ a2
 24600: 97 89 11                 a2 = a1 << 0x11
 24603: d3 89 09                 a2 = a2 ^ a1
 24606: 3e 09 e0 00 03           u64 [0x300e0] = a2
 24611: 84 88 03                 a1 = a1 & 0x3
 24614: 95 88 01                 a1 = a1 + 0x1
 24617: 7b 18 68 02              u64 [sp + 0x268] = a1
 24621: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 24626: 97 89 0d                 a2 = a1 << 0xd
 24629: d3 98 08                 a1 = a1 ^ a2
 24632: 98 89 07                 a2 = a1 >> 0x7
 24635: d3 98 08                 a1 = a1 ^ a2
 24638: 97 89 11                 a2 = a1 << 0x11
 24641: d3 89 09                 a2 = a2 ^ a1
 24644: 3e 09 e0 00 03           u64 [0x300e0] = a2
 24649: 82 17 68 02              a0 = u64 [sp + 0x268]
 24653: 84 88 03                 a1 = a1 & 0x3
 24656: 95 88 01                 a1 = a1 + 0x1
 24659: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 24663: 50 20 9a 01 f6 eb        ra = 410, jump @1541
      :                          @1876 [@dyn 205]
 24669: 7b 17 90 00              u64 [sp + 0x90] = a0
 24673: 95 17 68 02              a0 = sp + 0x268
 24677: 7b 17 50 01              u64 [sp + 0x150] = a0
 24681: 33 07 50 03              a0 = 0x350
 24685: 7b 17 58 01              u64 [sp + 0x158] = a0
 24689: 95 18 b0 00              a1 = sp + 0xb0
 24693: 7b 18 60 01              u64 [sp + 0x160] = a1
 24697: 7b 17 68 01              u64 [sp + 0x168] = a0
 24701: 95 18 90 00              a1 = sp + 0x90
 24705: 7b 18 70 01              u64 [sp + 0x170] = a1
 24709: 7b 17 78 01              u64 [sp + 0x178] = a0
 24713: 33 07 18 04 01           a0 = 0x10418
 24718: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 24722: 49 21 00 01 03           u64 [sp + 256] = 0x3
 24727: 49 21 18 01              u64 [sp + 280] = 0
 24731: 95 18 50 01              a1 = sp + 0x150
 24735: 7b 18 08 01              u64 [sp + 0x108] = a1
 24739: 49 21 10 01 03           u64 [sp + 272] = 0x3
 24744: 95 17 c8 00              a0 = sp + 0xc8
 24748: 95 18 f8 00              a1 = sp + 0xf8
 24752: 50 20 9c 01 15 bf        ra = 412, jump @637
      :                          @1877 [@dyn 206]
 24758: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 24762: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 24766: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 24770: 33 07 02                 a0 = 0x2
 24773: 33 08                    a1 = 0
 24775: 33 09                    a2 = 0
 24777: 64 5a                    a3 = s0
 24779: 33 00 9e 01              ra = 0x19e
 24783: 0a 64                    ecalli 100 // 'log'
 24785: 01                       fallthrough
      :                          @1878 [@dyn 207]
 24786: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 24791: 55 38 00 00 f0 09        jump @1880 if a1 >=u 4293918720
      :                          @1879
 24797: 28 c7 3f                 jump @2553
      :                          @1880
 24800: 33 07 10 01 03           a0 = 0x30110
 24805: 95 77 00 00 10           a0 = a0 + 0x100000
 24810: 01                       fallthrough
      :                          @1881
 24811: 82 78                    a1 = u64 [a0]
 24813: c9 87 09                 a2 = a0 - a1
 24816: aa 59 06                 jump @1883 if a2 == s0
      :                          @1882
 24819: 28 b1 3f                 jump @2553
      :                          @1883
 24822: c9 68 09                 a2 = a1 - s1
 24825: 01                       fallthrough
      :                          @1884
 24826: 82 7a                    a3 = u64 [a0]
 24828: ab 8a ef                 jump @1881 if a3 != a1
      :                          @1885
 24831: 7b 79                    u64 [a0] = a2
 24833: 33 0b                    a4 = 0
 24835: 01                       fallthrough
      :                          @1886
 24836: ab 8a e7                 jump @1881 if a3 != a1
      :                          @1887
 24839: 28 9d 3f                 jump @2553
      :                          @1888 [@dyn 208]
 24842: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 24847: 97 89 0d                 a2 = a1 << 0xd
 24850: d3 98 08                 a1 = a1 ^ a2
 24853: 98 89 07                 a2 = a1 >> 0x7
 24856: 3a 0a 60 00 03           a3 = u64 [0x30060]
 24861: d3 98 08                 a1 = a1 ^ a2
 24864: 97 89 11                 a2 = a1 << 0x11
 24867: d3 98 08                 a1 = a1 ^ a2
 24870: ca a8 09                 a2 = a1 * a3
 24873: 3e 08 e0 00 03           u64 [0x300e0] = a1
 24878: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
 24888: d6 89 0b                 a4 = a2 mulhu a1
 24891: 98 bb 04                 a4 = a4 >> 0x4
 24894: 96 bb 14                 a4 = a4 * 0x14
 24897: c9 b9 09                 a2 = a2 - a4
 24900: 95 99 02                 a2 = a2 + 0x2
 24903: 7b 19 68 02              u64 [sp + 0x268] = a2
 24907: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 24912: 97 9b 0d                 a4 = a2 << 0xd
 24915: d3 b9 09                 a2 = a2 ^ a4
 24918: 98 9b 07                 a4 = a2 >> 0x7
 24921: d3 b9 09                 a2 = a2 ^ a4
 24924: 97 9b 11                 a4 = a2 << 0x11
 24927: d3 b9 09                 a2 = a2 ^ a4
 24930: ca a9 0a                 a3 = a2 * a3
 24933: 3e 09 e0 00 03           u64 [0x300e0] = a2
 24938: d6 8a 07                 a0 = a3 mulhu a1
 24941: 98 77 04                 a0 = a0 >> 0x4
 24944: 82 18 68 02              a1 = u64 [sp + 0x268]
 24948: 96 77 14                 a0 = a0 * 0x14
 24951: c9 7a 09                 a2 = a3 - a0
 24954: 95 97 02                 a0 = a2 + 0x2
 24957: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 24961: 64 8b                    a4 = a1
 24963: 64 7c                    a5 = a0
 24965: 01                       fallthrough
      :                          @1889
 24966: 64 ca                    a3 = a5
 24968: cd cb 0c                 a5 = a4 %u a5
 24971: 64 ab                    a4 = a3
 24973: 52 0c f9                 jump @1889 if a5 != 0
      :                          @1890
 24976: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 24979: 95 99 01                 a2 = a2 + 0x1
 24982: ca 89 08                 a1 = a2 * a1
 24985: c9 78 08                 a1 = a1 - a0
 24988: 94 a8                    a1 = 0 if a3 != 0
 24990: 7b 18 90 00              u64 [sp + 0x90] = a1
 24994: 95 17 68 02              a0 = sp + 0x268
 24998: 7b 17 50 01              u64 [sp + 0x150] = a0
 25002: 33 07 50 03              a0 = 0x350
 25006: 7b 17 58 01              u64 [sp + 0x158] = a0
 25010: 95 18 b0 00              a1 = sp + 0xb0
 25014: 7b 18 60 01              u64 [sp + 0x160] = a1
 25018: 7b 17 68 01              u64 [sp + 0x168] = a0
 25022: 95 18 90 00              a1 = sp + 0x90
 25026: 7b 18 70 01              u64 [sp + 0x170] = a1
 25030: 7b 17 78 01              u64 [sp + 0x178] = a0
 25034: 33 07 58 04 01           a0 = 0x10458
 25039: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 25043: 49 21 00 01 03           u64 [sp + 256] = 0x3
 25048: 49 21 18 01              u64 [sp + 280] = 0
 25052: 95 18 50 01              a1 = sp + 0x150
 25056: 7b 18 08 01              u64 [sp + 0x108] = a1
 25060: 49 21 10 01 03           u64 [sp + 272] = 0x3
 25065: 95 17 c8 00              a0 = sp + 0xc8
 25069: 95 18 f8 00              a1 = sp + 0xf8
 25073: 50 20 a2 01 d4 bd        ra = 418, jump @637
      :                          @1891 [@dyn 209]
 25079: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 25083: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 25087: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 25091: 33 07 02                 a0 = 0x2
 25094: 33 08                    a1 = 0
 25096: 33 09                    a2 = 0
 25098: 64 5a                    a3 = s0
 25100: 33 00 a4 01              ra = 0x1a4
 25104: 0a 64                    ecalli 100 // 'log'
 25106: 01                       fallthrough
      :                          @1892 [@dyn 210]
 25107: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 25112: 55 38 00 00 f0 09        jump @1894 if a1 >=u 4293918720
      :                          @1893
 25118: 28 86 3e                 jump @2553
      :                          @1894
 25121: 33 07 10 01 03           a0 = 0x30110
 25126: 95 77 00 00 10           a0 = a0 + 0x100000
 25131: 01                       fallthrough
      :                          @1895
 25132: 82 78                    a1 = u64 [a0]
 25134: c9 87 09                 a2 = a0 - a1
 25137: aa 59 06                 jump @1897 if a2 == s0
      :                          @1896
 25140: 28 70 3e                 jump @2553
      :                          @1897
 25143: c9 68 09                 a2 = a1 - s1
 25146: 01                       fallthrough
      :                          @1898
 25147: 82 7a                    a3 = u64 [a0]
 25149: ab 8a ef                 jump @1895 if a3 != a1
      :                          @1899
 25152: 7b 79                    u64 [a0] = a2
 25154: 33 0b                    a4 = 0
 25156: 01                       fallthrough
      :                          @1900
 25157: ab 8a e7                 jump @1895 if a3 != a1
      :                          @1901
 25160: 28 5c 3e                 jump @2553
      :                          @1902 [@dyn 211]
 25163: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 25168: 97 89 0d                 a2 = a1 << 0xd
 25171: d3 98 08                 a1 = a1 ^ a2
 25174: 98 89 07                 a2 = a1 >> 0x7
 25177: 3a 0a 60 00 03           a3 = u64 [0x30060]
 25182: d3 98 08                 a1 = a1 ^ a2
 25185: 97 89 11                 a2 = a1 << 0x11
 25188: d3 98 08                 a1 = a1 ^ a2
 25191: ca a8 09                 a2 = a1 * a3
 25194: 3a 0b c0 00 03           a4 = u64 [0x300c0]
 25199: 3e 08 e0 00 03           u64 [0x300e0] = a1
 25204: 98 98 01                 a1 = a2 >> 0x1
 25207: d6 b8 08                 a1 = a1 mulhu a4
 25210: 98 88 04                 a1 = a1 >> 0x4
 25213: 96 88 32                 a1 = a1 * 0x32
 25216: c9 89 09                 a2 = a2 - a1
 25219: 7b 19 68 02              u64 [sp + 0x268] = a2
 25223: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 25228: 97 89 0d                 a2 = a1 << 0xd
 25231: d3 98 08                 a1 = a1 ^ a2
 25234: 98 89 07                 a2 = a1 >> 0x7
 25237: d3 98 08                 a1 = a1 ^ a2
 25240: 97 89 11                 a2 = a1 << 0x11
 25243: d3 98 08                 a1 = a1 ^ a2
 25246: ca a8 09                 a2 = a1 * a3
 25249: 3a 0a 98 00 03           a3 = u64 [0x30098]
 25254: 3e 08 e0 00 03           u64 [0x300e0] = a1
 25259: 98 97 02                 a0 = a2 >> 0x2
 25262: d6 a7 07                 a0 = a0 mulhu a3
 25265: 98 77 02                 a0 = a0 >> 0x2
 25268: 96 78 64                 a1 = a0 * 0x64
 25271: 82 17 68 02              a0 = u64 [sp + 0x268]
 25275: c9 89 08                 a1 = a2 - a1
 25278: 95 88 01                 a1 = a1 + 0x1
 25281: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 25285: 50 20 a8 01 e4 e9        ra = 424, jump @1555
      :                          @1903 [@dyn 212]
 25291: 7b 17 90 00              u64 [sp + 0x90] = a0
 25295: 95 17 68 02              a0 = sp + 0x268
 25299: 7b 17 50 01              u64 [sp + 0x150] = a0
 25303: 33 07 50 03              a0 = 0x350
 25307: 7b 17 58 01              u64 [sp + 0x158] = a0
 25311: 95 18 b0 00              a1 = sp + 0xb0
 25315: 7b 18 60 01              u64 [sp + 0x160] = a1
 25319: 7b 17 68 01              u64 [sp + 0x168] = a0
 25323: 95 18 90 00              a1 = sp + 0x90
 25327: 7b 18 70 01              u64 [sp + 0x170] = a1
 25331: 7b 17 78 01              u64 [sp + 0x178] = a0
 25335: 33 07 98 04 01           a0 = 0x10498
 25340: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 25344: 49 21 00 01 03           u64 [sp + 256] = 0x3
 25349: 49 21 18 01              u64 [sp + 280] = 0
 25353: 95 18 50 01              a1 = sp + 0x150
 25357: 7b 18 08 01              u64 [sp + 0x108] = a1
 25361: 49 21 10 01 03           u64 [sp + 272] = 0x3
 25366: 95 17 c8 00              a0 = sp + 0xc8
 25370: 95 18 f8 00              a1 = sp + 0xf8
 25374: 50 20 aa 01 a7 bc        ra = 426, jump @637
      :                          @1904 [@dyn 213]
 25380: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 25384: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 25388: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 25392: 33 07 02                 a0 = 0x2
 25395: 33 08                    a1 = 0
 25397: 33 09                    a2 = 0
 25399: 64 5a                    a3 = s0
 25401: 33 00 ac 01              ra = 0x1ac
 25405: 0a 64                    ecalli 100 // 'log'
 25407: 01                       fallthrough
      :                          @1905 [@dyn 214]
 25408: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 25413: 55 38 00 00 f0 09        jump @1907 if a1 >=u 4293918720
      :                          @1906
 25419: 28 59 3d                 jump @2553
      :                          @1907
 25422: 33 07 10 01 03           a0 = 0x30110
 25427: 95 77 00 00 10           a0 = a0 + 0x100000
 25432: 01                       fallthrough
      :                          @1908
 25433: 82 78                    a1 = u64 [a0]
 25435: c9 87 09                 a2 = a0 - a1
 25438: aa 59 06                 jump @1910 if a2 == s0
      :                          @1909
 25441: 28 43 3d                 jump @2553
      :                          @1910
 25444: c9 68 09                 a2 = a1 - s1
 25447: 01                       fallthrough
      :                          @1911
 25448: 82 7a                    a3 = u64 [a0]
 25450: ab 8a ef                 jump @1908 if a3 != a1
      :                          @1912
 25453: 7b 79                    u64 [a0] = a2
 25455: 33 0b                    a4 = 0
 25457: 01                       fallthrough
      :                          @1913
 25458: ab 8a e7                 jump @1908 if a3 != a1
      :                          @1914
 25461: 28 2f 3d                 jump @2553
      :                          @1915 [@dyn 215]
 25464: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 25469: 97 89 0d                 a2 = a1 << 0xd
 25472: d3 98 08                 a1 = a1 ^ a2
 25475: 98 89 07                 a2 = a1 >> 0x7
 25478: 3a 0a 60 00 03           a3 = u64 [0x30060]
 25483: d3 98 08                 a1 = a1 ^ a2
 25486: 97 89 11                 a2 = a1 << 0x11
 25489: d3 98 08                 a1 = a1 ^ a2
 25492: ca a8 09                 a2 = a1 * a3
 25495: 3e 08 e0 00 03           u64 [0x300e0] = a1
 25500: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
 25510: d6 89 0b                 a4 = a2 mulhu a1
 25513: 98 bb 04                 a4 = a4 >> 0x4
 25516: 33 0c 14                 a5 = 0x14
 25519: ca cb 0b                 a4 = a4 * a5
 25522: c9 b9 09                 a2 = a2 - a4
 25525: 7b 19 68 02              u64 [sp + 0x268] = a2
 25529: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 25534: 97 9b 0d                 a4 = a2 << 0xd
 25537: d3 b9 09                 a2 = a2 ^ a4
 25540: 98 9b 07                 a4 = a2 >> 0x7
 25543: d3 b9 09                 a2 = a2 ^ a4
 25546: 97 9b 11                 a4 = a2 << 0x11
 25549: d3 b9 09                 a2 = a2 ^ a4
 25552: ca a9 0a                 a3 = a2 * a3
 25555: 3e 09 e0 00 03           u64 [0x300e0] = a2
 25560: d6 8a 07                 a0 = a3 mulhu a1
 25563: 98 78 02                 a1 = a0 >> 0x2
 25566: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
 25569: c8 78 08                 a1 = a1 + a0
 25572: 82 17 68 02              a0 = u64 [sp + 0x268]
 25576: c9 8a 08                 a1 = a3 - a1
 25579: 95 88 01                 a1 = a1 + 0x1
 25582: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 25586: 50 20 b0 01 38 ea        ra = 432, jump @1586
      :                          @1916 [@dyn 216]
 25592: 7b 17 90 00              u64 [sp + 0x90] = a0
 25596: 95 17 68 02              a0 = sp + 0x268
 25600: 7b 17 50 01              u64 [sp + 0x150] = a0
 25604: 33 07 50 03              a0 = 0x350
 25608: 7b 17 58 01              u64 [sp + 0x158] = a0
 25612: 95 18 b0 00              a1 = sp + 0xb0
 25616: 7b 18 60 01              u64 [sp + 0x160] = a1
 25620: 7b 17 68 01              u64 [sp + 0x168] = a0
 25624: 95 18 90 00              a1 = sp + 0x90
 25628: 7b 18 70 01              u64 [sp + 0x170] = a1
 25632: 7b 17 78 01              u64 [sp + 0x178] = a0
 25636: 33 07 d8 04 01           a0 = 0x104d8
 25641: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 25645: 49 21 00 01 03           u64 [sp + 256] = 0x3
 25650: 49 21 18 01              u64 [sp + 280] = 0
 25654: 95 18 50 01              a1 = sp + 0x150
 25658: 7b 18 08 01              u64 [sp + 0x108] = a1
 25662: 49 21 10 01 03           u64 [sp + 272] = 0x3
 25667: 95 17 c8 00              a0 = sp + 0xc8
 25671: 95 18 f8 00              a1 = sp + 0xf8
 25675: 50 20 b2 01 7a bb        ra = 434, jump @637
      :                          @1917 [@dyn 217]
 25681: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 25685: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 25689: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 25693: 33 07 02                 a0 = 0x2
 25696: 33 08                    a1 = 0
 25698: 33 09                    a2 = 0
 25700: 64 5a                    a3 = s0
 25702: 33 00 b4 01              ra = 0x1b4
 25706: 0a 64                    ecalli 100 // 'log'
 25708: 01                       fallthrough
      :                          @1918 [@dyn 218]
 25709: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 25714: 55 38 00 00 f0 09        jump @1920 if a1 >=u 4293918720
      :                          @1919
 25720: 28 2c 3c                 jump @2553
      :                          @1920
 25723: 33 07 10 01 03           a0 = 0x30110
 25728: 95 77 00 00 10           a0 = a0 + 0x100000
 25733: 01                       fallthrough
      :                          @1921
 25734: 82 78                    a1 = u64 [a0]
 25736: c9 87 09                 a2 = a0 - a1
 25739: aa 59 06                 jump @1923 if a2 == s0
      :                          @1922
 25742: 28 16 3c                 jump @2553
      :                          @1923
 25745: c9 68 09                 a2 = a1 - s1
 25748: 01                       fallthrough
      :                          @1924
 25749: 82 7a                    a3 = u64 [a0]
 25751: ab 8a ef                 jump @1921 if a3 != a1
      :                          @1925
 25754: 7b 79                    u64 [a0] = a2
 25756: 33 0b                    a4 = 0
 25758: 01                       fallthrough
      :                          @1926
 25759: ab 8a e7                 jump @1921 if a3 != a1
      :                          @1927
 25762: 28 02 3c                 jump @2553
      :                          @1928 [@dyn 219]
 25765: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 25770: 97 89 0d                 a2 = a1 << 0xd
 25773: d3 98 08                 a1 = a1 ^ a2
 25776: 98 89 07                 a2 = a1 >> 0x7
 25779: d3 89 09                 a2 = a2 ^ a1
 25782: 97 9a 11                 a3 = a2 << 0x11
 25785: 3a 08 60 00 03           a1 = u64 [0x30060]
 25790: d3 9a 0a                 a3 = a3 ^ a2
 25793: 3a 09 b0 00 03           a2 = u64 [0x300b0]
 25798: ca 8a 0b                 a4 = a3 * a1
 25801: 3e 0a e0 00 03           u64 [0x300e0] = a3
 25806: d6 9b 0a                 a3 = a4 mulhu a2
 25809: c9 ab 0c                 a5 = a4 - a3
 25812: 98 cc 01                 a5 = a5 >> 0x1
 25815: c8 ca 0a                 a3 = a3 + a5
 25818: 98 ac 06                 a5 = a3 >> 0x6
 25821: 33 03 65                 t1 = 0x65
 25824: ca 3c 0c                 a5 = a5 * t1
 25827: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 25832: c9 cb 0b                 a4 = a4 - a5
 25835: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
 25838: 97 6c 0d                 a5 = s1 << 0xd
 25841: d3 c6 06                 s1 = s1 ^ a5
 25844: 98 6c 07                 a5 = s1 >> 0x7
 25847: d3 c6 06                 s1 = s1 ^ a5
 25850: 97 6c 11                 a5 = s1 << 0x11
 25853: d3 6c 0c                 a5 = a5 ^ s1
 25856: ca 8c 05                 s0 = a5 * a1
 25859: 3e 0c e0 00 03           u64 [0x300e0] = a5
 25864: d6 95 0c                 a5 = s0 mulhu a2
 25867: c9 c5 06                 s1 = s0 - a5
 25870: 98 66 01                 s1 = s1 >> 0x1
 25873: c8 6c 0c                 a5 = a5 + s1
 25876: 98 cc 06                 a5 = a5 >> 0x6
 25879: ca 3c 0c                 a5 = a5 * t1
 25882: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 25887: c9 c5 05                 s0 = s0 - a5
 25890: 95 5c ce                 a5 = s0 + 0xffffffffffffffce
 25893: 97 b6 0d                 s1 = a4 << 0xd
 25896: d3 b6 06                 s1 = s1 ^ a4
 25899: 98 6b 07                 a4 = s1 >> 0x7
 25902: d3 b6 06                 s1 = s1 ^ a4
 25905: 97 6b 11                 a4 = s1 << 0x11
 25908: d3 6b 0b                 a4 = a4 ^ s1
 25911: ca 8b 05                 s0 = a4 * a1
 25914: 3e 0b e0 00 03           u64 [0x300e0] = a4
 25919: d6 95 0b                 a4 = s0 mulhu a2
 25922: c9 b5 06                 s1 = s0 - a4
 25925: 98 66 01                 s1 = s1 >> 0x1
 25928: c8 6b 0b                 a4 = a4 + s1
 25931: 98 bb 06                 a4 = a4 >> 0x6
 25934: ca 3b 0b                 a4 = a4 * t1
 25937: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 25942: c9 b5 05                 s0 = s0 - a4
 25945: 95 5b ce                 a4 = s0 + 0xffffffffffffffce
 25948: 97 a6 0d                 s1 = a3 << 0xd
 25951: d3 a6 06                 s1 = s1 ^ a3
 25954: 98 6a 07                 a3 = s1 >> 0x7
 25957: d3 a6 06                 s1 = s1 ^ a3
 25960: 97 6a 11                 a3 = s1 << 0x11
 25963: d3 6a 0a                 a3 = a3 ^ s1
 25966: ca 8a 08                 a1 = a3 * a1
 25969: 3e 0a e0 00 03           u64 [0x300e0] = a3
 25974: d6 98 07                 a0 = a1 mulhu a2
 25977: c9 78 09                 a2 = a1 - a0
 25980: 98 99 01                 a2 = a2 >> 0x1
 25983: c8 97 07                 a0 = a0 + a2
 25986: 98 77 06                 a0 = a0 >> 0x6
 25989: ca 37 07                 a0 = a0 * t1
 25992: c9 78 08                 a1 = a1 - a0
 25995: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
 25998: 7b 1c d0 00              u64 [sp + 0xd0] = a5
 26002: 7b 12 c8 00              u64 [sp + 0xc8] = t0
 26006: 7b 1b d8 00              u64 [sp + 0xd8] = a4
 26010: 7b 17 e0 00              u64 [sp + 0xe0] = a0
 26014: 95 17 c8 00              a0 = sp + 0xc8
 26018: 95 15 c8 00              s0 = sp + 0xc8
 26022: 28 cd e8                 jump @1593
      :                          @1929
 26025: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 26029: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 26033: 33 07 76                 a0 = 0x76
 26036: 7b 17 00 01              u64 [sp + 0x100] = a0
 26040: 95 17 b0 00              a0 = sp + 0xb0
 26044: 7b 17 08 01              u64 [sp + 0x108] = a0
 26048: 33 07 50 03              a0 = 0x350
 26052: 7b 17 10 01              u64 [sp + 0x110] = a0
 26056: 33 07 28 05 01           a0 = 0x10528
 26061: 7b 17 50 01              u64 [sp + 0x150] = a0
 26065: 49 21 58 01 02           u64 [sp + 344] = 0x2
 26070: 49 21 70 01              u64 [sp + 368] = 0
 26074: 95 18 f8 00              a1 = sp + 0xf8
 26078: 7b 18 60 01              u64 [sp + 0x160] = a1
 26082: 49 21 68 01 02           u64 [sp + 360] = 0x2
 26087: 95 17 90 00              a0 = sp + 0x90
 26091: 95 18 50 01              a1 = sp + 0x150
 26095: 50 20 b8 01 d6 b9        ra = 440, jump @637
      :                          @1930 [@dyn 220]
 26101: 82 15 98 00              s0 = u64 [sp + 0x98]
 26105: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 26109: 82 16 90 00              s1 = u64 [sp + 0x90]
 26113: 33 07 02                 a0 = 0x2
 26116: 33 08                    a1 = 0
 26118: 33 09                    a2 = 0
 26120: 64 5a                    a3 = s0
 26122: 33 00 ba 01              ra = 0x1ba
 26126: 0a 64                    ecalli 100 // 'log'
 26128: 01                       fallthrough
      :                          @1931 [@dyn 221]
 26129: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 26134: 55 38 00 00 f0 09        jump @1933 if a1 >=u 4293918720
      :                          @1932
 26140: 28 88 3a                 jump @2553
      :                          @1933
 26143: 33 07 10 01 03           a0 = 0x30110
 26148: 95 77 00 00 10           a0 = a0 + 0x100000
 26153: 01                       fallthrough
      :                          @1934
 26154: 82 78                    a1 = u64 [a0]
 26156: c9 87 09                 a2 = a0 - a1
 26159: aa 59 06                 jump @1936 if a2 == s0
      :                          @1935
 26162: 28 72 3a                 jump @2553
      :                          @1936
 26165: c9 68 09                 a2 = a1 - s1
 26168: 01                       fallthrough
      :                          @1937
 26169: 82 7a                    a3 = u64 [a0]
 26171: ab 8a ef                 jump @1934 if a3 != a1
      :                          @1938
 26174: 7b 79                    u64 [a0] = a2
 26176: 33 0b                    a4 = 0
 26178: 01                       fallthrough
      :                          @1939
 26179: ab 8a e7                 jump @1934 if a3 != a1
      :                          @1940
 26182: 28 5e 3a                 jump @2553
      :                          @1941 [@dyn 222]
 26185: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 26190: 97 89 0d                 a2 = a1 << 0xd
 26193: d3 98 08                 a1 = a1 ^ a2
 26196: 98 89 07                 a2 = a1 >> 0x7
 26199: d3 98 08                 a1 = a1 ^ a2
 26202: 97 89 11                 a2 = a1 << 0x11
 26205: d3 98 08                 a1 = a1 ^ a2
 26208: 3a 09 60 00 03           a2 = u64 [0x30060]
 26213: 3a 0a 68 00 03           a3 = u64 [0x30068]
 26218: 3e 08 e0 00 03           u64 [0x300e0] = a1
 26223: ca 98 07                 a0 = a1 * a2
 26226: 98 78 03                 a1 = a0 >> 0x3
 26229: d6 a8 08                 a1 = a1 mulhu a3
 26232: 98 88 04                 a1 = a1 >> 0x4
 26235: 96 88 e8 03              a1 = a1 * 0x3e8
 26239: c9 87 07                 a0 = a0 - a1
 26242: 86 77 01                 a0 = a0 | 0x1
 26245: 50 20 be 01 3d e8        ra = 446, jump @1595
      :                          @1942 [@dyn 223]
 26251: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 26255: 7b 18 d0 00              u64 [sp + 0xd0] = a1
 26259: 95 17 c8 00              a0 = sp + 0xc8
 26263: 7b 17 90 00              u64 [sp + 0x90] = a0
 26267: 33 07 ea 00              a0 = 0xea
 26271: 7b 17 98 00              u64 [sp + 0x98] = a0
 26275: 33 07 60 05 01           a0 = 0x10560
 26280: 7b 17 50 01              u64 [sp + 0x150] = a0
 26284: 49 21 58 01 01           u64 [sp + 344] = 0x1
 26289: 49 21 70 01              u64 [sp + 368] = 0
 26293: 95 18 90 00              a1 = sp + 0x90
 26297: 7b 18 60 01              u64 [sp + 0x160] = a1
 26301: 49 21 68 01 01           u64 [sp + 360] = 0x1
 26306: 95 17 f8 00              a0 = sp + 0xf8
 26310: 95 18 50 01              a1 = sp + 0x150
 26314: 50 20 c0 01 fb b8        ra = 448, jump @637
      :                          @1943 [@dyn 224]
 26320: 82 15 00 01              s0 = u64 [sp + 0x100]
 26324: 82 1b 08 01              a4 = u64 [sp + 0x108]
 26328: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 26332: 33 07 02                 a0 = 0x2
 26335: 33 08                    a1 = 0
 26337: 33 09                    a2 = 0
 26339: 64 5a                    a3 = s0
 26341: 33 00 c2 01              ra = 0x1c2
 26345: 0a 64                    ecalli 100 // 'log'
 26347: 01                       fallthrough
      :                          @1944 [@dyn 225]
 26348: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 26353: 55 38 00 00 f0 09        jump @1946 if a1 >=u 4293918720
      :                          @1945
 26359: 28 ad 39                 jump @2553
      :                          @1946
 26362: 33 07 10 01 03           a0 = 0x30110
 26367: 95 77 00 00 10           a0 = a0 + 0x100000
 26372: 01                       fallthrough
      :                          @1947
 26373: 82 78                    a1 = u64 [a0]
 26375: c9 87 09                 a2 = a0 - a1
 26378: aa 59 06                 jump @1949 if a2 == s0
      :                          @1948
 26381: 28 97 39                 jump @2553
      :                          @1949
 26384: c9 68 09                 a2 = a1 - s1
 26387: 01                       fallthrough
      :                          @1950
 26388: 82 7a                    a3 = u64 [a0]
 26390: ab 8a ef                 jump @1947 if a3 != a1
      :                          @1951
 26393: 7b 79                    u64 [a0] = a2
 26395: 33 0b                    a4 = 0
 26397: 01                       fallthrough
      :                          @1952
 26398: ab 8a e7                 jump @1947 if a3 != a1
      :                          @1953
 26401: 28 83 39                 jump @2553
      :                          @1954 [@dyn 226]
 26404: 95 17 28                 a0 = sp + 0x28
 26407: 33 00 c6 01              ra = 0x1c6
 26411: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 26414: 7b 15                    u64 [sp] = s0
 26416: 33 03 10 01 03           t1 = 0x30110
 26421: 33 02 00 00 10           t0 = 0x100000
 26426: c8 23 04                 t2 = t1 + t0
 26429: 28 69 c1                 jump @780
      :                          @1955 [@dyn 227]
 26432: 82 18 38                 a1 = u64 [sp + 0x38]
 26435: 7b 18                    u64 [sp] = a1
 26437: 82 15 30                 s0 = u64 [sp + 0x30]
 26440: 68 87                    a0 = clz a1
 26442: 9a 7a 40                 a3 = 0x40 - a0
 26445: 64 57                    a0 = s0
 26447: 33 09                    a2 = 0
 26449: 50 20 c8 01 8e a9        ra = 456, jump @350
      :                          @1956 [@dyn 228]
 26455: 82 17 28                 a0 = u64 [sp + 0x28]
 26458: 7b 17 08                 u64 [sp + 0x8] = a0
 26461: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 26466: 97 89 0d                 a2 = a1 << 0xd
 26469: d3 98 08                 a1 = a1 ^ a2
 26472: 98 89 07                 a2 = a1 >> 0x7
 26475: 3a 0a 60 00 03           a3 = u64 [0x30060]
 26480: d3 98 08                 a1 = a1 ^ a2
 26483: 97 89 11                 a2 = a1 << 0x11
 26486: d3 98 08                 a1 = a1 ^ a2
 26489: ca a8 09                 a2 = a1 * a3
 26492: 3a 0b 98 00 03           a4 = u64 [0x30098]
 26497: 3e 08 e0 00 03           u64 [0x300e0] = a1
 26502: 98 98 02                 a1 = a2 >> 0x2
 26505: d6 b8 08                 a1 = a1 mulhu a4
 26508: 98 88 02                 a1 = a1 >> 0x2
 26511: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 26516: 96 88 64                 a1 = a1 * 0x64
 26519: c9 89 08                 a1 = a2 - a1
 26522: 97 69 0d                 a2 = s1 << 0xd
 26525: d3 96 06                 s1 = s1 ^ a2
 26528: 98 69 07                 a2 = s1 >> 0x7
 26531: d3 96 06                 s1 = s1 ^ a2
 26534: 97 69 11                 a2 = s1 << 0x11
 26537: d3 69 09                 a2 = a2 ^ s1
 26540: ca a9 0a                 a3 = a2 * a3
 26543: 3e 09 e0 00 03           u64 [0x300e0] = a2
 26548: 98 a7 02                 a0 = a3 >> 0x2
 26551: d6 b7 07                 a0 = a0 mulhu a4
 26554: 98 77 02                 a0 = a0 >> 0x2
 26557: 96 77 64                 a0 = a0 * 0x64
 26560: c9 7a 0a                 a3 = a3 - a0
 26563: e6 a8 09                 a2 = minu(a1, a3)
 26566: e4 a8 0a                 a3 = maxu(a1, a3)
 26569: 7b 19 68 02              u64 [sp + 0x268] = a2
 26573: 7b 1a b0 00              u64 [sp + 0xb0] = a3
 26577: 7b 15 10                 u64 [sp + 0x10] = s0
 26580: 64 57                    a0 = s0
 26582: 82 18                    a1 = u64 [sp]
 26584: 50 20 ca 01 ae eb        ra = 458, jump @1697
      :                          @1957 [@dyn 229]
 26590: 7b 17 90 00              u64 [sp + 0x90] = a0
 26594: 95 17 68 02              a0 = sp + 0x268
 26598: 7b 17 50 01              u64 [sp + 0x150] = a0
 26602: 33 07 a8 03              a0 = 0x3a8
 26606: 7b 17 58 01              u64 [sp + 0x158] = a0
 26610: 95 18 b0 00              a1 = sp + 0xb0
 26614: 7b 18 60 01              u64 [sp + 0x160] = a1
 26618: 7b 17 68 01              u64 [sp + 0x168] = a0
 26622: 95 17 90 00              a0 = sp + 0x90
 26626: 7b 17 70 01              u64 [sp + 0x170] = a0
 26630: 33 07 50 03              a0 = 0x350
 26634: 7b 17 78 01              u64 [sp + 0x178] = a0
 26638: 33 07 90 05 01           a0 = 0x10590
 26643: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 26647: 49 21 00 01 03           u64 [sp + 256] = 0x3
 26652: 49 21 18 01              u64 [sp + 280] = 0
 26656: 95 18 50 01              a1 = sp + 0x150
 26660: 7b 18 08 01              u64 [sp + 0x108] = a1
 26664: 49 21 10 01 03           u64 [sp + 272] = 0x3
 26669: 95 17 c8 00              a0 = sp + 0xc8
 26673: 95 18 f8 00              a1 = sp + 0xf8
 26677: 50 20 cc 01 90 b7        ra = 460, jump @637
      :                          @1958 [@dyn 230]
 26683: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 26687: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 26691: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 26695: 33 07 02                 a0 = 0x2
 26698: 33 08                    a1 = 0
 26700: 33 09                    a2 = 0
 26702: 64 5a                    a3 = s0
 26704: 33 00 ce 01              ra = 0x1ce
 26708: 0a 64                    ecalli 100 // 'log'
 26710: 01                       fallthrough
      :                          @1959 [@dyn 231]
 26711: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 26716: 53 38 00 00 f0 25        jump @1965 if a1 <u 4293918720
      :                          @1960
 26722: 33 07 10 01 03           a0 = 0x30110
 26727: 95 77 00 00 10           a0 = a0 + 0x100000
 26732: 01                       fallthrough
      :                          @1961
 26733: 82 78                    a1 = u64 [a0]
 26735: c9 87 09                 a2 = a0 - a1
 26738: ab 59 0f                 jump @1965 if a2 != s0
      :                          @1962
 26741: c9 68 09                 a2 = a1 - s1
 26744: 01                       fallthrough
      :                          @1963
 26745: 82 7a                    a3 = u64 [a0]
 26747: ab 8a f2                 jump @1961 if a3 != a1
      :                          @1964
 26750: 7b 79                    u64 [a0] = a2
 26752: 01                       fallthrough
      :                          @1965
 26753: 82 16 10                 s1 = u64 [sp + 0x10]
 26756: 82 18 08                 a1 = u64 [sp + 0x8]
 26759: 52 08 06                 jump @1967 if a1 != 0
      :                          @1966
 26762: 28 1a 38                 jump @2553
      :                          @1967
 26765: 54 38 00 00 02 09        jump @1969 if a1 <=u 131072
      :                          @1968
 26771: 28 11 38                 jump @2553
      :                          @1969
 26774: 97 87 03                 a0 = a1 << 0x3
 26777: 33 08 10 01 03           a1 = 0x30110
 26782: 95 88 00 00 10           a1 = a1 + 0x100000
 26787: 01                       fallthrough
      :                          @1970
 26788: 82 89                    a2 = u64 [a1]
 26790: c9 98 0a                 a3 = a1 - a2
 26793: aa 6a 06                 jump @1972 if a3 == s1
      :                          @1971
 26796: 28 f8 37                 jump @2553
      :                          @1972
 26799: c9 79 0a                 a3 = a2 - a0
 26802: 01                       fallthrough
      :                          @1973
 26803: 82 8b                    a4 = u64 [a1]
 26805: ab 9b ef                 jump @1970 if a4 != a2
      :                          @1974
 26808: 7b 8a                    u64 [a1] = a3
 26810: 33 0c                    a5 = 0
 26812: 01                       fallthrough
      :                          @1975
 26813: ab 9b e7                 jump @1970 if a4 != a2
      :                          @1976
 26816: 28 e4 37                 jump @2553
      :                          @1977 [@dyn 232]
 26819: 95 17 50 01              a0 = sp + 0x150
 26823: 95 15 50 01              s0 = sp + 0x150
 26827: 33 00 d2 01              ra = 0x1d2
 26831: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 26834: 7b 10 40                 u64 [sp + 0x40] = ra
 26837: 7b 15 38                 u64 [sp + 0x38] = s0
 26840: 7b 16 30                 u64 [sp + 0x30] = s1
 26843: 64 70                    ra = a0
 26845: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 26850: 3a 03 48 00 03           t1 = u64 [0x30048]
 26855: 97 89 0d                 a2 = a1 << 0xd
 26858: d3 98 08                 a1 = a1 ^ a2
 26861: 98 89 07                 a2 = a1 >> 0x7
 26864: d3 98 08                 a1 = a1 ^ a2
 26867: 97 89 11                 a2 = a1 << 0x11
 26870: d3 98 08                 a1 = a1 ^ a2
 26873: 3a 09 50 00 03           a2 = u64 [0x30050]
 26878: 3e 08 e0 00 03           u64 [0x300e0] = a1
 26883: ca 38 07                 a0 = a1 * t1
 26886: 98 78 03                 a1 = a0 >> 0x3
 26889: d6 98 08                 a1 = a1 mulhu a2
 26892: 98 88 04                 a1 = a1 >> 0x4
 26895: 96 88 e8 03              a1 = a1 * 0x3e8
 26899: c9 87 07                 a0 = a0 - a1
 26902: 95 79 64                 a2 = a0 + 0x64
 26905: 33 07 02                 a0 = 0x2
 26908: 33 0a 09                 a3 = 0x9
 26911: 28 f2 e6                 jump @1616
      :                          @1978 [@dyn 233]
 26914: 82 17 50 01              a0 = u64 [sp + 0x150]
 26918: 82 18 58 01              a1 = u64 [sp + 0x158]
 26922: 82 19 60 01              a2 = u64 [sp + 0x160]
 26926: 7b 17 68 02              u64 [sp + 0x268] = a0
 26930: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 26934: 7b 19 90 00              u64 [sp + 0x90] = a2
 26938: 95 17 68 02              a0 = sp + 0x268
 26942: 7b 17 50 01              u64 [sp + 0x150] = a0
 26946: 33 07 50 03              a0 = 0x350
 26950: 7b 17 58 01              u64 [sp + 0x158] = a0
 26954: 95 18 b0 00              a1 = sp + 0xb0
 26958: 7b 18 60 01              u64 [sp + 0x160] = a1
 26962: 7b 17 68 01              u64 [sp + 0x168] = a0
 26966: 95 18 90 00              a1 = sp + 0x90
 26970: 7b 18 70 01              u64 [sp + 0x170] = a1
 26974: 7b 17 78 01              u64 [sp + 0x178] = a0
 26978: 33 07 d0 05 01           a0 = 0x105d0
 26983: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 26987: 49 21 00 01 03           u64 [sp + 256] = 0x3
 26992: 49 21 18 01              u64 [sp + 280] = 0
 26996: 7b 15 08 01              u64 [sp + 0x108] = s0
 27000: 49 21 10 01 03           u64 [sp + 272] = 0x3
 27005: 95 17 c8 00              a0 = sp + 0xc8
 27009: 95 18 f8 00              a1 = sp + 0xf8
 27013: 50 20 d4 01 40 b6        ra = 468, jump @637
      :                          @1979 [@dyn 234]
 27019: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 27023: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 27027: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 27031: 33 07 02                 a0 = 0x2
 27034: 33 08                    a1 = 0
 27036: 33 09                    a2 = 0
 27038: 64 5a                    a3 = s0
 27040: 33 00 d6 01              ra = 0x1d6
 27044: 0a 64                    ecalli 100 // 'log'
 27046: 01                       fallthrough
      :                          @1980 [@dyn 235]
 27047: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 27052: 55 38 00 00 f0 09        jump @1982 if a1 >=u 4293918720
      :                          @1981
 27058: 28 f2 36                 jump @2553
      :                          @1982
 27061: 33 07 10 01 03           a0 = 0x30110
 27066: 95 77 00 00 10           a0 = a0 + 0x100000
 27071: 01                       fallthrough
      :                          @1983
 27072: 82 78                    a1 = u64 [a0]
 27074: c9 87 09                 a2 = a0 - a1
 27077: aa 59 06                 jump @1985 if a2 == s0
      :                          @1984
 27080: 28 dc 36                 jump @2553
      :                          @1985
 27083: c9 68 09                 a2 = a1 - s1
 27086: 01                       fallthrough
      :                          @1986
 27087: 82 7a                    a3 = u64 [a0]
 27089: ab 8a ef                 jump @1983 if a3 != a1
      :                          @1987
 27092: 7b 79                    u64 [a0] = a2
 27094: 33 0b                    a4 = 0
 27096: 01                       fallthrough
      :                          @1988
 27097: ab 8a e7                 jump @1983 if a3 != a1
      :                          @1989
 27100: 28 c8 36                 jump @2553
      :                          @1990 [@dyn 236]
 27103: 3a 07 60 00 03           a0 = u64 [0x30060]
 27108: 7b 17 10                 u64 [sp + 0x10] = a0
 27111: 33 07 f4 01              a0 = 0x1f4
 27115: 33 00 da 01              ra = 0x1da
 27119: 33 09 02                 a2 = 0x2
 27122: 33 0a 09                 a3 = 0x9
 27125: 28 8b c0                 jump @820
      :                          @1991 [@dyn 237]
 27128: 64 75                    s0 = a0
 27130: 33 07 64                 a0 = 0x64
 27133: 33 00 dc 01              ra = 0x1dc
 27137: 33 09 02                 a2 = 0x2
 27140: 33 0a 09                 a3 = 0x9
 27143: 28 79 c0                 jump @820
      :                          @1992 [@dyn 238]
 27146: 64 76                    s1 = a0
 27148: 64 57                    a0 = s0
 27150: 50 20 de 01 a1 c0        ra = 478, jump @831
      :                          @1993 [@dyn 239]
 27156: 82 1c 10                 a5 = u64 [sp + 0x10]
 27159: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 27164: 64 7a                    a3 = a0
 27166: 97 97 0d                 a0 = a2 << 0xd
 27169: d3 97 07                 a0 = a0 ^ a2
 27172: 98 79 07                 a2 = a0 >> 0x7
 27175: d3 97 07                 a0 = a0 ^ a2
 27178: 97 79 11                 a2 = a0 << 0x11
 27181: d3 97 07                 a0 = a0 ^ a2
 27184: 3e 07 e0 00 03           u64 [0x300e0] = a0
 27189: 64 62                    t0 = s1
 27191: 95 68 ff                 a1 = s1 + 0xffffffffffffffff
 27194: ca c7 07                 a0 = a0 * a5
 27197: cd 87 0b                 a4 = a0 %u a1
 27200: 95 bb 01                 a4 = a4 + 0x1
 27203: 33 06 01                 s1 = 0x1
 27206: 64 a8                    a1 = a3
 27208: 64 b7                    a0 = a4
 27210: 28 0e                    jump @1996
      :                          @1994
 27212: 98 77 01                 a0 = a0 >> 0x1
 27215: ca 88 08                 a1 = a1 * a1
 27218: 52 07 06                 jump @1996 if a0 != 0
      :                          @1995
 27221: 28 74 2f                 jump @2467
      :                          @1996
 27224: 84 79 01                 a2 = a0 & 0x1
 27227: cd 58 08                 a1 = a1 %u s0
 27230: 51 09 ee                 jump @1994 if a2 == 0
      :                          @1997
 27233: ca 68 09                 a2 = a1 * s1
 27236: cd 59 06                 s1 = a2 %u s0
 27239: 28 e5                    jump @1994
      :                          @1998 [@dyn 240]
 27241: 33 07 08                 a0 = 0x8
 27244: 50 20 e2 01 0f b6        ra = 482, jump @655
      :                          @1999 [@dyn 241]
 27250: 64 75                    s0 = a0
 27252: 33 06 01                 s1 = 0x1
 27255: 7b 76                    u64 [a0] = s1
 27257: 33 07 18                 a0 = 0x18
 27260: 50 20 e4 01 ff b5        ra = 484, jump @655
      :                          @2000 [@dyn 242]
 27266: 64 7b                    a4 = a0
 27268: 7b 76                    u64 [a0] = s1
 27270: 49 1b 08 ff              u64 [a4 + 8] = 0xffffffffffffffff
 27274: 49 1b 10 ff              u64 [a4 + 16] = 0xffffffffffffffff
 27278: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 27283: 97 89 0d                 a2 = a1 << 0xd
 27286: d3 98 08                 a1 = a1 ^ a2
 27289: 98 89 07                 a2 = a1 >> 0x7
 27292: d3 98 08                 a1 = a1 ^ a2
 27295: 3a 09 60 00 03           a2 = u64 [0x30060]
 27300: 97 8a 11                 a3 = a1 << 0x11
 27303: d3 a8 08                 a1 = a1 ^ a3
 27306: ca 98 09                 a2 = a1 * a2
 27309: 3e 08 e0 00 03           u64 [0x300e0] = a1
 27314: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
 27324: d6 79 07                 a0 = a2 mulhu a0
 27327: 98 77 04                 a0 = a0 >> 0x4
 27330: 96 77 14                 a0 = a0 * 0x14
 27333: c9 79 06                 s1 = a2 - a0
 27336: 7b 16 b0 00              u64 [sp + 0xb0] = s1
 27340: 95 17 90 00              a0 = sp + 0x90
 27344: 7b 15 10                 u64 [sp + 0x10] = s0
 27347: 64 58                    a1 = s0
 27349: 7b 1b 08                 u64 [sp + 0x8] = a4
 27352: 64 b9                    a2 = a4
 27354: 64 6a                    a3 = s1
 27356: 33 00 e6 01              ra = 0x1e6
 27360: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 27363: 7b 10 30                 u64 [sp + 0x30] = ra
 27366: 7b 15 28                 u64 [sp + 0x28] = s0
 27369: 7b 16 20                 u64 [sp + 0x20] = s1
 27372: 64 90                    ra = a2
 27374: 7b 18 18                 u64 [sp + 0x18] = a1
 27377: 7b 17                    u64 [sp] = a0
 27379: 95 a9 01                 a2 = a3 + 0x1
 27382: 7b 19 08                 u64 [sp + 0x8] = a2
 27385: 97 99 03                 a2 = a2 << 0x3
 27388: 33 03 10 01 03           t1 = 0x30110
 27393: 33 02 00 00 10           t0 = 0x100000
 27398: c8 23 04                 t2 = t1 + t0
 27401: 28 9e e7                 jump @1675
      :                          @2001 [@dyn 243]
 27404: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 27408: ac 86 06                 jump @2003 if s1 <u a1
      :                          @2002
 27411: 28 ac 35                 jump @2556
      :                          @2003
 27414: 82 17 98 00              a0 = u64 [sp + 0x98]
 27418: 97 66 03                 s1 = s1 << 0x3
 27421: 7b 17                    u64 [sp] = a0
 27423: c8 76 06                 s1 = s1 + a0
 27426: 95 17 b0 00              a0 = sp + 0xb0
 27430: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 27434: 33 07 50 03              a0 = 0x350
 27438: 7b 17 00 01              u64 [sp + 0x100] = a0
 27442: 7b 16 08 01              u64 [sp + 0x108] = s1
 27446: 33 07 a8 03              a0 = 0x3a8
 27450: 7b 17 10 01              u64 [sp + 0x110] = a0
 27454: 33 07 58 06 01           a0 = 0x10658
 27459: 7b 17 50 01              u64 [sp + 0x150] = a0
 27463: 49 21 58 01 02           u64 [sp + 344] = 0x2
 27468: 49 21 70 01              u64 [sp + 368] = 0
 27472: 95 18 f8 00              a1 = sp + 0xf8
 27476: 7b 18 60 01              u64 [sp + 0x160] = a1
 27480: 49 21 68 01 02           u64 [sp + 360] = 0x2
 27485: 95 17 c8 00              a0 = sp + 0xc8
 27489: 95 18 50 01              a1 = sp + 0x150
 27493: 50 20 e8 01 60 b4        ra = 488, jump @637
      :                          @2004 [@dyn 244]
 27499: 82 16 d0 00              s1 = u64 [sp + 0xd0]
 27503: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 27507: 82 15 c8 00              s0 = u64 [sp + 0xc8]
 27511: 33 07 02                 a0 = 0x2
 27514: 33 08                    a1 = 0
 27516: 33 09                    a2 = 0
 27518: 64 6a                    a3 = s1
 27520: 33 00 ea 01              ra = 0x1ea
 27524: 0a 64                    ecalli 100 // 'log'
 27526: 01                       fallthrough
      :                          @2005 [@dyn 245]
 27527: 95 58 ff ff ef           a1 = s0 + 0xffffffffffefffff
 27532: 53 38 00 00 f0 27        jump @2011 if a1 <u 4293918720
      :                          @2006
 27538: 33 07 10 01 03           a0 = 0x30110
 27543: 95 77 00 00 10           a0 = a0 + 0x100000
 27548: 01                       fallthrough
      :                          @2007
 27549: 82 78                    a1 = u64 [a0]
 27551: c9 87 09                 a2 = a0 - a1
 27554: ab 69 11                 jump @2011 if a2 != s1
      :                          @2008
 27557: c9 58 09                 a2 = a1 - s0
 27560: 01                       fallthrough
      :                          @2009
 27561: 82 7a                    a3 = u64 [a0]
 27563: ab 8a f2                 jump @2007 if a3 != a1
      :                          @2010
 27566: 7b 79                    u64 [a0] = a2
 27568: 33 0b                    a4 = 0
 27570: 01                       fallthrough
      :                          @2011
 27571: 82 17 90 00              a0 = u64 [sp + 0x90]
 27575: 82 16                    s1 = u64 [sp]
 27577: 51 07 2b                 jump @2018 if a0 == 0
      :                          @2012
 27580: 56 37 00 00 02 28        jump @2018 if a0 >u 131072
      :                          @2013
 27586: 97 77 03                 a0 = a0 << 0x3
 27589: 33 08 10 01 03           a1 = 0x30110
 27594: 95 88 00 00 10           a1 = a1 + 0x100000
 27599: 01                       fallthrough
      :                          @2014
 27600: 82 89                    a2 = u64 [a1]
 27602: c9 98 0a                 a3 = a1 - a2
 27605: ab 6a 0f                 jump @2018 if a3 != s1
      :                          @2015
 27608: c9 79 0a                 a3 = a2 - a0
 27611: 01                       fallthrough
      :                          @2016
 27612: 82 8b                    a4 = u64 [a1]
 27614: ab 9b f2                 jump @2014 if a4 != a2
      :                          @2017
 27617: 7b 8a                    u64 [a1] = a3
 27619: 01                       fallthrough
      :                          @2018
 27620: 33 07 10 01 03           a0 = 0x30110
 27625: 95 77 00 00 10           a0 = a0 + 0x100000
 27630: 82 1c 08                 a5 = u64 [sp + 0x8]
 27633: 01                       fallthrough
      :                          @2019
 27634: 82 78                    a1 = u64 [a0]
 27636: c9 87 09                 a2 = a0 - a1
 27639: ab c9 11                 jump @2023 if a2 != a5
      :                          @2020
 27642: 95 89 e8                 a2 = a1 + 0xffffffffffffffe8
 27645: 01                       fallthrough
      :                          @2021
 27646: 82 7a                    a3 = u64 [a0]
 27648: ab 8a f2                 jump @2019 if a3 != a1
      :                          @2022
 27651: 7b 79                    u64 [a0] = a2
 27653: 33 0b                    a4 = 0
 27655: 01                       fallthrough
      :                          @2023
 27656: 33 07 10 01 03           a0 = 0x30110
 27661: 95 77 00 00 10           a0 = a0 + 0x100000
 27666: 82 1c 10                 a5 = u64 [sp + 0x10]
 27669: 01                       fallthrough
      :                          @2024
 27670: 82 78                    a1 = u64 [a0]
 27672: c9 87 09                 a2 = a0 - a1
 27675: aa c9 06                 jump @2026 if a2 == a5
      :                          @2025
 27678: 28 86 34                 jump @2553
      :                          @2026
 27681: 95 89 f8                 a2 = a1 + 0xfffffffffffffff8
 27684: 01                       fallthrough
      :                          @2027
 27685: 82 7a                    a3 = u64 [a0]
 27687: ab 8a ef                 jump @2024 if a3 != a1
      :                          @2028
 27690: 7b 79                    u64 [a0] = a2
 27692: 33 0b                    a4 = 0
 27694: 01                       fallthrough
      :                          @2029
 27695: ab 8a e7                 jump @2024 if a3 != a1
      :                          @2030
 27698: 28 72 34                 jump @2553
      :                          @2031 [@dyn 246]
 27701: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 27706: 3a 07 60 00 03           a0 = u64 [0x30060]
 27711: 97 9a 0d                 a3 = a2 << 0xd
 27714: d3 a9 09                 a2 = a2 ^ a3
 27717: 98 9a 07                 a3 = a2 >> 0x7
 27720: d3 a9 09                 a2 = a2 ^ a3
 27723: 97 9a 11                 a3 = a2 << 0x11
 27726: d3 a9 09                 a2 = a2 ^ a3
 27729: ca 79 0a                 a3 = a2 * a0
 27732: 3a 0b 68 00 03           a4 = u64 [0x30068]
 27737: 3e 09 e0 00 03           u64 [0x300e0] = a2
 27742: 98 a9 03                 a2 = a3 >> 0x3
 27745: d6 b9 09                 a2 = a2 mulhu a4
 27748: 98 99 04                 a2 = a2 >> 0x4
 27751: 96 99 e8 03              a2 = a2 * 0x3e8
 27755: c9 9a 0a                 a3 = a3 - a2
 27758: 86 a9 01                 a2 = a3 | 0x1
 27761: 95 99 02                 a2 = a2 + 0x2
 27764: 7b 19 b0 00              u64 [sp + 0xb0] = a2
 27768: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 27773: 97 9a 0d                 a3 = a2 << 0xd
 27776: d3 a9 09                 a2 = a2 ^ a3
 27779: 98 9a 07                 a3 = a2 >> 0x7
 27782: d3 a9 09                 a2 = a2 ^ a3
 27785: 97 9a 11                 a3 = a2 << 0x11
 27788: d3 a9 09                 a2 = a2 ^ a3
 27791: 3e 09 e0 00 03           u64 [0x300e0] = a2
 27796: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 27800: 52 08 06                 jump @2033 if a1 != 0
      :                          @2032
 27803: 28 23 34                 jump @2555
      :                          @2033
 27806: ca 79 07                 a0 = a2 * a0
 27809: cd 87 07                 a0 = a0 %u a1
 27812: 7b 17 90 00              u64 [sp + 0x90] = a0
 27816: 50 20 ee 01 ca ce        ra = 494, jump @1174
      :                          @2034 [@dyn 247]
 27822: 7a 17 68 02              u32 [sp + 0x268] = a0
 27826: 95 17 90 00              a0 = sp + 0x90
 27830: 7b 17 50 01              u64 [sp + 0x150] = a0
 27834: 33 07 a8 03              a0 = 0x3a8
 27838: 7b 17 58 01              u64 [sp + 0x158] = a0
 27842: 95 17 b0 00              a0 = sp + 0xb0
 27846: 7b 17 60 01              u64 [sp + 0x160] = a0
 27850: 33 07 50 03              a0 = 0x350
 27854: 7b 17 68 01              u64 [sp + 0x168] = a0
 27858: 95 17 68 02              a0 = sp + 0x268
 27862: 7b 17 70 01              u64 [sp + 0x170] = a0
 27866: 33 07 a6 03              a0 = 0x3a6
 27870: 7b 17 78 01              u64 [sp + 0x178] = a0
 27874: 33 07 90 06 01           a0 = 0x10690
 27879: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 27883: 49 21 00 01 03           u64 [sp + 256] = 0x3
 27888: 49 21 18 01              u64 [sp + 280] = 0
 27892: 95 18 50 01              a1 = sp + 0x150
 27896: 7b 18 08 01              u64 [sp + 0x108] = a1
 27900: 49 21 10 01 03           u64 [sp + 272] = 0x3
 27905: 95 17 c8 00              a0 = sp + 0xc8
 27909: 95 18 f8 00              a1 = sp + 0xf8
 27913: 50 20 f0 01 bc b2        ra = 496, jump @637
      :                          @2035 [@dyn 248]
 27919: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 27923: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 27927: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 27931: 33 07 02                 a0 = 0x2
 27934: 33 08                    a1 = 0
 27936: 33 09                    a2 = 0
 27938: 64 5a                    a3 = s0
 27940: 33 00 f2 01              ra = 0x1f2
 27944: 0a 64                    ecalli 100 // 'log'
 27946: 01                       fallthrough
      :                          @2036 [@dyn 249]
 27947: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 27952: 55 38 00 00 f0 09        jump @2038 if a1 >=u 4293918720
      :                          @2037
 27958: 28 6e 33                 jump @2553
      :                          @2038
 27961: 33 07 10 01 03           a0 = 0x30110
 27966: 95 77 00 00 10           a0 = a0 + 0x100000
 27971: 01                       fallthrough
      :                          @2039
 27972: 82 78                    a1 = u64 [a0]
 27974: c9 87 09                 a2 = a0 - a1
 27977: aa 59 06                 jump @2041 if a2 == s0
      :                          @2040
 27980: 28 58 33                 jump @2553
      :                          @2041
 27983: c9 68 09                 a2 = a1 - s1
 27986: 01                       fallthrough
      :                          @2042
 27987: 82 7a                    a3 = u64 [a0]
 27989: ab 8a ef                 jump @2039 if a3 != a1
      :                          @2043
 27992: 7b 79                    u64 [a0] = a2
 27994: 33 0b                    a4 = 0
 27996: 01                       fallthrough
      :                          @2044
 27997: ab 8a e7                 jump @2039 if a3 != a1
      :                          @2045
 28000: 28 44 33                 jump @2553
      :                          @2046 [@dyn 250]
 28003: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 28008: 97 89 0d                 a2 = a1 << 0xd
 28011: d3 98 08                 a1 = a1 ^ a2
 28014: 98 89 07                 a2 = a1 >> 0x7
 28017: d3 98 08                 a1 = a1 ^ a2
 28020: 97 89 11                 a2 = a1 << 0x11
 28023: d3 98 08                 a1 = a1 ^ a2
 28026: 3a 09 60 00 03           a2 = u64 [0x30060]
 28031: 3a 0a c0 00 03           a3 = u64 [0x300c0]
 28036: 3e 08 e0 00 03           u64 [0x300e0] = a1
 28041: ca 98 07                 a0 = a1 * a2
 28044: 98 78 01                 a1 = a0 >> 0x1
 28047: d6 a8 08                 a1 = a1 mulhu a3
 28050: 98 88 04                 a1 = a1 >> 0x4
 28053: 96 88 32                 a1 = a1 * 0x32
 28056: c9 87 07                 a0 = a0 - a1
 28059: 95 77 02                 a0 = a0 + 0x2
 28062: 7b 17 90 00              u64 [sp + 0x90] = a0
 28066: 50 20 f6 01 40 cf        ra = 502, jump @1203
      :                          @2047 [@dyn 251]
 28072: 78 17 b0 00              u8 [sp + 0xb0] = a0
 28076: 95 17 90 00              a0 = sp + 0x90
 28080: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 28084: 33 07 50 03              a0 = 0x350
 28088: 7b 17 00 01              u64 [sp + 0x100] = a0
 28092: 95 17 b0 00              a0 = sp + 0xb0
 28096: 7b 17 08 01              u64 [sp + 0x108] = a0
 28100: 33 07 9c 03              a0 = 0x39c
 28104: 7b 17 10 01              u64 [sp + 0x110] = a0
 28108: 33 07 e0 06 01           a0 = 0x106e0
 28113: 7b 17 50 01              u64 [sp + 0x150] = a0
 28117: 49 21 58 01 02           u64 [sp + 344] = 0x2
 28122: 49 21 70 01              u64 [sp + 368] = 0
 28126: 95 18 f8 00              a1 = sp + 0xf8
 28130: 7b 18 60 01              u64 [sp + 0x160] = a1
 28134: 49 21 68 01 02           u64 [sp + 360] = 0x2
 28139: 95 17 c8 00              a0 = sp + 0xc8
 28143: 95 18 50 01              a1 = sp + 0x150
 28147: 50 20 f8 01 d2 b1        ra = 504, jump @637
      :                          @2048 [@dyn 252]
 28153: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 28157: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 28161: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 28165: 33 07 02                 a0 = 0x2
 28168: 33 08                    a1 = 0
 28170: 33 09                    a2 = 0
 28172: 64 5a                    a3 = s0
 28174: 33 00 fa 01              ra = 0x1fa
 28178: 0a 64                    ecalli 100 // 'log'
 28180: 01                       fallthrough
      :                          @2049 [@dyn 253]
 28181: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 28186: 55 38 00 00 f0 09        jump @2051 if a1 >=u 4293918720
      :                          @2050
 28192: 28 84 32                 jump @2553
      :                          @2051
 28195: 33 07 10 01 03           a0 = 0x30110
 28200: 95 77 00 00 10           a0 = a0 + 0x100000
 28205: 01                       fallthrough
      :                          @2052
 28206: 82 78                    a1 = u64 [a0]
 28208: c9 87 09                 a2 = a0 - a1
 28211: aa 59 06                 jump @2054 if a2 == s0
      :                          @2053
 28214: 28 6e 32                 jump @2553
      :                          @2054
 28217: c9 68 09                 a2 = a1 - s1
 28220: 01                       fallthrough
      :                          @2055
 28221: 82 7a                    a3 = u64 [a0]
 28223: ab 8a ef                 jump @2052 if a3 != a1
      :                          @2056
 28226: 7b 79                    u64 [a0] = a2
 28228: 33 0b                    a4 = 0
 28230: 01                       fallthrough
      :                          @2057
 28231: ab 8a e7                 jump @2052 if a3 != a1
      :                          @2058
 28234: 28 5a 32                 jump @2553
      :                          @2059 [@dyn 254]
 28237: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 28242: 97 89 0d                 a2 = a1 << 0xd
 28245: d3 98 08                 a1 = a1 ^ a2
 28248: 98 89 07                 a2 = a1 >> 0x7
 28251: 3a 0a 60 00 03           a3 = u64 [0x30060]
 28256: d3 98 08                 a1 = a1 ^ a2
 28259: 97 89 11                 a2 = a1 << 0x11
 28262: d3 98 08                 a1 = a1 ^ a2
 28265: ca a8 09                 a2 = a1 * a3
 28268: 3e 08 e0 00 03           u64 [0x300e0] = a1
 28273: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
 28283: d6 89 08                 a1 = a2 mulhu a1
 28286: 98 88 04                 a1 = a1 >> 0x4
 28289: 96 88 14                 a1 = a1 * 0x14
 28292: c9 89 09                 a2 = a2 - a1
 28295: 7b 19 88 00              u64 [sp + 0x88] = a2
 28299: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 28304: 97 89 0d                 a2 = a1 << 0xd
 28307: d3 98 08                 a1 = a1 ^ a2
 28310: 98 89 07                 a2 = a1 >> 0x7
 28313: d3 98 08                 a1 = a1 ^ a2
 28316: 97 89 11                 a2 = a1 << 0x11
 28319: d3 98 08                 a1 = a1 ^ a2
 28322: ca a8 09                 a2 = a1 * a3
 28325: 3a 0a 98 00 03           a3 = u64 [0x30098]
 28330: 3e 08 e0 00 03           u64 [0x300e0] = a1
 28335: 98 97 02                 a0 = a2 >> 0x2
 28338: d6 a7 07                 a0 = a0 mulhu a3
 28341: 98 77 02                 a0 = a0 >> 0x2
 28344: 96 78 64                 a1 = a0 * 0x64
 28347: 82 17 88 00              a0 = u64 [sp + 0x88]
 28351: c9 89 09                 a2 = a2 - a1
 28354: 95 99 01                 a2 = a2 + 0x1
 28357: 7b 19 68 02              u64 [sp + 0x268] = a2
 28361: 33 08 01                 a1 = 0x1
 28364: 50 20 fe 01 4a ce        ra = 510, jump @1210
      :                          @2060 [@dyn 255]
 28370: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 28374: 7b 18 90 00              u64 [sp + 0x90] = a1
 28378: 95 17 88 00              a0 = sp + 0x88
 28382: 7b 17 50 01              u64 [sp + 0x150] = a0
 28386: 33 08 50 03              a1 = 0x350
 28390: 7b 18 58 01              u64 [sp + 0x158] = a1
 28394: 7b 17 60 01              u64 [sp + 0x160] = a0
 28398: 7b 18 68 01              u64 [sp + 0x168] = a1
 28402: 95 17 68 02              a0 = sp + 0x268
 28406: 7b 17 70 01              u64 [sp + 0x170] = a0
 28410: 33 07 a8 03              a0 = 0x3a8
 28414: 7b 17 78 01              u64 [sp + 0x178] = a0
 28418: 95 18 b0 00              a1 = sp + 0xb0
 28422: 7b 18 80 01              u64 [sp + 0x180] = a1
 28426: 7b 17 88 01              u64 [sp + 0x188] = a0
 28430: 95 18 90 00              a1 = sp + 0x90
 28434: 7b 18 90 01              u64 [sp + 0x190] = a1
 28438: 7b 17 98 01              u64 [sp + 0x198] = a0
 28442: 33 07 20 07 01           a0 = 0x10720
 28447: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 28451: 49 21 00 01 06           u64 [sp + 256] = 0x6
 28456: 49 21 18 01              u64 [sp + 280] = 0
 28460: 95 17 50 01              a0 = sp + 0x150
 28464: 7b 17 08 01              u64 [sp + 0x108] = a0
 28468: 49 21 10 01 05           u64 [sp + 272] = 0x5
 28473: 95 17 c8 00              a0 = sp + 0xc8
 28477: 95 18 f8 00              a1 = sp + 0xf8
 28481: 50 20 00 02 84 b0        ra = 512, jump @637
      :                          @2061 [@dyn 256]
 28487: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 28491: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 28495: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 28499: 33 07 02                 a0 = 0x2
 28502: 33 08                    a1 = 0
 28504: 33 09                    a2 = 0
 28506: 64 5a                    a3 = s0
 28508: 33 00 02 02              ra = 0x202
 28512: 0a 64                    ecalli 100 // 'log'
 28514: 01                       fallthrough
      :                          @2062 [@dyn 257]
 28515: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 28520: 55 38 00 00 f0 09        jump @2064 if a1 >=u 4293918720
      :                          @2063
 28526: 28 36 31                 jump @2553
      :                          @2064
 28529: 33 07 10 01 03           a0 = 0x30110
 28534: 95 77 00 00 10           a0 = a0 + 0x100000
 28539: 01                       fallthrough
      :                          @2065
 28540: 82 78                    a1 = u64 [a0]
 28542: c9 87 09                 a2 = a0 - a1
 28545: aa 59 06                 jump @2067 if a2 == s0
      :                          @2066
 28548: 28 20 31                 jump @2553
      :                          @2067
 28551: c9 68 09                 a2 = a1 - s1
 28554: 01                       fallthrough
      :                          @2068
 28555: 82 7a                    a3 = u64 [a0]
 28557: ab 8a ef                 jump @2065 if a3 != a1
      :                          @2069
 28560: 7b 79                    u64 [a0] = a2
 28562: 33 0b                    a4 = 0
 28564: 01                       fallthrough
      :                          @2070
 28565: ab 8a e7                 jump @2065 if a3 != a1
      :                          @2071
 28568: 28 0c 31                 jump @2553
      :                          @2072 [@dyn 258]
 28571: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 28576: 97 89 0d                 a2 = a1 << 0xd
 28579: d3 98 08                 a1 = a1 ^ a2
 28582: 98 89 07                 a2 = a1 >> 0x7
 28585: d3 98 08                 a1 = a1 ^ a2
 28588: 97 89 11                 a2 = a1 << 0x11
 28591: d3 98 08                 a1 = a1 ^ a2
 28594: 3a 09 60 00 03           a2 = u64 [0x30060]
 28599: 3a 0a b8 00 03           a3 = u64 [0x300b8]
 28604: 3e 08 e0 00 03           u64 [0x300e0] = a1
 28609: ca 98 07                 a0 = a1 * a2
 28612: d6 a7 08                 a1 = a0 mulhu a3
 28615: 98 88 0b                 a1 = a1 >> 0xb
 28618: 96 88 10 27              a1 = a1 * 0x2710
 28622: c9 87 07                 a0 = a0 - a1
 28625: 86 77 01                 a0 = a0 | 0x1
 28628: 95 77 02                 a0 = a0 + 0x2
 28631: 7b 17 90 00              u64 [sp + 0x90] = a0
 28635: 50 20 06 02 cc cd        ra = 518, jump @1217
      :                          @2073 [@dyn 259]
 28641: 78 17 b0 00              u8 [sp + 0xb0] = a0
 28645: 95 17 90 00              a0 = sp + 0x90
 28649: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 28653: 33 07 50 03              a0 = 0x350
 28657: 7b 17 00 01              u64 [sp + 0x100] = a0
 28661: 95 17 b0 00              a0 = sp + 0xb0
 28665: 7b 17 08 01              u64 [sp + 0x108] = a0
 28669: 33 07 9c 03              a0 = 0x39c
 28673: 7b 17 10 01              u64 [sp + 0x110] = a0
 28677: 33 07 90 07 01           a0 = 0x10790
 28682: 7b 17 50 01              u64 [sp + 0x150] = a0
 28686: 49 21 58 01 02           u64 [sp + 344] = 0x2
 28691: 49 21 70 01              u64 [sp + 368] = 0
 28695: 95 18 f8 00              a1 = sp + 0xf8
 28699: 7b 18 60 01              u64 [sp + 0x160] = a1
 28703: 49 21 68 01 02           u64 [sp + 360] = 0x2
 28708: 95 17 c8 00              a0 = sp + 0xc8
 28712: 95 18 50 01              a1 = sp + 0x150
 28716: 50 20 08 02 99 af        ra = 520, jump @637
      :                          @2074 [@dyn 260]
 28722: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 28726: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 28730: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 28734: 33 07 02                 a0 = 0x2
 28737: 33 08                    a1 = 0
 28739: 33 09                    a2 = 0
 28741: 64 5a                    a3 = s0
 28743: 33 00 0a 02              ra = 0x20a
 28747: 0a 64                    ecalli 100 // 'log'
 28749: 01                       fallthrough
      :                          @2075 [@dyn 261]
 28750: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 28755: 55 38 00 00 f0 09        jump @2077 if a1 >=u 4293918720
      :                          @2076
 28761: 28 4b 30                 jump @2553
      :                          @2077
 28764: 33 07 10 01 03           a0 = 0x30110
 28769: 95 77 00 00 10           a0 = a0 + 0x100000
 28774: 01                       fallthrough
      :                          @2078
 28775: 82 78                    a1 = u64 [a0]
 28777: c9 87 09                 a2 = a0 - a1
 28780: aa 59 06                 jump @2080 if a2 == s0
      :                          @2079
 28783: 28 35 30                 jump @2553
      :                          @2080
 28786: c9 68 09                 a2 = a1 - s1
 28789: 01                       fallthrough
      :                          @2081
 28790: 82 7a                    a3 = u64 [a0]
 28792: ab 8a ef                 jump @2078 if a3 != a1
      :                          @2082
 28795: 7b 79                    u64 [a0] = a2
 28797: 33 0b                    a4 = 0
 28799: 01                       fallthrough
      :                          @2083
 28800: ab 8a e7                 jump @2078 if a3 != a1
      :                          @2084
 28803: 28 21 30                 jump @2553
      :                          @2085 [@dyn 262]
 28806: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 28811: 97 89 0d                 a2 = a1 << 0xd
 28814: d3 98 08                 a1 = a1 ^ a2
 28817: 98 89 07                 a2 = a1 >> 0x7
 28820: d3 98 08                 a1 = a1 ^ a2
 28823: 97 89 11                 a2 = a1 << 0x11
 28826: d3 98 08                 a1 = a1 ^ a2
 28829: 3a 09 60 00 03           a2 = u64 [0x30060]
 28834: 3a 0a a0 00 03           a3 = u64 [0x300a0]
 28839: 3e 08 e0 00 03           u64 [0x300e0] = a1
 28844: ca 98 07                 a0 = a1 * a2
 28847: d6 a7 08                 a1 = a0 mulhu a3
 28850: 98 88 12                 a1 = a1 >> 0x12
 28853: 96 88 40 42 0f           a1 = a1 * 0xf4240
 28858: c9 87 07                 a0 = a0 - a1
 28861: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 28865: 50 20 0e 02 65 d0        ra = 526, jump @1295
      :                          @2086 [@dyn 263]
 28871: 7b 17 90 00              u64 [sp + 0x90] = a0
 28875: 95 17 b0 00              a0 = sp + 0xb0
 28879: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 28883: 33 07 50 03              a0 = 0x350
 28887: 7b 17 00 01              u64 [sp + 0x100] = a0
 28891: 95 18 90 00              a1 = sp + 0x90
 28895: 7b 18 08 01              u64 [sp + 0x108] = a1
 28899: 7b 17 10 01              u64 [sp + 0x110] = a0
 28903: 33 07 c0 07 01           a0 = 0x107c0
 28908: 7b 17 50 01              u64 [sp + 0x150] = a0
 28912: 49 21 58 01 02           u64 [sp + 344] = 0x2
 28917: 49 21 70 01              u64 [sp + 368] = 0
 28921: 95 18 f8 00              a1 = sp + 0xf8
 28925: 7b 18 60 01              u64 [sp + 0x160] = a1
 28929: 49 21 68 01 02           u64 [sp + 360] = 0x2
 28934: 95 17 c8 00              a0 = sp + 0xc8
 28938: 95 18 50 01              a1 = sp + 0x150
 28942: 50 20 10 02 b7 ae        ra = 528, jump @637
      :                          @2087 [@dyn 264]
 28948: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 28952: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 28956: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 28960: 33 07 02                 a0 = 0x2
 28963: 33 08                    a1 = 0
 28965: 33 09                    a2 = 0
 28967: 64 5a                    a3 = s0
 28969: 33 00 12 02              ra = 0x212
 28973: 0a 64                    ecalli 100 // 'log'
 28975: 01                       fallthrough
      :                          @2088 [@dyn 265]
 28976: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 28981: 55 38 00 00 f0 09        jump @2090 if a1 >=u 4293918720
      :                          @2089
 28987: 28 69 2f                 jump @2553
      :                          @2090
 28990: 33 07 10 01 03           a0 = 0x30110
 28995: 95 77 00 00 10           a0 = a0 + 0x100000
 29000: 01                       fallthrough
      :                          @2091
 29001: 82 78                    a1 = u64 [a0]
 29003: c9 87 09                 a2 = a0 - a1
 29006: aa 59 06                 jump @2093 if a2 == s0
      :                          @2092
 29009: 28 53 2f                 jump @2553
      :                          @2093
 29012: c9 68 09                 a2 = a1 - s1
 29015: 01                       fallthrough
      :                          @2094
 29016: 82 7a                    a3 = u64 [a0]
 29018: ab 8a ef                 jump @2091 if a3 != a1
      :                          @2095
 29021: 7b 79                    u64 [a0] = a2
 29023: 33 0b                    a4 = 0
 29025: 01                       fallthrough
      :                          @2096
 29026: ab 8a e7                 jump @2091 if a3 != a1
      :                          @2097
 29029: 28 3f 2f                 jump @2553
      :                          @2098 [@dyn 266]
 29032: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 29037: 97 89 0d                 a2 = a1 << 0xd
 29040: d3 98 08                 a1 = a1 ^ a2
 29043: 98 89 07                 a2 = a1 >> 0x7
 29046: d3 89 09                 a2 = a2 ^ a1
 29049: 97 9a 11                 a3 = a2 << 0x11
 29052: 3a 08 60 00 03           a1 = u64 [0x30060]
 29057: d3 9a 0a                 a3 = a3 ^ a2
 29060: 3a 09 b0 00 03           a2 = u64 [0x300b0]
 29065: ca 8a 0b                 a4 = a3 * a1
 29068: 3e 0a e0 00 03           u64 [0x300e0] = a3
 29073: d6 9b 0a                 a3 = a4 mulhu a2
 29076: c9 ab 0c                 a5 = a4 - a3
 29079: 98 cc 01                 a5 = a5 >> 0x1
 29082: c8 ca 0a                 a3 = a3 + a5
 29085: 98 ac 06                 a5 = a3 >> 0x6
 29088: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 29093: 96 cc 65                 a5 = a5 * 0x65
 29096: c9 cb 0b                 a4 = a4 - a5
 29099: 7b 1b 10                 u64 [sp + 0x10] = a4
 29102: 97 6b 0d                 a4 = s1 << 0xd
 29105: d3 6b 0b                 a4 = a4 ^ s1
 29108: 98 bc 07                 a5 = a4 >> 0x7
 29111: d3 cb 0b                 a4 = a4 ^ a5
 29114: 97 bc 11                 a5 = a4 << 0x11
 29117: d3 cb 0b                 a4 = a4 ^ a5
 29120: ca 8b 06                 s1 = a4 * a1
 29123: 3e 0b e0 00 03           u64 [0x300e0] = a4
 29128: d6 96 0b                 a4 = s1 mulhu a2
 29131: c9 b6 0c                 a5 = s1 - a4
 29134: 98 cc 01                 a5 = a5 >> 0x1
 29137: c8 cb 0b                 a4 = a4 + a5
 29140: 98 bb 06                 a4 = a4 >> 0x6
 29143: 3a 0c e0 00 03           a5 = u64 [0x300e0]
 29148: 96 bb 65                 a4 = a4 * 0x65
 29151: c9 b6 06                 s1 = s1 - a4
 29154: 7b 16 08                 u64 [sp + 0x8] = s1
 29157: 97 cb 0d                 a4 = a5 << 0xd
 29160: d3 cb 0b                 a4 = a4 ^ a5
 29163: 98 bc 07                 a5 = a4 >> 0x7
 29166: d3 cb 0b                 a4 = a4 ^ a5
 29169: 97 bc 11                 a5 = a4 << 0x11
 29172: d3 cb 0b                 a4 = a4 ^ a5
 29175: ca 8b 06                 s1 = a4 * a1
 29178: 3e 0b e0 00 03           u64 [0x300e0] = a4
 29183: d6 96 0b                 a4 = s1 mulhu a2
 29186: c9 b6 0c                 a5 = s1 - a4
 29189: 98 cc 01                 a5 = a5 >> 0x1
 29192: c8 cb 0b                 a4 = a4 + a5
 29195: 98 bb 06                 a4 = a4 >> 0x6
 29198: 3a 0c e0 00 03           a5 = u64 [0x300e0]
 29203: 96 bb 65                 a4 = a4 * 0x65
 29206: c9 b6 04                 t2 = s1 - a4
 29209: 97 cb 0d                 a4 = a5 << 0xd
 29212: d3 cb 0b                 a4 = a4 ^ a5
 29215: 98 bc 07                 a5 = a4 >> 0x7
 29218: d3 cb 0b                 a4 = a4 ^ a5
 29221: 97 bc 11                 a5 = a4 << 0x11
 29224: d3 cb 0b                 a4 = a4 ^ a5
 29227: ca 8b 0c                 a5 = a4 * a1
 29230: 3e 0b e0 00 03           u64 [0x300e0] = a4
 29235: d6 9c 0b                 a4 = a5 mulhu a2
 29238: c9 bc 05                 s0 = a5 - a4
 29241: 98 55 01                 s0 = s0 >> 0x1
 29244: c8 5b 0b                 a4 = a4 + s0
 29247: 98 bb 06                 a4 = a4 >> 0x6
 29250: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 29255: 96 bb 65                 a4 = a4 * 0x65
 29258: c9 bc 00                 ra = a5 - a4
 29261: 97 6b 0d                 a4 = s1 << 0xd
 29264: d3 6b 0b                 a4 = a4 ^ s1
 29267: 98 bc 07                 a5 = a4 >> 0x7
 29270: d3 cb 0b                 a4 = a4 ^ a5
 29273: 97 bc 11                 a5 = a4 << 0x11
 29276: d3 cb 0b                 a4 = a4 ^ a5
 29279: ca 8b 0c                 a5 = a4 * a1
 29282: 3e 0b e0 00 03           u64 [0x300e0] = a4
 29287: d6 9c 0b                 a4 = a5 mulhu a2
 29290: c9 bc 06                 s1 = a5 - a4
 29293: 98 66 01                 s1 = s1 >> 0x1
 29296: c8 6b 0b                 a4 = a4 + s1
 29299: 98 bb 06                 a4 = a4 >> 0x6
 29302: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 29307: 96 bb 65                 a4 = a4 * 0x65
 29310: c9 bc 0b                 a4 = a5 - a4
 29313: 97 6c 0d                 a5 = s1 << 0xd
 29316: d3 6c 0c                 a5 = a5 ^ s1
 29319: 98 c6 07                 s1 = a5 >> 0x7
 29322: d3 6c 0c                 a5 = a5 ^ s1
 29325: 97 c6 11                 s1 = a5 << 0x11
 29328: d3 6c 0c                 a5 = a5 ^ s1
 29331: ca 8c 05                 s0 = a5 * a1
 29334: 3e 0c e0 00 03           u64 [0x300e0] = a5
 29339: d6 95 0c                 a5 = s0 mulhu a2
 29342: c9 c5 06                 s1 = s0 - a5
 29345: 98 66 01                 s1 = s1 >> 0x1
 29348: c8 6c 0c                 a5 = a5 + s1
 29351: 98 cc 06                 a5 = a5 >> 0x6
 29354: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 29359: 96 cc 65                 a5 = a5 * 0x65
 29362: c9 c5 0c                 a5 = s0 - a5
 29365: 97 65 0d                 s0 = s1 << 0xd
 29368: d3 65 05                 s0 = s0 ^ s1
 29371: 98 56 07                 s1 = s0 >> 0x7
 29374: d3 65 05                 s0 = s0 ^ s1
 29377: 97 56 11                 s1 = s0 << 0x11
 29380: d3 65 05                 s0 = s0 ^ s1
 29383: ca 85 07                 a0 = s0 * a1
 29386: 3e 05 e0 00 03           u64 [0x300e0] = s0
 29391: d6 97 05                 s0 = a0 mulhu a2
 29394: c9 57 06                 s1 = a0 - s0
 29397: 98 66 01                 s1 = s1 >> 0x1
 29400: c8 65 05                 s0 = s0 + s1
 29403: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 29408: 98 55 06                 s0 = s0 >> 0x6
 29411: 96 55 65                 s0 = s0 * 0x65
 29414: c9 57 0a                 a3 = a0 - s0
 29417: 97 65 0d                 s0 = s1 << 0xd
 29420: d3 65 05                 s0 = s0 ^ s1
 29423: 98 56 07                 s1 = s0 >> 0x7
 29426: d3 65 05                 s0 = s0 ^ s1
 29429: 97 56 11                 s1 = s0 << 0x11
 29432: d3 65 05                 s0 = s0 ^ s1
 29435: 3e 05 e0 00 03           u64 [0x300e0] = s0
 29440: ca 85 07                 a0 = s0 * a1
 29443: d6 97 06                 s1 = a0 mulhu a2
 29446: c9 67 05                 s0 = a0 - s1
 29449: 98 55 01                 s0 = s0 >> 0x1
 29452: c8 65 05                 s0 = s0 + s1
 29455: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 29460: 98 55 06                 s0 = s0 >> 0x6
 29463: 96 55 65                 s0 = s0 * 0x65
 29466: c9 57 07                 a0 = a0 - s0
 29469: 97 65 0d                 s0 = s1 << 0xd
 29472: d3 65 05                 s0 = s0 ^ s1
 29475: 98 56 07                 s1 = s0 >> 0x7
 29478: d3 65 05                 s0 = s0 ^ s1
 29481: 97 56 11                 s1 = s0 << 0x11
 29484: d3 65 05                 s0 = s0 ^ s1
 29487: 3e 05 e0 00 03           u64 [0x300e0] = s0
 29492: ca 85 06                 s1 = s0 * a1
 29495: d6 96 09                 a2 = s1 mulhu a2
 29498: c9 96 08                 a1 = s1 - a2
 29501: 98 88 01                 a1 = a1 >> 0x1
 29504: c8 98 08                 a1 = a1 + a2
 29507: 98 88 06                 a1 = a1 >> 0x6
 29510: 96 88 65                 a1 = a1 * 0x65
 29513: c9 86 06                 s1 = s1 - a1
 29516: 82 18 10                 a1 = u64 [sp + 0x10]
 29519: 95 88 ce                 a1 = a1 + 0xffffffffffffffce
 29522: 7b 18 50 01              u64 [sp + 0x150] = a1
 29526: 82 18 08                 a1 = u64 [sp + 0x8]
 29529: 95 88 ce                 a1 = a1 + 0xffffffffffffffce
 29532: 7b 18 58 01              u64 [sp + 0x158] = a1
 29536: 95 48 ce                 a1 = t2 + 0xffffffffffffffce
 29539: 7b 18 60 01              u64 [sp + 0x160] = a1
 29543: 95 08 ce                 a1 = ra + 0xffffffffffffffce
 29546: 7b 18 68 01              u64 [sp + 0x168] = a1
 29550: 95 b8 ce                 a1 = a4 + 0xffffffffffffffce
 29553: 7b 18 70 01              u64 [sp + 0x170] = a1
 29557: 95 c8 ce                 a1 = a5 + 0xffffffffffffffce
 29560: 7b 18 78 01              u64 [sp + 0x178] = a1
 29564: 95 a8 ce                 a1 = a3 + 0xffffffffffffffce
 29567: 7b 18 80 01              u64 [sp + 0x180] = a1
 29571: 95 77 ce                 a0 = a0 + 0xffffffffffffffce
 29574: 7b 17 88 01              u64 [sp + 0x188] = a0
 29578: 95 67 ce                 a0 = s1 + 0xffffffffffffffce
 29581: 7b 17 90 01              u64 [sp + 0x190] = a0
 29585: 95 17 50 01              a0 = sp + 0x150
 29589: 28 b1 cd                 jump @1302
      :                          @2099
 29592: 7b 17 90 00              u64 [sp + 0x90] = a0
 29596: 95 17 90 00              a0 = sp + 0x90
 29600: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 29604: 33 07 a8 03              a0 = 0x3a8
 29608: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 29612: 33 07 f8 07 01           a0 = 0x107f8
 29617: 7b 17 50 01              u64 [sp + 0x150] = a0
 29621: 49 21 58 01 01           u64 [sp + 344] = 0x1
 29626: 49 21 70 01              u64 [sp + 368] = 0
 29630: 95 18 c8 00              a1 = sp + 0xc8
 29634: 7b 18 60 01              u64 [sp + 0x160] = a1
 29638: 49 21 68 01 01           u64 [sp + 360] = 0x1
 29643: 95 17 f8 00              a0 = sp + 0xf8
 29647: 95 18 50 01              a1 = sp + 0x150
 29651: 50 20 16 02 f2 ab        ra = 534, jump @637
      :                          @2100 [@dyn 267]
 29657: 82 15 00 01              s0 = u64 [sp + 0x100]
 29661: 82 1b 08 01              a4 = u64 [sp + 0x108]
 29665: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 29669: 33 07 02                 a0 = 0x2
 29672: 33 08                    a1 = 0
 29674: 33 09                    a2 = 0
 29676: 64 5a                    a3 = s0
 29678: 33 00 18 02              ra = 0x218
 29682: 0a 64                    ecalli 100 // 'log'
 29684: 01                       fallthrough
      :                          @2101 [@dyn 268]
 29685: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 29690: 55 38 00 00 f0 09        jump @2103 if a1 >=u 4293918720
      :                          @2102
 29696: 28 a4 2c                 jump @2553
      :                          @2103
 29699: 33 07 10 01 03           a0 = 0x30110
 29704: 95 77 00 00 10           a0 = a0 + 0x100000
 29709: 01                       fallthrough
      :                          @2104
 29710: 82 78                    a1 = u64 [a0]
 29712: c9 87 09                 a2 = a0 - a1
 29715: aa 59 06                 jump @2106 if a2 == s0
      :                          @2105
 29718: 28 8e 2c                 jump @2553
      :                          @2106
 29721: c9 68 09                 a2 = a1 - s1
 29724: 01                       fallthrough
      :                          @2107
 29725: 82 7a                    a3 = u64 [a0]
 29727: ab 8a ef                 jump @2104 if a3 != a1
      :                          @2108
 29730: 7b 79                    u64 [a0] = a2
 29732: 33 0b                    a4 = 0
 29734: 01                       fallthrough
      :                          @2109
 29735: ab 8a e7                 jump @2104 if a3 != a1
      :                          @2110
 29738: 28 7a 2c                 jump @2553
      :                          @2111 [@dyn 269]
 29741: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 29746: 97 89 0d                 a2 = a1 << 0xd
 29749: d3 98 08                 a1 = a1 ^ a2
 29752: 98 89 07                 a2 = a1 >> 0x7
 29755: d3 89 09                 a2 = a2 ^ a1
 29758: 97 9a 11                 a3 = a2 << 0x11
 29761: 3a 08 60 00 03           a1 = u64 [0x30060]
 29766: d3 9a 0a                 a3 = a3 ^ a2
 29769: 3a 09 b0 00 03           a2 = u64 [0x300b0]
 29774: ca 8a 0b                 a4 = a3 * a1
 29777: 3e 0a e0 00 03           u64 [0x300e0] = a3
 29782: d6 9b 0a                 a3 = a4 mulhu a2
 29785: c9 ab 0c                 a5 = a4 - a3
 29788: 98 cc 01                 a5 = a5 >> 0x1
 29791: c8 ca 0a                 a3 = a3 + a5
 29794: 98 ac 06                 a5 = a3 >> 0x6
 29797: 33 03 65                 t1 = 0x65
 29800: ca 3c 0c                 a5 = a5 * t1
 29803: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 29808: c9 cb 0b                 a4 = a4 - a5
 29811: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
 29814: 97 6c 0d                 a5 = s1 << 0xd
 29817: d3 c6 06                 s1 = s1 ^ a5
 29820: 98 6c 07                 a5 = s1 >> 0x7
 29823: d3 c6 06                 s1 = s1 ^ a5
 29826: 97 6c 11                 a5 = s1 << 0x11
 29829: d3 6c 0c                 a5 = a5 ^ s1
 29832: ca 8c 05                 s0 = a5 * a1
 29835: 3e 0c e0 00 03           u64 [0x300e0] = a5
 29840: d6 95 0c                 a5 = s0 mulhu a2
 29843: c9 c5 06                 s1 = s0 - a5
 29846: 98 66 01                 s1 = s1 >> 0x1
 29849: c8 6c 0c                 a5 = a5 + s1
 29852: 98 cc 06                 a5 = a5 >> 0x6
 29855: ca 3c 0c                 a5 = a5 * t1
 29858: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 29863: c9 c5 05                 s0 = s0 - a5
 29866: 95 5c ce                 a5 = s0 + 0xffffffffffffffce
 29869: 97 b6 0d                 s1 = a4 << 0xd
 29872: d3 b6 06                 s1 = s1 ^ a4
 29875: 98 6b 07                 a4 = s1 >> 0x7
 29878: d3 b6 06                 s1 = s1 ^ a4
 29881: 97 6b 11                 a4 = s1 << 0x11
 29884: d3 6b 0b                 a4 = a4 ^ s1
 29887: ca 8b 05                 s0 = a4 * a1
 29890: 3e 0b e0 00 03           u64 [0x300e0] = a4
 29895: d6 95 0b                 a4 = s0 mulhu a2
 29898: c9 b5 06                 s1 = s0 - a4
 29901: 98 66 01                 s1 = s1 >> 0x1
 29904: c8 6b 0b                 a4 = a4 + s1
 29907: 98 bb 06                 a4 = a4 >> 0x6
 29910: ca 3b 0b                 a4 = a4 * t1
 29913: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 29918: c9 b5 05                 s0 = s0 - a4
 29921: 95 5b ce                 a4 = s0 + 0xffffffffffffffce
 29924: 97 a6 0d                 s1 = a3 << 0xd
 29927: d3 a6 06                 s1 = s1 ^ a3
 29930: 98 6a 07                 a3 = s1 >> 0x7
 29933: d3 a6 06                 s1 = s1 ^ a3
 29936: 97 6a 11                 a3 = s1 << 0x11
 29939: d3 6a 0a                 a3 = a3 ^ s1
 29942: ca 8a 08                 a1 = a3 * a1
 29945: 3e 0a e0 00 03           u64 [0x300e0] = a3
 29950: d6 98 07                 a0 = a1 mulhu a2
 29953: c9 78 09                 a2 = a1 - a0
 29956: 98 99 01                 a2 = a2 >> 0x1
 29959: c8 97 07                 a0 = a0 + a2
 29962: 98 77 06                 a0 = a0 >> 0x6
 29965: ca 37 07                 a0 = a0 * t1
 29968: c9 78 08                 a1 = a1 - a0
 29971: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
 29974: 7b 1c 48                 u64 [sp + 0x48] = a5
 29977: 7b 12 40                 u64 [sp + 0x40] = t0
 29980: 7b 1b 50                 u64 [sp + 0x50] = a4
 29983: 7b 17 58                 u64 [sp + 0x58] = a0
 29986: 95 17 40                 a0 = sp + 0x40
 29989: 50 20 1c 02 d8 cc        ra = 540, jump @1310
      :                          @2112 [@dyn 270]
 29995: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 29999: 7b 18 90 00              u64 [sp + 0x90] = a1
 30003: 95 17 b0 00              a0 = sp + 0xb0
 30007: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 30011: 33 07 a8 03              a0 = 0x3a8
 30015: 7b 17 00 01              u64 [sp + 0x100] = a0
 30019: 95 18 90 00              a1 = sp + 0x90
 30023: 7b 18 08 01              u64 [sp + 0x108] = a1
 30027: 7b 17 10 01              u64 [sp + 0x110] = a0
 30031: 33 07 28 08 01           a0 = 0x10828
 30036: 7b 17 50 01              u64 [sp + 0x150] = a0
 30040: 49 21 58 01 03           u64 [sp + 344] = 0x3
 30045: 49 21 70 01              u64 [sp + 368] = 0
 30049: 95 17 f8 00              a0 = sp + 0xf8
 30053: 7b 17 60 01              u64 [sp + 0x160] = a0
 30057: 49 21 68 01 02           u64 [sp + 360] = 0x2
 30062: 95 17 c8 00              a0 = sp + 0xc8
 30066: 95 18 50 01              a1 = sp + 0x150
 30070: 50 20 1e 02 4f aa        ra = 542, jump @637
      :                          @2113 [@dyn 271]
 30076: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 30080: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 30084: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 30088: 33 07 02                 a0 = 0x2
 30091: 33 08                    a1 = 0
 30093: 33 09                    a2 = 0
 30095: 64 5a                    a3 = s0
 30097: 33 00 20 02              ra = 0x220
 30101: 0a 64                    ecalli 100 // 'log'
 30103: 01                       fallthrough
      :                          @2114 [@dyn 272]
 30104: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 30109: 55 38 00 00 f0 09        jump @2116 if a1 >=u 4293918720
      :                          @2115
 30115: 28 01 2b                 jump @2553
      :                          @2116
 30118: 33 07 10 01 03           a0 = 0x30110
 30123: 95 77 00 00 10           a0 = a0 + 0x100000
 30128: 01                       fallthrough
      :                          @2117
 30129: 82 78                    a1 = u64 [a0]
 30131: c9 87 09                 a2 = a0 - a1
 30134: aa 59 06                 jump @2119 if a2 == s0
      :                          @2118
 30137: 28 eb 2a                 jump @2553
      :                          @2119
 30140: c9 68 09                 a2 = a1 - s1
 30143: 01                       fallthrough
      :                          @2120
 30144: 82 7a                    a3 = u64 [a0]
 30146: ab 8a ef                 jump @2117 if a3 != a1
      :                          @2121
 30149: 7b 79                    u64 [a0] = a2
 30151: 33 0b                    a4 = 0
 30153: 01                       fallthrough
      :                          @2122
 30154: ab 8a e7                 jump @2117 if a3 != a1
      :                          @2123
 30157: 28 d7 2a                 jump @2553
      :                          @2124 [@dyn 273]
 30160: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 30165: 97 89 0d                 a2 = a1 << 0xd
 30168: d3 98 08                 a1 = a1 ^ a2
 30171: 98 89 07                 a2 = a1 >> 0x7
 30174: d3 89 09                 a2 = a2 ^ a1
 30177: 97 9a 11                 a3 = a2 << 0x11
 30180: 3a 08 60 00 03           a1 = u64 [0x30060]
 30185: d3 9a 0a                 a3 = a3 ^ a2
 30188: 3a 09 b0 00 03           a2 = u64 [0x300b0]
 30193: ca 8a 0b                 a4 = a3 * a1
 30196: 3e 0a e0 00 03           u64 [0x300e0] = a3
 30201: d6 9b 0a                 a3 = a4 mulhu a2
 30204: c9 ab 0c                 a5 = a4 - a3
 30207: 98 cc 01                 a5 = a5 >> 0x1
 30210: c8 ca 0a                 a3 = a3 + a5
 30213: 98 ac 06                 a5 = a3 >> 0x6
 30216: 33 03 65                 t1 = 0x65
 30219: ca 3c 0c                 a5 = a5 * t1
 30222: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 30227: c9 cb 0b                 a4 = a4 - a5
 30230: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
 30233: 97 6c 0d                 a5 = s1 << 0xd
 30236: d3 c6 06                 s1 = s1 ^ a5
 30239: 98 6c 07                 a5 = s1 >> 0x7
 30242: d3 c6 06                 s1 = s1 ^ a5
 30245: 97 6c 11                 a5 = s1 << 0x11
 30248: d3 6c 0c                 a5 = a5 ^ s1
 30251: ca 8c 05                 s0 = a5 * a1
 30254: 3e 0c e0 00 03           u64 [0x300e0] = a5
 30259: d6 95 0c                 a5 = s0 mulhu a2
 30262: c9 c5 06                 s1 = s0 - a5
 30265: 98 66 01                 s1 = s1 >> 0x1
 30268: c8 6c 0c                 a5 = a5 + s1
 30271: 98 cc 06                 a5 = a5 >> 0x6
 30274: ca 3c 0c                 a5 = a5 * t1
 30277: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 30282: c9 c5 05                 s0 = s0 - a5
 30285: 95 5c ce                 a5 = s0 + 0xffffffffffffffce
 30288: 97 b6 0d                 s1 = a4 << 0xd
 30291: d3 b6 06                 s1 = s1 ^ a4
 30294: 98 6b 07                 a4 = s1 >> 0x7
 30297: d3 b6 06                 s1 = s1 ^ a4
 30300: 97 6b 11                 a4 = s1 << 0x11
 30303: d3 6b 0b                 a4 = a4 ^ s1
 30306: ca 8b 05                 s0 = a4 * a1
 30309: 3e 0b e0 00 03           u64 [0x300e0] = a4
 30314: d6 95 0b                 a4 = s0 mulhu a2
 30317: c9 b5 06                 s1 = s0 - a4
 30320: 98 66 01                 s1 = s1 >> 0x1
 30323: c8 6b 0b                 a4 = a4 + s1
 30326: 98 bb 06                 a4 = a4 >> 0x6
 30329: ca 3b 0b                 a4 = a4 * t1
 30332: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 30337: c9 b5 05                 s0 = s0 - a4
 30340: 95 5b ce                 a4 = s0 + 0xffffffffffffffce
 30343: 97 a6 0d                 s1 = a3 << 0xd
 30346: d3 a6 06                 s1 = s1 ^ a3
 30349: 98 6a 07                 a3 = s1 >> 0x7
 30352: d3 a6 06                 s1 = s1 ^ a3
 30355: 97 6a 11                 a3 = s1 << 0x11
 30358: d3 6a 0a                 a3 = a3 ^ s1
 30361: ca 8a 08                 a1 = a3 * a1
 30364: 3e 0a e0 00 03           u64 [0x300e0] = a3
 30369: d6 98 07                 a0 = a1 mulhu a2
 30372: c9 78 09                 a2 = a1 - a0
 30375: 98 99 01                 a2 = a2 >> 0x1
 30378: c8 97 07                 a0 = a0 + a2
 30381: 98 77 06                 a0 = a0 >> 0x6
 30384: ca 37 07                 a0 = a0 * t1
 30387: c9 78 08                 a1 = a1 - a0
 30390: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
 30393: 7b 1c 68                 u64 [sp + 0x68] = a5
 30396: 7b 12 60                 u64 [sp + 0x60] = t0
 30399: 7b 1b 70                 u64 [sp + 0x70] = a4
 30402: 7b 17 78                 u64 [sp + 0x78] = a0
 30405: 95 17 c8 00              a0 = sp + 0xc8
 30409: 95 18 60                 a1 = sp + 0x60
 30412: 95 15 c8 00              s0 = sp + 0xc8
 30416: 50 20 24 02 9e cb        ra = 548, jump @1325
      :                          @2125 [@dyn 274]
 30422: 95 17 d0 00              a0 = sp + 0xd0
 30426: 95 18 d8 00              a1 = sp + 0xd8
 30430: 95 19 e0 00              a2 = sp + 0xe0
 30434: 7b 15 50 01              u64 [sp + 0x150] = s0
 30438: 33 0a a8 03              a3 = 0x3a8
 30442: 7b 1a 58 01              u64 [sp + 0x158] = a3
 30446: 7b 17 60 01              u64 [sp + 0x160] = a0
 30450: 7b 1a 68 01              u64 [sp + 0x168] = a3
 30454: 7b 18 70 01              u64 [sp + 0x170] = a1
 30458: 7b 1a 78 01              u64 [sp + 0x178] = a3
 30462: 7b 19 80 01              u64 [sp + 0x180] = a2
 30466: 7b 1a 88 01              u64 [sp + 0x188] = a3
 30470: 33 07 80 08 01           a0 = 0x10880
 30475: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 30479: 49 21 00 01 05           u64 [sp + 256] = 0x5
 30484: 49 21 18 01              u64 [sp + 280] = 0
 30488: 95 17 50 01              a0 = sp + 0x150
 30492: 7b 17 08 01              u64 [sp + 0x108] = a0
 30496: 49 21 10 01 04           u64 [sp + 272] = 0x4
 30501: 95 17 90 00              a0 = sp + 0x90
 30505: 95 18 f8 00              a1 = sp + 0xf8
 30509: 50 20 26 02 98 a8        ra = 550, jump @637
      :                          @2126 [@dyn 275]
 30515: 82 15 98 00              s0 = u64 [sp + 0x98]
 30519: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 30523: 82 16 90 00              s1 = u64 [sp + 0x90]
 30527: 33 07 02                 a0 = 0x2
 30530: 33 08                    a1 = 0
 30532: 33 09                    a2 = 0
 30534: 64 5a                    a3 = s0
 30536: 33 00 28 02              ra = 0x228
 30540: 0a 64                    ecalli 100 // 'log'
 30542: 01                       fallthrough
      :                          @2127 [@dyn 276]
 30543: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 30548: 55 38 00 00 f0 09        jump @2129 if a1 >=u 4293918720
      :                          @2128
 30554: 28 4a 29                 jump @2553
      :                          @2129
 30557: 33 07 10 01 03           a0 = 0x30110
 30562: 95 77 00 00 10           a0 = a0 + 0x100000
 30567: 01                       fallthrough
      :                          @2130
 30568: 82 78                    a1 = u64 [a0]
 30570: c9 87 09                 a2 = a0 - a1
 30573: aa 59 06                 jump @2132 if a2 == s0
      :                          @2131
 30576: 28 34 29                 jump @2553
      :                          @2132
 30579: c9 68 09                 a2 = a1 - s1
 30582: 01                       fallthrough
      :                          @2133
 30583: 82 7a                    a3 = u64 [a0]
 30585: ab 8a ef                 jump @2130 if a3 != a1
      :                          @2134
 30588: 7b 79                    u64 [a0] = a2
 30590: 33 0b                    a4 = 0
 30592: 01                       fallthrough
      :                          @2135
 30593: ab 8a e7                 jump @2130 if a3 != a1
      :                          @2136
 30596: 28 20 29                 jump @2553
      :                          @2137 [@dyn 277]
 30599: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 30604: 97 89 0d                 a2 = a1 << 0xd
 30607: d3 98 08                 a1 = a1 ^ a2
 30610: 98 89 07                 a2 = a1 >> 0x7
 30613: d3 98 08                 a1 = a1 ^ a2
 30616: 97 89 11                 a2 = a1 << 0x11
 30619: 3a 0b 60 00 03           a4 = u64 [0x30060]
 30624: d3 98 08                 a1 = a1 ^ a2
 30627: 3a 0c b0 00 03           a5 = u64 [0x300b0]
 30632: ca b8 09                 a2 = a1 * a4
 30635: 3e 08 e0 00 03           u64 [0x300e0] = a1
 30640: d6 c9 08                 a1 = a2 mulhu a5
 30643: c9 89 0a                 a3 = a2 - a1
 30646: 98 aa 01                 a3 = a3 >> 0x1
 30649: c8 a8 08                 a1 = a1 + a3
 30652: 98 88 06                 a1 = a1 >> 0x6
 30655: 96 88 65                 a1 = a1 * 0x65
 30658: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 30663: c9 89 09                 a2 = a2 - a1
 30666: 95 98 ce                 a1 = a2 + 0xffffffffffffffce
 30669: 97 a9 0d                 a2 = a3 << 0xd
 30672: d3 a9 09                 a2 = a2 ^ a3
 30675: 98 9a 07                 a3 = a2 >> 0x7
 30678: d3 a9 09                 a2 = a2 ^ a3
 30681: 97 9a 11                 a3 = a2 << 0x11
 30684: d3 a9 09                 a2 = a2 ^ a3
 30687: ca b9 05                 s0 = a2 * a4
 30690: 3e 09 e0 00 03           u64 [0x300e0] = a2
 30695: d6 c5 09                 a2 = s0 mulhu a5
 30698: c9 95 0a                 a3 = s0 - a2
 30701: 98 aa 01                 a3 = a3 >> 0x1
 30704: c8 a9 09                 a2 = a2 + a3
 30707: 98 99 06                 a2 = a2 >> 0x6
 30710: 96 99 65                 a2 = a2 * 0x65
 30713: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 30718: c9 95 05                 s0 = s0 - a2
 30721: 95 59 ce                 a2 = s0 + 0xffffffffffffffce
 30724: 97 6a 0d                 a3 = s1 << 0xd
 30727: d3 a6 06                 s1 = s1 ^ a3
 30730: 98 6a 07                 a3 = s1 >> 0x7
 30733: d3 a6 06                 s1 = s1 ^ a3
 30736: 97 6a 11                 a3 = s1 << 0x11
 30739: d3 6a 0a                 a3 = a3 ^ s1
 30742: ca ba 05                 s0 = a3 * a4
 30745: 3e 0a e0 00 03           u64 [0x300e0] = a3
 30750: d6 c5 0a                 a3 = s0 mulhu a5
 30753: c9 a5 06                 s1 = s0 - a3
 30756: 98 66 01                 s1 = s1 >> 0x1
 30759: c8 6a 0a                 a3 = a3 + s1
 30762: 98 aa 06                 a3 = a3 >> 0x6
 30765: 96 aa 65                 a3 = a3 * 0x65
 30768: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 30773: c9 a5 05                 s0 = s0 - a3
 30776: 95 5a ce                 a3 = s0 + 0xffffffffffffffce
 30779: 97 76 0d                 s1 = a0 << 0xd
 30782: d3 76 06                 s1 = s1 ^ a0
 30785: 98 67 07                 a0 = s1 >> 0x7
 30788: d3 76 06                 s1 = s1 ^ a0
 30791: 97 67 11                 a0 = s1 << 0x11
 30794: d3 67 07                 a0 = a0 ^ s1
 30797: ca b7 0b                 a4 = a0 * a4
 30800: 3e 07 e0 00 03           u64 [0x300e0] = a0
 30805: d6 cb 07                 a0 = a4 mulhu a5
 30808: c9 7b 0c                 a5 = a4 - a0
 30811: 98 cc 01                 a5 = a5 >> 0x1
 30814: c8 c7 07                 a0 = a0 + a5
 30817: 98 77 06                 a0 = a0 >> 0x6
 30820: 96 77 65                 a0 = a0 * 0x65
 30823: c9 7b 0b                 a4 = a4 - a0
 30826: 95 bb ce                 a4 = a4 + 0xffffffffffffffce
 30829: 95 17 50 01              a0 = sp + 0x150
 30833: 50 20 2c 02 c1 ca        ra = 556, jump @1338
      :                          @2138 [@dyn 278]
 30839: 82 17 50 01              a0 = u64 [sp + 0x150]
 30843: 82 18 58 01              a1 = u64 [sp + 0x158]
 30847: 82 19 60 01              a2 = u64 [sp + 0x160]
 30851: 82 1a 68 01              a3 = u64 [sp + 0x168]
 30855: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 30859: 7b 18 b8 00              u64 [sp + 0xb8] = a1
 30863: 7b 19 90 00              u64 [sp + 0x90] = a2
 30867: 7b 1a 98 00              u64 [sp + 0x98] = a3
 30871: 95 17 b0 00              a0 = sp + 0xb0
 30875: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 30879: 33 07 d6 00              a0 = 0xd6
 30883: 7b 17 00 01              u64 [sp + 0x100] = a0
 30887: 95 18 90 00              a1 = sp + 0x90
 30891: 7b 18 08 01              u64 [sp + 0x108] = a1
 30895: 7b 17 10 01              u64 [sp + 0x110] = a0
 30899: 33 07 e8 08 01           a0 = 0x108e8
 30904: 7b 17 50 01              u64 [sp + 0x150] = a0
 30908: 49 21 58 01 02           u64 [sp + 344] = 0x2
 30913: 49 21 70 01              u64 [sp + 368] = 0
 30917: 95 18 f8 00              a1 = sp + 0xf8
 30921: 7b 18 60 01              u64 [sp + 0x160] = a1
 30925: 49 21 68 01 02           u64 [sp + 360] = 0x2
 30930: 95 17 c8 00              a0 = sp + 0xc8
 30934: 95 18 50 01              a1 = sp + 0x150
 30938: 50 20 2e 02 eb a6        ra = 558, jump @637
      :                          @2139 [@dyn 279]
 30944: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 30948: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 30952: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 30956: 33 07 02                 a0 = 0x2
 30959: 33 08                    a1 = 0
 30961: 33 09                    a2 = 0
 30963: 64 5a                    a3 = s0
 30965: 33 00 30 02              ra = 0x230
 30969: 0a 64                    ecalli 100 // 'log'
 30971: 01                       fallthrough
      :                          @2140 [@dyn 280]
 30972: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 30977: 55 38 00 00 f0 09        jump @2142 if a1 >=u 4293918720
      :                          @2141
 30983: 28 9d 27                 jump @2553
      :                          @2142
 30986: 33 07 10 01 03           a0 = 0x30110
 30991: 95 77 00 00 10           a0 = a0 + 0x100000
 30996: 01                       fallthrough
      :                          @2143
 30997: 82 78                    a1 = u64 [a0]
 30999: c9 87 09                 a2 = a0 - a1
 31002: aa 59 06                 jump @2145 if a2 == s0
      :                          @2144
 31005: 28 87 27                 jump @2553
      :                          @2145
 31008: c9 68 09                 a2 = a1 - s1
 31011: 01                       fallthrough
      :                          @2146
 31012: 82 7a                    a3 = u64 [a0]
 31014: ab 8a ef                 jump @2143 if a3 != a1
      :                          @2147
 31017: 7b 79                    u64 [a0] = a2
 31019: 33 0b                    a4 = 0
 31021: 01                       fallthrough
      :                          @2148
 31022: ab 8a e7                 jump @2143 if a3 != a1
      :                          @2149
 31025: 28 73 27                 jump @2553
      :                          @2150 [@dyn 281]
 31028: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 31033: 97 89 0d                 a2 = a1 << 0xd
 31036: d3 89 09                 a2 = a2 ^ a1
 31039: 98 9a 07                 a3 = a2 >> 0x7
 31042: 3a 08 60 00 03           a1 = u64 [0x30060]
 31047: d3 a9 09                 a2 = a2 ^ a3
 31050: 97 9a 11                 a3 = a2 << 0x11
 31053: d3 9a 0a                 a3 = a3 ^ a2
 31056: ca 8a 0b                 a4 = a3 * a1
 31059: 3a 09 68 00 03           a2 = u64 [0x30068]
 31064: 3e 0a e0 00 03           u64 [0x300e0] = a3
 31069: 98 ba 03                 a3 = a4 >> 0x3
 31072: d6 9a 0a                 a3 = a3 mulhu a2
 31075: 98 ac 04                 a5 = a3 >> 0x4
 31078: 96 cc e8 03              a5 = a5 * 0x3e8
 31082: c9 cb 0b                 a4 = a4 - a5
 31085: 7b 1b 88 00              u64 [sp + 0x88] = a4
 31089: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 31094: 97 bc 0d                 a5 = a4 << 0xd
 31097: d3 cb 0b                 a4 = a4 ^ a5
 31100: 98 bc 07                 a5 = a4 >> 0x7
 31103: d3 cb 0b                 a4 = a4 ^ a5
 31106: 97 bc 11                 a5 = a4 << 0x11
 31109: d3 cb 0b                 a4 = a4 ^ a5
 31112: ca 8b 0c                 a5 = a4 * a1
 31115: 3e 0b e0 00 03           u64 [0x300e0] = a4
 31120: 98 cb 03                 a4 = a5 >> 0x3
 31123: d6 9b 0b                 a4 = a4 mulhu a2
 31126: 98 bb 04                 a4 = a4 >> 0x4
 31129: 96 bb e8 03              a4 = a4 * 0x3e8
 31133: c9 bc 0c                 a5 = a5 - a4
 31136: 7b 1c 68 02              u64 [sp + 0x268] = a5
 31140: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 31145: 97 bc 0d                 a5 = a4 << 0xd
 31148: d3 cb 0b                 a4 = a4 ^ a5
 31151: 98 bc 07                 a5 = a4 >> 0x7
 31154: d3 cb 0b                 a4 = a4 ^ a5
 31157: 97 bc 11                 a5 = a4 << 0x11
 31160: d3 cb 0b                 a4 = a4 ^ a5
 31163: ca 8b 08                 a1 = a4 * a1
 31166: 3e 0b e0 00 03           u64 [0x300e0] = a4
 31171: 98 87 03                 a0 = a1 >> 0x3
 31174: d6 97 07                 a0 = a0 mulhu a2
 31177: 98 77 04                 a0 = a0 >> 0x4
 31180: 96 77 e8 03              a0 = a0 * 0x3e8
 31184: c9 78 09                 a2 = a1 - a0
 31187: 95 97 01                 a0 = a2 + 0x1
 31190: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 31194: 82 1c 88 00              a5 = u64 [sp + 0x88]
 31198: 82 18 68 02              a1 = u64 [sp + 0x268]
 31202: 8e 95                    s0 = a2 >u 0
 31204: 33 06 41                 s1 = 0x41
 31207: 33 0b 01                 a4 = 0x1
 31210: 01                       fallthrough
      :                          @2151
 31211: cd 7c 0c                 a5 = a5 %u a0
 31214: 83 69 fe                 i32 a2 = s1 + 0xfffffffffffffffe
 31217: d0 98 09                 a2 = a1 >> a2
 31220: 84 99 01                 a2 = a2 & 0x1
 31223: 64 5a                    a3 = s0
 31225: db 9c 0a                 a3 = a5 if a2 != 0
 31228: ca ca 0c                 a5 = a3 * a5
 31231: ca 5a 09                 a2 = a3 * s0
 31234: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 31237: cd 79 05                 s0 = a2 %u a0
 31240: ac 6b e3                 jump @2151 if a4 <u s1
      :                          @2152
 31243: 7b 15 90 00              u64 [sp + 0x90] = s0
 31247: 95 17 88 00              a0 = sp + 0x88
 31251: 7b 17 50 01              u64 [sp + 0x150] = a0
 31255: 33 07 50 03              a0 = 0x350
 31259: 7b 17 58 01              u64 [sp + 0x158] = a0
 31263: 95 18 68 02              a1 = sp + 0x268
 31267: 7b 18 60 01              u64 [sp + 0x160] = a1
 31271: 7b 17 68 01              u64 [sp + 0x168] = a0
 31275: 95 18 b0 00              a1 = sp + 0xb0
 31279: 7b 18 70 01              u64 [sp + 0x170] = a1
 31283: 7b 17 78 01              u64 [sp + 0x178] = a0
 31287: 95 18 90 00              a1 = sp + 0x90
 31291: 7b 18 80 01              u64 [sp + 0x180] = a1
 31295: 7b 17 88 01              u64 [sp + 0x188] = a0
 31299: 33 07 18 09 01           a0 = 0x10918
 31304: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 31308: 49 21 00 01 04           u64 [sp + 256] = 0x4
 31313: 49 21 18 01              u64 [sp + 280] = 0
 31317: 95 18 50 01              a1 = sp + 0x150
 31321: 7b 18 08 01              u64 [sp + 0x108] = a1
 31325: 49 21 10 01 04           u64 [sp + 272] = 0x4
 31330: 95 17 c8 00              a0 = sp + 0xc8
 31334: 95 18 f8 00              a1 = sp + 0xf8
 31338: 50 20 34 02 5b a5        ra = 564, jump @637
      :                          @2153 [@dyn 282]
 31344: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 31348: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 31352: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 31356: 33 07 02                 a0 = 0x2
 31359: 33 08                    a1 = 0
 31361: 33 09                    a2 = 0
 31363: 64 5a                    a3 = s0
 31365: 33 00 36 02              ra = 0x236
 31369: 0a 64                    ecalli 100 // 'log'
 31371: 01                       fallthrough
      :                          @2154 [@dyn 283]
 31372: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 31377: 55 38 00 00 f0 09        jump @2156 if a1 >=u 4293918720
      :                          @2155
 31383: 28 0d 26                 jump @2553
      :                          @2156
 31386: 33 07 10 01 03           a0 = 0x30110
 31391: 95 77 00 00 10           a0 = a0 + 0x100000
 31396: 01                       fallthrough
      :                          @2157
 31397: 82 78                    a1 = u64 [a0]
 31399: c9 87 09                 a2 = a0 - a1
 31402: aa 59 06                 jump @2159 if a2 == s0
      :                          @2158
 31405: 28 f7 25                 jump @2553
      :                          @2159
 31408: c9 68 09                 a2 = a1 - s1
 31411: 01                       fallthrough
      :                          @2160
 31412: 82 7a                    a3 = u64 [a0]
 31414: ab 8a ef                 jump @2157 if a3 != a1
      :                          @2161
 31417: 7b 79                    u64 [a0] = a2
 31419: 33 0b                    a4 = 0
 31421: 01                       fallthrough
      :                          @2162
 31422: ab 8a e7                 jump @2157 if a3 != a1
      :                          @2163
 31425: 28 e3 25                 jump @2553
      :                          @2164 [@dyn 284]
 31428: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 31433: 97 89 0d                 a2 = a1 << 0xd
 31436: d3 98 08                 a1 = a1 ^ a2
 31439: 98 89 07                 a2 = a1 >> 0x7
 31442: d3 98 08                 a1 = a1 ^ a2
 31445: 97 89 11                 a2 = a1 << 0x11
 31448: 3a 0a 60 00 03           a3 = u64 [0x30060]
 31453: d3 98 08                 a1 = a1 ^ a2
 31456: 3a 09 a0 00 03           a2 = u64 [0x300a0]
 31461: ca a8 0b                 a4 = a1 * a3
 31464: 3e 08 e0 00 03           u64 [0x300e0] = a1
 31469: d6 9b 08                 a1 = a4 mulhu a2
 31472: 98 88 12                 a1 = a1 >> 0x12
 31475: 33 0c 40 42 0f           a5 = 0xf4240
 31480: ca c8 08                 a1 = a1 * a5
 31483: c9 8b 0b                 a4 = a4 - a1
 31486: 7b 1b 68 02              u64 [sp + 0x268] = a4
 31490: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 31495: 97 8b 0d                 a4 = a1 << 0xd
 31498: d3 b8 08                 a1 = a1 ^ a4
 31501: 98 8b 07                 a4 = a1 >> 0x7
 31504: d3 b8 08                 a1 = a1 ^ a4
 31507: 97 8b 11                 a4 = a1 << 0x11
 31510: d3 b8 08                 a1 = a1 ^ a4
 31513: ca a8 0a                 a3 = a1 * a3
 31516: 3e 08 e0 00 03           u64 [0x300e0] = a1
 31521: d6 9a 07                 a0 = a3 mulhu a2
 31524: 98 78 12                 a1 = a0 >> 0x12
 31527: 82 17 68 02              a0 = u64 [sp + 0x268]
 31531: ca c8 08                 a1 = a1 * a5
 31534: c9 8a 08                 a1 = a3 - a1
 31537: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 31541: 50 20 3a 02 83 cb        ra = 570, jump @1422
      :                          @2165 [@dyn 285]
 31547: 7b 17 90 00              u64 [sp + 0x90] = a0
 31551: 95 17 68 02              a0 = sp + 0x268
 31555: 7b 17 50 01              u64 [sp + 0x150] = a0
 31559: 33 07 50 03              a0 = 0x350
 31563: 7b 17 58 01              u64 [sp + 0x158] = a0
 31567: 95 18 b0 00              a1 = sp + 0xb0
 31571: 7b 18 60 01              u64 [sp + 0x160] = a1
 31575: 7b 17 68 01              u64 [sp + 0x168] = a0
 31579: 95 18 90 00              a1 = sp + 0x90
 31583: 7b 18 70 01              u64 [sp + 0x170] = a1
 31587: 7b 17 78 01              u64 [sp + 0x178] = a0
 31591: 33 07 68 09 01           a0 = 0x10968
 31596: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 31600: 49 21 00 01 03           u64 [sp + 256] = 0x3
 31605: 49 21 18 01              u64 [sp + 280] = 0
 31609: 95 18 50 01              a1 = sp + 0x150
 31613: 7b 18 08 01              u64 [sp + 0x108] = a1
 31617: 49 21 10 01 03           u64 [sp + 272] = 0x3
 31622: 95 17 c8 00              a0 = sp + 0xc8
 31626: 95 18 f8 00              a1 = sp + 0xf8
 31630: 50 20 3c 02 37 a4        ra = 572, jump @637
      :                          @2166 [@dyn 286]
 31636: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 31640: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 31644: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 31648: 33 07 02                 a0 = 0x2
 31651: 33 08                    a1 = 0
 31653: 33 09                    a2 = 0
 31655: 64 5a                    a3 = s0
 31657: 33 00 3e 02              ra = 0x23e
 31661: 0a 64                    ecalli 100 // 'log'
 31663: 01                       fallthrough
      :                          @2167 [@dyn 287]
 31664: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 31669: 55 38 00 00 f0 09        jump @2169 if a1 >=u 4293918720
      :                          @2168
 31675: 28 e9 24                 jump @2553
      :                          @2169
 31678: 33 07 10 01 03           a0 = 0x30110
 31683: 95 77 00 00 10           a0 = a0 + 0x100000
 31688: 01                       fallthrough
      :                          @2170
 31689: 82 78                    a1 = u64 [a0]
 31691: c9 87 09                 a2 = a0 - a1
 31694: aa 59 06                 jump @2172 if a2 == s0
      :                          @2171
 31697: 28 d3 24                 jump @2553
      :                          @2172
 31700: c9 68 09                 a2 = a1 - s1
 31703: 01                       fallthrough
      :                          @2173
 31704: 82 7a                    a3 = u64 [a0]
 31706: ab 8a ef                 jump @2170 if a3 != a1
      :                          @2174
 31709: 7b 79                    u64 [a0] = a2
 31711: 33 0b                    a4 = 0
 31713: 01                       fallthrough
      :                          @2175
 31714: ab 8a e7                 jump @2170 if a3 != a1
      :                          @2176
 31717: 28 bf 24                 jump @2553
      :                          @2177 [@dyn 288]
 31720: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 31725: 97 89 0d                 a2 = a1 << 0xd
 31728: d3 98 08                 a1 = a1 ^ a2
 31731: 98 89 07                 a2 = a1 >> 0x7
 31734: d3 98 08                 a1 = a1 ^ a2
 31737: 97 89 11                 a2 = a1 << 0x11
 31740: 3a 0a 60 00 03           a3 = u64 [0x30060]
 31745: d3 98 08                 a1 = a1 ^ a2
 31748: 3a 09 a0 00 03           a2 = u64 [0x300a0]
 31753: ca a8 0b                 a4 = a1 * a3
 31756: 3e 08 e0 00 03           u64 [0x300e0] = a1
 31761: d6 9b 08                 a1 = a4 mulhu a2
 31764: 98 88 12                 a1 = a1 >> 0x12
 31767: 33 0c 40 42 0f           a5 = 0xf4240
 31772: ca c8 08                 a1 = a1 * a5
 31775: c9 8b 0b                 a4 = a4 - a1
 31778: 7b 1b 68 02              u64 [sp + 0x268] = a4
 31782: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 31787: 97 8b 0d                 a4 = a1 << 0xd
 31790: d3 b8 08                 a1 = a1 ^ a4
 31793: 98 8b 07                 a4 = a1 >> 0x7
 31796: d3 b8 08                 a1 = a1 ^ a4
 31799: 97 8b 11                 a4 = a1 << 0x11
 31802: d3 b8 08                 a1 = a1 ^ a4
 31805: ca a8 0a                 a3 = a1 * a3
 31808: 3e 08 e0 00 03           u64 [0x300e0] = a1
 31813: d6 9a 08                 a1 = a3 mulhu a2
 31816: 82 17 68 02              a0 = u64 [sp + 0x268]
 31820: 98 88 12                 a1 = a1 >> 0x12
 31823: ca c8 08                 a1 = a1 * a5
 31826: c9 8a 08                 a1 = a3 - a1
 31829: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 31833: 52 07 06                 jump @2179 if a0 != 0
      :                          @2178
 31836: 28 08 21                 jump @2512
      :                          @2179
 31839: 88 89 01                 a2 = a1 <u 0x1
 31842: d3 87 0a                 a3 = a0 ^ a1
 31845: 88 aa 01                 a3 = a3 <u 0x1
 31848: d4 a9 09                 a2 = a2 | a3
 31851: 51 09 08                 jump @2181 if a2 == 0
      :                          @2180
 31854: 64 79                    a2 = a0
 31856: 28 f7 20                 jump @2513
      :                          @2181
 31859: d8 78 0a                 a3 = a1 <u a0
 31862: 64 79                    a2 = a0
 31864: 94 a9                    a2 = 0 if a3 != 0
 31866: c9 98 09                 a2 = a1 - a2
 31869: 93 a8                    a1 = 0 if a3 == 0
 31871: c9 87 07                 a0 = a0 - a1
 31874: 64 98                    a1 = a2
 31876: ab 97 ef                 jump @2181 if a0 != a2
      :                          @2182
 31879: 28 e0 20                 jump @2513
      :                          @2183 [@dyn 289]
 31882: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 31887: 97 89 0d                 a2 = a1 << 0xd
 31890: d3 98 08                 a1 = a1 ^ a2
 31893: 98 89 07                 a2 = a1 >> 0x7
 31896: d3 89 09                 a2 = a2 ^ a1
 31899: 97 9a 11                 a3 = a2 << 0x11
 31902: 3a 08 60 00 03           a1 = u64 [0x30060]
 31907: d3 a9 09                 a2 = a2 ^ a3
 31910: 3a 0a a0 00 03           a3 = u64 [0x300a0]
 31915: ca 89 0b                 a4 = a2 * a1
 31918: 3e 09 e0 00 03           u64 [0x300e0] = a2
 31923: d6 ab 09                 a2 = a4 mulhu a3
 31926: 98 99 12                 a2 = a2 >> 0x12
 31929: 96 99 40 42 0f           a2 = a2 * 0xf4240
 31934: c9 9b 0b                 a4 = a4 - a2
 31937: 95 bb 01                 a4 = a4 + 0x1
 31940: 7b 1b b0 00              u64 [sp + 0xb0] = a4
 31944: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 31949: 97 9a 0d                 a3 = a2 << 0xd
 31952: d3 a9 09                 a2 = a2 ^ a3
 31955: 98 9a 07                 a3 = a2 >> 0x7
 31958: d3 a9 09                 a2 = a2 ^ a3
 31961: 97 9a 11                 a3 = a2 << 0x11
 31964: d3 a9 09                 a2 = a2 ^ a3
 31967: 3a 0a a8 00 03           a3 = u64 [0x300a8]
 31972: ca 89 08                 a1 = a2 * a1
 31975: 3e 09 e0 00 03           u64 [0x300e0] = a2
 31980: d6 a8 07                 a0 = a1 mulhu a3
 31983: 98 79 03                 a2 = a0 >> 0x3
 31986: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
 31989: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 31993: c8 a9 09                 a2 = a2 + a3
 31996: c9 98 08                 a1 = a1 - a2
 31999: 95 88 02                 a1 = a1 + 0x2
 32002: 7b 18 90 00              u64 [sp + 0x90] = a1
 32006: 33 09                    a2 = 0
 32008: ac 87 18                 jump @2186 if a0 <u a1
      :                          @2184
 32011: 33 0a ff                 a3 = 0xffffffffffffffff
 32014: 64 8b                    a4 = a1
 32016: 01                       fallthrough
      :                          @2185
 32017: d6 8b 0c                 a5 = a4 mulhu a1
 32020: ca 8b 0b                 a4 = a4 * a1
 32023: db ca 0b                 a4 = a3 if a5 != 0
 32026: 83 99 01                 i32 a2 = a2 + 0x1
 32029: ae b7 f4                 jump @2185 if a0 >=u a4
      :                          @2186
 32032: 7a 19 68 02              u32 [sp + 0x268] = a2
 32036: 95 17 b0 00              a0 = sp + 0xb0
 32040: 7b 17 50 01              u64 [sp + 0x150] = a0
 32044: 33 07 50 03              a0 = 0x350
 32048: 7b 17 58 01              u64 [sp + 0x158] = a0
 32052: 95 18 90 00              a1 = sp + 0x90
 32056: 7b 18 60 01              u64 [sp + 0x160] = a1
 32060: 7b 17 68 01              u64 [sp + 0x168] = a0
 32064: 95 17 68 02              a0 = sp + 0x268
 32068: 7b 17 70 01              u64 [sp + 0x170] = a0
 32072: 33 07 86 03              a0 = 0x386
 32076: 7b 17 78 01              u64 [sp + 0x178] = a0
 32080: 33 07 c8 09 01           a0 = 0x109c8
 32085: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 32089: 49 21 00 01 03           u64 [sp + 256] = 0x3
 32094: 49 21 18 01              u64 [sp + 280] = 0
 32098: 95 18 50 01              a1 = sp + 0x150
 32102: 7b 18 08 01              u64 [sp + 0x108] = a1
 32106: 49 21 10 01 03           u64 [sp + 272] = 0x3
 32111: 95 17 c8 00              a0 = sp + 0xc8
 32115: 95 18 f8 00              a1 = sp + 0xf8
 32119: 50 20 44 02 4e a2        ra = 580, jump @637
      :                          @2187 [@dyn 290]
 32125: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 32129: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 32133: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 32137: 33 07 02                 a0 = 0x2
 32140: 33 08                    a1 = 0
 32142: 33 09                    a2 = 0
 32144: 64 5a                    a3 = s0
 32146: 33 00 46 02              ra = 0x246
 32150: 0a 64                    ecalli 100 // 'log'
 32152: 01                       fallthrough
      :                          @2188 [@dyn 291]
 32153: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 32158: 55 38 00 00 f0 09        jump @2190 if a1 >=u 4293918720
      :                          @2189
 32164: 28 00 23                 jump @2553
      :                          @2190
 32167: 33 07 10 01 03           a0 = 0x30110
 32172: 95 77 00 00 10           a0 = a0 + 0x100000
 32177: 01                       fallthrough
      :                          @2191
 32178: 82 78                    a1 = u64 [a0]
 32180: c9 87 09                 a2 = a0 - a1
 32183: aa 59 06                 jump @2193 if a2 == s0
      :                          @2192
 32186: 28 ea 22                 jump @2553
      :                          @2193
 32189: c9 68 09                 a2 = a1 - s1
 32192: 01                       fallthrough
      :                          @2194
 32193: 82 7a                    a3 = u64 [a0]
 32195: ab 8a ef                 jump @2191 if a3 != a1
      :                          @2195
 32198: 7b 79                    u64 [a0] = a2
 32200: 33 0b                    a4 = 0
 32202: 01                       fallthrough
      :                          @2196
 32203: ab 8a e7                 jump @2191 if a3 != a1
      :                          @2197
 32206: 28 d6 22                 jump @2553
      :                          @2198 [@dyn 292]
 32209: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 32214: 97 89 0d                 a2 = a1 << 0xd
 32217: d3 98 08                 a1 = a1 ^ a2
 32220: 98 89 07                 a2 = a1 >> 0x7
 32223: d3 89 09                 a2 = a2 ^ a1
 32226: 97 9a 11                 a3 = a2 << 0x11
 32229: 3a 08 60 00 03           a1 = u64 [0x30060]
 32234: d3 a9 09                 a2 = a2 ^ a3
 32237: 3a 0a a0 00 03           a3 = u64 [0x300a0]
 32242: ca 89 0b                 a4 = a2 * a1
 32245: 3e 09 e0 00 03           u64 [0x300e0] = a2
 32250: d6 ab 09                 a2 = a4 mulhu a3
 32253: 98 99 12                 a2 = a2 >> 0x12
 32256: 96 99 40 42 0f           a2 = a2 * 0xf4240
 32261: c9 9b 0b                 a4 = a4 - a2
 32264: 95 bb 01                 a4 = a4 + 0x1
 32267: 7b 1b b0 00              u64 [sp + 0xb0] = a4
 32271: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 32276: 97 9a 0d                 a3 = a2 << 0xd
 32279: d3 a9 09                 a2 = a2 ^ a3
 32282: 98 9a 07                 a3 = a2 >> 0x7
 32285: d3 a9 09                 a2 = a2 ^ a3
 32288: 97 9a 11                 a3 = a2 << 0x11
 32291: d3 a9 09                 a2 = a2 ^ a3
 32294: 3a 0a a8 00 03           a3 = u64 [0x300a8]
 32299: ca 89 08                 a1 = a2 * a1
 32302: 3e 09 e0 00 03           u64 [0x300e0] = a2
 32307: d6 a8 07                 a0 = a1 mulhu a3
 32310: 98 79 03                 a2 = a0 >> 0x3
 32313: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
 32316: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 32320: c8 a9 09                 a2 = a2 + a3
 32323: c9 98 08                 a1 = a1 - a2
 32326: 95 88 02                 a1 = a1 + 0x2
 32329: 7b 18 90 00              u64 [sp + 0x90] = a1
 32333: 33 09                    a2 = 0
 32335: ac 87 0c                 jump @2200 if a0 <u a1
      :                          @2199
 32338: cb 87 07                 a0 = a0 /u a1
 32341: 83 99 01                 i32 a2 = a2 + 0x1
 32344: ae 87 fa                 jump @2199 if a0 >=u a1
      :                          @2200
 32347: 7a 19 68 02              u32 [sp + 0x268] = a2
 32351: 95 17 b0 00              a0 = sp + 0xb0
 32355: 7b 17 50 01              u64 [sp + 0x150] = a0
 32359: 33 07 50 03              a0 = 0x350
 32363: 7b 17 58 01              u64 [sp + 0x158] = a0
 32367: 95 18 90 00              a1 = sp + 0x90
 32371: 7b 18 60 01              u64 [sp + 0x160] = a1
 32375: 7b 17 68 01              u64 [sp + 0x168] = a0
 32379: 95 17 68 02              a0 = sp + 0x268
 32383: 7b 17 70 01              u64 [sp + 0x170] = a0
 32387: 33 07 86 03              a0 = 0x386
 32391: 7b 17 78 01              u64 [sp + 0x178] = a0
 32395: 33 07 f8 09 01           a0 = 0x109f8
 32400: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 32404: 49 21 00 01 03           u64 [sp + 256] = 0x3
 32409: 49 21 18 01              u64 [sp + 280] = 0
 32413: 95 18 50 01              a1 = sp + 0x150
 32417: 7b 18 08 01              u64 [sp + 0x108] = a1
 32421: 49 21 10 01 03           u64 [sp + 272] = 0x3
 32426: 95 17 c8 00              a0 = sp + 0xc8
 32430: 95 18 f8 00              a1 = sp + 0xf8
 32434: 50 20 4a 02 13 a1        ra = 586, jump @637
      :                          @2201 [@dyn 293]
 32440: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 32444: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 32448: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 32452: 33 07 02                 a0 = 0x2
 32455: 33 08                    a1 = 0
 32457: 33 09                    a2 = 0
 32459: 64 5a                    a3 = s0
 32461: 33 00 4c 02              ra = 0x24c
 32465: 0a 64                    ecalli 100 // 'log'
 32467: 01                       fallthrough
      :                          @2202 [@dyn 294]
 32468: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 32473: 55 38 00 00 f0 09        jump @2204 if a1 >=u 4293918720
      :                          @2203
 32479: 28 c5 21                 jump @2553
      :                          @2204
 32482: 33 07 10 01 03           a0 = 0x30110
 32487: 95 77 00 00 10           a0 = a0 + 0x100000
 32492: 01                       fallthrough
      :                          @2205
 32493: 82 78                    a1 = u64 [a0]
 32495: c9 87 09                 a2 = a0 - a1
 32498: aa 59 06                 jump @2207 if a2 == s0
      :                          @2206
 32501: 28 af 21                 jump @2553
      :                          @2207
 32504: c9 68 09                 a2 = a1 - s1
 32507: 01                       fallthrough
      :                          @2208
 32508: 82 7a                    a3 = u64 [a0]
 32510: ab 8a ef                 jump @2205 if a3 != a1
      :                          @2209
 32513: 7b 79                    u64 [a0] = a2
 32515: 33 0b                    a4 = 0
 32517: 01                       fallthrough
      :                          @2210
 32518: ab 8a e7                 jump @2205 if a3 != a1
      :                          @2211
 32521: 28 9b 21                 jump @2553
      :                          @2212 [@dyn 295]
 32524: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 32529: 33 09                    a2 = 0
 32531: 97 8a 0d                 a3 = a1 << 0xd
 32534: d3 a8 08                 a1 = a1 ^ a3
 32537: 98 8a 07                 a3 = a1 >> 0x7
 32540: d3 a8 08                 a1 = a1 ^ a3
 32543: 97 8a 11                 a3 = a1 << 0x11
 32546: d3 a8 08                 a1 = a1 ^ a3
 32549: 3a 0a 60 00 03           a3 = u64 [0x30060]
 32554: 3a 0b a0 00 03           a4 = u64 [0x300a0]
 32559: 3e 08 e0 00 03           u64 [0x300e0] = a1
 32564: ca a8 07                 a0 = a1 * a3
 32567: d6 b7 08                 a1 = a0 mulhu a4
 32570: 98 88 12                 a1 = a1 >> 0x12
 32573: 96 88 40 42 0f           a1 = a1 * 0xf4240
 32578: c9 87 07                 a0 = a0 - a1
 32581: 7b 17 90 00              u64 [sp + 0x90] = a0
 32585: 98 78 01                 a1 = a0 >> 0x1
 32588: 95 88 01                 a1 = a1 + 0x1
 32591: 33 0a ff                 a3 = 0xffffffffffffffff
 32594: 01                       fallthrough
      :                          @2213
 32595: c8 98 0c                 a5 = a1 + a2
 32598: 98 cc 01                 a5 = a5 >> 0x1
 32601: d6 cc 06                 s1 = a5 mulhu a5
 32604: ca cc 0b                 a4 = a5 * a5
 32607: db 6a 0b                 a4 = a3 if s1 != 0
 32610: aa 7b 15                 jump @2215 if a4 == a0
      :                          @2214
 32613: d8 7b 06                 s1 = a4 <u a0
 32616: 95 c5 01                 s0 = a5 + 0x1
 32619: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 32622: da 6c 08                 a1 = a5 if s1 == 0
 32625: db 65 09                 a2 = s0 if s1 != 0
 32628: ae 98 df                 jump @2213 if a1 >=u a2
      :                          @2215
 32631: d3 b7 07                 a0 = a0 ^ a4
 32634: 88 77 01                 a0 = a0 <u 0x1
 32637: 78 17 b0 00              u8 [sp + 0xb0] = a0
 32641: 95 17 90 00              a0 = sp + 0x90
 32645: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 32649: 33 07 50 03              a0 = 0x350
 32653: 7b 17 00 01              u64 [sp + 0x100] = a0
 32657: 95 17 b0 00              a0 = sp + 0xb0
 32661: 7b 17 08 01              u64 [sp + 0x108] = a0
 32665: 33 07 9c 03              a0 = 0x39c
 32669: 7b 17 10 01              u64 [sp + 0x110] = a0
 32673: 33 07 40 0a 01           a0 = 0x10a40
 32678: 7b 17 50 01              u64 [sp + 0x150] = a0
 32682: 49 21 58 01 02           u64 [sp + 344] = 0x2
 32687: 49 21 70 01              u64 [sp + 368] = 0
 32691: 95 18 f8 00              a1 = sp + 0xf8
 32695: 7b 18 60 01              u64 [sp + 0x160] = a1
 32699: 49 21 68 01 02           u64 [sp + 360] = 0x2
 32704: 95 17 c8 00              a0 = sp + 0xc8
 32708: 95 18 50 01              a1 = sp + 0x150
 32712: 50 20 50 02 fd 9f        ra = 592, jump @637
      :                          @2216 [@dyn 296]
 32718: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 32722: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 32726: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 32730: 33 07 02                 a0 = 0x2
 32733: 33 08                    a1 = 0
 32735: 33 09                    a2 = 0
 32737: 64 5a                    a3 = s0
 32739: 33 00 52 02              ra = 0x252
 32743: 0a 64                    ecalli 100 // 'log'
 32745: 01                       fallthrough
      :                          @2217 [@dyn 297]
 32746: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 32751: 55 38 00 00 f0 09        jump @2219 if a1 >=u 4293918720
      :                          @2218
 32757: 28 af 20                 jump @2553
      :                          @2219
 32760: 33 07 10 01 03           a0 = 0x30110
 32765: 95 77 00 00 10           a0 = a0 + 0x100000
 32770: 01                       fallthrough
      :                          @2220
 32771: 82 78                    a1 = u64 [a0]
 32773: c9 87 09                 a2 = a0 - a1
 32776: aa 59 06                 jump @2222 if a2 == s0
      :                          @2221
 32779: 28 99 20                 jump @2553
      :                          @2222
 32782: c9 68 09                 a2 = a1 - s1
 32785: 01                       fallthrough
      :                          @2223
 32786: 82 7a                    a3 = u64 [a0]
 32788: ab 8a ef                 jump @2220 if a3 != a1
      :                          @2224
 32791: 7b 79                    u64 [a0] = a2
 32793: 33 0b                    a4 = 0
 32795: 01                       fallthrough
      :                          @2225
 32796: ab 8a e7                 jump @2220 if a3 != a1
      :                          @2226
 32799: 28 85 20                 jump @2553
      :                          @2227 [@dyn 298]
 32802: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 32807: 97 89 0d                 a2 = a1 << 0xd
 32810: d3 98 08                 a1 = a1 ^ a2
 32813: 98 89 07                 a2 = a1 >> 0x7
 32816: d3 98 08                 a1 = a1 ^ a2
 32819: 97 89 11                 a2 = a1 << 0x11
 32822: d3 98 08                 a1 = a1 ^ a2
 32825: 3a 09 60 00 03           a2 = u64 [0x30060]
 32830: 3a 0a 98 00 03           a3 = u64 [0x30098]
 32835: 3e 08 e0 00 03           u64 [0x300e0] = a1
 32840: ca 98 07                 a0 = a1 * a2
 32843: 98 78 02                 a1 = a0 >> 0x2
 32846: d6 a8 08                 a1 = a1 mulhu a3
 32849: 98 88 02                 a1 = a1 >> 0x2
 32852: 96 88 64                 a1 = a1 * 0x64
 32855: c9 87 07                 a0 = a0 - a1
 32858: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 32862: 33 00 56 02              ra = 0x256
 32866: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 32869: 7b 10 28                 u64 [sp + 0x28] = ra
 32872: 7b 15 20                 u64 [sp + 0x20] = s0
 32875: 7b 16 18                 u64 [sp + 0x18] = s1
 32878: 7b 17 10                 u64 [sp + 0x10] = a0
 32881: 95 77 01                 a0 = a0 + 0x1
 32884: 7b 17                    u64 [sp] = a0
 32886: 97 79 03                 a2 = a0 << 0x3
 32889: 33 07 10 01 03           a0 = 0x30110
 32894: 33 03 10 01 03           t1 = 0x30110
 32899: 33 02 00 00 10           t0 = 0x100000
 32904: c8 23 05                 s0 = t1 + t0
 32907: 28 00 c3                 jump @1345
      :                          @2228 [@dyn 299]
 32910: 7b 17 90 00              u64 [sp + 0x90] = a0
 32914: 95 17 b0 00              a0 = sp + 0xb0
 32918: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 32922: 33 07 50 03              a0 = 0x350
 32926: 7b 17 00 01              u64 [sp + 0x100] = a0
 32930: 95 18 90 00              a1 = sp + 0x90
 32934: 7b 18 08 01              u64 [sp + 0x108] = a1
 32938: 7b 17 10 01              u64 [sp + 0x110] = a0
 32942: 33 07 78 0a 01           a0 = 0x10a78
 32947: 7b 17 50 01              u64 [sp + 0x150] = a0
 32951: 49 21 58 01 02           u64 [sp + 344] = 0x2
 32956: 49 21 70 01              u64 [sp + 368] = 0
 32960: 95 18 f8 00              a1 = sp + 0xf8
 32964: 7b 18 60 01              u64 [sp + 0x160] = a1
 32968: 49 21 68 01 02           u64 [sp + 360] = 0x2
 32973: 95 17 c8 00              a0 = sp + 0xc8
 32977: 95 18 50 01              a1 = sp + 0x150
 32981: 50 20 58 02 f0 9e        ra = 600, jump @637
      :                          @2229 [@dyn 300]
 32987: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 32991: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 32995: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 32999: 33 07 02                 a0 = 0x2
 33002: 33 08                    a1 = 0
 33004: 33 09                    a2 = 0
 33006: 64 5a                    a3 = s0
 33008: 33 00 5a 02              ra = 0x25a
 33012: 0a 64                    ecalli 100 // 'log'
 33014: 01                       fallthrough
      :                          @2230 [@dyn 301]
 33015: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 33020: 55 38 00 00 f0 09        jump @2232 if a1 >=u 4293918720
      :                          @2231
 33026: 28 a2 1f                 jump @2553
      :                          @2232
 33029: 33 07 10 01 03           a0 = 0x30110
 33034: 95 77 00 00 10           a0 = a0 + 0x100000
 33039: 01                       fallthrough
      :                          @2233
 33040: 82 78                    a1 = u64 [a0]
 33042: c9 87 09                 a2 = a0 - a1
 33045: aa 59 06                 jump @2235 if a2 == s0
      :                          @2234
 33048: 28 8c 1f                 jump @2553
      :                          @2235
 33051: c9 68 09                 a2 = a1 - s1
 33054: 01                       fallthrough
      :                          @2236
 33055: 82 7a                    a3 = u64 [a0]
 33057: ab 8a ef                 jump @2233 if a3 != a1
      :                          @2237
 33060: 7b 79                    u64 [a0] = a2
 33062: 33 0b                    a4 = 0
 33064: 01                       fallthrough
      :                          @2238
 33065: ab 8a e7                 jump @2233 if a3 != a1
      :                          @2239
 33068: 28 78 1f                 jump @2553
      :                          @2240 [@dyn 302]
 33071: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 33076: 97 89 0d                 a2 = a1 << 0xd
 33079: d3 98 08                 a1 = a1 ^ a2
 33082: 98 89 07                 a2 = a1 >> 0x7
 33085: d3 98 08                 a1 = a1 ^ a2
 33088: 97 89 11                 a2 = a1 << 0x11
 33091: d3 98 08                 a1 = a1 ^ a2
 33094: 3a 09 60 00 03           a2 = u64 [0x30060]
 33099: 3a 0a 98 00 03           a3 = u64 [0x30098]
 33104: 3e 08 e0 00 03           u64 [0x300e0] = a1
 33109: ca 98 07                 a0 = a1 * a2
 33112: 98 78 02                 a1 = a0 >> 0x2
 33115: d6 a8 08                 a1 = a1 mulhu a3
 33118: 98 88 02                 a1 = a1 >> 0x2
 33121: 96 88 64                 a1 = a1 * 0x64
 33124: c9 87 07                 a0 = a0 - a1
 33127: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 33131: 33 00 5e 02              ra = 0x25e
 33135: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 33138: 7b 10 10                 u64 [sp + 0x10] = ra
 33141: 7b 15 08                 u64 [sp + 0x8] = s0
 33144: 7b 16                    u64 [sp] = s1
 33146: 64 73                    t1 = a0
 33148: 95 78 01                 a1 = a0 + 0x1
 33151: 97 87 03                 a0 = a1 << 0x3
 33154: 33 04 10 01 03           t2 = 0x30110
 33159: 33 02 00 00 10           t0 = 0x100000
 33164: c8 24 00                 ra = t2 + t0
 33167: 28 5b c3                 jump @1375
      :                          @2241 [@dyn 303]
 33170: 7b 17 90 00              u64 [sp + 0x90] = a0
 33174: 95 17 b0 00              a0 = sp + 0xb0
 33178: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 33182: 33 07 50 03              a0 = 0x350
 33186: 7b 17 00 01              u64 [sp + 0x100] = a0
 33190: 95 17 90 00              a0 = sp + 0x90
 33194: 7b 17 08 01              u64 [sp + 0x108] = a0
 33198: 33 07 a8 03              a0 = 0x3a8
 33202: 7b 17 10 01              u64 [sp + 0x110] = a0
 33206: 33 07 98 0a 01           a0 = 0x10a98
 33211: 7b 17 50 01              u64 [sp + 0x150] = a0
 33215: 49 21 58 01 02           u64 [sp + 344] = 0x2
 33220: 49 21 70 01              u64 [sp + 368] = 0
 33224: 95 18 f8 00              a1 = sp + 0xf8
 33228: 7b 18 60 01              u64 [sp + 0x160] = a1
 33232: 49 21 68 01 02           u64 [sp + 360] = 0x2
 33237: 95 17 c8 00              a0 = sp + 0xc8
 33241: 95 18 50 01              a1 = sp + 0x150
 33245: 50 20 60 02 e8 9d        ra = 608, jump @637
      :                          @2242 [@dyn 304]
 33251: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 33255: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 33259: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 33263: 33 07 02                 a0 = 0x2
 33266: 33 08                    a1 = 0
 33268: 33 09                    a2 = 0
 33270: 64 5a                    a3 = s0
 33272: 33 00 62 02              ra = 0x262
 33276: 0a 64                    ecalli 100 // 'log'
 33278: 01                       fallthrough
      :                          @2243 [@dyn 305]
 33279: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 33284: 55 38 00 00 f0 09        jump @2245 if a1 >=u 4293918720
      :                          @2244
 33290: 28 9a 1e                 jump @2553
      :                          @2245
 33293: 33 07 10 01 03           a0 = 0x30110
 33298: 95 77 00 00 10           a0 = a0 + 0x100000
 33303: 01                       fallthrough
      :                          @2246
 33304: 82 78                    a1 = u64 [a0]
 33306: c9 87 09                 a2 = a0 - a1
 33309: aa 59 06                 jump @2248 if a2 == s0
      :                          @2247
 33312: 28 84 1e                 jump @2553
      :                          @2248
 33315: c9 68 09                 a2 = a1 - s1
 33318: 01                       fallthrough
      :                          @2249
 33319: 82 7a                    a3 = u64 [a0]
 33321: ab 8a ef                 jump @2246 if a3 != a1
      :                          @2250
 33324: 7b 79                    u64 [a0] = a2
 33326: 33 0b                    a4 = 0
 33328: 01                       fallthrough
      :                          @2251
 33329: ab 8a e7                 jump @2246 if a3 != a1
      :                          @2252
 33332: 28 70 1e                 jump @2553
      :                          @2253 [@dyn 306]
 33335: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 33340: 97 89 0d                 a2 = a1 << 0xd
 33343: d3 89 09                 a2 = a2 ^ a1
 33346: 98 9a 07                 a3 = a2 >> 0x7
 33349: 3a 08 60 00 03           a1 = u64 [0x30060]
 33354: d3 a9 09                 a2 = a2 ^ a3
 33357: 97 9a 11                 a3 = a2 << 0x11
 33360: d3 a9 09                 a2 = a2 ^ a3
 33363: ca 89 0a                 a3 = a2 * a1
 33366: 3a 0b 68 00 03           a4 = u64 [0x30068]
 33371: 3e 09 e0 00 03           u64 [0x300e0] = a2
 33376: 98 a9 03                 a2 = a3 >> 0x3
 33379: d6 b9 09                 a2 = a2 mulhu a4
 33382: 98 99 04                 a2 = a2 >> 0x4
 33385: 33 0c e8 03              a5 = 0x3e8
 33389: ca c9 09                 a2 = a2 * a5
 33392: c9 9a 0a                 a3 = a3 - a2
 33395: 95 aa 01                 a3 = a3 + 0x1
 33398: 7b 1a 80 00              u64 [sp + 0x80] = a3
 33402: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 33407: 97 9a 0d                 a3 = a2 << 0xd
 33410: d3 a9 09                 a2 = a2 ^ a3
 33413: 98 9a 07                 a3 = a2 >> 0x7
 33416: d3 a9 09                 a2 = a2 ^ a3
 33419: 97 9a 11                 a3 = a2 << 0x11
 33422: d3 a9 09                 a2 = a2 ^ a3
 33425: ca 89 0a                 a3 = a2 * a1
 33428: 3e 09 e0 00 03           u64 [0x300e0] = a2
 33433: 98 a9 03                 a2 = a3 >> 0x3
 33436: d6 b9 09                 a2 = a2 mulhu a4
 33439: 98 99 04                 a2 = a2 >> 0x4
 33442: ca c9 09                 a2 = a2 * a5
 33445: c9 9a 0a                 a3 = a3 - a2
 33448: 7b 1a 88 00              u64 [sp + 0x88] = a3
 33452: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 33457: 97 9a 0d                 a3 = a2 << 0xd
 33460: d3 a9 09                 a2 = a2 ^ a3
 33463: 98 9a 07                 a3 = a2 >> 0x7
 33466: d3 a9 09                 a2 = a2 ^ a3
 33469: 97 9a 11                 a3 = a2 << 0x11
 33472: d3 a9 09                 a2 = a2 ^ a3
 33475: 3a 0a 70 00 03           a3 = u64 [0x30070]
 33480: ca 89 08                 a1 = a2 * a1
 33483: 3e 09 e0 00 03           u64 [0x300e0] = a2
 33488: d6 a8 07                 a0 = a1 mulhu a3
 33491: c9 78 09                 a2 = a1 - a0
 33494: 98 99 01                 a2 = a2 >> 0x1
 33497: c8 97 07                 a0 = a0 + a2
 33500: 98 77 09                 a0 = a0 >> 0x9
 33503: 96 77 e7 03              a0 = a0 * 0x3e7
 33507: c9 78 09                 a2 = a1 - a0
 33510: 82 1a 88 00              a3 = u64 [sp + 0x88]
 33514: 82 17 80 00              a0 = u64 [sp + 0x80]
 33518: 95 98 01                 a1 = a2 + 0x1
 33521: 7b 18 68 02              u64 [sp + 0x268] = a1
 33525: 8e 99                    a2 = a2 >u 0
 33527: 52 0a 06                 jump @2255 if a3 != 0
      :                          @2254
 33530: 28 2d 18                 jump @2479
      :                          @2255
 33533: 64 7b                    a4 = a0
 33535: 28 0e                    jump @2258
      :                          @2256
 33537: 98 aa 01                 a3 = a3 >> 0x1
 33540: ca bb 0b                 a4 = a4 * a4
 33543: 52 0a 06                 jump @2258 if a3 != 0
      :                          @2257
 33546: 28 1d 18                 jump @2479
      :                          @2258
 33549: 84 ac 01                 a5 = a3 & 0x1
 33552: cd 8b 0b                 a4 = a4 %u a1
 33555: 51 0c ee                 jump @2256 if a5 == 0
      :                          @2259
 33558: ca 9b 09                 a2 = a4 * a2
 33561: cd 89 09                 a2 = a2 %u a1
 33564: 28 e5                    jump @2256
      :                          @2260 [@dyn 307]
 33566: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 33571: 97 78 0d                 a1 = a0 << 0xd
 33574: d3 87 07                 a0 = a0 ^ a1
 33577: 98 78 07                 a1 = a0 >> 0x7
 33580: d3 87 07                 a0 = a0 ^ a1
 33583: 97 78 11                 a1 = a0 << 0x11
 33586: d3 78 02                 t0 = a1 ^ a0
 33589: 3e 02 e0 00 03           u64 [0x300e0] = t0
 33594: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 33599: 3a 03 60 00 03           t1 = u64 [0x30060]
 33604: 97 8a 0d                 a3 = a1 << 0xd
 33607: d3 a8 08                 a1 = a1 ^ a3
 33610: 98 8a 07                 a3 = a1 >> 0x7
 33613: d3 a8 08                 a1 = a1 ^ a3
 33616: 97 8a 11                 a3 = a1 << 0x11
 33619: d3 a8 08                 a1 = a1 ^ a3
 33622: ca 38 0a                 a3 = a1 * t1
 33625: 3e 08 e0 00 03           u64 [0x300e0] = a1
 33630: 3a 08 90 00 03           a1 = u64 [0x30090]
 33635: 98 ab 01                 a4 = a3 >> 0x1
 33638: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 33643: d6 8b 0b                 a4 = a4 mulhu a1
 33646: 98 bb 04                 a4 = a4 >> 0x4
 33649: 97 6c 0d                 a5 = s1 << 0xd
 33652: d3 c6 06                 s1 = s1 ^ a5
 33655: 98 6c 07                 a5 = s1 >> 0x7
 33658: d3 6c 0c                 a5 = a5 ^ s1
 33661: 97 c5 11                 s0 = a5 << 0x11
 33664: d3 c5 05                 s0 = s0 ^ a5
 33667: 3e 05 e0 00 03           u64 [0x300e0] = s0
 33672: 3a 0c e0 00 03           a5 = u64 [0x300e0]
 33677: 96 bb 62                 a4 = a4 * 0x62
 33680: c9 ba 0a                 a3 = a3 - a4
 33683: 97 cb 0d                 a4 = a5 << 0xd
 33686: d3 cb 0b                 a4 = a4 ^ a5
 33689: 98 bc 07                 a5 = a4 >> 0x7
 33692: d3 cb 0b                 a4 = a4 ^ a5
 33695: 97 bc 11                 a5 = a4 << 0x11
 33698: d3 cb 0b                 a4 = a4 ^ a5
 33701: ca 3b 07                 a0 = a4 * t1
 33704: 98 7c 01                 a5 = a0 >> 0x1
 33707: d6 8c 0c                 a5 = a5 mulhu a1
 33710: 95 a8 02                 a1 = a3 + 0x2
 33713: 98 cc 04                 a5 = a5 >> 0x4
 33716: 96 ca 62                 a3 = a5 * 0x62
 33719: c9 a7 07                 a0 = a0 - a3
 33722: 95 7a 02                 a3 = a0 + 0x2
 33725: 3e 0b e0 00 03           u64 [0x300e0] = a4
 33730: 64 86                    s1 = a1
 33732: 64 a9                    a2 = a3
 33734: 01                       fallthrough
      :                          @2261
 33735: 64 9c                    a5 = a2
 33737: cd 96 09                 a2 = s1 %u a2
 33740: 64 c6                    s1 = a5
 33742: 52 09 f9                 jump @2261 if a2 != 0
      :                          @2262
 33745: 49 11 10 ff ff ef        u64 [sp + 16] = 0xffffffffffefffff
 33751: 7b 13 08                 u64 [sp + 0x8] = t1
 33754: 52 1c 01 df 00           jump @2272 if a5 != 1
      :                          @2263
 33759: 3a 07 98 00 03           a0 = u64 [0x30098]
 33764: ca 35 09                 a2 = s0 * t1
 33767: ca 32 0b                 a4 = t0 * t1
 33770: 98 9c 02                 a5 = a2 >> 0x2
 33773: d6 7c 0c                 a5 = a5 mulhu a0
 33776: 98 cc 02                 a5 = a5 >> 0x2
 33779: 96 cc 64                 a5 = a5 * 0x64
 33782: c9 c9 09                 a2 = a2 - a5
 33785: 98 bc 02                 a5 = a4 >> 0x2
 33788: d6 7c 07                 a0 = a5 mulhu a0
 33791: 98 77 02                 a0 = a0 >> 0x2
 33794: 96 77 64                 a0 = a0 * 0x64
 33797: c9 7b 07                 a0 = a4 - a0
 33800: 33 00 68 02              ra = 0x268
 33804: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 33807: 7b 10 38                 u64 [sp + 0x38] = ra
 33810: 7b 15 30                 u64 [sp + 0x30] = s0
 33813: 49 11 28 64              u64 [sp + 40] = 0x64
 33817: 64 a5                    s0 = a3
 33819: 7b 19                    u64 [sp] = a2
 33821: 64 86                    s1 = a1
 33823: 7b 17 08                 u64 [sp + 0x8] = a0
 33826: 95 17 10                 a0 = sp + 0x10
 33829: 64 a9                    a2 = a3
 33831: 33 00 20 01              ra = 0x120
 33835: 28 0f a5                 jump @788
      :                          @2264 [@dyn 308]
 33838: 7b 17 90 00              u64 [sp + 0x90] = a0
 33842: 95 17 90 00              a0 = sp + 0x90
 33846: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 33850: 33 07 a8 03              a0 = 0x3a8
 33854: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 33858: 33 07 20 0b 01           a0 = 0x10b20
 33863: 7b 17 50 01              u64 [sp + 0x150] = a0
 33867: 49 21 58 01 01           u64 [sp + 344] = 0x1
 33872: 49 21 70 01              u64 [sp + 368] = 0
 33876: 95 17 c8 00              a0 = sp + 0xc8
 33880: 7b 17 60 01              u64 [sp + 0x160] = a0
 33884: 49 21 68 01 01           u64 [sp + 360] = 0x1
 33889: 95 17 f8 00              a0 = sp + 0xf8
 33893: 95 18 50 01              a1 = sp + 0x150
 33897: 50 20 6a 02 5c 9b        ra = 618, jump @637
      :                          @2265 [@dyn 309]
 33903: 82 15 00 01              s0 = u64 [sp + 0x100]
 33907: 82 1b 08 01              a4 = u64 [sp + 0x108]
 33911: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 33915: 33 07 02                 a0 = 0x2
 33918: 33 08                    a1 = 0
 33920: 33 09                    a2 = 0
 33922: 64 5a                    a3 = s0
 33924: 33 00 6c 02              ra = 0x26c
 33928: 0a 64                    ecalli 100 // 'log'
 33930: 01                       fallthrough
      :                          @2266 [@dyn 310]
 33931: 82 13 08                 t1 = u64 [sp + 0x8]
 33934: 82 17 10                 a0 = u64 [sp + 0x10]
 33937: c8 67 07                 a0 = a0 + s1
 33940: 53 37 00 00 f0 25        jump @2272 if a0 <u 4293918720
      :                          @2267
 33946: 33 07 10 01 03           a0 = 0x30110
 33951: 95 77 00 00 10           a0 = a0 + 0x100000
 33956: 01                       fallthrough
      :                          @2268
 33957: 82 78                    a1 = u64 [a0]
 33959: c9 87 09                 a2 = a0 - a1
 33962: ab 59 0f                 jump @2272 if a2 != s0
      :                          @2269
 33965: c9 68 09                 a2 = a1 - s1
 33968: 01                       fallthrough
      :                          @2270
 33969: 82 7a                    a3 = u64 [a0]
 33971: ab 8a f2                 jump @2268 if a3 != a1
      :                          @2271
 33974: 7b 79                    u64 [a0] = a2
 33976: 01                       fallthrough
      :                          @2272
 33977: 49 21 b0 00 02           u64 [sp + 176] = 0x2
 33982: 49 21 b8 00 03           u64 [sp + 184] = 0x3
 33987: 49 21 c0 00 05           u64 [sp + 192] = 0x5
 33992: 33 0c e0 00 03           a5 = 0x300e0
 33997: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 34002: 97 78 0d                 a1 = a0 << 0xd
 34005: d3 87 07                 a0 = a0 ^ a1
 34008: 98 78 07                 a1 = a0 >> 0x7
 34011: d3 87 07                 a0 = a0 ^ a1
 34014: 97 78 11                 a1 = a0 << 0x11
 34017: d3 78 08                 a1 = a1 ^ a0
 34020: 3e 08 e0 00 03           u64 [0x300e0] = a1
 34025: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 34030: 84 77 01                 a0 = a0 & 0x1
 34033: 97 89 0d                 a2 = a1 << 0xd
 34036: d3 98 08                 a1 = a1 ^ a2
 34039: 98 89 07                 a2 = a1 >> 0x7
 34042: d3 98 08                 a1 = a1 ^ a2
 34045: 97 89 11                 a2 = a1 << 0x11
 34048: d3 98 08                 a1 = a1 ^ a2
 34051: ca 38 09                 a2 = a1 * t1
 34054: 3e 08 e0 00 03           u64 [0x300e0] = a1
 34059: 14 08 ab aa aa aa aa aa aa aa a1 = 0xaaaaaaaaaaaaaaab
 34069: d6 89 08                 a1 = a2 mulhu a1
 34072: 98 8a 01                 a3 = a1 >> 0x1
 34075: 84 88 fe                 a1 = a1 & 0xfffffffffffffffe
 34078: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 34083: c8 a8 08                 a1 = a1 + a3
 34086: c9 89 09                 a2 = a2 - a1
 34089: 97 b8 0d                 a1 = a4 << 0xd
 34092: d3 b8 08                 a1 = a1 ^ a4
 34095: 98 8a 07                 a3 = a1 >> 0x7
 34098: d3 a8 08                 a1 = a1 ^ a3
 34101: 97 8a 11                 a3 = a1 << 0x11
 34104: d3 a8 08                 a1 = a1 ^ a3
 34107: ca 38 0a                 a3 = a1 * t1
 34110: 3e 08 e0 00 03           u64 [0x300e0] = a1
 34115: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
 34125: d6 8a 08                 a1 = a3 mulhu a1
 34128: 98 8b 02                 a4 = a1 >> 0x2
 34131: 84 88 fc                 a1 = a1 & 0xfffffffffffffffc
 34134: c8 b8 08                 a1 = a1 + a4
 34137: c9 8a 0a                 a3 = a3 - a1
 34140: 7b 17 90 00              u64 [sp + 0x90] = a0
 34144: 7b 19 98 00              u64 [sp + 0x98] = a2
 34148: 7b 1a a0 00              u64 [sp + 0xa0] = a3
 34152: 95 17 90 00              a0 = sp + 0x90
 34156: 95 18 b0 00              a1 = sp + 0xb0
 34160: 50 20 6e 02 71 ad        ra = 622, jump @1011
      :                          @2273 [@dyn 311]
 34166: 7b 17 68 02              u64 [sp + 0x268] = a0
 34170: 95 17 68 02              a0 = sp + 0x268
 34174: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 34178: 33 07 a8 03              a0 = 0x3a8
 34182: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 34186: 33 07 40 0b 01           a0 = 0x10b40
 34191: 7b 17 50 01              u64 [sp + 0x150] = a0
 34195: 49 21 58 01 01           u64 [sp + 344] = 0x1
 34200: 49 21 70 01              u64 [sp + 368] = 0
 34204: 95 17 c8 00              a0 = sp + 0xc8
 34208: 7b 17 60 01              u64 [sp + 0x160] = a0
 34212: 49 21 68 01 01           u64 [sp + 360] = 0x1
 34217: 95 17 f8 00              a0 = sp + 0xf8
 34221: 95 18 50 01              a1 = sp + 0x150
 34225: 50 20 70 02 14 9a        ra = 624, jump @637
      :                          @2274 [@dyn 312]
 34231: 82 15 00 01              s0 = u64 [sp + 0x100]
 34235: 82 1b 08 01              a4 = u64 [sp + 0x108]
 34239: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 34243: 33 07 02                 a0 = 0x2
 34246: 33 08                    a1 = 0
 34248: 33 09                    a2 = 0
 34250: 64 5a                    a3 = s0
 34252: 33 00 72 02              ra = 0x272
 34256: 0a 64                    ecalli 100 // 'log'
 34258: 01                       fallthrough
      :                          @2275 [@dyn 313]
 34259: 82 17 10                 a0 = u64 [sp + 0x10]
 34262: c8 67 07                 a0 = a0 + s1
 34265: 53 37 00 00 f0 25        jump @2281 if a0 <u 4293918720
      :                          @2276
 34271: 33 07 10 01 03           a0 = 0x30110
 34276: 95 77 00 00 10           a0 = a0 + 0x100000
 34281: 01                       fallthrough
      :                          @2277
 34282: 82 78                    a1 = u64 [a0]
 34284: c9 87 09                 a2 = a0 - a1
 34287: ab 59 0f                 jump @2281 if a2 != s0
      :                          @2278
 34290: c9 68 09                 a2 = a1 - s1
 34293: 01                       fallthrough
      :                          @2279
 34294: 82 7a                    a3 = u64 [a0]
 34296: ab 8a f2                 jump @2277 if a3 != a1
      :                          @2280
 34299: 7b 79                    u64 [a0] = a2
 34301: 01                       fallthrough
      :                          @2281
 34302: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 34307: 97 78 0d                 a1 = a0 << 0xd
 34310: d3 87 07                 a0 = a0 ^ a1
 34313: 98 78 07                 a1 = a0 >> 0x7
 34316: d3 87 07                 a0 = a0 ^ a1
 34319: 97 78 11                 a1 = a0 << 0x11
 34322: d3 87 07                 a0 = a0 ^ a1
 34325: 3a 08 a0 00 03           a1 = u64 [0x300a0]
 34330: 82 19 08                 a2 = u64 [sp + 0x8]
 34333: ca 97 09                 a2 = a0 * a2
 34336: 3e 07 e0 00 03           u64 [0x300e0] = a0
 34341: d6 89 07                 a0 = a2 mulhu a1
 34344: 98 77 12                 a0 = a0 >> 0x12
 34347: 96 77 40 42 0f           a0 = a0 * 0xf4240
 34352: c9 79 09                 a2 = a2 - a0
 34355: 7b 19 80 00              u64 [sp + 0x80] = a2
 34359: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 34364: 97 78 0d                 a1 = a0 << 0xd
 34367: d3 87 07                 a0 = a0 ^ a1
 34370: 98 78 07                 a1 = a0 >> 0x7
 34373: d3 78 08                 a1 = a1 ^ a0
 34376: 97 87 11                 a0 = a1 << 0x11
 34379: d3 87 07                 a0 = a0 ^ a1
 34382: 3e 07 e0 00 03           u64 [0x300e0] = a0
 34387: 82 17 80 00              a0 = u64 [sp + 0x80]
 34391: 84 88 03                 a1 = a1 & 0x3
 34394: 95 88 02                 a1 = a1 + 0x2
 34397: 7b 18 88 00              u64 [sp + 0x88] = a1
 34401: 33 00 74 02              ra = 0x274
 34405: 33 03                    t1 = 0
 34407: 33 09 40                 a2 = 0x40
 34410: c1 89 09                 i32 a2 = a2 /u a1
 34413: 9b 99 01                 a2 = 0x1 << a2
 34416: e6 97 0a                 a3 = minu(a0, a2)
 34419: 95 a4 01                 t2 = a3 + 0x1
 34422: 83 82 01                 i32 t0 = a1 + 0x1
 34425: 33 0b ff                 a4 = 0xffffffffffffffff
 34428: 28 68 a3                 jump @799
      :                          @2282 [@dyn 314]
 34431: 7b 17 68 02              u64 [sp + 0x268] = a0
 34435: 95 17 80 00              a0 = sp + 0x80
 34439: 7b 17 50 01              u64 [sp + 0x150] = a0
 34443: 33 07 50 03              a0 = 0x350
 34447: 7b 17 58 01              u64 [sp + 0x158] = a0
 34451: 95 18 88 00              a1 = sp + 0x88
 34455: 7b 18 60 01              u64 [sp + 0x160] = a1
 34459: 7b 17 68 01              u64 [sp + 0x168] = a0
 34463: 95 18 68 02              a1 = sp + 0x268
 34467: 7b 18 70 01              u64 [sp + 0x170] = a1
 34471: 7b 17 78 01              u64 [sp + 0x178] = a0
 34475: 33 07 60 0b 01           a0 = 0x10b60
 34480: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 34484: 49 21 00 01 03           u64 [sp + 256] = 0x3
 34489: 49 21 18 01              u64 [sp + 280] = 0
 34493: 95 18 50 01              a1 = sp + 0x150
 34497: 7b 18 08 01              u64 [sp + 0x108] = a1
 34501: 49 21 10 01 03           u64 [sp + 272] = 0x3
 34506: 95 17 c8 00              a0 = sp + 0xc8
 34510: 95 18 f8 00              a1 = sp + 0xf8
 34514: 50 20 76 02 f3 98        ra = 630, jump @637
      :                          @2283 [@dyn 315]
 34520: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 34524: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 34528: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 34532: 33 07 02                 a0 = 0x2
 34535: 33 08                    a1 = 0
 34537: 33 09                    a2 = 0
 34539: 64 5a                    a3 = s0
 34541: 33 00 78 02              ra = 0x278
 34545: 0a 64                    ecalli 100 // 'log'
 34547: 01                       fallthrough
      :                          @2284 [@dyn 316]
 34548: 82 17 10                 a0 = u64 [sp + 0x10]
 34551: c8 67 07                 a0 = a0 + s1
 34554: 55 37 00 00 f0 09        jump @2286 if a0 >=u 4293918720
      :                          @2285
 34560: 28 a4 19                 jump @2553
      :                          @2286
 34563: 33 07 10 01 03           a0 = 0x30110
 34568: 95 77 00 00 10           a0 = a0 + 0x100000
 34573: 01                       fallthrough
      :                          @2287
 34574: 82 78                    a1 = u64 [a0]
 34576: c9 87 09                 a2 = a0 - a1
 34579: aa 59 06                 jump @2289 if a2 == s0
      :                          @2288
 34582: 28 8e 19                 jump @2553
      :                          @2289
 34585: c9 68 09                 a2 = a1 - s1
 34588: 01                       fallthrough
      :                          @2290
 34589: 82 7a                    a3 = u64 [a0]
 34591: ab 8a ef                 jump @2287 if a3 != a1
      :                          @2291
 34594: 7b 79                    u64 [a0] = a2
 34596: 33 0b                    a4 = 0
 34598: 01                       fallthrough
      :                          @2292
 34599: ab 8a e7                 jump @2287 if a3 != a1
      :                          @2293
 34602: 28 7a 19                 jump @2553
      :                          @2294 [@dyn 317]
 34605: 49 21 30 01              u64 [sp + 304] = 0
 34609: 49 21 28 01              u64 [sp + 296] = 0
 34613: 49 21 20 01              u64 [sp + 288] = 0
 34617: 49 21 18 01              u64 [sp + 280] = 0
 34621: 49 21 10 01              u64 [sp + 272] = 0
 34625: 49 21 08 01              u64 [sp + 264] = 0
 34629: 49 21 00 01              u64 [sp + 256] = 0
 34633: 49 21 f8 00              u64 [sp + 248] = 0
 34637: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 34642: 97 89 0d                 a2 = a1 << 0xd
 34645: d3 89 09                 a2 = a2 ^ a1
 34648: 98 9a 07                 a3 = a2 >> 0x7
 34651: 3a 08 60 00 03           a1 = u64 [0x30060]
 34656: d3 a9 09                 a2 = a2 ^ a3
 34659: 97 9a 11                 a3 = a2 << 0x11
 34662: d3 a9 09                 a2 = a2 ^ a3
 34665: ca 89 0a                 a3 = a2 * a1
 34668: 3e 09 e0 00 03           u64 [0x300e0] = a2
 34673: 14 09 f1 f0 f0 f0 f0 f0 f0 f0 a2 = 0xf0f0f0f0f0f0f0f1
 34683: d6 9a 0b                 a4 = a3 mulhu a2
 34686: 98 bc 04                 a5 = a4 >> 0x4
 34689: 84 bb f0                 a4 = a4 & 0xfffffffffffffff0
 34692: c8 cb 0b                 a4 = a4 + a5
 34695: c9 ba 0a                 a3 = a3 - a4
 34698: 7b 1a f8 00              u64 [sp + 0xf8] = a3
 34702: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34707: 97 ab 0d                 a4 = a3 << 0xd
 34710: d3 ba 0a                 a3 = a3 ^ a4
 34713: 98 ab 07                 a4 = a3 >> 0x7
 34716: d3 ba 0a                 a3 = a3 ^ a4
 34719: 97 ab 11                 a4 = a3 << 0x11
 34722: d3 ba 0a                 a3 = a3 ^ a4
 34725: ca 8a 0b                 a4 = a3 * a1
 34728: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34733: d6 9b 0a                 a3 = a4 mulhu a2
 34736: 98 ac 04                 a5 = a3 >> 0x4
 34739: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34742: c8 ca 0a                 a3 = a3 + a5
 34745: c9 ab 0b                 a4 = a4 - a3
 34748: 7b 1b 00 01              u64 [sp + 0x100] = a4
 34752: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34757: 97 ab 0d                 a4 = a3 << 0xd
 34760: d3 ba 0a                 a3 = a3 ^ a4
 34763: 98 ab 07                 a4 = a3 >> 0x7
 34766: d3 ba 0a                 a3 = a3 ^ a4
 34769: 97 ab 11                 a4 = a3 << 0x11
 34772: d3 ba 0a                 a3 = a3 ^ a4
 34775: ca 8a 0b                 a4 = a3 * a1
 34778: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34783: d6 9b 0a                 a3 = a4 mulhu a2
 34786: 98 ac 04                 a5 = a3 >> 0x4
 34789: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34792: c8 ca 0a                 a3 = a3 + a5
 34795: c9 ab 0b                 a4 = a4 - a3
 34798: 7b 1b 08 01              u64 [sp + 0x108] = a4
 34802: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34807: 97 ab 0d                 a4 = a3 << 0xd
 34810: d3 ba 0a                 a3 = a3 ^ a4
 34813: 98 ab 07                 a4 = a3 >> 0x7
 34816: d3 ba 0a                 a3 = a3 ^ a4
 34819: 97 ab 11                 a4 = a3 << 0x11
 34822: d3 ba 0a                 a3 = a3 ^ a4
 34825: ca 8a 0b                 a4 = a3 * a1
 34828: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34833: d6 9b 0a                 a3 = a4 mulhu a2
 34836: 98 ac 04                 a5 = a3 >> 0x4
 34839: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34842: c8 ca 0a                 a3 = a3 + a5
 34845: c9 ab 0b                 a4 = a4 - a3
 34848: 7b 1b 10 01              u64 [sp + 0x110] = a4
 34852: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34857: 97 ab 0d                 a4 = a3 << 0xd
 34860: d3 ba 0a                 a3 = a3 ^ a4
 34863: 98 ab 07                 a4 = a3 >> 0x7
 34866: d3 ba 0a                 a3 = a3 ^ a4
 34869: 97 ab 11                 a4 = a3 << 0x11
 34872: d3 ba 0a                 a3 = a3 ^ a4
 34875: ca 8a 0b                 a4 = a3 * a1
 34878: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34883: d6 9b 0a                 a3 = a4 mulhu a2
 34886: 98 ac 04                 a5 = a3 >> 0x4
 34889: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34892: c8 ca 0a                 a3 = a3 + a5
 34895: c9 ab 0b                 a4 = a4 - a3
 34898: 7b 1b 18 01              u64 [sp + 0x118] = a4
 34902: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34907: 97 ab 0d                 a4 = a3 << 0xd
 34910: d3 ba 0a                 a3 = a3 ^ a4
 34913: 98 ab 07                 a4 = a3 >> 0x7
 34916: d3 ba 0a                 a3 = a3 ^ a4
 34919: 97 ab 11                 a4 = a3 << 0x11
 34922: d3 ba 0a                 a3 = a3 ^ a4
 34925: ca 8a 0b                 a4 = a3 * a1
 34928: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34933: d6 9b 0a                 a3 = a4 mulhu a2
 34936: 98 ac 04                 a5 = a3 >> 0x4
 34939: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34942: c8 ca 0a                 a3 = a3 + a5
 34945: c9 ab 0b                 a4 = a4 - a3
 34948: 7b 1b 20 01              u64 [sp + 0x120] = a4
 34952: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34957: 97 ab 0d                 a4 = a3 << 0xd
 34960: d3 ba 0a                 a3 = a3 ^ a4
 34963: 98 ab 07                 a4 = a3 >> 0x7
 34966: d3 ba 0a                 a3 = a3 ^ a4
 34969: 97 ab 11                 a4 = a3 << 0x11
 34972: d3 ba 0a                 a3 = a3 ^ a4
 34975: ca 8a 0b                 a4 = a3 * a1
 34978: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34983: d6 9b 0a                 a3 = a4 mulhu a2
 34986: 98 ac 04                 a5 = a3 >> 0x4
 34989: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34992: c8 ca 0a                 a3 = a3 + a5
 34995: c9 ab 0b                 a4 = a4 - a3
 34998: 7b 1b 28 01              u64 [sp + 0x128] = a4
 35002: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 35007: 97 ab 0d                 a4 = a3 << 0xd
 35010: d3 ba 0a                 a3 = a3 ^ a4
 35013: 98 ab 07                 a4 = a3 >> 0x7
 35016: d3 ba 0a                 a3 = a3 ^ a4
 35019: 97 ab 11                 a4 = a3 << 0x11
 35022: d3 ba 0a                 a3 = a3 ^ a4
 35025: ca 8a 08                 a1 = a3 * a1
 35028: 3e 0a e0 00 03           u64 [0x300e0] = a3
 35033: d6 98 07                 a0 = a1 mulhu a2
 35036: 98 79 04                 a2 = a0 >> 0x4
 35039: 84 77 f0                 a0 = a0 & 0xfffffffffffffff0
 35042: c8 97 07                 a0 = a0 + a2
 35045: c9 78 08                 a1 = a1 - a0
 35048: 7b 18 30 01              u64 [sp + 0x130] = a1
 35052: 95 15 50 01              s0 = sp + 0x150
 35056: 95 17 50 01              a0 = sp + 0x150
 35060: 95 18 f8 00              a1 = sp + 0xf8
 35064: 95 16 f8 00              s1 = sp + 0xf8
 35068: 33 00 7c 02              ra = 0x27c
 35072: 95 11 60 ff              sp = sp + 0xffffffffffffff60
 35076: 7b 10 98 00              u64 [sp + 0x98] = ra
 35080: 7b 15 90 00              u64 [sp + 0x90] = s0
 35084: 7b 16 88 00              u64 [sp + 0x88] = s1
 35088: 7b 17                    u64 [sp] = a0
 35090: 33 00                    ra = 0
 35092: 82 87                    a0 = u64 [a1]
 35094: 14 0a f1 f0 f0 f0 f0 f0 f0 f0 a3 = 0xf0f0f0f0f0f0f0f1
 35104: d6 a7 09                 a2 = a0 mulhu a3
 35107: 98 9b 04                 a4 = a2 >> 0x4
 35110: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 35113: c8 b9 09                 a2 = a2 + a4
 35116: c9 97 07                 a0 = a0 - a2
 35119: 82 89 08                 a2 = u64 [a1 + 0x8]
 35122: 82 8c 10                 a5 = u64 [a1 + 0x10]
 35125: 82 86 18                 s1 = u64 [a1 + 0x18]
 35128: 82 85 20                 s0 = u64 [a1 + 0x20]
 35131: 7b 17 40                 u64 [sp + 0x40] = a0
 35134: 7b 19 38                 u64 [sp + 0x38] = a2
 35137: c8 97 07                 a0 = a0 + a2
 35140: d6 a7 09                 a2 = a0 mulhu a3
 35143: 98 9b 04                 a4 = a2 >> 0x4
 35146: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 35149: c8 b9 09                 a2 = a2 + a4
 35152: 7b 1c 30                 u64 [sp + 0x30] = a5
 35155: c8 c7 07                 a0 = a0 + a5
 35158: c9 97 07                 a0 = a0 - a2
 35161: d6 a7 09                 a2 = a0 mulhu a3
 35164: 98 9b 04                 a4 = a2 >> 0x4
 35167: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 35170: c8 b9 09                 a2 = a2 + a4
 35173: 7b 16 28                 u64 [sp + 0x28] = s1
 35176: c8 67 07                 a0 = a0 + s1
 35179: c9 97 07                 a0 = a0 - a2
 35182: d6 a7 09                 a2 = a0 mulhu a3
 35185: 98 9b 04                 a4 = a2 >> 0x4
 35188: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 35191: c8 b9 09                 a2 = a2 + a4
 35194: 82 8c 28                 a5 = u64 [a1 + 0x28]
 35197: 7b 15 20                 u64 [sp + 0x20] = s0
 35200: c8 57 07                 a0 = a0 + s0
 35203: c9 97 07                 a0 = a0 - a2
 35206: d6 a7 09                 a2 = a0 mulhu a3
 35209: 98 9b 04                 a4 = a2 >> 0x4
 35212: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 35215: c8 b9 09                 a2 = a2 + a4
 35218: 7b 1c 18                 u64 [sp + 0x18] = a5
 35221: c8 c7 07                 a0 = a0 + a5
 35224: c9 97 07                 a0 = a0 - a2
 35227: 82 8c 30                 a5 = u64 [a1 + 0x30]
 35230: d6 a7 09                 a2 = a0 mulhu a3
 35233: 98 9b 04                 a4 = a2 >> 0x4
 35236: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 35239: c8 b9 09                 a2 = a2 + a4
 35242: 7b 1c 10                 u64 [sp + 0x10] = a5
 35245: c8 c7 07                 a0 = a0 + a5
 35248: c9 97 07                 a0 = a0 - a2
 35251: 7b 17 08                 u64 [sp + 0x8] = a0
 35254: 49 21 80 00              u64 [sp + 128] = 0
 35258: 49 11 78                 u64 [sp + 120] = 0
 35261: 49 11 70                 u64 [sp + 112] = 0
 35264: 49 11 68                 u64 [sp + 104] = 0
 35267: 49 11 60                 u64 [sp + 96] = 0
 35270: 49 11 58                 u64 [sp + 88] = 0
 35273: 49 11 50                 u64 [sp + 80] = 0
 35276: 49 11 48                 u64 [sp + 72] = 0
 35279: 82 88 38                 a1 = u64 [a1 + 0x38]
 35282: 28 09 ab                 jump @1033
      :                          @2295 [@dyn 318]
 35285: 7b 16 90 00              u64 [sp + 0x90] = s1
 35289: 33 07 80 00              a0 = 0x80
 35293: 7b 17 98 00              u64 [sp + 0x98] = a0
 35297: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 35301: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 35305: 33 07 90 0b 01           a0 = 0x10b90
 35310: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 35314: 49 21 d0 00 02           u64 [sp + 208] = 0x2
 35319: 49 21 e8 00              u64 [sp + 232] = 0
 35323: 95 18 90 00              a1 = sp + 0x90
 35327: 7b 18 d8 00              u64 [sp + 0xd8] = a1
 35331: 49 21 e0 00 02           u64 [sp + 224] = 0x2
 35336: 95 17 b0 00              a0 = sp + 0xb0
 35340: 95 18 c8 00              a1 = sp + 0xc8
 35344: 50 20 7e 02 b5 95        ra = 638, jump @637
      :                          @2296 [@dyn 319]
 35350: 82 15 b8 00              s0 = u64 [sp + 0xb8]
 35354: 82 1b c0 00              a4 = u64 [sp + 0xc0]
 35358: 82 16 b0 00              s1 = u64 [sp + 0xb0]
 35362: 33 07 02                 a0 = 0x2
 35365: 33 08                    a1 = 0
 35367: 33 09                    a2 = 0
 35369: 64 5a                    a3 = s0
 35371: 33 00 80 02              ra = 0x280
 35375: 0a 64                    ecalli 100 // 'log'
 35377: 01                       fallthrough
      :                          @2297 [@dyn 320]
 35378: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 35383: 55 38 00 00 f0 09        jump @2299 if a1 >=u 4293918720
      :                          @2298
 35389: 28 67 16                 jump @2553
      :                          @2299
 35392: 33 07 10 01 03           a0 = 0x30110
 35397: 95 77 00 00 10           a0 = a0 + 0x100000
 35402: 01                       fallthrough
      :                          @2300
 35403: 82 78                    a1 = u64 [a0]
 35405: c9 87 09                 a2 = a0 - a1
 35408: aa 59 06                 jump @2302 if a2 == s0
      :                          @2301
 35411: 28 51 16                 jump @2553
      :                          @2302
 35414: c9 68 09                 a2 = a1 - s1
 35417: 01                       fallthrough
      :                          @2303
 35418: 82 7a                    a3 = u64 [a0]
 35420: ab 8a ef                 jump @2300 if a3 != a1
      :                          @2304
 35423: 7b 79                    u64 [a0] = a2
 35425: 33 0b                    a4 = 0
 35427: 01                       fallthrough
      :                          @2305
 35428: ab 8a e7                 jump @2300 if a3 != a1
      :                          @2306
 35431: 28 3d 16                 jump @2553
      :                          @2307 [@dyn 321]
 35434: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 35439: 97 89 0d                 a2 = a1 << 0xd
 35442: d3 98 08                 a1 = a1 ^ a2
 35445: 98 89 07                 a2 = a1 >> 0x7
 35448: d3 98 08                 a1 = a1 ^ a2
 35451: 97 89 11                 a2 = a1 << 0x11
 35454: d3 98 08                 a1 = a1 ^ a2
 35457: 3a 09 60 00 03           a2 = u64 [0x30060]
 35462: 3a 0a 88 00 03           a3 = u64 [0x30088]
 35467: 3e 08 e0 00 03           u64 [0x300e0] = a1
 35472: ca 98 07                 a0 = a1 * a2
 35475: d6 a7 08                 a1 = a0 mulhu a3
 35478: 98 88 0c                 a1 = a1 >> 0xc
 35481: 96 88 41 0d 03           a1 = a1 * 0x30d41
 35486: 95 77 60 79 fe           a0 = a0 + 0xfffffffffffe7960
 35491: bf 87 07                 i32 a0 = a0 - a1
 35494: 7a 17 68 02              u32 [sp + 0x268] = a0
 35498: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 35501: 7b 15 08                 u64 [sp + 0x8] = s0
 35504: 7b 16                    u64 [sp] = s1
 35506: 83 78                    i32 a1 = a0 + 0
 35508: 89 88                    a1 = a1 <s 0
 35510: 33 0a 0f c9 00           a3 = 0xc90f
 35515: 93 8a f1 36 ff           a3 = 0xffffffffffff36f1 if a1 == 0
 35520: 33 0b 8b 64 ff           a4 = 0xffffffffffff648b
 35525: 93 8b 75 9b 00           a4 = 0x9b75 if a1 == 0
 35530: be 7a 02                 i32 t0 = a3 + a0
 35533: 99 b8 01                 a1 = a4 >>a 0x1
 35536: 89 2a                    a3 = t0 <s 0
 35538: 33 07 b1 76              a0 = 0x76b1
 35542: 93 a7 4f 89              a0 = 0xffffffffffff894f if a3 == 0
 35546: 9a 8c                    a5 = -a1
 35548: db a8 0c                 a5 = a1 if a3 != 0
 35551: 83 c3 75 9b 00           i32 t1 = a5 + 0x9b75
 35556: 33 0c 46 b2              a5 = 0xffffffffffffb246
 35560: 93 ac ba 4d              a5 = 0x4dba if a3 == 0
 35564: c8 cb 0b                 a4 = a4 + a5
 35567: be 72 04                 i32 t2 = t0 + a0
 35570: 8b 38 02                 i32 a1 = t1 >> 0x2
 35573: 99 ba 02                 a3 = a4 >>a 0x2
 35576: 89 4c                    a5 = t2 <s 0
 35578: 33 09 b6 3e              a2 = 0x3eb6
 35582: 93 c9 4a c1              a2 = 0xffffffffffffc14a if a5 == 0
 35586: 9a a7                    a0 = -a3
 35588: db ca 07                 a0 = a3 if a5 != 0
 35591: be 73 02                 i32 t0 = t1 + a0
 35594: 9a 8a                    a3 = -a1
 35596: da c8 0a                 a3 = a1 if a5 == 0
 35599: c8 ba 0a                 a3 = a3 + a4
 35602: be 94 04                 i32 t2 = t2 + a2
 35605: 8b 29 03                 i32 a2 = t0 >> 0x3
 35608: 99 ab 03                 a4 = a3 >>a 0x3
 35611: 89 4c                    a5 = t2 <s 0
 35613: 33 07 d9 1f              a0 = 0x1fd9
 35617: 93 c7 27 e0              a0 = 0xffffffffffffe027 if a5 == 0
 35621: 9a b8                    a1 = -a4
 35623: db cb 08                 a1 = a4 if a5 != 0
 35626: c8 28 08                 a1 = a1 + t0
 35629: 9a 9b                    a4 = -a2
 35631: da c9 0b                 a4 = a2 if a5 == 0
 35634: be ba 0a                 i32 a3 = a3 + a4
 35637: be 74 06                 i32 s1 = t2 + a0
 35640: 8c 89 04                 i32 a2 = a1 >>a 0x4
 35643: 8c ab 04                 i32 a4 = a3 >>a 0x4
 35646: 89 6c                    a5 = s1 <s 0
 35648: 33 02 00 f0              t0 = 0xfffffffffffff000
 35652: 33 03 ff ef              t1 = 0xffffffffffffefff
 35656: 33 04 00 10              t2 = 0x1000
 35660: 33 05 01 10              s0 = 0x1001
 35664: da c3 05                 s0 = t1 if a5 == 0
 35667: 9a b7                    a0 = -a4
 35669: db cb 07                 a0 = a4 if a5 != 0
 35672: c8 87 07                 a0 = a0 + a1
 35675: 9a 98                    a1 = -a2
 35677: da c9 08                 a1 = a2 if a5 == 0
 35680: be a8 08                 i32 a1 = a1 + a3
 35683: be 65 05                 i32 s0 = s0 + s1
 35686: 8c 79 05                 i32 a2 = a0 >>a 0x5
 35689: 8c 8a 05                 i32 a3 = a1 >>a 0x5
 35692: 89 5b                    a4 = s0 <s 0
 35694: 33 06 01 08              s1 = 0x801
 35698: 93 b6 ff f7              s1 = 0xfffffffffffff7ff if a4 == 0
 35702: 9a ac                    a5 = -a3
 35704: db ba 0c                 a5 = a3 if a4 != 0
 35707: c8 c7 07                 a0 = a0 + a5
 35710: 9a 9a                    a3 = -a2
 35712: da b9 0a                 a3 = a2 if a4 == 0
 35715: be a8 08                 i32 a1 = a1 + a3
 35718: be 65 05                 i32 s0 = s0 + s1
 35721: 8c 79 06                 i32 a2 = a0 >>a 0x6
 35724: 8c 8a 06                 i32 a3 = a1 >>a 0x6
 35727: 89 5b                    a4 = s0 <s 0
 35729: 33 06 01 04              s1 = 0x401
 35733: 93 b6 ff fb              s1 = 0xfffffffffffffbff if a4 == 0
 35737: 9a ac                    a5 = -a3
 35739: db ba 0c                 a5 = a3 if a4 != 0
 35742: c8 c7 07                 a0 = a0 + a5
 35745: 9a 9a                    a3 = -a2
 35747: da b9 0a                 a3 = a2 if a4 == 0
 35750: be a8 08                 i32 a1 = a1 + a3
 35753: be 65 05                 i32 s0 = s0 + s1
 35756: 8c 79 07                 i32 a2 = a0 >>a 0x7
 35759: 8c 8a 07                 i32 a3 = a1 >>a 0x7
 35762: 89 5b                    a4 = s0 <s 0
 35764: 33 06 00 02              s1 = 0x200
 35768: 93 b6 00 fe              s1 = 0xfffffffffffffe00 if a4 == 0
 35772: 9a ac                    a5 = -a3
 35774: db ba 0c                 a5 = a3 if a4 != 0
 35777: c8 c7 07                 a0 = a0 + a5
 35780: 9a 9a                    a3 = -a2
 35782: da b9 0a                 a3 = a2 if a4 == 0
 35785: be a8 08                 i32 a1 = a1 + a3
 35788: be 65 05                 i32 s0 = s0 + s1
 35791: 8c 79 08                 i32 a2 = a0 >>a 0x8
 35794: 8c 8a 08                 i32 a3 = a1 >>a 0x8
 35797: 89 5b                    a4 = s0 <s 0
 35799: 33 06 00 01              s1 = 0x100
 35803: 93 b6 00 ff              s1 = 0xffffffffffffff00 if a4 == 0
 35807: 9a ac                    a5 = -a3
 35809: db ba 0c                 a5 = a3 if a4 != 0
 35812: c8 c7 07                 a0 = a0 + a5
 35815: 9a 9a                    a3 = -a2
 35817: da b9 0a                 a3 = a2 if a4 == 0
 35820: be a8 08                 i32 a1 = a1 + a3
 35823: be 65 05                 i32 s0 = s0 + s1
 35826: 8c 79 09                 i32 a2 = a0 >>a 0x9
 35829: 8c 8a 09                 i32 a3 = a1 >>a 0x9
 35832: 89 5b                    a4 = s0 <s 0
 35834: 33 06 80 00              s1 = 0x80
 35838: 93 b6 80                 s1 = 0xffffffffffffff80 if a4 == 0
 35841: 9a ac                    a5 = -a3
 35843: db ba 0c                 a5 = a3 if a4 != 0
 35846: c8 c7 07                 a0 = a0 + a5
 35849: 9a 9a                    a3 = -a2
 35851: da b9 0a                 a3 = a2 if a4 == 0
 35854: be a8 08                 i32 a1 = a1 + a3
 35857: be 65 05                 i32 s0 = s0 + s1
 35860: 8c 79 0a                 i32 a2 = a0 >>a 0xa
 35863: 8c 8a 0a                 i32 a3 = a1 >>a 0xa
 35866: 89 5b                    a4 = s0 <s 0
 35868: 33 06 40                 s1 = 0x40
 35871: 93 b6 c0                 s1 = 0xffffffffffffffc0 if a4 == 0
 35874: 9a ac                    a5 = -a3
 35876: db ba 0c                 a5 = a3 if a4 != 0
 35879: c8 c7 07                 a0 = a0 + a5
 35882: 9a 9a                    a3 = -a2
 35884: da b9 0a                 a3 = a2 if a4 == 0
 35887: be a8 08                 i32 a1 = a1 + a3
 35890: be 65 05                 i32 s0 = s0 + s1
 35893: 8c 79 0b                 i32 a2 = a0 >>a 0xb
 35896: 8c 8a 0b                 i32 a3 = a1 >>a 0xb
 35899: 89 5b                    a4 = s0 <s 0
 35901: 33 06 20                 s1 = 0x20
 35904: 93 b6 e0                 s1 = 0xffffffffffffffe0 if a4 == 0
 35907: 9a ac                    a5 = -a3
 35909: db ba 0c                 a5 = a3 if a4 != 0
 35912: c8 c7 07                 a0 = a0 + a5
 35915: 9a 9a                    a3 = -a2
 35917: da b9 0a                 a3 = a2 if a4 == 0
 35920: be a8 08                 i32 a1 = a1 + a3
 35923: be 65 05                 i32 s0 = s0 + s1
 35926: 8c 79 0c                 i32 a2 = a0 >>a 0xc
 35929: 8c 8a 0c                 i32 a3 = a1 >>a 0xc
 35932: 89 5b                    a4 = s0 <s 0
 35934: 33 06 10                 s1 = 0x10
 35937: 93 b6 f0                 s1 = 0xfffffffffffffff0 if a4 == 0
 35940: 9a ac                    a5 = -a3
 35942: db ba 0c                 a5 = a3 if a4 != 0
 35945: c8 c7 07                 a0 = a0 + a5
 35948: 9a 9a                    a3 = -a2
 35950: da b9 0a                 a3 = a2 if a4 == 0
 35953: be a8 08                 i32 a1 = a1 + a3
 35956: be 65 05                 i32 s0 = s0 + s1
 35959: 8c 79 0d                 i32 a2 = a0 >>a 0xd
 35962: 8c 8a 0d                 i32 a3 = a1 >>a 0xd
 35965: 89 5b                    a4 = s0 <s 0
 35967: 33 06 08                 s1 = 0x8
 35970: 93 b6 f8                 s1 = 0xfffffffffffffff8 if a4 == 0
 35973: 9a ac                    a5 = -a3
 35975: db ba 0c                 a5 = a3 if a4 != 0
 35978: c8 c7 07                 a0 = a0 + a5
 35981: 9a 9a                    a3 = -a2
 35983: da b9 0a                 a3 = a2 if a4 == 0
 35986: be a8 08                 i32 a1 = a1 + a3
 35989: be 65 05                 i32 s0 = s0 + s1
 35992: 8c 79 0e                 i32 a2 = a0 >>a 0xe
 35995: 8c 8a 0e                 i32 a3 = a1 >>a 0xe
 35998: 89 5b                    a4 = s0 <s 0
 36000: 33 06 04                 s1 = 0x4
 36003: 93 b6 fc                 s1 = 0xfffffffffffffffc if a4 == 0
 36006: 9a ac                    a5 = -a3
 36008: db ba 0c                 a5 = a3 if a4 != 0
 36011: c8 c7 07                 a0 = a0 + a5
 36014: 9a 9a                    a3 = -a2
 36016: da b9 0a                 a3 = a2 if a4 == 0
 36019: be a8 08                 i32 a1 = a1 + a3
 36022: be 65 05                 i32 s0 = s0 + s1
 36025: 8c 79 0f                 i32 a2 = a0 >>a 0xf
 36028: 8c 8a 0f                 i32 a3 = a1 >>a 0xf
 36031: 89 5b                    a4 = s0 <s 0
 36033: 9a ac                    a5 = -a3
 36035: db ba 0c                 a5 = a3 if a4 != 0
 36038: be c7 07                 i32 a0 = a0 + a5
 36041: 9a 9a                    a3 = -a2
 36043: da b9 0a                 a3 = a2 if a4 == 0
 36046: be a8 08                 i32 a1 = a1 + a3
 36049: 82 15 08                 s0 = u64 [sp + 0x8]
 36052: 82 16                    s1 = u64 [sp]
 36054: 95 11 10                 sp = sp + 0x10
 36057: 7a 17 b0 00              u32 [sp + 0xb0] = a0
 36061: 7a 18 90 00              u32 [sp + 0x90] = a1
 36065: 95 17 68 02              a0 = sp + 0x268
 36069: 7b 17 50 01              u64 [sp + 0x150] = a0
 36073: 33 07 a6 03              a0 = 0x3a6
 36077: 7b 17 58 01              u64 [sp + 0x158] = a0
 36081: 95 18 b0 00              a1 = sp + 0xb0
 36085: 7b 18 60 01              u64 [sp + 0x160] = a1
 36089: 7b 17 68 01              u64 [sp + 0x168] = a0
 36093: 95 18 90 00              a1 = sp + 0x90
 36097: 7b 18 70 01              u64 [sp + 0x170] = a1
 36101: 7b 17 78 01              u64 [sp + 0x178] = a0
 36105: 33 07 c8 0b 01           a0 = 0x10bc8
 36110: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 36114: 49 21 00 01 03           u64 [sp + 256] = 0x3
 36119: 49 21 18 01              u64 [sp + 280] = 0
 36123: 95 18 50 01              a1 = sp + 0x150
 36127: 7b 18 08 01              u64 [sp + 0x108] = a1
 36131: 49 21 10 01 03           u64 [sp + 272] = 0x3
 36136: 95 17 c8 00              a0 = sp + 0xc8
 36140: 95 18 f8 00              a1 = sp + 0xf8
 36144: 50 20 84 02 95 92        ra = 644, jump @637
      :                          @2308 [@dyn 322]
 36150: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 36154: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 36158: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 36162: 33 07 02                 a0 = 0x2
 36165: 33 08                    a1 = 0
 36167: 33 09                    a2 = 0
 36169: 64 5a                    a3 = s0
 36171: 33 00 86 02              ra = 0x286
 36175: 0a 64                    ecalli 100 // 'log'
 36177: 01                       fallthrough
      :                          @2309 [@dyn 323]
 36178: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 36183: 55 38 00 00 f0 09        jump @2311 if a1 >=u 4293918720
      :                          @2310
 36189: 28 47 13                 jump @2553
      :                          @2311
 36192: 33 07 10 01 03           a0 = 0x30110
 36197: 95 77 00 00 10           a0 = a0 + 0x100000
 36202: 01                       fallthrough
      :                          @2312
 36203: 82 78                    a1 = u64 [a0]
 36205: c9 87 09                 a2 = a0 - a1
 36208: aa 59 06                 jump @2314 if a2 == s0
      :                          @2313
 36211: 28 31 13                 jump @2553
      :                          @2314
 36214: c9 68 09                 a2 = a1 - s1
 36217: 01                       fallthrough
      :                          @2315
 36218: 82 7a                    a3 = u64 [a0]
 36220: ab 8a ef                 jump @2312 if a3 != a1
      :                          @2316
 36223: 7b 79                    u64 [a0] = a2
 36225: 33 0b                    a4 = 0
 36227: 01                       fallthrough
      :                          @2317
 36228: ab 8a e7                 jump @2312 if a3 != a1
      :                          @2318
 36231: 28 1d 13                 jump @2553
      :                          @2319 [@dyn 324]
 36234: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 36239: 49 11 10 ff ff ef        u64 [sp + 16] = 0xffffffffffefffff
 36245: 97 78 0d                 a1 = a0 << 0xd
 36248: d3 87 07                 a0 = a0 ^ a1
 36251: 98 78 07                 a1 = a0 >> 0x7
 36254: d3 87 07                 a0 = a0 ^ a1
 36257: 97 78 11                 a1 = a0 << 0x11
 36260: d3 87 07                 a0 = a0 ^ a1
 36263: 3e 07 e0 00 03           u64 [0x300e0] = a0
 36268: 87 77 79 c8 75           i32 a0 = a0 * 0x75c879
 36273: 83 77 5f f3 6e 3c        i32 a0 = a0 + 0x3c6ef35f
 36279: 7a 17 90 00              u32 [sp + 0x90] = a0
 36283: 95 17 90 00              a0 = sp + 0x90
 36287: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 36291: 33 07 86 03              a0 = 0x386
 36295: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 36299: 33 07 08 0c 01           a0 = 0x10c08
 36304: 7b 17 50 01              u64 [sp + 0x150] = a0
 36308: 49 21 58 01 01           u64 [sp + 344] = 0x1
 36313: 49 21 70 01              u64 [sp + 368] = 0
 36317: 95 18 c8 00              a1 = sp + 0xc8
 36321: 7b 18 60 01              u64 [sp + 0x160] = a1
 36325: 49 21 68 01 01           u64 [sp + 360] = 0x1
 36330: 95 17 f8 00              a0 = sp + 0xf8
 36334: 95 18 50 01              a1 = sp + 0x150
 36338: 50 20 8a 02 d3 91        ra = 650, jump @637
      :                          @2320 [@dyn 325]
 36344: 82 15 00 01              s0 = u64 [sp + 0x100]
 36348: 82 1b 08 01              a4 = u64 [sp + 0x108]
 36352: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 36356: 33 07 02                 a0 = 0x2
 36359: 33 08                    a1 = 0
 36361: 33 09                    a2 = 0
 36363: 64 5a                    a3 = s0
 36365: 33 00 8c 02              ra = 0x28c
 36369: 0a 64                    ecalli 100 // 'log'
 36371: 01                       fallthrough
      :                          @2321 [@dyn 326]
 36372: 82 17 10                 a0 = u64 [sp + 0x10]
 36375: c8 67 07                 a0 = a0 + s1
 36378: 53 37 00 00 f0 25        jump @2327 if a0 <u 4293918720
      :                          @2322
 36384: 33 07 10 01 03           a0 = 0x30110
 36389: 95 77 00 00 10           a0 = a0 + 0x100000
 36394: 01                       fallthrough
      :                          @2323
 36395: 82 78                    a1 = u64 [a0]
 36397: c9 87 09                 a2 = a0 - a1
 36400: ab 59 0f                 jump @2327 if a2 != s0
      :                          @2324
 36403: c9 68 09                 a2 = a1 - s1
 36406: 01                       fallthrough
      :                          @2325
 36407: 82 7a                    a3 = u64 [a0]
 36409: ab 8a f2                 jump @2323 if a3 != a1
      :                          @2326
 36412: 7b 79                    u64 [a0] = a2
 36414: 01                       fallthrough
      :                          @2327
 36415: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 36420: 3a 0a 60 00 03           a3 = u64 [0x30060]
 36425: 97 78 0d                 a1 = a0 << 0xd
 36428: d3 87 07                 a0 = a0 ^ a1
 36431: 98 78 07                 a1 = a0 >> 0x7
 36434: d3 87 07                 a0 = a0 ^ a1
 36437: 97 78 11                 a1 = a0 << 0x11
 36440: d3 87 07                 a0 = a0 ^ a1
 36443: 3a 08 80 00 03           a1 = u64 [0x30080]
 36448: 3e 07 e0 00 03           u64 [0x300e0] = a0
 36453: 7b 1a 08                 u64 [sp + 0x8] = a3
 36456: ca a7 09                 a2 = a0 * a3
 36459: ca 87 07                 a0 = a0 * a1
 36462: d3 97 07                 a0 = a0 ^ a2
 36465: 98 78 07                 a1 = a0 >> 0x7
 36468: d3 87 07                 a0 = a0 ^ a1
 36471: 97 78 11                 a1 = a0 << 0x11
 36474: d3 87 07                 a0 = a0 ^ a1
 36477: 7b 17 90 00              u64 [sp + 0x90] = a0
 36481: 95 17 90 00              a0 = sp + 0x90
 36485: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 36489: 33 07 50 03              a0 = 0x350
 36493: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 36497: 33 07 28 0c 01           a0 = 0x10c28
 36502: 7b 17 50 01              u64 [sp + 0x150] = a0
 36506: 49 21 58 01 01           u64 [sp + 344] = 0x1
 36511: 49 21 70 01              u64 [sp + 368] = 0
 36515: 95 18 c8 00              a1 = sp + 0xc8
 36519: 7b 18 60 01              u64 [sp + 0x160] = a1
 36523: 49 21 68 01 01           u64 [sp + 360] = 0x1
 36528: 95 17 f8 00              a0 = sp + 0xf8
 36532: 95 18 50 01              a1 = sp + 0x150
 36536: 50 20 8e 02 0d 91        ra = 654, jump @637
      :                          @2328 [@dyn 327]
 36542: 82 15 00 01              s0 = u64 [sp + 0x100]
 36546: 82 1b 08 01              a4 = u64 [sp + 0x108]
 36550: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 36554: 33 07 02                 a0 = 0x2
 36557: 33 08                    a1 = 0
 36559: 33 09                    a2 = 0
 36561: 64 5a                    a3 = s0
 36563: 33 00 90 02              ra = 0x290
 36567: 0a 64                    ecalli 100 // 'log'
 36569: 01                       fallthrough
      :                          @2329 [@dyn 328]
 36570: 82 17 10                 a0 = u64 [sp + 0x10]
 36573: c8 67 07                 a0 = a0 + s1
 36576: 53 37 00 00 f0 25        jump @2335 if a0 <u 4293918720
      :                          @2330
 36582: 33 07 10 01 03           a0 = 0x30110
 36587: 95 77 00 00 10           a0 = a0 + 0x100000
 36592: 01                       fallthrough
      :                          @2331
 36593: 82 78                    a1 = u64 [a0]
 36595: c9 87 09                 a2 = a0 - a1
 36598: ab 59 0f                 jump @2335 if a2 != s0
      :                          @2332
 36601: c9 68 09                 a2 = a1 - s1
 36604: 01                       fallthrough
      :                          @2333
 36605: 82 7a                    a3 = u64 [a0]
 36607: ab 8a f2                 jump @2331 if a3 != a1
      :                          @2334
 36610: 7b 79                    u64 [a0] = a2
 36612: 01                       fallthrough
      :                          @2335
 36613: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 36618: 97 78 0d                 a1 = a0 << 0xd
 36621: d3 87 07                 a0 = a0 ^ a1
 36624: 98 78 07                 a1 = a0 >> 0x7
 36627: d3 87 07                 a0 = a0 ^ a1
 36630: 97 78 11                 a1 = a0 << 0x11
 36633: d3 87 07                 a0 = a0 ^ a1
 36636: 3e 07 e0 00 03           u64 [0x300e0] = a0
 36641: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 36646: 82 19 08                 a2 = u64 [sp + 0x8]
 36649: ca 97 07                 a0 = a0 * a2
 36652: 97 89 0d                 a2 = a1 << 0xd
 36655: d3 98 08                 a1 = a1 ^ a2
 36658: 98 89 07                 a2 = a1 >> 0x7
 36661: d3 98 08                 a1 = a1 ^ a2
 36664: 97 89 11                 a2 = a1 << 0x11
 36667: d3 98 08                 a1 = a1 ^ a2
 36670: 3e 08 e0 00 03           u64 [0x300e0] = a1
 36675: 98 78 2d                 a1 = a0 >> 0x2d
 36678: 98 79 1b                 a2 = a0 >> 0x1b
 36681: d3 98 08                 a1 = a1 ^ a2
 36684: 98 77 3b                 a0 = a0 >> 0x3b
 36687: df 78 07                 i32 a0 = a1 >>r a0
 36690: 7a 17 90 00              u32 [sp + 0x90] = a0
 36694: 95 17 90 00              a0 = sp + 0x90
 36698: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 36702: 33 07 86 03              a0 = 0x386
 36706: 7b 17 08                 u64 [sp + 0x8] = a0
 36709: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 36713: 33 07 48 0c 01           a0 = 0x10c48
 36718: 7b 17 50 01              u64 [sp + 0x150] = a0
 36722: 49 21 58 01 01           u64 [sp + 344] = 0x1
 36727: 49 21 70 01              u64 [sp + 368] = 0
 36731: 95 18 c8 00              a1 = sp + 0xc8
 36735: 7b 18 60 01              u64 [sp + 0x160] = a1
 36739: 49 21 68 01 01           u64 [sp + 360] = 0x1
 36744: 95 17 f8 00              a0 = sp + 0xf8
 36748: 95 18 50 01              a1 = sp + 0x150
 36752: 50 20 92 02 35 90        ra = 658, jump @637
      :                          @2336 [@dyn 329]
 36758: 82 15 00 01              s0 = u64 [sp + 0x100]
 36762: 82 1b 08 01              a4 = u64 [sp + 0x108]
 36766: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 36770: 33 07 02                 a0 = 0x2
 36773: 33 08                    a1 = 0
 36775: 33 09                    a2 = 0
 36777: 64 5a                    a3 = s0
 36779: 33 00 94 02              ra = 0x294
 36783: 0a 64                    ecalli 100 // 'log'
 36785: 01                       fallthrough
      :                          @2337 [@dyn 330]
 36786: 82 17 10                 a0 = u64 [sp + 0x10]
 36789: c8 67 07                 a0 = a0 + s1
 36792: 53 37 00 00 f0 25        jump @2343 if a0 <u 4293918720
      :                          @2338
 36798: 33 07 10 01 03           a0 = 0x30110
 36803: 95 77 00 00 10           a0 = a0 + 0x100000
 36808: 01                       fallthrough
      :                          @2339
 36809: 82 78                    a1 = u64 [a0]
 36811: c9 87 09                 a2 = a0 - a1
 36814: ab 59 0f                 jump @2343 if a2 != s0
      :                          @2340
 36817: c9 68 09                 a2 = a1 - s1
 36820: 01                       fallthrough
      :                          @2341
 36821: 82 7a                    a3 = u64 [a0]
 36823: ab 8a f2                 jump @2339 if a3 != a1
      :                          @2342
 36826: 7b 79                    u64 [a0] = a2
 36828: 01                       fallthrough
      :                          @2343
 36829: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 36834: 97 78 0d                 a1 = a0 << 0xd
 36837: d3 87 07                 a0 = a0 ^ a1
 36840: 98 78 07                 a1 = a0 >> 0x7
 36843: d3 87 07                 a0 = a0 ^ a1
 36846: 97 78 11                 a1 = a0 << 0x11
 36849: d3 87 07                 a0 = a0 ^ a1
 36852: 3e 07 e0 00 03           u64 [0x300e0] = a0
 36857: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 36862: 97 89 0d                 a2 = a1 << 0xd
 36865: d3 98 08                 a1 = a1 ^ a2
 36868: 98 89 07                 a2 = a1 >> 0x7
 36871: d3 98 08                 a1 = a1 ^ a2
 36874: 97 89 11                 a2 = a1 << 0x11
 36877: d3 98 08                 a1 = a1 ^ a2
 36880: 87 89 1d dd 6c 4f        i32 a2 = a1 * 0x4f6cdd1d
 36886: 3e 08 e0 00 03           u64 [0x300e0] = a1
 36891: 96 77 fd 79 6d ef        a0 = a0 * 0xffffffffef6d79fd
 36897: c8 97 07                 a0 = a0 + a2
 36900: 7a 17 90 00              u32 [sp + 0x90] = a0
 36904: 95 17 90 00              a0 = sp + 0x90
 36908: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 36912: 82 17 08                 a0 = u64 [sp + 0x8]
 36915: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 36919: 33 07 68 0c 01           a0 = 0x10c68
 36924: 7b 17 50 01              u64 [sp + 0x150] = a0
 36928: 49 21 58 01 01           u64 [sp + 344] = 0x1
 36933: 49 21 70 01              u64 [sp + 368] = 0
 36937: 95 18 c8 00              a1 = sp + 0xc8
 36941: 7b 18 60 01              u64 [sp + 0x160] = a1
 36945: 49 21 68 01 01           u64 [sp + 360] = 0x1
 36950: 95 17 f8 00              a0 = sp + 0xf8
 36954: 95 18 50 01              a1 = sp + 0x150
 36958: 50 20 96 02 67 8f        ra = 662, jump @637
      :                          @2344 [@dyn 331]
 36964: 82 15 00 01              s0 = u64 [sp + 0x100]
 36968: 82 1b 08 01              a4 = u64 [sp + 0x108]
 36972: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 36976: 33 07 02                 a0 = 0x2
 36979: 33 08                    a1 = 0
 36981: 33 09                    a2 = 0
 36983: 64 5a                    a3 = s0
 36985: 33 00 98 02              ra = 0x298
 36989: 0a 64                    ecalli 100 // 'log'
 36991: 01                       fallthrough
      :                          @2345 [@dyn 332]
 36992: 82 17 10                 a0 = u64 [sp + 0x10]
 36995: c8 67 07                 a0 = a0 + s1
 36998: 53 37 00 00 f0 1e 10     jump @2553 if a0 <u 4293918720
      :                          @2346
 37005: 33 07 10 01 03           a0 = 0x30110
 37010: 95 77 00 00 10           a0 = a0 + 0x100000
 37015: 01                       fallthrough
      :                          @2347
 37016: 82 78                    a1 = u64 [a0]
 37018: c9 87 09                 a2 = a0 - a1
 37021: ab 59 07 10              jump @2553 if a2 != s0
      :                          @2348
 37025: c9 68 09                 a2 = a1 - s1
 37028: 01                       fallthrough
      :                          @2349
 37029: 82 7a                    a3 = u64 [a0]
 37031: ab 8a f1                 jump @2347 if a3 != a1
      :                          @2350
 37034: 7b 79                    u64 [a0] = a2
 37036: 33 0b                    a4 = 0
 37038: 01                       fallthrough
      :                          @2351
 37039: ab 8a e9                 jump @2347 if a3 != a1
      :                          @2352
 37042: 28 f2 0f                 jump @2553
      :                          @2353 [@dyn 333]
 37045: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 37050: 97 78 0d                 a1 = a0 << 0xd
 37053: d3 87 07                 a0 = a0 ^ a1
 37056: 98 78 07                 a1 = a0 >> 0x7
 37059: d3 87 07                 a0 = a0 ^ a1
 37062: 97 78 11                 a1 = a0 << 0x11
 37065: d3 78 08                 a1 = a1 ^ a0
 37068: 96 75 1d                 s0 = a0 * 0x1d
 37071: 3e 08 e0 00 03           u64 [0x300e0] = a1
 37076: 84 55 1f                 s0 = s0 & 0x1f
 37079: 64 57                    a0 = s0
 37081: 50 20 9c 02 9c 91        ra = 668, jump @700
      :                          @2354 [@dyn 334]
 37087: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 37091: 7b 18 b8 00              u64 [sp + 0xb8] = a1
 37095: 49 21 c0 00              u64 [sp + 192] = 0
 37099: 52 05 b2 00              jump @2364 if s0 != 0
      :                          @2355
 37103: 64 8a                    a3 = a1
 37105: 33 06                    s1 = 0
 37107: 01                       fallthrough
      :                          @2356
 37108: 64 a7                    a0 = a3
 37110: 64 68                    a1 = s1
 37112: 64 a5                    s0 = a3
 37114: 50 20 9e 02 58 a6        ra = 670, jump @1064
      :                          @2357 [@dyn 335]
 37120: 7a 17 48 01              u32 [sp + 0x148] = a0
 37124: 51 06 0c 0d              jump @2523 if s1 == 0
      :                          @2358
 37128: 33 0b                    a4 = 0
 37130: 33 0a 01                 a3 = 0x1
 37133: 14 07 71 80 07 80 00 00 00 00 a0 = 0x80078071
 37143: 33 08 f1 ff 00           a1 = 0xfff1
 37148: 64 69                    a2 = s1
 37150: 64 5c                    a5 = s0
 37152: 64 52                    t0 = s0
 37154: 01                       fallthrough
      :                          @2359
 37155: 7c c5                    s0 = u8 [a5]
 37157: 95 cc 01                 a5 = a5 + 0x1
 37160: c8 a5 05                 s0 = s0 + a3
 37163: 97 5a 20                 a3 = s0 << 0x20
 37166: 98 aa 20                 a3 = a3 >> 0x20
 37169: ca 7a 0a                 a3 = a3 * a0
 37172: 98 aa 2f                 a3 = a3 >> 0x2f
 37175: ca 8a 0a                 a3 = a3 * a1
 37178: bf a5 0a                 i32 a3 = s0 - a3
 37181: c8 ba 05                 s0 = a3 + a4
 37184: 97 5b 20                 a4 = s0 << 0x20
 37187: 98 bb 20                 a4 = a4 >> 0x20
 37190: ca 7b 0b                 a4 = a4 * a0
 37193: 98 bb 2f                 a4 = a4 >> 0x2f
 37196: ca 8b 0b                 a4 = a4 * a1
 37199: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 37202: bf b5 0b                 i32 a4 = s0 - a4
 37205: 52 09 ce                 jump @2359 if a2 != 0
      :                          @2360
 37208: 97 bb 10                 a4 = a4 << 0x10
 37211: d4 ba 0a                 a3 = a3 | a4
 37214: 7a 1a 4c 01              u32 [sp + 0x14c] = a3
 37218: 33 07 c5 9d 1c 81        a0 = 0xffffffff811c9dc5
 37224: 33 08 93 01 00 01        a1 = 0x1000193
 37230: 01                       fallthrough
      :                          @2361
 37231: 7c 29                    a2 = u8 [t0]
 37233: 95 22 01                 t0 = t0 + 0x1
 37236: d3 97 07                 a0 = a0 ^ a2
 37239: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 37242: c0 87 07                 i32 a0 = a0 * a1
 37245: 52 06 f2                 jump @2361 if s1 != 0
      :                          @2362
 37248: 28 9c 0c                 jump @2524
      :                          @2363
 37251: 82 1a b8 00              a3 = u64 [sp + 0xb8]
 37255: 96 67 1d                 a0 = s1 * 0x1d
 37258: c8 8a 09                 a2 = a3 + a1
 37261: 78 97                    u8 [a2] = a0
 37263: 95 86 01                 s1 = a1 + 0x1
 37266: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 37269: 7b 16 c0 00              u64 [sp + 0xc0] = s1
 37273: 51 05 5b ff              jump @2356 if s0 == 0
      :                          @2364
 37277: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 37282: 97 78 0d                 a1 = a0 << 0xd
 37285: d3 87 07                 a0 = a0 ^ a1
 37288: 98 76 07                 s1 = a0 >> 0x7
 37291: d3 76 06                 s1 = s1 ^ a0
 37294: 97 67 11                 a0 = s1 << 0x11
 37297: d3 67 07                 a0 = a0 ^ s1
 37300: 3e 07 e0 00 03           u64 [0x300e0] = a0
 37305: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 37309: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 37313: ab 78 c2                 jump @2363 if a1 != a0
      :                          @2365
 37316: 95 17 b0 00              a0 = sp + 0xb0
 37320: 50 20 a0 02 6f 91        ra = 672, jump @720
      :                          @2366 [@dyn 336]
 37326: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 37330: 28 b1                    jump @2363
      :                          @2367 [@dyn 337]
 37332: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 37337: 97 89 0d                 a2 = a1 << 0xd
 37340: d3 98 08                 a1 = a1 ^ a2
 37343: 98 89 07                 a2 = a1 >> 0x7
 37346: d3 98 08                 a1 = a1 ^ a2
 37349: 97 89 11                 a2 = a1 << 0x11
 37352: d3 98 08                 a1 = a1 ^ a2
 37355: 3a 09 60 00 03           a2 = u64 [0x30060]
 37360: 3a 0a 78 00 03           a3 = u64 [0x30078]
 37365: 3e 08 e0 00 03           u64 [0x300e0] = a1
 37370: ca 98 07                 a0 = a1 * a2
 37373: 98 78 05                 a1 = a0 >> 0x5
 37376: d6 a8 08                 a1 = a1 mulhu a3
 37379: 98 88 07                 a1 = a1 >> 0x7
 37382: 96 88 a0 86 01           a1 = a1 * 0x186a0
 37387: c9 87 07                 a0 = a0 - a1
 37390: 95 77 01                 a0 = a0 + 0x1
 37393: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 37397: 50 20 a4 02 dc a5        ra = 676, jump @1069
      :                          @2368 [@dyn 338]
 37403: 7b 17 90 00              u64 [sp + 0x90] = a0
 37407: 95 17 b0 00              a0 = sp + 0xb0
 37411: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 37415: 33 07 50 03              a0 = 0x350
 37419: 7b 17 00 01              u64 [sp + 0x100] = a0
 37423: 95 18 90 00              a1 = sp + 0x90
 37427: 7b 18 08 01              u64 [sp + 0x108] = a1
 37431: 7b 17 10 01              u64 [sp + 0x110] = a0
 37435: 33 07 08 0d 01           a0 = 0x10d08
 37440: 7b 17 50 01              u64 [sp + 0x150] = a0
 37444: 49 21 58 01 02           u64 [sp + 344] = 0x2
 37449: 49 21 70 01              u64 [sp + 368] = 0
 37453: 95 18 f8 00              a1 = sp + 0xf8
 37457: 7b 18 60 01              u64 [sp + 0x160] = a1
 37461: 49 21 68 01 02           u64 [sp + 360] = 0x2
 37466: 95 17 c8 00              a0 = sp + 0xc8
 37470: 95 18 50 01              a1 = sp + 0x150
 37474: 50 20 a6 02 63 8d        ra = 678, jump @637
      :                          @2369 [@dyn 339]
 37480: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 37484: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 37488: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 37492: 33 07 02                 a0 = 0x2
 37495: 33 08                    a1 = 0
 37497: 33 09                    a2 = 0
 37499: 64 5a                    a3 = s0
 37501: 33 00 a8 02              ra = 0x2a8
 37505: 0a 64                    ecalli 100 // 'log'
 37507: 01                       fallthrough
      :                          @2370 [@dyn 340]
 37508: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 37513: 53 38 00 00 f0 1b 0e     jump @2553 if a1 <u 4293918720
      :                          @2371
 37520: 33 07 10 01 03           a0 = 0x30110
 37525: 95 77 00 00 10           a0 = a0 + 0x100000
 37530: 01                       fallthrough
      :                          @2372
 37531: 82 78                    a1 = u64 [a0]
 37533: c9 87 09                 a2 = a0 - a1
 37536: ab 59 04 0e              jump @2553 if a2 != s0
      :                          @2373
 37540: c9 68 09                 a2 = a1 - s1
 37543: 01                       fallthrough
      :                          @2374
 37544: 82 7a                    a3 = u64 [a0]
 37546: ab 8a f1                 jump @2372 if a3 != a1
      :                          @2375
 37549: 7b 79                    u64 [a0] = a2
 37551: 33 0b                    a4 = 0
 37553: 01                       fallthrough
      :                          @2376
 37554: ab 8a e9                 jump @2372 if a3 != a1
      :                          @2377
 37557: 28 ef 0d                 jump @2553
      :                          @2378 [@dyn 341]
 37560: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 37565: 97 89 0d                 a2 = a1 << 0xd
 37568: d3 98 08                 a1 = a1 ^ a2
 37571: 98 89 07                 a2 = a1 >> 0x7
 37574: d3 98 08                 a1 = a1 ^ a2
 37577: 97 89 11                 a2 = a1 << 0x11
 37580: d3 98 08                 a1 = a1 ^ a2
 37583: 3a 09 60 00 03           a2 = u64 [0x30060]
 37588: 3a 0a 68 00 03           a3 = u64 [0x30068]
 37593: 3e 08 e0 00 03           u64 [0x300e0] = a1
 37598: ca 98 07                 a0 = a1 * a2
 37601: 98 78 03                 a1 = a0 >> 0x3
 37604: d6 a8 08                 a1 = a1 mulhu a3
 37607: 98 88 04                 a1 = a1 >> 0x4
 37610: 96 88 e8 03              a1 = a1 * 0x3e8
 37614: c9 87 07                 a0 = a0 - a1
 37617: 95 75 01                 s0 = a0 + 0x1
 37620: 7b 15 b0 00              u64 [sp + 0xb0] = s0
 37624: 95 17 90 00              a0 = sp + 0x90
 37628: 64 58                    a1 = s0
 37630: 33 00 ac 02              ra = 0x2ac
 37634: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 37637: 7b 10 50                 u64 [sp + 0x50] = ra
 37640: 7b 15 48                 u64 [sp + 0x48] = s0
 37643: 7b 16 40                 u64 [sp + 0x40] = s1
 37646: 95 86 01                 s1 = a1 + 0x1
 37649: 33 09 10 01 03           a2 = 0x30110
 37654: 33 02 00 00 10           t0 = 0x100000
 37659: c8 29 09                 a2 = a2 + t0
 37662: 28 2a a6                 jump @1119
      :                          @2379 [@dyn 342]
 37665: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 37669: ae 85 9b 0d              jump @2557 if s0 >=u a1
      :                          @2380
 37673: 82 17 98 00              a0 = u64 [sp + 0x98]
 37677: 97 55 02                 s0 = s0 << 0x2
 37680: 7b 17 10                 u64 [sp + 0x10] = a0
 37683: c8 75 05                 s0 = s0 + a0
 37686: 95 17 b0 00              a0 = sp + 0xb0
 37690: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 37694: 33 07 50 03              a0 = 0x350
 37698: 7b 17 00 01              u64 [sp + 0x100] = a0
 37702: 7b 15 08 01              u64 [sp + 0x108] = s0
 37706: 33 07 a6 03              a0 = 0x3a6
 37710: 7b 17 10 01              u64 [sp + 0x110] = a0
 37714: 33 07 40 0d 01           a0 = 0x10d40
 37719: 7b 17 50 01              u64 [sp + 0x150] = a0
 37723: 49 21 58 01 02           u64 [sp + 344] = 0x2
 37728: 49 21 70 01              u64 [sp + 368] = 0
 37732: 95 18 f8 00              a1 = sp + 0xf8
 37736: 7b 18 60 01              u64 [sp + 0x160] = a1
 37740: 49 21 68 01 02           u64 [sp + 360] = 0x2
 37745: 95 17 c8 00              a0 = sp + 0xc8
 37749: 95 18 50 01              a1 = sp + 0x150
 37753: 50 20 ae 02 4c 8c        ra = 686, jump @637
      :                          @2381 [@dyn 343]
 37759: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 37763: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 37767: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 37771: 33 07 02                 a0 = 0x2
 37774: 33 08                    a1 = 0
 37776: 33 09                    a2 = 0
 37778: 64 5a                    a3 = s0
 37780: 33 00 b0 02              ra = 0x2b0
 37784: 0a 64                    ecalli 100 // 'log'
 37786: 01                       fallthrough
      :                          @2382 [@dyn 344]
 37787: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 37792: 53 38 00 00 f0 25        jump @2388 if a1 <u 4293918720
      :                          @2383
 37798: 33 07 10 01 03           a0 = 0x30110
 37803: 95 77 00 00 10           a0 = a0 + 0x100000
 37808: 01                       fallthrough
      :                          @2384
 37809: 82 78                    a1 = u64 [a0]
 37811: c9 87 09                 a2 = a0 - a1
 37814: ab 59 0f                 jump @2388 if a2 != s0
      :                          @2385
 37817: c9 68 09                 a2 = a1 - s1
 37820: 01                       fallthrough
      :                          @2386
 37821: 82 7a                    a3 = u64 [a0]
 37823: ab 8a f2                 jump @2384 if a3 != a1
      :                          @2387
 37826: 7b 79                    u64 [a0] = a2
 37828: 01                       fallthrough
      :                          @2388
 37829: 82 17 90 00              a0 = u64 [sp + 0x90]
 37833: 82 16 10                 s1 = u64 [sp + 0x10]
 37836: 51 07 d8 0c              jump @2553 if a0 == 0
      :                          @2389
 37840: 56 37 00 00 04 d4 0c     jump @2553 if a0 >u 262144
      :                          @2390
 37847: 97 77 02                 a0 = a0 << 0x2
 37850: 33 08 10 01 03           a1 = 0x30110
 37855: 95 88 00 00 10           a1 = a1 + 0x100000
 37860: 01                       fallthrough
      :                          @2391
 37861: 82 89                    a2 = u64 [a1]
 37863: c9 98 0a                 a3 = a1 - a2
 37866: ab 6a ba 0c              jump @2553 if a3 != s1
      :                          @2392
 37870: c9 79 0a                 a3 = a2 - a0
 37873: 01                       fallthrough
      :                          @2393
 37874: 82 8b                    a4 = u64 [a1]
 37876: ab 9b f1                 jump @2391 if a4 != a2
      :                          @2394
 37879: 7b 8a                    u64 [a1] = a3
 37881: 33 0c                    a5 = 0
 37883: 01                       fallthrough
      :                          @2395
 37884: ab 9b e9                 jump @2391 if a4 != a2
      :                          @2396
 37887: 28 a5 0c                 jump @2553
      :                          @2397 [@dyn 345]
 37890: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 37895: 97 89 0d                 a2 = a1 << 0xd
 37898: d3 98 08                 a1 = a1 ^ a2
 37901: 98 89 07                 a2 = a1 >> 0x7
 37904: d3 98 08                 a1 = a1 ^ a2
 37907: 97 89 11                 a2 = a1 << 0x11
 37910: d3 98 08                 a1 = a1 ^ a2
 37913: 3a 09 60 00 03           a2 = u64 [0x30060]
 37918: 3a 0a 78 00 03           a3 = u64 [0x30078]
 37923: 3e 08 e0 00 03           u64 [0x300e0] = a1
 37928: ca 98 07                 a0 = a1 * a2
 37931: 98 78 05                 a1 = a0 >> 0x5
 37934: d6 a8 08                 a1 = a1 mulhu a3
 37937: 98 88 07                 a1 = a1 >> 0x7
 37940: 96 88 a0 86 01           a1 = a1 * 0x186a0
 37945: c9 87 07                 a0 = a0 - a1
 37948: 95 77 01                 a0 = a0 + 0x1
 37951: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 37955: 50 20 b4 02 11 a4        ra = 692, jump @1086
      :                          @2398 [@dyn 346]
 37961: 7b 17 90 00              u64 [sp + 0x90] = a0
 37965: 95 17 b0 00              a0 = sp + 0xb0
 37969: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 37973: 33 07 50 03              a0 = 0x350
 37977: 7b 17 00 01              u64 [sp + 0x100] = a0
 37981: 95 18 90 00              a1 = sp + 0x90
 37985: 7b 18 08 01              u64 [sp + 0x108] = a1
 37989: 7b 17 10 01              u64 [sp + 0x110] = a0
 37993: 33 07 78 0d 01           a0 = 0x10d78
 37998: 7b 17 50 01              u64 [sp + 0x150] = a0
 38002: 49 21 58 01 02           u64 [sp + 344] = 0x2
 38007: 49 21 70 01              u64 [sp + 368] = 0
 38011: 95 18 f8 00              a1 = sp + 0xf8
 38015: 7b 18 60 01              u64 [sp + 0x160] = a1
 38019: 49 21 68 01 02           u64 [sp + 360] = 0x2
 38024: 95 17 c8 00              a0 = sp + 0xc8
 38028: 95 18 50 01              a1 = sp + 0x150
 38032: 50 20 b6 02 35 8b        ra = 694, jump @637
      :                          @2399 [@dyn 347]
 38038: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 38042: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 38046: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 38050: 33 07 02                 a0 = 0x2
 38053: 33 08                    a1 = 0
 38055: 33 09                    a2 = 0
 38057: 64 5a                    a3 = s0
 38059: 33 00 b8 02              ra = 0x2b8
 38063: 0a 64                    ecalli 100 // 'log'
 38065: 01                       fallthrough
      :                          @2400 [@dyn 348]
 38066: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 38071: 53 38 00 00 f0 ed 0b     jump @2553 if a1 <u 4293918720
      :                          @2401
 38078: 33 07 10 01 03           a0 = 0x30110
 38083: 95 77 00 00 10           a0 = a0 + 0x100000
 38088: 01                       fallthrough
      :                          @2402
 38089: 82 78                    a1 = u64 [a0]
 38091: c9 87 09                 a2 = a0 - a1
 38094: ab 59 d6 0b              jump @2553 if a2 != s0
      :                          @2403
 38098: c9 68 09                 a2 = a1 - s1
 38101: 01                       fallthrough
      :                          @2404
 38102: 82 7a                    a3 = u64 [a0]
 38104: ab 8a f1                 jump @2402 if a3 != a1
      :                          @2405
 38107: 7b 79                    u64 [a0] = a2
 38109: 33 0b                    a4 = 0
 38111: 01                       fallthrough
      :                          @2406
 38112: ab 8a e9                 jump @2402 if a3 != a1
      :                          @2407
 38115: 28 c1 0b                 jump @2553
      :                          @2408 [@dyn 349]
 38118: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 38123: 97 89 0d                 a2 = a1 << 0xd
 38126: d3 98 08                 a1 = a1 ^ a2
 38129: 98 89 07                 a2 = a1 >> 0x7
 38132: d3 98 08                 a1 = a1 ^ a2
 38135: 97 89 11                 a2 = a1 << 0x11
 38138: d3 98 08                 a1 = a1 ^ a2
 38141: 3a 09 60 00 03           a2 = u64 [0x30060]
 38146: 3a 0a 78 00 03           a3 = u64 [0x30078]
 38151: 3e 08 e0 00 03           u64 [0x300e0] = a1
 38156: ca 98 07                 a0 = a1 * a2
 38159: 98 78 05                 a1 = a0 >> 0x5
 38162: d6 a8 08                 a1 = a1 mulhu a3
 38165: 98 88 07                 a1 = a1 >> 0x7
 38168: 96 88 a0 86 01           a1 = a1 * 0x186a0
 38173: c9 87 07                 a0 = a0 - a1
 38176: 95 77 01                 a0 = a0 + 0x1
 38179: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 38183: 50 20 bc 02 85 a3        ra = 700, jump @1097
      :                          @2409 [@dyn 350]
 38189: 7b 17 90 00              u64 [sp + 0x90] = a0
 38193: 95 17 b0 00              a0 = sp + 0xb0
 38197: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 38201: 33 07 50 03              a0 = 0x350
 38205: 7b 17 00 01              u64 [sp + 0x100] = a0
 38209: 95 18 90 00              a1 = sp + 0x90
 38213: 7b 18 08 01              u64 [sp + 0x108] = a1
 38217: 7b 17 10 01              u64 [sp + 0x110] = a0
 38221: 33 07 a8 0d 01           a0 = 0x10da8
 38226: 7b 17 50 01              u64 [sp + 0x150] = a0
 38230: 49 21 58 01 02           u64 [sp + 344] = 0x2
 38235: 49 21 70 01              u64 [sp + 368] = 0
 38239: 95 18 f8 00              a1 = sp + 0xf8
 38243: 7b 18 60 01              u64 [sp + 0x160] = a1
 38247: 49 21 68 01 02           u64 [sp + 360] = 0x2
 38252: 95 17 c8 00              a0 = sp + 0xc8
 38256: 95 18 50 01              a1 = sp + 0x150
 38260: 50 20 be 02 51 8a        ra = 702, jump @637
      :                          @2410 [@dyn 351]
 38266: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 38270: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 38274: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 38278: 33 07 02                 a0 = 0x2
 38281: 33 08                    a1 = 0
 38283: 33 09                    a2 = 0
 38285: 64 5a                    a3 = s0
 38287: 33 00 c0 02              ra = 0x2c0
 38291: 0a 64                    ecalli 100 // 'log'
 38293: 01                       fallthrough
      :                          @2411 [@dyn 352]
 38294: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 38299: 53 38 00 00 f0 09 0b     jump @2553 if a1 <u 4293918720
      :                          @2412
 38306: 33 07 10 01 03           a0 = 0x30110
 38311: 95 77 00 00 10           a0 = a0 + 0x100000
 38316: 01                       fallthrough
      :                          @2413
 38317: 82 78                    a1 = u64 [a0]
 38319: c9 87 09                 a2 = a0 - a1
 38322: ab 59 f2 0a              jump @2553 if a2 != s0
      :                          @2414
 38326: c9 68 09                 a2 = a1 - s1
 38329: 01                       fallthrough
      :                          @2415
 38330: 82 7a                    a3 = u64 [a0]
 38332: ab 8a f1                 jump @2413 if a3 != a1
      :                          @2416
 38335: 7b 79                    u64 [a0] = a2
 38337: 33 0b                    a4 = 0
 38339: 01                       fallthrough
      :                          @2417
 38340: ab 8a e9                 jump @2413 if a3 != a1
      :                          @2418
 38343: 28 dd 0a                 jump @2553
      :                          @2419 [@dyn 353]
 38346: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 38351: 97 89 0d                 a2 = a1 << 0xd
 38354: d3 98 08                 a1 = a1 ^ a2
 38357: 98 89 07                 a2 = a1 >> 0x7
 38360: d3 98 08                 a1 = a1 ^ a2
 38363: 97 89 11                 a2 = a1 << 0x11
 38366: d3 98 08                 a1 = a1 ^ a2
 38369: 3a 09 60 00 03           a2 = u64 [0x30060]
 38374: 3a 0a 78 00 03           a3 = u64 [0x30078]
 38379: 3e 08 e0 00 03           u64 [0x300e0] = a1
 38384: ca 98 07                 a0 = a1 * a2
 38387: 98 78 05                 a1 = a0 >> 0x5
 38390: d6 a8 08                 a1 = a1 mulhu a3
 38393: 98 88 07                 a1 = a1 >> 0x7
 38396: 96 88 a0 86 01           a1 = a1 * 0x186a0
 38401: c9 87 07                 a0 = a0 - a1
 38404: 95 77 01                 a0 = a0 + 0x1
 38407: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 38411: 50 20 c4 02 f1 a2        ra = 708, jump @1107
      :                          @2420 [@dyn 354]
 38417: 7b 17 90 00              u64 [sp + 0x90] = a0
 38421: 95 17 b0 00              a0 = sp + 0xb0
 38425: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 38429: 33 07 50 03              a0 = 0x350
 38433: 7b 17 00 01              u64 [sp + 0x100] = a0
 38437: 95 17 90 00              a0 = sp + 0x90
 38441: 7b 17 08 01              u64 [sp + 0x108] = a0
 38445: 33 07 a8 03              a0 = 0x3a8
 38449: 7b 17 10 01              u64 [sp + 0x110] = a0
 38453: 33 07 d0 0d 01           a0 = 0x10dd0
 38458: 7b 17 50 01              u64 [sp + 0x150] = a0
 38462: 49 21 58 01 02           u64 [sp + 344] = 0x2
 38467: 49 21 70 01              u64 [sp + 368] = 0
 38471: 95 18 f8 00              a1 = sp + 0xf8
 38475: 7b 18 60 01              u64 [sp + 0x160] = a1
 38479: 49 21 68 01 02           u64 [sp + 360] = 0x2
 38484: 95 17 c8 00              a0 = sp + 0xc8
 38488: 95 18 50 01              a1 = sp + 0x150
 38492: 50 20 c6 02 69 89        ra = 710, jump @637
      :                          @2421 [@dyn 355]
 38498: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 38502: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 38506: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 38510: 33 07 02                 a0 = 0x2
 38513: 33 08                    a1 = 0
 38515: 33 09                    a2 = 0
 38517: 64 5a                    a3 = s0
 38519: 33 00 c8 02              ra = 0x2c8
 38523: 0a 64                    ecalli 100 // 'log'
 38525: 01                       fallthrough
      :                          @2422 [@dyn 356]
 38526: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 38531: 53 38 00 00 f0 21 0a     jump @2553 if a1 <u 4293918720
      :                          @2423
 38538: 33 07 10 01 03           a0 = 0x30110
 38543: 95 77 00 00 10           a0 = a0 + 0x100000
 38548: 01                       fallthrough
      :                          @2424
 38549: 82 78                    a1 = u64 [a0]
 38551: c9 87 09                 a2 = a0 - a1
 38554: ab 59 0a 0a              jump @2553 if a2 != s0
      :                          @2425
 38558: c9 68 09                 a2 = a1 - s1
 38561: 01                       fallthrough
      :                          @2426
 38562: 82 7a                    a3 = u64 [a0]
 38564: ab 8a f1                 jump @2424 if a3 != a1
      :                          @2427
 38567: 7b 79                    u64 [a0] = a2
 38569: 33 0b                    a4 = 0
 38571: 01                       fallthrough
      :                          @2428
 38572: ab 8a e9                 jump @2424 if a3 != a1
      :                          @2429
 38575: 28 f5 09                 jump @2553
      :                          @2430 [@dyn 357]
 38578: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 38583: 97 89 0d                 a2 = a1 << 0xd
 38586: d3 98 08                 a1 = a1 ^ a2
 38589: 98 89 07                 a2 = a1 >> 0x7
 38592: d3 98 08                 a1 = a1 ^ a2
 38595: 97 89 11                 a2 = a1 << 0x11
 38598: d3 98 08                 a1 = a1 ^ a2
 38601: 3a 09 60 00 03           a2 = u64 [0x30060]
 38606: 3a 0a 68 00 03           a3 = u64 [0x30068]
 38611: 3e 08 e0 00 03           u64 [0x300e0] = a1
 38616: ca 98 07                 a0 = a1 * a2
 38619: 98 78 03                 a1 = a0 >> 0x3
 38622: d6 a8 08                 a1 = a1 mulhu a3
 38625: 98 88 04                 a1 = a1 >> 0x4
 38628: 96 88 e8 03              a1 = a1 * 0x3e8
 38632: c9 87 07                 a0 = a0 - a1
 38635: 95 77 01                 a0 = a0 + 0x1
 38638: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 38642: 33 00 cc 02              ra = 0x2cc
 38646: 33 08                    a1 = 0
 38648: 33 09 01                 a2 = 0x1
 38651: 28 5b a4                 jump @1168
      :                          @2431 [@dyn 358]
 38654: 7b 17 90 00              u64 [sp + 0x90] = a0
 38658: 95 17 b0 00              a0 = sp + 0xb0
 38662: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 38666: 33 07 50 03              a0 = 0x350
 38670: 7b 17 00 01              u64 [sp + 0x100] = a0
 38674: 95 18 90 00              a1 = sp + 0x90
 38678: 7b 18 08 01              u64 [sp + 0x108] = a1
 38682: 7b 17 10 01              u64 [sp + 0x110] = a0
 38686: 33 07 10 0e 01           a0 = 0x10e10
 38691: 7b 17 50 01              u64 [sp + 0x150] = a0
 38695: 49 21 58 01 02           u64 [sp + 344] = 0x2
 38700: 49 21 70 01              u64 [sp + 368] = 0
 38704: 95 18 f8 00              a1 = sp + 0xf8
 38708: 7b 18 60 01              u64 [sp + 0x160] = a1
 38712: 49 21 68 01 02           u64 [sp + 360] = 0x2
 38717: 95 17 c8 00              a0 = sp + 0xc8
 38721: 95 18 50 01              a1 = sp + 0x150
 38725: 50 20 ce 02 80 88        ra = 718, jump @637
      :                          @2432 [@dyn 359]
 38731: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 38735: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 38739: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 38743: 33 07 02                 a0 = 0x2
 38746: 33 08                    a1 = 0
 38748: 33 09                    a2 = 0
 38750: 64 5a                    a3 = s0
 38752: 33 00 d0 02              ra = 0x2d0
 38756: 0a 64                    ecalli 100 // 'log'
 38758: 01                       fallthrough
      :                          @2433 [@dyn 360]
 38759: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 38764: 53 38 00 00 f0 38 09     jump @2553 if a1 <u 4293918720
      :                          @2434
 38771: 33 07 10 01 03           a0 = 0x30110
 38776: 95 77 00 00 10           a0 = a0 + 0x100000
 38781: 01                       fallthrough
      :                          @2435
 38782: 82 78                    a1 = u64 [a0]
 38784: c9 87 09                 a2 = a0 - a1
 38787: ab 59 21 09              jump @2553 if a2 != s0
      :                          @2436
 38791: c9 68 09                 a2 = a1 - s1
 38794: 01                       fallthrough
      :                          @2437
 38795: 82 7a                    a3 = u64 [a0]
 38797: ab 8a f1                 jump @2435 if a3 != a1
      :                          @2438
 38800: 7b 79                    u64 [a0] = a2
 38802: 33 0b                    a4 = 0
 38804: 01                       fallthrough
      :                          @2439
 38805: ab 8a e9                 jump @2435 if a3 != a1
      :                          @2440
 38808: 28 0c 09                 jump @2553
      :                          @2441 [@dyn 361]
 38811: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 38816: 3a 07 60 00 03           a0 = u64 [0x30060]
 38821: 97 9a 0d                 a3 = a2 << 0xd
 38824: d3 a9 09                 a2 = a2 ^ a3
 38827: 98 9a 07                 a3 = a2 >> 0x7
 38830: d3 a9 09                 a2 = a2 ^ a3
 38833: 97 9a 11                 a3 = a2 << 0x11
 38836: d3 a9 09                 a2 = a2 ^ a3
 38839: 3a 0a 70 00 03           a3 = u64 [0x30070]
 38844: ca 79 0b                 a4 = a2 * a0
 38847: 3e 09 e0 00 03           u64 [0x300e0] = a2
 38852: d6 ab 09                 a2 = a4 mulhu a3
 38855: c9 9b 0a                 a3 = a4 - a2
 38858: 98 aa 01                 a3 = a3 >> 0x1
 38861: c8 a9 09                 a2 = a2 + a3
 38864: 98 99 09                 a2 = a2 >> 0x9
 38867: 96 99 e7 03              a2 = a2 * 0x3e7
 38871: c9 9b 0b                 a4 = a4 - a2
 38874: 86 b9 01                 a2 = a4 | 0x1
 38877: 95 99 02                 a2 = a2 + 0x2
 38880: 7b 19 68 02              u64 [sp + 0x268] = a2
 38884: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 38889: 97 9a 0d                 a3 = a2 << 0xd
 38892: d3 a9 09                 a2 = a2 ^ a3
 38895: 98 9a 07                 a3 = a2 >> 0x7
 38898: d3 a9 09                 a2 = a2 ^ a3
 38901: 97 9a 11                 a3 = a2 << 0x11
 38904: d3 a9 09                 a2 = a2 ^ a3
 38907: 3e 09 e0 00 03           u64 [0x300e0] = a2
 38912: 82 18 68 02              a1 = u64 [sp + 0x268]
 38916: 51 08 ba 08              jump @2555 if a1 == 0
      :                          @2442
 38920: ca 79 07                 a0 = a2 * a0
 38923: cd 87 07                 a0 = a0 %u a1
 38926: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 38930: 57 07 af 08              jump @2558 if a0 <s 0
      :                          @2443
 38934: 57 08 ab 08              jump @2558 if a1 <s 0
      :                          @2444
 38938: 50 20 d4 02 f1 91        ra = 724, jump @804
      :                          @2445 [@dyn 362]
 38944: 7b 17 90 00              u64 [sp + 0x90] = a0
 38948: 95 17 b0 00              a0 = sp + 0xb0
 38952: 7b 17 50 01              u64 [sp + 0x150] = a0
 38956: 33 07 a8 03              a0 = 0x3a8
 38960: 7b 17 58 01              u64 [sp + 0x158] = a0
 38964: 95 18 68 02              a1 = sp + 0x268
 38968: 7b 18 60 01              u64 [sp + 0x160] = a1
 38972: 33 08 50 03              a1 = 0x350
 38976: 7b 18 68 01              u64 [sp + 0x168] = a1
 38980: 95 18 90 00              a1 = sp + 0x90
 38984: 7b 18 70 01              u64 [sp + 0x170] = a1
 38988: 7b 17 78 01              u64 [sp + 0x178] = a0
 38992: 33 07 30 0e 01           a0 = 0x10e30
 38997: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 39001: 49 21 00 01 03           u64 [sp + 256] = 0x3
 39006: 49 21 18 01              u64 [sp + 280] = 0
 39010: 95 18 50 01              a1 = sp + 0x150
 39014: 7b 18 08 01              u64 [sp + 0x108] = a1
 39018: 49 21 10 01 03           u64 [sp + 272] = 0x3
 39023: 95 17 c8 00              a0 = sp + 0xc8
 39027: 95 18 f8 00              a1 = sp + 0xf8
 39031: 50 20 d6 02 4e 87        ra = 726, jump @637
      :                          @2446 [@dyn 363]
 39037: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 39041: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 39045: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 39049: 33 07 02                 a0 = 0x2
 39052: 33 08                    a1 = 0
 39054: 33 09                    a2 = 0
 39056: 64 5a                    a3 = s0
 39058: 33 00 d8 02              ra = 0x2d8
 39062: 0a 64                    ecalli 100 // 'log'
 39064: 01                       fallthrough
      :                          @2447 [@dyn 364]
 39065: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 39070: 53 38 00 00 f0 06 08     jump @2553 if a1 <u 4293918720
      :                          @2448
 39077: 33 07 10 01 03           a0 = 0x30110
 39082: 95 77 00 00 10           a0 = a0 + 0x100000
 39087: 01                       fallthrough
      :                          @2449
 39088: 82 78                    a1 = u64 [a0]
 39090: c9 87 09                 a2 = a0 - a1
 39093: ab 59 ef 07              jump @2553 if a2 != s0
      :                          @2450
 39097: c9 68 09                 a2 = a1 - s1
 39100: 01                       fallthrough
      :                          @2451
 39101: 82 7a                    a3 = u64 [a0]
 39103: ab 8a f1                 jump @2449 if a3 != a1
      :                          @2452
 39106: 7b 79                    u64 [a0] = a2
 39108: 33 0b                    a4 = 0
 39110: 01                       fallthrough
      :                          @2453
 39111: ab 8a e9                 jump @2449 if a3 != a1
      :                          @2454
 39114: 28 da 07                 jump @2553
      :                          @2455 [@dyn 365]
 39117: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 39122: 97 89 0d                 a2 = a1 << 0xd
 39125: d3 98 08                 a1 = a1 ^ a2
 39128: 98 89 07                 a2 = a1 >> 0x7
 39131: d3 98 08                 a1 = a1 ^ a2
 39134: 97 89 11                 a2 = a1 << 0x11
 39137: d3 98 08                 a1 = a1 ^ a2
 39140: 3a 09 60 00 03           a2 = u64 [0x30060]
 39145: 3e 08 e0 00 03           u64 [0x300e0] = a1
 39150: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 39155: ca 98 08                 a1 = a1 * a2
 39158: 97 ab 0d                 a4 = a3 << 0xd
 39161: d3 ba 0a                 a3 = a3 ^ a4
 39164: 98 ab 07                 a4 = a3 >> 0x7
 39167: d3 ba 0a                 a3 = a3 ^ a4
 39170: 97 ab 11                 a4 = a3 << 0x11
 39173: d3 ba 0a                 a3 = a3 ^ a4
 39176: ca 9a 09                 a2 = a3 * a2
 39179: 3a 0b 68 00 03           a4 = u64 [0x30068]
 39184: 3e 0a e0 00 03           u64 [0x300e0] = a3
 39189: 98 87 03                 a0 = a1 >> 0x3
 39192: d6 b7 07                 a0 = a0 mulhu a4
 39195: 98 77 04                 a0 = a0 >> 0x4
 39198: 96 77 e8 03              a0 = a0 * 0x3e8
 39202: c9 78 08                 a1 = a1 - a0
 39205: 86 88 01                 a1 = a1 | 0x1
 39208: 95 88 02                 a1 = a1 + 0x2
 39211: cd 89 07                 a0 = a2 %u a1
 39214: 50 20 dc 02 ac a2        ra = 732, jump @1182
      :                          @2456 [@dyn 366]
 39220: 51 07 fa 06              jump @2545 if a0 == 0
      :                          @2457
 39224: 7b 18 90 00              u64 [sp + 0x90] = a1
 39228: 95 17 90 00              a0 = sp + 0x90
 39232: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 39236: 33 07 50 03              a0 = 0x350
 39240: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 39244: 33 07 70 0e 01           a0 = 0x10e70
 39249: 7b 17 50 01              u64 [sp + 0x150] = a0
 39253: 49 21 58 01 01           u64 [sp + 344] = 0x1
 39258: 49 21 70 01              u64 [sp + 368] = 0
 39262: 95 18 c8 00              a1 = sp + 0xc8
 39266: 7b 18 60 01              u64 [sp + 0x160] = a1
 39270: 49 21 68 01 01           u64 [sp + 360] = 0x1
 39275: 95 17 f8 00              a0 = sp + 0xf8
 39279: 95 18 50 01              a1 = sp + 0x150
 39283: 50 20 de 02 52 86        ra = 734, jump @637
      :                          @2458 [@dyn 367]
 39289: 82 15 00 01              s0 = u64 [sp + 0x100]
 39293: 82 1b 08 01              a4 = u64 [sp + 0x108]
 39297: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 39301: 33 07 02                 a0 = 0x2
 39304: 33 08                    a1 = 0
 39306: 33 09                    a2 = 0
 39308: 64 5a                    a3 = s0
 39310: 33 00 e0 02              ra = 0x2e0
 39314: 0a 64                    ecalli 100 // 'log'
 39316: 01                       fallthrough
      :                          @2459 [@dyn 368]
 39317: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 39322: 53 38 00 00 f0 0a 07     jump @2553 if a1 <u 4293918720
      :                          @2460
 39329: 33 07 10 01 03           a0 = 0x30110
 39334: 95 77 00 00 10           a0 = a0 + 0x100000
 39339: 01                       fallthrough
      :                          @2461
 39340: 82 78                    a1 = u64 [a0]
 39342: c9 87 09                 a2 = a0 - a1
 39345: ab 59 f3 06              jump @2553 if a2 != s0
      :                          @2462
 39349: c9 68 09                 a2 = a1 - s1
 39352: 01                       fallthrough
      :                          @2463
 39353: 82 7a                    a3 = u64 [a0]
 39355: ab 8a f1                 jump @2461 if a3 != a1
      :                          @2464
 39358: 7b 79                    u64 [a0] = a2
 39360: 33 0b                    a4 = 0
 39362: 01                       fallthrough
      :                          @2465
 39363: ab 8a e9                 jump @2461 if a3 != a1
      :                          @2466
 39366: 28 de 06                 jump @2553
      :                          @2467
 39369: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 39374: 97 89 0d                 a2 = a1 << 0xd
 39377: d3 98 08                 a1 = a1 ^ a2
 39380: 98 89 07                 a2 = a1 >> 0x7
 39383: d3 98 08                 a1 = a1 ^ a2
 39386: 97 89 11                 a2 = a1 << 0x11
 39389: d3 98 08                 a1 = a1 ^ a2
 39392: 3e 08 e0 00 03           u64 [0x300e0] = a1
 39397: ca c8 07                 a0 = a1 * a5
 39400: 64 29                    a2 = t0
 39402: 7b 12 08                 u64 [sp + 0x8] = t0
 39405: cd 27 07                 a0 = a0 %u t0
 39408: 7b 17                    u64 [sp] = a0
 39410: 7b 17 68 02              u64 [sp + 0x268] = a0
 39414: 64 58                    a1 = s0
 39416: 7b 1a 10                 u64 [sp + 0x10] = a3
 39419: 33 00 e2 02              ra = 0x2e2
 39423: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 39426: 7b 10 38                 u64 [sp + 0x38] = ra
 39429: 7b 15 30                 u64 [sp + 0x30] = s0
 39432: 7b 16 28                 u64 [sp + 0x28] = s1
 39435: 33 0c e0 00 03           a5 = 0x300e0
 39440: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 39445: 7b 1b 08                 u64 [sp + 0x8] = a4
 39448: 64 95                    s0 = a2
 39450: 7b 17                    u64 [sp] = a0
 39452: 97 67 0d                 a0 = s1 << 0xd
 39455: d3 67 07                 a0 = a0 ^ s1
 39458: 98 79 07                 a2 = a0 >> 0x7
 39461: d3 97 07                 a0 = a0 ^ a2
 39464: 97 79 11                 a2 = a0 << 0x11
 39467: d3 97 07                 a0 = a0 ^ a2
 39470: 3a 09 58 00 03           a2 = u64 [0x30058]
 39475: 3e 07 e0 00 03           u64 [0x300e0] = a0
 39480: 95 5b ff                 a4 = s0 + 0xffffffffffffffff
 39483: ca 97 07                 a0 = a0 * a2
 39486: cd b7 09                 a2 = a0 %u a4
 39489: 95 99 01                 a2 = a2 + 0x1
 39492: 33 06 01                 s1 = 0x1
 39495: 64 97                    a0 = a2
 39497: 28 ec b6                 jump @1646
      :                          @2468 [@dyn 369]
 39500: 64 79                    a2 = a0
 39502: 64 8a                    a3 = a1
 39504: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 39508: 7b 18 90 00              u64 [sp + 0x90] = a1
 39512: 82 17                    a0 = u64 [sp]
 39514: 64 98                    a1 = a2
 39516: 64 a9                    a2 = a3
 39518: 64 5a                    a3 = s0
 39520: 82 1b 08                 a4 = u64 [sp + 0x8]
 39523: 82 1c 10                 a5 = u64 [sp + 0x10]
 39526: 64 64                    t2 = s1
 39528: 50 20 e4 02 41 b7        ra = 740, jump @1655
      :                          @2469 [@dyn 370]
 39534: 78 17 88 00              u8 [sp + 0x88] = a0
 39538: 95 17 68 02              a0 = sp + 0x268
 39542: 7b 17 50 01              u64 [sp + 0x150] = a0
 39546: 33 07 50 03              a0 = 0x350
 39550: 7b 17 58 01              u64 [sp + 0x158] = a0
 39554: 95 18 b0 00              a1 = sp + 0xb0
 39558: 7b 18 60 01              u64 [sp + 0x160] = a1
 39562: 7b 17 68 01              u64 [sp + 0x168] = a0
 39566: 95 18 90 00              a1 = sp + 0x90
 39570: 7b 18 70 01              u64 [sp + 0x170] = a1
 39574: 7b 17 78 01              u64 [sp + 0x178] = a0
 39578: 95 17 88 00              a0 = sp + 0x88
 39582: 7b 17 80 01              u64 [sp + 0x180] = a0
 39586: 33 07 9c 03              a0 = 0x39c
 39590: 7b 17 88 01              u64 [sp + 0x188] = a0
 39594: 33 07 08 06 01           a0 = 0x10608
 39599: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 39603: 49 21 00 01 04           u64 [sp + 256] = 0x4
 39608: 49 21 18 01              u64 [sp + 280] = 0
 39612: 95 18 50 01              a1 = sp + 0x150
 39616: 7b 18 08 01              u64 [sp + 0x108] = a1
 39620: 49 21 10 01 04           u64 [sp + 272] = 0x4
 39625: 95 17 c8 00              a0 = sp + 0xc8
 39629: 95 18 f8 00              a1 = sp + 0xf8
 39633: 50 20 e6 02 f4 84        ra = 742, jump @637
      :                          @2470 [@dyn 371]
 39639: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 39643: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 39647: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 39651: 33 07 02                 a0 = 0x2
 39654: 33 08                    a1 = 0
 39656: 33 09                    a2 = 0
 39658: 64 5a                    a3 = s0
 39660: 33 00 e8 02              ra = 0x2e8
 39664: 0a 64                    ecalli 100 // 'log'
 39666: 01                       fallthrough
      :                          @2471 [@dyn 372]
 39667: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 39672: 53 38 00 00 f0 ac 05     jump @2553 if a1 <u 4293918720
      :                          @2472
 39679: 33 07 10 01 03           a0 = 0x30110
 39684: 95 77 00 00 10           a0 = a0 + 0x100000
 39689: 01                       fallthrough
      :                          @2473
 39690: 82 78                    a1 = u64 [a0]
 39692: c9 87 09                 a2 = a0 - a1
 39695: ab 59 95 05              jump @2553 if a2 != s0
      :                          @2474
 39699: c9 68 09                 a2 = a1 - s1
 39702: 01                       fallthrough
      :                          @2475
 39703: 82 7a                    a3 = u64 [a0]
 39705: ab 8a f1                 jump @2473 if a3 != a1
      :                          @2476
 39708: 7b 79                    u64 [a0] = a2
 39710: 33 0b                    a4 = 0
 39712: 01                       fallthrough
      :                          @2477
 39713: ab 8a e9                 jump @2473 if a3 != a1
      :                          @2478
 39716: 28 80 05                 jump @2553
      :                          @2479
 39719: 7b 19 b0 00              u64 [sp + 0xb0] = a2
 39723: 33 00 ea 02              ra = 0x2ea
 39727: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 39730: 7b 10 20                 u64 [sp + 0x20] = ra
 39733: 7b 15 18                 u64 [sp + 0x18] = s0
 39736: 64 85                    s0 = a1
 39738: 64 78                    a1 = a0
 39740: 64 17                    a0 = sp
 39742: 64 59                    a2 = s0
 39744: 33 00 0a 01              ra = 0x10a
 39748: 28 f6 8d                 jump @788
      :                          @2480 [@dyn 373]
 39751: 7b 17 90 00              u64 [sp + 0x90] = a0
 39755: 7b 18 98 00              u64 [sp + 0x98] = a1
 39759: 95 17 80 00              a0 = sp + 0x80
 39763: 7b 17 50 01              u64 [sp + 0x150] = a0
 39767: 33 07 50 03              a0 = 0x350
 39771: 7b 17 58 01              u64 [sp + 0x158] = a0
 39775: 95 18 88 00              a1 = sp + 0x88
 39779: 7b 18 60 01              u64 [sp + 0x160] = a1
 39783: 7b 17 68 01              u64 [sp + 0x168] = a0
 39787: 95 18 68 02              a1 = sp + 0x268
 39791: 7b 18 70 01              u64 [sp + 0x170] = a1
 39795: 7b 17 78 01              u64 [sp + 0x178] = a0
 39799: 95 18 b0 00              a1 = sp + 0xb0
 39803: 7b 18 80 01              u64 [sp + 0x180] = a1
 39807: 7b 17 88 01              u64 [sp + 0x188] = a0
 39811: 95 17 90 00              a0 = sp + 0x90
 39815: 7b 17 90 01              u64 [sp + 0x190] = a0
 39819: 33 07 f4 00              a0 = 0xf4
 39823: 7b 17 98 01              u64 [sp + 0x198] = a0
 39827: 33 07 c8 0a 01           a0 = 0x10ac8
 39832: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 39836: 49 21 00 01 05           u64 [sp + 256] = 0x5
 39841: 49 21 18 01              u64 [sp + 280] = 0
 39845: 95 18 50 01              a1 = sp + 0x150
 39849: 7b 18 08 01              u64 [sp + 0x108] = a1
 39853: 49 21 10 01 05           u64 [sp + 272] = 0x5
 39858: 95 17 c8 00              a0 = sp + 0xc8
 39862: 95 18 f8 00              a1 = sp + 0xf8
 39866: 50 20 ec 02 0b 84        ra = 748, jump @637
      :                          @2481 [@dyn 374]
 39872: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 39876: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 39880: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 39884: 33 07 02                 a0 = 0x2
 39887: 33 08                    a1 = 0
 39889: 33 09                    a2 = 0
 39891: 64 5a                    a3 = s0
 39893: 33 00 ee 02              ra = 0x2ee
 39897: 0a 64                    ecalli 100 // 'log'
 39899: 01                       fallthrough
      :                          @2482 [@dyn 375]
 39900: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 39905: 53 38 00 00 f0 c3 04     jump @2553 if a1 <u 4293918720
      :                          @2483
 39912: 33 07 10 01 03           a0 = 0x30110
 39917: 95 77 00 00 10           a0 = a0 + 0x100000
 39922: 01                       fallthrough
      :                          @2484
 39923: 82 78                    a1 = u64 [a0]
 39925: c9 87 09                 a2 = a0 - a1
 39928: ab 59 ac 04              jump @2553 if a2 != s0
      :                          @2485
 39932: c9 68 09                 a2 = a1 - s1
 39935: 01                       fallthrough
      :                          @2486
 39936: 82 7a                    a3 = u64 [a0]
 39938: ab 8a f1                 jump @2484 if a3 != a1
      :                          @2487
 39941: 7b 79                    u64 [a0] = a2
 39943: 33 0b                    a4 = 0
 39945: 01                       fallthrough
      :                          @2488
 39946: ab 8a e9                 jump @2484 if a3 != a1
      :                          @2489
 39949: 28 97 04                 jump @2553
      :                          @2490
 39952: 95 17 27                 a0 = sp + 0x27
 39955: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 39959: 33 07 84 03              a0 = 0x384
 39963: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 39967: 33 07 80 0e 01           a0 = 0x10e80
 39972: 7b 17 50 01              u64 [sp + 0x150] = a0
 39976: 49 21 58 01 01           u64 [sp + 344] = 0x1
 39981: 49 21 70 01              u64 [sp + 368] = 0
 39985: 95 18 c8 00              a1 = sp + 0xc8
 39989: 7b 18 60 01              u64 [sp + 0x160] = a1
 39993: 49 21 68 01 01           u64 [sp + 360] = 0x1
 39998: 95 17 f8 00              a0 = sp + 0xf8
 40002: 95 18 50 01              a1 = sp + 0x150
 40006: 50 20 f0 02 7f 83        ra = 752, jump @637
      :                          @2491 [@dyn 376]
 40012: 82 15 00 01              s0 = u64 [sp + 0x100]
 40016: 82 1b 08 01              a4 = u64 [sp + 0x108]
 40020: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 40024: 33 07 02                 a0 = 0x2
 40027: 33 08                    a1 = 0
 40029: 33 09                    a2 = 0
 40031: 64 5a                    a3 = s0
 40033: 33 00 f2 02              ra = 0x2f2
 40037: 0a 64                    ecalli 100 // 'log'
 40039: 01                       fallthrough
      :                          @2492 [@dyn 377]
 40040: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 40045: 53 38 00 00 f0 37 04     jump @2553 if a1 <u 4293918720
      :                          @2493
 40052: 33 07 10 01 03           a0 = 0x30110
 40057: 95 77 00 00 10           a0 = a0 + 0x100000
 40062: 01                       fallthrough
      :                          @2494
 40063: 82 78                    a1 = u64 [a0]
 40065: c9 87 09                 a2 = a0 - a1
 40068: ab 59 20 04              jump @2553 if a2 != s0
      :                          @2495
 40072: c9 68 09                 a2 = a1 - s1
 40075: 01                       fallthrough
      :                          @2496
 40076: 82 7a                    a3 = u64 [a0]
 40078: ab 8a f1                 jump @2494 if a3 != a1
      :                          @2497
 40081: 7b 79                    u64 [a0] = a2
 40083: 33 0b                    a4 = 0
 40085: 01                       fallthrough
      :                          @2498
 40086: ab 8a e9                 jump @2494 if a3 != a1
      :                          @2499
 40089: 28 0b 04                 jump @2553
      :                          @2500
 40092: 33 0a                    a3 = 0
 40094: 33 0b 01                 a4 = 0x1
 40097: 83 88                    i32 a1 = a1 + 0
 40099: 33 09 01                 a2 = 0x1
 40102: 01                       fallthrough
      :                          @2501
 40103: d8 87 0c                 a5 = a0 <u a1
 40106: 85 c6 01                 s1 = a5 ^ 0x1
 40109: be c7 07                 i32 a0 = a0 + a5
 40112: c8 9a 0c                 a5 = a3 + a2
 40115: d8 78 0a                 a3 = a1 <u a0
 40118: d4 a6 06                 s1 = s1 | a3
 40121: 64 9a                    a3 = a2
 40123: 64 b9                    a2 = a4
 40125: c8 cb 0b                 a4 = a4 + a5
 40128: 51 06 e7                 jump @2501 if s1 == 0
      :                          @2502
 40131: 7b 1b 90 00              u64 [sp + 0x90] = a4
 40135: 95 17 b0 00              a0 = sp + 0xb0
 40139: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 40143: 33 07 86 03              a0 = 0x386
 40147: 7b 17 00 01              u64 [sp + 0x100] = a0
 40151: 95 17 90 00              a0 = sp + 0x90
 40155: 7b 17 08 01              u64 [sp + 0x108] = a0
 40159: 33 07 50 03              a0 = 0x350
 40163: 7b 17 10 01              u64 [sp + 0x110] = a0
 40167: 33 07 58 01 01           a0 = 0x10158
 40172: 7b 17 50 01              u64 [sp + 0x150] = a0
 40176: 49 21 58 01 02           u64 [sp + 344] = 0x2
 40181: 49 21 70 01              u64 [sp + 368] = 0
 40185: 95 18 f8 00              a1 = sp + 0xf8
 40189: 7b 18 60 01              u64 [sp + 0x160] = a1
 40193: 49 21 68 01 02           u64 [sp + 360] = 0x2
 40198: 95 17 c8 00              a0 = sp + 0xc8
 40202: 95 18 50 01              a1 = sp + 0x150
 40206: 50 20 f4 02 b7 82        ra = 756, jump @637
      :                          @2503 [@dyn 378]
 40212: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 40216: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 40220: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 40224: 33 07 02                 a0 = 0x2
 40227: 33 08                    a1 = 0
 40229: 33 09                    a2 = 0
 40231: 64 5a                    a3 = s0
 40233: 33 00 f6 02              ra = 0x2f6
 40237: 0a 64                    ecalli 100 // 'log'
 40239: 01                       fallthrough
      :                          @2504 [@dyn 379]
 40240: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 40245: 53 38 00 00 f0 6f 03     jump @2553 if a1 <u 4293918720
      :                          @2505
 40252: 33 07 10 01 03           a0 = 0x30110
 40257: 95 77 00 00 10           a0 = a0 + 0x100000
 40262: 01                       fallthrough
      :                          @2506
 40263: 82 78                    a1 = u64 [a0]
 40265: c9 87 09                 a2 = a0 - a1
 40268: ab 59 58 03              jump @2553 if a2 != s0
      :                          @2507
 40272: c9 68 09                 a2 = a1 - s1
 40275: 01                       fallthrough
      :                          @2508
 40276: 82 7a                    a3 = u64 [a0]
 40278: ab 8a f1                 jump @2506 if a3 != a1
      :                          @2509
 40281: 7b 79                    u64 [a0] = a2
 40283: 33 0b                    a4 = 0
 40285: 01                       fallthrough
      :                          @2510
 40286: ab 8a e9                 jump @2506 if a3 != a1
      :                          @2511
 40289: 28 43 03                 jump @2553
      :                          @2512
 40292: 64 89                    a2 = a1
 40294: 01                       fallthrough
      :                          @2513
 40295: 7b 19 90 00              u64 [sp + 0x90] = a2
 40299: 95 17 68 02              a0 = sp + 0x268
 40303: 7b 17 50 01              u64 [sp + 0x150] = a0
 40307: 33 07 50 03              a0 = 0x350
 40311: 7b 17 58 01              u64 [sp + 0x158] = a0
 40315: 95 18 b0 00              a1 = sp + 0xb0
 40319: 7b 18 60 01              u64 [sp + 0x160] = a1
 40323: 7b 17 68 01              u64 [sp + 0x168] = a0
 40327: 95 18 90 00              a1 = sp + 0x90
 40331: 7b 18 70 01              u64 [sp + 0x170] = a1
 40335: 7b 17 78 01              u64 [sp + 0x178] = a0
 40339: 33 07 98 09 01           a0 = 0x10998
 40344: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 40348: 49 21 00 01 03           u64 [sp + 256] = 0x3
 40353: 49 21 18 01              u64 [sp + 280] = 0
 40357: 95 18 50 01              a1 = sp + 0x150
 40361: 7b 18 08 01              u64 [sp + 0x108] = a1
 40365: 49 21 10 01 03           u64 [sp + 272] = 0x3
 40370: 95 17 c8 00              a0 = sp + 0xc8
 40374: 95 18 f8 00              a1 = sp + 0xf8
 40378: 50 20 f8 02 0b 82        ra = 760, jump @637
      :                          @2514 [@dyn 380]
 40384: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 40388: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 40392: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 40396: 33 07 02                 a0 = 0x2
 40399: 33 08                    a1 = 0
 40401: 33 09                    a2 = 0
 40403: 64 5a                    a3 = s0
 40405: 33 00 fa 02              ra = 0x2fa
 40409: 0a 64                    ecalli 100 // 'log'
 40411: 01                       fallthrough
      :                          @2515 [@dyn 381]
 40412: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 40417: 53 38 00 00 f0 c3 02     jump @2553 if a1 <u 4293918720
      :                          @2516
 40424: 33 07 10 01 03           a0 = 0x30110
 40429: 95 77 00 00 10           a0 = a0 + 0x100000
 40434: 01                       fallthrough
      :                          @2517
 40435: 82 78                    a1 = u64 [a0]
 40437: c9 87 09                 a2 = a0 - a1
 40440: ab 59 ac 02              jump @2553 if a2 != s0
      :                          @2518
 40444: c9 68 09                 a2 = a1 - s1
 40447: 01                       fallthrough
      :                          @2519
 40448: 82 7a                    a3 = u64 [a0]
 40450: ab 8a f1                 jump @2517 if a3 != a1
      :                          @2520
 40453: 7b 79                    u64 [a0] = a2
 40455: 33 0b                    a4 = 0
 40457: 01                       fallthrough
      :                          @2521
 40458: ab 8a e9                 jump @2517 if a3 != a1
      :                          @2522
 40461: 28 97 02                 jump @2553
      :                          @2523
 40464: 48 21 4c 01 01           u32 [sp + 332] = 0x1
 40469: 33 07 c5 9d 1c 81        a0 = 0xffffffff811c9dc5
 40475: 01                       fallthrough
      :                          @2524
 40476: 7a 17 80 00              u32 [sp + 0x80] = a0
 40480: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 40485: 97 89 0d                 a2 = a1 << 0xd
 40488: d3 98 08                 a1 = a1 ^ a2
 40491: 98 89 07                 a2 = a1 >> 0x7
 40494: d3 98 08                 a1 = a1 ^ a2
 40497: 97 89 11                 a2 = a1 << 0x11
 40500: d3 98 08                 a1 = a1 ^ a2
 40503: 3e 08 e0 00 03           u64 [0x300e0] = a1
 40508: 87 87 1d dd 6c 4f        i32 a0 = a1 * 0x4f6cdd1d
 40514: 8b 78 10                 i32 a1 = a0 >> 0x10
 40517: d3 87 07                 a0 = a0 ^ a1
 40520: 87 77 6b ca eb 85        i32 a0 = a0 * 0xffffffff85ebca6b
 40526: 8b 78 0d                 i32 a1 = a0 >> 0xd
 40529: d3 78 08                 a1 = a1 ^ a0
 40532: 82 17 c0 00              a0 = u64 [sp + 0xc0]
 40536: 87 88 35 ae b2 c2        i32 a1 = a1 * 0xffffffffc2b2ae35
 40542: 8b 89 10                 i32 a2 = a1 >> 0x10
 40545: d3 98 08                 a1 = a1 ^ a2
 40548: 7a 18 88 00              u32 [sp + 0x88] = a1
 40552: 51 07 2b                 jump @2528 if a0 == 0
      :                          @2525
 40555: 82 19 b8 00              a2 = u64 [sp + 0xb8]
 40559: 33 08                    a1 = 0
 40561: 01                       fallthrough
      :                          @2526
 40562: 7c 9a                    a3 = u8 [a2]
 40564: 95 99 01                 a2 = a2 + 0x1
 40567: be a8 08                 i32 a1 = a1 + a3
 40570: 97 8a 0a                 a3 = a1 << 0xa
 40573: be a8 08                 i32 a1 = a1 + a3
 40576: 8b 8a 06                 i32 a3 = a1 >> 0x6
 40579: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 40582: d3 a8 08                 a1 = a1 ^ a3
 40585: 52 07 e9                 jump @2526 if a0 != 0
      :                          @2527
 40588: 97 87 03                 a0 = a1 << 0x3
 40591: be 87 07                 i32 a0 = a0 + a1
 40594: 01                       fallthrough
      :                          @2528
 40595: 8b 78 0b                 i32 a1 = a0 >> 0xb
 40598: d3 87 07                 a0 = a0 ^ a1
 40601: 97 78 0f                 a1 = a0 << 0xf
 40604: be 87 07                 i32 a0 = a0 + a1
 40607: 7a 17 68 02              u32 [sp + 0x268] = a0
 40611: 95 17 48 01              a0 = sp + 0x148
 40615: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 40619: 33 07 a2 03              a0 = 0x3a2
 40623: 7b 17 00 01              u64 [sp + 0x100] = a0
 40627: 95 18 4c 01              a1 = sp + 0x14c
 40631: 7b 18 08 01              u64 [sp + 0x108] = a1
 40635: 7b 17 10 01              u64 [sp + 0x110] = a0
 40639: 95 18 80 00              a1 = sp + 0x80
 40643: 7b 18 18 01              u64 [sp + 0x118] = a1
 40647: 7b 17 20 01              u64 [sp + 0x120] = a0
 40651: 95 18 88 00              a1 = sp + 0x88
 40655: 7b 18 28 01              u64 [sp + 0x128] = a1
 40659: 7b 17 30 01              u64 [sp + 0x130] = a0
 40663: 95 18 68 02              a1 = sp + 0x268
 40667: 7b 18 38 01              u64 [sp + 0x138] = a1
 40671: 7b 17 40 01              u64 [sp + 0x140] = a0
 40675: 49 21 50 01 02           u64 [sp + 336] = 0x2
 40680: 49 21 60 01              u64 [sp + 352] = 0
 40684: 49 21 68 01 08           u64 [sp + 360] = 0x8
 40689: 49 21 70 01              u64 [sp + 368] = 0
 40693: 14 09 20 00 00 00 08 00 00 00 a2 = 0x800000020
 40703: 7b 19 78 01              u64 [sp + 0x178] = a2
 40707: 46 21 80 01 03           u8 [sp + 384] = 0x3
 40712: 49 21 88 01 02           u64 [sp + 392] = 0x2
 40717: 49 21 98 01              u64 [sp + 408] = 0
 40721: 49 21 a0 01 08           u64 [sp + 416] = 0x8
 40726: 49 21 a8 01 01           u64 [sp + 424] = 0x1
 40731: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
 40735: 46 21 b8 01 03           u8 [sp + 440] = 0x3
 40740: 49 21 c0 01 02           u64 [sp + 448] = 0x2
 40745: 49 21 d0 01              u64 [sp + 464] = 0
 40749: 49 21 d8 01 08           u64 [sp + 472] = 0x8
 40754: 49 21 e0 01 02           u64 [sp + 480] = 0x2
 40759: 7b 19 e8 01              u64 [sp + 0x1e8] = a2
 40763: 46 21 f0 01 03           u8 [sp + 496] = 0x3
 40768: 49 21 f8 01 02           u64 [sp + 504] = 0x2
 40773: 49 21 08 02              u64 [sp + 520] = 0
 40777: 49 21 10 02 08           u64 [sp + 528] = 0x8
 40782: 49 21 18 02 03           u64 [sp + 536] = 0x3
 40787: 7b 19 20 02              u64 [sp + 0x220] = a2
 40791: 46 21 28 02 03           u8 [sp + 552] = 0x3
 40796: 49 21 30 02 02           u64 [sp + 560] = 0x2
 40801: 49 21 40 02              u64 [sp + 576] = 0
 40805: 49 21 48 02 08           u64 [sp + 584] = 0x8
 40810: 49 21 50 02 04           u64 [sp + 592] = 0x4
 40815: 7b 19 58 02              u64 [sp + 0x258] = a2
 40819: 46 21 60 02 03           u8 [sp + 608] = 0x3
 40824: 33 07 a0 0c 01           a0 = 0x10ca0
 40829: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 40833: 49 21 d0 00 05           u64 [sp + 208] = 0x5
 40838: 95 18 50 01              a1 = sp + 0x150
 40842: 7b 18 e8 00              u64 [sp + 0xe8] = a1
 40846: 49 21 f0 00 05           u64 [sp + 240] = 0x5
 40851: 95 18 f8 00              a1 = sp + 0xf8
 40855: 7b 18 d8 00              u64 [sp + 0xd8] = a1
 40859: 49 21 e0 00 05           u64 [sp + 224] = 0x5
 40864: 95 17 90 00              a0 = sp + 0x90
 40868: 95 18 c8 00              a1 = sp + 0xc8
 40872: 50 20 fc 02 1d 80        ra = 764, jump @637
      :                          @2529 [@dyn 382]
 40878: 82 15 98 00              s0 = u64 [sp + 0x98]
 40882: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 40886: 82 16 90 00              s1 = u64 [sp + 0x90]
 40890: 33 07 02                 a0 = 0x2
 40893: 33 08                    a1 = 0
 40895: 33 09                    a2 = 0
 40897: 64 5a                    a3 = s0
 40899: 33 00 fe 02              ra = 0x2fe
 40903: 0a 64                    ecalli 100 // 'log'
 40905: 01                       fallthrough
      :                          @2530 [@dyn 383]
 40906: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 40911: 53 38 00 00 f0 25        jump @2536 if a1 <u 4293918720
      :                          @2531
 40917: 33 07 10 01 03           a0 = 0x30110
 40922: 95 77 00 00 10           a0 = a0 + 0x100000
 40927: 01                       fallthrough
      :                          @2532
 40928: 82 78                    a1 = u64 [a0]
 40930: c9 87 09                 a2 = a0 - a1
 40933: ab 59 0f                 jump @2536 if a2 != s0
      :                          @2533
 40936: c9 68 09                 a2 = a1 - s1
 40939: 01                       fallthrough
      :                          @2534
 40940: 82 7a                    a3 = u64 [a0]
 40942: ab 8a f2                 jump @2532 if a3 != a1
      :                          @2535
 40945: 7b 79                    u64 [a0] = a2
 40947: 01                       fallthrough
      :                          @2536
 40948: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 40952: 51 07 ac 00              jump @2553 if a0 == 0
      :                          @2537
 40956: 56 37 00 00 10 a8 00     jump @2553 if a0 >u 1048576
      :                          @2538
 40963: 82 18 b8 00              a1 = u64 [sp + 0xb8]
 40967: 33 0a 10 01 03           a3 = 0x30110
 40972: 95 a9 00 00 10           a2 = a3 + 0x100000
 40977: 01                       fallthrough
      :                          @2539
 40978: 82 9a                    a3 = u64 [a2]
 40980: c9 a9 0b                 a4 = a2 - a3
 40983: ab 8b 8d 00              jump @2553 if a4 != a1
      :                          @2540
 40987: c9 7a 0b                 a4 = a3 - a0
 40990: 01                       fallthrough
      :                          @2541
 40991: 82 9c                    a5 = u64 [a2]
 40993: ab ac f1                 jump @2539 if a5 != a3
      :                          @2542
 40996: 7b 9b                    u64 [a2] = a4
 40998: 33 06                    s1 = 0
 41000: 01                       fallthrough
      :                          @2543
 41001: ab ac e9                 jump @2539 if a5 != a3
      :                          @2544
 41004: 28 78                    jump @2553
      :                          @2545
 41006: 33 07 60 0e 01           a0 = 0x10e60
 41011: 7b 17 50 01              u64 [sp + 0x150] = a0
 41015: 49 21 58 01 01           u64 [sp + 344] = 0x1
 41020: 49 21 70 01              u64 [sp + 368] = 0
 41024: 33 07 a8 10 01           a0 = 0x110a8
 41029: 7b 17 60 01              u64 [sp + 0x160] = a0
 41033: 49 21 68 01              u64 [sp + 360] = 0
 41037: 95 17 f8 00              a0 = sp + 0xf8
 41041: 95 18 50 01              a1 = sp + 0x150
 41045: 50 20 00 03 70 7f ff     ra = 768, jump @637
      :                          @2546 [@dyn 384]
 41052: 82 15 00 01              s0 = u64 [sp + 0x100]
 41056: 82 1b 08 01              a4 = u64 [sp + 0x108]
 41060: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 41064: 33 07 02                 a0 = 0x2
 41067: 33 08                    a1 = 0
 41069: 33 09                    a2 = 0
 41071: 64 5a                    a3 = s0
 41073: 33 00 02 03              ra = 0x302
 41077: 0a 64                    ecalli 100 // 'log'
 41079: 01                       fallthrough
      :                          @2547 [@dyn 385]
 41080: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 41085: 53 38 00 00 f0 27        jump @2553 if a1 <u 4293918720
      :                          @2548
 41091: 33 07 10 01 03           a0 = 0x30110
 41096: 95 77 00 00 10           a0 = a0 + 0x100000
 41101: 01                       fallthrough
      :                          @2549
 41102: 82 78                    a1 = u64 [a0]
 41104: c9 87 09                 a2 = a0 - a1
 41107: ab 59 11                 jump @2553 if a2 != s0
      :                          @2550
 41110: c9 68 09                 a2 = a1 - s1
 41113: 01                       fallthrough
      :                          @2551
 41114: 82 7a                    a3 = u64 [a0]
 41116: ab 8a f2                 jump @2549 if a3 != a1
      :                          @2552
 41119: 7b 79                    u64 [a0] = a2
 41121: 0a                       ecalli 0 // 'gas'
 41122: 28 04                    jump @2554
      :                          @2553
 41124: 0a                       ecalli 0 // 'gas'
 41125: 01                       fallthrough
      :                          @2554
 41126: 82 18 18                 a1 = u64 [sp + 0x18]
 41129: c9 78 07                 a0 = a1 - a0
 41132: 82 10 80 02              ra = u64 [sp + 0x280]
 41136: 82 15 78 02              s0 = u64 [sp + 0x278]
 41140: 82 16 70 02              s1 = u64 [sp + 0x270]
 41144: 95 11 88 02              sp = sp + 0x288
 41148: 32 00                    ret
      :                          @2555
 41150: 00                       trap
      :                          @2556
 41151: 00                       trap
      :                          @2557
 41152: 00                       trap
      :                          @2558
 41153: 00                       trap
      :                          @2559 [export #0: 'refine']
 41154: 95 11 e0 fe              sp = sp + 0xfffffffffffffee0
 41158: 7b 10 18 01              u64 [sp + 0x118] = ra
 41162: 7b 15 10 01              u64 [sp + 0x110] = s0
 41166: 7b 16 08 01              u64 [sp + 0x108] = s1
 41170: 64 85                    s0 = a1
 41172: 64 7a                    a3 = a0
 41174: 33 07 00 00 01           a0 = 0x10000
 41179: 53 15 04 43              jump @2568 if s0 <u 4
      :                          @2560
 41183: 7d a8                    a1 = i8 [a3]
 41185: 33 06 01                 s1 = 0x1
 41188: 59 08 37                 jump @2567 if a1 >=s 0
      :                          @2561
 41191: 84 89 ff 00              a2 = a1 & 0xff
 41195: 33 06 02                 s1 = 0x2
 41198: 53 29 c0 00 2d           jump @2567 if a2 <u 192
      :                          @2562
 41203: 33 06 03                 s1 = 0x3
 41206: 53 29 e0 00 25           jump @2567 if a2 <u 224
      :                          @2563
 41211: 33 06 04                 s1 = 0x4
 41214: 53 29 f0 00 1d           jump @2567 if a2 <u 240
      :                          @2564
 41219: 33 06 05                 s1 = 0x5
 41222: 53 29 f8 00 15           jump @2567 if a2 <u 248
      :                          @2565
 41227: 33 06 06                 s1 = 0x6
 41230: 53 29 fc 00 0d           jump @2567 if a2 <u 252
      :                          @2566
 41235: 88 98 fe 00              a1 = a2 <u 0xfe
 41239: 9a 86 08                 s1 = 0x8 - a1
 41242: 01                       fallthrough
      :                          @2567
 41243: ae 65 08                 jump @2569 if s0 >=u s1
      :                          @2568
 41246: 33 08                    a1 = 0
 41248: 28 e2 00                 jump @2594
      :                          @2569
 41251: 64 a7                    a0 = a3
 41253: 64 68                    a1 = s1
 41255: 7b 1a 60                 u64 [sp + 0x60] = a3
 41258: 50 20 04 03 6d 22        ra = 772, jump @3190
      :                          @2570 [@dyn 386]
 41264: aa 65 ca 00              jump @2593 if s0 == s1
      :                          @2571
 41268: 82 17 60                 a0 = u64 [sp + 0x60]
 41271: c8 67 07                 a0 = a0 + s1
 41274: 7d 78                    a1 = i8 [a0]
 41276: c9 65 06                 s1 = s0 - s1
 41279: 33 05 01                 s0 = 0x1
 41282: 59 08 37                 jump @2578 if a1 >=s 0
      :                          @2572
 41285: 84 89 ff 00              a2 = a1 & 0xff
 41289: 33 05 02                 s0 = 0x2
 41292: 53 29 c0 00 2d           jump @2578 if a2 <u 192
      :                          @2573
 41297: 33 05 03                 s0 = 0x3
 41300: 53 29 e0 00 25           jump @2578 if a2 <u 224
      :                          @2574
 41305: 33 05 04                 s0 = 0x4
 41308: 53 29 f0 00 1d           jump @2578 if a2 <u 240
      :                          @2575
 41313: 33 05 05                 s0 = 0x5
 41316: 53 29 f8 00 15           jump @2578 if a2 <u 248
      :                          @2576
 41321: 33 05 06                 s0 = 0x6
 41324: 53 29 fc 00 0d           jump @2578 if a2 <u 252
      :                          @2577
 41329: 88 98 fe 00              a1 = a2 <u 0xfe
 41333: 9a 85 08                 s0 = 0x8 - a1
 41336: 01                       fallthrough
      :                          @2578
 41337: ac 56 81 00              jump @2593 if s1 <u s0
      :                          @2579
 41341: 64 58                    a1 = s0
 41343: 7b 17 60                 u64 [sp + 0x60] = a0
 41346: 50 20 06 03 15 22        ra = 774, jump @3190
      :                          @2580 [@dyn 387]
 41352: 82 17 60                 a0 = u64 [sp + 0x60]
 41355: c8 57 07                 a0 = a0 + s0
 41358: 7b 17 60                 u64 [sp + 0x60] = a0
 41361: ab 56 0b                 jump @2582 if s1 != s0
      :                          @2581
 41364: 33 08                    a1 = 0
 41366: 33 06                    s1 = 0
 41368: 33 07                    a0 = 0
 41370: 28 56                    jump @2592
      :                          @2582
 41372: 7d 78                    a1 = i8 [a0]
 41374: c9 56 05                 s0 = s1 - s0
 41377: 33 06 01                 s1 = 0x1
 41380: 59 08 37                 jump @2589 if a1 >=s 0
      :                          @2583
 41383: 84 89 ff 00              a2 = a1 & 0xff
 41387: 33 06 02                 s1 = 0x2
 41390: 53 29 c0 00 2d           jump @2589 if a2 <u 192
      :                          @2584
 41395: 33 06 03                 s1 = 0x3
 41398: 53 29 e0 00 25           jump @2589 if a2 <u 224
      :                          @2585
 41403: 33 06 04                 s1 = 0x4
 41406: 53 29 f0 00 1d           jump @2589 if a2 <u 240
      :                          @2586
 41411: 33 06 05                 s1 = 0x5
 41414: 53 29 f8 00 15           jump @2589 if a2 <u 248
      :                          @2587
 41419: 33 06 06                 s1 = 0x6
 41422: 53 29 fc 00 0d           jump @2589 if a2 <u 252
      :                          @2588
 41427: 88 99 fe 00              a2 = a2 <u 0xfe
 41431: 9a 96 08                 s1 = 0x8 - a2
 41434: 01                       fallthrough
      :                          @2589
 41435: ac 65 00 03              jump @2633 if s0 <u s1
      :                          @2590
 41439: 64 68                    a1 = s1
 41441: 50 20 08 03 b6 21        ra = 776, jump @3190
      :                          @2591 [@dyn 388]
 41447: e4 65 08                 a1 = maxu(s0, s1)
 41450: c9 68 08                 a1 = a1 - s1
 41453: ac 78 0d                 jump @2593 if a1 <u a0
      :                          @2592
 41456: e4 78 08                 a1 = maxu(a1, a0)
 41459: c9 78 09                 a2 = a1 - a0
 41462: 55 19 20 1e              jump @2595 if a2 >=u 32
      :                          @2593
 41466: 33 08                    a1 = 0
 41468: 33 07 00 00 01           a0 = 0x10000
 41473: 01                       fallthrough
      :                          @2594
 41474: 82 10 18 01              ra = u64 [sp + 0x118]
 41478: 82 15 10 01              s0 = u64 [sp + 0x110]
 41482: 82 16 08 01              s1 = u64 [sp + 0x108]
 41486: 95 11 20 01              sp = sp + 0x120
 41490: 32 00                    ret
      :                          @2595
 41492: 7b 16 50                 u64 [sp + 0x50] = s1
 41495: 49 11 58 ff ff ef        u64 [sp + 88] = 0xffffffffffefffff
 41501: 7b 17 68                 u64 [sp + 0x68] = a0
 41504: 7b 17 28                 u64 [sp + 0x28] = a0
 41507: 98 77 01                 a0 = a0 >> 0x1
 41510: 7b 17 70                 u64 [sp + 0x70] = a0
 41513: 95 17 68                 a0 = sp + 0x68
 41516: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 41520: 33 07 50 03              a0 = 0x350
 41524: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 41528: 95 18 70                 a1 = sp + 0x70
 41531: 7b 18 b8 00              u64 [sp + 0xb8] = a1
 41535: 7b 17 c0 00              u64 [sp + 0xc0] = a0
 41539: 33 07 98 0e 01           a0 = 0x10e98
 41544: 7b 17 d8 00              u64 [sp + 0xd8] = a0
 41548: 49 21 e0 00 02           u64 [sp + 224] = 0x2
 41553: 49 21 f8 00              u64 [sp + 248] = 0
 41557: 95 18 a8 00              a1 = sp + 0xa8
 41561: 7b 18 e8 00              u64 [sp + 0xe8] = a1
 41565: 49 21 f0 00 02           u64 [sp + 240] = 0x2
 41570: 95 17 90 00              a0 = sp + 0x90
 41574: 95 18 d8 00              a1 = sp + 0xd8
 41578: 50 20 0a 03 73 0c        ra = 778, jump @2789
      :                          @2596 [@dyn 389]
 41584: 82 15 98 00              s0 = u64 [sp + 0x98]
 41588: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 41592: 82 16 90 00              s1 = u64 [sp + 0x90]
 41596: 33 07 02                 a0 = 0x2
 41599: 33 08                    a1 = 0
 41601: 33 09                    a2 = 0
 41603: 64 5a                    a3 = s0
 41605: 33 00 0c 03              ra = 0x30c
 41609: 0a 64                    ecalli 100 // 'log'
 41611: 01                       fallthrough
      :                          @2597 [@dyn 390]
 41612: 82 17 58                 a0 = u64 [sp + 0x58]
 41615: c8 67 07                 a0 = a0 + s1
 41618: 53 37 00 00 f0 27        jump @2603 if a0 <u 4293918720
      :                          @2598
 41624: 33 07 10 01 03           a0 = 0x30110
 41629: 95 77 00 00 10           a0 = a0 + 0x100000
 41634: 01                       fallthrough
      :                          @2599
 41635: 82 78                    a1 = u64 [a0]
 41637: c9 87 09                 a2 = a0 - a1
 41640: ab 59 11                 jump @2603 if a2 != s0
      :                          @2600
 41643: c9 68 09                 a2 = a1 - s1
 41646: 01                       fallthrough
      :                          @2601
 41647: 82 7a                    a3 = u64 [a0]
 41649: ab 8a f2                 jump @2599 if a3 != a1
      :                          @2602
 41652: 7b 79                    u64 [a0] = a2
 41654: 33 0b                    a4 = 0
 41656: 01                       fallthrough
      :                          @2603
 41657: 82 17 70                 a0 = u64 [sp + 0x70]
 41660: 7b 17 20                 u64 [sp + 0x20] = a0
 41663: 51 07 02 02              jump @2630 if a0 == 0
      :                          @2604
 41667: 49 11 30                 u64 [sp + 48] = 0
 41670: 33 0a                    a3 = 0
 41672: 82 17 60                 a0 = u64 [sp + 0x60]
 41675: 82 1b 50                 a4 = u64 [sp + 0x50]
 41678: c8 7b 0b                 a4 = a4 + a0
 41681: 33 07 84 03              a0 = 0x384
 41685: 7b 17 50                 u64 [sp + 0x50] = a0
 41688: 33 07 50 03              a0 = 0x350
 41692: 7b 17 48                 u64 [sp + 0x48] = a0
 41695: 33 07 d0 0e 01           a0 = 0x10ed0
 41700: 7b 17 10                 u64 [sp + 0x10] = a0
 41703: 33 07 e9 00 03           a0 = 0x300e9
 41708: 7b 17                    u64 [sp] = a0
 41710: 33 07 10 01 03           a0 = 0x30110
 41715: 95 7c 00 00 10           a5 = a0 + 0x100000
 41720: 33 07 08 0f 01           a0 = 0x10f08
 41725: 7b 17 08                 u64 [sp + 0x8] = a0
 41728: 7b 1b 18                 u64 [sp + 0x18] = a4
 41731: 7b 1c 40                 u64 [sp + 0x40] = a5
 41734: 28 12                    jump @2606
      :                          @2605
 41736: 82 1a 60                 a3 = u64 [sp + 0x60]
 41739: 95 aa 01                 a3 = a3 + 0x1
 41742: 82 17 20                 a0 = u64 [sp + 0x20]
 41745: 82 1b 18                 a4 = u64 [sp + 0x18]
 41748: aa 7a bb 01              jump @2631 if a3 == a0
      :                          @2606
 41752: 97 a7 01                 a0 = a3 << 0x1
 41755: 82 18 28                 a1 = u64 [sp + 0x28]
 41758: ae 87 bc 01              jump @2632 if a0 >=u a1
      :                          @2607
 41762: c8 7b 09                 a2 = a4 + a0
 41765: 7c 99                    a2 = u8 [a2]
 41767: 86 77 01                 a0 = a0 | 0x1
 41770: 78 19 7f                 u8 [sp + 0x7f] = a2
 41773: ae 87 ad 01              jump @2632 if a0 >=u a1
      :                          @2608
 41777: 7b 19 38                 u64 [sp + 0x38] = a2
 41780: 7b 1a 60                 u64 [sp + 0x60] = a3
 41783: c8 b7 07                 a0 = a0 + a4
 41786: 7c 77                    a0 = u8 [a0]
 41788: ca 77 08                 a1 = a0 * a0
 41791: ca 78 07                 a0 = a1 * a0
 41794: 7b 17 80 00              u64 [sp + 0x80] = a0
 41798: 95 17 7f                 a0 = sp + 0x7f
 41801: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 41805: 82 17 50                 a0 = u64 [sp + 0x50]
 41808: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 41812: 95 17 80 00              a0 = sp + 0x80
 41816: 7b 17 b8 00              u64 [sp + 0xb8] = a0
 41820: 82 17 48                 a0 = u64 [sp + 0x48]
 41823: 7b 17 c0 00              u64 [sp + 0xc0] = a0
 41827: 82 17 10                 a0 = u64 [sp + 0x10]
 41830: 7b 17 d8 00              u64 [sp + 0xd8] = a0
 41834: 49 21 e0 00 02           u64 [sp + 224] = 0x2
 41839: 49 21 f8 00              u64 [sp + 248] = 0
 41843: 95 18 a8 00              a1 = sp + 0xa8
 41847: 7b 18 e8 00              u64 [sp + 0xe8] = a1
 41851: 49 21 f0 00 02           u64 [sp + 240] = 0x2
 41856: 95 17 90 00              a0 = sp + 0x90
 41860: 95 18 d8 00              a1 = sp + 0xd8
 41864: 50 20 0e 03 55 0b        ra = 782, jump @2789
      :                          @2609 [@dyn 391]
 41870: 82 16 98 00              s1 = u64 [sp + 0x98]
 41874: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 41878: 82 15 90 00              s0 = u64 [sp + 0x90]
 41882: 33 07 02                 a0 = 0x2
 41885: 33 08                    a1 = 0
 41887: 33 09                    a2 = 0
 41889: 64 6a                    a3 = s1
 41891: 33 00 10 03              ra = 0x310
 41895: 0a 64                    ecalli 100 // 'log'
 41897: 01                       fallthrough
      :                          @2610 [@dyn 392]
 41898: 82 1b 40                 a4 = u64 [sp + 0x40]
 41901: 82 17 58                 a0 = u64 [sp + 0x58]
 41904: c8 57 07                 a0 = a0 + s0
 41907: 53 37 00 00 f0 1a        jump @2615 if a0 <u 4293918720
      :                          @2611
 41913: 82 b7                    a0 = u64 [a4]
 41915: c9 7b 08                 a1 = a4 - a0
 41918: ab 68 0f                 jump @2615 if a1 != s1
      :                          @2612
 41921: c9 57 08                 a1 = a0 - s0
 41924: 01                       fallthrough
      :                          @2613
 41925: 82 b9                    a2 = u64 [a4]
 41927: ab 79 f2                 jump @2611 if a2 != a0
      :                          @2614
 41930: 7b b8                    u64 [a4] = a1
 41932: 01                       fallthrough
      :                          @2615
 41933: 82 15 80 00              s0 = u64 [sp + 0x80]
 41937: 49 21 88 00              u64 [sp + 136] = 0
 41941: 51 05 34                 jump @2619 if s0 == 0
      :                          @2616
 41944: 82 18 38                 a1 = u64 [sp + 0x38]
 41947: 88 87 aa 00              a0 = a1 <u 0xaa
 41951: 33 06 56                 s1 = 0x56
 41954: 94 76                    s1 = 0 if a0 != 0
 41956: c8 86 06                 s1 = s1 + a1
 41959: 64 67                    a0 = s1
 41961: 33 00 12 03              ra = 0x312
 41965: 28 15 b0                 jump @1709
      :                          @2617
 41968: 64 67                    a0 = s1
 41970: 50 20 12 03 10 b0        ra = 786, jump @1709
      :                          @2618 [@dyn 393]
 41976: 82 18 88 00              a1 = u64 [sp + 0x88]
 41980: c8 87 07                 a0 = a0 + a1
 41983: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 41986: 7b 17 88 00              u64 [sp + 0x88] = a0
 41990: 52 05 ea                 jump @2617 if s0 != 0
      :                          @2619
 41993: 82 18 60                 a1 = u64 [sp + 0x60]
 41996: 55 18 20 18              jump @2621 if a1 >=u 32
      :                          @2620
 42000: 7c 17 7f                 a0 = u8 [sp + 0x7f]
 42003: 82 19                    a2 = u64 [sp]
 42005: c8 98 08                 a1 = a1 + a2
 42008: 78 87                    u8 [a1] = a0
 42010: 82 17 30                 a0 = u64 [sp + 0x30]
 42013: 95 77 01                 a0 = a0 + 0x1
 42016: 7b 17 30                 u64 [sp + 0x30] = a0
 42019: 01                       fallthrough
      :                          @2621
 42020: 95 17 7f                 a0 = sp + 0x7f
 42023: 7b 17 d8 00              u64 [sp + 0xd8] = a0
 42027: 82 17 50                 a0 = u64 [sp + 0x50]
 42030: 7b 17 e0 00              u64 [sp + 0xe0] = a0
 42034: 95 17 80 00              a0 = sp + 0x80
 42038: 7b 17 e8 00              u64 [sp + 0xe8] = a0
 42042: 82 17 48                 a0 = u64 [sp + 0x48]
 42045: 7b 17 f0 00              u64 [sp + 0xf0] = a0
 42049: 95 18 88 00              a1 = sp + 0x88
 42053: 7b 18 f8 00              u64 [sp + 0xf8] = a1
 42057: 7b 17 00 01              u64 [sp + 0x100] = a0
 42061: 82 17 08                 a0 = u64 [sp + 0x8]
 42064: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 42068: 49 21 b0 00 03           u64 [sp + 176] = 0x3
 42073: 49 21 c8 00              u64 [sp + 200] = 0
 42077: 95 17 d8 00              a0 = sp + 0xd8
 42081: 7b 17 b8 00              u64 [sp + 0xb8] = a0
 42085: 49 21 c0 00 03           u64 [sp + 192] = 0x3
 42090: 95 17 90 00              a0 = sp + 0x90
 42094: 95 18 a8 00              a1 = sp + 0xa8
 42098: 50 20 14 03 6b 0a        ra = 788, jump @2789
      :                          @2622 [@dyn 394]
 42104: 82 16 98 00              s1 = u64 [sp + 0x98]
 42108: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 42112: 82 15 90 00              s0 = u64 [sp + 0x90]
 42116: 33 07 02                 a0 = 0x2
 42119: 33 08                    a1 = 0
 42121: 33 09                    a2 = 0
 42123: 64 6a                    a3 = s1
 42125: 33 00 16 03              ra = 0x316
 42129: 0a 64                    ecalli 100 // 'log'
 42131: 01                       fallthrough
      :                          @2623 [@dyn 395]
 42132: 82 17 58                 a0 = u64 [sp + 0x58]
 42135: c8 57 07                 a0 = a0 + s0
 42138: 82 1c 40                 a5 = u64 [sp + 0x40]
 42141: 53 37 00 00 f0 6b fe     jump @2605 if a0 <u 4293918720
      :                          @2624
 42148: 82 c7                    a0 = u64 [a5]
 42150: c9 7c 08                 a1 = a5 - a0
 42153: ab 68 5f fe              jump @2605 if a1 != s1
      :                          @2625
 42157: c9 57 08                 a1 = a0 - s0
 42160: 01                       fallthrough
      :                          @2626
 42161: 82 c9                    a2 = u64 [a5]
 42163: ab 79 f1                 jump @2624 if a2 != a0
      :                          @2627
 42166: 7b c8                    u64 [a5] = a1
 42168: 33 0a                    a3 = 0
 42170: 01                       fallthrough
      :                          @2628
 42171: ab 79 e9                 jump @2624 if a2 != a0
      :                          @2629
 42174: 28 4a fe                 jump @2605
      :                          @2630
 42177: 49 11 30                 u64 [sp + 48] = 0
 42180: 33 07 e9 00 03           a0 = 0x300e9
 42185: 82 18 30                 a1 = u64 [sp + 0x30]
 42188: 28 36 fd                 jump @2594
      :                          @2631
 42191: 33 07 e9 00 03           a0 = 0x300e9
 42196: 82 18 30                 a1 = u64 [sp + 0x30]
 42199: 28 2b fd                 jump @2594
      :                          @2632
 42202: 00                       trap
      :                          @2633
 42203: 00                       trap
      :                          @2634 [export #1: 'accumulate']
 42204: 95 11 38 ff              sp = sp + 0xffffffffffffff38
 42208: 7b 10 c0 00              u64 [sp + 0xc0] = ra
 42212: 7b 15 b8 00              u64 [sp + 0xb8] = s0
 42216: 7b 16 b0 00              u64 [sp + 0xb0] = s1
 42220: 33 05 00 00 01           s0 = 0x10000
 42225: 51 08 a3 00              jump @2654 if a1 == 0
      :                          @2635
 42229: 64 86                    s1 = a1
 42231: 7d 78                    a1 = i8 [a0]
 42233: 33 05 01                 s0 = 0x1
 42236: 59 08 37                 jump @2642 if a1 >=s 0
      :                          @2636
 42239: 84 89 ff 00              a2 = a1 & 0xff
 42243: 33 05 02                 s0 = 0x2
 42246: 53 29 c0 00 2d           jump @2642 if a2 <u 192
      :                          @2637
 42251: 33 05 03                 s0 = 0x3
 42254: 53 29 e0 00 25           jump @2642 if a2 <u 224
      :                          @2638
 42259: 33 05 04                 s0 = 0x4
 42262: 53 29 f0 00 1d           jump @2642 if a2 <u 240
      :                          @2639
 42267: 33 05 05                 s0 = 0x5
 42270: 53 29 f8 00 15           jump @2642 if a2 <u 248
      :                          @2640
 42275: 33 05 06                 s0 = 0x6
 42278: 53 29 fc 00 0d           jump @2642 if a2 <u 252
      :                          @2641
 42283: 88 98 fe 00              a1 = a2 <u 0xfe
 42287: 9a 85 08                 s0 = 0x8 - a1
 42290: 01                       fallthrough
      :                          @2642
 42291: ac 56 59                 jump @2653 if s1 <u s0
      :                          @2643
 42294: 64 58                    a1 = s0
 42296: 7b 17 38                 u64 [sp + 0x38] = a0
 42299: 50 20 18 03 5c 1e        ra = 792, jump @3190
      :                          @2644 [@dyn 396]
 42305: aa 56 4b                 jump @2653 if s1 == s0
      :                          @2645
 42308: 82 17 38                 a0 = u64 [sp + 0x38]
 42311: c8 57 07                 a0 = a0 + s0
 42314: 7d 78                    a1 = i8 [a0]
 42316: c9 56 06                 s1 = s1 - s0
 42319: 33 05 01                 s0 = 0x1
 42322: 59 08 37                 jump @2652 if a1 >=s 0
      :                          @2646
 42325: 84 89 ff 00              a2 = a1 & 0xff
 42329: 33 05 02                 s0 = 0x2
 42332: 53 29 c0 00 2d           jump @2652 if a2 <u 192
      :                          @2647
 42337: 33 05 03                 s0 = 0x3
 42340: 53 29 e0 00 25           jump @2652 if a2 <u 224
      :                          @2648
 42345: 33 05 04                 s0 = 0x4
 42348: 53 29 f0 00 1d           jump @2652 if a2 <u 240
      :                          @2649
 42353: 33 05 05                 s0 = 0x5
 42356: 53 29 f8 00 15           jump @2652 if a2 <u 248
      :                          @2650
 42361: 33 05 06                 s0 = 0x6
 42364: 53 29 fc 00 0d           jump @2652 if a2 <u 252
      :                          @2651
 42369: 88 98 fe 00              a1 = a2 <u 0xfe
 42373: 9a 85 08                 s0 = 0x8 - a1
 42376: 01                       fallthrough
      :                          @2652
 42377: ae 56 1f                 jump @2655 if s1 >=u s0
      :                          @2653
 42380: 33 08                    a1 = 0
 42382: 33 05 00 00 01           s0 = 0x10000
 42387: 01                       fallthrough
      :                          @2654
 42388: 64 57                    a0 = s0
 42390: 82 10 c0 00              ra = u64 [sp + 0xc0]
 42394: 82 15 b8 00              s0 = u64 [sp + 0xb8]
 42398: 82 16 b0 00              s1 = u64 [sp + 0xb0]
 42402: 95 11 c8 00              sp = sp + 0xc8
 42406: 32 00                    ret
      :                          @2655
 42408: 64 58                    a1 = s0
 42410: 7b 16 38                 u64 [sp + 0x38] = s1
 42413: 64 76                    s1 = a0
 42415: 50 20 1a 03 e8 1d        ra = 794, jump @3190
      :                          @2656 [@dyn 397]
 42421: c8 65 07                 a0 = s0 + s1
 42424: 82 16 38                 s1 = u64 [sp + 0x38]
 42427: ab 56 0c                 jump @2658 if s1 != s0
      :                          @2657
 42430: 33 08                    a1 = 0
 42432: 33 00 1c 03              ra = 0x31c
 42436: 28 d3 1d                 jump @3190
      :                          @2658
 42439: 7d 79                    a2 = i8 [a0]
 42441: c9 56 06                 s1 = s1 - s0
 42444: 33 08 01                 a1 = 0x1
 42447: 59 09 44                 jump @2665 if a2 >=s 0
      :                          @2659
 42450: 84 99 ff 00              a2 = a2 & 0xff
 42454: 33 0a c0 00              a3 = 0xc0
 42458: 33 08 02                 a1 = 0x2
 42461: ac a9 36                 jump @2665 if a2 <u a3
      :                          @2660
 42464: 33 0a e0 00              a3 = 0xe0
 42468: 33 08 03                 a1 = 0x3
 42471: ac a9 2c                 jump @2665 if a2 <u a3
      :                          @2661
 42474: 33 0a f0 00              a3 = 0xf0
 42478: 33 08 04                 a1 = 0x4
 42481: ac a9 22                 jump @2665 if a2 <u a3
      :                          @2662
 42484: 33 0a f8 00              a3 = 0xf8
 42488: 33 08 05                 a1 = 0x5
 42491: ac a9 18                 jump @2665 if a2 <u a3
      :                          @2663
 42494: 33 0a fc 00              a3 = 0xfc
 42498: 33 08 06                 a1 = 0x6
 42501: ac a9 0e                 jump @2665 if a2 <u a3
      :                          @2664
 42504: 88 98 fe 00              a1 = a2 <u 0xfe
 42508: 33 09 08                 a2 = 0x8
 42511: c9 89 08                 a1 = a2 - a1
 42514: 01                       fallthrough
      :                          @2665
 42515: 33 05 00 00 01           s0 = 0x10000
 42520: ae 86 08                 jump @2667 if s1 >=u a1
      :                          @2666
 42523: 33 08                    a1 = 0
 42525: 28 77 ff                 jump @2654
      :                          @2667
 42528: 50 20 1c 03 77 1d        ra = 796, jump @3190
      :                          @2668 [@dyn 398]
 42534: 83 79                    i32 a2 = a0 + 0
 42536: 51 09 ff 00              jump @2681 if a2 == 0
      :                          @2669
 42540: 33 0b                    a4 = 0
 42542: 14 09 ff ff ff ff 00 00 00 00 a2 = 0xffffffff
 42552: d2 97 07                 a0 = a0 & a2
 42555: 7b 17 20                 u64 [sp + 0x20] = a0
 42558: 33 05 e9 00 03           s0 = 0x300e9
 42563: 33 07 28                 a0 = 0x28
 42566: 7b 17 18                 u64 [sp + 0x18] = a0
 42569: 33 07 50 03              a0 = 0x350
 42573: 7b 17 10                 u64 [sp + 0x10] = a0
 42576: 33 07 38 0f 01           a0 = 0x10f38
 42581: 7b 17 08                 u64 [sp + 0x8] = a0
 42584: 33 06 10 01 03           s1 = 0x30110
 42589: 95 66 00 00 10           s1 = s1 + 0x100000
 42594: 49 01 ff ff ef           u64 [sp + 0] = 0xffffffffffefffff
 42599: 7b 15 28                 u64 [sp + 0x28] = s0
 42602: 28 23                    jump @2672
      :                          @2670
 42604: 46 11 60                 u8 [sp + 96] = 0
 42607: 95 17 60                 a0 = sp + 0x60
 42610: 33 08 01                 a1 = 0x1
 42613: 33 0a 08                 a3 = 0x8
 42616: 82 15 28                 s0 = u64 [sp + 0x28]
 42619: 64 59                    a2 = s0
 42621: 0a 04                    ecalli 4 // 'write'
 42623: 01                       fallthrough
      :                          @2671
 42624: 82 1b 38                 a4 = u64 [sp + 0x38]
 42627: 95 bb 01                 a4 = a4 + 0x1
 42630: 82 17 20                 a0 = u64 [sp + 0x20]
 42633: aa 7b a9 00              jump @2682 if a4 == a0
      :                          @2672
 42637: 33 09 20                 a2 = 0x20
 42640: 33 0a 0f                 a3 = 0xf
 42643: 64 57                    a0 = s0
 42645: 33 08                    a1 = 0
 42647: 7b 1b 38                 u64 [sp + 0x38] = a4
 42650: 33 0c                    a5 = 0
 42652: 0a 01                    ecalli 1 // 'fetch'
 42654: 7b 17 40                 u64 [sp + 0x40] = a0
 42657: 7b 15 90 00              u64 [sp + 0x90] = s0
 42661: 82 17 18                 a0 = u64 [sp + 0x18]
 42664: 7b 17 98 00              u64 [sp + 0x98] = a0
 42668: 95 17 40                 a0 = sp + 0x40
 42671: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 42675: 82 17 10                 a0 = u64 [sp + 0x10]
 42678: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 42682: 82 17 08                 a0 = u64 [sp + 0x8]
 42685: 7b 17 60                 u64 [sp + 0x60] = a0
 42688: 49 11 68 02              u64 [sp + 104] = 0x2
 42692: 49 21 80 00              u64 [sp + 128] = 0
 42696: 95 18 90 00              a1 = sp + 0x90
 42700: 7b 18 70                 u64 [sp + 0x70] = a1
 42703: 49 11 78 02              u64 [sp + 120] = 0x2
 42707: 95 17 48                 a0 = sp + 0x48
 42710: 95 18 60                 a1 = sp + 0x60
 42713: 50 20 1e 03 04 08        ra = 798, jump @2789
      :                          @2673 [@dyn 399]
 42719: 82 15 50                 s0 = u64 [sp + 0x50]
 42722: 82 1b 58                 a4 = u64 [sp + 0x58]
 42725: 82 17 48                 a0 = u64 [sp + 0x48]
 42728: 7b 17 30                 u64 [sp + 0x30] = a0
 42731: 33 07 02                 a0 = 0x2
 42734: 33 08                    a1 = 0
 42736: 33 09                    a2 = 0
 42738: 64 5a                    a3 = s0
 42740: 33 00 20 03              ra = 0x320
 42744: 0a 64                    ecalli 100 // 'log'
 42746: 01                       fallthrough
      :                          @2674 [@dyn 400]
 42747: 82 1b 30                 a4 = u64 [sp + 0x30]
 42750: 82 17                    a0 = u64 [sp]
 42752: c8 b7 07                 a0 = a0 + a4
 42755: 53 37 00 00 f0 69 ff     jump @2670 if a0 <u 4293918720
      :                          @2675
 42762: 82 67                    a0 = u64 [s1]
 42764: c9 76 08                 a1 = s1 - a0
 42767: ab 58 5d ff              jump @2670 if a1 != s0
      :                          @2676
 42771: c9 b7 08                 a1 = a0 - a4
 42774: 01                       fallthrough
      :                          @2677
 42775: 82 69                    a2 = u64 [s1]
 42777: ab 79 f1                 jump @2675 if a2 != a0
      :                          @2678
 42780: 7b 68                    u64 [s1] = a1
 42782: 33 0a                    a3 = 0
 42784: 01                       fallthrough
      :                          @2679
 42785: ab 79 e9                 jump @2675 if a2 != a0
      :                          @2680
 42788: 28 48 ff                 jump @2670
      :                          @2681
 42791: 33 05 e9 00 03           s0 = 0x300e9
 42796: 33 08 20                 a1 = 0x20
 42799: 28 65 fe                 jump @2654
      :                          @2682
 42802: 33 08 20                 a1 = 0x20
 42805: 28 5f fe                 jump @2654
      :                          @2683 [export #2: 'on_transfer']
 42808: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
 42812: 7b 10 88 02              u64 [sp + 0x288] = ra
 42816: 7b 15 80 02              u64 [sp + 0x280] = s0
 42820: 7b 16 78 02              u64 [sp + 0x278] = s1
 42824: 64 8c                    a5 = a1
 42826: 64 79                    a2 = a0
 42828: 33 02                    t0 = 0
 42830: 95 7b 04                 a4 = a0 + 0x4
 42833: 33 07 20                 a0 = 0x20
 42836: 7b 17 28                 u64 [sp + 0x28] = a0
 42839: 33 07 24                 a0 = 0x24
 42842: 7b 17 58                 u64 [sp + 0x58] = a0
 42845: 33 07 6e                 a0 = 0x6e
 42848: 7b 17 20                 u64 [sp + 0x20] = a0
 42851: 33 07 a0 0f 01           a0 = 0x10fa0
 42856: 7b 17 18                 u64 [sp + 0x18] = a0
 42859: 33 07 aa 03              a0 = 0x3aa
 42863: 7b 17 10                 u64 [sp + 0x10] = a0
 42866: 33 07 d8 11 01           a0 = 0x111d8
 42871: 7b 17 08                 u64 [sp + 0x8] = a0
 42874: 33 07 10 01 03           a0 = 0x30110
 42879: 95 77 00 00 10           a0 = a0 + 0x100000
 42884: 7b 17 50                 u64 [sp + 0x50] = a0
 42887: 33 07 40 10 01           a0 = 0x11040
 42892: 7b 17                    u64 [sp] = a0
 42894: 95 97 08                 a0 = a2 + 0x8
 42897: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
 42900: 95 98 0c                 a1 = a2 + 0xc
 42903: 7b 18 60                 u64 [sp + 0x60] = a1
 42906: 33 08 08                 a1 = 0x8
 42909: 33 06 ff ff ef           s1 = 0xffffffffffefffff
 42914: 7b 16 48                 u64 [sp + 0x48] = s1
 42917: 7b 17 c0 00              u64 [sp + 0xc0] = a0
 42921: 7b 17 b8 00              u64 [sp + 0xb8] = a0
 42925: 7b 1c 40                 u64 [sp + 0x40] = a5
 42928: 7b 19 38                 u64 [sp + 0x38] = a2
 42931: 7b 1b 30                 u64 [sp + 0x30] = a4
 42934: 7b 1a a8 00              u64 [sp + 0xa8] = a3
 42938: ac 8c c9 04              jump @2731 if a5 <u a1
      :                          @2684
 42942: 51 09 de 04              jump @2732 if a2 == 0
      :                          @2685
 42946: 51 0b da 04              jump @2732 if a4 == 0
      :                          @2686
 42950: 7c 97                    a0 = u8 [a2]
 42952: 7b 17 78                 u64 [sp + 0x78] = a0
 42955: 7c 97 01                 a0 = u8 [a2 + 0x1]
 42958: 7b 17 68                 u64 [sp + 0x68] = a0
 42961: 7c 97 02                 a0 = u8 [a2 + 0x2]
 42964: 7b 17 70                 u64 [sp + 0x70] = a0
 42967: 7c 97 03                 a0 = u8 [a2 + 0x3]
 42970: 7b 17 80 00              u64 [sp + 0x80] = a0
 42974: 7c b7                    a0 = u8 [a4]
 42976: 7b 17 98 00              u64 [sp + 0x98] = a0
 42980: 7c b7 01                 a0 = u8 [a4 + 0x1]
 42983: 7b 17 88 00              u64 [sp + 0x88] = a0
 42987: 7c b7 02                 a0 = u8 [a4 + 0x2]
 42990: 7b 17 90 00              u64 [sp + 0x90] = a0
 42994: 7c b7 03                 a0 = u8 [a4 + 0x3]
 42997: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 43001: 51 0a 53                 jump @2696 if a3 == 0
      :                          @2687
 43004: 82 17 c0 00              a0 = u64 [sp + 0xc0]
 43008: 7d 77                    a0 = i8 [a0]
 43010: 33 05 01                 s0 = 0x1
 43013: 59 07 4a                 jump @2697 if a0 >=s 0
      :                          @2688
 43016: 84 77 ff 00              a0 = a0 & 0xff
 43020: 33 05 02                 s0 = 0x2
 43023: 33 06 c0 00              s1 = 0xc0
 43027: ac 67 33                 jump @2694 if a0 <u s1
      :                          @2689
 43030: 33 05 03                 s0 = 0x3
 43033: 33 06 e0 00              s1 = 0xe0
 43037: ac 67 29                 jump @2694 if a0 <u s1
      :                          @2690
 43040: 33 05 04                 s0 = 0x4
 43043: 33 06 f0 00              s1 = 0xf0
 43047: ac 67 1f                 jump @2694 if a0 <u s1
      :                          @2691
 43050: 33 05 05                 s0 = 0x5
 43053: 33 06 f8 00              s1 = 0xf8
 43057: ac 67 15                 jump @2694 if a0 <u s1
      :                          @2692
 43060: 33 05 06                 s0 = 0x6
 43063: 33 06 fc 00              s1 = 0xfc
 43067: ac 67 0b                 jump @2694 if a0 <u s1
      :                          @2693
 43070: 88 77 fe 00              a0 = a0 <u 0xfe
 43074: 9a 75 08                 s0 = 0x8 - a0
 43077: 01                       fallthrough
      :                          @2694
 43078: ae 5a 09                 jump @2697 if a3 >=u s0
      :                          @2695
 43081: 28 3a 04                 jump @2731
      :                          @2696
 43084: 33 05                    s0 = 0
 43086: 01                       fallthrough
      :                          @2697
 43087: 82 17 c0 00              a0 = u64 [sp + 0xc0]
 43091: 64 58                    a1 = s0
 43093: 7b 12 b0 00              u64 [sp + 0xb0] = t0
 43097: 50 20 22 03 3e 1b        ra = 802, jump @3190
      :                          @2698 [@dyn 401]
 43103: 33 03 98 00              t1 = 0x98
 43107: 33 02 04                 t0 = 0x4
 43110: 33 06 08                 s1 = 0x8
 43113: 82 1c a8 00              a5 = u64 [sp + 0xa8]
 43117: 82 1b b0 00              a4 = u64 [sp + 0xb0]
 43121: ae 7b 12 04              jump @2731 if a4 >=u a0
      :                          @2699
 43125: 82 18 68                 a1 = u64 [sp + 0x68]
 43128: 97 88 08                 a1 = a1 << 0x8
 43131: 82 19 78                 a2 = u64 [sp + 0x78]
 43134: d4 98 08                 a1 = a1 | a2
 43137: 82 19 70                 a2 = u64 [sp + 0x70]
 43140: 97 99 10                 a2 = a2 << 0x10
 43143: 82 1a 80 00              a3 = u64 [sp + 0x80]
 43147: 97 aa 18                 a3 = a3 << 0x18
 43150: d4 a9 09                 a2 = a2 | a3
 43153: d4 89 04                 t2 = a2 | a1
 43156: 82 18 88 00              a1 = u64 [sp + 0x88]
 43160: 97 88 08                 a1 = a1 << 0x8
 43163: 82 19 98 00              a2 = u64 [sp + 0x98]
 43167: d4 98 08                 a1 = a1 | a2
 43170: 82 19 90 00              a2 = u64 [sp + 0x90]
 43174: 97 99 10                 a2 = a2 << 0x10
 43177: 82 1a a0 00              a3 = u64 [sp + 0xa0]
 43181: 97 aa 18                 a3 = a3 << 0x18
 43184: d4 a9 09                 a2 = a2 | a3
 43187: d4 89 00                 ra = a2 | a1
 43190: e4 5c 08                 a1 = maxu(a5, s0)
 43193: c9 58 08                 a1 = a1 - s0
 43196: 82 19 b8 00              a2 = u64 [sp + 0xb8]
 43200: c8 59 09                 a2 = a2 + s0
 43203: 82 1a 60                 a3 = u64 [sp + 0x60]
 43206: c8 a5 05                 s0 = s0 + a3
 43209: 64 ba                    a3 = a4
 43211: 01                       fallthrough
      :                          @2700
 43212: ac 68 b7 03              jump @2731 if a1 <u s1
      :                          @2701
 43216: aa 25 cc 03              jump @2732 if s0 == t0
      :                          @2702
 43220: 51 05 c8 03              jump @2732 if s0 == 0
      :                          @2703
 43224: ac 38 ab 03              jump @2731 if a1 <u t1
      :                          @2704
 43228: 51 0a 17                 jump @2707 if a3 == 0
      :                          @2705
 43231: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
 43235: 95 55 98 00              s0 = s0 + 0x98
 43239: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 43242: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 43245: 52 07 df                 jump @2700 if a0 != 0
      :                          @2706
 43248: 28 93 03                 jump @2731
      :                          @2707
 43251: 7c 97 01                 a0 = u8 [a2 + 0x1]
 43254: 7c 98                    a1 = u8 [a2]
 43256: 7c 9a 02                 a3 = u8 [a2 + 0x2]
 43259: 7d 9b 03                 a4 = i8 [a2 + 0x3]
 43262: 8a 77 08                 i32 a0 = a0 << 0x8
 43265: d4 87 07                 a0 = a0 | a1
 43268: 8a a8 10                 i32 a1 = a3 << 0x10
 43271: 8a ba 18                 i32 a3 = a4 << 0x18
 43274: d4 a8 08                 a1 = a1 | a3
 43277: d4 87 07                 a0 = a0 | a1
 43280: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 43284: 7c 57 01                 a0 = u8 [s0 + 0x1]
 43287: 7c 58                    a1 = u8 [s0]
 43289: 7c 5a 02                 a3 = u8 [s0 + 0x2]
 43292: 7d 5b 03                 a4 = i8 [s0 + 0x3]
 43295: 8a 77 08                 i32 a0 = a0 << 0x8
 43298: d4 87 07                 a0 = a0 | a1
 43301: 8a a8 10                 i32 a1 = a3 << 0x10
 43304: 8a ba 18                 i32 a3 = a4 << 0x18
 43307: d4 a8 08                 a1 = a1 | a3
 43310: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
 43313: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
 43316: d4 87 07                 a0 = a0 | a1
 43319: 7b 17 98 00              u64 [sp + 0x98] = a0
 43323: 7c 97 0d                 a0 = u8 [a2 + 0xd]
 43326: 97 aa 10                 a3 = a3 << 0x10
 43329: 97 bb 08                 a4 = a4 << 0x8
 43332: d4 ba 0a                 a3 = a3 | a4
 43335: 7c 98 0c                 a1 = u8 [a2 + 0xc]
 43338: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
 43341: d4 a7 07                 a0 = a0 | a3
 43344: 97 77 10                 a0 = a0 << 0x10
 43347: 97 88 08                 a1 = a1 << 0x8
 43350: d4 b8 08                 a1 = a1 | a4
 43353: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
 43356: 7c 9b 09                 a4 = u8 [a2 + 0x9]
 43359: d4 87 07                 a0 = a0 | a1
 43362: 97 77 10                 a0 = a0 << 0x10
 43365: 97 aa 08                 a3 = a3 << 0x8
 43368: d4 ba 0a                 a3 = a3 | a4
 43371: d4 a7 07                 a0 = a0 | a3
 43374: 7c 98 08                 a1 = u8 [a2 + 0x8]
 43377: 97 77 08                 a0 = a0 << 0x8
 43380: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
 43384: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
 43388: d4 87 07                 a0 = a0 | a1
 43391: 7b 17 90 00              u64 [sp + 0x90] = a0
 43395: 7c 97 95 00              a0 = u8 [a2 + 0x95]
 43399: 97 aa 10                 a3 = a3 << 0x10
 43402: 97 bb 08                 a4 = a4 << 0x8
 43405: d4 ba 0a                 a3 = a3 | a4
 43408: d4 a7 07                 a0 = a0 | a3
 43411: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
 43415: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
 43419: 95 98 10                 a1 = a2 + 0x10
 43422: 97 77 10                 a0 = a0 << 0x10
 43425: 97 aa 08                 a3 = a3 << 0x8
 43428: d4 ba 0a                 a3 = a3 | a4
 43431: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
 43435: d4 a7 07                 a0 = a0 | a3
 43438: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
 43442: 97 77 10                 a0 = a0 << 0x10
 43445: 97 bb 08                 a4 = a4 << 0x8
 43448: 7c 99 90 00              a2 = u8 [a2 + 0x90]
 43452: d4 ba 0a                 a3 = a3 | a4
 43455: d4 a7 07                 a0 = a0 | a3
 43458: 97 77 08                 a0 = a0 << 0x8
 43461: d4 97 07                 a0 = a0 | a2
 43464: 7b 17 88 00              u64 [sp + 0x88] = a0
 43468: 95 17 68 01              a0 = sp + 0x168
 43472: 33 09 80 00              a2 = 0x80
 43476: 64 45                    s0 = t2
 43478: 64 06                    s1 = ra
 43480: 50 20 24 03 7f 07        ra = 804, jump @2839
      :                          @2708 [@dyn 402]
 43486: 95 17 e0 00              a0 = sp + 0xe0
 43490: 95 18 68 01              a1 = sp + 0x168
 43494: 33 09 80 00              a2 = 0x80
 43498: 50 20 26 03 6d 07        ra = 806, jump @2839
      :                          @2709 [@dyn 403]
 43504: 7a 15 c8 00              u32 [sp + 0xc8] = s0
 43508: 7a 16 cc 00              u32 [sp + 0xcc] = s1
 43512: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 43516: 7a 17 d0 00              u32 [sp + 0xd0] = a0
 43520: 82 17 98 00              a0 = u64 [sp + 0x98]
 43524: 7a 17 d4 00              u32 [sp + 0xd4] = a0
 43528: 82 17 90 00              a0 = u64 [sp + 0x90]
 43532: 7b 17 d8 00              u64 [sp + 0xd8] = a0
 43536: 82 17 88 00              a0 = u64 [sp + 0x88]
 43540: 7b 17 60 01              u64 [sp + 0x160] = a0
 43544: 95 17 c8 00              a0 = sp + 0xc8
 43548: 7b 17 68 01              u64 [sp + 0x168] = a0
 43552: 82 17 28                 a0 = u64 [sp + 0x28]
 43555: 7b 17 70 01              u64 [sp + 0x170] = a0
 43559: 95 18 cc 00              a1 = sp + 0xcc
 43563: 7b 18 78 01              u64 [sp + 0x178] = a1
 43567: 7b 17 80 01              u64 [sp + 0x180] = a0
 43571: 95 18 d0 00              a1 = sp + 0xd0
 43575: 7b 18 88 01              u64 [sp + 0x188] = a1
 43579: 7b 17 90 01              u64 [sp + 0x190] = a0
 43583: 95 18 d4 00              a1 = sp + 0xd4
 43587: 7b 18 98 01              u64 [sp + 0x198] = a1
 43591: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 43595: 95 17 d8 00              a0 = sp + 0xd8
 43599: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 43603: 82 17 58                 a0 = u64 [sp + 0x58]
 43606: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 43610: 95 18 e0 00              a1 = sp + 0xe0
 43614: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
 43618: 82 18 20                 a1 = u64 [sp + 0x20]
 43621: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
 43625: 95 18 60 01              a1 = sp + 0x160
 43629: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
 43633: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
 43637: 82 17 18                 a0 = u64 [sp + 0x18]
 43640: 7b 17 28 02              u64 [sp + 0x228] = a0
 43644: 49 21 30 02 07           u64 [sp + 560] = 0x7
 43649: 49 21 48 02              u64 [sp + 584] = 0
 43653: 95 17 68 01              a0 = sp + 0x168
 43657: 7b 17 38 02              u64 [sp + 0x238] = a0
 43661: 49 21 40 02 07           u64 [sp + 576] = 0x7
 43666: 95 17 58 02              a0 = sp + 0x258
 43670: 95 18 28 02              a1 = sp + 0x228
 43674: 50 20 28 03 43 04        ra = 808, jump @2789
      :                          @2710 [@dyn 404]
 43680: 82 15 60 02              s0 = u64 [sp + 0x260]
 43684: 82 1b 68 02              a4 = u64 [sp + 0x268]
 43688: 82 16 58 02              s1 = u64 [sp + 0x258]
 43692: 33 07 02                 a0 = 0x2
 43695: 33 08                    a1 = 0
 43697: 33 09                    a2 = 0
 43699: 64 5a                    a3 = s0
 43701: 33 00 2a 03              ra = 0x32a
 43705: 0a 64                    ecalli 100 // 'log'
 43707: 01                       fallthrough
      :                          @2711 [@dyn 405]
 43708: 82 17 48                 a0 = u64 [sp + 0x48]
 43711: c8 67 07                 a0 = a0 + s1
 43714: 82 1b 50                 a4 = u64 [sp + 0x50]
 43717: 53 37 00 00 f0 1a        jump @2716 if a0 <u 4293918720
      :                          @2712
 43723: 82 b7                    a0 = u64 [a4]
 43725: c9 7b 08                 a1 = a4 - a0
 43728: ab 58 0f                 jump @2716 if a1 != s0
      :                          @2713
 43731: c9 67 08                 a1 = a0 - s1
 43734: 01                       fallthrough
      :                          @2714
 43735: 82 b9                    a2 = u64 [a4]
 43737: ab 79 f2                 jump @2712 if a2 != a0
      :                          @2715
 43740: 7b b8                    u64 [a4] = a1
 43742: 01                       fallthrough
      :                          @2716
 43743: 81 17 cc 00              a0 = i32 [sp + 0xcc]
 43747: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
 43751: 95 17 ec 01              a0 = sp + 0x1ec
 43755: 33 08 04                 a1 = 0x4
 43758: 95 19 e0 00              a2 = sp + 0xe0
 43762: 33 0a 80 00              a3 = 0x80
 43766: 0a 04                    ecalli 4 // 'write'
 43768: 0a                       ecalli 0 // 'gas'
 43769: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
 43773: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
 43777: 46 21 07 02 04           u8 [sp + 519] = 0x4
 43782: 7b 17 08 02              u64 [sp + 0x208] = a0
 43786: 95 17 07 02              a0 = sp + 0x207
 43790: 33 08 01                 a1 = 0x1
 43793: 95 19 08 02              a2 = sp + 0x208
 43797: 33 0a 08                 a3 = 0x8
 43800: 0a 04                    ecalli 4 // 'write'
 43802: 49 21 68 01 02           u64 [sp + 360] = 0x2
 43807: 49 21 78 01 02           u64 [sp + 376] = 0x2
 43812: 49 21 88 01              u64 [sp + 392] = 0
 43816: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
 43826: 7b 17 90 01              u64 [sp + 0x190] = a0
 43830: 46 21 98 01 03           u8 [sp + 408] = 0x3
 43835: 49 21 a0 01 02           u64 [sp + 416] = 0x2
 43840: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 43845: 49 21 c0 01 01           u64 [sp + 448] = 0x1
 43850: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
 43854: 95 17 07 02              a0 = sp + 0x207
 43858: 7b 17 58 02              u64 [sp + 0x258] = a0
 43862: 82 17 10                 a0 = u64 [sp + 0x10]
 43865: 7b 17 60 02              u64 [sp + 0x260] = a0
 43869: 95 17 f8 01              a0 = sp + 0x1f8
 43873: 7b 17 68 02              u64 [sp + 0x268] = a0
 43877: 82 17 58                 a0 = u64 [sp + 0x58]
 43880: 7b 17 70 02              u64 [sp + 0x270] = a0
 43884: 46 21 d0 01 03           u8 [sp + 464] = 0x3
 43889: 82 17 08                 a0 = u64 [sp + 0x8]
 43892: 7b 17 28 02              u64 [sp + 0x228] = a0
 43896: 49 21 30 02 02           u64 [sp + 560] = 0x2
 43901: 95 17 68 01              a0 = sp + 0x168
 43905: 7b 17 48 02              u64 [sp + 0x248] = a0
 43909: 49 21 50 02 02           u64 [sp + 592] = 0x2
 43914: 95 17 58 02              a0 = sp + 0x258
 43918: 7b 17 38 02              u64 [sp + 0x238] = a0
 43922: 49 21 40 02 02           u64 [sp + 576] = 0x2
 43927: 95 17 10 02              a0 = sp + 0x210
 43931: 95 18 28 02              a1 = sp + 0x228
 43935: 50 20 2c 03 3e 03        ra = 812, jump @2789
      :                          @2717 [@dyn 406]
 43941: 82 15 18 02              s0 = u64 [sp + 0x218]
 43945: 82 1b 20 02              a4 = u64 [sp + 0x220]
 43949: 82 16 10 02              s1 = u64 [sp + 0x210]
 43953: 33 07 02                 a0 = 0x2
 43956: 33 08                    a1 = 0
 43958: 33 09                    a2 = 0
 43960: 64 5a                    a3 = s0
 43962: 33 00 2e 03              ra = 0x32e
 43966: 0a 64                    ecalli 100 // 'log'
 43968: 01                       fallthrough
      :                          @2718 [@dyn 407]
 43969: 82 1b 50                 a4 = u64 [sp + 0x50]
 43972: 82 17 48                 a0 = u64 [sp + 0x48]
 43975: c8 67 07                 a0 = a0 + s1
 43978: 53 37 00 00 f0 1a        jump @2723 if a0 <u 4293918720
      :                          @2719
 43984: 82 b7                    a0 = u64 [a4]
 43986: c9 7b 08                 a1 = a4 - a0
 43989: ab 58 0f                 jump @2723 if a1 != s0
      :                          @2720
 43992: c9 67 08                 a1 = a0 - s1
 43995: 01                       fallthrough
      :                          @2721
 43996: 82 b9                    a2 = u64 [a4]
 43998: ab 79 f2                 jump @2719 if a2 != a0
      :                          @2722
 44001: 7b b8                    u64 [a4] = a1
 44003: 01                       fallthrough
      :                          @2723
 44004: 95 17 f0 01              a0 = sp + 0x1f0
 44008: 7b 17 58 02              u64 [sp + 0x258] = a0
 44012: 82 17 58                 a0 = u64 [sp + 0x58]
 44015: 7b 17 60 02              u64 [sp + 0x260] = a0
 44019: 82 17                    a0 = u64 [sp]
 44021: 7b 17 68 01              u64 [sp + 0x168] = a0
 44025: 49 21 70 01 02           u64 [sp + 368] = 0x2
 44030: 49 21 88 01              u64 [sp + 392] = 0
 44034: 95 17 58 02              a0 = sp + 0x258
 44038: 7b 17 78 01              u64 [sp + 0x178] = a0
 44042: 49 21 80 01 01           u64 [sp + 384] = 0x1
 44047: 95 17 28 02              a0 = sp + 0x228
 44051: 95 18 68 01              a1 = sp + 0x168
 44055: 50 20 30 03 c6 02        ra = 816, jump @2789
      :                          @2724 [@dyn 408]
 44061: 82 15 30 02              s0 = u64 [sp + 0x230]
 44065: 82 1b 38 02              a4 = u64 [sp + 0x238]
 44069: 82 16 28 02              s1 = u64 [sp + 0x228]
 44073: 33 07 02                 a0 = 0x2
 44076: 33 08                    a1 = 0
 44078: 33 09                    a2 = 0
 44080: 64 5a                    a3 = s0
 44082: 33 00 32 03              ra = 0x332
 44086: 0a 64                    ecalli 100 // 'log'
 44088: 01                       fallthrough
      :                          @2725 [@dyn 409]
 44089: 82 1b 50                 a4 = u64 [sp + 0x50]
 44092: 82 17 48                 a0 = u64 [sp + 0x48]
 44095: c8 67 07                 a0 = a0 + s1
 44098: 53 37 00 00 f0 1a        jump @2730 if a0 <u 4293918720
      :                          @2726
 44104: 82 b7                    a0 = u64 [a4]
 44106: c9 7b 08                 a1 = a4 - a0
 44109: ab 58 0f                 jump @2730 if a1 != s0
      :                          @2727
 44112: c9 67 08                 a1 = a0 - s1
 44115: 01                       fallthrough
      :                          @2728
 44116: 82 b9                    a2 = u64 [a4]
 44118: ab 79 f2                 jump @2726 if a2 != a0
      :                          @2729
 44121: 7b b8                    u64 [a4] = a1
 44123: 01                       fallthrough
      :                          @2730
 44124: 82 12 b0 00              t0 = u64 [sp + 0xb0]
 44128: 95 22 01                 t0 = t0 + 0x1
 44131: 82 17 b8 00              a0 = u64 [sp + 0xb8]
 44135: 95 77 98 00              a0 = a0 + 0x98
 44139: 7b 17 b8 00              u64 [sp + 0xb8] = a0
 44143: 82 1c 40                 a5 = u64 [sp + 0x40]
 44146: 82 19 38                 a2 = u64 [sp + 0x38]
 44149: 82 1b 30                 a4 = u64 [sp + 0x30]
 44152: 82 1a a8 00              a3 = u64 [sp + 0xa8]
 44156: 33 08 08                 a1 = 0x8
 44159: ae 8c 3f fb              jump @2684 if a5 >=u a1
      :                          @2731
 44163: 33 07 00 00 01           a0 = 0x10000
 44168: 33 08                    a1 = 0
 44170: 82 10 88 02              ra = u64 [sp + 0x288]
 44174: 82 15 80 02              s0 = u64 [sp + 0x280]
 44178: 82 16 78 02              s1 = u64 [sp + 0x278]
 44182: 95 11 90 02              sp = sp + 0x290
 44186: 32 00                    ret
      :                          @2732
 44188: 00                       trap
      :                          @2733
 44189: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 44192: 7b 10 40                 u64 [sp + 0x40] = ra
 44195: 7b 15 38                 u64 [sp + 0x38] = s0
 44198: 7b 16 30                 u64 [sp + 0x30] = s1
 44201: c8 89 09                 a2 = a2 + a1
 44204: ac 89 53                 jump @2741 if a2 <u a1
      :                          @2734
 44207: 64 75                    s0 = a0
 44209: 82 77                    a0 = u64 [a0]
 44211: 97 78 01                 a1 = a0 << 0x1
 44214: 33 0a 08                 a3 = 0x8
 44217: e4 a9 09                 a2 = maxu(a2, a3)
 44220: e4 98 06                 s1 = maxu(a1, a2)
 44223: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 44226: 98 88 3f                 a1 = a1 >> 0x3f
 44229: 51 07 12                 jump @2736 if a0 == 0
      :                          @2735
 44232: 82 59 08                 a2 = u64 [s0 + 0x8]
 44235: 7b 19 18                 u64 [sp + 0x18] = a2
 44238: 49 11 20 01              u64 [sp + 32] = 0x1
 44242: 7b 17 28                 u64 [sp + 0x28] = a0
 44245: 28 06                    jump @2737
      :                          @2736
 44247: 49 11 20                 u64 [sp + 32] = 0
 44250: 01                       fallthrough
      :                          @2737
 44251: 64 17                    a0 = sp
 44253: 95 1a 18                 a3 = sp + 0x18
 44256: 64 69                    a2 = s1
 44258: 50 20 34 03 33           ra = 820, jump @2745
      :                          @2738 [@dyn 410]
 44263: 82 18                    a1 = u64 [sp]
 44265: 82 17 08                 a0 = u64 [sp + 0x8]
 44268: 51 08 14                 jump @2742 if a1 == 0
      :                          @2739
 44271: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 44281: aa 87 0d                 jump @2743 if a0 == a1
      :                          @2740
 44284: 52 07 18                 jump @2744 if a0 != 0
      :                          @2741
 44287: 00                       trap
      :                          @2742
 44288: 7b 57 08                 u64 [s0 + 0x8] = a0
 44291: 7b 56                    u64 [s0] = s1
 44293: 01                       fallthrough
      :                          @2743
 44294: 82 10 40                 ra = u64 [sp + 0x40]
 44297: 82 15 38                 s0 = u64 [sp + 0x38]
 44300: 82 16 30                 s1 = u64 [sp + 0x30]
 44303: 95 11 48                 sp = sp + 0x48
 44306: 32 00                    ret
      :                          @2744
 44308: 00                       trap
      :                          @2745
 44309: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 44312: 7b 10 30                 u64 [sp + 0x30] = ra
 44315: 7b 15 28                 u64 [sp + 0x28] = s0
 44318: 7b 16 20                 u64 [sp + 0x20] = s1
 44321: 64 95                    s0 = a2
 44323: 64 72                    t0 = a0
 44325: 51 08 7a                 jump @2755 if a1 == 0
      :                          @2746
 44328: 82 a7 08                 a0 = u64 [a3 + 0x8]
 44331: 51 07 7d                 jump @2756 if a0 == 0
      :                          @2747
 44334: 82 a9 10                 a2 = u64 [a3 + 0x10]
 44337: 51 09 ab 00              jump @2763 if a2 == 0
      :                          @2748
 44341: 82 a8                    a1 = u64 [a3]
 44343: 33 06 10 01 03           s1 = 0x30110
 44348: 33 03 00 00 10           t1 = 0x100000
 44353: c8 36 06                 s1 = s1 + t1
 44356: 01                       fallthrough
      :                          @2749
 44357: 82 6a                    a3 = u64 [s1]
 44359: c8 5a 07                 a0 = a3 + s0
 44362: ac a7 d0 00              jump @2769 if a0 <u a3
      :                          @2750
 44366: 95 7b 01                 a4 = a0 + 0x1
 44369: 88 bc 01                 a5 = a4 <u 0x1
 44372: d8 b3 0b                 a4 = t1 <u a4
 44375: d4 cb 0b                 a4 = a4 | a5
 44378: 52 0b c0 00              jump @2769 if a4 != 0
      :                          @2751
 44382: 82 6b                    a4 = u64 [s1]
 44384: ab ab e5                 jump @2749 if a4 != a3
      :                          @2752
 44387: 7b 67                    u64 [s1] = a0
 44389: 33 0c                    a5 = 0
 44391: 7b 12 18                 u64 [sp + 0x18] = t0
 44394: 33 0a 10 01 03           a3 = 0x30110
 44399: 33 0b 00 00 10           a4 = 0x100000
 44404: 7b 1a                    u64 [sp] = a3
 44406: c8 ba 0a                 a3 = a3 + a4
 44409: c9 7a 07                 a0 = a3 - a0
 44412: 7b 17 10                 u64 [sp + 0x10] = a0
 44415: 7b 18 08                 u64 [sp + 0x8] = a1
 44418: 64 96                    s1 = a2
 44420: 50 20 36 03 d3 03        ra = 822, jump @2839
      :                          @2753 [@dyn 411]
 44426: 54 36 00 00 10 98 00     jump @2770 if s1 <=u 1048576
      :                          @2754
 44433: 82 12 18                 t0 = u64 [sp + 0x18]
 44436: 82 18 10                 a1 = u64 [sp + 0x10]
 44439: 33 07                    a0 = 0
 44441: 7b 28 08                 u64 [t0 + 0x8] = a1
 44444: 28 b5 00                 jump @2776
      :                          @2755
 44447: 49 12 08                 u64 [t0 + 8] = 0
 44450: 33 07 01                 a0 = 0x1
 44453: 28 ac 00                 jump @2776
      :                          @2756
 44456: 33 09 10 01 03           a2 = 0x30110
 44461: 33 07 00 00 10           a0 = 0x100000
 44466: c8 79 09                 a2 = a2 + a0
 44469: 01                       fallthrough
      :                          @2757
 44470: 82 9a                    a3 = u64 [a2]
 44472: c8 5a 08                 a1 = a3 + s0
 44475: ac a8 5f                 jump @2769 if a1 <u a3
      :                          @2758
 44478: 95 8b 01                 a4 = a1 + 0x1
 44481: 88 bc 01                 a5 = a4 <u 0x1
 44484: d8 b7 0b                 a4 = a0 <u a4
 44487: d4 cb 0b                 a4 = a4 | a5
 44490: 52 0b 50                 jump @2769 if a4 != 0
      :                          @2759
 44493: 82 9b                    a4 = u64 [a2]
 44495: ab ab e7                 jump @2757 if a4 != a3
      :                          @2760
 44498: 7b 98                    u64 [a2] = a1
 44500: 33 0c                    a5 = 0
 44502: 01                       fallthrough
      :                          @2761
 44503: ab ab df                 jump @2757 if a4 != a3
      :                          @2762
 44506: 28 31                    jump @2768
      :                          @2763
 44508: 33 09 10 01 03           a2 = 0x30110
 44513: 33 07 00 00 10           a0 = 0x100000
 44518: c8 79 09                 a2 = a2 + a0
 44521: 01                       fallthrough
      :                          @2764
 44522: 82 9a                    a3 = u64 [a2]
 44524: c8 5a 08                 a1 = a3 + s0
 44527: ac a8 2b                 jump @2769 if a1 <u a3
      :                          @2765
 44530: 95 8b 01                 a4 = a1 + 0x1
 44533: 88 bc 01                 a5 = a4 <u 0x1
 44536: d8 b7 0b                 a4 = a0 <u a4
 44539: d4 cb 0b                 a4 = a4 | a5
 44542: 52 0b 1c                 jump @2769 if a4 != 0
      :                          @2766
 44545: 82 9b                    a4 = u64 [a2]
 44547: ab ab e7                 jump @2764 if a4 != a3
      :                          @2767
 44550: 7b 98                    u64 [a2] = a1
 44552: 33 0c                    a5 = 0
 44554: 01                       fallthrough
      :                          @2768
 44555: 33 07 10 01 13           a0 = 0x130110
 44560: c9 87 08                 a1 = a0 - a1
 44563: 33 07                    a0 = 0
 44565: 7b 28 08                 u64 [t0 + 0x8] = a1
 44568: 28 39                    jump @2776
      :                          @2769
 44570: 33 07 01                 a0 = 0x1
 44573: 7b 27 08                 u64 [t0 + 0x8] = a0
 44576: 28 31                    jump @2776
      :                          @2770
 44578: 64 6c                    a5 = s1
 44580: 82 17                    a0 = u64 [sp]
 44582: 95 77 00 00 10           a0 = a0 + 0x100000
 44587: 82 12 18                 t0 = u64 [sp + 0x18]
 44590: 82 16 08                 s1 = u64 [sp + 0x8]
 44593: 01                       fallthrough
      :                          @2771
 44594: 82 78                    a1 = u64 [a0]
 44596: c9 87 09                 a2 = a0 - a1
 44599: ab 69 11                 jump @2775 if a2 != s1
      :                          @2772
 44602: c9 c8 09                 a2 = a1 - a5
 44605: 01                       fallthrough
      :                          @2773
 44606: 82 7a                    a3 = u64 [a0]
 44608: ab 8a f2                 jump @2771 if a3 != a1
      :                          @2774
 44611: 7b 79                    u64 [a0] = a2
 44613: 33 0b                    a4 = 0
 44615: 01                       fallthrough
      :                          @2775
 44616: 82 18 10                 a1 = u64 [sp + 0x10]
 44619: 33 07                    a0 = 0
 44621: 7b 28 08                 u64 [t0 + 0x8] = a1
 44624: 01                       fallthrough
      :                          @2776
 44625: 7b 25 10                 u64 [t0 + 0x10] = s0
 44628: 7b 27                    u64 [t0] = a0
 44630: 82 10 30                 ra = u64 [sp + 0x30]
 44633: 82 15 28                 s0 = u64 [sp + 0x28]
 44636: 82 16 20                 s1 = u64 [sp + 0x20]
 44639: 95 11 38                 sp = sp + 0x38
 44642: 32 00                    ret
      :                          @2777
 44644: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 44647: 7b 10 40                 u64 [sp + 0x40] = ra
 44650: 7b 15 38                 u64 [sp + 0x38] = s0
 44653: 7b 16 30                 u64 [sp + 0x30] = s1
 44656: 95 88 01                 a1 = a1 + 0x1
 44659: 51 08 54                 jump @2785 if a1 == 0
      :                          @2778
 44662: 64 75                    s0 = a0
 44664: 82 77                    a0 = u64 [a0]
 44666: 97 79 01                 a2 = a0 << 0x1
 44669: 33 0a 08                 a3 = 0x8
 44672: e4 a8 08                 a1 = maxu(a1, a3)
 44675: e4 89 06                 s1 = maxu(a2, a1)
 44678: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 44681: 98 88 3f                 a1 = a1 >> 0x3f
 44684: 51 07 12                 jump @2780 if a0 == 0
      :                          @2779
 44687: 82 59 08                 a2 = u64 [s0 + 0x8]
 44690: 7b 19 18                 u64 [sp + 0x18] = a2
 44693: 49 11 20 01              u64 [sp + 32] = 0x1
 44697: 7b 17 28                 u64 [sp + 0x28] = a0
 44700: 28 06                    jump @2781
      :                          @2780
 44702: 49 11 20                 u64 [sp + 32] = 0
 44705: 01                       fallthrough
      :                          @2781
 44706: 64 17                    a0 = sp
 44708: 95 1a 18                 a3 = sp + 0x18
 44711: 64 69                    a2 = s1
 44713: 50 20 38 03 6c fe        ra = 824, jump @2745
      :                          @2782 [@dyn 412]
 44719: 82 18                    a1 = u64 [sp]
 44721: 82 17 08                 a0 = u64 [sp + 0x8]
 44724: 51 08 14                 jump @2786 if a1 == 0
      :                          @2783
 44727: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 44737: aa 87 0d                 jump @2787 if a0 == a1
      :                          @2784
 44740: 52 07 18                 jump @2788 if a0 != 0
      :                          @2785
 44743: 00                       trap
      :                          @2786
 44744: 7b 57 08                 u64 [s0 + 0x8] = a0
 44747: 7b 56                    u64 [s0] = s1
 44749: 01                       fallthrough
      :                          @2787
 44750: 82 10 40                 ra = u64 [sp + 0x40]
 44753: 82 15 38                 s0 = u64 [sp + 0x38]
 44756: 82 16 30                 s1 = u64 [sp + 0x30]
 44759: 95 11 48                 sp = sp + 0x48
 44762: 32 00                    ret
      :                          @2788
 44764: 00                       trap
      :                          @2789
 44765: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 44768: 7b 10 30                 u64 [sp + 0x30] = ra
 44771: 7b 15 28                 u64 [sp + 0x28] = s0
 44774: 7b 16 20                 u64 [sp + 0x20] = s1
 44777: 64 89                    a2 = a1
 44779: 82 8a 08                 a3 = u64 [a1 + 0x8]
 44782: 64 75                    s0 = a0
 44784: 51 0a 35                 jump @2794 if a3 == 0
      :                          @2790
 44787: 82 98                    a1 = u64 [a2]
 44789: 33 07                    a0 = 0
 44791: 95 8b 08                 a4 = a1 + 0x8
 44794: 01                       fallthrough
      :                          @2791
 44795: 82 bc                    a5 = u64 [a4]
 44797: c8 c7 07                 a0 = a0 + a5
 44800: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 44803: 95 bb 10                 a4 = a4 + 0x10
 44806: 52 0a f5                 jump @2791 if a3 != 0
      :                          @2792
 44809: 82 9a 18                 a3 = u64 [a2 + 0x18]
 44812: 51 0a 24                 jump @2796 if a3 == 0
      :                          @2793
 44815: 82 88 08                 a1 = u64 [a1 + 0x8]
 44818: 8e 88                    a1 = a1 >u 0
 44820: 88 7a 10                 a3 = a0 <u 0x10
 44823: 85 aa 01                 a3 = a3 ^ 0x1
 44826: d4 a8 08                 a1 = a1 | a3
 44829: 89 7a                    a3 = a0 <s 0
 44831: e0 a8 08                 a1 = a1 & ~a3
 44834: 52 08 0a                 jump @2795 if a1 != 0
      :                          @2794
 44837: 33 07                    a0 = 0
 44839: 33 08 01                 a1 = 0x1
 44842: 28 4a                    jump @2804
      :                          @2795
 44844: 97 77 01                 a0 = a0 << 0x1
 44847: 01                       fallthrough
      :                          @2796
 44848: 51 07 40                 jump @2803 if a0 == 0
      :                          @2797
 44851: 57 07 79                 jump @2809 if a0 <s 0
      :                          @2798
 44854: 64 52                    t0 = s0
 44856: 33 0b 10 01 03           a4 = 0x30110
 44861: 33 08 00 00 10           a1 = 0x100000
 44866: c8 8b 0b                 a4 = a4 + a1
 44869: 01                       fallthrough
      :                          @2799
 44870: 82 bc                    a5 = u64 [a4]
 44872: c8 7c 0a                 a3 = a5 + a0
 44875: ac ca 5f                 jump @2807 if a3 <u a5
      :                          @2800
 44878: 95 a5 01                 s0 = a3 + 0x1
 44881: 88 56 01                 s1 = s0 <u 0x1
 44884: d8 58 05                 s0 = a1 <u s0
 44887: d4 65 05                 s0 = s0 | s1
 44890: 52 05 50                 jump @2807 if s0 != 0
      :                          @2801
 44893: 82 b6                    s1 = u64 [a4]
 44895: ab c6 e7                 jump @2799 if s1 != a5
      :                          @2802
 44898: 7b ba                    u64 [a4] = a3
 44900: 33 08 10 01 13           a1 = 0x130110
 44905: c9 a8 08                 a1 = a1 - a3
 44908: 64 25                    s0 = t0
 44910: 28 06                    jump @2804
      :                          @2803
 44912: 33 08 01                 a1 = 0x1
 44915: 01                       fallthrough
      :                          @2804
 44916: 7b 17                    u64 [sp] = a0
 44918: 7b 18 08                 u64 [sp + 0x8] = a1
 44921: 49 11 10                 u64 [sp + 16] = 0
 44924: 33 08 78 10 01           a1 = 0x11078
 44929: 64 17                    a0 = sp
 44931: 50 20 3a 03 fe 0b        ra = 826, jump @3046
      :                          @2805 [@dyn 413]
 44937: 52 07 22                 jump @2808 if a0 != 0
      :                          @2806
 44940: 82 17 10                 a0 = u64 [sp + 0x10]
 44943: 82 18 08                 a1 = u64 [sp + 0x8]
 44946: 82 19                    a2 = u64 [sp]
 44948: 7b 57 10                 u64 [s0 + 0x10] = a0
 44951: 7b 58 08                 u64 [s0 + 0x8] = a1
 44954: 7b 59                    u64 [s0] = a2
 44956: 82 10 30                 ra = u64 [sp + 0x30]
 44959: 82 15 28                 s0 = u64 [sp + 0x28]
 44962: 82 16 20                 s1 = u64 [sp + 0x20]
 44965: 95 11 38                 sp = sp + 0x38
 44968: 32 00                    ret
      :                          @2807
 44970: 00                       trap
      :                          @2808
 44971: 00                       trap
      :                          @2809
 44972: 00                       trap
      :                          @2810 [@dyn 414]
 44973: 82 72                    t0 = u64 [a0]
 44975: 33 09 00 00 f0           a2 = 0xfffffffffff00000
 44980: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
 44985: ac 9a 28                 jump @2816 if a3 <u a2
      :                          @2811
 44988: 82 77 08                 a0 = u64 [a0 + 0x8]
 44991: 33 09 10 01 03           a2 = 0x30110
 44996: 95 99 00 00 10           a2 = a2 + 0x100000
 45001: 01                       fallthrough
      :                          @2812
 45002: 82 9a                    a3 = u64 [a2]
 45004: c9 a9 0b                 a4 = a2 - a3
 45007: ab 7b 12                 jump @2816 if a4 != a0
      :                          @2813
 45010: c9 2a 0b                 a4 = a3 - t0
 45013: 01                       fallthrough
      :                          @2814
 45014: 82 9c                    a5 = u64 [a2]
 45016: ab ac f2                 jump @2812 if a5 != a3
      :                          @2815
 45019: 7b 9b                    u64 [a2] = a4
 45021: 33 08                    a1 = 0
 45023: 32 00                    ret
      :                          @2816
 45025: 32 00                    ret
      :                          @2817 [@dyn 415]
 45027: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 45030: 7b 10 18                 u64 [sp + 0x18] = ra
 45033: 7b 15 10                 u64 [sp + 0x10] = s0
 45036: 7b 16 08                 u64 [sp + 0x8] = s1
 45039: 64 75                    s0 = a0
 45041: 82 7a 10                 a3 = u64 [a0 + 0x10]
 45044: 82 77                    a0 = u64 [a0]
 45046: c9 a7 07                 a0 = a0 - a3
 45049: 64 96                    s1 = a2
 45051: ac 97 2b                 jump @2820 if a0 <u a2
      :                          @2818
 45054: 7b 1a                    u64 [sp] = a3
 45056: 82 57 08                 a0 = u64 [s0 + 0x8]
 45059: c8 a7 07                 a0 = a0 + a3
 45062: 64 69                    a2 = s1
 45064: 50 20 40 03 4f 01        ra = 832, jump @2839
      :                          @2819 [@dyn 416]
 45070: 82 17                    a0 = u64 [sp]
 45072: c8 76 06                 s1 = s1 + a0
 45075: 7b 56 10                 u64 [s0 + 0x10] = s1
 45078: 33 07                    a0 = 0
 45080: 82 10 18                 ra = u64 [sp + 0x18]
 45083: 82 15 10                 s0 = u64 [sp + 0x10]
 45086: 82 16 08                 s1 = u64 [sp + 0x8]
 45089: 95 11 20                 sp = sp + 0x20
 45092: 32 00                    ret
      :                          @2820
 45094: 64 57                    a0 = s0
 45096: 7b 18                    u64 [sp] = a1
 45098: 64 a8                    a1 = a3
 45100: 64 69                    a2 = s1
 45102: 50 20 42 03 6f fc        ra = 834, jump @2733
      :                          @2821 [@dyn 417]
 45108: 82 18                    a1 = u64 [sp]
 45110: 82 5a 10                 a3 = u64 [s0 + 0x10]
 45113: 28 c5                    jump @2818
      :                          @2822 [@dyn 418]
 45115: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 45118: 7b 10 20                 u64 [sp + 0x20] = ra
 45121: 7b 15 18                 u64 [sp + 0x18] = s0
 45124: 7b 16 10                 u64 [sp + 0x10] = s1
 45127: 64 86                    s1 = a1
 45129: 83 88                    i32 a1 = a1 + 0
 45131: 33 09 80 00              a2 = 0x80
 45135: 64 7a                    a3 = a0
 45137: ae 98 2c                 jump @2827 if a1 >=u a2
      :                          @2823
 45140: 82 a8 10                 a1 = u64 [a3 + 0x10]
 45143: 82 a7                    a0 = u64 [a3]
 45145: ab 78 13                 jump @2826 if a1 != a0
      :                          @2824
 45148: 64 a7                    a0 = a3
 45150: 64 a5                    s0 = a3
 45152: 50 20 46 03 04 fe        ra = 838, jump @2777
      :                          @2825 [@dyn 419]
 45158: 64 5a                    a3 = s0
 45160: 82 58 10                 a1 = u64 [s0 + 0x10]
 45163: 01                       fallthrough
      :                          @2826
 45164: 82 a7 08                 a0 = u64 [a3 + 0x8]
 45167: c8 87 07                 a0 = a0 + a1
 45170: 78 76                    u8 [a0] = s1
 45172: 95 88 01                 a1 = a1 + 0x1
 45175: 7b a8 10                 u64 [a3 + 0x10] = a1
 45178: 28 ac 00                 jump @2835
      :                          @2827
 45181: 8b 67 0b                 i32 a0 = s1 >> 0xb
 45184: 48 11 0c                 u32 [sp + 12] = 0
 45187: 52 07 1c                 jump @2829 if a0 != 0
      :                          @2828
 45190: 98 67 06                 a0 = s1 >> 0x6
 45193: 86 77 c0 00              a0 = a0 | 0xc0
 45197: 78 17 0c                 u8 [sp + 0xc] = a0
 45200: 84 67 3f                 a0 = s1 & 0x3f
 45203: 86 77 80 00              a0 = a0 | 0x80
 45207: 78 17 0d                 u8 [sp + 0xd] = a0
 45210: 33 06 02                 s1 = 0x2
 45213: 28 63                    jump @2832
      :                          @2829
 45215: 8b 67 10                 i32 a0 = s1 >> 0x10
 45218: 52 07 29                 jump @2831 if a0 != 0
      :                          @2830
 45221: 98 67 0c                 a0 = s1 >> 0xc
 45224: 86 77 e0 00              a0 = a0 | 0xe0
 45228: 78 17 0c                 u8 [sp + 0xc] = a0
 45231: 97 67 34                 a0 = s1 << 0x34
 45234: 98 77 3a                 a0 = a0 >> 0x3a
 45237: 95 77 80 00              a0 = a0 + 0x80
 45241: 78 17 0d                 u8 [sp + 0xd] = a0
 45244: 84 67 3f                 a0 = s1 & 0x3f
 45247: 86 77 80 00              a0 = a0 | 0x80
 45251: 78 17 0e                 u8 [sp + 0xe] = a0
 45254: 33 06 03                 s1 = 0x3
 45257: 28 37                    jump @2832
      :                          @2831
 45259: 97 67 2b                 a0 = s1 << 0x2b
 45262: 98 77 3d                 a0 = a0 >> 0x3d
 45265: 95 77 f0 00              a0 = a0 + 0xf0
 45269: 78 17 0c                 u8 [sp + 0xc] = a0
 45272: 97 67 2e                 a0 = s1 << 0x2e
 45275: 98 77 3a                 a0 = a0 >> 0x3a
 45278: 95 77 80 00              a0 = a0 + 0x80
 45282: 78 17 0d                 u8 [sp + 0xd] = a0
 45285: 97 67 34                 a0 = s1 << 0x34
 45288: 98 77 3a                 a0 = a0 >> 0x3a
 45291: 95 77 80 00              a0 = a0 + 0x80
 45295: 78 17 0e                 u8 [sp + 0xe] = a0
 45298: 84 67 3f                 a0 = s1 & 0x3f
 45301: 86 77 80 00              a0 = a0 | 0x80
 45305: 78 17 0f                 u8 [sp + 0xf] = a0
 45308: 33 06 04                 s1 = 0x4
 45311: 01                       fallthrough
      :                          @2832
 45312: 82 a5 10                 s0 = u64 [a3 + 0x10]
 45315: 82 a7                    a0 = u64 [a3]
 45317: c9 57 07                 a0 = a0 - s0
 45320: ac 67 2e                 jump @2836 if a0 <u s1
      :                          @2833
 45323: 7b 1a                    u64 [sp] = a3
 45325: 82 a7 08                 a0 = u64 [a3 + 0x8]
 45328: c8 57 07                 a0 = a0 + s0
 45331: 95 18 0c                 a1 = sp + 0xc
 45334: 64 69                    a2 = s1
 45336: 50 20 48 03 3f           ra = 840, jump @2839
      :                          @2834 [@dyn 420]
 45341: c8 56 06                 s1 = s1 + s0
 45344: 82 17                    a0 = u64 [sp]
 45346: 7b 76 10                 u64 [a0 + 0x10] = s1
 45349: 01                       fallthrough
      :                          @2835
 45350: 33 07                    a0 = 0
 45352: 82 10 20                 ra = u64 [sp + 0x20]
 45355: 82 15 18                 s0 = u64 [sp + 0x18]
 45358: 82 16 10                 s1 = u64 [sp + 0x10]
 45361: 95 11 28                 sp = sp + 0x28
 45364: 32 00                    ret
      :                          @2836
 45366: 64 a7                    a0 = a3
 45368: 64 58                    a1 = s0
 45370: 64 69                    a2 = s1
 45372: 64 a5                    s0 = a3
 45374: 50 20 4a 03 5f fb        ra = 842, jump @2733
      :                          @2837 [@dyn 421]
 45380: 64 5a                    a3 = s0
 45382: 82 55 10                 s0 = u64 [s0 + 0x10]
 45385: 28 c2                    jump @2833
      :                          @2838 [@dyn 422]
 45387: 64 8a                    a3 = a1
 45389: 33 08 78 10 01           a1 = 0x11078
 45394: 64 a9                    a2 = a3
 45396: 28 2d 0a                 jump @3046
      :                          @2839
 45399: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 45402: 7b 10 18                 u64 [sp + 0x18] = ra
 45405: 7b 15 10                 u64 [sp + 0x10] = s0
 45408: 7b 16 08                 u64 [sp + 0x8] = s1
 45411: 53 19 10 64              jump @2848 if a2 <u 16
      :                          @2840
 45415: 8d 7a                    i32 a3 = -a0
 45417: 84 a2 07                 t0 = a3 & 0x7
 45420: c8 27 0b                 a4 = a0 + t0
 45423: 51 02 15                 jump @2843 if t0 == 0
      :                          @2841
 45426: 64 8c                    a5 = a1
 45428: 64 75                    s0 = a0
 45430: 01                       fallthrough
      :                          @2842
 45431: 7c ca                    a3 = u8 [a5]
 45433: 78 5a                    u8 [s0] = a3
 45435: 95 55 01                 s0 = s0 + 0x1
 45438: 95 cc 01                 a5 = a5 + 0x1
 45441: ac b5 f6                 jump @2842 if s0 <u a4
      :                          @2843
 45444: c8 28 03                 t1 = a1 + t0
 45447: c9 29 02                 t0 = a2 - t0
 45450: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 45453: 84 38 07                 a1 = t1 & 0x7
 45456: c8 4b 0a                 a3 = a4 + t2
 45459: 51 08 3b                 jump @2850 if a1 == 0
      :                          @2844
 45462: 58 04 4b                 jump @2853 if t2 <=s 0
      :                          @2845
 45465: 97 38 03                 a1 = t1 << 0x3
 45468: 84 80 38                 ra = a1 & 0x38
 45471: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 45474: 82 c5                    s0 = u64 [a5]
 45476: 8d 88                    i32 a1 = -a1
 45478: 84 88 38                 a1 = a1 & 0x38
 45481: 95 cc 08                 a5 = a5 + 0x8
 45484: 01                       fallthrough
      :                          @2846
 45485: 82 c6                    s1 = u64 [a5]
 45487: d0 05 05                 s0 = s0 >> ra
 45490: cf 86 09                 a2 = s1 << a1
 45493: d4 59 09                 a2 = a2 | s0
 45496: 7b b9                    u64 [a4] = a2
 45498: 95 bb 08                 a4 = a4 + 0x8
 45501: 95 cc 08                 a5 = a5 + 0x8
 45504: 64 65                    s0 = s1
 45506: ac ab eb                 jump @2846 if a4 <u a3
      :                          @2847
 45509: 28 1c                    jump @2853
      :                          @2848
 45511: 64 7a                    a3 = a0
 45513: 52 09 21                 jump @2854 if a2 != 0
      :                          @2849
 45516: 28 2f                    jump @2856
      :                          @2850
 45518: 58 04 13                 jump @2853 if t2 <=s 0
      :                          @2851
 45521: 64 38                    a1 = t1
 45523: 01                       fallthrough
      :                          @2852
 45524: 82 89                    a2 = u64 [a1]
 45526: 7b b9                    u64 [a4] = a2
 45528: 95 bb 08                 a4 = a4 + 0x8
 45531: 95 88 08                 a1 = a1 + 0x8
 45534: ac ab f6                 jump @2852 if a4 <u a3
      :                          @2853
 45537: c8 43 08                 a1 = t1 + t2
 45540: 84 29 07                 a2 = t0 & 0x7
 45543: 51 09 14                 jump @2856 if a2 == 0
      :                          @2854
 45546: c8 a9 09                 a2 = a2 + a3
 45549: 01                       fallthrough
      :                          @2855
 45550: 7c 8b                    a4 = u8 [a1]
 45552: 78 ab                    u8 [a3] = a4
 45554: 95 aa 01                 a3 = a3 + 0x1
 45557: 95 88 01                 a1 = a1 + 0x1
 45560: ac 9a f6                 jump @2855 if a3 <u a2
      :                          @2856
 45563: 82 10 18                 ra = u64 [sp + 0x18]
 45566: 82 15 10                 s0 = u64 [sp + 0x10]
 45569: 82 16 08                 s1 = u64 [sp + 0x8]
 45572: 95 11 20                 sp = sp + 0x20
 45575: 32 00                    ret
      :                          @2857
 45577: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 45580: 7b 10 18                 u64 [sp + 0x18] = ra
 45583: 7b 15 10                 u64 [sp + 0x10] = s0
 45586: 7b 16 08                 u64 [sp + 0x8] = s1
 45589: c9 87 0a                 a3 = a0 - a1
 45592: ae 9a 7d                 jump @2867 if a3 >=u a2
      :                          @2858
 45595: c8 97 0a                 a3 = a0 + a2
 45598: c8 98 02                 t0 = a1 + a2
 45601: 53 19 10 da 00           jump @2876 if a2 <u 16
      :                          @2859
 45606: 84 a4 07                 t2 = a3 & 0x7
 45609: 9a 43                    t1 = -t2
 45611: 84 ab f8                 a4 = a3 & 0xfffffffffffffff8
 45614: 51 04 1a                 jump @2862 if t2 == 0
      :                          @2860
 45617: c8 98 05                 s0 = a1 + a2
 45620: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 45623: 01                       fallthrough
      :                          @2861
 45624: 7c 5c                    a5 = u8 [s0]
 45626: 95 a6 ff                 s1 = a3 + 0xffffffffffffffff
 45629: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
 45632: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 45635: 64 6a                    a3 = s1
 45637: ac 6b f3                 jump @2861 if a4 <u s1
      :                          @2862
 45640: c8 32 02                 t0 = t0 + t1
 45643: c9 49 03                 t1 = a2 - t2
 45646: 84 34 f8                 t2 = t1 & 0xfffffffffffffff8
 45649: 7b 12                    u64 [sp] = t0
 45651: 84 29 07                 a2 = t0 & 0x7
 45654: c9 4b 0a                 a3 = a4 - t2
 45657: 51 09 b0 00              jump @2879 if a2 == 0
      :                          @2863
 45661: 58 04 c6 00              jump @2882 if t2 <=s 0
      :                          @2864
 45665: 82 16                    s1 = u64 [sp]
 45667: 97 69 03                 a2 = s1 << 0x3
 45670: 84 90 38                 ra = a2 & 0x38
 45673: 84 66 f8                 s1 = s1 & 0xfffffffffffffff8
 45676: 82 65                    s0 = u64 [s1]
 45678: 8d 99                    i32 a2 = -a2
 45680: 84 9c 38                 a5 = a2 & 0x38
 45683: 95 69 f8                 a2 = s1 + 0xfffffffffffffff8
 45686: 01                       fallthrough
      :                          @2865
 45687: 82 96                    s1 = u64 [a2]
 45689: cf c5 05                 s0 = s0 << a5
 45692: d0 06 08                 a1 = s1 >> ra
 45695: d4 58 08                 a1 = a1 | s0
 45698: 95 b2 f8                 t0 = a4 + 0xfffffffffffffff8
 45701: 7b b8 f8                 u64 [a4 + 0xfffffffffffffff8] = a1
 45704: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 45707: 64 65                    s0 = s1
 45709: 64 2b                    a4 = t0
 45711: ac 2a e8                 jump @2865 if a3 <u t0
      :                          @2866
 45714: 28 91 00                 jump @2882
      :                          @2867
 45717: 53 19 10 6d              jump @2877 if a2 <u 16
      :                          @2868
 45721: 8d 7a                    i32 a3 = -a0
 45723: 84 aa 07                 a3 = a3 & 0x7
 45726: c8 a7 0b                 a4 = a0 + a3
 45729: 51 0a 15                 jump @2871 if a3 == 0
      :                          @2869
 45732: 64 8c                    a5 = a1
 45734: 64 75                    s0 = a0
 45736: 01                       fallthrough
      :                          @2870
 45737: 7c c6                    s1 = u8 [a5]
 45739: 78 56                    u8 [s0] = s1
 45741: 95 55 01                 s0 = s0 + 0x1
 45744: 95 cc 01                 a5 = a5 + 0x1
 45747: ac b5 f6                 jump @2870 if s0 <u a4
      :                          @2871
 45750: c8 a8 03                 t1 = a1 + a3
 45753: c9 a9 02                 t0 = a2 - a3
 45756: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 45759: 84 38 07                 a1 = t1 & 0x7
 45762: c8 4b 0a                 a3 = a4 + t2
 45765: 51 08 84 00              jump @2886 if a1 == 0
      :                          @2872
 45769: 58 04 93 00              jump @2889 if t2 <=s 0
      :                          @2873
 45773: 97 38 03                 a1 = t1 << 0x3
 45776: 84 80 38                 ra = a1 & 0x38
 45779: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 45782: 82 c5                    s0 = u64 [a5]
 45784: 8d 88                    i32 a1 = -a1
 45786: 84 88 38                 a1 = a1 & 0x38
 45789: 95 cc 08                 a5 = a5 + 0x8
 45792: 01                       fallthrough
      :                          @2874
 45793: 82 c6                    s1 = u64 [a5]
 45795: d0 05 05                 s0 = s0 >> ra
 45798: cf 86 09                 a2 = s1 << a1
 45801: d4 59 09                 a2 = a2 | s0
 45804: 7b b9                    u64 [a4] = a2
 45806: 95 bb 08                 a4 = a4 + 0x8
 45809: 95 cc 08                 a5 = a5 + 0x8
 45812: 64 65                    s0 = s1
 45814: ac ab eb                 jump @2874 if a4 <u a3
      :                          @2875
 45817: 28 63                    jump @2889
      :                          @2876
 45819: 64 78                    a1 = a0
 45821: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 45824: 28 37                    jump @2884
      :                          @2877
 45826: 64 7a                    a3 = a0
 45828: 52 09 61                 jump @2890 if a2 != 0
      :                          @2878
 45831: 28 6f                    jump @2892
      :                          @2879
 45833: 58 04 1a                 jump @2882 if t2 <=s 0
      :                          @2880
 45836: c8 38 08                 a1 = a1 + t1
 45839: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 45842: 01                       fallthrough
      :                          @2881
 45843: 82 89                    a2 = u64 [a1]
 45845: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
 45848: 7b b9 f8                 u64 [a4 + 0xfffffffffffffff8] = a2
 45851: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 45854: 64 cb                    a4 = a5
 45856: ac ca f3                 jump @2881 if a3 <u a5
      :                          @2882
 45859: 84 38 07                 a1 = t1 & 0x7
 45862: 51 08 50                 jump @2892 if a1 == 0
      :                          @2883
 45865: 9a 49                    a2 = -t2
 45867: 82 12                    t0 = u64 [sp]
 45869: c8 92 02                 t0 = t0 + a2
 45872: c9 8a 08                 a1 = a3 - a1
 45875: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 45878: 01                       fallthrough
      :                          @2884
 45879: 7c 29                    a2 = u8 [t0]
 45881: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
 45884: 78 a9 ff                 u8 [a3 + 0xffffffffffffffff] = a2
 45887: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 45890: 64 ba                    a3 = a4
 45892: ac b8 f3                 jump @2884 if a1 <u a4
      :                          @2885
 45895: 28 2f                    jump @2892
      :                          @2886
 45897: 58 04 13                 jump @2889 if t2 <=s 0
      :                          @2887
 45900: 64 38                    a1 = t1
 45902: 01                       fallthrough
      :                          @2888
 45903: 82 89                    a2 = u64 [a1]
 45905: 7b b9                    u64 [a4] = a2
 45907: 95 bb 08                 a4 = a4 + 0x8
 45910: 95 88 08                 a1 = a1 + 0x8
 45913: ac ab f6                 jump @2888 if a4 <u a3
      :                          @2889
 45916: c8 43 08                 a1 = t1 + t2
 45919: 84 29 07                 a2 = t0 & 0x7
 45922: 51 09 14                 jump @2892 if a2 == 0
      :                          @2890
 45925: c8 a9 09                 a2 = a2 + a3
 45928: 01                       fallthrough
      :                          @2891
 45929: 7c 8b                    a4 = u8 [a1]
 45931: 78 ab                    u8 [a3] = a4
 45933: 95 aa 01                 a3 = a3 + 0x1
 45936: 95 88 01                 a1 = a1 + 0x1
 45939: ac 9a f6                 jump @2891 if a3 <u a2
      :                          @2892
 45942: 82 10 18                 ra = u64 [sp + 0x18]
 45945: 82 15 10                 s0 = u64 [sp + 0x10]
 45948: 82 16 08                 s1 = u64 [sp + 0x8]
 45951: 95 11 20                 sp = sp + 0x20
 45954: 32 00                    ret
      :                          @2893
 45956: 53 19 10 48              jump @2902 if a2 <u 16
      :                          @2894
 45960: 8d 7a                    i32 a3 = -a0
 45962: 84 aa 07                 a3 = a3 & 0x7
 45965: c8 a7 0b                 a4 = a0 + a3
 45968: 51 0a 0e                 jump @2897 if a3 == 0
      :                          @2895
 45971: 64 7c                    a5 = a0
 45973: 01                       fallthrough
      :                          @2896
 45974: 78 c8                    u8 [a5] = a1
 45976: 95 cc 01                 a5 = a5 + 0x1
 45979: ac bc fb                 jump @2896 if a5 <u a4
      :                          @2897
 45982: c9 a9 03                 t1 = a2 - a3
 45985: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 45988: c8 cb 0a                 a3 = a4 + a5
 45991: 58 0c 1d                 jump @2900 if a5 <=s 0
      :                          @2898
 45994: 84 82 ff 00              t0 = a1 & 0xff
 45998: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 46008: ca 92 0c                 a5 = t0 * a2
 46011: 01                       fallthrough
      :                          @2899
 46012: 7b bc                    u64 [a4] = a5
 46014: 95 bb 08                 a4 = a4 + 0x8
 46017: ac ab fb                 jump @2899 if a4 <u a3
      :                          @2900
 46020: 84 39 07                 a2 = t1 & 0x7
 46023: 52 09 0a                 jump @2903 if a2 != 0
      :                          @2901
 46026: 28 13                    jump @2905
      :                          @2902
 46028: 64 7a                    a3 = a0
 46030: 51 09 0f                 jump @2905 if a2 == 0
      :                          @2903
 46033: c8 a9 09                 a2 = a2 + a3
 46036: 01                       fallthrough
      :                          @2904
 46037: 78 a8                    u8 [a3] = a1
 46039: 95 aa 01                 a3 = a3 + 0x1
 46042: ac 9a fb                 jump @2904 if a3 <u a2
      :                          @2905
 46045: 32 00                    ret
      :                          @2906 [@dyn 423]
 46047: 82 77                    a0 = u64 [a0]
 46049: 01                       fallthrough
      :                          @2907
 46050: 28                       jump @2907
      :                          @2908 [@dyn 424]
 46051: 82 77                    a0 = u64 [a0]
 46053: 64 89                    a2 = a1
 46055: 33 08 01                 a1 = 0x1
 46058: 01                       fallthrough
      :                          @2909
 46059: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 46062: 7b 10 58                 u64 [sp + 0x58] = ra
 46065: 7b 15 50                 u64 [sp + 0x50] = s0
 46068: 7b 16 48                 u64 [sp + 0x48] = s1
 46071: 7b 19 08                 u64 [sp + 0x8] = a2
 46074: 7b 18                    u64 [sp] = a1
 46076: 98 7a 04                 a3 = a0 >> 0x4
 46079: 33 09 27                 a2 = 0x27
 46082: 53 2a 71 02 81 00        jump @2912 if a3 <u 625
      :                          @2910
 46088: 33 09 27                 a2 = 0x27
 46091: 95 1b 46                 a4 = sp + 0x46
 46094: 3a 08 d0 00 03           a1 = u64 [0x300d0]
 46099: 7b 18 18                 u64 [sp + 0x18] = a1
 46102: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
 46108: 33 03 7b 14              t1 = 0x147b
 46112: 33 05 ec 10 01           s0 = 0x110ec
 46117: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 46123: 01                       fallthrough
      :                          @2911
 46124: 64 74                    t2 = a0
 46126: 82 17 18                 a0 = u64 [sp + 0x18]
 46129: d6 74 07                 a0 = t2 mulhu a0
 46132: 98 77 0b                 a0 = a0 >> 0xb
 46135: 82 18 10                 a1 = u64 [sp + 0x10]
 46138: c0 87 02                 i32 t0 = a0 * a1
 46141: c8 42 0a                 a3 = t0 + t2
 46144: 97 a2 30                 t0 = a3 << 0x30
 46147: 98 28 32                 a1 = t0 >> 0x32
 46150: ca 38 08                 a1 = a1 * t1
 46153: 98 8c 11                 a5 = a1 >> 0x11
 46156: 98 88 10                 a1 = a1 >> 0x10
 46159: 84 88 fe 07              a1 = a1 & 0x7fe
 46163: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
 46166: c8 ca 0a                 a3 = a3 + a5
 46169: 97 aa 31                 a3 = a3 << 0x31
 46172: 98 aa 30                 a3 = a3 >> 0x30
 46175: c8 58 08                 a1 = a1 + s0
 46178: 7c 8c                    a5 = u8 [a1]
 46180: 7c 88 01                 a1 = u8 [a1 + 0x1]
 46183: c8 5a 0a                 a3 = a3 + s0
 46186: 7c a6 01                 s1 = u8 [a3 + 0x1]
 46189: 7c aa                    a3 = u8 [a3]
 46191: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
 46194: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
 46197: 78 b6 01                 u8 [a4 + 0x1] = s1
 46200: 78 ba                    u8 [a4] = a3
 46202: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
 46205: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 46208: ac 40 ac                 jump @2911 if ra <u t2
      :                          @2912
 46211: 54 17 63 3b              jump @2914 if a0 <=u 99
      :                          @2913
 46215: 97 78 30                 a1 = a0 << 0x30
 46218: 98 88 32                 a1 = a1 >> 0x32
 46221: 96 88 7b 14              a1 = a1 * 0x147b
 46225: 98 88 11                 a1 = a1 >> 0x11
 46228: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
 46231: c8 a7 07                 a0 = a0 + a3
 46234: 97 77 31                 a0 = a0 << 0x31
 46237: 98 77 30                 a0 = a0 >> 0x30
 46240: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 46243: 33 0a ec 10 01           a3 = 0x110ec
 46248: c8 a7 07                 a0 = a0 + a3
 46251: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 46254: 7c 77                    a0 = u8 [a0]
 46256: 95 1b 21                 a4 = sp + 0x21
 46259: c8 9b 0b                 a4 = a4 + a2
 46262: 78 ba 01                 u8 [a4 + 0x1] = a3
 46265: 78 b7                    u8 [a4] = a0
 46267: 64 87                    a0 = a1
 46269: 01                       fallthrough
      :                          @2914
 46270: 55 17 0a 14              jump @2916 if a0 >=u 10
      :                          @2915
 46274: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 46277: 95 18 21                 a1 = sp + 0x21
 46280: c8 98 08                 a1 = a1 + a2
 46283: 83 77 30                 i32 a0 = a0 + 0x30
 46286: 78 87                    u8 [a1] = a0
 46288: 28 21                    jump @2917
      :                          @2916
 46290: 97 77 01                 a0 = a0 << 0x1
 46293: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 46296: 33 08 ec 10 01           a1 = 0x110ec
 46301: c8 87 07                 a0 = a0 + a1
 46304: 7c 78 01                 a1 = u8 [a0 + 0x1]
 46307: 7c 77                    a0 = u8 [a0]
 46309: 95 1a 21                 a3 = sp + 0x21
 46312: c8 9a 0a                 a3 = a3 + a2
 46315: 78 a8 01                 u8 [a3 + 0x1] = a1
 46318: 78 a7                    u8 [a3] = a0
 46320: 01                       fallthrough
      :                          @2917
 46321: 95 1b 21                 a4 = sp + 0x21
 46324: c8 9b 0b                 a4 = a4 + a2
 46327: 9a 9c 27                 a5 = 0x27 - a2
 46330: 33 09 a8 10 01           a2 = 0x110a8
 46335: 82 17 08                 a0 = u64 [sp + 0x8]
 46338: 82 18                    a1 = u64 [sp]
 46340: 33 0a                    a3 = 0
 46342: 50 20 52 03 13           ra = 850, jump @2919
      :                          @2918 [@dyn 425]
 46347: 82 10 58                 ra = u64 [sp + 0x58]
 46350: 82 15 50                 s0 = u64 [sp + 0x50]
 46353: 82 16 48                 s1 = u64 [sp + 0x48]
 46356: 95 11 60                 sp = sp + 0x60
 46359: 32 00                    ret
      :                          @2919
 46361: 95 11 98                 sp = sp + 0xffffffffffffff98
 46364: 7b 10 60                 u64 [sp + 0x60] = ra
 46367: 7b 15 58                 u64 [sp + 0x58] = s0
 46370: 7b 16 50                 u64 [sp + 0x50] = s1
 46373: 7b 1b 18                 u64 [sp + 0x18] = a4
 46376: 51 08 4f                 jump @2926 if a1 == 0
      :                          @2920
 46379: 80 76 34                 s1 = u32 [a0 + 0x34]
 46382: 84 68 01                 a1 = s1 & 0x1
 46385: 33 0b 2b                 a4 = 0x2b
 46388: 33 05 00 00 11           s0 = 0x110000
 46393: db 8b 05                 s0 = a4 if a1 != 0
 46396: 7b 15 28                 u64 [sp + 0x28] = s0
 46399: c8 c8 02                 t0 = a1 + a5
 46402: 84 68 04                 a1 = s1 & 0x4
 46405: 51 08 42                 jump @2927 if a1 == 0
      :                          @2921
 46408: 7b 19 30                 u64 [sp + 0x30] = a2
 46411: 33 08                    a1 = 0
 46413: 51 0a 1a                 jump @2924 if a3 == 0
      :                          @2922
 46416: 64 a5                    s0 = a3
 46418: 01                       fallthrough
      :                          @2923
 46419: 7d 9b                    a4 = i8 [a2]
 46421: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 46424: 85 bb 01                 a4 = a4 ^ 0x1
 46427: c8 b8 08                 a1 = a1 + a4
 46430: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 46433: 95 99 01                 a2 = a2 + 0x1
 46436: 52 05 ef                 jump @2923 if s0 != 0
      :                          @2924
 46439: c8 82 02                 t0 = t0 + a1
 46442: 7b 1a 38                 u64 [sp + 0x38] = a3
 46445: 82 78                    a1 = u64 [a0]
 46447: 7b 1c 20                 u64 [sp + 0x20] = a5
 46450: 52 08 23                 jump @2928 if a1 != 0
      :                          @2925
 46453: 28 41                    jump @2933
      :                          @2926
 46455: 81 76 34                 s1 = i32 [a0 + 0x34]
 46458: 95 c2 01                 t0 = a5 + 0x1
 46461: 49 11 28 2d              u64 [sp + 40] = 0x2d
 46465: 84 68 04                 a1 = s1 & 0x4
 46468: 52 08 c4                 jump @2921 if a1 != 0
      :                          @2927
 46471: 49 11 30                 u64 [sp + 48] = 0
 46474: 7b 1a 38                 u64 [sp + 0x38] = a3
 46477: 82 78                    a1 = u64 [a0]
 46479: 7b 1c 20                 u64 [sp + 0x20] = a5
 46482: 51 08 24                 jump @2933 if a1 == 0
      :                          @2928
 46485: 82 75 08                 s0 = u64 [a0 + 0x8]
 46488: ae 52 1e                 jump @2933 if t0 >=u s0
      :                          @2929
 46491: 84 66 08                 s1 = s1 & 0x8
 46494: 52 06 51                 jump @2936 if s1 != 0
      :                          @2930
 46497: 7c 79 38                 a2 = u8 [a0 + 0x38]
 46500: c9 25 0a                 a3 = s0 - t0
 46503: 5a 19 01 a4 00           jump @2943 if a2 >s 1
      :                          @2931
 46508: 52 09 b1 00              jump @2945 if a2 != 0
      :                          @2932
 46512: 7b 1a 10                 u64 [sp + 0x10] = a3
 46515: 28 b0 00                 jump @2946
      :                          @2933
 46518: 82 75 20                 s0 = u64 [a0 + 0x20]
 46521: 82 76 28                 s1 = u64 [a0 + 0x28]
 46524: 64 57                    a0 = s0
 46526: 64 68                    a1 = s1
 46528: 82 19 28                 a2 = u64 [sp + 0x28]
 46531: 82 1a 30                 a3 = u64 [sp + 0x30]
 46534: 82 1b 38                 a4 = u64 [sp + 0x38]
 46537: 50 20 54 03 76 01        ra = 852, jump @2966
      :                          @2934 [@dyn 426]
 46543: 33 08 01                 a1 = 0x1
 46546: 52 07 bf 00              jump @2951 if a0 != 0
      :                          @2935
 46550: 82 6c 18                 a5 = u64 [s1 + 0x18]
 46553: 64 57                    a0 = s0
 46555: 82 18 18                 a1 = u64 [sp + 0x18]
 46558: 82 19 20                 a2 = u64 [sp + 0x20]
 46561: 82 10 60                 ra = u64 [sp + 0x60]
 46564: 82 15 58                 s0 = u64 [sp + 0x58]
 46567: 82 16 50                 s1 = u64 [sp + 0x50]
 46570: 95 11 68                 sp = sp + 0x68
 46573: 32 0c                    jump [a5]
      :                          @2936
 46575: 7b 12 40                 u64 [sp + 0x40] = t0
 46578: 81 78 30                 a1 = i32 [a0 + 0x30]
 46581: 7b 18 08                 u64 [sp + 0x8] = a1
 46584: 7c 79 38                 a2 = u8 [a0 + 0x38]
 46587: 7b 19                    u64 [sp] = a2
 46589: 82 79 20                 a2 = u64 [a0 + 0x20]
 46592: 82 76 28                 s1 = u64 [a0 + 0x28]
 46595: 48 17 30 30              u32 [a0 + 48] = 0x30
 46599: 7b 17 10                 u64 [sp + 0x10] = a0
 46602: 46 17 38 01              u8 [a0 + 56] = 0x1
 46606: 7b 19 48                 u64 [sp + 0x48] = a2
 46609: 64 97                    a0 = a2
 46611: 64 68                    a1 = s1
 46613: 82 19 28                 a2 = u64 [sp + 0x28]
 46616: 82 1a 30                 a3 = u64 [sp + 0x30]
 46619: 82 1b 38                 a4 = u64 [sp + 0x38]
 46622: 50 20 56 03 21 01        ra = 854, jump @2966
      :                          @2937 [@dyn 427]
 46628: 52 07 69                 jump @2950 if a0 != 0
      :                          @2938
 46631: 82 17 40                 a0 = u64 [sp + 0x40]
 46634: c9 75 05                 s0 = s0 - a0
 46637: 95 55 01                 s0 = s0 + 0x1
 46640: 01                       fallthrough
      :                          @2939
 46641: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 46644: 51 05 cb 00              jump @2961 if s0 == 0
      :                          @2940
 46648: 82 69 20                 a2 = u64 [s1 + 0x20]
 46651: 33 08 30                 a1 = 0x30
 46654: 82 17 48                 a0 = u64 [sp + 0x48]
 46657: b4 90 02 58 03           ra = 856, jump [a2]
      :                          @2941 [@dyn 428]
 46662: 51 07 eb                 jump @2939 if a0 == 0
      :                          @2942
 46665: 28 44                    jump @2950
      :                          @2943
 46667: 52 19 02 12              jump @2945 if a2 != 2
      :                          @2944
 46671: 98 a9 01                 a2 = a3 >> 0x1
 46674: 95 a8 01                 a1 = a3 + 0x1
 46677: 98 88 01                 a1 = a1 >> 0x1
 46680: 7b 18 10                 u64 [sp + 0x10] = a1
 46683: 28 08                    jump @2946
      :                          @2945
 46685: 64 a9                    a2 = a3
 46687: 49 11 10                 u64 [sp + 16] = 0
 46690: 01                       fallthrough
      :                          @2946
 46691: 82 78 20                 a1 = u64 [a0 + 0x20]
 46694: 7b 18 48                 u64 [sp + 0x48] = a1
 46697: 82 76 28                 s1 = u64 [a0 + 0x28]
 46700: 81 77 30                 a0 = i32 [a0 + 0x30]
 46703: 7b 17 40                 u64 [sp + 0x40] = a0
 46706: 95 95 01                 s0 = a2 + 0x1
 46709: 01                       fallthrough
      :                          @2947
 46710: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 46713: 51 05 28                 jump @2952 if s0 == 0
      :                          @2948
 46716: 82 69 20                 a2 = u64 [s1 + 0x20]
 46719: 82 17 48                 a0 = u64 [sp + 0x48]
 46722: 82 18 40                 a1 = u64 [sp + 0x40]
 46725: b4 90 02 5a 03           ra = 858, jump [a2]
      :                          @2949 [@dyn 429]
 46730: 51 07 ec                 jump @2947 if a0 == 0
      :                          @2950
 46733: 33 08 01                 a1 = 0x1
 46736: 01                       fallthrough
      :                          @2951
 46737: 64 87                    a0 = a1
 46739: 82 10 60                 ra = u64 [sp + 0x60]
 46742: 82 15 58                 s0 = u64 [sp + 0x58]
 46745: 82 16 50                 s1 = u64 [sp + 0x50]
 46748: 95 11 68                 sp = sp + 0x68
 46751: 32 00                    ret
      :                          @2952
 46753: 82 15 48                 s0 = u64 [sp + 0x48]
 46756: 64 57                    a0 = s0
 46758: 64 68                    a1 = s1
 46760: 82 19 28                 a2 = u64 [sp + 0x28]
 46763: 82 1a 30                 a3 = u64 [sp + 0x30]
 46766: 82 1b 38                 a4 = u64 [sp + 0x38]
 46769: 50 20 5c 03 8e 00        ra = 860, jump @2966
      :                          @2953 [@dyn 430]
 46775: 33 08 01                 a1 = 0x1
 46778: 52 07 d7                 jump @2951 if a0 != 0
      :                          @2954
 46781: 82 6a 18                 a3 = u64 [s1 + 0x18]
 46784: 64 57                    a0 = s0
 46786: 82 18 18                 a1 = u64 [sp + 0x18]
 46789: 82 19 20                 a2 = u64 [sp + 0x20]
 46792: b4 a0 02 5e 03           ra = 862, jump [a3]
      :                          @2955 [@dyn 431]
 46797: 33 08 01                 a1 = 0x1
 46800: 52 07 c1                 jump @2951 if a0 != 0
      :                          @2956
 46803: 82 17 10                 a0 = u64 [sp + 0x10]
 46806: 9a 77                    a0 = -a0
 46808: 7b 17 38                 u64 [sp + 0x38] = a0
 46811: 33 05 ff                 s0 = 0xffffffffffffffff
 46814: 01                       fallthrough
      :                          @2957
 46815: 82 17 38                 a0 = u64 [sp + 0x38]
 46818: c8 57 07                 a0 = a0 + s0
 46821: 51 17 ff 45              jump @2964 if a0 == 4294967295
      :                          @2958
 46825: 82 69 20                 a2 = u64 [s1 + 0x20]
 46828: 82 17 48                 a0 = u64 [sp + 0x48]
 46831: 82 18 40                 a1 = u64 [sp + 0x40]
 46834: b4 90 02 60 03           ra = 864, jump [a2]
      :                          @2959 [@dyn 432]
 46839: 95 55 01                 s0 = s0 + 0x1
 46842: 51 07 e5                 jump @2957 if a0 == 0
      :                          @2960
 46845: 28 39                    jump @2965
      :                          @2961
 46847: 82 6a 18                 a3 = u64 [s1 + 0x18]
 46850: 82 17 48                 a0 = u64 [sp + 0x48]
 46853: 82 18 18                 a1 = u64 [sp + 0x18]
 46856: 82 19 20                 a2 = u64 [sp + 0x20]
 46859: b4 a0 02 62 03           ra = 866, jump [a3]
      :                          @2962 [@dyn 433]
 46864: 33 08 01                 a1 = 0x1
 46867: 52 07 7e ff              jump @2951 if a0 != 0
      :                          @2963
 46871: 33 08                    a1 = 0
 46873: 82 17 10                 a0 = u64 [sp + 0x10]
 46876: 82 19 08                 a2 = u64 [sp + 0x8]
 46879: 7a 79 30                 u32 [a0 + 0x30] = a2
 46882: 82 19                    a2 = u64 [sp]
 46884: 78 79 38                 u8 [a0 + 0x38] = a2
 46887: 28 6a ff                 jump @2951
      :                          @2964
 46890: 82 15 10                 s0 = u64 [sp + 0x10]
 46893: 82 17 10                 a0 = u64 [sp + 0x10]
 46896: d8 75 08                 a1 = s0 <u a0
 46899: 28 5e ff                 jump @2951
      :                          @2965
 46902: 82 17 10                 a0 = u64 [sp + 0x10]
 46905: d8 75 08                 a1 = s0 <u a0
 46908: 28 55 ff                 jump @2951
      :                          @2966
 46911: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 46914: 7b 10 20                 u64 [sp + 0x20] = ra
 46917: 7b 15 18                 u64 [sp + 0x18] = s0
 46920: 7b 16 10                 u64 [sp + 0x10] = s1
 46923: 83 9c                    i32 a5 = a2 + 0
 46925: 33 02 00 00 11           t0 = 0x110000
 46930: 64 a6                    s1 = a3
 46932: 64 85                    s0 = a1
 46934: 64 7a                    a3 = a0
 46936: aa 2c 21                 jump @2969 if a5 == t0
      :                          @2967
 46939: 82 5c 20                 a5 = u64 [s0 + 0x20]
 46942: 64 a7                    a0 = a3
 46944: 64 98                    a1 = a2
 46946: 7b 1b 08                 u64 [sp + 0x8] = a4
 46949: 7b 1a                    u64 [sp] = a3
 46951: b4 c0 02 64 03           ra = 868, jump [a5]
      :                          @2968 [@dyn 434]
 46956: 82 1a                    a3 = u64 [sp]
 46958: 82 1b 08                 a4 = u64 [sp + 0x8]
 46961: 64 78                    a1 = a0
 46963: 33 07 01                 a0 = 0x1
 46966: 52 08 20                 jump @2972 if a1 != 0
      :                          @2969
 46969: 51 06 1a                 jump @2971 if s1 == 0
      :                          @2970
 46972: 82 5c 18                 a5 = u64 [s0 + 0x18]
 46975: 64 a7                    a0 = a3
 46977: 64 68                    a1 = s1
 46979: 64 b9                    a2 = a4
 46981: 82 10 20                 ra = u64 [sp + 0x20]
 46984: 82 15 18                 s0 = u64 [sp + 0x18]
 46987: 82 16 10                 s1 = u64 [sp + 0x10]
 46990: 95 11 28                 sp = sp + 0x28
 46993: 32 0c                    jump [a5]
      :                          @2971
 46995: 33 07                    a0 = 0
 46997: 01                       fallthrough
      :                          @2972
 46998: 82 10 20                 ra = u64 [sp + 0x20]
 47001: 82 15 18                 s0 = u64 [sp + 0x18]
 47004: 82 16 10                 s1 = u64 [sp + 0x10]
 47007: 95 11 28                 sp = sp + 0x28
 47010: 32 00                    ret
      :                          @2973
 47012: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 47015: 7b 10 40                 u64 [sp + 0x40] = ra
 47018: 7b 15 38                 u64 [sp + 0x38] = s0
 47021: 7b 16 30                 u64 [sp + 0x30] = s1
 47024: 82 74                    t2 = u64 [a0]
 47026: 82 7a 10                 a3 = u64 [a0 + 0x10]
 47029: d4 a4 0b                 a4 = t2 | a3
 47032: 64 93                    t1 = a2
 47034: 64 85                    s0 = a1
 47036: 51 0b aa 03              jump @3045 if a4 == 0
      :                          @2974
 47040: 7b 17 08                 u64 [sp + 0x8] = a0
 47043: 51 0a f4 00              jump @2993 if a3 == 0
      :                          @2975
 47047: 82 7c 18                 a5 = u64 [a0 + 0x18]
 47050: 33 0a                    a3 = 0
 47052: 7b 13 18                 u64 [sp + 0x18] = t1
 47055: c8 53 03                 t1 = t1 + s0
 47058: 95 cc 01                 a5 = a5 + 0x1
 47061: 33 00 00 00 11           ra = 0x110000
 47066: 33 07 df 00              a0 = 0xdf
 47070: 7b 15 10                 u64 [sp + 0x10] = s0
 47073: 64 59                    a2 = s0
 47075: 28 12                    jump @2978
      :                          @2976
 47077: 95 98 01                 a1 = a2 + 0x1
 47080: 01                       fallthrough
      :                          @2977
 47081: c9 9a 0a                 a3 = a3 - a2
 47084: c8 8a 0a                 a3 = a3 + a1
 47087: 64 89                    a2 = a1
 47089: aa 05 bc 00              jump @2992 if s0 == ra
      :                          @2978
 47093: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 47096: 51 0c 68                 jump @2987 if a5 == 0
      :                          @2979
 47099: aa 39 b2 00              jump @2992 if a2 == t1
      :                          @2980
 47103: 7d 98                    a1 = i8 [a2]
 47105: 84 85 ff 00              s0 = a1 & 0xff
 47109: 59 08 e0                 jump @2976 if a1 >=s 0
      :                          @2981
 47112: 7c 98 01                 a1 = u8 [a2 + 0x1]
 47115: 84 56 1f                 s1 = s0 & 0x1f
 47118: 84 8b 3f                 a4 = a1 & 0x3f
 47121: ae 57 35                 jump @2985 if a0 >=u s0
      :                          @2982
 47124: 7c 98 02                 a1 = u8 [a2 + 0x2]
 47127: 97 bb 06                 a4 = a4 << 0x6
 47130: 84 88 3f                 a1 = a1 & 0x3f
 47133: d4 8b 02                 t0 = a4 | a1
 47136: 53 25 f0 00 31           jump @2986 if s0 <u 240
      :                          @2983
 47141: 7c 98 03                 a1 = u8 [a2 + 0x3]
 47144: 97 66 3d                 s1 = s1 << 0x3d
 47147: 98 66 2b                 s1 = s1 >> 0x2b
 47150: 97 22 06                 t0 = t0 << 0x6
 47153: 84 88 3f                 a1 = a1 & 0x3f
 47156: d4 82 05                 s0 = t0 | a1
 47159: d4 65 05                 s0 = s0 | s1
 47162: aa 05 73                 jump @2992 if s0 == ra
      :                          @2984
 47165: 95 98 04                 a1 = a2 + 0x4
 47168: 33 07 df 00              a0 = 0xdf
 47172: 28 a5                    jump @2977
      :                          @2985
 47174: 95 98 02                 a1 = a2 + 0x2
 47177: 97 65 06                 s0 = s1 << 0x6
 47180: d4 b5 05                 s0 = s0 | a4
 47183: 28 9a                    jump @2977
      :                          @2986
 47185: 95 98 03                 a1 = a2 + 0x3
 47188: 97 66 0c                 s1 = s1 << 0xc
 47191: d4 62 05                 s0 = t0 | s1
 47194: 33 07 df 00              a0 = 0xdf
 47198: 28 8b                    jump @2977
      :                          @2987
 47200: aa 39 4d                 jump @2992 if a2 == t1
      :                          @2988
 47203: 7d 98                    a1 = i8 [a2]
 47205: 59 08 b6 02              jump @3035 if a1 >=s 0
      :                          @2989
 47209: 84 88 ff 00              a1 = a1 & 0xff
 47213: 33 0b e0 00              a4 = 0xe0
 47217: ac b8 aa 02              jump @3035 if a1 <u a4
      :                          @2990
 47221: 33 0b f0 00              a4 = 0xf0
 47225: ac b8 a2 02              jump @3035 if a1 <u a4
      :                          @2991
 47229: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 47232: 7c 9c 02                 a5 = u8 [a2 + 0x2]
 47235: 84 bb 3f                 a4 = a4 & 0x3f
 47238: 84 cc 3f                 a5 = a5 & 0x3f
 47241: 7c 99 03                 a2 = u8 [a2 + 0x3]
 47244: 97 88 3d                 a1 = a1 << 0x3d
 47247: 98 88 2b                 a1 = a1 >> 0x2b
 47250: 97 bb 0c                 a4 = a4 << 0xc
 47253: 97 cc 06                 a5 = a5 << 0x6
 47256: d4 cb 0b                 a4 = a4 | a5
 47259: 84 99 3f                 a2 = a2 & 0x3f
 47262: d4 b9 09                 a2 = a2 | a4
 47265: d4 98 08                 a1 = a1 | a2
 47268: 33 09 00 00 11           a2 = 0x110000
 47273: ab 98 72 02              jump @3035 if a1 != a2
      :                          @2992
 47277: 82 13 18                 t1 = u64 [sp + 0x18]
 47280: 82 15 10                 s0 = u64 [sp + 0x10]
 47283: 82 17 08                 a0 = u64 [sp + 0x8]
 47286: 01                       fallthrough
      :                          @2993
 47287: 51 04 af 02              jump @3045 if t2 == 0
      :                          @2994
 47291: 82 7c 08                 a5 = u64 [a0 + 0x8]
 47294: 7b 13 18                 u64 [sp + 0x18] = t1
 47297: 7b 15 10                 u64 [sp + 0x10] = s0
 47300: 55 13 20 29              jump @3000 if t1 >=u 32
      :                          @2995
 47304: 33 09                    a2 = 0
 47306: 51 03 1c                 jump @2998 if t1 == 0
      :                          @2996
 47309: 64 58                    a1 = s0
 47311: 64 3a                    a3 = t1
 47313: 01                       fallthrough
      :                          @2997
 47314: 7d 8b                    a4 = i8 [a1]
 47316: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 47319: 85 bb 01                 a4 = a4 ^ 0x1
 47322: c8 b9 09                 a2 = a2 + a4
 47325: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 47328: 95 88 01                 a1 = a1 + 0x1
 47331: 52 0a ef                 jump @2997 if a3 != 0
      :                          @2998
 47334: ac c9 95 01              jump @3017 if a2 <u a5
      :                          @2999
 47338: 28 7c 02                 jump @3045
      :                          @3000
 47341: 7b 1c                    u64 [sp] = a5
 47343: 95 58 07                 a1 = s0 + 0x7
 47346: 64 5c                    a5 = s0
 47348: 84 85 f8                 s0 = a1 & 0xfffffffffffffff8
 47351: c9 5c 0b                 a4 = a5 - s0
 47354: c8 b3 02                 t0 = t1 + a4
 47357: 84 2a 07                 a3 = t0 & 0x7
 47360: 33 08                    a1 = 0
 47362: aa c5 17                 jump @3002 if s0 == a5
      :                          @3001
 47365: 7d c6                    s1 = i8 [a5]
 47367: 89 66 c0                 s1 = s1 <s 0xffffffffffffffc0
 47370: 85 69 01                 a2 = s1 ^ 0x1
 47373: c8 98 08                 a1 = a1 + a2
 47376: 95 bb 01                 a4 = a4 + 0x1
 47379: 95 cc 01                 a5 = a5 + 0x1
 47382: 52 0b ef                 jump @3001 if a4 != 0
      :                          @3002
 47385: 33 0b                    a4 = 0
 47387: 51 0a 1e                 jump @3005 if a3 == 0
      :                          @3003
 47390: 84 2c f8                 a5 = t0 & 0xfffffffffffffff8
 47393: c8 5c 0c                 a5 = a5 + s0
 47396: 01                       fallthrough
      :                          @3004
 47397: 7d c7                    a0 = i8 [a5]
 47399: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
 47402: 85 77 01                 a0 = a0 ^ 0x1
 47405: c8 7b 0b                 a4 = a4 + a0
 47408: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 47411: 95 cc 01                 a5 = a5 + 0x1
 47414: 52 0a ef                 jump @3004 if a3 != 0
      :                          @3005
 47417: 98 20 03                 ra = t0 >> 0x3
 47420: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
 47430: 14 07 ff 00 ff 00 ff 00 ff 00 a0 = 0xff00ff00ff00ff
 47440: 7b 17 28                 u64 [sp + 0x28] = a0
 47443: 14 04 00 00 00 00 01 00 01 00 t2 = 0x1000100000000
 47453: 14 07 01 00 01 00 01 00 01 00 a0 = 0x1000100010001
 47463: 7b 17 20                 u64 [sp + 0x20] = a0
 47466: c8 8b 09                 a2 = a4 + a1
 47469: 28 2d                    jump @3007
      :                          @3006
 47471: 97 45 03                 s0 = t2 << 0x3
 47474: c8 35 05                 s0 = s0 + t1
 47477: c9 40 00                 ra = ra - t2
 47480: 84 46 03                 s1 = t2 & 0x3
 47483: 82 1b 28                 a4 = u64 [sp + 0x28]
 47486: d2 b2 07                 a0 = t0 & a4
 47489: 98 28 08                 a1 = t0 >> 0x8
 47492: d2 b8 08                 a1 = a1 & a4
 47495: c8 87 07                 a0 = a0 + a1
 47498: 82 18 20                 a1 = u64 [sp + 0x20]
 47501: ca 87 07                 a0 = a0 * a1
 47504: 98 77 30                 a0 = a0 >> 0x30
 47507: c8 79 09                 a2 = a2 + a0
 47510: 52 06 8e 00              jump @3014 if s1 != 0
      :                          @3007
 47514: 51 00 79                 jump @3012 if ra == 0
      :                          @3008
 47517: 64 53                    t1 = s0
 47519: 33 07 c0 00              a0 = 0xc0
 47523: e6 70 04                 t2 = minu(ra, a0)
 47526: 33 02                    t0 = 0
 47528: 98 48 02                 a1 = t2 >> 0x2
 47531: 51 08 c4                 jump @3006 if a1 == 0
      :                          @3009
 47534: 97 88 05                 a1 = a1 << 0x5
 47537: c8 38 08                 a1 = a1 + t1
 47540: 64 36                    s1 = t1
 47542: 01                       fallthrough
      :                          @3010
 47543: 82 67                    a0 = u64 [s1]
 47545: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 47548: 98 cc 07                 a5 = a5 >> 0x7
 47551: 98 77 06                 a0 = a0 >> 0x6
 47554: 82 6b 08                 a4 = u64 [s1 + 0x8]
 47557: d4 c7 07                 a0 = a0 | a5
 47560: d2 a7 07                 a0 = a0 & a3
 47563: c8 27 07                 a0 = a0 + t0
 47566: 85 bc ff                 a5 = a4 ^ 0xffffffffffffffff
 47569: 98 cc 07                 a5 = a5 >> 0x7
 47572: 82 65 10                 s0 = u64 [s1 + 0x10]
 47575: 98 bb 06                 a4 = a4 >> 0x6
 47578: d4 cb 0b                 a4 = a4 | a5
 47581: d2 ab 0b                 a4 = a4 & a3
 47584: 85 5c ff                 a5 = s0 ^ 0xffffffffffffffff
 47587: 98 cc 07                 a5 = a5 >> 0x7
 47590: 98 55 06                 s0 = s0 >> 0x6
 47593: d4 5c 0c                 a5 = a5 | s0
 47596: 82 65 18                 s0 = u64 [s1 + 0x18]
 47599: d2 ac 0c                 a5 = a5 & a3
 47602: c8 cb 0b                 a4 = a4 + a5
 47605: c8 b7 07                 a0 = a0 + a4
 47608: 85 5b ff                 a4 = s0 ^ 0xffffffffffffffff
 47611: 98 bb 07                 a4 = a4 >> 0x7
 47614: 98 55 06                 s0 = s0 >> 0x6
 47617: d4 5b 0b                 a4 = a4 | s0
 47620: d2 ab 0b                 a4 = a4 & a3
 47623: 95 66 20                 s1 = s1 + 0x20
 47626: c8 7b 02                 t0 = a4 + a0
 47629: ab 86 aa                 jump @3010 if s1 != a1
      :                          @3011
 47632: 28 5f ff                 jump @3006
      :                          @3012
 47635: 82 13 18                 t1 = u64 [sp + 0x18]
 47638: 82 15 10                 s0 = u64 [sp + 0x10]
 47641: 82 17 08                 a0 = u64 [sp + 0x8]
 47644: 82 1c                    a5 = u64 [sp]
 47646: ac c9 5d                 jump @3017 if a2 <u a5
      :                          @3013
 47649: 28 45 01                 jump @3045
      :                          @3014
 47652: 33 08                    a1 = 0
 47654: 84 47 fc 00              a0 = t2 & 0xfc
 47658: 97 77 03                 a0 = a0 << 0x3
 47661: c8 73 0b                 a4 = t1 + a0
 47664: 97 66 03                 s1 = s1 << 0x3
 47667: 82 13 18                 t1 = u64 [sp + 0x18]
 47670: 82 15 10                 s0 = u64 [sp + 0x10]
 47673: 01                       fallthrough
      :                          @3015
 47674: 82 b7                    a0 = u64 [a4]
 47676: 95 bb 08                 a4 = a4 + 0x8
 47679: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 47682: 98 cc 07                 a5 = a5 >> 0x7
 47685: 98 77 06                 a0 = a0 >> 0x6
 47688: d4 c7 07                 a0 = a0 | a5
 47691: d2 a7 07                 a0 = a0 & a3
 47694: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 47697: c8 78 08                 a1 = a1 + a0
 47700: 52 06 e6                 jump @3015 if s1 != 0
      :                          @3016
 47703: 82 1a 28                 a3 = u64 [sp + 0x28]
 47706: d2 a8 07                 a0 = a1 & a3
 47709: 98 88 08                 a1 = a1 >> 0x8
 47712: d2 a8 08                 a1 = a1 & a3
 47715: c8 87 07                 a0 = a0 + a1
 47718: 82 18 20                 a1 = u64 [sp + 0x20]
 47721: ca 87 07                 a0 = a0 * a1
 47724: 98 77 30                 a0 = a0 >> 0x30
 47727: c8 79 09                 a2 = a2 + a0
 47730: 82 17 08                 a0 = u64 [sp + 0x8]
 47733: 82 1c                    a5 = u64 [sp]
 47735: ae c9 ef 00              jump @3045 if a2 >=u a5
      :                          @3017
 47739: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 47742: 33 08                    a1 = 0
 47744: 33 0b 01                 a4 = 0x1
 47747: c9 9c 0c                 a5 = a5 - a2
 47750: ad ab 0c                 jump @3020 if a4 <s a3
      :                          @3018
 47753: 51 0a 1a                 jump @3022 if a3 == 0
      :                          @3019
 47756: 64 c8                    a1 = a5
 47758: 49 01                    u64 [sp + 0] = 0
 47760: 28 16                    jump @3023
      :                          @3020
 47762: 52 1a 02 11              jump @3022 if a3 != 2
      :                          @3021
 47766: 98 c8 01                 a1 = a5 >> 0x1
 47769: 95 c9 01                 a2 = a5 + 0x1
 47772: 98 99 01                 a2 = a2 >> 0x1
 47775: 7b 19                    u64 [sp] = a2
 47777: 28 05                    jump @3023
      :                          @3022
 47779: 7b 1c                    u64 [sp] = a5
 47781: 01                       fallthrough
      :                          @3023
 47782: 82 79 20                 a2 = u64 [a0 + 0x20]
 47785: 7b 19 28                 u64 [sp + 0x28] = a2
 47788: 82 75 28                 s0 = u64 [a0 + 0x28]
 47791: 81 77 30                 a0 = i32 [a0 + 0x30]
 47794: 7b 17 20                 u64 [sp + 0x20] = a0
 47797: 95 86 01                 s1 = a1 + 0x1
 47800: 01                       fallthrough
      :                          @3024
 47801: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 47804: 51 06 19                 jump @3028 if s1 == 0
      :                          @3025
 47807: 82 59 20                 a2 = u64 [s0 + 0x20]
 47810: 82 17 28                 a0 = u64 [sp + 0x28]
 47813: 82 18 20                 a1 = u64 [sp + 0x20]
 47816: b4 90 02 66 03           ra = 870, jump [a2]
      :                          @3026 [@dyn 435]
 47821: 51 07 ec                 jump @3024 if a0 == 0
      :                          @3027
 47824: 33 07 01                 a0 = 0x1
 47827: 28 72                    jump @3041
      :                          @3028
 47829: 82 5a 18                 a3 = u64 [s0 + 0x18]
 47832: 82 17 28                 a0 = u64 [sp + 0x28]
 47835: 82 18 10                 a1 = u64 [sp + 0x10]
 47838: 82 19 18                 a2 = u64 [sp + 0x18]
 47841: b4 a0 02 68 03           ra = 872, jump [a3]
      :                          @3029 [@dyn 436]
 47846: 64 78                    a1 = a0
 47848: 33 07 01                 a0 = 0x1
 47851: 52 08 5a                 jump @3041 if a1 != 0
      :                          @3030
 47854: 82 17                    a0 = u64 [sp]
 47856: 9a 77                    a0 = -a0
 47858: 7b 17 18                 u64 [sp + 0x18] = a0
 47861: 33 06 ff                 s1 = 0xffffffffffffffff
 47864: 01                       fallthrough
      :                          @3031
 47865: 82 17 18                 a0 = u64 [sp + 0x18]
 47868: c8 67 07                 a0 = a0 + s1
 47871: 33 08 ff                 a1 = 0xffffffffffffffff
 47874: aa 87 34                 jump @3039 if a0 == a1
      :                          @3032
 47877: 82 59 20                 a2 = u64 [s0 + 0x20]
 47880: 82 17 28                 a0 = u64 [sp + 0x28]
 47883: 82 18 20                 a1 = u64 [sp + 0x20]
 47886: b4 90 02 6a 03           ra = 874, jump [a2]
      :                          @3033 [@dyn 437]
 47891: 95 66 01                 s1 = s1 + 0x1
 47894: 51 07 e3                 jump @3031 if a0 == 0
      :                          @3034
 47897: 28 26                    jump @3040
      :                          @3035
 47899: 82 13 18                 t1 = u64 [sp + 0x18]
 47902: 82 15 10                 s0 = u64 [sp + 0x10]
 47905: 51 0a 35                 jump @3043 if a3 == 0
      :                          @3036
 47908: ae 3a 2f                 jump @3042 if a3 >=u t1
      :                          @3037
 47911: c8 a5 08                 a1 = s0 + a3
 47914: 7d 88                    a1 = i8 [a1]
 47916: 33 09 c0                 a2 = 0xffffffffffffffc0
 47919: af 98 27                 jump @3043 if a1 >=s a2
      :                          @3038
 47922: 33 08                    a1 = 0
 47924: 28 25                    jump @3044
      :                          @3039
 47926: 82 16                    s1 = u64 [sp]
 47928: 82 17                    a0 = u64 [sp]
 47930: d8 76 07                 a0 = s1 <u a0
 47933: 28 08                    jump @3041
      :                          @3040
 47935: 82 17                    a0 = u64 [sp]
 47937: d8 76 07                 a0 = s1 <u a0
 47940: 01                       fallthrough
      :                          @3041
 47941: 82 10 40                 ra = u64 [sp + 0x40]
 47944: 82 15 38                 s0 = u64 [sp + 0x38]
 47947: 82 16 30                 s1 = u64 [sp + 0x30]
 47950: 95 11 48                 sp = sp + 0x48
 47953: 32 00                    ret
      :                          @3042
 47955: ab 3a df                 jump @3038 if a3 != t1
      :                          @3043
 47958: 64 58                    a1 = s0
 47960: 01                       fallthrough
      :                          @3044
 47961: 82 17 08                 a0 = u64 [sp + 0x8]
 47964: db 8a 03                 t1 = a3 if a1 != 0
 47967: db 88 05                 s0 = a1 if a1 != 0
 47970: 52 04 59 fd              jump @2994 if t2 != 0
      :                          @3045
 47974: 82 78 28                 a1 = u64 [a0 + 0x28]
 47977: 82 77 20                 a0 = u64 [a0 + 0x20]
 47980: 82 8c 18                 a5 = u64 [a1 + 0x18]
 47983: 64 58                    a1 = s0
 47985: 64 39                    a2 = t1
 47987: 82 10 40                 ra = u64 [sp + 0x40]
 47990: 82 15 38                 s0 = u64 [sp + 0x38]
 47993: 82 16 30                 s1 = u64 [sp + 0x30]
 47996: 95 11 48                 sp = sp + 0x48
 47999: 32 0c                    jump [a5]
      :                          @3046
 48001: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 48005: 7b 10 80 00              u64 [sp + 0x80] = ra
 48009: 7b 15 78                 u64 [sp + 0x78] = s0
 48012: 7b 16 70                 u64 [sp + 0x70] = s1
 48015: 49 11 60 20              u64 [sp + 96] = 0x20
 48019: 33 0a 03                 a3 = 0x3
 48022: 78 1a 68                 u8 [sp + 0x68] = a3
 48025: 82 96 20                 s1 = u64 [a2 + 0x20]
 48028: 49 11 30                 u64 [sp + 48] = 0
 48031: 49 11 40                 u64 [sp + 64] = 0
 48034: 7b 17 50                 u64 [sp + 0x50] = a0
 48037: 7b 18 58                 u64 [sp + 0x58] = a1
 48040: 51 06 0a 01              jump @3068 if s1 == 0
      :                          @3047
 48044: 82 97 28                 a0 = u64 [a2 + 0x28]
 48047: 51 07 79 01              jump @3078 if a0 == 0
      :                          @3048
 48051: 49 11 28                 u64 [sp + 40] = 0
 48054: 82 95                    s0 = u64 [a2]
 48056: 7b 19 08                 u64 [sp + 0x8] = a2
 48059: 82 98 10                 a1 = u64 [a2 + 0x10]
 48062: 7b 18 18                 u64 [sp + 0x18] = a1
 48065: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 48068: 97 88 03                 a1 = a1 << 0x3
 48071: 98 88 03                 a1 = a1 >> 0x3
 48074: 95 88 01                 a1 = a1 + 0x1
 48077: 7b 18                    u64 [sp] = a1
 48079: 95 55 08                 s0 = s0 + 0x8
 48082: 96 78 38                 a1 = a0 * 0x38
 48085: 95 66 18                 s1 = s1 + 0x18
 48088: 33 07 4e 03              a0 = 0x34e
 48092: 7b 17 10                 u64 [sp + 0x10] = a0
 48095: 01                       fallthrough
      :                          @3049
 48096: 7b 18 20                 u64 [sp + 0x20] = a1
 48099: 82 59                    a2 = u64 [s0]
 48101: 51 09 18                 jump @3052 if a2 == 0
      :                          @3050
 48104: 82 1a 58                 a3 = u64 [sp + 0x58]
 48107: 82 17 50                 a0 = u64 [sp + 0x50]
 48110: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 48113: 82 aa 18                 a3 = u64 [a3 + 0x18]
 48116: b4 a0 02 6c 03           ra = 876, jump [a3]
      :                          @3051 [@dyn 438]
 48121: 52 07 55 01              jump @3081 if a0 != 0
      :                          @3052
 48125: 81 67 10                 a0 = i32 [s1 + 0x10]
 48128: 7a 17 60                 u32 [sp + 0x60] = a0
 48131: 7c 67 18                 a0 = u8 [s1 + 0x18]
 48134: 78 17 68                 u8 [sp + 0x68] = a0
 48137: 81 67 14                 a0 = i32 [s1 + 0x14]
 48140: 7a 17 64                 u32 [sp + 0x64] = a0
 48143: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 48146: 82 67                    a0 = u64 [s1]
 48148: 51 08 26                 jump @3057 if a1 == 0
      :                          @3053
 48151: 52 18 01 16              jump @3055 if a1 != 1
      :                          @3054
 48155: 97 77 04                 a0 = a0 << 0x4
 48158: 82 18 18                 a1 = u64 [sp + 0x18]
 48161: c8 87 07                 a0 = a0 + a1
 48164: 82 78 08                 a1 = u64 [a0 + 0x8]
 48167: 82 19 10                 a2 = u64 [sp + 0x10]
 48170: aa 98 07                 jump @3056 if a1 == a2
      :                          @3055
 48173: 33 08                    a1 = 0
 48175: 28 0f                    jump @3058
      :                          @3056
 48177: 82 77                    a0 = u64 [a0]
 48179: 82 77                    a0 = u64 [a0]
 48181: 33 08 01                 a1 = 0x1
 48184: 28 06                    jump @3058
      :                          @3057
 48186: 33 08 01                 a1 = 0x1
 48189: 01                       fallthrough
      :                          @3058
 48190: 7b 18 30                 u64 [sp + 0x30] = a1
 48193: 7b 17 38                 u64 [sp + 0x38] = a0
 48196: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 48199: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 48202: 51 08 26                 jump @3063 if a1 == 0
      :                          @3059
 48205: 52 18 01 16              jump @3061 if a1 != 1
      :                          @3060
 48209: 97 77 04                 a0 = a0 << 0x4
 48212: 82 18 18                 a1 = u64 [sp + 0x18]
 48215: c8 87 07                 a0 = a0 + a1
 48218: 82 78 08                 a1 = u64 [a0 + 0x8]
 48221: 82 19 10                 a2 = u64 [sp + 0x10]
 48224: aa 98 07                 jump @3062 if a1 == a2
      :                          @3061
 48227: 33 08                    a1 = 0
 48229: 28 0f                    jump @3064
      :                          @3062
 48231: 82 77                    a0 = u64 [a0]
 48233: 82 77                    a0 = u64 [a0]
 48235: 33 08 01                 a1 = 0x1
 48238: 28 06                    jump @3064
      :                          @3063
 48240: 33 08 01                 a1 = 0x1
 48243: 01                       fallthrough
      :                          @3064
 48244: 7b 18 40                 u64 [sp + 0x40] = a1
 48247: 7b 17 48                 u64 [sp + 0x48] = a0
 48250: 82 67 08                 a0 = u64 [s1 + 0x8]
 48253: 97 77 04                 a0 = a0 << 0x4
 48256: 82 18 18                 a1 = u64 [sp + 0x18]
 48259: c8 78 08                 a1 = a1 + a0
 48262: 82 87                    a0 = u64 [a1]
 48264: 82 89 08                 a2 = u64 [a1 + 0x8]
 48267: 95 18 30                 a1 = sp + 0x30
 48270: b4 90 02 6e 03           ra = 878, jump [a2]
      :                          @3065 [@dyn 439]
 48275: 52 07 bb 00              jump @3081 if a0 != 0
      :                          @3066
 48279: 95 55 10                 s0 = s0 + 0x10
 48282: 82 18 20                 a1 = u64 [sp + 0x20]
 48285: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 48288: 95 66 38                 s1 = s1 + 0x38
 48291: 82 17 28                 a0 = u64 [sp + 0x28]
 48294: 95 77 01                 a0 = a0 + 0x1
 48297: 7b 17 28                 u64 [sp + 0x28] = a0
 48300: 52 08 34 ff              jump @3049 if a1 != 0
      :                          @3067
 48304: 28 6b                    jump @3076
      :                          @3068
 48306: 82 97 18                 a0 = u64 [a2 + 0x18]
 48309: 51 07 73                 jump @3078 if a0 == 0
      :                          @3069
 48312: 82 95 10                 s0 = u64 [a2 + 0x10]
 48315: 33 0a                    a3 = 0
 48317: 97 78 04                 a1 = a0 << 0x4
 48320: c8 58 08                 a1 = a1 + s0
 48323: 7b 18 20                 u64 [sp + 0x20] = a1
 48326: 7b 19 08                 u64 [sp + 0x8] = a2
 48329: 82 96                    s1 = u64 [a2]
 48331: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 48334: 97 77 04                 a0 = a0 << 0x4
 48337: 98 77 04                 a0 = a0 >> 0x4
 48340: 95 77 01                 a0 = a0 + 0x1
 48343: 7b 17                    u64 [sp] = a0
 48345: 95 66 08                 s1 = s1 + 0x8
 48348: 01                       fallthrough
      :                          @3070
 48349: 7b 1a 28                 u64 [sp + 0x28] = a3
 48352: 82 69                    a2 = u64 [s1]
 48354: 51 09 17                 jump @3073 if a2 == 0
      :                          @3071
 48357: 82 1a 58                 a3 = u64 [sp + 0x58]
 48360: 82 17 50                 a0 = u64 [sp + 0x50]
 48363: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 48366: 82 aa 18                 a3 = u64 [a3 + 0x18]
 48369: b4 a0 02 70 03           ra = 880, jump [a3]
      :                          @3072 [@dyn 440]
 48374: 52 07 58                 jump @3081 if a0 != 0
      :                          @3073
 48377: 82 57                    a0 = u64 [s0]
 48379: 82 59 08                 a2 = u64 [s0 + 0x8]
 48382: 95 18 30                 a1 = sp + 0x30
 48385: b4 90 02 72 03           ra = 882, jump [a2]
      :                          @3074 [@dyn 441]
 48390: 52 07 48                 jump @3081 if a0 != 0
      :                          @3075
 48393: 95 66 10                 s1 = s1 + 0x10
 48396: 95 55 10                 s0 = s0 + 0x10
 48399: 82 1a 28                 a3 = u64 [sp + 0x28]
 48402: 95 aa 01                 a3 = a3 + 0x1
 48405: 82 17 20                 a0 = u64 [sp + 0x20]
 48408: ab 75 c5                 jump @3070 if s0 != a0
      :                          @3076
 48411: 82 19 08                 a2 = u64 [sp + 0x8]
 48414: 82 1a                    a3 = u64 [sp]
 48416: 82 97 08                 a0 = u64 [a2 + 0x8]
 48419: ac 7a 0d                 jump @3079 if a3 <u a0
      :                          @3077
 48422: 28 2d                    jump @3082
      :                          @3078
 48424: 33 0a                    a3 = 0
 48426: 82 97 08                 a0 = u64 [a2 + 0x8]
 48429: 54 07 26                 jump @3082 if a0 <=u 0
      :                          @3079
 48432: 82 97                    a0 = u64 [a2]
 48434: 97 a8 04                 a1 = a3 << 0x4
 48437: c8 87 09                 a2 = a0 + a1
 48440: 82 1a 58                 a3 = u64 [sp + 0x58]
 48443: 82 17 50                 a0 = u64 [sp + 0x50]
 48446: 82 98                    a1 = u64 [a2]
 48448: 82 99 08                 a2 = u64 [a2 + 0x8]
 48451: 82 aa 18                 a3 = u64 [a3 + 0x18]
 48454: b4 a0 02 74 03           ra = 884, jump [a3]
      :                          @3080 [@dyn 442]
 48459: 51 07 08                 jump @3082 if a0 == 0
      :                          @3081
 48462: 33 07 01                 a0 = 0x1
 48465: 28 05                    jump @3083
      :                          @3082
 48467: 33 07                    a0 = 0
 48469: 01                       fallthrough
      :                          @3083
 48470: 82 10 80 00              ra = u64 [sp + 0x80]
 48474: 82 15 78                 s0 = u64 [sp + 0x78]
 48477: 82 16 70                 s1 = u64 [sp + 0x70]
 48480: 95 11 88 00              sp = sp + 0x88
 48484: 32 00                    ret
      :                          @3084 [@dyn 443]
 48486: 32 00                    ret
      :                          @3085 [@dyn 444]
 48488: 95 11 80                 sp = sp + 0xffffffffffffff80
 48491: 7b 10 78                 u64 [sp + 0x78] = ra
 48494: 7b 15 70                 u64 [sp + 0x70] = s0
 48497: 7b 16 68                 u64 [sp + 0x68] = s1
 48500: 64 92                    t0 = a2
 48502: 33 00                    ra = 0
 48504: 33 0b                    a4 = 0
 48506: 33 05                    s0 = 0
 48508: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
 48518: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 48524: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
 48534: 82 79 10                 a2 = u64 [a0 + 0x10]
 48537: 7b 19 48                 u64 [sp + 0x48] = a2
 48540: 82 79                    a2 = u64 [a0]
 48542: 7b 19 38                 u64 [sp + 0x38] = a2
 48545: 82 77 08                 a0 = u64 [a0 + 0x8]
 48548: 7b 17 30                 u64 [sp + 0x30] = a0
 48551: 33 07 04 01 01           a0 = 0x10104
 48556: 7b 17 08                 u64 [sp + 0x8] = a0
 48559: 3a 07 d8 00 03           a0 = u64 [0x300d8]
 48564: 7b 17 60                 u64 [sp + 0x60] = a0
 48567: 7b 18 58                 u64 [sp + 0x58] = a1
 48570: 95 88 08                 a1 = a1 + 0x8
 48573: 7b 18                    u64 [sp] = a1
 48575: 33 0c 0a                 a5 = 0xa
 48578: 7b 12 20                 u64 [sp + 0x20] = t0
 48581: 7b 13 18                 u64 [sp + 0x18] = t1
 48584: 7b 14 10                 u64 [sp + 0x10] = t2
 48587: 28 3b                    jump @3089
      :                          @3086
 48589: 64 06                    s1 = ra
 48591: c8 89 07                 a0 = a2 + a1
 48594: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 48597: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 48600: 88 77 01                 a0 = a0 <u 0x1
 48603: 01                       fallthrough
      :                          @3087
 48604: 82 1a 48                 a3 = u64 [sp + 0x48]
 48607: 78 a7                    u8 [a3] = a0
 48609: 82 17 30                 a0 = u64 [sp + 0x30]
 48612: 82 7a 18                 a3 = u64 [a0 + 0x18]
 48615: 82 17 38                 a0 = u64 [sp + 0x38]
 48618: b4 a0 02 7a 03           ra = 890, jump [a3]
      :                          @3088 [@dyn 445]
 48623: 64 5b                    a4 = s0
 48625: 82 12 20                 t0 = u64 [sp + 0x20]
 48628: 82 13 18                 t1 = u64 [sp + 0x18]
 48631: 82 14 10                 t2 = u64 [sp + 0x10]
 48634: 64 60                    ra = s1
 48636: 33 0c 0a                 a5 = 0xa
 48639: 82 15 40                 s0 = u64 [sp + 0x40]
 48642: 52 07 64 01              jump @3130 if a0 != 0
      :                          @3089
 48646: 84 57 ff 00              a0 = s0 & 0xff
 48650: 52 07 58 01              jump @3129 if a0 != 0
      :                          @3090
 48654: 7b 1b 50                 u64 [sp + 0x50] = a4
 48657: ae 02 0a                 jump @3093 if t0 >=u ra
      :                          @3091
 48660: 28 ef 00                 jump @3120
      :                          @3092
 48663: ac 02 ec 00              jump @3120 if t0 <u ra
      :                          @3093
 48667: c9 02 08                 a1 = t0 - ra
 48670: 82 16 58                 s1 = u64 [sp + 0x58]
 48673: c8 06 06                 s1 = s1 + ra
 48676: 55 18 10 1d              jump @3099 if a1 >=u 16
      :                          @3094
 48680: aa 02 d8 00              jump @3119 if t0 == ra
      :                          @3095
 48684: 33 0a                    a3 = 0
 48686: 01                       fallthrough
      :                          @3096
 48687: c8 a6 07                 a0 = s1 + a3
 48690: 7c 77                    a0 = u8 [a0]
 48692: aa c7 a5 00              jump @3114 if a0 == a5
      :                          @3097
 48696: 95 aa 01                 a3 = a3 + 0x1
 48699: ab a8 f4                 jump @3096 if a1 != a3
      :                          @3098
 48702: 28 c2 00                 jump @3119
      :                          @3099
 48705: 95 69 07                 a2 = s1 + 0x7
 48708: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 48711: c9 6a 07                 a0 = a3 - s1
 48714: d3 6a 0a                 a3 = a3 ^ s1
 48717: 88 aa 01                 a3 = a3 <u 0x1
 48720: 88 7b 01                 a4 = a0 <u 0x1
 48723: d4 ba 0a                 a3 = a3 | a4
 48726: 51 0a 45                 jump @3105 if a3 == 0
      :                          @3100
 48729: 33 07                    a0 = 0
 48731: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 48734: 82 1b                    a4 = u64 [sp]
 48736: c8 0b 0b                 a4 = a4 + ra
 48739: 28 08                    jump @3102
      :                          @3101
 48741: 82 1b                    a4 = u64 [sp]
 48743: c8 0b 0b                 a4 = a4 + ra
 48746: 01                       fallthrough
      :                          @3102
 48747: c8 76 0c                 a5 = s1 + a0
 48750: 82 cc                    a5 = u64 [a5]
 48752: c8 7b 09                 a2 = a4 + a0
 48755: 82 99                    a2 = u64 [a2]
 48757: d3 4c 05                 s0 = a5 ^ t2
 48760: c8 35 05                 s0 = s0 + t1
 48763: e0 c5 0c                 a5 = s0 & ~a5
 48766: d3 49 05                 s0 = a2 ^ t2
 48769: c8 35 05                 s0 = s0 + t1
 48772: e0 95 09                 a2 = s0 & ~a2
 48775: d4 c9 09                 a2 = a2 | a5
 48778: 82 1c 60                 a5 = u64 [sp + 0x60]
 48781: d2 c9 09                 a2 = a2 & a5
 48784: 52 09 1f                 jump @3108 if a2 != 0
      :                          @3103
 48787: 95 77 10                 a0 = a0 + 0x10
 48790: ae 7a d5                 jump @3102 if a3 >=u a0
      :                          @3104
 48793: 28 16                    jump @3108
      :                          @3105
 48795: c8 a6 0b                 a4 = s1 + a3
 48798: 7c bb                    a4 = u8 [a4]
 48800: aa cb 51                 jump @3117 if a4 == a5
      :                          @3106
 48803: 95 aa 01                 a3 = a3 + 0x1
 48806: ab a7 f5                 jump @3105 if a0 != a3
      :                          @3107
 48809: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 48812: ae 7a b9                 jump @3101 if a3 >=u a0
      :                          @3108
 48815: aa 87 9b 00              jump @3126 if a0 == a1
      :                          @3109
 48819: 33 0a                    a3 = 0
 48821: c8 76 06                 s1 = s1 + a0
 48824: c9 72 08                 a1 = t0 - a0
 48827: c9 08 08                 a1 = a1 - ra
 48830: 33 0c 0a                 a5 = 0xa
 48833: 82 1b 50                 a4 = u64 [sp + 0x50]
 48836: 01                       fallthrough
      :                          @3110
 48837: c8 a6 09                 a2 = s1 + a3
 48840: 7c 99                    a2 = u8 [a2]
 48842: aa c9 0b                 jump @3113 if a2 == a5
      :                          @3111
 48845: 95 aa 01                 a3 = a3 + 0x1
 48848: ab a8 f5                 jump @3110 if a1 != a3
      :                          @3112
 48851: 28 2d                    jump @3119
      :                          @3113
 48853: c8 7a 0a                 a3 = a3 + a0
 48856: 01                       fallthrough
      :                          @3114
 48857: c8 0a 0a                 a3 = a3 + ra
 48860: 95 a0 01                 ra = a3 + 0x1
 48863: ae 2a 38 ff              jump @3092 if a3 >=u t0
      :                          @3115
 48867: 82 17 58                 a0 = u64 [sp + 0x58]
 48870: c8 7a 0a                 a3 = a3 + a0
 48873: 7c a7                    a0 = u8 [a3]
 48875: ab c7 2c ff              jump @3092 if a0 != a5
      :                          @3116
 48879: 28 62                    jump @3127
      :                          @3117
 48881: 82 1b 50                 a4 = u64 [sp + 0x50]
 48884: c8 0a 0a                 a3 = a3 + ra
 48887: 95 a0 01                 ra = a3 + 0x1
 48890: ac 2a e9                 jump @3115 if a3 <u t0
      :                          @3118
 48893: 28 1a ff                 jump @3092
      :                          @3119
 48896: 64 20                    ra = t0
 48898: 01                       fallthrough
      :                          @3120
 48899: 49 11 40 01              u64 [sp + 64] = 0x1
 48903: 64 b5                    s0 = a4
 48905: 64 26                    s1 = t0
 48907: aa 2b 57                 jump @3129 if a4 == t0
      :                          @3121
 48910: 82 17 48                 a0 = u64 [sp + 0x48]
 48913: 7c 77                    a0 = u8 [a0]
 48915: 51 07 23                 jump @3124 if a0 == 0
      :                          @3122
 48918: 82 17 30                 a0 = u64 [sp + 0x30]
 48921: 82 7a 18                 a3 = u64 [a0 + 0x18]
 48924: 33 09 04                 a2 = 0x4
 48927: 82 17 38                 a0 = u64 [sp + 0x38]
 48930: 82 18 08                 a1 = u64 [sp + 0x8]
 48933: 7b 10 28                 u64 [sp + 0x28] = ra
 48936: b4 a0 02 7c 03           ra = 892, jump [a3]
      :                          @3123 [@dyn 446]
 48941: 82 1b 50                 a4 = u64 [sp + 0x50]
 48944: 82 10 28                 ra = u64 [sp + 0x28]
 48947: 52 07 33                 jump @3130 if a0 != 0
      :                          @3124
 48950: c9 b6 09                 a2 = s1 - a4
 48953: 82 18 58                 a1 = u64 [sp + 0x58]
 48956: c8 b8 08                 a1 = a1 + a4
 48959: ab b6 8e fe              jump @3086 if s1 != a4
      :                          @3125
 48963: 64 06                    s1 = ra
 48965: 33 07                    a0 = 0
 48967: 28 95 fe                 jump @3087
      :                          @3126
 48970: 64 20                    ra = t0
 48972: 82 1b 50                 a4 = u64 [sp + 0x50]
 48975: 28 b4                    jump @3120
      :                          @3127
 48977: 49 11 40                 u64 [sp + 64] = 0
 48980: 64 05                    s0 = ra
 48982: 64 06                    s1 = ra
 48984: 82 17 48                 a0 = u64 [sp + 0x48]
 48987: 7c 77                    a0 = u8 [a0]
 48989: 52 07 b9                 jump @3122 if a0 != 0
      :                          @3128
 48992: 28 d6                    jump @3124
      :                          @3129
 48994: 33 07                    a0 = 0
 48996: 28 06                    jump @3131
      :                          @3130
 48998: 33 07 01                 a0 = 0x1
 49001: 01                       fallthrough
      :                          @3131
 49002: 82 10 78                 ra = u64 [sp + 0x78]
 49005: 82 15 70                 s0 = u64 [sp + 0x70]
 49008: 82 16 68                 s1 = u64 [sp + 0x68]
 49011: 95 11 80 00              sp = sp + 0x80
 49015: 32 00                    ret
      :                          @3132 [@dyn 447]
 49017: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 49020: 7b 10 20                 u64 [sp + 0x20] = ra
 49023: 7b 15 18                 u64 [sp + 0x18] = s0
 49026: 7b 16 10                 u64 [sp + 0x10] = s1
 49029: 82 75 10                 s0 = u64 [a0 + 0x10]
 49032: 7c 59                    a2 = u8 [s0]
 49034: 82 7b                    a4 = u64 [a0]
 49036: 82 76 08                 s1 = u64 [a0 + 0x8]
 49039: 51 09 33                 jump @3136 if a2 == 0
      :                          @3133
 49042: 82 6a 18                 a3 = u64 [s1 + 0x18]
 49045: 7b 18 08                 u64 [sp + 0x8] = a1
 49048: 33 08 04 01 01           a1 = 0x10104
 49053: 33 09 04                 a2 = 0x4
 49056: 64 b7                    a0 = a4
 49058: 7b 1b                    u64 [sp] = a4
 49060: b4 a0 02 80 03           ra = 896, jump [a3]
      :                          @3134 [@dyn 448]
 49065: 82 18 08                 a1 = u64 [sp + 0x8]
 49068: 82 1b                    a4 = u64 [sp]
 49070: 51 07 14                 jump @3136 if a0 == 0
      :                          @3135
 49073: 33 07 01                 a0 = 0x1
 49076: 82 10 20                 ra = u64 [sp + 0x20]
 49079: 82 15 18                 s0 = u64 [sp + 0x18]
 49082: 82 16 10                 s1 = u64 [sp + 0x10]
 49085: 95 11 28                 sp = sp + 0x28
 49088: 32 00                    ret
      :                          @3136
 49090: 83 87                    i32 a0 = a1 + 0
 49092: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 49095: 88 77 01                 a0 = a0 <u 0x1
 49098: 78 57                    u8 [s0] = a0
 49100: 82 6c 20                 a5 = u64 [s1 + 0x20]
 49103: 64 b7                    a0 = a4
 49105: 82 10 20                 ra = u64 [sp + 0x20]
 49108: 82 15 18                 s0 = u64 [sp + 0x18]
 49111: 82 16 10                 s1 = u64 [sp + 0x10]
 49114: 95 11 28                 sp = sp + 0x28
 49117: 32 0c                    jump [a5]
      :                          @3137 [@dyn 449]
 49119: 64 8a                    a3 = a1
 49121: 33 08 b0 10 01           a1 = 0x110b0
 49126: 64 a9                    a2 = a3
 49128: 28 99 fb                 jump @3046
      :                          @3138 [@dyn 450]
 49131: 7c 77                    a0 = u8 [a0]
 49133: 64 89                    a2 = a1
 49135: 33 08 01                 a1 = 0x1
 49138: 28 f9 f3                 jump @2909
      :                          @3139 [@dyn 451]
 49141: 80 77                    a0 = u32 [a0]
 49143: 64 89                    a2 = a1
 49145: 33 08 01                 a1 = 0x1
 49148: 28 ef f3                 jump @2909
      :                          @3140
 49151: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 49155: 7b 10 88 00              u64 [sp + 0x88] = ra
 49159: 7b 15 80 00              u64 [sp + 0x80] = s0
 49163: 7b 16 78                 u64 [sp + 0x78] = s1
 49166: 64 75                    s0 = a0
 49168: 7c 77 10                 a0 = u8 [a0 + 0x10]
 49171: 82 5c                    a5 = u64 [s0]
 49173: 64 8b                    a4 = a1
 49175: 33 08 01                 a1 = 0x1
 49178: 51 07 1e                 jump @3142 if a0 == 0
      :                          @3141
 49181: 78 58 10                 u8 [s0 + 0x10] = a1
 49184: 95 c7 01                 a0 = a5 + 0x1
 49187: 7b 57                    u64 [s0] = a0
 49189: 64 57                    a0 = s0
 49191: 82 10 88 00              ra = u64 [sp + 0x88]
 49195: 82 15 80 00              s0 = u64 [sp + 0x80]
 49199: 82 16 78                 s1 = u64 [sp + 0x78]
 49202: 95 11 90 00              sp = sp + 0x90
 49206: 32 00                    ret
      :                          @3142
 49208: 82 56 08                 s1 = u64 [s0 + 0x8]
 49211: 80 67 34                 a0 = u32 [s1 + 0x34]
 49214: 84 78 04                 a1 = a0 & 0x4
 49217: 7b 1c 10                 u64 [sp + 0x10] = a5
 49220: 52 08 48                 jump @3147 if a1 != 0
      :                          @3143
 49223: 7b 1b                    u64 [sp] = a4
 49225: 7b 19 08                 u64 [sp + 0x8] = a2
 49228: 88 c9 01                 a2 = a5 <u 0x1
 49231: 33 0a e0 10 01           a3 = 0x110e0
 49236: 82 6b 28                 a4 = u64 [s1 + 0x28]
 49239: 33 08 e4 10 01           a1 = 0x110e4
 49244: 82 67 20                 a0 = u64 [s1 + 0x20]
 49247: 82 bb 18                 a4 = u64 [a4 + 0x18]
 49250: db ca 08                 a1 = a3 if a5 != 0
 49253: 33 0a 02                 a3 = 0x2
 49256: c9 9a 09                 a2 = a3 - a2
 49259: b4 b0 02 88 03           ra = 904, jump [a4]
      :                          @3144 [@dyn 452]
 49264: 33 08 01                 a1 = 0x1
 49267: 82 1c 10                 a5 = u64 [sp + 0x10]
 49270: 52 07 a7                 jump @3141 if a0 != 0
      :                          @3145
 49273: 82 17                    a0 = u64 [sp]
 49275: 64 68                    a1 = s1
 49277: 82 19 08                 a2 = u64 [sp + 0x8]
 49280: b4 90 02 8a 03           ra = 906, jump [a2]
      :                          @3146 [@dyn 453]
 49285: 82 1c 10                 a5 = u64 [sp + 0x10]
 49288: 64 78                    a1 = a0
 49290: 28 93                    jump @3141
      :                          @3147
 49292: 52 0c 31                 jump @3151 if a5 != 0
      :                          @3148
 49295: 7b 1b                    u64 [sp] = a4
 49297: 7b 19 08                 u64 [sp + 0x8] = a2
 49300: 82 68 28                 a1 = u64 [s1 + 0x28]
 49303: 82 67 20                 a0 = u64 [s1 + 0x20]
 49306: 82 8a 18                 a3 = u64 [a1 + 0x18]
 49309: 33 08 e5 10 01           a1 = 0x110e5
 49314: 33 09 02                 a2 = 0x2
 49317: b4 a0 02 8c 03           ra = 908, jump [a3]
      :                          @3149 [@dyn 454]
 49322: 33 08 01                 a1 = 0x1
 49325: 82 1c 10                 a5 = u64 [sp + 0x10]
 49328: 52 07 6d ff              jump @3141 if a0 != 0
      :                          @3150
 49332: 81 67 34                 a0 = i32 [s1 + 0x34]
 49335: 82 19 08                 a2 = u64 [sp + 0x8]
 49338: 82 1b                    a4 = u64 [sp]
 49340: 01                       fallthrough
      :                          @3151
 49341: 46 11 37 01              u8 [sp + 55] = 0x1
 49345: 82 68 20                 a1 = u64 [s1 + 0x20]
 49348: 82 6a 28                 a3 = u64 [s1 + 0x28]
 49351: 7b 18 18                 u64 [sp + 0x18] = a1
 49354: 7b 1a 20                 u64 [sp + 0x20] = a3
 49357: 95 18 37                 a1 = sp + 0x37
 49360: 7b 18 28                 u64 [sp + 0x28] = a1
 49363: 81 68 30                 a1 = i32 [s1 + 0x30]
 49366: 7c 62 38                 t0 = u8 [s1 + 0x38]
 49369: 82 6a                    a3 = u64 [s1]
 49371: 82 63 08                 t1 = u64 [s1 + 0x8]
 49374: 82 6c 10                 a5 = u64 [s1 + 0x10]
 49377: 82 66 18                 s1 = u64 [s1 + 0x18]
 49380: 7a 17 6c                 u32 [sp + 0x6c] = a0
 49383: 7a 18 68                 u32 [sp + 0x68] = a1
 49386: 78 12 70                 u8 [sp + 0x70] = t0
 49389: 7b 1a 38                 u64 [sp + 0x38] = a3
 49392: 7b 13 40                 u64 [sp + 0x40] = t1
 49395: 7b 1c 48                 u64 [sp + 0x48] = a5
 49398: 7b 16 50                 u64 [sp + 0x50] = s1
 49401: 95 17 18                 a0 = sp + 0x18
 49404: 7b 17 58                 u64 [sp + 0x58] = a0
 49407: 33 07 b0 10 01           a0 = 0x110b0
 49412: 7b 17 60                 u64 [sp + 0x60] = a0
 49415: 95 18 38                 a1 = sp + 0x38
 49418: 64 b7                    a0 = a4
 49420: b4 90 02 8e 03           ra = 910, jump [a2]
      :                          @3152 [@dyn 455]
 49425: 51 07 0c                 jump @3154 if a0 == 0
      :                          @3153
 49428: 82 1c 10                 a5 = u64 [sp + 0x10]
 49431: 33 08 01                 a1 = 0x1
 49434: 28 03 ff                 jump @3141
      :                          @3154
 49437: 82 18 60                 a1 = u64 [sp + 0x60]
 49440: 82 17 58                 a0 = u64 [sp + 0x58]
 49443: 82 8a 18                 a3 = u64 [a1 + 0x18]
 49446: 33 08 e2 10 01           a1 = 0x110e2
 49451: 33 09 02                 a2 = 0x2
 49454: b4 a0 02 90 03           ra = 912, jump [a3]
      :                          @3155 [@dyn 456]
 49459: 64 78                    a1 = a0
 49461: 82 1c 10                 a5 = u64 [sp + 0x10]
 49464: 28 e5 fe                 jump @3141
      :                          @3156
 49467: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 49471: 7b 10 88 00              u64 [sp + 0x88] = ra
 49475: 7b 15 80 00              u64 [sp + 0x80] = s0
 49479: 7b 16 78                 u64 [sp + 0x78] = s1
 49482: 64 75                    s0 = a0
 49484: 7c 77 08                 a0 = u8 [a0 + 0x8]
 49487: 64 8b                    a4 = a1
 49489: 33 08 01                 a1 = 0x1
 49492: 33 06 01                 s1 = 0x1
 49495: 51 07 1d                 jump @3158 if a0 == 0
      :                          @3157
 49498: 78 56 08                 u8 [s0 + 0x8] = s1
 49501: 46 15 09 01              u8 [s0 + 9] = 0x1
 49505: 64 57                    a0 = s0
 49507: 82 10 88 00              ra = u64 [sp + 0x88]
 49511: 82 15 80 00              s0 = u64 [sp + 0x80]
 49515: 82 16 78                 s1 = u64 [sp + 0x78]
 49518: 95 11 90 00              sp = sp + 0x90
 49522: 32 00                    ret
      :                          @3158
 49524: 64 9a                    a3 = a2
 49526: 82 5c                    a5 = u64 [s0]
 49528: 80 c7 34                 a0 = u32 [a5 + 0x34]
 49531: 7c 58 09                 a1 = u8 [s0 + 0x9]
 49534: 84 79 04                 a2 = a0 & 0x4
 49537: 52 09 45                 jump @3164 if a2 != 0
      :                          @3159
 49540: 51 08 32                 jump @3162 if a1 == 0
      :                          @3160
 49543: 82 c8 28                 a1 = u64 [a5 + 0x28]
 49546: 82 c7 20                 a0 = u64 [a5 + 0x20]
 49549: 82 83 18                 t1 = u64 [a1 + 0x18]
 49552: 33 08 e0 10 01           a1 = 0x110e0
 49557: 33 09 02                 a2 = 0x2
 49560: 64 a6                    s1 = a3
 49562: 7b 1b 10                 u64 [sp + 0x10] = a4
 49565: 7b 1c 08                 u64 [sp + 0x8] = a5
 49568: b4 30 02 92 03           ra = 914, jump [t1]
      :                          @3161 [@dyn 457]
 49573: 82 1c 08                 a5 = u64 [sp + 0x8]
 49576: 82 1b 10                 a4 = u64 [sp + 0x10]
 49579: 64 6a                    a3 = s1
 49581: 33 08 01                 a1 = 0x1
 49584: 33 06 01                 s1 = 0x1
 49587: 52 07 a7                 jump @3157 if a0 != 0
      :                          @3162
 49590: 64 b7                    a0 = a4
 49592: 64 c8                    a1 = a5
 49594: b4 a0 02 94 03           ra = 916, jump [a3]
      :                          @3163 [@dyn 458]
 49599: 33 08 01                 a1 = 0x1
 49602: 64 76                    s1 = a0
 49604: 28 96                    jump @3157
      :                          @3164
 49606: 52 08 37                 jump @3168 if a1 != 0
      :                          @3165
 49609: 82 c8 28                 a1 = u64 [a5 + 0x28]
 49612: 82 c7 20                 a0 = u64 [a5 + 0x20]
 49615: 82 83 18                 t1 = u64 [a1 + 0x18]
 49618: 33 08 e8 10 01           a1 = 0x110e8
 49623: 33 09 01                 a2 = 0x1
 49626: 33 06 01                 s1 = 0x1
 49629: 7b 1a                    u64 [sp] = a3
 49631: 7b 1b 10                 u64 [sp + 0x10] = a4
 49634: 7b 1c 08                 u64 [sp + 0x8] = a5
 49637: b4 30 02 96 03           ra = 918, jump [t1]
      :                          @3166 [@dyn 459]
 49642: 82 1c 08                 a5 = u64 [sp + 0x8]
 49645: 82 1b 10                 a4 = u64 [sp + 0x10]
 49648: 82 1a                    a3 = u64 [sp]
 49650: 33 08 01                 a1 = 0x1
 49653: 52 07 65 ff              jump @3157 if a0 != 0
      :                          @3167
 49657: 81 c7 34                 a0 = i32 [a5 + 0x34]
 49660: 01                       fallthrough
      :                          @3168
 49661: 33 06 01                 s1 = 0x1
 49664: 78 16 37                 u8 [sp + 0x37] = s1
 49667: 82 c8 20                 a1 = u64 [a5 + 0x20]
 49670: 82 c9 28                 a2 = u64 [a5 + 0x28]
 49673: 7b 18 18                 u64 [sp + 0x18] = a1
 49676: 7b 19 20                 u64 [sp + 0x20] = a2
 49679: 95 18 37                 a1 = sp + 0x37
 49682: 7b 18 28                 u64 [sp + 0x28] = a1
 49685: 81 c8 30                 a1 = i32 [a5 + 0x30]
 49688: 7c c9 38                 a2 = u8 [a5 + 0x38]
 49691: 82 c3                    t1 = u64 [a5]
 49693: 82 c4 08                 t2 = u64 [a5 + 0x8]
 49696: 82 c0 10                 ra = u64 [a5 + 0x10]
 49699: 82 c2 18                 t0 = u64 [a5 + 0x18]
 49702: 7a 17 6c                 u32 [sp + 0x6c] = a0
 49705: 7a 18 68                 u32 [sp + 0x68] = a1
 49708: 78 19 70                 u8 [sp + 0x70] = a2
 49711: 7b 13 38                 u64 [sp + 0x38] = t1
 49714: 7b 14 40                 u64 [sp + 0x40] = t2
 49717: 7b 10 48                 u64 [sp + 0x48] = ra
 49720: 7b 12 50                 u64 [sp + 0x50] = t0
 49723: 95 17 18                 a0 = sp + 0x18
 49726: 7b 17 58                 u64 [sp + 0x58] = a0
 49729: 33 07 b0 10 01           a0 = 0x110b0
 49734: 7b 17 60                 u64 [sp + 0x60] = a0
 49737: 95 18 38                 a1 = sp + 0x38
 49740: 64 b7                    a0 = a4
 49742: b4 a0 02 98 03           ra = 920, jump [a3]
      :                          @3169 [@dyn 460]
 49747: 52 07 21                 jump @3172 if a0 != 0
      :                          @3170
 49750: 82 18 60                 a1 = u64 [sp + 0x60]
 49753: 82 17 58                 a0 = u64 [sp + 0x58]
 49756: 82 8a 18                 a3 = u64 [a1 + 0x18]
 49759: 33 08 e2 10 01           a1 = 0x110e2
 49764: 33 09 02                 a2 = 0x2
 49767: b4 a0 02 9a 03           ra = 922, jump [a3]
      :                          @3171 [@dyn 461]
 49772: 64 76                    s1 = a0
 49774: 33 08 01                 a1 = 0x1
 49777: 28 e9 fe                 jump @3157
      :                          @3172
 49780: 33 08 01                 a1 = 0x1
 49783: 28 e3 fe                 jump @3157
      :                          @3173 [@dyn 462]
 49786: 7c 79                    a2 = u8 [a0]
 49788: 64 87                    a0 = a1
 49790: 51 09 0e                 jump @3175 if a2 == 0
      :                          @3174
 49793: 33 08 f0 00 01           a1 = 0x100f0
 49798: 33 09 04                 a2 = 0x4
 49801: 28 1b f5                 jump @2973
      :                          @3175
 49804: 33 08 b4 11 01           a1 = 0x111b4
 49809: 33 09 05                 a2 = 0x5
 49812: 28 10 f5                 jump @2973
      :                          @3176 [@dyn 463]
 49815: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 49819: 7b 10 80 00              u64 [sp + 0x80] = ra
 49823: 64 82                    t0 = a1
 49825: 7c 77                    a0 = u8 [a0]
 49827: 33 0a 81 00              a3 = 0x81
 49831: 95 18 7f                 a1 = sp + 0x7f
 49834: 33 03 37                 t1 = 0x37
 49837: 01                       fallthrough
      :                          @3177
 49838: 64 ab                    a4 = a3
 49840: 84 7a 0f                 a3 = a0 & 0xf
 49843: 97 77 38                 a0 = a0 << 0x38
 49846: 98 77 3c                 a0 = a0 >> 0x3c
 49849: 88 ac 0a                 a5 = a3 <u 0xa
 49852: 33 09 30                 a2 = 0x30
 49855: da c3 09                 a2 = t1 if a5 == 0
 49858: be a9 09                 i32 a2 = a2 + a3
 49861: 78 89                    u8 [a1] = a2
 49863: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 49866: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 49869: 52 07 e1                 jump @3177 if a0 != 0
      :                          @3178
 49872: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 49875: 56 27 80 00 2b           jump @3181 if a0 >u 128
      :                          @3179
 49880: 9a ac 81 00              a5 = 0x81 - a3
 49884: 64 1b                    a4 = sp
 49886: c8 7b 0b                 a4 = a4 + a0
 49889: 33 09 ea 10 01           a2 = 0x110ea
 49894: 33 08 01                 a1 = 0x1
 49897: 33 0a 02                 a3 = 0x2
 49900: 64 27                    a0 = t0
 49902: 50 20 a0 03 2b f2        ra = 928, jump @2919
      :                          @3180 [@dyn 464]
 49908: 82 10 80 00              ra = u64 [sp + 0x80]
 49912: 95 11 88 00              sp = sp + 0x88
 49916: 32 00                    ret
      :                          @3181
 49918: 00                       trap
      :                          @3182 [@dyn 465]
 49919: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 49923: 7b 10 80 00              u64 [sp + 0x80] = ra
 49927: 64 82                    t0 = a1
 49929: 81 7a                    a3 = i32 [a0]
 49931: 33 08 81 00              a1 = 0x81
 49935: 95 17 7f                 a0 = sp + 0x7f
 49938: 33 03 57                 t1 = 0x57
 49941: 01                       fallthrough
      :                          @3183
 49942: 64 8b                    a4 = a1
 49944: 8b ac 04                 i32 a5 = a3 >> 0x4
 49947: 84 aa 0f                 a3 = a3 & 0xf
 49950: 88 a8 0a                 a1 = a3 <u 0xa
 49953: 33 09 30                 a2 = 0x30
 49956: da 83 09                 a2 = t1 if a1 == 0
 49959: be a9 09                 i32 a2 = a2 + a3
 49962: 78 79                    u8 [a0] = a2
 49964: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 49967: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
 49970: 64 ca                    a3 = a5
 49972: 52 0c e2                 jump @3183 if a5 != 0
      :                          @3184
 49975: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 49978: 56 27 80 00 2b           jump @3187 if a0 >u 128
      :                          @3185
 49983: 9a 8c 81 00              a5 = 0x81 - a1
 49987: 64 1b                    a4 = sp
 49989: c8 7b 0b                 a4 = a4 + a0
 49992: 33 09 ea 10 01           a2 = 0x110ea
 49997: 33 08 01                 a1 = 0x1
 50000: 33 0a 02                 a3 = 0x2
 50003: 64 27                    a0 = t0
 50005: 50 20 a4 03 c4 f1        ra = 932, jump @2919
      :                          @3186 [@dyn 466]
 50011: 82 10 80 00              ra = u64 [sp + 0x80]
 50015: 95 11 88 00              sp = sp + 0x88
 50019: 32 00                    ret
      :                          @3187
 50021: 00                       trap
      :                          @3188 [@dyn 467]
 50022: 81 77                    a0 = i32 [a0]
 50024: 89 7a                    a3 = a0 <s 0
 50026: 85 a9 01                 a2 = a3 ^ 0x1
 50029: 97 7b 20                 a4 = a0 << 0x20
 50032: 98 bb 20                 a4 = a4 >> 0x20
 50035: 9a 77                    a0 = -a0
 50037: da ab 07                 a0 = a4 if a3 == 0
 50040: 64 8a                    a3 = a1
 50042: 64 98                    a1 = a2
 50044: 64 a9                    a2 = a3
 50046: 28 6d f0                 jump @2909
      :                          @3189 [@dyn 468]
 50049: 82 79                    a2 = u64 [a0]
 50051: 9a 97                    a0 = -a2
 50053: e3 79 07                 a0 = maxs(a2, a0)
 50056: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
 50059: 98 99 3f                 a2 = a2 >> 0x3f
 50062: 64 8a                    a3 = a1
 50064: 64 98                    a1 = a2
 50066: 64 a9                    a2 = a3
 50068: 28 57 f0                 jump @2909
      :                          @3190
 50071: 51 08 9b 00              jump @3211 if a1 == 0
      :                          @3191
 50075: 64 79                    a2 = a0
 50077: 7c 77                    a0 = u8 [a0]
 50079: 51 07 91 00              jump @3210 if a0 == 0
      :                          @3192
 50083: 51 27 ff 00 90 00        jump @3212 if a0 == 255
      :                          @3193
 50089: 6c 7a                    a3 = sext.b a0
 50091: 57 0a 09                 jump @3195 if a3 <s 0
      :                          @3194
 50094: 33 0a                    a3 = 0
 50096: 33 08                    a1 = 0
 50098: 28 73                    jump @3209
      :                          @3195
 50100: 55 27 c0 00 0d           jump @3197 if a0 >=u 192
      :                          @3196
 50105: 33 0a 01                 a3 = 0x1
 50108: 33 0b 80                 a4 = 0xffffffffffffff80
 50111: 28 4a                    jump @3206
      :                          @3197
 50113: 55 27 e0 00 0e           jump @3199 if a0 >=u 224
      :                          @3198
 50118: 33 0a 02                 a3 = 0x2
 50121: 33 0b 40 ff              a4 = 0xffffffffffffff40
 50125: 28 3c                    jump @3206
      :                          @3199
 50127: 55 27 f0 00 0e           jump @3201 if a0 >=u 240
      :                          @3200
 50132: 33 0a 03                 a3 = 0x3
 50135: 33 0b 20 ff              a4 = 0xffffffffffffff20
 50139: 28 2e                    jump @3206
      :                          @3201
 50141: 55 27 f8 00 0e           jump @3203 if a0 >=u 248
      :                          @3202
 50146: 33 0a 04                 a3 = 0x4
 50149: 33 0b 10 ff              a4 = 0xffffffffffffff10
 50153: 28 20                    jump @3206
      :                          @3203
 50155: 55 27 fc 00 0e           jump @3205 if a0 >=u 252
      :                          @3204
 50160: 33 0a 05                 a3 = 0x5
 50163: 33 0b 08 ff              a4 = 0xffffffffffffff08
 50167: 28 12                    jump @3206
      :                          @3205
 50169: 88 7a fe 00              a3 = a0 <u 0xfe
 50173: 33 0b 04 ff              a4 = 0xffffffffffffff04
 50177: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 50181: 85 aa 07                 a3 = a3 ^ 0x7
 50184: 01                       fallthrough
      :                          @3206
 50185: ae 8a 2b                 jump @3213 if a3 >=u a1
      :                          @3207
 50188: 33 08                    a1 = 0
 50190: c8 b7 07                 a0 = a0 + a4
 50193: 64 ab                    a4 = a3
 50195: 01                       fallthrough
      :                          @3208
 50196: c8 b9 0c                 a5 = a2 + a4
 50199: 7c cc                    a5 = u8 [a5]
 50201: 97 88 08                 a1 = a1 << 0x8
 50204: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 50207: d4 c8 08                 a1 = a1 | a5
 50210: 52 0b f2                 jump @3208 if a4 != 0
      :                          @3209
 50213: 8a a9 03                 i32 a2 = a3 << 0x3
 50216: cf 97 07                 a0 = a0 << a2
 50219: c8 87 07                 a0 = a0 + a1
 50222: 32 00                    ret
      :                          @3210
 50224: 32 00                    ret
      :                          @3211
 50226: 00                       trap
      :                          @3212
 50227: 00                       trap
      :                          @3213
 50228: 00                       trap
      :                          @3214 [@dyn 469]
 50229: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 50232: 7b 10 28                 u64 [sp + 0x28] = ra
 50235: 7b 15 20                 u64 [sp + 0x20] = s0
 50238: 7b 16 18                 u64 [sp + 0x18] = s1
 50241: 64 86                    s1 = a1
 50243: 82 88 28                 a1 = u64 [a1 + 0x28]
 50246: 82 6a 20                 a3 = u64 [s1 + 0x20]
 50249: 82 8b 18                 a4 = u64 [a1 + 0x18]
 50252: 64 75                    s0 = a0
 50254: 33 08 a9 10 01           a1 = 0x110a9
 50259: 33 09 01                 a2 = 0x1
 50262: 64 a7                    a0 = a3
 50264: b4 b0 02 ac 03           ra = 940, jump [a4]
      :                          @3215 [@dyn 470]
 50269: 7b 16                    u64 [sp] = s1
 50271: 78 17 08                 u8 [sp + 0x8] = a0
 50274: 46 11 09                 u8 [sp + 9] = 0
 50277: 7b 15 10                 u64 [sp + 0x10] = s0
 50280: 33 09 b2 03              a2 = 0x3b2
 50284: 64 17                    a0 = sp
 50286: 95 18 10                 a1 = sp + 0x10
 50289: 50 20 ae 03 ca fc        ra = 942, jump @3156
      :                          @3216 [@dyn 471]
 50295: 33 07 01                 a0 = 0x1
 50298: 7c 18 08                 a1 = u8 [sp + 0x8]
 50301: 52 08 1b                 jump @3218 if a1 != 0
      :                          @3217
 50304: 82 17                    a0 = u64 [sp]
 50306: 82 78 28                 a1 = u64 [a0 + 0x28]
 50309: 82 77 20                 a0 = u64 [a0 + 0x20]
 50312: 82 8a 18                 a3 = u64 [a1 + 0x18]
 50315: 33 08 e9 10 01           a1 = 0x110e9
 50320: 33 09 01                 a2 = 0x1
 50323: b4 a0 02 b0 03           ra = 944, jump [a3]
      :                          @3218 [@dyn 472]
 50328: 82 10 28                 ra = u64 [sp + 0x28]
 50331: 82 15 20                 s0 = u64 [sp + 0x20]
 50334: 82 16 18                 s1 = u64 [sp + 0x18]
 50337: 95 11 30                 sp = sp + 0x30
 50340: 32 00                    ret
      :                          @3219 [@dyn 473]
 50342: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 50346: 7b 10 80 00              u64 [sp + 0x80] = ra
 50350: 64 82                    t0 = a1
 50352: 80 88 34                 a1 = u32 [a1 + 0x34]
 50355: 82 77                    a0 = u64 [a0]
 50357: 84 89 10                 a2 = a1 & 0x10
 50360: 52 09 1b                 jump @3222 if a2 != 0
      :                          @3220
 50363: 84 88 20                 a1 = a1 & 0x20
 50366: 52 08 46                 jump @3225 if a1 != 0
      :                          @3221
 50369: 7c 77                    a0 = u8 [a0]
 50371: 33 08 01                 a1 = 0x1
 50374: 64 29                    a2 = t0
 50376: 82 10 80 00              ra = u64 [sp + 0x80]
 50380: 95 11 88 00              sp = sp + 0x88
 50384: 28 1b ef                 jump @2909
      :                          @3222
 50387: 7c 77                    a0 = u8 [a0]
 50389: 33 0a 81 00              a3 = 0x81
 50393: 95 18 7f                 a1 = sp + 0x7f
 50396: 33 03 57                 t1 = 0x57
 50399: 01                       fallthrough
      :                          @3223
 50400: 64 ab                    a4 = a3
 50402: 84 7a 0f                 a3 = a0 & 0xf
 50405: 97 77 38                 a0 = a0 << 0x38
 50408: 98 77 3c                 a0 = a0 >> 0x3c
 50411: 88 ac 0a                 a5 = a3 <u 0xa
 50414: 33 09 30                 a2 = 0x30
 50417: da c3 09                 a2 = t1 if a5 == 0
 50420: be a9 09                 i32 a2 = a2 + a3
 50423: 78 89                    u8 [a1] = a2
 50425: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 50428: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 50431: 52 07 e1                 jump @3223 if a0 != 0
      :                          @3224
 50434: 28 31                    jump @3227
      :                          @3225
 50436: 7c 77                    a0 = u8 [a0]
 50438: 33 0a 81 00              a3 = 0x81
 50442: 95 18 7f                 a1 = sp + 0x7f
 50445: 33 03 37                 t1 = 0x37
 50448: 01                       fallthrough
      :                          @3226
 50449: 64 ab                    a4 = a3
 50451: 84 7a 0f                 a3 = a0 & 0xf
 50454: 97 77 38                 a0 = a0 << 0x38
 50457: 98 77 3c                 a0 = a0 >> 0x3c
 50460: 88 ac 0a                 a5 = a3 <u 0xa
 50463: 33 09 30                 a2 = 0x30
 50466: da c3 09                 a2 = t1 if a5 == 0
 50469: be a9 09                 i32 a2 = a2 + a3
 50472: 78 89                    u8 [a1] = a2
 50474: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 50477: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 50480: 52 07 e1                 jump @3226 if a0 != 0
      :                          @3227
 50483: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 50486: 56 27 80 00 2b           jump @3230 if a0 >u 128
      :                          @3228
 50491: 9a ac 81 00              a5 = 0x81 - a3
 50495: 64 1b                    a4 = sp
 50497: c8 7b 0b                 a4 = a4 + a0
 50500: 33 09 ea 10 01           a2 = 0x110ea
 50505: 33 08 01                 a1 = 0x1
 50508: 33 0a 02                 a3 = 0x2
 50511: 64 27                    a0 = t0
 50513: 50 20 b4 03 c8 ef        ra = 948, jump @2919
      :                          @3229 [@dyn 474]
 50519: 82 10 80 00              ra = u64 [sp + 0x80]
 50523: 95 11 88 00              sp = sp + 0x88
 50527: 32 00                    ret
      :                          @3230
 50529: 00                       trap
