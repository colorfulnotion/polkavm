// RO data = 12888/12888 bytes
// RW data = 4736/74448 bytes
// Stack size = 65536 bytes
// RO data = [158, 4, 0, 0, 160, 4, 0, 0, 162, 4, 0, 0, 164, 4, 0, 0, 172, 4, 0, 0, 180, 4, 0, 0, 188, 4, 0, 0, 196, 4, 0, 0, 204, 4, 0, 0, 212, 4, 0, 0, 220, 4, 0, 0, 236, 4, 0, 0, 248, 4, 0, 0, 4, 5, 0, 0, 16, 5, 0, 0, 28, 5, 0, 0, 36, 5, 0, 0, 48, 5, 0, 0, 60, 5, 0, 0, 72, 5, 0, 0, 82, 5, 0, 0, 92, 5, 0, 0, 98, 5, 0, 0, 104, 5, 0, 0, 114, 5, 0, 0, 120, 5, 0, 0, 128, 5, 0, 0, 142, 5, 0, 0, 156, 5, 0, 0, 164, 5, 0, 0, 172, 5, 0, 0, 182, 5, 0, 0, 192, 5, 0, 0, 202, 5, 0, 0, 212, 5, 0, 0, 222, 5, 0, 0, 234, 5, 0, 0, 246, 5, 0, 0, 254, 5, 0, 0, 6, 6, 0, 0, 14, 6, 0, 0, 22, 6, 0, 0, 28, 6, 0, 0, 36, 6, 0, 0, 44, 6, 0, 0, 52, 6, 0, 0, 60, 6, 0, 0, 68, 6, 0, 0, 76, 6, 0, 0, 82, 6, 0, 0, 88, 6, 0, 0, 94, 6, 0, 0, 102, 6, 0, 0, 110, 6, 0, 0, 122, 6, 0, 0, 132, 6, 0, 0, 138, 6, 0, 0, 144, 6, 0, 0, 174, 6, 0, 0, 178, 6, 0, 0, 202, 6, 0, 0, 210, 6, 0, 0, 218, 6, 0, 0, 230, 6, 0, 0, 246, 6, 0, 0, 254, 6, 0, 0, 4, 7, 0, 0, 12, 7, 0, 0, 20, 7, 0, 0, 28, 7, 0, 0, 38, 7, 0, 0, 40, 7, 0, 0, 44, 7, 0, 0, 56, 7, 0, 0, 64, 7, 0, 0, 72, 7, 0, 0, 80, 7, 0, 0, 96, 7, 0, 0, 102, 7, 0, 0, 106, 7, 0, 0, 110, 7, 0, 0, 114, 7, 0, 0, 120, 7, 0, 0, 124, 7, 0, 0, 132, 7, 0, 0, 146, 7, 0, 0, 160, 7, 0, 0, 166, 7, 0, 0, 176, 7, 0, 0, 188, 7, 0, 0, 196, 7, 0, 0, 208, 7, 0, 0, 216, 7, 0, 0, 222, 7, 0, 0, 234, 7, 0, 0, 242, 7, 0, 0, 2, 8, 0, 0, 10, 8, 0, 0, 18, 8, 0, 0, 26, 8, 0, 0, 34, 8, 0, 0, 46, 8, 0, 0, 54, 8, 0, 0, 62, 8, 0, 0, 70, 8, 0, 0, 76, 8, 0, 0, 84, 8, 0, 0, 92, 8, 0, 0, 98, 8, 0, 0, 106, 8, 0, 0, 114, 8, 0, 0, 122, 8, 0, 0, 128, 8, 0, 0, 136, 8, 0, 0, 144, 8, 0, 0, 150, 8, 0, 0, 158, 8, 0, 0, 166, 8, 0, 0, 168, 8, 0, 0, 176, 8, 0, 0, 182, 8, 0, 0, 188, 8, 0, 0, 194, 8, 0, 0, 202, 8, 0, 0, 208, 8, 0, 0, 216, 8, 0, 0, 224, 8, 0, 0, 234, 8, 0, 0, 244, 8, 0, 0, 0, 9, 0, 0, 12, 9, 0, 0, 20, 9, 0, 0, 28, 9, 0, 0, 36, 9, 0, 0, 44, 9, 0, 0, 72, 9, 0, 0, 100, 9, 0, 0, 112, 9, 0, 0, 122, 9, 0, 0, 138, 9, 0, 0, 154, 9, 0, 0, 164, 9, 0, 0, 174, 9, 0, 0, 186, 9, 0, 0, 202, 9, 0, 0, 218, 9, 0, 0, 222, 9, 0, 0, 224, 9, 0, 0, 244, 9, 0, 0, 250, 9, 0, 0, 2, 10, 0, 0, 10, 10, 0, 0, 18, 10, 0, 0, 28, 10, 0, 0, 42, 10, 0, 0, 50, 10, 0, 0, 56, 10, 0, 0, 62, 10, 0, 0, 80, 10, 0, 0, 86, 10, 0, 0, 94, 10, 0, 0, 102, 10, 0, 0, 110, 10, 0, 0, 118, 10, 0, 0, 126, 10, 0, 0, 134, 10, 0, 0, 142, 10, 0, 0, 150, 10, 0, 0, 158, 10, 0, 0, 166, 10, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 54, 11, 0, 0, 174, 10, 0, 0, 182, 10, 0, 0, 190, 10, 0, 0, 198, 10, 0, 0, 204, 10, 0, 0, 210, 10, 0, 0, 211, 8, 163, 133, 136, 106, 63, 36, 68, 115, 112, 3, 46, 138, 25, 19, 208, 49, 159, 41, 34, 56, 9, 164, 137, 108, 78, 236, 152, 250, 46, 8, 78, 12, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 138, 2, 0, 0, 0, 0, 0, 0, 246, 11, 0, 0, 0, 0, 0, 0, 41, 32, 61, 32, 32, 112, 116, 115, 44, 32, 115, 61, 110, 116, 116, 40, 32, 105, 110, 32, 41, 32, 114, 61, 44, 32, 103, 61, 32, 61, 32, 40, 44, 32, 104, 61, 44, 32, 120, 61, 108, 99, 115, 40, 44, 32, 98, 61, 44, 32, 73, 61, 102, 105, 98, 32, 44, 32, 66, 61, 83, 111, 109, 101, 93, 32, 61, 32, 116, 114, 117, 101, 32, 195, 183, 32, 99, 108, 122, 61, 102, 32, 61, 32, 110, 111, 110, 101, 78, 111, 110, 101, 102, 105, 98, 40, 100, 116, 119, 40, 44, 32, 112, 61, 65, 67, 71, 84, 44, 32, 101, 61, 44, 32, 114, 61, 32, 32, 32, 32, 44, 32, 99, 61, 44, 32, 100, 61, 111, 114, 100, 95, 103, 99, 100, 40, 211, 8, 163, 133, 136, 106, 63, 36, 68, 115, 112, 3, 46, 138, 25, 19, 208, 49, 159, 41, 34, 56, 9, 164, 137, 108, 78, 236, 152, 250, 46, 8, 119, 19, 208, 56, 230, 33, 40, 69, 108, 12, 233, 52, 207, 102, 84, 190, 221, 80, 124, 201, 183, 41, 172, 192, 23, 9, 71, 181, 181, 213, 132, 63, 32, 115, 101, 110, 100, 101, 114, 61, 109, 111, 116, 122, 107, 105, 110, 40, 106, 97, 99, 111, 98, 105, 40, 32, 32, 117, 110, 114, 97, 110, 107, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 112, 97, 114, 116, 115, 58, 32, 102, 105, 120, 95, 109, 117, 108, 61, 255, 255, 255, 255, 255, 255, 255, 255, 109, 111, 100, 95, 101, 120, 112, 40, 44, 32, 102, 110, 118, 49, 97, 61, 32, 114, 101, 115, 117, 108, 116, 61, 32, 115, 104, 97, 114, 101, 115, 61, 109, 97, 116, 95, 112, 111, 119, 40, 99, 105, 114, 99, 117, 105, 116, 61, 44, 32, 115, 105, 110, 226, 137, 136, 115, 117, 98, 95, 103, 99, 100, 40, 2, 0, 0, 0, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 0, 0, 159, 36, 0, 0, 0, 0, 0, 0, 18, 110, 0, 0, 0, 0, 0, 0, 215, 224, 6, 0, 0, 0, 0, 0, 24, 61, 149, 0, 0, 0, 0, 0, 254, 145, 1, 107, 0, 0, 0, 0, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 108, 117, 99, 97, 115, 40, 226, 5, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 116, 114, 105, 98, 111, 110, 97, 99, 99, 105, 40, 0, 0, 0, 0, 0, 8, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 101, 108, 108, 40, 0, 0, 0, 56, 6, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 116, 105, 114, 108, 105, 110, 103, 49, 40, 0, 0, 0, 0, 0, 0, 96, 6, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 116, 105, 114, 108, 105, 110, 103, 50, 40, 0, 0, 0, 0, 0, 0, 160, 6, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 66, 101, 108, 108, 40, 0, 0, 0, 224, 6, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 101, 114, 97, 110, 103, 101, 109, 101, 110, 116, 32, 61, 32, 0, 0, 8, 7, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 19, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 101, 117, 108, 101, 114, 105, 97, 110, 40, 0, 0, 0, 0, 0, 0, 0, 56, 7, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 110, 97, 114, 97, 121, 97, 110, 97, 40, 0, 0, 0, 0, 0, 0, 0, 120, 7, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 24, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 41, 58, 32, 0, 0, 0, 0, 0, 112, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 216, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 112, 101, 114, 102, 101, 99, 116, 95, 109, 97, 116, 99, 104, 105, 110, 103, 115, 32, 61, 32, 0, 0, 0, 0, 0, 8, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 99, 104, 114, 111, 109, 97, 116, 105, 99, 95, 99, 111, 117, 110, 116, 40, 107, 61, 0, 0, 0, 0, 0, 0, 40, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 112, 97, 110, 110, 105, 110, 103, 95, 116, 114, 101, 101, 95, 99, 111, 117, 110, 116, 32, 61, 32, 0, 0, 96, 8, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 44, 32, 112, 97, 116, 104, 61, 0, 120, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 136, 8, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 116, 111, 112, 111, 95, 115, 111, 114, 116, 32, 61, 32, 0, 0, 0, 0, 176, 8, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 83, 67, 67, 115, 32, 61, 32, 0, 208, 8, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 98, 105, 112, 97, 114, 116, 105, 116, 101, 95, 109, 97, 116, 99, 104, 32, 61, 32, 0, 0, 0, 0, 0, 0, 232, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 115, 116, 111, 101, 114, 95, 119, 97, 103, 110, 101, 114, 32, 61, 32, 0, 16, 9, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 109, 97, 116, 114, 105, 120, 95, 114, 97, 110, 107, 32, 109, 97, 116, 61, 105, 110, 116, 101, 103, 101, 114, 95, 108, 111, 103, 95, 100, 105, 118, 40, 110, 111, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 32, 109, 111, 100, 95, 101, 120, 112, 95, 115, 108, 105, 100, 105, 110, 103, 40, 105, 115, 95, 119, 105, 108, 115, 111, 110, 95, 112, 114, 105, 109, 101, 40, 105, 115, 95, 105, 115, 111, 109, 111, 114, 112, 104, 105, 99, 32, 61, 32, 105, 110, 116, 101, 103, 101, 114, 95, 108, 111, 103, 95, 109, 117, 108, 40, 99, 111, 105, 110, 95, 99, 104, 97, 110, 103, 101, 95, 109, 105, 110, 40, 109, 111, 110, 116, 95, 114, 101, 100, 117, 99, 101, 51, 50, 32, 61, 32, 32, 109, 97, 120, 105, 109, 97, 108, 32, 99, 108, 105, 113, 117, 101, 115, 114, 97, 98, 105, 110, 95, 100, 101, 99, 114, 121, 112, 116, 32, 109, 61, 128, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 112, 105, 99, 107, 95, 116, 104, 101, 111, 114, 101, 109, 32, 32, 226, 134, 146, 32, 50, 97, 114, 101, 97, 61, 240, 9, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 253, 9, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 128, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 120, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 97, 110, 104, 97, 116, 116, 97, 110, 40, 41, 61, 0, 0, 0, 0, 72, 10, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 99, 104, 101, 98, 121, 115, 104, 101, 118, 40, 0, 0, 0, 0, 0, 0, 136, 10, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 63, 32, 0, 0, 0, 0, 0, 0, 240, 47, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 200, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 99, 111, 110, 118, 101, 120, 95, 104, 117, 108, 108, 61, 32, 226, 134, 146, 32, 104, 117, 108, 108, 61, 0, 0, 0, 11, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 12, 11, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 115, 101, 103, 109, 101, 110, 116, 115, 95, 105, 110, 116, 101, 114, 115, 101, 99, 116, 32, 45, 32, 226, 136, 169, 32, 0, 0, 0, 0, 0, 0, 0, 56, 11, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 75, 11, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 76, 11, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 75, 11, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 200, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 102, 105, 108, 108, 101, 100, 32, 32, 99, 101, 108, 108, 115, 32, 102, 114, 111, 109, 32, 40, 0, 0, 0, 0, 168, 11, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 175, 11, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 241, 47, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 115, 99, 97, 110, 108, 105, 110, 101, 95, 102, 105, 108, 108, 32, 111, 102, 32, 32, 226, 134, 146, 32, 32, 112, 105, 120, 101, 108, 115, 0, 0, 0, 0, 12, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 17, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 22, 12, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 99, 111, 104, 101, 110, 95, 115, 117, 116, 104, 101, 114, 108, 97, 110, 100, 95, 99, 108, 105, 112, 32, 32, 99, 108, 105, 112, 112, 101, 100, 32, 116, 111, 32, 0, 0, 0, 0, 0, 0, 80, 12, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 75, 11, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 102, 12, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 200, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 109, 105, 100, 112, 111, 105, 110, 116, 95, 99, 105, 114, 99, 108, 101, 32, 64, 40, 0, 0, 0, 0, 0, 0, 184, 12, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 92, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 17, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 76, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 101, 114, 103, 101, 95, 115, 111, 114, 116, 32, 0, 0, 0, 0, 0, 32, 13, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 113, 117, 105, 99, 107, 95, 115, 111, 114, 116, 32, 0, 0, 0, 0, 0, 64, 13, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 104, 101, 97, 112, 95, 115, 111, 114, 116, 32, 0, 0, 0, 0, 0, 0, 96, 13, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 99, 111, 117, 110, 116, 105, 110, 103, 95, 115, 111, 114, 116, 32, 0, 0, 128, 13, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 19, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 114, 97, 100, 105, 120, 95, 115, 111, 114, 116, 32, 0, 0, 0, 0, 0, 176, 13, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 44, 32, 115, 117, 109, 40, 48, 46, 46, 61, 0, 0, 0, 0, 0, 0, 240, 47, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 208, 13, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 44, 32, 115, 117, 109, 40, 46, 46, 61, 0, 0, 0, 0, 0, 0, 0, 240, 47, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 14, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 22, 14, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 115, 95, 113, 117, 97, 100, 114, 97, 116, 105, 99, 95, 114, 101, 115, 105, 100, 117, 101, 40, 0, 0, 0, 96, 14, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 99, 97, 114, 109, 105, 99, 104, 97, 101, 108, 40, 0, 0, 0, 0, 0, 168, 14, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 200, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 68, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 114, 105, 109, 105, 116, 105, 118, 101, 95, 114, 111, 111, 116, 40, 0, 8, 15, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 111, 118, 97, 121, 95, 115, 116, 114, 97, 115, 115, 101, 110, 40, 0, 0, 0, 0, 0, 0, 0, 88, 15, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 102, 101, 114, 109, 97, 116, 95, 102, 97, 99, 116, 111, 114, 40, 0, 0, 144, 15, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 116, 114, 105, 97, 108, 95, 100, 105, 118, 105, 115, 105, 111, 110, 95, 119, 104, 101, 101, 108, 40, 0, 0, 0, 192, 15, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 111, 99, 107, 108, 105, 110, 103, 116, 111, 110, 40, 0, 0, 0, 0, 248, 15, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 101, 99, 114, 101, 116, 61, 0, 40, 16, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 104, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 108, 102, 115, 114, 32, 0, 0, 0, 80, 16, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 98, 98, 115, 95, 110, 101, 120, 116, 32, 0, 0, 0, 0, 0, 0, 0, 104, 16, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 111, 116, 112, 95, 101, 110, 99, 114, 121, 112, 116, 32, 109, 61, 32, 99, 61, 32, 100, 61, 0, 0, 0, 0, 136, 16, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 150, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 153, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 43, 226, 134, 146, 0, 0, 0, 0, 240, 47, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 208, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 209, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 209, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 164, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 116, 115, 112, 95, 104, 101, 108, 100, 95, 107, 97, 114, 112, 32, 116, 111, 117, 114, 32, 99, 111, 115, 116, 32, 61, 32, 0, 0, 0, 0, 0, 0, 56, 17, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 98, 105, 110, 95, 112, 97, 99, 107, 105, 110, 103, 95, 102, 102, 100, 32, 61, 32, 0, 0, 0, 0, 0, 0, 104, 17, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 103, 114, 101, 101, 100, 121, 95, 99, 111, 108, 111, 114, 105, 110, 103, 32, 61, 32, 0, 0, 0, 0, 0, 0, 144, 17, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 99, 111, 118, 101, 114, 32, 101, 100, 103, 101, 115, 32, 61, 32, 0, 0, 184, 17, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 115, 116, 101, 105, 110, 101, 114, 95, 97, 112, 112, 114, 111, 120, 32, 32, 97, 112, 112, 114, 111, 120, 32, 99, 111, 115, 116, 61, 0, 0, 0, 0, 216, 17, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 231, 17, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 106, 111, 98, 115, 32, 32, 226, 134, 146, 32, 111, 114, 100, 101, 114, 32, 24, 18, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 29, 18, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 117, 110, 105, 111, 110, 32, 115, 105, 122, 101, 32, 61, 32, 0, 0, 0, 72, 18, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 98, 117, 114, 110, 115, 105, 100, 101, 95, 110, 101, 99, 107, 108, 97, 99, 101, 32, 100, 105, 115, 116, 105, 110, 99, 116, 32, 99, 111, 108, 111, 114, 105, 110, 103, 115, 32, 61, 32, 0, 104, 18, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 114, 111, 111, 107, 95, 112, 111, 108, 121, 32, 110, 61, 0, 0, 0, 0, 160, 18, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 17, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 112, 101, 114, 109, 97, 110, 101, 110, 116, 32, 61, 32, 0, 0, 0, 0, 208, 18, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 100, 101, 116, 32, 61, 32, 0, 0, 240, 18, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 121, 111, 117, 110, 103, 95, 116, 97, 98, 108, 101, 97, 117, 120, 32, 195, 151, 0, 0, 0, 0, 0, 0, 0, 8, 19, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 23, 19, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 17, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 102, 114, 111, 98, 101, 110, 105, 117, 115, 40, 0, 0, 0, 0, 0, 0, 80, 19, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 40, 41, 32, 109, 111, 100, 32, 144, 19, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 146, 19, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 19, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 113, 95, 97, 110, 97, 108, 111, 103, 91, 93, 95, 0, 0, 0, 0, 0, 200, 19, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 209, 19, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 19, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 206, 166, 95, 0, 0, 0, 0, 0, 8, 20, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 68, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 152, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 82, 40, 41, 32, 105, 110, 32, 0, 80, 20, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 82, 20, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 110, 101, 103, 97, 116, 105, 118, 101, 32, 99, 121, 99, 108, 101, 32, 100, 101, 116, 101, 99, 116, 101, 100, 0, 136, 20, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 98, 101, 108, 108, 109, 97, 110, 95, 102, 111, 114, 100, 32, 100, 105, 115, 116, 32, 102, 114, 111, 109, 32, 0, 176, 20, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 19, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 102, 108, 111, 121, 100, 95, 119, 97, 114, 115, 104, 97, 108, 108, 0, 0, 232, 20, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 103, 114, 97, 112, 104, 95, 100, 105, 97, 109, 101, 116, 101, 114, 32, 61, 32, 0, 0, 0, 0, 0, 0, 0, 8, 21, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 97, 114, 116, 105, 99, 117, 108, 97, 116, 105, 111, 110, 95, 112, 111, 105, 110, 116, 115, 32, 61, 32, 0, 0, 48, 21, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 98, 114, 105, 100, 103, 101, 115, 32, 61, 32, 0, 0, 0, 0, 0, 0, 88, 21, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 98, 114, 111, 110, 95, 107, 101, 114, 98, 111, 115, 99, 104, 32, 0, 0, 120, 21, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 192, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 103, 114, 101, 101, 100, 121, 95, 100, 111, 109, 105, 110, 97, 116, 105, 110, 103, 95, 115, 101, 116, 32, 61, 32, 168, 21, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 103, 114, 97, 104, 97, 109, 95, 104, 117, 108, 108, 32, 61, 32, 0, 0, 208, 21, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 100, 105, 97, 109, 101, 116, 101, 114, 32, 61, 32, 0, 0, 0, 0, 0, 240, 21, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 116, 114, 105, 97, 110, 103, 117, 108, 97, 116, 101, 95, 99, 111, 110, 118, 101, 120, 32, 61, 32, 0, 0, 0, 16, 22, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 109, 105, 110, 107, 111, 119, 115, 107, 105, 95, 115, 117, 109, 32, 104, 117, 108, 108, 32, 61, 32, 0, 0, 0, 56, 22, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 86, 105, 115, 105, 98, 105, 108, 105, 116, 121, 71, 114, 97, 112, 104, 32, 101, 100, 103, 101, 115, 32, 61, 32, 96, 22, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 115, 116, 114, 97, 115, 115, 101, 110, 95, 50, 120, 50, 32, 65, 61, 44, 32, 65, 120, 66, 61, 0, 0, 0, 136, 22, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 128, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 151, 22, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 103, 101, 114, 115, 104, 103, 111, 114, 105, 110, 95, 98, 111, 117, 110, 100, 115, 32, 109, 97, 116, 61, 44, 32, 98, 111, 117, 110, 100, 115, 61, 0, 208, 22, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 230, 22, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 44, 32, 114, 97, 110, 107, 61, 0, 48, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 16, 23, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 99, 111, 110, 100, 105, 116, 105, 111, 110, 95, 110, 117, 109, 98, 101, 114, 95, 50, 120, 50, 32, 65, 61, 32, 61, 0, 0, 0, 0, 0, 0, 0, 56, 23, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 79, 23, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 115, 112, 109, 118, 32, 120, 61, 32, 226, 134, 146, 32, 121, 61, 0, 0, 120, 23, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 127, 23, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 115, 105, 110, 103, 117, 108, 97, 114, 95, 118, 97, 108, 117, 101, 95, 98, 111, 117, 110, 100, 115, 32, 65, 61, 32, 207, 131, 226, 136, 136, 91, 0, 168, 23, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 192, 23, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 73, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 112, 111, 108, 108, 97, 114, 100, 95, 114, 104, 111, 95, 98, 114, 101, 110, 116, 32, 0, 0, 0, 0, 0, 0, 8, 24, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 79, 110, 101, 68, 82, 97, 110, 103, 101, 84, 114, 101, 101, 81, 117, 101, 114, 121, 32, 91, 93, 32, 226, 134, 146, 32, 0, 0, 0, 0, 0, 0, 48, 24, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 68, 24, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 226, 134, 146, 99, 61, 0, 0, 0, 208, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 128, 24, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 209, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 109, 104, 95, 100, 101, 99, 114, 121, 112, 116, 32, 0, 0, 0, 0, 0, 184, 24, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 209, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 209, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 114, 101, 99, 95, 110, 116, 104, 32, 84, 40, 0, 0, 0, 0, 0, 0, 248, 24, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 118, 101, 95, 108, 105, 110, 101, 97, 114, 51, 32, 0, 0, 40, 25, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 107, 95, 115, 104, 111, 114, 116, 101, 115, 116, 32, 0, 0, 0, 0, 0, 72, 25, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 110, 111, 32, 102, 97, 99, 116, 111, 114, 0, 0, 0, 0, 0, 0, 0, 104, 25, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 99, 102, 95, 102, 97, 99, 116, 111, 114, 32, 102, 97, 99, 116, 111, 114, 58, 32, 0, 0, 0, 0, 0, 0, 136, 25, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 114, 115, 97, 95, 107, 101, 121, 103, 101, 110, 32, 110, 61, 0, 0, 0, 176, 25, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 180, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 196, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 101, 108, 103, 97, 109, 97, 108, 95, 107, 101, 121, 103, 101, 110, 32, 112, 61, 0, 0, 0, 0, 0, 0, 0, 240, 25, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 96, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 104, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 61, 44, 32, 111, 107, 61, 0, 72, 26, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 184, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 80, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 74, 26, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 103, 102, 95, 99, 111, 101, 102, 102, 91, 0, 0, 0, 0, 0, 0, 0, 144, 26, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 136, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 101, 103, 101, 110, 100, 114, 101, 95, 115, 121, 109, 98, 111, 108, 32, 40, 32, 47, 0, 0, 0, 0, 0, 192, 26, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 210, 26, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 117, 99, 97, 115, 95, 108, 101, 104, 109, 101, 114, 32, 77, 95, 32, 105, 115, 32, 112, 114, 105, 109, 101, 63, 32, 0, 0, 0, 0, 0, 0, 8, 27, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 23, 27, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 108, 117, 99, 97, 115, 95, 115, 101, 113, 117, 101, 110, 99, 101, 32, 85, 95, 44, 86, 95, 32, 109, 111, 100, 32, 0, 0, 0, 0, 0, 0, 0, 72, 27, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 89, 27, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 92, 27, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 100, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 241, 47, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 99, 108, 111, 115, 101, 115, 116, 95, 112, 97, 105, 114, 32, 44, 32, 99, 108, 111, 115, 101, 115, 116, 61, 44, 32, 100, 105, 115, 116, 194, 178, 61, 200, 27, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 213, 27, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 75, 11, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 223, 27, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 98, 97, 105, 108, 108, 105, 101, 95, 112, 115, 119, 32, 0, 0, 0, 0, 40, 28, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 23, 27, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 110, 101, 119, 116, 111, 110, 95, 115, 113, 114, 116, 32, 0, 0, 0, 0, 88, 28, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 19, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 100, 101, 116, 95, 98, 97, 114, 101, 105, 115, 115, 95, 51, 120, 51, 32, 100, 101, 116, 32, 61, 32, 0, 0, 136, 28, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 115, 109, 105, 116, 104, 95, 110, 111, 114, 109, 97, 108, 95, 102, 111, 114, 109, 95, 50, 120, 50, 32, 100, 105, 97, 103, 40, 0, 0, 0, 0, 0, 176, 28, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 241, 47, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 104, 101, 114, 109, 105, 116, 101, 95, 110, 111, 114, 109, 97, 108, 95, 102, 111, 114, 109, 95, 50, 120, 50, 32, 72, 32, 61, 32, 91, 91, 93, 44, 91, 93, 93, 0, 0, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 30, 29, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 33, 29, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 108, 108, 108, 95, 114, 101, 100, 117, 99, 101, 95, 50, 100, 32, 98, 49, 61, 44, 32, 98, 50, 61, 0, 0, 120, 29, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 137, 29, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 108, 111, 110, 103, 95, 100, 105, 118, 32, 44, 32, 114, 101, 109, 32, 0, 176, 29, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 144, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 19, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 185, 29, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 98, 97, 114, 114, 101, 116, 116, 95, 100, 105, 118, 40, 0, 0, 0, 0, 0, 30, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 96, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 111, 100, 95, 101, 120, 112, 95, 108, 97, 100, 100, 101, 114, 40, 0, 128, 30, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 116, 111, 111, 109, 51, 95, 54, 52, 40, 0, 0, 0, 0, 0, 0, 0, 208, 30, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 116, 101, 105, 110, 95, 103, 99, 100, 40, 0, 0, 0, 0, 0, 0, 16, 31, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 136, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 240, 47, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 19, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 144, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 64, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 115, 95, 112, 101, 114, 102, 101, 99, 116, 95, 115, 113, 117, 97, 114, 101, 40, 0, 0, 0, 0, 0, 0, 16, 32, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 101, 114, 102, 101, 99, 116, 95, 112, 111, 119, 101, 114, 40, 0, 0, 72, 32, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 102, 119, 104, 116, 32, 0, 0, 0, 120, 32, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 99, 111, 110, 116, 105, 110, 117, 101, 100, 95, 102, 114, 97, 99, 116, 105, 111, 110, 95, 99, 111, 110, 118, 101, 114, 103, 101, 110, 116, 115, 40, 0, 144, 32, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 210, 26, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 102, 97, 114, 101, 121, 95, 115, 101, 113, 117, 101, 110, 99, 101, 40, 41, 32, 108, 101, 110, 103, 116, 104, 32, 61, 32, 0, 0, 0, 0, 0, 0, 224, 32, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 239, 32, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 111, 107, 61, 32, 112, 101, 114, 109, 61, 0, 0, 0, 0, 0, 0, 0, 32, 33, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 35, 33, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 32, 99, 111, 109, 98, 61, 0, 0, 32, 33, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 80, 33, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 112, 101, 114, 109, 61, 32, 114, 97, 110, 107, 61, 0, 0, 0, 0, 0, 120, 33, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 125, 33, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 40, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 99, 111, 109, 98, 61, 0, 0, 0, 184, 33, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 125, 33, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 40, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 144, 19, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 110, 61, 0, 0, 0, 0, 0, 0, 16, 34, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 17, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 56, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 99, 111, 105, 110, 95, 99, 104, 97, 110, 103, 101, 95, 99, 111, 117, 110, 116, 40, 0, 0, 0, 0, 0, 0, 72, 34, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 160, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 107, 110, 97, 112, 115, 97, 99, 107, 32, 99, 97, 112, 61, 44, 32, 119, 115, 61, 44, 32, 118, 115, 61, 32, 226, 134, 146, 32, 109, 97, 120, 61, 160, 34, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 173, 34, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 178, 34, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 183, 34, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 117, 110, 98, 111, 117, 110, 100, 101, 100, 95, 107, 110, 97, 112, 115, 97, 99, 107, 32, 99, 97, 112, 61, 0, 0, 35, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 173, 34, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 178, 34, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 17, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 112, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 101, 118, 101, 110, 115, 104, 116, 101, 105, 110, 40, 0, 0, 0, 0, 136, 35, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 136, 35, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 97, 109, 101, 114, 97, 117, 95, 108, 101, 118, 101, 110, 115, 104, 116, 101, 105, 110, 40, 0, 0, 0, 0, 232, 35, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 97, 116, 114, 105, 120, 95, 99, 104, 97, 105, 110, 40, 41, 32, 226, 134, 146, 32, 0, 0, 0, 0, 0, 48, 36, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 61, 36, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 111, 112, 116, 105, 109, 97, 108, 95, 98, 115, 116, 32, 102, 114, 101, 113, 61, 0, 0, 0, 0, 0, 0, 0, 104, 36, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 17, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 168, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 110, 101, 101, 100, 108, 101, 109, 97, 110, 95, 119, 117, 110, 115, 99, 104, 40, 0, 0, 0, 0, 0, 0, 0, 208, 36, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 109, 105, 116, 104, 95, 119, 97, 116, 101, 114, 109, 97, 110, 40, 0, 24, 37, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 44, 32, 108, 99, 109, 61, 0, 0, 204, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 88, 37, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 44, 32, 109, 111, 100, 95, 105, 110, 118, 61, 0, 0, 0, 0, 0, 0, 80, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 160, 37, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 99, 114, 116, 50, 32, 61, 32, 0, 0, 38, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 103, 97, 114, 110, 101, 114, 32, 61, 32, 0, 0, 0, 0, 0, 0, 0, 24, 38, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 110, 116, 104, 95, 114, 111, 111, 116, 40, 0, 0, 0, 0, 0, 0, 0, 56, 38, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 44, 32, 99, 116, 122, 61, 44, 32, 112, 111, 112, 99, 111, 117, 110, 116, 61, 44, 32, 112, 97, 114, 105, 116, 121, 61, 0, 0, 0, 0, 0, 0, 148, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 120, 38, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 126, 38, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 137, 38, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 114, 101, 118, 95, 98, 105, 116, 115, 61, 44, 32, 103, 114, 97, 121, 95, 101, 110, 99, 61, 44, 32, 103, 114, 97, 121, 95, 100, 101, 99, 61, 0, 216, 38, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 225, 38, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 236, 38, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 112, 114, 105, 109, 101, 115, 32, 117, 112, 32, 116, 111, 32, 49, 48, 48, 58, 32, 0, 0, 0, 0, 0, 0, 40, 39, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 102, 97, 99, 116, 40, 44, 32, 98, 105, 110, 111, 109, 105, 97, 108, 40, 44, 32, 99, 97, 116, 97, 108, 97, 110, 40, 0, 0, 0, 0, 0, 0, 80, 39, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 85, 39, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 96, 39, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 107, 97, 114, 97, 116, 115, 117, 98, 97, 40, 0, 0, 0, 0, 0, 0, 224, 39, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 112, 95, 97, 100, 100, 61, 44, 32, 109, 112, 95, 115, 117, 98, 61, 44, 32, 109, 112, 95, 109, 117, 108, 95, 110, 97, 105, 118, 101, 61, 0, 32, 40, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 39, 40, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 48, 40, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 109, 111, 110, 116, 95, 109, 117, 108, 51, 50, 40, 0, 0, 0, 0, 0, 112, 40, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 44, 32, 98, 97, 114, 114, 101, 116, 116, 32, 61, 32, 0, 0, 0, 0, 176, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 176, 40, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 84, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 97, 110, 103, 108, 101, 61, 32, 226, 134, 146, 32, 99, 111, 115, 226, 137, 136, 0, 0, 0, 0, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 6, 41, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 128, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 44, 32, 102, 105, 120, 95, 100, 105, 118, 61, 0, 0, 0, 0, 0, 0, 64, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 72, 41, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 108, 99, 103, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 120, 41, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 120, 111, 114, 115, 104, 105, 102, 116, 54, 52, 32, 61, 32, 0, 0, 0, 152, 41, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 112, 99, 103, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 184, 41, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 109, 119, 99, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 216, 41, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 99, 114, 99, 51, 50, 61, 44, 32, 97, 100, 108, 101, 114, 51, 50, 61, 44, 32, 109, 117, 114, 109, 117, 114, 51, 61, 44, 32, 106, 101, 110, 107, 105, 110, 115, 61, 0, 0, 0, 0, 248, 41, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 254, 41, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 88, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 42, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 18, 42, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 101, 117, 108, 101, 114, 84, 111, 116, 105, 101, 110, 116, 32, 112, 104, 105, 40, 0, 0, 0, 0, 0, 0, 0, 112, 42, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 105, 110, 101, 97, 114, 95, 115, 105, 101, 118, 101, 32, 110, 61, 32, 35, 112, 114, 105, 109, 101, 115, 61, 168, 42, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 183, 42, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 108, 105, 110, 101, 97, 114, 95, 109, 117, 32, 110, 61, 44, 32, 91, 110, 93, 61, 0, 0, 0, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 12, 43, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 83, 117, 109, 79, 102, 68, 105, 118, 105, 115, 111, 114, 115, 32, 115, 105, 103, 109, 97, 40, 0, 0, 0, 0, 56, 43, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 105, 118, 105, 115, 111, 114, 95, 99, 111, 117, 110, 116, 40, 0, 0, 112, 43, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 111, 98, 105, 117, 115, 40, 0, 160, 43, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 105, 114, 105, 99, 104, 108, 101, 116, 95, 99, 111, 110, 118, 111, 108, 117, 116, 105, 111, 110, 32, 40, 49, 32, 42, 32, 105, 100, 41, 40, 0, 200, 43, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 105, 95, 116, 114, 105, 97, 108, 40, 0, 0, 0, 0, 0, 0, 0, 8, 44, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 32, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 210, 26, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 156, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 32, 226, 134, 146, 32, 102, 97, 105, 108, 0, 0, 0, 0, 0, 0, 0, 16, 34, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 120, 44, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 32, 226, 134, 146, 32, 102, 97, 99, 116, 111, 114, 32, 0, 0, 0, 0, 16, 34, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 168, 44, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 115, 116, 101, 114, 110, 95, 98, 114, 111, 99, 111, 116, 95, 112, 97, 116, 104, 40, 0, 0, 0, 0, 0, 0, 216, 44, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 210, 26, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 115, 95, 115, 116, 114, 111, 110, 103, 95, 108, 117, 99, 97, 115, 95, 112, 114, 112, 32, 0, 0, 0, 0, 32, 45, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 200, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 118, 101, 95, 113, 117, 97, 100, 114, 97, 116, 105, 99, 95, 109, 111, 100, 40, 97, 61, 0, 0, 88, 45, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 116, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 192, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 172, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 105, 115, 95, 98, 114, 117, 116, 101, 102, 111, 114, 99, 101, 32, 61, 32, 0, 0, 0, 0, 0, 0, 0, 192, 45, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 115, 101, 116, 95, 99, 111, 118, 101, 114, 95, 103, 114, 101, 101, 100, 121, 32, 61, 32, 0, 0, 0, 0, 0, 232, 45, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 80, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 114, 117, 110, 95, 112, 114, 111, 103, 114, 97, 109, 32, 32, 103, 97, 115, 95, 117, 115, 101, 100, 32, 0, 0, 32, 46, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 44, 46, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 102, 105, 98, 78, 32, 110, 117, 109, 95, 115, 101, 103, 109, 101, 110, 116, 115, 61, 0, 0, 0, 0, 0, 0, 88, 46, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 124, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 96, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 160, 46, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 186, 46, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 16, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 201, 46, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 48, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 211, 46, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 217, 46, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 88, 47, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 113, 47, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 16, 12, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 18, 12, 0, 0, 0, 0, 0, 0, 24, 12, 0, 0, 0, 0, 0, 0, 32, 12, 0, 0, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 240, 47, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 78, 12, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 80, 12, 0, 0, 0, 0, 0, 0, 86, 12, 0, 0, 0, 0, 0, 0, 90, 12, 0, 0, 0, 0, 0, 0, 44, 32, 44, 10, 40, 40, 10, 44, 10, 93, 48, 120, 48, 98, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 102, 97, 108, 115, 101, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 27, 50, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 44, 50, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 235, 57, 12, 2, 231, 1, 233, 195, 88, 75, 252, 92, 228, 140, 100, 252, 128, 69, 38, 119, 143, 230, 252, 62, 81, 133, 15, 205, 157, 177, 149, 18, 213, 57, 90, 100, 2, 167, 47, 172, 60, 22, 159, 249, 186, 230, 130, 110, 237, 194, 201, 77, 201, 154, 183, 236, 96, 229, 251, 128, 0, 3, 15, 213, 76, 254, 61, 156, 41, 239, 199, 102, 170, 211, 211, 120, 30, 204, 156, 126, 208, 97, 108, 121, 159, 178, 236, 206, 224, 238, 24, 151, 201, 113, 163, 134, 245, 29, 211, 199, 14, 14, 188, 195, 5, 17, 17, 44, 125, 106, 0, 138, 100, 99, 200, 161, 187, 126, 232, 110, 104, 55, 135, 203, 250, 200, 58, 69, 22, 203, 68, 23, 227, 224, 33, 4, 225, 229, 162, 232, 28, 37, 43, 149, 238, 81, 37, 240, 241, 167, 202, 252, 49, 80, 19, 82, 108, 30, 1, 221, 31, 132, 147, 223, 172, 131, 100, 187, 96, 217, 132, 215, 110, 89, 160, 194, 34, 123, 18, 128, 80, 114, 37, 53, 233, 253, 163, 255, 49, 62, 68, 124, 254, 17, 50, 36, 88, 72, 180, 54, 247, 134, 62, 101, 32, 233, 199, 144, 157, 95, 29, 43, 172, 73, 24, 236, 38, 103, 147, 26, 210, 149, 82, 236, 204, 164, 23, 249, 235, 40, 130, 212, 44, 105, 83, 116, 210, 114, 22, 235, 64, 243, 41, 101, 103, 30, 82, 136, 67, 160, 100, 205, 47, 241, 197, 82, 7, 37, 207, 46, 87, 7, 107, 145, 23, 250, 252, 139, 168, 50, 199, 248, 135, 54, 142, 3, 182, 80, 107, 207, 28, 170, 153, 179, 155, 170, 185, 49, 84, 25, 225, 2, 92, 116, 244, 68, 84, 136, 21, 137, 106, 95, 118, 5, 95, 135, 87, 217, 202, 150, 70, 9, 229, 14, 141, 225, 96, 190, 220, 103, 170, 105, 215, 137, 92, 139, 141, 175, 140, 159, 150, 87, 133, 30, 240, 127, 2, 210, 254, 165, 189, 140, 148, 251, 116, 224, 196, 17, 92, 96, 130, 157, 1, 138, 139, 68, 91, 63, 13, 18, 98, 43, 234, 19, 38, 85, 255, 89, 183, 189, 101, 46, 38, 186, 197, 47, 31, 79, 204, 45, 214, 80, 124, 117, 179, 197, 29, 224, 189, 125, 15, 125, 65, 63, 231, 112, 161, 250, 178, 4, 72, 85, 74, 217, 70, 37, 221, 45, 96, 213, 61, 203, 198, 132, 253, 85, 122, 31, 127, 225, 155, 240, 205, 93, 15, 25, 157, 244, 3, 126, 75, 219, 200, 99, 23, 237, 152, 72, 251, 107, 61, 156, 129, 3, 192, 204, 158, 1, 180, 107, 126, 108, 2, 245, 57, 237, 229, 19, 147, 23, 246, 212, 211, 118, 223, 14, 126, 214, 223, 152, 60, 232, 142, 108, 66, 112, 236, 113, 83, 62, 136, 13, 139, 224, 182, 78, 67, 68, 232, 42, 69, 233, 166, 182, 23, 95, 200, 62, 196, 127, 211, 178, 211, 215, 30, 98, 100, 112, 255, 224, 139, 106, 207, 108, 47, 106, 190, 248, 49, 81, 245, 2, 19, 38, 79, 80, 99, 16, 3, 173, 152, 205, 86, 188, 148, 127, 130, 156, 51, 137, 129, 111, 6, 86, 100, 175, 163, 119, 16, 187, 66, 73, 47, 116, 51, 111, 179, 230, 50, 247, 245, 197, 56, 45, 89, 148, 177, 84, 129, 74, 37, 114, 197, 88, 150, 218, 87, 190, 10, 180, 167, 105, 165, 196, 95, 58, 209, 243, 214, 198, 125, 162, 175, 163, 204, 187, 196, 186, 151, 71, 221, 44, 129, 49, 238, 21, 3, 59, 75, 33, 0, 131, 62, 78, 64, 66, 158, 220, 240, 239, 20, 72, 191, 75, 228, 53, 171, 222, 209, 222, 254, 130, 219, 171, 118, 51, 39, 2, 230, 11, 189, 214, 222, 133, 19, 172, 214, 192, 188, 156, 109, 9, 26, 247, 123, 201, 119, 230, 124, 124, 213, 50, 74, 78, 107, 27, 5, 11, 106, 178, 249, 14, 169, 228, 31, 41, 112, 62, 169, 141, 153, 14, 145, 137, 216, 52, 28, 51, 143, 10, 44, 244, 137, 94, 72, 13, 148, 231, 211, 41, 176, 251, 221, 183, 111, 197, 209, 224, 145, 8, 215, 107, 225, 1, 68, 93, 230, 141, 49, 97, 73, 44, 151, 116, 42, 177, 175, 147, 134, 243, 252, 118, 246, 137, 62, 8, 127, 131, 88, 79, 23, 211, 120, 90, 193, 238, 131, 150, 100, 33, 179, 23, 2, 137, 228, 89, 161, 144, 81, 206, 221, 5, 198, 158, 122, 202, 226, 84, 124, 148, 166, 223, 94, 254, 49, 109, 212, 174, 211, 61, 176, 141, 62, 191, 240, 18, 118, 239, 223, 64, 209, 248, 47, 53, 44, 63, 34, 236, 169, 28, 147, 72, 152, 39, 28, 176, 165, 251, 77, 56, 51, 149, 42, 182, 124, 113, 30, 30, 27, 189, 174, 139, 14, 45, 114, 57, 46, 187, 230, 86, 186, 121, 92, 45, 86, 40, 155, 2, 229, 178, 139, 200, 34, 165, 58, 102, 101, 216, 94, 187, 7, 113, 18, 233, 18, 155, 185, 162, 17, 232, 49, 191, 11, 165, 3, 169, 126, 237, 33, 162, 50, 88, 148, 249, 67, 195, 3, 224, 234, 97, 176, 185, 15, 93, 75, 95, 92, 238, 23, 2, 203, 57, 213, 98, 8, 153, 151, 130, 51, 67, 33, 105, 201, 97, 80, 77, 137, 169, 249, 195, 123, 36, 255, 32, 77, 202, 186, 7, 149, 113, 75, 84, 88, 19, 130, 201, 93, 140, 114, 108, 177, 214, 82, 153, 170, 246, 145, 56, 28, 183, 171, 124, 92, 166, 252, 68, 168, 206, 4, 239, 113, 116, 138, 184, 207, 166, 8, 168, 26, 190, 26, 225, 166, 11, 207, 139, 106, 20, 231, 250, 119, 33, 207, 124, 204, 86, 19, 52, 189, 82, 60, 77, 26, 35, 43, 170, 249, 225, 72, 26, 213, 73, 173, 171, 109, 210, 76, 205, 70, 151, 37, 209, 130, 155, 183, 135, 26, 75, 20, 184, 107, 219, 198, 0, 250, 22, 164, 77, 135, 113, 183, 154, 208, 228, 11, 62, 138, 38, 137, 133, 209, 212, 18, 132, 203, 227, 251, 196, 36, 131, 228, 147, 56, 189, 180, 224, 210, 166, 8, 2, 131, 12, 233, 210, 80, 11, 233, 17, 6, 241, 118, 169, 170, 103, 129, 72, 224, 29, 113, 154, 203, 41, 149, 231, 24, 57, 191, 255, 75, 248, 185, 170, 245, 154, 31, 82, 171, 52, 7, 105, 196, 228, 74, 89, 175, 136, 28, 131, 37, 35, 146, 244, 2, 49, 147, 249, 22, 207, 194, 168, 81, 172, 136, 228, 75, 146, 85, 220, 194, 186, 83, 12, 126, 131, 96, 108, 21, 252, 119, 79, 11, 245, 46, 108, 105, 203, 218, 9, 86, 107, 129, 169, 244, 70, 229, 81, 3, 106, 98, 99, 207, 28, 145, 38, 112, 100, 90, 204, 159, 209, 106, 199, 71, 59, 208, 95, 39, 81, 55, 172, 204, 6, 165, 13, 113, 68, 79, 7, 18, 217, 44, 36, 242, 125, 75, 199, 66, 27, 6, 49, 61, 239, 40, 244, 172, 207, 47, 227, 47, 47, 141, 192, 204, 248, 224, 68, 184, 224, 62, 9, 239, 255, 219, 165, 143, 174, 232, 55, 87, 150, 63, 49, 251, 53, 205, 35, 154, 59, 7, 166, 59, 80, 0, 178, 177, 149, 191, 45, 104, 8, 39, 59, 59, 167, 251, 15, 187, 32, 159, 96, 252, 55, 204, 231, 4, 20, 168, 107, 150, 17, 165, 148, 188, 35, 22, 237, 93, 35, 200, 87, 252, 52, 8, 50, 0, 158, 112, 67, 11, 101, 78, 234, 213, 61, 163, 40, 14, 249, 77, 130, 88, 115, 145, 182, 117, 26, 183, 120, 121, 66, 10, 166, 100, 221, 148, 142, 119, 165, 49, 29, 183, 214, 25, 121, 126, 184, 224, 66, 13, 166, 122, 124, 98, 92, 86, 143, 162, 66, 176, 161, 156, 72, 189, 177, 50, 79, 240, 5, 245, 46, 167, 124, 205, 209, 139, 4, 63, 0, 142, 73, 145, 160, 206, 189, 186, 201, 167, 121, 220, 111, 228, 185, 193, 61, 173, 227, 254, 138, 173, 133, 200, 137, 177, 250, 99, 41, 122, 254, 189, 235, 139, 251, 255, 92, 156, 171, 217, 187, 54, 31, 83, 23, 225, 219, 122, 45, 252, 64, 177, 35, 118, 205, 48, 27, 64, 213, 119, 138, 182, 177, 27, 118, 30, 47, 245, 186, 71, 63, 35, 189, 129, 21, 188, 157, 247, 236, 184, 14, 36, 210, 188, 175, 75, 254, 33, 83, 236, 147, 175, 46, 35, 84, 219, 13, 240, 189, 114, 104, 253, 53, 49, 10, 127, 198, 187, 232, 247, 44, 255, 159, 2, 163, 98, 80, 79, 112, 45, 33, 88, 5, 102, 252, 193, 115, 125, 133, 187, 141, 172, 79, 58, 108, 162, 166, 36, 91, 50, 74, 42, 130, 29, 78, 90, 142, 197, 130, 222, 231, 233, 99, 100, 42, 181, 167, 224, 240, 237, 130, 243, 240, 78, 255, 118, 183, 107, 0, 206, 74, 82, 3, 249, 94, 72, 170, 197, 248, 170, 90, 217, 90, 245, 127, 186, 66, 128, 196, 108, 115, 170, 255, 238, 47, 7, 8, 181, 224, 10, 73, 18, 238, 52, 127, 209, 157, 213, 45, 209, 103, 209, 93, 45, 76, 16, 203, 8, 221, 112, 196, 13, 240, 217, 56, 14, 95, 87, 195, 160, 249, 58, 112, 85, 89, 229, 48, 232, 19, 7, 155, 163, 171, 102, 254, 192, 240, 208, 153, 71, 251, 110, 204, 80, 233, 201, 62, 170, 59, 151, 253, 1, 93, 20, 55, 119, 135, 83, 18, 190, 157, 219, 77, 77, 94, 115, 185, 232, 162, 172, 11, 194, 2, 121, 231, 26, 76, 184, 242, 62, 132, 196, 44, 75, 160, 234, 66, 115, 91, 162, 199, 19, 116, 211, 27, 87, 215, 2, 205, 73, 175, 34, 65, 20, 215, 139, 114, 21, 104, 22, 241, 51, 90, 35, 9, 75, 211, 217, 205, 219, 155, 173, 20, 117, 159, 98, 30, 104, 97, 13, 199, 17, 56, 243, 44, 234, 210, 175, 178, 35, 249, 2, 172, 184, 113, 22, 12, 0, 56, 228, 199, 168, 7, 194, 128, 136, 78, 161, 97, 37, 228, 201, 33, 90, 107, 3, 86, 78, 98, 205, 178, 120, 254, 57, 5, 78, 183, 130, 207, 225, 197, 230, 202, 3, 155, 132, 9, 36, 227, 136, 0, 185, 218, 93, 217, 152, 172, 87, 131, 65, 87, 237, 86, 91, 192, 109, 19, 48, 151, 115, 65, 217, 58, 194, 195, 173, 97, 70, 119, 169, 200, 63, 34, 214, 126, 146, 19, 149, 224, 55, 65, 63, 68, 66, 72, 119, 164, 222, 188, 56, 203, 123, 193, 46, 128, 195, 64, 137, 211, 35, 133, 204, 77, 214, 105, 78, 230, 219, 59, 26, 198, 75, 167, 65, 110, 24, 155, 81, 121, 100, 185, 200, 22, 137, 216, 108, 99, 200, 85, 170, 70, 233, 62, 44, 249, 201, 203, 135, 231, 140, 70, 220, 194, 109, 191, 204, 21, 185, 21, 149, 184, 134, 41, 206, 9, 2, 72, 242, 55, 236, 95, 23, 15, 136, 204, 116, 62, 223, 87, 111, 115, 4, 210, 169, 78, 136, 76, 211, 133, 113, 202, 5, 183, 190, 194, 54, 50, 49, 15, 100, 118, 33, 90, 24, 9, 106, 147, 215, 197, 0, 92, 6, 255, 87, 55, 120, 203, 232, 107, 38, 144, 150, 208, 241, 32, 176, 62, 5, 187, 227, 145, 67, 22, 33, 217, 24, 6, 171, 218, 85, 16, 203, 63, 10, 163, 237, 34, 220, 170, 216, 15, 151, 20, 182, 208, 165, 128, 246, 149, 182, 156, 162, 118, 179, 92, 230, 138, 254, 112, 105, 168, 221, 29, 242, 16, 140, 21, 78, 111, 53, 28, 44, 19, 228, 199, 112, 182, 227, 60, 58, 137, 62, 93, 58, 5, 94, 78, 226, 93, 192, 177, 79, 57, 149, 138, 88, 81, 92, 34, 185, 210, 31, 66, 27, 225, 192, 39, 74, 242, 26, 139, 193, 77, 109, 76, 117, 205, 217, 47, 95, 10, 230, 84, 200, 16, 135, 25, 235, 191, 65, 118, 146, 28, 184, 26, 27, 41, 162, 15, 47, 184, 224, 123, 175, 98, 122, 250, 240, 38, 23, 249, 113, 173, 227, 210, 115, 33, 96, 208, 202, 167, 84, 88, 194, 150, 65, 148, 40, 132, 102, 73, 164, 60, 230, 58, 9, 130, 167, 61, 134, 50, 203, 133, 69, 118, 87, 231, 50, 53, 150, 215, 217, 246, 123, 108, 192, 217, 243, 103, 183, 126, 136, 214, 139, 151, 231, 1, 147, 66, 67, 123, 15, 253, 232, 162, 188, 81, 251, 211, 174, 185, 34, 62, 181, 100, 115, 119, 246, 231, 12, 90, 90, 186, 88, 51, 57, 106, 202, 137, 18, 93, 205, 207, 89, 213, 228, 154, 176, 80, 218, 86, 179, 4, 64, 162, 223, 28, 75, 185, 12, 174, 8, 22, 41, 6, 182, 19, 158, 124, 99, 226, 235, 43, 109, 252, 57, 213, 137, 14, 9, 54, 13, 249, 188, 13, 255, 231, 84, 29, 135, 141, 1, 164, 129, 146, 110, 191, 242, 184, 160, 253, 180, 167, 90, 186, 15, 77, 2, 64, 155, 104, 13, 10, 237, 103, 245, 158, 206, 142, 89, 97, 235, 90, 24, 15, 124, 4, 21, 141, 194, 230, 108, 91, 94, 188, 20, 113, 80, 206, 252, 234, 51, 113, 178, 186, 60, 144, 19, 248, 212, 78, 127, 22, 138, 185, 141, 48, 202, 54, 102, 101, 157, 158, 165, 177, 176, 74, 133, 64, 62, 168, 192, 234, 83, 6, 77, 31, 179, 211, 82, 226, 3, 211, 247, 216, 93, 108, 140, 195, 215, 57, 126, 57, 106, 197, 230, 61, 204, 231, 31, 191, 94, 66, 13, 19, 43, 176, 129, 156, 50, 20, 248, 71, 196, 182, 64, 159, 106, 254, 11, 94, 119, 113, 15, 101, 47, 251, 77, 234, 140, 228, 134, 207, 255, 65, 120, 62, 191, 93, 169, 243, 100, 255, 54, 240, 27, 204, 103, 142, 68, 108, 99, 109, 16, 73, 210, 244, 254, 28, 254, 224, 85, 109, 201, 251, 68, 116, 19, 116, 32, 78, 134, 241, 111, 61, 79, 138, 171, 102, 41, 23, 50, 208, 30, 51, 132, 171, 236, 132, 255, 34, 31, 3, 174, 23, 248, 33, 195, 146, 118, 107, 43, 166, 179, 210, 111, 244, 43, 197, 40, 52, 50, 190, 83, 88, 54, 153, 24, 119, 165, 75, 229, 215, 108, 118, 33, 234, 92, 235, 87, 189, 126, 6, 98, 81, 95, 42, 223, 217, 127, 92, 123, 216, 142, 148, 48, 117, 151, 146, 91, 156, 45, 69, 231, 69, 167, 46, 70, 156, 112, 222, 98, 191, 232, 191, 203, 213, 208, 125, 238, 82, 188, 2, 164, 145, 35, 74, 119, 181, 196, 110, 24, 15, 239, 0, 189, 162, 60, 192, 74, 142, 222, 21, 175, 55, 216, 134, 246, 34, 202, 80, 186, 42, 1, 55, 45, 165, 156, 160, 99, 29, 3, 66, 47, 172, 187, 31, 80, 128, 169, 211, 235, 58, 198, 167, 81, 197, 177, 146, 153, 196, 233, 3, 67, 231, 216, 30, 150, 104, 47, 255, 60, 120, 0, 35, 247, 183, 26, 135, 14, 210, 107, 226, 59, 228, 233, 6, 188, 16, 223, 150, 222, 217, 69, 46, 30, 110, 88, 76, 200, 58, 64, 123, 9, 85, 10, 100, 94, 11, 26, 20, 78, 48, 218, 71, 68, 92, 178, 122, 17, 39, 46, 78, 167, 58, 43, 116, 88, 66, 165, 4, 182, 203, 208, 182, 63, 96, 80, 88, 215, 248, 103, 217, 198, 3, 62, 171, 204, 34, 105, 131, 72, 233, 228, 188, 55, 236, 101, 209, 129, 44, 230, 23, 13, 129, 145, 150, 30, 60, 222, 228, 228, 77, 203, 80, 247, 99, 175, 170, 241, 108, 177, 144, 67, 190, 176, 2, 149, 85, 104, 98, 217, 94, 184, 80, 221, 19, 121, 26, 50, 202, 207, 165, 31, 152, 17, 8, 43, 61, 32, 59, 246, 216, 209, 24, 207, 220, 144, 124, 94, 41, 41, 252, 230, 27, 108, 158, 163, 87, 93, 190, 58, 31, 187, 149, 166, 251, 228, 158, 166, 111, 135, 158, 91, 81, 26, 208, 202, 44, 4, 78, 249, 148, 232, 8, 132, 4, 72, 203, 180, 233, 38, 94, 91, 25, 9, 149, 195, 146, 34, 229, 134, 184, 149, 86, 119, 10, 139, 53, 153, 63, 181, 206, 0, 52, 205, 63, 21, 139, 175, 197, 43, 133, 254, 80, 154, 248, 104, 164, 7, 195, 251, 161, 12, 128, 108, 122, 109, 143, 186, 227, 75, 40, 233, 111, 105, 62, 50, 104, 33, 253, 89, 24, 198, 232, 124, 166, 216, 144, 159, 34, 38, 29, 33, 139, 96, 250, 83, 54, 165, 239, 178, 198, 255, 244, 70, 167, 164, 140, 129, 103, 217, 23, 24, 96, 89, 96, 88, 44, 117, 190, 242, 228, 180, 3, 188, 123, 21, 22, 108, 170, 154, 11, 227, 224, 166, 119, 218, 47, 28, 156, 89, 114, 89, 197, 251, 183, 3, 230, 63, 43, 165, 24, 248, 227, 98, 1, 55, 139, 232, 212, 228, 114, 41, 162, 93, 200, 247, 216, 243, 233, 254, 212, 71, 114, 141, 37, 207, 146, 228, 52, 146, 174, 10, 161, 214, 185, 142, 191, 106, 153, 145, 224, 40, 110, 135, 18, 117, 50, 91, 150, 249, 171, 24, 32, 165, 137, 173, 202, 164, 63, 158, 222, 137, 130, 81, 82, 70, 235, 214, 15, 183, 184, 77, 161, 116, 11, 209, 112, 160, 6, 43, 33, 197, 223, 8, 116, 61, 203, 87, 189, 146, 46, 9, 195, 103, 240, 120, 68, 48, 141, 18, 181, 25, 223, 236, 244, 75, 23, 244, 156, 95, 171, 203, 120, 133, 153, 50, 81, 82, 207, 132, 141, 136, 37, 21, 128, 106, 77, 95, 119, 156, 147, 50, 153, 70, 82, 178, 155, 52, 36, 249, 116, 245, 224, 234, 182, 13, 61, 177, 32, 85, 85, 63, 115, 89, 90, 60, 221, 212, 79, 175, 167, 206, 159, 106, 104, 125, 16, 159, 33, 106, 75, 159, 18, 198, 154, 175, 40, 199, 199, 29, 171, 244, 196, 31, 149, 148, 110, 150, 208, 240, 225, 161, 94, 136, 129, 70, 8, 183, 223, 10, 132, 164, 86, 183, 125, 228, 26, 10, 171, 199, 23, 106, 32, 171, 40, 246, 19, 213, 70, 172, 185, 25, 133, 255, 18, 162, 233, 249, 29, 253, 144, 212, 249, 155, 193, 162, 169, 192, 3, 91, 72, 197, 103, 243, 171, 165, 57, 152, 128, 5, 48, 154, 208, 14, 203, 160, 23, 210, 13, 19, 117, 224, 78, 184, 92, 99, 142, 92, 134, 7, 88, 122, 124, 46, 105, 28, 11, 92, 17, 66, 211, 52, 219, 117, 77, 239, 82, 161, 223, 247, 35, 71, 252, 61, 211, 79, 191, 143, 177, 218, 95, 216, 199, 75, 170, 56, 77, 151, 144, 11, 108, 3, 211, 153, 242, 187, 115, 28, 168, 130, 120, 82, 24, 198, 254, 126, 165, 40, 64, 65, 110, 222, 230, 17, 70, 63, 144, 86, 124, 195, 92, 38, 226, 123, 172, 123, 7, 253, 186, 241, 83, 1, 75, 188, 12, 153, 79, 201, 102, 36, 134, 156, 250, 64, 249, 90, 150, 219, 253, 163, 67, 169, 39, 159, 191, 131, 190, 178, 232, 152, 179, 110, 55, 166, 232, 80, 164, 106, 73, 199, 151, 121, 117, 108, 173, 219, 18, 73, 125, 155, 22, 2, 27, 195, 141, 103, 30, 36, 235, 37, 44, 84, 19, 117, 106, 176, 250, 252, 88, 48, 212, 10, 176, 54, 218, 195, 65, 84, 26, 36, 181, 56, 238, 214, 255, 247, 141, 208, 113, 210, 197, 56, 120, 233, 241, 37, 173, 139, 53, 215, 169, 94, 168, 137, 172, 218, 19, 199, 187, 96, 141, 63, 188, 236, 203, 214, 21, 244, 86, 5, 110, 147, 14, 247, 63, 65, 183, 108, 100, 121, 220, 157, 188, 11, 214, 51, 238, 220, 77, 28, 72, 232, 131, 250, 150, 207, 22, 254, 18, 119, 174, 167, 241, 159, 233, 28, 13, 195, 210, 110, 22, 154, 28, 31, 190, 3, 251, 20, 118, 83, 147, 93, 252, 155, 129, 234, 244, 152, 145, 98, 202, 119, 71, 133, 55, 96, 159, 19, 18, 36, 188, 244, 96, 177, 73, 149, 47, 103, 156, 2, 251, 78, 44, 84, 234, 212, 218, 51, 202, 249, 233, 39, 224, 148, 181, 71, 255, 56, 126, 65, 123, 183, 161, 34, 47, 209, 166, 226, 227, 60, 97, 89, 57, 65, 93, 180, 40, 19, 107, 168, 18, 97, 195, 57, 37, 7, 11, 200, 143, 79, 21, 162, 193, 182, 189, 118, 47, 107, 54, 143, 208, 142, 164, 235, 30, 225, 119, 166, 125, 173, 254, 230, 7, 24, 162, 167, 176, 44, 39, 1, 214, 95, 193, 93, 178, 88, 58, 199, 235, 0, 195, 195, 168, 67, 120, 162, 161, 67, 157, 53, 161, 20, 97, 185, 156, 133, 240, 101, 186, 111, 42, 79, 93, 207, 86, 109, 111, 69, 50, 144, 163, 2, 4, 99, 49, 136, 130, 67, 93, 61, 224, 239, 95, 159, 150, 93, 114, 35, 32, 53, 241, 144, 133, 231, 250, 0, 91, 198, 250, 84, 158, 147, 223, 191, 203, 15, 59, 247, 155, 48, 196, 94, 137, 71, 50, 197, 207, 252, 25, 171, 152, 220, 42, 223, 29, 40, 226, 180, 232, 252, 163, 7, 220, 169, 145, 4, 255, 116, 233, 204, 27, 0, 45, 6, 62, 225, 7, 88, 73, 18, 18, 223, 36, 173, 14, 20, 190, 212, 52, 220, 214, 240, 3, 147, 112, 38, 166, 249, 216, 29, 83, 30, 84, 161, 14, 242, 251, 63, 8, 222, 58, 10, 154, 12, 210, 251, 139, 198, 95, 108, 183, 228, 83, 228, 161, 20, 59, 241, 233, 122, 228, 151, 1, 37, 164, 250, 144, 67, 27, 253, 133, 236, 113, 164, 111, 121, 231, 101, 66, 132, 64, 229, 146, 72, 191, 110, 9, 48, 32, 254, 130, 84, 220, 232, 98, 129, 126, 97, 61, 73, 181, 115, 103, 78, 52, 195, 130, 94, 97, 78, 64, 70, 80, 204, 43, 116, 114, 128, 37, 86, 101, 214, 190, 138, 17, 197, 158, 7, 41, 76, 247, 44, 144, 175, 171, 156, 14, 49, 255, 248, 122, 160, 30, 250, 174, 66, 107, 28, 122, 6, 229, 193, 51, 242, 186, 186, 141, 56, 47, 151, 196, 191, 236, 44, 253, 18, 164, 250, 95, 136, 142, 200, 208, 153, 176, 116, 27, 134, 216, 10, 128, 54, 234, 200, 166, 137, 89, 247, 192, 74, 40, 41, 124, 242, 5, 43, 38, 137, 70, 33, 109, 245, 172, 229, 20, 100, 204, 121, 2, 209, 116, 10, 7, 15, 24, 49, 154, 13, 106, 58, 235, 162, 244, 150, 228, 125, 131, 34, 25, 231, 18, 86, 100, 2, 22, 51, 108, 127, 127, 49, 207, 31, 195, 86, 14, 57, 27, 98, 250, 154, 45, 118, 192, 52, 132, 166, 53, 224, 6, 137, 185, 206, 44, 180, 251, 140, 14, 94, 8, 214, 143, 60, 169, 9, 34, 31, 137, 226, 17, 38, 124, 1, 63, 40, 224, 69, 3, 189, 84, 139, 12, 242, 19, 244, 40, 8, 67, 129, 249, 236, 76, 45, 150, 227, 187, 142, 140, 244, 169, 127, 130, 157, 77, 214, 53, 100, 222, 213, 3, 152, 205, 46, 251, 29, 231, 204, 253, 192, 106, 30, 114, 143, 184, 62, 236, 95, 203, 175, 84, 146, 79, 196, 31, 2, 95, 97, 90, 244, 176, 179, 230, 134, 189, 129, 31, 169, 3, 100, 240, 66, 166, 140, 160, 148, 50, 120, 56, 237, 200, 76, 22, 18, 70, 12, 196, 133, 216, 142, 174, 2, 25, 58, 179, 227, 50, 22, 124, 135, 25, 109, 39, 247, 68, 36, 73, 57, 40, 27, 136, 65, 161, 104, 220, 6, 178, 180, 125, 68, 247, 234, 177, 195, 139, 15, 214, 125, 107, 93, 207, 42, 168, 47, 31, 232, 97, 137, 76, 8, 7, 73, 179, 111, 25, 103, 19, 214, 169, 130, 234, 70, 158, 142, 234, 233, 11, 104, 86, 116, 178, 92, 71, 125, 222, 71, 207, 13, 59, 112, 97, 81, 150, 65, 231, 31, 90, 9, 239, 148, 254, 23, 0, 55, 88, 136, 16, 156, 226, 55, 146, 48, 35, 207, 148, 45, 175, 82, 114, 77, 13, 173, 26, 120, 16, 36, 178, 86, 85, 85, 85, 85, 85, 85, 5, 86, 85, 85, 85, 85, 85, 85, 5, 86, 85, 85, 85, 85, 85, 85, 5, 86, 85, 85, 85, 85, 85, 85, 5, 29, 221, 108, 79, 145, 244, 69, 37, 195, 245, 40, 92, 143, 194, 245, 40, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 75, 89, 134, 56, 214, 197, 109, 52, 29, 221, 108, 79, 145, 244, 69, 37, 195, 245, 40, 92, 143, 194, 245, 40, 29, 221, 108, 79, 145, 244, 69, 37, 25, 134, 97, 24, 134, 97, 24, 134, 29, 221, 108, 79, 145, 244, 69, 37, 11, 215, 163, 112, 61, 10, 215, 163, 29, 221, 108, 79, 145, 244, 69, 37, 128, 128, 128, 128, 128, 128, 128, 128, 45, 127, 149, 76, 45, 244, 81, 88, 147, 36, 73, 146, 36, 73, 146, 36, 86, 85, 85, 85, 85, 85, 85, 5, 45, 127, 149, 76, 45, 244, 81, 88, 128, 128, 128, 128, 128, 128, 128, 128, 29, 221, 108, 79, 145, 244, 69, 37, 86, 85, 85, 85, 85, 85, 85, 85, 29, 221, 108, 79, 145, 244, 69, 37, 25, 134, 97, 24, 134, 97, 24, 134, 201, 66, 22, 178, 144, 133, 44, 100, 29, 221, 108, 79, 145, 244, 69, 37, 63, 0, 206, 215, 7, 192, 249, 250, 29, 221, 108, 79, 145, 244, 69, 37, 195, 0, 205, 88, 194, 34, 231, 129, 113, 250, 253, 231, 130, 210, 99, 129, 37, 82, 6, 207, 112, 63, 80, 131, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 11, 215, 163, 112, 61, 10, 215, 163, 75, 89, 134, 56, 214, 197, 109, 52, 165, 128, 102, 16, 64, 10, 104, 6, 67, 120, 180, 113, 196, 90, 124, 10, 0, 160, 163, 155, 237, 41, 146, 190, 125, 63, 53, 94, 186, 73, 12, 2, 243, 187, 108, 107, 170, 43, 62, 5, 225, 229, 20, 188, 156, 130, 151, 83, 195, 245, 40, 92, 143, 194, 245, 40, 219, 52, 182, 215, 130, 222, 27, 67, 143, 227, 56, 142, 227, 56, 142, 227, 163, 147, 192, 124, 209, 197, 55, 134, 229, 174, 159, 45, 86, 134, 111, 68, 37, 82, 6, 207, 112, 63, 80, 131, 25, 134, 97, 24, 134, 97, 24, 134, 103, 102, 102, 102, 102, 102, 102, 102, 197, 78, 236, 196, 78, 236, 196, 78, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128, 115, 25, 54, 232, 241, 244, 152, 149, 210, 176, 74, 219, 62, 37, 15, 118, 211, 176, 74, 219, 62, 37, 15, 118, 0, 0, 24, 118, 251, 220, 56, 117, 253, 206, 97, 132, 17, 119, 204, 171, 87, 120, 19, 177, 47, 101, 165, 57, 129, 205, 149, 80, 195, 77, 66, 11, 51, 34, 212, 91, 2, 51, 47, 35, 191, 213, 237, 189, 206, 254, 230, 219, 219, 52, 182, 215, 130, 222, 27, 67, 93, 143, 194, 245, 40, 92, 143, 2, 75, 89, 134, 56, 214, 197, 109, 52, 195, 245, 40, 92, 143, 194, 245, 40, 185, 30, 133, 235, 81, 184, 30, 5, 241, 222, 188, 154, 120, 86, 52, 18]
// Instructions = 66228
// Code size = 205956 bytes

      :                          @0
     0: 28 12 f4 02 00           jump @13280
      :                          @1
     5: 28 ed f6 02 00           jump @13339
      :                          @2
    10: 28 45 f9 02              jump @13388
      :                          @3
    14: 95 11 f0                 sp = sp + 0xfffffffffffffff0
    17: 7b 15 08                 u64 [sp + 0x8] = s0
    20: 64 72                    t0 = a0
    22: 82 78 10                 a1 = u64 [a0 + 0x10]
    25: 82 74                    t2 = u64 [a0]
    27: 51 08 1f                 jump @8 if a1 == 0
      :                          @4
    30: 82 29 18                 a2 = u64 [t0 + 0x18]
    33: aa 98 68                 jump @17 if a1 == a2
      :                          @5
    36: 33 07                    a0 = 0
    38: c9 89 09                 a2 = a2 - a1
    41: 01                       fallthrough
      :                          @6
    42: 7c 8a                    a3 = u8 [a1]
    44: c8 a7 07                 a0 = a0 + a3
    47: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    50: 95 88 01                 a1 = a1 + 0x1
    53: 52 09 f5                 jump @6 if a2 != 0
      :                          @7
    56: 28 05                    jump @9
      :                          @8
    58: 33 07                    a0 = 0
    60: 01                       fallthrough
      :                          @9
    61: 82 2a 20                 a3 = u64 [t0 + 0x20]
    64: 51 04 51                 jump @18 if t2 == 0
      :                          @10
    67: 82 28 08                 a1 = u64 [t0 + 0x8]
    70: aa 84 4b                 jump @18 if t2 == a1
      :                          @11
    73: 33 0b                    a4 = 0
    75: 14 09 ab aa aa aa aa aa aa aa a2 = 0xaaaaaaaaaaaaaaab
    85: c9 48 08                 a1 = a1 - t2
    88: d6 98 0c                 a5 = a1 mulhu a2
    91: 98 cc 04                 a5 = a5 >> 0x4
    94: 33 03 18                 t1 = 0x18
    97: 28 08                    jump @13
      :                          @12
    99: 95 bb 01                 a4 = a4 + 0x1
   102: aa cb 2b                 jump @18 if a4 == a5
      :                          @13
   105: ca 3b 09                 a2 = a4 * t1
   108: c8 49 09                 a2 = a2 + t2
   111: 82 98 10                 a1 = u64 [a2 + 0x10]
   114: 51 08 f1                 jump @12 if a1 == 0
      :                          @14
   117: 82 99 08                 a2 = u64 [a2 + 0x8]
   120: 01                       fallthrough
      :                          @15
   121: 7c 95                    s0 = u8 [a2]
   123: c8 57 07                 a0 = a0 + s0
   126: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
   129: 95 99 01                 a2 = a2 + 0x1
   132: 52 08 f5                 jump @15 if a1 != 0
      :                          @16
   135: 28 dc                    jump @12
      :                          @17
   137: 33 07                    a0 = 0
   139: 82 2a 20                 a3 = u64 [t0 + 0x20]
   142: 52 04 b5                 jump @10 if t2 != 0
      :                          @18
   145: 51 0a 1b                 jump @22 if a3 == 0
      :                          @19
   148: 82 28 28                 a1 = u64 [t0 + 0x28]
   151: aa 8a 15                 jump @22 if a3 == a1
      :                          @20
   154: c9 a8 08                 a1 = a1 - a3
   157: 01                       fallthrough
      :                          @21
   158: 7c a9                    a2 = u8 [a3]
   160: c8 97 07                 a0 = a0 + a2
   163: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
   166: 95 aa 01                 a3 = a3 + 0x1
   169: 52 08 f5                 jump @21 if a1 != 0
      :                          @22
   172: 82 15 08                 s0 = u64 [sp + 0x8]
   175: 95 11 10                 sp = sp + 0x10
   178: 32 00                    ret
      :                          @23
   180: 95 11 e0                 sp = sp + 0xffffffffffffffe0
   183: 7b 10 18                 u64 [sp + 0x18] = ra
   186: 7b 15 10                 u64 [sp + 0x10] = s0
   189: 7b 16 08                 u64 [sp + 0x8] = s1
   192: 64 72                    t0 = a0
   194: 82 79 10                 a2 = u64 [a0 + 0x10]
   197: 82 74                    t2 = u64 [a0]
   199: 51 09 29                 jump @28 if a2 == 0
      :                          @24
   202: 82 2a 18                 a3 = u64 [t0 + 0x18]
   205: aa a9 7c                 jump @37 if a2 == a3
      :                          @25
   208: 33 07                    a0 = 0
   210: c9 9a 0a                 a3 = a3 - a2
   213: 84 8b ff 00              a4 = a1 & 0xff
   217: 01                       fallthrough
      :                          @26
   218: 7c 9c                    a5 = u8 [a2]
   220: d3 bc 0c                 a5 = a5 ^ a4
   223: 88 cc 01                 a5 = a5 <u 0x1
   226: c8 c7 07                 a0 = a0 + a5
   229: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
   232: 95 99 01                 a2 = a2 + 0x1
   235: 52 0a ef                 jump @26 if a3 != 0
      :                          @27
   238: 28 05                    jump @29
      :                          @28
   240: 33 07                    a0 = 0
   242: 01                       fallthrough
      :                          @29
   243: 82 2b 20                 a4 = u64 [t0 + 0x20]
   246: 51 04 5b                 jump @38 if t2 == 0
      :                          @30
   249: 82 29 08                 a2 = u64 [t0 + 0x8]
   252: aa 94 55                 jump @38 if t2 == a2
      :                          @31
   255: 33 0c                    a5 = 0
   257: c9 49 09                 a2 = a2 - t2
   260: 14 0a ab aa aa aa aa aa aa aa a3 = 0xaaaaaaaaaaaaaaab
   270: d6 a9 09                 a2 = a2 mulhu a3
   273: 98 90 04                 ra = a2 >> 0x4
   276: 33 03 18                 t1 = 0x18
   279: 84 8a ff 00              a3 = a1 & 0xff
   283: 28 08                    jump @33
      :                          @32
   285: 95 cc 01                 a5 = a5 + 0x1
   288: aa 0c 31                 jump @38 if a5 == ra
      :                          @33
   291: ca 3c 06                 s1 = a5 * t1
   294: c8 46 06                 s1 = s1 + t2
   297: 82 65 10                 s0 = u64 [s1 + 0x10]
   300: 51 05 f1                 jump @32 if s0 == 0
      :                          @34
   303: 82 66 08                 s1 = u64 [s1 + 0x8]
   306: 01                       fallthrough
      :                          @35
   307: 7c 69                    a2 = u8 [s1]
   309: d3 a9 09                 a2 = a2 ^ a3
   312: 88 99 01                 a2 = a2 <u 0x1
   315: c8 97 07                 a0 = a0 + a2
   318: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   321: 95 66 01                 s1 = s1 + 0x1
   324: 52 05 ef                 jump @35 if s0 != 0
      :                          @36
   327: 28 d6                    jump @32
      :                          @37
   329: 33 07                    a0 = 0
   331: 82 2b 20                 a4 = u64 [t0 + 0x20]
   334: 52 04 ab                 jump @30 if t2 != 0
      :                          @38
   337: 51 0b 25                 jump @42 if a4 == 0
      :                          @39
   340: 82 29 28                 a2 = u64 [t0 + 0x28]
   343: aa 9b 1f                 jump @42 if a4 == a2
      :                          @40
   346: c9 b9 09                 a2 = a2 - a4
   349: 84 88 ff 00              a1 = a1 & 0xff
   353: 01                       fallthrough
      :                          @41
   354: 7c ba                    a3 = u8 [a4]
   356: d3 8a 0a                 a3 = a3 ^ a1
   359: 88 aa 01                 a3 = a3 <u 0x1
   362: c8 a7 07                 a0 = a0 + a3
   365: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   368: 95 bb 01                 a4 = a4 + 0x1
   371: 52 09 ef                 jump @41 if a2 != 0
      :                          @42
   374: 82 10 18                 ra = u64 [sp + 0x18]
   377: 82 15 10                 s0 = u64 [sp + 0x10]
   380: 82 16 08                 s1 = u64 [sp + 0x8]
   383: 95 11 20                 sp = sp + 0x20
   386: 32 00                    ret
      :                          @43 [@dyn 1]
   388: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   391: 7b 10 28                 u64 [sp + 0x28] = ra
   394: 7b 15 20                 u64 [sp + 0x20] = s0
   397: 7b 16 18                 u64 [sp + 0x18] = s1
   400: 64 86                    s1 = a1
   402: 82 88 28                 a1 = u64 [a1 + 0x28]
   405: 82 75                    s0 = u64 [a0]
   407: 82 67 20                 a0 = u64 [s1 + 0x20]
   410: 82 8a 18                 a3 = u64 [a1 + 0x18]
   413: 33 08 08 30 01           a1 = 0x13008
   418: 33 09 01                 a2 = 0x1
   421: b4 a0 01 04              ra = 4, jump [a3]
      :                          @44 [@dyn 2]
   425: 7b 16                    u64 [sp] = s1
   427: 78 17 08                 u8 [sp + 0x8] = a0
   430: 46 11 09                 u8 [sp + 9] = 0
   433: 7b 15 10                 u64 [sp + 0x10] = s0
   436: 33 06 48                 s1 = 0x48
   439: 64 17                    a0 = sp
   441: 95 18 10                 a1 = sp + 0x10
   444: 33 09 48                 a2 = 0x48
   447: 50 10 06 53 17 03        ra = 6, jump @13940
      :                          @45 [@dyn 3]
   453: 95 55 08                 s0 = s0 + 0x8
   456: 7b 15 10                 u64 [sp + 0x10] = s0
   459: 64 17                    a0 = sp
   461: 95 18 10                 a1 = sp + 0x10
   464: 64 69                    a2 = s1
   466: 50 10 08 40 17 03        ra = 8, jump @13940
      :                          @46 [@dyn 4]
   472: 33 07 01                 a0 = 0x1
   475: 7c 18 08                 a1 = u8 [sp + 0x8]
   478: 52 08 1a                 jump @48 if a1 != 0
      :                          @47
   481: 82 17                    a0 = u64 [sp]
   483: 82 78 28                 a1 = u64 [a0 + 0x28]
   486: 82 77 20                 a0 = u64 [a0 + 0x20]
   489: 82 8a 18                 a3 = u64 [a1 + 0x18]
   492: 33 08 49 30 01           a1 = 0x13049
   497: 33 09 01                 a2 = 0x1
   500: b4 a0 01 0a              ra = 10, jump [a3]
      :                          @48 [@dyn 5]
   504: 82 10 28                 ra = u64 [sp + 0x28]
   507: 82 15 20                 s0 = u64 [sp + 0x20]
   510: 82 16 18                 s1 = u64 [sp + 0x18]
   513: 95 11 30                 sp = sp + 0x30
   516: 32 00                    ret
      :                          @49 [@dyn 6]
   518: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   521: 7b 10 38                 u64 [sp + 0x38] = ra
   524: 7b 15 30                 u64 [sp + 0x30] = s0
   527: 7b 16 28                 u64 [sp + 0x28] = s1
   530: 64 85                    s0 = a1
   532: 82 88 28                 a1 = u64 [a1 + 0x28]
   535: 82 76                    s1 = u64 [a0]
   537: 82 57 20                 a0 = u64 [s0 + 0x20]
   540: 82 8a 18                 a3 = u64 [a1 + 0x18]
   543: 33 08 f0 2f 01           a1 = 0x12ff0
   548: 33 09                    a2 = 0
   550: b4 a0 01 0e              ra = 14, jump [a3]
      :                          @50 [@dyn 7]
   554: 7b 15 08                 u64 [sp + 0x8] = s0
   557: 78 17 10                 u8 [sp + 0x10] = a0
   560: 49 01                    u64 [sp + 0] = 0
   562: 33 05 01                 s0 = 0x1
   565: 78 15 11                 u8 [sp + 0x11] = s0
   568: 7b 16 18                 u64 [sp + 0x18] = s1
   571: 95 66 08                 s1 = s1 + 0x8
   574: 7b 16 20                 u64 [sp + 0x20] = s1
   577: 33 06 18                 s1 = 0x18
   580: 64 17                    a0 = sp
   582: 95 18 18                 a1 = sp + 0x18
   585: 33 09 18                 a2 = 0x18
   588: 50 10 10 8a 15 03        ra = 16, jump @13924
      :                          @51 [@dyn 8]
   594: 64 17                    a0 = sp
   596: 95 18 20                 a1 = sp + 0x20
   599: 64 69                    a2 = s1
   601: 50 10 12 7d 15 03        ra = 18, jump @13924
      :                          @52 [@dyn 9]
   607: 82 17                    a0 = u64 [sp]
   609: 7c 18 10                 a1 = u8 [sp + 0x10]
   612: 51 07 57                 jump @60 if a0 == 0
      :                          @53
   615: 52 08 57                 jump @61 if a1 != 0
      :                          @54
   618: 7c 18 11                 a1 = u8 [sp + 0x11]
   621: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   624: 8e 77                    a0 = a0 >u 0
   626: 82 16 08                 s1 = u64 [sp + 0x8]
   629: 88 88 01                 a1 = a1 <u 0x1
   632: d4 87 07                 a0 = a0 | a1
   635: 52 07 27                 jump @58 if a0 != 0
      :                          @55
   638: 7c 67 34                 a0 = u8 [s1 + 0x34]
   641: 84 77 04                 a0 = a0 & 0x4
   644: 52 07 1e                 jump @58 if a0 != 0
      :                          @56
   647: 82 68 28                 a1 = u64 [s1 + 0x28]
   650: 82 67 20                 a0 = u64 [s1 + 0x20]
   653: 82 8a 18                 a3 = u64 [a1 + 0x18]
   656: 33 08 47 30 01           a1 = 0x13047
   661: 33 09 01                 a2 = 0x1
   664: 33 05 01                 s0 = 0x1
   667: b4 a0 01 14              ra = 20, jump [a3]
      :                          @57 [@dyn 10]
   671: 52 07 1f                 jump @61 if a0 != 0
      :                          @58
   674: 82 68 28                 a1 = u64 [s1 + 0x28]
   677: 82 67 20                 a0 = u64 [s1 + 0x20]
   680: 82 8a 18                 a3 = u64 [a1 + 0x18]
   683: 33 08 f1 2f 01           a1 = 0x12ff1
   688: 33 09 01                 a2 = 0x1
   691: b4 a0 01 16              ra = 22, jump [a3]
      :                          @59 [@dyn 11]
   695: 64 75                    s0 = a0
   697: 28 05                    jump @61
      :                          @60
   699: 8e 85                    s0 = a1 >u 0
   701: 01                       fallthrough
      :                          @61
   702: 64 57                    a0 = s0
   704: 82 10 38                 ra = u64 [sp + 0x38]
   707: 82 15 30                 s0 = u64 [sp + 0x30]
   710: 82 16 28                 s1 = u64 [sp + 0x28]
   713: 95 11 40                 sp = sp + 0x40
   716: 32 00                    ret
      :                          @62 [@dyn 12]
   718: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   722: 7b 10 80 00              u64 [sp + 0x80] = ra
   726: 64 82                    t0 = a1
   728: 80 88 34                 a1 = u32 [a1 + 0x34]
   731: 82 77                    a0 = u64 [a0]
   733: 84 89 10                 a2 = a1 & 0x10
   736: 52 09 1c                 jump @65 if a2 != 0
      :                          @63
   739: 84 88 20                 a1 = a1 & 0x20
   742: 52 08 46                 jump @68 if a1 != 0
      :                          @64
   745: 82 77                    a0 = u64 [a0]
   747: 33 08 01                 a1 = 0x1
   750: 64 29                    a2 = t0
   752: 82 10 80 00              ra = u64 [sp + 0x80]
   756: 95 11 88 00              sp = sp + 0x88
   760: 28 c9 08 03              jump @13692
      :                          @65
   764: 82 7a                    a3 = u64 [a0]
   766: 33 08 81 00              a1 = 0x81
   770: 95 17 7f                 a0 = sp + 0x7f
   773: 33 03 57                 t1 = 0x57
   776: 01                       fallthrough
      :                          @66
   777: 64 8b                    a4 = a1
   779: 98 ac 04                 a5 = a3 >> 0x4
   782: 84 aa 0f                 a3 = a3 & 0xf
   785: 88 a8 0a                 a1 = a3 <u 0xa
   788: 33 09 30                 a2 = 0x30
   791: da 83 09                 a2 = t1 if a1 == 0
   794: be a9 09                 i32 a2 = a2 + a3
   797: 78 79                    u8 [a0] = a2
   799: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   802: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   805: 64 ca                    a3 = a5
   807: 52 0c e2                 jump @66 if a5 != 0
      :                          @67
   810: 28 30                    jump @70
      :                          @68
   812: 82 7a                    a3 = u64 [a0]
   814: 33 08 81 00              a1 = 0x81
   818: 95 17 7f                 a0 = sp + 0x7f
   821: 33 03 37                 t1 = 0x37
   824: 01                       fallthrough
      :                          @69
   825: 64 8b                    a4 = a1
   827: 98 ac 04                 a5 = a3 >> 0x4
   830: 84 aa 0f                 a3 = a3 & 0xf
   833: 88 a8 0a                 a1 = a3 <u 0xa
   836: 33 09 30                 a2 = 0x30
   839: da 83 09                 a2 = t1 if a1 == 0
   842: be a9 09                 i32 a2 = a2 + a3
   845: 78 79                    u8 [a0] = a2
   847: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   850: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   853: 64 ca                    a3 = a5
   855: 52 0c e2                 jump @69 if a5 != 0
      :                          @70
   858: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   861: 56 27 80 00 2b           jump @73 if a0 >u 128
      :                          @71
   866: 9a 8c 81 00              a5 = 0x81 - a1
   870: 64 1b                    a4 = sp
   872: c8 7b 0b                 a4 = a4 + a0
   875: 33 09 4a 30 01           a2 = 0x1304a
   880: 33 08 01                 a1 = 0x1
   883: 33 0a 02                 a3 = 0x2
   886: 64 27                    a0 = t0
   888: 50 10 1a 77 09 03        ra = 26, jump @13702
      :                          @72 [@dyn 13]
   894: 82 10 80 00              ra = u64 [sp + 0x80]
   898: 95 11 88 00              sp = sp + 0x88
   902: 32 00                    ret
      :                          @73
   904: 00                       trap
      :                          @74 [@dyn 14]
   905: 95 11 b8                 sp = sp + 0xffffffffffffffb8
   908: 7b 10 40                 u64 [sp + 0x40] = ra
   911: 7b 15 38                 u64 [sp + 0x38] = s0
   914: 7b 16 30                 u64 [sp + 0x30] = s1
   917: 64 85                    s0 = a1
   919: 82 88 28                 a1 = u64 [a1 + 0x28]
   922: 82 76                    s1 = u64 [a0]
   924: 82 57 20                 a0 = u64 [s0 + 0x20]
   927: 82 8a 18                 a3 = u64 [a1 + 0x18]
   930: 33 08 f0 2f 01           a1 = 0x12ff0
   935: 33 09                    a2 = 0
   937: b4 a0 01 1e              ra = 30, jump [a3]
      :                          @75 [@dyn 15]
   941: 7b 15 08                 u64 [sp + 0x8] = s0
   944: 78 17 10                 u8 [sp + 0x10] = a0
   947: 49 01                    u64 [sp + 0] = 0
   949: 33 05 01                 s0 = 0x1
   952: 78 15 11                 u8 [sp + 0x11] = s0
   955: 7b 16 18                 u64 [sp + 0x18] = s1
   958: 95 67 08                 a0 = s1 + 0x8
   961: 7b 17 20                 u64 [sp + 0x20] = a0
   964: 95 66 10                 s1 = s1 + 0x10
   967: 7b 16 28                 u64 [sp + 0x28] = s1
   970: 33 06 18                 s1 = 0x18
   973: 64 17                    a0 = sp
   975: 95 18 18                 a1 = sp + 0x18
   978: 33 09 18                 a2 = 0x18
   981: 50 10 20 01 14 03        ra = 32, jump @13924
      :                          @76 [@dyn 16]
   987: 64 17                    a0 = sp
   989: 95 18 20                 a1 = sp + 0x20
   992: 64 69                    a2 = s1
   994: 50 10 22 f4 13 03        ra = 34, jump @13924
      :                          @77 [@dyn 17]
  1000: 64 17                    a0 = sp
  1002: 95 18 28                 a1 = sp + 0x28
  1005: 64 69                    a2 = s1
  1007: 50 10 24 e7 13 03        ra = 36, jump @13924
      :                          @78 [@dyn 18]
  1013: 82 17                    a0 = u64 [sp]
  1015: 7c 18 10                 a1 = u8 [sp + 0x10]
  1018: 51 07 57                 jump @86 if a0 == 0
      :                          @79
  1021: 52 08 57                 jump @87 if a1 != 0
      :                          @80
  1024: 7c 18 11                 a1 = u8 [sp + 0x11]
  1027: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1030: 8e 77                    a0 = a0 >u 0
  1032: 82 16 08                 s1 = u64 [sp + 0x8]
  1035: 88 88 01                 a1 = a1 <u 0x1
  1038: d4 87 07                 a0 = a0 | a1
  1041: 52 07 27                 jump @84 if a0 != 0
      :                          @81
  1044: 7c 67 34                 a0 = u8 [s1 + 0x34]
  1047: 84 77 04                 a0 = a0 & 0x4
  1050: 52 07 1e                 jump @84 if a0 != 0
      :                          @82
  1053: 82 68 28                 a1 = u64 [s1 + 0x28]
  1056: 82 67 20                 a0 = u64 [s1 + 0x20]
  1059: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1062: 33 08 47 30 01           a1 = 0x13047
  1067: 33 09 01                 a2 = 0x1
  1070: 33 05 01                 s0 = 0x1
  1073: b4 a0 01 26              ra = 38, jump [a3]
      :                          @83 [@dyn 19]
  1077: 52 07 1f                 jump @87 if a0 != 0
      :                          @84
  1080: 82 68 28                 a1 = u64 [s1 + 0x28]
  1083: 82 67 20                 a0 = u64 [s1 + 0x20]
  1086: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1089: 33 08 f1 2f 01           a1 = 0x12ff1
  1094: 33 09 01                 a2 = 0x1
  1097: b4 a0 01 28              ra = 40, jump [a3]
      :                          @85 [@dyn 20]
  1101: 64 75                    s0 = a0
  1103: 28 05                    jump @87
      :                          @86
  1105: 8e 85                    s0 = a1 >u 0
  1107: 01                       fallthrough
      :                          @87
  1108: 64 57                    a0 = s0
  1110: 82 10 40                 ra = u64 [sp + 0x40]
  1113: 82 15 38                 s0 = u64 [sp + 0x38]
  1116: 82 16 30                 s1 = u64 [sp + 0x30]
  1119: 95 11 48                 sp = sp + 0x48
  1122: 32 00                    ret
      :                          @88 [@dyn 21]
  1124: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  1127: 7b 10 40                 u64 [sp + 0x40] = ra
  1130: 7b 15 38                 u64 [sp + 0x38] = s0
  1133: 7b 16 30                 u64 [sp + 0x30] = s1
  1136: 64 85                    s0 = a1
  1138: 82 88 28                 a1 = u64 [a1 + 0x28]
  1141: 82 76                    s1 = u64 [a0]
  1143: 82 57 20                 a0 = u64 [s0 + 0x20]
  1146: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1149: 33 08 f0 2f 01           a1 = 0x12ff0
  1154: 33 09                    a2 = 0
  1156: b4 a0 01 2c              ra = 44, jump [a3]
      :                          @89 [@dyn 22]
  1160: 7b 15 08                 u64 [sp + 0x8] = s0
  1163: 78 17 10                 u8 [sp + 0x10] = a0
  1166: 49 01                    u64 [sp + 0] = 0
  1168: 33 05 01                 s0 = 0x1
  1171: 78 15 11                 u8 [sp + 0x11] = s0
  1174: 7b 16 18                 u64 [sp + 0x18] = s1
  1177: 95 67 08                 a0 = s1 + 0x8
  1180: 7b 17 20                 u64 [sp + 0x20] = a0
  1183: 95 66 10                 s1 = s1 + 0x10
  1186: 7b 16 28                 u64 [sp + 0x28] = s1
  1189: 33 06 48                 s1 = 0x48
  1192: 64 17                    a0 = sp
  1194: 95 18 18                 a1 = sp + 0x18
  1197: 33 09 48                 a2 = 0x48
  1200: 50 10 2e 26 13 03        ra = 46, jump @13924
      :                          @90 [@dyn 23]
  1206: 64 17                    a0 = sp
  1208: 95 18 20                 a1 = sp + 0x20
  1211: 64 69                    a2 = s1
  1213: 50 10 30 19 13 03        ra = 48, jump @13924
      :                          @91 [@dyn 24]
  1219: 64 17                    a0 = sp
  1221: 95 18 28                 a1 = sp + 0x28
  1224: 64 69                    a2 = s1
  1226: 50 10 32 0c 13 03        ra = 50, jump @13924
      :                          @92 [@dyn 25]
  1232: 82 17                    a0 = u64 [sp]
  1234: 7c 18 10                 a1 = u8 [sp + 0x10]
  1237: 51 07 57                 jump @100 if a0 == 0
      :                          @93
  1240: 52 08 57                 jump @101 if a1 != 0
      :                          @94
  1243: 7c 18 11                 a1 = u8 [sp + 0x11]
  1246: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1249: 8e 77                    a0 = a0 >u 0
  1251: 82 16 08                 s1 = u64 [sp + 0x8]
  1254: 88 88 01                 a1 = a1 <u 0x1
  1257: d4 87 07                 a0 = a0 | a1
  1260: 52 07 27                 jump @98 if a0 != 0
      :                          @95
  1263: 7c 67 34                 a0 = u8 [s1 + 0x34]
  1266: 84 77 04                 a0 = a0 & 0x4
  1269: 52 07 1e                 jump @98 if a0 != 0
      :                          @96
  1272: 82 68 28                 a1 = u64 [s1 + 0x28]
  1275: 82 67 20                 a0 = u64 [s1 + 0x20]
  1278: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1281: 33 08 47 30 01           a1 = 0x13047
  1286: 33 09 01                 a2 = 0x1
  1289: 33 05 01                 s0 = 0x1
  1292: b4 a0 01 34              ra = 52, jump [a3]
      :                          @97 [@dyn 26]
  1296: 52 07 1f                 jump @101 if a0 != 0
      :                          @98
  1299: 82 68 28                 a1 = u64 [s1 + 0x28]
  1302: 82 67 20                 a0 = u64 [s1 + 0x20]
  1305: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1308: 33 08 f1 2f 01           a1 = 0x12ff1
  1313: 33 09 01                 a2 = 0x1
  1316: b4 a0 01 36              ra = 54, jump [a3]
      :                          @99 [@dyn 27]
  1320: 64 75                    s0 = a0
  1322: 28 05                    jump @101
      :                          @100
  1324: 8e 85                    s0 = a1 >u 0
  1326: 01                       fallthrough
      :                          @101
  1327: 64 57                    a0 = s0
  1329: 82 10 40                 ra = u64 [sp + 0x40]
  1332: 82 15 38                 s0 = u64 [sp + 0x38]
  1335: 82 16 30                 s1 = u64 [sp + 0x30]
  1338: 95 11 48                 sp = sp + 0x48
  1341: 32 00                    ret
      :                          @102 [@dyn 28]
  1343: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  1347: 7b 10 80 00              u64 [sp + 0x80] = ra
  1351: 64 82                    t0 = a1
  1353: 80 88 34                 a1 = u32 [a1 + 0x34]
  1356: 82 77                    a0 = u64 [a0]
  1358: 84 89 10                 a2 = a1 & 0x10
  1361: 52 09 1c                 jump @105 if a2 != 0
      :                          @103
  1364: 84 88 20                 a1 = a1 & 0x20
  1367: 52 08 46                 jump @108 if a1 != 0
      :                          @104
  1370: 80 77                    a0 = u32 [a0]
  1372: 33 08 01                 a1 = 0x1
  1375: 64 29                    a2 = t0
  1377: 82 10 80 00              ra = u64 [sp + 0x80]
  1381: 95 11 88 00              sp = sp + 0x88
  1385: 28 58 06 03              jump @13692
      :                          @105
  1389: 81 7a                    a3 = i32 [a0]
  1391: 33 08 81 00              a1 = 0x81
  1395: 95 17 7f                 a0 = sp + 0x7f
  1398: 33 03 57                 t1 = 0x57
  1401: 01                       fallthrough
      :                          @106
  1402: 64 8b                    a4 = a1
  1404: 8b ac 04                 i32 a5 = a3 >> 0x4
  1407: 84 aa 0f                 a3 = a3 & 0xf
  1410: 88 a8 0a                 a1 = a3 <u 0xa
  1413: 33 09 30                 a2 = 0x30
  1416: da 83 09                 a2 = t1 if a1 == 0
  1419: be a9 09                 i32 a2 = a2 + a3
  1422: 78 79                    u8 [a0] = a2
  1424: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1427: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  1430: 64 ca                    a3 = a5
  1432: 52 0c e2                 jump @106 if a5 != 0
      :                          @107
  1435: 28 30                    jump @110
      :                          @108
  1437: 81 7a                    a3 = i32 [a0]
  1439: 33 08 81 00              a1 = 0x81
  1443: 95 17 7f                 a0 = sp + 0x7f
  1446: 33 03 37                 t1 = 0x37
  1449: 01                       fallthrough
      :                          @109
  1450: 64 8b                    a4 = a1
  1452: 8b ac 04                 i32 a5 = a3 >> 0x4
  1455: 84 aa 0f                 a3 = a3 & 0xf
  1458: 88 a8 0a                 a1 = a3 <u 0xa
  1461: 33 09 30                 a2 = 0x30
  1464: da 83 09                 a2 = t1 if a1 == 0
  1467: be a9 09                 i32 a2 = a2 + a3
  1470: 78 79                    u8 [a0] = a2
  1472: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1475: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  1478: 64 ca                    a3 = a5
  1480: 52 0c e2                 jump @109 if a5 != 0
      :                          @110
  1483: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  1486: 56 27 80 00 2b           jump @113 if a0 >u 128
      :                          @111
  1491: 9a 8c 81 00              a5 = 0x81 - a1
  1495: 64 1b                    a4 = sp
  1497: c8 7b 0b                 a4 = a4 + a0
  1500: 33 09 4a 30 01           a2 = 0x1304a
  1505: 33 08 01                 a1 = 0x1
  1508: 33 0a 02                 a3 = 0x2
  1511: 64 27                    a0 = t0
  1513: 50 10 3a 06 07 03        ra = 58, jump @13702
      :                          @112 [@dyn 29]
  1519: 82 10 80 00              ra = u64 [sp + 0x80]
  1523: 95 11 88 00              sp = sp + 0x88
  1527: 32 00                    ret
      :                          @113
  1529: 00                       trap
      :                          @114 [@dyn 30]
  1530: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  1533: 7b 10 38                 u64 [sp + 0x38] = ra
  1536: 7b 15 30                 u64 [sp + 0x30] = s0
  1539: 7b 16 28                 u64 [sp + 0x28] = s1
  1542: 64 85                    s0 = a1
  1544: 82 88 28                 a1 = u64 [a1 + 0x28]
  1547: 82 76                    s1 = u64 [a0]
  1549: 82 57 20                 a0 = u64 [s0 + 0x20]
  1552: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1555: 33 08 f0 2f 01           a1 = 0x12ff0
  1560: 33 09                    a2 = 0
  1562: b4 a0 01 3e              ra = 62, jump [a3]
      :                          @115 [@dyn 31]
  1566: 7b 15 08                 u64 [sp + 0x8] = s0
  1569: 78 17 10                 u8 [sp + 0x10] = a0
  1572: 49 01                    u64 [sp + 0] = 0
  1574: 33 05 01                 s0 = 0x1
  1577: 78 15 11                 u8 [sp + 0x11] = s0
  1580: 7b 16 18                 u64 [sp + 0x18] = s1
  1583: 95 66 08                 s1 = s1 + 0x8
  1586: 7b 16 20                 u64 [sp + 0x20] = s1
  1589: 33 09 18                 a2 = 0x18
  1592: 64 17                    a0 = sp
  1594: 95 18 18                 a1 = sp + 0x18
  1597: 50 10 40 99 11 03        ra = 64, jump @13924
      :                          @116 [@dyn 32]
  1603: 33 09 38                 a2 = 0x38
  1606: 64 17                    a0 = sp
  1608: 95 18 20                 a1 = sp + 0x20
  1611: 50 10 42 8b 11 03        ra = 66, jump @13924
      :                          @117 [@dyn 33]
  1617: 82 17                    a0 = u64 [sp]
  1619: 7c 18 10                 a1 = u8 [sp + 0x10]
  1622: 51 07 57                 jump @125 if a0 == 0
      :                          @118
  1625: 52 08 57                 jump @126 if a1 != 0
      :                          @119
  1628: 7c 18 11                 a1 = u8 [sp + 0x11]
  1631: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1634: 8e 77                    a0 = a0 >u 0
  1636: 82 16 08                 s1 = u64 [sp + 0x8]
  1639: 88 88 01                 a1 = a1 <u 0x1
  1642: d4 87 07                 a0 = a0 | a1
  1645: 52 07 27                 jump @123 if a0 != 0
      :                          @120
  1648: 7c 67 34                 a0 = u8 [s1 + 0x34]
  1651: 84 77 04                 a0 = a0 & 0x4
  1654: 52 07 1e                 jump @123 if a0 != 0
      :                          @121
  1657: 82 68 28                 a1 = u64 [s1 + 0x28]
  1660: 82 67 20                 a0 = u64 [s1 + 0x20]
  1663: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1666: 33 08 47 30 01           a1 = 0x13047
  1671: 33 09 01                 a2 = 0x1
  1674: 33 05 01                 s0 = 0x1
  1677: b4 a0 01 44              ra = 68, jump [a3]
      :                          @122 [@dyn 34]
  1681: 52 07 1f                 jump @126 if a0 != 0
      :                          @123
  1684: 82 68 28                 a1 = u64 [s1 + 0x28]
  1687: 82 67 20                 a0 = u64 [s1 + 0x20]
  1690: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1693: 33 08 f1 2f 01           a1 = 0x12ff1
  1698: 33 09 01                 a2 = 0x1
  1701: b4 a0 01 46              ra = 70, jump [a3]
      :                          @124 [@dyn 35]
  1705: 64 75                    s0 = a0
  1707: 28 05                    jump @126
      :                          @125
  1709: 8e 85                    s0 = a1 >u 0
  1711: 01                       fallthrough
      :                          @126
  1712: 64 57                    a0 = s0
  1714: 82 10 38                 ra = u64 [sp + 0x38]
  1717: 82 15 30                 s0 = u64 [sp + 0x30]
  1720: 82 16 28                 s1 = u64 [sp + 0x28]
  1723: 95 11 40                 sp = sp + 0x40
  1726: 32 00                    ret
      :                          @127 [@dyn 36]
  1728: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  1732: 7b 10 80 00              u64 [sp + 0x80] = ra
  1736: 64 82                    t0 = a1
  1738: 80 88 34                 a1 = u32 [a1 + 0x34]
  1741: 82 77                    a0 = u64 [a0]
  1743: 84 89 10                 a2 = a1 & 0x10
  1746: 52 09 24                 jump @130 if a2 != 0
      :                          @128
  1749: 84 88 20                 a1 = a1 & 0x20
  1752: 52 08 4e                 jump @133 if a1 != 0
      :                          @129
  1755: 82 78                    a1 = u64 [a0]
  1757: 9a 87                    a0 = -a1
  1759: e3 78 07                 a0 = maxs(a1, a0)
  1762: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
  1765: 98 88 3f                 a1 = a1 >> 0x3f
  1768: 64 29                    a2 = t0
  1770: 82 10 80 00              ra = u64 [sp + 0x80]
  1774: 95 11 88 00              sp = sp + 0x88
  1778: 28 cf 04 03              jump @13692
      :                          @130
  1782: 82 7a                    a3 = u64 [a0]
  1784: 33 08 81 00              a1 = 0x81
  1788: 95 17 7f                 a0 = sp + 0x7f
  1791: 33 03 57                 t1 = 0x57
  1794: 01                       fallthrough
      :                          @131
  1795: 64 8b                    a4 = a1
  1797: 98 ac 04                 a5 = a3 >> 0x4
  1800: 84 aa 0f                 a3 = a3 & 0xf
  1803: 88 a8 0a                 a1 = a3 <u 0xa
  1806: 33 09 30                 a2 = 0x30
  1809: da 83 09                 a2 = t1 if a1 == 0
  1812: be a9 09                 i32 a2 = a2 + a3
  1815: 78 79                    u8 [a0] = a2
  1817: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1820: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  1823: 64 ca                    a3 = a5
  1825: 52 0c e2                 jump @131 if a5 != 0
      :                          @132
  1828: 28 30                    jump @135
      :                          @133
  1830: 82 7a                    a3 = u64 [a0]
  1832: 33 08 81 00              a1 = 0x81
  1836: 95 17 7f                 a0 = sp + 0x7f
  1839: 33 03 37                 t1 = 0x37
  1842: 01                       fallthrough
      :                          @134
  1843: 64 8b                    a4 = a1
  1845: 98 ac 04                 a5 = a3 >> 0x4
  1848: 84 aa 0f                 a3 = a3 & 0xf
  1851: 88 a8 0a                 a1 = a3 <u 0xa
  1854: 33 09 30                 a2 = 0x30
  1857: da 83 09                 a2 = t1 if a1 == 0
  1860: be a9 09                 i32 a2 = a2 + a3
  1863: 78 79                    u8 [a0] = a2
  1865: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1868: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  1871: 64 ca                    a3 = a5
  1873: 52 0c e2                 jump @134 if a5 != 0
      :                          @135
  1876: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  1879: 56 27 80 00 2b           jump @138 if a0 >u 128
      :                          @136
  1884: 9a 8c 81 00              a5 = 0x81 - a1
  1888: 64 1b                    a4 = sp
  1890: c8 7b 0b                 a4 = a4 + a0
  1893: 33 09 4a 30 01           a2 = 0x1304a
  1898: 33 08 01                 a1 = 0x1
  1901: 33 0a 02                 a3 = 0x2
  1904: 64 27                    a0 = t0
  1906: 50 10 4a 7d 05 03        ra = 74, jump @13702
      :                          @137 [@dyn 37]
  1912: 82 10 80 00              ra = u64 [sp + 0x80]
  1916: 95 11 88 00              sp = sp + 0x88
  1920: 32 00                    ret
      :                          @138
  1922: 00                       trap
      :                          @139 [@dyn 38]
  1923: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  1926: 7b 10 38                 u64 [sp + 0x38] = ra
  1929: 7b 15 30                 u64 [sp + 0x30] = s0
  1932: 7b 16 28                 u64 [sp + 0x28] = s1
  1935: 64 85                    s0 = a1
  1937: 82 88 28                 a1 = u64 [a1 + 0x28]
  1940: 82 76                    s1 = u64 [a0]
  1942: 82 57 20                 a0 = u64 [s0 + 0x20]
  1945: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1948: 33 08 f0 2f 01           a1 = 0x12ff0
  1953: 33 09                    a2 = 0
  1955: b4 a0 01 4e              ra = 78, jump [a3]
      :                          @140 [@dyn 39]
  1959: 7b 15 08                 u64 [sp + 0x8] = s0
  1962: 78 17 10                 u8 [sp + 0x10] = a0
  1965: 49 01                    u64 [sp + 0] = 0
  1967: 33 05 01                 s0 = 0x1
  1970: 78 15 11                 u8 [sp + 0x11] = s0
  1973: 7b 16 18                 u64 [sp + 0x18] = s1
  1976: 95 66 10                 s1 = s1 + 0x10
  1979: 7b 16 20                 u64 [sp + 0x20] = s1
  1982: 33 06 60                 s1 = 0x60
  1985: 64 17                    a0 = sp
  1987: 95 18 18                 a1 = sp + 0x18
  1990: 33 09 60                 a2 = 0x60
  1993: 50 10 50 0d 10 03        ra = 80, jump @13924
      :                          @141 [@dyn 40]
  1999: 64 17                    a0 = sp
  2001: 95 18 20                 a1 = sp + 0x20
  2004: 64 69                    a2 = s1
  2006: 50 10 52 00 10 03        ra = 82, jump @13924
      :                          @142 [@dyn 41]
  2012: 82 17                    a0 = u64 [sp]
  2014: 7c 18 10                 a1 = u8 [sp + 0x10]
  2017: 51 07 57                 jump @150 if a0 == 0
      :                          @143
  2020: 52 08 57                 jump @151 if a1 != 0
      :                          @144
  2023: 7c 18 11                 a1 = u8 [sp + 0x11]
  2026: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2029: 8e 77                    a0 = a0 >u 0
  2031: 82 16 08                 s1 = u64 [sp + 0x8]
  2034: 88 88 01                 a1 = a1 <u 0x1
  2037: d4 87 07                 a0 = a0 | a1
  2040: 52 07 27                 jump @148 if a0 != 0
      :                          @145
  2043: 7c 67 34                 a0 = u8 [s1 + 0x34]
  2046: 84 77 04                 a0 = a0 & 0x4
  2049: 52 07 1e                 jump @148 if a0 != 0
      :                          @146
  2052: 82 68 28                 a1 = u64 [s1 + 0x28]
  2055: 82 67 20                 a0 = u64 [s1 + 0x20]
  2058: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2061: 33 08 47 30 01           a1 = 0x13047
  2066: 33 09 01                 a2 = 0x1
  2069: 33 05 01                 s0 = 0x1
  2072: b4 a0 01 54              ra = 84, jump [a3]
      :                          @147 [@dyn 42]
  2076: 52 07 1f                 jump @151 if a0 != 0
      :                          @148
  2079: 82 68 28                 a1 = u64 [s1 + 0x28]
  2082: 82 67 20                 a0 = u64 [s1 + 0x20]
  2085: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2088: 33 08 f1 2f 01           a1 = 0x12ff1
  2093: 33 09 01                 a2 = 0x1
  2096: b4 a0 01 56              ra = 86, jump [a3]
      :                          @149 [@dyn 43]
  2100: 64 75                    s0 = a0
  2102: 28 05                    jump @151
      :                          @150
  2104: 8e 85                    s0 = a1 >u 0
  2106: 01                       fallthrough
      :                          @151
  2107: 64 57                    a0 = s0
  2109: 82 10 38                 ra = u64 [sp + 0x38]
  2112: 82 15 30                 s0 = u64 [sp + 0x30]
  2115: 82 16 28                 s1 = u64 [sp + 0x28]
  2118: 95 11 40                 sp = sp + 0x40
  2121: 32 00                    ret
      :                          @152 [@dyn 44]
  2123: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  2126: 7b 10 38                 u64 [sp + 0x38] = ra
  2129: 7b 15 30                 u64 [sp + 0x30] = s0
  2132: 7b 16 28                 u64 [sp + 0x28] = s1
  2135: 82 77                    a0 = u64 [a0]
  2137: 64 86                    s1 = a1
  2139: 82 88 28                 a1 = u64 [a1 + 0x28]
  2142: 82 75 08                 s0 = u64 [a0 + 0x8]
  2145: 82 77 10                 a0 = u64 [a0 + 0x10]
  2148: 7b 17 08                 u64 [sp + 0x8] = a0
  2151: 82 67 20                 a0 = u64 [s1 + 0x20]
  2154: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2157: 33 08 08 30 01           a1 = 0x13008
  2162: 33 09 01                 a2 = 0x1
  2165: b4 a0 01 5a              ra = 90, jump [a3]
      :                          @153 [@dyn 45]
  2169: 7b 16 10                 u64 [sp + 0x10] = s1
  2172: 82 16 08                 s1 = u64 [sp + 0x8]
  2175: 78 17 18                 u8 [sp + 0x18] = a0
  2178: 46 11 19                 u8 [sp + 25] = 0
  2181: 51 06 30                 jump @158 if s1 == 0
      :                          @154
  2184: 97 66 03                 s1 = s1 << 0x3
  2187: 33 07 18                 a0 = 0x18
  2190: 7b 17                    u64 [sp] = a0
  2192: 01                       fallthrough
      :                          @155
  2193: 95 57 08                 a0 = s0 + 0x8
  2196: 7b 17 08                 u64 [sp + 0x8] = a0
  2199: 7b 15 20                 u64 [sp + 0x20] = s0
  2202: 95 17 10                 a0 = sp + 0x10
  2205: 95 18 20                 a1 = sp + 0x20
  2208: 82 19                    a2 = u64 [sp]
  2210: 50 10 5c 70 10 03        ra = 92, jump @13940
      :                          @156 [@dyn 46]
  2216: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
  2219: 82 15 08                 s0 = u64 [sp + 0x8]
  2222: 52 06 e3                 jump @155 if s1 != 0
      :                          @157
  2225: 7c 17 18                 a0 = u8 [sp + 0x18]
  2228: 01                       fallthrough
      :                          @158
  2229: 33 08 01                 a1 = 0x1
  2232: 52 07 1e                 jump @161 if a0 != 0
      :                          @159
  2235: 82 17 10                 a0 = u64 [sp + 0x10]
  2238: 82 78 28                 a1 = u64 [a0 + 0x28]
  2241: 82 77 20                 a0 = u64 [a0 + 0x20]
  2244: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2247: 33 08 49 30 01           a1 = 0x13049
  2252: 33 09 01                 a2 = 0x1
  2255: b4 a0 01 5e              ra = 94, jump [a3]
      :                          @160 [@dyn 47]
  2259: 64 78                    a1 = a0
  2261: 01                       fallthrough
      :                          @161
  2262: 64 87                    a0 = a1
  2264: 82 10 38                 ra = u64 [sp + 0x38]
  2267: 82 15 30                 s0 = u64 [sp + 0x30]
  2270: 82 16 28                 s1 = u64 [sp + 0x28]
  2273: 95 11 40                 sp = sp + 0x40
  2276: 32 00                    ret
      :                          @162 [@dyn 48]
  2278: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  2281: 7b 10 38                 u64 [sp + 0x38] = ra
  2284: 7b 15 30                 u64 [sp + 0x30] = s0
  2287: 7b 16 28                 u64 [sp + 0x28] = s1
  2290: 64 85                    s0 = a1
  2292: 82 88 28                 a1 = u64 [a1 + 0x28]
  2295: 82 76                    s1 = u64 [a0]
  2297: 82 57 20                 a0 = u64 [s0 + 0x20]
  2300: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2303: 33 08 f0 2f 01           a1 = 0x12ff0
  2308: 33 09                    a2 = 0
  2310: b4 a0 01 62              ra = 98, jump [a3]
      :                          @163 [@dyn 49]
  2314: 7b 15 08                 u64 [sp + 0x8] = s0
  2317: 78 17 10                 u8 [sp + 0x10] = a0
  2320: 49 01                    u64 [sp + 0] = 0
  2322: 33 05 01                 s0 = 0x1
  2325: 78 15 11                 u8 [sp + 0x11] = s0
  2328: 7b 16 18                 u64 [sp + 0x18] = s1
  2331: 95 66 08                 s1 = s1 + 0x8
  2334: 7b 16 20                 u64 [sp + 0x20] = s1
  2337: 33 06 48                 s1 = 0x48
  2340: 64 17                    a0 = sp
  2342: 95 18 18                 a1 = sp + 0x18
  2345: 33 09 48                 a2 = 0x48
  2348: 50 10 64 aa 0e 03        ra = 100, jump @13924
      :                          @164 [@dyn 50]
  2354: 64 17                    a0 = sp
  2356: 95 18 20                 a1 = sp + 0x20
  2359: 64 69                    a2 = s1
  2361: 50 10 66 9d 0e 03        ra = 102, jump @13924
      :                          @165 [@dyn 51]
  2367: 82 17                    a0 = u64 [sp]
  2369: 7c 18 10                 a1 = u8 [sp + 0x10]
  2372: 51 07 57                 jump @173 if a0 == 0
      :                          @166
  2375: 52 08 57                 jump @174 if a1 != 0
      :                          @167
  2378: 7c 18 11                 a1 = u8 [sp + 0x11]
  2381: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2384: 8e 77                    a0 = a0 >u 0
  2386: 82 16 08                 s1 = u64 [sp + 0x8]
  2389: 88 88 01                 a1 = a1 <u 0x1
  2392: d4 87 07                 a0 = a0 | a1
  2395: 52 07 27                 jump @171 if a0 != 0
      :                          @168
  2398: 7c 67 34                 a0 = u8 [s1 + 0x34]
  2401: 84 77 04                 a0 = a0 & 0x4
  2404: 52 07 1e                 jump @171 if a0 != 0
      :                          @169
  2407: 82 68 28                 a1 = u64 [s1 + 0x28]
  2410: 82 67 20                 a0 = u64 [s1 + 0x20]
  2413: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2416: 33 08 47 30 01           a1 = 0x13047
  2421: 33 09 01                 a2 = 0x1
  2424: 33 05 01                 s0 = 0x1
  2427: b4 a0 01 68              ra = 104, jump [a3]
      :                          @170 [@dyn 52]
  2431: 52 07 1f                 jump @174 if a0 != 0
      :                          @171
  2434: 82 68 28                 a1 = u64 [s1 + 0x28]
  2437: 82 67 20                 a0 = u64 [s1 + 0x20]
  2440: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2443: 33 08 f1 2f 01           a1 = 0x12ff1
  2448: 33 09 01                 a2 = 0x1
  2451: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @172 [@dyn 53]
  2455: 64 75                    s0 = a0
  2457: 28 05                    jump @174
      :                          @173
  2459: 8e 85                    s0 = a1 >u 0
  2461: 01                       fallthrough
      :                          @174
  2462: 64 57                    a0 = s0
  2464: 82 10 38                 ra = u64 [sp + 0x38]
  2467: 82 15 30                 s0 = u64 [sp + 0x30]
  2470: 82 16 28                 s1 = u64 [sp + 0x28]
  2473: 95 11 40                 sp = sp + 0x40
  2476: 32 00                    ret
      :                          @175 [@dyn 54]
  2478: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  2481: 7b 10 38                 u64 [sp + 0x38] = ra
  2484: 7b 15 30                 u64 [sp + 0x30] = s0
  2487: 7b 16 28                 u64 [sp + 0x28] = s1
  2490: 82 77                    a0 = u64 [a0]
  2492: 64 86                    s1 = a1
  2494: 82 88 28                 a1 = u64 [a1 + 0x28]
  2497: 82 75 08                 s0 = u64 [a0 + 0x8]
  2500: 82 77 10                 a0 = u64 [a0 + 0x10]
  2503: 7b 17 08                 u64 [sp + 0x8] = a0
  2506: 82 67 20                 a0 = u64 [s1 + 0x20]
  2509: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2512: 33 08 08 30 01           a1 = 0x13008
  2517: 33 09 01                 a2 = 0x1
  2520: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @176 [@dyn 55]
  2524: 7b 16 10                 u64 [sp + 0x10] = s1
  2527: 82 16 08                 s1 = u64 [sp + 0x8]
  2530: 78 17 18                 u8 [sp + 0x18] = a0
  2533: 46 11 19                 u8 [sp + 25] = 0
  2536: 51 06 30                 jump @181 if s1 == 0
      :                          @177
  2539: 97 66 03                 s1 = s1 << 0x3
  2542: 33 07 48                 a0 = 0x48
  2545: 7b 17                    u64 [sp] = a0
  2547: 01                       fallthrough
      :                          @178
  2548: 95 57 08                 a0 = s0 + 0x8
  2551: 7b 17 08                 u64 [sp + 0x8] = a0
  2554: 7b 15 20                 u64 [sp + 0x20] = s0
  2557: 95 17 10                 a0 = sp + 0x10
  2560: 95 18 20                 a1 = sp + 0x20
  2563: 82 19                    a2 = u64 [sp]
  2565: 50 10 70 0d 0f 03        ra = 112, jump @13940
      :                          @179 [@dyn 56]
  2571: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
  2574: 82 15 08                 s0 = u64 [sp + 0x8]
  2577: 52 06 e3                 jump @178 if s1 != 0
      :                          @180
  2580: 7c 17 18                 a0 = u8 [sp + 0x18]
  2583: 01                       fallthrough
      :                          @181
  2584: 33 08 01                 a1 = 0x1
  2587: 52 07 1e                 jump @184 if a0 != 0
      :                          @182
  2590: 82 17 10                 a0 = u64 [sp + 0x10]
  2593: 82 78 28                 a1 = u64 [a0 + 0x28]
  2596: 82 77 20                 a0 = u64 [a0 + 0x20]
  2599: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2602: 33 08 49 30 01           a1 = 0x13049
  2607: 33 09 01                 a2 = 0x1
  2610: b4 a0 01 72              ra = 114, jump [a3]
      :                          @183 [@dyn 57]
  2614: 64 78                    a1 = a0
  2616: 01                       fallthrough
      :                          @184
  2617: 64 87                    a0 = a1
  2619: 82 10 38                 ra = u64 [sp + 0x38]
  2622: 82 15 30                 s0 = u64 [sp + 0x30]
  2625: 82 16 28                 s1 = u64 [sp + 0x28]
  2628: 95 11 40                 sp = sp + 0x40
  2631: 32 00                    ret
      :                          @185 [@dyn 58]
  2633: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  2637: 7b 10 80 00              u64 [sp + 0x80] = ra
  2641: 64 82                    t0 = a1
  2643: 80 88 34                 a1 = u32 [a1 + 0x34]
  2646: 84 89 10                 a2 = a1 & 0x10
  2649: 52 09 1c                 jump @188 if a2 != 0
      :                          @186
  2652: 84 88 20                 a1 = a1 & 0x20
  2655: 52 08 46                 jump @191 if a1 != 0
      :                          @187
  2658: 80 77                    a0 = u32 [a0]
  2660: 33 08 01                 a1 = 0x1
  2663: 64 29                    a2 = t0
  2665: 82 10 80 00              ra = u64 [sp + 0x80]
  2669: 95 11 88 00              sp = sp + 0x88
  2673: 28 50 01 03              jump @13692
      :                          @188
  2677: 81 7a                    a3 = i32 [a0]
  2679: 33 08 81 00              a1 = 0x81
  2683: 95 17 7f                 a0 = sp + 0x7f
  2686: 33 03 57                 t1 = 0x57
  2689: 01                       fallthrough
      :                          @189
  2690: 64 8b                    a4 = a1
  2692: 8b ac 04                 i32 a5 = a3 >> 0x4
  2695: 84 aa 0f                 a3 = a3 & 0xf
  2698: 88 a8 0a                 a1 = a3 <u 0xa
  2701: 33 09 30                 a2 = 0x30
  2704: da 83 09                 a2 = t1 if a1 == 0
  2707: be a9 09                 i32 a2 = a2 + a3
  2710: 78 79                    u8 [a0] = a2
  2712: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2715: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  2718: 64 ca                    a3 = a5
  2720: 52 0c e2                 jump @189 if a5 != 0
      :                          @190
  2723: 28 30                    jump @193
      :                          @191
  2725: 81 7a                    a3 = i32 [a0]
  2727: 33 08 81 00              a1 = 0x81
  2731: 95 17 7f                 a0 = sp + 0x7f
  2734: 33 03 37                 t1 = 0x37
  2737: 01                       fallthrough
      :                          @192
  2738: 64 8b                    a4 = a1
  2740: 8b ac 04                 i32 a5 = a3 >> 0x4
  2743: 84 aa 0f                 a3 = a3 & 0xf
  2746: 88 a8 0a                 a1 = a3 <u 0xa
  2749: 33 09 30                 a2 = 0x30
  2752: da 83 09                 a2 = t1 if a1 == 0
  2755: be a9 09                 i32 a2 = a2 + a3
  2758: 78 79                    u8 [a0] = a2
  2760: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2763: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  2766: 64 ca                    a3 = a5
  2768: 52 0c e2                 jump @192 if a5 != 0
      :                          @193
  2771: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  2774: 56 27 80 00 2b           jump @196 if a0 >u 128
      :                          @194
  2779: 9a 8c 81 00              a5 = 0x81 - a1
  2783: 64 1b                    a4 = sp
  2785: c8 7b 0b                 a4 = a4 + a0
  2788: 33 09 4a 30 01           a2 = 0x1304a
  2793: 33 08 01                 a1 = 0x1
  2796: 33 0a 02                 a3 = 0x2
  2799: 64 27                    a0 = t0
  2801: 50 10 76 fe 01 03        ra = 118, jump @13702
      :                          @195 [@dyn 59]
  2807: 82 10 80 00              ra = u64 [sp + 0x80]
  2811: 95 11 88 00              sp = sp + 0x88
  2815: 32 00                    ret
      :                          @196
  2817: 00                       trap
      :                          @197 [@dyn 60]
  2818: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  2822: 7b 10 80 00              u64 [sp + 0x80] = ra
  2826: 64 82                    t0 = a1
  2828: 80 88 34                 a1 = u32 [a1 + 0x34]
  2831: 84 89 10                 a2 = a1 & 0x10
  2834: 52 09 1c                 jump @200 if a2 != 0
      :                          @198
  2837: 84 88 20                 a1 = a1 & 0x20
  2840: 52 08 46                 jump @203 if a1 != 0
      :                          @199
  2843: 82 77                    a0 = u64 [a0]
  2845: 33 08 01                 a1 = 0x1
  2848: 64 29                    a2 = t0
  2850: 82 10 80 00              ra = u64 [sp + 0x80]
  2854: 95 11 88 00              sp = sp + 0x88
  2858: 28 97 00 03              jump @13692
      :                          @200
  2862: 82 7a                    a3 = u64 [a0]
  2864: 33 08 81 00              a1 = 0x81
  2868: 95 17 7f                 a0 = sp + 0x7f
  2871: 33 03 57                 t1 = 0x57
  2874: 01                       fallthrough
      :                          @201
  2875: 64 8b                    a4 = a1
  2877: 98 ac 04                 a5 = a3 >> 0x4
  2880: 84 aa 0f                 a3 = a3 & 0xf
  2883: 88 a8 0a                 a1 = a3 <u 0xa
  2886: 33 09 30                 a2 = 0x30
  2889: da 83 09                 a2 = t1 if a1 == 0
  2892: be a9 09                 i32 a2 = a2 + a3
  2895: 78 79                    u8 [a0] = a2
  2897: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2900: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  2903: 64 ca                    a3 = a5
  2905: 52 0c e2                 jump @201 if a5 != 0
      :                          @202
  2908: 28 30                    jump @205
      :                          @203
  2910: 82 7a                    a3 = u64 [a0]
  2912: 33 08 81 00              a1 = 0x81
  2916: 95 17 7f                 a0 = sp + 0x7f
  2919: 33 03 37                 t1 = 0x37
  2922: 01                       fallthrough
      :                          @204
  2923: 64 8b                    a4 = a1
  2925: 98 ac 04                 a5 = a3 >> 0x4
  2928: 84 aa 0f                 a3 = a3 & 0xf
  2931: 88 a8 0a                 a1 = a3 <u 0xa
  2934: 33 09 30                 a2 = 0x30
  2937: da 83 09                 a2 = t1 if a1 == 0
  2940: be a9 09                 i32 a2 = a2 + a3
  2943: 78 79                    u8 [a0] = a2
  2945: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2948: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  2951: 64 ca                    a3 = a5
  2953: 52 0c e2                 jump @204 if a5 != 0
      :                          @205
  2956: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  2959: 56 27 80 00 2b           jump @208 if a0 >u 128
      :                          @206
  2964: 9a 8c 81 00              a5 = 0x81 - a1
  2968: 64 1b                    a4 = sp
  2970: c8 7b 0b                 a4 = a4 + a0
  2973: 33 09 4a 30 01           a2 = 0x1304a
  2978: 33 08 01                 a1 = 0x1
  2981: 33 0a 02                 a3 = 0x2
  2984: 64 27                    a0 = t0
  2986: 50 10 7a 45 01 03        ra = 122, jump @13702
      :                          @207 [@dyn 61]
  2992: 82 10 80 00              ra = u64 [sp + 0x80]
  2996: 95 11 88 00              sp = sp + 0x88
  3000: 32 00                    ret
      :                          @208
  3002: 00                       trap
      :                          @209
  3003: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3006: 7b 10 18                 u64 [sp + 0x18] = ra
  3009: 7b 15 10                 u64 [sp + 0x10] = s0
  3012: 7b 16 08                 u64 [sp + 0x8] = s1
  3015: 82 70 10                 ra = u64 [a0 + 0x10]
  3018: 7b 17                    u64 [sp] = a0
  3020: 82 74 08                 t2 = u64 [a0 + 0x8]
  3023: 51 00 4a                 jump @221 if ra == 0
      :                          @210
  3026: 33 0a                    a3 = 0
  3028: 33 03 18                 t1 = 0x18
  3031: 33 07 00 00 01           a0 = 0x10000
  3036: 33 0c c0 22 03           a5 = 0x322c0
  3041: c8 7c 0c                 a5 = a5 + a0
  3044: 28 08                    jump @212
      :                          @211
  3046: 95 aa 01                 a3 = a3 + 0x1
  3049: aa 0a 30                 jump @221 if a3 == ra
      :                          @212
  3052: ca 3a 08                 a1 = a3 * t1
  3055: c8 48 08                 a1 = a1 + t2
  3058: 82 8b                    a4 = u64 [a1]
  3060: 51 0b f2                 jump @211 if a4 == 0
      :                          @213
  3063: ac b7 ef                 jump @211 if a0 <u a4
      :                          @214
  3066: 82 88 08                 a1 = u64 [a1 + 0x8]
  3069: 01                       fallthrough
      :                          @215
  3070: 82 c5                    s0 = u64 [a5]
  3072: c9 5c 06                 s1 = a5 - s0
  3075: ab 86 e3                 jump @211 if s1 != a1
      :                          @216
  3078: c9 b5 06                 s1 = s0 - a4
  3081: 01                       fallthrough
      :                          @217
  3082: 82 c9                    a2 = u64 [a5]
  3084: ab 59 f2                 jump @215 if a2 != s0
      :                          @218
  3087: 7b c6                    u64 [a5] = s1
  3089: 33 02                    t0 = 0
  3091: 01                       fallthrough
      :                          @219
  3092: ab 59 ea                 jump @215 if a2 != s0
      :                          @220
  3095: 28 cf                    jump @211
      :                          @221
  3097: 82 17                    a0 = u64 [sp]
  3099: 82 77                    a0 = u64 [a0]
  3101: 51 07 2e                 jump @228 if a0 == 0
      :                          @222
  3104: 33 08 aa 0a              a1 = 0xaaa
  3108: ac 78 27                 jump @228 if a1 <u a0
      :                          @223
  3111: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
  3114: 33 08 c0 22 03           a1 = 0x322c0
  3119: 95 88 00 00 01           a1 = a1 + 0x10000
  3124: 01                       fallthrough
      :                          @224
  3125: 82 89                    a2 = u64 [a1]
  3127: c9 98 0a                 a3 = a1 - a2
  3130: ab 4a 11                 jump @228 if a3 != t2
      :                          @225
  3133: c8 79 0a                 a3 = a2 + a0
  3136: 01                       fallthrough
      :                          @226
  3137: 82 8b                    a4 = u64 [a1]
  3139: ab 9b f2                 jump @224 if a4 != a2
      :                          @227
  3142: 7b 8a                    u64 [a1] = a3
  3144: 33 0c                    a5 = 0
  3146: 01                       fallthrough
      :                          @228
  3147: 82 10 18                 ra = u64 [sp + 0x18]
  3150: 82 15 10                 s0 = u64 [sp + 0x10]
  3153: 82 16 08                 s1 = u64 [sp + 0x8]
  3156: 95 11 20                 sp = sp + 0x20
  3159: 32 00                    ret
      :                          @229
  3161: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3164: 7b 10 18                 u64 [sp + 0x18] = ra
  3167: 7b 15 10                 u64 [sp + 0x10] = s0
  3170: 7b 16 08                 u64 [sp + 0x8] = s1
  3173: 82 70 10                 ra = u64 [a0 + 0x10]
  3176: 7b 17                    u64 [sp] = a0
  3178: 82 74 08                 t2 = u64 [a0 + 0x8]
  3181: 51 00 4e                 jump @241 if ra == 0
      :                          @230
  3184: 33 0a                    a3 = 0
  3186: 33 03 18                 t1 = 0x18
  3189: 33 0c c0 22 03           a5 = 0x322c0
  3194: 95 cc 00 00 01           a5 = a5 + 0x10000
  3199: 33 07 00 20              a0 = 0x2000
  3203: 28 08                    jump @232
      :                          @231
  3205: 95 aa 01                 a3 = a3 + 0x1
  3208: aa 0a 33                 jump @241 if a3 == ra
      :                          @232
  3211: ca 3a 0b                 a4 = a3 * t1
  3214: c8 4b 0b                 a4 = a4 + t2
  3217: 82 b8                    a1 = u64 [a4]
  3219: 51 08 f2                 jump @231 if a1 == 0
      :                          @233
  3222: ac 87 ef                 jump @231 if a0 <u a1
      :                          @234
  3225: 82 bb 08                 a4 = u64 [a4 + 0x8]
  3228: 97 88 03                 a1 = a1 << 0x3
  3231: 01                       fallthrough
      :                          @235
  3232: 82 c5                    s0 = u64 [a5]
  3234: c9 5c 06                 s1 = a5 - s0
  3237: ab b6 e0                 jump @231 if s1 != a4
      :                          @236
  3240: c9 85 06                 s1 = s0 - a1
  3243: 01                       fallthrough
      :                          @237
  3244: 82 c9                    a2 = u64 [a5]
  3246: ab 59 f2                 jump @235 if a2 != s0
      :                          @238
  3249: 7b c6                    u64 [a5] = s1
  3251: 33 02                    t0 = 0
  3253: 01                       fallthrough
      :                          @239
  3254: ab 59 ea                 jump @235 if a2 != s0
      :                          @240
  3257: 28 cc                    jump @231
      :                          @241
  3259: 82 17                    a0 = u64 [sp]
  3261: 82 77                    a0 = u64 [a0]
  3263: 51 07 2e                 jump @248 if a0 == 0
      :                          @242
  3266: 33 08 aa 0a              a1 = 0xaaa
  3270: ac 78 27                 jump @248 if a1 <u a0
      :                          @243
  3273: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
  3276: 33 08 c0 22 03           a1 = 0x322c0
  3281: 95 88 00 00 01           a1 = a1 + 0x10000
  3286: 01                       fallthrough
      :                          @244
  3287: 82 89                    a2 = u64 [a1]
  3289: c9 98 0a                 a3 = a1 - a2
  3292: ab 4a 11                 jump @248 if a3 != t2
      :                          @245
  3295: c8 79 0a                 a3 = a2 + a0
  3298: 01                       fallthrough
      :                          @246
  3299: 82 8b                    a4 = u64 [a1]
  3301: ab 9b f2                 jump @244 if a4 != a2
      :                          @247
  3304: 7b 8a                    u64 [a1] = a3
  3306: 33 0c                    a5 = 0
  3308: 01                       fallthrough
      :                          @248
  3309: 82 10 18                 ra = u64 [sp + 0x18]
  3312: 82 15 10                 s0 = u64 [sp + 0x10]
  3315: 82 16 08                 s1 = u64 [sp + 0x8]
  3318: 95 11 20                 sp = sp + 0x20
  3321: 32 00                    ret
      :                          @249
  3323: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3326: 7b 10 18                 u64 [sp + 0x18] = ra
  3329: 7b 15 10                 u64 [sp + 0x10] = s0
  3332: 7b 16 08                 u64 [sp + 0x8] = s1
  3335: 82 70 10                 ra = u64 [a0 + 0x10]
  3338: 7b 17                    u64 [sp] = a0
  3340: 82 74 08                 t2 = u64 [a0 + 0x8]
  3343: 51 00 4e                 jump @261 if ra == 0
      :                          @250
  3346: 33 0a                    a3 = 0
  3348: 33 03 18                 t1 = 0x18
  3351: 33 0c c0 22 03           a5 = 0x322c0
  3356: 95 cc 00 00 01           a5 = a5 + 0x10000
  3361: 33 07 00 10              a0 = 0x1000
  3365: 28 08                    jump @252
      :                          @251
  3367: 95 aa 01                 a3 = a3 + 0x1
  3370: aa 0a 33                 jump @261 if a3 == ra
      :                          @252
  3373: ca 3a 0b                 a4 = a3 * t1
  3376: c8 4b 0b                 a4 = a4 + t2
  3379: 82 b8                    a1 = u64 [a4]
  3381: 51 08 f2                 jump @251 if a1 == 0
      :                          @253
  3384: ac 87 ef                 jump @251 if a0 <u a1
      :                          @254
  3387: 82 bb 08                 a4 = u64 [a4 + 0x8]
  3390: 97 88 04                 a1 = a1 << 0x4
  3393: 01                       fallthrough
      :                          @255
  3394: 82 c5                    s0 = u64 [a5]
  3396: c9 5c 06                 s1 = a5 - s0
  3399: ab b6 e0                 jump @251 if s1 != a4
      :                          @256
  3402: c9 85 06                 s1 = s0 - a1
  3405: 01                       fallthrough
      :                          @257
  3406: 82 c9                    a2 = u64 [a5]
  3408: ab 59 f2                 jump @255 if a2 != s0
      :                          @258
  3411: 7b c6                    u64 [a5] = s1
  3413: 33 02                    t0 = 0
  3415: 01                       fallthrough
      :                          @259
  3416: ab 59 ea                 jump @255 if a2 != s0
      :                          @260
  3419: 28 cc                    jump @251
      :                          @261
  3421: 82 17                    a0 = u64 [sp]
  3423: 82 77                    a0 = u64 [a0]
  3425: 51 07 2e                 jump @268 if a0 == 0
      :                          @262
  3428: 33 08 aa 0a              a1 = 0xaaa
  3432: ac 78 27                 jump @268 if a1 <u a0
      :                          @263
  3435: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
  3438: 33 08 c0 22 03           a1 = 0x322c0
  3443: 95 88 00 00 01           a1 = a1 + 0x10000
  3448: 01                       fallthrough
      :                          @264
  3449: 82 89                    a2 = u64 [a1]
  3451: c9 98 0a                 a3 = a1 - a2
  3454: ab 4a 11                 jump @268 if a3 != t2
      :                          @265
  3457: c8 79 0a                 a3 = a2 + a0
  3460: 01                       fallthrough
      :                          @266
  3461: 82 8b                    a4 = u64 [a1]
  3463: ab 9b f2                 jump @264 if a4 != a2
      :                          @267
  3466: 7b 8a                    u64 [a1] = a3
  3468: 33 0c                    a5 = 0
  3470: 01                       fallthrough
      :                          @268
  3471: 82 10 18                 ra = u64 [sp + 0x18]
  3474: 82 15 10                 s0 = u64 [sp + 0x10]
  3477: 82 16 08                 s1 = u64 [sp + 0x8]
  3480: 95 11 20                 sp = sp + 0x20
  3483: 32 00                    ret
      :                          @269 [@dyn 62]
  3485: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  3488: 7b 10 28                 u64 [sp + 0x28] = ra
  3491: 7b 15 20                 u64 [sp + 0x20] = s0
  3494: 7b 16 18                 u64 [sp + 0x18] = s1
  3497: 64 85                    s0 = a1
  3499: 82 88 28                 a1 = u64 [a1 + 0x28]
  3502: 82 5a 20                 a3 = u64 [s0 + 0x20]
  3505: 82 8b 18                 a4 = u64 [a1 + 0x18]
  3508: 64 76                    s1 = a0
  3510: 33 08 08 30 01           a1 = 0x13008
  3515: 33 09 01                 a2 = 0x1
  3518: 64 a7                    a0 = a3
  3520: b4 b0 01 7e              ra = 126, jump [a4]
      :                          @270 [@dyn 63]
  3524: 7b 15                    u64 [sp] = s0
  3526: 78 17 08                 u8 [sp + 0x8] = a0
  3529: 46 11 09                 u8 [sp + 9] = 0
  3532: 7b 16 10                 u64 [sp + 0x10] = s1
  3535: 33 05 18                 s0 = 0x18
  3538: 64 17                    a0 = sp
  3540: 95 18 10                 a1 = sp + 0x10
  3543: 33 09 18                 a2 = 0x18
  3546: 50 20 80 00 38 0b 03     ra = 128, jump @13940
      :                          @271 [@dyn 64]
  3553: 95 67 08                 a0 = s1 + 0x8
  3556: 7b 17 10                 u64 [sp + 0x10] = a0
  3559: 64 17                    a0 = sp
  3561: 95 18 10                 a1 = sp + 0x10
  3564: 64 59                    a2 = s0
  3566: 50 20 82 00 24 0b 03     ra = 130, jump @13940
      :                          @272 [@dyn 65]
  3573: 95 67 10                 a0 = s1 + 0x10
  3576: 7b 17 10                 u64 [sp + 0x10] = a0
  3579: 64 17                    a0 = sp
  3581: 95 18 10                 a1 = sp + 0x10
  3584: 64 59                    a2 = s0
  3586: 50 20 84 00 10 0b 03     ra = 132, jump @13940
      :                          @273 [@dyn 66]
  3593: 95 66 18                 s1 = s1 + 0x18
  3596: 7b 16 10                 u64 [sp + 0x10] = s1
  3599: 64 17                    a0 = sp
  3601: 95 18 10                 a1 = sp + 0x10
  3604: 64 59                    a2 = s0
  3606: 50 20 86 00 fc 0a 03     ra = 134, jump @13940
      :                          @274 [@dyn 67]
  3613: 33 07 01                 a0 = 0x1
  3616: 7c 18 08                 a1 = u8 [sp + 0x8]
  3619: 52 08 1b                 jump @276 if a1 != 0
      :                          @275
  3622: 82 17                    a0 = u64 [sp]
  3624: 82 78 28                 a1 = u64 [a0 + 0x28]
  3627: 82 77 20                 a0 = u64 [a0 + 0x20]
  3630: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3633: 33 08 49 30 01           a1 = 0x13049
  3638: 33 09 01                 a2 = 0x1
  3641: b4 a0 02 88 00           ra = 136, jump [a3]
      :                          @276 [@dyn 68]
  3646: 82 10 28                 ra = u64 [sp + 0x28]
  3649: 82 15 20                 s0 = u64 [sp + 0x20]
  3652: 82 16 18                 s1 = u64 [sp + 0x18]
  3655: 95 11 30                 sp = sp + 0x30
  3658: 32 00                    ret
      :                          @277 [@dyn 69]
  3660: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  3663: 7b 10 28                 u64 [sp + 0x28] = ra
  3666: 7b 15 20                 u64 [sp + 0x20] = s0
  3669: 7b 16 18                 u64 [sp + 0x18] = s1
  3672: 64 85                    s0 = a1
  3674: 82 88 28                 a1 = u64 [a1 + 0x28]
  3677: 82 5a 20                 a3 = u64 [s0 + 0x20]
  3680: 82 8b 18                 a4 = u64 [a1 + 0x18]
  3683: 64 76                    s1 = a0
  3685: 33 08 08 30 01           a1 = 0x13008
  3690: 33 09 01                 a2 = 0x1
  3693: 64 a7                    a0 = a3
  3695: b4 b0 02 8c 00           ra = 140, jump [a4]
      :                          @278 [@dyn 70]
  3700: 7b 15                    u64 [sp] = s0
  3702: 78 17 08                 u8 [sp + 0x8] = a0
  3705: 46 11 09                 u8 [sp + 9] = 0
  3708: 7b 16 10                 u64 [sp + 0x10] = s1
  3711: 33 05 18                 s0 = 0x18
  3714: 64 17                    a0 = sp
  3716: 95 18 10                 a1 = sp + 0x10
  3719: 33 09 18                 a2 = 0x18
  3722: 50 20 8e 00 88 0a 03     ra = 142, jump @13940
      :                          @279 [@dyn 71]
  3729: 95 66 08                 s1 = s1 + 0x8
  3732: 7b 16 10                 u64 [sp + 0x10] = s1
  3735: 64 17                    a0 = sp
  3737: 95 18 10                 a1 = sp + 0x10
  3740: 64 59                    a2 = s0
  3742: 50 20 90 00 74 0a 03     ra = 144, jump @13940
      :                          @280 [@dyn 72]
  3749: 33 07 01                 a0 = 0x1
  3752: 7c 18 08                 a1 = u8 [sp + 0x8]
  3755: 52 08 1b                 jump @282 if a1 != 0
      :                          @281
  3758: 82 17                    a0 = u64 [sp]
  3760: 82 78 28                 a1 = u64 [a0 + 0x28]
  3763: 82 77 20                 a0 = u64 [a0 + 0x20]
  3766: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3769: 33 08 49 30 01           a1 = 0x13049
  3774: 33 09 01                 a2 = 0x1
  3777: b4 a0 02 92 00           ra = 146, jump [a3]
      :                          @282 [@dyn 73]
  3782: 82 10 28                 ra = u64 [sp + 0x28]
  3785: 82 15 20                 s0 = u64 [sp + 0x20]
  3788: 82 16 18                 s1 = u64 [sp + 0x18]
  3791: 95 11 30                 sp = sp + 0x30
  3794: 32 00                    ret
      :                          @283 [@dyn 74]
  3796: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  3799: 7b 10 28                 u64 [sp + 0x28] = ra
  3802: 7b 15 20                 u64 [sp + 0x20] = s0
  3805: 7b 16 18                 u64 [sp + 0x18] = s1
  3808: 64 85                    s0 = a1
  3810: 82 88 28                 a1 = u64 [a1 + 0x28]
  3813: 82 5a 20                 a3 = u64 [s0 + 0x20]
  3816: 82 8b 18                 a4 = u64 [a1 + 0x18]
  3819: 64 76                    s1 = a0
  3821: 33 08 08 30 01           a1 = 0x13008
  3826: 33 09 01                 a2 = 0x1
  3829: 64 a7                    a0 = a3
  3831: b4 b0 02 96 00           ra = 150, jump [a4]
      :                          @284 [@dyn 75]
  3836: 7b 15                    u64 [sp] = s0
  3838: 78 17 08                 u8 [sp + 0x8] = a0
  3841: 46 11 09                 u8 [sp + 9] = 0
  3844: 7b 16 10                 u64 [sp + 0x10] = s1
  3847: 33 05 9e 0c              s0 = 0xc9e
  3851: 64 17                    a0 = sp
  3853: 95 18 10                 a1 = sp + 0x10
  3856: 33 09 9e 0c              a2 = 0xc9e
  3860: 50 20 98 00 fe 09 03     ra = 152, jump @13940
      :                          @285 [@dyn 76]
  3867: 95 67 01                 a0 = s1 + 0x1
  3870: 7b 17 10                 u64 [sp + 0x10] = a0
  3873: 64 17                    a0 = sp
  3875: 95 18 10                 a1 = sp + 0x10
  3878: 64 59                    a2 = s0
  3880: 50 20 9a 00 ea 09 03     ra = 154, jump @13940
      :                          @286 [@dyn 77]
  3887: 95 67 02                 a0 = s1 + 0x2
  3890: 7b 17 10                 u64 [sp + 0x10] = a0
  3893: 64 17                    a0 = sp
  3895: 95 18 10                 a1 = sp + 0x10
  3898: 64 59                    a2 = s0
  3900: 50 20 9c 00 d6 09 03     ra = 156, jump @13940
      :                          @287 [@dyn 78]
  3907: 95 67 03                 a0 = s1 + 0x3
  3910: 7b 17 10                 u64 [sp + 0x10] = a0
  3913: 64 17                    a0 = sp
  3915: 95 18 10                 a1 = sp + 0x10
  3918: 64 59                    a2 = s0
  3920: 50 20 9e 00 c2 09 03     ra = 158, jump @13940
      :                          @288 [@dyn 79]
  3927: 95 67 04                 a0 = s1 + 0x4
  3930: 7b 17 10                 u64 [sp + 0x10] = a0
  3933: 64 17                    a0 = sp
  3935: 95 18 10                 a1 = sp + 0x10
  3938: 64 59                    a2 = s0
  3940: 50 20 a0 00 ae 09 03     ra = 160, jump @13940
      :                          @289 [@dyn 80]
  3947: 95 67 05                 a0 = s1 + 0x5
  3950: 7b 17 10                 u64 [sp + 0x10] = a0
  3953: 64 17                    a0 = sp
  3955: 95 18 10                 a1 = sp + 0x10
  3958: 64 59                    a2 = s0
  3960: 50 20 a2 00 9a 09 03     ra = 162, jump @13940
      :                          @290 [@dyn 81]
  3967: 95 67 06                 a0 = s1 + 0x6
  3970: 7b 17 10                 u64 [sp + 0x10] = a0
  3973: 64 17                    a0 = sp
  3975: 95 18 10                 a1 = sp + 0x10
  3978: 64 59                    a2 = s0
  3980: 50 20 a4 00 86 09 03     ra = 164, jump @13940
      :                          @291 [@dyn 82]
  3987: 95 67 07                 a0 = s1 + 0x7
  3990: 7b 17 10                 u64 [sp + 0x10] = a0
  3993: 64 17                    a0 = sp
  3995: 95 18 10                 a1 = sp + 0x10
  3998: 64 59                    a2 = s0
  4000: 50 20 a6 00 72 09 03     ra = 166, jump @13940
      :                          @292 [@dyn 83]
  4007: 95 67 08                 a0 = s1 + 0x8
  4010: 7b 17 10                 u64 [sp + 0x10] = a0
  4013: 64 17                    a0 = sp
  4015: 95 18 10                 a1 = sp + 0x10
  4018: 64 59                    a2 = s0
  4020: 50 20 a8 00 5e 09 03     ra = 168, jump @13940
      :                          @293 [@dyn 84]
  4027: 95 67 09                 a0 = s1 + 0x9
  4030: 7b 17 10                 u64 [sp + 0x10] = a0
  4033: 64 17                    a0 = sp
  4035: 95 18 10                 a1 = sp + 0x10
  4038: 64 59                    a2 = s0
  4040: 50 20 aa 00 4a 09 03     ra = 170, jump @13940
      :                          @294 [@dyn 85]
  4047: 95 67 0a                 a0 = s1 + 0xa
  4050: 7b 17 10                 u64 [sp + 0x10] = a0
  4053: 64 17                    a0 = sp
  4055: 95 18 10                 a1 = sp + 0x10
  4058: 64 59                    a2 = s0
  4060: 50 20 ac 00 36 09 03     ra = 172, jump @13940
      :                          @295 [@dyn 86]
  4067: 95 67 0b                 a0 = s1 + 0xb
  4070: 7b 17 10                 u64 [sp + 0x10] = a0
  4073: 64 17                    a0 = sp
  4075: 95 18 10                 a1 = sp + 0x10
  4078: 64 59                    a2 = s0
  4080: 50 20 ae 00 22 09 03     ra = 174, jump @13940
      :                          @296 [@dyn 87]
  4087: 95 67 0c                 a0 = s1 + 0xc
  4090: 7b 17 10                 u64 [sp + 0x10] = a0
  4093: 64 17                    a0 = sp
  4095: 95 18 10                 a1 = sp + 0x10
  4098: 64 59                    a2 = s0
  4100: 50 20 b0 00 0e 09 03     ra = 176, jump @13940
      :                          @297 [@dyn 88]
  4107: 95 67 0d                 a0 = s1 + 0xd
  4110: 7b 17 10                 u64 [sp + 0x10] = a0
  4113: 64 17                    a0 = sp
  4115: 95 18 10                 a1 = sp + 0x10
  4118: 64 59                    a2 = s0
  4120: 50 20 b2 00 fa 08 03     ra = 178, jump @13940
      :                          @298 [@dyn 89]
  4127: 95 67 0e                 a0 = s1 + 0xe
  4130: 7b 17 10                 u64 [sp + 0x10] = a0
  4133: 64 17                    a0 = sp
  4135: 95 18 10                 a1 = sp + 0x10
  4138: 64 59                    a2 = s0
  4140: 50 20 b4 00 e6 08 03     ra = 180, jump @13940
      :                          @299 [@dyn 90]
  4147: 95 67 0f                 a0 = s1 + 0xf
  4150: 7b 17 10                 u64 [sp + 0x10] = a0
  4153: 64 17                    a0 = sp
  4155: 95 18 10                 a1 = sp + 0x10
  4158: 64 59                    a2 = s0
  4160: 50 20 b6 00 d2 08 03     ra = 182, jump @13940
      :                          @300 [@dyn 91]
  4167: 95 67 10                 a0 = s1 + 0x10
  4170: 7b 17 10                 u64 [sp + 0x10] = a0
  4173: 64 17                    a0 = sp
  4175: 95 18 10                 a1 = sp + 0x10
  4178: 64 59                    a2 = s0
  4180: 50 20 b8 00 be 08 03     ra = 184, jump @13940
      :                          @301 [@dyn 92]
  4187: 95 67 11                 a0 = s1 + 0x11
  4190: 7b 17 10                 u64 [sp + 0x10] = a0
  4193: 64 17                    a0 = sp
  4195: 95 18 10                 a1 = sp + 0x10
  4198: 64 59                    a2 = s0
  4200: 50 20 ba 00 aa 08 03     ra = 186, jump @13940
      :                          @302 [@dyn 93]
  4207: 95 67 12                 a0 = s1 + 0x12
  4210: 7b 17 10                 u64 [sp + 0x10] = a0
  4213: 64 17                    a0 = sp
  4215: 95 18 10                 a1 = sp + 0x10
  4218: 64 59                    a2 = s0
  4220: 50 20 bc 00 96 08 03     ra = 188, jump @13940
      :                          @303 [@dyn 94]
  4227: 95 67 13                 a0 = s1 + 0x13
  4230: 7b 17 10                 u64 [sp + 0x10] = a0
  4233: 64 17                    a0 = sp
  4235: 95 18 10                 a1 = sp + 0x10
  4238: 64 59                    a2 = s0
  4240: 50 20 be 00 82 08 03     ra = 190, jump @13940
      :                          @304 [@dyn 95]
  4247: 95 67 14                 a0 = s1 + 0x14
  4250: 7b 17 10                 u64 [sp + 0x10] = a0
  4253: 64 17                    a0 = sp
  4255: 95 18 10                 a1 = sp + 0x10
  4258: 64 59                    a2 = s0
  4260: 50 20 c0 00 6e 08 03     ra = 192, jump @13940
      :                          @305 [@dyn 96]
  4267: 95 67 15                 a0 = s1 + 0x15
  4270: 7b 17 10                 u64 [sp + 0x10] = a0
  4273: 64 17                    a0 = sp
  4275: 95 18 10                 a1 = sp + 0x10
  4278: 64 59                    a2 = s0
  4280: 50 20 c2 00 5a 08 03     ra = 194, jump @13940
      :                          @306 [@dyn 97]
  4287: 95 67 16                 a0 = s1 + 0x16
  4290: 7b 17 10                 u64 [sp + 0x10] = a0
  4293: 64 17                    a0 = sp
  4295: 95 18 10                 a1 = sp + 0x10
  4298: 64 59                    a2 = s0
  4300: 50 20 c4 00 46 08 03     ra = 196, jump @13940
      :                          @307 [@dyn 98]
  4307: 95 67 17                 a0 = s1 + 0x17
  4310: 7b 17 10                 u64 [sp + 0x10] = a0
  4313: 64 17                    a0 = sp
  4315: 95 18 10                 a1 = sp + 0x10
  4318: 64 59                    a2 = s0
  4320: 50 20 c6 00 32 08 03     ra = 198, jump @13940
      :                          @308 [@dyn 99]
  4327: 95 67 18                 a0 = s1 + 0x18
  4330: 7b 17 10                 u64 [sp + 0x10] = a0
  4333: 64 17                    a0 = sp
  4335: 95 18 10                 a1 = sp + 0x10
  4338: 64 59                    a2 = s0
  4340: 50 20 c8 00 1e 08 03     ra = 200, jump @13940
      :                          @309 [@dyn 100]
  4347: 95 67 19                 a0 = s1 + 0x19
  4350: 7b 17 10                 u64 [sp + 0x10] = a0
  4353: 64 17                    a0 = sp
  4355: 95 18 10                 a1 = sp + 0x10
  4358: 64 59                    a2 = s0
  4360: 50 20 ca 00 0a 08 03     ra = 202, jump @13940
      :                          @310 [@dyn 101]
  4367: 95 67 1a                 a0 = s1 + 0x1a
  4370: 7b 17 10                 u64 [sp + 0x10] = a0
  4373: 64 17                    a0 = sp
  4375: 95 18 10                 a1 = sp + 0x10
  4378: 64 59                    a2 = s0
  4380: 50 20 cc 00 f6 07 03     ra = 204, jump @13940
      :                          @311 [@dyn 102]
  4387: 95 67 1b                 a0 = s1 + 0x1b
  4390: 7b 17 10                 u64 [sp + 0x10] = a0
  4393: 64 17                    a0 = sp
  4395: 95 18 10                 a1 = sp + 0x10
  4398: 64 59                    a2 = s0
  4400: 50 20 ce 00 e2 07 03     ra = 206, jump @13940
      :                          @312 [@dyn 103]
  4407: 95 67 1c                 a0 = s1 + 0x1c
  4410: 7b 17 10                 u64 [sp + 0x10] = a0
  4413: 64 17                    a0 = sp
  4415: 95 18 10                 a1 = sp + 0x10
  4418: 64 59                    a2 = s0
  4420: 50 20 d0 00 ce 07 03     ra = 208, jump @13940
      :                          @313 [@dyn 104]
  4427: 95 67 1d                 a0 = s1 + 0x1d
  4430: 7b 17 10                 u64 [sp + 0x10] = a0
  4433: 64 17                    a0 = sp
  4435: 95 18 10                 a1 = sp + 0x10
  4438: 64 59                    a2 = s0
  4440: 50 20 d2 00 ba 07 03     ra = 210, jump @13940
      :                          @314 [@dyn 105]
  4447: 95 67 1e                 a0 = s1 + 0x1e
  4450: 7b 17 10                 u64 [sp + 0x10] = a0
  4453: 64 17                    a0 = sp
  4455: 95 18 10                 a1 = sp + 0x10
  4458: 64 59                    a2 = s0
  4460: 50 20 d4 00 a6 07 03     ra = 212, jump @13940
      :                          @315 [@dyn 106]
  4467: 95 66 1f                 s1 = s1 + 0x1f
  4470: 7b 16 10                 u64 [sp + 0x10] = s1
  4473: 64 17                    a0 = sp
  4475: 95 18 10                 a1 = sp + 0x10
  4478: 64 59                    a2 = s0
  4480: 50 20 d6 00 92 07 03     ra = 214, jump @13940
      :                          @316 [@dyn 107]
  4487: 33 07 01                 a0 = 0x1
  4490: 7c 18 08                 a1 = u8 [sp + 0x8]
  4493: 52 08 1b                 jump @318 if a1 != 0
      :                          @317
  4496: 82 17                    a0 = u64 [sp]
  4498: 82 78 28                 a1 = u64 [a0 + 0x28]
  4501: 82 77 20                 a0 = u64 [a0 + 0x20]
  4504: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4507: 33 08 49 30 01           a1 = 0x13049
  4512: 33 09 01                 a2 = 0x1
  4515: b4 a0 02 d8 00           ra = 216, jump [a3]
      :                          @318 [@dyn 108]
  4520: 82 10 28                 ra = u64 [sp + 0x28]
  4523: 82 15 20                 s0 = u64 [sp + 0x20]
  4526: 82 16 18                 s1 = u64 [sp + 0x18]
  4529: 95 11 30                 sp = sp + 0x30
  4532: 32 00                    ret
      :                          @319 [@dyn 109]
  4534: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4537: 7b 10 30                 u64 [sp + 0x30] = ra
  4540: 7b 15 28                 u64 [sp + 0x28] = s0
  4543: 7b 16 20                 u64 [sp + 0x20] = s1
  4546: 64 86                    s1 = a1
  4548: 82 88 28                 a1 = u64 [a1 + 0x28]
  4551: 82 6a 20                 a3 = u64 [s1 + 0x20]
  4554: 82 8b 18                 a4 = u64 [a1 + 0x18]
  4557: 64 75                    s0 = a0
  4559: 33 08 08 30 01           a1 = 0x13008
  4564: 33 09 01                 a2 = 0x1
  4567: 64 a7                    a0 = a3
  4569: b4 b0 02 dc 00           ra = 220, jump [a4]
      :                          @320 [@dyn 110]
  4574: 7b 16 08                 u64 [sp + 0x8] = s1
  4577: 78 17 10                 u8 [sp + 0x10] = a0
  4580: 46 11 11                 u8 [sp + 17] = 0
  4583: 33 06 80 00              s1 = 0x80
  4587: 33 07 9e 0c              a0 = 0xc9e
  4591: 7b 17                    u64 [sp] = a0
  4593: 01                       fallthrough
      :                          @321
  4594: 7b 15 18                 u64 [sp + 0x18] = s0
  4597: 95 17 08                 a0 = sp + 0x8
  4600: 95 18 18                 a1 = sp + 0x18
  4603: 82 19                    a2 = u64 [sp]
  4605: 50 20 de 00 15 07 03     ra = 222, jump @13940
      :                          @322 [@dyn 111]
  4612: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4615: 95 55 01                 s0 = s0 + 0x1
  4618: 52 06 e8                 jump @321 if s1 != 0
      :                          @323
  4621: 7c 18 10                 a1 = u8 [sp + 0x10]
  4624: 33 07 01                 a0 = 0x1
  4627: 52 08 1c                 jump @325 if a1 != 0
      :                          @324
  4630: 82 17 08                 a0 = u64 [sp + 0x8]
  4633: 82 78 28                 a1 = u64 [a0 + 0x28]
  4636: 82 77 20                 a0 = u64 [a0 + 0x20]
  4639: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4642: 33 08 49 30 01           a1 = 0x13049
  4647: 33 09 01                 a2 = 0x1
  4650: b4 a0 02 e0 00           ra = 224, jump [a3]
      :                          @325 [@dyn 112]
  4655: 82 10 30                 ra = u64 [sp + 0x30]
  4658: 82 15 28                 s0 = u64 [sp + 0x28]
  4661: 82 16 20                 s1 = u64 [sp + 0x20]
  4664: 95 11 38                 sp = sp + 0x38
  4667: 32 00                    ret
      :                          @326 [@dyn 113]
  4669: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  4672: 7b 10 28                 u64 [sp + 0x28] = ra
  4675: 7b 15 20                 u64 [sp + 0x20] = s0
  4678: 7b 16 18                 u64 [sp + 0x18] = s1
  4681: 64 85                    s0 = a1
  4683: 82 88 28                 a1 = u64 [a1 + 0x28]
  4686: 82 5a 20                 a3 = u64 [s0 + 0x20]
  4689: 82 8b 18                 a4 = u64 [a1 + 0x18]
  4692: 64 76                    s1 = a0
  4694: 33 08 08 30 01           a1 = 0x13008
  4699: 33 09 01                 a2 = 0x1
  4702: 64 a7                    a0 = a3
  4704: b4 b0 02 e4 00           ra = 228, jump [a4]
      :                          @327 [@dyn 114]
  4709: 7b 15                    u64 [sp] = s0
  4711: 78 17 08                 u8 [sp + 0x8] = a0
  4714: 46 11 09                 u8 [sp + 9] = 0
  4717: 7b 16 10                 u64 [sp + 0x10] = s1
  4720: 33 05 02                 s0 = 0x2
  4723: 64 17                    a0 = sp
  4725: 95 18 10                 a1 = sp + 0x10
  4728: 33 09 02                 a2 = 0x2
  4731: 50 20 e6 00 97 06 03     ra = 230, jump @13940
      :                          @328 [@dyn 115]
  4738: 95 66 10                 s1 = s1 + 0x10
  4741: 7b 16 10                 u64 [sp + 0x10] = s1
  4744: 64 17                    a0 = sp
  4746: 95 18 10                 a1 = sp + 0x10
  4749: 64 59                    a2 = s0
  4751: 50 20 e8 00 83 06 03     ra = 232, jump @13940
      :                          @329 [@dyn 116]
  4758: 33 07 01                 a0 = 0x1
  4761: 7c 18 08                 a1 = u8 [sp + 0x8]
  4764: 52 08 1b                 jump @331 if a1 != 0
      :                          @330
  4767: 82 17                    a0 = u64 [sp]
  4769: 82 78 28                 a1 = u64 [a0 + 0x28]
  4772: 82 77 20                 a0 = u64 [a0 + 0x20]
  4775: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4778: 33 08 49 30 01           a1 = 0x13049
  4783: 33 09 01                 a2 = 0x1
  4786: b4 a0 02 ea 00           ra = 234, jump [a3]
      :                          @331 [@dyn 117]
  4791: 82 10 28                 ra = u64 [sp + 0x28]
  4794: 82 15 20                 s0 = u64 [sp + 0x20]
  4797: 82 16 18                 s1 = u64 [sp + 0x18]
  4800: 95 11 30                 sp = sp + 0x30
  4803: 32 00                    ret
      :                          @332 [@dyn 118]
  4805: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  4808: 7b 10 28                 u64 [sp + 0x28] = ra
  4811: 7b 15 20                 u64 [sp + 0x20] = s0
  4814: 7b 16 18                 u64 [sp + 0x18] = s1
  4817: 64 85                    s0 = a1
  4819: 82 88 28                 a1 = u64 [a1 + 0x28]
  4822: 82 5a 20                 a3 = u64 [s0 + 0x20]
  4825: 82 8b 18                 a4 = u64 [a1 + 0x18]
  4828: 64 76                    s1 = a0
  4830: 33 08 08 30 01           a1 = 0x13008
  4835: 33 09 01                 a2 = 0x1
  4838: 64 a7                    a0 = a3
  4840: b4 b0 02 ee 00           ra = 238, jump [a4]
      :                          @333 [@dyn 119]
  4845: 7b 15                    u64 [sp] = s0
  4847: 78 17 08                 u8 [sp + 0x8] = a0
  4850: 46 11 09                 u8 [sp + 9] = 0
  4853: 7b 16 10                 u64 [sp + 0x10] = s1
  4856: 33 05 18                 s0 = 0x18
  4859: 64 17                    a0 = sp
  4861: 95 18 10                 a1 = sp + 0x10
  4864: 33 09 18                 a2 = 0x18
  4867: 50 20 f0 00 0f 06 03     ra = 240, jump @13940
      :                          @334 [@dyn 120]
  4874: 95 67 08                 a0 = s1 + 0x8
  4877: 7b 17 10                 u64 [sp + 0x10] = a0
  4880: 64 17                    a0 = sp
  4882: 95 18 10                 a1 = sp + 0x10
  4885: 64 59                    a2 = s0
  4887: 50 20 f2 00 fb 05 03     ra = 242, jump @13940
      :                          @335 [@dyn 121]
  4894: 95 67 10                 a0 = s1 + 0x10
  4897: 7b 17 10                 u64 [sp + 0x10] = a0
  4900: 64 17                    a0 = sp
  4902: 95 18 10                 a1 = sp + 0x10
  4905: 64 59                    a2 = s0
  4907: 50 20 f4 00 e7 05 03     ra = 244, jump @13940
      :                          @336 [@dyn 122]
  4914: 95 67 18                 a0 = s1 + 0x18
  4917: 7b 17 10                 u64 [sp + 0x10] = a0
  4920: 64 17                    a0 = sp
  4922: 95 18 10                 a1 = sp + 0x10
  4925: 64 59                    a2 = s0
  4927: 50 20 f6 00 d3 05 03     ra = 246, jump @13940
      :                          @337 [@dyn 123]
  4934: 95 67 20                 a0 = s1 + 0x20
  4937: 7b 17 10                 u64 [sp + 0x10] = a0
  4940: 64 17                    a0 = sp
  4942: 95 18 10                 a1 = sp + 0x10
  4945: 64 59                    a2 = s0
  4947: 50 20 f8 00 bf 05 03     ra = 248, jump @13940
      :                          @338 [@dyn 124]
  4954: 95 67 28                 a0 = s1 + 0x28
  4957: 7b 17 10                 u64 [sp + 0x10] = a0
  4960: 64 17                    a0 = sp
  4962: 95 18 10                 a1 = sp + 0x10
  4965: 64 59                    a2 = s0
  4967: 50 20 fa 00 ab 05 03     ra = 250, jump @13940
      :                          @339 [@dyn 125]
  4974: 95 67 30                 a0 = s1 + 0x30
  4977: 7b 17 10                 u64 [sp + 0x10] = a0
  4980: 64 17                    a0 = sp
  4982: 95 18 10                 a1 = sp + 0x10
  4985: 64 59                    a2 = s0
  4987: 50 20 fc 00 97 05 03     ra = 252, jump @13940
      :                          @340 [@dyn 126]
  4994: 95 67 38                 a0 = s1 + 0x38
  4997: 7b 17 10                 u64 [sp + 0x10] = a0
  5000: 64 17                    a0 = sp
  5002: 95 18 10                 a1 = sp + 0x10
  5005: 64 59                    a2 = s0
  5007: 50 20 fe 00 83 05 03     ra = 254, jump @13940
      :                          @341 [@dyn 127]
  5014: 33 07 01                 a0 = 0x1
  5017: 7c 18 08                 a1 = u8 [sp + 0x8]
  5020: 52 08 1b                 jump @343 if a1 != 0
      :                          @342
  5023: 82 17                    a0 = u64 [sp]
  5025: 82 78 28                 a1 = u64 [a0 + 0x28]
  5028: 82 77 20                 a0 = u64 [a0 + 0x20]
  5031: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5034: 33 08 49 30 01           a1 = 0x13049
  5039: 33 09 01                 a2 = 0x1
  5042: b4 a0 02 00 01           ra = 256, jump [a3]
      :                          @343 [@dyn 128]
  5047: 82 10 28                 ra = u64 [sp + 0x28]
  5050: 82 15 20                 s0 = u64 [sp + 0x20]
  5053: 82 16 18                 s1 = u64 [sp + 0x18]
  5056: 95 11 30                 sp = sp + 0x30
  5059: 32 00                    ret
      :                          @344
  5061: 95 11 28 ff              sp = sp + 0xffffffffffffff28
  5065: 7b 10 d0 00              u64 [sp + 0xd0] = ra
  5069: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  5073: 7b 16 c0 00              u64 [sp + 0xc0] = s1
  5077: 33 09 15                 a2 = 0x15
  5080: 64 83                    t1 = a1
  5082: 7b 17 68                 u64 [sp + 0x68] = a0
  5085: ae 98 25                 jump @347 if a1 >=u a2
      :                          @345
  5088: 33 07 01                 a0 = 0x1
  5091: ae 37 45 05              jump @446 if a0 >=u t1
      :                          @346
  5095: 33 09 01                 a2 = 0x1
  5098: 82 17 68                 a0 = u64 [sp + 0x68]
  5101: 64 38                    a1 = t1
  5103: 82 10 d0 00              ra = u64 [sp + 0xd0]
  5107: 82 15 c8 00              s0 = u64 [sp + 0xc8]
  5111: 82 16 c0 00              s1 = u64 [sp + 0xc0]
  5115: 95 11 d8 00              sp = sp + 0xd8
  5119: 28 c1 14                 jump @800
      :                          @347
  5122: 97 37 02                 a0 = t1 << 0x2
  5125: 14 08 f8 ff ff ff ff ff ff 7f a1 = 0x7ffffffffffffff8
  5135: d2 87 07                 a0 = a0 & a1
  5138: 7b 17 20                 u64 [sp + 0x20] = a0
  5141: 33 07 c0 22 03           a0 = 0x322c0
  5146: 33 02 00 00 01           t0 = 0x10000
  5151: c8 27 09                 a2 = a0 + t0
  5154: 01                       fallthrough
      :                          @348
  5155: 82 9a                    a3 = u64 [a2]
  5157: 82 1b 20                 a4 = u64 [sp + 0x20]
  5160: c8 ab 0b                 a4 = a4 + a3
  5163: ac ab 0f 05              jump @447 if a4 <u a3
      :                          @349
  5167: 95 b8 08                 a1 = a4 + 0x8
  5170: d8 b8 0c                 a5 = a1 <u a4
  5173: d8 82 08                 a1 = t0 <u a1
  5176: d4 c8 08                 a1 = a1 | a5
  5179: 52 08 ff 04              jump @447 if a1 != 0
      :                          @350
  5183: c9 b7 08                 a1 = a0 - a4
  5186: c8 28 08                 a1 = a1 + t0
  5189: 84 8c 07                 a5 = a1 & 0x7
  5192: c8 cb 0b                 a4 = a4 + a5
  5195: 01                       fallthrough
      :                          @351
  5196: 82 95                    s0 = u64 [a2]
  5198: ab a5 d5                 jump @348 if s0 != a3
      :                          @352
  5201: 7b 9b                    u64 [a2] = a4
  5203: c9 c8 08                 a1 = a1 - a5
  5206: 7b 18 b0 00              u64 [sp + 0xb0] = a1
  5210: 33 09 c0 22 03           a2 = 0x322c0
  5215: 33 02 00 00 01           t0 = 0x10000
  5220: c8 29 0b                 a4 = a2 + t0
  5223: 01                       fallthrough
      :                          @353
  5224: 82 bc                    a5 = u64 [a4]
  5226: 95 c6 00 01              s1 = a5 + 0x100
  5230: ac c6 cc 04              jump @447 if s1 <u a5
      :                          @354
  5234: 95 67 08                 a0 = s1 + 0x8
  5237: d8 67 08                 a1 = a0 <u s1
  5240: d8 72 07                 a0 = t0 <u a0
  5243: d4 87 07                 a0 = a0 | a1
  5246: 52 07 bc 04              jump @447 if a0 != 0
      :                          @355
  5250: c9 69 07                 a0 = a2 - s1
  5253: c8 27 07                 a0 = a0 + t0
  5256: 84 78 07                 a1 = a0 & 0x7
  5259: c8 86 06                 s1 = s1 + a1
  5262: 01                       fallthrough
      :                          @356
  5263: 82 b5                    s0 = u64 [a4]
  5265: ab c5 d7                 jump @353 if s0 != a5
      :                          @357
  5268: 7b b6                    u64 [a4] = s1
  5270: 33 0c                    a5 = 0
  5272: 33 02                    t0 = 0
  5274: c9 87 04                 t2 = a0 - a1
  5277: 82 17 68                 a0 = u64 [sp + 0x68]
  5280: 95 78 10                 a1 = a0 + 0x10
  5283: 7b 18                    u64 [sp] = a1
  5285: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
  5288: 7b 17 38                 u64 [sp + 0x38] = a0
  5291: 49 11 28 10              u64 [sp + 40] = 0x10
  5295: 33 08 c0 22 03           a1 = 0x322c0
  5300: 49 11 08 01 10           u64 [sp + 8] = 0x1001
  5305: 7b 18 10                 u64 [sp + 0x10] = a1
  5308: 95 88 00 00 01           a1 = a1 + 0x10000
  5313: 7b 18 18                 u64 [sp + 0x18] = a1
  5316: 7b 13 58                 u64 [sp + 0x58] = t1
  5319: 28 0c                    jump @360
      :                          @358
  5321: 64 54                    t2 = s0
  5323: 82 1c 30                 a5 = u64 [sp + 0x30]
  5326: 01                       fallthrough
      :                          @359
  5327: ae 3c 00 04              jump @434 if a5 >=u t1
      :                          @360
  5331: 64 c0                    ra = a5
  5333: c9 c3 09                 a2 = t1 - a5
  5336: 97 cb 03                 a4 = a5 << 0x3
  5339: 82 17 68                 a0 = u64 [sp + 0x68]
  5342: c8 b7 07                 a0 = a0 + a4
  5345: 55 19 02 63              jump @368 if a2 >=u 2
      :                          @361
  5349: 64 98                    a1 = a2
  5351: c8 08 0c                 a5 = a1 + ra
  5354: 28 06                    jump @363
      :                          @362
  5356: c8 08 0c                 a5 = a1 + ra
  5359: 01                       fallthrough
      :                          @363
  5360: d8 0c 09                 a2 = a5 <u ra
  5363: d8 c3 0a                 a3 = t1 <u a5
  5366: d4 a9 09                 a2 = a2 | a3
  5369: 52 09 45 04              jump @451 if a2 != 0
      :                          @364
  5373: 88 89 0a                 a2 = a1 <u 0xa
  5376: d8 3c 0a                 a3 = a5 <u t1
  5379: d2 a9 09                 a2 = a2 & a3
  5382: 7b 12 a8 00              u64 [sp + 0xa8] = t0
  5386: 7b 10 a0 00              u64 [sp + 0xa0] = ra
  5390: 51 09 9d 00              jump @380 if a2 == 0
      :                          @365
  5394: 95 09 0a                 a2 = ra + 0xa
  5397: e6 39 0a                 a3 = minu(a2, t1)
  5400: ac 0a 27 04              jump @452 if a3 <u ra
      :                          @366
  5404: 64 45                    s0 = t2
  5406: 33 09 01                 a2 = 0x1
  5409: e4 98 09                 a2 = maxu(a1, a2)
  5412: c9 0a 06                 s1 = a3 - ra
  5415: 64 68                    a1 = s1
  5417: 7b 1a 30                 u64 [sp + 0x30] = a3
  5420: 50 20 02 01 94 13        ra = 258, jump @800
      :                          @367 [@dyn 129]
  5426: 82 10 a0 00              ra = u64 [sp + 0xa0]
  5430: 82 1c 30                 a5 = u64 [sp + 0x30]
  5433: 82 13 58                 t1 = u64 [sp + 0x58]
  5436: 64 54                    t2 = s0
  5438: 82 12 a8 00              t0 = u64 [sp + 0xa8]
  5442: 28 6d                    jump @381
      :                          @368
  5444: 82 7a 08                 a3 = u64 [a0 + 0x8]
  5447: 82 78                    a1 = u64 [a0]
  5449: ae 8a ff 00              jump @390 if a3 >=u a1
      :                          @369
  5453: 33 08 02                 a1 = 0x2
  5456: aa 89 1f                 jump @374 if a2 == a1
      :                          @370
  5459: 82 18                    a1 = u64 [sp]
  5461: c8 8b 0b                 a4 = a4 + a1
  5464: 33 08 02                 a1 = 0x2
  5467: 01                       fallthrough
      :                          @371
  5468: 64 ac                    a5 = a3
  5470: 82 ba                    a3 = u64 [a4]
  5472: ae ca 0f                 jump @374 if a3 >=u a5
      :                          @372
  5475: 95 88 01                 a1 = a1 + 0x1
  5478: 95 bb 08                 a4 = a4 + 0x8
  5481: ab 89 f3                 jump @371 if a2 != a1
      :                          @373
  5484: 64 98                    a1 = a2
  5486: 01                       fallthrough
      :                          @374
  5487: c8 08 0c                 a5 = a1 + ra
  5490: ac 8c ce 03              jump @453 if a5 <u a1
      :                          @375
  5494: ac c3 cb 03              jump @454 if t1 <u a5
      :                          @376
  5498: 98 89 01                 a2 = a1 >> 0x1
  5501: 51 09 73 ff              jump @363 if a2 == 0
      :                          @377
  5505: 64 c6                    s1 = a5
  5507: c8 08 0a                 a3 = a1 + ra
  5510: 97 aa 03                 a3 = a3 << 0x3
  5513: 82 1b 38                 a4 = u64 [sp + 0x38]
  5516: c8 ba 0a                 a3 = a3 + a4
  5519: 64 7b                    a4 = a0
  5521: 01                       fallthrough
      :                          @378
  5522: 82 ac                    a5 = u64 [a3]
  5524: 82 b5                    s0 = u64 [a4]
  5526: 7b bc                    u64 [a4] = a5
  5528: 7b a5                    u64 [a3] = s0
  5530: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  5533: 95 bb 08                 a4 = a4 + 0x8
  5536: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
  5539: 52 09 ef                 jump @378 if a2 != 0
      :                          @379
  5542: 64 6c                    a5 = s1
  5544: 28 48 ff                 jump @363
      :                          @380
  5547: c9 0c 06                 s1 = a5 - ra
  5550: 01                       fallthrough
      :                          @381
  5551: 97 27 04                 a0 = t0 << 0x4
  5554: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  5558: 82 17 28                 a0 = u64 [sp + 0x28]
  5561: 7b 1c 30                 u64 [sp + 0x30] = a5
  5564: ab 72 e4 00              jump @401 if t0 != a0
      :                          @382
  5568: 7b 16 98 00              u64 [sp + 0x98] = s1
  5572: 97 27 01                 a0 = t0 << 0x1
  5575: 7b 17 28                 u64 [sp + 0x28] = a0
  5578: 97 22 05                 t0 = t0 << 0x5
  5581: 82 16 10                 s1 = u64 [sp + 0x10]
  5584: 33 03 00 00 01           t1 = 0x10000
  5589: 82 17 18                 a0 = u64 [sp + 0x18]
  5592: 01                       fallthrough
      :                          @383
  5593: 82 78                    a1 = u64 [a0]
  5595: c8 28 09                 a2 = a1 + t0
  5598: ac 89 5c 03              jump @447 if a2 <u a1
      :                          @384
  5602: 95 9a 08                 a3 = a2 + 0x8
  5605: d8 9a 0b                 a4 = a3 <u a2
  5608: d8 a3 0a                 a3 = t1 <u a3
  5611: d4 ba 0a                 a3 = a3 | a4
  5614: 52 0a 4c 03              jump @447 if a3 != 0
      :                          @385
  5618: c9 96 0a                 a3 = s1 - a2
  5621: c8 3a 0a                 a3 = a3 + t1
  5624: 84 ab 07                 a4 = a3 & 0x7
  5627: c8 b9 09                 a2 = a2 + a4
  5630: 01                       fallthrough
      :                          @386
  5631: 82 7c                    a5 = u64 [a0]
  5633: ab 8c d8                 jump @383 if a5 != a1
      :                          @387
  5636: 7b 79                    u64 [a0] = a2
  5638: c9 ba 07                 a0 = a3 - a4
  5641: 7b 17 60                 u64 [sp + 0x60] = a0
  5644: 64 45                    s0 = t2
  5646: 64 48                    a1 = t2
  5648: 82 16 b8 00              s1 = u64 [sp + 0xb8]
  5652: 64 69                    a2 = s1
  5654: 50 20 04 01 16 f3 02     ra = 260, jump @13621
      :                          @388 [@dyn 130]
  5661: 82 17 08                 a0 = u64 [sp + 0x8]
  5664: 82 12 a8 00              t0 = u64 [sp + 0xa8]
  5668: ac 72 48                 jump @395 if t0 <u a0
      :                          @389
  5671: 82 15 60                 s0 = u64 [sp + 0x60]
  5674: c8 65 07                 a0 = s0 + s1
  5677: 82 18 98 00              a1 = u64 [sp + 0x98]
  5681: 7b 78                    u64 [a0] = a1
  5683: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  5687: 7b 78 08                 u64 [a0 + 0x8] = a1
  5690: 95 22 01                 t0 = t0 + 0x1
  5693: 82 13 58                 t1 = u64 [sp + 0x58]
  5696: 64 27                    a0 = t0
  5698: 7b 15 60                 u64 [sp + 0x60] = s0
  5701: 28 da 00                 jump @407
      :                          @390
  5704: 33 08 02                 a1 = 0x2
  5707: aa 89 a1 fe              jump @362 if a2 == a1
      :                          @391
  5711: 82 18                    a1 = u64 [sp]
  5713: c8 8b 0b                 a4 = a4 + a1
  5716: 33 08 02                 a1 = 0x2
  5719: 01                       fallthrough
      :                          @392
  5720: 64 ac                    a5 = a3
  5722: 82 ba                    a3 = u64 [a4]
  5724: ac ca 90 fe              jump @362 if a3 <u a5
      :                          @393
  5728: 95 88 01                 a1 = a1 + 0x1
  5731: 95 bb 08                 a4 = a4 + 0x8
  5734: ab 89 f2                 jump @392 if a2 != a1
      :                          @394
  5737: 28 7c fe                 jump @361
      :                          @395
  5740: 82 1b 18                 a4 = u64 [sp + 0x18]
  5743: 82 1c 30                 a5 = u64 [sp + 0x30]
  5746: 82 14 60                 t2 = u64 [sp + 0x60]
  5749: 82 10 a0 00              ra = u64 [sp + 0xa0]
  5753: 01                       fallthrough
      :                          @396
  5754: 82 b7                    a0 = u64 [a4]
  5756: c9 7b 08                 a1 = a4 - a0
  5759: ab 58 19                 jump @400 if a1 != s0
      :                          @397
  5762: c9 67 08                 a1 = a0 - s1
  5765: 01                       fallthrough
      :                          @398
  5766: 82 b9                    a2 = u64 [a4]
  5768: ab 79 f2                 jump @396 if a2 != a0
      :                          @399
  5771: 7b b8                    u64 [a4] = a1
  5773: 33 0a                    a3 = 0
  5775: 82 13 58                 t1 = u64 [sp + 0x58]
  5778: 82 16 98 00              s1 = u64 [sp + 0x98]
  5782: 28 0a                    jump @401
      :                          @400
  5784: 82 13 58                 t1 = u64 [sp + 0x58]
  5787: 82 16 98 00              s1 = u64 [sp + 0x98]
  5791: 01                       fallthrough
      :                          @401
  5792: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  5796: c8 47 07                 a0 = a0 + t2
  5799: 7b 76                    u64 [a0] = s1
  5801: 95 22 01                 t0 = t0 + 0x1
  5804: 7b 70 08                 u64 [a0 + 0x8] = ra
  5807: 64 45                    s0 = t2
  5809: 53 12 02 1e fe           jump @359 if t0 <u 2
      :                          @402
  5814: 64 27                    a0 = t0
  5816: 7b 15 60                 u64 [sp + 0x60] = s0
  5819: 28 64                    jump @407
      :                          @403
  5821: 64 56                    s1 = s0
  5823: 64 b8                    a1 = a4
  5825: 01                       fallthrough
      :                          @404
  5826: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  5830: 95 57 08                 a0 = s0 + 0x8
  5833: 7b 17 70                 u64 [sp + 0x70] = a0
  5836: c9 89 09                 a2 = a2 - a1
  5839: 64 67                    a0 = s1
  5841: 50 20 06 01 5b f2 02     ra = 262, jump @13621
      :                          @405 [@dyn 131]
  5848: 82 17 78                 a0 = u64 [sp + 0x78]
  5851: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  5855: c8 87 07                 a0 = a0 + a1
  5858: 7b 57                    u64 [s0] = a0
  5860: 82 17 80 00              a0 = u64 [sp + 0x80]
  5864: 82 18 70                 a1 = u64 [sp + 0x70]
  5867: 7b 87                    u64 [a1] = a0
  5869: 82 1a 88 00              a3 = u64 [sp + 0x88]
  5873: 95 a8 10                 a1 = a3 + 0x10
  5876: 82 17 90 00              a0 = u64 [sp + 0x90]
  5880: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
  5883: 82 19 98 00              a2 = u64 [sp + 0x98]
  5887: c8 97 07                 a0 = a0 + a2
  5890: 97 79 04                 a2 = a0 << 0x4
  5893: 64 a7                    a0 = a3
  5895: 50 20 08 01 d7 f2 02     ra = 264, jump @13639
      :                          @406 [@dyn 132]
  5902: 33 02 01                 t0 = 0x1
  5905: 82 13 58                 t1 = u64 [sp + 0x58]
  5908: 82 15 60                 s0 = u64 [sp + 0x60]
  5911: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  5915: ae 72 ae fd              jump @358 if t0 >=u a0
      :                          @407
  5919: 64 76                    s1 = a0
  5921: 95 7c ff                 a5 = a0 + 0xffffffffffffffff
  5924: 97 c7 04                 a0 = a5 << 0x4
  5927: c8 57 07                 a0 = a0 + s0
  5930: 82 78 08                 a1 = u64 [a0 + 0x8]
  5933: 82 77                    a0 = u64 [a0]
  5935: c8 78 08                 a1 = a1 + a0
  5938: aa 38 3e                 jump @414 if a1 == t1
      :                          @408
  5941: 97 6a 04                 a3 = s1 << 0x4
  5944: c8 5a 00                 ra = a3 + s0
  5947: 82 09 e0                 a2 = u64 [ra + 0xffffffffffffffe0]
  5950: ae 97 32                 jump @414 if a0 >=u a2
      :                          @409
  5953: 33 02 02                 t0 = 0x2
  5956: 82 14 b0 00              t2 = u64 [sp + 0xb0]
  5960: ae 62 81 fd              jump @358 if t0 >=u s1
      :                          @410
  5964: 95 6a fd                 a3 = s1 + 0xfffffffffffffffd
  5967: 97 a8 04                 a1 = a3 << 0x4
  5970: c8 58 08                 a1 = a1 + s0
  5973: 82 88                    a1 = u64 [a1]
  5975: c8 79 0b                 a4 = a2 + a0
  5978: ae 8b 2a                 jump @416 if a4 >=u a1
      :                          @411
  5981: 33 02 03                 t0 = 0x3
  5984: ae 62 69 fd              jump @358 if t0 >=u s1
      :                          @412
  5988: 82 0b c0                 a4 = u64 [ra + 0xffffffffffffffc0]
  5991: c8 89 09                 a2 = a2 + a1
  5994: ae b9 1a                 jump @416 if a2 >=u a4
      :                          @413
  5997: 28 58 01                 jump @433
      :                          @414
  6000: 82 14 b0 00              t2 = u64 [sp + 0xb0]
  6004: 53 16 03 13              jump @417 if s1 <u 3
      :                          @415
  6008: 95 6a fd                 a3 = s1 + 0xfffffffffffffffd
  6011: 97 a8 04                 a1 = a3 << 0x4
  6014: c8 58 08                 a1 = a1 + s0
  6017: 82 88                    a1 = u64 [a1]
  6019: 01                       fallthrough
      :                          @416
  6020: ac 78 07                 jump @418 if a1 <u a0
      :                          @417
  6023: 95 6a fe                 a3 = s1 + 0xfffffffffffffffe
  6026: 01                       fallthrough
      :                          @418
  6027: ae 6a b0 01              jump @448 if a3 >=u s1
      :                          @419
  6031: 95 a7 01                 a0 = a3 + 0x1
  6034: ae 67 a9 01              jump @448 if a0 >=u s1
      :                          @420
  6038: 97 a8 04                 a1 = a3 << 0x4
  6041: c8 85 09                 a2 = s0 + a1
  6044: 97 77 04                 a0 = a0 << 0x4
  6047: c8 57 07                 a0 = a0 + s0
  6050: 82 7b                    a4 = u64 [a0]
  6052: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  6056: 82 78 08                 a1 = u64 [a0 + 0x8]
  6059: 82 97 08                 a0 = u64 [a2 + 0x8]
  6062: c8 b8 08                 a1 = a1 + a4
  6065: ac 78 8b 01              jump @449 if a1 <u a0
      :                          @421
  6069: ac 83 88 01              jump @450 if t1 <u a1
      :                          @422
  6073: 7b 1b 78                 u64 [sp + 0x78] = a4
  6076: 7b 1a 90 00              u64 [sp + 0x90] = a3
  6080: 7b 16 98 00              u64 [sp + 0x98] = s1
  6084: 7b 1c a0 00              u64 [sp + 0xa0] = a5
  6088: 7b 19 88 00              u64 [sp + 0x88] = a2
  6092: 82 9b                    a4 = u64 [a2]
  6094: c9 78 0a                 a3 = a1 - a0
  6097: 7b 17 80 00              u64 [sp + 0x80] = a0
  6101: 97 76 03                 s1 = a0 << 0x3
  6104: 82 17 68                 a0 = u64 [sp + 0x68]
  6107: c8 76 06                 s1 = s1 + a0
  6110: 97 b9 03                 a2 = a4 << 0x3
  6113: c8 96 05                 s0 = s1 + a2
  6116: c9 ba 07                 a0 = a3 - a4
  6119: 97 88 03                 a1 = a1 << 0x3
  6122: 7b 18 70                 u64 [sp + 0x70] = a1
  6125: 7b 1b b8 00              u64 [sp + 0xb8] = a4
  6129: ae b7 69                 jump @428 if a0 >=u a4
      :                          @423
  6132: 97 79 03                 a2 = a0 << 0x3
  6135: 7b 19 48                 u64 [sp + 0x48] = a2
  6138: 7b 17 50                 u64 [sp + 0x50] = a0
  6141: 64 47                    a0 = t2
  6143: 64 58                    a1 = s0
  6145: 50 20 0a 01 2b f1 02     ra = 266, jump @13621
      :                          @424 [@dyn 133]
  6152: 82 1b b0 00              a4 = u64 [sp + 0xb0]
  6156: 82 17 50                 a0 = u64 [sp + 0x50]
  6159: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  6163: e5 78 07                 a0 = mins(a1, a0)
  6166: 82 19 48                 a2 = u64 [sp + 0x48]
  6169: c8 b9 09                 a2 = a2 + a4
  6172: 58 07 a1 fe              jump @403 if a0 <=s 0
      :                          @425
  6176: 82 17 38                 a0 = u64 [sp + 0x38]
  6179: 82 18 70                 a1 = u64 [sp + 0x70]
  6182: c8 87 07                 a0 = a0 + a1
  6185: 01                       fallthrough
      :                          @426
  6186: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
  6189: 82 5a f8                 a3 = u64 [s0 + 0xfffffffffffffff8]
  6192: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
  6195: d8 a8 08                 a1 = a1 <u a3
  6198: 97 8a 03                 a3 = a1 << 0x3
  6201: c9 a5 05                 s0 = s0 - a3
  6204: c8 a9 09                 a2 = a2 + a3
  6207: 64 5a                    a3 = s0
  6209: da 89 0a                 a3 = a2 if a1 == 0
  6212: 82 a8                    a1 = u64 [a3]
  6214: 7b 78                    u64 [a0] = a1
  6216: d8 56 08                 a1 = s1 <u s0
  6219: d8 9b 0a                 a3 = a4 <u a2
  6222: d2 a8 08                 a1 = a1 & a3
  6225: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
  6228: 52 08 d6                 jump @426 if a1 != 0
      :                          @427
  6231: 28 66 fe                 jump @403
      :                          @428
  6234: 8f b7                    a0 = a4 >s 0
  6236: 7b 17 50                 u64 [sp + 0x50] = a0
  6239: 64 47                    a0 = t2
  6241: 64 68                    a1 = s1
  6243: 7b 1a 40                 u64 [sp + 0x40] = a3
  6246: 7b 19 48                 u64 [sp + 0x48] = a2
  6249: 50 20 0c 01 c3 f0 02     ra = 268, jump @13621
      :                          @429 [@dyn 134]
  6256: 82 18 b0 00              a1 = u64 [sp + 0xb0]
  6260: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  6264: 82 19 40                 a2 = u64 [sp + 0x40]
  6267: d9 97 07                 a0 = a0 <s a2
  6270: 82 19 50                 a2 = u64 [sp + 0x50]
  6273: d2 97 07                 a0 = a0 & a2
  6276: 82 19 48                 a2 = u64 [sp + 0x48]
  6279: c8 89 09                 a2 = a2 + a1
  6282: 51 07 38 fe              jump @404 if a0 == 0
      :                          @430
  6286: 82 12 68                 t0 = u64 [sp + 0x68]
  6289: 82 17 70                 a0 = u64 [sp + 0x70]
  6292: c8 72 02                 t0 = t0 + a0
  6295: 01                       fallthrough
      :                          @431
  6296: 82 5a                    a3 = u64 [s0]
  6298: 82 8b                    a4 = u64 [a1]
  6300: d8 ba 0c                 a5 = a3 <u a4
  6303: 85 c7 01                 a0 = a5 ^ 0x1
  6306: e6 ba 0a                 a3 = minu(a3, a4)
  6309: 7b 6a                    u64 [s1] = a3
  6311: 97 cc 03                 a5 = a5 << 0x3
  6314: c8 c5 05                 s0 = s0 + a5
  6317: 97 77 03                 a0 = a0 << 0x3
  6320: c8 78 08                 a1 = a1 + a0
  6323: d8 98 07                 a0 = a1 <u a2
  6326: d8 25 0a                 a3 = s0 <u t0
  6329: d2 a7 07                 a0 = a0 & a3
  6332: 95 66 08                 s1 = s1 + 0x8
  6335: 52 07 d9                 jump @431 if a0 != 0
      :                          @432
  6338: 28 00 fe                 jump @404
      :                          @433
  6341: 64 54                    t2 = s0
  6343: 64 62                    t0 = s1
  6345: 82 1c 30                 a5 = u64 [sp + 0x30]
  6348: 28 03 fc                 jump @359
      :                          @434
  6351: 82 18 28                 a1 = u64 [sp + 0x28]
  6354: 56 28 00 10 27           jump @440 if a1 >u 4096
      :                          @435
  6359: 97 87 04                 a0 = a1 << 0x4
  6362: 33 08 c0 22 03           a1 = 0x322c0
  6367: 95 88 00 00 01           a1 = a1 + 0x10000
  6372: 01                       fallthrough
      :                          @436
  6373: 82 89                    a2 = u64 [a1]
  6375: c9 98 0a                 a3 = a1 - a2
  6378: ab 4a 0f                 jump @440 if a3 != t2
      :                          @437
  6381: c9 79 0a                 a3 = a2 - a0
  6384: 01                       fallthrough
      :                          @438
  6385: 82 8b                    a4 = u64 [a1]
  6387: ab 9b f2                 jump @436 if a4 != a2
      :                          @439
  6390: 7b 8a                    u64 [a1] = a3
  6392: 01                       fallthrough
      :                          @440
  6393: 33 07 01 40              a0 = 0x4001
  6397: 82 1c b0 00              a5 = u64 [sp + 0xb0]
  6401: ac 37 27                 jump @446 if a0 <u t1
      :                          @441
  6404: 33 07 c0 22 03           a0 = 0x322c0
  6409: 95 77 00 00 01           a0 = a0 + 0x10000
  6414: 01                       fallthrough
      :                          @442
  6415: 82 78                    a1 = u64 [a0]
  6417: c9 87 09                 a2 = a0 - a1
  6420: ab c9 14                 jump @446 if a2 != a5
      :                          @443
  6423: 82 19 20                 a2 = u64 [sp + 0x20]
  6426: c9 98 09                 a2 = a1 - a2
  6429: 01                       fallthrough
      :                          @444
  6430: 82 7a                    a3 = u64 [a0]
  6432: ab 8a ef                 jump @442 if a3 != a1
      :                          @445
  6435: 7b 79                    u64 [a0] = a2
  6437: 33 0b                    a4 = 0
  6439: 01                       fallthrough
      :                          @446
  6440: 82 10 d0 00              ra = u64 [sp + 0xd0]
  6444: 82 15 c8 00              s0 = u64 [sp + 0xc8]
  6448: 82 16 c0 00              s1 = u64 [sp + 0xc0]
  6452: 95 11 d8 00              sp = sp + 0xd8
  6456: 32 00                    ret
      :                          @447
  6458: 00                       trap
      :                          @448
  6459: 00                       trap
      :                          @449
  6460: 00                       trap
      :                          @450
  6461: 00                       trap
      :                          @451
  6462: 00                       trap
      :                          @452
  6463: 00                       trap
      :                          @453
  6464: 00                       trap
      :                          @454
  6465: 00                       trap
      :                          @455
  6466: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6469: 7b 10 20                 u64 [sp + 0x20] = ra
  6472: 7b 15 18                 u64 [sp + 0x18] = s0
  6475: 7b 16 10                 u64 [sp + 0x10] = s1
  6478: 98 82 01                 t0 = a1 >> 0x1
  6481: 84 24 fe                 t2 = t0 & 0xfffffffffffffffe
  6484: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  6487: ae 89 0c 01              jump @464 if a2 >=u a1
      :                          @456
  6491: 95 8a ff                 a3 = a1 + 0xffffffffffffffff
  6494: 68 aa                    a3 = clz a3
  6496: 9c a3 ff                 t1 = 0xffffffffffffffff >> a3
  6499: 97 8a 0d                 a3 = a1 << 0xd
  6502: d3 8a 0a                 a3 = a3 ^ a1
  6505: 98 ab 07                 a4 = a3 >> 0x7
  6508: d3 ba 0a                 a3 = a3 ^ a4
  6511: 97 ab 11                 a4 = a3 << 0x11
  6514: d3 ab 0b                 a4 = a4 ^ a3
  6517: d2 3b 0a                 a3 = a4 & t1
  6520: d8 8a 0c                 a5 = a3 <u a1
  6523: 64 85                    s0 = a1
  6525: 94 c5                    s0 = 0 if a5 != 0
  6527: c9 5a 0a                 a3 = a3 - s0
  6530: ae 8a df 00              jump @462 if a3 >=u a1
      :                          @457
  6534: 97 99 04                 a2 = a2 << 0x4
  6537: c8 79 09                 a2 = a2 + a0
  6540: 82 9c 08                 a5 = u64 [a2 + 0x8]
  6543: 82 95                    s0 = u64 [a2]
  6545: 97 aa 04                 a3 = a3 << 0x4
  6548: c8 7a 0a                 a3 = a3 + a0
  6551: 7b 1c 08                 u64 [sp + 0x8] = a5
  6554: 7b 15                    u64 [sp] = s0
  6556: 82 a0                    ra = u64 [a3]
  6558: 82 a5 08                 s0 = u64 [a3 + 0x8]
  6561: 82 16 08                 s1 = u64 [sp + 0x8]
  6564: 82 1c                    a5 = u64 [sp]
  6566: 7b 90                    u64 [a2] = ra
  6568: 7b 95 08                 u64 [a2 + 0x8] = s0
  6571: 7b a6 08                 u64 [a3 + 0x8] = s1
  6574: 7b ac                    u64 [a3] = a5
  6576: ae 84 b2 00              jump @463 if t2 >=u a1
      :                          @458
  6580: 97 b9 0d                 a2 = a4 << 0xd
  6583: d3 b9 09                 a2 = a2 ^ a4
  6586: 98 9a 07                 a3 = a2 >> 0x7
  6589: d3 a9 09                 a2 = a2 ^ a3
  6592: 97 9b 11                 a4 = a2 << 0x11
  6595: d3 9b 0b                 a4 = a4 ^ a2
  6598: d2 3b 09                 a2 = a4 & t1
  6601: d8 89 0a                 a3 = a2 <u a1
  6604: 64 8c                    a5 = a1
  6606: 94 ac                    a5 = 0 if a3 != 0
  6608: c9 c9 0a                 a3 = a2 - a5
  6611: ae 8a 8e 00              jump @462 if a3 >=u a1
      :                          @459
  6615: 97 44 04                 t2 = t2 << 0x4
  6618: c8 74 04                 t2 = t2 + a0
  6621: 82 49 08                 a2 = u64 [t2 + 0x8]
  6624: 97 aa 04                 a3 = a3 << 0x4
  6627: 82 4c                    a5 = u64 [t2]
  6629: c8 7a 0a                 a3 = a3 + a0
  6632: 7b 19 08                 u64 [sp + 0x8] = a2
  6635: 82 a9                    a2 = u64 [a3]
  6637: 7b 1c                    u64 [sp] = a5
  6639: 82 ac 08                 a5 = u64 [a3 + 0x8]
  6642: 82 15 08                 s0 = u64 [sp + 0x8]
  6645: 7b 49                    u64 [t2] = a2
  6647: 82 16                    s1 = u64 [sp]
  6649: 7b 4c 08                 u64 [t2 + 0x8] = a5
  6652: 7b a5 08                 u64 [a3 + 0x8] = s0
  6655: 86 29 01                 a2 = t0 | 0x1
  6658: 7b a6                    u64 [a3] = s1
  6660: ae 89 5f                 jump @464 if a2 >=u a1
      :                          @460
  6663: 97 ba 0d                 a3 = a4 << 0xd
  6666: d3 ba 0a                 a3 = a3 ^ a4
  6669: 98 ab 07                 a4 = a3 >> 0x7
  6672: d3 ba 0a                 a3 = a3 ^ a4
  6675: 97 ab 11                 a4 = a3 << 0x11
  6678: d3 ba 0a                 a3 = a3 ^ a4
  6681: d2 3a 0a                 a3 = a3 & t1
  6684: d8 8a 0b                 a4 = a3 <u a1
  6687: 64 8c                    a5 = a1
  6689: 94 bc                    a5 = 0 if a4 != 0
  6691: c9 ca 0a                 a3 = a3 - a5
  6694: ae 8a 3b                 jump @462 if a3 >=u a1
      :                          @461
  6697: 97 99 04                 a2 = a2 << 0x4
  6700: c8 79 09                 a2 = a2 + a0
  6703: 82 98 08                 a1 = u64 [a2 + 0x8]
  6706: 82 9b                    a4 = u64 [a2]
  6708: 97 aa 04                 a3 = a3 << 0x4
  6711: c8 a7 07                 a0 = a0 + a3
  6714: 7b 18 08                 u64 [sp + 0x8] = a1
  6717: 7b 1b                    u64 [sp] = a4
  6719: 82 78                    a1 = u64 [a0]
  6721: 82 7a 08                 a3 = u64 [a0 + 0x8]
  6724: 82 1b 08                 a4 = u64 [sp + 0x8]
  6727: 82 1c                    a5 = u64 [sp]
  6729: 7b 98                    u64 [a2] = a1
  6731: 7b 9a 08                 u64 [a2 + 0x8] = a3
  6734: 7b 7b 08                 u64 [a0 + 0x8] = a4
  6737: 7b 7c                    u64 [a0] = a5
  6739: 82 10 20                 ra = u64 [sp + 0x20]
  6742: 82 15 18                 s0 = u64 [sp + 0x18]
  6745: 82 16 10                 s1 = u64 [sp + 0x10]
  6748: 95 11 28                 sp = sp + 0x28
  6751: 32 00                    ret
      :                          @462
  6753: 00                       trap
      :                          @463
  6754: 00                       trap
      :                          @464
  6755: 00                       trap
      :                          @465
  6756: 95 11 f8                 sp = sp + 0xfffffffffffffff8
  6759: 7b 15                    u64 [sp] = s0
  6761: 98 82 01                 t0 = a1 >> 0x1
  6764: 84 24 fe                 t2 = t0 & 0xfffffffffffffffe
  6767: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  6770: ae 89 c1 00              jump @474 if a2 >=u a1
      :                          @466
  6774: 95 8a ff                 a3 = a1 + 0xffffffffffffffff
  6777: 68 aa                    a3 = clz a3
  6779: 9c a3 ff                 t1 = 0xffffffffffffffff >> a3
  6782: 97 8a 0d                 a3 = a1 << 0xd
  6785: d3 8a 0a                 a3 = a3 ^ a1
  6788: 98 ab 07                 a4 = a3 >> 0x7
  6791: d3 ba 0a                 a3 = a3 ^ a4
  6794: 97 ab 11                 a4 = a3 << 0x11
  6797: d3 ab 0b                 a4 = a4 ^ a3
  6800: d2 3b 0a                 a3 = a4 & t1
  6803: d8 8a 0c                 a5 = a3 <u a1
  6806: 64 85                    s0 = a1
  6808: 94 c5                    s0 = 0 if a5 != 0
  6810: c9 5a 0a                 a3 = a3 - s0
  6813: ae 8a 94 00              jump @472 if a3 >=u a1
      :                          @467
  6817: 97 99 03                 a2 = a2 << 0x3
  6820: c8 79 09                 a2 = a2 + a0
  6823: 97 aa 03                 a3 = a3 << 0x3
  6826: c8 7a 0a                 a3 = a3 + a0
  6829: 82 ac                    a5 = u64 [a3]
  6831: 82 95                    s0 = u64 [a2]
  6833: 7b 9c                    u64 [a2] = a5
  6835: 7b a5                    u64 [a3] = s0
  6837: ae 84 7d                 jump @473 if t2 >=u a1
      :                          @468
  6840: 97 b9 0d                 a2 = a4 << 0xd
  6843: d3 b9 09                 a2 = a2 ^ a4
  6846: 98 9a 07                 a3 = a2 >> 0x7
  6849: d3 a9 09                 a2 = a2 ^ a3
  6852: 97 9b 11                 a4 = a2 << 0x11
  6855: d3 9b 0b                 a4 = a4 ^ a2
  6858: d2 3b 09                 a2 = a4 & t1
  6861: d8 89 0a                 a3 = a2 <u a1
  6864: 64 8c                    a5 = a1
  6866: 94 ac                    a5 = 0 if a3 != 0
  6868: c9 c9 0a                 a3 = a2 - a5
  6871: ae 8a 5a                 jump @472 if a3 >=u a1
      :                          @469
  6874: 97 44 03                 t2 = t2 << 0x3
  6877: 97 aa 03                 a3 = a3 << 0x3
  6880: c8 7a 0a                 a3 = a3 + a0
  6883: 82 a9                    a2 = u64 [a3]
  6885: c8 74 04                 t2 = t2 + a0
  6888: 82 4c                    a5 = u64 [t2]
  6890: 7b 49                    u64 [t2] = a2
  6892: 86 29 01                 a2 = t0 | 0x1
  6895: 7b ac                    u64 [a3] = a5
  6897: ae 89 42                 jump @474 if a2 >=u a1
      :                          @470
  6900: 97 ba 0d                 a3 = a4 << 0xd
  6903: d3 ba 0a                 a3 = a3 ^ a4
  6906: 98 ab 07                 a4 = a3 >> 0x7
  6909: d3 ba 0a                 a3 = a3 ^ a4
  6912: 97 ab 11                 a4 = a3 << 0x11
  6915: d3 ba 0a                 a3 = a3 ^ a4
  6918: d2 3a 0a                 a3 = a3 & t1
  6921: d8 8a 0b                 a4 = a3 <u a1
  6924: 64 8c                    a5 = a1
  6926: 94 bc                    a5 = 0 if a4 != 0
  6928: c9 ca 0a                 a3 = a3 - a5
  6931: ae 8a 1e                 jump @472 if a3 >=u a1
      :                          @471
  6934: 97 99 03                 a2 = a2 << 0x3
  6937: c8 79 09                 a2 = a2 + a0
  6940: 97 aa 03                 a3 = a3 << 0x3
  6943: c8 a7 07                 a0 = a0 + a3
  6946: 82 78                    a1 = u64 [a0]
  6948: 82 9a                    a3 = u64 [a2]
  6950: 7b 98                    u64 [a2] = a1
  6952: 7b 7a                    u64 [a0] = a3
  6954: 82 15                    s0 = u64 [sp]
  6956: 95 11 08                 sp = sp + 0x8
  6959: 32 00                    ret
      :                          @472
  6961: 00                       trap
      :                          @473
  6962: 00                       trap
      :                          @474
  6963: 00                       trap
      :                          @475
  6964: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  6967: 7b 10 38                 u64 [sp + 0x38] = ra
  6970: 7b 15 30                 u64 [sp + 0x30] = s0
  6973: 7b 16 28                 u64 [sp + 0x28] = s1
  6976: 33 09 32                 a2 = 0x32
  6979: 64 82                    t0 = a1
  6981: 64 73                    t1 = a0
  6983: ae 98 34                 jump @481 if a1 >=u a2
      :                          @476
  6986: 82 37 18                 a0 = u64 [t1 + 0x18]
  6989: 82 39 08                 a2 = u64 [t1 + 0x8]
  6992: 33 08 01                 a1 = 0x1
  6995: ac 97 e5 02              jump @544 if a0 <u a2
      :                          @477
  6999: 95 39 28                 a2 = t1 + 0x28
  7002: 9a 26 02                 s1 = 0x2 - t0
  7005: 33 0b 01                 a4 = 0x1
  7008: 33 08 01                 a1 = 0x1
  7011: 01                       fallthrough
      :                          @478
  7012: c8 86 0a                 a3 = s1 + a1
  7015: aa ba c7 02              jump @543 if a3 == a4
      :                          @479
  7019: 64 7c                    a5 = a0
  7021: 82 97                    a0 = u64 [a2]
  7023: 95 88 01                 a1 = a1 + 0x1
  7026: 95 99 10                 a2 = a2 + 0x10
  7029: ae c7 ef                 jump @478 if a0 >=u a5
      :                          @480
  7032: 28 c0 02                 jump @544
      :                          @481
  7035: 82 37 08                 a0 = u64 [t1 + 0x8]
  7038: 82 38 18                 a1 = u64 [t1 + 0x18]
  7041: ae 78 0f                 jump @484 if a1 >=u a0
      :                          @482
  7044: 33 07 01                 a0 = 0x1
  7047: 33 06 01                 s1 = 0x1
  7050: ab 62 2b                 jump @488 if t0 != s1
      :                          @483
  7053: 28 b2 02                 jump @545
      :                          @484
  7056: 95 39 28                 a2 = t1 + 0x28
  7059: 9a 2a 02                 a3 = 0x2 - t0
  7062: 33 07 01                 a0 = 0x1
  7065: 33 06 01                 s1 = 0x1
  7068: 01                       fallthrough
      :                          @485
  7069: c8 6a 0c                 a5 = a3 + s1
  7072: aa 7c 9f 02              jump @545 if a5 == a0
      :                          @486
  7076: 64 8b                    a4 = a1
  7078: 82 98                    a1 = u64 [a2]
  7080: 95 99 10                 a2 = a2 + 0x10
  7083: 95 66 01                 s1 = s1 + 0x1
  7086: ae b8 ef                 jump @485 if a1 >=u a4
      :                          @487
  7089: d8 26 07                 a0 = s1 <u t0
  7092: 01                       fallthrough
      :                          @488
  7093: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7096: ae 29 a0 02              jump @549 if a2 >=u t0
      :                          @489
  7100: 51 07 9b 02              jump @548 if a0 == 0
      :                          @490
  7104: 97 97 04                 a0 = a2 << 0x4
  7107: c8 73 0b                 a4 = t1 + a0
  7110: 97 65 04                 s0 = s1 << 0x4
  7113: 82 b7 08                 a0 = u64 [a4 + 0x8]
  7116: c8 35 05                 s0 = s0 + t1
  7119: 82 58 08                 a1 = u64 [s0 + 0x8]
  7122: 7b 17 20                 u64 [sp + 0x20] = a0
  7125: 82 b7                    a0 = u64 [a4]
  7127: 7b b8 08                 u64 [a4 + 0x8] = a1
  7130: 82 58                    a1 = u64 [s0]
  7132: 82 1a 20                 a3 = u64 [sp + 0x20]
  7135: 7b 17 18                 u64 [sp + 0x18] = a0
  7138: 82 17 18                 a0 = u64 [sp + 0x18]
  7141: 7b b8                    u64 [a4] = a1
  7143: 7b 5a 08                 u64 [s0 + 0x8] = a3
  7146: 7b 57                    u64 [s0] = a0
  7148: 7b 12 08                 u64 [sp + 0x8] = t0
  7151: 7b 13 10                 u64 [sp + 0x10] = t1
  7154: 53 16 02 24              jump @494 if s1 <u 2
      :                          @491
  7158: 64 37                    a0 = t1
  7160: 64 68                    a1 = s1
  7162: 7b 1b                    u64 [sp] = a4
  7164: 50 20 0e 01 1d 0d        ra = 270, jump @813
      :                          @492 [@dyn 135]
  7170: 82 17 10                 a0 = u64 [sp + 0x10]
  7173: 64 68                    a1 = s1
  7175: 50 20 10 01 29 0f        ra = 272, jump @869
      :                          @493 [@dyn 136]
  7181: 82 1b                    a4 = u64 [sp]
  7183: 82 13 10                 t1 = u64 [sp + 0x10]
  7186: 82 12 08                 t0 = u64 [sp + 0x8]
  7189: 01                       fallthrough
      :                          @494
  7190: ae 26 3b 02              jump @547 if s1 >=u t0
      :                          @495
  7194: 82 b9 08                 a2 = u64 [a4 + 0x8]
  7197: 82 57 08                 a0 = u64 [s0 + 0x8]
  7200: 33 08 01                 a1 = 0x1
  7203: ac 97 1f                 jump @500 if a0 <u a2
      :                          @496
  7206: 95 55 18                 s0 = s0 + 0x18
  7209: 95 28 ff                 a1 = t0 + 0xffffffffffffffff
  7212: 01                       fallthrough
      :                          @497
  7213: aa 68 fc 01              jump @542 if a1 == s1
      :                          @498
  7217: 64 79                    a2 = a0
  7219: 82 57                    a0 = u64 [s0]
  7221: 95 55 10                 s0 = s0 + 0x10
  7224: 95 66 01                 s1 = s1 + 0x1
  7227: ae 97 f2                 jump @497 if a0 >=u a2
      :                          @499
  7230: d8 26 08                 a1 = s1 <u t0
  7233: 01                       fallthrough
      :                          @500
  7234: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7237: ae 29 13 02              jump @549 if a2 >=u t0
      :                          @501
  7241: 51 08 0e 02              jump @548 if a1 == 0
      :                          @502
  7245: 97 97 04                 a0 = a2 << 0x4
  7248: c8 73 0b                 a4 = t1 + a0
  7251: 97 65 04                 s0 = s1 << 0x4
  7254: 82 b7 08                 a0 = u64 [a4 + 0x8]
  7257: c8 35 05                 s0 = s0 + t1
  7260: 82 58 08                 a1 = u64 [s0 + 0x8]
  7263: 7b 17 20                 u64 [sp + 0x20] = a0
  7266: 82 b7                    a0 = u64 [a4]
  7268: 7b b8 08                 u64 [a4 + 0x8] = a1
  7271: 82 58                    a1 = u64 [s0]
  7273: 82 1a 20                 a3 = u64 [sp + 0x20]
  7276: 7b 17 18                 u64 [sp + 0x18] = a0
  7279: 82 17 18                 a0 = u64 [sp + 0x18]
  7282: 7b b8                    u64 [a4] = a1
  7284: 7b 5a 08                 u64 [s0 + 0x8] = a3
  7287: 7b 57                    u64 [s0] = a0
  7289: 53 16 02 24              jump @506 if s1 <u 2
      :                          @503
  7293: 64 37                    a0 = t1
  7295: 64 68                    a1 = s1
  7297: 7b 1b                    u64 [sp] = a4
  7299: 50 20 12 01 96 0c        ra = 274, jump @813
      :                          @504 [@dyn 137]
  7305: 82 17 10                 a0 = u64 [sp + 0x10]
  7308: 64 68                    a1 = s1
  7310: 50 20 14 01 a2 0e        ra = 276, jump @869
      :                          @505 [@dyn 138]
  7316: 82 1b                    a4 = u64 [sp]
  7318: 82 13 10                 t1 = u64 [sp + 0x10]
  7321: 82 12 08                 t0 = u64 [sp + 0x8]
  7324: 01                       fallthrough
      :                          @506
  7325: ae 26 b4 01              jump @547 if s1 >=u t0
      :                          @507
  7329: 82 b9 08                 a2 = u64 [a4 + 0x8]
  7332: 82 57 08                 a0 = u64 [s0 + 0x8]
  7335: 33 08 01                 a1 = 0x1
  7338: ac 97 1f                 jump @512 if a0 <u a2
      :                          @508
  7341: 95 55 18                 s0 = s0 + 0x18
  7344: 95 28 ff                 a1 = t0 + 0xffffffffffffffff
  7347: 01                       fallthrough
      :                          @509
  7348: aa 68 75 01              jump @542 if a1 == s1
      :                          @510
  7352: 64 79                    a2 = a0
  7354: 82 57                    a0 = u64 [s0]
  7356: 95 55 10                 s0 = s0 + 0x10
  7359: 95 66 01                 s1 = s1 + 0x1
  7362: ae 97 f2                 jump @509 if a0 >=u a2
      :                          @511
  7365: d8 26 08                 a1 = s1 <u t0
  7368: 01                       fallthrough
      :                          @512
  7369: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7372: ae 29 8c 01              jump @549 if a2 >=u t0
      :                          @513
  7376: 51 08 87 01              jump @548 if a1 == 0
      :                          @514
  7380: 97 97 04                 a0 = a2 << 0x4
  7383: c8 73 0b                 a4 = t1 + a0
  7386: 97 65 04                 s0 = s1 << 0x4
  7389: 82 b7 08                 a0 = u64 [a4 + 0x8]
  7392: c8 35 05                 s0 = s0 + t1
  7395: 82 58 08                 a1 = u64 [s0 + 0x8]
  7398: 7b 17 20                 u64 [sp + 0x20] = a0
  7401: 82 b7                    a0 = u64 [a4]
  7403: 7b b8 08                 u64 [a4 + 0x8] = a1
  7406: 82 58                    a1 = u64 [s0]
  7408: 82 1a 20                 a3 = u64 [sp + 0x20]
  7411: 7b 17 18                 u64 [sp + 0x18] = a0
  7414: 82 17 18                 a0 = u64 [sp + 0x18]
  7417: 7b b8                    u64 [a4] = a1
  7419: 7b 5a 08                 u64 [s0 + 0x8] = a3
  7422: 7b 57                    u64 [s0] = a0
  7424: 53 16 02 24              jump @518 if s1 <u 2
      :                          @515
  7428: 64 37                    a0 = t1
  7430: 64 68                    a1 = s1
  7432: 7b 1b                    u64 [sp] = a4
  7434: 50 20 16 01 0f 0c        ra = 278, jump @813
      :                          @516 [@dyn 139]
  7440: 82 17 10                 a0 = u64 [sp + 0x10]
  7443: 64 68                    a1 = s1
  7445: 50 20 18 01 1b 0e        ra = 280, jump @869
      :                          @517 [@dyn 140]
  7451: 82 1b                    a4 = u64 [sp]
  7453: 82 13 10                 t1 = u64 [sp + 0x10]
  7456: 82 12 08                 t0 = u64 [sp + 0x8]
  7459: 01                       fallthrough
      :                          @518
  7460: ae 26 2d 01              jump @547 if s1 >=u t0
      :                          @519
  7464: 82 b9 08                 a2 = u64 [a4 + 0x8]
  7467: 82 57 08                 a0 = u64 [s0 + 0x8]
  7470: 33 08 01                 a1 = 0x1
  7473: ac 97 1f                 jump @524 if a0 <u a2
      :                          @520
  7476: 95 55 18                 s0 = s0 + 0x18
  7479: 95 28 ff                 a1 = t0 + 0xffffffffffffffff
  7482: 01                       fallthrough
      :                          @521
  7483: aa 68 ee 00              jump @542 if a1 == s1
      :                          @522
  7487: 64 79                    a2 = a0
  7489: 82 57                    a0 = u64 [s0]
  7491: 95 55 10                 s0 = s0 + 0x10
  7494: 95 66 01                 s1 = s1 + 0x1
  7497: ae 97 f2                 jump @521 if a0 >=u a2
      :                          @523
  7500: d8 26 08                 a1 = s1 <u t0
  7503: 01                       fallthrough
      :                          @524
  7504: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7507: ae 29 05 01              jump @549 if a2 >=u t0
      :                          @525
  7511: 51 08 00 01              jump @548 if a1 == 0
      :                          @526
  7515: 97 97 04                 a0 = a2 << 0x4
  7518: c8 73 0b                 a4 = t1 + a0
  7521: 97 65 04                 s0 = s1 << 0x4
  7524: 82 b7 08                 a0 = u64 [a4 + 0x8]
  7527: c8 35 05                 s0 = s0 + t1
  7530: 82 58 08                 a1 = u64 [s0 + 0x8]
  7533: 7b 17 20                 u64 [sp + 0x20] = a0
  7536: 82 b7                    a0 = u64 [a4]
  7538: 7b b8 08                 u64 [a4 + 0x8] = a1
  7541: 82 58                    a1 = u64 [s0]
  7543: 82 1a 20                 a3 = u64 [sp + 0x20]
  7546: 7b 17 18                 u64 [sp + 0x18] = a0
  7549: 82 17 18                 a0 = u64 [sp + 0x18]
  7552: 7b b8                    u64 [a4] = a1
  7554: 7b 5a 08                 u64 [s0 + 0x8] = a3
  7557: 7b 57                    u64 [s0] = a0
  7559: 53 16 02 24              jump @530 if s1 <u 2
      :                          @527
  7563: 64 37                    a0 = t1
  7565: 64 68                    a1 = s1
  7567: 7b 1b                    u64 [sp] = a4
  7569: 50 20 1a 01 88 0b        ra = 282, jump @813
      :                          @528 [@dyn 141]
  7575: 82 17 10                 a0 = u64 [sp + 0x10]
  7578: 64 68                    a1 = s1
  7580: 50 20 1c 01 94 0d        ra = 284, jump @869
      :                          @529 [@dyn 142]
  7586: 82 1b                    a4 = u64 [sp]
  7588: 82 13 10                 t1 = u64 [sp + 0x10]
  7591: 82 12 08                 t0 = u64 [sp + 0x8]
  7594: 01                       fallthrough
      :                          @530
  7595: ae 26 a6 00              jump @547 if s1 >=u t0
      :                          @531
  7599: 82 b9 08                 a2 = u64 [a4 + 0x8]
  7602: 82 57 08                 a0 = u64 [s0 + 0x8]
  7605: 33 08 01                 a1 = 0x1
  7608: ac 97 1e                 jump @536 if a0 <u a2
      :                          @532
  7611: 95 55 18                 s0 = s0 + 0x18
  7614: 95 28 ff                 a1 = t0 + 0xffffffffffffffff
  7617: 01                       fallthrough
      :                          @533
  7618: aa 68 67                 jump @542 if a1 == s1
      :                          @534
  7621: 64 79                    a2 = a0
  7623: 82 57                    a0 = u64 [s0]
  7625: 95 55 10                 s0 = s0 + 0x10
  7628: 95 66 01                 s1 = s1 + 0x1
  7631: ae 97 f3                 jump @533 if a0 >=u a2
      :                          @535
  7634: d8 26 08                 a1 = s1 <u t0
  7637: 01                       fallthrough
      :                          @536
  7638: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7641: ae 29 7f                 jump @549 if a2 >=u t0
      :                          @537
  7644: 51 08 7b                 jump @548 if a1 == 0
      :                          @538
  7647: 97 97 04                 a0 = a2 << 0x4
  7650: c8 37 07                 a0 = a0 + t1
  7653: 97 68 04                 a1 = s1 << 0x4
  7656: 82 7a 08                 a3 = u64 [a0 + 0x8]
  7659: c8 38 08                 a1 = a1 + t1
  7662: 82 8b 08                 a4 = u64 [a1 + 0x8]
  7665: 7b 1a 20                 u64 [sp + 0x20] = a3
  7668: 82 7a                    a3 = u64 [a0]
  7670: 7b 7b 08                 u64 [a0 + 0x8] = a4
  7673: 82 8b                    a4 = u64 [a1]
  7675: 82 1c 20                 a5 = u64 [sp + 0x20]
  7678: 7b 1a 18                 u64 [sp + 0x18] = a3
  7681: 82 1a 18                 a3 = u64 [sp + 0x18]
  7684: 7b 7b                    u64 [a0] = a4
  7686: 7b 8c 08                 u64 [a1 + 0x8] = a5
  7689: 7b 8a                    u64 [a1] = a3
  7691: 53 16 02 42              jump @546 if s1 <u 2
      :                          @539
  7695: 64 37                    a0 = t1
  7697: 64 68                    a1 = s1
  7699: 64 35                    s0 = t1
  7701: 50 20 1e 01 04 0b        ra = 286, jump @813
      :                          @540 [@dyn 143]
  7707: 64 57                    a0 = s0
  7709: 64 68                    a1 = s1
  7711: 50 20 20 01 11 0d        ra = 288, jump @869
      :                          @541 [@dyn 144]
  7717: 33 07                    a0 = 0
  7719: 28 18                    jump @545
      :                          @542
  7721: 33 07 01                 a0 = 0x1
  7724: 28 13                    jump @545
      :                          @543
  7726: 64 28                    a1 = t0
  7728: d3 28 07                 a0 = a1 ^ t0
  7731: 88 77 01                 a0 = a0 <u 0x1
  7734: 28 09                    jump @545
      :                          @544
  7736: d3 28 07                 a0 = a1 ^ t0
  7739: 88 77 01                 a0 = a0 <u 0x1
  7742: 01                       fallthrough
      :                          @545
  7743: 82 10 38                 ra = u64 [sp + 0x38]
  7746: 82 15 30                 s0 = u64 [sp + 0x30]
  7749: 82 16 28                 s1 = u64 [sp + 0x28]
  7752: 95 11 40                 sp = sp + 0x40
  7755: 32 00                    ret
      :                          @546
  7757: 33 07                    a0 = 0
  7759: 28 f0                    jump @545
      :                          @547
  7761: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7764: ae 29 04                 jump @549 if a2 >=u t0
      :                          @548
  7767: 00                       trap
      :                          @549
  7768: 00                       trap
      :                          @550
  7769: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  7772: 7b 10 38                 u64 [sp + 0x38] = ra
  7775: 7b 15 30                 u64 [sp + 0x30] = s0
  7778: 7b 16 28                 u64 [sp + 0x28] = s1
  7781: 64 83                    t1 = a1
  7783: 64 70                    ra = a0
  7785: 55 18 32 58              jump @556 if a1 >=u 50
      :                          @551
  7789: 82 07 10                 a0 = u64 [ra + 0x10]
  7792: 82 08                    a1 = u64 [ra]
  7794: 82 09 18                 a2 = u64 [ra + 0x18]
  7797: 82 0a 08                 a3 = u64 [ra + 0x8]
  7800: d9 87 0b                 a4 = a0 <s a1
  7803: d3 78 08                 a1 = a1 ^ a0
  7806: d9 a9 09                 a2 = a2 <s a3
  7809: db 8b 09                 a2 = a4 if a1 != 0
  7812: 33 08 01                 a1 = 0x1
  7815: 52 09 a7 03              jump @619 if a2 != 0
      :                          @552
  7819: 95 09 28                 a2 = ra + 0x28
  7822: 9a 3a 02                 a3 = 0x2 - t1
  7825: 33 02 01                 t0 = 0x1
  7828: 33 08 01                 a1 = 0x1
  7831: 01                       fallthrough
      :                          @553
  7832: c8 8a 0b                 a4 = a3 + a1
  7835: aa 2b 89 03              jump @618 if a4 == t0
      :                          @554
  7839: 82 9c f8                 a5 = u64 [a2 + 0xfffffffffffffff8]
  7842: 82 96                    s1 = u64 [a2]
  7844: 82 95 f0                 s0 = u64 [a2 + 0xfffffffffffffff0]
  7847: 95 88 01                 a1 = a1 + 0x1
  7850: d9 7c 0b                 a4 = a5 <s a0
  7853: d3 c7 07                 a0 = a0 ^ a5
  7856: d9 56 06                 s1 = s1 <s s0
  7859: db 7b 06                 s1 = a4 if a0 != 0
  7862: 95 99 10                 a2 = a2 + 0x10
  7865: 64 c7                    a0 = a5
  7867: 51 06 dd                 jump @553 if s1 == 0
      :                          @555
  7870: 28 70 03                 jump @619
      :                          @556
  7873: 82 07                    a0 = u64 [ra]
  7875: 82 09 10                 a2 = u64 [ra + 0x10]
  7878: 82 0a 08                 a3 = u64 [ra + 0x8]
  7881: 82 05 18                 s0 = u64 [ra + 0x18]
  7884: d9 79 0b                 a4 = a2 <s a0
  7887: d3 97 07                 a0 = a0 ^ a2
  7890: d9 a5 0a                 a3 = s0 <s a3
  7893: db 7b 0a                 a3 = a4 if a0 != 0
  7896: 51 0a 0f                 jump @559 if a3 == 0
      :                          @557
  7899: 33 07 01                 a0 = 0x1
  7902: 33 04 01                 t2 = 0x1
  7905: ab 43 3c                 jump @563 if t1 != t2
      :                          @558
  7908: 28 51 03                 jump @620
      :                          @559
  7911: 95 0a 28                 a3 = ra + 0x28
  7914: 9a 32 02                 t0 = 0x2 - t1
  7917: 33 07 01                 a0 = 0x1
  7920: 33 04 01                 t2 = 0x1
  7923: 01                       fallthrough
      :                          @560
  7924: c8 42 08                 a1 = t0 + t2
  7927: aa 78 3e 03              jump @620 if a1 == a0
      :                          @561
  7931: 82 ac f8                 a5 = u64 [a3 + 0xfffffffffffffff8]
  7934: 82 a8                    a1 = u64 [a3]
  7936: d9 9c 0b                 a4 = a5 <s a2
  7939: d3 c9 09                 a2 = a2 ^ a5
  7942: d9 58 06                 s1 = a1 <s s0
  7945: db 9b 06                 s1 = a4 if a2 != 0
  7948: 95 aa 10                 a3 = a3 + 0x10
  7951: 95 44 01                 t2 = t2 + 0x1
  7954: 64 85                    s0 = a1
  7956: 64 c9                    a2 = a5
  7958: 51 06 de                 jump @560 if s1 == 0
      :                          @562
  7961: d8 34 07                 a0 = t2 <u t1
  7964: 01                       fallthrough
      :                          @563
  7965: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  7968: ae 39 2e 03              jump @624 if a2 >=u t1
      :                          @564
  7972: 51 07 29 03              jump @623 if a0 == 0
      :                          @565
  7976: 97 95 04                 s0 = a2 << 0x4
  7979: c8 05 05                 s0 = s0 + ra
  7982: 97 47 04                 a0 = t2 << 0x4
  7985: 82 58 08                 a1 = u64 [s0 + 0x8]
  7988: c8 70 06                 s1 = ra + a0
  7991: 82 67 08                 a0 = u64 [s1 + 0x8]
  7994: 7b 18 20                 u64 [sp + 0x20] = a1
  7997: 82 58                    a1 = u64 [s0]
  7999: 7b 57 08                 u64 [s0 + 0x8] = a0
  8002: 82 67                    a0 = u64 [s1]
  8004: 82 1a 20                 a3 = u64 [sp + 0x20]
  8007: 7b 18 18                 u64 [sp + 0x18] = a1
  8010: 82 18 18                 a1 = u64 [sp + 0x18]
  8013: 7b 57                    u64 [s0] = a0
  8015: 7b 6a 08                 u64 [s1 + 0x8] = a3
  8018: 7b 68                    u64 [s1] = a1
  8020: 7b 13                    u64 [sp] = t1
  8022: 7b 10 08                 u64 [sp + 0x8] = ra
  8025: 53 14 02 26              jump @569 if t2 <u 2
      :                          @566
  8029: 64 07                    a0 = ra
  8031: 64 48                    a1 = t2
  8033: 7b 14 10                 u64 [sp + 0x10] = t2
  8036: 50 20 22 01 8a 08        ra = 290, jump @788
      :                          @567 [@dyn 145]
  8042: 82 17 08                 a0 = u64 [sp + 0x8]
  8045: 82 18 10                 a1 = u64 [sp + 0x10]
  8048: 50 20 24 01 32 0b        ra = 292, jump @859
      :                          @568 [@dyn 146]
  8054: 82 10 08                 ra = u64 [sp + 0x8]
  8057: 82 14 10                 t2 = u64 [sp + 0x10]
  8060: 82 13                    t1 = u64 [sp]
  8062: 01                       fallthrough
      :                          @569
  8063: ae 34 c8 02              jump @622 if t2 >=u t1
      :                          @570
  8067: 82 59                    a2 = u64 [s0]
  8069: 82 68                    a1 = u64 [s1]
  8071: 82 5a 08                 a3 = u64 [s0 + 0x8]
  8074: 82 67 08                 a0 = u64 [s1 + 0x8]
  8077: d9 98 0b                 a4 = a1 <s a2
  8080: d3 89 09                 a2 = a2 ^ a1
  8083: d9 a7 0c                 a5 = a0 <s a3
  8086: db 9b 0c                 a5 = a4 if a2 != 0
  8089: 33 0a 01                 a3 = 0x1
  8092: 52 0c 30                 jump @575 if a5 != 0
      :                          @571
  8095: 95 69 18                 a2 = s1 + 0x18
  8098: 95 3a ff                 a3 = t1 + 0xffffffffffffffff
  8101: 01                       fallthrough
      :                          @572
  8102: aa 4a 79 02              jump @617 if a3 == t2
      :                          @573
  8106: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
  8109: 82 9c                    a5 = u64 [a2]
  8111: d9 8b 06                 s1 = a4 <s a1
  8114: d3 b8 08                 a1 = a1 ^ a4
  8117: d9 7c 05                 s0 = a5 <s a0
  8120: db 86 05                 s0 = s1 if a1 != 0
  8123: 95 99 10                 a2 = a2 + 0x10
  8126: 95 44 01                 t2 = t2 + 0x1
  8129: 64 c7                    a0 = a5
  8131: 64 b8                    a1 = a4
  8133: 51 05 e1                 jump @572 if s0 == 0
      :                          @574
  8136: d8 34 0a                 a3 = t2 <u t1
  8139: 01                       fallthrough
      :                          @575
  8140: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  8143: ae 39 7f 02              jump @624 if a2 >=u t1
      :                          @576
  8147: 51 0a 7a 02              jump @623 if a3 == 0
      :                          @577
  8151: 97 95 04                 s0 = a2 << 0x4
  8154: c8 05 05                 s0 = s0 + ra
  8157: 97 47 04                 a0 = t2 << 0x4
  8160: 82 58 08                 a1 = u64 [s0 + 0x8]
  8163: c8 70 06                 s1 = ra + a0
  8166: 82 67 08                 a0 = u64 [s1 + 0x8]
  8169: 7b 18 20                 u64 [sp + 0x20] = a1
  8172: 82 58                    a1 = u64 [s0]
  8174: 7b 57 08                 u64 [s0 + 0x8] = a0
  8177: 82 67                    a0 = u64 [s1]
  8179: 82 1a 20                 a3 = u64 [sp + 0x20]
  8182: 7b 18 18                 u64 [sp + 0x18] = a1
  8185: 82 18 18                 a1 = u64 [sp + 0x18]
  8188: 7b 57                    u64 [s0] = a0
  8190: 7b 6a 08                 u64 [s1 + 0x8] = a3
  8193: 7b 68                    u64 [s1] = a1
  8195: 53 14 02 26              jump @581 if t2 <u 2
      :                          @578
  8199: 64 07                    a0 = ra
  8201: 64 48                    a1 = t2
  8203: 7b 14 10                 u64 [sp + 0x10] = t2
  8206: 50 20 26 01 e0 07        ra = 294, jump @788
      :                          @579 [@dyn 147]
  8212: 82 17 08                 a0 = u64 [sp + 0x8]
  8215: 82 18 10                 a1 = u64 [sp + 0x10]
  8218: 50 20 28 01 88 0a        ra = 296, jump @859
      :                          @580 [@dyn 148]
  8224: 82 10 08                 ra = u64 [sp + 0x8]
  8227: 82 14 10                 t2 = u64 [sp + 0x10]
  8230: 82 13                    t1 = u64 [sp]
  8232: 01                       fallthrough
      :                          @581
  8233: ae 34 1e 02              jump @622 if t2 >=u t1
      :                          @582
  8237: 82 59                    a2 = u64 [s0]
  8239: 82 68                    a1 = u64 [s1]
  8241: 82 5a 08                 a3 = u64 [s0 + 0x8]
  8244: 82 67 08                 a0 = u64 [s1 + 0x8]
  8247: d9 98 0b                 a4 = a1 <s a2
  8250: d3 89 09                 a2 = a2 ^ a1
  8253: d9 a7 0c                 a5 = a0 <s a3
  8256: db 9b 0c                 a5 = a4 if a2 != 0
  8259: 33 0a 01                 a3 = 0x1
  8262: 52 0c 30                 jump @587 if a5 != 0
      :                          @583
  8265: 95 69 18                 a2 = s1 + 0x18
  8268: 95 3a ff                 a3 = t1 + 0xffffffffffffffff
  8271: 01                       fallthrough
      :                          @584
  8272: aa 4a cf 01              jump @617 if a3 == t2
      :                          @585
  8276: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
  8279: 82 9c                    a5 = u64 [a2]
  8281: d9 8b 06                 s1 = a4 <s a1
  8284: d3 b8 08                 a1 = a1 ^ a4
  8287: d9 7c 05                 s0 = a5 <s a0
  8290: db 86 05                 s0 = s1 if a1 != 0
  8293: 95 99 10                 a2 = a2 + 0x10
  8296: 95 44 01                 t2 = t2 + 0x1
  8299: 64 c7                    a0 = a5
  8301: 64 b8                    a1 = a4
  8303: 51 05 e1                 jump @584 if s0 == 0
      :                          @586
  8306: d8 34 0a                 a3 = t2 <u t1
  8309: 01                       fallthrough
      :                          @587
  8310: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  8313: ae 39 d5 01              jump @624 if a2 >=u t1
      :                          @588
  8317: 51 0a d0 01              jump @623 if a3 == 0
      :                          @589
  8321: 97 95 04                 s0 = a2 << 0x4
  8324: c8 05 05                 s0 = s0 + ra
  8327: 97 47 04                 a0 = t2 << 0x4
  8330: 82 58 08                 a1 = u64 [s0 + 0x8]
  8333: c8 70 06                 s1 = ra + a0
  8336: 82 67 08                 a0 = u64 [s1 + 0x8]
  8339: 7b 18 20                 u64 [sp + 0x20] = a1
  8342: 82 58                    a1 = u64 [s0]
  8344: 7b 57 08                 u64 [s0 + 0x8] = a0
  8347: 82 67                    a0 = u64 [s1]
  8349: 82 1a 20                 a3 = u64 [sp + 0x20]
  8352: 7b 18 18                 u64 [sp + 0x18] = a1
  8355: 82 18 18                 a1 = u64 [sp + 0x18]
  8358: 7b 57                    u64 [s0] = a0
  8360: 7b 6a 08                 u64 [s1 + 0x8] = a3
  8363: 7b 68                    u64 [s1] = a1
  8365: 53 14 02 26              jump @593 if t2 <u 2
      :                          @590
  8369: 64 07                    a0 = ra
  8371: 64 48                    a1 = t2
  8373: 7b 14 10                 u64 [sp + 0x10] = t2
  8376: 50 20 2a 01 36 07        ra = 298, jump @788
      :                          @591 [@dyn 149]
  8382: 82 17 08                 a0 = u64 [sp + 0x8]
  8385: 82 18 10                 a1 = u64 [sp + 0x10]
  8388: 50 20 2c 01 de 09        ra = 300, jump @859
      :                          @592 [@dyn 150]
  8394: 82 10 08                 ra = u64 [sp + 0x8]
  8397: 82 14 10                 t2 = u64 [sp + 0x10]
  8400: 82 13                    t1 = u64 [sp]
  8402: 01                       fallthrough
      :                          @593
  8403: ae 34 74 01              jump @622 if t2 >=u t1
      :                          @594
  8407: 82 59                    a2 = u64 [s0]
  8409: 82 68                    a1 = u64 [s1]
  8411: 82 5a 08                 a3 = u64 [s0 + 0x8]
  8414: 82 67 08                 a0 = u64 [s1 + 0x8]
  8417: d9 98 0b                 a4 = a1 <s a2
  8420: d3 89 09                 a2 = a2 ^ a1
  8423: d9 a7 0c                 a5 = a0 <s a3
  8426: db 9b 0c                 a5 = a4 if a2 != 0
  8429: 33 0a 01                 a3 = 0x1
  8432: 52 0c 30                 jump @599 if a5 != 0
      :                          @595
  8435: 95 69 18                 a2 = s1 + 0x18
  8438: 95 3a ff                 a3 = t1 + 0xffffffffffffffff
  8441: 01                       fallthrough
      :                          @596
  8442: aa 4a 25 01              jump @617 if a3 == t2
      :                          @597
  8446: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
  8449: 82 9c                    a5 = u64 [a2]
  8451: d9 8b 06                 s1 = a4 <s a1
  8454: d3 b8 08                 a1 = a1 ^ a4
  8457: d9 7c 05                 s0 = a5 <s a0
  8460: db 86 05                 s0 = s1 if a1 != 0
  8463: 95 99 10                 a2 = a2 + 0x10
  8466: 95 44 01                 t2 = t2 + 0x1
  8469: 64 c7                    a0 = a5
  8471: 64 b8                    a1 = a4
  8473: 51 05 e1                 jump @596 if s0 == 0
      :                          @598
  8476: d8 34 0a                 a3 = t2 <u t1
  8479: 01                       fallthrough
      :                          @599
  8480: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  8483: ae 39 2b 01              jump @624 if a2 >=u t1
      :                          @600
  8487: 51 0a 26 01              jump @623 if a3 == 0
      :                          @601
  8491: 97 95 04                 s0 = a2 << 0x4
  8494: c8 05 05                 s0 = s0 + ra
  8497: 97 47 04                 a0 = t2 << 0x4
  8500: 82 58 08                 a1 = u64 [s0 + 0x8]
  8503: c8 70 06                 s1 = ra + a0
  8506: 82 67 08                 a0 = u64 [s1 + 0x8]
  8509: 7b 18 20                 u64 [sp + 0x20] = a1
  8512: 82 58                    a1 = u64 [s0]
  8514: 7b 57 08                 u64 [s0 + 0x8] = a0
  8517: 82 67                    a0 = u64 [s1]
  8519: 82 1a 20                 a3 = u64 [sp + 0x20]
  8522: 7b 18 18                 u64 [sp + 0x18] = a1
  8525: 82 18 18                 a1 = u64 [sp + 0x18]
  8528: 7b 57                    u64 [s0] = a0
  8530: 7b 6a 08                 u64 [s1 + 0x8] = a3
  8533: 7b 68                    u64 [s1] = a1
  8535: 53 14 02 26              jump @605 if t2 <u 2
      :                          @602
  8539: 64 07                    a0 = ra
  8541: 64 48                    a1 = t2
  8543: 7b 14 10                 u64 [sp + 0x10] = t2
  8546: 50 20 2e 01 8c 06        ra = 302, jump @788
      :                          @603 [@dyn 151]
  8552: 82 17 08                 a0 = u64 [sp + 0x8]
  8555: 82 18 10                 a1 = u64 [sp + 0x10]
  8558: 50 20 30 01 34 09        ra = 304, jump @859
      :                          @604 [@dyn 152]
  8564: 82 10 08                 ra = u64 [sp + 0x8]
  8567: 82 14 10                 t2 = u64 [sp + 0x10]
  8570: 82 13                    t1 = u64 [sp]
  8572: 01                       fallthrough
      :                          @605
  8573: ae 34 ca 00              jump @622 if t2 >=u t1
      :                          @606
  8577: 82 59                    a2 = u64 [s0]
  8579: 82 68                    a1 = u64 [s1]
  8581: 82 5a 08                 a3 = u64 [s0 + 0x8]
  8584: 82 67 08                 a0 = u64 [s1 + 0x8]
  8587: d9 98 0b                 a4 = a1 <s a2
  8590: d3 89 09                 a2 = a2 ^ a1
  8593: d9 a7 0c                 a5 = a0 <s a3
  8596: db 9b 0c                 a5 = a4 if a2 != 0
  8599: 33 0a 01                 a3 = 0x1
  8602: 52 0c 2f                 jump @611 if a5 != 0
      :                          @607
  8605: 95 69 18                 a2 = s1 + 0x18
  8608: 95 3a ff                 a3 = t1 + 0xffffffffffffffff
  8611: 01                       fallthrough
      :                          @608
  8612: aa 4a 7b                 jump @617 if a3 == t2
      :                          @609
  8615: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
  8618: 82 9c                    a5 = u64 [a2]
  8620: d9 8b 06                 s1 = a4 <s a1
  8623: d3 b8 08                 a1 = a1 ^ a4
  8626: d9 7c 05                 s0 = a5 <s a0
  8629: db 86 05                 s0 = s1 if a1 != 0
  8632: 95 99 10                 a2 = a2 + 0x10
  8635: 95 44 01                 t2 = t2 + 0x1
  8638: 64 c7                    a0 = a5
  8640: 64 b8                    a1 = a4
  8642: 51 05 e2                 jump @608 if s0 == 0
      :                          @610
  8645: d8 34 0a                 a3 = t2 <u t1
  8648: 01                       fallthrough
      :                          @611
  8649: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  8652: ae 39 82 00              jump @624 if a2 >=u t1
      :                          @612
  8656: 51 0a 7d                 jump @623 if a3 == 0
      :                          @613
  8659: 97 97 04                 a0 = a2 << 0x4
  8662: c8 07 07                 a0 = a0 + ra
  8665: 97 48 04                 a1 = t2 << 0x4
  8668: 82 7a 08                 a3 = u64 [a0 + 0x8]
  8671: c8 08 08                 a1 = a1 + ra
  8674: 82 8b 08                 a4 = u64 [a1 + 0x8]
  8677: 7b 1a 20                 u64 [sp + 0x20] = a3
  8680: 82 7a                    a3 = u64 [a0]
  8682: 7b 7b 08                 u64 [a0 + 0x8] = a4
  8685: 82 8b                    a4 = u64 [a1]
  8687: 82 1c 20                 a5 = u64 [sp + 0x20]
  8690: 7b 1a 18                 u64 [sp + 0x18] = a3
  8693: 82 1a 18                 a3 = u64 [sp + 0x18]
  8696: 7b 7b                    u64 [a0] = a4
  8698: 7b 8c 08                 u64 [a1 + 0x8] = a5
  8701: 7b 8a                    u64 [a1] = a3
  8703: 53 14 02 44              jump @621 if t2 <u 2
      :                          @614
  8707: 64 07                    a0 = ra
  8709: 64 48                    a1 = t2
  8711: 64 45                    s0 = t2
  8713: 64 06                    s1 = ra
  8715: 50 20 32 01 e3 05        ra = 306, jump @788
      :                          @615 [@dyn 153]
  8721: 64 67                    a0 = s1
  8723: 64 58                    a1 = s0
  8725: 50 20 34 01 8d 08        ra = 308, jump @859
      :                          @616 [@dyn 154]
  8731: 33 07                    a0 = 0
  8733: 28 18                    jump @620
      :                          @617
  8735: 33 07 01                 a0 = 0x1
  8738: 28 13                    jump @620
      :                          @618
  8740: 64 38                    a1 = t1
  8742: d3 38 07                 a0 = a1 ^ t1
  8745: 88 77 01                 a0 = a0 <u 0x1
  8748: 28 09                    jump @620
      :                          @619
  8750: d3 38 07                 a0 = a1 ^ t1
  8753: 88 77 01                 a0 = a0 <u 0x1
  8756: 01                       fallthrough
      :                          @620
  8757: 82 10 38                 ra = u64 [sp + 0x38]
  8760: 82 15 30                 s0 = u64 [sp + 0x30]
  8763: 82 16 28                 s1 = u64 [sp + 0x28]
  8766: 95 11 40                 sp = sp + 0x40
  8769: 32 00                    ret
      :                          @621
  8771: 33 07                    a0 = 0
  8773: 28 f0                    jump @620
      :                          @622
  8775: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  8778: ae 39 04                 jump @624 if a2 >=u t1
      :                          @623
  8781: 00                       trap
      :                          @624
  8782: 00                       trap
      :                          @625
  8783: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  8786: 7b 10 28                 u64 [sp + 0x28] = ra
  8789: 7b 15 20                 u64 [sp + 0x20] = s0
  8792: 7b 16 18                 u64 [sp + 0x18] = s1
  8795: 33 09 32                 a2 = 0x32
  8798: 64 82                    t0 = a1
  8800: 64 73                    t1 = a0
  8802: ae 98 33                 jump @631 if a1 >=u a2
      :                          @626
  8805: 82 37 08                 a0 = u64 [t1 + 0x8]
  8808: 82 39                    a2 = u64 [t1]
  8810: 33 08 01                 a1 = 0x1
  8813: ac 79 64 02              jump @694 if a2 <u a0
      :                          @627
  8817: 95 39 10                 a2 = t1 + 0x10
  8820: 9a 26 02                 s1 = 0x2 - t0
  8823: 33 0b 01                 a4 = 0x1
  8826: 33 08 01                 a1 = 0x1
  8829: 01                       fallthrough
      :                          @628
  8830: c8 86 0a                 a3 = s1 + a1
  8833: aa ba 46 02              jump @693 if a3 == a4
      :                          @629
  8837: 64 7c                    a5 = a0
  8839: 82 97                    a0 = u64 [a2]
  8841: 95 88 01                 a1 = a1 + 0x1
  8844: 95 99 08                 a2 = a2 + 0x8
  8847: ae 7c ef                 jump @628 if a5 >=u a0
      :                          @630
  8850: 28 3f 02                 jump @694
      :                          @631
  8853: 82 37                    a0 = u64 [t1]
  8855: 82 38 08                 a1 = u64 [t1 + 0x8]
  8858: ae 87 0f                 jump @634 if a0 >=u a1
      :                          @632
  8861: 33 07 01                 a0 = 0x1
  8864: 33 06 01                 s1 = 0x1
  8867: ab 62 2b                 jump @638 if t0 != s1
      :                          @633
  8870: 28 32 02                 jump @695
      :                          @634
  8873: 95 39 10                 a2 = t1 + 0x10
  8876: 9a 2a 02                 a3 = 0x2 - t0
  8879: 33 07 01                 a0 = 0x1
  8882: 33 06 01                 s1 = 0x1
  8885: 01                       fallthrough
      :                          @635
  8886: c8 6a 0c                 a5 = a3 + s1
  8889: aa 7c 1f 02              jump @695 if a5 == a0
      :                          @636
  8893: 64 8b                    a4 = a1
  8895: 82 98                    a1 = u64 [a2]
  8897: 95 99 08                 a2 = a2 + 0x8
  8900: 95 66 01                 s1 = s1 + 0x1
  8903: ae 8b ef                 jump @635 if a4 >=u a1
      :                          @637
  8906: d8 26 07                 a0 = s1 <u t0
  8909: 01                       fallthrough
      :                          @638
  8910: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  8913: ae 29 20 02              jump @699 if a2 >=u t0
      :                          @639
  8917: 51 07 1b 02              jump @698 if a0 == 0
      :                          @640
  8921: 97 95 03                 s0 = a2 << 0x3
  8924: 97 67 03                 a0 = s1 << 0x3
  8927: c8 73 0a                 a3 = t1 + a0
  8930: 82 a7                    a0 = u64 [a3]
  8932: c8 35 05                 s0 = s0 + t1
  8935: 82 58                    a1 = u64 [s0]
  8937: 7b 57                    u64 [s0] = a0
  8939: 7b a8                    u64 [a3] = a1
  8941: 7b 12 08                 u64 [sp + 0x8] = t0
  8944: 7b 13 10                 u64 [sp + 0x10] = t1
  8947: 53 16 02 24              jump @644 if s1 <u 2
      :                          @641
  8951: 64 37                    a0 = t1
  8953: 64 68                    a1 = s1
  8955: 7b 1a                    u64 [sp] = a3
  8957: 50 20 36 01 98 04        ra = 310, jump @775
      :                          @642 [@dyn 155]
  8963: 82 17 10                 a0 = u64 [sp + 0x10]
  8966: 64 68                    a1 = s1
  8968: 50 20 38 01 ec 06        ra = 312, jump @839
      :                          @643 [@dyn 156]
  8974: 82 1a                    a3 = u64 [sp]
  8976: 82 13 10                 t1 = u64 [sp + 0x10]
  8979: 82 12 08                 t0 = u64 [sp + 0x8]
  8982: 01                       fallthrough
      :                          @644
  8983: ae 26 d3 01              jump @697 if s1 >=u t0
      :                          @645
  8987: 82 59                    a2 = u64 [s0]
  8989: 82 a8                    a1 = u64 [a3]
  8991: 33 07 01                 a0 = 0x1
  8994: ac 89 1f                 jump @650 if a2 <u a1
      :                          @646
  8997: 95 a7 08                 a0 = a3 + 0x8
  9000: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  9003: 01                       fallthrough
      :                          @647
  9004: aa 69 96 01              jump @692 if a2 == s1
      :                          @648
  9008: 64 8a                    a3 = a1
  9010: 82 78                    a1 = u64 [a0]
  9012: 95 77 08                 a0 = a0 + 0x8
  9015: 95 66 01                 s1 = s1 + 0x1
  9018: ae 8a f2                 jump @647 if a3 >=u a1
      :                          @649
  9021: d8 26 07                 a0 = s1 <u t0
  9024: 01                       fallthrough
      :                          @650
  9025: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9028: ae 29 ad 01              jump @699 if a2 >=u t0
      :                          @651
  9032: 51 07 a8 01              jump @698 if a0 == 0
      :                          @652
  9036: 97 95 03                 s0 = a2 << 0x3
  9039: 97 67 03                 a0 = s1 << 0x3
  9042: c8 73 0a                 a3 = t1 + a0
  9045: 82 a7                    a0 = u64 [a3]
  9047: c8 35 05                 s0 = s0 + t1
  9050: 82 58                    a1 = u64 [s0]
  9052: 7b 57                    u64 [s0] = a0
  9054: 7b a8                    u64 [a3] = a1
  9056: 53 16 02 24              jump @656 if s1 <u 2
      :                          @653
  9060: 64 37                    a0 = t1
  9062: 64 68                    a1 = s1
  9064: 7b 1a                    u64 [sp] = a3
  9066: 50 20 3a 01 2b 04        ra = 314, jump @775
      :                          @654 [@dyn 157]
  9072: 82 17 10                 a0 = u64 [sp + 0x10]
  9075: 64 68                    a1 = s1
  9077: 50 20 3c 01 7f 06        ra = 316, jump @839
      :                          @655 [@dyn 158]
  9083: 82 1a                    a3 = u64 [sp]
  9085: 82 13 10                 t1 = u64 [sp + 0x10]
  9088: 82 12 08                 t0 = u64 [sp + 0x8]
  9091: 01                       fallthrough
      :                          @656
  9092: ae 26 66 01              jump @697 if s1 >=u t0
      :                          @657
  9096: 82 59                    a2 = u64 [s0]
  9098: 82 a8                    a1 = u64 [a3]
  9100: 33 07 01                 a0 = 0x1
  9103: ac 89 1f                 jump @662 if a2 <u a1
      :                          @658
  9106: 95 a7 08                 a0 = a3 + 0x8
  9109: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  9112: 01                       fallthrough
      :                          @659
  9113: aa 69 29 01              jump @692 if a2 == s1
      :                          @660
  9117: 64 8a                    a3 = a1
  9119: 82 78                    a1 = u64 [a0]
  9121: 95 77 08                 a0 = a0 + 0x8
  9124: 95 66 01                 s1 = s1 + 0x1
  9127: ae 8a f2                 jump @659 if a3 >=u a1
      :                          @661
  9130: d8 26 07                 a0 = s1 <u t0
  9133: 01                       fallthrough
      :                          @662
  9134: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9137: ae 29 40 01              jump @699 if a2 >=u t0
      :                          @663
  9141: 51 07 3b 01              jump @698 if a0 == 0
      :                          @664
  9145: 97 95 03                 s0 = a2 << 0x3
  9148: 97 67 03                 a0 = s1 << 0x3
  9151: c8 73 0a                 a3 = t1 + a0
  9154: 82 a7                    a0 = u64 [a3]
  9156: c8 35 05                 s0 = s0 + t1
  9159: 82 58                    a1 = u64 [s0]
  9161: 7b 57                    u64 [s0] = a0
  9163: 7b a8                    u64 [a3] = a1
  9165: 53 16 02 24              jump @668 if s1 <u 2
      :                          @665
  9169: 64 37                    a0 = t1
  9171: 64 68                    a1 = s1
  9173: 7b 1a                    u64 [sp] = a3
  9175: 50 20 3e 01 be 03        ra = 318, jump @775
      :                          @666 [@dyn 159]
  9181: 82 17 10                 a0 = u64 [sp + 0x10]
  9184: 64 68                    a1 = s1
  9186: 50 20 40 01 12 06        ra = 320, jump @839
      :                          @667 [@dyn 160]
  9192: 82 1a                    a3 = u64 [sp]
  9194: 82 13 10                 t1 = u64 [sp + 0x10]
  9197: 82 12 08                 t0 = u64 [sp + 0x8]
  9200: 01                       fallthrough
      :                          @668
  9201: ae 26 f9 00              jump @697 if s1 >=u t0
      :                          @669
  9205: 82 59                    a2 = u64 [s0]
  9207: 82 a8                    a1 = u64 [a3]
  9209: 33 07 01                 a0 = 0x1
  9212: ac 89 1f                 jump @674 if a2 <u a1
      :                          @670
  9215: 95 a7 08                 a0 = a3 + 0x8
  9218: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  9221: 01                       fallthrough
      :                          @671
  9222: aa 69 bc 00              jump @692 if a2 == s1
      :                          @672
  9226: 64 8a                    a3 = a1
  9228: 82 78                    a1 = u64 [a0]
  9230: 95 77 08                 a0 = a0 + 0x8
  9233: 95 66 01                 s1 = s1 + 0x1
  9236: ae 8a f2                 jump @671 if a3 >=u a1
      :                          @673
  9239: d8 26 07                 a0 = s1 <u t0
  9242: 01                       fallthrough
      :                          @674
  9243: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9246: ae 29 d3 00              jump @699 if a2 >=u t0
      :                          @675
  9250: 51 07 ce 00              jump @698 if a0 == 0
      :                          @676
  9254: 97 95 03                 s0 = a2 << 0x3
  9257: 97 67 03                 a0 = s1 << 0x3
  9260: c8 73 0a                 a3 = t1 + a0
  9263: 82 a7                    a0 = u64 [a3]
  9265: c8 35 05                 s0 = s0 + t1
  9268: 82 58                    a1 = u64 [s0]
  9270: 7b 57                    u64 [s0] = a0
  9272: 7b a8                    u64 [a3] = a1
  9274: 53 16 02 24              jump @680 if s1 <u 2
      :                          @677
  9278: 64 37                    a0 = t1
  9280: 64 68                    a1 = s1
  9282: 7b 1a                    u64 [sp] = a3
  9284: 50 20 42 01 51 03        ra = 322, jump @775
      :                          @678 [@dyn 161]
  9290: 82 17 10                 a0 = u64 [sp + 0x10]
  9293: 64 68                    a1 = s1
  9295: 50 20 44 01 a5 05        ra = 324, jump @839
      :                          @679 [@dyn 162]
  9301: 82 1a                    a3 = u64 [sp]
  9303: 82 13 10                 t1 = u64 [sp + 0x10]
  9306: 82 12 08                 t0 = u64 [sp + 0x8]
  9309: 01                       fallthrough
      :                          @680
  9310: ae 26 8c 00              jump @697 if s1 >=u t0
      :                          @681
  9314: 82 59                    a2 = u64 [s0]
  9316: 82 a8                    a1 = u64 [a3]
  9318: 33 07 01                 a0 = 0x1
  9321: ac 89 1e                 jump @686 if a2 <u a1
      :                          @682
  9324: 95 a7 08                 a0 = a3 + 0x8
  9327: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  9330: 01                       fallthrough
      :                          @683
  9331: aa 69 4f                 jump @692 if a2 == s1
      :                          @684
  9334: 64 8a                    a3 = a1
  9336: 82 78                    a1 = u64 [a0]
  9338: 95 77 08                 a0 = a0 + 0x8
  9341: 95 66 01                 s1 = s1 + 0x1
  9344: ae 8a f3                 jump @683 if a3 >=u a1
      :                          @685
  9347: d8 26 07                 a0 = s1 <u t0
  9350: 01                       fallthrough
      :                          @686
  9351: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9354: ae 29 67                 jump @699 if a2 >=u t0
      :                          @687
  9357: 51 07 63                 jump @698 if a0 == 0
      :                          @688
  9360: 97 97 03                 a0 = a2 << 0x3
  9363: 97 68 03                 a1 = s1 << 0x3
  9366: c8 38 08                 a1 = a1 + t1
  9369: 82 8a                    a3 = u64 [a1]
  9371: c8 37 07                 a0 = a0 + t1
  9374: 82 7b                    a4 = u64 [a0]
  9376: 7b 7a                    u64 [a0] = a3
  9378: 7b 8b                    u64 [a1] = a4
  9380: 53 16 02 42              jump @696 if s1 <u 2
      :                          @689
  9384: 64 37                    a0 = t1
  9386: 64 68                    a1 = s1
  9388: 64 35                    s0 = t1
  9390: 50 20 46 01 e7 02        ra = 326, jump @775
      :                          @690 [@dyn 163]
  9396: 64 57                    a0 = s0
  9398: 64 68                    a1 = s1
  9400: 50 20 48 01 3c 05        ra = 328, jump @839
      :                          @691 [@dyn 164]
  9406: 33 07                    a0 = 0
  9408: 28 18                    jump @695
      :                          @692
  9410: 33 07 01                 a0 = 0x1
  9413: 28 13                    jump @695
      :                          @693
  9415: 64 28                    a1 = t0
  9417: d3 28 07                 a0 = a1 ^ t0
  9420: 88 77 01                 a0 = a0 <u 0x1
  9423: 28 09                    jump @695
      :                          @694
  9425: d3 28 07                 a0 = a1 ^ t0
  9428: 88 77 01                 a0 = a0 <u 0x1
  9431: 01                       fallthrough
      :                          @695
  9432: 82 10 28                 ra = u64 [sp + 0x28]
  9435: 82 15 20                 s0 = u64 [sp + 0x20]
  9438: 82 16 18                 s1 = u64 [sp + 0x18]
  9441: 95 11 30                 sp = sp + 0x30
  9444: 32 00                    ret
      :                          @696
  9446: 33 07                    a0 = 0
  9448: 28 f0                    jump @695
      :                          @697
  9450: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9453: ae 29 04                 jump @699 if a2 >=u t0
      :                          @698
  9456: 00                       trap
      :                          @699
  9457: 00                       trap
      :                          @700
  9458: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  9461: 7b 10 28                 u64 [sp + 0x28] = ra
  9464: 7b 15 20                 u64 [sp + 0x20] = s0
  9467: 7b 16 18                 u64 [sp + 0x18] = s1
  9470: 33 09 32                 a2 = 0x32
  9473: 64 82                    t0 = a1
  9475: 64 73                    t1 = a0
  9477: ae 98 33                 jump @706 if a1 >=u a2
      :                          @701
  9480: 82 37 08                 a0 = u64 [t1 + 0x8]
  9483: 82 39                    a2 = u64 [t1]
  9485: 33 08 01                 a1 = 0x1
  9488: ad 97 64 02              jump @769 if a0 <s a2
      :                          @702
  9492: 95 39 10                 a2 = t1 + 0x10
  9495: 9a 26 02                 s1 = 0x2 - t0
  9498: 33 0b 01                 a4 = 0x1
  9501: 33 08 01                 a1 = 0x1
  9504: 01                       fallthrough
      :                          @703
  9505: c8 86 0a                 a3 = s1 + a1
  9508: aa ba 46 02              jump @768 if a3 == a4
      :                          @704
  9512: 64 7c                    a5 = a0
  9514: 82 97                    a0 = u64 [a2]
  9516: 95 88 01                 a1 = a1 + 0x1
  9519: 95 99 08                 a2 = a2 + 0x8
  9522: af c7 ef                 jump @703 if a0 >=s a5
      :                          @705
  9525: 28 3f 02                 jump @769
      :                          @706
  9528: 82 37                    a0 = u64 [t1]
  9530: 82 38 08                 a1 = u64 [t1 + 0x8]
  9533: af 78 0f                 jump @709 if a1 >=s a0
      :                          @707
  9536: 33 07 01                 a0 = 0x1
  9539: 33 06 01                 s1 = 0x1
  9542: ab 62 2b                 jump @713 if t0 != s1
      :                          @708
  9545: 28 32 02                 jump @770
      :                          @709
  9548: 95 39 10                 a2 = t1 + 0x10
  9551: 9a 2a 02                 a3 = 0x2 - t0
  9554: 33 07 01                 a0 = 0x1
  9557: 33 06 01                 s1 = 0x1
  9560: 01                       fallthrough
      :                          @710
  9561: c8 6a 0c                 a5 = a3 + s1
  9564: aa 7c 1f 02              jump @770 if a5 == a0
      :                          @711
  9568: 64 8b                    a4 = a1
  9570: 82 98                    a1 = u64 [a2]
  9572: 95 99 08                 a2 = a2 + 0x8
  9575: 95 66 01                 s1 = s1 + 0x1
  9578: af b8 ef                 jump @710 if a1 >=s a4
      :                          @712
  9581: d8 26 07                 a0 = s1 <u t0
  9584: 01                       fallthrough
      :                          @713
  9585: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9588: ae 29 20 02              jump @774 if a2 >=u t0
      :                          @714
  9592: 51 07 1b 02              jump @773 if a0 == 0
      :                          @715
  9596: 97 95 03                 s0 = a2 << 0x3
  9599: 97 67 03                 a0 = s1 << 0x3
  9602: c8 73 0a                 a3 = t1 + a0
  9605: 82 a7                    a0 = u64 [a3]
  9607: c8 35 05                 s0 = s0 + t1
  9610: 82 58                    a1 = u64 [s0]
  9612: 7b 57                    u64 [s0] = a0
  9614: 7b a8                    u64 [a3] = a1
  9616: 7b 12 08                 u64 [sp + 0x8] = t0
  9619: 7b 13 10                 u64 [sp + 0x10] = t1
  9622: 53 16 02 24              jump @719 if s1 <u 2
      :                          @716
  9626: 64 37                    a0 = t1
  9628: 64 68                    a1 = s1
  9630: 7b 1a                    u64 [sp] = a3
  9632: 50 20 4a 01 fb 03        ra = 330, jump @826
      :                          @717 [@dyn 165]
  9638: 82 17 10                 a0 = u64 [sp + 0x10]
  9641: 64 68                    a1 = s1
  9643: 50 20 4c 01 a0 04        ra = 332, jump @849
      :                          @718 [@dyn 166]
  9649: 82 1a                    a3 = u64 [sp]
  9651: 82 13 10                 t1 = u64 [sp + 0x10]
  9654: 82 12 08                 t0 = u64 [sp + 0x8]
  9657: 01                       fallthrough
      :                          @719
  9658: ae 26 d3 01              jump @772 if s1 >=u t0
      :                          @720
  9662: 82 59                    a2 = u64 [s0]
  9664: 82 a8                    a1 = u64 [a3]
  9666: 33 07 01                 a0 = 0x1
  9669: ad 98 1f                 jump @725 if a1 <s a2
      :                          @721
  9672: 95 a7 08                 a0 = a3 + 0x8
  9675: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  9678: 01                       fallthrough
      :                          @722
  9679: aa 69 96 01              jump @767 if a2 == s1
      :                          @723
  9683: 64 8a                    a3 = a1
  9685: 82 78                    a1 = u64 [a0]
  9687: 95 77 08                 a0 = a0 + 0x8
  9690: 95 66 01                 s1 = s1 + 0x1
  9693: af a8 f2                 jump @722 if a1 >=s a3
      :                          @724
  9696: d8 26 07                 a0 = s1 <u t0
  9699: 01                       fallthrough
      :                          @725
  9700: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9703: ae 29 ad 01              jump @774 if a2 >=u t0
      :                          @726
  9707: 51 07 a8 01              jump @773 if a0 == 0
      :                          @727
  9711: 97 95 03                 s0 = a2 << 0x3
  9714: 97 67 03                 a0 = s1 << 0x3
  9717: c8 73 0a                 a3 = t1 + a0
  9720: 82 a7                    a0 = u64 [a3]
  9722: c8 35 05                 s0 = s0 + t1
  9725: 82 58                    a1 = u64 [s0]
  9727: 7b 57                    u64 [s0] = a0
  9729: 7b a8                    u64 [a3] = a1
  9731: 53 16 02 24              jump @731 if s1 <u 2
      :                          @728
  9735: 64 37                    a0 = t1
  9737: 64 68                    a1 = s1
  9739: 7b 1a                    u64 [sp] = a3
  9741: 50 20 4e 01 8e 03        ra = 334, jump @826
      :                          @729 [@dyn 167]
  9747: 82 17 10                 a0 = u64 [sp + 0x10]
  9750: 64 68                    a1 = s1
  9752: 50 20 50 01 33 04        ra = 336, jump @849
      :                          @730 [@dyn 168]
  9758: 82 1a                    a3 = u64 [sp]
  9760: 82 13 10                 t1 = u64 [sp + 0x10]
  9763: 82 12 08                 t0 = u64 [sp + 0x8]
  9766: 01                       fallthrough
      :                          @731
  9767: ae 26 66 01              jump @772 if s1 >=u t0
      :                          @732
  9771: 82 59                    a2 = u64 [s0]
  9773: 82 a8                    a1 = u64 [a3]
  9775: 33 07 01                 a0 = 0x1
  9778: ad 98 1f                 jump @737 if a1 <s a2
      :                          @733
  9781: 95 a7 08                 a0 = a3 + 0x8
  9784: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  9787: 01                       fallthrough
      :                          @734
  9788: aa 69 29 01              jump @767 if a2 == s1
      :                          @735
  9792: 64 8a                    a3 = a1
  9794: 82 78                    a1 = u64 [a0]
  9796: 95 77 08                 a0 = a0 + 0x8
  9799: 95 66 01                 s1 = s1 + 0x1
  9802: af a8 f2                 jump @734 if a1 >=s a3
      :                          @736
  9805: d8 26 07                 a0 = s1 <u t0
  9808: 01                       fallthrough
      :                          @737
  9809: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9812: ae 29 40 01              jump @774 if a2 >=u t0
      :                          @738
  9816: 51 07 3b 01              jump @773 if a0 == 0
      :                          @739
  9820: 97 95 03                 s0 = a2 << 0x3
  9823: 97 67 03                 a0 = s1 << 0x3
  9826: c8 73 0a                 a3 = t1 + a0
  9829: 82 a7                    a0 = u64 [a3]
  9831: c8 35 05                 s0 = s0 + t1
  9834: 82 58                    a1 = u64 [s0]
  9836: 7b 57                    u64 [s0] = a0
  9838: 7b a8                    u64 [a3] = a1
  9840: 53 16 02 24              jump @743 if s1 <u 2
      :                          @740
  9844: 64 37                    a0 = t1
  9846: 64 68                    a1 = s1
  9848: 7b 1a                    u64 [sp] = a3
  9850: 50 20 52 01 21 03        ra = 338, jump @826
      :                          @741 [@dyn 169]
  9856: 82 17 10                 a0 = u64 [sp + 0x10]
  9859: 64 68                    a1 = s1
  9861: 50 20 54 01 c6 03        ra = 340, jump @849
      :                          @742 [@dyn 170]
  9867: 82 1a                    a3 = u64 [sp]
  9869: 82 13 10                 t1 = u64 [sp + 0x10]
  9872: 82 12 08                 t0 = u64 [sp + 0x8]
  9875: 01                       fallthrough
      :                          @743
  9876: ae 26 f9 00              jump @772 if s1 >=u t0
      :                          @744
  9880: 82 59                    a2 = u64 [s0]
  9882: 82 a8                    a1 = u64 [a3]
  9884: 33 07 01                 a0 = 0x1
  9887: ad 98 1f                 jump @749 if a1 <s a2
      :                          @745
  9890: 95 a7 08                 a0 = a3 + 0x8
  9893: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  9896: 01                       fallthrough
      :                          @746
  9897: aa 69 bc 00              jump @767 if a2 == s1
      :                          @747
  9901: 64 8a                    a3 = a1
  9903: 82 78                    a1 = u64 [a0]
  9905: 95 77 08                 a0 = a0 + 0x8
  9908: 95 66 01                 s1 = s1 + 0x1
  9911: af a8 f2                 jump @746 if a1 >=s a3
      :                          @748
  9914: d8 26 07                 a0 = s1 <u t0
  9917: 01                       fallthrough
      :                          @749
  9918: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9921: ae 29 d3 00              jump @774 if a2 >=u t0
      :                          @750
  9925: 51 07 ce 00              jump @773 if a0 == 0
      :                          @751
  9929: 97 95 03                 s0 = a2 << 0x3
  9932: 97 67 03                 a0 = s1 << 0x3
  9935: c8 73 0a                 a3 = t1 + a0
  9938: 82 a7                    a0 = u64 [a3]
  9940: c8 35 05                 s0 = s0 + t1
  9943: 82 58                    a1 = u64 [s0]
  9945: 7b 57                    u64 [s0] = a0
  9947: 7b a8                    u64 [a3] = a1
  9949: 53 16 02 24              jump @755 if s1 <u 2
      :                          @752
  9953: 64 37                    a0 = t1
  9955: 64 68                    a1 = s1
  9957: 7b 1a                    u64 [sp] = a3
  9959: 50 20 56 01 b4 02        ra = 342, jump @826
      :                          @753 [@dyn 171]
  9965: 82 17 10                 a0 = u64 [sp + 0x10]
  9968: 64 68                    a1 = s1
  9970: 50 20 58 01 59 03        ra = 344, jump @849
      :                          @754 [@dyn 172]
  9976: 82 1a                    a3 = u64 [sp]
  9978: 82 13 10                 t1 = u64 [sp + 0x10]
  9981: 82 12 08                 t0 = u64 [sp + 0x8]
  9984: 01                       fallthrough
      :                          @755
  9985: ae 26 8c 00              jump @772 if s1 >=u t0
      :                          @756
  9989: 82 59                    a2 = u64 [s0]
  9991: 82 a8                    a1 = u64 [a3]
  9993: 33 07 01                 a0 = 0x1
  9996: ad 98 1e                 jump @761 if a1 <s a2
      :                          @757
  9999: 95 a7 08                 a0 = a3 + 0x8
 10002: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
 10005: 01                       fallthrough
      :                          @758
 10006: aa 69 4f                 jump @767 if a2 == s1
      :                          @759
 10009: 64 8a                    a3 = a1
 10011: 82 78                    a1 = u64 [a0]
 10013: 95 77 08                 a0 = a0 + 0x8
 10016: 95 66 01                 s1 = s1 + 0x1
 10019: af a8 f3                 jump @758 if a1 >=s a3
      :                          @760
 10022: d8 26 07                 a0 = s1 <u t0
 10025: 01                       fallthrough
      :                          @761
 10026: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
 10029: ae 29 67                 jump @774 if a2 >=u t0
      :                          @762
 10032: 51 07 63                 jump @773 if a0 == 0
      :                          @763
 10035: 97 97 03                 a0 = a2 << 0x3
 10038: 97 68 03                 a1 = s1 << 0x3
 10041: c8 38 08                 a1 = a1 + t1
 10044: 82 8a                    a3 = u64 [a1]
 10046: c8 37 07                 a0 = a0 + t1
 10049: 82 7b                    a4 = u64 [a0]
 10051: 7b 7a                    u64 [a0] = a3
 10053: 7b 8b                    u64 [a1] = a4
 10055: 53 16 02 42              jump @771 if s1 <u 2
      :                          @764
 10059: 64 37                    a0 = t1
 10061: 64 68                    a1 = s1
 10063: 64 35                    s0 = t1
 10065: 50 20 5a 01 4a 02        ra = 346, jump @826
      :                          @765 [@dyn 173]
 10071: 64 57                    a0 = s0
 10073: 64 68                    a1 = s1
 10075: 50 20 5c 01 f0 02        ra = 348, jump @849
      :                          @766 [@dyn 174]
 10081: 33 07                    a0 = 0
 10083: 28 18                    jump @770
      :                          @767
 10085: 33 07 01                 a0 = 0x1
 10088: 28 13                    jump @770
      :                          @768
 10090: 64 28                    a1 = t0
 10092: d3 28 07                 a0 = a1 ^ t0
 10095: 88 77 01                 a0 = a0 <u 0x1
 10098: 28 09                    jump @770
      :                          @769
 10100: d3 28 07                 a0 = a1 ^ t0
 10103: 88 77 01                 a0 = a0 <u 0x1
 10106: 01                       fallthrough
      :                          @770
 10107: 82 10 28                 ra = u64 [sp + 0x28]
 10110: 82 15 20                 s0 = u64 [sp + 0x20]
 10113: 82 16 18                 s1 = u64 [sp + 0x18]
 10116: 95 11 30                 sp = sp + 0x30
 10119: 32 00                    ret
      :                          @771
 10121: 33 07                    a0 = 0
 10123: 28 f0                    jump @770
      :                          @772
 10125: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
 10128: ae 29 04                 jump @774 if a2 >=u t0
      :                          @773
 10131: 00                       trap
      :                          @774
 10132: 00                       trap
      :                          @775
 10133: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10136: ae 8a 55                 jump @787 if a3 >=u a1
      :                          @776
 10139: ae 89 50                 jump @786 if a2 >=u a1
      :                          @777
 10142: 97 9a 03                 a3 = a2 << 0x3
 10145: c8 7a 0a                 a3 = a3 + a0
 10148: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
 10151: 28 15                    jump @781
      :                          @778
 10153: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
 10156: 7b c4                    u64 [a5] = t2
 10158: 28 05                    jump @780
      :                          @779
 10160: 7b c4                    u64 [a5] = t2
 10162: 01                       fallthrough
      :                          @780
 10163: 95 99 01                 a2 = a2 + 0x1
 10166: 95 22 08                 t0 = t0 + 0x8
 10169: aa 89 32                 jump @786 if a2 == a1
      :                          @781
 10172: 97 93 03                 t1 = a2 << 0x3
 10175: c8 73 03                 t1 = t1 + a0
 10178: 82 34                    t2 = u64 [t1]
 10180: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
 10183: ae 4c ec                 jump @780 if a5 >=u t2
      :                          @782
 10186: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10189: 7b 3c                    u64 [t1] = a5
 10191: 64 2c                    a5 = t0
 10193: 51 0a d8                 jump @778 if a3 == 0
      :                          @783
 10196: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
 10199: ae 4b d9                 jump @779 if a4 >=u t2
      :                          @784
 10202: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 10205: 7b cb                    u64 [a5] = a4
 10207: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 10210: 52 0a f2                 jump @783 if a3 != 0
      :                          @785
 10213: 64 7c                    a5 = a0
 10215: 7b c4                    u64 [a5] = t2
 10217: 28 ca                    jump @780
      :                          @786
 10219: 32 00                    ret
      :                          @787
 10221: 00                       trap
      :                          @788
 10222: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 10225: 7b 10 30                 u64 [sp + 0x30] = ra
 10228: 7b 15 28                 u64 [sp + 0x28] = s0
 10231: 7b 16 20                 u64 [sp + 0x20] = s1
 10234: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10237: ae 8a c2 00              jump @799 if a3 >=u a1
      :                          @789
 10241: ae 89 b0 00              jump @798 if a2 >=u a1
      :                          @790
 10245: 64 73                    t1 = a0
 10247: 97 94 04                 t2 = a2 << 0x4
 10250: 95 42 f0                 t0 = t2 + 0xfffffffffffffff0
 10253: 95 46 e0                 s1 = t2 + 0xffffffffffffffe0
 10256: 95 44 e8                 t2 = t2 + 0xffffffffffffffe8
 10259: 7b 18                    u64 [sp] = a1
 10261: 28 22                    jump @793
      :                          @791
 10263: 7b 7a                    u64 [a0] = a3
 10265: 7b 70 08                 u64 [a0 + 0x8] = ra
 10268: 82 18                    a1 = u64 [sp]
 10270: 82 12 18                 t0 = u64 [sp + 0x18]
 10273: 82 16 10                 s1 = u64 [sp + 0x10]
 10276: 82 14 08                 t2 = u64 [sp + 0x8]
 10279: 01                       fallthrough
      :                          @792
 10280: 95 99 01                 a2 = a2 + 0x1
 10283: 95 22 10                 t0 = t0 + 0x10
 10286: 95 66 10                 s1 = s1 + 0x10
 10289: 95 44 10                 t2 = t2 + 0x10
 10292: aa 89 7d                 jump @798 if a2 == a1
      :                          @793
 10295: 97 9b 04                 a4 = a2 << 0x4
 10298: c8 3b 0b                 a4 = a4 + t1
 10301: 82 ba                    a3 = u64 [a4]
 10303: 82 b7 f0                 a0 = u64 [a4 + 0xfffffffffffffff0]
 10306: 82 b0 08                 ra = u64 [a4 + 0x8]
 10309: 82 bc f8                 a5 = u64 [a4 + 0xfffffffffffffff8]
 10312: d9 7a 05                 s0 = a3 <s a0
 10315: d3 a7 07                 a0 = a0 ^ a3
 10318: d9 c0 0c                 a5 = ra <s a5
 10321: db 75 0c                 a5 = s0 if a0 != 0
 10324: 51 0c d4                 jump @792 if a5 == 0
      :                          @794
 10327: 95 b7 f0                 a0 = a4 + 0xfffffffffffffff0
 10330: 82 7c 08                 a5 = u64 [a0 + 0x8]
 10333: 7b bc 08                 u64 [a4 + 0x8] = a5
 10336: 82 78                    a1 = u64 [a0]
 10338: 95 9c ff                 a5 = a2 + 0xffffffffffffffff
 10341: 7b b8                    u64 [a4] = a1
 10343: 7b 14 08                 u64 [sp + 0x8] = t2
 10346: 64 45                    s0 = t2
 10348: 7b 16 10                 u64 [sp + 0x10] = s1
 10351: 7b 12 18                 u64 [sp + 0x18] = t0
 10354: 64 2b                    a4 = t0
 10356: 51 0c a3                 jump @791 if a5 == 0
      :                          @795
 10359: c8 63 02                 t0 = t1 + s1
 10362: 82 27                    a0 = u64 [t0]
 10364: c8 53 08                 a1 = t1 + s0
 10367: 82 88                    a1 = u64 [a1]
 10369: d9 7a 04                 t2 = a3 <s a0
 10372: d3 a7 07                 a0 = a0 ^ a3
 10375: d9 80 08                 a1 = ra <s a1
 10378: db 74 08                 a1 = t2 if a0 != 0
 10381: c8 b3 07                 a0 = t1 + a4
 10384: 51 08 87                 jump @791 if a1 == 0
      :                          @796
 10387: 82 28 08                 a1 = u64 [t0 + 0x8]
 10390: 7b 78 08                 u64 [a0 + 0x8] = a1
 10393: 82 28                    a1 = u64 [t0]
 10395: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 10398: 7b 78                    u64 [a0] = a1
 10400: 95 bb f0                 a4 = a4 + 0xfffffffffffffff0
 10403: 95 66 f0                 s1 = s1 + 0xfffffffffffffff0
 10406: 95 55 f0                 s0 = s0 + 0xfffffffffffffff0
 10409: 52 0c ce                 jump @795 if a5 != 0
      :                          @797
 10412: 64 37                    a0 = t1
 10414: 28 69 ff                 jump @791
      :                          @798
 10417: 82 10 30                 ra = u64 [sp + 0x30]
 10420: 82 15 28                 s0 = u64 [sp + 0x28]
 10423: 82 16 20                 s1 = u64 [sp + 0x20]
 10426: 95 11 38                 sp = sp + 0x38
 10429: 32 00                    ret
      :                          @799
 10431: 00                       trap
      :                          @800
 10432: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10435: ae 8a 55                 jump @812 if a3 >=u a1
      :                          @801
 10438: ae 89 50                 jump @811 if a2 >=u a1
      :                          @802
 10441: 97 9a 03                 a3 = a2 << 0x3
 10444: c8 7a 0a                 a3 = a3 + a0
 10447: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
 10450: 28 15                    jump @806
      :                          @803
 10452: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
 10455: 7b c4                    u64 [a5] = t2
 10457: 28 05                    jump @805
      :                          @804
 10459: 7b c4                    u64 [a5] = t2
 10461: 01                       fallthrough
      :                          @805
 10462: 95 99 01                 a2 = a2 + 0x1
 10465: 95 22 08                 t0 = t0 + 0x8
 10468: aa 89 32                 jump @811 if a2 == a1
      :                          @806
 10471: 97 93 03                 t1 = a2 << 0x3
 10474: c8 73 03                 t1 = t1 + a0
 10477: 82 34                    t2 = u64 [t1]
 10479: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
 10482: ae c4 ec                 jump @805 if t2 >=u a5
      :                          @807
 10485: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10488: 7b 3c                    u64 [t1] = a5
 10490: 64 2c                    a5 = t0
 10492: 51 0a d8                 jump @803 if a3 == 0
      :                          @808
 10495: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
 10498: ae b4 d9                 jump @804 if t2 >=u a4
      :                          @809
 10501: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 10504: 7b cb                    u64 [a5] = a4
 10506: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 10509: 52 0a f2                 jump @808 if a3 != 0
      :                          @810
 10512: 64 7c                    a5 = a0
 10514: 7b c4                    u64 [a5] = t2
 10516: 28 ca                    jump @805
      :                          @811
 10518: 32 00                    ret
      :                          @812
 10520: 00                       trap
      :                          @813
 10521: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 10524: 7b 15                    u64 [sp] = s0
 10526: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10529: ae 8a 79                 jump @825 if a3 >=u a1
      :                          @814
 10532: ae 89 6f                 jump @824 if a2 >=u a1
      :                          @815
 10535: 97 9a 04                 a3 = a2 << 0x4
 10538: c8 7a 0a                 a3 = a3 + a0
 10541: 95 a3 f0                 t1 = a3 + 0xfffffffffffffff0
 10544: 28 1b                    jump @819
      :                          @816
 10546: 95 ba f0                 a3 = a4 + 0xfffffffffffffff0
 10549: 7b a2                    u64 [a3] = t0
 10551: 7b a4 08                 u64 [a3 + 0x8] = t2
 10554: 28 08                    jump @818
      :                          @817
 10556: 7b a2                    u64 [a3] = t0
 10558: 7b a4 08                 u64 [a3 + 0x8] = t2
 10561: 01                       fallthrough
      :                          @818
 10562: 95 99 01                 a2 = a2 + 0x1
 10565: 95 33 10                 t1 = t1 + 0x10
 10568: aa 89 4b                 jump @824 if a2 == a1
      :                          @819
 10571: 97 9b 04                 a4 = a2 << 0x4
 10574: c8 7b 0b                 a4 = a4 + a0
 10577: 82 b4 08                 t2 = u64 [a4 + 0x8]
 10580: 82 ba f8                 a3 = u64 [a4 + 0xfffffffffffffff8]
 10583: ae a4 eb                 jump @818 if t2 >=u a3
      :                          @820
 10586: 82 ba f8                 a3 = u64 [a4 + 0xfffffffffffffff8]
 10589: 82 b5 f0                 s0 = u64 [a4 + 0xfffffffffffffff0]
 10592: 82 b2                    t0 = u64 [a4]
 10594: 7b ba 08                 u64 [a4 + 0x8] = a3
 10597: 95 9c ff                 a5 = a2 + 0xffffffffffffffff
 10600: 7b b5                    u64 [a4] = s0
 10602: 64 3a                    a3 = t1
 10604: 51 0c c6                 jump @816 if a5 == 0
      :                          @821
 10607: 82 ab f8                 a4 = u64 [a3 + 0xfffffffffffffff8]
 10610: ae b4 ca                 jump @817 if t2 >=u a4
      :                          @822
 10613: 95 ab f0                 a4 = a3 + 0xfffffffffffffff0
 10616: 82 b5 08                 s0 = u64 [a4 + 0x8]
 10619: 7b a5 08                 u64 [a3 + 0x8] = s0
 10622: 82 b5                    s0 = u64 [a4]
 10624: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 10627: 7b a5                    u64 [a3] = s0
 10629: 64 ba                    a3 = a4
 10631: 52 0c e8                 jump @821 if a5 != 0
      :                          @823
 10634: 64 7a                    a3 = a0
 10636: 7b a2                    u64 [a3] = t0
 10638: 7b a4 08                 u64 [a3 + 0x8] = t2
 10641: 28 b1                    jump @818
      :                          @824
 10643: 82 15                    s0 = u64 [sp]
 10645: 95 11 08                 sp = sp + 0x8
 10648: 32 00                    ret
      :                          @825
 10650: 00                       trap
      :                          @826
 10651: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10654: ae 8a 55                 jump @838 if a3 >=u a1
      :                          @827
 10657: ae 89 50                 jump @837 if a2 >=u a1
      :                          @828
 10660: 97 9a 03                 a3 = a2 << 0x3
 10663: c8 7a 0a                 a3 = a3 + a0
 10666: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
 10669: 28 15                    jump @832
      :                          @829
 10671: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
 10674: 7b c4                    u64 [a5] = t2
 10676: 28 05                    jump @831
      :                          @830
 10678: 7b c4                    u64 [a5] = t2
 10680: 01                       fallthrough
      :                          @831
 10681: 95 99 01                 a2 = a2 + 0x1
 10684: 95 22 08                 t0 = t0 + 0x8
 10687: aa 89 32                 jump @837 if a2 == a1
      :                          @832
 10690: 97 93 03                 t1 = a2 << 0x3
 10693: c8 73 03                 t1 = t1 + a0
 10696: 82 34                    t2 = u64 [t1]
 10698: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
 10701: af c4 ec                 jump @831 if t2 >=s a5
      :                          @833
 10704: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10707: 7b 3c                    u64 [t1] = a5
 10709: 64 2c                    a5 = t0
 10711: 51 0a d8                 jump @829 if a3 == 0
      :                          @834
 10714: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
 10717: af b4 d9                 jump @830 if t2 >=s a4
      :                          @835
 10720: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 10723: 7b cb                    u64 [a5] = a4
 10725: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 10728: 52 0a f2                 jump @834 if a3 != 0
      :                          @836
 10731: 64 7c                    a5 = a0
 10733: 7b c4                    u64 [a5] = t2
 10735: 28 ca                    jump @831
      :                          @837
 10737: 32 00                    ret
      :                          @838
 10739: 00                       trap
      :                          @839
 10740: 82 7a 08                 a3 = u64 [a0 + 0x8]
 10743: 82 79                    a2 = u64 [a0]
 10745: ae a9 50                 jump @848 if a2 >=u a3
      :                          @840
 10748: 7b 7a                    u64 [a0] = a3
 10750: 33 0b 03                 a4 = 0x3
 10753: 95 7a 08                 a3 = a0 + 0x8
 10756: ac b8 41                 jump @847 if a1 <u a4
      :                          @841
 10759: 82 7b 10                 a4 = u64 [a0 + 0x10]
 10762: ae b9 3b                 jump @847 if a2 >=u a4
      :                          @842
 10765: 97 8c 03                 a5 = a1 << 0x3
 10768: c8 7c 02                 t0 = a5 + a0
 10771: 7b ab                    u64 [a3] = a4
 10773: 33 0c 03                 a5 = 0x3
 10776: 95 22 f8                 t0 = t0 + 0xfffffffffffffff8
 10779: aa c8 24                 jump @846 if a1 == a5
      :                          @843
 10782: 95 7a 10                 a3 = a0 + 0x10
 10785: 9a 87 03                 a0 = 0x3 - a1
 10788: 33 08 04                 a1 = 0x4
 10791: 33 0c 04                 a5 = 0x4
 10794: 01                       fallthrough
      :                          @844
 10795: 82 ab 08                 a4 = u64 [a3 + 0x8]
 10798: ae b9 17                 jump @847 if a2 >=u a4
      :                          @845
 10801: 7b ab                    u64 [a3] = a4
 10803: 95 cc 01                 a5 = a5 + 0x1
 10806: c8 c7 0b                 a4 = a0 + a5
 10809: 95 aa 08                 a3 = a3 + 0x8
 10812: ab 8b ef                 jump @844 if a4 != a1
      :                          @846
 10815: 64 2a                    a3 = t0
 10817: 7b a9                    u64 [a3] = a2
 10819: 32 00                    ret
      :                          @847
 10821: 7b a9                    u64 [a3] = a2
 10823: 32 00                    ret
      :                          @848
 10825: 32 00                    ret
      :                          @849
 10827: 82 7a 08                 a3 = u64 [a0 + 0x8]
 10830: 82 79                    a2 = u64 [a0]
 10832: af 9a 50                 jump @858 if a3 >=s a2
      :                          @850
 10835: 7b 7a                    u64 [a0] = a3
 10837: 33 0b 03                 a4 = 0x3
 10840: 95 7a 08                 a3 = a0 + 0x8
 10843: ac b8 41                 jump @857 if a1 <u a4
      :                          @851
 10846: 82 7b 10                 a4 = u64 [a0 + 0x10]
 10849: af 9b 3b                 jump @857 if a4 >=s a2
      :                          @852
 10852: 97 8c 03                 a5 = a1 << 0x3
 10855: c8 7c 02                 t0 = a5 + a0
 10858: 7b ab                    u64 [a3] = a4
 10860: 33 0c 03                 a5 = 0x3
 10863: 95 22 f8                 t0 = t0 + 0xfffffffffffffff8
 10866: aa c8 24                 jump @856 if a1 == a5
      :                          @853
 10869: 95 7a 10                 a3 = a0 + 0x10
 10872: 9a 87 03                 a0 = 0x3 - a1
 10875: 33 08 04                 a1 = 0x4
 10878: 33 0c 04                 a5 = 0x4
 10881: 01                       fallthrough
      :                          @854
 10882: 82 ab 08                 a4 = u64 [a3 + 0x8]
 10885: af 9b 17                 jump @857 if a4 >=s a2
      :                          @855
 10888: 7b ab                    u64 [a3] = a4
 10890: 95 cc 01                 a5 = a5 + 0x1
 10893: c8 c7 0b                 a4 = a0 + a5
 10896: 95 aa 08                 a3 = a3 + 0x8
 10899: ab 8b ef                 jump @854 if a4 != a1
      :                          @856
 10902: 64 2a                    a3 = t0
 10904: 7b a9                    u64 [a3] = a2
 10906: 32 00                    ret
      :                          @857
 10908: 7b a9                    u64 [a3] = a2
 10910: 32 00                    ret
      :                          @858
 10912: 32 00                    ret
      :                          @859
 10914: 82 7b 10                 a4 = u64 [a0 + 0x10]
 10917: 82 74                    t2 = u64 [a0]
 10919: 82 7c 18                 a5 = u64 [a0 + 0x18]
 10922: 82 72 08                 t0 = u64 [a0 + 0x8]
 10925: d9 4b 0a                 a3 = a4 <s t2
 10928: d3 4b 0b                 a4 = a4 ^ t2
 10931: d9 2c 0c                 a5 = a5 <s t0
 10934: db ba 0c                 a5 = a3 if a4 != 0
 10937: 51 0c 75                 jump @868 if a5 == 0
      :                          @860
 10940: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 10943: 7b 15 08                 u64 [sp + 0x8] = s0
 10946: 95 7b 10                 a4 = a0 + 0x10
 10949: 82 ba 08                 a3 = u64 [a4 + 0x8]
 10952: 7b 7a 08                 u64 [a0 + 0x8] = a3
 10955: 82 ba                    a3 = u64 [a4]
 10957: 33 0c 03                 a5 = 0x3
 10960: 7b 7a                    u64 [a0] = a3
 10962: ac c8 4f                 jump @867 if a1 <u a5
      :                          @861
 10965: 82 7a 20                 a3 = u64 [a0 + 0x20]
 10968: 82 7c 28                 a5 = u64 [a0 + 0x28]
 10971: d9 4a 03                 t1 = a3 <s t2
 10974: d3 4a 0a                 a3 = a3 ^ t2
 10977: d9 2c 0c                 a5 = a5 <s t0
 10980: db a3 0c                 a5 = t1 if a3 != 0
 10983: 51 0c 3a                 jump @867 if a5 == 0
      :                          @862
 10986: 95 7c 20                 a5 = a0 + 0x20
 10989: 33 07 03                 a0 = 0x3
 10992: 01                       fallthrough
      :                          @863
 10993: 82 c9 08                 a2 = u64 [a5 + 0x8]
 10996: 82 ca                    a3 = u64 [a5]
 10998: 7b c9 f8                 u64 [a5 + 0xfffffffffffffff8] = a2
 11001: 7b ca f0                 u64 [a5 + 0xfffffffffffffff0] = a3
 11004: aa 78 22                 jump @866 if a1 == a0
      :                          @864
 11007: 82 ca 10                 a3 = u64 [a5 + 0x10]
 11010: 82 c3 18                 t1 = u64 [a5 + 0x18]
 11013: 64 cb                    a4 = a5
 11015: 95 cc 10                 a5 = a5 + 0x10
 11018: d9 4a 05                 s0 = a3 <s t2
 11021: d3 4a 0a                 a3 = a3 ^ t2
 11024: d9 23 09                 a2 = t1 <s t0
 11027: db a5 09                 a2 = s0 if a3 != 0
 11030: 95 77 01                 a0 = a0 + 0x1
 11033: 52 09 d8                 jump @863 if a2 != 0
      :                          @865
 11036: 28 05                    jump @867
      :                          @866
 11038: 64 cb                    a4 = a5
 11040: 01                       fallthrough
      :                          @867
 11041: 7b b4                    u64 [a4] = t2
 11043: 7b b2 08                 u64 [a4 + 0x8] = t0
 11046: 82 15 08                 s0 = u64 [sp + 0x8]
 11049: 95 11 10                 sp = sp + 0x10
 11052: 32 00                    ret
      :                          @868
 11054: 32 00                    ret
      :                          @869
 11056: 82 7a 18                 a3 = u64 [a0 + 0x18]
 11059: 82 79 08                 a2 = u64 [a0 + 0x8]
 11062: ae 9a 54                 jump @878 if a3 >=u a2
      :                          @870
 11065: 82 7b 18                 a4 = u64 [a0 + 0x18]
 11068: 82 7c 10                 a5 = u64 [a0 + 0x10]
 11071: 82 72                    t0 = u64 [a0]
 11073: 7b 7b 08                 u64 [a0 + 0x8] = a4
 11076: 7b 7c                    u64 [a0] = a5
 11078: 33 0b 03                 a4 = 0x3
 11081: 95 7c 10                 a5 = a0 + 0x10
 11084: ac b8 37                 jump @877 if a1 <u a4
      :                          @871
 11087: 82 7b 28                 a4 = u64 [a0 + 0x28]
 11090: ae 9b 31                 jump @877 if a4 >=u a2
      :                          @872
 11093: 95 77 20                 a0 = a0 + 0x20
 11096: 33 0b 03                 a4 = 0x3
 11099: 01                       fallthrough
      :                          @873
 11100: 82 7a 08                 a3 = u64 [a0 + 0x8]
 11103: 82 7c                    a5 = u64 [a0]
 11105: 7b 7a f8                 u64 [a0 + 0xfffffffffffffff8] = a3
 11108: 7b 7c f0                 u64 [a0 + 0xfffffffffffffff0] = a5
 11111: aa b8 13                 jump @876 if a1 == a4
      :                          @874
 11114: 82 7a 18                 a3 = u64 [a0 + 0x18]
 11117: 64 7c                    a5 = a0
 11119: 95 77 10                 a0 = a0 + 0x10
 11122: 95 bb 01                 a4 = a4 + 0x1
 11125: ac 9a e7                 jump @873 if a3 <u a2
      :                          @875
 11128: 28 0b                    jump @877
      :                          @876
 11130: 64 7c                    a5 = a0
 11132: 7b c2                    u64 [a5] = t0
 11134: 7b c9 08                 u64 [a5 + 0x8] = a2
 11137: 32 00                    ret
      :                          @877
 11139: 7b c2                    u64 [a5] = t0
 11141: 7b c9 08                 u64 [a5 + 0x8] = a2
 11144: 32 00                    ret
      :                          @878
 11146: 32 00                    ret
      :                          @879
 11148: 95 11 60 fe              sp = sp + 0xfffffffffffffe60
 11152: 7b 10 98 01              u64 [sp + 0x198] = ra
 11156: 7b 15 90 01              u64 [sp + 0x190] = s0
 11160: 7b 16 88 01              u64 [sp + 0x188] = s1
 11164: 33 0b 15                 a4 = 0x15
 11167: 7b 1a 48                 u64 [sp + 0x48] = a3
 11170: 7b 19 58                 u64 [sp + 0x58] = a2
 11173: 64 80                    ra = a1
 11175: ae b8 2b                 jump @884 if a1 >=u a4
      :                          @880
 11178: 64 72                    t0 = a0
 11180: 01                       fallthrough
      :                          @881
 11181: 33 07 01                 a0 = 0x1
 11184: ae 07 10                 jump @883 if a0 >=u ra
      :                          @882
 11187: 33 09 01                 a2 = 0x1
 11190: 64 27                    a0 = t0
 11192: 64 08                    a1 = ra
 11194: 50 20 5e 01 e1 fd        ra = 350, jump @826
      :                          @883 [@dyn 175]
 11200: 82 10 98 01              ra = u64 [sp + 0x198]
 11204: 82 15 90 01              s0 = u64 [sp + 0x190]
 11208: 82 16 88 01              s1 = u64 [sp + 0x188]
 11212: 95 11 a0 01              sp = sp + 0x1a0
 11216: 32 00                    ret
      :                          @884
 11218: 7b 17 08                 u64 [sp + 0x8] = a0
 11221: 49 11 78 01              u64 [sp + 120] = 0x1
 11225: 33 05 01 01              s0 = 0x101
 11229: 33 07 01                 a0 = 0x1
 11232: 7b 10                    u64 [sp] = ra
 11234: 01                       fallthrough
      :                          @885
 11235: 82 18 78                 a1 = u64 [sp + 0x78]
 11238: d2 87 07                 a0 = a0 & a1
 11241: 7b 17 70                 u64 [sp + 0x70] = a0
 11244: 82 12 08                 t0 = u64 [sp + 0x8]
 11247: 01                       fallthrough
      :                          @886
 11248: 81 17 48                 a0 = i32 [sp + 0x48]
 11251: 51 07 b6 05              jump @982 if a0 == 0
      :                          @887
 11255: 82 17 78                 a0 = u64 [sp + 0x78]
 11258: 84 77 01                 a0 = a0 & 0x1
 11261: 7b 12 80 00              u64 [sp + 0x80] = t0
 11265: 51 07 74 02              jump @927 if a0 == 0
      :                          @888
 11269: 98 0b 02                 a4 = ra >> 0x2
 11272: 97 b6 01                 s1 = a4 << 0x1
 11275: c8 b6 03                 t1 = s1 + a4
 11278: 54 10 31 29              jump @891 if ra <=u 49
      :                          @889
 11282: 95 b5 ff                 s0 = a4 + 0xffffffffffffffff
 11285: 97 b7 03                 a0 = a4 << 0x3
 11288: c8 27 07                 a0 = a0 + t0
 11291: 97 58 03                 a1 = s0 << 0x3
 11294: c8 28 08                 a1 = a1 + t0
 11297: 82 79                    a2 = u64 [a0]
 11299: 82 88                    a1 = u64 [a1]
 11301: af 89 17                 jump @892 if a2 >=s a1
      :                          @890
 11304: 49 11 28 01              u64 [sp + 40] = 0x1
 11308: 64 94                    t2 = a2
 11310: 7b 15 50                 u64 [sp + 0x50] = s0
 11313: 64 b5                    s0 = a4
 11315: 64 89                    a2 = a1
 11317: 28 10                    jump @893
      :                          @891
 11319: 33 09                    a2 = 0
 11321: 28 1e 01                 jump @900
      :                          @892
 11324: 49 11 28                 u64 [sp + 40] = 0
 11327: 64 84                    t2 = a1
 11329: 7b 1b 50                 u64 [sp + 0x50] = a4
 11332: 01                       fallthrough
      :                          @893
 11333: 95 b8 01                 a1 = a4 + 0x1
 11336: 7b 18 40                 u64 [sp + 0x40] = a1
 11339: 97 88 03                 a1 = a1 << 0x3
 11342: 82 1b 80 00              a4 = u64 [sp + 0x80]
 11346: c8 b8 08                 a1 = a1 + a4
 11349: 82 87                    a0 = u64 [a1]
 11351: d9 97 02                 t0 = a0 <s a2
 11354: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
 11357: 97 68 03                 a1 = s1 << 0x3
 11360: c8 b8 08                 a1 = a1 + a4
 11363: 97 ac 03                 a5 = a3 << 0x3
 11366: c8 cb 0b                 a4 = a4 + a5
 11369: 82 8c                    a5 = u64 [a1]
 11371: 82 b8                    a1 = u64 [a4]
 11373: e5 97 07                 a0 = mins(a0, a2)
 11376: d9 47 09                 a2 = a0 <s t2
 11379: 7b 12 38                 u64 [sp + 0x38] = t0
 11382: 82 17 28                 a0 = u64 [sp + 0x28]
 11385: c8 27 07                 a0 = a0 + t0
 11388: c8 97 07                 a0 = a0 + a2
 11391: 7b 10 68                 u64 [sp + 0x68] = ra
 11394: 7b 15 60                 u64 [sp + 0x60] = s0
 11397: 7b 19 30                 u64 [sp + 0x30] = a2
 11400: af 8c 13                 jump @895 if a5 >=s a1
      :                          @894
 11403: 95 77 01                 a0 = a0 + 0x1
 11406: 7b 17 18                 u64 [sp + 0x18] = a0
 11409: 7b 1c 20                 u64 [sp + 0x20] = a5
 11412: 7b 1a 28                 u64 [sp + 0x28] = a3
 11415: 64 6a                    a3 = s1
 11417: 28 0e                    jump @896
      :                          @895
 11419: 7b 18 20                 u64 [sp + 0x20] = a1
 11422: 7b 16 28                 u64 [sp + 0x28] = s1
 11425: 64 c8                    a1 = a5
 11427: 7b 17 18                 u64 [sp + 0x18] = a0
 11430: 01                       fallthrough
      :                          @896
 11431: 86 66 01                 s1 = s1 | 0x1
 11434: 97 6b 03                 a4 = s1 << 0x3
 11437: 82 15 80 00              s0 = u64 [sp + 0x80]
 11441: c8 5b 0b                 a4 = a4 + s0
 11444: 82 bb                    a4 = u64 [a4]
 11446: d9 8b 07                 a0 = a4 <s a1
 11449: 95 34 ff                 t2 = t1 + 0xffffffffffffffff
 11452: 97 39 03                 a2 = t1 << 0x3
 11455: c8 59 09                 a2 = a2 + s0
 11458: 97 4c 03                 a5 = t2 << 0x3
 11461: c8 5c 0c                 a5 = a5 + s0
 11464: 82 92                    t0 = u64 [a2]
 11466: 82 c0                    ra = u64 [a5]
 11468: e5 8b 08                 a1 = mins(a4, a1)
 11471: 82 19 20                 a2 = u64 [sp + 0x20]
 11474: d9 98 09                 a2 = a1 <s a2
 11477: 7b 17 20                 u64 [sp + 0x20] = a0
 11480: 82 18 18                 a1 = u64 [sp + 0x18]
 11483: c8 87 07                 a0 = a0 + a1
 11486: c8 97 07                 a0 = a0 + a2
 11489: af 02 12                 jump @898 if t0 >=s ra
      :                          @897
 11492: 95 77 01                 a0 = a0 + 0x1
 11495: 7b 17 18                 u64 [sp + 0x18] = a0
 11498: 7b 12 10                 u64 [sp + 0x10] = t0
 11501: 64 47                    a0 = t2
 11503: 64 34                    t2 = t1
 11505: 28 0d                    jump @899
      :                          @898
 11507: 7b 10 10                 u64 [sp + 0x10] = ra
 11510: 7b 17 18                 u64 [sp + 0x18] = a0
 11513: 64 37                    a0 = t1
 11515: 64 20                    ra = t0
 11517: 01                       fallthrough
      :                          @899
 11518: 82 15 60                 s0 = u64 [sp + 0x60]
 11521: 82 1c 50                 a5 = u64 [sp + 0x50]
 11524: 82 18 40                 a1 = u64 [sp + 0x40]
 11527: 82 1b 38                 a4 = u64 [sp + 0x38]
 11530: da bc 08                 a1 = a5 if a4 == 0
 11533: 95 33 01                 t1 = t1 + 0x1
 11536: 97 3c 03                 a5 = t1 << 0x3
 11539: 82 12 80 00              t0 = u64 [sp + 0x80]
 11543: c8 2c 0c                 a5 = a5 + t0
 11546: 82 cc                    a5 = u64 [a5]
 11548: 82 1b 30                 a4 = u64 [sp + 0x30]
 11551: da b8 05                 s0 = a1 if a4 == 0
 11554: 82 18 28                 a1 = u64 [sp + 0x28]
 11557: 82 1b 20                 a4 = u64 [sp + 0x20]
 11560: da b8 06                 s1 = a1 if a4 == 0
 11563: da 96 0a                 a3 = s1 if a2 == 0
 11566: d9 0c 09                 a2 = a5 <s ra
 11569: db 93 07                 a0 = t1 if a2 != 0
 11572: e5 0c 0c                 a5 = mins(a5, ra)
 11575: 82 18 10                 a1 = u64 [sp + 0x10]
 11578: d9 8c 08                 a1 = a5 <s a1
 11581: db 84 07                 a0 = t2 if a1 != 0
 11584: c8 98 08                 a1 = a1 + a2
 11587: 82 19 18                 a2 = u64 [sp + 0x18]
 11590: c8 89 09                 a2 = a2 + a1
 11593: 64 73                    t1 = a0
 11595: 64 a6                    s1 = a3
 11597: 64 5b                    a4 = s0
 11599: 82 10 68                 ra = u64 [sp + 0x68]
 11602: 33 05 01 01              s0 = 0x101
 11606: 01                       fallthrough
      :                          @900
 11607: 97 67 03                 a0 = s1 << 0x3
 11610: c8 27 07                 a0 = a0 + t0
 11613: 97 b8 03                 a1 = a4 << 0x3
 11616: c8 82 0a                 a3 = t0 + a1
 11619: 82 78                    a1 = u64 [a0]
 11621: 82 a7                    a0 = u64 [a3]
 11623: af 78 0c                 jump @902 if a1 >=s a0
      :                          @901
 11626: 95 99 01                 a2 = a2 + 0x1
 11629: 64 8c                    a5 = a1
 11631: 64 ba                    a3 = a4
 11633: 28 0b                    jump @903
      :                          @902
 11635: 64 7c                    a5 = a0
 11637: 64 6a                    a3 = s1
 11639: 64 b6                    s1 = a4
 11641: 64 87                    a0 = a1
 11643: 01                       fallthrough
      :                          @903
 11644: 97 38 03                 a1 = t1 << 0x3
 11647: c8 28 08                 a1 = a1 + t0
 11650: 82 8b                    a4 = u64 [a1]
 11652: d9 7b 08                 a1 = a4 <s a0
 11655: e5 7b 07                 a0 = mins(a4, a0)
 11658: c8 89 09                 a2 = a2 + a1
 11661: af c7 09                 jump @906 if a0 >=s a5
      :                          @904
 11664: 55 19 0b 1a              jump @908 if a2 >=u 11
      :                          @905
 11668: 28 49                    jump @911
      :                          @906
 11670: da 8a 03                 t1 = a3 if a1 == 0
 11673: 64 36                    s1 = t1
 11675: 88 97 01                 a0 = a2 <u 0x1
 11678: 82 18 70                 a1 = u64 [sp + 0x70]
 11681: d2 87 07                 a0 = a0 & a1
 11684: 51 07 39                 jump @911 if a0 == 0
      :                          @907
 11687: 28 f0 00                 jump @929
      :                          @908
 11690: 98 07 01                 a0 = ra >> 0x1
 11693: 97 08 03                 a1 = ra << 0x3
 11696: c8 28 08                 a1 = a1 + t0
 11699: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 11702: 64 29                    a2 = t0
 11704: 01                       fallthrough
      :                          @909
 11705: 82 8a                    a3 = u64 [a1]
 11707: 82 9b                    a4 = u64 [a2]
 11709: 7b 9a                    u64 [a2] = a3
 11711: 7b 8b                    u64 [a1] = a4
 11713: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 11716: 95 99 08                 a2 = a2 + 0x8
 11719: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 11722: 52 07 ef                 jump @909 if a0 != 0
      :                          @910
 11725: 85 66 ff                 s1 = s1 ^ 0xffffffffffffffff
 11728: c8 06 06                 s1 = s1 + ra
 11731: 82 18 70                 a1 = u64 [sp + 0x70]
 11734: 84 87 01                 a0 = a1 & 0x1
 11737: 52 07 be 00              jump @929 if a0 != 0
      :                          @911
 11741: 97 67 03                 a0 = s1 << 0x3
 11744: 82 18 58                 a1 = u64 [sp + 0x58]
 11747: 51 08 d1 00              jump @932 if a1 == 0
      :                          @912
 11751: ae 06 d3 03              jump @984 if s1 >=u ra
      :                          @913
 11755: c8 72 08                 a1 = t0 + a0
 11758: 82 19 58                 a2 = u64 [sp + 0x58]
 11761: 82 9a                    a3 = u64 [a2]
 11763: 82 89                    a2 = u64 [a1]
 11765: ad 9a c3 00              jump @933 if a3 <s a2
      :                          @914
 11769: 82 27                    a0 = u64 [t0]
 11771: 7b 29                    u64 [t0] = a2
 11773: 7b 87                    u64 [a1] = a0
 11775: 82 28                    a1 = u64 [t0]
 11777: 33 07                    a0 = 0
 11779: 95 29 08                 a2 = t0 + 0x8
 11782: 95 0a ff                 a3 = ra + 0xffffffffffffffff
 11785: 54 0a 22                 jump @919 if a3 <=u 0
      :                          @915
 11788: 97 7b 03                 a4 = a0 << 0x3
 11791: c8 9b 0b                 a4 = a4 + a2
 11794: 01                       fallthrough
      :                          @916
 11795: 82 bc                    a5 = u64 [a4]
 11797: ad c8 16                 jump @919 if a1 <s a5
      :                          @917
 11800: 95 77 01                 a0 = a0 + 0x1
 11803: 95 bb 08                 a4 = a4 + 0x8
 11806: ab 7a f5                 jump @916 if a3 != a0
      :                          @918
 11809: 64 a7                    a0 = a3
 11811: 97 ab 03                 a4 = a3 << 0x3
 11814: c8 9b 0b                 a4 = a4 + a2
 11817: 28 09                    jump @920
      :                          @919
 11819: 97 ab 03                 a4 = a3 << 0x3
 11822: c8 9b 0b                 a4 = a4 + a2
 11825: 01                       fallthrough
      :                          @920
 11826: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 11829: ae a7 26                 jump @924 if a0 >=u a3
      :                          @921
 11832: 82 b6 f8                 s1 = u64 [a4 + 0xfffffffffffffff8]
 11835: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
 11838: 64 cb                    a4 = a5
 11840: ad 68 f2                 jump @920 if a1 <s s1
      :                          @922
 11843: 97 7b 03                 a4 = a0 << 0x3
 11846: c8 9b 0b                 a4 = a4 + a2
 11849: 82 b5                    s0 = u64 [a4]
 11851: 7b b6                    u64 [a4] = s1
 11853: 7b c5                    u64 [a5] = s0
 11855: 33 05 01 01              s0 = 0x101
 11859: 95 77 01                 a0 = a0 + 0x1
 11862: ac a7 b6                 jump @915 if a0 <u a3
      :                          @923
 11865: 28 d2                    jump @919
      :                          @924
 11867: 95 77 01                 a0 = a0 + 0x1
 11870: 7b 28                    u64 [t0] = a1
 11872: ac 70 5c 03              jump @986 if ra <u a0
      :                          @925
 11876: c9 70 00                 ra = ra - a0
 11879: 97 77 03                 a0 = a0 << 0x3
 11882: c8 72 02                 t0 = t0 + a0
 11885: 55 10 15 83 fd           jump @886 if ra >=u 21
      :                          @926
 11890: 28 3b fd                 jump @881
      :                          @927
 11893: 64 27                    a0 = t0
 11895: 64 08                    a1 = ra
 11897: 64 05                    s0 = ra
 11899: 50 20 60 01 e9 eb        ra = 352, jump @465
      :                          @928 [@dyn 176]
 11905: 82 12 80 00              t0 = u64 [sp + 0x80]
 11909: 64 50                    ra = s0
 11911: 33 05 01 01              s0 = 0x101
 11915: 82 17 48                 a0 = u64 [sp + 0x48]
 11918: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 11921: 7b 17 48                 u64 [sp + 0x48] = a0
 11924: 28 71 fd                 jump @888
      :                          @929
 11927: 64 27                    a0 = t0
 11929: 64 08                    a1 = ra
 11931: 64 05                    s0 = ra
 11933: 50 20 62 01 55 f6        ra = 354, jump @700
      :                          @930 [@dyn 177]
 11939: 82 12 80 00              t0 = u64 [sp + 0x80]
 11943: 64 50                    ra = s0
 11945: 33 05 01 01              s0 = 0x101
 11949: 51 07 30 ff              jump @911 if a0 == 0
      :                          @931
 11953: 28 0f fd                 jump @883
      :                          @932
 11956: 82 18                    a1 = u64 [sp]
 11958: 28 08                    jump @934
      :                          @933
 11960: 7b 12 08                 u64 [sp + 0x8] = t0
 11963: 64 08                    a1 = ra
 11965: 01                       fallthrough
      :                          @934
 11966: ae 86 fd 02              jump @985 if s1 >=u a1
      :                          @935
 11970: 82 1b 08                 a4 = u64 [sp + 0x8]
 11973: c8 b7 07                 a0 = a0 + a4
 11976: 82 7a                    a3 = u64 [a0]
 11978: 82 b9                    a2 = u64 [a4]
 11980: 7b ba                    u64 [a4] = a3
 11982: 7b 79                    u64 [a0] = a2
 11984: 82 b0                    ra = u64 [a4]
 11986: 33 09                    a2 = 0
 11988: 95 b2 08                 t0 = a4 + 0x8
 11991: 7b 18                    u64 [sp] = a1
 11993: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 11996: 64 27                    a0 = t0
 11998: 01                       fallthrough
      :                          @936
 11999: 82 7a                    a3 = u64 [a0]
 12001: af 0a 0f                 jump @939 if a3 >=s ra
      :                          @937
 12004: 95 99 01                 a2 = a2 + 0x1
 12007: 95 77 08                 a0 = a0 + 0x8
 12010: ab 98 f5                 jump @936 if a1 != a2
      :                          @938
 12013: 64 89                    a2 = a1
 12015: 01                       fallthrough
      :                          @939
 12016: 82 17                    a0 = u64 [sp]
 12018: 97 77 03                 a0 = a0 << 0x3
 12021: 82 1a 08                 a3 = u64 [sp + 0x8]
 12024: c8 a7 07                 a0 = a0 + a3
 12027: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
 12030: 01                       fallthrough
      :                          @940
 12031: 64 8b                    a4 = a1
 12033: ae 89 0e                 jump @942 if a2 >=u a1
      :                          @941
 12036: 82 a7                    a0 = u64 [a3]
 12038: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
 12041: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 12044: af 07 f3                 jump @940 if a0 >=s ra
      :                          @942
 12047: 64 b8                    a1 = a4
 12049: ac 9b ac 02              jump @987 if a4 <u a2
      :                          @943
 12053: 33 0b                    a4 = 0
 12055: 33 0c                    a5 = 0
 12057: 33 06                    s1 = 0
 12059: 33 03                    t1 = 0
 12061: 7b 19 40                 u64 [sp + 0x40] = a2
 12064: 97 97 03                 a0 = a2 << 0x3
 12067: c8 72 09                 a2 = t0 + a0
 12070: 7b 18 30                 u64 [sp + 0x30] = a1
 12073: 97 87 03                 a0 = a1 << 0x3
 12076: c8 72 08                 a1 = t0 + a0
 12079: 33 04 80 00              t2 = 0x80
 12083: 7b 19 38                 u64 [sp + 0x38] = a2
 12086: 64 9a                    a3 = a2
 12088: 33 02 80 00              t0 = 0x80
 12092: 7b 10 50                 u64 [sp + 0x50] = ra
 12095: 28 42                    jump @946
      :                          @944
 12097: 97 00 03                 ra = ra << 0x3
 12100: c8 80 00                 ra = ra + a1
 12103: 82 17 60                 a0 = u64 [sp + 0x60]
 12106: 7b 07                    u64 [ra] = a0
 12108: 95 bb 01                 a4 = a4 + 0x1
 12111: 95 66 01                 s1 = s1 + 0x1
 12114: 82 10 50                 ra = u64 [sp + 0x50]
 12117: 82 14 68                 t2 = u64 [sp + 0x68]
 12120: 01                       fallthrough
      :                          @945
 12121: d3 cb 07                 a0 = a4 ^ a5
 12124: 64 49                    a2 = t2
 12126: 94 79                    a2 = 0 if a0 != 0
 12128: 97 99 03                 a2 = a2 << 0x3
 12131: c8 9a 0a                 a3 = a3 + a2
 12134: d3 36 07                 a0 = s1 ^ t1
 12137: 82 12 70                 t0 = u64 [sp + 0x70]
 12140: 9a 29                    a2 = -t0
 12142: 94 79                    a2 = 0 if a0 != 0
 12144: 97 99 03                 a2 = a2 << 0x3
 12147: c8 98 08                 a1 = a1 + a2
 12150: 33 05 01 01              s0 = 0x101
 12154: 82 17 78                 a0 = u64 [sp + 0x78]
 12157: ac 57 3e 01              jump @968 if a0 <u s0
      :                          @946
 12161: c9 a8 07                 a0 = a1 - a3
 12164: 98 79 03                 a2 = a0 >> 0x3
 12167: 7b 1a 80 00              u64 [sp + 0x80] = a3
 12171: 7b 19 78                 u64 [sp + 0x78] = a2
 12174: ac 59 38                 jump @953 if a2 <u s0
      :                          @947
 12177: aa cb 71                 jump @957 if a4 == a5
      :                          @948
 12180: ab 36 b4 00              jump @964 if s1 != t1
      :                          @949
 12184: 51 02 9a 00              jump @962 if t0 == 0
      :                          @950
 12188: 33 07                    a0 = 0
 12190: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
 12193: 95 16 08 01              s1 = sp + 0x108
 12197: 95 13 08 01              t1 = sp + 0x108
 12201: 01                       fallthrough
      :                          @951
 12202: 82 a9                    a2 = u64 [a3]
 12204: 78 37                    u8 [t1] = a0
 12206: 95 75 01                 s0 = a0 + 0x1
 12209: d9 09 07                 a0 = a2 <s ra
 12212: c8 73 03                 t1 = t1 + a0
 12215: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 12218: 64 57                    a0 = s0
 12220: ab 52 ee                 jump @951 if t0 != s0
      :                          @952
 12223: 82 1a 80 00              a3 = u64 [sp + 0x80]
 12227: 28 85 00                 jump @964
      :                          @953
 12230: 64 25                    s0 = t0
 12232: 64 49                    a2 = t2
 12234: d8 cb 04                 t2 = a4 <u a5
 12237: d8 36 0a                 a3 = s1 <u t1
 12240: d4 a4 02                 t0 = t2 | a3
 12243: 51 02 1f                 jump @956 if t0 == 0
      :                          @954
 12246: 82 1a 78                 a3 = u64 [sp + 0x78]
 12249: 95 a7 80                 a0 = a3 + 0xffffffffffffff80
 12252: db 47 05                 s0 = a0 if t2 != 0
 12255: da 2a 07                 a0 = a3 if t0 == 0
 12258: 64 52                    t0 = s0
 12260: da 47 09                 a2 = a0 if t2 == 0
 12263: 64 94                    t2 = a2
 12265: 82 1a 80 00              a3 = u64 [sp + 0x80]
 12269: ab cb a7                 jump @948 if a4 != a5
      :                          @955
 12272: 28 12                    jump @957
      :                          @956
 12274: 98 74 04                 t2 = a0 >> 0x4
 12277: 82 17 78                 a0 = u64 [sp + 0x78]
 12280: c9 47 02                 t0 = a0 - t2
 12283: 82 1a 80 00              a3 = u64 [sp + 0x80]
 12287: ab cb 95                 jump @948 if a4 != a5
      :                          @957
 12290: 51 04 3a                 jump @963 if t2 == 0
      :                          @958
 12293: 33 07                    a0 = 0
 12295: 95 1b 88 00              a4 = sp + 0x88
 12299: 95 1c 88 00              a5 = sp + 0x88
 12303: 01                       fallthrough
      :                          @959
 12304: 82 a5                    s0 = u64 [a3]
 12306: 78 c7                    u8 [a5] = a0
 12308: 95 79 01                 a2 = a0 + 0x1
 12311: d9 05 07                 a0 = s0 <s ra
 12314: 85 77 01                 a0 = a0 ^ 0x1
 12317: c8 7c 0c                 a5 = a5 + a0
 12320: 95 aa 08                 a3 = a3 + 0x8
 12323: 64 97                    a0 = a2
 12325: ab 94 eb                 jump @959 if t2 != a2
      :                          @960
 12328: 82 1a 80 00              a3 = u64 [sp + 0x80]
 12332: ab 36 1c                 jump @964 if s1 != t1
      :                          @961
 12335: 28 69 ff                 jump @949
      :                          @962
 12338: 95 16 08 01              s1 = sp + 0x108
 12342: 95 13 08 01              t1 = sp + 0x108
 12346: 28 0e                    jump @964
      :                          @963
 12348: 95 1b 88 00              a4 = sp + 0x88
 12352: 95 1c 88 00              a5 = sp + 0x88
 12356: aa 36 54 ff              jump @949 if s1 == t1
      :                          @964
 12360: 7b 12 70                 u64 [sp + 0x70] = t0
 12363: c9 bc 07                 a0 = a5 - a4
 12366: c9 63 09                 a2 = t1 - s1
 12369: e6 97 02                 t0 = minu(a0, a2)
 12372: 51 02 05 ff              jump @945 if t0 == 0
      :                          @965
 12376: 7b 14 68                 u64 [sp + 0x68] = t2
 12379: 7c b7                    a0 = u8 [a4]
 12381: 7c 64                    t2 = u8 [s1]
 12383: 97 77 03                 a0 = a0 << 0x3
 12386: c8 a7 07                 a0 = a0 + a3
 12389: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
 12392: 97 09 03                 a2 = ra << 0x3
 12395: c8 89 09                 a2 = a2 + a1
 12398: 82 99                    a2 = u64 [a2]
 12400: 82 75                    s0 = u64 [a0]
 12402: 7b 15 60                 u64 [sp + 0x60] = s0
 12405: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 12408: 7b 79                    u64 [a0] = a2
 12410: 51 02 c7 fe              jump @944 if t0 == 0
      :                          @966
 12414: 7c b7 01                 a0 = u8 [a4 + 0x1]
 12417: 97 77 03                 a0 = a0 << 0x3
 12420: c8 a7 07                 a0 = a0 + a3
 12423: 85 49 ff                 a2 = t2 ^ 0xffffffffffffffff
 12426: 82 7a                    a3 = u64 [a0]
 12428: 97 99 03                 a2 = a2 << 0x3
 12431: 86 99 00 f8              a2 = a2 | 0xfffffffffffff800
 12435: c8 89 09                 a2 = a2 + a1
 12438: 7b 9a                    u64 [a2] = a3
 12440: 82 1a 80 00              a3 = u64 [sp + 0x80]
 12444: 7c 64 01                 t2 = u8 [s1 + 0x1]
 12447: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
 12450: 97 09 03                 a2 = ra << 0x3
 12453: c8 89 09                 a2 = a2 + a1
 12456: 82 99                    a2 = u64 [a2]
 12458: 95 bb 01                 a4 = a4 + 0x1
 12461: 95 66 01                 s1 = s1 + 0x1
 12464: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 12467: 7b 79                    u64 [a0] = a2
 12469: 52 02 c9                 jump @966 if t0 != 0
      :                          @967
 12472: 28 89 fe                 jump @944
      :                          @968
 12475: ae cb 2b                 jump @972 if a4 >=u a5
      :                          @969
 12478: 82 12 08                 t0 = u64 [sp + 0x8]
 12481: 64 a3                    t1 = a3
 12483: 01                       fallthrough
      :                          @970
 12484: 7c c7 ff                 a0 = u8 [a5 + 0xffffffffffffffff]
 12487: 97 77 03                 a0 = a0 << 0x3
 12490: c8 37 07                 a0 = a0 + t1
 12493: 82 85 f8                 s0 = u64 [a1 + 0xfffffffffffffff8]
 12496: 82 79                    a2 = u64 [a0]
 12498: 95 c6 ff                 s1 = a5 + 0xffffffffffffffff
 12501: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
 12504: 7b 75                    u64 [a0] = s0
 12506: 7b 89 f8                 u64 [a1 + 0xfffffffffffffff8] = a2
 12509: 64 a8                    a1 = a3
 12511: 64 6c                    a5 = s1
 12513: ac 6b e3                 jump @970 if a4 <u s1
      :                          @971
 12516: 28 27                    jump @974
      :                          @972
 12518: 82 12 08                 t0 = u64 [sp + 0x8]
 12521: ae 36 22                 jump @974 if s1 >=u t1
      :                          @973
 12524: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
 12527: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 12530: 97 77 03                 a0 = a0 << 0x3
 12533: c8 87 07                 a0 = a0 + a1
 12536: 82 79                    a2 = u64 [a0]
 12538: 82 ab                    a4 = u64 [a3]
 12540: 95 3c ff                 a5 = t1 + 0xffffffffffffffff
 12543: 7b a9                    u64 [a3] = a2
 12545: 7b 7b                    u64 [a0] = a4
 12547: 95 aa 08                 a3 = a3 + 0x8
 12550: 64 c3                    t1 = a5
 12552: ac c6 e4                 jump @973 if s1 <u a5
      :                          @974
 12555: 82 17 38                 a0 = u64 [sp + 0x38]
 12558: c9 7a 07                 a0 = a3 - a0
 12561: 98 77 03                 a0 = a0 >> 0x3
 12564: 82 16 40                 s1 = u64 [sp + 0x40]
 12567: c8 76 06                 s1 = s1 + a0
 12570: 7b 20                    u64 [t0] = ra
 12572: 82 18                    a1 = u64 [sp]
 12574: ae 86 9d 00              jump @985 if s1 >=u a1
      :                          @975
 12578: 97 67 03                 a0 = s1 << 0x3
 12581: c8 72 09                 a2 = t0 + a0
 12584: 82 97                    a0 = u64 [a2]
 12586: 7b 27                    u64 [t0] = a0
 12588: 7b 90                    u64 [a2] = ra
 12590: 64 25                    s0 = t0
 12592: c9 68 08                 a1 = a1 - s1
 12595: 7b 18 80 00              u64 [sp + 0x80] = a1
 12599: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
 12602: 95 97 08                 a0 = a2 + 0x8
 12605: ae b6 28                 jump @978 if s1 >=u a4
      :                          @976
 12608: 7b 17 78                 u64 [sp + 0x78] = a0
 12611: 64 57                    a0 = s0
 12613: 64 68                    a1 = s1
 12615: 7b 19 70                 u64 [sp + 0x70] = a2
 12618: 82 19 58                 a2 = u64 [sp + 0x58]
 12621: 82 1a 48                 a3 = u64 [sp + 0x48]
 12624: 64 b5                    s0 = a4
 12626: 50 20 64 01 3a fa        ra = 356, jump @879
      :                          @977 [@dyn 178]
 12632: 64 50                    ra = s0
 12634: 82 17 70                 a0 = u64 [sp + 0x70]
 12637: 7b 17 58                 u64 [sp + 0x58] = a0
 12640: 82 15 78                 s0 = u64 [sp + 0x78]
 12643: 28 10                    jump @980
      :                          @978
 12645: 64 b8                    a1 = a4
 12647: 82 1a 48                 a3 = u64 [sp + 0x48]
 12650: 50 20 66 01 22 fa        ra = 358, jump @879
      :                          @979 [@dyn 179]
 12656: 64 60                    ra = s1
 12658: 01                       fallthrough
      :                          @980
 12659: 82 17 40                 a0 = u64 [sp + 0x40]
 12662: 82 18 30                 a1 = u64 [sp + 0x30]
 12665: d8 87 07                 a0 = a0 <u a1
 12668: 85 77 01                 a0 = a0 ^ 0x1
 12671: 82 18 80 00              a1 = u64 [sp + 0x80]
 12675: e6 86 08                 a1 = minu(s1, a1)
 12678: 82 19                    a2 = u64 [sp]
 12680: 98 99 03                 a2 = a2 >> 0x3
 12683: d8 98 08                 a1 = a1 <u a2
 12686: 85 88 01                 a1 = a1 ^ 0x1
 12689: 7b 18 78                 u64 [sp + 0x78] = a1
 12692: 7b 10                    u64 [sp] = ra
 12694: 7b 15 08                 u64 [sp + 0x8] = s0
 12697: 64 52                    t0 = s0
 12699: 33 08 15                 a1 = 0x15
 12702: 33 05 01 01              s0 = 0x101
 12706: ae 80 41 fa              jump @885 if ra >=u a1
      :                          @981
 12710: 28 07 fa                 jump @881
      :                          @982
 12713: 64 27                    a0 = t0
 12715: 64 08                    a1 = ra
 12717: 33 00 68 01              ra = 0x168
 12721: 98 82 01                 t0 = a1 >> 0x1
 12724: 28 9a 19                 jump @1416
      :                          @983 [@dyn 180]
 12727: 28 09 fa                 jump @883
      :                          @984
 12730: 00                       trap
      :                          @985
 12731: 00                       trap
      :                          @986
 12732: 00                       trap
      :                          @987
 12733: 00                       trap
      :                          @988
 12734: 95 11 60 fe              sp = sp + 0xfffffffffffffe60
 12738: 7b 10 98 01              u64 [sp + 0x198] = ra
 12742: 7b 15 90 01              u64 [sp + 0x190] = s0
 12746: 7b 16 88 01              u64 [sp + 0x188] = s1
 12750: 33 0b 15                 a4 = 0x15
 12753: 7b 1a 30                 u64 [sp + 0x30] = a3
 12756: 7b 19 38                 u64 [sp + 0x38] = a2
 12759: 64 80                    ra = a1
 12761: ae b8 2b                 jump @993 if a1 >=u a4
      :                          @989
 12764: 64 7c                    a5 = a0
 12766: 01                       fallthrough
      :                          @990
 12767: 33 07 01                 a0 = 0x1
 12770: ae 07 10                 jump @992 if a0 >=u ra
      :                          @991
 12773: 33 09 01                 a2 = 0x1
 12776: 64 c7                    a0 = a5
 12778: 64 08                    a1 = ra
 12780: 50 20 6a 01 02 f6        ra = 362, jump @788
      :                          @992 [@dyn 181]
 12786: 82 10 98 01              ra = u64 [sp + 0x198]
 12790: 82 15 90 01              s0 = u64 [sp + 0x190]
 12794: 82 16 88 01              s1 = u64 [sp + 0x188]
 12798: 95 11 a0 01              sp = sp + 0x1a0
 12802: 32 00                    ret
      :                          @993
 12804: 7b 17 08                 u64 [sp + 0x8] = a0
 12807: 49 11 58 01              u64 [sp + 88] = 0x1
 12811: 33 07 01                 a0 = 0x1
 12814: 7b 10                    u64 [sp] = ra
 12816: 01                       fallthrough
      :                          @994
 12817: 82 18 58                 a1 = u64 [sp + 0x58]
 12820: d2 87 07                 a0 = a0 & a1
 12823: 7b 17 50                 u64 [sp + 0x50] = a0
 12826: 82 1c 08                 a5 = u64 [sp + 0x8]
 12829: 01                       fallthrough
      :                          @995
 12830: 81 17 30                 a0 = i32 [sp + 0x30]
 12833: 51 07 3c 08              jump @1104 if a0 == 0
      :                          @996
 12837: 82 17 58                 a0 = u64 [sp + 0x58]
 12840: 84 77 01                 a0 = a0 & 0x1
 12843: 7b 10 68                 u64 [sp + 0x68] = ra
 12846: 7b 1c 70                 u64 [sp + 0x70] = a5
 12849: 51 07 ce 03              jump @1048 if a0 == 0
      :                          @997
 12853: 98 07 02                 a0 = ra >> 0x2
 12856: 97 72 01                 t0 = a0 << 0x1
 12859: c8 72 03                 t1 = t0 + a0
 12862: 54 10 31 3b              jump @1000 if ra <=u 49
      :                          @998
 12866: 64 24                    t2 = t0
 12868: 95 70 ff                 ra = a0 + 0xffffffffffffffff
 12871: 97 78 04                 a1 = a0 << 0x4
 12874: c8 8c 09                 a2 = a5 + a1
 12877: 97 08 04                 a1 = ra << 0x4
 12880: c8 8c 0b                 a4 = a5 + a1
 12883: 82 98                    a1 = u64 [a2]
 12885: 82 bc                    a5 = u64 [a4]
 12887: 82 9a 08                 a3 = u64 [a2 + 0x8]
 12890: 82 b9 08                 a2 = u64 [a4 + 0x8]
 12893: d9 c8 0b                 a4 = a1 <s a5
 12896: d3 c8 06                 s1 = a1 ^ a5
 12899: d9 9a 05                 s0 = a3 <s a2
 12902: db 6b 05                 s0 = a4 if s1 != 0
 12905: 51 05 15                 jump @1001 if s0 == 0
      :                          @999
 12908: 33 0b 01                 a4 = 0x1
 12911: 64 02                    t0 = ra
 12913: 64 70                    ra = a0
 12915: 64 9a                    a3 = a2
 12917: 64 c8                    a1 = a5
 12919: 28 0c                    jump @1002
      :                          @1000
 12921: 33 04                    t2 = 0
 12923: 28 9c 01                 jump @1018
      :                          @1001
 12926: 33 0b                    a4 = 0
 12928: 64 72                    t0 = a0
 12930: 01                       fallthrough
      :                          @1002
 12931: 95 77 01                 a0 = a0 + 0x1
 12934: 7b 17 60                 u64 [sp + 0x60] = a0
 12937: 97 77 04                 a0 = a0 << 0x4
 12940: 82 19 70                 a2 = u64 [sp + 0x70]
 12943: c8 97 07                 a0 = a0 + a2
 12946: 82 7c                    a5 = u64 [a0]
 12948: 82 77 08                 a0 = u64 [a0 + 0x8]
 12951: d9 8c 09                 a2 = a5 <s a1
 12954: d3 8c 06                 s1 = a5 ^ a1
 12957: d9 a7 05                 s0 = a0 <s a3
 12960: db 69 05                 s0 = a2 if s1 != 0
 12963: 51 05 08                 jump @1004 if s0 == 0
      :                          @1003
 12966: 95 bb 01                 a4 = a4 + 0x1
 12969: 28 0a                    jump @1005
      :                          @1004
 12971: 7b 12 60                 u64 [sp + 0x60] = t0
 12974: 64 a7                    a0 = a3
 12976: 64 8c                    a5 = a1
 12978: 01                       fallthrough
      :                          @1005
 12979: 7b 1b 40                 u64 [sp + 0x40] = a4
 12982: 7b 10 48                 u64 [sp + 0x48] = ra
 12985: 97 08 04                 a1 = ra << 0x4
 12988: 82 1a 70                 a3 = u64 [sp + 0x70]
 12991: c8 a8 08                 a1 = a1 + a3
 12994: 82 89                    a2 = u64 [a1]
 12996: 82 88 08                 a1 = u64 [a1 + 0x8]
 12999: d9 9c 06                 s1 = a5 <s a2
 13002: d3 9c 05                 s0 = a5 ^ a2
 13005: d9 87 0b                 a4 = a0 <s a1
 13008: 95 42 ff                 t0 = t2 + 0xffffffffffffffff
 13011: 97 47 04                 a0 = t2 << 0x4
 13014: c8 7a 08                 a1 = a3 + a0
 13017: 97 27 04                 a0 = t0 << 0x4
 13020: c8 a7 07                 a0 = a0 + a3
 13023: 82 8a                    a3 = u64 [a1]
 13025: 82 79                    a2 = u64 [a0]
 13027: 82 8c 08                 a5 = u64 [a1 + 0x8]
 13030: 82 78 08                 a1 = u64 [a0 + 0x8]
 13033: db 56 0b                 a4 = s1 if s0 != 0
 13036: d9 9a 07                 a0 = a3 <s a2
 13039: d3 9a 06                 s1 = a3 ^ a2
 13042: d9 8c 05                 s0 = a5 <s a1
 13045: db 67 05                 s0 = a0 if s1 != 0
 13048: 7b 1b 28                 u64 [sp + 0x28] = a4
 13051: 82 10 40                 ra = u64 [sp + 0x40]
 13054: c8 b0 00                 ra = ra + a4
 13057: 51 05 0d                 jump @1007 if s0 == 0
      :                          @1006
 13060: 95 00 01                 ra = ra + 0x1
 13063: 7b 12 20                 u64 [sp + 0x20] = t0
 13066: 64 42                    t0 = t2
 13068: 28 0a                    jump @1008
      :                          @1007
 13070: 7b 14 20                 u64 [sp + 0x20] = t2
 13073: 64 c8                    a1 = a5
 13075: 64 a9                    a2 = a3
 13077: 01                       fallthrough
      :                          @1008
 13078: 86 4b 01                 a4 = t2 | 0x1
 13081: 97 b7 04                 a0 = a4 << 0x4
 13084: 82 1a 70                 a3 = u64 [sp + 0x70]
 13087: c8 a7 07                 a0 = a0 + a3
 13090: 82 7c                    a5 = u64 [a0]
 13092: 82 77 08                 a0 = u64 [a0 + 0x8]
 13095: d9 9c 0a                 a3 = a5 <s a2
 13098: d3 9c 06                 s1 = a5 ^ a2
 13101: d9 87 05                 s0 = a0 <s a1
 13104: db 6a 05                 s0 = a3 if s1 != 0
 13107: 51 05 0b                 jump @1010 if s0 == 0
      :                          @1009
 13110: 7b 1b 20                 u64 [sp + 0x20] = a4
 13113: 95 00 01                 ra = ra + 0x1
 13116: 28 07                    jump @1011
      :                          @1010
 13118: 64 87                    a0 = a1
 13120: 64 9c                    a5 = a2
 13122: 01                       fallthrough
      :                          @1011
 13123: 64 25                    s0 = t0
 13125: 97 28 04                 a1 = t0 << 0x4
 13128: 82 16 70                 s1 = u64 [sp + 0x70]
 13131: c8 68 08                 a1 = a1 + s1
 13134: 82 89                    a2 = u64 [a1]
 13136: 82 88 08                 a1 = u64 [a1 + 0x8]
 13139: d9 9c 0a                 a3 = a5 <s a2
 13142: d3 9c 0c                 a5 = a5 ^ a2
 13145: d9 87 09                 a2 = a0 <s a1
 13148: 95 3b ff                 a4 = t1 + 0xffffffffffffffff
 13151: 97 38 04                 a1 = t1 << 0x4
 13154: c8 68 08                 a1 = a1 + s1
 13157: 97 b7 04                 a0 = a4 << 0x4
 13160: c8 67 07                 a0 = a0 + s1
 13163: 82 86                    s1 = u64 [a1]
 13165: 82 74                    t2 = u64 [a0]
 13167: 82 88 08                 a1 = u64 [a1 + 0x8]
 13170: 82 72 08                 t0 = u64 [a0 + 0x8]
 13173: db ca 09                 a2 = a3 if a5 != 0
 13176: d9 46 07                 a0 = s1 <s t2
 13179: d3 46 0a                 a3 = s1 ^ t2
 13182: d9 28 0c                 a5 = a1 <s t0
 13185: db a7 0c                 a5 = a0 if a3 != 0
 13188: c8 90 00                 ra = ra + a2
 13191: 51 0c 0e                 jump @1013 if a5 == 0
      :                          @1012
 13194: 95 00 01                 ra = ra + 0x1
 13197: 7b 1b 10                 u64 [sp + 0x10] = a4
 13200: 7b 13 18                 u64 [sp + 0x18] = t1
 13203: 28 0d                    jump @1014
      :                          @1013
 13205: 7b 1b 18                 u64 [sp + 0x18] = a4
 13208: 7b 13 10                 u64 [sp + 0x10] = t1
 13211: 64 82                    t0 = a1
 13213: 64 64                    t2 = s1
 13215: 01                       fallthrough
      :                          @1014
 13216: 95 33 01                 t1 = t1 + 0x1
 13219: 97 37 04                 a0 = t1 << 0x4
 13222: 82 18 70                 a1 = u64 [sp + 0x70]
 13225: c8 87 07                 a0 = a0 + a1
 13228: 82 76                    s1 = u64 [a0]
 13230: 82 78 08                 a1 = u64 [a0 + 0x8]
 13233: d9 46 07                 a0 = s1 <s t2
 13236: d3 46 0a                 a3 = s1 ^ t2
 13239: d9 28 0c                 a5 = a1 <s t0
 13242: db a7 0c                 a5 = a0 if a3 != 0
 13245: 7b 15 40                 u64 [sp + 0x40] = s0
 13248: 51 0c 0b                 jump @1016 if a5 == 0
      :                          @1015
 13251: 95 04 01                 t2 = ra + 0x1
 13254: 7b 18 10                 u64 [sp + 0x10] = a1
 13257: 28 0d                    jump @1017
      :                          @1016
 13259: 82 13 10                 t1 = u64 [sp + 0x10]
 13262: 7b 12 10                 u64 [sp + 0x10] = t0
 13265: 64 46                    s1 = t2
 13267: 64 04                    t2 = ra
 13269: 01                       fallthrough
      :                          @1017
 13270: 82 18 18                 a1 = u64 [sp + 0x18]
 13273: 97 87 04                 a0 = a1 << 0x4
 13276: 82 1c 70                 a5 = u64 [sp + 0x70]
 13279: c8 c7 07                 a0 = a0 + a5
 13282: 82 7a                    a3 = u64 [a0]
 13284: 82 10 48                 ra = u64 [sp + 0x48]
 13287: 82 1b 60                 a4 = u64 [sp + 0x60]
 13290: 82 15 28                 s0 = u64 [sp + 0x28]
 13293: da 5b 00                 ra = a4 if s0 == 0
 13296: 82 77 08                 a0 = u64 [a0 + 0x8]
 13299: 82 12 40                 t0 = u64 [sp + 0x40]
 13302: 82 1b 20                 a4 = u64 [sp + 0x20]
 13305: da 9b 02                 t0 = a4 if a2 == 0
 13308: d9 a6 09                 a2 = s1 <s a3
 13311: d3 6a 0a                 a3 = a3 ^ s1
 13314: 82 1b 10                 a4 = u64 [sp + 0x10]
 13317: d9 7b 07                 a0 = a4 <s a0
 13320: db a9 07                 a0 = a2 if a3 != 0
 13323: c8 74 04                 t2 = t2 + a0
 13326: db 78 03                 t1 = a1 if a0 != 0
 13329: 64 07                    a0 = ra
 13331: 82 10 68                 ra = u64 [sp + 0x68]
 13334: 01                       fallthrough
      :                          @1018
 13335: 97 28 04                 a1 = t0 << 0x4
 13338: c8 8c 0a                 a3 = a5 + a1
 13341: 97 78 04                 a1 = a0 << 0x4
 13344: c8 8c 0b                 a4 = a5 + a1
 13347: 82 a8                    a1 = u64 [a3]
 13349: 82 bc                    a5 = u64 [a4]
 13351: 82 aa 08                 a3 = u64 [a3 + 0x8]
 13354: 82 bb 08                 a4 = u64 [a4 + 0x8]
 13357: d9 c8 06                 s1 = a1 <s a5
 13360: d3 c8 09                 a2 = a1 ^ a5
 13363: d9 ba 05                 s0 = a3 <s a4
 13366: db 96 05                 s0 = s1 if a2 != 0
 13369: 51 05 0c                 jump @1020 if s0 == 0
      :                          @1019
 13372: 64 26                    s1 = t0
 13374: 95 44 01                 t2 = t2 + 0x1
 13377: 64 72                    t0 = a0
 13379: 28 09                    jump @1021
      :                          @1020
 13381: 64 76                    s1 = a0
 13383: 64 ab                    a4 = a3
 13385: 64 8c                    a5 = a1
 13387: 01                       fallthrough
      :                          @1021
 13388: 97 37 04                 a0 = t1 << 0x4
 13391: 82 18 70                 a1 = u64 [sp + 0x70]
 13394: c8 87 07                 a0 = a0 + a1
 13397: 82 78                    a1 = u64 [a0]
 13399: 82 77 08                 a0 = u64 [a0 + 0x8]
 13402: d9 c8 09                 a2 = a1 <s a5
 13405: d3 c8 0a                 a3 = a1 ^ a5
 13408: d9 b7 05                 s0 = a0 <s a4
 13411: db a9 05                 s0 = a2 if a3 != 0
 13414: 51 05 08                 jump @1023 if s0 == 0
      :                          @1022
 13417: 95 44 01                 t2 = t2 + 0x1
 13420: 28 09                    jump @1024
      :                          @1023
 13422: 64 23                    t1 = t0
 13424: 64 b7                    a0 = a4
 13426: 64 c8                    a1 = a5
 13428: 01                       fallthrough
      :                          @1024
 13429: 97 69 04                 a2 = s1 << 0x4
 13432: 82 15 70                 s0 = u64 [sp + 0x70]
 13435: c8 59 09                 a2 = a2 + s0
 13438: 82 9a                    a3 = u64 [a2]
 13440: 82 99 08                 a2 = u64 [a2 + 0x8]
 13443: d9 a8 0b                 a4 = a1 <s a3
 13446: d3 a8 08                 a1 = a1 ^ a3
 13449: d9 97 07                 a0 = a0 <s a2
 13452: db 8b 07                 a0 = a4 if a1 != 0
 13455: 51 07 4e                 jump @1030 if a0 == 0
      :                          @1025
 13458: 64 62                    t0 = s1
 13460: 33 07 01                 a0 = 0x1
 13463: 53 14 0b 4b              jump @1031 if t2 <u 11
      :                          @1026
 13467: 98 07 01                 a0 = ra >> 0x1
 13470: 95 58 08                 a1 = s0 + 0x8
 13473: 97 09 04                 a2 = ra << 0x4
 13476: c8 59 09                 a2 = a2 + s0
 13479: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 13482: 01                       fallthrough
      :                          @1027
 13483: 82 9a f8                 a3 = u64 [a2 + 0xfffffffffffffff8]
 13486: 82 9b                    a4 = u64 [a2]
 13488: 82 8c f8                 a5 = u64 [a1 + 0xfffffffffffffff8]
 13491: 82 86                    s1 = u64 [a1]
 13493: 7b 8a f8                 u64 [a1 + 0xfffffffffffffff8] = a3
 13496: 7b 8b                    u64 [a1] = a4
 13498: 7b 9c f8                 u64 [a2 + 0xfffffffffffffff8] = a5
 13501: 7b 96                    u64 [a2] = s1
 13503: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 13506: 95 88 10                 a1 = a1 + 0x10
 13509: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 13512: 52 07 e3                 jump @1027 if a0 != 0
      :                          @1028
 13515: 85 27 ff                 a0 = t0 ^ 0xffffffffffffffff
 13518: c8 70 02                 t0 = ra + a0
 13521: 82 18 50                 a1 = u64 [sp + 0x50]
 13524: 84 87 01                 a0 = a1 & 0x1
 13527: 51 07 18                 jump @1032 if a0 == 0
      :                          @1029
 13530: 28 41 01                 jump @1050
      :                          @1030
 13533: 64 32                    t0 = t1
 13535: 64 47                    a0 = t2
 13537: 01                       fallthrough
      :                          @1031
 13538: 88 77 01                 a0 = a0 <u 0x1
 13541: 82 18 50                 a1 = u64 [sp + 0x50]
 13544: d2 87 07                 a0 = a0 & a1
 13547: 52 07 30 01              jump @1050 if a0 != 0
      :                          @1032
 13551: 97 27 04                 a0 = t0 << 0x4
 13554: 82 18 38                 a1 = u64 [sp + 0x38]
 13557: 51 08 41 01              jump @1053 if a1 == 0
      :                          @1033
 13561: ae 02 81 05              jump @1106 if t0 >=u ra
      :                          @1034
 13565: c8 75 08                 a1 = s0 + a0
 13568: 82 1b 38                 a4 = u64 [sp + 0x38]
 13571: 82 b9                    a2 = u64 [a4]
 13573: 82 8a                    a3 = u64 [a1]
 13575: 82 bb 08                 a4 = u64 [a4 + 0x8]
 13578: 82 8c 08                 a5 = u64 [a1 + 0x8]
 13581: d9 a9 06                 s1 = a2 <s a3
 13584: d3 a9 09                 a2 = a2 ^ a3
 13587: d9 cb 0a                 a3 = a4 <s a5
 13590: db 96 0a                 a3 = s1 if a2 != 0
 13593: 52 0a 21 01              jump @1054 if a3 != 0
      :                          @1035
 13597: 82 59 08                 a2 = u64 [s0 + 0x8]
 13600: 82 5a                    a3 = u64 [s0]
 13602: 33 07                    a0 = 0
 13604: 7b 19 00 01              u64 [sp + 0x100] = a2
 13608: 7b 1a f8 00              u64 [sp + 0xf8] = a3
 13612: 82 89                    a2 = u64 [a1]
 13614: 82 8a 08                 a3 = u64 [a1 + 0x8]
 13617: 82 1b 00 01              a4 = u64 [sp + 0x100]
 13621: 82 1c f8 00              a5 = u64 [sp + 0xf8]
 13625: 7b 59                    u64 [s0] = a2
 13627: 7b 5a 08                 u64 [s0 + 0x8] = a3
 13630: 7b 8b 08                 u64 [a1 + 0x8] = a4
 13633: 7b 8c                    u64 [a1] = a5
 13635: 82 59                    a2 = u64 [s0]
 13637: 82 58 08                 a1 = u64 [s0 + 0x8]
 13640: 95 53 10                 t1 = s0 + 0x10
 13643: 95 0b ff                 a4 = ra + 0xffffffffffffffff
 13646: 95 52 18                 t0 = s0 + 0x18
 13649: 54 0b 31                 jump @1040 if a4 <=u 0
      :                          @1036
 13652: 97 7c 04                 a5 = a0 << 0x4
 13655: c8 2c 0c                 a5 = a5 + t0
 13658: 01                       fallthrough
      :                          @1037
 13659: 82 c6 f8                 s1 = u64 [a5 + 0xfffffffffffffff8]
 13662: 82 c5                    s0 = u64 [a5]
 13664: d9 69 0a                 a3 = a2 <s s1
 13667: d3 96 06                 s1 = s1 ^ a2
 13670: d9 58 05                 s0 = a1 <s s0
 13673: db 6a 05                 s0 = a3 if s1 != 0
 13676: 52 05 16                 jump @1040 if s0 != 0
      :                          @1038
 13679: 95 77 01                 a0 = a0 + 0x1
 13682: 95 cc 10                 a5 = a5 + 0x10
 13685: ab 7b e6                 jump @1037 if a4 != a0
      :                          @1039
 13688: 64 b7                    a0 = a4
 13690: 97 b6 04                 s1 = a4 << 0x4
 13693: c8 36 06                 s1 = s1 + t1
 13696: 28 09                    jump @1041
      :                          @1040
 13698: 97 b6 04                 s1 = a4 << 0x4
 13701: c8 36 06                 s1 = s1 + t1
 13704: 01                       fallthrough
      :                          @1041
 13705: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 13708: ae b7 53                 jump @1045 if a0 >=u a4
      :                          @1042
 13711: 82 6a f0                 a3 = u64 [s1 + 0xfffffffffffffff0]
 13714: 82 65 f8                 s0 = u64 [s1 + 0xfffffffffffffff8]
 13717: 95 6c f0                 a5 = s1 + 0xfffffffffffffff0
 13720: d9 a9 06                 s1 = a2 <s a3
 13723: d3 9a 0a                 a3 = a3 ^ a2
 13726: d9 58 05                 s0 = a1 <s s0
 13729: db a6 05                 s0 = s1 if a3 != 0
 13732: 64 c6                    s1 = a5
 13734: 52 05 e3                 jump @1041 if s0 != 0
      :                          @1043
 13737: 97 7a 04                 a3 = a0 << 0x4
 13740: c8 3a 0a                 a3 = a3 + t1
 13743: 82 a6 08                 s1 = u64 [a3 + 0x8]
 13746: 82 a5                    s0 = u64 [a3]
 13748: 7b 16 00 01              u64 [sp + 0x100] = s1
 13752: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 13756: 82 c0                    ra = u64 [a5]
 13758: 82 c4 08                 t2 = u64 [a5 + 0x8]
 13761: 82 15 00 01              s0 = u64 [sp + 0x100]
 13765: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 13769: 7b a0                    u64 [a3] = ra
 13771: 82 10 68                 ra = u64 [sp + 0x68]
 13774: 7b a4 08                 u64 [a3 + 0x8] = t2
 13777: 7b c5 08                 u64 [a5 + 0x8] = s0
 13780: 7b c6                    u64 [a5] = s1
 13782: 95 77 01                 a0 = a0 + 0x1
 13785: ac b7 7b ff              jump @1036 if a0 <u a4
      :                          @1044
 13789: 28 a5                    jump @1040
      :                          @1045
 13791: 95 77 01                 a0 = a0 + 0x1
 13794: 82 1c 70                 a5 = u64 [sp + 0x70]
 13797: 7b c9                    u64 [a5] = a2
 13799: 7b c8 08                 u64 [a5 + 0x8] = a1
 13802: ac 70 93 04              jump @1109 if ra <u a0
      :                          @1046
 13806: c9 70 00                 ra = ra - a0
 13809: 97 77 04                 a0 = a0 << 0x4
 13812: c8 7c 0c                 a5 = a5 + a0
 13815: 55 10 15 27 fc           jump @995 if ra >=u 21
      :                          @1047
 13820: 28 e3 fb                 jump @990
      :                          @1048
 13823: 64 c7                    a0 = a5
 13825: 64 08                    a1 = ra
 13827: 50 20 6c 01 3f e3        ra = 364, jump @455
      :                          @1049 [@dyn 182]
 13833: 82 1c 70                 a5 = u64 [sp + 0x70]
 13836: 82 10 68                 ra = u64 [sp + 0x68]
 13839: 82 17 30                 a0 = u64 [sp + 0x30]
 13842: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 13845: 7b 17 30                 u64 [sp + 0x30] = a0
 13848: 28 1d fc                 jump @997
      :                          @1050
 13851: 64 57                    a0 = s0
 13853: 64 08                    a1 = ra
 13855: 64 25                    s0 = t0
 13857: 50 20 6e 01 38 e8        ra = 366, jump @550
      :                          @1051 [@dyn 183]
 13863: 64 52                    t0 = s0
 13865: 82 15 70                 s0 = u64 [sp + 0x70]
 13868: 82 10 68                 ra = u64 [sp + 0x68]
 13871: 51 07 c0 fe              jump @1032 if a0 == 0
      :                          @1052
 13875: 28 bf fb                 jump @992
      :                          @1053
 13878: 82 18                    a1 = u64 [sp]
 13880: 28 08                    jump @1055
      :                          @1054
 13882: 7b 15 08                 u64 [sp + 0x8] = s0
 13885: 64 08                    a1 = ra
 13887: 01                       fallthrough
      :                          @1055
 13888: ae 82 3b 04              jump @1107 if t0 >=u a1
      :                          @1056
 13892: 82 1a 08                 a3 = u64 [sp + 0x8]
 13895: 82 ab 08                 a4 = u64 [a3 + 0x8]
 13898: 82 ac                    a5 = u64 [a3]
 13900: 33 09                    a2 = 0
 13902: c8 a7 07                 a0 = a0 + a3
 13905: 7b 1b 00 01              u64 [sp + 0x100] = a4
 13909: 7b 1c f8 00              u64 [sp + 0xf8] = a5
 13913: 82 7c                    a5 = u64 [a0]
 13915: 82 75 08                 s0 = u64 [a0 + 0x8]
 13918: 82 16 00 01              s1 = u64 [sp + 0x100]
 13922: 82 1b f8 00              a4 = u64 [sp + 0xf8]
 13926: 7b ac                    u64 [a3] = a5
 13928: 7b a5 08                 u64 [a3 + 0x8] = s0
 13931: 7b 76 08                 u64 [a0 + 0x8] = s1
 13934: 7b 7b                    u64 [a0] = a4
 13936: 82 a2                    t0 = u64 [a3]
 13938: 82 a0 08                 ra = u64 [a3 + 0x8]
 13941: 95 a4 10                 t2 = a3 + 0x10
 13944: 7b 18                    u64 [sp] = a1
 13946: 95 85 ff                 s0 = a1 + 0xffffffffffffffff
 13949: 95 ab 18                 a4 = a3 + 0x18
 13952: 01                       fallthrough
      :                          @1057
 13953: 82 b7 f8                 a0 = u64 [a4 + 0xfffffffffffffff8]
 13956: 82 bc                    a5 = u64 [a4]
 13958: d9 27 06                 s1 = a0 <s t0
 13961: d3 27 07                 a0 = a0 ^ t0
 13964: d9 0c 0c                 a5 = a5 <s ra
 13967: db 76 0c                 a5 = s1 if a0 != 0
 13970: 51 0c 0f                 jump @1060 if a5 == 0
      :                          @1058
 13973: 95 99 01                 a2 = a2 + 0x1
 13976: 95 bb 10                 a4 = a4 + 0x10
 13979: ab 95 e6                 jump @1057 if s0 != a2
      :                          @1059
 13982: 64 59                    a2 = s0
 13984: 01                       fallthrough
      :                          @1060
 13985: 82 17                    a0 = u64 [sp]
 13987: 97 77 04                 a0 = a0 << 0x4
 13990: 82 18 08                 a1 = u64 [sp + 0x8]
 13993: c8 87 07                 a0 = a0 + a1
 13996: 95 7b f8                 a4 = a0 + 0xfffffffffffffff8
 13999: 01                       fallthrough
      :                          @1061
 14000: 64 58                    a1 = s0
 14002: ae 59 1d                 jump @1063 if a2 >=u s0
      :                          @1062
 14005: 82 b7 f8                 a0 = u64 [a4 + 0xfffffffffffffff8]
 14008: 82 bc                    a5 = u64 [a4]
 14010: 95 85 ff                 s0 = a1 + 0xffffffffffffffff
 14013: d9 27 06                 s1 = a0 <s t0
 14016: d3 27 07                 a0 = a0 ^ t0
 14019: d9 0c 0c                 a5 = a5 <s ra
 14022: db 76 0c                 a5 = s1 if a0 != 0
 14025: 95 bb f0                 a4 = a4 + 0xfffffffffffffff0
 14028: 51 0c e4                 jump @1061 if a5 == 0
      :                          @1063
 14031: 64 97                    a0 = a2
 14033: ac 98 ad 03              jump @1110 if a1 <u a2
      :                          @1064
 14037: 33 0c                    a5 = 0
 14039: 33 05                    s0 = 0
 14041: 33 06                    s1 = 0
 14043: 33 03                    t1 = 0
 14045: 7b 17 28                 u64 [sp + 0x28] = a0
 14048: 97 77 04                 a0 = a0 << 0x4
 14051: c8 74 09                 a2 = t2 + a0
 14054: 7b 18 18                 u64 [sp + 0x18] = a1
 14057: 97 87 04                 a0 = a1 << 0x4
 14060: c8 74 04                 t2 = t2 + a0
 14063: 33 0a 80 00              a3 = 0x80
 14067: 7b 19 20                 u64 [sp + 0x20] = a2
 14070: 33 0b 80 00              a4 = 0x80
 14074: 7b 10 40                 u64 [sp + 0x40] = ra
 14077: 7b 12 58                 u64 [sp + 0x58] = t0
 14080: 28 4b                    jump @1067
      :                          @1065
 14082: 97 bb 04                 a4 = a4 << 0x4
 14085: c8 4b 0b                 a4 = a4 + t2
 14088: 82 17 50                 a0 = u64 [sp + 0x50]
 14091: 7b b7                    u64 [a4] = a0
 14093: 82 17 48                 a0 = u64 [sp + 0x48]
 14096: 7b b7 08                 u64 [a4 + 0x8] = a0
 14099: 95 cc 01                 a5 = a5 + 0x1
 14102: 95 66 01                 s1 = s1 + 0x1
 14105: 82 10 40                 ra = u64 [sp + 0x40]
 14108: 64 a9                    a2 = a3
 14110: 82 1a 70                 a3 = u64 [sp + 0x70]
 14113: 82 1b 60                 a4 = u64 [sp + 0x60]
 14116: 01                       fallthrough
      :                          @1066
 14117: d3 5c 07                 a0 = a5 ^ s0
 14120: 64 a8                    a1 = a3
 14122: 94 78                    a1 = 0 if a0 != 0
 14124: 97 88 04                 a1 = a1 << 0x4
 14127: c8 89 09                 a2 = a2 + a1
 14130: d3 36 07                 a0 = s1 ^ t1
 14133: 9a b8                    a1 = -a4
 14135: 94 78                    a1 = 0 if a0 != 0
 14137: 97 88 04                 a1 = a1 << 0x4
 14140: c8 84 04                 t2 = t2 + a1
 14143: 82 12 58                 t0 = u64 [sp + 0x58]
 14146: 82 17 68                 a0 = u64 [sp + 0x68]
 14149: 53 27 01 01 c8 01        jump @1091 if a0 <u 257
      :                          @1067
 14155: 7b 1a 70                 u64 [sp + 0x70] = a3
 14158: c9 94 07                 a0 = t2 - a2
 14161: 98 78 04                 a1 = a0 >> 0x4
 14164: 7b 18 68                 u64 [sp + 0x68] = a1
 14167: 55 28 01 01 c7 00        jump @1075 if a1 >=u 257
      :                          @1068
 14173: 7b 1b 60                 u64 [sp + 0x60] = a4
 14176: d8 5c 00                 ra = a5 <u s0
 14179: d8 36 0b                 a4 = s1 <u t1
 14182: d4 b0 02                 t0 = ra | a4
 14185: 51 02 be 00              jump @1077 if t0 == 0
      :                          @1069
 14189: 82 18 68                 a1 = u64 [sp + 0x68]
 14192: 95 87 80                 a0 = a1 + 0xffffffffffffff80
 14195: 82 1b 60                 a4 = u64 [sp + 0x60]
 14198: db 07 0b                 a4 = a0 if ra != 0
 14201: da 28 07                 a0 = a1 if t0 == 0
 14204: 82 1a 70                 a3 = u64 [sp + 0x70]
 14207: da 07 0a                 a3 = a0 if ra == 0
 14210: 82 10 40                 ra = u64 [sp + 0x40]
 14213: 82 12 58                 t0 = u64 [sp + 0x58]
 14216: aa 5c b2 00              jump @1078 if a5 == s0
      :                          @1070
 14220: aa 36 ff 00              jump @1082 if s1 == t1
      :                          @1071
 14224: c9 c5 07                 a0 = s0 - a5
 14227: c9 63 08                 a1 = t1 - s1
 14230: e6 87 02                 t0 = minu(a0, a1)
 14233: 51 02 8c                 jump @1066 if t0 == 0
      :                          @1072
 14236: 7b 1b 60                 u64 [sp + 0x60] = a4
 14239: 7b 1a 70                 u64 [sp + 0x70] = a3
 14242: 7c 60                    ra = u8 [s1]
 14244: 7c c7                    a0 = u8 [a5]
 14246: 85 0b ff                 a4 = ra ^ 0xffffffffffffffff
 14249: 97 b8 04                 a1 = a4 << 0x4
 14252: c8 48 08                 a1 = a1 + t2
 14255: 64 9a                    a3 = a2
 14257: 82 89                    a2 = u64 [a1]
 14259: 7b 19 48                 u64 [sp + 0x48] = a2
 14262: 97 77 04                 a0 = a0 << 0x4
 14265: c8 a7 07                 a0 = a0 + a3
 14268: 82 79                    a2 = u64 [a0]
 14270: 7b 19 50                 u64 [sp + 0x50] = a2
 14273: 82 19 48                 a2 = u64 [sp + 0x48]
 14276: 7b 79                    u64 [a0] = a2
 14278: 82 88 08                 a1 = u64 [a1 + 0x8]
 14281: 82 79 08                 a2 = u64 [a0 + 0x8]
 14284: 7b 19 48                 u64 [sp + 0x48] = a2
 14287: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 14290: 7b 78 08                 u64 [a0 + 0x8] = a1
 14293: 51 02 2d ff              jump @1065 if t0 == 0
      :                          @1073
 14297: 7c c7 01                 a0 = u8 [a5 + 0x1]
 14300: 97 77 04                 a0 = a0 << 0x4
 14303: c8 a7 07                 a0 = a0 + a3
 14306: 85 08 ff                 a1 = ra ^ 0xffffffffffffffff
 14309: 82 79 08                 a2 = u64 [a0 + 0x8]
 14312: 86 88 00 ff              a1 = a1 | 0xffffffffffffff00
 14316: 97 88 04                 a1 = a1 << 0x4
 14319: c8 48 08                 a1 = a1 + t2
 14322: 7b 89 08                 u64 [a1 + 0x8] = a2
 14325: 82 79                    a2 = u64 [a0]
 14327: 7b 89                    u64 [a1] = a2
 14329: 7c 60 01                 ra = u8 [s1 + 0x1]
 14332: 85 0b ff                 a4 = ra ^ 0xffffffffffffffff
 14335: 97 b8 04                 a1 = a4 << 0x4
 14338: c8 48 08                 a1 = a1 + t2
 14341: 82 89 08                 a2 = u64 [a1 + 0x8]
 14344: 7b 79 08                 u64 [a0 + 0x8] = a2
 14347: 82 88                    a1 = u64 [a1]
 14349: 95 cc 01                 a5 = a5 + 0x1
 14352: 95 66 01                 s1 = s1 + 0x1
 14355: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 14358: 7b 78                    u64 [a0] = a1
 14360: 52 02 c1                 jump @1073 if t0 != 0
      :                          @1074
 14363: 28 e7 fe                 jump @1065
      :                          @1075
 14366: 82 1a 70                 a3 = u64 [sp + 0x70]
 14369: ab 5c 6b ff              jump @1070 if a5 != s0
      :                          @1076
 14373: 28 15                    jump @1078
      :                          @1077
 14375: 98 7a 05                 a3 = a0 >> 0x5
 14378: 82 1b 68                 a4 = u64 [sp + 0x68]
 14381: c9 ab 0b                 a4 = a4 - a3
 14384: 82 10 40                 ra = u64 [sp + 0x40]
 14387: 82 12 58                 t0 = u64 [sp + 0x58]
 14390: ab 5c 56 ff              jump @1070 if a5 != s0
      :                          @1078
 14394: 51 0a af 00              jump @1087 if a3 == 0
      :                          @1079
 14398: 7b 1b 60                 u64 [sp + 0x60] = a4
 14401: 7b 14 48                 u64 [sp + 0x48] = t2
 14404: 33 07                    a0 = 0
 14406: 95 1c 78                 a5 = sp + 0x78
 14409: 7b 19 50                 u64 [sp + 0x50] = a2
 14412: 64 9b                    a4 = a2
 14414: 95 15 78                 s0 = sp + 0x78
 14417: 64 04                    t2 = ra
 14419: 64 a0                    ra = a3
 14421: 01                       fallthrough
      :                          @1080
 14422: 82 b8                    a1 = u64 [a4]
 14424: 95 7a 01                 a3 = a0 + 0x1
 14427: 82 b9 08                 a2 = u64 [a4 + 0x8]
 14430: 78 57                    u8 [s0] = a0
 14432: d9 28 07                 a0 = a1 <s t0
 14435: d3 28 08                 a1 = a1 ^ t0
 14438: d9 49 09                 a2 = a2 <s t2
 14441: db 87 09                 a2 = a0 if a1 != 0
 14444: 85 97 01                 a0 = a2 ^ 0x1
 14447: c8 75 05                 s0 = s0 + a0
 14450: 95 bb 10                 a4 = a4 + 0x10
 14453: 64 a7                    a0 = a3
 14455: ab a0 df                 jump @1080 if ra != a3
      :                          @1081
 14458: 82 19 50                 a2 = u64 [sp + 0x50]
 14461: 64 0a                    a3 = ra
 14463: 64 40                    ra = t2
 14465: 82 14 48                 t2 = u64 [sp + 0x48]
 14468: 82 1b 60                 a4 = u64 [sp + 0x60]
 14471: ab 36 09 ff              jump @1071 if s1 != t1
      :                          @1082
 14475: 51 0b 6a                 jump @1089 if a4 == 0
      :                          @1083
 14478: 7b 1a 70                 u64 [sp + 0x70] = a3
 14481: 7b 19 50                 u64 [sp + 0x50] = a2
 14484: 33 07                    a0 = 0
 14486: 64 48                    a1 = t2
 14488: 64 04                    t2 = ra
 14490: 64 b0                    ra = a4
 14492: 7b 18 48                 u64 [sp + 0x48] = a1
 14495: 95 8b f8                 a4 = a1 + 0xfffffffffffffff8
 14498: 95 16 f8 00              s1 = sp + 0xf8
 14502: 95 13 f8 00              t1 = sp + 0xf8
 14506: 01                       fallthrough
      :                          @1084
 14507: 82 b8 f8                 a1 = u64 [a4 + 0xfffffffffffffff8]
 14510: 95 79 01                 a2 = a0 + 0x1
 14513: 82 ba                    a3 = u64 [a4]
 14515: 78 37                    u8 [t1] = a0
 14517: d9 28 07                 a0 = a1 <s t0
 14520: d3 28 08                 a1 = a1 ^ t0
 14523: d9 4a 0a                 a3 = a3 <s t2
 14526: db 87 0a                 a3 = a0 if a1 != 0
 14529: c8 a3 03                 t1 = t1 + a3
 14532: 95 bb f0                 a4 = a4 + 0xfffffffffffffff0
 14535: 64 97                    a0 = a2
 14537: ab 90 e2                 jump @1084 if ra != a2
      :                          @1085
 14540: 82 19 50                 a2 = u64 [sp + 0x50]
 14543: 82 1a 70                 a3 = u64 [sp + 0x70]
 14546: 64 0b                    a4 = ra
 14548: 64 40                    ra = t2
 14550: 82 14 48                 t2 = u64 [sp + 0x48]
 14553: c9 c5 07                 a0 = s0 - a5
 14556: c9 63 08                 a1 = t1 - s1
 14559: e6 87 02                 t0 = minu(a0, a1)
 14562: 52 02 ba fe              jump @1072 if t0 != 0
      :                          @1086
 14566: 28 3f fe                 jump @1066
      :                          @1087
 14569: 95 1c 78                 a5 = sp + 0x78
 14572: 95 15 78                 s0 = sp + 0x78
 14575: ab 36 a1 fe              jump @1071 if s1 != t1
      :                          @1088
 14579: 28 98                    jump @1082
      :                          @1089
 14581: 95 16 f8 00              s1 = sp + 0xf8
 14585: 95 13 f8 00              t1 = sp + 0xf8
 14589: c9 c5 07                 a0 = s0 - a5
 14592: c9 63 08                 a1 = t1 - s1
 14595: e6 87 02                 t0 = minu(a0, a1)
 14598: 52 02 96 fe              jump @1072 if t0 != 0
      :                          @1090
 14602: 28 1b fe                 jump @1066
      :                          @1091
 14605: ae 5c 45                 jump @1094 if a5 >=u s0
      :                          @1092
 14608: 7c 57 ff                 a0 = u8 [s0 + 0xffffffffffffffff]
 14611: 97 77 04                 a0 = a0 << 0x4
 14614: c8 97 07                 a0 = a0 + a2
 14617: 82 78 08                 a1 = u64 [a0 + 0x8]
 14620: 64 93                    t1 = a2
 14622: 82 79                    a2 = u64 [a0]
 14624: 95 5a ff                 a3 = s0 + 0xffffffffffffffff
 14627: 82 4b f0                 a4 = u64 [t2 + 0xfffffffffffffff0]
 14630: 7b 18 80 01              u64 [sp + 0x180] = a1
 14634: 7b 19 78 01              u64 [sp + 0x178] = a2
 14638: 82 48 f8                 a1 = u64 [t2 + 0xfffffffffffffff8]
 14641: 7b 7b                    u64 [a0] = a4
 14643: 82 19 80 01              a2 = u64 [sp + 0x180]
 14647: 82 16 78 01              s1 = u64 [sp + 0x178]
 14651: 7b 78 08                 u64 [a0 + 0x8] = a1
 14654: 95 4b f0                 a4 = t2 + 0xfffffffffffffff0
 14657: 7b 49 f8                 u64 [t2 + 0xfffffffffffffff8] = a2
 14660: 64 39                    a2 = t1
 14662: 7b 46 f0                 u64 [t2 + 0xfffffffffffffff0] = s1
 14665: 64 b4                    t2 = a4
 14667: 64 a5                    s0 = a3
 14669: ac ac c3                 jump @1092 if a5 <u a3
      :                          @1093
 14672: 28 42                    jump @1096
      :                          @1094
 14674: 64 9b                    a4 = a2
 14676: ae 36 3e                 jump @1096 if s1 >=u t1
      :                          @1095
 14679: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
 14682: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 14685: 97 77 04                 a0 = a0 << 0x4
 14688: 82 b8 08                 a1 = u64 [a4 + 0x8]
 14691: 82 b9                    a2 = u64 [a4]
 14693: c8 47 07                 a0 = a0 + t2
 14696: 82 7a                    a3 = u64 [a0]
 14698: 7b 18 80 01              u64 [sp + 0x180] = a1
 14702: 7b 19 78 01              u64 [sp + 0x178] = a2
 14706: 82 78 08                 a1 = u64 [a0 + 0x8]
 14709: 7b ba                    u64 [a4] = a3
 14711: 82 19 80 01              a2 = u64 [sp + 0x180]
 14715: 82 1a 78 01              a3 = u64 [sp + 0x178]
 14719: 7b b8 08                 u64 [a4 + 0x8] = a1
 14722: 95 38 ff                 a1 = t1 + 0xffffffffffffffff
 14725: 7b 79 08                 u64 [a0 + 0x8] = a2
 14728: 7b 7a                    u64 [a0] = a3
 14730: 95 bb 10                 a4 = a4 + 0x10
 14733: 64 83                    t1 = a1
 14735: ac 86 c8                 jump @1095 if s1 <u a1
      :                          @1096
 14738: 82 17 20                 a0 = u64 [sp + 0x20]
 14741: c9 7b 07                 a0 = a4 - a0
 14744: 98 77 04                 a0 = a0 >> 0x4
 14747: 82 18 28                 a1 = u64 [sp + 0x28]
 14750: c8 87 05                 s0 = a0 + a1
 14753: 82 17 08                 a0 = u64 [sp + 0x8]
 14756: 7b 72                    u64 [a0] = t0
 14758: 7b 70 08                 u64 [a0 + 0x8] = ra
 14761: 82 18                    a1 = u64 [sp]
 14763: ae 85 d1 00              jump @1108 if s0 >=u a1
      :                          @1097
 14767: 82 17 08                 a0 = u64 [sp + 0x8]
 14770: 82 77 08                 a0 = u64 [a0 + 0x8]
 14773: 82 19 08                 a2 = u64 [sp + 0x8]
 14776: 82 99                    a2 = u64 [a2]
 14778: 97 56 04                 s1 = s0 << 0x4
 14781: 82 1a 08                 a3 = u64 [sp + 0x8]
 14784: c8 a6 06                 s1 = s1 + a3
 14787: 7b 17 00 01              u64 [sp + 0x100] = a0
 14791: 7b 19 f8 00              u64 [sp + 0xf8] = a2
 14795: 82 67                    a0 = u64 [s1]
 14797: 82 6b 08                 a4 = u64 [s1 + 0x8]
 14800: 82 19 00 01              a2 = u64 [sp + 0x100]
 14804: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 14808: 82 1c 08                 a5 = u64 [sp + 0x8]
 14811: 7b c7                    u64 [a5] = a0
 14813: 82 17 08                 a0 = u64 [sp + 0x8]
 14816: 7b 7b 08                 u64 [a0 + 0x8] = a4
 14819: 7b 69 08                 u64 [s1 + 0x8] = a2
 14822: 7b 6a                    u64 [s1] = a3
 14824: c9 58 08                 a1 = a1 - s0
 14827: 7b 18 70                 u64 [sp + 0x70] = a1
 14830: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
 14833: 95 68 10                 a1 = s1 + 0x10
 14836: ae b5 22                 jump @1100 if s0 >=u a4
      :                          @1098
 14839: 7b 18 60                 u64 [sp + 0x60] = a1
 14842: 64 58                    a1 = s0
 14844: 82 19 38                 a2 = u64 [sp + 0x38]
 14847: 82 1a 30                 a3 = u64 [sp + 0x30]
 14850: 7b 1b 68                 u64 [sp + 0x68] = a4
 14853: 50 20 70 01 b9 f7        ra = 368, jump @988
      :                          @1099 [@dyn 184]
 14859: 82 10 68                 ra = u64 [sp + 0x68]
 14862: 7b 16 38                 u64 [sp + 0x38] = s1
 14865: 82 1c 60                 a5 = u64 [sp + 0x60]
 14868: 28 1a                    jump @1102
      :                          @1100
 14870: 7b 17 08                 u64 [sp + 0x8] = a0
 14873: 64 87                    a0 = a1
 14875: 64 b8                    a1 = a4
 14877: 64 69                    a2 = s1
 14879: 82 1a 30                 a3 = u64 [sp + 0x30]
 14882: 50 20 72 01 9c f7        ra = 370, jump @988
      :                          @1101 [@dyn 185]
 14888: 82 1c 08                 a5 = u64 [sp + 0x8]
 14891: 64 50                    ra = s0
 14893: 01                       fallthrough
      :                          @1102
 14894: 82 17 28                 a0 = u64 [sp + 0x28]
 14897: 82 18 18                 a1 = u64 [sp + 0x18]
 14900: d8 87 07                 a0 = a0 <u a1
 14903: 85 77 01                 a0 = a0 ^ 0x1
 14906: 82 18 70                 a1 = u64 [sp + 0x70]
 14909: e6 85 08                 a1 = minu(s0, a1)
 14912: 82 19                    a2 = u64 [sp]
 14914: 98 99 03                 a2 = a2 >> 0x3
 14917: d8 98 08                 a1 = a1 <u a2
 14920: 85 88 01                 a1 = a1 ^ 0x1
 14923: 7b 18 58                 u64 [sp + 0x58] = a1
 14926: 7b 10                    u64 [sp] = ra
 14928: 7b 1c 08                 u64 [sp + 0x8] = a5
 14931: 33 08 15                 a1 = 0x15
 14934: ae 80 bb f7              jump @994 if ra >=u a1
      :                          @1103
 14938: 28 85 f7                 jump @990
      :                          @1104
 14941: 64 c7                    a0 = a5
 14943: 64 08                    a1 = ra
 14945: 33 00 74 01              ra = 0x174
 14949: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 14952: 7b 10 20                 u64 [sp + 0x20] = ra
 14955: 7b 15 18                 u64 [sp + 0x18] = s0
 14958: 7b 16 10                 u64 [sp + 0x10] = s1
 14961: 98 82 01                 t0 = a1 >> 0x1
 14964: 28 4d 0d                 jump @1330
      :                          @1105 [@dyn 186]
 14967: 28 7b f7                 jump @992
      :                          @1106
 14970: 00                       trap
      :                          @1107
 14971: 00                       trap
      :                          @1108
 14972: 00                       trap
      :                          @1109
 14973: 00                       trap
      :                          @1110
 14974: 00                       trap
      :                          @1111
 14975: 95 11 60 fe              sp = sp + 0xfffffffffffffe60
 14979: 7b 10 98 01              u64 [sp + 0x198] = ra
 14983: 7b 15 90 01              u64 [sp + 0x190] = s0
 14987: 7b 16 88 01              u64 [sp + 0x188] = s1
 14991: 33 0b 15                 a4 = 0x15
 14994: 7b 1a 48                 u64 [sp + 0x48] = a3
 14997: 7b 19 58                 u64 [sp + 0x58] = a2
 15000: 64 80                    ra = a1
 15002: ae b8 2b                 jump @1116 if a1 >=u a4
      :                          @1112
 15005: 64 72                    t0 = a0
 15007: 01                       fallthrough
      :                          @1113
 15008: 33 07 01                 a0 = 0x1
 15011: ae 07 10                 jump @1115 if a0 >=u ra
      :                          @1114
 15014: 33 09 01                 a2 = 0x1
 15017: 64 27                    a0 = t0
 15019: 64 08                    a1 = ra
 15021: 50 20 76 01 e8 ec        ra = 374, jump @775
      :                          @1115 [@dyn 187]
 15027: 82 10 98 01              ra = u64 [sp + 0x198]
 15031: 82 15 90 01              s0 = u64 [sp + 0x190]
 15035: 82 16 88 01              s1 = u64 [sp + 0x188]
 15039: 95 11 a0 01              sp = sp + 0x1a0
 15043: 32 00                    ret
      :                          @1116
 15045: 7b 17 08                 u64 [sp + 0x8] = a0
 15048: 49 11 78 01              u64 [sp + 120] = 0x1
 15052: 33 05 01 01              s0 = 0x101
 15056: 33 07 01                 a0 = 0x1
 15059: 7b 10                    u64 [sp] = ra
 15061: 01                       fallthrough
      :                          @1117
 15062: 82 18 78                 a1 = u64 [sp + 0x78]
 15065: d2 87 07                 a0 = a0 & a1
 15068: 7b 17 70                 u64 [sp + 0x70] = a0
 15071: 82 12 08                 t0 = u64 [sp + 0x8]
 15074: 01                       fallthrough
      :                          @1118
 15075: 81 17 48                 a0 = i32 [sp + 0x48]
 15078: 51 07 b6 05              jump @1214 if a0 == 0
      :                          @1119
 15082: 82 17 78                 a0 = u64 [sp + 0x78]
 15085: 84 77 01                 a0 = a0 & 0x1
 15088: 7b 12 80 00              u64 [sp + 0x80] = t0
 15092: 51 07 74 02              jump @1159 if a0 == 0
      :                          @1120
 15096: 98 0b 02                 a4 = ra >> 0x2
 15099: 97 b6 01                 s1 = a4 << 0x1
 15102: c8 b6 03                 t1 = s1 + a4
 15105: 54 10 31 29              jump @1123 if ra <=u 49
      :                          @1121
 15109: 95 b5 ff                 s0 = a4 + 0xffffffffffffffff
 15112: 97 b7 03                 a0 = a4 << 0x3
 15115: c8 27 07                 a0 = a0 + t0
 15118: 97 58 03                 a1 = s0 << 0x3
 15121: c8 28 08                 a1 = a1 + t0
 15124: 82 79                    a2 = u64 [a0]
 15126: 82 88                    a1 = u64 [a1]
 15128: ae 98 17                 jump @1124 if a1 >=u a2
      :                          @1122
 15131: 49 11 28 01              u64 [sp + 40] = 0x1
 15135: 64 94                    t2 = a2
 15137: 7b 15 50                 u64 [sp + 0x50] = s0
 15140: 64 b5                    s0 = a4
 15142: 64 89                    a2 = a1
 15144: 28 10                    jump @1125
      :                          @1123
 15146: 33 09                    a2 = 0
 15148: 28 1e 01                 jump @1132
      :                          @1124
 15151: 49 11 28                 u64 [sp + 40] = 0
 15154: 64 84                    t2 = a1
 15156: 7b 1b 50                 u64 [sp + 0x50] = a4
 15159: 01                       fallthrough
      :                          @1125
 15160: 95 b8 01                 a1 = a4 + 0x1
 15163: 7b 18 40                 u64 [sp + 0x40] = a1
 15166: 97 88 03                 a1 = a1 << 0x3
 15169: 82 1b 80 00              a4 = u64 [sp + 0x80]
 15173: c8 b8 08                 a1 = a1 + a4
 15176: 82 87                    a0 = u64 [a1]
 15178: d8 79 02                 t0 = a2 <u a0
 15181: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
 15184: 97 68 03                 a1 = s1 << 0x3
 15187: c8 b8 08                 a1 = a1 + a4
 15190: 97 ac 03                 a5 = a3 << 0x3
 15193: c8 cb 0b                 a4 = a4 + a5
 15196: 82 8c                    a5 = u64 [a1]
 15198: 82 b8                    a1 = u64 [a4]
 15200: e4 79 07                 a0 = maxu(a2, a0)
 15203: d8 74 09                 a2 = t2 <u a0
 15206: 7b 12 38                 u64 [sp + 0x38] = t0
 15209: 82 17 28                 a0 = u64 [sp + 0x28]
 15212: c8 27 07                 a0 = a0 + t0
 15215: c8 97 07                 a0 = a0 + a2
 15218: 7b 10 68                 u64 [sp + 0x68] = ra
 15221: 7b 15 60                 u64 [sp + 0x60] = s0
 15224: 7b 19 30                 u64 [sp + 0x30] = a2
 15227: ae c8 13                 jump @1127 if a1 >=u a5
      :                          @1126
 15230: 95 77 01                 a0 = a0 + 0x1
 15233: 7b 17 18                 u64 [sp + 0x18] = a0
 15236: 7b 1c 20                 u64 [sp + 0x20] = a5
 15239: 7b 1a 28                 u64 [sp + 0x28] = a3
 15242: 64 6a                    a3 = s1
 15244: 28 0e                    jump @1128
      :                          @1127
 15246: 7b 18 20                 u64 [sp + 0x20] = a1
 15249: 7b 16 28                 u64 [sp + 0x28] = s1
 15252: 64 c8                    a1 = a5
 15254: 7b 17 18                 u64 [sp + 0x18] = a0
 15257: 01                       fallthrough
      :                          @1128
 15258: 86 66 01                 s1 = s1 | 0x1
 15261: 97 6b 03                 a4 = s1 << 0x3
 15264: 82 15 80 00              s0 = u64 [sp + 0x80]
 15268: c8 5b 0b                 a4 = a4 + s0
 15271: 82 bb                    a4 = u64 [a4]
 15273: d8 b8 07                 a0 = a1 <u a4
 15276: 95 34 ff                 t2 = t1 + 0xffffffffffffffff
 15279: 97 39 03                 a2 = t1 << 0x3
 15282: c8 59 09                 a2 = a2 + s0
 15285: 97 4c 03                 a5 = t2 << 0x3
 15288: c8 5c 0c                 a5 = a5 + s0
 15291: 82 92                    t0 = u64 [a2]
 15293: 82 c0                    ra = u64 [a5]
 15295: e4 b8 08                 a1 = maxu(a1, a4)
 15298: 82 19 20                 a2 = u64 [sp + 0x20]
 15301: d8 89 09                 a2 = a2 <u a1
 15304: 7b 17 20                 u64 [sp + 0x20] = a0
 15307: 82 18 18                 a1 = u64 [sp + 0x18]
 15310: c8 87 07                 a0 = a0 + a1
 15313: c8 97 07                 a0 = a0 + a2
 15316: ae 20 12                 jump @1130 if ra >=u t0
      :                          @1129
 15319: 95 77 01                 a0 = a0 + 0x1
 15322: 7b 17 18                 u64 [sp + 0x18] = a0
 15325: 7b 12 10                 u64 [sp + 0x10] = t0
 15328: 64 47                    a0 = t2
 15330: 64 34                    t2 = t1
 15332: 28 0d                    jump @1131
      :                          @1130
 15334: 7b 10 10                 u64 [sp + 0x10] = ra
 15337: 7b 17 18                 u64 [sp + 0x18] = a0
 15340: 64 37                    a0 = t1
 15342: 64 20                    ra = t0
 15344: 01                       fallthrough
      :                          @1131
 15345: 82 15 60                 s0 = u64 [sp + 0x60]
 15348: 82 1c 50                 a5 = u64 [sp + 0x50]
 15351: 82 18 40                 a1 = u64 [sp + 0x40]
 15354: 82 1b 38                 a4 = u64 [sp + 0x38]
 15357: da bc 08                 a1 = a5 if a4 == 0
 15360: 95 33 01                 t1 = t1 + 0x1
 15363: 97 3c 03                 a5 = t1 << 0x3
 15366: 82 12 80 00              t0 = u64 [sp + 0x80]
 15370: c8 2c 0c                 a5 = a5 + t0
 15373: 82 cc                    a5 = u64 [a5]
 15375: 82 1b 30                 a4 = u64 [sp + 0x30]
 15378: da b8 05                 s0 = a1 if a4 == 0
 15381: 82 18 28                 a1 = u64 [sp + 0x28]
 15384: 82 1b 20                 a4 = u64 [sp + 0x20]
 15387: da b8 06                 s1 = a1 if a4 == 0
 15390: da 96 0a                 a3 = s1 if a2 == 0
 15393: d8 c0 09                 a2 = ra <u a5
 15396: db 93 07                 a0 = t1 if a2 != 0
 15399: e4 c0 0c                 a5 = maxu(ra, a5)
 15402: 82 18 10                 a1 = u64 [sp + 0x10]
 15405: d8 c8 08                 a1 = a1 <u a5
 15408: db 84 07                 a0 = t2 if a1 != 0
 15411: c8 98 08                 a1 = a1 + a2
 15414: 82 19 18                 a2 = u64 [sp + 0x18]
 15417: c8 89 09                 a2 = a2 + a1
 15420: 64 73                    t1 = a0
 15422: 64 a6                    s1 = a3
 15424: 64 5b                    a4 = s0
 15426: 82 10 68                 ra = u64 [sp + 0x68]
 15429: 33 05 01 01              s0 = 0x101
 15433: 01                       fallthrough
      :                          @1132
 15434: 97 67 03                 a0 = s1 << 0x3
 15437: c8 27 07                 a0 = a0 + t0
 15440: 97 b8 03                 a1 = a4 << 0x3
 15443: c8 82 0a                 a3 = t0 + a1
 15446: 82 78                    a1 = u64 [a0]
 15448: 82 a7                    a0 = u64 [a3]
 15450: ae 87 0c                 jump @1134 if a0 >=u a1
      :                          @1133
 15453: 95 99 01                 a2 = a2 + 0x1
 15456: 64 8c                    a5 = a1
 15458: 64 ba                    a3 = a4
 15460: 28 0b                    jump @1135
      :                          @1134
 15462: 64 7c                    a5 = a0
 15464: 64 6a                    a3 = s1
 15466: 64 b6                    s1 = a4
 15468: 64 87                    a0 = a1
 15470: 01                       fallthrough
      :                          @1135
 15471: 97 38 03                 a1 = t1 << 0x3
 15474: c8 28 08                 a1 = a1 + t0
 15477: 82 8b                    a4 = u64 [a1]
 15479: d8 b7 08                 a1 = a0 <u a4
 15482: e4 b7 07                 a0 = maxu(a0, a4)
 15485: c8 89 09                 a2 = a2 + a1
 15488: ae 7c 09                 jump @1138 if a5 >=u a0
      :                          @1136
 15491: 55 19 0b 1a              jump @1140 if a2 >=u 11
      :                          @1137
 15495: 28 49                    jump @1143
      :                          @1138
 15497: da 8a 03                 t1 = a3 if a1 == 0
 15500: 64 36                    s1 = t1
 15502: 88 97 01                 a0 = a2 <u 0x1
 15505: 82 18 70                 a1 = u64 [sp + 0x70]
 15508: d2 87 07                 a0 = a0 & a1
 15511: 51 07 39                 jump @1143 if a0 == 0
      :                          @1139
 15514: 28 f0 00                 jump @1161
      :                          @1140
 15517: 98 07 01                 a0 = ra >> 0x1
 15520: 97 08 03                 a1 = ra << 0x3
 15523: c8 28 08                 a1 = a1 + t0
 15526: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 15529: 64 29                    a2 = t0
 15531: 01                       fallthrough
      :                          @1141
 15532: 82 8a                    a3 = u64 [a1]
 15534: 82 9b                    a4 = u64 [a2]
 15536: 7b 9a                    u64 [a2] = a3
 15538: 7b 8b                    u64 [a1] = a4
 15540: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 15543: 95 99 08                 a2 = a2 + 0x8
 15546: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 15549: 52 07 ef                 jump @1141 if a0 != 0
      :                          @1142
 15552: 85 66 ff                 s1 = s1 ^ 0xffffffffffffffff
 15555: c8 06 06                 s1 = s1 + ra
 15558: 82 18 70                 a1 = u64 [sp + 0x70]
 15561: 84 87 01                 a0 = a1 & 0x1
 15564: 52 07 be 00              jump @1161 if a0 != 0
      :                          @1143
 15568: 97 67 03                 a0 = s1 << 0x3
 15571: 82 18 58                 a1 = u64 [sp + 0x58]
 15574: 51 08 d1 00              jump @1164 if a1 == 0
      :                          @1144
 15578: ae 06 d3 03              jump @1216 if s1 >=u ra
      :                          @1145
 15582: c8 72 08                 a1 = t0 + a0
 15585: 82 19 58                 a2 = u64 [sp + 0x58]
 15588: 82 9a                    a3 = u64 [a2]
 15590: 82 89                    a2 = u64 [a1]
 15592: ac a9 c3 00              jump @1165 if a2 <u a3
      :                          @1146
 15596: 82 27                    a0 = u64 [t0]
 15598: 7b 29                    u64 [t0] = a2
 15600: 7b 87                    u64 [a1] = a0
 15602: 82 28                    a1 = u64 [t0]
 15604: 33 07                    a0 = 0
 15606: 95 29 08                 a2 = t0 + 0x8
 15609: 95 0a ff                 a3 = ra + 0xffffffffffffffff
 15612: 54 0a 22                 jump @1151 if a3 <=u 0
      :                          @1147
 15615: 97 7b 03                 a4 = a0 << 0x3
 15618: c8 9b 0b                 a4 = a4 + a2
 15621: 01                       fallthrough
      :                          @1148
 15622: 82 bc                    a5 = u64 [a4]
 15624: ac 8c 16                 jump @1151 if a5 <u a1
      :                          @1149
 15627: 95 77 01                 a0 = a0 + 0x1
 15630: 95 bb 08                 a4 = a4 + 0x8
 15633: ab 7a f5                 jump @1148 if a3 != a0
      :                          @1150
 15636: 64 a7                    a0 = a3
 15638: 97 ab 03                 a4 = a3 << 0x3
 15641: c8 9b 0b                 a4 = a4 + a2
 15644: 28 09                    jump @1152
      :                          @1151
 15646: 97 ab 03                 a4 = a3 << 0x3
 15649: c8 9b 0b                 a4 = a4 + a2
 15652: 01                       fallthrough
      :                          @1152
 15653: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 15656: ae a7 26                 jump @1156 if a0 >=u a3
      :                          @1153
 15659: 82 b6 f8                 s1 = u64 [a4 + 0xfffffffffffffff8]
 15662: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
 15665: 64 cb                    a4 = a5
 15667: ac 86 f2                 jump @1152 if s1 <u a1
      :                          @1154
 15670: 97 7b 03                 a4 = a0 << 0x3
 15673: c8 9b 0b                 a4 = a4 + a2
 15676: 82 b5                    s0 = u64 [a4]
 15678: 7b b6                    u64 [a4] = s1
 15680: 7b c5                    u64 [a5] = s0
 15682: 33 05 01 01              s0 = 0x101
 15686: 95 77 01                 a0 = a0 + 0x1
 15689: ac a7 b6                 jump @1147 if a0 <u a3
      :                          @1155
 15692: 28 d2                    jump @1151
      :                          @1156
 15694: 95 77 01                 a0 = a0 + 0x1
 15697: 7b 28                    u64 [t0] = a1
 15699: ac 70 5c 03              jump @1218 if ra <u a0
      :                          @1157
 15703: c9 70 00                 ra = ra - a0
 15706: 97 77 03                 a0 = a0 << 0x3
 15709: c8 72 02                 t0 = t0 + a0
 15712: 55 10 15 83 fd           jump @1118 if ra >=u 21
      :                          @1158
 15717: 28 3b fd                 jump @1113
      :                          @1159
 15720: 64 27                    a0 = t0
 15722: 64 08                    a1 = ra
 15724: 64 05                    s0 = ra
 15726: 50 20 78 01 f6 dc        ra = 376, jump @465
      :                          @1160 [@dyn 188]
 15732: 82 12 80 00              t0 = u64 [sp + 0x80]
 15736: 64 50                    ra = s0
 15738: 33 05 01 01              s0 = 0x101
 15742: 82 17 48                 a0 = u64 [sp + 0x48]
 15745: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 15748: 7b 17 48                 u64 [sp + 0x48] = a0
 15751: 28 71 fd                 jump @1120
      :                          @1161
 15754: 64 27                    a0 = t0
 15756: 64 08                    a1 = ra
 15758: 64 05                    s0 = ra
 15760: 50 20 7a 01 bf e4        ra = 378, jump @625
      :                          @1162 [@dyn 189]
 15766: 82 12 80 00              t0 = u64 [sp + 0x80]
 15770: 64 50                    ra = s0
 15772: 33 05 01 01              s0 = 0x101
 15776: 51 07 30 ff              jump @1143 if a0 == 0
      :                          @1163
 15780: 28 0f fd                 jump @1115
      :                          @1164
 15783: 82 18                    a1 = u64 [sp]
 15785: 28 08                    jump @1166
      :                          @1165
 15787: 7b 12 08                 u64 [sp + 0x8] = t0
 15790: 64 08                    a1 = ra
 15792: 01                       fallthrough
      :                          @1166
 15793: ae 86 fd 02              jump @1217 if s1 >=u a1
      :                          @1167
 15797: 82 1b 08                 a4 = u64 [sp + 0x8]
 15800: c8 b7 07                 a0 = a0 + a4
 15803: 82 7a                    a3 = u64 [a0]
 15805: 82 b9                    a2 = u64 [a4]
 15807: 7b ba                    u64 [a4] = a3
 15809: 7b 79                    u64 [a0] = a2
 15811: 82 b0                    ra = u64 [a4]
 15813: 33 09                    a2 = 0
 15815: 95 b2 08                 t0 = a4 + 0x8
 15818: 7b 18                    u64 [sp] = a1
 15820: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 15823: 64 27                    a0 = t0
 15825: 01                       fallthrough
      :                          @1168
 15826: 82 7a                    a3 = u64 [a0]
 15828: ae a0 0f                 jump @1171 if ra >=u a3
      :                          @1169
 15831: 95 99 01                 a2 = a2 + 0x1
 15834: 95 77 08                 a0 = a0 + 0x8
 15837: ab 98 f5                 jump @1168 if a1 != a2
      :                          @1170
 15840: 64 89                    a2 = a1
 15842: 01                       fallthrough
      :                          @1171
 15843: 82 17                    a0 = u64 [sp]
 15845: 97 77 03                 a0 = a0 << 0x3
 15848: 82 1a 08                 a3 = u64 [sp + 0x8]
 15851: c8 a7 07                 a0 = a0 + a3
 15854: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
 15857: 01                       fallthrough
      :                          @1172
 15858: 64 8b                    a4 = a1
 15860: ae 89 0e                 jump @1174 if a2 >=u a1
      :                          @1173
 15863: 82 a7                    a0 = u64 [a3]
 15865: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
 15868: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 15871: ae 70 f3                 jump @1172 if ra >=u a0
      :                          @1174
 15874: 64 b8                    a1 = a4
 15876: ac 9b ac 02              jump @1219 if a4 <u a2
      :                          @1175
 15880: 33 0b                    a4 = 0
 15882: 33 0c                    a5 = 0
 15884: 33 06                    s1 = 0
 15886: 33 03                    t1 = 0
 15888: 7b 19 40                 u64 [sp + 0x40] = a2
 15891: 97 97 03                 a0 = a2 << 0x3
 15894: c8 72 09                 a2 = t0 + a0
 15897: 7b 18 30                 u64 [sp + 0x30] = a1
 15900: 97 87 03                 a0 = a1 << 0x3
 15903: c8 72 08                 a1 = t0 + a0
 15906: 33 04 80 00              t2 = 0x80
 15910: 7b 19 38                 u64 [sp + 0x38] = a2
 15913: 64 9a                    a3 = a2
 15915: 33 02 80 00              t0 = 0x80
 15919: 7b 10 50                 u64 [sp + 0x50] = ra
 15922: 28 42                    jump @1178
      :                          @1176
 15924: 97 00 03                 ra = ra << 0x3
 15927: c8 80 00                 ra = ra + a1
 15930: 82 17 60                 a0 = u64 [sp + 0x60]
 15933: 7b 07                    u64 [ra] = a0
 15935: 95 bb 01                 a4 = a4 + 0x1
 15938: 95 66 01                 s1 = s1 + 0x1
 15941: 82 10 50                 ra = u64 [sp + 0x50]
 15944: 82 14 68                 t2 = u64 [sp + 0x68]
 15947: 01                       fallthrough
      :                          @1177
 15948: d3 cb 07                 a0 = a4 ^ a5
 15951: 64 49                    a2 = t2
 15953: 94 79                    a2 = 0 if a0 != 0
 15955: 97 99 03                 a2 = a2 << 0x3
 15958: c8 9a 0a                 a3 = a3 + a2
 15961: d3 36 07                 a0 = s1 ^ t1
 15964: 82 12 70                 t0 = u64 [sp + 0x70]
 15967: 9a 29                    a2 = -t0
 15969: 94 79                    a2 = 0 if a0 != 0
 15971: 97 99 03                 a2 = a2 << 0x3
 15974: c8 98 08                 a1 = a1 + a2
 15977: 33 05 01 01              s0 = 0x101
 15981: 82 17 78                 a0 = u64 [sp + 0x78]
 15984: ac 57 3e 01              jump @1200 if a0 <u s0
      :                          @1178
 15988: c9 a8 07                 a0 = a1 - a3
 15991: 98 79 03                 a2 = a0 >> 0x3
 15994: 7b 1a 80 00              u64 [sp + 0x80] = a3
 15998: 7b 19 78                 u64 [sp + 0x78] = a2
 16001: ac 59 38                 jump @1185 if a2 <u s0
      :                          @1179
 16004: aa cb 71                 jump @1189 if a4 == a5
      :                          @1180
 16007: ab 36 b4 00              jump @1196 if s1 != t1
      :                          @1181
 16011: 51 02 9a 00              jump @1194 if t0 == 0
      :                          @1182
 16015: 33 07                    a0 = 0
 16017: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
 16020: 95 16 08 01              s1 = sp + 0x108
 16024: 95 13 08 01              t1 = sp + 0x108
 16028: 01                       fallthrough
      :                          @1183
 16029: 82 a9                    a2 = u64 [a3]
 16031: 78 37                    u8 [t1] = a0
 16033: 95 75 01                 s0 = a0 + 0x1
 16036: d8 90 07                 a0 = ra <u a2
 16039: c8 73 03                 t1 = t1 + a0
 16042: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 16045: 64 57                    a0 = s0
 16047: ab 52 ee                 jump @1183 if t0 != s0
      :                          @1184
 16050: 82 1a 80 00              a3 = u64 [sp + 0x80]
 16054: 28 85 00                 jump @1196
      :                          @1185
 16057: 64 25                    s0 = t0
 16059: 64 49                    a2 = t2
 16061: d8 cb 04                 t2 = a4 <u a5
 16064: d8 36 0a                 a3 = s1 <u t1
 16067: d4 a4 02                 t0 = t2 | a3
 16070: 51 02 1f                 jump @1188 if t0 == 0
      :                          @1186
 16073: 82 1a 78                 a3 = u64 [sp + 0x78]
 16076: 95 a7 80                 a0 = a3 + 0xffffffffffffff80
 16079: db 47 05                 s0 = a0 if t2 != 0
 16082: da 2a 07                 a0 = a3 if t0 == 0
 16085: 64 52                    t0 = s0
 16087: da 47 09                 a2 = a0 if t2 == 0
 16090: 64 94                    t2 = a2
 16092: 82 1a 80 00              a3 = u64 [sp + 0x80]
 16096: ab cb a7                 jump @1180 if a4 != a5
      :                          @1187
 16099: 28 12                    jump @1189
      :                          @1188
 16101: 98 74 04                 t2 = a0 >> 0x4
 16104: 82 17 78                 a0 = u64 [sp + 0x78]
 16107: c9 47 02                 t0 = a0 - t2
 16110: 82 1a 80 00              a3 = u64 [sp + 0x80]
 16114: ab cb 95                 jump @1180 if a4 != a5
      :                          @1189
 16117: 51 04 3a                 jump @1195 if t2 == 0
      :                          @1190
 16120: 33 07                    a0 = 0
 16122: 95 1b 88 00              a4 = sp + 0x88
 16126: 95 1c 88 00              a5 = sp + 0x88
 16130: 01                       fallthrough
      :                          @1191
 16131: 82 a5                    s0 = u64 [a3]
 16133: 78 c7                    u8 [a5] = a0
 16135: 95 79 01                 a2 = a0 + 0x1
 16138: d8 50 07                 a0 = ra <u s0
 16141: 85 77 01                 a0 = a0 ^ 0x1
 16144: c8 7c 0c                 a5 = a5 + a0
 16147: 95 aa 08                 a3 = a3 + 0x8
 16150: 64 97                    a0 = a2
 16152: ab 94 eb                 jump @1191 if t2 != a2
      :                          @1192
 16155: 82 1a 80 00              a3 = u64 [sp + 0x80]
 16159: ab 36 1c                 jump @1196 if s1 != t1
      :                          @1193
 16162: 28 69 ff                 jump @1181
      :                          @1194
 16165: 95 16 08 01              s1 = sp + 0x108
 16169: 95 13 08 01              t1 = sp + 0x108
 16173: 28 0e                    jump @1196
      :                          @1195
 16175: 95 1b 88 00              a4 = sp + 0x88
 16179: 95 1c 88 00              a5 = sp + 0x88
 16183: aa 36 54 ff              jump @1181 if s1 == t1
      :                          @1196
 16187: 7b 12 70                 u64 [sp + 0x70] = t0
 16190: c9 bc 07                 a0 = a5 - a4
 16193: c9 63 09                 a2 = t1 - s1
 16196: e6 97 02                 t0 = minu(a0, a2)
 16199: 51 02 05 ff              jump @1177 if t0 == 0
      :                          @1197
 16203: 7b 14 68                 u64 [sp + 0x68] = t2
 16206: 7c b7                    a0 = u8 [a4]
 16208: 7c 64                    t2 = u8 [s1]
 16210: 97 77 03                 a0 = a0 << 0x3
 16213: c8 a7 07                 a0 = a0 + a3
 16216: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
 16219: 97 09 03                 a2 = ra << 0x3
 16222: c8 89 09                 a2 = a2 + a1
 16225: 82 99                    a2 = u64 [a2]
 16227: 82 75                    s0 = u64 [a0]
 16229: 7b 15 60                 u64 [sp + 0x60] = s0
 16232: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 16235: 7b 79                    u64 [a0] = a2
 16237: 51 02 c7 fe              jump @1176 if t0 == 0
      :                          @1198
 16241: 7c b7 01                 a0 = u8 [a4 + 0x1]
 16244: 97 77 03                 a0 = a0 << 0x3
 16247: c8 a7 07                 a0 = a0 + a3
 16250: 85 49 ff                 a2 = t2 ^ 0xffffffffffffffff
 16253: 82 7a                    a3 = u64 [a0]
 16255: 97 99 03                 a2 = a2 << 0x3
 16258: 86 99 00 f8              a2 = a2 | 0xfffffffffffff800
 16262: c8 89 09                 a2 = a2 + a1
 16265: 7b 9a                    u64 [a2] = a3
 16267: 82 1a 80 00              a3 = u64 [sp + 0x80]
 16271: 7c 64 01                 t2 = u8 [s1 + 0x1]
 16274: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
 16277: 97 09 03                 a2 = ra << 0x3
 16280: c8 89 09                 a2 = a2 + a1
 16283: 82 99                    a2 = u64 [a2]
 16285: 95 bb 01                 a4 = a4 + 0x1
 16288: 95 66 01                 s1 = s1 + 0x1
 16291: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 16294: 7b 79                    u64 [a0] = a2
 16296: 52 02 c9                 jump @1198 if t0 != 0
      :                          @1199
 16299: 28 89 fe                 jump @1176
      :                          @1200
 16302: ae cb 2b                 jump @1204 if a4 >=u a5
      :                          @1201
 16305: 82 12 08                 t0 = u64 [sp + 0x8]
 16308: 64 a3                    t1 = a3
 16310: 01                       fallthrough
      :                          @1202
 16311: 7c c7 ff                 a0 = u8 [a5 + 0xffffffffffffffff]
 16314: 97 77 03                 a0 = a0 << 0x3
 16317: c8 37 07                 a0 = a0 + t1
 16320: 82 85 f8                 s0 = u64 [a1 + 0xfffffffffffffff8]
 16323: 82 79                    a2 = u64 [a0]
 16325: 95 c6 ff                 s1 = a5 + 0xffffffffffffffff
 16328: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
 16331: 7b 75                    u64 [a0] = s0
 16333: 7b 89 f8                 u64 [a1 + 0xfffffffffffffff8] = a2
 16336: 64 a8                    a1 = a3
 16338: 64 6c                    a5 = s1
 16340: ac 6b e3                 jump @1202 if a4 <u s1
      :                          @1203
 16343: 28 27                    jump @1206
      :                          @1204
 16345: 82 12 08                 t0 = u64 [sp + 0x8]
 16348: ae 36 22                 jump @1206 if s1 >=u t1
      :                          @1205
 16351: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
 16354: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 16357: 97 77 03                 a0 = a0 << 0x3
 16360: c8 87 07                 a0 = a0 + a1
 16363: 82 79                    a2 = u64 [a0]
 16365: 82 ab                    a4 = u64 [a3]
 16367: 95 3c ff                 a5 = t1 + 0xffffffffffffffff
 16370: 7b a9                    u64 [a3] = a2
 16372: 7b 7b                    u64 [a0] = a4
 16374: 95 aa 08                 a3 = a3 + 0x8
 16377: 64 c3                    t1 = a5
 16379: ac c6 e4                 jump @1205 if s1 <u a5
      :                          @1206
 16382: 82 17 38                 a0 = u64 [sp + 0x38]
 16385: c9 7a 07                 a0 = a3 - a0
 16388: 98 77 03                 a0 = a0 >> 0x3
 16391: 82 16 40                 s1 = u64 [sp + 0x40]
 16394: c8 76 06                 s1 = s1 + a0
 16397: 7b 20                    u64 [t0] = ra
 16399: 82 18                    a1 = u64 [sp]
 16401: ae 86 9d 00              jump @1217 if s1 >=u a1
      :                          @1207
 16405: 97 67 03                 a0 = s1 << 0x3
 16408: c8 72 09                 a2 = t0 + a0
 16411: 82 97                    a0 = u64 [a2]
 16413: 7b 27                    u64 [t0] = a0
 16415: 7b 90                    u64 [a2] = ra
 16417: 64 25                    s0 = t0
 16419: c9 68 08                 a1 = a1 - s1
 16422: 7b 18 80 00              u64 [sp + 0x80] = a1
 16426: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
 16429: 95 97 08                 a0 = a2 + 0x8
 16432: ae b6 28                 jump @1210 if s1 >=u a4
      :                          @1208
 16435: 7b 17 78                 u64 [sp + 0x78] = a0
 16438: 64 57                    a0 = s0
 16440: 64 68                    a1 = s1
 16442: 7b 19 70                 u64 [sp + 0x70] = a2
 16445: 82 19 58                 a2 = u64 [sp + 0x58]
 16448: 82 1a 48                 a3 = u64 [sp + 0x48]
 16451: 64 b5                    s0 = a4
 16453: 50 20 7c 01 3a fa        ra = 380, jump @1111
      :                          @1209 [@dyn 190]
 16459: 64 50                    ra = s0
 16461: 82 17 70                 a0 = u64 [sp + 0x70]
 16464: 7b 17 58                 u64 [sp + 0x58] = a0
 16467: 82 15 78                 s0 = u64 [sp + 0x78]
 16470: 28 10                    jump @1212
      :                          @1210
 16472: 64 b8                    a1 = a4
 16474: 82 1a 48                 a3 = u64 [sp + 0x48]
 16477: 50 20 7e 01 22 fa        ra = 382, jump @1111
      :                          @1211 [@dyn 191]
 16483: 64 60                    ra = s1
 16485: 01                       fallthrough
      :                          @1212
 16486: 82 17 40                 a0 = u64 [sp + 0x40]
 16489: 82 18 30                 a1 = u64 [sp + 0x30]
 16492: d8 87 07                 a0 = a0 <u a1
 16495: 85 77 01                 a0 = a0 ^ 0x1
 16498: 82 18 80 00              a1 = u64 [sp + 0x80]
 16502: e6 86 08                 a1 = minu(s1, a1)
 16505: 82 19                    a2 = u64 [sp]
 16507: 98 99 03                 a2 = a2 >> 0x3
 16510: d8 98 08                 a1 = a1 <u a2
 16513: 85 88 01                 a1 = a1 ^ 0x1
 16516: 7b 18 78                 u64 [sp + 0x78] = a1
 16519: 7b 10                    u64 [sp] = ra
 16521: 7b 15 08                 u64 [sp + 0x8] = s0
 16524: 64 52                    t0 = s0
 16526: 33 08 15                 a1 = 0x15
 16529: 33 05 01 01              s0 = 0x101
 16533: ae 80 41 fa              jump @1117 if ra >=u a1
      :                          @1213
 16537: 28 07 fa                 jump @1113
      :                          @1214
 16540: 64 27                    a0 = t0
 16542: 64 08                    a1 = ra
 16544: 33 00 80 01              ra = 0x180
 16548: 98 82 01                 t0 = a1 >> 0x1
 16551: 28 94 08                 jump @1359
      :                          @1215 [@dyn 192]
 16554: 28 09 fa                 jump @1115
      :                          @1216
 16557: 00                       trap
      :                          @1217
 16558: 00                       trap
      :                          @1218
 16559: 00                       trap
      :                          @1219
 16560: 00                       trap
      :                          @1220
 16561: 95 11 50 fe              sp = sp + 0xfffffffffffffe50
 16565: 7b 10 a8 01              u64 [sp + 0x1a8] = ra
 16569: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
 16573: 7b 16 98 01              u64 [sp + 0x198] = s1
 16577: 33 0b 15                 a4 = 0x15
 16580: 7b 1a 40                 u64 [sp + 0x40] = a3
 16583: 7b 19 48                 u64 [sp + 0x48] = a2
 16586: 7b 18 08                 u64 [sp + 0x8] = a1
 16589: ae b8 2e                 jump @1225 if a1 >=u a4
      :                          @1221
 16592: 82 10 08                 ra = u64 [sp + 0x8]
 16595: 64 76                    s1 = a0
 16597: 01                       fallthrough
      :                          @1222
 16598: 33 07 01                 a0 = 0x1
 16601: ae 07 10                 jump @1224 if a0 >=u ra
      :                          @1223
 16604: 33 09 01                 a2 = 0x1
 16607: 64 67                    a0 = s1
 16609: 64 08                    a1 = ra
 16611: 50 20 82 01 36 e8        ra = 386, jump @813
      :                          @1224 [@dyn 193]
 16617: 82 10 a8 01              ra = u64 [sp + 0x1a8]
 16621: 82 15 a0 01              s0 = u64 [sp + 0x1a0]
 16625: 82 16 98 01              s1 = u64 [sp + 0x198]
 16629: 95 11 b0 01              sp = sp + 0x1b0
 16633: 32 00                    ret
      :                          @1225
 16635: 7b 17                    u64 [sp] = a0
 16637: 49 11 70 01              u64 [sp + 112] = 0x1
 16641: 33 07 01                 a0 = 0x1
 16644: 82 10 08                 ra = u64 [sp + 0x8]
 16647: 01                       fallthrough
      :                          @1226
 16648: 82 18 70                 a1 = u64 [sp + 0x70]
 16651: d2 87 07                 a0 = a0 & a1
 16654: 7b 17 68                 u64 [sp + 0x68] = a0
 16657: 82 16                    s1 = u64 [sp]
 16659: 01                       fallthrough
      :                          @1227
 16660: 81 17 40                 a0 = i32 [sp + 0x40]
 16663: 51 07 87 06              jump @1322 if a0 == 0
      :                          @1228
 16667: 82 17 70                 a0 = u64 [sp + 0x70]
 16670: 84 77 01                 a0 = a0 & 0x1
 16673: 7b 10 78                 u64 [sp + 0x78] = ra
 16676: 51 07 c2 02              jump @1268 if a0 == 0
      :                          @1229
 16680: 98 0b 02                 a4 = ra >> 0x2
 16683: 97 b5 01                 s0 = a4 << 0x1
 16686: c8 b5 03                 t1 = s0 + a4
 16689: 7b 16 80 00              u64 [sp + 0x80] = s1
 16693: 54 10 31 2b              jump @1232 if ra <=u 49
      :                          @1230
 16697: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 16700: 97 b7 04                 a0 = a4 << 0x4
 16703: c8 67 07                 a0 = a0 + s1
 16706: 82 70 08                 ra = u64 [a0 + 0x8]
 16709: 97 a7 04                 a0 = a3 << 0x4
 16712: c8 67 07                 a0 = a0 + s1
 16715: 82 78 08                 a1 = u64 [a0 + 0x8]
 16718: ae 80 17                 jump @1233 if ra >=u a1
      :                          @1231
 16721: 33 02 01                 t0 = 0x1
 16724: 64 04                    t2 = ra
 16726: 7b 1a 18                 u64 [sp + 0x18] = a3
 16729: 7b 1b 60                 u64 [sp + 0x60] = a4
 16732: 64 80                    ra = a1
 16734: 28 12                    jump @1234
      :                          @1232
 16736: 33 09                    a2 = 0
 16738: 28 0a 01                 jump @1241
      :                          @1233
 16741: 7b 1a 60                 u64 [sp + 0x60] = a3
 16744: 33 02                    t0 = 0
 16746: 64 84                    t2 = a1
 16748: 7b 1b 18                 u64 [sp + 0x18] = a4
 16751: 01                       fallthrough
      :                          @1234
 16752: 95 b8 01                 a1 = a4 + 0x1
 16755: 7b 18 50                 u64 [sp + 0x50] = a1
 16758: 97 88 04                 a1 = a1 << 0x4
 16761: c8 68 08                 a1 = a1 + s1
 16764: 82 87 08                 a0 = u64 [a1 + 0x8]
 16767: d8 07 09                 a2 = a0 <u ra
 16770: 95 5b ff                 a4 = s0 + 0xffffffffffffffff
 16773: 97 58 04                 a1 = s0 << 0x4
 16776: c8 68 08                 a1 = a1 + s1
 16779: 82 8c 08                 a5 = u64 [a1 + 0x8]
 16782: 97 b8 04                 a1 = a4 << 0x4
 16785: c8 68 08                 a1 = a1 + s1
 16788: 82 88 08                 a1 = u64 [a1 + 0x8]
 16791: e6 07 07                 a0 = minu(a0, ra)
 16794: d8 47 06                 s1 = a0 <u t2
 16797: 7b 19 38                 u64 [sp + 0x38] = a2
 16800: c8 92 07                 a0 = t0 + a2
 16803: c8 67 0a                 a3 = a0 + s1
 16806: 7b 16 30                 u64 [sp + 0x30] = s1
 16809: ae 8c 10                 jump @1236 if a5 >=u a1
      :                          @1235
 16812: 95 aa 01                 a3 = a3 + 0x1
 16815: 64 c6                    s1 = a5
 16817: 7b 1b 28                 u64 [sp + 0x28] = a4
 16820: 7b 15 58                 u64 [sp + 0x58] = s0
 16823: 28 0d                    jump @1237
      :                          @1236
 16825: 7b 1b 58                 u64 [sp + 0x58] = a4
 16828: 64 86                    s1 = a1
 16830: 7b 15 28                 u64 [sp + 0x28] = s0
 16833: 64 c8                    a1 = a5
 16835: 01                       fallthrough
      :                          @1237
 16836: 86 54 01                 t2 = s0 | 0x1
 16839: 97 4c 04                 a5 = t2 << 0x4
 16842: 82 15 80 00              s0 = u64 [sp + 0x80]
 16846: c8 5c 0c                 a5 = a5 + s0
 16849: 82 c9 08                 a2 = u64 [a5 + 0x8]
 16852: d8 89 07                 a0 = a2 <u a1
 16855: 95 3c ff                 a5 = t1 + 0xffffffffffffffff
 16858: 97 3b 04                 a4 = t1 << 0x4
 16861: c8 5b 0b                 a4 = a4 + s0
 16864: 82 b2 08                 t0 = u64 [a4 + 0x8]
 16867: 97 cb 04                 a4 = a5 << 0x4
 16870: c8 5b 0b                 a4 = a4 + s0
 16873: 82 b0 08                 ra = u64 [a4 + 0x8]
 16876: e6 89 08                 a1 = minu(a2, a1)
 16879: d8 68 09                 a2 = a1 <u s1
 16882: 7b 17 20                 u64 [sp + 0x20] = a0
 16885: c8 a7 07                 a0 = a0 + a3
 16888: c8 97 07                 a0 = a0 + a2
 16891: ae 02 11                 jump @1239 if t0 >=u ra
      :                          @1238
 16894: 95 77 01                 a0 = a0 + 0x1
 16897: 7b 12 10                 u64 [sp + 0x10] = t0
 16900: 64 72                    t0 = a0
 16902: 64 c7                    a0 = a5
 16904: 64 3c                    a5 = t1
 16906: 28 0e                    jump @1240
      :                          @1239
 16908: 7b 10 10                 u64 [sp + 0x10] = ra
 16911: 64 78                    a1 = a0
 16913: 64 37                    a0 = t1
 16915: 64 20                    ra = t0
 16917: 64 82                    t0 = a1
 16919: 01                       fallthrough
      :                          @1240
 16920: 82 1a 18                 a3 = u64 [sp + 0x18]
 16923: 82 15 50                 s0 = u64 [sp + 0x50]
 16926: 82 1b 38                 a4 = u64 [sp + 0x38]
 16929: da ba 05                 s0 = a3 if a4 == 0
 16932: 95 33 01                 t1 = t1 + 0x1
 16935: 97 3b 04                 a4 = t1 << 0x4
 16938: 82 16 80 00              s1 = u64 [sp + 0x80]
 16942: c8 6b 0b                 a4 = a4 + s1
 16945: 82 bb 08                 a4 = u64 [a4 + 0x8]
 16948: 82 1a 60                 a3 = u64 [sp + 0x60]
 16951: 82 18 30                 a1 = u64 [sp + 0x30]
 16954: da 85 0a                 a3 = s0 if a1 == 0
 16957: 82 18 28                 a1 = u64 [sp + 0x28]
 16960: 82 15 20                 s0 = u64 [sp + 0x20]
 16963: da 58 04                 t2 = a1 if s0 == 0
 16966: 82 15 58                 s0 = u64 [sp + 0x58]
 16969: da 94 05                 s0 = t2 if a2 == 0
 16972: d8 0b 09                 a2 = a4 <u ra
 16975: db 93 07                 a0 = t1 if a2 != 0
 16978: e6 0b 0b                 a4 = minu(a4, ra)
 16981: 82 18 10                 a1 = u64 [sp + 0x10]
 16984: d8 8b 08                 a1 = a4 <u a1
 16987: db 8c 07                 a0 = a5 if a1 != 0
 16990: c8 98 08                 a1 = a1 + a2
 16993: c8 82 09                 a2 = t0 + a1
 16996: 64 73                    t1 = a0
 16998: 64 ab                    a4 = a3
 17000: 82 10 78                 ra = u64 [sp + 0x78]
 17003: 01                       fallthrough
      :                          @1241
 17004: 97 57 04                 a0 = s0 << 0x4
 17007: c8 67 07                 a0 = a0 + s1
 17010: 82 78 08                 a1 = u64 [a0 + 0x8]
 17013: 97 b7 04                 a0 = a4 << 0x4
 17016: c8 67 07                 a0 = a0 + s1
 17019: 82 77 08                 a0 = u64 [a0 + 0x8]
 17022: ae 78 0c                 jump @1243 if a1 >=u a0
      :                          @1242
 17025: 95 99 01                 a2 = a2 + 0x1
 17028: 64 8c                    a5 = a1
 17030: 64 ba                    a3 = a4
 17032: 28 0b                    jump @1244
      :                          @1243
 17034: 64 7c                    a5 = a0
 17036: 64 5a                    a3 = s0
 17038: 64 b5                    s0 = a4
 17040: 64 87                    a0 = a1
 17042: 01                       fallthrough
      :                          @1244
 17043: 97 38 04                 a1 = t1 << 0x4
 17046: c8 68 08                 a1 = a1 + s1
 17049: 82 8b 08                 a4 = u64 [a1 + 0x8]
 17052: d8 7b 08                 a1 = a4 <u a0
 17055: e6 7b 07                 a0 = minu(a4, a0)
 17058: c8 89 09                 a2 = a2 + a1
 17061: ae c7 09                 jump @1247 if a0 >=u a5
      :                          @1245
 17064: 55 19 0b 1a              jump @1249 if a2 >=u 11
      :                          @1246
 17068: 28 5a                    jump @1252
      :                          @1247
 17070: da 8a 03                 t1 = a3 if a1 == 0
 17073: 64 35                    s0 = t1
 17075: 88 97 01                 a0 = a2 <u 0x1
 17078: 82 18 68                 a1 = u64 [sp + 0x68]
 17081: d2 87 07                 a0 = a0 & a1
 17084: 51 07 4a                 jump @1252 if a0 == 0
      :                          @1248
 17087: 28 40 01                 jump @1270
      :                          @1249
 17090: 98 07 01                 a0 = ra >> 0x1
 17093: 95 68 08                 a1 = s1 + 0x8
 17096: 97 09 04                 a2 = ra << 0x4
 17099: c8 69 09                 a2 = a2 + s1
 17102: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 17105: 01                       fallthrough
      :                          @1250
 17106: 82 9a f8                 a3 = u64 [a2 + 0xfffffffffffffff8]
 17109: 82 9b                    a4 = u64 [a2]
 17111: 82 8c f8                 a5 = u64 [a1 + 0xfffffffffffffff8]
 17114: 82 86                    s1 = u64 [a1]
 17116: 7b 8a f8                 u64 [a1 + 0xfffffffffffffff8] = a3
 17119: 7b 8b                    u64 [a1] = a4
 17121: 7b 9c f8                 u64 [a2 + 0xfffffffffffffff8] = a5
 17124: 7b 96                    u64 [a2] = s1
 17126: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 17129: 95 88 10                 a1 = a1 + 0x10
 17132: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 17135: 52 07 e3                 jump @1250 if a0 != 0
      :                          @1251
 17138: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
 17141: c8 70 05                 s0 = ra + a0
 17144: 82 16 80 00              s1 = u64 [sp + 0x80]
 17148: 82 18 68                 a1 = u64 [sp + 0x68]
 17151: 84 87 01                 a0 = a1 & 0x1
 17154: 52 07 fd 00              jump @1270 if a0 != 0
      :                          @1252
 17158: 97 57 04                 a0 = s0 << 0x4
 17161: 82 18 48                 a1 = u64 [sp + 0x48]
 17164: 51 08 07 01              jump @1273 if a1 == 0
      :                          @1253
 17168: ae 05 a8 04              jump @1324 if s0 >=u ra
      :                          @1254
 17172: c8 76 08                 a1 = s1 + a0
 17175: 82 19 48                 a2 = u64 [sp + 0x48]
 17178: 82 99 08                 a2 = u64 [a2 + 0x8]
 17181: 82 8a 08                 a3 = u64 [a1 + 0x8]
 17184: ac a9 f7 00              jump @1274 if a2 <u a3
      :                          @1255
 17188: 82 69 08                 a2 = u64 [s1 + 0x8]
 17191: 82 6a                    a3 = u64 [s1]
 17193: 33 07                    a0 = 0
 17195: 7b 19 10 01              u64 [sp + 0x110] = a2
 17199: 7b 1a 08 01              u64 [sp + 0x108] = a3
 17203: 82 89                    a2 = u64 [a1]
 17205: 82 8a 08                 a3 = u64 [a1 + 0x8]
 17208: 82 1b 10 01              a4 = u64 [sp + 0x110]
 17212: 82 1c 08 01              a5 = u64 [sp + 0x108]
 17216: 7b 69                    u64 [s1] = a2
 17218: 7b 6a 08                 u64 [s1 + 0x8] = a3
 17221: 7b 8b 08                 u64 [a1 + 0x8] = a4
 17224: 7b 8c                    u64 [a1] = a5
 17226: 82 62                    t0 = u64 [s1]
 17228: 82 68 08                 a1 = u64 [s1 + 0x8]
 17231: 95 64 10                 t2 = s1 + 0x10
 17234: 95 0b ff                 a4 = ra + 0xffffffffffffffff
 17237: 95 63 18                 t1 = s1 + 0x18
 17240: 54 0b 22                 jump @1260 if a4 <=u 0
      :                          @1256
 17243: 97 7a 04                 a3 = a0 << 0x4
 17246: c8 3a 0a                 a3 = a3 + t1
 17249: 01                       fallthrough
      :                          @1257
 17250: 82 a9                    a2 = u64 [a3]
 17252: ac 98 16                 jump @1260 if a1 <u a2
      :                          @1258
 17255: 95 77 01                 a0 = a0 + 0x1
 17258: 95 aa 10                 a3 = a3 + 0x10
 17261: ab 7b f5                 jump @1257 if a4 != a0
      :                          @1259
 17264: 64 b7                    a0 = a4
 17266: 97 ba 04                 a3 = a4 << 0x4
 17269: c8 4a 0a                 a3 = a3 + t2
 17272: 28 09                    jump @1261
      :                          @1260
 17274: 97 ba 04                 a3 = a4 << 0x4
 17277: c8 4a 0a                 a3 = a3 + t2
 17280: 01                       fallthrough
      :                          @1261
 17281: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 17284: ae b7 45                 jump @1265 if a0 >=u a4
      :                          @1262
 17287: 82 a9 f8                 a2 = u64 [a3 + 0xfffffffffffffff8]
 17290: 95 aa f0                 a3 = a3 + 0xfffffffffffffff0
 17293: ac 98 f4                 jump @1261 if a1 <u a2
      :                          @1263
 17296: 97 79 04                 a2 = a0 << 0x4
 17299: c8 49 09                 a2 = a2 + t2
 17302: 82 9c 08                 a5 = u64 [a2 + 0x8]
 17305: 82 96                    s1 = u64 [a2]
 17307: 7b 1c 10 01              u64 [sp + 0x110] = a5
 17311: 7b 16 08 01              u64 [sp + 0x108] = s1
 17315: 82 a0                    ra = u64 [a3]
 17317: 82 a6 08                 s1 = u64 [a3 + 0x8]
 17320: 82 15 10 01              s0 = u64 [sp + 0x110]
 17324: 82 1c 08 01              a5 = u64 [sp + 0x108]
 17328: 7b 90                    u64 [a2] = ra
 17330: 82 10 78                 ra = u64 [sp + 0x78]
 17333: 7b 96 08                 u64 [a2 + 0x8] = s1
 17336: 82 16 80 00              s1 = u64 [sp + 0x80]
 17340: 7b a5 08                 u64 [a3 + 0x8] = s0
 17343: 7b ac                    u64 [a3] = a5
 17345: 95 77 01                 a0 = a0 + 0x1
 17348: ac b7 97                 jump @1256 if a0 <u a4
      :                          @1264
 17351: 28 b3                    jump @1260
      :                          @1265
 17353: 95 77 01                 a0 = a0 + 0x1
 17356: 7b 62                    u64 [s1] = t0
 17358: 7b 68 08                 u64 [s1 + 0x8] = a1
 17361: ac 70 ea 03              jump @1327 if ra <u a0
      :                          @1266
 17365: c9 70 00                 ra = ra - a0
 17368: 97 77 04                 a0 = a0 << 0x4
 17371: c8 76 06                 s1 = s1 + a0
 17374: 55 10 15 36 fd           jump @1227 if ra >=u 21
      :                          @1267
 17379: 28 f3 fc                 jump @1222
      :                          @1268
 17382: 64 67                    a0 = s1
 17384: 64 08                    a1 = ra
 17386: 50 20 84 01 58 d5        ra = 388, jump @455
      :                          @1269 [@dyn 194]
 17392: 82 10 78                 ra = u64 [sp + 0x78]
 17395: 82 17 40                 a0 = u64 [sp + 0x40]
 17398: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 17401: 7b 17 40                 u64 [sp + 0x40] = a0
 17404: 28 2c fd                 jump @1229
      :                          @1270
 17407: 64 67                    a0 = s1
 17409: 64 08                    a1 = ra
 17411: 50 20 86 01 31 d7        ra = 390, jump @475
      :                          @1271 [@dyn 195]
 17417: 82 10 78                 ra = u64 [sp + 0x78]
 17420: 51 07 fa fe              jump @1252 if a0 == 0
      :                          @1272
 17424: 28 d9 fc                 jump @1224
      :                          @1273
 17427: 82 1c                    a5 = u64 [sp]
 17429: 28 08                    jump @1275
      :                          @1274
 17431: 64 6c                    a5 = s1
 17433: 7b 10 08                 u64 [sp + 0x8] = ra
 17436: 01                       fallthrough
      :                          @1275
 17437: 82 18 08                 a1 = u64 [sp + 0x8]
 17440: ae 85 99 03              jump @1325 if s0 >=u a1
      :                          @1276
 17444: 82 c8 08                 a1 = u64 [a5 + 0x8]
 17447: 82 c9                    a2 = u64 [a5]
 17449: 33 05                    s0 = 0
 17451: c8 c7 07                 a0 = a0 + a5
 17454: 7b 18 10 01              u64 [sp + 0x110] = a1
 17458: 7b 19 08 01              u64 [sp + 0x108] = a2
 17462: 82 78                    a1 = u64 [a0]
 17464: 82 79 08                 a2 = u64 [a0 + 0x8]
 17467: 82 1a 10 01              a3 = u64 [sp + 0x110]
 17471: 82 1b 08 01              a4 = u64 [sp + 0x108]
 17475: 7b c8                    u64 [a5] = a1
 17477: 7b c9 08                 u64 [a5 + 0x8] = a2
 17480: 7b 7a 08                 u64 [a0 + 0x8] = a3
 17483: 7b 7b                    u64 [a0] = a4
 17485: 82 c7                    a0 = u64 [a5]
 17487: 7b 17 30                 u64 [sp + 0x30] = a0
 17490: 82 c2 08                 t0 = u64 [a5 + 0x8]
 17493: 95 ca 10                 a3 = a5 + 0x10
 17496: 82 18 08                 a1 = u64 [sp + 0x8]
 17499: 95 86 ff                 s1 = a1 + 0xffffffffffffffff
 17502: 7b 1c                    u64 [sp] = a5
 17504: 95 c9 18                 a2 = a5 + 0x18
 17507: 01                       fallthrough
      :                          @1277
 17508: 82 9b                    a4 = u64 [a2]
 17510: ae 2b 0f                 jump @1280 if a4 >=u t0
      :                          @1278
 17513: 95 55 01                 s0 = s0 + 0x1
 17516: 95 99 10                 a2 = a2 + 0x10
 17519: ab 56 f5                 jump @1277 if s1 != s0
      :                          @1279
 17522: 64 65                    s0 = s1
 17524: 01                       fallthrough
      :                          @1280
 17525: 82 19 08                 a2 = u64 [sp + 0x8]
 17528: 97 99 04                 a2 = a2 << 0x4
 17531: 82 17                    a0 = u64 [sp]
 17533: c8 79 09                 a2 = a2 + a0
 17536: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 17539: 01                       fallthrough
      :                          @1281
 17540: 64 68                    a1 = s1
 17542: ae 65 0e                 jump @1283 if s0 >=u s1
      :                          @1282
 17545: 82 9b                    a4 = u64 [a2]
 17547: 95 86 ff                 s1 = a1 + 0xffffffffffffffff
 17550: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 17553: ae 2b f3                 jump @1281 if a4 >=u t0
      :                          @1283
 17556: ac 58 28 03              jump @1328 if a1 <u s0
      :                          @1284
 17560: 33 0c                    a5 = 0
 17562: 33 09                    a2 = 0
 17564: 33 06                    s1 = 0
 17566: 33 03                    t1 = 0
 17568: 7b 15 38                 u64 [sp + 0x38] = s0
 17571: 97 5b 04                 a4 = s0 << 0x4
 17574: c8 ba 07                 a0 = a3 + a4
 17577: 7b 18 20                 u64 [sp + 0x20] = a1
 17580: 97 8b 04                 a4 = a1 << 0x4
 17583: c8 ba 04                 t2 = a3 + a4
 17586: 33 08 80 00              a1 = 0x80
 17590: 7b 17 28                 u64 [sp + 0x28] = a0
 17593: 64 75                    s0 = a0
 17595: 33 00 80 00              ra = 0x80
 17599: 7b 12 50                 u64 [sp + 0x50] = t0
 17602: 28 30                    jump @1287
      :                          @1285
 17604: 82 15 78                 s0 = u64 [sp + 0x78]
 17607: 01                       fallthrough
      :                          @1286
 17608: d3 9c 07                 a0 = a5 ^ a2
 17611: 82 18 70                 a1 = u64 [sp + 0x70]
 17614: 64 8a                    a3 = a1
 17616: 94 7a                    a3 = 0 if a0 != 0
 17618: 97 aa 04                 a3 = a3 << 0x4
 17621: c8 a5 05                 s0 = s0 + a3
 17624: d3 36 07                 a0 = s1 ^ t1
 17627: 82 10 68                 ra = u64 [sp + 0x68]
 17630: 9a 0a                    a3 = -ra
 17632: 94 7a                    a3 = 0 if a0 != 0
 17634: 97 aa 04                 a3 = a3 << 0x4
 17637: c8 a4 04                 t2 = t2 + a3
 17640: 82 1a 80 00              a3 = u64 [sp + 0x80]
 17644: 53 2a 01 01 67 01        jump @1308 if a3 <u 257
      :                          @1287
 17650: 7b 15 78                 u64 [sp + 0x78] = s0
 17653: c9 54 05                 s0 = t2 - s0
 17656: 98 5a 04                 a3 = s0 >> 0x4
 17659: 7b 1a 80 00              u64 [sp + 0x80] = a3
 17663: 55 2a 01 01 29           jump @1290 if a3 >=u 257
      :                          @1288
 17668: 64 07                    a0 = ra
 17670: d8 9c 00                 ra = a5 <u a2
 17673: d8 36 0b                 a4 = s1 <u t1
 17676: d4 b0 02                 t0 = ra | a4
 17679: 51 02 1e                 jump @1292 if t0 == 0
      :                          @1289
 17682: 82 1a 80 00              a3 = u64 [sp + 0x80]
 17686: 95 ab 80                 a4 = a3 + 0xffffffffffffff80
 17689: db 0b 07                 a0 = a4 if ra != 0
 17692: da 2a 0b                 a4 = a3 if t0 == 0
 17695: da 0b 08                 a1 = a4 if ra == 0
 17698: 64 70                    ra = a0
 17700: 82 12 50                 t0 = u64 [sp + 0x50]
 17703: 01                       fallthrough
      :                          @1290
 17704: ab 9c 3f                 jump @1296 if a5 != a2
      :                          @1291
 17707: 28 12                    jump @1293
      :                          @1292
 17709: 98 58 05                 a1 = s0 >> 0x5
 17712: 82 17 80 00              a0 = u64 [sp + 0x80]
 17716: c9 87 00                 ra = a0 - a1
 17719: 82 12 50                 t0 = u64 [sp + 0x50]
 17722: ab 9c 2d                 jump @1296 if a5 != a2
      :                          @1293
 17725: 51 08 55                 jump @1301 if a1 == 0
      :                          @1294
 17728: 33 05                    s0 = 0
 17730: 95 1c 88 00              a5 = sp + 0x88
 17734: 82 1b 78                 a4 = u64 [sp + 0x78]
 17737: 95 19 88 00              a2 = sp + 0x88
 17741: 01                       fallthrough
      :                          @1295
 17742: 82 b7 08                 a0 = u64 [a4 + 0x8]
 17745: 78 95                    u8 [a2] = s0
 17747: 95 5a 01                 a3 = s0 + 0x1
 17750: d8 27 07                 a0 = a0 <u t0
 17753: 85 77 01                 a0 = a0 ^ 0x1
 17756: c8 79 09                 a2 = a2 + a0
 17759: 95 bb 10                 a4 = a4 + 0x10
 17762: 64 a5                    s0 = a3
 17764: ab a8 ea                 jump @1295 if a1 != a3
      :                          @1296
 17767: ab 36 41                 jump @1304 if s1 != t1
      :                          @1297
 17770: 51 00 35                 jump @1303 if ra == 0
      :                          @1298
 17773: 33 05                    s0 = 0
 17775: 95 4b f8                 a4 = t2 + 0xfffffffffffffff8
 17778: 95 16 08 01              s1 = sp + 0x108
 17782: 95 13 08 01              t1 = sp + 0x108
 17786: 01                       fallthrough
      :                          @1299
 17787: 82 b7                    a0 = u64 [a4]
 17789: 78 35                    u8 [t1] = s0
 17791: 95 5a 01                 a3 = s0 + 0x1
 17794: d8 27 07                 a0 = a0 <u t0
 17797: c8 73 03                 t1 = t1 + a0
 17800: 95 bb f0                 a4 = a4 + 0xfffffffffffffff0
 17803: 64 a5                    s0 = a3
 17805: ab a0 ee                 jump @1299 if ra != a3
      :                          @1300
 17808: 28 18                    jump @1304
      :                          @1301
 17810: 95 1c 88 00              a5 = sp + 0x88
 17814: 95 19 88 00              a2 = sp + 0x88
 17818: ab 36 0e                 jump @1304 if s1 != t1
      :                          @1302
 17821: 28 cd                    jump @1297
      :                          @1303
 17823: 95 16 08 01              s1 = sp + 0x108
 17827: 95 13 08 01              t1 = sp + 0x108
 17831: 01                       fallthrough
      :                          @1304
 17832: 7b 10 68                 u64 [sp + 0x68] = ra
 17835: 7b 18 70                 u64 [sp + 0x70] = a1
 17838: c9 c9 07                 a0 = a2 - a5
 17841: c9 63 0a                 a3 = t1 - s1
 17844: e6 a7 00                 ra = minu(a0, a3)
 17847: 51 00 0d ff              jump @1285 if ra == 0
      :                          @1305
 17851: 7c 62                    t0 = u8 [s1]
 17853: 7c c7                    a0 = u8 [a5]
 17855: 85 2b ff                 a4 = t0 ^ 0xffffffffffffffff
 17858: 97 ba 04                 a3 = a4 << 0x4
 17861: c8 4a 0a                 a3 = a3 + t2
 17864: 82 a8                    a1 = u64 [a3]
 17866: 7b 18 58                 u64 [sp + 0x58] = a1
 17869: 97 77 04                 a0 = a0 << 0x4
 17872: 82 18 78                 a1 = u64 [sp + 0x78]
 17875: c8 87 07                 a0 = a0 + a1
 17878: 82 75                    s0 = u64 [a0]
 17880: 7b 15 60                 u64 [sp + 0x60] = s0
 17883: 82 15 58                 s0 = u64 [sp + 0x58]
 17886: 7b 75                    u64 [a0] = s0
 17888: 82 aa 08                 a3 = u64 [a3 + 0x8]
 17891: 82 75 08                 s0 = u64 [a0 + 0x8]
 17894: 7b 15 58                 u64 [sp + 0x58] = s0
 17897: 95 00 ff                 ra = ra + 0xffffffffffffffff
 17900: 7b 7a 08                 u64 [a0 + 0x8] = a3
 17903: 51 00 45                 jump @1307 if ra == 0
      :                          @1306
 17906: 7c c7 01                 a0 = u8 [a5 + 0x1]
 17909: 97 77 04                 a0 = a0 << 0x4
 17912: c8 87 07                 a0 = a0 + a1
 17915: 85 2a ff                 a3 = t0 ^ 0xffffffffffffffff
 17918: 82 7b 08                 a4 = u64 [a0 + 0x8]
 17921: 86 aa 00 ff              a3 = a3 | 0xffffffffffffff00
 17925: 97 aa 04                 a3 = a3 << 0x4
 17928: c8 4a 0a                 a3 = a3 + t2
 17931: 7b ab 08                 u64 [a3 + 0x8] = a4
 17934: 82 7b                    a4 = u64 [a0]
 17936: 7b ab                    u64 [a3] = a4
 17938: 7c 62 01                 t0 = u8 [s1 + 0x1]
 17941: 85 2b ff                 a4 = t0 ^ 0xffffffffffffffff
 17944: 97 ba 04                 a3 = a4 << 0x4
 17947: c8 4a 0a                 a3 = a3 + t2
 17950: 82 a5 08                 s0 = u64 [a3 + 0x8]
 17953: 7b 75 08                 u64 [a0 + 0x8] = s0
 17956: 82 aa                    a3 = u64 [a3]
 17958: 95 cc 01                 a5 = a5 + 0x1
 17961: 95 66 01                 s1 = s1 + 0x1
 17964: 95 00 ff                 ra = ra + 0xffffffffffffffff
 17967: 7b 7a                    u64 [a0] = a3
 17969: 52 00 c1                 jump @1306 if ra != 0
      :                          @1307
 17972: 97 bb 04                 a4 = a4 << 0x4
 17975: c8 4b 0b                 a4 = a4 + t2
 17978: 82 17 60                 a0 = u64 [sp + 0x60]
 17981: 7b b7                    u64 [a4] = a0
 17983: 82 17 58                 a0 = u64 [sp + 0x58]
 17986: 7b b7 08                 u64 [a4 + 0x8] = a0
 17989: 95 cc 01                 a5 = a5 + 0x1
 17992: 95 66 01                 s1 = s1 + 0x1
 17995: 82 12 50                 t0 = u64 [sp + 0x50]
 17998: 64 85                    s0 = a1
 18000: 28 78 fe                 jump @1286
      :                          @1308
 18003: ae 9c 45                 jump @1312 if a5 >=u a2
      :                          @1309
 18006: 82 18 08                 a1 = u64 [sp + 0x8]
 18009: 01                       fallthrough
      :                          @1310
 18010: 7c 97 ff                 a0 = u8 [a2 + 0xffffffffffffffff]
 18013: 97 77 04                 a0 = a0 << 0x4
 18016: c8 57 07                 a0 = a0 + s0
 18019: 82 7b 08                 a4 = u64 [a0 + 0x8]
 18022: 82 7a                    a3 = u64 [a0]
 18024: 95 96 ff                 s1 = a2 + 0xffffffffffffffff
 18027: 82 49 f0                 a2 = u64 [t2 + 0xfffffffffffffff0]
 18030: 7b 1b 90 01              u64 [sp + 0x190] = a4
 18034: 7b 1a 88 01              u64 [sp + 0x188] = a3
 18038: 82 4b f8                 a4 = u64 [t2 + 0xfffffffffffffff8]
 18041: 7b 79                    u64 [a0] = a2
 18043: 82 19 90 01              a2 = u64 [sp + 0x190]
 18047: 82 1a 88 01              a3 = u64 [sp + 0x188]
 18051: 7b 7b 08                 u64 [a0 + 0x8] = a4
 18054: 95 4b f0                 a4 = t2 + 0xfffffffffffffff0
 18057: 7b 49 f8                 u64 [t2 + 0xfffffffffffffff8] = a2
 18060: 7b 4a f0                 u64 [t2 + 0xfffffffffffffff0] = a3
 18063: 64 b4                    t2 = a4
 18065: 64 69                    a2 = s1
 18067: ac 6c c7                 jump @1310 if a5 <u s1
      :                          @1311
 18070: 28 45                    jump @1314
      :                          @1312
 18072: 82 18 08                 a1 = u64 [sp + 0x8]
 18075: 64 5b                    a4 = s0
 18077: ae 36 3e                 jump @1314 if s1 >=u t1
      :                          @1313
 18080: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
 18083: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 18086: 97 77 04                 a0 = a0 << 0x4
 18089: 82 b9 08                 a2 = u64 [a4 + 0x8]
 18092: 82 ba                    a3 = u64 [a4]
 18094: c8 47 07                 a0 = a0 + t2
 18097: 82 7c                    a5 = u64 [a0]
 18099: 7b 19 90 01              u64 [sp + 0x190] = a2
 18103: 7b 1a 88 01              u64 [sp + 0x188] = a3
 18107: 82 79 08                 a2 = u64 [a0 + 0x8]
 18110: 7b bc                    u64 [a4] = a5
 18112: 82 1a 90 01              a3 = u64 [sp + 0x190]
 18116: 82 1c 88 01              a5 = u64 [sp + 0x188]
 18120: 7b b9 08                 u64 [a4 + 0x8] = a2
 18123: 95 39 ff                 a2 = t1 + 0xffffffffffffffff
 18126: 7b 7a 08                 u64 [a0 + 0x8] = a3
 18129: 7b 7c                    u64 [a0] = a5
 18131: 95 bb 10                 a4 = a4 + 0x10
 18134: 64 93                    t1 = a2
 18136: ac 96 c8                 jump @1313 if s1 <u a2
      :                          @1314
 18139: 82 17 28                 a0 = u64 [sp + 0x28]
 18142: c9 7b 07                 a0 = a4 - a0
 18145: 98 77 04                 a0 = a0 >> 0x4
 18148: 82 19 38                 a2 = u64 [sp + 0x38]
 18151: c8 97 0c                 a5 = a0 + a2
 18154: 82 15                    s0 = u64 [sp]
 18156: 82 17 30                 a0 = u64 [sp + 0x30]
 18159: 7b 57                    u64 [s0] = a0
 18161: 7b 52 08                 u64 [s0 + 0x8] = t0
 18164: ae 8c c6 00              jump @1326 if a5 >=u a1
      :                          @1315
 18168: 82 57 08                 a0 = u64 [s0 + 0x8]
 18171: 82 59                    a2 = u64 [s0]
 18173: 97 c6 04                 s1 = a5 << 0x4
 18176: c8 56 06                 s1 = s1 + s0
 18179: 7b 17 10 01              u64 [sp + 0x110] = a0
 18183: 7b 19 08 01              u64 [sp + 0x108] = a2
 18187: 82 67                    a0 = u64 [s1]
 18189: 82 6b 08                 a4 = u64 [s1 + 0x8]
 18192: 82 19 10 01              a2 = u64 [sp + 0x110]
 18196: 82 1a 08 01              a3 = u64 [sp + 0x108]
 18200: 7b 57                    u64 [s0] = a0
 18202: 7b 5b 08                 u64 [s0 + 0x8] = a4
 18205: 7b 69 08                 u64 [s1 + 0x8] = a2
 18208: 7b 6a                    u64 [s1] = a3
 18210: c9 c8 08                 a1 = a1 - a5
 18213: 7b 18 80 00              u64 [sp + 0x80] = a1
 18217: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
 18220: 95 67 10                 a0 = s1 + 0x10
 18223: ae bc 28                 jump @1318 if a5 >=u a4
      :                          @1316
 18226: 7b 17 70                 u64 [sp + 0x70] = a0
 18229: 64 57                    a0 = s0
 18231: 64 c8                    a1 = a5
 18233: 82 19 48                 a2 = u64 [sp + 0x48]
 18236: 82 1a 40                 a3 = u64 [sp + 0x40]
 18239: 7b 1b 78                 u64 [sp + 0x78] = a4
 18242: 64 c5                    s0 = a5
 18244: 50 20 88 01 6d f9        ra = 392, jump @1220
      :                          @1317 [@dyn 196]
 18250: 64 59                    a2 = s0
 18252: 82 10 78                 ra = u64 [sp + 0x78]
 18255: 7b 16 48                 u64 [sp + 0x48] = s1
 18258: 82 15 70                 s0 = u64 [sp + 0x70]
 18261: 28 16                    jump @1320
      :                          @1318
 18263: 64 b8                    a1 = a4
 18265: 64 69                    a2 = s1
 18267: 82 1a 40                 a3 = u64 [sp + 0x40]
 18270: 64 c6                    s1 = a5
 18272: 50 20 8a 01 51 f9        ra = 394, jump @1220
      :                          @1319 [@dyn 197]
 18278: 64 69                    a2 = s1
 18280: 64 60                    ra = s1
 18282: 01                       fallthrough
      :                          @1320
 18283: 82 17 38                 a0 = u64 [sp + 0x38]
 18286: 82 18 20                 a1 = u64 [sp + 0x20]
 18289: d8 87 07                 a0 = a0 <u a1
 18292: 85 77 01                 a0 = a0 ^ 0x1
 18295: 82 18 80 00              a1 = u64 [sp + 0x80]
 18299: e6 89 08                 a1 = minu(a2, a1)
 18302: 82 19 08                 a2 = u64 [sp + 0x8]
 18305: 98 99 03                 a2 = a2 >> 0x3
 18308: d8 98 08                 a1 = a1 <u a2
 18311: 85 88 01                 a1 = a1 ^ 0x1
 18314: 7b 18 70                 u64 [sp + 0x70] = a1
 18317: 7b 10 08                 u64 [sp + 0x8] = ra
 18320: 7b 15                    u64 [sp] = s0
 18322: 64 56                    s1 = s0
 18324: 33 08 15                 a1 = 0x15
 18327: ae 80 71 f9              jump @1226 if ra >=u a1
      :                          @1321
 18331: 28 3b f9                 jump @1222
      :                          @1322
 18334: 64 67                    a0 = s1
 18336: 64 08                    a1 = ra
 18338: 33 00 8c 01              ra = 0x18c
 18342: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 18345: 7b 15 18                 u64 [sp + 0x18] = s0
 18348: 7b 16 10                 u64 [sp + 0x10] = s1
 18351: 98 82 01                 t0 = a1 >> 0x1
 18354: 28 64 02                 jump @1387
      :                          @1323 [@dyn 198]
 18357: 28 34 f9                 jump @1224
      :                          @1324
 18360: 00                       trap
      :                          @1325
 18361: 00                       trap
      :                          @1326
 18362: 00                       trap
      :                          @1327
 18363: 00                       trap
      :                          @1328
 18364: 00                       trap
      :                          @1329
 18365: 51 02 a0 00              jump @1340 if t0 == 0
      :                          @1330
 18369: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 18372: 97 29 01                 a2 = t0 << 0x1
 18375: 95 9c 01                 a5 = a2 + 0x1
 18378: ae 8c f3                 jump @1329 if a5 >=u a1
      :                          @1331
 18381: 64 2a                    a3 = t0
 18383: 01                       fallthrough
      :                          @1332
 18384: 95 99 02                 a2 = a2 + 0x2
 18387: ae 89 2e                 jump @1335 if a2 >=u a1
      :                          @1333
 18390: 97 cb 04                 a4 = a5 << 0x4
 18393: c8 b7 03                 t1 = a0 + a4
 18396: 97 99 04                 a2 = a2 << 0x4
 18399: c8 79 09                 a2 = a2 + a0
 18402: 82 34                    t2 = u64 [t1]
 18404: 82 9b                    a4 = u64 [a2]
 18406: 82 33 08                 t1 = u64 [t1 + 0x8]
 18409: 82 99 08                 a2 = u64 [a2 + 0x8]
 18412: d9 b4 05                 s0 = t2 <s a4
 18415: d3 b4 0b                 a4 = t2 ^ a4
 18418: d9 93 09                 a2 = t1 <s a2
 18421: db b5 09                 a2 = s0 if a4 != 0
 18424: c8 9c 04                 t2 = a5 + a2
 18427: ac 8a 0c                 jump @1336 if a3 <u a1
      :                          @1334
 18430: 28 37 01                 jump @1355
      :                          @1335
 18433: 64 c4                    t2 = a5
 18435: ae 8a 32 01              jump @1355 if a3 >=u a1
      :                          @1336
 18439: ae 84 2f 01              jump @1356 if t2 >=u a1
      :                          @1337
 18443: 97 aa 04                 a3 = a3 << 0x4
 18446: c8 a7 0c                 a5 = a0 + a3
 18449: 97 4a 04                 a3 = t2 << 0x4
 18452: c8 7a 0a                 a3 = a3 + a0
 18455: 82 c9                    a2 = u64 [a5]
 18457: 82 a5                    s0 = u64 [a3]
 18459: 82 c3 08                 t1 = u64 [a5 + 0x8]
 18462: 82 ab 08                 a4 = u64 [a3 + 0x8]
 18465: d9 59 06                 s1 = a2 <s s0
 18468: d3 59 09                 a2 = a2 ^ s0
 18471: d9 b3 0b                 a4 = t1 <s a4
 18474: db 96 0b                 a4 = s1 if a2 != 0
 18477: 51 0b 90                 jump @1329 if a4 == 0
      :                          @1338
 18480: 82 c9 08                 a2 = u64 [a5 + 0x8]
 18483: 82 cb                    a4 = u64 [a5]
 18485: 7b 19 08                 u64 [sp + 0x8] = a2
 18488: 82 a9                    a2 = u64 [a3]
 18490: 82 a6 08                 s1 = u64 [a3 + 0x8]
 18493: 7b 1b                    u64 [sp] = a4
 18495: 82 1b 08                 a4 = u64 [sp + 0x8]
 18498: 7b c9                    u64 [a5] = a2
 18500: 7b c6 08                 u64 [a5 + 0x8] = s1
 18503: 82 16                    s1 = u64 [sp]
 18505: 7b ab 08                 u64 [a3 + 0x8] = a4
 18508: 97 49 01                 a2 = t2 << 0x1
 18511: 95 9c 01                 a5 = a2 + 0x1
 18514: 7b a6                    u64 [a3] = s1
 18516: 64 4a                    a3 = t2
 18518: ac 8c 7a ff              jump @1332 if a5 <u a1
      :                          @1339
 18522: 28 63 ff                 jump @1329
      :                          @1340
 18525: 33 02 02                 t0 = 0x2
 18528: 64 83                    t1 = a1
 18530: 01                       fallthrough
      :                          @1341
 18531: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 18534: ae 83 d1 00              jump @1357 if t1 >=u a1
      :                          @1342
 18538: 82 79 08                 a2 = u64 [a0 + 0x8]
 18541: 82 7a                    a3 = u64 [a0]
 18543: 97 3b 04                 a4 = t1 << 0x4
 18546: c8 7b 0b                 a4 = a4 + a0
 18549: 7b 19 08                 u64 [sp + 0x8] = a2
 18552: 7b 1a                    u64 [sp] = a3
 18554: 82 b9                    a2 = u64 [a4]
 18556: 82 ba 08                 a3 = u64 [a4 + 0x8]
 18559: 82 1c 08                 a5 = u64 [sp + 0x8]
 18562: 82 16                    s1 = u64 [sp]
 18564: 7b 79                    u64 [a0] = a2
 18566: 7b 7a 08                 u64 [a0 + 0x8] = a3
 18569: 7b bc 08                 u64 [a4 + 0x8] = a5
 18572: 7b b6                    u64 [a4] = s1
 18574: ac 23 97 00              jump @1352 if t1 <u t0
      :                          @1343
 18578: 33 0a                    a3 = 0
 18580: 33 0b                    a4 = 0
 18582: 33 0c 01                 a5 = 0x1
 18585: 01                       fallthrough
      :                          @1344
 18586: 95 aa 02                 a3 = a3 + 0x2
 18589: ae 3a 2d                 jump @1347 if a3 >=u t1
      :                          @1345
 18592: 97 c9 04                 a2 = a5 << 0x4
 18595: c8 79 09                 a2 = a2 + a0
 18598: 97 aa 04                 a3 = a3 << 0x4
 18601: c8 7a 0a                 a3 = a3 + a0
 18604: 82 96                    s1 = u64 [a2]
 18606: 82 a5                    s0 = u64 [a3]
 18608: 82 99 08                 a2 = u64 [a2 + 0x8]
 18611: 82 aa 08                 a3 = u64 [a3 + 0x8]
 18614: d9 56 04                 t2 = s1 <s s0
 18617: d3 65 05                 s0 = s0 ^ s1
 18620: d9 a9 09                 a2 = a2 <s a3
 18623: db 54 09                 a2 = t2 if s0 != 0
 18626: c8 c9 09                 a2 = a2 + a5
 18629: ac 3b 0a                 jump @1348 if a4 <u t1
      :                          @1346
 18632: 28 6b                    jump @1353
      :                          @1347
 18634: 64 c9                    a2 = a5
 18636: ae 3b 67                 jump @1353 if a4 >=u t1
      :                          @1348
 18639: ae 39 65                 jump @1354 if a2 >=u t1
      :                          @1349
 18642: 97 ba 04                 a3 = a4 << 0x4
 18645: c8 7a 0a                 a3 = a3 + a0
 18648: 97 9b 04                 a4 = a2 << 0x4
 18651: c8 7b 0b                 a4 = a4 + a0
 18654: 82 ac                    a5 = u64 [a3]
 18656: 82 b6                    s1 = u64 [a4]
 18658: 82 a4 08                 t2 = u64 [a3 + 0x8]
 18661: 82 b5 08                 s0 = u64 [a4 + 0x8]
 18664: d9 6c 00                 ra = a5 <s s1
 18667: d3 6c 0c                 a5 = a5 ^ s1
 18670: d9 54 06                 s1 = t2 <s s0
 18673: db c0 06                 s1 = ra if a5 != 0
 18676: 51 06 6f ff              jump @1341 if s1 == 0
      :                          @1350
 18680: 82 ac 08                 a5 = u64 [a3 + 0x8]
 18683: 82 a6                    s1 = u64 [a3]
 18685: 7b 1c 08                 u64 [sp + 0x8] = a5
 18688: 82 bc                    a5 = u64 [a4]
 18690: 82 b5 08                 s0 = u64 [a4 + 0x8]
 18693: 7b 16                    u64 [sp] = s1
 18695: 82 16 08                 s1 = u64 [sp + 0x8]
 18698: 7b ac                    u64 [a3] = a5
 18700: 7b a5 08                 u64 [a3 + 0x8] = s0
 18703: 82 15                    s0 = u64 [sp]
 18705: 7b b6 08                 u64 [a4 + 0x8] = s1
 18708: 97 9a 01                 a3 = a2 << 0x1
 18711: 95 ac 01                 a5 = a3 + 0x1
 18714: 7b b5                    u64 [a4] = s0
 18716: 64 9b                    a4 = a2
 18718: ac 3c 7c ff              jump @1344 if a5 <u t1
      :                          @1351
 18722: 28 41 ff                 jump @1341
      :                          @1352
 18725: 82 10 20                 ra = u64 [sp + 0x20]
 18728: 82 15 18                 s0 = u64 [sp + 0x18]
 18731: 82 16 10                 s1 = u64 [sp + 0x10]
 18734: 95 11 28                 sp = sp + 0x28
 18737: 32 00                    ret
      :                          @1353
 18739: 00                       trap
      :                          @1354
 18740: 00                       trap
      :                          @1355
 18741: 00                       trap
      :                          @1356
 18742: 00                       trap
      :                          @1357
 18743: 00                       trap
      :                          @1358
 18744: 51 02 62                 jump @1369 if t0 == 0
      :                          @1359
 18747: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 18750: 97 2a 01                 a3 = t0 << 0x1
 18753: 95 ac 01                 a5 = a3 + 0x1
 18756: ae 8c f4                 jump @1358 if a5 >=u a1
      :                          @1360
 18759: 64 2b                    a4 = t0
 18761: 01                       fallthrough
      :                          @1361
 18762: 95 aa 02                 a3 = a3 + 0x2
 18765: ae 8a 1f                 jump @1364 if a3 >=u a1
      :                          @1362
 18768: 97 c9 03                 a2 = a5 << 0x3
 18771: c8 79 09                 a2 = a2 + a0
 18774: 97 aa 03                 a3 = a3 << 0x3
 18777: c8 7a 0a                 a3 = a3 + a0
 18780: 82 99                    a2 = u64 [a2]
 18782: 82 aa                    a3 = u64 [a3]
 18784: d8 9a 03                 t1 = a3 <u a2
 18787: c8 c3 03                 t1 = t1 + a5
 18790: ac 8b 0c                 jump @1365 if a4 <u a1
      :                          @1363
 18793: 28 a7 00                 jump @1384
      :                          @1364
 18796: 64 c3                    t1 = a5
 18798: ae 8b a2 00              jump @1384 if a4 >=u a1
      :                          @1365
 18802: ae 83 9f 00              jump @1385 if t1 >=u a1
      :                          @1366
 18806: 97 ba 03                 a3 = a4 << 0x3
 18809: c8 7a 0a                 a3 = a3 + a0
 18812: 97 3b 03                 a4 = t1 << 0x3
 18815: c8 7b 0b                 a4 = a4 + a0
 18818: 82 a9                    a2 = u64 [a3]
 18820: 82 bc                    a5 = u64 [a4]
 18822: ae 9c b2                 jump @1358 if a5 >=u a2
      :                          @1367
 18825: 7b ac                    u64 [a3] = a5
 18827: 97 3a 01                 a3 = t1 << 0x1
 18830: 95 ac 01                 a5 = a3 + 0x1
 18833: 7b b9                    u64 [a4] = a2
 18835: 64 3b                    a4 = t1
 18837: ac 8c b5                 jump @1361 if a5 <u a1
      :                          @1368
 18840: 28 a0                    jump @1358
      :                          @1369
 18842: 33 02 02                 t0 = 0x2
 18845: 64 83                    t1 = a1
 18847: 01                       fallthrough
      :                          @1370
 18848: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 18851: ae 83 6e                 jump @1385 if t1 >=u a1
      :                          @1371
 18854: 97 39 03                 a2 = t1 << 0x3
 18857: c8 79 09                 a2 = a2 + a0
 18860: 82 9a                    a3 = u64 [a2]
 18862: 82 7b                    a4 = u64 [a0]
 18864: 7b 7a                    u64 [a0] = a3
 18866: 7b 9b                    u64 [a2] = a4
 18868: ac 23 58                 jump @1381 if t1 <u t0
      :                          @1372
 18871: 33 0a                    a3 = 0
 18873: 33 09                    a2 = 0
 18875: 33 0b 01                 a4 = 0x1
 18878: 01                       fallthrough
      :                          @1373
 18879: 95 aa 02                 a3 = a3 + 0x2
 18882: ae 3a 1e                 jump @1376 if a3 >=u t1
      :                          @1374
 18885: 97 bc 03                 a5 = a4 << 0x3
 18888: c8 7c 0c                 a5 = a5 + a0
 18891: 97 aa 03                 a3 = a3 << 0x3
 18894: c8 7a 0a                 a3 = a3 + a0
 18897: 82 cc                    a5 = u64 [a5]
 18899: 82 aa                    a3 = u64 [a3]
 18901: d8 ca 04                 t2 = a3 <u a5
 18904: c8 b4 04                 t2 = t2 + a4
 18907: ac 39 0a                 jump @1377 if a2 <u t1
      :                          @1375
 18910: 28 30                    jump @1382
      :                          @1376
 18912: 64 b4                    t2 = a4
 18914: ae 39 2c                 jump @1382 if a2 >=u t1
      :                          @1377
 18917: ae 34 2a                 jump @1383 if t2 >=u t1
      :                          @1378
 18920: 97 99 03                 a2 = a2 << 0x3
 18923: c8 97 0a                 a3 = a0 + a2
 18926: 97 49 03                 a2 = t2 << 0x3
 18929: c8 79 09                 a2 = a2 + a0
 18932: 82 ac                    a5 = u64 [a3]
 18934: 82 9b                    a4 = u64 [a2]
 18936: ae cb a8                 jump @1370 if a4 >=u a5
      :                          @1379
 18939: 7b ab                    u64 [a3] = a4
 18941: 97 4a 01                 a3 = t2 << 0x1
 18944: 95 ab 01                 a4 = a3 + 0x1
 18947: 7b 9c                    u64 [a2] = a5
 18949: 64 49                    a2 = t2
 18951: ac 3b b8                 jump @1373 if a4 <u t1
      :                          @1380
 18954: 28 96                    jump @1370
      :                          @1381
 18956: 32 00                    ret
      :                          @1382
 18958: 00                       trap
      :                          @1383
 18959: 00                       trap
      :                          @1384
 18960: 00                       trap
      :                          @1385
 18961: 00                       trap
      :                          @1386
 18962: 51 02 81 00              jump @1397 if t0 == 0
      :                          @1387
 18966: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 18969: 97 29 01                 a2 = t0 << 0x1
 18972: 95 9c 01                 a5 = a2 + 0x1
 18975: ae 8c f3                 jump @1386 if a5 >=u a1
      :                          @1388
 18978: 64 2a                    a3 = t0
 18980: 01                       fallthrough
      :                          @1389
 18981: 95 99 02                 a2 = a2 + 0x2
 18984: ae 89 21                 jump @1392 if a2 >=u a1
      :                          @1390
 18987: 97 cb 04                 a4 = a5 << 0x4
 18990: c8 7b 0b                 a4 = a4 + a0
 18993: 82 bb 08                 a4 = u64 [a4 + 0x8]
 18996: 97 99 04                 a2 = a2 << 0x4
 18999: c8 79 09                 a2 = a2 + a0
 19002: 82 99 08                 a2 = u64 [a2 + 0x8]
 19005: d8 9b 0b                 a4 = a4 <u a2
 19008: c8 cb 0b                 a4 = a4 + a5
 19011: ac 8a 0c                 jump @1393 if a3 <u a1
      :                          @1391
 19014: 28 02 01                 jump @1412
      :                          @1392
 19017: 64 cb                    a4 = a5
 19019: ae 8a fd 00              jump @1412 if a3 >=u a1
      :                          @1393
 19023: ae 8b fa 00              jump @1413 if a4 >=u a1
      :                          @1394
 19027: 97 a9 04                 a2 = a3 << 0x4
 19030: c8 79 09                 a2 = a2 + a0
 19033: 97 ba 04                 a3 = a4 << 0x4
 19036: c8 7a 0a                 a3 = a3 + a0
 19039: 82 93 08                 t1 = u64 [a2 + 0x8]
 19042: 82 ac 08                 a5 = u64 [a3 + 0x8]
 19045: ae c3 ad                 jump @1386 if t1 >=u a5
      :                          @1395
 19048: 82 9c 08                 a5 = u64 [a2 + 0x8]
 19051: 82 93                    t1 = u64 [a2]
 19053: 7b 1c 08                 u64 [sp + 0x8] = a5
 19056: 82 a5                    s0 = u64 [a3]
 19058: 82 a4 08                 t2 = u64 [a3 + 0x8]
 19061: 7b 13                    u64 [sp] = t1
 19063: 82 1c 08                 a5 = u64 [sp + 0x8]
 19066: 7b 95                    u64 [a2] = s0
 19068: 7b 94 08                 u64 [a2 + 0x8] = t2
 19071: 82 15                    s0 = u64 [sp]
 19073: 7b ac 08                 u64 [a3 + 0x8] = a5
 19076: 97 b9 01                 a2 = a4 << 0x1
 19079: 95 9c 01                 a5 = a2 + 0x1
 19082: 7b a5                    u64 [a3] = s0
 19084: 64 ba                    a3 = a4
 19086: ac 8c 97                 jump @1389 if a5 <u a1
      :                          @1396
 19089: 28 81                    jump @1386
      :                          @1397
 19091: 33 02 02                 t0 = 0x2
 19094: 64 83                    t1 = a1
 19096: 01                       fallthrough
      :                          @1398
 19097: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 19100: ae 83 ae 00              jump @1414 if t1 >=u a1
      :                          @1399
 19104: 82 79 08                 a2 = u64 [a0 + 0x8]
 19107: 82 7a                    a3 = u64 [a0]
 19109: 97 3b 04                 a4 = t1 << 0x4
 19112: c8 7b 0b                 a4 = a4 + a0
 19115: 7b 19 08                 u64 [sp + 0x8] = a2
 19118: 7b 1a                    u64 [sp] = a3
 19120: 82 b9                    a2 = u64 [a4]
 19122: 82 ba 08                 a3 = u64 [a4 + 0x8]
 19125: 82 1c 08                 a5 = u64 [sp + 0x8]
 19128: 82 15                    s0 = u64 [sp]
 19130: 7b 79                    u64 [a0] = a2
 19132: 7b 7a 08                 u64 [a0 + 0x8] = a3
 19135: 7b bc 08                 u64 [a4 + 0x8] = a5
 19138: 7b b5                    u64 [a4] = s0
 19140: ac 23 77                 jump @1409 if t1 <u t0
      :                          @1400
 19143: 33 0a                    a3 = 0
 19145: 33 0b                    a4 = 0
 19147: 33 0c 01                 a5 = 0x1
 19150: 01                       fallthrough
      :                          @1401
 19151: 95 aa 02                 a3 = a3 + 0x2
 19154: ae 3a 20                 jump @1404 if a3 >=u t1
      :                          @1402
 19157: 97 c9 04                 a2 = a5 << 0x4
 19160: c8 79 09                 a2 = a2 + a0
 19163: 82 99 08                 a2 = u64 [a2 + 0x8]
 19166: 97 aa 04                 a3 = a3 << 0x4
 19169: c8 7a 0a                 a3 = a3 + a0
 19172: 82 aa 08                 a3 = u64 [a3 + 0x8]
 19175: d8 a9 09                 a2 = a2 <u a3
 19178: c8 c9 09                 a2 = a2 + a5
 19181: ac 3b 0a                 jump @1405 if a4 <u t1
      :                          @1403
 19184: 28 56                    jump @1410
      :                          @1404
 19186: 64 c9                    a2 = a5
 19188: ae 3b 52                 jump @1410 if a4 >=u t1
      :                          @1405
 19191: ae 39 50                 jump @1411 if a2 >=u t1
      :                          @1406
 19194: 97 ba 04                 a3 = a4 << 0x4
 19197: c8 7a 0a                 a3 = a3 + a0
 19200: 97 9b 04                 a4 = a2 << 0x4
 19203: c8 7b 0b                 a4 = a4 + a0
 19206: 82 ac 08                 a5 = u64 [a3 + 0x8]
 19209: 82 b5 08                 s0 = u64 [a4 + 0x8]
 19212: ae 5c 8d                 jump @1398 if a5 >=u s0
      :                          @1407
 19215: 82 ac 08                 a5 = u64 [a3 + 0x8]
 19218: 82 a4                    t2 = u64 [a3]
 19220: 7b 1c 08                 u64 [sp + 0x8] = a5
 19223: 82 b6                    s1 = u64 [a4]
 19225: 82 b5 08                 s0 = u64 [a4 + 0x8]
 19228: 7b 14                    u64 [sp] = t2
 19230: 82 1c 08                 a5 = u64 [sp + 0x8]
 19233: 7b a6                    u64 [a3] = s1
 19235: 7b a5 08                 u64 [a3 + 0x8] = s0
 19238: 82 16                    s1 = u64 [sp]
 19240: 7b bc 08                 u64 [a4 + 0x8] = a5
 19243: 97 9a 01                 a3 = a2 << 0x1
 19246: 95 ac 01                 a5 = a3 + 0x1
 19249: 7b b6                    u64 [a4] = s1
 19251: 64 9b                    a4 = a2
 19253: ac 3c 9a                 jump @1401 if a5 <u t1
      :                          @1408
 19256: 28 61 ff                 jump @1398
      :                          @1409
 19259: 82 15 18                 s0 = u64 [sp + 0x18]
 19262: 82 16 10                 s1 = u64 [sp + 0x10]
 19265: 95 11 20                 sp = sp + 0x20
 19268: 32 00                    ret
      :                          @1410
 19270: 00                       trap
      :                          @1411
 19271: 00                       trap
      :                          @1412
 19272: 00                       trap
      :                          @1413
 19273: 00                       trap
      :                          @1414
 19274: 00                       trap
      :                          @1415
 19275: 51 02 62                 jump @1426 if t0 == 0
      :                          @1416
 19278: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 19281: 97 2a 01                 a3 = t0 << 0x1
 19284: 95 ac 01                 a5 = a3 + 0x1
 19287: ae 8c f4                 jump @1415 if a5 >=u a1
      :                          @1417
 19290: 64 2b                    a4 = t0
 19292: 01                       fallthrough
      :                          @1418
 19293: 95 aa 02                 a3 = a3 + 0x2
 19296: ae 8a 1f                 jump @1421 if a3 >=u a1
      :                          @1419
 19299: 97 c9 03                 a2 = a5 << 0x3
 19302: c8 79 09                 a2 = a2 + a0
 19305: 97 aa 03                 a3 = a3 << 0x3
 19308: c8 7a 0a                 a3 = a3 + a0
 19311: 82 99                    a2 = u64 [a2]
 19313: 82 aa                    a3 = u64 [a3]
 19315: d9 a9 03                 t1 = a2 <s a3
 19318: c8 c3 03                 t1 = t1 + a5
 19321: ac 8b 0c                 jump @1422 if a4 <u a1
      :                          @1420
 19324: 28 a7 00                 jump @1441
      :                          @1421
 19327: 64 c3                    t1 = a5
 19329: ae 8b a2 00              jump @1441 if a4 >=u a1
      :                          @1422
 19333: ae 83 9f 00              jump @1442 if t1 >=u a1
      :                          @1423
 19337: 97 ba 03                 a3 = a4 << 0x3
 19340: c8 7a 0a                 a3 = a3 + a0
 19343: 97 3b 03                 a4 = t1 << 0x3
 19346: c8 7b 0b                 a4 = a4 + a0
 19349: 82 a9                    a2 = u64 [a3]
 19351: 82 bc                    a5 = u64 [a4]
 19353: af c9 b2                 jump @1415 if a2 >=s a5
      :                          @1424
 19356: 7b ac                    u64 [a3] = a5
 19358: 97 3a 01                 a3 = t1 << 0x1
 19361: 95 ac 01                 a5 = a3 + 0x1
 19364: 7b b9                    u64 [a4] = a2
 19366: 64 3b                    a4 = t1
 19368: ac 8c b5                 jump @1418 if a5 <u a1
      :                          @1425
 19371: 28 a0                    jump @1415
      :                          @1426
 19373: 33 02 02                 t0 = 0x2
 19376: 64 83                    t1 = a1
 19378: 01                       fallthrough
      :                          @1427
 19379: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 19382: ae 83 6e                 jump @1442 if t1 >=u a1
      :                          @1428
 19385: 97 39 03                 a2 = t1 << 0x3
 19388: c8 79 09                 a2 = a2 + a0
 19391: 82 9a                    a3 = u64 [a2]
 19393: 82 7b                    a4 = u64 [a0]
 19395: 7b 7a                    u64 [a0] = a3
 19397: 7b 9b                    u64 [a2] = a4
 19399: ac 23 58                 jump @1438 if t1 <u t0
      :                          @1429
 19402: 33 0a                    a3 = 0
 19404: 33 09                    a2 = 0
 19406: 33 0b 01                 a4 = 0x1
 19409: 01                       fallthrough
      :                          @1430
 19410: 95 aa 02                 a3 = a3 + 0x2
 19413: ae 3a 1e                 jump @1433 if a3 >=u t1
      :                          @1431
 19416: 97 bc 03                 a5 = a4 << 0x3
 19419: c8 7c 0c                 a5 = a5 + a0
 19422: 97 aa 03                 a3 = a3 << 0x3
 19425: c8 7a 0a                 a3 = a3 + a0
 19428: 82 cc                    a5 = u64 [a5]
 19430: 82 aa                    a3 = u64 [a3]
 19432: d9 ac 04                 t2 = a5 <s a3
 19435: c8 b4 04                 t2 = t2 + a4
 19438: ac 39 0a                 jump @1434 if a2 <u t1
      :                          @1432
 19441: 28 30                    jump @1439
      :                          @1433
 19443: 64 b4                    t2 = a4
 19445: ae 39 2c                 jump @1439 if a2 >=u t1
      :                          @1434
 19448: ae 34 2a                 jump @1440 if t2 >=u t1
      :                          @1435
 19451: 97 99 03                 a2 = a2 << 0x3
 19454: c8 97 0a                 a3 = a0 + a2
 19457: 97 49 03                 a2 = t2 << 0x3
 19460: c8 79 09                 a2 = a2 + a0
 19463: 82 ac                    a5 = u64 [a3]
 19465: 82 9b                    a4 = u64 [a2]
 19467: af bc a8                 jump @1427 if a5 >=s a4
      :                          @1436
 19470: 7b ab                    u64 [a3] = a4
 19472: 97 4a 01                 a3 = t2 << 0x1
 19475: 95 ab 01                 a4 = a3 + 0x1
 19478: 7b 9c                    u64 [a2] = a5
 19480: 64 49                    a2 = t2
 19482: ac 3b b8                 jump @1430 if a4 <u t1
      :                          @1437
 19485: 28 96                    jump @1427
      :                          @1438
 19487: 32 00                    ret
      :                          @1439
 19489: 00                       trap
      :                          @1440
 19490: 00                       trap
      :                          @1441
 19491: 00                       trap
      :                          @1442
 19492: 00                       trap
      :                          @1443 [@dyn 199]
 19493: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 19496: 7b 10 38                 u64 [sp + 0x38] = ra
 19499: 7b 15 30                 u64 [sp + 0x30] = s0
 19502: 7b 16 28                 u64 [sp + 0x28] = s1
 19505: 64 85                    s0 = a1
 19507: 82 88 28                 a1 = u64 [a1 + 0x28]
 19510: 82 59 20                 a2 = u64 [s0 + 0x20]
 19513: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19516: 64 76                    s1 = a0
 19518: 33 08 f0 2f 01           a1 = 0x12ff0
 19523: 64 97                    a0 = a2
 19525: 33 09                    a2 = 0
 19527: b4 a0 02 90 01           ra = 400, jump [a3]
      :                          @1444 [@dyn 200]
 19532: 7b 15 08                 u64 [sp + 0x8] = s0
 19535: 78 17 10                 u8 [sp + 0x10] = a0
 19538: 49 01                    u64 [sp + 0] = 0
 19540: 33 05 01                 s0 = 0x1
 19543: 78 15 11                 u8 [sp + 0x11] = s0
 19546: 7b 16 18                 u64 [sp + 0x18] = s1
 19549: 95 66 08                 s1 = s1 + 0x8
 19552: 7b 16 20                 u64 [sp + 0x20] = s1
 19555: 33 06 48                 s1 = 0x48
 19558: 64 17                    a0 = sp
 19560: 95 18 18                 a1 = sp + 0x18
 19563: 33 09 48                 a2 = 0x48
 19566: 50 20 92 01 68 cb 02     ra = 402, jump @13924
      :                          @1445 [@dyn 201]
 19573: 64 17                    a0 = sp
 19575: 95 18 20                 a1 = sp + 0x20
 19578: 64 69                    a2 = s1
 19580: 50 20 94 01 5a cb 02     ra = 404, jump @13924
      :                          @1446 [@dyn 202]
 19587: 82 17                    a0 = u64 [sp]
 19589: 7c 18 10                 a1 = u8 [sp + 0x10]
 19592: 51 07 59                 jump @1454 if a0 == 0
      :                          @1447
 19595: 52 08 59                 jump @1455 if a1 != 0
      :                          @1448
 19598: 7c 18 11                 a1 = u8 [sp + 0x11]
 19601: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 19604: 8e 77                    a0 = a0 >u 0
 19606: 82 16 08                 s1 = u64 [sp + 0x8]
 19609: 88 88 01                 a1 = a1 <u 0x1
 19612: d4 87 07                 a0 = a0 | a1
 19615: 52 07 28                 jump @1452 if a0 != 0
      :                          @1449
 19618: 7c 67 34                 a0 = u8 [s1 + 0x34]
 19621: 84 77 04                 a0 = a0 & 0x4
 19624: 52 07 1f                 jump @1452 if a0 != 0
      :                          @1450
 19627: 82 68 28                 a1 = u64 [s1 + 0x28]
 19630: 82 67 20                 a0 = u64 [s1 + 0x20]
 19633: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19636: 33 08 47 30 01           a1 = 0x13047
 19641: 33 09 01                 a2 = 0x1
 19644: 33 05 01                 s0 = 0x1
 19647: b4 a0 02 96 01           ra = 406, jump [a3]
      :                          @1451 [@dyn 203]
 19652: 52 07 20                 jump @1455 if a0 != 0
      :                          @1452
 19655: 82 68 28                 a1 = u64 [s1 + 0x28]
 19658: 82 67 20                 a0 = u64 [s1 + 0x20]
 19661: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19664: 33 08 f1 2f 01           a1 = 0x12ff1
 19669: 33 09 01                 a2 = 0x1
 19672: b4 a0 02 98 01           ra = 408, jump [a3]
      :                          @1453 [@dyn 204]
 19677: 64 75                    s0 = a0
 19679: 28 05                    jump @1455
      :                          @1454
 19681: 8e 85                    s0 = a1 >u 0
 19683: 01                       fallthrough
      :                          @1455
 19684: 64 57                    a0 = s0
 19686: 82 10 38                 ra = u64 [sp + 0x38]
 19689: 82 15 30                 s0 = u64 [sp + 0x30]
 19692: 82 16 28                 s1 = u64 [sp + 0x28]
 19695: 95 11 40                 sp = sp + 0x40
 19698: 32 00                    ret
      :                          @1456 [@dyn 205]
 19700: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 19703: 7b 10 38                 u64 [sp + 0x38] = ra
 19706: 7b 15 30                 u64 [sp + 0x30] = s0
 19709: 7b 16 28                 u64 [sp + 0x28] = s1
 19712: 64 85                    s0 = a1
 19714: 82 88 28                 a1 = u64 [a1 + 0x28]
 19717: 82 59 20                 a2 = u64 [s0 + 0x20]
 19720: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19723: 64 76                    s1 = a0
 19725: 33 08 f0 2f 01           a1 = 0x12ff0
 19730: 64 97                    a0 = a2
 19732: 33 09                    a2 = 0
 19734: b4 a0 02 9c 01           ra = 412, jump [a3]
      :                          @1457 [@dyn 206]
 19739: 7b 15 08                 u64 [sp + 0x8] = s0
 19742: 78 17 10                 u8 [sp + 0x10] = a0
 19745: 49 01                    u64 [sp + 0] = 0
 19747: 33 05 01                 s0 = 0x1
 19750: 78 15 11                 u8 [sp + 0x11] = s0
 19753: 7b 16 18                 u64 [sp + 0x18] = s1
 19756: 95 66 08                 s1 = s1 + 0x8
 19759: 7b 16 20                 u64 [sp + 0x20] = s1
 19762: 33 06 18                 s1 = 0x18
 19765: 64 17                    a0 = sp
 19767: 95 18 18                 a1 = sp + 0x18
 19770: 33 09 18                 a2 = 0x18
 19773: 50 20 9e 01 99 ca 02     ra = 414, jump @13924
      :                          @1458 [@dyn 207]
 19780: 64 17                    a0 = sp
 19782: 95 18 20                 a1 = sp + 0x20
 19785: 64 69                    a2 = s1
 19787: 50 20 a0 01 8b ca 02     ra = 416, jump @13924
      :                          @1459 [@dyn 208]
 19794: 82 17                    a0 = u64 [sp]
 19796: 7c 18 10                 a1 = u8 [sp + 0x10]
 19799: 51 07 59                 jump @1467 if a0 == 0
      :                          @1460
 19802: 52 08 59                 jump @1468 if a1 != 0
      :                          @1461
 19805: 7c 18 11                 a1 = u8 [sp + 0x11]
 19808: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 19811: 8e 77                    a0 = a0 >u 0
 19813: 82 16 08                 s1 = u64 [sp + 0x8]
 19816: 88 88 01                 a1 = a1 <u 0x1
 19819: d4 87 07                 a0 = a0 | a1
 19822: 52 07 28                 jump @1465 if a0 != 0
      :                          @1462
 19825: 7c 67 34                 a0 = u8 [s1 + 0x34]
 19828: 84 77 04                 a0 = a0 & 0x4
 19831: 52 07 1f                 jump @1465 if a0 != 0
      :                          @1463
 19834: 82 68 28                 a1 = u64 [s1 + 0x28]
 19837: 82 67 20                 a0 = u64 [s1 + 0x20]
 19840: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19843: 33 08 47 30 01           a1 = 0x13047
 19848: 33 09 01                 a2 = 0x1
 19851: 33 05 01                 s0 = 0x1
 19854: b4 a0 02 a2 01           ra = 418, jump [a3]
      :                          @1464 [@dyn 209]
 19859: 52 07 20                 jump @1468 if a0 != 0
      :                          @1465
 19862: 82 68 28                 a1 = u64 [s1 + 0x28]
 19865: 82 67 20                 a0 = u64 [s1 + 0x20]
 19868: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19871: 33 08 f1 2f 01           a1 = 0x12ff1
 19876: 33 09 01                 a2 = 0x1
 19879: b4 a0 02 a4 01           ra = 420, jump [a3]
      :                          @1466 [@dyn 210]
 19884: 64 75                    s0 = a0
 19886: 28 05                    jump @1468
      :                          @1467
 19888: 8e 85                    s0 = a1 >u 0
 19890: 01                       fallthrough
      :                          @1468
 19891: 64 57                    a0 = s0
 19893: 82 10 38                 ra = u64 [sp + 0x38]
 19896: 82 15 30                 s0 = u64 [sp + 0x30]
 19899: 82 16 28                 s1 = u64 [sp + 0x28]
 19902: 95 11 40                 sp = sp + 0x40
 19905: 32 00                    ret
      :                          @1469 [@dyn 211]
 19907: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 19910: 7b 10 48                 u64 [sp + 0x48] = ra
 19913: 7b 15 40                 u64 [sp + 0x40] = s0
 19916: 7b 16 38                 u64 [sp + 0x38] = s1
 19919: 64 85                    s0 = a1
 19921: 82 88 28                 a1 = u64 [a1 + 0x28]
 19924: 82 59 20                 a2 = u64 [s0 + 0x20]
 19927: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19930: 64 76                    s1 = a0
 19932: 33 08 f0 2f 01           a1 = 0x12ff0
 19937: 64 97                    a0 = a2
 19939: 33 09                    a2 = 0
 19941: b4 a0 02 a8 01           ra = 424, jump [a3]
      :                          @1470 [@dyn 212]
 19946: 7b 15 08                 u64 [sp + 0x8] = s0
 19949: 78 17 10                 u8 [sp + 0x10] = a0
 19952: 49 01                    u64 [sp + 0] = 0
 19954: 33 05 01                 s0 = 0x1
 19957: 78 15 11                 u8 [sp + 0x11] = s0
 19960: 7b 16 18                 u64 [sp + 0x18] = s1
 19963: 95 67 08                 a0 = s1 + 0x8
 19966: 7b 17 20                 u64 [sp + 0x20] = a0
 19969: 95 67 10                 a0 = s1 + 0x10
 19972: 7b 17 28                 u64 [sp + 0x28] = a0
 19975: 95 66 18                 s1 = s1 + 0x18
 19978: 7b 16 30                 u64 [sp + 0x30] = s1
 19981: 33 06 48                 s1 = 0x48
 19984: 64 17                    a0 = sp
 19986: 95 18 18                 a1 = sp + 0x18
 19989: 33 09 48                 a2 = 0x48
 19992: 50 20 aa 01 be c9 02     ra = 426, jump @13924
      :                          @1471 [@dyn 213]
 19999: 64 17                    a0 = sp
 20001: 95 18 20                 a1 = sp + 0x20
 20004: 64 69                    a2 = s1
 20006: 50 20 ac 01 b0 c9 02     ra = 428, jump @13924
      :                          @1472 [@dyn 214]
 20013: 64 17                    a0 = sp
 20015: 95 18 28                 a1 = sp + 0x28
 20018: 64 69                    a2 = s1
 20020: 50 20 ae 01 a2 c9 02     ra = 430, jump @13924
      :                          @1473 [@dyn 215]
 20027: 64 17                    a0 = sp
 20029: 95 18 30                 a1 = sp + 0x30
 20032: 64 69                    a2 = s1
 20034: 50 20 b0 01 94 c9 02     ra = 432, jump @13924
      :                          @1474 [@dyn 216]
 20041: 82 17                    a0 = u64 [sp]
 20043: 7c 18 10                 a1 = u8 [sp + 0x10]
 20046: 51 07 59                 jump @1482 if a0 == 0
      :                          @1475
 20049: 52 08 59                 jump @1483 if a1 != 0
      :                          @1476
 20052: 7c 18 11                 a1 = u8 [sp + 0x11]
 20055: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 20058: 8e 77                    a0 = a0 >u 0
 20060: 82 16 08                 s1 = u64 [sp + 0x8]
 20063: 88 88 01                 a1 = a1 <u 0x1
 20066: d4 87 07                 a0 = a0 | a1
 20069: 52 07 28                 jump @1480 if a0 != 0
      :                          @1477
 20072: 7c 67 34                 a0 = u8 [s1 + 0x34]
 20075: 84 77 04                 a0 = a0 & 0x4
 20078: 52 07 1f                 jump @1480 if a0 != 0
      :                          @1478
 20081: 82 68 28                 a1 = u64 [s1 + 0x28]
 20084: 82 67 20                 a0 = u64 [s1 + 0x20]
 20087: 82 8a 18                 a3 = u64 [a1 + 0x18]
 20090: 33 08 47 30 01           a1 = 0x13047
 20095: 33 09 01                 a2 = 0x1
 20098: 33 05 01                 s0 = 0x1
 20101: b4 a0 02 b2 01           ra = 434, jump [a3]
      :                          @1479 [@dyn 217]
 20106: 52 07 20                 jump @1483 if a0 != 0
      :                          @1480
 20109: 82 68 28                 a1 = u64 [s1 + 0x28]
 20112: 82 67 20                 a0 = u64 [s1 + 0x20]
 20115: 82 8a 18                 a3 = u64 [a1 + 0x18]
 20118: 33 08 f1 2f 01           a1 = 0x12ff1
 20123: 33 09 01                 a2 = 0x1
 20126: b4 a0 02 b4 01           ra = 436, jump [a3]
      :                          @1481 [@dyn 218]
 20131: 64 75                    s0 = a0
 20133: 28 05                    jump @1483
      :                          @1482
 20135: 8e 85                    s0 = a1 >u 0
 20137: 01                       fallthrough
      :                          @1483
 20138: 64 57                    a0 = s0
 20140: 82 10 48                 ra = u64 [sp + 0x48]
 20143: 82 15 40                 s0 = u64 [sp + 0x40]
 20146: 82 16 38                 s1 = u64 [sp + 0x38]
 20149: 95 11 50                 sp = sp + 0x50
 20152: 32 00                    ret
      :                          @1484
 20154: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 20157: 7b 10 10                 u64 [sp + 0x10] = ra
 20160: 7b 15 08                 u64 [sp + 0x8] = s0
 20163: 7b 16                    u64 [sp] = s1
 20165: 64 75                    s0 = a0
 20167: 82 76                    s1 = u64 [a0]
 20169: 64 68                    a1 = s1
 20171: 50 20 b6 01 3c 04        ra = 438, jump @1581
      :                          @1485 [@dyn 219]
 20177: 82 5a 18                 a3 = u64 [s0 + 0x18]
 20180: 82 57 10                 a0 = u64 [s0 + 0x10]
 20183: c9 a6 08                 a1 = s1 - a3
 20186: ae 78 3d                 jump @1489 if a1 >=u a0
      :                          @1486
 20189: 82 58                    a1 = u64 [s0]
 20191: c9 76 09                 a2 = s1 - a0
 20194: c9 9a 0a                 a3 = a3 - a2
 20197: d8 9a 0b                 a4 = a3 <u a2
 20200: c9 68 0c                 a5 = a1 - s1
 20203: d8 ac 0c                 a5 = a5 <u a3
 20206: 85 cc 01                 a5 = a5 ^ 0x1
 20209: d2 cb 0b                 a4 = a4 & a5
 20212: 52 0b 30                 jump @1490 if a4 != 0
      :                          @1487
 20215: 82 5a 08                 a3 = u64 [s0 + 0x8]
 20218: c9 98 06                 s1 = a1 - a2
 20221: 97 77 03                 a0 = a0 << 0x3
 20224: c8 7a 08                 a1 = a3 + a0
 20227: 97 67 03                 a0 = s1 << 0x3
 20230: c8 a7 07                 a0 = a0 + a3
 20233: 97 99 03                 a2 = a2 << 0x3
 20236: 50 20 b8 01 d2 ba 02     ra = 440, jump @13639
      :                          @1488 [@dyn 220]
 20243: 7b 56 10                 u64 [s0 + 0x10] = s1
 20246: 01                       fallthrough
      :                          @1489
 20247: 82 10 10                 ra = u64 [sp + 0x10]
 20250: 82 15 08                 s0 = u64 [sp + 0x8]
 20253: 82 16                    s1 = u64 [sp]
 20255: 95 11 18                 sp = sp + 0x18
 20258: 32 00                    ret
      :                          @1490
 20260: 82 58 08                 a1 = u64 [s0 + 0x8]
 20263: 97 67 03                 a0 = s1 << 0x3
 20266: c8 87 07                 a0 = a0 + a1
 20269: 97 a9 03                 a2 = a3 << 0x3
 20272: 82 10 10                 ra = u64 [sp + 0x10]
 20275: 82 15 08                 s0 = u64 [sp + 0x8]
 20278: 82 16                    s1 = u64 [sp]
 20280: 95 11 18                 sp = sp + 0x18
 20283: 28 f1 b9 02              jump @13621
      :                          @1491
 20287: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 20290: 7b 10 18                 u64 [sp + 0x18] = ra
 20293: 7b 15 10                 u64 [sp + 0x10] = s0
 20296: 7b 16 08                 u64 [sp + 0x8] = s1
 20299: 82 8a 08                 a3 = u64 [a1 + 0x8]
 20302: 82 89 18                 a2 = u64 [a1 + 0x18]
 20305: 33 0b 01                 a4 = 0x1
 20308: 64 75                    s0 = a0
 20310: aa ba 15                 jump @1495 if a3 == a4
      :                          @1492
 20313: 52 0a 15                 jump @1496 if a3 != 0
      :                          @1493
 20316: 52 09 12                 jump @1496 if a2 != 0
      :                          @1494
 20319: 33 06                    s1 = 0
 20321: 33 08 f0 2f 01           a1 = 0x12ff0
 20326: 33 07 01                 a0 = 0x1
 20329: 28 68                    jump @1505
      :                          @1495
 20331: 51 09 15                 jump @1497 if a2 == 0
      :                          @1496
 20334: 64 57                    a0 = s0
 20336: 82 10 18                 ra = u64 [sp + 0x18]
 20339: 82 15 10                 s0 = u64 [sp + 0x10]
 20342: 82 16 08                 s1 = u64 [sp + 0x8]
 20345: 95 11 20                 sp = sp + 0x20
 20348: 28 93 b3 02              jump @13535
      :                          @1497
 20352: 82 87                    a0 = u64 [a1]
 20354: 82 76 08                 s1 = u64 [a0 + 0x8]
 20357: 82 78                    a1 = u64 [a0]
 20359: 51 06 46                 jump @1504 if s1 == 0
      :                          @1498
 20362: 57 06 6b                 jump @1508 if s1 <s 0
      :                          @1499
 20365: 64 53                    t1 = s0
 20367: 85 67 ff                 a0 = s1 ^ 0xffffffffffffffff
 20370: 98 75 3f                 s0 = a0 >> 0x3f
 20373: 33 0a c0 22 03           a3 = 0x322c0
 20378: 33 02 00 00 01           t0 = 0x10000
 20383: c8 2a 0a                 a3 = a3 + t0
 20386: 01                       fallthrough
      :                          @1500
 20387: 82 ac                    a5 = u64 [a3]
 20389: c8 6c 0b                 a4 = a5 + s1
 20392: ac cb 4c                 jump @1507 if a4 <u a5
      :                          @1501
 20395: c8 5b 07                 a0 = a4 + s0
 20398: d8 b7 09                 a2 = a0 <u a4
 20401: d8 72 07                 a0 = t0 <u a0
 20404: d4 97 07                 a0 = a0 | a2
 20407: 52 07 3d                 jump @1507 if a0 != 0
      :                          @1502
 20410: 82 a7                    a0 = u64 [a3]
 20412: ab c7 e7                 jump @1500 if a0 != a5
      :                          @1503
 20415: 7b ab                    u64 [a3] = a4
 20417: 33 07 c0 22 04           a0 = 0x422c0
 20422: c9 b7 07                 a0 = a0 - a4
 20425: 64 35                    s0 = t1
 20427: 28 06                    jump @1505
      :                          @1504
 20429: 33 07 01                 a0 = 0x1
 20432: 01                       fallthrough
      :                          @1505
 20433: 7b 17                    u64 [sp] = a0
 20435: 64 69                    a2 = s1
 20437: 50 20 ba 01 57 b9 02     ra = 442, jump @13621
      :                          @1506 [@dyn 221]
 20444: 7b 56                    u64 [s0] = s1
 20446: 82 17                    a0 = u64 [sp]
 20448: 7b 57 08                 u64 [s0 + 0x8] = a0
 20451: 7b 56 10                 u64 [s0 + 0x10] = s1
 20454: 82 10 18                 ra = u64 [sp + 0x18]
 20457: 82 15 10                 s0 = u64 [sp + 0x10]
 20460: 82 16 08                 s1 = u64 [sp + 0x8]
 20463: 95 11 20                 sp = sp + 0x20
 20466: 32 00                    ret
      :                          @1507
 20468: 00                       trap
      :                          @1508
 20469: 00                       trap
      :                          @1509
 20470: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 20473: 7b 15                    u64 [sp] = s0
 20475: 33 03 c0 22 03           t1 = 0x322c0
 20480: 33 02 00 00 01           t0 = 0x10000
 20485: c8 23 04                 t2 = t1 + t0
 20488: 01                       fallthrough
      :                          @1510
 20489: 82 4b                    a4 = u64 [t2]
 20491: c8 7b 0c                 a5 = a4 + a0
 20494: ac bc 30                 jump @1515 if a5 <u a4
      :                          @1511
 20497: 95 c8 08                 a1 = a5 + 0x8
 20500: d8 c8 09                 a2 = a1 <u a5
 20503: d8 82 08                 a1 = t0 <u a1
 20506: d4 98 08                 a1 = a1 | a2
 20509: 52 08 21                 jump @1515 if a1 != 0
      :                          @1512
 20512: c9 c3 08                 a1 = t1 - a5
 20515: c8 28 08                 a1 = a1 + t0
 20518: 84 89 07                 a2 = a1 & 0x7
 20521: c8 9c 0c                 a5 = a5 + a2
 20524: 01                       fallthrough
      :                          @1513
 20525: 82 4a                    a3 = u64 [t2]
 20527: ab ba da                 jump @1510 if a3 != a4
      :                          @1514
 20530: 7b 4c                    u64 [t2] = a5
 20532: c9 98 07                 a0 = a1 - a2
 20535: 82 15                    s0 = u64 [sp]
 20537: 95 11 08                 sp = sp + 0x8
 20540: 32 00                    ret
      :                          @1515
 20542: 00                       trap
      :                          @1516
 20543: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 20546: 7b 10 30                 u64 [sp + 0x30] = ra
 20549: 7b 15 28                 u64 [sp + 0x28] = s0
 20552: 7b 16 20                 u64 [sp + 0x20] = s1
 20555: 64 90                    ra = a2
 20557: 51 08 90 00              jump @1528 if a1 == 0
      :                          @1517
 20561: 64 86                    s1 = a1
 20563: 82 a8 08                 a1 = u64 [a3 + 0x8]
 20566: 51 08 90 00              jump @1529 if a1 == 0
      :                          @1518
 20570: 82 a8 10                 a1 = u64 [a3 + 0x10]
 20573: 51 08 e4 00              jump @1537 if a1 == 0
      :                          @1519
 20577: 7b 18 10                 u64 [sp + 0x10] = a1
 20580: 7b 17 18                 u64 [sp + 0x18] = a0
 20583: 66 67                    a0 = cpop s1
 20585: 33 08 01                 a1 = 0x1
 20588: ab 87 2d 01              jump @1545 if a0 != a1
      :                          @1520
 20592: 82 a7                    a0 = u64 [a3]
 20594: 7b 17 08                 u64 [sp + 0x8] = a0
 20597: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 20600: 33 04 c0 22 03           t2 = 0x322c0
 20605: 33 03 00 00 01           t1 = 0x10000
 20610: c8 34 0a                 a3 = t2 + t1
 20613: 01                       fallthrough
      :                          @1521
 20614: 82 ab                    a4 = u64 [a3]
 20616: c8 0b 0c                 a5 = a4 + ra
 20619: ac bc 0e 01              jump @1545 if a5 <u a4
      :                          @1522
 20623: c8 6c 07                 a0 = a5 + s1
 20626: d8 c7 09                 a2 = a0 <u a5
 20629: d8 73 07                 a0 = t1 <u a0
 20632: d4 97 07                 a0 = a0 | a2
 20635: 52 07 fe 00              jump @1545 if a0 != 0
      :                          @1523
 20639: c9 c4 09                 a2 = t2 - a5
 20642: c8 39 09                 a2 = a2 + t1
 20645: d2 92 07                 a0 = t0 & a2
 20648: c8 7c 0c                 a5 = a5 + a0
 20651: 01                       fallthrough
      :                          @1524
 20652: 82 a5                    s0 = u64 [a3]
 20654: ab b5 d8                 jump @1521 if s0 != a4
      :                          @1525
 20657: 7b ac                    u64 [a3] = a5
 20659: 7b 10                    u64 [sp] = ra
 20661: c9 79 06                 s1 = a2 - a0
 20664: 64 67                    a0 = s1
 20666: 82 18 08                 a1 = u64 [sp + 0x8]
 20669: 82 15 10                 s0 = u64 [sp + 0x10]
 20672: 64 59                    a2 = s0
 20674: 50 20 bc 01 6a b8 02     ra = 444, jump @13621
      :                          @1526 [@dyn 222]
 20681: 54 35 00 00 01 db 00     jump @1546 if s0 <=u 65536
      :                          @1527
 20688: 82 10                    ra = u64 [sp]
 20690: 82 17 18                 a0 = u64 [sp + 0x18]
 20693: 33 08                    a1 = 0
 20695: 7b 76 08                 u64 [a0 + 0x8] = s1
 20698: 28 03 01                 jump @1553
      :                          @1528
 20701: 49 17 08                 u64 [a0 + 8] = 0
 20704: 33 08 01                 a1 = 0x1
 20707: 28 fa 00                 jump @1553
      :                          @1529
 20710: 51 00 f1 00              jump @1552 if ra == 0
      :                          @1530
 20714: 7b 17 18                 u64 [sp + 0x18] = a0
 20717: 66 67                    a0 = cpop s1
 20719: 33 08 01                 a1 = 0x1
 20722: ab 87 a7 00              jump @1545 if a0 != a1
      :                          @1531
 20726: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 20729: 33 04 c0 22 03           t2 = 0x322c0
 20734: 33 03 00 00 01           t1 = 0x10000
 20739: c8 34 0a                 a3 = t2 + t1
 20742: 01                       fallthrough
      :                          @1532
 20743: 82 ab                    a4 = u64 [a3]
 20745: c8 0b 0c                 a5 = a4 + ra
 20748: ac bc 8d 00              jump @1545 if a5 <u a4
      :                          @1533
 20752: c8 6c 07                 a0 = a5 + s1
 20755: d8 c7 09                 a2 = a0 <u a5
 20758: d8 73 07                 a0 = t1 <u a0
 20761: d4 97 07                 a0 = a0 | a2
 20764: 52 07 7d                 jump @1545 if a0 != 0
      :                          @1534
 20767: c9 c4 09                 a2 = t2 - a5
 20770: c8 39 09                 a2 = a2 + t1
 20773: d2 92 07                 a0 = t0 & a2
 20776: c8 7c 0c                 a5 = a5 + a0
 20779: 01                       fallthrough
      :                          @1535
 20780: 82 a5                    s0 = u64 [a3]
 20782: ab b5 d9                 jump @1532 if s0 != a4
      :                          @1536
 20785: 7b ac                    u64 [a3] = a5
 20787: c9 79 06                 s1 = a2 - a0
 20790: 82 17 18                 a0 = u64 [sp + 0x18]
 20793: 33 08                    a1 = 0
 20795: 7b 76 08                 u64 [a0 + 0x8] = s1
 20798: 28 9f 00                 jump @1553
      :                          @1537
 20801: 51 00 96 00              jump @1552 if ra == 0
      :                          @1538
 20805: 7b 17 18                 u64 [sp + 0x18] = a0
 20808: 66 67                    a0 = cpop s1
 20810: 33 08 01                 a1 = 0x1
 20813: ab 87 4c                 jump @1545 if a0 != a1
      :                          @1539
 20816: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 20819: 33 04 c0 22 03           t2 = 0x322c0
 20824: 33 03 00 00 01           t1 = 0x10000
 20829: c8 34 0a                 a3 = t2 + t1
 20832: 01                       fallthrough
      :                          @1540
 20833: 82 ab                    a4 = u64 [a3]
 20835: c8 0b 0c                 a5 = a4 + ra
 20838: ac bc 33                 jump @1545 if a5 <u a4
      :                          @1541
 20841: c8 6c 09                 a2 = a5 + s1
 20844: d8 c9 05                 s0 = a2 <u a5
 20847: d8 93 09                 a2 = t1 <u a2
 20850: d4 59 09                 a2 = a2 | s0
 20853: 52 09 24                 jump @1545 if a2 != 0
      :                          @1542
 20856: c9 c4 09                 a2 = t2 - a5
 20859: c8 39 09                 a2 = a2 + t1
 20862: d2 92 05                 s0 = t0 & a2
 20865: c8 5c 0c                 a5 = a5 + s0
 20868: 01                       fallthrough
      :                          @1543
 20869: 82 a7                    a0 = u64 [a3]
 20871: ab b7 da                 jump @1540 if a0 != a4
      :                          @1544
 20874: 7b ac                    u64 [a3] = a5
 20876: c9 59 06                 s1 = a2 - s0
 20879: 82 17 18                 a0 = u64 [sp + 0x18]
 20882: 33 08                    a1 = 0
 20884: 7b 76 08                 u64 [a0 + 0x8] = s1
 20887: 28 46                    jump @1553
      :                          @1545
 20889: 82 17 18                 a0 = u64 [sp + 0x18]
 20892: 7b 76 08                 u64 [a0 + 0x8] = s1
 20895: 33 08 01                 a1 = 0x1
 20898: 28 3b                    jump @1553
      :                          @1546
 20900: 33 08 c0 22 03           a1 = 0x322c0
 20905: 95 87 00 00 01           a0 = a1 + 0x10000
 20910: 82 10                    ra = u64 [sp]
 20912: 82 1c 10                 a5 = u64 [sp + 0x10]
 20915: 82 15 08                 s0 = u64 [sp + 0x8]
 20918: 01                       fallthrough
      :                          @1547
 20919: 82 78                    a1 = u64 [a0]
 20921: c9 87 09                 a2 = a0 - a1
 20924: ab 59 11                 jump @1551 if a2 != s0
      :                          @1548
 20927: c9 c8 09                 a2 = a1 - a5
 20930: 01                       fallthrough
      :                          @1549
 20931: 82 7a                    a3 = u64 [a0]
 20933: ab 8a f2                 jump @1547 if a3 != a1
      :                          @1550
 20936: 7b 79                    u64 [a0] = a2
 20938: 33 0b                    a4 = 0
 20940: 01                       fallthrough
      :                          @1551
 20941: 82 17 18                 a0 = u64 [sp + 0x18]
 20944: 33 08                    a1 = 0
 20946: 7b 76 08                 u64 [a0 + 0x8] = s1
 20949: 28 08                    jump @1553
      :                          @1552
 20951: 33 08                    a1 = 0
 20953: 7b 76 08                 u64 [a0 + 0x8] = s1
 20956: 01                       fallthrough
      :                          @1553
 20957: 7b 70 10                 u64 [a0 + 0x10] = ra
 20960: 7b 78                    u64 [a0] = a1
 20962: 82 10 30                 ra = u64 [sp + 0x30]
 20965: 82 15 28                 s0 = u64 [sp + 0x28]
 20968: 82 16 20                 s1 = u64 [sp + 0x20]
 20971: 95 11 38                 sp = sp + 0x38
 20974: 32 00                    ret
      :                          @1554
 20976: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 20979: 7b 15 08                 u64 [sp + 0x8] = s0
 20982: 7b 16                    u64 [sp] = s1
 20984: 97 72 04                 t0 = a0 << 0x4
 20987: 33 04 c0 22 03           t2 = 0x322c0
 20992: 33 03 00 00 01           t1 = 0x10000
 20997: c8 34 0b                 a4 = t2 + t1
 21000: 01                       fallthrough
      :                          @1555
 21001: 82 bc                    a5 = u64 [a4]
 21003: c8 2c 08                 a1 = a5 + t0
 21006: ac c8 33                 jump @1560 if a1 <u a5
      :                          @1556
 21009: 95 89 08                 a2 = a1 + 0x8
 21012: d8 89 0a                 a3 = a2 <u a1
 21015: d8 93 09                 a2 = t1 <u a2
 21018: d4 a9 09                 a2 = a2 | a3
 21021: 52 09 24                 jump @1560 if a2 != 0
      :                          @1557
 21024: c9 84 09                 a2 = t2 - a1
 21027: c8 39 09                 a2 = a2 + t1
 21030: 84 9a 07                 a3 = a2 & 0x7
 21033: c8 a8 08                 a1 = a1 + a3
 21036: 01                       fallthrough
      :                          @1558
 21037: 82 b5                    s0 = u64 [a4]
 21039: ab c5 da                 jump @1555 if s0 != a5
      :                          @1559
 21042: 7b b8                    u64 [a4] = a1
 21044: c9 a9 08                 a1 = a2 - a3
 21047: 82 15 08                 s0 = u64 [sp + 0x8]
 21050: 82 16                    s1 = u64 [sp]
 21052: 95 11 10                 sp = sp + 0x10
 21055: 32 00                    ret
      :                          @1560
 21057: 00                       trap
      :                          @1561
 21058: 51 07 3b                 jump @1567 if a0 == 0
      :                          @1562
 21061: 33 0a c0 22 03           a3 = 0x322c0
 21066: 33 02 00 00 01           t0 = 0x10000
 21071: c8 2a 0a                 a3 = a3 + t0
 21074: 01                       fallthrough
      :                          @1563
 21075: 82 ab                    a4 = u64 [a3]
 21077: c8 7b 09                 a2 = a4 + a0
 21080: ac b9 2c                 jump @1568 if a2 <u a4
      :                          @1564
 21083: 95 9c 01                 a5 = a2 + 0x1
 21086: 88 c8 01                 a1 = a5 <u 0x1
 21089: d8 c2 0c                 a5 = t0 <u a5
 21092: d4 c8 08                 a1 = a1 | a5
 21095: 52 08 1d                 jump @1568 if a1 != 0
      :                          @1565
 21098: 82 a8                    a1 = u64 [a3]
 21100: ab b8 e7                 jump @1563 if a1 != a4
      :                          @1566
 21103: 7b a9                    u64 [a3] = a2
 21105: 33 0c                    a5 = 0
 21107: 33 08 c0 22 04           a1 = 0x422c0
 21112: c9 98 08                 a1 = a1 - a2
 21115: 32 00                    ret
      :                          @1567
 21117: 33 08 01                 a1 = 0x1
 21120: 28 b3 63 02              jump @12095
      :                          @1568
 21124: 00                       trap
      :                          @1569
 21125: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21128: 7b 10 40                 u64 [sp + 0x40] = ra
 21131: 7b 15 38                 u64 [sp + 0x38] = s0
 21134: 7b 16 30                 u64 [sp + 0x30] = s1
 21137: 95 88 01                 a1 = a1 + 0x1
 21140: 51 08 5d                 jump @1577 if a1 == 0
      :                          @1570
 21143: 64 75                    s0 = a0
 21145: 82 77                    a0 = u64 [a0]
 21147: 97 79 01                 a2 = a0 << 0x1
 21150: 3a 0a 18 10 03           a3 = u64 [0x31018]
 21155: 33 0b 04                 a4 = 0x4
 21158: e4 b8 08                 a1 = maxu(a1, a4)
 21161: e4 89 06                 s1 = maxu(a2, a1)
 21164: d8 a6 08                 a1 = s1 <u a3
 21167: 96 69 18                 a2 = s1 * 0x18
 21170: 97 88 03                 a1 = a1 << 0x3
 21173: 51 07 15                 jump @1572 if a0 == 0
      :                          @1571
 21176: 82 5b 08                 a4 = u64 [s0 + 0x8]
 21179: 96 77 18                 a0 = a0 * 0x18
 21182: 7b 1b 18                 u64 [sp + 0x18] = a4
 21185: 49 11 20 08              u64 [sp + 32] = 0x8
 21189: 7b 17 28                 u64 [sp + 0x28] = a0
 21192: 28 06                    jump @1573
      :                          @1572
 21194: 49 11 20                 u64 [sp + 32] = 0
 21197: 01                       fallthrough
      :                          @1573
 21198: 64 17                    a0 = sp
 21200: 95 1a 18                 a3 = sp + 0x18
 21203: 50 20 be 01 6c fd        ra = 446, jump @1516
      :                          @1574 [@dyn 223]
 21209: 82 18                    a1 = u64 [sp]
 21211: 82 17 08                 a0 = u64 [sp + 0x8]
 21214: 51 08 14                 jump @1578 if a1 == 0
      :                          @1575
 21217: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21227: aa 87 0d                 jump @1579 if a0 == a1
      :                          @1576
 21230: 52 07 18                 jump @1580 if a0 != 0
      :                          @1577
 21233: 00                       trap
      :                          @1578
 21234: 7b 57 08                 u64 [s0 + 0x8] = a0
 21237: 7b 56                    u64 [s0] = s1
 21239: 01                       fallthrough
      :                          @1579
 21240: 82 10 40                 ra = u64 [sp + 0x40]
 21243: 82 15 38                 s0 = u64 [sp + 0x38]
 21246: 82 16 30                 s1 = u64 [sp + 0x30]
 21249: 95 11 48                 sp = sp + 0x48
 21252: 32 00                    ret
      :                          @1580
 21254: 00                       trap
      :                          @1581
 21255: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21258: 7b 10 40                 u64 [sp + 0x40] = ra
 21261: 7b 15 38                 u64 [sp + 0x38] = s0
 21264: 7b 16 30                 u64 [sp + 0x30] = s1
 21267: 95 88 01                 a1 = a1 + 0x1
 21270: 51 08 5b                 jump @1589 if a1 == 0
      :                          @1582
 21273: 64 75                    s0 = a0
 21275: 82 77                    a0 = u64 [a0]
 21277: 97 79 01                 a2 = a0 << 0x1
 21280: 33 0a 04                 a3 = 0x4
 21283: e4 a8 08                 a1 = maxu(a1, a3)
 21286: e4 89 06                 s1 = maxu(a2, a1)
 21289: 98 68 3c                 a1 = s1 >> 0x3c
 21292: 88 88 01                 a1 = a1 <u 0x1
 21295: 97 69 03                 a2 = s1 << 0x3
 21298: 97 88 03                 a1 = a1 << 0x3
 21301: 51 07 15                 jump @1584 if a0 == 0
      :                          @1583
 21304: 82 5a 08                 a3 = u64 [s0 + 0x8]
 21307: 97 77 03                 a0 = a0 << 0x3
 21310: 7b 1a 18                 u64 [sp + 0x18] = a3
 21313: 49 11 20 08              u64 [sp + 32] = 0x8
 21317: 7b 17 28                 u64 [sp + 0x28] = a0
 21320: 28 06                    jump @1585
      :                          @1584
 21322: 49 11 20                 u64 [sp + 32] = 0
 21325: 01                       fallthrough
      :                          @1585
 21326: 64 17                    a0 = sp
 21328: 95 1a 18                 a3 = sp + 0x18
 21331: 50 20 c0 01 ec fc        ra = 448, jump @1516
      :                          @1586 [@dyn 224]
 21337: 82 18                    a1 = u64 [sp]
 21339: 82 17 08                 a0 = u64 [sp + 0x8]
 21342: 51 08 14                 jump @1590 if a1 == 0
      :                          @1587
 21345: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21355: aa 87 0d                 jump @1591 if a0 == a1
      :                          @1588
 21358: 52 07 18                 jump @1592 if a0 != 0
      :                          @1589
 21361: 00                       trap
      :                          @1590
 21362: 7b 57 08                 u64 [s0 + 0x8] = a0
 21365: 7b 56                    u64 [s0] = s1
 21367: 01                       fallthrough
      :                          @1591
 21368: 82 10 40                 ra = u64 [sp + 0x40]
 21371: 82 15 38                 s0 = u64 [sp + 0x38]
 21374: 82 16 30                 s1 = u64 [sp + 0x30]
 21377: 95 11 48                 sp = sp + 0x48
 21380: 32 00                    ret
      :                          @1592
 21382: 00                       trap
      :                          @1593
 21383: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21386: 7b 10 40                 u64 [sp + 0x40] = ra
 21389: 7b 15 38                 u64 [sp + 0x38] = s0
 21392: 7b 16 30                 u64 [sp + 0x30] = s1
 21395: 95 88 01                 a1 = a1 + 0x1
 21398: 51 08 54                 jump @1601 if a1 == 0
      :                          @1594
 21401: 64 75                    s0 = a0
 21403: 82 77                    a0 = u64 [a0]
 21405: 97 79 01                 a2 = a0 << 0x1
 21408: 33 0a 08                 a3 = 0x8
 21411: e4 a8 08                 a1 = maxu(a1, a3)
 21414: e4 89 06                 s1 = maxu(a2, a1)
 21417: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 21420: 98 88 3f                 a1 = a1 >> 0x3f
 21423: 51 07 12                 jump @1596 if a0 == 0
      :                          @1595
 21426: 82 59 08                 a2 = u64 [s0 + 0x8]
 21429: 7b 19 18                 u64 [sp + 0x18] = a2
 21432: 49 11 20 01              u64 [sp + 32] = 0x1
 21436: 7b 17 28                 u64 [sp + 0x28] = a0
 21439: 28 06                    jump @1597
      :                          @1596
 21441: 49 11 20                 u64 [sp + 32] = 0
 21444: 01                       fallthrough
      :                          @1597
 21445: 64 17                    a0 = sp
 21447: 95 1a 18                 a3 = sp + 0x18
 21450: 64 69                    a2 = s1
 21452: 50 20 c2 01 73 fc        ra = 450, jump @1516
      :                          @1598 [@dyn 225]
 21458: 82 18                    a1 = u64 [sp]
 21460: 82 17 08                 a0 = u64 [sp + 0x8]
 21463: 51 08 14                 jump @1602 if a1 == 0
      :                          @1599
 21466: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21476: aa 87 0d                 jump @1603 if a0 == a1
      :                          @1600
 21479: 52 07 18                 jump @1604 if a0 != 0
      :                          @1601
 21482: 00                       trap
      :                          @1602
 21483: 7b 57 08                 u64 [s0 + 0x8] = a0
 21486: 7b 56                    u64 [s0] = s1
 21488: 01                       fallthrough
      :                          @1603
 21489: 82 10 40                 ra = u64 [sp + 0x40]
 21492: 82 15 38                 s0 = u64 [sp + 0x38]
 21495: 82 16 30                 s1 = u64 [sp + 0x30]
 21498: 95 11 48                 sp = sp + 0x48
 21501: 32 00                    ret
      :                          @1604
 21503: 00                       trap
      :                          @1605
 21504: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21507: 7b 10 40                 u64 [sp + 0x40] = ra
 21510: 7b 15 38                 u64 [sp + 0x38] = s0
 21513: 7b 16 30                 u64 [sp + 0x30] = s1
 21516: 95 88 01                 a1 = a1 + 0x1
 21519: 51 08 5b                 jump @1613 if a1 == 0
      :                          @1606
 21522: 64 75                    s0 = a0
 21524: 82 77                    a0 = u64 [a0]
 21526: 97 79 01                 a2 = a0 << 0x1
 21529: 33 0a 04                 a3 = 0x4
 21532: e4 a8 08                 a1 = maxu(a1, a3)
 21535: e4 89 06                 s1 = maxu(a2, a1)
 21538: 98 68 3b                 a1 = s1 >> 0x3b
 21541: 88 88 01                 a1 = a1 <u 0x1
 21544: 97 69 04                 a2 = s1 << 0x4
 21547: 97 88 03                 a1 = a1 << 0x3
 21550: 51 07 15                 jump @1608 if a0 == 0
      :                          @1607
 21553: 82 5a 08                 a3 = u64 [s0 + 0x8]
 21556: 97 77 04                 a0 = a0 << 0x4
 21559: 7b 1a 18                 u64 [sp + 0x18] = a3
 21562: 49 11 20 08              u64 [sp + 32] = 0x8
 21566: 7b 17 28                 u64 [sp + 0x28] = a0
 21569: 28 06                    jump @1609
      :                          @1608
 21571: 49 11 20                 u64 [sp + 32] = 0
 21574: 01                       fallthrough
      :                          @1609
 21575: 64 17                    a0 = sp
 21577: 95 1a 18                 a3 = sp + 0x18
 21580: 50 20 c4 01 f3 fb        ra = 452, jump @1516
      :                          @1610 [@dyn 226]
 21586: 82 18                    a1 = u64 [sp]
 21588: 82 17 08                 a0 = u64 [sp + 0x8]
 21591: 51 08 14                 jump @1614 if a1 == 0
      :                          @1611
 21594: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21604: aa 87 0d                 jump @1615 if a0 == a1
      :                          @1612
 21607: 52 07 18                 jump @1616 if a0 != 0
      :                          @1613
 21610: 00                       trap
      :                          @1614
 21611: 7b 57 08                 u64 [s0 + 0x8] = a0
 21614: 7b 56                    u64 [s0] = s1
 21616: 01                       fallthrough
      :                          @1615
 21617: 82 10 40                 ra = u64 [sp + 0x40]
 21620: 82 15 38                 s0 = u64 [sp + 0x38]
 21623: 82 16 30                 s1 = u64 [sp + 0x30]
 21626: 95 11 48                 sp = sp + 0x48
 21629: 32 00                    ret
      :                          @1616
 21631: 00                       trap
      :                          @1617
 21632: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21635: 7b 10 40                 u64 [sp + 0x40] = ra
 21638: 7b 15 38                 u64 [sp + 0x38] = s0
 21641: 7b 16 30                 u64 [sp + 0x30] = s1
 21644: 95 88 01                 a1 = a1 + 0x1
 21647: 51 08 5b                 jump @1625 if a1 == 0
      :                          @1618
 21650: 64 75                    s0 = a0
 21652: 82 77                    a0 = u64 [a0]
 21654: 97 79 01                 a2 = a0 << 0x1
 21657: 33 0a 04                 a3 = 0x4
 21660: e4 a8 08                 a1 = maxu(a1, a3)
 21663: e4 89 06                 s1 = maxu(a2, a1)
 21666: 98 68 3a                 a1 = s1 >> 0x3a
 21669: 88 88 01                 a1 = a1 <u 0x1
 21672: 97 69 05                 a2 = s1 << 0x5
 21675: 97 88 03                 a1 = a1 << 0x3
 21678: 51 07 15                 jump @1620 if a0 == 0
      :                          @1619
 21681: 82 5a 08                 a3 = u64 [s0 + 0x8]
 21684: 97 77 05                 a0 = a0 << 0x5
 21687: 7b 1a 18                 u64 [sp + 0x18] = a3
 21690: 49 11 20 08              u64 [sp + 32] = 0x8
 21694: 7b 17 28                 u64 [sp + 0x28] = a0
 21697: 28 06                    jump @1621
      :                          @1620
 21699: 49 11 20                 u64 [sp + 32] = 0
 21702: 01                       fallthrough
      :                          @1621
 21703: 64 17                    a0 = sp
 21705: 95 1a 18                 a3 = sp + 0x18
 21708: 50 20 c6 01 73 fb        ra = 454, jump @1516
      :                          @1622 [@dyn 227]
 21714: 82 18                    a1 = u64 [sp]
 21716: 82 17 08                 a0 = u64 [sp + 0x8]
 21719: 51 08 14                 jump @1626 if a1 == 0
      :                          @1623
 21722: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21732: aa 87 0d                 jump @1627 if a0 == a1
      :                          @1624
 21735: 52 07 18                 jump @1628 if a0 != 0
      :                          @1625
 21738: 00                       trap
      :                          @1626
 21739: 7b 57 08                 u64 [s0 + 0x8] = a0
 21742: 7b 56                    u64 [s0] = s1
 21744: 01                       fallthrough
      :                          @1627
 21745: 82 10 40                 ra = u64 [sp + 0x40]
 21748: 82 15 38                 s0 = u64 [sp + 0x38]
 21751: 82 16 30                 s1 = u64 [sp + 0x30]
 21754: 95 11 48                 sp = sp + 0x48
 21757: 32 00                    ret
      :                          @1628
 21759: 00                       trap
      :                          @1629
 21760: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21763: 7b 10 40                 u64 [sp + 0x40] = ra
 21766: 7b 15 38                 u64 [sp + 0x38] = s0
 21769: 7b 16 30                 u64 [sp + 0x30] = s1
 21772: c8 89 09                 a2 = a2 + a1
 21775: ac 89 5b                 jump @1637 if a2 <u a1
      :                          @1630
 21778: 64 75                    s0 = a0
 21780: 82 77                    a0 = u64 [a0]
 21782: 97 78 01                 a1 = a0 << 0x1
 21785: 33 0a 04                 a3 = 0x4
 21788: e4 a9 09                 a2 = maxu(a2, a3)
 21791: e4 98 06                 s1 = maxu(a1, a2)
 21794: 98 68 3d                 a1 = s1 >> 0x3d
 21797: 88 88 01                 a1 = a1 <u 0x1
 21800: 97 69 02                 a2 = s1 << 0x2
 21803: 97 88 02                 a1 = a1 << 0x2
 21806: 51 07 15                 jump @1632 if a0 == 0
      :                          @1631
 21809: 82 5b 08                 a4 = u64 [s0 + 0x8]
 21812: 97 77 02                 a0 = a0 << 0x2
 21815: 7b 1b 18                 u64 [sp + 0x18] = a4
 21818: 49 11 20 04              u64 [sp + 32] = 0x4
 21822: 7b 17 28                 u64 [sp + 0x28] = a0
 21825: 28 06                    jump @1633
      :                          @1632
 21827: 49 11 20                 u64 [sp + 32] = 0
 21830: 01                       fallthrough
      :                          @1633
 21831: 64 17                    a0 = sp
 21833: 95 1a 18                 a3 = sp + 0x18
 21836: 50 20 c8 01 f3 fa        ra = 456, jump @1516
      :                          @1634 [@dyn 228]
 21842: 82 18                    a1 = u64 [sp]
 21844: 82 17 08                 a0 = u64 [sp + 0x8]
 21847: 51 08 14                 jump @1638 if a1 == 0
      :                          @1635
 21850: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21860: aa 87 0d                 jump @1639 if a0 == a1
      :                          @1636
 21863: 52 07 18                 jump @1640 if a0 != 0
      :                          @1637
 21866: 00                       trap
      :                          @1638
 21867: 7b 57 08                 u64 [s0 + 0x8] = a0
 21870: 7b 56                    u64 [s0] = s1
 21872: 01                       fallthrough
      :                          @1639
 21873: 82 10 40                 ra = u64 [sp + 0x40]
 21876: 82 15 38                 s0 = u64 [sp + 0x38]
 21879: 82 16 30                 s1 = u64 [sp + 0x30]
 21882: 95 11 48                 sp = sp + 0x48
 21885: 32 00                    ret
      :                          @1640
 21887: 00                       trap
      :                          @1641
 21888: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21891: 7b 10 40                 u64 [sp + 0x40] = ra
 21894: 7b 15 38                 u64 [sp + 0x38] = s0
 21897: 7b 16 30                 u64 [sp + 0x30] = s1
 21900: c8 89 09                 a2 = a2 + a1
 21903: ac 89 5b                 jump @1649 if a2 <u a1
      :                          @1642
 21906: 64 75                    s0 = a0
 21908: 82 77                    a0 = u64 [a0]
 21910: 97 78 01                 a1 = a0 << 0x1
 21913: 33 0a 04                 a3 = 0x4
 21916: e4 a9 09                 a2 = maxu(a2, a3)
 21919: e4 98 06                 s1 = maxu(a1, a2)
 21922: 98 68 3b                 a1 = s1 >> 0x3b
 21925: 88 88 01                 a1 = a1 <u 0x1
 21928: 97 69 04                 a2 = s1 << 0x4
 21931: 97 88 03                 a1 = a1 << 0x3
 21934: 51 07 15                 jump @1644 if a0 == 0
      :                          @1643
 21937: 82 5a 08                 a3 = u64 [s0 + 0x8]
 21940: 97 77 04                 a0 = a0 << 0x4
 21943: 7b 1a 18                 u64 [sp + 0x18] = a3
 21946: 49 11 20 08              u64 [sp + 32] = 0x8
 21950: 7b 17 28                 u64 [sp + 0x28] = a0
 21953: 28 06                    jump @1645
      :                          @1644
 21955: 49 11 20                 u64 [sp + 32] = 0
 21958: 01                       fallthrough
      :                          @1645
 21959: 64 17                    a0 = sp
 21961: 95 1a 18                 a3 = sp + 0x18
 21964: 50 20 ca 01 73 fa        ra = 458, jump @1516
      :                          @1646 [@dyn 229]
 21970: 82 18                    a1 = u64 [sp]
 21972: 82 17 08                 a0 = u64 [sp + 0x8]
 21975: 51 08 14                 jump @1650 if a1 == 0
      :                          @1647
 21978: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21988: aa 87 0d                 jump @1651 if a0 == a1
      :                          @1648
 21991: 52 07 18                 jump @1652 if a0 != 0
      :                          @1649
 21994: 00                       trap
      :                          @1650
 21995: 7b 57 08                 u64 [s0 + 0x8] = a0
 21998: 7b 56                    u64 [s0] = s1
 22000: 01                       fallthrough
      :                          @1651
 22001: 82 10 40                 ra = u64 [sp + 0x40]
 22004: 82 15 38                 s0 = u64 [sp + 0x38]
 22007: 82 16 30                 s1 = u64 [sp + 0x30]
 22010: 95 11 48                 sp = sp + 0x48
 22013: 32 00                    ret
      :                          @1652
 22015: 00                       trap
      :                          @1653
 22016: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 22019: 7b 10 40                 u64 [sp + 0x40] = ra
 22022: 7b 15 38                 u64 [sp + 0x38] = s0
 22025: 7b 16 30                 u64 [sp + 0x30] = s1
 22028: 95 88 01                 a1 = a1 + 0x1
 22031: 51 08 5b                 jump @1661 if a1 == 0
      :                          @1654
 22034: 64 75                    s0 = a0
 22036: 82 77                    a0 = u64 [a0]
 22038: 97 79 01                 a2 = a0 << 0x1
 22041: 33 0a 04                 a3 = 0x4
 22044: e4 a8 08                 a1 = maxu(a1, a3)
 22047: e4 89 06                 s1 = maxu(a2, a1)
 22050: 98 68 3c                 a1 = s1 >> 0x3c
 22053: 88 88 01                 a1 = a1 <u 0x1
 22056: 97 69 03                 a2 = s1 << 0x3
 22059: 97 88 03                 a1 = a1 << 0x3
 22062: 51 07 15                 jump @1656 if a0 == 0
      :                          @1655
 22065: 82 5a 08                 a3 = u64 [s0 + 0x8]
 22068: 97 77 03                 a0 = a0 << 0x3
 22071: 7b 1a 18                 u64 [sp + 0x18] = a3
 22074: 49 11 20 08              u64 [sp + 32] = 0x8
 22078: 7b 17 28                 u64 [sp + 0x28] = a0
 22081: 28 06                    jump @1657
      :                          @1656
 22083: 49 11 20                 u64 [sp + 32] = 0
 22086: 01                       fallthrough
      :                          @1657
 22087: 64 17                    a0 = sp
 22089: 95 1a 18                 a3 = sp + 0x18
 22092: 50 20 cc 01 f3 f9        ra = 460, jump @1516
      :                          @1658 [@dyn 230]
 22098: 82 18                    a1 = u64 [sp]
 22100: 82 17 08                 a0 = u64 [sp + 0x8]
 22103: 51 08 14                 jump @1662 if a1 == 0
      :                          @1659
 22106: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 22116: aa 87 0d                 jump @1663 if a0 == a1
      :                          @1660
 22119: 52 07 18                 jump @1664 if a0 != 0
      :                          @1661
 22122: 00                       trap
      :                          @1662
 22123: 7b 57 08                 u64 [s0 + 0x8] = a0
 22126: 7b 56                    u64 [s0] = s1
 22128: 01                       fallthrough
      :                          @1663
 22129: 82 10 40                 ra = u64 [sp + 0x40]
 22132: 82 15 38                 s0 = u64 [sp + 0x38]
 22135: 82 16 30                 s1 = u64 [sp + 0x30]
 22138: 95 11 48                 sp = sp + 0x48
 22141: 32 00                    ret
      :                          @1664
 22143: 00                       trap
      :                          @1665 [@dyn 231]
 22144: 82 7a 08                 a3 = u64 [a0 + 0x8]
 22147: 82 79 10                 a2 = u64 [a0 + 0x10]
 22150: 64 87                    a0 = a1
 22152: 64 a8                    a1 = a3
 22154: 28 f0 b8 02              jump @13756
      :                          @1666
 22158: 82 9a                    a3 = u64 [a2]
 22160: 95 ab 90 00              a4 = a3 + 0x90
 22164: ac ab a0 02              jump @1707 if a4 <u a3
      :                          @1667
 22168: 95 b8 08                 a1 = a4 + 0x8
 22171: d8 b8 0c                 a5 = a1 <u a4
 22174: d8 82 08                 a1 = t0 <u a1
 22177: d4 c8 08                 a1 = a1 | a5
 22180: 52 08 90 02              jump @1707 if a1 != 0
      :                          @1668
 22184: c9 b3 08                 a1 = t1 - a4
 22187: c8 28 08                 a1 = a1 + t0
 22190: 84 8c 07                 a5 = a1 & 0x7
 22193: c8 cb 0b                 a4 = a4 + a5
 22196: 01                       fallthrough
      :                          @1669
 22197: 82 95                    s0 = u64 [a2]
 22199: ab a5 d7                 jump @1666 if s0 != a3
      :                          @1670
 22202: 7b 9b                    u64 [a2] = a4
 22204: 01                       fallthrough
      :                          @1671
 22205: 82 19 08                 a2 = u64 [sp + 0x8]
 22208: 82 95 10                 s0 = u64 [a2 + 0x10]
 22211: c9 c8 0b                 a4 = a1 - a5
 22214: 51 05 0f 02              jump @1704 if s0 == 0
      :                          @1672
 22218: 7b 17                    u64 [sp] = a0
 22220: 98 57 3b                 a0 = s0 >> 0x3b
 22223: 52 07 66 02              jump @1708 if a0 != 0
      :                          @1673
 22227: 7b 1b 28                 u64 [sp + 0x28] = a4
 22230: 82 98 08                 a1 = u64 [a2 + 0x8]
 22233: 7b 18 18                 u64 [sp + 0x18] = a1
 22236: 88 76 01                 s1 = a0 <u 0x1
 22239: 7b 15 20                 u64 [sp + 0x20] = s0
 22242: 97 55 04                 s0 = s0 << 0x4
 22245: 97 64 03                 t2 = s1 << 0x3
 22248: 33 03 c0 22 03           t1 = 0x322c0
 22253: 33 02 00 00 01           t0 = 0x10000
 22258: c8 23 09                 a2 = t1 + t0
 22261: 01                       fallthrough
      :                          @1674
 22262: 82 9a                    a3 = u64 [a2]
 22264: c8 5a 0b                 a4 = a3 + s0
 22267: ac ab 38 02              jump @1706 if a4 <u a3
      :                          @1675
 22271: c8 4b 08                 a1 = a4 + t2
 22274: d8 b8 0c                 a5 = a1 <u a4
 22277: d8 82 08                 a1 = t0 <u a1
 22280: d4 c8 08                 a1 = a1 | a5
 22283: 52 08 28 02              jump @1706 if a1 != 0
      :                          @1676
 22287: c9 b3 08                 a1 = t1 - a4
 22290: c8 28 08                 a1 = a1 + t0
 22293: 84 8c 07                 a5 = a1 & 0x7
 22296: c8 cb 0b                 a4 = a4 + a5
 22299: 01                       fallthrough
      :                          @1677
 22300: 82 97                    a0 = u64 [a2]
 22302: ab a7 d8                 jump @1674 if a0 != a3
      :                          @1678
 22305: 7b 9b                    u64 [a2] = a4
 22307: c9 c8 06                 s1 = a1 - a5
 22310: 64 67                    a0 = s1
 22312: 82 18 18                 a1 = u64 [sp + 0x18]
 22315: 64 59                    a2 = s0
 22317: 7b 14 10                 u64 [sp + 0x10] = t2
 22320: 50 20 d0 01 fc b1 02     ra = 464, jump @13621
      :                          @1679 [@dyn 232]
 22327: 82 14 10                 t2 = u64 [sp + 0x10]
 22330: 82 17 28                 a0 = u64 [sp + 0x28]
 22333: 82 18 20                 a1 = u64 [sp + 0x20]
 22336: 7b 78                    u64 [a0] = a1
 22338: 7b 76 08                 u64 [a0 + 0x8] = s1
 22341: 7b 78 10                 u64 [a0 + 0x10] = a1
 22344: 33 07 c0 22 03           a0 = 0x322c0
 22349: 33 03 c0 22 03           t1 = 0x322c0
 22354: 33 02 00 00 01           t0 = 0x10000
 22359: c8 23 09                 a2 = t1 + t0
 22362: 01                       fallthrough
      :                          @1680
 22363: 82 9a                    a3 = u64 [a2]
 22365: c8 5a 0b                 a4 = a3 + s0
 22368: ac ab d3 01              jump @1706 if a4 <u a3
      :                          @1681
 22372: c8 4b 08                 a1 = a4 + t2
 22375: d8 b8 0c                 a5 = a1 <u a4
 22378: d8 82 08                 a1 = t0 <u a1
 22381: d4 c8 08                 a1 = a1 | a5
 22384: 52 08 c3 01              jump @1706 if a1 != 0
      :                          @1682
 22388: c9 b3 08                 a1 = t1 - a4
 22391: c8 28 08                 a1 = a1 + t0
 22394: 84 8c 07                 a5 = a1 & 0x7
 22397: c8 cb 0b                 a4 = a4 + a5
 22400: 01                       fallthrough
      :                          @1683
 22401: 82 96                    s1 = u64 [a2]
 22403: ab a6 d8                 jump @1680 if s1 != a3
      :                          @1684
 22406: 7b 9b                    u64 [a2] = a4
 22408: c9 c8 06                 s1 = a1 - a5
 22411: 64 67                    a0 = s1
 22413: 82 18 18                 a1 = u64 [sp + 0x18]
 22416: 64 59                    a2 = s0
 22418: 50 20 d2 01 9a b1 02     ra = 466, jump @13621
      :                          @1685 [@dyn 233]
 22425: 82 14 10                 t2 = u64 [sp + 0x10]
 22428: 82 17 28                 a0 = u64 [sp + 0x28]
 22431: 82 18 20                 a1 = u64 [sp + 0x20]
 22434: 7b 78 18                 u64 [a0 + 0x18] = a1
 22437: 7b 76 20                 u64 [a0 + 0x20] = s1
 22440: 7b 78 28                 u64 [a0 + 0x28] = a1
 22443: 33 07 c0 22 03           a0 = 0x322c0
 22448: 33 03 c0 22 03           t1 = 0x322c0
 22453: 33 02 00 00 01           t0 = 0x10000
 22458: c8 23 09                 a2 = t1 + t0
 22461: 01                       fallthrough
      :                          @1686
 22462: 82 9a                    a3 = u64 [a2]
 22464: c8 5a 0b                 a4 = a3 + s0
 22467: ac ab 70 01              jump @1706 if a4 <u a3
      :                          @1687
 22471: c8 4b 08                 a1 = a4 + t2
 22474: d8 b8 0c                 a5 = a1 <u a4
 22477: d8 82 08                 a1 = t0 <u a1
 22480: d4 c8 08                 a1 = a1 | a5
 22483: 52 08 60 01              jump @1706 if a1 != 0
      :                          @1688
 22487: c9 b3 08                 a1 = t1 - a4
 22490: c8 28 08                 a1 = a1 + t0
 22493: 84 8c 07                 a5 = a1 & 0x7
 22496: c8 cb 0b                 a4 = a4 + a5
 22499: 01                       fallthrough
      :                          @1689
 22500: 82 96                    s1 = u64 [a2]
 22502: ab a6 d8                 jump @1686 if s1 != a3
      :                          @1690
 22505: 7b 9b                    u64 [a2] = a4
 22507: c9 c8 06                 s1 = a1 - a5
 22510: 64 67                    a0 = s1
 22512: 82 18 18                 a1 = u64 [sp + 0x18]
 22515: 64 59                    a2 = s0
 22517: 50 20 d4 01 37 b1 02     ra = 468, jump @13621
      :                          @1691 [@dyn 234]
 22524: 82 14 10                 t2 = u64 [sp + 0x10]
 22527: 82 17 28                 a0 = u64 [sp + 0x28]
 22530: 82 18 20                 a1 = u64 [sp + 0x20]
 22533: 7b 78 30                 u64 [a0 + 0x30] = a1
 22536: 7b 76 38                 u64 [a0 + 0x38] = s1
 22539: 7b 78 40                 u64 [a0 + 0x40] = a1
 22542: 33 07 c0 22 03           a0 = 0x322c0
 22547: 33 03 c0 22 03           t1 = 0x322c0
 22552: 33 02 00 00 01           t0 = 0x10000
 22557: c8 23 09                 a2 = t1 + t0
 22560: 01                       fallthrough
      :                          @1692
 22561: 82 9a                    a3 = u64 [a2]
 22563: c8 5a 0b                 a4 = a3 + s0
 22566: ac ab 0d 01              jump @1706 if a4 <u a3
      :                          @1693
 22570: c8 4b 08                 a1 = a4 + t2
 22573: d8 b8 0c                 a5 = a1 <u a4
 22576: d8 82 08                 a1 = t0 <u a1
 22579: d4 c8 08                 a1 = a1 | a5
 22582: 52 08 fd 00              jump @1706 if a1 != 0
      :                          @1694
 22586: c9 b3 08                 a1 = t1 - a4
 22589: c8 28 08                 a1 = a1 + t0
 22592: 84 8c 07                 a5 = a1 & 0x7
 22595: c8 cb 0b                 a4 = a4 + a5
 22598: 01                       fallthrough
      :                          @1695
 22599: 82 96                    s1 = u64 [a2]
 22601: ab a6 d8                 jump @1692 if s1 != a3
      :                          @1696
 22604: 7b 9b                    u64 [a2] = a4
 22606: c9 c8 06                 s1 = a1 - a5
 22609: 64 67                    a0 = s1
 22611: 82 18 18                 a1 = u64 [sp + 0x18]
 22614: 64 59                    a2 = s0
 22616: 50 20 d6 01 d4 b0 02     ra = 470, jump @13621
      :                          @1697 [@dyn 235]
 22623: 82 14 10                 t2 = u64 [sp + 0x10]
 22626: 82 17 28                 a0 = u64 [sp + 0x28]
 22629: 82 18 20                 a1 = u64 [sp + 0x20]
 22632: 7b 78 48                 u64 [a0 + 0x48] = a1
 22635: 7b 76 50                 u64 [a0 + 0x50] = s1
 22638: 7b 78 58                 u64 [a0 + 0x58] = a1
 22641: 33 07 c0 22 03           a0 = 0x322c0
 22646: 33 03 c0 22 03           t1 = 0x322c0
 22651: 33 02 00 00 01           t0 = 0x10000
 22656: c8 23 09                 a2 = t1 + t0
 22659: 01                       fallthrough
      :                          @1698
 22660: 82 9a                    a3 = u64 [a2]
 22662: c8 5a 0b                 a4 = a3 + s0
 22665: ac ab aa 00              jump @1706 if a4 <u a3
      :                          @1699
 22669: c8 4b 08                 a1 = a4 + t2
 22672: d8 b8 0c                 a5 = a1 <u a4
 22675: d8 82 08                 a1 = t0 <u a1
 22678: d4 c8 08                 a1 = a1 | a5
 22681: 52 08 9a 00              jump @1706 if a1 != 0
      :                          @1700
 22685: c9 b3 08                 a1 = t1 - a4
 22688: c8 28 08                 a1 = a1 + t0
 22691: 84 8c 07                 a5 = a1 & 0x7
 22694: c8 cb 0b                 a4 = a4 + a5
 22697: 01                       fallthrough
      :                          @1701
 22698: 82 96                    s1 = u64 [a2]
 22700: ab a6 d8                 jump @1698 if s1 != a3
      :                          @1702
 22703: 7b 9b                    u64 [a2] = a4
 22705: c9 c8 06                 s1 = a1 - a5
 22708: 64 67                    a0 = s1
 22710: 82 18 18                 a1 = u64 [sp + 0x18]
 22713: 64 59                    a2 = s0
 22715: 50 20 d8 01 71 b0 02     ra = 472, jump @13621
      :                          @1703 [@dyn 236]
 22722: 82 1b 28                 a4 = u64 [sp + 0x28]
 22725: 82 15 20                 s0 = u64 [sp + 0x20]
 22728: 7b b5 60                 u64 [a4 + 0x60] = s0
 22731: 7b b6 68                 u64 [a4 + 0x68] = s1
 22734: 82 17                    a0 = u64 [sp]
 22736: 82 19 08                 a2 = u64 [sp + 0x8]
 22739: 28 31                    jump @1705
      :                          @1704
 22741: 49 0b                    u64 [a4 + 0] = 0
 22743: 49 1b 08 08              u64 [a4 + 8] = 0x8
 22747: 49 1b 10                 u64 [a4 + 16] = 0
 22750: 49 1b 18                 u64 [a4 + 24] = 0
 22753: 49 1b 20 08              u64 [a4 + 32] = 0x8
 22757: 49 1b 28                 u64 [a4 + 40] = 0
 22760: 49 1b 30                 u64 [a4 + 48] = 0
 22763: 49 1b 38 08              u64 [a4 + 56] = 0x8
 22767: 49 1b 40                 u64 [a4 + 64] = 0
 22770: 49 1b 48                 u64 [a4 + 72] = 0
 22773: 49 1b 50 08              u64 [a4 + 80] = 0x8
 22777: 49 1b 58                 u64 [a4 + 88] = 0
 22780: 49 1b 60                 u64 [a4 + 96] = 0
 22783: 49 1b 68 08              u64 [a4 + 104] = 0x8
 22787: 01                       fallthrough
      :                          @1705
 22788: 82 9a                    a3 = u64 [a2]
 22790: 82 98 08                 a1 = u64 [a2 + 0x8]
 22793: 82 99 10                 a2 = u64 [a2 + 0x10]
 22796: 7b b5 70                 u64 [a4 + 0x70] = s0
 22799: 7b ba 78                 u64 [a4 + 0x78] = a3
 22802: 7b b8 80 00              u64 [a4 + 0x80] = a1
 22806: 7b b9 88 00              u64 [a4 + 0x88] = a2
 22810: 33 08 06                 a1 = 0x6
 22813: 7b 78                    u64 [a0] = a1
 22815: 7b 7b 08                 u64 [a0 + 0x8] = a4
 22818: 7b 78 10                 u64 [a0 + 0x10] = a1
 22821: 82 10 40                 ra = u64 [sp + 0x40]
 22824: 82 15 38                 s0 = u64 [sp + 0x38]
 22827: 82 16 30                 s1 = u64 [sp + 0x30]
 22830: 95 11 48                 sp = sp + 0x48
 22833: 32 00                    ret
      :                          @1706
 22835: 00                       trap
      :                          @1707
 22836: 00                       trap
      :                          @1708
 22837: 00                       trap
      :                          @1709
 22838: 82 9a                    a3 = u64 [a2]
 22840: 95 ab f0 00              a4 = a3 + 0xf0
 22844: ac ab 6a 04              jump @1774 if a4 <u a3
      :                          @1710
 22848: 95 b8 08                 a1 = a4 + 0x8
 22851: d8 b8 0c                 a5 = a1 <u a4
 22854: d8 82 08                 a1 = t0 <u a1
 22857: d4 c8 08                 a1 = a1 | a5
 22860: 52 08 5a 04              jump @1774 if a1 != 0
      :                          @1711
 22864: c9 b3 08                 a1 = t1 - a4
 22867: c8 28 08                 a1 = a1 + t0
 22870: 84 8c 07                 a5 = a1 & 0x7
 22873: c8 cb 0b                 a4 = a4 + a5
 22876: 01                       fallthrough
      :                          @1712
 22877: 82 95                    s0 = u64 [a2]
 22879: ab a5 d7                 jump @1709 if s0 != a3
      :                          @1713
 22882: 7b 9b                    u64 [a2] = a4
 22884: 01                       fallthrough
      :                          @1714
 22885: 82 19 08                 a2 = u64 [sp + 0x8]
 22888: 82 95 10                 s0 = u64 [a2 + 0x10]
 22891: c9 c8 0b                 a4 = a1 - a5
 22894: 51 05 a5 03              jump @1771 if s0 == 0
      :                          @1715
 22898: 7b 17                    u64 [sp] = a0
 22900: 98 57 3b                 a0 = s0 >> 0x3b
 22903: 52 07 30 04              jump @1775 if a0 != 0
      :                          @1716
 22907: 7b 1b 28                 u64 [sp + 0x28] = a4
 22910: 82 98 08                 a1 = u64 [a2 + 0x8]
 22913: 7b 18 18                 u64 [sp + 0x18] = a1
 22916: 88 76 01                 s1 = a0 <u 0x1
 22919: 7b 15 20                 u64 [sp + 0x20] = s0
 22922: 97 55 04                 s0 = s0 << 0x4
 22925: 97 64 03                 t2 = s1 << 0x3
 22928: 33 03 c0 22 03           t1 = 0x322c0
 22933: 33 02 00 00 01           t0 = 0x10000
 22938: c8 23 09                 a2 = t1 + t0
 22941: 01                       fallthrough
      :                          @1717
 22942: 82 9a                    a3 = u64 [a2]
 22944: c8 5a 0b                 a4 = a3 + s0
 22947: ac ab 02 04              jump @1773 if a4 <u a3
      :                          @1718
 22951: c8 4b 08                 a1 = a4 + t2
 22954: d8 b8 0c                 a5 = a1 <u a4
 22957: d8 82 08                 a1 = t0 <u a1
 22960: d4 c8 08                 a1 = a1 | a5
 22963: 52 08 f2 03              jump @1773 if a1 != 0
      :                          @1719
 22967: c9 b3 08                 a1 = t1 - a4
 22970: c8 28 08                 a1 = a1 + t0
 22973: 84 8c 07                 a5 = a1 & 0x7
 22976: c8 cb 0b                 a4 = a4 + a5
 22979: 01                       fallthrough
      :                          @1720
 22980: 82 97                    a0 = u64 [a2]
 22982: ab a7 d8                 jump @1717 if a0 != a3
      :                          @1721
 22985: 7b 9b                    u64 [a2] = a4
 22987: c9 c8 06                 s1 = a1 - a5
 22990: 64 67                    a0 = s1
 22992: 82 18 18                 a1 = u64 [sp + 0x18]
 22995: 64 59                    a2 = s0
 22997: 7b 14 10                 u64 [sp + 0x10] = t2
 23000: 50 20 da 01 54 af 02     ra = 474, jump @13621
      :                          @1722 [@dyn 237]
 23007: 82 14 10                 t2 = u64 [sp + 0x10]
 23010: 82 17 28                 a0 = u64 [sp + 0x28]
 23013: 82 18 20                 a1 = u64 [sp + 0x20]
 23016: 7b 78                    u64 [a0] = a1
 23018: 7b 76 08                 u64 [a0 + 0x8] = s1
 23021: 7b 78 10                 u64 [a0 + 0x10] = a1
 23024: 33 07 c0 22 03           a0 = 0x322c0
 23029: 33 03 c0 22 03           t1 = 0x322c0
 23034: 33 02 00 00 01           t0 = 0x10000
 23039: c8 23 09                 a2 = t1 + t0
 23042: 01                       fallthrough
      :                          @1723
 23043: 82 9a                    a3 = u64 [a2]
 23045: c8 5a 0b                 a4 = a3 + s0
 23048: ac ab 9d 03              jump @1773 if a4 <u a3
      :                          @1724
 23052: c8 4b 08                 a1 = a4 + t2
 23055: d8 b8 0c                 a5 = a1 <u a4
 23058: d8 82 08                 a1 = t0 <u a1
 23061: d4 c8 08                 a1 = a1 | a5
 23064: 52 08 8d 03              jump @1773 if a1 != 0
      :                          @1725
 23068: c9 b3 08                 a1 = t1 - a4
 23071: c8 28 08                 a1 = a1 + t0
 23074: 84 8c 07                 a5 = a1 & 0x7
 23077: c8 cb 0b                 a4 = a4 + a5
 23080: 01                       fallthrough
      :                          @1726
 23081: 82 96                    s1 = u64 [a2]
 23083: ab a6 d8                 jump @1723 if s1 != a3
      :                          @1727
 23086: 7b 9b                    u64 [a2] = a4
 23088: c9 c8 06                 s1 = a1 - a5
 23091: 64 67                    a0 = s1
 23093: 82 18 18                 a1 = u64 [sp + 0x18]
 23096: 64 59                    a2 = s0
 23098: 50 20 dc 01 f2 ae 02     ra = 476, jump @13621
      :                          @1728 [@dyn 238]
 23105: 82 14 10                 t2 = u64 [sp + 0x10]
 23108: 82 17 28                 a0 = u64 [sp + 0x28]
 23111: 82 18 20                 a1 = u64 [sp + 0x20]
 23114: 7b 78 18                 u64 [a0 + 0x18] = a1
 23117: 7b 76 20                 u64 [a0 + 0x20] = s1
 23120: 7b 78 28                 u64 [a0 + 0x28] = a1
 23123: 33 07 c0 22 03           a0 = 0x322c0
 23128: 33 03 c0 22 03           t1 = 0x322c0
 23133: 33 02 00 00 01           t0 = 0x10000
 23138: c8 23 09                 a2 = t1 + t0
 23141: 01                       fallthrough
      :                          @1729
 23142: 82 9a                    a3 = u64 [a2]
 23144: c8 5a 0b                 a4 = a3 + s0
 23147: ac ab 3a 03              jump @1773 if a4 <u a3
      :                          @1730
 23151: c8 4b 08                 a1 = a4 + t2
 23154: d8 b8 0c                 a5 = a1 <u a4
 23157: d8 82 08                 a1 = t0 <u a1
 23160: d4 c8 08                 a1 = a1 | a5
 23163: 52 08 2a 03              jump @1773 if a1 != 0
      :                          @1731
 23167: c9 b3 08                 a1 = t1 - a4
 23170: c8 28 08                 a1 = a1 + t0
 23173: 84 8c 07                 a5 = a1 & 0x7
 23176: c8 cb 0b                 a4 = a4 + a5
 23179: 01                       fallthrough
      :                          @1732
 23180: 82 96                    s1 = u64 [a2]
 23182: ab a6 d8                 jump @1729 if s1 != a3
      :                          @1733
 23185: 7b 9b                    u64 [a2] = a4
 23187: c9 c8 06                 s1 = a1 - a5
 23190: 64 67                    a0 = s1
 23192: 82 18 18                 a1 = u64 [sp + 0x18]
 23195: 64 59                    a2 = s0
 23197: 50 20 de 01 8f ae 02     ra = 478, jump @13621
      :                          @1734 [@dyn 239]
 23204: 82 14 10                 t2 = u64 [sp + 0x10]
 23207: 82 17 28                 a0 = u64 [sp + 0x28]
 23210: 82 18 20                 a1 = u64 [sp + 0x20]
 23213: 7b 78 30                 u64 [a0 + 0x30] = a1
 23216: 7b 76 38                 u64 [a0 + 0x38] = s1
 23219: 7b 78 40                 u64 [a0 + 0x40] = a1
 23222: 33 07 c0 22 03           a0 = 0x322c0
 23227: 33 03 c0 22 03           t1 = 0x322c0
 23232: 33 02 00 00 01           t0 = 0x10000
 23237: c8 23 09                 a2 = t1 + t0
 23240: 01                       fallthrough
      :                          @1735
 23241: 82 9a                    a3 = u64 [a2]
 23243: c8 5a 0b                 a4 = a3 + s0
 23246: ac ab d7 02              jump @1773 if a4 <u a3
      :                          @1736
 23250: c8 4b 08                 a1 = a4 + t2
 23253: d8 b8 0c                 a5 = a1 <u a4
 23256: d8 82 08                 a1 = t0 <u a1
 23259: d4 c8 08                 a1 = a1 | a5
 23262: 52 08 c7 02              jump @1773 if a1 != 0
      :                          @1737
 23266: c9 b3 08                 a1 = t1 - a4
 23269: c8 28 08                 a1 = a1 + t0
 23272: 84 8c 07                 a5 = a1 & 0x7
 23275: c8 cb 0b                 a4 = a4 + a5
 23278: 01                       fallthrough
      :                          @1738
 23279: 82 96                    s1 = u64 [a2]
 23281: ab a6 d8                 jump @1735 if s1 != a3
      :                          @1739
 23284: 7b 9b                    u64 [a2] = a4
 23286: c9 c8 06                 s1 = a1 - a5
 23289: 64 67                    a0 = s1
 23291: 82 18 18                 a1 = u64 [sp + 0x18]
 23294: 64 59                    a2 = s0
 23296: 50 20 e0 01 2c ae 02     ra = 480, jump @13621
      :                          @1740 [@dyn 240]
 23303: 82 14 10                 t2 = u64 [sp + 0x10]
 23306: 82 17 28                 a0 = u64 [sp + 0x28]
 23309: 82 18 20                 a1 = u64 [sp + 0x20]
 23312: 7b 78 48                 u64 [a0 + 0x48] = a1
 23315: 7b 76 50                 u64 [a0 + 0x50] = s1
 23318: 7b 78 58                 u64 [a0 + 0x58] = a1
 23321: 33 07 c0 22 03           a0 = 0x322c0
 23326: 33 03 c0 22 03           t1 = 0x322c0
 23331: 33 02 00 00 01           t0 = 0x10000
 23336: c8 23 09                 a2 = t1 + t0
 23339: 01                       fallthrough
      :                          @1741
 23340: 82 9a                    a3 = u64 [a2]
 23342: c8 5a 0b                 a4 = a3 + s0
 23345: ac ab 74 02              jump @1773 if a4 <u a3
      :                          @1742
 23349: c8 4b 08                 a1 = a4 + t2
 23352: d8 b8 0c                 a5 = a1 <u a4
 23355: d8 82 08                 a1 = t0 <u a1
 23358: d4 c8 08                 a1 = a1 | a5
 23361: 52 08 64 02              jump @1773 if a1 != 0
      :                          @1743
 23365: c9 b3 08                 a1 = t1 - a4
 23368: c8 28 08                 a1 = a1 + t0
 23371: 84 8c 07                 a5 = a1 & 0x7
 23374: c8 cb 0b                 a4 = a4 + a5
 23377: 01                       fallthrough
      :                          @1744
 23378: 82 96                    s1 = u64 [a2]
 23380: ab a6 d8                 jump @1741 if s1 != a3
      :                          @1745
 23383: 7b 9b                    u64 [a2] = a4
 23385: c9 c8 06                 s1 = a1 - a5
 23388: 64 67                    a0 = s1
 23390: 82 18 18                 a1 = u64 [sp + 0x18]
 23393: 64 59                    a2 = s0
 23395: 50 20 e2 01 c9 ad 02     ra = 482, jump @13621
      :                          @1746 [@dyn 241]
 23402: 82 14 10                 t2 = u64 [sp + 0x10]
 23405: 82 17 28                 a0 = u64 [sp + 0x28]
 23408: 82 18 20                 a1 = u64 [sp + 0x20]
 23411: 7b 78 60                 u64 [a0 + 0x60] = a1
 23414: 7b 76 68                 u64 [a0 + 0x68] = s1
 23417: 7b 78 70                 u64 [a0 + 0x70] = a1
 23420: 33 07 c0 22 03           a0 = 0x322c0
 23425: 33 03 c0 22 03           t1 = 0x322c0
 23430: 33 02 00 00 01           t0 = 0x10000
 23435: c8 23 09                 a2 = t1 + t0
 23438: 01                       fallthrough
      :                          @1747
 23439: 82 9a                    a3 = u64 [a2]
 23441: c8 5a 0b                 a4 = a3 + s0
 23444: ac ab 11 02              jump @1773 if a4 <u a3
      :                          @1748
 23448: c8 4b 08                 a1 = a4 + t2
 23451: d8 b8 0c                 a5 = a1 <u a4
 23454: d8 82 08                 a1 = t0 <u a1
 23457: d4 c8 08                 a1 = a1 | a5
 23460: 52 08 01 02              jump @1773 if a1 != 0
      :                          @1749
 23464: c9 b3 08                 a1 = t1 - a4
 23467: c8 28 08                 a1 = a1 + t0
 23470: 84 8c 07                 a5 = a1 & 0x7
 23473: c8 cb 0b                 a4 = a4 + a5
 23476: 01                       fallthrough
      :                          @1750
 23477: 82 96                    s1 = u64 [a2]
 23479: ab a6 d8                 jump @1747 if s1 != a3
      :                          @1751
 23482: 7b 9b                    u64 [a2] = a4
 23484: c9 c8 06                 s1 = a1 - a5
 23487: 64 67                    a0 = s1
 23489: 82 18 18                 a1 = u64 [sp + 0x18]
 23492: 64 59                    a2 = s0
 23494: 50 20 e4 01 66 ad 02     ra = 484, jump @13621
      :                          @1752 [@dyn 242]
 23501: 82 14 10                 t2 = u64 [sp + 0x10]
 23504: 82 17 28                 a0 = u64 [sp + 0x28]
 23507: 82 18 20                 a1 = u64 [sp + 0x20]
 23510: 7b 78 78                 u64 [a0 + 0x78] = a1
 23513: 7b 76 80 00              u64 [a0 + 0x80] = s1
 23517: 7b 78 88 00              u64 [a0 + 0x88] = a1
 23521: 33 07 c0 22 03           a0 = 0x322c0
 23526: 33 03 c0 22 03           t1 = 0x322c0
 23531: 33 02 00 00 01           t0 = 0x10000
 23536: c8 23 09                 a2 = t1 + t0
 23539: 01                       fallthrough
      :                          @1753
 23540: 82 9a                    a3 = u64 [a2]
 23542: c8 5a 0b                 a4 = a3 + s0
 23545: ac ab ac 01              jump @1773 if a4 <u a3
      :                          @1754
 23549: c8 4b 08                 a1 = a4 + t2
 23552: d8 b8 0c                 a5 = a1 <u a4
 23555: d8 82 08                 a1 = t0 <u a1
 23558: d4 c8 08                 a1 = a1 | a5
 23561: 52 08 9c 01              jump @1773 if a1 != 0
      :                          @1755
 23565: c9 b3 08                 a1 = t1 - a4
 23568: c8 28 08                 a1 = a1 + t0
 23571: 84 8c 07                 a5 = a1 & 0x7
 23574: c8 cb 0b                 a4 = a4 + a5
 23577: 01                       fallthrough
      :                          @1756
 23578: 82 96                    s1 = u64 [a2]
 23580: ab a6 d8                 jump @1753 if s1 != a3
      :                          @1757
 23583: 7b 9b                    u64 [a2] = a4
 23585: c9 c8 06                 s1 = a1 - a5
 23588: 64 67                    a0 = s1
 23590: 82 18 18                 a1 = u64 [sp + 0x18]
 23593: 64 59                    a2 = s0
 23595: 50 20 e6 01 01 ad 02     ra = 486, jump @13621
      :                          @1758 [@dyn 243]
 23602: 82 14 10                 t2 = u64 [sp + 0x10]
 23605: 82 17 28                 a0 = u64 [sp + 0x28]
 23608: 82 18 20                 a1 = u64 [sp + 0x20]
 23611: 7b 78 90 00              u64 [a0 + 0x90] = a1
 23615: 7b 76 98 00              u64 [a0 + 0x98] = s1
 23619: 7b 78 a0 00              u64 [a0 + 0xa0] = a1
 23623: 33 07 c0 22 03           a0 = 0x322c0
 23628: 33 03 c0 22 03           t1 = 0x322c0
 23633: 33 02 00 00 01           t0 = 0x10000
 23638: c8 23 09                 a2 = t1 + t0
 23641: 01                       fallthrough
      :                          @1759
 23642: 82 9a                    a3 = u64 [a2]
 23644: c8 5a 0b                 a4 = a3 + s0
 23647: ac ab 46 01              jump @1773 if a4 <u a3
      :                          @1760
 23651: c8 4b 08                 a1 = a4 + t2
 23654: d8 b8 0c                 a5 = a1 <u a4
 23657: d8 82 08                 a1 = t0 <u a1
 23660: d4 c8 08                 a1 = a1 | a5
 23663: 52 08 36 01              jump @1773 if a1 != 0
      :                          @1761
 23667: c9 b3 08                 a1 = t1 - a4
 23670: c8 28 08                 a1 = a1 + t0
 23673: 84 8c 07                 a5 = a1 & 0x7
 23676: c8 cb 0b                 a4 = a4 + a5
 23679: 01                       fallthrough
      :                          @1762
 23680: 82 96                    s1 = u64 [a2]
 23682: ab a6 d8                 jump @1759 if s1 != a3
      :                          @1763
 23685: 7b 9b                    u64 [a2] = a4
 23687: c9 c8 06                 s1 = a1 - a5
 23690: 64 67                    a0 = s1
 23692: 82 18 18                 a1 = u64 [sp + 0x18]
 23695: 64 59                    a2 = s0
 23697: 50 20 e8 01 9b ac 02     ra = 488, jump @13621
      :                          @1764 [@dyn 244]
 23704: 82 14 10                 t2 = u64 [sp + 0x10]
 23707: 82 17 28                 a0 = u64 [sp + 0x28]
 23710: 82 18 20                 a1 = u64 [sp + 0x20]
 23713: 7b 78 a8 00              u64 [a0 + 0xa8] = a1
 23717: 7b 76 b0 00              u64 [a0 + 0xb0] = s1
 23721: 7b 78 b8 00              u64 [a0 + 0xb8] = a1
 23725: 33 07 c0 22 03           a0 = 0x322c0
 23730: 33 03 c0 22 03           t1 = 0x322c0
 23735: 33 02 00 00 01           t0 = 0x10000
 23740: c8 23 09                 a2 = t1 + t0
 23743: 01                       fallthrough
      :                          @1765
 23744: 82 9a                    a3 = u64 [a2]
 23746: c8 5a 0b                 a4 = a3 + s0
 23749: ac ab e0 00              jump @1773 if a4 <u a3
      :                          @1766
 23753: c8 4b 08                 a1 = a4 + t2
 23756: d8 b8 0c                 a5 = a1 <u a4
 23759: d8 82 08                 a1 = t0 <u a1
 23762: d4 c8 08                 a1 = a1 | a5
 23765: 52 08 d0 00              jump @1773 if a1 != 0
      :                          @1767
 23769: c9 b3 08                 a1 = t1 - a4
 23772: c8 28 08                 a1 = a1 + t0
 23775: 84 8c 07                 a5 = a1 & 0x7
 23778: c8 cb 0b                 a4 = a4 + a5
 23781: 01                       fallthrough
      :                          @1768
 23782: 82 96                    s1 = u64 [a2]
 23784: ab a6 d8                 jump @1765 if s1 != a3
      :                          @1769
 23787: 7b 9b                    u64 [a2] = a4
 23789: c9 c8 06                 s1 = a1 - a5
 23792: 64 67                    a0 = s1
 23794: 82 18 18                 a1 = u64 [sp + 0x18]
 23797: 64 59                    a2 = s0
 23799: 50 20 ea 01 35 ac 02     ra = 490, jump @13621
      :                          @1770 [@dyn 245]
 23806: 82 1b 28                 a4 = u64 [sp + 0x28]
 23809: 82 15 20                 s0 = u64 [sp + 0x20]
 23812: 7b b5 c0 00              u64 [a4 + 0xc0] = s0
 23816: 7b b6 c8 00              u64 [a4 + 0xc8] = s1
 23820: 82 17                    a0 = u64 [sp]
 23822: 82 19 08                 a2 = u64 [sp + 0x8]
 23825: 28 63                    jump @1772
      :                          @1771
 23827: 49 0b                    u64 [a4 + 0] = 0
 23829: 49 1b 08 08              u64 [a4 + 8] = 0x8
 23833: 49 1b 10                 u64 [a4 + 16] = 0
 23836: 49 1b 18                 u64 [a4 + 24] = 0
 23839: 49 1b 20 08              u64 [a4 + 32] = 0x8
 23843: 49 1b 28                 u64 [a4 + 40] = 0
 23846: 49 1b 30                 u64 [a4 + 48] = 0
 23849: 49 1b 38 08              u64 [a4 + 56] = 0x8
 23853: 49 1b 40                 u64 [a4 + 64] = 0
 23856: 49 1b 48                 u64 [a4 + 72] = 0
 23859: 49 1b 50 08              u64 [a4 + 80] = 0x8
 23863: 49 1b 58                 u64 [a4 + 88] = 0
 23866: 49 1b 60                 u64 [a4 + 96] = 0
 23869: 49 1b 68 08              u64 [a4 + 104] = 0x8
 23873: 49 1b 70                 u64 [a4 + 112] = 0
 23876: 49 1b 78                 u64 [a4 + 120] = 0
 23879: 49 2b 80 00 08           u64 [a4 + 128] = 0x8
 23884: 49 2b 90 00              u64 [a4 + 144] = 0
 23888: 49 2b 88 00              u64 [a4 + 136] = 0
 23892: 49 2b 98 00 08           u64 [a4 + 152] = 0x8
 23897: 49 2b a8 00              u64 [a4 + 168] = 0
 23901: 49 2b a0 00              u64 [a4 + 160] = 0
 23905: 49 2b b0 00 08           u64 [a4 + 176] = 0x8
 23910: 49 2b c0 00              u64 [a4 + 192] = 0
 23914: 49 2b b8 00              u64 [a4 + 184] = 0
 23918: 49 2b c8 00 08           u64 [a4 + 200] = 0x8
 23923: 01                       fallthrough
      :                          @1772
 23924: 82 9a                    a3 = u64 [a2]
 23926: 82 98 08                 a1 = u64 [a2 + 0x8]
 23929: 82 99 10                 a2 = u64 [a2 + 0x10]
 23932: 7b b5 d0 00              u64 [a4 + 0xd0] = s0
 23936: 7b ba d8 00              u64 [a4 + 0xd8] = a3
 23940: 7b b8 e0 00              u64 [a4 + 0xe0] = a1
 23944: 7b b9 e8 00              u64 [a4 + 0xe8] = a2
 23948: 33 08 0a                 a1 = 0xa
 23951: 7b 78                    u64 [a0] = a1
 23953: 7b 7b 08                 u64 [a0 + 0x8] = a4
 23956: 7b 78 10                 u64 [a0 + 0x10] = a1
 23959: 82 10 40                 ra = u64 [sp + 0x40]
 23962: 82 15 38                 s0 = u64 [sp + 0x38]
 23965: 82 16 30                 s1 = u64 [sp + 0x30]
 23968: 95 11 48                 sp = sp + 0x48
 23971: 32 00                    ret
      :                          @1773
 23973: 00                       trap
      :                          @1774
 23974: 00                       trap
      :                          @1775
 23975: 00                       trap
      :                          @1776
 23976: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 23979: 7b 10 18                 u64 [sp + 0x18] = ra
 23982: 7b 15 10                 u64 [sp + 0x10] = s0
 23985: 7b 16 08                 u64 [sp + 0x8] = s1
 23988: 64 85                    s0 = a1
 23990: 7b 17                    u64 [sp] = a0
 23992: 33 09 c0 22 03           a2 = 0x322c0
 23997: 33 07 00 00 01           a0 = 0x10000
 24002: c8 79 09                 a2 = a2 + a0
 24005: 01                       fallthrough
      :                          @1777
 24006: 82 9a                    a3 = u64 [a2]
 24008: c8 5a 08                 a1 = a3 + s0
 24011: ac a8 48                 jump @1782 if a1 <u a3
      :                          @1778
 24014: 95 8b 01                 a4 = a1 + 0x1
 24017: 88 bc 01                 a5 = a4 <u 0x1
 24020: d8 b7 0b                 a4 = a0 <u a4
 24023: d4 cb 0b                 a4 = a4 | a5
 24026: 52 0b 39                 jump @1782 if a4 != 0
      :                          @1779
 24029: 82 9b                    a4 = u64 [a2]
 24031: ab ab e7                 jump @1777 if a4 != a3
      :                          @1780
 24034: 7b 98                    u64 [a2] = a1
 24036: 33 0c                    a5 = 0
 24038: 33 06 c0 22 04           s1 = 0x422c0
 24043: c9 86 06                 s1 = s1 - a1
 24046: 64 67                    a0 = s1
 24048: 33 08                    a1 = 0
 24050: 64 59                    a2 = s0
 24052: 50 20 ec 01 65 ad 02     ra = 492, jump @13675
      :                          @1781 [@dyn 246]
 24059: 82 17                    a0 = u64 [sp]
 24061: 7b 75                    u64 [a0] = s0
 24063: 7b 76 08                 u64 [a0 + 0x8] = s1
 24066: 7b 75 10                 u64 [a0 + 0x10] = s0
 24069: 82 10 18                 ra = u64 [sp + 0x18]
 24072: 82 15 10                 s0 = u64 [sp + 0x10]
 24075: 82 16 08                 s1 = u64 [sp + 0x8]
 24078: 95 11 20                 sp = sp + 0x20
 24081: 32 00                    ret
      :                          @1782
 24083: 00                       trap
      :                          @1783
 24084: 95 11 90                 sp = sp + 0xffffffffffffff90
 24087: 7b 10 68                 u64 [sp + 0x68] = ra
 24090: 7b 15 60                 u64 [sp + 0x60] = s0
 24093: 7b 16 58                 u64 [sp + 0x58] = s1
 24096: 64 70                    ra = a0
 24098: 51 09 27 01              jump @1803 if a2 == 0
      :                          @1784
 24102: 7b 18 10                 u64 [sp + 0x10] = a1
 24105: 3a 07 20 10 03           a0 = u64 [0x31020]
 24110: ae 79 a3 01              jump @1818 if a2 >=u a0
      :                          @1785
 24114: d8 79 02                 t0 = a2 <u a0
 24117: 7b 19 30                 u64 [sp + 0x30] = a2
 24120: 96 97 18                 a0 = a2 * 0x18
 24123: 97 22 03                 t0 = t0 << 0x3
 24126: 33 04 c0 22 03           t2 = 0x322c0
 24131: 33 03 00 00 01           t1 = 0x10000
 24136: c8 34 0b                 a4 = t2 + t1
 24139: 01                       fallthrough
      :                          @1786
 24140: 82 b6                    s1 = u64 [a4]
 24142: c8 76 0c                 a5 = s1 + a0
 24145: ac 6c 7f 01              jump @1817 if a5 <u s1
      :                          @1787
 24149: c8 2c 0a                 a3 = a5 + t0
 24152: d8 ca 05                 s0 = a3 <u a5
 24155: d8 a3 0a                 a3 = t1 <u a3
 24158: d4 5a 0a                 a3 = a3 | s0
 24161: 52 0a 6f 01              jump @1817 if a3 != 0
      :                          @1788
 24165: c9 c4 05                 s0 = t2 - a5
 24168: c8 35 05                 s0 = s0 + t1
 24171: 84 5a 07                 a3 = s0 & 0x7
 24174: c8 ac 0c                 a5 = a5 + a3
 24177: 01                       fallthrough
      :                          @1789
 24178: 82 b8                    a1 = u64 [a4]
 24180: ab 68 d8                 jump @1786 if a1 != s1
      :                          @1790
 24183: 7b bc                    u64 [a4] = a5
 24185: 01                       fallthrough
      :                          @1791
 24186: c9 a5 0c                 a5 = s0 - a3
 24189: 33 07 01                 a0 = 0x1
 24192: 64 c2                    t0 = a5
 24194: 82 19 30                 a2 = u64 [sp + 0x30]
 24197: 82 1a 10                 a3 = u64 [sp + 0x10]
 24200: 53 19 02 21 01           jump @1815 if a2 <u 2
      :                          @1792
 24205: 82 a3 10                 t1 = u64 [a3 + 0x10]
 24208: 51 03 fc 00              jump @1812 if t1 == 0
      :                          @1793
 24212: 7b 10 08                 u64 [sp + 0x8] = ra
 24215: 98 37 3c                 a0 = t1 >> 0x3c
 24218: 52 07 37 01              jump @1818 if a0 != 0
      :                          @1794
 24222: 82 a8 08                 a1 = u64 [a3 + 0x8]
 24225: 7b 18 20                 u64 [sp + 0x20] = a1
 24228: 88 77 01                 a0 = a0 <u 0x1
 24231: 97 36 03                 s1 = t1 << 0x3
 24234: 97 74 03                 t2 = a0 << 0x3
 24237: 33 05 c0 22 03           s0 = 0x322c0
 24242: 7b 15 50                 u64 [sp + 0x50] = s0
 24245: 95 55 00 00 01           s0 = s0 + 0x10000
 24250: 7b 1c                    u64 [sp] = a5
 24252: 64 c2                    t0 = a5
 24254: 7b 13 28                 u64 [sp + 0x28] = t1
 24257: 7b 14 18                 u64 [sp + 0x18] = t2
 24260: 33 00 02                 ra = 0x2
 24263: 28 06                    jump @1796
      :                          @1795
 24265: 95 00 01                 ra = ra + 0x1
 24268: 01                       fallthrough
      :                          @1796
 24269: 82 57                    a0 = u64 [s0]
 24271: c8 67 08                 a1 = a0 + s1
 24274: ac 78 03 b9 02           jump @13923 if a1 <u a0
      :                          @1797
 24279: c8 48 09                 a2 = a1 + t2
 24282: d8 89 0a                 a3 = a2 <u a1
 24285: 8e 99 00 00 01           a2 = a2 >u 0x10000
 24290: d4 a9 09                 a2 = a2 | a3
 24293: 52 09 f0 b8 02           jump @13923 if a2 != 0
      :                          @1798
 24298: 82 19 50                 a2 = u64 [sp + 0x50]
 24301: c9 89 09                 a2 = a2 - a1
 24304: 95 99 00 00 01           a2 = a2 + 0x10000
 24309: 84 9a 07                 a3 = a2 & 0x7
 24312: c8 a8 08                 a1 = a1 + a3
 24315: 01                       fallthrough
      :                          @1799
 24316: 82 5b                    a4 = u64 [s0]
 24318: ab 7b cf                 jump @1796 if a4 != a0
      :                          @1800
 24321: 7b 58                    u64 [s0] = a1
 24323: 33 0c                    a5 = 0
 24325: c9 a9 07                 a0 = a2 - a3
 24328: 7b 17 38                 u64 [sp + 0x38] = a0
 24331: 82 18 20                 a1 = u64 [sp + 0x20]
 24334: 64 69                    a2 = s1
 24336: 7b 12 48                 u64 [sp + 0x48] = t0
 24339: 7b 10 40                 u64 [sp + 0x40] = ra
 24342: 50 20 ee 01 16 aa 02     ra = 494, jump @13621
      :                          @1801 [@dyn 247]
 24349: 82 10 40                 ra = u64 [sp + 0x40]
 24352: 82 14 18                 t2 = u64 [sp + 0x18]
 24355: 82 13 28                 t1 = u64 [sp + 0x28]
 24358: 82 12 48                 t0 = u64 [sp + 0x48]
 24361: 82 19 30                 a2 = u64 [sp + 0x30]
 24364: 7b 23                    u64 [t0] = t1
 24366: 82 17 38                 a0 = u64 [sp + 0x38]
 24369: 7b 27 08                 u64 [t0 + 0x8] = a0
 24372: 7b 23 10                 u64 [t0 + 0x10] = t1
 24375: 95 22 18                 t0 = t0 + 0x18
 24378: ab 90 8f                 jump @1795 if ra != a2
      :                          @1802
 24381: 64 97                    a0 = a2
 24383: 82 10 08                 ra = u64 [sp + 0x8]
 24386: 82 1c                    a5 = u64 [sp]
 24388: 82 1a 10                 a3 = u64 [sp + 0x10]
 24391: 28 62                    jump @1815
      :                          @1803
 24393: 82 8a                    a3 = u64 [a1]
 24395: 33 0c 08                 a5 = 0x8
 24398: 51 0a 08                 jump @1805 if a3 == 0
      :                          @1804
 24401: 54 2a 00 20 09           jump @1806 if a3 <=u 8192
      :                          @1805
 24406: 33 07                    a0 = 0
 24408: 28 62                    jump @1816
      :                          @1806
 24410: 82 87 08                 a0 = u64 [a1 + 0x8]
 24413: 97 a8 03                 a1 = a3 << 0x3
 24416: 33 05 c0 22 03           s0 = 0x322c0
 24421: 95 55 00 00 01           s0 = s0 + 0x10000
 24426: 01                       fallthrough
      :                          @1807
 24427: 82 5a                    a3 = u64 [s0]
 24429: c9 a5 0b                 a4 = s0 - a3
 24432: ab 7b 15                 jump @1811 if a4 != a0
      :                          @1808
 24435: c9 8a 0b                 a4 = a3 - a1
 24438: 01                       fallthrough
      :                          @1809
 24439: 82 5c                    a5 = u64 [s0]
 24441: ab ac f2                 jump @1807 if a5 != a3
      :                          @1810
 24444: 7b 5b                    u64 [s0] = a4
 24446: 33 07                    a0 = 0
 24448: 33 0c 08                 a5 = 0x8
 24451: 28 37                    jump @1816
      :                          @1811
 24453: 33 07                    a0 = 0
 24455: 33 0c 08                 a5 = 0x8
 24458: 28 30                    jump @1816
      :                          @1812
 24460: 95 97 ff                 a0 = a2 + 0xffffffffffffffff
 24463: 33 08 08                 a1 = 0x8
 24466: 64 c2                    t0 = a5
 24468: 01                       fallthrough
      :                          @1813
 24469: 49 02                    u64 [t0 + 0] = 0
 24471: 7b 28 08                 u64 [t0 + 0x8] = a1
 24474: 49 12 10                 u64 [t0 + 16] = 0
 24477: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 24480: 95 22 18                 t0 = t0 + 0x18
 24483: 52 07 f2                 jump @1813 if a0 != 0
      :                          @1814
 24486: 64 97                    a0 = a2
 24488: 01                       fallthrough
      :                          @1815
 24489: 82 a8 10                 a1 = u64 [a3 + 0x10]
 24492: 82 ab 08                 a4 = u64 [a3 + 0x8]
 24495: 82 aa                    a3 = u64 [a3]
 24497: 7b 28 10                 u64 [t0 + 0x10] = a1
 24500: 7b 2b 08                 u64 [t0 + 0x8] = a4
 24503: 7b 2a                    u64 [t0] = a3
 24505: 01                       fallthrough
      :                          @1816
 24506: 7b 09                    u64 [ra] = a2
 24508: 7b 0c 08                 u64 [ra + 0x8] = a5
 24511: 7b 07 10                 u64 [ra + 0x10] = a0
 24514: 82 10 68                 ra = u64 [sp + 0x68]
 24517: 82 15 60                 s0 = u64 [sp + 0x60]
 24520: 82 16 58                 s1 = u64 [sp + 0x58]
 24523: 95 11 70                 sp = sp + 0x70
 24526: 32 00                    ret
      :                          @1817
 24528: 00                       trap
      :                          @1818
 24529: 00                       trap
      :                          @1819
 24530: 82 9a                    a3 = u64 [a2]
 24532: 95 ab f0 00              a4 = a3 + 0xf0
 24536: ac ab 0f 04              jump @1875 if a4 <u a3
      :                          @1820
 24540: 95 b8 08                 a1 = a4 + 0x8
 24543: d8 b8 0c                 a5 = a1 <u a4
 24546: d8 82 08                 a1 = t0 <u a1
 24549: d4 c8 08                 a1 = a1 | a5
 24552: 52 08 ff 03              jump @1875 if a1 != 0
      :                          @1821
 24556: c9 b7 08                 a1 = a0 - a4
 24559: c8 28 08                 a1 = a1 + t0
 24562: 84 8c 07                 a5 = a1 & 0x7
 24565: c8 cb 0b                 a4 = a4 + a5
 24568: 01                       fallthrough
      :                          @1822
 24569: 82 95                    s0 = u64 [a2]
 24571: ab a5 d7                 jump @1819 if s0 != a3
      :                          @1823
 24574: 7b 9b                    u64 [a2] = a4
 24576: 01                       fallthrough
      :                          @1824
 24577: 82 19 18                 a2 = u64 [sp + 0x18]
 24580: 82 95 10                 s0 = u64 [a2 + 0x10]
 24583: c9 c8 0b                 a4 = a1 - a5
 24586: 51 05 47 03              jump @1872 if s0 == 0
      :                          @1825
 24590: 57 05 da 03              jump @1876 if s0 <s 0
      :                          @1826
 24594: 7b 1b 28                 u64 [sp + 0x28] = a4
 24597: 82 97 08                 a0 = u64 [a2 + 0x8]
 24600: 7b 17 20                 u64 [sp + 0x20] = a0
 24603: 85 56 ff                 s1 = s0 ^ 0xffffffffffffffff
 24606: 98 66 3f                 s1 = s1 >> 0x3f
 24609: 33 09 c0 22 03           a2 = 0x322c0
 24614: 33 08 00 00 01           a1 = 0x10000
 24619: c8 89 09                 a2 = a2 + a1
 24622: 01                       fallthrough
      :                          @1827
 24623: 82 9a                    a3 = u64 [a2]
 24625: c8 5a 07                 a0 = a3 + s0
 24628: ac a7 b2 03              jump @1874 if a0 <u a3
      :                          @1828
 24632: c8 67 0b                 a4 = a0 + s1
 24635: d8 7b 0c                 a5 = a4 <u a0
 24638: d8 b8 0b                 a4 = a1 <u a4
 24641: d4 cb 0b                 a4 = a4 | a5
 24644: 52 0b a2 03              jump @1874 if a4 != 0
      :                          @1829
 24648: 82 9b                    a4 = u64 [a2]
 24650: ab ab e5                 jump @1827 if a4 != a3
      :                          @1830
 24653: 7b 97                    u64 [a2] = a0
 24655: 33 0c                    a5 = 0
 24657: 33 09 c0 22 03           a2 = 0x322c0
 24662: 7b 19 08                 u64 [sp + 0x8] = a2
 24665: 95 98 00 00 01           a1 = a2 + 0x10000
 24670: c9 78 07                 a0 = a1 - a0
 24673: 7b 17                    u64 [sp] = a0
 24675: 82 18 20                 a1 = u64 [sp + 0x20]
 24678: 64 59                    a2 = s0
 24680: 50 20 f0 01 c4 a8 02     ra = 496, jump @13621
      :                          @1831 [@dyn 248]
 24687: 33 0c 00 00 01           a5 = 0x10000
 24692: 82 17 28                 a0 = u64 [sp + 0x28]
 24695: 7b 75                    u64 [a0] = s0
 24697: 82 18                    a1 = u64 [sp]
 24699: 7b 78 08                 u64 [a0 + 0x8] = a1
 24702: 7b 75 10                 u64 [a0 + 0x10] = s0
 24705: 82 18 08                 a1 = u64 [sp + 0x8]
 24708: c8 c8 08                 a1 = a1 + a5
 24711: 01                       fallthrough
      :                          @1832
 24712: 82 89                    a2 = u64 [a1]
 24714: c8 59 07                 a0 = a2 + s0
 24717: ac 97 59 03              jump @1874 if a0 <u a2
      :                          @1833
 24721: c8 67 0a                 a3 = a0 + s1
 24724: d8 7a 0b                 a4 = a3 <u a0
 24727: d8 ac 0a                 a3 = a5 <u a3
 24730: d4 ba 0a                 a3 = a3 | a4
 24733: 52 0a 49 03              jump @1874 if a3 != 0
      :                          @1834
 24737: 82 8a                    a3 = u64 [a1]
 24739: ab 9a e5                 jump @1832 if a3 != a2
      :                          @1835
 24742: 7b 87                    u64 [a1] = a0
 24744: 33 0b                    a4 = 0
 24746: 33 09 c0 22 03           a2 = 0x322c0
 24751: 7b 19 08                 u64 [sp + 0x8] = a2
 24754: 95 98 00 00 01           a1 = a2 + 0x10000
 24759: c9 78 07                 a0 = a1 - a0
 24762: 7b 17                    u64 [sp] = a0
 24764: 82 18 20                 a1 = u64 [sp + 0x20]
 24767: 64 59                    a2 = s0
 24769: 50 20 f2 01 6b a8 02     ra = 498, jump @13621
      :                          @1836 [@dyn 249]
 24776: 33 0c 00 00 01           a5 = 0x10000
 24781: 82 17 28                 a0 = u64 [sp + 0x28]
 24784: 7b 75 18                 u64 [a0 + 0x18] = s0
 24787: 82 18                    a1 = u64 [sp]
 24789: 7b 78 20                 u64 [a0 + 0x20] = a1
 24792: 7b 75 28                 u64 [a0 + 0x28] = s0
 24795: 82 18 08                 a1 = u64 [sp + 0x8]
 24798: c8 c8 08                 a1 = a1 + a5
 24801: 01                       fallthrough
      :                          @1837
 24802: 82 89                    a2 = u64 [a1]
 24804: c8 59 07                 a0 = a2 + s0
 24807: ac 97 ff 02              jump @1874 if a0 <u a2
      :                          @1838
 24811: c8 67 0a                 a3 = a0 + s1
 24814: d8 7a 0b                 a4 = a3 <u a0
 24817: d8 ac 0a                 a3 = a5 <u a3
 24820: d4 ba 0a                 a3 = a3 | a4
 24823: 52 0a ef 02              jump @1874 if a3 != 0
      :                          @1839
 24827: 82 8a                    a3 = u64 [a1]
 24829: ab 9a e5                 jump @1837 if a3 != a2
      :                          @1840
 24832: 7b 87                    u64 [a1] = a0
 24834: 33 0b                    a4 = 0
 24836: 33 09 c0 22 03           a2 = 0x322c0
 24841: 7b 19 08                 u64 [sp + 0x8] = a2
 24844: 95 98 00 00 01           a1 = a2 + 0x10000
 24849: c9 78 07                 a0 = a1 - a0
 24852: 7b 17                    u64 [sp] = a0
 24854: 82 18 20                 a1 = u64 [sp + 0x20]
 24857: 64 59                    a2 = s0
 24859: 50 20 f4 01 11 a8 02     ra = 500, jump @13621
      :                          @1841 [@dyn 250]
 24866: 33 0c 00 00 01           a5 = 0x10000
 24871: 82 17 28                 a0 = u64 [sp + 0x28]
 24874: 7b 75 30                 u64 [a0 + 0x30] = s0
 24877: 82 18                    a1 = u64 [sp]
 24879: 7b 78 38                 u64 [a0 + 0x38] = a1
 24882: 7b 75 40                 u64 [a0 + 0x40] = s0
 24885: 82 18 08                 a1 = u64 [sp + 0x8]
 24888: c8 c8 08                 a1 = a1 + a5
 24891: 01                       fallthrough
      :                          @1842
 24892: 82 89                    a2 = u64 [a1]
 24894: c8 59 07                 a0 = a2 + s0
 24897: ac 97 a5 02              jump @1874 if a0 <u a2
      :                          @1843
 24901: c8 67 0a                 a3 = a0 + s1
 24904: d8 7a 0b                 a4 = a3 <u a0
 24907: d8 ac 0a                 a3 = a5 <u a3
 24910: d4 ba 0a                 a3 = a3 | a4
 24913: 52 0a 95 02              jump @1874 if a3 != 0
      :                          @1844
 24917: 82 8a                    a3 = u64 [a1]
 24919: ab 9a e5                 jump @1842 if a3 != a2
      :                          @1845
 24922: 7b 87                    u64 [a1] = a0
 24924: 33 0b                    a4 = 0
 24926: 33 09 c0 22 03           a2 = 0x322c0
 24931: 7b 19 08                 u64 [sp + 0x8] = a2
 24934: 95 98 00 00 01           a1 = a2 + 0x10000
 24939: c9 78 07                 a0 = a1 - a0
 24942: 7b 17                    u64 [sp] = a0
 24944: 82 18 20                 a1 = u64 [sp + 0x20]
 24947: 64 59                    a2 = s0
 24949: 50 20 f6 01 b7 a7 02     ra = 502, jump @13621
      :                          @1846 [@dyn 251]
 24956: 33 0c 00 00 01           a5 = 0x10000
 24961: 82 17 28                 a0 = u64 [sp + 0x28]
 24964: 7b 75 48                 u64 [a0 + 0x48] = s0
 24967: 82 18                    a1 = u64 [sp]
 24969: 7b 78 50                 u64 [a0 + 0x50] = a1
 24972: 7b 75 58                 u64 [a0 + 0x58] = s0
 24975: 82 18 08                 a1 = u64 [sp + 0x8]
 24978: c8 c8 08                 a1 = a1 + a5
 24981: 01                       fallthrough
      :                          @1847
 24982: 82 89                    a2 = u64 [a1]
 24984: c8 59 07                 a0 = a2 + s0
 24987: ac 97 4b 02              jump @1874 if a0 <u a2
      :                          @1848
 24991: c8 67 0a                 a3 = a0 + s1
 24994: d8 7a 0b                 a4 = a3 <u a0
 24997: d8 ac 0a                 a3 = a5 <u a3
 25000: d4 ba 0a                 a3 = a3 | a4
 25003: 52 0a 3b 02              jump @1874 if a3 != 0
      :                          @1849
 25007: 82 8a                    a3 = u64 [a1]
 25009: ab 9a e5                 jump @1847 if a3 != a2
      :                          @1850
 25012: 7b 87                    u64 [a1] = a0
 25014: 33 0b                    a4 = 0
 25016: 33 09 c0 22 03           a2 = 0x322c0
 25021: 7b 19 08                 u64 [sp + 0x8] = a2
 25024: 95 98 00 00 01           a1 = a2 + 0x10000
 25029: c9 78 07                 a0 = a1 - a0
 25032: 7b 17                    u64 [sp] = a0
 25034: 82 18 20                 a1 = u64 [sp + 0x20]
 25037: 64 59                    a2 = s0
 25039: 50 20 f8 01 5d a7 02     ra = 504, jump @13621
      :                          @1851 [@dyn 252]
 25046: 33 0c 00 00 01           a5 = 0x10000
 25051: 82 17 28                 a0 = u64 [sp + 0x28]
 25054: 7b 75 60                 u64 [a0 + 0x60] = s0
 25057: 82 18                    a1 = u64 [sp]
 25059: 7b 78 68                 u64 [a0 + 0x68] = a1
 25062: 7b 75 70                 u64 [a0 + 0x70] = s0
 25065: 82 18 08                 a1 = u64 [sp + 0x8]
 25068: c8 c8 08                 a1 = a1 + a5
 25071: 01                       fallthrough
      :                          @1852
 25072: 82 89                    a2 = u64 [a1]
 25074: c8 59 07                 a0 = a2 + s0
 25077: ac 97 f1 01              jump @1874 if a0 <u a2
      :                          @1853
 25081: c8 67 0a                 a3 = a0 + s1
 25084: d8 7a 0b                 a4 = a3 <u a0
 25087: d8 ac 0a                 a3 = a5 <u a3
 25090: d4 ba 0a                 a3 = a3 | a4
 25093: 52 0a e1 01              jump @1874 if a3 != 0
      :                          @1854
 25097: 82 8a                    a3 = u64 [a1]
 25099: ab 9a e5                 jump @1852 if a3 != a2
      :                          @1855
 25102: 7b 87                    u64 [a1] = a0
 25104: 33 0b                    a4 = 0
 25106: 33 09 c0 22 03           a2 = 0x322c0
 25111: 7b 19 08                 u64 [sp + 0x8] = a2
 25114: 95 98 00 00 01           a1 = a2 + 0x10000
 25119: c9 78 07                 a0 = a1 - a0
 25122: 7b 17                    u64 [sp] = a0
 25124: 82 18 20                 a1 = u64 [sp + 0x20]
 25127: 64 59                    a2 = s0
 25129: 50 20 fa 01 03 a7 02     ra = 506, jump @13621
      :                          @1856 [@dyn 253]
 25136: 33 0c 00 00 01           a5 = 0x10000
 25141: 82 17 28                 a0 = u64 [sp + 0x28]
 25144: 7b 75 78                 u64 [a0 + 0x78] = s0
 25147: 82 18                    a1 = u64 [sp]
 25149: 7b 78 80 00              u64 [a0 + 0x80] = a1
 25153: 7b 75 88 00              u64 [a0 + 0x88] = s0
 25157: 82 18 08                 a1 = u64 [sp + 0x8]
 25160: c8 c8 08                 a1 = a1 + a5
 25163: 01                       fallthrough
      :                          @1857
 25164: 82 89                    a2 = u64 [a1]
 25166: c8 59 07                 a0 = a2 + s0
 25169: ac 97 95 01              jump @1874 if a0 <u a2
      :                          @1858
 25173: c8 67 0a                 a3 = a0 + s1
 25176: d8 7a 0b                 a4 = a3 <u a0
 25179: d8 ac 0a                 a3 = a5 <u a3
 25182: d4 ba 0a                 a3 = a3 | a4
 25185: 52 0a 85 01              jump @1874 if a3 != 0
      :                          @1859
 25189: 82 8a                    a3 = u64 [a1]
 25191: ab 9a e5                 jump @1857 if a3 != a2
      :                          @1860
 25194: 7b 87                    u64 [a1] = a0
 25196: 33 0b                    a4 = 0
 25198: 33 09 c0 22 03           a2 = 0x322c0
 25203: 7b 19 08                 u64 [sp + 0x8] = a2
 25206: 95 98 00 00 01           a1 = a2 + 0x10000
 25211: c9 78 07                 a0 = a1 - a0
 25214: 7b 17                    u64 [sp] = a0
 25216: 82 18 20                 a1 = u64 [sp + 0x20]
 25219: 64 59                    a2 = s0
 25221: 50 20 fc 01 a7 a6 02     ra = 508, jump @13621
      :                          @1861 [@dyn 254]
 25228: 33 0c 00 00 01           a5 = 0x10000
 25233: 82 17 28                 a0 = u64 [sp + 0x28]
 25236: 7b 75 90 00              u64 [a0 + 0x90] = s0
 25240: 82 18                    a1 = u64 [sp]
 25242: 7b 78 98 00              u64 [a0 + 0x98] = a1
 25246: 7b 75 a0 00              u64 [a0 + 0xa0] = s0
 25250: 82 18 08                 a1 = u64 [sp + 0x8]
 25253: c8 c8 08                 a1 = a1 + a5
 25256: 01                       fallthrough
      :                          @1862
 25257: 82 89                    a2 = u64 [a1]
 25259: c8 59 07                 a0 = a2 + s0
 25262: ac 97 38 01              jump @1874 if a0 <u a2
      :                          @1863
 25266: c8 67 0a                 a3 = a0 + s1
 25269: d8 7a 0b                 a4 = a3 <u a0
 25272: d8 ac 0a                 a3 = a5 <u a3
 25275: d4 ba 0a                 a3 = a3 | a4
 25278: 52 0a 28 01              jump @1874 if a3 != 0
      :                          @1864
 25282: 82 8a                    a3 = u64 [a1]
 25284: ab 9a e5                 jump @1862 if a3 != a2
      :                          @1865
 25287: 7b 87                    u64 [a1] = a0
 25289: 33 0b                    a4 = 0
 25291: 33 09 c0 22 03           a2 = 0x322c0
 25296: 7b 19 08                 u64 [sp + 0x8] = a2
 25299: 95 98 00 00 01           a1 = a2 + 0x10000
 25304: c9 78 07                 a0 = a1 - a0
 25307: 7b 17                    u64 [sp] = a0
 25309: 82 18 20                 a1 = u64 [sp + 0x20]
 25312: 64 59                    a2 = s0
 25314: 50 20 fe 01 4a a6 02     ra = 510, jump @13621
      :                          @1866 [@dyn 255]
 25321: 33 0c 00 00 01           a5 = 0x10000
 25326: 82 17 28                 a0 = u64 [sp + 0x28]
 25329: 7b 75 a8 00              u64 [a0 + 0xa8] = s0
 25333: 82 18                    a1 = u64 [sp]
 25335: 7b 78 b0 00              u64 [a0 + 0xb0] = a1
 25339: 7b 75 b8 00              u64 [a0 + 0xb8] = s0
 25343: 82 18 08                 a1 = u64 [sp + 0x8]
 25346: c8 c8 08                 a1 = a1 + a5
 25349: 01                       fallthrough
      :                          @1867
 25350: 82 89                    a2 = u64 [a1]
 25352: c8 59 07                 a0 = a2 + s0
 25355: ac 97 db 00              jump @1874 if a0 <u a2
      :                          @1868
 25359: c8 67 0a                 a3 = a0 + s1
 25362: d8 7a 0b                 a4 = a3 <u a0
 25365: d8 ac 0a                 a3 = a5 <u a3
 25368: d4 ba 0a                 a3 = a3 | a4
 25371: 52 0a cb 00              jump @1874 if a3 != 0
      :                          @1869
 25375: 82 8a                    a3 = u64 [a1]
 25377: ab 9a e5                 jump @1867 if a3 != a2
      :                          @1870
 25380: 7b 87                    u64 [a1] = a0
 25382: 33 0b                    a4 = 0
 25384: 33 08 c0 22 04           a1 = 0x422c0
 25389: c9 78 06                 s1 = a1 - a0
 25392: 64 67                    a0 = s1
 25394: 82 18 20                 a1 = u64 [sp + 0x20]
 25397: 64 59                    a2 = s0
 25399: 50 20 00 02 f5 a5 02     ra = 512, jump @13621
      :                          @1871 [@dyn 256]
 25406: 82 1b 28                 a4 = u64 [sp + 0x28]
 25409: 7b b5 c0 00              u64 [a4 + 0xc0] = s0
 25413: 7b b6 c8 00              u64 [a4 + 0xc8] = s1
 25417: 82 1a 10                 a3 = u64 [sp + 0x10]
 25420: 82 19 18                 a2 = u64 [sp + 0x18]
 25423: 28 66                    jump @1873
      :                          @1872
 25425: 49 0b                    u64 [a4 + 0] = 0
 25427: 49 1b 08 01              u64 [a4 + 8] = 0x1
 25431: 49 1b 10                 u64 [a4 + 16] = 0
 25434: 49 1b 18                 u64 [a4 + 24] = 0
 25437: 49 1b 20 01              u64 [a4 + 32] = 0x1
 25441: 49 1b 28                 u64 [a4 + 40] = 0
 25444: 49 1b 30                 u64 [a4 + 48] = 0
 25447: 49 1b 38 01              u64 [a4 + 56] = 0x1
 25451: 49 1b 40                 u64 [a4 + 64] = 0
 25454: 49 1b 48                 u64 [a4 + 72] = 0
 25457: 49 1b 50 01              u64 [a4 + 80] = 0x1
 25461: 49 1b 58                 u64 [a4 + 88] = 0
 25464: 49 1b 60                 u64 [a4 + 96] = 0
 25467: 49 1b 68 01              u64 [a4 + 104] = 0x1
 25471: 49 1b 70                 u64 [a4 + 112] = 0
 25474: 49 1b 78                 u64 [a4 + 120] = 0
 25477: 49 2b 80 00 01           u64 [a4 + 128] = 0x1
 25482: 49 2b 90 00              u64 [a4 + 144] = 0
 25486: 49 2b 88 00              u64 [a4 + 136] = 0
 25490: 49 2b 98 00 01           u64 [a4 + 152] = 0x1
 25495: 49 2b a8 00              u64 [a4 + 168] = 0
 25499: 49 2b a0 00              u64 [a4 + 160] = 0
 25503: 49 2b b0 00 01           u64 [a4 + 176] = 0x1
 25508: 49 2b c0 00              u64 [a4 + 192] = 0
 25512: 49 2b b8 00              u64 [a4 + 184] = 0
 25516: 49 2b c8 00 01           u64 [a4 + 200] = 0x1
 25521: 82 1a 10                 a3 = u64 [sp + 0x10]
 25524: 01                       fallthrough
      :                          @1873
 25525: 82 97                    a0 = u64 [a2]
 25527: 82 98 08                 a1 = u64 [a2 + 0x8]
 25530: 82 99 10                 a2 = u64 [a2 + 0x10]
 25533: 7b b5 d0 00              u64 [a4 + 0xd0] = s0
 25537: 7b b7 d8 00              u64 [a4 + 0xd8] = a0
 25541: 7b b8 e0 00              u64 [a4 + 0xe0] = a1
 25545: 7b b9 e8 00              u64 [a4 + 0xe8] = a2
 25549: 33 07 0a                 a0 = 0xa
 25552: 7b a7                    u64 [a3] = a0
 25554: 7b ab 08                 u64 [a3 + 0x8] = a4
 25557: 7b a7 10                 u64 [a3 + 0x10] = a0
 25560: 82 10 40                 ra = u64 [sp + 0x40]
 25563: 82 15 38                 s0 = u64 [sp + 0x38]
 25566: 82 16 30                 s1 = u64 [sp + 0x30]
 25569: 95 11 48                 sp = sp + 0x48
 25572: 32 00                    ret
      :                          @1874
 25574: 00                       trap
      :                          @1875
 25575: 00                       trap
      :                          @1876
 25576: 00                       trap
      :                          @1877
 25577: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 25580: 7b 10 20                 u64 [sp + 0x20] = ra
 25583: 7b 15 18                 u64 [sp + 0x18] = s0
 25586: 7b 16 10                 u64 [sp + 0x10] = s1
 25589: 64 90                    ra = a2
 25591: 7b 17 08                 u64 [sp + 0x8] = a0
 25594: 97 99 03                 a2 = a2 << 0x3
 25597: 51 08 60                 jump @1886 if a1 == 0
      :                          @1878
 25600: 33 03 c0 22 03           t1 = 0x322c0
 25605: 33 02 00 00 01           t0 = 0x10000
 25610: c8 23 04                 t2 = t1 + t0
 25613: 01                       fallthrough
      :                          @1879
 25614: 82 46                    s1 = u64 [t2]
 25616: c8 96 0c                 a5 = s1 + a2
 25619: ac 6c b4 00              jump @1894 if a5 <u s1
      :                          @1880
 25623: 95 c7 08                 a0 = a5 + 0x8
 25626: d8 c7 0a                 a3 = a0 <u a5
 25629: d8 72 07                 a0 = t0 <u a0
 25632: d4 a7 07                 a0 = a0 | a3
 25635: 52 07 a4 00              jump @1894 if a0 != 0
      :                          @1881
 25639: c9 c3 07                 a0 = t1 - a5
 25642: c8 27 07                 a0 = a0 + t0
 25645: 84 7a 07                 a3 = a0 & 0x7
 25648: c8 ac 0c                 a5 = a5 + a3
 25651: 01                       fallthrough
      :                          @1882
 25652: 82 45                    s0 = u64 [t2]
 25654: ab 65 d8                 jump @1879 if s0 != s1
      :                          @1883
 25657: 7b 4c                    u64 [t2] = a5
 25659: 33 0b                    a4 = 0
 25661: c9 a7 07                 a0 = a0 - a3
 25664: 95 09 ff                 a2 = ra + 0xffffffffffffffff
 25667: 64 7a                    a3 = a0
 25669: 01                       fallthrough
      :                          @1884
 25670: 7b a8                    u64 [a3] = a1
 25672: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 25675: 95 aa 08                 a3 = a3 + 0x8
 25678: 52 09 f8                 jump @1884 if a2 != 0
      :                          @1885
 25681: 7b a8                    u64 [a3] = a1
 25683: 82 18 08                 a1 = u64 [sp + 0x8]
 25686: 7b 80                    u64 [a1] = ra
 25688: 7b 87 08                 u64 [a1 + 0x8] = a0
 25691: 28 5b                    jump @1893
      :                          @1886
 25693: 7b 10                    u64 [sp] = ra
 25695: 33 07 c0 22 03           a0 = 0x322c0
 25700: 33 03 c0 22 03           t1 = 0x322c0
 25705: 33 02 00 00 01           t0 = 0x10000
 25710: c8 23 0a                 a3 = t1 + t0
 25713: 01                       fallthrough
      :                          @1887
 25714: 82 ab                    a4 = u64 [a3]
 25716: c8 9b 0c                 a5 = a4 + a2
 25719: ac bc 50                 jump @1894 if a5 <u a4
      :                          @1888
 25722: 95 c8 08                 a1 = a5 + 0x8
 25725: d8 c8 06                 s1 = a1 <u a5
 25728: d8 82 08                 a1 = t0 <u a1
 25731: d4 68 08                 a1 = a1 | s1
 25734: 52 08 41                 jump @1894 if a1 != 0
      :                          @1889
 25737: c9 c3 06                 s1 = t1 - a5
 25740: c8 26 06                 s1 = s1 + t0
 25743: 84 68 07                 a1 = s1 & 0x7
 25746: c8 8c 0c                 a5 = a5 + a1
 25749: 01                       fallthrough
      :                          @1890
 25750: 82 a5                    s0 = u64 [a3]
 25752: ab b5 da                 jump @1887 if s0 != a4
      :                          @1891
 25755: 7b ac                    u64 [a3] = a5
 25757: c9 86 06                 s1 = s1 - a1
 25760: 64 67                    a0 = s1
 25762: 33 08                    a1 = 0
 25764: 50 20 02 02 b5 a6 02     ra = 514, jump @13675
      :                          @1892 [@dyn 257]
 25771: 82 10                    ra = u64 [sp]
 25773: 82 18 08                 a1 = u64 [sp + 0x8]
 25776: 7b 80                    u64 [a1] = ra
 25778: 7b 86 08                 u64 [a1 + 0x8] = s1
 25781: 01                       fallthrough
      :                          @1893
 25782: 7b 80 10                 u64 [a1 + 0x10] = ra
 25785: 82 10 20                 ra = u64 [sp + 0x20]
 25788: 82 15 18                 s0 = u64 [sp + 0x18]
 25791: 82 16 10                 s1 = u64 [sp + 0x10]
 25794: 95 11 28                 sp = sp + 0x28
 25797: 32 00                    ret
      :                          @1894
 25799: 00                       trap
      :                          @1895
 25800: 95 11 98                 sp = sp + 0xffffffffffffff98
 25803: 7b 10 60                 u64 [sp + 0x60] = ra
 25806: 7b 15 58                 u64 [sp + 0x58] = s0
 25809: 7b 16 50                 u64 [sp + 0x50] = s1
 25812: 64 70                    ra = a0
 25814: 51 09 14 01              jump @1914 if a2 == 0
      :                          @1896
 25818: 7b 18 10                 u64 [sp + 0x10] = a1
 25821: 3a 07 28 10 03           a0 = u64 [0x31028]
 25826: ae 79 8a 01              jump @1928 if a2 >=u a0
      :                          @1897
 25830: d8 79 02                 t0 = a2 <u a0
 25833: 7b 19 30                 u64 [sp + 0x30] = a2
 25836: 96 97 18                 a0 = a2 * 0x18
 25839: 97 22 03                 t0 = t0 << 0x3
 25842: 33 04 c0 22 03           t2 = 0x322c0
 25847: 33 03 00 00 01           t1 = 0x10000
 25852: c8 34 0b                 a4 = t2 + t1
 25855: 01                       fallthrough
      :                          @1898
 25856: 82 b6                    s1 = u64 [a4]
 25858: c8 76 0c                 a5 = s1 + a0
 25861: ac 6c 66 01              jump @1927 if a5 <u s1
      :                          @1899
 25865: c8 2c 0a                 a3 = a5 + t0
 25868: d8 ca 05                 s0 = a3 <u a5
 25871: d8 a3 0a                 a3 = t1 <u a3
 25874: d4 5a 0a                 a3 = a3 | s0
 25877: 52 0a 56 01              jump @1927 if a3 != 0
      :                          @1900
 25881: c9 c4 05                 s0 = t2 - a5
 25884: c8 35 05                 s0 = s0 + t1
 25887: 84 5a 07                 a3 = s0 & 0x7
 25890: c8 ac 0c                 a5 = a5 + a3
 25893: 01                       fallthrough
      :                          @1901
 25894: 82 b8                    a1 = u64 [a4]
 25896: ab 68 d8                 jump @1898 if a1 != s1
      :                          @1902
 25899: 7b bc                    u64 [a4] = a5
 25901: 01                       fallthrough
      :                          @1903
 25902: c9 a5 05                 s0 = s0 - a3
 25905: 33 07 01                 a0 = 0x1
 25908: 64 53                    t1 = s0
 25910: 82 19 30                 a2 = u64 [sp + 0x30]
 25913: 82 1a 10                 a3 = u64 [sp + 0x10]
 25916: 53 19 02 08 01           jump @1925 if a2 <u 2
      :                          @1904
 25921: 82 ab 10                 a4 = u64 [a3 + 0x10]
 25924: 51 0b e3 00              jump @1922 if a4 == 0
      :                          @1905
 25928: 7b 15 08                 u64 [sp + 0x8] = s0
 25931: 7b 10                    u64 [sp] = ra
 25933: 57 0b 1f 01              jump @1928 if a4 <s 0
      :                          @1906
 25937: 82 a7 08                 a0 = u64 [a3 + 0x8]
 25940: 7b 17 20                 u64 [sp + 0x20] = a0
 25943: 85 b6 ff                 s1 = a4 ^ 0xffffffffffffffff
 25946: 98 66 3f                 s1 = s1 >> 0x3f
 25949: 33 05 c0 22 03           s0 = 0x322c0
 25954: 33 0c 00 00 01           a5 = 0x10000
 25959: 7b 15 18                 u64 [sp + 0x18] = s0
 25962: c8 c5 05                 s0 = s0 + a5
 25965: 82 13 08                 t1 = u64 [sp + 0x8]
 25968: 7b 1b 28                 u64 [sp + 0x28] = a4
 25971: 33 02 02                 t0 = 0x2
 25974: 28 06                    jump @1908
      :                          @1907
 25976: 95 22 01                 t0 = t0 + 0x1
 25979: 01                       fallthrough
      :                          @1908
 25980: 82 58                    a1 = u64 [s0]
 25982: c8 b8 07                 a0 = a1 + a4
 25985: ac 87 54 b2 02           jump @13923 if a0 <u a1
      :                          @1909
 25990: c8 67 09                 a2 = a0 + s1
 25993: d8 79 0a                 a3 = a2 <u a0
 25996: d8 9c 09                 a2 = a5 <u a2
 25999: d4 a9 09                 a2 = a2 | a3
 26002: 52 09 43 b2 02           jump @13923 if a2 != 0
      :                          @1910
 26007: 82 59                    a2 = u64 [s0]
 26009: ab 89 e3                 jump @1908 if a2 != a1
      :                          @1911
 26012: 7b 57                    u64 [s0] = a0
 26014: 82 18 18                 a1 = u64 [sp + 0x18]
 26017: c9 78 07                 a0 = a1 - a0
 26020: c8 c7 07                 a0 = a0 + a5
 26023: 7b 17 38                 u64 [sp + 0x38] = a0
 26026: 82 18 20                 a1 = u64 [sp + 0x20]
 26029: 64 b9                    a2 = a4
 26031: 7b 13 48                 u64 [sp + 0x48] = t1
 26034: 7b 12 40                 u64 [sp + 0x40] = t0
 26037: 50 20 04 02 77 a3 02     ra = 516, jump @13621
      :                          @1912 [@dyn 258]
 26044: 33 0c 00 00 01           a5 = 0x10000
 26049: 82 12 40                 t0 = u64 [sp + 0x40]
 26052: 82 1b 28                 a4 = u64 [sp + 0x28]
 26055: 82 13 48                 t1 = u64 [sp + 0x48]
 26058: 82 19 30                 a2 = u64 [sp + 0x30]
 26061: 7b 3b                    u64 [t1] = a4
 26063: 82 17 38                 a0 = u64 [sp + 0x38]
 26066: 7b 37 08                 u64 [t1 + 0x8] = a0
 26069: 7b 3b 10                 u64 [t1 + 0x10] = a4
 26072: 95 33 18                 t1 = t1 + 0x18
 26075: ab 92 9d                 jump @1907 if t0 != a2
      :                          @1913
 26078: 64 97                    a0 = a2
 26080: 82 10                    ra = u64 [sp]
 26082: 82 15 08                 s0 = u64 [sp + 0x8]
 26085: 82 1a 10                 a3 = u64 [sp + 0x10]
 26088: 28 5c                    jump @1925
      :                          @1914
 26090: 82 87                    a0 = u64 [a1]
 26092: 33 05 08                 s0 = 0x8
 26095: 51 07 66                 jump @1926 if a0 == 0
      :                          @1915
 26098: 56 37 00 00 01 2e        jump @1921 if a0 >u 65536
      :                          @1916
 26104: 82 88 08                 a1 = u64 [a1 + 0x8]
 26107: 33 0a c0 22 03           a3 = 0x322c0
 26112: 95 a5 00 00 01           s0 = a3 + 0x10000
 26117: 01                       fallthrough
      :                          @1917
 26118: 82 5a                    a3 = u64 [s0]
 26120: c9 a5 0b                 a4 = s0 - a3
 26123: ab 8b 15                 jump @1921 if a4 != a1
      :                          @1918
 26126: c9 7a 0b                 a4 = a3 - a0
 26129: 01                       fallthrough
      :                          @1919
 26130: 82 5c                    a5 = u64 [s0]
 26132: ab ac f2                 jump @1917 if a5 != a3
      :                          @1920
 26135: 7b 5b                    u64 [s0] = a4
 26137: 33 07                    a0 = 0
 26139: 33 05 08                 s0 = 0x8
 26142: 28 37                    jump @1926
      :                          @1921
 26144: 33 07                    a0 = 0
 26146: 33 05 08                 s0 = 0x8
 26149: 28 30                    jump @1926
      :                          @1922
 26151: 95 97 ff                 a0 = a2 + 0xffffffffffffffff
 26154: 33 08 01                 a1 = 0x1
 26157: 64 53                    t1 = s0
 26159: 01                       fallthrough
      :                          @1923
 26160: 49 03                    u64 [t1 + 0] = 0
 26162: 7b 38 08                 u64 [t1 + 0x8] = a1
 26165: 49 13 10                 u64 [t1 + 16] = 0
 26168: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 26171: 95 33 18                 t1 = t1 + 0x18
 26174: 52 07 f2                 jump @1923 if a0 != 0
      :                          @1924
 26177: 64 97                    a0 = a2
 26179: 01                       fallthrough
      :                          @1925
 26180: 82 a8 10                 a1 = u64 [a3 + 0x10]
 26183: 82 ab 08                 a4 = u64 [a3 + 0x8]
 26186: 82 aa                    a3 = u64 [a3]
 26188: 7b 38 10                 u64 [t1 + 0x10] = a1
 26191: 7b 3b 08                 u64 [t1 + 0x8] = a4
 26194: 7b 3a                    u64 [t1] = a3
 26196: 01                       fallthrough
      :                          @1926
 26197: 7b 09                    u64 [ra] = a2
 26199: 7b 05 08                 u64 [ra + 0x8] = s0
 26202: 7b 07 10                 u64 [ra + 0x10] = a0
 26205: 82 10 60                 ra = u64 [sp + 0x60]
 26208: 82 15 58                 s0 = u64 [sp + 0x58]
 26211: 82 16 50                 s1 = u64 [sp + 0x50]
 26214: 95 11 68                 sp = sp + 0x68
 26217: 32 00                    ret
      :                          @1927
 26219: 00                       trap
      :                          @1928
 26220: 00                       trap
      :                          @1929
 26221: 82 9a                    a3 = u64 [a2]
 26223: 95 a8 0a                 a1 = a3 + 0xa
 26226: ac a8 49                 jump @1934 if a1 <u a3
      :                          @1930
 26229: 95 8b 01                 a4 = a1 + 0x1
 26232: 88 bc 01                 a5 = a4 <u 0x1
 26235: d8 b7 0b                 a4 = a0 <u a4
 26238: d4 cb 0b                 a4 = a4 | a5
 26241: 52 0b 3a                 jump @1934 if a4 != 0
      :                          @1931
 26244: 82 9b                    a4 = u64 [a2]
 26246: ab ab e7                 jump @1929 if a4 != a3
      :                          @1932
 26249: 7b 98                    u64 [a2] = a1
 26251: 33 0c                    a5 = 0
 26253: 33 06 c0 22 04           s1 = 0x422c0
 26258: c9 86 06                 s1 = s1 - a1
 26261: 33 09 0a                 a2 = 0xa
 26264: 64 67                    a0 = s1
 26266: 33 08                    a1 = 0
 26268: 50 20 06 02 bd a4 02     ra = 518, jump @13675
      :                          @1933 [@dyn 259]
 26275: 33 07 0a                 a0 = 0xa
 26278: 7b 57                    u64 [s0] = a0
 26280: 7b 56 08                 u64 [s0 + 0x8] = s1
 26283: 7b 57 10                 u64 [s0 + 0x10] = a0
 26286: 82 10 10                 ra = u64 [sp + 0x10]
 26289: 82 15 08                 s0 = u64 [sp + 0x8]
 26292: 82 16                    s1 = u64 [sp]
 26294: 95 11 18                 sp = sp + 0x18
 26297: 32 00                    ret
      :                          @1934
 26299: 00                       trap
      :                          @1935 [@dyn 260]
 26300: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 26303: 7b 10 38                 u64 [sp + 0x38] = ra
 26306: 7b 15 30                 u64 [sp + 0x30] = s0
 26309: 7b 16 28                 u64 [sp + 0x28] = s1
 26312: 64 86                    s1 = a1
 26314: 82 88 28                 a1 = u64 [a1 + 0x28]
 26317: 82 75 08                 s0 = u64 [a0 + 0x8]
 26320: 82 77 10                 a0 = u64 [a0 + 0x10]
 26323: 7b 17 08                 u64 [sp + 0x8] = a0
 26326: 82 67 20                 a0 = u64 [s1 + 0x20]
 26329: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26332: 33 08 08 30 01           a1 = 0x13008
 26337: 33 09 01                 a2 = 0x1
 26340: b4 a0 02 0a 02           ra = 522, jump [a3]
      :                          @1936 [@dyn 261]
 26345: 7b 16 10                 u64 [sp + 0x10] = s1
 26348: 82 16 08                 s1 = u64 [sp + 0x8]
 26351: 78 17 18                 u8 [sp + 0x18] = a0
 26354: 46 11 19                 u8 [sp + 25] = 0
 26357: 51 06 31                 jump @1941 if s1 == 0
      :                          @1937
 26360: 97 66 04                 s1 = s1 << 0x4
 26363: 33 07 60                 a0 = 0x60
 26366: 7b 17                    u64 [sp] = a0
 26368: 01                       fallthrough
      :                          @1938
 26369: 95 57 10                 a0 = s0 + 0x10
 26372: 7b 17 08                 u64 [sp + 0x8] = a0
 26375: 7b 15 20                 u64 [sp + 0x20] = s0
 26378: 95 17 10                 a0 = sp + 0x10
 26381: 95 18 20                 a1 = sp + 0x20
 26384: 82 19                    a2 = u64 [sp]
 26386: 50 20 0c 02 00 b2 02     ra = 524, jump @13940
      :                          @1939 [@dyn 262]
 26393: 95 66 f0                 s1 = s1 + 0xfffffffffffffff0
 26396: 82 15 08                 s0 = u64 [sp + 0x8]
 26399: 52 06 e2                 jump @1938 if s1 != 0
      :                          @1940
 26402: 7c 17 18                 a0 = u8 [sp + 0x18]
 26405: 01                       fallthrough
      :                          @1941
 26406: 33 08 01                 a1 = 0x1
 26409: 52 07 1f                 jump @1944 if a0 != 0
      :                          @1942
 26412: 82 17 10                 a0 = u64 [sp + 0x10]
 26415: 82 78 28                 a1 = u64 [a0 + 0x28]
 26418: 82 77 20                 a0 = u64 [a0 + 0x20]
 26421: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26424: 33 08 49 30 01           a1 = 0x13049
 26429: 33 09 01                 a2 = 0x1
 26432: b4 a0 02 0e 02           ra = 526, jump [a3]
      :                          @1943 [@dyn 263]
 26437: 64 78                    a1 = a0
 26439: 01                       fallthrough
      :                          @1944
 26440: 64 87                    a0 = a1
 26442: 82 10 38                 ra = u64 [sp + 0x38]
 26445: 82 15 30                 s0 = u64 [sp + 0x30]
 26448: 82 16 28                 s1 = u64 [sp + 0x28]
 26451: 95 11 40                 sp = sp + 0x40
 26454: 32 00                    ret
      :                          @1945 [@dyn 264]
 26456: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 26459: 7b 10 38                 u64 [sp + 0x38] = ra
 26462: 7b 15 30                 u64 [sp + 0x30] = s0
 26465: 7b 16 28                 u64 [sp + 0x28] = s1
 26468: 64 86                    s1 = a1
 26470: 82 88 28                 a1 = u64 [a1 + 0x28]
 26473: 82 75 08                 s0 = u64 [a0 + 0x8]
 26476: 82 77 10                 a0 = u64 [a0 + 0x10]
 26479: 7b 17 08                 u64 [sp + 0x8] = a0
 26482: 82 67 20                 a0 = u64 [s1 + 0x20]
 26485: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26488: 33 08 08 30 01           a1 = 0x13008
 26493: 33 09 01                 a2 = 0x1
 26496: b4 a0 02 12 02           ra = 530, jump [a3]
      :                          @1946 [@dyn 265]
 26501: 7b 16 10                 u64 [sp + 0x10] = s1
 26504: 82 16 08                 s1 = u64 [sp + 0x8]
 26507: 78 17 18                 u8 [sp + 0x18] = a0
 26510: 46 11 19                 u8 [sp + 25] = 0
 26513: 51 06 31                 jump @1951 if s1 == 0
      :                          @1947
 26516: 97 66 04                 s1 = s1 << 0x4
 26519: 33 07 0c                 a0 = 0xc
 26522: 7b 17                    u64 [sp] = a0
 26524: 01                       fallthrough
      :                          @1948
 26525: 95 57 10                 a0 = s0 + 0x10
 26528: 7b 17 08                 u64 [sp + 0x8] = a0
 26531: 7b 15 20                 u64 [sp + 0x20] = s0
 26534: 95 17 10                 a0 = sp + 0x10
 26537: 95 18 20                 a1 = sp + 0x20
 26540: 82 19                    a2 = u64 [sp]
 26542: 50 20 14 02 64 b1 02     ra = 532, jump @13940
      :                          @1949 [@dyn 266]
 26549: 95 66 f0                 s1 = s1 + 0xfffffffffffffff0
 26552: 82 15 08                 s0 = u64 [sp + 0x8]
 26555: 52 06 e2                 jump @1948 if s1 != 0
      :                          @1950
 26558: 7c 17 18                 a0 = u8 [sp + 0x18]
 26561: 01                       fallthrough
      :                          @1951
 26562: 33 08 01                 a1 = 0x1
 26565: 52 07 1f                 jump @1954 if a0 != 0
      :                          @1952
 26568: 82 17 10                 a0 = u64 [sp + 0x10]
 26571: 82 78 28                 a1 = u64 [a0 + 0x28]
 26574: 82 77 20                 a0 = u64 [a0 + 0x20]
 26577: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26580: 33 08 49 30 01           a1 = 0x13049
 26585: 33 09 01                 a2 = 0x1
 26588: b4 a0 02 16 02           ra = 534, jump [a3]
      :                          @1953 [@dyn 267]
 26593: 64 78                    a1 = a0
 26595: 01                       fallthrough
      :                          @1954
 26596: 64 87                    a0 = a1
 26598: 82 10 38                 ra = u64 [sp + 0x38]
 26601: 82 15 30                 s0 = u64 [sp + 0x30]
 26604: 82 16 28                 s1 = u64 [sp + 0x28]
 26607: 95 11 40                 sp = sp + 0x40
 26610: 32 00                    ret
      :                          @1955 [@dyn 268]
 26612: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 26615: 7b 10 38                 u64 [sp + 0x38] = ra
 26618: 7b 15 30                 u64 [sp + 0x30] = s0
 26621: 7b 16 28                 u64 [sp + 0x28] = s1
 26624: 7b 18 08                 u64 [sp + 0x8] = a1
 26627: 82 89 28                 a2 = u64 [a1 + 0x28]
 26630: 82 76 08                 s1 = u64 [a0 + 0x8]
 26633: 82 75 10                 s0 = u64 [a0 + 0x10]
 26636: 82 87 20                 a0 = u64 [a1 + 0x20]
 26639: 82 9a 18                 a3 = u64 [a2 + 0x18]
 26642: 33 08 08 30 01           a1 = 0x13008
 26647: 33 09 01                 a2 = 0x1
 26650: b4 a0 02 1a 02           ra = 538, jump [a3]
      :                          @1956 [@dyn 269]
 26655: 82 18 08                 a1 = u64 [sp + 0x8]
 26658: 7b 18 10                 u64 [sp + 0x10] = a1
 26661: 78 17 18                 u8 [sp + 0x18] = a0
 26664: 46 11 19                 u8 [sp + 25] = 0
 26667: 51 05 2f                 jump @1961 if s0 == 0
      :                          @1957
 26670: 33 07 9e 0c              a0 = 0xc9e
 26674: 7b 17                    u64 [sp] = a0
 26676: 01                       fallthrough
      :                          @1958
 26677: 95 67 01                 a0 = s1 + 0x1
 26680: 7b 17 08                 u64 [sp + 0x8] = a0
 26683: 7b 16 20                 u64 [sp + 0x20] = s1
 26686: 95 17 10                 a0 = sp + 0x10
 26689: 95 18 20                 a1 = sp + 0x20
 26692: 82 19                    a2 = u64 [sp]
 26694: 50 20 1c 02 cc b0 02     ra = 540, jump @13940
      :                          @1959 [@dyn 270]
 26701: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 26704: 82 16 08                 s1 = u64 [sp + 0x8]
 26707: 52 05 e2                 jump @1958 if s0 != 0
      :                          @1960
 26710: 7c 17 18                 a0 = u8 [sp + 0x18]
 26713: 01                       fallthrough
      :                          @1961
 26714: 33 08 01                 a1 = 0x1
 26717: 52 07 1f                 jump @1964 if a0 != 0
      :                          @1962
 26720: 82 17 10                 a0 = u64 [sp + 0x10]
 26723: 82 78 28                 a1 = u64 [a0 + 0x28]
 26726: 82 77 20                 a0 = u64 [a0 + 0x20]
 26729: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26732: 33 08 49 30 01           a1 = 0x13049
 26737: 33 09 01                 a2 = 0x1
 26740: b4 a0 02 1e 02           ra = 542, jump [a3]
      :                          @1963 [@dyn 271]
 26745: 64 78                    a1 = a0
 26747: 01                       fallthrough
      :                          @1964
 26748: 64 87                    a0 = a1
 26750: 82 10 38                 ra = u64 [sp + 0x38]
 26753: 82 15 30                 s0 = u64 [sp + 0x30]
 26756: 82 16 28                 s1 = u64 [sp + 0x28]
 26759: 95 11 40                 sp = sp + 0x40
 26762: 32 00                    ret
      :                          @1965 [@dyn 272]
 26764: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 26767: 7b 10 38                 u64 [sp + 0x38] = ra
 26770: 7b 15 30                 u64 [sp + 0x30] = s0
 26773: 7b 16 28                 u64 [sp + 0x28] = s1
 26776: 64 86                    s1 = a1
 26778: 82 88 28                 a1 = u64 [a1 + 0x28]
 26781: 82 75 08                 s0 = u64 [a0 + 0x8]
 26784: 82 77 10                 a0 = u64 [a0 + 0x10]
 26787: 7b 17 08                 u64 [sp + 0x8] = a0
 26790: 82 67 20                 a0 = u64 [s1 + 0x20]
 26793: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26796: 33 08 08 30 01           a1 = 0x13008
 26801: 33 09 01                 a2 = 0x1
 26804: b4 a0 02 22 02           ra = 546, jump [a3]
      :                          @1966 [@dyn 273]
 26809: 7b 16 10                 u64 [sp + 0x10] = s1
 26812: 82 16 08                 s1 = u64 [sp + 0x8]
 26815: 78 17 18                 u8 [sp + 0x18] = a0
 26818: 46 11 19                 u8 [sp + 25] = 0
 26821: 51 06 31                 jump @1971 if s1 == 0
      :                          @1967
 26824: 97 66 03                 s1 = s1 << 0x3
 26827: 33 07 18                 a0 = 0x18
 26830: 7b 17                    u64 [sp] = a0
 26832: 01                       fallthrough
      :                          @1968
 26833: 95 57 08                 a0 = s0 + 0x8
 26836: 7b 17 08                 u64 [sp + 0x8] = a0
 26839: 7b 15 20                 u64 [sp + 0x20] = s0
 26842: 95 17 10                 a0 = sp + 0x10
 26845: 95 18 20                 a1 = sp + 0x20
 26848: 82 19                    a2 = u64 [sp]
 26850: 50 20 24 02 30 b0 02     ra = 548, jump @13940
      :                          @1969 [@dyn 274]
 26857: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 26860: 82 15 08                 s0 = u64 [sp + 0x8]
 26863: 52 06 e2                 jump @1968 if s1 != 0
      :                          @1970
 26866: 7c 17 18                 a0 = u8 [sp + 0x18]
 26869: 01                       fallthrough
      :                          @1971
 26870: 33 08 01                 a1 = 0x1
 26873: 52 07 1f                 jump @1974 if a0 != 0
      :                          @1972
 26876: 82 17 10                 a0 = u64 [sp + 0x10]
 26879: 82 78 28                 a1 = u64 [a0 + 0x28]
 26882: 82 77 20                 a0 = u64 [a0 + 0x20]
 26885: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26888: 33 08 49 30 01           a1 = 0x13049
 26893: 33 09 01                 a2 = 0x1
 26896: b4 a0 02 26 02           ra = 550, jump [a3]
      :                          @1973 [@dyn 275]
 26901: 64 78                    a1 = a0
 26903: 01                       fallthrough
      :                          @1974
 26904: 64 87                    a0 = a1
 26906: 82 10 38                 ra = u64 [sp + 0x38]
 26909: 82 15 30                 s0 = u64 [sp + 0x30]
 26912: 82 16 28                 s1 = u64 [sp + 0x28]
 26915: 95 11 40                 sp = sp + 0x40
 26918: 32 00                    ret
      :                          @1975 [@dyn 276]
 26920: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 26923: 7b 10 38                 u64 [sp + 0x38] = ra
 26926: 7b 15 30                 u64 [sp + 0x30] = s0
 26929: 7b 16 28                 u64 [sp + 0x28] = s1
 26932: 64 86                    s1 = a1
 26934: 82 88 28                 a1 = u64 [a1 + 0x28]
 26937: 82 75 08                 s0 = u64 [a0 + 0x8]
 26940: 82 77 10                 a0 = u64 [a0 + 0x10]
 26943: 7b 17 08                 u64 [sp + 0x8] = a0
 26946: 82 67 20                 a0 = u64 [s1 + 0x20]
 26949: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26952: 33 08 08 30 01           a1 = 0x13008
 26957: 33 09 01                 a2 = 0x1
 26960: b4 a0 02 2a 02           ra = 554, jump [a3]
      :                          @1976 [@dyn 277]
 26965: 82 18 08                 a1 = u64 [sp + 0x8]
 26968: 7b 16 10                 u64 [sp + 0x10] = s1
 26971: 78 17 18                 u8 [sp + 0x18] = a0
 26974: 46 11 19                 u8 [sp + 25] = 0
 26977: 51 08 31                 jump @1981 if a1 == 0
      :                          @1977
 26980: 96 86 18                 s1 = a1 * 0x18
 26983: 33 07 1c                 a0 = 0x1c
 26986: 7b 17                    u64 [sp] = a0
 26988: 01                       fallthrough
      :                          @1978
 26989: 95 57 18                 a0 = s0 + 0x18
 26992: 7b 17 08                 u64 [sp + 0x8] = a0
 26995: 7b 15 20                 u64 [sp + 0x20] = s0
 26998: 95 17 10                 a0 = sp + 0x10
 27001: 95 18 20                 a1 = sp + 0x20
 27004: 82 19                    a2 = u64 [sp]
 27006: 50 20 2c 02 94 af 02     ra = 556, jump @13940
      :                          @1979 [@dyn 278]
 27013: 95 66 e8                 s1 = s1 + 0xffffffffffffffe8
 27016: 82 15 08                 s0 = u64 [sp + 0x8]
 27019: 52 06 e2                 jump @1978 if s1 != 0
      :                          @1980
 27022: 7c 17 18                 a0 = u8 [sp + 0x18]
 27025: 01                       fallthrough
      :                          @1981
 27026: 33 08 01                 a1 = 0x1
 27029: 52 07 1f                 jump @1984 if a0 != 0
      :                          @1982
 27032: 82 17 10                 a0 = u64 [sp + 0x10]
 27035: 82 78 28                 a1 = u64 [a0 + 0x28]
 27038: 82 77 20                 a0 = u64 [a0 + 0x20]
 27041: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27044: 33 08 49 30 01           a1 = 0x13049
 27049: 33 09 01                 a2 = 0x1
 27052: b4 a0 02 2e 02           ra = 558, jump [a3]
      :                          @1983 [@dyn 279]
 27057: 64 78                    a1 = a0
 27059: 01                       fallthrough
      :                          @1984
 27060: 64 87                    a0 = a1
 27062: 82 10 38                 ra = u64 [sp + 0x38]
 27065: 82 15 30                 s0 = u64 [sp + 0x30]
 27068: 82 16 28                 s1 = u64 [sp + 0x28]
 27071: 95 11 40                 sp = sp + 0x40
 27074: 32 00                    ret
      :                          @1985 [@dyn 280]
 27076: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 27079: 7b 10 38                 u64 [sp + 0x38] = ra
 27082: 7b 15 30                 u64 [sp + 0x30] = s0
 27085: 7b 16 28                 u64 [sp + 0x28] = s1
 27088: 64 86                    s1 = a1
 27090: 82 88 28                 a1 = u64 [a1 + 0x28]
 27093: 82 75 08                 s0 = u64 [a0 + 0x8]
 27096: 82 77 10                 a0 = u64 [a0 + 0x10]
 27099: 7b 17 08                 u64 [sp + 0x8] = a0
 27102: 82 67 20                 a0 = u64 [s1 + 0x20]
 27105: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27108: 33 08 08 30 01           a1 = 0x13008
 27113: 33 09 01                 a2 = 0x1
 27116: b4 a0 02 32 02           ra = 562, jump [a3]
      :                          @1986 [@dyn 281]
 27121: 82 18 08                 a1 = u64 [sp + 0x8]
 27124: 7b 16 10                 u64 [sp + 0x10] = s1
 27127: 78 17 18                 u8 [sp + 0x18] = a0
 27130: 46 11 19                 u8 [sp + 25] = 0
 27133: 51 08 31                 jump @1991 if a1 == 0
      :                          @1987
 27136: 96 86 18                 s1 = a1 * 0x18
 27139: 33 07 58                 a0 = 0x58
 27142: 7b 17                    u64 [sp] = a0
 27144: 01                       fallthrough
      :                          @1988
 27145: 95 57 18                 a0 = s0 + 0x18
 27148: 7b 17 08                 u64 [sp + 0x8] = a0
 27151: 7b 15 20                 u64 [sp + 0x20] = s0
 27154: 95 17 10                 a0 = sp + 0x10
 27157: 95 18 20                 a1 = sp + 0x20
 27160: 82 19                    a2 = u64 [sp]
 27162: 50 20 34 02 f8 ae 02     ra = 564, jump @13940
      :                          @1989 [@dyn 282]
 27169: 95 66 e8                 s1 = s1 + 0xffffffffffffffe8
 27172: 82 15 08                 s0 = u64 [sp + 0x8]
 27175: 52 06 e2                 jump @1988 if s1 != 0
      :                          @1990
 27178: 7c 17 18                 a0 = u8 [sp + 0x18]
 27181: 01                       fallthrough
      :                          @1991
 27182: 33 08 01                 a1 = 0x1
 27185: 52 07 1f                 jump @1994 if a0 != 0
      :                          @1992
 27188: 82 17 10                 a0 = u64 [sp + 0x10]
 27191: 82 78 28                 a1 = u64 [a0 + 0x28]
 27194: 82 77 20                 a0 = u64 [a0 + 0x20]
 27197: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27200: 33 08 49 30 01           a1 = 0x13049
 27205: 33 09 01                 a2 = 0x1
 27208: b4 a0 02 36 02           ra = 566, jump [a3]
      :                          @1993 [@dyn 283]
 27213: 64 78                    a1 = a0
 27215: 01                       fallthrough
      :                          @1994
 27216: 64 87                    a0 = a1
 27218: 82 10 38                 ra = u64 [sp + 0x38]
 27221: 82 15 30                 s0 = u64 [sp + 0x30]
 27224: 82 16 28                 s1 = u64 [sp + 0x28]
 27227: 95 11 40                 sp = sp + 0x40
 27230: 32 00                    ret
      :                          @1995 [@dyn 284]
 27232: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 27235: 7b 10 38                 u64 [sp + 0x38] = ra
 27238: 7b 15 30                 u64 [sp + 0x30] = s0
 27241: 7b 16 28                 u64 [sp + 0x28] = s1
 27244: 64 86                    s1 = a1
 27246: 82 88 28                 a1 = u64 [a1 + 0x28]
 27249: 82 75 08                 s0 = u64 [a0 + 0x8]
 27252: 82 77 10                 a0 = u64 [a0 + 0x10]
 27255: 7b 17 08                 u64 [sp + 0x8] = a0
 27258: 82 67 20                 a0 = u64 [s1 + 0x20]
 27261: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27264: 33 08 08 30 01           a1 = 0x13008
 27269: 33 09 01                 a2 = 0x1
 27272: b4 a0 02 3a 02           ra = 570, jump [a3]
      :                          @1996 [@dyn 285]
 27277: 7b 16 10                 u64 [sp + 0x10] = s1
 27280: 82 16 08                 s1 = u64 [sp + 0x8]
 27283: 78 17 18                 u8 [sp + 0x18] = a0
 27286: 46 11 19                 u8 [sp + 25] = 0
 27289: 51 06 31                 jump @2001 if s1 == 0
      :                          @1997
 27292: 97 66 03                 s1 = s1 << 0x3
 27295: 33 07 48                 a0 = 0x48
 27298: 7b 17                    u64 [sp] = a0
 27300: 01                       fallthrough
      :                          @1998
 27301: 95 57 08                 a0 = s0 + 0x8
 27304: 7b 17 08                 u64 [sp + 0x8] = a0
 27307: 7b 15 20                 u64 [sp + 0x20] = s0
 27310: 95 17 10                 a0 = sp + 0x10
 27313: 95 18 20                 a1 = sp + 0x20
 27316: 82 19                    a2 = u64 [sp]
 27318: 50 20 3c 02 5c ae 02     ra = 572, jump @13940
      :                          @1999 [@dyn 286]
 27325: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 27328: 82 15 08                 s0 = u64 [sp + 0x8]
 27331: 52 06 e2                 jump @1998 if s1 != 0
      :                          @2000
 27334: 7c 17 18                 a0 = u8 [sp + 0x18]
 27337: 01                       fallthrough
      :                          @2001
 27338: 33 08 01                 a1 = 0x1
 27341: 52 07 1f                 jump @2004 if a0 != 0
      :                          @2002
 27344: 82 17 10                 a0 = u64 [sp + 0x10]
 27347: 82 78 28                 a1 = u64 [a0 + 0x28]
 27350: 82 77 20                 a0 = u64 [a0 + 0x20]
 27353: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27356: 33 08 49 30 01           a1 = 0x13049
 27361: 33 09 01                 a2 = 0x1
 27364: b4 a0 02 3e 02           ra = 574, jump [a3]
      :                          @2003 [@dyn 287]
 27369: 64 78                    a1 = a0
 27371: 01                       fallthrough
      :                          @2004
 27372: 64 87                    a0 = a1
 27374: 82 10 38                 ra = u64 [sp + 0x38]
 27377: 82 15 30                 s0 = u64 [sp + 0x30]
 27380: 82 16 28                 s1 = u64 [sp + 0x28]
 27383: 95 11 40                 sp = sp + 0x40
 27386: 32 00                    ret
      :                          @2005 [@dyn 288]
 27388: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 27391: 7b 10 38                 u64 [sp + 0x38] = ra
 27394: 7b 15 30                 u64 [sp + 0x30] = s0
 27397: 7b 16 28                 u64 [sp + 0x28] = s1
 27400: 64 86                    s1 = a1
 27402: 82 88 28                 a1 = u64 [a1 + 0x28]
 27405: 82 75 08                 s0 = u64 [a0 + 0x8]
 27408: 82 77 10                 a0 = u64 [a0 + 0x10]
 27411: 7b 17 08                 u64 [sp + 0x8] = a0
 27414: 82 67 20                 a0 = u64 [s1 + 0x20]
 27417: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27420: 33 08 08 30 01           a1 = 0x13008
 27425: 33 09 01                 a2 = 0x1
 27428: b4 a0 02 42 02           ra = 578, jump [a3]
      :                          @2006 [@dyn 289]
 27433: 82 18 08                 a1 = u64 [sp + 0x8]
 27436: 7b 16 10                 u64 [sp + 0x10] = s1
 27439: 78 17 18                 u8 [sp + 0x18] = a0
 27442: 46 11 19                 u8 [sp + 25] = 0
 27445: 51 08 31                 jump @2011 if a1 == 0
      :                          @2007
 27448: 96 86 18                 s1 = a1 * 0x18
 27451: 33 07 6c                 a0 = 0x6c
 27454: 7b 17                    u64 [sp] = a0
 27456: 01                       fallthrough
      :                          @2008
 27457: 95 57 18                 a0 = s0 + 0x18
 27460: 7b 17 08                 u64 [sp + 0x8] = a0
 27463: 7b 15 20                 u64 [sp + 0x20] = s0
 27466: 95 17 10                 a0 = sp + 0x10
 27469: 95 18 20                 a1 = sp + 0x20
 27472: 82 19                    a2 = u64 [sp]
 27474: 50 20 44 02 c0 ad 02     ra = 580, jump @13940
      :                          @2009 [@dyn 290]
 27481: 95 66 e8                 s1 = s1 + 0xffffffffffffffe8
 27484: 82 15 08                 s0 = u64 [sp + 0x8]
 27487: 52 06 e2                 jump @2008 if s1 != 0
      :                          @2010
 27490: 7c 17 18                 a0 = u8 [sp + 0x18]
 27493: 01                       fallthrough
      :                          @2011
 27494: 33 08 01                 a1 = 0x1
 27497: 52 07 1f                 jump @2014 if a0 != 0
      :                          @2012
 27500: 82 17 10                 a0 = u64 [sp + 0x10]
 27503: 82 78 28                 a1 = u64 [a0 + 0x28]
 27506: 82 77 20                 a0 = u64 [a0 + 0x20]
 27509: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27512: 33 08 49 30 01           a1 = 0x13049
 27517: 33 09 01                 a2 = 0x1
 27520: b4 a0 02 46 02           ra = 582, jump [a3]
      :                          @2013 [@dyn 291]
 27525: 64 78                    a1 = a0
 27527: 01                       fallthrough
      :                          @2014
 27528: 64 87                    a0 = a1
 27530: 82 10 38                 ra = u64 [sp + 0x38]
 27533: 82 15 30                 s0 = u64 [sp + 0x30]
 27536: 82 16 28                 s1 = u64 [sp + 0x28]
 27539: 95 11 40                 sp = sp + 0x40
 27542: 32 00                    ret
      :                          @2015 [@dyn 292]
 27544: 82 7a 08                 a3 = u64 [a0 + 0x8]
 27547: 82 79 10                 a2 = u64 [a0 + 0x10]
 27550: 64 87                    a0 = a1
 27552: 64 a8                    a1 = a3
 27554: 28 d8 a3 02              jump @13756
      :                          @2016 [@dyn 293]
 27558: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 27561: 7b 10 30                 u64 [sp + 0x30] = ra
 27564: 7b 15 28                 u64 [sp + 0x28] = s0
 27567: 7b 16 20                 u64 [sp + 0x20] = s1
 27570: 82 79                    a2 = u64 [a0]
 27572: 64 85                    s0 = a1
 27574: 51 09 9c 00              jump @2027 if a2 == 0
      :                          @2017
 27578: 82 58 28                 a1 = u64 [s0 + 0x28]
 27581: 95 77 08                 a0 = a0 + 0x8
 27584: 7b 17                    u64 [sp] = a0
 27586: 82 57 20                 a0 = u64 [s0 + 0x20]
 27589: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27592: 33 08 84 04 01           a1 = 0x10484
 27597: 33 09 04                 a2 = 0x4
 27600: b4 a0 02 4c 02           ra = 588, jump [a3]
      :                          @2018 [@dyn 294]
 27605: 7b 15 10                 u64 [sp + 0x10] = s0
 27608: 78 17 18                 u8 [sp + 0x18] = a0
 27611: 49 11 08                 u64 [sp + 8] = 0
 27614: 46 11 19                 u8 [sp + 25] = 0
 27617: 33 09 18                 a2 = 0x18
 27620: 95 17 08                 a0 = sp + 0x8
 27623: 64 18                    a1 = sp
 27625: 50 20 4e 02 ed ab 02     ra = 590, jump @13924
      :                          @2019 [@dyn 295]
 27632: 82 17 08                 a0 = u64 [sp + 0x8]
 27635: 7c 18 18                 a1 = u8 [sp + 0x18]
 27638: 51 07 7b                 jump @2028 if a0 == 0
      :                          @2020
 27641: 33 05 01                 s0 = 0x1
 27644: 52 08 78                 jump @2029 if a1 != 0
      :                          @2021
 27647: 7c 18 19                 a1 = u8 [sp + 0x19]
 27650: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 27653: 8e 77                    a0 = a0 >u 0
 27655: 82 16 10                 s1 = u64 [sp + 0x10]
 27658: 88 88 01                 a1 = a1 <u 0x1
 27661: d4 87 07                 a0 = a0 | a1
 27664: 52 07 28                 jump @2025 if a0 != 0
      :                          @2022
 27667: 7c 67 34                 a0 = u8 [s1 + 0x34]
 27670: 84 77 04                 a0 = a0 & 0x4
 27673: 52 07 1f                 jump @2025 if a0 != 0
      :                          @2023
 27676: 82 68 28                 a1 = u64 [s1 + 0x28]
 27679: 82 67 20                 a0 = u64 [s1 + 0x20]
 27682: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27685: 33 08 47 30 01           a1 = 0x13047
 27690: 33 09 01                 a2 = 0x1
 27693: 33 05 01                 s0 = 0x1
 27696: b4 a0 02 50 02           ra = 592, jump [a3]
      :                          @2024 [@dyn 296]
 27701: 52 07 3f                 jump @2029 if a0 != 0
      :                          @2025
 27704: 82 68 28                 a1 = u64 [s1 + 0x28]
 27707: 82 67 20                 a0 = u64 [s1 + 0x20]
 27710: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27713: 33 08 f1 2f 01           a1 = 0x12ff1
 27718: 33 09 01                 a2 = 0x1
 27721: b4 a0 02 52 02           ra = 594, jump [a3]
      :                          @2026 [@dyn 297]
 27726: 64 75                    s0 = a0
 27728: 28 24                    jump @2029
      :                          @2027
 27730: 82 58 28                 a1 = u64 [s0 + 0x28]
 27733: 82 57 20                 a0 = u64 [s0 + 0x20]
 27736: 82 8c 18                 a5 = u64 [a1 + 0x18]
 27739: 33 08 a0 04 01           a1 = 0x104a0
 27744: 33 09 04                 a2 = 0x4
 27747: 82 10 30                 ra = u64 [sp + 0x30]
 27750: 82 15 28                 s0 = u64 [sp + 0x28]
 27753: 82 16 20                 s1 = u64 [sp + 0x20]
 27756: 95 11 38                 sp = sp + 0x38
 27759: 32 0c                    jump [a5]
      :                          @2028
 27761: 8e 85                    s0 = a1 >u 0
 27763: 01                       fallthrough
      :                          @2029
 27764: 64 57                    a0 = s0
 27766: 82 10 30                 ra = u64 [sp + 0x30]
 27769: 82 15 28                 s0 = u64 [sp + 0x28]
 27772: 82 16 20                 s1 = u64 [sp + 0x20]
 27775: 95 11 38                 sp = sp + 0x38
 27778: 32 00                    ret
      :                          @2030 [@dyn 298]
 27780: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 27783: 7b 10 30                 u64 [sp + 0x30] = ra
 27786: 7b 15 28                 u64 [sp + 0x28] = s0
 27789: 7b 16 20                 u64 [sp + 0x20] = s1
 27792: 82 79                    a2 = u64 [a0]
 27794: 64 85                    s0 = a1
 27796: 51 09 9c 00              jump @2041 if a2 == 0
      :                          @2031
 27800: 82 58 28                 a1 = u64 [s0 + 0x28]
 27803: 95 77 08                 a0 = a0 + 0x8
 27806: 7b 17                    u64 [sp] = a0
 27808: 82 57 20                 a0 = u64 [s0 + 0x20]
 27811: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27814: 33 08 84 04 01           a1 = 0x10484
 27819: 33 09 04                 a2 = 0x4
 27822: b4 a0 02 56 02           ra = 598, jump [a3]
      :                          @2032 [@dyn 299]
 27827: 7b 15 10                 u64 [sp + 0x10] = s0
 27830: 78 17 18                 u8 [sp + 0x18] = a0
 27833: 49 11 08                 u64 [sp + 8] = 0
 27836: 46 11 19                 u8 [sp + 25] = 0
 27839: 33 09 3c                 a2 = 0x3c
 27842: 95 17 08                 a0 = sp + 0x8
 27845: 64 18                    a1 = sp
 27847: 50 20 58 02 0f ab 02     ra = 600, jump @13924
      :                          @2033 [@dyn 300]
 27854: 82 17 08                 a0 = u64 [sp + 0x8]
 27857: 7c 18 18                 a1 = u8 [sp + 0x18]
 27860: 51 07 7b                 jump @2042 if a0 == 0
      :                          @2034
 27863: 33 05 01                 s0 = 0x1
 27866: 52 08 78                 jump @2043 if a1 != 0
      :                          @2035
 27869: 7c 18 19                 a1 = u8 [sp + 0x19]
 27872: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 27875: 8e 77                    a0 = a0 >u 0
 27877: 82 16 10                 s1 = u64 [sp + 0x10]
 27880: 88 88 01                 a1 = a1 <u 0x1
 27883: d4 87 07                 a0 = a0 | a1
 27886: 52 07 28                 jump @2039 if a0 != 0
      :                          @2036
 27889: 7c 67 34                 a0 = u8 [s1 + 0x34]
 27892: 84 77 04                 a0 = a0 & 0x4
 27895: 52 07 1f                 jump @2039 if a0 != 0
      :                          @2037
 27898: 82 68 28                 a1 = u64 [s1 + 0x28]
 27901: 82 67 20                 a0 = u64 [s1 + 0x20]
 27904: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27907: 33 08 47 30 01           a1 = 0x13047
 27912: 33 09 01                 a2 = 0x1
 27915: 33 05 01                 s0 = 0x1
 27918: b4 a0 02 5a 02           ra = 602, jump [a3]
      :                          @2038 [@dyn 301]
 27923: 52 07 3f                 jump @2043 if a0 != 0
      :                          @2039
 27926: 82 68 28                 a1 = u64 [s1 + 0x28]
 27929: 82 67 20                 a0 = u64 [s1 + 0x20]
 27932: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27935: 33 08 f1 2f 01           a1 = 0x12ff1
 27940: 33 09 01                 a2 = 0x1
 27943: b4 a0 02 5c 02           ra = 604, jump [a3]
      :                          @2040 [@dyn 302]
 27948: 64 75                    s0 = a0
 27950: 28 24                    jump @2043
      :                          @2041
 27952: 82 58 28                 a1 = u64 [s0 + 0x28]
 27955: 82 57 20                 a0 = u64 [s0 + 0x20]
 27958: 82 8c 18                 a5 = u64 [a1 + 0x18]
 27961: 33 08 a0 04 01           a1 = 0x104a0
 27966: 33 09 04                 a2 = 0x4
 27969: 82 10 30                 ra = u64 [sp + 0x30]
 27972: 82 15 28                 s0 = u64 [sp + 0x28]
 27975: 82 16 20                 s1 = u64 [sp + 0x20]
 27978: 95 11 38                 sp = sp + 0x38
 27981: 32 0c                    jump [a5]
      :                          @2042
 27983: 8e 85                    s0 = a1 >u 0
 27985: 01                       fallthrough
      :                          @2043
 27986: 64 57                    a0 = s0
 27988: 82 10 30                 ra = u64 [sp + 0x30]
 27991: 82 15 28                 s0 = u64 [sp + 0x28]
 27994: 82 16 20                 s1 = u64 [sp + 0x20]
 27997: 95 11 38                 sp = sp + 0x38
 28000: 32 00                    ret
      :                          @2044 [@dyn 303]
 28002: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 28005: 7b 10 30                 u64 [sp + 0x30] = ra
 28008: 7b 15 28                 u64 [sp + 0x28] = s0
 28011: 7b 16 20                 u64 [sp + 0x20] = s1
 28014: 82 79                    a2 = u64 [a0]
 28016: 64 85                    s0 = a1
 28018: 51 09 9c 00              jump @2055 if a2 == 0
      :                          @2045
 28022: 82 58 28                 a1 = u64 [s0 + 0x28]
 28025: 95 77 08                 a0 = a0 + 0x8
 28028: 7b 17                    u64 [sp] = a0
 28030: 82 57 20                 a0 = u64 [s0 + 0x20]
 28033: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28036: 33 08 84 04 01           a1 = 0x10484
 28041: 33 09 04                 a2 = 0x4
 28044: b4 a0 02 60 02           ra = 608, jump [a3]
      :                          @2046 [@dyn 304]
 28049: 7b 15 10                 u64 [sp + 0x10] = s0
 28052: 78 17 18                 u8 [sp + 0x18] = a0
 28055: 49 11 08                 u64 [sp + 8] = 0
 28058: 46 11 19                 u8 [sp + 25] = 0
 28061: 33 09 48                 a2 = 0x48
 28064: 95 17 08                 a0 = sp + 0x8
 28067: 64 18                    a1 = sp
 28069: 50 20 62 02 31 aa 02     ra = 610, jump @13924
      :                          @2047 [@dyn 305]
 28076: 82 17 08                 a0 = u64 [sp + 0x8]
 28079: 7c 18 18                 a1 = u8 [sp + 0x18]
 28082: 51 07 7b                 jump @2056 if a0 == 0
      :                          @2048
 28085: 33 05 01                 s0 = 0x1
 28088: 52 08 78                 jump @2057 if a1 != 0
      :                          @2049
 28091: 7c 18 19                 a1 = u8 [sp + 0x19]
 28094: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28097: 8e 77                    a0 = a0 >u 0
 28099: 82 16 10                 s1 = u64 [sp + 0x10]
 28102: 88 88 01                 a1 = a1 <u 0x1
 28105: d4 87 07                 a0 = a0 | a1
 28108: 52 07 28                 jump @2053 if a0 != 0
      :                          @2050
 28111: 7c 67 34                 a0 = u8 [s1 + 0x34]
 28114: 84 77 04                 a0 = a0 & 0x4
 28117: 52 07 1f                 jump @2053 if a0 != 0
      :                          @2051
 28120: 82 68 28                 a1 = u64 [s1 + 0x28]
 28123: 82 67 20                 a0 = u64 [s1 + 0x20]
 28126: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28129: 33 08 47 30 01           a1 = 0x13047
 28134: 33 09 01                 a2 = 0x1
 28137: 33 05 01                 s0 = 0x1
 28140: b4 a0 02 64 02           ra = 612, jump [a3]
      :                          @2052 [@dyn 306]
 28145: 52 07 3f                 jump @2057 if a0 != 0
      :                          @2053
 28148: 82 68 28                 a1 = u64 [s1 + 0x28]
 28151: 82 67 20                 a0 = u64 [s1 + 0x20]
 28154: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28157: 33 08 f1 2f 01           a1 = 0x12ff1
 28162: 33 09 01                 a2 = 0x1
 28165: b4 a0 02 66 02           ra = 614, jump [a3]
      :                          @2054 [@dyn 307]
 28170: 64 75                    s0 = a0
 28172: 28 24                    jump @2057
      :                          @2055
 28174: 82 58 28                 a1 = u64 [s0 + 0x28]
 28177: 82 57 20                 a0 = u64 [s0 + 0x20]
 28180: 82 8c 18                 a5 = u64 [a1 + 0x18]
 28183: 33 08 a0 04 01           a1 = 0x104a0
 28188: 33 09 04                 a2 = 0x4
 28191: 82 10 30                 ra = u64 [sp + 0x30]
 28194: 82 15 28                 s0 = u64 [sp + 0x28]
 28197: 82 16 20                 s1 = u64 [sp + 0x20]
 28200: 95 11 38                 sp = sp + 0x38
 28203: 32 0c                    jump [a5]
      :                          @2056
 28205: 8e 85                    s0 = a1 >u 0
 28207: 01                       fallthrough
      :                          @2057
 28208: 64 57                    a0 = s0
 28210: 82 10 30                 ra = u64 [sp + 0x30]
 28213: 82 15 28                 s0 = u64 [sp + 0x28]
 28216: 82 16 20                 s1 = u64 [sp + 0x20]
 28219: 95 11 38                 sp = sp + 0x38
 28222: 32 00                    ret
      :                          @2058 [@dyn 308]
 28224: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 28227: 7b 10 30                 u64 [sp + 0x30] = ra
 28230: 7b 15 28                 u64 [sp + 0x28] = s0
 28233: 7b 16 20                 u64 [sp + 0x20] = s1
 28236: 82 79                    a2 = u64 [a0]
 28238: 64 85                    s0 = a1
 28240: 51 09 9c 00              jump @2069 if a2 == 0
      :                          @2059
 28244: 82 58 28                 a1 = u64 [s0 + 0x28]
 28247: 95 77 08                 a0 = a0 + 0x8
 28250: 7b 17                    u64 [sp] = a0
 28252: 82 57 20                 a0 = u64 [s0 + 0x20]
 28255: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28258: 33 08 84 04 01           a1 = 0x10484
 28263: 33 09 04                 a2 = 0x4
 28266: b4 a0 02 6a 02           ra = 618, jump [a3]
      :                          @2060 [@dyn 309]
 28271: 7b 15 10                 u64 [sp + 0x10] = s0
 28274: 78 17 18                 u8 [sp + 0x18] = a0
 28277: 49 11 08                 u64 [sp + 8] = 0
 28280: 46 11 19                 u8 [sp + 25] = 0
 28283: 33 09 0c                 a2 = 0xc
 28286: 95 17 08                 a0 = sp + 0x8
 28289: 64 18                    a1 = sp
 28291: 50 20 6c 02 53 a9 02     ra = 620, jump @13924
      :                          @2061 [@dyn 310]
 28298: 82 17 08                 a0 = u64 [sp + 0x8]
 28301: 7c 18 18                 a1 = u8 [sp + 0x18]
 28304: 51 07 7b                 jump @2070 if a0 == 0
      :                          @2062
 28307: 33 05 01                 s0 = 0x1
 28310: 52 08 78                 jump @2071 if a1 != 0
      :                          @2063
 28313: 7c 18 19                 a1 = u8 [sp + 0x19]
 28316: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28319: 8e 77                    a0 = a0 >u 0
 28321: 82 16 10                 s1 = u64 [sp + 0x10]
 28324: 88 88 01                 a1 = a1 <u 0x1
 28327: d4 87 07                 a0 = a0 | a1
 28330: 52 07 28                 jump @2067 if a0 != 0
      :                          @2064
 28333: 7c 67 34                 a0 = u8 [s1 + 0x34]
 28336: 84 77 04                 a0 = a0 & 0x4
 28339: 52 07 1f                 jump @2067 if a0 != 0
      :                          @2065
 28342: 82 68 28                 a1 = u64 [s1 + 0x28]
 28345: 82 67 20                 a0 = u64 [s1 + 0x20]
 28348: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28351: 33 08 47 30 01           a1 = 0x13047
 28356: 33 09 01                 a2 = 0x1
 28359: 33 05 01                 s0 = 0x1
 28362: b4 a0 02 6e 02           ra = 622, jump [a3]
      :                          @2066 [@dyn 311]
 28367: 52 07 3f                 jump @2071 if a0 != 0
      :                          @2067
 28370: 82 68 28                 a1 = u64 [s1 + 0x28]
 28373: 82 67 20                 a0 = u64 [s1 + 0x20]
 28376: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28379: 33 08 f1 2f 01           a1 = 0x12ff1
 28384: 33 09 01                 a2 = 0x1
 28387: b4 a0 02 70 02           ra = 624, jump [a3]
      :                          @2068 [@dyn 312]
 28392: 64 75                    s0 = a0
 28394: 28 24                    jump @2071
      :                          @2069
 28396: 82 58 28                 a1 = u64 [s0 + 0x28]
 28399: 82 57 20                 a0 = u64 [s0 + 0x20]
 28402: 82 8c 18                 a5 = u64 [a1 + 0x18]
 28405: 33 08 a0 04 01           a1 = 0x104a0
 28410: 33 09 04                 a2 = 0x4
 28413: 82 10 30                 ra = u64 [sp + 0x30]
 28416: 82 15 28                 s0 = u64 [sp + 0x28]
 28419: 82 16 20                 s1 = u64 [sp + 0x20]
 28422: 95 11 38                 sp = sp + 0x38
 28425: 32 0c                    jump [a5]
      :                          @2070
 28427: 8e 85                    s0 = a1 >u 0
 28429: 01                       fallthrough
      :                          @2071
 28430: 64 57                    a0 = s0
 28432: 82 10 30                 ra = u64 [sp + 0x30]
 28435: 82 15 28                 s0 = u64 [sp + 0x28]
 28438: 82 16 20                 s1 = u64 [sp + 0x20]
 28441: 95 11 38                 sp = sp + 0x38
 28444: 32 00                    ret
      :                          @2072 [@dyn 313]
 28446: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 28449: 7b 10 30                 u64 [sp + 0x30] = ra
 28452: 7b 15 28                 u64 [sp + 0x28] = s0
 28455: 7b 16 20                 u64 [sp + 0x20] = s1
 28458: 82 79                    a2 = u64 [a0]
 28460: 64 85                    s0 = a1
 28462: 51 09 9c 00              jump @2083 if a2 == 0
      :                          @2073
 28466: 82 58 28                 a1 = u64 [s0 + 0x28]
 28469: 95 77 08                 a0 = a0 + 0x8
 28472: 7b 17                    u64 [sp] = a0
 28474: 82 57 20                 a0 = u64 [s0 + 0x20]
 28477: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28480: 33 08 84 04 01           a1 = 0x10484
 28485: 33 09 04                 a2 = 0x4
 28488: b4 a0 02 74 02           ra = 628, jump [a3]
      :                          @2074 [@dyn 314]
 28493: 7b 15 10                 u64 [sp + 0x10] = s0
 28496: 78 17 18                 u8 [sp + 0x18] = a0
 28499: 49 11 08                 u64 [sp + 8] = 0
 28502: 46 11 19                 u8 [sp + 25] = 0
 28505: 33 09 2a                 a2 = 0x2a
 28508: 95 17 08                 a0 = sp + 0x8
 28511: 64 18                    a1 = sp
 28513: 50 20 76 02 75 a8 02     ra = 630, jump @13924
      :                          @2075 [@dyn 315]
 28520: 82 17 08                 a0 = u64 [sp + 0x8]
 28523: 7c 18 18                 a1 = u8 [sp + 0x18]
 28526: 51 07 7b                 jump @2084 if a0 == 0
      :                          @2076
 28529: 33 05 01                 s0 = 0x1
 28532: 52 08 78                 jump @2085 if a1 != 0
      :                          @2077
 28535: 7c 18 19                 a1 = u8 [sp + 0x19]
 28538: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28541: 8e 77                    a0 = a0 >u 0
 28543: 82 16 10                 s1 = u64 [sp + 0x10]
 28546: 88 88 01                 a1 = a1 <u 0x1
 28549: d4 87 07                 a0 = a0 | a1
 28552: 52 07 28                 jump @2081 if a0 != 0
      :                          @2078
 28555: 7c 67 34                 a0 = u8 [s1 + 0x34]
 28558: 84 77 04                 a0 = a0 & 0x4
 28561: 52 07 1f                 jump @2081 if a0 != 0
      :                          @2079
 28564: 82 68 28                 a1 = u64 [s1 + 0x28]
 28567: 82 67 20                 a0 = u64 [s1 + 0x20]
 28570: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28573: 33 08 47 30 01           a1 = 0x13047
 28578: 33 09 01                 a2 = 0x1
 28581: 33 05 01                 s0 = 0x1
 28584: b4 a0 02 78 02           ra = 632, jump [a3]
      :                          @2080 [@dyn 316]
 28589: 52 07 3f                 jump @2085 if a0 != 0
      :                          @2081
 28592: 82 68 28                 a1 = u64 [s1 + 0x28]
 28595: 82 67 20                 a0 = u64 [s1 + 0x20]
 28598: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28601: 33 08 f1 2f 01           a1 = 0x12ff1
 28606: 33 09 01                 a2 = 0x1
 28609: b4 a0 02 7a 02           ra = 634, jump [a3]
      :                          @2082 [@dyn 317]
 28614: 64 75                    s0 = a0
 28616: 28 24                    jump @2085
      :                          @2083
 28618: 82 58 28                 a1 = u64 [s0 + 0x28]
 28621: 82 57 20                 a0 = u64 [s0 + 0x20]
 28624: 82 8c 18                 a5 = u64 [a1 + 0x18]
 28627: 33 08 a0 04 01           a1 = 0x104a0
 28632: 33 09 04                 a2 = 0x4
 28635: 82 10 30                 ra = u64 [sp + 0x30]
 28638: 82 15 28                 s0 = u64 [sp + 0x28]
 28641: 82 16 20                 s1 = u64 [sp + 0x20]
 28644: 95 11 38                 sp = sp + 0x38
 28647: 32 0c                    jump [a5]
      :                          @2084
 28649: 8e 85                    s0 = a1 >u 0
 28651: 01                       fallthrough
      :                          @2085
 28652: 64 57                    a0 = s0
 28654: 82 10 30                 ra = u64 [sp + 0x30]
 28657: 82 15 28                 s0 = u64 [sp + 0x28]
 28660: 82 16 20                 s1 = u64 [sp + 0x20]
 28663: 95 11 38                 sp = sp + 0x38
 28666: 32 00                    ret
      :                          @2086 [@dyn 318]
 28668: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 28671: 7b 10 30                 u64 [sp + 0x30] = ra
 28674: 7b 15 28                 u64 [sp + 0x28] = s0
 28677: 7b 16 20                 u64 [sp + 0x20] = s1
 28680: 82 79                    a2 = u64 [a0]
 28682: 64 85                    s0 = a1
 28684: 51 09 9c 00              jump @2097 if a2 == 0
      :                          @2087
 28688: 82 58 28                 a1 = u64 [s0 + 0x28]
 28691: 95 77 08                 a0 = a0 + 0x8
 28694: 7b 17                    u64 [sp] = a0
 28696: 82 57 20                 a0 = u64 [s0 + 0x20]
 28699: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28702: 33 08 84 04 01           a1 = 0x10484
 28707: 33 09 04                 a2 = 0x4
 28710: b4 a0 02 7e 02           ra = 638, jump [a3]
      :                          @2088 [@dyn 319]
 28715: 7b 15 10                 u64 [sp + 0x10] = s0
 28718: 78 17 18                 u8 [sp + 0x18] = a0
 28721: 49 11 08                 u64 [sp + 8] = 0
 28724: 46 11 19                 u8 [sp + 25] = 0
 28727: 33 09 4c                 a2 = 0x4c
 28730: 95 17 08                 a0 = sp + 0x8
 28733: 64 18                    a1 = sp
 28735: 50 20 80 02 97 a7 02     ra = 640, jump @13924
      :                          @2089 [@dyn 320]
 28742: 82 17 08                 a0 = u64 [sp + 0x8]
 28745: 7c 18 18                 a1 = u8 [sp + 0x18]
 28748: 51 07 7b                 jump @2098 if a0 == 0
      :                          @2090
 28751: 33 05 01                 s0 = 0x1
 28754: 52 08 78                 jump @2099 if a1 != 0
      :                          @2091
 28757: 7c 18 19                 a1 = u8 [sp + 0x19]
 28760: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28763: 8e 77                    a0 = a0 >u 0
 28765: 82 16 10                 s1 = u64 [sp + 0x10]
 28768: 88 88 01                 a1 = a1 <u 0x1
 28771: d4 87 07                 a0 = a0 | a1
 28774: 52 07 28                 jump @2095 if a0 != 0
      :                          @2092
 28777: 7c 67 34                 a0 = u8 [s1 + 0x34]
 28780: 84 77 04                 a0 = a0 & 0x4
 28783: 52 07 1f                 jump @2095 if a0 != 0
      :                          @2093
 28786: 82 68 28                 a1 = u64 [s1 + 0x28]
 28789: 82 67 20                 a0 = u64 [s1 + 0x20]
 28792: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28795: 33 08 47 30 01           a1 = 0x13047
 28800: 33 09 01                 a2 = 0x1
 28803: 33 05 01                 s0 = 0x1
 28806: b4 a0 02 82 02           ra = 642, jump [a3]
      :                          @2094 [@dyn 321]
 28811: 52 07 3f                 jump @2099 if a0 != 0
      :                          @2095
 28814: 82 68 28                 a1 = u64 [s1 + 0x28]
 28817: 82 67 20                 a0 = u64 [s1 + 0x20]
 28820: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28823: 33 08 f1 2f 01           a1 = 0x12ff1
 28828: 33 09 01                 a2 = 0x1
 28831: b4 a0 02 84 02           ra = 644, jump [a3]
      :                          @2096 [@dyn 322]
 28836: 64 75                    s0 = a0
 28838: 28 24                    jump @2099
      :                          @2097
 28840: 82 58 28                 a1 = u64 [s0 + 0x28]
 28843: 82 57 20                 a0 = u64 [s0 + 0x20]
 28846: 82 8c 18                 a5 = u64 [a1 + 0x18]
 28849: 33 08 a0 04 01           a1 = 0x104a0
 28854: 33 09 04                 a2 = 0x4
 28857: 82 10 30                 ra = u64 [sp + 0x30]
 28860: 82 15 28                 s0 = u64 [sp + 0x28]
 28863: 82 16 20                 s1 = u64 [sp + 0x20]
 28866: 95 11 38                 sp = sp + 0x38
 28869: 32 0c                    jump [a5]
      :                          @2098
 28871: 8e 85                    s0 = a1 >u 0
 28873: 01                       fallthrough
      :                          @2099
 28874: 64 57                    a0 = s0
 28876: 82 10 30                 ra = u64 [sp + 0x30]
 28879: 82 15 28                 s0 = u64 [sp + 0x28]
 28882: 82 16 20                 s1 = u64 [sp + 0x20]
 28885: 95 11 38                 sp = sp + 0x38
 28888: 32 00                    ret
      :                          @2100
 28890: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 28893: 7b 10 20                 u64 [sp + 0x20] = ra
 28896: 7b 15 18                 u64 [sp + 0x18] = s0
 28899: 7b 16 10                 u64 [sp + 0x10] = s1
 28902: 64 95                    s0 = a2
 28904: 7b 17 08                 u64 [sp + 0x8] = a0
 28907: 51 09 5e                 jump @2108 if a2 == 0
      :                          @2101
 28910: 98 57 3c                 a0 = s0 >> 0x3c
 28913: 52 07 7f                 jump @2111 if a0 != 0
      :                          @2102
 28916: 88 72 01                 t0 = a0 <u 0x1
 28919: 7b 15                    u64 [sp] = s0
 28921: 97 59 03                 a2 = s0 << 0x3
 28924: 97 22 03                 t0 = t0 << 0x3
 28927: 33 04 c0 22 03           t2 = 0x322c0
 28932: 33 03 00 00 01           t1 = 0x10000
 28937: c8 34 00                 ra = t2 + t1
 28940: 01                       fallthrough
      :                          @2103
 28941: 82 05                    s0 = u64 [ra]
 28943: c8 95 06                 s1 = s0 + a2
 28946: ac 56 5d                 jump @2110 if s1 <u s0
      :                          @2104
 28949: c8 26 07                 a0 = s1 + t0
 28952: d8 67 0b                 a4 = a0 <u s1
 28955: d8 73 07                 a0 = t1 <u a0
 28958: d4 b7 07                 a0 = a0 | a4
 28961: 52 07 4e                 jump @2110 if a0 != 0
      :                          @2105
 28964: c9 64 07                 a0 = t2 - s1
 28967: c8 37 07                 a0 = a0 + t1
 28970: 84 7b 07                 a4 = a0 & 0x7
 28973: c8 b6 06                 s1 = s1 + a4
 28976: 01                       fallthrough
      :                          @2106
 28977: 82 0a                    a3 = u64 [ra]
 28979: ab 5a da                 jump @2103 if a3 != s0
      :                          @2107
 28982: 7b 06                    u64 [ra] = s1
 28984: 33 0c                    a5 = 0
 28986: c9 b7 06                 s1 = a0 - a4
 28989: 82 15                    s0 = u64 [sp]
 28991: 64 67                    a0 = s1
 28993: 33 00 86 02              ra = 0x286
 28997: 28 e7 97 02              jump @13621
      :                          @2108
 29001: 33 06 08                 s1 = 0x8
 29004: 33 07 08                 a0 = 0x8
 29007: 50 20 86 02 dd 97 02     ra = 646, jump @13621
      :                          @2109 [@dyn 323]
 29014: 82 17 08                 a0 = u64 [sp + 0x8]
 29017: 7b 75                    u64 [a0] = s0
 29019: 7b 76 08                 u64 [a0 + 0x8] = s1
 29022: 7b 75 10                 u64 [a0 + 0x10] = s0
 29025: 82 10 20                 ra = u64 [sp + 0x20]
 29028: 82 15 18                 s0 = u64 [sp + 0x18]
 29031: 82 16 10                 s1 = u64 [sp + 0x10]
 29034: 95 11 28                 sp = sp + 0x28
 29037: 32 00                    ret
      :                          @2110
 29039: 00                       trap
      :                          @2111
 29040: 00                       trap
      :                          @2112
 29041: 95 11 98                 sp = sp + 0xffffffffffffff98
 29044: 7b 10 60                 u64 [sp + 0x60] = ra
 29047: 7b 15 58                 u64 [sp + 0x58] = s0
 29050: 7b 16 50                 u64 [sp + 0x50] = s1
 29053: 51 09 33 01              jump @2133 if a2 == 0
      :                          @2113
 29057: 7b 17                    u64 [sp] = a0
 29059: 3a 07 30 10 03           a0 = u64 [0x31030]
 29064: ae 79 47 01              jump @2136 if a2 >=u a0
      :                          @2114
 29068: 64 80                    ra = a1
 29070: d8 79 02                 t0 = a2 <u a0
 29073: 7b 19 08                 u64 [sp + 0x8] = a2
 29076: 96 97 18                 a0 = a2 * 0x18
 29079: 97 22 03                 t0 = t0 << 0x3
 29082: 33 04 c0 22 03           t2 = 0x322c0
 29087: 33 03 00 00 01           t1 = 0x10000
 29092: c8 34 0b                 a4 = t2 + t1
 29095: 01                       fallthrough
      :                          @2115
 29096: 82 b8                    a1 = u64 [a4]
 29098: c8 78 05                 s0 = a1 + a0
 29101: ac 85 21 01              jump @2135 if s0 <u a1
      :                          @2116
 29105: c8 25 0a                 a3 = s0 + t0
 29108: d8 5a 0c                 a5 = a3 <u s0
 29111: d8 a3 0a                 a3 = t1 <u a3
 29114: d4 ca 0a                 a3 = a3 | a5
 29117: 52 0a 11 01              jump @2135 if a3 != 0
      :                          @2117
 29121: c9 54 0a                 a3 = t2 - s0
 29124: c8 3a 0a                 a3 = a3 + t1
 29127: 84 ac 07                 a5 = a3 & 0x7
 29130: c8 c5 05                 s0 = s0 + a5
 29133: 01                       fallthrough
      :                          @2118
 29134: 82 b6                    s1 = u64 [a4]
 29136: ab 86 d8                 jump @2115 if s1 != a1
      :                          @2119
 29139: 7b b5                    u64 [a4] = s0
 29141: 33 02                    t0 = 0
 29143: c9 ca 0a                 a3 = a3 - a5
 29146: 7b 1a 18                 u64 [sp + 0x18] = a3
 29149: 82 1a 08                 a3 = u64 [sp + 0x8]
 29152: 96 a7 18                 a0 = a3 * 0x18
 29155: c8 07 07                 a0 = a0 + ra
 29158: 7b 17 10                 u64 [sp + 0x10] = a0
 29161: 33 07 c0 22 03           a0 = 0x322c0
 29166: 7b 17 40                 u64 [sp + 0x40] = a0
 29169: 95 74 00 00 01           t2 = a0 + 0x10000
 29174: 7b 1a 38                 u64 [sp + 0x38] = a3
 29177: 7b 14 48                 u64 [sp + 0x48] = t2
 29180: 28 4c                    jump @2123
      :                          @2120
 29182: 33 09                    a2 = 0
 29184: 33 0a 08                 a3 = 0x8
 29187: 01                       fallthrough
      :                          @2121
 29188: 7b 1a 20                 u64 [sp + 0x20] = a3
 29191: 82 15 38                 s0 = u64 [sp + 0x38]
 29194: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 29197: 95 00 18                 ra = ra + 0x18
 29200: 7b 10 28                 u64 [sp + 0x28] = ra
 29203: 95 27 01                 a0 = t0 + 0x1
 29206: 7b 17 38                 u64 [sp + 0x38] = a0
 29209: 96 27 18                 a0 = t0 * 0x18
 29212: 82 16 18                 s1 = u64 [sp + 0x18]
 29215: c8 76 06                 s1 = s1 + a0
 29218: 64 a7                    a0 = a3
 29220: 50 20 88 02 08 97 02     ra = 648, jump @13621
      :                          @2122 [@dyn 324]
 29227: 82 10 28                 ra = u64 [sp + 0x28]
 29230: 82 17 30                 a0 = u64 [sp + 0x30]
 29233: 7b 67                    u64 [s1] = a0
 29235: 82 18 20                 a1 = u64 [sp + 0x20]
 29238: 7b 68 08                 u64 [s1 + 0x8] = a1
 29241: 7b 67 10                 u64 [s1 + 0x10] = a0
 29244: 82 12 38                 t0 = u64 [sp + 0x38]
 29247: 82 14 48                 t2 = u64 [sp + 0x48]
 29250: 7b 15 38                 u64 [sp + 0x38] = s0
 29253: 51 05 64                 jump @2132 if s0 == 0
      :                          @2123
 29256: 82 17 10                 a0 = u64 [sp + 0x10]
 29259: aa 70 5e                 jump @2132 if ra == a0
      :                          @2124
 29262: 82 0b 10                 a4 = u64 [ra + 0x10]
 29265: 82 08 08                 a1 = u64 [ra + 0x8]
 29268: 7b 1b 30                 u64 [sp + 0x30] = a4
 29271: 51 0b a7                 jump @2120 if a4 == 0
      :                          @2125
 29274: 98 b9 3c                 a2 = a4 >> 0x3c
 29277: 52 09 72                 jump @2136 if a2 != 0
      :                          @2126
 29280: 88 9a 01                 a3 = a2 <u 0x1
 29283: 97 b9 03                 a2 = a4 << 0x3
 29286: 97 a3 03                 t1 = a3 << 0x3
 29289: 01                       fallthrough
      :                          @2127
 29290: 82 4b                    a4 = u64 [t2]
 29292: c8 9b 0c                 a5 = a4 + a2
 29295: ac bc 66 a5 02           jump @13923 if a5 <u a4
      :                          @2128
 29300: c8 3c 07                 a0 = a5 + t1
 29303: d8 c7 06                 s1 = a0 <u a5
 29306: 8e 77 00 00 01           a0 = a0 >u 0x10000
 29311: d4 67 07                 a0 = a0 | s1
 29314: 52 07 53 a5 02           jump @13923 if a0 != 0
      :                          @2129
 29319: 82 17 40                 a0 = u64 [sp + 0x40]
 29322: c9 c7 07                 a0 = a0 - a5
 29325: 95 77 00 00 01           a0 = a0 + 0x10000
 29330: 84 76 07                 s1 = a0 & 0x7
 29333: c8 6c 0c                 a5 = a5 + s1
 29336: 82 14 48                 t2 = u64 [sp + 0x48]
 29339: 01                       fallthrough
      :                          @2130
 29340: 82 45                    s0 = u64 [t2]
 29342: ab b5 cc                 jump @2127 if s0 != a4
      :                          @2131
 29345: 7b 4c                    u64 [t2] = a5
 29347: c9 67 0a                 a3 = a0 - s1
 29350: 28 5e ff                 jump @2121
      :                          @2132
 29353: 82 19 08                 a2 = u64 [sp + 0x8]
 29356: 82 17                    a0 = u64 [sp]
 29358: 28 07                    jump @2134
      :                          @2133
 29360: 49 11 18 08              u64 [sp + 24] = 0x8
 29364: 01                       fallthrough
      :                          @2134
 29365: 7b 79                    u64 [a0] = a2
 29367: 82 18 18                 a1 = u64 [sp + 0x18]
 29370: 7b 78 08                 u64 [a0 + 0x8] = a1
 29373: 7b 79 10                 u64 [a0 + 0x10] = a2
 29376: 82 10 60                 ra = u64 [sp + 0x60]
 29379: 82 15 58                 s0 = u64 [sp + 0x58]
 29382: 82 16 50                 s1 = u64 [sp + 0x50]
 29385: 95 11 68                 sp = sp + 0x68
 29388: 32 00                    ret
      :                          @2135
 29390: 00                       trap
      :                          @2136
 29391: 00                       trap
      :                          @2137
 29392: 33 04                    t2 = 0
 29394: aa 87 4b                 jump @2145 if a0 == a1
      :                          @2138
 29397: 33 0a                    a3 = 0
 29399: 14 09 ab aa aa aa aa aa aa aa a2 = 0xaaaaaaaaaaaaaaab
 29409: c9 78 08                 a1 = a1 - a0
 29412: d6 98 08                 a1 = a1 mulhu a2
 29415: 98 83 04                 t1 = a1 >> 0x4
 29418: 33 02 18                 t0 = 0x18
 29421: 28 0e                    jump @2141
      :                          @2139
 29423: 33 0b                    a4 = 0
 29425: 01                       fallthrough
      :                          @2140
 29426: 95 aa 01                 a3 = a3 + 0x1
 29429: c8 b4 04                 t2 = t2 + a4
 29432: aa 3a 25                 jump @2145 if a3 == t1
      :                          @2141
 29435: ca 2a 08                 a1 = a3 * t0
 29438: c8 78 08                 a1 = a1 + a0
 29441: 82 8c 10                 a5 = u64 [a1 + 0x10]
 29444: 51 0c eb                 jump @2139 if a5 == 0
      :                          @2142
 29447: 82 88 08                 a1 = u64 [a1 + 0x8]
 29450: 33 0b                    a4 = 0
 29452: 01                       fallthrough
      :                          @2143
 29453: 7c 89                    a2 = u8 [a1]
 29455: c8 9b 0b                 a4 = a4 + a2
 29458: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 29461: 95 88 01                 a1 = a1 + 0x1
 29464: 52 0c f5                 jump @2143 if a5 != 0
      :                          @2144
 29467: 28 d7                    jump @2140
      :                          @2145
 29469: 64 47                    a0 = t2
 29471: 32 00                    ret
      :                          @2146 [@dyn 325]
 29473: 33 07 d0 04 01           a0 = 0x104d0
 29478: 32 00                    ret
      :                          @2147
 29480: 51 08 8c 00              jump @2155 if a1 == 0
      :                          @2148
 29484: 33 0c c0 22 03           a5 = 0x322c0
 29489: 33 02 00 00 01           t0 = 0x10000
 29494: c8 2c 03                 t1 = a5 + t0
 29497: 01                       fallthrough
      :                          @2149
 29498: 82 39                    a2 = u64 [t1]
 29500: c8 89 0a                 a3 = a2 + a1
 29503: ac 9a 82 00              jump @2156 if a3 <u a2
      :                          @2150
 29507: 95 ab 01                 a4 = a3 + 0x1
 29510: 88 bc 01                 a5 = a4 <u 0x1
 29513: d8 b2 0b                 a4 = t0 <u a4
 29516: d4 cb 0b                 a4 = a4 | a5
 29519: 52 0b 72                 jump @2156 if a4 != 0
      :                          @2151
 29522: 82 3b                    a4 = u64 [t1]
 29524: ab 9b e6                 jump @2149 if a4 != a2
      :                          @2152
 29527: 7b 3a                    u64 [t1] = a3
 29529: 33 0c c0 22 03           a5 = 0x322c0
 29534: 95 cb 00 00 01           a4 = a5 + 0x10000
 29539: c9 ab 02                 t0 = a4 - a3
 29542: 95 ca 00 00 01           a3 = a5 + 0x10000
 29547: c9 9a 03                 t1 = a3 - a2
 29550: 9a 8b                    a4 = -a1
 29552: 33 04 78 12 03           t2 = 0x31278
 29557: 33 09 b0 04 01           a2 = 0x104b0
 29562: 01                       fallthrough
      :                          @2153
 29563: 3a 0c 78 12 03           a5 = u64 [0x31278]
 29568: 97 ca 0d                 a3 = a5 << 0xd
 29571: d3 ca 0a                 a3 = a3 ^ a5
 29574: 98 ac 07                 a5 = a3 >> 0x7
 29577: d3 ca 0a                 a3 = a3 ^ a5
 29580: 97 ac 11                 a5 = a3 << 0x11
 29583: d3 ac 0c                 a5 = a5 ^ a3
 29586: 3e 0c 78 12 03           u64 [0x31278] = a5
 29591: 84 aa 03                 a3 = a3 & 0x3
 29594: c8 9a 0a                 a3 = a3 + a2
 29597: 7c aa                    a3 = u8 [a3]
 29599: c8 b3 0c                 a5 = t1 + a4
 29602: 95 bb 01                 a4 = a4 + 0x1
 29605: 78 ca                    u8 [a5] = a3
 29607: 52 0b d4                 jump @2153 if a4 != 0
      :                          @2154
 29610: 7b 78                    u64 [a0] = a1
 29612: 7b 72 08                 u64 [a0 + 0x8] = t0
 29615: 7b 78 10                 u64 [a0 + 0x10] = a1
 29618: 32 00                    ret
      :                          @2155
 29620: 33 02 01                 t0 = 0x1
 29623: 7b 78                    u64 [a0] = a1
 29625: 7b 72 08                 u64 [a0 + 0x8] = t0
 29628: 7b 78 10                 u64 [a0 + 0x10] = a1
 29631: 32 00                    ret
      :                          @2156
 29633: 00                       trap
      :                          @2157
 29634: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 29637: 7b 10 10                 u64 [sp + 0x10] = ra
 29640: 7b 15 08                 u64 [sp + 0x8] = s0
 29643: 7b 16                    u64 [sp] = s1
 29645: 51 08 97 00              jump @2166 if a1 == 0
      :                          @2158
 29649: 97 82 03                 t0 = a1 << 0x3
 29652: 33 04 c0 22 03           t2 = 0x322c0
 29657: 33 03 00 00 01           t1 = 0x10000
 29662: c8 34 00                 ra = t2 + t1
 29665: 01                       fallthrough
      :                          @2159
 29666: 82 0b                    a4 = u64 [ra]
 29668: c8 2b 09                 a2 = a4 + t0
 29671: ac b9 96 00              jump @2168 if a2 <u a4
      :                          @2160
 29675: 95 96 08                 s1 = a2 + 0x8
 29678: d8 96 05                 s0 = s1 <u a2
 29681: d8 63 06                 s1 = t1 <u s1
 29684: d4 65 05                 s0 = s0 | s1
 29687: 52 05 86 00              jump @2168 if s0 != 0
      :                          @2161
 29691: c9 94 05                 s0 = t2 - a2
 29694: c8 35 05                 s0 = s0 + t1
 29697: 84 56 07                 s1 = s0 & 0x7
 29700: c8 69 09                 a2 = a2 + s1
 29703: 01                       fallthrough
      :                          @2162
 29704: 82 0a                    a3 = u64 [ra]
 29706: ab ba d8                 jump @2159 if a3 != a4
      :                          @2163
 29709: 7b 09                    u64 [ra] = a2
 29711: 3a 04 38 10 03           t2 = u64 [0x31038]
 29716: 3a 0b 40 10 03           a4 = u64 [0x31040]
 29721: c9 65 02                 t0 = s0 - s1
 29724: 33 0c 78 12 03           a5 = 0x31278
 29729: 33 03 64                 t1 = 0x64
 29732: 64 89                    a2 = a1
 29734: 64 2a                    a3 = t0
 29736: 01                       fallthrough
      :                          @2164
 29737: 3a 05 78 12 03           s0 = u64 [0x31278]
 29742: 97 56 0d                 s1 = s0 << 0xd
 29745: d3 65 05                 s0 = s0 ^ s1
 29748: 98 56 07                 s1 = s0 >> 0x7
 29751: d3 65 05                 s0 = s0 ^ s1
 29754: 97 56 11                 s1 = s0 << 0x11
 29757: d3 65 05                 s0 = s0 ^ s1
 29760: ca 45 06                 s1 = s0 * t2
 29763: 3e 05 78 12 03           u64 [0x31278] = s0
 29768: 98 65 02                 s0 = s1 >> 0x2
 29771: d6 b5 05                 s0 = s0 mulhu a4
 29774: 98 55 02                 s0 = s0 >> 0x2
 29777: ca 35 05                 s0 = s0 * t1
 29780: c9 56 06                 s1 = s1 - s0
 29783: 7b a6                    u64 [a3] = s1
 29785: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 29788: 95 aa 08                 a3 = a3 + 0x8
 29791: 52 09 ca                 jump @2164 if a2 != 0
      :                          @2165
 29794: 28 06                    jump @2167
      :                          @2166
 29796: 33 02 08                 t0 = 0x8
 29799: 01                       fallthrough
      :                          @2167
 29800: 7b 78                    u64 [a0] = a1
 29802: 7b 72 08                 u64 [a0 + 0x8] = t0
 29805: 7b 78 10                 u64 [a0 + 0x10] = a1
 29808: 82 10 10                 ra = u64 [sp + 0x10]
 29811: 82 15 08                 s0 = u64 [sp + 0x8]
 29814: 82 16                    s1 = u64 [sp]
 29816: 95 11 18                 sp = sp + 0x18
 29819: 32 00                    ret
      :                          @2168
 29821: 00                       trap
      :                          @2169
 29822: 51 08 86 00              jump @2177 if a1 == 0
      :                          @2170
 29826: 33 09 c0 22 03           a2 = 0x322c0
 29831: 33 0c c0 22 03           a5 = 0x322c0
 29836: 33 02 00 00 01           t0 = 0x10000
 29841: c8 2c 03                 t1 = a5 + t0
 29844: 01                       fallthrough
      :                          @2171
 29845: 82 3a                    a3 = u64 [t1]
 29847: c8 8a 04                 t2 = a3 + a1
 29850: ac a4 77                 jump @2178 if t2 <u a3
      :                          @2172
 29853: 95 4b 01                 a4 = t2 + 0x1
 29856: 88 bc 01                 a5 = a4 <u 0x1
 29859: d8 b2 0b                 a4 = t0 <u a4
 29862: d4 cb 0b                 a4 = a4 | a5
 29865: 52 0b 68                 jump @2178 if a4 != 0
      :                          @2173
 29868: 82 3b                    a4 = u64 [t1]
 29870: ab ab e7                 jump @2171 if a4 != a3
      :                          @2174
 29873: 7b 34                    u64 [t1] = t2
 29875: 33 0b c0 22 03           a4 = 0x322c0
 29880: 95 b9 00 00 01           a2 = a4 + 0x10000
 29885: c9 49 02                 t0 = a2 - t2
 29888: 95 bb 00 00 01           a4 = a4 + 0x10000
 29893: c9 ab 03                 t1 = a4 - a3
 29896: 9a 8b                    a4 = -a1
 29898: 33 0c 78 12 03           a5 = 0x31278
 29903: 01                       fallthrough
      :                          @2175
 29904: 3a 0a 78 12 03           a3 = u64 [0x31278]
 29909: 97 a9 0d                 a2 = a3 << 0xd
 29912: d3 a9 09                 a2 = a2 ^ a3
 29915: 98 9a 07                 a3 = a2 >> 0x7
 29918: d3 a9 09                 a2 = a2 ^ a3
 29921: 97 9a 11                 a3 = a2 << 0x11
 29924: d3 9a 0a                 a3 = a3 ^ a2
 29927: 3e 0a 78 12 03           u64 [0x31278] = a3
 29932: 84 99 03                 a2 = a2 & 0x3
 29935: c8 b3 0a                 a3 = t1 + a4
 29938: 95 bb 01                 a4 = a4 + 0x1
 29941: 78 a9                    u8 [a3] = a2
 29943: 52 0b d9                 jump @2175 if a4 != 0
      :                          @2176
 29946: 7b 78                    u64 [a0] = a1
 29948: 7b 72 08                 u64 [a0 + 0x8] = t0
 29951: 7b 78 10                 u64 [a0 + 0x10] = a1
 29954: 32 00                    ret
      :                          @2177
 29956: 33 02 01                 t0 = 0x1
 29959: 7b 78                    u64 [a0] = a1
 29961: 7b 72 08                 u64 [a0 + 0x8] = t0
 29964: 7b 78 10                 u64 [a0 + 0x10] = a1
 29967: 32 00                    ret
      :                          @2178
 29969: 00                       trap
      :                          @2179
 29970: 82 4b                    a4 = u64 [t2]
 29972: 95 bc 40                 a5 = a4 + 0x40
 29975: ac bc 81 01              jump @2184 if a5 <u a4
      :                          @2180
 29979: 95 c8 08                 a1 = a5 + 0x8
 29982: d8 c8 09                 a2 = a1 <u a5
 29985: d8 82 08                 a1 = t0 <u a1
 29988: d4 98 08                 a1 = a1 | a2
 29991: 52 08 71 01              jump @2184 if a1 != 0
      :                          @2181
 29995: c9 c3 08                 a1 = t1 - a5
 29998: c8 28 08                 a1 = a1 + t0
 30001: 84 89 07                 a2 = a1 & 0x7
 30004: c8 9c 0c                 a5 = a5 + a2
 30007: 01                       fallthrough
      :                          @2182
 30008: 82 4a                    a3 = u64 [t2]
 30010: ab ba d8                 jump @2179 if a3 != a4
      :                          @2183
 30013: 7b 4c                    u64 [t2] = a5
 30015: 33 0a 78 12 03           a3 = 0x31278
 30020: 3a 0b 78 12 03           a4 = u64 [0x31278]
 30025: c9 98 08                 a1 = a1 - a2
 30028: 97 b9 0d                 a2 = a4 << 0xd
 30031: d3 b9 09                 a2 = a2 ^ a4
 30034: 98 9b 07                 a4 = a2 >> 0x7
 30037: d3 b9 09                 a2 = a2 ^ a4
 30040: 97 9b 11                 a4 = a2 << 0x11
 30043: d3 9b 0b                 a4 = a4 ^ a2
 30046: 97 9c 02                 a5 = a2 << 0x2
 30049: c8 c9 09                 a2 = a2 + a5
 30052: 3e 0b 78 12 03           u64 [0x31278] = a4
 30057: 84 99 07                 a2 = a2 & 0x7
 30060: 7b 89                    u64 [a1] = a2
 30062: 3a 09 78 12 03           a2 = u64 [0x31278]
 30067: 97 9b 0d                 a4 = a2 << 0xd
 30070: d3 b9 09                 a2 = a2 ^ a4
 30073: 98 9b 07                 a4 = a2 >> 0x7
 30076: d3 b9 09                 a2 = a2 ^ a4
 30079: 97 9b 11                 a4 = a2 << 0x11
 30082: d3 9b 0b                 a4 = a4 ^ a2
 30085: 97 9c 02                 a5 = a2 << 0x2
 30088: c8 c9 09                 a2 = a2 + a5
 30091: 3e 0b 78 12 03           u64 [0x31278] = a4
 30096: 84 99 07                 a2 = a2 & 0x7
 30099: 7b 89 08                 u64 [a1 + 0x8] = a2
 30102: 3a 09 78 12 03           a2 = u64 [0x31278]
 30107: 97 9b 0d                 a4 = a2 << 0xd
 30110: d3 b9 09                 a2 = a2 ^ a4
 30113: 98 9b 07                 a4 = a2 >> 0x7
 30116: d3 b9 09                 a2 = a2 ^ a4
 30119: 97 9b 11                 a4 = a2 << 0x11
 30122: d3 9b 0b                 a4 = a4 ^ a2
 30125: 97 9c 02                 a5 = a2 << 0x2
 30128: c8 c9 09                 a2 = a2 + a5
 30131: 3e 0b 78 12 03           u64 [0x31278] = a4
 30136: 84 99 07                 a2 = a2 & 0x7
 30139: 7b 89 10                 u64 [a1 + 0x10] = a2
 30142: 3a 09 78 12 03           a2 = u64 [0x31278]
 30147: 97 9b 0d                 a4 = a2 << 0xd
 30150: d3 b9 09                 a2 = a2 ^ a4
 30153: 98 9b 07                 a4 = a2 >> 0x7
 30156: d3 b9 09                 a2 = a2 ^ a4
 30159: 97 9b 11                 a4 = a2 << 0x11
 30162: d3 9b 0b                 a4 = a4 ^ a2
 30165: 97 9c 02                 a5 = a2 << 0x2
 30168: c8 c9 09                 a2 = a2 + a5
 30171: 3e 0b 78 12 03           u64 [0x31278] = a4
 30176: 84 99 07                 a2 = a2 & 0x7
 30179: 7b 89 18                 u64 [a1 + 0x18] = a2
 30182: 3a 09 78 12 03           a2 = u64 [0x31278]
 30187: 97 9b 0d                 a4 = a2 << 0xd
 30190: d3 b9 09                 a2 = a2 ^ a4
 30193: 98 9b 07                 a4 = a2 >> 0x7
 30196: d3 b9 09                 a2 = a2 ^ a4
 30199: 97 9b 11                 a4 = a2 << 0x11
 30202: d3 9b 0b                 a4 = a4 ^ a2
 30205: 97 9c 02                 a5 = a2 << 0x2
 30208: c8 c9 09                 a2 = a2 + a5
 30211: 3e 0b 78 12 03           u64 [0x31278] = a4
 30216: 84 99 07                 a2 = a2 & 0x7
 30219: 7b 89 20                 u64 [a1 + 0x20] = a2
 30222: 3a 09 78 12 03           a2 = u64 [0x31278]
 30227: 97 9b 0d                 a4 = a2 << 0xd
 30230: d3 b9 09                 a2 = a2 ^ a4
 30233: 98 9b 07                 a4 = a2 >> 0x7
 30236: d3 b9 09                 a2 = a2 ^ a4
 30239: 97 9b 11                 a4 = a2 << 0x11
 30242: d3 9b 0b                 a4 = a4 ^ a2
 30245: 97 9c 02                 a5 = a2 << 0x2
 30248: c8 c9 09                 a2 = a2 + a5
 30251: 3e 0b 78 12 03           u64 [0x31278] = a4
 30256: 84 99 07                 a2 = a2 & 0x7
 30259: 7b 89 28                 u64 [a1 + 0x28] = a2
 30262: 3a 09 78 12 03           a2 = u64 [0x31278]
 30267: 97 9b 0d                 a4 = a2 << 0xd
 30270: d3 b9 09                 a2 = a2 ^ a4
 30273: 98 9b 07                 a4 = a2 >> 0x7
 30276: d3 b9 09                 a2 = a2 ^ a4
 30279: 97 9b 11                 a4 = a2 << 0x11
 30282: d3 9b 0b                 a4 = a4 ^ a2
 30285: 97 9c 02                 a5 = a2 << 0x2
 30288: c8 c9 09                 a2 = a2 + a5
 30291: 3e 0b 78 12 03           u64 [0x31278] = a4
 30296: 84 99 07                 a2 = a2 & 0x7
 30299: 7b 89 30                 u64 [a1 + 0x30] = a2
 30302: 3a 09 78 12 03           a2 = u64 [0x31278]
 30307: 97 9b 0d                 a4 = a2 << 0xd
 30310: d3 b9 09                 a2 = a2 ^ a4
 30313: 98 9b 07                 a4 = a2 >> 0x7
 30316: d3 b9 09                 a2 = a2 ^ a4
 30319: 97 9b 11                 a4 = a2 << 0x11
 30322: d3 9b 0b                 a4 = a4 ^ a2
 30325: 97 9c 02                 a5 = a2 << 0x2
 30328: c8 c9 09                 a2 = a2 + a5
 30331: 3e 0b 78 12 03           u64 [0x31278] = a4
 30336: 84 99 07                 a2 = a2 & 0x7
 30339: 7b 89 38                 u64 [a1 + 0x38] = a2
 30342: 33 09 08                 a2 = 0x8
 30345: 7b 79                    u64 [a0] = a2
 30347: 7b 78 08                 u64 [a0 + 0x8] = a1
 30350: 7b 79 10                 u64 [a0 + 0x10] = a2
 30353: 82 15                    s0 = u64 [sp]
 30355: c8 91 01                 sp = sp + a2
 30358: 32 00                    ret
      :                          @2184
 30360: 00                       trap
      :                          @2185
 30361: 82 9a                    a3 = u64 [a2]
 30363: 95 ab 20                 a4 = a3 + 0x20
 30366: ac ab 2e 01              jump @2203 if a4 <u a3
      :                          @2186
 30370: 95 b7 04                 a0 = a4 + 0x4
 30373: d8 b7 0c                 a5 = a0 <u a4
 30376: d8 72 07                 a0 = t0 <u a0
 30379: d4 c7 07                 a0 = a0 | a5
 30382: 52 07 1e 01              jump @2203 if a0 != 0
      :                          @2187
 30386: c9 b6 07                 a0 = s1 - a4
 30389: c8 27 07                 a0 = a0 + t0
 30392: 84 7c 03                 a5 = a0 & 0x3
 30395: c8 cb 0b                 a4 = a4 + a5
 30398: 01                       fallthrough
      :                          @2188
 30399: 82 95                    s0 = u64 [a2]
 30401: ab a5 d8                 jump @2185 if s0 != a3
      :                          @2189
 30404: 7b 9b                    u64 [a2] = a4
 30406: c9 c7 07                 a0 = a0 - a5
 30409: 48 07 41                 u32 [a0 + 0] = 0x41
 30412: 49 11 28 08              u64 [sp + 40] = 0x8
 30416: 7b 17 30                 u64 [sp + 0x30] = a0
 30419: 33 06 01                 s1 = 0x1
 30422: 7b 16 38                 u64 [sp + 0x38] = s1
 30425: 33 08 c8 05 01           a1 = 0x105c8
 30430: c8 68 0b                 a4 = a1 + s1
 30433: 33 05 04                 s0 = 0x4
 30436: 7b 18 10                 u64 [sp + 0x10] = a1
 30439: 95 80 1a                 ra = a1 + 0x1a
 30442: 33 02 df 00              t0 = 0xdf
 30446: 33 03 f0 00              t1 = 0xf0
 30450: 33 04 00 00 11           t2 = 0x110000
 30455: 7b 10 08                 u64 [sp + 0x8] = ra
 30458: 28 1e                    jump @2193
      :                          @2190
 30460: 95 bb 01                 a4 = a4 + 0x1
 30463: 01                       fallthrough
      :                          @2191
 30464: 82 18 28                 a1 = u64 [sp + 0x28]
 30467: aa 86 6c                 jump @2200 if s1 == a1
      :                          @2192
 30470: c8 57 08                 a1 = a0 + s0
 30473: 7a 8c                    u32 [a1] = a5
 30475: 95 66 01                 s1 = s1 + 0x1
 30478: 7b 16 38                 u64 [sp + 0x38] = s1
 30481: 95 55 04                 s0 = s0 + 0x4
 30484: aa 0b 97 00              jump @2202 if a4 == ra
      :                          @2193
 30488: 7d b8                    a1 = i8 [a4]
 30490: 84 8c ff 00              a5 = a1 & 0xff
 30494: 59 08 de                 jump @2190 if a1 >=s 0
      :                          @2194
 30497: 7c b9 01                 a2 = u8 [a4 + 0x1]
 30500: 84 c8 1f                 a1 = a5 & 0x1f
 30503: 84 99 3f                 a2 = a2 & 0x3f
 30506: ae c2 2f                 jump @2198 if t0 >=u a5
      :                          @2195
 30509: 7c ba 02                 a3 = u8 [a4 + 0x2]
 30512: 97 99 06                 a2 = a2 << 0x6
 30515: 84 aa 3f                 a3 = a3 & 0x3f
 30518: d4 a9 09                 a2 = a2 | a3
 30521: ac 3c 2b                 jump @2199 if a5 <u t1
      :                          @2196
 30524: 7c ba 03                 a3 = u8 [a4 + 0x3]
 30527: 97 88 3d                 a1 = a1 << 0x3d
 30530: 98 88 2b                 a1 = a1 >> 0x2b
 30533: 97 99 06                 a2 = a2 << 0x6
 30536: 84 aa 3f                 a3 = a3 & 0x3f
 30539: d4 a9 09                 a2 = a2 | a3
 30542: d4 89 0c                 a5 = a2 | a1
 30545: aa 4c 5a                 jump @2202 if a5 == t2
      :                          @2197
 30548: 95 bb 04                 a4 = a4 + 0x4
 30551: 28 a9                    jump @2191
      :                          @2198
 30553: 95 bb 02                 a4 = a4 + 0x2
 30556: 97 88 06                 a1 = a1 << 0x6
 30559: d4 98 0c                 a5 = a1 | a2
 30562: 28 9e                    jump @2191
      :                          @2199
 30564: 95 bb 03                 a4 = a4 + 0x3
 30567: 97 88 0c                 a1 = a1 << 0xc
 30570: d4 89 0c                 a5 = a2 | a1
 30573: 28 93                    jump @2191
      :                          @2200
 30575: 82 17 10                 a0 = u64 [sp + 0x10]
 30578: c9 b7 07                 a0 = a0 - a4
 30581: 95 77 1d                 a0 = a0 + 0x1d
 30584: 98 77 02                 a0 = a0 >> 0x2
 30587: 95 79 01                 a2 = a0 + 0x1
 30590: 95 17 28                 a0 = sp + 0x28
 30593: 64 68                    a1 = s1
 30595: 7b 1b 20                 u64 [sp + 0x20] = a4
 30598: 7b 1c 18                 u64 [sp + 0x18] = a5
 30601: 50 20 8c 02 77 dd        ra = 652, jump @1629
      :                          @2201 [@dyn 326]
 30607: 82 1c 18                 a5 = u64 [sp + 0x18]
 30610: 33 04 00 00 11           t2 = 0x110000
 30615: 33 03 f0 00              t1 = 0xf0
 30619: 33 02 df 00              t0 = 0xdf
 30623: 82 10 08                 ra = u64 [sp + 0x8]
 30626: 82 1b 20                 a4 = u64 [sp + 0x20]
 30629: 82 17 30                 a0 = u64 [sp + 0x30]
 30632: 28 5e ff                 jump @2192
      :                          @2202
 30635: 82 17 38                 a0 = u64 [sp + 0x38]
 30638: 82 18 30                 a1 = u64 [sp + 0x30]
 30641: 82 19 28                 a2 = u64 [sp + 0x28]
 30644: 82 1a                    a3 = u64 [sp]
 30646: 7b a7 10                 u64 [a3 + 0x10] = a0
 30649: 7b a8 08                 u64 [a3 + 0x8] = a1
 30652: 7b a9                    u64 [a3] = a2
 30654: 82 10 50                 ra = u64 [sp + 0x50]
 30657: 82 15 48                 s0 = u64 [sp + 0x48]
 30660: 82 16 40                 s1 = u64 [sp + 0x40]
 30663: 95 11 58                 sp = sp + 0x58
 30666: 32 00                    ret
      :                          @2203
 30668: 00                       trap
      :                          @2204
 30669: 82 ab                    a4 = u64 [a3]
 30671: 95 b8 08                 a1 = a4 + 0x8
 30674: ac b8 41 01              jump @2208 if a1 <u a4
      :                          @2205
 30678: 95 8c 01                 a5 = a1 + 0x1
 30681: 88 c9 01                 a2 = a5 <u 0x1
 30684: d8 c2 0c                 a5 = t0 <u a5
 30687: d4 c9 09                 a2 = a2 | a5
 30690: 52 09 31 01              jump @2208 if a2 != 0
      :                          @2206
 30694: 82 a9                    a2 = u64 [a3]
 30696: ab b9 e5                 jump @2204 if a2 != a4
      :                          @2207
 30699: 7b a8                    u64 [a3] = a1
 30701: 33 0c                    a5 = 0
 30703: 3a 0a 78 12 03           a3 = u64 [0x31278]
 30708: 33 0b c0 22 04           a4 = 0x422c0
 30713: c9 8b 08                 a1 = a4 - a1
 30716: 97 ab 0d                 a4 = a3 << 0xd
 30719: d3 ba 0a                 a3 = a3 ^ a4
 30722: 98 ab 07                 a4 = a3 >> 0x7
 30725: d3 ba 0a                 a3 = a3 ^ a4
 30728: 97 ab 11                 a4 = a3 << 0x11
 30731: d3 ab 0b                 a4 = a4 ^ a3
 30734: 3e 0b 78 12 03           u64 [0x31278] = a4
 30739: 84 aa 01                 a3 = a3 & 0x1
 30742: 78 8a                    u8 [a1] = a3
 30744: 3a 0a 78 12 03           a3 = u64 [0x31278]
 30749: 97 ab 0d                 a4 = a3 << 0xd
 30752: d3 ba 0a                 a3 = a3 ^ a4
 30755: 98 ab 07                 a4 = a3 >> 0x7
 30758: d3 ba 0a                 a3 = a3 ^ a4
 30761: 97 ab 11                 a4 = a3 << 0x11
 30764: d3 ab 0b                 a4 = a4 ^ a3
 30767: 3e 0b 78 12 03           u64 [0x31278] = a4
 30772: 84 aa 01                 a3 = a3 & 0x1
 30775: 78 8a 01                 u8 [a1 + 0x1] = a3
 30778: 3a 0a 78 12 03           a3 = u64 [0x31278]
 30783: 97 ab 0d                 a4 = a3 << 0xd
 30786: d3 ba 0a                 a3 = a3 ^ a4
 30789: 98 ab 07                 a4 = a3 >> 0x7
 30792: d3 ba 0a                 a3 = a3 ^ a4
 30795: 97 ab 11                 a4 = a3 << 0x11
 30798: d3 ab 0b                 a4 = a4 ^ a3
 30801: 3e 0b 78 12 03           u64 [0x31278] = a4
 30806: 84 aa 01                 a3 = a3 & 0x1
 30809: 78 8a 02                 u8 [a1 + 0x2] = a3
 30812: 3a 0a 78 12 03           a3 = u64 [0x31278]
 30817: 97 ab 0d                 a4 = a3 << 0xd
 30820: d3 ba 0a                 a3 = a3 ^ a4
 30823: 98 ab 07                 a4 = a3 >> 0x7
 30826: d3 ba 0a                 a3 = a3 ^ a4
 30829: 97 ab 11                 a4 = a3 << 0x11
 30832: d3 ab 0b                 a4 = a4 ^ a3
 30835: 3e 0b 78 12 03           u64 [0x31278] = a4
 30840: 84 aa 01                 a3 = a3 & 0x1
 30843: 78 8a 03                 u8 [a1 + 0x3] = a3
 30846: 3a 0a 78 12 03           a3 = u64 [0x31278]
 30851: 97 ab 0d                 a4 = a3 << 0xd
 30854: d3 ba 0a                 a3 = a3 ^ a4
 30857: 98 ab 07                 a4 = a3 >> 0x7
 30860: d3 ba 0a                 a3 = a3 ^ a4
 30863: 97 ab 11                 a4 = a3 << 0x11
 30866: d3 ab 0b                 a4 = a4 ^ a3
 30869: 3e 0b 78 12 03           u64 [0x31278] = a4
 30874: 84 aa 01                 a3 = a3 & 0x1
 30877: 78 8a 04                 u8 [a1 + 0x4] = a3
 30880: 3a 0a 78 12 03           a3 = u64 [0x31278]
 30885: 97 ab 0d                 a4 = a3 << 0xd
 30888: d3 ba 0a                 a3 = a3 ^ a4
 30891: 98 ab 07                 a4 = a3 >> 0x7
 30894: d3 ba 0a                 a3 = a3 ^ a4
 30897: 97 ab 11                 a4 = a3 << 0x11
 30900: d3 ab 0b                 a4 = a4 ^ a3
 30903: 3e 0b 78 12 03           u64 [0x31278] = a4
 30908: 84 aa 01                 a3 = a3 & 0x1
 30911: 78 8a 05                 u8 [a1 + 0x5] = a3
 30914: 3a 0a 78 12 03           a3 = u64 [0x31278]
 30919: 97 ab 0d                 a4 = a3 << 0xd
 30922: d3 ba 0a                 a3 = a3 ^ a4
 30925: 98 ab 07                 a4 = a3 >> 0x7
 30928: d3 ba 0a                 a3 = a3 ^ a4
 30931: 97 ab 11                 a4 = a3 << 0x11
 30934: d3 ab 0b                 a4 = a4 ^ a3
 30937: 3e 0b 78 12 03           u64 [0x31278] = a4
 30942: 84 aa 01                 a3 = a3 & 0x1
 30945: 78 8a 06                 u8 [a1 + 0x6] = a3
 30948: 3a 0a 78 12 03           a3 = u64 [0x31278]
 30953: 97 ab 0d                 a4 = a3 << 0xd
 30956: d3 ba 0a                 a3 = a3 ^ a4
 30959: 98 ab 07                 a4 = a3 >> 0x7
 30962: d3 ba 0a                 a3 = a3 ^ a4
 30965: 97 ab 11                 a4 = a3 << 0x11
 30968: d3 ab 0b                 a4 = a4 ^ a3
 30971: 3e 0b 78 12 03           u64 [0x31278] = a4
 30976: 84 aa 01                 a3 = a3 & 0x1
 30979: 78 8a 07                 u8 [a1 + 0x7] = a3
 30982: 33 09 08                 a2 = 0x8
 30985: 7b 79                    u64 [a0] = a2
 30987: 7b 78 08                 u64 [a0 + 0x8] = a1
 30990: 7b 79 10                 u64 [a0 + 0x10] = a2
 30993: 32 00                    ret
      :                          @2208
 30995: 00                       trap
      :                          @2209
 30996: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 30999: 7b 10 10                 u64 [sp + 0x10] = ra
 31002: 7b 15 08                 u64 [sp + 0x8] = s0
 31005: 7b 16                    u64 [sp] = s1
 31007: 97 82 03                 t0 = a1 << 0x3
 31010: 33 04 c0 22 03           t2 = 0x322c0
 31015: 33 03 00 00 01           t1 = 0x10000
 31020: c8 34 00                 ra = t2 + t1
 31023: 01                       fallthrough
      :                          @2210
 31024: 82 0b                    a4 = u64 [ra]
 31026: c8 2b 09                 a2 = a4 + t0
 31029: ac b9 91 00              jump @2217 if a2 <u a4
      :                          @2211
 31033: 95 96 08                 s1 = a2 + 0x8
 31036: d8 96 05                 s0 = s1 <u a2
 31039: d8 63 06                 s1 = t1 <u s1
 31042: d4 65 05                 s0 = s0 | s1
 31045: 52 05 81 00              jump @2217 if s0 != 0
      :                          @2212
 31049: c9 94 05                 s0 = t2 - a2
 31052: c8 35 05                 s0 = s0 + t1
 31055: 84 56 07                 s1 = s0 & 0x7
 31058: c8 69 09                 a2 = a2 + s1
 31061: 01                       fallthrough
      :                          @2213
 31062: 82 0a                    a3 = u64 [ra]
 31064: ab ba d8                 jump @2210 if a3 != a4
      :                          @2214
 31067: 7b 09                    u64 [ra] = a2
 31069: 3a 04 48 10 03           t2 = u64 [0x31048]
 31074: 3a 0b 50 10 03           a4 = u64 [0x31050]
 31079: c9 65 02                 t0 = s0 - s1
 31082: 33 0c 78 12 03           a5 = 0x31278
 31087: 33 03 e8 03              t1 = 0x3e8
 31091: 64 8a                    a3 = a1
 31093: 64 29                    a2 = t0
 31095: 01                       fallthrough
      :                          @2215
 31096: 3a 05 78 12 03           s0 = u64 [0x31278]
 31101: 97 56 0d                 s1 = s0 << 0xd
 31104: d3 65 05                 s0 = s0 ^ s1
 31107: 98 56 07                 s1 = s0 >> 0x7
 31110: d3 65 05                 s0 = s0 ^ s1
 31113: 97 56 11                 s1 = s0 << 0x11
 31116: d3 65 05                 s0 = s0 ^ s1
 31119: ca 45 06                 s1 = s0 * t2
 31122: 3e 05 78 12 03           u64 [0x31278] = s0
 31127: 98 65 03                 s0 = s1 >> 0x3
 31130: d6 b5 05                 s0 = s0 mulhu a4
 31133: 98 55 04                 s0 = s0 >> 0x4
 31136: ca 35 05                 s0 = s0 * t1
 31139: c9 56 06                 s1 = s1 - s0
 31142: 7b 96                    u64 [a2] = s1
 31144: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 31147: 95 99 08                 a2 = a2 + 0x8
 31150: 52 0a ca                 jump @2215 if a3 != 0
      :                          @2216
 31153: 7b 78                    u64 [a0] = a1
 31155: 7b 72 08                 u64 [a0 + 0x8] = t0
 31158: 7b 78 10                 u64 [a0 + 0x10] = a1
 31161: 82 10 10                 ra = u64 [sp + 0x10]
 31164: 82 15 08                 s0 = u64 [sp + 0x8]
 31167: 82 16                    s1 = u64 [sp]
 31169: 95 11 18                 sp = sp + 0x18
 31172: 32 00                    ret
      :                          @2217
 31174: 00                       trap
      :                          @2218
 31175: 82 0b                    a4 = u64 [ra]
 31177: c8 2b 09                 a2 = a4 + t0
 31180: ac b9 92 00              jump @2225 if a2 <u a4
      :                          @2219
 31184: 95 9a 08                 a3 = a2 + 0x8
 31187: d8 9a 05                 s0 = a3 <u a2
 31190: d8 a3 0a                 a3 = t1 <u a3
 31193: d4 5a 0a                 a3 = a3 | s0
 31196: 52 0a 82 00              jump @2225 if a3 != 0
      :                          @2220
 31200: c9 94 0a                 a3 = t2 - a2
 31203: c8 3a 0a                 a3 = a3 + t1
 31206: 84 a5 07                 s0 = a3 & 0x7
 31209: c8 59 09                 a2 = a2 + s0
 31212: 01                       fallthrough
      :                          @2221
 31213: 82 06                    s1 = u64 [ra]
 31215: ab b6 d8                 jump @2218 if s1 != a4
      :                          @2222
 31218: 7b 09                    u64 [ra] = a2
 31220: c9 5a 02                 t0 = a3 - s0
 31223: 33 04 78 12 03           t2 = 0x31278
 31228: 3a 0b 58 10 03           a4 = u64 [0x31058]
 31233: 14 0c cd cc cc cc cc cc cc cc a5 = 0xcccccccccccccccd
 31243: 33 03 14                 t1 = 0x14
 31246: 64 89                    a2 = a1
 31248: 64 2a                    a3 = t0
 31250: 01                       fallthrough
      :                          @2223
 31251: 3a 05 78 12 03           s0 = u64 [0x31278]
 31256: 97 56 0d                 s1 = s0 << 0xd
 31259: d3 65 05                 s0 = s0 ^ s1
 31262: 98 56 07                 s1 = s0 >> 0x7
 31265: d3 65 05                 s0 = s0 ^ s1
 31268: 97 56 11                 s1 = s0 << 0x11
 31271: d3 65 05                 s0 = s0 ^ s1
 31274: ca b5 06                 s1 = s0 * a4
 31277: 3e 05 78 12 03           u64 [0x31278] = s0
 31282: d6 c6 05                 s0 = s1 mulhu a5
 31285: 98 55 04                 s0 = s0 >> 0x4
 31288: ca 35 05                 s0 = s0 * t1
 31291: c9 56 06                 s1 = s1 - s0
 31294: 7b a6                    u64 [a3] = s1
 31296: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 31299: 95 aa 08                 a3 = a3 + 0x8
 31302: 52 09 cd                 jump @2223 if a2 != 0
      :                          @2224
 31305: 7b 78                    u64 [a0] = a1
 31307: 7b 72 08                 u64 [a0 + 0x8] = t0
 31310: 7b 78 10                 u64 [a0 + 0x10] = a1
 31313: 82 10 10                 ra = u64 [sp + 0x10]
 31316: 82 15 08                 s0 = u64 [sp + 0x8]
 31319: 82 16                    s1 = u64 [sp]
 31321: 95 11 18                 sp = sp + 0x18
 31324: 32 00                    ret
      :                          @2225
 31326: 00                       trap
      :                          @2226
 31327: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 31330: 7b 10 10                 u64 [sp + 0x10] = ra
 31333: 7b 15 08                 u64 [sp + 0x8] = s0
 31336: 7b 16                    u64 [sp] = s1
 31338: 97 82 03                 t0 = a1 << 0x3
 31341: 33 04 c0 22 03           t2 = 0x322c0
 31346: 33 03 00 00 01           t1 = 0x10000
 31351: c8 34 00                 ra = t2 + t1
 31354: 01                       fallthrough
      :                          @2227
 31355: 82 0b                    a4 = u64 [ra]
 31357: c8 2b 09                 a2 = a4 + t0
 31360: ac b9 50                 jump @2234 if a2 <u a4
      :                          @2228
 31363: 95 9a 08                 a3 = a2 + 0x8
 31366: d8 9a 05                 s0 = a3 <u a2
 31369: d8 a3 0a                 a3 = t1 <u a3
 31372: d4 5a 0a                 a3 = a3 | s0
 31375: 52 0a 41                 jump @2234 if a3 != 0
      :                          @2229
 31378: c9 94 0a                 a3 = t2 - a2
 31381: c8 3a 0a                 a3 = a3 + t1
 31384: 84 a5 07                 s0 = a3 & 0x7
 31387: c8 59 09                 a2 = a2 + s0
 31390: 01                       fallthrough
      :                          @2230
 31391: 82 06                    s1 = u64 [ra]
 31393: ab b6 da                 jump @2227 if s1 != a4
      :                          @2231
 31396: 7b 09                    u64 [ra] = a2
 31398: c9 5a 09                 a2 = a3 - s0
 31401: 33 0b                    a4 = 0
 31403: 64 9a                    a3 = a2
 31405: 01                       fallthrough
      :                          @2232
 31406: 95 bc 01                 a5 = a4 + 0x1
 31409: 7b ab                    u64 [a3] = a4
 31411: 95 aa 08                 a3 = a3 + 0x8
 31414: 64 cb                    a4 = a5
 31416: ab c8 f6                 jump @2232 if a1 != a5
      :                          @2233
 31419: 7b 78                    u64 [a0] = a1
 31421: 7b 79 08                 u64 [a0 + 0x8] = a2
 31424: 7b 78 10                 u64 [a0 + 0x10] = a1
 31427: 82 10 10                 ra = u64 [sp + 0x10]
 31430: 82 15 08                 s0 = u64 [sp + 0x8]
 31433: 82 16                    s1 = u64 [sp]
 31435: 95 11 18                 sp = sp + 0x18
 31438: 32 00                    ret
      :                          @2234
 31440: 00                       trap
      :                          @2235
 31441: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 31444: 7b 10 30                 u64 [sp + 0x30] = ra
 31447: 7b 15 28                 u64 [sp + 0x28] = s0
 31450: 7b 16 20                 u64 [sp + 0x20] = s1
 31453: 7c 89 10                 a2 = u8 [a1 + 0x10]
 31456: 33 0c 08                 a5 = 0x8
 31459: 52 09 0b                 jump @2237 if a2 != 0
      :                          @2236
 31462: 82 89                    a2 = u64 [a1]
 31464: 82 88 08                 a1 = u64 [a1 + 0x8]
 31467: ae 98 1e                 jump @2239 if a1 >=u a2
      :                          @2237
 31470: 33 09                    a2 = 0
 31472: 33 08                    a1 = 0
 31474: 01                       fallthrough
      :                          @2238
 31475: 7b 79                    u64 [a0] = a2
 31477: 7b 7c 08                 u64 [a0 + 0x8] = a5
 31480: 7b 78 10                 u64 [a0 + 0x10] = a1
 31483: 82 10 30                 ra = u64 [sp + 0x30]
 31486: 82 15 28                 s0 = u64 [sp + 0x28]
 31489: 82 16 20                 s1 = u64 [sp + 0x20]
 31492: 95 11 38                 sp = sp + 0x38
 31495: 32 00                    ret
      :                          @2239
 31497: c9 98 03                 t1 = a1 - a2
 31500: 95 33 01                 t1 = t1 + 0x1
 31503: 51 03 9f 00              jump @2254 if t1 == 0
      :                          @2240
 31507: 7b 19 08                 u64 [sp + 0x8] = a2
 31510: 7b 18 10                 u64 [sp + 0x10] = a1
 31513: 7b 17 18                 u64 [sp + 0x18] = a0
 31516: 98 38 3c                 a1 = t1 >> 0x3c
 31519: 52 08 90 00              jump @2255 if a1 != 0
      :                          @2241
 31523: 88 8c 01                 a5 = a1 <u 0x1
 31526: 7b 13                    u64 [sp] = t1
 31528: 97 30 03                 ra = t1 << 0x3
 31531: 97 cc 03                 a5 = a5 << 0x3
 31534: 33 0a c0 22 03           a3 = 0x322c0
 31539: 33 02 00 00 01           t0 = 0x10000
 31544: c8 2a 09                 a2 = a3 + t0
 31547: 01                       fallthrough
      :                          @2242
 31548: 82 95                    s0 = u64 [a2]
 31550: c8 05 06                 s1 = s0 + ra
 31553: ac 56 6c                 jump @2253 if s1 <u s0
      :                          @2243
 31556: c8 c6 08                 a1 = s1 + a5
 31559: d8 68 0b                 a4 = a1 <u s1
 31562: d8 82 08                 a1 = t0 <u a1
 31565: d4 b8 08                 a1 = a1 | a4
 31568: 52 08 5d                 jump @2253 if a1 != 0
      :                          @2244
 31571: c9 6a 08                 a1 = a3 - s1
 31574: c8 28 08                 a1 = a1 + t0
 31577: 84 8b 07                 a4 = a1 & 0x7
 31580: c8 b6 06                 s1 = s1 + a4
 31583: 01                       fallthrough
      :                          @2245
 31584: 82 93                    t1 = u64 [a2]
 31586: ab 53 da                 jump @2242 if t1 != s0
      :                          @2246
 31589: 7b 96                    u64 [a2] = s1
 31591: 33 04                    t2 = 0
 31593: 01                       fallthrough
      :                          @2247
 31594: c9 b8 0c                 a5 = a1 - a4
 31597: 82 17 10                 a0 = u64 [sp + 0x10]
 31600: 82 16 08                 s1 = u64 [sp + 0x8]
 31603: ae 76 21                 jump @2251 if s1 >=u a0
      :                          @2248
 31606: 33 08                    a1 = 0
 31608: c9 76 09                 a2 = s1 - a0
 31611: 64 ca                    a3 = a5
 31613: 01                       fallthrough
      :                          @2249
 31614: c8 86 0b                 a4 = s1 + a1
 31617: ca bb 0b                 a4 = a4 * a4
 31620: 7b ab                    u64 [a3] = a4
 31622: 95 88 01                 a1 = a1 + 0x1
 31625: c8 89 0b                 a4 = a2 + a1
 31628: 95 aa 08                 a3 = a3 + 0x8
 31631: 52 0b ef                 jump @2249 if a4 != 0
      :                          @2250
 31634: 28 05                    jump @2252
      :                          @2251
 31636: 33 08                    a1 = 0
 31638: 01                       fallthrough
      :                          @2252
 31639: ca 77 07                 a0 = a0 * a0
 31642: 97 89 03                 a2 = a1 << 0x3
 31645: c8 c9 09                 a2 = a2 + a5
 31648: 7b 97                    u64 [a2] = a0
 31650: 95 88 01                 a1 = a1 + 0x1
 31653: 82 17 18                 a0 = u64 [sp + 0x18]
 31656: 82 19                    a2 = u64 [sp]
 31658: 28 49 ff                 jump @2238
      :                          @2253
 31661: 00                       trap
      :                          @2254
 31662: 00                       trap
      :                          @2255
 31663: 00                       trap
      :                          @2256
 31664: 82 4b                    a4 = u64 [t2]
 31666: 95 bc 28                 a5 = a4 + 0x28
 31669: ac bc 4d                 jump @2261 if a5 <u a4
      :                          @2257
 31672: 95 c8 08                 a1 = a5 + 0x8
 31675: d8 c8 09                 a2 = a1 <u a5
 31678: d8 82 08                 a1 = t0 <u a1
 31681: d4 98 08                 a1 = a1 | a2
 31684: 52 08 3e                 jump @2261 if a1 != 0
      :                          @2258
 31687: c9 c3 08                 a1 = t1 - a5
 31690: c8 28 08                 a1 = a1 + t0
 31693: 84 89 07                 a2 = a1 & 0x7
 31696: c8 9c 0c                 a5 = a5 + a2
 31699: 01                       fallthrough
      :                          @2259
 31700: 82 4a                    a3 = u64 [t2]
 31702: ab ba da                 jump @2256 if a3 != a4
      :                          @2260
 31705: 7b 4c                    u64 [t2] = a5
 31707: c9 98 08                 a1 = a1 - a2
 31710: 49 08                    u64 [a1 + 0] = 0
 31712: 49 18 08 01              u64 [a1 + 8] = 0x1
 31716: 49 18 10 02              u64 [a1 + 16] = 0x2
 31720: 49 18 18 03              u64 [a1 + 24] = 0x3
 31724: 49 18 20 04              u64 [a1 + 32] = 0x4
 31728: 33 09 05                 a2 = 0x5
 31731: 7b 79                    u64 [a0] = a2
 31733: 7b 78 08                 u64 [a0 + 0x8] = a1
 31736: 7b 79 10                 u64 [a0 + 0x10] = a2
 31739: 82 15                    s0 = u64 [sp]
 31741: 95 11 08                 sp = sp + 0x8
 31744: 32 00                    ret
      :                          @2261
 31746: 00                       trap
      :                          @2262
 31747: 82 0b                    a4 = u64 [ra]
 31749: c8 2b 09                 a2 = a4 + t0
 31752: ac b9 8d 00              jump @2269 if a2 <u a4
      :                          @2263
 31756: 95 9a 08                 a3 = a2 + 0x8
 31759: d8 9a 05                 s0 = a3 <u a2
 31762: d8 a3 0a                 a3 = t1 <u a3
 31765: d4 5a 0a                 a3 = a3 | s0
 31768: 52 0a 7d                 jump @2269 if a3 != 0
      :                          @2264
 31771: c9 94 0a                 a3 = t2 - a2
 31774: c8 3a 0a                 a3 = a3 + t1
 31777: 84 a5 07                 s0 = a3 & 0x7
 31780: c8 59 09                 a2 = a2 + s0
 31783: 01                       fallthrough
      :                          @2265
 31784: 82 06                    s1 = u64 [ra]
 31786: ab b6 d9                 jump @2262 if s1 != a4
      :                          @2266
 31789: 7b 09                    u64 [ra] = a2
 31791: c9 5a 02                 t0 = a3 - s0
 31794: 3a 03 60 10 03           t1 = u64 [0x31060]
 31799: 3a 0b 68 10 03           a4 = u64 [0x31068]
 31804: 33 04 78 12 03           t2 = 0x31278
 31809: 33 09 10 27              a2 = 0x2710
 31813: 64 8a                    a3 = a1
 31815: 64 2c                    a5 = t0
 31817: 01                       fallthrough
      :                          @2267
 31818: 3a 05 78 12 03           s0 = u64 [0x31278]
 31823: 97 56 0d                 s1 = s0 << 0xd
 31826: d3 65 05                 s0 = s0 ^ s1
 31829: 98 56 07                 s1 = s0 >> 0x7
 31832: d3 65 05                 s0 = s0 ^ s1
 31835: 97 56 11                 s1 = s0 << 0x11
 31838: d3 65 05                 s0 = s0 ^ s1
 31841: ca 35 06                 s1 = s0 * t1
 31844: 3e 05 78 12 03           u64 [0x31278] = s0
 31849: d6 b6 05                 s0 = s1 mulhu a4
 31852: 98 55 0b                 s0 = s0 >> 0xb
 31855: ca 95 05                 s0 = s0 * a2
 31858: c9 56 06                 s1 = s1 - s0
 31861: 7b c6                    u64 [a5] = s1
 31863: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 31866: 95 cc 08                 a5 = a5 + 0x8
 31869: 52 0a cd                 jump @2267 if a3 != 0
      :                          @2268
 31872: 7b 78                    u64 [a0] = a1
 31874: 7b 72 08                 u64 [a0 + 0x8] = t0
 31877: 7b 78 10                 u64 [a0 + 0x10] = a1
 31880: 82 10 10                 ra = u64 [sp + 0x10]
 31883: 82 15 08                 s0 = u64 [sp + 0x8]
 31886: 82 16                    s1 = u64 [sp]
 31888: 95 11 18                 sp = sp + 0x18
 31891: 32 00                    ret
      :                          @2269
 31893: 00                       trap
      :                          @2270
 31894: 82 4b                    a4 = u64 [t2]
 31896: 95 bc a0 00              a5 = a4 + 0xa0
 31900: ac bc 8d 00              jump @2277 if a5 <u a4
      :                          @2271
 31904: 95 c8 08                 a1 = a5 + 0x8
 31907: d8 c8 09                 a2 = a1 <u a5
 31910: d8 82 08                 a1 = t0 <u a1
 31913: d4 98 08                 a1 = a1 | a2
 31916: 52 08 7d                 jump @2277 if a1 != 0
      :                          @2272
 31919: c9 c3 08                 a1 = t1 - a5
 31922: c8 28 08                 a1 = a1 + t0
 31925: 84 89 07                 a2 = a1 & 0x7
 31928: c8 9c 0c                 a5 = a5 + a2
 31931: 01                       fallthrough
      :                          @2273
 31932: 82 4a                    a3 = u64 [t2]
 31934: ab ba d8                 jump @2270 if a3 != a4
      :                          @2274
 31937: 7b 4c                    u64 [t2] = a5
 31939: c9 98 02                 t0 = a1 - a2
 31942: 3a 04 70 10 03           t2 = u64 [0x31070]
 31947: 3a 0a 78 10 03           a3 = u64 [0x31078]
 31952: 33 0b 14                 a4 = 0x14
 31955: 33 0c 78 12 03           a5 = 0x31278
 31960: 33 03 64                 t1 = 0x64
 31963: 64 28                    a1 = t0
 31965: 01                       fallthrough
      :                          @2275
 31966: 3a 09 78 12 03           a2 = u64 [0x31278]
 31971: 97 95 0d                 s0 = a2 << 0xd
 31974: d3 59 09                 a2 = a2 ^ s0
 31977: 98 95 07                 s0 = a2 >> 0x7
 31980: d3 59 09                 a2 = a2 ^ s0
 31983: 97 95 11                 s0 = a2 << 0x11
 31986: d3 59 09                 a2 = a2 ^ s0
 31989: ca 49 05                 s0 = a2 * t2
 31992: 3e 09 78 12 03           u64 [0x31278] = a2
 31997: 98 59 02                 a2 = s0 >> 0x2
 32000: d6 a9 09                 a2 = a2 mulhu a3
 32003: 98 99 02                 a2 = a2 >> 0x2
 32006: ca 39 09                 a2 = a2 * t1
 32009: c9 95 05                 s0 = s0 - a2
 32012: 7b 85                    u64 [a1] = s0
 32014: 83 bb ff                 i32 a4 = a4 + 0xffffffffffffffff
 32017: 95 88 08                 a1 = a1 + 0x8
 32020: 52 0b ca                 jump @2275 if a4 != 0
      :                          @2276
 32023: 33 08 14                 a1 = 0x14
 32026: 7b 78                    u64 [a0] = a1
 32028: 7b 72 08                 u64 [a0 + 0x8] = t0
 32031: 7b 78 10                 u64 [a0 + 0x10] = a1
 32034: 82 15                    s0 = u64 [sp]
 32036: 95 11 08                 sp = sp + 0x8
 32039: 32 00                    ret
      :                          @2277
 32041: 00                       trap
      :                          @2278
 32042: 82 4b                    a4 = u64 [t2]
 32044: 95 bc 50                 a5 = a4 + 0x50
 32047: ac bc 92 02              jump @2283 if a5 <u a4
      :                          @2279
 32051: 95 c8 08                 a1 = a5 + 0x8
 32054: d8 c8 09                 a2 = a1 <u a5
 32057: d8 82 08                 a1 = t0 <u a1
 32060: d4 98 08                 a1 = a1 | a2
 32063: 52 08 82 02              jump @2283 if a1 != 0
      :                          @2280
 32067: c9 c3 08                 a1 = t1 - a5
 32070: c8 28 08                 a1 = a1 + t0
 32073: 84 89 07                 a2 = a1 & 0x7
 32076: c8 9c 0c                 a5 = a5 + a2
 32079: 01                       fallthrough
      :                          @2281
 32080: 82 4a                    a3 = u64 [t2]
 32082: ab ba d8                 jump @2278 if a3 != a4
      :                          @2282
 32085: 7b 4c                    u64 [t2] = a5
 32087: 33 02 78 12 03           t0 = 0x31278
 32092: 3a 0a 78 12 03           a3 = u64 [0x31278]
 32097: c9 98 08                 a1 = a1 - a2
 32100: 97 a9 0d                 a2 = a3 << 0xd
 32103: d3 a9 09                 a2 = a2 ^ a3
 32106: 98 9a 07                 a3 = a2 >> 0x7
 32109: d3 a9 09                 a2 = a2 ^ a3
 32112: 97 9b 11                 a4 = a2 << 0x11
 32115: 3a 0a 80 10 03           a3 = u64 [0x31080]
 32120: d3 b9 09                 a2 = a2 ^ a4
 32123: 3a 0b 88 10 03           a4 = u64 [0x31088]
 32128: ca a9 0c                 a5 = a2 * a3
 32131: 3e 09 78 12 03           u64 [0x31278] = a2
 32136: d6 bc 09                 a2 = a5 mulhu a4
 32139: c9 9c 05                 s0 = a5 - a2
 32142: 98 55 01                 s0 = s0 >> 0x1
 32145: c8 59 09                 a2 = a2 + s0
 32148: 98 99 04                 a2 = a2 >> 0x4
 32151: 33 03 15                 t1 = 0x15
 32154: ca 39 09                 a2 = a2 * t1
 32157: c9 9c 0c                 a5 = a5 - a2
 32160: 95 cc f6                 a5 = a5 + 0xfffffffffffffff6
 32163: 7b 8c                    u64 [a1] = a5
 32165: 3a 09 78 12 03           a2 = u64 [0x31278]
 32170: 97 9c 0d                 a5 = a2 << 0xd
 32173: d3 c9 09                 a2 = a2 ^ a5
 32176: 98 9c 07                 a5 = a2 >> 0x7
 32179: d3 c9 09                 a2 = a2 ^ a5
 32182: 97 9c 11                 a5 = a2 << 0x11
 32185: d3 c9 09                 a2 = a2 ^ a5
 32188: ca a9 05                 s0 = a2 * a3
 32191: 3e 09 78 12 03           u64 [0x31278] = a2
 32196: d6 b5 09                 a2 = s0 mulhu a4
 32199: c9 95 0c                 a5 = s0 - a2
 32202: 98 cc 01                 a5 = a5 >> 0x1
 32205: c8 c9 09                 a2 = a2 + a5
 32208: 98 99 04                 a2 = a2 >> 0x4
 32211: ca 39 09                 a2 = a2 * t1
 32214: c9 95 05                 s0 = s0 - a2
 32217: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 32220: 7b 85 08                 u64 [a1 + 0x8] = s0
 32223: 3a 09 78 12 03           a2 = u64 [0x31278]
 32228: 97 9c 0d                 a5 = a2 << 0xd
 32231: d3 c9 09                 a2 = a2 ^ a5
 32234: 98 9c 07                 a5 = a2 >> 0x7
 32237: d3 c9 09                 a2 = a2 ^ a5
 32240: 97 9c 11                 a5 = a2 << 0x11
 32243: d3 c9 09                 a2 = a2 ^ a5
 32246: ca a9 05                 s0 = a2 * a3
 32249: 3e 09 78 12 03           u64 [0x31278] = a2
 32254: d6 b5 09                 a2 = s0 mulhu a4
 32257: c9 95 0c                 a5 = s0 - a2
 32260: 98 cc 01                 a5 = a5 >> 0x1
 32263: c8 c9 09                 a2 = a2 + a5
 32266: 98 99 04                 a2 = a2 >> 0x4
 32269: ca 39 09                 a2 = a2 * t1
 32272: c9 95 05                 s0 = s0 - a2
 32275: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 32278: 7b 85 10                 u64 [a1 + 0x10] = s0
 32281: 3a 09 78 12 03           a2 = u64 [0x31278]
 32286: 97 9c 0d                 a5 = a2 << 0xd
 32289: d3 c9 09                 a2 = a2 ^ a5
 32292: 98 9c 07                 a5 = a2 >> 0x7
 32295: d3 c9 09                 a2 = a2 ^ a5
 32298: 97 9c 11                 a5 = a2 << 0x11
 32301: d3 c9 09                 a2 = a2 ^ a5
 32304: ca a9 05                 s0 = a2 * a3
 32307: 3e 09 78 12 03           u64 [0x31278] = a2
 32312: d6 b5 09                 a2 = s0 mulhu a4
 32315: c9 95 0c                 a5 = s0 - a2
 32318: 98 cc 01                 a5 = a5 >> 0x1
 32321: c8 c9 09                 a2 = a2 + a5
 32324: 98 99 04                 a2 = a2 >> 0x4
 32327: ca 39 09                 a2 = a2 * t1
 32330: c9 95 05                 s0 = s0 - a2
 32333: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 32336: 7b 85 18                 u64 [a1 + 0x18] = s0
 32339: 3a 09 78 12 03           a2 = u64 [0x31278]
 32344: 97 9c 0d                 a5 = a2 << 0xd
 32347: d3 c9 09                 a2 = a2 ^ a5
 32350: 98 9c 07                 a5 = a2 >> 0x7
 32353: d3 c9 09                 a2 = a2 ^ a5
 32356: 97 9c 11                 a5 = a2 << 0x11
 32359: d3 c9 09                 a2 = a2 ^ a5
 32362: ca a9 05                 s0 = a2 * a3
 32365: 3e 09 78 12 03           u64 [0x31278] = a2
 32370: d6 b5 09                 a2 = s0 mulhu a4
 32373: c9 95 0c                 a5 = s0 - a2
 32376: 98 cc 01                 a5 = a5 >> 0x1
 32379: c8 c9 09                 a2 = a2 + a5
 32382: 98 99 04                 a2 = a2 >> 0x4
 32385: ca 39 09                 a2 = a2 * t1
 32388: c9 95 05                 s0 = s0 - a2
 32391: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 32394: 7b 85 20                 u64 [a1 + 0x20] = s0
 32397: 3a 09 78 12 03           a2 = u64 [0x31278]
 32402: 97 9c 0d                 a5 = a2 << 0xd
 32405: d3 c9 09                 a2 = a2 ^ a5
 32408: 98 9c 07                 a5 = a2 >> 0x7
 32411: d3 c9 09                 a2 = a2 ^ a5
 32414: 97 9c 11                 a5 = a2 << 0x11
 32417: d3 c9 09                 a2 = a2 ^ a5
 32420: ca a9 05                 s0 = a2 * a3
 32423: 3e 09 78 12 03           u64 [0x31278] = a2
 32428: d6 b5 09                 a2 = s0 mulhu a4
 32431: c9 95 0c                 a5 = s0 - a2
 32434: 98 cc 01                 a5 = a5 >> 0x1
 32437: c8 c9 09                 a2 = a2 + a5
 32440: 98 99 04                 a2 = a2 >> 0x4
 32443: ca 39 09                 a2 = a2 * t1
 32446: c9 95 05                 s0 = s0 - a2
 32449: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 32452: 7b 85 28                 u64 [a1 + 0x28] = s0
 32455: 3a 09 78 12 03           a2 = u64 [0x31278]
 32460: 97 9c 0d                 a5 = a2 << 0xd
 32463: d3 c9 09                 a2 = a2 ^ a5
 32466: 98 9c 07                 a5 = a2 >> 0x7
 32469: d3 c9 09                 a2 = a2 ^ a5
 32472: 97 9c 11                 a5 = a2 << 0x11
 32475: d3 c9 09                 a2 = a2 ^ a5
 32478: ca a9 05                 s0 = a2 * a3
 32481: 3e 09 78 12 03           u64 [0x31278] = a2
 32486: d6 b5 09                 a2 = s0 mulhu a4
 32489: c9 95 0c                 a5 = s0 - a2
 32492: 98 cc 01                 a5 = a5 >> 0x1
 32495: c8 c9 09                 a2 = a2 + a5
 32498: 98 99 04                 a2 = a2 >> 0x4
 32501: ca 39 09                 a2 = a2 * t1
 32504: c9 95 05                 s0 = s0 - a2
 32507: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 32510: 7b 85 30                 u64 [a1 + 0x30] = s0
 32513: 3a 09 78 12 03           a2 = u64 [0x31278]
 32518: 97 9c 0d                 a5 = a2 << 0xd
 32521: d3 c9 09                 a2 = a2 ^ a5
 32524: 98 9c 07                 a5 = a2 >> 0x7
 32527: d3 c9 09                 a2 = a2 ^ a5
 32530: 97 9c 11                 a5 = a2 << 0x11
 32533: d3 c9 09                 a2 = a2 ^ a5
 32536: ca a9 05                 s0 = a2 * a3
 32539: 3e 09 78 12 03           u64 [0x31278] = a2
 32544: d6 b5 09                 a2 = s0 mulhu a4
 32547: c9 95 0c                 a5 = s0 - a2
 32550: 98 cc 01                 a5 = a5 >> 0x1
 32553: c8 c9 09                 a2 = a2 + a5
 32556: 98 99 04                 a2 = a2 >> 0x4
 32559: ca 39 09                 a2 = a2 * t1
 32562: c9 95 05                 s0 = s0 - a2
 32565: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 32568: 7b 85 38                 u64 [a1 + 0x38] = s0
 32571: 3a 09 78 12 03           a2 = u64 [0x31278]
 32576: 97 9c 0d                 a5 = a2 << 0xd
 32579: d3 c9 09                 a2 = a2 ^ a5
 32582: 98 9c 07                 a5 = a2 >> 0x7
 32585: d3 c9 09                 a2 = a2 ^ a5
 32588: 97 9c 11                 a5 = a2 << 0x11
 32591: d3 c9 09                 a2 = a2 ^ a5
 32594: ca a9 05                 s0 = a2 * a3
 32597: 3e 09 78 12 03           u64 [0x31278] = a2
 32602: d6 b5 09                 a2 = s0 mulhu a4
 32605: c9 95 0c                 a5 = s0 - a2
 32608: 98 cc 01                 a5 = a5 >> 0x1
 32611: c8 c9 09                 a2 = a2 + a5
 32614: 98 99 04                 a2 = a2 >> 0x4
 32617: ca 39 09                 a2 = a2 * t1
 32620: c9 95 05                 s0 = s0 - a2
 32623: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 32626: 7b 85 40                 u64 [a1 + 0x40] = s0
 32629: 3a 09 78 12 03           a2 = u64 [0x31278]
 32634: 97 9c 0d                 a5 = a2 << 0xd
 32637: d3 c9 09                 a2 = a2 ^ a5
 32640: 98 9c 07                 a5 = a2 >> 0x7
 32643: d3 c9 09                 a2 = a2 ^ a5
 32646: 97 9c 11                 a5 = a2 << 0x11
 32649: d3 c9 09                 a2 = a2 ^ a5
 32652: ca a9 0a                 a3 = a2 * a3
 32655: 3e 09 78 12 03           u64 [0x31278] = a2
 32660: d6 ba 09                 a2 = a3 mulhu a4
 32663: c9 9a 0b                 a4 = a3 - a2
 32666: 98 bb 01                 a4 = a4 >> 0x1
 32669: c8 b9 09                 a2 = a2 + a4
 32672: 98 99 04                 a2 = a2 >> 0x4
 32675: ca 39 09                 a2 = a2 * t1
 32678: c9 9a 0a                 a3 = a3 - a2
 32681: 95 aa f6                 a3 = a3 + 0xfffffffffffffff6
 32684: 7b 8a 48                 u64 [a1 + 0x48] = a3
 32687: 33 09 0a                 a2 = 0xa
 32690: 7b 79                    u64 [a0] = a2
 32692: 7b 78 08                 u64 [a0 + 0x8] = a1
 32695: 7b 79 10                 u64 [a0 + 0x10] = a2
 32698: 82 15                    s0 = u64 [sp]
 32700: 95 11 08                 sp = sp + 0x8
 32703: 32 00                    ret
      :                          @2283
 32705: 00                       trap
      :                          @2284
 32706: 82 4b                    a4 = u64 [t2]
 32708: 95 bc 50                 a5 = a4 + 0x50
 32711: ac bc 56 02              jump @2289 if a5 <u a4
      :                          @2285
 32715: 95 c8 08                 a1 = a5 + 0x8
 32718: d8 c8 09                 a2 = a1 <u a5
 32721: d8 82 08                 a1 = t0 <u a1
 32724: d4 98 08                 a1 = a1 | a2
 32727: 52 08 46 02              jump @2289 if a1 != 0
      :                          @2286
 32731: c9 c3 08                 a1 = t1 - a5
 32734: c8 28 08                 a1 = a1 + t0
 32737: 84 89 07                 a2 = a1 & 0x7
 32740: c8 9c 0c                 a5 = a5 + a2
 32743: 01                       fallthrough
      :                          @2287
 32744: 82 4a                    a3 = u64 [t2]
 32746: ab ba d8                 jump @2284 if a3 != a4
      :                          @2288
 32749: 7b 4c                    u64 [t2] = a5
 32751: 33 0c 78 12 03           a5 = 0x31278
 32756: 3a 0a 78 12 03           a3 = u64 [0x31278]
 32761: c9 98 08                 a1 = a1 - a2
 32764: 97 a9 0d                 a2 = a3 << 0xd
 32767: d3 a9 09                 a2 = a2 ^ a3
 32770: 98 9b 07                 a4 = a2 >> 0x7
 32773: 3a 0a 90 10 03           a3 = u64 [0x31090]
 32778: d3 b9 09                 a2 = a2 ^ a4
 32781: 97 9b 11                 a4 = a2 << 0x11
 32784: d3 b9 09                 a2 = a2 ^ a4
 32787: ca a9 05                 s0 = a2 * a3
 32790: 3a 0b 98 10 03           a4 = u64 [0x31098]
 32795: 3e 09 78 12 03           u64 [0x31278] = a2
 32800: 98 59 01                 a2 = s0 >> 0x1
 32803: d6 b9 09                 a2 = a2 mulhu a4
 32806: 98 99 04                 a2 = a2 >> 0x4
 32809: 33 02 32                 t0 = 0x32
 32812: ca 29 09                 a2 = a2 * t0
 32815: c9 95 05                 s0 = s0 - a2
 32818: 95 55 01                 s0 = s0 + 0x1
 32821: 7b 85                    u64 [a1] = s0
 32823: 3a 05 78 12 03           s0 = u64 [0x31278]
 32828: 97 59 0d                 a2 = s0 << 0xd
 32831: d3 95 05                 s0 = s0 ^ a2
 32834: 98 59 07                 a2 = s0 >> 0x7
 32837: d3 95 05                 s0 = s0 ^ a2
 32840: 97 59 11                 a2 = s0 << 0x11
 32843: d3 59 09                 a2 = a2 ^ s0
 32846: ca a9 05                 s0 = a2 * a3
 32849: 3e 09 78 12 03           u64 [0x31278] = a2
 32854: 98 59 01                 a2 = s0 >> 0x1
 32857: d6 b9 09                 a2 = a2 mulhu a4
 32860: 98 99 04                 a2 = a2 >> 0x4
 32863: ca 29 09                 a2 = a2 * t0
 32866: c9 95 05                 s0 = s0 - a2
 32869: 95 55 01                 s0 = s0 + 0x1
 32872: 7b 85 08                 u64 [a1 + 0x8] = s0
 32875: 3a 05 78 12 03           s0 = u64 [0x31278]
 32880: 97 59 0d                 a2 = s0 << 0xd
 32883: d3 95 05                 s0 = s0 ^ a2
 32886: 98 59 07                 a2 = s0 >> 0x7
 32889: d3 95 05                 s0 = s0 ^ a2
 32892: 97 59 11                 a2 = s0 << 0x11
 32895: d3 59 09                 a2 = a2 ^ s0
 32898: ca a9 05                 s0 = a2 * a3
 32901: 3e 09 78 12 03           u64 [0x31278] = a2
 32906: 98 59 01                 a2 = s0 >> 0x1
 32909: d6 b9 09                 a2 = a2 mulhu a4
 32912: 98 99 04                 a2 = a2 >> 0x4
 32915: ca 29 09                 a2 = a2 * t0
 32918: c9 95 05                 s0 = s0 - a2
 32921: 95 55 01                 s0 = s0 + 0x1
 32924: 7b 85 10                 u64 [a1 + 0x10] = s0
 32927: 3a 05 78 12 03           s0 = u64 [0x31278]
 32932: 97 59 0d                 a2 = s0 << 0xd
 32935: d3 95 05                 s0 = s0 ^ a2
 32938: 98 59 07                 a2 = s0 >> 0x7
 32941: d3 95 05                 s0 = s0 ^ a2
 32944: 97 59 11                 a2 = s0 << 0x11
 32947: d3 59 09                 a2 = a2 ^ s0
 32950: ca a9 05                 s0 = a2 * a3
 32953: 3e 09 78 12 03           u64 [0x31278] = a2
 32958: 98 59 01                 a2 = s0 >> 0x1
 32961: d6 b9 09                 a2 = a2 mulhu a4
 32964: 98 99 04                 a2 = a2 >> 0x4
 32967: ca 29 09                 a2 = a2 * t0
 32970: c9 95 05                 s0 = s0 - a2
 32973: 95 55 01                 s0 = s0 + 0x1
 32976: 7b 85 18                 u64 [a1 + 0x18] = s0
 32979: 3a 05 78 12 03           s0 = u64 [0x31278]
 32984: 97 59 0d                 a2 = s0 << 0xd
 32987: d3 95 05                 s0 = s0 ^ a2
 32990: 98 59 07                 a2 = s0 >> 0x7
 32993: d3 95 05                 s0 = s0 ^ a2
 32996: 97 59 11                 a2 = s0 << 0x11
 32999: d3 59 09                 a2 = a2 ^ s0
 33002: ca a9 05                 s0 = a2 * a3
 33005: 3e 09 78 12 03           u64 [0x31278] = a2
 33010: 98 59 01                 a2 = s0 >> 0x1
 33013: d6 b9 09                 a2 = a2 mulhu a4
 33016: 98 99 04                 a2 = a2 >> 0x4
 33019: ca 29 09                 a2 = a2 * t0
 33022: c9 95 05                 s0 = s0 - a2
 33025: 95 55 01                 s0 = s0 + 0x1
 33028: 7b 85 20                 u64 [a1 + 0x20] = s0
 33031: 3a 05 78 12 03           s0 = u64 [0x31278]
 33036: 97 59 0d                 a2 = s0 << 0xd
 33039: d3 95 05                 s0 = s0 ^ a2
 33042: 98 59 07                 a2 = s0 >> 0x7
 33045: d3 95 05                 s0 = s0 ^ a2
 33048: 97 59 11                 a2 = s0 << 0x11
 33051: d3 59 09                 a2 = a2 ^ s0
 33054: ca a9 05                 s0 = a2 * a3
 33057: 3e 09 78 12 03           u64 [0x31278] = a2
 33062: 98 59 01                 a2 = s0 >> 0x1
 33065: d6 b9 09                 a2 = a2 mulhu a4
 33068: 98 99 04                 a2 = a2 >> 0x4
 33071: ca 29 09                 a2 = a2 * t0
 33074: c9 95 05                 s0 = s0 - a2
 33077: 95 55 01                 s0 = s0 + 0x1
 33080: 7b 85 28                 u64 [a1 + 0x28] = s0
 33083: 3a 05 78 12 03           s0 = u64 [0x31278]
 33088: 97 59 0d                 a2 = s0 << 0xd
 33091: d3 95 05                 s0 = s0 ^ a2
 33094: 98 59 07                 a2 = s0 >> 0x7
 33097: d3 95 05                 s0 = s0 ^ a2
 33100: 97 59 11                 a2 = s0 << 0x11
 33103: d3 59 09                 a2 = a2 ^ s0
 33106: ca a9 05                 s0 = a2 * a3
 33109: 3e 09 78 12 03           u64 [0x31278] = a2
 33114: 98 59 01                 a2 = s0 >> 0x1
 33117: d6 b9 09                 a2 = a2 mulhu a4
 33120: 98 99 04                 a2 = a2 >> 0x4
 33123: ca 29 09                 a2 = a2 * t0
 33126: c9 95 05                 s0 = s0 - a2
 33129: 95 55 01                 s0 = s0 + 0x1
 33132: 7b 85 30                 u64 [a1 + 0x30] = s0
 33135: 3a 05 78 12 03           s0 = u64 [0x31278]
 33140: 97 59 0d                 a2 = s0 << 0xd
 33143: d3 95 05                 s0 = s0 ^ a2
 33146: 98 59 07                 a2 = s0 >> 0x7
 33149: d3 95 05                 s0 = s0 ^ a2
 33152: 97 59 11                 a2 = s0 << 0x11
 33155: d3 59 09                 a2 = a2 ^ s0
 33158: ca a9 05                 s0 = a2 * a3
 33161: 3e 09 78 12 03           u64 [0x31278] = a2
 33166: 98 59 01                 a2 = s0 >> 0x1
 33169: d6 b9 09                 a2 = a2 mulhu a4
 33172: 98 99 04                 a2 = a2 >> 0x4
 33175: ca 29 09                 a2 = a2 * t0
 33178: c9 95 05                 s0 = s0 - a2
 33181: 95 55 01                 s0 = s0 + 0x1
 33184: 7b 85 38                 u64 [a1 + 0x38] = s0
 33187: 3a 05 78 12 03           s0 = u64 [0x31278]
 33192: 97 59 0d                 a2 = s0 << 0xd
 33195: d3 95 05                 s0 = s0 ^ a2
 33198: 98 59 07                 a2 = s0 >> 0x7
 33201: d3 95 05                 s0 = s0 ^ a2
 33204: 97 59 11                 a2 = s0 << 0x11
 33207: d3 59 09                 a2 = a2 ^ s0
 33210: ca a9 05                 s0 = a2 * a3
 33213: 3e 09 78 12 03           u64 [0x31278] = a2
 33218: 98 59 01                 a2 = s0 >> 0x1
 33221: d6 b9 09                 a2 = a2 mulhu a4
 33224: 98 99 04                 a2 = a2 >> 0x4
 33227: ca 29 09                 a2 = a2 * t0
 33230: c9 95 05                 s0 = s0 - a2
 33233: 95 55 01                 s0 = s0 + 0x1
 33236: 7b 85 40                 u64 [a1 + 0x40] = s0
 33239: 3a 05 78 12 03           s0 = u64 [0x31278]
 33244: 97 59 0d                 a2 = s0 << 0xd
 33247: d3 95 05                 s0 = s0 ^ a2
 33250: 98 59 07                 a2 = s0 >> 0x7
 33253: d3 95 05                 s0 = s0 ^ a2
 33256: 97 59 11                 a2 = s0 << 0x11
 33259: d3 59 09                 a2 = a2 ^ s0
 33262: ca a9 0a                 a3 = a2 * a3
 33265: 3e 09 78 12 03           u64 [0x31278] = a2
 33270: 98 a9 01                 a2 = a3 >> 0x1
 33273: d6 b9 09                 a2 = a2 mulhu a4
 33276: 98 99 04                 a2 = a2 >> 0x4
 33279: ca 29 09                 a2 = a2 * t0
 33282: c9 9a 0a                 a3 = a3 - a2
 33285: 95 aa 01                 a3 = a3 + 0x1
 33288: 7b 8a 48                 u64 [a1 + 0x48] = a3
 33291: 33 09 0a                 a2 = 0xa
 33294: 7b 79                    u64 [a0] = a2
 33296: 7b 78 08                 u64 [a0 + 0x8] = a1
 33299: 7b 79 10                 u64 [a0 + 0x10] = a2
 33302: 82 15                    s0 = u64 [sp]
 33304: 95 11 08                 sp = sp + 0x8
 33307: 32 00                    ret
      :                          @2289
 33309: 00                       trap
      :                          @2290
 33310: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 33313: 7b 10 38                 u64 [sp + 0x38] = ra
 33316: 7b 15 30                 u64 [sp + 0x30] = s0
 33319: 7b 16 28                 u64 [sp + 0x28] = s1
 33322: 7c 89 10                 a2 = u8 [a1 + 0x10]
 33325: 33 04 08                 t2 = 0x8
 33328: 52 09 0b                 jump @2292 if a2 != 0
      :                          @2291
 33331: 82 89                    a2 = u64 [a1]
 33333: 82 8a 08                 a3 = u64 [a1 + 0x8]
 33336: ae 9a 1e                 jump @2294 if a3 >=u a2
      :                          @2292
 33339: 33 08                    a1 = 0
 33341: 33 0c                    a5 = 0
 33343: 01                       fallthrough
      :                          @2293
 33344: 7b 78                    u64 [a0] = a1
 33346: 7b 74 08                 u64 [a0 + 0x8] = t2
 33349: 7b 7c 10                 u64 [a0 + 0x10] = a5
 33352: 82 10 38                 ra = u64 [sp + 0x38]
 33355: 82 15 30                 s0 = u64 [sp + 0x30]
 33358: 82 16 28                 s1 = u64 [sp + 0x28]
 33361: 95 11 40                 sp = sp + 0x40
 33364: 32 00                    ret
      :                          @2294
 33366: c9 9a 08                 a1 = a3 - a2
 33369: 95 84 01                 t2 = a1 + 0x1
 33372: 51 04 18 01              jump @2309 if t2 == 0
      :                          @2295
 33376: 7b 1a 18                 u64 [sp + 0x18] = a3
 33379: 7b 19 20                 u64 [sp + 0x20] = a2
 33382: 7b 18                    u64 [sp] = a1
 33384: 98 48 3c                 a1 = t2 >> 0x3c
 33387: 52 08 0a 01              jump @2310 if a1 != 0
      :                          @2296
 33391: 7b 17 10                 u64 [sp + 0x10] = a0
 33394: 88 89 01                 a2 = a1 <u 0x1
 33397: 7b 14 08                 u64 [sp + 0x8] = t2
 33400: 97 44 03                 t2 = t2 << 0x3
 33403: 97 99 03                 a2 = a2 << 0x3
 33406: 33 0c c0 22 03           a5 = 0x322c0
 33411: 33 02 00 00 01           t0 = 0x10000
 33416: c8 2c 0a                 a3 = a5 + t0
 33419: 01                       fallthrough
      :                          @2297
 33420: 82 a6                    s1 = u64 [a3]
 33422: c8 46 08                 a1 = s1 + t2
 33425: ac 68 e2 00              jump @2308 if a1 <u s1
      :                          @2298
 33429: c8 98 0b                 a4 = a1 + a2
 33432: d8 8b 05                 s0 = a4 <u a1
 33435: d8 b2 0b                 a4 = t0 <u a4
 33438: d4 5b 0b                 a4 = a4 | s0
 33441: 52 0b d2 00              jump @2308 if a4 != 0
      :                          @2299
 33445: c9 8c 0b                 a4 = a5 - a1
 33448: c8 2b 0b                 a4 = a4 + t0
 33451: 84 b5 07                 s0 = a4 & 0x7
 33454: c8 58 08                 a1 = a1 + s0
 33457: 01                       fallthrough
      :                          @2300
 33458: 82 a0                    ra = u64 [a3]
 33460: ab 60 d8                 jump @2297 if ra != s1
      :                          @2301
 33463: 7b a8                    u64 [a3] = a1
 33465: 33 03                    t1 = 0
 33467: 01                       fallthrough
      :                          @2302
 33468: 3a 08 a0 10 03           a1 = u64 [0x310a0]
 33473: c9 5b 04                 t2 = a4 - s0
 33476: 82 17 20                 a0 = u64 [sp + 0x20]
 33479: 82 19 18                 a2 = u64 [sp + 0x18]
 33482: ae 97 57                 jump @2306 if a0 >=u a2
      :                          @2303
 33485: 33 0c                    a5 = 0
 33487: 33 09 78 12 03           a2 = 0x31278
 33492: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
 33502: 33 02 14                 t0 = 0x14
 33505: 64 45                    s0 = t2
 33507: 82 17                    a0 = u64 [sp]
 33509: 01                       fallthrough
      :                          @2304
 33510: 3a 06 78 12 03           s1 = u64 [0x31278]
 33515: 97 6b 0d                 a4 = s1 << 0xd
 33518: d3 b6 06                 s1 = s1 ^ a4
 33521: 98 6b 07                 a4 = s1 >> 0x7
 33524: d3 b6 06                 s1 = s1 ^ a4
 33527: 97 6b 11                 a4 = s1 << 0x11
 33530: d3 6b 0b                 a4 = a4 ^ s1
 33533: ca 8b 06                 s1 = a4 * a1
 33536: 3e 0b 78 12 03           u64 [0x31278] = a4
 33541: d6 a6 0b                 a4 = s1 mulhu a3
 33544: 98 bb 04                 a4 = a4 >> 0x4
 33547: ca 2b 0b                 a4 = a4 * t0
 33550: c9 b6 06                 s1 = s1 - a4
 33553: 95 66 01                 s1 = s1 + 0x1
 33556: 7b 56                    u64 [s0] = s1
 33558: 95 cc 01                 a5 = a5 + 0x1
 33561: 95 55 08                 s0 = s0 + 0x8
 33564: ab c7 ca                 jump @2304 if a0 != a5
      :                          @2305
 33567: 28 05                    jump @2307
      :                          @2306
 33569: 33 0c                    a5 = 0
 33571: 01                       fallthrough
      :                          @2307
 33572: 3a 09 78 12 03           a2 = u64 [0x31278]
 33577: 97 9a 0d                 a3 = a2 << 0xd
 33580: d3 a9 09                 a2 = a2 ^ a3
 33583: 98 9a 07                 a3 = a2 >> 0x7
 33586: d3 a9 09                 a2 = a2 ^ a3
 33589: 97 9a 11                 a3 = a2 << 0x11
 33592: d3 a9 09                 a2 = a2 ^ a3
 33595: ca 89 08                 a1 = a2 * a1
 33598: 3e 09 78 12 03           u64 [0x31278] = a2
 33603: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
 33613: d6 78 07                 a0 = a1 mulhu a0
 33616: 98 77 04                 a0 = a0 >> 0x4
 33619: 33 09 14                 a2 = 0x14
 33622: ca 97 07                 a0 = a0 * a2
 33625: c9 78 08                 a1 = a1 - a0
 33628: 95 88 01                 a1 = a1 + 0x1
 33631: 97 c7 03                 a0 = a5 << 0x3
 33634: c8 47 07                 a0 = a0 + t2
 33637: 7b 78                    u64 [a0] = a1
 33639: 95 cc 01                 a5 = a5 + 0x1
 33642: 82 17 10                 a0 = u64 [sp + 0x10]
 33645: 82 18 08                 a1 = u64 [sp + 0x8]
 33648: 28 d0 fe                 jump @2293
      :                          @2308
 33651: 00                       trap
      :                          @2309
 33652: 00                       trap
      :                          @2310
 33653: 00                       trap
      :                          @2311
 33654: 95 11 80                 sp = sp + 0xffffffffffffff80
 33657: 7b 10 78                 u64 [sp + 0x78] = ra
 33660: 7b 15 70                 u64 [sp + 0x70] = s0
 33663: 7b 16 68                 u64 [sp + 0x68] = s1
 33666: 82 7b 18                 a4 = u64 [a0 + 0x18]
 33669: 7b 1b 20                 u64 [sp + 0x20] = a4
 33672: 95 bb 01                 a4 = a4 + 0x1
 33675: 51 0b 58 06              jump @2371 if a4 == 0
      :                          @2312
 33679: 64 84                    t2 = a1
 33681: 82 75 08                 s0 = u64 [a0 + 0x8]
 33684: 88 59 08                 a2 = s0 <u 0x8
 33687: 95 5c 01                 a5 = s0 + 0x1
 33690: 98 c2 03                 t0 = a5 >> 0x3
 33693: 84 ca f8                 a3 = a5 & 0xfffffffffffffff8
 33696: c9 2a 0a                 a3 = a3 - t0
 33699: db 95 0a                 a3 = s0 if a2 != 0
 33702: 98 a9 01                 a2 = a3 >> 0x1
 33705: 7b 15 60                 u64 [sp + 0x60] = s0
 33708: 7b 17 10                 u64 [sp + 0x10] = a0
 33711: ae b9 1d                 jump @2315 if a2 >=u a4
      :                          @2313
 33714: 7b 1c 18                 u64 [sp + 0x18] = a5
 33717: 95 a8 01                 a1 = a3 + 0x1
 33720: e4 8b 07                 a0 = maxu(a4, a1)
 33723: 55 17 08 89 00           jump @2322 if a0 >=u 8
      :                          @2314
 33728: 88 77 04                 a0 = a0 <u 0x4
 33731: 33 03 04                 t1 = 0x4
 33734: 93 73 08                 t1 = 0x8 if a0 == 0
 33737: 28 ba 00                 jump @2326
      :                          @2315
 33740: 7b 1a 08                 u64 [sp + 0x8] = a3
 33743: 82 78                    a1 = u64 [a0]
 33745: 64 c6                    s1 = a5
 33747: 84 c7 07                 a0 = a5 & 0x7
 33750: 8e 77                    a0 = a0 >u 0
 33752: c8 27 07                 a0 = a0 + t0
 33755: 51 07 36                 jump @2318 if a0 == 0
      :                          @2316
 33758: 14 02 01 01 01 01 01 01 01 01 t0 = 0x101010101010101
 33768: 14 09 7f 7f 7f 7f 7f 7f 7f 7f a2 = 0x7f7f7f7f7f7f7f7f
 33778: 64 8a                    a3 = a1
 33780: 01                       fallthrough
      :                          @2317
 33781: 82 ab                    a4 = u64 [a3]
 33783: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 33786: d4 9b 0c                 a5 = a4 | a2
 33789: 85 bb ff                 a4 = a4 ^ 0xffffffffffffffff
 33792: 98 bb 07                 a4 = a4 >> 0x7
 33795: d2 2b 0b                 a4 = a4 & t0
 33798: c8 cb 0b                 a4 = a4 + a5
 33801: 7b ab                    u64 [a3] = a4
 33803: 95 aa 08                 a3 = a3 + 0x8
 33806: 52 07 e7                 jump @2317 if a0 != 0
      :                          @2318
 33809: 7b 18 58                 u64 [sp + 0x58] = a1
 33812: 55 16 08 93 02           jump @2346 if s1 >=u 8
      :                          @2319
 33817: 95 87 08                 a0 = a1 + 0x8
 33820: 64 69                    a2 = s1
 33822: 7b 14 50                 u64 [sp + 0x50] = t2
 33825: 50 20 8e 02 bd 85 02     ra = 654, jump @13639
      :                          @2320 [@dyn 327]
 33832: 82 14 50                 t2 = u64 [sp + 0x50]
 33835: 82 12 58                 t0 = u64 [sp + 0x58]
 33838: 82 19 20                 a2 = u64 [sp + 0x20]
 33841: 52 06 c9 02              jump @2347 if s1 != 0
      :                          @2321
 33845: 82 17 08                 a0 = u64 [sp + 0x8]
 33848: c9 97 07                 a0 = a0 - a2
 33851: 82 18 10                 a1 = u64 [sp + 0x10]
 33854: 7b 87 10                 u64 [a1 + 0x10] = a0
 33857: 28 92 05                 jump @2369
      :                          @2322
 33860: 98 78 3d                 a1 = a0 >> 0x3d
 33863: 52 08 9d 05              jump @2372 if a1 != 0
      :                          @2323
 33867: 97 77 03                 a0 = a0 << 0x3
 33870: 33 03 01                 t1 = 0x1
 33873: 53 17 0e 32              jump @2326 if a0 <u 14
      :                          @2324
 33877: 3a 08 b8 10 03           a1 = u64 [0x310b8]
 33882: d6 87 08                 a1 = a0 mulhu a1
 33885: c9 87 07                 a0 = a0 - a1
 33888: 98 77 01                 a0 = a0 >> 0x1
 33891: c8 87 07                 a0 = a0 + a1
 33894: 98 77 02                 a0 = a0 >> 0x2
 33897: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 33900: 68 77                    a0 = clz a0
 33902: 9c 73 ff                 t1 = 0xffffffffffffffff >> a0
 33905: 14 07 fe ff ff ff ff ff ff 0f a0 = 0xffffffffffffffe
 33915: ac 37 68 05              jump @2371 if a0 <u t1
      :                          @2325
 33919: 95 33 01                 t1 = t1 + 0x1
 33922: 01                       fallthrough
      :                          @2326
 33923: 97 39 04                 a2 = t1 << 0x4
 33926: 95 38 08                 a1 = t1 + 0x8
 33929: c8 89 07                 a0 = a2 + a1
 33932: ac 97 57 05              jump @2371 if a0 <u a2
      :                          @2327
 33936: 7b 18 58                 u64 [sp + 0x58] = a1
 33939: 7b 14 50                 u64 [sp + 0x50] = t2
 33942: 33 00 c0 22 03           ra = 0x322c0
 33947: 33 04 00 00 01           t2 = 0x10000
 33952: c8 40 0c                 a5 = ra + t2
 33955: 01                       fallthrough
      :                          @2328
 33956: 82 c5                    s0 = u64 [a5]
 33958: c8 75 06                 s1 = s0 + a0
 33961: ac 56 39 05              jump @2370 if s1 <u s0
      :                          @2329
 33965: 95 68 08                 a1 = s1 + 0x8
 33968: d8 68 0b                 a4 = a1 <u s1
 33971: d8 84 08                 a1 = t2 <u a1
 33974: d4 b8 08                 a1 = a1 | a4
 33977: 52 08 29 05              jump @2370 if a1 != 0
      :                          @2330
 33981: c9 60 08                 a1 = ra - s1
 33984: c8 48 08                 a1 = a1 + t2
 33987: 84 8b 07                 a4 = a1 & 0x7
 33990: c8 b6 06                 s1 = s1 + a4
 33993: 01                       fallthrough
      :                          @2331
 33994: 82 ca                    a3 = u64 [a5]
 33996: ab 5a d8                 jump @2328 if a3 != s0
      :                          @2332
 33999: 7b c6                    u64 [a5] = s1
 34001: 33 02                    t0 = 0
 34003: c9 b8 08                 a1 = a1 - a4
 34006: c8 98 07                 a0 = a1 + a2
 34009: 95 35 ff                 s0 = t1 + 0xffffffffffffffff
 34012: 88 3a 09                 a3 = t1 <u 0x9
 34015: 98 38 03                 a1 = t1 >> 0x3
 34018: 84 39 f8                 a2 = t1 & 0xfffffffffffffff8
 34021: c9 89 06                 s1 = a2 - a1
 34024: db a5 06                 s1 = s0 if a3 != 0
 34027: 33 08 ff 00              a1 = 0xff
 34031: 7b 17 08                 u64 [sp + 0x8] = a0
 34034: 82 19 58                 a2 = u64 [sp + 0x58]
 34037: 50 20 90 02 64 86 02     ra = 656, jump @13675
      :                          @2333 [@dyn 328]
 34044: 82 17 10                 a0 = u64 [sp + 0x10]
 34047: 82 74                    t2 = u64 [a0]
 34049: 82 18 20                 a1 = u64 [sp + 0x20]
 34052: c9 86 06                 s1 = s1 - a1
 34055: 82 19 18                 a2 = u64 [sp + 0x18]
 34058: 51 09 81 04              jump @2362 if a2 == 0
      :                          @2334
 34062: 7b 16                    u64 [sp] = s1
 34064: 3a 06 a8 10 03           s1 = u64 [0x310a8]
 34069: 3a 07 b0 10 03           a0 = u64 [0x310b0]
 34074: 7b 17 40                 u64 [sp + 0x40] = a0
 34077: 82 17 50                 a0 = u64 [sp + 0x50]
 34080: 82 78                    a1 = u64 [a0]
 34082: 7b 18 38                 u64 [sp + 0x38] = a1
 34085: 82 77 08                 a0 = u64 [a0 + 0x8]
 34088: 7b 17 30                 u64 [sp + 0x30] = a0
 34091: 33 07                    a0 = 0
 34093: 95 48 f0                 a1 = t2 + 0xfffffffffffffff0
 34096: 7b 18 28                 u64 [sp + 0x28] = a1
 34099: 82 19 60                 a2 = u64 [sp + 0x60]
 34102: 82 10 08                 ra = u64 [sp + 0x8]
 34105: 7b 16 58                 u64 [sp + 0x58] = s1
 34108: 7b 14 48                 u64 [sp + 0x48] = t2
 34111: 28 47                    jump @2338
      :                          @2335
 34113: c8 90 07                 a0 = ra + a2
 34116: 98 38 39                 a1 = t1 >> 0x39
 34119: 95 9a f8                 a3 = a2 + 0xfffffffffffffff8
 34122: d2 5a 0a                 a3 = a3 & s0
 34125: c8 0a 0a                 a3 = a3 + ra
 34128: 78 78                    u8 [a0] = a1
 34130: 78 a8 08                 u8 [a3 + 0x8] = a1
 34133: c9 24 08                 a1 = t2 - t0
 34136: 95 88 f0                 a1 = a1 + 0xfffffffffffffff0
 34139: 97 99 04                 a2 = a2 << 0x4
 34142: c9 90 07                 a0 = ra - a2
 34145: 95 77 f0                 a0 = a0 + 0xfffffffffffffff0
 34148: 33 09 10                 a2 = 0x10
 34151: 64 06                    s1 = ra
 34153: 50 20 92 02 c3 83 02     ra = 658, jump @13621
      :                          @2336 [@dyn 329]
 34160: 64 60                    ra = s1
 34162: 82 16 58                 s1 = u64 [sp + 0x58]
 34165: 82 14 48                 t2 = u64 [sp + 0x48]
 34168: 82 19 60                 a2 = u64 [sp + 0x60]
 34171: 82 18 50                 a1 = u64 [sp + 0x50]
 34174: 01                       fallthrough
      :                          @2337
 34175: 95 87 01                 a0 = a1 + 0x1
 34178: aa 98 0b 01              jump @2344 if a1 == a2
      :                          @2338
 34182: 64 78                    a1 = a0
 34184: c8 47 07                 a0 = a0 + t2
 34187: 7d 77                    a0 = i8 [a0]
 34189: 57 07 f2                 jump @2337 if a0 <s 0
      :                          @2339
 34192: 7b 18 50                 u64 [sp + 0x50] = a1
 34195: 97 82 04                 t0 = a1 << 0x4
 34198: 82 17 28                 a0 = u64 [sp + 0x28]
 34201: c9 27 08                 a1 = a0 - t0
 34204: 82 88                    a1 = u64 [a1]
 34206: 82 19 38                 a2 = u64 [sp + 0x38]
 34209: d3 98 08                 a1 = a1 ^ a2
 34212: 82 17 40                 a0 = u64 [sp + 0x40]
 34215: ca 78 08                 a1 = a1 * a0
 34218: 82 1a 30                 a3 = u64 [sp + 0x30]
 34221: d3 a8 08                 a1 = a1 ^ a3
 34224: 9e 88 38                 a1 = a1 >>r 0x38
 34227: ca 78 08                 a1 = a1 * a0
 34230: d3 89 09                 a2 = a2 ^ a1
 34233: 9e 99 28                 a2 = a2 >>r 0x28
 34236: ca 79 0a                 a3 = a2 * a0
 34239: d3 a8 08                 a1 = a1 ^ a3
 34242: dc 98 03                 t1 = a1 <<r a2
 34245: d2 53 09                 a2 = t1 & s0
 34248: c8 90 0a                 a3 = ra + a2
 34251: 7c ab 01                 a4 = u8 [a3 + 0x1]
 34254: 7c ac                    a5 = u8 [a3]
 34256: 7c a7 02                 a0 = u8 [a3 + 0x2]
 34259: 7c a8 03                 a1 = u8 [a3 + 0x3]
 34262: 97 bb 08                 a4 = a4 << 0x8
 34265: d4 cb 0b                 a4 = a4 | a5
 34268: 97 77 10                 a0 = a0 << 0x10
 34271: 97 88 18                 a1 = a1 << 0x18
 34274: d4 87 07                 a0 = a0 | a1
 34277: d4 b7 07                 a0 = a0 | a4
 34280: 7c a8 05                 a1 = u8 [a3 + 0x5]
 34283: 7c ab 04                 a4 = u8 [a3 + 0x4]
 34286: 7c ac 06                 a5 = u8 [a3 + 0x6]
 34289: 7c aa 07                 a3 = u8 [a3 + 0x7]
 34292: 97 88 08                 a1 = a1 << 0x8
 34295: d4 b8 08                 a1 = a1 | a4
 34298: 97 cc 10                 a5 = a5 << 0x10
 34301: 97 aa 18                 a3 = a3 << 0x18
 34304: d4 ca 0a                 a3 = a3 | a5
 34307: d4 a8 08                 a1 = a1 | a3
 34310: 97 88 20                 a1 = a1 << 0x20
 34313: d4 87 07                 a0 = a0 | a1
 34316: d2 67 0b                 a4 = a0 & s1
 34319: 52 0b 5d                 jump @2342 if a4 != 0
      :                          @2340
 34322: 33 0a 08                 a3 = 0x8
 34325: 01                       fallthrough
      :                          @2341
 34326: c8 a9 09                 a2 = a2 + a3
 34329: d2 59 09                 a2 = a2 & s0
 34332: c8 90 07                 a0 = ra + a2
 34335: 7c 78 01                 a1 = u8 [a0 + 0x1]
 34338: 7c 7b                    a4 = u8 [a0]
 34340: 7c 7c 02                 a5 = u8 [a0 + 0x2]
 34343: 7c 76 03                 s1 = u8 [a0 + 0x3]
 34346: 97 88 08                 a1 = a1 << 0x8
 34349: d4 b8 08                 a1 = a1 | a4
 34352: 97 cc 10                 a5 = a5 << 0x10
 34355: 97 66 18                 s1 = s1 << 0x18
 34358: d4 6c 0c                 a5 = a5 | s1
 34361: d4 c8 08                 a1 = a1 | a5
 34364: 7c 7b 05                 a4 = u8 [a0 + 0x5]
 34367: 7c 7c 04                 a5 = u8 [a0 + 0x4]
 34370: 7c 76 06                 s1 = u8 [a0 + 0x6]
 34373: 7c 77 07                 a0 = u8 [a0 + 0x7]
 34376: 97 bb 08                 a4 = a4 << 0x8
 34379: d4 cb 0b                 a4 = a4 | a5
 34382: 97 66 10                 s1 = s1 << 0x10
 34385: 97 77 18                 a0 = a0 << 0x18
 34388: d4 67 07                 a0 = a0 | s1
 34391: 82 16 58                 s1 = u64 [sp + 0x58]
 34394: d4 b7 07                 a0 = a0 | a4
 34397: 97 77 20                 a0 = a0 << 0x20
 34400: d4 87 07                 a0 = a0 | a1
 34403: d2 67 0b                 a4 = a0 & s1
 34406: 95 aa 08                 a3 = a3 + 0x8
 34409: 51 0b ad                 jump @2341 if a4 == 0
      :                          @2342
 34412: 6a b7                    a0 = ctz a4
 34414: 98 77 03                 a0 = a0 >> 0x3
 34417: c8 97 07                 a0 = a0 + a2
 34420: d2 57 09                 a2 = a0 & s0
 34423: c8 90 07                 a0 = ra + a2
 34426: 7d 77                    a0 = i8 [a0]
 34428: 57 07 c5 fe              jump @2335 if a0 <s 0
      :                          @2343
 34432: 82 07                    a0 = u64 [ra]
 34434: d2 67 07                 a0 = a0 & s1
 34437: 6a 79                    a2 = ctz a0
 34439: 98 99 03                 a2 = a2 >> 0x3
 34442: 28 b7 fe                 jump @2335
      :                          @2344
 34445: 82 17 10                 a0 = u64 [sp + 0x10]
 34448: 7b 70                    u64 [a0] = ra
 34450: 7b 75 08                 u64 [a0 + 0x8] = s0
 34453: 82 18                    a1 = u64 [sp]
 34455: 7b 78 10                 u64 [a0 + 0x10] = a1
 34458: 82 18 20                 a1 = u64 [sp + 0x20]
 34461: 7b 78 18                 u64 [a0 + 0x18] = a1
 34464: 52 09 fd 02              jump @2363 if a2 != 0
      :                          @2345
 34468: 28 2f 03                 jump @2369
      :                          @2346
 34471: c8 68 07                 a0 = a1 + s1
 34474: 82 18 58                 a1 = u64 [sp + 0x58]
 34477: 7c 82 01                 t0 = u8 [a1 + 0x1]
 34480: 82 18 58                 a1 = u64 [sp + 0x58]
 34483: 7c 83                    t1 = u8 [a1]
 34485: 82 18 58                 a1 = u64 [sp + 0x58]
 34488: 7c 8a 03                 a3 = u8 [a1 + 0x3]
 34491: 82 18 58                 a1 = u64 [sp + 0x58]
 34494: 7c 8b 02                 a4 = u8 [a1 + 0x2]
 34497: 82 18 58                 a1 = u64 [sp + 0x58]
 34500: 7c 8c 06                 a5 = u8 [a1 + 0x6]
 34503: 82 18 58                 a1 = u64 [sp + 0x58]
 34506: 7c 86 07                 s1 = u8 [a1 + 0x7]
 34509: 82 18 58                 a1 = u64 [sp + 0x58]
 34512: 7c 88 04                 a1 = u8 [a1 + 0x4]
 34515: 82 19 58                 a2 = u64 [sp + 0x58]
 34518: 7c 99 05                 a2 = u8 [a2 + 0x5]
 34521: 78 7c 06                 u8 [a0 + 0x6] = a5
 34524: 78 76 07                 u8 [a0 + 0x7] = s1
 34527: 82 15 60                 s0 = u64 [sp + 0x60]
 34530: 78 78 04                 u8 [a0 + 0x4] = a1
 34533: 78 79 05                 u8 [a0 + 0x5] = a2
 34536: 78 7b 02                 u8 [a0 + 0x2] = a4
 34539: 78 7a 03                 u8 [a0 + 0x3] = a3
 34542: 78 73                    u8 [a0] = t1
 34544: 78 72 01                 u8 [a0 + 0x1] = t0
 34547: 82 12 58                 t0 = u64 [sp + 0x58]
 34550: 82 19 20                 a2 = u64 [sp + 0x20]
 34553: 01                       fallthrough
      :                          @2347
 34554: 33 07                    a0 = 0
 34556: 3a 06 a8 10 03           s1 = u64 [0x310a8]
 34561: 3a 08 b0 10 03           a1 = u64 [0x310b0]
 34566: 7b 18 40                 u64 [sp + 0x40] = a1
 34569: 95 28 f0                 a1 = t0 + 0xfffffffffffffff0
 34572: 7b 18 18                 u64 [sp + 0x18] = a1
 34575: 82 48                    a1 = u64 [t2]
 34577: 7b 18 38                 u64 [sp + 0x38] = a1
 34580: 82 48 08                 a1 = u64 [t2 + 0x8]
 34583: 7b 18 30                 u64 [sp + 0x30] = a1
 34586: 33 08 80 00              a1 = 0x80
 34590: 28 25                    jump @2350
      :                          @2348
 34592: 98 47 39                 a0 = t2 >> 0x39
 34595: 95 b8 f8                 a1 = a4 + 0xfffffffffffffff8
 34598: d2 58 08                 a1 = a1 & s0
 34601: c8 28 08                 a1 = a1 + t0
 34604: 82 19 28                 a2 = u64 [sp + 0x28]
 34607: 78 97                    u8 [a2] = a0
 34609: 78 87 08                 u8 [a1 + 0x8] = a0
 34612: 82 19 20                 a2 = u64 [sp + 0x20]
 34615: 33 08 80 00              a1 = 0x80
 34619: 01                       fallthrough
      :                          @2349
 34620: 95 b7 01                 a0 = a4 + 0x1
 34623: aa 5b f6 fc              jump @2321 if a4 == s0
      :                          @2350
 34627: 64 7b                    a4 = a0
 34629: c8 72 0a                 a3 = t0 + a0
 34632: 7c a7                    a0 = u8 [a3]
 34634: ab 87 f2                 jump @2349 if a0 != a1
      :                          @2351
 34637: 7b 1a 28                 u64 [sp + 0x28] = a3
 34640: 7b 1b 50                 u64 [sp + 0x50] = a4
 34643: 97 b7 04                 a0 = a4 << 0x4
 34646: c9 72 08                 a1 = t0 - a0
 34649: 95 88 f0                 a1 = a1 + 0xfffffffffffffff0
 34652: 82 19 18                 a2 = u64 [sp + 0x18]
 34655: c9 79 09                 a2 = a2 - a0
 34658: 7b 19 48                 u64 [sp + 0x48] = a2
 34661: 01                       fallthrough
      :                          @2352
 34662: 82 17 48                 a0 = u64 [sp + 0x48]
 34665: 82 77                    a0 = u64 [a0]
 34667: 82 19 38                 a2 = u64 [sp + 0x38]
 34670: d3 97 07                 a0 = a0 ^ a2
 34673: 82 1a 40                 a3 = u64 [sp + 0x40]
 34676: ca a7 07                 a0 = a0 * a3
 34679: 82 1b 30                 a4 = u64 [sp + 0x30]
 34682: d3 b7 07                 a0 = a0 ^ a4
 34685: 9e 77 38                 a0 = a0 >>r 0x38
 34688: ca a7 07                 a0 = a0 * a3
 34691: d3 79 09                 a2 = a2 ^ a0
 34694: 9e 99 28                 a2 = a2 >>r 0x28
 34697: ca a9 0a                 a3 = a2 * a3
 34700: d3 a7 07                 a0 = a0 ^ a3
 34703: dc 97 04                 t2 = a0 <<r a2
 34706: d2 54 00                 ra = t2 & s0
 34709: c8 02 09                 a2 = t0 + ra
 34712: 7c 9a 01                 a3 = u8 [a2 + 0x1]
 34715: 7c 9c                    a5 = u8 [a2]
 34717: 7c 9b 02                 a4 = u8 [a2 + 0x2]
 34720: 7c 97 03                 a0 = u8 [a2 + 0x3]
 34723: 97 aa 08                 a3 = a3 << 0x8
 34726: d4 ca 0a                 a3 = a3 | a5
 34729: 97 bb 10                 a4 = a4 << 0x10
 34732: 97 77 18                 a0 = a0 << 0x18
 34735: d4 b7 07                 a0 = a0 | a4
 34738: d4 a7 07                 a0 = a0 | a3
 34741: 7c 9a 05                 a3 = u8 [a2 + 0x5]
 34744: 7c 9b 04                 a4 = u8 [a2 + 0x4]
 34747: 7c 9c 06                 a5 = u8 [a2 + 0x6]
 34750: 7c 99 07                 a2 = u8 [a2 + 0x7]
 34753: 97 aa 08                 a3 = a3 << 0x8
 34756: d4 ba 0a                 a3 = a3 | a4
 34759: 97 cc 10                 a5 = a5 << 0x10
 34762: 97 99 18                 a2 = a2 << 0x18
 34765: d4 c9 09                 a2 = a2 | a5
 34768: d4 a9 09                 a2 = a2 | a3
 34771: 97 99 20                 a2 = a2 << 0x20
 34774: d4 97 07                 a0 = a0 | a2
 34777: d2 67 0a                 a3 = a0 & s1
 34780: 64 0c                    a5 = ra
 34782: 52 0a 66                 jump @2355 if a3 != 0
      :                          @2353
 34785: 33 09 08                 a2 = 0x8
 34788: 64 0c                    a5 = ra
 34790: 01                       fallthrough
      :                          @2354
 34791: c8 9c 0c                 a5 = a5 + a2
 34794: d2 5c 0c                 a5 = a5 & s0
 34797: c8 c2 07                 a0 = t0 + a5
 34800: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 34803: 7c 7b                    a4 = u8 [a0]
 34805: 7c 72 02                 t0 = u8 [a0 + 0x2]
 34808: 7c 73 03                 t1 = u8 [a0 + 0x3]
 34811: 97 aa 08                 a3 = a3 << 0x8
 34814: d4 ba 0a                 a3 = a3 | a4
 34817: 97 22 10                 t0 = t0 << 0x10
 34820: 97 33 18                 t1 = t1 << 0x18
 34823: d4 23 0b                 a4 = t1 | t0
 34826: 82 12 58                 t0 = u64 [sp + 0x58]
 34829: d4 ab 03                 t1 = a4 | a3
 34832: 7c 7b 05                 a4 = u8 [a0 + 0x5]
 34835: 7c 75 04                 s0 = u8 [a0 + 0x4]
 34838: 64 6a                    a3 = s1
 34840: 7c 76 06                 s1 = u8 [a0 + 0x6]
 34843: 7c 77 07                 a0 = u8 [a0 + 0x7]
 34846: 97 bb 08                 a4 = a4 << 0x8
 34849: d4 5b 0b                 a4 = a4 | s0
 34852: 97 66 10                 s1 = s1 << 0x10
 34855: 97 77 18                 a0 = a0 << 0x18
 34858: d4 67 07                 a0 = a0 | s1
 34861: 64 a6                    s1 = a3
 34863: 82 15 60                 s0 = u64 [sp + 0x60]
 34866: d4 b7 07                 a0 = a0 | a4
 34869: 97 77 20                 a0 = a0 << 0x20
 34872: d4 37 07                 a0 = a0 | t1
 34875: d2 7a 0a                 a3 = a3 & a0
 34878: 95 99 08                 a2 = a2 + 0x8
 34881: 51 0a a6                 jump @2354 if a3 == 0
      :                          @2355
 34884: 6a a7                    a0 = ctz a3
 34886: 98 77 03                 a0 = a0 >> 0x3
 34889: c8 c7 07                 a0 = a0 + a5
 34892: d2 57 09                 a2 = a0 & s0
 34895: c8 92 07                 a0 = t0 + a2
 34898: 7d 77                    a0 = i8 [a0]
 34900: 57 07 0e                 jump @2357 if a0 <s 0
      :                          @2356
 34903: 82 27                    a0 = u64 [t0]
 34905: d2 67 07                 a0 = a0 & s1
 34908: 6a 79                    a2 = ctz a0
 34910: 98 99 03                 a2 = a2 >> 0x3
 34913: 01                       fallthrough
      :                          @2357
 34914: 82 1b 50                 a4 = u64 [sp + 0x50]
 34917: c9 0b 07                 a0 = a4 - ra
 34920: c9 09 0a                 a3 = a2 - ra
 34923: d3 a7 07                 a0 = a0 ^ a3
 34926: d2 57 07                 a0 = a0 & s0
 34929: 33 0a 08                 a3 = 0x8
 34932: ac a7 ac fe              jump @2348 if a0 <u a3
      :                          @2358
 34936: 97 97 04                 a0 = a2 << 0x4
 34939: c9 72 07                 a0 = t0 - a0
 34942: 95 77 f0                 a0 = a0 + 0xfffffffffffffff0
 34945: c8 92 0a                 a3 = t0 + a2
 34948: 7c a3                    t1 = u8 [a3]
 34950: 98 4c 39                 a5 = t2 >> 0x39
 34953: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 34956: d2 59 09                 a2 = a2 & s0
 34959: c8 29 09                 a2 = a2 + t0
 34962: 78 ac                    u8 [a3] = a5
 34964: 78 9c 08                 u8 [a2 + 0x8] = a5
 34967: 51 23 ff 00 c5 00        jump @2360 if t1 == 255
      :                          @2359
 34973: 7c 79                    a2 = u8 [a0]
 34975: 7c 8a                    a3 = u8 [a1]
 34977: 78 89                    u8 [a1] = a2
 34979: 78 7a                    u8 [a0] = a3
 34981: 7c 79 01                 a2 = u8 [a0 + 0x1]
 34984: 7c 8a 01                 a3 = u8 [a1 + 0x1]
 34987: 78 89 01                 u8 [a1 + 0x1] = a2
 34990: 78 7a 01                 u8 [a0 + 0x1] = a3
 34993: 7c 79 02                 a2 = u8 [a0 + 0x2]
 34996: 7c 8a 02                 a3 = u8 [a1 + 0x2]
 34999: 78 89 02                 u8 [a1 + 0x2] = a2
 35002: 78 7a 02                 u8 [a0 + 0x2] = a3
 35005: 7c 79 03                 a2 = u8 [a0 + 0x3]
 35008: 7c 8a 03                 a3 = u8 [a1 + 0x3]
 35011: 78 89 03                 u8 [a1 + 0x3] = a2
 35014: 78 7a 03                 u8 [a0 + 0x3] = a3
 35017: 7c 79 04                 a2 = u8 [a0 + 0x4]
 35020: 7c 8a 04                 a3 = u8 [a1 + 0x4]
 35023: 78 89 04                 u8 [a1 + 0x4] = a2
 35026: 78 7a 04                 u8 [a0 + 0x4] = a3
 35029: 7c 79 05                 a2 = u8 [a0 + 0x5]
 35032: 7c 8a 05                 a3 = u8 [a1 + 0x5]
 35035: 78 89 05                 u8 [a1 + 0x5] = a2
 35038: 78 7a 05                 u8 [a0 + 0x5] = a3
 35041: 7c 79 06                 a2 = u8 [a0 + 0x6]
 35044: 7c 8a 06                 a3 = u8 [a1 + 0x6]
 35047: 78 89 06                 u8 [a1 + 0x6] = a2
 35050: 78 7a 06                 u8 [a0 + 0x6] = a3
 35053: 7c 79 07                 a2 = u8 [a0 + 0x7]
 35056: 7c 8a 07                 a3 = u8 [a1 + 0x7]
 35059: 78 89 07                 u8 [a1 + 0x7] = a2
 35062: 78 7a 07                 u8 [a0 + 0x7] = a3
 35065: 7c 79 08                 a2 = u8 [a0 + 0x8]
 35068: 7c 8a 08                 a3 = u8 [a1 + 0x8]
 35071: 78 89 08                 u8 [a1 + 0x8] = a2
 35074: 78 7a 08                 u8 [a0 + 0x8] = a3
 35077: 7c 79 09                 a2 = u8 [a0 + 0x9]
 35080: 7c 8a 09                 a3 = u8 [a1 + 0x9]
 35083: 78 89 09                 u8 [a1 + 0x9] = a2
 35086: 78 7a 09                 u8 [a0 + 0x9] = a3
 35089: 7c 79 0a                 a2 = u8 [a0 + 0xa]
 35092: 7c 8a 0a                 a3 = u8 [a1 + 0xa]
 35095: 78 89 0a                 u8 [a1 + 0xa] = a2
 35098: 78 7a 0a                 u8 [a0 + 0xa] = a3
 35101: 7c 79 0b                 a2 = u8 [a0 + 0xb]
 35104: 7c 8a 0b                 a3 = u8 [a1 + 0xb]
 35107: 78 89 0b                 u8 [a1 + 0xb] = a2
 35110: 78 7a 0b                 u8 [a0 + 0xb] = a3
 35113: 7c 79 0c                 a2 = u8 [a0 + 0xc]
 35116: 7c 8a 0c                 a3 = u8 [a1 + 0xc]
 35119: 78 89 0c                 u8 [a1 + 0xc] = a2
 35122: 78 7a 0c                 u8 [a0 + 0xc] = a3
 35125: 7c 79 0d                 a2 = u8 [a0 + 0xd]
 35128: 7c 8a 0d                 a3 = u8 [a1 + 0xd]
 35131: 78 89 0d                 u8 [a1 + 0xd] = a2
 35134: 78 7a 0d                 u8 [a0 + 0xd] = a3
 35137: 7c 79 0e                 a2 = u8 [a0 + 0xe]
 35140: 7c 8a 0e                 a3 = u8 [a1 + 0xe]
 35143: 78 89 0e                 u8 [a1 + 0xe] = a2
 35146: 78 7a 0e                 u8 [a0 + 0xe] = a3
 35149: 7c 79 0f                 a2 = u8 [a0 + 0xf]
 35152: 7c 8a 0f                 a3 = u8 [a1 + 0xf]
 35155: 78 89 0f                 u8 [a1 + 0xf] = a2
 35158: 78 7a 0f                 u8 [a0 + 0xf] = a3
 35161: 28 0d fe                 jump @2352
      :                          @2360
 35164: 95 b9 f8                 a2 = a4 + 0xfffffffffffffff8
 35167: d2 59 09                 a2 = a2 & s0
 35170: c8 29 09                 a2 = a2 + t0
 35173: 82 1b 28                 a4 = u64 [sp + 0x28]
 35176: 46 0b ff 00              u8 [a4 + 0] = 0xff
 35180: 46 19 08 ff 00           u8 [a2 + 8] = 0xff
 35185: 33 09 10                 a2 = 0x10
 35188: 50 20 94 02 b8 7f 02     ra = 660, jump @13621
      :                          @2361 [@dyn 330]
 35195: 82 1b 50                 a4 = u64 [sp + 0x50]
 35198: 82 12 58                 t0 = u64 [sp + 0x58]
 35201: 82 19 20                 a2 = u64 [sp + 0x20]
 35204: 33 08 80 00              a1 = 0x80
 35208: 28 b4 fd                 jump @2349
      :                          @2362
 35211: 82 19 08                 a2 = u64 [sp + 0x8]
 35214: 7b 79                    u64 [a0] = a2
 35216: 7b 75 08                 u64 [a0 + 0x8] = s0
 35219: 7b 76 10                 u64 [a0 + 0x10] = s1
 35222: 7b 78 18                 u64 [a0 + 0x18] = a1
 35225: 82 19 60                 a2 = u64 [sp + 0x60]
 35228: 01                       fallthrough
      :                          @2363
 35229: 82 18 18                 a1 = u64 [sp + 0x18]
 35232: 97 88 04                 a1 = a1 << 0x4
 35235: c8 89 07                 a0 = a2 + a1
 35238: 95 77 09                 a0 = a0 + 0x9
 35241: 33 09 00 00 01           a2 = 0x10000
 35246: ac 79 25                 jump @2369 if a2 <u a0
      :                          @2364
 35249: c9 84 08                 a1 = t2 - a1
 35252: 33 0a c0 22 03           a3 = 0x322c0
 35257: 95 a9 00 00 01           a2 = a3 + 0x10000
 35262: 01                       fallthrough
      :                          @2365
 35263: 82 9a                    a3 = u64 [a2]
 35265: c9 a9 0b                 a4 = a2 - a3
 35268: ab 8b 0f                 jump @2369 if a4 != a1
      :                          @2366
 35271: c9 7a 0b                 a4 = a3 - a0
 35274: 01                       fallthrough
      :                          @2367
 35275: 82 9c                    a5 = u64 [a2]
 35277: ab ac f2                 jump @2365 if a5 != a3
      :                          @2368
 35280: 7b 9b                    u64 [a2] = a4
 35282: 01                       fallthrough
      :                          @2369
 35283: 82 10 78                 ra = u64 [sp + 0x78]
 35286: 82 15 70                 s0 = u64 [sp + 0x70]
 35289: 82 16 68                 s1 = u64 [sp + 0x68]
 35292: 95 11 80 00              sp = sp + 0x80
 35296: 32 00                    ret
      :                          @2370
 35298: 00                       trap
      :                          @2371
 35299: 00                       trap
      :                          @2372
 35300: 00                       trap
      :                          @2373
 35301: 82 9a                    a3 = u64 [a2]
 35303: 95 ab 08                 a4 = a3 + 0x8
 35306: ac ab 15 01              jump @2400 if a4 <u a3
      :                          @2374
 35310: 95 b7 08                 a0 = a4 + 0x8
 35313: d8 b7 0c                 a5 = a0 <u a4
 35316: d8 72 07                 a0 = t0 <u a0
 35319: d4 c7 07                 a0 = a0 | a5
 35322: 52 07 05 01              jump @2400 if a0 != 0
      :                          @2375
 35326: c9 b6 07                 a0 = s1 - a4
 35329: c8 27 07                 a0 = a0 + t0
 35332: 84 7c 07                 a5 = a0 & 0x7
 35335: c8 cb 0b                 a4 = a4 + a5
 35338: 01                       fallthrough
      :                          @2376
 35339: 82 95                    s0 = u64 [a2]
 35341: ab a5 d8                 jump @2373 if s0 != a3
      :                          @2377
 35344: 7b 9b                    u64 [a2] = a4
 35346: c9 c7 02                 t0 = a0 - a5
 35349: 33 08 00 04 01           a1 = 0x10400
 35354: 7b 28                    u64 [t0] = a1
 35356: 33 08 c0 22 03           a1 = 0x322c0
 35361: 33 03 00 00 01           t1 = 0x10000
 35366: c8 38 0a                 a3 = a1 + t1
 35369: 01                       fallthrough
      :                          @2378
 35370: 82 ab                    a4 = u64 [a3]
 35372: 95 bc 10                 a5 = a4 + 0x10
 35375: ac bc d1 00              jump @2401 if a5 <u a4
      :                          @2379
 35379: 95 c9 08                 a2 = a5 + 0x8
 35382: d8 c9 05                 s0 = a2 <u a5
 35385: d8 93 09                 a2 = t1 <u a2
 35388: d4 59 09                 a2 = a2 | s0
 35391: 52 09 c1 00              jump @2401 if a2 != 0
      :                          @2380
 35395: c9 c8 05                 s0 = a1 - a5
 35398: c8 35 05                 s0 = s0 + t1
 35401: 84 59 07                 a2 = s0 & 0x7
 35404: c8 9c 0c                 a5 = a5 + a2
 35407: 01                       fallthrough
      :                          @2381
 35408: 82 a7                    a0 = u64 [a3]
 35410: ab b7 d8                 jump @2378 if a0 != a4
      :                          @2382
 35413: 7b ac                    u64 [a3] = a5
 35415: c9 95 05                 s0 = s0 - a2
 35418: 7b 52                    u64 [s0] = t0
 35420: 33 07 20 04 01           a0 = 0x10420
 35425: 7b 57 08                 u64 [s0 + 0x8] = a0
 35428: 01                       fallthrough
      :                          @2383
 35429: 3a 09 80 12 03           a2 = u64 [0x31280]
 35434: 52 09 0b                 jump @2385 if a2 != 0
      :                          @2384
 35437: 3e 05 80 12 03           u64 [0x31280] = s0
 35442: 33 08                    a1 = 0
 35444: 01                       fallthrough
      :                          @2385
 35445: 51 09 7a                 jump @2399 if a2 == 0
      :                          @2386
 35448: 7b 19                    u64 [sp] = a2
 35450: 82 57 08                 a0 = u64 [s0 + 0x8]
 35453: 7b 17 08                 u64 [sp + 0x8] = a0
 35456: 82 56                    s1 = u64 [s0]
 35458: 82 78                    a1 = u64 [a0]
 35460: 64 67                    a0 = s1
 35462: b4 80 02 96 02           ra = 662, jump [a1]
      :                          @2387 [@dyn 331]
 35467: 82 17 08                 a0 = u64 [sp + 0x8]
 35470: 82 77 08                 a0 = u64 [a0 + 0x8]
 35473: 95 79 ff ff fe           a2 = a0 + 0xfffffffffffeffff
 35478: 53 39 00 00 ff 32        jump @2393 if a2 <u 4294901760
      :                          @2388
 35484: 33 08 c0 22 03           a1 = 0x322c0
 35489: 95 88 00 00 01           a1 = a1 + 0x10000
 35494: 01                       fallthrough
      :                          @2389
 35495: 82 89                    a2 = u64 [a1]
 35497: c9 98 0a                 a3 = a1 - a2
 35500: ab 6a 1c                 jump @2393 if a3 != s1
      :                          @2390
 35503: c9 79 0a                 a3 = a2 - a0
 35506: 01                       fallthrough
      :                          @2391
 35507: 82 8b                    a4 = u64 [a1]
 35509: ab 9b f2                 jump @2389 if a4 != a2
      :                          @2392
 35512: 7b 8a                    u64 [a1] = a3
 35514: 33 0c                    a5 = 0
 35516: 33 07 c0 22 03           a0 = 0x322c0
 35521: 95 77 00 00 01           a0 = a0 + 0x10000
 35526: 28 0d                    jump @2394
      :                          @2393
 35528: 33 07 c0 22 03           a0 = 0x322c0
 35533: 95 77 00 00 01           a0 = a0 + 0x10000
 35538: 01                       fallthrough
      :                          @2394
 35539: 82 78                    a1 = u64 [a0]
 35541: c9 87 09                 a2 = a0 - a1
 35544: ab 59 14                 jump @2398 if a2 != s0
      :                          @2395
 35547: 95 89 f0                 a2 = a1 + 0xfffffffffffffff0
 35550: 01                       fallthrough
      :                          @2396
 35551: 82 7a                    a3 = u64 [a0]
 35553: ab 8a f2                 jump @2394 if a3 != a1
      :                          @2397
 35556: 7b 79                    u64 [a0] = a2
 35558: 33 0b                    a4 = 0
 35560: 82 15                    s0 = u64 [sp]
 35562: 28 05                    jump @2399
      :                          @2398
 35564: 82 15                    s0 = u64 [sp]
 35566: 01                       fallthrough
      :                          @2399
 35567: 64 57                    a0 = s0
 35569: 82 10 20                 ra = u64 [sp + 0x20]
 35572: 82 15 18                 s0 = u64 [sp + 0x18]
 35575: 82 16 10                 s1 = u64 [sp + 0x10]
 35578: 95 11 28                 sp = sp + 0x28
 35581: 32 00                    ret
      :                          @2400
 35583: 00                       trap
      :                          @2401
 35584: 00                       trap
      :                          @2402
 35585: 51 08 14                 jump @2406 if a1 == 0
      :                          @2403
 35588: 64 7a                    a3 = a0
 35590: 64 8b                    a4 = a1
 35592: 01                       fallthrough
      :                          @2404
 35593: 64 b9                    a2 = a4
 35595: cd ba 0b                 a4 = a3 %u a4
 35598: 64 9a                    a3 = a2
 35600: 52 0b f9                 jump @2404 if a4 != 0
      :                          @2405
 35603: 28 07                    jump @2407
      :                          @2406
 35605: 64 79                    a2 = a0
 35607: 51 07 0b                 jump @2408 if a0 == 0
      :                          @2407
 35610: cb 97 07                 a0 = a0 /u a2
 35613: ca 87 07                 a0 = a0 * a1
 35616: 32 00                    ret
      :                          @2408
 35618: 00                       trap
      :                          @2409
 35619: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 35622: 7b 10 28                 u64 [sp + 0x28] = ra
 35625: 7b 15 20                 u64 [sp + 0x20] = s0
 35628: 7b 16 18                 u64 [sp + 0x18] = s1
 35631: 64 75                    s0 = a0
 35633: 51 09 3a                 jump @2413 if a2 == 0
      :                          @2410
 35636: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 35646: d3 87 07                 a0 = a0 ^ a1
 35649: e1 97 07                 a0 = a0 | ~a2
 35652: 51 07 4d                 jump @2415 if a0 == 0
      :                          @2411
 35655: cc 98 06                 s1 = a1 /s a2
 35658: ca 96 07                 a0 = s1 * a2
 35661: c9 78 0a                 a3 = a1 - a0
 35664: 64 17                    a0 = sp
 35666: 64 98                    a1 = a2
 35668: 64 a9                    a2 = a3
 35670: 50 20 98 02 cd           ra = 664, jump @2409
      :                          @2412 [@dyn 332]
 35675: 82 17 10                 a0 = u64 [sp + 0x10]
 35678: 82 19 08                 a2 = u64 [sp + 0x8]
 35681: 82 18                    a1 = u64 [sp]
 35683: ca 76 0a                 a3 = s1 * a0
 35686: c9 a9 09                 a2 = a2 - a3
 35689: 28 12                    jump @2414
      :                          @2413
 35691: 8e 8a                    a3 = a1 >u 0
 35693: 89 8b                    a4 = a1 <s 0
 35695: 33 07 ff                 a0 = 0xffffffffffffffff
 35698: da ba 07                 a0 = a3 if a4 == 0
 35701: 9a 8a                    a3 = -a1
 35703: e3 a8 08                 a1 = maxs(a1, a3)
 35706: 01                       fallthrough
      :                          @2414
 35707: 7b 58                    u64 [s0] = a1
 35709: 7b 57 08                 u64 [s0 + 0x8] = a0
 35712: 7b 59 10                 u64 [s0 + 0x10] = a2
 35715: 82 10 28                 ra = u64 [sp + 0x28]
 35718: 82 15 20                 s0 = u64 [sp + 0x20]
 35721: 82 16 18                 s1 = u64 [sp + 0x18]
 35724: 95 11 30                 sp = sp + 0x30
 35727: 32 00                    ret
      :                          @2415
 35729: 00                       trap
      :                          @2416 [@dyn 333]
 35730: 82 18                    a1 = u64 [sp]
 35732: 33 07 01                 a0 = 0x1
 35735: ab 78 1a                 jump @2418 if a1 != a0
      :                          @2417
 35738: 82 18 08                 a1 = u64 [sp + 0x8]
 35741: ce 58 08                 a1 = a1 %s s0
 35744: c8 58 08                 a1 = a1 + s0
 35747: ce 58 08                 a1 = a1 %s s0
 35750: 82 10 20                 ra = u64 [sp + 0x20]
 35753: 82 15 18                 s0 = u64 [sp + 0x18]
 35756: 95 11 28                 sp = sp + 0x28
 35759: 32 00                    ret
      :                          @2418
 35761: 33 07                    a0 = 0
 35763: 82 10 20                 ra = u64 [sp + 0x20]
 35766: 82 15 18                 s0 = u64 [sp + 0x18]
 35769: 95 11 28                 sp = sp + 0x28
 35772: 32 00                    ret
      :                          @2419
 35774: d8 87 08                 a1 = a0 <u a1
 35777: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
 35780: db 89 04                 t2 = a2 if a1 != 0
 35783: da 8c 03                 t1 = a5 if a1 == 0
 35786: ae 43 26                 jump @2424 if t1 >=u t2
      :                          @2420
 35789: c8 34 08                 a1 = t2 + t1
 35792: 95 88 01                 a1 = a1 + 0x1
 35795: 98 8c 01                 a5 = a1 >> 0x1
 35798: 64 29                    a2 = t0
 35800: 33 08 01                 a1 = 0x1
 35803: 01                       fallthrough
      :                          @2421
 35804: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 35807: 51 09 df                 jump @2419 if a2 == 0
      :                          @2422
 35810: d6 c8 0a                 a3 = a1 mulhu a5
 35813: ca c8 08                 a1 = a1 * a5
 35816: db ab 08                 a1 = a4 if a3 != 0
 35819: ae 87 f1                 jump @2421 if a0 >=u a1
      :                          @2423
 35822: 28 d0                    jump @2419
      :                          @2424
 35824: 64 37                    a0 = t1
 35826: 32 00                    ret
      :                          @2425
 35828: 84 89 01                 a2 = a1 & 0x1
 35831: 52 09 09                 jump @2427 if a2 != 0
      :                          @2426
 35834: 33 07                    a0 = 0
 35836: 28 44 34 02              jump @12250
      :                          @2427
 35840: cd 87 0c                 a5 = a0 %u a1
 35843: 51 0c 4f                 jump @2438 if a5 == 0
      :                          @2428
 35846: 33 07 01                 a0 = 0x1
 35849: 33 03 03                 t1 = 0x3
 35852: 33 02 05                 t0 = 0x5
 35855: 64 8b                    a4 = a1
 35857: 28 18                    jump @2431
      :                          @2429
 35859: 64 c8                    a1 = a5
 35861: 01                       fallthrough
      :                          @2430
 35862: d2 8b 0a                 a3 = a4 & a1
 35865: 84 aa 02                 a3 = a3 & 0x2
 35868: 9a 79                    a2 = -a0
 35870: cd 8b 0c                 a5 = a4 %u a1
 35873: db a9 07                 a0 = a2 if a3 != 0
 35876: 64 8b                    a4 = a1
 35878: 51 0c 38                 jump @2439 if a5 == 0
      :                          @2431
 35881: 84 c8 01                 a1 = a5 & 0x1
 35884: 52 08 e7                 jump @2429 if a1 != 0
      :                          @2432
 35887: 84 b8 07                 a1 = a4 & 0x7
 35890: aa 38 06                 jump @2434 if a1 == t1
      :                          @2433
 35893: ab 28 12                 jump @2436 if a1 != t0
      :                          @2434
 35896: 98 c8 01                 a1 = a5 >> 0x1
 35899: 84 ca 02                 a3 = a5 & 0x2
 35902: 9a 77                    a0 = -a0
 35904: 64 8c                    a5 = a1
 35906: 51 0a f6                 jump @2434 if a3 == 0
      :                          @2435
 35909: 28 d1                    jump @2430
      :                          @2436
 35911: 84 c8 02                 a1 = a5 & 0x2
 35914: 98 cc 01                 a5 = a5 >> 0x1
 35917: 51 08 fa                 jump @2436 if a1 == 0
      :                          @2437
 35920: 28 c3                    jump @2429
      :                          @2438
 35922: 33 07 01                 a0 = 0x1
 35925: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 35928: 94 87                    a0 = 0 if a1 != 0
 35930: 28 e6 33 02              jump @12250
      :                          @2439
 35934: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 35937: 94 87                    a0 = 0 if a1 != 0
 35939: 32 00                    ret
      :                          @2440
 35941: 33 08 02                 a1 = 0x2
 35944: aa 87 2a                 jump @2449 if a0 == a1
      :                          @2441
 35947: 95 77 01                 a0 = a0 + 0x1
 35950: ac 97 fd                 jump @2441 if a0 <u a2
      :                          @2442
 35953: 84 78 01                 a1 = a0 & 0x1
 35956: 51 08 f1                 jump @2440 if a1 == 0
      :                          @2443
 35959: ac a7 20                 jump @2450 if a0 <u a3
      :                          @2444
 35962: 33 08 03                 a1 = 0x3
 35965: 01                       fallthrough
      :                          @2445
 35966: 51 08 1b                 jump @2451 if a1 == 0
      :                          @2446
 35969: cd 87 0b                 a4 = a0 %u a1
 35972: 51 0b e7                 jump @2441 if a4 == 0
      :                          @2447
 35975: 95 88 02                 a1 = a1 + 0x2
 35978: ca 88 0b                 a4 = a1 * a1
 35981: ae b7 f1                 jump @2445 if a0 >=u a4
      :                          @2448
 35984: 32 00                    ret
      :                          @2449
 35986: 33 07 02                 a0 = 0x2
 35989: 32 00                    ret
      :                          @2450
 35991: 32 00                    ret
      :                          @2451
 35993: 00                       trap
      :                          @2452
 35994: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 35997: 7b 10 40                 u64 [sp + 0x40] = ra
 36000: 7b 15 38                 u64 [sp + 0x38] = s0
 36003: 7b 16 30                 u64 [sp + 0x30] = s1
 36006: 7b 17 08                 u64 [sp + 0x8] = a0
 36009: 33 06                    s1 = 0
 36011: 95 75 ff                 s0 = a0 + 0xffffffffffffffff
 36014: 49 11 18                 u64 [sp + 24] = 0
 36017: 33 07 08                 a0 = 0x8
 36020: 7b 17 20                 u64 [sp + 0x20] = a0
 36023: 84 58 01                 a1 = s0 & 0x1
 36026: 49 11 28                 u64 [sp + 40] = 0
 36029: 7b 15 10                 u64 [sp + 0x10] = s0
 36032: 52 08 46                 jump @2458 if a1 != 0
      :                          @2453
 36035: 33 06                    s1 = 0
 36037: 33 09 02                 a2 = 0x2
 36040: 82 1a 10                 a3 = u64 [sp + 0x10]
 36043: 28 1b                    jump @2455
      :                          @2454
 36045: 97 68 03                 a1 = s1 << 0x3
 36048: c8 78 08                 a1 = a1 + a0
 36051: 7b 89                    u64 [a1] = a2
 36053: 95 66 01                 s1 = s1 + 0x1
 36056: 98 a5 01                 s0 = a3 >> 0x1
 36059: 84 a8 02                 a1 = a3 & 0x2
 36062: 7b 16 28                 u64 [sp + 0x28] = s1
 36065: 64 5a                    a3 = s0
 36067: 52 08 23                 jump @2458 if a1 != 0
      :                          @2455
 36070: 82 18 18                 a1 = u64 [sp + 0x18]
 36073: ab 86 e4                 jump @2454 if s1 != a1
      :                          @2456
 36076: 95 17 18                 a0 = sp + 0x18
 36079: 64 68                    a1 = s1
 36081: 64 a5                    s0 = a3
 36083: 50 20 9c 02 14 c6        ra = 668, jump @1581
      :                          @2457 [@dyn 334]
 36089: 64 5a                    a3 = s0
 36091: 33 09 02                 a2 = 0x2
 36094: 82 16 28                 s1 = u64 [sp + 0x28]
 36097: 82 17 20                 a0 = u64 [sp + 0x20]
 36100: 28 c9                    jump @2454
      :                          @2458
 36102: 55 15 09 32              jump @2464 if s0 >=u 9
      :                          @2459
 36106: 82 18 18                 a1 = u64 [sp + 0x18]
 36109: 54 15 01 79              jump @2473 if s0 <=u 1
      :                          @2460
 36113: ab 86 15                 jump @2463 if s1 != a1
      :                          @2461
 36116: 95 17 18                 a0 = sp + 0x18
 36119: 64 68                    a1 = s1
 36121: 50 20 9e 02 ee c5        ra = 670, jump @1581
      :                          @2462 [@dyn 335]
 36127: 82 16 28                 s1 = u64 [sp + 0x28]
 36130: 82 18 18                 a1 = u64 [sp + 0x18]
 36133: 01                       fallthrough
      :                          @2463
 36134: 7b 18                    u64 [sp] = a1
 36136: 82 17 20                 a0 = u64 [sp + 0x20]
 36139: 97 68 03                 a1 = s1 << 0x3
 36142: c8 78 08                 a1 = a1 + a0
 36145: 7b 85                    u64 [a1] = s0
 36147: 95 66 01                 s1 = s1 + 0x1
 36150: 28 56                    jump @2474
      :                          @2464
 36152: 33 09 03                 a2 = 0x3
 36155: 28 0b                    jump @2466
      :                          @2465
 36157: 95 99 02                 a2 = a2 + 0x2
 36160: ca 99 07                 a0 = a2 * a2
 36163: ac 75 c7                 jump @2459 if s0 <u a0
      :                          @2466
 36166: 51 09 7f 01              jump @2514 if a2 == 0
      :                          @2467
 36170: cd 95 07                 a0 = s0 %u a2
 36173: 52 07 f0                 jump @2465 if a0 != 0
      :                          @2468
 36176: 28 1c                    jump @2470
      :                          @2469
 36178: 82 17 20                 a0 = u64 [sp + 0x20]
 36181: 97 68 03                 a1 = s1 << 0x3
 36184: c8 87 07                 a0 = a0 + a1
 36187: 7b 79                    u64 [a0] = a2
 36189: 95 66 01                 s1 = s1 + 0x1
 36192: cb 95 05                 s0 = s0 /u a2
 36195: cd 95 07                 a0 = s0 %u a2
 36198: 7b 16 28                 u64 [sp + 0x28] = s1
 36201: 52 07 d4                 jump @2465 if a0 != 0
      :                          @2470
 36204: 82 17 18                 a0 = u64 [sp + 0x18]
 36207: ab 76 e3                 jump @2469 if s1 != a0
      :                          @2471
 36210: 95 17 18                 a0 = sp + 0x18
 36213: 64 68                    a1 = s1
 36215: 64 96                    s1 = a2
 36217: 50 20 a0 02 8e c5        ra = 672, jump @1581
      :                          @2472 [@dyn 336]
 36223: 64 69                    a2 = s1
 36225: 82 16 28                 s1 = u64 [sp + 0x28]
 36228: 28 ce                    jump @2469
      :                          @2473
 36230: 7b 18                    u64 [sp] = a1
 36232: 82 17 20                 a0 = u64 [sp + 0x20]
 36235: 01                       fallthrough
      :                          @2474
 36236: 64 68                    a1 = s1
 36238: 64 75                    s0 = a0
 36240: 50 20 a2 02 35 86        ra = 674, jump @344
      :                          @2475 [@dyn 337]
 36246: 33 02 02                 t0 = 0x2
 36249: ae 26 0c                 jump @2477 if s1 >=u t0
      :                          @2476
 36252: 64 68                    a1 = s1
 36254: 82 1b 08                 a4 = u64 [sp + 0x8]
 36257: 64 54                    t2 = s0
 36259: 28 57                    jump @2486
      :                          @2477
 36261: 82 5c                    a5 = u64 [s0]
 36263: 95 57 10                 a0 = s0 + 0x10
 36266: 33 0a 01                 a3 = 0x1
 36269: c9 6a 08                 a1 = a3 - s1
 36272: 33 09 02                 a2 = 0x2
 36275: 82 1b 08                 a4 = u64 [sp + 0x8]
 36278: 64 54                    t2 = s0
 36280: 01                       fallthrough
      :                          @2478
 36281: 64 c5                    s0 = a5
 36283: 82 7c f8                 a5 = u64 [a0 + 0xfffffffffffffff8]
 36286: aa 5c 13                 jump @2481 if a5 == s0
      :                          @2479
 36289: 95 99 01                 a2 = a2 + 0x1
 36292: c8 98 0a                 a3 = a1 + a2
 36295: 95 77 08                 a0 = a0 + 0x8
 36298: ab 2a ef                 jump @2478 if a3 != t0
      :                          @2480
 36301: 64 68                    a1 = s1
 36303: 28 2b                    jump @2486
      :                          @2481
 36305: 95 98 ff                 a1 = a2 + 0xffffffffffffffff
 36308: ae 69 26                 jump @2486 if a2 >=u s1
      :                          @2482
 36311: c9 96 09                 a2 = s1 - a2
 36314: 28 0b                    jump @2484
      :                          @2483
 36316: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 36319: 95 77 08                 a0 = a0 + 0x8
 36322: 51 09 18                 jump @2486 if a2 == 0
      :                          @2484
 36325: 97 8a 03                 a3 = a1 << 0x3
 36328: c8 4a 0a                 a3 = a3 + t2
 36331: 82 76                    s1 = u64 [a0]
 36333: 82 ac f8                 a5 = u64 [a3 + 0xfffffffffffffff8]
 36336: aa c6 ec                 jump @2483 if s1 == a5
      :                          @2485
 36339: 7b a6                    u64 [a3] = s1
 36341: 95 88 01                 a1 = a1 + 0x1
 36344: 28 e4                    jump @2483
      :                          @2486
 36346: 53 1b 03 5a              jump @2498 if a4 <u 3
      :                          @2487
 36350: 97 88 03                 a1 = a1 << 0x3
 36353: c8 48 08                 a1 = a1 + t2
 36356: 33 02 02                 t0 = 0x2
 36359: 33 03 01                 t1 = 0x1
 36362: 28 05                    jump @2489
      :                          @2488
 36364: aa b2 48                 jump @2498 if t0 == a4
      :                          @2489
 36367: 64 27                    a0 = t0
 36369: 95 22 01                 t0 = t0 + 0x1
 36372: 64 4a                    a3 = t2
 36374: 28 05                    jump @2491
      :                          @2490
 36376: aa 3c f4                 jump @2488 if a5 == t1
      :                          @2491
 36379: aa 8a 6e                 jump @2506 if a3 == a1
      :                          @2492
 36382: 82 ac                    a5 = u64 [a3]
 36384: 51 0c a6 00              jump @2515 if a5 == 0
      :                          @2493
 36388: 82 19 10                 a2 = u64 [sp + 0x10]
 36391: ac c9 e5                 jump @2488 if a2 <u a5
      :                          @2494
 36394: 95 aa 08                 a3 = a3 + 0x8
 36397: 82 19 10                 a2 = u64 [sp + 0x10]
 36400: cb c9 06                 s1 = a2 /u a5
 36403: 33 0c 01                 a5 = 0x1
 36406: 64 75                    s0 = a0
 36408: 28 0b                    jump @2496
      :                          @2495
 36410: 98 66 01                 s1 = s1 >> 0x1
 36413: ca 55 05                 s0 = s0 * s0
 36416: 51 06 d8                 jump @2490 if s1 == 0
      :                          @2496
 36419: 84 69 01                 a2 = s1 & 0x1
 36422: cd b5 05                 s0 = s0 %u a4
 36425: 51 09 f1                 jump @2495 if a2 == 0
      :                          @2497
 36428: ca c5 09                 a2 = s0 * a5
 36431: cd b9 0c                 a5 = a2 %u a4
 36434: 28 e8                    jump @2495
      :                          @2498
 36436: 82 18                    a1 = u64 [sp]
 36438: 51 08 2f                 jump @2505 if a1 == 0
      :                          @2499
 36441: 56 28 00 20 2c           jump @2505 if a1 >u 8192
      :                          @2500
 36446: 97 87 03                 a0 = a1 << 0x3
 36449: 33 08 c0 22 03           a1 = 0x322c0
 36454: 95 88 00 00 01           a1 = a1 + 0x10000
 36459: 01                       fallthrough
      :                          @2501
 36460: 82 89                    a2 = u64 [a1]
 36462: c9 98 0a                 a3 = a1 - a2
 36465: ab 4a 14                 jump @2505 if a3 != t2
      :                          @2502
 36468: c9 79 0a                 a3 = a2 - a0
 36471: 01                       fallthrough
      :                          @2503
 36472: 82 8b                    a4 = u64 [a1]
 36474: ab 9b f2                 jump @2501 if a4 != a2
      :                          @2504
 36477: 7b 8a                    u64 [a1] = a3
 36479: 33 0c                    a5 = 0
 36481: 33 07                    a0 = 0
 36483: 28 34                    jump @2513
      :                          @2505
 36485: 33 07                    a0 = 0
 36487: 28 30                    jump @2513
      :                          @2506
 36489: 82 19                    a2 = u64 [sp]
 36491: 51 09 2c                 jump @2513 if a2 == 0
      :                          @2507
 36494: 33 08 00 20              a1 = 0x2000
 36498: ac 98 25                 jump @2513 if a1 <u a2
      :                          @2508
 36501: 97 98 03                 a1 = a2 << 0x3
 36504: 33 09 c0 22 03           a2 = 0x322c0
 36509: 95 99 00 00 01           a2 = a2 + 0x10000
 36514: 01                       fallthrough
      :                          @2509
 36515: 82 9a                    a3 = u64 [a2]
 36517: c9 a9 0b                 a4 = a2 - a3
 36520: ab 4b 0f                 jump @2513 if a4 != t2
      :                          @2510
 36523: c9 8a 0b                 a4 = a3 - a1
 36526: 01                       fallthrough
      :                          @2511
 36527: 82 9c                    a5 = u64 [a2]
 36529: ab ac f2                 jump @2509 if a5 != a3
      :                          @2512
 36532: 7b 9b                    u64 [a2] = a4
 36534: 01                       fallthrough
      :                          @2513
 36535: 82 10 40                 ra = u64 [sp + 0x40]
 36538: 82 15 38                 s0 = u64 [sp + 0x38]
 36541: 82 16 30                 s1 = u64 [sp + 0x30]
 36544: 95 11 48                 sp = sp + 0x48
 36547: 32 00                    ret
      :                          @2514
 36549: 00                       trap
      :                          @2515
 36550: 00                       trap
      :                          @2516 [@dyn 338]
 36551: 82 17 10                 a0 = u64 [sp + 0x10]
 36554: 52 17 01 4c              jump @2518 if a0 != 1
      :                          @2517
 36558: 82 17 18                 a0 = u64 [sp + 0x18]
 36561: 82 1b 08                 a4 = u64 [sp + 0x8]
 36564: 82 18                    a1 = u64 [sp]
 36566: c9 b8 08                 a1 = a1 - a4
 36569: ce 58 08                 a1 = a1 %s s0
 36572: 9a 59                    a2 = -s0
 36574: e3 95 09                 a2 = maxs(s0, a2)
 36577: 99 8a 3f                 a3 = a1 >>a 0x3f
 36580: d2 9a 0a                 a3 = a3 & a2
 36583: c8 a8 08                 a1 = a1 + a3
 36586: ce 57 07                 a0 = a0 %s s0
 36589: c8 57 07                 a0 = a0 + s0
 36592: ce 57 07                 a0 = a0 %s s0
 36595: ca 78 07                 a0 = a1 * a0
 36598: ce 57 07                 a0 = a0 %s s0
 36601: 99 78 3f                 a1 = a0 >>a 0x3f
 36604: d2 98 08                 a1 = a1 & a2
 36607: c8 87 07                 a0 = a0 + a1
 36610: ca 67 07                 a0 = a0 * s1
 36613: c8 b7 07                 a0 = a0 + a4
 36616: 82 10 38                 ra = u64 [sp + 0x38]
 36619: 82 15 30                 s0 = u64 [sp + 0x30]
 36622: 82 16 28                 s1 = u64 [sp + 0x28]
 36625: 95 11 40                 sp = sp + 0x40
 36628: 32 00                    ret
      :                          @2518
 36630: 00                       trap
      :                          @2519
 36631: 95 11 98                 sp = sp + 0xffffffffffffff98
 36634: 7b 10 60                 u64 [sp + 0x60] = ra
 36637: 7b 15 58                 u64 [sp + 0x58] = s0
 36640: 7b 16 50                 u64 [sp + 0x50] = s1
 36643: 82 86 08                 s1 = u64 [a1 + 0x8]
 36646: 51 06 a2 01              jump @2537 if s1 == 0
      :                          @2520
 36650: 64 85                    s0 = a1
 36652: 82 89                    a2 = u64 [a1]
 36654: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 36664: d3 98 08                 a1 = a1 ^ a2
 36667: e1 68 08                 a1 = a1 | ~s1
 36670: 51 08 89 01              jump @2536 if a1 == 0
      :                          @2521
 36674: 7b 17 30                 u64 [sp + 0x30] = a0
 36677: 82 77                    a0 = u64 [a0]
 36679: 7b 17 28                 u64 [sp + 0x28] = a0
 36682: 7b 19 18                 u64 [sp + 0x18] = a2
 36685: ce 69 08                 a1 = a2 %s s1
 36688: 9a 67                    a0 = -s1
 36690: e3 76 09                 a2 = maxs(s1, a0)
 36693: 99 87 3f                 a0 = a1 >>a 0x3f
 36696: 7b 19 20                 u64 [sp + 0x20] = a2
 36699: d2 97 07                 a0 = a0 & a2
 36702: c8 78 08                 a1 = a1 + a0
 36705: 95 17 38                 a0 = sp + 0x38
 36708: 64 69                    a2 = s1
 36710: 50 20 a6 02 bd fb        ra = 678, jump @2409
      :                          @2522 [@dyn 339]
 36716: 82 17 38                 a0 = u64 [sp + 0x38]
 36719: 52 17 01 5a 01           jump @2538 if a0 != 1
      :                          @2523
 36724: 82 17 40                 a0 = u64 [sp + 0x40]
 36727: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 36737: d3 87 09                 a2 = a0 ^ a1
 36740: e1 69 09                 a2 = a2 | ~s1
 36743: 51 09 40 01              jump @2536 if a2 == 0
      :                          @2524
 36747: ce 67 07                 a0 = a0 %s s1
 36750: c8 67 07                 a0 = a0 + s1
 36753: d3 78 08                 a1 = a1 ^ a0
 36756: e1 68 08                 a1 = a1 | ~s1
 36759: 51 08 30 01              jump @2536 if a1 == 0
      :                          @2525
 36763: 82 18 30                 a1 = u64 [sp + 0x30]
 36766: 82 88 08                 a1 = u64 [a1 + 0x8]
 36769: 82 19 28                 a2 = u64 [sp + 0x28]
 36772: c9 98 09                 a2 = a1 - a2
 36775: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 36785: d3 89 0a                 a3 = a2 ^ a1
 36788: e1 6a 0a                 a3 = a3 | ~s1
 36791: 51 0a 10 01              jump @2536 if a3 == 0
      :                          @2526
 36795: ce 67 07                 a0 = a0 %s s1
 36798: ce 69 09                 a2 = a2 %s s1
 36801: 99 9a 3f                 a3 = a2 >>a 0x3f
 36804: 82 1b 20                 a4 = u64 [sp + 0x20]
 36807: d2 ba 0a                 a3 = a3 & a4
 36810: c8 a9 09                 a2 = a2 + a3
 36813: ca 79 09                 a2 = a2 * a0
 36816: d3 89 07                 a0 = a2 ^ a1
 36819: e1 67 07                 a0 = a0 | ~s1
 36822: 51 07 f1 00              jump @2536 if a0 == 0
      :                          @2527
 36826: 82 55 10                 s0 = u64 [s0 + 0x10]
 36829: 51 05 eb 00              jump @2537 if s0 == 0
      :                          @2528
 36833: 82 17 18                 a0 = u64 [sp + 0x18]
 36836: ca 76 08                 a1 = s1 * a0
 36839: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 36849: d3 87 07                 a0 = a0 ^ a1
 36852: e1 57 07                 a0 = a0 | ~s0
 36855: 51 07 d0 00              jump @2536 if a0 == 0
      :                          @2529
 36859: 7b 19 10                 u64 [sp + 0x10] = a2
 36862: 7b 18                    u64 [sp] = a1
 36864: ce 58 08                 a1 = a1 %s s0
 36867: 9a 57                    a0 = -s0
 36869: e3 75 09                 a2 = maxs(s0, a0)
 36872: 99 87 3f                 a0 = a1 >>a 0x3f
 36875: 7b 19 08                 u64 [sp + 0x8] = a2
 36878: d2 97 07                 a0 = a0 & a2
 36881: c8 78 08                 a1 = a1 + a0
 36884: 95 17 38                 a0 = sp + 0x38
 36887: 64 59                    a2 = s0
 36889: 50 20 a8 02 0a fb        ra = 680, jump @2409
      :                          @2530 [@dyn 340]
 36895: 82 17 38                 a0 = u64 [sp + 0x38]
 36898: 52 17 01 a7 00           jump @2538 if a0 != 1
      :                          @2531
 36903: 82 17 40                 a0 = u64 [sp + 0x40]
 36906: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 36916: d3 97 08                 a1 = a0 ^ a2
 36919: e1 58 08                 a1 = a1 | ~s0
 36922: 51 08 8d 00              jump @2536 if a1 == 0
      :                          @2532
 36926: ce 57 08                 a1 = a0 %s s0
 36929: c8 58 08                 a1 = a1 + s0
 36932: d3 89 09                 a2 = a2 ^ a1
 36935: e1 59 07                 a0 = a2 | ~s0
 36938: 51 07 7d                 jump @2536 if a0 == 0
      :                          @2533
 36941: 82 17 10                 a0 = u64 [sp + 0x10]
 36944: ce 67 07                 a0 = a0 %s s1
 36947: 99 79 3f                 a2 = a0 >>a 0x3f
 36950: 82 1a 20                 a3 = u64 [sp + 0x20]
 36953: d2 a9 09                 a2 = a2 & a3
 36956: 82 1a 30                 a3 = u64 [sp + 0x30]
 36959: 82 aa 10                 a3 = u64 [a3 + 0x10]
 36962: c8 97 07                 a0 = a0 + a2
 36965: 82 19 18                 a2 = u64 [sp + 0x18]
 36968: ca 97 07                 a0 = a0 * a2
 36971: 82 19 28                 a2 = u64 [sp + 0x28]
 36974: c8 97 07                 a0 = a0 + a2
 36977: c9 7a 0a                 a3 = a3 - a0
 36980: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 36990: d3 9a 0b                 a4 = a3 ^ a2
 36993: e1 5b 0b                 a4 = a4 | ~s0
 36996: 51 0b 43                 jump @2536 if a4 == 0
      :                          @2534
 36999: ce 58 08                 a1 = a1 %s s0
 37002: ce 5a 0a                 a3 = a3 %s s0
 37005: 99 ab 3f                 a4 = a3 >>a 0x3f
 37008: 82 1c 08                 a5 = u64 [sp + 0x8]
 37011: d2 cb 0b                 a4 = a4 & a5
 37014: c8 ba 0a                 a3 = a3 + a4
 37017: ca 8a 08                 a1 = a3 * a1
 37020: d3 89 09                 a2 = a2 ^ a1
 37023: e1 59 09                 a2 = a2 | ~s0
 37026: 51 09 25                 jump @2536 if a2 == 0
      :                          @2535
 37029: ce 58 08                 a1 = a1 %s s0
 37032: 99 89 3f                 a2 = a1 >>a 0x3f
 37035: d2 c9 09                 a2 = a2 & a5
 37038: c8 98 08                 a1 = a1 + a2
 37041: 82 19                    a2 = u64 [sp]
 37043: ca 98 08                 a1 = a1 * a2
 37046: c8 87 07                 a0 = a0 + a1
 37049: 82 10 60                 ra = u64 [sp + 0x60]
 37052: 82 15 58                 s0 = u64 [sp + 0x58]
 37055: 82 16 50                 s1 = u64 [sp + 0x50]
 37058: 95 11 68                 sp = sp + 0x68
 37061: 32 00                    ret
      :                          @2536
 37063: 00                       trap
      :                          @2537
 37064: 00                       trap
      :                          @2538
 37065: 00                       trap
      :                          @2539
 37066: 82 95                    s0 = u64 [a2]
 37068: 95 5c 65                 a5 = s0 + 0x65
 37071: ac 5c 0a 01              jump @2558 if a5 <u s0
      :                          @2540
 37075: 95 ca 01                 a3 = a5 + 0x1
 37078: 88 ab 01                 a4 = a3 <u 0x1
 37081: d8 a8 0a                 a3 = a1 <u a3
 37084: d4 ba 0a                 a3 = a3 | a4
 37087: 52 0a fa 00              jump @2558 if a3 != 0
      :                          @2541
 37091: 82 9a                    a3 = u64 [a2]
 37093: ab 5a e5                 jump @2539 if a3 != s0
      :                          @2542
 37096: 7b 9c                    u64 [a2] = a5
 37098: 33 0b                    a4 = 0
 37100: 7b 17                    u64 [sp] = a0
 37102: 33 07 c0 22 03           a0 = 0x322c0
 37107: 7b 17 10                 u64 [sp + 0x10] = a0
 37110: 95 78 00 00 01           a1 = a0 + 0x10000
 37115: c9 c8 06                 s1 = a1 - a5
 37118: 33 08 01                 a1 = 0x1
 37121: 33 09 65                 a2 = 0x65
 37124: 64 67                    a0 = s1
 37126: 50 20 aa 02 53 7a 02     ra = 682, jump @13675
      :                          @2543 [@dyn 341]
 37133: 33 0b 65                 a4 = 0x65
 37136: 64 63                    t1 = s1
 37138: 33 08                    a1 = 0
 37140: 49 11 18                 u64 [sp + 24] = 0
 37143: 33 07 08                 a0 = 0x8
 37146: 7b 17 20                 u64 [sp + 0x20] = a0
 37149: 49 11 28                 u64 [sp + 40] = 0
 37152: 82 1a 10                 a3 = u64 [sp + 0x10]
 37155: 95 a9 9f ff 00           a2 = a3 + 0xff9f
 37160: c9 59 06                 s1 = a2 - s0
 37163: 33 05 02                 s0 = 0x2
 37166: 33 0c 05                 a5 = 0x5
 37169: 33 02 64                 t0 = 0x64
 37172: 7b 13 08                 u64 [sp + 0x8] = t1
 37175: 28 10                    jump @2545
      :                          @2544
 37177: 95 55 01                 s0 = s0 + 0x1
 37180: 95 c9 02                 a2 = a5 + 0x2
 37183: c8 c6 06                 s1 = s1 + a5
 37186: 64 9c                    a5 = a2
 37188: aa b5 53                 jump @2552 if s0 == a4
      :                          @2545
 37191: c8 53 09                 a2 = t1 + s0
 37194: 7c 99                    a2 = u8 [a2]
 37196: 51 09 ed                 jump @2544 if a2 == 0
      :                          @2546
 37199: 82 19 18                 a2 = u64 [sp + 0x18]
 37202: ab 98 22                 jump @2549 if a1 != a2
      :                          @2547
 37205: 95 17 18                 a0 = sp + 0x18
 37208: 7b 1c 10                 u64 [sp + 0x10] = a5
 37211: 50 20 ac 02 ac c1        ra = 684, jump @1581
      :                          @2548 [@dyn 342]
 37217: 82 1c 10                 a5 = u64 [sp + 0x10]
 37220: 33 02 64                 t0 = 0x64
 37223: 33 0b 65                 a4 = 0x65
 37226: 82 13 08                 t1 = u64 [sp + 0x8]
 37229: 82 18 28                 a1 = u64 [sp + 0x28]
 37232: 82 17 20                 a0 = u64 [sp + 0x20]
 37235: 01                       fallthrough
      :                          @2549
 37236: 97 89 03                 a2 = a1 << 0x3
 37239: c8 79 09                 a2 = a2 + a0
 37242: 7b 95                    u64 [a2] = s0
 37244: 95 88 01                 a1 = a1 + 0x1
 37247: ca 55 09                 a2 = s0 * s0
 37250: 7b 18 28                 u64 [sp + 0x28] = a1
 37253: 64 6a                    a3 = s1
 37255: ac 92 b2                 jump @2544 if t0 <u a2
      :                          @2550
 37258: 46 0a                    u8 [a3 + 0] = 0
 37260: c8 59 09                 a2 = a2 + s0
 37263: c8 5a 0a                 a3 = a3 + s0
 37266: ac b9 f8                 jump @2550 if a2 <u a4
      :                          @2551
 37269: 28 a4                    jump @2544
      :                          @2552
 37271: 82 17 28                 a0 = u64 [sp + 0x28]
 37274: 82 18 20                 a1 = u64 [sp + 0x20]
 37277: 82 19 18                 a2 = u64 [sp + 0x18]
 37280: 82 1a                    a3 = u64 [sp]
 37282: 7b a7 10                 u64 [a3 + 0x10] = a0
 37285: 7b a8 08                 u64 [a3 + 0x8] = a1
 37288: 7b a9                    u64 [a3] = a2
 37290: 33 07 c0 22 03           a0 = 0x322c0
 37295: 95 77 00 00 01           a0 = a0 + 0x10000
 37300: 01                       fallthrough
      :                          @2553
 37301: 82 78                    a1 = u64 [a0]
 37303: c9 87 09                 a2 = a0 - a1
 37306: ab 39 11                 jump @2557 if a2 != t1
      :                          @2554
 37309: 95 89 9b                 a2 = a1 + 0xffffffffffffff9b
 37312: 01                       fallthrough
      :                          @2555
 37313: 82 7a                    a3 = u64 [a0]
 37315: ab 8a f2                 jump @2553 if a3 != a1
      :                          @2556
 37318: 7b 79                    u64 [a0] = a2
 37320: 33 0b                    a4 = 0
 37322: 01                       fallthrough
      :                          @2557
 37323: 82 10 40                 ra = u64 [sp + 0x40]
 37326: 82 15 38                 s0 = u64 [sp + 0x38]
 37329: 82 16 30                 s1 = u64 [sp + 0x30]
 37332: 95 11 48                 sp = sp + 0x48
 37335: 32 00                    ret
      :                          @2558
 37337: 00                       trap
      :                          @2559
 37338: 51 07 41                 jump @2562 if a0 == 0
      :                          @2560
 37341: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 37344: 7b 10 08                 u64 [sp + 0x8] = ra
 37347: 7b 15                    u64 [sp] = s0
 37349: 64 75                    s0 = a0
 37351: 98 77 01                 a0 = a0 >> 0x1
 37354: 50 20 ae 02 f0           ra = 686, jump @2559
      :                          @2561 [@dyn 343]
 37359: 64 79                    a2 = a0
 37361: 97 87 01                 a0 = a1 << 0x1
 37364: c9 97 07                 a0 = a0 - a2
 37367: ca 97 07                 a0 = a0 * a2
 37370: ca 99 09                 a2 = a2 * a2
 37373: ca 88 08                 a1 = a1 * a1
 37376: c8 98 08                 a1 = a1 + a2
 37379: 84 55 01                 s0 = s0 & 0x1
 37382: 9a 59                    a2 = -s0
 37384: d2 79 09                 a2 = a2 & a0
 37387: db 58 07                 a0 = a1 if s0 != 0
 37390: c8 98 08                 a1 = a1 + a2
 37393: 82 10 08                 ra = u64 [sp + 0x8]
 37396: 82 15                    s0 = u64 [sp]
 37398: 95 11 10                 sp = sp + 0x10
 37401: 32 00                    ret
      :                          @2562
 37403: 33 08 01                 a1 = 0x1
 37406: 32 00                    ret
      :                          @2563
 37408: 51 07 44                 jump @2569 if a0 == 0
      :                          @2564
 37411: 33 0a 01                 a3 = 0x1
 37414: 33 09 02                 a2 = 0x2
 37417: 64 78                    a1 = a0
 37419: aa a7 2b                 jump @2568 if a0 == a3
      :                          @2565
 37422: 9a 7a 01                 a3 = 0x1 - a0
 37425: 33 02 02                 t0 = 0x2
 37428: 33 0b 02                 a4 = 0x2
 37431: 33 0c 02                 a5 = 0x2
 37434: 33 08 01                 a1 = 0x1
 37437: 01                       fallthrough
      :                          @2566
 37438: ca 8c 08                 a1 = a5 * a1
 37441: cb b8 08                 a1 = a1 /u a4
 37444: 95 bb 01                 a4 = a4 + 0x1
 37447: c8 ba 09                 a2 = a3 + a4
 37450: 95 cc 04                 a5 = a5 + 0x4
 37453: ab 29 f1                 jump @2566 if a2 != t0
      :                          @2567
 37456: 95 79 01                 a2 = a0 + 0x1
 37459: 51 09 18                 jump @2570 if a2 == 0
      :                          @2568
 37462: 97 77 02                 a0 = a0 << 0x2
 37465: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 37468: ca 78 07                 a0 = a1 * a0
 37471: cb 97 07                 a0 = a0 /u a2
 37474: 32 00                    ret
      :                          @2569
 37476: 33 07 01                 a0 = 0x1
 37479: 28 95 12 02              jump @11965
      :                          @2570
 37483: 00                       trap
      :                          @2571
 37484: d6 a7 09                 a2 = a0 mulhu a3
 37487: 98 9b 04                 a4 = a2 >> 0x4
 37490: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37493: c8 b9 09                 a2 = a2 + a4
 37496: c8 37 07                 a0 = a0 + t1
 37499: c9 97 07                 a0 = a0 - a2
 37502: 01                       fallthrough
      :                          @2572
 37503: d6 a7 09                 a2 = a0 mulhu a3
 37506: 98 9b 04                 a4 = a2 >> 0x4
 37509: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37512: c8 b9 09                 a2 = a2 + a4
 37515: ca 82 0b                 a4 = t0 * a1
 37518: c8 b7 07                 a0 = a0 + a4
 37521: c9 97 07                 a0 = a0 - a2
 37524: d6 a7 09                 a2 = a0 mulhu a3
 37527: 98 9b 04                 a4 = a2 >> 0x4
 37530: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37533: c8 b9 09                 a2 = a2 + a4
 37536: c9 97 07                 a0 = a0 - a2
 37539: 95 00 01                 ra = ra + 0x1
 37542: 95 19 48                 a2 = sp + 0x48
 37545: c8 94 04                 t2 = t2 + a2
 37548: 7b 47                    u64 [t2] = a0
 37550: 51 10 08 38 02           jump @2603 if ra == 8
      :                          @2573
 37555: 97 04 03                 t2 = ra << 0x3
 37558: 51 00 27 02              jump @2602 if ra == 0
      :                          @2574
 37562: 33 07 01                 a0 = 0x1
 37565: 33 0b 09                 a4 = 0x9
 37568: 64 09                    a2 = ra
 37570: 28 0b                    jump @2576
      :                          @2575
 37572: 98 99 01                 a2 = a2 >> 0x1
 37575: ca bb 0b                 a4 = a4 * a4
 37578: 51 09 2c                 jump @2578 if a2 == 0
      :                          @2576
 37581: d6 ab 0c                 a5 = a4 mulhu a3
 37584: 98 c5 04                 s0 = a5 >> 0x4
 37587: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 37590: c8 5c 0c                 a5 = a5 + s0
 37593: 84 95 01                 s0 = a2 & 0x1
 37596: c9 cb 0b                 a4 = a4 - a5
 37599: 51 05 e5                 jump @2575 if s0 == 0
      :                          @2577
 37602: ca b7 07                 a0 = a0 * a4
 37605: d6 a7 0c                 a5 = a0 mulhu a3
 37608: 98 c5 04                 s0 = a5 >> 0x4
 37611: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 37614: c8 5c 0c                 a5 = a5 + s0
 37617: c9 c7 07                 a0 = a0 - a5
 37620: 28 d0                    jump @2575
      :                          @2578
 37622: 82 19 38                 a2 = u64 [sp + 0x38]
 37625: ca 97 07                 a0 = a0 * a2
 37628: 82 19 40                 a2 = u64 [sp + 0x40]
 37631: c8 97 07                 a0 = a0 + a2
 37634: 97 09 01                 a2 = ra << 0x1
 37637: 33 0c 01                 a5 = 0x1
 37640: 33 0b 09                 a4 = 0x9
 37643: 28 0b                    jump @2580
      :                          @2579
 37645: 98 99 01                 a2 = a2 >> 0x1
 37648: ca bb 0b                 a4 = a4 * a4
 37651: 51 09 2c                 jump @2582 if a2 == 0
      :                          @2580
 37654: d6 ab 05                 s0 = a4 mulhu a3
 37657: 98 56 04                 s1 = s0 >> 0x4
 37660: 84 55 f0                 s0 = s0 & 0xfffffffffffffff0
 37663: c8 65 05                 s0 = s0 + s1
 37666: 84 96 01                 s1 = a2 & 0x1
 37669: c9 5b 0b                 a4 = a4 - s0
 37672: 51 06 e5                 jump @2579 if s1 == 0
      :                          @2581
 37675: ca bc 0c                 a5 = a5 * a4
 37678: d6 ac 06                 s1 = a5 mulhu a3
 37681: 98 65 04                 s0 = s1 >> 0x4
 37684: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 37687: c8 65 05                 s0 = s0 + s1
 37690: c9 5c 0c                 a5 = a5 - s0
 37693: 28 d0                    jump @2579
      :                          @2582
 37695: d6 a7 09                 a2 = a0 mulhu a3
 37698: 98 9b 04                 a4 = a2 >> 0x4
 37701: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37704: c8 b9 09                 a2 = a2 + a4
 37707: 82 1b 30                 a4 = u64 [sp + 0x30]
 37710: ca bc 0b                 a4 = a5 * a4
 37713: c8 b7 07                 a0 = a0 + a4
 37716: c9 97 07                 a0 = a0 - a2
 37719: 97 09 01                 a2 = ra << 0x1
 37722: c8 09 09                 a2 = a2 + ra
 37725: 33 0c 01                 a5 = 0x1
 37728: 33 0b 09                 a4 = 0x9
 37731: 28 0b                    jump @2584
      :                          @2583
 37733: 98 99 01                 a2 = a2 >> 0x1
 37736: ca bb 0b                 a4 = a4 * a4
 37739: 51 09 2c                 jump @2586 if a2 == 0
      :                          @2584
 37742: d6 ab 06                 s1 = a4 mulhu a3
 37745: 98 65 04                 s0 = s1 >> 0x4
 37748: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 37751: c8 65 05                 s0 = s0 + s1
 37754: 84 96 01                 s1 = a2 & 0x1
 37757: c9 5b 0b                 a4 = a4 - s0
 37760: 51 06 e5                 jump @2583 if s1 == 0
      :                          @2585
 37763: ca bc 0c                 a5 = a5 * a4
 37766: d6 ac 06                 s1 = a5 mulhu a3
 37769: 98 65 04                 s0 = s1 >> 0x4
 37772: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 37775: c8 65 05                 s0 = s0 + s1
 37778: c9 5c 0c                 a5 = a5 - s0
 37781: 28 d0                    jump @2583
      :                          @2586
 37783: d6 a7 09                 a2 = a0 mulhu a3
 37786: 98 9b 04                 a4 = a2 >> 0x4
 37789: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37792: c8 b9 09                 a2 = a2 + a4
 37795: 82 1b 28                 a4 = u64 [sp + 0x28]
 37798: ca bc 0b                 a4 = a5 * a4
 37801: c8 b7 07                 a0 = a0 + a4
 37804: c9 97 07                 a0 = a0 - a2
 37807: 97 09 02                 a2 = ra << 0x2
 37810: 33 0c 01                 a5 = 0x1
 37813: 33 0b 09                 a4 = 0x9
 37816: 28 0b                    jump @2588
      :                          @2587
 37818: 98 99 01                 a2 = a2 >> 0x1
 37821: ca bb 0b                 a4 = a4 * a4
 37824: 51 09 2c                 jump @2590 if a2 == 0
      :                          @2588
 37827: d6 ab 06                 s1 = a4 mulhu a3
 37830: 98 65 04                 s0 = s1 >> 0x4
 37833: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 37836: c8 65 05                 s0 = s0 + s1
 37839: 84 96 01                 s1 = a2 & 0x1
 37842: c9 5b 0b                 a4 = a4 - s0
 37845: 51 06 e5                 jump @2587 if s1 == 0
      :                          @2589
 37848: ca bc 0c                 a5 = a5 * a4
 37851: d6 ac 06                 s1 = a5 mulhu a3
 37854: 98 65 04                 s0 = s1 >> 0x4
 37857: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 37860: c8 65 05                 s0 = s0 + s1
 37863: c9 5c 0c                 a5 = a5 - s0
 37866: 28 d0                    jump @2587
      :                          @2590
 37868: d6 a7 09                 a2 = a0 mulhu a3
 37871: 98 9b 04                 a4 = a2 >> 0x4
 37874: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37877: c8 b9 09                 a2 = a2 + a4
 37880: 82 1b 20                 a4 = u64 [sp + 0x20]
 37883: ca bc 0b                 a4 = a5 * a4
 37886: c8 b7 07                 a0 = a0 + a4
 37889: c9 97 07                 a0 = a0 - a2
 37892: 97 09 02                 a2 = ra << 0x2
 37895: c8 09 09                 a2 = a2 + ra
 37898: 33 0c 01                 a5 = 0x1
 37901: 33 0b 09                 a4 = 0x9
 37904: 28 0b                    jump @2592
      :                          @2591
 37906: 98 99 01                 a2 = a2 >> 0x1
 37909: ca bb 0b                 a4 = a4 * a4
 37912: 51 09 2c                 jump @2594 if a2 == 0
      :                          @2592
 37915: d6 ab 06                 s1 = a4 mulhu a3
 37918: 98 65 04                 s0 = s1 >> 0x4
 37921: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 37924: c8 65 05                 s0 = s0 + s1
 37927: 84 96 01                 s1 = a2 & 0x1
 37930: c9 5b 0b                 a4 = a4 - s0
 37933: 51 06 e5                 jump @2591 if s1 == 0
      :                          @2593
 37936: ca bc 0c                 a5 = a5 * a4
 37939: d6 ac 06                 s1 = a5 mulhu a3
 37942: 98 65 04                 s0 = s1 >> 0x4
 37945: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 37948: c8 65 05                 s0 = s0 + s1
 37951: c9 5c 0c                 a5 = a5 - s0
 37954: 28 d0                    jump @2591
      :                          @2594
 37956: d6 a7 09                 a2 = a0 mulhu a3
 37959: 98 9b 04                 a4 = a2 >> 0x4
 37962: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37965: c8 b9 09                 a2 = a2 + a4
 37968: 82 1b 18                 a4 = u64 [sp + 0x18]
 37971: ca bc 0b                 a4 = a5 * a4
 37974: c8 b7 07                 a0 = a0 + a4
 37977: c9 97 07                 a0 = a0 - a2
 37980: 96 09 06                 a2 = ra * 0x6
 37983: 33 0c 01                 a5 = 0x1
 37986: 33 0b 09                 a4 = 0x9
 37989: 28 0b                    jump @2596
      :                          @2595
 37991: 98 99 01                 a2 = a2 >> 0x1
 37994: ca bb 0b                 a4 = a4 * a4
 37997: 51 09 2c                 jump @2598 if a2 == 0
      :                          @2596
 38000: d6 ab 06                 s1 = a4 mulhu a3
 38003: 98 65 04                 s0 = s1 >> 0x4
 38006: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 38009: c8 65 05                 s0 = s0 + s1
 38012: 84 96 01                 s1 = a2 & 0x1
 38015: c9 5b 0b                 a4 = a4 - s0
 38018: 51 06 e5                 jump @2595 if s1 == 0
      :                          @2597
 38021: ca bc 0c                 a5 = a5 * a4
 38024: d6 ac 06                 s1 = a5 mulhu a3
 38027: 98 65 04                 s0 = s1 >> 0x4
 38030: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 38033: c8 65 05                 s0 = s0 + s1
 38036: c9 5c 0c                 a5 = a5 - s0
 38039: 28 d0                    jump @2595
      :                          @2598
 38041: 82 19 10                 a2 = u64 [sp + 0x10]
 38044: ca 9c 03                 t1 = a5 * a2
 38047: c9 04 09                 a2 = t2 - ra
 38050: 33 02 01                 t0 = 0x1
 38053: 33 0b 09                 a4 = 0x9
 38056: 28 0c                    jump @2600
      :                          @2599
 38058: 98 99 01                 a2 = a2 >> 0x1
 38061: ca bb 0b                 a4 = a4 * a4
 38064: 51 09 bc fd              jump @2571 if a2 == 0
      :                          @2600
 38068: d6 ab 0c                 a5 = a4 mulhu a3
 38071: 98 c5 04                 s0 = a5 >> 0x4
 38074: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 38077: c8 5c 0c                 a5 = a5 + s0
 38080: 84 95 01                 s0 = a2 & 0x1
 38083: c9 cb 0b                 a4 = a4 - a5
 38086: 51 05 e4                 jump @2599 if s0 == 0
      :                          @2601
 38089: ca b2 0c                 a5 = t0 * a4
 38092: d6 ac 06                 s1 = a5 mulhu a3
 38095: 98 65 04                 s0 = s1 >> 0x4
 38098: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 38101: c8 65 05                 s0 = s0 + s1
 38104: c9 5c 02                 t0 = a5 - s0
 38107: 28 cf                    jump @2599
      :                          @2602
 38109: 33 02 01                 t0 = 0x1
 38112: 82 17 08                 a0 = u64 [sp + 0x8]
 38115: 28 9c fd                 jump @2572
      :                          @2603
 38118: 82 17 80 00              a0 = u64 [sp + 0x80]
 38122: 82 18 78                 a1 = u64 [sp + 0x78]
 38125: 82 19 70                 a2 = u64 [sp + 0x70]
 38128: 82 1a 68                 a3 = u64 [sp + 0x68]
 38131: 82 1b                    a4 = u64 [sp]
 38133: 7b b7 38                 u64 [a4 + 0x38] = a0
 38136: 7b b8 30                 u64 [a4 + 0x30] = a1
 38139: 7b b9 28                 u64 [a4 + 0x28] = a2
 38142: 7b ba 20                 u64 [a4 + 0x20] = a3
 38145: 82 17 60                 a0 = u64 [sp + 0x60]
 38148: 82 18 58                 a1 = u64 [sp + 0x58]
 38151: 82 19 50                 a2 = u64 [sp + 0x50]
 38154: 82 1a 48                 a3 = u64 [sp + 0x48]
 38157: 7b b7 18                 u64 [a4 + 0x18] = a0
 38160: 7b b8 10                 u64 [a4 + 0x10] = a1
 38163: 7b b9 08                 u64 [a4 + 0x8] = a2
 38166: 7b ba                    u64 [a4] = a3
 38168: 82 10 98 00              ra = u64 [sp + 0x98]
 38172: 82 15 90 00              s0 = u64 [sp + 0x90]
 38176: 82 16 88 00              s1 = u64 [sp + 0x88]
 38180: 95 11 a0 00              sp = sp + 0xa0
 38184: 32 00                    ret
      :                          @2604
 38186: 51 08 9a 00              jump @2608 if a1 == 0
      :                          @2605
 38190: 33 0a ff                 a3 = 0xffffffffffffffff
 38193: 33 09 20 83 b8 ed        a2 = 0xffffffffedb88320
 38199: 01                       fallthrough
      :                          @2606
 38200: 7c 7b                    a4 = u8 [a0]
 38202: d3 ba 0a                 a3 = a3 ^ a4
 38205: 97 ab 3f                 a4 = a3 << 0x3f
 38208: 99 bb 3f                 a4 = a4 >>a 0x3f
 38211: 8b aa 01                 i32 a3 = a3 >> 0x1
 38214: d2 9b 0b                 a4 = a4 & a2
 38217: d3 ba 0a                 a3 = a3 ^ a4
 38220: 97 ab 3f                 a4 = a3 << 0x3f
 38223: 99 bb 3f                 a4 = a4 >>a 0x3f
 38226: 8b aa 01                 i32 a3 = a3 >> 0x1
 38229: d2 9b 0b                 a4 = a4 & a2
 38232: d3 ba 0a                 a3 = a3 ^ a4
 38235: 97 ab 3f                 a4 = a3 << 0x3f
 38238: 99 bb 3f                 a4 = a4 >>a 0x3f
 38241: 8b aa 01                 i32 a3 = a3 >> 0x1
 38244: d2 9b 0b                 a4 = a4 & a2
 38247: d3 ba 0a                 a3 = a3 ^ a4
 38250: 97 ab 3f                 a4 = a3 << 0x3f
 38253: 99 bb 3f                 a4 = a4 >>a 0x3f
 38256: 8b aa 01                 i32 a3 = a3 >> 0x1
 38259: d2 9b 0b                 a4 = a4 & a2
 38262: d3 ba 0a                 a3 = a3 ^ a4
 38265: 97 ab 3f                 a4 = a3 << 0x3f
 38268: 99 bb 3f                 a4 = a4 >>a 0x3f
 38271: 8b aa 01                 i32 a3 = a3 >> 0x1
 38274: d2 9b 0b                 a4 = a4 & a2
 38277: d3 ba 0a                 a3 = a3 ^ a4
 38280: 97 ab 3f                 a4 = a3 << 0x3f
 38283: 99 bb 3f                 a4 = a4 >>a 0x3f
 38286: 8b aa 01                 i32 a3 = a3 >> 0x1
 38289: d2 9b 0b                 a4 = a4 & a2
 38292: d3 ba 0a                 a3 = a3 ^ a4
 38295: 97 ab 3f                 a4 = a3 << 0x3f
 38298: 99 bb 3f                 a4 = a4 >>a 0x3f
 38301: 8b aa 01                 i32 a3 = a3 >> 0x1
 38304: d2 9b 0b                 a4 = a4 & a2
 38307: d3 ba 0a                 a3 = a3 ^ a4
 38310: 97 ab 3f                 a4 = a3 << 0x3f
 38313: 99 bb 3f                 a4 = a4 >>a 0x3f
 38316: 8b aa 01                 i32 a3 = a3 >> 0x1
 38319: d2 9b 0b                 a4 = a4 & a2
 38322: d3 ba 0a                 a3 = a3 ^ a4
 38325: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 38328: 95 77 01                 a0 = a0 + 0x1
 38331: 52 08 7d ff              jump @2606 if a1 != 0
      :                          @2607
 38335: 85 a7 ff                 a0 = a3 ^ 0xffffffffffffffff
 38338: 32 00                    ret
      :                          @2608
 38340: 33 07                    a0 = 0
 38342: 28 9e 54 02              jump @13008
      :                          @2609
 38346: 84 78 01                 a1 = a0 & 0x1
 38349: 52 08 1a                 jump @2614 if a1 != 0
      :                          @2610
 38352: 64 79                    a2 = a0
 38354: 01                       fallthrough
      :                          @2611
 38355: 64 98                    a1 = a2
 38357: 84 9a 01                 a3 = a2 & 0x1
 38360: 98 99 01                 a2 = a2 >> 0x1
 38363: 51 0a f8                 jump @2611 if a3 == 0
      :                          @2612
 38366: 98 77 01                 a0 = a0 >> 0x1
 38369: 53 18 09 0c              jump @2615 if a1 <u 9
      :                          @2613
 38373: 28 1b                    jump @2618
      :                          @2614
 38375: 64 78                    a1 = a0
 38377: 55 17 09 17              jump @2618 if a0 >=u 9
      :                          @2615
 38381: 33 09 01                 a2 = 0x1
 38384: ae 89 0e                 jump @2617 if a2 >=u a1
      :                          @2616
 38387: cb 87 07                 a0 = a0 /u a1
 38390: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 38393: ca 87 07                 a0 = a0 * a1
 38396: 32 00                    ret
      :                          @2617
 38398: 32 00                    ret
      :                          @2618
 38400: 33 09 03                 a2 = 0x3
 38403: 28 0b                    jump @2620
      :                          @2619
 38405: 95 99 02                 a2 = a2 + 0x2
 38408: ca 99 0a                 a3 = a2 * a2
 38411: ac a8 e2                 jump @2615 if a1 <u a3
      :                          @2620
 38414: 51 09 1e                 jump @2625 if a2 == 0
      :                          @2621
 38417: cd 98 0a                 a3 = a1 %u a2
 38420: 52 0a f1                 jump @2619 if a3 != 0
      :                          @2622
 38423: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 38426: 01                       fallthrough
      :                          @2623
 38427: cb 98 08                 a1 = a1 /u a2
 38430: cd 98 0b                 a4 = a1 %u a2
 38433: 51 0b fa                 jump @2623 if a4 == 0
      :                          @2624
 38436: cb 97 07                 a0 = a0 /u a2
 38439: ca a7 07                 a0 = a0 * a3
 38442: 28 db                    jump @2619
      :                          @2625
 38444: 00                       trap
      :                          @2626
 38445: 82 6a                    a3 = u64 [s1]
 38447: c8 9a 05                 s0 = a3 + a2
 38450: ac a5 66 02              jump @2668 if s0 <u a3
      :                          @2627
 38454: 95 5b 01                 a4 = s0 + 0x1
 38457: 88 bc 01                 a5 = a4 <u 0x1
 38460: d8 b2 0b                 a4 = t0 <u a4
 38463: d4 cb 0b                 a4 = a4 | a5
 38466: 52 0b 56 02              jump @2668 if a4 != 0
      :                          @2628
 38470: 82 6b                    a4 = u64 [s1]
 38472: ab ab e5                 jump @2626 if a4 != a3
      :                          @2629
 38475: 7b 65                    u64 [s1] = s0
 38477: 33 0c                    a5 = 0
 38479: 7b 18 18                 u64 [sp + 0x18] = a1
 38482: 7b 17                    u64 [sp] = a0
 38484: 33 06 c0 22 03           s1 = 0x322c0
 38489: 95 68 00 00 01           a1 = s1 + 0x10000
 38494: c9 58 07                 a0 = a1 - s0
 38497: 7b 17 10                 u64 [sp + 0x10] = a0
 38500: 33 08                    a1 = 0
 38502: 64 95                    s0 = a2
 38504: 50 20 b0 02 f1 74 02     ra = 688, jump @13675
      :                          @2630 [@dyn 344]
 38511: 33 03 00 00 01           t1 = 0x10000
 38516: 64 62                    t0 = s1
 38518: 49 11 40                 u64 [sp + 64] = 0
 38521: 49 11 48 08              u64 [sp + 72] = 0x8
 38525: 49 11 50                 u64 [sp + 80] = 0
 38528: 7b 15 08                 u64 [sp + 0x8] = s0
 38531: 97 59 03                 a2 = s0 << 0x3
 38534: c8 36 07                 a0 = s1 + t1
 38537: 01                       fallthrough
      :                          @2631
 38538: 82 78                    a1 = u64 [a0]
 38540: c8 98 0a                 a3 = a1 + a2
 38543: ac 8a 09 02              jump @2668 if a3 <u a1
      :                          @2632
 38547: 95 ab 08                 a4 = a3 + 0x8
 38550: d8 ab 0c                 a5 = a4 <u a3
 38553: d8 b3 0b                 a4 = t1 <u a4
 38556: d4 cb 0b                 a4 = a4 | a5
 38559: 52 0b f9 01              jump @2668 if a4 != 0
      :                          @2633
 38563: c9 a2 0b                 a4 = t0 - a3
 38566: c8 3b 0b                 a4 = a4 + t1
 38569: 84 bc 07                 a5 = a4 & 0x7
 38572: c8 ca 0a                 a3 = a3 + a5
 38575: 01                       fallthrough
      :                          @2634
 38576: 82 76                    s1 = u64 [a0]
 38578: ab 86 d8                 jump @2631 if s1 != a1
      :                          @2635
 38581: 7b 7a                    u64 [a0] = a3
 38583: 33 05                    s0 = 0
 38585: c9 cb 07                 a0 = a4 - a5
 38588: 7b 17 38                 u64 [sp + 0x38] = a0
 38591: 33 08                    a1 = 0
 38593: 50 20 b2 02 98 74 02     ra = 690, jump @13675
      :                          @2636 [@dyn 345]
 38600: 82 19 08                 a2 = u64 [sp + 0x8]
 38603: 97 99 02                 a2 = a2 << 0x2
 38606: 33 07 c0 22 03           a0 = 0x322c0
 38611: 33 03 c0 22 03           t1 = 0x322c0
 38616: 33 02 00 00 01           t0 = 0x10000
 38621: c8 23 0a                 a3 = t1 + t0
 38624: 01                       fallthrough
      :                          @2637
 38625: 82 ab                    a4 = u64 [a3]
 38627: c8 9b 0c                 a5 = a4 + a2
 38630: ac bc b2 01              jump @2668 if a5 <u a4
      :                          @2638
 38634: 95 c8 04                 a1 = a5 + 0x4
 38637: d8 c8 06                 s1 = a1 <u a5
 38640: d8 82 08                 a1 = t0 <u a1
 38643: d4 68 08                 a1 = a1 | s1
 38646: 52 08 a2 01              jump @2668 if a1 != 0
      :                          @2639
 38650: c9 c3 06                 s1 = t1 - a5
 38653: c8 26 06                 s1 = s1 + t0
 38656: 84 68 03                 a1 = s1 & 0x3
 38659: c8 8c 0c                 a5 = a5 + a1
 38662: 01                       fallthrough
      :                          @2640
 38663: 82 a5                    s0 = u64 [a3]
 38665: ab b5 d8                 jump @2637 if s0 != a4
      :                          @2641
 38668: 7b ac                    u64 [a3] = a5
 38670: c9 86 06                 s1 = s1 - a1
 38673: 64 67                    a0 = s1
 38675: 33 08                    a1 = 0
 38677: 50 20 b4 02 44 74 02     ra = 692, jump @13675
      :                          @2642 [@dyn 346]
 38684: 82 17 38                 a0 = u64 [sp + 0x38]
 38687: 49 17 08 01              u64 [a0 + 8] = 0x1
 38691: 33 02 02                 t0 = 0x2
 38694: 7b 16 30                 u64 [sp + 0x30] = s1
 38697: 48 16 04 01              u32 [s1 + 4] = 0x1
 38701: 82 14 18                 t2 = u64 [sp + 0x18]
 38704: 82 10 10                 ra = u64 [sp + 0x10]
 38707: ae 24 60                 jump @2649 if t2 >=u t0
      :                          @2643
 38710: 82 17 50                 a0 = u64 [sp + 0x50]
 38713: 82 18 48                 a1 = u64 [sp + 0x48]
 38716: 82 19 40                 a2 = u64 [sp + 0x40]
 38719: 82 1a                    a3 = u64 [sp]
 38721: 7b a7 10                 u64 [a3 + 0x10] = a0
 38724: 7b a8 08                 u64 [a3 + 0x8] = a1
 38727: 7b a9                    u64 [a3] = a2
 38729: 82 1c 08                 a5 = u64 [sp + 0x8]
 38732: 7b ac 18                 u64 [a3 + 0x18] = a5
 38735: 82 17 38                 a0 = u64 [sp + 0x38]
 38738: 7b a7 20                 u64 [a3 + 0x20] = a0
 38741: 7b ac 28                 u64 [a3 + 0x28] = a5
 38744: 7b ac 30                 u64 [a3 + 0x30] = a5
 38747: 82 17 30                 a0 = u64 [sp + 0x30]
 38750: 7b a7 38                 u64 [a3 + 0x38] = a0
 38753: 7b ac 40                 u64 [a3 + 0x40] = a5
 38756: 33 07 c0 22 03           a0 = 0x322c0
 38761: 95 77 00 00 01           a0 = a0 + 0x10000
 38766: 01                       fallthrough
      :                          @2644
 38767: 82 78                    a1 = u64 [a0]
 38769: c9 87 09                 a2 = a0 - a1
 38772: ab 09 11                 jump @2648 if a2 != ra
      :                          @2645
 38775: c9 c8 09                 a2 = a1 - a5
 38778: 01                       fallthrough
      :                          @2646
 38779: 82 7a                    a3 = u64 [a0]
 38781: ab 8a f2                 jump @2644 if a3 != a1
      :                          @2647
 38784: 7b 79                    u64 [a0] = a2
 38786: 33 0b                    a4 = 0
 38788: 01                       fallthrough
      :                          @2648
 38789: 82 10 68                 ra = u64 [sp + 0x68]
 38792: 82 15 60                 s0 = u64 [sp + 0x60]
 38795: 82 16 58                 s1 = u64 [sp + 0x58]
 38798: 95 11 70                 sp = sp + 0x70
 38801: 32 00                    ret
      :                          @2649
 38803: 33 08                    a1 = 0
 38805: 33 09 08                 a2 = 0x8
 38808: 28 34                    jump @2652
      :                          @2650
 38810: 82 37                    a0 = u64 [t1]
 38812: 97 5a 03                 a3 = s0 << 0x3
 38815: 82 19 38                 a2 = u64 [sp + 0x38]
 38818: c8 9a 0a                 a3 = a3 + a2
 38821: ca 67 07                 a0 = a0 * s1
 38824: 7b a7                    u64 [a3] = a0
 38826: 97 59 02                 a2 = s0 << 0x2
 38829: 82 17 30                 a0 = u64 [sp + 0x30]
 38832: c8 79 09                 a2 = a2 + a0
 38835: 48 09                    u32 [a2 + 0] = 0
 38837: 01                       fallthrough
      :                          @2651
 38838: d8 42 07                 a0 = t0 <u t2
 38841: c8 72 02                 t0 = t0 + a0
 38844: d8 24 09                 a2 = t2 <u t0
 38847: 85 99 01                 a2 = a2 ^ 0x1
 38850: d2 97 07                 a0 = a0 & a2
 38853: 82 19 20                 a2 = u64 [sp + 0x20]
 38856: 51 07 6e ff              jump @2643 if a0 == 0
      :                          @2652
 38860: ac 24 cb 00              jump @2667 if t2 <u t0
      :                          @2653
 38864: c8 20 07                 a0 = ra + t0
 38867: 7c 77                    a0 = u8 [a0]
 38869: 7b 12 28                 u64 [sp + 0x28] = t0
 38872: 51 07 0b                 jump @2656 if a0 == 0
      :                          @2654
 38875: 7b 19 20                 u64 [sp + 0x20] = a2
 38878: 52 08 55                 jump @2660 if a1 != 0
      :                          @2655
 38881: 28 d5                    jump @2651
      :                          @2656
 38883: 82 17 40                 a0 = u64 [sp + 0x40]
 38886: ab 78 1c                 jump @2659 if a1 != a0
      :                          @2657
 38889: 95 17 40                 a0 = sp + 0x40
 38892: 50 20 b6 02 1b bb        ra = 694, jump @1581
      :                          @2658 [@dyn 347]
 38898: 82 12 28                 t0 = u64 [sp + 0x28]
 38901: 82 10 10                 ra = u64 [sp + 0x10]
 38904: 82 14 18                 t2 = u64 [sp + 0x18]
 38907: 82 18 50                 a1 = u64 [sp + 0x50]
 38910: 82 19 48                 a2 = u64 [sp + 0x48]
 38913: 01                       fallthrough
      :                          @2659
 38914: 97 87 03                 a0 = a1 << 0x3
 38917: c8 97 07                 a0 = a0 + a2
 38920: 7b 72                    u64 [a0] = t0
 38922: 95 88 01                 a1 = a1 + 0x1
 38925: 7b 18 50                 u64 [sp + 0x50] = a1
 38928: 95 27 ff                 a0 = t0 + 0xffffffffffffffff
 38931: 97 29 03                 a2 = t0 << 0x3
 38934: 82 1a 38                 a3 = u64 [sp + 0x38]
 38937: c8 a9 09                 a2 = a2 + a3
 38940: 7b 97                    u64 [a2] = a0
 38942: 82 17 48                 a0 = u64 [sp + 0x48]
 38945: 7b 17 20                 u64 [sp + 0x20] = a0
 38948: 97 27 02                 a0 = t0 << 0x2
 38951: 82 19 30                 a2 = u64 [sp + 0x30]
 38954: c8 97 07                 a0 = a0 + a2
 38957: 48 07 ff                 u32 [a0 + 0] = 0xffffffffffffffff
 38960: 51 08 86                 jump @2651 if a1 == 0
      :                          @2660
 38963: 97 29 03                 a2 = t0 << 0x3
 38966: 82 13 38                 t1 = u64 [sp + 0x38]
 38969: c8 93 03                 t1 = t1 + a2
 38972: 97 2a 02                 a3 = t0 << 0x2
 38975: 82 17 30                 a0 = u64 [sp + 0x30]
 38978: c8 7a 0a                 a3 = a3 + a0
 38981: 97 8b 03                 a4 = a1 << 0x3
 38984: 82 1c 20                 a5 = u64 [sp + 0x20]
 38987: 01                       fallthrough
      :                          @2661
 38988: 82 c6                    s1 = u64 [a5]
 38990: ca 26 05                 s0 = s1 * t0
 38993: ac 54 65 ff              jump @2651 if t2 <u s0
      :                          @2662
 38997: c8 50 07                 a0 = ra + s0
 39000: 46 07 01                 u8 [a0 + 0] = 0x1
 39003: 51 06 3b                 jump @2666 if s1 == 0
      :                          @2663
 39006: cd 62 07                 a0 = t0 %u s1
 39009: 51 07 39 ff              jump @2650 if a0 == 0
      :                          @2664
 39013: 82 37                    a0 = u64 [t1]
 39015: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 39018: 97 59 03                 a2 = s0 << 0x3
 39021: 82 12 38                 t0 = u64 [sp + 0x38]
 39024: c8 29 09                 a2 = a2 + t0
 39027: 82 12 28                 t0 = u64 [sp + 0x28]
 39030: ca 67 07                 a0 = a0 * s1
 39033: 7b 97                    u64 [a2] = a0
 39035: 81 a7                    a0 = i32 [a3]
 39037: 95 cc 08                 a5 = a5 + 0x8
 39040: 97 55 02                 s0 = s0 << 0x2
 39043: 82 19 30                 a2 = u64 [sp + 0x30]
 39046: c8 95 05                 s0 = s0 + a2
 39049: 8d 77                    i32 a0 = -a0
 39051: 95 bb f8                 a4 = a4 + 0xfffffffffffffff8
 39054: 7a 57                    u32 [s0] = a0
 39056: 52 0b bc                 jump @2661 if a4 != 0
      :                          @2665
 39059: 28 23 ff                 jump @2651
      :                          @2666
 39062: 00                       trap
      :                          @2667
 39063: 00                       trap
      :                          @2668
 39064: 00                       trap
      :                          @2669
 39065: 33 02 01                 t0 = 0x1
 39068: 55 17 04 16              jump @2672 if a0 >=u 4
      :                          @2670
 39072: 33 09 01                 a2 = 0x1
 39075: 01                       fallthrough
      :                          @2671
 39076: 88 7a 02                 a3 = a0 <u 0x2
 39079: 95 77 01                 a0 = a0 + 0x1
 39082: da a7 02                 t0 = a0 if a3 == 0
 39085: ca 92 07                 a0 = t0 * a2
 39088: 32 00                    ret
      :                          @2672
 39090: 33 0a 02                 a3 = 0x2
 39093: 33 09 01                 a2 = 0x1
 39096: 28 14                    jump @2674
      :                          @2673
 39098: 95 a8 fe                 a1 = a3 + 0xfffffffffffffffe
 39101: 88 88 01                 a1 = a1 <u 0x1
 39104: c9 8a 0a                 a3 = a3 - a1
 39107: 95 aa 02                 a3 = a3 + 0x2
 39110: ca aa 08                 a1 = a3 * a3
 39113: ac 87 db                 jump @2671 if a0 <u a1
      :                          @2674
 39116: 51 0a 24                 jump @2679 if a3 == 0
      :                          @2675
 39119: cd a7 0b                 a4 = a0 %u a3
 39122: 52 0b e8                 jump @2673 if a4 != 0
      :                          @2676
 39125: 33 0b 01                 a4 = 0x1
 39128: 33 0c 01                 a5 = 0x1
 39131: 01                       fallthrough
      :                          @2677
 39132: cb a7 07                 a0 = a0 /u a3
 39135: ca ac 0c                 a5 = a5 * a3
 39138: cd a7 08                 a1 = a0 %u a3
 39141: c8 cb 0b                 a4 = a4 + a5
 39144: 51 08 f4                 jump @2677 if a1 == 0
      :                          @2678
 39147: ca 9b 09                 a2 = a4 * a2
 39150: 28 cc                    jump @2673
      :                          @2679
 39152: 00                       trap
      :                          @2680
 39153: 33 09 04                 a2 = 0x4
 39156: 33 08 01                 a1 = 0x1
 39159: ae 97 0e                 jump @2682 if a0 >=u a2
      :                          @2681
 39162: 88 77 02                 a0 = a0 <u 0x2
 39165: 85 77 01                 a0 = a0 ^ 0x1
 39168: cf 78 07                 a0 = a1 << a0
 39171: 32 00                    ret
      :                          @2682
 39173: 33 09 02                 a2 = 0x2
 39176: 33 08 01                 a1 = 0x1
 39179: 28 14                    jump @2684
      :                          @2683
 39181: 95 9a fe                 a3 = a2 + 0xfffffffffffffffe
 39184: 88 aa 01                 a3 = a3 <u 0x1
 39187: c9 a9 09                 a2 = a2 - a3
 39190: 95 99 02                 a2 = a2 + 0x2
 39193: ca 99 0a                 a3 = a2 * a2
 39196: ac a7 de                 jump @2681 if a0 <u a3
      :                          @2684
 39199: 51 09 21                 jump @2689 if a2 == 0
      :                          @2685
 39202: cd 97 0a                 a3 = a0 %u a2
 39205: 52 0a e8                 jump @2683 if a3 != 0
      :                          @2686
 39208: 33 0a ff                 a3 = 0xffffffffffffffff
 39211: 01                       fallthrough
      :                          @2687
 39212: cb 97 07                 a0 = a0 /u a2
 39215: cd 97 0b                 a4 = a0 %u a2
 39218: 95 aa 01                 a3 = a3 + 0x1
 39221: 51 0b f7                 jump @2687 if a4 == 0
      :                          @2688
 39224: 95 aa 02                 a3 = a3 + 0x2
 39227: ca 8a 08                 a1 = a3 * a1
 39230: 28 cf                    jump @2683
      :                          @2689
 39232: 00                       trap
      :                          @2690
 39233: 33 08 01                 a1 = 0x1
 39236: 55 17 04 13              jump @2694 if a0 >=u 4
      :                          @2691
 39240: 64 7a                    a3 = a0
 39242: 01                       fallthrough
      :                          @2692
 39243: 88 a9 02                 a2 = a3 <u 0x2
 39246: 9a 87                    a0 = -a1
 39248: db 98 07                 a0 = a1 if a2 != 0
 39251: 32 00                    ret
      :                          @2693
 39253: 32 00                    ret
      :                          @2694
 39255: 33 09 02                 a2 = 0x2
 39258: 33 08 01                 a1 = 0x1
 39261: 28 17                    jump @2697
      :                          @2695
 39263: 64 7a                    a3 = a0
 39265: 01                       fallthrough
      :                          @2696
 39266: 95 9b fe                 a4 = a2 + 0xfffffffffffffffe
 39269: 88 bb 01                 a4 = a4 <u 0x1
 39272: c9 b9 09                 a2 = a2 - a4
 39275: 95 99 02                 a2 = a2 + 0x2
 39278: ca 99 0b                 a4 = a2 * a2
 39281: ac ba da                 jump @2692 if a3 <u a4
      :                          @2697
 39284: 51 09 18                 jump @2701 if a2 == 0
      :                          @2698
 39287: cb 97 0a                 a3 = a0 /u a2
 39290: ca 9a 0b                 a4 = a3 * a2
 39293: ab b7 e2                 jump @2695 if a0 != a4
      :                          @2699
 39296: cd 9a 07                 a0 = a3 %u a2
 39299: 51 07 d2                 jump @2693 if a0 == 0
      :                          @2700
 39302: 9a 88                    a1 = -a1
 39304: 64 a7                    a0 = a3
 39306: 28 d8                    jump @2696
      :                          @2701
 39308: 00                       trap
      :                          @2702
 39309: 82 9a                    a3 = u64 [a2]
 39311: c8 6a 05                 s0 = a3 + s1
 39314: ac a5 fb 01              jump @2747 if s0 <u a3
      :                          @2703
 39318: 95 5b 01                 a4 = s0 + 0x1
 39321: 88 bc 01                 a5 = a4 <u 0x1
 39324: d8 b2 0b                 a4 = t0 <u a4
 39327: d4 cb 0b                 a4 = a4 | a5
 39330: 52 0b eb 01              jump @2747 if a4 != 0
      :                          @2704
 39334: 82 9b                    a4 = u64 [a2]
 39336: ab ab e5                 jump @2702 if a4 != a3
      :                          @2705
 39339: 7b 95                    u64 [a2] = s0
 39341: 33 0c                    a5 = 0
 39343: 7b 18 10                 u64 [sp + 0x10] = a1
 39346: 7b 17                    u64 [sp] = a0
 39348: 33 07 c0 22 03           a0 = 0x322c0
 39353: 7b 17 20                 u64 [sp + 0x20] = a0
 39356: 95 78 00 00 01           a1 = a0 + 0x10000
 39361: c9 58 07                 a0 = a1 - s0
 39364: 7b 17 18                 u64 [sp + 0x18] = a0
 39367: 33 08                    a1 = 0
 39369: 64 69                    a2 = s1
 39371: 50 20 b8 02 8e 71 02     ra = 696, jump @13675
      :                          @2706 [@dyn 348]
 39378: 33 03 00 00 01           t1 = 0x10000
 39383: 82 12 20                 t0 = u64 [sp + 0x20]
 39386: 49 11 28                 u64 [sp + 40] = 0
 39389: 49 11 30 08              u64 [sp + 48] = 0x8
 39393: 49 11 38                 u64 [sp + 56] = 0
 39396: 7b 16 08                 u64 [sp + 0x8] = s1
 39399: 97 69 02                 a2 = s1 << 0x2
 39402: c8 32 07                 a0 = t0 + t1
 39405: 01                       fallthrough
      :                          @2707
 39406: 82 78                    a1 = u64 [a0]
 39408: c8 98 0a                 a3 = a1 + a2
 39411: ac 8a 9b 01              jump @2748 if a3 <u a1
      :                          @2708
 39415: 95 ab 04                 a4 = a3 + 0x4
 39418: d8 ab 0c                 a5 = a4 <u a3
 39421: d8 b3 0b                 a4 = t1 <u a4
 39424: d4 cb 0b                 a4 = a4 | a5
 39427: 52 0b 8b 01              jump @2748 if a4 != 0
      :                          @2709
 39431: c9 a2 0b                 a4 = t0 - a3
 39434: c8 3b 0b                 a4 = a4 + t1
 39437: 84 bc 03                 a5 = a4 & 0x3
 39440: c8 ca 0a                 a3 = a3 + a5
 39443: 01                       fallthrough
      :                          @2710
 39444: 82 76                    s1 = u64 [a0]
 39446: ab 86 d8                 jump @2707 if s1 != a1
      :                          @2711
 39449: 7b 7a                    u64 [a0] = a3
 39451: c9 cb 05                 s0 = a4 - a5
 39454: 64 57                    a0 = s0
 39456: 33 08                    a1 = 0
 39458: 50 20 ba 02 37 71 02     ra = 698, jump @13675
      :                          @2712 [@dyn 349]
 39465: 64 50                    ra = s0
 39467: 33 05 02                 s0 = 0x2
 39470: 48 10 04 01              u32 [ra + 4] = 0x1
 39474: 82 14 10                 t2 = u64 [sp + 0x10]
 39477: ae 54 20                 jump @2714 if t2 >=u s0
      :                          @2713
 39480: 82 16 08                 s1 = u64 [sp + 0x8]
 39483: 82 17                    a0 = u64 [sp]
 39485: 7b 76                    u64 [a0] = s1
 39487: 7b 70 08                 u64 [a0 + 0x8] = ra
 39490: 7b 76 10                 u64 [a0 + 0x10] = s1
 39493: 82 13 18                 t1 = u64 [sp + 0x18]
 39496: 33 07 c0 22 03           a0 = 0x322c0
 39501: 95 77 00 00 01           a0 = a0 + 0x10000
 39506: 28 15 01                 jump @2740
      :                          @2714
 39509: 33 08                    a1 = 0
 39511: 49 11 20 08              u64 [sp + 32] = 0x8
 39515: 82 13 18                 t1 = u64 [sp + 0x18]
 39518: 28 1e                    jump @2717
      :                          @2715
 39520: 97 66 02                 s1 = s1 << 0x2
 39523: c8 06 06                 s1 = s1 + ra
 39526: 48 06                    u32 [s1 + 0] = 0
 39528: 01                       fallthrough
      :                          @2716
 39529: d8 45 07                 a0 = s0 <u t2
 39532: c8 75 05                 s0 = s0 + a0
 39535: d8 54 09                 a2 = t2 <u s0
 39538: 85 99 01                 a2 = a2 ^ 0x1
 39541: d2 97 07                 a0 = a0 & a2
 39544: 51 07 9a 00              jump @2732 if a0 == 0
      :                          @2717
 39548: ac 54 10 01              jump @2746 if t2 <u s0
      :                          @2718
 39552: c8 53 07                 a0 = t1 + s0
 39555: 7c 77                    a0 = u8 [a0]
 39557: 51 07 08                 jump @2721 if a0 == 0
      :                          @2719
 39560: 52 08 4a                 jump @2726 if a1 != 0
      :                          @2720
 39563: 28 de                    jump @2716
      :                          @2721
 39565: 82 17 28                 a0 = u64 [sp + 0x28]
 39568: ab 78 1e                 jump @2724 if a1 != a0
      :                          @2722
 39571: 95 17 28                 a0 = sp + 0x28
 39574: 64 06                    s1 = ra
 39576: 50 20 bc 02 6f b8        ra = 700, jump @1581
      :                          @2723 [@dyn 350]
 39582: 64 60                    ra = s1
 39584: 82 14 10                 t2 = u64 [sp + 0x10]
 39587: 82 13 18                 t1 = u64 [sp + 0x18]
 39590: 82 18 38                 a1 = u64 [sp + 0x38]
 39593: 82 19 30                 a2 = u64 [sp + 0x30]
 39596: 28 06                    jump @2725
      :                          @2724
 39598: 82 19 20                 a2 = u64 [sp + 0x20]
 39601: 01                       fallthrough
      :                          @2725
 39602: 97 87 03                 a0 = a1 << 0x3
 39605: c8 97 07                 a0 = a0 + a2
 39608: 7b 75                    u64 [a0] = s0
 39610: 95 88 01                 a1 = a1 + 0x1
 39613: 7b 18 38                 u64 [sp + 0x38] = a1
 39616: 82 17 30                 a0 = u64 [sp + 0x30]
 39619: 7b 17 20                 u64 [sp + 0x20] = a0
 39622: 97 57 02                 a0 = s0 << 0x2
 39625: c8 07 07                 a0 = a0 + ra
 39628: 48 07 ff                 u32 [a0 + 0] = 0xffffffffffffffff
 39631: 51 08 9a                 jump @2716 if a1 == 0
      :                          @2726
 39634: 97 59 02                 a2 = s0 << 0x2
 39637: c8 09 09                 a2 = a2 + ra
 39640: 97 8a 03                 a3 = a1 << 0x3
 39643: 82 1b 20                 a4 = u64 [sp + 0x20]
 39646: 01                       fallthrough
      :                          @2727
 39647: 82 b7                    a0 = u64 [a4]
 39649: ca 57 06                 s1 = a0 * s0
 39652: ac 64 85                 jump @2716 if t2 <u s1
      :                          @2728
 39655: c8 63 0c                 a5 = t1 + s1
 39658: 33 02 01                 t0 = 0x1
 39661: 78 c2                    u8 [a5] = t0
 39663: 51 07 9c 00              jump @2745 if a0 == 0
      :                          @2729
 39667: cd 75 07                 a0 = s0 %u a0
 39670: 51 07 6a ff              jump @2715 if a0 == 0
      :                          @2730
 39674: 81 97                    a0 = i32 [a2]
 39676: 95 bb 08                 a4 = a4 + 0x8
 39679: 97 66 02                 s1 = s1 << 0x2
 39682: c8 06 06                 s1 = s1 + ra
 39685: 8d 77                    i32 a0 = -a0
 39687: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 39690: 7a 67                    u32 [s1] = a0
 39692: 52 0a d3                 jump @2727 if a3 != 0
      :                          @2731
 39695: 28 5a ff                 jump @2716
      :                          @2732
 39698: 82 18 28                 a1 = u64 [sp + 0x28]
 39701: 82 16 08                 s1 = u64 [sp + 0x8]
 39704: 82 17                    a0 = u64 [sp]
 39706: 7b 76                    u64 [a0] = s1
 39708: 7b 70 08                 u64 [a0 + 0x8] = ra
 39711: 7b 76 10                 u64 [a0 + 0x10] = s1
 39714: 82 15 20                 s0 = u64 [sp + 0x20]
 39717: 51 08 37                 jump @2739 if a1 == 0
      :                          @2733
 39720: 56 28 00 20 34           jump @2739 if a1 >u 8192
      :                          @2734
 39725: 97 88 03                 a1 = a1 << 0x3
 39728: 33 09 c0 22 03           a2 = 0x322c0
 39733: 95 99 00 00 01           a2 = a2 + 0x10000
 39738: 01                       fallthrough
      :                          @2735
 39739: 82 97                    a0 = u64 [a2]
 39741: c9 79 0a                 a3 = a2 - a0
 39744: ab 5a 1c                 jump @2739 if a3 != s0
      :                          @2736
 39747: c9 87 0a                 a3 = a0 - a1
 39750: 01                       fallthrough
      :                          @2737
 39751: 82 9b                    a4 = u64 [a2]
 39753: ab 7b f2                 jump @2735 if a4 != a0
      :                          @2738
 39756: 7b 9a                    u64 [a2] = a3
 39758: 33 0c                    a5 = 0
 39760: 33 07 c0 22 03           a0 = 0x322c0
 39765: 95 77 00 00 01           a0 = a0 + 0x10000
 39770: 28 0d                    jump @2740
      :                          @2739
 39772: 33 07 c0 22 03           a0 = 0x322c0
 39777: 95 77 00 00 01           a0 = a0 + 0x10000
 39782: 01                       fallthrough
      :                          @2740
 39783: 82 78                    a1 = u64 [a0]
 39785: c9 87 09                 a2 = a0 - a1
 39788: ab 39 11                 jump @2744 if a2 != t1
      :                          @2741
 39791: c9 68 09                 a2 = a1 - s1
 39794: 01                       fallthrough
      :                          @2742
 39795: 82 7a                    a3 = u64 [a0]
 39797: ab 8a f2                 jump @2740 if a3 != a1
      :                          @2743
 39800: 7b 79                    u64 [a0] = a2
 39802: 33 0b                    a4 = 0
 39804: 01                       fallthrough
      :                          @2744
 39805: 82 10 50                 ra = u64 [sp + 0x50]
 39808: 82 15 48                 s0 = u64 [sp + 0x48]
 39811: 82 16 40                 s1 = u64 [sp + 0x40]
 39814: 95 11 58                 sp = sp + 0x58
 39817: 32 00                    ret
      :                          @2745
 39819: 00                       trap
      :                          @2746
 39820: 00                       trap
      :                          @2747
 39821: 00                       trap
      :                          @2748
 39822: 00                       trap
      :                          @2749
 39823: c8 98 08                 a1 = a1 + a2
 39826: 01                       fallthrough
      :                          @2750
 39827: 95 99 01                 a2 = a2 + 0x1
 39830: ca 99 0a                 a3 = a2 * a2
 39833: ac a7 1a                 jump @2755 if a0 <u a3
      :                          @2751
 39836: 51 09 1b                 jump @2756 if a2 == 0
      :                          @2752
 39839: cb 97 0a                 a3 = a0 /u a2
 39842: ca 9a 0b                 a4 = a3 * a2
 39845: ab 7b ee                 jump @2750 if a4 != a0
      :                          @2753
 39848: aa a9 e7                 jump @2749 if a2 == a3
      :                          @2754
 39851: c8 98 08                 a1 = a1 + a2
 39854: c8 a8 08                 a1 = a1 + a3
 39857: 28 e2                    jump @2750
      :                          @2755
 39859: 64 87                    a0 = a1
 39861: 32 00                    ret
      :                          @2756
 39863: 00                       trap
      :                          @2757
 39864: 33 08                    a1 = 0
 39866: 33 09 02                 a2 = 0x2
 39869: ae 97 07                 jump @2759 if a0 >=u a2
      :                          @2758
 39872: 64 87                    a0 = a1
 39874: 32 00                    ret
      :                          @2759
 39876: 33 02 09                 t0 = 0x9
 39879: 33 0b 02                 a4 = 0x2
 39882: 28 18                    jump @2762
      :                          @2760
 39884: 95 88 01                 a1 = a1 + 0x1
 39887: 01                       fallthrough
      :                          @2761
 39888: d8 7b 0a                 a3 = a4 <u a0
 39891: c8 ab 0b                 a4 = a4 + a3
 39894: 85 aa 01                 a3 = a3 ^ 0x1
 39897: d8 b7 0c                 a5 = a0 <u a4
 39900: d4 ca 0a                 a3 = a3 | a5
 39903: 52 0a e1                 jump @2758 if a3 != 0
      :                          @2762
 39906: ac 9b ee                 jump @2761 if a4 <u a2
      :                          @2763
 39909: 84 bc 01                 a5 = a4 & 0x1
 39912: 52 0c 08                 jump @2766 if a5 != 0
      :                          @2764
 39915: aa 9b e1                 jump @2760 if a4 == a2
      :                          @2765
 39918: 28 e2                    jump @2761
      :                          @2766
 39920: ac 2b dc                 jump @2760 if a4 <u t0
      :                          @2767
 39923: 33 0c 03                 a5 = 0x3
 39926: 01                       fallthrough
      :                          @2768
 39927: 51 0c 14                 jump @2772 if a5 == 0
      :                          @2769
 39930: cd cb 0a                 a3 = a4 %u a5
 39933: 51 0a d3                 jump @2761 if a3 == 0
      :                          @2770
 39936: 95 cc 02                 a5 = a5 + 0x2
 39939: ca cc 0a                 a3 = a5 * a5
 39942: ae ab f1                 jump @2768 if a4 >=u a3
      :                          @2771
 39945: 28 c3                    jump @2760
      :                          @2772
 39947: 00                       trap
      :                          @2773
 39948: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 39958: d3 79 09                 a2 = a2 ^ a0
 39961: e1 89 09                 a2 = a2 | ~a1
 39964: 51 09 57                 jump @2780 if a2 == 0
      :                          @2774
 39967: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 39970: 33 0b 03                 a4 = 0x3
 39973: 8e 9a                    a3 = a2 >u 0
 39975: ae b8 16                 jump @2776 if a1 >=u a4
      :                          @2775
 39978: 95 a8 ff                 a1 = a3 + 0xffffffffffffffff
 39981: d3 a9 09                 a2 = a2 ^ a3
 39984: 8e 97                    a0 = a2 >u 0
 39986: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 39989: 33 07 01                 a0 = 0x1
 39992: db 89 07                 a0 = a2 if a1 != 0
 39995: 32 00                    ret
      :                          @2776
 39997: 98 9b 3f                 a4 = a2 >> 0x3f
 40000: c8 9b 0b                 a4 = a4 + a2
 40003: 99 bb 01                 a4 = a4 >>a 0x1
 40006: ce 87 02                 t0 = a0 %s a1
 40009: 9a 8c                    a5 = -a1
 40011: e3 c8 0c                 a5 = maxs(a1, a5)
 40014: 99 27 3f                 a0 = t0 >>a 0x3f
 40017: d2 c7 07                 a0 = a0 & a5
 40020: c8 27 07                 a0 = a0 + t0
 40023: 28 0b                    jump @2778
      :                          @2777
 40025: 98 bb 01                 a4 = a4 >> 0x1
 40028: ca 77 07                 a0 = a0 * a0
 40031: 51 0b cb                 jump @2775 if a4 == 0
      :                          @2778
 40034: 84 bc 01                 a5 = a4 & 0x1
 40037: cd 87 07                 a0 = a0 %u a1
 40040: 51 0c f1                 jump @2777 if a5 == 0
      :                          @2779
 40043: ca a7 0a                 a3 = a0 * a3
 40046: cd 8a 0a                 a3 = a3 %u a1
 40049: 28 e8                    jump @2777
      :                          @2780
 40051: 00                       trap
      :                          @2781
 40052: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 40055: 7b 10 18                 u64 [sp + 0x18] = ra
 40058: 7b 15 10                 u64 [sp + 0x10] = s0
 40061: 7b 16 08                 u64 [sp + 0x8] = s1
 40064: 33 0a 01                 a3 = 0x1
 40067: 51 07 0e                 jump @2784 if a0 == 0
      :                          @2782
 40070: 33 09 02                 a2 = 0x2
 40073: ab 98 0d                 jump @2785 if a1 != a2
      :                          @2783
 40076: 64 74                    t2 = a0
 40078: 28 73 01                 jump @2830
      :                          @2784
 40081: 33 04                    t2 = 0
 40083: 28 6e 01                 jump @2830
      :                          @2785
 40086: 95 84 ff                 t2 = a1 + 0xffffffffffffffff
 40089: 8e 42                    t0 = t2 >u 0
 40091: 98 43 01                 t1 = t2 >> 0x1
 40094: 64 29                    a2 = t0
 40096: 55 18 03 59              jump @2798 if a1 >=u 3
      :                          @2786
 40100: 33 0a 01                 a3 = 0x1
 40103: ab a9 57 01              jump @2829 if a2 != a3
      :                          @2787
 40107: 33 0c                    a5 = 0
 40109: 84 49 01                 a2 = t2 & 0x1
 40112: 52 09 6b                 jump @2802 if a2 != 0
      :                          @2788
 40115: 64 49                    a2 = t2
 40117: 01                       fallthrough
      :                          @2789
 40118: 98 90 01                 ra = a2 >> 0x1
 40121: 84 9a 02                 a3 = a2 & 0x2
 40124: 83 cc 01                 i32 a5 = a5 + 0x1
 40127: 64 09                    a2 = ra
 40129: 51 0a f5                 jump @2789 if a3 == 0
      :                          @2790
 40132: 55 18 03 5d              jump @2803 if a1 >=u 3
      :                          @2791
 40136: 33 09 02                 a2 = 0x2
 40139: ab 24 13                 jump @2794 if t2 != t0
      :                          @2792
 40142: 64 23                    t1 = t0
 40144: 64 2b                    a4 = t0
 40146: 64 24                    t2 = t0
 40148: 51 00 c2 00              jump @2817 if ra == 0
      :                          @2793
 40152: 64 0a                    a3 = ra
 40154: 64 2b                    a4 = t0
 40156: 28 0c                    jump @2796
      :                          @2794
 40158: 28                       jump @2794
      :                          @2795
 40159: 98 aa 01                 a3 = a3 >> 0x1
 40162: ca 99 09                 a2 = a2 * a2
 40165: 51 0a 69                 jump @2809 if a3 == 0
      :                          @2796
 40168: 84 a6 01                 s1 = a3 & 0x1
 40171: cd 89 09                 a2 = a2 %u a1
 40174: 51 06 f1                 jump @2795 if s1 == 0
      :                          @2797
 40177: ca b9 0b                 a4 = a2 * a4
 40180: cd 8b 0b                 a4 = a4 %u a1
 40183: 28 e8                    jump @2795
      :                          @2798
 40185: 64 7b                    a4 = a0
 40187: 64 3a                    a3 = t1
 40189: 64 29                    a2 = t0
 40191: 28 0b                    jump @2800
      :                          @2799
 40193: 98 aa 01                 a3 = a3 >> 0x1
 40196: ca bb 0b                 a4 = a4 * a4
 40199: 51 0a 9d                 jump @2786 if a3 == 0
      :                          @2800
 40202: 84 ac 01                 a5 = a3 & 0x1
 40205: cd 8b 0b                 a4 = a4 %u a1
 40208: 51 0c f1                 jump @2799 if a5 == 0
      :                          @2801
 40211: ca 9b 09                 a2 = a4 * a2
 40214: cd 89 09                 a2 = a2 %u a1
 40217: 28 e8                    jump @2799
      :                          @2802
 40219: 64 40                    ra = t2
 40221: 53 18 03 ab              jump @2791 if a1 <u 3
      :                          @2803
 40225: 33 0a 02                 a3 = 0x2
 40228: 28 08                    jump @2805
      :                          @2804
 40230: 95 9a 01                 a3 = a2 + 0x1
 40233: aa 4b a5                 jump @2792 if a4 == t2
      :                          @2805
 40236: 64 a9                    a2 = a3
 40238: 64 35                    s0 = t1
 40240: 64 2b                    a4 = t0
 40242: 28 0b                    jump @2807
      :                          @2806
 40244: 98 55 01                 s0 = s0 >> 0x1
 40247: ca aa 0a                 a3 = a3 * a3
 40250: 51 05 ec                 jump @2804 if s0 == 0
      :                          @2807
 40253: 84 56 01                 s1 = s0 & 0x1
 40256: cd 8a 0a                 a3 = a3 %u a1
 40259: 51 06 f1                 jump @2806 if s1 == 0
      :                          @2808
 40262: ca ba 0b                 a4 = a3 * a4
 40265: cd 8b 0b                 a4 = a4 %u a1
 40268: 28 e8                    jump @2806
      :                          @2809
 40270: 64 7a                    a3 = a0
 40272: 64 09                    a2 = ra
 40274: 64 23                    t1 = t0
 40276: 28 0b                    jump @2811
      :                          @2810
 40278: 98 99 01                 a2 = a2 >> 0x1
 40281: ca aa 0a                 a3 = a3 * a3
 40284: 51 09 14                 jump @2813 if a2 == 0
      :                          @2811
 40287: 84 96 01                 s1 = a2 & 0x1
 40290: cd 8a 0a                 a3 = a3 %u a1
 40293: 51 06 f1                 jump @2810 if s1 == 0
      :                          @2812
 40296: ca 3a 06                 s1 = a3 * t1
 40299: cd 86 03                 t1 = s1 %u a1
 40302: 28 e8                    jump @2810
      :                          @2813
 40304: 95 06 01                 s1 = ra + 0x1
 40307: 33 09 03                 a2 = 0x3
 40310: 64 24                    t2 = t0
 40312: 28 0b                    jump @2815
      :                          @2814
 40314: 98 a6 01                 s1 = a3 >> 0x1
 40317: ca 77 07                 a0 = a0 * a0
 40320: ae a9 16                 jump @2817 if a2 >=u a3
      :                          @2815
 40323: 64 6a                    a3 = s1
 40325: 84 65 02                 s0 = s1 & 0x2
 40328: cd 87 07                 a0 = a0 %u a1
 40331: 51 05 ef                 jump @2814 if s0 == 0
      :                          @2816
 40334: ca 47 06                 s1 = a0 * t2
 40337: cd 86 04                 t2 = s1 %u a1
 40340: 28 e6                    jump @2814
      :                          @2817
 40342: 33 0a 01                 a3 = 0x1
 40345: aa a3 68                 jump @2830 if t1 == a3
      :                          @2818
 40348: 33 07 01                 a0 = 0x1
 40351: 33 09                    a2 = 0
 40353: 64 3a                    a3 = t1
 40355: 28 07                    jump @2820
      :                          @2819
 40357: 33 09                    a2 = 0
 40359: 64 3a                    a3 = t1
 40361: 01                       fallthrough
      :                          @2820
 40362: aa 7a 11                 jump @2823 if a3 == a0
      :                          @2821
 40365: ca aa 0a                 a3 = a3 * a3
 40368: 83 99 01                 i32 a2 = a2 + 0x1
 40371: cd 8a 0a                 a3 = a3 %u a1
 40374: ab 9c f4                 jump @2820 if a5 != a2
      :                          @2822
 40377: 28 45                    jump @2829
      :                          @2823
 40379: 85 9a ff                 a3 = a2 ^ 0xffffffffffffffff
 40382: c8 ca 0a                 a3 = a3 + a5
 40385: cf a7 0c                 a5 = a0 << a3
 40388: 64 2a                    a3 = t0
 40390: 28 0b                    jump @2825
      :                          @2824
 40392: 98 cc 01                 a5 = a5 >> 0x1
 40395: ca bb 0b                 a4 = a4 * a4
 40398: 51 0c 14                 jump @2827 if a5 == 0
      :                          @2825
 40401: 84 c5 01                 s0 = a5 & 0x1
 40404: cd 8b 0b                 a4 = a4 %u a1
 40407: 51 05 f1                 jump @2824 if s0 == 0
      :                          @2826
 40410: ca ab 0a                 a3 = a4 * a3
 40413: cd 8a 0a                 a3 = a3 %u a1
 40416: 28 e8                    jump @2824
      :                          @2827
 40418: ca aa 0b                 a4 = a3 * a3
 40421: cd 8b 0b                 a4 = a4 %u a1
 40424: ca 3b 0c                 a5 = a4 * t1
 40427: cd 8c 03                 t1 = a5 %u a1
 40430: ca 4a 0c                 a5 = a3 * t2
 40433: 33 0a 01                 a3 = 0x1
 40436: cd 8c 04                 t2 = a5 %u a1
 40439: 64 9c                    a5 = a2
 40441: ab a3 ac                 jump @2819 if t1 != a3
      :                          @2828
 40444: 28 05                    jump @2830
      :                          @2829
 40446: 33 0a                    a3 = 0
 40448: 01                       fallthrough
      :                          @2830
 40449: 64 a7                    a0 = a3
 40451: 64 48                    a1 = t2
 40453: 82 10 18                 ra = u64 [sp + 0x18]
 40456: 82 15 10                 s0 = u64 [sp + 0x10]
 40459: 82 16 08                 s1 = u64 [sp + 0x8]
 40462: 95 11 20                 sp = sp + 0x20
 40465: 32 00                    ret
      :                          @2831
 40467: 51 07 eb 00              jump @2849 if a0 == 0
      :                          @2832
 40471: 95 82 ff                 t0 = a1 + 0xffffffffffffffff
 40474: 98 24 01                 t2 = t0 >> 0x1
 40477: 33 03 01                 t1 = 0x1
 40480: 64 7b                    a4 = a0
 40482: 64 4a                    a3 = t2
 40484: 28 0b                    jump @2834
      :                          @2833
 40486: 98 aa 01                 a3 = a3 >> 0x1
 40489: ca 99 0b                 a4 = a2 * a2
 40492: 51 0a 14                 jump @2836 if a3 == 0
      :                          @2834
 40495: 84 ac 01                 a5 = a3 & 0x1
 40498: cd 8b 09                 a2 = a4 %u a1
 40501: 51 0c f1                 jump @2833 if a5 == 0
      :                          @2835
 40504: ca 39 0b                 a4 = a2 * t1
 40507: cd 8b 03                 t1 = a4 %u a1
 40510: 28 e8                    jump @2833
      :                          @2836
 40512: 33 0a 01                 a3 = 0x1
 40515: ab a3 c4 00              jump @2850 if t1 != a3
      :                          @2837
 40519: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 40522: 7b 15 08                 u64 [sp + 0x8] = s0
 40525: 7b 16                    u64 [sp] = s1
 40527: cd 87 07                 a0 = a0 %u a1
 40530: 01                       fallthrough
      :                          @2838
 40531: ca aa 09                 a2 = a3 * a3
 40534: c8 89 09                 a2 = a2 + a1
 40537: c9 79 09                 a2 = a2 - a0
 40540: cd 89 03                 t1 = a2 %u a1
 40543: 33 0c 01                 a5 = 0x1
 40546: 64 39                    a2 = t1
 40548: 64 4b                    a4 = t2
 40550: 28 0b                    jump @2840
      :                          @2839
 40552: 98 bb 01                 a4 = a4 >> 0x1
 40555: ca 99 09                 a2 = a2 * a2
 40558: 51 0b 14                 jump @2842 if a4 == 0
      :                          @2840
 40561: 84 b5 01                 s0 = a4 & 0x1
 40564: cd 89 09                 a2 = a2 %u a1
 40567: 51 05 f1                 jump @2839 if s0 == 0
      :                          @2841
 40570: ca c9 0c                 a5 = a2 * a5
 40573: cd 8c 0c                 a5 = a5 %u a1
 40576: 28 e8                    jump @2839
      :                          @2842
 40578: aa 2c 0c                 jump @2845 if a5 == t0
      :                          @2843
 40581: 95 aa 01                 a3 = a3 + 0x1
 40584: ab 8a cb                 jump @2838 if a3 != a1
      :                          @2844
 40587: 33 0a                    a3 = 0
 40589: 01                       fallthrough
      :                          @2845
 40590: 33 0c                    a5 = 0
 40592: 95 87 01                 a0 = a1 + 0x1
 40595: 33 0b 01                 a4 = 0x1
 40598: 33 02 04                 t0 = 0x4
 40601: 33 04 01                 t2 = 0x1
 40604: 28 2e                    jump @2847
      :                          @2846
 40606: 98 97 01                 a0 = a2 >> 0x1
 40609: ca aa 05                 s0 = a3 * a3
 40612: cd 85 05                 s0 = s0 %u a1
 40615: ca bb 06                 s1 = a4 * a4
 40618: cd 86 06                 s1 = s1 %u a1
 40621: ca 36 06                 s1 = s1 * t1
 40624: cd 86 06                 s1 = s1 %u a1
 40627: c8 65 05                 s0 = s0 + s1
 40630: ca ba 0a                 a3 = a3 * a4
 40633: cd 85 05                 s0 = s0 %u a1
 40636: cd 8a 0a                 a3 = a3 %u a1
 40639: 97 aa 01                 a3 = a3 << 0x1
 40642: cd 8a 0b                 a4 = a3 %u a1
 40645: 64 5a                    a3 = s0
 40647: ac 29 46                 jump @2851 if a2 <u t0
      :                          @2847
 40650: 64 79                    a2 = a0
 40652: 84 77 02                 a0 = a0 & 0x2
 40655: 51 07 cf                 jump @2846 if a0 == 0
      :                          @2848
 40658: ca 4a 07                 a0 = a3 * t2
 40661: cd 87 07                 a0 = a0 %u a1
 40664: ca bc 05                 s0 = a5 * a4
 40667: cd 85 05                 s0 = s0 %u a1
 40670: ca 35 05                 s0 = s0 * t1
 40673: cd 85 05                 s0 = s0 %u a1
 40676: c8 57 07                 a0 = a0 + s0
 40679: ca b4 05                 s0 = t2 * a4
 40682: cd 87 04                 t2 = a0 %u a1
 40685: cd 85 07                 a0 = s0 %u a1
 40688: ca ca 0c                 a5 = a3 * a5
 40691: cd 8c 0c                 a5 = a5 %u a1
 40694: c8 c7 07                 a0 = a0 + a5
 40697: cd 87 0c                 a5 = a0 %u a1
 40700: 28 a2                    jump @2846
      :                          @2849
 40702: 33 07 01                 a0 = 0x1
 40705: 33 08                    a1 = 0
 40707: 28 5e 22 02              jump @12263
      :                          @2850
 40711: 33 07                    a0 = 0
 40713: 64 48                    a1 = t2
 40715: 32 00                    ret
      :                          @2851
 40717: 33 07 01                 a0 = 0x1
 40720: 82 15 08                 s0 = u64 [sp + 0x8]
 40723: 82 16                    s1 = u64 [sp]
 40725: 95 11 10                 sp = sp + 0x10
 40728: 64 48                    a1 = t2
 40730: 32 00                    ret
      :                          @2852
 40732: 51 17 02 2d              jump @2857 if a0 == 2
      :                          @2853
 40736: 84 78 3f                 a1 = a0 & 0x3f
 40739: 51 08 2d                 jump @2858 if a1 == 0
      :                          @2854
 40742: 9b 78 ff                 a1 = 0xffffffffffffffff << a0
 40745: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 40748: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 40751: 33 09 04                 a2 = 0x4
 40754: 01                       fallthrough
      :                          @2855
 40755: ca 99 09                 a2 = a2 * a2
 40758: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 40761: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 40764: cd 89 09                 a2 = a2 %u a1
 40767: 52 07 f4                 jump @2855 if a0 != 0
      :                          @2856
 40770: 88 98 01                 a1 = a2 <u 0x1
 40773: 64 87                    a0 = a1
 40775: 32 00                    ret
      :                          @2857
 40777: 33 07 01                 a0 = 0x1
 40780: 28 91 b5 01              jump @10985
      :                          @2858
 40784: 00                       trap
      :                          @2859
 40785: 51 17 01 15              jump @2862 if a0 == 1
      :                          @2860
 40789: 52 07 20                 jump @2863 if a0 != 0
      :                          @2861
 40792: 33 07 02                 a0 = 0x2
 40795: cd 97 03                 t1 = a0 %u a2
 40798: 33 07                    a0 = 0
 40800: 64 38                    a1 = t1
 40802: 28 b1 b6 01              jump @10998
      :                          @2862
 40806: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 40809: 8e 93                    t1 = a2 >u 0
 40811: 64 3b                    a4 = t1
 40813: 64 b7                    a0 = a4
 40815: 64 38                    a1 = t1
 40817: 28 a2 b6 01              jump @10998
      :                          @2863
 40821: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 40824: 7b 10 18                 u64 [sp + 0x18] = ra
 40827: 7b 15 10                 u64 [sp + 0x10] = s0
 40830: 7b 16 08                 u64 [sp + 0x8] = s1
 40833: 33 04                    t2 = 0
 40835: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 40838: 8e a3                    t1 = a3 >u 0
 40840: 33 0c 02                 a5 = 0x2
 40843: cd 9c 05                 s0 = a5 %u a2
 40846: 9a 9a                    a3 = -a2
 40848: e3 a9 02                 t0 = maxs(a2, a3)
 40851: 64 3a                    a3 = t1
 40853: 01                       fallthrough
      :                          @2864
 40854: ca 85 0b                 a4 = s0 * a1
 40857: d8 7c 05                 s0 = a5 <u a0
 40860: 85 50 01                 ra = s0 ^ 0x1
 40863: c8 5c 0c                 a5 = a5 + s0
 40866: ca 84 05                 s0 = t2 * a1
 40869: c9 5a 05                 s0 = a3 - s0
 40872: c9 b3 06                 s1 = t1 - a4
 40875: ce 95 05                 s0 = s0 %s a2
 40878: 99 5b 3f                 a4 = s0 >>a 0x3f
 40881: d2 2b 0b                 a4 = a4 & t0
 40884: c8 5b 0b                 a4 = a4 + s0
 40887: ce 96 04                 t2 = s1 %s a2
 40890: d8 c7 05                 s0 = a0 <u a5
 40893: d4 50 00                 ra = ra | s0
 40896: 99 46 3f                 s1 = t2 >>a 0x3f
 40899: d2 26 06                 s1 = s1 & t0
 40902: 64 35                    s0 = t1
 40904: c8 46 03                 t1 = s1 + t2
 40907: 64 a4                    t2 = a3
 40909: 64 ba                    a3 = a4
 40911: 51 00 c7                 jump @2864 if ra == 0
      :                          @2865
 40914: 82 10 18                 ra = u64 [sp + 0x18]
 40917: 82 15 10                 s0 = u64 [sp + 0x10]
 40920: 82 16 08                 s1 = u64 [sp + 0x8]
 40923: 95 11 20                 sp = sp + 0x20
 40926: 64 b7                    a0 = a4
 40928: 64 38                    a1 = t1
 40930: 32 00                    ret
      :                          @2866
 40932: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 40935: 7b 10 18                 u64 [sp + 0x18] = ra
 40938: 7b 15 10                 u64 [sp + 0x10] = s0
 40941: 7b 16 08                 u64 [sp + 0x8] = s1
 40944: 95 73 ff                 t1 = a0 + 0xffffffffffffffff
 40947: 9a 78                    a1 = -a0
 40949: e3 87 02                 t0 = maxs(a0, a1)
 40952: 33 0b 01                 a4 = 0x1
 40955: 33 0a 05                 a3 = 0x5
 40958: 33 09 04                 a2 = 0x4
 40961: 01                       fallthrough
      :                          @2867
 40962: ce 7a 05                 s0 = a3 %s a0
 40965: 99 58 3f                 a1 = s0 >>a 0x3f
 40968: d2 28 08                 a1 = a1 & t0
 40971: c8 85 05                 s0 = s0 + a1
 40974: 64 36                    s1 = t1
 40976: 33 0c 01                 a5 = 0x1
 40979: 28 0b                    jump @2869
      :                          @2868
 40981: 98 86 01                 s1 = a1 >> 0x1
 40984: ca 55 05                 s0 = s0 * s0
 40987: ac 98 16                 jump @2871 if a1 <u a2
      :                          @2869
 40990: 64 68                    a1 = s1
 40992: 84 66 02                 s1 = s1 & 0x2
 40995: cd 75 05                 s0 = s0 %u a0
 40998: 51 06 ef                 jump @2868 if s1 == 0
      :                          @2870
 41001: ca c5 0c                 a5 = s0 * a5
 41004: cd 7c 0c                 a5 = a5 %u a0
 41007: 28 e6                    jump @2868
      :                          @2871
 41009: 95 c8 ff                 a1 = a5 + 0xffffffffffffffff
 41012: 88 88 01                 a1 = a1 <u 0x1
 41015: d3 3c 0c                 a5 = a5 ^ t1
 41018: 8e cc                    a5 = a5 >u 0
 41020: d4 c8 08                 a1 = a1 | a5
 41023: 51 08 0f                 jump @2873 if a1 == 0
      :                          @2872
 41026: 97 b8 01                 a1 = a4 << 0x1
 41029: 9a aa                    a3 = -a3
 41031: c9 8a 0a                 a3 = a3 - a1
 41034: 9a bb                    a4 = -a4
 41036: 28 b6                    jump @2867
      :                          @2873
 41038: 95 74 01                 t2 = a0 + 0x1
 41041: 33 0b                    a4 = 0
 41043: 84 48 01                 a1 = t2 & 0x1
 41046: 52 08 14                 jump @2876 if a1 != 0
      :                          @2874
 41049: 64 48                    a1 = t2
 41051: 01                       fallthrough
      :                          @2875
 41052: 98 84 01                 t2 = a1 >> 0x1
 41055: 84 89 02                 a2 = a1 & 0x2
 41058: 83 bb 01                 i32 a4 = a4 + 0x1
 41061: 64 48                    a1 = t2
 41063: 51 09 f5                 jump @2875 if a2 == 0
      :                          @2876
 41066: 33 08 01                 a1 = 0x1
 41069: 51 04 b6 00              jump @2885 if t2 == 0
      :                          @2877
 41073: 9a a8 01                 a1 = 0x1 - a3
 41076: 99 89 3f                 a2 = a1 >>a 0x3f
 41079: 98 99 3e                 a2 = a2 >> 0x3e
 41082: c8 98 08                 a1 = a1 + a2
 41085: 33 09 01                 a2 = 0x1
 41088: 99 83 02                 t1 = a1 >>a 0x2
 41091: ab 94 0c                 jump @2879 if t2 != a2
      :                          @2878
 41094: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 41097: 8e 8c                    a5 = a1 >u 0
 41099: 64 ca                    a3 = a5
 41101: 28 4e                    jump @2881
      :                          @2879
 41103: 33 05                    s0 = 0
 41105: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 41108: 8e 8c                    a5 = a1 >u 0
 41110: 33 08 02                 a1 = 0x2
 41113: cd 78 06                 s1 = a1 %u a0
 41116: 64 c9                    a2 = a5
 41118: 01                       fallthrough
      :                          @2880
 41119: ca 36 0a                 a3 = s1 * t1
 41122: 64 c6                    s1 = a5
 41124: d8 48 0c                 a5 = a1 <u t2
 41127: 85 c0 01                 ra = a5 ^ 0x1
 41130: c8 c8 08                 a1 = a1 + a5
 41133: ca 35 0c                 a5 = s0 * t1
 41136: c9 c9 0c                 a5 = a2 - a5
 41139: c9 a6 05                 s0 = s1 - a3
 41142: ce 7c 0a                 a3 = a5 %s a0
 41145: 99 ac 3f                 a5 = a3 >>a 0x3f
 41148: d2 2c 0c                 a5 = a5 & t0
 41151: c8 ca 0a                 a3 = a3 + a5
 41154: ce 75 0c                 a5 = s0 %s a0
 41157: d8 84 05                 s0 = t2 <u a1
 41160: d4 50 00                 ra = ra | s0
 41163: 99 c5 3f                 s0 = a5 >>a 0x3f
 41166: d2 25 05                 s0 = s0 & t0
 41169: c8 5c 0c                 a5 = a5 + s0
 41172: 64 95                    s0 = a2
 41174: 64 a9                    a2 = a3
 41176: 51 00 c7                 jump @2880 if ra == 0
      :                          @2881
 41179: 33 08 01                 a1 = 0x1
 41182: 51 0a 45                 jump @2885 if a3 == 0
      :                          @2882
 41185: e3 8b 0b                 a4 = maxs(a4, a1)
 41188: ce 73 08                 a1 = t1 %s a0
 41191: 99 89 3f                 a2 = a1 >>a 0x3f
 41194: d2 29 09                 a2 = a2 & t0
 41197: c8 98 08                 a1 = a1 + a2
 41200: cd 78 09                 a2 = a1 %u a0
 41203: 97 99 01                 a2 = a2 << 0x1
 41206: 01                       fallthrough
      :                          @2883
 41207: 83 bb ff                 i32 a4 = a4 + 0xffffffffffffffff
 41210: 8e b8                    a1 = a4 >u 0
 41212: 51 0b 27                 jump @2885 if a4 == 0
      :                          @2884
 41215: ca ca 0a                 a3 = a3 * a5
 41218: ce 7a 06                 s1 = a3 %s a0
 41221: 99 6a 3f                 a3 = s1 >>a 0x3f
 41224: d2 2a 0a                 a3 = a3 & t0
 41227: c8 6a 0a                 a3 = a3 + s1
 41230: ca cc 0c                 a5 = a5 * a5
 41233: c9 9c 0c                 a5 = a5 - a2
 41236: ce 7c 06                 s1 = a5 %s a0
 41239: 99 6c 3f                 a5 = s1 >>a 0x3f
 41242: d2 2c 0c                 a5 = a5 & t0
 41245: c8 6c 0c                 a5 = a5 + s1
 41248: 52 0a d7                 jump @2883 if a3 != 0
      :                          @2885
 41251: 64 87                    a0 = a1
 41253: 82 10 18                 ra = u64 [sp + 0x18]
 41256: 82 15 10                 s0 = u64 [sp + 0x10]
 41259: 82 16 08                 s1 = u64 [sp + 0x8]
 41262: 95 11 20                 sp = sp + 0x20
 41265: 32 00                    ret
      :                          @2886
 41267: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 41270: 7b 15 08                 u64 [sp + 0x8] = s0
 41273: 7b 16                    u64 [sp] = s1
 41275: 95 74 ff                 t2 = a0 + 0xffffffffffffffff
 41278: 84 48 01                 a1 = t2 & 0x1
 41281: 52 08 81 00              jump @2901 if a1 != 0
      :                          @2887
 41285: 33 09 90 05 01           a2 = 0x10590
 41290: 95 93 38                 t1 = a2 + 0x38
 41293: 33 02 01                 t0 = 0x1
 41296: 28 06                    jump @2889
      :                          @2888
 41298: aa 39 14 02              jump @2942 if a2 == t1
      :                          @2889
 41302: 82 9a                    a3 = u64 [a2]
 41304: cd 7a 08                 a1 = a3 %u a0
 41307: 51 08 0b 02              jump @2942 if a1 == 0
      :                          @2890
 41311: 33 0c                    a5 = 0
 41313: 95 99 08                 a2 = a2 + 0x8
 41316: 33 05 01                 s0 = 0x1
 41319: 64 48                    a1 = t2
 41321: 01                       fallthrough
      :                          @2891
 41322: 64 5b                    a4 = s0
 41324: 84 86 02                 s1 = a1 & 0x2
 41327: 98 88 01                 a1 = a1 >> 0x1
 41330: 83 cc 01                 i32 a5 = a5 + 0x1
 41333: 83 55 01                 i32 s0 = s0 + 0x1
 41336: 51 06 f2                 jump @2891 if s1 == 0
      :                          @2892
 41339: 33 0c 01                 a5 = 0x1
 41342: 28 0b                    jump @2894
      :                          @2893
 41344: 98 88 01                 a1 = a1 >> 0x1
 41347: ca aa 0a                 a3 = a3 * a3
 41350: 51 08 14                 jump @2896 if a1 == 0
      :                          @2894
 41353: 84 85 01                 s0 = a1 & 0x1
 41356: cd 7a 0a                 a3 = a3 %u a0
 41359: 51 05 f1                 jump @2893 if s0 == 0
      :                          @2895
 41362: ca ca 0c                 a5 = a3 * a5
 41365: cd 7c 0c                 a5 = a5 %u a0
 41368: 28 e8                    jump @2893
      :                          @2896
 41370: 95 c8 ff                 a1 = a5 + 0xffffffffffffffff
 41373: 88 88 01                 a1 = a1 <u 0x1
 41376: d3 4c 0a                 a3 = a5 ^ t2
 41379: 88 aa 01                 a3 = a3 <u 0x1
 41382: d4 a8 08                 a1 = a1 | a3
 41385: 52 08 a9                 jump @2888 if a1 != 0
      :                          @2897
 41388: e3 2b 08                 a1 = maxs(a4, t0)
 41391: 01                       fallthrough
      :                          @2898
 41392: 83 88 ff                 i32 a1 = a1 + 0xffffffffffffffff
 41395: 51 08 be 01              jump @2943 if a1 == 0
      :                          @2899
 41399: ca cc 0a                 a3 = a5 * a5
 41402: cd 7a 0c                 a5 = a3 %u a0
 41405: ab 4c f3                 jump @2898 if a5 != t2
      :                          @2900
 41408: 28 92                    jump @2888
      :                          @2901
 41410: 33 08 01                 a1 = 0x1
 41413: 33 0a 02                 a3 = 0x2
 41416: 64 49                    a2 = t2
 41418: 28 0b                    jump @2903
      :                          @2902
 41420: 98 99 01                 a2 = a2 >> 0x1
 41423: ca aa 0a                 a3 = a3 * a3
 41426: 51 09 14                 jump @2905 if a2 == 0
      :                          @2903
 41429: 84 9b 01                 a4 = a2 & 0x1
 41432: cd 7a 0a                 a3 = a3 %u a0
 41435: 51 0b f1                 jump @2902 if a4 == 0
      :                          @2904
 41438: ca 8a 08                 a1 = a3 * a1
 41441: cd 78 08                 a1 = a1 %u a0
 41444: 28 e8                    jump @2902
      :                          @2905
 41446: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41449: 8e 99                    a2 = a2 >u 0
 41451: d3 48 08                 a1 = a1 ^ t2
 41454: 8e 88                    a1 = a1 >u 0
 41456: d2 98 08                 a1 = a1 & a2
 41459: 52 08 7e 01              jump @2943 if a1 != 0
      :                          @2906
 41463: 33 0a 45 01              a3 = 0x145
 41467: cd 7a 08                 a1 = a3 %u a0
 41470: 51 08 68 01              jump @2942 if a1 == 0
      :                          @2907
 41474: 33 08 01                 a1 = 0x1
 41477: 64 49                    a2 = t2
 41479: 28 0b                    jump @2909
      :                          @2908
 41481: 98 99 01                 a2 = a2 >> 0x1
 41484: ca aa 0a                 a3 = a3 * a3
 41487: 51 09 14                 jump @2911 if a2 == 0
      :                          @2909
 41490: 84 9b 01                 a4 = a2 & 0x1
 41493: cd 7a 0a                 a3 = a3 %u a0
 41496: 51 0b f1                 jump @2908 if a4 == 0
      :                          @2910
 41499: ca 8a 08                 a1 = a3 * a1
 41502: cd 78 08                 a1 = a1 %u a0
 41505: 28 e8                    jump @2908
      :                          @2911
 41507: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41510: 8e 99                    a2 = a2 >u 0
 41512: d3 48 08                 a1 = a1 ^ t2
 41515: 8e 88                    a1 = a1 >u 0
 41517: d2 98 08                 a1 = a1 & a2
 41520: 52 08 41 01              jump @2943 if a1 != 0
      :                          @2912
 41524: 33 0a 9f 24              a3 = 0x249f
 41528: cd 7a 08                 a1 = a3 %u a0
 41531: 51 08 2b 01              jump @2942 if a1 == 0
      :                          @2913
 41535: 33 08 01                 a1 = 0x1
 41538: 64 49                    a2 = t2
 41540: 28 0b                    jump @2915
      :                          @2914
 41542: 98 99 01                 a2 = a2 >> 0x1
 41545: ca aa 0a                 a3 = a3 * a3
 41548: 51 09 14                 jump @2917 if a2 == 0
      :                          @2915
 41551: 84 9b 01                 a4 = a2 & 0x1
 41554: cd 7a 0a                 a3 = a3 %u a0
 41557: 51 0b f1                 jump @2914 if a4 == 0
      :                          @2916
 41560: ca 8a 08                 a1 = a3 * a1
 41563: cd 78 08                 a1 = a1 %u a0
 41566: 28 e8                    jump @2914
      :                          @2917
 41568: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41571: 8e 99                    a2 = a2 >u 0
 41573: d3 48 08                 a1 = a1 ^ t2
 41576: 8e 88                    a1 = a1 >u 0
 41578: d2 98 08                 a1 = a1 & a2
 41581: 52 08 04 01              jump @2943 if a1 != 0
      :                          @2918
 41585: 33 0a 12 6e              a3 = 0x6e12
 41589: cd 7a 08                 a1 = a3 %u a0
 41592: 51 08 ee 00              jump @2942 if a1 == 0
      :                          @2919
 41596: 33 08 01                 a1 = 0x1
 41599: 64 49                    a2 = t2
 41601: 28 0b                    jump @2921
      :                          @2920
 41603: 98 99 01                 a2 = a2 >> 0x1
 41606: ca aa 0a                 a3 = a3 * a3
 41609: 51 09 14                 jump @2923 if a2 == 0
      :                          @2921
 41612: 84 9b 01                 a4 = a2 & 0x1
 41615: cd 7a 0a                 a3 = a3 %u a0
 41618: 51 0b f1                 jump @2920 if a4 == 0
      :                          @2922
 41621: ca 8a 08                 a1 = a3 * a1
 41624: cd 78 08                 a1 = a1 %u a0
 41627: 28 e8                    jump @2920
      :                          @2923
 41629: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41632: 8e 99                    a2 = a2 >u 0
 41634: d3 48 08                 a1 = a1 ^ t2
 41637: 8e 88                    a1 = a1 >u 0
 41639: d2 98 08                 a1 = a1 & a2
 41642: 52 08 c7 00              jump @2943 if a1 != 0
      :                          @2924
 41646: 33 0a d7 e0 06           a3 = 0x6e0d7
 41651: cd 7a 08                 a1 = a3 %u a0
 41654: 51 08 b0 00              jump @2942 if a1 == 0
      :                          @2925
 41658: 33 08 01                 a1 = 0x1
 41661: 64 49                    a2 = t2
 41663: 28 0b                    jump @2927
      :                          @2926
 41665: 98 99 01                 a2 = a2 >> 0x1
 41668: ca aa 0a                 a3 = a3 * a3
 41671: 51 09 14                 jump @2929 if a2 == 0
      :                          @2927
 41674: 84 9b 01                 a4 = a2 & 0x1
 41677: cd 7a 0a                 a3 = a3 %u a0
 41680: 51 0b f1                 jump @2926 if a4 == 0
      :                          @2928
 41683: ca 8a 08                 a1 = a3 * a1
 41686: cd 78 08                 a1 = a1 %u a0
 41689: 28 e8                    jump @2926
      :                          @2929
 41691: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41694: 8e 99                    a2 = a2 >u 0
 41696: d3 48 08                 a1 = a1 ^ t2
 41699: 8e 88                    a1 = a1 >u 0
 41701: d2 98 08                 a1 = a1 & a2
 41704: 52 08 89 00              jump @2943 if a1 != 0
      :                          @2930
 41708: 33 0a 18 3d 95 00        a3 = 0x953d18
 41714: cd 7a 08                 a1 = a3 %u a0
 41717: 51 08 71                 jump @2942 if a1 == 0
      :                          @2931
 41720: 33 08 01                 a1 = 0x1
 41723: 64 49                    a2 = t2
 41725: 28 0b                    jump @2933
      :                          @2932
 41727: 98 99 01                 a2 = a2 >> 0x1
 41730: ca aa 0a                 a3 = a3 * a3
 41733: 51 09 14                 jump @2935 if a2 == 0
      :                          @2933
 41736: 84 9b 01                 a4 = a2 & 0x1
 41739: cd 7a 0a                 a3 = a3 %u a0
 41742: 51 0b f1                 jump @2932 if a4 == 0
      :                          @2934
 41745: ca 8a 08                 a1 = a3 * a1
 41748: cd 78 08                 a1 = a1 %u a0
 41751: 28 e8                    jump @2932
      :                          @2935
 41753: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41756: 8e 99                    a2 = a2 >u 0
 41758: d3 48 08                 a1 = a1 ^ t2
 41761: 8e 88                    a1 = a1 >u 0
 41763: d2 98 08                 a1 = a1 & a2
 41766: 52 08 4b                 jump @2943 if a1 != 0
      :                          @2936
 41769: 33 0a fe 91 01 6b        a3 = 0x6b0191fe
 41775: cd 7a 08                 a1 = a3 %u a0
 41778: 51 08 34                 jump @2942 if a1 == 0
      :                          @2937
 41781: 33 08 01                 a1 = 0x1
 41784: 64 49                    a2 = t2
 41786: 28 0b                    jump @2939
      :                          @2938
 41788: 98 99 01                 a2 = a2 >> 0x1
 41791: ca aa 0a                 a3 = a3 * a3
 41794: 51 09 14                 jump @2941 if a2 == 0
      :                          @2939
 41797: 84 9b 01                 a4 = a2 & 0x1
 41800: cd 7a 0a                 a3 = a3 %u a0
 41803: 51 0b f1                 jump @2938 if a4 == 0
      :                          @2940
 41806: ca 8a 08                 a1 = a3 * a1
 41809: cd 78 08                 a1 = a1 %u a0
 41812: 28 e8                    jump @2938
      :                          @2941
 41814: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41817: 8e 99                    a2 = a2 >u 0
 41819: d3 48 08                 a1 = a1 ^ t2
 41822: 8e 88                    a1 = a1 >u 0
 41824: d2 98 08                 a1 = a1 & a2
 41827: 52 08 0e                 jump @2943 if a1 != 0
      :                          @2942
 41830: 82 15 08                 s0 = u64 [sp + 0x8]
 41833: 82 16                    s1 = u64 [sp]
 41835: 95 11 10                 sp = sp + 0x10
 41838: 28 76 fc                 jump @2866
      :                          @2943
 41841: 33 07                    a0 = 0
 41843: 82 15 08                 s0 = u64 [sp + 0x8]
 41846: 82 16                    s1 = u64 [sp]
 41848: 95 11 10                 sp = sp + 0x10
 41851: 32 00                    ret
      :                          @2944
 41853: 55 17 02 08              jump @2946 if a0 >=u 2
      :                          @2945
 41857: 28 85 b5 01              jump @11031
      :                          @2946
 41861: 64 79                    a2 = a0
 41863: 01                       fallthrough
      :                          @2947
 41864: 51 09 15                 jump @2950 if a2 == 0
      :                          @2948
 41867: 64 98                    a1 = a2
 41869: cb 97 09                 a2 = a0 /u a2
 41872: c8 89 09                 a2 = a2 + a1
 41875: 98 99 01                 a2 = a2 >> 0x1
 41878: ac 89 f2                 jump @2947 if a2 <u a1
      :                          @2949
 41881: 64 87                    a0 = a1
 41883: 32 00                    ret
      :                          @2950
 41885: 00                       trap
      :                          @2951
 41886: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 41889: 7b 15 08                 u64 [sp + 0x8] = s0
 41892: 7b 16                    u64 [sp] = s1
 41894: 82 78                    a1 = u64 [a0]
 41896: 82 73 08                 t1 = u64 [a0 + 0x8]
 41899: 82 72 10                 t0 = u64 [a0 + 0x10]
 41902: 82 7a 18                 a3 = u64 [a0 + 0x18]
 41905: 82 79 20                 a2 = u64 [a0 + 0x20]
 41908: 82 74 28                 t2 = u64 [a0 + 0x28]
 41911: 82 7c 30                 a5 = u64 [a0 + 0x30]
 41914: 82 7b 38                 a4 = u64 [a0 + 0x38]
 41917: 82 77 40                 a0 = u64 [a0 + 0x40]
 41920: 51 08 0c                 jump @2953 if a1 == 0
      :                          @2952
 41923: ca 89 05                 s0 = a2 * a1
 41926: ca a3 06                 s1 = t1 * a3
 41929: ab 65 39                 jump @2954 if s0 != s1
      :                          @2953
 41932: ca 97 05                 s0 = a0 * a2
 41935: ca 4b 06                 s1 = a4 * t2
 41938: c9 65 05                 s0 = s0 - s1
 41941: ca 85 08                 a1 = s0 * a1
 41944: ca a7 07                 a0 = a0 * a3
 41947: ca 4c 06                 s1 = a5 * t2
 41950: c9 76 06                 s1 = s1 - a0
 41953: ca 36 07                 a0 = s1 * t1
 41956: ca ab 0a                 a3 = a4 * a3
 41959: ca 9c 09                 a2 = a5 * a2
 41962: c9 9a 0a                 a3 = a3 - a2
 41965: ca 2a 09                 a2 = a3 * t0
 41968: c8 98 08                 a1 = a1 + a2
 41971: c8 87 07                 a0 = a0 + a1
 41974: 82 15 08                 s0 = u64 [sp + 0x8]
 41977: 82 16                    s1 = u64 [sp]
 41979: 95 11 10                 sp = sp + 0x10
 41982: 28 eb b7 01              jump @11044
      :                          @2954
 41986: ca 87 07                 a0 = a0 * a1
 41989: ca c2 09                 a2 = t0 * a5
 41992: c9 97 07                 a0 = a0 - a2
 41995: ca 8b 09                 a2 = a4 * a1
 41998: ca c3 0b                 a4 = t1 * a5
 42001: c9 9b 0b                 a4 = a4 - a2
 42004: ca 84 09                 a2 = t2 * a1
 42007: ca a2 0a                 a3 = t0 * a3
 42010: c9 a9 09                 a2 = a2 - a3
 42013: c9 65 05                 s0 = s0 - s1
 42016: ca 57 07                 a0 = a0 * s0
 42019: ca 9b 0a                 a3 = a4 * a2
 42022: c8 a7 07                 a0 = a0 + a3
 42025: 51 18 ff 13              jump @2956 if a1 == 4294967295
      :                          @2955
 42029: cc 87 07                 a0 = a0 /s a1
 42032: 82 15 08                 s0 = u64 [sp + 0x8]
 42035: 82 16                    s1 = u64 [sp]
 42037: 95 11 10                 sp = sp + 0x10
 42040: 28 b1 b7 01              jump @11044
      :                          @2956
 42044: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 42054: aa 97 11                 jump @2958 if a0 == a2
      :                          @2957
 42057: 9a 77                    a0 = -a0
 42059: 82 15 08                 s0 = u64 [sp + 0x8]
 42062: 82 16                    s1 = u64 [sp]
 42064: 95 11 10                 sp = sp + 0x10
 42067: 28 96 b7 01              jump @11044
      :                          @2958
 42071: 00                       trap
      :                          @2959
 42072: 82 72                    t0 = u64 [a0]
 42074: 82 79 08                 a2 = u64 [a0 + 0x8]
 42077: 82 7a 10                 a3 = u64 [a0 + 0x10]
 42080: 9a 28                    a1 = -t0
 42082: e3 82 0b                 a4 = maxs(t0, a1)
 42085: 51 09 40                 jump @2969 if a2 == 0
      :                          @2960
 42088: 9a 98                    a1 = -a2
 42090: e3 89 08                 a1 = maxs(a2, a1)
 42093: 01                       fallthrough
      :                          @2961
 42094: 64 8c                    a5 = a1
 42096: cd 8b 08                 a1 = a4 %u a1
 42099: 64 cb                    a4 = a5
 42101: 52 08 f9                 jump @2961 if a1 != 0
      :                          @2962
 42104: 82 7b 18                 a4 = u64 [a0 + 0x18]
 42107: 51 0a 32                 jump @2970 if a3 == 0
      :                          @2963
 42110: 9a a7                    a0 = -a3
 42112: e3 7a 08                 a1 = maxs(a3, a0)
 42115: 01                       fallthrough
      :                          @2964
 42116: 64 87                    a0 = a1
 42118: cd 8c 08                 a1 = a5 %u a1
 42121: 64 7c                    a5 = a0
 42123: 52 08 f9                 jump @2964 if a1 != 0
      :                          @2965
 42126: 51 0b 24                 jump @2971 if a4 == 0
      :                          @2966
 42129: 9a b8                    a1 = -a4
 42131: e3 8b 0c                 a5 = maxs(a4, a1)
 42134: 64 78                    a1 = a0
 42136: 01                       fallthrough
      :                          @2967
 42137: 64 c7                    a0 = a5
 42139: cd c8 0c                 a5 = a1 %u a5
 42142: 64 78                    a1 = a0
 42144: 52 0c f9                 jump @2967 if a5 != 0
      :                          @2968
 42147: 28 12                    jump @2972
      :                          @2969
 42149: 64 bc                    a5 = a4
 42151: 82 7b 18                 a4 = u64 [a0 + 0x18]
 42154: 52 0a d4                 jump @2963 if a3 != 0
      :                          @2970
 42157: 64 c7                    a0 = a5
 42159: 52 0b e2                 jump @2966 if a4 != 0
      :                          @2971
 42162: 51 07 16                 jump @2973 if a0 == 0
      :                          @2972
 42165: ca 2b 08                 a1 = a4 * t0
 42168: ca 9a 09                 a2 = a3 * a2
 42171: c9 98 08                 a1 = a1 - a2
 42174: 9a 89                    a2 = -a1
 42176: e3 98 08                 a1 = maxs(a1, a2)
 42179: cb 78 08                 a1 = a1 /u a0
 42182: 32 00                    ret
      :                          @2973
 42184: 00                       trap
      :                          @2974
 42185: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 42188: 7b 10 40                 u64 [sp + 0x40] = ra
 42191: 7b 15 38                 u64 [sp + 0x38] = s0
 42194: 7b 16 30                 u64 [sp + 0x30] = s1
 42197: 82 86                    s1 = u64 [a1]
 42199: 82 89 10                 a2 = u64 [a1 + 0x10]
 42202: 82 8a 08                 a3 = u64 [a1 + 0x8]
 42205: 82 8b 18                 a4 = u64 [a1 + 0x18]
 42208: d4 69 08                 a1 = a2 | s1
 42211: 64 75                    s0 = a0
 42213: 51 08 89 00              jump @2982 if a1 == 0
      :                          @2975
 42217: 7b 1a                    u64 [sp] = a3
 42219: 7b 1b 08                 u64 [sp + 0x8] = a4
 42222: 95 17 18                 a0 = sp + 0x18
 42225: 64 68                    a1 = s1
 42227: 7b 19 10                 u64 [sp + 0x10] = a2
 42230: 50 20 be 02 2d e6        ra = 702, jump @2409
      :                          @2976 [@dyn 351]
 42236: 82 17 18                 a0 = u64 [sp + 0x18]
 42239: 51 07 8d 00              jump @2986 if a0 == 0
      :                          @2977
 42243: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 42253: d3 86 09                 a2 = s1 ^ a1
 42256: e1 79 09                 a2 = a2 | ~a0
 42259: 51 09 77                 jump @2984 if a2 == 0
      :                          @2978
 42262: 82 12 10                 t0 = u64 [sp + 0x10]
 42265: d3 82 08                 a1 = t0 ^ a1
 42268: e1 78 08                 a1 = a1 | ~a0
 42271: 51 08 6b                 jump @2984 if a1 == 0
      :                          @2979
 42274: 82 18 20                 a1 = u64 [sp + 0x20]
 42277: 82 19 28                 a2 = u64 [sp + 0x28]
 42280: 82 1c                    a5 = u64 [sp]
 42282: ca c8 08                 a1 = a1 * a5
 42285: 82 1b 08                 a4 = u64 [sp + 0x8]
 42288: ca b9 09                 a2 = a2 * a4
 42291: c8 98 08                 a1 = a1 + a2
 42294: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 42304: d3 98 0a                 a3 = a1 ^ a2
 42307: e1 7a 0a                 a3 = a3 | ~a0
 42310: 51 0a 45                 jump @2985 if a3 == 0
      :                          @2980
 42313: ce 78 08                 a1 = a1 %s a0
 42316: c8 78 08                 a1 = a1 + a0
 42319: d3 89 09                 a2 = a2 ^ a1
 42322: e1 79 09                 a2 = a2 | ~a0
 42325: 51 09 36                 jump @2985 if a2 == 0
      :                          @2981
 42328: cc 76 09                 a2 = s1 /s a0
 42331: cc 72 0a                 a3 = t0 /s a0
 42334: ca ca 0a                 a3 = a3 * a5
 42337: ce 78 08                 a1 = a1 %s a0
 42340: ca b9 09                 a2 = a2 * a4
 42343: c9 a9 0b                 a4 = a2 - a3
 42346: 64 8a                    a3 = a1
 42348: 28 05                    jump @2983
      :                          @2982
 42350: 33 07                    a0 = 0
 42352: 01                       fallthrough
      :                          @2983
 42353: 7b 57                    u64 [s0] = a0
 42355: 7b 5a 08                 u64 [s0 + 0x8] = a3
 42358: 7b 5b 18                 u64 [s0 + 0x18] = a4
 42361: 49 15 10                 u64 [s0 + 16] = 0
 42364: 82 10 40                 ra = u64 [sp + 0x40]
 42367: 82 15 38                 s0 = u64 [sp + 0x38]
 42370: 82 16 30                 s1 = u64 [sp + 0x30]
 42373: 95 11 48                 sp = sp + 0x48
 42376: 32 00                    ret
      :                          @2984
 42378: 00                       trap
      :                          @2985
 42379: 00                       trap
      :                          @2986
 42380: 00                       trap
      :                          @2987
 42381: 64 82                    t0 = a1
 42383: 64 93                    t1 = a2
 42385: ca 88 0c                 a5 = a1 * a1
 42388: ca 99 08                 a1 = a2 * a2
 42391: c8 8c 0c                 a5 = a5 + a1
 42394: 51 0c 39                 jump @2991 if a5 == 0
      :                          @2988
 42397: 97 c8 01                 a1 = a5 << 0x1
 42400: 51 08 45                 jump @2993 if a1 == 0
      :                          @2989
 42403: ca a2 04                 t2 = t0 * a3
 42406: ca b3 09                 a2 = t1 * a4
 42409: c8 49 09                 a2 = a2 + t2
 42412: 97 99 01                 a2 = a2 << 0x1
 42415: c8 c9 09                 a2 = a2 + a5
 42418: cc 89 09                 a2 = a2 /s a1
 42421: ca 29 08                 a1 = a2 * t0
 42424: c9 8a 08                 a1 = a3 - a1
 42427: ca 39 09                 a2 = a2 * t1
 42430: c9 9b 09                 a2 = a4 - a2
 42433: ca 88 0a                 a3 = a1 * a1
 42436: ca 99 0b                 a4 = a2 * a2
 42439: c8 ba 04                 t2 = a3 + a4
 42442: 64 3b                    a4 = t1
 42444: 64 2a                    a3 = t0
 42446: ad c4 bf                 jump @2987 if t2 <s a5
      :                          @2990
 42449: 28 07                    jump @2992
      :                          @2991
 42451: 64 b9                    a2 = a4
 42453: 64 a8                    a1 = a3
 42455: 01                       fallthrough
      :                          @2992
 42456: 7b 72                    u64 [a0] = t0
 42458: 7b 73 08                 u64 [a0 + 0x8] = t1
 42461: 7b 78 10                 u64 [a0 + 0x10] = a1
 42464: 7b 79 18                 u64 [a0 + 0x18] = a2
 42467: 32 00                    ret
      :                          @2993
 42469: 00                       trap
      :                          @2994
 42470: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 42473: 7b 10 10                 u64 [sp + 0x10] = ra
 42476: 7b 15 08                 u64 [sp + 0x8] = s0
 42479: 7b 16                    u64 [sp] = s1
 42481: 51 08 34                 jump @2997 if a1 == 0
      :                          @2995
 42484: 64 85                    s0 = a1
 42486: 64 76                    s1 = a0
 42488: 33 08 01                 a1 = 0x1
 42491: 33 07                    a0 = 0
 42493: 64 59                    a2 = s0
 42495: 50 20 c0 02 c8 62 02     ra = 704, jump @13617
      :                          @2996 [@dyn 352]
 42502: ca 68 08                 a1 = a1 * s1
 42505: d6 67 07                 a0 = a0 mulhu s1
 42508: c8 78 08                 a1 = a1 + a0
 42511: d8 58 09                 a2 = a1 <u s0
 42514: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
 42517: db 98 07                 a0 = a1 if a2 != 0
 42520: 82 10 10                 ra = u64 [sp + 0x10]
 42523: 82 15 08                 s0 = u64 [sp + 0x8]
 42526: 82 16                    s1 = u64 [sp]
 42528: 95 11 18                 sp = sp + 0x18
 42531: 32 00                    ret
      :                          @2997
 42533: 00                       trap
      :                          @2998
 42534: 82 ab                    a4 = u64 [a3]
 42536: 95 bc 80 00              a5 = a4 + 0x80
 42540: ac bc 98 02              jump @3048 if a5 <u a4
      :                          @2999
 42544: 95 c9 08                 a2 = a5 + 0x8
 42547: d8 c9 05                 s0 = a2 <u a5
 42550: d8 92 09                 a2 = t0 <u a2
 42553: d4 59 09                 a2 = a2 | s0
 42556: 52 09 88 02              jump @3048 if a2 != 0
      :                          @3000
 42560: c9 c3 05                 s0 = t1 - a5
 42563: c8 25 05                 s0 = s0 + t0
 42566: 84 59 07                 a2 = s0 & 0x7
 42569: c8 9c 0c                 a5 = a5 + a2
 42572: 01                       fallthrough
      :                          @3001
 42573: 82 a8                    a1 = u64 [a3]
 42575: ab b8 d7                 jump @2998 if a1 != a4
      :                          @3002
 42578: 7b ac                    u64 [a3] = a5
 42580: 01                       fallthrough
      :                          @3003
 42581: c9 95 06                 s1 = s0 - a2
 42584: 82 19 10                 a2 = u64 [sp + 0x10]
 42587: 95 98 ff                 a1 = a2 + 0xffffffffffffffff
 42590: 8e 85                    s0 = a1 >u 0
 42592: 7b 65                    u64 [s1] = s0
 42594: cd 97 07                 a0 = a0 %u a2
 42597: 7b 67 08                 u64 [s1 + 0x8] = a0
 42600: ca 77 08                 a1 = a0 * a0
 42603: cd 98 08                 a1 = a1 %u a2
 42606: 7b 68 10                 u64 [s1 + 0x10] = a1
 42609: ca 87 08                 a1 = a0 * a1
 42612: cd 98 08                 a1 = a1 %u a2
 42615: 7b 68 18                 u64 [s1 + 0x18] = a1
 42618: ca 87 08                 a1 = a0 * a1
 42621: cd 98 08                 a1 = a1 %u a2
 42624: 7b 68 20                 u64 [s1 + 0x20] = a1
 42627: ca 87 08                 a1 = a0 * a1
 42630: cd 98 08                 a1 = a1 %u a2
 42633: 7b 68 28                 u64 [s1 + 0x28] = a1
 42636: ca 87 08                 a1 = a0 * a1
 42639: cd 98 08                 a1 = a1 %u a2
 42642: 7b 68 30                 u64 [s1 + 0x30] = a1
 42645: ca 87 08                 a1 = a0 * a1
 42648: cd 98 08                 a1 = a1 %u a2
 42651: 7b 68 38                 u64 [s1 + 0x38] = a1
 42654: ca 87 08                 a1 = a0 * a1
 42657: cd 98 08                 a1 = a1 %u a2
 42660: 7b 68 40                 u64 [s1 + 0x40] = a1
 42663: ca 87 08                 a1 = a0 * a1
 42666: cd 98 08                 a1 = a1 %u a2
 42669: 7b 68 48                 u64 [s1 + 0x48] = a1
 42672: ca 87 08                 a1 = a0 * a1
 42675: cd 98 08                 a1 = a1 %u a2
 42678: 7b 68 50                 u64 [s1 + 0x50] = a1
 42681: ca 87 08                 a1 = a0 * a1
 42684: cd 98 08                 a1 = a1 %u a2
 42687: 7b 68 58                 u64 [s1 + 0x58] = a1
 42690: ca 87 08                 a1 = a0 * a1
 42693: cd 98 08                 a1 = a1 %u a2
 42696: 7b 68 60                 u64 [s1 + 0x60] = a1
 42699: ca 87 08                 a1 = a0 * a1
 42702: cd 98 08                 a1 = a1 %u a2
 42705: 7b 68 68                 u64 [s1 + 0x68] = a1
 42708: ca 87 08                 a1 = a0 * a1
 42711: cd 98 08                 a1 = a1 %u a2
 42714: 7b 68 70                 u64 [s1 + 0x70] = a1
 42717: ca 87 07                 a0 = a0 * a1
 42720: cd 97 07                 a0 = a0 %u a2
 42723: 7b 67 78                 u64 [s1 + 0x78] = a0
 42726: 49 11 38                 u64 [sp + 56] = 0
 42729: 33 00 01                 ra = 0x1
 42732: 7b 10 40                 u64 [sp + 0x40] = ra
 42735: 49 11 48                 u64 [sp + 72] = 0
 42738: 51 04 66 01              jump @3032 if t2 == 0
      :                          @3004
 42742: 7b 16 08                 u64 [sp + 0x8] = s1
 42745: 33 08                    a1 = 0
 42747: 33 07 01                 a0 = 0x1
 42750: 28 2a                    jump @3008
      :                          @3005
 42752: 95 17 38                 a0 = sp + 0x38
 42755: 64 46                    s1 = t2
 42757: 50 20 c2 02 82 ac        ra = 706, jump @1593
      :                          @3006 [@dyn 353]
 42763: 64 64                    t2 = s1
 42765: 82 16 48                 s1 = u64 [sp + 0x48]
 42768: 82 17 40                 a0 = u64 [sp + 0x40]
 42771: 01                       fallthrough
      :                          @3007
 42772: 84 48 01                 a1 = t2 & 0x1
 42775: c8 67 09                 a2 = a0 + s1
 42778: 78 98                    u8 [a2] = a1
 42780: 95 68 01                 a1 = s1 + 0x1
 42783: 98 44 01                 t2 = t2 >> 0x1
 42786: 7b 18 48                 u64 [sp + 0x48] = a1
 42789: 51 04 0d                 jump @3010 if t2 == 0
      :                          @3008
 42792: 82 19 38                 a2 = u64 [sp + 0x38]
 42795: aa 98 d5                 jump @3005 if a1 == a2
      :                          @3009
 42798: 64 86                    s1 = a1
 42800: 28 e4                    jump @3007
      :                          @3010
 42802: 82 10 40                 ra = u64 [sp + 0x40]
 42805: 98 87 01                 a0 = a1 >> 0x1
 42808: 51 07 1d                 jump @3013 if a0 == 0
      :                          @3011
 42811: c8 60 09                 a2 = ra + s1
 42814: 64 0a                    a3 = ra
 42816: 01                       fallthrough
      :                          @3012
 42817: 7c 9b                    a4 = u8 [a2]
 42819: 7c ac                    a5 = u8 [a3]
 42821: 78 ab                    u8 [a3] = a4
 42823: 78 9c                    u8 [a2] = a5
 42825: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 42828: 95 aa 01                 a3 = a3 + 0x1
 42831: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 42834: 52 07 ef                 jump @3012 if a0 != 0
      :                          @3013
 42837: 82 19 10                 a2 = u64 [sp + 0x10]
 42840: 51 08 fc 00              jump @3031 if a1 == 0
      :                          @3014
 42844: 7b 16                    u64 [sp] = s1
 42846: 33 03                    t1 = 0
 42848: 33 06 ff                 s1 = 0xffffffffffffffff
 42851: 7b 10 20                 u64 [sp + 0x20] = ra
 42854: 28 0f                    jump @3016
      :                          @3015
 42856: ca 55 07                 a0 = s0 * s0
 42859: 95 33 01                 t1 = t1 + 0x1
 42862: cd 97 05                 s0 = a0 %u a2
 42865: ae 83 e3 00              jump @3031 if t1 >=u a1
      :                          @3016
 42869: c8 30 07                 a0 = ra + t1
 42872: 7c 77                    a0 = u8 [a0]
 42874: 51 07 ee                 jump @3015 if a0 == 0
      :                          @3017
 42877: c9 38 07                 a0 = a1 - t1
 42880: 33 09 04                 a2 = 0x4
 42883: e6 97 0c                 a5 = minu(a0, a2)
 42886: 7b 18 18                 u64 [sp + 0x18] = a1
 42889: e4 38 07                 a0 = maxu(a1, t1)
 42892: 7b 13 30                 u64 [sp + 0x30] = t1
 42895: c9 37 07                 a0 = a0 - t1
 42898: 33 02 01                 t0 = 0x1
 42901: 53 1c 02 62              jump @3024 if a5 <u 2
      :                          @3018
 42905: 82 19 30                 a2 = u64 [sp + 0x30]
 42908: 82 18 18                 a1 = u64 [sp + 0x18]
 42911: e6 89 09                 a2 = minu(a2, a1)
 42914: 82 1b                    a4 = u64 [sp]
 42916: c9 9b 0b                 a4 = a4 - a2
 42919: 33 08 02                 a1 = 0x2
 42922: 33 02 01                 t0 = 0x1
 42925: 7b 1c 28                 u64 [sp + 0x28] = a5
 42928: 01                       fallthrough
      :                          @3019
 42929: 64 8a                    a3 = a1
 42931: d8 c8 04                 t2 = a1 <u a5
 42934: c8 48 08                 a1 = a1 + t2
 42937: 33 09 01                 a2 = 0x1
 42940: e4 9a 09                 a2 = maxu(a3, a2)
 42943: 9a 90                    ra = -a2
 42945: 33 03 ff                 t1 = 0xffffffffffffffff
 42948: 01                       fallthrough
      :                          @3020
 42949: aa 3b fc 00              jump @3045 if a4 == t1
      :                          @3021
 42953: 95 33 01                 t1 = t1 + 0x1
 42956: c8 30 09                 a2 = ra + t1
 42959: ab 69 f6                 jump @3020 if a2 != s1
      :                          @3022
 42962: 82 19 30                 a2 = u64 [sp + 0x30]
 42965: c8 93 03                 t1 = t1 + a2
 42968: 82 10 20                 ra = u64 [sp + 0x20]
 42971: c8 03 03                 t1 = t1 + ra
 42974: 7c 39                    a2 = u8 [t1]
 42976: 84 99 01                 a2 = a2 & 0x1
 42979: 82 1c 28                 a5 = u64 [sp + 0x28]
 42982: 51 09 11                 jump @3024 if a2 == 0
      :                          @3023
 42985: d8 8c 09                 a2 = a5 <u a1
 42988: 85 99 01                 a2 = a2 ^ 0x1
 42991: d2 94 09                 a2 = t2 & a2
 42994: 64 a2                    t0 = a3
 42996: 52 09 bd                 jump @3019 if a2 != 0
      :                          @3024
 42999: 33 09 01                 a2 = 0x1
 43002: 64 28                    a1 = t0
 43004: e4 92 0b                 a4 = maxu(t0, a2)
 43007: 33 02                    t0 = 0
 43009: 82 13 30                 t1 = u64 [sp + 0x30]
 43012: 64 39                    a2 = t1
 43014: 64 ba                    a3 = a4
 43016: 01                       fallthrough
      :                          @3025
 43017: 51 07 b9 00              jump @3046 if a0 == 0
      :                          @3026
 43021: c8 90 0c                 a5 = ra + a2
 43024: 7c cc                    a5 = u8 [a5]
 43026: 97 22 01                 t0 = t0 << 0x1
 43029: d4 c2 02                 t0 = t0 | a5
 43032: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 43035: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 43038: 95 99 01                 a2 = a2 + 0x1
 43041: 52 0a e8                 jump @3025 if a3 != 0
      :                          @3027
 43044: 82 19 10                 a2 = u64 [sp + 0x10]
 43047: 01                       fallthrough
      :                          @3028
 43048: ca 55 07                 a0 = s0 * s0
 43051: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 43054: cd 97 05                 s0 = a0 %u a2
 43057: 52 0b f7                 jump @3028 if a4 != 0
      :                          @3029
 43060: 55 12 10 8f 00           jump @3047 if t0 >=u 16
      :                          @3030
 43065: 97 22 03                 t0 = t0 << 0x3
 43068: 82 17 08                 a0 = u64 [sp + 0x8]
 43071: c8 72 02                 t0 = t0 + a0
 43074: 82 27                    a0 = u64 [t0]
 43076: ca 57 07                 a0 = a0 * s0
 43079: c8 83 03                 t1 = t1 + a1
 43082: 82 18 18                 a1 = u64 [sp + 0x18]
 43085: cd 97 05                 s0 = a0 %u a2
 43088: ac 83 25 ff              jump @3016 if t1 <u a1
      :                          @3031
 43092: 82 16 08                 s1 = u64 [sp + 0x8]
 43095: 01                       fallthrough
      :                          @3032
 43096: 82 17 38                 a0 = u64 [sp + 0x38]
 43099: 51 07 35                 jump @3039 if a0 == 0
      :                          @3033
 43102: 56 37 00 00 01 32        jump @3039 if a0 >u 65536
      :                          @3034
 43108: 33 09 c0 22 03           a2 = 0x322c0
 43113: 95 98 00 00 01           a1 = a2 + 0x10000
 43118: 01                       fallthrough
      :                          @3035
 43119: 82 89                    a2 = u64 [a1]
 43121: c9 98 0a                 a3 = a1 - a2
 43124: ab 0a 1c                 jump @3039 if a3 != ra
      :                          @3036
 43127: c9 79 0a                 a3 = a2 - a0
 43130: 01                       fallthrough
      :                          @3037
 43131: 82 8b                    a4 = u64 [a1]
 43133: ab 9b f2                 jump @3035 if a4 != a2
      :                          @3038
 43136: 7b 8a                    u64 [a1] = a3
 43138: 33 0c                    a5 = 0
 43140: 33 07 c0 22 03           a0 = 0x322c0
 43145: 95 77 00 00 01           a0 = a0 + 0x10000
 43150: 28 0d                    jump @3040
      :                          @3039
 43152: 33 07 c0 22 03           a0 = 0x322c0
 43157: 95 77 00 00 01           a0 = a0 + 0x10000
 43162: 01                       fallthrough
      :                          @3040
 43163: 82 78                    a1 = u64 [a0]
 43165: c9 87 09                 a2 = a0 - a1
 43168: ab 69 11                 jump @3044 if a2 != s1
      :                          @3041
 43171: 95 89 80                 a2 = a1 + 0xffffffffffffff80
 43174: 01                       fallthrough
      :                          @3042
 43175: 82 7a                    a3 = u64 [a0]
 43177: ab 8a f2                 jump @3040 if a3 != a1
      :                          @3043
 43180: 7b 79                    u64 [a0] = a2
 43182: 33 0b                    a4 = 0
 43184: 01                       fallthrough
      :                          @3044
 43185: 64 57                    a0 = s0
 43187: 82 10 60                 ra = u64 [sp + 0x60]
 43190: 82 15 58                 s0 = u64 [sp + 0x58]
 43193: 82 16 50                 s1 = u64 [sp + 0x50]
 43196: 95 11 68                 sp = sp + 0x68
 43199: 32 00                    ret
      :                          @3045
 43201: 00                       trap
      :                          @3046
 43202: 00                       trap
      :                          @3047
 43203: 00                       trap
      :                          @3048
 43204: 00                       trap
      :                          @3049
 43205: 33 0a 02                 a3 = 0x2
 43208: ae a8 09                 jump @3052 if a1 >=u a3
      :                          @3050
 43211: 33 07                    a0 = 0
 43213: 32 00                    ret
      :                          @3051
 43215: 32 00                    ret
      :                          @3052
 43217: 64 79                    a2 = a0
 43219: 33 0c                    a5 = 0
 43221: 95 87 ff                 a0 = a1 + 0xffffffffffffffff
 43224: 97 8a 03                 a3 = a1 << 0x3
 43227: c8 9a 0a                 a3 = a3 + a2
 43230: 95 a4 f8                 t2 = a3 + 0xfffffffffffffff8
 43233: 33 02 01                 t0 = 0x1
 43236: 01                       fallthrough
      :                          @3053
 43237: c8 c8 09                 a2 = a1 + a5
 43240: aa 29 e3                 jump @3050 if a2 == t0
      :                          @3054
 43243: 82 ab f0                 a4 = u64 [a3 + 0xfffffffffffffff0]
 43246: 82 a3 f8                 t1 = u64 [a3 + 0xfffffffffffffff8]
 43249: 95 a9 f8                 a2 = a3 + 0xfffffffffffffff8
 43252: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 43255: 64 9a                    a3 = a2
 43257: ae 3b ec                 jump @3053 if a4 >=u t1
      :                          @3055
 43260: c8 c8 03                 t1 = a1 + a5
 43263: 9a c2                    t0 = -a5
 43265: 64 4c                    a5 = t2
 43267: 01                       fallthrough
      :                          @3056
 43268: 82 ca                    a3 = u64 [a5]
 43270: ac ab 0d                 jump @3059 if a4 <u a3
      :                          @3057
 43273: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 43276: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 43279: ac 87 f5                 jump @3056 if a0 <u a1
      :                          @3058
 43282: 00                       trap
      :                          @3059
 43283: 7b 9a f8                 u64 [a2 + 0xfffffffffffffff8] = a3
 43286: 7b cb                    u64 [a5] = a4
 43288: c9 38 08                 a1 = a1 - t1
 43291: 33 0a 02                 a3 = 0x2
 43294: 33 07 01                 a0 = 0x1
 43297: ac a8 ae                 jump @3051 if a1 <u a3
      :                          @3060
 43300: 98 28 01                 a1 = t0 >> 0x1
 43303: 01                       fallthrough
      :                          @3061
 43304: 82 4a                    a3 = u64 [t2]
 43306: 82 9b                    a4 = u64 [a2]
 43308: 7b 9a                    u64 [a2] = a3
 43310: 7b 4b                    u64 [t2] = a4
 43312: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 43315: 95 99 08                 a2 = a2 + 0x8
 43318: 95 44 f8                 t2 = t2 + 0xfffffffffffffff8
 43321: 52 08 ef                 jump @3061 if a1 != 0
      :                          @3062
 43324: 28 93                    jump @3051
      :                          @3063
 43326: c8 a8 02                 t0 = a1 + a3
 43329: 51 02 42                 jump @3069 if t0 == 0
      :                          @3064
 43332: 82 74 f8                 t2 = u64 [a0 + 0xfffffffffffffff8]
 43335: 95 7b f8                 a4 = a0 + 0xfffffffffffffff8
 43338: 95 a9 ff                 a2 = a3 + 0xffffffffffffffff
 43341: 95 a3 09                 t1 = a3 + 0x9
 43344: 64 9a                    a3 = a2
 43346: 64 b7                    a0 = a4
 43348: ae 34 ea                 jump @3063 if t2 >=u t1
      :                          @3065
 43351: c8 98 07                 a0 = a1 + a2
 43354: 95 7a 01                 a3 = a0 + 0x1
 43357: 95 4c 01                 a5 = t2 + 0x1
 43360: 7b bc                    u64 [a4] = a5
 43362: ae 8a 21                 jump @3069 if a3 >=u a1
      :                          @3066
 43365: 85 9a ff                 a3 = a2 ^ 0xffffffffffffffff
 43368: 95 bb 08                 a4 = a4 + 0x8
 43371: 95 4c 02                 a5 = t2 + 0x2
 43374: 01                       fallthrough
      :                          @3067
 43375: ae 87 18                 jump @3070 if a0 >=u a1
      :                          @3068
 43378: 7b bc                    u64 [a4] = a5
 43380: 95 cc 01                 a5 = a5 + 0x1
 43383: 95 bb 08                 a4 = a4 + 0x8
 43386: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 43389: 95 77 01                 a0 = a0 + 0x1
 43392: 52 0a ef                 jump @3067 if a3 != 0
      :                          @3069
 43395: 8e 27                    a0 = t0 >u 0
 43397: 32 00                    ret
      :                          @3070
 43399: 00                       trap
      :                          @3071
 43400: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 43403: 7b 10 30                 u64 [sp + 0x30] = ra
 43406: 7b 15 28                 u64 [sp + 0x28] = s0
 43409: 7b 16 20                 u64 [sp + 0x20] = s1
 43412: 7b 17 08                 u64 [sp + 0x8] = a0
 43415: 51 08 3e 01              jump @3100 if a1 == 0
      :                          @3072
 43419: 57 08 4e 01              jump @3105 if a1 <s 0
      :                          @3073
 43423: 85 87 ff                 a0 = a1 ^ 0xffffffffffffffff
 43426: 98 77 3f                 a0 = a0 >> 0x3f
 43429: 33 0a c0 22 03           a3 = 0x322c0
 43434: 33 09 00 00 01           a2 = 0x10000
 43439: c8 9a 0a                 a3 = a3 + a2
 43442: 01                       fallthrough
      :                          @3074
 43443: 82 a5                    s0 = u64 [a3]
 43445: c8 85 06                 s1 = s0 + a1
 43448: ac 56 30 01              jump @3104 if s1 <u s0
      :                          @3075
 43452: c8 76 0b                 a4 = s1 + a0
 43455: d8 6b 0c                 a5 = a4 <u s1
 43458: d8 b9 0b                 a4 = a2 <u a4
 43461: d4 cb 0b                 a4 = a4 | a5
 43464: 52 0b 20 01              jump @3104 if a4 != 0
      :                          @3076
 43468: 82 ab                    a4 = u64 [a3]
 43470: ab 5b e5                 jump @3074 if a4 != s0
      :                          @3077
 43473: 7b a6                    u64 [a3] = s1
 43475: 33 0c                    a5 = 0
 43477: 7b 18 18                 u64 [sp + 0x18] = a1
 43480: 33 08 c0 22 03           a1 = 0x322c0
 43485: 7b 18                    u64 [sp] = a1
 43487: 95 87 00 00 01           a0 = a1 + 0x10000
 43492: c9 67 07                 a0 = a0 - s1
 43495: 7b 17 10                 u64 [sp + 0x10] = a0
 43498: 33 08                    a1 = 0
 43500: 82 19 18                 a2 = u64 [sp + 0x18]
 43503: 50 20 c4 02 6a 61 02     ra = 708, jump @13675
      :                          @3078 [@dyn 354]
 43510: 33 07                    a0 = 0
 43512: 33 00                    ra = 0
 43514: 82 18                    a1 = u64 [sp]
 43516: 95 8a 00 00 01           a3 = a1 + 0x10000
 43521: 82 19 18                 a2 = u64 [sp + 0x18]
 43524: c9 5a 0a                 a3 = a3 - s0
 43527: 9a 98                    a1 = -a2
 43529: 7b 18                    u64 [sp] = a1
 43531: 9a 92 02                 t0 = 0x2 - a2
 43534: 33 04 01                 t2 = 0x1
 43537: 01                       fallthrough
      :                          @3079
 43538: 97 08 03                 a1 = ra << 0x3
 43541: 82 19 08                 a2 = u64 [sp + 0x8]
 43544: c8 98 08                 a1 = a1 + a2
 43547: 82 83                    t1 = u64 [a1]
 43549: 51 03 53                 jump @3089 if t1 == 0
      :                          @3080
 43552: 33 06                    s1 = 0
 43554: 82 15                    s0 = u64 [sp]
 43556: 64 38                    a1 = t1
 43558: 01                       fallthrough
      :                          @3081
 43559: 51 05 bf 00              jump @3102 if s0 == 0
      :                          @3082
 43563: c8 5a 09                 a2 = a3 + s0
 43566: 7c 99                    a2 = u8 [a2]
 43568: 88 99 01                 a2 = a2 <u 0x1
 43571: be 96 06                 i32 s1 = s1 + a2
 43574: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 43577: 95 55 01                 s0 = s0 + 0x1
 43580: 52 08 eb                 jump @3081 if a1 != 0
      :                          @3083
 43583: 85 05 ff                 s0 = ra ^ 0xffffffffffffffff
 43586: 82 18 18                 a1 = u64 [sp + 0x18]
 43589: c8 85 05                 s0 = s0 + a1
 43592: 51 05 36                 jump @3090 if s0 == 0
      :                          @3084
 43595: 64 58                    a1 = s0
 43597: aa 45 18                 jump @3087 if s0 == t2
      :                          @3085
 43600: 33 08 01                 a1 = 0x1
 43603: 33 0b 01                 a4 = 0x1
 43606: 01                       fallthrough
      :                          @3086
 43607: 95 b9 01                 a2 = a4 + 0x1
 43610: c8 92 0c                 a5 = t0 + a2
 43613: ca 8b 08                 a1 = a4 * a1
 43616: 64 9b                    a4 = a2
 43618: ab 4c f5                 jump @3086 if a5 != t2
      :                          @3087
 43621: ca 58 09                 a2 = a1 * s0
 43624: 82 18 18                 a1 = u64 [sp + 0x18]
 43627: ac 83 1c                 jump @3091 if t1 <u a1
      :                          @3088
 43630: 28 79                    jump @3103
      :                          @3089
 43632: 33 06                    s1 = 0
 43634: 85 05 ff                 s0 = ra ^ 0xffffffffffffffff
 43637: 82 18 18                 a1 = u64 [sp + 0x18]
 43640: c8 85 05                 s0 = s0 + a1
 43643: 52 05 d0                 jump @3084 if s0 != 0
      :                          @3090
 43646: 33 09 01                 a2 = 0x1
 43649: 82 18 18                 a1 = u64 [sp + 0x18]
 43652: ae 83 63                 jump @3103 if t1 >=u a1
      :                          @3091
 43655: 95 00 01                 ra = ra + 0x1
 43658: ca 69 09                 a2 = a2 * s1
 43661: c8 97 07                 a0 = a0 + a2
 43664: 82 19 10                 a2 = u64 [sp + 0x10]
 43667: c8 93 03                 t1 = t1 + a2
 43670: 78 34                    u8 [t1] = t2
 43672: 95 22 01                 t0 = t0 + 0x1
 43675: ab 80 77 ff              jump @3079 if ra != a1
      :                          @3092
 43679: 33 0a 00 00 ff           a3 = 0xffffffffffff0000
 43684: 95 89 ff ff fe           a2 = a1 + 0xfffffffffffeffff
 43689: ac a9 2f                 jump @3101 if a2 <u a3
      :                          @3093
 43692: 33 06 c0 22 03           s1 = 0x322c0
 43697: 95 66 00 00 01           s1 = s1 + 0x10000
 43702: 01                       fallthrough
      :                          @3094
 43703: 82 69                    a2 = u64 [s1]
 43705: c9 96 0a                 a3 = s1 - a2
 43708: 82 1b 10                 a4 = u64 [sp + 0x10]
 43711: ab ba 19                 jump @3101 if a3 != a4
      :                          @3095
 43714: c9 89 0a                 a3 = a2 - a1
 43717: 01                       fallthrough
      :                          @3096
 43718: 82 6b                    a4 = u64 [s1]
 43720: ab 9b ef                 jump @3094 if a4 != a2
      :                          @3097
 43723: 7b 6a                    u64 [s1] = a3
 43725: 33 0c                    a5 = 0
 43727: 01                       fallthrough
      :                          @3098
 43728: ab 9b e7                 jump @3094 if a4 != a2
      :                          @3099
 43731: 28 05                    jump @3101
      :                          @3100
 43733: 33 07                    a0 = 0
 43735: 01                       fallthrough
      :                          @3101
 43736: 82 10 30                 ra = u64 [sp + 0x30]
 43739: 82 15 28                 s0 = u64 [sp + 0x28]
 43742: 82 16 20                 s1 = u64 [sp + 0x20]
 43745: 95 11 38                 sp = sp + 0x38
 43748: 32 00                    ret
      :                          @3102
 43750: 00                       trap
      :                          @3103
 43751: 00                       trap
      :                          @3104
 43752: 00                       trap
      :                          @3105
 43753: 00                       trap
      :                          @3106
 43754: 82 ab                    a4 = u64 [a3]
 43756: 95 bc 28                 a5 = a4 + 0x28
 43759: ac bc 73 01              jump @3127 if a5 <u a4
      :                          @3107
 43763: 95 c9 08                 a2 = a5 + 0x8
 43766: d8 c9 06                 s1 = a2 <u a5
 43769: d8 92 09                 a2 = t0 <u a2
 43772: d4 69 09                 a2 = a2 | s1
 43775: 52 09 63 01              jump @3127 if a2 != 0
      :                          @3108
 43779: c9 c3 06                 s1 = t1 - a5
 43782: c8 26 06                 s1 = s1 + t0
 43785: 84 69 07                 a2 = s1 & 0x7
 43788: c8 9c 0c                 a5 = a5 + a2
 43791: 01                       fallthrough
      :                          @3109
 43792: 82 a5                    s0 = u64 [a3]
 43794: ab b5 d8                 jump @3106 if s0 != a4
      :                          @3110
 43797: 7b ac                    u64 [a3] = a5
 43799: c9 96 00                 ra = s1 - a2
 43802: 49 00                    u64 [ra + 0] = 0
 43804: 49 10 08 01              u64 [ra + 8] = 0x1
 43808: 49 10 10 02              u64 [ra + 16] = 0x2
 43812: 49 10 18 03              u64 [ra + 24] = 0x3
 43816: 49 10 20 04              u64 [ra + 32] = 0x4
 43820: 33 07 c0 22 03           a0 = 0x322c0
 43825: 33 03 c0 22 03           t1 = 0x322c0
 43830: 33 02 00 00 01           t0 = 0x10000
 43835: c8 23 0a                 a3 = t1 + t0
 43838: 01                       fallthrough
      :                          @3111
 43839: 82 ab                    a4 = u64 [a3]
 43841: 95 b6 28                 s1 = a4 + 0x28
 43844: ac b6 1e 01              jump @3127 if s1 <u a4
      :                          @3112
 43848: 95 6c 08                 a5 = s1 + 0x8
 43851: d8 6c 05                 s0 = a5 <u s1
 43854: d8 c2 0c                 a5 = t0 <u a5
 43857: d4 5c 0c                 a5 = a5 | s0
 43860: 52 0c 0e 01              jump @3127 if a5 != 0
      :                          @3113
 43864: c9 63 05                 s0 = t1 - s1
 43867: c8 25 05                 s0 = s0 + t0
 43870: 84 5c 07                 a5 = s0 & 0x7
 43873: c8 c6 06                 s1 = s1 + a5
 43876: 01                       fallthrough
      :                          @3114
 43877: 82 a9                    a2 = u64 [a3]
 43879: ab b9 d8                 jump @3111 if a2 != a4
      :                          @3115
 43882: 7b a6                    u64 [a3] = s1
 43884: 01                       fallthrough
      :                          @3116
 43885: 7b 14 08                 u64 [sp + 0x8] = t2
 43888: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 43898: d6 78 07                 a0 = a1 mulhu a0
 43901: 98 77 04                 a0 = a0 >> 0x4
 43904: 55 18 78 e3 00           jump @3128 if a1 >=u 120
      :                          @3117
 43909: c9 c5 05                 s0 = s0 - a5
 43912: 96 79 e8 00              a2 = a0 * 0xe8
 43916: c8 89 06                 s1 = a2 + a1
 43919: 97 79 03                 a2 = a0 << 0x3
 43922: c8 90 07                 a0 = ra + a2
 43925: 82 78                    a1 = u64 [a0]
 43927: 7b 18                    u64 [sp] = a1
 43929: 95 78 08                 a1 = a0 + 0x8
 43932: 9a 99 20                 a2 = 0x20 - a2
 43935: 7b 10 10                 u64 [sp + 0x10] = ra
 43938: 50 20 c6 02 3c 5e 02     ra = 710, jump @13639
      :                          @3118 [@dyn 355]
 43945: 82 17                    a0 = u64 [sp]
 43947: 7b 57                    u64 [s0] = a0
 43949: 84 67 ff 00              a0 = s1 & 0xff
 43953: 96 77 ab 00              a0 = a0 * 0xab
 43957: 98 77 0a                 a0 = a0 >> 0xa
 43960: 96 78 06                 a1 = a0 * 0x6
 43963: bf 86 06                 i32 s1 = s1 - a1
 43966: 97 79 03                 a2 = a0 << 0x3
 43969: 82 17 10                 a0 = u64 [sp + 0x10]
 43972: c8 97 07                 a0 = a0 + a2
 43975: 82 78                    a1 = u64 [a0]
 43977: 7b 18                    u64 [sp] = a1
 43979: 95 78 08                 a1 = a0 + 0x8
 43982: 9a 99 18                 a2 = 0x18 - a2
 43985: 50 20 c8 02 0d 5e 02     ra = 712, jump @13639
      :                          @3119 [@dyn 356]
 43992: 82 17                    a0 = u64 [sp]
 43994: 7b 57 08                 u64 [s0 + 0x8] = a0
 43997: 84 67 01                 a0 = s1 & 0x1
 44000: 7b 17                    u64 [sp] = a0
 44002: 97 66 02                 s1 = s1 << 0x2
 44005: 84 69 f8 03              a2 = s1 & 0x3f8
 44009: 82 17 10                 a0 = u64 [sp + 0x10]
 44012: c8 97 07                 a0 = a0 + a2
 44015: 82 76                    s1 = u64 [a0]
 44017: 95 78 08                 a1 = a0 + 0x8
 44020: 9a 99 10                 a2 = 0x10 - a2
 44023: 50 20 ca 02 e7 5d 02     ra = 714, jump @13639
      :                          @3120 [@dyn 357]
 44030: 7b 56 10                 u64 [s0 + 0x10] = s1
 44033: 82 19                    a2 = u64 [sp]
 44035: 97 99 03                 a2 = a2 << 0x3
 44038: 82 17 10                 a0 = u64 [sp + 0x10]
 44041: c8 97 07                 a0 = a0 + a2
 44044: 82 76                    s1 = u64 [a0]
 44046: 95 78 08                 a1 = a0 + 0x8
 44049: 85 99 08                 a2 = a2 ^ 0x8
 44052: 50 20 cc 02 ca 5d 02     ra = 716, jump @13639
      :                          @3121 [@dyn 358]
 44059: 82 1c 10                 a5 = u64 [sp + 0x10]
 44062: 7b 56 18                 u64 [s0 + 0x18] = s1
 44065: 82 c7                    a0 = u64 [a5]
 44067: 7b 57 20                 u64 [s0 + 0x20] = a0
 44070: 82 18 08                 a1 = u64 [sp + 0x8]
 44073: 49 08 05                 u64 [a1 + 0] = 0x5
 44076: 7b 85 08                 u64 [a1 + 0x8] = s0
 44079: 49 18 10 05              u64 [a1 + 16] = 0x5
 44083: 33 07 c0 22 03           a0 = 0x322c0
 44088: 95 77 00 00 01           a0 = a0 + 0x10000
 44093: 01                       fallthrough
      :                          @3122
 44094: 82 78                    a1 = u64 [a0]
 44096: c9 87 09                 a2 = a0 - a1
 44099: ab c9 11                 jump @3126 if a2 != a5
      :                          @3123
 44102: 95 89 d8                 a2 = a1 + 0xffffffffffffffd8
 44105: 01                       fallthrough
      :                          @3124
 44106: 82 7a                    a3 = u64 [a0]
 44108: ab 8a f2                 jump @3122 if a3 != a1
      :                          @3125
 44111: 7b 79                    u64 [a0] = a2
 44113: 33 0b                    a4 = 0
 44115: 01                       fallthrough
      :                          @3126
 44116: 82 10 28                 ra = u64 [sp + 0x28]
 44119: 82 15 20                 s0 = u64 [sp + 0x20]
 44122: 82 16 18                 s1 = u64 [sp + 0x18]
 44125: 95 11 30                 sp = sp + 0x30
 44128: 32 00                    ret
      :                          @3127
 44130: 00                       trap
      :                          @3128
 44131: 00                       trap
      :                          @3129
 44132: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 44135: 7b 10 18                 u64 [sp + 0x18] = ra
 44138: 7b 15 10                 u64 [sp + 0x10] = s0
 44141: 7b 16 08                 u64 [sp + 0x8] = s1
 44144: 7b 18                    u64 [sp] = a1
 44146: 33 04                    t2 = 0
 44148: 51 08 79                 jump @3142 if a1 == 0
      :                          @3130
 44151: 33 08                    a1 = 0
 44153: 33 00 0f                 ra = 0xf
 44156: 28 11                    jump @3133
      :                          @3131
 44158: c8 43 03                 t1 = t1 + t2
 44161: c9 23 04                 t2 = t1 - t0
 44164: 01                       fallthrough
      :                          @3132
 44165: 95 88 01                 a1 = a1 + 0x1
 44168: 82 19                    a2 = u64 [sp]
 44170: aa 98 63                 jump @3142 if a1 == a2
      :                          @3133
 44173: 97 89 03                 a2 = a1 << 0x3
 44176: 51 08 16                 jump @3136 if a1 == 0
      :                          @3134
 44179: c8 79 0a                 a3 = a2 + a0
 44182: 82 ac f8                 a5 = u64 [a3 + 0xfffffffffffffff8]
 44185: 95 c2 01                 t0 = a5 + 0x1
 44188: c8 79 09                 a2 = a2 + a0
 44191: 82 93                    t1 = u64 [a2]
 44193: ae 32 e4                 jump @3132 if t0 >=u t1
      :                          @3135
 44196: 28 0c                    jump @3137
      :                          @3136
 44198: 33 02                    t0 = 0
 44200: c8 79 09                 a2 = a2 + a0
 44203: 82 93                    t1 = u64 [a2]
 44205: 54 03 d8                 jump @3132 if t1 <=u 0
      :                          @3137
 44208: 85 8a ff                 a3 = a1 ^ 0xffffffffffffffff
 44211: 82 19                    a2 = u64 [sp]
 44213: c8 9a 0a                 a3 = a3 + a2
 44216: 51 0a c6                 jump @3131 if a3 == 0
      :                          @3138
 44219: 33 09 01                 a2 = 0x1
 44222: 33 05 01                 s0 = 0x1
 44225: 01                       fallthrough
      :                          @3139
 44226: d8 a5 06                 s1 = s0 <u a3
 44229: 85 6b 01                 a4 = s1 ^ 0x1
 44232: c8 52 0c                 a5 = t0 + s0
 44235: c8 56 06                 s1 = s1 + s0
 44238: c9 c0 0c                 a5 = ra - a5
 44241: ca 9c 09                 a2 = a5 * a2
 44244: d8 6a 0c                 a5 = a3 <u s1
 44247: d4 cb 0b                 a4 = a4 | a5
 44250: cb 59 09                 a2 = a2 /u s0
 44253: 64 65                    s0 = s1
 44255: 51 0b e3                 jump @3139 if a4 == 0
      :                          @3140
 44258: 95 22 01                 t0 = t0 + 0x1
 44261: c8 94 04                 t2 = t2 + a2
 44264: ab 32 d3                 jump @3138 if t0 != t1
      :                          @3141
 44267: 28 9a                    jump @3132
      :                          @3142
 44269: 64 47                    a0 = t2
 44271: 82 10 18                 ra = u64 [sp + 0x18]
 44274: 82 15 10                 s0 = u64 [sp + 0x10]
 44277: 82 16 08                 s1 = u64 [sp + 0x8]
 44280: 95 11 20                 sp = sp + 0x20
 44283: 32 00                    ret
      :                          @3143
 44285: 82 9a                    a3 = u64 [a2]
 44287: 95 ab 28                 a4 = a3 + 0x28
 44290: ac ab 5b 04              jump @3228 if a4 <u a3
      :                          @3144
 44294: 95 b7 08                 a0 = a4 + 0x8
 44297: d8 b7 0c                 a5 = a0 <u a4
 44300: d8 72 07                 a0 = t0 <u a0
 44303: d4 c7 07                 a0 = a0 | a5
 44306: 52 07 4b 04              jump @3228 if a0 != 0
      :                          @3145
 44310: c9 b5 07                 a0 = s0 - a4
 44313: c8 27 07                 a0 = a0 + t0
 44316: 84 7c 07                 a5 = a0 & 0x7
 44319: c8 cb 0b                 a4 = a4 + a5
 44322: 01                       fallthrough
      :                          @3146
 44323: 82 96                    s1 = u64 [a2]
 44325: ab a6 d8                 jump @3143 if s1 != a3
      :                          @3147
 44328: 7b 9b                    u64 [a2] = a4
 44330: c9 c7 02                 t0 = a0 - a5
 44333: 49 11 08 05              u64 [sp + 8] = 0x5
 44337: 7b 12 10                 u64 [sp + 0x10] = t0
 44340: 49 11 18                 u64 [sp + 24] = 0
 44343: 33 09 01                 a2 = 0x1
 44346: 33 08 0f                 a1 = 0xf
 44349: 33 0a 01                 a3 = 0x1
 44352: 01                       fallthrough
      :                          @3148
 44353: 88 a7 04                 a0 = a3 <u 0x4
 44356: c9 a8 0b                 a4 = a1 - a3
 44359: c8 7a 0c                 a5 = a3 + a0
 44362: ca 9b 09                 a2 = a4 * a2
 44365: 88 cb 05                 a4 = a5 <u 0x5
 44368: d2 b7 07                 a0 = a0 & a4
 44371: cb a9 09                 a2 = a2 /u a3
 44374: 64 ca                    a3 = a5
 44376: 52 07 e9                 jump @3148 if a0 != 0
      :                          @3149
 44379: ae 94 08                 jump @3151 if t2 >=u a2
      :                          @3150
 44382: 33 05                    s0 = 0
 44384: 28 57 02                 jump @3190
      :                          @3151
 44387: 33 08 01                 a1 = 0x1
 44390: 33 0a 0e                 a3 = 0xe
 44393: 33 0b 01                 a4 = 0x1
 44396: 01                       fallthrough
      :                          @3152
 44397: 88 b6 04                 s1 = a4 <u 0x4
 44400: c9 ba 0c                 a5 = a3 - a4
 44403: c8 6b 07                 a0 = a4 + s1
 44406: ca 8c 08                 a1 = a5 * a1
 44409: 88 7c 05                 a5 = a0 <u 0x5
 44412: d2 6c 0c                 a5 = a5 & s1
 44415: cb b8 08                 a1 = a1 /u a4
 44418: 64 7b                    a4 = a0
 44420: 52 0c e9                 jump @3152 if a5 != 0
      :                          @3153
 44423: c9 94 04                 t2 = t2 - a2
 44426: 33 05 01                 s0 = 0x1
 44429: ac 84 2a 02              jump @3190 if t2 <u a1
      :                          @3154
 44433: 33 09 01                 a2 = 0x1
 44436: 33 0a 0d                 a3 = 0xd
 44439: 33 0b 01                 a4 = 0x1
 44442: 01                       fallthrough
      :                          @3155
 44443: 88 b6 04                 s1 = a4 <u 0x4
 44446: c9 ba 0c                 a5 = a3 - a4
 44449: c8 6b 07                 a0 = a4 + s1
 44452: ca 9c 09                 a2 = a5 * a2
 44455: 88 7c 05                 a5 = a0 <u 0x5
 44458: d2 6c 0c                 a5 = a5 & s1
 44461: cb b9 09                 a2 = a2 /u a4
 44464: 64 7b                    a4 = a0
 44466: 52 0c e9                 jump @3155 if a5 != 0
      :                          @3156
 44469: c9 84 04                 t2 = t2 - a1
 44472: 33 05 02                 s0 = 0x2
 44475: ac 94 fc 01              jump @3190 if t2 <u a2
      :                          @3157
 44479: 33 08 01                 a1 = 0x1
 44482: 33 0a 0c                 a3 = 0xc
 44485: 33 0b 01                 a4 = 0x1
 44488: 01                       fallthrough
      :                          @3158
 44489: 88 b6 04                 s1 = a4 <u 0x4
 44492: c9 ba 0c                 a5 = a3 - a4
 44495: c8 6b 07                 a0 = a4 + s1
 44498: ca 8c 08                 a1 = a5 * a1
 44501: 88 7c 05                 a5 = a0 <u 0x5
 44504: d2 6c 0c                 a5 = a5 & s1
 44507: cb b8 08                 a1 = a1 /u a4
 44510: 64 7b                    a4 = a0
 44512: 52 0c e9                 jump @3158 if a5 != 0
      :                          @3159
 44515: c9 94 04                 t2 = t2 - a2
 44518: 33 05 03                 s0 = 0x3
 44521: ac 84 ce 01              jump @3190 if t2 <u a1
      :                          @3160
 44525: 33 09 01                 a2 = 0x1
 44528: 33 0a 0b                 a3 = 0xb
 44531: 33 0b 01                 a4 = 0x1
 44534: 01                       fallthrough
      :                          @3161
 44535: 88 b6 04                 s1 = a4 <u 0x4
 44538: c9 ba 0c                 a5 = a3 - a4
 44541: c8 6b 07                 a0 = a4 + s1
 44544: ca 9c 09                 a2 = a5 * a2
 44547: 88 7c 05                 a5 = a0 <u 0x5
 44550: d2 6c 0c                 a5 = a5 & s1
 44553: cb b9 09                 a2 = a2 /u a4
 44556: 64 7b                    a4 = a0
 44558: 52 0c e9                 jump @3161 if a5 != 0
      :                          @3162
 44561: c9 84 04                 t2 = t2 - a1
 44564: 33 05 04                 s0 = 0x4
 44567: ac 94 a0 01              jump @3190 if t2 <u a2
      :                          @3163
 44571: 33 08 01                 a1 = 0x1
 44574: 33 0a 0a                 a3 = 0xa
 44577: 33 0b 01                 a4 = 0x1
 44580: 01                       fallthrough
      :                          @3164
 44581: 88 b6 04                 s1 = a4 <u 0x4
 44584: c9 ba 0c                 a5 = a3 - a4
 44587: c8 6b 07                 a0 = a4 + s1
 44590: ca 8c 08                 a1 = a5 * a1
 44593: 88 7c 05                 a5 = a0 <u 0x5
 44596: d2 6c 0c                 a5 = a5 & s1
 44599: cb b8 08                 a1 = a1 /u a4
 44602: 64 7b                    a4 = a0
 44604: 52 0c e9                 jump @3164 if a5 != 0
      :                          @3165
 44607: c9 94 04                 t2 = t2 - a2
 44610: 33 05 05                 s0 = 0x5
 44613: ac 84 72 01              jump @3190 if t2 <u a1
      :                          @3166
 44617: 33 09 01                 a2 = 0x1
 44620: 33 0a 09                 a3 = 0x9
 44623: 33 0b 01                 a4 = 0x1
 44626: 01                       fallthrough
      :                          @3167
 44627: 88 b6 04                 s1 = a4 <u 0x4
 44630: c9 ba 0c                 a5 = a3 - a4
 44633: c8 6b 07                 a0 = a4 + s1
 44636: ca 9c 09                 a2 = a5 * a2
 44639: 88 7c 05                 a5 = a0 <u 0x5
 44642: d2 6c 0c                 a5 = a5 & s1
 44645: cb b9 09                 a2 = a2 /u a4
 44648: 64 7b                    a4 = a0
 44650: 52 0c e9                 jump @3167 if a5 != 0
      :                          @3168
 44653: c9 84 04                 t2 = t2 - a1
 44656: 33 05 06                 s0 = 0x6
 44659: ac 94 44 01              jump @3190 if t2 <u a2
      :                          @3169
 44663: 33 08 01                 a1 = 0x1
 44666: 33 0a 08                 a3 = 0x8
 44669: 33 0b 01                 a4 = 0x1
 44672: 01                       fallthrough
      :                          @3170
 44673: 88 b6 04                 s1 = a4 <u 0x4
 44676: c9 ba 0c                 a5 = a3 - a4
 44679: c8 6b 07                 a0 = a4 + s1
 44682: ca 8c 08                 a1 = a5 * a1
 44685: 88 7c 05                 a5 = a0 <u 0x5
 44688: d2 6c 0c                 a5 = a5 & s1
 44691: cb b8 08                 a1 = a1 /u a4
 44694: 64 7b                    a4 = a0
 44696: 52 0c e9                 jump @3170 if a5 != 0
      :                          @3171
 44699: c9 94 04                 t2 = t2 - a2
 44702: 33 05 07                 s0 = 0x7
 44705: ac 84 16 01              jump @3190 if t2 <u a1
      :                          @3172
 44709: 33 09 01                 a2 = 0x1
 44712: 33 0a 07                 a3 = 0x7
 44715: 33 0b 01                 a4 = 0x1
 44718: 01                       fallthrough
      :                          @3173
 44719: 88 b6 04                 s1 = a4 <u 0x4
 44722: c9 ba 0c                 a5 = a3 - a4
 44725: c8 6b 07                 a0 = a4 + s1
 44728: ca 9c 09                 a2 = a5 * a2
 44731: 88 7c 05                 a5 = a0 <u 0x5
 44734: d2 6c 0c                 a5 = a5 & s1
 44737: cb b9 09                 a2 = a2 /u a4
 44740: 64 7b                    a4 = a0
 44742: 52 0c e9                 jump @3173 if a5 != 0
      :                          @3174
 44745: c9 84 04                 t2 = t2 - a1
 44748: 33 05 08                 s0 = 0x8
 44751: ac 94 e8 00              jump @3190 if t2 <u a2
      :                          @3175
 44755: 33 08 01                 a1 = 0x1
 44758: 33 0a 06                 a3 = 0x6
 44761: 33 0b 01                 a4 = 0x1
 44764: 01                       fallthrough
      :                          @3176
 44765: 88 b6 04                 s1 = a4 <u 0x4
 44768: c9 ba 0c                 a5 = a3 - a4
 44771: c8 6b 07                 a0 = a4 + s1
 44774: ca 8c 08                 a1 = a5 * a1
 44777: 88 7c 05                 a5 = a0 <u 0x5
 44780: d2 6c 0c                 a5 = a5 & s1
 44783: cb b8 08                 a1 = a1 /u a4
 44786: 64 7b                    a4 = a0
 44788: 52 0c e9                 jump @3176 if a5 != 0
      :                          @3177
 44791: c9 94 04                 t2 = t2 - a2
 44794: 33 05 09                 s0 = 0x9
 44797: ac 84 ba 00              jump @3190 if t2 <u a1
      :                          @3178
 44801: 33 09 01                 a2 = 0x1
 44804: 33 0a 05                 a3 = 0x5
 44807: 33 0b 01                 a4 = 0x1
 44810: 01                       fallthrough
      :                          @3179
 44811: 88 b6 04                 s1 = a4 <u 0x4
 44814: c9 ba 0c                 a5 = a3 - a4
 44817: c8 6b 07                 a0 = a4 + s1
 44820: ca 9c 09                 a2 = a5 * a2
 44823: 88 7c 05                 a5 = a0 <u 0x5
 44826: d2 6c 0c                 a5 = a5 & s1
 44829: cb b9 09                 a2 = a2 /u a4
 44832: 64 7b                    a4 = a0
 44834: 52 0c e9                 jump @3179 if a5 != 0
      :                          @3180
 44837: c9 84 04                 t2 = t2 - a1
 44840: 33 05 0a                 s0 = 0xa
 44843: ac 94 8c 00              jump @3190 if t2 <u a2
      :                          @3181
 44847: 33 08 01                 a1 = 0x1
 44850: 33 0a 04                 a3 = 0x4
 44853: 33 0b 01                 a4 = 0x1
 44856: 01                       fallthrough
      :                          @3182
 44857: 88 b6 04                 s1 = a4 <u 0x4
 44860: c9 ba 0c                 a5 = a3 - a4
 44863: c8 6b 07                 a0 = a4 + s1
 44866: ca 8c 08                 a1 = a5 * a1
 44869: 88 7c 05                 a5 = a0 <u 0x5
 44872: d2 6c 0c                 a5 = a5 & s1
 44875: cb b8 08                 a1 = a1 /u a4
 44878: 64 7b                    a4 = a0
 44880: 52 0c e9                 jump @3182 if a5 != 0
      :                          @3183
 44883: c9 94 04                 t2 = t2 - a2
 44886: 33 05 0b                 s0 = 0xb
 44889: ac 84 5e                 jump @3190 if t2 <u a1
      :                          @3184
 44892: 33 09 01                 a2 = 0x1
 44895: 33 0a 03                 a3 = 0x3
 44898: 33 0b 01                 a4 = 0x1
 44901: 01                       fallthrough
      :                          @3185
 44902: 88 b6 04                 s1 = a4 <u 0x4
 44905: c9 ba 0c                 a5 = a3 - a4
 44908: c8 6b 07                 a0 = a4 + s1
 44911: ca 9c 09                 a2 = a5 * a2
 44914: 88 7c 05                 a5 = a0 <u 0x5
 44917: d2 6c 0c                 a5 = a5 & s1
 44920: cb b9 09                 a2 = a2 /u a4
 44923: 64 7b                    a4 = a0
 44925: 52 0c e9                 jump @3185 if a5 != 0
      :                          @3186
 44928: c9 84 04                 t2 = t2 - a1
 44931: 33 05 0c                 s0 = 0xc
 44934: ac 94 31                 jump @3190 if t2 <u a2
      :                          @3187
 44937: 33 08 01                 a1 = 0x1
 44940: 33 0a 02                 a3 = 0x2
 44943: 33 0b 01                 a4 = 0x1
 44946: 01                       fallthrough
      :                          @3188
 44947: 88 b6 04                 s1 = a4 <u 0x4
 44950: c9 ba 0c                 a5 = a3 - a4
 44953: c8 6b 07                 a0 = a4 + s1
 44956: ca 8c 08                 a1 = a5 * a1
 44959: 88 7c 05                 a5 = a0 <u 0x5
 44962: d2 6c 0c                 a5 = a5 & s1
 44965: cb b8 08                 a1 = a1 /u a4
 44968: 64 7b                    a4 = a0
 44970: 52 0c e9                 jump @3188 if a5 != 0
      :                          @3189
 44973: c9 94 04                 t2 = t2 - a2
 44976: 33 05 0d                 s0 = 0xd
 44979: ae 84 77 01              jump @3224 if t2 >=u a1
      :                          @3190
 44983: 7b 25                    u64 [t0] = s0
 44985: 33 08 01                 a1 = 0x1
 44988: 7b 18 18                 u64 [sp + 0x18] = a1
 44991: c8 85 00                 ra = s0 + a1
 44994: 33 0a 0f                 a3 = 0xf
 44997: 64 05                    s0 = ra
 44999: 33 0b 01                 a4 = 0x1
 45002: 33 0c 01                 a5 = 0x1
 45005: 28 09                    jump @3192
      :                          @3191
 45007: 33 0b 01                 a4 = 0x1
 45010: 33 0c 01                 a5 = 0x1
 45013: 01                       fallthrough
      :                          @3192
 45014: 88 c7 03                 a0 = a5 <u 0x3
 45017: c8 c5 09                 a2 = s0 + a5
 45020: c8 7c 06                 s1 = a5 + a0
 45023: c9 9a 09                 a2 = a3 - a2
 45026: ca b9 09                 a2 = a2 * a4
 45029: 88 6b 04                 a4 = s1 <u 0x4
 45032: d2 b7 07                 a0 = a0 & a4
 45035: cb c9 0b                 a4 = a2 /u a5
 45038: 64 6c                    a5 = s1
 45040: 52 07 e6                 jump @3192 if a0 != 0
      :                          @3193
 45043: ac b4 13                 jump @3197 if t2 <u a4
      :                          @3194
 45046: 95 55 01                 s0 = s0 + 0x1
 45049: c9 b4 04                 t2 = t2 - a4
 45052: ab a5 d3                 jump @3191 if s0 != a3
      :                          @3195
 45055: 54 10 0e 1d              jump @3198 if ra <=u 14
      :                          @3196
 45059: 28 08 01                 jump @3223
      :                          @3197
 45062: 97 87 03                 a0 = a1 << 0x3
 45065: c8 27 07                 a0 = a0 + t0
 45068: 7b 75                    u64 [a0] = s0
 45070: 95 88 01                 a1 = a1 + 0x1
 45073: 7b 18 18                 u64 [sp + 0x18] = a1
 45076: 95 50 01                 ra = s0 + 0x1
 45079: 56 10 0e f4 00           jump @3223 if ra >u 14
      :                          @3198
 45084: 33 0a 0f                 a3 = 0xf
 45087: 64 06                    s1 = ra
 45089: 33 0b 01                 a4 = 0x1
 45092: 33 0c 01                 a5 = 0x1
 45095: 28 09                    jump @3200
      :                          @3199
 45097: 33 0b 01                 a4 = 0x1
 45100: 33 0c 01                 a5 = 0x1
 45103: 01                       fallthrough
      :                          @3200
 45104: 88 c5 02                 s0 = a5 <u 0x2
 45107: c8 c6 09                 a2 = s1 + a5
 45110: c8 5c 07                 a0 = a5 + s0
 45113: c9 9a 09                 a2 = a3 - a2
 45116: ca b9 09                 a2 = a2 * a4
 45119: 88 7b 03                 a4 = a0 <u 0x3
 45122: d2 b5 05                 s0 = s0 & a4
 45125: cb c9 0b                 a4 = a2 /u a5
 45128: 64 7c                    a5 = a0
 45130: 52 05 e6                 jump @3200 if s0 != 0
      :                          @3201
 45133: ac b4 13                 jump @3205 if t2 <u a4
      :                          @3202
 45136: 95 66 01                 s1 = s1 + 0x1
 45139: c9 b4 04                 t2 = t2 - a4
 45142: ab a6 d3                 jump @3199 if s1 != a3
      :                          @3203
 45145: 54 10 0e 1d              jump @3206 if ra <=u 14
      :                          @3204
 45149: 28 ae 00                 jump @3223
      :                          @3205
 45152: 97 87 03                 a0 = a1 << 0x3
 45155: c8 27 07                 a0 = a0 + t0
 45158: 7b 76                    u64 [a0] = s1
 45160: 95 88 01                 a1 = a1 + 0x1
 45163: 7b 18 18                 u64 [sp + 0x18] = a1
 45166: 95 60 01                 ra = s1 + 0x1
 45169: 56 10 0e 9a 00           jump @3223 if ra >u 14
      :                          @3206
 45174: 9a 09 0e                 a2 = 0xe - ra
 45177: 33 0a ff                 a3 = 0xffffffffffffffff
 45180: 64 05                    s0 = ra
 45182: 01                       fallthrough
      :                          @3207
 45183: ac 94 17                 jump @3211 if t2 <u a2
      :                          @3208
 45186: c9 94 04                 t2 = t2 - a2
 45189: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 45192: 95 55 01                 s0 = s0 + 0x1
 45195: ab a9 f4                 jump @3207 if a2 != a3
      :                          @3209
 45198: 33 07 0e                 a0 = 0xe
 45201: ae 07 3b                 jump @3215 if a0 >=u ra
      :                          @3210
 45204: 28 77                    jump @3223
      :                          @3211
 45206: 52 18 05 1f              jump @3214 if a1 != 5
      :                          @3212
 45210: 95 17 08                 a0 = sp + 0x8
 45213: 33 08 05                 a1 = 0x5
 45216: 7b 13                    u64 [sp] = t1
 45218: 64 46                    s1 = t2
 45220: 50 20 ce 02 63 a2        ra = 718, jump @1581
      :                          @3213 [@dyn 359]
 45226: 64 64                    t2 = s1
 45228: 82 13                    t1 = u64 [sp]
 45230: 82 18 18                 a1 = u64 [sp + 0x18]
 45233: 82 12 10                 t0 = u64 [sp + 0x10]
 45236: 01                       fallthrough
      :                          @3214
 45237: 97 87 03                 a0 = a1 << 0x3
 45240: c8 27 07                 a0 = a0 + t0
 45243: 7b 75                    u64 [a0] = s0
 45245: 95 88 01                 a1 = a1 + 0x1
 45248: 7b 18 18                 u64 [sp + 0x18] = a1
 45251: 95 50 01                 ra = s0 + 0x1
 45254: 33 07 0e                 a0 = 0xe
 45257: ac 07 42                 jump @3223 if a0 <u ra
      :                          @3215
 45260: 33 09 0f                 a2 = 0xf
 45263: 01                       fallthrough
      :                          @3216
 45264: 51 04 0e                 jump @3219 if t2 == 0
      :                          @3217
 45267: 95 00 01                 ra = ra + 0x1
 45270: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
 45273: ab 90 f7                 jump @3216 if ra != a2
      :                          @3218
 45276: 28 2f                    jump @3223
      :                          @3219
 45278: 82 17 08                 a0 = u64 [sp + 0x8]
 45281: ab 78 1b                 jump @3222 if a1 != a0
      :                          @3220
 45284: 95 17 08                 a0 = sp + 0x8
 45287: 64 35                    s0 = t1
 45289: 64 06                    s1 = ra
 45291: 50 20 d0 02 1c a2        ra = 720, jump @1581
      :                          @3221 [@dyn 360]
 45297: 64 60                    ra = s1
 45299: 64 53                    t1 = s0
 45301: 82 18 18                 a1 = u64 [sp + 0x18]
 45304: 82 12 10                 t0 = u64 [sp + 0x10]
 45307: 01                       fallthrough
      :                          @3222
 45308: 97 87 03                 a0 = a1 << 0x3
 45311: c8 27 07                 a0 = a0 + t0
 45314: 7b 70                    u64 [a0] = ra
 45316: 95 88 01                 a1 = a1 + 0x1
 45319: 7b 18 18                 u64 [sp + 0x18] = a1
 45322: 01                       fallthrough
      :                          @3223
 45323: 82 17 18                 a0 = u64 [sp + 0x18]
 45326: 82 18 10                 a1 = u64 [sp + 0x10]
 45329: 82 19 08                 a2 = u64 [sp + 0x8]
 45332: 7b 37 10                 u64 [t1 + 0x10] = a0
 45335: 7b 38 08                 u64 [t1 + 0x8] = a1
 45338: 7b 39                    u64 [t1] = a2
 45340: 82 10 30                 ra = u64 [sp + 0x30]
 45343: 82 15 28                 s0 = u64 [sp + 0x28]
 45346: 82 16 20                 s1 = u64 [sp + 0x20]
 45349: 95 11 38                 sp = sp + 0x38
 45352: 32 00                    ret
      :                          @3224
 45354: 33 0a 01                 a3 = 0x1
 45357: 33 09 01                 a2 = 0x1
 45360: 33 0b 01                 a4 = 0x1
 45363: 01                       fallthrough
      :                          @3225
 45364: 88 b6 04                 s1 = a4 <u 0x4
 45367: c9 ba 0c                 a5 = a3 - a4
 45370: c8 6b 07                 a0 = a4 + s1
 45373: ca 9c 09                 a2 = a5 * a2
 45376: 88 7c 05                 a5 = a0 <u 0x5
 45379: d2 6c 0c                 a5 = a5 & s1
 45382: cb b9 09                 a2 = a2 /u a4
 45385: 64 7b                    a4 = a0
 45387: 52 0c e9                 jump @3225 if a5 != 0
      :                          @3226
 45390: c9 84 06                 s1 = t2 - a1
 45393: ae 96 0d                 jump @3229 if s1 >=u a2
      :                          @3227
 45396: 49 02 0e                 u64 [t0 + 0] = 0xe
 45399: 49 11 18 01              u64 [sp + 24] = 0x1
 45403: 28 b0                    jump @3223
      :                          @3228
 45405: 00                       trap
      :                          @3229
 45406: 33 00                    ra = 0
 45408: 33 08                    a1 = 0
 45410: c9 96 04                 t2 = s1 - a2
 45413: 33 0a 0f                 a3 = 0xf
 45416: 64 05                    s0 = ra
 45418: 33 0b 01                 a4 = 0x1
 45421: 33 0c 01                 a5 = 0x1
 45424: 28 66 fe                 jump @3192
      :                          @3230
 45427: 82 6a                    a3 = u64 [s1]
 45429: c8 9a 0b                 a4 = a3 + a2
 45432: ac ab de 00              jump @3251 if a4 <u a3
      :                          @3231
 45436: 95 bc 08                 a5 = a4 + 0x8
 45439: d8 bc 05                 s0 = a5 <u a4
 45442: d8 c2 0c                 a5 = t0 <u a5
 45445: d4 5c 0c                 a5 = a5 | s0
 45448: 52 0c ce 00              jump @3251 if a5 != 0
      :                          @3232
 45452: c9 b3 05                 s0 = t1 - a4
 45455: c8 25 05                 s0 = s0 + t0
 45458: 84 5c 07                 a5 = s0 & 0x7
 45461: c8 cb 0b                 a4 = a4 + a5
 45464: 01                       fallthrough
      :                          @3233
 45465: 82 68                    a1 = u64 [s1]
 45467: ab a8 d8                 jump @3230 if a1 != a3
      :                          @3234
 45470: 7b 6b                    u64 [s1] = a4
 45472: c9 c5 05                 s0 = s0 - a5
 45475: 64 57                    a0 = s0
 45477: 33 08                    a1 = 0
 45479: 7b 19 08                 u64 [sp + 0x8] = a2
 45482: 50 20 d2 02 af 59 02     ra = 722, jump @13675
      :                          @3235 [@dyn 361]
 45489: 64 50                    ra = s0
 45491: 33 07 01                 a0 = 0x1
 45494: 7b 57                    u64 [s0] = a0
 45496: 82 14 10                 t2 = u64 [sp + 0x10]
 45499: 51 04 67                 jump @3243 if t2 == 0
      :                          @3236
 45502: 33 07 01                 a0 = 0x1
 45505: 01                       fallthrough
      :                          @3237
 45506: ac 74 93 00              jump @3250 if t2 <u a0
      :                          @3238
 45510: d8 47 02                 t0 = a0 <u t2
 45513: c8 27 03                 t1 = a0 + t0
 45516: 97 7b 03                 a4 = a0 << 0x3
 45519: c8 0b 0b                 a4 = a4 + ra
 45522: 33 08 01                 a1 = 0x1
 45525: 33 0c 02                 a5 = 0x2
 45528: 33 0a 05                 a3 = 0x5
 45531: 01                       fallthrough
      :                          @3239
 45532: c9 87 08                 a1 = a0 - a1
 45535: ac 84 75                 jump @3249 if t2 <u a1
      :                          @3240
 45538: 97 88 03                 a1 = a1 << 0x3
 45541: c8 08 08                 a1 = a1 + ra
 45544: 82 88                    a1 = u64 [a1]
 45546: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
 45549: 82 b6                    s1 = u64 [a4]
 45551: 84 99 01                 a2 = a2 & 0x1
 45554: 9a 85                    s0 = -a1
 45556: db 98 05                 s0 = a1 if a2 != 0
 45559: c8 65 05                 s0 = s0 + s1
 45562: 7b b5                    u64 [a4] = s0
 45564: ca ca 08                 a1 = a3 * a5
 45567: 98 88 01                 a1 = a1 >> 0x1
 45570: 95 cc 01                 a5 = a5 + 0x1
 45573: 95 aa 03                 a3 = a3 + 0x3
 45576: ae 87 d4                 jump @3239 if a0 >=u a1
      :                          @3241
 45579: d8 34 07                 a0 = t2 <u t1
 45582: 85 77 01                 a0 = a0 ^ 0x1
 45585: d2 72 08                 a1 = t0 & a0
 45588: 64 37                    a0 = t1
 45590: 52 08 ac                 jump @3237 if a1 != 0
      :                          @3242
 45593: 97 46 03                 s1 = t2 << 0x3
 45596: c8 06 06                 s1 = s1 + ra
 45599: 82 67                    a0 = u64 [s1]
 45601: 01                       fallthrough
      :                          @3243
 45602: 33 08 c0 22 03           a1 = 0x322c0
 45607: 95 88 00 00 01           a1 = a1 + 0x10000
 45612: 82 16 08                 s1 = u64 [sp + 0x8]
 45615: 01                       fallthrough
      :                          @3244
 45616: 82 89                    a2 = u64 [a1]
 45618: c9 98 0a                 a3 = a1 - a2
 45621: ab 0a 11                 jump @3248 if a3 != ra
      :                          @3245
 45624: c9 69 0a                 a3 = a2 - s1
 45627: 01                       fallthrough
      :                          @3246
 45628: 82 8b                    a4 = u64 [a1]
 45630: ab 9b f2                 jump @3244 if a4 != a2
      :                          @3247
 45633: 7b 8a                    u64 [a1] = a3
 45635: 33 0c                    a5 = 0
 45637: 01                       fallthrough
      :                          @3248
 45638: 82 10 28                 ra = u64 [sp + 0x28]
 45641: 82 15 20                 s0 = u64 [sp + 0x20]
 45644: 82 16 18                 s1 = u64 [sp + 0x18]
 45647: 95 11 30                 sp = sp + 0x30
 45650: 32 00                    ret
      :                          @3249
 45652: 00                       trap
      :                          @3250
 45653: 00                       trap
      :                          @3251
 45654: 00                       trap
      :                          @3252 [@dyn 362]
 45655: 82 18 18                 a1 = u64 [sp + 0x18]
 45658: 51 08 2d                 jump @3259 if a1 == 0
      :                          @3253
 45661: 56 28 00 20 2a           jump @3259 if a1 >u 8192
      :                          @3254
 45666: 82 17 20                 a0 = u64 [sp + 0x20]
 45669: 97 88 03                 a1 = a1 << 0x3
 45672: 33 09 c0 22 03           a2 = 0x322c0
 45677: 95 99 00 00 01           a2 = a2 + 0x10000
 45682: 01                       fallthrough
      :                          @3255
 45683: 82 9a                    a3 = u64 [a2]
 45685: c9 a9 0b                 a4 = a2 - a3
 45688: ab 7b 0f                 jump @3259 if a4 != a0
      :                          @3256
 45691: c9 8a 0b                 a4 = a3 - a1
 45694: 01                       fallthrough
      :                          @3257
 45695: 82 9c                    a5 = u64 [a2]
 45697: ab ac f2                 jump @3255 if a5 != a3
      :                          @3258
 45700: 7b 9b                    u64 [a2] = a4
 45702: 01                       fallthrough
      :                          @3259
 45703: 82 17 10                 a0 = u64 [sp + 0x10]
 45706: 82 18 08                 a1 = u64 [sp + 0x8]
 45709: 82 19                    a2 = u64 [sp]
 45711: 7b 67 10                 u64 [s1 + 0x10] = a0
 45714: 7b 68 08                 u64 [s1 + 0x8] = a1
 45717: 7b 69                    u64 [s1] = a2
 45719: 82 10 40                 ra = u64 [sp + 0x40]
 45722: 82 15 38                 s0 = u64 [sp + 0x38]
 45725: 82 16 30                 s1 = u64 [sp + 0x30]
 45728: 95 11 48                 sp = sp + 0x48
 45731: 32 00                    ret
      :                          @3260
 45733: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 45736: 7b 10 20                 u64 [sp + 0x20] = ra
 45739: 7b 15 18                 u64 [sp + 0x18] = s0
 45742: 7b 16 10                 u64 [sp + 0x10] = s1
 45745: 64 a6                    s1 = a3
 45747: 51 07 62                 jump @3270 if a0 == 0
      :                          @3261
 45750: 7b 16                    u64 [sp] = s1
 45752: e6 78 05                 s0 = minu(a1, a0)
 45755: 51 05 01 01              jump @3283 if s0 == 0
      :                          @3262
 45759: 82 98 10                 a1 = u64 [a2 + 0x10]
 45762: c9 57 06                 s1 = a0 - s0
 45765: 7b 19 08                 u64 [sp + 0x8] = a2
 45768: 28 0c                    jump @3264
      :                          @3263
 45770: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 45773: 95 66 01                 s1 = s1 + 0x1
 45776: 51 05 ec 00              jump @3283 if s0 == 0
      :                          @3264
 45780: 82 97                    a0 = u64 [a2]
 45782: ab 78 12                 jump @3267 if a1 != a0
      :                          @3265
 45785: 64 97                    a0 = a2
 45787: 50 20 d6 02 2c a0        ra = 726, jump @1581
      :                          @3266 [@dyn 363]
 45793: 82 19 08                 a2 = u64 [sp + 0x8]
 45796: 82 98 10                 a1 = u64 [a2 + 0x10]
 45799: 01                       fallthrough
      :                          @3267
 45800: 82 97 08                 a0 = u64 [a2 + 0x8]
 45803: 97 8a 03                 a3 = a1 << 0x3
 45806: c8 a7 07                 a0 = a0 + a3
 45809: 7b 75                    u64 [a0] = s0
 45811: 95 88 01                 a1 = a1 + 0x1
 45814: 7b 98 10                 u64 [a2 + 0x10] = a1
 45817: 64 67                    a0 = s1
 45819: 64 58                    a1 = s0
 45821: 82 1a                    a3 = u64 [sp]
 45823: 50 20 d8 02 a6           ra = 728, jump @3260
      :                          @3268 [@dyn 364]
 45828: 82 19 08                 a2 = u64 [sp + 0x8]
 45831: 82 98 10                 a1 = u64 [a2 + 0x10]
 45834: 51 08 c0                 jump @3263 if a1 == 0
      :                          @3269
 45837: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 45840: 7b 98 10                 u64 [a2 + 0x10] = a1
 45843: 28 b7                    jump @3263
      :                          @3270
 45845: 82 9a 10                 a3 = u64 [a2 + 0x10]
 45848: 82 98 08                 a1 = u64 [a2 + 0x8]
 45851: 7b 1a 08                 u64 [sp + 0x8] = a3
 45854: 51 0a 60                 jump @3278 if a3 == 0
      :                          @3271
 45857: 7b 16                    u64 [sp] = s1
 45859: 98 a7 3c                 a0 = a3 >> 0x3c
 45862: 52 07 a5 00              jump @3285 if a0 != 0
      :                          @3272
 45866: 88 72 01                 t0 = a0 <u 0x1
 45869: 97 a9 03                 a2 = a3 << 0x3
 45872: 97 22 03                 t0 = t0 << 0x3
 45875: 33 04 c0 22 03           t2 = 0x322c0
 45880: 33 03 00 00 01           t1 = 0x10000
 45885: c8 34 00                 ra = t2 + t1
 45888: 01                       fallthrough
      :                          @3273
 45889: 82 06                    s1 = u64 [ra]
 45891: c8 96 05                 s0 = s1 + a2
 45894: ac 65 84 00              jump @3284 if s0 <u s1
      :                          @3274
 45898: c8 25 07                 a0 = s0 + t0
 45901: d8 57 0b                 a4 = a0 <u s0
 45904: d8 73 07                 a0 = t1 <u a0
 45907: d4 b7 07                 a0 = a0 | a4
 45910: 52 07 74                 jump @3284 if a0 != 0
      :                          @3275
 45913: c9 54 07                 a0 = t2 - s0
 45916: c8 37 07                 a0 = a0 + t1
 45919: 84 7b 07                 a4 = a0 & 0x7
 45922: c8 b5 05                 s0 = s0 + a4
 45925: 01                       fallthrough
      :                          @3276
 45926: 82 0a                    a3 = u64 [ra]
 45928: ab 6a d9                 jump @3273 if a3 != s1
      :                          @3277
 45931: 7b 05                    u64 [ra] = s0
 45933: 33 0c                    a5 = 0
 45935: c9 b7 05                 s0 = a0 - a4
 45938: 82 16                    s1 = u64 [sp]
 45940: 64 57                    a0 = s0
 45942: 33 00 da 02              ra = 0x2da
 45946: 28 b2 55 02              jump @13621
      :                          @3278
 45950: 33 09                    a2 = 0
 45952: 33 05 08                 s0 = 0x8
 45955: 33 07 08                 a0 = 0x8
 45958: 50 20 da 02 a6 55 02     ra = 730, jump @13621
      :                          @3279 [@dyn 365]
 45965: 82 68 10                 a1 = u64 [s1 + 0x10]
 45968: 82 67                    a0 = u64 [s1]
 45970: ab 78 0f                 jump @3282 if a1 != a0
      :                          @3280
 45973: 64 67                    a0 = s1
 45975: 50 20 dc 02 ee 9e        ra = 732, jump @1569
      :                          @3281 [@dyn 366]
 45981: 82 68 10                 a1 = u64 [s1 + 0x10]
 45984: 01                       fallthrough
      :                          @3282
 45985: 82 67 08                 a0 = u64 [s1 + 0x8]
 45988: 96 89 18                 a2 = a1 * 0x18
 45991: c8 97 07                 a0 = a0 + a2
 45994: 82 19 08                 a2 = u64 [sp + 0x8]
 45997: 7b 79                    u64 [a0] = a2
 45999: 7b 75 08                 u64 [a0 + 0x8] = s0
 46002: 7b 79 10                 u64 [a0 + 0x10] = a2
 46005: 95 88 01                 a1 = a1 + 0x1
 46008: 7b 68 10                 u64 [s1 + 0x10] = a1
 46011: 01                       fallthrough
      :                          @3283
 46012: 82 10 20                 ra = u64 [sp + 0x20]
 46015: 82 15 18                 s0 = u64 [sp + 0x18]
 46018: 82 16 10                 s1 = u64 [sp + 0x10]
 46021: 95 11 28                 sp = sp + 0x28
 46024: 32 00                    ret
      :                          @3284
 46026: 00                       trap
      :                          @3285
 46027: 00                       trap
      :                          @3286
 46028: 82 5a                    a3 = u64 [s0]
 46030: c8 9a 0b                 a4 = a3 + a2
 46033: ac ab 5a 01              jump @3315 if a4 <u a3
      :                          @3287
 46037: 95 bc 08                 a5 = a4 + 0x8
 46040: d8 bc 06                 s1 = a5 <u a4
 46043: d8 c2 0c                 a5 = t0 <u a5
 46046: d4 6c 0c                 a5 = a5 | s1
 46049: 52 0c 4a 01              jump @3315 if a5 != 0
      :                          @3288
 46053: c9 b3 06                 s1 = t1 - a4
 46056: c8 26 06                 s1 = s1 + t0
 46059: 84 6c 07                 a5 = s1 & 0x7
 46062: c8 cb 0b                 a4 = a4 + a5
 46065: 01                       fallthrough
      :                          @3289
 46066: 82 58                    a1 = u64 [s0]
 46068: ab a8 d8                 jump @3286 if a1 != a3
      :                          @3290
 46071: 7b 5b                    u64 [s0] = a4
 46073: c9 c6 06                 s1 = s1 - a5
 46076: 64 67                    a0 = s1
 46078: 33 08                    a1 = 0
 46080: 7b 19 08                 u64 [sp + 0x8] = a2
 46083: 50 20 de 02 56 57 02     ra = 734, jump @13675
      :                          @3291 [@dyn 367]
 46090: 33 07 01                 a0 = 0x1
 46093: 7b 67                    u64 [s1] = a0
 46095: 82 15 10                 s0 = u64 [sp + 0x10]
 46098: 51 05 dd 00              jump @3307 if s0 == 0
      :                          @3292
 46102: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 46105: ac 85 10 01              jump @3313 if s0 <u a1
      :                          @3293
 46109: ac 75 0d 01              jump @3314 if s0 <u a0
      :                          @3294
 46113: 97 88 03                 a1 = a1 << 0x3
 46116: c8 68 08                 a1 = a1 + s1
 46119: 82 88                    a1 = u64 [a1]
 46121: 97 79 03                 a2 = a0 << 0x3
 46124: c8 69 09                 a2 = a2 + s1
 46127: 82 9a                    a3 = u64 [a2]
 46129: d8 57 0b                 a4 = a0 <u s0
 46132: c8 b7 07                 a0 = a0 + a4
 46135: c8 a8 08                 a1 = a1 + a3
 46138: d8 75 0a                 a3 = s0 <u a0
 46141: 85 aa 01                 a3 = a3 ^ 0x1
 46144: d2 ba 0a                 a3 = a3 & a4
 46147: 7b 98                    u64 [a2] = a1
 46149: 52 0a d1                 jump @3292 if a3 != 0
      :                          @3295
 46152: 33 07 05                 a0 = 0x5
 46155: ac 75 a4 00              jump @3307 if s0 <u a0
      :                          @3296
 46159: 95 78 fb                 a1 = a0 + 0xfffffffffffffffb
 46162: ac 85 d7 00              jump @3313 if s0 <u a1
      :                          @3297
 46166: ac 75 d4 00              jump @3314 if s0 <u a0
      :                          @3298
 46170: 97 88 03                 a1 = a1 << 0x3
 46173: c8 68 08                 a1 = a1 + s1
 46176: 82 88                    a1 = u64 [a1]
 46178: 97 79 03                 a2 = a0 << 0x3
 46181: c8 69 09                 a2 = a2 + s1
 46184: 82 9a                    a3 = u64 [a2]
 46186: d8 57 0b                 a4 = a0 <u s0
 46189: c8 b7 07                 a0 = a0 + a4
 46192: c8 a8 08                 a1 = a1 + a3
 46195: d8 75 0a                 a3 = s0 <u a0
 46198: 85 aa 01                 a3 = a3 ^ 0x1
 46201: d2 ba 0a                 a3 = a3 & a4
 46204: 7b 98                    u64 [a2] = a1
 46206: 52 0a d1                 jump @3296 if a3 != 0
      :                          @3299
 46209: 33 07 0a                 a0 = 0xa
 46212: ac 75 6b                 jump @3307 if s0 <u a0
      :                          @3300
 46215: 95 78 f6                 a1 = a0 + 0xfffffffffffffff6
 46218: ac 85 9f 00              jump @3313 if s0 <u a1
      :                          @3301
 46222: ac 75 9c 00              jump @3314 if s0 <u a0
      :                          @3302
 46226: 97 88 03                 a1 = a1 << 0x3
 46229: c8 68 08                 a1 = a1 + s1
 46232: 82 88                    a1 = u64 [a1]
 46234: 97 79 03                 a2 = a0 << 0x3
 46237: c8 69 09                 a2 = a2 + s1
 46240: 82 9a                    a3 = u64 [a2]
 46242: d8 57 0b                 a4 = a0 <u s0
 46245: c8 b7 07                 a0 = a0 + a4
 46248: c8 a8 08                 a1 = a1 + a3
 46251: d8 75 0a                 a3 = s0 <u a0
 46254: 85 aa 01                 a3 = a3 ^ 0x1
 46257: d2 ba 0a                 a3 = a3 & a4
 46260: 7b 98                    u64 [a2] = a1
 46262: 52 0a d1                 jump @3300 if a3 != 0
      :                          @3303
 46265: 33 07 19                 a0 = 0x19
 46268: ac 75 33                 jump @3307 if s0 <u a0
      :                          @3304
 46271: 95 78 e7                 a1 = a0 + 0xffffffffffffffe7
 46274: ac 85 67                 jump @3313 if s0 <u a1
      :                          @3305
 46277: ac 75 65                 jump @3314 if s0 <u a0
      :                          @3306
 46280: 97 88 03                 a1 = a1 << 0x3
 46283: c8 68 08                 a1 = a1 + s1
 46286: 82 88                    a1 = u64 [a1]
 46288: 97 79 03                 a2 = a0 << 0x3
 46291: c8 69 09                 a2 = a2 + s1
 46294: 82 9a                    a3 = u64 [a2]
 46296: d8 57 0b                 a4 = a0 <u s0
 46299: c8 b7 07                 a0 = a0 + a4
 46302: c8 a8 08                 a1 = a1 + a3
 46305: d8 75 0a                 a3 = s0 <u a0
 46308: 85 aa 01                 a3 = a3 ^ 0x1
 46311: d2 ba 0a                 a3 = a3 & a4
 46314: 7b 98                    u64 [a2] = a1
 46316: 52 0a d3                 jump @3304 if a3 != 0
      :                          @3307
 46319: 97 55 03                 s0 = s0 << 0x3
 46322: c8 65 05                 s0 = s0 + s1
 46325: 82 57                    a0 = u64 [s0]
 46327: 33 08 c0 22 03           a1 = 0x322c0
 46332: 95 88 00 00 01           a1 = a1 + 0x10000
 46337: 82 15 08                 s0 = u64 [sp + 0x8]
 46340: 01                       fallthrough
      :                          @3308
 46341: 82 89                    a2 = u64 [a1]
 46343: c9 98 0a                 a3 = a1 - a2
 46346: ab 6a 11                 jump @3312 if a3 != s1
      :                          @3309
 46349: c9 59 0a                 a3 = a2 - s0
 46352: 01                       fallthrough
      :                          @3310
 46353: 82 8b                    a4 = u64 [a1]
 46355: ab 9b f2                 jump @3308 if a4 != a2
      :                          @3311
 46358: 7b 8a                    u64 [a1] = a3
 46360: 33 0c                    a5 = 0
 46362: 01                       fallthrough
      :                          @3312
 46363: 82 10 28                 ra = u64 [sp + 0x28]
 46366: 82 15 20                 s0 = u64 [sp + 0x20]
 46369: 82 16 18                 s1 = u64 [sp + 0x18]
 46372: 95 11 30                 sp = sp + 0x30
 46375: 32 00                    ret
      :                          @3313
 46377: 00                       trap
      :                          @3314
 46378: 00                       trap
      :                          @3315
 46379: 00                       trap
      :                          @3316
 46380: 82 0b                    a4 = u64 [ra]
 46382: c8 7b 09                 a2 = a4 + a0
 46385: ac b9 c8 01              jump @3362 if a2 <u a4
      :                          @3317
 46389: 95 9a 08                 a3 = a2 + 0x8
 46392: d8 9a 05                 s0 = a3 <u a2
 46395: d8 a2 0a                 a3 = t0 <u a3
 46398: d4 5a 0a                 a3 = a3 | s0
 46401: 52 0a b8 01              jump @3362 if a3 != 0
      :                          @3318
 46405: c9 94 0a                 a3 = t2 - a2
 46408: c8 2a 0a                 a3 = a3 + t0
 46411: 84 a5 07                 s0 = a3 & 0x7
 46414: c8 59 09                 a2 = a2 + s0
 46417: 01                       fallthrough
      :                          @3319
 46418: 82 06                    s1 = u64 [ra]
 46420: ab b6 d8                 jump @3316 if s1 != a4
      :                          @3320
 46423: 7b 09                    u64 [ra] = a2
 46425: 01                       fallthrough
      :                          @3321
 46426: c9 5a 0c                 a5 = a3 - s0
 46429: 51 03 b6 00              jump @3338 if t1 == 0
      :                          @3322
 46433: 14 0a ff ff ff ff ff ff ff 7f a3 = 0x7fffffffffffffff
 46443: 64 3b                    a4 = t1
 46445: 64 c9                    a2 = a5
 46447: 01                       fallthrough
      :                          @3323
 46448: 7b 9a                    u64 [a2] = a3
 46450: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 46453: 95 99 08                 a2 = a2 + 0x8
 46456: 52 0b f8                 jump @3323 if a4 != 0
      :                          @3324
 46459: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 46469: 7b 92                    u64 [a2] = t0
 46471: 49 0c                    u64 [a5 + 0] = 0
 46473: 33 0a 01                 a3 = 0x1
 46476: 28 14                    jump @3326
      :                          @3325
 46478: d8 3a 09                 a2 = a3 <u t1
 46481: c8 9a 0a                 a3 = a3 + a2
 46484: d8 a3 0b                 a4 = t1 <u a3
 46487: 85 bb 01                 a4 = a4 ^ 0x1
 46490: d2 b9 09                 a2 = a2 & a4
 46493: 51 09 2a                 jump @3330 if a2 == 0
      :                          @3326
 46496: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
 46499: ac b3 55 01              jump @3361 if t1 <u a4
      :                          @3327
 46503: 97 bb 03                 a4 = a4 << 0x3
 46506: c8 cb 0b                 a4 = a4 + a5
 46509: 82 b9                    a2 = u64 [a4]
 46511: aa 29 df                 jump @3325 if a2 == t0
      :                          @3328
 46514: ac a3 60                 jump @3337 if t1 <u a3
      :                          @3329
 46517: 97 ab 03                 a4 = a3 << 0x3
 46520: c8 cb 0b                 a4 = a4 + a5
 46523: 82 b6                    s1 = u64 [a4]
 46525: 95 99 01                 a2 = a2 + 0x1
 46528: e5 96 09                 a2 = mins(s1, a2)
 46531: 7b b9                    u64 [a4] = a2
 46533: 28 c9                    jump @3325
      :                          @3330
 46535: 33 0a 05                 a3 = 0x5
 46538: ac a3 a0 00              jump @3347 if t1 <u a3
      :                          @3331
 46542: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 46552: 28 25                    jump @3334
      :                          @3332
 46554: 97 ab 03                 a4 = a3 << 0x3
 46557: c8 cb 0b                 a4 = a4 + a5
 46560: 82 b6                    s1 = u64 [a4]
 46562: 95 99 01                 a2 = a2 + 0x1
 46565: e5 96 09                 a2 = mins(s1, a2)
 46568: 7b b9                    u64 [a4] = a2
 46570: 01                       fallthrough
      :                          @3333
 46571: d8 3a 09                 a2 = a3 <u t1
 46574: c8 9a 0a                 a3 = a3 + a2
 46577: d8 a3 0b                 a4 = t1 <u a3
 46580: 85 bb 01                 a4 = a4 ^ 0x1
 46583: d2 b9 09                 a2 = a2 & a4
 46586: 51 09 1f                 jump @3339 if a2 == 0
      :                          @3334
 46589: 95 ab fb                 a4 = a3 + 0xfffffffffffffffb
 46592: ac b3 f8 00              jump @3361 if t1 <u a4
      :                          @3335
 46596: 97 bb 03                 a4 = a4 << 0x3
 46599: c8 cb 0b                 a4 = a4 + a5
 46602: 82 b9                    a2 = u64 [a4]
 46604: aa 29 df                 jump @3333 if a2 == t0
      :                          @3336
 46607: ae a3 cb                 jump @3332 if t1 >=u a3
      :                          @3337
 46610: 00                       trap
      :                          @3338
 46611: 49 0c                    u64 [a5 + 0] = 0
 46613: 64 c8                    a1 = a5
 46615: 28 5a                    jump @3348
      :                          @3339
 46617: 33 0a 0a                 a3 = 0xa
 46620: ac a3 4e                 jump @3347 if t1 <u a3
      :                          @3340
 46623: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 46633: 28 14                    jump @3342
      :                          @3341
 46635: d8 3a 09                 a2 = a3 <u t1
 46638: c8 9a 0a                 a3 = a3 + a2
 46641: d8 a3 0b                 a4 = t1 <u a3
 46644: 85 bb 01                 a4 = a4 ^ 0x1
 46647: d2 b9 09                 a2 = a2 & a4
 46650: 51 09 2a                 jump @3346 if a2 == 0
      :                          @3342
 46653: 95 ab f6                 a4 = a3 + 0xfffffffffffffff6
 46656: ac b3 b8 00              jump @3361 if t1 <u a4
      :                          @3343
 46660: 97 bb 03                 a4 = a4 << 0x3
 46663: c8 cb 0b                 a4 = a4 + a5
 46666: 82 b9                    a2 = u64 [a4]
 46668: aa 29 df                 jump @3341 if a2 == t0
      :                          @3344
 46671: ac a3 c3                 jump @3337 if t1 <u a3
      :                          @3345
 46674: 97 ab 03                 a4 = a3 << 0x3
 46677: c8 cb 0b                 a4 = a4 + a5
 46680: 82 b6                    s1 = u64 [a4]
 46682: 95 99 01                 a2 = a2 + 0x1
 46685: e5 96 09                 a2 = mins(s1, a2)
 46688: 7b b9                    u64 [a4] = a2
 46690: 28 c9                    jump @3341
      :                          @3346
 46692: 33 0a 19                 a3 = 0x19
 46695: ae a3 4b                 jump @3354 if t1 >=u a3
      :                          @3347
 46698: 97 38 03                 a1 = t1 << 0x3
 46701: c8 c8 08                 a1 = a1 + a5
 46704: 01                       fallthrough
      :                          @3348
 46705: 82 88                    a1 = u64 [a1]
 46707: 33 09 c0 22 03           a2 = 0x322c0
 46712: 95 99 00 00 01           a2 = a2 + 0x10000
 46717: 01                       fallthrough
      :                          @3349
 46718: 82 9a                    a3 = u64 [a2]
 46720: c9 a9 0b                 a4 = a2 - a3
 46723: ab cb 0f                 jump @3353 if a4 != a5
      :                          @3350
 46726: c9 7a 0b                 a4 = a3 - a0
 46729: 01                       fallthrough
      :                          @3351
 46730: 82 96                    s1 = u64 [a2]
 46732: ab a6 f2                 jump @3349 if s1 != a3
      :                          @3352
 46735: 7b 9b                    u64 [a2] = a4
 46737: 01                       fallthrough
      :                          @3353
 46738: 33 07 ff                 a0 = 0xffffffffffffffff
 46741: 14 09 ff ff ff ff ff ff ff 7f a2 = 0x7fffffffffffffff
 46751: d3 89 09                 a2 = a2 ^ a1
 46754: db 98 07                 a0 = a1 if a2 != 0
 46757: 82 10 10                 ra = u64 [sp + 0x10]
 46760: 82 15 08                 s0 = u64 [sp + 0x8]
 46763: 82 16                    s1 = u64 [sp]
 46765: 95 11 18                 sp = sp + 0x18
 46768: 32 00                    ret
      :                          @3354
 46770: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 46780: 28 25                    jump @3357
      :                          @3355
 46782: 97 ab 03                 a4 = a3 << 0x3
 46785: c8 cb 0b                 a4 = a4 + a5
 46788: 82 b6                    s1 = u64 [a4]
 46790: 95 99 01                 a2 = a2 + 0x1
 46793: e5 96 09                 a2 = mins(s1, a2)
 46796: 7b b9                    u64 [a4] = a2
 46798: 01                       fallthrough
      :                          @3356
 46799: d8 3a 09                 a2 = a3 <u t1
 46802: c8 9a 0a                 a3 = a3 + a2
 46805: d8 a3 0b                 a4 = t1 <u a3
 46808: 85 bb 01                 a4 = a4 ^ 0x1
 46811: d2 b9 09                 a2 = a2 & a4
 46814: 51 09 8c                 jump @3347 if a2 == 0
      :                          @3357
 46817: 95 ab e7                 a4 = a3 + 0xffffffffffffffe7
 46820: ac b3 14                 jump @3361 if t1 <u a4
      :                          @3358
 46823: 97 bb 03                 a4 = a4 << 0x3
 46826: c8 cb 0b                 a4 = a4 + a5
 46829: 82 b9                    a2 = u64 [a4]
 46831: aa 29 e0                 jump @3356 if a2 == t0
      :                          @3359
 46834: ae a3 cc                 jump @3355 if t1 >=u a3
      :                          @3360
 46837: 28 1d ff                 jump @3337
      :                          @3361
 46840: 00                       trap
      :                          @3362
 46841: 00                       trap
      :                          @3363
 46842: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 46845: 7b 10 48                 u64 [sp + 0x48] = ra
 46848: 7b 15 40                 u64 [sp + 0x40] = s0
 46851: 7b 16 38                 u64 [sp + 0x38] = s1
 46854: 7b 19                    u64 [sp] = a2
 46856: 7b 17 10                 u64 [sp + 0x10] = a0
 46859: 95 b0 01                 ra = a4 + 0x1
 46862: 97 07 03                 a0 = ra << 0x3
 46865: 7b 17 20                 u64 [sp + 0x20] = a0
 46868: 7b 1b 28                 u64 [sp + 0x28] = a4
 46871: 7b 1a 08                 u64 [sp + 0x8] = a3
 46874: 7b 18 18                 u64 [sp + 0x18] = a1
 46877: 52 00 0d                 jump @3366 if ra != 0
      :                          @3364
 46880: 33 07 08                 a0 = 0x8
 46883: 7b 17 30                 u64 [sp + 0x30] = a0
 46886: 52 08 72                 jump @3375 if a1 != 0
      :                          @3365
 46889: 00                       trap
      :                          @3366
 46890: 98 07 3c                 a0 = ra >> 0x3c
 46893: 52 07 33 01              jump @3398 if a0 != 0
      :                          @3367
 46897: 88 72 01                 t0 = a0 <u 0x1
 46900: 97 22 03                 t0 = t0 << 0x3
 46903: 33 04 c0 22 03           t2 = 0x322c0
 46908: 33 03 00 00 01           t1 = 0x10000
 46913: c8 34 0a                 a3 = t2 + t1
 46916: 01                       fallthrough
      :                          @3368
 46917: 82 ab                    a4 = u64 [a3]
 46919: 82 1c 20                 a5 = u64 [sp + 0x20]
 46922: c8 bc 0c                 a5 = a5 + a4
 46925: ac bc 12 01              jump @3397 if a5 <u a4
      :                          @3369
 46929: c8 2c 09                 a2 = a5 + t0
 46932: d8 c9 06                 s1 = a2 <u a5
 46935: d8 93 09                 a2 = t1 <u a2
 46938: d4 69 09                 a2 = a2 | s1
 46941: 52 09 02 01              jump @3397 if a2 != 0
      :                          @3370
 46945: c9 c4 06                 s1 = t2 - a5
 46948: c8 36 06                 s1 = s1 + t1
 46951: 84 69 07                 a2 = s1 & 0x7
 46954: c8 9c 0c                 a5 = a5 + a2
 46957: 01                       fallthrough
      :                          @3371
 46958: 82 a7                    a0 = u64 [a3]
 46960: ab b7 d5                 jump @3368 if a0 != a4
      :                          @3372
 46963: 7b ac                    u64 [a3] = a5
 46965: 64 05                    s0 = ra
 46967: c9 96 07                 a0 = s1 - a2
 46970: 7b 17 30                 u64 [sp + 0x30] = a0
 46973: 33 08                    a1 = 0
 46975: 82 19 20                 a2 = u64 [sp + 0x20]
 46978: 50 20 e0 02 d7 53 02     ra = 736, jump @13675
      :                          @3373 [@dyn 368]
 46985: 82 18 18                 a1 = u64 [sp + 0x18]
 46988: 51 08 73                 jump @3384 if a1 == 0
      :                          @3374
 46991: 64 50                    ra = s0
 46993: 82 1b 28                 a4 = u64 [sp + 0x28]
 46996: 33 0a                    a3 = 0
 46998: 28 12                    jump @3377
      :                          @3375
 47000: 33 0a                    a3 = 0
 47002: 28 0e                    jump @3377
      :                          @3376
 47004: 95 aa 01                 a3 = a3 + 0x1
 47007: 82 18 18                 a1 = u64 [sp + 0x18]
 47010: 82 1b 28                 a4 = u64 [sp + 0x28]
 47013: aa 8a 63                 jump @3385 if a3 == a1
      :                          @3377
 47016: 97 a2 03                 t0 = a3 << 0x3
 47019: 82 18 10                 a1 = u64 [sp + 0x10]
 47022: c8 28 08                 a1 = a1 + t0
 47025: 82 83                    t1 = u64 [a1]
 47027: ac 3b e9                 jump @3376 if a4 <u t1
      :                          @3378
 47030: 82 18 08                 a1 = u64 [sp + 0x8]
 47033: ae 8a 96 00              jump @3392 if a3 >=u a1
      :                          @3379
 47037: 82 18                    a1 = u64 [sp]
 47039: c8 82 02                 t0 = t0 + a1
 47042: 82 17 28                 a0 = u64 [sp + 0x28]
 47045: 01                       fallthrough
      :                          @3380
 47046: ae 07 97 00              jump @3395 if a0 >=u ra
      :                          @3381
 47050: c9 37 09                 a2 = a0 - t1
 47053: ae 09 91 00              jump @3396 if a2 >=u ra
      :                          @3382
 47057: 97 7c 03                 a5 = a0 << 0x3
 47060: 82 16 30                 s1 = u64 [sp + 0x30]
 47063: c8 6c 0c                 a5 = a5 + s1
 47066: 97 99 03                 a2 = a2 << 0x3
 47069: c8 69 09                 a2 = a2 + s1
 47072: 82 94                    t2 = u64 [a2]
 47074: 82 29                    a2 = u64 [t0]
 47076: 82 c6                    s1 = u64 [a5]
 47078: d8 73 05                 s0 = t1 <u a0
 47081: c9 57 07                 a0 = a0 - s0
 47084: c8 49 09                 a2 = a2 + t2
 47087: e4 96 09                 a2 = maxu(s1, a2)
 47090: d8 37 06                 s1 = a0 <u t1
 47093: e0 65 06                 s1 = s0 & ~s1
 47096: 7b c9                    u64 [a5] = a2
 47098: 52 06 cc                 jump @3380 if s1 != 0
      :                          @3383
 47101: 28 9f                    jump @3376
      :                          @3384
 47103: 64 50                    ra = s0
 47105: 82 1b 28                 a4 = u64 [sp + 0x28]
 47108: 51 1b ff 5d              jump @3399 if a4 == 4294967295
      :                          @3385
 47112: 97 b7 03                 a0 = a4 << 0x3
 47115: 82 18 30                 a1 = u64 [sp + 0x30]
 47118: c8 87 07                 a0 = a0 + a1
 47121: 82 77                    a0 = u64 [a0]
 47123: 33 08 00 20              a1 = 0x2000
 47127: ac 08 2a                 jump @3391 if a1 <u ra
      :                          @3386
 47130: 33 08 c0 22 03           a1 = 0x322c0
 47135: 95 88 00 00 01           a1 = a1 + 0x10000
 47140: 01                       fallthrough
      :                          @3387
 47141: 82 89                    a2 = u64 [a1]
 47143: c9 98 0a                 a3 = a1 - a2
 47146: 82 1b 30                 a4 = u64 [sp + 0x30]
 47149: ab ba 14                 jump @3391 if a3 != a4
      :                          @3388
 47152: 82 1a 20                 a3 = u64 [sp + 0x20]
 47155: c9 a9 0a                 a3 = a2 - a3
 47158: 01                       fallthrough
      :                          @3389
 47159: 82 8b                    a4 = u64 [a1]
 47161: ab 9b ec                 jump @3387 if a4 != a2
      :                          @3390
 47164: 7b 8a                    u64 [a1] = a3
 47166: 33 0c                    a5 = 0
 47168: 01                       fallthrough
      :                          @3391
 47169: 82 10 48                 ra = u64 [sp + 0x48]
 47172: 82 15 40                 s0 = u64 [sp + 0x40]
 47175: 82 16 38                 s1 = u64 [sp + 0x38]
 47178: 95 11 50                 sp = sp + 0x50
 47181: 32 00                    ret
      :                          @3392
 47183: 82 19 28                 a2 = u64 [sp + 0x28]
 47186: 51 19 ff 0b              jump @3395 if a2 == 4294967295
      :                          @3393
 47190: c9 39 09                 a2 = a2 - t1
 47193: ae 09 05                 jump @3396 if a2 >=u ra
      :                          @3394
 47196: 00                       trap
      :                          @3395
 47197: 00                       trap
      :                          @3396
 47198: 00                       trap
      :                          @3397
 47199: 00                       trap
      :                          @3398
 47200: 00                       trap
      :                          @3399
 47201: 00                       trap
      :                          @3400
 47202: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 47205: 7b 10 40                 u64 [sp + 0x40] = ra
 47208: 7b 15 38                 u64 [sp + 0x38] = s0
 47211: 7b 16 30                 u64 [sp + 0x30] = s1
 47214: 7b 1a 20                 u64 [sp + 0x20] = a3
 47217: 7b 19 10                 u64 [sp + 0x10] = a2
 47220: 64 85                    s0 = a1
 47222: 7b 17 18                 u64 [sp + 0x18] = a0
 47225: 95 b8 01                 a1 = a4 + 0x1
 47228: 33 04 08                 t2 = 0x8
 47231: 97 80 03                 ra = a1 << 0x3
 47234: 7b 15 28                 u64 [sp + 0x28] = s0
 47237: 52 08 0b                 jump @3403 if a1 != 0
      :                          @3401
 47240: 33 07                    a0 = 0
 47242: 52 05 da 00              jump @3421 if s0 != 0
      :                          @3402
 47246: 28 72                    jump @3411
      :                          @3403
 47248: 7b 1b 08                 u64 [sp + 0x8] = a4
 47251: 7b 18                    u64 [sp] = a1
 47253: 98 87 3c                 a0 = a1 >> 0x3c
 47256: 52 07 2f 01              jump @3436 if a0 != 0
      :                          @3404
 47260: 88 72 01                 t0 = a0 <u 0x1
 47263: 97 22 03                 t0 = t0 << 0x3
 47266: 33 04 c0 22 03           t2 = 0x322c0
 47271: 33 03 00 00 01           t1 = 0x10000
 47276: c8 34 0a                 a3 = t2 + t1
 47279: 01                       fallthrough
      :                          @3405
 47280: 82 ab                    a4 = u64 [a3]
 47282: c8 0b 0c                 a5 = a4 + ra
 47285: ac bc 11 01              jump @3435 if a5 <u a4
      :                          @3406
 47289: c8 2c 09                 a2 = a5 + t0
 47292: d8 c9 05                 s0 = a2 <u a5
 47295: d8 93 09                 a2 = t1 <u a2
 47298: d4 59 09                 a2 = a2 | s0
 47301: 52 09 01 01              jump @3435 if a2 != 0
      :                          @3407
 47305: c9 c4 05                 s0 = t2 - a5
 47308: c8 35 05                 s0 = s0 + t1
 47311: 84 59 07                 a2 = s0 & 0x7
 47314: c8 9c 0c                 a5 = a5 + a2
 47317: 01                       fallthrough
      :                          @3408
 47318: 82 a7                    a0 = u64 [a3]
 47320: ab b7 d8                 jump @3405 if a0 != a4
      :                          @3409
 47323: 7b ac                    u64 [a3] = a5
 47325: c9 95 05                 s0 = s0 - a2
 47328: 64 57                    a0 = s0
 47330: 33 08                    a1 = 0
 47332: 64 09                    a2 = ra
 47334: 64 06                    s1 = ra
 47336: 50 20 e2 02 71 52 02     ra = 738, jump @13675
      :                          @3410 [@dyn 369]
 47343: 64 54                    t2 = s0
 47345: 64 60                    ra = s1
 47347: 82 18                    a1 = u64 [sp]
 47349: 82 1b 08                 a4 = u64 [sp + 0x8]
 47352: 82 15 28                 s0 = u64 [sp + 0x28]
 47355: 33 07                    a0 = 0
 47357: 52 05 67                 jump @3421 if s0 != 0
      :                          @3411
 47360: d8 b7 0a                 a3 = a0 <u a4
 47363: c8 a7 07                 a0 = a0 + a3
 47366: d8 7b 09                 a2 = a4 <u a0
 47369: 85 99 01                 a2 = a2 ^ 0x1
 47372: d2 a9 09                 a2 = a2 & a3
 47375: 52 09 f1                 jump @3411 if a2 != 0
      :                          @3412
 47378: 51 1b ff b2 00           jump @3433 if a4 == 4294967295
      :                          @3413
 47383: 97 b7 03                 a0 = a4 << 0x3
 47386: c8 47 07                 a0 = a0 + t2
 47389: 82 77                    a0 = u64 [a0]
 47391: 33 09 00 20              a2 = 0x2000
 47395: ac 89 24                 jump @3419 if a2 <u a1
      :                          @3414
 47398: 33 08 c0 22 03           a1 = 0x322c0
 47403: 95 88 00 00 01           a1 = a1 + 0x10000
 47408: 01                       fallthrough
      :                          @3415
 47409: 82 89                    a2 = u64 [a1]
 47411: c9 98 0a                 a3 = a1 - a2
 47414: ab 4a 11                 jump @3419 if a3 != t2
      :                          @3416
 47417: c9 09 0a                 a3 = a2 - ra
 47420: 01                       fallthrough
      :                          @3417
 47421: 82 8b                    a4 = u64 [a1]
 47423: ab 9b f2                 jump @3415 if a4 != a2
      :                          @3418
 47426: 7b 8a                    u64 [a1] = a3
 47428: 33 0c                    a5 = 0
 47430: 01                       fallthrough
      :                          @3419
 47431: 82 10 40                 ra = u64 [sp + 0x40]
 47434: 82 15 38                 s0 = u64 [sp + 0x38]
 47437: 82 16 30                 s1 = u64 [sp + 0x30]
 47440: 95 11 48                 sp = sp + 0x48
 47443: 32 00                    ret
      :                          @3420
 47445: d8 b7 0a                 a3 = a0 <u a4
 47448: c8 a7 07                 a0 = a0 + a3
 47451: d8 7b 09                 a2 = a4 <u a0
 47454: e0 9a 09                 a2 = a3 & ~a2
 47457: 51 09 b1                 jump @3412 if a2 == 0
      :                          @3421
 47460: 64 5c                    a5 = s0
 47462: 82 19 18                 a2 = u64 [sp + 0x18]
 47465: ae 87 49                 jump @3428 if a0 >=u a1
      :                          @3422
 47468: 33 06                    s1 = 0
 47470: 97 7a 03                 a3 = a0 << 0x3
 47473: c8 a4 02                 t0 = t2 + a3
 47476: 82 1a 18                 a3 = u64 [sp + 0x18]
 47479: 82 1c 10                 a5 = u64 [sp + 0x10]
 47482: 28 0e                    jump @3424
      :                          @3423
 47484: 95 66 01                 s1 = s1 + 0x1
 47487: 95 cc 08                 a5 = a5 + 0x8
 47490: 95 aa 08                 a3 = a3 + 0x8
 47493: aa 65 d0                 jump @3420 if s0 == s1
      :                          @3424
 47496: 82 a9                    a2 = u64 [a3]
 47498: ac 97 f2                 jump @3423 if a0 <u a2
      :                          @3425
 47501: c9 97 09                 a2 = a0 - a2
 47504: ae 89 32                 jump @3431 if a2 >=u a1
      :                          @3426
 47507: 82 15 20                 s0 = u64 [sp + 0x20]
 47510: ae 56 2d                 jump @3432 if s1 >=u s0
      :                          @3427
 47513: 97 99 03                 a2 = a2 << 0x3
 47516: c8 49 09                 a2 = a2 + t2
 47519: 82 99                    a2 = u64 [a2]
 47521: 82 c5                    s0 = u64 [a5]
 47523: 82 23                    t1 = u64 [t0]
 47525: c8 59 09                 a2 = a2 + s0
 47528: e4 93 09                 a2 = maxu(t1, a2)
 47531: 82 15 28                 s0 = u64 [sp + 0x28]
 47534: 7b 29                    u64 [t0] = a2
 47536: 28 cc                    jump @3423
      :                          @3428
 47538: 82 9a                    a3 = u64 [a2]
 47540: ae a7 11                 jump @3434 if a0 >=u a3
      :                          @3429
 47543: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 47546: 95 99 08                 a2 = a2 + 0x8
 47549: 52 0c f5                 jump @3428 if a5 != 0
      :                          @3430
 47552: 28 95                    jump @3420
      :                          @3431
 47554: 00                       trap
      :                          @3432
 47555: 00                       trap
      :                          @3433
 47556: 00                       trap
      :                          @3434
 47557: 00                       trap
      :                          @3435
 47558: 00                       trap
      :                          @3436
 47559: 00                       trap
      :                          @3437
 47560: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 47564: 7b 10 80 00              u64 [sp + 0x80] = ra
 47568: 7b 15 78                 u64 [sp + 0x78] = s0
 47571: 7b 16 70                 u64 [sp + 0x70] = s1
 47574: 64 a5                    s0 = a3
 47576: 7b 19 30                 u64 [sp + 0x30] = a2
 47579: 7b 17 10                 u64 [sp + 0x10] = a0
 47582: 95 a9 01                 a2 = a3 + 0x1
 47585: 33 06 08                 s1 = 0x8
 47588: 7b 18 18                 u64 [sp + 0x18] = a1
 47591: 51 09 68                 jump @3446 if a2 == 0
      :                          @3438
 47594: 98 97 3c                 a0 = a2 >> 0x3c
 47597: 52 07 4e 02              jump @3502 if a0 != 0
      :                          @3439
 47601: 88 72 01                 t0 = a0 <u 0x1
 47604: 7b 19 38                 u64 [sp + 0x38] = a2
 47607: 97 99 03                 a2 = a2 << 0x3
 47610: 97 22 03                 t0 = t0 << 0x3
 47613: 33 04 c0 22 03           t2 = 0x322c0
 47618: 33 03 00 00 01           t1 = 0x10000
 47623: c8 34 00                 ra = t2 + t1
 47626: 01                       fallthrough
      :                          @3440
 47627: 82 06                    s1 = u64 [ra]
 47629: c8 96 0c                 a5 = s1 + a2
 47632: ac 6c 2a 02              jump @3501 if a5 <u s1
      :                          @3441
 47636: c8 2c 07                 a0 = a5 + t0
 47639: d8 c7 0a                 a3 = a0 <u a5
 47642: d8 73 07                 a0 = t1 <u a0
 47645: d4 a7 07                 a0 = a0 | a3
 47648: 52 07 1a 02              jump @3501 if a0 != 0
      :                          @3442
 47652: c9 c4 07                 a0 = t2 - a5
 47655: c8 37 07                 a0 = a0 + t1
 47658: 84 7a 07                 a3 = a0 & 0x7
 47661: c8 ac 0c                 a5 = a5 + a3
 47664: 01                       fallthrough
      :                          @3443
 47665: 82 08                    a1 = u64 [ra]
 47667: ab 68 d8                 jump @3440 if a1 != s1
      :                          @3444
 47670: 7b 0c                    u64 [ra] = a5
 47672: 33 0b                    a4 = 0
 47674: c9 a7 06                 s1 = a0 - a3
 47677: 64 67                    a0 = s1
 47679: 33 08                    a1 = 0
 47681: 50 20 e4 02 18 51 02     ra = 740, jump @13675
      :                          @3445 [@dyn 370]
 47688: 82 18 18                 a1 = u64 [sp + 0x18]
 47691: 82 19 38                 a2 = u64 [sp + 0x38]
 47694: 01                       fallthrough
      :                          @3446
 47695: 7b 19 58                 u64 [sp + 0x58] = a2
 47698: 7b 16 60                 u64 [sp + 0x60] = s1
 47701: 7b 19 68                 u64 [sp + 0x68] = a2
 47704: 95 89 01                 a2 = a1 + 0x1
 47707: 95 17 40                 a0 = sp + 0x40
 47710: 95 18 58                 a1 = sp + 0x58
 47713: 50 20 e6 02 b3 a3        ra = 742, jump @1783
      :                          @3447 [@dyn 371]
 47719: 82 18 18                 a1 = u64 [sp + 0x18]
 47722: 51 08 e4 00              jump @3465 if a1 == 0
      :                          @3448
 47726: 82 12 50                 t0 = u64 [sp + 0x50]
 47729: 51 05 e2 00              jump @3466 if s0 == 0
      :                          @3449
 47733: 82 17 48                 a0 = u64 [sp + 0x48]
 47736: 7b 17 08                 u64 [sp + 0x8] = a0
 47739: 33 0c 01                 a5 = 0x1
 47742: 7b 12                    u64 [sp] = t0
 47744: 01                       fallthrough
      :                          @3450
 47745: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
 47748: ae 89 98 01              jump @3490 if a2 >=u a1
      :                          @3451
 47752: ae 29 95 01              jump @3491 if a2 >=u t0
      :                          @3452
 47756: 82 17 10                 a0 = u64 [sp + 0x10]
 47759: c8 97 07                 a0 = a0 + a2
 47762: 7b 17 38                 u64 [sp + 0x38] = a0
 47765: 96 c3 18                 t1 = a5 * 0x18
 47768: 82 17 08                 a0 = u64 [sp + 0x8]
 47771: c8 73 03                 t1 = t1 + a0
 47774: d8 2c 09                 a2 = a5 <u t0
 47777: 84 99 01                 a2 = a2 & 0x1
 47780: 95 36 f8                 s1 = t1 + 0xfffffffffffffff8
 47783: 51 09 77 01              jump @3492 if a2 == 0
      :                          @3453
 47787: d8 8c 07                 a0 = a5 <u a1
 47790: 7b 17 20                 u64 [sp + 0x20] = a0
 47793: c8 7c 0c                 a5 = a5 + a0
 47796: 7b 1c 28                 u64 [sp + 0x28] = a5
 47799: 95 3c f0                 a5 = t1 + 0xfffffffffffffff0
 47802: 95 32 10                 t0 = t1 + 0x10
 47805: 95 33 08                 t1 = t1 + 0x8
 47808: 33 09 01                 a2 = 0x1
 47811: 01                       fallthrough
      :                          @3454
 47812: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 47815: ae 5a 54 01              jump @3489 if a3 >=u s0
      :                          @3455
 47819: 82 17 38                 a0 = u64 [sp + 0x38]
 47822: 7c 70                    ra = u8 [a0]
 47824: 82 1b 30                 a4 = u64 [sp + 0x30]
 47827: c8 ab 0b                 a4 = a4 + a3
 47830: 7c b8                    a1 = u8 [a4]
 47832: 82 6b                    a4 = u64 [s1]
 47834: 97 94 03                 t2 = a2 << 0x3
 47837: ab 80 1c                 jump @3459 if ra != a1
      :                          @3456
 47840: ae ba 51 01              jump @3495 if a3 >=u a4
      :                          @3457
 47844: 82 c7                    a0 = u64 [a5]
 47846: 97 aa 03                 a3 = a3 << 0x3
 47849: c8 a7 07                 a0 = a0 + a3
 47852: 82 7a                    a3 = u64 [a0]
 47854: 82 2b                    a4 = u64 [t0]
 47856: 95 aa 01                 a3 = a3 + 0x1
 47859: ac b9 28                 jump @3462 if a2 <u a4
      :                          @3458
 47862: 28 41 01                 jump @3498
      :                          @3459
 47865: ae b9 3e 01              jump @3498 if a2 >=u a4
      :                          @3460
 47869: 82 2b                    a4 = u64 [t0]
 47871: ae ba 32 01              jump @3495 if a3 >=u a4
      :                          @3461
 47875: 82 c8                    a1 = u64 [a5]
 47877: 82 37                    a0 = u64 [t1]
 47879: c8 48 08                 a1 = a1 + t2
 47882: 82 88                    a1 = u64 [a1]
 47884: 97 aa 03                 a3 = a3 << 0x3
 47887: c8 a7 07                 a0 = a0 + a3
 47890: 82 77                    a0 = u64 [a0]
 47892: e4 78 0a                 a3 = maxu(a1, a0)
 47895: ae b9 20 01              jump @3498 if a2 >=u a4
      :                          @3462
 47899: 82 37                    a0 = u64 [t1]
 47901: d8 59 08                 a1 = a2 <u s0
 47904: c8 89 09                 a2 = a2 + a1
 47907: c8 47 07                 a0 = a0 + t2
 47910: d8 95 0b                 a4 = s0 <u a2
 47913: 85 bb 01                 a4 = a4 ^ 0x1
 47916: d2 b8 08                 a1 = a1 & a4
 47919: 7b 7a                    u64 [a0] = a3
 47921: 52 08 93                 jump @3454 if a1 != 0
      :                          @3463
 47924: 82 17 20                 a0 = u64 [sp + 0x20]
 47927: 85 79 01                 a2 = a0 ^ 0x1
 47930: 82 18 18                 a1 = u64 [sp + 0x18]
 47933: 82 1c 28                 a5 = u64 [sp + 0x28]
 47936: d8 c8 0a                 a3 = a1 <u a5
 47939: d4 a9 09                 a2 = a2 | a3
 47942: 82 12                    t0 = u64 [sp]
 47944: 51 09 39 ff              jump @3450 if a2 == 0
      :                          @3464
 47948: 28 1d                    jump @3468
      :                          @3465
 47950: 82 12 50                 t0 = u64 [sp + 0x50]
 47953: 28 18                    jump @3468
      :                          @3466
 47955: 33 07 01                 a0 = 0x1
 47958: 01                       fallthrough
      :                          @3467
 47959: d8 87 09                 a2 = a0 <u a1
 47962: 85 9a 01                 a3 = a2 ^ 0x1
 47965: c8 97 07                 a0 = a0 + a2
 47968: d8 78 09                 a2 = a1 <u a0
 47971: d4 a9 09                 a2 = a2 | a3
 47974: 51 09 f1                 jump @3467 if a2 == 0
      :                          @3468
 47977: ae 28 cf 00              jump @3499 if a1 >=u t0
      :                          @3469
 47981: 82 14 48                 t2 = u64 [sp + 0x48]
 47984: 33 03 18                 t1 = 0x18
 47987: ca 38 07                 a0 = a1 * t1
 47990: c8 47 07                 a0 = a0 + t2
 47993: 82 79 10                 a2 = u64 [a0 + 0x10]
 47996: ae 95 bd 00              jump @3500 if s0 >=u a2
      :                          @3470
 48000: 82 77 08                 a0 = u64 [a0 + 0x8]
 48003: 33 09                    a2 = 0
 48005: 97 55 03                 s0 = s0 << 0x3
 48008: c8 57 07                 a0 = a0 + s0
 48011: 82 77                    a0 = u64 [a0]
 48013: 7b 17 38                 u64 [sp + 0x38] = a0
 48016: 33 0c c0 22 03           a5 = 0x322c0
 48021: 33 08 00 00 01           a1 = 0x10000
 48026: c8 8c 0c                 a5 = a5 + a1
 48029: 33 07 00 20              a0 = 0x2000
 48033: 28 08                    jump @3472
      :                          @3471
 48035: 95 99 01                 a2 = a2 + 0x1
 48038: aa 29 33                 jump @3481 if a2 == t0
      :                          @3472
 48041: ca 39 0b                 a4 = a2 * t1
 48044: c8 4b 0b                 a4 = a4 + t2
 48047: 82 b6                    s1 = u64 [a4]
 48049: 51 06 f2                 jump @3471 if s1 == 0
      :                          @3473
 48052: ac 67 ef                 jump @3471 if a0 <u s1
      :                          @3474
 48055: 82 b5 08                 s0 = u64 [a4 + 0x8]
 48058: 97 60 03                 ra = s1 << 0x3
 48061: 01                       fallthrough
      :                          @3475
 48062: 82 cb                    a4 = u64 [a5]
 48064: c9 bc 08                 a1 = a5 - a4
 48067: ab 58 e0                 jump @3471 if a1 != s0
      :                          @3476
 48070: c9 0b 08                 a1 = a4 - ra
 48073: 01                       fallthrough
      :                          @3477
 48074: 82 ca                    a3 = u64 [a5]
 48076: ab ba f2                 jump @3475 if a3 != a4
      :                          @3478
 48079: 7b c8                    u64 [a5] = a1
 48081: 33 06                    s1 = 0
 48083: 01                       fallthrough
      :                          @3479
 48084: ab ba ea                 jump @3475 if a3 != a4
      :                          @3480
 48087: 28 cc                    jump @3471
      :                          @3481
 48089: 82 18 40                 a1 = u64 [sp + 0x40]
 48092: 51 08 2c                 jump @3488 if a1 == 0
      :                          @3482
 48095: 33 09 aa 0a              a2 = 0xaaa
 48099: ac 89 25                 jump @3488 if a2 <u a1
      :                          @3483
 48102: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 48105: 33 09 c0 22 03           a2 = 0x322c0
 48110: 95 99 00 00 01           a2 = a2 + 0x10000
 48115: 01                       fallthrough
      :                          @3484
 48116: 82 9b                    a4 = u64 [a2]
 48118: c9 b9 0a                 a3 = a2 - a4
 48121: ab 4a 0f                 jump @3488 if a3 != t2
      :                          @3485
 48124: c8 8b 0a                 a3 = a4 + a1
 48127: 01                       fallthrough
      :                          @3486
 48128: 82 9c                    a5 = u64 [a2]
 48130: ab bc f2                 jump @3484 if a5 != a4
      :                          @3487
 48133: 7b 9a                    u64 [a2] = a3
 48135: 01                       fallthrough
      :                          @3488
 48136: 82 17 38                 a0 = u64 [sp + 0x38]
 48139: 82 10 80 00              ra = u64 [sp + 0x80]
 48143: 82 15 78                 s0 = u64 [sp + 0x78]
 48146: 82 16 70                 s1 = u64 [sp + 0x70]
 48149: 95 11 88 00              sp = sp + 0x88
 48153: 32 00                    ret
      :                          @3489
 48155: 00                       trap
      :                          @3490
 48156: 00                       trap
      :                          @3491
 48157: 00                       trap
      :                          @3492
 48158: 82 17 38                 a0 = u64 [sp + 0x38]
 48161: 7c 77                    a0 = u8 [a0]
 48163: 82 18 30                 a1 = u64 [sp + 0x30]
 48166: 7c 88                    a1 = u8 [a1]
 48168: 82 6b                    a4 = u64 [s1]
 48170: ab 87 08                 jump @3496 if a0 != a1
      :                          @3493
 48173: 52 0b 09                 jump @3497 if a4 != 0
      :                          @3494
 48176: 00                       trap
      :                          @3495
 48177: 00                       trap
      :                          @3496
 48178: 54 1b 01 05              jump @3498 if a4 <=u 1
      :                          @3497
 48182: 00                       trap
      :                          @3498
 48183: 00                       trap
      :                          @3499
 48184: 00                       trap
      :                          @3500
 48185: 00                       trap
      :                          @3501
 48186: 00                       trap
      :                          @3502
 48187: 00                       trap
      :                          @3503
 48188: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 48191: 7b 10 30                 u64 [sp + 0x30] = ra
 48194: 7b 15 28                 u64 [sp + 0x28] = s0
 48197: 7b 16 20                 u64 [sp + 0x20] = s1
 48200: 7b 17 10                 u64 [sp + 0x10] = a0
 48203: 51 08 1f 01              jump @3534 if a1 == 0
      :                          @3504
 48207: 98 89 3c                 a2 = a1 >> 0x3c
 48210: 52 09 2d 01              jump @3538 if a2 != 0
      :                          @3505
 48214: 88 92 01                 t0 = a2 <u 0x1
 48217: 7b 18 08                 u64 [sp + 0x8] = a1
 48220: 97 87 03                 a0 = a1 << 0x3
 48223: 97 22 03                 t0 = t0 << 0x3
 48226: 33 04 c0 22 03           t2 = 0x322c0
 48231: 33 03 00 00 01           t1 = 0x10000
 48236: c8 34 00                 ra = t2 + t1
 48239: 01                       fallthrough
      :                          @3506
 48240: 82 05                    s0 = u64 [ra]
 48242: c8 75 06                 s1 = s0 + a0
 48245: ac 56 09 01              jump @3537 if s1 <u s0
      :                          @3507
 48249: c8 26 09                 a2 = s1 + t0
 48252: d8 69 0b                 a4 = a2 <u s1
 48255: d8 93 09                 a2 = t1 <u a2
 48258: d4 b9 09                 a2 = a2 | a4
 48261: 52 09 f9 00              jump @3537 if a2 != 0
      :                          @3508
 48265: c9 64 09                 a2 = t2 - s1
 48268: c8 39 09                 a2 = a2 + t1
 48271: 84 9b 07                 a4 = a2 & 0x7
 48274: c8 b6 06                 s1 = s1 + a4
 48277: 01                       fallthrough
      :                          @3509
 48278: 82 0a                    a3 = u64 [ra]
 48280: ab 5a d8                 jump @3506 if a3 != s0
      :                          @3510
 48283: 7b 06                    u64 [ra] = s1
 48285: 33 0c                    a5 = 0
 48287: 01                       fallthrough
      :                          @3511
 48288: c9 b9 0b                 a4 = a2 - a4
 48291: 33 09 01                 a2 = 0x1
 48294: 33 0a 02                 a3 = 0x2
 48297: 33 08 01                 a1 = 0x1
 48300: 7b 1b 18                 u64 [sp + 0x18] = a4
 48303: 82 16 08                 s1 = u64 [sp + 0x8]
 48306: ac a6 1b                 jump @3515 if s1 <u a3
      :                          @3512
 48309: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
 48312: 33 0c 01                 a5 = 0x1
 48315: 82 1b 18                 a4 = u64 [sp + 0x18]
 48318: 01                       fallthrough
      :                          @3513
 48319: 7b bc                    u64 [a4] = a5
 48321: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 48324: 95 bb 08                 a4 = a4 + 0x8
 48327: 52 0a f8                 jump @3513 if a3 != 0
      :                          @3514
 48330: 64 68                    a1 = s1
 48332: 01                       fallthrough
      :                          @3515
 48333: 7b 17                    u64 [sp] = a0
 48335: 33 02                    t0 = 0
 48337: 33 07                    a0 = 0
 48339: 7b b9                    u64 [a4] = a2
 48341: 01                       fallthrough
      :                          @3516
 48342: 97 70 03                 ra = a0 << 0x3
 48345: 51 07 4a                 jump @3524 if a0 == 0
      :                          @3517
 48348: 82 16 10                 s1 = u64 [sp + 0x10]
 48351: c8 06 09                 a2 = s1 + ra
 48354: 82 99                    a2 = u64 [a2]
 48356: 64 7b                    a4 = a0
 48358: ae 87 2f                 jump @3522 if a0 >=u a1
      :                          @3518
 48361: 82 14 18                 t2 = u64 [sp + 0x18]
 48364: c8 04 05                 s0 = t2 + ra
 48367: 64 76                    s1 = a0
 48369: 82 1b 10                 a4 = u64 [sp + 0x10]
 48372: 28 0e                    jump @3520
      :                          @3519
 48374: 95 44 08                 t2 = t2 + 0x8
 48377: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 48380: 95 bb 08                 a4 = a4 + 0x8
 48383: 51 06 24                 jump @3524 if s1 == 0
      :                          @3520
 48386: 82 b3                    t1 = u64 [a4]
 48388: ae 93 f2                 jump @3519 if t1 >=u a2
      :                          @3521
 48391: 82 4a                    a3 = u64 [t2]
 48393: 82 5c                    a5 = u64 [s0]
 48395: 95 aa 01                 a3 = a3 + 0x1
 48398: e4 ac 0a                 a3 = maxu(a5, a3)
 48401: 7b 5a                    u64 [s0] = a3
 48403: 28 e3                    jump @3519
      :                          @3522
 48405: 82 6a                    a3 = u64 [s1]
 48407: ac 9a 69                 jump @3539 if a3 <u a2
      :                          @3523
 48410: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 48413: 95 66 08                 s1 = s1 + 0x8
 48416: 52 0b f5                 jump @3522 if a4 != 0
      :                          @3524
 48419: aa 87 5a                 jump @3536 if a0 == a1
      :                          @3525
 48422: 82 19 18                 a2 = u64 [sp + 0x18]
 48425: c8 90 00                 ra = ra + a2
 48428: 82 09                    a2 = u64 [ra]
 48430: 95 77 01                 a0 = a0 + 0x1
 48433: e4 92 02                 t0 = maxu(t0, a2)
 48436: 82 19 08                 a2 = u64 [sp + 0x8]
 48439: ab 97 9f                 jump @3516 if a0 != a2
      :                          @3526
 48442: 56 29 00 20 33           jump @3535 if a2 >u 8192
      :                          @3527
 48447: 33 09 c0 22 03           a2 = 0x322c0
 48452: 95 99 00 00 01           a2 = a2 + 0x10000
 48457: 01                       fallthrough
      :                          @3528
 48458: 82 98                    a1 = u64 [a2]
 48460: c9 89 07                 a0 = a2 - a1
 48463: 82 1a 18                 a3 = u64 [sp + 0x18]
 48466: ab a7 1b                 jump @3535 if a0 != a3
      :                          @3529
 48469: 82 17                    a0 = u64 [sp]
 48471: c9 78 07                 a0 = a1 - a0
 48474: 01                       fallthrough
      :                          @3530
 48475: 82 9a                    a3 = u64 [a2]
 48477: ab 8a ed                 jump @3528 if a3 != a1
      :                          @3531
 48480: 7b 97                    u64 [a2] = a0
 48482: 33 0b                    a4 = 0
 48484: 01                       fallthrough
      :                          @3532
 48485: ab 8a e5                 jump @3528 if a3 != a1
      :                          @3533
 48488: 28 05                    jump @3535
      :                          @3534
 48490: 33 02                    t0 = 0
 48492: 01                       fallthrough
      :                          @3535
 48493: 64 27                    a0 = t0
 48495: 82 10 30                 ra = u64 [sp + 0x30]
 48498: 82 15 28                 s0 = u64 [sp + 0x28]
 48501: 82 16 20                 s1 = u64 [sp + 0x20]
 48504: 95 11 38                 sp = sp + 0x38
 48507: 32 00                    ret
      :                          @3536
 48509: 00                       trap
      :                          @3537
 48510: 00                       trap
      :                          @3538
 48511: 00                       trap
      :                          @3539
 48512: 00                       trap
      :                          @3540
 48513: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 48517: 7b 10 88 00              u64 [sp + 0x88] = ra
 48521: 7b 15 80 00              u64 [sp + 0x80] = s0
 48525: 7b 16 78                 u64 [sp + 0x78] = s1
 48528: 64 a5                    s0 = a3
 48530: 7b 19 30                 u64 [sp + 0x30] = a2
 48533: 7b 17 08                 u64 [sp + 0x8] = a0
 48536: 95 a9 01                 a2 = a3 + 0x1
 48539: 33 06 08                 s1 = 0x8
 48542: 7b 18 10                 u64 [sp + 0x10] = a1
 48545: 51 09 68                 jump @3549 if a2 == 0
      :                          @3541
 48548: 98 97 3c                 a0 = a2 >> 0x3c
 48551: 52 07 8e 02              jump @3609 if a0 != 0
      :                          @3542
 48555: 88 72 01                 t0 = a0 <u 0x1
 48558: 7b 19 40                 u64 [sp + 0x40] = a2
 48561: 97 99 03                 a2 = a2 << 0x3
 48564: 97 22 03                 t0 = t0 << 0x3
 48567: 33 04 c0 22 03           t2 = 0x322c0
 48572: 33 03 00 00 01           t1 = 0x10000
 48577: c8 34 00                 ra = t2 + t1
 48580: 01                       fallthrough
      :                          @3543
 48581: 82 06                    s1 = u64 [ra]
 48583: c8 96 0c                 a5 = s1 + a2
 48586: ac 6c 68 02              jump @3606 if a5 <u s1
      :                          @3544
 48590: c8 2c 07                 a0 = a5 + t0
 48593: d8 c7 0a                 a3 = a0 <u a5
 48596: d8 73 07                 a0 = t1 <u a0
 48599: d4 a7 07                 a0 = a0 | a3
 48602: 52 07 58 02              jump @3606 if a0 != 0
      :                          @3545
 48606: c9 c4 07                 a0 = t2 - a5
 48609: c8 37 07                 a0 = a0 + t1
 48612: 84 7a 07                 a3 = a0 & 0x7
 48615: c8 ac 0c                 a5 = a5 + a3
 48618: 01                       fallthrough
      :                          @3546
 48619: 82 08                    a1 = u64 [ra]
 48621: ab 68 d8                 jump @3543 if a1 != s1
      :                          @3547
 48624: 7b 0c                    u64 [ra] = a5
 48626: 33 0b                    a4 = 0
 48628: c9 a7 06                 s1 = a0 - a3
 48631: 64 67                    a0 = s1
 48633: 33 08                    a1 = 0
 48635: 50 20 e8 02 5e 4d 02     ra = 744, jump @13675
      :                          @3548 [@dyn 372]
 48642: 82 18 10                 a1 = u64 [sp + 0x10]
 48645: 82 19 40                 a2 = u64 [sp + 0x40]
 48648: 01                       fallthrough
      :                          @3549
 48649: 7b 19 60                 u64 [sp + 0x60] = a2
 48652: 7b 16 68                 u64 [sp + 0x68] = s1
 48655: 7b 19 70                 u64 [sp + 0x70] = a2
 48658: 95 89 01                 a2 = a1 + 0x1
 48661: 95 17 48                 a0 = sp + 0x48
 48664: 95 18 60                 a1 = sp + 0x60
 48667: 50 20 ea 02 f9 9f        ra = 746, jump @1783
      :                          @3550 [@dyn 373]
 48673: 82 18 10                 a1 = u64 [sp + 0x10]
 48676: 82 12 58                 t0 = u64 [sp + 0x58]
 48679: 82 14 50                 t2 = u64 [sp + 0x50]
 48682: 33 07                    a0 = 0
 48684: 33 09 18                 a2 = 0x18
 48687: 01                       fallthrough
      :                          @3551
 48688: ae 27 ff 01              jump @3603 if a0 >=u t0
      :                          @3552
 48692: ca 97 0a                 a3 = a0 * a2
 48695: c8 4a 0a                 a3 = a3 + t2
 48698: 82 ab 10                 a4 = u64 [a3 + 0x10]
 48701: 51 0b e5 01              jump @3598 if a4 == 0
      :                          @3553
 48705: d8 87 0c                 a5 = a0 <u a1
 48708: c8 c7 0b                 a4 = a0 + a5
 48711: 82 aa 08                 a3 = u64 [a3 + 0x8]
 48714: 85 c6 01                 s1 = a5 ^ 0x1
 48717: d8 b8 0c                 a5 = a1 <u a4
 48720: d4 6c 0c                 a5 = a5 | s1
 48723: 7b a7                    u64 [a3] = a0
 48725: 64 b7                    a0 = a4
 48727: 51 0c d9                 jump @3551 if a5 == 0
      :                          @3554
 48730: 33 07                    a0 = 0
 48732: 01                       fallthrough
      :                          @3555
 48733: 82 49 10                 a2 = u64 [t2 + 0x10]
 48736: ae 97 c3 01              jump @3599 if a0 >=u a2
      :                          @3556
 48740: d8 57 0c                 a5 = a0 <u s0
 48743: 82 49 08                 a2 = u64 [t2 + 0x8]
 48746: 85 ca 01                 a3 = a5 ^ 0x1
 48749: 97 7b 03                 a4 = a0 << 0x3
 48752: c8 7c 0c                 a5 = a5 + a0
 48755: c8 b9 09                 a2 = a2 + a4
 48758: d8 c5 0b                 a4 = s0 <u a5
 48761: d4 ba 0a                 a3 = a3 | a4
 48764: 7b 97                    u64 [a2] = a0
 48766: 64 c7                    a0 = a5
 48768: 51 0a dd                 jump @3555 if a3 == 0
      :                          @3557
 48771: 7b 14 28                 u64 [sp + 0x28] = t2
 48774: 51 08 e9 00              jump @3573 if a1 == 0
      :                          @3558
 48778: 33 07 01                 a0 = 0x1
 48781: 51 05 d0 00              jump @3572 if s0 == 0
      :                          @3559
 48785: 7b 12                    u64 [sp] = t0
 48787: 01                       fallthrough
      :                          @3560
 48788: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 48791: ae 89 8d 01              jump @3600 if a2 >=u a1
      :                          @3561
 48795: ae 29 8a 01              jump @3601 if a2 >=u t0
      :                          @3562
 48799: 96 73 18                 t1 = a0 * 0x18
 48802: c8 43 03                 t1 = t1 + t2
 48805: 95 3a f8                 a3 = t1 + 0xfffffffffffffff8
 48808: 7b 1a 40                 u64 [sp + 0x40] = a3
 48811: ae 27 7b 01              jump @3602 if a0 >=u t0
      :                          @3563
 48815: d8 87 08                 a1 = a0 <u a1
 48818: 7b 18 18                 u64 [sp + 0x18] = a1
 48821: c8 87 07                 a0 = a0 + a1
 48824: 7b 17 20                 u64 [sp + 0x20] = a0
 48827: 82 17 08                 a0 = u64 [sp + 0x8]
 48830: c8 97 07                 a0 = a0 + a2
 48833: 7b 17 38                 u64 [sp + 0x38] = a0
 48836: 95 32 f0                 t0 = t1 + 0xfffffffffffffff0
 48839: 95 34 10                 t2 = t1 + 0x10
 48842: 95 33 08                 t1 = t1 + 0x8
 48845: 33 09 01                 a2 = 0x1
 48848: 01                       fallthrough
      :                          @3564
 48849: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 48852: ae 5a 4a 01              jump @3594 if a3 >=u s0
      :                          @3565
 48856: 82 17 40                 a0 = u64 [sp + 0x40]
 48859: 82 7b                    a4 = u64 [a0]
 48861: ae b9 57 01              jump @3608 if a2 >=u a4
      :                          @3566
 48865: 82 4c                    a5 = u64 [t2]
 48867: ae ca 3c 01              jump @3595 if a3 >=u a5
      :                          @3567
 48871: ae ba 39 01              jump @3596 if a3 >=u a4
      :                          @3568
 48875: ae c9 36 01              jump @3597 if a2 >=u a5
      :                          @3569
 48879: 82 17 38                 a0 = u64 [sp + 0x38]
 48882: 7c 7b                    a4 = u8 [a0]
 48884: 82 1c 30                 a5 = u64 [sp + 0x30]
 48887: c8 ac 0c                 a5 = a5 + a3
 48890: 7c cc                    a5 = u8 [a5]
 48892: 82 27                    a0 = u64 [t0]
 48894: d3 cb 0b                 a4 = a4 ^ a5
 48897: 97 9c 03                 a5 = a2 << 0x3
 48900: 82 30                    ra = u64 [t1]
 48902: c8 c7 08                 a1 = a0 + a5
 48905: 82 88                    a1 = u64 [a1]
 48907: 97 a6 03                 s1 = a3 << 0x3
 48910: c8 60 0a                 a3 = ra + s1
 48913: 82 aa                    a3 = u64 [a3]
 48915: c8 67 07                 a0 = a0 + s1
 48918: 95 88 01                 a1 = a1 + 0x1
 48921: 82 77                    a0 = u64 [a0]
 48923: 95 aa 01                 a3 = a3 + 0x1
 48926: e6 a8 08                 a1 = minu(a1, a3)
 48929: 8e ba                    a3 = a4 >u 0
 48931: c8 a7 07                 a0 = a0 + a3
 48934: e6 78 07                 a0 = minu(a1, a0)
 48937: d8 59 08                 a1 = a2 <u s0
 48940: c8 89 09                 a2 = a2 + a1
 48943: c8 0c 0c                 a5 = a5 + ra
 48946: d8 95 0a                 a3 = s0 <u a2
 48949: 85 aa 01                 a3 = a3 ^ 0x1
 48952: d2 a8 08                 a1 = a1 & a3
 48955: 7b c7                    u64 [a5] = a0
 48957: 52 08 94                 jump @3564 if a1 != 0
      :                          @3570
 48960: 82 18 10                 a1 = u64 [sp + 0x10]
 48963: 82 17 20                 a0 = u64 [sp + 0x20]
 48966: d8 78 09                 a2 = a1 <u a0
 48969: 85 99 01                 a2 = a2 ^ 0x1
 48972: 82 1a 18                 a3 = u64 [sp + 0x18]
 48975: d2 a9 09                 a2 = a2 & a3
 48978: 82 14 28                 t2 = u64 [sp + 0x28]
 48981: 82 12                    t0 = u64 [sp]
 48983: 52 09 3d ff              jump @3560 if a2 != 0
      :                          @3571
 48987: 28 14                    jump @3573
      :                          @3572
 48989: d8 87 09                 a2 = a0 <u a1
 48992: c8 97 07                 a0 = a0 + a2
 48995: d8 78 0a                 a3 = a1 <u a0
 48998: 85 aa 01                 a3 = a3 ^ 0x1
 49001: d2 a9 09                 a2 = a2 & a3
 49004: 52 09 f1                 jump @3572 if a2 != 0
      :                          @3573
 49007: ae 28 c1 00              jump @3604 if a1 >=u t0
      :                          @3574
 49011: 33 03 18                 t1 = 0x18
 49014: ca 38 07                 a0 = a1 * t1
 49017: c8 47 07                 a0 = a0 + t2
 49020: 82 79 10                 a2 = u64 [a0 + 0x10]
 49023: ae 95 b2 00              jump @3605 if s0 >=u a2
      :                          @3575
 49027: 64 20                    ra = t0
 49029: 82 77 08                 a0 = u64 [a0 + 0x8]
 49032: 33 09                    a2 = 0
 49034: 97 55 03                 s0 = s0 << 0x3
 49037: c8 57 07                 a0 = a0 + s0
 49040: 82 77                    a0 = u64 [a0]
 49042: 33 0b c0 22 03           a4 = 0x322c0
 49047: 33 08 00 00 01           a1 = 0x10000
 49052: c8 8b 0b                 a4 = a4 + a1
 49055: 33 02 00 20              t0 = 0x2000
 49059: 28 0b                    jump @3577
      :                          @3576
 49061: 95 99 01                 a2 = a2 + 0x1
 49064: 82 14 28                 t2 = u64 [sp + 0x28]
 49067: aa 09 33                 jump @3586 if a2 == ra
      :                          @3577
 49070: ca 39 0c                 a5 = a2 * t1
 49073: c8 4c 0c                 a5 = a5 + t2
 49076: 82 c5                    s0 = u64 [a5]
 49078: 51 05 ef                 jump @3576 if s0 == 0
      :                          @3578
 49081: ac 52 ec                 jump @3576 if t0 <u s0
      :                          @3579
 49084: 82 c6 08                 s1 = u64 [a5 + 0x8]
 49087: 97 54 03                 t2 = s0 << 0x3
 49090: 01                       fallthrough
      :                          @3580
 49091: 82 bc                    a5 = u64 [a4]
 49093: c9 cb 08                 a1 = a4 - a5
 49096: ab 68 dd                 jump @3576 if a1 != s1
      :                          @3581
 49099: c9 4c 08                 a1 = a5 - t2
 49102: 01                       fallthrough
      :                          @3582
 49103: 82 ba                    a3 = u64 [a4]
 49105: ab ca f2                 jump @3580 if a3 != a5
      :                          @3583
 49108: 7b b8                    u64 [a4] = a1
 49110: 33 05                    s0 = 0
 49112: 01                       fallthrough
      :                          @3584
 49113: ab ca ea                 jump @3580 if a3 != a5
      :                          @3585
 49116: 28 c9                    jump @3576
      :                          @3586
 49118: 82 19 48                 a2 = u64 [sp + 0x48]
 49121: 51 09 2c                 jump @3593 if a2 == 0
      :                          @3587
 49124: 33 08 aa 0a              a1 = 0xaaa
 49128: ac 98 25                 jump @3593 if a1 <u a2
      :                          @3588
 49131: 96 99 e8                 a2 = a2 * 0xffffffffffffffe8
 49134: 33 0a c0 22 03           a3 = 0x322c0
 49139: 95 aa 00 00 01           a3 = a3 + 0x10000
 49144: 01                       fallthrough
      :                          @3589
 49145: 82 ab                    a4 = u64 [a3]
 49147: c9 ba 08                 a1 = a3 - a4
 49150: ab 48 0f                 jump @3593 if a1 != t2
      :                          @3590
 49153: c8 9b 08                 a1 = a4 + a2
 49156: 01                       fallthrough
      :                          @3591
 49157: 82 ac                    a5 = u64 [a3]
 49159: ab bc f2                 jump @3589 if a5 != a4
      :                          @3592
 49162: 7b a8                    u64 [a3] = a1
 49164: 01                       fallthrough
      :                          @3593
 49165: 82 10 88 00              ra = u64 [sp + 0x88]
 49169: 82 15 80 00              s0 = u64 [sp + 0x80]
 49173: 82 16 78                 s1 = u64 [sp + 0x78]
 49176: 95 11 90 00              sp = sp + 0x90
 49180: 32 00                    ret
      :                          @3594
 49182: 00                       trap
      :                          @3595
 49183: 00                       trap
      :                          @3596
 49184: 00                       trap
      :                          @3597
 49185: 00                       trap
      :                          @3598
 49186: 00                       trap
      :                          @3599
 49187: 00                       trap
      :                          @3600
 49188: 00                       trap
      :                          @3601
 49189: 00                       trap
      :                          @3602
 49190: 82 18 40                 a1 = u64 [sp + 0x40]
 49193: 82 8b                    a4 = u64 [a1]
 49195: 53 1b 02 08              jump @3607 if a4 <u 2
      :                          @3603
 49199: 00                       trap
      :                          @3604
 49200: 00                       trap
      :                          @3605
 49201: 00                       trap
      :                          @3606
 49202: 00                       trap
      :                          @3607
 49203: 00                       trap
      :                          @3608
 49204: 00                       trap
      :                          @3609
 49205: 00                       trap
      :                          @3610
 49206: 95 11 60 ff              sp = sp + 0xffffffffffffff60
 49210: 7b 10 98 00              u64 [sp + 0x98] = ra
 49214: 7b 15 90 00              u64 [sp + 0x90] = s0
 49218: 7b 16 88 00              u64 [sp + 0x88] = s1
 49222: 64 a5                    s0 = a3
 49224: 7b 19 50                 u64 [sp + 0x50] = a2
 49227: 7b 17 08                 u64 [sp + 0x8] = a0
 49230: 95 a9 01                 a2 = a3 + 0x1
 49233: 33 06 08                 s1 = 0x8
 49236: 7b 18 10                 u64 [sp + 0x10] = a1
 49239: 51 09 68                 jump @3619 if a2 == 0
      :                          @3611
 49242: 98 97 3c                 a0 = a2 >> 0x3c
 49245: 52 07 5f 03              jump @3693 if a0 != 0
      :                          @3612
 49249: 88 72 01                 t0 = a0 <u 0x1
 49252: 7b 19 48                 u64 [sp + 0x48] = a2
 49255: 97 99 03                 a2 = a2 << 0x3
 49258: 97 22 03                 t0 = t0 << 0x3
 49261: 33 04 c0 22 03           t2 = 0x322c0
 49266: 33 03 00 00 01           t1 = 0x10000
 49271: c8 34 00                 ra = t2 + t1
 49274: 01                       fallthrough
      :                          @3613
 49275: 82 07                    a0 = u64 [ra]
 49277: c8 97 0c                 a5 = a0 + a2
 49280: ac 7c 39 03              jump @3690 if a5 <u a0
      :                          @3614
 49284: c8 2c 08                 a1 = a5 + t0
 49287: d8 c8 0a                 a3 = a1 <u a5
 49290: d8 83 08                 a1 = t1 <u a1
 49293: d4 a8 08                 a1 = a1 | a3
 49296: 52 08 29 03              jump @3690 if a1 != 0
      :                          @3615
 49300: c9 c4 08                 a1 = t2 - a5
 49303: c8 38 08                 a1 = a1 + t1
 49306: 84 8a 07                 a3 = a1 & 0x7
 49309: c8 ac 0c                 a5 = a5 + a3
 49312: 01                       fallthrough
      :                          @3616
 49313: 82 06                    s1 = u64 [ra]
 49315: ab 76 d8                 jump @3613 if s1 != a0
      :                          @3617
 49318: 7b 0c                    u64 [ra] = a5
 49320: 33 0b                    a4 = 0
 49322: c9 a8 06                 s1 = a1 - a3
 49325: 64 67                    a0 = s1
 49327: 33 08                    a1 = 0
 49329: 50 20 ec 02 a8 4a 02     ra = 748, jump @13675
      :                          @3618 [@dyn 374]
 49336: 82 18 10                 a1 = u64 [sp + 0x10]
 49339: 82 19 48                 a2 = u64 [sp + 0x48]
 49342: 01                       fallthrough
      :                          @3619
 49343: 7b 19 70                 u64 [sp + 0x70] = a2
 49346: 7b 16 78                 u64 [sp + 0x78] = s1
 49349: 7b 19 80 00              u64 [sp + 0x80] = a2
 49353: 95 89 01                 a2 = a1 + 0x1
 49356: 95 17 58                 a0 = sp + 0x58
 49359: 95 18 70                 a1 = sp + 0x70
 49362: 50 20 ee 02 42 9d        ra = 750, jump @1783
      :                          @3620 [@dyn 375]
 49368: 82 18 10                 a1 = u64 [sp + 0x10]
 49371: 82 16 68                 s1 = u64 [sp + 0x68]
 49374: 82 14 60                 t2 = u64 [sp + 0x60]
 49377: 33 07                    a0 = 0
 49379: 33 02 18                 t0 = 0x18
 49382: 01                       fallthrough
      :                          @3621
 49383: ae 67 cf 02              jump @3687 if a0 >=u s1
      :                          @3622
 49387: ca 27 09                 a2 = a0 * t0
 49390: c8 49 09                 a2 = a2 + t2
 49393: 82 9a 10                 a3 = u64 [a2 + 0x10]
 49396: 51 0a b5 02              jump @3682 if a3 == 0
      :                          @3623
 49400: d8 87 0a                 a3 = a0 <u a1
 49403: c8 a7 0b                 a4 = a0 + a3
 49406: 82 99 08                 a2 = u64 [a2 + 0x8]
 49409: 85 aa 01                 a3 = a3 ^ 0x1
 49412: d8 b8 0c                 a5 = a1 <u a4
 49415: d4 ca 0a                 a3 = a3 | a5
 49418: 7b 97                    u64 [a2] = a0
 49420: 64 b7                    a0 = a4
 49422: 51 0a d9                 jump @3621 if a3 == 0
      :                          @3624
 49425: 33 07                    a0 = 0
 49427: 01                       fallthrough
      :                          @3625
 49428: 82 49 10                 a2 = u64 [t2 + 0x10]
 49431: ae 97 93 02              jump @3683 if a0 >=u a2
      :                          @3626
 49435: d8 57 0c                 a5 = a0 <u s0
 49438: 82 49 08                 a2 = u64 [t2 + 0x8]
 49441: 85 ca 01                 a3 = a5 ^ 0x1
 49444: 97 7b 03                 a4 = a0 << 0x3
 49447: c8 7c 0c                 a5 = a5 + a0
 49450: c8 b9 09                 a2 = a2 + a4
 49453: d8 c5 0b                 a4 = s0 <u a5
 49456: d4 ba 0a                 a3 = a3 | a4
 49459: 7b 97                    u64 [a2] = a0
 49461: 64 c7                    a0 = a5
 49463: 51 0a dd                 jump @3625 if a3 == 0
      :                          @3627
 49466: 7b 14 38                 u64 [sp + 0x38] = t2
 49469: 51 08 20                 jump @3631 if a1 == 0
      :                          @3628
 49472: 33 07 01                 a0 = 0x1
 49475: 51 05 08                 jump @3630 if s0 == 0
      :                          @3629
 49478: 7b 16                    u64 [sp] = s1
 49480: 28 9d 00                 jump @3645
      :                          @3630
 49483: d8 87 0a                 a3 = a0 <u a1
 49486: c8 a7 07                 a0 = a0 + a3
 49489: d8 78 09                 a2 = a1 <u a0
 49492: 85 99 01                 a2 = a2 ^ 0x1
 49495: d2 a9 09                 a2 = a2 & a3
 49498: 52 09 f1                 jump @3630 if a2 != 0
      :                          @3631
 49501: ae 68 5a 02              jump @3688 if a1 >=u s1
      :                          @3632
 49505: 33 03 18                 t1 = 0x18
 49508: ca 38 07                 a0 = a1 * t1
 49511: c8 47 07                 a0 = a0 + t2
 49514: 82 79 10                 a2 = u64 [a0 + 0x10]
 49517: ae 95 4b 02              jump @3689 if s0 >=u a2
      :                          @3633
 49521: 64 60                    ra = s1
 49523: 82 77 08                 a0 = u64 [a0 + 0x8]
 49526: 33 09                    a2 = 0
 49528: 97 5a 03                 a3 = s0 << 0x3
 49531: c8 a7 07                 a0 = a0 + a3
 49534: 82 77                    a0 = u64 [a0]
 49536: 33 0a c0 22 03           a3 = 0x322c0
 49541: 95 ab 00 00 01           a4 = a3 + 0x10000
 49546: 33 02 00 20              t0 = 0x2000
 49550: 28 0c                    jump @3635
      :                          @3634
 49552: 95 99 01                 a2 = a2 + 0x1
 49555: 82 14 38                 t2 = u64 [sp + 0x38]
 49558: aa 09 ce 01              jump @3670 if a2 == ra
      :                          @3635
 49562: ca 39 0c                 a5 = a2 * t1
 49565: c8 4c 0c                 a5 = a5 + t2
 49568: 82 c6                    s1 = u64 [a5]
 49570: 51 06 ee                 jump @3634 if s1 == 0
      :                          @3636
 49573: ac 62 eb                 jump @3634 if t0 <u s1
      :                          @3637
 49576: 82 cc 08                 a5 = u64 [a5 + 0x8]
 49579: 97 64 03                 t2 = s1 << 0x3
 49582: 01                       fallthrough
      :                          @3638
 49583: 82 b5                    s0 = u64 [a4]
 49585: c9 5b 0a                 a3 = a4 - s0
 49588: ab ca dc                 jump @3634 if a3 != a5
      :                          @3639
 49591: c9 45 0a                 a3 = s0 - t2
 49594: 01                       fallthrough
      :                          @3640
 49595: 82 b8                    a1 = u64 [a4]
 49597: ab 58 f2                 jump @3638 if a1 != s0
      :                          @3641
 49600: 7b ba                    u64 [a4] = a3
 49602: 33 06                    s1 = 0
 49604: 01                       fallthrough
      :                          @3642
 49605: ab 58 ea                 jump @3638 if a1 != s0
      :                          @3643
 49608: 28 c8                    jump @3634
      :                          @3644
 49610: 82 18 10                 a1 = u64 [sp + 0x10]
 49613: 82 17 18                 a0 = u64 [sp + 0x18]
 49616: d8 87 0a                 a3 = a0 <u a1
 49619: c8 a7 07                 a0 = a0 + a3
 49622: d8 78 09                 a2 = a1 <u a0
 49625: e0 9a 09                 a2 = a3 & ~a2
 49628: 82 14 38                 t2 = u64 [sp + 0x38]
 49631: 82 16                    s1 = u64 [sp]
 49633: 51 09 7c ff              jump @3631 if a2 == 0
      :                          @3645
 49637: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 49640: ae 89 c3 01              jump @3684 if a2 >=u a1
      :                          @3646
 49644: ae 69 c0 01              jump @3685 if a2 >=u s1
      :                          @3647
 49648: 96 7a 18                 a3 = a0 * 0x18
 49651: c8 4a 0a                 a3 = a3 + t2
 49654: 95 a8 f8                 a1 = a3 + 0xfffffffffffffff8
 49657: 7b 18 48                 u64 [sp + 0x48] = a1
 49660: ae 67 b1 01              jump @3686 if a0 >=u s1
      :                          @3648
 49664: 82 18 08                 a1 = u64 [sp + 0x8]
 49667: c8 89 09                 a2 = a2 + a1
 49670: 7c 94                    t2 = u8 [a2]
 49672: 95 a9 f0                 a2 = a3 + 0xfffffffffffffff0
 49675: 7b 19 40                 u64 [sp + 0x40] = a2
 49678: 95 a2 10                 t0 = a3 + 0x10
 49681: 95 a3 08                 t1 = a3 + 0x8
 49684: 7b 17 18                 u64 [sp + 0x18] = a0
 49687: 54 17 01 d9 00           jump @3662 if a0 <=u 1
      :                          @3649
 49692: c8 87 09                 a2 = a0 + a1
 49695: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 49698: 7b 19 30                 u64 [sp + 0x30] = a2
 49701: 95 a7 e0                 a0 = a3 + 0xffffffffffffffe0
 49704: 7b 17 28                 u64 [sp + 0x28] = a0
 49707: 95 a7 d8                 a0 = a3 + 0xffffffffffffffd8
 49710: 7b 17 20                 u64 [sp + 0x20] = a0
 49713: 33 09 01                 a2 = 0x1
 49716: 28 14                    jump @3651
      :                          @3650
 49718: d8 59 07                 a0 = a2 <u s0
 49721: c8 79 09                 a2 = a2 + a0
 49724: d8 95 08                 a1 = s0 <u a2
 49727: 85 88 01                 a1 = a1 ^ 0x1
 49730: d2 87 07                 a0 = a0 & a1
 49733: 51 07 85                 jump @3644 if a0 == 0
      :                          @3651
 49736: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 49739: ae 5a 5b 01              jump @3679 if a3 >=u s0
      :                          @3652
 49743: 82 17 48                 a0 = u64 [sp + 0x48]
 49746: 82 7b                    a4 = u64 [a0]
 49748: ae b9 67 01              jump @3692 if a2 >=u a4
      :                          @3653
 49752: 82 2c                    a5 = u64 [t0]
 49754: ae ca 4d 01              jump @3680 if a3 >=u a5
      :                          @3654
 49758: ae ba 47 01              jump @3678 if a3 >=u a4
      :                          @3655
 49762: ae c9 46 01              jump @3681 if a2 >=u a5
      :                          @3656
 49766: 82 17 40                 a0 = u64 [sp + 0x40]
 49769: 82 77                    a0 = u64 [a0]
 49771: 97 90 03                 ra = a2 << 0x3
 49774: c8 07 0b                 a4 = a0 + ra
 49777: 82 36                    s1 = u64 [t1]
 49779: 82 b8                    a1 = u64 [a4]
 49781: 97 ab 03                 a4 = a3 << 0x3
 49784: c8 b7 07                 a0 = a0 + a4
 49787: c8 6b 0b                 a4 = a4 + s1
 49790: 64 5c                    a5 = s0
 49792: 82 b5                    s0 = u64 [a4]
 49794: 82 1b 50                 a4 = u64 [sp + 0x50]
 49797: c8 ba 0a                 a3 = a3 + a4
 49800: 7c ab                    a4 = u8 [a3]
 49802: 95 88 01                 a1 = a1 + 0x1
 49805: 95 55 01                 s0 = s0 + 0x1
 49808: 82 77                    a0 = u64 [a0]
 49810: e6 58 08                 a1 = minu(a1, s0)
 49813: 64 c5                    s0 = a5
 49815: d3 b4 0a                 a3 = t2 ^ a4
 49818: 8e aa                    a3 = a3 >u 0
 49820: c8 a7 07                 a0 = a0 + a3
 49823: e6 78 07                 a0 = minu(a1, a0)
 49826: c8 06 06                 s1 = s1 + ra
 49829: 7b 67                    u64 [s1] = a0
 49831: 53 19 02 8f              jump @3650 if a2 <u 2
      :                          @3657
 49835: 95 9a fe                 a3 = a2 + 0xfffffffffffffffe
 49838: 82 17 50                 a0 = u64 [sp + 0x50]
 49841: c8 a7 07                 a0 = a0 + a3
 49844: 7c 77                    a0 = u8 [a0]
 49846: ab 74 80                 jump @3650 if t2 != a0
      :                          @3658
 49849: 82 17 30                 a0 = u64 [sp + 0x30]
 49852: 7c 77                    a0 = u8 [a0]
 49854: ab b7 78 ff              jump @3650 if a0 != a4
      :                          @3659
 49858: 82 2b                    a4 = u64 [t0]
 49860: ae b9 f7 00              jump @3692 if a2 >=u a4
      :                          @3660
 49864: 82 17 28                 a0 = u64 [sp + 0x28]
 49867: 82 7b                    a4 = u64 [a0]
 49869: ae ba d8 00              jump @3678 if a3 >=u a4
      :                          @3661
 49873: 82 37                    a0 = u64 [t1]
 49875: 82 18 20                 a1 = u64 [sp + 0x20]
 49878: 82 88                    a1 = u64 [a1]
 49880: c8 07 07                 a0 = a0 + ra
 49883: 97 aa 03                 a3 = a3 << 0x3
 49886: c8 a8 08                 a1 = a1 + a3
 49889: 82 88                    a1 = u64 [a1]
 49891: 82 7a                    a3 = u64 [a0]
 49893: 95 88 01                 a1 = a1 + 0x1
 49896: e6 8a 08                 a1 = minu(a3, a1)
 49899: 7b 78                    u64 [a0] = a1
 49901: 28 49 ff                 jump @3650
      :                          @3662
 49904: 33 09 01                 a2 = 0x1
 49907: 01                       fallthrough
      :                          @3663
 49908: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 49911: ae 5a af 00              jump @3679 if a3 >=u s0
      :                          @3664
 49915: 82 17 48                 a0 = u64 [sp + 0x48]
 49918: 82 7b                    a4 = u64 [a0]
 49920: ae b9 bb 00              jump @3692 if a2 >=u a4
      :                          @3665
 49924: 82 2c                    a5 = u64 [t0]
 49926: ae ca a1 00              jump @3680 if a3 >=u a5
      :                          @3666
 49930: ae ba 9b 00              jump @3678 if a3 >=u a4
      :                          @3667
 49934: ae c9 9a 00              jump @3681 if a2 >=u a5
      :                          @3668
 49938: 82 17 40                 a0 = u64 [sp + 0x40]
 49941: 82 7b                    a4 = u64 [a0]
 49943: 97 9c 03                 a5 = a2 << 0x3
 49946: c8 cb 06                 s1 = a4 + a5
 49949: 82 30                    ra = u64 [t1]
 49951: 82 66                    s1 = u64 [s1]
 49953: 97 a7 03                 a0 = a3 << 0x3
 49956: c8 7b 0b                 a4 = a4 + a0
 49959: c8 07 07                 a0 = a0 + ra
 49962: 82 77                    a0 = u64 [a0]
 49964: 82 18 50                 a1 = u64 [sp + 0x50]
 49967: c8 8a 0a                 a3 = a3 + a1
 49970: 7c aa                    a3 = u8 [a3]
 49972: 95 66 01                 s1 = s1 + 0x1
 49975: 95 77 01                 a0 = a0 + 0x1
 49978: 82 bb                    a4 = u64 [a4]
 49980: e6 76 07                 a0 = minu(s1, a0)
 49983: d3 a4 0a                 a3 = t2 ^ a3
 49986: 8e aa                    a3 = a3 >u 0
 49988: c8 ba 0a                 a3 = a3 + a4
 49991: e6 a7 07                 a0 = minu(a0, a3)
 49994: d8 59 0a                 a3 = a2 <u s0
 49997: c8 a9 09                 a2 = a2 + a3
 50000: c8 0c 0c                 a5 = a5 + ra
 50003: d8 95 0b                 a4 = s0 <u a2
 50006: 85 bb 01                 a4 = a4 ^ 0x1
 50009: d2 ba 0a                 a3 = a3 & a4
 50012: 7b c7                    u64 [a5] = a0
 50014: 52 0a 96                 jump @3663 if a3 != 0
      :                          @3669
 50017: 28 69 fe                 jump @3644
      :                          @3670
 50020: 82 18 58                 a1 = u64 [sp + 0x58]
 50023: 51 08 2c                 jump @3677 if a1 == 0
      :                          @3671
 50026: 33 09 aa 0a              a2 = 0xaaa
 50030: ac 89 25                 jump @3677 if a2 <u a1
      :                          @3672
 50033: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 50036: 33 09 c0 22 03           a2 = 0x322c0
 50041: 95 99 00 00 01           a2 = a2 + 0x10000
 50046: 01                       fallthrough
      :                          @3673
 50047: 82 9a                    a3 = u64 [a2]
 50049: c9 a9 0b                 a4 = a2 - a3
 50052: ab 4b 0f                 jump @3677 if a4 != t2
      :                          @3674
 50055: c8 8a 0b                 a4 = a3 + a1
 50058: 01                       fallthrough
      :                          @3675
 50059: 82 9c                    a5 = u64 [a2]
 50061: ab ac f2                 jump @3673 if a5 != a3
      :                          @3676
 50064: 7b 9b                    u64 [a2] = a4
 50066: 01                       fallthrough
      :                          @3677
 50067: 82 10 98 00              ra = u64 [sp + 0x98]
 50071: 82 15 90 00              s0 = u64 [sp + 0x90]
 50075: 82 16 88 00              s1 = u64 [sp + 0x88]
 50079: 95 11 a0 00              sp = sp + 0xa0
 50083: 32 00                    ret
      :                          @3678
 50085: 00                       trap
      :                          @3679
 50086: 00                       trap
      :                          @3680
 50087: 00                       trap
      :                          @3681
 50088: 00                       trap
      :                          @3682
 50089: 00                       trap
      :                          @3683
 50090: 00                       trap
      :                          @3684
 50091: 00                       trap
      :                          @3685
 50092: 00                       trap
      :                          @3686
 50093: 82 18 48                 a1 = u64 [sp + 0x48]
 50096: 82 8b                    a4 = u64 [a1]
 50098: 53 1b 02 08              jump @3691 if a4 <u 2
      :                          @3687
 50102: 00                       trap
      :                          @3688
 50103: 00                       trap
      :                          @3689
 50104: 00                       trap
      :                          @3690
 50105: 00                       trap
      :                          @3691
 50106: 00                       trap
      :                          @3692
 50107: 00                       trap
      :                          @3693
 50108: 00                       trap
      :                          @3694
 50109: 95 11 08 ff              sp = sp + 0xffffffffffffff08
 50113: 7b 10 f0 00              u64 [sp + 0xf0] = ra
 50117: 7b 15 e8 00              u64 [sp + 0xe8] = s0
 50121: 7b 16 e0 00              u64 [sp + 0xe0] = s1
 50125: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 50128: 7b 17 40                 u64 [sp + 0x40] = a0
 50131: 51 09 68 04              jump @3778 if a2 == 0
      :                          @3695
 50135: 98 97 3c                 a0 = a2 >> 0x3c
 50138: 52 07 70 04              jump @3780 if a0 != 0
      :                          @3696
 50142: 7b 18 78                 u64 [sp + 0x78] = a1
 50145: 88 72 01                 t0 = a0 <u 0x1
 50148: 7b 19 10                 u64 [sp + 0x10] = a2
 50151: 97 99 03                 a2 = a2 << 0x3
 50154: 97 22 03                 t0 = t0 << 0x3
 50157: 33 04 c0 22 03           t2 = 0x322c0
 50162: 33 03 00 00 01           t1 = 0x10000
 50167: c8 34 0b                 a4 = t2 + t1
 50170: 01                       fallthrough
      :                          @3697
 50171: 82 b6                    s1 = u64 [a4]
 50173: c8 96 0c                 a5 = s1 + a2
 50176: ac 6c 3a 04              jump @3777 if a5 <u s1
      :                          @3698
 50180: c8 2c 0a                 a3 = a5 + t0
 50183: d8 ca 05                 s0 = a3 <u a5
 50186: d8 a3 0a                 a3 = t1 <u a3
 50189: d4 5a 0a                 a3 = a3 | s0
 50192: 52 0a 2a 04              jump @3777 if a3 != 0
      :                          @3699
 50196: c9 c4 05                 s0 = t2 - a5
 50199: c8 35 05                 s0 = s0 + t1
 50202: 84 5a 07                 a3 = s0 & 0x7
 50205: c8 ac 0c                 a5 = a5 + a3
 50208: 01                       fallthrough
      :                          @3700
 50209: 82 b7                    a0 = u64 [a4]
 50211: ab 67 d8                 jump @3697 if a0 != s1
      :                          @3701
 50214: 7b bc                    u64 [a4] = a5
 50216: c9 a5 06                 s1 = s0 - a3
 50219: 64 67                    a0 = s1
 50221: 33 08                    a1 = 0
 50223: 50 20 f0 02 2a 47 02     ra = 752, jump @13675
      :                          @3702 [@dyn 376]
 50230: 82 15 10                 s0 = u64 [sp + 0x10]
 50233: 7b 15 c8 00              u64 [sp + 0xc8] = s0
 50237: 7b 16 d0 00              u64 [sp + 0xd0] = s1
 50241: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 50245: 95 17 b0 00              a0 = sp + 0xb0
 50249: 95 18 c8 00              a1 = sp + 0xc8
 50253: 64 59                    a2 = s0
 50255: 50 20 f2 02 c5 99        ra = 754, jump @1783
      :                          @3703 [@dyn 377]
 50261: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 50265: 55 15 02 bc 00           jump @3725 if s0 >=u 2
      :                          @3704
 50270: 82 17 78                 a0 = u64 [sp + 0x78]
 50273: 51 08 e8 03              jump @3779 if a1 == 0
      :                          @3705
 50277: 82 1a b8 00              a3 = u64 [sp + 0xb8]
 50281: 82 a9 10                 a2 = u64 [a3 + 0x10]
 50284: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 50287: ae 97 75 03              jump @3760 if a0 >=u a2
      :                          @3706
 50291: 64 a2                    t0 = a3
 50293: 82 a9 08                 a2 = u64 [a3 + 0x8]
 50296: 33 00                    ra = 0
 50298: 97 77 03                 a0 = a0 << 0x3
 50301: c8 97 07                 a0 = a0 + a2
 50304: 82 77                    a0 = u64 [a0]
 50306: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 50310: 33 03 18                 t1 = 0x18
 50313: 33 0a c0 22 03           a3 = 0x322c0
 50318: 95 ab 00 00 01           a4 = a3 + 0x10000
 50323: 33 07 00 20              a0 = 0x2000
 50327: 28 08                    jump @3708
      :                          @3707
 50329: 95 00 01                 ra = ra + 0x1
 50332: aa 80 33                 jump @3717 if ra == a1
      :                          @3708
 50335: ca 30 0c                 a5 = ra * t1
 50338: c8 2c 0c                 a5 = a5 + t0
 50341: 82 c6                    s1 = u64 [a5]
 50343: 51 06 f2                 jump @3707 if s1 == 0
      :                          @3709
 50346: ac 67 ef                 jump @3707 if a0 <u s1
      :                          @3710
 50349: 82 cc 08                 a5 = u64 [a5 + 0x8]
 50352: 97 64 03                 t2 = s1 << 0x3
 50355: 01                       fallthrough
      :                          @3711
 50356: 82 b5                    s0 = u64 [a4]
 50358: c9 5b 0a                 a3 = a4 - s0
 50361: ab ca e0                 jump @3707 if a3 != a5
      :                          @3712
 50364: c9 45 0a                 a3 = s0 - t2
 50367: 01                       fallthrough
      :                          @3713
 50368: 82 b9                    a2 = u64 [a4]
 50370: ab 59 f2                 jump @3711 if a2 != s0
      :                          @3714
 50373: 7b ba                    u64 [a4] = a3
 50375: 33 06                    s1 = 0
 50377: 01                       fallthrough
      :                          @3715
 50378: ab 59 ea                 jump @3711 if a2 != s0
      :                          @3716
 50381: 28 cc                    jump @3707
      :                          @3717
 50383: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 50387: 51 08 2c                 jump @3724 if a1 == 0
      :                          @3718
 50390: 33 09 aa 0a              a2 = 0xaaa
 50394: ac 89 25                 jump @3724 if a2 <u a1
      :                          @3719
 50397: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 50400: 33 09 c0 22 03           a2 = 0x322c0
 50405: 95 99 00 00 01           a2 = a2 + 0x10000
 50410: 01                       fallthrough
      :                          @3720
 50411: 82 9a                    a3 = u64 [a2]
 50413: c9 a9 0b                 a4 = a2 - a3
 50416: ab 2b 0f                 jump @3724 if a4 != t0
      :                          @3721
 50419: c8 8a 0b                 a4 = a3 + a1
 50422: 01                       fallthrough
      :                          @3722
 50423: 82 9c                    a5 = u64 [a2]
 50425: ab ac f2                 jump @3720 if a5 != a3
      :                          @3723
 50428: 7b 9b                    u64 [a2] = a4
 50430: 01                       fallthrough
      :                          @3724
 50431: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 50435: 82 10 f0 00              ra = u64 [sp + 0xf0]
 50439: 82 15 e8 00              s0 = u64 [sp + 0xe8]
 50443: 82 16 e0 00              s1 = u64 [sp + 0xe0]
 50447: 95 11 f8 00              sp = sp + 0xf8
 50451: 32 00                    ret
      :                          @3725
 50453: 82 1a b8 00              a3 = u64 [sp + 0xb8]
 50457: 82 17 40                 a0 = u64 [sp + 0x40]
 50460: 95 77 08                 a0 = a0 + 0x8
 50463: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 50467: 95 a7 28                 a0 = a3 + 0x28
 50470: 7b 17 38                 u64 [sp + 0x38] = a0
 50473: 82 19 78                 a2 = u64 [sp + 0x78]
 50476: 7b 18 50                 u64 [sp + 0x50] = a1
 50479: 7b 1a 48                 u64 [sp + 0x48] = a3
 50482: ae 89 76 01              jump @3744 if a2 >=u a1
      :                          @3726
 50486: 9a 99 01                 a2 = 0x1 - a2
 50489: 7b 19 20                 u64 [sp + 0x20] = a2
 50492: 9a 87 01                 a0 = 0x1 - a1
 50495: 7b 17 18                 u64 [sp + 0x18] = a0
 50498: 33 0c 02                 a5 = 0x2
 50501: 82 1b 10                 a4 = u64 [sp + 0x10]
 50504: 01                       fallthrough
      :                          @3727
 50505: 64 c7                    a0 = a5
 50507: 33 0c                    a5 = 0
 50509: 64 79                    a2 = a0
 50511: d8 b7 07                 a0 = a0 <u a4
 50514: 7b 17                    u64 [sp] = a0
 50516: c8 97 07                 a0 = a0 + a2
 50519: 7b 17 08                 u64 [sp + 0x8] = a0
 50522: c9 9b 0b                 a4 = a4 - a2
 50525: 7b 1b 28                 u64 [sp + 0x28] = a4
 50528: 7b 19 30                 u64 [sp + 0x30] = a2
 50531: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 50534: 7b 19 58                 u64 [sp + 0x58] = a2
 50537: 28 1e                    jump @3729
      :                          @3728
 50539: 82 18 28                 a1 = u64 [sp + 0x28]
 50542: d8 8c 07                 a0 = a5 <u a1
 50545: c8 7c 0c                 a5 = a5 + a0
 50548: d8 c8 08                 a1 = a1 <u a5
 50551: 85 88 01                 a1 = a1 ^ 0x1
 50554: d2 87 07                 a0 = a0 & a1
 50557: 82 18 50                 a1 = u64 [sp + 0x50]
 50560: 82 1a 48                 a3 = u64 [sp + 0x48]
 50563: 51 07 0d 01              jump @3742 if a0 == 0
      :                          @3729
 50567: ae 8c af 02              jump @3773 if a5 >=u a1
      :                          @3730
 50571: 96 c5 18                 s0 = a5 * 0x18
 50574: c8 5a 0a                 a3 = a3 + s0
 50577: 82 ab 10                 a4 = u64 [a3 + 0x10]
 50580: 82 17 30                 a0 = u64 [sp + 0x30]
 50583: c8 c7 07                 a0 = a0 + a5
 50586: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 50589: ae b8 4b 02              jump @3764 if a1 >=u a4
      :                          @3731
 50593: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 50597: 82 a7 08                 a0 = u64 [a3 + 0x8]
 50600: 97 80 03                 ra = a1 << 0x3
 50603: c8 07 07                 a0 = a0 + ra
 50606: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 50609: 7b 18 98 00              u64 [sp + 0x98] = a1
 50613: ae 8c b6                 jump @3728 if a5 >=u a1
      :                          @3732
 50616: 95 a7 10                 a0 = a3 + 0x10
 50619: 7b 17 90 00              u64 [sp + 0x90] = a0
 50623: 82 18 78                 a1 = u64 [sp + 0x78]
 50626: ae 8c 4f 02              jump @3770 if a5 >=u a1
      :                          @3733
 50630: 33 09                    a2 = 0
 50632: 95 aa 08                 a3 = a3 + 0x8
 50635: 7b 1a 70                 u64 [sp + 0x70] = a3
 50638: 97 c3 03                 t1 = a5 << 0x3
 50641: 82 18 40                 a1 = u64 [sp + 0x40]
 50644: c8 38 07                 a0 = a1 + t1
 50647: 7b 17 68                 u64 [sp + 0x68] = a0
 50650: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 50654: 97 77 03                 a0 = a0 << 0x3
 50657: c8 87 07                 a0 = a0 + a1
 50660: 7b 17 60                 u64 [sp + 0x60] = a0
 50663: 82 17 20                 a0 = u64 [sp + 0x20]
 50666: c8 c7 07                 a0 = a0 + a5
 50669: 7b 17 80 00              u64 [sp + 0x80] = a0
 50673: 82 17 18                 a0 = u64 [sp + 0x18]
 50676: c8 c7 07                 a0 = a0 + a5
 50679: 7b 17 88 00              u64 [sp + 0x88] = a0
 50683: 82 18 38                 a1 = u64 [sp + 0x38]
 50686: c8 85 05                 s0 = s0 + a1
 50689: 01                       fallthrough
      :                          @3734
 50690: 82 17 90 00              a0 = u64 [sp + 0x90]
 50694: 82 7b                    a4 = u64 [a0]
 50696: 64 c7                    a0 = a5
 50698: c8 9c 0c                 a5 = a5 + a2
 50701: ae bc 2a 02              jump @3774 if a5 >=u a4
      :                          @3735
 50705: 82 1c 88 00              a5 = u64 [sp + 0x88]
 50709: c8 9c 0c                 a5 = a5 + a2
 50712: 51 0c cd 01              jump @3761 if a5 == 0
      :                          @3736
 50716: 82 56                    s1 = u64 [s0]
 50718: 82 1a 98 00              a3 = u64 [sp + 0x98]
 50722: ae 6a 16 02              jump @3775 if a3 >=u s1
      :                          @3737
 50726: 82 1c 80 00              a5 = u64 [sp + 0x80]
 50730: c8 9c 0c                 a5 = a5 + a2
 50733: 51 0c 0c 02              jump @3776 if a5 == 0
      :                          @3738
 50737: 82 18 78                 a1 = u64 [sp + 0x78]
 50740: 82 1c a0 00              a5 = u64 [sp + 0xa0]
 50744: ae 8c af 01              jump @3763 if a5 >=u a1
      :                          @3739
 50748: ae ba ad 01              jump @3765 if a3 >=u a4
      :                          @3740
 50752: 82 18 70                 a1 = u64 [sp + 0x70]
 50755: 82 8b                    a4 = u64 [a1]
 50757: 82 5c f8                 a5 = u64 [s0 + 0xfffffffffffffff8]
 50760: c8 3b 0a                 a3 = a4 + t1
 50763: 82 aa                    a3 = u64 [a3]
 50765: c8 0c 0c                 a5 = a5 + ra
 50768: 82 cc                    a5 = u64 [a5]
 50770: c8 ca 0a                 a3 = a3 + a5
 50773: 82 18 68                 a1 = u64 [sp + 0x68]
 50776: 82 8c                    a5 = u64 [a1]
 50778: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 50782: c8 36 06                 s1 = s1 + t1
 50785: 82 18 60                 a1 = u64 [sp + 0x60]
 50788: 82 84                    t2 = u64 [a1]
 50790: 82 66                    s1 = u64 [s1]
 50792: c8 0b 0b                 a4 = a4 + ra
 50795: 82 b2                    t0 = u64 [a4]
 50797: ca 4c 0c                 a5 = a5 * t2
 50800: ca c6 0c                 a5 = s1 * a5
 50803: c8 ca 0a                 a3 = a3 + a5
 50806: e6 a2 0a                 a3 = minu(t0, a3)
 50809: 7b ba                    u64 [a4] = a3
 50811: 95 99 01                 a2 = a2 + 0x1
 50814: 95 33 08                 t1 = t1 + 0x8
 50817: 95 55 18                 s0 = s0 + 0x18
 50820: 64 7c                    a5 = a0
 50822: 82 17 58                 a0 = u64 [sp + 0x58]
 50825: ab 97 79 ff              jump @3734 if a0 != a2
      :                          @3741
 50829: 28 de fe                 jump @3728
      :                          @3742
 50832: 82 17                    a0 = u64 [sp]
 50834: 85 77 01                 a0 = a0 ^ 0x1
 50837: 82 1b 10                 a4 = u64 [sp + 0x10]
 50840: 82 1c 08                 a5 = u64 [sp + 0x8]
 50843: d8 cb 09                 a2 = a4 <u a5
 50846: d4 97 07                 a0 = a0 | a2
 50849: 51 07 a8 fe              jump @3727 if a0 == 0
      :                          @3743
 50853: 28 32 01                 jump @3759
      :                          @3744
 50856: 9a 87 01                 a0 = 0x1 - a1
 50859: 7b 17 80 00              u64 [sp + 0x80] = a0
 50863: 33 09 02                 a2 = 0x2
 50866: 82 1b 10                 a4 = u64 [sp + 0x10]
 50869: 01                       fallthrough
      :                          @3745
 50870: 33 0c                    a5 = 0
 50872: d8 b9 07                 a0 = a2 <u a4
 50875: 7b 17 30                 u64 [sp + 0x30] = a0
 50878: c8 97 07                 a0 = a0 + a2
 50881: 7b 17 58                 u64 [sp + 0x58] = a0
 50884: c9 9b 0b                 a4 = a4 - a2
 50887: 7b 1b 60                 u64 [sp + 0x60] = a4
 50890: 7b 19 68                 u64 [sp + 0x68] = a2
 50893: 28 24                    jump @3747
      :                          @3746
 50895: 82 1c 70                 a5 = u64 [sp + 0x70]
 50898: 82 18 60                 a1 = u64 [sp + 0x60]
 50901: d8 8c 07                 a0 = a5 <u a1
 50904: c8 7c 0c                 a5 = a5 + a0
 50907: d8 c8 08                 a1 = a1 <u a5
 50910: 85 88 01                 a1 = a1 ^ 0x1
 50913: d2 87 07                 a0 = a0 & a1
 50916: 82 18 50                 a1 = u64 [sp + 0x50]
 50919: 82 1a 48                 a3 = u64 [sp + 0x48]
 50922: 82 19 68                 a2 = u64 [sp + 0x68]
 50925: 51 07 d2 00              jump @3758 if a0 == 0
      :                          @3747
 50929: ae 8c 45 01              jump @3773 if a5 >=u a1
      :                          @3748
 50933: 96 c3 18                 t1 = a5 * 0x18
 50936: c8 3a 04                 t2 = a3 + t1
 50939: 82 4b 10                 a4 = u64 [t2 + 0x10]
 50942: c8 9c 00                 ra = a5 + a2
 50945: 95 0a ff                 a3 = ra + 0xffffffffffffffff
 50948: ae ba e5 00              jump @3765 if a3 >=u a4
      :                          @3749
 50952: 82 48 08                 a1 = u64 [t2 + 0x8]
 50955: 97 a2 03                 t0 = a3 << 0x3
 50958: c8 28 08                 a1 = a1 + t0
 50961: 49 08 ff                 u64 [a1 + 0] = 0xffffffffffffffff
 50964: 7b 1c 70                 u64 [sp + 0x70] = a5
 50967: ae ac b8                 jump @3746 if a5 >=u a3
      :                          @3750
 50970: 95 47 10                 a0 = t2 + 0x10
 50973: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 50977: 82 18 78                 a1 = u64 [sp + 0x78]
 50980: ae 80 c6 00              jump @3766 if ra >=u a1
      :                          @3751
 50984: 95 44 08                 t2 = t2 + 0x8
 50987: 7b 14 98 00              u64 [sp + 0x98] = t2
 50991: 82 1c 70                 a5 = u64 [sp + 0x70]
 50994: 97 c8 03                 a1 = a5 << 0x3
 50997: 82 17 40                 a0 = u64 [sp + 0x40]
 51000: c8 87 09                 a2 = a0 + a1
 51003: 7b 19 90 00              u64 [sp + 0x90] = a2
 51007: 97 00 03                 ra = ra << 0x3
 51010: c8 07 07                 a0 = a0 + ra
 51013: 7b 17 88 00              u64 [sp + 0x88] = a0
 51017: 82 17 38                 a0 = u64 [sp + 0x38]
 51020: c8 73 03                 t1 = t1 + a0
 51023: 01                       fallthrough
      :                          @3752
 51024: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 51028: 82 7b                    a4 = u64 [a0]
 51030: ae bc e1 00              jump @3774 if a5 >=u a4
      :                          @3753
 51034: 82 16 80 00              s1 = u64 [sp + 0x80]
 51038: c8 c6 06                 s1 = s1 + a5
 51041: 51 06 84 00              jump @3761 if s1 == 0
      :                          @3754
 51045: 82 36                    s1 = u64 [t1]
 51047: ae 6a d1 00              jump @3775 if a3 >=u s1
      :                          @3755
 51051: ae ba 7e                 jump @3765 if a3 >=u a4
      :                          @3756
 51054: 82 17 98 00              a0 = u64 [sp + 0x98]
 51058: 82 7b                    a4 = u64 [a0]
 51060: 82 36 f8                 s1 = u64 [t1 + 0xfffffffffffffff8]
 51063: 64 a0                    ra = a3
 51065: c8 8b 0a                 a3 = a4 + a1
 51068: 82 aa                    a3 = u64 [a3]
 51070: c8 26 06                 s1 = s1 + t0
 51073: 82 66                    s1 = u64 [s1]
 51075: c8 6a 0a                 a3 = a3 + s1
 51078: 82 17 90 00              a0 = u64 [sp + 0x90]
 51082: 82 76                    s1 = u64 [a0]
 51084: 82 14 a8 00              t2 = u64 [sp + 0xa8]
 51088: c8 84 04                 t2 = t2 + a1
 51091: 82 17 88 00              a0 = u64 [sp + 0x88]
 51095: 82 75                    s0 = u64 [a0]
 51097: 82 49                    a2 = u64 [t2]
 51099: c8 2b 0b                 a4 = a4 + t0
 51102: 82 b7                    a0 = u64 [a4]
 51104: ca 56 06                 s1 = s1 * s0
 51107: ca 69 09                 a2 = a2 * s1
 51110: c8 a9 09                 a2 = a2 + a3
 51113: 64 0a                    a3 = ra
 51115: e6 97 07                 a0 = minu(a0, a2)
 51118: 7b b7                    u64 [a4] = a0
 51120: 95 cc 01                 a5 = a5 + 0x1
 51123: 95 88 08                 a1 = a1 + 0x8
 51126: 95 33 18                 t1 = t1 + 0x18
 51129: ab c0 97                 jump @3752 if ra != a5
      :                          @3757
 51132: 28 13 ff                 jump @3746
      :                          @3758
 51135: 82 17 30                 a0 = u64 [sp + 0x30]
 51138: 85 77 01                 a0 = a0 ^ 0x1
 51141: 82 1b 10                 a4 = u64 [sp + 0x10]
 51144: 82 1c 58                 a5 = u64 [sp + 0x58]
 51147: d8 cb 09                 a2 = a4 <u a5
 51150: d4 97 07                 a0 = a0 | a2
 51153: 64 c9                    a2 = a5
 51155: 51 07 e3 fe              jump @3745 if a0 == 0
      :                          @3759
 51159: 82 17 78                 a0 = u64 [sp + 0x78]
 51162: 82 a9 10                 a2 = u64 [a3 + 0x10]
 51165: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 51168: ac 97 93 fc              jump @3706 if a0 <u a2
      :                          @3760
 51172: 00                       trap
      :                          @3761
 51173: 00                       trap
      :                          @3762
 51174: 00                       trap
      :                          @3763
 51175: 00                       trap
      :                          @3764
 51176: 00                       trap
      :                          @3765
 51177: 00                       trap
      :                          @3766
 51178: 64 a5                    s0 = a3
 51180: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 51184: 82 7b                    a4 = u64 [a0]
 51186: 82 1a 48                 a3 = u64 [sp + 0x48]
 51189: 82 1c 70                 a5 = u64 [sp + 0x70]
 51192: ae bc 3f                 jump @3774 if a5 >=u a4
      :                          @3767
 51195: 95 cb 01                 a4 = a5 + 0x1
 51198: 82 19 50                 a2 = u64 [sp + 0x50]
 51201: ae 9b e5                 jump @3762 if a4 >=u a2
      :                          @3768
 51204: 96 b7 18                 a0 = a4 * 0x18
 51207: c8 a7 07                 a0 = a0 + a3
 51210: 82 76 10                 s1 = u64 [a0 + 0x10]
 51213: ae 65 2b                 jump @3775 if s0 >=u s1
      :                          @3769
 51216: 00                       trap
      :                          @3770
 51217: 82 17 90 00              a0 = u64 [sp + 0x90]
 51221: 82 7b                    a4 = u64 [a0]
 51223: ae bc 20                 jump @3774 if a5 >=u a4
      :                          @3771
 51226: 95 cb 01                 a4 = a5 + 0x1
 51229: 82 19 50                 a2 = u64 [sp + 0x50]
 51232: 82 1a 48                 a3 = u64 [sp + 0x48]
 51235: ae 9b c3                 jump @3762 if a4 >=u a2
      :                          @3772
 51238: 96 b7 18                 a0 = a4 * 0x18
 51241: c8 a7 07                 a0 = a0 + a3
 51244: 82 76 10                 s1 = u64 [a0 + 0x10]
 51247: 82 1a 98 00              a3 = u64 [sp + 0x98]
 51251: ae 6a 05                 jump @3775 if a3 >=u s1
      :                          @3773
 51254: 00                       trap
      :                          @3774
 51255: 00                       trap
      :                          @3775
 51256: 00                       trap
      :                          @3776
 51257: 00                       trap
      :                          @3777
 51258: 00                       trap
      :                          @3778
 51259: 49 21 b0 00              u64 [sp + 176] = 0
 51263: 49 21 b8 00 08           u64 [sp + 184] = 0x8
 51268: 49 21 c0 00              u64 [sp + 192] = 0
 51272: 00                       trap
      :                          @3779
 51273: 00                       trap
      :                          @3780
 51274: 00                       trap
      :                          @3781
 51275: 95 11 68 ff              sp = sp + 0xffffffffffffff68
 51279: 7b 10 90 00              u64 [sp + 0x90] = ra
 51283: 7b 15 88 00              u64 [sp + 0x88] = s0
 51287: 7b 16 80 00              u64 [sp + 0x80] = s1
 51291: 7b 18 10                 u64 [sp + 0x10] = a1
 51294: 7b 17 48                 u64 [sp + 0x48] = a0
 51297: 51 08 90 00              jump @3793 if a1 == 0
      :                          @3782
 51301: 98 87 3c                 a0 = a1 >> 0x3c
 51304: 52 07 6d 04              jump @3887 if a0 != 0
      :                          @3783
 51308: 88 72 01                 t0 = a0 <u 0x1
 51311: 97 89 03                 a2 = a1 << 0x3
 51314: 97 22 03                 t0 = t0 << 0x3
 51317: 33 04 c0 22 03           t2 = 0x322c0
 51322: 33 03 00 00 01           t1 = 0x10000
 51327: c8 34 0b                 a4 = t2 + t1
 51330: 01                       fallthrough
      :                          @3784
 51331: 82 b6                    s1 = u64 [a4]
 51333: c8 96 0c                 a5 = s1 + a2
 51336: ac 6c 4b 04              jump @3885 if a5 <u s1
      :                          @3785
 51340: c8 2c 0a                 a3 = a5 + t0
 51343: d8 ca 05                 s0 = a3 <u a5
 51346: d8 a3 0a                 a3 = t1 <u a3
 51349: d4 5a 0a                 a3 = a3 | s0
 51352: 52 0a 3b 04              jump @3885 if a3 != 0
      :                          @3786
 51356: c9 c4 05                 s0 = t2 - a5
 51359: c8 35 05                 s0 = s0 + t1
 51362: 84 5a 07                 a3 = s0 & 0x7
 51365: c8 ac 0c                 a5 = a5 + a3
 51368: 01                       fallthrough
      :                          @3787
 51369: 82 b7                    a0 = u64 [a4]
 51371: ab 67 d8                 jump @3784 if a0 != s1
      :                          @3788
 51374: 7b bc                    u64 [a4] = a5
 51376: c9 a5 05                 s0 = s0 - a3
 51379: 64 57                    a0 = s0
 51381: 33 08                    a1 = 0
 51383: 50 20 f4 02 a2 42 02     ra = 756, jump @13675
      :                          @3789 [@dyn 378]
 51390: 82 16 10                 s1 = u64 [sp + 0x10]
 51393: 7b 16 68                 u64 [sp + 0x68] = s1
 51396: 7b 15 70                 u64 [sp + 0x70] = s0
 51399: 7b 16 78                 u64 [sp + 0x78] = s1
 51402: 95 17 50                 a0 = sp + 0x50
 51405: 95 18 68                 a1 = sp + 0x68
 51408: 64 69                    a2 = s1
 51410: 50 20 f6 02 42 95        ra = 758, jump @1783
      :                          @3790 [@dyn 379]
 51416: 95 65 01                 s0 = s1 + 0x1
 51419: 51 05 fb 03              jump @3888 if s0 == 0
      :                          @3791
 51423: 98 57 3c                 a0 = s0 >> 0x3c
 51426: 52 07 f3 03              jump @3887 if a0 != 0
      :                          @3792
 51430: 88 77 01                 a0 = a0 <u 0x1
 51433: 7b 15 38                 u64 [sp + 0x38] = s0
 51436: 97 59 03                 a2 = s0 << 0x3
 51439: 28 1c                    jump @3794
      :                          @3793
 51441: 49 11 50                 u64 [sp + 80] = 0
 51444: 49 11 58 08              u64 [sp + 88] = 0x8
 51448: 49 11 60                 u64 [sp + 96] = 0
 51451: 95 88 01                 a1 = a1 + 0x1
 51454: 98 87 3c                 a0 = a1 >> 0x3c
 51457: 88 77 01                 a0 = a0 <u 0x1
 51460: 7b 18 38                 u64 [sp + 0x38] = a1
 51463: 97 89 03                 a2 = a1 << 0x3
 51466: 01                       fallthrough
      :                          @3794
 51467: 97 72 03                 t0 = a0 << 0x3
 51470: 33 04 c0 22 03           t2 = 0x322c0
 51475: 33 03 00 00 01           t1 = 0x10000
 51480: c8 34 0a                 a3 = t2 + t1
 51483: 01                       fallthrough
      :                          @3795
 51484: 82 ab                    a4 = u64 [a3]
 51486: c8 9b 0c                 a5 = a4 + a2
 51489: ac bc b2 03              jump @3885 if a5 <u a4
      :                          @3796
 51493: c8 2c 07                 a0 = a5 + t0
 51496: d8 c7 06                 s1 = a0 <u a5
 51499: d8 73 07                 a0 = t1 <u a0
 51502: d4 67 07                 a0 = a0 | s1
 51505: 52 07 a2 03              jump @3885 if a0 != 0
      :                          @3797
 51509: c9 c4 06                 s1 = t2 - a5
 51512: c8 36 08                 a1 = s1 + t1
 51515: 84 86 07                 s1 = a1 & 0x7
 51518: c8 6c 0c                 a5 = a5 + s1
 51521: 01                       fallthrough
      :                          @3798
 51522: 82 a7                    a0 = u64 [a3]
 51524: ab b7 d8                 jump @3795 if a0 != a4
      :                          @3799
 51527: 7b ac                    u64 [a3] = a5
 51529: 33 05                    s0 = 0
 51531: c9 68 06                 s1 = a1 - s1
 51534: 64 67                    a0 = s1
 51536: 33 08                    a1 = 0
 51538: 7b 19 18                 u64 [sp + 0x18] = a2
 51541: 50 20 f8 02 04 42 02     ra = 760, jump @13675
      :                          @3800 [@dyn 380]
 51548: 82 18 10                 a1 = u64 [sp + 0x10]
 51551: 51 08 79 01              jump @3829 if a1 == 0
      :                          @3801
 51555: 82 15 38                 s0 = u64 [sp + 0x38]
 51558: 51 18 ff 70 03           jump @3888 if a1 == 4294967295
      :                          @3802
 51563: 33 07 01                 a0 = 0x1
 51566: 82 12 48                 t0 = u64 [sp + 0x48]
 51569: 01                       fallthrough
      :                          @3803
 51570: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
 51573: ae 5a 62 03              jump @3889 if a3 >=u s0
      :                          @3804
 51577: ae 8a 4a 03              jump @3878 if a3 >=u a1
      :                          @3805
 51581: ae 57 54 03              jump @3883 if a0 >=u s0
      :                          @3806
 51585: d8 87 09                 a2 = a0 <u a1
 51588: 97 ab 03                 a4 = a3 << 0x3
 51591: c8 b6 0a                 a3 = s1 + a4
 51594: 82 aa                    a3 = u64 [a3]
 51596: c8 2b 0b                 a4 = a4 + t0
 51599: 82 bc                    a5 = u64 [a4]
 51601: 97 7b 03                 a4 = a0 << 0x3
 51604: c8 97 07                 a0 = a0 + a2
 51607: 85 99 01                 a2 = a2 ^ 0x1
 51610: c8 6b 0b                 a4 = a4 + s1
 51613: c8 ac 0c                 a5 = a5 + a3
 51616: d8 78 0a                 a3 = a1 <u a0
 51619: d4 a9 09                 a2 = a2 | a3
 51622: 7b bc                    u64 [a4] = a5
 51624: 51 09 ca                 jump @3803 if a2 == 0
      :                          @3807
 51627: 7b 16 28                 u64 [sp + 0x28] = s1
 51630: 82 17 60                 a0 = u64 [sp + 0x60]
 51633: 82 19 58                 a2 = u64 [sp + 0x58]
 51636: 7b 19 48                 u64 [sp + 0x48] = a2
 51639: 7b 17 40                 u64 [sp + 0x40] = a0
 51642: ae 75 fc 01              jump @3856 if s0 >=u a0
      :                          @3808
 51646: 33 0a 01                 a3 = 0x1
 51649: 28 17                    jump @3810
      :                          @3809
 51651: 82 17                    a0 = u64 [sp]
 51653: 85 77 01                 a0 = a0 ^ 0x1
 51656: 82 18 10                 a1 = u64 [sp + 0x10]
 51659: 82 1a 08                 a3 = u64 [sp + 0x8]
 51662: d8 a8 09                 a2 = a1 <u a3
 51665: d4 97 07                 a0 = a0 | a2
 51668: 52 07 f0 02              jump @3879 if a0 != 0
      :                          @3810
 51672: 33 06                    s1 = 0
 51674: d8 8a 07                 a0 = a3 <u a1
 51677: 7b 17                    u64 [sp] = a0
 51679: c8 a7 07                 a0 = a0 + a3
 51682: 7b 17 08                 u64 [sp + 0x8] = a0
 51685: 7b 1a 30                 u64 [sp + 0x30] = a3
 51688: c9 a8 08                 a1 = a1 - a3
 51691: 7b 18 20                 u64 [sp + 0x20] = a1
 51694: 28 1a                    jump @3812
      :                          @3811
 51696: 82 18 20                 a1 = u64 [sp + 0x20]
 51699: d8 86 07                 a0 = s1 <u a1
 51702: c8 76 06                 s1 = s1 + a0
 51705: d8 68 09                 a2 = a1 <u s1
 51708: 85 99 01                 a2 = a2 ^ 0x1
 51711: d2 97 07                 a0 = a0 & a2
 51714: 82 15 38                 s0 = u64 [sp + 0x38]
 51717: 51 07 be                 jump @3809 if a0 == 0
      :                          @3812
 51720: 82 18 40                 a1 = u64 [sp + 0x40]
 51723: ae 86 c4 02              jump @3881 if s1 >=u a1
      :                          @3813
 51727: 96 60 18                 ra = s1 * 0x18
 51730: 82 17 48                 a0 = u64 [sp + 0x48]
 51733: c8 70 00                 ra = ra + a0
 51736: 82 0b 10                 a4 = u64 [ra + 0x10]
 51739: 82 1a 30                 a3 = u64 [sp + 0x30]
 51742: c8 6a 0a                 a3 = a3 + s1
 51745: 95 a9 ff                 a2 = a3 + 0xffffffffffffffff
 51748: ae b9 ac 02              jump @3882 if a2 >=u a4
      :                          @3814
 51752: 82 07 08                 a0 = u64 [ra + 0x8]
 51755: 97 92 03                 t0 = a2 << 0x3
 51758: c8 27 07                 a0 = a0 + t0
 51761: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 51764: ae 5a a3 02              jump @3889 if a3 >=u s0
      :                          @3815
 51768: ae 56 9c 02              jump @3886 if s1 >=u s0
      :                          @3816
 51772: ac 69 b4                 jump @3811 if a2 <u s1
      :                          @3817
 51775: 97 aa 03                 a3 = a3 << 0x3
 51778: 82 18 28                 a1 = u64 [sp + 0x28]
 51781: c8 8a 0a                 a3 = a3 + a1
 51784: 82 a7                    a0 = u64 [a3]
 51786: 97 6a 03                 a3 = s1 << 0x3
 51789: c8 8a 0a                 a3 = a3 + a1
 51792: 82 aa                    a3 = u64 [a3]
 51794: 95 03 10                 t1 = ra + 0x10
 51797: 95 00 08                 ra = ra + 0x8
 51800: c9 a7 05                 s0 = a0 - a3
 51803: 64 67                    a0 = s1
 51805: 01                       fallthrough
      :                          @3818
 51806: ae 76 26                 jump @3823 if s1 >=u a0
      :                          @3819
 51809: 82 3b                    a4 = u64 [t1]
 51811: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
 51814: ae ba 5c 02              jump @3877 if a3 >=u a4
      :                          @3820
 51818: 82 0b                    a4 = u64 [ra]
 51820: 97 aa 03                 a3 = a3 << 0x3
 51823: c8 ba 0a                 a3 = a3 + a4
 51826: 82 ab                    a4 = u64 [a3]
 51828: 82 18 40                 a1 = u64 [sp + 0x40]
 51831: ac 97 15                 jump @3824 if a0 <u a2
      :                          @3821
 51834: 33 04                    t2 = 0
 51836: 82 3a                    a3 = u64 [t1]
 51838: ac a9 33                 jump @3827 if a2 <u a3
      :                          @3822
 51841: 28 40 02                 jump @3876
      :                          @3823
 51844: 33 0b                    a4 = 0
 51846: 82 18 40                 a1 = u64 [sp + 0x40]
 51849: ae 97 f1                 jump @3821 if a0 >=u a2
      :                          @3824
 51852: 95 7a 01                 a3 = a0 + 0x1
 51855: ae 8a 34 02              jump @3878 if a3 >=u a1
      :                          @3825
 51859: 96 ac 18                 a5 = a3 * 0x18
 51862: 82 18 48                 a1 = u64 [sp + 0x48]
 51865: c8 8c 0c                 a5 = a5 + a1
 51868: 82 ca 10                 a3 = u64 [a5 + 0x10]
 51871: ae a9 22 02              jump @3876 if a2 >=u a3
      :                          @3826
 51875: 82 ca 08                 a3 = u64 [a5 + 0x8]
 51878: c8 2a 0a                 a3 = a3 + t0
 51881: 82 a4                    t2 = u64 [a3]
 51883: 82 3a                    a3 = u64 [t1]
 51885: ae a9 14 02              jump @3876 if a2 >=u a3
      :                          @3827
 51889: 82 0a                    a3 = u64 [ra]
 51891: c8 5b 0b                 a4 = a4 + s0
 51894: c8 2a 0a                 a3 = a3 + t0
 51897: 82 ac                    a5 = u64 [a3]
 51899: c8 4b 0b                 a4 = a4 + t2
 51902: d8 97 08                 a1 = a0 <u a2
 51905: c8 87 07                 a0 = a0 + a1
 51908: e6 bc 0b                 a4 = minu(a5, a4)
 51911: d8 79 0c                 a5 = a2 <u a0
 51914: 85 cc 01                 a5 = a5 ^ 0x1
 51917: d2 c8 08                 a1 = a1 & a5
 51920: 7b ab                    u64 [a3] = a4
 51922: 52 08 8c                 jump @3818 if a1 != 0
      :                          @3828
 51925: 28 1b ff                 jump @3811
      :                          @3829
 51928: 82 17 60                 a0 = u64 [sp + 0x60]
 51931: 82 15 38                 s0 = u64 [sp + 0x38]
 51934: 51 07 f0 01              jump @3880 if a0 == 0
      :                          @3830
 51938: 64 72                    t0 = a0
 51940: 82 14 58                 t2 = u64 [sp + 0x58]
 51943: 82 49 10                 a2 = u64 [t2 + 0x10]
 51946: 95 87 ff                 a0 = a1 + 0xffffffffffffffff
 51949: ae 97 e5 01              jump @3884 if a0 >=u a2
      :                          @3831
 51953: 82 48 08                 a1 = u64 [t2 + 0x8]
 51956: 97 77 03                 a0 = a0 << 0x3
 51959: c8 87 07                 a0 = a0 + a1
 51962: 82 77                    a0 = u64 [a0]
 51964: 7b 17 48                 u64 [sp + 0x48] = a0
 51967: 33 07 00 20              a0 = 0x2000
 51971: ac 57 25                 jump @3837 if a0 <u s0
      :                          @3832
 51974: 33 09 c0 22 03           a2 = 0x322c0
 51979: 95 99 00 00 01           a2 = a2 + 0x10000
 51984: 01                       fallthrough
      :                          @3833
 51985: 82 9a                    a3 = u64 [a2]
 51987: c9 a9 08                 a1 = a2 - a3
 51990: ab 68 12                 jump @3837 if a1 != s1
      :                          @3834
 51993: 82 18 18                 a1 = u64 [sp + 0x18]
 51996: c9 8a 08                 a1 = a3 - a1
 51999: 01                       fallthrough
      :                          @3835
 52000: 82 9b                    a4 = u64 [a2]
 52002: ab ab ef                 jump @3833 if a4 != a3
      :                          @3836
 52005: 7b 98                    u64 [a2] = a1
 52007: 01                       fallthrough
      :                          @3837
 52008: 33 0b                    a4 = 0
 52010: 33 0c c0 22 03           a5 = 0x322c0
 52015: 33 08 00 00 01           a1 = 0x10000
 52020: c8 8c 0c                 a5 = a5 + a1
 52023: 33 03 18                 t1 = 0x18
 52026: 28 08                    jump @3839
      :                          @3838
 52028: 95 bb 01                 a4 = a4 + 0x1
 52031: aa 2b 33                 jump @3848 if a4 == t0
      :                          @3839
 52034: ca 3b 0a                 a3 = a4 * t1
 52037: c8 4a 0a                 a3 = a3 + t2
 52040: 82 a9                    a2 = u64 [a3]
 52042: 51 09 f2                 jump @3838 if a2 == 0
      :                          @3840
 52045: ac 97 ef                 jump @3838 if a0 <u a2
      :                          @3841
 52048: 82 a5 08                 s0 = u64 [a3 + 0x8]
 52051: 97 90 03                 ra = a2 << 0x3
 52054: 01                       fallthrough
      :                          @3842
 52055: 82 ca                    a3 = u64 [a5]
 52057: c9 ac 08                 a1 = a5 - a3
 52060: ab 58 e0                 jump @3838 if a1 != s0
      :                          @3843
 52063: c9 0a 08                 a1 = a3 - ra
 52066: 01                       fallthrough
      :                          @3844
 52067: 82 c6                    s1 = u64 [a5]
 52069: ab a6 f2                 jump @3842 if s1 != a3
      :                          @3845
 52072: 7b c8                    u64 [a5] = a1
 52074: 33 09                    a2 = 0
 52076: 01                       fallthrough
      :                          @3846
 52077: ab a6 ea                 jump @3842 if s1 != a3
      :                          @3847
 52080: 28 cc                    jump @3838
      :                          @3848
 52082: 82 18 50                 a1 = u64 [sp + 0x50]
 52085: 51 08 2c                 jump @3855 if a1 == 0
      :                          @3849
 52088: 33 09 aa 0a              a2 = 0xaaa
 52092: ac 89 25                 jump @3855 if a2 <u a1
      :                          @3850
 52095: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 52098: 33 09 c0 22 03           a2 = 0x322c0
 52103: 95 99 00 00 01           a2 = a2 + 0x10000
 52108: 01                       fallthrough
      :                          @3851
 52109: 82 9a                    a3 = u64 [a2]
 52111: c9 a9 0b                 a4 = a2 - a3
 52114: ab 4b 0f                 jump @3855 if a4 != t2
      :                          @3852
 52117: c8 8a 0b                 a4 = a3 + a1
 52120: 01                       fallthrough
      :                          @3853
 52121: 82 9c                    a5 = u64 [a2]
 52123: ab ac f2                 jump @3851 if a5 != a3
      :                          @3854
 52126: 7b 9b                    u64 [a2] = a4
 52128: 01                       fallthrough
      :                          @3855
 52129: 82 17 48                 a0 = u64 [sp + 0x48]
 52132: 82 10 90 00              ra = u64 [sp + 0x90]
 52136: 82 15 88 00              s0 = u64 [sp + 0x88]
 52140: 82 16 80 00              s1 = u64 [sp + 0x80]
 52144: 95 11 98 00              sp = sp + 0x98
 52148: 32 00                    ret
      :                          @3856
 52150: 33 0c 01                 a5 = 0x1
 52153: 28 17                    jump @3858
      :                          @3857
 52155: 82 17                    a0 = u64 [sp]
 52157: 85 77 01                 a0 = a0 ^ 0x1
 52160: 82 18 10                 a1 = u64 [sp + 0x10]
 52163: 82 1c 08                 a5 = u64 [sp + 0x8]
 52166: d8 c8 09                 a2 = a1 <u a5
 52169: d4 97 07                 a0 = a0 | a2
 52172: 52 07 f8 00              jump @3879 if a0 != 0
      :                          @3858
 52176: 33 06                    s1 = 0
 52178: d8 8c 07                 a0 = a5 <u a1
 52181: 7b 17                    u64 [sp] = a0
 52183: c8 c7 07                 a0 = a0 + a5
 52186: 7b 17 08                 u64 [sp + 0x8] = a0
 52189: c9 c8 08                 a1 = a1 - a5
 52192: 7b 18 20                 u64 [sp + 0x20] = a1
 52195: 82 18 40                 a1 = u64 [sp + 0x40]
 52198: 7b 1c 30                 u64 [sp + 0x30] = a5
 52201: 28 1d                    jump @3860
      :                          @3859
 52203: 82 19 20                 a2 = u64 [sp + 0x20]
 52206: d8 96 07                 a0 = s1 <u a2
 52209: c8 76 06                 s1 = s1 + a0
 52212: d8 69 09                 a2 = a2 <u s1
 52215: 85 99 01                 a2 = a2 ^ 0x1
 52218: d2 97 07                 a0 = a0 & a2
 52221: 82 15 38                 s0 = u64 [sp + 0x38]
 52224: 82 1c 30                 a5 = u64 [sp + 0x30]
 52227: 51 07 b8                 jump @3857 if a0 == 0
      :                          @3860
 52230: ae 86 c9 00              jump @3881 if s1 >=u a1
      :                          @3861
 52234: 96 62 18                 t0 = s1 * 0x18
 52237: 82 17 48                 a0 = u64 [sp + 0x48]
 52240: c8 72 02                 t0 = t0 + a0
 52243: 82 2b 10                 a4 = u64 [t0 + 0x10]
 52246: c8 c6 0a                 a3 = s1 + a5
 52249: 95 a9 ff                 a2 = a3 + 0xffffffffffffffff
 52252: ae b9 b4 00              jump @3882 if a2 >=u a4
      :                          @3862
 52256: 82 27 08                 a0 = u64 [t0 + 0x8]
 52259: 97 90 03                 ra = a2 << 0x3
 52262: c8 07 07                 a0 = a0 + ra
 52265: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 52268: ae 5a ab 00              jump @3889 if a3 >=u s0
      :                          @3863
 52272: ac 69 bb                 jump @3859 if a2 <u s1
      :                          @3864
 52275: 97 aa 03                 a3 = a3 << 0x3
 52278: 82 1b 28                 a4 = u64 [sp + 0x28]
 52281: c8 ba 0a                 a3 = a3 + a4
 52284: 82 a7                    a0 = u64 [a3]
 52286: 97 6a 03                 a3 = s1 << 0x3
 52289: c8 ba 0a                 a3 = a3 + a4
 52292: 82 aa                    a3 = u64 [a3]
 52294: 95 25 10                 s0 = t0 + 0x10
 52297: 95 22 08                 t0 = t0 + 0x8
 52300: c9 a7 03                 t1 = a0 - a3
 52303: 64 64                    t2 = s1
 52305: 01                       fallthrough
      :                          @3865
 52306: ae 46 21                 jump @3870 if s1 >=u t2
      :                          @3866
 52309: 82 5b                    a4 = u64 [s0]
 52311: 95 4a ff                 a3 = t2 + 0xffffffffffffffff
 52314: ae ba 68                 jump @3877 if a3 >=u a4
      :                          @3867
 52317: 82 27                    a0 = u64 [t0]
 52319: 97 aa 03                 a3 = a3 << 0x3
 52322: c8 a7 07                 a0 = a0 + a3
 52325: 82 7b                    a4 = u64 [a0]
 52327: ac 94 11                 jump @3871 if t2 <u a2
      :                          @3868
 52330: 33 07                    a0 = 0
 52332: 82 5a                    a3 = u64 [s0]
 52334: ac a9 2c                 jump @3874 if a2 <u a3
      :                          @3869
 52337: 28 50                    jump @3876
      :                          @3870
 52339: 33 0b                    a4 = 0
 52341: ae 94 f5                 jump @3868 if t2 >=u a2
      :                          @3871
 52344: 95 4a 01                 a3 = t2 + 0x1
 52347: ae 8a 48                 jump @3878 if a3 >=u a1
      :                          @3872
 52350: 96 a7 18                 a0 = a3 * 0x18
 52353: 82 1a 48                 a3 = u64 [sp + 0x48]
 52356: c8 a7 07                 a0 = a0 + a3
 52359: 82 7a 10                 a3 = u64 [a0 + 0x10]
 52362: ae a9 37                 jump @3876 if a2 >=u a3
      :                          @3873
 52365: 82 77 08                 a0 = u64 [a0 + 0x8]
 52368: c8 07 07                 a0 = a0 + ra
 52371: 82 77                    a0 = u64 [a0]
 52373: 82 5a                    a3 = u64 [s0]
 52375: ae a9 2a                 jump @3876 if a2 >=u a3
      :                          @3874
 52378: 82 2a                    a3 = u64 [t0]
 52380: c8 3b 0b                 a4 = a4 + t1
 52383: c8 0a 0a                 a3 = a3 + ra
 52386: 82 ac                    a5 = u64 [a3]
 52388: c8 b7 07                 a0 = a0 + a4
 52391: d8 94 0b                 a4 = t2 <u a2
 52394: c8 b4 04                 t2 = t2 + a4
 52397: e6 7c 07                 a0 = minu(a5, a0)
 52400: d8 49 0c                 a5 = a2 <u t2
 52403: 85 cc 01                 a5 = a5 ^ 0x1
 52406: d2 cb 0b                 a4 = a4 & a5
 52409: 7b a7                    u64 [a3] = a0
 52411: 52 0b 97                 jump @3865 if a4 != 0
      :                          @3875
 52414: 28 2d ff                 jump @3859
      :                          @3876
 52417: 00                       trap
      :                          @3877
 52418: 00                       trap
      :                          @3878
 52419: 00                       trap
      :                          @3879
 52420: 82 17 40                 a0 = u64 [sp + 0x40]
 52423: 82 16 28                 s1 = u64 [sp + 0x28]
 52426: 52 07 18 fe              jump @3830 if a0 != 0
      :                          @3880
 52430: 00                       trap
      :                          @3881
 52431: 00                       trap
      :                          @3882
 52432: 00                       trap
      :                          @3883
 52433: 00                       trap
      :                          @3884
 52434: 00                       trap
      :                          @3885
 52435: 00                       trap
      :                          @3886
 52436: 00                       trap
      :                          @3887
 52437: 00                       trap
      :                          @3888
 52438: 00                       trap
      :                          @3889
 52439: 00                       trap
      :                          @3890
 52440: 95 11 60 ff              sp = sp + 0xffffffffffffff60
 52444: 7b 10 98 00              u64 [sp + 0x98] = ra
 52448: 7b 15 90 00              u64 [sp + 0x90] = s0
 52452: 7b 16 88 00              u64 [sp + 0x88] = s1
 52456: 64 a6                    s1 = a3
 52458: 95 a2 01                 t0 = a3 + 0x1
 52461: 7b 19 30                 u64 [sp + 0x30] = a2
 52464: 7b 17                    u64 [sp] = a0
 52466: 7b 18 18                 u64 [sp + 0x18] = a1
 52469: 52 02 0b                 jump @3892 if t0 != 0
      :                          @3891
 52472: 33 09                    a2 = 0
 52474: 33 07 08                 a0 = 0x8
 52477: 28 98 00                 jump @3905
      :                          @3892
 52480: 7b 16 50                 u64 [sp + 0x50] = s1
 52483: 98 27 3c                 a0 = t0 >> 0x3c
 52486: 52 07 0d 03              jump @3971 if a0 != 0
      :                          @3893
 52490: 88 73 01                 t1 = a0 <u 0x1
 52493: 97 27 03                 a0 = t0 << 0x3
 52496: 97 33 03                 t1 = t1 << 0x3
 52499: 33 00 c0 22 03           ra = 0x322c0
 52504: 33 04 00 00 01           t2 = 0x10000
 52509: c8 40 0c                 a5 = ra + t2
 52512: 01                       fallthrough
      :                          @3894
 52513: 82 c5                    s0 = u64 [a5]
 52515: c8 75 06                 s1 = s0 + a0
 52518: ac 56 ea 02              jump @3968 if s1 <u s0
      :                          @3895
 52522: c8 36 0a                 a3 = s1 + t1
 52525: d8 6a 0b                 a4 = a3 <u s1
 52528: d8 a4 0a                 a3 = t2 <u a3
 52531: d4 ba 0a                 a3 = a3 | a4
 52534: 52 0a da 02              jump @3968 if a3 != 0
      :                          @3896
 52538: c9 60 0a                 a3 = ra - s1
 52541: c8 4a 0a                 a3 = a3 + t2
 52544: 84 ab 07                 a4 = a3 & 0x7
 52547: c8 b6 06                 s1 = s1 + a4
 52550: 01                       fallthrough
      :                          @3897
 52551: 82 c8                    a1 = u64 [a5]
 52553: ab 58 d8                 jump @3894 if a1 != s0
      :                          @3898
 52556: 7b c6                    u64 [a5] = s1
 52558: 01                       fallthrough
      :                          @3899
 52559: c9 ba 07                 a0 = a3 - a4
 52562: 53 12 02 28              jump @3903 if t0 <u 2
      :                          @3900
 52566: 14 09 ff ff ff ff ff ff ff 3f a2 = 0x3fffffffffffffff
 52576: 82 16 50                 s1 = u64 [sp + 0x50]
 52579: 64 6b                    a4 = s1
 52581: 64 7c                    a5 = a0
 52583: 82 18 18                 a1 = u64 [sp + 0x18]
 52586: 01                       fallthrough
      :                          @3901
 52587: 7b c9                    u64 [a5] = a2
 52589: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 52592: 95 cc 08                 a5 = a5 + 0x8
 52595: 52 0b f8                 jump @3901 if a4 != 0
      :                          @3902
 52598: 64 69                    a2 = s1
 52600: 28 0d                    jump @3904
      :                          @3903
 52602: 33 09                    a2 = 0
 52604: 64 7c                    a5 = a0
 52606: 82 16 50                 s1 = u64 [sp + 0x50]
 52609: 82 18 18                 a1 = u64 [sp + 0x18]
 52612: 01                       fallthrough
      :                          @3904
 52613: 14 0a ff ff ff ff ff ff ff 3f a3 = 0x3fffffffffffffff
 52623: 7b ca                    u64 [a5] = a3
 52625: 95 99 01                 a2 = a2 + 0x1
 52628: 01                       fallthrough
      :                          @3905
 52629: 7b 12 70                 u64 [sp + 0x70] = t0
 52632: 7b 17 78                 u64 [sp + 0x78] = a0
 52635: 7b 19 80 00              u64 [sp + 0x80] = a2
 52639: 95 89 01                 a2 = a1 + 0x1
 52642: 95 17 58                 a0 = sp + 0x58
 52645: 95 18 70                 a1 = sp + 0x70
 52648: 50 20 fa 02 6c 90        ra = 762, jump @1783
      :                          @3906 [@dyn 381]
 52654: 82 1b 68                 a4 = u64 [sp + 0x68]
 52657: 51 0b 4e 02              jump @3959 if a4 == 0
      :                          @3907
 52661: 82 14 60                 t2 = u64 [sp + 0x60]
 52664: 82 47 10                 a0 = u64 [t2 + 0x10]
 52667: 51 07 53 02              jump @3966 if a0 == 0
      :                          @3908
 52671: 82 47 08                 a0 = u64 [t2 + 0x8]
 52674: 49 07                    u64 [a0 + 0] = 0
 52676: 82 18 18                 a1 = u64 [sp + 0x18]
 52679: 7b 14 20                 u64 [sp + 0x20] = t2
 52682: 7b 1b 28                 u64 [sp + 0x28] = a4
 52685: 51 08 5b                 jump @3917 if a1 == 0
      :                          @3909
 52688: 33 07 01                 a0 = 0x1
 52691: 33 09 18                 a2 = 0x18
 52694: 14 0a ff ff ff ff ff ff ff 3f a3 = 0x3fffffffffffffff
 52704: 01                       fallthrough
      :                          @3910
 52705: ae b7 1f 02              jump @3960 if a0 >=u a4
      :                          @3911
 52709: ca 97 0b                 a4 = a0 * a2
 52712: c8 4b 0b                 a4 = a4 + t2
 52715: 82 bc 10                 a5 = u64 [a4 + 0x10]
 52718: 51 0c 11 02              jump @3959 if a5 == 0
      :                          @3912
 52722: d8 87 0c                 a5 = a0 <u a1
 52725: c8 c7 07                 a0 = a0 + a5
 52728: 82 bb 08                 a4 = u64 [a4 + 0x8]
 52731: 85 c5 01                 s0 = a5 ^ 0x1
 52734: d8 78 0c                 a5 = a1 <u a0
 52737: d4 5c 0c                 a5 = a5 | s0
 52740: 7b ba                    u64 [a4] = a3
 52742: 82 1b 28                 a4 = u64 [sp + 0x28]
 52745: 51 0c d8                 jump @3910 if a5 == 0
      :                          @3913
 52748: 52 06 20                 jump @3918 if s1 != 0
      :                          @3914
 52751: 33 07 01                 a0 = 0x1
 52754: 01                       fallthrough
      :                          @3915
 52755: d8 87 09                 a2 = a0 <u a1
 52758: 85 9a 01                 a3 = a2 ^ 0x1
 52761: c8 97 07                 a0 = a0 + a2
 52764: d8 78 09                 a2 = a1 <u a0
 52767: d4 a9 09                 a2 = a2 | a3
 52770: 51 09 f1                 jump @3915 if a2 == 0
      :                          @3916
 52773: 28 28 01                 jump @3934
      :                          @3917
 52776: 51 06 25 01              jump @3934 if s1 == 0
      :                          @3918
 52780: 33 07 01                 a0 = 0x1
 52783: 14 0a ff ff ff ff ff ff ff 3f a3 = 0x3fffffffffffffff
 52793: 01                       fallthrough
      :                          @3919
 52794: 82 49 10                 a2 = u64 [t2 + 0x10]
 52797: ae 97 c4 01              jump @3961 if a0 >=u a2
      :                          @3920
 52801: d8 67 0c                 a5 = a0 <u s1
 52804: 82 49 08                 a2 = u64 [t2 + 0x8]
 52807: 97 7b 03                 a4 = a0 << 0x3
 52810: c8 c7 07                 a0 = a0 + a5
 52813: 85 cc 01                 a5 = a5 ^ 0x1
 52816: c8 b9 09                 a2 = a2 + a4
 52819: d8 76 0b                 a4 = s1 <u a0
 52822: d4 cb 0b                 a4 = a4 | a5
 52825: 7b 9a                    u64 [a2] = a3
 52827: 51 0b df                 jump @3919 if a4 == 0
      :                          @3921
 52830: 82 1b 28                 a4 = u64 [sp + 0x28]
 52833: 51 08 ec 00              jump @3934 if a1 == 0
      :                          @3922
 52837: 33 0a 01                 a3 = 0x1
 52840: 01                       fallthrough
      :                          @3923
 52841: 95 a9 ff                 a2 = a3 + 0xffffffffffffffff
 52844: ae 89 96 01              jump @3962 if a2 >=u a1
      :                          @3924
 52848: ae b9 93 01              jump @3963 if a2 >=u a4
      :                          @3925
 52852: 64 ac                    a5 = a3
 52854: 64 47                    a0 = t2
 52856: 64 a8                    a1 = a3
 52858: 96 c4 18                 t2 = a5 * 0x18
 52861: c8 74 04                 t2 = t2 + a0
 52864: 95 47 f8                 a0 = t2 + 0xfffffffffffffff8
 52867: 7b 17 50                 u64 [sp + 0x50] = a0
 52870: ae bc 7e 01              jump @3964 if a5 >=u a4
      :                          @3926
 52874: 82 17 18                 a0 = u64 [sp + 0x18]
 52877: d8 78 07                 a0 = a1 <u a0
 52880: 7b 17 08                 u64 [sp + 0x8] = a0
 52883: c8 78 08                 a1 = a1 + a0
 52886: 7b 18 10                 u64 [sp + 0x10] = a1
 52889: 97 99 03                 a2 = a2 << 0x3
 52892: 82 17                    a0 = u64 [sp]
 52894: c8 97 07                 a0 = a0 + a2
 52897: 7b 17 40                 u64 [sp + 0x40] = a0
 52900: 95 47 f0                 a0 = t2 + 0xfffffffffffffff0
 52903: 7b 17 38                 u64 [sp + 0x38] = a0
 52906: 95 47 10                 a0 = t2 + 0x10
 52909: 7b 17 48                 u64 [sp + 0x48] = a0
 52912: 95 44 08                 t2 = t2 + 0x8
 52915: 33 09 01                 a2 = 0x1
 52918: 01                       fallthrough
      :                          @3927
 52919: 95 9b ff                 a4 = a2 + 0xffffffffffffffff
 52922: ae 6b 41 01              jump @3955 if a4 >=u s1
      :                          @3928
 52926: 82 17 50                 a0 = u64 [sp + 0x50]
 52929: 82 7a                    a3 = u64 [a0]
 52931: ae a9 4f 01              jump @3970 if a2 >=u a3
      :                          @3929
 52935: 82 17 48                 a0 = u64 [sp + 0x48]
 52938: 82 7c                    a5 = u64 [a0]
 52940: ae cb 30 01              jump @3956 if a4 >=u a5
      :                          @3930
 52944: ae ab 2d 01              jump @3957 if a4 >=u a3
      :                          @3931
 52948: ae c9 2a 01              jump @3958 if a2 >=u a5
      :                          @3932
 52952: 82 17 40                 a0 = u64 [sp + 0x40]
 52955: 82 7a                    a3 = u64 [a0]
 52957: 97 bb 03                 a4 = a4 << 0x3
 52960: 82 1c 30                 a5 = u64 [sp + 0x30]
 52963: c8 bc 0c                 a5 = a5 + a4
 52966: 82 cc                    a5 = u64 [a5]
 52968: d8 ac 02                 t0 = a5 <u a3
 52971: 82 17 38                 a0 = u64 [sp + 0x38]
 52974: 82 78                    a1 = u64 [a0]
 52976: c9 ca 00                 ra = a3 - a5
 52979: 64 63                    t1 = s1
 52981: 97 96 03                 s1 = a2 << 0x3
 52984: 82 45                    s0 = u64 [t2]
 52986: c8 68 07                 a0 = a1 + s1
 52989: 82 77                    a0 = u64 [a0]
 52991: c8 b8 08                 a1 = a1 + a4
 52994: c8 5b 0b                 a4 = a4 + s0
 52997: 82 bb                    a4 = u64 [a4]
 52999: 82 88                    a1 = u64 [a1]
 53001: c9 ac 0c                 a5 = a5 - a3
 53004: db 20 0c                 a5 = ra if t0 != 0
 53007: e6 b7 07                 a0 = minu(a0, a4)
 53010: e6 87 07                 a0 = minu(a0, a1)
 53013: c8 65 05                 s0 = s0 + s1
 53016: 64 36                    s1 = t1
 53018: d8 39 08                 a1 = a2 <u t1
 53021: c8 89 09                 a2 = a2 + a1
 53024: c8 c7 07                 a0 = a0 + a5
 53027: d8 93 0a                 a3 = t1 <u a2
 53030: 85 aa 01                 a3 = a3 ^ 0x1
 53033: d2 a8 08                 a1 = a1 & a3
 53036: 7b 57                    u64 [s0] = a0
 53038: 52 08 89                 jump @3927 if a1 != 0
      :                          @3933
 53041: 82 17 08                 a0 = u64 [sp + 0x8]
 53044: 85 77 01                 a0 = a0 ^ 0x1
 53047: 82 18 18                 a1 = u64 [sp + 0x18]
 53050: 82 1a 10                 a3 = u64 [sp + 0x10]
 53053: d8 a8 09                 a2 = a1 <u a3
 53056: d4 97 07                 a0 = a0 | a2
 53059: 82 14 20                 t2 = u64 [sp + 0x20]
 53062: 82 1b 28                 a4 = u64 [sp + 0x28]
 53065: 51 07 20 ff              jump @3923 if a0 == 0
      :                          @3934
 53069: ae b8 c0 00              jump @3965 if a1 >=u a4
      :                          @3935
 53073: 33 02 18                 t0 = 0x18
 53076: ca 28 07                 a0 = a1 * t0
 53079: c8 47 07                 a0 = a0 + t2
 53082: 82 79 10                 a2 = u64 [a0 + 0x10]
 53085: ae 96 b2 00              jump @3967 if s1 >=u a2
      :                          @3936
 53089: 82 77 08                 a0 = u64 [a0 + 0x8]
 53092: 33 09                    a2 = 0
 53094: 97 68 03                 a1 = s1 << 0x3
 53097: c8 87 07                 a0 = a0 + a1
 53100: 82 77                    a0 = u64 [a0]
 53102: 33 0b c0 22 03           a4 = 0x322c0
 53107: 95 bb 00 00 01           a4 = a4 + 0x10000
 53112: 33 03 00 20              t1 = 0x2000
 53116: 28 0e                    jump @3938
      :                          @3937
 53118: 95 99 01                 a2 = a2 + 0x1
 53121: 82 14 20                 t2 = u64 [sp + 0x20]
 53124: 82 18 28                 a1 = u64 [sp + 0x28]
 53127: aa 89 33                 jump @3947 if a2 == a1
      :                          @3938
 53130: ca 29 0c                 a5 = a2 * t0
 53133: c8 4c 0c                 a5 = a5 + t2
 53136: 82 c5                    s0 = u64 [a5]
 53138: 51 05 ec                 jump @3937 if s0 == 0
      :                          @3939
 53141: ac 53 e9                 jump @3937 if t1 <u s0
      :                          @3940
 53144: 82 c6 08                 s1 = u64 [a5 + 0x8]
 53147: 97 54 03                 t2 = s0 << 0x3
 53150: 01                       fallthrough
      :                          @3941
 53151: 82 bc                    a5 = u64 [a4]
 53153: c9 cb 08                 a1 = a4 - a5
 53156: ab 68 da                 jump @3937 if a1 != s1
      :                          @3942
 53159: c9 4c 08                 a1 = a5 - t2
 53162: 01                       fallthrough
      :                          @3943
 53163: 82 ba                    a3 = u64 [a4]
 53165: ab ca f2                 jump @3941 if a3 != a5
      :                          @3944
 53168: 7b b8                    u64 [a4] = a1
 53170: 33 05                    s0 = 0
 53172: 01                       fallthrough
      :                          @3945
 53173: ab ca ea                 jump @3941 if a3 != a5
      :                          @3946
 53176: 28 c6                    jump @3937
      :                          @3947
 53178: 82 19 58                 a2 = u64 [sp + 0x58]
 53181: 51 09 2c                 jump @3954 if a2 == 0
      :                          @3948
 53184: 33 08 aa 0a              a1 = 0xaaa
 53188: ac 98 25                 jump @3954 if a1 <u a2
      :                          @3949
 53191: 96 9b e8                 a4 = a2 * 0xffffffffffffffe8
 53194: 33 09 c0 22 03           a2 = 0x322c0
 53199: 95 99 00 00 01           a2 = a2 + 0x10000
 53204: 01                       fallthrough
      :                          @3950
 53205: 82 9a                    a3 = u64 [a2]
 53207: c9 a9 08                 a1 = a2 - a3
 53210: ab 48 0f                 jump @3954 if a1 != t2
      :                          @3951
 53213: c8 ba 08                 a1 = a3 + a4
 53216: 01                       fallthrough
      :                          @3952
 53217: 82 9c                    a5 = u64 [a2]
 53219: ab ac f2                 jump @3950 if a5 != a3
      :                          @3953
 53222: 7b 98                    u64 [a2] = a1
 53224: 01                       fallthrough
      :                          @3954
 53225: 82 10 98 00              ra = u64 [sp + 0x98]
 53229: 82 15 90 00              s0 = u64 [sp + 0x90]
 53233: 82 16 88 00              s1 = u64 [sp + 0x88]
 53237: 95 11 a0 00              sp = sp + 0xa0
 53241: 32 00                    ret
      :                          @3955
 53243: 00                       trap
      :                          @3956
 53244: 00                       trap
      :                          @3957
 53245: 00                       trap
      :                          @3958
 53246: 00                       trap
      :                          @3959
 53247: 00                       trap
      :                          @3960
 53248: 00                       trap
      :                          @3961
 53249: 00                       trap
      :                          @3962
 53250: 00                       trap
      :                          @3963
 53251: 00                       trap
      :                          @3964
 53252: 82 17 50                 a0 = u64 [sp + 0x50]
 53255: 82 7a                    a3 = u64 [a0]
 53257: 53 1a 02 08              jump @3969 if a3 <u 2
      :                          @3965
 53261: 00                       trap
      :                          @3966
 53262: 00                       trap
      :                          @3967
 53263: 00                       trap
      :                          @3968
 53264: 00                       trap
      :                          @3969
 53265: 00                       trap
      :                          @3970
 53266: 00                       trap
      :                          @3971
 53267: 00                       trap
      :                          @3972
 53268: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 53272: 7b 10 88 00              u64 [sp + 0x88] = ra
 53276: 7b 15 80 00              u64 [sp + 0x80] = s0
 53280: 7b 16 78                 u64 [sp + 0x78] = s1
 53283: 64 a5                    s0 = a3
 53285: 7b 19 30                 u64 [sp + 0x30] = a2
 53288: 7b 17 10                 u64 [sp + 0x10] = a0
 53291: 95 a9 01                 a2 = a3 + 0x1
 53294: 33 06 08                 s1 = 0x8
 53297: 7b 18 18                 u64 [sp + 0x18] = a1
 53300: 51 09 68                 jump @3981 if a2 == 0
      :                          @3973
 53303: 98 97 3c                 a0 = a2 >> 0x3c
 53306: 52 07 0c 03              jump @4050 if a0 != 0
      :                          @3974
 53310: 88 72 01                 t0 = a0 <u 0x1
 53313: 7b 19 40                 u64 [sp + 0x40] = a2
 53316: 97 99 03                 a2 = a2 << 0x3
 53319: 97 22 03                 t0 = t0 << 0x3
 53322: 33 04 c0 22 03           t2 = 0x322c0
 53327: 33 03 00 00 01           t1 = 0x10000
 53332: c8 34 00                 ra = t2 + t1
 53335: 01                       fallthrough
      :                          @3975
 53336: 82 06                    s1 = u64 [ra]
 53338: c8 96 0c                 a5 = s1 + a2
 53341: ac 6c e8 02              jump @4049 if a5 <u s1
      :                          @3976
 53345: c8 2c 07                 a0 = a5 + t0
 53348: d8 c7 0a                 a3 = a0 <u a5
 53351: d8 73 07                 a0 = t1 <u a0
 53354: d4 a7 07                 a0 = a0 | a3
 53357: 52 07 d8 02              jump @4049 if a0 != 0
      :                          @3977
 53361: c9 c4 07                 a0 = t2 - a5
 53364: c8 37 07                 a0 = a0 + t1
 53367: 84 7a 07                 a3 = a0 & 0x7
 53370: c8 ac 0c                 a5 = a5 + a3
 53373: 01                       fallthrough
      :                          @3978
 53374: 82 08                    a1 = u64 [ra]
 53376: ab 68 d8                 jump @3975 if a1 != s1
      :                          @3979
 53379: 7b 0c                    u64 [ra] = a5
 53381: 33 0b                    a4 = 0
 53383: c9 a7 06                 s1 = a0 - a3
 53386: 64 67                    a0 = s1
 53388: 33 08                    a1 = 0
 53390: 50 20 fc 02 cb 3a 02     ra = 764, jump @13675
      :                          @3980 [@dyn 382]
 53397: 82 18 18                 a1 = u64 [sp + 0x18]
 53400: 82 19 40                 a2 = u64 [sp + 0x40]
 53403: 01                       fallthrough
      :                          @3981
 53404: 7b 19 60                 u64 [sp + 0x60] = a2
 53407: 7b 16 68                 u64 [sp + 0x68] = s1
 53410: 7b 19 70                 u64 [sp + 0x70] = a2
 53413: 95 89 01                 a2 = a1 + 0x1
 53416: 95 17 48                 a0 = sp + 0x48
 53419: 95 18 60                 a1 = sp + 0x60
 53422: 50 20 fe 02 66 8d        ra = 766, jump @1783
      :                          @3982 [@dyn 383]
 53428: 82 10 18                 ra = u64 [sp + 0x18]
 53431: 51 00 70                 jump @3993 if ra == 0
      :                          @3983
 53434: 82 16 50                 s1 = u64 [sp + 0x50]
 53437: 82 12 58                 t0 = u64 [sp + 0x58]
 53440: 33 07 01                 a0 = 0x1
 53443: 33 0a 18                 a3 = 0x18
 53446: 01                       fallthrough
      :                          @3984
 53447: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 53450: ae 29 6d 02              jump @4039 if a2 >=u t0
      :                          @3985
 53454: ca a9 08                 a1 = a2 * a3
 53457: c8 68 08                 a1 = a1 + s1
 53460: 82 89 10                 a2 = u64 [a1 + 0x10]
 53463: 51 09 5f 02              jump @4038 if a2 == 0
      :                          @3986
 53467: ae 27 5d 02              jump @4040 if a0 >=u t0
      :                          @3987
 53471: ca a7 09                 a2 = a0 * a3
 53474: c8 69 09                 a2 = a2 + s1
 53477: 82 9b 10                 a4 = u64 [a2 + 0x10]
 53480: 51 0b 4e 02              jump @4038 if a4 == 0
      :                          @3988
 53484: 82 88 08                 a1 = u64 [a1 + 0x8]
 53487: d8 07 0b                 a4 = a0 <u ra
 53490: c8 b7 07                 a0 = a0 + a4
 53493: 82 88                    a1 = u64 [a1]
 53495: 85 bb 01                 a4 = a4 ^ 0x1
 53498: 82 99 08                 a2 = u64 [a2 + 0x8]
 53501: d8 70 0c                 a5 = ra <u a0
 53504: d4 cb 0b                 a4 = a4 | a5
 53507: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 53510: 7b 98                    u64 [a2] = a1
 53512: 51 0b bf                 jump @3984 if a4 == 0
      :                          @3989
 53515: 52 05 2f                 jump @3996 if s0 != 0
      :                          @3990
 53518: 33 07 01                 a0 = 0x1
 53521: 01                       fallthrough
      :                          @3991
 53522: d8 07 08                 a1 = a0 <u ra
 53525: 85 89 01                 a2 = a1 ^ 0x1
 53528: c8 87 07                 a0 = a0 + a1
 53531: d8 70 08                 a1 = ra <u a0
 53534: d4 98 08                 a1 = a1 | a2
 53537: 51 08 f1                 jump @3991 if a1 == 0
      :                          @3992
 53540: 28 60 01                 jump @4015
      :                          @3993
 53543: 82 12 58                 t0 = u64 [sp + 0x58]
 53546: 51 05 5a 01              jump @4015 if s0 == 0
      :                          @3994
 53550: 51 02 08 02              jump @4038 if t0 == 0
      :                          @3995
 53554: 82 16 50                 s1 = u64 [sp + 0x50]
 53557: 33 07 01                 a0 = 0x1
 53560: 28 06                    jump @3997
      :                          @3996
 53562: 33 07 01                 a0 = 0x1
 53565: 01                       fallthrough
      :                          @3997
 53566: 82 6a 10                 a3 = u64 [s1 + 0x10]
 53569: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 53572: ae a9 f5 01              jump @4041 if a2 >=u a3
      :                          @3998
 53576: ae a7 f2 01              jump @4042 if a0 >=u a3
      :                          @3999
 53580: 82 68 08                 a1 = u64 [s1 + 0x8]
 53583: d8 57 0a                 a3 = a0 <u s0
 53586: 97 99 03                 a2 = a2 << 0x3
 53589: c8 89 09                 a2 = a2 + a1
 53592: 82 99                    a2 = u64 [a2]
 53594: 97 7b 03                 a4 = a0 << 0x3
 53597: c8 a7 07                 a0 = a0 + a3
 53600: 85 aa 01                 a3 = a3 ^ 0x1
 53603: c8 b8 08                 a1 = a1 + a4
 53606: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 53609: d8 75 0b                 a4 = s0 <u a0
 53612: d4 ba 0a                 a3 = a3 | a4
 53615: 7b 89                    u64 [a1] = a2
 53617: 51 0a cd                 jump @3997 if a3 == 0
      :                          @4000
 53620: 51 00 10 01              jump @4015 if ra == 0
      :                          @4001
 53624: 33 07 01                 a0 = 0x1
 53627: 7b 12 08                 u64 [sp + 0x8] = t0
 53630: 7b 16                    u64 [sp] = s1
 53632: 01                       fallthrough
      :                          @4002
 53633: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 53636: ae 09 b7 01              jump @4043 if a2 >=u ra
      :                          @4003
 53640: ae 29 af 01              jump @4039 if a2 >=u t0
      :                          @4004
 53644: 96 73 18                 t1 = a0 * 0x18
 53647: c8 36 0a                 a3 = s1 + t1
 53650: 95 a6 f8                 s1 = a3 + 0xfffffffffffffff8
 53653: ae 27 a7 01              jump @4044 if a0 >=u t0
      :                          @4005
 53657: d8 07 08                 a1 = a0 <u ra
 53660: 7b 18 20                 u64 [sp + 0x20] = a1
 53663: c8 87 07                 a0 = a0 + a1
 53666: 7b 17 28                 u64 [sp + 0x28] = a0
 53669: 82 17 10                 a0 = u64 [sp + 0x10]
 53672: c8 97 07                 a0 = a0 + a2
 53675: 7b 17 38                 u64 [sp + 0x38] = a0
 53678: 95 a2 f0                 t0 = a3 + 0xfffffffffffffff0
 53681: 95 ac 10                 a5 = a3 + 0x10
 53684: 95 aa 08                 a3 = a3 + 0x8
 53687: 7b 1a 40                 u64 [sp + 0x40] = a3
 53690: 33 09 01                 a2 = 0x1
 53693: 01                       fallthrough
      :                          @4006
 53694: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 53697: ae 5a 74 01              jump @4037 if a3 >=u s0
      :                          @4007
 53701: 82 6b                    a4 = u64 [s1]
 53703: ae ba 7b 01              jump @4046 if a3 >=u a4
      :                          @4008
 53707: 82 cb                    a4 = u64 [a5]
 53709: ae b9 67 01              jump @4036 if a2 >=u a4
      :                          @4009
 53713: 82 17 38                 a0 = u64 [sp + 0x38]
 53716: 7c 78                    a1 = u8 [a0]
 53718: 82 1b 30                 a4 = u64 [sp + 0x30]
 53721: c8 ab 0b                 a4 = a4 + a3
 53724: 7c bb                    a4 = u8 [a4]
 53726: d3 b8 08                 a1 = a1 ^ a4
 53729: 64 cb                    a4 = a5
 53731: 82 27                    a0 = u64 [t0]
 53733: 88 88 01                 a1 = a1 <u 0x1
 53736: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 53739: 97 a4 03                 t2 = a3 << 0x3
 53742: c8 47 07                 a0 = a0 + t2
 53745: 82 1c 40                 a5 = u64 [sp + 0x40]
 53748: 82 c0                    ra = u64 [a5]
 53750: 82 7c                    a5 = u64 [a0]
 53752: 86 87 02                 a0 = a1 | 0x2
 53755: 97 98 03                 a1 = a2 << 0x3
 53758: c8 80 00                 ra = ra + a1
 53761: c8 c7 07                 a0 = a0 + a5
 53764: 7b 07                    u64 [ra] = a0
 53766: 64 bc                    a5 = a4
 53768: 82 bb                    a4 = u64 [a4]
 53770: ae b9 2a 01              jump @4036 if a2 >=u a4
      :                          @4010
 53774: 82 6b                    a4 = u64 [s1]
 53776: ae b9 24 01              jump @4036 if a2 >=u a4
      :                          @4011
 53780: 64 23                    t1 = t0
 53782: 64 60                    ra = s1
 53784: 82 17 40                 a0 = u64 [sp + 0x40]
 53787: 82 77                    a0 = u64 [a0]
 53789: 82 3b                    a4 = u64 [t1]
 53791: c8 87 07                 a0 = a0 + a1
 53794: c8 8b 0b                 a4 = a4 + a1
 53797: 82 bb                    a4 = u64 [a4]
 53799: 82 76                    s1 = u64 [a0]
 53801: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 53804: e3 b6 0b                 a4 = maxs(s1, a4)
 53807: 7b 7b                    u64 [a0] = a4
 53809: 82 cb                    a4 = u64 [a5]
 53811: ae b9 01 01              jump @4036 if a2 >=u a4
      :                          @4012
 53815: ae ba 0b 01              jump @4046 if a3 >=u a4
      :                          @4013
 53819: 64 32                    t0 = t1
 53821: 82 17 40                 a0 = u64 [sp + 0x40]
 53824: 82 77                    a0 = u64 [a0]
 53826: c8 78 08                 a1 = a1 + a0
 53829: c8 47 07                 a0 = a0 + t2
 53832: 82 77                    a0 = u64 [a0]
 53834: 82 8a                    a3 = u64 [a1]
 53836: d8 59 0b                 a4 = a2 <u s0
 53839: c8 b9 09                 a2 = a2 + a4
 53842: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 53845: e3 7a 07                 a0 = maxs(a3, a0)
 53848: d8 95 0a                 a3 = s0 <u a2
 53851: 85 aa 01                 a3 = a3 ^ 0x1
 53854: d2 ba 0a                 a3 = a3 & a4
 53857: 7b 87                    u64 [a1] = a0
 53859: 64 06                    s1 = ra
 53861: 52 0a 59 ff              jump @4006 if a3 != 0
      :                          @4014
 53865: 82 17 20                 a0 = u64 [sp + 0x20]
 53868: 85 79 01                 a2 = a0 ^ 0x1
 53871: 82 10 18                 ra = u64 [sp + 0x18]
 53874: 82 17 28                 a0 = u64 [sp + 0x28]
 53877: d8 70 08                 a1 = ra <u a0
 53880: d4 98 08                 a1 = a1 | a2
 53883: 82 12 08                 t0 = u64 [sp + 0x8]
 53886: 82 16                    s1 = u64 [sp]
 53888: 51 08 01 ff              jump @4002 if a1 == 0
      :                          @4015
 53892: ae 20 bf 00              jump @4047 if ra >=u t0
      :                          @4016
 53896: 82 14 50                 t2 = u64 [sp + 0x50]
 53899: 33 03 18                 t1 = 0x18
 53902: ca 30 07                 a0 = ra * t1
 53905: c8 47 07                 a0 = a0 + t2
 53908: 82 79 10                 a2 = u64 [a0 + 0x10]
 53911: ae 95 ad 00              jump @4048 if s0 >=u a2
      :                          @4017
 53915: 82 77 08                 a0 = u64 [a0 + 0x8]
 53918: 33 08                    a1 = 0
 53920: 97 59 03                 a2 = s0 << 0x3
 53923: c8 97 07                 a0 = a0 + a2
 53926: 82 77                    a0 = u64 [a0]
 53928: 7b 17 40                 u64 [sp + 0x40] = a0
 53931: 33 09 c0 22 03           a2 = 0x322c0
 53936: 95 9b 00 00 01           a4 = a2 + 0x10000
 53941: 33 07 00 20              a0 = 0x2000
 53945: 28 08                    jump @4019
      :                          @4018
 53947: 95 88 01                 a1 = a1 + 0x1
 53950: aa 28 33                 jump @4028 if a1 == t0
      :                          @4019
 53953: ca 38 0c                 a5 = a1 * t1
 53956: c8 4c 0c                 a5 = a5 + t2
 53959: 82 c5                    s0 = u64 [a5]
 53961: 51 05 f2                 jump @4018 if s0 == 0
      :                          @4020
 53964: ac 57 ef                 jump @4018 if a0 <u s0
      :                          @4021
 53967: 82 c6 08                 s1 = u64 [a5 + 0x8]
 53970: 97 50 03                 ra = s0 << 0x3
 53973: 01                       fallthrough
      :                          @4022
 53974: 82 bc                    a5 = u64 [a4]
 53976: c9 cb 09                 a2 = a4 - a5
 53979: ab 69 e0                 jump @4018 if a2 != s1
      :                          @4023
 53982: c9 0c 09                 a2 = a5 - ra
 53985: 01                       fallthrough
      :                          @4024
 53986: 82 ba                    a3 = u64 [a4]
 53988: ab ca f2                 jump @4022 if a3 != a5
      :                          @4025
 53991: 7b b9                    u64 [a4] = a2
 53993: 33 05                    s0 = 0
 53995: 01                       fallthrough
      :                          @4026
 53996: ab ca ea                 jump @4022 if a3 != a5
      :                          @4027
 53999: 28 cc                    jump @4018
      :                          @4028
 54001: 82 18 48                 a1 = u64 [sp + 0x48]
 54004: 51 08 2c                 jump @4035 if a1 == 0
      :                          @4029
 54007: 33 09 aa 0a              a2 = 0xaaa
 54011: ac 89 25                 jump @4035 if a2 <u a1
      :                          @4030
 54014: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 54017: 33 09 c0 22 03           a2 = 0x322c0
 54022: 95 99 00 00 01           a2 = a2 + 0x10000
 54027: 01                       fallthrough
      :                          @4031
 54028: 82 9b                    a4 = u64 [a2]
 54030: c9 b9 0a                 a3 = a2 - a4
 54033: ab 4a 0f                 jump @4035 if a3 != t2
      :                          @4032
 54036: c8 8b 0a                 a3 = a4 + a1
 54039: 01                       fallthrough
      :                          @4033
 54040: 82 9c                    a5 = u64 [a2]
 54042: ab bc f2                 jump @4031 if a5 != a4
      :                          @4034
 54045: 7b 9a                    u64 [a2] = a3
 54047: 01                       fallthrough
      :                          @4035
 54048: 82 17 40                 a0 = u64 [sp + 0x40]
 54051: 82 10 88 00              ra = u64 [sp + 0x88]
 54055: 82 15 80 00              s0 = u64 [sp + 0x80]
 54059: 82 16 78                 s1 = u64 [sp + 0x78]
 54062: 95 11 90 00              sp = sp + 0x90
 54066: 32 00                    ret
      :                          @4036
 54068: 00                       trap
      :                          @4037
 54069: 00                       trap
      :                          @4038
 54070: 00                       trap
      :                          @4039
 54071: 00                       trap
      :                          @4040
 54072: 00                       trap
      :                          @4041
 54073: 00                       trap
      :                          @4042
 54074: 00                       trap
      :                          @4043
 54075: 00                       trap
      :                          @4044
 54076: 82 68                    a1 = u64 [s1]
 54078: 52 08 fa                 jump @4040 if a1 != 0
      :                          @4045
 54081: 00                       trap
      :                          @4046
 54082: 00                       trap
      :                          @4047
 54083: 00                       trap
      :                          @4048
 54084: 00                       trap
      :                          @4049
 54085: 00                       trap
      :                          @4050
 54086: 00                       trap
      :                          @4051
 54087: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 54091: 7b 10 88 00              u64 [sp + 0x88] = ra
 54095: 7b 15 80 00              u64 [sp + 0x80] = s0
 54099: 7b 16 78                 u64 [sp + 0x78] = s1
 54102: 64 a6                    s1 = a3
 54104: 7b 19 30                 u64 [sp + 0x30] = a2
 54107: 7b 17 10                 u64 [sp + 0x10] = a0
 54110: 95 a9 01                 a2 = a3 + 0x1
 54113: 33 05 08                 s0 = 0x8
 54116: 7b 18 18                 u64 [sp + 0x18] = a1
 54119: 51 09 68                 jump @4060 if a2 == 0
      :                          @4052
 54122: 98 97 3c                 a0 = a2 >> 0x3c
 54125: 52 07 50 02              jump @4112 if a0 != 0
      :                          @4053
 54129: 88 72 01                 t0 = a0 <u 0x1
 54132: 7b 19 40                 u64 [sp + 0x40] = a2
 54135: 97 99 03                 a2 = a2 << 0x3
 54138: 97 22 03                 t0 = t0 << 0x3
 54141: 33 04 c0 22 03           t2 = 0x322c0
 54146: 33 03 00 00 01           t1 = 0x10000
 54151: c8 34 00                 ra = t2 + t1
 54154: 01                       fallthrough
      :                          @4054
 54155: 82 07                    a0 = u64 [ra]
 54157: c8 97 0c                 a5 = a0 + a2
 54160: ac 7c 2a 02              jump @4109 if a5 <u a0
      :                          @4055
 54164: c8 2c 08                 a1 = a5 + t0
 54167: d8 c8 0a                 a3 = a1 <u a5
 54170: d8 83 08                 a1 = t1 <u a1
 54173: d4 a8 08                 a1 = a1 | a3
 54176: 52 08 1a 02              jump @4109 if a1 != 0
      :                          @4056
 54180: c9 c4 08                 a1 = t2 - a5
 54183: c8 38 08                 a1 = a1 + t1
 54186: 84 8a 07                 a3 = a1 & 0x7
 54189: c8 ac 0c                 a5 = a5 + a3
 54192: 01                       fallthrough
      :                          @4057
 54193: 82 05                    s0 = u64 [ra]
 54195: ab 75 d8                 jump @4054 if s0 != a0
      :                          @4058
 54198: 7b 0c                    u64 [ra] = a5
 54200: 33 0b                    a4 = 0
 54202: c9 a8 05                 s0 = a1 - a3
 54205: 64 57                    a0 = s0
 54207: 33 08                    a1 = 0
 54209: 50 20 00 03 98 37 02     ra = 768, jump @13675
      :                          @4059 [@dyn 384]
 54216: 82 18 18                 a1 = u64 [sp + 0x18]
 54219: 82 19 40                 a2 = u64 [sp + 0x40]
 54222: 01                       fallthrough
      :                          @4060
 54223: 7b 19 60                 u64 [sp + 0x60] = a2
 54226: 7b 15 68                 u64 [sp + 0x68] = s0
 54229: 7b 19 70                 u64 [sp + 0x70] = a2
 54232: 95 89 01                 a2 = a1 + 0x1
 54235: 95 17 48                 a0 = sp + 0x48
 54238: 95 18 60                 a1 = sp + 0x60
 54241: 50 20 02 03 33 8a        ra = 770, jump @1783
      :                          @4061 [@dyn 385]
 54247: 82 1b 18                 a4 = u64 [sp + 0x18]
 54250: 51 0b 08 01              jump @4077 if a4 == 0
      :                          @4062
 54254: 82 18 58                 a1 = u64 [sp + 0x58]
 54257: 82 10 50                 ra = u64 [sp + 0x50]
 54260: 7b 18 08                 u64 [sp + 0x8] = a1
 54263: 51 06 09 01              jump @4080 if s1 == 0
      :                          @4063
 54267: 33 07                    a0 = 0
 54269: 33 05 01                 s0 = 0x1
 54272: 7b 10                    u64 [sp] = ra
 54274: 01                       fallthrough
      :                          @4064
 54275: 95 5a ff                 a3 = s0 + 0xffffffffffffffff
 54278: ae ba a3 01              jump @4102 if a3 >=u a4
      :                          @4065
 54282: ae 8a a1 01              jump @4104 if a3 >=u a1
      :                          @4066
 54286: 96 54 18                 t2 = s0 * 0x18
 54289: c8 04 04                 t2 = t2 + ra
 54292: 95 49 f8                 a2 = t2 + 0xfffffffffffffff8
 54295: 7b 19 40                 u64 [sp + 0x40] = a2
 54298: ae 85 92 01              jump @4105 if s0 >=u a1
      :                          @4067
 54302: d8 b5 08                 a1 = s0 <u a4
 54305: 7b 18 20                 u64 [sp + 0x20] = a1
 54308: c8 85 05                 s0 = s0 + a1
 54311: 7b 15 28                 u64 [sp + 0x28] = s0
 54314: 82 18 10                 a1 = u64 [sp + 0x10]
 54317: c8 a8 08                 a1 = a1 + a3
 54320: 7b 18 38                 u64 [sp + 0x38] = a1
 54323: 95 42 f0                 t0 = t2 + 0xfffffffffffffff0
 54326: 95 40 10                 ra = t2 + 0x10
 54329: 95 44 08                 t2 = t2 + 0x8
 54332: 33 0a 01                 a3 = 0x1
 54335: 01                       fallthrough
      :                          @4068
 54336: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
 54339: ae 6b 67 01              jump @4103 if a4 >=u s1
      :                          @4069
 54343: 82 18 40                 a1 = u64 [sp + 0x40]
 54346: 82 8c                    a5 = u64 [a1]
 54348: ae cb 70 01              jump @4111 if a4 >=u a5
      :                          @4070
 54352: ae ca 69 01              jump @4108 if a3 >=u a5
      :                          @4071
 54356: 82 0c                    a5 = u64 [ra]
 54358: ae cb 66 01              jump @4111 if a4 >=u a5
      :                          @4072
 54362: ae ca 5f 01              jump @4108 if a3 >=u a5
      :                          @4073
 54366: 82 18 38                 a1 = u64 [sp + 0x38]
 54369: 7c 8c                    a5 = u8 [a1]
 54371: 82 15 30                 s0 = u64 [sp + 0x30]
 54374: c8 b5 05                 s0 = s0 + a4
 54377: 7c 55                    s0 = u8 [s0]
 54379: d3 5c 0c                 a5 = a5 ^ s0
 54382: 82 25                    s0 = u64 [t0]
 54384: 88 cc 01                 a5 = a5 <u 0x1
 54387: 95 c8 ff                 a1 = a5 + 0xffffffffffffffff
 54390: 97 bb 03                 a4 = a4 << 0x3
 54393: c8 b5 0c                 a5 = s0 + a4
 54396: 82 c9                    a2 = u64 [a5]
 54398: 82 43                    t1 = u64 [t2]
 54400: 97 ac 03                 a5 = a3 << 0x3
 54403: c8 c5 05                 s0 = s0 + a5
 54406: 82 55                    s0 = u64 [s0]
 54408: c8 3b 0b                 a4 = a4 + t1
 54411: 82 bb                    a4 = u64 [a4]
 54413: 86 88 02                 a1 = a1 | 0x2
 54416: c8 98 08                 a1 = a1 + a2
 54419: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 54422: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 54425: e3 b5 09                 a2 = maxs(s0, a4)
 54428: e3 98 08                 a1 = maxs(a1, a2)
 54431: 3e 02 00 00 03           u64 [0x30000] = t0
 54436: 8f 82                    t0 = a1 >s 0
 54438: 93 28                    a1 = 0 if t0 == 0
 54440: 3a 02 00 00 03           t0 = u64 [0x30000]
 54445: c8 c3 03                 t1 = t1 + a5
 54448: 7b 38                    u64 [t1] = a1
 54450: 82 0b                    a4 = u64 [ra]
 54452: ae ba f5 00              jump @4102 if a3 >=u a4
      :                          @4074
 54456: 82 48                    a1 = u64 [t2]
 54458: d8 6a 09                 a2 = a3 <u s1
 54461: c8 9a 0a                 a3 = a3 + a2
 54464: c8 c8 08                 a1 = a1 + a5
 54467: 82 88                    a1 = u64 [a1]
 54469: d8 a6 0b                 a4 = s1 <u a3
 54472: 85 bb 01                 a4 = a4 ^ 0x1
 54475: d2 b9 09                 a2 = a2 & a4
 54478: e3 87 07                 a0 = maxs(a0, a1)
 54481: 52 09 6f ff              jump @4068 if a2 != 0
      :                          @4075
 54485: 82 18 20                 a1 = u64 [sp + 0x20]
 54488: 85 88 01                 a1 = a1 ^ 0x1
 54491: 82 1b 18                 a4 = u64 [sp + 0x18]
 54494: 82 15 28                 s0 = u64 [sp + 0x28]
 54497: d8 5b 09                 a2 = a4 <u s0
 54500: d4 89 09                 a2 = a2 | a1
 54503: 82 10                    ra = u64 [sp]
 54505: 82 18 08                 a1 = u64 [sp + 0x8]
 54508: 51 09 17 ff              jump @4064 if a2 == 0
      :                          @4076
 54512: 28 0b                    jump @4078
      :                          @4077
 54514: 82 10 50                 ra = u64 [sp + 0x50]
 54517: 82 18 58                 a1 = u64 [sp + 0x58]
 54520: 33 07                    a0 = 0
 54522: 01                       fallthrough
      :                          @4078
 54523: 52 08 23                 jump @4083 if a1 != 0
      :                          @4079
 54526: 28 6b                    jump @4094
      :                          @4080
 54528: 33 07 01                 a0 = 0x1
 54531: 01                       fallthrough
      :                          @4081
 54532: d8 b7 08                 a1 = a0 <u a4
 54535: 85 89 01                 a2 = a1 ^ 0x1
 54538: c8 87 07                 a0 = a0 + a1
 54541: d8 7b 08                 a1 = a4 <u a0
 54544: d4 98 08                 a1 = a1 | a2
 54547: 51 08 f1                 jump @4081 if a1 == 0
      :                          @4082
 54550: 33 07                    a0 = 0
 54552: 82 18 08                 a1 = u64 [sp + 0x8]
 54555: 51 08 4e                 jump @4094 if a1 == 0
      :                          @4083
 54558: 33 02                    t0 = 0
 54560: 33 03 18                 t1 = 0x18
 54563: 33 0a c0 22 03           a3 = 0x322c0
 54568: 95 ab 00 00 01           a4 = a3 + 0x10000
 54573: 28 08                    jump @4085
      :                          @4084
 54575: 95 22 01                 t0 = t0 + 0x1
 54578: aa 82 37                 jump @4094 if t0 == a1
      :                          @4085
 54581: ca 32 0c                 a5 = t0 * t1
 54584: c8 0c 0c                 a5 = a5 + ra
 54587: 82 c6                    s1 = u64 [a5]
 54589: 51 06 f2                 jump @4084 if s1 == 0
      :                          @4086
 54592: 33 09 00 20              a2 = 0x2000
 54596: ac 69 eb                 jump @4084 if a2 <u s1
      :                          @4087
 54599: 82 cc 08                 a5 = u64 [a5 + 0x8]
 54602: 97 64 03                 t2 = s1 << 0x3
 54605: 01                       fallthrough
      :                          @4088
 54606: 82 b5                    s0 = u64 [a4]
 54608: c9 5b 0a                 a3 = a4 - s0
 54611: ab ca dc                 jump @4084 if a3 != a5
      :                          @4089
 54614: c9 45 0a                 a3 = s0 - t2
 54617: 01                       fallthrough
      :                          @4090
 54618: 82 b9                    a2 = u64 [a4]
 54620: ab 59 f2                 jump @4088 if a2 != s0
      :                          @4091
 54623: 7b ba                    u64 [a4] = a3
 54625: 33 06                    s1 = 0
 54627: 01                       fallthrough
      :                          @4092
 54628: ab 59 ea                 jump @4088 if a2 != s0
      :                          @4093
 54631: 28 c8                    jump @4084
      :                          @4094
 54633: 82 18 48                 a1 = u64 [sp + 0x48]
 54636: 51 08 2c                 jump @4101 if a1 == 0
      :                          @4095
 54639: 33 09 aa 0a              a2 = 0xaaa
 54643: ac 89 25                 jump @4101 if a2 <u a1
      :                          @4096
 54646: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 54649: 33 09 c0 22 03           a2 = 0x322c0
 54654: 95 99 00 00 01           a2 = a2 + 0x10000
 54659: 01                       fallthrough
      :                          @4097
 54660: 82 9a                    a3 = u64 [a2]
 54662: c9 a9 0b                 a4 = a2 - a3
 54665: ab 0b 0f                 jump @4101 if a4 != ra
      :                          @4098
 54668: c8 8a 0b                 a4 = a3 + a1
 54671: 01                       fallthrough
      :                          @4099
 54672: 82 9c                    a5 = u64 [a2]
 54674: ab ac f2                 jump @4097 if a5 != a3
      :                          @4100
 54677: 7b 9b                    u64 [a2] = a4
 54679: 01                       fallthrough
      :                          @4101
 54680: 82 10 88 00              ra = u64 [sp + 0x88]
 54684: 82 15 80 00              s0 = u64 [sp + 0x80]
 54688: 82 16 78                 s1 = u64 [sp + 0x78]
 54691: 95 11 90 00              sp = sp + 0x90
 54695: 32 00                    ret
      :                          @4102
 54697: 00                       trap
      :                          @4103
 54698: 00                       trap
      :                          @4104
 54699: 00                       trap
      :                          @4105
 54700: 82 17 40                 a0 = u64 [sp + 0x40]
 54703: 82 7c                    a5 = u64 [a0]
 54705: 51 0c 0a                 jump @4110 if a5 == 0
      :                          @4106
 54708: 51 1c 01 05              jump @4108 if a5 == 1
      :                          @4107
 54712: 00                       trap
      :                          @4108
 54713: 00                       trap
      :                          @4109
 54714: 00                       trap
      :                          @4110
 54715: 00                       trap
      :                          @4111
 54716: 00                       trap
      :                          @4112
 54717: 00                       trap
      :                          @4113
 54718: 51 07 31                 jump @4119 if a0 == 0
      :                          @4114
 54721: 51 08 26                 jump @4118 if a1 == 0
      :                          @4115
 54724: 6a 79                    a2 = ctz a0
 54726: d0 97 09                 a2 = a0 >> a2
 54729: 64 8a                    a3 = a1
 54731: 01                       fallthrough
      :                          @4116
 54732: 6a ab                    a4 = ctz a3
 54734: d0 ba 0a                 a3 = a3 >> a4
 54737: e4 a9 0b                 a4 = maxu(a2, a3)
 54740: e6 a9 09                 a2 = minu(a2, a3)
 54743: c9 9b 0a                 a3 = a4 - a2
 54746: ab 9b f2                 jump @4116 if a4 != a2
      :                          @4117
 54749: d4 87 07                 a0 = a0 | a1
 54752: 6a 77                    a0 = ctz a0
 54754: cf 7b 07                 a0 = a4 << a0
 54757: 32 00                    ret
      :                          @4118
 54759: 64 78                    a1 = a0
 54761: 64 87                    a0 = a1
 54763: 28 0b 94 01              jump @11163
      :                          @4119
 54767: 64 87                    a0 = a1
 54769: 28 05 94 01              jump @11163
      :                          @4120
 54773: 64 ba                    a3 = a4
 54775: d6 8b 0b                 a4 = a4 mulhu a1
 54778: ca 8a 0c                 a5 = a3 * a1
 54781: db b9 0c                 a5 = a2 if a4 != 0
 54784: 97 ab 01                 a4 = a3 << 0x1
 54787: ae c7 f2                 jump @4120 if a0 >=u a5
      :                          @4121
 54790: 33 09                    a2 = 0
 54792: 51 0a 28                 jump @4124 if a3 == 0
      :                          @4122
 54795: 33 02 ff                 t0 = 0xffffffffffffffff
 54798: 01                       fallthrough
      :                          @4123
 54799: c8 9a 0c                 a5 = a3 + a2
 54802: 95 cc 01                 a5 = a5 + 0x1
 54805: 98 c4 01                 t2 = a5 >> 0x1
 54808: d6 84 03                 t1 = t2 mulhu a1
 54811: ca 84 0b                 a4 = t2 * a1
 54814: db 32 0b                 a4 = t0 if t1 != 0
 54817: d8 b7 0b                 a4 = a0 <u a4
 54820: 95 4c ff                 a5 = t2 + 0xffffffffffffffff
 54823: db bc 0a                 a3 = a5 if a4 != 0
 54826: da b4 09                 a2 = t2 if a4 == 0
 54829: ac a9 e2                 jump @4123 if a2 <u a3
      :                          @4124
 54832: 64 97                    a0 = a2
 54834: 32 00                    ret
      :                          @4125
 54836: 33 03 02                 t1 = 0x2
 54839: ae 38 09                 jump @4127 if a1 >=u t1
      :                          @4126
 54842: 49 07                    u64 [a0 + 0] = 0
 54844: 28 49 9a 01              jump @11239
      :                          @4127
 54848: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 54851: 7b 10 28                 u64 [sp + 0x28] = ra
 54854: 7b 15 20                 u64 [sp + 0x20] = s0
 54857: 7b 16 18                 u64 [sp + 0x18] = s1
 54860: 7b 17 08                 u64 [sp + 0x8] = a0
 54863: 68 87                    a0 = clz a1
 54865: 33 0b 40                 a4 = 0x40
 54868: c9 7b 0a                 a3 = a4 - a0
 54871: 33 02 01                 t0 = 0x1
 54874: 33 0c ff                 a5 = 0xffffffffffffffff
 54877: 7b 1a 10                 u64 [sp + 0x10] = a3
 54880: 28 0f                    jump @4130
      :                          @4128
 54882: ca 96 07                 a0 = s1 * a2
 54885: 33 0b 40                 a4 = 0x40
 54888: ab 87 89 00              jump @4143 if a0 != a1
      :                          @4129
 54892: 28 9f 00                 jump @4145
      :                          @4130
 54895: 33 05                    s0 = 0
 54897: d8 a3 00                 ra = t1 <u a3
 54900: c1 3b 07                 i32 a0 = a4 /u t1
 54903: cf 72 07                 a0 = t0 << a0
 54906: e6 78 06                 s1 = minu(a1, a0)
 54909: 95 66 01                 s1 = s1 + 0x1
 54912: 83 3a 01                 i32 a3 = t1 + 0x1
 54915: 28 11                    jump @4132
      :                          @4131
 54917: d8 78 07                 a0 = a1 <u a0
 54920: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
 54923: db 79 06                 s1 = a2 if a0 != 0
 54926: da 72 05                 s0 = t0 if a0 == 0
 54929: ae 65 26                 jump @4136 if s0 >=u s1
      :                          @4132
 54932: c8 65 07                 a0 = s0 + s1
 54935: 95 77 01                 a0 = a0 + 0x1
 54938: 98 72 01                 t0 = a0 >> 0x1
 54941: 33 07 01                 a0 = 0x1
 54944: 64 a9                    a2 = a3
 54946: 01                       fallthrough
      :                          @4133
 54947: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 54950: 51 09 df                 jump @4131 if a2 == 0
      :                          @4134
 54953: d6 27 04                 t2 = a0 mulhu t0
 54956: ca 27 07                 a0 = a0 * t0
 54959: db 4c 07                 a0 = a5 if t2 != 0
 54962: ae 78 f1                 jump @4133 if a1 >=u a0
      :                          @4135
 54965: 28 d0                    jump @4131
      :                          @4136
 54967: 33 02 01                 t0 = 0x1
 54970: 33 04 03                 t2 = 0x3
 54973: ae 52 34                 jump @4143 if t0 >=u s0
      :                          @4137
 54976: 51 03 2d                 jump @4142 if t1 == 0
      :                          @4138
 54979: 64 39                    a2 = t1
 54981: 64 56                    s1 = s0
 54983: 51 13 01 9b              jump @4128 if t1 == 1
      :                          @4139
 54987: 33 09 01                 a2 = 0x1
 54990: 64 37                    a0 = t1
 54992: 64 56                    s1 = s0
 54994: 01                       fallthrough
      :                          @4140
 54995: 64 7a                    a3 = a0
 54997: 84 77 01                 a0 = a0 & 0x1
 55000: 33 0b 01                 a4 = 0x1
 55003: db 76 0b                 a4 = s1 if a0 != 0
 55006: ca 9b 09                 a2 = a4 * a2
 55009: 8b a7 01                 i32 a0 = a3 >> 0x1
 55012: ca 66 06                 s1 = s1 * s1
 55015: ac a4 ec                 jump @4140 if t2 <u a3
      :                          @4141
 55018: 28 78 ff                 jump @4128
      :                          @4142
 55021: 51 18 01 1e              jump @4145 if a1 == 1
      :                          @4143
 55025: be 03 03                 i32 t1 = t1 + ra
 55028: 85 07 01                 a0 = ra ^ 0x1
 55031: 82 1a 10                 a3 = u64 [sp + 0x10]
 55034: d8 3a 09                 a2 = a3 <u t1
 55037: d4 97 07                 a0 = a0 | a2
 55040: 51 07 6f ff              jump @4130 if a0 == 0
      :                          @4144
 55044: 33 08                    a1 = 0
 55046: 82 17 08                 a0 = u64 [sp + 0x8]
 55049: 28 0f                    jump @4146
      :                          @4145
 55051: 82 17 08                 a0 = u64 [sp + 0x8]
 55054: 7b 75 08                 u64 [a0 + 0x8] = s0
 55057: 7a 73 10                 u32 [a0 + 0x10] = t1
 55060: 33 08 01                 a1 = 0x1
 55063: 01                       fallthrough
      :                          @4146
 55064: 82 10 28                 ra = u64 [sp + 0x28]
 55067: 82 15 20                 s0 = u64 [sp + 0x20]
 55070: 82 16 18                 s1 = u64 [sp + 0x18]
 55073: 95 11 30                 sp = sp + 0x30
 55076: 7b 78                    u64 [a0] = a1
 55078: 32 00                    ret
      :                          @4147
 55080: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 55083: 7b 10 50                 u64 [sp + 0x50] = ra
 55086: 7b 15 48                 u64 [sp + 0x48] = s0
 55089: 7b 16 40                 u64 [sp + 0x40] = s1
 55092: 64 82                    t0 = a1
 55094: 7b 17                    u64 [sp] = a0
 55096: 49 11 28                 u64 [sp + 40] = 0
 55099: 33 07 01                 a0 = 0x1
 55102: 7b 17 30                 u64 [sp + 0x30] = a0
 55105: d3 78 08                 a1 = a1 ^ a0
 55108: d3 79 0a                 a3 = a2 ^ a0
 55111: d4 a8 08                 a1 = a1 | a3
 55114: 49 11 38                 u64 [sp + 56] = 0
 55117: 52 08 24                 jump @4149 if a1 != 0
      :                          @4148
 55120: 82 17 38                 a0 = u64 [sp + 0x38]
 55123: 82 18 30                 a1 = u64 [sp + 0x30]
 55126: 82 19 28                 a2 = u64 [sp + 0x28]
 55129: 82 1a                    a3 = u64 [sp]
 55131: 7b a7 10                 u64 [a3 + 0x10] = a0
 55134: 7b a8 08                 u64 [a3 + 0x8] = a1
 55137: 7b a9                    u64 [a3] = a2
 55139: 82 10 50                 ra = u64 [sp + 0x50]
 55142: 82 15 48                 s0 = u64 [sp + 0x48]
 55145: 82 16 40                 s1 = u64 [sp + 0x40]
 55148: 95 11 58                 sp = sp + 0x58
 55151: 32 00                    ret
      :                          @4149
 55153: 33 08                    a1 = 0
 55155: 33 03                    t1 = 0
 55157: 33 04                    t2 = 0
 55159: 33 05 01                 s0 = 0x1
 55162: 33 06 01                 s1 = 0x1
 55165: 33 00 01                 ra = 0x1
 55168: 33 0c 01                 a5 = 0x1
 55171: 7b 19 20                 u64 [sp + 0x20] = a2
 55174: 7b 12 18                 u64 [sp + 0x18] = t0
 55177: 28 28                    jump @4152
      :                          @4150
 55179: 82 17 30                 a0 = u64 [sp + 0x30]
 55182: c8 87 0a                 a3 = a0 + a1
 55185: 46 0a 52                 u8 [a3 + 0] = 0x52
 55188: 64 50                    ra = s0
 55190: 64 63                    t1 = s1
 55192: 01                       fallthrough
      :                          @4151
 55193: 95 88 01                 a1 = a1 + 0x1
 55196: c8 c3 06                 s1 = t1 + a5
 55199: d3 26 0b                 a4 = s1 ^ t0
 55202: c8 40 05                 s0 = ra + t2
 55205: d3 95 0a                 a3 = s0 ^ a2
 55208: d4 ba 0a                 a3 = a3 | a4
 55211: 7b 18 38                 u64 [sp + 0x38] = a1
 55214: 51 0a a2                 jump @4148 if a3 == 0
      :                          @4152
 55217: ca 25 0b                 a4 = s0 * t0
 55220: ca 96 0a                 a3 = s1 * a2
 55223: ae ba 2a                 jump @4156 if a3 >=u a4
      :                          @4153
 55226: 82 17 28                 a0 = u64 [sp + 0x28]
 55229: ab 78 ce                 jump @4150 if a1 != a0
      :                          @4154
 55232: 95 17 28                 a0 = sp + 0x28
 55235: 7b 14 10                 u64 [sp + 0x10] = t2
 55238: 7b 1c 08                 u64 [sp + 0x8] = a5
 55241: 50 20 04 03 be 7b ff     ra = 772, jump @1593
      :                          @4155 [@dyn 386]
 55248: 82 1c 08                 a5 = u64 [sp + 0x8]
 55251: 82 14 10                 t2 = u64 [sp + 0x10]
 55254: 82 12 18                 t0 = u64 [sp + 0x18]
 55257: 82 19 20                 a2 = u64 [sp + 0x20]
 55260: 82 18 38                 a1 = u64 [sp + 0x38]
 55263: 28 ac                    jump @4150
      :                          @4156
 55265: 82 1a 28                 a3 = u64 [sp + 0x28]
 55268: ab a8 26                 jump @4159 if a1 != a3
      :                          @4157
 55271: 95 17 28                 a0 = sp + 0x28
 55274: 7b 13 10                 u64 [sp + 0x10] = t1
 55277: 7b 10 08                 u64 [sp + 0x8] = ra
 55280: 50 20 06 03 97 7b ff     ra = 774, jump @1593
      :                          @4158 [@dyn 387]
 55287: 82 10 08                 ra = u64 [sp + 0x8]
 55290: 82 13 10                 t1 = u64 [sp + 0x10]
 55293: 82 12 18                 t0 = u64 [sp + 0x18]
 55296: 82 19 20                 a2 = u64 [sp + 0x20]
 55299: 82 18 38                 a1 = u64 [sp + 0x38]
 55302: 82 17 30                 a0 = u64 [sp + 0x30]
 55305: 01                       fallthrough
      :                          @4159
 55306: c8 87 0a                 a3 = a0 + a1
 55309: 46 0a 4c                 u8 [a3 + 0] = 0x4c
 55312: 64 54                    t2 = s0
 55314: 64 6c                    a5 = s1
 55316: 28 85                    jump @4151
      :                          @4160
 55318: 95 17 30                 a0 = sp + 0x30
 55321: 50 20 08 03 ee 7a ff     ra = 776, jump @1581
      :                          @4161 [@dyn 388]
 55328: 82 1b 40                 a4 = u64 [sp + 0x40]
 55331: 82 17 38                 a0 = u64 [sp + 0x38]
 55334: 01                       fallthrough
      :                          @4162
 55335: cb 65 09                 a2 = s0 /u s1
 55338: 97 ba 03                 a3 = a4 << 0x3
 55341: c8 a7 08                 a1 = a0 + a3
 55344: 7b 89                    u64 [a1] = a2
 55346: 95 b8 01                 a1 = a4 + 0x1
 55349: ca 69 09                 a2 = a2 * s1
 55352: c9 95 09                 a2 = s0 - a2
 55355: 7b 18 40                 u64 [sp + 0x40] = a1
 55358: 64 65                    s0 = s1
 55360: 51 09 0f                 jump @4165 if a2 == 0
      :                          @4163
 55363: 82 1a 30                 a3 = u64 [sp + 0x30]
 55366: 64 96                    s1 = a2
 55368: aa a8 ce                 jump @4160 if a1 == a3
      :                          @4164
 55371: 64 8b                    a4 = a1
 55373: 28 da                    jump @4162
      :                          @4165
 55375: 7b 1b 20                 u64 [sp + 0x20] = a4
 55378: 7b 1a 28                 u64 [sp + 0x28] = a3
 55381: 49 11 48                 u64 [sp + 72] = 0
 55384: 49 11 50 08              u64 [sp + 80] = 0x8
 55388: 49 11 58                 u64 [sp + 88] = 0
 55391: 51 08 05 01              jump @4182 if a1 == 0
      :                          @4166
 55395: 82 16 38                 s1 = u64 [sp + 0x38]
 55398: 82 65                    s0 = u64 [s1]
 55400: 95 17 48                 a0 = sp + 0x48
 55403: 33 08                    a1 = 0
 55405: 50 20 0a 03 93 7b ff     ra = 778, jump @1605
      :                          @4167 [@dyn 389]
 55412: 82 18 58                 a1 = u64 [sp + 0x58]
 55415: 82 12 50                 t0 = u64 [sp + 0x50]
 55418: 97 89 04                 a2 = a1 << 0x4
 55421: c8 92 0a                 a3 = t0 + a2
 55424: 7b a5                    u64 [a3] = s0
 55426: 33 09 01                 a2 = 0x1
 55429: 7b a9 08                 u64 [a3 + 0x8] = a2
 55432: c8 98 08                 a1 = a1 + a2
 55435: 7b 18 58                 u64 [sp + 0x58] = a1
 55438: 82 1a 20                 a3 = u64 [sp + 0x20]
 55441: 51 0a 81 00              jump @4174 if a3 == 0
      :                          @4168
 55445: 64 53                    t1 = s0
 55447: 33 05                    s0 = 0
 55449: 95 66 08                 s1 = s1 + 0x8
 55452: 33 0a 01                 a3 = 0x1
 55455: 82 1b 28                 a4 = u64 [sp + 0x28]
 55458: 28 2c                    jump @4170
      :                          @4169
 55460: ca 4c 09                 a2 = a5 * t2
 55463: c8 a9 03                 t1 = a2 + a3
 55466: ca 0c 09                 a2 = a5 * ra
 55469: c8 59 09                 a2 = a2 + s0
 55472: 97 8a 04                 a3 = a1 << 0x4
 55475: c8 2a 0a                 a3 = a3 + t0
 55478: 7b a3                    u64 [a3] = t1
 55480: 7b a9 08                 u64 [a3 + 0x8] = a2
 55483: 95 88 01                 a1 = a1 + 0x1
 55486: 7b 18 58                 u64 [sp + 0x58] = a1
 55489: 95 bb f8                 a4 = a4 + 0xfffffffffffffff8
 55492: 95 66 08                 s1 = s1 + 0x8
 55495: 64 05                    s0 = ra
 55497: 64 4a                    a3 = t2
 55499: 51 0b 43                 jump @4173 if a4 == 0
      :                          @4170
 55502: 82 17 48                 a0 = u64 [sp + 0x48]
 55505: 82 6c                    a5 = u64 [s1]
 55507: 64 34                    t2 = t1
 55509: 64 90                    ra = a2
 55511: ab 78 cd                 jump @4169 if a1 != a0
      :                          @4171
 55514: 95 17 48                 a0 = sp + 0x48
 55517: 7b 1b 28                 u64 [sp + 0x28] = a4
 55520: 7b 15 20                 u64 [sp + 0x20] = s0
 55523: 7b 14 18                 u64 [sp + 0x18] = t2
 55526: 7b 1a 10                 u64 [sp + 0x10] = a3
 55529: 7b 10 08                 u64 [sp + 0x8] = ra
 55532: 64 c5                    s0 = a5
 55534: 50 20 0c 03 12 7b ff     ra = 780, jump @1605
      :                          @4172 [@dyn 390]
 55541: 64 5c                    a5 = s0
 55543: 82 10 08                 ra = u64 [sp + 0x8]
 55546: 82 1a 10                 a3 = u64 [sp + 0x10]
 55549: 82 14 18                 t2 = u64 [sp + 0x18]
 55552: 82 15 20                 s0 = u64 [sp + 0x20]
 55555: 82 1b 28                 a4 = u64 [sp + 0x28]
 55558: 82 18 58                 a1 = u64 [sp + 0x58]
 55561: 82 12 50                 t0 = u64 [sp + 0x50]
 55564: 28 98                    jump @4169
      :                          @4173
 55566: 82 16 38                 s1 = u64 [sp + 0x38]
 55569: 01                       fallthrough
      :                          @4174
 55570: 82 18 58                 a1 = u64 [sp + 0x58]
 55573: 82 19 50                 a2 = u64 [sp + 0x50]
 55576: 82 1a 48                 a3 = u64 [sp + 0x48]
 55579: 82 17 30                 a0 = u64 [sp + 0x30]
 55582: 82 1b                    a4 = u64 [sp]
 55584: 7b b8 10                 u64 [a4 + 0x10] = a1
 55587: 7b b9 08                 u64 [a4 + 0x8] = a2
 55590: 7b ba                    u64 [a4] = a3
 55592: 51 07 2e                 jump @4181 if a0 == 0
      :                          @4175
 55595: 33 08 00 20              a1 = 0x2000
 55599: ac 78 27                 jump @4181 if a1 <u a0
      :                          @4176
 55602: 97 77 03                 a0 = a0 << 0x3
 55605: 33 08 c0 22 03           a1 = 0x322c0
 55610: 95 88 00 00 01           a1 = a1 + 0x10000
 55615: 01                       fallthrough
      :                          @4177
 55616: 82 89                    a2 = u64 [a1]
 55618: c9 98 0a                 a3 = a1 - a2
 55621: ab 6a 11                 jump @4181 if a3 != s1
      :                          @4178
 55624: c9 79 0a                 a3 = a2 - a0
 55627: 01                       fallthrough
      :                          @4179
 55628: 82 8b                    a4 = u64 [a1]
 55630: ab 9b f2                 jump @4177 if a4 != a2
      :                          @4180
 55633: 7b 8a                    u64 [a1] = a3
 55635: 33 0c                    a5 = 0
 55637: 01                       fallthrough
      :                          @4181
 55638: 82 10 70                 ra = u64 [sp + 0x70]
 55641: 82 15 68                 s0 = u64 [sp + 0x68]
 55644: 82 16 60                 s1 = u64 [sp + 0x60]
 55647: 95 11 78                 sp = sp + 0x78
 55650: 32 00                    ret
      :                          @4182
 55652: 00                       trap
      :                          @4183
 55653: 82 bc                    a5 = u64 [a4]
 55655: 95 c6 20                 s1 = a5 + 0x20
 55658: ac c6 cb 00              jump @4195 if s1 <u a5
      :                          @4184
 55662: 95 67 08                 a0 = s1 + 0x8
 55665: d8 67 08                 a1 = a0 <u s1
 55668: d8 72 07                 a0 = t0 <u a0
 55671: d4 87 07                 a0 = a0 | a1
 55674: 52 07 bb 00              jump @4195 if a0 != 0
      :                          @4185
 55678: c9 69 07                 a0 = a2 - s1
 55681: c8 27 07                 a0 = a0 + t0
 55684: 84 78 07                 a1 = a0 & 0x7
 55687: c8 86 06                 s1 = s1 + a1
 55690: 01                       fallthrough
      :                          @4186
 55691: 82 b5                    s0 = u64 [a4]
 55693: ab c5 d8                 jump @4183 if s0 != a5
      :                          @4187
 55696: 7b b6                    u64 [a4] = s1
 55698: 33 0b                    a4 = 0
 55700: c9 87 07                 a0 = a0 - a1
 55703: 49 07                    u64 [a0 + 0] = 0
 55705: 33 09 01                 a2 = 0x1
 55708: 7b 79 08                 u64 [a0 + 0x8] = a2
 55711: 7b 79 10                 u64 [a0 + 0x10] = a2
 55714: 7b 73 18                 u64 [a0 + 0x18] = t1
 55717: 33 08 02                 a1 = 0x2
 55720: 7b 18 20                 u64 [sp + 0x20] = a1
 55723: 7b 17 28                 u64 [sp + 0x28] = a0
 55726: 7b 18 30                 u64 [sp + 0x30] = a1
 55729: 64 3a                    a3 = t1
 55731: 33 0c 01                 a5 = 0x1
 55734: 7b 13 08                 u64 [sp + 0x8] = t1
 55737: 28 2c                    jump @4189
      :                          @4188
 55739: c8 3c 09                 a2 = a5 + t1
 55742: cb 59 0a                 a3 = a2 /u s0
 55745: ca 6a 09                 a2 = a3 * s1
 55748: c9 b9 09                 a2 = a2 - a4
 55751: ca 5a 0a                 a3 = a3 * s0
 55754: c9 ca 0a                 a3 = a3 - a5
 55757: 97 8b 04                 a4 = a1 << 0x4
 55760: c8 7b 0b                 a4 = a4 + a0
 55763: 7b b6                    u64 [a4] = s1
 55765: 7b b5 08                 u64 [a4 + 0x8] = s0
 55768: 95 88 01                 a1 = a1 + 0x1
 55771: 7b 18 30                 u64 [sp + 0x30] = a1
 55774: 64 6b                    a4 = s1
 55776: 64 5c                    a5 = s0
 55778: ac 93 31                 jump @4193 if t1 <u a2
      :                          @4189
 55781: 51 0a 4f                 jump @4194 if a3 == 0
      :                          @4190
 55784: 64 96                    s1 = a2
 55786: 64 a5                    s0 = a3
 55788: 82 19 20                 a2 = u64 [sp + 0x20]
 55791: ab 98 cc                 jump @4188 if a1 != a2
      :                          @4191
 55794: 95 17 20                 a0 = sp + 0x20
 55797: 7b 1b 18                 u64 [sp + 0x18] = a4
 55800: 7b 1c 10                 u64 [sp + 0x10] = a5
 55803: 50 20 0e 03 05 7a ff     ra = 782, jump @1605
      :                          @4192 [@dyn 391]
 55810: 82 1c 10                 a5 = u64 [sp + 0x10]
 55813: 82 1b 18                 a4 = u64 [sp + 0x18]
 55816: 82 13 08                 t1 = u64 [sp + 0x8]
 55819: 82 18 30                 a1 = u64 [sp + 0x30]
 55822: 82 17 28                 a0 = u64 [sp + 0x28]
 55825: 28 aa                    jump @4188
      :                          @4193
 55827: 82 17 30                 a0 = u64 [sp + 0x30]
 55830: 82 18 28                 a1 = u64 [sp + 0x28]
 55833: 82 19 20                 a2 = u64 [sp + 0x20]
 55836: 82 1a                    a3 = u64 [sp]
 55838: 7b a7 10                 u64 [a3 + 0x10] = a0
 55841: 7b a8 08                 u64 [a3 + 0x8] = a1
 55844: 7b a9                    u64 [a3] = a2
 55846: 82 10 48                 ra = u64 [sp + 0x48]
 55849: 82 15 40                 s0 = u64 [sp + 0x40]
 55852: 82 16 38                 s1 = u64 [sp + 0x38]
 55855: 95 11 50                 sp = sp + 0x50
 55858: 32 00                    ret
      :                          @4194
 55860: 00                       trap
      :                          @4195
 55861: 00                       trap
      :                          @4196
 55862: 95 11 90                 sp = sp + 0xffffffffffffff90
 55865: 7b 10 68                 u64 [sp + 0x68] = ra
 55868: 7b 15 60                 u64 [sp + 0x60] = s0
 55871: 7b 16 58                 u64 [sp + 0x58] = s1
 55874: ae 87 08                 jump @4198 if a0 >=u a1
      :                          @4197
 55877: 33 07                    a0 = 0
 55879: 28 f0 01                 jump @4239
      :                          @4198
 55882: 7b 17 10                 u64 [sp + 0x10] = a0
 55885: 14 07 fe ff ff ff ff ff ff 0f a0 = 0xffffffffffffffe
 55895: ac 87 02 02              jump @4253 if a0 <u a1
      :                          @4199
 55899: 95 89 01                 a2 = a1 + 0x1
 55902: 14 07 ff ff ff ff ff ff ff 0f a0 = 0xfffffffffffffff
 55912: d8 78 02                 t0 = a1 <u a0
 55915: 7b 19 20                 u64 [sp + 0x20] = a2
 55918: 97 99 03                 a2 = a2 << 0x3
 55921: 97 22 03                 t0 = t0 << 0x3
 55924: 33 04 c0 22 03           t2 = 0x322c0
 55929: 33 03 00 00 01           t1 = 0x10000
 55934: c8 34 00                 ra = t2 + t1
 55937: 01                       fallthrough
      :                          @4200
 55938: 82 06                    s1 = u64 [ra]
 55940: c8 96 0c                 a5 = s1 + a2
 55943: ac 6c cf 01              jump @4250 if a5 <u s1
      :                          @4201
 55947: c8 2c 0a                 a3 = a5 + t0
 55950: d8 ca 05                 s0 = a3 <u a5
 55953: d8 a3 0a                 a3 = t1 <u a3
 55956: d4 5a 0a                 a3 = a3 | s0
 55959: 52 0a bf 01              jump @4250 if a3 != 0
      :                          @4202
 55963: c9 c4 05                 s0 = t2 - a5
 55966: c8 35 05                 s0 = s0 + t1
 55969: 84 5a 07                 a3 = s0 & 0x7
 55972: c8 ac 0c                 a5 = a5 + a3
 55975: 01                       fallthrough
      :                          @4203
 55976: 82 07                    a0 = u64 [ra]
 55978: ab 67 d8                 jump @4200 if a0 != s1
      :                          @4204
 55981: 7b 0c                    u64 [ra] = a5
 55983: 33 0b                    a4 = 0
 55985: 7b 18 08                 u64 [sp + 0x8] = a1
 55988: c9 a5 05                 s0 = s0 - a3
 55991: 64 57                    a0 = s0
 55993: 33 08                    a1 = 0
 55995: 50 20 10 03 9e 30 02     ra = 784, jump @13675
      :                          @4205 [@dyn 392]
 56002: 82 17 20                 a0 = u64 [sp + 0x20]
 56005: 7b 17 40                 u64 [sp + 0x40] = a0
 56008: 7b 15 48                 u64 [sp + 0x48] = s0
 56011: 7b 17 50                 u64 [sp + 0x50] = a0
 56014: 82 15 10                 s0 = u64 [sp + 0x10]
 56017: 95 59 01                 a2 = s0 + 0x1
 56020: 95 17 28                 a0 = sp + 0x28
 56023: 95 18 40                 a1 = sp + 0x40
 56026: 50 20 12 03 3a 83        ra = 786, jump @1783
      :                          @4206 [@dyn 393]
 56032: 82 19 38                 a2 = u64 [sp + 0x38]
 56035: 51 09 70 01              jump @4247 if a2 == 0
      :                          @4207
 56039: 82 18 30                 a1 = u64 [sp + 0x30]
 56042: 82 87 10                 a0 = u64 [a1 + 0x10]
 56045: 51 07 67 01              jump @4248 if a0 == 0
      :                          @4208
 56049: 7b 19 20                 u64 [sp + 0x20] = a2
 56052: 7b 18                    u64 [sp] = a1
 56054: 82 89 08                 a2 = u64 [a1 + 0x8]
 56057: 33 08 01                 a1 = 0x1
 56060: 7b 98                    u64 [a2] = a1
 56062: 52 05 90 00              jump @4223 if s0 != 0
      :                          @4209
 56066: 82 17 08                 a0 = u64 [sp + 0x8]
 56069: 82 18 20                 a1 = u64 [sp + 0x20]
 56072: ae 85 4d 01              jump @4249 if s0 >=u a1
      :                          @4210
 56076: 33 03 18                 t1 = 0x18
 56079: ca 35 08                 a1 = s0 * t1
 56082: 82 10                    ra = u64 [sp]
 56084: c8 08 08                 a1 = a1 + ra
 56087: 82 89 10                 a2 = u64 [a1 + 0x10]
 56090: ae 97 2e 01              jump @4243 if a0 >=u a2
      :                          @4211
 56094: 82 8a 08                 a3 = u64 [a1 + 0x8]
 56097: 33 09                    a2 = 0
 56099: 97 78 03                 a1 = a0 << 0x3
 56102: c8 8a 07                 a0 = a3 + a1
 56105: 82 77                    a0 = u64 [a0]
 56107: 33 0b c0 22 03           a4 = 0x322c0
 56112: 95 bb 00 00 01           a4 = a4 + 0x10000
 56117: 33 02 00 20              t0 = 0x2000
 56121: 28 0c                    jump @4213
      :                          @4212
 56123: 95 99 01                 a2 = a2 + 0x1
 56126: 82 18 20                 a1 = u64 [sp + 0x20]
 56129: aa 89 c7 00              jump @4232 if a2 == a1
      :                          @4213
 56133: ca 39 0c                 a5 = a2 * t1
 56136: c8 0c 0c                 a5 = a5 + ra
 56139: 82 c5                    s0 = u64 [a5]
 56141: 51 05 ee                 jump @4212 if s0 == 0
      :                          @4214
 56144: ac 52 eb                 jump @4212 if t0 <u s0
      :                          @4215
 56147: 82 c6 08                 s1 = u64 [a5 + 0x8]
 56150: 97 54 03                 t2 = s0 << 0x3
 56153: 01                       fallthrough
      :                          @4216
 56154: 82 bc                    a5 = u64 [a4]
 56156: c9 cb 08                 a1 = a4 - a5
 56159: ab 68 dc                 jump @4212 if a1 != s1
      :                          @4217
 56162: c9 4c 08                 a1 = a5 - t2
 56165: 01                       fallthrough
      :                          @4218
 56166: 82 ba                    a3 = u64 [a4]
 56168: ab ca f2                 jump @4216 if a3 != a5
      :                          @4219
 56171: 7b b8                    u64 [a4] = a1
 56173: 33 05                    s0 = 0
 56175: 01                       fallthrough
      :                          @4220
 56176: ab ca ea                 jump @4216 if a3 != a5
      :                          @4221
 56179: 28 c8                    jump @4212
      :                          @4222
 56181: 82 15 10                 s0 = u64 [sp + 0x10]
 56184: 82 18 18                 a1 = u64 [sp + 0x18]
 56187: d8 58 09                 a2 = a1 <u s0
 56190: c8 98 08                 a1 = a1 + a2
 56193: 85 99 01                 a2 = a2 ^ 0x1
 56196: d8 85 0a                 a3 = s0 <u a1
 56199: d4 a9 09                 a2 = a2 | a3
 56202: 52 09 78 ff              jump @4209 if a2 != 0
      :                          @4223
 56206: 82 17 08                 a0 = u64 [sp + 0x8]
 56209: 7b 18 18                 u64 [sp + 0x18] = a1
 56212: e6 78 06                 s1 = minu(a1, a0)
 56215: 51 06 de                 jump @4222 if s1 == 0
      :                          @4224
 56218: 82 1c 18                 a5 = u64 [sp + 0x18]
 56221: 95 c7 ff                 a0 = a5 + 0xffffffffffffffff
 56224: 82 19 20                 a2 = u64 [sp + 0x20]
 56227: ae 97 a5 00              jump @4243 if a0 >=u a2
      :                          @4225
 56231: 96 c2 18                 t0 = a5 * 0x18
 56234: 82 18                    a1 = u64 [sp]
 56236: c8 82 02                 t0 = t0 + a1
 56239: 95 20 f8                 ra = t0 + 0xfffffffffffffff8
 56242: ae 9c 97 00              jump @4244 if a5 >=u a2
      :                          @4226
 56246: 95 29 f0                 a2 = t0 + 0xfffffffffffffff0
 56249: 95 25 10                 s0 = t0 + 0x10
 56252: 95 22 08                 t0 = t0 + 0x8
 56255: 33 0a 01                 a3 = 0x1
 56258: 01                       fallthrough
      :                          @4227
 56259: 82 0c                    a5 = u64 [ra]
 56261: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
 56264: ae cb 90 00              jump @4252 if a4 >=u a5
      :                          @4228
 56268: ae ca 79                 jump @4240 if a3 >=u a5
      :                          @4229
 56271: 82 5c                    a5 = u64 [s0]
 56273: ae ca 76                 jump @4242 if a3 >=u a5
      :                          @4230
 56276: 82 9c                    a5 = u64 [a2]
 56278: d8 6a 03                 t1 = a3 <u s1
 56281: 97 bb 03                 a4 = a4 << 0x3
 56284: c8 cb 0b                 a4 = a4 + a5
 56287: 97 a4 03                 t2 = a3 << 0x3
 56290: c8 4c 0c                 a5 = a5 + t2
 56293: 82 cc                    a5 = u64 [a5]
 56295: 82 28                    a1 = u64 [t0]
 56297: 82 bb                    a4 = u64 [a4]
 56299: c8 3a 0a                 a3 = a3 + t1
 56302: ca 7c 0c                 a5 = a5 * a0
 56305: c8 48 08                 a1 = a1 + t2
 56308: c9 cb 0b                 a4 = a4 - a5
 56311: d8 a6 0c                 a5 = s1 <u a3
 56314: 85 cc 01                 a5 = a5 ^ 0x1
 56317: d2 c3 0c                 a5 = t1 & a5
 56320: 7b 8b                    u64 [a1] = a4
 56322: 52 0c c1                 jump @4227 if a5 != 0
      :                          @4231
 56325: 28 70 ff                 jump @4222
      :                          @4232
 56328: 82 18 28                 a1 = u64 [sp + 0x28]
 56331: 51 08 2c                 jump @4239 if a1 == 0
      :                          @4233
 56334: 33 09 aa 0a              a2 = 0xaaa
 56338: ac 89 25                 jump @4239 if a2 <u a1
      :                          @4234
 56341: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 56344: 33 09 c0 22 03           a2 = 0x322c0
 56349: 95 99 00 00 01           a2 = a2 + 0x10000
 56354: 01                       fallthrough
      :                          @4235
 56355: 82 9a                    a3 = u64 [a2]
 56357: c9 a9 0b                 a4 = a2 - a3
 56360: ab 0b 0f                 jump @4239 if a4 != ra
      :                          @4236
 56363: c8 8a 0b                 a4 = a3 + a1
 56366: 01                       fallthrough
      :                          @4237
 56367: 82 9c                    a5 = u64 [a2]
 56369: ab ac f2                 jump @4235 if a5 != a3
      :                          @4238
 56372: 7b 9b                    u64 [a2] = a4
 56374: 01                       fallthrough
      :                          @4239
 56375: 82 10 68                 ra = u64 [sp + 0x68]
 56378: 82 15 60                 s0 = u64 [sp + 0x60]
 56381: 82 16 58                 s1 = u64 [sp + 0x58]
 56384: 95 11 70                 sp = sp + 0x70
 56387: 32 00                    ret
      :                          @4240
 56389: 00                       trap
      :                          @4241
 56390: 00                       trap
      :                          @4242
 56391: 00                       trap
      :                          @4243
 56392: 00                       trap
      :                          @4244
 56393: 82 0b                    a4 = u64 [ra]
 56395: 51 0b 0c                 jump @4251 if a4 == 0
      :                          @4245
 56398: 51 1b 01 f8              jump @4241 if a4 == 1
      :                          @4246
 56402: 00                       trap
      :                          @4247
 56403: 00                       trap
      :                          @4248
 56404: 00                       trap
      :                          @4249
 56405: 00                       trap
      :                          @4250
 56406: 00                       trap
      :                          @4251
 56407: 00                       trap
      :                          @4252
 56408: 00                       trap
      :                          @4253
 56409: 00                       trap
      :                          @4254
 56410: 95 11 90                 sp = sp + 0xffffffffffffff90
 56413: 7b 10 68                 u64 [sp + 0x68] = ra
 56416: 7b 15 60                 u64 [sp + 0x60] = s0
 56419: 7b 16 58                 u64 [sp + 0x58] = s1
 56422: ae 87 08                 jump @4256 if a0 >=u a1
      :                          @4255
 56425: 33 07                    a0 = 0
 56427: 28 f0 01                 jump @4297
      :                          @4256
 56430: 7b 17 10                 u64 [sp + 0x10] = a0
 56433: 14 07 fe ff ff ff ff ff ff 0f a0 = 0xffffffffffffffe
 56443: ac 87 fd 01              jump @4308 if a0 <u a1
      :                          @4257
 56447: 95 89 01                 a2 = a1 + 0x1
 56450: 14 07 ff ff ff ff ff ff ff 0f a0 = 0xfffffffffffffff
 56460: d8 78 02                 t0 = a1 <u a0
 56463: 7b 19 20                 u64 [sp + 0x20] = a2
 56466: 97 99 03                 a2 = a2 << 0x3
 56469: 97 22 03                 t0 = t0 << 0x3
 56472: 33 04 c0 22 03           t2 = 0x322c0
 56477: 33 03 00 00 01           t1 = 0x10000
 56482: c8 34 00                 ra = t2 + t1
 56485: 01                       fallthrough
      :                          @4258
 56486: 82 06                    s1 = u64 [ra]
 56488: c8 96 0c                 a5 = s1 + a2
 56491: ac 6c cc 01              jump @4307 if a5 <u s1
      :                          @4259
 56495: c8 2c 0a                 a3 = a5 + t0
 56498: d8 ca 05                 s0 = a3 <u a5
 56501: d8 a3 0a                 a3 = t1 <u a3
 56504: d4 5a 0a                 a3 = a3 | s0
 56507: 52 0a bc 01              jump @4307 if a3 != 0
      :                          @4260
 56511: c9 c4 05                 s0 = t2 - a5
 56514: c8 35 05                 s0 = s0 + t1
 56517: 84 5a 07                 a3 = s0 & 0x7
 56520: c8 ac 0c                 a5 = a5 + a3
 56523: 01                       fallthrough
      :                          @4261
 56524: 82 07                    a0 = u64 [ra]
 56526: ab 67 d8                 jump @4258 if a0 != s1
      :                          @4262
 56529: 7b 0c                    u64 [ra] = a5
 56531: 33 0b                    a4 = 0
 56533: 7b 18 08                 u64 [sp + 0x8] = a1
 56536: c9 a5 05                 s0 = s0 - a3
 56539: 64 57                    a0 = s0
 56541: 33 08                    a1 = 0
 56543: 50 20 14 03 7a 2e 02     ra = 788, jump @13675
      :                          @4263 [@dyn 394]
 56550: 82 17 20                 a0 = u64 [sp + 0x20]
 56553: 7b 17 40                 u64 [sp + 0x40] = a0
 56556: 7b 15 48                 u64 [sp + 0x48] = s0
 56559: 7b 17 50                 u64 [sp + 0x50] = a0
 56562: 82 15 10                 s0 = u64 [sp + 0x10]
 56565: 95 59 01                 a2 = s0 + 0x1
 56568: 95 17 28                 a0 = sp + 0x28
 56571: 95 18 40                 a1 = sp + 0x40
 56574: 50 20 16 03 16 81        ra = 790, jump @1783
      :                          @4264 [@dyn 395]
 56580: 82 19 38                 a2 = u64 [sp + 0x38]
 56583: 51 09 6c 01              jump @4303 if a2 == 0
      :                          @4265
 56587: 82 18 30                 a1 = u64 [sp + 0x30]
 56590: 82 87 10                 a0 = u64 [a1 + 0x10]
 56593: 51 07 63 01              jump @4304 if a0 == 0
      :                          @4266
 56597: 7b 19 20                 u64 [sp + 0x20] = a2
 56600: 7b 18                    u64 [sp] = a1
 56602: 82 89 08                 a2 = u64 [a1 + 0x8]
 56605: 33 08 01                 a1 = 0x1
 56608: 7b 98                    u64 [a2] = a1
 56610: 52 05 90 00              jump @4281 if s0 != 0
      :                          @4267
 56614: 82 17 08                 a0 = u64 [sp + 0x8]
 56617: 82 18 20                 a1 = u64 [sp + 0x20]
 56620: ae 85 49 01              jump @4305 if s0 >=u a1
      :                          @4268
 56624: 33 03 18                 t1 = 0x18
 56627: ca 35 08                 a1 = s0 * t1
 56630: 82 10                    ra = u64 [sp]
 56632: c8 08 08                 a1 = a1 + ra
 56635: 82 89 10                 a2 = u64 [a1 + 0x10]
 56638: ae 97 38 01              jump @4306 if a0 >=u a2
      :                          @4269
 56642: 82 8a 08                 a3 = u64 [a1 + 0x8]
 56645: 33 09                    a2 = 0
 56647: 97 78 03                 a1 = a0 << 0x3
 56650: c8 8a 07                 a0 = a3 + a1
 56653: 82 77                    a0 = u64 [a0]
 56655: 33 0b c0 22 03           a4 = 0x322c0
 56660: 95 bb 00 00 01           a4 = a4 + 0x10000
 56665: 33 02 00 20              t0 = 0x2000
 56669: 28 0c                    jump @4271
      :                          @4270
 56671: 95 99 01                 a2 = a2 + 0x1
 56674: 82 18 20                 a1 = u64 [sp + 0x20]
 56677: aa 89 c7 00              jump @4290 if a2 == a1
      :                          @4271
 56681: ca 39 0c                 a5 = a2 * t1
 56684: c8 0c 0c                 a5 = a5 + ra
 56687: 82 c5                    s0 = u64 [a5]
 56689: 51 05 ee                 jump @4270 if s0 == 0
      :                          @4272
 56692: ac 52 eb                 jump @4270 if t0 <u s0
      :                          @4273
 56695: 82 c6 08                 s1 = u64 [a5 + 0x8]
 56698: 97 54 03                 t2 = s0 << 0x3
 56701: 01                       fallthrough
      :                          @4274
 56702: 82 bc                    a5 = u64 [a4]
 56704: c9 cb 08                 a1 = a4 - a5
 56707: ab 68 dc                 jump @4270 if a1 != s1
      :                          @4275
 56710: c9 4c 08                 a1 = a5 - t2
 56713: 01                       fallthrough
      :                          @4276
 56714: 82 ba                    a3 = u64 [a4]
 56716: ab ca f2                 jump @4274 if a3 != a5
      :                          @4277
 56719: 7b b8                    u64 [a4] = a1
 56721: 33 05                    s0 = 0
 56723: 01                       fallthrough
      :                          @4278
 56724: ab ca ea                 jump @4274 if a3 != a5
      :                          @4279
 56727: 28 c8                    jump @4270
      :                          @4280
 56729: 82 15 10                 s0 = u64 [sp + 0x10]
 56732: 82 18 18                 a1 = u64 [sp + 0x18]
 56735: d8 58 09                 a2 = a1 <u s0
 56738: c8 98 08                 a1 = a1 + a2
 56741: 85 99 01                 a2 = a2 ^ 0x1
 56744: d8 85 0a                 a3 = s0 <u a1
 56747: d4 a9 09                 a2 = a2 | a3
 56750: 52 09 78 ff              jump @4267 if a2 != 0
      :                          @4281
 56754: 82 17 08                 a0 = u64 [sp + 0x8]
 56757: 7b 18 18                 u64 [sp + 0x18] = a1
 56760: e6 78 05                 s0 = minu(a1, a0)
 56763: 51 05 de                 jump @4280 if s0 == 0
      :                          @4282
 56766: 82 1b 18                 a4 = u64 [sp + 0x18]
 56769: 95 b9 ff                 a2 = a4 + 0xffffffffffffffff
 56772: 82 18 20                 a1 = u64 [sp + 0x20]
 56775: ae 89 a3 00              jump @4299 if a2 >=u a1
      :                          @4283
 56779: 96 bc 18                 a5 = a4 * 0x18
 56782: 82 17                    a0 = u64 [sp]
 56784: c8 7c 0c                 a5 = a5 + a0
 56787: 95 c7 f8                 a0 = a5 + 0xfffffffffffffff8
 56790: ae 8b 95 00              jump @4300 if a4 >=u a1
      :                          @4284
 56794: 95 c0 f0                 ra = a5 + 0xfffffffffffffff0
 56797: 95 c6 10                 s1 = a5 + 0x10
 56800: 95 cc 08                 a5 = a5 + 0x8
 56803: 33 09 01                 a2 = 0x1
 56806: 01                       fallthrough
      :                          @4285
 56807: 82 7a                    a3 = u64 [a0]
 56809: ae a9 89 00              jump @4302 if a2 >=u a3
      :                          @4286
 56813: 95 9b ff                 a4 = a2 + 0xffffffffffffffff
 56816: ae ab 79                 jump @4298 if a4 >=u a3
      :                          @4287
 56819: 82 6a                    a3 = u64 [s1]
 56821: ae a9 7d                 jump @4302 if a2 >=u a3
      :                          @4288
 56824: 82 04                    t2 = u64 [ra]
 56826: d8 59 02                 t0 = a2 <u s0
 56829: 97 93 03                 t1 = a2 << 0x3
 56832: c8 34 0a                 a3 = t2 + t1
 56835: 82 aa                    a3 = u64 [a3]
 56837: 97 bb 03                 a4 = a4 << 0x3
 56840: c8 4b 0b                 a4 = a4 + t2
 56843: 82 c8                    a1 = u64 [a5]
 56845: 82 bb                    a4 = u64 [a4]
 56847: ca 9a 0a                 a3 = a3 * a2
 56850: c8 29 09                 a2 = a2 + t0
 56853: c8 38 08                 a1 = a1 + t1
 56856: c8 ba 0a                 a3 = a3 + a4
 56859: d8 95 0b                 a4 = s0 <u a2
 56862: 85 bb 01                 a4 = a4 ^ 0x1
 56865: d2 b2 0b                 a4 = t0 & a4
 56868: 7b 8a                    u64 [a1] = a3
 56870: 52 0b c1                 jump @4285 if a4 != 0
      :                          @4289
 56873: 28 70 ff                 jump @4280
      :                          @4290
 56876: 82 18 28                 a1 = u64 [sp + 0x28]
 56879: 51 08 2c                 jump @4297 if a1 == 0
      :                          @4291
 56882: 33 09 aa 0a              a2 = 0xaaa
 56886: ac 89 25                 jump @4297 if a2 <u a1
      :                          @4292
 56889: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 56892: 33 09 c0 22 03           a2 = 0x322c0
 56897: 95 99 00 00 01           a2 = a2 + 0x10000
 56902: 01                       fallthrough
      :                          @4293
 56903: 82 9a                    a3 = u64 [a2]
 56905: c9 a9 0b                 a4 = a2 - a3
 56908: ab 0b 0f                 jump @4297 if a4 != ra
      :                          @4294
 56911: c8 8a 0b                 a4 = a3 + a1
 56914: 01                       fallthrough
      :                          @4295
 56915: 82 9c                    a5 = u64 [a2]
 56917: ab ac f2                 jump @4293 if a5 != a3
      :                          @4296
 56920: 7b 9b                    u64 [a2] = a4
 56922: 01                       fallthrough
      :                          @4297
 56923: 82 10 68                 ra = u64 [sp + 0x68]
 56926: 82 15 60                 s0 = u64 [sp + 0x60]
 56929: 82 16 58                 s1 = u64 [sp + 0x58]
 56932: 95 11 70                 sp = sp + 0x70
 56935: 32 00                    ret
      :                          @4298
 56937: 00                       trap
      :                          @4299
 56938: 00                       trap
      :                          @4300
 56939: 82 7a                    a3 = u64 [a0]
 56941: 54 1a 01 05              jump @4302 if a3 <=u 1
      :                          @4301
 56945: 00                       trap
      :                          @4302
 56946: 00                       trap
      :                          @4303
 56947: 00                       trap
      :                          @4304
 56948: 00                       trap
      :                          @4305
 56949: 00                       trap
      :                          @4306
 56950: 00                       trap
      :                          @4307
 56951: 00                       trap
      :                          @4308
 56952: 00                       trap
      :                          @4309
 56953: 82 ab                    a4 = u64 [a3]
 56955: c8 9b 0c                 a5 = a4 + a2
 56958: ac bc ce 01              jump @4359 if a5 <u a4
      :                          @4310
 56962: 95 c8 08                 a1 = a5 + 0x8
 56965: d8 c8 06                 s1 = a1 <u a5
 56968: d8 82 08                 a1 = t0 <u a1
 56971: d4 68 08                 a1 = a1 | s1
 56974: 52 08 be 01              jump @4359 if a1 != 0
      :                          @4311
 56978: c9 c3 06                 s1 = t1 - a5
 56981: c8 26 06                 s1 = s1 + t0
 56984: 84 68 07                 a1 = s1 & 0x7
 56987: c8 8c 0c                 a5 = a5 + a1
 56990: 01                       fallthrough
      :                          @4312
 56991: 82 a5                    s0 = u64 [a3]
 56993: ab b5 d8                 jump @4309 if s0 != a4
      :                          @4313
 56996: 7b ac                    u64 [a3] = a5
 56998: c9 86 06                 s1 = s1 - a1
 57001: 64 67                    a0 = s1
 57003: 33 08                    a1 = 0
 57005: 50 20 18 03 ac 2c 02     ra = 792, jump @13675
      :                          @4314 [@dyn 396]
 57012: 82 19 18                 a2 = u64 [sp + 0x18]
 57015: 7b 19 38                 u64 [sp + 0x38] = a2
 57018: 7b 16 40                 u64 [sp + 0x40] = s1
 57021: 7b 19 48                 u64 [sp + 0x48] = a2
 57024: 95 17 20                 a0 = sp + 0x20
 57027: 95 18 38                 a1 = sp + 0x38
 57030: 50 20 1a 03 4e 7f ff     ra = 794, jump @1783
      :                          @4315 [@dyn 397]
 57037: 82 17 30                 a0 = u64 [sp + 0x30]
 57040: 7b 17 18                 u64 [sp + 0x18] = a0
 57043: 51 07 77 01              jump @4357 if a0 == 0
      :                          @4316
 57047: 82 10 28                 ra = u64 [sp + 0x28]
 57050: 82 07 10                 a0 = u64 [ra + 0x10]
 57053: 51 07 6d 01              jump @4357 if a0 == 0
      :                          @4317
 57057: 82 08 08                 a1 = u64 [ra + 0x8]
 57060: 33 07 01                 a0 = 0x1
 57063: 7b 87                    u64 [a1] = a0
 57065: 82 1b 08                 a4 = u64 [sp + 0x8]
 57068: 51 0b b3 00              jump @4329 if a4 == 0
      :                          @4318
 57072: 7b 10                    u64 [sp] = ra
 57074: 01                       fallthrough
      :                          @4319
 57075: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 57078: 82 18 18                 a1 = u64 [sp + 0x18]
 57081: ae 89 4e 01              jump @4354 if a2 >=u a1
      :                          @4320
 57085: 96 95 18                 s0 = a2 * 0x18
 57088: c8 05 05                 s0 = s0 + ra
 57091: 82 5a 10                 a3 = u64 [s0 + 0x10]
 57094: ae a9 42 01              jump @4355 if a2 >=u a3
      :                          @4321
 57098: 82 18 18                 a1 = u64 [sp + 0x18]
 57101: ae 87 3c 01              jump @4356 if a0 >=u a1
      :                          @4322
 57105: 96 73 18                 t1 = a0 * 0x18
 57108: c8 03 03                 t1 = t1 + ra
 57111: 82 38 10                 a1 = u64 [t1 + 0x10]
 57114: 51 08 2c 01              jump @4353 if a1 == 0
      :                          @4323
 57118: d8 b7 00                 ra = a0 <u a4
 57121: 82 58 08                 a1 = u64 [s0 + 0x8]
 57124: 7b 10 10                 u64 [sp + 0x10] = ra
 57127: c8 70 00                 ra = ra + a0
 57130: 95 56 10                 s1 = s0 + 0x10
 57133: 97 99 03                 a2 = a2 << 0x3
 57136: c8 98 08                 a1 = a1 + a2
 57139: 82 88                    a1 = u64 [a1]
 57141: 82 39 08                 a2 = u64 [t1 + 0x8]
 57144: 95 55 08                 s0 = s0 + 0x8
 57147: 95 32 10                 t0 = t1 + 0x10
 57150: 95 33 08                 t1 = t1 + 0x8
 57153: 7b 98                    u64 [a2] = a1
 57155: 33 09 01                 a2 = 0x1
 57158: 01                       fallthrough
      :                          @4324
 57159: 82 2b                    a4 = u64 [t0]
 57161: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 57164: ae ba f7 00              jump @4350 if a3 >=u a4
      :                          @4325
 57168: 82 6c                    a5 = u64 [s1]
 57170: ae ca f2 00              jump @4351 if a3 >=u a5
      :                          @4326
 57174: ae b9 ef 00              jump @4352 if a2 >=u a4
      :                          @4327
 57178: 82 34                    t2 = u64 [t1]
 57180: d8 79 0b                 a4 = a2 <u a0
 57183: 82 5c                    a5 = u64 [s0]
 57185: 97 aa 03                 a3 = a3 << 0x3
 57188: c8 a4 08                 a1 = t2 + a3
 57191: 82 88                    a1 = u64 [a1]
 57193: c8 ca 0a                 a3 = a3 + a5
 57196: 82 aa                    a3 = u64 [a3]
 57198: 97 9c 03                 a5 = a2 << 0x3
 57201: c8 b9 09                 a2 = a2 + a4
 57204: c8 4c 0c                 a5 = a5 + t2
 57207: c8 a8 08                 a1 = a1 + a3
 57210: d8 97 0a                 a3 = a0 <u a2
 57213: 85 aa 01                 a3 = a3 ^ 0x1
 57216: d2 ba 0a                 a3 = a3 & a4
 57219: 7b c8                    u64 [a5] = a1
 57221: 52 0a c2                 jump @4324 if a3 != 0
      :                          @4328
 57224: 82 17 10                 a0 = u64 [sp + 0x10]
 57227: 85 77 01                 a0 = a0 ^ 0x1
 57230: 82 1b 08                 a4 = u64 [sp + 0x8]
 57233: d8 0b 08                 a1 = a4 <u ra
 57236: d4 78 08                 a1 = a1 | a0
 57239: 64 07                    a0 = ra
 57241: 82 10                    ra = u64 [sp]
 57243: 51 08 58 ff              jump @4319 if a1 == 0
      :                          @4329
 57247: 82 17 18                 a0 = u64 [sp + 0x18]
 57250: ae 7b a9 00              jump @4358 if a4 >=u a0
      :                          @4330
 57254: 33 03 18                 t1 = 0x18
 57257: ca 3b 07                 a0 = a4 * t1
 57260: c8 07 07                 a0 = a0 + ra
 57263: 82 78 10                 a1 = u64 [a0 + 0x10]
 57266: 51 08 94 00              jump @4353 if a1 == 0
      :                          @4331
 57270: 82 77 08                 a0 = u64 [a0 + 0x8]
 57273: 33 0a                    a3 = 0
 57275: 82 77                    a0 = u64 [a0]
 57277: 33 0b c0 22 03           a4 = 0x322c0
 57282: 95 bc 00 00 01           a5 = a4 + 0x10000
 57287: 33 02 00 20              t0 = 0x2000
 57291: 28 0b                    jump @4333
      :                          @4332
 57293: 95 aa 01                 a3 = a3 + 0x1
 57296: 82 18 18                 a1 = u64 [sp + 0x18]
 57299: aa 8a 33                 jump @4342 if a3 == a1
      :                          @4333
 57302: ca 3a 08                 a1 = a3 * t1
 57305: c8 08 08                 a1 = a1 + ra
 57308: 82 85                    s0 = u64 [a1]
 57310: 51 05 ef                 jump @4332 if s0 == 0
      :                          @4334
 57313: ac 52 ec                 jump @4332 if t0 <u s0
      :                          @4335
 57316: 82 86 08                 s1 = u64 [a1 + 0x8]
 57319: 97 54 03                 t2 = s0 << 0x3
 57322: 01                       fallthrough
      :                          @4336
 57323: 82 c8                    a1 = u64 [a5]
 57325: c9 8c 0b                 a4 = a5 - a1
 57328: ab 6b dd                 jump @4332 if a4 != s1
      :                          @4337
 57331: c9 48 0b                 a4 = a1 - t2
 57334: 01                       fallthrough
      :                          @4338
 57335: 82 c9                    a2 = u64 [a5]
 57337: ab 89 f2                 jump @4336 if a2 != a1
      :                          @4339
 57340: 7b cb                    u64 [a5] = a4
 57342: 33 05                    s0 = 0
 57344: 01                       fallthrough
      :                          @4340
 57345: ab 89 ea                 jump @4336 if a2 != a1
      :                          @4341
 57348: 28 c9                    jump @4332
      :                          @4342
 57350: 82 19 20                 a2 = u64 [sp + 0x20]
 57353: 51 09 2c                 jump @4349 if a2 == 0
      :                          @4343
 57356: 33 08 aa 0a              a1 = 0xaaa
 57360: ac 98 25                 jump @4349 if a1 <u a2
      :                          @4344
 57363: 96 99 e8                 a2 = a2 * 0xffffffffffffffe8
 57366: 33 0a c0 22 03           a3 = 0x322c0
 57371: 95 aa 00 00 01           a3 = a3 + 0x10000
 57376: 01                       fallthrough
      :                          @4345
 57377: 82 a8                    a1 = u64 [a3]
 57379: c9 8a 0b                 a4 = a3 - a1
 57382: ab 0b 0f                 jump @4349 if a4 != ra
      :                          @4346
 57385: c8 98 0b                 a4 = a1 + a2
 57388: 01                       fallthrough
      :                          @4347
 57389: 82 ac                    a5 = u64 [a3]
 57391: ab 8c f2                 jump @4345 if a5 != a1
      :                          @4348
 57394: 7b ab                    u64 [a3] = a4
 57396: 01                       fallthrough
      :                          @4349
 57397: 82 10 60                 ra = u64 [sp + 0x60]
 57400: 82 15 58                 s0 = u64 [sp + 0x58]
 57403: 82 16 50                 s1 = u64 [sp + 0x50]
 57406: 95 11 68                 sp = sp + 0x68
 57409: 32 00                    ret
      :                          @4350
 57411: 00                       trap
      :                          @4351
 57412: 00                       trap
      :                          @4352
 57413: 00                       trap
      :                          @4353
 57414: 00                       trap
      :                          @4354
 57415: 00                       trap
      :                          @4355
 57416: 00                       trap
      :                          @4356
 57417: 00                       trap
      :                          @4357
 57418: 00                       trap
      :                          @4358
 57419: 00                       trap
      :                          @4359
 57420: 00                       trap
      :                          @4360
 57421: 83 72                    i32 t0 = a0 + 0
 57423: 51 02 34                 jump @4365 if t0 == 0
      :                          @4361
 57426: 33 07                    a0 = 0
 57428: 33 09 01                 a2 = 0x1
 57431: aa 92 2a                 jump @4364 if t0 == a2
      :                          @4362
 57434: 33 0a 02                 a3 = 0x2
 57437: 01                       fallthrough
      :                          @4363
 57438: d8 2a 0b                 a4 = a3 <u t0
 57441: 85 bc 01                 a5 = a4 ^ 0x1
 57444: 97 a8 20                 a1 = a3 << 0x20
 57447: be ba 0a                 i32 a3 = a3 + a4
 57450: d8 a2 0b                 a4 = t0 <u a3
 57453: d4 cb 0b                 a4 = a4 | a5
 57456: 98 88 20                 a1 = a1 >> 0x20
 57459: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 57462: c8 97 0c                 a5 = a0 + a2
 57465: 64 79                    a2 = a0
 57467: ca 8c 07                 a0 = a5 * a1
 57470: 51 0b e0                 jump @4363 if a4 == 0
      :                          @4364
 57473: 32 00                    ret
      :                          @4365
 57475: 33 07 01                 a0 = 0x1
 57478: 28 55 b3 00              jump @8094
      :                          @4366
 57482: 95 11 90                 sp = sp + 0xffffffffffffff90
 57485: 7b 10 68                 u64 [sp + 0x68] = ra
 57488: 7b 15 60                 u64 [sp + 0x60] = s0
 57491: 7b 16 58                 u64 [sp + 0x58] = s1
 57494: ae 87 14                 jump @4369 if a0 >=u a1
      :                          @4367
 57497: 33 07                    a0 = 0
 57499: 01                       fallthrough
      :                          @4368
 57500: 82 10 68                 ra = u64 [sp + 0x68]
 57503: 82 15 60                 s0 = u64 [sp + 0x60]
 57506: 82 16 58                 s1 = u64 [sp + 0x58]
 57509: 95 11 70                 sp = sp + 0x70
 57512: 32 00                    ret
      :                          @4369
 57514: 64 79                    a2 = a0
 57516: 98 77 3c                 a0 = a0 >> 0x3c
 57519: 52 07 16 02              jump @4436 if a0 != 0
      :                          @4370
 57523: 88 72 01                 t0 = a0 <u 0x1
 57526: 7b 19 10                 u64 [sp + 0x10] = a2
 57529: 97 99 03                 a2 = a2 << 0x3
 57532: 97 22 03                 t0 = t0 << 0x3
 57535: 33 04 c0 22 03           t2 = 0x322c0
 57540: 33 03 00 00 01           t1 = 0x10000
 57545: c8 34 00                 ra = t2 + t1
 57548: 01                       fallthrough
      :                          @4371
 57549: 82 06                    s1 = u64 [ra]
 57551: c8 96 0c                 a5 = s1 + a2
 57554: ac 6c ed 01              jump @4433 if a5 <u s1
      :                          @4372
 57558: c8 2c 0a                 a3 = a5 + t0
 57561: d8 ca 05                 s0 = a3 <u a5
 57564: d8 a3 0a                 a3 = t1 <u a3
 57567: d4 5a 0a                 a3 = a3 | s0
 57570: 52 0a dd 01              jump @4433 if a3 != 0
      :                          @4373
 57574: c9 c4 05                 s0 = t2 - a5
 57577: c8 35 05                 s0 = s0 + t1
 57580: 84 5a 07                 a3 = s0 & 0x7
 57583: c8 ac 0c                 a5 = a5 + a3
 57586: 01                       fallthrough
      :                          @4374
 57587: 82 07                    a0 = u64 [ra]
 57589: ab 67 d8                 jump @4371 if a0 != s1
      :                          @4375
 57592: 7b 0c                    u64 [ra] = a5
 57594: 33 0b                    a4 = 0
 57596: 7b 18                    u64 [sp] = a1
 57598: c9 a5 05                 s0 = s0 - a3
 57601: 64 57                    a0 = s0
 57603: 33 08                    a1 = 0
 57605: 50 20 1c 03 54 2a 02     ra = 796, jump @13675
      :                          @4376 [@dyn 398]
 57612: 82 19 10                 a2 = u64 [sp + 0x10]
 57615: 7b 19 40                 u64 [sp + 0x40] = a2
 57618: 7b 15 48                 u64 [sp + 0x48] = s0
 57621: 7b 19 50                 u64 [sp + 0x50] = a2
 57624: 95 99 01                 a2 = a2 + 0x1
 57627: 95 17 28                 a0 = sp + 0x28
 57630: 95 18 40                 a1 = sp + 0x40
 57633: 50 20 1e 03 f3 7c ff     ra = 798, jump @1783
      :                          @4377 [@dyn 399]
 57640: 82 18 38                 a1 = u64 [sp + 0x38]
 57643: 51 08 90 01              jump @4429 if a1 == 0
      :                          @4378
 57647: 82 10 30                 ra = u64 [sp + 0x30]
 57650: 82 07 10                 a0 = u64 [ra + 0x10]
 57653: 51 07 88 01              jump @4431 if a0 == 0
      :                          @4379
 57657: 82 07 08                 a0 = u64 [ra + 0x8]
 57660: 33 0a 01                 a3 = 0x1
 57663: 7b 7a                    u64 [a0] = a3
 57665: 7b 18 20                 u64 [sp + 0x20] = a1
 57668: 7b 10 08                 u64 [sp + 0x8] = ra
 57671: 28 2c                    jump @4383
      :                          @4380
 57673: 82 07                    a0 = u64 [ra]
 57675: 51 07 6d 01              jump @4426 if a0 == 0
      :                          @4381
 57679: 82 47                    a0 = u64 [t2]
 57681: 49 07                    u64 [a0 + 0] = 0
 57683: 01                       fallthrough
      :                          @4382
 57684: 82 17 10                 a0 = u64 [sp + 0x10]
 57687: 82 1a 18                 a3 = u64 [sp + 0x18]
 57690: d8 7a 08                 a1 = a3 <u a0
 57693: c8 8a 0a                 a3 = a3 + a1
 57696: 85 89 01                 a2 = a1 ^ 0x1
 57699: d8 a7 08                 a1 = a0 <u a3
 57702: d4 89 09                 a2 = a2 | a1
 57705: 82 10 08                 ra = u64 [sp + 0x8]
 57708: 82 18 20                 a1 = u64 [sp + 0x20]
 57711: 52 09 99 00              jump @4400 if a2 != 0
      :                          @4383
 57715: 95 a7 ff                 a0 = a3 + 0xffffffffffffffff
 57718: 96 a6 18                 s1 = a3 * 0x18
 57721: c8 06 06                 s1 = s1 + ra
 57724: 95 60 10                 ra = s1 + 0x10
 57727: 95 64 08                 t2 = s1 + 0x8
 57730: 7b 1a 18                 u64 [sp + 0x18] = a3
 57733: ae 87 78                 jump @4397 if a0 >=u a1
      :                          @4384
 57736: 95 65 f8                 s0 = s1 + 0xfffffffffffffff8
 57739: ae 8a 24 01              jump @4423 if a3 >=u a1
      :                          @4385
 57743: 51 07 ba                 jump @4380 if a0 == 0
      :                          @4386
 57746: 82 58                    a1 = u64 [s0]
 57748: 51 08 25 01              jump @4427 if a1 == 0
      :                          @4387
 57752: 82 08                    a1 = u64 [ra]
 57754: 51 08 1e 01              jump @4426 if a1 == 0
      :                          @4388
 57758: 95 66 f0                 s1 = s1 + 0xfffffffffffffff0
 57761: 82 68                    a1 = u64 [s1]
 57763: 82 88                    a1 = u64 [a1]
 57765: 82 49                    a2 = u64 [t2]
 57767: 7b 98                    u64 [a2] = a1
 57769: 33 0a 01                 a3 = 0x1
 57772: 33 02 08                 t0 = 0x8
 57775: 64 79                    a2 = a0
 57777: 01                       fallthrough
      :                          @4389
 57778: 82 5b                    a4 = u64 [s0]
 57780: 95 ac ff                 a5 = a3 + 0xffffffffffffffff
 57783: ae bc f7 00              jump @4422 if a5 >=u a4
      :                          @4390
 57787: 82 68                    a1 = u64 [s1]
 57789: c8 28 08                 a1 = a1 + t0
 57792: 82 83 f8                 t1 = u64 [a1 + 0xfffffffffffffff8]
 57795: 95 ac 01                 a5 = a3 + 0x1
 57798: ae 7a 14                 jump @4394 if a3 >=u a0
      :                          @4391
 57801: ae ba f1 00              jump @4428 if a3 >=u a4
      :                          @4392
 57805: 82 88                    a1 = u64 [a1]
 57807: ca c8 08                 a1 = a1 * a5
 57810: 82 0b                    a4 = u64 [ra]
 57812: ac ba 0e                 jump @4395 if a3 <u a4
      :                          @4393
 57815: 28 e3 00                 jump @4428
      :                          @4394
 57818: 33 08                    a1 = 0
 57820: 82 0b                    a4 = u64 [ra]
 57822: ae ba dc 00              jump @4428 if a3 >=u a4
      :                          @4395
 57826: 82 4a                    a3 = u64 [t2]
 57828: ca 93 0b                 a4 = t1 * a2
 57831: c8 2a 0a                 a3 = a3 + t0
 57834: c8 b8 08                 a1 = a1 + a4
 57837: 7b a8                    u64 [a3] = a1
 57839: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 57842: 95 22 08                 t0 = t0 + 0x8
 57845: 64 ca                    a3 = a5
 57847: 52 09 bb                 jump @4389 if a2 != 0
      :                          @4396
 57850: 28 5a ff                 jump @4382
      :                          @4397
 57853: ae 8a c3 00              jump @4434 if a3 >=u a1
      :                          @4398
 57857: 51 07 48 ff              jump @4380 if a0 == 0
      :                          @4399
 57861: 28 b7 00                 jump @4430
      :                          @4400
 57864: ae 87 b4 00              jump @4430 if a0 >=u a1
      :                          @4401
 57868: 33 03 18                 t1 = 0x18
 57871: ca 37 07                 a0 = a0 * t1
 57874: c8 07 07                 a0 = a0 + ra
 57877: 82 79 10                 a2 = u64 [a0 + 0x10]
 57880: 82 18                    a1 = u64 [sp]
 57882: ae 98 a4 00              jump @4432 if a1 >=u a2
      :                          @4402
 57886: 82 77 08                 a0 = u64 [a0 + 0x8]
 57889: 33 09                    a2 = 0
 57891: 97 88 03                 a1 = a1 << 0x3
 57894: c8 87 07                 a0 = a0 + a1
 57897: 82 77                    a0 = u64 [a0]
 57899: 33 0b c0 22 03           a4 = 0x322c0
 57904: 95 bc 00 00 01           a5 = a4 + 0x10000
 57909: 33 02 00 20              t0 = 0x2000
 57913: 28 0b                    jump @4404
      :                          @4403
 57915: 95 99 01                 a2 = a2 + 0x1
 57918: 82 18 20                 a1 = u64 [sp + 0x20]
 57921: aa 89 33                 jump @4413 if a2 == a1
      :                          @4404
 57924: ca 39 08                 a1 = a2 * t1
 57927: c8 08 08                 a1 = a1 + ra
 57930: 82 86                    s1 = u64 [a1]
 57932: 51 06 ef                 jump @4403 if s1 == 0
      :                          @4405
 57935: ac 62 ec                 jump @4403 if t0 <u s1
      :                          @4406
 57938: 82 88 08                 a1 = u64 [a1 + 0x8]
 57941: 97 64 03                 t2 = s1 << 0x3
 57944: 01                       fallthrough
      :                          @4407
 57945: 82 c5                    s0 = u64 [a5]
 57947: c9 5c 0b                 a4 = a5 - s0
 57950: ab 8b dd                 jump @4403 if a4 != a1
      :                          @4408
 57953: c9 45 0b                 a4 = s0 - t2
 57956: 01                       fallthrough
      :                          @4409
 57957: 82 ca                    a3 = u64 [a5]
 57959: ab 5a f2                 jump @4407 if a3 != s0
      :                          @4410
 57962: 7b cb                    u64 [a5] = a4
 57964: 33 06                    s1 = 0
 57966: 01                       fallthrough
      :                          @4411
 57967: ab 5a ea                 jump @4407 if a3 != s0
      :                          @4412
 57970: 28 c9                    jump @4403
      :                          @4413
 57972: 82 18 28                 a1 = u64 [sp + 0x28]
 57975: 51 08 25 fe              jump @4368 if a1 == 0
      :                          @4414
 57979: 33 09 aa 0a              a2 = 0xaaa
 57983: ac 89 1d fe              jump @4368 if a2 <u a1
      :                          @4415
 57987: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 57990: 33 09 c0 22 03           a2 = 0x322c0
 57995: 95 99 00 00 01           a2 = a2 + 0x10000
 58000: 01                       fallthrough
      :                          @4416
 58001: 82 9a                    a3 = u64 [a2]
 58003: c9 a9 0b                 a4 = a2 - a3
 58006: ab 0b 06 fe              jump @4368 if a4 != ra
      :                          @4417
 58010: c8 8a 0b                 a4 = a3 + a1
 58013: 01                       fallthrough
      :                          @4418
 58014: 82 9c                    a5 = u64 [a2]
 58016: ab ac f1                 jump @4416 if a5 != a3
      :                          @4419
 58019: 7b 9b                    u64 [a2] = a4
 58021: 33 06                    s1 = 0
 58023: 01                       fallthrough
      :                          @4420
 58024: ab ac e9                 jump @4416 if a5 != a3
      :                          @4421
 58027: 28 f1 fd                 jump @4368
      :                          @4422
 58030: 00                       trap
      :                          @4423
 58031: 51 07 08                 jump @4425 if a0 == 0
      :                          @4424
 58034: 82 57                    a0 = u64 [s0]
 58036: 51 07 05                 jump @4427 if a0 == 0
      :                          @4425
 58039: 00                       trap
      :                          @4426
 58040: 00                       trap
      :                          @4427
 58041: 00                       trap
      :                          @4428
 58042: 00                       trap
      :                          @4429
 58043: 00                       trap
      :                          @4430
 58044: 00                       trap
      :                          @4431
 58045: 00                       trap
      :                          @4432
 58046: 00                       trap
      :                          @4433
 58047: 00                       trap
      :                          @4434
 58048: 51 07 f7                 jump @4425 if a0 == 0
      :                          @4435
 58051: 28 f9                    jump @4430
      :                          @4436
 58053: 00                       trap
      :                          @4437
 58054: 33 03                    t1 = 0
 58056: 51 08 3b                 jump @4445 if a1 == 0
      :                          @4438
 58059: 33 04                    t2 = 0
 58061: 33 02 18                 t0 = 0x18
 58064: 28 11                    jump @4441
      :                          @4439
 58066: 33 0a                    a3 = 0
 58068: 01                       fallthrough
      :                          @4440
 58069: 95 44 01                 t2 = t2 + 0x1
 58072: 84 aa 01                 a3 = a3 & 0x1
 58075: be 3a 03                 i32 t1 = a3 + t1
 58078: aa 84 25                 jump @4445 if t2 == a1
      :                          @4441
 58081: ca 24 09                 a2 = t2 * t0
 58084: c8 79 09                 a2 = a2 + a0
 58087: 82 9c 10                 a5 = u64 [a2 + 0x10]
 58090: 51 0c e8                 jump @4439 if a5 == 0
      :                          @4442
 58093: 82 9b 08                 a4 = u64 [a2 + 0x8]
 58096: 33 0a                    a3 = 0
 58098: 01                       fallthrough
      :                          @4443
 58099: 7c b9                    a2 = u8 [a4]
 58101: c8 9a 0a                 a3 = a3 + a2
 58104: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 58107: 95 bb 01                 a4 = a4 + 0x1
 58110: 52 0c f5                 jump @4443 if a5 != 0
      :                          @4444
 58113: 28 d4                    jump @4440
      :                          @4445
 58115: 88 37 01                 a0 = t1 <u 0x1
 58118: 95 33 fe                 t1 = t1 + 0xfffffffffffffffe
 58121: 88 38 01                 a1 = t1 <u 0x1
 58124: d4 78 08                 a1 = a1 | a0
 58127: 32 00                    ret
      :                          @4446
 58129: 95 82 ff                 t0 = a1 + 0xffffffffffffffff
 58132: ae 72 7a                 jump @4454 if t0 >=u a0
      :                          @4447
 58135: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 58138: 7b 15 08                 u64 [sp + 0x8] = s0
 58141: c9 87 09                 a2 = a0 - a1
 58144: e6 98 04                 t2 = minu(a1, a2)
 58147: 33 09 01                 a2 = 0x1
 58150: c8 97 03                 t1 = a0 + a2
 58153: 33 0a 01                 a3 = 0x1
 58156: 51 04 27                 jump @4450 if t2 == 0
      :                          @4448
 58159: 33 0a 01                 a3 = 0x1
 58162: 33 0b 01                 a4 = 0x1
 58165: 01                       fallthrough
      :                          @4449
 58166: d8 4b 08                 a1 = a4 <u t2
 58169: 85 8c 01                 a5 = a1 ^ 0x1
 58172: c9 b3 05                 s0 = t1 - a4
 58175: c8 b8 08                 a1 = a1 + a4
 58178: ca a5 0a                 a3 = s0 * a3
 58181: d8 84 05                 s0 = t2 <u a1
 58184: d4 5c 0c                 a5 = a5 | s0
 58187: cb ba 0a                 a3 = a3 /u a4
 58190: 64 8b                    a4 = a1
 58192: 51 0c e6                 jump @4449 if a5 == 0
      :                          @4450
 58195: c9 27 08                 a1 = a0 - t0
 58198: e6 82 02                 t0 = minu(t0, a1)
 58201: 51 02 27                 jump @4453 if t0 == 0
      :                          @4451
 58204: 33 09 01                 a2 = 0x1
 58207: 33 0c 01                 a5 = 0x1
 58210: 01                       fallthrough
      :                          @4452
 58211: d8 2c 08                 a1 = a5 <u t0
 58214: 85 85 01                 s0 = a1 ^ 0x1
 58217: c9 c3 0b                 a4 = t1 - a5
 58220: c8 c8 08                 a1 = a1 + a5
 58223: ca 9b 09                 a2 = a4 * a2
 58226: d8 82 0b                 a4 = t0 <u a1
 58229: d4 5b 0b                 a4 = a4 | s0
 58232: cb c9 09                 a2 = a2 /u a5
 58235: 64 8c                    a5 = a1
 58237: 51 0b e6                 jump @4452 if a4 == 0
      :                          @4453
 58240: ca a9 08                 a1 = a2 * a3
 58243: cb 78 07                 a0 = a1 /u a0
 58246: 82 15 08                 s0 = u64 [sp + 0x8]
 58249: 95 11 10                 sp = sp + 0x10
 58252: 32 00                    ret
      :                          @4454
 58254: 33 07                    a0 = 0
 58256: 28 ae b2 00              jump @8124
      :                          @4455
 58260: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 58263: 7b 10 20                 u64 [sp + 0x20] = ra
 58266: 7b 15 18                 u64 [sp + 0x18] = s0
 58269: 7b 16 10                 u64 [sp + 0x10] = s1
 58272: 64 74                    t2 = a0
 58274: 33 08 02                 a1 = 0x2
 58277: 33 07 01                 a0 = 0x1
 58280: ac 84 f5 00              jump @4473 if t2 <u a1
      :                          @4456
 58284: 95 49 01                 a2 = t2 + 0x1
 58287: 7b 19                    u64 [sp] = a2
 58289: 97 99 03                 a2 = a2 << 0x3
 58292: 33 07 c0 22 03           a0 = 0x322c0
 58297: 33 03 c0 22 03           t1 = 0x322c0
 58302: 33 02 00 00 01           t0 = 0x10000
 58307: c8 23 06                 s1 = t1 + t0
 58310: 01                       fallthrough
      :                          @4457
 58311: 82 6a                    a3 = u64 [s1]
 58313: c8 9a 0b                 a4 = a3 + a2
 58316: ac ab e3 00              jump @4478 if a4 <u a3
      :                          @4458
 58320: 95 bc 08                 a5 = a4 + 0x8
 58323: d8 bc 05                 s0 = a5 <u a4
 58326: d8 c2 0c                 a5 = t0 <u a5
 58329: d4 5c 0c                 a5 = a5 | s0
 58332: 52 0c d3 00              jump @4478 if a5 != 0
      :                          @4459
 58336: c9 b3 05                 s0 = t1 - a4
 58339: c8 25 05                 s0 = s0 + t0
 58342: 84 5c 07                 a5 = s0 & 0x7
 58345: c8 cb 0b                 a4 = a4 + a5
 58348: 01                       fallthrough
      :                          @4460
 58349: 82 68                    a1 = u64 [s1]
 58351: ab a8 d8                 jump @4457 if a1 != a3
      :                          @4461
 58354: 7b 6b                    u64 [s1] = a4
 58356: c9 c5 06                 s1 = s0 - a5
 58359: 64 67                    a0 = s1
 58361: 33 08                    a1 = 0
 58363: 7b 19 08                 u64 [sp + 0x8] = a2
 58366: 64 45                    s0 = t2
 58368: 50 20 20 03 59 27 02     ra = 800, jump @13675
      :                          @4462 [@dyn 400]
 58375: 64 63                    t1 = s1
 58377: 64 5b                    a4 = s0
 58379: 49 06 01                 u64 [s1 + 0] = 0x1
 58382: 49 16 08 01              u64 [s1 + 8] = 0x1
 58386: 33 07 02                 a0 = 0x2
 58389: 01                       fallthrough
      :                          @4463
 58390: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 58393: ac 8b 92 00              jump @4474 if a4 <u a1
      :                          @4464
 58397: 95 79 fe                 a2 = a0 + 0xfffffffffffffffe
 58400: ac 9b 8c 00              jump @4475 if a4 <u a2
      :                          @4465
 58404: 95 7a 02                 a3 = a0 + 0x2
 58407: 51 0a 86 00              jump @4476 if a3 == 0
      :                          @4466
 58411: ac 7b 83 00              jump @4477 if a4 <u a0
      :                          @4467
 58415: d8 b7 02                 t0 = a0 <u a4
 58418: 97 7c 01                 a5 = a0 << 0x1
 58421: c8 7c 05                 s0 = a5 + a0
 58424: 97 76 03                 s1 = a0 << 0x3
 58427: c8 27 07                 a0 = a0 + t0
 58430: 97 88 03                 a1 = a1 << 0x3
 58433: c8 38 08                 a1 = a1 + t1
 58436: 82 88                    a1 = u64 [a1]
 58438: 97 99 03                 a2 = a2 << 0x3
 58441: c8 39 09                 a2 = a2 + t1
 58444: 82 99                    a2 = u64 [a2]
 58446: 95 55 fd                 s0 = s0 + 0xfffffffffffffffd
 58449: 95 cc 01                 a5 = a5 + 0x1
 58452: ca c8 08                 a1 = a1 * a5
 58455: ca 59 09                 a2 = a2 * s0
 58458: c8 98 08                 a1 = a1 + a2
 58461: c8 36 06                 s1 = s1 + t1
 58464: cb a8 08                 a1 = a1 /u a3
 58467: d8 7b 09                 a2 = a4 <u a0
 58470: 85 99 01                 a2 = a2 ^ 0x1
 58473: d2 92 09                 a2 = t0 & a2
 58476: 7b 68                    u64 [s1] = a1
 58478: 52 09 a8                 jump @4463 if a2 != 0
      :                          @4468
 58481: 97 b6 03                 s1 = a4 << 0x3
 58484: c8 36 06                 s1 = s1 + t1
 58487: 82 67                    a0 = u64 [s1]
 58489: 33 08 c0 22 03           a1 = 0x322c0
 58494: 95 88 00 00 01           a1 = a1 + 0x10000
 58499: 82 16 08                 s1 = u64 [sp + 0x8]
 58502: 01                       fallthrough
      :                          @4469
 58503: 82 89                    a2 = u64 [a1]
 58505: c9 98 0a                 a3 = a1 - a2
 58508: ab 3a 11                 jump @4473 if a3 != t1
      :                          @4470
 58511: c9 69 0a                 a3 = a2 - s1
 58514: 01                       fallthrough
      :                          @4471
 58515: 82 8b                    a4 = u64 [a1]
 58517: ab 9b f2                 jump @4469 if a4 != a2
      :                          @4472
 58520: 7b 8a                    u64 [a1] = a3
 58522: 33 0c                    a5 = 0
 58524: 01                       fallthrough
      :                          @4473
 58525: 82 10 20                 ra = u64 [sp + 0x20]
 58528: 82 15 18                 s0 = u64 [sp + 0x18]
 58531: 82 16 10                 s1 = u64 [sp + 0x10]
 58534: 95 11 28                 sp = sp + 0x28
 58537: 32 00                    ret
      :                          @4474
 58539: 00                       trap
      :                          @4475
 58540: 00                       trap
      :                          @4476
 58541: 00                       trap
      :                          @4477
 58542: 00                       trap
      :                          @4478
 58543: 00                       trap
      :                          @4479
 58544: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 58548: 7b 10 88 00              u64 [sp + 0x88] = ra
 58552: 7b 15 80 00              u64 [sp + 0x80] = s0
 58556: 7b 16 78                 u64 [sp + 0x78] = s1
 58559: 82 8a 10                 a3 = u64 [a1 + 0x10]
 58562: 64 76                    s1 = a0
 58564: 51 0a 4a 01              jump @4500 if a3 == 0
      :                          @4480
 58568: 98 a7 3c                 a0 = a3 >> 0x3c
 58571: 52 07 75 01              jump @4507 if a0 != 0
      :                          @4481
 58575: 7b 19 30                 u64 [sp + 0x30] = a2
 58578: 7b 18 38                 u64 [sp + 0x38] = a1
 58581: 88 72 01                 t0 = a0 <u 0x1
 58584: 7b 1a 40                 u64 [sp + 0x40] = a3
 58587: 97 a9 03                 a2 = a3 << 0x3
 58590: 97 22 03                 t0 = t0 << 0x3
 58593: 33 04 c0 22 03           t2 = 0x322c0
 58598: 33 03 00 00 01           t1 = 0x10000
 58603: c8 34 00                 ra = t2 + t1
 58606: 01                       fallthrough
      :                          @4482
 58607: 82 05                    s0 = u64 [ra]
 58609: c8 95 0c                 a5 = s0 + a2
 58612: ac 5c 4b 01              jump @4506 if a5 <u s0
      :                          @4483
 58616: c8 2c 07                 a0 = a5 + t0
 58619: d8 c7 0a                 a3 = a0 <u a5
 58622: d8 73 07                 a0 = t1 <u a0
 58625: d4 a7 07                 a0 = a0 | a3
 58628: 52 07 3b 01              jump @4506 if a0 != 0
      :                          @4484
 58632: c9 c4 07                 a0 = t2 - a5
 58635: c8 37 07                 a0 = a0 + t1
 58638: 84 7a 07                 a3 = a0 & 0x7
 58641: c8 ac 0c                 a5 = a5 + a3
 58644: 01                       fallthrough
      :                          @4485
 58645: 82 08                    a1 = u64 [ra]
 58647: ab 58 d8                 jump @4482 if a1 != s0
      :                          @4486
 58650: 7b 0c                    u64 [ra] = a5
 58652: 33 0b                    a4 = 0
 58654: c9 a7 05                 s0 = a0 - a3
 58657: 64 57                    a0 = s0
 58659: 33 08                    a1 = 0
 58661: 50 20 22 03 34 26 02     ra = 802, jump @13675
      :                          @4487 [@dyn 401]
 58668: 82 19 40                 a2 = u64 [sp + 0x40]
 58671: 7b 19 60                 u64 [sp + 0x60] = a2
 58674: 7b 15 68                 u64 [sp + 0x68] = s0
 58677: 7b 19 70                 u64 [sp + 0x70] = a2
 58680: 95 17 48                 a0 = sp + 0x48
 58683: 95 18 60                 a1 = sp + 0x60
 58686: 50 20 24 03 d6 78 ff     ra = 804, jump @1783
      :                          @4488 [@dyn 402]
 58693: 82 17 58                 a0 = u64 [sp + 0x58]
 58696: 82 1a 50                 a3 = u64 [sp + 0x50]
 58699: 82 1c 30                 a5 = u64 [sp + 0x30]
 58702: 82 c8 08                 a1 = u64 [a5 + 0x8]
 58705: 82 19 38                 a2 = u64 [sp + 0x38]
 58708: 82 9b 08                 a4 = u64 [a2 + 0x8]
 58711: 82 c9 10                 a2 = u64 [a5 + 0x10]
 58714: 7b 19 38                 u64 [sp + 0x38] = a2
 58717: 33 09                    a2 = 0
 58719: 95 88 10                 a1 = a1 + 0x10
 58722: 7b 18 28                 u64 [sp + 0x28] = a1
 58725: 7b 16 18                 u64 [sp + 0x18] = s1
 58728: 7b 17 10                 u64 [sp + 0x10] = a0
 58731: 7b 1a 08                 u64 [sp + 0x8] = a3
 58734: 7b 1b                    u64 [sp] = a4
 58736: 01                       fallthrough
      :                          @4489
 58737: aa 79 cd 00              jump @4505 if a2 == a0
      :                          @4490
 58741: 33 0c                    a5 = 0
 58743: 95 97 01                 a0 = a2 + 0x1
 58746: 7b 17 20                 u64 [sp + 0x20] = a0
 58749: 96 97 18                 a0 = a2 * 0x18
 58752: c8 7a 02                 t0 = a3 + a0
 58755: 95 23 10                 t1 = t0 + 0x10
 58758: 95 22 08                 t0 = t0 + 0x8
 58761: c8 7b 04                 t2 = a4 + a0
 58764: 95 46 10                 s1 = t2 + 0x10
 58767: 95 44 08                 t2 = t2 + 0x8
 58770: 33 08 01                 a1 = 0x1
 58773: 01                       fallthrough
      :                          @4491
 58774: 33 00                    ra = 0
 58776: 33 0a                    a3 = 0
 58778: 64 c7                    a0 = a5
 58780: 7b 18 30                 u64 [sp + 0x30] = a1
 58783: 82 1c 28                 a5 = u64 [sp + 0x28]
 58786: 01                       fallthrough
      :                          @4492
 58787: 82 38                    a1 = u64 [t1]
 58789: ae 87 96 00              jump @4502 if a0 >=u a1
      :                          @4493
 58793: 82 68                    a1 = u64 [s1]
 58795: ae 8a 91 00              jump @4503 if a3 >=u a1
      :                          @4494
 58799: 82 18 38                 a1 = u64 [sp + 0x38]
 58802: aa a8 8b 00              jump @4504 if a1 == a3
      :                          @4495
 58806: 82 c8                    a1 = u64 [a5]
 58808: ae 87 83 00              jump @4502 if a0 >=u a1
      :                          @4496
 58812: 82 28                    a1 = u64 [t0]
 58814: 82 45                    s0 = u64 [t2]
 58816: 97 79 03                 a2 = a0 << 0x3
 58819: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
 58822: c8 98 08                 a1 = a1 + a2
 58825: c8 05 05                 s0 = s0 + ra
 58828: 82 55                    s0 = u64 [s0]
 58830: c8 b9 09                 a2 = a2 + a4
 58833: 82 99                    a2 = u64 [a2]
 58835: 82 8b                    a4 = u64 [a1]
 58837: 95 aa 01                 a3 = a3 + 0x1
 58840: ca 59 09                 a2 = a2 * s0
 58843: 82 15 40                 s0 = u64 [sp + 0x40]
 58846: c8 b9 09                 a2 = a2 + a4
 58849: 7b 89                    u64 [a1] = a2
 58851: 95 cc 18                 a5 = a5 + 0x18
 58854: 95 00 08                 ra = ra + 0x8
 58857: ab a5 ba                 jump @4492 if s0 != a3
      :                          @4497
 58860: 82 1c 30                 a5 = u64 [sp + 0x30]
 58863: d8 5c 08                 a1 = a5 <u s0
 58866: c8 c8 08                 a1 = a1 + a5
 58869: ac 5c a1                 jump @4491 if a5 <u s0
      :                          @4498
 58872: 82 1c 20                 a5 = u64 [sp + 0x20]
 58875: 64 c9                    a2 = a5
 58877: 82 16 18                 s1 = u64 [sp + 0x18]
 58880: 82 17 10                 a0 = u64 [sp + 0x10]
 58883: 82 1a 08                 a3 = u64 [sp + 0x8]
 58886: 82 1b                    a4 = u64 [sp]
 58888: ab 5c 69 ff              jump @4489 if a5 != s0
      :                          @4499
 58892: 28 0d                    jump @4501
      :                          @4500
 58894: 49 11 48                 u64 [sp + 72] = 0
 58897: 49 11 50 08              u64 [sp + 80] = 0x8
 58901: 49 11 58                 u64 [sp + 88] = 0
 58904: 01                       fallthrough
      :                          @4501
 58905: 82 17 58                 a0 = u64 [sp + 0x58]
 58908: 82 18 50                 a1 = u64 [sp + 0x50]
 58911: 82 19 48                 a2 = u64 [sp + 0x48]
 58914: 7b 67 10                 u64 [s1 + 0x10] = a0
 58917: 7b 68 08                 u64 [s1 + 0x8] = a1
 58920: 7b 69                    u64 [s1] = a2
 58922: 82 10 88 00              ra = u64 [sp + 0x88]
 58926: 82 15 80 00              s0 = u64 [sp + 0x80]
 58930: 82 16 78                 s1 = u64 [sp + 0x78]
 58933: 95 11 90 00              sp = sp + 0x90
 58937: 32 00                    ret
      :                          @4502
 58939: 00                       trap
      :                          @4503
 58940: 00                       trap
      :                          @4504
 58941: 00                       trap
      :                          @4505
 58942: 00                       trap
      :                          @4506
 58943: 00                       trap
      :                          @4507
 58944: 00                       trap
      :                          @4508
 58945: 95 11 48 ff              sp = sp + 0xffffffffffffff48
 58949: 7b 10 b0 00              u64 [sp + 0xb0] = ra
 58953: 7b 15 a8 00              u64 [sp + 0xa8] = s0
 58957: 7b 16 a0 00              u64 [sp + 0xa0] = s1
 58961: 82 8b 10                 a4 = u64 [a1 + 0x10]
 58964: 7b 17                    u64 [sp] = a0
 58966: 51 0b ea 01              jump @4541 if a4 == 0
      :                          @4509
 58970: 7b 19 40                 u64 [sp + 0x40] = a2
 58973: 98 b7 3c                 a0 = a4 >> 0x3c
 58976: 52 07 0e 04              jump @4611 if a0 != 0
      :                          @4510
 58980: 64 8a                    a3 = a1
 58982: 64 b8                    a1 = a4
 58984: 7b 1a 50                 u64 [sp + 0x50] = a3
 58987: 88 72 01                 t0 = a0 <u 0x1
 58990: 7b 1b 08                 u64 [sp + 0x8] = a4
 58993: 97 b9 03                 a2 = a4 << 0x3
 58996: 97 22 03                 t0 = t0 << 0x3
 58999: 33 04 c0 22 03           t2 = 0x322c0
 59004: 33 03 00 00 01           t1 = 0x10000
 59009: c8 34 0b                 a4 = t2 + t1
 59012: 01                       fallthrough
      :                          @4511
 59013: 82 b6                    s1 = u64 [a4]
 59015: c8 96 0c                 a5 = s1 + a2
 59018: ac 6c 4b 31 02           jump @13923 if a5 <u s1
      :                          @4512
 59023: c8 2c 0a                 a3 = a5 + t0
 59026: d8 ca 05                 s0 = a3 <u a5
 59029: d8 a3 0a                 a3 = t1 <u a3
 59032: d4 5a 0a                 a3 = a3 | s0
 59035: 52 0a 3a 31 02           jump @13923 if a3 != 0
      :                          @4513
 59040: c9 c4 05                 s0 = t2 - a5
 59043: c8 35 05                 s0 = s0 + t1
 59046: 84 5a 07                 a3 = s0 & 0x7
 59049: c8 ac 0c                 a5 = a5 + a3
 59052: 01                       fallthrough
      :                          @4514
 59053: 82 b7                    a0 = u64 [a4]
 59055: ab 67 d6                 jump @4511 if a0 != s1
      :                          @4515
 59058: 7b bc                    u64 [a4] = a5
 59060: c9 a5 05                 s0 = s0 - a3
 59063: 64 57                    a0 = s0
 59065: 33 08                    a1 = 0
 59067: 50 20 26 03 9e 24 02     ra = 806, jump @13675
      :                          @4516 [@dyn 403]
 59074: 82 16 08                 s1 = u64 [sp + 0x8]
 59077: 7b 16 88 00              u64 [sp + 0x88] = s1
 59081: 7b 15 90 00              u64 [sp + 0x90] = s0
 59085: 7b 16 98 00              u64 [sp + 0x98] = s1
 59089: 95 17 58                 a0 = sp + 0x58
 59092: 95 18 88 00              a1 = sp + 0x88
 59096: 64 69                    a2 = s1
 59098: 50 20 28 03 3a 77 ff     ra = 808, jump @1783
      :                          @4517 [@dyn 404]
 59105: 82 1b 60                 a4 = u64 [sp + 0x60]
 59108: 82 17 68                 a0 = u64 [sp + 0x68]
 59111: 33 0a                    a3 = 0
 59113: 33 09                    a2 = 0
 59115: 95 bb 10                 a4 = a4 + 0x10
 59118: 33 0c 01                 a5 = 0x1
 59121: 01                       fallthrough
      :                          @4518
 59122: aa 97 79 03              jump @4608 if a0 == a2
      :                          @4519
 59126: 82 b8                    a1 = u64 [a4]
 59128: ae 89 74 03              jump @4609 if a2 >=u a1
      :                          @4520
 59132: 82 b8 f8                 a1 = u64 [a4 + 0xfffffffffffffff8]
 59135: 95 99 01                 a2 = a2 + 0x1
 59138: c8 a8 08                 a1 = a1 + a3
 59141: 7b 8c                    u64 [a1] = a5
 59143: 95 bb 18                 a4 = a4 + 0x18
 59146: 95 aa 08                 a3 = a3 + 0x8
 59149: ab 96 e5                 jump @4518 if s1 != a2
      :                          @4521
 59152: 3a 07 c0 10 03           a0 = u64 [0x310c0]
 59157: ae 76 59 03              jump @4611 if s1 >=u a0
      :                          @4522
 59161: 82 18 50                 a1 = u64 [sp + 0x50]
 59164: 82 80 08                 ra = u64 [a1 + 0x8]
 59167: d8 76 02                 t0 = s1 <u a0
 59170: 96 67 18                 a0 = s1 * 0x18
 59173: 97 22 03                 t0 = t0 << 0x3
 59176: 33 04 c0 22 03           t2 = 0x322c0
 59181: 33 03 00 00 01           t1 = 0x10000
 59186: c8 34 0b                 a4 = t2 + t1
 59189: 01                       fallthrough
      :                          @4523
 59190: 82 b8                    a1 = u64 [a4]
 59192: c8 78 05                 s0 = a1 + a0
 59195: ac 85 32 03              jump @4610 if s0 <u a1
      :                          @4524
 59199: c8 25 0a                 a3 = s0 + t0
 59202: d8 5a 0c                 a5 = a3 <u s0
 59205: d8 a3 0a                 a3 = t1 <u a3
 59208: d4 ca 0a                 a3 = a3 | a5
 59211: 52 0a 22 03              jump @4610 if a3 != 0
      :                          @4525
 59215: c9 54 0a                 a3 = t2 - s0
 59218: c8 3a 0a                 a3 = a3 + t1
 59221: 84 ac 07                 a5 = a3 & 0x7
 59224: c8 c5 05                 s0 = s0 + a5
 59227: 01                       fallthrough
      :                          @4526
 59228: 82 b6                    s1 = u64 [a4]
 59230: ab 86 d8                 jump @4523 if s1 != a1
      :                          @4527
 59233: 7b b5                    u64 [a4] = s0
 59235: 33 02                    t0 = 0
 59237: c9 ca 0a                 a3 = a3 - a5
 59240: 7b 1a 18                 u64 [sp + 0x18] = a3
 59243: 82 1a 08                 a3 = u64 [sp + 0x8]
 59246: 96 a7 18                 a0 = a3 * 0x18
 59249: c8 07 07                 a0 = a0 + ra
 59252: 7b 17 10                 u64 [sp + 0x10] = a0
 59255: 33 07 c0 22 03           a0 = 0x322c0
 59260: 7b 17 48                 u64 [sp + 0x48] = a0
 59263: 95 74 00 00 01           t2 = a0 + 0x10000
 59268: 7b 1a 38                 u64 [sp + 0x38] = a3
 59271: 7b 14 50                 u64 [sp + 0x50] = t2
 59274: 28 4c                    jump @4531
      :                          @4528
 59276: 33 09                    a2 = 0
 59278: 33 0a 08                 a3 = 0x8
 59281: 01                       fallthrough
      :                          @4529
 59282: 7b 1a 20                 u64 [sp + 0x20] = a3
 59285: 82 15 38                 s0 = u64 [sp + 0x38]
 59288: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 59291: 95 00 18                 ra = ra + 0x18
 59294: 7b 10 28                 u64 [sp + 0x28] = ra
 59297: 95 27 01                 a0 = t0 + 0x1
 59300: 7b 17 38                 u64 [sp + 0x38] = a0
 59303: 96 27 18                 a0 = t0 * 0x18
 59306: 82 16 18                 s1 = u64 [sp + 0x18]
 59309: c8 76 06                 s1 = s1 + a0
 59312: 64 a7                    a0 = a3
 59314: 50 20 2a 03 7a 21 02     ra = 810, jump @13621
      :                          @4530 [@dyn 405]
 59321: 82 10 28                 ra = u64 [sp + 0x28]
 59324: 82 17 30                 a0 = u64 [sp + 0x30]
 59327: 7b 67                    u64 [s1] = a0
 59329: 82 18 20                 a1 = u64 [sp + 0x20]
 59332: 7b 68 08                 u64 [s1 + 0x8] = a1
 59335: 7b 67 10                 u64 [s1 + 0x10] = a0
 59338: 82 12 38                 t0 = u64 [sp + 0x38]
 59341: 82 14 50                 t2 = u64 [sp + 0x50]
 59344: 7b 15 38                 u64 [sp + 0x38] = s0
 59347: 51 05 65                 jump @4540 if s0 == 0
      :                          @4531
 59350: 82 17 10                 a0 = u64 [sp + 0x10]
 59353: aa 70 5f                 jump @4540 if ra == a0
      :                          @4532
 59356: 82 0b 10                 a4 = u64 [ra + 0x10]
 59359: 82 08 08                 a1 = u64 [ra + 0x8]
 59362: 7b 1b 30                 u64 [sp + 0x30] = a4
 59365: 51 0b a7                 jump @4528 if a4 == 0
      :                          @4533
 59368: 98 b9 3c                 a2 = a4 >> 0x3c
 59371: 52 09 83 02              jump @4611 if a2 != 0
      :                          @4534
 59375: 88 9a 01                 a3 = a2 <u 0x1
 59378: 97 b9 03                 a2 = a4 << 0x3
 59381: 97 a3 03                 t1 = a3 << 0x3
 59384: 01                       fallthrough
      :                          @4535
 59385: 82 4b                    a4 = u64 [t2]
 59387: c8 9b 0c                 a5 = a4 + a2
 59390: ac bc d7 2f 02           jump @13923 if a5 <u a4
      :                          @4536
 59395: c8 3c 07                 a0 = a5 + t1
 59398: d8 c7 06                 s1 = a0 <u a5
 59401: 8e 77 00 00 01           a0 = a0 >u 0x10000
 59406: d4 67 07                 a0 = a0 | s1
 59409: 52 07 c4 2f 02           jump @13923 if a0 != 0
      :                          @4537
 59414: 82 17 48                 a0 = u64 [sp + 0x48]
 59417: c9 c7 07                 a0 = a0 - a5
 59420: 95 77 00 00 01           a0 = a0 + 0x10000
 59425: 84 76 07                 s1 = a0 & 0x7
 59428: c8 6c 0c                 a5 = a5 + s1
 59431: 82 14 50                 t2 = u64 [sp + 0x50]
 59434: 01                       fallthrough
      :                          @4538
 59435: 82 45                    s0 = u64 [t2]
 59437: ab b5 cc                 jump @4535 if s0 != a4
      :                          @4539
 59440: 7b 4c                    u64 [t2] = a5
 59442: c9 67 0a                 a3 = a0 - s1
 59445: 28 5d ff                 jump @4529
      :                          @4540
 59448: 82 19 40                 a2 = u64 [sp + 0x40]
 59451: 82 1b 08                 a4 = u64 [sp + 0x8]
 59454: 28 11                    jump @4542
      :                          @4541
 59456: 49 11 58                 u64 [sp + 88] = 0
 59459: 49 11 18 08              u64 [sp + 24] = 0x8
 59463: 49 11 60 08              u64 [sp + 96] = 0x8
 59467: 49 11 68                 u64 [sp + 104] = 0
 59470: 01                       fallthrough
      :                          @4542
 59471: 7b 1b 70                 u64 [sp + 0x70] = a4
 59474: 82 17 18                 a0 = u64 [sp + 0x18]
 59477: 7b 17 78                 u64 [sp + 0x78] = a0
 59480: 7b 1b 80 00              u64 [sp + 0x80] = a4
 59484: 49 11 48 aa 0a           u64 [sp + 72] = 0xaaa
 59489: 33 05 c0 22 03           s0 = 0x322c0
 59494: 95 58 00 00 01           a1 = s0 + 0x10000
 59499: 7b 18 50                 u64 [sp + 0x50] = a1
 59502: 28 22                    jump @4544
      :                          @4543
 59504: 82 17 98 00              a0 = u64 [sp + 0x98]
 59508: 82 19 90 00              a2 = u64 [sp + 0x90]
 59512: 82 1a 88 00              a3 = u64 [sp + 0x88]
 59516: 7b 17 80 00              u64 [sp + 0x80] = a0
 59520: 7b 19 78                 u64 [sp + 0x78] = a2
 59523: 82 19 40                 a2 = u64 [sp + 0x40]
 59526: 8b 99 01                 i32 a2 = a2 >> 0x1
 59529: 7b 1a 70                 u64 [sp + 0x70] = a3
 59532: 51 09 34 01              jump @4588 if a2 == 0
      :                          @4544
 59536: 7b 19 40                 u64 [sp + 0x40] = a2
 59539: 84 97 01                 a0 = a2 & 0x1
 59542: 51 07 9d 00              jump @4566 if a0 == 0
      :                          @4545
 59546: 95 17 88 00              a0 = sp + 0x88
 59550: 95 18 58                 a1 = sp + 0x58
 59553: 95 19 70                 a2 = sp + 0x70
 59556: 50 20 2c 03 0c fc        ra = 812, jump @4479
      :                          @4546 [@dyn 406]
 59562: 82 13 68                 t1 = u64 [sp + 0x68]
 59565: 82 12 60                 t0 = u64 [sp + 0x60]
 59568: 82 16 50                 s1 = u64 [sp + 0x50]
 59571: 33 04 18                 t2 = 0x18
 59574: 33 00 00 20              ra = 0x2000
 59578: 51 03 3d                 jump @4558 if t1 == 0
      :                          @4547
 59581: 33 09                    a2 = 0
 59583: 28 08                    jump @4549
      :                          @4548
 59585: 95 99 01                 a2 = a2 + 0x1
 59588: aa 39 33                 jump @4558 if a2 == t1
      :                          @4549
 59591: ca 49 0a                 a3 = a2 * t2
 59594: c8 2a 0a                 a3 = a3 + t0
 59597: 82 ab                    a4 = u64 [a3]
 59599: 51 0b f2                 jump @4548 if a4 == 0
      :                          @4550
 59602: ac b0 ef                 jump @4548 if ra <u a4
      :                          @4551
 59605: 82 aa 08                 a3 = u64 [a3 + 0x8]
 59608: 97 bb 03                 a4 = a4 << 0x3
 59611: 01                       fallthrough
      :                          @4552
 59612: 82 67                    a0 = u64 [s1]
 59614: c9 76 05                 s0 = s1 - a0
 59617: ab a5 e0                 jump @4548 if s0 != a3
      :                          @4553
 59620: c9 b7 0c                 a5 = a0 - a4
 59623: 01                       fallthrough
      :                          @4554
 59624: 82 65                    s0 = u64 [s1]
 59626: ab 75 f2                 jump @4552 if s0 != a0
      :                          @4555
 59629: 7b 6c                    u64 [s1] = a5
 59631: 33 08                    a1 = 0
 59633: 01                       fallthrough
      :                          @4556
 59634: ab 75 ea                 jump @4552 if s0 != a0
      :                          @4557
 59637: 28 cc                    jump @4548
      :                          @4558
 59639: 82 18 58                 a1 = u64 [sp + 0x58]
 59642: 51 08 23                 jump @4565 if a1 == 0
      :                          @4559
 59645: 82 17 48                 a0 = u64 [sp + 0x48]
 59648: ac 87 1d                 jump @4565 if a0 <u a1
      :                          @4560
 59651: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 59654: 01                       fallthrough
      :                          @4561
 59655: 82 69                    a2 = u64 [s1]
 59657: c9 96 07                 a0 = s1 - a2
 59660: ab 27 11                 jump @4565 if a0 != t0
      :                          @4562
 59663: c8 89 07                 a0 = a2 + a1
 59666: 01                       fallthrough
      :                          @4563
 59667: 82 6a                    a3 = u64 [s1]
 59669: ab 9a f2                 jump @4561 if a3 != a2
      :                          @4564
 59672: 7b 67                    u64 [s1] = a0
 59674: 33 0b                    a4 = 0
 59676: 01                       fallthrough
      :                          @4565
 59677: 82 17 98 00              a0 = u64 [sp + 0x98]
 59681: 82 18 90 00              a1 = u64 [sp + 0x90]
 59685: 82 19 88 00              a2 = u64 [sp + 0x88]
 59689: 7b 17 68                 u64 [sp + 0x68] = a0
 59692: 7b 18 60                 u64 [sp + 0x60] = a1
 59695: 7b 19 58                 u64 [sp + 0x58] = a2
 59698: 01                       fallthrough
      :                          @4566
 59699: 95 17 88 00              a0 = sp + 0x88
 59703: 95 18 70                 a1 = sp + 0x70
 59706: 95 19 70                 a2 = sp + 0x70
 59709: 50 20 2e 03 73 fb        ra = 814, jump @4479
      :                          @4567 [@dyn 407]
 59715: 82 13 80 00              t1 = u64 [sp + 0x80]
 59719: 82 12 78                 t0 = u64 [sp + 0x78]
 59722: 82 18 50                 a1 = u64 [sp + 0x50]
 59725: 33 04 18                 t2 = 0x18
 59728: 33 00 00 20              ra = 0x2000
 59732: 51 03 3d                 jump @4579 if t1 == 0
      :                          @4568
 59735: 33 09                    a2 = 0
 59737: 28 08                    jump @4570
      :                          @4569
 59739: 95 99 01                 a2 = a2 + 0x1
 59742: aa 39 33                 jump @4579 if a2 == t1
      :                          @4570
 59745: ca 49 0a                 a3 = a2 * t2
 59748: c8 2a 0a                 a3 = a3 + t0
 59751: 82 ab                    a4 = u64 [a3]
 59753: 51 0b f2                 jump @4569 if a4 == 0
      :                          @4571
 59756: ac b0 ef                 jump @4569 if ra <u a4
      :                          @4572
 59759: 82 aa 08                 a3 = u64 [a3 + 0x8]
 59762: 97 bb 03                 a4 = a4 << 0x3
 59765: 01                       fallthrough
      :                          @4573
 59766: 82 85                    s0 = u64 [a1]
 59768: c9 58 06                 s1 = a1 - s0
 59771: ab a6 e0                 jump @4569 if s1 != a3
      :                          @4574
 59774: c9 b5 0c                 a5 = s0 - a4
 59777: 01                       fallthrough
      :                          @4575
 59778: 82 86                    s1 = u64 [a1]
 59780: ab 56 f2                 jump @4573 if s1 != s0
      :                          @4576
 59783: 7b 8c                    u64 [a1] = a5
 59785: 33 07                    a0 = 0
 59787: 01                       fallthrough
      :                          @4577
 59788: ab 56 ea                 jump @4573 if s1 != s0
      :                          @4578
 59791: 28 cc                    jump @4569
      :                          @4579
 59793: 82 19 70                 a2 = u64 [sp + 0x70]
 59796: 51 09 dc fe              jump @4543 if a2 == 0
      :                          @4580
 59800: 82 17 48                 a0 = u64 [sp + 0x48]
 59803: ac 97 d5 fe              jump @4543 if a0 <u a2
      :                          @4581
 59807: 96 9c e8                 a5 = a2 * 0xffffffffffffffe8
 59810: 01                       fallthrough
      :                          @4582
 59811: 82 89                    a2 = u64 [a1]
 59813: c9 98 07                 a0 = a1 - a2
 59816: ab 27 c8 fe              jump @4543 if a0 != t0
      :                          @4583
 59820: c8 c9 07                 a0 = a2 + a5
 59823: 01                       fallthrough
      :                          @4584
 59824: 82 8a                    a3 = u64 [a1]
 59826: ab 9a f1                 jump @4582 if a3 != a2
      :                          @4585
 59829: 7b 87                    u64 [a1] = a0
 59831: 33 0b                    a4 = 0
 59833: 01                       fallthrough
      :                          @4586
 59834: ab 9a e9                 jump @4582 if a3 != a2
      :                          @4587
 59837: 28 b3 fe                 jump @4543
      :                          @4588
 59840: 82 10 80 00              ra = u64 [sp + 0x80]
 59844: 82 17 68                 a0 = u64 [sp + 0x68]
 59847: 82 19 60                 a2 = u64 [sp + 0x60]
 59850: 82 1a 58                 a3 = u64 [sp + 0x58]
 59853: 82 14 78                 t2 = u64 [sp + 0x78]
 59856: 82 18                    a1 = u64 [sp]
 59858: 7b 87 10                 u64 [a1 + 0x10] = a0
 59861: 7b 89 08                 u64 [a1 + 0x8] = a2
 59864: 7b 8a                    u64 [a1] = a3
 59866: 51 00 4e                 jump @4600 if ra == 0
      :                          @4589
 59869: 33 09                    a2 = 0
 59871: 33 03 18                 t1 = 0x18
 59874: 33 0b c0 22 03           a4 = 0x322c0
 59879: 95 ba 00 00 01           a3 = a4 + 0x10000
 59884: 33 02 00 20              t0 = 0x2000
 59888: 28 08                    jump @4591
      :                          @4590
 59890: 95 99 01                 a2 = a2 + 0x1
 59893: aa 09 33                 jump @4600 if a2 == ra
      :                          @4591
 59896: ca 39 07                 a0 = a2 * t1
 59899: c8 47 07                 a0 = a0 + t2
 59902: 82 75                    s0 = u64 [a0]
 59904: 51 05 f2                 jump @4590 if s0 == 0
      :                          @4592
 59907: ac 52 ef                 jump @4590 if t0 <u s0
      :                          @4593
 59910: 82 76 08                 s1 = u64 [a0 + 0x8]
 59913: 97 55 03                 s0 = s0 << 0x3
 59916: 01                       fallthrough
      :                          @4594
 59917: 82 a7                    a0 = u64 [a3]
 59919: c9 7a 0b                 a4 = a3 - a0
 59922: ab 6b e0                 jump @4590 if a4 != s1
      :                          @4595
 59925: c9 57 0b                 a4 = a0 - s0
 59928: 01                       fallthrough
      :                          @4596
 59929: 82 ac                    a5 = u64 [a3]
 59931: ab 7c f2                 jump @4594 if a5 != a0
      :                          @4597
 59934: 7b ab                    u64 [a3] = a4
 59936: 33 08                    a1 = 0
 59938: 01                       fallthrough
      :                          @4598
 59939: ab 7c ea                 jump @4594 if a5 != a0
      :                          @4599
 59942: 28 cc                    jump @4590
      :                          @4600
 59944: 82 18 70                 a1 = u64 [sp + 0x70]
 59947: 51 08 2e                 jump @4607 if a1 == 0
      :                          @4601
 59950: 33 07 aa 0a              a0 = 0xaaa
 59954: ac 87 27                 jump @4607 if a0 <u a1
      :                          @4602
 59957: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 59960: 33 09 c0 22 03           a2 = 0x322c0
 59965: 95 99 00 00 01           a2 = a2 + 0x10000
 59970: 01                       fallthrough
      :                          @4603
 59971: 82 97                    a0 = u64 [a2]
 59973: c9 79 0a                 a3 = a2 - a0
 59976: ab 4a 11                 jump @4607 if a3 != t2
      :                          @4604
 59979: c8 87 0a                 a3 = a0 + a1
 59982: 01                       fallthrough
      :                          @4605
 59983: 82 9b                    a4 = u64 [a2]
 59985: ab 7b f2                 jump @4603 if a4 != a0
      :                          @4606
 59988: 7b 9a                    u64 [a2] = a3
 59990: 33 0c                    a5 = 0
 59992: 01                       fallthrough
      :                          @4607
 59993: 82 10 b0 00              ra = u64 [sp + 0xb0]
 59997: 82 15 a8 00              s0 = u64 [sp + 0xa8]
 60001: 82 16 a0 00              s1 = u64 [sp + 0xa0]
 60005: 95 11 b8 00              sp = sp + 0xb8
 60009: 32 00                    ret
      :                          @4608
 60011: 00                       trap
      :                          @4609
 60012: 00                       trap
      :                          @4610
 60013: 00                       trap
      :                          @4611
 60014: 00                       trap
      :                          @4612
 60015: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 60018: 7b 10 30                 u64 [sp + 0x30] = ra
 60021: 7b 15 28                 u64 [sp + 0x28] = s0
 60024: 7b 16 20                 u64 [sp + 0x20] = s1
 60027: 82 75 10                 s0 = u64 [a0 + 0x10]
 60030: 84 58 3f                 a1 = s0 & 0x3f
 60033: 56 18 3b 32 01           jump @4640 if a1 >u 59
      :                          @4613
 60038: 7b 17 10                 u64 [sp + 0x10] = a0
 60041: 9b 57 01                 a0 = 0x1 << s0
 60044: 7b 17 18                 u64 [sp + 0x18] = a0
 60047: 7b 18 08                 u64 [sp + 0x8] = a1
 60050: 88 82 3c                 t0 = a1 <u 0x3c
 60053: 9b 59 08                 a2 = 0x8 << s0
 60056: 97 22 03                 t0 = t0 << 0x3
 60059: 33 04 c0 22 03           t2 = 0x322c0
 60064: 33 03 00 00 01           t1 = 0x10000
 60069: c8 34 00                 ra = t2 + t1
 60072: 01                       fallthrough
      :                          @4614
 60073: 82 0b                    a4 = u64 [ra]
 60075: c8 9b 0c                 a5 = a4 + a2
 60078: ac bc 04 01              jump @4639 if a5 <u a4
      :                          @4615
 60082: c8 2c 07                 a0 = a5 + t0
 60085: d8 c7 06                 s1 = a0 <u a5
 60088: d8 73 07                 a0 = t1 <u a0
 60091: d4 67 07                 a0 = a0 | s1
 60094: 52 07 f4 00              jump @4639 if a0 != 0
      :                          @4616
 60098: c9 c4 06                 s1 = t2 - a5
 60101: c8 36 0a                 a3 = s1 + t1
 60104: 84 a6 07                 s1 = a3 & 0x7
 60107: c8 6c 0c                 a5 = a5 + s1
 60110: 01                       fallthrough
      :                          @4617
 60111: 82 07                    a0 = u64 [ra]
 60113: ab b7 d8                 jump @4614 if a0 != a4
      :                          @4618
 60116: 7b 0c                    u64 [ra] = a5
 60118: c9 6a 06                 s1 = a3 - s1
 60121: 64 67                    a0 = s1
 60123: 33 08                    a1 = 0
 60125: 7b 19                    u64 [sp] = a2
 60127: 50 20 30 03 7a 20 02     ra = 816, jump @13675
      :                          @4619 [@dyn 408]
 60134: 33 09                    a2 = 0
 60136: 82 17 10                 a0 = u64 [sp + 0x10]
 60139: 82 73 08                 t1 = u64 [a0 + 0x8]
 60142: 33 04 01                 t2 = 0x1
 60145: 64 62                    t0 = s1
 60147: 7b 64                    u64 [s1] = t2
 60149: 28 0b                    jump @4621
      :                          @4620
 60151: 95 99 01                 a2 = a2 + 0x1
 60154: 82 17 18                 a0 = u64 [sp + 0x18]
 60157: aa 79 6d                 jump @4630 if a2 == a0
      :                          @4621
 60160: 66 97                    a0 = cpop a2
 60162: 84 78 01                 a1 = a0 & 0x1
 60165: 88 88 01                 a1 = a1 <u 0x1
 60168: 8e 77                    a0 = a0 >u 0
 60170: d2 87 07                 a0 = a0 & a1
 60173: 51 07 ea                 jump @4620 if a0 == 0
      :                          @4622
 60176: 6a 98                    a1 = ctz a2
 60178: 95 87 01                 a0 = a1 + 0x1
 60181: ae 57 e2                 jump @4620 if a0 >=u s0
      :                          @4623
 60184: cf 84 0a                 a3 = t2 << a1
 60187: d3 9a 00                 ra = a3 ^ a2
 60190: 96 88 18                 a1 = a1 * 0x18
 60193: c8 38 08                 a1 = a1 + t1
 60196: 95 8a 10                 a3 = a1 + 0x10
 60199: 95 86 08                 s1 = a1 + 0x8
 60202: 97 9b 03                 a4 = a2 << 0x3
 60205: c8 2b 0b                 a4 = a4 + t0
 60208: 28 08                    jump @4625
      :                          @4624
 60210: 95 77 01                 a0 = a0 + 0x1
 60213: aa 75 c2                 jump @4620 if s0 == a0
      :                          @4625
 60216: cf 74 0c                 a5 = t2 << a0
 60219: d2 9c 08                 a1 = a5 & a2
 60222: 51 08 f4                 jump @4624 if a1 == 0
      :                          @4626
 60225: 82 a8                    a1 = u64 [a3]
 60227: ae 87 6d                 jump @4637 if a0 >=u a1
      :                          @4627
 60230: 82 68                    a1 = u64 [s1]
 60232: c8 78 08                 a1 = a1 + a0
 60235: 7c 88                    a1 = u8 [a1]
 60237: 51 08 e5                 jump @4624 if a1 == 0
      :                          @4628
 60240: d3 c0 08                 a1 = ra ^ a5
 60243: 82 1c 18                 a5 = u64 [sp + 0x18]
 60246: ae c8 5b                 jump @4638 if a1 >=u a5
      :                          @4629
 60249: 82 bc                    a5 = u64 [a4]
 60251: 97 88 03                 a1 = a1 << 0x3
 60254: c8 28 08                 a1 = a1 + t0
 60257: 82 88                    a1 = u64 [a1]
 60259: c8 c8 08                 a1 = a1 + a5
 60262: 7b b8                    u64 [a4] = a1
 60264: 28 ca                    jump @4624
      :                          @4630
 60266: 82 17 18                 a0 = u64 [sp + 0x18]
 60269: 97 77 03                 a0 = a0 << 0x3
 60272: c8 27 07                 a0 = a0 + t0
 60275: 82 77 f8                 a0 = u64 [a0 + 0xfffffffffffffff8]
 60278: 33 08 0d                 a1 = 0xd
 60281: 82 16                    s1 = u64 [sp]
 60283: 82 19 08                 a2 = u64 [sp + 0x8]
 60286: ac 98 24                 jump @4636 if a1 <u a2
      :                          @4631
 60289: 33 08 c0 22 03           a1 = 0x322c0
 60294: 95 88 00 00 01           a1 = a1 + 0x10000
 60299: 01                       fallthrough
      :                          @4632
 60300: 82 89                    a2 = u64 [a1]
 60302: c9 98 0a                 a3 = a1 - a2
 60305: ab 2a 11                 jump @4636 if a3 != t0
      :                          @4633
 60308: c9 69 0a                 a3 = a2 - s1
 60311: 01                       fallthrough
      :                          @4634
 60312: 82 8b                    a4 = u64 [a1]
 60314: ab 9b f2                 jump @4632 if a4 != a2
      :                          @4635
 60317: 7b 8a                    u64 [a1] = a3
 60319: 33 0c                    a5 = 0
 60321: 01                       fallthrough
      :                          @4636
 60322: 82 10 30                 ra = u64 [sp + 0x30]
 60325: 82 15 28                 s0 = u64 [sp + 0x28]
 60328: 82 16 20                 s1 = u64 [sp + 0x20]
 60331: 95 11 38                 sp = sp + 0x38
 60334: 32 00                    ret
      :                          @4637
 60336: 00                       trap
      :                          @4638
 60337: 00                       trap
      :                          @4639
 60338: 00                       trap
      :                          @4640
 60339: 00                       trap
      :                          @4641
 60340: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 60343: 7b 10 50                 u64 [sp + 0x50] = ra
 60346: 7b 15 48                 u64 [sp + 0x48] = s0
 60349: 7b 16 40                 u64 [sp + 0x40] = s1
 60352: 82 79 10                 a2 = u64 [a0 + 0x10]
 60355: 49 11 20                 u64 [sp + 32] = 0
 60358: 51 09 bd 00              jump @4658 if a2 == 0
      :                          @4642
 60362: 98 9a 3d                 a3 = a2 >> 0x3d
 60365: 52 0a c9 00              jump @4661 if a3 != 0
      :                          @4643
 60369: 7b 18 08                 u64 [sp + 0x8] = a1
 60372: 7b 17 10                 u64 [sp + 0x10] = a0
 60375: 88 a7 01                 a0 = a3 <u 0x1
 60378: 7b 19 18                 u64 [sp + 0x18] = a2
 60381: 97 99 02                 a2 = a2 << 0x2
 60384: 97 72 02                 t0 = a0 << 0x2
 60387: 33 04 c0 22 03           t2 = 0x322c0
 60392: 33 03 00 00 01           t1 = 0x10000
 60397: c8 34 0a                 a3 = t2 + t1
 60400: 01                       fallthrough
      :                          @4644
 60401: 82 ab                    a4 = u64 [a3]
 60403: c8 9b 0c                 a5 = a4 + a2
 60406: ac bc 9f 00              jump @4660 if a5 <u a4
      :                          @4645
 60410: c8 2c 07                 a0 = a5 + t0
 60413: d8 c7 06                 s1 = a0 <u a5
 60416: d8 73 07                 a0 = t1 <u a0
 60419: d4 67 07                 a0 = a0 | s1
 60422: 52 07 8f 00              jump @4660 if a0 != 0
      :                          @4646
 60426: c9 c4 06                 s1 = t2 - a5
 60429: c8 36 08                 a1 = s1 + t1
 60432: 84 86 03                 s1 = a1 & 0x3
 60435: c8 6c 0c                 a5 = a5 + s1
 60438: 01                       fallthrough
      :                          @4647
 60439: 82 a7                    a0 = u64 [a3]
 60441: ab b7 d8                 jump @4644 if a0 != a4
      :                          @4648
 60444: 7b ac                    u64 [a3] = a5
 60446: 33 05                    s0 = 0
 60448: c9 68 06                 s1 = a1 - s1
 60451: 64 67                    a0 = s1
 60453: 33 08                    a1 = 0
 60455: 7b 19                    u64 [sp] = a2
 60457: 50 20 32 03 30 1f 02     ra = 818, jump @13675
      :                          @4649 [@dyn 409]
 60464: 82 15 18                 s0 = u64 [sp + 0x18]
 60467: 7b 15 28                 u64 [sp + 0x28] = s0
 60470: 7b 16 30                 u64 [sp + 0x30] = s1
 60473: 7b 15 38                 u64 [sp + 0x38] = s0
 60476: 95 1b 28                 a4 = sp + 0x28
 60479: 95 1c 20                 a5 = sp + 0x20
 60482: 33 07                    a0 = 0
 60484: 64 58                    a1 = s0
 60486: 82 19 08                 a2 = u64 [sp + 0x8]
 60489: 82 1a 10                 a3 = u64 [sp + 0x10]
 60492: 50 20 34 03 4b           ra = 820, jump @4662
      :                          @4650 [@dyn 410]
 60497: 82 17 20                 a0 = u64 [sp + 0x20]
 60500: 33 08 00 40              a1 = 0x4000
 60504: ac 58 2f                 jump @4659 if a1 <u s0
      :                          @4651
 60507: 33 08 c0 22 03           a1 = 0x322c0
 60512: 95 88 00 00 01           a1 = a1 + 0x10000
 60517: 82 15                    s0 = u64 [sp]
 60519: 01                       fallthrough
      :                          @4652
 60520: 82 89                    a2 = u64 [a1]
 60522: c9 98 0a                 a3 = a1 - a2
 60525: ab 6a 1a                 jump @4659 if a3 != s1
      :                          @4653
 60528: c9 59 0a                 a3 = a2 - s0
 60531: 01                       fallthrough
      :                          @4654
 60532: 82 8b                    a4 = u64 [a1]
 60534: ab 9b f2                 jump @4652 if a4 != a2
      :                          @4655
 60537: 7b 8a                    u64 [a1] = a3
 60539: 33 0c                    a5 = 0
 60541: 01                       fallthrough
      :                          @4656
 60542: ab 9b ea                 jump @4652 if a4 != a2
      :                          @4657
 60545: 28 06                    jump @4659
      :                          @4658
 60547: 33 07 01                 a0 = 0x1
 60550: 01                       fallthrough
      :                          @4659
 60551: 82 10 50                 ra = u64 [sp + 0x50]
 60554: 82 15 48                 s0 = u64 [sp + 0x48]
 60557: 82 16 40                 s1 = u64 [sp + 0x40]
 60560: 95 11 58                 sp = sp + 0x58
 60563: 32 00                    ret
      :                          @4660
 60565: 00                       trap
      :                          @4661
 60566: 00                       trap
      :                          @4662
 60567: 95 11 88                 sp = sp + 0xffffffffffffff88
 60570: 7b 10 70                 u64 [sp + 0x70] = ra
 60573: 7b 15 68                 u64 [sp + 0x68] = s0
 60576: 7b 16 60                 u64 [sp + 0x60] = s1
 60579: 7b 19 58                 u64 [sp + 0x58] = a2
 60582: 7b 18 50                 u64 [sp + 0x50] = a1
 60585: ab 87 0d                 jump @4664 if a0 != a1
      :                          @4663
 60588: 82 c7                    a0 = u64 [a5]
 60590: 95 77 01                 a0 = a0 + 0x1
 60593: 7b c7                    u64 [a5] = a0
 60595: 28 e4 00                 jump @4682
      :                          @4664
 60598: 64 74                    t2 = a0
 60600: 82 b8 08                 a1 = u64 [a4 + 0x8]
 60603: 82 b3 10                 t1 = u64 [a4 + 0x10]
 60606: 97 77 02                 a0 = a0 << 0x2
 60609: 7b 18 18                 u64 [sp + 0x18] = a1
 60612: c8 87 07                 a0 = a0 + a1
 60615: 7b 17 30                 u64 [sp + 0x30] = a0
 60618: 95 47 01                 a0 = t2 + 0x1
 60621: 7b 17 28                 u64 [sp + 0x28] = a0
 60624: 7b 1c 48                 u64 [sp + 0x48] = a5
 60627: 7b 1b 40                 u64 [sp + 0x40] = a4
 60630: 7b 1a 38                 u64 [sp + 0x38] = a3
 60633: 51 04 90 00              jump @4678 if t2 == 0
      :                          @4665
 60637: 82 a8 10                 a1 = u64 [a3 + 0x10]
 60640: ae 84 c5 00              jump @4683 if t2 >=u a1
      :                          @4666
 60644: 82 a7 08                 a0 = u64 [a3 + 0x8]
 60647: 96 48 18                 a1 = t2 * 0x18
 60650: c8 87 07                 a0 = a0 + a1
 60653: 95 78 10                 a1 = a0 + 0x10
 60656: 7b 18 10                 u64 [sp + 0x10] = a1
 60659: 95 75 08                 s0 = a0 + 0x8
 60662: ae 34 b0 00              jump @4684 if t2 >=u t1
      :                          @4667
 60666: 33 02                    t0 = 0
 60668: 81 17 58                 a0 = i32 [sp + 0x58]
 60671: 7b 17 08                 u64 [sp + 0x8] = a0
 60674: 7b 13                    u64 [sp] = t1
 60676: 28 32                    jump @4671
      :                          @4668
 60678: 82 17 30                 a0 = u64 [sp + 0x30]
 60681: 7a 79                    u32 [a0] = a2
 60683: 82 17 28                 a0 = u64 [sp + 0x28]
 60686: 82 18 50                 a1 = u64 [sp + 0x50]
 60689: 82 19 58                 a2 = u64 [sp + 0x58]
 60692: 82 1c 48                 a5 = u64 [sp + 0x48]
 60695: 64 46                    s1 = t2
 60697: 7b 12 20                 u64 [sp + 0x20] = t0
 60700: 50 20 36 03 7b ff        ra = 822, jump @4662
      :                          @4669 [@dyn 411]
 60706: 82 12 20                 t0 = u64 [sp + 0x20]
 60709: 64 64                    t2 = s1
 60711: 82 1a 38                 a3 = u64 [sp + 0x38]
 60714: 82 1b 40                 a4 = u64 [sp + 0x40]
 60717: 82 13                    t1 = u64 [sp]
 60719: 01                       fallthrough
      :                          @4670
 60720: 82 17 08                 a0 = u64 [sp + 0x8]
 60723: aa 72 64                 jump @4682 if t0 == a0
      :                          @4671
 60726: 82 17 10                 a0 = u64 [sp + 0x10]
 60729: 82 77                    a0 = u64 [a0]
 60731: 33 08                    a1 = 0
 60733: 64 29                    a2 = t0
 60735: 83 22 01                 i32 t0 = t0 + 0x1
 60738: 82 16 18                 s1 = u64 [sp + 0x18]
 60741: 28 0b                    jump @4673
      :                          @4672
 60743: 95 88 01                 a1 = a1 + 0x1
 60746: 95 66 04                 s1 = s1 + 0x4
 60749: aa 84 b9                 jump @4668 if t2 == a1
      :                          @4673
 60752: aa 87 90 00              jump @4693 if a0 == a1
      :                          @4674
 60756: 82 5c                    a5 = u64 [s0]
 60758: c8 8c 0c                 a5 = a5 + a1
 60761: 7c cc                    a5 = u8 [a5]
 60763: 51 0c ec                 jump @4672 if a5 == 0
      :                          @4675
 60766: ae 38 83 00              jump @4694 if a1 >=u t1
      :                          @4676
 60770: 81 6c                    a5 = i32 [s1]
 60772: ab 9c e3                 jump @4672 if a5 != a2
      :                          @4677
 60775: 28 c9                    jump @4670
      :                          @4678
 60777: 33 07                    a0 = 0
 60779: ae 34 77                 jump @4695 if t2 >=u t1
      :                          @4679
 60782: 81 15 58                 s0 = i32 [sp + 0x58]
 60785: 01                       fallthrough
      :                          @4680
 60786: 83 76 01                 i32 s1 = a0 + 0x1
 60789: 82 18 30                 a1 = u64 [sp + 0x30]
 60792: 7a 87                    u32 [a1] = a0
 60794: 82 17 28                 a0 = u64 [sp + 0x28]
 60797: 82 18 50                 a1 = u64 [sp + 0x50]
 60800: 82 19 58                 a2 = u64 [sp + 0x58]
 60803: 82 1c 48                 a5 = u64 [sp + 0x48]
 60806: 50 20 38 03 11 ff        ra = 824, jump @4662
      :                          @4681 [@dyn 412]
 60812: 82 1a 38                 a3 = u64 [sp + 0x38]
 60815: 82 1b 40                 a4 = u64 [sp + 0x40]
 60818: 64 67                    a0 = s1
 60820: ab 65 de                 jump @4680 if s0 != s1
      :                          @4682
 60823: 82 10 70                 ra = u64 [sp + 0x70]
 60826: 82 15 68                 s0 = u64 [sp + 0x68]
 60829: 82 16 60                 s1 = u64 [sp + 0x60]
 60832: 95 11 78                 sp = sp + 0x78
 60835: 32 00                    ret
      :                          @4683
 60837: 00                       trap
      :                          @4684
 60838: 82 17 10                 a0 = u64 [sp + 0x10]
 60841: 82 77                    a0 = u64 [a0]
 60843: 33 0a                    a3 = 0
 60845: 81 12 58                 t0 = i32 [sp + 0x58]
 60848: 01                       fallthrough
      :                          @4685
 60849: 33 08                    a1 = 0
 60851: 83 ab 01                 i32 a4 = a3 + 0x1
 60854: 82 1c 18                 a5 = u64 [sp + 0x18]
 60857: 28 0b                    jump @4687
      :                          @4686
 60859: 95 88 01                 a1 = a1 + 0x1
 60862: 95 cc 04                 a5 = a5 + 0x4
 60865: aa 84 22                 jump @4696 if t2 == a1
      :                          @4687
 60868: aa 87 1c                 jump @4693 if a0 == a1
      :                          @4688
 60871: 82 59                    a2 = u64 [s0]
 60873: c8 89 09                 a2 = a2 + a1
 60876: 7c 99                    a2 = u8 [a2]
 60878: 51 09 ed                 jump @4686 if a2 == 0
      :                          @4689
 60881: ae 38 10                 jump @4694 if a1 >=u t1
      :                          @4690
 60884: 81 c9                    a2 = i32 [a5]
 60886: ab a9 e5                 jump @4686 if a2 != a3
      :                          @4691
 60889: 64 ba                    a3 = a4
 60891: ab 2b d6                 jump @4685 if a4 != t0
      :                          @4692
 60894: 28 b9                    jump @4682
      :                          @4693
 60896: 00                       trap
      :                          @4694
 60897: 00                       trap
      :                          @4695
 60898: 00                       trap
      :                          @4696
 60899: 00                       trap
      :                          @4697
 60900: 95 11 38 ff              sp = sp + 0xffffffffffffff38
 60904: 7b 10 c0 00              u64 [sp + 0xc0] = ra
 60908: 7b 15 b8 00              u64 [sp + 0xb8] = s0
 60912: 7b 16 b0 00              u64 [sp + 0xb0] = s1
 60916: 82 76 10                 s1 = u64 [a0 + 0x10]
 60919: 51 06 8f 05              jump @4849 if s1 == 0
      :                          @4698
 60923: 98 68 3c                 a1 = s1 >> 0x3c
 60926: 52 08 88 05              jump @4849 if a1 != 0
      :                          @4699
 60930: 7b 17 60                 u64 [sp + 0x60] = a0
 60933: 88 82 01                 t0 = a1 <u 0x1
 60936: 97 69 03                 a2 = s1 << 0x3
 60939: 97 22 03                 t0 = t0 << 0x3
 60942: 33 04 c0 22 03           t2 = 0x322c0
 60947: 33 03 00 00 01           t1 = 0x10000
 60952: c8 34 00                 ra = t2 + t1
 60955: 01                       fallthrough
      :                          @4700
 60956: 82 05                    s0 = u64 [ra]
 60958: c8 95 0c                 a5 = s0 + a2
 60961: ac 5c 64 05              jump @4848 if a5 <u s0
      :                          @4701
 60965: c8 2c 07                 a0 = a5 + t0
 60968: d8 c7 0a                 a3 = a0 <u a5
 60971: d8 73 07                 a0 = t1 <u a0
 60974: d4 a7 07                 a0 = a0 | a3
 60977: 52 07 54 05              jump @4848 if a0 != 0
      :                          @4702
 60981: c9 c4 07                 a0 = t2 - a5
 60984: c8 37 07                 a0 = a0 + t1
 60987: 84 7a 07                 a3 = a0 & 0x7
 60990: c8 ac 0c                 a5 = a5 + a3
 60993: 01                       fallthrough
      :                          @4703
 60994: 82 08                    a1 = u64 [ra]
 60996: ab 58 d8                 jump @4700 if a1 != s0
      :                          @4704
 60999: 7b 0c                    u64 [ra] = a5
 61001: 33 0b                    a4 = 0
 61003: c9 a7 05                 s0 = a0 - a3
 61006: 64 57                    a0 = s0
 61008: 33 08                    a1 = 0
 61010: 50 20 3a 03 07 1d 02     ra = 826, jump @13675
      :                          @4705 [@dyn 413]
 61017: 7b 16 98 00              u64 [sp + 0x98] = s1
 61021: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 61025: 7b 16 a8 00              u64 [sp + 0xa8] = s1
 61029: 95 17 68                 a0 = sp + 0x68
 61032: 95 18 98 00              a1 = sp + 0x98
 61036: 64 69                    a2 = s1
 61038: 50 20 3c 03 a6 6f ff     ra = 828, jump @1783
      :                          @4706 [@dyn 414]
 61045: 82 17 60                 a0 = u64 [sp + 0x60]
 61048: 82 73 08                 t1 = u64 [a0 + 0x8]
 61051: 82 17 78                 a0 = u64 [sp + 0x78]
 61054: 7b 17 48                 u64 [sp + 0x48] = a0
 61057: 82 17 70                 a0 = u64 [sp + 0x70]
 61060: 7b 17 30                 u64 [sp + 0x30] = a0
 61063: 33 07                    a0 = 0
 61065: 01                       fallthrough
      :                          @4707
 61066: 96 78 18                 a1 = a0 * 0x18
 61069: c8 83 0a                 a3 = t1 + a1
 61072: 95 ab 10                 a4 = a3 + 0x10
 61075: 95 aa 08                 a3 = a3 + 0x8
 61078: 82 19 30                 a2 = u64 [sp + 0x30]
 61081: c8 98 08                 a1 = a1 + a2
 61084: 95 80 10                 ra = a1 + 0x10
 61087: 95 84 08                 t2 = a1 + 0x8
 61090: 82 18 48                 a1 = u64 [sp + 0x48]
 61093: ae 87 39                 jump @4715 if a0 >=u a1
      :                          @4708
 61096: 33 0c                    a5 = 0
 61098: 33 09                    a2 = 0
 61100: 28 08                    jump @4710
      :                          @4709
 61102: 95 99 01                 a2 = a2 + 0x1
 61105: aa 69 52                 jump @4721 if a2 == s1
      :                          @4710
 61108: aa 79 fa                 jump @4709 if a2 == a0
      :                          @4711
 61111: 82 b8                    a1 = u64 [a4]
 61113: ae 89 cd 00              jump @4732 if a2 >=u a1
      :                          @4712
 61117: 82 a8                    a1 = u64 [a3]
 61119: 97 92 03                 t0 = a2 << 0x3
 61122: c8 28 08                 a1 = a1 + t0
 61125: 82 85                    s0 = u64 [a1]
 61127: 51 05 e7                 jump @4709 if s0 == 0
      :                          @4713
 61130: 82 08                    a1 = u64 [ra]
 61132: ae 89 ba 00              jump @4732 if a2 >=u a1
      :                          @4714
 61136: 82 48                    a1 = u64 [t2]
 61138: 95 cc 01                 a5 = a5 + 0x1
 61141: c8 28 08                 a1 = a1 + t0
 61144: 9a 55                    s0 = -s0
 61146: 7b 85                    u64 [a1] = s0
 61148: 28 d2                    jump @4709
      :                          @4715
 61150: 33 09                    a2 = 0
 61152: 28 0a                    jump @4717
      :                          @4716
 61154: 95 99 01                 a2 = a2 + 0x1
 61157: 33 0c                    a5 = 0
 61159: aa 69 1c                 jump @4721 if a2 == s1
      :                          @4717
 61162: aa 79 f8                 jump @4716 if a2 == a0
      :                          @4718
 61165: 82 b8                    a1 = u64 [a4]
 61167: ae 89 97 00              jump @4732 if a2 >=u a1
      :                          @4719
 61171: 82 a8                    a1 = u64 [a3]
 61173: 97 9c 03                 a5 = a2 << 0x3
 61176: c8 c8 08                 a1 = a1 + a5
 61179: 82 88                    a1 = u64 [a1]
 61181: 51 08 e5                 jump @4716 if a1 == 0
      :                          @4720
 61184: 28 89 04                 jump @4852
      :                          @4721
 61187: 82 18 48                 a1 = u64 [sp + 0x48]
 61190: aa 87 43 04              jump @4833 if a0 == a1
      :                          @4722
 61194: 82 08                    a1 = u64 [ra]
 61196: ae 87 3e 04              jump @4834 if a0 >=u a1
      :                          @4723
 61200: 82 48                    a1 = u64 [t2]
 61202: 95 79 01                 a2 = a0 + 0x1
 61205: 97 77 03                 a0 = a0 << 0x3
 61208: c8 87 07                 a0 = a0 + a1
 61211: 7b 7c                    u64 [a0] = a5
 61213: 64 97                    a0 = a2
 61215: ab 69 6b ff              jump @4707 if a2 != s1
      :                          @4724
 61219: 95 65 ff                 s0 = s1 + 0xffffffffffffffff
 61222: 7b 15 60                 u64 [sp + 0x60] = s0
 61225: 51 05 5e                 jump @4733 if s0 == 0
      :                          @4725
 61228: 97 59 03                 a2 = s0 << 0x3
 61231: 33 07 c0 22 03           a0 = 0x322c0
 61236: 33 03 c0 22 03           t1 = 0x322c0
 61241: 33 02 00 00 01           t0 = 0x10000
 61246: c8 23 0a                 a3 = t1 + t0
 61249: 01                       fallthrough
      :                          @4726
 61250: 82 ab                    a4 = u64 [a3]
 61252: c8 9b 0c                 a5 = a4 + a2
 61255: ac bc 3e 04              jump @4848 if a5 <u a4
      :                          @4727
 61259: 95 c8 08                 a1 = a5 + 0x8
 61262: d8 c8 06                 s1 = a1 <u a5
 61265: d8 82 08                 a1 = t0 <u a1
 61268: d4 68 08                 a1 = a1 | s1
 61271: 52 08 2e 04              jump @4848 if a1 != 0
      :                          @4728
 61275: c9 c3 06                 s1 = t1 - a5
 61278: c8 26 06                 s1 = s1 + t0
 61281: 84 68 07                 a1 = s1 & 0x7
 61284: c8 8c 0c                 a5 = a5 + a1
 61287: 01                       fallthrough
      :                          @4729
 61288: 82 a5                    s0 = u64 [a3]
 61290: ab b5 d8                 jump @4726 if s0 != a4
      :                          @4730
 61293: 7b ac                    u64 [a3] = a5
 61295: c9 86 06                 s1 = s1 - a1
 61298: 64 67                    a0 = s1
 61300: 33 08                    a1 = 0
 61302: 50 20 3e 03 e3 1b 02     ra = 830, jump @13675
      :                          @4731 [@dyn 415]
 61309: 64 67                    a0 = s1
 61311: 82 15 60                 s0 = u64 [sp + 0x60]
 61314: 64 56                    s1 = s0
 61316: 28 09                    jump @4734
      :                          @4732
 61318: 00                       trap
      :                          @4733
 61319: 33 06                    s1 = 0
 61321: 33 07 08                 a0 = 0x8
 61324: 01                       fallthrough
      :                          @4734
 61325: 7b 16 98 00              u64 [sp + 0x98] = s1
 61329: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 61333: 7b 16 a8 00              u64 [sp + 0xa8] = s1
 61337: 95 17 80 00              a0 = sp + 0x80
 61341: 95 18 98 00              a1 = sp + 0x98
 61345: 64 69                    a2 = s1
 61347: 50 20 40 03 71 6e ff     ra = 832, jump @1783
      :                          @4735 [@dyn 416]
 61354: 51 05 70                 jump @4745 if s0 == 0
      :                          @4736
 61357: 82 10 90 00              ra = u64 [sp + 0x90]
 61361: 82 17 88 00              a0 = u64 [sp + 0x88]
 61365: 7b 17 28                 u64 [sp + 0x28] = a0
 61368: 33 07                    a0 = 0
 61370: 01                       fallthrough
      :                          @4737
 61371: 82 18 48                 a1 = u64 [sp + 0x48]
 61374: aa 87 8b 03              jump @4833 if a0 == a1
      :                          @4738
 61378: 96 7a 18                 a3 = a0 * 0x18
 61381: 82 15 30                 s0 = u64 [sp + 0x30]
 61384: c8 a5 05                 s0 = s0 + a3
 61387: 95 53 10                 t1 = s0 + 0x10
 61390: ae 07 ad 03              jump @4842 if a0 >=u ra
      :                          @4739
 61394: 64 62                    t0 = s1
 61396: 33 0b                    a4 = 0
 61398: 33 09                    a2 = 0
 61400: 95 77 01                 a0 = a0 + 0x1
 61403: 95 54 08                 t2 = s0 + 0x8
 61406: 82 18 28                 a1 = u64 [sp + 0x28]
 61409: c8 8a 0a                 a3 = a3 + a1
 61412: 95 a6 10                 s1 = a3 + 0x10
 61415: 95 ac 08                 a5 = a3 + 0x8
 61418: 82 18 60                 a1 = u64 [sp + 0x60]
 61421: 01                       fallthrough
      :                          @4740
 61422: 82 3a                    a3 = u64 [t1]
 61424: ae a9 98 03              jump @4851 if a2 >=u a3
      :                          @4741
 61428: 82 6a                    a3 = u64 [s1]
 61430: ae a9 92 03              jump @4851 if a2 >=u a3
      :                          @4742
 61434: 82 4a                    a3 = u64 [t2]
 61436: c8 ba 0a                 a3 = a3 + a4
 61439: 82 c5                    s0 = u64 [a5]
 61441: 82 aa                    a3 = u64 [a3]
 61443: 95 99 01                 a2 = a2 + 0x1
 61446: c8 b5 05                 s0 = s0 + a4
 61449: 7b 5a                    u64 [s0] = a3
 61451: 95 bb 08                 a4 = a4 + 0x8
 61454: ab 98 e0                 jump @4740 if a1 != a2
      :                          @4743
 61457: 64 26                    s1 = t0
 61459: ab 27 a8                 jump @4737 if a0 != t0
      :                          @4744
 61462: 64 07                    a0 = ra
 61464: 28 0e                    jump @4746
      :                          @4745
 61466: 82 17 88 00              a0 = u64 [sp + 0x88]
 61470: 7b 17 28                 u64 [sp + 0x28] = a0
 61473: 82 17 90 00              a0 = u64 [sp + 0x90]
 61477: 01                       fallthrough
      :                          @4746
 61478: 82 18 80 00              a1 = u64 [sp + 0x80]
 61482: 7b 18                    u64 [sp] = a1
 61484: 95 7b ff                 a4 = a0 + 0xffffffffffffffff
 61487: 7b 17 50                 u64 [sp + 0x50] = a0
 61490: 51 0b 71 01              jump @4772 if a4 == 0
      :                          @4747
 61494: 33 05                    s0 = 0
 61496: 33 06 01                 s1 = 0x1
 61499: 49 11 18 08              u64 [sp + 24] = 0x8
 61503: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 61513: 7b 18 38                 u64 [sp + 0x38] = a1
 61516: 7b 1b 08                 u64 [sp + 0x8] = a4
 61519: 01                       fallthrough
      :                          @4748
 61520: 51 06 fb 01              jump @4797 if s1 == 0
      :                          @4749
 61524: 95 59 01                 a2 = s0 + 0x1
 61527: 96 58 18                 a1 = s0 * 0x18
 61530: 7b 18 10                 u64 [sp + 0x10] = a1
 61533: 97 58 03                 a1 = s0 << 0x3
 61536: 7b 19 20                 u64 [sp + 0x20] = a2
 61539: ae 79 08 01              jump @4768 if a2 >=u a0
      :                          @4750
 61543: 82 14 28                 t2 = u64 [sp + 0x28]
 61546: 82 17 10                 a0 = u64 [sp + 0x10]
 61549: c8 74 04                 t2 = t2 + a0
 61552: 95 47 08                 a0 = t2 + 0x8
 61555: 7b 17 58                 u64 [sp + 0x58] = a0
 61558: 95 44 10                 t2 = t2 + 0x10
 61561: 7b 14 60                 u64 [sp + 0x60] = t2
 61564: 82 19 20                 a2 = u64 [sp + 0x20]
 61567: 51 16 ff 74              jump @4759 if s1 == 4294967295
      :                          @4751
 61571: 96 9a 18                 a3 = a2 * 0x18
 61574: 95 99 01                 a2 = a2 + 0x1
 61577: 7b 19 40                 u64 [sp + 0x40] = a2
 61580: 82 17 28                 a0 = u64 [sp + 0x28]
 61583: c8 7a 0a                 a3 = a3 + a0
 61586: 95 a4 08                 t2 = a3 + 0x8
 61589: 95 a3 10                 t1 = a3 + 0x10
 61592: 82 10 18                 ra = u64 [sp + 0x18]
 61595: 82 1a 20                 a3 = u64 [sp + 0x20]
 61598: 01                       fallthrough
      :                          @4752
 61599: 82 3c                    a5 = u64 [t1]
 61601: ae ca a6 01              jump @4793 if a3 >=u a5
      :                          @4753
 61605: 82 17 60                 a0 = u64 [sp + 0x60]
 61608: 82 7b                    a4 = u64 [a0]
 61610: ae b5 9e 01              jump @4794 if s0 >=u a4
      :                          @4754
 61614: ae c5 9b 01              jump @4795 if s0 >=u a5
      :                          @4755
 61618: ae ba 98 01              jump @4796 if a3 >=u a4
      :                          @4756
 61622: 82 49                    a2 = u64 [t2]
 61624: 82 17 58                 a0 = u64 [sp + 0x58]
 61627: 82 7b                    a4 = u64 [a0]
 61629: c8 09 0c                 a5 = a2 + ra
 61632: 82 c2                    t0 = u64 [a5]
 61634: c8 8b 07                 a0 = a4 + a1
 61637: 82 77                    a0 = u64 [a0]
 61639: c8 89 09                 a2 = a2 + a1
 61642: 82 99                    a2 = u64 [a2]
 61644: c8 0b 0b                 a4 = a4 + ra
 61647: 82 bb                    a4 = u64 [a4]
 61649: 95 aa 01                 a3 = a3 + 0x1
 61652: ca 27 07                 a0 = a0 * t0
 61655: ca 9b 09                 a2 = a4 * a2
 61658: c9 97 07                 a0 = a0 - a2
 61661: cc 67 07                 a0 = a0 /s s1
 61664: 7b c7                    u64 [a5] = a0
 61666: 82 17 50                 a0 = u64 [sp + 0x50]
 61669: 95 00 08                 ra = ra + 0x8
 61672: ab a7 b7                 jump @4752 if a0 != a3
      :                          @4757
 61675: 82 19 40                 a2 = u64 [sp + 0x40]
 61678: ab 79 95                 jump @4751 if a2 != a0
      :                          @4758
 61681: 28 7a                    jump @4768
      :                          @4759
 61683: 82 14 20                 t2 = u64 [sp + 0x20]
 61686: 01                       fallthrough
      :                          @4760
 61687: 96 4b 18                 a4 = t2 * 0x18
 61690: 95 44 01                 t2 = t2 + 0x1
 61693: 82 17 28                 a0 = u64 [sp + 0x28]
 61696: c8 7b 0b                 a4 = a4 + a0
 61699: 82 17 50                 a0 = u64 [sp + 0x50]
 61702: 95 b9 08                 a2 = a4 + 0x8
 61705: 7b 19 40                 u64 [sp + 0x40] = a2
 61708: 95 b2 10                 t0 = a4 + 0x10
 61711: 82 13 18                 t1 = u64 [sp + 0x18]
 61714: 82 1a 20                 a3 = u64 [sp + 0x20]
 61717: 01                       fallthrough
      :                          @4761
 61718: 82 2c                    a5 = u64 [t0]
 61720: ae ca 2f 01              jump @4793 if a3 >=u a5
      :                          @4762
 61724: 82 19 60                 a2 = u64 [sp + 0x60]
 61727: 82 9b                    a4 = u64 [a2]
 61729: ae b5 27 01              jump @4794 if s0 >=u a4
      :                          @4763
 61733: ae c5 24 01              jump @4795 if s0 >=u a5
      :                          @4764
 61737: ae ba 21 01              jump @4796 if a3 >=u a4
      :                          @4765
 61741: 82 19 40                 a2 = u64 [sp + 0x40]
 61744: 82 9c                    a5 = u64 [a2]
 61746: 82 19 58                 a2 = u64 [sp + 0x58]
 61749: 82 96                    s1 = u64 [a2]
 61751: c8 3c 0b                 a4 = a5 + t1
 61754: 82 b0                    ra = u64 [a4]
 61756: c8 86 09                 a2 = s1 + a1
 61759: 82 99                    a2 = u64 [a2]
 61761: c8 8c 0c                 a5 = a5 + a1
 61764: 82 cc                    a5 = u64 [a5]
 61766: c8 36 06                 s1 = s1 + t1
 61769: 82 66                    s1 = u64 [s1]
 61771: ca 09 09                 a2 = a2 * ra
 61774: ca c6 0c                 a5 = s1 * a5
 61777: c9 c9 0c                 a5 = a2 - a5
 61780: 82 19 38                 a2 = u64 [sp + 0x38]
 61783: aa 9c f1 01              jump @4832 if a5 == a2
      :                          @4766
 61787: 95 aa 01                 a3 = a3 + 0x1
 61790: 9a c9                    a2 = -a5
 61792: 7b b9                    u64 [a4] = a2
 61794: 95 33 08                 t1 = t1 + 0x8
 61797: ab a7 b1                 jump @4761 if a0 != a3
      :                          @4767
 61800: ab 74 8f                 jump @4760 if t2 != a0
      :                          @4768
 61803: aa 75 16 02              jump @4844 if s0 == a0
      :                          @4769
 61807: 82 1b 28                 a4 = u64 [sp + 0x28]
 61810: 82 17 10                 a0 = u64 [sp + 0x10]
 61813: c8 7b 0b                 a4 = a4 + a0
 61816: 82 ba 10                 a3 = u64 [a4 + 0x10]
 61819: ae a5 07 02              jump @4845 if s0 >=u a3
      :                          @4770
 61823: 82 b7 08                 a0 = u64 [a4 + 0x8]
 61826: c8 87 07                 a0 = a0 + a1
 61829: 82 76                    s1 = u64 [a0]
 61831: 82 17 50                 a0 = u64 [sp + 0x50]
 61834: 82 18 18                 a1 = u64 [sp + 0x18]
 61837: 95 88 08                 a1 = a1 + 0x8
 61840: 7b 18 18                 u64 [sp + 0x18] = a1
 61843: 82 18 20                 a1 = u64 [sp + 0x20]
 61846: 64 85                    s0 = a1
 61848: 82 1b 08                 a4 = u64 [sp + 0x8]
 61851: ab b8 b5 fe              jump @4748 if a1 != a4
      :                          @4771
 61855: 51 07 e4 01              jump @4846 if a0 == 0
      :                          @4772
 61859: 33 03 18                 t1 = 0x18
 61862: ca 3b 07                 a0 = a4 * t1
 61865: 82 18 28                 a1 = u64 [sp + 0x28]
 61868: c8 87 07                 a0 = a0 + a1
 61871: 82 79 10                 a2 = u64 [a0 + 0x10]
 61874: ae 9b d2 01              jump @4847 if a4 >=u a2
      :                          @4773
 61878: 82 77 08                 a0 = u64 [a0 + 0x8]
 61881: 33 09                    a2 = 0
 61883: 97 bb 03                 a4 = a4 << 0x3
 61886: c8 b7 07                 a0 = a0 + a4
 61889: 82 77                    a0 = u64 [a0]
 61891: 33 0b c0 22 03           a4 = 0x322c0
 61896: 95 ba 00 00 01           a3 = a4 + 0x10000
 61901: 33 02 00 20              t0 = 0x2000
 61905: 28 0b                    jump @4775
      :                          @4774
 61907: 95 99 01                 a2 = a2 + 0x1
 61910: 82 18 50                 a1 = u64 [sp + 0x50]
 61913: aa 89 36                 jump @4784 if a2 == a1
      :                          @4775
 61916: ca 39 0c                 a5 = a2 * t1
 61919: 82 18 28                 a1 = u64 [sp + 0x28]
 61922: c8 8c 0c                 a5 = a5 + a1
 61925: 82 c5                    s0 = u64 [a5]
 61927: 51 05 ec                 jump @4774 if s0 == 0
      :                          @4776
 61930: ac 52 e9                 jump @4774 if t0 <u s0
      :                          @4777
 61933: 82 c0 08                 ra = u64 [a5 + 0x8]
 61936: 97 54 03                 t2 = s0 << 0x3
 61939: 01                       fallthrough
      :                          @4778
 61940: 82 ac                    a5 = u64 [a3]
 61942: c9 ca 0b                 a4 = a3 - a5
 61945: ab 0b da                 jump @4774 if a4 != ra
      :                          @4779
 61948: c9 4c 0b                 a4 = a5 - t2
 61951: 01                       fallthrough
      :                          @4780
 61952: 82 a5                    s0 = u64 [a3]
 61954: ab c5 f2                 jump @4778 if s0 != a5
      :                          @4781
 61957: 7b ab                    u64 [a3] = a4
 61959: 33 06                    s1 = 0
 61961: 01                       fallthrough
      :                          @4782
 61962: ab c5 ea                 jump @4778 if s0 != a5
      :                          @4783
 61965: 28 c6                    jump @4774
      :                          @4784
 61967: 82 19                    a2 = u64 [sp]
 61969: 51 09 9c 00              jump @4812 if a2 == 0
      :                          @4785
 61973: 56 29 aa 0a 98 00        jump @4812 if a2 >u 2730
      :                          @4786
 61979: 96 98 e8                 a1 = a2 * 0xffffffffffffffe8
 61982: 33 09 c0 22 03           a2 = 0x322c0
 61987: 95 99 00 00 01           a2 = a2 + 0x10000
 61992: 01                       fallthrough
      :                          @4787
 61993: 82 9a                    a3 = u64 [a2]
 61995: c9 a9 0b                 a4 = a2 - a3
 61998: 82 1c 28                 a5 = u64 [sp + 0x28]
 62001: ab cb 7c                 jump @4812 if a4 != a5
      :                          @4788
 62004: c8 8a 0b                 a4 = a3 + a1
 62007: 01                       fallthrough
      :                          @4789
 62008: 82 9c                    a5 = u64 [a2]
 62010: ab ac ef                 jump @4787 if a5 != a3
      :                          @4790
 62013: 7b 9b                    u64 [a2] = a4
 62015: 33 06                    s1 = 0
 62017: 01                       fallthrough
      :                          @4791
 62018: ab ac e7                 jump @4787 if a5 != a3
      :                          @4792
 62021: 28 68                    jump @4812
      :                          @4793
 62023: 00                       trap
      :                          @4794
 62024: 00                       trap
      :                          @4795
 62025: 00                       trap
      :                          @4796
 62026: 00                       trap
      :                          @4797
 62027: 51 07 54                 jump @4809 if a0 == 0
      :                          @4798
 62030: 33 07                    a0 = 0
 62032: 33 03 18                 t1 = 0x18
 62035: 33 0a c0 22 03           a3 = 0x322c0
 62040: 95 ab 00 00 01           a4 = a3 + 0x10000
 62045: 33 02 00 20              t0 = 0x2000
 62049: 28 0b                    jump @4800
      :                          @4799
 62051: 95 77 01                 a0 = a0 + 0x1
 62054: 82 18 50                 a1 = u64 [sp + 0x50]
 62057: aa 87 36                 jump @4809 if a0 == a1
      :                          @4800
 62060: ca 37 0c                 a5 = a0 * t1
 62063: 82 18 28                 a1 = u64 [sp + 0x28]
 62066: c8 8c 0c                 a5 = a5 + a1
 62069: 82 c6                    s1 = u64 [a5]
 62071: 51 06 ec                 jump @4799 if s1 == 0
      :                          @4801
 62074: ac 62 e9                 jump @4799 if t0 <u s1
      :                          @4802
 62077: 82 cc 08                 a5 = u64 [a5 + 0x8]
 62080: 97 64 03                 t2 = s1 << 0x3
 62083: 01                       fallthrough
      :                          @4803
 62084: 82 b5                    s0 = u64 [a4]
 62086: c9 5b 0a                 a3 = a4 - s0
 62089: ab ca da                 jump @4799 if a3 != a5
      :                          @4804
 62092: c9 45 0a                 a3 = s0 - t2
 62095: 01                       fallthrough
      :                          @4805
 62096: 82 b9                    a2 = u64 [a4]
 62098: ab 59 f2                 jump @4803 if a2 != s0
      :                          @4806
 62101: 7b ba                    u64 [a4] = a3
 62103: 33 06                    s1 = 0
 62105: 01                       fallthrough
      :                          @4807
 62106: ab 59 ea                 jump @4803 if a2 != s0
      :                          @4808
 62109: 28 c6                    jump @4799
      :                          @4809
 62111: 82 18                    a1 = u64 [sp]
 62113: 51 08 09                 jump @4811 if a1 == 0
      :                          @4810
 62116: 54 28 aa 0a a7 00        jump @4835 if a1 <=u 2730
      :                          @4811
 62122: 33 07                    a0 = 0
 62124: 01                       fallthrough
      :                          @4812
 62125: 82 18 48                 a1 = u64 [sp + 0x48]
 62128: 51 08 54                 jump @4824 if a1 == 0
      :                          @4813
 62131: 33 08                    a1 = 0
 62133: 33 03 18                 t1 = 0x18
 62136: 33 0a c0 22 03           a3 = 0x322c0
 62141: 95 ab 00 00 01           a4 = a3 + 0x10000
 62146: 33 02 00 20              t0 = 0x2000
 62150: 28 0b                    jump @4815
      :                          @4814
 62152: 95 88 01                 a1 = a1 + 0x1
 62155: 82 19 48                 a2 = u64 [sp + 0x48]
 62158: aa 98 36                 jump @4824 if a1 == a2
      :                          @4815
 62161: ca 38 0c                 a5 = a1 * t1
 62164: 82 19 30                 a2 = u64 [sp + 0x30]
 62167: c8 9c 0c                 a5 = a5 + a2
 62170: 82 c6                    s1 = u64 [a5]
 62172: 51 06 ec                 jump @4814 if s1 == 0
      :                          @4816
 62175: ac 62 e9                 jump @4814 if t0 <u s1
      :                          @4817
 62178: 82 cc 08                 a5 = u64 [a5 + 0x8]
 62181: 97 64 03                 t2 = s1 << 0x3
 62184: 01                       fallthrough
      :                          @4818
 62185: 82 b5                    s0 = u64 [a4]
 62187: c9 5b 0a                 a3 = a4 - s0
 62190: ab ca da                 jump @4814 if a3 != a5
      :                          @4819
 62193: c9 45 0a                 a3 = s0 - t2
 62196: 01                       fallthrough
      :                          @4820
 62197: 82 b9                    a2 = u64 [a4]
 62199: ab 59 f2                 jump @4818 if a2 != s0
      :                          @4821
 62202: 7b ba                    u64 [a4] = a3
 62204: 33 06                    s1 = 0
 62206: 01                       fallthrough
      :                          @4822
 62207: ab 59 ea                 jump @4818 if a2 != s0
      :                          @4823
 62210: 28 c6                    jump @4814
      :                          @4824
 62212: 82 18 68                 a1 = u64 [sp + 0x68]
 62215: 51 08 2f                 jump @4831 if a1 == 0
      :                          @4825
 62218: 33 09 aa 0a              a2 = 0xaaa
 62222: ac 89 28                 jump @4831 if a2 <u a1
      :                          @4826
 62225: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 62228: 33 09 c0 22 03           a2 = 0x322c0
 62233: 95 99 00 00 01           a2 = a2 + 0x10000
 62238: 01                       fallthrough
      :                          @4827
 62239: 82 9a                    a3 = u64 [a2]
 62241: c9 a9 0b                 a4 = a2 - a3
 62244: 82 1c 30                 a5 = u64 [sp + 0x30]
 62247: ab cb 0f                 jump @4831 if a4 != a5
      :                          @4828
 62250: c8 8a 0b                 a4 = a3 + a1
 62253: 01                       fallthrough
      :                          @4829
 62254: 82 9c                    a5 = u64 [a2]
 62256: ab ac ef                 jump @4827 if a5 != a3
      :                          @4830
 62259: 7b 9b                    u64 [a2] = a4
 62261: 01                       fallthrough
      :                          @4831
 62262: 82 10 c0 00              ra = u64 [sp + 0xc0]
 62266: 82 15 b8 00              s0 = u64 [sp + 0xb8]
 62270: 82 16 b0 00              s1 = u64 [sp + 0xb0]
 62274: 95 11 c8 00              sp = sp + 0xc8
 62278: 32 00                    ret
      :                          @4832
 62280: 00                       trap
      :                          @4833
 62281: 00                       trap
      :                          @4834
 62282: 00                       trap
      :                          @4835
 62283: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 62286: 33 09 c0 22 03           a2 = 0x322c0
 62291: 95 99 00 00 01           a2 = a2 + 0x10000
 62296: 01                       fallthrough
      :                          @4836
 62297: 82 9a                    a3 = u64 [a2]
 62299: c9 a9 07                 a0 = a2 - a3
 62302: 82 1b 28                 a4 = u64 [sp + 0x28]
 62305: ab b7 49 ff              jump @4811 if a0 != a4
      :                          @4837
 62309: c8 8a 07                 a0 = a3 + a1
 62312: 01                       fallthrough
      :                          @4838
 62313: 82 9b                    a4 = u64 [a2]
 62315: ab ab 08                 jump @4840 if a4 != a3
      :                          @4839
 62318: 7b 97                    u64 [a2] = a0
 62320: 33 0c                    a5 = 0
 62322: 01                       fallthrough
      :                          @4840
 62323: 33 07                    a0 = 0
 62325: ab ab e4                 jump @4836 if a4 != a3
      :                          @4841
 62328: 28 35 ff                 jump @4812
      :                          @4842
 62331: 82 38                    a1 = u64 [t1]
 62333: 51 08 0a                 jump @4850 if a1 == 0
      :                          @4843
 62336: 00                       trap
      :                          @4844
 62337: 00                       trap
      :                          @4845
 62338: 00                       trap
      :                          @4846
 62339: 00                       trap
      :                          @4847
 62340: 00                       trap
      :                          @4848
 62341: 00                       trap
      :                          @4849
 62342: 00                       trap
      :                          @4850
 62343: 00                       trap
      :                          @4851
 62344: 00                       trap
      :                          @4852
 62345: 00                       trap
      :                          @4853
 62346: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 62350: 7b 10 88 00              u64 [sp + 0x88] = ra
 62354: 7b 15 80 00              u64 [sp + 0x80] = s0
 62358: 7b 16 78                 u64 [sp + 0x78] = s1
 62361: 82 82 10                 t0 = u64 [a1 + 0x10]
 62364: 7b 17                    u64 [sp] = a0
 62366: 97 27 03                 a0 = t0 << 0x3
 62369: 7b 17 28                 u64 [sp + 0x28] = a0
 62372: 51 02 f1 01              jump @4892 if t0 == 0
      :                          @4854
 62376: 98 27 3c                 a0 = t0 >> 0x3c
 62379: 52 07 d9 02              jump @4922 if a0 != 0
      :                          @4855
 62383: 7b 18 38                 u64 [sp + 0x38] = a1
 62386: 7b 12 40                 u64 [sp + 0x40] = t0
 62389: 88 77 01                 a0 = a0 <u 0x1
 62392: 97 72 03                 t0 = a0 << 0x3
 62395: 33 08 c0 22 03           a1 = 0x322c0
 62400: 33 03 00 00 01           t1 = 0x10000
 62405: c8 38 0a                 a3 = a1 + t1
 62408: 01                       fallthrough
      :                          @4856
 62409: 82 ab                    a4 = u64 [a3]
 62411: 82 1c 28                 a5 = u64 [sp + 0x28]
 62414: c8 bc 0c                 a5 = a5 + a4
 62417: ac bc b2 02              jump @4921 if a5 <u a4
      :                          @4857
 62421: c8 2c 09                 a2 = a5 + t0
 62424: d8 c9 06                 s1 = a2 <u a5
 62427: d8 93 09                 a2 = t1 <u a2
 62430: d4 69 09                 a2 = a2 | s1
 62433: 52 09 a2 02              jump @4921 if a2 != 0
      :                          @4858
 62437: c9 c8 06                 s1 = a1 - a5
 62440: c8 36 06                 s1 = s1 + t1
 62443: 84 69 07                 a2 = s1 & 0x7
 62446: c8 9c 0c                 a5 = a5 + a2
 62449: 01                       fallthrough
      :                          @4859
 62450: 82 a7                    a0 = u64 [a3]
 62452: ab b7 d5                 jump @4856 if a0 != a4
      :                          @4860
 62455: 7b ac                    u64 [a3] = a5
 62457: c9 96 05                 s0 = s1 - a2
 62460: 64 57                    a0 = s0
 62462: 33 08                    a1 = 0
 62464: 82 19 28                 a2 = u64 [sp + 0x28]
 62467: 50 20 42 03 56 17 02     ra = 834, jump @13675
      :                          @4861 [@dyn 417]
 62474: 82 17 38                 a0 = u64 [sp + 0x38]
 62477: 82 77 08                 a0 = u64 [a0 + 0x8]
 62480: 7b 17 20                 u64 [sp + 0x20] = a0
 62483: 33 0a                    a3 = 0
 62485: 33 09 18                 a2 = 0x18
 62488: 82 12 40                 t0 = u64 [sp + 0x40]
 62491: 28 05                    jump @4863
      :                          @4862
 62493: aa 2a 3d                 jump @4868 if a3 == t0
      :                          @4863
 62496: 33 07                    a0 = 0
 62498: ca 9a 08                 a1 = a3 * a2
 62501: 95 aa 01                 a3 = a3 + 0x1
 62504: 82 1b 20                 a4 = u64 [sp + 0x20]
 62507: c8 b8 08                 a1 = a1 + a4
 62510: 95 8b 10                 a4 = a1 + 0x10
 62513: 95 8c 08                 a5 = a1 + 0x8
 62516: 64 56                    s1 = s0
 62518: 28 0b                    jump @4865
      :                          @4864
 62520: 95 77 01                 a0 = a0 + 0x1
 62523: 95 66 08                 s1 = s1 + 0x8
 62526: aa 72 df                 jump @4862 if t0 == a0
      :                          @4865
 62529: 82 b8                    a1 = u64 [a4]
 62531: ae 87 82 01              jump @4895 if a0 >=u a1
      :                          @4866
 62535: 82 c8                    a1 = u64 [a5]
 62537: c8 78 08                 a1 = a1 + a0
 62540: 7c 88                    a1 = u8 [a1]
 62542: 51 08 ea                 jump @4864 if a1 == 0
      :                          @4867
 62545: 82 68                    a1 = u64 [s1]
 62547: 95 88 01                 a1 = a1 + 0x1
 62550: 7b 68                    u64 [s1] = a1
 62552: 28 e0                    jump @4864
      :                          @4868
 62554: 33 08                    a1 = 0
 62556: 64 56                    s1 = s0
 62558: 33 05                    s0 = 0
 62560: 49 11 48                 u64 [sp + 72] = 0
 62563: 33 07 08                 a0 = 0x8
 62566: 7b 17 50                 u64 [sp + 0x50] = a0
 62569: 49 11 58                 u64 [sp + 88] = 0
 62572: 7b 16 08                 u64 [sp + 0x8] = s1
 62575: 28 1a                    jump @4871
      :                          @4869
 62577: 97 89 03                 a2 = a1 << 0x3
 62580: c8 79 09                 a2 = a2 + a0
 62583: 7b 95                    u64 [a2] = s0
 62585: 95 88 01                 a1 = a1 + 0x1
 62588: 7b 18 58                 u64 [sp + 0x58] = a1
 62591: 01                       fallthrough
      :                          @4870
 62592: 95 55 01                 s0 = s0 + 0x1
 62595: 95 66 08                 s1 = s1 + 0x8
 62598: aa 52 23                 jump @4875 if t0 == s0
      :                          @4871
 62601: 82 69                    a2 = u64 [s1]
 62603: 52 09 f5                 jump @4870 if a2 != 0
      :                          @4872
 62606: 82 19 48                 a2 = u64 [sp + 0x48]
 62609: ab 98 e0                 jump @4869 if a1 != a2
      :                          @4873
 62612: 95 17 48                 a0 = sp + 0x48
 62615: 50 20 44 03 70 5e ff     ra = 836, jump @1581
      :                          @4874 [@dyn 418]
 62622: 82 12 40                 t0 = u64 [sp + 0x40]
 62625: 82 18 58                 a1 = u64 [sp + 0x58]
 62628: 82 17 50                 a0 = u64 [sp + 0x50]
 62631: 28 ca                    jump @4869
      :                          @4875
 62633: 49 11 60                 u64 [sp + 96] = 0
 62636: 49 11 10 08              u64 [sp + 16] = 0x8
 62640: 49 11 68 08              u64 [sp + 104] = 0x8
 62644: 49 11 70                 u64 [sp + 112] = 0
 62647: 51 08 0f 01              jump @4896 if a1 == 0
      :                          @4876
 62651: 82 1a 50                 a3 = u64 [sp + 0x50]
 62654: 33 09                    a2 = 0
 62656: 82 15 08                 s0 = u64 [sp + 0x8]
 62659: 28 0f                    jump @4878
      :                          @4877
 62661: 82 18 58                 a1 = u64 [sp + 0x58]
 62664: 82 15 08                 s0 = u64 [sp + 0x8]
 62667: 82 19 18                 a2 = u64 [sp + 0x18]
 62670: 51 08 df 00              jump @4893 if a1 == 0
      :                          @4878
 62674: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 62677: 7b 18 58                 u64 [sp + 0x58] = a1
 62680: 97 88 03                 a1 = a1 << 0x3
 62683: c8 a8 08                 a1 = a1 + a3
 62686: 82 17 60                 a0 = u64 [sp + 0x60]
 62689: 82 8b                    a4 = u64 [a1]
 62691: ab 79 24                 jump @4881 if a2 != a0
      :                          @4879
 62694: 95 17 60                 a0 = sp + 0x60
 62697: 64 98                    a1 = a2
 62699: 64 a6                    s1 = a3
 62701: 7b 1b 38                 u64 [sp + 0x38] = a4
 62704: 50 20 46 03 17 5e ff     ra = 838, jump @1581
      :                          @4880 [@dyn 419]
 62711: 82 1b 38                 a4 = u64 [sp + 0x38]
 62714: 64 6a                    a3 = s1
 62716: 82 12 40                 t0 = u64 [sp + 0x40]
 62719: 82 19 70                 a2 = u64 [sp + 0x70]
 62722: 82 18 68                 a1 = u64 [sp + 0x68]
 62725: 28 06                    jump @4882
      :                          @4881
 62727: 82 18 10                 a1 = u64 [sp + 0x10]
 62730: 01                       fallthrough
      :                          @4882
 62731: 97 97 03                 a0 = a2 << 0x3
 62734: c8 87 07                 a0 = a0 + a1
 62737: 7b 7b                    u64 [a0] = a4
 62739: 95 99 01                 a2 = a2 + 0x1
 62742: 7b 19 70                 u64 [sp + 0x70] = a2
 62745: ae 2b 69 01              jump @4920 if a4 >=u t0
      :                          @4883
 62749: 7b 18 10                 u64 [sp + 0x10] = a1
 62752: 7b 19 18                 u64 [sp + 0x18] = a2
 62755: 64 56                    s1 = s0
 62757: 33 05                    s0 = 0
 62759: 96 b7 18                 a0 = a4 * 0x18
 62762: 82 18 20                 a1 = u64 [sp + 0x20]
 62765: c8 87 07                 a0 = a0 + a1
 62768: 95 79 10                 a2 = a0 + 0x10
 62771: 95 7b 08                 a4 = a0 + 0x8
 62774: 7b 19 38                 u64 [sp + 0x38] = a2
 62777: 7b 1b 30                 u64 [sp + 0x30] = a4
 62780: 28 1e                    jump @4886
      :                          @4884
 62782: 82 1a 50                 a3 = u64 [sp + 0x50]
 62785: 97 87 03                 a0 = a1 << 0x3
 62788: c8 a7 07                 a0 = a0 + a3
 62791: 7b 75                    u64 [a0] = s0
 62793: 95 88 01                 a1 = a1 + 0x1
 62796: 7b 18 58                 u64 [sp + 0x58] = a1
 62799: 01                       fallthrough
      :                          @4885
 62800: 95 55 01                 s0 = s0 + 0x1
 62803: 95 66 08                 s1 = s1 + 0x8
 62806: aa 52 6f ff              jump @4877 if t0 == s0
      :                          @4886
 62810: 82 98                    a1 = u64 [a2]
 62812: ae 85 25 01              jump @4919 if s0 >=u a1
      :                          @4887
 62816: 82 b7                    a0 = u64 [a4]
 62818: c8 57 07                 a0 = a0 + s0
 62821: 7c 77                    a0 = u8 [a0]
 62823: 51 07 e9                 jump @4885 if a0 == 0
      :                          @4888
 62826: 82 67                    a0 = u64 [s1]
 62828: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 62831: 7b 67                    u64 [s1] = a0
 62833: 52 07 df                 jump @4885 if a0 != 0
      :                          @4889
 62836: 82 18 58                 a1 = u64 [sp + 0x58]
 62839: 82 17 48                 a0 = u64 [sp + 0x48]
 62842: ab 78 c4                 jump @4884 if a1 != a0
      :                          @4890
 62845: 95 17 48                 a0 = sp + 0x48
 62848: 50 20 48 03 87 5d ff     ra = 840, jump @1581
      :                          @4891 [@dyn 420]
 62855: 82 1b 30                 a4 = u64 [sp + 0x30]
 62858: 82 19 38                 a2 = u64 [sp + 0x38]
 62861: 82 12 40                 t0 = u64 [sp + 0x40]
 62864: 82 18 58                 a1 = u64 [sp + 0x58]
 62867: 28 ab                    jump @4884
      :                          @4892
 62869: 33 09                    a2 = 0
 62871: 49 11 48                 u64 [sp + 72] = 0
 62874: 33 05 08                 s0 = 0x8
 62877: 7b 15 50                 u64 [sp + 0x50] = s0
 62880: 49 11 58                 u64 [sp + 88] = 0
 62883: 49 11 60                 u64 [sp + 96] = 0
 62886: 7b 15 68                 u64 [sp + 0x68] = s0
 62889: 49 11 70                 u64 [sp + 112] = 0
 62892: 01                       fallthrough
      :                          @4893
 62893: ab 29 1f                 jump @4897 if a2 != t0
      :                          @4894
 62896: 82 17 70                 a0 = u64 [sp + 0x70]
 62899: 82 18 68                 a1 = u64 [sp + 0x68]
 62902: 82 19 60                 a2 = u64 [sp + 0x60]
 62905: 82 1a                    a3 = u64 [sp]
 62907: 7b a7 10                 u64 [a3 + 0x10] = a0
 62910: 7b a8 08                 u64 [a3 + 0x8] = a1
 62913: 7b a9                    u64 [a3] = a2
 62915: 28 4b                    jump @4904
      :                          @4895
 62917: 00                       trap
      :                          @4896
 62918: 82 15 08                 s0 = u64 [sp + 0x8]
 62921: 51 02 e7                 jump @4894 if t0 == 0
      :                          @4897
 62924: 82 18 60                 a1 = u64 [sp + 0x60]
 62927: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 62937: 82 19                    a2 = u64 [sp]
 62939: 7b 97                    u64 [a2] = a0
 62941: 51 08 31                 jump @4904 if a1 == 0
      :                          @4898
 62944: 33 07 00 20              a0 = 0x2000
 62948: ac 87 2a                 jump @4904 if a0 <u a1
      :                          @4899
 62951: 82 17 68                 a0 = u64 [sp + 0x68]
 62954: 97 88 03                 a1 = a1 << 0x3
 62957: 33 09 c0 22 03           a2 = 0x322c0
 62962: 95 99 00 00 01           a2 = a2 + 0x10000
 62967: 01                       fallthrough
      :                          @4900
 62968: 82 9a                    a3 = u64 [a2]
 62970: c9 a9 0b                 a4 = a2 - a3
 62973: ab 7b 11                 jump @4904 if a4 != a0
      :                          @4901
 62976: c9 8a 0b                 a4 = a3 - a1
 62979: 01                       fallthrough
      :                          @4902
 62980: 82 9c                    a5 = u64 [a2]
 62982: ab ac f2                 jump @4900 if a5 != a3
      :                          @4903
 62985: 7b 9b                    u64 [a2] = a4
 62987: 33 06                    s1 = 0
 62989: 01                       fallthrough
      :                          @4904
 62990: 82 18 48                 a1 = u64 [sp + 0x48]
 62993: 51 08 31                 jump @4911 if a1 == 0
      :                          @4905
 62996: 33 07 00 20              a0 = 0x2000
 63000: ac 87 2a                 jump @4911 if a0 <u a1
      :                          @4906
 63003: 82 17 50                 a0 = u64 [sp + 0x50]
 63006: 97 88 03                 a1 = a1 << 0x3
 63009: 33 09 c0 22 03           a2 = 0x322c0
 63014: 95 99 00 00 01           a2 = a2 + 0x10000
 63019: 01                       fallthrough
      :                          @4907
 63020: 82 9a                    a3 = u64 [a2]
 63022: c9 a9 0b                 a4 = a2 - a3
 63025: ab 7b 11                 jump @4911 if a4 != a0
      :                          @4908
 63028: c9 8a 0b                 a4 = a3 - a1
 63031: 01                       fallthrough
      :                          @4909
 63032: 82 9c                    a5 = u64 [a2]
 63034: ab ac f2                 jump @4907 if a5 != a3
      :                          @4910
 63037: 7b 9b                    u64 [a2] = a4
 63039: 33 06                    s1 = 0
 63041: 01                       fallthrough
      :                          @4911
 63042: 51 02 2e                 jump @4918 if t0 == 0
      :                          @4912
 63045: 33 07 00 20              a0 = 0x2000
 63049: ac 27 27                 jump @4918 if a0 <u t0
      :                          @4913
 63052: 33 07 c0 22 03           a0 = 0x322c0
 63057: 95 77 00 00 01           a0 = a0 + 0x10000
 63062: 01                       fallthrough
      :                          @4914
 63063: 82 78                    a1 = u64 [a0]
 63065: c9 87 09                 a2 = a0 - a1
 63068: ab 59 14                 jump @4918 if a2 != s0
      :                          @4915
 63071: 82 19 28                 a2 = u64 [sp + 0x28]
 63074: c9 98 09                 a2 = a1 - a2
 63077: 01                       fallthrough
      :                          @4916
 63078: 82 7a                    a3 = u64 [a0]
 63080: ab 8a ef                 jump @4914 if a3 != a1
      :                          @4917
 63083: 7b 79                    u64 [a0] = a2
 63085: 33 0b                    a4 = 0
 63087: 01                       fallthrough
      :                          @4918
 63088: 82 10 88 00              ra = u64 [sp + 0x88]
 63092: 82 15 80 00              s0 = u64 [sp + 0x80]
 63096: 82 16 78                 s1 = u64 [sp + 0x78]
 63099: 95 11 90 00              sp = sp + 0x90
 63103: 32 00                    ret
      :                          @4919
 63105: 00                       trap
      :                          @4920
 63106: 00                       trap
      :                          @4921
 63107: 00                       trap
      :                          @4922
 63108: 00                       trap
      :                          @4923
 63109: 95 11 30 ff              sp = sp + 0xffffffffffffff30
 63113: 7b 10 c8 00              u64 [sp + 0xc8] = ra
 63117: 7b 15 c0 00              u64 [sp + 0xc0] = s0
 63121: 7b 16 b8 00              u64 [sp + 0xb8] = s1
 63125: 7b 18 28                 u64 [sp + 0x28] = a1
 63128: 82 83 10                 t1 = u64 [a1 + 0x10]
 63131: 7b 17 10                 u64 [sp + 0x10] = a0
 63134: 7b 13 30                 u64 [sp + 0x30] = t1
 63137: 51 03 17 01              jump @4943 if t1 == 0
      :                          @4924
 63141: 98 37 3b                 a0 = t1 >> 0x3b
 63144: 52 07 a2 02              jump @4980 if a0 != 0
      :                          @4925
 63148: 88 72 01                 t0 = a0 <u 0x1
 63151: 97 39 04                 a2 = t1 << 0x4
 63154: 97 22 03                 t0 = t0 << 0x3
 63157: 33 04 c0 22 03           t2 = 0x322c0
 63162: 33 03 00 00 01           t1 = 0x10000
 63167: c8 34 0b                 a4 = t2 + t1
 63170: 01                       fallthrough
      :                          @4926
 63171: 82 b6                    s1 = u64 [a4]
 63173: c8 96 0c                 a5 = s1 + a2
 63176: ac 6c 81 02              jump @4979 if a5 <u s1
      :                          @4927
 63180: c8 2c 0a                 a3 = a5 + t0
 63183: d8 ca 05                 s0 = a3 <u a5
 63186: d8 a3 0a                 a3 = t1 <u a3
 63189: d4 5a 0a                 a3 = a3 | s0
 63192: 52 0a 71 02              jump @4979 if a3 != 0
      :                          @4928
 63196: c9 c4 05                 s0 = t2 - a5
 63199: c8 35 05                 s0 = s0 + t1
 63202: 84 5a 07                 a3 = s0 & 0x7
 63205: c8 ac 0c                 a5 = a5 + a3
 63208: 01                       fallthrough
      :                          @4929
 63209: 82 b7                    a0 = u64 [a4]
 63211: ab 67 d8                 jump @4926 if a0 != s1
      :                          @4930
 63214: 7b bc                    u64 [a4] = a5
 63216: c9 a5 05                 s0 = s0 - a3
 63219: 64 57                    a0 = s0
 63221: 33 08                    a1 = 0
 63223: 50 20 4a 03 62 14 02     ra = 842, jump @13675
      :                          @4931 [@dyn 421]
 63230: 82 19 30                 a2 = u64 [sp + 0x30]
 63233: 7b 19 38                 u64 [sp + 0x38] = a2
 63236: 7b 15 18                 u64 [sp + 0x18] = s0
 63239: 7b 15 40                 u64 [sp + 0x40] = s0
 63242: 7b 19 48                 u64 [sp + 0x48] = a2
 63245: 97 99 03                 a2 = a2 << 0x3
 63248: 33 07 c0 22 03           a0 = 0x322c0
 63253: 33 03 c0 22 03           t1 = 0x322c0
 63258: 33 02 00 00 01           t0 = 0x10000
 63263: c8 23 0a                 a3 = t1 + t0
 63266: 01                       fallthrough
      :                          @4932
 63267: 82 ab                    a4 = u64 [a3]
 63269: c8 9b 0c                 a5 = a4 + a2
 63272: ac bc 21 02              jump @4979 if a5 <u a4
      :                          @4933
 63276: 95 c8 08                 a1 = a5 + 0x8
 63279: d8 c8 06                 s1 = a1 <u a5
 63282: d8 82 08                 a1 = t0 <u a1
 63285: d4 68 08                 a1 = a1 | s1
 63288: 52 08 11 02              jump @4979 if a1 != 0
      :                          @4934
 63292: c9 c3 06                 s1 = t1 - a5
 63295: c8 26 06                 s1 = s1 + t0
 63298: 84 68 07                 a1 = s1 & 0x7
 63301: c8 8c 0c                 a5 = a5 + a1
 63304: 01                       fallthrough
      :                          @4935
 63305: 82 a5                    s0 = u64 [a3]
 63307: ab b5 d8                 jump @4932 if s0 != a4
      :                          @4936
 63310: 7b ac                    u64 [a3] = a5
 63312: c9 86 05                 s0 = s1 - a1
 63315: 64 57                    a0 = s0
 63317: 33 08                    a1 = 0
 63319: 50 20 4c 03 02 14 02     ra = 844, jump @13675
      :                          @4937 [@dyn 422]
 63326: 82 19 30                 a2 = u64 [sp + 0x30]
 63329: 7b 19 50                 u64 [sp + 0x50] = a2
 63332: 7b 15 58                 u64 [sp + 0x58] = s0
 63335: 7b 19 60                 u64 [sp + 0x60] = a2
 63338: 33 07 c0 22 03           a0 = 0x322c0
 63343: 33 06 00 00 01           s1 = 0x10000
 63348: c8 67 07                 a0 = a0 + s1
 63351: 01                       fallthrough
      :                          @4938
 63352: 82 7a                    a3 = u64 [a0]
 63354: c8 9a 08                 a1 = a3 + a2
 63357: ac a8 cc 01              jump @4979 if a1 <u a3
      :                          @4939
 63361: 95 8b 01                 a4 = a1 + 0x1
 63364: 88 bc 01                 a5 = a4 <u 0x1
 63367: d8 b6 0b                 a4 = s1 <u a4
 63370: d4 cb 0b                 a4 = a4 | a5
 63373: 52 0b bc 01              jump @4979 if a4 != 0
      :                          @4940
 63377: 82 7b                    a4 = u64 [a0]
 63379: ab ab e5                 jump @4938 if a4 != a3
      :                          @4941
 63382: 7b 78                    u64 [a0] = a1
 63384: 33 0c                    a5 = 0
 63386: 7b 15 08                 u64 [sp + 0x8] = s0
 63389: 33 07 c0 22 04           a0 = 0x422c0
 63394: c9 87 06                 s1 = a0 - a1
 63397: 64 67                    a0 = s1
 63399: 33 08                    a1 = 0
 63401: 50 20 4e 03 b0 13 02     ra = 846, jump @13675
      :                          @4942 [@dyn 423]
 63408: 82 13 30                 t1 = u64 [sp + 0x30]
 63411: 82 15 18                 s0 = u64 [sp + 0x18]
 63414: 28 21                    jump @4944
      :                          @4943
 63416: 49 11 38                 u64 [sp + 56] = 0
 63419: 33 08 08                 a1 = 0x8
 63422: 7b 18 40                 u64 [sp + 0x40] = a1
 63425: 49 11 48                 u64 [sp + 72] = 0
 63428: 49 11 50                 u64 [sp + 80] = 0
 63431: 7b 18 08                 u64 [sp + 0x8] = a1
 63434: 7b 18 58                 u64 [sp + 0x58] = a1
 63437: 49 11 60                 u64 [sp + 96] = 0
 63440: 33 06 01                 s1 = 0x1
 63443: 33 05 08                 s0 = 0x8
 63446: 01                       fallthrough
      :                          @4944
 63447: 7b 13 68                 u64 [sp + 0x68] = t1
 63450: 7b 16 70                 u64 [sp + 0x70] = s1
 63453: 7b 13 78                 u64 [sp + 0x78] = t1
 63456: 49 21 80 00              u64 [sp + 128] = 0
 63460: 49 21 88 00 08           u64 [sp + 136] = 0x8
 63465: 49 21 90 00              u64 [sp + 144] = 0
 63469: 49 21 98 00              u64 [sp + 152] = 0
 63473: 49 21 a0 00              u64 [sp + 160] = 0
 63477: 49 21 a8 00 08           u64 [sp + 168] = 0x8
 63482: 49 21 b0 00              u64 [sp + 176] = 0
 63486: 51 03 21 01              jump @4977 if t1 == 0
      :                          @4945
 63490: 7b 16 20                 u64 [sp + 0x20] = s1
 63493: 33 06                    s1 = 0
 63495: 7b 15 18                 u64 [sp + 0x18] = s0
 63498: 28 0b                    jump @4947
      :                          @4946
 63500: 95 66 01                 s1 = s1 + 0x1
 63503: 95 55 10                 s0 = s0 + 0x10
 63506: aa 63 2f                 jump @4950 if t1 == s1
      :                          @4947
 63509: 82 57                    a0 = u64 [s0]
 63511: 52 07 f5                 jump @4946 if a0 != 0
      :                          @4948
 63514: 95 19 38                 a2 = sp + 0x38
 63517: 95 1a 50                 a3 = sp + 0x50
 63520: 95 1b 80 00              a4 = sp + 0x80
 63524: 95 1c 68                 a5 = sp + 0x68
 63527: 95 14 98 00              t2 = sp + 0x98
 63531: 95 17 a0 00              a0 = sp + 0xa0
 63535: 7b 17                    u64 [sp] = a0
 63537: 64 67                    a0 = s1
 63539: 82 18 28                 a1 = u64 [sp + 0x28]
 63542: 50 20 50 03 15 01        ra = 848, jump @4981
      :                          @4949 [@dyn 424]
 63548: 82 13 30                 t1 = u64 [sp + 0x30]
 63551: 28 cd                    jump @4946
      :                          @4950
 63553: 82 18 80 00              a1 = u64 [sp + 0x80]
 63557: 82 19 b0 00              a2 = u64 [sp + 0xb0]
 63561: 82 1a a8 00              a3 = u64 [sp + 0xa8]
 63565: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 63569: 82 17 88 00              a0 = u64 [sp + 0x88]
 63573: 82 1c 10                 a5 = u64 [sp + 0x10]
 63576: 7b c9 10                 u64 [a5 + 0x10] = a2
 63579: 7b ca 08                 u64 [a5 + 0x8] = a3
 63582: 7b cb                    u64 [a5] = a4
 63584: 51 08 2c                 jump @4957 if a1 == 0
      :                          @4951
 63587: 33 09 00 20              a2 = 0x2000
 63591: ac 89 25                 jump @4957 if a2 <u a1
      :                          @4952
 63594: 97 88 03                 a1 = a1 << 0x3
 63597: 33 09 c0 22 03           a2 = 0x322c0
 63602: 95 99 00 00 01           a2 = a2 + 0x10000
 63607: 01                       fallthrough
      :                          @4953
 63608: 82 9a                    a3 = u64 [a2]
 63610: c9 a9 0b                 a4 = a2 - a3
 63613: ab 7b 0f                 jump @4957 if a4 != a0
      :                          @4954
 63616: c9 8a 0b                 a4 = a3 - a1
 63619: 01                       fallthrough
      :                          @4955
 63620: 82 9c                    a5 = u64 [a2]
 63622: ab ac f2                 jump @4953 if a5 != a3
      :                          @4956
 63625: 7b 9b                    u64 [a2] = a4
 63627: 01                       fallthrough
      :                          @4957
 63628: 33 07 00 00 01           a0 = 0x10000
 63633: 33 08 01 00 01           a1 = 0x10001
 63638: 82 16 18                 s1 = u64 [sp + 0x18]
 63641: 82 15 08                 s0 = u64 [sp + 0x8]
 63644: ae 83 9b 00              jump @4978 if t1 >=u a1
      :                          @4958
 63648: 33 08 c0 22 03           a1 = 0x322c0
 63653: 95 87 00 00 01           a0 = a1 + 0x10000
 63658: 01                       fallthrough
      :                          @4959
 63659: 82 78                    a1 = u64 [a0]
 63661: c9 87 09                 a2 = a0 - a1
 63664: 82 1a 20                 a3 = u64 [sp + 0x20]
 63667: ab a9 11                 jump @4963 if a2 != a3
      :                          @4960
 63670: c9 38 09                 a2 = a1 - t1
 63673: 01                       fallthrough
      :                          @4961
 63674: 82 7a                    a3 = u64 [a0]
 63676: ab 8a ef                 jump @4959 if a3 != a1
      :                          @4962
 63679: 7b 79                    u64 [a0] = a2
 63681: 33 0b                    a4 = 0
 63683: 01                       fallthrough
      :                          @4963
 63684: 33 07 00 20              a0 = 0x2000
 63688: ac 37 6f                 jump @4978 if a0 <u t1
      :                          @4964
 63691: 97 37 03                 a0 = t1 << 0x3
 63694: 33 08 c0 22 03           a1 = 0x322c0
 63699: 95 88 00 00 01           a1 = a1 + 0x10000
 63704: 01                       fallthrough
      :                          @4965
 63705: 82 89                    a2 = u64 [a1]
 63707: c9 98 0a                 a3 = a1 - a2
 63710: ab 5a 11                 jump @4969 if a3 != s0
      :                          @4966
 63713: c9 79 0a                 a3 = a2 - a0
 63716: 01                       fallthrough
      :                          @4967
 63717: 82 8b                    a4 = u64 [a1]
 63719: ab 9b f2                 jump @4965 if a4 != a2
      :                          @4968
 63722: 7b 8a                    u64 [a1] = a3
 63724: 33 0c                    a5 = 0
 63726: 01                       fallthrough
      :                          @4969
 63727: 33 07 00 10              a0 = 0x1000
 63731: ac 37 44                 jump @4978 if a0 <u t1
      :                          @4970
 63734: 97 37 04                 a0 = t1 << 0x4
 63737: 33 08 c0 22 03           a1 = 0x322c0
 63742: 95 88 00 00 01           a1 = a1 + 0x10000
 63747: 01                       fallthrough
      :                          @4971
 63748: 82 89                    a2 = u64 [a1]
 63750: c9 98 0a                 a3 = a1 - a2
 63753: ab 6a 2e                 jump @4978 if a3 != s1
      :                          @4972
 63756: c9 79 0a                 a3 = a2 - a0
 63759: 01                       fallthrough
      :                          @4973
 63760: 82 8b                    a4 = u64 [a1]
 63762: ab 9b f2                 jump @4971 if a4 != a2
      :                          @4974
 63765: 7b 8a                    u64 [a1] = a3
 63767: 33 0c                    a5 = 0
 63769: 01                       fallthrough
      :                          @4975
 63770: ab 9b ea                 jump @4971 if a4 != a2
      :                          @4976
 63773: 28 1a                    jump @4978
      :                          @4977
 63775: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 63779: 82 18 a8 00              a1 = u64 [sp + 0xa8]
 63783: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 63787: 82 1a 10                 a3 = u64 [sp + 0x10]
 63790: 7b a7 10                 u64 [a3 + 0x10] = a0
 63793: 7b a8 08                 u64 [a3 + 0x8] = a1
 63796: 7b a9                    u64 [a3] = a2
 63798: 01                       fallthrough
      :                          @4978
 63799: 82 10 c8 00              ra = u64 [sp + 0xc8]
 63803: 82 15 c0 00              s0 = u64 [sp + 0xc0]
 63807: 82 16 b8 00              s1 = u64 [sp + 0xb8]
 63811: 95 11 d0 00              sp = sp + 0xd0
 63815: 32 00                    ret
      :                          @4979
 63817: 00                       trap
      :                          @4980
 63818: 00                       trap
      :                          @4981
 63819: 95 11 30 ff              sp = sp + 0xffffffffffffff30
 63823: 7b 10 c8 00              u64 [sp + 0xc8] = ra
 63827: 7b 15 c0 00              u64 [sp + 0xc0] = s0
 63831: 7b 16 b8 00              u64 [sp + 0xb8] = s1
 63835: 82 92 10                 t0 = u64 [a2 + 0x10]
 63838: 7b 18 50                 u64 [sp + 0x50] = a1
 63841: 64 75                    s0 = a0
 63843: ae 27 65 02              jump @5020 if a0 >=u t0
      :                          @4982
 63847: 82 96 08                 s1 = u64 [a2 + 0x8]
 63850: 82 47                    a0 = u64 [t2]
 63852: 97 58 04                 a1 = s0 << 0x4
 63855: 7b 16 48                 u64 [sp + 0x48] = s1
 63858: c8 86 06                 s1 = s1 + a1
 63861: 49 06 01                 u64 [s1 + 0] = 0x1
 63864: 7b 67 08                 u64 [s1 + 0x8] = a0
 63867: 82 a8 10                 a1 = u64 [a3 + 0x10]
 63870: 7b 18 20                 u64 [sp + 0x20] = a1
 63873: ae 85 48 02              jump @5021 if s0 >=u a1
      :                          @4983
 63877: 7b 16 08                 u64 [sp + 0x8] = s1
 63880: 82 a0 08                 ra = u64 [a3 + 0x8]
 63883: 97 58 03                 a1 = s0 << 0x3
 63886: c8 08 08                 a1 = a1 + ra
 63889: 7b 18 68                 u64 [sp + 0x68] = a1
 63892: 7b 87                    u64 [a1] = a0
 63894: 82 b8 10                 a1 = u64 [a4 + 0x10]
 63897: 82 b6                    s1 = u64 [a4]
 63899: 95 77 01                 a0 = a0 + 0x1
 63902: 7b 47                    u64 [t2] = a0
 63904: 7b 1b 70                 u64 [sp + 0x70] = a4
 63907: 7b 19 40                 u64 [sp + 0x40] = a2
 63910: 7b 14 18                 u64 [sp + 0x18] = t2
 63913: 7b 1c 38                 u64 [sp + 0x38] = a5
 63916: 7b 1a 30                 u64 [sp + 0x30] = a3
 63919: ab 68 28                 jump @4986 if a1 != s1
      :                          @4984
 63922: 64 b7                    a0 = a4
 63924: 64 26                    s1 = t0
 63926: 7b 10 98 00              u64 [sp + 0x98] = ra
 63930: 50 20 52 03 4d 59 ff     ra = 850, jump @1581
      :                          @4985 [@dyn 425]
 63937: 82 10 98 00              ra = u64 [sp + 0x98]
 63941: 82 1a 30                 a3 = u64 [sp + 0x30]
 63944: 82 1c 38                 a5 = u64 [sp + 0x38]
 63947: 82 19 40                 a2 = u64 [sp + 0x40]
 63950: 64 62                    t0 = s1
 63952: 82 1b 70                 a4 = u64 [sp + 0x70]
 63955: 82 b8 10                 a1 = u64 [a4 + 0x10]
 63958: 01                       fallthrough
      :                          @4986
 63959: 82 b6 08                 s1 = u64 [a4 + 0x8]
 63962: 97 87 03                 a0 = a1 << 0x3
 63965: c8 67 07                 a0 = a0 + s1
 63968: 7b 75                    u64 [a0] = s0
 63970: 82 c7 10                 a0 = u64 [a5 + 0x10]
 63973: 95 88 01                 a1 = a1 + 0x1
 63976: 7b b8 10                 u64 [a4 + 0x10] = a1
 63979: 7b 17 80 00              u64 [sp + 0x80] = a0
 63983: ae 75 d6 01              jump @5017 if s0 >=u a0
      :                          @4987
 63987: 82 c7 08                 a0 = u64 [a5 + 0x8]
 63990: 7b 15 58                 u64 [sp + 0x58] = s0
 63993: 7b 17 78                 u64 [sp + 0x78] = a0
 63996: c8 57 07                 a0 = a0 + s0
 63999: 46 07 01                 u8 [a0 + 0] = 0x1
 64002: 82 17 50                 a0 = u64 [sp + 0x50]
 64005: 82 73 10                 t1 = u64 [a0 + 0x10]
 64008: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 64012: 7b 17 28                 u64 [sp + 0x28] = a0
 64015: 51 03 ca 00              jump @5001 if t1 == 0
      :                          @4988
 64019: 82 17 58                 a0 = u64 [sp + 0x58]
 64022: ae 37 b4 01              jump @5022 if a0 >=u t1
      :                          @4989
 64026: 82 18 50                 a1 = u64 [sp + 0x50]
 64029: 82 85 08                 s0 = u64 [a1 + 0x8]
 64032: 33 06                    s1 = 0
 64034: 96 78 18                 a1 = a0 * 0x18
 64037: c8 85 07                 a0 = s0 + a1
 64040: 95 78 10                 a1 = a0 + 0x10
 64043: 7b 18 90 00              u64 [sp + 0x90] = a1
 64047: 95 77 08                 a0 = a0 + 0x8
 64050: 7b 17 88 00              u64 [sp + 0x88] = a0
 64054: 82 15 48                 s0 = u64 [sp + 0x48]
 64057: 7b 13 60                 u64 [sp + 0x60] = t1
 64060: 7b 12 10                 u64 [sp + 0x10] = t0
 64063: 28 50                    jump @4994
      :                          @4990
 64065: 82 17 28                 a0 = u64 [sp + 0x28]
 64068: 7b 17                    u64 [sp] = a0
 64070: 64 67                    a0 = s1
 64072: 82 18 50                 a1 = u64 [sp + 0x50]
 64075: 82 1b 70                 a4 = u64 [sp + 0x70]
 64078: 82 1c 38                 a5 = u64 [sp + 0x38]
 64081: 82 14 18                 t2 = u64 [sp + 0x18]
 64084: 50 20 54 03 f7 fe        ra = 852, jump @4981
      :                          @4991 [@dyn 426]
 64090: 82 1a 30                 a3 = u64 [sp + 0x30]
 64093: 82 19 40                 a2 = u64 [sp + 0x40]
 64096: 82 12 10                 t0 = u64 [sp + 0x10]
 64099: 82 1b 70                 a4 = u64 [sp + 0x70]
 64102: 82 10 98 00              ra = u64 [sp + 0x98]
 64106: 64 07                    a0 = ra
 64108: 82 18 20                 a1 = u64 [sp + 0x20]
 64111: ae 86 58 01              jump @5019 if s1 >=u a1
      :                          @4992
 64115: 82 18 68                 a1 = u64 [sp + 0x68]
 64118: 82 83                    t1 = u64 [a1]
 64120: 82 77                    a0 = u64 [a0]
 64122: e6 73 07                 a0 = minu(t1, a0)
 64125: 7b 87                    u64 [a1] = a0
 64127: 82 13 60                 t1 = u64 [sp + 0x60]
 64130: 01                       fallthrough
      :                          @4993
 64131: 95 66 01                 s1 = s1 + 0x1
 64134: 95 00 08                 ra = ra + 0x8
 64137: 95 55 10                 s0 = s0 + 0x10
 64140: aa 63 4d                 jump @5001 if t1 == s1
      :                          @4994
 64143: 82 17 90 00              a0 = u64 [sp + 0x90]
 64147: 82 78                    a1 = u64 [a0]
 64149: ae 86 2e 01              jump @5015 if s1 >=u a1
      :                          @4995
 64153: 82 17 88 00              a0 = u64 [sp + 0x88]
 64157: 82 77                    a0 = u64 [a0]
 64159: c8 67 07                 a0 = a0 + s1
 64162: 7c 77                    a0 = u8 [a0]
 64164: 51 07 df                 jump @4993 if a0 == 0
      :                          @4996
 64167: ae 26 1d 01              jump @5016 if s1 >=u t0
      :                          @4997
 64171: 7b 10 98 00              u64 [sp + 0x98] = ra
 64175: 82 57                    a0 = u64 [s0]
 64177: 51 07 90                 jump @4990 if a0 == 0
      :                          @4998
 64180: 82 17 80 00              a0 = u64 [sp + 0x80]
 64184: ae 76 0e 01              jump @5018 if s1 >=u a0
      :                          @4999
 64188: 82 17 78                 a0 = u64 [sp + 0x78]
 64191: c8 67 07                 a0 = a0 + s1
 64194: 7c 77                    a0 = u8 [a0]
 64196: 82 10 98 00              ra = u64 [sp + 0x98]
 64200: 51 07 bb                 jump @4993 if a0 == 0
      :                          @5000
 64203: 97 67 04                 a0 = s1 << 0x4
 64206: 82 18 48                 a1 = u64 [sp + 0x48]
 64209: c8 87 07                 a0 = a0 + a1
 64212: 95 77 08                 a0 = a0 + 0x8
 64215: 28 9c                    jump @4992
      :                          @5001
 64217: 82 18 08                 a1 = u64 [sp + 0x8]
 64220: 82 87                    a0 = u64 [a1]
 64222: 51 07 ed 00              jump @5023 if a0 == 0
      :                          @5002
 64226: 95 87 08                 a0 = a1 + 0x8
 64229: 82 18 68                 a1 = u64 [sp + 0x68]
 64232: 82 88                    a1 = u64 [a1]
 64234: 82 77                    a0 = u64 [a0]
 64236: ab 78 c5 00              jump @5014 if a1 != a0
      :                          @5003
 64240: 33 08                    a1 = 0
 64242: 49 21 a0 00              u64 [sp + 160] = 0
 64246: 33 07 08                 a0 = 0x8
 64249: 82 b6 10                 s1 = u64 [a4 + 0x10]
 64252: 82 b9 08                 a2 = u64 [a4 + 0x8]
 64255: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 64259: 49 21 b0 00              u64 [sp + 176] = 0
 64263: 97 6a 03                 a3 = s1 << 0x3
 64266: c8 a9 09                 a2 = a2 + a3
 64269: 95 9a f8                 a3 = a2 + 0xfffffffffffffff8
 64272: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 64275: 33 0c ff                 a5 = 0xffffffffffffffff
 64278: 28 1d                    jump @5005
      :                          @5004
 64280: 97 89 03                 a2 = a1 << 0x3
 64283: c8 79 09                 a2 = a2 + a0
 64286: 7b 95                    u64 [a2] = s0
 64288: 95 88 01                 a1 = a1 + 0x1
 64291: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 64295: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 64298: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 64301: 82 19 58                 a2 = u64 [sp + 0x58]
 64304: aa 95 45                 jump @5010 if s0 == a2
      :                          @5005
 64307: aa c6 42                 jump @5010 if s1 == a5
      :                          @5006
 64310: 7b b6 10                 u64 [a4 + 0x10] = s1
 64313: 82 a5                    s0 = u64 [a3]
 64315: 82 19 80 00              a2 = u64 [sp + 0x80]
 64319: ae 95 86 00              jump @5017 if s0 >=u a2
      :                          @5007
 64323: 82 19 78                 a2 = u64 [sp + 0x78]
 64326: c8 59 09                 a2 = a2 + s0
 64329: 46 09                    u8 [a2 + 0] = 0
 64331: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 64335: ab 98 c9                 jump @5004 if a1 != a2
      :                          @5008
 64338: 95 17 a0 00              a0 = sp + 0xa0
 64342: 7b 1a 98 00              u64 [sp + 0x98] = a3
 64346: 50 20 56 03 ad 57 ff     ra = 854, jump @1581
      :                          @5009 [@dyn 427]
 64353: 33 0c ff                 a5 = 0xffffffffffffffff
 64356: 82 1a 98 00              a3 = u64 [sp + 0x98]
 64360: 82 1b 70                 a4 = u64 [sp + 0x70]
 64363: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 64367: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 64371: 28 a5                    jump @5004
      :                          @5010
 64373: 82 15 28                 s0 = u64 [sp + 0x28]
 64376: 82 58 10                 a1 = u64 [s0 + 0x10]
 64379: 82 57                    a0 = u64 [s0]
 64381: ab 78 10                 jump @5013 if a1 != a0
      :                          @5011
 64384: 64 57                    a0 = s0
 64386: 50 20 58 03 03 57 ff     ra = 856, jump @1569
      :                          @5012 [@dyn 428]
 64393: 82 58 10                 a1 = u64 [s0 + 0x10]
 64396: 01                       fallthrough
      :                          @5013
 64397: 82 57 08                 a0 = u64 [s0 + 0x8]
 64400: 82 19 b0 00              a2 = u64 [sp + 0xb0]
 64404: 96 8a 18                 a3 = a1 * 0x18
 64407: c8 a7 07                 a0 = a0 + a3
 64410: 7b 79 10                 u64 [a0 + 0x10] = a2
 64413: 82 19 a8 00              a2 = u64 [sp + 0xa8]
 64417: 7b 79 08                 u64 [a0 + 0x8] = a2
 64420: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 64424: 7b 79                    u64 [a0] = a2
 64426: 95 88 01                 a1 = a1 + 0x1
 64429: 7b 58 10                 u64 [s0 + 0x10] = a1
 64432: 01                       fallthrough
      :                          @5014
 64433: 82 10 c8 00              ra = u64 [sp + 0xc8]
 64437: 82 15 c0 00              s0 = u64 [sp + 0xc0]
 64441: 82 16 b8 00              s1 = u64 [sp + 0xb8]
 64445: 95 11 d0 00              sp = sp + 0xd0
 64449: 32 00                    ret
      :                          @5015
 64451: 00                       trap
      :                          @5016
 64452: 00                       trap
      :                          @5017
 64453: 00                       trap
      :                          @5018
 64454: 00                       trap
      :                          @5019
 64455: 00                       trap
      :                          @5020
 64456: 00                       trap
      :                          @5021
 64457: 00                       trap
      :                          @5022
 64458: 00                       trap
      :                          @5023
 64459: 00                       trap
      :                          @5024
 64460: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 64464: 7b 10 88 00              u64 [sp + 0x88] = ra
 64468: 7b 15 80 00              u64 [sp + 0x80] = s0
 64472: 7b 16 78                 u64 [sp + 0x78] = s1
 64475: 82 7b 10                 a4 = u64 [a0 + 0x10]
 64478: 51 0b cc 01              jump @5060 if a4 == 0
      :                          @5025
 64482: 64 75                    s0 = a0
 64484: 82 77 08                 a0 = u64 [a0 + 0x8]
 64487: 82 76 10                 s1 = u64 [a0 + 0x10]
 64490: 97 69 04                 a2 = s1 << 0x4
 64493: 7b 19 08                 u64 [sp + 0x8] = a2
 64496: 51 06 2c 01              jump @5048 if s1 == 0
      :                          @5026
 64500: 7b 15 20                 u64 [sp + 0x20] = s0
 64503: 98 67 3b                 a0 = s1 >> 0x3b
 64506: 52 07 b2 01              jump @5062 if a0 != 0
      :                          @5027
 64510: 7b 1b 40                 u64 [sp + 0x40] = a4
 64513: 88 72 01                 t0 = a0 <u 0x1
 64516: 97 22 03                 t0 = t0 << 0x3
 64519: 33 04 c0 22 03           t2 = 0x322c0
 64524: 33 03 00 00 01           t1 = 0x10000
 64529: c8 34 00                 ra = t2 + t1
 64532: 01                       fallthrough
      :                          @5028
 64533: 82 0b                    a4 = u64 [ra]
 64535: c8 9b 0c                 a5 = a4 + a2
 64538: ac bc 91 01              jump @5061 if a5 <u a4
      :                          @5029
 64542: c8 2c 07                 a0 = a5 + t0
 64545: d8 c7 05                 s0 = a0 <u a5
 64548: d8 73 07                 a0 = t1 <u a0
 64551: d4 57 07                 a0 = a0 | s0
 64554: 52 07 81 01              jump @5061 if a0 != 0
      :                          @5030
 64558: c9 c4 05                 s0 = t2 - a5
 64561: c8 35 0a                 a3 = s0 + t1
 64564: 84 a5 07                 s0 = a3 & 0x7
 64567: c8 5c 0c                 a5 = a5 + s0
 64570: 01                       fallthrough
      :                          @5031
 64571: 82 07                    a0 = u64 [ra]
 64573: ab b7 d8                 jump @5028 if a0 != a4
      :                          @5032
 64576: 7b 0c                    u64 [ra] = a5
 64578: c9 5a 05                 s0 = a3 - s0
 64581: 64 57                    a0 = s0
 64583: 33 08                    a1 = 0
 64585: 50 20 5a 03 10 0f 02     ra = 858, jump @13675
      :                          @5033 [@dyn 429]
 64592: 33 03                    t1 = 0
 64594: 7b 16 48                 u64 [sp + 0x48] = s1
 64597: 7b 15                    u64 [sp] = s0
 64599: 7b 15 50                 u64 [sp + 0x50] = s0
 64602: 7b 16 58                 u64 [sp + 0x58] = s1
 64605: 33 07 01                 a0 = 0x1
 64608: 82 18 40                 a1 = u64 [sp + 0x40]
 64611: e4 78 07                 a0 = maxu(a1, a0)
 64614: 7b 17 18                 u64 [sp + 0x18] = a0
 64617: 33 05 c0 22 03           s0 = 0x322c0
 64622: 33 0c 00 00 01           a5 = 0x10000
 64627: 7b 15 10                 u64 [sp + 0x10] = s0
 64630: c8 c5 05                 s0 = s0 + a5
 64633: 33 0b                    a4 = 0
 64635: 33 02 01                 t0 = 0x1
 64638: 28 18                    jump @5036
      :                          @5034
 64640: 82 13 40                 t1 = u64 [sp + 0x40]
 64643: c8 73 03                 t1 = t1 + a0
 64646: 82 19 30                 a2 = u64 [sp + 0x30]
 64649: 82 17 18                 a0 = u64 [sp + 0x18]
 64652: aa 79 dc 00              jump @5051 if a2 == a0
      :                          @5035
 64656: 64 9b                    a4 = a2
 64658: 95 92 01                 t0 = a2 + 0x1
 64661: 01                       fallthrough
      :                          @5036
 64662: 82 58                    a1 = u64 [s0]
 64664: c8 68 07                 a0 = a1 + s1
 64667: ac 87 0e 01              jump @5059 if a0 <u a1
      :                          @5037
 64671: 95 79 01                 a2 = a0 + 0x1
 64674: 88 9a 01                 a3 = a2 <u 0x1
 64677: d8 9c 09                 a2 = a5 <u a2
 64680: d4 a9 09                 a2 = a2 | a3
 64683: 52 09 fe 00              jump @5059 if a2 != 0
      :                          @5038
 64687: 82 59                    a2 = u64 [s0]
 64689: ab 89 e5                 jump @5036 if a2 != a1
      :                          @5039
 64692: 7b 57                    u64 [s0] = a0
 64694: 7b 12 30                 u64 [sp + 0x30] = t0
 64697: 7b 13 40                 u64 [sp + 0x40] = t1
 64700: 82 18 10                 a1 = u64 [sp + 0x10]
 64703: c9 78 07                 a0 = a1 - a0
 64706: c8 c7 07                 a0 = a0 + a5
 64709: 7b 17 38                 u64 [sp + 0x38] = a0
 64712: 33 08                    a1 = 0
 64714: 64 69                    a2 = s1
 64716: 7b 1b 28                 u64 [sp + 0x28] = a4
 64719: 50 20 5c 03 8a 0e 02     ra = 860, jump @13675
      :                          @5040 [@dyn 430]
 64726: 7b 16 60                 u64 [sp + 0x60] = s1
 64729: 82 17 38                 a0 = u64 [sp + 0x38]
 64732: 7b 17 68                 u64 [sp + 0x68] = a0
 64735: 7b 16 70                 u64 [sp + 0x70] = s1
 64738: 95 19 60                 a2 = sp + 0x60
 64741: 95 1a 48                 a3 = sp + 0x48
 64744: 82 17 28                 a0 = u64 [sp + 0x28]
 64747: 82 18 20                 a1 = u64 [sp + 0x20]
 64750: 50 20 5e 03 bf 00        ra = 862, jump @5063
      :                          @5041 [@dyn 431]
 64756: 82 12 38                 t0 = u64 [sp + 0x38]
 64759: 33 0c 00 00 01           a5 = 0x10000
 64764: ac 6c 84                 jump @5034 if a5 <u s1
      :                          @5042
 64767: 82 58                    a1 = u64 [s0]
 64769: c9 85 09                 a2 = s0 - a1
 64772: ab 29 7c ff              jump @5034 if a2 != t0
      :                          @5043
 64776: c9 68 09                 a2 = a1 - s1
 64779: 01                       fallthrough
      :                          @5044
 64780: 82 5a                    a3 = u64 [s0]
 64782: ab 8a f1                 jump @5042 if a3 != a1
      :                          @5045
 64785: 7b 59                    u64 [s0] = a2
 64787: 33 0b                    a4 = 0
 64789: 01                       fallthrough
      :                          @5046
 64790: ab 8a e9                 jump @5042 if a3 != a1
      :                          @5047
 64793: 28 67 ff                 jump @5034
      :                          @5048
 64796: 33 03                    t1 = 0
 64798: 33 07                    a0 = 0
 64800: 49 11 48                 u64 [sp + 72] = 0
 64803: 49 01 08                 u64 [sp + 0] = 0x8
 64806: 49 11 50 08              u64 [sp + 80] = 0x8
 64810: 49 11 58                 u64 [sp + 88] = 0
 64813: 33 09 01                 a2 = 0x1
 64816: e4 9b 09                 a2 = maxu(a4, a2)
 64819: 7b 19 30                 u64 [sp + 0x30] = a2
 64822: 01                       fallthrough
      :                          @5049
 64823: 7b 13 40                 u64 [sp + 0x40] = t1
 64826: 95 79 01                 a2 = a0 + 0x1
 64829: 7b 19 38                 u64 [sp + 0x38] = a2
 64832: 49 11 60                 u64 [sp + 96] = 0
 64835: 49 11 68 01              u64 [sp + 104] = 0x1
 64839: 49 11 70                 u64 [sp + 112] = 0
 64842: 95 19 60                 a2 = sp + 0x60
 64845: 95 1a 48                 a3 = sp + 0x48
 64848: 64 58                    a1 = s0
 64850: 50 20 60 03 5b           ra = 864, jump @5063
      :                          @5050 [@dyn 432]
 64855: 82 13 40                 t1 = u64 [sp + 0x40]
 64858: c8 73 03                 t1 = t1 + a0
 64861: 82 1a 38                 a3 = u64 [sp + 0x38]
 64864: 64 a7                    a0 = a3
 64866: 82 19 30                 a2 = u64 [sp + 0x30]
 64869: ab a9 d2                 jump @5049 if a2 != a3
      :                          @5051
 64872: 82 12 08                 t0 = u64 [sp + 0x8]
 64875: 82 15                    s0 = u64 [sp]
 64877: 51 06 29                 jump @5058 if s1 == 0
      :                          @5052
 64880: 56 26 00 10 26           jump @5058 if s1 >u 4096
      :                          @5053
 64885: 33 07 c0 22 03           a0 = 0x322c0
 64890: 95 77 00 00 01           a0 = a0 + 0x10000
 64895: 01                       fallthrough
      :                          @5054
 64896: 82 78                    a1 = u64 [a0]
 64898: c9 87 09                 a2 = a0 - a1
 64901: ab 59 11                 jump @5058 if a2 != s0
      :                          @5055
 64904: c9 28 09                 a2 = a1 - t0
 64907: 01                       fallthrough
      :                          @5056
 64908: 82 7a                    a3 = u64 [a0]
 64910: ab 8a f2                 jump @5054 if a3 != a1
      :                          @5057
 64913: 7b 79                    u64 [a0] = a2
 64915: 33 0b                    a4 = 0
 64917: 01                       fallthrough
      :                          @5058
 64918: 64 37                    a0 = t1
 64920: 82 10 88 00              ra = u64 [sp + 0x88]
 64924: 82 15 80 00              s0 = u64 [sp + 0x80]
 64928: 82 16 78                 s1 = u64 [sp + 0x78]
 64931: 95 11 90 00              sp = sp + 0x90
 64935: 32 00                    ret
      :                          @5059
 64937: 00                       trap
      :                          @5060
 64938: 00                       trap
      :                          @5061
 64939: 00                       trap
      :                          @5062
 64940: 00                       trap
      :                          @5063
 64941: 95 11 88                 sp = sp + 0xffffffffffffff88
 64944: 7b 10 70                 u64 [sp + 0x70] = ra
 64947: 7b 15 68                 u64 [sp + 0x68] = s0
 64950: 7b 16 60                 u64 [sp + 0x60] = s1
 64953: 64 82                    t0 = a1
 64955: 82 88 10                 a1 = u64 [a1 + 0x10]
 64958: 7b 1a 50                 u64 [sp + 0x50] = a3
 64961: 7b 19 48                 u64 [sp + 0x48] = a2
 64964: 51 08 dd 00              jump @5082 if a1 == 0
      :                          @5064
 64968: 82 29 08                 a2 = u64 [t0 + 0x8]
 64971: 82 9a 10                 a3 = u64 [a2 + 0x10]
 64974: 51 0a bc 00              jump @5077 if a3 == 0
      :                          @5065
 64978: ae 87 d0 00              jump @5083 if a0 >=u a1
      :                          @5066
 64982: 33 05                    s0 = 0
 64984: 7b 17 08                 u64 [sp + 0x8] = a0
 64987: 96 78 18                 a1 = a0 * 0x18
 64990: c8 89 07                 a0 = a2 + a1
 64993: 95 7b 10                 a4 = a0 + 0x10
 64996: 82 19 48                 a2 = u64 [sp + 0x48]
 64999: 82 93 10                 t1 = u64 [a2 + 0x10]
 65002: 82 18 50                 a1 = u64 [sp + 0x50]
 65005: 82 86 08                 s1 = u64 [a1 + 0x8]
 65008: 82 94 08                 t2 = u64 [a2 + 0x8]
 65011: 82 88 10                 a1 = u64 [a1 + 0x10]
 65014: 7b 18 40                 u64 [sp + 0x40] = a1
 65017: 95 7c 08                 a5 = a0 + 0x8
 65020: 7b 16                    u64 [sp] = s1
 65022: 33 09 01                 a2 = 0x1
 65025: 7b 12 38                 u64 [sp + 0x38] = t0
 65028: 7b 1a 30                 u64 [sp + 0x30] = a3
 65031: 7b 13 28                 u64 [sp + 0x28] = t1
 65034: 7b 1b 20                 u64 [sp + 0x20] = a4
 65037: 7b 14 18                 u64 [sp + 0x18] = t2
 65040: 7b 1c 10                 u64 [sp + 0x10] = a5
 65043: 28 0e                    jump @5068
      :                          @5067
 65045: 95 55 01                 s0 = s0 + 0x1
 65048: d8 a5 09                 a2 = s0 <u a3
 65051: 95 66 10                 s1 = s1 + 0x10
 65054: aa 5a 6f                 jump @5078 if a3 == s0
      :                          @5068
 65057: 82 b8                    a1 = u64 [a4]
 65059: ae 85 7b                 jump @5079 if s0 >=u a1
      :                          @5069
 65062: 82 c7                    a0 = u64 [a5]
 65064: c8 57 07                 a0 = a0 + s0
 65067: 7c 77                    a0 = u8 [a0]
 65069: 51 07 e8                 jump @5067 if a0 == 0
      :                          @5070
 65072: ae 35 6f                 jump @5080 if s0 >=u t1
      :                          @5071
 65075: c8 54 07                 a0 = t2 + s0
 65078: 7c 78                    a1 = u8 [a0]
 65080: 52 08 dd                 jump @5067 if a1 != 0
      :                          @5072
 65083: 33 08 01                 a1 = 0x1
 65086: 78 78                    u8 [a0] = a1
 65088: 82 17 40                 a0 = u64 [sp + 0x40]
 65091: ae 75 5d                 jump @5081 if s0 >=u a0
      :                          @5073
 65094: 82 67                    a0 = u64 [s1]
 65096: 51 07 2f                 jump @5076 if a0 == 0
      :                          @5074
 65099: 82 67 08                 a0 = u64 [s1 + 0x8]
 65102: 64 28                    a1 = t0
 65104: 7b 19 58                 u64 [sp + 0x58] = a2
 65107: 82 19 48                 a2 = u64 [sp + 0x48]
 65110: 82 1a 50                 a3 = u64 [sp + 0x50]
 65113: 50 20 62 03 54 ff        ra = 866, jump @5063
      :                          @5075 [@dyn 433]
 65119: 82 1c 10                 a5 = u64 [sp + 0x10]
 65122: 82 14 18                 t2 = u64 [sp + 0x18]
 65125: 82 1b 20                 a4 = u64 [sp + 0x20]
 65128: 82 13 28                 t1 = u64 [sp + 0x28]
 65131: 82 19 58                 a2 = u64 [sp + 0x58]
 65134: 82 1a 30                 a3 = u64 [sp + 0x30]
 65137: 82 12 38                 t0 = u64 [sp + 0x38]
 65140: 51 07 a1                 jump @5067 if a0 == 0
      :                          @5076
 65143: 49 06 01                 u64 [s1 + 0] = 0x1
 65146: 97 55 04                 s0 = s0 << 0x4
 65149: 82 17                    a0 = u64 [sp]
 65151: c8 75 05                 s0 = s0 + a0
 65154: 82 17 08                 a0 = u64 [sp + 0x8]
 65157: 7b 57 08                 u64 [s0 + 0x8] = a0
 65160: 28 05                    jump @5078
      :                          @5077
 65162: 33 09                    a2 = 0
 65164: 01                       fallthrough
      :                          @5078
 65165: 84 97 01                 a0 = a2 & 0x1
 65168: 82 10 70                 ra = u64 [sp + 0x70]
 65171: 82 15 68                 s0 = u64 [sp + 0x68]
 65174: 82 16 60                 s1 = u64 [sp + 0x60]
 65177: 95 11 78                 sp = sp + 0x78
 65180: 32 00                    ret
      :                          @5079
 65182: 00                       trap
      :                          @5080
 65183: 00                       trap
      :                          @5081
 65184: 00                       trap
      :                          @5082
 65185: 00                       trap
      :                          @5083
 65186: 00                       trap
      :                          @5084
 65187: 95 11 48 ff              sp = sp + 0xffffffffffffff48
 65191: 7b 10 b0 00              u64 [sp + 0xb0] = ra
 65195: 7b 15 a8 00              u64 [sp + 0xa8] = s0
 65199: 49 21 a0 00 0a           u64 [sp + 160] = 0xa
 65204: 64 74                    t2 = a0
 65206: 82 78 10                 a1 = u64 [a0 + 0x10]
 65209: 51 08 98 04              jump @5180 if a1 == 0
      :                          @5085
 65213: 98 87 3c                 a0 = a1 >> 0x3c
 65216: 52 07 8a 05              jump @5221 if a0 != 0
      :                          @5086
 65220: 88 72 01                 t0 = a0 <u 0x1
 65223: 7b 18 38                 u64 [sp + 0x38] = a1
 65226: 97 87 03                 a0 = a1 << 0x3
 65229: 97 22 03                 t0 = t0 << 0x3
 65232: 33 00 c0 22 03           ra = 0x322c0
 65237: 33 03 00 00 01           t1 = 0x10000
 65242: c8 30 0a                 a3 = ra + t1
 65245: 01                       fallthrough
      :                          @5087
 65246: 82 ab                    a4 = u64 [a3]
 65248: c8 7b 0c                 a5 = a4 + a0
 65251: ac bc 62 05              jump @5216 if a5 <u a4
      :                          @5088
 65255: c8 2c 09                 a2 = a5 + t0
 65258: d8 c9 06                 s1 = a2 <u a5
 65261: d8 93 09                 a2 = t1 <u a2
 65264: d4 69 09                 a2 = a2 | s1
 65267: 52 09 52 05              jump @5216 if a2 != 0
      :                          @5089
 65271: c9 c0 06                 s1 = ra - a5
 65274: c8 36 06                 s1 = s1 + t1
 65277: 84 69 07                 a2 = s1 & 0x7
 65280: c8 9c 0c                 a5 = a5 + a2
 65283: 01                       fallthrough
      :                          @5090
 65284: 82 a8                    a1 = u64 [a3]
 65286: ab b8 d8                 jump @5087 if a1 != a4
      :                          @5091
 65289: 7b ac                    u64 [a3] = a5
 65291: 33 05                    s0 = 0
 65293: c9 96 06                 s1 = s1 - a2
 65296: 33 08                    a1 = 0
 65298: 64 6a                    a3 = s1
 65300: 82 1b 38                 a4 = u64 [sp + 0x38]
 65303: 01                       fallthrough
      :                          @5092
 65304: 95 89 01                 a2 = a1 + 0x1
 65307: 7b a8                    u64 [a3] = a1
 65309: 95 aa 08                 a3 = a3 + 0x8
 65312: 64 98                    a1 = a2
 65314: ab 9b f6                 jump @5092 if a4 != a2
      :                          @5093
 65317: 7b 16 20                 u64 [sp + 0x20] = s1
 65320: 7b 17 10                 u64 [sp + 0x10] = a0
 65323: 53 1b 02 2f 04           jump @5181 if a4 <u 2
      :                          @5094
 65328: 82 40 08                 ra = u64 [t2 + 0x8]
 65331: 95 07 10                 a0 = ra + 0x10
 65334: 7b 17 08                 u64 [sp + 0x8] = a0
 65337: 33 03 ff                 t1 = 0xffffffffffffffff
 65340: 33 07 c0 22 03           a0 = 0x322c0
 65345: 7b 17 30                 u64 [sp + 0x30] = a0
 65348: 95 77 00 00 01           a0 = a0 + 0x10000
 65353: 7b 17 40                 u64 [sp + 0x40] = a0
 65356: 7b 1b 70                 u64 [sp + 0x70] = a4
 65359: 7b 1b 68                 u64 [sp + 0x68] = a4
 65362: 64 b6                    s1 = a4
 65364: 7b 1b 78                 u64 [sp + 0x78] = a4
 65367: 7b 14 18                 u64 [sp + 0x18] = t2
 65370: 7b 10 28                 u64 [sp + 0x28] = ra
 65373: 28 0a                    jump @5096
      :                          @5095
 65375: 82 18 68                 a1 = u64 [sp + 0x68]
 65378: 54 18 01 cf 04           jump @5210 if a1 <=u 1
      :                          @5096
 65383: 64 65                    s0 = s1
 65385: 7b 16 98 00              u64 [sp + 0x98] = s1
 65389: 7b 13 48                 u64 [sp + 0x48] = t1
 65392: 51 06 bc 00              jump @5111 if s1 == 0
      :                          @5097
 65396: 57 05 d6 04              jump @5221 if s0 <s 0
      :                          @5098
 65400: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
 65403: 98 77 3f                 a0 = a0 >> 0x3f
 65406: 33 0c 00 00 01           a5 = 0x10000
 65411: 82 16 40                 s1 = u64 [sp + 0x40]
 65414: 01                       fallthrough
      :                          @5099
 65415: 82 69                    a2 = u64 [s1]
 65417: c8 59 08                 a1 = a2 + s0
 65420: ac 98 ba 04              jump @5217 if a1 <u a2
      :                          @5100
 65424: c8 78 0a                 a3 = a1 + a0
 65427: d8 8a 0b                 a4 = a3 <u a1
 65430: d8 ac 0a                 a3 = a5 <u a3
 65433: d4 ba 0a                 a3 = a3 | a4
 65436: 52 0a aa 04              jump @5217 if a3 != 0
      :                          @5101
 65440: 82 6a                    a3 = u64 [s1]
 65442: ab 9a e5                 jump @5099 if a3 != a2
      :                          @5102
 65445: 7b 68                    u64 [s1] = a1
 65447: 33 0b                    a4 = 0
 65449: 82 16 30                 s1 = u64 [sp + 0x30]
 65452: c9 86 06                 s1 = s1 - a1
 65455: c8 c6 07                 a0 = s1 + a5
 65458: 7b 17 90 00              u64 [sp + 0x90] = a0
 65462: 33 08                    a1 = 0
 65464: 64 59                    a2 = s0
 65466: 50 20 64 03 9f 0b 02     ra = 868, jump @13675
      :                          @5103 [@dyn 434]
 65473: 98 57 3c                 a0 = s0 >> 0x3c
 65476: 52 07 86 04              jump @5221 if a0 != 0
      :                          @5104
 65480: 88 77 01                 a0 = a0 <u 0x1
 65483: 97 59 03                 a2 = s0 << 0x3
 65486: 97 72 03                 t0 = a0 << 0x3
 65489: 82 14 30                 t2 = u64 [sp + 0x30]
 65492: 33 03 00 00 01           t1 = 0x10000
 65497: 82 15 40                 s0 = u64 [sp + 0x40]
 65500: 01                       fallthrough
      :                          @5105
 65501: 82 58                    a1 = u64 [s0]
 65503: c8 98 0a                 a3 = a1 + a2
 65506: ac 8a 65 04              jump @5218 if a3 <u a1
      :                          @5106
 65510: c8 2a 0b                 a4 = a3 + t0
 65513: d8 ab 0c                 a5 = a4 <u a3
 65516: d8 b3 0b                 a4 = t1 <u a4
 65519: d4 cb 0b                 a4 = a4 | a5
 65522: 52 0b 55 04              jump @5218 if a4 != 0
      :                          @5107
 65526: c9 a4 0b                 a4 = t2 - a3
 65529: c8 3b 0b                 a4 = a4 + t1
 65532: 84 bc 07                 a5 = a4 & 0x7
 65535: c8 ca 0a                 a3 = a3 + a5
 65538: 01                       fallthrough
      :                          @5108
 65539: 82 57                    a0 = u64 [s0]
 65541: ab 87 d8                 jump @5105 if a0 != a1
      :                          @5109
 65544: 7b 5a                    u64 [s0] = a3
 65546: 33 06                    s1 = 0
 65548: c9 cb 07                 a0 = a4 - a5
 65551: 7b 17 88 00              u64 [sp + 0x88] = a0
 65555: 33 08                    a1 = 0
 65557: 50 20 66 03 44 0b 02     ra = 870, jump @13675
      :                          @5110 [@dyn 435]
 65564: 82 14 18                 t2 = u64 [sp + 0x18]
 65567: 82 10 28                 ra = u64 [sp + 0x28]
 65570: 82 15 98 00              s0 = u64 [sp + 0x98]
 65574: 82 12 90 00              t0 = u64 [sp + 0x90]
 65578: 28 0b                    jump @5112
      :                          @5111
 65580: 49 21 88 00 08           u64 [sp + 136] = 0x8
 65585: 33 02 01                 t0 = 0x1
 65588: 01                       fallthrough
      :                          @5112
 65589: 49 21 80 00              u64 [sp + 128] = 0
 65593: 33 03                    t1 = 0
 65595: 82 18 68                 a1 = u64 [sp + 0x68]
 65598: 95 87 ff                 a0 = a1 + 0xffffffffffffffff
 65601: 7b 17 60                 u64 [sp + 0x60] = a0
 65604: 33 07 01                 a0 = 0x1
 65607: e4 78 0a                 a3 = maxu(a1, a0)
 65610: 7b 12 90 00              u64 [sp + 0x90] = t0
 65614: 28 06                    jump @5114
      :                          @5113
 65616: aa a3 8d 02              jump @5163 if t1 == a3
      :                          @5114
 65620: 33 09                    a2 = 0
 65622: 33 06                    s1 = 0
 65624: 64 32                    t0 = t1
 65626: 82 17 80 00              a0 = u64 [sp + 0x80]
 65630: 95 33 01                 t1 = t1 + 0x1
 65633: 82 1c 88 00              a5 = u64 [sp + 0x88]
 65637: 28 17                    jump @5117
      :                          @5115
 65639: 33 09 01                 a2 = 0x1
 65642: 7b 16 80 00              u64 [sp + 0x80] = s1
 65646: 01                       fallthrough
      :                          @5116
 65647: 95 66 01                 s1 = s1 + 0x1
 65650: 95 cc 08                 a5 = a5 + 0x8
 65653: 82 15 98 00              s0 = u64 [sp + 0x98]
 65657: aa 6a 39                 jump @5123 if a3 == s1
      :                          @5117
 65660: aa 65 6c 03              jump @5200 if s0 == s1
      :                          @5118
 65664: 82 1b 90 00              a4 = u64 [sp + 0x90]
 65668: c8 6b 0b                 a4 = a4 + s1
 65671: 7c bb                    a4 = u8 [a4]
 65673: 52 0b e6                 jump @5116 if a4 != 0
      :                          @5119
 65676: 52 19 01 db              jump @5115 if a2 != 1
      :                          @5120
 65680: 82 18 98 00              a1 = u64 [sp + 0x98]
 65684: 82 19 80 00              a2 = u64 [sp + 0x80]
 65688: ae 89 ac 03              jump @5215 if a2 >=u a1
      :                          @5121
 65692: 82 cb                    a4 = u64 [a5]
 65694: 97 99 03                 a2 = a2 << 0x3
 65697: 82 18 88 00              a1 = u64 [sp + 0x88]
 65701: c8 89 09                 a2 = a2 + a1
 65704: 82 95                    s0 = u64 [a2]
 65706: 33 09 01                 a2 = 0x1
 65709: ac b5 ba                 jump @5115 if s0 <u a4
      :                          @5122
 65712: 28 bf                    jump @5116
      :                          @5123
 65714: 51 09 96 03              jump @5219 if a2 == 0
      :                          @5124
 65718: 82 18 80 00              a1 = u64 [sp + 0x80]
 65722: ae 58 83 03              jump @5212 if a1 >=u s0
      :                          @5125
 65726: 82 1c 90 00              a5 = u64 [sp + 0x90]
 65730: 64 86                    s1 = a1
 65732: c8 8c 09                 a2 = a5 + a1
 65735: 46 09 01                 u8 [a2 + 0] = 0x1
 65738: 82 18 60                 a1 = u64 [sp + 0x60]
 65741: aa 82 78                 jump @5138 if t0 == a1
      :                          @5126
 65744: 64 a7                    a0 = a3
 65746: 64 58                    a1 = s0
 65748: 64 c9                    a2 = a5
 65750: 82 1b 78                 a4 = u64 [sp + 0x78]
 65753: 64 c2                    t0 = a5
 65755: ae b6 51                 jump @5134 if s1 >=u a4
      :                          @5127
 65758: 33 09                    a2 = 0
 65760: 33 07                    a0 = 0
 65762: 82 1b 80 00              a4 = u64 [sp + 0x80]
 65766: 96 b8 18                 a1 = a4 * 0x18
 65769: c8 08 08                 a1 = a1 + ra
 65772: 95 8b 10                 a4 = a1 + 0x10
 65775: 95 8c 08                 a5 = a1 + 0x8
 65778: 28 26                    jump @5130
      :                          @5128
 65780: 82 c8                    a1 = u64 [a5]
 65782: 82 16 88 00              s1 = u64 [sp + 0x88]
 65786: c8 96 06                 s1 = s1 + a2
 65789: 82 65                    s0 = u64 [s1]
 65791: c8 98 08                 a1 = a1 + a2
 65794: 82 88                    a1 = u64 [a1]
 65796: c8 58 08                 a1 = a1 + s0
 65799: 82 15 98 00              s0 = u64 [sp + 0x98]
 65803: 7b 68                    u64 [s1] = a1
 65805: 01                       fallthrough
      :                          @5129
 65806: 95 77 01                 a0 = a0 + 0x1
 65809: 95 99 08                 a2 = a2 + 0x8
 65812: aa 7a 3c ff              jump @5113 if a3 == a0
      :                          @5130
 65816: aa 75 d0 02              jump @5200 if s0 == a0
      :                          @5131
 65820: c8 72 08                 a1 = t0 + a0
 65823: 7c 88                    a1 = u8 [a1]
 65825: 52 08 ed                 jump @5129 if a1 != 0
      :                          @5132
 65828: 82 b8                    a1 = u64 [a4]
 65830: ac 87 ce                 jump @5128 if a0 <u a1
      :                          @5133
 65833: 28 23 03                 jump @5223
      :                          @5134
 65836: 51 08 bc 02              jump @5200 if a1 == 0
      :                          @5135
 65840: 7c 9b                    a4 = u8 [a2]
 65842: 51 0b 19 03              jump @5222 if a4 == 0
      :                          @5136
 65846: 95 99 01                 a2 = a2 + 0x1
 65849: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 65852: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 65855: 52 07 ed                 jump @5134 if a0 != 0
      :                          @5137
 65858: 28 0e ff                 jump @5113
      :                          @5138
 65861: 82 18 78                 a1 = u64 [sp + 0x78]
 65864: ae 87 04 03              jump @5223 if a0 >=u a1
      :                          @5139
 65868: 96 70 18                 ra = a0 * 0x18
 65871: 82 1b 28                 a4 = u64 [sp + 0x28]
 65874: c8 b0 00                 ra = ra + a4
 65877: 95 02 10                 t0 = ra + 0x10
 65880: 82 15 48                 s0 = u64 [sp + 0x48]
 65883: 82 19 80 00              a2 = u64 [sp + 0x80]
 65887: ae 89 e0 02              jump @5214 if a2 >=u a1
      :                          @5140
 65891: 97 9c 03                 a5 = a2 << 0x3
 65894: 82 18 88 00              a1 = u64 [sp + 0x88]
 65898: 7b 1c 58                 u64 [sp + 0x58] = a5
 65901: c8 c8 08                 a1 = a1 + a5
 65904: 82 88                    a1 = u64 [a1]
 65906: 33 0c                    a5 = 0
 65908: 64 96                    s1 = a2
 65910: 33 09                    a2 = 0
 65912: e6 85 05                 s0 = minu(s0, a1)
 65915: 7b 15 48                 u64 [sp + 0x48] = s0
 65918: 95 00 08                 ra = ra + 0x8
 65921: 96 68 18                 a1 = s1 * 0x18
 65924: c8 b8 08                 a1 = a1 + a4
 65927: 95 83 10                 t1 = a1 + 0x10
 65930: 7b 18 70                 u64 [sp + 0x70] = a1
 65933: 95 84 08                 t2 = a1 + 0x8
 65936: 82 1b 08                 a4 = u64 [sp + 0x8]
 65939: 01                       fallthrough
      :                          @5141
 65940: 82 28                    a1 = u64 [t0]
 65942: ae 89 ae 02              jump @5215 if a2 >=u a1
      :                          @5142
 65946: 82 38                    a1 = u64 [t1]
 65948: ae 89 a8 02              jump @5215 if a2 >=u a1
      :                          @5143
 65952: 82 08                    a1 = u64 [ra]
 65954: 82 45                    s0 = u64 [t2]
 65956: c8 c8 08                 a1 = a1 + a5
 65959: 82 86                    s1 = u64 [a1]
 65961: c8 c5 05                 s0 = s0 + a5
 65964: 82 55                    s0 = u64 [s0]
 65966: c8 65 05                 s0 = s0 + s1
 65969: 7b 85                    u64 [a1] = s0
 65971: 82 28                    a1 = u64 [t0]
 65973: ae 89 8f 02              jump @5215 if a2 >=u a1
      :                          @5144
 65977: 82 18 78                 a1 = u64 [sp + 0x78]
 65980: aa 98 82 02              jump @5213 if a1 == a2
      :                          @5145
 65984: 82 b8                    a1 = u64 [a4]
 65986: ae 87 8a 02              jump @5223 if a0 >=u a1
      :                          @5146
 65990: 82 08                    a1 = u64 [ra]
 65992: c8 c8 08                 a1 = a1 + a5
 65995: 82 b5 f8                 s0 = u64 [a4 + 0xfffffffffffffff8]
 65998: 82 88                    a1 = u64 [a1]
 66000: 95 99 01                 a2 = a2 + 0x1
 66003: 97 76 03                 s1 = a0 << 0x3
 66006: c8 65 05                 s0 = s0 + s1
 66009: 7b 58                    u64 [s0] = a1
 66011: 95 bb 18                 a4 = a4 + 0x18
 66014: 95 cc 08                 a5 = a5 + 0x8
 66017: 82 15 98 00              s0 = u64 [sp + 0x98]
 66021: ab 9a af                 jump @5141 if a3 != a2
      :                          @5147
 66024: 82 17 20                 a0 = u64 [sp + 0x20]
 66027: 82 18 58                 a1 = u64 [sp + 0x58]
 66030: c8 87 07                 a0 = a0 + a1
 66033: 95 78 08                 a1 = a0 + 0x8
 66036: 82 19 80 00              a2 = u64 [sp + 0x80]
 66040: 85 96 ff                 s1 = a2 ^ 0xffffffffffffffff
 66043: c8 65 09                 a2 = s0 + s1
 66046: 97 99 03                 a2 = a2 << 0x3
 66049: 50 20 68 03 dd 07 02     ra = 872, jump @13639
      :                          @5148 [@dyn 436]
 66056: 82 17 70                 a0 = u64 [sp + 0x70]
 66059: 82 78                    a1 = u64 [a0]
 66061: 7b 18 68                 u64 [sp + 0x68] = a1
 66064: 82 78 08                 a1 = u64 [a0 + 0x8]
 66067: 7b 18                    u64 [sp] = a1
 66069: 95 78 18                 a1 = a0 + 0x18
 66072: 7b 16 50                 u64 [sp + 0x50] = s1
 66075: 82 19 78                 a2 = u64 [sp + 0x78]
 66078: c8 96 06                 s1 = s1 + a2
 66081: 96 69 18                 a2 = s1 * 0x18
 66084: 50 20 6a 03 ba 07 02     ra = 874, jump @13639
      :                          @5149 [@dyn 437]
 66091: 82 18 68                 a1 = u64 [sp + 0x68]
 66094: 82 16                    s1 = u64 [sp]
 66096: 82 17 78                 a0 = u64 [sp + 0x78]
 66099: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 66102: 82 14 18                 t2 = u64 [sp + 0x18]
 66105: 7b 17 70                 u64 [sp + 0x70] = a0
 66108: 7b 47 10                 u64 [t2 + 0x10] = a0
 66111: 82 1c 40                 a5 = u64 [sp + 0x40]
 66114: 51 08 22                 jump @5156 if a1 == 0
      :                          @5150
 66117: 56 28 00 20 1f           jump @5156 if a1 >u 8192
      :                          @5151
 66122: 97 87 03                 a0 = a1 << 0x3
 66125: 01                       fallthrough
      :                          @5152
 66126: 82 c8                    a1 = u64 [a5]
 66128: c9 8c 09                 a2 = a5 - a1
 66131: ab 69 11                 jump @5156 if a2 != s1
      :                          @5153
 66134: c9 78 09                 a2 = a1 - a0
 66137: 01                       fallthrough
      :                          @5154
 66138: 82 ca                    a3 = u64 [a5]
 66140: ab 8a f2                 jump @5152 if a3 != a1
      :                          @5155
 66143: 7b c9                    u64 [a5] = a2
 66145: 33 0b                    a4 = 0
 66147: 01                       fallthrough
      :                          @5156
 66148: 95 56 ff                 s1 = s0 + 0xffffffffffffffff
 66151: 82 17 70                 a0 = u64 [sp + 0x70]
 66154: 51 07 7e                 jump @5165 if a0 == 0
      :                          @5157
 66157: 7b 16                    u64 [sp] = s1
 66159: 82 18 78                 a1 = u64 [sp + 0x78]
 66162: 96 87 18                 a0 = a1 * 0x18
 66165: 95 76 e8                 s1 = a0 + 0xffffffffffffffe8
 66168: 82 18 08                 a1 = u64 [sp + 0x8]
 66171: 01                       fallthrough
      :                          @5158
 66172: 82 8a                    a3 = u64 [a1]
 66174: 82 17 80 00              a0 = u64 [sp + 0x80]
 66178: ae a7 c7 01              jump @5220 if a0 >=u a3
      :                          @5159
 66182: 82 87 f8                 a0 = u64 [a1 + 0xfffffffffffffff8]
 66185: 82 19 58                 a2 = u64 [sp + 0x58]
 66188: c8 97 07                 a0 = a0 + a2
 66191: 7b 18 78                 u64 [sp + 0x78] = a1
 66194: 95 78 08                 a1 = a0 + 0x8
 66197: 82 19 50                 a2 = u64 [sp + 0x50]
 66200: c8 a9 09                 a2 = a2 + a3
 66203: 97 99 03                 a2 = a2 << 0x3
 66206: 7b 1a 68                 u64 [sp + 0x68] = a3
 66209: 50 20 6c 03 3d 07 02     ra = 876, jump @13639
      :                          @5160 [@dyn 438]
 66216: 82 18 78                 a1 = u64 [sp + 0x78]
 66219: 82 17 68                 a0 = u64 [sp + 0x68]
 66222: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 66225: 7b 87                    u64 [a1] = a0
 66227: 95 66 e8                 s1 = s1 + 0xffffffffffffffe8
 66230: 95 88 18                 a1 = a1 + 0x18
 66233: 52 06 c3                 jump @5158 if s1 != 0
      :                          @5161
 66236: 82 17 70                 a0 = u64 [sp + 0x70]
 66239: 7b 17 78                 u64 [sp + 0x78] = a0
 66242: 82 17 60                 a0 = u64 [sp + 0x60]
 66245: 7b 17 68                 u64 [sp + 0x68] = a0
 66248: 82 14 18                 t2 = u64 [sp + 0x18]
 66251: 82 13 48                 t1 = u64 [sp + 0x48]
 66254: 82 10 28                 ra = u64 [sp + 0x28]
 66257: 82 12 90 00              t0 = u64 [sp + 0x90]
 66261: 82 16                    s1 = u64 [sp]
 66263: 52 05 2b                 jump @5166 if s0 != 0
      :                          @5162
 66266: 28 85 fc                 jump @5095
      :                          @5163
 66269: 64 56                    s1 = s0
 66271: 82 13 48                 t1 = u64 [sp + 0x48]
 66274: 52 05 20                 jump @5166 if s0 != 0
      :                          @5164
 66277: 28 7a fc                 jump @5095
      :                          @5165
 66280: 49 11 70                 u64 [sp + 112] = 0
 66283: 49 11 78                 u64 [sp + 120] = 0
 66286: 82 17 60                 a0 = u64 [sp + 0x60]
 66289: 7b 17 68                 u64 [sp + 0x68] = a0
 66292: 82 13 48                 t1 = u64 [sp + 0x48]
 66295: 82 10 28                 ra = u64 [sp + 0x28]
 66298: 82 12 90 00              t0 = u64 [sp + 0x90]
 66302: 51 05 61 fc              jump @5095 if s0 == 0
      :                          @5166
 66306: 54 25 00 20 11           jump @5169 if s0 <=u 8192
      :                          @5167
 66311: 82 1c 40                 a5 = u64 [sp + 0x40]
 66314: 54 35 00 00 01 2a        jump @5174 if s0 <=u 65536
      :                          @5168
 66320: 28 4f fc                 jump @5095
      :                          @5169
 66323: 97 57 03                 a0 = s0 << 0x3
 66326: 82 1c 40                 a5 = u64 [sp + 0x40]
 66329: 01                       fallthrough
      :                          @5170
 66330: 82 c8                    a1 = u64 [a5]
 66332: c9 8c 09                 a2 = a5 - a1
 66335: 82 1a 88 00              a3 = u64 [sp + 0x88]
 66339: ab a9 11                 jump @5174 if a2 != a3
      :                          @5171
 66342: c9 78 09                 a2 = a1 - a0
 66345: 01                       fallthrough
      :                          @5172
 66346: 82 ca                    a3 = u64 [a5]
 66348: ab 8a ee                 jump @5170 if a3 != a1
      :                          @5173
 66351: 7b c9                    u64 [a5] = a2
 66353: 33 0b                    a4 = 0
 66355: 01                       fallthrough
      :                          @5174
 66356: 82 c7                    a0 = u64 [a5]
 66358: c9 7c 08                 a1 = a5 - a0
 66361: ab 28 26 fc              jump @5095 if a1 != t0
      :                          @5175
 66365: c9 57 08                 a1 = a0 - s0
 66368: 01                       fallthrough
      :                          @5176
 66369: 82 c9                    a2 = u64 [a5]
 66371: ab 79 f1                 jump @5174 if a2 != a0
      :                          @5177
 66374: 7b c8                    u64 [a5] = a1
 66376: 33 0a                    a3 = 0
 66378: 01                       fallthrough
      :                          @5178
 66379: ab 79 e9                 jump @5174 if a2 != a0
      :                          @5179
 66382: 28 11 fc                 jump @5095
      :                          @5180
 66385: 82 40 08                 ra = u64 [t2 + 0x8]
 66388: 33 03 ff                 t1 = 0xffffffffffffffff
 66391: 28 96 00                 jump @5202
      :                          @5181
 66394: 49 11 70 01              u64 [sp + 112] = 0x1
 66398: 33 03 ff                 t1 = 0xffffffffffffffff
 66401: 01                       fallthrough
      :                          @5182
 66402: 33 07 c0 22 03           a0 = 0x322c0
 66407: 95 77 00 00 01           a0 = a0 + 0x10000
 66412: 82 1c 10                 a5 = u64 [sp + 0x10]
 66415: 82 16 20                 s1 = u64 [sp + 0x20]
 66418: 01                       fallthrough
      :                          @5183
 66419: 82 78                    a1 = u64 [a0]
 66421: c9 87 09                 a2 = a0 - a1
 66424: ab 69 15                 jump @5187 if a2 != s1
      :                          @5184
 66427: c9 c8 09                 a2 = a1 - a5
 66430: 01                       fallthrough
      :                          @5185
 66431: 82 7a                    a3 = u64 [a0]
 66433: ab 8a f2                 jump @5183 if a3 != a1
      :                          @5186
 66436: 7b 79                    u64 [a0] = a2
 66438: 33 0b                    a4 = 0
 66440: 82 40 08                 ra = u64 [t2 + 0x8]
 66443: 28 06                    jump @5188
      :                          @5187
 66445: 82 40 08                 ra = u64 [t2 + 0x8]
 66448: 01                       fallthrough
      :                          @5188
 66449: 82 17 70                 a0 = u64 [sp + 0x70]
 66452: 51 07 59                 jump @5202 if a0 == 0
      :                          @5189
 66455: 7b 13 48                 u64 [sp + 0x48] = t1
 66458: 33 07                    a0 = 0
 66460: 33 03 18                 t1 = 0x18
 66463: 33 09 c0 22 03           a2 = 0x322c0
 66468: 95 9a 00 00 01           a3 = a2 + 0x10000
 66473: 33 02 00 20              t0 = 0x2000
 66477: 28 0b                    jump @5191
      :                          @5190
 66479: 95 77 01                 a0 = a0 + 0x1
 66482: 82 18 70                 a1 = u64 [sp + 0x70]
 66485: aa 87 34                 jump @5201 if a0 == a1
      :                          @5191
 66488: ca 37 0b                 a4 = a0 * t1
 66491: c8 0b 0b                 a4 = a4 + ra
 66494: 82 bc                    a5 = u64 [a4]
 66496: 51 0c ef                 jump @5190 if a5 == 0
      :                          @5192
 66499: ac c2 ec                 jump @5190 if t0 <u a5
      :                          @5193
 66502: 82 bb 08                 a4 = u64 [a4 + 0x8]
 66505: 97 cc 03                 a5 = a5 << 0x3
 66508: 01                       fallthrough
      :                          @5194
 66509: 82 a6                    s1 = u64 [a3]
 66511: c9 6a 09                 a2 = a3 - s1
 66514: ab b9 dd                 jump @5190 if a2 != a4
      :                          @5195
 66517: c9 c6 09                 a2 = s1 - a5
 66520: 01                       fallthrough
      :                          @5196
 66521: 82 a5                    s0 = u64 [a3]
 66523: ab 65 f2                 jump @5194 if s0 != s1
      :                          @5197
 66526: 7b a9                    u64 [a3] = a2
 66528: 33 08                    a1 = 0
 66530: 01                       fallthrough
      :                          @5198
 66531: ab 65 ea                 jump @5194 if s0 != s1
      :                          @5199
 66534: 28 c9                    jump @5190
      :                          @5200
 66536: 00                       trap
      :                          @5201
 66537: 82 13 48                 t1 = u64 [sp + 0x48]
 66540: 01                       fallthrough
      :                          @5202
 66541: 82 47                    a0 = u64 [t2]
 66543: 51 07 2e                 jump @5209 if a0 == 0
      :                          @5203
 66546: 33 08 aa 0a              a1 = 0xaaa
 66550: ac 78 27                 jump @5209 if a1 <u a0
      :                          @5204
 66553: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
 66556: 33 08 c0 22 03           a1 = 0x322c0
 66561: 95 88 00 00 01           a1 = a1 + 0x10000
 66566: 01                       fallthrough
      :                          @5205
 66567: 82 89                    a2 = u64 [a1]
 66569: c9 98 0a                 a3 = a1 - a2
 66572: ab 0a 11                 jump @5209 if a3 != ra
      :                          @5206
 66575: c8 79 0a                 a3 = a2 + a0
 66578: 01                       fallthrough
      :                          @5207
 66579: 82 8b                    a4 = u64 [a1]
 66581: ab 9b f2                 jump @5205 if a4 != a2
      :                          @5208
 66584: 7b 8a                    u64 [a1] = a3
 66586: 33 0c                    a5 = 0
 66588: 01                       fallthrough
      :                          @5209
 66589: 64 37                    a0 = t1
 66591: 82 10 b0 00              ra = u64 [sp + 0xb0]
 66595: 82 15 a8 00              s0 = u64 [sp + 0xa8]
 66599: 82 16 a0 00              s1 = u64 [sp + 0xa0]
 66603: 95 11 b8 00              sp = sp + 0xb8
 66607: 32 00                    ret
      :                          @5210
 66609: 82 18 38                 a1 = u64 [sp + 0x38]
 66612: 54 28 00 20 2e ff        jump @5182 if a1 <=u 8192
      :                          @5211
 66618: 28 57 ff                 jump @5188
      :                          @5212
 66621: 00                       trap
      :                          @5213
 66622: 00                       trap
      :                          @5214
 66623: 82 27                    a0 = u64 [t0]
 66625: 51 07 0c                 jump @5224 if a0 == 0
      :                          @5215
 66628: 00                       trap
      :                          @5216
 66629: 00                       trap
      :                          @5217
 66630: 00                       trap
      :                          @5218
 66631: 00                       trap
      :                          @5219
 66632: 00                       trap
      :                          @5220
 66633: 00                       trap
      :                          @5221
 66634: 00                       trap
      :                          @5222
 66635: 00                       trap
      :                          @5223
 66636: 00                       trap
      :                          @5224
 66637: 00                       trap
      :                          @5225
 66638: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 66641: 7b 10 48                 u64 [sp + 0x48] = ra
 66644: 7b 15 40                 u64 [sp + 0x40] = s0
 66647: 7b 16 38                 u64 [sp + 0x38] = s1
 66650: 82 72 10                 t0 = u64 [a0 + 0x10]
 66653: 51 02 8d 01              jump @5254 if t0 == 0
      :                          @5226
 66657: 98 29 3c                 a2 = t0 >> 0x3c
 66660: 52 09 4a 02              jump @5283 if a2 != 0
      :                          @5227
 66664: 7b 17 28                 u64 [sp + 0x28] = a0
 66667: 7b 18 30                 u64 [sp + 0x30] = a1
 66670: 88 90 01                 ra = a2 <u 0x1
 66673: 97 27 03                 a0 = t0 << 0x3
 66676: 97 00 03                 ra = ra << 0x3
 66679: 33 05 c0 22 03           s0 = 0x322c0
 66684: 33 08 00 00 01           a1 = 0x10000
 66689: c8 85 0c                 a5 = s0 + a1
 66692: 01                       fallthrough
      :                          @5228
 66693: 82 ca                    a3 = u64 [a5]
 66695: c8 7a 09                 a2 = a3 + a0
 66698: ac a9 23 02              jump @5282 if a2 <u a3
      :                          @5229
 66702: c8 09 0b                 a4 = a2 + ra
 66705: d8 9b 06                 s1 = a4 <u a2
 66708: d8 b8 0b                 a4 = a1 <u a4
 66711: d4 6b 0b                 a4 = a4 | s1
 66714: 52 0b 13 02              jump @5282 if a4 != 0
      :                          @5230
 66718: c9 95 0b                 a4 = s0 - a2
 66721: c8 8b 0b                 a4 = a4 + a1
 66724: 84 b6 07                 s1 = a4 & 0x7
 66727: c8 69 09                 a2 = a2 + s1
 66730: 01                       fallthrough
      :                          @5231
 66731: 82 c3                    t1 = u64 [a5]
 66733: ab a3 d8                 jump @5228 if t1 != a3
      :                          @5232
 66736: 7b c9                    u64 [a5] = a2
 66738: 33 04                    t2 = 0
 66740: c9 6b 06                 s1 = a4 - s1
 66743: 33 0a                    a3 = 0
 66745: 64 68                    a1 = s1
 66747: 01                       fallthrough
      :                          @5233
 66748: 95 ab 01                 a4 = a3 + 0x1
 66751: 7b 8a                    u64 [a1] = a3
 66753: 95 88 08                 a1 = a1 + 0x8
 66756: 64 ba                    a3 = a4
 66758: ab b2 f6                 jump @5233 if t0 != a4
      :                          @5234
 66761: 82 18 28                 a1 = u64 [sp + 0x28]
 66764: 82 85 08                 s0 = u64 [a1 + 0x8]
 66767: 82 1a 30                 a3 = u64 [sp + 0x30]
 66770: 82 a8 10                 a1 = u64 [a3 + 0x10]
 66773: 82 a4 08                 t2 = u64 [a3 + 0x8]
 66776: 95 2a ff                 a3 = t0 + 0xffffffffffffffff
 66779: 7b 1a                    u64 [sp] = a3
 66781: 51 0a 23 01              jump @5257 if a3 == 0
      :                          @5235
 66785: 7b 16 28                 u64 [sp + 0x28] = s1
 66788: 49 11 20                 u64 [sp + 32] = 0
 66791: 33 0c                    a5 = 0
 66793: 33 0a c0 22 03           a3 = 0x322c0
 66798: c8 7a 0a                 a3 = a3 + a0
 66801: 9a 9b f0 ff 00           a4 = 0xfff0 - a2
 66806: c8 ba 0a                 a3 = a3 + a4
 66809: 7b 1a 08                 u64 [sp + 0x8] = a3
 66812: 95 aa 08                 a3 = a3 + 0x8
 66815: 7b 1a 18                 u64 [sp + 0x18] = a3
 66818: 7b 15 10                 u64 [sp + 0x10] = s0
 66821: 28 15                    jump @5237
      :                          @5236
 66823: 82 1c 30                 a5 = u64 [sp + 0x30]
 66826: d8 2c 09                 a2 = a5 <u t0
 66829: 85 99 01                 a2 = a2 ^ 0x1
 66832: 7b 19 20                 u64 [sp + 0x20] = a2
 66835: 82 15 10                 s0 = u64 [sp + 0x10]
 66838: aa 2c 52 01              jump @5269 if a5 == t0
      :                          @5237
 66842: 33 06                    s1 = 0
 66844: 96 ca 18                 a3 = a5 * 0x18
 66847: c8 5a 0a                 a3 = a3 + s0
 66850: 82 a3 10                 t1 = u64 [a3 + 0x10]
 66853: 97 cb 03                 a4 = a5 << 0x3
 66856: 95 c9 01                 a2 = a5 + 0x1
 66859: 7b 19 30                 u64 [sp + 0x30] = a2
 66862: 95 a5 08                 s0 = a3 + 0x8
 66865: 82 10 28                 ra = u64 [sp + 0x28]
 66868: c8 b0 0a                 a3 = ra + a4
 66871: 01                       fallthrough
      :                          @5238
 66872: aa 62 cf                 jump @5236 if t0 == s1
      :                          @5239
 66875: aa 63 6f 01              jump @5279 if t1 == s1
      :                          @5240
 66879: 82 ab                    a4 = u64 [a3]
 66881: ae 8b 66 01              jump @5276 if a4 >=u a1
      :                          @5241
 66885: 82 0c                    a5 = u64 [ra]
 66887: 96 bb 18                 a4 = a4 * 0x18
 66890: c8 4b 0b                 a4 = a4 + t2
 66893: 82 b9 10                 a2 = u64 [a4 + 0x10]
 66896: ae 9c 5c 01              jump @5281 if a5 >=u a2
      :                          @5242
 66900: 82 59                    a2 = u64 [s0]
 66902: 82 bb 08                 a4 = u64 [a4 + 0x8]
 66905: c8 69 09                 a2 = a2 + s1
 66908: 7c 99                    a2 = u8 [a2]
 66910: c8 cb 0b                 a4 = a4 + a5
 66913: 7c bb                    a4 = u8 [a4]
 66915: 8e 99                    a2 = a2 >u 0
 66917: 8e bb                    a4 = a4 >u 0
 66919: 95 00 08                 ra = ra + 0x8
 66922: 95 66 01                 s1 = s1 + 0x1
 66925: aa b9 cb                 jump @5238 if a2 == a4
      :                          @5243
 66928: 33 0a 01                 a3 = 0x1
 66931: 82 15 18                 s0 = u64 [sp + 0x18]
 66934: 82 1b 08                 a4 = u64 [sp + 0x8]
 66937: 64 2c                    a5 = t0
 66939: 01                       fallthrough
      :                          @5244
 66940: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 66943: 51 0c 71                 jump @5255 if a5 == 0
      :                          @5245
 66946: 64 a0                    ra = a3
 66948: 64 59                    a2 = s0
 66950: 82 b3                    t1 = u64 [a4]
 66952: 82 b6 08                 s1 = u64 [a4 + 0x8]
 66955: 95 bb f8                 a4 = a4 + 0xfffffffffffffff8
 66958: 95 aa 01                 a3 = a3 + 0x1
 66961: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 66964: ae 63 e8                 jump @5244 if t1 >=u s1
      :                          @5246
 66967: 82 15 18                 s0 = u64 [sp + 0x18]
 66970: 82 1a                    a3 = u64 [sp]
 66972: 01                       fallthrough
      :                          @5247
 66973: 82 56                    s1 = u64 [s0]
 66975: ac 63 0f                 jump @5250 if t1 <u s1
      :                          @5248
 66978: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 66981: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 66984: ac 2a f5                 jump @5247 if a3 <u t0
      :                          @5249
 66987: 28 fd 00                 jump @5277
      :                          @5250
 66990: 49 11 20                 u64 [sp + 32] = 0
 66993: 49 11 30                 u64 [sp + 48] = 0
 66996: 7b b6 08                 u64 [a4 + 0x8] = s1
 66999: c9 c2 0a                 a3 = t0 - a5
 67002: 7b 53                    u64 [s0] = t1
 67004: 82 1c 30                 a5 = u64 [sp + 0x30]
 67007: 82 15 10                 s0 = u64 [sp + 0x10]
 67010: 53 1a 02 58 ff           jump @5237 if a3 <u 2
      :                          @5251
 67015: 98 06 01                 s1 = ra >> 0x1
 67018: 82 1a 18                 a3 = u64 [sp + 0x18]
 67021: 01                       fallthrough
      :                          @5252
 67022: 82 ab                    a4 = u64 [a3]
 67024: 82 9c                    a5 = u64 [a2]
 67026: 7b 9b                    u64 [a2] = a4
 67028: 7b ac                    u64 [a3] = a5
 67030: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 67033: 95 99 08                 a2 = a2 + 0x8
 67036: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 67039: 52 06 ef                 jump @5252 if s1 != 0
      :                          @5253
 67042: 49 11 20                 u64 [sp + 32] = 0
 67045: 33 0c                    a5 = 0
 67047: 28 33 ff                 jump @5237
      :                          @5254
 67050: 33 05 01                 s0 = 0x1
 67053: 28 a9 00                 jump @5275
      :                          @5255
 67056: 33 08 00 20              a1 = 0x2000
 67060: 82 16 28                 s1 = u64 [sp + 0x28]
 67063: 82 15 20                 s0 = u64 [sp + 0x20]
 67066: ae 28 48                 jump @5262 if a1 >=u t0
      :                          @5256
 67069: 28 99 00                 jump @5275
      :                          @5257
 67072: 82 57 10                 a0 = u64 [s0 + 0x10]
 67075: 51 07 a6 00              jump @5278 if a0 == 0
      :                          @5258
 67079: 82 6b                    a4 = u64 [s1]
 67081: ae 8b 9e 00              jump @5276 if a4 >=u a1
      :                          @5259
 67085: 96 b7 18                 a0 = a4 * 0x18
 67088: c8 74 04                 t2 = t2 + a0
 67091: 82 49 10                 a2 = u64 [t2 + 0x10]
 67094: ae 9b 95 00              jump @5280 if a4 >=u a2
      :                          @5260
 67098: 82 57 08                 a0 = u64 [s0 + 0x8]
 67101: 82 48 08                 a1 = u64 [t2 + 0x8]
 67104: 7c 77                    a0 = u8 [a0]
 67106: c8 b8 08                 a1 = a1 + a4
 67109: 7c 88                    a1 = u8 [a1]
 67111: 8e 79                    a2 = a0 >u 0
 67113: 8e 88                    a1 = a1 >u 0
 67115: 33 05 01                 s0 = 0x1
 67118: 33 07 08                 a0 = 0x8
 67121: aa 89 44                 jump @5270 if a2 == a1
      :                          @5261
 67124: 33 05                    s0 = 0
 67126: 33 08 c0 22 03           a1 = 0x322c0
 67131: 95 88 00 00 01           a1 = a1 + 0x10000
 67136: 28 0d                    jump @5263
      :                          @5262
 67138: 33 08 c0 22 03           a1 = 0x322c0
 67143: 95 88 00 00 01           a1 = a1 + 0x10000
 67148: 01                       fallthrough
      :                          @5263
 67149: 82 89                    a2 = u64 [a1]
 67151: c9 98 0a                 a3 = a1 - a2
 67154: ab 6a 44                 jump @5275 if a3 != s1
      :                          @5264
 67157: c9 79 0a                 a3 = a2 - a0
 67160: 01                       fallthrough
      :                          @5265
 67161: 82 8b                    a4 = u64 [a1]
 67163: ab 9b f2                 jump @5263 if a4 != a2
      :                          @5266
 67166: 7b 8a                    u64 [a1] = a3
 67168: 33 0c                    a5 = 0
 67170: 01                       fallthrough
      :                          @5267
 67171: ab 9b ea                 jump @5263 if a4 != a2
      :                          @5268
 67174: 28 30                    jump @5275
      :                          @5269
 67176: 33 08 00 20              a1 = 0x2000
 67180: 82 16 28                 s1 = u64 [sp + 0x28]
 67183: 82 15 20                 s0 = u64 [sp + 0x20]
 67186: ac 28 24                 jump @5275 if a1 <u t0
      :                          @5270
 67189: 33 08 c0 22 03           a1 = 0x322c0
 67194: 95 88 00 00 01           a1 = a1 + 0x10000
 67199: 01                       fallthrough
      :                          @5271
 67200: 82 89                    a2 = u64 [a1]
 67202: c9 98 0a                 a3 = a1 - a2
 67205: ab 6a 11                 jump @5275 if a3 != s1
      :                          @5272
 67208: c9 79 0a                 a3 = a2 - a0
 67211: 01                       fallthrough
      :                          @5273
 67212: 82 8b                    a4 = u64 [a1]
 67214: ab 9b f2                 jump @5271 if a4 != a2
      :                          @5274
 67217: 7b 8a                    u64 [a1] = a3
 67219: 33 0c                    a5 = 0
 67221: 01                       fallthrough
      :                          @5275
 67222: 84 57 01                 a0 = s0 & 0x1
 67225: 82 10 48                 ra = u64 [sp + 0x48]
 67228: 82 15 40                 s0 = u64 [sp + 0x40]
 67231: 82 16 38                 s1 = u64 [sp + 0x38]
 67234: 95 11 50                 sp = sp + 0x50
 67237: 32 00                    ret
      :                          @5276
 67239: 00                       trap
      :                          @5277
 67240: 00                       trap
      :                          @5278
 67241: 00                       trap
      :                          @5279
 67242: 00                       trap
      :                          @5280
 67243: 00                       trap
      :                          @5281
 67244: 00                       trap
      :                          @5282
 67245: 00                       trap
      :                          @5283
 67246: 00                       trap
      :                          @5284
 67247: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 67250: 7b 10 48                 u64 [sp + 0x48] = ra
 67253: 7b 15 40                 u64 [sp + 0x40] = s0
 67256: 49 11 38 04              u64 [sp + 56] = 0x4
 67260: 82 89                    a2 = u64 [a1]
 67262: 82 8a 10                 a3 = u64 [a1 + 0x10]
 67265: 82 8b 08                 a4 = u64 [a1 + 0x8]
 67268: 82 8c 18                 a5 = u64 [a1 + 0x18]
 67271: 7b 17 30                 u64 [sp + 0x30] = a0
 67274: 7b 19 20                 u64 [sp + 0x20] = a2
 67277: 7b 1a 18                 u64 [sp + 0x18] = a3
 67280: c9 9a 09                 a2 = a3 - a2
 67283: 9a 9a                    a3 = -a2
 67285: e3 a9 09                 a2 = maxs(a2, a3)
 67288: 7b 1b 28                 u64 [sp + 0x28] = a4
 67291: 7b 1c 10                 u64 [sp + 0x10] = a5
 67294: ab bc 07                 jump @5286 if a5 != a4
      :                          @5285
 67297: 64 9a                    a3 = a2
 67299: 28 15                    jump @5288
      :                          @5286
 67301: c9 bc 0a                 a3 = a5 - a4
 67304: 9a ab                    a4 = -a3
 67306: e3 ba 0b                 a4 = maxs(a3, a4)
 67309: 01                       fallthrough
      :                          @5287
 67310: 64 ba                    a3 = a4
 67312: cd b9 0b                 a4 = a2 %u a4
 67315: 64 a9                    a2 = a3
 67317: 52 0b f9                 jump @5287 if a4 != 0
      :                          @5288
 67320: 82 89 10                 a2 = u64 [a1 + 0x10]
 67323: 82 86 20                 s1 = u64 [a1 + 0x20]
 67326: 82 8b 18                 a4 = u64 [a1 + 0x18]
 67329: 82 8c 28                 a5 = u64 [a1 + 0x28]
 67332: c9 96 06                 s1 = s1 - a2
 67335: 9a 69                    a2 = -s1
 67337: e3 96 09                 a2 = maxs(s1, a2)
 67340: ab bc 07                 jump @5290 if a5 != a4
      :                          @5289
 67343: 64 9b                    a4 = a2
 67345: 28 15                    jump @5292
      :                          @5290
 67347: c9 bc 0c                 a5 = a5 - a4
 67350: 9a cb                    a4 = -a5
 67352: e3 bc 0c                 a5 = maxs(a5, a4)
 67355: 01                       fallthrough
      :                          @5291
 67356: 64 cb                    a4 = a5
 67358: cd c9 0c                 a5 = a2 %u a5
 67361: 64 b9                    a2 = a4
 67363: 52 0c f9                 jump @5291 if a5 != 0
      :                          @5292
 67366: 82 8c 20                 a5 = u64 [a1 + 0x20]
 67369: 82 85 30                 s0 = u64 [a1 + 0x30]
 67372: 82 89 28                 a2 = u64 [a1 + 0x28]
 67375: 82 86 38                 s1 = u64 [a1 + 0x38]
 67378: c9 c5 05                 s0 = s0 - a5
 67381: 9a 5c                    a5 = -s0
 67383: e3 c5 0c                 a5 = maxs(s0, a5)
 67386: ab 96 07                 jump @5294 if s1 != a2
      :                          @5293
 67389: 64 c4                    t2 = a5
 67391: 28 15                    jump @5296
      :                          @5294
 67393: c9 96 06                 s1 = s1 - a2
 67396: 9a 69                    a2 = -s1
 67398: e3 96 09                 a2 = maxs(s1, a2)
 67401: 01                       fallthrough
      :                          @5295
 67402: 64 94                    t2 = a2
 67404: cd 9c 09                 a2 = a5 %u a2
 67407: 64 4c                    a5 = t2
 67409: 52 09 f9                 jump @5295 if a2 != 0
      :                          @5296
 67412: 82 80 20                 ra = u64 [a1 + 0x20]
 67415: 82 87 28                 a0 = u64 [a1 + 0x28]
 67418: 7b 17                    u64 [sp] = a0
 67420: 82 87 30                 a0 = u64 [a1 + 0x30]
 67423: 7b 17 08                 u64 [sp + 0x8] = a0
 67426: 82 86 30                 s1 = u64 [a1 + 0x30]
 67429: 82 87                    a0 = u64 [a1]
 67431: 82 89 38                 a2 = u64 [a1 + 0x38]
 67434: 82 85 08                 s0 = u64 [a1 + 0x8]
 67437: 82 88 38                 a1 = u64 [a1 + 0x38]
 67440: c9 67 07                 a0 = a0 - s1
 67443: 9a 76                    s1 = -a0
 67445: e3 67 03                 t1 = maxs(a0, s1)
 67448: ab 95 07                 jump @5298 if s0 != a2
      :                          @5297
 67451: 64 32                    t0 = t1
 67453: 28 15                    jump @5300
      :                          @5298
 67455: c9 95 05                 s0 = s0 - a2
 67458: 9a 57                    a0 = -s0
 67460: e3 75 09                 a2 = maxs(s0, a0)
 67463: 01                       fallthrough
      :                          @5299
 67464: 64 92                    t0 = a2
 67466: cd 93 09                 a2 = t1 %u a2
 67469: 64 23                    t1 = t0
 67471: 52 09 f9                 jump @5299 if a2 != 0
      :                          @5300
 67474: c8 ab 03                 t1 = a4 + a3
 67477: 82 16 28                 s1 = u64 [sp + 0x28]
 67480: 82 15 18                 s0 = u64 [sp + 0x18]
 67483: ca 65 07                 a0 = s0 * s1
 67486: 82 1c 10                 a5 = u64 [sp + 0x10]
 67489: ca c0 09                 a2 = ra * a5
 67492: c8 97 07                 a0 = a0 + a2
 67495: ca 08 09                 a2 = a1 * ra
 67498: 82 1b 20                 a4 = u64 [sp + 0x20]
 67501: ca 8b 08                 a1 = a4 * a1
 67504: ca bc 0b                 a4 = a5 * a4
 67507: 82 1a                    a3 = u64 [sp]
 67509: ca 5a 0c                 a5 = a3 * s0
 67512: c8 cb 0b                 a4 = a4 + a5
 67515: c8 b9 09                 a2 = a2 + a4
 67518: 82 1c 08                 a5 = u64 [sp + 0x8]
 67521: ca ac 0b                 a4 = a5 * a3
 67524: c8 b8 08                 a1 = a1 + a4
 67527: c8 87 07                 a0 = a0 + a1
 67530: c9 79 09                 a2 = a2 - a0
 67533: c8 42 02                 t0 = t0 + t2
 67536: c8 32 0a                 a3 = t0 + t1
 67539: ca c6 07                 a0 = s1 * a5
 67542: c8 97 07                 a0 = a0 + a2
 67545: 9a 78                    a1 = -a0
 67547: e3 87 07                 a0 = maxs(a0, a1)
 67550: c9 a7 08                 a1 = a0 - a3
 67553: 95 88 02                 a1 = a1 + 0x2
 67556: 98 89 3f                 a2 = a1 >> 0x3f
 67559: c8 98 08                 a1 = a1 + a2
 67562: 82 19 30                 a2 = u64 [sp + 0x30]
 67565: 7b 97                    u64 [a2] = a0
 67567: 7b 9a 08                 u64 [a2 + 0x8] = a3
 67570: 99 88 01                 a1 = a1 >>a 0x1
 67573: 7b 98 10                 u64 [a2 + 0x10] = a1
 67576: 82 10 48                 ra = u64 [sp + 0x48]
 67579: 82 15 40                 s0 = u64 [sp + 0x40]
 67582: 82 16 38                 s1 = u64 [sp + 0x38]
 67585: 95 11 50                 sp = sp + 0x50
 67588: 32 00                    ret
      :                          @5301
 67590: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 67593: 7b 10 18                 u64 [sp + 0x18] = ra
 67596: 7b 15 10                 u64 [sp + 0x10] = s0
 67599: 7b 16 08                 u64 [sp + 0x8] = s1
 67602: 7b 17                    u64 [sp] = a0
 67604: 51 0a 72                 jump @5308 if a3 == 0
      :                          @5302
 67607: 64 92                    t0 = a2
 67609: 33 04                    t2 = 0
 67611: 95 9c 08                 a5 = a2 + 0x8
 67614: 9a a0                    ra = -a3
 67616: 14 03 00 00 00 00 00 00 00 80 t1 = 0x8000000000000000
 67626: 33 0b 01                 a4 = 0x1
 67629: 28 11                    jump @5304
      :                          @5303
 67631: 95 bb 01                 a4 = a4 + 0x1
 67634: c8 b0 07                 a0 = ra + a4
 67637: 95 cc 10                 a5 = a5 + 0x10
 67640: 33 09 01                 a2 = 0x1
 67643: aa 97 4e                 jump @5309 if a0 == a2
      :                          @5304
 67646: c8 b0 09                 a2 = ra + a4
 67649: 82 c5                    s0 = u64 [a5]
 67651: 64 ba                    a3 = a4
 67653: 93 9a                    a3 = 0 if a2 == 0
 67655: 97 a9 04                 a2 = a3 << 0x4
 67658: c8 29 09                 a2 = a2 + t0
 67661: 82 96 08                 s1 = u64 [a2 + 0x8]
 67664: d9 58 0a                 a3 = a1 <s s0
 67667: d9 68 07                 a0 = a1 <s s1
 67670: aa 7a d9                 jump @5303 if a3 == a0
      :                          @5305
 67673: aa 56 41                 jump @5310 if s1 == s0
      :                          @5306
 67676: 82 ca f8                 a3 = u64 [a5 + 0xfffffffffffffff8]
 67679: 82 97                    a0 = u64 [a2]
 67681: c9 58 09                 a2 = a1 - s0
 67684: c9 a7 07                 a0 = a0 - a3
 67687: ca 97 09                 a2 = a0 * a2
 67690: c9 56 06                 s1 = s1 - s0
 67693: d3 39 07                 a0 = a2 ^ t1
 67696: e1 67 07                 a0 = a0 | ~s1
 67699: 51 07 28                 jump @5311 if a0 == 0
      :                          @5307
 67702: cc 69 07                 a0 = a2 /s s1
 67705: c8 a7 07                 a0 = a0 + a3
 67708: 82 19                    a2 = u64 [sp]
 67710: d9 79 07                 a0 = a2 <s a0
 67713: d3 74 04                 t2 = t2 ^ a0
 67716: 28 ab                    jump @5303
      :                          @5308
 67718: 33 04                    t2 = 0
 67720: 01                       fallthrough
      :                          @5309
 67721: 84 47 01                 a0 = t2 & 0x1
 67724: 82 10 18                 ra = u64 [sp + 0x18]
 67727: 82 15 10                 s0 = u64 [sp + 0x10]
 67730: 82 16 08                 s1 = u64 [sp + 0x8]
 67733: 95 11 20                 sp = sp + 0x20
 67736: 32 00                    ret
      :                          @5310
 67738: 00                       trap
      :                          @5311
 67739: 00                       trap
      :                          @5312
 67740: 95 11 90                 sp = sp + 0xffffffffffffff90
 67743: 7b 10 68                 u64 [sp + 0x68] = ra
 67746: 7b 15 60                 u64 [sp + 0x60] = s0
 67749: 7b 16 58                 u64 [sp + 0x58] = s1
 67752: 7b 18 38                 u64 [sp + 0x38] = a1
 67755: 64 72                    t0 = a0
 67757: 7b 19 08                 u64 [sp + 0x8] = a2
 67760: 7b 17                    u64 [sp] = a0
 67762: 55 19 03 51              jump @5320 if a2 >=u 3
      :                          @5313
 67766: 51 09 6a 01              jump @5339 if a2 == 0
      :                          @5314
 67770: 97 99 04                 a2 = a2 << 0x4
 67773: 33 07 c0 22 03           a0 = 0x322c0
 67778: 33 03 c0 22 03           t1 = 0x322c0
 67783: 33 02 00 00 01           t0 = 0x10000
 67788: c8 23 0a                 a3 = t1 + t0
 67791: 01                       fallthrough
      :                          @5315
 67792: 82 ab                    a4 = u64 [a3]
 67794: c8 9b 0c                 a5 = a4 + a2
 67797: ac bc 79 01              jump @5345 if a5 <u a4
      :                          @5316
 67801: 95 c8 08                 a1 = a5 + 0x8
 67804: d8 c8 06                 s1 = a1 <u a5
 67807: d8 82 08                 a1 = t0 <u a1
 67810: d4 68 08                 a1 = a1 | s1
 67813: 52 08 69 01              jump @5345 if a1 != 0
      :                          @5317
 67817: c9 c3 06                 s1 = t1 - a5
 67820: c8 26 06                 s1 = s1 + t0
 67823: 84 68 07                 a1 = s1 & 0x7
 67826: c8 8c 0c                 a5 = a5 + a1
 67829: 01                       fallthrough
      :                          @5318
 67830: 82 a5                    s0 = u64 [a3]
 67832: ab b5 d8                 jump @5315 if s0 != a4
      :                          @5319
 67835: 7b ac                    u64 [a3] = a5
 67837: c9 86 06                 s1 = s1 - a1
 67840: 28 24 01                 jump @5340
      :                          @5320
 67843: 33 05                    s0 = 0
 67845: 82 18 38                 a1 = u64 [sp + 0x38]
 67848: 95 88 18                 a1 = a1 + 0x18
 67851: 33 06 01                 s1 = 0x1
 67854: 28 0e                    jump @5323
      :                          @5321
 67856: 64 75                    s0 = a0
 67858: 01                       fallthrough
      :                          @5322
 67859: 95 66 01                 s1 = s1 + 0x1
 67862: 95 88 10                 a1 = a1 + 0x10
 67865: aa 69 2d                 jump @5328 if a2 == s1
      :                          @5323
 67868: 64 57                    a0 = s0
 67870: ae 95 2f 01              jump @5344 if s0 >=u a2
      :                          @5324
 67874: 82 8b f8                 a4 = u64 [a1 + 0xfffffffffffffff8]
 67877: 97 7a 04                 a3 = a0 << 0x4
 67880: 82 1c 38                 a5 = u64 [sp + 0x38]
 67883: c8 ca 0a                 a3 = a3 + a5
 67886: 82 ac                    a5 = u64 [a3]
 67888: 64 65                    s0 = s1
 67890: ad cb e1                 jump @5322 if a4 <s a5
      :                          @5325
 67893: ab cb db                 jump @5321 if a4 != a5
      :                          @5326
 67896: 82 8b                    a4 = u64 [a1]
 67898: 82 aa 08                 a3 = u64 [a3 + 0x8]
 67901: 64 75                    s0 = a0
 67903: af ab d4                 jump @5322 if a4 >=s a3
      :                          @5327
 67906: 64 65                    s0 = s1
 67908: 28 cf                    jump @5322
      :                          @5328
 67910: 33 08                    a1 = 0
 67912: 49 11 40                 u64 [sp + 64] = 0
 67915: 49 11 18 08              u64 [sp + 24] = 0x8
 67919: 49 11 48 08              u64 [sp + 72] = 0x8
 67923: 49 11 50                 u64 [sp + 80] = 0
 67926: 82 17 38                 a0 = u64 [sp + 0x38]
 67929: 95 77 08                 a0 = a0 + 0x8
 67932: 7b 17 10                 u64 [sp + 0x10] = a0
 67935: 64 56                    s1 = s0
 67937: 01                       fallthrough
      :                          @5329
 67938: ae 96 ea 00              jump @5343 if s1 >=u a2
      :                          @5330
 67942: 7b 15 20                 u64 [sp + 0x20] = s0
 67945: 97 67 04                 a0 = s1 << 0x4
 67948: 82 1a 38                 a3 = u64 [sp + 0x38]
 67951: c8 a7 07                 a0 = a0 + a3
 67954: 82 7a                    a3 = u64 [a0]
 67956: 7b 1a 30                 u64 [sp + 0x30] = a3
 67959: 82 1a 40                 a3 = u64 [sp + 0x40]
 67962: 82 77 08                 a0 = u64 [a0 + 0x8]
 67965: 7b 17 28                 u64 [sp + 0x28] = a0
 67968: ab a8 18                 jump @5333 if a1 != a3
      :                          @5331
 67971: 95 17 40                 a0 = sp + 0x40
 67974: 50 20 6e 03 7a 4a ff     ra = 878, jump @1605
      :                          @5332 [@dyn 439]
 67981: 82 19 08                 a2 = u64 [sp + 0x8]
 67984: 82 18 50                 a1 = u64 [sp + 0x50]
 67987: 82 17 48                 a0 = u64 [sp + 0x48]
 67990: 28 06                    jump @5334
      :                          @5333
 67992: 82 17 18                 a0 = u64 [sp + 0x18]
 67995: 01                       fallthrough
      :                          @5334
 67996: 33 04                    t2 = 0
 67998: 97 8a 04                 a3 = a1 << 0x4
 68001: 7b 17 18                 u64 [sp + 0x18] = a0
 68004: c8 7a 0a                 a3 = a3 + a0
 68007: 82 17 30                 a0 = u64 [sp + 0x30]
 68010: 7b a7                    u64 [a3] = a0
 68012: 82 17 28                 a0 = u64 [sp + 0x28]
 68015: 7b a7 08                 u64 [a3 + 0x8] = a0
 68018: 95 88 01                 a1 = a1 + 0x1
 68021: 7b 18 50                 u64 [sp + 0x50] = a1
 68024: 95 66 01                 s1 = s1 + 0x1
 68027: cd 96 06                 s1 = s1 %u a2
 68030: 82 1a 10                 a3 = u64 [sp + 0x10]
 68033: 01                       fallthrough
      :                          @5335
 68034: ae 96 8a 00              jump @5343 if s1 >=u a2
      :                          @5336
 68038: 95 43 01                 t1 = t2 + 0x1
 68041: 97 6c 04                 a5 = s1 << 0x4
 68044: 82 17 38                 a0 = u64 [sp + 0x38]
 68047: c8 7c 0c                 a5 = a5 + a0
 68050: 82 c7                    a0 = u64 [a5]
 68052: 82 a5                    s0 = u64 [a3]
 68054: 82 cc 08                 a5 = u64 [a5 + 0x8]
 68057: 82 a2 f8                 t0 = u64 [a3 + 0xfffffffffffffff8]
 68060: 82 1b 30                 a4 = u64 [sp + 0x30]
 68063: c9 b7 07                 a0 = a0 - a4
 68066: 82 10 28                 ra = u64 [sp + 0x28]
 68069: c9 05 05                 s0 = s0 - ra
 68072: ca 75 07                 a0 = s0 * a0
 68075: c9 0c 0c                 a5 = a5 - ra
 68078: c9 2b 0b                 a4 = a4 - t0
 68081: ca cb 0b                 a4 = a4 * a5
 68084: c8 b7 07                 a0 = a0 + a4
 68087: 89 77                    a0 = a0 <s 0
 68089: db 74 06                 s1 = t2 if a0 != 0
 68092: 95 aa 10                 a3 = a3 + 0x10
 68095: 64 34                    t2 = t1
 68097: ab 39 c1                 jump @5335 if a2 != t1
      :                          @5337
 68100: 82 15 20                 s0 = u64 [sp + 0x20]
 68103: ab 56 5b ff              jump @5329 if s1 != s0
      :                          @5338
 68107: 82 17 50                 a0 = u64 [sp + 0x50]
 68110: 82 18 48                 a1 = u64 [sp + 0x48]
 68113: 82 19 40                 a2 = u64 [sp + 0x40]
 68116: 82 1a                    a3 = u64 [sp]
 68118: 7b a7 10                 u64 [a3 + 0x10] = a0
 68121: 7b a8 08                 u64 [a3 + 0x8] = a1
 68124: 7b a9                    u64 [a3] = a2
 68126: 28 20                    jump @5342
      :                          @5339
 68128: 33 06 08                 s1 = 0x8
 68131: 01                       fallthrough
      :                          @5340
 68132: 64 67                    a0 = s1
 68134: 82 18 38                 a1 = u64 [sp + 0x38]
 68137: 50 20 70 03 03 ff 01     ra = 880, jump @13621
      :                          @5341 [@dyn 440]
 68144: 82 17 08                 a0 = u64 [sp + 0x8]
 68147: 82 18                    a1 = u64 [sp]
 68149: 7b 87                    u64 [a1] = a0
 68151: 7b 86 08                 u64 [a1 + 0x8] = s1
 68154: 7b 87 10                 u64 [a1 + 0x10] = a0
 68157: 01                       fallthrough
      :                          @5342
 68158: 82 10 68                 ra = u64 [sp + 0x68]
 68161: 82 15 60                 s0 = u64 [sp + 0x60]
 68164: 82 16 58                 s1 = u64 [sp + 0x58]
 68167: 95 11 70                 sp = sp + 0x70
 68170: 32 00                    ret
      :                          @5343
 68172: 00                       trap
      :                          @5344
 68173: 00                       trap
      :                          @5345
 68174: 00                       trap
      :                          @5346
 68175: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 68178: 7b 10 20                 u64 [sp + 0x20] = ra
 68181: 7b 15 18                 u64 [sp + 0x18] = s0
 68184: 7b 16 10                 u64 [sp + 0x10] = s1
 68187: 98 85 01                 s0 = a1 >> 0x1
 68190: 7b 17                    u64 [sp] = a0
 68192: 51 05 53                 jump @5354 if s0 == 0
      :                          @5347
 68195: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 68198: 82 16                    s1 = u64 [sp]
 68200: 7b 18 08                 u64 [sp + 0x8] = a1
 68203: 01                       fallthrough
      :                          @5348
 68204: 64 67                    a0 = s1
 68206: 64 59                    a2 = s0
 68208: 82 1a 08                 a3 = u64 [sp + 0x8]
 68211: 50 20 72 03 4f           ra = 882, jump @5356
      :                          @5349 [@dyn 441]
 68216: 82 18 08                 a1 = u64 [sp + 0x8]
 68219: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 68222: 52 15 ff ee              jump @5348 if s0 != 4294967295
      :                          @5350
 68226: 97 87 03                 a0 = a1 << 0x3
 68229: c8 67 07                 a0 = a0 + s1
 68232: 95 76 f8                 s1 = a0 + 0xfffffffffffffff8
 68235: 64 85                    s0 = a1
 68237: 01                       fallthrough
      :                          @5351
 68238: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 68241: ae 85 30                 jump @5355 if s0 >=u a1
      :                          @5352
 68244: 82 6a                    a3 = u64 [s1]
 68246: 82 17                    a0 = u64 [sp]
 68248: 82 79                    a2 = u64 [a0]
 68250: 7b 7a                    u64 [a0] = a3
 68252: 7b 69                    u64 [s1] = a2
 68254: 33 09                    a2 = 0
 68256: 64 5a                    a3 = s0
 68258: 50 20 74 03 20           ra = 884, jump @5356
      :                          @5353 [@dyn 442]
 68263: 82 18 08                 a1 = u64 [sp + 0x8]
 68266: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 68269: 33 07 01                 a0 = 0x1
 68272: ac 57 de                 jump @5351 if a0 <u s0
      :                          @5354
 68275: 82 10 20                 ra = u64 [sp + 0x20]
 68278: 82 15 18                 s0 = u64 [sp + 0x18]
 68281: 82 16 10                 s1 = u64 [sp + 0x10]
 68284: 95 11 28                 sp = sp + 0x28
 68287: 32 00                    ret
      :                          @5355
 68289: 00                       trap
      :                          @5356
 68290: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 68293: 7b 15 08                 u64 [sp + 0x8] = s0
 68296: 7b 16                    u64 [sp] = s1
 68298: 97 94 01                 t2 = a2 << 0x1
 68301: 95 45 01                 s0 = t2 + 0x1
 68304: ae a5 65                 jump @5367 if s0 >=u a3
      :                          @5357
 68307: ae 89 6e                 jump @5370 if a2 >=u a1
      :                          @5358
 68310: ae 85 69                 jump @5368 if s0 >=u a1
      :                          @5359
 68313: 97 93 03                 t1 = a2 << 0x3
 68316: c8 73 03                 t1 = t1 + a0
 68319: 82 32                    t0 = u64 [t1]
 68321: 97 5c 03                 a5 = s0 << 0x3
 68324: c8 7c 0c                 a5 = a5 + a0
 68327: 82 cc                    a5 = u64 [a5]
 68329: d8 c2 0b                 a4 = t0 <u a5
 68332: 95 46 02                 s1 = t2 + 0x2
 68335: da b9 05                 s0 = a2 if a4 == 0
 68338: ae a6 24                 jump @5364 if s1 >=u a3
      :                          @5360
 68341: ae 85 4a                 jump @5368 if s0 >=u a1
      :                          @5361
 68344: ae 86 48                 jump @5369 if s1 >=u a1
      :                          @5362
 68347: 97 5b 03                 a4 = s0 << 0x3
 68350: c8 7b 0b                 a4 = a4 + a0
 68353: 82 bb                    a4 = u64 [a4]
 68355: 97 6c 03                 a5 = s1 << 0x3
 68358: c8 7c 0c                 a5 = a5 + a0
 68361: 82 cc                    a5 = u64 [a5]
 68363: d8 cb 0b                 a4 = a4 <u a5
 68366: da b5 06                 s1 = s0 if a4 == 0
 68369: ab 96 0a                 jump @5365 if s1 != a2
      :                          @5363
 68372: 28 21                    jump @5367
      :                          @5364
 68374: 64 56                    s1 = s0
 68376: aa 95 1d                 jump @5367 if s0 == a2
      :                          @5365
 68379: ae 86 25                 jump @5369 if s1 >=u a1
      :                          @5366
 68382: 97 69 03                 a2 = s1 << 0x3
 68385: c8 79 09                 a2 = a2 + a0
 68388: 82 9b                    a4 = u64 [a2]
 68390: 7b 3b                    u64 [t1] = a4
 68392: 97 64 01                 t2 = s1 << 0x1
 68395: 95 45 01                 s0 = t2 + 0x1
 68398: 7b 92                    u64 [a2] = t0
 68400: 64 69                    a2 = s1
 68402: ac a5 a1                 jump @5357 if s0 <u a3
      :                          @5367
 68405: 82 15 08                 s0 = u64 [sp + 0x8]
 68408: 82 16                    s1 = u64 [sp]
 68410: 95 11 10                 sp = sp + 0x10
 68413: 32 00                    ret
      :                          @5368
 68415: 00                       trap
      :                          @5369
 68416: 00                       trap
      :                          @5370
 68417: 00                       trap
      :                          @5371
 68418: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 68421: 7b 10 48                 u64 [sp + 0x48] = ra
 68424: 7b 15 40                 u64 [sp + 0x40] = s0
 68427: 7b 16 38                 u64 [sp + 0x38] = s1
 68430: 64 92                    t0 = a2
 68432: 82 19 50                 a2 = u64 [sp + 0x50]
 68435: c9 72 00                 ra = t0 - a0
 68438: c9 8c 06                 s1 = a5 - a1
 68441: ca 06 03                 t1 = s1 * ra
 68444: c9 8a 06                 s1 = a3 - a1
 68447: c9 b7 05                 s0 = a0 - a4
 68450: ca 65 05                 s0 = s0 * s1
 68453: c8 53 03                 t1 = t1 + s0
 68456: 7b 13 30                 u64 [sp + 0x30] = t1
 68459: c9 89 05                 s0 = a2 - a1
 68462: ca 05 00                 ra = s0 * ra
 68465: c9 47 05                 s0 = a0 - t2
 68468: ca 65 05                 s0 = s0 * s1
 68471: c8 50 00                 ra = ra + s0
 68474: 7b 14 20                 u64 [sp + 0x20] = t2
 68477: c9 b4 06                 s1 = t2 - a4
 68480: 64 b4                    t2 = a4
 68482: 7b 18 18                 u64 [sp + 0x18] = a1
 68485: c9 c8 05                 s0 = a1 - a5
 68488: ca 56 05                 s0 = s1 * s0
 68491: 7b 19 28                 u64 [sp + 0x28] = a2
 68494: c9 c9 03                 t1 = a2 - a5
 68497: 64 78                    a1 = a0
 68499: c9 7b 0b                 a4 = a4 - a0
 68502: 82 17 30                 a0 = u64 [sp + 0x30]
 68505: ca b3 0b                 a4 = t1 * a4
 68508: c8 5b 09                 a2 = a4 + s0
 68511: 7b 1a 10                 u64 [sp + 0x10] = a3
 68514: c9 ca 0b                 a4 = a3 - a5
 68517: ca b6 0b                 a4 = s1 * a4
 68520: 7b 12 08                 u64 [sp + 0x8] = t0
 68523: c9 24 06                 s1 = t2 - t0
 68526: ca 63 06                 s1 = t1 * s1
 68529: 8f 7a                    a3 = a0 >s 0
 68531: 89 05                    s0 = ra <s 0
 68533: d2 5a 0a                 a3 = a3 & s0
 68536: c8 b6 03                 t1 = s1 + a4
 68539: 52 0a 0d                 jump @5373 if a3 != 0
      :                          @5372
 68542: 89 7a                    a3 = a0 <s 0
 68544: 8f 0b                    a4 = ra >s 0
 68546: d2 ba 0a                 a3 = a3 & a4
 68549: 51 0a 1e                 jump @5376 if a3 == 0
      :                          @5373
 68552: 8f 9a                    a3 = a2 >s 0
 68554: 89 3b                    a4 = t1 <s 0
 68556: d2 ba 0a                 a3 = a3 & a4
 68559: 33 02 01                 t0 = 0x1
 68562: 52 0a f0 00              jump @5385 if a3 != 0
      :                          @5374
 68566: 89 9a                    a3 = a2 <s 0
 68568: 8f 3b                    a4 = t1 >s 0
 68570: d2 ba 0a                 a3 = a3 & a4
 68573: 51 0a 7f                 jump @5380 if a3 == 0
      :                          @5375
 68576: 28 e2 00                 jump @5385
      :                          @5376
 68579: 52 07 3a                 jump @5378 if a0 != 0
      :                          @5377
 68582: 82 17 08                 a0 = u64 [sp + 0x8]
 68585: e5 78 0a                 a3 = mins(a1, a0)
 68588: d9 a4 0a                 a3 = t2 <s a3
 68591: 85 aa ff                 a3 = a3 ^ 0xffffffffffffffff
 68594: e3 78 0b                 a4 = maxs(a1, a0)
 68597: d9 4b 0b                 a4 = a4 <s t2
 68600: e0 ba 0a                 a3 = a3 & ~a4
 68603: 82 16 10                 s1 = u64 [sp + 0x10]
 68606: 82 17 18                 a0 = u64 [sp + 0x18]
 68609: e5 67 0b                 a4 = mins(a0, s1)
 68612: d9 bc 0b                 a4 = a5 <s a4
 68615: 85 bb 01                 a4 = a4 ^ 0x1
 68618: d2 ba 0a                 a3 = a3 & a4
 68621: e3 67 0b                 a4 = maxs(a0, s1)
 68624: d9 cb 0b                 a4 = a4 <s a5
 68627: e0 ba 0a                 a3 = a3 & ~a4
 68630: 33 02 01                 t0 = 0x1
 68633: 52 0a a9 00              jump @5385 if a3 != 0
      :                          @5378
 68637: 52 00 3f                 jump @5380 if ra != 0
      :                          @5379
 68640: 82 17 08                 a0 = u64 [sp + 0x8]
 68643: e5 78 0a                 a3 = mins(a1, a0)
 68646: 82 16 20                 s1 = u64 [sp + 0x20]
 68649: d9 a6 0a                 a3 = s1 <s a3
 68652: 85 aa ff                 a3 = a3 ^ 0xffffffffffffffff
 68655: e3 78 0b                 a4 = maxs(a1, a0)
 68658: d9 6b 0b                 a4 = a4 <s s1
 68661: e0 ba 0a                 a3 = a3 & ~a4
 68664: 82 16 10                 s1 = u64 [sp + 0x10]
 68667: 82 17 18                 a0 = u64 [sp + 0x18]
 68670: e5 67 0b                 a4 = mins(a0, s1)
 68673: 82 15 28                 s0 = u64 [sp + 0x28]
 68676: d9 b5 0b                 a4 = s0 <s a4
 68679: 85 bb 01                 a4 = a4 ^ 0x1
 68682: d2 ba 0a                 a3 = a3 & a4
 68685: e3 67 0b                 a4 = maxs(a0, s1)
 68688: d9 5b 0b                 a4 = a4 <s s0
 68691: e0 ba 0a                 a3 = a3 & ~a4
 68694: 33 02 01                 t0 = 0x1
 68697: 52 0a 69                 jump @5385 if a3 != 0
      :                          @5380
 68700: 52 09 39                 jump @5382 if a2 != 0
      :                          @5381
 68703: 82 1a 20                 a3 = u64 [sp + 0x20]
 68706: e5 a4 09                 a2 = mins(t2, a3)
 68709: d9 98 09                 a2 = a1 <s a2
 68712: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
 68715: e3 a4 0a                 a3 = maxs(t2, a3)
 68718: d9 8a 07                 a0 = a3 <s a1
 68721: e0 79 07                 a0 = a2 & ~a0
 68724: 82 1a 28                 a3 = u64 [sp + 0x28]
 68727: e5 ac 09                 a2 = mins(a5, a3)
 68730: 82 18 18                 a1 = u64 [sp + 0x18]
 68733: d9 98 09                 a2 = a1 <s a2
 68736: 85 99 01                 a2 = a2 ^ 0x1
 68739: d2 97 07                 a0 = a0 & a2
 68742: e3 ac 09                 a2 = maxs(a5, a3)
 68745: d9 89 08                 a1 = a2 <s a1
 68748: e0 87 07                 a0 = a0 & ~a1
 68751: 33 02 01                 t0 = 0x1
 68754: 52 07 30                 jump @5385 if a0 != 0
      :                          @5382
 68757: 52 03 2a                 jump @5384 if t1 != 0
      :                          @5383
 68760: 82 18 20                 a1 = u64 [sp + 0x20]
 68763: e5 84 07                 a0 = mins(t2, a1)
 68766: 82 19 08                 a2 = u64 [sp + 0x8]
 68769: d9 79 07                 a0 = a2 <s a0
 68772: e3 84 08                 a1 = maxs(t2, a1)
 68775: d9 98 08                 a1 = a1 <s a2
 68778: d4 87 07                 a0 = a0 | a1
 68781: 82 1a 28                 a3 = u64 [sp + 0x28]
 68784: e5 ac 08                 a1 = mins(a5, a3)
 68787: 82 19 10                 a2 = u64 [sp + 0x10]
 68790: d9 89 08                 a1 = a2 <s a1
 68793: d4 87 07                 a0 = a0 | a1
 68796: 51 07 16                 jump @5386 if a0 == 0
      :                          @5384
 68799: 33 02                    t0 = 0
 68801: 01                       fallthrough
      :                          @5385
 68802: 64 27                    a0 = t0
 68804: 82 10 48                 ra = u64 [sp + 0x48]
 68807: 82 15 40                 s0 = u64 [sp + 0x40]
 68810: 82 16 38                 s1 = u64 [sp + 0x38]
 68813: 95 11 50                 sp = sp + 0x50
 68816: 32 00                    ret
      :                          @5386
 68818: e3 ac 07                 a0 = maxs(a5, a3)
 68821: d9 97 07                 a0 = a0 <s a2
 68824: 85 72 01                 t0 = a0 ^ 0x1
 68827: 28 e7                    jump @5385
      :                          @5387
 68829: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 68832: 7b 10 58                 u64 [sp + 0x58] = ra
 68835: 7b 15 50                 u64 [sp + 0x50] = s0
 68838: 7b 16 48                 u64 [sp + 0x48] = s1
 68841: 7b 1b 28                 u64 [sp + 0x28] = a4
 68844: 51 08 d6 01              jump @5428 if a1 == 0
      :                          @5388
 68848: 64 80                    ra = a1
 68850: ae 8a d1 01              jump @5429 if a3 >=u a1
      :                          @5389
 68854: 96 ab 18                 a4 = a3 * 0x18
 68857: c8 7b 0b                 a4 = a4 + a0
 68860: 82 b8 10                 a1 = u64 [a4 + 0x10]
 68863: ae 89 c5 01              jump @5430 if a2 >=u a1
      :                          @5390
 68867: 82 b8 08                 a1 = u64 [a4 + 0x8]
 68870: c8 98 08                 a1 = a1 + a2
 68873: 7c 8b                    a4 = u8 [a1]
 68875: 7c 18 28                 a1 = u8 [sp + 0x28]
 68878: aa 8b a4 01              jump @5425 if a4 == a1
      :                          @5391
 68882: 7b 1b 10                 u64 [sp + 0x10] = a4
 68885: 7b 17 18                 u64 [sp + 0x18] = a0
 68888: 82 77 10                 a0 = u64 [a0 + 0x10]
 68891: 7b 17 20                 u64 [sp + 0x20] = a0
 68894: 33 03 c0 22 03           t1 = 0x322c0
 68899: 33 02 00 00 01           t0 = 0x10000
 68904: c8 23 04                 t2 = t1 + t0
 68907: 01                       fallthrough
      :                          @5392
 68908: 82 46                    s1 = u64 [t2]
 68910: 95 6c 10                 a5 = s1 + 0x10
 68913: ac 6c 94 01              jump @5431 if a5 <u s1
      :                          @5393
 68917: 95 c7 08                 a0 = a5 + 0x8
 68920: d8 c7 08                 a1 = a0 <u a5
 68923: d8 72 07                 a0 = t0 <u a0
 68926: d4 87 07                 a0 = a0 | a1
 68929: 52 07 84 01              jump @5431 if a0 != 0
      :                          @5394
 68933: c9 c3 07                 a0 = t1 - a5
 68936: c8 27 07                 a0 = a0 + t0
 68939: 84 78 07                 a1 = a0 & 0x7
 68942: c8 8c 0c                 a5 = a5 + a1
 68945: 01                       fallthrough
      :                          @5395
 68946: 82 45                    s0 = u64 [t2]
 68948: ab 65 d8                 jump @5392 if s0 != s1
      :                          @5396
 68951: 7b 4c                    u64 [t2] = a5
 68953: c9 87 07                 a0 = a0 - a1
 68956: 7b 79                    u64 [a0] = a2
 68958: 7b 7a 08                 u64 [a0 + 0x8] = a3
 68961: 33 0a 01                 a3 = 0x1
 68964: 7b 1a 30                 u64 [sp + 0x30] = a3
 68967: 7b 17 38                 u64 [sp + 0x38] = a0
 68970: 33 04 18                 t2 = 0x18
 68973: 7b 10 08                 u64 [sp + 0x8] = ra
 68976: 82 12 18                 t0 = u64 [sp + 0x18]
 68979: 82 13 10                 t1 = u64 [sp + 0x10]
 68982: 28 1d                    jump @5399
      :                          @5397
 68984: 82 17 38                 a0 = u64 [sp + 0x38]
 68987: 97 89 04                 a2 = a1 << 0x4
 68990: c8 79 09                 a2 = a2 + a0
 68993: 7b 96                    u64 [a2] = s1
 68995: 7b 95 08                 u64 [a2 + 0x8] = s0
 68998: 95 88 01                 a1 = a1 + 0x1
 69001: 7b 18 40                 u64 [sp + 0x40] = a1
 69004: 01                       fallthrough
      :                          @5398
 69005: 64 8a                    a3 = a1
 69007: 51 08 f1 00              jump @5418 if a1 == 0
      :                          @5399
 69011: 95 a8 ff                 a1 = a3 + 0xffffffffffffffff
 69014: 7b 18 40                 u64 [sp + 0x40] = a1
 69017: 97 8b 04                 a4 = a1 << 0x4
 69020: c8 b7 09                 a2 = a0 + a4
 69023: 82 95 08                 s0 = u64 [a2 + 0x8]
 69026: ae 05 1e 01              jump @5426 if s0 >=u ra
      :                          @5400
 69030: 82 96                    s1 = u64 [a2]
 69032: ca 45 0c                 a5 = s0 * t2
 69035: c8 2c 0c                 a5 = a5 + t0
 69038: 82 c9 10                 a2 = u64 [a5 + 0x10]
 69041: ae 96 10 01              jump @5427 if s1 >=u a2
      :                          @5401
 69045: 82 c9 08                 a2 = u64 [a5 + 0x8]
 69048: c8 69 09                 a2 = a2 + s1
 69051: 7c 9c                    a5 = u8 [a2]
 69053: ab 3c d0                 jump @5398 if a5 != t1
      :                          @5402
 69056: 82 1c 28                 a5 = u64 [sp + 0x28]
 69059: 78 9c                    u8 [a2] = a5
 69061: 51 06 14                 jump @5404 if s1 == 0
      :                          @5403
 69064: 95 68 ff                 a1 = s1 + 0xffffffffffffffff
 69067: c8 7b 0b                 a4 = a4 + a0
 69070: 7b b8                    u64 [a4] = a1
 69072: 7b b5 08                 u64 [a4 + 0x8] = s0
 69075: 7b 1a 40                 u64 [sp + 0x40] = a3
 69078: 64 a8                    a1 = a3
 69080: 01                       fallthrough
      :                          @5404
 69081: 95 6a 01                 a3 = s1 + 0x1
 69084: 82 19 20                 a2 = u64 [sp + 0x20]
 69087: ae 9a 3c                 jump @5409 if a3 >=u a2
      :                          @5405
 69090: 82 19 30                 a2 = u64 [sp + 0x30]
 69093: ab 98 24                 jump @5408 if a1 != a2
      :                          @5406
 69096: 95 17 30                 a0 = sp + 0x30
 69099: 7b 1a                    u64 [sp] = a3
 69101: 50 20 76 03 13 46 ff     ra = 886, jump @1605
      :                          @5407 [@dyn 443]
 69108: 82 1a                    a3 = u64 [sp]
 69110: 33 04 18                 t2 = 0x18
 69113: 82 13 10                 t1 = u64 [sp + 0x10]
 69116: 82 12 18                 t0 = u64 [sp + 0x18]
 69119: 82 10 08                 ra = u64 [sp + 0x8]
 69122: 82 18 40                 a1 = u64 [sp + 0x40]
 69125: 82 17 38                 a0 = u64 [sp + 0x38]
 69128: 01                       fallthrough
      :                          @5408
 69129: 97 89 04                 a2 = a1 << 0x4
 69132: c8 79 09                 a2 = a2 + a0
 69135: 7b 9a                    u64 [a2] = a3
 69137: 7b 95 08                 u64 [a2 + 0x8] = s0
 69140: 95 88 01                 a1 = a1 + 0x1
 69143: 7b 18 40                 u64 [sp + 0x40] = a1
 69146: 01                       fallthrough
      :                          @5409
 69147: 51 05 3b                 jump @5414 if s0 == 0
      :                          @5410
 69150: 82 17 30                 a0 = u64 [sp + 0x30]
 69153: ab 78 1d                 jump @5413 if a1 != a0
      :                          @5411
 69156: 95 17 30                 a0 = sp + 0x30
 69159: 50 20 78 03 d9 45 ff     ra = 888, jump @1605
      :                          @5412 [@dyn 444]
 69166: 33 04 18                 t2 = 0x18
 69169: 82 13 10                 t1 = u64 [sp + 0x10]
 69172: 82 12 18                 t0 = u64 [sp + 0x18]
 69175: 82 10 08                 ra = u64 [sp + 0x8]
 69178: 82 18 40                 a1 = u64 [sp + 0x40]
 69181: 01                       fallthrough
      :                          @5413
 69182: 82 17 38                 a0 = u64 [sp + 0x38]
 69185: 95 59 ff                 a2 = s0 + 0xffffffffffffffff
 69188: 97 8a 04                 a3 = a1 << 0x4
 69191: c8 7a 0a                 a3 = a3 + a0
 69194: 7b a6                    u64 [a3] = s1
 69196: 7b a9 08                 u64 [a3 + 0x8] = a2
 69199: 95 88 01                 a1 = a1 + 0x1
 69202: 7b 18 40                 u64 [sp + 0x40] = a1
 69205: 01                       fallthrough
      :                          @5414
 69206: 95 55 01                 s0 = s0 + 0x1
 69209: ae 05 34 ff              jump @5398 if s0 >=u ra
      :                          @5415
 69213: 82 17 30                 a0 = u64 [sp + 0x30]
 69216: ab 78 18 ff              jump @5397 if a1 != a0
      :                          @5416
 69220: 95 17 30                 a0 = sp + 0x30
 69223: 50 20 7a 03 99 45 ff     ra = 890, jump @1605
      :                          @5417 [@dyn 445]
 69230: 33 04 18                 t2 = 0x18
 69233: 82 13 10                 t1 = u64 [sp + 0x10]
 69236: 82 12 18                 t0 = u64 [sp + 0x18]
 69239: 82 10 08                 ra = u64 [sp + 0x8]
 69242: 82 18 40                 a1 = u64 [sp + 0x40]
 69245: 28 fb fe                 jump @5397
      :                          @5418
 69248: 82 18 30                 a1 = u64 [sp + 0x30]
 69251: 51 08 2f                 jump @5425 if a1 == 0
      :                          @5419
 69254: 33 07 00 10              a0 = 0x1000
 69258: ac 87 28                 jump @5425 if a0 <u a1
      :                          @5420
 69261: 82 17 38                 a0 = u64 [sp + 0x38]
 69264: 97 88 04                 a1 = a1 << 0x4
 69267: 33 09 c0 22 03           a2 = 0x322c0
 69272: 95 99 00 00 01           a2 = a2 + 0x10000
 69277: 01                       fallthrough
      :                          @5421
 69278: 82 9a                    a3 = u64 [a2]
 69280: c9 a9 0b                 a4 = a2 - a3
 69283: ab 7b 0f                 jump @5425 if a4 != a0
      :                          @5422
 69286: c9 8a 0b                 a4 = a3 - a1
 69289: 01                       fallthrough
      :                          @5423
 69290: 82 9c                    a5 = u64 [a2]
 69292: ab ac f2                 jump @5421 if a5 != a3
      :                          @5424
 69295: 7b 9b                    u64 [a2] = a4
 69297: 01                       fallthrough
      :                          @5425
 69298: 82 10 58                 ra = u64 [sp + 0x58]
 69301: 82 15 50                 s0 = u64 [sp + 0x50]
 69304: 82 16 48                 s1 = u64 [sp + 0x48]
 69307: 95 11 60                 sp = sp + 0x60
 69310: 32 00                    ret
      :                          @5426
 69312: 00                       trap
      :                          @5427
 69313: 00                       trap
      :                          @5428
 69314: 00                       trap
      :                          @5429
 69315: 00                       trap
      :                          @5430
 69316: 00                       trap
      :                          @5431
 69317: 00                       trap
      :                          @5432
 69318: 82 9a                    a3 = u64 [a2]
 69320: 95 a6 14                 s1 = a3 + 0x14
 69323: ac a6 f0 03              jump @5497 if s1 <u a3
      :                          @5433
 69327: 95 6b 01                 a4 = s1 + 0x1
 69330: 88 bc 01                 a5 = a4 <u 0x1
 69333: d8 b8 0b                 a4 = a1 <u a4
 69336: d4 cb 0b                 a4 = a4 | a5
 69339: 52 0b e0 03              jump @5497 if a4 != 0
      :                          @5434
 69343: 82 9b                    a4 = u64 [a2]
 69345: ab ab e5                 jump @5432 if a4 != a3
      :                          @5435
 69348: 7b 96                    u64 [a2] = s1
 69350: 33 0c                    a5 = 0
 69352: 7b 17                    u64 [sp] = a0
 69354: 33 05 c0 22 03           s0 = 0x322c0
 69359: 7b 15 30                 u64 [sp + 0x30] = s0
 69362: 95 55 00 00 01           s0 = s0 + 0x10000
 69367: c9 65 05                 s0 = s0 - s1
 69370: 33 09 14                 a2 = 0x14
 69373: 33 06 14                 s1 = 0x14
 69376: 64 57                    a0 = s0
 69378: 33 08                    a1 = 0
 69380: 50 20 7c 03 55 fc 01     ra = 892, jump @13675
      :                          @5436 [@dyn 446]
 69387: 7b 16 88 00              u64 [sp + 0x88] = s1
 69391: 7b 15 90 00              u64 [sp + 0x90] = s0
 69395: 7b 16 98 00              u64 [sp + 0x98] = s1
 69399: 95 17 70                 a0 = sp + 0x70
 69402: 95 18 88 00              a1 = sp + 0x88
 69406: 33 09 14                 a2 = 0x14
 69409: 50 20 7e 03 a7 55 ff     ra = 894, jump @1895
      :                          @5437 [@dyn 447]
 69416: 33 02                    t0 = 0
 69418: 82 13 38                 t1 = u64 [sp + 0x38]
 69421: 82 39                    a2 = u64 [t1]
 69423: 82 3a 08                 a3 = u64 [t1 + 0x8]
 69426: 82 37 10                 a0 = u64 [t1 + 0x10]
 69429: 82 3b 18                 a4 = u64 [t1 + 0x18]
 69432: 82 18 80 00              a1 = u64 [sp + 0x80]
 69436: 7b 18 10                 u64 [sp + 0x10] = a1
 69439: 82 18 78                 a1 = u64 [sp + 0x78]
 69442: 7b 18 08                 u64 [sp + 0x8] = a1
 69445: 7b 19 20                 u64 [sp + 0x20] = a2
 69448: c9 97 07                 a0 = a0 - a2
 69451: 7b 17 28                 u64 [sp + 0x28] = a0
 69454: 7b 1a 50                 u64 [sp + 0x50] = a3
 69457: 7b 1b 48                 u64 [sp + 0x48] = a4
 69460: c9 ab 0b                 a4 = a4 - a3
 69463: 7b 1b 40                 u64 [sp + 0x40] = a4
 69466: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 69476: 7b 17 60                 u64 [sp + 0x60] = a0
 69479: 28 0d                    jump @5439
      :                          @5438
 69481: 95 22 01                 t0 = t0 + 0x1
 69484: 82 13 38                 t1 = u64 [sp + 0x38]
 69487: 51 12 14 24 03           jump @5494 if t0 == 20
      :                          @5439
 69492: 49 21 88 00              u64 [sp + 136] = 0
 69496: 49 21 90 00 08           u64 [sp + 144] = 0x8
 69501: 82 17 50                 a0 = u64 [sp + 0x50]
 69504: d9 72 08                 a1 = t0 <s a0
 69507: 82 17 48                 a0 = u64 [sp + 0x48]
 69510: d9 72 07                 a0 = t0 <s a0
 69513: e0 87 09                 a2 = a0 & ~a1
 69516: 49 21 98 00              u64 [sp + 152] = 0
 69520: 7b 12 58                 u64 [sp + 0x58] = t0
 69523: 52 09 0c                 jump @5441 if a2 != 0
      :                          @5440
 69526: 85 88 01                 a1 = a1 ^ 0x1
 69529: d4 87 07                 a0 = a0 | a1
 69532: 52 07 71                 jump @5448 if a0 != 0
      :                          @5441
 69535: 82 17 50                 a0 = u64 [sp + 0x50]
 69538: 82 18 48                 a1 = u64 [sp + 0x48]
 69541: aa 78 14 03              jump @5495 if a1 == a0
      :                          @5442
 69545: 82 17 50                 a0 = u64 [sp + 0x50]
 69548: c9 72 07                 a0 = t0 - a0
 69551: 82 18 28                 a1 = u64 [sp + 0x28]
 69554: ca 78 05                 s0 = a1 * a0
 69557: 82 17 60                 a0 = u64 [sp + 0x60]
 69560: d3 57 07                 a0 = a0 ^ s0
 69563: 82 18 40                 a1 = u64 [sp + 0x40]
 69566: e1 87 07                 a0 = a0 | ~a1
 69569: 51 07 f9 02              jump @5496 if a0 == 0
      :                          @5443
 69573: 82 17 88 00              a0 = u64 [sp + 0x88]
 69577: 51 07 0a                 jump @5445 if a0 == 0
      :                          @5444
 69580: 33 08                    a1 = 0
 69582: 33 07 08                 a0 = 0x8
 69585: 28 1f                    jump @5447
      :                          @5445
 69587: 95 17 88 00              a0 = sp + 0x88
 69591: 33 08                    a1 = 0
 69593: 64 36                    s1 = t1
 69595: 50 20 80 03 2c 43 ff     ra = 896, jump @1581
      :                          @5446 [@dyn 448]
 69602: 64 63                    t1 = s1
 69604: 82 12 58                 t0 = u64 [sp + 0x58]
 69607: 82 18 98 00              a1 = u64 [sp + 0x98]
 69611: 82 17 90 00              a0 = u64 [sp + 0x90]
 69615: 01                       fallthrough
      :                          @5447
 69616: 82 19 40                 a2 = u64 [sp + 0x40]
 69619: cc 95 09                 a2 = s0 /s a2
 69622: 82 1a 20                 a3 = u64 [sp + 0x20]
 69625: c8 a9 09                 a2 = a2 + a3
 69628: 97 8a 03                 a3 = a1 << 0x3
 69631: c8 7a 0a                 a3 = a3 + a0
 69634: 7b a9                    u64 [a3] = a2
 69636: 95 86 01                 s1 = a1 + 0x1
 69639: 7b 16 98 00              u64 [sp + 0x98] = s1
 69643: 28 08                    jump @5449
      :                          @5448
 69645: 33 06                    s1 = 0
 69647: 33 07 08                 a0 = 0x8
 69650: 01                       fallthrough
      :                          @5449
 69651: 82 38 18                 a1 = u64 [t1 + 0x18]
 69654: 82 35 28                 s0 = u64 [t1 + 0x28]
 69657: 82 34 10                 t2 = u64 [t1 + 0x10]
 69660: 82 39 20                 a2 = u64 [t1 + 0x20]
 69663: d9 82 0a                 a3 = t0 <s a1
 69666: d9 52 0b                 a4 = t0 <s s0
 69669: e0 ab 0c                 a5 = a4 & ~a3
 69672: 52 0c 0c                 jump @5451 if a5 != 0
      :                          @5450
 69675: 85 aa 01                 a3 = a3 ^ 0x1
 69678: d4 ba 0a                 a3 = a3 | a4
 69681: 52 0a 66                 jump @5457 if a3 != 0
      :                          @5451
 69684: aa 85 85 02              jump @5495 if s0 == a1
      :                          @5452
 69688: c9 82 0a                 a3 = t0 - a1
 69691: c9 49 09                 a2 = a2 - t2
 69694: ca a9 09                 a2 = a2 * a3
 69697: c9 85 05                 s0 = s0 - a1
 69700: 82 18 60                 a1 = u64 [sp + 0x60]
 69703: d3 98 08                 a1 = a1 ^ a2
 69706: e1 58 08                 a1 = a1 | ~s0
 69709: 51 08 6d 02              jump @5496 if a1 == 0
      :                          @5453
 69713: 82 18 88 00              a1 = u64 [sp + 0x88]
 69717: ab 86 2c                 jump @5456 if s1 != a1
      :                          @5454
 69720: 95 17 88 00              a0 = sp + 0x88
 69724: 64 68                    a1 = s1
 69726: 64 36                    s1 = t1
 69728: 7b 14 68                 u64 [sp + 0x68] = t2
 69731: 7b 19 18                 u64 [sp + 0x18] = a2
 69734: 50 20 82 03 a1 42 ff     ra = 898, jump @1581
      :                          @5455 [@dyn 449]
 69741: 82 19 18                 a2 = u64 [sp + 0x18]
 69744: 82 14 68                 t2 = u64 [sp + 0x68]
 69747: 64 63                    t1 = s1
 69749: 82 12 58                 t0 = u64 [sp + 0x58]
 69752: 82 16 98 00              s1 = u64 [sp + 0x98]
 69756: 82 17 90 00              a0 = u64 [sp + 0x90]
 69760: 01                       fallthrough
      :                          @5456
 69761: cc 59 08                 a1 = a2 /s s0
 69764: c8 48 08                 a1 = a1 + t2
 69767: 97 69 03                 a2 = s1 << 0x3
 69770: c8 79 09                 a2 = a2 + a0
 69773: 7b 98                    u64 [a2] = a1
 69775: 95 66 01                 s1 = s1 + 0x1
 69778: 7b 16 98 00              u64 [sp + 0x98] = s1
 69782: 01                       fallthrough
      :                          @5457
 69783: 82 38 28                 a1 = u64 [t1 + 0x28]
 69786: 82 35 38                 s0 = u64 [t1 + 0x38]
 69789: 82 34 20                 t2 = u64 [t1 + 0x20]
 69792: 82 39 30                 a2 = u64 [t1 + 0x30]
 69795: d9 82 0a                 a3 = t0 <s a1
 69798: d9 52 0b                 a4 = t0 <s s0
 69801: e0 ab 0c                 a5 = a4 & ~a3
 69804: 52 0c 0c                 jump @5459 if a5 != 0
      :                          @5458
 69807: 85 aa 01                 a3 = a3 ^ 0x1
 69810: d4 ba 0a                 a3 = a3 | a4
 69813: 52 0a 66                 jump @5465 if a3 != 0
      :                          @5459
 69816: aa 85 01 02              jump @5495 if s0 == a1
      :                          @5460
 69820: c9 82 0a                 a3 = t0 - a1
 69823: c9 49 09                 a2 = a2 - t2
 69826: ca a9 09                 a2 = a2 * a3
 69829: c9 85 05                 s0 = s0 - a1
 69832: 82 18 60                 a1 = u64 [sp + 0x60]
 69835: d3 98 08                 a1 = a1 ^ a2
 69838: e1 58 08                 a1 = a1 | ~s0
 69841: 51 08 e9 01              jump @5496 if a1 == 0
      :                          @5461
 69845: 82 18 88 00              a1 = u64 [sp + 0x88]
 69849: ab 86 2c                 jump @5464 if s1 != a1
      :                          @5462
 69852: 95 17 88 00              a0 = sp + 0x88
 69856: 64 68                    a1 = s1
 69858: 64 36                    s1 = t1
 69860: 7b 14 68                 u64 [sp + 0x68] = t2
 69863: 7b 19 18                 u64 [sp + 0x18] = a2
 69866: 50 20 84 03 1d 42 ff     ra = 900, jump @1581
      :                          @5463 [@dyn 450]
 69873: 82 19 18                 a2 = u64 [sp + 0x18]
 69876: 82 14 68                 t2 = u64 [sp + 0x68]
 69879: 64 63                    t1 = s1
 69881: 82 12 58                 t0 = u64 [sp + 0x58]
 69884: 82 16 98 00              s1 = u64 [sp + 0x98]
 69888: 82 17 90 00              a0 = u64 [sp + 0x90]
 69892: 01                       fallthrough
      :                          @5464
 69893: cc 59 08                 a1 = a2 /s s0
 69896: c8 48 08                 a1 = a1 + t2
 69899: 97 69 03                 a2 = s1 << 0x3
 69902: c8 79 09                 a2 = a2 + a0
 69905: 7b 98                    u64 [a2] = a1
 69907: 95 66 01                 s1 = s1 + 0x1
 69910: 7b 16 98 00              u64 [sp + 0x98] = s1
 69914: 01                       fallthrough
      :                          @5465
 69915: 82 38 38                 a1 = u64 [t1 + 0x38]
 69918: 82 35 08                 s0 = u64 [t1 + 0x8]
 69921: 82 34 30                 t2 = u64 [t1 + 0x30]
 69924: 82 39                    a2 = u64 [t1]
 69926: d9 82 0a                 a3 = t0 <s a1
 69929: d9 52 0b                 a4 = t0 <s s0
 69932: e0 ab 0c                 a5 = a4 & ~a3
 69935: 52 0c 0c                 jump @5467 if a5 != 0
      :                          @5466
 69938: 85 aa 01                 a3 = a3 ^ 0x1
 69941: d4 ba 0a                 a3 = a3 | a4
 69944: 52 0a 5d                 jump @5473 if a3 != 0
      :                          @5467
 69947: aa 85 7e 01              jump @5495 if s0 == a1
      :                          @5468
 69951: c9 82 0a                 a3 = t0 - a1
 69954: c9 49 09                 a2 = a2 - t2
 69957: ca a9 09                 a2 = a2 * a3
 69960: c9 85 05                 s0 = s0 - a1
 69963: 82 18 60                 a1 = u64 [sp + 0x60]
 69966: d3 98 08                 a1 = a1 ^ a2
 69969: e1 58 08                 a1 = a1 | ~s0
 69972: 51 08 66 01              jump @5496 if a1 == 0
      :                          @5469
 69976: 82 18 88 00              a1 = u64 [sp + 0x88]
 69980: ab 86 23                 jump @5472 if s1 != a1
      :                          @5470
 69983: 95 17 88 00              a0 = sp + 0x88
 69987: 64 68                    a1 = s1
 69989: 7b 14 68                 u64 [sp + 0x68] = t2
 69992: 64 96                    s1 = a2
 69994: 50 20 86 03 9d 41 ff     ra = 902, jump @1581
      :                          @5471 [@dyn 451]
 70001: 64 69                    a2 = s1
 70003: 82 14 68                 t2 = u64 [sp + 0x68]
 70006: 82 16 98 00              s1 = u64 [sp + 0x98]
 70010: 82 17 90 00              a0 = u64 [sp + 0x90]
 70014: 01                       fallthrough
      :                          @5472
 70015: cc 59 08                 a1 = a2 /s s0
 70018: c8 48 08                 a1 = a1 + t2
 70021: 97 69 03                 a2 = s1 << 0x3
 70024: c8 97 07                 a0 = a0 + a2
 70027: 7b 78                    u64 [a0] = a1
 70029: 95 66 01                 s1 = s1 + 0x1
 70032: 7b 16 98 00              u64 [sp + 0x98] = s1
 70036: 01                       fallthrough
      :                          @5473
 70037: 82 17 90 00              a0 = u64 [sp + 0x90]
 70041: 68 68                    a1 = clz s1
 70043: 9a 8a 40                 a3 = 0x40 - a1
 70046: 7b 17 68                 u64 [sp + 0x68] = a0
 70049: 64 68                    a1 = s1
 70051: 33 09                    a2 = 0
 70053: 50 20 88 03 e7 19 ff     ra = 904, jump @879
      :                          @5474 [@dyn 452]
 70060: 82 12 58                 t0 = u64 [sp + 0x58]
 70063: 33 03 01                 t1 = 0x1
 70066: 33 04 13                 t2 = 0x13
 70069: ae 63 a1 00              jump @5485 if t1 >=u s1
      :                          @5475
 70073: 64 60                    ra = s1
 70075: 82 17 10                 a0 = u64 [sp + 0x10]
 70078: ae 72 6c                 jump @5482 if t0 >=u a0
      :                          @5476
 70081: 33 09                    a2 = 0
 70083: 96 27 18                 a0 = t0 * 0x18
 70086: 82 18 08                 a1 = u64 [sp + 0x8]
 70089: c8 87 07                 a0 = a0 + a1
 70092: 95 7a 10                 a3 = a0 + 0x10
 70095: 95 7b 08                 a4 = a0 + 0x8
 70098: 33 07 01                 a0 = 0x1
 70101: 28 0b                    jump @5478
      :                          @5477
 70103: 95 99 02                 a2 = a2 + 0x2
 70106: 86 97 01                 a0 = a2 | 0x1
 70109: ae 07 79                 jump @5485 if a0 >=u ra
      :                          @5478
 70112: 97 98 03                 a1 = a2 << 0x3
 70115: 82 1c 68                 a5 = u64 [sp + 0x68]
 70118: c8 c8 08                 a1 = a1 + a5
 70121: 82 88                    a1 = u64 [a1]
 70123: 97 77 03                 a0 = a0 << 0x3
 70126: c8 c7 07                 a0 = a0 + a5
 70129: 82 7c                    a5 = u64 [a0]
 70131: 3e 02 00 00 03           u64 [0x30000] = t0
 70136: 8f 82                    t0 = a1 >s 0
 70138: 64 87                    a0 = a1
 70140: 93 27                    a0 = 0 if t0 == 0
 70142: 3a 02 00 00 03           t0 = u64 [0x30000]
 70147: e5 4c 0c                 a5 = mins(a5, t2)
 70150: ac 7c d1                 jump @5477 if a5 <u a0
      :                          @5479
 70153: 82 a8                    a1 = u64 [a3]
 70155: ae 87 b2 00              jump @5499 if a0 >=u a1
      :                          @5480
 70159: 82 b8                    a1 = u64 [a4]
 70161: d8 c7 05                 s0 = a0 <u a5
 70164: 85 56 01                 s1 = s0 ^ 0x1
 70167: c8 78 08                 a1 = a1 + a0
 70170: c8 57 07                 a0 = a0 + s0
 70173: d8 7c 05                 s0 = a5 <u a0
 70176: d4 65 05                 s0 = s0 | s1
 70179: 78 83                    u8 [a1] = t1
 70181: 51 05 e4                 jump @5479 if s0 == 0
      :                          @5481
 70184: 28 af                    jump @5477
      :                          @5482
 70186: 82 17 68                 a0 = u64 [sp + 0x68]
 70189: 95 77 08                 a0 = a0 + 0x8
 70192: 33 08 01                 a1 = 0x1
 70195: 01                       fallthrough
      :                          @5483
 70196: 82 79 f8                 a2 = u64 [a0 + 0xfffffffffffffff8]
 70199: 82 7a                    a3 = u64 [a0]
 70201: 3e 02 00 00 03           u64 [0x30000] = t0
 70206: 8f 92                    t0 = a2 >s 0
 70208: 93 29                    a2 = 0 if t0 == 0
 70210: 3a 02 00 00 03           t0 = u64 [0x30000]
 70215: e5 4a 0a                 a3 = mins(a3, t2)
 70218: ae 9a 72                 jump @5498 if a3 >=u a2
      :                          @5484
 70221: 95 88 02                 a1 = a1 + 0x2
 70224: 95 77 10                 a0 = a0 + 0x10
 70227: ac 08 e1                 jump @5483 if a1 <u ra
      :                          @5485
 70230: 82 17 88 00              a0 = u64 [sp + 0x88]
 70234: 82 16 30                 s1 = u64 [sp + 0x30]
 70237: 33 05 00 00 01           s0 = 0x10000
 70242: 51 07 07 fd              jump @5438 if a0 == 0
      :                          @5486
 70246: 56 27 00 20 03 fd        jump @5438 if a0 >u 8192
      :                          @5487
 70252: 97 77 03                 a0 = a0 << 0x3
 70255: 01                       fallthrough
      :                          @5488
 70256: c8 56 09                 a2 = s1 + s0
 70259: 82 98                    a1 = u64 [a2]
 70261: c9 89 0a                 a3 = a2 - a1
 70264: 82 1b 68                 a4 = u64 [sp + 0x68]
 70267: ab ba ee fc              jump @5438 if a3 != a4
      :                          @5489
 70271: c9 78 0a                 a3 = a1 - a0
 70274: 01                       fallthrough
      :                          @5490
 70275: 82 9b                    a4 = u64 [a2]
 70277: ab 8b eb                 jump @5488 if a4 != a1
      :                          @5491
 70280: 7b 9a                    u64 [a2] = a3
 70282: 33 0c                    a5 = 0
 70284: 01                       fallthrough
      :                          @5492
 70285: ab 8b e3                 jump @5488 if a4 != a1
      :                          @5493
 70288: 28 d9 fc                 jump @5438
      :                          @5494
 70291: 82 17 80 00              a0 = u64 [sp + 0x80]
 70295: 82 18 78                 a1 = u64 [sp + 0x78]
 70298: 82 19 70                 a2 = u64 [sp + 0x70]
 70301: 82 1a                    a3 = u64 [sp]
 70303: 7b a7 10                 u64 [a3 + 0x10] = a0
 70306: 7b a8 08                 u64 [a3 + 0x8] = a1
 70309: 7b a9                    u64 [a3] = a2
 70311: 82 10 b0 00              ra = u64 [sp + 0xb0]
 70315: 82 15 a8 00              s0 = u64 [sp + 0xa8]
 70319: 82 16 a0 00              s1 = u64 [sp + 0xa0]
 70323: 95 11 b8 00              sp = sp + 0xb8
 70327: 32 00                    ret
      :                          @5495
 70329: 00                       trap
      :                          @5496
 70330: 00                       trap
      :                          @5497
 70331: 00                       trap
      :                          @5498
 70332: 00                       trap
      :                          @5499
 70333: 00                       trap
      :                          @5500
 70334: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 70337: 7b 10 30                 u64 [sp + 0x30] = ra
 70340: 7b 15 28                 u64 [sp + 0x28] = s0
 70343: 7b 16 20                 u64 [sp + 0x20] = s1
 70346: 64 9c                    a5 = a2
 70348: 64 84                    t2 = a1
 70350: 89 88 10                 a1 = a1 <s 0x10
 70353: 85 88 01                 a1 = a1 ^ 0x1
 70356: 97 88 01                 a1 = a1 << 0x1
 70359: 89 99 10                 a2 = a2 <s 0x10
 70362: 85 99 01                 a2 = a2 ^ 0x1
 70365: 97 99 03                 a2 = a2 << 0x3
 70368: d4 98 00                 ra = a1 | a2
 70371: 89 a8 10                 a1 = a3 <s 0x10
 70374: 85 88 01                 a1 = a1 ^ 0x1
 70377: 97 88 01                 a1 = a1 << 0x1
 70380: 89 b9 10                 a2 = a4 <s 0x10
 70383: 85 99 01                 a2 = a2 ^ 0x1
 70386: 97 99 03                 a2 = a2 << 0x3
 70389: d4 98 02                 t0 = a1 | a2
 70392: d4 20 08                 a1 = ra | t0
 70395: 7b 17                    u64 [sp] = a0
 70397: 51 08 11 01              jump @5520 if a1 == 0
      :                          @5501
 70401: 88 08 01                 a1 = ra <u 0x1
 70404: 14 03 00 00 00 00 00 00 00 80 t1 = 0x8000000000000000
 70414: 7b 13 08                 u64 [sp + 0x8] = t1
 70417: 28 52                    jump @5504
      :                          @5502
 70419: c8 48 08                 a1 = a1 + t2
 70422: 89 87                    a0 = a1 <s 0
 70424: 89 8b 10                 a4 = a1 <s 0x10
 70427: 85 bb 01                 a4 = a4 ^ 0x1
 70430: 97 bb 01                 a4 = a4 << 0x1
 70433: 94 7b 01                 a4 = 0x1 if a0 != 0
 70436: 01                       fallthrough
      :                          @5503
 70437: 83 07                    i32 a0 = ra + 0
 70439: 83 66                    i32 s1 = s1 + 0
 70441: d3 67 07                 a0 = a0 ^ s1
 70444: 89 96                    s1 = a2 <s 0
 70446: 89 93 10                 t1 = a2 <s 0x10
 70449: 85 35 01                 s0 = t1 ^ 0x1
 70452: 97 55 03                 s0 = s0 << 0x3
 70455: 94 65 04                 s0 = 0x4 if s1 != 0
 70458: d4 5b 0b                 a4 = a4 | s0
 70461: db 7b 02                 t0 = a4 if a0 != 0
 70464: da 7b 00                 ra = a4 if a0 == 0
 70467: 82 1b 18                 a4 = u64 [sp + 0x18]
 70470: db 79 0b                 a4 = a2 if a0 != 0
 70473: 82 1c 10                 a5 = u64 [sp + 0x10]
 70476: da 79 0c                 a5 = a2 if a0 == 0
 70479: db 78 0a                 a3 = a1 if a0 != 0
 70482: da 78 04                 t2 = a1 if a0 == 0
 70485: 83 07                    i32 a0 = ra + 0
 70487: d4 20 08                 a1 = ra | t0
 70490: 83 89                    i32 a2 = a1 + 0
 70492: 88 78 01                 a1 = a0 <u 0x1
 70495: 51 09 af 00              jump @5520 if a2 == 0
      :                          @5504
 70499: d2 20 07                 a0 = ra & t0
 70502: 83 77                    i32 a0 = a0 + 0
 70504: 52 07 b9 00              jump @5521 if a0 != 0
      :                          @5505
 70508: 84 88 01                 a1 = a1 & 0x1
 70511: 64 26                    s1 = t0
 70513: da 80 06                 s1 = ra if a1 == 0
 70516: 84 67 08                 a0 = s1 & 0x8
 70519: c9 cb 05                 s0 = a4 - a5
 70522: 7b 1b 18                 u64 [sp + 0x18] = a4
 70525: 7b 1c 10                 u64 [sp + 0x10] = a5
 70528: 52 07 2c                 jump @5511 if a0 != 0
      :                          @5506
 70531: 84 67 04                 a0 = s1 & 0x4
 70534: 52 07 48                 jump @5514 if a0 != 0
      :                          @5507
 70537: 84 67 02                 a0 = s1 & 0x2
 70540: c9 4a 09                 a2 = a3 - t2
 70543: 52 07 5c                 jump @5517 if a0 != 0
      :                          @5508
 70546: aa 4a a4 00              jump @5523 if a3 == t2
      :                          @5509
 70550: ca 54 07                 a0 = t2 * s0
 70553: 82 18 08                 a1 = u64 [sp + 0x8]
 70556: d3 78 08                 a1 = a1 ^ a0
 70559: e1 98 08                 a1 = a1 | ~a2
 70562: 51 08 95 00              jump @5524 if a1 == 0
      :                          @5510
 70566: 33 08                    a1 = 0
 70568: 9a 77                    a0 = -a0
 70570: 28 59                    jump @5519
      :                          @5511
 70572: aa cb 8a 00              jump @5523 if a4 == a5
      :                          @5512
 70576: c9 4a 07                 a0 = a3 - t2
 70579: 9a c8 0f                 a1 = 0xf - a5
 70582: ca 87 07                 a0 = a0 * a1
 70585: 82 18 08                 a1 = u64 [sp + 0x8]
 70588: d3 78 08                 a1 = a1 ^ a0
 70591: e1 58 08                 a1 = a1 | ~s0
 70594: 51 08 75                 jump @5524 if a1 == 0
      :                          @5513
 70597: cc 57 08                 a1 = a0 /s s0
 70600: 33 09 0f                 a2 = 0xf
 70603: 28 48 ff                 jump @5502
      :                          @5514
 70606: aa cb 68                 jump @5523 if a4 == a5
      :                          @5515
 70609: c9 a4 07                 a0 = t2 - a3
 70612: ca c7 07                 a0 = a0 * a5
 70615: 82 18 08                 a1 = u64 [sp + 0x8]
 70618: d3 78 08                 a1 = a1 ^ a0
 70621: e1 58 08                 a1 = a1 | ~s0
 70624: 51 08 57                 jump @5524 if a1 == 0
      :                          @5516
 70627: 33 09                    a2 = 0
 70629: cc 57 08                 a1 = a0 /s s0
 70632: 28 2b ff                 jump @5502
      :                          @5517
 70635: aa 4a 4b                 jump @5523 if a3 == t2
      :                          @5518
 70638: 33 08 0f                 a1 = 0xf
 70641: c9 48 07                 a0 = a1 - t2
 70644: ca 57 07                 a0 = a0 * s0
 70647: 82 15 08                 s0 = u64 [sp + 0x8]
 70650: d3 75 05                 s0 = s0 ^ a0
 70653: e1 95 05                 s0 = s0 | ~a2
 70656: 51 05 37                 jump @5524 if s0 == 0
      :                          @5519
 70659: 33 0b                    a4 = 0
 70661: cc 97 09                 a2 = a0 /s a2
 70664: c8 c9 09                 a2 = a2 + a5
 70667: 28 1a ff                 jump @5503
      :                          @5520
 70670: 82 18                    a1 = u64 [sp]
 70672: 7b 84 08                 u64 [a1 + 0x8] = t2
 70675: 7b 8c 10                 u64 [a1 + 0x10] = a5
 70678: 7b 8a 18                 u64 [a1 + 0x18] = a3
 70681: 7b 8b 20                 u64 [a1 + 0x20] = a4
 70684: 33 07 01                 a0 = 0x1
 70687: 28 07                    jump @5522
      :                          @5521
 70689: 33 07                    a0 = 0
 70691: 82 18                    a1 = u64 [sp]
 70693: 01                       fallthrough
      :                          @5522
 70694: 7b 87                    u64 [a1] = a0
 70696: 82 10 30                 ra = u64 [sp + 0x30]
 70699: 82 15 28                 s0 = u64 [sp + 0x28]
 70702: 82 16 20                 s1 = u64 [sp + 0x20]
 70705: 95 11 38                 sp = sp + 0x38
 70708: 32 00                    ret
      :                          @5523
 70710: 00                       trap
      :                          @5524
 70711: 00                       trap
      :                          @5525
 70712: c9 a5 09                 a2 = s0 - a3
 70715: 97 99 01                 a2 = a2 << 0x1
 70718: 95 99 05                 a2 = a2 + 0x5
 70721: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 70724: 01                       fallthrough
      :                          @5526
 70725: c8 9c 0c                 a5 = a5 + a2
 70728: 95 55 01                 s0 = s0 + 0x1
 70731: 95 44 02                 t2 = t2 + 0x2
 70734: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 70737: 82 19 30                 a2 = u64 [sp + 0x30]
 70740: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 70743: 7b 19 30                 u64 [sp + 0x30] = a2
 70746: ad 5a 95 00              jump @5532 if a3 <s s0
      :                          @5527
 70750: 82 19 38                 a2 = u64 [sp + 0x38]
 70753: c9 89 09                 a2 = a2 - a1
 70756: ae 90 5a                 jump @5530 if ra >=u a2
      :                          @5528
 70759: c8 2a 09                 a2 = a3 + t0
 70762: 97 8b 04                 a4 = a1 << 0x4
 70765: c8 7b 0b                 a4 = a4 + a0
 70768: 7b b9 08                 u64 [a4 + 0x8] = a2
 70771: 7b b9 18                 u64 [a4 + 0x18] = a2
 70774: c8 53 09                 a2 = t1 + s0
 70777: 7b b9                    u64 [a4] = a2
 70779: 7b b9 20                 u64 [a4 + 0x20] = a2
 70782: c9 a2 09                 a2 = t0 - a3
 70785: 7b b9 28                 u64 [a4 + 0x28] = a2
 70788: 7b b9 38                 u64 [a4 + 0x38] = a2
 70791: c8 52 09                 a2 = t0 + s0
 70794: 7b b9 48                 u64 [a4 + 0x48] = a2
 70797: 7b b9 58                 u64 [a4 + 0x58] = a2
 70800: c8 3a 09                 a2 = a3 + t1
 70803: 7b b9 40                 u64 [a4 + 0x40] = a2
 70806: 7b b9 60                 u64 [a4 + 0x60] = a2
 70809: c9 a3 09                 a2 = t1 - a3
 70812: 7b b9 50                 u64 [a4 + 0x50] = a2
 70815: 7b b9 70                 u64 [a4 + 0x70] = a2
 70818: 82 19 30                 a2 = u64 [sp + 0x30]
 70821: 7b b9 10                 u64 [a4 + 0x10] = a2
 70824: 7b b9 30                 u64 [a4 + 0x30] = a2
 70827: 7b b6 68                 u64 [a4 + 0x68] = s1
 70830: 7b b6 78                 u64 [a4 + 0x78] = s1
 70833: 95 88 08                 a1 = a1 + 0x8
 70836: 7b 18 48                 u64 [sp + 0x48] = a1
 70839: 59 0c 81                 jump @5525 if a5 >=s 0
      :                          @5529
 70842: 64 49                    a2 = t2
 70844: 28 89                    jump @5526
      :                          @5530
 70846: 95 17 38                 a0 = sp + 0x38
 70849: 33 09 08                 a2 = 0x8
 70852: 7b 1a 28                 u64 [sp + 0x28] = a3
 70855: 7b 1c 20                 u64 [sp + 0x20] = a5
 70858: 7b 14 18                 u64 [sp + 0x18] = t2
 70861: 50 20 8a 03 b3 40 ff     ra = 906, jump @1641
      :                          @5531 [@dyn 453]
 70868: 33 00 07                 ra = 0x7
 70871: 82 14 18                 t2 = u64 [sp + 0x18]
 70874: 82 1c 20                 a5 = u64 [sp + 0x20]
 70877: 82 13 08                 t1 = u64 [sp + 0x8]
 70880: 82 12 10                 t0 = u64 [sp + 0x10]
 70883: 82 1a 28                 a3 = u64 [sp + 0x28]
 70886: 82 18 48                 a1 = u64 [sp + 0x48]
 70889: 82 17 40                 a0 = u64 [sp + 0x40]
 70892: 28 7b ff                 jump @5528
      :                          @5532
 70895: 82 17 48                 a0 = u64 [sp + 0x48]
 70898: 82 18 40                 a1 = u64 [sp + 0x40]
 70901: 82 19 38                 a2 = u64 [sp + 0x38]
 70904: 82 1a                    a3 = u64 [sp]
 70906: 7b a7 10                 u64 [a3 + 0x10] = a0
 70909: 7b a8 08                 u64 [a3 + 0x8] = a1
 70912: 7b a9                    u64 [a3] = a2
 70914: 82 10 60                 ra = u64 [sp + 0x60]
 70917: 82 15 58                 s0 = u64 [sp + 0x58]
 70920: 82 16 50                 s1 = u64 [sp + 0x50]
 70923: 95 11 68                 sp = sp + 0x68
 70926: 32 00                    ret
      :                          @5533
 70928: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 70931: 7b 10 38                 u64 [sp + 0x38] = ra
 70934: 7b 15 30                 u64 [sp + 0x30] = s0
 70937: 7b 16 28                 u64 [sp + 0x28] = s1
 70940: 64 89                    a2 = a1
 70942: 98 88 01                 a1 = a1 >> 0x1
 70945: 51 08 8f 01              jump @5565 if a1 == 0
      :                          @5534
 70949: 7b 19 20                 u64 [sp + 0x20] = a2
 70952: 64 75                    s0 = a0
 70954: 64 86                    s1 = a1
 70956: 50 20 8c 03 e4           ra = 908, jump @5533
      :                          @5535 [@dyn 454]
 70961: 82 17 20                 a0 = u64 [sp + 0x20]
 70964: c9 67 08                 a1 = a0 - s1
 70967: 7b 16 08                 u64 [sp + 0x8] = s1
 70970: 97 67 03                 a0 = s1 << 0x3
 70973: 7b 15 10                 u64 [sp + 0x10] = s0
 70976: c8 57 07                 a0 = a0 + s0
 70979: 50 20 8e 03 cd           ra = 910, jump @5533
      :                          @5536 [@dyn 455]
 70984: 82 18 20                 a1 = u64 [sp + 0x20]
 70987: 98 87 3c                 a0 = a1 >> 0x3c
 70990: 52 07 73 01              jump @5569 if a0 != 0
      :                          @5537
 70994: 88 77 01                 a0 = a0 <u 0x1
 70997: 97 89 03                 a2 = a1 << 0x3
 71000: 97 72 03                 t0 = a0 << 0x3
 71003: 33 04 c0 22 03           t2 = 0x322c0
 71008: 33 03 00 00 01           t1 = 0x10000
 71013: c8 34 00                 ra = t2 + t1
 71016: 82 18 10                 a1 = u64 [sp + 0x10]
 71019: 01                       fallthrough
      :                          @5538
 71020: 82 05                    s0 = u64 [ra]
 71022: c8 95 0b                 a4 = s0 + a2
 71025: ac 5b 4f 01              jump @5568 if a4 <u s0
      :                          @5539
 71029: c8 2b 0c                 a5 = a4 + t0
 71032: d8 bc 06                 s1 = a5 <u a4
 71035: d8 c3 0c                 a5 = t1 <u a5
 71038: d4 6c 0c                 a5 = a5 | s1
 71041: 52 0c 3f 01              jump @5568 if a5 != 0
      :                          @5540
 71045: c9 b4 0c                 a5 = t2 - a4
 71048: c8 3c 0a                 a3 = a5 + t1
 71051: 84 ac 07                 a5 = a3 & 0x7
 71054: c8 cb 0b                 a4 = a4 + a5
 71057: 01                       fallthrough
      :                          @5541
 71058: 82 07                    a0 = u64 [ra]
 71060: ab 57 d8                 jump @5538 if a0 != s0
      :                          @5542
 71063: 7b 0b                    u64 [ra] = a4
 71065: 7b 1c                    u64 [sp] = a5
 71067: c9 ca 06                 s1 = a3 - a5
 71070: 64 67                    a0 = s1
 71072: 7b 19 18                 u64 [sp + 0x18] = a2
 71075: 50 20 90 03 89 f3 01     ra = 912, jump @13621
      :                          @5543 [@dyn 456]
 71082: 64 62                    t0 = s1
 71084: 82 10 10                 ra = u64 [sp + 0x10]
 71087: 82 14 20                 t2 = u64 [sp + 0x20]
 71090: 33 0a                    a3 = 0
 71092: 33 07                    a0 = 0
 71094: 64 68                    a1 = s1
 71096: 82 16 08                 s1 = u64 [sp + 0x8]
 71099: 64 63                    t1 = s1
 71101: 28 14                    jump @5545
      :                          @5544
 71103: 95 77 01                 a0 = a0 + 0x1
 71106: d8 6a 09                 a2 = a3 <u s1
 71109: d8 43 0b                 a4 = t1 <u t2
 71112: d2 b9 09                 a2 = a2 & a4
 71115: 95 88 08                 a1 = a1 + 0x8
 71118: 51 09 2c                 jump @5550 if a2 == 0
      :                          @5545
 71121: 97 a9 03                 a2 = a3 << 0x3
 71124: c8 09 09                 a2 = a2 + ra
 71127: 82 9b                    a4 = u64 [a2]
 71129: 97 39 03                 a2 = t1 << 0x3
 71132: c8 09 09                 a2 = a2 + ra
 71135: 82 9c                    a5 = u64 [a2]
 71137: ae bc 0e                 jump @5548 if a5 >=u a4
      :                          @5546
 71140: ae 47 da 00              jump @5566 if a0 >=u t2
      :                          @5547
 71144: 7b 8c                    u64 [a1] = a5
 71146: 95 33 01                 t1 = t1 + 0x1
 71149: 28 d2                    jump @5544
      :                          @5548
 71151: ae 47 cf 00              jump @5566 if a0 >=u t2
      :                          @5549
 71155: 7b 8b                    u64 [a1] = a4
 71157: 95 aa 01                 a3 = a3 + 0x1
 71160: 28 c7                    jump @5544
      :                          @5550
 71162: 64 29                    a2 = t0
 71164: ae 6a 30                 jump @5554 if a3 >=u s1
      :                          @5551
 71167: 95 7b ff                 a4 = a0 + 0xffffffffffffffff
 71170: 97 ac 03                 a5 = a3 << 0x3
 71173: c8 0c 0c                 a5 = a5 + ra
 71176: c9 a6 0a                 a3 = s1 - a3
 71179: e4 74 02                 t0 = maxu(t2, a0)
 71182: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 71185: 01                       fallthrough
      :                          @5552
 71186: aa b2 ac 00              jump @5566 if t0 == a4
      :                          @5553
 71190: 82 c6                    s1 = u64 [a5]
 71192: 7b 86                    u64 [a1] = s1
 71194: 95 77 01                 a0 = a0 + 0x1
 71197: 95 cc 08                 a5 = a5 + 0x8
 71200: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 71203: 95 bb 01                 a4 = a4 + 0x1
 71206: 95 88 08                 a1 = a1 + 0x8
 71209: 52 0a e9                 jump @5552 if a3 != 0
      :                          @5554
 71212: 64 96                    s1 = a2
 71214: ae 43 47                 jump @5558 if t1 >=u t2
      :                          @5555
 71217: e4 47 02                 t0 = maxu(a0, t2)
 71220: c9 34 0a                 a3 = t2 - t1
 71223: 97 38 03                 a1 = t1 << 0x3
 71226: c8 08 08                 a1 = a1 + ra
 71229: 97 7b 03                 a4 = a0 << 0x3
 71232: 82 19 18                 a2 = u64 [sp + 0x18]
 71235: c9 9b 0b                 a4 = a4 - a2
 71238: 33 0c c0 22 03           a5 = 0x322c0
 71243: 82 19                    a2 = u64 [sp]
 71245: c8 95 05                 s0 = s0 + a2
 71248: c9 5c 0c                 a5 = a5 - s0
 71251: c8 cb 0b                 a4 = a4 + a5
 71254: 95 bb 00 00 01           a4 = a4 + 0x10000
 71259: c9 72 07                 a0 = t0 - a0
 71262: 01                       fallthrough
      :                          @5556
 71263: 51 07 60                 jump @5567 if a0 == 0
      :                          @5557
 71266: 82 8c                    a5 = u64 [a1]
 71268: 7b bc                    u64 [a4] = a5
 71270: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 71273: 95 88 08                 a1 = a1 + 0x8
 71276: 95 bb 08                 a4 = a4 + 0x8
 71279: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 71282: 52 0a ed                 jump @5556 if a3 != 0
      :                          @5558
 71285: 64 07                    a0 = ra
 71287: 64 68                    a1 = s1
 71289: 82 19 18                 a2 = u64 [sp + 0x18]
 71292: 64 45                    s0 = t2
 71294: 50 20 92 03 ae f2 01     ra = 914, jump @13621
      :                          @5559 [@dyn 457]
 71301: 82 1c 18                 a5 = u64 [sp + 0x18]
 71304: 33 07 00 20              a0 = 0x2000
 71308: ac 57 24                 jump @5565 if a0 <u s0
      :                          @5560
 71311: 33 07 c0 22 03           a0 = 0x322c0
 71316: 95 77 00 00 01           a0 = a0 + 0x10000
 71321: 01                       fallthrough
      :                          @5561
 71322: 82 78                    a1 = u64 [a0]
 71324: c9 87 09                 a2 = a0 - a1
 71327: ab 69 11                 jump @5565 if a2 != s1
      :                          @5562
 71330: c9 c8 09                 a2 = a1 - a5
 71333: 01                       fallthrough
      :                          @5563
 71334: 82 7a                    a3 = u64 [a0]
 71336: ab 8a f2                 jump @5561 if a3 != a1
      :                          @5564
 71339: 7b 79                    u64 [a0] = a2
 71341: 33 0b                    a4 = 0
 71343: 01                       fallthrough
      :                          @5565
 71344: 82 10 38                 ra = u64 [sp + 0x38]
 71347: 82 15 30                 s0 = u64 [sp + 0x30]
 71350: 82 16 28                 s1 = u64 [sp + 0x28]
 71353: 95 11 40                 sp = sp + 0x40
 71356: 32 00                    ret
      :                          @5566
 71358: 00                       trap
      :                          @5567
 71359: 00                       trap
      :                          @5568
 71360: 00                       trap
      :                          @5569
 71361: 00                       trap
      :                          @5570
 71362: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 71365: 7b 10 18                 u64 [sp + 0x18] = ra
 71368: 7b 15 10                 u64 [sp + 0x10] = s0
 71371: 7b 16 08                 u64 [sp + 0x8] = s1
 71374: 33 02 02                 t0 = 0x2
 71377: ae 28 11                 jump @5572 if a1 >=u t0
      :                          @5571
 71380: 82 10 18                 ra = u64 [sp + 0x18]
 71383: 82 15 10                 s0 = u64 [sp + 0x10]
 71386: 82 16 08                 s1 = u64 [sp + 0x8]
 71389: 95 11 20                 sp = sp + 0x20
 71392: 32 00                    ret
      :                          @5572
 71394: 64 86                    s1 = a1
 71396: 64 73                    t1 = a0
 71398: 33 04 01                 t2 = 0x1
 71401: 01                       fallthrough
      :                          @5573
 71402: 97 67 02                 a0 = s1 << 0x2
 71405: 84 77 f8                 a0 = a0 & 0xfffffffffffffff8
 71408: c8 37 07                 a0 = a0 + t1
 71411: 82 78                    a1 = u64 [a0]
 71413: 33 05                    s0 = 0
 71415: 95 67 ff                 a0 = s1 + 0xffffffffffffffff
 71418: 28 05                    jump @5575
      :                          @5574
 71420: ac 57 48                 jump @5586 if a0 <u s0
      :                          @5575
 71423: ae 65 76                 jump @5595 if s0 >=u s1
      :                          @5576
 71426: 97 59 03                 a2 = s0 << 0x3
 71429: c8 39 09                 a2 = a2 + t1
 71432: 01                       fallthrough
      :                          @5577
 71433: 82 9a                    a3 = u64 [a2]
 71435: ae 8a 0e                 jump @5580 if a3 >=u a1
      :                          @5578
 71438: 95 55 01                 s0 = s0 + 0x1
 71441: 95 99 08                 a2 = a2 + 0x8
 71444: ab 56 f5                 jump @5577 if s1 != s0
      :                          @5579
 71447: 28 5d                    jump @5594
      :                          @5580
 71449: ae 67 5a                 jump @5593 if a0 >=u s1
      :                          @5581
 71452: 97 7b 03                 a4 = a0 << 0x3
 71455: c8 3b 0b                 a4 = a4 + t1
 71458: 82 bc                    a5 = u64 [a4]
 71460: ae c8 0e                 jump @5584 if a1 >=u a5
      :                          @5582
 71463: e4 47 07                 a0 = maxu(a0, t2)
 71466: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 71469: ac 67 ef                 jump @5581 if a0 <u s1
      :                          @5583
 71472: 28 43                    jump @5593
      :                          @5584
 71474: ac 57 ca                 jump @5574 if a0 <u s0
      :                          @5585
 71477: 7b 9c                    u64 [a2] = a5
 71479: 7b ba                    u64 [a4] = a3
 71481: 95 55 01                 s0 = s0 + 0x1
 71484: e4 47 07                 a0 = maxu(a0, t2)
 71487: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 71490: 28 ba                    jump @5574
      :                          @5586
 71492: 51 07 1c                 jump @5590 if a0 == 0
      :                          @5587
 71495: 95 78 01                 a1 = a0 + 0x1
 71498: ae 67 2d                 jump @5597 if a0 >=u s1
      :                          @5588
 71501: 64 37                    a0 = t1
 71503: 7b 13                    u64 [sp] = t1
 71505: 50 20 94 03 71 ff        ra = 916, jump @5570
      :                          @5589 [@dyn 458]
 71511: 82 13                    t1 = u64 [sp]
 71513: 33 02 02                 t0 = 0x2
 71516: 33 04 01                 t2 = 0x1
 71519: 01                       fallthrough
      :                          @5590
 71520: ac 56 16                 jump @5596 if s1 <u s0
      :                          @5591
 71523: c9 56 06                 s1 = s1 - s0
 71526: 97 55 03                 s0 = s0 << 0x3
 71529: c8 53 03                 t1 = t1 + s0
 71532: ae 26 7e ff              jump @5573 if s1 >=u t0
      :                          @5592
 71536: 28 64 ff                 jump @5571
      :                          @5593
 71539: 00                       trap
      :                          @5594
 71540: 00                       trap
      :                          @5595
 71541: 00                       trap
      :                          @5596
 71542: 00                       trap
      :                          @5597
 71543: 00                       trap
      :                          @5598
 71544: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 71547: 7b 10 58                 u64 [sp + 0x58] = ra
 71550: 7b 15 50                 u64 [sp + 0x50] = s0
 71553: 7b 16 48                 u64 [sp + 0x48] = s1
 71556: 51 09 d9 01              jump @5639 if a2 == 0
      :                          @5599
 71560: 64 86                    s1 = a1
 71562: 7b 17                    u64 [sp] = a0
 71564: 64 67                    a0 = s1
 71566: 51 19 01 2d              jump @5603 if a2 == 1
      :                          @5600
 71570: 95 68 08                 a1 = s1 + 0x8
 71573: 82 65                    s0 = u64 [s1]
 71575: 95 97 ff                 a0 = a2 + 0xffffffffffffffff
 71578: 97 77 03                 a0 = a0 << 0x3
 71581: 98 7a 03                 a3 = a0 >> 0x3
 71584: 64 67                    a0 = s1
 71586: 01                       fallthrough
      :                          @5601
 71587: 82 8b                    a4 = u64 [a1]
 71589: d8 5b 0c                 a5 = a4 <u s0
 71592: e4 b5 05                 s0 = maxu(s0, a4)
 71595: da c8 07                 a0 = a1 if a5 == 0
 71598: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 71601: 95 88 08                 a1 = a1 + 0x8
 71604: 52 0a ef                 jump @5601 if a3 != 0
      :                          @5602
 71607: 51 07 d9 01              jump @5646 if a0 == 0
      :                          @5603
 71611: 82 77                    a0 = u64 [a0]
 71613: 95 78 01                 a1 = a0 + 0x1
 71616: 33 05 08                 s0 = 0x8
 71619: 97 87 03                 a0 = a1 << 0x3
 71622: 7b 17 20                 u64 [sp + 0x20] = a0
 71625: 7b 18 10                 u64 [sp + 0x10] = a1
 71628: 51 08 6d                 jump @5612 if a1 == 0
      :                          @5604
 71631: 98 87 3c                 a0 = a1 >> 0x3c
 71634: 52 07 bd 01              jump @5645 if a0 != 0
      :                          @5605
 71638: 7b 19 28                 u64 [sp + 0x28] = a2
 71641: 88 72 01                 t0 = a0 <u 0x1
 71644: 97 22 03                 t0 = t0 << 0x3
 71647: 33 04 c0 22 03           t2 = 0x322c0
 71652: 33 03 00 00 01           t1 = 0x10000
 71657: c8 34 0a                 a3 = t2 + t1
 71660: 01                       fallthrough
      :                          @5606
 71661: 82 ab                    a4 = u64 [a3]
 71663: 82 1c 20                 a5 = u64 [sp + 0x20]
 71666: c8 bc 0c                 a5 = a5 + a4
 71669: ac bc 99 01              jump @5644 if a5 <u a4
      :                          @5607
 71673: c8 2c 09                 a2 = a5 + t0
 71676: d8 c9 05                 s0 = a2 <u a5
 71679: d8 93 09                 a2 = t1 <u a2
 71682: d4 59 09                 a2 = a2 | s0
 71685: 52 09 89 01              jump @5644 if a2 != 0
      :                          @5608
 71689: c9 c4 05                 s0 = t2 - a5
 71692: c8 35 05                 s0 = s0 + t1
 71695: 84 59 07                 a2 = s0 & 0x7
 71698: c8 9c 0c                 a5 = a5 + a2
 71701: 01                       fallthrough
      :                          @5609
 71702: 82 a7                    a0 = u64 [a3]
 71704: ab b7 d5                 jump @5606 if a0 != a4
      :                          @5610
 71707: 7b ac                    u64 [a3] = a5
 71709: c9 95 05                 s0 = s0 - a2
 71712: 64 57                    a0 = s0
 71714: 33 08                    a1 = 0
 71716: 82 19 20                 a2 = u64 [sp + 0x20]
 71719: 50 20 96 03 32 f3 01     ra = 918, jump @13675
      :                          @5611 [@dyn 459]
 71726: 82 18 10                 a1 = u64 [sp + 0x10]
 71729: 82 19 28                 a2 = u64 [sp + 0x28]
 71732: 97 9a 03                 a3 = a2 << 0x3
 71735: 28 06                    jump @5613
      :                          @5612
 71737: 97 9a 03                 a3 = a2 << 0x3
 71740: 01                       fallthrough
      :                          @5613
 71741: 82 67                    a0 = u64 [s1]
 71743: ae 87 4d 01              jump @5642 if a0 >=u a1
      :                          @5614
 71747: 97 77 03                 a0 = a0 << 0x3
 71750: c8 57 07                 a0 = a0 + s0
 71753: 82 7b                    a4 = u64 [a0]
 71755: 95 66 08                 s1 = s1 + 0x8
 71758: 95 bb 01                 a4 = a4 + 0x1
 71761: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 71764: 7b 7b                    u64 [a0] = a4
 71766: 52 0a e7                 jump @5613 if a3 != 0
      :                          @5615
 71769: 7b 15 08                 u64 [sp + 0x8] = s0
 71772: 98 97 3c                 a0 = a2 >> 0x3c
 71775: 52 07 30 01              jump @5645 if a0 != 0
      :                          @5616
 71779: 88 72 01                 t0 = a0 <u 0x1
 71782: 97 97 03                 a0 = a2 << 0x3
 71785: 97 22 03                 t0 = t0 << 0x3
 71788: 33 04 c0 22 03           t2 = 0x322c0
 71793: 33 03 00 00 01           t1 = 0x10000
 71798: c8 34 00                 ra = t2 + t1
 71801: 01                       fallthrough
      :                          @5617
 71802: 82 06                    s1 = u64 [ra]
 71804: c8 76 0c                 a5 = s1 + a0
 71807: ac 6c 0e 01              jump @5643 if a5 <u s1
      :                          @5618
 71811: c8 2c 0a                 a3 = a5 + t0
 71814: d8 ca 05                 s0 = a3 <u a5
 71817: d8 a3 0a                 a3 = t1 <u a3
 71820: d4 5a 0a                 a3 = a3 | s0
 71823: 52 0a fe 00              jump @5643 if a3 != 0
      :                          @5619
 71827: c9 c4 05                 s0 = t2 - a5
 71830: c8 35 05                 s0 = s0 + t1
 71833: 84 5a 07                 a3 = s0 & 0x7
 71836: c8 ac 0c                 a5 = a5 + a3
 71839: 01                       fallthrough
      :                          @5620
 71840: 82 08                    a1 = u64 [ra]
 71842: ab 68 d8                 jump @5617 if a1 != s1
      :                          @5621
 71845: 7b 0c                    u64 [ra] = a5
 71847: 33 0b                    a4 = 0
 71849: 01                       fallthrough
      :                          @5622
 71850: c9 a5 07                 a0 = s0 - a3
 71853: 7b 19 30                 u64 [sp + 0x30] = a2
 71856: 7b 17 38                 u64 [sp + 0x38] = a0
 71859: 49 11 40                 u64 [sp + 64] = 0
 71862: 82 18 10                 a1 = u64 [sp + 0x10]
 71865: 51 08 b1 00              jump @5640 if a1 == 0
      :                          @5623
 71869: 33 08                    a1 = 0
 71871: 33 06                    s1 = 0
 71873: 82 19 20                 a2 = u64 [sp + 0x20]
 71876: 82 1a 08                 a3 = u64 [sp + 0x8]
 71879: c8 a9 09                 a2 = a2 + a3
 71882: 7b 19 18                 u64 [sp + 0x18] = a2
 71885: 28 11                    jump @5625
      :                          @5624
 71887: 82 1a 28                 a3 = u64 [sp + 0x28]
 71890: 95 aa 08                 a3 = a3 + 0x8
 71893: 95 66 01                 s1 = s1 + 0x1
 71896: 82 19 18                 a2 = u64 [sp + 0x18]
 71899: aa 9a 39                 jump @5631 if a3 == a2
      :                          @5625
 71902: 7b 1a 28                 u64 [sp + 0x28] = a3
 71905: 82 a5                    s0 = u64 [a3]
 71907: 52 05 19                 jump @5628 if s0 != 0
      :                          @5626
 71910: 28 e9                    jump @5624
      :                          @5627
 71912: 97 89 03                 a2 = a1 << 0x3
 71915: c8 79 09                 a2 = a2 + a0
 71918: 7b 96                    u64 [a2] = s1
 71920: 95 88 01                 a1 = a1 + 0x1
 71923: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 71926: 7b 18 40                 u64 [sp + 0x40] = a1
 71929: 51 05 d6                 jump @5624 if s0 == 0
      :                          @5628
 71932: 82 19 30                 a2 = u64 [sp + 0x30]
 71935: ab 98 e9                 jump @5627 if a1 != a2
      :                          @5629
 71938: 95 17 30                 a0 = sp + 0x30
 71941: 50 20 98 03 02 3a ff     ra = 920, jump @1581
      :                          @5630 [@dyn 460]
 71948: 82 18 40                 a1 = u64 [sp + 0x40]
 71951: 82 17 38                 a0 = u64 [sp + 0x38]
 71954: 28 d6                    jump @5627
      :                          @5631
 71956: 82 17 40                 a0 = u64 [sp + 0x40]
 71959: 82 18 38                 a1 = u64 [sp + 0x38]
 71962: 82 19 30                 a2 = u64 [sp + 0x30]
 71965: 82 1a                    a3 = u64 [sp]
 71967: 7b a7 10                 u64 [a3 + 0x10] = a0
 71970: 7b a8 08                 u64 [a3 + 0x8] = a1
 71973: 33 07 00 20              a0 = 0x2000
 71977: 7b a9                    u64 [a3] = a2
 71979: 82 18 10                 a1 = u64 [sp + 0x10]
 71982: 82 1c 08                 a5 = u64 [sp + 0x8]
 71985: ac 87 4d                 jump @5641 if a0 <u a1
      :                          @5632
 71988: 33 07 c0 22 03           a0 = 0x322c0
 71993: 95 77 00 00 01           a0 = a0 + 0x10000
 71998: 01                       fallthrough
      :                          @5633
 71999: 82 78                    a1 = u64 [a0]
 72001: c9 87 09                 a2 = a0 - a1
 72004: ab c9 3a                 jump @5641 if a2 != a5
      :                          @5634
 72007: 82 19 20                 a2 = u64 [sp + 0x20]
 72010: c9 98 09                 a2 = a1 - a2
 72013: 01                       fallthrough
      :                          @5635
 72014: 82 7a                    a3 = u64 [a0]
 72016: ab 8a ef                 jump @5633 if a3 != a1
      :                          @5636
 72019: 7b 79                    u64 [a0] = a2
 72021: 33 0b                    a4 = 0
 72023: 01                       fallthrough
      :                          @5637
 72024: ab 8a e7                 jump @5633 if a3 != a1
      :                          @5638
 72027: 28 23                    jump @5641
      :                          @5639
 72029: 49 07                    u64 [a0 + 0] = 0
 72031: 33 08 08                 a1 = 0x8
 72034: 7b 78 08                 u64 [a0 + 0x8] = a1
 72037: 49 17 10                 u64 [a0 + 16] = 0
 72040: 28 16                    jump @5641
      :                          @5640
 72042: 82 17 40                 a0 = u64 [sp + 0x40]
 72045: 82 18 38                 a1 = u64 [sp + 0x38]
 72048: 82 19 30                 a2 = u64 [sp + 0x30]
 72051: 82 1a                    a3 = u64 [sp]
 72053: 7b a7 10                 u64 [a3 + 0x10] = a0
 72056: 7b a8 08                 u64 [a3 + 0x8] = a1
 72059: 7b a9                    u64 [a3] = a2
 72061: 01                       fallthrough
      :                          @5641
 72062: 82 10 58                 ra = u64 [sp + 0x58]
 72065: 82 15 50                 s0 = u64 [sp + 0x50]
 72068: 82 16 48                 s1 = u64 [sp + 0x48]
 72071: 95 11 60                 sp = sp + 0x60
 72074: 32 00                    ret
      :                          @5642
 72076: 00                       trap
      :                          @5643
 72077: 00                       trap
      :                          @5644
 72078: 00                       trap
      :                          @5645
 72079: 00                       trap
      :                          @5646
 72080: 00                       trap
      :                          @5647
 72081: 95 11 80                 sp = sp + 0xffffffffffffff80
 72084: 7b 10 78                 u64 [sp + 0x78] = ra
 72087: 7b 15 70                 u64 [sp + 0x70] = s0
 72090: 7b 16 68                 u64 [sp + 0x68] = s1
 72093: 7b 17 48                 u64 [sp + 0x48] = a0
 72096: 97 87 03                 a0 = a1 << 0x3
 72099: 7b 17 50                 u64 [sp + 0x50] = a0
 72102: 7b 18 40                 u64 [sp + 0x40] = a1
 72105: 51 08 66                 jump @5656 if a1 == 0
      :                          @5648
 72108: 98 87 3c                 a0 = a1 >> 0x3c
 72111: 52 07 06 02              jump @5692 if a0 != 0
      :                          @5649
 72115: 88 77 01                 a0 = a0 <u 0x1
 72118: 97 72 03                 t0 = a0 << 0x3
 72121: 33 08 c0 22 03           a1 = 0x322c0
 72126: 33 03 00 00 01           t1 = 0x10000
 72131: c8 38 0a                 a3 = a1 + t1
 72134: 01                       fallthrough
      :                          @5650
 72135: 82 ab                    a4 = u64 [a3]
 72137: 82 1c 50                 a5 = u64 [sp + 0x50]
 72140: c8 bc 0c                 a5 = a5 + a4
 72143: ac bc e5 01              jump @5691 if a5 <u a4
      :                          @5651
 72147: c8 2c 09                 a2 = a5 + t0
 72150: d8 c9 06                 s1 = a2 <u a5
 72153: d8 93 09                 a2 = t1 <u a2
 72156: d4 69 09                 a2 = a2 | s1
 72159: 52 09 d5 01              jump @5691 if a2 != 0
      :                          @5652
 72163: c9 c8 06                 s1 = a1 - a5
 72166: c8 36 06                 s1 = s1 + t1
 72169: 84 69 07                 a2 = s1 & 0x7
 72172: c8 9c 0c                 a5 = a5 + a2
 72175: 01                       fallthrough
      :                          @5653
 72176: 82 a7                    a0 = u64 [a3]
 72178: ab b7 d5                 jump @5650 if a0 != a4
      :                          @5654
 72181: 7b ac                    u64 [a3] = a5
 72183: c9 96 06                 s1 = s1 - a2
 72186: 64 67                    a0 = s1
 72188: 33 08                    a1 = 0
 72190: 82 15 50                 s0 = u64 [sp + 0x50]
 72193: 64 59                    a2 = s0
 72195: 50 20 9a 03 56 f1 01     ra = 922, jump @13675
      :                          @5655 [@dyn 461]
 72202: 7b 15 28                 u64 [sp + 0x28] = s0
 72205: 28 09                    jump @5657
      :                          @5656
 72207: 49 11 28                 u64 [sp + 40] = 0
 72210: 33 06 08                 s1 = 0x8
 72213: 01                       fallthrough
      :                          @5657
 72214: 33 02                    t0 = 0
 72216: 82 17 48                 a0 = u64 [sp + 0x48]
 72219: 95 75 f8                 s0 = a0 + 0xfffffffffffffff8
 72222: 33 03 c0 22 03           t1 = 0x322c0
 72227: 33 0c 00 00 01           a5 = 0x10000
 72232: c8 c3 0b                 a4 = t1 + a5
 72235: 49 11 10 00 08           u64 [sp + 16] = 0x800
 72240: 49 11 08 08 f8 00        u64 [sp + 8] = 0xf808
 72246: 7b 16 20                 u64 [sp + 0x20] = s1
 72249: 7b 15 18                 u64 [sp + 0x18] = s0
 72252: 7b 13 38                 u64 [sp + 0x38] = t1
 72255: 7b 1b                    u64 [sp] = a4
 72257: 33 04 01                 t2 = 0x1
 72260: 28 21                    jump @5660
      :                          @5658
 72262: 82 1a 30                 a3 = u64 [sp + 0x30]
 72265: 95 a7 08                 a0 = a3 + 0x8
 72268: 82 12 60                 t0 = u64 [sp + 0x60]
 72271: 95 22 08                 t0 = t0 + 0x8
 72274: 82 19 40                 a2 = u64 [sp + 0x40]
 72277: 82 13 38                 t1 = u64 [sp + 0x38]
 72280: 33 0c 00 00 01           a5 = 0x10000
 72285: 55 1a 39 17 01           jump @5682 if a3 >=u 57
      :                          @5659
 72290: 64 74                    t2 = a0
 72292: 01                       fallthrough
      :                          @5660
 72293: 82 b5                    s0 = u64 [a4]
 72295: 95 57 ff 07              a0 = s0 + 0x7ff
 72299: 95 77 01                 a0 = a0 + 0x1
 72302: ac 57 45 01              jump @5690 if a0 <u s0
      :                          @5661
 72306: 95 78 08                 a1 = a0 + 0x8
 72309: d8 78 09                 a2 = a1 <u a0
 72312: d8 8c 08                 a1 = a5 <u a1
 72315: d4 98 08                 a1 = a1 | a2
 72318: 52 08 35 01              jump @5690 if a1 != 0
      :                          @5662
 72322: c9 73 08                 a1 = t1 - a0
 72325: c8 c8 08                 a1 = a1 + a5
 72328: 84 86 07                 s1 = a1 & 0x7
 72331: c8 67 07                 a0 = a0 + s1
 72334: 01                       fallthrough
      :                          @5663
 72335: 82 b9                    a2 = u64 [a4]
 72337: ab 59 d4                 jump @5660 if a2 != s0
      :                          @5664
 72340: 7b b7                    u64 [a4] = a0
 72342: 7b 14 30                 u64 [sp + 0x30] = t2
 72345: c9 68 07                 a0 = a1 - s1
 72348: 7b 17 58                 u64 [sp + 0x58] = a0
 72351: 33 08                    a1 = 0
 72353: 82 19 10                 a2 = u64 [sp + 0x10]
 72356: 7b 12 60                 u64 [sp + 0x60] = t0
 72359: 50 20 9c 03 b2 f0 01     ra = 924, jump @13675
      :                          @5665 [@dyn 462]
 72366: 82 1b 58                 a4 = u64 [sp + 0x58]
 72369: 82 1c 60                 a5 = u64 [sp + 0x60]
 72372: 82 12 40                 t0 = u64 [sp + 0x40]
 72375: 82 17 50                 a0 = u64 [sp + 0x50]
 72378: 82 18 48                 a1 = u64 [sp + 0x48]
 72381: 51 02 26                 jump @5668 if t0 == 0
      :                          @5666
 72384: 82 89                    a2 = u64 [a1]
 72386: d0 c9 09                 a2 = a2 >> a5
 72389: 84 99 ff 00              a2 = a2 & 0xff
 72393: 97 99 03                 a2 = a2 << 0x3
 72396: c8 b9 09                 a2 = a2 + a4
 72399: 82 9a                    a3 = u64 [a2]
 72401: 95 88 08                 a1 = a1 + 0x8
 72404: 95 aa 01                 a3 = a3 + 0x1
 72407: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
 72410: 7b 9a                    u64 [a2] = a3
 72412: 52 07 e4                 jump @5666 if a0 != 0
      :                          @5667
 72415: 82 b7                    a0 = u64 [a4]
 72417: 28 05                    jump @5669
      :                          @5668
 72419: 33 07                    a0 = 0
 72421: 01                       fallthrough
      :                          @5669
 72422: 82 18 38                 a1 = u64 [sp + 0x38]
 72425: c8 65 05                 s0 = s0 + s1
 72428: c9 58 08                 a1 = a1 - s0
 72431: 82 19 08                 a2 = u64 [sp + 0x8]
 72434: c8 98 08                 a1 = a1 + a2
 72437: 33 09 ff 00              a2 = 0xff
 72441: 01                       fallthrough
      :                          @5670
 72442: 82 8a                    a3 = u64 [a1]
 72444: c8 a7 07                 a0 = a0 + a3
 72447: 7b 87                    u64 [a1] = a0
 72449: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 72452: 95 88 08                 a1 = a1 + 0x8
 72455: 52 09 f3                 jump @5670 if a2 != 0
      :                          @5671
 72458: 82 18 50                 a1 = u64 [sp + 0x50]
 72461: 82 16 20                 s1 = u64 [sp + 0x20]
 72464: 82 15 18                 s0 = u64 [sp + 0x18]
 72467: 51 02 2e                 jump @5674 if t0 == 0
      :                          @5672
 72470: c8 85 07                 a0 = s0 + a1
 72473: 82 79                    a2 = u64 [a0]
 72475: d0 c9 07                 a0 = a2 >> a5
 72478: 84 77 ff 00              a0 = a0 & 0xff
 72482: 97 77 03                 a0 = a0 << 0x3
 72485: c8 7b 0a                 a3 = a4 + a0
 72488: 82 a7                    a0 = u64 [a3]
 72490: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 72493: 7b a7                    u64 [a3] = a0
 72495: ae 27 83 00              jump @5689 if a0 >=u t0
      :                          @5673
 72499: 97 77 03                 a0 = a0 << 0x3
 72502: c8 67 07                 a0 = a0 + s1
 72505: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 72508: 7b 79                    u64 [a0] = a2
 72510: 52 08 d8                 jump @5672 if a1 != 0
      :                          @5674
 72513: 82 17 48                 a0 = u64 [sp + 0x48]
 72516: 64 68                    a1 = s1
 72518: 82 19 28                 a2 = u64 [sp + 0x28]
 72521: 50 20 9e 03 e3 ed 01     ra = 926, jump @13621
      :                          @5675 [@dyn 463]
 72528: 82 1c 58                 a5 = u64 [sp + 0x58]
 72531: 82 1b                    a4 = u64 [sp]
 72533: 01                       fallthrough
      :                          @5676
 72534: 82 b7                    a0 = u64 [a4]
 72536: c9 7b 08                 a1 = a4 - a0
 72539: ab c8 eb fe              jump @5658 if a1 != a5
      :                          @5677
 72543: 95 78 00 f8              a1 = a0 + 0xfffffffffffff800
 72547: 01                       fallthrough
      :                          @5678
 72548: 82 b9                    a2 = u64 [a4]
 72550: ab 79 f0                 jump @5676 if a2 != a0
      :                          @5679
 72553: 7b b8                    u64 [a4] = a1
 72555: 33 0a                    a3 = 0
 72557: 01                       fallthrough
      :                          @5680
 72558: ab 79 e8                 jump @5676 if a2 != a0
      :                          @5681
 72561: 28 d5 fe                 jump @5658
      :                          @5682
 72564: 33 07 00 e0              a0 = 0xffffffffffffe000
 72568: 95 98 ff df              a1 = a2 + 0xffffffffffffdfff
 72572: ac 78 27                 jump @5688 if a1 <u a0
      :                          @5683
 72575: 33 07 c0 22 03           a0 = 0x322c0
 72580: 95 77 00 00 01           a0 = a0 + 0x10000
 72585: 01                       fallthrough
      :                          @5684
 72586: 82 78                    a1 = u64 [a0]
 72588: c9 87 09                 a2 = a0 - a1
 72591: ab 69 14                 jump @5688 if a2 != s1
      :                          @5685
 72594: 82 19 28                 a2 = u64 [sp + 0x28]
 72597: c9 98 09                 a2 = a1 - a2
 72600: 01                       fallthrough
      :                          @5686
 72601: 82 7a                    a3 = u64 [a0]
 72603: ab 8a ef                 jump @5684 if a3 != a1
      :                          @5687
 72606: 7b 79                    u64 [a0] = a2
 72608: 33 0b                    a4 = 0
 72610: 01                       fallthrough
      :                          @5688
 72611: 82 10 78                 ra = u64 [sp + 0x78]
 72614: 82 15 70                 s0 = u64 [sp + 0x70]
 72617: 82 16 68                 s1 = u64 [sp + 0x68]
 72620: 95 11 80 00              sp = sp + 0x80
 72624: 32 00                    ret
      :                          @5689
 72626: 00                       trap
      :                          @5690
 72627: 00                       trap
      :                          @5691
 72628: 00                       trap
      :                          @5692
 72629: 00                       trap
      :                          @5693
 72630: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 72633: 7b 10 20                 u64 [sp + 0x20] = ra
 72636: 7b 15 18                 u64 [sp + 0x18] = s0
 72639: 7b 16 10                 u64 [sp + 0x10] = s1
 72642: 51 09 9e 00              jump @5706 if a2 == 0
      :                          @5694
 72646: 64 86                    s1 = a1
 72648: 98 98 3c                 a1 = a2 >> 0x3c
 72651: 52 08 b0 00              jump @5709 if a1 != 0
      :                          @5695
 72655: 7b 17                    u64 [sp] = a0
 72657: 88 82 01                 t0 = a1 <u 0x1
 72660: 7b 19 08                 u64 [sp + 0x8] = a2
 72663: 97 99 03                 a2 = a2 << 0x3
 72666: 97 22 03                 t0 = t0 << 0x3
 72669: 33 04 c0 22 03           t2 = 0x322c0
 72674: 33 03 00 00 01           t1 = 0x10000
 72679: c8 34 00                 ra = t2 + t1
 72682: 01                       fallthrough
      :                          @5696
 72683: 82 07                    a0 = u64 [ra]
 72685: c8 97 0c                 a5 = a0 + a2
 72688: ac 7c 8a 00              jump @5708 if a5 <u a0
      :                          @5697
 72692: c8 2c 0a                 a3 = a5 + t0
 72695: d8 ca 05                 s0 = a3 <u a5
 72698: d8 a3 0a                 a3 = t1 <u a3
 72701: d4 5a 0a                 a3 = a3 | s0
 72704: 52 0a 7a                 jump @5708 if a3 != 0
      :                          @5698
 72707: c9 c4 05                 s0 = t2 - a5
 72710: c8 35 05                 s0 = s0 + t1
 72713: 84 5a 07                 a3 = s0 & 0x7
 72716: c8 ac 0c                 a5 = a5 + a3
 72719: 01                       fallthrough
      :                          @5699
 72720: 82 08                    a1 = u64 [ra]
 72722: ab 78 d9                 jump @5696 if a1 != a0
      :                          @5700
 72725: 7b 0c                    u64 [ra] = a5
 72727: 33 0b                    a4 = 0
 72729: c9 a5 05                 s0 = s0 - a3
 72732: 64 57                    a0 = s0
 72734: 33 08                    a1 = 0
 72736: 50 20 a0 03 39 ef 01     ra = 928, jump @13675
      :                          @5701 [@dyn 464]
 72743: 33 07                    a0 = 0
 72745: 64 58                    a1 = s0
 72747: 82 19 08                 a2 = u64 [sp + 0x8]
 72750: 28 0b                    jump @5703
      :                          @5702
 72752: 95 88 08                 a1 = a1 + 0x8
 72755: 95 66 08                 s1 = s1 + 0x8
 72758: aa 79 26                 jump @5705 if a2 == a0
      :                          @5703
 72761: 82 6c                    a5 = u64 [s1]
 72763: 82 8a                    a3 = u64 [a1]
 72765: 64 7b                    a4 = a0
 72767: 95 77 01                 a0 = a0 + 0x1
 72770: c8 ac 0c                 a5 = a5 + a3
 72773: d4 b7 0a                 a3 = a0 | a4
 72776: 7b 8c                    u64 [a1] = a5
 72778: ae 9a e6                 jump @5702 if a3 >=u a2
      :                          @5704
 72781: 97 aa 03                 a3 = a3 << 0x3
 72784: c8 5a 0a                 a3 = a3 + s0
 72787: 82 ab                    a4 = u64 [a3]
 72789: c8 cb 0b                 a4 = a4 + a5
 72792: 7b ab                    u64 [a3] = a4
 72794: 28 d6                    jump @5702
      :                          @5705
 72796: 82 17                    a0 = u64 [sp]
 72798: 28 06                    jump @5707
      :                          @5706
 72800: 33 05 08                 s0 = 0x8
 72803: 01                       fallthrough
      :                          @5707
 72804: 7b 79                    u64 [a0] = a2
 72806: 7b 75 08                 u64 [a0 + 0x8] = s0
 72809: 7b 79 10                 u64 [a0 + 0x10] = a2
 72812: 82 10 20                 ra = u64 [sp + 0x20]
 72815: 82 15 18                 s0 = u64 [sp + 0x18]
 72818: 82 16 10                 s1 = u64 [sp + 0x10]
 72821: 95 11 28                 sp = sp + 0x28
 72824: 32 00                    ret
      :                          @5708
 72826: 00                       trap
      :                          @5709
 72827: 00                       trap
      :                          @5710
 72828: ae 89 20                 jump @5714 if a2 >=u a1
      :                          @5711
 72831: 33 0a                    a3 = 0
 72833: 01                       fallthrough
      :                          @5712
 72834: 97 9b 03                 a4 = a2 << 0x3
 72837: c8 7b 0b                 a4 = a4 + a0
 72840: 82 bb                    a4 = u64 [a4]
 72842: 95 9c 01                 a5 = a2 + 0x1
 72845: d2 c9 09                 a2 = a2 & a5
 72848: c8 ba 0a                 a3 = a3 + a4
 72851: 51 09 0a                 jump @5715 if a2 == 0
      :                          @5713
 72854: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 72857: ac 89 e9                 jump @5712 if a2 <u a1
      :                          @5714
 72860: 00                       trap
      :                          @5715
 72861: 64 a7                    a0 = a3
 72863: 32 00                    ret
      :                          @5716
 72865: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 72868: 7b 10 28                 u64 [sp + 0x28] = ra
 72871: 7b 15 20                 u64 [sp + 0x20] = s0
 72874: 7b 16 18                 u64 [sp + 0x18] = s1
 72877: 97 95 01                 s0 = a2 << 0x1
 72880: 64 86                    s1 = a1
 72882: 64 73                    t1 = a0
 72884: 51 05 75                 jump @5726 if s0 == 0
      :                          @5717
 72887: 7b 13 08                 u64 [sp + 0x8] = t1
 72890: 7b 15 10                 u64 [sp + 0x10] = s0
 72893: 98 57 3c                 a0 = s0 >> 0x3c
 72896: 52 07 f9 00              jump @5741 if a0 != 0
      :                          @5718
 72900: 88 72 01                 t0 = a0 <u 0x1
 72903: 7b 19                    u64 [sp] = a2
 72905: 97 99 04                 a2 = a2 << 0x4
 72908: 97 22 03                 t0 = t0 << 0x3
 72911: 33 04 c0 22 03           t2 = 0x322c0
 72916: 33 03 00 00 01           t1 = 0x10000
 72921: c8 34 00                 ra = t2 + t1
 72924: 01                       fallthrough
      :                          @5719
 72925: 82 05                    s0 = u64 [ra]
 72927: c8 95 0c                 a5 = s0 + a2
 72930: ac 5c d6 00              jump @5740 if a5 <u s0
      :                          @5720
 72934: c8 2c 07                 a0 = a5 + t0
 72937: d8 c7 0a                 a3 = a0 <u a5
 72940: d8 73 07                 a0 = t1 <u a0
 72943: d4 a7 07                 a0 = a0 | a3
 72946: 52 07 c6 00              jump @5740 if a0 != 0
      :                          @5721
 72950: c9 c4 07                 a0 = t2 - a5
 72953: c8 37 07                 a0 = a0 + t1
 72956: 84 7a 07                 a3 = a0 & 0x7
 72959: c8 ac 0c                 a5 = a5 + a3
 72962: 01                       fallthrough
      :                          @5722
 72963: 82 08                    a1 = u64 [ra]
 72965: ab 58 d8                 jump @5719 if a1 != s0
      :                          @5723
 72968: 7b 0c                    u64 [ra] = a5
 72970: 33 0b                    a4 = 0
 72972: c9 a7 05                 s0 = a0 - a3
 72975: 64 57                    a0 = s0
 72977: 33 08                    a1 = 0
 72979: 50 20 a2 03 46 ee 01     ra = 930, jump @13675
      :                          @5724 [@dyn 465]
 72986: 64 54                    t2 = s0
 72988: 82 15 10                 s0 = u64 [sp + 0x10]
 72991: 82 19                    a2 = u64 [sp]
 72993: 82 13 08                 t1 = u64 [sp + 0x8]
 72996: 52 09 0b                 jump @5727 if a2 != 0
      :                          @5725
 72999: 28 75                    jump @5736
      :                          @5726
 73001: 33 04 08                 t2 = 0x8
 73004: 51 09 70                 jump @5736 if a2 == 0
      :                          @5727
 73007: e6 59 07                 a0 = minu(a2, s0)
 73010: c9 57 08                 a1 = a0 - s0
 73013: 97 92 03                 t0 = a2 << 0x3
 73016: c8 24 0a                 a3 = t2 + t0
 73019: 64 97                    a0 = a2
 73021: 64 9b                    a4 = a2
 73023: 01                       fallthrough
      :                          @5728
 73024: 51 08 77                 jump @5739 if a1 == 0
      :                          @5729
 73027: 82 6c                    a5 = u64 [s1]
 73029: 7b ac                    u64 [a3] = a5
 73031: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 73034: 95 66 08                 s1 = s1 + 0x8
 73037: 95 88 01                 a1 = a1 + 0x1
 73040: 95 77 01                 a0 = a0 + 0x1
 73043: 95 aa 08                 a3 = a3 + 0x8
 73046: 52 0b ea                 jump @5728 if a4 != 0
      :                          @5730
 73049: 33 07 02                 a0 = 0x2
 73052: ac 79 40                 jump @5736 if a2 <u a0
      :                          @5731
 73055: c8 24 08                 a1 = t2 + t0
 73058: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
 73061: 95 57 fe                 a0 = s0 + 0xfffffffffffffffe
 73064: 97 98 04                 a1 = a2 << 0x4
 73067: c8 48 08                 a1 = a1 + t2
 73070: 95 8b f8                 a4 = a1 + 0xfffffffffffffff8
 73073: 33 02 01                 t0 = 0x1
 73076: 64 98                    a1 = a2
 73078: 01                       fallthrough
      :                          @5732
 73079: ae 57 40                 jump @5739 if a0 >=u s0
      :                          @5733
 73082: 95 76 01                 s1 = a0 + 0x1
 73085: ae 56 38                 jump @5737 if s1 >=u s0
      :                          @5734
 73088: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 73091: ae 58 33                 jump @5738 if a1 >=u s0
      :                          @5735
 73094: 82 bc f8                 a5 = u64 [a4 + 0xfffffffffffffff8]
 73097: 82 b6                    s1 = u64 [a4]
 73099: c8 6c 0c                 a5 = a5 + s1
 73102: 7b ac                    u64 [a3] = a5
 73104: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 73107: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 73110: 95 bb f0                 a4 = a4 + 0xfffffffffffffff0
 73113: ac 82 de                 jump @5732 if t0 <u a1
      :                          @5736
 73116: 7b 39 18                 u64 [t1 + 0x18] = a2
 73119: 7b 35                    u64 [t1] = s0
 73121: 7b 34 08                 u64 [t1 + 0x8] = t2
 73124: 7b 35 10                 u64 [t1 + 0x10] = s0
 73127: 82 10 28                 ra = u64 [sp + 0x28]
 73130: 82 15 20                 s0 = u64 [sp + 0x20]
 73133: 82 16 18                 s1 = u64 [sp + 0x18]
 73136: 95 11 30                 sp = sp + 0x30
 73139: 32 00                    ret
      :                          @5737
 73141: 00                       trap
      :                          @5738
 73142: 00                       trap
      :                          @5739
 73143: 00                       trap
      :                          @5740
 73144: 00                       trap
      :                          @5741
 73145: 00                       trap
      :                          @5742
 73146: 64 7a                    a3 = a0
 73148: 82 7b 18                 a4 = u64 [a0 + 0x18]
 73151: c8 8b 07                 a0 = a4 + a1
 73154: c8 b9 09                 a2 = a2 + a4
 73157: ae 79 0d                 jump @5745 if a2 >=u a0
      :                          @5743
 73160: 33 07                    a0 = 0
 73162: 28 00 c5 00              jump @9391
      :                          @5744
 73166: 64 a7                    a0 = a3
 73168: 32 00                    ret
      :                          @5745
 73170: 82 a8 10                 a1 = u64 [a3 + 0x10]
 73173: 82 ab 08                 a4 = u64 [a3 + 0x8]
 73176: 33 0a                    a3 = 0
 73178: 28 0b                    jump @5747
      :                          @5746
 73180: 98 77 01                 a0 = a0 >> 0x1
 73183: 98 99 01                 a2 = a2 >> 0x1
 73186: ac 79 ec                 jump @5744 if a2 <u a0
      :                          @5747
 73189: 84 7c 01                 a5 = a0 & 0x1
 73192: 51 0c 15                 jump @5750 if a5 == 0
      :                          @5748
 73195: ae 87 2b                 jump @5753 if a0 >=u a1
      :                          @5749
 73198: 97 7c 03                 a5 = a0 << 0x3
 73201: c8 bc 0c                 a5 = a5 + a4
 73204: 82 cc                    a5 = u64 [a5]
 73206: c8 ca 0a                 a3 = a3 + a5
 73209: 95 77 01                 a0 = a0 + 0x1
 73212: 01                       fallthrough
      :                          @5750
 73213: 84 9c 01                 a5 = a2 & 0x1
 73216: 52 0c dc                 jump @5746 if a5 != 0
      :                          @5751
 73219: ae 89 14                 jump @5754 if a2 >=u a1
      :                          @5752
 73222: 97 9c 03                 a5 = a2 << 0x3
 73225: c8 bc 0c                 a5 = a5 + a4
 73228: 82 cc                    a5 = u64 [a5]
 73230: c8 ca 0a                 a3 = a3 + a5
 73233: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 73236: 28 c8                    jump @5746
      :                          @5753
 73238: 00                       trap
      :                          @5754
 73239: 00                       trap
      :                          @5755
 73240: cd 87 0a                 a3 = a0 %u a1
 73243: 51 0a 32                 jump @5761 if a3 == 0
      :                          @5756
 73246: 95 8c ff                 a5 = a1 + 0xffffffffffffffff
 73249: 33 09 03                 a2 = 0x3
 73252: 8e c7                    a0 = a5 >u 0
 73254: ae 98 14                 jump @5759 if a1 >=u a2
      :                          @5757
 73257: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 73260: 88 77 01                 a0 = a0 <u 0x1
 73263: 32 00                    ret
      :                          @5758
 73265: 98 bc 01                 a5 = a4 >> 0x1
 73268: ca aa 0a                 a3 = a3 * a3
 73271: ae b9 f2                 jump @5757 if a2 >=u a4
      :                          @5759
 73274: 64 cb                    a4 = a5
 73276: 84 cc 02                 a5 = a5 & 0x2
 73279: cd 8a 0a                 a3 = a3 %u a1
 73282: 51 0c ef                 jump @5758 if a5 == 0
      :                          @5760
 73285: ca 7a 07                 a0 = a3 * a0
 73288: cd 87 07                 a0 = a0 %u a1
 73291: 28 e6                    jump @5758
      :                          @5761
 73293: 33 07 01                 a0 = 0x1
 73296: 28 29 c6 00              jump @9421
      :                          @5762 [@dyn 466]
 73300: 3a 07 80 12 03           a0 = u64 [0x31280]
 73305: 51 07 ab 05              jump @5830 if a0 == 0
      :                          @5763
 73309: 82 75 08                 s0 = u64 [a0 + 0x8]
 73312: 3a 08 c8 10 03           a1 = u64 [0x310c8]
 73317: 7b 18 08                 u64 [sp + 0x8] = a1
 73320: 82 77                    a0 = u64 [a0]
 73322: 7b 17 48                 u64 [sp + 0x48] = a0
 73325: 82 58 18                 a1 = u64 [s0 + 0x18]
 73328: b4 80 02 a6 03           ra = 934, jump [a1]
      :                          @5764 [@dyn 467]
 73333: 82 58 20                 a1 = u64 [s0 + 0x20]
 73336: 64 76                    s1 = a0
 73338: 82 17 48                 a0 = u64 [sp + 0x48]
 73341: b4 80 02 a8 03           ra = 936, jump [a1]
      :                          @5765 [@dyn 468]
 73346: 82 10 08                 ra = u64 [sp + 0x8]
 73349: 82 69                    a2 = u64 [s1]
 73351: 82 68 08                 a1 = u64 [s1 + 0x8]
 73354: d3 97 07                 a0 = a0 ^ a2
 73357: ca 07 07                 a0 = a0 * ra
 73360: d3 87 07                 a0 = a0 ^ a1
 73363: 9e 77 38                 a0 = a0 >>r 0x38
 73366: 82 6a 20                 a3 = u64 [s1 + 0x20]
 73369: ca 07 08                 a1 = a0 * ra
 73372: d3 89 09                 a2 = a2 ^ a1
 73375: 9e 97 28                 a0 = a2 >>r 0x28
 73378: d3 7a 0a                 a3 = a3 ^ a0
 73381: ca 0a 09                 a2 = a3 * ra
 73384: d3 89 09                 a2 = a2 ^ a1
 73387: 9e 99 38                 a2 = a2 >>r 0x38
 73390: ca 09 09                 a2 = a2 * ra
 73393: d3 79 0a                 a3 = a2 ^ a0
 73396: 9e aa 28                 a3 = a3 >>r 0x28
 73399: 82 6b 28                 a4 = u64 [s1 + 0x28]
 73402: ca 0a 0c                 a5 = a3 * ra
 73405: d3 c9 09                 a2 = a2 ^ a5
 73408: dc a9 09                 a2 = a2 <<r a3
 73411: d3 7b 0b                 a4 = a4 ^ a0
 73414: ca 0b 0a                 a3 = a4 * ra
 73417: d3 8a 0a                 a3 = a3 ^ a1
 73420: 9e aa 38                 a3 = a3 >>r 0x38
 73423: ca 0a 0a                 a3 = a3 * ra
 73426: d3 7a 0b                 a4 = a3 ^ a0
 73429: 9e bb 28                 a4 = a4 >>r 0x28
 73432: 82 6c 30                 a5 = u64 [s1 + 0x30]
 73435: ca 0b 05                 s0 = a4 * ra
 73438: d3 5a 0a                 a3 = a3 ^ s0
 73441: dc ba 0a                 a3 = a3 <<r a4
 73444: d3 7c 0c                 a5 = a5 ^ a0
 73447: ca 0c 0b                 a4 = a5 * ra
 73450: d3 8b 0b                 a4 = a4 ^ a1
 73453: 9e bb 38                 a4 = a4 >>r 0x38
 73456: ca 0b 0b                 a4 = a4 * ra
 73459: d3 7b 0c                 a5 = a4 ^ a0
 73462: 9e cc 28                 a5 = a5 >>r 0x28
 73465: 82 66 38                 s1 = u64 [s1 + 0x38]
 73468: ca 0c 05                 s0 = a5 * ra
 73471: d3 5b 0b                 a4 = a4 ^ s0
 73474: dc cb 0b                 a4 = a4 <<r a5
 73477: d3 76 06                 s1 = s1 ^ a0
 73480: ca 06 0c                 a5 = s1 * ra
 73483: d3 c8 08                 a1 = a1 ^ a5
 73486: 9e 88 38                 a1 = a1 >>r 0x38
 73489: ca 08 08                 a1 = a1 * ra
 73492: d3 87 07                 a0 = a0 ^ a1
 73495: 9e 77 28                 a0 = a0 >>r 0x28
 73498: ca 07 0c                 a5 = a0 * ra
 73501: d3 c8 08                 a1 = a1 ^ a5
 73504: dc 78 07                 a0 = a1 <<r a0
 73507: 7b 19 88 00              u64 [sp + 0x88] = a2
 73511: 7b 1a 90 00              u64 [sp + 0x90] = a3
 73515: 7b 1b 98 00              u64 [sp + 0x98] = a4
 73519: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 73523: 33 0a 48 05 01           a3 = 0x10548
 73528: 7b 1a 68                 u64 [sp + 0x68] = a3
 73531: 49 21 80 00              u64 [sp + 128] = 0
 73535: 82 18 60                 a1 = u64 [sp + 0x60]
 73538: 49 11 78                 u64 [sp + 120] = 0
 73541: 49 11 70                 u64 [sp + 112] = 0
 73544: 49 11 60                 u64 [sp + 96] = 0
 73547: 33 07 01                 a0 = 0x1
 73550: 51 08 26 04              jump @5812 if a1 == 0
      :                          @5766
 73554: 82 19 58                 a2 = u64 [sp + 0x58]
 73557: 97 87 03                 a0 = a1 << 0x3
 73560: c8 97 07                 a0 = a0 + a2
 73563: 7b 17 20                 u64 [sp + 0x20] = a0
 73566: 3a 07 d0 10 03           a0 = u64 [0x310d0]
 73571: 7b 17 40                 u64 [sp + 0x40] = a0
 73574: 14 07 01 01 01 01 01 01 01 01 a0 = 0x101010101010101
 73584: 7b 17 18                 u64 [sp + 0x18] = a0
 73587: 49 11 38 ff fe fe fe     u64 [sp + 56] = 0xfffffffffefefeff
 73594: 01                       fallthrough
      :                          @5767
 73595: 64 97                    a0 = a2
 73597: 82 99                    a2 = u64 [a2]
 73599: 82 18 88 00              a1 = u64 [sp + 0x88]
 73603: 33 04                    t2 = 0
 73605: 82 1a 90 00              a3 = u64 [sp + 0x90]
 73609: 95 77 08                 a0 = a0 + 0x8
 73612: 7b 17 30                 u64 [sp + 0x30] = a0
 73615: 7b 19 48                 u64 [sp + 0x48] = a2
 73618: d3 98 07                 a0 = a1 ^ a2
 73621: ca 07 07                 a0 = a0 * ra
 73624: d3 a7 07                 a0 = a0 ^ a3
 73627: 9e 77 38                 a0 = a0 >>r 0x38
 73630: ca 07 07                 a0 = a0 * ra
 73633: d3 78 08                 a1 = a1 ^ a0
 73636: 9e 88 28                 a1 = a1 >>r 0x28
 73639: ca 08 0a                 a3 = a1 * ra
 73642: d3 a7 07                 a0 = a0 ^ a3
 73645: dc 87 0c                 a5 = a0 <<r a1
 73648: 82 12 68                 t0 = u64 [sp + 0x68]
 73651: 82 18 70                 a1 = u64 [sp + 0x70]
 73654: 98 c9 39                 a2 = a5 >> 0x39
 73657: 82 17 18                 a0 = u64 [sp + 0x18]
 73660: 7b 19 10                 u64 [sp + 0x10] = a2
 73663: ca 79 03                 t1 = a2 * a0
 73666: 95 2b f0                 a4 = t0 + 0xfffffffffffffff0
 73669: 7b 1c 28                 u64 [sp + 0x28] = a5
 73672: 01                       fallthrough
      :                          @5768
 73673: d2 8c 0c                 a5 = a5 & a1
 73676: c8 c2 07                 a0 = t0 + a5
 73679: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 73682: 7c 76                    s1 = u8 [a0]
 73684: 7c 79 02                 a2 = u8 [a0 + 0x2]
 73687: 7c 75 03                 s0 = u8 [a0 + 0x3]
 73690: 97 aa 08                 a3 = a3 << 0x8
 73693: d4 6a 0a                 a3 = a3 | s1
 73696: 97 99 10                 a2 = a2 << 0x10
 73699: 97 55 18                 s0 = s0 << 0x18
 73702: d4 59 09                 a2 = a2 | s0
 73705: d4 a9 09                 a2 = a2 | a3
 73708: 7c 7a 05                 a3 = u8 [a0 + 0x5]
 73711: 7c 75 04                 s0 = u8 [a0 + 0x4]
 73714: 7c 76 06                 s1 = u8 [a0 + 0x6]
 73717: 7c 77 07                 a0 = u8 [a0 + 0x7]
 73720: 97 aa 08                 a3 = a3 << 0x8
 73723: d4 5a 0a                 a3 = a3 | s0
 73726: 97 66 10                 s1 = s1 << 0x10
 73729: 97 77 18                 a0 = a0 << 0x18
 73732: d4 67 07                 a0 = a0 | s1
 73735: d4 a7 07                 a0 = a0 | a3
 73738: 97 77 20                 a0 = a0 << 0x20
 73741: d4 97 06                 s1 = a0 | a2
 73744: d3 36 07                 a0 = s1 ^ t1
 73747: 82 1a 38                 a3 = u64 [sp + 0x38]
 73750: 97 a9 20                 a2 = a3 << 0x20
 73753: c8 a9 09                 a2 = a2 + a3
 73756: c8 79 09                 a2 = a2 + a0
 73759: 82 1a 40                 a3 = u64 [sp + 0x40]
 73762: e0 7a 07                 a0 = a3 & ~a0
 73765: d2 97 07                 a0 = a0 & a2
 73768: 01                       fallthrough
      :                          @5769
 73769: 51 07 24                 jump @5772 if a0 == 0
      :                          @5770
 73772: 6a 79                    a2 = ctz a0
 73774: 98 99 03                 a2 = a2 >> 0x3
 73777: c8 c9 09                 a2 = a2 + a5
 73780: d2 89 0a                 a3 = a2 & a1
 73783: 97 a9 04                 a2 = a3 << 0x4
 73786: c9 9b 09                 a2 = a4 - a2
 73789: 82 99                    a2 = u64 [a2]
 73791: 95 75 ff                 s0 = a0 + 0xffffffffffffffff
 73794: d2 57 07                 a0 = a0 & s0
 73797: 82 15 48                 s0 = u64 [sp + 0x48]
 73800: ab 59 e1                 jump @5769 if a2 != s0
      :                          @5771
 73803: 28 1a                    jump @5774
      :                          @5772
 73805: 97 67 01                 a0 = s1 << 0x1
 73808: 82 19 40                 a2 = u64 [sp + 0x40]
 73811: d2 69 09                 a2 = a2 & s1
 73814: d2 97 07                 a0 = a0 & a2
 73817: 52 07 2b                 jump @5777 if a0 != 0
      :                          @5773
 73820: 95 44 08                 t2 = t2 + 0x8
 73823: c8 4c 0c                 a5 = a5 + t2
 73826: 28 67 ff                 jump @5768
      :                          @5774
 73829: 9a a7                    a0 = -a3
 73831: 97 77 04                 a0 = a0 << 0x4
 73834: c8 72 02                 t0 = t0 + a0
 73837: 81 27 f8                 a0 = i32 [t0 + 0xfffffffffffffff8]
 73840: 01                       fallthrough
      :                          @5775
 73841: 83 77 01                 i32 a0 = a0 + 0x1
 73844: 7a 27 f8                 u32 [t0 + 0xfffffffffffffff8] = a0
 73847: 82 17 20                 a0 = u64 [sp + 0x20]
 73850: 82 19 30                 a2 = u64 [sp + 0x30]
 73853: ab 79 fe fe              jump @5767 if a2 != a0
      :                          @5776
 73857: 28 13 02                 jump @5791
      :                          @5777
 73860: 82 19 28                 a2 = u64 [sp + 0x28]
 73863: d2 89 09                 a2 = a2 & a1
 73866: c8 92 07                 a0 = t0 + a2
 73869: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 73872: 7c 7b                    a4 = u8 [a0]
 73874: 7c 7c 02                 a5 = u8 [a0 + 0x2]
 73877: 7c 76 03                 s1 = u8 [a0 + 0x3]
 73880: 97 aa 08                 a3 = a3 << 0x8
 73883: d4 ba 0a                 a3 = a3 | a4
 73886: 97 cc 10                 a5 = a5 << 0x10
 73889: 97 66 18                 s1 = s1 << 0x18
 73892: d4 6c 0c                 a5 = a5 | s1
 73895: d4 ca 0a                 a3 = a3 | a5
 73898: 7c 7b 05                 a4 = u8 [a0 + 0x5]
 73901: 7c 7c 04                 a5 = u8 [a0 + 0x4]
 73904: 7c 76 06                 s1 = u8 [a0 + 0x6]
 73907: 7c 77 07                 a0 = u8 [a0 + 0x7]
 73910: 97 bb 08                 a4 = a4 << 0x8
 73913: d4 cb 0b                 a4 = a4 | a5
 73916: 97 66 10                 s1 = s1 << 0x10
 73919: 97 77 18                 a0 = a0 << 0x18
 73922: d4 67 07                 a0 = a0 | s1
 73925: d4 b7 07                 a0 = a0 | a4
 73928: 97 77 20                 a0 = a0 << 0x20
 73931: d4 a7 07                 a0 = a0 | a3
 73934: 82 1a 40                 a3 = u64 [sp + 0x40]
 73937: d2 a7 07                 a0 = a0 & a3
 73940: 52 07 5d                 jump @5780 if a0 != 0
      :                          @5778
 73943: 33 0a 08                 a3 = 0x8
 73946: 82 13 40                 t1 = u64 [sp + 0x40]
 73949: 01                       fallthrough
      :                          @5779
 73950: c8 a9 09                 a2 = a2 + a3
 73953: d2 89 09                 a2 = a2 & a1
 73956: c8 92 07                 a0 = t0 + a2
 73959: 7c 7b 01                 a4 = u8 [a0 + 0x1]
 73962: 7c 7c                    a5 = u8 [a0]
 73964: 7c 76 02                 s1 = u8 [a0 + 0x2]
 73967: 7c 75 03                 s0 = u8 [a0 + 0x3]
 73970: 97 bb 08                 a4 = a4 << 0x8
 73973: d4 cb 0b                 a4 = a4 | a5
 73976: 97 66 10                 s1 = s1 << 0x10
 73979: 97 55 18                 s0 = s0 << 0x18
 73982: d4 65 05                 s0 = s0 | s1
 73985: d4 5b 0b                 a4 = a4 | s0
 73988: 7c 7c 05                 a5 = u8 [a0 + 0x5]
 73991: 7c 76 04                 s1 = u8 [a0 + 0x4]
 73994: 7c 75 06                 s0 = u8 [a0 + 0x6]
 73997: 7c 77 07                 a0 = u8 [a0 + 0x7]
 74000: 97 cc 08                 a5 = a5 << 0x8
 74003: d4 6c 0c                 a5 = a5 | s1
 74006: 97 55 10                 s0 = s0 << 0x10
 74009: 97 77 18                 a0 = a0 << 0x18
 74012: d4 57 07                 a0 = a0 | s0
 74015: d4 c7 07                 a0 = a0 | a5
 74018: 97 77 20                 a0 = a0 << 0x20
 74021: d4 b7 07                 a0 = a0 | a4
 74024: d2 37 07                 a0 = a0 & t1
 74027: 95 aa 08                 a3 = a3 + 0x8
 74030: 51 07 b0                 jump @5779 if a0 == 0
      :                          @5780
 74033: 6a 77                    a0 = ctz a0
 74035: 98 77 03                 a0 = a0 >> 0x3
 74038: c8 97 07                 a0 = a0 + a2
 74041: d2 87 09                 a2 = a0 & a1
 74044: c8 92 07                 a0 = t0 + a2
 74047: 7d 77                    a0 = i8 [a0]
 74049: 57 07 16                 jump @5782 if a0 <s 0
      :                          @5781
 74052: 82 27                    a0 = u64 [t0]
 74054: 82 19 40                 a2 = u64 [sp + 0x40]
 74057: d2 97 07                 a0 = a0 & a2
 74060: 6a 79                    a2 = ctz a0
 74062: 98 99 03                 a2 = a2 >> 0x3
 74065: c8 92 07                 a0 = t0 + a2
 74068: 7c 77                    a0 = u8 [a0]
 74070: 01                       fallthrough
      :                          @5782
 74071: 82 1a 78                 a3 = u64 [sp + 0x78]
 74074: 8e aa                    a3 = a3 >u 0
 74076: 84 7b 01                 a4 = a0 & 0x1
 74079: 88 b7 01                 a0 = a4 <u 0x1
 74082: d4 a7 07                 a0 = a0 | a3
 74085: 51 07 3f                 jump @5784 if a0 == 0
      :                          @5783
 74088: 82 17 78                 a0 = u64 [sp + 0x78]
 74091: c9 b7 07                 a0 = a0 - a4
 74094: 7b 17 78                 u64 [sp + 0x78] = a0
 74097: 95 97 f8                 a0 = a2 + 0xfffffffffffffff8
 74100: d2 87 07                 a0 = a0 & a1
 74103: c8 27 07                 a0 = a0 + t0
 74106: c8 92 08                 a1 = t0 + a2
 74109: 82 1a 10                 a3 = u64 [sp + 0x10]
 74112: 78 8a                    u8 [a1] = a3
 74114: 78 7a 08                 u8 [a0 + 0x8] = a3
 74117: 82 18 80 00              a1 = u64 [sp + 0x80]
 74121: 33 07                    a0 = 0
 74123: 95 88 01                 a1 = a1 + 0x1
 74126: 7b 18 80 00              u64 [sp + 0x80] = a1
 74130: 97 99 04                 a2 = a2 << 0x4
 74133: c9 92 02                 t0 = t0 - a2
 74136: 82 18 48                 a1 = u64 [sp + 0x48]
 74139: 7b 28 f0                 u64 [t0 + 0xfffffffffffffff0] = a1
 74142: 48 12 f8                 u32 [t0 + 4294967288] = 0
 74145: 28 d0 fe                 jump @5775
      :                          @5784
 74148: 7b 1b                    u64 [sp] = a4
 74150: 95 17 68                 a0 = sp + 0x68
 74153: 95 18 88 00              a1 = sp + 0x88
 74157: 50 20 aa 03 c9 61 ff     ra = 938, jump @2311
      :                          @5785 [@dyn 469]
 74164: 82 18 70                 a1 = u64 [sp + 0x70]
 74167: 82 12 68                 t0 = u64 [sp + 0x68]
 74170: 82 16 28                 s1 = u64 [sp + 0x28]
 74173: d2 86 06                 s1 = s1 & a1
 74176: c8 62 07                 a0 = t0 + s1
 74179: 7c 79 01                 a2 = u8 [a0 + 0x1]
 74182: 7c 7a                    a3 = u8 [a0]
 74184: 7c 7b 02                 a4 = u8 [a0 + 0x2]
 74187: 7c 7c 03                 a5 = u8 [a0 + 0x3]
 74190: 97 99 08                 a2 = a2 << 0x8
 74193: d4 a9 09                 a2 = a2 | a3
 74196: 97 bb 10                 a4 = a4 << 0x10
 74199: 97 cc 18                 a5 = a5 << 0x18
 74202: d4 cb 0b                 a4 = a4 | a5
 74205: d4 b9 09                 a2 = a2 | a4
 74208: 7c 7a 05                 a3 = u8 [a0 + 0x5]
 74211: 7c 7b 04                 a4 = u8 [a0 + 0x4]
 74214: 7c 7c 06                 a5 = u8 [a0 + 0x6]
 74217: 7c 77 07                 a0 = u8 [a0 + 0x7]
 74220: 97 aa 08                 a3 = a3 << 0x8
 74223: d4 ba 0a                 a3 = a3 | a4
 74226: 97 cc 10                 a5 = a5 << 0x10
 74229: 97 77 18                 a0 = a0 << 0x18
 74232: d4 c7 07                 a0 = a0 | a5
 74235: d4 a7 07                 a0 = a0 | a3
 74238: 97 77 20                 a0 = a0 << 0x20
 74241: d4 97 07                 a0 = a0 | a2
 74244: 82 19 40                 a2 = u64 [sp + 0x40]
 74247: d2 97 07                 a0 = a0 & a2
 74250: 52 07 5d                 jump @5788 if a0 != 0
      :                          @5786
 74253: 33 09 08                 a2 = 0x8
 74256: 82 13 40                 t1 = u64 [sp + 0x40]
 74259: 01                       fallthrough
      :                          @5787
 74260: c8 96 06                 s1 = s1 + a2
 74263: d2 86 06                 s1 = s1 & a1
 74266: c8 62 07                 a0 = t0 + s1
 74269: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 74272: 7c 7b                    a4 = u8 [a0]
 74274: 7c 7c 02                 a5 = u8 [a0 + 0x2]
 74277: 7c 75 03                 s0 = u8 [a0 + 0x3]
 74280: 97 aa 08                 a3 = a3 << 0x8
 74283: d4 ba 0a                 a3 = a3 | a4
 74286: 97 cc 10                 a5 = a5 << 0x10
 74289: 97 55 18                 s0 = s0 << 0x18
 74292: d4 5c 0c                 a5 = a5 | s0
 74295: d4 ca 0a                 a3 = a3 | a5
 74298: 7c 7b 05                 a4 = u8 [a0 + 0x5]
 74301: 7c 7c 04                 a5 = u8 [a0 + 0x4]
 74304: 7c 75 06                 s0 = u8 [a0 + 0x6]
 74307: 7c 77 07                 a0 = u8 [a0 + 0x7]
 74310: 97 bb 08                 a4 = a4 << 0x8
 74313: d4 cb 0b                 a4 = a4 | a5
 74316: 97 55 10                 s0 = s0 << 0x10
 74319: 97 77 18                 a0 = a0 << 0x18
 74322: d4 57 07                 a0 = a0 | s0
 74325: d4 b7 07                 a0 = a0 | a4
 74328: 97 77 20                 a0 = a0 << 0x20
 74331: d4 a7 07                 a0 = a0 | a3
 74334: d2 37 07                 a0 = a0 & t1
 74337: 95 99 08                 a2 = a2 + 0x8
 74340: 51 07 b0                 jump @5787 if a0 == 0
      :                          @5788
 74343: 6a 77                    a0 = ctz a0
 74345: 98 77 03                 a0 = a0 >> 0x3
 74348: c8 67 07                 a0 = a0 + s1
 74351: d2 87 09                 a2 = a0 & a1
 74354: c8 92 07                 a0 = t0 + a2
 74357: 7d 77                    a0 = i8 [a0]
 74359: 82 10 08                 ra = u64 [sp + 0x8]
 74362: 57 07 15                 jump @5790 if a0 <s 0
      :                          @5789
 74365: 82 27                    a0 = u64 [t0]
 74367: 82 19 40                 a2 = u64 [sp + 0x40]
 74370: d2 97 07                 a0 = a0 & a2
 74373: 6a 79                    a2 = ctz a0
 74375: 98 99 03                 a2 = a2 >> 0x3
 74378: 82 1b                    a4 = u64 [sp]
 74380: 28 dc fe                 jump @5783
      :                          @5790
 74383: 82 1b                    a4 = u64 [sp]
 74385: 28 d7 fe                 jump @5783
      :                          @5791
 74388: 82 14 80 00              t2 = u64 [sp + 0x80]
 74392: 82 1a 68                 a3 = u64 [sp + 0x68]
 74395: 51 04 1c 01              jump @5821 if t2 == 0
      :                          @5792
 74399: 82 a7                    a0 = u64 [a3]
 74401: 95 a9 08                 a2 = a3 + 0x8
 74404: 82 1c 40                 a5 = u64 [sp + 0x40]
 74407: 64 a0                    ra = a3
 74409: e0 7c 0b                 a4 = a5 & ~a0
 74412: 33 03 03                 t1 = 0x3
 74415: 33 07 01                 a0 = 0x1
 74418: 7b 1a 38                 u64 [sp + 0x38] = a3
 74421: 28 11                    jump @5794
      :                          @5793
 74423: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
 74426: cb b7 08                 a1 = a0 /u a4
 74429: ca a8 07                 a0 = a1 * a3
 74432: 64 2b                    a4 = t0
 74434: 51 04 ae 00              jump @5811 if t2 == 0
      :                          @5794
 74438: 51 0b 09                 jump @5797 if a4 == 0
      :                          @5795
 74441: 52 00 14                 jump @5798 if ra != 0
      :                          @5796
 74444: 28 a4 00                 jump @5811
      :                          @5797
 74447: 82 9a                    a3 = u64 [a2]
 74449: e0 ac 0b                 a4 = a5 & ~a3
 74452: 95 00 80                 ra = ra + 0xffffffffffffff80
 74455: 95 99 08                 a2 = a2 + 0x8
 74458: 51 0b f5                 jump @5797 if a4 == 0
      :                          @5798
 74461: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 74464: d2 ba 02                 t0 = a3 & a4
 74467: 6a ba                    a3 = ctz a4
 74469: 97 aa 01                 a3 = a3 << 0x1
 74472: 84 aa f0 00              a3 = a3 & 0xf0
 74476: c9 a0 0a                 a3 = ra - a3
 74479: 81 a6 f8                 s1 = i32 [a3 + 0xfffffffffffffff8]
 74482: 82 a5 f0                 s0 = u64 [a3 + 0xfffffffffffffff0]
 74485: 88 6a 03                 a3 = s1 <u 0x3
 74488: 95 5b fe                 a4 = s0 + 0xfffffffffffffffe
 74491: 8e bb                    a4 = a4 >u 0
 74493: d4 ba 0a                 a3 = a3 | a4
 74496: 52 0a 0f                 jump @5800 if a3 != 0
      :                          @5799
 74499: 83 68 3e                 i32 a1 = s1 + 0x3e
 74502: 9b 8a 01                 a3 = 0x1 << a1
 74505: 64 75                    s0 = a0
 74507: 64 a6                    s1 = a3
 74509: 28 4b                    jump @5807
      :                          @5800
 74511: 33 0a 01                 a3 = 0x1
 74514: aa a6 38                 jump @5805 if s1 == a3
      :                          @5801
 74517: 7b 12 48                 u64 [sp + 0x48] = t0
 74520: 64 5b                    a4 = s0
 74522: 33 08 02                 a1 = 0x2
 74525: aa 86 23                 jump @5804 if s1 == a1
      :                          @5802
 74528: 83 62 ff                 i32 t0 = s1 + 0xffffffffffffffff
 74531: 33 0a 01                 a3 = 0x1
 74534: 64 5b                    a4 = s0
 74536: 01                       fallthrough
      :                          @5803
 74537: 64 26                    s1 = t0
 74539: 84 2c 01                 a5 = t0 & 0x1
 74542: 33 08 01                 a1 = 0x1
 74545: db cb 08                 a1 = a4 if a5 != 0
 74548: ca a8 0a                 a3 = a1 * a3
 74551: 8b 22 01                 i32 t0 = t0 >> 0x1
 74554: ca bb 0b                 a4 = a4 * a4
 74557: ac 63 ec                 jump @5803 if t1 <u s1
      :                          @5804
 74560: ca ab 06                 s1 = a4 * a3
 74563: 82 1c 40                 a5 = u64 [sp + 0x40]
 74566: 82 12 48                 t0 = u64 [sp + 0x48]
 74569: 01                       fallthrough
      :                          @5805
 74570: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 74573: ca 56 0a                 a3 = s1 * s0
 74576: 51 0a 15                 jump @5809 if a3 == 0
      :                          @5806
 74579: 64 75                    s0 = a0
 74581: 64 a6                    s1 = a3
 74583: 01                       fallthrough
      :                          @5807
 74584: 64 6b                    a4 = s1
 74586: cd 65 06                 s1 = s0 %u s1
 74589: 64 b5                    s0 = a4
 74591: 52 06 f9                 jump @5807 if s1 != 0
      :                          @5808
 74594: 28 55 ff                 jump @5793
      :                          @5809
 74597: 51 07 c3 00              jump @5832 if a0 == 0
      :                          @5810
 74601: 33 0a                    a3 = 0
 74603: 64 7b                    a4 = a0
 74605: 28 4a ff                 jump @5793
      :                          @5811
 74608: 82 1a 38                 a3 = u64 [sp + 0x38]
 74611: 01                       fallthrough
      :                          @5812
 74612: 82 19 70                 a2 = u64 [sp + 0x70]
 74615: 51 09 49                 jump @5822 if a2 == 0
      :                          @5813
 74618: 97 98 04                 a1 = a2 << 0x4
 74621: c8 89 09                 a2 = a2 + a1
 74624: 95 95 19                 s0 = a2 + 0x19
 74627: 33 09 00 00 01           a2 = 0x10000
 74632: ac 59 38                 jump @5822 if a2 <u s0
      :                          @5814
 74635: c9 8a 08                 a1 = a3 - a1
 74638: 95 88 f0                 a1 = a1 + 0xfffffffffffffff0
 74641: 33 0a c0 22 03           a3 = 0x322c0
 74646: 95 a9 00 00 01           a2 = a3 + 0x10000
 74651: 01                       fallthrough
      :                          @5815
 74652: 82 9a                    a3 = u64 [a2]
 74654: c9 a9 0b                 a4 = a2 - a3
 74657: ab 8b 1f                 jump @5822 if a4 != a1
      :                          @5816
 74660: c9 5a 0b                 a4 = a3 - s0
 74663: 01                       fallthrough
      :                          @5817
 74664: 82 9c                    a5 = u64 [a2]
 74666: ab ac f2                 jump @5815 if a5 != a3
      :                          @5818
 74669: 7b 9b                    u64 [a2] = a4
 74671: 33 06                    s1 = 0
 74673: 01                       fallthrough
      :                          @5819
 74674: ab ac ea                 jump @5815 if a5 != a3
      :                          @5820
 74677: 28 0b                    jump @5822
      :                          @5821
 74679: 33 07 01                 a0 = 0x1
 74682: 82 19 70                 a2 = u64 [sp + 0x70]
 74685: 52 09 bd                 jump @5813 if a2 != 0
      :                          @5822
 74688: 82 18 50                 a1 = u64 [sp + 0x50]
 74691: 51 08 2f                 jump @5829 if a1 == 0
      :                          @5823
 74694: 33 09 00 20              a2 = 0x2000
 74698: ac 89 28                 jump @5829 if a2 <u a1
      :                          @5824
 74701: 82 15 58                 s0 = u64 [sp + 0x58]
 74704: 97 88 03                 a1 = a1 << 0x3
 74707: 33 09 c0 22 03           a2 = 0x322c0
 74712: 95 99 00 00 01           a2 = a2 + 0x10000
 74717: 01                       fallthrough
      :                          @5825
 74718: 82 9a                    a3 = u64 [a2]
 74720: c9 a9 0b                 a4 = a2 - a3
 74723: ab 5b 0f                 jump @5829 if a4 != s0
      :                          @5826
 74726: c9 8a 0b                 a4 = a3 - a1
 74729: 01                       fallthrough
      :                          @5827
 74730: 82 9c                    a5 = u64 [a2]
 74732: ab ac f2                 jump @5825 if a5 != a3
      :                          @5828
 74735: 7b 9b                    u64 [a2] = a4
 74737: 01                       fallthrough
      :                          @5829
 74738: 82 10 b8 00              ra = u64 [sp + 0xb8]
 74742: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 74746: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 74750: 95 11 c0 00              sp = sp + 0xc0
 74754: 32 00                    ret
      :                          @5830
 74756: 33 00 ac 03              ra = 0x3ac
 74760: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 74763: 7b 10 20                 u64 [sp + 0x20] = ra
 74766: 7b 15 18                 u64 [sp + 0x18] = s0
 74769: 7b 16 10                 u64 [sp + 0x10] = s1
 74772: 33 06 c0 22 03           s1 = 0x322c0
 74777: 33 02 00 00 01           t0 = 0x10000
 74782: c8 26 09                 a2 = s1 + t0
 74785: 28 c4 65 ff              jump @2373
      :                          @5831 [@dyn 470]
 74789: 28 38 fa                 jump @5763
      :                          @5832
 74792: 00                       trap
      :                          @5833
 74793: 51 08 4a                 jump @5842 if a1 == 0
      :                          @5834
 74796: 64 7a                    a3 = a0
 74798: 64 8b                    a4 = a1
 74800: 01                       fallthrough
      :                          @5835
 74801: 64 b9                    a2 = a4
 74803: cd ba 0b                 a4 = a3 %u a4
 74806: 64 9a                    a3 = a2
 74808: 52 0b f9                 jump @5835 if a4 != 0
      :                          @5836
 74811: 33 0b 01                 a4 = 0x1
 74814: ab b9 39                 jump @5843 if a2 != a4
      :                          @5837
 74817: 64 7a                    a3 = a0
 74819: 01                       fallthrough
      :                          @5838
 74820: cd 8a 0c                 a5 = a3 %u a1
 74823: 33 0a 01                 a3 = 0x1
 74826: 64 b9                    a2 = a4
 74828: aa ac 20                 jump @5841 if a5 == a3
      :                          @5839
 74831: d8 89 0b                 a4 = a2 <u a1
 74834: 85 b2 01                 t0 = a4 ^ 0x1
 74837: c8 9b 0b                 a4 = a4 + a2
 74840: d8 b8 0a                 a3 = a1 <u a4
 74843: d4 a2 02                 t0 = t0 | a3
 74846: ca 7c 0a                 a3 = a5 * a0
 74849: 51 02 e3                 jump @5838 if t0 == 0
      :                          @5840
 74852: 33 0a                    a3 = 0
 74854: 33 07                    a0 = 0
 74856: 64 98                    a1 = a2
 74858: 32 00                    ret
      :                          @5841
 74860: 33 07 01                 a0 = 0x1
 74863: 64 98                    a1 = a2
 74865: 32 00                    ret
      :                          @5842
 74867: 51 17 01 0c              jump @5844 if a0 == 1
      :                          @5843
 74871: 33 0a                    a3 = 0
 74873: 33 07                    a0 = 0
 74875: 64 98                    a1 = a2
 74877: 32 00                    ret
      :                          @5844
 74879: 00                       trap
      :                          @5845
 74880: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 74883: 7b 10 38                 u64 [sp + 0x38] = ra
 74886: 7b 15 30                 u64 [sp + 0x30] = s0
 74889: 7b 16 28                 u64 [sp + 0x28] = s1
 74892: 64 70                    ra = a0
 74894: 84 77 01                 a0 = a0 & 0x1
 74897: 52 07 25                 jump @5847 if a0 != 0
      :                          @5846
 74900: 3a 08 78 12 03           a1 = u64 [0x31278]
 74905: 49 11 20                 u64 [sp + 32] = 0
 74908: 97 89 0d                 a2 = a1 << 0xd
 74911: d3 98 08                 a1 = a1 ^ a2
 74914: 98 89 07                 a2 = a1 >> 0x7
 74917: d3 98 08                 a1 = a1 ^ a2
 74920: 97 89 11                 a2 = a1 << 0x11
 74923: d3 98 08                 a1 = a1 ^ a2
 74926: 3e 08 78 12 03           u64 [0x31278] = a1
 74931: 28 e8 00                 jump @5866
      :                          @5847
 74934: 33 09                    a2 = 0
 74936: 95 07 fe                 a0 = ra + 0xfffffffffffffffe
 74939: 7b 17 18                 u64 [sp + 0x18] = a0
 74942: 95 07 ff                 a0 = ra + 0xffffffffffffffff
 74945: 7b 17 10                 u64 [sp + 0x10] = a0
 74948: 3a 07 d8 10 03           a0 = u64 [0x310d8]
 74953: 7b 17 08                 u64 [sp + 0x8] = a0
 74956: 33 0a 05                 a3 = 0x5
 74959: 33 0c 03                 a5 = 0x3
 74962: 01                       fallthrough
      :                          @5848
 74963: 95 97 fb                 a0 = a2 + 0xfffffffffffffffb
 74966: 88 77 01                 a0 = a0 <u 0x1
 74969: 7b 17 20                 u64 [sp + 0x20] = a0
 74972: aa a9 bf 00              jump @5866 if a2 == a3
      :                          @5849
 74976: 3a 07 78 12 03           a0 = u64 [0x31278]
 74981: 97 78 0d                 a1 = a0 << 0xd
 74984: d3 87 07                 a0 = a0 ^ a1
 74987: 98 78 07                 a1 = a0 >> 0x7
 74990: d3 87 07                 a0 = a0 ^ a1
 74993: 97 78 11                 a1 = a0 << 0x11
 74996: d3 87 07                 a0 = a0 ^ a1
 74999: 3e 07 78 12 03           u64 [0x31278] = a0
 75004: 82 18 08                 a1 = u64 [sp + 0x8]
 75007: ca 87 07                 a0 = a0 * a1
 75010: 82 18 18                 a1 = u64 [sp + 0x18]
 75013: cd 87 0b                 a4 = a0 %u a1
 75016: 95 bb 02                 a4 = a4 + 0x2
 75019: cd 0b 07                 a0 = a4 %u ra
 75022: 33 05 01                 s0 = 0x1
 75025: 64 02                    t0 = ra
 75027: 33 06 01                 s1 = 0x1
 75030: 51 07 49                 jump @5860 if a0 == 0
      :                          @5850
 75033: 33 06 01                 s1 = 0x1
 75036: 64 03                    t1 = ra
 75038: 28 18                    jump @5853
      :                          @5851
 75040: 64 72                    t0 = a0
 75042: 01                       fallthrough
      :                          @5852
 75043: d2 23 07                 a0 = t1 & t0
 75046: 84 78 02                 a1 = a0 & 0x2
 75049: 9a 64                    t2 = -s1
 75051: cd 23 07                 a0 = t1 %u t0
 75054: db 84 06                 s1 = t2 if a1 != 0
 75057: 64 23                    t1 = t0
 75059: 51 07 2c                 jump @5860 if a0 == 0
      :                          @5853
 75062: 84 78 01                 a1 = a0 & 0x1
 75065: 52 08 e7                 jump @5851 if a1 != 0
      :                          @5854
 75068: 84 38 07                 a1 = t1 & 0x7
 75071: aa c8 06                 jump @5856 if a1 == a5
      :                          @5855
 75074: ab a8 12                 jump @5858 if a1 != a3
      :                          @5856
 75077: 98 72 01                 t0 = a0 >> 0x1
 75080: 84 78 02                 a1 = a0 & 0x2
 75083: 9a 66                    s1 = -s1
 75085: 64 27                    a0 = t0
 75087: 51 08 f6                 jump @5856 if a1 == 0
      :                          @5857
 75090: 28 d1                    jump @5852
      :                          @5858
 75092: 84 78 02                 a1 = a0 & 0x2
 75095: 98 77 01                 a0 = a0 >> 0x1
 75098: 51 08 fa                 jump @5858 if a1 == 0
      :                          @5859
 75101: 28 c3                    jump @5851
      :                          @5860
 75103: 83 99 01                 i32 a2 = a2 + 0x1
 75106: 82 17 10                 a0 = u64 [sp + 0x10]
 75109: 28 0b                    jump @5862
      :                          @5861
 75111: 98 87 01                 a0 = a1 >> 0x1
 75114: ca bb 0b                 a4 = a4 * a4
 75117: ae 8c 16                 jump @5864 if a5 >=u a1
      :                          @5862
 75120: 64 78                    a1 = a0
 75122: 84 77 02                 a0 = a0 & 0x2
 75125: cd 0b 0b                 a4 = a4 %u ra
 75128: 51 07 ef                 jump @5861 if a0 == 0
      :                          @5863
 75131: ca 5b 07                 a0 = a4 * s0
 75134: cd 07 05                 s0 = a0 %u ra
 75137: 28 e6                    jump @5861
      :                          @5864
 75139: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 75142: 8e 27                    a0 = t0 >u 0
 75144: 88 68 01                 a1 = s1 <u 0x1
 75147: d4 87 07                 a0 = a0 | a1
 75150: 52 07 0d                 jump @5866 if a0 != 0
      :                          @5865
 75153: c9 65 05                 s0 = s0 - s1
 75156: ce 05 07                 a0 = s0 %s ra
 75159: 51 07 3c ff              jump @5848 if a0 == 0
      :                          @5866
 75163: 82 17 20                 a0 = u64 [sp + 0x20]
 75166: 82 10 38                 ra = u64 [sp + 0x38]
 75169: 82 15 30                 s0 = u64 [sp + 0x30]
 75172: 82 16 28                 s1 = u64 [sp + 0x28]
 75175: 95 11 40                 sp = sp + 0x40
 75178: 32 00                    ret
      :                          @5867
 75180: c8 a2 09                 a2 = t0 + a3
 75183: 98 99 01                 a2 = a2 >> 0x1
 75186: d6 99 0b                 a4 = a2 mulhu a2
 75189: ca 99 0c                 a5 = a2 * a2
 75192: db b3 0c                 a5 = t1 if a4 != 0
 75195: aa 8c 17                 jump @5870 if a5 == a1
      :                          @5868
 75198: d8 8c 0b                 a4 = a5 <u a1
 75201: 95 9c 01                 a5 = a2 + 0x1
 75204: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 75207: da b9 02                 t0 = a2 if a4 == 0
 75210: db bc 0a                 a3 = a5 if a4 != 0
 75213: ae a2 df                 jump @5867 if t0 >=u a3
      :                          @5869
 75216: 28 0b                    jump @5872
      :                          @5870
 75218: 64 92                    t0 = a2
 75220: 28 07                    jump @5872
      :                          @5871
 75222: 64 ba                    a3 = a4
 75224: aa 34 3e                 jump @5876 if t2 == t1
      :                          @5872
 75227: 95 22 01                 t0 = t0 + 0x1
 75230: ca 22 09                 a2 = t0 * t0
 75233: c9 89 03                 t1 = a2 - a1
 75236: 33 0c                    a5 = 0
 75238: 64 3a                    a3 = t1
 75240: 01                       fallthrough
      :                          @5873
 75241: c8 ca 0b                 a4 = a3 + a5
 75244: 98 bb 01                 a4 = a4 >> 0x1
 75247: ca bb 04                 t2 = a4 * a4
 75250: d6 bb 05                 s0 = a4 mulhu a4
 75253: 33 09 ff                 a2 = 0xffffffffffffffff
 75256: da 54 09                 a2 = t2 if s0 == 0
 75259: aa 39 db                 jump @5871 if a2 == t1
      :                          @5874
 75262: d8 39 09                 a2 = a2 <u t1
 75265: 95 b5 01                 s0 = a4 + 0x1
 75268: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 75271: da 9b 0a                 a3 = a4 if a2 == 0
 75274: db 95 0c                 a5 = s0 if a2 != 0
 75277: ae ca dc                 jump @5873 if a3 >=u a5
      :                          @5875
 75280: ca aa 04                 t2 = a3 * a3
 75283: ab 34 c8                 jump @5872 if t2 != t1
      :                          @5876
 75286: c9 a2 08                 a1 = t0 - a3
 75289: c8 2a 0a                 a3 = a3 + t0
 75292: 7b 78 08                 u64 [a0 + 0x8] = a1
 75295: 7b 7a 10                 u64 [a0 + 0x10] = a3
 75298: 33 08 01                 a1 = 0x1
 75301: 7b 78                    u64 [a0] = a1
 75303: 82 15 08                 s0 = u64 [sp + 0x8]
 75306: 95 11 10                 sp = sp + 0x10
 75309: 32 00                    ret
      :                          @5877
 75311: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 75314: 7b 10 38                 u64 [sp + 0x38] = ra
 75317: 7b 15 30                 u64 [sp + 0x30] = s0
 75320: 7b 16 28                 u64 [sp + 0x28] = s1
 75323: 64 85                    s0 = a1
 75325: 49 11 10                 u64 [sp + 16] = 0
 75328: 33 0a 08                 a3 = 0x8
 75331: 7b 1a 18                 u64 [sp + 0x18] = a3
 75334: 84 89 01                 a2 = a1 & 0x1
 75337: 49 11 20                 u64 [sp + 32] = 0
 75340: 7b 17                    u64 [sp] = a0
 75342: 33 08                    a1 = 0
 75344: 52 09 3c                 jump @5883 if a2 != 0
      :                          @5878
 75347: 33 07 02                 a0 = 0x2
 75350: 28 1b                    jump @5880
      :                          @5879
 75352: 97 89 03                 a2 = a1 << 0x3
 75355: c8 a9 09                 a2 = a2 + a3
 75358: 7b 97                    u64 [a2] = a0
 75360: 95 88 01                 a1 = a1 + 0x1
 75363: 98 56 01                 s1 = s0 >> 0x1
 75366: 84 59 02                 a2 = s0 & 0x2
 75369: 7b 18 20                 u64 [sp + 0x20] = a1
 75372: 64 65                    s0 = s1
 75374: 52 09 21                 jump @5884 if a2 != 0
      :                          @5880
 75377: 82 19 10                 a2 = u64 [sp + 0x10]
 75380: ab 98 e4                 jump @5879 if a1 != a2
      :                          @5881
 75383: 95 17 10                 a0 = sp + 0x10
 75386: 50 20 ae 03 8d 2c ff     ra = 942, jump @1581
      :                          @5882 [@dyn 471]
 75393: 33 07 02                 a0 = 0x2
 75396: 82 18 20                 a1 = u64 [sp + 0x20]
 75399: 82 1a 18                 a3 = u64 [sp + 0x18]
 75402: 28 ce                    jump @5879
      :                          @5883
 75404: 64 56                    s1 = s0
 75406: 01                       fallthrough
      :                          @5884
 75407: 14 05 ab aa aa aa aa aa aa aa s0 = 0xaaaaaaaaaaaaaaab
 75417: ca 56 07                 a0 = s1 * s0
 75420: 14 0a 00 00 00 00 55 55 55 55 a3 = 0x5555555500000000
 75430: 14 09 55 55 55 55 55 55 55 55 a2 = 0x5555555555555555
 75440: ae 79 e2 00              jump @5907 if a2 >=u a0
      :                          @5885
 75444: 55 16 19 4f              jump @5892 if s1 >=u 25
      :                          @5886
 75448: 54 16 01 2a              jump @5891 if s1 <=u 1
      :                          @5887
 75452: 82 17 10                 a0 = u64 [sp + 0x10]
 75455: ab 78 11                 jump @5890 if a1 != a0
      :                          @5888
 75458: 95 17 10                 a0 = sp + 0x10
 75461: 50 20 b0 03 42 2c ff     ra = 944, jump @1581
      :                          @5889 [@dyn 472]
 75468: 82 18 20                 a1 = u64 [sp + 0x20]
 75471: 01                       fallthrough
      :                          @5890
 75472: 82 17 18                 a0 = u64 [sp + 0x18]
 75475: 97 89 03                 a2 = a1 << 0x3
 75478: c8 97 07                 a0 = a0 + a2
 75481: 7b 76                    u64 [a0] = s1
 75483: 95 88 01                 a1 = a1 + 0x1
 75486: 7b 18 20                 u64 [sp + 0x20] = a1
 75489: 01                       fallthrough
      :                          @5891
 75490: 82 17 20                 a0 = u64 [sp + 0x20]
 75493: 82 18 18                 a1 = u64 [sp + 0x18]
 75496: 82 19 10                 a2 = u64 [sp + 0x10]
 75499: 82 1a                    a3 = u64 [sp]
 75501: 7b a7 10                 u64 [a3 + 0x10] = a0
 75504: 7b a8 08                 u64 [a3 + 0x8] = a1
 75507: 7b a9                    u64 [a3] = a2
 75509: 82 10 38                 ra = u64 [sp + 0x38]
 75512: 82 15 30                 s0 = u64 [sp + 0x30]
 75515: 82 16 28                 s1 = u64 [sp + 0x28]
 75518: 95 11 40                 sp = sp + 0x40
 75521: 32 00                    ret
      :                          @5892
 75523: 33 09 05                 a2 = 0x5
 75526: 28 0e                    jump @5894
      :                          @5893
 75528: 82 19 08                 a2 = u64 [sp + 0x8]
 75531: 95 99 06                 a2 = a2 + 0x6
 75534: ca 99 07                 a0 = a2 * a2
 75537: ac 76 a7                 jump @5886 if s1 <u a0
      :                          @5894
 75540: 51 09 c8 00              jump @5912 if a2 == 0
      :                          @5895
 75544: cd 96 07                 a0 = s1 %u a2
 75547: 64 95                    s0 = a2
 75549: 51 07 31                 jump @5900 if a0 == 0
      :                          @5896
 75552: 64 57                    a0 = s0
 75554: 95 55 02                 s0 = s0 + 0x2
 75557: 51 05 b7 00              jump @5912 if s0 == 0
      :                          @5897
 75561: 7b 17 08                 u64 [sp + 0x8] = a0
 75564: cd 56 07                 a0 = s1 %u s0
 75567: 52 07 d9                 jump @5893 if a0 != 0
      :                          @5898
 75570: 28 4b                    jump @5904
      :                          @5899
 75572: 82 17 18                 a0 = u64 [sp + 0x18]
 75575: 97 89 03                 a2 = a1 << 0x3
 75578: c8 97 07                 a0 = a0 + a2
 75581: 7b 75                    u64 [a0] = s0
 75583: 95 88 01                 a1 = a1 + 0x1
 75586: cb 56 06                 s1 = s1 /u s0
 75589: cd 56 07                 a0 = s1 %u s0
 75592: 7b 18 20                 u64 [sp + 0x20] = a1
 75595: 52 07 d5                 jump @5896 if a0 != 0
      :                          @5900
 75598: 82 17 10                 a0 = u64 [sp + 0x10]
 75601: ab 78 e3                 jump @5899 if a1 != a0
      :                          @5901
 75604: 95 17 10                 a0 = sp + 0x10
 75607: 50 20 b2 03 b0 2b ff     ra = 946, jump @1581
      :                          @5902 [@dyn 473]
 75614: 82 18 20                 a1 = u64 [sp + 0x20]
 75617: 28 d3                    jump @5899
      :                          @5903
 75619: 82 17 18                 a0 = u64 [sp + 0x18]
 75622: 97 89 03                 a2 = a1 << 0x3
 75625: c8 97 07                 a0 = a0 + a2
 75628: 7b 75                    u64 [a0] = s0
 75630: 95 88 01                 a1 = a1 + 0x1
 75633: cb 56 06                 s1 = s1 /u s0
 75636: cd 56 07                 a0 = s1 %u s0
 75639: 7b 18 20                 u64 [sp + 0x20] = a1
 75642: 52 07 8e                 jump @5893 if a0 != 0
      :                          @5904
 75645: 82 17 10                 a0 = u64 [sp + 0x10]
 75648: ab 78 e3                 jump @5903 if a1 != a0
      :                          @5905
 75651: 95 17 10                 a0 = sp + 0x10
 75654: 50 20 b4 03 81 2b ff     ra = 948, jump @1581
      :                          @5906 [@dyn 474]
 75661: 82 18 20                 a1 = u64 [sp + 0x20]
 75664: 28 d3                    jump @5903
      :                          @5907
 75666: 3a 0a e0 10 03           a3 = u64 [0x310e0]
 75671: 33 0b 03                 a4 = 0x3
 75674: 7b 15 08                 u64 [sp + 0x8] = s0
 75677: 28 20                    jump @5909
      :                          @5908
 75679: 82 17 18                 a0 = u64 [sp + 0x18]
 75682: 97 89 03                 a2 = a1 << 0x3
 75685: c8 97 07                 a0 = a0 + a2
 75688: 7b 7b                    u64 [a0] = a4
 75690: 95 88 01                 a1 = a1 + 0x1
 75693: d6 56 06                 s1 = s1 mulhu s0
 75696: 98 66 01                 s1 = s1 >> 0x1
 75699: ca 56 07                 a0 = s1 * s0
 75702: 7b 18 20                 u64 [sp + 0x20] = a1
 75705: ae a7 fb fe              jump @5885 if a0 >=u a3
      :                          @5909
 75709: 82 17 10                 a0 = u64 [sp + 0x10]
 75712: ab 78 df                 jump @5908 if a1 != a0
      :                          @5910
 75715: 95 17 10                 a0 = sp + 0x10
 75718: 64 a5                    s0 = a3
 75720: 50 20 b6 03 3f 2b ff     ra = 950, jump @1581
      :                          @5911 [@dyn 475]
 75727: 33 0b 03                 a4 = 0x3
 75730: 64 5a                    a3 = s0
 75732: 82 15 08                 s0 = u64 [sp + 0x8]
 75735: 82 18 20                 a1 = u64 [sp + 0x20]
 75738: 28 c5                    jump @5908
      :                          @5912
 75740: 00                       trap
      :                          @5913 [@dyn 476]
 75741: 82 13 40                 t1 = u64 [sp + 0x40]
 75744: 82 14 38                 t2 = u64 [sp + 0x38]
 75747: 97 39 03                 a2 = t1 << 0x3
 75750: 51 03 8d 00              jump @5924 if t1 == 0
      :                          @5914
 75754: 7b 13 10                 u64 [sp + 0x10] = t1
 75757: 98 37 3c                 a0 = t1 >> 0x3c
 75760: 52 07 f8 01              jump @5970 if a0 != 0
      :                          @5915
 75764: 88 77 01                 a0 = a0 <u 0x1
 75767: 97 72 03                 t0 = a0 << 0x3
 75770: 33 08 c0 22 03           a1 = 0x322c0
 75775: 33 00 c0 22 03           ra = 0x322c0
 75780: 33 03 00 00 01           t1 = 0x10000
 75785: c8 30 0a                 a3 = ra + t1
 75788: 01                       fallthrough
      :                          @5916
 75789: 82 a6                    s1 = u64 [a3]
 75791: c8 96 0b                 a4 = s1 + a2
 75794: ac 6b d5 01              jump @5969 if a4 <u s1
      :                          @5917
 75798: c8 2b 0c                 a5 = a4 + t0
 75801: d8 bc 05                 s0 = a5 <u a4
 75804: d8 c3 0c                 a5 = t1 <u a5
 75807: d4 5c 0c                 a5 = a5 | s0
 75810: 52 0c c5 01              jump @5969 if a5 != 0
      :                          @5918
 75814: c9 b0 0c                 a5 = ra - a4
 75817: c8 3c 0c                 a5 = a5 + t1
 75820: 84 c5 07                 s0 = a5 & 0x7
 75823: c8 5b 0b                 a4 = a4 + s0
 75826: 01                       fallthrough
      :                          @5919
 75827: 82 a7                    a0 = u64 [a3]
 75829: ab 67 d8                 jump @5916 if a0 != s1
      :                          @5920
 75832: 7b ab                    u64 [a3] = a4
 75834: c9 5c 07                 a0 = a5 - s0
 75837: 7b 17 20                 u64 [sp + 0x20] = a0
 75840: 7b 14                    u64 [sp] = t2
 75842: 64 48                    a1 = t2
 75844: 7b 19 08                 u64 [sp + 0x8] = a2
 75847: 50 20 ba 03 e5 e0 01     ra = 954, jump @13621
      :                          @5921 [@dyn 477]
 75854: 82 17 20                 a0 = u64 [sp + 0x20]
 75857: 82 18 10                 a1 = u64 [sp + 0x10]
 75860: 50 20 bc 03 71 eb fe     ra = 956, jump @344
      :                          @5922 [@dyn 478]
 75867: 82 13 10                 t1 = u64 [sp + 0x10]
 75870: 33 07 02                 a0 = 0x2
 75873: ae 73 1c                 jump @5925 if t1 >=u a0
      :                          @5923
 75876: 64 37                    a0 = t1
 75878: 82 14                    t2 = u64 [sp]
 75880: 82 19 08                 a2 = u64 [sp + 0x8]
 75883: 82 10 18                 ra = u64 [sp + 0x18]
 75886: 82 12 20                 t0 = u64 [sp + 0x20]
 75889: 28 79                    jump @5935
      :                          @5924
 75891: 33 07                    a0 = 0
 75893: 33 02 08                 t0 = 0x8
 75896: 82 10 18                 ra = u64 [sp + 0x18]
 75899: 28 6f                    jump @5935
      :                          @5925
 75901: 82 12 20                 t0 = u64 [sp + 0x20]
 75904: 82 2c                    a5 = u64 [t0]
 75906: 33 08 c0 22 03           a1 = 0x322c0
 75911: 82 19 08                 a2 = u64 [sp + 0x8]
 75914: c9 98 08                 a1 = a1 - a2
 75917: c8 65 05                 s0 = s0 + s1
 75920: 95 88 10 00 01           a1 = a1 + 0x10010
 75925: c9 58 08                 a1 = a1 - s0
 75928: 9a 35 01                 s0 = 0x1 - t1
 75931: 33 0a 02                 a3 = 0x2
 75934: 82 10 18                 ra = u64 [sp + 0x18]
 75937: 01                       fallthrough
      :                          @5926
 75938: 64 c6                    s1 = a5
 75940: 82 8c f8                 a5 = u64 [a1 + 0xfffffffffffffff8]
 75943: aa 6c 15                 jump @5929 if a5 == s1
      :                          @5927
 75946: 95 aa 01                 a3 = a3 + 0x1
 75949: c8 a5 0b                 a4 = s0 + a3
 75952: 95 88 08                 a1 = a1 + 0x8
 75955: ab 7b ef                 jump @5926 if a4 != a0
      :                          @5928
 75958: 64 37                    a0 = t1
 75960: 82 14                    t2 = u64 [sp]
 75962: 28 30                    jump @5935
      :                          @5929
 75964: 95 a7 ff                 a0 = a3 + 0xffffffffffffffff
 75967: ae 3a 28                 jump @5934 if a3 >=u t1
      :                          @5930
 75970: c9 a3 06                 s1 = t1 - a3
 75973: 82 14                    t2 = u64 [sp]
 75975: 28 0b                    jump @5932
      :                          @5931
 75977: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 75980: 95 88 08                 a1 = a1 + 0x8
 75983: 51 06 1b                 jump @5935 if s1 == 0
      :                          @5932
 75986: 97 7a 03                 a3 = a0 << 0x3
 75989: c8 2a 0a                 a3 = a3 + t0
 75992: 82 8b                    a4 = u64 [a1]
 75994: 82 ac f8                 a5 = u64 [a3 + 0xfffffffffffffff8]
 75997: aa cb ec                 jump @5931 if a4 == a5
      :                          @5933
 76000: 7b ab                    u64 [a3] = a4
 76002: 95 77 01                 a0 = a0 + 0x1
 76005: 28 e4                    jump @5931
      :                          @5934
 76007: 82 14                    t2 = u64 [sp]
 76009: 01                       fallthrough
      :                          @5935
 76010: 33 0c 01                 a5 = 0x1
 76013: 33 0a 02                 a3 = 0x2
 76016: 82 18 28                 a1 = u64 [sp + 0x28]
 76019: 28 0b                    jump @5937
      :                          @5936
 76021: 98 88 01                 a1 = a1 >> 0x1
 76024: ca aa 0a                 a3 = a3 * a3
 76027: 51 08 14                 jump @5939 if a1 == 0
      :                          @5937
 76030: 84 8b 01                 a4 = a1 & 0x1
 76033: cd 0a 0a                 a3 = a3 %u ra
 76036: 51 0b f1                 jump @5936 if a4 == 0
      :                          @5938
 76039: ca ca 0b                 a4 = a3 * a5
 76042: cd 0b 0c                 a5 = a4 %u ra
 76045: 28 e8                    jump @5936
      :                          @5939
 76047: 7b 12 20                 u64 [sp + 0x20] = t0
 76050: 33 02 01                 t0 = 0x1
 76053: ab 2c 65                 jump @5952 if a5 != t0
      :                          @5940
 76056: 97 77 03                 a0 = a0 << 0x3
 76059: 82 1a 20                 a3 = u64 [sp + 0x20]
 76062: c8 7a 08                 a1 = a3 + a0
 76065: 01                       fallthrough
      :                          @5941
 76066: d3 8a 07                 a0 = a3 ^ a1
 76069: 88 77 01                 a0 = a0 <u 0x1
 76072: aa 8a 55                 jump @5953 if a3 == a1
      :                          @5942
 76075: 82 ac                    a5 = u64 [a3]
 76077: 51 0c b9 00              jump @5968 if a5 == 0
      :                          @5943
 76081: 33 0b 01                 a4 = 0x1
 76084: 82 15 28                 s0 = u64 [sp + 0x28]
 76087: ae c5 1b                 jump @5948 if s0 >=u a5
      :                          @5944
 76090: 95 aa 08                 a3 = a3 + 0x8
 76093: 95 b6 ff                 s1 = a4 + 0xffffffffffffffff
 76096: 64 0b                    a4 = ra
 76098: 01                       fallthrough
      :                          @5945
 76099: 64 bc                    a5 = a4
 76101: cd b6 0b                 a4 = s1 %u a4
 76104: 64 c6                    s1 = a5
 76106: 52 0b f9                 jump @5945 if a4 != 0
      :                          @5946
 76109: aa 2c d5                 jump @5941 if a5 == t0
      :                          @5947
 76112: 28 2d                    jump @5953
      :                          @5948
 76114: 82 1b 28                 a4 = u64 [sp + 0x28]
 76117: cb cb 0c                 a5 = a4 /u a5
 76120: 33 0b 01                 a4 = 0x1
 76123: 33 06 02                 s1 = 0x2
 76126: 28 0b                    jump @5950
      :                          @5949
 76128: 98 cc 01                 a5 = a5 >> 0x1
 76131: ca 66 06                 s1 = s1 * s1
 76134: 51 0c d4                 jump @5944 if a5 == 0
      :                          @5950
 76137: 84 c5 01                 s0 = a5 & 0x1
 76140: cd 06 06                 s1 = s1 %u ra
 76143: 51 05 f1                 jump @5949 if s0 == 0
      :                          @5951
 76146: ca b6 0b                 a4 = s1 * a4
 76149: cd 0b 0b                 a4 = a4 %u ra
 76152: 28 e8                    jump @5949
      :                          @5952
 76154: 33 07                    a0 = 0
 76156: 01                       fallthrough
      :                          @5953
 76157: 82 15 20                 s0 = u64 [sp + 0x20]
 76160: 51 03 29                 jump @5960 if t1 == 0
      :                          @5954
 76163: 56 23 00 20 26           jump @5960 if t1 >u 8192
      :                          @5955
 76168: 33 08 c0 22 03           a1 = 0x322c0
 76173: 95 88 00 00 01           a1 = a1 + 0x10000
 76178: 01                       fallthrough
      :                          @5956
 76179: 82 86                    s1 = u64 [a1]
 76181: c9 68 0a                 a3 = a1 - s1
 76184: ab 5a 11                 jump @5960 if a3 != s0
      :                          @5957
 76187: c9 96 0a                 a3 = s1 - a2
 76190: 01                       fallthrough
      :                          @5958
 76191: 82 8b                    a4 = u64 [a1]
 76193: ab 6b f2                 jump @5956 if a4 != s1
      :                          @5959
 76196: 7b 8a                    u64 [a1] = a3
 76198: 33 0c                    a5 = 0
 76200: 01                       fallthrough
      :                          @5960
 76201: 82 18 30                 a1 = u64 [sp + 0x30]
 76204: 51 08 2c                 jump @5967 if a1 == 0
      :                          @5961
 76207: 33 09 00 20              a2 = 0x2000
 76211: ac 89 25                 jump @5967 if a2 <u a1
      :                          @5962
 76214: 97 88 03                 a1 = a1 << 0x3
 76217: 33 09 c0 22 03           a2 = 0x322c0
 76222: 95 99 00 00 01           a2 = a2 + 0x10000
 76227: 01                       fallthrough
      :                          @5963
 76228: 82 9a                    a3 = u64 [a2]
 76230: c9 a9 0b                 a4 = a2 - a3
 76233: ab 4b 0f                 jump @5967 if a4 != t2
      :                          @5964
 76236: c9 8a 0b                 a4 = a3 - a1
 76239: 01                       fallthrough
      :                          @5965
 76240: 82 9c                    a5 = u64 [a2]
 76242: ab ac f2                 jump @5963 if a5 != a3
      :                          @5966
 76245: 7b 9b                    u64 [a2] = a4
 76247: 01                       fallthrough
      :                          @5967
 76248: 82 10 58                 ra = u64 [sp + 0x58]
 76251: 82 15 50                 s0 = u64 [sp + 0x50]
 76254: 82 16 48                 s1 = u64 [sp + 0x48]
 76257: 95 11 60                 sp = sp + 0x60
 76260: 32 00                    ret
      :                          @5968
 76262: 00                       trap
      :                          @5969
 76263: 00                       trap
      :                          @5970
 76264: 00                       trap
      :                          @5971
 76265: 98 aa 01                 a3 = a3 >> 0x1
 76268: ca 77 0c                 a5 = a0 * a0
 76271: 51 0a 38                 jump @5974 if a3 == 0
      :                          @5972
 76274: d6 bc 09                 a2 = a5 mulhu a4
 76277: c9 9c 07                 a0 = a5 - a2
 76280: 98 77 01                 a0 = a0 >> 0x1
 76283: c8 97 07                 a0 = a0 + a2
 76286: 98 77 04                 a0 = a0 >> 0x4
 76289: ca 47 07                 a0 = a0 * t2
 76292: 84 a9 01                 a2 = a3 & 0x1
 76295: c9 7c 07                 a0 = a5 - a0
 76298: 51 09 df                 jump @5971 if a2 == 0
      :                          @5973
 76301: ca 75 08                 a1 = s0 * a0
 76304: d6 b8 09                 a2 = a1 mulhu a4
 76307: c9 98 0c                 a5 = a1 - a2
 76310: 98 cc 01                 a5 = a5 >> 0x1
 76313: c8 c9 09                 a2 = a2 + a5
 76316: 98 99 04                 a2 = a2 >> 0x4
 76319: ca 49 09                 a2 = a2 * t2
 76322: c9 98 05                 s0 = a1 - a2
 76325: 28 c4                    jump @5971
      :                          @5974
 76327: 3a 07 f0 10 03           a0 = u64 [0x310f0]
 76332: ca 32 09                 a2 = t0 * t1
 76335: d6 79 07                 a0 = a2 mulhu a0
 76338: c9 79 0a                 a3 = a2 - a0
 76341: 98 aa 01                 a3 = a3 >> 0x1
 76344: c8 a7 07                 a0 = a0 + a3
 76347: 98 77 04                 a0 = a0 >> 0x4
 76350: 96 77 15                 a0 = a0 * 0x15
 76353: c9 79 0a                 a3 = a2 - a0
 76356: 3a 09 f8 10 03           a2 = u64 [0x310f8]
 76361: 95 aa 01                 a3 = a3 + 0x1
 76364: 33 07 01                 a0 = 0x1
 76367: 33 0b 17                 a4 = 0x17
 76370: 28 0b                    jump @5976
      :                          @5975
 76372: 98 aa 01                 a3 = a3 >> 0x1
 76375: ca 88 05                 s0 = a1 * a1
 76378: 51 0a 38                 jump @5978 if a3 == 0
      :                          @5976
 76381: d6 95 0c                 a5 = s0 mulhu a2
 76384: c9 c5 08                 a1 = s0 - a5
 76387: 98 88 01                 a1 = a1 >> 0x1
 76390: c8 c8 08                 a1 = a1 + a5
 76393: 98 88 04                 a1 = a1 >> 0x4
 76396: ca b8 08                 a1 = a1 * a4
 76399: 84 ac 01                 a5 = a3 & 0x1
 76402: c9 85 08                 a1 = s0 - a1
 76405: 51 0c df                 jump @5975 if a5 == 0
      :                          @5977
 76408: ca 87 05                 s0 = a0 * a1
 76411: d6 95 0c                 a5 = s0 mulhu a2
 76414: c9 c5 07                 a0 = s0 - a5
 76417: 98 77 01                 a0 = a0 >> 0x1
 76420: c8 c7 07                 a0 = a0 + a5
 76423: 98 77 04                 a0 = a0 >> 0x4
 76426: ca b7 07                 a0 = a0 * a4
 76429: c9 75 07                 a0 = s0 - a0
 76432: 28 c4                    jump @5975
      :                          @5978
 76434: 82 15 08                 s0 = u64 [sp + 0x8]
 76437: 95 11 10                 sp = sp + 0x10
 76440: 32 00                    ret
      :                          @5979
 76442: 82 ab                    a4 = u64 [a3]
 76444: 95 bc 18                 a5 = a4 + 0x18
 76447: ac bc c7 03              jump @6036 if a5 <u a4
      :                          @5980
 76451: 95 c9 08                 a2 = a5 + 0x8
 76454: d8 c9 06                 s1 = a2 <u a5
 76457: d8 92 09                 a2 = t0 <u a2
 76460: d4 69 09                 a2 = a2 | s1
 76463: 52 09 b7 03              jump @6036 if a2 != 0
      :                          @5981
 76467: c9 c3 06                 s1 = t1 - a5
 76470: c8 26 06                 s1 = s1 + t0
 76473: 84 69 07                 a2 = s1 & 0x7
 76476: c8 9c 0c                 a5 = a5 + a2
 76479: 01                       fallthrough
      :                          @5982
 76480: 82 a5                    s0 = u64 [a3]
 76482: ab b5 d8                 jump @5979 if s0 != a4
      :                          @5983
 76485: 7b ac                    u64 [a3] = a5
 76487: 01                       fallthrough
      :                          @5984
 76488: c9 96 06                 s1 = s1 - a2
 76491: 3a 02 08 11 03           t0 = u64 [0x31108]
 76496: 49 11 18 03              u64 [sp + 24] = 0x3
 76500: 7b 16 20                 u64 [sp + 0x20] = s1
 76503: d6 28 07                 a0 = a1 mulhu t0
 76506: 98 77 0b                 a0 = a0 >> 0xb
 76509: 33 0b 29 08              a4 = 0x829
 76513: ca b7 07                 a0 = a0 * a4
 76516: c9 78 08                 a1 = a1 - a0
 76519: 7b 68                    u64 [s1] = a1
 76521: 49 11 28 01              u64 [sp + 40] = 0x1
 76525: 33 0c 78 12 03           a5 = 0x31278
 76530: 3a 07 78 12 03           a0 = u64 [0x31278]
 76535: 3a 05 00 11 03           s0 = u64 [0x31100]
 76540: 97 78 0d                 a1 = a0 << 0xd
 76543: d3 87 07                 a0 = a0 ^ a1
 76546: 98 78 07                 a1 = a0 >> 0x7
 76549: d3 87 07                 a0 = a0 ^ a1
 76552: 97 78 11                 a1 = a0 << 0x11
 76555: d3 87 07                 a0 = a0 ^ a1
 76558: ca 57 09                 a2 = a0 * s0
 76561: 3e 07 78 12 03           u64 [0x31278] = a0
 76566: 82 18 28                 a1 = u64 [sp + 0x28]
 76569: 82 17 18                 a0 = u64 [sp + 0x18]
 76572: d6 29 0a                 a3 = a2 mulhu t0
 76575: 98 aa 0b                 a3 = a3 >> 0xb
 76578: ca ba 0a                 a3 = a3 * a4
 76581: c9 a9 06                 s1 = a2 - a3
 76584: 7b 14 08                 u64 [sp + 0x8] = t2
 76587: ab 78 22                 jump @5987 if a1 != a0
      :                          @5985
 76590: 95 17 18                 a0 = sp + 0x18
 76593: 7b 12 10                 u64 [sp + 0x10] = t0
 76596: 49 01 29 08              u64 [sp + 0] = 0x829
 76600: 50 20 be 03 cf 27 ff     ra = 958, jump @1581
      :                          @5986 [@dyn 479]
 76607: 82 1b                    a4 = u64 [sp]
 76609: 33 0c 78 12 03           a5 = 0x31278
 76614: 82 12 10                 t0 = u64 [sp + 0x10]
 76617: 82 18 28                 a1 = u64 [sp + 0x28]
 76620: 01                       fallthrough
      :                          @5987
 76621: 82 17 20                 a0 = u64 [sp + 0x20]
 76624: 97 89 03                 a2 = a1 << 0x3
 76627: c8 97 07                 a0 = a0 + a2
 76630: 7b 76                    u64 [a0] = s1
 76632: 95 88 01                 a1 = a1 + 0x1
 76635: 7b 18 28                 u64 [sp + 0x28] = a1
 76638: 3a 07 78 12 03           a0 = u64 [0x31278]
 76643: 97 78 0d                 a1 = a0 << 0xd
 76646: d3 87 07                 a0 = a0 ^ a1
 76649: 98 78 07                 a1 = a0 >> 0x7
 76652: d3 87 07                 a0 = a0 ^ a1
 76655: 97 78 11                 a1 = a0 << 0x11
 76658: d3 87 07                 a0 = a0 ^ a1
 76661: ca 57 09                 a2 = a0 * s0
 76664: 3e 07 78 12 03           u64 [0x31278] = a0
 76669: 82 18 28                 a1 = u64 [sp + 0x28]
 76672: 82 17 18                 a0 = u64 [sp + 0x18]
 76675: d6 29 0a                 a3 = a2 mulhu t0
 76678: 98 aa 0b                 a3 = a3 >> 0xb
 76681: ca ba 0a                 a3 = a3 * a4
 76684: c9 a9 05                 s0 = a2 - a3
 76687: ab 78 11                 jump @5990 if a1 != a0
      :                          @5988
 76690: 95 17 18                 a0 = sp + 0x18
 76693: 50 20 c0 03 72 27 ff     ra = 960, jump @1581
      :                          @5989 [@dyn 480]
 76700: 82 18 28                 a1 = u64 [sp + 0x28]
 76703: 01                       fallthrough
      :                          @5990
 76704: 82 12 20                 t0 = u64 [sp + 0x20]
 76707: 97 80 03                 ra = a1 << 0x3
 76710: c8 02 07                 a0 = t0 + ra
 76713: 7b 75                    u64 [a0] = s0
 76715: 95 84 01                 t2 = a1 + 0x1
 76718: 7b 14 28                 u64 [sp + 0x28] = t2
 76721: 33 07 c0 22 03           a0 = 0x322c0
 76726: 33 08 c0 22 03           a1 = 0x322c0
 76731: 33 03 00 00 01           t1 = 0x10000
 76736: c8 38 0b                 a4 = a1 + t1
 76739: 7b 12 10                 u64 [sp + 0x10] = t0
 76742: 01                       fallthrough
      :                          @5991
 76743: 82 bc                    a5 = u64 [a4]
 76745: 95 c6 50                 s1 = a5 + 0x50
 76748: ac c6 9b 02              jump @6037 if s1 <u a5
      :                          @5992
 76752: 95 6a 08                 a3 = s1 + 0x8
 76755: d8 6a 05                 s0 = a3 <u s1
 76758: d8 a3 0a                 a3 = t1 <u a3
 76761: d4 5a 0a                 a3 = a3 | s0
 76764: 52 0a 8b 02              jump @6037 if a3 != 0
      :                          @5993
 76768: c9 68 05                 s0 = a1 - s1
 76771: c8 35 05                 s0 = s0 + t1
 76774: 84 5a 07                 a3 = s0 & 0x7
 76777: c8 a6 06                 s1 = s1 + a3
 76780: 01                       fallthrough
      :                          @5994
 76781: 82 b9                    a2 = u64 [a4]
 76783: ab c9 d8                 jump @5991 if a2 != a5
      :                          @5995
 76786: 7b b6                    u64 [a4] = s1
 76788: 01                       fallthrough
      :                          @5996
 76789: c9 a5 03                 t1 = s0 - a3
 76792: 51 04 fa 01              jump @6027 if t2 == 0
      :                          @5997
 76796: 33 0a                    a3 = 0
 76798: 97 44 03                 t2 = t2 << 0x3
 76801: c8 24 04                 t2 = t2 + t0
 76804: 3a 08 08 11 03           a1 = u64 [0x31108]
 76809: 95 07 08                 a0 = ra + 0x8
 76812: 33 09 29 08              a2 = 0x829
 76816: 64 2b                    a4 = t0
 76818: 01                       fallthrough
      :                          @5998
 76819: 82 bc                    a5 = u64 [a4]
 76821: 95 bb 08                 a4 = a4 + 0x8
 76824: c8 ca 0a                 a3 = a3 + a5
 76827: d6 8a 0c                 a5 = a3 mulhu a1
 76830: 98 cc 0b                 a5 = a5 >> 0xb
 76833: ca 9c 0c                 a5 = a5 * a2
 76836: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
 76839: c9 ca 0a                 a3 = a3 - a5
 76842: 52 07 e9                 jump @5998 if a0 != 0
      :                          @5999
 76845: 33 00                    ra = 0
 76847: 33 08                    a1 = 0
 76849: 49 03 01                 u64 [t1 + 0] = 0x1
 76852: 3a 0c 08 11 03           a5 = u64 [0x31108]
 76857: 7b 3a 08                 u64 [t1 + 0x8] = a3
 76860: 33 06 29 08              s1 = 0x829
 76864: 64 27                    a0 = t0
 76866: 28 21                    jump @6001
      :                          @6000
 76868: 82 79                    a2 = u64 [a0]
 76870: 95 7a 08                 a3 = a0 + 0x8
 76873: 95 88 01                 a1 = a1 + 0x1
 76876: ca 95 07                 a0 = s0 * a2
 76879: c8 07 07                 a0 = a0 + ra
 76882: d6 c7 09                 a2 = a0 mulhu a5
 76885: 98 99 0b                 a2 = a2 >> 0xb
 76888: ca 69 09                 a2 = a2 * s1
 76891: c9 97 00                 ra = a0 - a2
 76894: 64 a7                    a0 = a3
 76896: aa 4a 3f                 jump @6006 if a3 == t2
      :                          @6001
 76899: 33 05 01                 s0 = 0x1
 76902: 51 08 de                 jump @6000 if a1 == 0
      :                          @6002
 76905: 33 05 01                 s0 = 0x1
 76908: 33 09 02                 a2 = 0x2
 76911: 64 8a                    a3 = a1
 76913: 28 0b                    jump @6004
      :                          @6003
 76915: 98 aa 01                 a3 = a3 >> 0x1
 76918: ca 99 09                 a2 = a2 * a2
 76921: 51 0a cb                 jump @6000 if a3 == 0
      :                          @6004
 76924: d6 c9 0b                 a4 = a2 mulhu a5
 76927: 98 bb 0b                 a4 = a4 >> 0xb
 76930: ca 6b 0b                 a4 = a4 * s1
 76933: 84 a2 01                 t0 = a3 & 0x1
 76936: c9 b9 09                 a2 = a2 - a4
 76939: 51 02 e8                 jump @6003 if t0 == 0
      :                          @6005
 76942: ca 95 0b                 a4 = s0 * a2
 76945: d6 cb 05                 s0 = a4 mulhu a5
 76948: 98 55 0b                 s0 = s0 >> 0xb
 76951: ca 65 05                 s0 = s0 * s1
 76954: c9 5b 05                 s0 = a4 - s0
 76957: 28 d6                    jump @6003
      :                          @6006
 76959: 33 02                    t0 = 0
 76961: 33 0c                    a5 = 0
 76963: 49 13 10 02              u64 [t1 + 16] = 0x2
 76967: 3a 06 08 11 03           s1 = u64 [0x31108]
 76972: 7b 30 18                 u64 [t1 + 0x18] = ra
 76975: 33 0b 29 08              a4 = 0x829
 76979: 82 10 10                 ra = u64 [sp + 0x10]
 76982: 28 21                    jump @6008
      :                          @6007
 76984: 82 07                    a0 = u64 [ra]
 76986: 95 08 08                 a1 = ra + 0x8
 76989: 95 cc 01                 a5 = a5 + 0x1
 76992: ca 75 07                 a0 = s0 * a0
 76995: c8 27 07                 a0 = a0 + t0
 76998: d6 67 09                 a2 = a0 mulhu s1
 77001: 98 99 0b                 a2 = a2 >> 0xb
 77004: ca b9 09                 a2 = a2 * a4
 77007: c9 97 02                 t0 = a0 - a2
 77010: 64 80                    ra = a1
 77012: aa 48 3c                 jump @6013 if a1 == t2
      :                          @6008
 77015: 33 05 01                 s0 = 0x1
 77018: 51 0c de                 jump @6007 if a5 == 0
      :                          @6009
 77021: 33 09 03                 a2 = 0x3
 77024: 64 c8                    a1 = a5
 77026: 28 0b                    jump @6011
      :                          @6010
 77028: 98 88 01                 a1 = a1 >> 0x1
 77031: ca 99 09                 a2 = a2 * a2
 77034: 51 08 ce                 jump @6007 if a1 == 0
      :                          @6011
 77037: d6 69 0a                 a3 = a2 mulhu s1
 77040: 98 aa 0b                 a3 = a3 >> 0xb
 77043: ca ba 0a                 a3 = a3 * a4
 77046: 84 87 01                 a0 = a1 & 0x1
 77049: c9 a9 09                 a2 = a2 - a3
 77052: 51 07 e8                 jump @6010 if a0 == 0
      :                          @6012
 77055: ca 95 07                 a0 = s0 * a2
 77058: d6 67 0a                 a3 = a0 mulhu s1
 77061: 98 aa 0b                 a3 = a3 >> 0xb
 77064: ca ba 0a                 a3 = a3 * a4
 77067: c9 a7 05                 s0 = a0 - a3
 77070: 28 d6                    jump @6010
      :                          @6013
 77072: 33 00                    ra = 0
 77074: 33 0c                    a5 = 0
 77076: 49 13 20 03              u64 [t1 + 32] = 0x3
 77080: 3a 06 08 11 03           s1 = u64 [0x31108]
 77085: 7b 32 28                 u64 [t1 + 0x28] = t0
 77088: 33 0a 29 08              a3 = 0x829
 77092: 82 12 10                 t0 = u64 [sp + 0x10]
 77095: 28 21                    jump @6015
      :                          @6014
 77097: 82 27                    a0 = u64 [t0]
 77099: 95 28 08                 a1 = t0 + 0x8
 77102: 95 cc 01                 a5 = a5 + 0x1
 77105: ca 75 07                 a0 = s0 * a0
 77108: c8 07 07                 a0 = a0 + ra
 77111: d6 67 09                 a2 = a0 mulhu s1
 77114: 98 99 0b                 a2 = a2 >> 0xb
 77117: ca a9 09                 a2 = a2 * a3
 77120: c9 97 00                 ra = a0 - a2
 77123: 64 82                    t0 = a1
 77125: aa 48 3c                 jump @6020 if a1 == t2
      :                          @6015
 77128: 33 05 01                 s0 = 0x1
 77131: 51 0c de                 jump @6014 if a5 == 0
      :                          @6016
 77134: 33 09 04                 a2 = 0x4
 77137: 64 c8                    a1 = a5
 77139: 28 0b                    jump @6018
      :                          @6017
 77141: 98 88 01                 a1 = a1 >> 0x1
 77144: ca 99 09                 a2 = a2 * a2
 77147: 51 08 ce                 jump @6014 if a1 == 0
      :                          @6018
 77150: d6 69 0b                 a4 = a2 mulhu s1
 77153: 98 bb 0b                 a4 = a4 >> 0xb
 77156: ca ab 0b                 a4 = a4 * a3
 77159: 84 87 01                 a0 = a1 & 0x1
 77162: c9 b9 09                 a2 = a2 - a4
 77165: 51 07 e8                 jump @6017 if a0 == 0
      :                          @6019
 77168: ca 95 07                 a0 = s0 * a2
 77171: d6 67 0b                 a4 = a0 mulhu s1
 77174: 98 bb 0b                 a4 = a4 >> 0xb
 77177: ca ab 0b                 a4 = a4 * a3
 77180: c9 b7 05                 s0 = a0 - a4
 77183: 28 d6                    jump @6017
      :                          @6020
 77185: 33 02                    t0 = 0
 77187: 33 0c                    a5 = 0
 77189: 49 13 30 04              u64 [t1 + 48] = 0x4
 77193: 3a 06 08 11 03           s1 = u64 [0x31108]
 77198: 7b 30 38                 u64 [t1 + 0x38] = ra
 77201: 33 0b 29 08              a4 = 0x829
 77205: 82 10 10                 ra = u64 [sp + 0x10]
 77208: 28 21                    jump @6022
      :                          @6021
 77210: 82 07                    a0 = u64 [ra]
 77212: 95 08 08                 a1 = ra + 0x8
 77215: 95 cc 01                 a5 = a5 + 0x1
 77218: ca 75 07                 a0 = s0 * a0
 77221: c8 27 07                 a0 = a0 + t0
 77224: d6 67 09                 a2 = a0 mulhu s1
 77227: 98 99 0b                 a2 = a2 >> 0xb
 77230: ca b9 09                 a2 = a2 * a4
 77233: c9 97 02                 t0 = a0 - a2
 77236: 64 80                    ra = a1
 77238: aa 48 5a                 jump @6028 if a1 == t2
      :                          @6022
 77241: 33 05 01                 s0 = 0x1
 77244: 51 0c de                 jump @6021 if a5 == 0
      :                          @6023
 77247: 33 09 05                 a2 = 0x5
 77250: 64 c8                    a1 = a5
 77252: 28 0b                    jump @6025
      :                          @6024
 77254: 98 88 01                 a1 = a1 >> 0x1
 77257: ca 99 09                 a2 = a2 * a2
 77260: 51 08 ce                 jump @6021 if a1 == 0
      :                          @6025
 77263: d6 69 0a                 a3 = a2 mulhu s1
 77266: 98 aa 0b                 a3 = a3 >> 0xb
 77269: ca ba 0a                 a3 = a3 * a4
 77272: 84 87 01                 a0 = a1 & 0x1
 77275: c9 a9 09                 a2 = a2 - a3
 77278: 51 07 e8                 jump @6024 if a0 == 0
      :                          @6026
 77281: ca 95 07                 a0 = s0 * a2
 77284: d6 67 0a                 a3 = a0 mulhu s1
 77287: 98 aa 0b                 a3 = a3 >> 0xb
 77290: ca ba 0a                 a3 = a3 * a4
 77293: c9 a7 05                 s0 = a0 - a3
 77296: 28 d6                    jump @6024
      :                          @6027
 77298: 33 02                    t0 = 0
 77300: 49 03 01                 u64 [t1 + 0] = 0x1
 77303: 49 13 10 02              u64 [t1 + 16] = 0x2
 77307: 49 13 20 03              u64 [t1 + 32] = 0x3
 77311: 49 13 30 04              u64 [t1 + 48] = 0x4
 77315: 49 13 08                 u64 [t1 + 8] = 0
 77318: 49 13 18                 u64 [t1 + 24] = 0
 77321: 49 13 28                 u64 [t1 + 40] = 0
 77324: 49 13 38                 u64 [t1 + 56] = 0
 77327: 01                       fallthrough
      :                          @6028
 77328: 33 08 05                 a1 = 0x5
 77331: 7b 32 48                 u64 [t1 + 0x48] = t0
 77334: 82 17 18                 a0 = u64 [sp + 0x18]
 77337: 7b 38 40                 u64 [t1 + 0x40] = a1
 77340: 82 19 08                 a2 = u64 [sp + 0x8]
 77343: 7b 98                    u64 [a2] = a1
 77345: 7b 93 08                 u64 [a2 + 0x8] = t1
 77348: 7b 98 10                 u64 [a2 + 0x10] = a1
 77351: 82 16 10                 s1 = u64 [sp + 0x10]
 77354: 51 07 2e                 jump @6035 if a0 == 0
      :                          @6029
 77357: 33 08 00 20              a1 = 0x2000
 77361: ac 78 27                 jump @6035 if a1 <u a0
      :                          @6030
 77364: 97 77 03                 a0 = a0 << 0x3
 77367: 33 08 c0 22 03           a1 = 0x322c0
 77372: 95 88 00 00 01           a1 = a1 + 0x10000
 77377: 01                       fallthrough
      :                          @6031
 77378: 82 89                    a2 = u64 [a1]
 77380: c9 98 0a                 a3 = a1 - a2
 77383: ab 6a 11                 jump @6035 if a3 != s1
      :                          @6032
 77386: c9 79 0a                 a3 = a2 - a0
 77389: 01                       fallthrough
      :                          @6033
 77390: 82 8b                    a4 = u64 [a1]
 77392: ab 9b f2                 jump @6031 if a4 != a2
      :                          @6034
 77395: 7b 8a                    u64 [a1] = a3
 77397: 33 0c                    a5 = 0
 77399: 01                       fallthrough
      :                          @6035
 77400: 82 10 40                 ra = u64 [sp + 0x40]
 77403: 82 15 38                 s0 = u64 [sp + 0x38]
 77406: 82 16 30                 s1 = u64 [sp + 0x30]
 77409: 95 11 48                 sp = sp + 0x48
 77412: 32 00                    ret
      :                          @6036
 77414: 00                       trap
      :                          @6037
 77415: 00                       trap
      :                          @6038
 77416: 64 8a                    a3 = a1
 77418: 64 9b                    a4 = a2
 77420: 01                       fallthrough
      :                          @6039
 77421: 64 ac                    a5 = a3
 77423: ac a4 57                 jump @6054 if t2 <u a3
      :                          @6040
 77426: ae 4c 54                 jump @6054 if a5 >=u t2
      :                          @6041
 77429: 95 ca 01                 a3 = a5 + 0x1
 77432: ac 3c f5                 jump @6039 if a5 <u t1
      :                          @6042
 77435: 84 c8 01                 a1 = a5 & 0x1
 77438: 51 08 23                 jump @6049 if a1 == 0
      :                          @6043
 77441: ac 2c 19                 jump @6048 if a5 <u t0
      :                          @6044
 77444: 33 08 03                 a1 = 0x3
 77447: 01                       fallthrough
      :                          @6045
 77448: 51 08 5e                 jump @6057 if a1 == 0
      :                          @6046
 77451: cd 8c 09                 a2 = a5 %u a1
 77454: 51 09 df                 jump @6039 if a2 == 0
      :                          @6047
 77457: 95 88 02                 a1 = a1 + 0x2
 77460: ca 88 09                 a2 = a1 * a1
 77463: ae 9c f1                 jump @6045 if a5 >=u a2
      :                          @6048
 77466: 64 a8                    a1 = a3
 77468: 33 09 01                 a2 = 0x1
 77471: 28 16                    jump @6052
      :                          @6049
 77473: 33 08 03                 a1 = 0x3
 77476: ab 3c c9                 jump @6039 if a5 != t1
      :                          @6050
 77479: 33 09 01                 a2 = 0x1
 77482: 28 0b                    jump @6052
      :                          @6051
 77484: 98 cc 01                 a5 = a5 >> 0x1
 77487: ca aa 0b                 a4 = a3 * a3
 77490: 51 0c b6                 jump @6038 if a5 == 0
      :                          @6052
 77493: 84 c5 01                 s0 = a5 & 0x1
 77496: cd 7b 0a                 a3 = a4 %u a0
 77499: 51 05 f1                 jump @6051 if s0 == 0
      :                          @6053
 77502: ca 9a 09                 a2 = a3 * a2
 77505: cd 79 09                 a2 = a2 %u a0
 77508: 28 e8                    jump @6051
      :                          @6054
 77510: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 77513: 64 79                    a2 = a0
 77515: 01                       fallthrough
      :                          @6055
 77516: 64 98                    a1 = a2
 77518: cd 9b 09                 a2 = a4 %u a2
 77521: 64 8b                    a4 = a1
 77523: 52 09 f9                 jump @6055 if a2 != 0
      :                          @6056
 77526: 88 89 02                 a2 = a1 <u 0x2
 77529: d8 78 07                 a0 = a1 <u a0
 77532: e0 97 07                 a0 = a0 & ~a2
 77535: 82 15                    s0 = u64 [sp]
 77537: 95 11 08                 sp = sp + 0x8
 77540: 32 00                    ret
      :                          @6057
 77542: 00                       trap
      :                          @6058
 77543: 95 11 68 ff              sp = sp + 0xffffffffffffff68
 77547: 7b 10 90 00              u64 [sp + 0x90] = ra
 77551: 7b 15 88 00              u64 [sp + 0x88] = s0
 77555: 49 21 80 00 02           u64 [sp + 128] = 0x2
 77560: 7b 17                    u64 [sp] = a0
 77562: 82 76 10                 s1 = u64 [a0 + 0x10]
 77565: 51 06 97 00              jump @6071 if s1 == 0
      :                          @6059
 77569: 98 67 3c                 a0 = s1 >> 0x3c
 77572: 52 07 26 03              jump @6144 if a0 != 0
      :                          @6060
 77576: 88 72 01                 t0 = a0 <u 0x1
 77579: 97 67 03                 a0 = s1 << 0x3
 77582: 97 22 03                 t0 = t0 << 0x3
 77585: 33 04 c0 22 03           t2 = 0x322c0
 77590: 33 03 00 00 01           t1 = 0x10000
 77595: c8 34 00                 ra = t2 + t1
 77598: 01                       fallthrough
      :                          @6061
 77599: 82 05                    s0 = u64 [ra]
 77601: c8 75 0c                 a5 = s0 + a0
 77604: ac 5c 05 03              jump @6143 if a5 <u s0
      :                          @6062
 77608: c8 2c 08                 a1 = a5 + t0
 77611: d8 c8 0a                 a3 = a1 <u a5
 77614: d8 83 08                 a1 = t1 <u a1
 77617: d4 a8 08                 a1 = a1 | a3
 77620: 52 08 f5 02              jump @6143 if a1 != 0
      :                          @6063
 77624: c9 c4 08                 a1 = t2 - a5
 77627: c8 38 08                 a1 = a1 + t1
 77630: 84 8a 07                 a3 = a1 & 0x7
 77633: c8 ac 0c                 a5 = a5 + a3
 77636: 01                       fallthrough
      :                          @6064
 77637: 82 09                    a2 = u64 [ra]
 77639: ab 59 d8                 jump @6061 if a2 != s0
      :                          @6065
 77642: 7b 0c                    u64 [ra] = a5
 77644: 33 0b                    a4 = 0
 77646: 01                       fallthrough
      :                          @6066
 77647: c9 a8 07                 a0 = a1 - a3
 77650: 33 08 01                 a1 = 0x1
 77653: 64 79                    a2 = a0
 77655: 53 16 02 2f              jump @6070 if s1 <u 2
      :                          @6067
 77659: 95 68 ff                 a1 = s1 + 0xffffffffffffffff
 77662: 14 0a ff ff ff ff ff ff ff 7f a3 = 0x7fffffffffffffff
 77672: 64 79                    a2 = a0
 77674: 01                       fallthrough
      :                          @6068
 77675: 7b 9a                    u64 [a2] = a3
 77677: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 77680: 95 99 08                 a2 = a2 + 0x8
 77683: 52 08 f8                 jump @6068 if a1 != 0
      :                          @6069
 77686: 64 68                    a1 = s1
 77688: 14 0a ff ff ff ff ff ff ff 7f a3 = 0x7fffffffffffffff
 77698: 7b 9a                    u64 [a2] = a3
 77700: 28 16                    jump @6072
      :                          @6070
 77702: 14 0a ff ff ff ff ff ff ff 7f a3 = 0x7fffffffffffffff
 77712: 7b 9a                    u64 [a2] = a3
 77714: 28 08                    jump @6072
      :                          @6071
 77716: 33 08                    a1 = 0
 77718: 33 07 08                 a0 = 0x8
 77721: 01                       fallthrough
      :                          @6072
 77722: 9b 69 01                 a2 = 0x1 << s1
 77725: 7b 16 68                 u64 [sp + 0x68] = s1
 77728: 7b 17 70                 u64 [sp + 0x70] = a0
 77731: 7b 18 78                 u64 [sp + 0x78] = a1
 77734: 95 17 50                 a0 = sp + 0x50
 77737: 95 18 68                 a1 = sp + 0x68
 77740: 7b 19 08                 u64 [sp + 0x8] = a2
 77743: 50 20 c2 03 65 2e ff     ra = 962, jump @1783
      :                          @6073 [@dyn 481]
 77750: 82 18 60                 a1 = u64 [sp + 0x60]
 77753: 7b 18 28                 u64 [sp + 0x28] = a1
 77756: 53 18 02 6a 02           jump @6140 if a1 <u 2
      :                          @6074
 77761: 82 18 58                 a1 = u64 [sp + 0x58]
 77764: 82 87 28                 a0 = u64 [a1 + 0x28]
 77767: 51 07 61 02              jump @6142 if a0 == 0
      :                          @6075
 77771: 7b 18 20                 u64 [sp + 0x20] = a1
 77774: 82 87 20                 a0 = u64 [a1 + 0x20]
 77777: 84 68 3f                 a1 = s1 & 0x3f
 77780: 49 07                    u64 [a0 + 0] = 0
 77782: 51 08 2f 01              jump @6105 if a1 == 0
      :                          @6076
 77786: 82 17                    a0 = u64 [sp]
 77788: 82 77 08                 a0 = u64 [a0 + 0x8]
 77791: 33 08 02                 a1 = 0x2
 77794: 82 19 08                 a2 = u64 [sp + 0x8]
 77797: e4 89 08                 a1 = maxu(a2, a1)
 77800: 7b 18 10                 u64 [sp + 0x10] = a1
 77803: 95 77 10                 a0 = a0 + 0x10
 77806: 7b 17 18                 u64 [sp + 0x18] = a0
 77809: 33 0c 01                 a5 = 0x1
 77812: 28 0c                    jump @6078
      :                          @6077
 77814: 95 cc 01                 a5 = a5 + 0x1
 77817: 82 17 10                 a0 = u64 [sp + 0x10]
 77820: aa 7c 09 01              jump @6105 if a5 == a0
      :                          @6078
 77824: 84 c8 01                 a1 = a5 & 0x1
 77827: 51 08 f3                 jump @6077 if a1 == 0
      :                          @6079
 77830: 82 17 28                 a0 = u64 [sp + 0x28]
 77833: ae 7c ca 00              jump @6097 if a5 >=u a0
      :                          @6080
 77837: 33 07                    a0 = 0
 77839: 96 c8 18                 a1 = a5 * 0x18
 77842: 82 19 20                 a2 = u64 [sp + 0x20]
 77845: c8 98 08                 a1 = a1 + a2
 77848: 95 89 10                 a2 = a1 + 0x10
 77851: 7b 19 40                 u64 [sp + 0x40] = a2
 77854: 95 88 08                 a1 = a1 + 0x8
 77857: 7b 18 38                 u64 [sp + 0x38] = a1
 77860: 7b 1c 30                 u64 [sp + 0x30] = a5
 77863: 28 0b                    jump @6082
      :                          @6081
 77865: 95 77 01                 a0 = a0 + 0x1
 77868: 82 1c 30                 a5 = u64 [sp + 0x30]
 77871: aa 67 c7                 jump @6077 if a0 == s1
      :                          @6082
 77874: 9b 7a 01                 a3 = 0x1 << a0
 77877: d2 ca 08                 a1 = a3 & a5
 77880: 51 08 f1                 jump @6081 if a1 == 0
      :                          @6083
 77883: 82 18 30                 a1 = u64 [sp + 0x30]
 77886: d3 8a 0a                 a3 = a3 ^ a1
 77889: 51 0a e8                 jump @6081 if a3 == 0
      :                          @6084
 77892: 82 18 28                 a1 = u64 [sp + 0x28]
 77895: ae 8a 76                 jump @6093 if a3 >=u a1
      :                          @6085
 77898: 33 03                    t1 = 0
 77900: 33 0b                    a4 = 0
 77902: 96 a8 18                 a1 = a3 * 0x18
 77905: 82 19 20                 a2 = u64 [sp + 0x20]
 77908: c8 98 08                 a1 = a1 + a2
 77911: 95 89 10                 a2 = a1 + 0x10
 77914: 7b 19 48                 u64 [sp + 0x48] = a2
 77917: 95 80 08                 ra = a1 + 0x8
 77920: 82 15 18                 s0 = u64 [sp + 0x18]
 77923: 28 37                    jump @6088
      :                          @6086
 77925: 82 18 38                 a1 = u64 [sp + 0x38]
 77928: 82 8c                    a5 = u64 [a1]
 77930: 64 64                    t2 = s1
 77932: 82 06                    s1 = u64 [ra]
 77934: 97 79 03                 a2 = a0 << 0x3
 77937: 82 52 f8                 t0 = u64 [s0 + 0xfffffffffffffff8]
 77940: c8 9c 0c                 a5 = a5 + a2
 77943: c8 36 06                 s1 = s1 + t1
 77946: 82 66                    s1 = u64 [s1]
 77948: c8 29 09                 a2 = a2 + t0
 77951: 82 99                    a2 = u64 [a2]
 77953: 82 c8                    a1 = u64 [a5]
 77955: c8 69 09                 a2 = a2 + s1
 77958: 64 46                    s1 = t2
 77960: e6 98 08                 a1 = minu(a1, a2)
 77963: 7b c8                    u64 [a5] = a1
 77965: 01                       fallthrough
      :                          @6087
 77966: 95 bb 01                 a4 = a4 + 0x1
 77969: 95 55 18                 s0 = s0 + 0x18
 77972: 95 33 08                 t1 = t1 + 0x8
 77975: aa b6 92                 jump @6081 if s1 == a4
      :                          @6088
 77978: d0 ba 0c                 a5 = a3 >> a4
 77981: 84 cc 01                 a5 = a5 & 0x1
 77984: 51 0c ee                 jump @6087 if a5 == 0
      :                          @6089
 77987: 82 18 40                 a1 = u64 [sp + 0x40]
 77990: 82 8c                    a5 = u64 [a1]
 77992: ae c7 7b 01              jump @6137 if a0 >=u a5
      :                          @6090
 77996: 82 18 48                 a1 = u64 [sp + 0x48]
 77999: 82 8c                    a5 = u64 [a1]
 78001: ae cb 71 01              jump @6136 if a4 >=u a5
      :                          @6091
 78005: 82 5c                    a5 = u64 [s0]
 78007: ac c7 ae                 jump @6086 if a0 <u a5
      :                          @6092
 78010: 28 69 01                 jump @6137
      :                          @6093
 78013: 33 08                    a1 = 0
 78015: 01                       fallthrough
      :                          @6094
 78016: d0 8a 0b                 a4 = a3 >> a1
 78019: 84 bb 01                 a4 = a4 & 0x1
 78022: 52 0b 67 01              jump @6147 if a4 != 0
      :                          @6095
 78026: 95 88 01                 a1 = a1 + 0x1
 78029: ab 86 f3                 jump @6094 if s1 != a1
      :                          @6096
 78032: 28 59 ff                 jump @6081
      :                          @6097
 78035: 33 08                    a1 = 0
 78037: 28 09                    jump @6099
      :                          @6098
 78039: 95 88 01                 a1 = a1 + 0x1
 78042: aa 68 1c ff              jump @6077 if a1 == s1
      :                          @6099
 78046: 33 07 01                 a0 = 0x1
 78049: cf 87 0a                 a3 = a0 << a1
 78052: d2 ca 09                 a2 = a3 & a5
 78055: 51 09 f0                 jump @6098 if a2 == 0
      :                          @6100
 78058: aa ca ed                 jump @6098 if a3 == a5
      :                          @6101
 78061: 33 09                    a2 = 0
 78063: d3 ca 0a                 a3 = a3 ^ a5
 78066: 01                       fallthrough
      :                          @6102
 78067: d0 9a 0b                 a4 = a3 >> a2
 78070: 84 bb 01                 a4 = a4 & 0x1
 78073: 52 0b 33 01              jump @6146 if a4 != 0
      :                          @6103
 78077: 95 99 01                 a2 = a2 + 0x1
 78080: ab 96 f3                 jump @6102 if s1 != a2
      :                          @6104
 78083: 28 d4                    jump @6098
      :                          @6105
 78085: 51 06 26 01              jump @6145 if s1 == 0
      :                          @6106
 78089: 82 17 08                 a0 = u64 [sp + 0x8]
 78092: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 78095: 82 10 20                 ra = u64 [sp + 0x20]
 78098: 82 18 28                 a1 = u64 [sp + 0x28]
 78101: ae 87 12 01              jump @6141 if a0 >=u a1
      :                          @6107
 78105: 96 77 18                 a0 = a0 * 0x18
 78108: c8 07 07                 a0 = a0 + ra
 78111: 82 79 10                 a2 = u64 [a0 + 0x10]
 78114: 51 09 02 01              jump @6138 if a2 == 0
      :                          @6108
 78118: 82 18                    a1 = u64 [sp]
 78120: 82 88 08                 a1 = u64 [a1 + 0x8]
 78123: 82 8a 10                 a3 = u64 [a1 + 0x10]
 78126: 51 0a f6 00              jump @6138 if a3 == 0
      :                          @6109
 78130: 82 7a 08                 a3 = u64 [a0 + 0x8]
 78133: 82 87 08                 a0 = u64 [a1 + 0x8]
 78136: 82 ac                    a5 = u64 [a3]
 78138: 82 77                    a0 = u64 [a0]
 78140: c8 c7 07                 a0 = a0 + a5
 78143: 53 16 02 54              jump @6117 if s1 <u 2
      :                          @6110
 78147: 53 19 02 e2 00           jump @6139 if a2 <u 2
      :                          @6111
 78152: 82 8b 28                 a4 = u64 [a1 + 0x28]
 78155: 51 0b d9 00              jump @6138 if a4 == 0
      :                          @6112
 78159: 82 8b 20                 a4 = u64 [a1 + 0x20]
 78162: 82 ac 08                 a5 = u64 [a3 + 0x8]
 78165: 82 bb                    a4 = u64 [a4]
 78167: c8 cb 0b                 a4 = a4 + a5
 78170: 95 66 fe                 s1 = s1 + 0xfffffffffffffffe
 78173: e6 b7 07                 a0 = minu(a0, a4)
 78176: 51 06 33                 jump @6117 if s1 == 0
      :                          @6113
 78179: 95 88 40                 a1 = a1 + 0x40
 78182: 95 aa 10                 a3 = a3 + 0x10
 78185: 95 9b fe                 a4 = a2 + 0xfffffffffffffffe
 78188: 01                       fallthrough
      :                          @6114
 78189: 51 0b b8 00              jump @6139 if a4 == 0
      :                          @6115
 78193: 82 8c                    a5 = u64 [a1]
 78195: 51 0c b1 00              jump @6138 if a5 == 0
      :                          @6116
 78199: 82 8c f8                 a5 = u64 [a1 + 0xfffffffffffffff8]
 78202: 82 a5                    s0 = u64 [a3]
 78204: 82 cc                    a5 = u64 [a5]
 78206: c8 5c 0c                 a5 = a5 + s0
 78209: e6 c7 07                 a0 = minu(a0, a5)
 78212: 95 88 18                 a1 = a1 + 0x18
 78215: 95 aa 08                 a3 = a3 + 0x8
 78218: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 78221: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 78224: 52 06 dd                 jump @6114 if s1 != 0
      :                          @6117
 78227: 33 08                    a1 = 0
 78229: 33 03 18                 t1 = 0x18
 78232: 33 0a c0 22 03           a3 = 0x322c0
 78237: 95 ab 00 00 01           a4 = a3 + 0x10000
 78242: 33 02 00 20              t0 = 0x2000
 78246: 28 0b                    jump @6119
      :                          @6118
 78248: 95 88 01                 a1 = a1 + 0x1
 78251: 82 19 28                 a2 = u64 [sp + 0x28]
 78254: aa 98 33                 jump @6128 if a1 == a2
      :                          @6119
 78257: ca 38 0c                 a5 = a1 * t1
 78260: c8 0c 0c                 a5 = a5 + ra
 78263: 82 c6                    s1 = u64 [a5]
 78265: 51 06 ef                 jump @6118 if s1 == 0
      :                          @6120
 78268: ac 62 ec                 jump @6118 if t0 <u s1
      :                          @6121
 78271: 82 cc 08                 a5 = u64 [a5 + 0x8]
 78274: 97 64 03                 t2 = s1 << 0x3
 78277: 01                       fallthrough
      :                          @6122
 78278: 82 b5                    s0 = u64 [a4]
 78280: c9 5b 0a                 a3 = a4 - s0
 78283: ab ca dd                 jump @6118 if a3 != a5
      :                          @6123
 78286: c9 45 0a                 a3 = s0 - t2
 78289: 01                       fallthrough
      :                          @6124
 78290: 82 b9                    a2 = u64 [a4]
 78292: ab 59 f2                 jump @6122 if a2 != s0
      :                          @6125
 78295: 7b ba                    u64 [a4] = a3
 78297: 33 06                    s1 = 0
 78299: 01                       fallthrough
      :                          @6126
 78300: ab 59 ea                 jump @6122 if a2 != s0
      :                          @6127
 78303: 28 c9                    jump @6118
      :                          @6128
 78305: 82 18 50                 a1 = u64 [sp + 0x50]
 78308: 51 08 2c                 jump @6135 if a1 == 0
      :                          @6129
 78311: 33 09 aa 0a              a2 = 0xaaa
 78315: ac 89 25                 jump @6135 if a2 <u a1
      :                          @6130
 78318: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 78321: 33 09 c0 22 03           a2 = 0x322c0
 78326: 95 99 00 00 01           a2 = a2 + 0x10000
 78331: 01                       fallthrough
      :                          @6131
 78332: 82 9a                    a3 = u64 [a2]
 78334: c9 a9 0b                 a4 = a2 - a3
 78337: ab 0b 0f                 jump @6135 if a4 != ra
      :                          @6132
 78340: c8 8a 0b                 a4 = a3 + a1
 78343: 01                       fallthrough
      :                          @6133
 78344: 82 9c                    a5 = u64 [a2]
 78346: ab ac f2                 jump @6131 if a5 != a3
      :                          @6134
 78349: 7b 9b                    u64 [a2] = a4
 78351: 01                       fallthrough
      :                          @6135
 78352: 82 10 90 00              ra = u64 [sp + 0x90]
 78356: 82 15 88 00              s0 = u64 [sp + 0x88]
 78360: 82 16 80 00              s1 = u64 [sp + 0x80]
 78364: 95 11 98 00              sp = sp + 0x98
 78368: 32 00                    ret
      :                          @6136
 78370: 00                       trap
      :                          @6137
 78371: 00                       trap
      :                          @6138
 78372: 00                       trap
      :                          @6139
 78373: 00                       trap
      :                          @6140
 78374: 00                       trap
      :                          @6141
 78375: 00                       trap
      :                          @6142
 78376: 00                       trap
      :                          @6143
 78377: 00                       trap
      :                          @6144
 78378: 00                       trap
      :                          @6145
 78379: 00                       trap
      :                          @6146
 78380: 00                       trap
      :                          @6147
 78381: 82 18 40                 a1 = u64 [sp + 0x40]
 78384: 82 8c                    a5 = u64 [a1]
 78386: ae c7 f1                 jump @6137 if a0 >=u a5
      :                          @6148
 78389: 00                       trap
      :                          @6149
 78390: 82 9a                    a3 = u64 [a2]
 78392: 95 a8 14                 a1 = a3 + 0x14
 78395: ac a8 15 02              jump @6203 if a1 <u a3
      :                          @6150
 78399: 95 8b 01                 a4 = a1 + 0x1
 78402: 88 bc 01                 a5 = a4 <u 0x1
 78405: d8 b6 0b                 a4 = s1 <u a4
 78408: d4 cb 0b                 a4 = a4 | a5
 78411: 52 0b 05 02              jump @6203 if a4 != 0
      :                          @6151
 78415: 82 9b                    a4 = u64 [a2]
 78417: ab ab e5                 jump @6149 if a4 != a3
      :                          @6152
 78420: 7b 98                    u64 [a2] = a1
 78422: 33 0c                    a5 = 0
 78424: 7b 17                    u64 [sp] = a0
 78426: 33 07 c0 22 04           a0 = 0x422c0
 78431: c9 87 06                 s1 = a0 - a1
 78434: 33 09 14                 a2 = 0x14
 78437: 64 67                    a0 = s1
 78439: 33 08                    a1 = 0
 78441: 50 20 c4 03 f0 d8 01     ra = 964, jump @13675
      :                          @6153 [@dyn 482]
 78448: 33 00 14                 ra = 0x14
 78451: 82 52 10                 t0 = u64 [s0 + 0x10]
 78454: 49 11 30                 u64 [sp + 48] = 0
 78457: 64 57                    a0 = s0
 78459: 33 05 08                 s0 = 0x8
 78462: 7b 15 38                 u64 [sp + 0x38] = s0
 78465: 49 11 40                 u64 [sp + 64] = 0
 78468: 51 02 0f 02              jump @6210 if t0 == 0
      :                          @6154
 78472: 64 64                    t2 = s1
 78474: 82 73 08                 t1 = u64 [a0 + 0x8]
 78477: 33 08                    a1 = 0
 78479: 33 07                    a0 = 0
 78481: 95 39 18                 a2 = t1 + 0x18
 78484: 7b 19 28                 u64 [sp + 0x28] = a2
 78487: 96 29 18                 a2 = t0 * 0x18
 78490: 95 99 e8                 a2 = a2 + 0xffffffffffffffe8
 78493: 14 0b 00 00 00 00 ab aa aa aa a4 = 0xaaaaaaab00000000
 78503: 14 0a ab aa aa aa aa aa aa aa a3 = 0xaaaaaaaaaaaaaaab
 78513: d6 a9 09                 a2 = a2 mulhu a3
 78516: 98 99 04                 a2 = a2 >> 0x4
 78519: 7b 19 20                 u64 [sp + 0x20] = a2
 78522: 33 0c 01                 a5 = 0x1
 78525: 33 06 13                 s1 = 0x13
 78528: 7b 13 18                 u64 [sp + 0x18] = t1
 78531: 7b 12 08                 u64 [sp + 0x8] = t0
 78534: 28 05                    jump @6156
      :                          @6155
 78536: 7c 47                    a0 = u8 [t2]
 78538: 01                       fallthrough
      :                          @6156
 78539: 84 77 ff 00              a0 = a0 & 0xff
 78543: 51 07 76                 jump @6176 if a0 == 0
      :                          @6157
 78546: 7c 47 01                 a0 = u8 [t2 + 0x1]
 78549: 51 07 70                 jump @6176 if a0 == 0
      :                          @6158
 78552: 7c 47 02                 a0 = u8 [t2 + 0x2]
 78555: 51 07 6a                 jump @6176 if a0 == 0
      :                          @6159
 78558: 7c 47 03                 a0 = u8 [t2 + 0x3]
 78561: 51 07 64                 jump @6176 if a0 == 0
      :                          @6160
 78564: 7c 47 04                 a0 = u8 [t2 + 0x4]
 78567: 51 07 5e                 jump @6176 if a0 == 0
      :                          @6161
 78570: 7c 47 05                 a0 = u8 [t2 + 0x5]
 78573: 51 07 58                 jump @6176 if a0 == 0
      :                          @6162
 78576: 7c 47 06                 a0 = u8 [t2 + 0x6]
 78579: 51 07 52                 jump @6176 if a0 == 0
      :                          @6163
 78582: 7c 47 07                 a0 = u8 [t2 + 0x7]
 78585: 51 07 4c                 jump @6176 if a0 == 0
      :                          @6164
 78588: 7c 47 08                 a0 = u8 [t2 + 0x8]
 78591: 51 07 46                 jump @6176 if a0 == 0
      :                          @6165
 78594: 7c 47 09                 a0 = u8 [t2 + 0x9]
 78597: 51 07 40                 jump @6176 if a0 == 0
      :                          @6166
 78600: 7c 47 0a                 a0 = u8 [t2 + 0xa]
 78603: 51 07 3a                 jump @6176 if a0 == 0
      :                          @6167
 78606: 7c 47 0b                 a0 = u8 [t2 + 0xb]
 78609: 51 07 34                 jump @6176 if a0 == 0
      :                          @6168
 78612: 7c 47 0c                 a0 = u8 [t2 + 0xc]
 78615: 51 07 2e                 jump @6176 if a0 == 0
      :                          @6169
 78618: 7c 47 0d                 a0 = u8 [t2 + 0xd]
 78621: 51 07 28                 jump @6176 if a0 == 0
      :                          @6170
 78624: 7c 47 0e                 a0 = u8 [t2 + 0xe]
 78627: 51 07 22                 jump @6176 if a0 == 0
      :                          @6171
 78630: 7c 47 0f                 a0 = u8 [t2 + 0xf]
 78633: 51 07 1c                 jump @6176 if a0 == 0
      :                          @6172
 78636: 7c 47 10                 a0 = u8 [t2 + 0x10]
 78639: 51 07 16                 jump @6176 if a0 == 0
      :                          @6173
 78642: 7c 47 11                 a0 = u8 [t2 + 0x11]
 78645: 51 07 10                 jump @6176 if a0 == 0
      :                          @6174
 78648: 7c 47 12                 a0 = u8 [t2 + 0x12]
 78651: 51 07 0a                 jump @6176 if a0 == 0
      :                          @6175
 78654: 7c 47 13                 a0 = u8 [t2 + 0x13]
 78657: 52 07 10 01              jump @6204 if a0 != 0
      :                          @6176
 78661: 82 39 10                 a2 = u64 [t1 + 0x10]
 78664: 51 09 2a                 jump @6182 if a2 == 0
      :                          @6177
 78667: 82 3b 08                 a4 = u64 [t1 + 0x8]
 78670: 33 0a                    a3 = 0
 78672: 01                       fallthrough
      :                          @6178
 78673: 82 b7                    a0 = u64 [a4]
 78675: ae 07 fb 00              jump @6201 if a0 >=u ra
      :                          @6179
 78679: c8 47 07                 a0 = a0 + t2
 78682: 7c 77                    a0 = u8 [a0]
 78684: 88 77 01                 a0 = a0 <u 0x1
 78687: c8 7a 0a                 a3 = a3 + a0
 78690: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 78693: 95 bb 08                 a4 = a4 + 0x8
 78696: 52 09 e9                 jump @6178 if a2 != 0
      :                          @6180
 78699: ab c2 0c                 jump @6183 if t0 != a5
      :                          @6181
 78702: 33 09                    a2 = 0
 78704: 28 72                    jump @6192
      :                          @6182
 78706: 33 0a                    a3 = 0
 78708: aa c2 fa                 jump @6181 if t0 == a5
      :                          @6183
 78711: 7b 15 10                 u64 [sp + 0x10] = s0
 78714: 33 09                    a2 = 0
 78716: 33 0c                    a5 = 0
 78718: 64 3b                    a4 = t1
 78720: 28 1c                    jump @6186
      :                          @6184
 78722: 33 09                    a2 = 0
 78724: 01                       fallthrough
      :                          @6185
 78725: 95 cc 01                 a5 = a5 + 0x1
 78728: d8 a9 07                 a0 = a2 <u a3
 78731: e4 9a 0a                 a3 = maxu(a3, a2)
 78734: 64 29                    a2 = t0
 78736: da 7c 09                 a2 = a5 if a0 == 0
 78739: da 73 0b                 a4 = t1 if a0 == 0
 78742: 82 17 20                 a0 = u64 [sp + 0x20]
 78745: aa 7c 36                 jump @6191 if a5 == a0
      :                          @6186
 78748: 64 92                    t0 = a2
 78750: 96 c3 18                 t1 = a5 * 0x18
 78753: 82 17 28                 a0 = u64 [sp + 0x28]
 78756: c8 73 03                 t1 = t1 + a0
 78759: 82 35 10                 s0 = u64 [t1 + 0x10]
 78762: 51 05 d8                 jump @6184 if s0 == 0
      :                          @6187
 78765: 82 36 08                 s1 = u64 [t1 + 0x8]
 78768: 33 09                    a2 = 0
 78770: 01                       fallthrough
      :                          @6188
 78771: 82 67                    a0 = u64 [s1]
 78773: ae 07 99 00              jump @6201 if a0 >=u ra
      :                          @6189
 78777: c8 47 07                 a0 = a0 + t2
 78780: 7c 77                    a0 = u8 [a0]
 78782: 88 77 01                 a0 = a0 <u 0x1
 78785: c8 79 09                 a2 = a2 + a0
 78788: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 78791: 95 66 08                 s1 = s1 + 0x8
 78794: 52 05 e9                 jump @6188 if s0 != 0
      :                          @6190
 78797: 28 b8                    jump @6185
      :                          @6191
 78799: 82 12 08                 t0 = u64 [sp + 0x8]
 78802: 82 13 18                 t1 = u64 [sp + 0x18]
 78805: 82 15 10                 s0 = u64 [sp + 0x10]
 78808: 33 0c 01                 a5 = 0x1
 78811: 33 06 13                 s1 = 0x13
 78814: 51 0b b5 00              jump @6210 if a4 == 0
      :                          @6192
 78818: 82 17 30                 a0 = u64 [sp + 0x30]
 78821: ab 78 2e                 jump @6195 if a1 != a0
      :                          @6193
 78824: 95 17 30                 a0 = sp + 0x30
 78827: 64 45                    s0 = t2
 78829: 64 26                    s1 = t0
 78831: 7b 19 10                 u64 [sp + 0x10] = a2
 78834: 50 20 c6 03 15 1f ff     ra = 966, jump @1581
      :                          @6194 [@dyn 483]
 78841: 82 19 10                 a2 = u64 [sp + 0x10]
 78844: 64 62                    t0 = s1
 78846: 33 06 13                 s1 = 0x13
 78849: 33 0c 01                 a5 = 0x1
 78852: 82 13 18                 t1 = u64 [sp + 0x18]
 78855: 33 00 14                 ra = 0x14
 78858: 64 54                    t2 = s0
 78860: 82 18 40                 a1 = u64 [sp + 0x40]
 78863: 82 15 38                 s0 = u64 [sp + 0x38]
 78866: 01                       fallthrough
      :                          @6195
 78867: 97 87 03                 a0 = a1 << 0x3
 78870: c8 57 07                 a0 = a0 + s0
 78873: 7b 79                    u64 [a0] = a2
 78875: 95 88 01                 a1 = a1 + 0x1
 78878: 7b 18 40                 u64 [sp + 0x40] = a1
 78881: ae 29 2e                 jump @6202 if a2 >=u t0
      :                          @6196
 78884: 96 97 18                 a0 = a2 * 0x18
 78887: c8 37 07                 a0 = a0 + t1
 78890: 82 7a 10                 a3 = u64 [a0 + 0x10]
 78893: 51 0a 9b fe              jump @6155 if a3 == 0
      :                          @6197
 78897: 82 79 08                 a2 = u64 [a0 + 0x8]
 78900: 97 aa 03                 a3 = a3 << 0x3
 78903: 01                       fallthrough
      :                          @6198
 78904: 82 97                    a0 = u64 [a2]
 78906: ac 76 14                 jump @6201 if s1 <u a0
      :                          @6199
 78909: 95 99 08                 a2 = a2 + 0x8
 78912: c8 47 07                 a0 = a0 + t2
 78915: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 78918: 78 7c                    u8 [a0] = a5
 78920: 52 0a f0                 jump @6198 if a3 != 0
      :                          @6200
 78923: 28 7d fe                 jump @6155
      :                          @6201
 78926: 00                       trap
      :                          @6202
 78927: 00                       trap
      :                          @6203
 78928: 00                       trap
      :                          @6204
 78929: 82 17 40                 a0 = u64 [sp + 0x40]
 78932: 82 18 38                 a1 = u64 [sp + 0x38]
 78935: 82 19 30                 a2 = u64 [sp + 0x30]
 78938: 82 1a                    a3 = u64 [sp]
 78940: 7b a7 10                 u64 [a3 + 0x10] = a0
 78943: 7b a8 08                 u64 [a3 + 0x8] = a1
 78946: 7b a9                    u64 [a3] = a2
 78948: 33 07 c0 22 03           a0 = 0x322c0
 78953: 95 77 00 00 01           a0 = a0 + 0x10000
 78958: 01                       fallthrough
      :                          @6205
 78959: 82 78                    a1 = u64 [a0]
 78961: c9 87 09                 a2 = a0 - a1
 78964: ab 49 11                 jump @6209 if a2 != t2
      :                          @6206
 78967: 95 89 ec                 a2 = a1 + 0xffffffffffffffec
 78970: 01                       fallthrough
      :                          @6207
 78971: 82 7a                    a3 = u64 [a0]
 78973: ab 8a f2                 jump @6205 if a3 != a1
      :                          @6208
 78976: 7b 79                    u64 [a0] = a2
 78978: 33 0b                    a4 = 0
 78980: 01                       fallthrough
      :                          @6209
 78981: 82 10 58                 ra = u64 [sp + 0x58]
 78984: 82 15 50                 s0 = u64 [sp + 0x50]
 78987: 82 16 48                 s1 = u64 [sp + 0x48]
 78990: 95 11 60                 sp = sp + 0x60
 78993: 32 00                    ret
      :                          @6210
 78995: 00                       trap
      :                          @6211 [@dyn 484]
 78996: 49 11 10                 u64 [sp + 16] = 0
 78999: 33 07 08                 a0 = 0x8
 79002: 7b 17 18                 u64 [sp + 0x18] = a0
 79005: 49 11 20                 u64 [sp + 32] = 0
 79008: 51 06 aa 00              jump @6231 if s1 == 0
      :                          @6212
 79012: 97 66 03                 s1 = s1 << 0x3
 79015: c8 65 03                 t1 = s0 + s1
 79018: 33 06 64                 s1 = 0x64
 79021: 64 52                    t0 = s0
 79023: 7b 13                    u64 [sp] = t1
 79025: 28 13                    jump @6214
      :                          @6213
 79027: 97 89 03                 a2 = a1 << 0x3
 79030: c8 79 09                 a2 = a2 + a0
 79033: 7b 95                    u64 [a2] = s0
 79035: 95 88 01                 a1 = a1 + 0x1
 79038: 7b 18 20                 u64 [sp + 0x20] = a1
 79041: aa 32 4d                 jump @6222 if t0 == t1
      :                          @6214
 79044: 82 18 20                 a1 = u64 [sp + 0x20]
 79047: 82 25                    s0 = u64 [t0]
 79049: 95 22 08                 t0 = t0 + 0x8
 79052: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
 79055: 97 89 03                 a2 = a1 << 0x3
 79058: 01                       fallthrough
      :                          @6215
 79059: 51 09 1b                 jump @6219 if a2 == 0
      :                          @6216
 79062: 82 ac 08                 a5 = u64 [a3 + 0x8]
 79065: 95 ab 08                 a4 = a3 + 0x8
 79068: c8 5c 0c                 a5 = a5 + s0
 79071: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 79074: 64 ba                    a3 = a4
 79076: ac c6 ef                 jump @6215 if s1 <u a5
      :                          @6217
 79079: 7b bc                    u64 [a4] = a5
 79081: ab 32 db                 jump @6214 if t0 != t1
      :                          @6218
 79084: 28 22                    jump @6222
      :                          @6219
 79086: 82 19 10                 a2 = u64 [sp + 0x10]
 79089: ab 98 c2                 jump @6213 if a1 != a2
      :                          @6220
 79092: 95 17 10                 a0 = sp + 0x10
 79095: 7b 12 08                 u64 [sp + 0x8] = t0
 79098: 50 20 ca 03 0d 1e ff     ra = 970, jump @1581
      :                          @6221 [@dyn 485]
 79105: 82 13                    t1 = u64 [sp]
 79107: 82 12 08                 t0 = u64 [sp + 0x8]
 79110: 82 18 20                 a1 = u64 [sp + 0x20]
 79113: 82 17 18                 a0 = u64 [sp + 0x18]
 79116: 28 a7                    jump @6213
      :                          @6222
 79118: 82 19 10                 a2 = u64 [sp + 0x10]
 79121: 82 17 20                 a0 = u64 [sp + 0x20]
 79124: 51 09 39                 jump @6232 if a2 == 0
      :                          @6223
 79127: 33 08 00 20              a1 = 0x2000
 79131: ac 98 32                 jump @6232 if a1 <u a2
      :                          @6224
 79134: 82 18 18                 a1 = u64 [sp + 0x18]
 79137: 97 99 03                 a2 = a2 << 0x3
 79140: 33 0a c0 22 03           a3 = 0x322c0
 79145: 95 aa 00 00 01           a3 = a3 + 0x10000
 79150: 01                       fallthrough
      :                          @6225
 79151: 82 ab                    a4 = u64 [a3]
 79153: c9 ba 0c                 a5 = a3 - a4
 79156: ab 8c 19                 jump @6232 if a5 != a1
      :                          @6226
 79159: c9 9b 0c                 a5 = a4 - a2
 79162: 01                       fallthrough
      :                          @6227
 79163: 82 a6                    s1 = u64 [a3]
 79165: ab b6 f2                 jump @6225 if s1 != a4
      :                          @6228
 79168: 7b ac                    u64 [a3] = a5
 79170: 33 05                    s0 = 0
 79172: 01                       fallthrough
      :                          @6229
 79173: ab b6 ea                 jump @6225 if s1 != a4
      :                          @6230
 79176: 28 05                    jump @6232
      :                          @6231
 79178: 33 07                    a0 = 0
 79180: 01                       fallthrough
      :                          @6232
 79181: 82 10 38                 ra = u64 [sp + 0x38]
 79184: 82 15 30                 s0 = u64 [sp + 0x30]
 79187: 82 16 28                 s1 = u64 [sp + 0x28]
 79190: 95 11 40                 sp = sp + 0x40
 79193: 32 00                    ret
      :                          @6233
 79195: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 79198: 7b 10 50                 u64 [sp + 0x50] = ra
 79201: 7b 15 48                 u64 [sp + 0x48] = s0
 79204: 7b 16 40                 u64 [sp + 0x40] = s1
 79207: 82 79 10                 a2 = u64 [a0 + 0x10]
 79210: 51 09 e0 01              jump @6282 if a2 == 0
      :                          @6234
 79214: 64 76                    s1 = a0
 79216: 98 97 3b                 a0 = a2 >> 0x3b
 79219: 52 07 d9 01              jump @6284 if a0 != 0
      :                          @6235
 79223: 88 72 01                 t0 = a0 <u 0x1
 79226: 7b 19 28                 u64 [sp + 0x28] = a2
 79229: 97 99 04                 a2 = a2 << 0x4
 79232: 97 22 03                 t0 = t0 << 0x3
 79235: 33 04 c0 22 03           t2 = 0x322c0
 79240: 33 03 00 00 01           t1 = 0x10000
 79245: c8 34 00                 ra = t2 + t1
 79248: 01                       fallthrough
      :                          @6236
 79249: 82 0b                    a4 = u64 [ra]
 79251: c8 9b 05                 s0 = a4 + a2
 79254: ac b5 b5 01              jump @6283 if s0 <u a4
      :                          @6237
 79258: c8 25 07                 a0 = s0 + t0
 79261: d8 57 0c                 a5 = a0 <u s0
 79264: d8 73 07                 a0 = t1 <u a0
 79267: d4 c7 07                 a0 = a0 | a5
 79270: 52 07 a5 01              jump @6283 if a0 != 0
      :                          @6238
 79274: c9 54 0a                 a3 = t2 - s0
 79277: c8 3a 0a                 a3 = a3 + t1
 79280: 84 ac 07                 a5 = a3 & 0x7
 79283: c8 c5 05                 s0 = s0 + a5
 79286: 01                       fallthrough
      :                          @6239
 79287: 82 07                    a0 = u64 [ra]
 79289: ab b7 d8                 jump @6236 if a0 != a4
      :                          @6240
 79292: 7b 05                    u64 [ra] = s0
 79294: c9 ca 07                 a0 = a3 - a5
 79297: 7b 17 20                 u64 [sp + 0x20] = a0
 79300: 33 08                    a1 = 0
 79302: 7b 19                    u64 [sp] = a2
 79304: 50 20 cc 03 91 d5 01     ra = 972, jump @13675
      :                          @6241 [@dyn 486]
 79311: 82 67 08                 a0 = u64 [s1 + 0x8]
 79314: 7b 17 18                 u64 [sp + 0x18] = a0
 79317: 33 09 c0 22 03           a2 = 0x322c0
 79322: 33 0b 00 00 01           a4 = 0x10000
 79327: 95 97 08 00 01           a0 = a2 + 0x10008
 79332: c9 57 07                 a0 = a0 - s0
 79335: 7b 17 08                 u64 [sp + 0x8] = a0
 79338: 7b 19 10                 u64 [sp + 0x10] = a2
 79341: c8 b9 05                 s0 = a2 + a4
 79344: 82 1c 28                 a5 = u64 [sp + 0x28]
 79347: 33 03                    t1 = 0
 79349: 33 02 01                 t0 = 0x1
 79352: 28 0f                    jump @6244
      :                          @6242
 79354: 82 18 30                 a1 = u64 [sp + 0x30]
 79357: aa c8 d9 00              jump @6266 if a1 == a5
      :                          @6243
 79361: 64 83                    t1 = a1
 79363: 95 82 01                 t0 = a1 + 0x1
 79366: 01                       fallthrough
      :                          @6244
 79367: 82 58                    a1 = u64 [s0]
 79369: c8 c8 07                 a0 = a1 + a5
 79372: ac 87 3d 01              jump @6281 if a0 <u a1
      :                          @6245
 79376: 95 79 01                 a2 = a0 + 0x1
 79379: 88 9a 01                 a3 = a2 <u 0x1
 79382: d8 9b 09                 a2 = a4 <u a2
 79385: d4 a9 09                 a2 = a2 | a3
 79388: 52 09 2d 01              jump @6281 if a2 != 0
      :                          @6246
 79392: 82 59                    a2 = u64 [s0]
 79394: ab 89 e5                 jump @6244 if a2 != a1
      :                          @6247
 79397: 7b 57                    u64 [s0] = a0
 79399: 7b 12 30                 u64 [sp + 0x30] = t0
 79402: 82 18 10                 a1 = u64 [sp + 0x10]
 79405: c9 78 07                 a0 = a1 - a0
 79408: c8 b7 06                 s1 = a0 + a4
 79411: 64 67                    a0 = s1
 79413: 33 08                    a1 = 0
 79415: 64 c9                    a2 = a5
 79417: 7b 13 38                 u64 [sp + 0x38] = t1
 79420: 50 20 ce 03 1d d5 01     ra = 974, jump @13675
      :                          @6248 [@dyn 487]
 79427: 82 1c 28                 a5 = u64 [sp + 0x28]
 79430: 82 13 38                 t1 = u64 [sp + 0x38]
 79433: 33 04 01                 t2 = 0x1
 79436: 33 07                    a0 = 0
 79438: 96 38 18                 a1 = t1 * 0x18
 79441: 82 19 18                 a2 = u64 [sp + 0x18]
 79444: c8 98 08                 a1 = a1 + a2
 79447: 95 89 10                 a2 = a1 + 0x10
 79450: 95 8a 08                 a3 = a1 + 0x8
 79453: 82 1b 08                 a4 = u64 [sp + 0x8]
 79456: 82 12 20                 t0 = u64 [sp + 0x20]
 79459: 28 0b                    jump @6250
      :                          @6249
 79461: 95 77 01                 a0 = a0 + 0x1
 79464: 95 bb 10                 a4 = a4 + 0x10
 79467: aa 7c 26                 jump @6255 if a5 == a0
      :                          @6250
 79470: 82 98                    a1 = u64 [a2]
 79472: ae 87 86 00              jump @6269 if a0 >=u a1
      :                          @6251
 79476: 82 a8                    a1 = u64 [a3]
 79478: c8 78 08                 a1 = a1 + a0
 79481: 7c 88                    a1 = u8 [a1]
 79483: 51 08 ea                 jump @6249 if a1 == 0
      :                          @6252
 79486: 82 b8 f8                 a1 = u64 [a4 + 0xfffffffffffffff8]
 79489: 51 08 e4                 jump @6249 if a1 == 0
      :                          @6253
 79492: 82 b8                    a1 = u64 [a4]
 79494: ae c8 c2 00              jump @6280 if a1 >=u a5
      :                          @6254
 79498: c8 68 08                 a1 = a1 + s1
 79501: 78 84                    u8 [a1] = t2
 79503: 28 d6                    jump @6249
      :                          @6255
 79505: 33 07                    a0 = 0
 79507: 01                       fallthrough
      :                          @6256
 79508: c8 76 08                 a1 = s1 + a0
 79511: 7c 88                    a1 = u8 [a1]
 79513: 51 08 0c                 jump @6259 if a1 == 0
      :                          @6257
 79516: 95 77 01                 a0 = a0 + 0x1
 79519: ab 7c f5                 jump @6256 if a5 != a0
      :                          @6258
 79522: 28 a8 00                 jump @6282
      :                          @6259
 79525: 97 38 04                 a1 = t1 << 0x4
 79528: c8 28 08                 a1 = a1 + t0
 79531: 7b 84                    u64 [a1] = t2
 79533: 7b 87 08                 u64 [a1 + 0x8] = a0
 79536: 33 0b 00 00 01           a4 = 0x10000
 79541: ac cb 45 ff              jump @6242 if a4 <u a5
      :                          @6260
 79545: 82 57                    a0 = u64 [s0]
 79547: c9 75 08                 a1 = s0 - a0
 79550: ab 68 3c ff              jump @6242 if a1 != s1
      :                          @6261
 79554: c9 c7 08                 a1 = a0 - a5
 79557: 01                       fallthrough
      :                          @6262
 79558: 82 59                    a2 = u64 [s0]
 79560: ab 79 f1                 jump @6260 if a2 != a0
      :                          @6263
 79563: 7b 58                    u64 [s0] = a1
 79565: 33 0a                    a3 = 0
 79567: 01                       fallthrough
      :                          @6264
 79568: ab 79 e9                 jump @6260 if a2 != a0
      :                          @6265
 79571: 28 27 ff                 jump @6242
      :                          @6266
 79574: 82 15 20                 s0 = u64 [sp + 0x20]
 79577: 82 57                    a0 = u64 [s0]
 79579: 51 07 6f                 jump @6282 if a0 == 0
      :                          @6267
 79582: 82 57 08                 a0 = u64 [s0 + 0x8]
 79585: 82 12                    t0 = u64 [sp]
 79587: 52 1c 01 14              jump @6270 if a5 != 1
      :                          @6268
 79591: 33 02 10                 t0 = 0x10
 79594: 33 08 c0 22 03           a1 = 0x322c0
 79599: 95 88 00 00 01           a1 = a1 + 0x10000
 79604: 28 2d                    jump @6275
      :                          @6269
 79606: 00                       trap
      :                          @6270
 79607: c8 25 08                 a1 = s0 + t0
 79610: 95 59 10                 a2 = s0 + 0x10
 79613: 01                       fallthrough
      :                          @6271
 79614: 82 9a                    a3 = u64 [a2]
 79616: 51 0a 4a                 jump @6282 if a3 == 0
      :                          @6272
 79619: 82 9a 08                 a3 = u64 [a2 + 0x8]
 79622: 95 99 10                 a2 = a2 + 0x10
 79625: e4 a7 07                 a0 = maxu(a0, a3)
 79628: ab 89 f2                 jump @6271 if a2 != a1
      :                          @6273
 79631: 33 08 00 10              a1 = 0x1000
 79635: ac c8 24                 jump @6279 if a1 <u a5
      :                          @6274
 79638: 33 08 c0 22 03           a1 = 0x322c0
 79643: 95 88 00 00 01           a1 = a1 + 0x10000
 79648: 01                       fallthrough
      :                          @6275
 79649: 82 89                    a2 = u64 [a1]
 79651: c9 98 0a                 a3 = a1 - a2
 79654: ab 5a 11                 jump @6279 if a3 != s0
      :                          @6276
 79657: c9 29 0a                 a3 = a2 - t0
 79660: 01                       fallthrough
      :                          @6277
 79661: 82 8b                    a4 = u64 [a1]
 79663: ab 9b f2                 jump @6275 if a4 != a2
      :                          @6278
 79666: 7b 8a                    u64 [a1] = a3
 79668: 33 0c                    a5 = 0
 79670: 01                       fallthrough
      :                          @6279
 79671: 95 77 01                 a0 = a0 + 0x1
 79674: 82 10 50                 ra = u64 [sp + 0x50]
 79677: 82 15 48                 s0 = u64 [sp + 0x48]
 79680: 82 16 40                 s1 = u64 [sp + 0x40]
 79683: 95 11 58                 sp = sp + 0x58
 79686: 32 00                    ret
      :                          @6280
 79688: 00                       trap
      :                          @6281
 79689: 00                       trap
      :                          @6282
 79690: 00                       trap
      :                          @6283
 79691: 00                       trap
      :                          @6284
 79692: 00                       trap
      :                          @6285
 79693: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 79696: 7b 10 20                 u64 [sp + 0x20] = ra
 79699: 7b 15 18                 u64 [sp + 0x18] = s0
 79702: 7b 16 10                 u64 [sp + 0x10] = s1
 79705: 84 89 1f                 a2 = a1 & 0x1f
 79708: 33 0a 1f                 a3 = 0x1f
 79711: aa a9 85 00              jump @6300 if a2 == a3
      :                          @6286
 79715: 51 08 81 00              jump @6300 if a1 == 0
      :                          @6287
 79719: 49 01                    u64 [sp + 0] = 0
 79721: 33 00                    ra = 0
 79723: 90 89 01                 i32 a2 = 0x1 << a1
 79726: 33 0a 01                 a3 = 0x1
 79729: e3 a9 09                 a2 = maxs(a2, a3)
 79732: 7b 19 08                 u64 [sp + 0x8] = a2
 79735: 28 10                    jump @6290
      :                          @6288
 79737: 82 1a                    a3 = u64 [sp]
 79739: e4 9a 0a                 a3 = maxu(a3, a2)
 79742: 7b 1a                    u64 [sp] = a3
 79744: 01                       fallthrough
      :                          @6289
 79745: 82 19 08                 a2 = u64 [sp + 0x8]
 79748: aa 90 63                 jump @6301 if ra == a2
      :                          @6290
 79751: 33 09                    a2 = 0
 79753: 33 0c                    a5 = 0
 79755: 64 05                    s0 = ra
 79757: 83 00 01                 i32 ra = ra + 0x1
 79760: 33 04 01                 t2 = 0x1
 79763: 28 08                    jump @6292
      :                          @6291
 79765: 83 44 01                 i32 t2 = t2 + 0x1
 79768: aa 8c e1                 jump @6288 if a5 == a1
      :                          @6292
 79771: 64 ca                    a3 = a5
 79773: c6 c5 0b                 i32 a4 = s0 >> a5
 79776: 84 bb 01                 a4 = a4 & 0x1
 79779: 95 cc 01                 a5 = a5 + 0x1
 79782: 51 0b ef                 jump @6291 if a4 == 0
      :                          @6293
 79785: 95 99 01                 a2 = a2 + 0x1
 79788: ae 8c e9                 jump @6291 if a5 >=u a1
      :                          @6294
 79791: 96 aa 18                 a3 = a3 * 0x18
 79794: c8 7a 0a                 a3 = a3 + a0
 79797: 95 a2 10                 t0 = a3 + 0x10
 79800: 95 a3 08                 t1 = a3 + 0x8
 79803: 64 46                    s1 = t2
 79805: 64 ca                    a3 = a5
 79807: 28 0b                    jump @6296
      :                          @6295
 79809: 95 aa 01                 a3 = a3 + 0x1
 79812: 83 66 01                 i32 s1 = s1 + 0x1
 79815: aa a8 ce                 jump @6291 if a1 == a3
      :                          @6296
 79818: c6 65 0b                 i32 a4 = s0 >> s1
 79821: 84 bb 01                 a4 = a4 & 0x1
 79824: 51 0b f1                 jump @6295 if a4 == 0
      :                          @6297
 79827: 82 2b                    a4 = u64 [t0]
 79829: ae ba 22                 jump @6302 if a3 >=u a4
      :                          @6298
 79832: 82 3b                    a4 = u64 [t1]
 79834: c8 ab 0b                 a4 = a4 + a3
 79837: 7c bb                    a4 = u8 [a4]
 79839: 51 0b e2                 jump @6295 if a4 == 0
      :                          @6299
 79842: 28 9f                    jump @6289
      :                          @6300
 79844: 49 01                    u64 [sp + 0] = 0
 79846: 01                       fallthrough
      :                          @6301
 79847: 82 17                    a0 = u64 [sp]
 79849: 82 10 20                 ra = u64 [sp + 0x20]
 79852: 82 15 18                 s0 = u64 [sp + 0x18]
 79855: 82 16 10                 s1 = u64 [sp + 0x10]
 79858: 95 11 28                 sp = sp + 0x28
 79861: 32 00                    ret
      :                          @6302
 79863: 00                       trap
      :                          @6303
 79864: 95 11 50 ff              sp = sp + 0xffffffffffffff50
 79868: 7b 10 a8 00              u64 [sp + 0xa8] = ra
 79872: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 79876: 7b 16 98 00              u64 [sp + 0x98] = s1
 79880: 82 89 10                 a2 = u64 [a1 + 0x10]
 79883: 7b 17 08                 u64 [sp + 0x8] = a0
 79886: 51 09 ed 01              jump @6339 if a2 == 0
      :                          @6304
 79890: 57 09 dc 02              jump @6372 if a2 <s 0
      :                          @6305
 79894: 85 95 ff                 s0 = a2 ^ 0xffffffffffffffff
 79897: 98 53 3f                 t1 = s0 >> 0x3f
 79900: 33 05 c0 22 03           s0 = 0x322c0
 79905: 33 02 00 00 01           t0 = 0x10000
 79910: c8 25 05                 s0 = s0 + t0
 79913: 01                       fallthrough
      :                          @6306
 79914: 82 5b                    a4 = u64 [s0]
 79916: c8 9b 0a                 a3 = a4 + a2
 79919: ac ba b9 02              jump @6366 if a3 <u a4
      :                          @6307
 79923: c8 3a 0c                 a5 = a3 + t1
 79926: d8 ac 06                 s1 = a5 <u a3
 79929: d8 c2 0c                 a5 = t0 <u a5
 79932: d4 6c 0c                 a5 = a5 | s1
 79935: 52 0c a9 02              jump @6366 if a5 != 0
      :                          @6308
 79939: 82 5c                    a5 = u64 [s0]
 79941: ab bc e5                 jump @6306 if a5 != a4
      :                          @6309
 79944: 7b 5a                    u64 [s0] = a3
 79946: 7b 18 60                 u64 [sp + 0x60] = a1
 79949: 33 06 c0 22 04           s1 = 0x422c0
 79954: c9 a6 06                 s1 = s1 - a3
 79957: 64 67                    a0 = s1
 79959: 33 08                    a1 = 0
 79961: 7b 19 40                 u64 [sp + 0x40] = a2
 79964: 50 20 d0 03 fd d2 01     ra = 976, jump @13675
      :                          @6310 [@dyn 488]
 79971: 82 17 40                 a0 = u64 [sp + 0x40]
 79974: 7b 17 80 00              u64 [sp + 0x80] = a0
 79978: 7b 16 88 00              u64 [sp + 0x88] = s1
 79982: 82 17 40                 a0 = u64 [sp + 0x40]
 79985: 7b 17 90 00              u64 [sp + 0x90] = a0
 79989: 95 17 68                 a0 = sp + 0x68
 79992: 95 18 80 00              a1 = sp + 0x80
 79996: 82 19 40                 a2 = u64 [sp + 0x40]
 79999: 50 20 d2 03 49 2c ff     ra = 978, jump @1895
      :                          @6311 [@dyn 489]
 80006: 82 13 40                 t1 = u64 [sp + 0x40]
 80009: 49 21 80 00              u64 [sp + 128] = 0
 80013: 33 0b 08                 a4 = 0x8
 80016: 7b 1b 88 00              u64 [sp + 0x88] = a4
 80020: 49 21 90 00              u64 [sp + 144] = 0
 80024: 51 03 7b 01              jump @6340 if t1 == 0
      :                          @6312
 80028: 82 19 70                 a2 = u64 [sp + 0x70]
 80031: 33 08                    a1 = 0
 80033: 33 05                    s0 = 0
 80035: 82 17 60                 a0 = u64 [sp + 0x60]
 80038: 82 77 08                 a0 = u64 [a0 + 0x8]
 80041: 7b 17                    u64 [sp] = a0
 80043: 82 14 78                 t2 = u64 [sp + 0x78]
 80046: 7b 19 48                 u64 [sp + 0x48] = a2
 80049: 95 97 10                 a0 = a2 + 0x10
 80052: 7b 17 28                 u64 [sp + 0x28] = a0
 80055: 33 07 01                 a0 = 0x1
 80058: 7b 14 10                 u64 [sp + 0x10] = t2
 80061: 28 0f                    jump @6314
      :                          @6313
 80063: 82 17 20                 a0 = u64 [sp + 0x20]
 80066: 95 77 01                 a0 = a0 + 0x1
 80069: 82 15 18                 s0 = u64 [sp + 0x18]
 80072: aa 35 4b 01              jump @6340 if s0 == t1
      :                          @6314
 80076: 7b 17 20                 u64 [sp + 0x20] = a0
 80079: 95 56 01                 s1 = s0 + 0x1
 80082: 7b 16 18                 u64 [sp + 0x18] = s1
 80085: ae 36 ea                 jump @6313 if s1 >=u t1
      :                          @6315
 80088: 96 57 18                 a0 = s0 * 0x18
 80091: 82 19                    a2 = u64 [sp]
 80093: c8 79 09                 a2 = a2 + a0
 80096: 95 9a 10                 a3 = a2 + 0x10
 80099: 95 9c 08                 a5 = a2 + 0x8
 80102: ae 45 f8 00              jump @6334 if s0 >=u t2
      :                          @6316
 80106: 82 19 48                 a2 = u64 [sp + 0x48]
 80109: c8 97 07                 a0 = a0 + a2
 80112: 95 79 10                 a2 = a0 + 0x10
 80115: 7b 19 60                 u64 [sp + 0x60] = a2
 80118: 95 77 08                 a0 = a0 + 0x8
 80121: 7b 17 58                 u64 [sp + 0x58] = a0
 80124: 7b 1c 38                 u64 [sp + 0x38] = a5
 80127: 7b 1a 30                 u64 [sp + 0x30] = a3
 80130: 28 08                    jump @6318
      :                          @6317
 80132: 95 66 01                 s1 = s1 + 0x1
 80135: aa 36 b8                 jump @6313 if s1 == t1
      :                          @6318
 80138: 82 a9                    a2 = u64 [a3]
 80140: ae 96 de 01              jump @6368 if s1 >=u a2
      :                          @6319
 80144: 82 c7                    a0 = u64 [a5]
 80146: c8 67 07                 a0 = a0 + s1
 80149: 7c 77                    a0 = u8 [a0]
 80151: 51 07 ed                 jump @6317 if a0 == 0
      :                          @6320
 80154: 82 17 60                 a0 = u64 [sp + 0x60]
 80157: 82 79                    a2 = u64 [a0]
 80159: ae 96 cb 01              jump @6368 if s1 >=u a2
      :                          @6321
 80163: 82 17 58                 a0 = u64 [sp + 0x58]
 80166: 82 77                    a0 = u64 [a0]
 80168: c8 67 07                 a0 = a0 + s1
 80171: 7c 77                    a0 = u8 [a0]
 80173: 52 07 d7                 jump @6317 if a0 != 0
      :                          @6322
 80176: 82 17 80 00              a0 = u64 [sp + 0x80]
 80180: ab 78 1d                 jump @6325 if a1 != a0
      :                          @6323
 80183: 95 17 80 00              a0 = sp + 0x80
 80187: 50 20 d4 03 c5 1a ff     ra = 980, jump @1605
      :                          @6324 [@dyn 490]
 80194: 82 14 10                 t2 = u64 [sp + 0x10]
 80197: 82 13 40                 t1 = u64 [sp + 0x40]
 80200: 82 18 90 00              a1 = u64 [sp + 0x90]
 80204: 82 1b 88 00              a4 = u64 [sp + 0x88]
 80208: 01                       fallthrough
      :                          @6325
 80209: 97 87 04                 a0 = a1 << 0x4
 80212: c8 b7 07                 a0 = a0 + a4
 80215: 7b 75                    u64 [a0] = s0
 80217: 7b 76 08                 u64 [a0 + 0x8] = s1
 80220: 95 88 01                 a1 = a1 + 0x1
 80223: 7b 18 90 00              u64 [sp + 0x90] = a1
 80227: ae 46 5b 01              jump @6361 if s1 >=u t2
      :                          @6326
 80231: 7b 1b 50                 u64 [sp + 0x50] = a4
 80234: 33 07                    a0 = 0
 80236: 96 69 18                 a2 = s1 * 0x18
 80239: 82 1a 48                 a3 = u64 [sp + 0x48]
 80242: c8 a9 09                 a2 = a2 + a3
 80245: 95 90 10                 ra = a2 + 0x10
 80248: 95 9c 08                 a5 = a2 + 0x8
 80251: 82 1a 28                 a3 = u64 [sp + 0x28]
 80254: 01                       fallthrough
      :                          @6327
 80255: 82 19 60                 a2 = u64 [sp + 0x60]
 80258: 82 99                    a2 = u64 [a2]
 80260: ae 97 68 01              jump @6370 if a0 >=u a2
      :                          @6328
 80264: 64 5b                    a4 = s0
 80266: 82 19 58                 a2 = u64 [sp + 0x58]
 80269: 82 99                    a2 = u64 [a2]
 80271: c8 79 09                 a2 = a2 + a0
 80274: 46 09 01                 u8 [a2 + 0] = 0x1
 80277: aa 74 28 01              jump @6360 if t2 == a0
      :                          @6329
 80281: 82 a9                    a2 = u64 [a3]
 80283: 64 b5                    s0 = a4
 80285: ae 9b 4a 01              jump @6365 if a4 >=u a2
      :                          @6330
 80289: 82 a9 f8                 a2 = u64 [a3 + 0xfffffffffffffff8]
 80292: c8 59 09                 a2 = a2 + s0
 80295: 33 02 01                 t0 = 0x1
 80298: 78 92                    u8 [a2] = t0
 80300: 82 09                    a2 = u64 [ra]
 80302: ae 97 3e 01              jump @6370 if a0 >=u a2
      :                          @6331
 80306: 82 c9                    a2 = u64 [a5]
 80308: c8 79 09                 a2 = a2 + a0
 80311: 46 09 01                 u8 [a2 + 0] = 0x1
 80314: 82 a9                    a2 = u64 [a3]
 80316: ae 96 2e 01              jump @6368 if s1 >=u a2
      :                          @6332
 80320: 82 a9 f8                 a2 = u64 [a3 + 0xfffffffffffffff8]
 80323: 95 77 01                 a0 = a0 + 0x1
 80326: c8 69 09                 a2 = a2 + s1
 80329: 46 09 01                 u8 [a2 + 0] = 0x1
 80332: 95 aa 18                 a3 = a3 + 0x18
 80335: ab 73 b0                 jump @6327 if t1 != a0
      :                          @6333
 80338: 82 1b 50                 a4 = u64 [sp + 0x50]
 80341: 82 1c 38                 a5 = u64 [sp + 0x38]
 80344: 82 1a 30                 a3 = u64 [sp + 0x30]
 80347: 28 29 ff                 jump @6317
      :                          @6334
 80350: 82 a9                    a2 = u64 [a3]
 80352: 64 67                    a0 = s1
 80354: 01                       fallthrough
      :                          @6335
 80355: ae 97 06 01              jump @6367 if a0 >=u a2
      :                          @6336
 80359: 82 ca                    a3 = u64 [a5]
 80361: c8 7a 0a                 a3 = a3 + a0
 80364: 7c aa                    a3 = u8 [a3]
 80366: 52 0a 01 01              jump @6373 if a3 != 0
      :                          @6337
 80370: 95 77 01                 a0 = a0 + 0x1
 80373: ab 73 ee                 jump @6335 if t1 != a0
      :                          @6338
 80376: 28 c7 fe                 jump @6313
      :                          @6339
 80379: 49 11 68                 u64 [sp + 104] = 0
 80382: 49 11 70 08              u64 [sp + 112] = 0x8
 80386: 49 11 78                 u64 [sp + 120] = 0
 80389: 49 21 80 00              u64 [sp + 128] = 0
 80393: 49 21 88 00 08           u64 [sp + 136] = 0x8
 80398: 49 21 90 00              u64 [sp + 144] = 0
 80402: 01                       fallthrough
      :                          @6340
 80403: 82 17 90 00              a0 = u64 [sp + 0x90]
 80407: 82 19 88 00              a2 = u64 [sp + 0x88]
 80411: 82 1a 80 00              a3 = u64 [sp + 0x80]
 80415: 82 10 78                 ra = u64 [sp + 0x78]
 80418: 82 14 70                 t2 = u64 [sp + 0x70]
 80421: 82 18 08                 a1 = u64 [sp + 0x8]
 80424: 7b 87 10                 u64 [a1 + 0x10] = a0
 80427: 7b 89 08                 u64 [a1 + 0x8] = a2
 80430: 7b 8a                    u64 [a1] = a3
 80432: 51 00 4a                 jump @6352 if ra == 0
      :                          @6341
 80435: 33 09                    a2 = 0
 80437: 33 03 18                 t1 = 0x18
 80440: 33 02 00 00 01           t0 = 0x10000
 80445: 33 0c c0 22 03           a5 = 0x322c0
 80450: c8 2c 0a                 a3 = a5 + t0
 80453: 28 08                    jump @6343
      :                          @6342
 80455: 95 99 01                 a2 = a2 + 0x1
 80458: aa 09 30                 jump @6352 if a2 == ra
      :                          @6343
 80461: ca 39 07                 a0 = a2 * t1
 80464: c8 47 07                 a0 = a0 + t2
 80467: 82 76                    s1 = u64 [a0]
 80469: 51 06 f2                 jump @6342 if s1 == 0
      :                          @6344
 80472: ac 62 ef                 jump @6342 if t0 <u s1
      :                          @6345
 80475: 82 75 08                 s0 = u64 [a0 + 0x8]
 80478: 01                       fallthrough
      :                          @6346
 80479: 82 a7                    a0 = u64 [a3]
 80481: c9 7a 0c                 a5 = a3 - a0
 80484: ab 5c e3                 jump @6342 if a5 != s0
      :                          @6347
 80487: c9 67 0c                 a5 = a0 - s1
 80490: 01                       fallthrough
      :                          @6348
 80491: 82 ab                    a4 = u64 [a3]
 80493: ab 7b f2                 jump @6346 if a4 != a0
      :                          @6349
 80496: 7b ac                    u64 [a3] = a5
 80498: 33 08                    a1 = 0
 80500: 01                       fallthrough
      :                          @6350
 80501: ab 7b ea                 jump @6346 if a4 != a0
      :                          @6351
 80504: 28 cf                    jump @6342
      :                          @6352
 80506: 82 18 68                 a1 = u64 [sp + 0x68]
 80509: 51 08 2e                 jump @6359 if a1 == 0
      :                          @6353
 80512: 33 07 aa 0a              a0 = 0xaaa
 80516: ac 87 27                 jump @6359 if a0 <u a1
      :                          @6354
 80519: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 80522: 33 09 c0 22 03           a2 = 0x322c0
 80527: 95 99 00 00 01           a2 = a2 + 0x10000
 80532: 01                       fallthrough
      :                          @6355
 80533: 82 97                    a0 = u64 [a2]
 80535: c9 79 0a                 a3 = a2 - a0
 80538: ab 4a 11                 jump @6359 if a3 != t2
      :                          @6356
 80541: c8 87 0a                 a3 = a0 + a1
 80544: 01                       fallthrough
      :                          @6357
 80545: 82 9b                    a4 = u64 [a2]
 80547: ab 7b f2                 jump @6355 if a4 != a0
      :                          @6358
 80550: 7b 9a                    u64 [a2] = a3
 80552: 33 0c                    a5 = 0
 80554: 01                       fallthrough
      :                          @6359
 80555: 82 10 a8 00              ra = u64 [sp + 0xa8]
 80559: 82 15 a0 00              s0 = u64 [sp + 0xa0]
 80563: 82 16 98 00              s1 = u64 [sp + 0x98]
 80567: 95 11 b0 00              sp = sp + 0xb0
 80571: 32 00                    ret
      :                          @6360
 80573: 00                       trap
      :                          @6361
 80574: 82 17 60                 a0 = u64 [sp + 0x60]
 80577: 82 77                    a0 = u64 [a0]
 80579: 51 07 28                 jump @6369 if a0 == 0
      :                          @6362
 80582: 82 17 58                 a0 = u64 [sp + 0x58]
 80585: 82 77                    a0 = u64 [a0]
 80587: 46 07 01                 u8 [a0 + 0] = 0x1
 80590: 51 04 1f                 jump @6371 if t2 == 0
      :                          @6363
 80593: 82 17 48                 a0 = u64 [sp + 0x48]
 80596: 82 79 10                 a2 = u64 [a0 + 0x10]
 80599: ae 95 10                 jump @6365 if s0 >=u a2
      :                          @6364
 80602: 82 17 48                 a0 = u64 [sp + 0x48]
 80605: 82 77 08                 a0 = u64 [a0 + 0x8]
 80608: c8 57 07                 a0 = a0 + s0
 80611: 46 07 01                 u8 [a0 + 0] = 0x1
 80614: 00                       trap
      :                          @6365
 80615: 00                       trap
      :                          @6366
 80616: 00                       trap
      :                          @6367
 80617: 00                       trap
      :                          @6368
 80618: 00                       trap
      :                          @6369
 80619: 00                       trap
      :                          @6370
 80620: 00                       trap
      :                          @6371
 80621: 00                       trap
      :                          @6372
 80622: 00                       trap
      :                          @6373
 80623: 00                       trap
      :                          @6374
 80624: 95 11 98                 sp = sp + 0xffffffffffffff98
 80627: 7b 10 60                 u64 [sp + 0x60] = ra
 80630: 7b 15 58                 u64 [sp + 0x58] = s0
 80633: 7b 16 50                 u64 [sp + 0x50] = s1
 80636: 7b 18 20                 u64 [sp + 0x20] = a1
 80639: 51 09 8d 02              jump @6434 if a2 == 0
      :                          @6375
 80643: 64 9a                    a3 = a2
 80645: 57 09 86 02              jump @6433 if a2 <s 0
      :                          @6376
 80649: 64 a9                    a2 = a3
 80651: 85 a5 ff                 s0 = a3 ^ 0xffffffffffffffff
 80654: 98 55 3f                 s0 = s0 >> 0x3f
 80657: 33 0a c0 22 03           a3 = 0x322c0
 80662: 33 02 00 00 01           t0 = 0x10000
 80667: c8 2a 0a                 a3 = a3 + t0
 80670: 01                       fallthrough
      :                          @6377
 80671: 82 a8                    a1 = u64 [a3]
 80673: c8 98 06                 s1 = a1 + a2
 80676: ac 86 b1 dc 01           jump @13923 if s1 <u a1
      :                          @6378
 80681: c8 56 0b                 a4 = s1 + s0
 80684: d8 6b 0c                 a5 = a4 <u s1
 80687: d8 b2 0b                 a4 = t0 <u a4
 80690: d4 cb 0b                 a4 = a4 | a5
 80693: 52 0b a0 dc 01           jump @13923 if a4 != 0
      :                          @6379
 80698: 82 ab                    a4 = u64 [a3]
 80700: ab 8b e3                 jump @6377 if a4 != a1
      :                          @6380
 80703: 7b a6                    u64 [a3] = s1
 80705: 33 0c                    a5 = 0
 80707: 7b 18 18                 u64 [sp + 0x18] = a1
 80710: 7b 17 38                 u64 [sp + 0x38] = a0
 80713: 33 05 c0 22 03           s0 = 0x322c0
 80718: 95 57 00 00 01           a0 = s0 + 0x10000
 80723: c9 67 07                 a0 = a0 - s1
 80726: 7b 17 48                 u64 [sp + 0x48] = a0
 80729: 33 08                    a1 = 0
 80731: 64 96                    s1 = a2
 80733: 50 20 d6 03 fc cf 01     ra = 982, jump @13675
      :                          @6381 [@dyn 491]
 80740: 98 67 3c                 a0 = s1 >> 0x3c
 80743: 52 07 24 02              jump @6433 if a0 != 0
      :                          @6382
 80747: 88 7c 01                 a5 = a0 <u 0x1
 80750: 97 67 03                 a0 = s1 << 0x3
 80753: 97 c4 03                 t2 = a5 << 0x3
 80756: 95 58 00 00 01           a1 = s0 + 0x10000
 80761: 64 5c                    a5 = s0
 80763: 33 00 00 00 01           ra = 0x10000
 80768: 01                       fallthrough
      :                          @6383
 80769: 82 82                    t0 = u64 [a1]
 80771: c8 72 05                 s0 = t0 + a0
 80774: ac 25 04 02              jump @6432 if s0 <u t0
      :                          @6384
 80778: c8 45 09                 a2 = s0 + t2
 80781: d8 59 0a                 a3 = a2 <u s0
 80784: d8 90 09                 a2 = ra <u a2
 80787: d4 a9 09                 a2 = a2 | a3
 80790: 52 09 f4 01              jump @6432 if a2 != 0
      :                          @6385
 80794: c9 5c 09                 a2 = a5 - s0
 80797: c8 09 09                 a2 = a2 + ra
 80800: 84 93 07                 t1 = a2 & 0x7
 80803: c8 35 05                 s0 = s0 + t1
 80806: 01                       fallthrough
      :                          @6386
 80807: 82 8a                    a3 = u64 [a1]
 80809: ab 2a d8                 jump @6383 if a3 != t0
      :                          @6387
 80812: 7b 85                    u64 [a1] = s0
 80814: 01                       fallthrough
      :                          @6388
 80815: 33 0b f8 ff 00           a4 = 0xfff8
 80820: c9 39 0a                 a3 = a2 - t1
 80823: 33 08 01                 a1 = 0x1
 80826: 7b 17 08                 u64 [sp + 0x8] = a0
 80829: 7b 1a 30                 u64 [sp + 0x30] = a3
 80832: 53 16 02 41              jump @6391 if s1 <u 2
      :                          @6389
 80836: 95 79 f8                 a2 = a0 + 0xfffffffffffffff8
 80839: 33 08 ff 00              a1 = 0xff
 80843: 64 a7                    a0 = a3
 80845: 7b 12 40                 u64 [sp + 0x40] = t0
 80848: 7b 13 28                 u64 [sp + 0x28] = t1
 80851: 49 01 f8 ff 00           u64 [sp + 0] = 0xfff8
 80856: 50 20 d8 03 81 cf 01     ra = 984, jump @13675
      :                          @6390 [@dyn 492]
 80863: 82 1b                    a4 = u64 [sp]
 80865: 82 13 28                 t1 = u64 [sp + 0x28]
 80868: 82 12 40                 t0 = u64 [sp + 0x40]
 80871: 82 1a 30                 a3 = u64 [sp + 0x30]
 80874: 82 17 08                 a0 = u64 [sp + 0x8]
 80877: c8 b7 09                 a2 = a0 + a4
 80880: 33 08 c0 22 03           a1 = 0x322c0
 80885: c8 98 08                 a1 = a1 + a2
 80888: c9 58 09                 a2 = a1 - s0
 80891: 49 09 ff                 u64 [a2 + 0] = 0xffffffffffffffff
 80894: 64 68                    a1 = s1
 80896: 01                       fallthrough
      :                          @6391
 80897: 49 11 40                 u64 [sp + 64] = 0
 80900: 33 0c                    a5 = 0
 80902: 49 0a                    u64 [a3 + 0] = 0
 80904: c9 7b 07                 a0 = a4 - a0
 80907: c8 32 09                 a2 = t0 + t1
 80910: 33 0a c0 22 03           a3 = 0x322c0
 80915: c8 a7 07                 a0 = a0 + a3
 80918: c9 97 07                 a0 = a0 - a2
 80921: 82 19 38                 a2 = u64 [sp + 0x38]
 80924: 82 94 10                 t2 = u64 [a2 + 0x10]
 80927: 82 92 08                 t0 = u64 [a2 + 0x8]
 80930: 95 77 10                 a0 = a0 + 0x10
 80933: 7b 17 28                 u64 [sp + 0x28] = a0
 80936: 82 17 18                 a0 = u64 [sp + 0x18]
 80939: c9 7a 09                 a2 = a3 - a0
 80942: 95 99 00 00 01           a2 = a2 + 0x10000
 80947: 9a 67                    a0 = -s1
 80949: 7b 17 18                 u64 [sp + 0x18] = a0
 80952: 33 03 18                 t1 = 0x18
 80955: 82 15 48                 s0 = u64 [sp + 0x48]
 80958: 7b 16 10                 u64 [sp + 0x10] = s1
 80961: 28 0f                    jump @6393
      :                          @6392
 80963: 82 16 10                 s1 = u64 [sp + 0x10]
 80966: 82 15 48                 s0 = u64 [sp + 0x48]
 80969: 82 1c 38                 a5 = u64 [sp + 0x38]
 80972: aa 6c c7 00              jump @6412 if a5 == s1
      :                          @6393
 80976: 33 0b                    a4 = 0
 80978: 95 cc 01                 a5 = a5 + 0x1
 80981: 7b 1c 38                 u64 [sp + 0x38] = a5
 80984: 82 17 28                 a0 = u64 [sp + 0x28]
 80987: 01                       fallthrough
      :                          @6394
 80988: aa b6 2d 01              jump @6431 if s1 == a4
      :                          @6395
 80992: 64 ba                    a3 = a4
 80994: 64 70                    ra = a0
 80996: c8 b5 07                 a0 = s0 + a4
 80999: 7c 7c                    a5 = u8 [a0]
 81001: 95 bb 01                 a4 = a4 + 0x1
 81004: 95 07 08                 a0 = ra + 0x8
 81007: 52 0c ed                 jump @6394 if a5 != 0
      :                          @6396
 81010: ae 8a 15 01              jump @6429 if a3 >=u a1
      :                          @6397
 81014: ae 6b 36                 jump @6404 if a4 >=u s1
      :                          @6398
 81017: 97 a7 03                 a0 = a3 << 0x3
 81020: 82 1c 30                 a5 = u64 [sp + 0x30]
 81023: c8 c7 07                 a0 = a0 + a5
 81026: 82 77                    a0 = u64 [a0]
 81028: 28 1a                    jump @6401
      :                          @6399
 81030: 82 0c                    a5 = u64 [ra]
 81032: d8 7c 05                 s0 = a5 <u a0
 81035: db 5b 0a                 a3 = a4 if s0 != 0
 81038: 82 15 48                 s0 = u64 [sp + 0x48]
 81041: e6 c7 07                 a0 = minu(a0, a5)
 81044: 01                       fallthrough
      :                          @6400
 81045: 95 bb 01                 a4 = a4 + 0x1
 81048: 95 00 08                 ra = ra + 0x8
 81051: aa b6 11                 jump @6404 if s1 == a4
      :                          @6401
 81054: c8 b5 0c                 a5 = s0 + a4
 81057: 7c cc                    a5 = u8 [a5]
 81059: 52 0c f2                 jump @6400 if a5 != 0
      :                          @6402
 81062: ac 8b e0                 jump @6399 if a4 <u a1
      :                          @6403
 81065: 28 dd 00                 jump @6428
      :                          @6404
 81068: ae 6a dc 00              jump @6430 if a3 >=u s1
      :                          @6405
 81072: c8 a5 07                 a0 = s0 + a3
 81075: 46 07 01                 u8 [a0 + 0] = 0x1
 81078: 97 aa 03                 a3 = a3 << 0x3
 81081: 82 16 30                 s1 = u64 [sp + 0x30]
 81084: c8 a6 07                 a0 = s1 + a3
 81087: 82 77                    a0 = u64 [a0]
 81089: 82 1b 40                 a4 = u64 [sp + 0x40]
 81092: c8 7b 0b                 a4 = a4 + a0
 81095: 7b 1b 40                 u64 [sp + 0x40] = a4
 81098: 82 15 20                 s0 = u64 [sp + 0x20]
 81101: c8 a5 00                 ra = s0 + a3
 81104: 82 17 18                 a0 = u64 [sp + 0x18]
 81107: 28 0f                    jump @6407
      :                          @6406
 81109: 95 66 08                 s1 = s1 + 0x8
 81112: 95 77 01                 a0 = a0 + 0x1
 81115: 95 55 08                 s0 = s0 + 0x8
 81118: 51 07 65 ff              jump @6392 if a0 == 0
      :                          @6407
 81122: c8 79 0a                 a3 = a2 + a0
 81125: 7c aa                    a3 = u8 [a3]
 81127: 52 0a ee                 jump @6406 if a3 != 0
      :                          @6408
 81130: 82 0b                    a4 = u64 [ra]
 81132: ae 4b 98 00              jump @6426 if a4 >=u t2
      :                          @6409
 81136: 82 5a                    a3 = u64 [s0]
 81138: ca 3b 0c                 a5 = a4 * t1
 81141: c8 2c 0c                 a5 = a5 + t0
 81144: 82 cb 10                 a4 = u64 [a5 + 0x10]
 81147: ae ba 8a 00              jump @6427 if a3 >=u a4
      :                          @6410
 81151: 82 cb 08                 a4 = u64 [a5 + 0x8]
 81154: 97 aa 03                 a3 = a3 << 0x3
 81157: c8 ba 0a                 a3 = a3 + a4
 81160: 82 aa                    a3 = u64 [a3]
 81162: 82 6b                    a4 = u64 [s1]
 81164: ae ba c9                 jump @6406 if a3 >=u a4
      :                          @6411
 81167: 7b 6a                    u64 [s1] = a3
 81169: 28 c4                    jump @6406
      :                          @6412
 81171: 54 26 00 20 0d           jump @6415 if s1 <=u 8192
      :                          @6413
 81176: 54 36 00 00 01 3a        jump @6420 if s1 <=u 65536
      :                          @6414
 81182: 28 55                    jump @6425
      :                          @6415
 81184: 33 07 c0 22 03           a0 = 0x322c0
 81189: 95 77 00 00 01           a0 = a0 + 0x10000
 81194: 82 12 08                 t0 = u64 [sp + 0x8]
 81197: 82 1c 30                 a5 = u64 [sp + 0x30]
 81200: 01                       fallthrough
      :                          @6416
 81201: 82 78                    a1 = u64 [a0]
 81203: c9 87 09                 a2 = a0 - a1
 81206: ab c9 1c                 jump @6420 if a2 != a5
      :                          @6417
 81209: c9 28 09                 a2 = a1 - t0
 81212: 01                       fallthrough
      :                          @6418
 81213: 82 7a                    a3 = u64 [a0]
 81215: ab 8a f2                 jump @6416 if a3 != a1
      :                          @6419
 81218: 7b 79                    u64 [a0] = a2
 81220: 33 0b                    a4 = 0
 81222: 33 07 c0 22 03           a0 = 0x322c0
 81227: 95 77 00 00 01           a0 = a0 + 0x10000
 81232: 28 0d                    jump @6421
      :                          @6420
 81234: 33 07 c0 22 03           a0 = 0x322c0
 81239: 95 77 00 00 01           a0 = a0 + 0x10000
 81244: 01                       fallthrough
      :                          @6421
 81245: 82 78                    a1 = u64 [a0]
 81247: c9 87 09                 a2 = a0 - a1
 81250: ab 59 11                 jump @6425 if a2 != s0
      :                          @6422
 81253: c9 68 09                 a2 = a1 - s1
 81256: 01                       fallthrough
      :                          @6423
 81257: 82 7a                    a3 = u64 [a0]
 81259: ab 8a f2                 jump @6421 if a3 != a1
      :                          @6424
 81262: 7b 79                    u64 [a0] = a2
 81264: 33 0b                    a4 = 0
 81266: 01                       fallthrough
      :                          @6425
 81267: 82 17 40                 a0 = u64 [sp + 0x40]
 81270: 82 10 60                 ra = u64 [sp + 0x60]
 81273: 82 15 58                 s0 = u64 [sp + 0x58]
 81276: 82 16 50                 s1 = u64 [sp + 0x50]
 81279: 95 11 68                 sp = sp + 0x68
 81282: 32 00                    ret
      :                          @6426
 81284: 00                       trap
      :                          @6427
 81285: 00                       trap
      :                          @6428
 81286: 00                       trap
      :                          @6429
 81287: 00                       trap
      :                          @6430
 81288: 00                       trap
      :                          @6431
 81289: 00                       trap
      :                          @6432
 81290: 00                       trap
      :                          @6433
 81291: 00                       trap
      :                          @6434
 81292: 00                       trap
      :                          @6435
 81293: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 81296: 7b 10 20                 u64 [sp + 0x20] = ra
 81299: 7b 15 18                 u64 [sp + 0x18] = s0
 81302: 7b 16 10                 u64 [sp + 0x10] = s1
 81305: 64 95                    s0 = a2
 81307: 7b 17 08                 u64 [sp + 0x8] = a0
 81310: 51 09 61                 jump @6443 if a2 == 0
      :                          @6436
 81313: 98 57 3b                 a0 = s0 >> 0x3b
 81316: 52 07 b4 00              jump @6450 if a0 != 0
      :                          @6437
 81320: 7b 15                    u64 [sp] = s0
 81322: 97 59 04                 a2 = s0 << 0x4
 81325: 88 72 01                 t0 = a0 <u 0x1
 81328: 97 22 03                 t0 = t0 << 0x3
 81331: 33 04 c0 22 03           t2 = 0x322c0
 81336: 33 03 00 00 01           t1 = 0x10000
 81341: c8 34 00                 ra = t2 + t1
 81344: 01                       fallthrough
      :                          @6438
 81345: 82 05                    s0 = u64 [ra]
 81347: c8 95 06                 s1 = s0 + a2
 81350: ac 56 91 00              jump @6449 if s1 <u s0
      :                          @6439
 81354: c8 26 07                 a0 = s1 + t0
 81357: d8 67 0b                 a4 = a0 <u s1
 81360: d8 73 07                 a0 = t1 <u a0
 81363: d4 b7 07                 a0 = a0 | a4
 81366: 52 07 81 00              jump @6449 if a0 != 0
      :                          @6440
 81370: c9 64 07                 a0 = t2 - s1
 81373: c8 37 07                 a0 = a0 + t1
 81376: 84 7b 07                 a4 = a0 & 0x7
 81379: c8 b6 06                 s1 = s1 + a4
 81382: 01                       fallthrough
      :                          @6441
 81383: 82 0a                    a3 = u64 [ra]
 81385: ab 5a d8                 jump @6438 if a3 != s0
      :                          @6442
 81388: 7b 06                    u64 [ra] = s1
 81390: 33 0c                    a5 = 0
 81392: c9 b7 06                 s1 = a0 - a4
 81395: 82 15                    s0 = u64 [sp]
 81397: 64 67                    a0 = s1
 81399: 33 00 da 03              ra = 0x3da
 81403: 28 31 cb 01              jump @13621
      :                          @6443
 81407: 33 06 08                 s1 = 0x8
 81410: 33 07 08                 a0 = 0x8
 81413: 50 20 da 03 27 cb 01     ra = 986, jump @13621
      :                          @6444 [@dyn 493]
 81420: 68 57                    a0 = clz s0
 81422: 9a 7a 40                 a3 = 0x40 - a0
 81425: 64 67                    a0 = s1
 81427: 64 58                    a1 = s0
 81429: 33 09                    a2 = 0
 81431: 50 20 dc 03 9a 02 ff     ra = 988, jump @1220
      :                          @6445 [@dyn 494]
 81438: 51 05 1a                 jump @6448 if s0 == 0
      :                          @6446
 81441: 64 57                    a0 = s0
 81443: 64 68                    a1 = s1
 81445: 64 69                    a2 = s1
 81447: 01                       fallthrough
      :                          @6447
 81448: 82 9a                    a3 = u64 [a2]
 81450: 7b 8a                    u64 [a1] = a3
 81452: 95 99 10                 a2 = a2 + 0x10
 81455: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 81458: 95 88 08                 a1 = a1 + 0x8
 81461: 52 07 f3                 jump @6447 if a0 != 0
      :                          @6448
 81464: 97 57 04                 a0 = s0 << 0x4
 81467: 98 77 03                 a0 = a0 >> 0x3
 81470: 82 18 08                 a1 = u64 [sp + 0x8]
 81473: 7b 87                    u64 [a1] = a0
 81475: 7b 86 08                 u64 [a1 + 0x8] = s1
 81478: 7b 85 10                 u64 [a1 + 0x10] = s0
 81481: 82 10 20                 ra = u64 [sp + 0x20]
 81484: 82 15 18                 s0 = u64 [sp + 0x18]
 81487: 82 16 10                 s1 = u64 [sp + 0x10]
 81490: 95 11 28                 sp = sp + 0x28
 81493: 32 00                    ret
      :                          @6449
 81495: 00                       trap
      :                          @6450
 81496: 00                       trap
      :                          @6451
 81497: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 81500: 7b 10 38                 u64 [sp + 0x38] = ra
 81503: 7b 15 30                 u64 [sp + 0x30] = s0
 81506: 7b 16 28                 u64 [sp + 0x28] = s1
 81509: 84 89 3f                 a2 = a1 & 0x3f
 81512: 7b 19 08                 u64 [sp + 0x8] = a2
 81515: 51 09 8c 00              jump @6465 if a2 == 0
      :                          @6452
 81519: 33 09                    a2 = 0
 81521: 33 06 01                 s1 = 0x1
 81524: 33 0a 18                 a3 = 0x18
 81527: 28 1f                    jump @6454
      :                          @6453
 81529: 82 1c 10                 a5 = u64 [sp + 0x10]
 81532: 84 cc 01                 a5 = a5 & 0x1
 81535: 9a b9                    a2 = -a4
 81537: db cb 09                 a2 = a4 if a5 != 0
 81540: 82 1b 08                 a4 = u64 [sp + 0x8]
 81543: 82 16 18                 s1 = u64 [sp + 0x18]
 81546: d0 b6 0b                 a4 = s1 >> a4
 81549: 82 1c 20                 a5 = u64 [sp + 0x20]
 81552: c8 c9 09                 a2 = a2 + a5
 81555: 52 0b 64                 jump @6465 if a4 != 0
      :                          @6454
 81558: 7b 19 20                 u64 [sp + 0x20] = a2
 81561: 33 0b                    a4 = 0
 81563: 33 02                    t0 = 0
 81565: 95 69 01                 a2 = s1 + 0x1
 81568: 7b 19 18                 u64 [sp + 0x18] = a2
 81571: 66 69                    a2 = cpop s1
 81573: 7b 19 10                 u64 [sp + 0x10] = a2
 81576: 33 0c 09                 a5 = 0x9
 81579: 28 14                    jump @6458
      :                          @6455
 81581: 95 bb 01                 a4 = a4 + 0x1
 81584: 55 15 09 c9              jump @6453 if s0 >=u 9
      :                          @6456
 81588: 33 09 09                 a2 = 0x9
 81591: e4 92 0c                 a5 = maxu(t0, a2)
 81594: 28 05                    jump @6458
      :                          @6457
 81596: aa c5 bd                 jump @6453 if s0 == a5
      :                          @6458
 81599: 33 03                    t1 = 0
 81601: 64 25                    s0 = t0
 81603: 95 22 01                 t0 = t0 + 0x1
 81606: 28 08                    jump @6460
      :                          @6459
 81608: 95 33 01                 t1 = t1 + 0x1
 81611: aa 83 e2                 jump @6455 if t1 == a1
      :                          @6460
 81614: d0 36 09                 a2 = s1 >> t1
 81617: 84 99 01                 a2 = a2 & 0x1
 81620: 51 09 f4                 jump @6459 if a2 == 0
      :                          @6461
 81623: ca a3 09                 a2 = t1 * a3
 81626: c8 79 09                 a2 = a2 + a0
 81629: 82 94 10                 t2 = u64 [a2 + 0x10]
 81632: 82 90 08                 ra = u64 [a2 + 0x8]
 81635: 97 44 03                 t2 = t2 << 0x3
 81638: 01                       fallthrough
      :                          @6462
 81639: 51 04 d5                 jump @6457 if t2 == 0
      :                          @6463
 81642: 82 09                    a2 = u64 [ra]
 81644: 95 00 08                 ra = ra + 0x8
 81647: 95 44 f8                 t2 = t2 + 0xfffffffffffffff8
 81650: ab 59 f5                 jump @6462 if a2 != s0
      :                          @6464
 81653: 28 d3                    jump @6459
      :                          @6465
 81655: 64 97                    a0 = a2
 81657: 82 10 38                 ra = u64 [sp + 0x38]
 81660: 82 15 30                 s0 = u64 [sp + 0x30]
 81663: 82 16 28                 s1 = u64 [sp + 0x28]
 81666: 95 11 40                 sp = sp + 0x40
 81669: 32 00                    ret
      :                          @6466
 81671: ca c9 09                 a2 = a2 * a5
 81674: 95 00 01                 ra = ra + 0x1
 81677: c8 94 04                 t2 = t2 + a2
 81680: aa 70 47                 jump @6475 if ra == a0
      :                          @6467
 81683: 64 09                    a2 = ra
 81685: 64 7c                    a5 = a0
 81687: 01                       fallthrough
      :                          @6468
 81688: 64 cb                    a4 = a5
 81690: cd c9 0c                 a5 = a2 %u a5
 81693: 64 b9                    a2 = a4
 81695: 52 0c f9                 jump @6468 if a5 != 0
      :                          @6469
 81698: 83 bc                    i32 a5 = a4 + 0
 81700: 51 0c 27                 jump @6474 if a5 == 0
      :                          @6470
 81703: 64 89                    a2 = a1
 81705: aa 2c de                 jump @6466 if a5 == t0
      :                          @6471
 81708: 33 0c 01                 a5 = 0x1
 81711: 64 89                    a2 = a1
 81713: 01                       fallthrough
      :                          @6472
 81714: 83 b5                    i32 s0 = a4 + 0
 81716: 84 b6 01                 s1 = a4 & 0x1
 81719: 33 0a 01                 a3 = 0x1
 81722: db 69 0a                 a3 = a2 if s1 != 0
 81725: ca ca 0c                 a5 = a3 * a5
 81728: 8b bb 01                 i32 a4 = a4 >> 0x1
 81731: ca 99 09                 a2 = a2 * a2
 81734: ac 53 ec                 jump @6472 if t1 <u s0
      :                          @6473
 81737: 28 be                    jump @6466
      :                          @6474
 81739: 33 09 01                 a2 = 0x1
 81742: c8 90 00                 ra = ra + a2
 81745: c8 94 04                 t2 = t2 + a2
 81748: ab 70 bf                 jump @6467 if ra != a0
      :                          @6475
 81751: cb 74 07                 a0 = t2 /u a0
 81754: 82 10 18                 ra = u64 [sp + 0x18]
 81757: 82 15 10                 s0 = u64 [sp + 0x10]
 81760: 82 16 08                 s1 = u64 [sp + 0x8]
 81763: 95 11 20                 sp = sp + 0x20
 81766: 32 00                    ret
      :                          @6476
 81768: 82 cb                    a4 = u64 [a5]
 81770: c8 3b 09                 a2 = a4 + t1
 81773: ac b9 0b 01              jump @6500 if a2 <u a4
      :                          @6477
 81777: 95 95 08                 s0 = a2 + 0x8
 81780: d8 95 06                 s1 = s0 <u a2
 81783: d8 54 05                 s0 = t2 <u s0
 81786: d4 65 05                 s0 = s0 | s1
 81789: 52 05 fb 00              jump @6500 if s0 != 0
      :                          @6478
 81793: c9 90 05                 s0 = ra - a2
 81796: c8 45 05                 s0 = s0 + t2
 81799: 84 56 07                 s1 = s0 & 0x7
 81802: c8 69 09                 a2 = a2 + s1
 81805: 01                       fallthrough
      :                          @6479
 81806: 82 ca                    a3 = u64 [a5]
 81808: ab ba d8                 jump @6476 if a3 != a4
      :                          @6480
 81811: 7b c9                    u64 [a5] = a2
 81813: 33 02                    t0 = 0
 81815: 33 0b                    a4 = 0
 81817: c9 65 09                 a2 = s0 - s1
 81820: 33 03 01                 t1 = 0x1
 81823: 28 23                    jump @6484
      :                          @6481
 81825: 64 bc                    a5 = a4
 81827: ca bc 0c                 a5 = a5 * a4
 81830: 28 06                    jump @6483
      :                          @6482
 81832: ca bc 0c                 a5 = a5 * a4
 81835: 01                       fallthrough
      :                          @6483
 81836: 95 b6 01                 s1 = a4 + 0x1
 81839: ca aa 0a                 a3 = a3 * a3
 81842: ca ca 0a                 a3 = a3 * a5
 81845: 97 bb 03                 a4 = a4 << 0x3
 81848: c8 9b 0b                 a4 = a4 + a2
 81851: 7b ba                    u64 [a4] = a3
 81853: 64 6b                    a4 = s1
 81855: aa 86 55                 jump @6494 if s1 == a1
      :                          @6484
 81858: 33 0a 01                 a3 = 0x1
 81861: 33 0c 01                 a5 = 0x1
 81864: 51 0b e4                 jump @6483 if a4 == 0
      :                          @6485
 81867: 64 8a                    a3 = a1
 81869: 64 bc                    a5 = a4
 81871: aa 3b d9                 jump @6482 if a4 == t1
      :                          @6486
 81874: 33 0a 01                 a3 = 0x1
 81877: 64 8c                    a5 = a1
 81879: 33 06 01                 s1 = 0x1
 81882: 01                       fallthrough
      :                          @6487
 81883: 95 65 01                 s0 = s1 + 0x1
 81886: ca ac 0a                 a3 = a5 * a3
 81889: cb 6a 0a                 a3 = a3 /u s1
 81892: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 81895: 64 56                    s1 = s0
 81897: ab 5b f2                 jump @6487 if a4 != s0
      :                          @6488
 81900: c9 b7 0c                 a5 = a0 - a4
 81903: ca ca 0a                 a3 = a3 * a5
 81906: cb ba 0a                 a3 = a3 /u a4
 81909: 51 0b 1a                 jump @6493 if a4 == 0
      :                          @6489
 81912: aa 3b a9                 jump @6481 if a4 == t1
      :                          @6490
 81915: 33 0c 01                 a5 = 0x1
 81918: 33 06 01                 s1 = 0x1
 81921: 01                       fallthrough
      :                          @6491
 81922: 95 65 01                 s0 = s1 + 0x1
 81925: ca c6 0c                 a5 = s1 * a5
 81928: 64 56                    s1 = s0
 81930: ab 5b f8                 jump @6491 if a4 != s0
      :                          @6492
 81933: 28 9b                    jump @6482
      :                          @6493
 81935: 33 0c 01                 a5 = 0x1
 81938: 28 9a                    jump @6483
      :                          @6494
 81940: 33 0a 01                 a3 = 0x1
 81943: 33 0b 01                 a4 = 0x1
 81946: aa a8 35                 jump @6499 if a1 == a3
      :                          @6495
 81949: 33 03 01                 t1 = 0x1
 81952: 64 8b                    a4 = a1
 81954: 33 0c 01                 a5 = 0x1
 81957: 33 0a 01                 a3 = 0x1
 81960: 01                       fallthrough
      :                          @6496
 81961: 95 a6 01                 s1 = a3 + 0x1
 81964: ca cb 0c                 a5 = a4 * a5
 81967: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 81970: cb ac 0c                 a5 = a5 /u a3
 81973: 64 6a                    a3 = s1
 81975: ab 3b f2                 jump @6496 if a4 != t1
      :                          @6497
 81978: cb 8c 0a                 a3 = a5 /u a1
 81981: 33 0b 01                 a4 = 0x1
 81984: 33 0c 01                 a5 = 0x1
 81987: 01                       fallthrough
      :                          @6498
 81988: 95 c6 01                 s1 = a5 + 0x1
 81991: ca bc 0b                 a4 = a5 * a4
 81994: 64 6c                    a5 = s1
 81996: ab 68 f8                 jump @6498 if a1 != s1
      :                          @6499
 81999: ca 8b 0b                 a4 = a4 * a1
 82002: ca aa 0a                 a3 = a3 * a3
 82005: ca ba 0a                 a3 = a3 * a4
 82008: 97 88 03                 a1 = a1 << 0x3
 82011: c8 98 08                 a1 = a1 + a2
 82014: 7b 8a                    u64 [a1] = a3
 82016: 82 18                    a1 = u64 [sp]
 82018: 7b 87                    u64 [a1] = a0
 82020: 7b 89 08                 u64 [a1 + 0x8] = a2
 82023: 7b 87 10                 u64 [a1 + 0x10] = a0
 82026: 82 10 18                 ra = u64 [sp + 0x18]
 82029: 82 15 10                 s0 = u64 [sp + 0x10]
 82032: 82 16 08                 s1 = u64 [sp + 0x8]
 82035: 95 11 20                 sp = sp + 0x20
 82038: 32 00                    ret
      :                          @6500
 82040: 00                       trap
      :                          @6501
 82041: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 82044: 7b 10 28                 u64 [sp + 0x28] = ra
 82047: 7b 15 20                 u64 [sp + 0x20] = s0
 82050: 7b 16 18                 u64 [sp + 0x18] = s1
 82053: 8b 89 06                 i32 a2 = a1 >> 0x6
 82056: 97 9a 06                 a3 = a2 << 0x6
 82059: 52 0a 8d 00              jump @6514 if a3 != 0
      :                          @6502
 82063: 64 79                    a2 = a0
 82065: 84 87 3f                 a0 = a1 & 0x3f
 82068: 7b 17                    u64 [sp] = a0
 82070: 33 03                    t1 = 0
 82072: 51 07 70                 jump @6513 if a0 == 0
      :                          @6503
 82075: 95 90 10                 ra = a2 + 0x10
 82078: 33 0b 01                 a4 = 0x1
 82081: 28 1b                    jump @6505
      :                          @6504
 82083: 82 17 08                 a0 = u64 [sp + 0x8]
 82086: 84 77 01                 a0 = a0 & 0x1
 82089: 9a c9                    a2 = -a5
 82091: db 7c 09                 a2 = a5 if a0 != 0
 82094: 82 17                    a0 = u64 [sp]
 82096: 82 1b 10                 a4 = u64 [sp + 0x10]
 82099: d0 7b 07                 a0 = a4 >> a0
 82102: c8 93 03                 t1 = t1 + a2
 82105: 52 07 4f                 jump @6513 if a0 != 0
      :                          @6505
 82108: 33 07                    a0 = 0
 82110: 95 b9 01                 a2 = a4 + 0x1
 82113: 7b 19 10                 u64 [sp + 0x10] = a2
 82116: 66 b9                    a2 = cpop a4
 82118: 7b 19 08                 u64 [sp + 0x8] = a2
 82121: 33 0c 01                 a5 = 0x1
 82124: 28 0a                    jump @6507
      :                          @6506
 82126: ca c5 0c                 a5 = s0 * a5
 82129: 64 67                    a0 = s1
 82131: aa 86 d0                 jump @6504 if s1 == a1
      :                          @6507
 82134: 33 05                    s0 = 0
 82136: 33 02                    t0 = 0
 82138: 95 76 01                 s1 = a0 + 0x1
 82141: 64 04                    t2 = ra
 82143: 28 1a                    jump @6510
      :                          @6508
 82145: 82 4a f8                 a3 = u64 [t2 + 0xfffffffffffffff8]
 82148: 97 79 03                 a2 = a0 << 0x3
 82151: c8 a9 09                 a2 = a2 + a3
 82154: 82 99                    a2 = u64 [a2]
 82156: c8 95 05                 s0 = s0 + a2
 82159: 01                       fallthrough
      :                          @6509
 82160: 95 22 01                 t0 = t0 + 0x1
 82163: 95 44 18                 t2 = t2 + 0x18
 82166: aa 28 d8                 jump @6506 if a1 == t0
      :                          @6510
 82169: d0 2b 0a                 a3 = a4 >> t0
 82172: 84 aa 01                 a3 = a3 & 0x1
 82175: 51 0a f1                 jump @6509 if a3 == 0
      :                          @6511
 82178: 82 4a                    a3 = u64 [t2]
 82180: ac a7 dd                 jump @6508 if a0 <u a3
      :                          @6512
 82183: 00                       trap
      :                          @6513
 82184: 64 37                    a0 = t1
 82186: 82 10 28                 ra = u64 [sp + 0x28]
 82189: 82 15 20                 s0 = u64 [sp + 0x20]
 82192: 82 16 18                 s1 = u64 [sp + 0x18]
 82195: 95 11 30                 sp = sp + 0x30
 82198: 32 00                    ret
      :                          @6514
 82200: 00                       trap
      :                          @6515
 82201: 51 07 4f                 jump @6526 if a0 == 0
      :                          @6516
 82204: 33 03                    t1 = 0
 82206: ca 78 02                 t0 = a1 * a0
 82209: 95 7b ff                 a4 = a0 + 0xffffffffffffffff
 82212: 33 09 01                 a2 = 0x1
 82215: 64 8a                    a3 = a1
 82217: 28 05                    jump @6518
      :                          @6517
 82219: 64 8a                    a3 = a1
 82221: 01                       fallthrough
      :                          @6518
 82222: c8 ab 0c                 a5 = a4 + a3
 82225: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 82228: ca c9 09                 a2 = a2 * a5
 82231: 52 0a f7                 jump @6518 if a3 != 0
      :                          @6519
 82234: 95 33 01                 t1 = t1 + 0x1
 82237: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 82240: ab 73 eb                 jump @6517 if t1 != a0
      :                          @6520
 82243: 51 02 2c                 jump @6527 if t0 == 0
      :                          @6521
 82246: 33 08 01                 a1 = 0x1
 82249: 64 27                    a0 = t0
 82251: aa 82 12                 jump @6524 if t0 == a1
      :                          @6522
 82254: 33 07 01                 a0 = 0x1
 82257: 01                       fallthrough
      :                          @6523
 82258: 95 8a 01                 a3 = a1 + 0x1
 82261: ca 78 07                 a0 = a1 * a0
 82264: 64 a8                    a1 = a3
 82266: ab a2 f8                 jump @6523 if t0 != a3
      :                          @6524
 82269: ca 27 07                 a0 = a0 * t0
 82272: 51 09 15                 jump @6528 if a2 == 0
      :                          @6525
 82275: cb 97 07                 a0 = a0 /u a2
 82278: 32 00                    ret
      :                          @6526
 82280: 33 07 01                 a0 = 0x1
 82283: 28 e7 d5 00              jump @10164
      :                          @6527
 82287: 33 07 01                 a0 = 0x1
 82290: 52 09 f1                 jump @6525 if a2 != 0
      :                          @6528
 82293: 00                       trap
      :                          @6529
 82294: 51 07 63                 jump @6535 if a0 == 0
      :                          @6530
 82297: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 82300: 7b 15 08                 u64 [sp + 0x8] = s0
 82303: 7b 16                    u64 [sp] = s1
 82305: 33 02                    t0 = 0
 82307: 33 06                    s1 = 0
 82309: 33 03 01                 t1 = 0x1
 82312: 33 0c 01                 a5 = 0x1
 82315: 33 09 01                 a2 = 0x1
 82318: 33 0a 01                 a3 = 0x1
 82321: 28 22                    jump @6532
      :                          @6531
 82323: 64 c8                    a1 = a5
 82325: ca cc 0c                 a5 = a5 * a5
 82328: ca a9 0b                 a4 = a2 * a3
 82331: c8 bc 0c                 a5 = a5 + a4
 82334: c8 68 08                 a1 = a1 + s1
 82337: ca 98 09                 a2 = a1 * a2
 82340: ca a8 0a                 a3 = a1 * a3
 82343: ca 66 06                 s1 = s1 * s1
 82346: 98 77 01                 a0 = a0 >> 0x1
 82349: c8 b6 06                 s1 = s1 + a4
 82352: 51 07 1d                 jump @6534 if a0 == 0
      :                          @6532
 82355: 84 78 01                 a1 = a0 & 0x1
 82358: 51 08 dd                 jump @6531 if a1 == 0
      :                          @6533
 82361: ca c3 04                 t2 = t1 * a5
 82364: ca a2 05                 s0 = t0 * a3
 82367: ca 93 08                 a1 = t1 * a2
 82370: c8 54 03                 t1 = t2 + s0
 82373: ca 62 02                 t0 = t0 * s1
 82376: c8 82 02                 t0 = t0 + a1
 82379: 28 c8                    jump @6531
      :                          @6534
 82381: 82 15 08                 s0 = u64 [sp + 0x8]
 82384: 82 16                    s1 = u64 [sp]
 82386: 95 11 10                 sp = sp + 0x10
 82389: 64 27                    a0 = t0
 82391: 32 00                    ret
      :                          @6535
 82393: 33 07                    a0 = 0
 82395: 28 e4 b3 00              jump @9649
      :                          @6536
 82399: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 82402: 7b 10 40                 u64 [sp + 0x40] = ra
 82405: 7b 15 38                 u64 [sp + 0x38] = s0
 82408: 7b 16 30                 u64 [sp + 0x30] = s1
 82411: 95 79 01                 a2 = a0 + 0x1
 82414: 51 09 70 01              jump @6565 if a2 == 0
      :                          @6537
 82418: 64 85                    s0 = a1
 82420: 98 98 3c                 a1 = a2 >> 0x3c
 82423: 52 08 68 01              jump @6566 if a1 != 0
      :                          @6538
 82427: 7b 17 08                 u64 [sp + 0x8] = a0
 82430: 88 82 01                 t0 = a1 <u 0x1
 82433: 7b 19 28                 u64 [sp + 0x28] = a2
 82436: 97 99 03                 a2 = a2 << 0x3
 82439: 97 22 03                 t0 = t0 << 0x3
 82442: 33 04 c0 22 03           t2 = 0x322c0
 82447: 33 03 00 00 01           t1 = 0x10000
 82452: c8 34 00                 ra = t2 + t1
 82455: 01                       fallthrough
      :                          @6539
 82456: 82 0b                    a4 = u64 [ra]
 82458: c8 9b 0c                 a5 = a4 + a2
 82461: ac bc 40 01              jump @6564 if a5 <u a4
      :                          @6540
 82465: c8 2c 07                 a0 = a5 + t0
 82468: d8 c7 06                 s1 = a0 <u a5
 82471: d8 73 07                 a0 = t1 <u a0
 82474: d4 67 07                 a0 = a0 | s1
 82477: 52 07 30 01              jump @6564 if a0 != 0
      :                          @6541
 82481: c9 c4 06                 s1 = t2 - a5
 82484: c8 36 0a                 a3 = s1 + t1
 82487: 84 a6 07                 s1 = a3 & 0x7
 82490: c8 6c 0c                 a5 = a5 + s1
 82493: 01                       fallthrough
      :                          @6542
 82494: 82 07                    a0 = u64 [ra]
 82496: ab b7 d8                 jump @6539 if a0 != a4
      :                          @6543
 82499: 7b 0c                    u64 [ra] = a5
 82501: c9 6a 06                 s1 = a3 - s1
 82504: 64 67                    a0 = s1
 82506: 33 08                    a1 = 0
 82508: 7b 19                    u64 [sp] = a2
 82510: 50 20 de 03 0b c9 01     ra = 990, jump @13675
      :                          @6544 [@dyn 495]
 82517: 33 07 01                 a0 = 0x1
 82520: 64 64                    t2 = s1
 82522: 7b 67                    u64 [s1] = a0
 82524: 82 19 08                 a2 = u64 [sp + 0x8]
 82527: 51 09 cb 00              jump @6556 if a2 == 0
      :                          @6545
 82531: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
 82534: 7b 17 20                 u64 [sp + 0x20] = a0
 82537: 33 07 01                 a0 = 0x1
 82540: 82 1c 28                 a5 = u64 [sp + 0x28]
 82543: 33 02 01                 t0 = 0x1
 82546: 28 1a                    jump @6547
      :                          @6546
 82548: 82 19 08                 a2 = u64 [sp + 0x8]
 82551: 82 1a 18                 a3 = u64 [sp + 0x18]
 82554: d8 a9 07                 a0 = a2 <u a3
 82557: 85 77 01                 a0 = a0 ^ 0x1
 82560: 82 18 10                 a1 = u64 [sp + 0x10]
 82563: d2 78 08                 a1 = a1 & a0
 82566: 64 a7                    a0 = a3
 82568: 51 08 93 00              jump @6555 if a1 == 0
      :                          @6547
 82572: ae c7 d0 00              jump @6563 if a0 >=u a5
      :                          @6548
 82576: d8 97 08                 a1 = a0 <u a2
 82579: 7b 18 10                 u64 [sp + 0x10] = a1
 82582: c8 78 08                 a1 = a1 + a0
 82585: 7b 18 18                 u64 [sp + 0x18] = a1
 82588: 97 76 03                 s1 = a0 << 0x3
 82591: c8 46 06                 s1 = s1 + t2
 82594: 82 6b                    a4 = u64 [s1]
 82596: 33 08 01                 a1 = 0x1
 82599: 33 03 02                 t1 = 0x2
 82602: 33 0a 05                 a3 = 0x5
 82605: 33 09 02                 a2 = 0x2
 82608: 28 1e                    jump @6551
      :                          @6549
 82610: 82 1c 28                 a5 = u64 [sp + 0x28]
 82613: 01                       fallthrough
      :                          @6550
 82614: ca 3a 08                 a1 = a3 * t1
 82617: 98 88 01                 a1 = a1 >> 0x1
 82620: 95 a9 02                 a2 = a3 + 0x2
 82623: ca 39 09                 a2 = a2 * t1
 82626: 98 99 01                 a2 = a2 >> 0x1
 82629: 95 33 01                 t1 = t1 + 0x1
 82632: 95 aa 03                 a3 = a3 + 0x3
 82635: ac 87 a9                 jump @6546 if a0 <u a1
      :                          @6551
 82638: c9 87 08                 a1 = a0 - a1
 82641: ae c8 8a 00              jump @6562 if a1 >=u a5
      :                          @6552
 82645: 97 88 03                 a1 = a1 << 0x3
 82648: c8 48 08                 a1 = a1 + t2
 82651: 82 88                    a1 = u64 [a1]
 82653: 83 3c ff                 i32 a5 = t1 + 0xffffffffffffffff
 82656: 84 cc 01                 a5 = a5 & 0x1
 82659: 82 10 20                 ra = u64 [sp + 0x20]
 82662: db c2 00                 ra = t0 if a5 != 0
 82665: ca 08 08                 a1 = a1 * ra
 82668: cd 58 08                 a1 = a1 %u s0
 82671: c8 b8 08                 a1 = a1 + a4
 82674: cd 58 0b                 a4 = a1 %u s0
 82677: 7b 6b                    u64 [s1] = a4
 82679: ac 97 bb                 jump @6549 if a0 <u a2
      :                          @6553
 82682: c9 97 08                 a1 = a0 - a2
 82685: 82 1c 28                 a5 = u64 [sp + 0x28]
 82688: ae c8 5b                 jump @6562 if a1 >=u a5
      :                          @6554
 82691: 97 88 03                 a1 = a1 << 0x3
 82694: c8 48 08                 a1 = a1 + t2
 82697: 82 88                    a1 = u64 [a1]
 82699: ca 08 08                 a1 = a1 * ra
 82702: cd 58 08                 a1 = a1 %u s0
 82705: c8 b8 08                 a1 = a1 + a4
 82708: cd 58 0b                 a4 = a1 %u s0
 82711: 7b 6b                    u64 [s1] = a4
 82713: 28 9d                    jump @6550
      :                          @6555
 82715: 97 97 03                 a0 = a2 << 0x3
 82718: c8 47 07                 a0 = a0 + t2
 82721: 82 77                    a0 = u64 [a0]
 82723: 33 08 00 20              a1 = 0x2000
 82727: ac c8 26                 jump @6561 if a1 <u a5
      :                          @6556
 82730: 33 08 c0 22 03           a1 = 0x322c0
 82735: 95 88 00 00 01           a1 = a1 + 0x10000
 82740: 82 16                    s1 = u64 [sp]
 82742: 01                       fallthrough
      :                          @6557
 82743: 82 89                    a2 = u64 [a1]
 82745: c9 98 0a                 a3 = a1 - a2
 82748: ab 4a 11                 jump @6561 if a3 != t2
      :                          @6558
 82751: c9 69 0a                 a3 = a2 - s1
 82754: 01                       fallthrough
      :                          @6559
 82755: 82 8b                    a4 = u64 [a1]
 82757: ab 9b f2                 jump @6557 if a4 != a2
      :                          @6560
 82760: 7b 8a                    u64 [a1] = a3
 82762: 33 0c                    a5 = 0
 82764: 01                       fallthrough
      :                          @6561
 82765: 82 10 40                 ra = u64 [sp + 0x40]
 82768: 82 15 38                 s0 = u64 [sp + 0x38]
 82771: 82 16 30                 s1 = u64 [sp + 0x30]
 82774: 95 11 48                 sp = sp + 0x48
 82777: 32 00                    ret
      :                          @6562
 82779: 00                       trap
      :                          @6563
 82780: 00                       trap
      :                          @6564
 82781: 00                       trap
      :                          @6565
 82782: 00                       trap
      :                          @6566
 82783: 00                       trap
      :                          @6567
 82784: 51 18 01 b0 d7 00        jump @10204 if a1 == 1
      :                          @6568
 82790: 83 79                    i32 a2 = a0 + 0
 82792: 51 09 39                 jump @6573 if a2 == 0
      :                          @6569
 82795: 33 0b 01                 a4 = 0x1
 82798: 64 8a                    a3 = a1
 82800: aa b9 23                 jump @6572 if a2 == a4
      :                          @6570
 82803: 33 02 03                 t0 = 0x3
 82806: 64 8a                    a3 = a1
 82808: 33 09 01                 a2 = 0x1
 82811: 01                       fallthrough
      :                          @6571
 82812: 83 73                    i32 t1 = a0 + 0
 82814: 84 7b 01                 a4 = a0 & 0x1
 82817: 33 0c 01                 a5 = 0x1
 82820: db ba 0c                 a5 = a3 if a4 != 0
 82823: ca 9c 09                 a2 = a5 * a2
 82826: 8b 77 01                 i32 a0 = a0 >> 0x1
 82829: ca aa 0a                 a3 = a3 * a3
 82832: ac 32 ec                 jump @6571 if t0 <u t1
      :                          @6572
 82835: ca 9a 09                 a2 = a3 * a2
 82838: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 82841: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 82844: cb 89 07                 a0 = a2 /u a1
 82847: 32 00                    ret
      :                          @6573
 82849: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 82852: cb 89 07                 a0 = a2 /u a1
 82855: 28 69 d7 00              jump @10204
      :                          @6574
 82859: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 82862: 7b 10 28                 u64 [sp + 0x28] = ra
 82865: 7b 15 20                 u64 [sp + 0x20] = s0
 82868: 7b 16 18                 u64 [sp + 0x18] = s1
 82871: 7b 18 08                 u64 [sp + 0x8] = a1
 82874: 51 07 11                 jump @6577 if a0 == 0
      :                          @6575
 82877: 64 75                    s0 = a0
 82879: 52 15 01 20              jump @6579 if s0 != 1
      :                          @6576
 82883: 82 16 08                 s1 = u64 [sp + 0x8]
 82886: 95 66 01                 s1 = s1 + 0x1
 82889: 28 06                    jump @6578
      :                          @6577
 82891: 33 06 01                 s1 = 0x1
 82894: 01                       fallthrough
      :                          @6578
 82895: 64 67                    a0 = s1
 82897: 82 10 28                 ra = u64 [sp + 0x28]
 82900: 82 15 20                 s0 = u64 [sp + 0x20]
 82903: 82 16 18                 s1 = u64 [sp + 0x18]
 82906: 95 11 30                 sp = sp + 0x30
 82909: 32 00                    ret
      :                          @6579
 82911: 82 17 08                 a0 = u64 [sp + 0x8]
 82914: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 82917: 7b 17                    u64 [sp] = a0
 82919: 51 07 ce 00              jump @6592 if a0 == 0
      :                          @6580
 82923: 33 00 03                 ra = 0x3
 82926: 33 06 01                 s1 = 0x1
 82929: 33 0b 01                 a4 = 0x1
 82932: 28 49                    jump @6585
      :                          @6581
 82934: 33 0a                    a3 = 0
 82936: 33 09 01                 a2 = 0x1
 82939: 01                       fallthrough
      :                          @6582
 82940: 95 97 ff                 a0 = a2 + 0xffffffffffffffff
 82943: d8 79 0b                 a4 = a2 <u a0
 82946: 88 98 01                 a1 = a2 <u 0x1
 82949: c9 8a 08                 a1 = a3 - a1
 82952: d8 8a 0a                 a3 = a3 <u a1
 82955: db 9b 0a                 a3 = a4 if a2 != 0
 82958: 94 a7                    a0 = 0 if a3 != 0
 82960: 94 a8                    a1 = 0 if a3 != 0
 82962: 82 19                    a2 = u64 [sp]
 82964: 50 20 e0 03 b3 c4 01     ra = 992, jump @13617
      :                          @6583 [@dyn 496]
 82971: d6 76 08                 a1 = s1 mulhu a0
 82974: ca 76 06                 s1 = s1 * a0
 82977: 94 86 ff                 s1 = 0xffffffffffffffff if a1 != 0
 82980: 33 00 03                 ra = 0x3
 82983: 82 1b 10                 a4 = u64 [sp + 0x10]
 82986: 01                       fallthrough
      :                          @6584
 82987: d8 5b 07                 a0 = a4 <u s0
 82990: c8 7b 0b                 a4 = a4 + a0
 82993: 85 77 01                 a0 = a0 ^ 0x1
 82996: d8 b5 08                 a1 = s0 <u a4
 82999: d4 87 07                 a0 = a0 | a1
 83002: 52 07 95                 jump @6578 if a0 != 0
      :                          @6585
 83005: cd b5 07                 a0 = s0 %u a4
 83008: 52 07 eb                 jump @6584 if a0 != 0
      :                          @6586
 83011: 83 b7                    i32 a0 = a4 + 0
 83013: 7b 1b 10                 u64 [sp + 0x10] = a4
 83016: 51 07 ae                 jump @6581 if a0 == 0
      :                          @6587
 83019: 52 17 01 0b              jump @6589 if a0 != 1
      :                          @6588
 83023: 33 0a                    a3 = 0
 83025: 82 19 08                 a2 = u64 [sp + 0x8]
 83028: 28 a8                    jump @6582
      :                          @6589
 83030: 64 64                    t2 = s1
 83032: 64 53                    t1 = s0
 83034: 33 09                    a2 = 0
 83036: 33 0a                    a3 = 0
 83038: 33 07 01                 a0 = 0x1
 83041: 82 18 08                 a1 = u64 [sp + 0x8]
 83044: 01                       fallthrough
      :                          @6590
 83045: 84 bc 01                 a5 = a4 & 0x1
 83048: 9a c5                    s0 = -a5
 83050: 83 b2                    i32 t0 = a4 + 0
 83052: 33 06 01                 s1 = 0x1
 83055: db c8 06                 s1 = a1 if a5 != 0
 83058: d2 95 05                 s0 = s0 & a2
 83061: ca a6 0a                 a3 = s1 * a3
 83064: d6 76 0c                 a5 = s1 mulhu a0
 83067: c8 ca 0a                 a3 = a3 + a5
 83070: ca 75 0c                 a5 = s0 * a0
 83073: c8 ca 0a                 a3 = a3 + a5
 83076: ca 76 07                 a0 = s1 * a0
 83079: 8b bb 01                 i32 a4 = a4 >> 0x1
 83082: ca 98 09                 a2 = a1 * a2
 83085: d6 88 0c                 a5 = a1 mulhu a1
 83088: c8 9c 0c                 a5 = a5 + a2
 83091: c8 c9 09                 a2 = a2 + a5
 83094: ca 88 08                 a1 = a1 * a1
 83097: ac 20 cc                 jump @6590 if ra <u t0
      :                          @6591
 83100: d6 87 0b                 a4 = a0 mulhu a1
 83103: ca 97 09                 a2 = a0 * a2
 83106: c8 b9 09                 a2 = a2 + a4
 83109: ca 8a 0a                 a3 = a3 * a1
 83112: c8 9a 0a                 a3 = a3 + a2
 83115: ca 87 09                 a2 = a0 * a1
 83118: 64 35                    s0 = t1
 83120: 64 46                    s1 = t2
 83122: 28 4a ff                 jump @6582
      :                          @6592
 83125: 33 06 01                 s1 = 0x1
 83128: 33 07 ff                 a0 = 0xffffffffffffffff
 83131: 33 08 01                 a1 = 0x1
 83134: 28 15                    jump @6594
      :                          @6593
 83136: d8 58 09                 a2 = a1 <u s0
 83139: c8 98 08                 a1 = a1 + a2
 83142: 85 99 01                 a2 = a2 ^ 0x1
 83145: d8 85 0a                 a3 = s0 <u a1
 83148: d4 a9 09                 a2 = a2 | a3
 83151: 52 09 00 ff              jump @6578 if a2 != 0
      :                          @6594
 83155: cd 85 09                 a2 = s0 %u a1
 83158: 52 09 ea                 jump @6593 if a2 != 0
      :                          @6595
 83161: d6 86 09                 a2 = s1 mulhu a1
 83164: ca 86 06                 s1 = s1 * a1
 83167: db 97 06                 s1 = a0 if a2 != 0
 83170: 28 de                    jump @6593
      :                          @6596
 83172: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 83175: 7b 10 40                 u64 [sp + 0x40] = ra
 83178: 7b 15 38                 u64 [sp + 0x38] = s0
 83181: 7b 16 30                 u64 [sp + 0x30] = s1
 83184: 64 93                    t1 = a2
 83186: 98 9a 3c                 a3 = a2 >> 0x3c
 83189: 97 99 03                 a2 = a2 << 0x3
 83192: 7b 13 28                 u64 [sp + 0x28] = t1
 83195: 7b 17                    u64 [sp] = a0
 83197: 7b 18 18                 u64 [sp + 0x18] = a1
 83200: 7b 1a 20                 u64 [sp + 0x20] = a3
 83203: 51 03 61                 jump @6605 if t1 == 0
      :                          @6597
 83206: 52 0a e8 01              jump @6651 if a3 != 0
      :                          @6598
 83210: 88 a2 01                 t0 = a3 <u 0x1
 83213: 97 22 03                 t0 = t0 << 0x3
 83216: 33 04 c0 22 03           t2 = 0x322c0
 83221: 33 03 00 00 01           t1 = 0x10000
 83226: c8 34 0a                 a3 = t2 + t1
 83229: 01                       fallthrough
      :                          @6599
 83230: 82 ab                    a4 = u64 [a3]
 83232: c8 9b 0c                 a5 = a4 + a2
 83235: ac bc ca 01              jump @6650 if a5 <u a4
      :                          @6600
 83239: c8 2c 07                 a0 = a5 + t0
 83242: d8 c7 05                 s0 = a0 <u a5
 83245: d8 73 07                 a0 = t1 <u a0
 83248: d4 57 07                 a0 = a0 | s0
 83251: 52 07 ba 01              jump @6650 if a0 != 0
      :                          @6601
 83255: c9 c4 05                 s0 = t2 - a5
 83258: c8 35 05                 s0 = s0 + t1
 83261: 84 56 07                 s1 = s0 & 0x7
 83264: c8 6c 0c                 a5 = a5 + s1
 83267: 01                       fallthrough
      :                          @6602
 83268: 82 a7                    a0 = u64 [a3]
 83270: ab b7 d8                 jump @6599 if a0 != a4
      :                          @6603
 83273: 7b ac                    u64 [a3] = a5
 83275: c9 65 06                 s1 = s0 - s1
 83278: 64 67                    a0 = s1
 83280: 33 08                    a1 = 0
 83282: 64 95                    s0 = a2
 83284: 50 20 e2 03 05 c6 01     ra = 994, jump @13675
      :                          @6604 [@dyn 497]
 83291: 64 64                    t2 = s1
 83293: 64 59                    a2 = s0
 83295: 82 13 28                 t1 = u64 [sp + 0x28]
 83298: 28 06                    jump @6606
      :                          @6605
 83300: 33 04 08                 t2 = 0x8
 83303: 01                       fallthrough
      :                          @6606
 83304: 95 30 ff                 ra = t1 + 0xffffffffffffffff
 83307: 33 0b 01                 a4 = 0x1
 83310: 33 02 04                 t0 = 0x4
 83313: 01                       fallthrough
      :                          @6607
 83314: ac b0 69                 jump @6621 if ra <u a4
      :                          @6608
 83317: 64 b7                    a0 = a4
 83319: 33 06 01                 s1 = 0x1
 83322: 64 bc                    a5 = a4
 83324: ae 2b 21                 jump @6612 if a4 >=u t0
      :                          @6609
 83327: 88 cb 02                 a4 = a5 <u 0x2
 83330: 9a 6a                    a3 = -s1
 83332: db b6 0a                 a3 = s1 if a4 != 0
 83335: ae 37 53                 jump @6620 if a0 >=u t1
      :                          @6610
 83338: d8 07 0b                 a4 = a0 <u ra
 83341: c8 7b 0b                 a4 = a4 + a0
 83344: 97 78 03                 a1 = a0 << 0x3
 83347: c8 48 08                 a1 = a1 + t2
 83350: 7b 8a                    u64 [a1] = a3
 83352: ac 07 da                 jump @6607 if a0 <u ra
      :                          @6611
 83355: 28 40                    jump @6621
      :                          @6612
 83357: 33 08 02                 a1 = 0x2
 83360: 33 06 01                 s1 = 0x1
 83363: 64 7b                    a4 = a0
 83365: 28 17                    jump @6615
      :                          @6613
 83367: 64 bc                    a5 = a4
 83369: 01                       fallthrough
      :                          @6614
 83370: 95 8a fe                 a3 = a1 + 0xfffffffffffffffe
 83373: 88 aa 01                 a3 = a3 <u 0x1
 83376: c9 a8 08                 a1 = a1 - a3
 83379: 95 88 02                 a1 = a1 + 0x2
 83382: ca 88 0a                 a3 = a1 * a1
 83385: ac ac c6                 jump @6609 if a5 <u a3
      :                          @6615
 83388: 51 08 2f 01              jump @6648 if a1 == 0
      :                          @6616
 83392: cb 8b 0c                 a5 = a4 /u a1
 83395: ca 8c 05                 s0 = a5 * a1
 83398: ab 5b e1                 jump @6613 if a4 != s0
      :                          @6617
 83401: cd 8c 0b                 a4 = a5 %u a1
 83404: 51 0b 09                 jump @6619 if a4 == 0
      :                          @6618
 83407: 9a 66                    s1 = -s1
 83409: 64 cb                    a4 = a5
 83411: 28 d7                    jump @6614
      :                          @6619
 83413: 33 0a                    a3 = 0
 83415: ac 37 b3                 jump @6610 if a0 <u t1
      :                          @6620
 83418: 00                       trap
      :                          @6621
 83419: 82 17 20                 a0 = u64 [sp + 0x20]
 83422: 52 07 10 01              jump @6651 if a0 != 0
      :                          @6622
 83426: 7b 10 08                 u64 [sp + 0x8] = ra
 83429: 7b 14 10                 u64 [sp + 0x10] = t2
 83432: 88 72 01                 t0 = a0 <u 0x1
 83435: 97 22 03                 t0 = t0 << 0x3
 83438: 33 04 c0 22 03           t2 = 0x322c0
 83443: 33 03 00 00 01           t1 = 0x10000
 83448: c8 34 0a                 a3 = t2 + t1
 83451: 01                       fallthrough
      :                          @6623
 83452: 82 ab                    a4 = u64 [a3]
 83454: c8 9b 0c                 a5 = a4 + a2
 83457: ac bc ec 00              jump @6650 if a5 <u a4
      :                          @6624
 83461: c8 2c 07                 a0 = a5 + t0
 83464: d8 c7 08                 a1 = a0 <u a5
 83467: d8 73 07                 a0 = t1 <u a0
 83470: d4 87 07                 a0 = a0 | a1
 83473: 52 07 dc 00              jump @6650 if a0 != 0
      :                          @6625
 83477: c9 c4 07                 a0 = t2 - a5
 83480: c8 37 07                 a0 = a0 + t1
 83483: 84 76 07                 s1 = a0 & 0x7
 83486: c8 6c 0c                 a5 = a5 + s1
 83489: 01                       fallthrough
      :                          @6626
 83490: 82 a8                    a1 = u64 [a3]
 83492: ab b8 d8                 jump @6623 if a1 != a4
      :                          @6627
 83495: 7b ac                    u64 [a3] = a5
 83497: c9 67 05                 s0 = a0 - s1
 83500: 64 57                    a0 = s0
 83502: 33 08                    a1 = 0
 83504: 7b 19 20                 u64 [sp + 0x20] = a2
 83507: 50 20 e4 03 26 c5 01     ra = 996, jump @13675
      :                          @6628 [@dyn 498]
 83514: 64 54                    t2 = s0
 83516: 33 0a 01                 a3 = 0x1
 83519: 82 18 28                 a1 = u64 [sp + 0x28]
 83522: 82 15 18                 s0 = u64 [sp + 0x18]
 83525: 82 12 10                 t0 = u64 [sp + 0x10]
 83528: 82 13 08                 t1 = u64 [sp + 0x8]
 83531: 01                       fallthrough
      :                          @6629
 83532: ac a3 5a                 jump @6639 if t1 <u a3
      :                          @6630
 83535: 64 a7                    a0 = a3
 83537: 33 0b                    a4 = 0
 83539: d8 3a 0a                 a3 = a3 <u t1
 83542: c8 7a 0a                 a3 = a3 + a0
 83545: 33 06 01                 s1 = 0x1
 83548: 28 2b                    jump @6633
      :                          @6631
 83550: 97 6c 03                 a5 = s1 << 0x3
 83553: c8 2c 0c                 a5 = a5 + t0
 83556: 82 cc                    a5 = u64 [a5]
 83558: 97 99 03                 a2 = a2 << 0x3
 83561: c8 59 09                 a2 = a2 + s0
 83564: 82 99                    a2 = u64 [a2]
 83566: ca c9 09                 a2 = a2 * a5
 83569: c8 9b 0b                 a4 = a4 + a2
 83572: 01                       fallthrough
      :                          @6632
 83573: d8 76 09                 a2 = s1 <u a0
 83576: c8 96 06                 s1 = s1 + a2
 83579: d8 67 0c                 a5 = a0 <u s1
 83582: 85 cc 01                 a5 = a5 ^ 0x1
 83585: d2 c9 09                 a2 = a2 & a5
 83588: 51 09 14                 jump @6637 if a2 == 0
      :                          @6633
 83591: cb 67 09                 a2 = a0 /u s1
 83594: ca 69 0c                 a5 = a2 * s1
 83597: ab c7 e8                 jump @6632 if a0 != a5
      :                          @6634
 83600: ae 86 59                 jump @6646 if s1 >=u a1
      :                          @6635
 83603: ac 89 cb                 jump @6631 if a2 <u a1
      :                          @6636
 83606: 28 54                    jump @6647
      :                          @6637
 83608: ae 87 54                 jump @6649 if a0 >=u a1
      :                          @6638
 83611: 97 79 03                 a2 = a0 << 0x3
 83614: c8 49 09                 a2 = a2 + t2
 83617: 7b 9b                    u64 [a2] = a4
 83619: ac 37 a9                 jump @6629 if a0 <u t1
      :                          @6639
 83622: 82 19                    a2 = u64 [sp]
 83624: 7b 98                    u64 [a2] = a1
 83626: 7b 94 08                 u64 [a2 + 0x8] = t2
 83629: 33 07 00 20              a0 = 0x2000
 83633: 7b 98 10                 u64 [a2 + 0x10] = a1
 83636: 82 15 20                 s0 = u64 [sp + 0x20]
 83639: ac 87 24                 jump @6645 if a0 <u a1
      :                          @6640
 83642: 33 07 c0 22 03           a0 = 0x322c0
 83647: 95 77 00 00 01           a0 = a0 + 0x10000
 83652: 01                       fallthrough
      :                          @6641
 83653: 82 78                    a1 = u64 [a0]
 83655: c9 87 09                 a2 = a0 - a1
 83658: ab 29 11                 jump @6645 if a2 != t0
      :                          @6642
 83661: c9 58 09                 a2 = a1 - s0
 83664: 01                       fallthrough
      :                          @6643
 83665: 82 7a                    a3 = u64 [a0]
 83667: ab 8a f2                 jump @6641 if a3 != a1
      :                          @6644
 83670: 7b 79                    u64 [a0] = a2
 83672: 33 0b                    a4 = 0
 83674: 01                       fallthrough
      :                          @6645
 83675: 82 10 40                 ra = u64 [sp + 0x40]
 83678: 82 15 38                 s0 = u64 [sp + 0x38]
 83681: 82 16 30                 s1 = u64 [sp + 0x30]
 83684: 95 11 48                 sp = sp + 0x48
 83687: 32 00                    ret
      :                          @6646
 83689: 00                       trap
      :                          @6647
 83690: 00                       trap
      :                          @6648
 83691: 00                       trap
      :                          @6649
 83692: 00                       trap
      :                          @6650
 83693: 00                       trap
      :                          @6651
 83694: 00                       trap
      :                          @6652
 83695: 82 45                    s0 = u64 [t2]
 83697: 95 5b 30                 a4 = s0 + 0x30
 83700: ac 5b e8 01              jump @6704 if a4 <u s0
      :                          @6653
 83704: 95 ba 08                 a3 = a4 + 0x8
 83707: d8 ba 0c                 a5 = a3 <u a4
 83710: d8 a2 0a                 a3 = t0 <u a3
 83713: d4 ca 0a                 a3 = a3 | a5
 83716: 52 0a d8 01              jump @6704 if a3 != 0
      :                          @6654
 83720: c9 b3 0c                 a5 = t1 - a4
 83723: c8 2c 00                 ra = a5 + t0
 83726: 84 0a 07                 a3 = ra & 0x7
 83729: c8 ab 0b                 a4 = a4 + a3
 83732: 01                       fallthrough
      :                          @6655
 83733: 82 46                    s1 = u64 [t2]
 83735: ab 56 d8                 jump @6652 if s1 != s0
      :                          @6656
 83738: 7b 4b                    u64 [t2] = a4
 83740: 01                       fallthrough
      :                          @6657
 83741: c9 a0 0b                 a4 = ra - a3
 83744: 14 0a ff ff ff ff ff ff ff 3f a3 = 0x3fffffffffffffff
 83754: 7b ba 08                 u64 [a4 + 0x8] = a3
 83757: 7b ba 10                 u64 [a4 + 0x10] = a3
 83760: 7b ba 18                 u64 [a4 + 0x18] = a3
 83763: 7b ba 20                 u64 [a4 + 0x20] = a3
 83766: 7b ba 28                 u64 [a4 + 0x28] = a3
 83769: 49 0b                    u64 [a4 + 0] = 0
 83771: 33 0a 18                 a3 = 0x18
 83774: ca a9 02                 t0 = a2 * a3
 83777: 51 09 1d 01              jump @6688 if a2 == 0
      :                          @6658
 83781: c8 28 00                 ra = a1 + t0
 83784: 33 03 05                 t1 = 0x5
 83787: 33 04 06                 t2 = 0x6
 83790: 64 8c                    a5 = a1
 83792: 28 08                    jump @6660
      :                          @6659
 83794: 95 cc 18                 a5 = a5 + 0x18
 83797: aa 0c 2d                 jump @6664 if a5 == ra
      :                          @6660
 83800: 82 ca                    a3 = u64 [a5]
 83802: ac a3 80 01              jump @6702 if t1 <u a3
      :                          @6661
 83806: 82 c9 08                 a2 = u64 [a5 + 0x8]
 83809: ae 49 7a 01              jump @6703 if a2 >=u t2
      :                          @6662
 83813: 82 c5 10                 s0 = u64 [a5 + 0x10]
 83816: 97 aa 03                 a3 = a3 << 0x3
 83819: c8 ba 0a                 a3 = a3 + a4
 83822: 82 aa                    a3 = u64 [a3]
 83824: 97 99 03                 a2 = a2 << 0x3
 83827: c8 b9 09                 a2 = a2 + a4
 83830: 82 96                    s1 = u64 [a2]
 83832: c8 5a 0a                 a3 = a3 + s0
 83835: af 6a d7                 jump @6659 if a3 >=s s1
      :                          @6663
 83838: 7b 9a                    u64 [a2] = a3
 83840: 28 d2                    jump @6659
      :                          @6664
 83842: 33 03 05                 t1 = 0x5
 83845: 64 8c                    a5 = a1
 83847: 28 08                    jump @6666
      :                          @6665
 83849: 95 cc 18                 a5 = a5 + 0x18
 83852: aa 0c 2d                 jump @6670 if a5 == ra
      :                          @6666
 83855: 82 ca                    a3 = u64 [a5]
 83857: ac a3 49 01              jump @6702 if t1 <u a3
      :                          @6667
 83861: 82 c9 08                 a2 = u64 [a5 + 0x8]
 83864: ac 93 43 01              jump @6703 if t1 <u a2
      :                          @6668
 83868: 82 c6 10                 s1 = u64 [a5 + 0x10]
 83871: 97 aa 03                 a3 = a3 << 0x3
 83874: c8 ba 0a                 a3 = a3 + a4
 83877: 82 aa                    a3 = u64 [a3]
 83879: 97 99 03                 a2 = a2 << 0x3
 83882: c8 b9 09                 a2 = a2 + a4
 83885: 82 95                    s0 = u64 [a2]
 83887: c8 6a 0a                 a3 = a3 + s1
 83890: af 5a d7                 jump @6665 if a3 >=s s0
      :                          @6669
 83893: 7b 9a                    u64 [a2] = a3
 83895: 28 d2                    jump @6665
      :                          @6670
 83897: 33 03 05                 t1 = 0x5
 83900: 64 8c                    a5 = a1
 83902: 28 08                    jump @6672
      :                          @6671
 83904: 95 cc 18                 a5 = a5 + 0x18
 83907: aa 0c 2d                 jump @6676 if a5 == ra
      :                          @6672
 83910: 82 ca                    a3 = u64 [a5]
 83912: ac a3 12 01              jump @6702 if t1 <u a3
      :                          @6673
 83916: 82 c9 08                 a2 = u64 [a5 + 0x8]
 83919: ac 93 0c 01              jump @6703 if t1 <u a2
      :                          @6674
 83923: 82 c6 10                 s1 = u64 [a5 + 0x10]
 83926: 97 aa 03                 a3 = a3 << 0x3
 83929: c8 ba 0a                 a3 = a3 + a4
 83932: 82 aa                    a3 = u64 [a3]
 83934: 97 99 03                 a2 = a2 << 0x3
 83937: c8 b9 09                 a2 = a2 + a4
 83940: 82 95                    s0 = u64 [a2]
 83942: c8 6a 0a                 a3 = a3 + s1
 83945: af 5a d7                 jump @6671 if a3 >=s s0
      :                          @6675
 83948: 7b 9a                    u64 [a2] = a3
 83950: 28 d2                    jump @6671
      :                          @6676
 83952: 33 03 05                 t1 = 0x5
 83955: 64 8c                    a5 = a1
 83957: 28 08                    jump @6678
      :                          @6677
 83959: 95 cc 18                 a5 = a5 + 0x18
 83962: aa 0c 2d                 jump @6682 if a5 == ra
      :                          @6678
 83965: 82 ca                    a3 = u64 [a5]
 83967: ac a3 db 00              jump @6702 if t1 <u a3
      :                          @6679
 83971: 82 c9 08                 a2 = u64 [a5 + 0x8]
 83974: ac 93 d5 00              jump @6703 if t1 <u a2
      :                          @6680
 83978: 82 c6 10                 s1 = u64 [a5 + 0x10]
 83981: 97 aa 03                 a3 = a3 << 0x3
 83984: c8 ba 0a                 a3 = a3 + a4
 83987: 82 aa                    a3 = u64 [a3]
 83989: 97 99 03                 a2 = a2 << 0x3
 83992: c8 b9 09                 a2 = a2 + a4
 83995: 82 95                    s0 = u64 [a2]
 83997: c8 6a 0a                 a3 = a3 + s1
 84000: af 5a d7                 jump @6677 if a3 >=s s0
      :                          @6681
 84003: 7b 9a                    u64 [a2] = a3
 84005: 28 d2                    jump @6677
      :                          @6682
 84007: 33 03 05                 t1 = 0x5
 84010: 64 8c                    a5 = a1
 84012: 28 08                    jump @6684
      :                          @6683
 84014: 95 cc 18                 a5 = a5 + 0x18
 84017: aa 0c 2d                 jump @6688 if a5 == ra
      :                          @6684
 84020: 82 ca                    a3 = u64 [a5]
 84022: ac a3 a4 00              jump @6702 if t1 <u a3
      :                          @6685
 84026: 82 c9 08                 a2 = u64 [a5 + 0x8]
 84029: ac 93 9e 00              jump @6703 if t1 <u a2
      :                          @6686
 84033: 82 c6 10                 s1 = u64 [a5 + 0x10]
 84036: 97 aa 03                 a3 = a3 << 0x3
 84039: c8 ba 0a                 a3 = a3 + a4
 84042: 82 aa                    a3 = u64 [a3]
 84044: 97 99 03                 a2 = a2 << 0x3
 84047: c8 b9 09                 a2 = a2 + a4
 84050: 82 95                    s0 = u64 [a2]
 84052: c8 6a 0a                 a3 = a3 + s1
 84055: af 5a d7                 jump @6683 if a3 >=s s0
      :                          @6687
 84058: 7b 9a                    u64 [a2] = a3
 84060: 28 d2                    jump @6683
      :                          @6688
 84062: 33 0c 06                 a5 = 0x6
 84065: 01                       fallthrough
      :                          @6689
 84066: 51 02 5f                 jump @6700 if t0 == 0
      :                          @6690
 84069: 82 8a                    a3 = u64 [a1]
 84071: ae ca 73                 jump @6702 if a3 >=u a5
      :                          @6691
 84074: 82 89 08                 a2 = u64 [a1 + 0x8]
 84077: ae c9 6e                 jump @6703 if a2 >=u a5
      :                          @6692
 84080: 97 aa 03                 a3 = a3 << 0x3
 84083: c8 ba 0a                 a3 = a3 + a4
 84086: 82 aa                    a3 = u64 [a3]
 84088: 82 86 10                 s1 = u64 [a1 + 0x10]
 84091: 97 99 03                 a2 = a2 << 0x3
 84094: c8 b9 09                 a2 = a2 + a4
 84097: 82 99                    a2 = u64 [a2]
 84099: 95 88 18                 a1 = a1 + 0x18
 84102: c8 6a 0a                 a3 = a3 + s1
 84105: 95 22 e8                 t0 = t0 + 0xffffffffffffffe8
 84108: af 9a d6                 jump @6689 if a3 >=s a2
      :                          @6693
 84111: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 84121: 7b 78                    u64 [a0] = a1
 84123: 33 07 c0 22 03           a0 = 0x322c0
 84128: 95 77 00 00 01           a0 = a0 + 0x10000
 84133: 01                       fallthrough
      :                          @6694
 84134: 82 78                    a1 = u64 [a0]
 84136: c9 87 09                 a2 = a0 - a1
 84139: ab b9 22                 jump @6701 if a2 != a4
      :                          @6695
 84142: 95 89 d0                 a2 = a1 + 0xffffffffffffffd0
 84145: 01                       fallthrough
      :                          @6696
 84146: 82 7a                    a3 = u64 [a0]
 84148: ab 8a f2                 jump @6694 if a3 != a1
      :                          @6697
 84151: 7b 79                    u64 [a0] = a2
 84153: 33 0c                    a5 = 0
 84155: 01                       fallthrough
      :                          @6698
 84156: ab 8a ea                 jump @6694 if a3 != a1
      :                          @6699
 84159: 28 0e                    jump @6701
      :                          @6700
 84161: 33 08 06                 a1 = 0x6
 84164: 7b 78                    u64 [a0] = a1
 84166: 7b 7b 08                 u64 [a0 + 0x8] = a4
 84169: 7b 78 10                 u64 [a0 + 0x10] = a1
 84172: 01                       fallthrough
      :                          @6701
 84173: 82 10 10                 ra = u64 [sp + 0x10]
 84176: 82 15 08                 s0 = u64 [sp + 0x8]
 84179: 82 16                    s1 = u64 [sp]
 84181: 95 11 18                 sp = sp + 0x18
 84184: 32 00                    ret
      :                          @6702
 84186: 00                       trap
      :                          @6703
 84187: 00                       trap
      :                          @6704
 84188: 00                       trap
      :                          @6705
 84189: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 84192: 7b 10 40                 u64 [sp + 0x40] = ra
 84195: 7b 15 38                 u64 [sp + 0x38] = s0
 84198: 7b 16 30                 u64 [sp + 0x30] = s1
 84201: 7b 17 08                 u64 [sp + 0x8] = a0
 84204: 7b 18 28                 u64 [sp + 0x28] = a1
 84207: 51 08 b9 00              jump @6717 if a1 == 0
      :                          @6706
 84211: 33 08                    a1 = 0
 84213: 14 04 00 00 00 00 00 00 00 80 t2 = 0x8000000000000000
 84223: 7b 14 10                 u64 [sp + 0x10] = t2
 84226: 82 15 10                 s0 = u64 [sp + 0x10]
 84229: 01                       fallthrough
      :                          @6707
 84230: 33 07                    a0 = 0
 84232: 64 84                    t2 = a1
 84234: 95 88 01                 a1 = a1 + 0x1
 84237: 7b 18                    u64 [sp] = a1
 84239: 96 4a 18                 a3 = t2 * 0x18
 84242: 82 18 08                 a1 = u64 [sp + 0x8]
 84245: c8 8a 0a                 a3 = a3 + a1
 84248: 95 a8 10                 a1 = a3 + 0x10
 84251: 7b 18 20                 u64 [sp + 0x20] = a1
 84254: 95 aa 08                 a3 = a3 + 0x8
 84257: 7b 1a 18                 u64 [sp + 0x18] = a3
 84260: 33 0b 01                 a4 = 0x1
 84263: 28 11                    jump @6709
      :                          @6708
 84265: 82 18 28                 a1 = u64 [sp + 0x28]
 84268: d8 87 0b                 a4 = a0 <u a1
 84271: c8 7b 0b                 a4 = a4 + a0
 84274: 33 09 18                 a2 = 0x18
 84277: ae 87 6a                 jump @6716 if a0 >=u a1
      :                          @6709
 84280: 33 02                    t0 = 0
 84282: 33 0a                    a3 = 0
 84284: 96 7c 18                 a5 = a0 * 0x18
 84287: 64 b7                    a0 = a4
 84289: 82 18 08                 a1 = u64 [sp + 0x8]
 84292: c8 8c 0c                 a5 = a5 + a1
 84295: 95 c3 08                 t1 = a5 + 0x8
 84298: 95 c0 10                 ra = a5 + 0x10
 84301: 28 0e                    jump @6711
      :                          @6710
 84303: 95 aa 01                 a3 = a3 + 0x1
 84306: 95 22 08                 t0 = t0 + 0x8
 84309: 82 18 28                 a1 = u64 [sp + 0x28]
 84312: aa a8 d1                 jump @6708 if a1 == a3
      :                          @6711
 84315: 82 0b                    a4 = u64 [ra]
 84317: ae b4 59                 jump @6718 if t2 >=u a4
      :                          @6712
 84320: 82 18 20                 a1 = u64 [sp + 0x20]
 84323: 82 8c                    a5 = u64 [a1]
 84325: ae ca 52                 jump @6719 if a3 >=u a5
      :                          @6713
 84328: ae ba 50                 jump @6720 if a3 >=u a4
      :                          @6714
 84331: 82 3b                    a4 = u64 [t1]
 84333: 82 18 18                 a1 = u64 [sp + 0x18]
 84336: 82 8c                    a5 = u64 [a1]
 84338: 97 49 03                 a2 = t2 << 0x3
 84341: c8 b9 09                 a2 = a2 + a4
 84344: 82 98                    a1 = u64 [a2]
 84346: c8 2c 0c                 a5 = a5 + t0
 84349: 82 cc                    a5 = u64 [a5]
 84351: c8 c8 09                 a2 = a1 + a5
 84354: d9 89 08                 a1 = a2 <s a1
 84357: 89 cc                    a5 = a5 <s 0
 84359: d3 c8 08                 a1 = a1 ^ a5
 84362: c8 2b 0b                 a4 = a4 + t0
 84365: 82 b6                    s1 = u64 [a4]
 84367: 99 9c 3f                 a5 = a2 >>a 0x3f
 84370: d3 5c 0c                 a5 = a5 ^ s0
 84373: da 89 0c                 a5 = a2 if a1 == 0
 84376: af 6c b7                 jump @6710 if a5 >=s s1
      :                          @6715
 84379: 7b bc                    u64 [a4] = a5
 84381: 28 b2                    jump @6710
      :                          @6716
 84383: 82 17 28                 a0 = u64 [sp + 0x28]
 84386: 82 18                    a1 = u64 [sp]
 84388: ab 78 62 ff              jump @6707 if a1 != a0
      :                          @6717
 84392: 82 10 40                 ra = u64 [sp + 0x40]
 84395: 82 15 38                 s0 = u64 [sp + 0x38]
 84398: 82 16 30                 s1 = u64 [sp + 0x30]
 84401: 95 11 48                 sp = sp + 0x48
 84404: 32 00                    ret
      :                          @6718
 84406: 00                       trap
      :                          @6719
 84407: 00                       trap
      :                          @6720
 84408: 00                       trap
      :                          @6721
 84409: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 84413: 7b 10 88 00              u64 [sp + 0x88] = ra
 84417: 7b 15 80 00              u64 [sp + 0x80] = s0
 84421: 7b 16 78                 u64 [sp + 0x78] = s1
 84424: 82 78 10                 a1 = u64 [a0 + 0x10]
 84427: 51 08 81 02              jump @6768 if a1 == 0
      :                          @6722
 84431: 98 89 3c                 a2 = a1 >> 0x3c
 84434: 52 09 c1 02              jump @6781 if a2 != 0
      :                          @6723
 84438: 88 92 01                 t0 = a2 <u 0x1
 84441: 7b 18 28                 u64 [sp + 0x28] = a1
 84444: 97 88 03                 a1 = a1 << 0x3
 84447: 7b 18 10                 u64 [sp + 0x10] = a1
 84450: 97 22 03                 t0 = t0 << 0x3
 84453: 33 04 c0 22 03           t2 = 0x322c0
 84458: 33 03 00 00 01           t1 = 0x10000
 84463: c8 34 0a                 a3 = t2 + t1
 84466: 01                       fallthrough
      :                          @6724
 84467: 82 ab                    a4 = u64 [a3]
 84469: 82 15 10                 s0 = u64 [sp + 0x10]
 84472: c8 b5 05                 s0 = s0 + a4
 84475: ac b5 97 02              jump @6780 if s0 <u a4
      :                          @6725
 84479: c8 25 09                 a2 = s0 + t0
 84482: d8 59 0c                 a5 = a2 <u s0
 84485: d8 93 09                 a2 = t1 <u a2
 84488: d4 c9 09                 a2 = a2 | a5
 84491: 52 09 87 02              jump @6780 if a2 != 0
      :                          @6726
 84495: c9 54 09                 a2 = t2 - s0
 84498: c8 39 09                 a2 = a2 + t1
 84501: 84 9c 07                 a5 = a2 & 0x7
 84504: c8 c5 05                 s0 = s0 + a5
 84507: 01                       fallthrough
      :                          @6727
 84508: 82 a8                    a1 = u64 [a3]
 84510: ab b8 d5                 jump @6724 if a1 != a4
      :                          @6728
 84513: 7b a5                    u64 [a3] = s0
 84515: 01                       fallthrough
      :                          @6729
 84516: 7b 17 50                 u64 [sp + 0x50] = a0
 84519: c9 c9 03                 t1 = a2 - a5
 84522: 33 04 01                 t2 = 0x1
 84525: 64 37                    a0 = t1
 84527: 82 19 28                 a2 = u64 [sp + 0x28]
 84530: 7b 13 38                 u64 [sp + 0x38] = t1
 84533: 53 19 02 2e              jump @6732 if a2 <u 2
      :                          @6730
 84537: 82 16 10                 s1 = u64 [sp + 0x10]
 84540: 95 69 f8                 a2 = s1 + 0xfffffffffffffff8
 84543: 33 08 ff 00              a1 = 0xff
 84547: 64 37                    a0 = t1
 84549: 50 20 e6 03 14 c1 01     ra = 998, jump @13675
      :                          @6731 [@dyn 499]
 84556: 82 13 38                 t1 = u64 [sp + 0x38]
 84559: 33 07 c0 22 03           a0 = 0x322c0
 84564: c8 67 07                 a0 = a0 + s1
 84567: 95 77 f8 ff 00           a0 = a0 + 0xfff8
 84572: c9 57 07                 a0 = a0 - s0
 84575: 82 14 28                 t2 = u64 [sp + 0x28]
 84578: 01                       fallthrough
      :                          @6732
 84579: 33 06                    s1 = 0
 84581: 33 09                    a2 = 0
 84583: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 84586: 97 40 03                 ra = t2 << 0x3
 84589: 82 17 50                 a0 = u64 [sp + 0x50]
 84592: 82 77 08                 a0 = u64 [a0 + 0x8]
 84595: 7b 17 20                 u64 [sp + 0x20] = a0
 84598: 33 07 c0 22 03           a0 = 0x322c0
 84603: 95 7c 00 00 01           a5 = a0 + 0x10000
 84608: 82 15 28                 s0 = u64 [sp + 0x28]
 84611: 7b 14 30                 u64 [sp + 0x30] = t2
 84614: 7b 10                    u64 [sp] = ra
 84616: 7b 1c 48                 u64 [sp + 0x48] = a5
 84619: 28 09                    jump @6734
      :                          @6733
 84621: 82 19 18                 a2 = u64 [sp + 0x18]
 84624: aa 59 d2 01              jump @6770 if a2 == s0
      :                          @6734
 84628: 7b 19 18                 u64 [sp + 0x18] = a2
 84631: 33 08 ff 00              a1 = 0xff
 84635: 64 37                    a0 = t1
 84637: 64 09                    a2 = ra
 84639: 50 20 e8 03 ba c0 01     ra = 1000, jump @13675
      :                          @6735 [@dyn 500]
 84646: 82 18 18                 a1 = u64 [sp + 0x18]
 84649: 82 17 30                 a0 = u64 [sp + 0x30]
 84652: 49 11 58                 u64 [sp + 88] = 0
 84655: 95 19 68                 a2 = sp + 0x68
 84658: 49 19 08                 u64 [a2 + 8] = 0
 84661: 49 09                    u64 [a2 + 0] = 0
 84663: 49 11 60 08              u64 [sp + 96] = 0x8
 84667: aa 78 d6 01              jump @6779 if a1 == a0
      :                          @6736
 84671: 7b 16 08                 u64 [sp + 0x8] = s1
 84674: 97 87 03                 a0 = a1 << 0x3
 84677: 82 19 38                 a2 = u64 [sp + 0x38]
 84680: c8 97 07                 a0 = a0 + a2
 84683: 49 07                    u64 [a0 + 0] = 0
 84685: 95 17 58                 a0 = sp + 0x58
 84688: 50 20 ea 03 ea 03 ff     ra = 1002, jump @1484
      :                          @6737 [@dyn 501]
 84695: 82 14 30                 t2 = u64 [sp + 0x30]
 84698: 82 1a 70                 a3 = u64 [sp + 0x70]
 84701: 82 1b 68                 a4 = u64 [sp + 0x68]
 84704: 82 12 58                 t0 = u64 [sp + 0x58]
 84707: c8 ab 07                 a0 = a4 + a3
 84710: d8 27 08                 a1 = a0 <u t0
 84713: 64 26                    s1 = t0
 84715: 82 10 60                 ra = u64 [sp + 0x60]
 84718: 94 86                    s1 = 0 if a1 != 0
 84720: c9 67 07                 a0 = a0 - s1
 84723: 97 77 03                 a0 = a0 << 0x3
 84726: c8 07 07                 a0 = a0 + ra
 84729: 82 18 18                 a1 = u64 [sp + 0x18]
 84732: 7b 78                    u64 [a0] = a1
 84734: 95 aa 01                 a3 = a3 + 0x1
 84737: 7b 1a 70                 u64 [sp + 0x70] = a3
 84740: 82 13 38                 t1 = u64 [sp + 0x38]
 84743: 33 09 ff                 a2 = 0xffffffffffffffff
 84746: 82 1c 48                 a5 = u64 [sp + 0x48]
 84749: 52 0a 67                 jump @6750 if a3 != 0
      :                          @6738
 84752: 82 17 18                 a0 = u64 [sp + 0x18]
 84755: 95 77 01                 a0 = a0 + 0x1
 84758: 7b 17 18                 u64 [sp + 0x18] = a0
 84761: 82 10                    ra = u64 [sp]
 84763: 64 07                    a0 = ra
 84765: 64 39                    a2 = t1
 84767: 82 16 08                 s1 = u64 [sp + 0x8]
 84770: 01                       fallthrough
      :                          @6739
 84771: 64 68                    a1 = s1
 84773: 82 96                    s1 = u64 [a2]
 84775: 95 99 08                 a2 = a2 + 0x8
 84778: 88 6a ff                 a3 = s1 <u 0xffffffffffffffff
 84781: d8 68 0b                 a4 = a1 <u s1
 84784: d2 ba 0a                 a3 = a3 & a4
 84787: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
 84790: da a8 06                 s1 = a1 if a3 == 0
 84793: 52 07 ea                 jump @6739 if a0 != 0
      :                          @6740
 84796: 51 02 51 ff              jump @6733 if t0 == 0
      :                          @6741
 84800: 56 22 00 20 4d ff        jump @6733 if t0 >u 8192
      :                          @6742
 84806: 82 17 60                 a0 = u64 [sp + 0x60]
 84809: 97 22 03                 t0 = t0 << 0x3
 84812: 01                       fallthrough
      :                          @6743
 84813: 82 c9                    a2 = u64 [a5]
 84815: c9 9c 0a                 a3 = a5 - a2
 84818: ab 7a 3b ff              jump @6733 if a3 != a0
      :                          @6744
 84822: c9 29 0a                 a3 = a2 - t0
 84825: 82 18 48                 a1 = u64 [sp + 0x48]
 84828: 01                       fallthrough
      :                          @6745
 84829: 82 8b                    a4 = u64 [a1]
 84831: ab 9b 06                 jump @6747 if a4 != a2
      :                          @6746
 84834: 7b 8a                    u64 [a1] = a3
 84836: 01                       fallthrough
      :                          @6747
 84837: 82 1c 48                 a5 = u64 [sp + 0x48]
 84840: ab 9b e5                 jump @6743 if a4 != a2
      :                          @6748
 84843: 28 22 ff                 jump @6733
      :                          @6749
 84846: 82 15 28                 s0 = u64 [sp + 0x28]
 84849: 51 0a 9f                 jump @6738 if a3 == 0
      :                          @6750
 84852: 95 b7 01                 a0 = a4 + 0x1
 84855: d8 27 06                 s1 = a0 <u t0
 84858: 64 28                    a1 = t0
 84860: 94 68                    a1 = 0 if s1 != 0
 84862: 97 b6 03                 s1 = a4 << 0x3
 84865: c9 87 0b                 a4 = a0 - a1
 84868: 7b 1b 68                 u64 [sp + 0x68] = a4
 84871: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 84874: 7b 1a 70                 u64 [sp + 0x70] = a3
 84877: c8 06 06                 s1 = s1 + ra
 84880: 82 67                    a0 = u64 [s1]
 84882: ae 57 fe 00              jump @6778 if a0 >=u s0
      :                          @6751
 84886: 96 76 18                 s1 = a0 * 0x18
 84889: 82 18 20                 a1 = u64 [sp + 0x20]
 84892: c8 86 06                 s1 = s1 + a1
 84895: 82 68 10                 a1 = u64 [s1 + 0x10]
 84898: 51 08 cc                 jump @6749 if a1 == 0
      :                          @6752
 84901: 82 66 08                 s1 = u64 [s1 + 0x8]
 84904: ae 47 7d                 jump @6761 if a0 >=u t2
      :                          @6753
 84907: 97 77 03                 a0 = a0 << 0x3
 84910: c8 37 07                 a0 = a0 + t1
 84913: 7b 17 40                 u64 [sp + 0x40] = a0
 84916: 97 85 03                 s0 = a1 << 0x3
 84919: 28 2d                    jump @6756
      :                          @6754
 84921: c8 ab 07                 a0 = a4 + a3
 84924: d8 27 08                 a1 = a0 <u t0
 84927: 64 2c                    a5 = t0
 84929: 94 8c                    a5 = 0 if a1 != 0
 84931: c9 c7 07                 a0 = a0 - a5
 84934: 97 77 03                 a0 = a0 << 0x3
 84937: c8 07 07                 a0 = a0 + ra
 84940: 7b 76                    u64 [a0] = s1
 84942: 95 aa 01                 a3 = a3 + 0x1
 84945: 7b 1a 70                 u64 [sp + 0x70] = a3
 84948: 82 1c 48                 a5 = u64 [sp + 0x48]
 84951: 01                       fallthrough
      :                          @6755
 84952: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 84955: 82 16 50                 s1 = u64 [sp + 0x50]
 84958: 95 66 08                 s1 = s1 + 0x8
 84961: 51 05 8d                 jump @6749 if s0 == 0
      :                          @6756
 84964: 7b 16 50                 u64 [sp + 0x50] = s1
 84967: 82 66                    s1 = u64 [s1]
 84969: ae 46 61                 jump @6766 if s1 >=u t2
      :                          @6757
 84972: 97 67 03                 a0 = s1 << 0x3
 84975: c8 37 07                 a0 = a0 + t1
 84978: 82 78                    a1 = u64 [a0]
 84980: ab 98 e4                 jump @6755 if a1 != a2
      :                          @6758
 84983: 82 18 40                 a1 = u64 [sp + 0x40]
 84986: 82 88                    a1 = u64 [a1]
 84988: 95 88 01                 a1 = a1 + 0x1
 84991: 7b 78                    u64 [a0] = a1
 84993: ab 2a b8                 jump @6754 if a3 != t0
      :                          @6759
 84996: 95 17 58                 a0 = sp + 0x58
 84999: 50 20 ec 03 b3 02 ff     ra = 1004, jump @1484
      :                          @6760 [@dyn 502]
 85006: 33 09 ff                 a2 = 0xffffffffffffffff
 85009: 82 14 30                 t2 = u64 [sp + 0x30]
 85012: 82 13 38                 t1 = u64 [sp + 0x38]
 85015: 82 1a 70                 a3 = u64 [sp + 0x70]
 85018: 82 12 58                 t0 = u64 [sp + 0x58]
 85021: 82 1b 68                 a4 = u64 [sp + 0x68]
 85024: 82 10 60                 ra = u64 [sp + 0x60]
 85027: 28 96                    jump @6754
      :                          @6761
 85029: 97 88 03                 a1 = a1 << 0x3
 85032: 01                       fallthrough
      :                          @6762
 85033: 64 65                    s0 = s1
 85035: 82 66                    s1 = u64 [s1]
 85037: ae 46 1d                 jump @6766 if s1 >=u t2
      :                          @6763
 85040: 97 66 03                 s1 = s1 << 0x3
 85043: c8 36 06                 s1 = s1 + t1
 85046: 82 6c                    a5 = u64 [s1]
 85048: aa 9c 13                 jump @6767 if a5 == a2
      :                          @6764
 85051: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 85054: 95 56 08                 s1 = s0 + 0x8
 85057: 82 1c 48                 a5 = u64 [sp + 0x48]
 85060: 52 08 e5                 jump @6762 if a1 != 0
      :                          @6765
 85063: 28 27 ff                 jump @6749
      :                          @6766
 85066: 00                       trap
      :                          @6767
 85067: 00                       trap
      :                          @6768
 85068: 33 06                    s1 = 0
 85070: 01                       fallthrough
      :                          @6769
 85071: 64 67                    a0 = s1
 85073: 82 10 88 00              ra = u64 [sp + 0x88]
 85077: 82 15 80 00              s0 = u64 [sp + 0x80]
 85081: 82 16 78                 s1 = u64 [sp + 0x78]
 85084: 95 11 90 00              sp = sp + 0x90
 85088: 32 00                    ret
      :                          @6770
 85090: 56 25 00 20 ed           jump @6769 if s0 >u 8192
      :                          @6771
 85095: 33 07 c0 22 03           a0 = 0x322c0
 85100: 95 77 00 00 01           a0 = a0 + 0x10000
 85105: 01                       fallthrough
      :                          @6772
 85106: 82 78                    a1 = u64 [a0]
 85108: c9 87 09                 a2 = a0 - a1
 85111: ab 39 d8                 jump @6769 if a2 != t1
      :                          @6773
 85114: 82 19 10                 a2 = u64 [sp + 0x10]
 85117: c9 98 09                 a2 = a1 - a2
 85120: 01                       fallthrough
      :                          @6774
 85121: 82 7a                    a3 = u64 [a0]
 85123: ab 8a ef                 jump @6772 if a3 != a1
      :                          @6775
 85126: 7b 79                    u64 [a0] = a2
 85128: 33 0b                    a4 = 0
 85130: 01                       fallthrough
      :                          @6776
 85131: ab 8a e7                 jump @6772 if a3 != a1
      :                          @6777
 85134: 28 c1                    jump @6769
      :                          @6778
 85136: 00                       trap
      :                          @6779
 85137: 00                       trap
      :                          @6780
 85138: 00                       trap
      :                          @6781
 85139: 00                       trap
      :                          @6782
 85140: 95 11 60 ff              sp = sp + 0xffffffffffffff60
 85144: 7b 10 98 00              u64 [sp + 0x98] = ra
 85148: 7b 15 90 00              u64 [sp + 0x90] = s0
 85152: 7b 16 88 00              u64 [sp + 0x88] = s1
 85156: 7b 18 38                 u64 [sp + 0x38] = a1
 85159: 82 8a 10                 a3 = u64 [a1 + 0x10]
 85162: 7b 17 28                 u64 [sp + 0x28] = a0
 85165: 49 11 68                 u64 [sp + 104] = 0
 85168: 7b 1a 48                 u64 [sp + 0x48] = a3
 85171: 51 0a bd 01              jump @6816 if a3 == 0
      :                          @6783
 85175: 98 a7 3c                 a0 = a3 >> 0x3c
 85178: 52 07 9e 03              jump @6860 if a0 != 0
      :                          @6784
 85182: 88 77 01                 a0 = a0 <u 0x1
 85185: 97 a9 03                 a2 = a3 << 0x3
 85188: 97 72 03                 t0 = a0 << 0x3
 85191: 33 04 c0 22 03           t2 = 0x322c0
 85196: 33 03 00 00 01           t1 = 0x10000
 85201: c8 34 0a                 a3 = t2 + t1
 85204: 01                       fallthrough
      :                          @6785
 85205: 82 ab                    a4 = u64 [a3]
 85207: c8 9b 0c                 a5 = a4 + a2
 85210: ac bc 7b 03              jump @6857 if a5 <u a4
      :                          @6786
 85214: c8 2c 07                 a0 = a5 + t0
 85217: d8 c7 06                 s1 = a0 <u a5
 85220: d8 73 07                 a0 = t1 <u a0
 85223: d4 67 07                 a0 = a0 | s1
 85226: 52 07 6b 03              jump @6857 if a0 != 0
      :                          @6787
 85230: c9 c4 06                 s1 = t2 - a5
 85233: c8 36 08                 a1 = s1 + t1
 85236: 84 86 07                 s1 = a1 & 0x7
 85239: c8 6c 0c                 a5 = a5 + s1
 85242: 01                       fallthrough
      :                          @6788
 85243: 82 a7                    a0 = u64 [a3]
 85245: ab b7 d8                 jump @6785 if a0 != a4
      :                          @6789
 85248: 7b ac                    u64 [a3] = a5
 85250: 33 05                    s0 = 0
 85252: c9 68 07                 a0 = a1 - s1
 85255: 7b 17 60                 u64 [sp + 0x60] = a0
 85258: 33 08                    a1 = 0
 85260: 7b 19 40                 u64 [sp + 0x40] = a2
 85263: 50 20 ee 03 4a be 01     ra = 1006, jump @13675
      :                          @6790 [@dyn 503]
 85270: 82 19 40                 a2 = u64 [sp + 0x40]
 85273: 33 03 c0 22 03           t1 = 0x322c0
 85278: 33 02 00 00 01           t0 = 0x10000
 85283: c8 23 07                 a0 = t1 + t0
 85286: 01                       fallthrough
      :                          @6791
 85287: 82 7a                    a3 = u64 [a0]
 85289: c8 9a 0b                 a4 = a3 + a2
 85292: ac ab 29 03              jump @6857 if a4 <u a3
      :                          @6792
 85296: 95 b8 08                 a1 = a4 + 0x8
 85299: d8 b8 0c                 a5 = a1 <u a4
 85302: d8 82 08                 a1 = t0 <u a1
 85305: d4 c8 08                 a1 = a1 | a5
 85308: 52 08 19 03              jump @6857 if a1 != 0
      :                          @6793
 85312: c9 b3 08                 a1 = t1 - a4
 85315: c8 28 08                 a1 = a1 + t0
 85318: 84 8c 07                 a5 = a1 & 0x7
 85321: c8 cb 0b                 a4 = a4 + a5
 85324: 01                       fallthrough
      :                          @6794
 85325: 82 75                    s0 = u64 [a0]
 85327: ab a5 d8                 jump @6791 if s0 != a3
      :                          @6795
 85330: 7b 7b                    u64 [a0] = a4
 85332: 33 06                    s1 = 0
 85334: c9 c8 07                 a0 = a1 - a5
 85337: 7b 17 50                 u64 [sp + 0x50] = a0
 85340: 33 08                    a1 = 0
 85342: 50 20 f0 03 fb bd 01     ra = 1008, jump @13675
      :                          @6796 [@dyn 504]
 85349: 82 14 40                 t2 = u64 [sp + 0x40]
 85352: 33 03 c0 22 03           t1 = 0x322c0
 85357: 33 02 00 00 01           t0 = 0x10000
 85362: c8 23 07                 a0 = t1 + t0
 85365: 82 19 48                 a2 = u64 [sp + 0x48]
 85368: 01                       fallthrough
      :                          @6797
 85369: 82 76                    s1 = u64 [a0]
 85371: c8 46 0a                 a3 = s1 + t2
 85374: ac 6a d8 02              jump @6858 if a3 <u s1
      :                          @6798
 85378: 95 ab 08                 a4 = a3 + 0x8
 85381: d8 ab 0c                 a5 = a4 <u a3
 85384: d8 b2 0b                 a4 = t0 <u a4
 85387: d4 cb 0b                 a4 = a4 | a5
 85390: 52 0b c8 02              jump @6858 if a4 != 0
      :                          @6799
 85394: c9 a3 0b                 a4 = t1 - a3
 85397: c8 2b 0b                 a4 = a4 + t0
 85400: 84 b5 07                 s0 = a4 & 0x7
 85403: c8 5a 0a                 a3 = a3 + s0
 85406: 01                       fallthrough
      :                          @6800
 85407: 82 7c                    a5 = u64 [a0]
 85409: ab 6c d8                 jump @6797 if a5 != s1
      :                          @6801
 85412: 7b 7a                    u64 [a0] = a3
 85414: 01                       fallthrough
      :                          @6802
 85415: c9 5b 07                 a0 = a4 - s0
 85418: 49 11 30 01              u64 [sp + 48] = 0x1
 85422: 7b 17 58                 u64 [sp + 0x58] = a0
 85425: 53 19 02 27              jump @6805 if a2 <u 2
      :                          @6803
 85429: 95 49 f8                 a2 = t2 + 0xfffffffffffffff8
 85432: 33 08 ff 00              a1 = 0xff
 85436: 82 17 58                 a0 = u64 [sp + 0x58]
 85439: 50 20 f2 03 9a bd 01     ra = 1010, jump @13675
      :                          @6804 [@dyn 505]
 85446: 82 19 48                 a2 = u64 [sp + 0x48]
 85449: c8 65 05                 s0 = s0 + s1
 85452: 33 07 b8 22 04           a0 = 0x422b8
 85457: c9 57 07                 a0 = a0 - s0
 85460: 7b 19 30                 u64 [sp + 0x30] = a2
 85463: 01                       fallthrough
      :                          @6805
 85464: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 85467: 33 07 c0 22 03           a0 = 0x322c0
 85472: 33 06 00 00 01           s1 = 0x10000
 85477: c8 67 07                 a0 = a0 + s1
 85480: 01                       fallthrough
      :                          @6806
 85481: 82 7a                    a3 = u64 [a0]
 85483: c8 9a 08                 a1 = a3 + a2
 85486: ac a8 67 02              jump @6857 if a1 <u a3
      :                          @6807
 85490: 95 8b 01                 a4 = a1 + 0x1
 85493: 88 bc 01                 a5 = a4 <u 0x1
 85496: d8 b6 0b                 a4 = s1 <u a4
 85499: d4 cb 0b                 a4 = a4 | a5
 85502: 52 0b 57 02              jump @6857 if a4 != 0
      :                          @6808
 85506: 82 7b                    a4 = u64 [a0]
 85508: ab ab e5                 jump @6806 if a4 != a3
      :                          @6809
 85511: 7b 78                    u64 [a0] = a1
 85513: 33 0c                    a5 = 0
 85515: 33 07 c0 22 04           a0 = 0x422c0
 85520: c9 87 07                 a0 = a0 - a1
 85523: 7b 17 40                 u64 [sp + 0x40] = a0
 85526: 33 08                    a1 = 0
 85528: 50 20 f4 03 41 bd 01     ra = 1012, jump @13675
      :                          @6810 [@dyn 506]
 85535: 82 1a 48                 a3 = u64 [sp + 0x48]
 85538: 33 05                    s0 = 0
 85540: 82 16 60                 s1 = u64 [sp + 0x60]
 85543: 28 0b                    jump @6812
      :                          @6811
 85545: 95 55 01                 s0 = s0 + 0x1
 85548: 95 66 08                 s1 = s1 + 0x8
 85551: aa 5a 37                 jump @6815 if a3 == s0
      :                          @6812
 85554: 82 67                    a0 = u64 [s1]
 85556: 52 07 f5                 jump @6811 if a0 != 0
      :                          @6813
 85559: 82 17 38                 a0 = u64 [sp + 0x38]
 85562: 7b 17 18                 u64 [sp + 0x18] = a0
 85565: 7b 1a 10                 u64 [sp + 0x10] = a3
 85568: 82 17 40                 a0 = u64 [sp + 0x40]
 85571: 7b 17 08                 u64 [sp + 0x8] = a0
 85574: 95 18 68                 a1 = sp + 0x68
 85577: 82 17 30                 a0 = u64 [sp + 0x30]
 85580: 7b 17                    u64 [sp] = a0
 85582: 64 57                    a0 = s0
 85584: 82 19 60                 a2 = u64 [sp + 0x60]
 85587: 82 1b 50                 a4 = u64 [sp + 0x50]
 85590: 64 ac                    a5 = a3
 85592: 82 14 58                 t2 = u64 [sp + 0x58]
 85595: 50 20 f6 03 fe 01        ra = 1014, jump @6861
      :                          @6814 [@dyn 507]
 85601: 82 1a 48                 a3 = u64 [sp + 0x48]
 85604: 28 c5                    jump @6811
      :                          @6815
 85606: 82 10 40                 ra = u64 [sp + 0x40]
 85609: 33 0b                    a4 = 0
 85611: c8 a0 09                 a2 = ra + a3
 85614: 28 17                    jump @6817
      :                          @6816
 85616: 49 11 50 08              u64 [sp + 80] = 0x8
 85620: 33 00 01                 ra = 0x1
 85623: 49 11 60 08              u64 [sp + 96] = 0x8
 85627: 49 11 58 08              u64 [sp + 88] = 0x8
 85631: 33 0b                    a4 = 0
 85633: c8 a0 09                 a2 = ra + a3
 85636: 01                       fallthrough
      :                          @6817
 85637: aa ba cd 00              jump @6831 if a3 == a4
      :                          @6818
 85641: 64 b8                    a1 = a4
 85643: c8 b0 07                 a0 = ra + a4
 85646: 7c 77                    a0 = u8 [a0]
 85648: 95 bb 01                 a4 = a4 + 0x1
 85651: 51 07 f2                 jump @6817 if a0 == 0
      :                          @6819
 85654: 7b 19 20                 u64 [sp + 0x20] = a2
 85657: 7b 1b 38                 u64 [sp + 0x38] = a4
 85660: c8 0b 0b                 a4 = a4 + ra
 85663: 7b 1b 30                 u64 [sp + 0x30] = a4
 85666: 33 03 c0 22 03           t1 = 0x322c0
 85671: 33 02 00 00 01           t0 = 0x10000
 85676: c8 23 04                 t2 = t1 + t0
 85679: 01                       fallthrough
      :                          @6820
 85680: 82 4b                    a4 = u64 [t2]
 85682: 95 bc 20                 a5 = a4 + 0x20
 85685: ac bc a2 01              jump @6859 if a5 <u a4
      :                          @6821
 85689: 95 c7 08                 a0 = a5 + 0x8
 85692: d8 c7 09                 a2 = a0 <u a5
 85695: d8 72 07                 a0 = t0 <u a0
 85698: d4 97 07                 a0 = a0 | a2
 85701: 52 07 92 01              jump @6859 if a0 != 0
      :                          @6822
 85705: c9 c3 07                 a0 = t1 - a5
 85708: c8 27 07                 a0 = a0 + t0
 85711: 84 79 07                 a2 = a0 & 0x7
 85714: c8 9c 0c                 a5 = a5 + a2
 85717: 01                       fallthrough
      :                          @6823
 85718: 82 45                    s0 = u64 [t2]
 85720: ab b5 d8                 jump @6820 if s0 != a4
      :                          @6824
 85723: 7b 4c                    u64 [t2] = a5
 85725: c9 97 02                 t0 = a0 - a2
 85728: 7b 28                    u64 [t0] = a1
 85730: 49 11 70 04              u64 [sp + 112] = 0x4
 85734: 7b 12 78                 u64 [sp + 0x78] = t0
 85737: 33 08 01                 a1 = 0x1
 85740: 7b 18 80 00              u64 [sp + 0x80] = a1
 85744: 82 17 20                 a0 = u64 [sp + 0x20]
 85747: 82 1c 38                 a5 = u64 [sp + 0x38]
 85750: 82 1b 30                 a4 = u64 [sp + 0x30]
 85753: 64 b6                    s1 = a4
 85755: 01                       fallthrough
      :                          @6825
 85756: aa 76 72                 jump @6833 if s1 == a0
      :                          @6826
 85759: 64 c5                    s0 = a5
 85761: 7c 69                    a2 = u8 [s1]
 85763: 95 6b 01                 a4 = s1 + 0x1
 85766: 95 cc 01                 a5 = a5 + 0x1
 85769: 64 b6                    s1 = a4
 85771: 51 09 f1                 jump @6825 if a2 == 0
      :                          @6827
 85774: 82 19 70                 a2 = u64 [sp + 0x70]
 85777: aa 98 16                 jump @6829 if a1 == a2
      :                          @6828
 85780: 97 89 03                 a2 = a1 << 0x3
 85783: c8 29 09                 a2 = a2 + t0
 85786: 7b 95                    u64 [a2] = s0
 85788: 95 88 01                 a1 = a1 + 0x1
 85791: 7b 18 80 00              u64 [sp + 0x80] = a1
 85795: 64 b6                    s1 = a4
 85797: 28 d7                    jump @6825
      :                          @6829
 85799: 95 17 70                 a0 = sp + 0x70
 85802: 7b 10 40                 u64 [sp + 0x40] = ra
 85805: 7b 1c 38                 u64 [sp + 0x38] = a5
 85808: 7b 1b 30                 u64 [sp + 0x30] = a4
 85811: 64 86                    s1 = a1
 85813: 50 20 f8 03 cb 06 ff     ra = 1016, jump @1653
      :                          @6830 [@dyn 508]
 85820: 64 68                    a1 = s1
 85822: 82 1b 30                 a4 = u64 [sp + 0x30]
 85825: 82 1c 38                 a5 = u64 [sp + 0x38]
 85828: 82 17 20                 a0 = u64 [sp + 0x20]
 85831: 82 10 40                 ra = u64 [sp + 0x40]
 85834: 82 1a 48                 a3 = u64 [sp + 0x48]
 85837: 82 12 78                 t0 = u64 [sp + 0x78]
 85840: 28 c4                    jump @6828
      :                          @6831
 85842: 82 18 28                 a1 = u64 [sp + 0x28]
 85845: 49 08                    u64 [a1 + 0] = 0
 85847: 49 18 08 08              u64 [a1 + 8] = 0x8
 85851: 49 18 10                 u64 [a1 + 16] = 0
 85854: 33 07 00 00 ff           a0 = 0xffffffffffff0000
 85859: 95 a8 ff ff fe           a1 = a3 + 0xfffffffffffeffff
 85864: ae 78 29                 jump @6834 if a1 >=u a0
      :                          @6832
 85867: 28 d8 00                 jump @6856
      :                          @6833
 85870: 82 17 80 00              a0 = u64 [sp + 0x80]
 85874: 82 18 78                 a1 = u64 [sp + 0x78]
 85877: 82 19 70                 a2 = u64 [sp + 0x70]
 85880: 82 1b 28                 a4 = u64 [sp + 0x28]
 85883: 7b b7 10                 u64 [a4 + 0x10] = a0
 85886: 7b b8 08                 u64 [a4 + 0x8] = a1
 85889: 7b b9                    u64 [a4] = a2
 85891: 33 07 00 00 ff           a0 = 0xffffffffffff0000
 85896: 95 a8 ff ff fe           a1 = a3 + 0xfffffffffffeffff
 85901: ac 78 b6 00              jump @6856 if a1 <u a0
      :                          @6834
 85905: 33 07 c0 22 03           a0 = 0x322c0
 85910: 95 77 00 00 01           a0 = a0 + 0x10000
 85915: 01                       fallthrough
      :                          @6835
 85916: 82 78                    a1 = u64 [a0]
 85918: c9 87 09                 a2 = a0 - a1
 85921: ab 09 11                 jump @6839 if a2 != ra
      :                          @6836
 85924: c9 a8 09                 a2 = a1 - a3
 85927: 01                       fallthrough
      :                          @6837
 85928: 82 7c                    a5 = u64 [a0]
 85930: ab 8c f2                 jump @6835 if a5 != a1
      :                          @6838
 85933: 7b 79                    u64 [a0] = a2
 85935: 33 0b                    a4 = 0
 85937: 01                       fallthrough
      :                          @6839
 85938: 51 0a 91 00              jump @6856 if a3 == 0
      :                          @6840
 85942: 33 07 00 20              a0 = 0x2000
 85946: ac a7 89 00              jump @6856 if a0 <u a3
      :                          @6841
 85950: 97 a7 03                 a0 = a3 << 0x3
 85953: 33 08 c0 22 03           a1 = 0x322c0
 85958: 95 88 00 00 01           a1 = a1 + 0x10000
 85963: 01                       fallthrough
      :                          @6842
 85964: 82 89                    a2 = u64 [a1]
 85966: c9 98 0a                 a3 = a1 - a2
 85969: 82 1b 58                 a4 = u64 [sp + 0x58]
 85972: ab ba 1c                 jump @6846 if a3 != a4
      :                          @6843
 85975: c9 79 0a                 a3 = a2 - a0
 85978: 01                       fallthrough
      :                          @6844
 85979: 82 8b                    a4 = u64 [a1]
 85981: ab 9b ef                 jump @6842 if a4 != a2
      :                          @6845
 85984: 7b 8a                    u64 [a1] = a3
 85986: 33 0c                    a5 = 0
 85988: 33 08 c0 22 03           a1 = 0x322c0
 85993: 95 88 00 00 01           a1 = a1 + 0x10000
 85998: 28 0d                    jump @6847
      :                          @6846
 86000: 33 08 c0 22 03           a1 = 0x322c0
 86005: 95 88 00 00 01           a1 = a1 + 0x10000
 86010: 01                       fallthrough
      :                          @6847
 86011: 82 89                    a2 = u64 [a1]
 86013: c9 98 0a                 a3 = a1 - a2
 86016: 82 1b 50                 a4 = u64 [sp + 0x50]
 86019: ab ba 1c                 jump @6851 if a3 != a4
      :                          @6848
 86022: c9 79 0a                 a3 = a2 - a0
 86025: 01                       fallthrough
      :                          @6849
 86026: 82 8b                    a4 = u64 [a1]
 86028: ab 9b ef                 jump @6847 if a4 != a2
      :                          @6850
 86031: 7b 8a                    u64 [a1] = a3
 86033: 33 0c                    a5 = 0
 86035: 33 08 c0 22 03           a1 = 0x322c0
 86040: 95 88 00 00 01           a1 = a1 + 0x10000
 86045: 28 0d                    jump @6852
      :                          @6851
 86047: 33 08 c0 22 03           a1 = 0x322c0
 86052: 95 88 00 00 01           a1 = a1 + 0x10000
 86057: 01                       fallthrough
      :                          @6852
 86058: 82 89                    a2 = u64 [a1]
 86060: c9 98 0a                 a3 = a1 - a2
 86063: 82 1b 60                 a4 = u64 [sp + 0x60]
 86066: ab ba 11                 jump @6856 if a3 != a4
      :                          @6853
 86069: c9 79 0a                 a3 = a2 - a0
 86072: 01                       fallthrough
      :                          @6854
 86073: 82 8b                    a4 = u64 [a1]
 86075: ab 9b ef                 jump @6852 if a4 != a2
      :                          @6855
 86078: 7b 8a                    u64 [a1] = a3
 86080: 33 0c                    a5 = 0
 86082: 01                       fallthrough
      :                          @6856
 86083: 82 10 98 00              ra = u64 [sp + 0x98]
 86087: 82 15 90 00              s0 = u64 [sp + 0x90]
 86091: 82 16 88 00              s1 = u64 [sp + 0x88]
 86095: 95 11 a0 00              sp = sp + 0xa0
 86099: 32 00                    ret
      :                          @6857
 86101: 00                       trap
      :                          @6858
 86102: 00                       trap
      :                          @6859
 86103: 00                       trap
      :                          @6860
 86104: 00                       trap
      :                          @6861
 86105: 95 11 38 ff              sp = sp + 0xffffffffffffff38
 86109: 7b 10 c0 00              u64 [sp + 0xc0] = ra
 86113: 7b 15 b8 00              u64 [sp + 0xb8] = s0
 86117: 7b 16 b0 00              u64 [sp + 0xb0] = s1
 86121: 82 86                    s1 = u64 [a1]
 86123: 7b 14 78                 u64 [sp + 0x78] = t2
 86126: 64 72                    t0 = a0
 86128: 95 64 01                 t2 = s1 + 0x1
 86131: 7b 18 70                 u64 [sp + 0x70] = a1
 86134: 7b 84                    u64 [a1] = t2
 86136: ae a7 94 01              jump @6887 if a0 >=u a3
      :                          @6862
 86140: 97 23 03                 t1 = t0 << 0x3
 86143: c8 39 07                 a0 = a2 + t1
 86146: 7b 17 20                 u64 [sp + 0x20] = a0
 86149: 7b 74                    u64 [a0] = t2
 86151: ae c2 86 01              jump @6888 if t0 >=u a5
      :                          @6863
 86155: 82 15 e0 00              s0 = u64 [sp + 0xe0]
 86159: 82 58 10                 a1 = u64 [s0 + 0x10]
 86162: c8 3b 07                 a0 = a4 + t1
 86165: 7b 17 88 00              u64 [sp + 0x88] = a0
 86169: 7b 74                    u64 [a0] = t2
 86171: ae 82 73 01              jump @6889 if t0 >=u a1
      :                          @6864
 86175: 7b 15 68                 u64 [sp + 0x68] = s0
 86178: 82 55 08                 s0 = u64 [s0 + 0x8]
 86181: 96 28 18                 a1 = t0 * 0x18
 86184: c8 58 08                 a1 = a1 + s0
 86187: 82 85 10                 s0 = u64 [a1 + 0x10]
 86190: 51 05 4a 01              jump @6884 if s0 == 0
      :                          @6865
 86194: 82 17 d8 00              a0 = u64 [sp + 0xd8]
 86198: 7b 17 80 00              u64 [sp + 0x80] = a0
 86202: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 86206: 82 10 c8 00              ra = u64 [sp + 0xc8]
 86210: 82 86 08                 s1 = u64 [a1 + 0x8]
 86213: 7b 12 58                 u64 [sp + 0x58] = t0
 86216: 7b 10 50                 u64 [sp + 0x50] = ra
 86219: ae 02 44 01              jump @6890 if t0 >=u ra
      :                          @6866
 86223: 49 21 98 00              u64 [sp + 152] = 0
 86227: 82 18 78                 a1 = u64 [sp + 0x78]
 86230: c8 38 08                 a1 = a1 + t1
 86233: 7b 18 a0 00              u64 [sp + 0xa0] = a1
 86237: c8 27 08                 a1 = a0 + t0
 86240: 7b 18 28                 u64 [sp + 0x28] = a1
 86243: 97 55 03                 s0 = s0 << 0x3
 86246: 64 73                    t1 = a0
 86248: 7b 1a 48                 u64 [sp + 0x48] = a3
 86251: 7b 1c 60                 u64 [sp + 0x60] = a5
 86254: 7b 19 40                 u64 [sp + 0x40] = a2
 86257: 7b 17 38                 u64 [sp + 0x38] = a0
 86260: 7b 1b 30                 u64 [sp + 0x30] = a4
 86263: 28 1d                    jump @6870
      :                          @6867
 86265: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 86269: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 86272: 95 66 08                 s1 = s1 + 0x8
 86275: 52 05 11                 jump @6870 if s0 != 0
      :                          @6868
 86278: 28 f2 00                 jump @6884
      :                          @6869
 86281: e6 84 04                 t2 = minu(t2, a1)
 86284: 82 17 88 00              a0 = u64 [sp + 0x88]
 86288: 7b 74                    u64 [a0] = t2
 86290: 28 e7                    jump @6867
      :                          @6870
 86292: 7b 16 a8 00              u64 [sp + 0xa8] = s1
 86296: 82 66                    s1 = u64 [s1]
 86298: ae a6 42 01              jump @6895 if s1 >=u a3
      :                          @6871
 86302: 97 67 03                 a0 = s1 << 0x3
 86305: c8 79 08                 a1 = a2 + a0
 86308: 82 88                    a1 = u64 [a1]
 86310: 51 08 0e                 jump @6874 if a1 == 0
      :                          @6872
 86313: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 86317: 82 77                    a0 = u64 [a0]
 86319: ab 76 da                 jump @6869 if s1 != a0
      :                          @6873
 86322: 28 c7                    jump @6867
      :                          @6874
 86324: ae 06 29 01              jump @6896 if s1 >=u ra
      :                          @6875
 86328: 82 14 78                 t2 = u64 [sp + 0x78]
 86331: 7b 17 90 00              u64 [sp + 0x90] = a0
 86335: c8 47 07                 a0 = a0 + t2
 86338: 7b 72                    u64 [a0] = t0
 86340: 82 17 68                 a0 = u64 [sp + 0x68]
 86343: 7b 17 18                 u64 [sp + 0x18] = a0
 86346: 82 17 80 00              a0 = u64 [sp + 0x80]
 86350: 7b 17 10                 u64 [sp + 0x10] = a0
 86353: 7b 13 08                 u64 [sp + 0x8] = t1
 86356: 7b 10                    u64 [sp] = ra
 86358: 64 67                    a0 = s1
 86360: 82 18 70                 a1 = u64 [sp + 0x70]
 86363: 50 20 fa 03 fe fe        ra = 1018, jump @6861
      :                          @6876 [@dyn 509]
 86369: 82 1c 60                 a5 = u64 [sp + 0x60]
 86372: ae c6 a6 00              jump @6885 if s1 >=u a5
      :                          @6877
 86376: 82 19 88 00              a2 = u64 [sp + 0x88]
 86380: 82 92                    t0 = u64 [a2]
 86382: 82 18 90 00              a1 = u64 [sp + 0x90]
 86386: 82 17 30                 a0 = u64 [sp + 0x30]
 86389: c8 78 08                 a1 = a1 + a0
 86392: 82 8a                    a3 = u64 [a1]
 86394: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 86398: 82 b6                    s1 = u64 [a4]
 86400: 82 1b 98 00              a4 = u64 [sp + 0x98]
 86404: 83 bb 01                 i32 a4 = a4 + 0x1
 86407: e6 a2 04                 t2 = minu(t0, a3)
 86410: 88 6a ff                 a3 = s1 <u 0xffffffffffffffff
 86413: 7b 1b 98 00              u64 [sp + 0x98] = a4
 86417: 89 bb 02                 a4 = a4 <s 0x2
 86420: d4 ba 0a                 a3 = a3 | a4
 86423: 7b 94                    u64 [a2] = t2
 86425: 64 7b                    a4 = a0
 86427: 52 0a 1f                 jump @6880 if a3 != 0
      :                          @6878
 86430: 82 12 58                 t0 = u64 [sp + 0x58]
 86433: 82 1a 48                 a3 = u64 [sp + 0x48]
 86436: 82 19 40                 a2 = u64 [sp + 0x40]
 86439: 82 10 50                 ra = u64 [sp + 0x50]
 86442: 82 17 80 00              a0 = u64 [sp + 0x80]
 86446: 82 13 38                 t1 = u64 [sp + 0x38]
 86449: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 86453: ac 72 31                 jump @6883 if t0 <u a0
      :                          @6879
 86456: 28 53                    jump @6886
      :                          @6880
 86458: 82 12 58                 t0 = u64 [sp + 0x58]
 86461: 82 1a 48                 a3 = u64 [sp + 0x48]
 86464: 82 19 40                 a2 = u64 [sp + 0x40]
 86467: 82 10 50                 ra = u64 [sp + 0x50]
 86470: 82 13 38                 t1 = u64 [sp + 0x38]
 86473: 33 07 ff                 a0 = 0xffffffffffffffff
 86476: aa 76 2d ff              jump @6867 if s1 == a0
      :                          @6881
 86480: 82 88                    a1 = u64 [a1]
 86482: 82 17 20                 a0 = u64 [sp + 0x20]
 86485: 82 77                    a0 = u64 [a0]
 86487: ac 78 22 ff              jump @6867 if a1 <u a0
      :                          @6882
 86491: 82 17 80 00              a0 = u64 [sp + 0x80]
 86495: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 86499: ae 72 28                 jump @6886 if t0 >=u a0
      :                          @6883
 86502: 82 17 28                 a0 = u64 [sp + 0x28]
 86505: 33 08 01                 a1 = 0x1
 86508: 78 78                    u8 [a0] = a1
 86510: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 86513: 95 66 08                 s1 = s1 + 0x8
 86516: 52 05 20 ff              jump @6870 if s0 != 0
      :                          @6884
 86520: 82 10 c0 00              ra = u64 [sp + 0xc0]
 86524: 82 15 b8 00              s0 = u64 [sp + 0xb8]
 86528: 82 16 b0 00              s1 = u64 [sp + 0xb0]
 86532: 95 11 c8 00              sp = sp + 0xc8
 86536: 32 00                    ret
      :                          @6885
 86538: 00                       trap
      :                          @6886
 86539: 00                       trap
      :                          @6887
 86540: 00                       trap
      :                          @6888
 86541: 00                       trap
      :                          @6889
 86542: 00                       trap
      :                          @6890
 86543: 82 66                    s1 = u64 [s1]
 86545: ae a6 4b                 jump @6895 if s1 >=u a3
      :                          @6891
 86548: 64 78                    a1 = a0
 86550: 97 65 03                 s0 = s1 << 0x3
 86553: c8 59 07                 a0 = a2 + s0
 86556: 82 77                    a0 = u64 [a0]
 86558: 52 07 40                 jump @6897 if a0 != 0
      :                          @6892
 86561: ae 06 3c                 jump @6896 if s1 >=u ra
      :                          @6893
 86564: 82 14 78                 t2 = u64 [sp + 0x78]
 86567: c8 54 07                 a0 = t2 + s0
 86570: 7b 72                    u64 [a0] = t0
 86572: 82 17 68                 a0 = u64 [sp + 0x68]
 86575: 7b 17 18                 u64 [sp + 0x18] = a0
 86578: 82 17 80 00              a0 = u64 [sp + 0x80]
 86582: 7b 17 10                 u64 [sp + 0x10] = a0
 86585: 7b 18 08                 u64 [sp + 0x8] = a1
 86588: 7b 10                    u64 [sp] = ra
 86590: 64 67                    a0 = s1
 86592: 82 18 70                 a1 = u64 [sp + 0x70]
 86595: 64 b6                    s1 = a4
 86597: 50 20 fc 03 14 fe        ra = 1020, jump @6861
      :                          @6894 [@dyn 510]
 86603: 82 19 88 00              a2 = u64 [sp + 0x88]
 86607: 82 97                    a0 = u64 [a2]
 86609: c8 65 05                 s0 = s0 + s1
 86612: 82 58                    a1 = u64 [s0]
 86614: e6 87 07                 a0 = minu(a0, a1)
 86617: 7b 97                    u64 [a2] = a0
 86619: 00                       trap
      :                          @6895
 86620: 00                       trap
      :                          @6896
 86621: 00                       trap
      :                          @6897
 86622: 00                       trap
      :                          @6898
 86623: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 86627: 7b 10 88 00              u64 [sp + 0x88] = ra
 86631: 7b 15 80 00              u64 [sp + 0x80] = s0
 86635: 7b 16 78                 u64 [sp + 0x78] = s1
 86638: 7b 18 28                 u64 [sp + 0x28] = a1
 86641: 82 89 10                 a2 = u64 [a1 + 0x10]
 86644: 49 11 58                 u64 [sp + 88] = 0
 86647: 51 09 35 01              jump @6921 if a2 == 0
      :                          @6899
 86651: 7b 17 18                 u64 [sp + 0x18] = a0
 86654: 98 97 3c                 a0 = a2 >> 0x3c
 86657: 52 07 4a 02              jump @6947 if a0 != 0
      :                          @6900
 86661: 88 77 01                 a0 = a0 <u 0x1
 86664: 7b 19 50                 u64 [sp + 0x50] = a2
 86667: 97 99 03                 a2 = a2 << 0x3
 86670: 97 72 03                 t0 = a0 << 0x3
 86673: 33 04 c0 22 03           t2 = 0x322c0
 86678: 33 03 00 00 01           t1 = 0x10000
 86683: c8 34 0a                 a3 = t2 + t1
 86686: 01                       fallthrough
      :                          @6901
 86687: 82 ab                    a4 = u64 [a3]
 86689: c8 9b 0c                 a5 = a4 + a2
 86692: ac bc 25 02              jump @6945 if a5 <u a4
      :                          @6902
 86696: c8 2c 07                 a0 = a5 + t0
 86699: d8 c7 06                 s1 = a0 <u a5
 86702: d8 73 07                 a0 = t1 <u a0
 86705: d4 67 07                 a0 = a0 | s1
 86708: 52 07 15 02              jump @6945 if a0 != 0
      :                          @6903
 86712: c9 c4 06                 s1 = t2 - a5
 86715: c8 36 08                 a1 = s1 + t1
 86718: 84 86 07                 s1 = a1 & 0x7
 86721: c8 6c 0c                 a5 = a5 + s1
 86724: 01                       fallthrough
      :                          @6904
 86725: 82 a7                    a0 = u64 [a3]
 86727: ab b7 d8                 jump @6901 if a0 != a4
      :                          @6905
 86730: 7b ac                    u64 [a3] = a5
 86732: 33 05                    s0 = 0
 86734: c9 68 07                 a0 = a1 - s1
 86737: 7b 17 40                 u64 [sp + 0x40] = a0
 86740: 33 08                    a1 = 0
 86742: 7b 19 30                 u64 [sp + 0x30] = a2
 86745: 50 20 fe 03 80 b8 01     ra = 1022, jump @13675
      :                          @6906 [@dyn 511]
 86752: 82 19 30                 a2 = u64 [sp + 0x30]
 86755: 33 03 c0 22 03           t1 = 0x322c0
 86760: 33 02 00 00 01           t0 = 0x10000
 86765: c8 23 07                 a0 = t1 + t0
 86768: 01                       fallthrough
      :                          @6907
 86769: 82 7a                    a3 = u64 [a0]
 86771: c8 9a 0b                 a4 = a3 + a2
 86774: ac ab d3 01              jump @6945 if a4 <u a3
      :                          @6908
 86778: 95 b8 08                 a1 = a4 + 0x8
 86781: d8 b8 0c                 a5 = a1 <u a4
 86784: d8 82 08                 a1 = t0 <u a1
 86787: d4 c8 08                 a1 = a1 | a5
 86790: 52 08 c3 01              jump @6945 if a1 != 0
      :                          @6909
 86794: c9 b3 08                 a1 = t1 - a4
 86797: c8 28 08                 a1 = a1 + t0
 86800: 84 8c 07                 a5 = a1 & 0x7
 86803: c8 cb 0b                 a4 = a4 + a5
 86806: 01                       fallthrough
      :                          @6910
 86807: 82 75                    s0 = u64 [a0]
 86809: ab a5 d8                 jump @6907 if s0 != a3
      :                          @6911
 86812: 7b 7b                    u64 [a0] = a4
 86814: 33 06                    s1 = 0
 86816: c9 c8 07                 a0 = a1 - a5
 86819: 7b 17 38                 u64 [sp + 0x38] = a0
 86822: 33 08                    a1 = 0
 86824: 50 20 00 04 31 b8 01     ra = 1024, jump @13675
      :                          @6912 [@dyn 512]
 86831: 82 13 30                 t1 = u64 [sp + 0x30]
 86834: 33 07 c0 22 03           a0 = 0x322c0
 86839: 33 02 00 00 01           t0 = 0x10000
 86844: c8 27 09                 a2 = a0 + t0
 86847: 01                       fallthrough
      :                          @6913
 86848: 82 96                    s1 = u64 [a2]
 86850: c8 36 0a                 a3 = s1 + t1
 86853: ac 6a 85 01              jump @6946 if a3 <u s1
      :                          @6914
 86857: 95 ab 08                 a4 = a3 + 0x8
 86860: d8 ab 0c                 a5 = a4 <u a3
 86863: d8 b2 0b                 a4 = t0 <u a4
 86866: d4 cb 0b                 a4 = a4 | a5
 86869: 52 0b 75 01              jump @6946 if a4 != 0
      :                          @6915
 86873: c9 a7 0b                 a4 = a0 - a3
 86876: c8 2b 0b                 a4 = a4 + t0
 86879: 84 b5 07                 s0 = a4 & 0x7
 86882: c8 5a 0a                 a3 = a3 + s0
 86885: 01                       fallthrough
      :                          @6916
 86886: 82 9c                    a5 = u64 [a2]
 86888: ab 6c d8                 jump @6913 if a5 != s1
      :                          @6917
 86891: 7b 9a                    u64 [a2] = a3
 86893: 33 08                    a1 = 0
 86895: 01                       fallthrough
      :                          @6918
 86896: c9 5b 0c                 a5 = a4 - s0
 86899: 82 1a 50                 a3 = u64 [sp + 0x50]
 86902: 7b 1c 48                 u64 [sp + 0x48] = a5
 86905: 53 1a 02 4a              jump @6922 if a3 <u 2
      :                          @6919
 86909: 95 39 f8                 a2 = t1 + 0xfffffffffffffff8
 86912: 33 08 ff 00              a1 = 0xff
 86916: 64 c7                    a0 = a5
 86918: 50 20 02 04 d3 b7 01     ra = 1026, jump @13675
      :                          @6920 [@dyn 513]
 86925: 82 1c 48                 a5 = u64 [sp + 0x48]
 86928: 82 1a 50                 a3 = u64 [sp + 0x50]
 86931: 82 13 30                 t1 = u64 [sp + 0x30]
 86934: c8 65 05                 s0 = s0 + s1
 86937: 33 07 c0 22 04           a0 = 0x422c0
 86942: c9 57 07                 a0 = a0 - s0
 86945: 33 08 ff                 a1 = 0xffffffffffffffff
 86948: 7b 78 f8                 u64 [a0 + 0xfffffffffffffff8] = a1
 86951: 7b 1a 20                 u64 [sp + 0x20] = a3
 86954: 28 21                    jump @6923
      :                          @6921
 86956: 49 11 60                 u64 [sp + 96] = 0
 86959: 33 08 08                 a1 = 0x8
 86962: 7b 18 68                 u64 [sp + 0x68] = a1
 86965: 49 11 70                 u64 [sp + 112] = 0
 86968: 49 17 10                 u64 [a0 + 16] = 0
 86971: 7b 78 08                 u64 [a0 + 0x8] = a1
 86974: 49 07                    u64 [a0 + 0] = 0
 86976: 28 f8 00                 jump @6944
      :                          @6922
 86979: 49 0c ff                 u64 [a5 + 0] = 0xffffffffffffffff
 86982: 49 11 20 01              u64 [sp + 32] = 0x1
 86986: 01                       fallthrough
      :                          @6923
 86987: 33 06                    s1 = 0
 86989: 49 11 60                 u64 [sp + 96] = 0
 86992: 49 11 68 08              u64 [sp + 104] = 0x8
 86996: 49 11 70                 u64 [sp + 112] = 0
 86999: 82 15 40                 s0 = u64 [sp + 0x40]
 87002: 28 0b                    jump @6925
      :                          @6924
 87004: 95 66 01                 s1 = s1 + 0x1
 87007: 95 55 08                 s0 = s0 + 0x8
 87010: aa 6a 3b                 jump @6928 if a3 == s1
      :                          @6925
 87013: 82 57                    a0 = u64 [s0]
 87015: 52 07 f5                 jump @6924 if a0 != 0
      :                          @6926
 87018: 95 17 60                 a0 = sp + 0x60
 87021: 7b 17 10                 u64 [sp + 0x10] = a0
 87024: 82 17 28                 a0 = u64 [sp + 0x28]
 87027: 7b 17 08                 u64 [sp + 0x8] = a0
 87030: 95 18 58                 a1 = sp + 0x58
 87033: 82 17 20                 a0 = u64 [sp + 0x20]
 87036: 7b 17                    u64 [sp] = a0
 87038: 64 67                    a0 = s1
 87040: 82 19 40                 a2 = u64 [sp + 0x40]
 87043: 82 1b 38                 a4 = u64 [sp + 0x38]
 87046: 82 1c 50                 a5 = u64 [sp + 0x50]
 87049: 82 14 48                 t2 = u64 [sp + 0x48]
 87052: 50 20 04 04 c0 00        ra = 1028, jump @6948
      :                          @6927 [@dyn 514]
 87058: 82 1c 48                 a5 = u64 [sp + 0x48]
 87061: 82 1a 50                 a3 = u64 [sp + 0x50]
 87064: 82 13 30                 t1 = u64 [sp + 0x30]
 87067: 28 c1                    jump @6924
      :                          @6928
 87069: 82 17 70                 a0 = u64 [sp + 0x70]
 87072: 82 18 68                 a1 = u64 [sp + 0x68]
 87075: 82 19 60                 a2 = u64 [sp + 0x60]
 87078: 82 1b 18                 a4 = u64 [sp + 0x18]
 87081: 7b b7 10                 u64 [a4 + 0x10] = a0
 87084: 7b b8 08                 u64 [a4 + 0x8] = a1
 87087: 33 07 00 20              a0 = 0x2000
 87091: 7b b9                    u64 [a4] = a2
 87093: ac a7 83 00              jump @6944 if a0 <u a3
      :                          @6929
 87097: 33 07 c0 22 03           a0 = 0x322c0
 87102: 95 77 00 00 01           a0 = a0 + 0x10000
 87107: 01                       fallthrough
      :                          @6930
 87108: 82 78                    a1 = u64 [a0]
 87110: c9 87 09                 a2 = a0 - a1
 87113: ab c9 1c                 jump @6934 if a2 != a5
      :                          @6931
 87116: c9 38 09                 a2 = a1 - t1
 87119: 01                       fallthrough
      :                          @6932
 87120: 82 7a                    a3 = u64 [a0]
 87122: ab 8a f2                 jump @6930 if a3 != a1
      :                          @6933
 87125: 7b 79                    u64 [a0] = a2
 87127: 33 0b                    a4 = 0
 87129: 33 07 c0 22 03           a0 = 0x322c0
 87134: 95 77 00 00 01           a0 = a0 + 0x10000
 87139: 28 0d                    jump @6935
      :                          @6934
 87141: 33 07 c0 22 03           a0 = 0x322c0
 87146: 95 77 00 00 01           a0 = a0 + 0x10000
 87151: 01                       fallthrough
      :                          @6935
 87152: 82 78                    a1 = u64 [a0]
 87154: c9 87 09                 a2 = a0 - a1
 87157: 82 1a 38                 a3 = u64 [sp + 0x38]
 87160: ab a9 1c                 jump @6939 if a2 != a3
      :                          @6936
 87163: c9 38 09                 a2 = a1 - t1
 87166: 01                       fallthrough
      :                          @6937
 87167: 82 7a                    a3 = u64 [a0]
 87169: ab 8a ef                 jump @6935 if a3 != a1
      :                          @6938
 87172: 7b 79                    u64 [a0] = a2
 87174: 33 0b                    a4 = 0
 87176: 33 07 c0 22 03           a0 = 0x322c0
 87181: 95 77 00 00 01           a0 = a0 + 0x10000
 87186: 28 0d                    jump @6940
      :                          @6939
 87188: 33 07 c0 22 03           a0 = 0x322c0
 87193: 95 77 00 00 01           a0 = a0 + 0x10000
 87198: 01                       fallthrough
      :                          @6940
 87199: 82 78                    a1 = u64 [a0]
 87201: c9 87 09                 a2 = a0 - a1
 87204: 82 1a 40                 a3 = u64 [sp + 0x40]
 87207: ab a9 11                 jump @6944 if a2 != a3
      :                          @6941
 87210: c9 38 09                 a2 = a1 - t1
 87213: 01                       fallthrough
      :                          @6942
 87214: 82 7a                    a3 = u64 [a0]
 87216: ab 8a ef                 jump @6940 if a3 != a1
      :                          @6943
 87219: 7b 79                    u64 [a0] = a2
 87221: 33 0b                    a4 = 0
 87223: 01                       fallthrough
      :                          @6944
 87224: 82 10 88 00              ra = u64 [sp + 0x88]
 87228: 82 15 80 00              s0 = u64 [sp + 0x80]
 87232: 82 16 78                 s1 = u64 [sp + 0x78]
 87235: 95 11 90 00              sp = sp + 0x90
 87239: 32 00                    ret
      :                          @6945
 87241: 00                       trap
      :                          @6946
 87242: 00                       trap
      :                          @6947
 87243: 00                       trap
      :                          @6948
 87244: 95 11 50 ff              sp = sp + 0xffffffffffffff50
 87248: 7b 10 a8 00              u64 [sp + 0xa8] = ra
 87252: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 87256: 7b 16 98 00              u64 [sp + 0x98] = s1
 87260: 82 86                    s1 = u64 [a1]
 87262: 7b 14 58                 u64 [sp + 0x58] = t2
 87265: 7b 1b 90 00              u64 [sp + 0x90] = a4
 87269: 95 64 01                 t2 = s1 + 0x1
 87272: 7b 18 50                 u64 [sp + 0x50] = a1
 87275: 7b 84                    u64 [a1] = t2
 87277: ae a7 6f 01              jump @6974 if a0 >=u a3
      :                          @6949
 87281: 97 73 03                 t1 = a0 << 0x3
 87284: c8 39 08                 a1 = a2 + t1
 87287: 7b 18 48                 u64 [sp + 0x48] = a1
 87290: 7b 84                    u64 [a1] = t2
 87292: ae c7 61 01              jump @6975 if a0 >=u a5
      :                          @6950
 87296: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 87300: 82 b8 10                 a1 = u64 [a4 + 0x10]
 87303: 82 16 90 00              s1 = u64 [sp + 0x90]
 87307: c8 36 06                 s1 = s1 + t1
 87310: 7b 16 70                 u64 [sp + 0x70] = s1
 87313: 7b 64                    u64 [s1] = t2
 87315: ae 87 47 01              jump @6972 if a0 >=u a1
      :                          @6951
 87319: 7b 1c 88 00              u64 [sp + 0x88] = a5
 87323: 82 b8 08                 a1 = u64 [a4 + 0x8]
 87326: 96 7c 18                 a5 = a0 * 0x18
 87329: c8 c8 08                 a1 = a1 + a5
 87332: 82 86 10                 s1 = u64 [a1 + 0x10]
 87335: 51 06 1e 01              jump @6968 if s1 == 0
      :                          @6952
 87339: 82 1c c0 00              a5 = u64 [sp + 0xc0]
 87343: 7b 1c 68                 u64 [sp + 0x68] = a5
 87346: 82 10 b0 00              ra = u64 [sp + 0xb0]
 87350: 82 85 08                 s0 = u64 [a1 + 0x8]
 87353: 82 18 58                 a1 = u64 [sp + 0x58]
 87356: c8 38 08                 a1 = a1 + t1
 87359: 7b 18 60                 u64 [sp + 0x60] = a1
 87362: 97 6c 03                 a5 = s1 << 0x3
 87365: 7b 17 38                 u64 [sp + 0x38] = a0
 87368: 7b 1a 30                 u64 [sp + 0x30] = a3
 87371: 7b 19 28                 u64 [sp + 0x28] = a2
 87374: 7b 1b 40                 u64 [sp + 0x40] = a4
 87377: 7b 10 20                 u64 [sp + 0x20] = ra
 87380: 28 23                    jump @6955
      :                          @6953
 87382: 82 17 38                 a0 = u64 [sp + 0x38]
 87385: 82 1a 30                 a3 = u64 [sp + 0x30]
 87388: 82 19 28                 a2 = u64 [sp + 0x28]
 87391: 82 1b 40                 a4 = u64 [sp + 0x40]
 87394: 82 10 20                 ra = u64 [sp + 0x20]
 87397: 82 15 78                 s0 = u64 [sp + 0x78]
 87400: 82 1c 80 00              a5 = u64 [sp + 0x80]
 87404: 01                       fallthrough
      :                          @6954
 87405: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 87408: 95 55 08                 s0 = s0 + 0x8
 87411: 51 0c d2 00              jump @6968 if a5 == 0
      :                          @6955
 87415: 82 56                    s1 = u64 [s0]
 87417: ae a6 de 00              jump @6969 if s1 >=u a3
      :                          @6956
 87421: 97 62 03                 t0 = s1 << 0x3
 87424: c8 29 08                 a1 = a2 + t0
 87427: 82 83                    t1 = u64 [a1]
 87429: 51 03 19                 jump @6960 if t1 == 0
      :                          @6957
 87432: ae 07 d0 00              jump @6970 if a0 >=u ra
      :                          @6958
 87436: 82 18 60                 a1 = u64 [sp + 0x60]
 87439: 82 88                    a1 = u64 [a1]
 87441: aa 86 dc                 jump @6954 if s1 == a1
      :                          @6959
 87444: e6 34 04                 t2 = minu(t2, t1)
 87447: 82 18 70                 a1 = u64 [sp + 0x70]
 87450: 7b 84                    u64 [a1] = t2
 87452: 28 d1                    jump @6954
      :                          @6960
 87454: 82 13 68                 t1 = u64 [sp + 0x68]
 87457: ae 06 b8 00              jump @6971 if s1 >=u ra
      :                          @6961
 87461: 7b 1c 80 00              u64 [sp + 0x80] = a5
 87465: 7b 15 78                 u64 [sp + 0x78] = s0
 87468: 82 14 58                 t2 = u64 [sp + 0x58]
 87471: 64 25                    s0 = t0
 87473: c8 24 08                 a1 = t2 + t0
 87476: 7b 87                    u64 [a1] = a0
 87478: 7b 13 10                 u64 [sp + 0x10] = t1
 87481: 7b 1b 08                 u64 [sp + 0x8] = a4
 87484: 7b 10                    u64 [sp] = ra
 87486: 64 67                    a0 = s1
 87488: 82 18 50                 a1 = u64 [sp + 0x50]
 87491: 82 1b 90 00              a4 = u64 [sp + 0x90]
 87495: 82 1c 88 00              a5 = u64 [sp + 0x88]
 87499: 50 20 06 04 01 ff        ra = 1030, jump @6948
      :                          @6962 [@dyn 515]
 87505: 82 18 88 00              a1 = u64 [sp + 0x88]
 87509: ae 86 86 00              jump @6973 if s1 >=u a1
      :                          @6963
 87513: 82 1a 70                 a3 = u64 [sp + 0x70]
 87516: 82 a7                    a0 = u64 [a3]
 87518: 82 18 90 00              a1 = u64 [sp + 0x90]
 87522: c8 58 08                 a1 = a1 + s0
 87525: 82 89                    a2 = u64 [a1]
 87527: e6 97 04                 t2 = minu(a0, a2)
 87530: 7b a4                    u64 [a3] = t2
 87532: 82 87                    a0 = u64 [a1]
 87534: 82 18 48                 a1 = u64 [sp + 0x48]
 87537: 82 88                    a1 = u64 [a1]
 87539: ae 78 63 ff              jump @6953 if a1 >=u a0
      :                          @6964
 87543: 82 13 68                 t1 = u64 [sp + 0x68]
 87546: 82 38 10                 a1 = u64 [t1 + 0x10]
 87549: 82 37                    a0 = u64 [t1]
 87551: ab 78 19                 jump @6967 if a1 != a0
      :                          @6965
 87554: 64 37                    a0 = t1
 87556: 7b 14 18                 u64 [sp + 0x18] = t2
 87559: 50 20 08 04 f9 fd fe     ra = 1032, jump @1605
      :                          @6966 [@dyn 516]
 87566: 82 14 18                 t2 = u64 [sp + 0x18]
 87569: 82 13 68                 t1 = u64 [sp + 0x68]
 87572: 82 38 10                 a1 = u64 [t1 + 0x10]
 87575: 01                       fallthrough
      :                          @6967
 87576: 82 17 38                 a0 = u64 [sp + 0x38]
 87579: 82 1a 30                 a3 = u64 [sp + 0x30]
 87582: 82 19 28                 a2 = u64 [sp + 0x28]
 87585: 82 10 20                 ra = u64 [sp + 0x20]
 87588: 82 15 78                 s0 = u64 [sp + 0x78]
 87591: 82 32 08                 t0 = u64 [t1 + 0x8]
 87594: 97 8c 04                 a5 = a1 << 0x4
 87597: c8 2c 0c                 a5 = a5 + t0
 87600: 7b c7                    u64 [a5] = a0
 87602: 7b c6 08                 u64 [a5 + 0x8] = s1
 87605: 95 88 01                 a1 = a1 + 0x1
 87608: 7b 38 10                 u64 [t1 + 0x10] = a1
 87611: 82 1b 40                 a4 = u64 [sp + 0x40]
 87614: 82 1c 80 00              a5 = u64 [sp + 0x80]
 87618: 28 2b ff                 jump @6954
      :                          @6968
 87621: 82 10 a8 00              ra = u64 [sp + 0xa8]
 87625: 82 15 a0 00              s0 = u64 [sp + 0xa0]
 87629: 82 16 98 00              s1 = u64 [sp + 0x98]
 87633: 95 11 b0 00              sp = sp + 0xb0
 87637: 32 00                    ret
      :                          @6969
 87639: 00                       trap
      :                          @6970
 87640: 00                       trap
      :                          @6971
 87641: 00                       trap
      :                          @6972
 87642: 00                       trap
      :                          @6973
 87643: 00                       trap
      :                          @6974
 87644: 00                       trap
      :                          @6975
 87645: 00                       trap
      :                          @6976
 87646: 95 11 c8 fe              sp = sp + 0xfffffffffffffec8
 87650: 7b 10 30 01              u64 [sp + 0x130] = ra
 87654: 7b 15 28 01              u64 [sp + 0x128] = s0
 87658: 7b 16 20 01              u64 [sp + 0x120] = s1
 87662: 64 92                    t0 = a2
 87664: 82 8c 10                 a5 = u64 [a1 + 0x10]
 87667: 82 99 10                 a2 = u64 [a2 + 0x10]
 87670: 7b 19 60                 u64 [sp + 0x60] = a2
 87673: d4 c9 09                 a2 = a2 | a5
 87676: 7b 1a 50                 u64 [sp + 0x50] = a3
 87679: 64 76                    s1 = a0
 87681: 7b 18 a0 00              u64 [sp + 0xa0] = a1
 87685: 7b 12 a8 00              u64 [sp + 0xa8] = t0
 87689: 7b 1b 58                 u64 [sp + 0x58] = a4
 87692: 52 09 b2 00              jump @6996 if a2 != 0
      :                          @6977
 87696: 82 b8 10                 a1 = u64 [a4 + 0x10]
 87699: 82 b7                    a0 = u64 [a4]
 87701: ab 78 17                 jump @6980 if a1 != a0
      :                          @6978
 87704: 64 b7                    a0 = a4
 87706: 50 20 0a 04 eb fb fe     ra = 1034, jump @1569
      :                          @6979 [@dyn 517]
 87713: 82 1b 58                 a4 = u64 [sp + 0x58]
 87716: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 87720: 82 b8 10                 a1 = u64 [a4 + 0x10]
 87723: 01                       fallthrough
      :                          @6980
 87724: 82 b7 08                 a0 = u64 [a4 + 0x8]
 87727: 82 69 10                 a2 = u64 [s1 + 0x10]
 87730: 96 8a 18                 a3 = a1 * 0x18
 87733: c8 a7 07                 a0 = a0 + a3
 87736: 7b 79 10                 u64 [a0 + 0x10] = a2
 87739: 82 69 08                 a2 = u64 [s1 + 0x8]
 87742: 7b 79 08                 u64 [a0 + 0x8] = a2
 87745: 82 69                    a2 = u64 [s1]
 87747: 7b 79                    u64 [a0] = a2
 87749: 82 29                    a2 = u64 [t0]
 87751: 95 88 01                 a1 = a1 + 0x1
 87754: 7b b8 10                 u64 [a4 + 0x10] = a1
 87757: 51 09 31                 jump @6987 if a2 == 0
      :                          @6981
 87760: 33 07 00 20              a0 = 0x2000
 87764: ac 97 2a                 jump @6987 if a0 <u a2
      :                          @6982
 87767: 82 27 08                 a0 = u64 [t0 + 0x8]
 87770: 97 98 03                 a1 = a2 << 0x3
 87773: 33 09 c0 22 03           a2 = 0x322c0
 87778: 95 99 00 00 01           a2 = a2 + 0x10000
 87783: 01                       fallthrough
      :                          @6983
 87784: 82 9a                    a3 = u64 [a2]
 87786: c9 a9 0b                 a4 = a2 - a3
 87789: ab 7b 11                 jump @6987 if a4 != a0
      :                          @6984
 87792: c9 8a 0b                 a4 = a3 - a1
 87795: 01                       fallthrough
      :                          @6985
 87796: 82 9c                    a5 = u64 [a2]
 87798: ab ac f2                 jump @6983 if a5 != a3
      :                          @6986
 87801: 7b 9b                    u64 [a2] = a4
 87803: 33 06                    s1 = 0
 87805: 01                       fallthrough
      :                          @6987
 87806: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 87810: 82 98                    a1 = u64 [a2]
 87812: 51 08 bb 05              jump @7101 if a1 == 0
      :                          @6988
 87816: 33 07 00 20              a0 = 0x2000
 87820: ac 87 b3 05              jump @7101 if a0 <u a1
      :                          @6989
 87824: 82 97 08                 a0 = u64 [a2 + 0x8]
 87827: 97 88 03                 a1 = a1 << 0x3
 87830: 33 09 c0 22 03           a2 = 0x322c0
 87835: 95 99 00 00 01           a2 = a2 + 0x10000
 87840: 01                       fallthrough
      :                          @6990
 87841: 82 9a                    a3 = u64 [a2]
 87843: c9 a9 0b                 a4 = a2 - a3
 87846: ab 7b 99 05              jump @7101 if a4 != a0
      :                          @6991
 87850: c9 8a 0b                 a4 = a3 - a1
 87853: 01                       fallthrough
      :                          @6992
 87854: 82 9c                    a5 = u64 [a2]
 87856: ab ac f1                 jump @6990 if a5 != a3
      :                          @6993
 87859: 7b 9b                    u64 [a2] = a4
 87861: 33 06                    s1 = 0
 87863: 01                       fallthrough
      :                          @6994
 87864: ab ac e9                 jump @6990 if a5 != a3
      :                          @6995
 87867: 28 84 05                 jump @7101
      :                          @6996
 87870: 7b 16 10                 u64 [sp + 0x10] = s1
 87873: 51 0c b5 04              jump @7073 if a5 == 0
      :                          @6997
 87877: 98 c7 3c                 a0 = a5 >> 0x3c
 87880: 52 07 8c 05              jump @7105 if a0 != 0
      :                          @6998
 87884: 82 88 08                 a1 = u64 [a1 + 0x8]
 87887: 88 72 01                 t0 = a0 <u 0x1
 87890: 7b 1c 08                 u64 [sp + 0x8] = a5
 87893: 97 c9 03                 a2 = a5 << 0x3
 87896: 97 22 03                 t0 = t0 << 0x3
 87899: 33 04 c0 22 03           t2 = 0x322c0
 87904: 33 03 00 00 01           t1 = 0x10000
 87909: c8 34 00                 ra = t2 + t1
 87912: 01                       fallthrough
      :                          @6999
 87913: 82 06                    s1 = u64 [ra]
 87915: c8 96 0c                 a5 = s1 + a2
 87918: ac 6c 65 05              jump @7104 if a5 <u s1
      :                          @7000
 87922: c8 2c 0a                 a3 = a5 + t0
 87925: d8 ca 05                 s0 = a3 <u a5
 87928: d8 a3 0a                 a3 = t1 <u a3
 87931: d4 5a 0a                 a3 = a3 | s0
 87934: 52 0a 55 05              jump @7104 if a3 != 0
      :                          @7001
 87938: c9 c4 05                 s0 = t2 - a5
 87941: c8 35 05                 s0 = s0 + t1
 87944: 84 5a 07                 a3 = s0 & 0x7
 87947: c8 ac 0c                 a5 = a5 + a3
 87950: 01                       fallthrough
      :                          @7002
 87951: 82 07                    a0 = u64 [ra]
 87953: ab 67 d8                 jump @6999 if a0 != s1
      :                          @7003
 87956: 7b 0c                    u64 [ra] = a5
 87958: 33 0b                    a4 = 0
 87960: c9 a5 05                 s0 = s0 - a3
 87963: 64 57                    a0 = s0
 87965: 7b 19 48                 u64 [sp + 0x48] = a2
 87968: 50 20 0c 04 8c b1 01     ra = 1036, jump @13621
      :                          @7004 [@dyn 518]
 87975: 82 17 10                 a0 = u64 [sp + 0x10]
 87978: 82 79 10                 a2 = u64 [a0 + 0x10]
 87981: 82 18 48                 a1 = u64 [sp + 0x48]
 87984: c8 58 08                 a1 = a1 + s0
 87987: 7b 18 30                 u64 [sp + 0x30] = a1
 87990: 82 77 08                 a0 = u64 [a0 + 0x8]
 87993: 7b 17 40                 u64 [sp + 0x40] = a0
 87996: 98 97 3c                 a0 = a2 >> 0x3c
 87999: 7b 17 20                 u64 [sp + 0x20] = a0
 88002: 88 77 01                 a0 = a0 <u 0x1
 88005: 7b 19 98 00              u64 [sp + 0x98] = a2
 88009: 97 99 03                 a2 = a2 << 0x3
 88012: 97 77 03                 a0 = a0 << 0x3
 88015: 7b 17 18                 u64 [sp + 0x18] = a0
 88018: 82 17 50                 a0 = u64 [sp + 0x50]
 88021: 82 78 10                 a1 = u64 [a0 + 0x10]
 88024: 7b 18 80 00              u64 [sp + 0x80] = a1
 88028: 82 77 08                 a0 = u64 [a0 + 0x8]
 88031: 7b 17 38                 u64 [sp + 0x38] = a0
 88034: 33 03 c0 22 03           t1 = 0x322c0
 88039: 33 06 00 00 01           s1 = 0x10000
 88044: c8 63 04                 t2 = t1 + s1
 88047: 82 17 08                 a0 = u64 [sp + 0x8]
 88050: 7b 17 b8 00              u64 [sp + 0xb8] = a0
 88054: 7b 15                    u64 [sp] = s0
 88056: 64 50                    ra = s0
 88058: 7b 19 28                 u64 [sp + 0x28] = a2
 88061: 7b 13 90 00              u64 [sp + 0x90] = t1
 88065: 7b 14 88 00              u64 [sp + 0x88] = t2
 88069: 28 3a                    jump @7006
      :                          @7005
 88071: 82 15 48                 s0 = u64 [sp + 0x48]
 88074: 82 19 28                 a2 = u64 [sp + 0x28]
 88077: 82 13 90 00              t1 = u64 [sp + 0x90]
 88081: 33 06 00 00 01           s1 = 0x10000
 88086: 82 14 88 00              t2 = u64 [sp + 0x88]
 88090: 82 10 68                 ra = u64 [sp + 0x68]
 88093: 82 27 08                 a0 = u64 [t0 + 0x8]
 88096: 95 00 08                 ra = ra + 0x8
 88099: 97 8a 03                 a3 = a1 << 0x3
 88102: c8 7a 0a                 a3 = a3 + a0
 88105: 82 1b b0 00              a4 = u64 [sp + 0xb0]
 88109: 7b ab                    u64 [a3] = a4
 88111: 95 88 01                 a1 = a1 + 0x1
 88114: 7b 18 60                 u64 [sp + 0x60] = a1
 88117: 7b 28 10                 u64 [t0 + 0x10] = a1
 88120: 82 18 30                 a1 = u64 [sp + 0x30]
 88123: aa 80 c0 03              jump @7074 if ra == a1
      :                          @7006
 88127: 82 07                    a0 = u64 [ra]
 88129: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 88133: 33 05 08                 s0 = 0x8
 88136: 82 17 98 00              a0 = u64 [sp + 0x98]
 88140: 51 07 41                 jump @7014 if a0 == 0
      :                          @7007
 88143: 82 17 20                 a0 = u64 [sp + 0x20]
 88146: 52 07 82 04              jump @7105 if a0 != 0
      :                          @7008
 88150: 82 12 18                 t0 = u64 [sp + 0x18]
 88153: 01                       fallthrough
      :                          @7009
 88154: 82 47                    a0 = u64 [t2]
 88156: c8 97 08                 a1 = a0 + a2
 88159: ac 78 74 04              jump @7104 if a1 <u a0
      :                          @7010
 88163: c8 28 0b                 a4 = a1 + t0
 88166: d8 8b 0a                 a3 = a4 <u a1
 88169: d8 b6 0b                 a4 = s1 <u a4
 88172: d4 ba 0a                 a3 = a3 | a4
 88175: 52 0a 64 04              jump @7104 if a3 != 0
      :                          @7011
 88179: c9 83 05                 s0 = t1 - a1
 88182: c8 65 05                 s0 = s0 + s1
 88185: 84 5a 07                 a3 = s0 & 0x7
 88188: c8 a8 08                 a1 = a1 + a3
 88191: 01                       fallthrough
      :                          @7012
 88192: 82 4b                    a4 = u64 [t2]
 88194: ab 7b d8                 jump @7009 if a4 != a0
      :                          @7013
 88197: 7b 48                    u64 [t2] = a1
 88199: 33 0c                    a5 = 0
 88201: c9 a5 05                 s0 = s0 - a3
 88204: 01                       fallthrough
      :                          @7014
 88205: 7b 10 68                 u64 [sp + 0x68] = ra
 88208: 64 57                    a0 = s0
 88210: 82 18 40                 a1 = u64 [sp + 0x40]
 88213: 50 20 0e 04 97 b0 01     ra = 1038, jump @13621
      :                          @7015 [@dyn 519]
 88220: 82 18 98 00              a1 = u64 [sp + 0x98]
 88224: 7b 18 c0 00              u64 [sp + 0xc0] = a1
 88228: 7b 15 c8 00              u64 [sp + 0xc8] = s0
 88232: 7b 18 d0 00              u64 [sp + 0xd0] = a1
 88236: 95 17 c0 00              a0 = sp + 0xc0
 88240: 50 20 10 04 57 fa fe     ra = 1040, jump @1581
      :                          @7016 [@dyn 520]
 88247: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 88251: 82 18 c8 00              a1 = u64 [sp + 0xc8]
 88255: 97 79 03                 a2 = a0 << 0x3
 88258: c8 98 08                 a1 = a1 + a2
 88261: 82 19 b0 00              a2 = u64 [sp + 0xb0]
 88265: 7b 89                    u64 [a1] = a2
 88267: 95 77 01                 a0 = a0 + 0x1
 88270: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 88274: 96 97 18                 a0 = a2 * 0x18
 88277: 82 18 38                 a1 = u64 [sp + 0x38]
 88280: c8 87 07                 a0 = a0 + a1
 88283: 95 7a 10                 a3 = a0 + 0x10
 88286: 95 7c 08                 a5 = a0 + 0x8
 88289: 82 17 80 00              a0 = u64 [sp + 0x80]
 88293: 7b 1a 78                 u64 [sp + 0x78] = a3
 88296: 7b 1c 70                 u64 [sp + 0x70] = a5
 88299: ae 79 1e 01              jump @7035 if a2 >=u a0
      :                          @7017
 88303: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 88307: 82 76 08                 s1 = u64 [a0 + 0x8]
 88310: 82 19 b8 00              a2 = u64 [sp + 0xb8]
 88314: 97 99 03                 a2 = a2 << 0x3
 88317: c8 96 0b                 a4 = s1 + a2
 88320: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 88324: 82 13 90 00              t1 = u64 [sp + 0x90]
 88328: 33 04 00 00 01           t2 = 0x10000
 88333: 82 10 88 00              ra = u64 [sp + 0x88]
 88337: 01                       fallthrough
      :                          @7018
 88338: 51 09 10 01              jump @7036 if a2 == 0
      :                          @7019
 88342: 82 67                    a0 = u64 [s1]
 88344: 82 a8                    a1 = u64 [a3]
 88346: ae 87 bc 03              jump @7107 if a0 >=u a1
      :                          @7020
 88350: 82 c8                    a1 = u64 [a5]
 88352: c8 78 08                 a1 = a1 + a0
 88355: 7c 88                    a1 = u8 [a1]
 88357: 95 66 08                 s1 = s1 + 0x8
 88360: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 88363: 51 08 e7                 jump @7018 if a1 == 0
      :                          @7021
 88366: 7b 1b 60                 u64 [sp + 0x60] = a4
 88369: 01                       fallthrough
      :                          @7022
 88370: 82 08                    a1 = u64 [ra]
 88372: 95 89 20                 a2 = a1 + 0x20
 88375: ac 89 9b 03              jump @7103 if a2 <u a1
      :                          @7023
 88379: 95 9a 08                 a3 = a2 + 0x8
 88382: d8 9a 0b                 a4 = a3 <u a2
 88385: d8 a4 0a                 a3 = t2 <u a3
 88388: d4 ba 0a                 a3 = a3 | a4
 88391: 52 0a 8b 03              jump @7103 if a3 != 0
      :                          @7024
 88395: c9 93 0a                 a3 = t1 - a2
 88398: c8 4a 0a                 a3 = a3 + t2
 88401: 84 ab 07                 a4 = a3 & 0x7
 88404: c8 b9 09                 a2 = a2 + a4
 88407: 01                       fallthrough
      :                          @7025
 88408: 82 0c                    a5 = u64 [ra]
 88410: ab 8c d8                 jump @7022 if a5 != a1
      :                          @7026
 88413: 7b 09                    u64 [ra] = a2
 88415: c9 ba 09                 a2 = a3 - a4
 88418: 7b 97                    u64 [a2] = a0
 88420: 49 21 08 01 04           u64 [sp + 264] = 0x4
 88425: 7b 19 10 01              u64 [sp + 0x110] = a2
 88429: 49 21 18 01 01           u64 [sp + 280] = 0x1
 88434: 82 1a 78                 a3 = u64 [sp + 0x78]
 88437: 82 1c 70                 a5 = u64 [sp + 0x70]
 88440: 82 1b 60                 a4 = u64 [sp + 0x60]
 88443: 49 21 b8 00 01           u64 [sp + 184] = 0x1
 88448: 01                       fallthrough
      :                          @7027
 88449: aa b6 6b                 jump @7034 if s1 == a4
      :                          @7028
 88452: 82 65                    s0 = u64 [s1]
 88454: 82 a8                    a1 = u64 [a3]
 88456: ae 85 49 03              jump @7102 if s0 >=u a1
      :                          @7029
 88460: 82 c7                    a0 = u64 [a5]
 88462: c8 57 07                 a0 = a0 + s0
 88465: 7c 77                    a0 = u8 [a0]
 88467: 95 66 08                 s1 = s1 + 0x8
 88470: 82 18 b8 00              a1 = u64 [sp + 0xb8]
 88474: 51 07 e7                 jump @7027 if a0 == 0
      :                          @7030
 88477: 82 17 08 01              a0 = u64 [sp + 0x108]
 88481: aa 78 18                 jump @7032 if a1 == a0
      :                          @7031
 88484: 97 87 03                 a0 = a1 << 0x3
 88487: c8 97 07                 a0 = a0 + a2
 88490: 7b 75                    u64 [a0] = s0
 88492: 95 88 01                 a1 = a1 + 0x1
 88495: 7b 18 18 01              u64 [sp + 0x118] = a1
 88499: 7b 18 b8 00              u64 [sp + 0xb8] = a1
 88503: 28 ca                    jump @7027
      :                          @7032
 88505: 95 17 08 01              a0 = sp + 0x108
 88509: 82 18 b8 00              a1 = u64 [sp + 0xb8]
 88513: 50 20 12 04 3f fc fe     ra = 1042, jump @1653
      :                          @7033 [@dyn 521]
 88520: 82 18 b8 00              a1 = u64 [sp + 0xb8]
 88524: 82 1b 60                 a4 = u64 [sp + 0x60]
 88527: 82 1c 70                 a5 = u64 [sp + 0x70]
 88530: 82 1a 78                 a3 = u64 [sp + 0x78]
 88533: 82 10 88 00              ra = u64 [sp + 0x88]
 88537: 33 04 00 00 01           t2 = 0x10000
 88542: 82 13 90 00              t1 = u64 [sp + 0x90]
 88546: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 88550: 82 19 10 01              a2 = u64 [sp + 0x110]
 88554: 28 ba                    jump @7031
      :                          @7034
 88556: 82 17 18 01              a0 = u64 [sp + 0x118]
 88560: 82 18 10 01              a1 = u64 [sp + 0x110]
 88564: 82 19 08 01              a2 = u64 [sp + 0x108]
 88568: 82 25 10                 s0 = u64 [t0 + 0x10]
 88571: 7b 17 e8 00              u64 [sp + 0xe8] = a0
 88575: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 88579: 7b 19 d8 00              u64 [sp + 0xd8] = a2
 88583: 28 2c                    jump @7037
      :                          @7035
 88585: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 88589: 82 13 90 00              t1 = u64 [sp + 0x90]
 88593: 33 04 00 00 01           t2 = 0x10000
 88598: 82 10 88 00              ra = u64 [sp + 0x88]
 88602: 82 17 b8 00              a0 = u64 [sp + 0xb8]
 88606: 52 07 b7 02              jump @7106 if a0 != 0
      :                          @7036
 88610: 49 21 d8 00              u64 [sp + 216] = 0
 88614: 49 21 e0 00 08           u64 [sp + 224] = 0x8
 88619: 49 21 e8 00              u64 [sp + 232] = 0
 88623: 82 15 60                 s0 = u64 [sp + 0x60]
 88626: 01                       fallthrough
      :                          @7037
 88627: 82 17 80 00              a0 = u64 [sp + 0x80]
 88631: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 88635: ae 78 f5 00              jump @7056 if a1 >=u a0
      :                          @7038
 88639: 82 22 08                 t0 = u64 [t0 + 0x8]
 88642: 97 59 03                 a2 = s0 << 0x3
 88645: c8 92 05                 s0 = t0 + a2
 88648: 82 1b 58                 a4 = u64 [sp + 0x58]
 88651: 01                       fallthrough
      :                          @7039
 88652: 51 09 eb 00              jump @7057 if a2 == 0
      :                          @7040
 88656: 82 27                    a0 = u64 [t0]
 88658: 82 a8                    a1 = u64 [a3]
 88660: ae 87 82 02              jump @7107 if a0 >=u a1
      :                          @7041
 88664: 82 c8                    a1 = u64 [a5]
 88666: c8 78 08                 a1 = a1 + a0
 88669: 7c 88                    a1 = u8 [a1]
 88671: 95 22 08                 t0 = t0 + 0x8
 88674: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 88677: 51 08 e7                 jump @7039 if a1 == 0
      :                          @7042
 88680: 7b 15 b8 00              u64 [sp + 0xb8] = s0
 88684: 01                       fallthrough
      :                          @7043
 88685: 82 08                    a1 = u64 [ra]
 88687: 95 89 20                 a2 = a1 + 0x20
 88690: ac 89 60 02              jump @7103 if a2 <u a1
      :                          @7044
 88694: 95 9a 08                 a3 = a2 + 0x8
 88697: d8 9a 0c                 a5 = a3 <u a2
 88700: d8 a4 0a                 a3 = t2 <u a3
 88703: d4 ca 0a                 a3 = a3 | a5
 88706: 52 0a 50 02              jump @7103 if a3 != 0
      :                          @7045
 88710: c9 93 0a                 a3 = t1 - a2
 88713: c8 4a 06                 s1 = a3 + t2
 88716: 84 6a 07                 a3 = s1 & 0x7
 88719: c8 a9 09                 a2 = a2 + a3
 88722: 01                       fallthrough
      :                          @7046
 88723: 82 0c                    a5 = u64 [ra]
 88725: ab 8c d8                 jump @7043 if a5 != a1
      :                          @7047
 88728: 7b 09                    u64 [ra] = a2
 88730: 33 05                    s0 = 0
 88732: c9 a6 03                 t1 = s1 - a3
 88735: 7b 37                    u64 [t1] = a0
 88737: 49 21 08 01 04           u64 [sp + 264] = 0x4
 88742: 7b 13 10 01              u64 [sp + 0x110] = t1
 88746: 33 09 01                 a2 = 0x1
 88749: 7b 19 18 01              u64 [sp + 0x118] = a2
 88753: 82 1a 78                 a3 = u64 [sp + 0x78]
 88756: 82 1c 70                 a5 = u64 [sp + 0x70]
 88759: 82 16 b8 00              s1 = u64 [sp + 0xb8]
 88763: 01                       fallthrough
      :                          @7048
 88764: aa 62 5a                 jump @7055 if t0 == s1
      :                          @7049
 88767: 82 25                    s0 = u64 [t0]
 88769: 82 a8                    a1 = u64 [a3]
 88771: ae 85 0e 02              jump @7102 if s0 >=u a1
      :                          @7050
 88775: 82 c7                    a0 = u64 [a5]
 88777: c8 57 07                 a0 = a0 + s0
 88780: 7c 77                    a0 = u8 [a0]
 88782: 95 22 08                 t0 = t0 + 0x8
 88785: 51 07 eb                 jump @7048 if a0 == 0
      :                          @7051
 88788: 82 17 08 01              a0 = u64 [sp + 0x108]
 88792: aa 79 14                 jump @7053 if a2 == a0
      :                          @7052
 88795: 97 97 03                 a0 = a2 << 0x3
 88798: c8 37 07                 a0 = a0 + t1
 88801: 7b 75                    u64 [a0] = s0
 88803: 95 99 01                 a2 = a2 + 0x1
 88806: 7b 19 18 01              u64 [sp + 0x118] = a2
 88810: 28 d2                    jump @7048
      :                          @7053
 88812: 95 17 08 01              a0 = sp + 0x108
 88816: 64 98                    a1 = a2
 88818: 64 26                    s1 = t0
 88820: 7b 19 60                 u64 [sp + 0x60] = a2
 88823: 50 20 14 04 09 fb fe     ra = 1044, jump @1653
      :                          @7054 [@dyn 522]
 88830: 82 19 60                 a2 = u64 [sp + 0x60]
 88833: 64 62                    t0 = s1
 88835: 82 16 b8 00              s1 = u64 [sp + 0xb8]
 88839: 82 1c 70                 a5 = u64 [sp + 0x70]
 88842: 82 1a 78                 a3 = u64 [sp + 0x78]
 88845: 82 1b 58                 a4 = u64 [sp + 0x58]
 88848: 82 13 10 01              t1 = u64 [sp + 0x110]
 88852: 28 c7                    jump @7052
      :                          @7055
 88854: 82 17 18 01              a0 = u64 [sp + 0x118]
 88858: 82 18 10 01              a1 = u64 [sp + 0x110]
 88862: 82 19 08 01              a2 = u64 [sp + 0x108]
 88866: 7b 17 00 01              u64 [sp + 0x100] = a0
 88870: 7b 18 f8 00              u64 [sp + 0xf8] = a1
 88874: 7b 19 f0 00              u64 [sp + 0xf0] = a2
 88878: 28 17                    jump @7058
      :                          @7056
 88880: 82 1b 58                 a4 = u64 [sp + 0x58]
 88883: 52 05 a2 01              jump @7106 if s0 != 0
      :                          @7057
 88887: 49 21 f0 00              u64 [sp + 240] = 0
 88891: 49 21 f8 00 08           u64 [sp + 248] = 0x8
 88896: 49 21 00 01              u64 [sp + 256] = 0
 88900: 01                       fallthrough
      :                          @7058
 88901: 95 17 c0 00              a0 = sp + 0xc0
 88905: 95 18 d8 00              a1 = sp + 0xd8
 88909: 95 19 f0 00              a2 = sp + 0xf0
 88913: 82 1a 50                 a3 = u64 [sp + 0x50]
 88916: 50 20 16 04 0a fb        ra = 1046, jump @6976
      :                          @7059 [@dyn 523]
 88922: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 88926: 82 73 10                 t1 = u64 [a0 + 0x10]
 88929: 51 03 2f                 jump @7064 if t1 == 0
      :                          @7060
 88932: 82 78 08                 a1 = u64 [a0 + 0x8]
 88935: 9a 3b                    a4 = -t1
 88937: 33 09 01                 a2 = 0x1
 88940: 33 0a 01                 a3 = 0x1
 88943: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 88947: 33 06 01                 s1 = 0x1
 88950: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 88954: 01                       fallthrough
      :                          @7061
 88955: 82 8c                    a5 = u64 [a1]
 88957: aa c5 20                 jump @7065 if s0 == a5
      :                          @7062
 88960: 95 aa 01                 a3 = a3 + 0x1
 88963: c8 ab 0c                 a5 = a4 + a3
 88966: 95 88 08                 a1 = a1 + 0x8
 88969: ab 6c f2                 jump @7061 if a5 != s1
      :                          @7063
 88972: 33 09                    a2 = 0
 88974: 28 42                    jump @7070
      :                          @7064
 88976: 33 0a                    a3 = 0
 88978: 33 09                    a2 = 0
 88980: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 88984: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 88988: 01                       fallthrough
      :                          @7065
 88989: aa a3 33                 jump @7070 if t1 == a3
      :                          @7066
 88992: 82 7b 08                 a4 = u64 [a0 + 0x8]
 88995: c9 a3 08                 a1 = t1 - a3
 88998: 97 aa 03                 a3 = a3 << 0x3
 89001: c8 ba 0a                 a3 = a3 + a4
 89004: 28 0e                    jump @7068
      :                          @7067
 89006: 95 99 01                 a2 = a2 + 0x1
 89009: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 89012: 95 aa 08                 a3 = a3 + 0x8
 89015: 51 08 19                 jump @7070 if a1 == 0
      :                          @7068
 89018: 82 ab                    a4 = u64 [a3]
 89020: aa b5 f2                 jump @7067 if s0 == a4
      :                          @7069
 89023: 97 9c 03                 a5 = a2 << 0x3
 89026: c9 ca 0c                 a5 = a3 - a5
 89029: 7b cb                    u64 [a5] = a4
 89031: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 89034: 95 aa 08                 a3 = a3 + 0x8
 89037: 52 08 ed                 jump @7068 if a1 != 0
      :                          @7070
 89040: 82 28 10                 a1 = u64 [t0 + 0x10]
 89043: 82 2a                    a3 = u64 [t0]
 89045: c9 93 09                 a2 = t1 - a2
 89048: 7b 19 b8 00              u64 [sp + 0xb8] = a2
 89052: 7b 79 10                 u64 [a0 + 0x10] = a2
 89055: ab a8 28 fc              jump @7005 if a1 != a3
      :                          @7071
 89059: 64 27                    a0 = t0
 89061: 50 20 18 04 22 f7 fe     ra = 1048, jump @1581
      :                          @7072 [@dyn 524]
 89068: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 89072: 82 28 10                 a1 = u64 [t0 + 0x10]
 89075: 28 14 fc                 jump @7005
      :                          @7073
 89078: 82 27 08                 a0 = u64 [t0 + 0x8]
 89081: 28 2d                    jump @7080
      :                          @7074
 89083: 82 19 08                 a2 = u64 [sp + 0x8]
 89086: 56 29 00 20 28           jump @7080 if a2 >u 8192
      :                          @7075
 89091: 33 08 c0 22 03           a1 = 0x322c0
 89096: 95 88 00 00 01           a1 = a1 + 0x10000
 89101: 82 16                    s1 = u64 [sp]
 89103: 01                       fallthrough
      :                          @7076
 89104: 82 89                    a2 = u64 [a1]
 89106: c9 98 0a                 a3 = a1 - a2
 89109: ab 6a 11                 jump @7080 if a3 != s1
      :                          @7077
 89112: c9 59 0a                 a3 = a2 - s0
 89115: 01                       fallthrough
      :                          @7078
 89116: 82 8b                    a4 = u64 [a1]
 89118: ab 9b f2                 jump @7076 if a4 != a2
      :                          @7079
 89121: 7b 8a                    u64 [a1] = a3
 89123: 33 0c                    a5 = 0
 89125: 01                       fallthrough
      :                          @7080
 89126: 82 28                    a1 = u64 [t0]
 89128: 51 08 2c                 jump @7087 if a1 == 0
      :                          @7081
 89131: 56 28 00 20 29           jump @7087 if a1 >u 8192
      :                          @7082
 89136: 97 88 03                 a1 = a1 << 0x3
 89139: 33 09 c0 22 03           a2 = 0x322c0
 89144: 95 99 00 00 01           a2 = a2 + 0x10000
 89149: 01                       fallthrough
      :                          @7083
 89150: 82 9a                    a3 = u64 [a2]
 89152: c9 a9 0b                 a4 = a2 - a3
 89155: ab 7b 11                 jump @7087 if a4 != a0
      :                          @7084
 89158: c9 8a 0b                 a4 = a3 - a1
 89161: 01                       fallthrough
      :                          @7085
 89162: 82 9c                    a5 = u64 [a2]
 89164: ab ac f2                 jump @7083 if a5 != a3
      :                          @7086
 89167: 7b 9b                    u64 [a2] = a4
 89169: 33 06                    s1 = 0
 89171: 01                       fallthrough
      :                          @7087
 89172: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 89176: 82 98                    a1 = u64 [a2]
 89178: 51 08 31                 jump @7094 if a1 == 0
      :                          @7088
 89181: 33 07 00 20              a0 = 0x2000
 89185: ac 87 2a                 jump @7094 if a0 <u a1
      :                          @7089
 89188: 82 97 08                 a0 = u64 [a2 + 0x8]
 89191: 97 88 03                 a1 = a1 << 0x3
 89194: 33 09 c0 22 03           a2 = 0x322c0
 89199: 95 99 00 00 01           a2 = a2 + 0x10000
 89204: 01                       fallthrough
      :                          @7090
 89205: 82 9a                    a3 = u64 [a2]
 89207: c9 a9 0b                 a4 = a2 - a3
 89210: ab 7b 11                 jump @7094 if a4 != a0
      :                          @7091
 89213: c9 8a 0b                 a4 = a3 - a1
 89216: 01                       fallthrough
      :                          @7092
 89217: 82 9c                    a5 = u64 [a2]
 89219: ab ac f2                 jump @7090 if a5 != a3
      :                          @7093
 89222: 7b 9b                    u64 [a2] = a4
 89224: 33 06                    s1 = 0
 89226: 01                       fallthrough
      :                          @7094
 89227: 82 19 10                 a2 = u64 [sp + 0x10]
 89230: 82 98                    a1 = u64 [a2]
 89232: 51 08 2f                 jump @7101 if a1 == 0
      :                          @7095
 89235: 33 07 00 20              a0 = 0x2000
 89239: ac 87 28                 jump @7101 if a0 <u a1
      :                          @7096
 89242: 82 97 08                 a0 = u64 [a2 + 0x8]
 89245: 97 88 03                 a1 = a1 << 0x3
 89248: 33 09 c0 22 03           a2 = 0x322c0
 89253: 95 99 00 00 01           a2 = a2 + 0x10000
 89258: 01                       fallthrough
      :                          @7097
 89259: 82 9a                    a3 = u64 [a2]
 89261: c9 a9 0b                 a4 = a2 - a3
 89264: ab 7b 0f                 jump @7101 if a4 != a0
      :                          @7098
 89267: c9 8a 0b                 a4 = a3 - a1
 89270: 01                       fallthrough
      :                          @7099
 89271: 82 9c                    a5 = u64 [a2]
 89273: ab ac f2                 jump @7097 if a5 != a3
      :                          @7100
 89276: 7b 9b                    u64 [a2] = a4
 89278: 01                       fallthrough
      :                          @7101
 89279: 82 10 30 01              ra = u64 [sp + 0x130]
 89283: 82 15 28 01              s0 = u64 [sp + 0x128]
 89287: 82 16 20 01              s1 = u64 [sp + 0x120]
 89291: 95 11 38 01              sp = sp + 0x138
 89295: 32 00                    ret
      :                          @7102
 89297: 00                       trap
      :                          @7103
 89298: 00                       trap
      :                          @7104
 89299: 00                       trap
      :                          @7105
 89300: 00                       trap
      :                          @7106
 89301: 00                       trap
      :                          @7107
 89302: 00                       trap
      :                          @7108
 89303: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 89306: 7b 10 58                 u64 [sp + 0x58] = ra
 89309: 7b 15 50                 u64 [sp + 0x50] = s0
 89312: 7b 16 48                 u64 [sp + 0x48] = s1
 89315: 82 89 10                 a2 = u64 [a1 + 0x10]
 89318: 51 09 b7 01              jump @7147 if a2 == 0
      :                          @7109
 89322: 57 09 da 01              jump @7153 if a2 <s 0
      :                          @7110
 89326: 7b 18 28                 u64 [sp + 0x28] = a1
 89329: 85 95 ff                 s0 = a2 ^ 0xffffffffffffffff
 89332: 98 55 3f                 s0 = s0 >> 0x3f
 89335: 33 08 c0 22 03           a1 = 0x322c0
 89340: 33 02 00 00 01           t0 = 0x10000
 89345: c8 28 08                 a1 = a1 + t0
 89348: 01                       fallthrough
      :                          @7111
 89349: 82 8b                    a4 = u64 [a1]
 89351: c8 9b 0a                 a3 = a4 + a2
 89354: ac ba b9 01              jump @7152 if a3 <u a4
      :                          @7112
 89358: c8 5a 0c                 a5 = a3 + s0
 89361: d8 ac 06                 s1 = a5 <u a3
 89364: d8 c2 0c                 a5 = t0 <u a5
 89367: d4 6c 0c                 a5 = a5 | s1
 89370: 52 0c a9 01              jump @7152 if a5 != 0
      :                          @7113
 89374: 82 8c                    a5 = u64 [a1]
 89376: ab bc e5                 jump @7111 if a5 != a4
      :                          @7114
 89379: 7b 8a                    u64 [a1] = a3
 89381: 33 06                    s1 = 0
 89383: 7b 17 18                 u64 [sp + 0x18] = a0
 89386: 33 07 c0 22 04           a0 = 0x422c0
 89391: c9 a7 05                 s0 = a0 - a3
 89394: 64 57                    a0 = s0
 89396: 33 08                    a1 = 0
 89398: 7b 19 20                 u64 [sp + 0x20] = a2
 89401: 50 20 1a 04 20 ae 01     ra = 1050, jump @13675
      :                          @7115 [@dyn 525]
 89408: 64 50                    ra = s0
 89410: 82 14 20                 t2 = u64 [sp + 0x20]
 89413: 33 08                    a1 = 0
 89415: 49 11 30                 u64 [sp + 48] = 0
 89418: 33 05 08                 s0 = 0x8
 89421: 7b 15 38                 u64 [sp + 0x38] = s0
 89424: 49 11 40                 u64 [sp + 64] = 0
 89427: c8 40 0a                 a3 = ra + t2
 89430: 82 17 28                 a0 = u64 [sp + 0x28]
 89433: 82 77 08                 a0 = u64 [a0 + 0x8]
 89436: 7b 17 28                 u64 [sp + 0x28] = a0
 89439: 9a 4b                    a4 = -t2
 89441: 64 b7                    a0 = a4
 89443: 01                       fallthrough
      :                          @7116
 89444: 51 07 f2 00              jump @7139 if a0 == 0
      :                          @7117
 89448: c8 7a 09                 a2 = a3 + a0
 89451: 7c 99                    a2 = u8 [a2]
 89453: 95 77 01                 a0 = a0 + 0x1
 89456: 52 09 f4                 jump @7116 if a2 != 0
      :                          @7118
 89459: 7b 15                    u64 [sp] = s0
 89461: 7b 1b 08                 u64 [sp + 0x8] = a4
 89464: 7b 1a 10                 u64 [sp + 0x10] = a3
 89467: 33 03                    t1 = 0
 89469: 33 06                    s1 = 0
 89471: 33 0b                    a4 = 0
 89473: 28 23                    jump @7121
      :                          @7119
 89475: 33 0c                    a5 = 0
 89477: 01                       fallthrough
      :                          @7120
 89478: c8 b0 07                 a0 = ra + a4
 89481: 7c 77                    a0 = u8 [a0]
 89483: 95 b9 01                 a2 = a4 + 0x1
 89486: 88 77 01                 a0 = a0 <u 0x1
 89489: c8 c7 07                 a0 = a0 + a5
 89492: d8 73 0a                 a3 = t1 <u a0
 89495: 64 26                    s1 = t0
 89497: db ab 06                 s1 = a4 if a3 != 0
 89500: e4 37 03                 t1 = maxu(a0, t1)
 89503: 64 9b                    a4 = a2
 89505: aa 49 3d                 jump @7128 if a2 == t2
      :                          @7121
 89508: 64 62                    t0 = s1
 89510: 96 b7 18                 a0 = a4 * 0x18
 89513: 82 19 28                 a2 = u64 [sp + 0x28]
 89516: c8 97 07                 a0 = a0 + a2
 89519: 82 7a 10                 a3 = u64 [a0 + 0x10]
 89522: 51 0a d1                 jump @7119 if a3 == 0
      :                          @7122
 89525: 82 79 08                 a2 = u64 [a0 + 0x8]
 89528: 33 07                    a0 = 0
 89530: 33 0c                    a5 = 0
 89532: 28 14                    jump @7125
      :                          @7123
 89534: c8 70 06                 s1 = ra + a0
 89537: 7c 66                    s1 = u8 [s1]
 89539: 88 66 01                 s1 = s1 <u 0x1
 89542: 01                       fallthrough
      :                          @7124
 89543: 95 77 01                 a0 = a0 + 0x1
 89546: c8 6c 0c                 a5 = a5 + s1
 89549: aa 7a b9                 jump @7120 if a3 == a0
      :                          @7125
 89552: c8 79 05                 s0 = a2 + a0
 89555: 7c 56                    s1 = u8 [s0]
 89557: 51 06 f2                 jump @7124 if s1 == 0
      :                          @7126
 89560: ac 47 e6                 jump @7123 if a0 <u t2
      :                          @7127
 89563: 28 e5 00                 jump @7149
      :                          @7128
 89566: 82 17 30                 a0 = u64 [sp + 0x30]
 89569: ab 78 1c                 jump @7131 if a1 != a0
      :                          @7129
 89572: 95 17 30                 a0 = sp + 0x30
 89575: 64 05                    s0 = ra
 89577: 50 20 1c 04 1e f5 fe     ra = 1052, jump @1581
      :                          @7130 [@dyn 526]
 89584: 64 50                    ra = s0
 89586: 82 14 20                 t2 = u64 [sp + 0x20]
 89589: 82 18 40                 a1 = u64 [sp + 0x40]
 89592: 82 15 38                 s0 = u64 [sp + 0x38]
 89595: 28 05                    jump @7132
      :                          @7131
 89597: 82 15                    s0 = u64 [sp]
 89599: 01                       fallthrough
      :                          @7132
 89600: 97 87 03                 a0 = a1 << 0x3
 89603: c8 57 07                 a0 = a0 + s0
 89606: 7b 76                    u64 [a0] = s1
 89608: 95 88 01                 a1 = a1 + 0x1
 89611: 7b 18 40                 u64 [sp + 0x40] = a1
 89614: 33 0c 01                 a5 = 0x1
 89617: ae 46 b1 00              jump @7151 if s1 >=u t2
      :                          @7133
 89621: 33 07                    a0 = 0
 89623: c8 60 09                 a2 = ra + s1
 89626: 46 09 01                 u8 [a2 + 0] = 0x1
 89629: 96 69 18                 a2 = s1 * 0x18
 89632: 82 1a 28                 a3 = u64 [sp + 0x28]
 89635: c8 a9 09                 a2 = a2 + a3
 89638: 95 9a 10                 a3 = a2 + 0x10
 89641: 95 9b 08                 a4 = a2 + 0x8
 89644: 28 08                    jump @7135
      :                          @7134
 89646: 95 77 01                 a0 = a0 + 0x1
 89649: aa 74 1a                 jump @7138 if t2 == a0
      :                          @7135
 89652: 82 a9                    a2 = u64 [a3]
 89654: ae 97 8b 00              jump @7150 if a0 >=u a2
      :                          @7136
 89658: 82 b9                    a2 = u64 [a4]
 89660: c8 79 09                 a2 = a2 + a0
 89663: 7c 99                    a2 = u8 [a2]
 89665: 51 09 ed                 jump @7134 if a2 == 0
      :                          @7137
 89668: c8 70 09                 a2 = ra + a0
 89671: 78 9c                    u8 [a2] = a5
 89673: 28 e5                    jump @7134
      :                          @7138
 89675: 82 1a 10                 a3 = u64 [sp + 0x10]
 89678: 82 1b 08                 a4 = u64 [sp + 0x8]
 89681: 64 b7                    a0 = a4
 89683: 28 11 ff                 jump @7116
      :                          @7139
 89686: 82 17 40                 a0 = u64 [sp + 0x40]
 89689: 82 18 38                 a1 = u64 [sp + 0x38]
 89692: 82 1a 18                 a3 = u64 [sp + 0x18]
 89695: 7b a7 10                 u64 [a3 + 0x10] = a0
 89698: 7b a8 08                 u64 [a3 + 0x8] = a1
 89701: 82 17 30                 a0 = u64 [sp + 0x30]
 89704: 33 08 00 00 ff           a1 = 0xffffffffffff0000
 89709: 95 49 ff ff fe           a2 = t2 + 0xfffffffffffeffff
 89714: 7b a7                    u64 [a3] = a0
 89716: ac 89 3e                 jump @7148 if a2 <u a1
      :                          @7140
 89719: 33 07 c0 22 03           a0 = 0x322c0
 89724: 95 77 00 00 01           a0 = a0 + 0x10000
 89729: 01                       fallthrough
      :                          @7141
 89730: 82 78                    a1 = u64 [a0]
 89732: c9 87 09                 a2 = a0 - a1
 89735: ab 09 2b                 jump @7148 if a2 != ra
      :                          @7142
 89738: c9 48 09                 a2 = a1 - t2
 89741: 01                       fallthrough
      :                          @7143
 89742: 82 7a                    a3 = u64 [a0]
 89744: ab 8a f2                 jump @7141 if a3 != a1
      :                          @7144
 89747: 7b 79                    u64 [a0] = a2
 89749: 33 0b                    a4 = 0
 89751: 01                       fallthrough
      :                          @7145
 89752: ab 8a ea                 jump @7141 if a3 != a1
      :                          @7146
 89755: 28 17                    jump @7148
      :                          @7147
 89757: 49 11 30                 u64 [sp + 48] = 0
 89760: 33 08 08                 a1 = 0x8
 89763: 7b 18 38                 u64 [sp + 0x38] = a1
 89766: 49 11 40                 u64 [sp + 64] = 0
 89769: 49 17 10                 u64 [a0 + 16] = 0
 89772: 7b 78 08                 u64 [a0 + 0x8] = a1
 89775: 49 07                    u64 [a0 + 0] = 0
 89777: 01                       fallthrough
      :                          @7148
 89778: 82 10 58                 ra = u64 [sp + 0x58]
 89781: 82 15 50                 s0 = u64 [sp + 0x50]
 89784: 82 16 48                 s1 = u64 [sp + 0x48]
 89787: 95 11 60                 sp = sp + 0x60
 89790: 32 00                    ret
      :                          @7149
 89792: 00                       trap
      :                          @7150
 89793: 00                       trap
      :                          @7151
 89794: 00                       trap
      :                          @7152
 89795: 00                       trap
      :                          @7153
 89796: 00                       trap
      :                          @7154
 89797: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 89800: 7b 10 48                 u64 [sp + 0x48] = ra
 89803: 7b 15 40                 u64 [sp + 0x40] = s0
 89806: 7b 16 38                 u64 [sp + 0x38] = s1
 89809: 51 09 ac 00              jump @7164 if a2 == 0
      :                          @7155
 89813: 7b 17                    u64 [sp] = a0
 89815: 82 86                    s1 = u64 [a1]
 89817: 82 8a 08                 a3 = u64 [a1 + 0x8]
 89820: 33 0b                    a4 = 0
 89822: 95 92 ff                 t0 = a2 + 0xffffffffffffffff
 89825: 7b 18 08                 u64 [sp + 0x8] = a1
 89828: 95 83 18                 t1 = a1 + 0x18
 89831: 33 08 ff                 a1 = 0xffffffffffffffff
 89834: 7b 1a 30                 u64 [sp + 0x30] = a3
 89837: 64 6c                    a5 = s1
 89839: 7b 19 10                 u64 [sp + 0x10] = a2
 89842: 28 1c                    jump @7158
      :                          @7156
 89844: 64 c9                    a2 = a5
 89846: 01                       fallthrough
      :                          @7157
 89847: 64 9c                    a5 = a2
 89849: 82 12 28                 t0 = u64 [sp + 0x28]
 89852: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 89855: 82 13 20                 t1 = u64 [sp + 0x20]
 89858: 95 33 10                 t1 = t1 + 0x10
 89861: 82 19 10                 a2 = u64 [sp + 0x10]
 89864: 82 1b 18                 a4 = u64 [sp + 0x18]
 89867: aa 9b 51                 jump @7163 if a4 == a2
      :                          @7158
 89870: 95 b7 01                 a0 = a4 + 0x1
 89873: 7b 17 18                 u64 [sp + 0x18] = a0
 89876: 7b 12 28                 u64 [sp + 0x28] = t0
 89879: 7b 13 20                 u64 [sp + 0x20] = t1
 89882: ae 97 da                 jump @7156 if a0 >=u a2
      :                          @7159
 89885: 97 bb 04                 a4 = a4 << 0x4
 89888: 82 17 08                 a0 = u64 [sp + 0x8]
 89891: c8 7b 0b                 a4 = a4 + a0
 89894: 82 b5                    s0 = u64 [a4]
 89896: 82 bb 08                 a4 = u64 [a4 + 0x8]
 89899: 64 c9                    a2 = a5
 89901: 28 0b                    jump @7161
      :                          @7160
 89903: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 89906: 95 33 10                 t1 = t1 + 0x10
 89909: 51 02 c2                 jump @7157 if t0 == 0
      :                          @7161
 89912: 82 34 f8                 t2 = u64 [t1 + 0xfffffffffffffff8]
 89915: 82 30                    ra = u64 [t1]
 89917: c9 45 0c                 a5 = s0 - t2
 89920: c9 0b 07                 a0 = a4 - ra
 89923: ca cc 0c                 a5 = a5 * a5
 89926: ca 77 07                 a0 = a0 * a0
 89929: c8 7c 0c                 a5 = a5 + a0
 89932: ae 8c e3                 jump @7160 if a5 >=u a1
      :                          @7162
 89935: 64 56                    s1 = s0
 89937: 64 ba                    a3 = a4
 89939: 64 49                    a2 = t2
 89941: 7b 10 30                 u64 [sp + 0x30] = ra
 89944: 64 c8                    a1 = a5
 89946: 28 d5                    jump @7160
      :                          @7163
 89948: 82 17                    a0 = u64 [sp]
 89950: 7b 76                    u64 [a0] = s1
 89952: 7b 7a 08                 u64 [a0 + 0x8] = a3
 89955: 7b 7c 10                 u64 [a0 + 0x10] = a5
 89958: 82 19 30                 a2 = u64 [sp + 0x30]
 89961: 7b 79 18                 u64 [a0 + 0x18] = a2
 89964: 7b 78 20                 u64 [a0 + 0x20] = a1
 89967: 82 10 48                 ra = u64 [sp + 0x48]
 89970: 82 15 40                 s0 = u64 [sp + 0x40]
 89973: 82 16 38                 s1 = u64 [sp + 0x38]
 89976: 95 11 50                 sp = sp + 0x50
 89979: 32 00                    ret
      :                          @7164
 89981: 00                       trap
      :                          @7165
 89982: 95 11 88                 sp = sp + 0xffffffffffffff88
 89985: 7b 10 70                 u64 [sp + 0x70] = ra
 89988: 7b 15 68                 u64 [sp + 0x68] = s0
 89991: 7b 16 60                 u64 [sp + 0x60] = s1
 89994: 64 95                    s0 = a2
 89996: 97 99 04                 a2 = a2 << 0x4
 89999: 7b 19 28                 u64 [sp + 0x28] = a2
 90002: 7b 17 10                 u64 [sp + 0x10] = a0
 90005: 51 05 62                 jump @7173 if s0 == 0
      :                          @7166
 90008: 64 50                    ra = s0
 90010: 98 55 3b                 s0 = s0 >> 0x3b
 90013: 52 05 f3 02              jump @7223 if s0 != 0
      :                          @7167
 90017: 88 52 01                 t0 = s0 <u 0x1
 90020: 97 22 03                 t0 = t0 << 0x3
 90023: 33 04 c0 22 03           t2 = 0x322c0
 90028: 33 03 00 00 01           t1 = 0x10000
 90033: c8 34 0b                 a4 = t2 + t1
 90036: 01                       fallthrough
      :                          @7168
 90037: 82 b6                    s1 = u64 [a4]
 90039: 82 1c 28                 a5 = u64 [sp + 0x28]
 90042: c8 6c 0c                 a5 = a5 + s1
 90045: ac 6c d2 02              jump @7222 if a5 <u s1
      :                          @7169
 90049: c8 2c 0a                 a3 = a5 + t0
 90052: d8 ca 05                 s0 = a3 <u a5
 90055: d8 a3 0a                 a3 = t1 <u a3
 90058: d4 5a 0a                 a3 = a3 | s0
 90061: 52 0a c2 02              jump @7222 if a3 != 0
      :                          @7170
 90065: c9 c4 05                 s0 = t2 - a5
 90068: c8 35 05                 s0 = s0 + t1
 90071: 84 5a 07                 a3 = s0 & 0x7
 90074: c8 ac 0c                 a5 = a5 + a3
 90077: 01                       fallthrough
      :                          @7171
 90078: 82 b7                    a0 = u64 [a4]
 90080: ab 67 d5                 jump @7168 if a0 != s1
      :                          @7172
 90083: 7b bc                    u64 [a4] = a5
 90085: c9 a5 06                 s1 = s0 - a3
 90088: 82 19 28                 a2 = u64 [sp + 0x28]
 90091: 64 05                    s0 = ra
 90093: 64 67                    a0 = s1
 90095: 33 00 1e 04              ra = 0x41e
 90099: 28 39 a9 01              jump @13621
      :                          @7173
 90103: 33 09                    a2 = 0
 90105: 33 06 08                 s1 = 0x8
 90108: 33 07 08                 a0 = 0x8
 90111: 50 20 1e 04 2d a9 01     ra = 1054, jump @13621
      :                          @7174 [@dyn 527]
 90118: 68 57                    a0 = clz s0
 90120: 9a 7a 40                 a3 = 0x40 - a0
 90123: 64 67                    a0 = s1
 90125: 64 58                    a1 = s0
 90127: 33 09                    a2 = 0
 90129: 50 20 20 04 ad d1 fe     ra = 1056, jump @988
      :                          @7175 [@dyn 528]
 90136: 49 11 30                 u64 [sp + 48] = 0
 90139: 49 11 38 08              u64 [sp + 56] = 0x8
 90143: 49 11 40                 u64 [sp + 64] = 0
 90146: 7b 15 08                 u64 [sp + 0x8] = s0
 90149: 7b 16 20                 u64 [sp + 0x20] = s1
 90152: 51 05 96 01              jump @7203 if s0 == 0
      :                          @7176
 90156: 33 08                    a1 = 0
 90158: 82 13 28                 t1 = u64 [sp + 0x28]
 90161: c8 63 03                 t1 = t1 + s1
 90164: 33 02 08                 t0 = 0x8
 90167: 33 04 02                 t2 = 0x2
 90170: 64 60                    ra = s1
 90172: 28 1d                    jump @7178
      :                          @7177
 90174: 95 00 10                 ra = ra + 0x10
 90177: 97 a7 04                 a0 = a3 << 0x4
 90180: c8 27 07                 a0 = a0 + t0
 90183: 7b 76                    u64 [a0] = s1
 90185: 82 18 28                 a1 = u64 [sp + 0x28]
 90188: 7b 78 08                 u64 [a0 + 0x8] = a1
 90191: 95 a8 01                 a1 = a3 + 0x1
 90194: 7b 18 40                 u64 [sp + 0x40] = a1
 90197: aa 30 83 00              jump @7187 if ra == t1
      :                          @7178
 90201: 82 06                    s1 = u64 [ra]
 90203: 82 07 08                 a0 = u64 [ra + 0x8]
 90206: 7b 17 28                 u64 [sp + 0x28] = a0
 90209: ac 48 4c                 jump @7184 if a1 <u t2
      :                          @7179
 90212: 97 89 04                 a2 = a1 << 0x4
 90215: c8 29 09                 a2 = a2 + t0
 90218: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 90221: 01                       fallthrough
      :                          @7180
 90222: 82 9a f0                 a3 = u64 [a2 + 0xfffffffffffffff0]
 90225: 82 9b                    a4 = u64 [a2]
 90227: 82 9c f8                 a5 = u64 [a2 + 0xfffffffffffffff8]
 90230: 82 97 08                 a0 = u64 [a2 + 0x8]
 90233: c9 ab 0b                 a4 = a4 - a3
 90236: 82 15 28                 s0 = u64 [sp + 0x28]
 90239: c9 c5 05                 s0 = s0 - a5
 90242: ca 5b 0b                 a4 = a4 * s0
 90245: c9 c7 07                 a0 = a0 - a5
 90248: c9 6a 0a                 a3 = a3 - s1
 90251: ca a7 07                 a0 = a0 * a3
 90254: c8 b7 07                 a0 = a0 + a4
 90257: 5a 07 1c                 jump @7184 if a0 >s 0
      :                          @7181
 90260: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 90263: 33 0a 01                 a3 = 0x1
 90266: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 90269: ac 8a d1                 jump @7180 if a3 <u a1
      :                          @7182
 90272: 82 18 30                 a1 = u64 [sp + 0x30]
 90275: 49 11 40 01              u64 [sp + 64] = 0x1
 90279: 52 18 01 97              jump @7177 if a1 != 1
      :                          @7183
 90283: 28 0d                    jump @7185
      :                          @7184
 90285: 64 8a                    a3 = a1
 90287: 82 18 30                 a1 = u64 [sp + 0x30]
 90290: 7b 1a 40                 u64 [sp + 0x40] = a3
 90293: ab 8a 89                 jump @7177 if a3 != a1
      :                          @7185
 90296: 95 17 30                 a0 = sp + 0x30
 90299: 64 35                    s0 = t1
 90301: 7b 10 18                 u64 [sp + 0x18] = ra
 90304: 50 20 22 04 40 f3 fe     ra = 1058, jump @1605
      :                          @7186 [@dyn 529]
 90311: 82 10 18                 ra = u64 [sp + 0x18]
 90314: 33 04 02                 t2 = 0x2
 90317: 64 53                    t1 = s0
 90319: 82 1a 40                 a3 = u64 [sp + 0x40]
 90322: 82 12 38                 t0 = u64 [sp + 0x38]
 90325: 28 69 ff                 jump @7177
      :                          @7187
 90328: 33 05                    s0 = 0
 90330: 49 11 48                 u64 [sp + 72] = 0
 90333: 33 02 08                 t0 = 0x8
 90336: 7b 12 50                 u64 [sp + 0x50] = t0
 90339: 49 11 58                 u64 [sp + 88] = 0
 90342: 28 1d                    jump @7189
      :                          @7188
 90344: 95 33 f0                 t1 = t1 + 0xfffffffffffffff0
 90347: 97 69 04                 a2 = s1 << 0x4
 90350: c8 92 07                 a0 = t0 + a2
 90353: 7b 70                    u64 [a0] = ra
 90355: 7b 74 08                 u64 [a0 + 0x8] = t2
 90358: 95 65 01                 s0 = s1 + 0x1
 90361: 7b 15 58                 u64 [sp + 0x58] = s0
 90364: 82 17 20                 a0 = u64 [sp + 0x20]
 90367: aa 37 80 00              jump @7198 if a0 == t1
      :                          @7189
 90371: 82 30 f0                 ra = u64 [t1 + 0xfffffffffffffff0]
 90374: 82 34 f8                 t2 = u64 [t1 + 0xfffffffffffffff8]
 90377: 53 15 02 4a              jump @7195 if s0 <u 2
      :                          @7190
 90381: 97 59 04                 a2 = s0 << 0x4
 90384: c8 29 09                 a2 = a2 + t0
 90387: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 90390: 01                       fallthrough
      :                          @7191
 90391: 82 9a f0                 a3 = u64 [a2 + 0xfffffffffffffff0]
 90394: 82 9b                    a4 = u64 [a2]
 90396: 82 9c f8                 a5 = u64 [a2 + 0xfffffffffffffff8]
 90399: 82 98 08                 a1 = u64 [a2 + 0x8]
 90402: c9 ab 0b                 a4 = a4 - a3
 90405: c9 c4 07                 a0 = t2 - a5
 90408: ca 7b 07                 a0 = a4 * a0
 90411: c9 c8 08                 a1 = a1 - a5
 90414: c9 0a 0a                 a3 = a3 - ra
 90417: ca a8 0a                 a3 = a1 * a3
 90420: c8 a7 07                 a0 = a0 + a3
 90423: 5a 07 1c                 jump @7195 if a0 >s 0
      :                          @7192
 90426: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 90429: 33 06 01                 s1 = 0x1
 90432: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 90435: ac 56 d4                 jump @7191 if s1 <u s0
      :                          @7193
 90438: 82 18 48                 a1 = u64 [sp + 0x48]
 90441: 49 11 58 01              u64 [sp + 88] = 0x1
 90445: 52 18 01 9b              jump @7188 if a1 != 1
      :                          @7194
 90449: 28 0d                    jump @7196
      :                          @7195
 90451: 64 56                    s1 = s0
 90453: 82 18 48                 a1 = u64 [sp + 0x48]
 90456: 7b 15 58                 u64 [sp + 0x58] = s0
 90459: ab 85 8d                 jump @7188 if s0 != a1
      :                          @7196
 90462: 95 17 48                 a0 = sp + 0x48
 90465: 64 35                    s0 = t1
 90467: 7b 14 28                 u64 [sp + 0x28] = t2
 90470: 64 06                    s1 = ra
 90472: 50 20 24 04 98 f2 fe     ra = 1060, jump @1605
      :                          @7197 [@dyn 530]
 90479: 64 60                    ra = s1
 90481: 82 14 28                 t2 = u64 [sp + 0x28]
 90484: 64 53                    t1 = s0
 90486: 82 16 58                 s1 = u64 [sp + 0x58]
 90489: 82 12 50                 t0 = u64 [sp + 0x50]
 90492: 28 6c ff                 jump @7188
      :                          @7198
 90495: 82 17 40                 a0 = u64 [sp + 0x40]
 90498: 51 07 53                 jump @7204 if a0 == 0
      :                          @7199
 90501: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 90504: 7b 18 40                 u64 [sp + 0x40] = a1
 90507: 82 17 48                 a0 = u64 [sp + 0x48]
 90510: 7b 17 28                 u64 [sp + 0x28] = a0
 90513: 51 05 4f                 jump @7205 if s0 == 0
      :                          @7200
 90516: 82 17 30                 a0 = u64 [sp + 0x30]
 90519: 7b 16 58                 u64 [sp + 0x58] = s1
 90522: 82 1a 50                 a3 = u64 [sp + 0x50]
 90525: c9 87 07                 a0 = a0 - a1
 90528: ae 67 48                 jump @7206 if a0 >=u s1
      :                          @7201
 90531: 95 17 30                 a0 = sp + 0x30
 90534: 7b 19 18                 u64 [sp + 0x18] = a2
 90537: 64 69                    a2 = s1
 90539: 7b 1a                    u64 [sp] = a3
 90541: 50 20 26 04 d3 f3 fe     ra = 1062, jump @1641
      :                          @7202 [@dyn 531]
 90548: 82 1a                    a3 = u64 [sp]
 90550: 82 19 18                 a2 = u64 [sp + 0x18]
 90553: 82 18 40                 a1 = u64 [sp + 0x40]
 90556: 28 2c                    jump @7206
      :                          @7203
 90558: 33 09                    a2 = 0
 90560: 33 06                    s1 = 0
 90562: 49 11 28                 u64 [sp + 40] = 0
 90565: 33 08                    a1 = 0
 90567: 49 11 48                 u64 [sp + 72] = 0
 90570: 33 0a 08                 a3 = 0x8
 90573: 7b 1a 50                 u64 [sp + 0x50] = a3
 90576: 49 11 58                 u64 [sp + 88] = 0
 90579: 28 15                    jump @7206
      :                          @7204
 90581: 33 08                    a1 = 0
 90583: 82 17 48                 a0 = u64 [sp + 0x48]
 90586: 7b 17 28                 u64 [sp + 0x28] = a0
 90589: 52 05 b7                 jump @7200 if s0 != 0
      :                          @7205
 90592: 82 1a 50                 a3 = u64 [sp + 0x50]
 90595: 33 09                    a2 = 0
 90597: 33 06                    s1 = 0
 90599: 01                       fallthrough
      :                          @7206
 90600: 7b 18 18                 u64 [sp + 0x18] = a1
 90603: 82 17 38                 a0 = u64 [sp + 0x38]
 90606: 97 88 04                 a1 = a1 << 0x4
 90609: c8 87 07                 a0 = a0 + a1
 90612: 64 a8                    a1 = a3
 90614: 64 a5                    s0 = a3
 90616: 50 20 28 04 34 a7 01     ra = 1064, jump @13621
      :                          @7207 [@dyn 532]
 90623: 64 5c                    a5 = s0
 90625: 82 15 18                 s0 = u64 [sp + 0x18]
 90628: c8 65 05                 s0 = s0 + s1
 90631: 7b 15 40                 u64 [sp + 0x40] = s0
 90634: 82 16 28                 s1 = u64 [sp + 0x28]
 90637: 51 06 2c                 jump @7214 if s1 == 0
      :                          @7208
 90640: 56 26 00 10 29           jump @7214 if s1 >u 4096
      :                          @7209
 90645: 97 66 04                 s1 = s1 << 0x4
 90648: 33 07 c0 22 03           a0 = 0x322c0
 90653: 95 77 00 00 01           a0 = a0 + 0x10000
 90658: 01                       fallthrough
      :                          @7210
 90659: 82 78                    a1 = u64 [a0]
 90661: c9 87 09                 a2 = a0 - a1
 90664: ab c9 11                 jump @7214 if a2 != a5
      :                          @7211
 90667: c9 68 09                 a2 = a1 - s1
 90670: 01                       fallthrough
      :                          @7212
 90671: 82 7a                    a3 = u64 [a0]
 90673: ab 8a f2                 jump @7210 if a3 != a1
      :                          @7213
 90676: 7b 79                    u64 [a0] = a2
 90678: 33 0b                    a4 = 0
 90680: 01                       fallthrough
      :                          @7214
 90681: 82 17 40                 a0 = u64 [sp + 0x40]
 90684: 82 18 38                 a1 = u64 [sp + 0x38]
 90687: 82 19 30                 a2 = u64 [sp + 0x30]
 90690: 82 1a 10                 a3 = u64 [sp + 0x10]
 90693: 7b a7 10                 u64 [a3 + 0x10] = a0
 90696: 7b a8 08                 u64 [a3 + 0x8] = a1
 90699: 7b a9                    u64 [a3] = a2
 90701: 82 18 08                 a1 = u64 [sp + 0x8]
 90704: 82 16 20                 s1 = u64 [sp + 0x20]
 90707: 51 08 2e                 jump @7221 if a1 == 0
      :                          @7215
 90710: 33 07 00 10              a0 = 0x1000
 90714: ac 87 27                 jump @7221 if a0 <u a1
      :                          @7216
 90717: 97 87 04                 a0 = a1 << 0x4
 90720: 33 08 c0 22 03           a1 = 0x322c0
 90725: 95 88 00 00 01           a1 = a1 + 0x10000
 90730: 01                       fallthrough
      :                          @7217
 90731: 82 89                    a2 = u64 [a1]
 90733: c9 98 0a                 a3 = a1 - a2
 90736: ab 6a 11                 jump @7221 if a3 != s1
      :                          @7218
 90739: c9 79 0a                 a3 = a2 - a0
 90742: 01                       fallthrough
      :                          @7219
 90743: 82 8b                    a4 = u64 [a1]
 90745: ab 9b f2                 jump @7217 if a4 != a2
      :                          @7220
 90748: 7b 8a                    u64 [a1] = a3
 90750: 33 0c                    a5 = 0
 90752: 01                       fallthrough
      :                          @7221
 90753: 82 10 70                 ra = u64 [sp + 0x70]
 90756: 82 15 68                 s0 = u64 [sp + 0x68]
 90759: 82 16 60                 s1 = u64 [sp + 0x60]
 90762: 95 11 78                 sp = sp + 0x78
 90765: 32 00                    ret
      :                          @7222
 90767: 00                       trap
      :                          @7223
 90768: 00                       trap
      :                          @7224 [@dyn 533]
 90769: 82 18 60                 a1 = u64 [sp + 0x60]
 90772: 55 18 02 3d              jump @7233 if a1 >=u 2
      :                          @7225
 90776: 82 18 50                 a1 = u64 [sp + 0x50]
 90779: 51 08 31                 jump @7232 if a1 == 0
      :                          @7226
 90782: 56 28 00 10 2e           jump @7232 if a1 >u 4096
      :                          @7227
 90787: 82 17 58                 a0 = u64 [sp + 0x58]
 90790: 97 88 04                 a1 = a1 << 0x4
 90793: 33 09 c0 22 03           a2 = 0x322c0
 90798: 95 99 00 00 01           a2 = a2 + 0x10000
 90803: 01                       fallthrough
      :                          @7228
 90804: 82 9a                    a3 = u64 [a2]
 90806: c9 a9 0b                 a4 = a2 - a3
 90809: ab 7b 13                 jump @7232 if a4 != a0
      :                          @7229
 90812: c9 8a 0b                 a4 = a3 - a1
 90815: 01                       fallthrough
      :                          @7230
 90816: 82 9c                    a5 = u64 [a2]
 90818: ab ac f2                 jump @7228 if a5 != a3
      :                          @7231
 90821: 7b 9b                    u64 [a2] = a4
 90823: 33 07                    a0 = 0
 90825: 28 26 01                 jump @7245
      :                          @7232
 90828: 33 07                    a0 = 0
 90830: 28 21 01                 jump @7245
      :                          @7233
 90833: 82 17 58                 a0 = u64 [sp + 0x58]
 90836: 7b 17 40                 u64 [sp + 0x40] = a0
 90839: 33 07                    a0 = 0
 90841: 33 09                    a2 = 0
 90843: 33 0a 01                 a3 = 0x1
 90846: 01                       fallthrough
      :                          @7234
 90847: 7b 17 18                 u64 [sp + 0x18] = a0
 90850: 97 97 04                 a0 = a2 << 0x4
 90853: 95 9b 01                 a4 = a2 + 0x1
 90856: d3 8b 09                 a2 = a4 ^ a1
 90859: 7b 1b 10                 u64 [sp + 0x10] = a4
 90862: 93 9b                    a4 = 0 if a2 == 0
 90864: 82 19 40                 a2 = u64 [sp + 0x40]
 90867: c8 97 07                 a0 = a0 + a2
 90870: 82 7c 08                 a5 = u64 [a0 + 0x8]
 90873: 97 bb 04                 a4 = a4 << 0x4
 90876: c8 9b 0b                 a4 = a4 + a2
 90879: 82 b9                    a2 = u64 [a4]
 90881: 82 bb 08                 a4 = u64 [a4 + 0x8]
 90884: 82 77                    a0 = u64 [a0]
 90886: 7b 1b                    u64 [sp] = a4
 90888: 7b 1c 48                 u64 [sp + 0x48] = a5
 90891: c9 cb 0b                 a4 = a4 - a5
 90894: 7b 1b 30                 u64 [sp + 0x30] = a4
 90897: 7b 19 08                 u64 [sp + 0x8] = a2
 90900: 7b 17 38                 u64 [sp + 0x38] = a0
 90903: c9 79 09                 a2 = a2 - a0
 90906: 7b 19 28                 u64 [sp + 0x28] = a2
 90909: 64 a9                    a2 = a3
 90911: 01                       fallthrough
      :                          @7235
 90912: 64 97                    a0 = a2
 90914: ae 89 dc 00              jump @7246 if a2 >=u a1
      :                          @7236
 90918: 95 79 01                 a2 = a0 + 0x1
 90921: d3 89 0a                 a3 = a2 ^ a1
 90924: 93 a9                    a2 = 0 if a3 == 0
 90926: 97 9a 04                 a3 = a2 << 0x4
 90929: 82 1c 40                 a5 = u64 [sp + 0x40]
 90932: c8 ca 0a                 a3 = a3 + a5
 90935: 82 ab                    a4 = u64 [a3]
 90937: 82 aa 08                 a3 = u64 [a3 + 0x8]
 90940: 82 14 38                 t2 = u64 [sp + 0x38]
 90943: c9 b4 0b                 a4 = t2 - a4
 90946: 82 13 30                 t1 = u64 [sp + 0x30]
 90949: ca 3b 0b                 a4 = a4 * t1
 90952: 82 15 48                 s0 = u64 [sp + 0x48]
 90955: c9 5a 0a                 a3 = a3 - s0
 90958: 82 16 28                 s1 = u64 [sp + 0x28]
 90961: ca 6a 0a                 a3 = a3 * s1
 90964: c8 ab 0b                 a4 = a4 + a3
 90967: 97 7a 04                 a3 = a0 << 0x4
 90970: c8 ca 0a                 a3 = a3 + a5
 90973: 7b 17 20                 u64 [sp + 0x20] = a0
 90976: 82 a2 08                 t0 = u64 [a3 + 0x8]
 90979: 9a b0                    ra = -a4
 90981: 82 a7                    a0 = u64 [a3]
 90983: e3 0b 0c                 a5 = maxs(a4, ra)
 90986: c9 52 0b                 a4 = t0 - s0
 90989: 64 8a                    a3 = a1
 90991: ca 6b 05                 s0 = a4 * s1
 90994: c9 74 0b                 a4 = t2 - a0
 90997: ca 3b 08                 a1 = a4 * t1
 91000: c8 58 08                 a1 = a1 + s0
 91003: 9a 85                    s0 = -a1
 91005: e3 58 05                 s0 = maxs(a1, s0)
 91008: 64 a8                    a1 = a3
 91010: ad c5 9e                 jump @7235 if s0 <s a5
      :                          @7237
 91013: 82 19 48                 a2 = u64 [sp + 0x48]
 91016: c9 29 0c                 a5 = a2 - t0
 91019: ca bb 09                 a2 = a4 * a4
 91022: ca cc 0b                 a4 = a5 * a5
 91025: c8 9b 0b                 a4 = a4 + a2
 91028: 82 19 18                 a2 = u64 [sp + 0x18]
 91031: e4 b9 0b                 a4 = maxu(a2, a4)
 91034: 82 19 08                 a2 = u64 [sp + 0x8]
 91037: c9 79 07                 a0 = a2 - a0
 91040: 82 19                    a2 = u64 [sp]
 91042: c9 29 09                 a2 = a2 - t0
 91045: ca 77 07                 a0 = a0 * a0
 91048: ca 99 09                 a2 = a2 * a2
 91051: c8 97 07                 a0 = a0 + a2
 91054: e4 7b 07                 a0 = maxu(a4, a0)
 91057: 82 19 10                 a2 = u64 [sp + 0x10]
 91060: 82 1a 20                 a3 = u64 [sp + 0x20]
 91063: ab 89 28 ff              jump @7234 if a2 != a1
      :                          @7238
 91067: 82 16 50                 s1 = u64 [sp + 0x50]
 91070: 51 06 31                 jump @7245 if s1 == 0
      :                          @7239
 91073: 33 08 00 10              a1 = 0x1000
 91077: ac 68 2a                 jump @7245 if a1 <u s1
      :                          @7240
 91080: 97 66 04                 s1 = s1 << 0x4
 91083: 33 08 c0 22 03           a1 = 0x322c0
 91088: 95 88 00 00 01           a1 = a1 + 0x10000
 91093: 01                       fallthrough
      :                          @7241
 91094: 82 89                    a2 = u64 [a1]
 91096: c9 98 0a                 a3 = a1 - a2
 91099: 82 1b 40                 a4 = u64 [sp + 0x40]
 91102: ab ba 11                 jump @7245 if a3 != a4
      :                          @7242
 91105: c9 69 0a                 a3 = a2 - s1
 91108: 01                       fallthrough
      :                          @7243
 91109: 82 8b                    a4 = u64 [a1]
 91111: ab 9b ef                 jump @7241 if a4 != a2
      :                          @7244
 91114: 7b 8a                    u64 [a1] = a3
 91116: 33 0c                    a5 = 0
 91118: 01                       fallthrough
      :                          @7245
 91119: 82 10 78                 ra = u64 [sp + 0x78]
 91122: 82 15 70                 s0 = u64 [sp + 0x70]
 91125: 82 16 68                 s1 = u64 [sp + 0x68]
 91128: 95 11 80 00              sp = sp + 0x80
 91132: 32 00                    ret
      :                          @7246
 91134: 00                       trap
      :                          @7247
 91135: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 91138: 7b 10 30                 u64 [sp + 0x30] = ra
 91141: 7b 15 28                 u64 [sp + 0x28] = s0
 91144: 7b 16 20                 u64 [sp + 0x20] = s1
 91147: 64 86                    s1 = a1
 91149: 7b 17                    u64 [sp] = a0
 91151: 49 11 08                 u64 [sp + 8] = 0
 91154: 33 07 08                 a0 = 0x8
 91157: 7b 17 10                 u64 [sp + 0x10] = a0
 91160: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 91163: 33 05 02                 s0 = 0x2
 91166: 49 11 18                 u64 [sp + 24] = 0
 91169: ac 58 42                 jump @7253 if a1 <u s0
      :                          @7248
 91172: 33 08                    a1 = 0
 91174: 33 0b 18                 a4 = 0x18
 91177: 28 1f                    jump @7250
      :                          @7249
 91179: 95 59 ff                 a2 = s0 + 0xffffffffffffffff
 91182: ca b8 0a                 a3 = a1 * a4
 91185: c8 7a 0a                 a3 = a3 + a0
 91188: 49 0a                    u64 [a3 + 0] = 0
 91190: 7b a9 08                 u64 [a3 + 0x8] = a2
 91193: 7b a5 10                 u64 [a3 + 0x10] = s0
 91196: 95 88 01                 a1 = a1 + 0x1
 91199: 95 55 01                 s0 = s0 + 0x1
 91202: 7b 18 18                 u64 [sp + 0x18] = a1
 91205: aa 56 1e                 jump @7253 if s1 == s0
      :                          @7250
 91208: 82 19 08                 a2 = u64 [sp + 0x8]
 91211: ab 98 e0                 jump @7249 if a1 != a2
      :                          @7251
 91214: 95 17 08                 a0 = sp + 0x8
 91217: 50 20 2c 04 34 ee fe     ra = 1068, jump @1569
      :                          @7252 [@dyn 534]
 91224: 33 0b 18                 a4 = 0x18
 91227: 82 18 18                 a1 = u64 [sp + 0x18]
 91230: 82 17 10                 a0 = u64 [sp + 0x10]
 91233: 28 ca                    jump @7249
      :                          @7253
 91235: 82 17 18                 a0 = u64 [sp + 0x18]
 91238: 82 18 10                 a1 = u64 [sp + 0x10]
 91241: 82 19 08                 a2 = u64 [sp + 0x8]
 91244: 82 1a                    a3 = u64 [sp]
 91246: 7b a7 10                 u64 [a3 + 0x10] = a0
 91249: 7b a8 08                 u64 [a3 + 0x8] = a1
 91252: 7b a9                    u64 [a3] = a2
 91254: 82 10 30                 ra = u64 [sp + 0x30]
 91257: 82 15 28                 s0 = u64 [sp + 0x28]
 91260: 82 16 20                 s1 = u64 [sp + 0x20]
 91263: 95 11 38                 sp = sp + 0x38
 91266: 32 00                    ret
      :                          @7254
 91268: 95 11 90                 sp = sp + 0xffffffffffffff90
 91271: 7b 10 68                 u64 [sp + 0x68] = ra
 91274: 7b 15 60                 u64 [sp + 0x60] = s0
 91277: 7b 16 58                 u64 [sp + 0x58] = s1
 91280: 7b 1a 10                 u64 [sp + 0x10] = a3
 91283: 49 11 40                 u64 [sp + 64] = 0
 91286: 33 0a 08                 a3 = 0x8
 91289: 7b 1a 48                 u64 [sp + 0x48] = a3
 91292: 49 11 50                 u64 [sp + 80] = 0
 91295: 51 09 90 00              jump @7263 if a2 == 0
      :                          @7255
 91299: 51 0b 8c 00              jump @7263 if a4 == 0
      :                          @7256
 91303: 7b 17                    u64 [sp] = a0
 91305: 33 0a                    a3 = 0
 91307: 97 99 04                 a2 = a2 << 0x4
 91310: c8 89 09                 a2 = a2 + a1
 91313: 7b 19 08                 u64 [sp + 0x8] = a2
 91316: 97 bb 04                 a4 = a4 << 0x4
 91319: 82 17 10                 a0 = u64 [sp + 0x10]
 91322: c8 b7 02                 t0 = a0 + a4
 91325: 33 07 08                 a0 = 0x8
 91328: 7b 12 20                 u64 [sp + 0x20] = t0
 91331: 28 0e                    jump @7258
      :                          @7257
 91333: 82 18 18                 a1 = u64 [sp + 0x18]
 91336: 95 88 10                 a1 = a1 + 0x10
 91339: 82 19 08                 a2 = u64 [sp + 0x8]
 91342: aa 98 6c                 jump @7264 if a1 == a2
      :                          @7258
 91345: 82 8c                    a5 = u64 [a1]
 91347: 7b 18 18                 u64 [sp + 0x18] = a1
 91350: 82 8b 08                 a4 = u64 [a1 + 0x8]
 91353: 82 15 10                 s0 = u64 [sp + 0x10]
 91356: 7b 1c 30                 u64 [sp + 0x30] = a5
 91359: 7b 1b 28                 u64 [sp + 0x28] = a4
 91362: 28 1f                    jump @7260
      :                          @7259
 91364: c8 c9 08                 a1 = a2 + a5
 91367: c8 b6 06                 s1 = s1 + a4
 91370: 97 a9 04                 a2 = a3 << 0x4
 91373: c8 79 09                 a2 = a2 + a0
 91376: 7b 98                    u64 [a2] = a1
 91378: 7b 96 08                 u64 [a2 + 0x8] = s1
 91381: 95 aa 01                 a3 = a3 + 0x1
 91384: 95 55 10                 s0 = s0 + 0x10
 91387: 7b 1a 50                 u64 [sp + 0x50] = a3
 91390: aa 25 c7                 jump @7257 if s0 == t0
      :                          @7260
 91393: 82 59                    a2 = u64 [s0]
 91395: 82 18 40                 a1 = u64 [sp + 0x40]
 91398: 82 56 08                 s1 = u64 [s0 + 0x8]
 91401: ab 8a db                 jump @7259 if a3 != a1
      :                          @7261
 91404: 95 17 40                 a0 = sp + 0x40
 91407: 64 a8                    a1 = a3
 91409: 7b 19 38                 u64 [sp + 0x38] = a2
 91412: 50 20 2e 04 ec ee fe     ra = 1070, jump @1605
      :                          @7262 [@dyn 535]
 91419: 82 19 38                 a2 = u64 [sp + 0x38]
 91422: 82 1b 28                 a4 = u64 [sp + 0x28]
 91425: 82 1c 30                 a5 = u64 [sp + 0x30]
 91428: 82 12 20                 t0 = u64 [sp + 0x20]
 91431: 82 1a 50                 a3 = u64 [sp + 0x50]
 91434: 82 17 48                 a0 = u64 [sp + 0x48]
 91437: 28 b7                    jump @7259
      :                          @7263
 91439: 49 07                    u64 [a0 + 0] = 0
 91441: 49 17 08 08              u64 [a0 + 8] = 0x8
 91445: 49 17 10                 u64 [a0 + 16] = 0
 91448: 28 42                    jump @7272
      :                          @7264
 91450: 82 15 48                 s0 = u64 [sp + 0x48]
 91453: 82 16 40                 s1 = u64 [sp + 0x40]
 91456: 82 17                    a0 = u64 [sp]
 91458: 64 58                    a1 = s0
 91460: 64 a9                    a2 = a3
 91462: 50 20 30 04 38 fa        ra = 1072, jump @7165
      :                          @7265 [@dyn 536]
 91468: 51 06 2e                 jump @7272 if s1 == 0
      :                          @7266
 91471: 33 07 00 10              a0 = 0x1000
 91475: ac 67 27                 jump @7272 if a0 <u s1
      :                          @7267
 91478: 97 67 04                 a0 = s1 << 0x4
 91481: 33 08 c0 22 03           a1 = 0x322c0
 91486: 95 88 00 00 01           a1 = a1 + 0x10000
 91491: 01                       fallthrough
      :                          @7268
 91492: 82 89                    a2 = u64 [a1]
 91494: c9 98 0a                 a3 = a1 - a2
 91497: ab 5a 11                 jump @7272 if a3 != s0
      :                          @7269
 91500: c9 79 0a                 a3 = a2 - a0
 91503: 01                       fallthrough
      :                          @7270
 91504: 82 8b                    a4 = u64 [a1]
 91506: ab 9b f2                 jump @7268 if a4 != a2
      :                          @7271
 91509: 7b 8a                    u64 [a1] = a3
 91511: 33 0c                    a5 = 0
 91513: 01                       fallthrough
      :                          @7272
 91514: 82 10 68                 ra = u64 [sp + 0x68]
 91517: 82 15 60                 s0 = u64 [sp + 0x60]
 91520: 82 16 58                 s1 = u64 [sp + 0x58]
 91523: 95 11 70                 sp = sp + 0x70
 91526: 32 00                    ret
      :                          @7273
 91528: 95 11 c8 fe              sp = sp + 0xfffffffffffffec8
 91532: 7b 10 30 01              u64 [sp + 0x130] = ra
 91536: 7b 15 28 01              u64 [sp + 0x128] = s0
 91540: 7b 16 20 01              u64 [sp + 0x120] = s1
 91544: 82 89 10                 a2 = u64 [a1 + 0x10]
 91547: 7b 17                    u64 [sp] = a0
 91549: 51 09 5c 03              jump @7308 if a2 == 0
      :                          @7274
 91553: 57 09 92 03              jump @7314 if a2 <s 0
      :                          @7275
 91557: 7b 18 e8 00              u64 [sp + 0xe8] = a1
 91561: 85 97 ff                 a0 = a2 ^ 0xffffffffffffffff
 91564: 98 77 3f                 a0 = a0 >> 0x3f
 91567: 33 08 c0 22 03           a1 = 0x322c0
 91572: 33 05 00 00 01           s0 = 0x10000
 91577: c8 58 08                 a1 = a1 + s0
 91580: 01                       fallthrough
      :                          @7276
 91581: 82 8b                    a4 = u64 [a1]
 91583: c8 9b 0a                 a3 = a4 + a2
 91586: ac ba 70 03              jump @7313 if a3 <u a4
      :                          @7277
 91590: c8 7a 0c                 a5 = a3 + a0
 91593: d8 ac 06                 s1 = a5 <u a3
 91596: d8 c5 0c                 a5 = s0 <u a5
 91599: d4 6c 0c                 a5 = a5 | s1
 91602: 52 0c 60 03              jump @7313 if a5 != 0
      :                          @7278
 91606: 82 8c                    a5 = u64 [a1]
 91608: ab bc e5                 jump @7276 if a5 != a4
      :                          @7279
 91611: 7b 8a                    u64 [a1] = a3
 91613: 33 06                    s1 = 0
 91615: 33 05 c0 22 04           s0 = 0x422c0
 91620: c9 a5 05                 s0 = s0 - a3
 91623: 64 57                    a0 = s0
 91625: 33 08                    a1 = 0
 91627: 7b 19 40                 u64 [sp + 0x40] = a2
 91630: 50 20 32 04 6b a5 01     ra = 1074, jump @13675
      :                          @7280 [@dyn 537]
 91637: 82 17 40                 a0 = u64 [sp + 0x40]
 91640: 7b 17 08 01              u64 [sp + 0x108] = a0
 91644: 7b 15 10 01              u64 [sp + 0x110] = s0
 91648: 82 17 40                 a0 = u64 [sp + 0x40]
 91651: 7b 17 18 01              u64 [sp + 0x118] = a0
 91655: 95 17 f0 00              a0 = sp + 0xf0
 91659: 95 18 08 01              a1 = sp + 0x108
 91663: 82 19 40                 a2 = u64 [sp + 0x40]
 91666: 50 20 34 04 b6 fe fe     ra = 1076, jump @1895
      :                          @7281 [@dyn 538]
 91673: 82 18 40                 a1 = u64 [sp + 0x40]
 91676: 82 17 e8 00              a0 = u64 [sp + 0xe8]
 91680: 82 77 08                 a0 = u64 [a0 + 0x8]
 91683: 33 0a                    a3 = 0
 91685: 82 19 00 01              a2 = u64 [sp + 0x100]
 91689: 7b 19 10                 u64 [sp + 0x10] = a2
 91692: 82 19 f8 00              a2 = u64 [sp + 0xf8]
 91696: 7b 19 28                 u64 [sp + 0x28] = a2
 91699: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 91703: 95 77 08                 a0 = a0 + 0x8
 91706: 7b 17 38                 u64 [sp + 0x38] = a0
 91709: 9a 80                    ra = -a1
 91711: 7b 10 88 00              u64 [sp + 0x88] = ra
 91715: 28 09                    jump @7283
      :                          @7282
 91717: 82 1a 08                 a3 = u64 [sp + 0x8]
 91720: aa 8a bf 02              jump @7309 if a3 == a1
      :                          @7283
 91724: 7b 1a 30                 u64 [sp + 0x30] = a3
 91727: 95 a7 01                 a0 = a3 + 0x1
 91730: 7b 17 08                 u64 [sp + 0x8] = a0
 91733: ae 87 f0                 jump @7282 if a0 >=u a1
      :                          @7284
 91736: 82 1a 30                 a3 = u64 [sp + 0x30]
 91739: 95 a7 02                 a0 = a3 + 0x2
 91742: 97 a8 04                 a1 = a3 << 0x4
 91745: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 91749: c8 98 08                 a1 = a1 + a2
 91752: 7b 18 50                 u64 [sp + 0x50] = a1
 91755: 95 88 08                 a1 = a1 + 0x8
 91758: 7b 18 48                 u64 [sp + 0x48] = a1
 91761: 96 a8 18                 a1 = a3 * 0x18
 91764: 82 19 28                 a2 = u64 [sp + 0x28]
 91767: c8 98 08                 a1 = a1 + a2
 91770: 95 89 10                 a2 = a1 + 0x10
 91773: 7b 19 20                 u64 [sp + 0x20] = a2
 91776: 95 88 08                 a1 = a1 + 0x8
 91779: 7b 18 18                 u64 [sp + 0x18] = a1
 91782: 82 19 08                 a2 = u64 [sp + 0x8]
 91785: 28 1b                    jump @7287
      :                          @7285
 91787: 82 77 08                 a0 = u64 [a0 + 0x8]
 91790: c8 b7 07                 a0 = a0 + a4
 91793: 46 07 01                 u8 [a0 + 0] = 0x1
 91796: 01                       fallthrough
      :                          @7286
 91797: 82 18 40                 a1 = u64 [sp + 0x40]
 91800: 82 19 60                 a2 = u64 [sp + 0x60]
 91803: d8 89 07                 a0 = a2 <u a1
 91806: c8 97 07                 a0 = a0 + a2
 91809: ae 89 a4                 jump @7282 if a2 >=u a1
      :                          @7287
 91812: 82 18 50                 a1 = u64 [sp + 0x50]
 91815: 82 8a                    a3 = u64 [a1]
 91817: 82 18 48                 a1 = u64 [sp + 0x48]
 91820: 82 8b                    a4 = u64 [a1]
 91822: 7b 19 58                 u64 [sp + 0x58] = a2
 91825: 97 98 04                 a1 = a2 << 0x4
 91828: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 91832: c8 98 08                 a1 = a1 + a2
 91835: 82 89                    a2 = u64 [a1]
 91837: 82 88 08                 a1 = u64 [a1 + 0x8]
 91840: 7b 17 60                 u64 [sp + 0x60] = a0
 91843: c9 a9 07                 a0 = a2 - a3
 91846: 7b 17 98 00              u64 [sp + 0x98] = a0
 91850: c9 b8 07                 a0 = a1 - a4
 91853: 7b 17 90 00              u64 [sp + 0x90] = a0
 91857: e5 9a 07                 a0 = mins(a3, a2)
 91860: 7b 17 80 00              u64 [sp + 0x80] = a0
 91864: 7b 1a c0 00              u64 [sp + 0xc0] = a3
 91868: 7b 19 b0 00              u64 [sp + 0xb0] = a2
 91872: e3 9a 07                 a0 = maxs(a3, a2)
 91875: 7b 17 78                 u64 [sp + 0x78] = a0
 91878: e5 8b 07                 a0 = mins(a4, a1)
 91881: 7b 17 70                 u64 [sp + 0x70] = a0
 91884: 7b 1b b8 00              u64 [sp + 0xb8] = a4
 91888: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 91892: e3 8b 07                 a0 = maxs(a4, a1)
 91895: 7b 17 68                 u64 [sp + 0x68] = a0
 91898: 33 0a 01                 a3 = 0x1
 91901: 82 19 38                 a2 = u64 [sp + 0x38]
 91904: 28 18                    jump @7289
      :                          @7288
 91906: 82 1a e0 00              a3 = u64 [sp + 0xe0]
 91910: 95 aa 01                 a3 = a3 + 0x1
 91913: c8 a0 07                 a0 = ra + a3
 91916: 82 19 e8 00              a2 = u64 [sp + 0xe8]
 91920: 95 99 10                 a2 = a2 + 0x10
 91923: 51 17 01 b3 01           jump @7303 if a0 == 1
      :                          @7289
 91928: c8 a0 07                 a0 = ra + a3
 91931: 7b 1a e0 00              u64 [sp + 0xe0] = a3
 91935: 64 a8                    a1 = a3
 91937: 93 78                    a1 = 0 if a0 == 0
 91939: 82 93                    t1 = u64 [a2]
 91941: 7b 19 e8 00              u64 [sp + 0xe8] = a2
 91945: 82 96 f8                 s1 = u64 [a2 + 0xfffffffffffffff8]
 91948: 97 88 04                 a1 = a1 << 0x4
 91951: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 91955: c8 78 08                 a1 = a1 + a0
 91958: 82 8b                    a4 = u64 [a1]
 91960: 82 89 08                 a2 = u64 [a1 + 0x8]
 91963: 82 1a b8 00              a3 = u64 [sp + 0xb8]
 91967: c9 a3 07                 a0 = t1 - a3
 91970: 82 18 98 00              a1 = u64 [sp + 0x98]
 91974: ca 87 04                 t2 = a0 * a1
 91977: 82 1c c0 00              a5 = u64 [sp + 0xc0]
 91981: c9 6c 07                 a0 = a5 - s1
 91984: 82 15 90 00              s0 = u64 [sp + 0x90]
 91988: ca 57 07                 a0 = a0 * s0
 91991: c8 74 04                 t2 = t2 + a0
 91994: c9 a9 07                 a0 = a2 - a3
 91997: ca 87 08                 a1 = a0 * a1
 92000: c9 bc 07                 a0 = a5 - a4
 92003: ca 57 07                 a0 = a0 * s0
 92006: c8 78 05                 s0 = a1 + a0
 92009: 7b 1b c8 00              u64 [sp + 0xc8] = a4
 92013: c9 6b 07                 a0 = a4 - s1
 92016: 64 6b                    a4 = s1
 92018: c9 3a 0a                 a3 = a3 - t1
 92021: ca a7 02                 t0 = a0 * a3
 92024: 7b 19 d0 00              u64 [sp + 0xd0] = a2
 92028: c9 39 0a                 a3 = a2 - t1
 92031: c9 c6 00                 ra = s1 - a5
 92034: ca 0a 0c                 a5 = a3 * ra
 92037: c8 c2 02                 t0 = t0 + a5
 92040: 82 1c a8 00              a5 = u64 [sp + 0xa8]
 92044: 7b 13 d8 00              u64 [sp + 0xd8] = t1
 92048: c9 3c 0c                 a5 = a5 - t1
 92051: ca c7 07                 a0 = a0 * a5
 92054: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 92058: c9 86 0c                 a5 = s1 - a1
 92061: ca ca 0a                 a3 = a3 * a5
 92064: 8f 4c                    a5 = t2 >s 0
 92066: 89 58                    a1 = s0 <s 0
 92068: d2 c8 08                 a1 = a1 & a5
 92071: c8 a7 07                 a0 = a0 + a3
 92074: 52 08 0e                 jump @7291 if a1 != 0
      :                          @7290
 92077: 89 48                    a1 = t2 <s 0
 92079: 8f 5a                    a3 = s0 >s 0
 92081: d2 a8 08                 a1 = a1 & a3
 92084: 51 08 a6 00              jump @7298 if a1 == 0
      :                          @7291
 92088: 8f 28                    a1 = t0 >s 0
 92090: 89 7a                    a3 = a0 <s 0
 92092: d2 a8 08                 a1 = a1 & a3
 92095: 82 10 88 00              ra = u64 [sp + 0x88]
 92099: 52 08 d2 fe              jump @7286 if a1 != 0
      :                          @7292
 92103: 89 28                    a1 = t0 <s 0
 92105: 8f 7a                    a3 = a0 >s 0
 92107: d2 a8 08                 a1 = a1 & a3
 92110: 52 08 c7 fe              jump @7286 if a1 != 0
      :                          @7293
 92114: 52 02 42                 jump @7295 if t0 != 0
      :                          @7294
 92117: 82 19 c8 00              a2 = u64 [sp + 0xc8]
 92121: e5 9b 08                 a1 = mins(a4, a2)
 92124: 82 1c c0 00              a5 = u64 [sp + 0xc0]
 92128: d9 8c 08                 a1 = a5 <s a1
 92131: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 92134: e3 9b 0a                 a3 = maxs(a4, a2)
 92137: d9 ca 0a                 a3 = a3 <s a5
 92140: e0 a8 08                 a1 = a1 & ~a3
 92143: 82 19 d0 00              a2 = u64 [sp + 0xd0]
 92147: 82 15 d8 00              s0 = u64 [sp + 0xd8]
 92151: e5 95 0a                 a3 = mins(s0, a2)
 92154: 82 1c b8 00              a5 = u64 [sp + 0xb8]
 92158: d9 ac 0a                 a3 = a5 <s a3
 92161: 85 aa 01                 a3 = a3 ^ 0x1
 92164: d2 a8 08                 a1 = a1 & a3
 92167: e3 95 0a                 a3 = maxs(s0, a2)
 92170: d9 ca 0a                 a3 = a3 <s a5
 92173: e0 a8 08                 a1 = a1 & ~a3
 92176: 52 08 85 fe              jump @7286 if a1 != 0
      :                          @7295
 92180: 52 07 ee fe              jump @7288 if a0 != 0
      :                          @7296
 92184: 82 18 c8 00              a1 = u64 [sp + 0xc8]
 92188: e5 8b 07                 a0 = mins(a4, a1)
 92191: 82 1a b0 00              a3 = u64 [sp + 0xb0]
 92195: d9 7a 07                 a0 = a3 <s a0
 92198: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 92201: e3 8b 08                 a1 = maxs(a4, a1)
 92204: d9 a8 08                 a1 = a1 <s a3
 92207: e0 87 07                 a0 = a0 & ~a1
 92210: 82 19 d0 00              a2 = u64 [sp + 0xd0]
 92214: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 92218: e5 9b 08                 a1 = mins(a4, a2)
 92221: 82 1a a8 00              a3 = u64 [sp + 0xa8]
 92225: d9 8a 08                 a1 = a3 <s a1
 92228: e0 87 07                 a0 = a0 & ~a1
 92231: e3 9b 08                 a1 = maxs(a4, a2)
 92234: d9 a8 08                 a1 = a1 <s a3
 92237: 85 88 01                 a1 = a1 ^ 0x1
 92240: d2 87 07                 a0 = a0 & a1
 92243: 51 07 af fe              jump @7288 if a0 == 0
      :                          @7297
 92247: 28 3e fe                 jump @7286
      :                          @7298
 92250: 82 10 88 00              ra = u64 [sp + 0x88]
 92254: 52 04 2d                 jump @7300 if t2 != 0
      :                          @7299
 92257: 82 18 80 00              a1 = u64 [sp + 0x80]
 92261: d9 8b 08                 a1 = a4 <s a1
 92264: 82 1a 78                 a3 = u64 [sp + 0x78]
 92267: d9 ba 0a                 a3 = a3 <s a4
 92270: d4 a8 08                 a1 = a1 | a3
 92273: 82 1a 70                 a3 = u64 [sp + 0x70]
 92276: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 92280: d9 a9 0a                 a3 = a2 <s a3
 92283: 82 1c 68                 a5 = u64 [sp + 0x68]
 92286: d9 9c 0c                 a5 = a5 <s a2
 92289: d4 ca 0a                 a3 = a3 | a5
 92292: d4 a8 08                 a1 = a1 | a3
 92295: 51 08 0e fe              jump @7286 if a1 == 0
      :                          @7300
 92299: 52 05 47 ff              jump @7293 if s0 != 0
      :                          @7301
 92303: 82 18 80 00              a1 = u64 [sp + 0x80]
 92307: 82 19 c8 00              a2 = u64 [sp + 0xc8]
 92311: d9 89 08                 a1 = a2 <s a1
 92314: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 92317: 82 1a 78                 a3 = u64 [sp + 0x78]
 92320: d9 9a 0a                 a3 = a3 <s a2
 92323: e0 a8 08                 a1 = a1 & ~a3
 92326: 82 1a 70                 a3 = u64 [sp + 0x70]
 92329: 82 19 d0 00              a2 = u64 [sp + 0xd0]
 92333: d9 a9 0a                 a3 = a2 <s a3
 92336: 85 aa 01                 a3 = a3 ^ 0x1
 92339: d2 a8 08                 a1 = a1 & a3
 92342: 82 1a 68                 a3 = u64 [sp + 0x68]
 92345: d9 9a 0a                 a3 = a3 <s a2
 92348: e0 a8 08                 a1 = a1 & ~a3
 92351: 51 08 13 ff              jump @7293 if a1 == 0
      :                          @7302
 92355: 28 d2 fd                 jump @7286
      :                          @7303
 92358: 82 18 10                 a1 = u64 [sp + 0x10]
 92361: 82 1b 30                 a4 = u64 [sp + 0x30]
 92364: ae 8b 63                 jump @7310 if a4 >=u a1
      :                          @7304
 92367: 82 17 20                 a0 = u64 [sp + 0x20]
 92370: 82 7a                    a3 = u64 [a0]
 92372: 82 1c 58                 a5 = u64 [sp + 0x58]
 92375: ae ac 59                 jump @7311 if a5 >=u a3
      :                          @7305
 92378: 82 17 18                 a0 = u64 [sp + 0x18]
 92381: 82 77                    a0 = u64 [a0]
 92383: c8 c7 07                 a0 = a0 + a5
 92386: 46 07 01                 u8 [a0 + 0] = 0x1
 92389: ae 8c 4c                 jump @7312 if a5 >=u a1
      :                          @7306
 92392: 96 c7 18                 a0 = a5 * 0x18
 92395: 82 18 28                 a1 = u64 [sp + 0x28]
 92398: c8 87 07                 a0 = a0 + a1
 92401: 82 79 10                 a2 = u64 [a0 + 0x10]
 92404: ac 9b 97 fd              jump @7285 if a4 <u a2
      :                          @7307
 92408: 00                       trap
      :                          @7308
 92409: 49 21 f0 00              u64 [sp + 240] = 0
 92413: 49 21 f8 00 08           u64 [sp + 248] = 0x8
 92418: 49 21 00 01              u64 [sp + 256] = 0
 92422: 01                       fallthrough
      :                          @7309
 92423: 82 17 00 01              a0 = u64 [sp + 0x100]
 92427: 82 18 f8 00              a1 = u64 [sp + 0xf8]
 92431: 82 19 f0 00              a2 = u64 [sp + 0xf0]
 92435: 82 1a                    a3 = u64 [sp]
 92437: 7b a7 10                 u64 [a3 + 0x10] = a0
 92440: 7b a8 08                 u64 [a3 + 0x8] = a1
 92443: 7b a9                    u64 [a3] = a2
 92445: 82 10 30 01              ra = u64 [sp + 0x130]
 92449: 82 15 28 01              s0 = u64 [sp + 0x128]
 92453: 82 16 20 01              s1 = u64 [sp + 0x120]
 92457: 95 11 38 01              sp = sp + 0x138
 92461: 32 00                    ret
      :                          @7310
 92463: 00                       trap
      :                          @7311
 92464: 00                       trap
      :                          @7312
 92465: 00                       trap
      :                          @7313
 92466: 00                       trap
      :                          @7314
 92467: 00                       trap
      :                          @7315
 92468: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 92471: 7b 10 48                 u64 [sp + 0x48] = ra
 92474: 7b 15 40                 u64 [sp + 0x40] = s0
 92477: 7b 16 38                 u64 [sp + 0x38] = s1
 92480: 82 89 10                 a2 = u64 [a1 + 0x10]
 92483: 7b 17                    u64 [sp] = a0
 92485: 51 09 f6 00              jump @7333 if a2 == 0
      :                          @7316
 92489: 64 86                    s1 = a1
 92491: 98 98 3b                 a1 = a2 >> 0x3b
 92494: 52 08 1c 01              jump @7338 if a1 != 0
      :                          @7317
 92498: 88 83 01                 t1 = a1 <u 0x1
 92501: 7b 19 08                 u64 [sp + 0x8] = a2
 92504: 97 97 04                 a0 = a2 << 0x4
 92507: 97 33 03                 t1 = t1 << 0x3
 92510: 33 00 c0 22 03           ra = 0x322c0
 92515: 33 04 00 00 01           t2 = 0x10000
 92520: c8 40 0c                 a5 = ra + t2
 92523: 01                       fallthrough
      :                          @7318
 92524: 82 c9                    a2 = u64 [a5]
 92526: c8 79 08                 a1 = a2 + a0
 92529: ac 98 f8 00              jump @7337 if a1 <u a2
      :                          @7319
 92533: c8 38 0b                 a4 = a1 + t1
 92536: d8 8b 05                 s0 = a4 <u a1
 92539: d8 b4 0b                 a4 = t2 <u a4
 92542: d4 5b 0b                 a4 = a4 | s0
 92545: 52 0b e8 00              jump @7337 if a4 != 0
      :                          @7320
 92549: c9 80 05                 s0 = ra - a1
 92552: c8 45 05                 s0 = s0 + t2
 92555: 84 5b 07                 a4 = s0 & 0x7
 92558: c8 b8 08                 a1 = a1 + a4
 92561: 01                       fallthrough
      :                          @7321
 92562: 82 ca                    a3 = u64 [a5]
 92564: ab 9a d8                 jump @7318 if a3 != a2
      :                          @7322
 92567: 7b c8                    u64 [a5] = a1
 92569: 33 08                    a1 = 0
 92571: 33 07                    a0 = 0
 92573: c9 b5 02                 t0 = s0 - a4
 92576: 82 13 08                 t1 = u64 [sp + 0x8]
 92579: 7b 13 20                 u64 [sp + 0x20] = t1
 92582: 82 64 08                 t2 = u64 [s1 + 0x8]
 92585: 7b 12 28                 u64 [sp + 0x28] = t0
 92588: 49 11 30                 u64 [sp + 48] = 0
 92591: 33 00 18                 ra = 0x18
 92594: 28 24                    jump @7324
      :                          @7323
 92596: 82 19 10                 a2 = u64 [sp + 0x10]
 92599: c9 59 07                 a0 = a2 - s0
 92602: c8 95 05                 s0 = s0 + a2
 92605: 97 89 04                 a2 = a1 << 0x4
 92608: c8 29 09                 a2 = a2 + t0
 92611: 7b 97                    u64 [a2] = a0
 92613: 7b 95 08                 u64 [a2 + 0x8] = s0
 92616: 95 88 01                 a1 = a1 + 0x1
 92619: 7b 18 30                 u64 [sp + 0x30] = a1
 92622: 82 19 18                 a2 = u64 [sp + 0x18]
 92625: 64 97                    a0 = a2
 92627: aa 39 73                 jump @7334 if a2 == t1
      :                          @7324
 92630: ca 07 0a                 a3 = a0 * ra
 92633: c8 4a 0a                 a3 = a3 + t2
 92636: 82 a9 10                 a2 = u64 [a3 + 0x10]
 92639: ae 97 89 00              jump @7336 if a0 >=u a2
      :                          @7325
 92643: 82 ac 08                 a5 = u64 [a3 + 0x8]
 92646: 97 7a 03                 a3 = a0 << 0x3
 92649: c8 ca 0a                 a3 = a3 + a5
 92652: 82 aa                    a3 = u64 [a3]
 92654: 7b 1a 10                 u64 [sp + 0x10] = a3
 92657: 33 05                    s0 = 0
 92659: 33 0a                    a3 = 0
 92661: 95 7b 01                 a4 = a0 + 0x1
 92664: 7b 1b 18                 u64 [sp + 0x18] = a4
 92667: 28 0b                    jump @7327
      :                          @7326
 92669: 95 aa 01                 a3 = a3 + 0x1
 92672: 95 cc 08                 a5 = a5 + 0x8
 92675: aa a3 15                 jump @7330 if t1 == a3
      :                          @7327
 92678: aa a7 f7                 jump @7326 if a0 == a3
      :                          @7328
 92681: ae 9a 5e                 jump @7335 if a3 >=u a2
      :                          @7329
 92684: 82 cb                    a4 = u64 [a5]
 92686: 9a b6                    s1 = -a4
 92688: e3 6b 0b                 a4 = maxs(a4, s1)
 92691: c8 b5 05                 s0 = s0 + a4
 92694: 28 e7                    jump @7326
      :                          @7330
 92696: 82 17 20                 a0 = u64 [sp + 0x20]
 92699: ab 78 99                 jump @7323 if a1 != a0
      :                          @7331
 92702: 95 17 20                 a0 = sp + 0x20
 92705: 64 46                    s1 = t2
 92707: 50 20 36 04 dd e9 fe     ra = 1078, jump @1605
      :                          @7332 [@dyn 539]
 92714: 33 00 18                 ra = 0x18
 92717: 64 64                    t2 = s1
 92719: 82 13 08                 t1 = u64 [sp + 0x8]
 92722: 82 18 30                 a1 = u64 [sp + 0x30]
 92725: 82 12 28                 t0 = u64 [sp + 0x28]
 92728: 28 7c ff                 jump @7323
      :                          @7333
 92731: 49 11 20                 u64 [sp + 32] = 0
 92734: 49 11 28 08              u64 [sp + 40] = 0x8
 92738: 49 11 30                 u64 [sp + 48] = 0
 92741: 01                       fallthrough
      :                          @7334
 92742: 82 17 30                 a0 = u64 [sp + 0x30]
 92745: 82 18 28                 a1 = u64 [sp + 0x28]
 92748: 82 19 20                 a2 = u64 [sp + 0x20]
 92751: 82 1a                    a3 = u64 [sp]
 92753: 7b a7 10                 u64 [a3 + 0x10] = a0
 92756: 7b a8 08                 u64 [a3 + 0x8] = a1
 92759: 7b a9                    u64 [a3] = a2
 92761: 82 10 48                 ra = u64 [sp + 0x48]
 92764: 82 15 40                 s0 = u64 [sp + 0x40]
 92767: 82 16 38                 s1 = u64 [sp + 0x38]
 92770: 95 11 50                 sp = sp + 0x50
 92773: 32 00                    ret
      :                          @7335
 92775: 00                       trap
      :                          @7336
 92776: 00                       trap
      :                          @7337
 92777: 00                       trap
      :                          @7338
 92778: 00                       trap
      :                          @7339
 92779: 95 11 68 ff              sp = sp + 0xffffffffffffff68
 92783: 7b 10 90 00              u64 [sp + 0x90] = ra
 92787: 7b 15 88 00              u64 [sp + 0x88] = s0
 92791: 7b 16 80 00              u64 [sp + 0x80] = s1
 92795: 82 78 10                 a1 = u64 [a0 + 0x10]
 92798: 51 08 65 02              jump @7396 if a1 == 0
      :                          @7340
 92802: 7b 17 20                 u64 [sp + 0x20] = a0
 92805: 82 70 08                 ra = u64 [a0 + 0x8]
 92808: 33 04                    t2 = 0
 92810: 33 0a                    a3 = 0
 92812: 95 09 10                 a2 = ra + 0x10
 92815: 82 07 10                 a0 = u64 [ra + 0x10]
 92818: 7b 17 50                 u64 [sp + 0x50] = a0
 92821: 33 02 01                 t0 = 0x1
 92824: 7b 19 18                 u64 [sp + 0x18] = a2
 92827: 64 93                    t1 = a2
 92829: 33 07 01                 a0 = 0x1
 92832: 01                       fallthrough
      :                          @7341
 92833: 84 77 01                 a0 = a0 & 0x1
 92836: 51 07 33 02              jump @7394 if a0 == 0
      :                          @7342
 92840: 82 17 50                 a0 = u64 [sp + 0x50]
 92843: e4 7a 0c                 a5 = maxu(a3, a0)
 92846: 97 a7 03                 a0 = a3 << 0x3
 92849: 7b 17 60                 u64 [sp + 0x60] = a0
 92852: 64 a7                    a0 = a3
 92854: 28 11                    jump @7345
      :                          @7343
 92856: ab 89 3e                 jump @7352 if a2 != a1
      :                          @7344
 92859: 82 17 60                 a0 = u64 [sp + 0x60]
 92862: 95 77 08                 a0 = a0 + 0x8
 92865: 7b 17 60                 u64 [sp + 0x60] = a0
 92868: 64 57                    a0 = s0
 92870: 01                       fallthrough
      :                          @7345
 92871: aa c7 77 01              jump @7372 if a0 == a5
      :                          @7346
 92875: 95 75 01                 s0 = a0 + 0x1
 92878: 64 36                    s1 = t1
 92880: 64 49                    a2 = t2
 92882: 01                       fallthrough
      :                          @7347
 92883: 82 6b                    a4 = u64 [s1]
 92885: ae b7 00 02              jump @7392 if a0 >=u a4
      :                          @7348
 92889: 82 6b f8                 a4 = u64 [s1 + 0xfffffffffffffff8]
 92892: 97 7a 03                 a3 = a0 << 0x3
 92895: c8 ab 0b                 a4 = a4 + a3
 92898: 82 bb                    a4 = u64 [a4]
 92900: 52 0b d4                 jump @7343 if a4 != 0
      :                          @7349
 92903: 95 99 01                 a2 = a2 + 0x1
 92906: 95 66 18                 s1 = s1 + 0x18
 92909: ac 89 e6                 jump @7347 if a2 <u a1
      :                          @7350
 92912: ae 28 cb                 jump @7344 if a1 >=u t0
      :                          @7351
 92915: 28 f1 01                 jump @7397
      :                          @7352
 92918: 7b 15                    u64 [sp] = s0
 92920: 7b 13 08                 u64 [sp + 0x8] = t1
 92923: 7b 12 10                 u64 [sp + 0x10] = t0
 92926: 96 43 18                 t1 = t2 * 0x18
 92929: c8 03 03                 t1 = t1 + ra
 92932: 82 3b 10                 a4 = u64 [t1 + 0x10]
 92935: 7b 1b 78                 u64 [sp + 0x78] = a4
 92938: 82 3b 08                 a4 = u64 [t1 + 0x8]
 92941: 7b 1b 70                 u64 [sp + 0x70] = a4
 92944: 82 3b                    a4 = u64 [t1]
 92946: 96 99 18                 a2 = a2 * 0x18
 92949: 7b 10 28                 u64 [sp + 0x28] = ra
 92952: c8 09 09                 a2 = a2 + ra
 92955: 7b 1b 68                 u64 [sp + 0x68] = a4
 92958: 82 9b                    a4 = u64 [a2]
 92960: 82 9c 08                 a5 = u64 [a2 + 0x8]
 92963: 82 96 10                 s1 = u64 [a2 + 0x10]
 92966: 7b 3b                    u64 [t1] = a4
 92968: 7b 3c 08                 u64 [t1 + 0x8] = a5
 92971: 7b 36 10                 u64 [t1 + 0x10] = s1
 92974: 82 1b 78                 a4 = u64 [sp + 0x78]
 92977: 7b 9b 10                 u64 [a2 + 0x10] = a4
 92980: 82 1b 70                 a4 = u64 [sp + 0x70]
 92983: 7b 9b 08                 u64 [a2 + 0x8] = a4
 92986: 82 1b 68                 a4 = u64 [sp + 0x68]
 92989: 95 3c 10                 a5 = t1 + 0x10
 92992: 7b 1c 58                 u64 [sp + 0x58] = a5
 92995: 7b 9b                    u64 [a2] = a4
 92997: 64 8c                    a5 = a1
 92999: 7b 14 30                 u64 [sp + 0x30] = t2
 93002: 64 45                    s0 = t2
 93004: 82 19 18                 a2 = u64 [sp + 0x18]
 93007: 82 1b 50                 a4 = u64 [sp + 0x50]
 93010: ae b7 1a                 jump @7355 if a0 >=u a4
      :                          @7353
 93013: 33 0b                    a4 = 0
 93015: 95 33 08                 t1 = t1 + 0x8
 93018: 7b 13 40                 u64 [sp + 0x40] = t1
 93021: 28 38                    jump @7361
      :                          @7354
 93023: 95 99 18                 a2 = a2 + 0x18
 93026: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 93029: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 93032: 51 0c b3 00              jump @7370 if a5 == 0
      :                          @7355
 93036: 51 05 f3                 jump @7354 if s0 == 0
      :                          @7356
 93039: 82 9b                    a4 = u64 [a2]
 93041: ae b7 64 01              jump @7392 if a0 >=u a4
      :                          @7357
 93045: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
 93048: c8 ab 0b                 a4 = a4 + a3
 93051: 82 bb                    a4 = u64 [a4]
 93053: 51 0b e2                 jump @7354 if a4 == 0
      :                          @7358
 93056: 82 1b 58                 a4 = u64 [sp + 0x58]
 93059: 82 bb                    a4 = u64 [a4]
 93061: ac b7 da                 jump @7354 if a0 <u a4
      :                          @7359
 93064: 28 4d 01                 jump @7392
      :                          @7360
 93067: 82 1b 38                 a4 = u64 [sp + 0x38]
 93070: 95 bb 01                 a4 = a4 + 0x1
 93073: aa 8b 8a 00              jump @7370 if a4 == a1
      :                          @7361
 93077: 82 19 30                 a2 = u64 [sp + 0x30]
 93080: 7b 1b 38                 u64 [sp + 0x38] = a4
 93083: aa 9b f0                 jump @7360 if a4 == a2
      :                          @7362
 93086: 82 1b 38                 a4 = u64 [sp + 0x38]
 93089: 96 b0 18                 ra = a4 * 0x18
 93092: 82 19 28                 a2 = u64 [sp + 0x28]
 93095: c8 90 00                 ra = ra + a2
 93098: 82 0b 10                 a4 = u64 [ra + 0x10]
 93101: ae b7 28 01              jump @7392 if a0 >=u a4
      :                          @7363
 93105: 82 09 08                 a2 = u64 [ra + 0x8]
 93108: c8 a9 09                 a2 = a2 + a3
 93111: 82 99                    a2 = u64 [a2]
 93113: 7b 19 48                 u64 [sp + 0x48] = a2
 93116: 51 09 cf                 jump @7360 if a2 == 0
      :                          @7364
 93119: 82 19 58                 a2 = u64 [sp + 0x58]
 93122: 82 9b                    a4 = u64 [a2]
 93124: ae b7 11 01              jump @7392 if a0 >=u a4
      :                          @7365
 93128: 82 19 40                 a2 = u64 [sp + 0x40]
 93131: 82 99                    a2 = u64 [a2]
 93133: c8 a9 09                 a2 = a2 + a3
 93136: 82 99                    a2 = u64 [a2]
 93138: 95 06 10                 s1 = ra + 0x10
 93141: 95 00 08                 ra = ra + 0x8
 93144: 82 14 60                 t2 = u64 [sp + 0x60]
 93147: 64 7b                    a4 = a0
 93149: 01                       fallthrough
      :                          @7366
 93150: 82 1c 58                 a5 = u64 [sp + 0x58]
 93153: 82 cc                    a5 = u64 [a5]
 93155: ae cb f3 00              jump @7393 if a4 >=u a5
      :                          @7367
 93159: 82 6c                    a5 = u64 [s1]
 93161: ae cb ed 00              jump @7393 if a4 >=u a5
      :                          @7368
 93165: 82 1c 40                 a5 = u64 [sp + 0x40]
 93168: 82 cc                    a5 = u64 [a5]
 93170: 82 02                    t0 = u64 [ra]
 93172: c8 4c 0c                 a5 = a5 + t2
 93175: 82 cc                    a5 = u64 [a5]
 93177: c8 42 02                 t0 = t0 + t2
 93180: 82 23                    t1 = u64 [t0]
 93182: 95 bb 01                 a4 = a4 + 0x1
 93185: 82 15 48                 s0 = u64 [sp + 0x48]
 93188: ca 5c 0c                 a5 = a5 * s0
 93191: ca 93 05                 s0 = t1 * a2
 93194: c9 5c 0c                 a5 = a5 - s0
 93197: 7b 2c                    u64 [t0] = a5
 93199: 95 44 08                 t2 = t2 + 0x8
 93202: 82 1c 50                 a5 = u64 [sp + 0x50]
 93205: ab bc c9                 jump @7366 if a5 != a4
      :                          @7369
 93208: 28 73 ff                 jump @7360
      :                          @7370
 93211: 82 14 30                 t2 = u64 [sp + 0x30]
 93214: 95 44 01                 t2 = t2 + 0x1
 93217: d8 84 07                 a0 = t2 <u a1
 93220: 82 12 10                 t0 = u64 [sp + 0x10]
 93223: 95 22 01                 t0 = t0 + 0x1
 93226: 82 13 08                 t1 = u64 [sp + 0x8]
 93229: 95 33 18                 t1 = t1 + 0x18
 93232: 82 10 28                 ra = u64 [sp + 0x28]
 93235: 82 1a                    a3 = u64 [sp]
 93237: ab 84 6c fe              jump @7341 if t2 != a1
      :                          @7371
 93241: 7b 18 30                 u64 [sp + 0x30] = a1
 93244: 28 06                    jump @7373
      :                          @7372
 93246: 7b 14 30                 u64 [sp + 0x30] = t2
 93249: 01                       fallthrough
      :                          @7373
 93250: 33 07                    a0 = 0
 93252: 33 03 18                 t1 = 0x18
 93255: 33 0a c0 22 03           a3 = 0x322c0
 93260: 95 ab 00 00 01           a4 = a3 + 0x10000
 93265: 33 02 00 20              t0 = 0x2000
 93269: 28 08                    jump @7375
      :                          @7374
 93271: 95 77 01                 a0 = a0 + 0x1
 93274: aa 87 33                 jump @7384 if a0 == a1
      :                          @7375
 93277: ca 37 0c                 a5 = a0 * t1
 93280: c8 0c 0c                 a5 = a5 + ra
 93283: 82 c6                    s1 = u64 [a5]
 93285: 51 06 f2                 jump @7374 if s1 == 0
      :                          @7376
 93288: ac 62 ef                 jump @7374 if t0 <u s1
      :                          @7377
 93291: 82 cc 08                 a5 = u64 [a5 + 0x8]
 93294: 97 64 03                 t2 = s1 << 0x3
 93297: 01                       fallthrough
      :                          @7378
 93298: 82 b5                    s0 = u64 [a4]
 93300: c9 5b 0a                 a3 = a4 - s0
 93303: ab ca e0                 jump @7374 if a3 != a5
      :                          @7379
 93306: c9 45 0a                 a3 = s0 - t2
 93309: 01                       fallthrough
      :                          @7380
 93310: 82 b9                    a2 = u64 [a4]
 93312: ab 59 f2                 jump @7378 if a2 != s0
      :                          @7381
 93315: 7b ba                    u64 [a4] = a3
 93317: 33 06                    s1 = 0
 93319: 01                       fallthrough
      :                          @7382
 93320: ab 59 ea                 jump @7378 if a2 != s0
      :                          @7383
 93323: 28 cc                    jump @7374
      :                          @7384
 93325: 82 17 20                 a0 = u64 [sp + 0x20]
 93328: 82 77                    a0 = u64 [a0]
 93330: 51 07 2e                 jump @7391 if a0 == 0
      :                          @7385
 93333: 33 08 aa 0a              a1 = 0xaaa
 93337: ac 78 27                 jump @7391 if a1 <u a0
      :                          @7386
 93340: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
 93343: 33 08 c0 22 03           a1 = 0x322c0
 93348: 95 88 00 00 01           a1 = a1 + 0x10000
 93353: 01                       fallthrough
      :                          @7387
 93354: 82 89                    a2 = u64 [a1]
 93356: c9 98 0a                 a3 = a1 - a2
 93359: ab 0a 11                 jump @7391 if a3 != ra
      :                          @7388
 93362: c8 79 0a                 a3 = a2 + a0
 93365: 01                       fallthrough
      :                          @7389
 93366: 82 8b                    a4 = u64 [a1]
 93368: ab 9b f2                 jump @7387 if a4 != a2
      :                          @7390
 93371: 7b 8a                    u64 [a1] = a3
 93373: 33 0c                    a5 = 0
 93375: 01                       fallthrough
      :                          @7391
 93376: 82 17 30                 a0 = u64 [sp + 0x30]
 93379: 82 10 90 00              ra = u64 [sp + 0x90]
 93383: 82 15 88 00              s0 = u64 [sp + 0x88]
 93387: 82 16 80 00              s1 = u64 [sp + 0x80]
 93391: 95 11 98 00              sp = sp + 0x98
 93395: 32 00                    ret
      :                          @7392
 93397: 00                       trap
      :                          @7393
 93398: 00                       trap
      :                          @7394
 93399: 7b 14 30                 u64 [sp + 0x30] = t2
 93402: 82 17 50                 a0 = u64 [sp + 0x50]
 93405: ae 7a 65 ff              jump @7373 if a3 >=u a0
      :                          @7395
 93409: 28 0a                    jump @7398
      :                          @7396
 93411: 00                       trap
      :                          @7397
 93412: e4 28 07                 a0 = maxu(a1, t0)
 93415: 7b 17 30                 u64 [sp + 0x30] = a0
 93418: 00                       trap
      :                          @7398
 93419: 00                       trap
      :                          @7399
 93420: 82 7b                    a4 = u64 [a0]
 93422: 82 7a 08                 a3 = u64 [a0 + 0x8]
 93425: 82 72 18                 t0 = u64 [a0 + 0x18]
 93428: 82 79 10                 a2 = u64 [a0 + 0x10]
 93431: ca b2 0c                 a5 = t0 * a4
 93434: ca a9 08                 a1 = a2 * a3
 93437: 33 07 ff                 a0 = 0xffffffffffffffff
 93440: aa 8c 71 cf 00           jump @10679 if a5 == a1
      :                          @7400
 93445: c9 8c 0c                 a5 = a5 - a1
 93448: 9a b7                    a0 = -a4
 93450: e3 7b 07                 a0 = maxs(a4, a0)
 93453: 9a a8                    a1 = -a3
 93455: e3 8a 08                 a1 = maxs(a3, a1)
 93458: c8 78 03                 t1 = a1 + a0
 93461: 9a 9b                    a4 = -a2
 93463: e3 b9 0a                 a3 = maxs(a2, a4)
 93466: 9a 2b                    a4 = -t0
 93468: e3 b2 0b                 a4 = maxs(t0, a4)
 93471: c8 ab 09                 a2 = a4 + a3
 93474: e3 93 09                 a2 = maxs(t1, a2)
 93477: c8 b8 08                 a1 = a1 + a4
 93480: c8 a7 07                 a0 = a0 + a3
 93483: e3 78 07                 a0 = maxs(a1, a0)
 93486: ca 79 07                 a0 = a2 * a0
 93489: 9a c8                    a1 = -a5
 93491: e3 8c 08                 a1 = maxs(a5, a1)
 93494: cb 87 07                 a0 = a0 /u a1
 93497: 28 38 cf 00              jump @10679
      :                          @7401
 93501: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 93504: 7b 10 30                 u64 [sp + 0x30] = ra
 93507: 7b 15 28                 u64 [sp + 0x28] = s0
 93510: 7b 16 20                 u64 [sp + 0x20] = s1
 93513: 82 80 10                 ra = u64 [a1 + 0x10]
 93516: 51 00 ce 00              jump @7417 if ra == 0
      :                          @7402
 93520: 98 0a 3c                 a3 = ra >> 0x3c
 93523: 52 0a e3 00              jump @7421 if a3 != 0
      :                          @7403
 93527: 7b 19 08                 u64 [sp + 0x8] = a2
 93530: 7b 18 10                 u64 [sp + 0x10] = a1
 93533: 7b 17                    u64 [sp] = a0
 93535: 88 a2 01                 t0 = a3 <u 0x1
 93538: 97 09 03                 a2 = ra << 0x3
 93541: 97 22 03                 t0 = t0 << 0x3
 93544: 33 04 c0 22 03           t2 = 0x322c0
 93549: 33 03 00 00 01           t1 = 0x10000
 93554: c8 34 0b                 a4 = t2 + t1
 93557: 01                       fallthrough
      :                          @7404
 93558: 82 b6                    s1 = u64 [a4]
 93560: c8 96 0c                 a5 = s1 + a2
 93563: ac 6c ba 00              jump @7420 if a5 <u s1
      :                          @7405
 93567: c8 2c 0a                 a3 = a5 + t0
 93570: d8 ca 05                 s0 = a3 <u a5
 93573: d8 a3 0a                 a3 = t1 <u a3
 93576: d4 5a 0a                 a3 = a3 | s0
 93579: 52 0a aa 00              jump @7420 if a3 != 0
      :                          @7406
 93583: c9 c4 05                 s0 = t2 - a5
 93586: c8 35 05                 s0 = s0 + t1
 93589: 84 5a 07                 a3 = s0 & 0x7
 93592: c8 ac 0c                 a5 = a5 + a3
 93595: 01                       fallthrough
      :                          @7407
 93596: 82 b7                    a0 = u64 [a4]
 93598: ab 67 d8                 jump @7404 if a0 != s1
      :                          @7408
 93601: 7b bc                    u64 [a4] = a5
 93603: c9 a5 07                 a0 = s0 - a3
 93606: 7b 17 18                 u64 [sp + 0x18] = a0
 93609: 33 08                    a1 = 0
 93611: 64 05                    s0 = ra
 93613: 50 20 38 04 ac 9d 01     ra = 1080, jump @13675
      :                          @7409 [@dyn 540]
 93620: 64 50                    ra = s0
 93622: 82 17 10                 a0 = u64 [sp + 0x10]
 93625: 82 73 08                 t1 = u64 [a0 + 0x8]
 93628: 82 17 08                 a0 = u64 [sp + 0x8]
 93631: 82 78 10                 a1 = u64 [a0 + 0x10]
 93634: 82 7a 08                 a3 = u64 [a0 + 0x8]
 93637: 33 04                    t2 = 0
 93639: 33 02 18                 t0 = 0x18
 93642: 28 08                    jump @7411
      :                          @7410
 93644: 95 44 01                 t2 = t2 + 0x1
 93647: aa 04 44                 jump @7416 if t2 == ra
      :                          @7411
 93650: ca 24 07                 a0 = t2 * t0
 93653: c8 37 07                 a0 = a0 + t1
 93656: 82 76 10                 s1 = u64 [a0 + 0x10]
 93659: 51 06 f1                 jump @7410 if s1 == 0
      :                          @7412
 93662: 82 7c 08                 a5 = u64 [a0 + 0x8]
 93665: 97 66 04                 s1 = s1 << 0x4
 93668: c8 c6 06                 s1 = s1 + a5
 93671: 97 45 03                 s0 = t2 << 0x3
 93674: 82 17 18                 a0 = u64 [sp + 0x18]
 93677: c8 75 05                 s0 = s0 + a0
 93680: 01                       fallthrough
      :                          @7413
 93681: 82 c7                    a0 = u64 [a5]
 93683: ae 87 41                 jump @7419 if a0 >=u a1
      :                          @7414
 93686: 82 c9 08                 a2 = u64 [a5 + 0x8]
 93689: 97 77 03                 a0 = a0 << 0x3
 93692: c8 a7 07                 a0 = a0 + a3
 93695: 82 77                    a0 = u64 [a0]
 93697: 82 5b                    a4 = u64 [s0]
 93699: ca 97 07                 a0 = a0 * a2
 93702: c8 b7 07                 a0 = a0 + a4
 93705: 95 cc 10                 a5 = a5 + 0x10
 93708: 7b 57                    u64 [s0] = a0
 93710: ab 6c e3                 jump @7413 if a5 != s1
      :                          @7415
 93713: 28 bb                    jump @7410
      :                          @7416
 93715: 82 17                    a0 = u64 [sp]
 93717: 82 18 18                 a1 = u64 [sp + 0x18]
 93720: 28 06                    jump @7418
      :                          @7417
 93722: 33 08 08                 a1 = 0x8
 93725: 01                       fallthrough
      :                          @7418
 93726: 7b 70                    u64 [a0] = ra
 93728: 7b 78 08                 u64 [a0 + 0x8] = a1
 93731: 7b 70 10                 u64 [a0 + 0x10] = ra
 93734: 82 10 30                 ra = u64 [sp + 0x30]
 93737: 82 15 28                 s0 = u64 [sp + 0x28]
 93740: 82 16 20                 s1 = u64 [sp + 0x20]
 93743: 95 11 38                 sp = sp + 0x38
 93746: 32 00                    ret
      :                          @7419
 93748: 00                       trap
      :                          @7420
 93749: 00                       trap
      :                          @7421
 93750: 00                       trap
      :                          @7422
 93751: 51 08 3f                 jump @7429 if a1 == 0
      :                          @7423
 93754: 64 73                    t1 = a0
 93756: 33 04                    t2 = 0
 93758: 33 07                    a0 = 0
 93760: 96 88 18                 a1 = a1 * 0x18
 93763: c8 83 02                 t0 = t1 + a1
 93766: 28 08                    jump @7425
      :                          @7424
 93768: 95 33 18                 t1 = t1 + 0x18
 93771: aa 23 30                 jump @7430 if t1 == t0
      :                          @7425
 93774: 82 3b 10                 a4 = u64 [t1 + 0x10]
 93777: 51 0b f7                 jump @7424 if a4 == 0
      :                          @7426
 93780: 82 3c 08                 a5 = u64 [t1 + 0x8]
 93783: 97 bb 03                 a4 = a4 << 0x3
 93786: 01                       fallthrough
      :                          @7427
 93787: 82 c8                    a1 = u64 [a5]
 93789: 95 cc 08                 a5 = a5 + 0x8
 93792: 9a 89                    a2 = -a1
 93794: ca 88 0a                 a3 = a1 * a1
 93797: c8 a4 04                 t2 = t2 + a3
 93800: e3 87 07                 a0 = maxs(a0, a1)
 93803: 95 bb f8                 a4 = a4 + 0xfffffffffffffff8
 93806: e3 97 07                 a0 = maxs(a0, a2)
 93809: 52 0b ea                 jump @7427 if a4 != 0
      :                          @7428
 93812: 28 d4                    jump @7424
      :                          @7429
 93814: 33 07                    a0 = 0
 93816: 33 04                    t2 = 0
 93818: 01                       fallthrough
      :                          @7430
 93819: 33 09                    a2 = 0
 93821: 33 02 ff                 t0 = 0xffffffffffffffff
 93824: 64 48                    a1 = t2
 93826: 01                       fallthrough
      :                          @7431
 93827: c8 98 0c                 a5 = a1 + a2
 93830: 98 cc 01                 a5 = a5 >> 0x1
 93833: d6 cc 03                 t1 = a5 mulhu a5
 93836: ca cc 0b                 a4 = a5 * a5
 93839: db 32 0b                 a4 = t0 if t1 != 0
 93842: aa 4b 17                 jump @7434 if a4 == t2
      :                          @7432
 93845: d8 4b 0b                 a4 = a4 <u t2
 93848: 95 c3 01                 t1 = a5 + 0x1
 93851: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 93854: da bc 08                 a1 = a5 if a4 == 0
 93857: db b3 09                 a2 = t1 if a4 != 0
 93860: ae 98 df                 jump @7431 if a1 >=u a2
      :                          @7433
 93863: 32 00                    ret
      :                          @7434
 93865: 64 c8                    a1 = a5
 93867: 32 00                    ret
      :                          @7435
 93869: 55 17 02 0c              jump @7437 if a0 >=u 2
      :                          @7436
 93873: 33 07                    a0 = 0
 93875: 64 c8                    a1 = a5
 93877: 28 d6 d3 00              jump @10746
      :                          @7437
 93881: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 93884: 7b 10 18                 u64 [sp + 0x18] = ra
 93887: 7b 15 10                 u64 [sp + 0x10] = s0
 93890: 7b 16 08                 u64 [sp + 0x8] = s1
 93893: 3a 09 78 12 03           a2 = u64 [0x31278]
 93898: 97 9a 0d                 a3 = a2 << 0xd
 93901: d3 a9 09                 a2 = a2 ^ a3
 93904: 98 9a 07                 a3 = a2 >> 0x7
 93907: d3 a9 09                 a2 = a2 ^ a3
 93910: 97 9a 11                 a3 = a2 << 0x11
 93913: d3 a9 09                 a2 = a2 ^ a3
 93916: 3a 0a 10 11 03           a3 = u64 [0x31110]
 93921: 3e 09 78 12 03           u64 [0x31278] = a2
 93926: 3a 0b 78 12 03           a4 = u64 [0x31278]
 93931: 49 01                    u64 [sp + 0] = 0
 93933: ca a9 0c                 a5 = a2 * a3
 93936: 97 b9 0d                 a2 = a4 << 0xd
 93939: d3 b9 09                 a2 = a2 ^ a4
 93942: 98 9b 07                 a4 = a2 >> 0x7
 93945: d3 b9 09                 a2 = a2 ^ a4
 93948: 97 9b 11                 a4 = a2 << 0x11
 93951: d3 b9 09                 a2 = a2 ^ a4
 93954: 3e 09 78 12 03           u64 [0x31278] = a2
 93959: 3a 06 78 12 03           s1 = u64 [0x31278]
 93964: ca a9 09                 a2 = a2 * a3
 93967: cd 79 09                 a2 = a2 %u a0
 93970: 97 6b 0d                 a4 = s1 << 0xd
 93973: d3 b6 06                 s1 = s1 ^ a4
 93976: 98 6b 07                 a4 = s1 >> 0x7
 93979: d3 b6 06                 s1 = s1 ^ a4
 93982: 97 6b 11                 a4 = s1 << 0x11
 93985: d3 6b 0b                 a4 = a4 ^ s1
 93988: ca ab 0a                 a3 = a4 * a3
 93991: 3e 0b 78 12 03           u64 [0x31278] = a4
 93996: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 93999: cd 7c 03                 t1 = a5 %u a0
 94002: cd 8a 00                 ra = a3 %u a1
 94005: 95 00 01                 ra = ra + 0x1
 94008: 33 04 01                 t2 = 0x1
 94011: 33 02 01                 t0 = 0x1
 94014: 28 0f                    jump @7440
      :                          @7438
 94016: 33 0c 01                 a5 = 0x1
 94019: 64 a3                    t1 = a3
 94021: 01                       fallthrough
      :                          @7439
 94022: 97 44 01                 t2 = t2 << 0x1
 94025: 52 1c 01 6b              jump @7449 if a5 != 1
      :                          @7440
 94029: 64 3a                    a3 = t1
 94031: 64 48                    a1 = t2
 94033: 51 04 ef                 jump @7438 if t2 == 0
      :                          @7441
 94036: ca 33 0b                 a4 = t1 * t1
 94039: c8 9b 0b                 a4 = a4 + a2
 94042: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 94045: cd 7b 03                 t1 = a4 %u a0
 94048: 52 08 f4                 jump @7441 if a1 != 0
      :                          @7442
 94051: 33 06                    s1 = 0
 94053: 7b 13                    u64 [sp] = t1
 94055: 64 08                    a1 = ra
 94057: 28 07                    jump @7444
      :                          @7443
 94059: 7b 13                    u64 [sp] = t1
 94061: 64 08                    a1 = ra
 94063: 01                       fallthrough
      :                          @7444
 94064: ca 33 0b                 a4 = t1 * t1
 94067: c8 9b 0b                 a4 = a4 + a2
 94070: cd 7b 03                 t1 = a4 %u a0
 94073: d8 a3 0b                 a4 = t1 <u a3
 94076: c9 3a 0c                 a5 = a3 - t1
 94079: c9 a3 05                 s0 = t1 - a3
 94082: db bc 05                 s0 = a5 if a4 != 0
 94085: ca 25 0b                 a4 = s0 * t0
 94088: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 94091: cd 7b 02                 t0 = a4 %u a0
 94094: 52 08 e2                 jump @7444 if a1 != 0
      :                          @7445
 94097: 64 2b                    a4 = t0
 94099: 64 78                    a1 = a0
 94101: 01                       fallthrough
      :                          @7446
 94102: 64 8c                    a5 = a1
 94104: cd 8b 08                 a1 = a4 %u a1
 94107: 64 cb                    a4 = a5
 94109: 52 08 f9                 jump @7446 if a1 != 0
      :                          @7447
 94112: c8 06 06                 s1 = s1 + ra
 94115: d8 46 08                 a1 = s1 <u t2
 94118: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 94121: 88 bb 01                 a4 = a4 <u 0x1
 94124: d2 b8 08                 a1 = a1 & a4
 94127: 52 08 bc                 jump @7443 if a1 != 0
      :                          @7448
 94130: 28 94                    jump @7439
      :                          @7449
 94132: 82 15                    s0 = u64 [sp]
 94134: ab 7c 2c                 jump @7454 if a5 != a0
      :                          @7450
 94137: 33 0b 01                 a4 = 0x1
 94140: 01                       fallthrough
      :                          @7451
 94141: ca 55 08                 a1 = s0 * s0
 94144: c8 98 08                 a1 = a1 + a2
 94147: cd 78 05                 s0 = a1 %u a0
 94150: d8 a5 0c                 a5 = s0 <u a3
 94153: c9 5a 06                 s1 = a3 - s0
 94156: c9 a5 08                 a1 = s0 - a3
 94159: db c6 08                 a1 = s1 if a5 != 0
 94162: 64 76                    s1 = a0
 94164: 01                       fallthrough
      :                          @7452
 94165: 64 6c                    a5 = s1
 94167: cd 68 06                 s1 = a1 %u s1
 94170: 64 c8                    a1 = a5
 94172: 52 06 f9                 jump @7452 if s1 != 0
      :                          @7453
 94175: ae cb de                 jump @7451 if a4 >=u a5
      :                          @7454
 94178: d3 c7 07                 a0 = a0 ^ a5
 94181: 8e 77                    a0 = a0 >u 0
 94183: 82 10 18                 ra = u64 [sp + 0x18]
 94186: 82 15 10                 s0 = u64 [sp + 0x10]
 94189: 82 16 08                 s1 = u64 [sp + 0x8]
 94192: 95 11 20                 sp = sp + 0x20
 94195: 64 c8                    a1 = a5
 94197: 32 00                    ret
      :                          @7455 [@dyn 541]
 94199: 64 78                    a1 = a0
 94201: 95 17 28                 a0 = sp + 0x28
 94204: 64 69                    a2 = s1
 94206: 50 20 3c 04 25 1b ff     ra = 1084, jump @2409
      :                          @7456 [@dyn 542]
 94213: 82 17 28                 a0 = u64 [sp + 0x28]
 94216: 52 17 01 6d 01           jump @7482 if a0 != 1
      :                          @7457
 94221: 82 17 30                 a0 = u64 [sp + 0x30]
 94224: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 94234: d3 87 09                 a2 = a0 ^ a1
 94237: e1 69 09                 a2 = a2 | ~s1
 94240: 51 09 52 01              jump @7479 if a2 == 0
      :                          @7458
 94244: ce 67 07                 a0 = a0 %s s1
 94247: c8 67 09                 a2 = a0 + s1
 94250: d3 89 07                 a0 = a2 ^ a1
 94253: e1 67 07                 a0 = a0 | ~s1
 94256: 51 07 42 01              jump @7479 if a0 == 0
      :                          @7459
 94260: 7b 19                    u64 [sp] = a2
 94262: 82 18 20                 a1 = u64 [sp + 0x20]
 94265: ca 88 07                 a0 = a1 * a1
 94268: d6 88 08                 a1 = a1 mulhu a1
 94271: 64 69                    a2 = s1
 94273: 50 20 3e 04 b8 98 01     ra = 1086, jump @13619
      :                          @7460 [@dyn 543]
 94280: c8 67 07                 a0 = a0 + s1
 94283: 7b 17 08                 u64 [sp + 0x8] = a0
 94286: 97 57 02                 a0 = s0 << 0x2
 94289: 98 58 3e                 a1 = s0 >> 0x3e
 94292: 64 69                    a2 = s1
 94294: 50 20 40 04 a3 98 01     ra = 1088, jump @13619
      :                          @7461 [@dyn 544]
 94301: 82 18 18                 a1 = u64 [sp + 0x18]
 94304: ca 87 09                 a2 = a0 * a1
 94307: d6 87 08                 a1 = a0 mulhu a1
 94310: 64 97                    a0 = a2
 94312: 64 69                    a2 = s1
 94314: 50 20 42 04 8f 98 01     ra = 1090, jump @13619
      :                          @7462 [@dyn 545]
 94321: cd 67 07                 a0 = a0 %u s1
 94324: 82 18 08                 a1 = u64 [sp + 0x8]
 94327: c9 78 07                 a0 = a1 - a0
 94330: cd 67 07                 a0 = a0 %u s1
 94333: 64 68                    a1 = s1
 94335: 50 20 44 04 f5 2b ff     ra = 1092, jump @2781
      :                          @7463 [@dyn 546]
 94342: 52 17 01 87 00           jump @7471 if a0 != 1
      :                          @7464
 94347: 82 17                    a0 = u64 [sp]
 94349: ce 67 07                 a0 = a0 %s s1
 94352: 9a 69                    a2 = -s1
 94354: e3 96 09                 a2 = maxs(s1, a2)
 94357: 99 7a 3f                 a3 = a0 >>a 0x3f
 94360: d2 a9 09                 a2 = a2 & a3
 94363: c8 97 07                 a0 = a0 + a2
 94366: 82 19 20                 a2 = u64 [sp + 0x20]
 94369: cd 69 09                 a2 = a2 %u s1
 94372: c9 96 09                 a2 = s1 - a2
 94375: cd 69 09                 a2 = a2 %u s1
 94378: c8 89 0a                 a3 = a2 + a1
 94381: cd 6a 0a                 a3 = a3 %u s1
 94384: c9 86 08                 a1 = s1 - a1
 94387: c8 98 08                 a1 = a1 + a2
 94390: cd 68 08                 a1 = a1 %u s1
 94393: ca 7a 09                 a2 = a3 * a0
 94396: cd 69 02                 t0 = a2 %u s1
 94399: ca 78 07                 a0 = a1 * a0
 94402: cd 67 03                 t1 = a0 %u s1
 94405: ab 32 4f                 jump @7472 if t0 != t1
      :                          @7465
 94408: 33 08 c0 22 03           a1 = 0x322c0
 94413: 33 03 00 00 01           t1 = 0x10000
 94418: c8 38 0a                 a3 = a1 + t1
 94421: 01                       fallthrough
      :                          @7466
 94422: 82 ab                    a4 = u64 [a3]
 94424: 95 bc 08                 a5 = a4 + 0x8
 94427: ac bc 98 00              jump @7480 if a5 <u a4
      :                          @7467
 94431: 95 c7 08                 a0 = a5 + 0x8
 94434: d8 c7 09                 a2 = a0 <u a5
 94437: d8 73 07                 a0 = t1 <u a0
 94440: d4 97 07                 a0 = a0 | a2
 94443: 52 07 88 00              jump @7480 if a0 != 0
      :                          @7468
 94447: c9 c8 09                 a2 = a1 - a5
 94450: c8 39 09                 a2 = a2 + t1
 94453: 84 97 07                 a0 = a2 & 0x7
 94456: c8 7c 0c                 a5 = a5 + a0
 94459: 01                       fallthrough
      :                          @7469
 94460: 82 a5                    s0 = u64 [a3]
 94462: ab b5 d8                 jump @7466 if s0 != a4
      :                          @7470
 94465: 7b ac                    u64 [a3] = a5
 94467: c9 79 09                 a2 = a2 - a0
 94470: 7b 92                    u64 [a2] = t0
 94472: 33 07 01                 a0 = 0x1
 94475: 28 4e                    jump @7478
      :                          @7471
 94477: 33 07                    a0 = 0
 94479: 33 09 08                 a2 = 0x8
 94482: 28 47                    jump @7478
      :                          @7472
 94484: 33 07 c0 22 03           a0 = 0x322c0
 94489: 33 04 00 00 01           t2 = 0x10000
 94494: c8 47 0b                 a4 = a0 + t2
 94497: 01                       fallthrough
      :                          @7473
 94498: 82 b6                    s1 = u64 [a4]
 94500: 95 6c 10                 a5 = s1 + 0x10
 94503: ac 6c 4d                 jump @7481 if a5 <u s1
      :                          @7474
 94506: 95 c9 08                 a2 = a5 + 0x8
 94509: d8 c9 0a                 a3 = a2 <u a5
 94512: d8 94 09                 a2 = t2 <u a2
 94515: d4 a9 09                 a2 = a2 | a3
 94518: 52 09 3e                 jump @7481 if a2 != 0
      :                          @7475
 94521: c9 c7 09                 a2 = a0 - a5
 94524: c8 49 09                 a2 = a2 + t2
 94527: 84 9a 07                 a3 = a2 & 0x7
 94530: c8 ac 0c                 a5 = a5 + a3
 94533: 01                       fallthrough
      :                          @7476
 94534: 82 b8                    a1 = u64 [a4]
 94536: ab 68 da                 jump @7473 if a1 != s1
      :                          @7477
 94539: 7b bc                    u64 [a4] = a5
 94541: c9 a9 09                 a2 = a2 - a3
 94544: 7b 92                    u64 [a2] = t0
 94546: 7b 93 08                 u64 [a2 + 0x8] = t1
 94549: 33 07 02                 a0 = 0x2
 94552: 01                       fallthrough
      :                          @7478
 94553: 82 18 10                 a1 = u64 [sp + 0x10]
 94556: 7b 87                    u64 [a1] = a0
 94558: 7b 89 08                 u64 [a1 + 0x8] = a2
 94561: 7b 87 10                 u64 [a1 + 0x10] = a0
 94564: 82 10 50                 ra = u64 [sp + 0x50]
 94567: 82 15 48                 s0 = u64 [sp + 0x48]
 94570: 82 16 40                 s1 = u64 [sp + 0x40]
 94573: 95 11 58                 sp = sp + 0x58
 94576: 32 00                    ret
      :                          @7479
 94578: 00                       trap
      :                          @7480
 94579: 00                       trap
      :                          @7481
 94580: 00                       trap
      :                          @7482
 94581: 00                       trap
      :                          @7483 [@dyn 547]
 94582: 3a 09 20 11 03           a2 = u64 [0x31120]
 94587: 7b 17 30                 u64 [sp + 0x30] = a0
 94590: 7b 18 38                 u64 [sp + 0x38] = a1
 94593: d6 95 07                 a0 = s0 mulhu a2
 94596: 98 77 09                 a0 = a0 >> 0x9
 94599: 96 77 f5 03              a0 = a0 * 0x3f5
 94603: c9 75 07                 a0 = s0 - a0
 94606: 33 08 f5 03              a1 = 0x3f5
 94610: 50 20 48 04 e2 2a ff     ra = 1096, jump @2781
      :                          @7484 [@dyn 548]
 94617: 7b 17 28                 u64 [sp + 0x28] = a0
 94620: 64 85                    s0 = a1
 94622: 95 17 40                 a0 = sp + 0x40
 94625: 33 08 f1 03              a1 = 0x3f1
 94629: 33 09 f5 03              a2 = 0x3f5
 94633: 50 20 4a 04 7a 19 ff     ra = 1098, jump @2409
      :                          @7485 [@dyn 549]
 94640: 82 17 40                 a0 = u64 [sp + 0x40]
 94643: 52 17 01 1a 02           jump @7499 if a0 != 1
      :                          @7486
 94648: 7b 15 18                 u64 [sp + 0x18] = s0
 94651: 82 16 48                 s1 = u64 [sp + 0x48]
 94654: 95 17 40                 a0 = sp + 0x40
 94657: 33 08 f5 03              a1 = 0x3f5
 94661: 33 09 f1 03              a2 = 0x3f1
 94665: 50 20 4c 04 5a 19 ff     ra = 1100, jump @2409
      :                          @7487 [@dyn 550]
 94672: 82 17 40                 a0 = u64 [sp + 0x40]
 94675: 52 17 01 fa 01           jump @7499 if a0 != 1
      :                          @7488
 94680: 3a 07 20 11 03           a0 = u64 [0x31120]
 94685: 82 15 38                 s0 = u64 [sp + 0x38]
 94688: 82 18 30                 a1 = u64 [sp + 0x30]
 94691: 93 85                    s0 = 0 if a1 == 0
 94693: 82 12 18                 t0 = u64 [sp + 0x18]
 94696: 82 18 28                 a1 = u64 [sp + 0x28]
 94699: 93 82                    t0 = 0 if a1 == 0
 94701: 82 19 48                 a2 = u64 [sp + 0x48]
 94704: d5 76 08                 a1 = s1 mulh a0
 94707: c8 68 08                 a1 = a1 + s1
 94710: 98 8a 3f                 a3 = a1 >> 0x3f
 94713: 99 88 09                 a1 = a1 >>a 0x9
 94716: c8 a8 08                 a1 = a1 + a3
 94719: 33 03 f5 03              t1 = 0x3f5
 94723: ca 38 08                 a1 = a1 * t1
 94726: c9 86 08                 a1 = s1 - a1
 94729: 88 8a 0b fc              a3 = a1 <u 0xfffffffffffffc0b
 94733: 3a 0b 18 11 03           a4 = u64 [0x31118]
 94738: 33 0c f5 03              a5 = 0x3f5
 94742: 94 ac                    a5 = 0 if a3 != 0
 94744: c8 c8 08                 a1 = a1 + a5
 94747: d5 b9 0a                 a3 = a2 mulh a4
 94750: c8 9a 0a                 a3 = a3 + a2
 94753: 98 ac 3f                 a5 = a3 >> 0x3f
 94756: 99 aa 09                 a3 = a3 >>a 0x9
 94759: c8 ca 0a                 a3 = a3 + a5
 94762: 96 aa f1 03              a3 = a3 * 0x3f1
 94766: c9 a9 09                 a2 = a2 - a3
 94769: 88 9a 0f fc              a3 = a2 <u 0xfffffffffffffc0f
 94773: 33 0c f1 03              a5 = 0x3f1
 94777: 94 ac                    a5 = 0 if a3 != 0
 94779: c8 c9 09                 a2 = a2 + a5
 94782: 49 11 40                 u64 [sp + 64] = 0
 94785: 49 11 48 08              u64 [sp + 72] = 0x8
 94789: 49 11 50                 u64 [sp + 80] = 0
 94792: 9a 5a f1 03              a3 = 0x3f1 - s0
 94796: d6 ba 0b                 a4 = a3 mulhu a4
 94799: 98 bb 09                 a4 = a4 >> 0x9
 94802: 96 bb f1 03              a4 = a4 * 0x3f1
 94806: c9 ba 0a                 a3 = a3 - a4
 94809: 7b 1a 30                 u64 [sp + 0x30] = a3
 94812: c9 23 0a                 a3 = t1 - t0
 94815: d6 7a 07                 a0 = a3 mulhu a0
 94818: 98 77 09                 a0 = a0 >> 0x9
 94821: ca 37 07                 a0 = a0 * t1
 94824: c9 7a 0a                 a3 = a3 - a0
 94827: 7b 1a 38                 u64 [sp + 0x38] = a3
 94830: ca 39 09                 a2 = a2 * t1
 94833: 96 88 f1 03              a1 = a1 * 0x3f1
 94837: 7b 18 10                 u64 [sp + 0x10] = a1
 94840: 3a 06 28 11 03           s1 = u64 [0x31128]
 94845: 7b 19 28                 u64 [sp + 0x28] = a2
 94848: ca 59 09                 a2 = a2 * s0
 94851: 7b 19 08                 u64 [sp + 0x8] = a2
 94854: ca 28 07                 a0 = a1 * t0
 94857: 7b 17 18                 u64 [sp + 0x18] = a0
 94860: c8 97 07                 a0 = a0 + a2
 94863: d6 67 08                 a1 = a0 mulhu s1
 94866: 98 88 13                 a1 = a1 >> 0x13
 94869: 33 05 a5 98 0f           s0 = 0xf98a5
 94874: ca 58 08                 a1 = a1 * s0
 94877: c9 87 07                 a0 = a0 - a1
 94880: 7b 17                    u64 [sp] = a0
 94882: 95 17 40                 a0 = sp + 0x40
 94885: 33 08                    a1 = 0
 94887: 50 20 4e 04 60 e0 fe     ra = 1102, jump @1581
      :                          @7489 [@dyn 551]
 94894: 64 52                    t0 = s0
 94896: 64 6c                    a5 = s1
 94898: 82 19 50                 a2 = u64 [sp + 0x50]
 94901: 82 17 48                 a0 = u64 [sp + 0x48]
 94904: 82 18 40                 a1 = u64 [sp + 0x40]
 94907: 97 9a 03                 a3 = a2 << 0x3
 94910: c8 7a 0a                 a3 = a3 + a0
 94913: 82 1b                    a4 = u64 [sp]
 94915: 7b ab                    u64 [a3] = a4
 94917: 95 99 01                 a2 = a2 + 0x1
 94920: 7b 19 50                 u64 [sp + 0x50] = a2
 94923: 82 1a 38                 a3 = u64 [sp + 0x38]
 94926: 82 1b 10                 a4 = u64 [sp + 0x10]
 94929: ca ab 0a                 a3 = a4 * a3
 94932: 7b 1a 38                 u64 [sp + 0x38] = a3
 94935: 82 15 08                 s0 = u64 [sp + 0x8]
 94938: c8 a5 05                 s0 = s0 + a3
 94941: d6 65 0a                 a3 = s0 mulhu s1
 94944: 98 aa 13                 a3 = a3 >> 0x13
 94947: ca 2a 0a                 a3 = a3 * t0
 94950: c9 a5 0b                 a4 = s0 - a3
 94953: ab 89 25                 jump @7492 if a2 != a1
      :                          @7490
 94956: 95 17 40                 a0 = sp + 0x40
 94959: 64 c5                    s0 = a5
 94961: 64 26                    s1 = t0
 94963: 7b 1b 10                 u64 [sp + 0x10] = a4
 94966: 50 20 50 04 11 e0 fe     ra = 1104, jump @1581
      :                          @7491 [@dyn 552]
 94973: 82 1b 10                 a4 = u64 [sp + 0x10]
 94976: 64 62                    t0 = s1
 94978: 64 5c                    a5 = s0
 94980: 82 19 50                 a2 = u64 [sp + 0x50]
 94983: 82 17 48                 a0 = u64 [sp + 0x48]
 94986: 82 18 40                 a1 = u64 [sp + 0x40]
 94989: 01                       fallthrough
      :                          @7492
 94990: 82 15 20                 s0 = u64 [sp + 0x20]
 94993: 97 9a 03                 a3 = a2 << 0x3
 94996: c8 7a 0a                 a3 = a3 + a0
 94999: 7b ab                    u64 [a3] = a4
 95001: 95 99 01                 a2 = a2 + 0x1
 95004: 7b 19 50                 u64 [sp + 0x50] = a2
 95007: 82 1a 30                 a3 = u64 [sp + 0x30]
 95010: 82 1b 28                 a4 = u64 [sp + 0x28]
 95013: ca ab 06                 s1 = a4 * a3
 95016: 82 1a 18                 a3 = u64 [sp + 0x18]
 95019: c8 6a 0a                 a3 = a3 + s1
 95022: d6 ca 0b                 a4 = a3 mulhu a5
 95025: 98 bb 13                 a4 = a4 >> 0x13
 95028: ca 2b 0b                 a4 = a4 * t0
 95031: c9 ba 0b                 a4 = a3 - a4
 95034: ab 89 1d                 jump @7495 if a2 != a1
      :                          @7493
 95037: 95 17 40                 a0 = sp + 0x40
 95040: 7b 1b 30                 u64 [sp + 0x30] = a4
 95043: 50 20 52 04 c4 df fe     ra = 1106, jump @1581
      :                          @7494 [@dyn 553]
 95050: 82 1b 30                 a4 = u64 [sp + 0x30]
 95053: 82 19 50                 a2 = u64 [sp + 0x50]
 95056: 82 18 40                 a1 = u64 [sp + 0x40]
 95059: 82 17 48                 a0 = u64 [sp + 0x48]
 95062: 01                       fallthrough
      :                          @7495
 95063: 97 9a 03                 a3 = a2 << 0x3
 95066: c8 7a 0a                 a3 = a3 + a0
 95069: 7b ab                    u64 [a3] = a4
 95071: 95 99 01                 a2 = a2 + 0x1
 95074: 7b 19 50                 u64 [sp + 0x50] = a2
 95077: ab 89 14                 jump @7498 if a2 != a1
      :                          @7496
 95080: 95 17 40                 a0 = sp + 0x40
 95083: 50 20 54 04 9c df fe     ra = 1108, jump @1581
      :                          @7497 [@dyn 554]
 95090: 82 19 50                 a2 = u64 [sp + 0x50]
 95093: 82 17 48                 a0 = u64 [sp + 0x48]
 95096: 01                       fallthrough
      :                          @7498
 95097: 82 18 38                 a1 = u64 [sp + 0x38]
 95100: c8 68 08                 a1 = a1 + s1
 95103: 97 8a 20                 a3 = a1 << 0x20
 95106: 14 0b 00 00 00 00 71 3f 50 83 a4 = 0x83503f7100000000
 95116: d6 ba 0a                 a3 = a3 mulhu a4
 95119: 98 aa 33                 a3 = a3 >> 0x33
 95122: 33 0b a5 98 0f           a4 = 0xf98a5
 95127: ca ba 0a                 a3 = a3 * a4
 95130: bf a8 08                 i32 a1 = a1 - a3
 95133: 97 88 20                 a1 = a1 << 0x20
 95136: 98 88 20                 a1 = a1 >> 0x20
 95139: 97 9a 03                 a3 = a2 << 0x3
 95142: c8 a7 07                 a0 = a0 + a3
 95145: 7b 78                    u64 [a0] = a1
 95147: 95 99 01                 a2 = a2 + 0x1
 95150: 7b 19 50                 u64 [sp + 0x50] = a2
 95153: 82 17 48                 a0 = u64 [sp + 0x48]
 95156: 82 18 40                 a1 = u64 [sp + 0x40]
 95159: 7b 59 10                 u64 [s0 + 0x10] = a2
 95162: 7b 57 08                 u64 [s0 + 0x8] = a0
 95165: 7b 58                    u64 [s0] = a1
 95167: 82 10 68                 ra = u64 [sp + 0x68]
 95170: 82 15 60                 s0 = u64 [sp + 0x60]
 95173: 82 16 58                 s1 = u64 [sp + 0x58]
 95176: 95 11 70                 sp = sp + 0x70
 95179: 32 00                    ret
      :                          @7499
 95181: 00                       trap
      :                          @7500
 95182: 82 9a                    a3 = u64 [a2]
 95184: 95 ab 40                 a4 = a3 + 0x40
 95187: ac ab 02 a4 01           jump @13923 if a4 <u a3
      :                          @7501
 95192: 95 b8 08                 a1 = a4 + 0x8
 95195: d8 b8 0c                 a5 = a1 <u a4
 95198: d8 82 08                 a1 = t0 <u a1
 95201: d4 c8 08                 a1 = a1 | a5
 95204: 52 08 f1 a3 01           jump @13923 if a1 != 0
      :                          @7502
 95209: c9 b7 08                 a1 = a0 - a4
 95212: c8 28 08                 a1 = a1 + t0
 95215: 84 8c 07                 a5 = a1 & 0x7
 95218: c8 cb 0b                 a4 = a4 + a5
 95221: 01                       fallthrough
      :                          @7503
 95222: 82 95                    s0 = u64 [a2]
 95224: ab a5 d6                 jump @7500 if s0 != a3
      :                          @7504
 95227: 7b 9b                    u64 [a2] = a4
 95229: 01                       fallthrough
      :                          @7505
 95230: c9 c8 08                 a1 = a1 - a5
 95233: 49 11 18 08              u64 [sp + 24] = 0x8
 95237: 7b 18 20                 u64 [sp + 0x20] = a1
 95240: 49 11 28                 u64 [sp + 40] = 0
 95243: 33 0c 78 12 03           a5 = 0x31278
 95248: 3a 07 78 12 03           a0 = u64 [0x31278]
 95253: 3a 06 30 11 03           s1 = u64 [0x31130]
 95258: 97 78 0d                 a1 = a0 << 0xd
 95261: d3 87 07                 a0 = a0 ^ a1
 95264: 98 78 07                 a1 = a0 >> 0x7
 95267: d3 87 07                 a0 = a0 ^ a1
 95270: 97 78 11                 a1 = a0 << 0x11
 95273: d3 87 07                 a0 = a0 ^ a1
 95276: ca 67 09                 a2 = a0 * s1
 95279: 3e 07 78 12 03           u64 [0x31278] = a0
 95284: 14 05 cd cc cc cc cc cc cc cc s0 = 0xcccccccccccccccd
 95294: d6 59 07                 a0 = a2 mulhu s0
 95297: 98 77 03                 a0 = a0 >> 0x3
 95300: 82 18 28                 a1 = u64 [sp + 0x28]
 95303: 82 1a 18                 a3 = u64 [sp + 0x18]
 95306: 33 02 0a                 t0 = 0xa
 95309: ca 27 07                 a0 = a0 * t0
 95312: c9 79 0b                 a4 = a2 - a0
 95315: 95 b3 01                 t1 = a4 + 0x1
 95318: 7b 13 08                 u64 [sp + 0x8] = t1
 95321: ab a8 24                 jump @7508 if a1 != a3
      :                          @7506
 95324: 95 17 18                 a0 = sp + 0x18
 95327: 7b 15                    u64 [sp] = s0
 95329: 64 b5                    s0 = a4
 95331: 50 20 56 04 a4 de fe     ra = 1110, jump @1581
      :                          @7507 [@dyn 555]
 95338: 33 02 0a                 t0 = 0xa
 95341: 64 5b                    a4 = s0
 95343: 82 15                    s0 = u64 [sp]
 95345: 33 0c 78 12 03           a5 = 0x31278
 95350: 82 13 08                 t1 = u64 [sp + 0x8]
 95353: 82 18 28                 a1 = u64 [sp + 0x28]
 95356: 01                       fallthrough
      :                          @7508
 95357: 82 17 20                 a0 = u64 [sp + 0x20]
 95360: 97 89 03                 a2 = a1 << 0x3
 95363: c8 97 07                 a0 = a0 + a2
 95366: 7b 73                    u64 [a0] = t1
 95368: 95 88 01                 a1 = a1 + 0x1
 95371: 7b 18 28                 u64 [sp + 0x28] = a1
 95374: 3a 07 78 12 03           a0 = u64 [0x31278]
 95379: 97 78 0d                 a1 = a0 << 0xd
 95382: d3 87 07                 a0 = a0 ^ a1
 95385: 98 78 07                 a1 = a0 >> 0x7
 95388: d3 87 07                 a0 = a0 ^ a1
 95391: 97 78 11                 a1 = a0 << 0x11
 95394: d3 87 07                 a0 = a0 ^ a1
 95397: ca 67 09                 a2 = a0 * s1
 95400: 3e 07 78 12 03           u64 [0x31278] = a0
 95405: d6 59 07                 a0 = a2 mulhu s0
 95408: 98 77 03                 a0 = a0 >> 0x3
 95411: 82 18 28                 a1 = u64 [sp + 0x28]
 95414: 82 1a 18                 a3 = u64 [sp + 0x18]
 95417: 96 77 0a                 a0 = a0 * 0xa
 95420: c9 79 09                 a2 = a2 - a0
 95423: c8 b9 09                 a2 = a2 + a4
 95426: 95 95 02                 s0 = a2 + 0x2
 95429: ab a8 14                 jump @7511 if a1 != a3
      :                          @7509
 95432: 95 17 18                 a0 = sp + 0x18
 95435: 50 20 58 04 3c de fe     ra = 1112, jump @1581
      :                          @7510 [@dyn 556]
 95442: 82 13 08                 t1 = u64 [sp + 0x8]
 95445: 82 18 28                 a1 = u64 [sp + 0x28]
 95448: 01                       fallthrough
      :                          @7511
 95449: 82 17 20                 a0 = u64 [sp + 0x20]
 95452: 97 89 03                 a2 = a1 << 0x3
 95455: c8 97 07                 a0 = a0 + a2
 95458: 7b 75                    u64 [a0] = s0
 95460: 95 88 01                 a1 = a1 + 0x1
 95463: 7b 18 28                 u64 [sp + 0x28] = a1
 95466: 33 0c 78 12 03           a5 = 0x31278
 95471: 3a 07 78 12 03           a0 = u64 [0x31278]
 95476: c8 53 03                 t1 = t1 + s0
 95479: 97 78 0d                 a1 = a0 << 0xd
 95482: d3 87 07                 a0 = a0 ^ a1
 95485: 98 78 07                 a1 = a0 >> 0x7
 95488: d3 87 07                 a0 = a0 ^ a1
 95491: 97 78 11                 a1 = a0 << 0x11
 95494: d3 87 07                 a0 = a0 ^ a1
 95497: ca 67 09                 a2 = a0 * s1
 95500: 3e 07 78 12 03           u64 [0x31278] = a0
 95505: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
 95515: d6 b9 07                 a0 = a2 mulhu a4
 95518: 98 77 03                 a0 = a0 >> 0x3
 95521: 33 02 0a                 t0 = 0xa
 95524: 82 18 28                 a1 = u64 [sp + 0x28]
 95527: 82 1a 18                 a3 = u64 [sp + 0x18]
 95530: ca 27 07                 a0 = a0 * t0
 95533: c9 79 09                 a2 = a2 - a0
 95536: c8 39 09                 a2 = a2 + t1
 95539: 95 95 01                 s0 = a2 + 0x1
 95542: ab a8 23                 jump @7514 if a1 != a3
      :                          @7512
 95545: 95 17 18                 a0 = sp + 0x18
 95548: 7b 13 08                 u64 [sp + 0x8] = t1
 95551: 7b 1b                    u64 [sp] = a4
 95553: 50 20 5a 04 c6 dd fe     ra = 1114, jump @1581
      :                          @7513 [@dyn 557]
 95560: 82 1b                    a4 = u64 [sp]
 95562: 82 13 08                 t1 = u64 [sp + 0x8]
 95565: 33 02 0a                 t0 = 0xa
 95568: 33 0c 78 12 03           a5 = 0x31278
 95573: 82 18 28                 a1 = u64 [sp + 0x28]
 95576: 01                       fallthrough
      :                          @7514
 95577: 82 17 20                 a0 = u64 [sp + 0x20]
 95580: 97 89 03                 a2 = a1 << 0x3
 95583: c8 97 07                 a0 = a0 + a2
 95586: 7b 75                    u64 [a0] = s0
 95588: 95 88 01                 a1 = a1 + 0x1
 95591: 7b 18 28                 u64 [sp + 0x28] = a1
 95594: 3a 07 78 12 03           a0 = u64 [0x31278]
 95599: c8 53 03                 t1 = t1 + s0
 95602: 97 78 0d                 a1 = a0 << 0xd
 95605: d3 87 07                 a0 = a0 ^ a1
 95608: 98 78 07                 a1 = a0 >> 0x7
 95611: d3 87 07                 a0 = a0 ^ a1
 95614: 97 78 11                 a1 = a0 << 0x11
 95617: d3 87 07                 a0 = a0 ^ a1
 95620: ca 67 09                 a2 = a0 * s1
 95623: 3e 07 78 12 03           u64 [0x31278] = a0
 95628: d6 b9 07                 a0 = a2 mulhu a4
 95631: 98 77 03                 a0 = a0 >> 0x3
 95634: 82 18 28                 a1 = u64 [sp + 0x28]
 95637: 82 1a 18                 a3 = u64 [sp + 0x18]
 95640: 96 77 0a                 a0 = a0 * 0xa
 95643: c9 79 09                 a2 = a2 - a0
 95646: c8 39 09                 a2 = a2 + t1
 95649: 95 95 01                 s0 = a2 + 0x1
 95652: ab a8 17                 jump @7517 if a1 != a3
      :                          @7515
 95655: 95 17 18                 a0 = sp + 0x18
 95658: 7b 13 08                 u64 [sp + 0x8] = t1
 95661: 50 20 5c 04 5a dd fe     ra = 1116, jump @1581
      :                          @7516 [@dyn 558]
 95668: 82 13 08                 t1 = u64 [sp + 0x8]
 95671: 82 18 28                 a1 = u64 [sp + 0x28]
 95674: 01                       fallthrough
      :                          @7517
 95675: 82 17 20                 a0 = u64 [sp + 0x20]
 95678: 97 89 03                 a2 = a1 << 0x3
 95681: c8 97 07                 a0 = a0 + a2
 95684: 7b 75                    u64 [a0] = s0
 95686: 95 88 01                 a1 = a1 + 0x1
 95689: 7b 18 28                 u64 [sp + 0x28] = a1
 95692: 33 0b 78 12 03           a4 = 0x31278
 95697: 3a 07 78 12 03           a0 = u64 [0x31278]
 95702: c8 53 03                 t1 = t1 + s0
 95705: 97 78 0d                 a1 = a0 << 0xd
 95708: d3 87 07                 a0 = a0 ^ a1
 95711: 98 78 07                 a1 = a0 >> 0x7
 95714: d3 87 07                 a0 = a0 ^ a1
 95717: 97 78 11                 a1 = a0 << 0x11
 95720: d3 87 07                 a0 = a0 ^ a1
 95723: ca 67 09                 a2 = a0 * s1
 95726: 3e 07 78 12 03           u64 [0x31278] = a0
 95731: 14 0c cd cc cc cc cc cc cc cc a5 = 0xcccccccccccccccd
 95741: d6 c9 07                 a0 = a2 mulhu a5
 95744: 98 77 03                 a0 = a0 >> 0x3
 95747: 33 02 0a                 t0 = 0xa
 95750: 82 18 28                 a1 = u64 [sp + 0x28]
 95753: 82 1a 18                 a3 = u64 [sp + 0x18]
 95756: ca 27 07                 a0 = a0 * t0
 95759: c9 79 09                 a2 = a2 - a0
 95762: c8 39 09                 a2 = a2 + t1
 95765: 95 95 01                 s0 = a2 + 0x1
 95768: ab a8 23                 jump @7520 if a1 != a3
      :                          @7518
 95771: 95 17 18                 a0 = sp + 0x18
 95774: 7b 13 08                 u64 [sp + 0x8] = t1
 95777: 7b 1c                    u64 [sp] = a5
 95779: 50 20 5e 04 e4 dc fe     ra = 1118, jump @1581
      :                          @7519 [@dyn 559]
 95786: 82 1c                    a5 = u64 [sp]
 95788: 82 13 08                 t1 = u64 [sp + 0x8]
 95791: 33 02 0a                 t0 = 0xa
 95794: 33 0b 78 12 03           a4 = 0x31278
 95799: 82 18 28                 a1 = u64 [sp + 0x28]
 95802: 01                       fallthrough
      :                          @7520
 95803: 82 17 20                 a0 = u64 [sp + 0x20]
 95806: 97 89 03                 a2 = a1 << 0x3
 95809: c8 97 07                 a0 = a0 + a2
 95812: 7b 75                    u64 [a0] = s0
 95814: 95 88 01                 a1 = a1 + 0x1
 95817: 7b 18 28                 u64 [sp + 0x28] = a1
 95820: 3a 07 78 12 03           a0 = u64 [0x31278]
 95825: c8 53 03                 t1 = t1 + s0
 95828: 97 78 0d                 a1 = a0 << 0xd
 95831: d3 87 07                 a0 = a0 ^ a1
 95834: 98 78 07                 a1 = a0 >> 0x7
 95837: d3 87 07                 a0 = a0 ^ a1
 95840: 97 78 11                 a1 = a0 << 0x11
 95843: d3 87 07                 a0 = a0 ^ a1
 95846: ca 67 09                 a2 = a0 * s1
 95849: 3e 07 78 12 03           u64 [0x31278] = a0
 95854: d6 c9 07                 a0 = a2 mulhu a5
 95857: 98 77 03                 a0 = a0 >> 0x3
 95860: 82 18 28                 a1 = u64 [sp + 0x28]
 95863: 82 1a 18                 a3 = u64 [sp + 0x18]
 95866: 96 77 0a                 a0 = a0 * 0xa
 95869: c9 79 09                 a2 = a2 - a0
 95872: c8 39 09                 a2 = a2 + t1
 95875: 95 95 01                 s0 = a2 + 0x1
 95878: ab a8 17                 jump @7523 if a1 != a3
      :                          @7521
 95881: 95 17 18                 a0 = sp + 0x18
 95884: 7b 13 08                 u64 [sp + 0x8] = t1
 95887: 50 20 60 04 78 dc fe     ra = 1120, jump @1581
      :                          @7522 [@dyn 560]
 95894: 82 13 08                 t1 = u64 [sp + 0x8]
 95897: 82 18 28                 a1 = u64 [sp + 0x28]
 95900: 01                       fallthrough
      :                          @7523
 95901: 82 17 20                 a0 = u64 [sp + 0x20]
 95904: 97 89 03                 a2 = a1 << 0x3
 95907: c8 97 07                 a0 = a0 + a2
 95910: 7b 75                    u64 [a0] = s0
 95912: 95 88 01                 a1 = a1 + 0x1
 95915: 7b 18 28                 u64 [sp + 0x28] = a1
 95918: 33 0b 78 12 03           a4 = 0x31278
 95923: 3a 07 78 12 03           a0 = u64 [0x31278]
 95928: c8 53 03                 t1 = t1 + s0
 95931: 97 78 0d                 a1 = a0 << 0xd
 95934: d3 87 07                 a0 = a0 ^ a1
 95937: 98 78 07                 a1 = a0 >> 0x7
 95940: d3 87 07                 a0 = a0 ^ a1
 95943: 97 78 11                 a1 = a0 << 0x11
 95946: d3 87 07                 a0 = a0 ^ a1
 95949: ca 67 09                 a2 = a0 * s1
 95952: 3e 07 78 12 03           u64 [0x31278] = a0
 95957: 14 0c cd cc cc cc cc cc cc cc a5 = 0xcccccccccccccccd
 95967: d6 c9 07                 a0 = a2 mulhu a5
 95970: 98 77 03                 a0 = a0 >> 0x3
 95973: 33 02 0a                 t0 = 0xa
 95976: 82 18 28                 a1 = u64 [sp + 0x28]
 95979: 82 1a 18                 a3 = u64 [sp + 0x18]
 95982: ca 27 07                 a0 = a0 * t0
 95985: c9 79 09                 a2 = a2 - a0
 95988: c8 39 09                 a2 = a2 + t1
 95991: 95 95 01                 s0 = a2 + 0x1
 95994: ab a8 23                 jump @7526 if a1 != a3
      :                          @7524
 95997: 95 17 18                 a0 = sp + 0x18
 96000: 7b 13 08                 u64 [sp + 0x8] = t1
 96003: 7b 1c                    u64 [sp] = a5
 96005: 50 20 62 04 02 dc fe     ra = 1122, jump @1581
      :                          @7525 [@dyn 561]
 96012: 82 1c                    a5 = u64 [sp]
 96014: 82 13 08                 t1 = u64 [sp + 0x8]
 96017: 33 02 0a                 t0 = 0xa
 96020: 33 0b 78 12 03           a4 = 0x31278
 96025: 82 18 28                 a1 = u64 [sp + 0x28]
 96028: 01                       fallthrough
      :                          @7526
 96029: 82 17 20                 a0 = u64 [sp + 0x20]
 96032: 97 89 03                 a2 = a1 << 0x3
 96035: c8 97 07                 a0 = a0 + a2
 96038: 7b 75                    u64 [a0] = s0
 96040: 95 88 01                 a1 = a1 + 0x1
 96043: 7b 18 28                 u64 [sp + 0x28] = a1
 96046: 3a 07 78 12 03           a0 = u64 [0x31278]
 96051: c8 53 03                 t1 = t1 + s0
 96054: 97 78 0d                 a1 = a0 << 0xd
 96057: d3 87 07                 a0 = a0 ^ a1
 96060: 98 78 07                 a1 = a0 >> 0x7
 96063: d3 87 07                 a0 = a0 ^ a1
 96066: 97 78 11                 a1 = a0 << 0x11
 96069: d3 87 07                 a0 = a0 ^ a1
 96072: ca 67 09                 a2 = a0 * s1
 96075: 3e 07 78 12 03           u64 [0x31278] = a0
 96080: d6 c9 07                 a0 = a2 mulhu a5
 96083: 98 77 03                 a0 = a0 >> 0x3
 96086: 82 18 28                 a1 = u64 [sp + 0x28]
 96089: 82 1a 18                 a3 = u64 [sp + 0x18]
 96092: 96 77 0a                 a0 = a0 * 0xa
 96095: c9 79 09                 a2 = a2 - a0
 96098: c8 39 09                 a2 = a2 + t1
 96101: 95 95 01                 s0 = a2 + 0x1
 96104: ab a8 17                 jump @7529 if a1 != a3
      :                          @7527
 96107: 95 17 18                 a0 = sp + 0x18
 96110: 7b 13 08                 u64 [sp + 0x8] = t1
 96113: 50 20 64 04 96 db fe     ra = 1124, jump @1581
      :                          @7528 [@dyn 562]
 96120: 82 13 08                 t1 = u64 [sp + 0x8]
 96123: 82 18 28                 a1 = u64 [sp + 0x28]
 96126: 01                       fallthrough
      :                          @7529
 96127: 82 17 20                 a0 = u64 [sp + 0x20]
 96130: 97 89 03                 a2 = a1 << 0x3
 96133: c8 97 07                 a0 = a0 + a2
 96136: 7b 75                    u64 [a0] = s0
 96138: 95 88 01                 a1 = a1 + 0x1
 96141: 7b 18 28                 u64 [sp + 0x28] = a1
 96144: 33 07 78 12 03           a0 = 0x31278
 96149: 3a 08 78 12 03           a1 = u64 [0x31278]
 96154: c8 35 05                 s0 = s0 + t1
 96157: 97 89 0d                 a2 = a1 << 0xd
 96160: d3 98 08                 a1 = a1 ^ a2
 96163: 98 89 07                 a2 = a1 >> 0x7
 96166: d3 98 08                 a1 = a1 ^ a2
 96169: 97 89 11                 a2 = a1 << 0x11
 96172: d3 98 08                 a1 = a1 ^ a2
 96175: ca 68 09                 a2 = a1 * s1
 96178: 3e 08 78 12 03           u64 [0x31278] = a1
 96183: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
 96193: d6 89 08                 a1 = a2 mulhu a1
 96196: 98 88 03                 a1 = a1 >> 0x3
 96199: 96 88 0a                 a1 = a1 * 0xa
 96202: c9 89 09                 a2 = a2 - a1
 96205: c8 95 08                 a1 = s0 + a2
 96208: 95 88 01                 a1 = a1 + 0x1
 96211: 33 09 01                 a2 = 0x1
 96214: 01                       fallthrough
      :                          @7530
 96215: 3a 0a 78 12 03           a3 = u64 [0x31278]
 96220: 97 ab 0d                 a4 = a3 << 0xd
 96223: d3 ba 0a                 a3 = a3 ^ a4
 96226: 98 ab 07                 a4 = a3 >> 0x7
 96229: d3 ba 0a                 a3 = a3 ^ a4
 96232: 97 ab 11                 a4 = a3 << 0x11
 96235: d3 ba 0a                 a3 = a3 ^ a4
 96238: ca 6a 0b                 a4 = a3 * s1
 96241: cd 8b 05                 s0 = a4 %u a1
 96244: 3e 0a 78 12 03           u64 [0x31278] = a3
 96249: 64 5a                    a3 = s0
 96251: 64 8c                    a5 = a1
 96253: 01                       fallthrough
      :                          @7531
 96254: 64 cb                    a4 = a5
 96256: cd ca 0c                 a5 = a3 %u a5
 96259: 64 ba                    a3 = a4
 96261: 52 0c f9                 jump @7531 if a5 != 0
      :                          @7532
 96264: ab 9b cf                 jump @7530 if a4 != a2
      :                          @7533
 96267: 82 1a 28                 a3 = u64 [sp + 0x28]
 96270: 82 12 20                 t0 = u64 [sp + 0x20]
 96273: 51 0a 6f                 jump @7542 if a3 == 0
      :                          @7534
 96276: 7b 12 08                 u64 [sp + 0x8] = t0
 96279: 7b 1a                    u64 [sp] = a3
 96281: 97 a7 03                 a0 = a3 << 0x3
 96284: 33 00 c0 22 03           ra = 0x322c0
 96289: 33 04 00 00 01           t2 = 0x10000
 96294: c8 40 0c                 a5 = ra + t2
 96297: 01                       fallthrough
      :                          @7535
 96298: 82 c9                    a2 = u64 [a5]
 96300: c8 79 0b                 a4 = a2 + a0
 96303: ac 9b a5 00              jump @7551 if a4 <u a2
      :                          @7536
 96307: 95 ba 08                 a3 = a4 + 0x8
 96310: d8 ba 06                 s1 = a3 <u a4
 96313: d8 a4 0a                 a3 = t2 <u a3
 96316: d4 6a 0a                 a3 = a3 | s1
 96319: 52 0a 95 00              jump @7551 if a3 != 0
      :                          @7537
 96323: c9 b0 0a                 a3 = ra - a4
 96326: c8 4a 0a                 a3 = a3 + t2
 96329: 84 a6 07                 s1 = a3 & 0x7
 96332: c8 6b 0b                 a4 = a4 + s1
 96335: 01                       fallthrough
      :                          @7538
 96336: 82 c2                    t0 = u64 [a5]
 96338: ab 92 d8                 jump @7535 if t0 != a2
      :                          @7539
 96341: 7b cb                    u64 [a5] = a4
 96343: 33 03                    t1 = 0
 96345: c9 6a 07                 a0 = a3 - s1
 96348: 82 12 08                 t0 = u64 [sp + 0x8]
 96351: 64 2c                    a5 = t0
 96353: 64 7b                    a4 = a0
 96355: 82 1a                    a3 = u64 [sp]
 96357: 64 a6                    s1 = a3
 96359: 01                       fallthrough
      :                          @7540
 96360: 82 c9                    a2 = u64 [a5]
 96362: ca 59 09                 a2 = a2 * s0
 96365: cd 89 09                 a2 = a2 %u a1
 96368: 7b b9                    u64 [a4] = a2
 96370: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 96373: 95 bb 08                 a4 = a4 + 0x8
 96376: 95 cc 08                 a5 = a5 + 0x8
 96379: 52 06 ed                 jump @7540 if s1 != 0
      :                          @7541
 96382: 28 06                    jump @7543
      :                          @7542
 96384: 33 07 08                 a0 = 0x8
 96387: 01                       fallthrough
      :                          @7543
 96388: 82 19 10                 a2 = u64 [sp + 0x10]
 96391: 7b 97 08                 u64 [a2 + 0x8] = a0
 96394: 82 17 18                 a0 = u64 [sp + 0x18]
 96397: 7b 9a                    u64 [a2] = a3
 96399: 7b 9a 10                 u64 [a2 + 0x10] = a3
 96402: 7b 98 18                 u64 [a2 + 0x18] = a1
 96405: 7b 95 20                 u64 [a2 + 0x20] = s0
 96408: 51 07 2e                 jump @7550 if a0 == 0
      :                          @7544
 96411: 33 08 00 20              a1 = 0x2000
 96415: ac 78 27                 jump @7550 if a1 <u a0
      :                          @7545
 96418: 97 77 03                 a0 = a0 << 0x3
 96421: 33 08 c0 22 03           a1 = 0x322c0
 96426: 95 88 00 00 01           a1 = a1 + 0x10000
 96431: 01                       fallthrough
      :                          @7546
 96432: 82 89                    a2 = u64 [a1]
 96434: c9 98 0a                 a3 = a1 - a2
 96437: ab 2a 11                 jump @7550 if a3 != t0
      :                          @7547
 96440: c9 79 0a                 a3 = a2 - a0
 96443: 01                       fallthrough
      :                          @7548
 96444: 82 8b                    a4 = u64 [a1]
 96446: ab 9b f2                 jump @7546 if a4 != a2
      :                          @7549
 96449: 7b 8a                    u64 [a1] = a3
 96451: 33 0c                    a5 = 0
 96453: 01                       fallthrough
      :                          @7550
 96454: 82 10 40                 ra = u64 [sp + 0x40]
 96457: 82 15 38                 s0 = u64 [sp + 0x38]
 96460: 82 16 30                 s1 = u64 [sp + 0x30]
 96463: 95 11 48                 sp = sp + 0x48
 96466: 32 00                    ret
      :                          @7551
 96468: 00                       trap
      :                          @7552 [@dyn 563]
 96469: 82 17 20                 a0 = u64 [sp + 0x20]
 96472: 52 17 01 1a 01           jump @7574 if a0 != 1
      :                          @7553
 96477: 51 06 14 01              jump @7573 if s1 == 0
      :                          @7554
 96481: 82 17 28                 a0 = u64 [sp + 0x28]
 96484: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 96494: d3 87 09                 a2 = a0 ^ a1
 96497: e1 69 09                 a2 = a2 | ~s1
 96500: 51 09 fc 00              jump @7572 if a2 == 0
      :                          @7555
 96504: ce 67 07                 a0 = a0 %s s1
 96507: c8 67 07                 a0 = a0 + s1
 96510: d3 78 08                 a1 = a1 ^ a0
 96513: e1 68 08                 a1 = a1 | ~s1
 96516: 51 08 ec 00              jump @7572 if a1 == 0
      :                          @7556
 96520: 49 11 20                 u64 [sp + 32] = 0
 96523: 49 11 28 01              u64 [sp + 40] = 0x1
 96527: 49 11 30                 u64 [sp + 48] = 0
 96530: 82 1a 18                 a3 = u64 [sp + 0x18]
 96533: 51 0a bc 00              jump @7571 if a3 == 0
      :                          @7557
 96537: 7b 15                    u64 [sp] = s0
 96539: 33 08                    a1 = 0
 96541: ce 67 07                 a0 = a0 %s s1
 96544: 82 19 10                 a2 = u64 [sp + 0x10]
 96547: ca 97 07                 a0 = a0 * a2
 96550: cd 67 0b                 a4 = a0 %u s1
 96553: 97 a5 03                 s0 = a3 << 0x3
 96556: 82 1c 08                 a5 = u64 [sp + 0x8]
 96559: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 96562: 33 07 01                 a0 = 0x1
 96565: 7b 1c 18                 u64 [sp + 0x18] = a5
 96568: 28 19                    jump @7559
      :                          @7558
 96570: c8 87 09                 a2 = a0 + a1
 96573: 33 0a 01                 a3 = 0x1
 96576: 78 9a                    u8 [a2] = a3
 96578: c8 a8 08                 a1 = a1 + a3
 96581: 7b 18 30                 u64 [sp + 0x30] = a1
 96584: c9 6b 0b                 a4 = a4 - s1
 96587: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 96590: 51 05 5d                 jump @7568 if s0 == 0
      :                          @7559
 96593: c8 5c 09                 a2 = a5 + s0
 96596: 82 96                    s1 = u64 [a2]
 96598: ae 6b 34                 jump @7565 if a4 >=u s1
      :                          @7560
 96601: 82 17 20                 a0 = u64 [sp + 0x20]
 96604: ab 78 18                 jump @7563 if a1 != a0
      :                          @7561
 96607: 95 17 20                 a0 = sp + 0x20
 96610: 64 b6                    s1 = a4
 96612: 50 20 68 04 23 da fe     ra = 1128, jump @1593
      :                          @7562 [@dyn 564]
 96619: 82 1c 18                 a5 = u64 [sp + 0x18]
 96622: 64 6b                    a4 = s1
 96624: 82 18 30                 a1 = u64 [sp + 0x30]
 96627: 01                       fallthrough
      :                          @7563
 96628: 82 17 28                 a0 = u64 [sp + 0x28]
 96631: c8 87 09                 a2 = a0 + a1
 96634: 46 09                    u8 [a2 + 0] = 0
 96636: 95 88 01                 a1 = a1 + 0x1
 96639: 7b 18 30                 u64 [sp + 0x30] = a1
 96642: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 96645: 52 05 cc                 jump @7559 if s0 != 0
      :                          @7564
 96648: 28 23                    jump @7568
      :                          @7565
 96650: 82 19 20                 a2 = u64 [sp + 0x20]
 96653: ab 98 ad                 jump @7558 if a1 != a2
      :                          @7566
 96656: 95 17 20                 a0 = sp + 0x20
 96659: 7b 1b 10                 u64 [sp + 0x10] = a4
 96662: 50 20 6a 04 f1 d9 fe     ra = 1130, jump @1593
      :                          @7567 [@dyn 565]
 96669: 82 1c 18                 a5 = u64 [sp + 0x18]
 96672: 82 1b 10                 a4 = u64 [sp + 0x10]
 96675: 82 18 30                 a1 = u64 [sp + 0x30]
 96678: 82 17 28                 a0 = u64 [sp + 0x28]
 96681: 28 91                    jump @7558
      :                          @7568
 96683: 98 87 01                 a0 = a1 >> 0x1
 96686: 82 15                    s0 = u64 [sp]
 96688: 51 07 21                 jump @7571 if a0 == 0
      :                          @7569
 96691: 82 19 28                 a2 = u64 [sp + 0x28]
 96694: c8 98 08                 a1 = a1 + a2
 96697: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 96700: 01                       fallthrough
      :                          @7570
 96701: 7c 8a                    a3 = u8 [a1]
 96703: 7c 9b                    a4 = u8 [a2]
 96705: 78 9a                    u8 [a2] = a3
 96707: 78 8b                    u8 [a1] = a4
 96709: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 96712: 95 99 01                 a2 = a2 + 0x1
 96715: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 96718: 52 07 ef                 jump @7570 if a0 != 0
      :                          @7571
 96721: 82 17 30                 a0 = u64 [sp + 0x30]
 96724: 82 18 28                 a1 = u64 [sp + 0x28]
 96727: 82 19 20                 a2 = u64 [sp + 0x20]
 96730: 7b 57 10                 u64 [s0 + 0x10] = a0
 96733: 7b 58 08                 u64 [s0 + 0x8] = a1
 96736: 7b 59                    u64 [s0] = a2
 96738: 82 10 48                 ra = u64 [sp + 0x48]
 96741: 82 15 40                 s0 = u64 [sp + 0x40]
 96744: 82 16 38                 s1 = u64 [sp + 0x38]
 96747: 95 11 50                 sp = sp + 0x50
 96750: 32 00                    ret
      :                          @7572
 96752: 00                       trap
      :                          @7573
 96753: 00                       trap
      :                          @7574
 96754: 00                       trap
      :                          @7575
 96755: 95 11 40 ff              sp = sp + 0xffffffffffffff40
 96759: 7b 10 b8 00              u64 [sp + 0xb8] = ra
 96763: 7b 15 b0 00              u64 [sp + 0xb0] = s0
 96767: 7b 16 a8 00              u64 [sp + 0xa8] = s1
 96771: 33 0a 03                 a3 = 0x3
 96774: ae a9 0e                 jump @7577 if a2 >=u a3
      :                          @7576
 96777: 97 97 03                 a0 = a2 << 0x3
 96780: c8 87 07                 a0 = a0 + a1
 96783: 82 77                    a0 = u64 [a0]
 96785: 28 fe 03                 jump @7674
      :                          @7577
 96788: 33 03 c0 22 03           t1 = 0x322c0
 96793: 33 02 00 00 01           t0 = 0x10000
 96798: c8 23 04                 t2 = t1 + t0
 96801: 01                       fallthrough
      :                          @7578
 96802: 82 4a                    a3 = u64 [t2]
 96804: 95 ab 18                 a4 = a3 + 0x18
 96807: ac ab 02 04              jump @7683 if a4 <u a3
      :                          @7579
 96811: 95 bc 08                 a5 = a4 + 0x8
 96814: d8 bc 06                 s1 = a5 <u a4
 96817: d8 c2 0c                 a5 = t0 <u a5
 96820: d4 6c 0c                 a5 = a5 | s1
 96823: 52 0c f2 03              jump @7683 if a5 != 0
      :                          @7580
 96827: c9 b3 05                 s0 = t1 - a4
 96830: c8 25 00                 ra = s0 + t0
 96833: 84 0c 07                 a5 = ra & 0x7
 96836: c8 cb 0b                 a4 = a4 + a5
 96839: 01                       fallthrough
      :                          @7581
 96840: 82 46                    s1 = u64 [t2]
 96842: ab a6 d8                 jump @7578 if s1 != a3
      :                          @7582
 96845: 7b 4b                    u64 [t2] = a4
 96847: 64 76                    s1 = a0
 96849: 7b 19 20                 u64 [sp + 0x20] = a2
 96852: 7b 18                    u64 [sp] = a1
 96854: c9 c0 05                 s0 = ra - a5
 96857: 33 09 18                 a2 = 0x18
 96860: 64 57                    a0 = s0
 96862: 33 08                    a1 = 0
 96864: 50 20 6c 04 f9 90 01     ra = 1132, jump @13675
      :                          @7583 [@dyn 566]
 96871: 49 21 90 00 03           u64 [sp + 144] = 0x3
 96876: 7b 15 98 00              u64 [sp + 0x98] = s0
 96880: 49 21 a0 00 03           u64 [sp + 160] = 0x3
 96885: 95 17 30                 a0 = sp + 0x30
 96888: 95 18 90 00              a1 = sp + 0x90
 96892: 33 09 03                 a2 = 0x3
 96895: 50 20 6e 04 95 e3 fe     ra = 1134, jump @1783
      :                          @7584 [@dyn 567]
 96902: 82 1b 40                 a4 = u64 [sp + 0x40]
 96905: 33 07 01                 a0 = 0x1
 96908: e4 7b 09                 a2 = maxu(a4, a0)
 96911: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 96914: 51 09 95 03              jump @7681 if a2 == 0
      :                          @7585
 96918: 82 1a 38                 a3 = u64 [sp + 0x38]
 96921: 82 a8 28                 a1 = u64 [a3 + 0x28]
 96924: 51 08 87 03              jump @7677 if a1 == 0
      :                          @7586
 96928: 82 a8 20                 a1 = u64 [a3 + 0x20]
 96931: 49 08 01                 u64 [a1 + 0] = 0x1
 96934: 51 19 01 80 03           jump @7680 if a2 == 1
      :                          @7587
 96939: 82 a8 40                 a1 = u64 [a3 + 0x40]
 96942: 53 18 02 76 03           jump @7678 if a1 <u 2
      :                          @7588
 96947: 82 a7 38                 a0 = u64 [a3 + 0x38]
 96950: 49 17 08 01              u64 [a0 + 8] = 0x1
 96954: 51 0b 6b 03              jump @7679 if a4 == 0
      :                          @7589
 96958: 82 a8 10                 a1 = u64 [a3 + 0x10]
 96961: 51 08 62 03              jump @7677 if a1 == 0
      :                          @7590
 96965: 82 67                    a0 = u64 [s1]
 96967: 82 a8 08                 a1 = u64 [a3 + 0x8]
 96970: 7b 87                    u64 [a1] = a0
 96972: 82 a8 10                 a1 = u64 [a3 + 0x10]
 96975: 53 18 02 59 03           jump @7682 if a1 <u 2
      :                          @7591
 96980: 82 68 08                 a1 = u64 [s1 + 0x8]
 96983: 82 a9 08                 a2 = u64 [a3 + 0x8]
 96986: 7b 98 08                 u64 [a2 + 0x8] = a1
 96989: 82 a8 10                 a1 = u64 [a3 + 0x10]
 96992: 53 18 03 44 03           jump @7678 if a1 <u 3
      :                          @7592
 96997: 82 68 10                 a1 = u64 [s1 + 0x10]
 97000: 7b 1a 28                 u64 [sp + 0x28] = a3
 97003: 82 a9 08                 a2 = u64 [a3 + 0x8]
 97006: 98 b7 3c                 a0 = a4 >> 0x3c
 97009: 7b 98 10                 u64 [a2 + 0x10] = a1
 97012: 52 07 37 03              jump @7685 if a0 != 0
      :                          @7593
 97016: 82 18 30                 a1 = u64 [sp + 0x30]
 97019: 7b 18 10                 u64 [sp + 0x10] = a1
 97022: 82 18 20                 a1 = u64 [sp + 0x20]
 97025: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 97028: 7b 18 18                 u64 [sp + 0x18] = a1
 97031: 88 72 01                 t0 = a0 <u 0x1
 97034: 7b 1b 20                 u64 [sp + 0x20] = a4
 97037: 97 b9 03                 a2 = a4 << 0x3
 97040: 97 22 03                 t0 = t0 << 0x3
 97043: 33 04 c0 22 03           t2 = 0x322c0
 97048: 33 03 00 00 01           t1 = 0x10000
 97053: c8 34 00                 ra = t2 + t1
 97056: 01                       fallthrough
      :                          @7594
 97057: 82 05                    s0 = u64 [ra]
 97059: c8 95 0c                 a5 = s0 + a2
 97062: ac 5c 04 03              jump @7684 if a5 <u s0
      :                          @7595
 97066: c8 2c 07                 a0 = a5 + t0
 97069: d8 c7 0a                 a3 = a0 <u a5
 97072: d8 73 07                 a0 = t1 <u a0
 97075: d4 a7 07                 a0 = a0 | a3
 97078: 52 07 f4 02              jump @7684 if a0 != 0
      :                          @7596
 97082: c9 c4 07                 a0 = t2 - a5
 97085: c8 37 07                 a0 = a0 + t1
 97088: 84 7a 07                 a3 = a0 & 0x7
 97091: c8 ac 0c                 a5 = a5 + a3
 97094: 01                       fallthrough
      :                          @7597
 97095: 82 08                    a1 = u64 [ra]
 97097: ab 58 d8                 jump @7594 if a1 != s0
      :                          @7598
 97100: 7b 0c                    u64 [ra] = a5
 97102: 33 0b                    a4 = 0
 97104: c9 a7 06                 s1 = a0 - a3
 97107: 64 67                    a0 = s1
 97109: 33 08                    a1 = 0
 97111: 50 20 70 04 02 90 01     ra = 1136, jump @13675
      :                          @7599 [@dyn 568]
 97118: 82 15 20                 s0 = u64 [sp + 0x20]
 97121: 7b 15 90 00              u64 [sp + 0x90] = s0
 97125: 7b 16 98 00              u64 [sp + 0x98] = s1
 97129: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 97133: 95 17 48                 a0 = sp + 0x48
 97136: 95 18 90 00              a1 = sp + 0x90
 97140: 64 59                    a2 = s0
 97142: 50 20 72 04 9e e2 fe     ra = 1138, jump @1783
      :                          @7600 [@dyn 569]
 97149: 64 59                    a2 = s0
 97151: 82 1b 50                 a4 = u64 [sp + 0x50]
 97154: 82 17 58                 a0 = u64 [sp + 0x58]
 97157: 33 0a                    a3 = 0
 97159: 33 05                    s0 = 0
 97161: 95 bb 10                 a4 = a4 + 0x10
 97164: 33 0c 01                 a5 = 0x1
 97167: 82 16 28                 s1 = u64 [sp + 0x28]
 97170: 01                       fallthrough
      :                          @7601
 97171: aa 57 8e 02              jump @7675 if a0 == s0
      :                          @7602
 97175: 82 b8                    a1 = u64 [a4]
 97177: ae 85 89 02              jump @7676 if s0 >=u a1
      :                          @7603
 97181: 82 b8 f8                 a1 = u64 [a4 + 0xfffffffffffffff8]
 97184: 95 55 01                 s0 = s0 + 0x1
 97187: c8 a8 08                 a1 = a1 + a3
 97190: 7b 8c                    u64 [a1] = a5
 97192: 95 bb 18                 a4 = a4 + 0x18
 97195: 95 aa 08                 a3 = a3 + 0x8
 97198: ab 59 e5                 jump @7601 if a2 != s0
      :                          @7604
 97201: 49 11 08 aa 0a           u64 [sp + 8] = 0xaaa
 97206: 33 05 c0 22 03           s0 = 0x322c0
 97211: 95 55 00 00 01           s0 = s0 + 0x10000
 97216: 82 17 18                 a0 = u64 [sp + 0x18]
 97219: 28 18                    jump @7606
      :                          @7605
 97221: 82 17 60                 a0 = u64 [sp + 0x60]
 97224: 7b 17 10                 u64 [sp + 0x10] = a0
 97227: 82 16 68                 s1 = u64 [sp + 0x68]
 97230: 82 19 70                 a2 = u64 [sp + 0x70]
 97233: 82 17 18                 a0 = u64 [sp + 0x18]
 97236: 98 77 01                 a0 = a0 >> 0x1
 97239: 51 07 f1 00              jump @7634 if a0 == 0
      :                          @7606
 97243: 7b 17 18                 u64 [sp + 0x18] = a0
 97246: 84 77 01                 a0 = a0 & 0x1
 97249: 7b 16 28                 u64 [sp + 0x28] = s1
 97252: 7b 19 20                 u64 [sp + 0x20] = a2
 97255: 51 07 3b                 jump @7610 if a0 == 0
      :                          @7607
 97258: 95 17 90 00              a0 = sp + 0x90
 97262: 64 68                    a1 = s1
 97264: 50 20 74 04 81 f5 fe     ra = 1140, jump @2112
      :                          @7608 [@dyn 570]
 97271: 95 17 78                 a0 = sp + 0x78
 97274: 95 18 48                 a1 = sp + 0x48
 97277: 95 19 90 00              a2 = sp + 0x90
 97281: 50 20 76 04 2b 02        ra = 1142, jump @7686
      :                          @7609 [@dyn 571]
 97287: 82 19 20                 a2 = u64 [sp + 0x20]
 97290: 82 16 28                 s1 = u64 [sp + 0x28]
 97293: 82 17 78                 a0 = u64 [sp + 0x78]
 97296: 82 18 80 00              a1 = u64 [sp + 0x80]
 97300: 82 1a 88 00              a3 = u64 [sp + 0x88]
 97304: 7b 17 48                 u64 [sp + 0x48] = a0
 97307: 7b 18 50                 u64 [sp + 0x50] = a1
 97310: 7b 1a 58                 u64 [sp + 0x58] = a3
 97313: 01                       fallthrough
      :                          @7610
 97314: 95 17 78                 a0 = sp + 0x78
 97317: 64 68                    a1 = s1
 97319: 50 20 78 04 4a f5 fe     ra = 1144, jump @2112
      :                          @7611 [@dyn 572]
 97326: 95 17 90 00              a0 = sp + 0x90
 97330: 82 18 28                 a1 = u64 [sp + 0x28]
 97333: 82 19 20                 a2 = u64 [sp + 0x20]
 97336: 50 20 7a 04 39 f5 fe     ra = 1146, jump @2112
      :                          @7612 [@dyn 573]
 97343: 95 17 60                 a0 = sp + 0x60
 97346: 95 18 78                 a1 = sp + 0x78
 97349: 95 19 90 00              a2 = sp + 0x90
 97353: 50 20 7c 04 e3 01        ra = 1148, jump @7686
      :                          @7613 [@dyn 574]
 97359: 82 13 20                 t1 = u64 [sp + 0x20]
 97362: 82 12 28                 t0 = u64 [sp + 0x28]
 97365: 33 04 18                 t2 = 0x18
 97368: 33 00 00 20              ra = 0x2000
 97372: 51 03 3d                 jump @7625 if t1 == 0
      :                          @7614
 97375: 33 07                    a0 = 0
 97377: 28 08                    jump @7616
      :                          @7615
 97379: 95 77 01                 a0 = a0 + 0x1
 97382: aa 37 33                 jump @7625 if a0 == t1
      :                          @7616
 97385: ca 47 08                 a1 = a0 * t2
 97388: c8 28 08                 a1 = a1 + t0
 97391: 82 89                    a2 = u64 [a1]
 97393: 51 09 f2                 jump @7615 if a2 == 0
      :                          @7617
 97396: ac 90 ef                 jump @7615 if ra <u a2
      :                          @7618
 97399: 82 88 08                 a1 = u64 [a1 + 0x8]
 97402: 97 99 03                 a2 = a2 << 0x3
 97405: 01                       fallthrough
      :                          @7619
 97406: 82 5a                    a3 = u64 [s0]
 97408: c9 a5 0b                 a4 = s0 - a3
 97411: ab 8b e0                 jump @7615 if a4 != a1
      :                          @7620
 97414: c9 9a 0b                 a4 = a3 - a2
 97417: 01                       fallthrough
      :                          @7621
 97418: 82 5c                    a5 = u64 [s0]
 97420: ab ac f2                 jump @7619 if a5 != a3
      :                          @7622
 97423: 7b 5b                    u64 [s0] = a4
 97425: 33 06                    s1 = 0
 97427: 01                       fallthrough
      :                          @7623
 97428: ab ac ea                 jump @7619 if a5 != a3
      :                          @7624
 97431: 28 cc                    jump @7615
      :                          @7625
 97433: 82 17 10                 a0 = u64 [sp + 0x10]
 97436: 51 07 29 ff              jump @7605 if a0 == 0
      :                          @7626
 97440: 82 18 08                 a1 = u64 [sp + 0x8]
 97443: ac 78 22 ff              jump @7605 if a1 <u a0
      :                          @7627
 97447: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
 97450: 01                       fallthrough
      :                          @7628
 97451: 82 58                    a1 = u64 [s0]
 97453: c9 85 09                 a2 = s0 - a1
 97456: ab 29 15 ff              jump @7605 if a2 != t0
      :                          @7629
 97460: c8 78 09                 a2 = a1 + a0
 97463: 01                       fallthrough
      :                          @7630
 97464: 82 5a                    a3 = u64 [s0]
 97466: ab 8a f1                 jump @7628 if a3 != a1
      :                          @7631
 97469: 7b 59                    u64 [s0] = a2
 97471: 33 0b                    a4 = 0
 97473: 01                       fallthrough
      :                          @7632
 97474: ab 8a e9                 jump @7628 if a3 != a1
      :                          @7633
 97477: 28 00 ff                 jump @7605
      :                          @7634
 97480: 82 17 48                 a0 = u64 [sp + 0x48]
 97483: 7b 17 20                 u64 [sp + 0x20] = a0
 97486: 82 13 50                 t1 = u64 [sp + 0x50]
 97489: 82 17 58                 a0 = u64 [sp + 0x58]
 97492: 7b 17 28                 u64 [sp + 0x28] = a0
 97495: 51 09 51                 jump @7646 if a2 == 0
      :                          @7635
 97498: 33 07                    a0 = 0
 97500: 33 0b c0 22 03           a4 = 0x322c0
 97505: 95 ba 00 00 01           a3 = a4 + 0x10000
 97510: 28 0c                    jump @7637
      :                          @7636
 97512: 95 77 01                 a0 = a0 + 0x1
 97515: 64 46                    s1 = t2
 97517: 64 29                    a2 = t0
 97519: aa 27 39                 jump @7646 if a0 == t0
      :                          @7637
 97522: 64 92                    t0 = a2
 97524: 96 75 18                 s0 = a0 * 0x18
 97527: 64 64                    t2 = s1
 97529: c8 65 05                 s0 = s0 + s1
 97532: 82 5c                    a5 = u64 [s0]
 97534: 51 0c ea                 jump @7636 if a5 == 0
      :                          @7638
 97537: 56 2c 00 20 e7           jump @7636 if a5 >u 8192
      :                          @7639
 97542: 82 55 08                 s0 = u64 [s0 + 0x8]
 97545: 97 cc 03                 a5 = a5 << 0x3
 97548: 01                       fallthrough
      :                          @7640
 97549: 82 a9                    a2 = u64 [a3]
 97551: c9 9a 0b                 a4 = a3 - a2
 97554: ab 5b d6                 jump @7636 if a4 != s0
      :                          @7641
 97557: c9 c9 0b                 a4 = a2 - a5
 97560: 01                       fallthrough
      :                          @7642
 97561: 82 a8                    a1 = u64 [a3]
 97563: ab 98 f2                 jump @7640 if a1 != a2
      :                          @7643
 97566: 7b ab                    u64 [a3] = a4
 97568: 33 00                    ra = 0
 97570: 01                       fallthrough
      :                          @7644
 97571: ab 98 ea                 jump @7640 if a1 != a2
      :                          @7645
 97574: 28 c2                    jump @7636
      :                          @7646
 97576: 82 18 10                 a1 = u64 [sp + 0x10]
 97579: 51 08 2a                 jump @7653 if a1 == 0
      :                          @7647
 97582: 56 28 aa 0a 27           jump @7653 if a1 >u 2730
      :                          @7648
 97587: 96 87 e8                 a0 = a1 * 0xffffffffffffffe8
 97590: 33 09 c0 22 03           a2 = 0x322c0
 97595: 95 99 00 00 01           a2 = a2 + 0x10000
 97600: 01                       fallthrough
      :                          @7649
 97601: 82 9b                    a4 = u64 [a2]
 97603: c9 b9 08                 a1 = a2 - a4
 97606: ab 68 0f                 jump @7653 if a1 != s1
      :                          @7650
 97609: c8 7b 08                 a1 = a4 + a0
 97612: 01                       fallthrough
      :                          @7651
 97613: 82 9a                    a3 = u64 [a2]
 97615: ab ba f2                 jump @7649 if a3 != a4
      :                          @7652
 97618: 7b 98                    u64 [a2] = a1
 97620: 01                       fallthrough
      :                          @7653
 97621: 82 16 28                 s1 = u64 [sp + 0x28]
 97624: 51 06 cd 00              jump @7679 if s1 == 0
      :                          @7654
 97628: 82 37 10                 a0 = u64 [t1 + 0x10]
 97631: 53 17 03 c2 00           jump @7675 if a0 <u 3
      :                          @7655
 97636: 82 37 08                 a0 = u64 [t1 + 0x8]
 97639: 33 0c                    a5 = 0
 97641: 82 15                    s0 = u64 [sp]
 97643: 82 58 10                 a1 = u64 [s0 + 0x10]
 97646: 82 79                    a2 = u64 [a0]
 97648: 82 7a 08                 a3 = u64 [a0 + 0x8]
 97651: 82 5b 08                 a4 = u64 [s0 + 0x8]
 97654: 82 77 10                 a0 = u64 [a0 + 0x10]
 97657: 82 55                    s0 = u64 [s0]
 97659: ca 98 08                 a1 = a1 * a2
 97662: ca ab 09                 a2 = a4 * a3
 97665: c8 98 08                 a1 = a1 + a2
 97668: 7b 18 18                 u64 [sp + 0x18] = a1
 97671: ca 75 07                 a0 = s0 * a0
 97674: 7b 17 10                 u64 [sp + 0x10] = a0
 97677: 33 02 18                 t0 = 0x18
 97680: 33 05 c0 22 03           s0 = 0x322c0
 97685: 95 55 00 00 01           s0 = s0 + 0x10000
 97690: 33 00 00 20              ra = 0x2000
 97694: 28 08                    jump @7657
      :                          @7656
 97696: 95 cc 01                 a5 = a5 + 0x1
 97699: aa 6c 33                 jump @7666 if a5 == s1
      :                          @7657
 97702: ca 2c 07                 a0 = a5 * t0
 97705: c8 37 07                 a0 = a0 + t1
 97708: 82 7b                    a4 = u64 [a0]
 97710: 51 0b f2                 jump @7656 if a4 == 0
      :                          @7658
 97713: ac b0 ef                 jump @7656 if ra <u a4
      :                          @7659
 97716: 82 77 08                 a0 = u64 [a0 + 0x8]
 97719: 97 bb 03                 a4 = a4 << 0x3
 97722: 01                       fallthrough
      :                          @7660
 97723: 82 59                    a2 = u64 [s0]
 97725: c9 95 0a                 a3 = s0 - a2
 97728: ab 7a e0                 jump @7656 if a3 != a0
      :                          @7661
 97731: c9 b9 0a                 a3 = a2 - a4
 97734: 01                       fallthrough
      :                          @7662
 97735: 82 58                    a1 = u64 [s0]
 97737: ab 98 f2                 jump @7660 if a1 != a2
      :                          @7663
 97740: 7b 5a                    u64 [s0] = a3
 97742: 33 04                    t2 = 0
 97744: 01                       fallthrough
      :                          @7664
 97745: ab 98 ea                 jump @7660 if a1 != a2
      :                          @7665
 97748: 28 cc                    jump @7656
      :                          @7666
 97750: 82 18 20                 a1 = u64 [sp + 0x20]
 97753: 51 08 2c                 jump @7673 if a1 == 0
      :                          @7667
 97756: 56 28 aa 0a 29           jump @7673 if a1 >u 2730
      :                          @7668
 97761: 96 89 e8                 a2 = a1 * 0xffffffffffffffe8
 97764: 33 07 c0 22 03           a0 = 0x322c0
 97769: 95 77 00 00 01           a0 = a0 + 0x10000
 97774: 01                       fallthrough
      :                          @7669
 97775: 82 7a                    a3 = u64 [a0]
 97777: c9 a7 08                 a1 = a0 - a3
 97780: ab 38 11                 jump @7673 if a1 != t1
      :                          @7670
 97783: c8 9a 08                 a1 = a3 + a2
 97786: 01                       fallthrough
      :                          @7671
 97787: 82 7b                    a4 = u64 [a0]
 97789: ab ab f2                 jump @7669 if a4 != a3
      :                          @7672
 97792: 7b 78                    u64 [a0] = a1
 97794: 33 0c                    a5 = 0
 97796: 01                       fallthrough
      :                          @7673
 97797: 82 17 18                 a0 = u64 [sp + 0x18]
 97800: 82 18 10                 a1 = u64 [sp + 0x10]
 97803: c8 87 07                 a0 = a0 + a1
 97806: 01                       fallthrough
      :                          @7674
 97807: 82 10 b8 00              ra = u64 [sp + 0xb8]
 97811: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 97815: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 97819: 95 11 c0 00              sp = sp + 0xc0
 97823: 32 00                    ret
      :                          @7675
 97825: 00                       trap
      :                          @7676
 97826: 00                       trap
      :                          @7677
 97827: 00                       trap
      :                          @7678
 97828: 00                       trap
      :                          @7679
 97829: 00                       trap
      :                          @7680
 97830: 00                       trap
      :                          @7681
 97831: 00                       trap
      :                          @7682
 97832: 00                       trap
      :                          @7683
 97833: 00                       trap
      :                          @7684
 97834: 00                       trap
      :                          @7685
 97835: 00                       trap
      :                          @7686
 97836: 95 11 50 ff              sp = sp + 0xffffffffffffff50
 97840: 7b 10 a8 00              u64 [sp + 0xa8] = ra
 97844: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 97848: 7b 16 98 00              u64 [sp + 0x98] = s1
 97852: 7b 18 30                 u64 [sp + 0x30] = a1
 97855: 82 86 10                 s1 = u64 [a1 + 0x10]
 97858: 64 7b                    a4 = a0
 97860: 7b 19 28                 u64 [sp + 0x28] = a2
 97863: 51 06 52 01              jump @7707 if s1 == 0
      :                          @7687
 97867: 98 67 3c                 a0 = s1 >> 0x3c
 97870: 52 07 ac 02              jump @7753 if a0 != 0
      :                          @7688
 97874: 7b 1b                    u64 [sp] = a4
 97876: 88 72 01                 t0 = a0 <u 0x1
 97879: 97 69 03                 a2 = s1 << 0x3
 97882: 97 22 03                 t0 = t0 << 0x3
 97885: 33 04 c0 22 03           t2 = 0x322c0
 97890: 33 03 00 00 01           t1 = 0x10000
 97895: c8 34 00                 ra = t2 + t1
 97898: 01                       fallthrough
      :                          @7689
 97899: 82 05                    s0 = u64 [ra]
 97901: c8 95 0c                 a5 = s0 + a2
 97904: ac 5c 89 02              jump @7752 if a5 <u s0
      :                          @7690
 97908: c8 2c 07                 a0 = a5 + t0
 97911: d8 c7 0a                 a3 = a0 <u a5
 97914: d8 73 07                 a0 = t1 <u a0
 97917: d4 a7 07                 a0 = a0 | a3
 97920: 52 07 79 02              jump @7752 if a0 != 0
      :                          @7691
 97924: c9 c4 07                 a0 = t2 - a5
 97927: c8 37 07                 a0 = a0 + t1
 97930: 84 7a 07                 a3 = a0 & 0x7
 97933: c8 ac 0c                 a5 = a5 + a3
 97936: 01                       fallthrough
      :                          @7692
 97937: 82 08                    a1 = u64 [ra]
 97939: ab 58 d8                 jump @7689 if a1 != s0
      :                          @7693
 97942: 7b 0c                    u64 [ra] = a5
 97944: 33 0b                    a4 = 0
 97946: c9 a7 05                 s0 = a0 - a3
 97949: 64 57                    a0 = s0
 97951: 33 08                    a1 = 0
 97953: 50 20 7e 04 b8 8c 01     ra = 1150, jump @13675
      :                          @7694 [@dyn 575]
 97960: 7b 16 80 00              u64 [sp + 0x80] = s1
 97964: 7b 15 88 00              u64 [sp + 0x88] = s0
 97968: 7b 16 90 00              u64 [sp + 0x90] = s1
 97972: 95 17 68                 a0 = sp + 0x68
 97975: 95 18 80 00              a1 = sp + 0x80
 97979: 64 69                    a2 = s1
 97981: 50 20 80 04 57 df fe     ra = 1152, jump @1783
      :                          @7695 [@dyn 576]
 97988: 82 17 30                 a0 = u64 [sp + 0x30]
 97991: 82 7a 08                 a3 = u64 [a0 + 0x8]
 97994: 82 17 28                 a0 = u64 [sp + 0x28]
 97997: 82 70 10                 ra = u64 [a0 + 0x10]
 98000: 82 77 08                 a0 = u64 [a0 + 0x8]
 98003: 82 18 78                 a1 = u64 [sp + 0x78]
 98006: 82 1b 70                 a4 = u64 [sp + 0x70]
 98009: 33 09                    a2 = 0
 98011: 7b 17 38                 u64 [sp + 0x38] = a0
 98014: 95 77 10                 a0 = a0 + 0x10
 98017: 7b 17 40                 u64 [sp + 0x40] = a0
 98020: 7b 18 18                 u64 [sp + 0x18] = a1
 98023: 7b 1a 10                 u64 [sp + 0x10] = a3
 98026: 7b 1b 08                 u64 [sp + 0x8] = a4
 98029: 01                       fallthrough
      :                          @7696
 98030: 96 93 18                 t1 = a2 * 0x18
 98033: c8 3a 02                 t0 = a3 + t1
 98036: 95 27 10                 a0 = t0 + 0x10
 98039: 7b 17 60                 u64 [sp + 0x60] = a0
 98042: ae 89 ea 01              jump @7748 if a2 >=u a1
      :                          @7697
 98046: 33 07                    a0 = 0
 98048: 95 99 01                 a2 = a2 + 0x1
 98051: 7b 19 20                 u64 [sp + 0x20] = a2
 98054: 95 22 08                 t0 = t0 + 0x8
 98057: 7b 12 50                 u64 [sp + 0x50] = t0
 98060: c8 b3 03                 t1 = t1 + a4
 98063: 95 38 10                 a1 = t1 + 0x10
 98066: 7b 18 58                 u64 [sp + 0x58] = a1
 98069: 95 33 08                 t1 = t1 + 0x8
 98072: 33 0c 01                 a5 = 0x1
 98075: 01                       fallthrough
      :                          @7698
 98076: 33 09                    a2 = 0
 98078: 33 0b                    a4 = 0
 98080: 7b 1c 48                 u64 [sp + 0x48] = a5
 98083: 82 15 40                 s0 = u64 [sp + 0x40]
 98086: 01                       fallthrough
      :                          @7699
 98087: 82 18 60                 a1 = u64 [sp + 0x60]
 98090: 82 8c                    a5 = u64 [a1]
 98092: ae cb d0 01              jump @7755 if a4 >=u a5
      :                          @7700
 98096: aa b0 b3 01              jump @7747 if ra == a4
      :                          @7701
 98100: 82 5c                    a5 = u64 [s0]
 98102: ae c7 c9 01              jump @7758 if a0 >=u a5
      :                          @7702
 98106: 82 18 58                 a1 = u64 [sp + 0x58]
 98109: 82 8c                    a5 = u64 [a1]
 98111: ae c7 c0 01              jump @7758 if a0 >=u a5
      :                          @7703
 98115: 82 18 50                 a1 = u64 [sp + 0x50]
 98118: 82 8c                    a5 = u64 [a1]
 98120: c8 9c 0c                 a5 = a5 + a2
 98123: 82 54 f8                 t2 = u64 [s0 + 0xfffffffffffffff8]
 98126: 82 cc                    a5 = u64 [a5]
 98128: 64 62                    t0 = s1
 98130: 82 36                    s1 = u64 [t1]
 98132: 97 7a 03                 a3 = a0 << 0x3
 98135: c8 a4 04                 t2 = t2 + a3
 98138: 82 48                    a1 = u64 [t2]
 98140: c8 6a 0a                 a3 = a3 + s1
 98143: 82 a6                    s1 = u64 [a3]
 98145: ca c8 08                 a1 = a1 * a5
 98148: 95 bb 01                 a4 = a4 + 0x1
 98151: c8 68 08                 a1 = a1 + s1
 98154: 64 26                    s1 = t0
 98156: 7b a8                    u64 [a3] = a1
 98158: 95 55 18                 s0 = s0 + 0x18
 98161: 95 99 08                 a2 = a2 + 0x8
 98164: ab b2 b3                 jump @7699 if t0 != a4
      :                          @7704
 98167: 82 18 48                 a1 = u64 [sp + 0x48]
 98170: d8 68 0c                 a5 = a1 <u s1
 98173: c8 8c 0c                 a5 = a5 + a1
 98176: 64 87                    a0 = a1
 98178: ac 68 9a                 jump @7698 if a1 <u s1
      :                          @7705
 98181: 82 18 18                 a1 = u64 [sp + 0x18]
 98184: 82 19 20                 a2 = u64 [sp + 0x20]
 98187: 82 1a 10                 a3 = u64 [sp + 0x10]
 98190: 82 1b 08                 a4 = u64 [sp + 0x8]
 98193: ab 69 5d ff              jump @7696 if a2 != s1
      :                          @7706
 98197: 82 1b                    a4 = u64 [sp]
 98199: 28 18                    jump @7708
      :                          @7707
 98201: 64 62                    t0 = s1
 98203: 49 11 68                 u64 [sp + 104] = 0
 98206: 82 97 08                 a0 = u64 [a2 + 0x8]
 98209: 7b 17 38                 u64 [sp + 0x38] = a0
 98212: 82 90 10                 ra = u64 [a2 + 0x10]
 98215: 49 11 70 08              u64 [sp + 112] = 0x8
 98219: 49 11 78                 u64 [sp + 120] = 0
 98222: 01                       fallthrough
      :                          @7708
 98223: 82 17 78                 a0 = u64 [sp + 0x78]
 98226: 82 18 70                 a1 = u64 [sp + 0x70]
 98229: 82 1a 68                 a3 = u64 [sp + 0x68]
 98232: 7b b7 10                 u64 [a4 + 0x10] = a0
 98235: 7b b8 08                 u64 [a4 + 0x8] = a1
 98238: 7b ba                    u64 [a4] = a3
 98240: 51 00 53                 jump @7720 if ra == 0
      :                          @7709
 98243: 64 03                    t1 = ra
 98245: 33 08                    a1 = 0
 98247: 33 04 18                 t2 = 0x18
 98250: 33 0a c0 22 03           a3 = 0x322c0
 98255: 95 aa 00 00 01           a3 = a3 + 0x10000
 98260: 33 09 00 20              a2 = 0x2000
 98264: 28 08                    jump @7711
      :                          @7710
 98266: 95 88 01                 a1 = a1 + 0x1
 98269: aa 38 36                 jump @7720 if a1 == t1
      :                          @7711
 98272: ca 48 0c                 a5 = a1 * t2
 98275: 82 17 38                 a0 = u64 [sp + 0x38]
 98278: c8 7c 0c                 a5 = a5 + a0
 98281: 82 c5                    s0 = u64 [a5]
 98283: 51 05 ef                 jump @7710 if s0 == 0
      :                          @7712
 98286: ac 59 ec                 jump @7710 if a2 <u s0
      :                          @7713
 98289: 82 cc 08                 a5 = u64 [a5 + 0x8]
 98292: 97 50 03                 ra = s0 << 0x3
 98295: 01                       fallthrough
      :                          @7714
 98296: 82 ab                    a4 = u64 [a3]
 98298: c9 ba 07                 a0 = a3 - a4
 98301: ab c7 dd                 jump @7710 if a0 != a5
      :                          @7715
 98304: c9 0b 07                 a0 = a4 - ra
 98307: 01                       fallthrough
      :                          @7716
 98308: 82 a6                    s1 = u64 [a3]
 98310: ab b6 f2                 jump @7714 if s1 != a4
      :                          @7717
 98313: 7b a7                    u64 [a3] = a0
 98315: 33 05                    s0 = 0
 98317: 01                       fallthrough
      :                          @7718
 98318: ab b6 ea                 jump @7714 if s1 != a4
      :                          @7719
 98321: 28 c9                    jump @7710
      :                          @7720
 98323: 82 17 28                 a0 = u64 [sp + 0x28]
 98326: 82 77                    a0 = u64 [a0]
 98328: 51 07 2f                 jump @7727 if a0 == 0
      :                          @7721
 98331: 56 27 aa 0a 2c           jump @7727 if a0 >u 2730
      :                          @7722
 98336: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
 98339: 33 08 c0 22 03           a1 = 0x322c0
 98344: 95 88 00 00 01           a1 = a1 + 0x10000
 98349: 01                       fallthrough
      :                          @7723
 98350: 82 89                    a2 = u64 [a1]
 98352: c9 98 0a                 a3 = a1 - a2
 98355: 82 1b 38                 a4 = u64 [sp + 0x38]
 98358: ab ba 11                 jump @7727 if a3 != a4
      :                          @7724
 98361: c8 79 0a                 a3 = a2 + a0
 98364: 01                       fallthrough
      :                          @7725
 98365: 82 8b                    a4 = u64 [a1]
 98367: ab 9b ef                 jump @7723 if a4 != a2
      :                          @7726
 98370: 7b 8a                    u64 [a1] = a3
 98372: 33 0c                    a5 = 0
 98374: 01                       fallthrough
      :                          @7727
 98375: 82 17 30                 a0 = u64 [sp + 0x30]
 98378: 82 74 08                 t2 = u64 [a0 + 0x8]
 98381: 51 02 51                 jump @7739 if t0 == 0
      :                          @7728
 98384: 33 08                    a1 = 0
 98386: 33 03 18                 t1 = 0x18
 98389: 33 0a c0 22 03           a3 = 0x322c0
 98394: 33 0b 00 00 01           a4 = 0x10000
 98399: c8 ba 06                 s1 = a3 + a4
 98402: 33 00 00 20              ra = 0x2000
 98406: 28 08                    jump @7730
      :                          @7729
 98408: 95 88 01                 a1 = a1 + 0x1
 98411: aa 28 33                 jump @7739 if a1 == t0
      :                          @7730
 98414: ca 38 0c                 a5 = a1 * t1
 98417: c8 4c 0c                 a5 = a5 + t2
 98420: 82 c5                    s0 = u64 [a5]
 98422: 51 05 f2                 jump @7729 if s0 == 0
      :                          @7731
 98425: ac 50 ef                 jump @7729 if ra <u s0
      :                          @7732
 98428: 82 cc 08                 a5 = u64 [a5 + 0x8]
 98431: 97 55 03                 s0 = s0 << 0x3
 98434: 01                       fallthrough
      :                          @7733
 98435: 82 6b                    a4 = u64 [s1]
 98437: c9 b6 0a                 a3 = s1 - a4
 98440: ab ca e0                 jump @7729 if a3 != a5
      :                          @7734
 98443: c9 5b 0a                 a3 = a4 - s0
 98446: 01                       fallthrough
      :                          @7735
 98447: 82 69                    a2 = u64 [s1]
 98449: ab b9 f2                 jump @7733 if a2 != a4
      :                          @7736
 98452: 7b 6a                    u64 [s1] = a3
 98454: 33 07                    a0 = 0
 98456: 01                       fallthrough
      :                          @7737
 98457: ab b9 ea                 jump @7733 if a2 != a4
      :                          @7738
 98460: 28 cc                    jump @7729
      :                          @7739
 98462: 82 17 30                 a0 = u64 [sp + 0x30]
 98465: 82 78                    a1 = u64 [a0]
 98467: 51 08 2e                 jump @7746 if a1 == 0
      :                          @7740
 98470: 33 07 aa 0a              a0 = 0xaaa
 98474: ac 87 27                 jump @7746 if a0 <u a1
      :                          @7741
 98477: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 98480: 33 09 c0 22 03           a2 = 0x322c0
 98485: 95 99 00 00 01           a2 = a2 + 0x10000
 98490: 01                       fallthrough
      :                          @7742
 98491: 82 9a                    a3 = u64 [a2]
 98493: c9 a9 07                 a0 = a2 - a3
 98496: ab 47 11                 jump @7746 if a0 != t2
      :                          @7743
 98499: c8 8a 07                 a0 = a3 + a1
 98502: 01                       fallthrough
      :                          @7744
 98503: 82 9b                    a4 = u64 [a2]
 98505: ab ab f2                 jump @7742 if a4 != a3
      :                          @7745
 98508: 7b 97                    u64 [a2] = a0
 98510: 33 0c                    a5 = 0
 98512: 01                       fallthrough
      :                          @7746
 98513: 82 10 a8 00              ra = u64 [sp + 0xa8]
 98517: 82 15 a0 00              s0 = u64 [sp + 0xa0]
 98521: 82 16 98 00              s1 = u64 [sp + 0x98]
 98525: 95 11 b0 00              sp = sp + 0xb0
 98529: 32 00                    ret
      :                          @7747
 98531: 00                       trap
      :                          @7748
 98532: 82 17 60                 a0 = u64 [sp + 0x60]
 98535: 82 77                    a0 = u64 [a0]
 98537: 51 07 12                 jump @7754 if a0 == 0
      :                          @7749
 98540: 51 00 11                 jump @7756 if ra == 0
      :                          @7750
 98543: 82 17 38                 a0 = u64 [sp + 0x38]
 98546: 82 77 10                 a0 = u64 [a0 + 0x10]
 98549: 51 07 09                 jump @7757 if a0 == 0
      :                          @7751
 98552: 00                       trap
      :                          @7752
 98553: 00                       trap
      :                          @7753
 98554: 00                       trap
      :                          @7754
 98555: 00                       trap
      :                          @7755
 98556: 00                       trap
      :                          @7756
 98557: 00                       trap
      :                          @7757
 98558: 00                       trap
      :                          @7758
 98559: 00                       trap
      :                          @7759 [@dyn 577]
 98560: 82 18 18                 a1 = u64 [sp + 0x18]
 98563: 82 17 20                 a0 = u64 [sp + 0x20]
 98566: 7b 17                    u64 [sp] = a0
 98568: 82 17 28                 a0 = u64 [sp + 0x28]
 98571: 7b 17 08                 u64 [sp + 0x8] = a0
 98574: 95 17 18                 a0 = sp + 0x18
 98577: 64 59                    a2 = s0
 98579: 50 20 84 04 10 0a ff     ra = 1156, jump @2409
      :                          @7760 [@dyn 578]
 98586: 82 18 18                 a1 = u64 [sp + 0x18]
 98589: 51 08 37                 jump @7763 if a1 == 0
      :                          @7761
 98592: cc 86 07                 a0 = s1 /s a1
 98595: ca 87 08                 a1 = a0 * a1
 98598: ab 68 31                 jump @7764 if a1 != s1
      :                          @7762
 98601: 82 18 20                 a1 = u64 [sp + 0x20]
 98604: 82 19 28                 a2 = u64 [sp + 0x28]
 98607: 82 1a                    a3 = u64 [sp]
 98609: ca a8 0a                 a3 = a1 * a3
 98612: ca 7a 0a                 a3 = a3 * a0
 98615: 82 1b 08                 a4 = u64 [sp + 0x8]
 98618: ca b8 08                 a1 = a1 * a4
 98621: ca 78 08                 a1 = a1 * a0
 98624: ca 97 07                 a0 = a0 * a2
 98627: 82 19 10                 a2 = u64 [sp + 0x10]
 98630: 7b 9a 08                 u64 [a2 + 0x8] = a3
 98633: 7b 98 10                 u64 [a2 + 0x10] = a1
 98636: 7b 97 18                 u64 [a2 + 0x18] = a0
 98639: 33 07 01                 a0 = 0x1
 98642: 28 1c                    jump @7766
      :                          @7763
 98644: 51 06 0a                 jump @7765 if s1 == 0
      :                          @7764
 98647: 33 07                    a0 = 0
 98649: 82 19 10                 a2 = u64 [sp + 0x10]
 98652: 28 12                    jump @7766
      :                          @7765
 98654: 82 19 10                 a2 = u64 [sp + 0x10]
 98657: 49 19 18                 u64 [a2 + 24] = 0
 98660: 49 19 10                 u64 [a2 + 16] = 0
 98663: 49 19 08                 u64 [a2 + 8] = 0
 98666: 33 07 01                 a0 = 0x1
 98669: 01                       fallthrough
      :                          @7766
 98670: 7b 97                    u64 [a2] = a0
 98672: 82 10 40                 ra = u64 [sp + 0x40]
 98675: 82 15 38                 s0 = u64 [sp + 0x38]
 98678: 82 16 30                 s1 = u64 [sp + 0x30]
 98681: 95 11 48                 sp = sp + 0x48
 98684: 32 00                    ret
      :                          @7767
 98686: 82 9a                    a3 = u64 [a2]
 98688: 95 ab 08                 a4 = a3 + 0x8
 98691: ac ab ed 06              jump @7890 if a4 <u a3
      :                          @7768
 98695: 95 b8 08                 a1 = a4 + 0x8
 98698: d8 b8 0c                 a5 = a1 <u a4
 98701: d8 82 08                 a1 = t0 <u a1
 98704: d4 c8 08                 a1 = a1 | a5
 98707: 52 08 dd 06              jump @7890 if a1 != 0
      :                          @7769
 98711: c9 b3 08                 a1 = t1 - a4
 98714: c8 28 08                 a1 = a1 + t0
 98717: 84 8c 07                 a5 = a1 & 0x7
 98720: c8 cb 0b                 a4 = a4 + a5
 98723: 01                       fallthrough
      :                          @7770
 98724: 82 95                    s0 = u64 [a2]
 98726: ab a5 d8                 jump @7767 if s0 != a3
      :                          @7771
 98729: 7b 9b                    u64 [a2] = a4
 98731: 33 06                    s1 = 0
 98733: 7b 17                    u64 [sp] = a0
 98735: c9 c8 05                 s0 = a1 - a5
 98738: 49 05                    u64 [s0 + 0] = 0
 98740: 95 17 b8 00              a0 = sp + 0xb8
 98744: 33 08                    a1 = 0
 98746: 50 20 86 04 c6 d2 fe     ra = 1158, jump @1617
      :                          @7772 [@dyn 579]
 98753: 82 12 c8 00              t0 = u64 [sp + 0xc8]
 98757: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 98761: 97 27 05                 a0 = t0 << 0x5
 98764: 7b 18 88 00              u64 [sp + 0x88] = a1
 98768: c8 87 07                 a0 = a0 + a1
 98771: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 98774: 49 17 08 01              u64 [a0 + 8] = 0x1
 98778: 7b 75 10                 u64 [a0 + 0x10] = s0
 98781: 49 17 18 01              u64 [a0 + 24] = 0x1
 98785: 95 2c 01                 a5 = t0 + 0x1
 98788: 7b 1c c8 00              u64 [sp + 0xc8] = a5
 98792: 82 19 98 00              a2 = u64 [sp + 0x98]
 98796: 82 97 10                 a0 = u64 [a2 + 0x10]
 98799: 7b 17 10                 u64 [sp + 0x10] = a0
 98802: 82 97 08                 a0 = u64 [a2 + 0x8]
 98805: 7b 17 08                 u64 [sp + 0x8] = a0
 98808: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 98818: 7b 18 18                 u64 [sp + 0x18] = a1
 98821: 33 02 c0 22 03           t0 = 0x322c0
 98826: 33 04 00 00 01           t2 = 0x10000
 98831: c8 42 03                 t1 = t0 + t2
 98834: 7b 12 38                 u64 [sp + 0x38] = t0
 98837: 7b 13 30                 u64 [sp + 0x30] = t1
 98840: 28 0a                    jump @7774
      :                          @7773
 98842: 82 1c c8 00              a5 = u64 [sp + 0xc8]
 98846: 51 0c 52 05              jump @7859 if a5 == 0
      :                          @7774
 98850: 95 c7 ff                 a0 = a5 + 0xffffffffffffffff
 98853: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 98857: 97 7a 05                 a3 = a0 << 0x5
 98860: 82 18 88 00              a1 = u64 [sp + 0x88]
 98864: c8 8a 0a                 a3 = a3 + a1
 98867: 82 a8 08                 a1 = u64 [a3 + 0x8]
 98870: 82 19 18                 a2 = u64 [sp + 0x18]
 98873: aa 98 86 05              jump @7867 if a1 == a2
      :                          @7775
 98877: 82 a9                    a2 = u64 [a3]
 98879: 51 07 85 00              jump @7780 if a0 == 0
      :                          @7776
 98883: 95 aa 10                 a3 = a3 + 0x10
 98886: 82 16 88 00              s1 = u64 [sp + 0x88]
 98890: 82 6b                    a4 = u64 [s1]
 98892: 7b 1b 48                 u64 [sp + 0x48] = a4
 98895: 82 6b 08                 a4 = u64 [s1 + 0x8]
 98898: 7b 1b 20                 u64 [sp + 0x20] = a4
 98901: 7b 69                    u64 [s1] = a2
 98903: 7b 68 08                 u64 [s1 + 0x8] = a1
 98906: 82 a8 08                 a1 = u64 [a3 + 0x8]
 98909: 82 69 18                 a2 = u64 [s1 + 0x18]
 98912: 7b 19 50                 u64 [sp + 0x50] = a2
 98915: 82 a9                    a2 = u64 [a3]
 98917: 7b 68 18                 u64 [s1 + 0x18] = a1
 98920: 82 68 18                 a1 = u64 [s1 + 0x18]
 98923: 82 6a 10                 a3 = u64 [s1 + 0x10]
 98926: 7b 1a 60                 u64 [sp + 0x60] = a3
 98929: 7b 69 10                 u64 [s1 + 0x10] = a2
 98932: 7b 18 e8 00              u64 [sp + 0xe8] = a1
 98936: 82 68 10                 a1 = u64 [s1 + 0x10]
 98939: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 98943: 82 68 08                 a1 = u64 [s1 + 0x8]
 98946: 7b 18 d8 00              u64 [sp + 0xd8] = a1
 98950: 82 68                    a1 = u64 [s1]
 98952: 7b 18 d0 00              u64 [sp + 0xd0] = a1
 98956: 64 c2                    t0 = a5
 98958: 55 1c 04 42              jump @7781 if a5 >=u 4
      :                          @7777
 98962: 33 0b                    a4 = 0
 98964: 33 07 01                 a0 = 0x1
 98967: 01                       fallthrough
      :                          @7778
 98968: 95 22 fe                 t0 = t0 + 0xfffffffffffffffe
 98971: ab 27 db 00              jump @7791 if a0 != t0
      :                          @7779
 98975: 97 78 05                 a1 = a0 << 0x5
 98978: c8 68 08                 a1 = a1 + s1
 98981: 82 89 18                 a2 = u64 [a1 + 0x18]
 98984: 97 bb 05                 a4 = a4 << 0x5
 98987: c8 6b 0b                 a4 = a4 + s1
 98990: 7b b9 18                 u64 [a4 + 0x18] = a2
 98993: 82 89 10                 a2 = u64 [a1 + 0x10]
 98996: 7b b9 10                 u64 [a4 + 0x10] = a2
 98999: 82 89 08                 a2 = u64 [a1 + 0x8]
 99002: 7b b9 08                 u64 [a4 + 0x8] = a2
 99005: 82 88                    a1 = u64 [a1]
 99007: 7b b8                    u64 [a4] = a1
 99009: 28 b8 00                 jump @7792
      :                          @7780
 99012: 82 ab 10                 a4 = u64 [a3 + 0x10]
 99015: 82 ac 18                 a5 = u64 [a3 + 0x18]
 99018: 7b 19 48                 u64 [sp + 0x48] = a2
 99021: 28 af 01                 jump @7806
      :                          @7781
 99024: 33 0a                    a3 = 0
 99026: 33 08 02                 a1 = 0x2
 99029: e4 87 03                 t1 = maxu(a0, a1)
 99032: 95 33 fe                 t1 = t1 + 0xfffffffffffffffe
 99035: 33 07 01                 a0 = 0x1
 99038: 28 36                    jump @7784
      :                          @7782
 99040: d8 cb 0b                 a4 = a4 <u a5
 99043: 01                       fallthrough
      :                          @7783
 99044: c8 7b 0b                 a4 = a4 + a0
 99047: 97 b7 05                 a0 = a4 << 0x5
 99050: c8 67 07                 a0 = a0 + s1
 99053: 82 78 18                 a1 = u64 [a0 + 0x18]
 99056: 97 aa 05                 a3 = a3 << 0x5
 99059: c8 6a 0a                 a3 = a3 + s1
 99062: 7b a8 18                 u64 [a3 + 0x18] = a1
 99065: 82 78 10                 a1 = u64 [a0 + 0x10]
 99068: 7b a8 10                 u64 [a3 + 0x10] = a1
 99071: 82 78 08                 a1 = u64 [a0 + 0x8]
 99074: 7b a8 08                 u64 [a3 + 0x8] = a1
 99077: 82 78                    a1 = u64 [a0]
 99079: 97 b7 01                 a0 = a4 << 0x1
 99082: 95 77 01                 a0 = a0 + 0x1
 99085: 7b a8                    u64 [a3] = a1
 99087: 64 ba                    a3 = a4
 99089: ac 73 87                 jump @7778 if t1 <u a0
      :                          @7784
 99092: 97 78 05                 a1 = a0 << 0x5
 99095: c8 68 08                 a1 = a1 + s1
 99098: 95 79 01                 a2 = a0 + 0x1
 99101: 97 99 05                 a2 = a2 << 0x5
 99104: c8 69 09                 a2 = a2 + s1
 99107: 82 8b                    a4 = u64 [a1]
 99109: 82 9c                    a5 = u64 [a2]
 99111: ab cb b9                 jump @7782 if a4 != a5
      :                          @7785
 99114: 82 84 18                 t2 = u64 [a1 + 0x18]
 99117: 82 90 18                 ra = u64 [a2 + 0x18]
 99120: 82 88 10                 a1 = u64 [a1 + 0x10]
 99123: 82 95 10                 s0 = u64 [a2 + 0x10]
 99126: e6 04 06                 s1 = minu(t2, ra)
 99129: 95 66 01                 s1 = s1 + 0x1
 99132: 01                       fallthrough
      :                          @7786
 99133: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 99136: 51 06 1d                 jump @7789 if s1 == 0
      :                          @7787
 99139: 82 89                    a2 = u64 [a1]
 99141: 82 5b                    a4 = u64 [s0]
 99143: 95 88 08                 a1 = a1 + 0x8
 99146: 95 55 08                 s0 = s0 + 0x8
 99149: d8 b9 0c                 a5 = a2 <u a4
 99152: d3 b9 09                 a2 = a2 ^ a4
 99155: 8e 99                    a2 = a2 >u 0
 99157: 94 c9 ff                 a2 = 0xffffffffffffffff if a5 != 0
 99160: 51 09 e5                 jump @7786 if a2 == 0
      :                          @7788
 99163: 28 0e                    jump @7790
      :                          @7789
 99165: d8 04 08                 a1 = t2 <u ra
 99168: d3 04 0b                 a4 = t2 ^ ra
 99171: 8e b9                    a2 = a4 >u 0
 99173: 94 89 ff                 a2 = 0xffffffffffffffff if a1 != 0
 99176: 01                       fallthrough
      :                          @7790
 99177: 95 99 01                 a2 = a2 + 0x1
 99180: 88 9b 02                 a4 = a2 <u 0x2
 99183: 82 16 88 00              s1 = u64 [sp + 0x88]
 99187: 28 71 ff                 jump @7783
      :                          @7791
 99190: 64 b7                    a0 = a4
 99192: 01                       fallthrough
      :                          @7792
 99193: 82 19 e8 00              a2 = u64 [sp + 0xe8]
 99197: 97 78 05                 a1 = a0 << 0x5
 99200: c8 68 08                 a1 = a1 + s1
 99203: 7b 19 98 00              u64 [sp + 0x98] = a2
 99207: 7b 89 18                 u64 [a1 + 0x18] = a2
 99210: 82 19 e0 00              a2 = u64 [sp + 0xe0]
 99214: 7b 19 90 00              u64 [sp + 0x90] = a2
 99218: 7b 89 10                 u64 [a1 + 0x10] = a2
 99221: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 99225: 7b 19 78                 u64 [sp + 0x78] = a2
 99228: 7b 89 08                 u64 [a1 + 0x8] = a2
 99231: 82 19 d0 00              a2 = u64 [sp + 0xd0]
 99235: 7b 89                    u64 [a1] = a2
 99237: 51 07 9d 00              jump @7804 if a0 == 0
      :                          @7793
 99241: 7b 19 80 00              u64 [sp + 0x80] = a2
 99245: 28 28                    jump @7796
      :                          @7794
 99247: ac 89 8f 00              jump @7803 if a2 <u a1
      :                          @7795
 99251: 82 58 18                 a1 = u64 [s0 + 0x18]
 99254: 97 77 05                 a0 = a0 << 0x5
 99257: c8 67 07                 a0 = a0 + s1
 99260: 7b 78 18                 u64 [a0 + 0x18] = a1
 99263: 82 58 10                 a1 = u64 [s0 + 0x10]
 99266: 7b 78 10                 u64 [a0 + 0x10] = a1
 99269: 82 58 08                 a1 = u64 [s0 + 0x8]
 99272: 7b 78 08                 u64 [a0 + 0x8] = a1
 99275: 82 58                    a1 = u64 [s0]
 99277: 7b 78                    u64 [a0] = a1
 99279: 64 47                    a0 = t2
 99281: 54 1c 01 74              jump @7805 if a5 <=u 1
      :                          @7796
 99285: 95 7c ff                 a5 = a0 + 0xffffffffffffffff
 99288: 98 c4 01                 t2 = a5 >> 0x1
 99291: 97 45 05                 s0 = t2 << 0x5
 99294: c8 65 05                 s0 = s0 + s1
 99297: 82 58                    a1 = u64 [s0]
 99299: ab 89 cc                 jump @7794 if a2 != a1
      :                          @7797
 99302: 82 53 18                 t1 = u64 [s0 + 0x18]
 99305: 82 58 10                 a1 = u64 [s0 + 0x10]
 99308: 82 19 98 00              a2 = u64 [sp + 0x98]
 99312: e6 39 09                 a2 = minu(a2, t1)
 99315: 95 99 01                 a2 = a2 + 0x1
 99318: 82 1b 90 00              a4 = u64 [sp + 0x90]
 99322: 01                       fallthrough
      :                          @7798
 99323: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 99326: 51 09 20                 jump @7801 if a2 == 0
      :                          @7799
 99329: 82 ba                    a3 = u64 [a4]
 99331: 82 86                    s1 = u64 [a1]
 99333: 95 bb 08                 a4 = a4 + 0x8
 99336: 95 88 08                 a1 = a1 + 0x8
 99339: d8 6a 00                 ra = a3 <u s1
 99342: d3 6a 0a                 a3 = a3 ^ s1
 99345: 8e a2                    t0 = a3 >u 0
 99347: 33 0a ff                 a3 = 0xffffffffffffffff
 99350: db 0a 02                 t0 = a3 if ra != 0
 99353: 51 02 e2                 jump @7798 if t0 == 0
      :                          @7800
 99356: 28 12                    jump @7802
      :                          @7801
 99358: 82 19 98 00              a2 = u64 [sp + 0x98]
 99362: d8 39 08                 a1 = a2 <u t1
 99365: d3 39 09                 a2 = a2 ^ t1
 99368: 8e 92                    t0 = a2 >u 0
 99370: 94 82 ff                 t0 = 0xffffffffffffffff if a1 != 0
 99373: 01                       fallthrough
      :                          @7802
 99374: 95 22 01                 t0 = t0 + 0x1
 99377: 82 16 88 00              s1 = u64 [sp + 0x88]
 99381: 82 19 80 00              a2 = u64 [sp + 0x80]
 99385: 55 12 02 7a ff           jump @7795 if t0 >=u 2
      :                          @7803
 99390: 64 74                    t2 = a0
 99392: 28 05                    jump @7805
      :                          @7804
 99394: 33 04                    t2 = 0
 99396: 01                       fallthrough
      :                          @7805
 99397: 97 44 05                 t2 = t2 << 0x5
 99400: c8 64 04                 t2 = t2 + s1
 99403: 7b 49                    u64 [t2] = a2
 99405: 82 17 78                 a0 = u64 [sp + 0x78]
 99408: 7b 47 08                 u64 [t2 + 0x8] = a0
 99411: 82 17 90 00              a0 = u64 [sp + 0x90]
 99415: 7b 47 10                 u64 [t2 + 0x10] = a0
 99418: 82 17 98 00              a0 = u64 [sp + 0x98]
 99422: 7b 47 18                 u64 [t2 + 0x18] = a0
 99425: 82 17 18                 a0 = u64 [sp + 0x18]
 99428: 82 12 38                 t0 = u64 [sp + 0x38]
 99431: 33 04 00 00 01           t2 = 0x10000
 99436: 82 13 30                 t1 = u64 [sp + 0x30]
 99439: 82 1b 60                 a4 = u64 [sp + 0x60]
 99442: 82 18 20                 a1 = u64 [sp + 0x20]
 99445: 82 1c 50                 a5 = u64 [sp + 0x50]
 99448: aa 78 47 03              jump @7867 if a1 == a0
      :                          @7806
 99452: 7b 18 20                 u64 [sp + 0x20] = a1
 99455: 88 c7 01                 a0 = a5 <u 0x1
 99458: 88 b8 01                 a1 = a4 <u 0x1
 99461: d4 87 07                 a0 = a0 | a1
 99464: 52 07 e9 03              jump @7891 if a0 != 0
      :                          @7807
 99468: 97 c0 03                 ra = a5 << 0x3
 99471: 7b 1b 60                 u64 [sp + 0x60] = a4
 99474: c8 b0 07                 a0 = ra + a4
 99477: 82 75 f8                 s0 = u64 [a0 + 0xfffffffffffffff8]
 99480: 7b 1c 50                 u64 [sp + 0x50] = a5
 99483: 7b 10 78                 u64 [sp + 0x78] = ra
 99486: 52 15 05 4e              jump @7812 if s0 != 5
      :                          @7808
 99490: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 99494: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 99498: ab 78 24                 jump @7811 if a1 != a0
      :                          @7809
 99501: 95 17 a0 00              a0 = sp + 0xa0
 99505: 50 20 88 04 56 ce fe     ra = 1160, jump @1581
      :                          @7810 [@dyn 580]
 99512: 82 10 78                 ra = u64 [sp + 0x78]
 99515: 82 1c 50                 a5 = u64 [sp + 0x50]
 99518: 82 13 30                 t1 = u64 [sp + 0x30]
 99521: 33 04 00 00 01           t2 = 0x10000
 99526: 82 12 38                 t0 = u64 [sp + 0x38]
 99529: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 99533: 01                       fallthrough
      :                          @7811
 99534: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 99538: 82 19 48                 a2 = u64 [sp + 0x48]
 99541: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
 99544: 97 8a 03                 a3 = a1 << 0x3
 99547: c8 a7 07                 a0 = a0 + a3
 99550: 7b 79                    u64 [a0] = a2
 99552: 95 88 01                 a1 = a1 + 0x1
 99555: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 99559: 55 18 03 a6 02           jump @7860 if a1 >=u 3
      :                          @7812
 99564: 82 17 10                 a0 = u64 [sp + 0x10]
 99567: ae 75 7e 03              jump @7887 if s0 >=u a0
      :                          @7813
 99571: 96 57 18                 a0 = s0 * 0x18
 99574: 82 18 08                 a1 = u64 [sp + 0x8]
 99577: c8 87 07                 a0 = a0 + a1
 99580: 82 78 10                 a1 = u64 [a0 + 0x10]
 99583: 51 08 40 02              jump @7850 if a1 == 0
      :                          @7814
 99587: 82 75 08                 s0 = u64 [a0 + 0x8]
 99590: 97 88 04                 a1 = a1 << 0x4
 99593: 98 c7 3c                 a0 = a5 >> 0x3c
 99596: c8 58 08                 a1 = a1 + s0
 99599: 7b 18 40                 u64 [sp + 0x40] = a1
 99602: 52 07 0a 02              jump @7845 if a0 != 0
      :                          @7815
 99606: 88 77 01                 a0 = a0 <u 0x1
 99609: 97 76 03                 s1 = a0 << 0x3
 99612: 97 cc 03                 a5 = a5 << 0x3
 99615: 82 1a 40                 a3 = u64 [sp + 0x40]
 99618: 7b 16 98 00              u64 [sp + 0x98] = s1
 99622: 7b 1c 28                 u64 [sp + 0x28] = a5
 99625: 28 41                    jump @7819
      :                          @7816
 99627: 33 04                    t2 = 0
 99629: 82 10 78                 ra = u64 [sp + 0x78]
 99632: 82 16 98 00              s1 = u64 [sp + 0x98]
 99636: 01                       fallthrough
      :                          @7817
 99637: 97 44 05                 t2 = t2 << 0x5
 99640: c8 a4 04                 t2 = t2 + a3
 99643: 7b 49                    u64 [t2] = a2
 99645: 82 17 58                 a0 = u64 [sp + 0x58]
 99648: 7b 47 08                 u64 [t2 + 0x8] = a0
 99651: 82 17 80 00              a0 = u64 [sp + 0x80]
 99655: 7b 47 10                 u64 [t2 + 0x10] = a0
 99658: 82 17 90 00              a0 = u64 [sp + 0x90]
 99662: 7b 47 18                 u64 [t2 + 0x18] = a0
 99665: 82 12 38                 t0 = u64 [sp + 0x38]
 99668: 33 04 00 00 01           t2 = 0x10000
 99673: 82 13 30                 t1 = u64 [sp + 0x30]
 99676: 82 1a 40                 a3 = u64 [sp + 0x40]
 99679: 82 1c 28                 a5 = u64 [sp + 0x28]
 99682: 01                       fallthrough
      :                          @7818
 99683: 82 15 68                 s0 = u64 [sp + 0x68]
 99686: aa a5 d9 01              jump @7850 if s0 == a3
      :                          @7819
 99690: 64 57                    a0 = s0
 99692: 82 55                    s0 = u64 [s0]
 99694: 82 7b 08                 a4 = u64 [a0 + 0x8]
 99697: 95 77 10                 a0 = a0 + 0x10
 99700: 7b 17 68                 u64 [sp + 0x68] = a0
 99703: 64 c7                    a0 = a5
 99705: 82 18 60                 a1 = u64 [sp + 0x60]
 99708: 01                       fallthrough
      :                          @7820
 99709: 51 07 10                 jump @7823 if a0 == 0
      :                          @7821
 99712: 82 89                    a2 = u64 [a1]
 99714: 95 88 08                 a1 = a1 + 0x8
 99717: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
 99720: ab 59 f5                 jump @7820 if a2 != s0
      :                          @7822
 99723: 28 d8                    jump @7818
      :                          @7823
 99725: 7b 1b 90 00              u64 [sp + 0x90] = a4
 99729: 01                       fallthrough
      :                          @7824
 99730: 82 37                    a0 = u64 [t1]
 99732: c8 07 08                 a1 = a0 + ra
 99735: ac 78 d7 02              jump @7888 if a1 <u a0
      :                          @7825
 99739: c8 68 09                 a2 = a1 + s1
 99742: d8 89 0a                 a3 = a2 <u a1
 99745: d8 94 09                 a2 = t2 <u a2
 99748: d4 a9 09                 a2 = a2 | a3
 99751: 52 09 c7 02              jump @7888 if a2 != 0
      :                          @7826
 99755: c9 82 09                 a2 = t0 - a1
 99758: c8 49 09                 a2 = a2 + t2
 99761: 84 9a 07                 a3 = a2 & 0x7
 99764: c8 a8 08                 a1 = a1 + a3
 99767: 01                       fallthrough
      :                          @7827
 99768: 82 3b                    a4 = u64 [t1]
 99770: ab 7b d8                 jump @7824 if a4 != a0
      :                          @7828
 99773: 7b 38                    u64 [t1] = a1
 99775: 33 0c                    a5 = 0
 99777: c9 a9 06                 s1 = a2 - a3
 99780: 64 67                    a0 = s1
 99782: 82 18 60                 a1 = u64 [sp + 0x60]
 99785: 64 09                    a2 = ra
 99787: 50 20 8a 04 61 83 01     ra = 1162, jump @13621
      :                          @7829 [@dyn 581]
 99794: 82 18 50                 a1 = u64 [sp + 0x50]
 99797: 7b 18 d0 00              u64 [sp + 0xd0] = a1
 99801: 7b 16 d8 00              u64 [sp + 0xd8] = s1
 99805: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 99809: 95 17 d0 00              a0 = sp + 0xd0
 99813: 50 20 8c 04 22 cd fe     ra = 1164, jump @1581
      :                          @7830 [@dyn 582]
 99820: 82 17 e0 00              a0 = u64 [sp + 0xe0]
 99824: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 99828: 97 79 03                 a2 = a0 << 0x3
 99831: c8 98 08                 a1 = a1 + a2
 99834: 7b 85                    u64 [a1] = s0
 99836: 82 15 c8 00              s0 = u64 [sp + 0xc8]
 99840: 82 18 b8 00              a1 = u64 [sp + 0xb8]
 99844: 95 77 01                 a0 = a0 + 0x1
 99847: 7b 17 e0 00              u64 [sp + 0xe0] = a0
 99851: 64 57                    a0 = s0
 99853: ab 85 15                 jump @7833 if s0 != a1
      :                          @7831
 99856: 95 17 b8 00              a0 = sp + 0xb8
 99860: 64 58                    a1 = s0
 99862: 50 20 8e 04 6a ce fe     ra = 1166, jump @1617
      :                          @7832 [@dyn 583]
 99869: 82 17 c8 00              a0 = u64 [sp + 0xc8]
 99873: 01                       fallthrough
      :                          @7833
 99874: 82 1a c0 00              a3 = u64 [sp + 0xc0]
 99878: 82 18 48                 a1 = u64 [sp + 0x48]
 99881: 82 19 90 00              a2 = u64 [sp + 0x90]
 99885: c9 98 08                 a1 = a1 - a2
 99888: 97 79 05                 a2 = a0 << 0x5
 99891: c8 a9 09                 a2 = a2 + a3
 99894: 7b 98                    u64 [a2] = a1
 99896: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 99900: 7b 98 08                 u64 [a2 + 0x8] = a1
 99903: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 99907: 7b 98 10                 u64 [a2 + 0x10] = a1
 99910: 82 18 e0 00              a1 = u64 [sp + 0xe0]
 99914: 7b 98 18                 u64 [a2 + 0x18] = a1
 99917: 95 77 01                 a0 = a0 + 0x1
 99920: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 99924: 97 57 05                 a0 = s0 << 0x5
 99927: c8 a7 07                 a0 = a0 + a3
 99930: 82 79                    a2 = u64 [a0]
 99932: 82 78 08                 a1 = u64 [a0 + 0x8]
 99935: 7b 18 58                 u64 [sp + 0x58] = a1
 99938: 82 78 10                 a1 = u64 [a0 + 0x10]
 99941: 7b 18 80 00              u64 [sp + 0x80] = a1
 99945: 82 77 18                 a0 = u64 [a0 + 0x18]
 99948: 7b 17 90 00              u64 [sp + 0x90] = a0
 99952: 7b 1a 88 00              u64 [sp + 0x88] = a3
 99956: 51 05 b7 fe              jump @7816 if s0 == 0
      :                          @7834
 99960: 82 10 78                 ra = u64 [sp + 0x78]
 99963: 7b 19 70                 u64 [sp + 0x70] = a2
 99966: 28 2d                    jump @7837
      :                          @7835
 99968: ac 79 93 00              jump @7844 if a2 <u a0
      :                          @7836
 99972: 82 87 18                 a0 = u64 [a1 + 0x18]
 99975: 97 55 05                 s0 = s0 << 0x5
 99978: c8 a5 05                 s0 = s0 + a3
 99981: 7b 57 18                 u64 [s0 + 0x18] = a0
 99984: 82 87 10                 a0 = u64 [a1 + 0x10]
 99987: 7b 57 10                 u64 [s0 + 0x10] = a0
 99990: 82 87 08                 a0 = u64 [a1 + 0x8]
 99993: 7b 57 08                 u64 [s0 + 0x8] = a0
 99996: 82 87                    a0 = u64 [a1]
 99998: 7b 57                    u64 [s0] = a0
100000: 64 45                    s0 = t2
100002: 82 16 98 00              s1 = u64 [sp + 0x98]
100006: 54 1c 01 8f fe           jump @7817 if a5 <=u 1
      :                          @7837
100011: 95 5c ff                 a5 = s0 + 0xffffffffffffffff
100014: 98 c4 01                 t2 = a5 >> 0x1
100017: 97 48 05                 a1 = t2 << 0x5
100020: c8 a8 08                 a1 = a1 + a3
100023: 82 87                    a0 = u64 [a1]
100025: ab 79 c7                 jump @7835 if a2 != a0
      :                          @7838
100028: 82 83 18                 t1 = u64 [a1 + 0x18]
100031: 82 86 10                 s1 = u64 [a1 + 0x10]
100034: 82 17 90 00              a0 = u64 [sp + 0x90]
100038: e6 37 0a                 a3 = minu(a0, t1)
100041: 95 aa 01                 a3 = a3 + 0x1
100044: 82 17 80 00              a0 = u64 [sp + 0x80]
100048: 01                       fallthrough
      :                          @7839
100049: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
100052: 51 0a 1d                 jump @7842 if a3 == 0
      :                          @7840
100055: 82 79                    a2 = u64 [a0]
100057: 82 6b                    a4 = u64 [s1]
100059: 95 77 08                 a0 = a0 + 0x8
100062: 95 66 08                 s1 = s1 + 0x8
100065: d8 b9 00                 ra = a2 <u a4
100068: d3 b9 09                 a2 = a2 ^ a4
100071: 8e 92                    t0 = a2 >u 0
100073: 94 02 ff                 t0 = 0xffffffffffffffff if ra != 0
100076: 51 02 e5                 jump @7839 if t0 == 0
      :                          @7841
100079: 28 12                    jump @7843
      :                          @7842
100081: 82 19 90 00              a2 = u64 [sp + 0x90]
100085: d8 39 07                 a0 = a2 <u t1
100088: d3 39 09                 a2 = a2 ^ t1
100091: 8e 92                    t0 = a2 >u 0
100093: 94 72 ff                 t0 = 0xffffffffffffffff if a0 != 0
100096: 01                       fallthrough
      :                          @7843
100097: 95 22 01                 t0 = t0 + 0x1
100100: 82 1a 88 00              a3 = u64 [sp + 0x88]
100104: 82 10 78                 ra = u64 [sp + 0x78]
100107: 82 19 70                 a2 = u64 [sp + 0x70]
100110: 55 12 02 76 ff           jump @7836 if t0 >=u 2
      :                          @7844
100115: 64 54                    t2 = s0
100117: 82 16 98 00              s1 = u64 [sp + 0x98]
100121: 28 1c fe                 jump @7817
      :                          @7845
100124: 82 1b 60                 a4 = u64 [sp + 0x60]
100127: 82 1c 40                 a5 = u64 [sp + 0x40]
100130: 01                       fallthrough
      :                          @7846
100131: 82 57                    a0 = u64 [s0]
100133: 95 55 10                 s0 = s0 + 0x10
100136: 64 08                    a1 = ra
100138: 64 b9                    a2 = a4
100140: 01                       fallthrough
      :                          @7847
100141: 51 08 42 01              jump @7889 if a1 == 0
      :                          @7848
100145: 82 9a                    a3 = u64 [a2]
100147: 95 99 08                 a2 = a2 + 0x8
100150: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
100153: ab 7a f4                 jump @7847 if a3 != a0
      :                          @7849
100156: ab c5 e7                 jump @7846 if s0 != a5
      :                          @7850
100159: 82 1c 60                 a5 = u64 [sp + 0x60]
100162: 82 18 20                 a1 = u64 [sp + 0x20]
100165: 51 08 d5 fa              jump @7773 if a1 == 0
      :                          @7851
100169: 56 28 00 20 d1 fa        jump @7773 if a1 >u 8192
      :                          @7852
100175: 97 87 03                 a0 = a1 << 0x3
100178: 01                       fallthrough
      :                          @7853
100179: 82 38                    a1 = u64 [t1]
100181: c9 83 09                 a2 = t1 - a1
100184: ab c9 c2 fa              jump @7773 if a2 != a5
      :                          @7854
100188: c9 78 09                 a2 = a1 - a0
100191: 01                       fallthrough
      :                          @7855
100192: 82 3a                    a3 = u64 [t1]
100194: ab 8a f1                 jump @7853 if a3 != a1
      :                          @7856
100197: 7b 39                    u64 [t1] = a2
100199: 33 0b                    a4 = 0
100201: 01                       fallthrough
      :                          @7857
100202: ab 8a e9                 jump @7853 if a3 != a1
      :                          @7858
100205: 28 ad fa                 jump @7773
      :                          @7859
100208: 82 18 b0 00              a1 = u64 [sp + 0xb0]
100212: 82 19 a8 00              a2 = u64 [sp + 0xa8]
100216: 82 1a a0 00              a3 = u64 [sp + 0xa0]
100220: 82 13 c0 00              t1 = u64 [sp + 0xc0]
100224: 82 17                    a0 = u64 [sp]
100226: 7b 78 10                 u64 [a0 + 0x10] = a1
100229: 7b 79 08                 u64 [a0 + 0x8] = a2
100232: 7b 7a                    u64 [a0] = a3
100234: 28 9f 00                 jump @7879
      :                          @7860
100237: 82 16 60                 s1 = u64 [sp + 0x60]
100240: 82 18 20                 a1 = u64 [sp + 0x20]
100243: 51 08 2c                 jump @7867 if a1 == 0
      :                          @7861
100246: 56 28 00 20 29           jump @7867 if a1 >u 8192
      :                          @7862
100251: 97 87 03                 a0 = a1 << 0x3
100254: 33 08 c0 22 03           a1 = 0x322c0
100259: 95 88 00 00 01           a1 = a1 + 0x10000
100264: 01                       fallthrough
      :                          @7863
100265: 82 89                    a2 = u64 [a1]
100267: c9 98 0a                 a3 = a1 - a2
100270: ab 6a 11                 jump @7867 if a3 != s1
      :                          @7864
100273: c9 79 0a                 a3 = a2 - a0
100276: 01                       fallthrough
      :                          @7865
100277: 82 8b                    a4 = u64 [a1]
100279: ab 9b f2                 jump @7863 if a4 != a2
      :                          @7866
100282: 7b 8a                    u64 [a1] = a3
100284: 33 0c                    a5 = 0
100286: 01                       fallthrough
      :                          @7867
100287: 82 14 c8 00              t2 = u64 [sp + 0xc8]
100291: 82 19 b0 00              a2 = u64 [sp + 0xb0]
100295: 82 1a a8 00              a3 = u64 [sp + 0xa8]
100299: 82 1b a0 00              a4 = u64 [sp + 0xa0]
100303: 82 13 c0 00              t1 = u64 [sp + 0xc0]
100307: 82 17                    a0 = u64 [sp]
100309: 7b 79 10                 u64 [a0 + 0x10] = a2
100312: 7b 7a 08                 u64 [a0 + 0x8] = a3
100315: 7b 7b                    u64 [a0] = a4
100317: 51 04 4c                 jump @7879 if t2 == 0
      :                          @7868
100320: 33 09                    a2 = 0
100322: 33 0a c0 22 03           a3 = 0x322c0
100327: 95 ab 00 00 01           a4 = a3 + 0x10000
100332: 33 02 00 20              t0 = 0x2000
100336: 28 08                    jump @7870
      :                          @7869
100338: 95 99 01                 a2 = a2 + 0x1
100341: aa 49 34                 jump @7879 if a2 == t2
      :                          @7870
100344: 97 9c 05                 a5 = a2 << 0x5
100347: c8 3c 0c                 a5 = a5 + t1
100350: 82 c6 08                 s1 = u64 [a5 + 0x8]
100353: 51 06 f1                 jump @7869 if s1 == 0
      :                          @7871
100356: ac 62 ee                 jump @7869 if t0 <u s1
      :                          @7872
100359: 82 cc 10                 a5 = u64 [a5 + 0x10]
100362: 97 66 03                 s1 = s1 << 0x3
100365: 01                       fallthrough
      :                          @7873
100366: 82 b5                    s0 = u64 [a4]
100368: c9 5b 0a                 a3 = a4 - s0
100371: ab ca df                 jump @7869 if a3 != a5
      :                          @7874
100374: c9 65 0a                 a3 = s0 - s1
100377: 01                       fallthrough
      :                          @7875
100378: 82 b7                    a0 = u64 [a4]
100380: ab 57 f2                 jump @7873 if a0 != s0
      :                          @7876
100383: 7b ba                    u64 [a4] = a3
100385: 33 08                    a1 = 0
100387: 01                       fallthrough
      :                          @7877
100388: ab 57 ea                 jump @7873 if a0 != s0
      :                          @7878
100391: 28 cb                    jump @7869
      :                          @7879
100393: 82 18 b8 00              a1 = u64 [sp + 0xb8]
100397: 51 08 2e                 jump @7886 if a1 == 0
      :                          @7880
100400: 33 07 00 08              a0 = 0x800
100404: ac 87 27                 jump @7886 if a0 <u a1
      :                          @7881
100407: 97 88 05                 a1 = a1 << 0x5
100410: 33 09 c0 22 03           a2 = 0x322c0
100415: 95 99 00 00 01           a2 = a2 + 0x10000
100420: 01                       fallthrough
      :                          @7882
100421: 82 9a                    a3 = u64 [a2]
100423: c9 a9 07                 a0 = a2 - a3
100426: ab 37 11                 jump @7886 if a0 != t1
      :                          @7883
100429: c9 8a 07                 a0 = a3 - a1
100432: 01                       fallthrough
      :                          @7884
100433: 82 9b                    a4 = u64 [a2]
100435: ab ab f2                 jump @7882 if a4 != a3
      :                          @7885
100438: 7b 97                    u64 [a2] = a0
100440: 33 0c                    a5 = 0
100442: 01                       fallthrough
      :                          @7886
100443: 82 10 00 01              ra = u64 [sp + 0x100]
100447: 82 15 f8 00              s0 = u64 [sp + 0xf8]
100451: 82 16 f0 00              s1 = u64 [sp + 0xf0]
100455: 95 11 08 01              sp = sp + 0x108
100459: 32 00                    ret
      :                          @7887
100461: 00                       trap
      :                          @7888
100462: 00                       trap
      :                          @7889
100463: 00                       trap
      :                          @7890
100464: 00                       trap
      :                          @7891
100465: 00                       trap
      :                          @7892
100466: 95 11 90                 sp = sp + 0xffffffffffffff90
100469: 7b 10 68                 u64 [sp + 0x68] = ra
100472: 7b 15 60                 u64 [sp + 0x60] = s0
100475: 7b 16 58                 u64 [sp + 0x58] = s1
100478: 64 72                    t0 = a0
100480: 84 79 01                 a2 = a0 & 0x1
100483: 33 07 01                 a0 = 0x1
100486: 33 08 02                 a1 = 0x2
100489: 51 09 a8 01              jump @7922 if a2 == 0
      :                          @7893
100493: 33 09                    a2 = 0
100495: 64 26                    s1 = t0
100497: 01                       fallthrough
      :                          @7894
100498: c8 96 0a                 a3 = s1 + a2
100501: 98 aa 01                 a3 = a3 >> 0x1
100504: ca aa 08                 a1 = a3 * a3
100507: d6 aa 0c                 a5 = a3 mulhu a3
100510: 33 0b ff                 a4 = 0xffffffffffffffff
100513: da c8 0b                 a4 = a1 if a5 == 0
100516: aa 2b 80 01              jump @7919 if a4 == t0
      :                          @7895
100520: d8 2b 08                 a1 = a4 <u t0
100523: 95 ab 01                 a4 = a3 + 0x1
100526: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
100529: da 8a 06                 s1 = a3 if a1 == 0
100532: db 8b 09                 a2 = a4 if a1 != 0
100535: ae 96 db                 jump @7894 if s1 >=u a2
      :                          @7896
100538: ca 66 08                 a1 = s1 * s1
100541: aa 82 6d 01              jump @7920 if t0 == a1
      :                          @7897
100545: 33 04                    t2 = 0
100547: 49 11 40                 u64 [sp + 64] = 0
100550: 33 00                    ra = 0
100552: 33 0c                    a5 = 0
100554: c9 82 0b                 a4 = t0 - a1
100557: 49 11 48 01              u64 [sp + 72] = 0x1
100561: 33 09 87 13              a2 = 0x1387
100565: 64 65                    s0 = s1
100567: 64 63                    t1 = s1
100569: 49 11 38 01              u64 [sp + 56] = 0x1
100573: 7b 12 18                 u64 [sp + 0x18] = t0
100576: 7b 19                    u64 [sp] = a2
100578: 01                       fallthrough
      :                          @7898
100579: 7b 1b 08                 u64 [sp + 0x8] = a4
100582: ca 3b 07                 a0 = a4 * t1
100585: 7b 17 10                 u64 [sp + 0x10] = a0
100588: 64 0a                    a3 = ra
100590: e3 9c 00                 ra = maxs(a5, a2)
100593: 7b 14 30                 u64 [sp + 0x30] = t2
100596: 82 19 40                 a2 = u64 [sp + 0x40]
100599: 82 1b 48                 a4 = u64 [sp + 0x48]
100602: 82 18 38                 a1 = u64 [sp + 0x38]
100605: 64 a4                    t2 = a3
100607: 28 0c                    jump @7901
      :                          @7899
100609: 64 a4                    t2 = a3
100611: 01                       fallthrough
      :                          @7900
100612: 82 17 50                 a0 = u64 [sp + 0x50]
100615: aa 07 27 01              jump @7921 if a0 == ra
      :                          @7901
100619: ca b3 07                 a0 = t1 * a4
100622: c8 97 07                 a0 = a0 + a2
100625: 7b 17 48                 u64 [sp + 0x48] = a0
100628: d6 77 07                 a0 = a0 mulhu a0
100631: 7b 1c 50                 u64 [sp + 0x50] = a5
100634: 83 cc 01                 i32 a5 = a5 + 0x1
100637: 52 07 e7                 jump @7900 if a0 != 0
      :                          @7902
100640: ca 43 07                 a0 = t1 * t2
100643: 64 4a                    a3 = t2
100645: c8 87 04                 t2 = a0 + a1
100648: d6 44 07                 a0 = t2 mulhu t2
100651: 52 07 d6                 jump @7899 if a0 != 0
      :                          @7903
100654: 7b 1a 38                 u64 [sp + 0x38] = a3
100657: 7b 1b 40                 u64 [sp + 0x40] = a4
100660: 7b 1c 20                 u64 [sp + 0x20] = a5
100663: 7b 15 28                 u64 [sp + 0x28] = s0
100666: 82 17 48                 a0 = u64 [sp + 0x48]
100669: ca 77 07                 a0 = a0 * a0
100672: ca 44 08                 a1 = t2 * t2
100675: d6 28 09                 a2 = a1 mulhu t0
100678: ca 28 0c                 a5 = a1 * t0
100681: d8 c7 08                 a1 = a0 <u a5
100684: 8e 9b                    a4 = a2 >u 0
100686: da 98 0b                 a4 = a1 if a2 == 0
100689: c9 c7 08                 a1 = a0 - a5
100692: c9 7c 0c                 a5 = a5 - a0
100695: da b8 0c                 a5 = a1 if a4 == 0
100698: 33 05                    s0 = 0
100700: 64 c8                    a1 = a5
100702: 01                       fallthrough
      :                          @7904
100703: c8 58 09                 a2 = a1 + s0
100706: 98 99 01                 a2 = a2 >> 0x1
100709: ca 99 07                 a0 = a2 * a2
100712: d6 99 02                 t0 = a2 mulhu a2
100715: 33 0b ff                 a4 = 0xffffffffffffffff
100718: da 27 0b                 a4 = a0 if t0 == 0
100721: aa cb 1a                 jump @7907 if a4 == a5
      :                          @7905
100724: d8 cb 07                 a0 = a4 <u a5
100727: 95 9b 01                 a4 = a2 + 0x1
100730: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
100733: da 79 08                 a1 = a2 if a0 == 0
100736: db 7b 05                 s0 = a4 if a0 != 0
100739: ae 58 dc                 jump @7904 if a1 >=u s0
      :                          @7906
100742: ca 88 07                 a0 = a1 * a1
100745: 28 05                    jump @7908
      :                          @7907
100747: 64 98                    a1 = a2
100749: 01                       fallthrough
      :                          @7908
100750: 8e 89                    a2 = a1 >u 0
100752: d3 c7 07                 a0 = a0 ^ a5
100755: 88 77 01                 a0 = a0 <u 0x1
100758: d2 97 07                 a0 = a0 & a2
100761: 82 12 18                 t0 = u64 [sp + 0x18]
100764: 82 1b 28                 a4 = u64 [sp + 0x28]
100767: 82 1c 20                 a5 = u64 [sp + 0x20]
100770: 51 07 22                 jump @7912 if a0 == 0
      :                          @7909
100773: 82 17 48                 a0 = u64 [sp + 0x48]
100776: c8 87 07                 a0 = a0 + a1
100779: 64 29                    a2 = t0
100781: 01                       fallthrough
      :                          @7910
100782: 64 98                    a1 = a2
100784: cd 97 09                 a2 = a0 %u a2
100787: 64 87                    a0 = a1
100789: 52 09 f9                 jump @7910 if a2 != 0
      :                          @7911
100792: 88 87 02                 a0 = a1 <u 0x2
100795: d8 28 09                 a2 = a1 <u t0
100798: e0 79 07                 a0 = a2 & ~a0
100801: 52 07 7e                 jump @7923 if a0 != 0
      :                          @7912
100804: 82 17 10                 a0 = u64 [sp + 0x10]
100807: 82 18 30                 a1 = u64 [sp + 0x30]
100810: c9 87 05                 s0 = a0 - a1
100813: d6 55 08                 a1 = s0 mulhu s0
100816: ca 55 07                 a0 = s0 * s0
100819: d8 72 09                 a2 = t0 <u a0
100822: 9a 88                    a1 = -a1
100824: c9 98 08                 a1 = a1 - a2
100827: 59 08 12                 jump @7914 if a1 >=s 0
      :                          @7913
100830: 82 18 38                 a1 = u64 [sp + 0x38]
100833: 82 19 40                 a2 = u64 [sp + 0x40]
100836: 7b 1b 30                 u64 [sp + 0x30] = a4
100839: 82 1b 48                 a4 = u64 [sp + 0x48]
100842: 28 1a ff                 jump @7900
      :                          @7914
100845: 82 19 08                 a2 = u64 [sp + 0x8]
100848: 51 09 3e                 jump @7921 if a2 == 0
      :                          @7915
100851: 7b 14 30                 u64 [sp + 0x30] = t2
100854: c9 72 07                 a0 = t0 - a0
100857: 50 20 90 04 ce 7e 01     ra = 1168, jump @13617
      :                          @7916 [@dyn 584]
100864: 51 07 44                 jump @7924 if a0 == 0
      :                          @7917
100867: 64 7b                    a4 = a0
100869: 33 07                    a0 = 0
100871: c8 65 08                 a1 = s0 + s1
100874: cb b8 03                 t1 = a1 /u a4
100877: 82 12 18                 t0 = u64 [sp + 0x18]
100880: 82 19                    a2 = u64 [sp]
100882: 82 14 28                 t2 = u64 [sp + 0x28]
100885: 82 1c 20                 a5 = u64 [sp + 0x20]
100888: 82 10 30                 ra = u64 [sp + 0x30]
100891: 82 1a 50                 a3 = u64 [sp + 0x50]
100894: ad 9a c5 fe              jump @7898 if a3 <s a2
      :                          @7918
100898: 28 0f                    jump @7922
      :                          @7919
100900: 64 a6                    s1 = a3
100902: ab 82 9b fe              jump @7897 if t0 != a1
      :                          @7920
100906: 64 68                    a1 = s1
100908: 28 05                    jump @7922
      :                          @7921
100910: 33 07                    a0 = 0
100912: 01                       fallthrough
      :                          @7922
100913: 82 10 68                 ra = u64 [sp + 0x68]
100916: 82 15 60                 s0 = u64 [sp + 0x60]
100919: 82 16 58                 s1 = u64 [sp + 0x58]
100922: 95 11 70                 sp = sp + 0x70
100925: 32 00                    ret
      :                          @7923
100927: 33 07 01                 a0 = 0x1
100930: 28 ef                    jump @7922
      :                          @7924
100932: 00                       trap
      :                          @7925
100933: 33 0b 02                 a4 = 0x2
100936: aa b9 2e                 jump @7934 if a2 == a4
      :                          @7926
100939: 64 98                    a1 = a2
100941: 95 99 01                 a2 = a2 + 0x1
100944: ac 79 fb                 jump @7926 if a2 <u a0
      :                          @7927
100947: 84 9b 01                 a4 = a2 & 0x1
100950: 51 0b ef                 jump @7925 if a4 == 0
      :                          @7928
100953: ac a9 1a                 jump @7933 if a2 <u a3
      :                          @7929
100956: 33 0b 03                 a4 = 0x3
100959: 01                       fallthrough
      :                          @7930
100960: 51 0b 04 01              jump @7952 if a4 == 0
      :                          @7931
100964: cd b9 0c                 a5 = a2 %u a4
100967: 51 0c e4                 jump @7926 if a5 == 0
      :                          @7932
100970: 95 bb 02                 a4 = a4 + 0x2
100973: ca bb 0c                 a5 = a4 * a4
100976: ae c9 f0                 jump @7930 if a2 >=u a5
      :                          @7933
100979: 64 9b                    a4 = a2
100981: 01                       fallthrough
      :                          @7934
100982: 7b 1b 10                 u64 [sp + 0x10] = a4
100985: 33 09 78 12 03           a2 = 0x31278
100990: 3a 0a 40 11 03           a3 = u64 [0x31140]
100995: 33 02 e8 03              t0 = 0x3e8
100999: 33 0c 02                 a5 = 0x2
101002: 33 04 09                 t2 = 0x9
101005: 01                       fallthrough
      :                          @7935
101006: 3a 07 78 12 03           a0 = u64 [0x31278]
101011: 97 7b 0d                 a4 = a0 << 0xd
101014: d3 b7 07                 a0 = a0 ^ a4
101017: 98 7b 07                 a4 = a0 >> 0x7
101020: d3 b7 07                 a0 = a0 ^ a4
101023: 97 7b 11                 a4 = a0 << 0x11
101026: d3 b7 07                 a0 = a0 ^ a4
101029: ca 37 0b                 a4 = a0 * t1
101032: 3e 07 78 12 03           u64 [0x31278] = a0
101037: 98 b7 03                 a0 = a4 >> 0x3
101040: d6 a7 07                 a0 = a0 mulhu a3
101043: 98 77 04                 a0 = a0 >> 0x4
101046: ca 27 07                 a0 = a0 * t0
101049: c9 7b 0b                 a4 = a4 - a0
101052: 95 b7 64                 a0 = a4 + 0x64
101055: 28 08                    jump @7937
      :                          @7936
101057: 33 05 02                 s0 = 0x2
101060: aa 57 2e                 jump @7945 if a0 == s0
      :                          @7937
101063: 64 76                    s1 = a0
101065: 95 77 01                 a0 = a0 + 0x1
101068: ac c7 fb                 jump @7937 if a0 <u a5
      :                          @7938
101071: 84 7b 01                 a4 = a0 & 0x1
101074: 51 0b ef                 jump @7936 if a4 == 0
      :                          @7939
101077: ac 47 1a                 jump @7944 if a0 <u t2
      :                          @7940
101080: 33 05 03                 s0 = 0x3
101083: 01                       fallthrough
      :                          @7941
101084: 51 05 88 00              jump @7952 if s0 == 0
      :                          @7942
101088: cd 57 0b                 a4 = a0 %u s0
101091: 51 0b e4                 jump @7937 if a4 == 0
      :                          @7943
101094: 95 55 02                 s0 = s0 + 0x2
101097: ca 55 0b                 a4 = s0 * s0
101100: ae b7 f0                 jump @7941 if a0 >=u a4
      :                          @7944
101103: 64 75                    s0 = a0
101105: 01                       fallthrough
      :                          @7945
101106: aa 86 9c                 jump @7935 if s1 == a1
      :                          @7946
101109: ca 86 06                 s1 = s1 * a1
101112: 51 06 6c                 jump @7952 if s1 == 0
      :                          @7947
101115: 7b 10 08                 u64 [sp + 0x8] = ra
101118: 33 07 01 00 01           a0 = 0x10001
101123: cd 67 08                 a1 = a0 %u s1
101126: 95 17 18                 a0 = sp + 0x18
101129: 7b 18                    u64 [sp] = a1
101131: 64 69                    a2 = s1
101133: 50 20 92 04 16 00 ff     ra = 1170, jump @2409
      :                          @7948 [@dyn 585]
101140: 82 17 18                 a0 = u64 [sp + 0x18]
101143: 52 17 01 4f              jump @7954 if a0 != 1
      :                          @7949
101147: 82 17 20                 a0 = u64 [sp + 0x20]
101150: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
101160: d3 87 09                 a2 = a0 ^ a1
101163: e1 69 09                 a2 = a2 | ~s1
101166: 82 1a 08                 a3 = u64 [sp + 0x8]
101169: 51 09 34                 jump @7953 if a2 == 0
      :                          @7950
101172: ce 67 07                 a0 = a0 %s s1
101175: c8 67 07                 a0 = a0 + s1
101178: d3 78 08                 a1 = a1 ^ a0
101181: e1 68 08                 a1 = a1 | ~s1
101184: 51 08 25                 jump @7953 if a1 == 0
      :                          @7951
101187: ce 67 07                 a0 = a0 %s s1
101190: 82 18 10                 a1 = u64 [sp + 0x10]
101193: ca 85 08                 a1 = s0 * a1
101196: 7b a8                    u64 [a3] = a1
101198: 82 18                    a1 = u64 [sp]
101200: 7b a8 08                 u64 [a3 + 0x8] = a1
101203: 7b a7 10                 u64 [a3 + 0x10] = a0
101206: 82 10 40                 ra = u64 [sp + 0x40]
101209: 82 15 38                 s0 = u64 [sp + 0x38]
101212: 82 16 30                 s1 = u64 [sp + 0x30]
101215: 95 11 48                 sp = sp + 0x48
101218: 32 00                    ret
      :                          @7952
101220: 00                       trap
      :                          @7953
101221: 00                       trap
      :                          @7954
101222: 00                       trap
      :                          @7955
101223: aa 6c 2e                 jump @7964 if a5 == s1
      :                          @7956
101226: 64 c5                    s0 = a5
101228: 95 cc 01                 a5 = a5 + 0x1
101231: ac 8c fb                 jump @7956 if a5 <u a1
      :                          @7957
101234: 84 ca 01                 a3 = a5 & 0x1
101237: 51 0a f2                 jump @7955 if a3 == 0
      :                          @7958
101240: ac 9c 1a                 jump @7963 if a5 <u a2
      :                          @7959
101243: 33 0a 03                 a3 = 0x3
101246: 01                       fallthrough
      :                          @7960
101247: 51 0a 8f 00              jump @7971 if a3 == 0
      :                          @7961
101251: cd ac 0b                 a4 = a5 %u a3
101254: 51 0b e4                 jump @7956 if a4 == 0
      :                          @7962
101257: 95 aa 02                 a3 = a3 + 0x2
101260: ca aa 0b                 a4 = a3 * a3
101263: ae bc f0                 jump @7960 if a5 >=u a4
      :                          @7963
101266: 64 c6                    s1 = a5
101268: 01                       fallthrough
      :                          @7964
101269: 7b 12                    u64 [sp] = t0
101271: 7b 17 08                 u64 [sp + 0x8] = a0
101274: 64 67                    a0 = s1
101276: 50 20 94 04 fe 00 ff     ra = 1172, jump @2452
      :                          @7965 [@dyn 586]
101283: 3a 08 78 12 03           a1 = u64 [0x31278]
101288: 97 89 0d                 a2 = a1 << 0xd
101291: d3 98 08                 a1 = a1 ^ a2
101294: 98 89 07                 a2 = a1 >> 0x7
101297: d3 98 08                 a1 = a1 ^ a2
101300: 97 89 11                 a2 = a1 << 0x11
101303: d3 98 08                 a1 = a1 ^ a2
101306: 95 59 ff                 a2 = s0 + 0xffffffffffffffff
101309: 3e 08 78 12 03           u64 [0x31278] = a1
101314: 51 09 4c                 jump @7971 if a2 == 0
      :                          @7966
101317: 82 1a                    a3 = u64 [sp]
101319: ca a8 08                 a1 = a1 * a3
101322: cd 98 08                 a1 = a1 %u a2
101325: 95 88 01                 a1 = a1 + 0x1
101328: 8e 59                    a2 = s0 >u 0
101330: 64 7b                    a4 = a0
101332: 64 8a                    a3 = a1
101334: 28 0b                    jump @7968
      :                          @7967
101336: 98 aa 01                 a3 = a3 >> 0x1
101339: ca bb 0b                 a4 = a4 * a4
101342: 51 0a 14                 jump @7970 if a3 == 0
      :                          @7968
101345: 84 ac 01                 a5 = a3 & 0x1
101348: cd 6b 0b                 a4 = a4 %u s1
101351: 51 0c f1                 jump @7967 if a5 == 0
      :                          @7969
101354: ca 9b 09                 a2 = a4 * a2
101357: cd 69 09                 a2 = a2 %u s1
101360: 28 e8                    jump @7967
      :                          @7970
101362: 82 1a 08                 a3 = u64 [sp + 0x8]
101365: 7b a6                    u64 [a3] = s1
101367: 7b a7 08                 u64 [a3 + 0x8] = a0
101370: 7b a9 10                 u64 [a3 + 0x10] = a2
101373: 7b a8 18                 u64 [a3 + 0x18] = a1
101376: 82 10 20                 ra = u64 [sp + 0x20]
101379: 82 15 18                 s0 = u64 [sp + 0x18]
101382: 82 16 10                 s1 = u64 [sp + 0x10]
101385: 95 11 28                 sp = sp + 0x28
101388: 32 00                    ret
      :                          @7971
101390: 00                       trap
      :                          @7972
101391: 98 77 01                 a0 = a0 >> 0x1
101394: ca aa 0a                 a3 = a3 * a3
101397: 51 07 14                 jump @7975 if a0 == 0
      :                          @7973
101400: 84 7b 01                 a4 = a0 & 0x1
101403: cd 8a 0a                 a3 = a3 %u a1
101406: 51 0b f1                 jump @7972 if a4 == 0
      :                          @7974
101409: ca 6a 0b                 a4 = a3 * s1
101412: cd 8b 06                 s1 = a4 %u a1
101415: 28 e8                    jump @7972
      :                          @7975
101417: 95 17 10                 a0 = sp + 0x10
101420: 64 98                    a1 = a2
101422: 64 59                    a2 = s0
101424: 50 20 96 04 f3 fe fe     ra = 1174, jump @2409
      :                          @7976 [@dyn 587]
101431: 82 17 10                 a0 = u64 [sp + 0x10]
101434: 52 17 01 52              jump @7981 if a0 != 1
      :                          @7977
101438: 82 17 18                 a0 = u64 [sp + 0x18]
101441: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
101451: d3 87 09                 a2 = a0 ^ a1
101454: e1 59 09                 a2 = a2 | ~s0
101457: 51 09 3a                 jump @7980 if a2 == 0
      :                          @7978
101460: ce 57 07                 a0 = a0 %s s0
101463: c8 57 07                 a0 = a0 + s0
101466: d3 78 08                 a1 = a1 ^ a0
101469: e1 58 08                 a1 = a1 | ~s0
101472: 51 08 2b                 jump @7980 if a1 == 0
      :                          @7979
101475: ce 57 08                 a1 = a0 %s s0
101478: cd 56 07                 a0 = s1 %u s0
101481: 82 19 08                 a2 = u64 [sp + 0x8]
101484: ca 97 09                 a2 = a0 * a2
101487: 82 1a                    a3 = u64 [sp]
101489: c8 a9 09                 a2 = a2 + a3
101492: cd 59 09                 a2 = a2 %u s0
101495: ca 89 08                 a1 = a2 * a1
101498: cd 58 08                 a1 = a1 %u s0
101501: 82 10 38                 ra = u64 [sp + 0x38]
101504: 82 15 30                 s0 = u64 [sp + 0x30]
101507: 82 16 28                 s1 = u64 [sp + 0x28]
101510: 95 11 40                 sp = sp + 0x40
101513: 32 00                    ret
      :                          @7980
101515: 00                       trap
      :                          @7981
101516: 00                       trap
      :                          @7982
101517: 95 11 b0                 sp = sp + 0xffffffffffffffb0
101520: 7b 10 48                 u64 [sp + 0x48] = ra
101523: 7b 15 40                 u64 [sp + 0x40] = s0
101526: 7b 16 38                 u64 [sp + 0x38] = s1
101529: 88 82 01                 t0 = a1 <u 0x1
101532: d8 b8 06                 s1 = a1 <u a4
101535: 85 63 01                 t1 = s1 ^ 0x1
101538: 88 96 01                 s1 = a2 <u 0x1
101541: d4 26 05                 s0 = s1 | t0
101544: d4 35 05                 s0 = s0 | t1
101547: d8 b9 06                 s1 = a2 <u a4
101550: 85 66 01                 s1 = s1 ^ 0x1
101553: d4 56 02                 t0 = s1 | s0
101556: 51 02 08                 jump @7984 if t0 == 0
      :                          @7983
101559: 33 07                    a0 = 0
101561: 28 c3 00                 jump @7999
      :                          @7984
101564: 64 45                    s0 = t2
101566: 64 c6                    s1 = a5
101568: 7b 17                    u64 [sp] = a0
101570: 7b 1a 08                 u64 [sp + 0x8] = a3
101573: 7b 18 10                 u64 [sp + 0x10] = a1
101576: 95 17 20                 a0 = sp + 0x20
101579: 64 98                    a1 = a2
101581: 64 b9                    a2 = a4
101583: 7b 1b 18                 u64 [sp + 0x18] = a4
101586: 50 20 98 04 51 fe fe     ra = 1176, jump @2409
      :                          @7985 [@dyn 588]
101593: 82 17 20                 a0 = u64 [sp + 0x20]
101596: 52 17 01 af 00           jump @8001 if a0 != 1
      :                          @7986
101601: 82 17 28                 a0 = u64 [sp + 0x28]
101604: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
101614: d3 87 09                 a2 = a0 ^ a1
101617: 82 12 18                 t0 = u64 [sp + 0x18]
101620: e1 29 09                 a2 = a2 | ~t0
101623: 51 09 93 00              jump @8000 if a2 == 0
      :                          @7987
101627: ce 27 07                 a0 = a0 %s t0
101630: c8 27 07                 a0 = a0 + t0
101633: d3 78 08                 a1 = a1 ^ a0
101636: e1 28 08                 a1 = a1 | ~t0
101639: 51 08 83 00              jump @8000 if a1 == 0
      :                          @7988
101643: ce 27 08                 a1 = a0 %s t0
101646: 82 13 10                 t1 = u64 [sp + 0x10]
101649: ca 38 07                 a0 = a1 * t1
101652: cd 27 07                 a0 = a0 %u t0
101655: 82 19                    a2 = u64 [sp]
101657: ca 98 08                 a1 = a1 * a2
101660: cd 28 0a                 a3 = a1 %u t0
101663: 33 08 01                 a1 = 0x1
101666: 33 09 01                 a2 = 0x1
101669: 82 14 08                 t2 = u64 [sp + 0x8]
101672: 51 0a 22                 jump @7993 if a3 == 0
      :                          @7989
101675: 33 09 01                 a2 = 0x1
101678: 28 0b                    jump @7991
      :                          @7990
101680: 98 aa 01                 a3 = a3 >> 0x1
101683: ca bb 06                 s1 = a4 * a4
101686: 51 0a 14                 jump @7993 if a3 == 0
      :                          @7991
101689: 84 ac 01                 a5 = a3 & 0x1
101692: cd 46 0b                 a4 = s1 %u t2
101695: 51 0c f1                 jump @7990 if a5 == 0
      :                          @7992
101698: ca 9b 09                 a2 = a4 * a2
101701: cd 49 09                 a2 = a2 %u t2
101704: 28 e8                    jump @7990
      :                          @7993
101706: 51 07 22                 jump @7998 if a0 == 0
      :                          @7994
101709: 33 08 01                 a1 = 0x1
101712: 28 0b                    jump @7996
      :                          @7995
101714: 98 77 01                 a0 = a0 >> 0x1
101717: ca aa 05                 s0 = a3 * a3
101720: 51 07 14                 jump @7998 if a0 == 0
      :                          @7996
101723: 84 7b 01                 a4 = a0 & 0x1
101726: cd 45 0a                 a3 = s0 %u t2
101729: 51 0b f1                 jump @7995 if a4 == 0
      :                          @7997
101732: ca 8a 08                 a1 = a3 * a1
101735: cd 48 08                 a1 = a1 %u t2
101738: 28 e8                    jump @7995
      :                          @7998
101740: ca 98 07                 a0 = a1 * a2
101743: cd 47 07                 a0 = a0 %u t2
101746: cd 27 07                 a0 = a0 %u t0
101749: d3 37 07                 a0 = a0 ^ t1
101752: 88 77 01                 a0 = a0 <u 0x1
101755: 01                       fallthrough
      :                          @7999
101756: 82 10 48                 ra = u64 [sp + 0x48]
101759: 82 15 40                 s0 = u64 [sp + 0x40]
101762: 82 16 38                 s1 = u64 [sp + 0x38]
101765: 95 11 50                 sp = sp + 0x50
101768: 32 00                    ret
      :                          @8000
101770: 00                       trap
      :                          @8001
101771: 00                       trap
      :                          @8002
101772: 82 4b                    a4 = u64 [t2]
101774: c8 9b 0c                 a5 = a4 + a2
101777: ac bc da 00              jump @8023 if a5 <u a4
      :                          @8003
101781: 95 c8 08                 a1 = a5 + 0x8
101784: d8 c8 06                 s1 = a1 <u a5
101787: d8 82 08                 a1 = t0 <u a1
101790: d4 68 08                 a1 = a1 | s1
101793: 52 08 ca 00              jump @8023 if a1 != 0
      :                          @8004
101797: c9 c3 06                 s1 = t1 - a5
101800: c8 26 06                 s1 = s1 + t0
101803: 84 68 07                 a1 = s1 & 0x7
101806: c8 8c 0c                 a5 = a5 + a1
101809: 01                       fallthrough
      :                          @8005
101810: 82 47                    a0 = u64 [t2]
101812: ab b7 d8                 jump @8002 if a0 != a4
      :                          @8006
101815: 7b 4c                    u64 [t2] = a5
101817: c9 86 06                 s1 = s1 - a1
101820: 64 67                    a0 = s1
101822: 33 08                    a1 = 0
101824: 7b 1a 10                 u64 [sp + 0x10] = a3
101827: 64 05                    s0 = ra
101829: 50 20 9a 04 94 7d 01     ra = 1178, jump @13675
      :                          @8007 [@dyn 589]
101836: 64 64                    t2 = s1
101838: 64 56                    s1 = s0
101840: 82 1a 10                 a3 = u64 [sp + 0x10]
101843: 33 07                    a0 = 0
101845: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
101855: 33 02 02                 t0 = 0x2
101858: 82 13 18                 t1 = u64 [sp + 0x18]
101861: 01                       fallthrough
      :                          @8008
101862: 51 07 35                 jump @8013 if a0 == 0
      :                          @8009
101865: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
101868: ac 8a 7e                 jump @8022 if a3 <u a1
      :                          @8010
101871: 97 88 03                 a1 = a1 << 0x3
101874: c8 48 08                 a1 = a1 + t2
101877: 82 88                    a1 = u64 [a1]
101879: 82 6b 08                 a4 = u64 [s1 + 0x8]
101882: ca 8b 08                 a1 = a4 * a1
101885: 9a 8b                    a4 = -a1
101887: ac 27 1f                 jump @8014 if a0 <u t0
      :                          @8011
101890: 95 78 fe                 a1 = a0 + 0xfffffffffffffffe
101893: ac 8a 65                 jump @8022 if a3 <u a1
      :                          @8012
101896: 97 88 03                 a1 = a1 << 0x3
101899: c8 48 08                 a1 = a1 + t2
101902: 82 88                    a1 = u64 [a1]
101904: 82 6c 10                 a5 = u64 [s1 + 0x10]
101907: ca 8c 08                 a1 = a5 * a1
101910: c9 8b 0b                 a4 = a4 - a1
101913: 28 05                    jump @8014
      :                          @8013
101915: 82 3b                    a4 = u64 [t1]
101917: 01                       fallthrough
      :                          @8014
101918: 82 68                    a1 = u64 [s1]
101920: 51 08 47                 jump @8019 if a1 == 0
      :                          @8015
101923: d3 9b 0c                 a5 = a4 ^ a2
101926: e1 8c 0c                 a5 = a5 | ~a1
101929: 51 0c 3f                 jump @8020 if a5 == 0
      :                          @8016
101932: ac 7a 3d                 jump @8021 if a3 <u a0
      :                          @8017
101935: d8 a7 0c                 a5 = a0 <u a3
101938: 97 75 03                 s0 = a0 << 0x3
101941: c8 c7 07                 a0 = a0 + a5
101944: c8 45 05                 s0 = s0 + t2
101947: cc 8b 08                 a1 = a4 /s a1
101950: d8 7a 0b                 a4 = a3 <u a0
101953: 85 bb 01                 a4 = a4 ^ 0x1
101956: d2 cb 0b                 a4 = a4 & a5
101959: 7b 58                    u64 [s0] = a1
101961: 52 0b 9d                 jump @8008 if a4 != 0
      :                          @8018
101964: 82 17 08                 a0 = u64 [sp + 0x8]
101967: 82 18                    a1 = u64 [sp]
101969: 7b 87                    u64 [a1] = a0
101971: 7b 84 08                 u64 [a1 + 0x8] = t2
101974: 7b 87 10                 u64 [a1 + 0x10] = a0
101977: 82 10 30                 ra = u64 [sp + 0x30]
101980: 82 15 28                 s0 = u64 [sp + 0x28]
101983: 82 16 20                 s1 = u64 [sp + 0x20]
101986: 95 11 38                 sp = sp + 0x38
101989: 32 00                    ret
      :                          @8019
101991: 00                       trap
      :                          @8020
101992: 00                       trap
      :                          @8021
101993: 00                       trap
      :                          @8022
101994: 00                       trap
      :                          @8023
101995: 00                       trap
      :                          @8024
101996: 33 02                    t0 = 0
101998: 51 08 30                 jump @8029 if a1 == 0
      :                          @8025
102001: 64 83                    t1 = a1
102003: 64 8b                    a4 = a1
102005: 01                       fallthrough
      :                          @8026
102006: 98 bb 01                 a4 = a4 >> 0x1
102009: c8 2b 0b                 a4 = a4 + t0
102012: 97 bc 03                 a5 = a4 << 0x3
102015: c8 7c 0c                 a5 = a5 + a0
102018: 82 cc                    a5 = u64 [a5]
102020: aa 9c 2a                 jump @8031 if a5 == a2
      :                          @8027
102023: d9 9c 04                 t2 = a5 <s a2
102026: d9 c9 0c                 a5 = a2 <s a5
102029: db cb 03                 t1 = a4 if a5 != 0
102032: 95 bb 01                 a4 = a4 + 0x1
102035: db 4b 02                 t0 = a4 if t2 != 0
102038: c9 23 0b                 a4 = t1 - t0
102041: ac 32 dd                 jump @8026 if t0 <u t1
      :                          @8028
102044: 28 1a                    jump @8032
      :                          @8029
102046: 33 0c                    a5 = 0
102048: 33 07                    a0 = 0
102050: 28 50 b5 00              jump @10761
      :                          @8030
102054: e4 2c 07                 a0 = maxu(a5, t0)
102057: c9 27 07                 a0 = a0 - t0
102060: 32 00                    ret
      :                          @8031
102062: 64 b2                    t0 = a4
102064: 33 09                    a2 = 0
102066: 64 8b                    a4 = a1
102068: 28 07                    jump @8033
      :                          @8032
102070: 33 09                    a2 = 0
102072: 64 8b                    a4 = a1
102074: 01                       fallthrough
      :                          @8033
102075: 98 bb 01                 a4 = a4 >> 0x1
102078: c8 9b 0c                 a5 = a4 + a2
102081: 97 cb 03                 a4 = a5 << 0x3
102084: c8 7b 0b                 a4 = a4 + a0
102087: 82 bb                    a4 = u64 [a4]
102089: aa ab dd                 jump @8030 if a4 == a3
      :                          @8034
102092: d9 ab 03                 t1 = a4 <s a3
102095: d9 ba 0b                 a4 = a3 <s a4
102098: db bc 08                 a1 = a5 if a4 != 0
102101: 95 cc 01                 a5 = a5 + 0x1
102104: db 3c 09                 a2 = a5 if t1 != 0
102107: c9 98 0b                 a4 = a1 - a2
102110: ac 89 dd                 jump @8033 if a2 <u a1
      :                          @8035
102113: e4 29 07                 a0 = maxu(a2, t0)
102116: c9 27 07                 a0 = a0 - t0
102119: 32 00                    ret
      :                          @8036 [@dyn 590]
102121: 7b 17 50                 u64 [sp + 0x50] = a0
102124: 84 67 ff 00              a0 = s1 & 0xff
102128: 97 77 02                 a0 = a0 << 0x2
102131: 33 08 00 00 01           a1 = 0x10000
102136: c8 87 07                 a0 = a0 + a1
102139: 81 77                    a0 = i32 [a0]
102141: 32 07                    jump [a0]
      :                          @8037 [@dyn 591]
102143: 3a 08 78 12 03           a1 = u64 [0x31278]
102148: 97 89 0d                 a2 = a1 << 0xd
102151: d3 98 08                 a1 = a1 ^ a2
102154: 98 89 07                 a2 = a1 >> 0x7
102157: d3 98 08                 a1 = a1 ^ a2
102160: 97 89 11                 a2 = a1 << 0x11
102163: d3 98 08                 a1 = a1 ^ a2
102166: 3a 09 60 11 03           a2 = u64 [0x31160]
102171: 3a 0a 70 11 03           a3 = u64 [0x31170]
102176: 3e 08 78 12 03           u64 [0x31278] = a1
102181: ca 98 07                 a0 = a1 * a2
102184: 98 78 01                 a1 = a0 >> 0x1
102187: d6 a8 08                 a1 = a1 mulhu a3
102190: 98 88 04                 a1 = a1 >> 0x4
102193: 96 88 32                 a1 = a1 * 0x32
102196: c9 87 0a                 a3 = a0 - a1
102199: 7a 1a 20 01              u32 [sp + 0x120] = a3
102203: 33 07 02                 a0 = 0x2
102206: 33 08 02                 a1 = 0x2
102209: 52 0a 07                 jump @8039 if a3 != 0
      :                          @8038
102212: 28 4c 60 01              jump @13079
      :                          @8039
102216: 33 08 01                 a1 = 0x1
102219: aa 8a 07                 jump @8041 if a3 == a1
      :                          @8040
102222: 28 20 60 01              jump @13077
      :                          @8041
102226: 33 08 01                 a1 = 0x1
102229: 28 3b 60 01              jump @13079
      :                          @8042 [@dyn 592]
102233: 3a 08 78 12 03           a1 = u64 [0x31278]
102238: 97 89 0d                 a2 = a1 << 0xd
102241: d3 98 08                 a1 = a1 ^ a2
102244: 98 89 07                 a2 = a1 >> 0x7
102247: d3 98 08                 a1 = a1 ^ a2
102250: 3a 09 60 11 03           a2 = u64 [0x31160]
102255: 97 8a 11                 a3 = a1 << 0x11
102258: d3 a8 08                 a1 = a1 ^ a3
102261: ca 98 09                 a2 = a1 * a2
102264: 3e 08 78 12 03           u64 [0x31278] = a1
102269: 14 07 89 88 88 88 88 88 88 88 a0 = 0x8888888888888889
102279: d6 79 07                 a0 = a2 mulhu a0
102282: 98 77 04                 a0 = a0 >> 0x4
102285: 96 77 1e                 a0 = a0 * 0x1e
102288: c9 79 08                 a1 = a2 - a0
102291: bf 79 09                 i32 a2 = a2 - a0
102294: 33 07 03                 a0 = 0x3
102297: 7a 18 20 01              u32 [sp + 0x120] = a1
102301: ac 79 07                 jump @8044 if a2 <u a0
      :                          @8043
102304: 28 e4 52 01              jump @12865
      :                          @8044
102308: 97 88 03                 a1 = a1 << 0x3
102311: 33 07 a8 2f 01           a0 = 0x12fa8
102316: c8 87 07                 a0 = a0 + a1
102319: 82 7b                    a4 = u64 [a0]
102321: 28 fa 52 01              jump @12867
      :                          @8045 [@dyn 593]
102325: 3a 08 78 12 03           a1 = u64 [0x31278]
102330: 97 89 0d                 a2 = a1 << 0xd
102333: d3 98 08                 a1 = a1 ^ a2
102336: 98 89 07                 a2 = a1 >> 0x7
102339: d3 98 08                 a1 = a1 ^ a2
102342: 3a 09 60 11 03           a2 = u64 [0x31160]
102347: 97 8a 11                 a3 = a1 << 0x11
102350: d3 a8 08                 a1 = a1 ^ a3
102353: ca 98 09                 a2 = a1 * a2
102356: 3e 08 78 12 03           u64 [0x31278] = a1
102361: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
102371: d6 79 07                 a0 = a2 mulhu a0
102374: 98 77 05                 a0 = a0 >> 0x5
102377: 96 77 28                 a0 = a0 * 0x28
102380: c9 79 09                 a2 = a2 - a0
102383: 7a 19 20 01              u32 [sp + 0x120] = a2
102387: 52 09 07                 jump @8047 if a2 != 0
      :                          @8046
102390: 28 41 60 01              jump @13089
      :                          @8047
102394: 33 07 01                 a0 = 0x1
102397: aa 79 07                 jump @8049 if a2 == a0
      :                          @8048
102400: 28 3b 60 01              jump @13090
      :                          @8049
102404: 33 07 01                 a0 = 0x1
102407: 28 58 60 01              jump @13092
      :                          @8050 [@dyn 594]
102411: 3a 09 78 12 03           a2 = u64 [0x31278]
102416: 3a 08 60 11 03           a1 = u64 [0x31160]
102421: 97 9a 0d                 a3 = a2 << 0xd
102424: d3 a9 09                 a2 = a2 ^ a3
102427: 98 9a 07                 a3 = a2 >> 0x7
102430: d3 a9 09                 a2 = a2 ^ a3
102433: 97 9a 11                 a3 = a2 << 0x11
102436: d3 a9 09                 a2 = a2 ^ a3
102439: ca 89 0a                 a3 = a2 * a1
102442: 3e 09 78 12 03           u64 [0x31278] = a2
102447: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
102457: d6 9a 09                 a2 = a3 mulhu a2
102460: 98 99 04                 a2 = a2 >> 0x4
102463: 33 0b 14                 a4 = 0x14
102466: ca b9 09                 a2 = a2 * a4
102469: c9 9a 0a                 a3 = a3 - a2
102472: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
102476: 3a 09 78 12 03           a2 = u64 [0x31278]
102481: 97 9a 0d                 a3 = a2 << 0xd
102484: d3 a9 09                 a2 = a2 ^ a3
102487: 98 9a 07                 a3 = a2 >> 0x7
102490: d3 a9 09                 a2 = a2 ^ a3
102493: 97 9a 11                 a3 = a2 << 0x11
102496: d3 a9 09                 a2 = a2 ^ a3
102499: 3e 09 78 12 03           u64 [0x31278] = a2
102504: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
102508: 95 7a 01                 a3 = a0 + 0x1
102511: 52 0a 07                 jump @8052 if a3 != 0
      :                          @8051
102514: 28 68 63 01              jump @13228
      :                          @8052
102518: ca 89 08                 a1 = a2 * a1
102521: cd a8 08                 a1 = a1 %u a3
102524: 7b 18 20 01              u64 [sp + 0x120] = a1
102528: 50 20 a6 04 b6 49 ff     ra = 1190, jump @4196
      :                          @8053 [@dyn 595]
102535: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
102539: 95 17 c8 01              a0 = sp + 0x1c8
102543: 7b 17 90 02              u64 [sp + 0x290] = a0
102547: 33 07 28 0c              a0 = 0xc28
102551: 7b 17 98 02              u64 [sp + 0x298] = a0
102555: 95 18 20 01              a1 = sp + 0x120
102559: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
102563: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
102567: 95 17 e0 01              a0 = sp + 0x1e0
102571: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
102575: 33 07 94 0c              a0 = 0xc94
102579: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
102583: 33 07 70 06 01           a0 = 0x10670
102588: 7b 17 38 02              u64 [sp + 0x238] = a0
102592: 49 21 40 02 03           u64 [sp + 576] = 0x3
102597: 49 21 58 02              u64 [sp + 600] = 0
102601: 95 18 90 02              a1 = sp + 0x290
102605: 7b 18 48 02              u64 [sp + 0x248] = a1
102609: 49 21 50 02 03           u64 [sp + 592] = 0x3
102614: 95 17 08 02              a0 = sp + 0x208
102618: 95 18 38 02              a1 = sp + 0x238
102622: 50 20 a8 04 61 be fe     ra = 1192, jump @1491
      :                          @8054 [@dyn 596]
102629: 82 16 10 02              s1 = u64 [sp + 0x210]
102633: 82 1b 18 02              a4 = u64 [sp + 0x218]
102637: 82 17 08 02              a0 = u64 [sp + 0x208]
102641: 7b 17 70                 u64 [sp + 0x70] = a0
102644: 33 07 02                 a0 = 0x2
102647: 33 08                    a1 = 0
102649: 33 09                    a2 = 0
102651: 64 6a                    a3 = s1
102653: 33 00 aa 04              ra = 0x4aa
102657: 0a 64                    ecalli 100 // 'log'
102659: 01                       fallthrough
      :                          @8055 [@dyn 597]
102660: 82 1c 70                 a5 = u64 [sp + 0x70]
102663: 82 17 68                 a0 = u64 [sp + 0x68]
102666: c8 c7 07                 a0 = a0 + a5
102669: 55 37 00 00 ff 0a        jump @8057 if a0 >=u 4294901760
      :                          @8056
102675: 28 b3 50 01              jump @12856
      :                          @8057
102679: 33 07 c0 22 03           a0 = 0x322c0
102684: 95 77 00 00 01           a0 = a0 + 0x10000
102689: 01                       fallthrough
      :                          @8058
102690: 82 78                    a1 = u64 [a0]
102692: c9 87 09                 a2 = a0 - a1
102695: aa 69 07                 jump @8060 if a2 == s1
      :                          @8059
102698: 28 9c 50 01              jump @12856
      :                          @8060
102702: c9 c8 09                 a2 = a1 - a5
102705: 01                       fallthrough
      :                          @8061
102706: 82 7a                    a3 = u64 [a0]
102708: ab 8a ee                 jump @8058 if a3 != a1
      :                          @8062
102711: 7b 79                    u64 [a0] = a2
102713: 33 0b                    a4 = 0
102715: 01                       fallthrough
      :                          @8063
102716: ab 8a e6                 jump @8058 if a3 != a1
      :                          @8064
102719: 28 87 50 01              jump @12856
      :                          @8065 [@dyn 598]
102723: 3a 09 78 12 03           a2 = u64 [0x31278]
102728: 3a 08 60 11 03           a1 = u64 [0x31160]
102733: 97 9a 0d                 a3 = a2 << 0xd
102736: d3 a9 09                 a2 = a2 ^ a3
102739: 98 9a 07                 a3 = a2 >> 0x7
102742: d3 a9 09                 a2 = a2 ^ a3
102745: 97 9a 11                 a3 = a2 << 0x11
102748: d3 a9 09                 a2 = a2 ^ a3
102751: ca 89 0a                 a3 = a2 * a1
102754: 3e 09 78 12 03           u64 [0x31278] = a2
102759: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
102769: d6 9a 09                 a2 = a3 mulhu a2
102772: 98 99 04                 a2 = a2 >> 0x4
102775: 33 0b 14                 a4 = 0x14
102778: ca b9 09                 a2 = a2 * a4
102781: c9 9a 0a                 a3 = a3 - a2
102784: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
102788: 3a 09 78 12 03           a2 = u64 [0x31278]
102793: 97 9a 0d                 a3 = a2 << 0xd
102796: d3 a9 09                 a2 = a2 ^ a3
102799: 98 9a 07                 a3 = a2 >> 0x7
102802: d3 a9 09                 a2 = a2 ^ a3
102805: 97 9a 11                 a3 = a2 << 0x11
102808: d3 a9 09                 a2 = a2 ^ a3
102811: 3e 09 78 12 03           u64 [0x31278] = a2
102816: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
102820: 95 7a 01                 a3 = a0 + 0x1
102823: 52 0a 07                 jump @8067 if a3 != 0
      :                          @8066
102826: 28 30 62 01              jump @13228
      :                          @8067
102830: ca 89 08                 a1 = a2 * a1
102833: cd a8 08                 a1 = a1 %u a3
102836: 7b 18 20 01              u64 [sp + 0x120] = a1
102840: 50 20 ae 04 a2 4a ff     ra = 1198, jump @4254
      :                          @8068 [@dyn 599]
102847: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
102851: 95 17 c8 01              a0 = sp + 0x1c8
102855: 7b 17 90 02              u64 [sp + 0x290] = a0
102859: 33 07 28 0c              a0 = 0xc28
102863: 7b 17 98 02              u64 [sp + 0x298] = a0
102867: 95 18 20 01              a1 = sp + 0x120
102871: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
102875: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
102879: 95 18 e0 01              a1 = sp + 0x1e0
102883: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
102887: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
102891: 33 07 b0 06 01           a0 = 0x106b0
102896: 7b 17 38 02              u64 [sp + 0x238] = a0
102900: 49 21 40 02 03           u64 [sp + 576] = 0x3
102905: 49 21 58 02              u64 [sp + 600] = 0
102909: 95 18 90 02              a1 = sp + 0x290
102913: 7b 18 48 02              u64 [sp + 0x248] = a1
102917: 49 21 50 02 03           u64 [sp + 592] = 0x3
102922: 95 17 08 02              a0 = sp + 0x208
102926: 95 18 38 02              a1 = sp + 0x238
102930: 50 20 b0 04 2d bd fe     ra = 1200, jump @1491
      :                          @8069 [@dyn 600]
102937: 82 16 10 02              s1 = u64 [sp + 0x210]
102941: 82 1b 18 02              a4 = u64 [sp + 0x218]
102945: 82 17 08 02              a0 = u64 [sp + 0x208]
102949: 7b 17 70                 u64 [sp + 0x70] = a0
102952: 33 07 02                 a0 = 0x2
102955: 33 08                    a1 = 0
102957: 33 09                    a2 = 0
102959: 64 6a                    a3 = s1
102961: 33 00 b2 04              ra = 0x4b2
102965: 0a 64                    ecalli 100 // 'log'
102967: 01                       fallthrough
      :                          @8070 [@dyn 601]
102968: 82 1c 70                 a5 = u64 [sp + 0x70]
102971: 82 17 68                 a0 = u64 [sp + 0x68]
102974: c8 c7 07                 a0 = a0 + a5
102977: 55 37 00 00 ff 0a        jump @8072 if a0 >=u 4294901760
      :                          @8071
102983: 28 7f 4f 01              jump @12856
      :                          @8072
102987: 33 07 c0 22 03           a0 = 0x322c0
102992: 95 77 00 00 01           a0 = a0 + 0x10000
102997: 01                       fallthrough
      :                          @8073
102998: 82 78                    a1 = u64 [a0]
103000: c9 87 09                 a2 = a0 - a1
103003: aa 69 07                 jump @8075 if a2 == s1
      :                          @8074
103006: 28 68 4f 01              jump @12856
      :                          @8075
103010: c9 c8 09                 a2 = a1 - a5
103013: 01                       fallthrough
      :                          @8076
103014: 82 7a                    a3 = u64 [a0]
103016: ab 8a ee                 jump @8073 if a3 != a1
      :                          @8077
103019: 7b 79                    u64 [a0] = a2
103021: 33 0b                    a4 = 0
103023: 01                       fallthrough
      :                          @8078
103024: ab 8a e6                 jump @8073 if a3 != a1
      :                          @8079
103027: 28 53 4f 01              jump @12856
      :                          @8080 [@dyn 602]
103031: 3a 08 78 12 03           a1 = u64 [0x31278]
103036: 97 89 0d                 a2 = a1 << 0xd
103039: d3 98 08                 a1 = a1 ^ a2
103042: 98 89 07                 a2 = a1 >> 0x7
103045: d3 98 08                 a1 = a1 ^ a2
103048: 3a 09 60 11 03           a2 = u64 [0x31160]
103053: 97 8a 11                 a3 = a1 << 0x11
103056: d3 a8 08                 a1 = a1 ^ a3
103059: ca 98 09                 a2 = a1 * a2
103062: 3e 08 78 12 03           u64 [0x31278] = a1
103067: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
103077: d6 79 07                 a0 = a2 mulhu a0
103080: 98 77 04                 a0 = a0 >> 0x4
103083: 96 77 14                 a0 = a0 * 0x14
103086: c9 79 07                 a0 = a2 - a0
103089: 7b 17 20 01              u64 [sp + 0x120] = a0
103093: 33 00 b6 04              ra = 0x4b6
103097: 95 11 98                 sp = sp + 0xffffffffffffff98
103100: 7b 10 60                 u64 [sp + 0x60] = ra
103103: 7b 15 58                 u64 [sp + 0x58] = s0
103106: 7b 16 50                 u64 [sp + 0x50] = s1
103109: 7b 17 08                 u64 [sp + 0x8] = a0
103112: 95 77 01                 a0 = a0 + 0x1
103115: 7b 17 18                 u64 [sp + 0x18] = a0
103118: 97 79 03                 a2 = a0 << 0x3
103121: 33 07 c0 22 03           a0 = 0x322c0
103126: 33 03 c0 22 03           t1 = 0x322c0
103131: 33 02 00 00 01           t0 = 0x10000
103136: c8 23 0a                 a3 = t1 + t0
103139: 28 96 4b ff              jump @4309
      :                          @8081 [@dyn 603]
103143: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
103147: 95 17 20 01              a0 = sp + 0x120
103151: 7b 17 38 02              u64 [sp + 0x238] = a0
103155: 33 07 28 0c              a0 = 0xc28
103159: 7b 17 40 02              u64 [sp + 0x240] = a0
103163: 95 18 e0 01              a1 = sp + 0x1e0
103167: 7b 18 48 02              u64 [sp + 0x248] = a1
103171: 7b 17 50 02              u64 [sp + 0x250] = a0
103175: 33 07 e8 06 01           a0 = 0x106e8
103180: 7b 17 90 02              u64 [sp + 0x290] = a0
103184: 49 21 98 02 02           u64 [sp + 664] = 0x2
103189: 49 21 b0 02              u64 [sp + 688] = 0
103193: 95 18 38 02              a1 = sp + 0x238
103197: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
103201: 49 21 a8 02 02           u64 [sp + 680] = 0x2
103206: 95 17 08 02              a0 = sp + 0x208
103210: 95 18 90 02              a1 = sp + 0x290
103214: 50 20 b8 04 11 bc fe     ra = 1208, jump @1491
      :                          @8082 [@dyn 604]
103221: 82 16 10 02              s1 = u64 [sp + 0x210]
103225: 82 1b 18 02              a4 = u64 [sp + 0x218]
103229: 82 17 08 02              a0 = u64 [sp + 0x208]
103233: 7b 17 70                 u64 [sp + 0x70] = a0
103236: 33 07 02                 a0 = 0x2
103239: 33 08                    a1 = 0
103241: 33 09                    a2 = 0
103243: 64 6a                    a3 = s1
103245: 33 00 ba 04              ra = 0x4ba
103249: 0a 64                    ecalli 100 // 'log'
103251: 01                       fallthrough
      :                          @8083 [@dyn 605]
103252: 82 1c 70                 a5 = u64 [sp + 0x70]
103255: 82 17 68                 a0 = u64 [sp + 0x68]
103258: c8 c7 07                 a0 = a0 + a5
103261: 55 37 00 00 ff 0a        jump @8085 if a0 >=u 4294901760
      :                          @8084
103267: 28 63 4e 01              jump @12856
      :                          @8085
103271: 33 07 c0 22 03           a0 = 0x322c0
103276: 95 77 00 00 01           a0 = a0 + 0x10000
103281: 01                       fallthrough
      :                          @8086
103282: 82 78                    a1 = u64 [a0]
103284: c9 87 09                 a2 = a0 - a1
103287: aa 69 07                 jump @8088 if a2 == s1
      :                          @8087
103290: 28 4c 4e 01              jump @12856
      :                          @8088
103294: c9 c8 09                 a2 = a1 - a5
103297: 01                       fallthrough
      :                          @8089
103298: 82 7a                    a3 = u64 [a0]
103300: ab 8a ee                 jump @8086 if a3 != a1
      :                          @8090
103303: 7b 79                    u64 [a0] = a2
103305: 33 0b                    a4 = 0
103307: 01                       fallthrough
      :                          @8091
103308: ab 8a e6                 jump @8086 if a3 != a1
      :                          @8092
103311: 28 37 4e 01              jump @12856
      :                          @8093 [@dyn 606]
103315: 3a 08 78 12 03           a1 = u64 [0x31278]
103320: 97 89 0d                 a2 = a1 << 0xd
103323: d3 98 08                 a1 = a1 ^ a2
103326: 98 89 07                 a2 = a1 >> 0x7
103329: d3 98 08                 a1 = a1 ^ a2
103332: 3a 09 60 11 03           a2 = u64 [0x31160]
103337: 97 8a 11                 a3 = a1 << 0x11
103340: d3 a8 08                 a1 = a1 ^ a3
103343: ca 98 09                 a2 = a1 * a2
103346: 3e 08 78 12 03           u64 [0x31278] = a1
103351: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
103361: d6 79 07                 a0 = a2 mulhu a0
103364: 98 77 04                 a0 = a0 >> 0x4
103367: 33 08 14                 a1 = 0x14
103370: ca 87 07                 a0 = a0 * a1
103373: c9 79 07                 a0 = a2 - a0
103376: 7a 17 20 01              u32 [sp + 0x120] = a0
103380: 50 20 be 04 79 4c ff     ra = 1214, jump @4360
      :                          @8094 [@dyn 607]
103387: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
103391: 95 17 20 01              a0 = sp + 0x120
103395: 7b 17 38 02              u64 [sp + 0x238] = a0
103399: 33 07 5e 0c              a0 = 0xc5e
103403: 7b 17 40 02              u64 [sp + 0x240] = a0
103407: 95 17 e0 01              a0 = sp + 0x1e0
103411: 7b 17 48 02              u64 [sp + 0x248] = a0
103415: 33 07 28 0c              a0 = 0xc28
103419: 7b 17 50 02              u64 [sp + 0x250] = a0
103423: 33 07 18 07 01           a0 = 0x10718
103428: 7b 17 90 02              u64 [sp + 0x290] = a0
103432: 49 21 98 02 02           u64 [sp + 664] = 0x2
103437: 49 21 b0 02              u64 [sp + 688] = 0
103441: 95 18 38 02              a1 = sp + 0x238
103445: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
103449: 49 21 a8 02 02           u64 [sp + 680] = 0x2
103454: 95 17 08 02              a0 = sp + 0x208
103458: 95 18 90 02              a1 = sp + 0x290
103462: 50 20 c0 04 19 bb fe     ra = 1216, jump @1491
      :                          @8095 [@dyn 608]
103469: 82 16 10 02              s1 = u64 [sp + 0x210]
103473: 82 1b 18 02              a4 = u64 [sp + 0x218]
103477: 82 17 08 02              a0 = u64 [sp + 0x208]
103481: 7b 17 70                 u64 [sp + 0x70] = a0
103484: 33 07 02                 a0 = 0x2
103487: 33 08                    a1 = 0
103489: 33 09                    a2 = 0
103491: 64 6a                    a3 = s1
103493: 33 00 c2 04              ra = 0x4c2
103497: 0a 64                    ecalli 100 // 'log'
103499: 01                       fallthrough
      :                          @8096 [@dyn 609]
103500: 82 1c 70                 a5 = u64 [sp + 0x70]
103503: 82 17 68                 a0 = u64 [sp + 0x68]
103506: c8 c7 07                 a0 = a0 + a5
103509: 55 37 00 00 ff 0a        jump @8098 if a0 >=u 4294901760
      :                          @8097
103515: 28 6b 4d 01              jump @12856
      :                          @8098
103519: 33 07 c0 22 03           a0 = 0x322c0
103524: 95 77 00 00 01           a0 = a0 + 0x10000
103529: 01                       fallthrough
      :                          @8099
103530: 82 78                    a1 = u64 [a0]
103532: c9 87 09                 a2 = a0 - a1
103535: aa 69 07                 jump @8101 if a2 == s1
      :                          @8100
103538: 28 54 4d 01              jump @12856
      :                          @8101
103542: c9 c8 09                 a2 = a1 - a5
103545: 01                       fallthrough
      :                          @8102
103546: 82 7a                    a3 = u64 [a0]
103548: ab 8a ee                 jump @8099 if a3 != a1
      :                          @8103
103551: 7b 79                    u64 [a0] = a2
103553: 33 0b                    a4 = 0
103555: 01                       fallthrough
      :                          @8104
103556: ab 8a e6                 jump @8099 if a3 != a1
      :                          @8105
103559: 28 3f 4d 01              jump @12856
      :                          @8106 [@dyn 610]
103563: 3a 09 78 12 03           a2 = u64 [0x31278]
103568: 3a 08 60 11 03           a1 = u64 [0x31160]
103573: 97 9a 0d                 a3 = a2 << 0xd
103576: d3 a9 09                 a2 = a2 ^ a3
103579: 98 9a 07                 a3 = a2 >> 0x7
103582: d3 a9 09                 a2 = a2 ^ a3
103585: 97 9a 11                 a3 = a2 << 0x11
103588: d3 a9 09                 a2 = a2 ^ a3
103591: ca 89 0a                 a3 = a2 * a1
103594: 3e 09 78 12 03           u64 [0x31278] = a2
103599: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
103609: d6 9a 09                 a2 = a3 mulhu a2
103612: 98 99 04                 a2 = a2 >> 0x4
103615: 33 0b 14                 a4 = 0x14
103618: ca b9 09                 a2 = a2 * a4
103621: c9 9a 0a                 a3 = a3 - a2
103624: 95 aa 01                 a3 = a3 + 0x1
103627: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
103631: 3a 09 78 12 03           a2 = u64 [0x31278]
103636: 97 9a 0d                 a3 = a2 << 0xd
103639: d3 a9 09                 a2 = a2 ^ a3
103642: 98 9a 07                 a3 = a2 >> 0x7
103645: d3 a9 09                 a2 = a2 ^ a3
103648: 97 9a 11                 a3 = a2 << 0x11
103651: d3 a9 09                 a2 = a2 ^ a3
103654: 3e 09 78 12 03           u64 [0x31278] = a2
103659: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
103663: 52 07 07                 jump @8108 if a0 != 0
      :                          @8107
103666: 28 e8 5e 01              jump @13228
      :                          @8108
103670: ca 89 08                 a1 = a2 * a1
103673: cd 78 08                 a1 = a1 %u a0
103676: 7b 18 20 01              u64 [sp + 0x120] = a1
103680: 50 20 c6 04 8a 4b ff     ra = 1222, jump @4366
      :                          @8109 [@dyn 611]
103687: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
103691: 95 17 c8 01              a0 = sp + 0x1c8
103695: 7b 17 90 02              u64 [sp + 0x290] = a0
103699: 33 07 28 0c              a0 = 0xc28
103703: 7b 17 98 02              u64 [sp + 0x298] = a0
103707: 95 18 20 01              a1 = sp + 0x120
103711: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
103715: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
103719: 95 18 e0 01              a1 = sp + 0x1e0
103723: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
103727: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
103731: 33 07 48 07 01           a0 = 0x10748
103736: 7b 17 38 02              u64 [sp + 0x238] = a0
103740: 49 21 40 02 03           u64 [sp + 576] = 0x3
103745: 49 21 58 02              u64 [sp + 600] = 0
103749: 95 18 90 02              a1 = sp + 0x290
103753: 7b 18 48 02              u64 [sp + 0x248] = a1
103757: 49 21 50 02 03           u64 [sp + 592] = 0x3
103762: 95 17 08 02              a0 = sp + 0x208
103766: 95 18 38 02              a1 = sp + 0x238
103770: 50 20 c8 04 e5 b9 fe     ra = 1224, jump @1491
      :                          @8110 [@dyn 612]
103777: 82 16 10 02              s1 = u64 [sp + 0x210]
103781: 82 1b 18 02              a4 = u64 [sp + 0x218]
103785: 82 17 08 02              a0 = u64 [sp + 0x208]
103789: 7b 17 70                 u64 [sp + 0x70] = a0
103792: 33 07 02                 a0 = 0x2
103795: 33 08                    a1 = 0
103797: 33 09                    a2 = 0
103799: 64 6a                    a3 = s1
103801: 33 00 ca 04              ra = 0x4ca
103805: 0a 64                    ecalli 100 // 'log'
103807: 01                       fallthrough
      :                          @8111 [@dyn 613]
103808: 82 1c 70                 a5 = u64 [sp + 0x70]
103811: 82 17 68                 a0 = u64 [sp + 0x68]
103814: c8 c7 07                 a0 = a0 + a5
103817: 55 37 00 00 ff 0a        jump @8113 if a0 >=u 4294901760
      :                          @8112
103823: 28 37 4c 01              jump @12856
      :                          @8113
103827: 33 07 c0 22 03           a0 = 0x322c0
103832: 95 77 00 00 01           a0 = a0 + 0x10000
103837: 01                       fallthrough
      :                          @8114
103838: 82 78                    a1 = u64 [a0]
103840: c9 87 09                 a2 = a0 - a1
103843: aa 69 07                 jump @8116 if a2 == s1
      :                          @8115
103846: 28 20 4c 01              jump @12856
      :                          @8116
103850: c9 c8 09                 a2 = a1 - a5
103853: 01                       fallthrough
      :                          @8117
103854: 82 7a                    a3 = u64 [a0]
103856: ab 8a ee                 jump @8114 if a3 != a1
      :                          @8118
103859: 7b 79                    u64 [a0] = a2
103861: 33 0b                    a4 = 0
103863: 01                       fallthrough
      :                          @8119
103864: ab 8a e6                 jump @8114 if a3 != a1
      :                          @8120
103867: 28 0b 4c 01              jump @12856
      :                          @8121 [@dyn 614]
103871: 3a 09 78 12 03           a2 = u64 [0x31278]
103876: 3a 08 60 11 03           a1 = u64 [0x31160]
103881: 97 9a 0d                 a3 = a2 << 0xd
103884: d3 a9 09                 a2 = a2 ^ a3
103887: 98 9a 07                 a3 = a2 >> 0x7
103890: d3 a9 09                 a2 = a2 ^ a3
103893: 97 9a 11                 a3 = a2 << 0x11
103896: d3 a9 09                 a2 = a2 ^ a3
103899: ca 89 0a                 a3 = a2 * a1
103902: 3e 09 78 12 03           u64 [0x31278] = a2
103907: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
103917: d6 9a 09                 a2 = a3 mulhu a2
103920: 98 99 04                 a2 = a2 >> 0x4
103923: 33 0b 14                 a4 = 0x14
103926: ca b9 09                 a2 = a2 * a4
103929: c9 9a 0a                 a3 = a3 - a2
103932: 95 aa 01                 a3 = a3 + 0x1
103935: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
103939: 3a 09 78 12 03           a2 = u64 [0x31278]
103944: 97 9a 0d                 a3 = a2 << 0xd
103947: d3 a9 09                 a2 = a2 ^ a3
103950: 98 9a 07                 a3 = a2 >> 0x7
103953: d3 a9 09                 a2 = a2 ^ a3
103956: 97 9a 11                 a3 = a2 << 0x11
103959: d3 a9 09                 a2 = a2 ^ a3
103962: 3e 09 78 12 03           u64 [0x31278] = a2
103967: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
103971: 52 07 07                 jump @8123 if a0 != 0
      :                          @8122
103974: 28 b4 5d 01              jump @13228
      :                          @8123
103978: ca 89 08                 a1 = a2 * a1
103981: cd 78 08                 a1 = a1 %u a0
103984: 95 88 01                 a1 = a1 + 0x1
103987: 7b 18 20 01              u64 [sp + 0x120] = a1
103991: 50 20 ce 04 da 4c ff     ra = 1230, jump @4446
      :                          @8124 [@dyn 615]
103998: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
104002: 95 17 c8 01              a0 = sp + 0x1c8
104006: 7b 17 90 02              u64 [sp + 0x290] = a0
104010: 33 07 28 0c              a0 = 0xc28
104014: 7b 17 98 02              u64 [sp + 0x298] = a0
104018: 95 18 20 01              a1 = sp + 0x120
104022: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
104026: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
104030: 95 18 e0 01              a1 = sp + 0x1e0
104034: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
104038: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
104042: 33 07 88 07 01           a0 = 0x10788
104047: 7b 17 38 02              u64 [sp + 0x238] = a0
104051: 49 21 40 02 03           u64 [sp + 576] = 0x3
104056: 49 21 58 02              u64 [sp + 600] = 0
104060: 95 18 90 02              a1 = sp + 0x290
104064: 7b 18 48 02              u64 [sp + 0x248] = a1
104068: 49 21 50 02 03           u64 [sp + 592] = 0x3
104073: 95 17 08 02              a0 = sp + 0x208
104077: 95 18 38 02              a1 = sp + 0x238
104081: 50 20 d0 04 ae b8 fe     ra = 1232, jump @1491
      :                          @8125 [@dyn 616]
104088: 82 16 10 02              s1 = u64 [sp + 0x210]
104092: 82 1b 18 02              a4 = u64 [sp + 0x218]
104096: 82 17 08 02              a0 = u64 [sp + 0x208]
104100: 7b 17 70                 u64 [sp + 0x70] = a0
104103: 33 07 02                 a0 = 0x2
104106: 33 08                    a1 = 0
104108: 33 09                    a2 = 0
104110: 64 6a                    a3 = s1
104112: 33 00 d2 04              ra = 0x4d2
104116: 0a 64                    ecalli 100 // 'log'
104118: 01                       fallthrough
      :                          @8126 [@dyn 617]
104119: 82 1c 70                 a5 = u64 [sp + 0x70]
104122: 82 17 68                 a0 = u64 [sp + 0x68]
104125: c8 c7 07                 a0 = a0 + a5
104128: 55 37 00 00 ff 0a        jump @8128 if a0 >=u 4294901760
      :                          @8127
104134: 28 00 4b 01              jump @12856
      :                          @8128
104138: 33 07 c0 22 03           a0 = 0x322c0
104143: 95 77 00 00 01           a0 = a0 + 0x10000
104148: 01                       fallthrough
      :                          @8129
104149: 82 78                    a1 = u64 [a0]
104151: c9 87 09                 a2 = a0 - a1
104154: aa 69 07                 jump @8131 if a2 == s1
      :                          @8130
104157: 28 e9 4a 01              jump @12856
      :                          @8131
104161: c9 c8 09                 a2 = a1 - a5
104164: 01                       fallthrough
      :                          @8132
104165: 82 7a                    a3 = u64 [a0]
104167: ab 8a ee                 jump @8129 if a3 != a1
      :                          @8133
104170: 7b 79                    u64 [a0] = a2
104172: 33 0b                    a4 = 0
104174: 01                       fallthrough
      :                          @8134
104175: ab 8a e6                 jump @8129 if a3 != a1
      :                          @8135
104178: 28 d4 4a 01              jump @12856
      :                          @8136 [@dyn 618]
104182: 3a 08 78 12 03           a1 = u64 [0x31278]
104187: 97 89 0d                 a2 = a1 << 0xd
104190: d3 98 08                 a1 = a1 ^ a2
104193: 98 89 07                 a2 = a1 >> 0x7
104196: d3 98 08                 a1 = a1 ^ a2
104199: 3a 09 60 11 03           a2 = u64 [0x31160]
104204: 97 8a 11                 a3 = a1 << 0x11
104207: d3 a8 08                 a1 = a1 ^ a3
104210: ca 98 09                 a2 = a1 * a2
104213: 3e 08 78 12 03           u64 [0x31278] = a1
104218: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
104228: d6 79 07                 a0 = a2 mulhu a0
104231: 98 77 04                 a0 = a0 >> 0x4
104234: 96 77 14                 a0 = a0 * 0x14
104237: c9 79 07                 a0 = a2 - a0
104240: 7b 17 20 01              u64 [sp + 0x120] = a0
104244: 50 20 d6 04 60 4c ff     ra = 1238, jump @4455
      :                          @8137 [@dyn 619]
104251: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
104255: 95 17 20 01              a0 = sp + 0x120
104259: 7b 17 38 02              u64 [sp + 0x238] = a0
104263: 33 07 28 0c              a0 = 0xc28
104267: 7b 17 40 02              u64 [sp + 0x240] = a0
104271: 95 18 e0 01              a1 = sp + 0x1e0
104275: 7b 18 48 02              u64 [sp + 0x248] = a1
104279: 7b 17 50 02              u64 [sp + 0x250] = a0
104283: 33 07 b8 07 01           a0 = 0x107b8
104288: 7b 17 90 02              u64 [sp + 0x290] = a0
104292: 49 21 98 02 02           u64 [sp + 664] = 0x2
104297: 49 21 b0 02              u64 [sp + 688] = 0
104301: 95 18 38 02              a1 = sp + 0x238
104305: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
104309: 49 21 a8 02 02           u64 [sp + 680] = 0x2
104314: 95 17 08 02              a0 = sp + 0x208
104318: 95 18 90 02              a1 = sp + 0x290
104322: 50 20 d8 04 bd b7 fe     ra = 1240, jump @1491
      :                          @8138 [@dyn 620]
104329: 82 16 10 02              s1 = u64 [sp + 0x210]
104333: 82 1b 18 02              a4 = u64 [sp + 0x218]
104337: 82 17 08 02              a0 = u64 [sp + 0x208]
104341: 7b 17 70                 u64 [sp + 0x70] = a0
104344: 33 07 02                 a0 = 0x2
104347: 33 08                    a1 = 0
104349: 33 09                    a2 = 0
104351: 64 6a                    a3 = s1
104353: 33 00 da 04              ra = 0x4da
104357: 0a 64                    ecalli 100 // 'log'
104359: 01                       fallthrough
      :                          @8139 [@dyn 621]
104360: 82 1c 70                 a5 = u64 [sp + 0x70]
104363: 82 17 68                 a0 = u64 [sp + 0x68]
104366: c8 c7 07                 a0 = a0 + a5
104369: 55 37 00 00 ff 0a        jump @8141 if a0 >=u 4294901760
      :                          @8140
104375: 28 0f 4a 01              jump @12856
      :                          @8141
104379: 33 07 c0 22 03           a0 = 0x322c0
104384: 95 77 00 00 01           a0 = a0 + 0x10000
104389: 01                       fallthrough
      :                          @8142
104390: 82 78                    a1 = u64 [a0]
104392: c9 87 09                 a2 = a0 - a1
104395: aa 69 07                 jump @8144 if a2 == s1
      :                          @8143
104398: 28 f8 49 01              jump @12856
      :                          @8144
104402: c9 c8 09                 a2 = a1 - a5
104405: 01                       fallthrough
      :                          @8145
104406: 82 7a                    a3 = u64 [a0]
104408: ab 8a ee                 jump @8142 if a3 != a1
      :                          @8146
104411: 7b 79                    u64 [a0] = a2
104413: 33 0b                    a4 = 0
104415: 01                       fallthrough
      :                          @8147
104416: ab 8a e6                 jump @8142 if a3 != a1
      :                          @8148
104419: 28 e3 49 01              jump @12856
      :                          @8149 [@dyn 622]
104423: 95 17 90 02              a0 = sp + 0x290
104427: 33 09 04                 a2 = 0x4
104430: 33 08                    a1 = 0
104432: 50 20 de 04 f9 cb fe     ra = 1246, jump @1877
      :                          @8150 [@dyn 623]
104439: 95 17 20 01              a0 = sp + 0x120
104443: 95 18 90 02              a1 = sp + 0x290
104447: 33 09 04                 a2 = 0x4
104450: 50 20 e0 04 12 c6 fe     ra = 1248, jump @1783
      :                          @8151 [@dyn 624]
104457: 33 04 04                 t2 = 0x4
104460: 33 07                    a0 = 0
104462: 33 0c 10                 a5 = 0x10
104465: 33 0a 78 12 03           a3 = 0x31278
104470: 33 02 02                 t0 = 0x2
104473: 33 03 03                 t1 = 0x3
104476: 33 06 70                 s1 = 0x70
104479: 01                       fallthrough
      :                          @8152
104480: 3a 08 78 12 03           a1 = u64 [0x31278]
104485: 97 89 0d                 a2 = a1 << 0xd
104488: d3 98 08                 a1 = a1 ^ a2
104491: 98 8b 07                 a4 = a1 >> 0x7
104494: d3 8b 0b                 a4 = a4 ^ a1
104497: 97 b8 11                 a1 = a4 << 0x11
104500: d3 b8 08                 a1 = a1 ^ a4
104503: 3e 08 78 12 03           u64 [0x31278] = a1
104508: 82 18 30 01              a1 = u64 [sp + 0x130]
104512: ac 87 07                 jump @8154 if a0 <u a1
      :                          @8153
104515: 28 8c 5b 01              jump @13217
      :                          @8154
104519: 82 18 28 01              a1 = u64 [sp + 0x128]
104523: c8 c8 08                 a1 = a1 + a5
104526: 82 89                    a2 = u64 [a1]
104528: 52 09 07                 jump @8156 if a2 != 0
      :                          @8155
104531: 28 78 5b 01              jump @13215
      :                          @8156
104535: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
104538: 84 bb 01                 a4 = a4 & 0x1
104541: 7b 8b                    u64 [a1] = a4
104543: 3a 08 78 12 03           a1 = u64 [0x31278]
104548: 97 89 0d                 a2 = a1 << 0xd
104551: d3 98 08                 a1 = a1 ^ a2
104554: 98 8b 07                 a4 = a1 >> 0x7
104557: d3 8b 0b                 a4 = a4 ^ a1
104560: 97 b8 11                 a1 = a4 << 0x11
104563: d3 b8 08                 a1 = a1 ^ a4
104566: 3e 08 78 12 03           u64 [0x31278] = a1
104571: 82 18 30 01              a1 = u64 [sp + 0x130]
104575: ac 87 07                 jump @8158 if a0 <u a1
      :                          @8157
104578: 28 4d 5b 01              jump @13217
      :                          @8158
104582: 82 19 28 01              a2 = u64 [sp + 0x128]
104586: c8 c9 09                 a2 = a2 + a5
104589: 82 98                    a1 = u64 [a2]
104591: ae 28 07                 jump @8160 if a1 >=u t0
      :                          @8159
104594: 28 74 5a 01              jump @13197
      :                          @8160
104598: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
104601: 84 bb 01                 a4 = a4 & 0x1
104604: 7b 8b 08                 u64 [a1 + 0x8] = a4
104607: 3a 08 78 12 03           a1 = u64 [0x31278]
104612: 97 89 0d                 a2 = a1 << 0xd
104615: d3 98 08                 a1 = a1 ^ a2
104618: 98 8b 07                 a4 = a1 >> 0x7
104621: d3 8b 0b                 a4 = a4 ^ a1
104624: 97 b8 11                 a1 = a4 << 0x11
104627: d3 b8 08                 a1 = a1 ^ a4
104630: 3e 08 78 12 03           u64 [0x31278] = a1
104635: 82 18 30 01              a1 = u64 [sp + 0x130]
104639: ac 87 07                 jump @8162 if a0 <u a1
      :                          @8161
104642: 28 0d 5b 01              jump @13217
      :                          @8162
104646: 82 19 28 01              a2 = u64 [sp + 0x128]
104650: c8 c9 09                 a2 = a2 + a5
104653: 82 98                    a1 = u64 [a2]
104655: ae 38 07                 jump @8164 if a1 >=u t1
      :                          @8163
104658: 28 36 5a 01              jump @13199
      :                          @8164
104662: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
104665: 84 bb 01                 a4 = a4 & 0x1
104668: 7b 8b 10                 u64 [a1 + 0x10] = a4
104671: 3a 08 78 12 03           a1 = u64 [0x31278]
104676: 97 89 0d                 a2 = a1 << 0xd
104679: d3 98 08                 a1 = a1 ^ a2
104682: 98 8b 07                 a4 = a1 >> 0x7
104685: d3 8b 0b                 a4 = a4 ^ a1
104688: 97 b8 11                 a1 = a4 << 0x11
104691: d3 b8 08                 a1 = a1 ^ a4
104694: 3e 08 78 12 03           u64 [0x31278] = a1
104699: 82 18 30 01              a1 = u64 [sp + 0x130]
104703: ac 87 07                 jump @8166 if a0 <u a1
      :                          @8165
104706: 28 cd 5a 01              jump @13217
      :                          @8166
104710: 82 19 28 01              a2 = u64 [sp + 0x128]
104714: c8 c9 09                 a2 = a2 + a5
104717: 82 98                    a1 = u64 [a2]
104719: ae 48 07                 jump @8168 if a1 >=u t2
      :                          @8167
104722: 28 f5 59 01              jump @13198
      :                          @8168
104726: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
104729: 84 bb 01                 a4 = a4 & 0x1
104732: 7b 8b 18                 u64 [a1 + 0x18] = a4
104735: 95 cc 18                 a5 = a5 + 0x18
104738: 95 77 01                 a0 = a0 + 0x1
104741: ab 6c fb fe              jump @8152 if a5 != s1
      :                          @8169
104745: 3a 08 78 12 03           a1 = u64 [0x31278]
104750: 97 89 0d                 a2 = a1 << 0xd
104753: d3 98 08                 a1 = a1 ^ a2
104756: 98 89 07                 a2 = a1 >> 0x7
104759: d3 98 08                 a1 = a1 ^ a2
104762: 3a 09 60 11 03           a2 = u64 [0x31160]
104767: 97 8a 11                 a3 = a1 << 0x11
104770: d3 a8 08                 a1 = a1 ^ a3
104773: ca 98 09                 a2 = a1 * a2
104776: 3e 08 78 12 03           u64 [0x31278] = a1
104781: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
104791: d6 79 07                 a0 = a2 mulhu a0
104794: 98 78 02                 a1 = a0 >> 0x2
104797: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
104800: c8 87 07                 a0 = a0 + a1
104803: bf 79 09                 i32 a2 = a2 - a0
104806: 83 99 01                 i32 a2 = a2 + 0x1
104809: 7a 19 c8 01              u32 [sp + 0x1c8] = a2
104813: 95 17 e0 01              a0 = sp + 0x1e0
104817: 95 18 20 01              a1 = sp + 0x120
104821: 95 16 e0 01              s1 = sp + 0x1e0
104825: 50 20 e2 04 c8 4c ff     ra = 1250, jump @4508
      :                          @8170 [@dyn 625]
104832: 95 17 c8 01              a0 = sp + 0x1c8
104836: 7b 17 38 02              u64 [sp + 0x238] = a0
104840: 33 07 5e 0c              a0 = 0xc5e
104844: 7b 17 40 02              u64 [sp + 0x240] = a0
104848: 7b 16 48 02              u64 [sp + 0x248] = s1
104852: 33 07 30 02              a0 = 0x230
104856: 7b 17 50 02              u64 [sp + 0x250] = a0
104860: 33 07 e0 07 01           a0 = 0x107e0
104865: 7b 17 90 02              u64 [sp + 0x290] = a0
104869: 49 21 98 02 02           u64 [sp + 664] = 0x2
104874: 49 21 b0 02              u64 [sp + 688] = 0
104878: 95 18 38 02              a1 = sp + 0x238
104882: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
104886: 49 21 a8 02 02           u64 [sp + 680] = 0x2
104891: 95 17 08 02              a0 = sp + 0x208
104895: 95 18 90 02              a1 = sp + 0x290
104899: 50 20 e4 04 7c b5 fe     ra = 1252, jump @1491
      :                          @8171 [@dyn 626]
104906: 82 16 10 02              s1 = u64 [sp + 0x210]
104910: 82 1b 18 02              a4 = u64 [sp + 0x218]
104914: 82 17 08 02              a0 = u64 [sp + 0x208]
104918: 7b 17 70                 u64 [sp + 0x70] = a0
104921: 33 07 02                 a0 = 0x2
104924: 33 08                    a1 = 0
104926: 33 09                    a2 = 0
104928: 64 6a                    a3 = s1
104930: 33 00 e6 04              ra = 0x4e6
104934: 0a 64                    ecalli 100 // 'log'
104936: 01                       fallthrough
      :                          @8172 [@dyn 627]
104937: 82 1c 70                 a5 = u64 [sp + 0x70]
104940: 82 17 68                 a0 = u64 [sp + 0x68]
104943: c8 c7 07                 a0 = a0 + a5
104946: 33 08 00 00 ff           a1 = 0xffffffffffff0000
104951: ac 87 2f                 jump @8178 if a0 <u a1
      :                          @8173
104954: 33 07 c0 22 03           a0 = 0x322c0
104959: 95 77 00 00 01           a0 = a0 + 0x10000
104964: 01                       fallthrough
      :                          @8174
104965: 82 78                    a1 = u64 [a0]
104967: c9 87 09                 a2 = a0 - a1
104970: ab 69 1c                 jump @8178 if a2 != s1
      :                          @8175
104973: c9 c8 09                 a2 = a1 - a5
104976: 01                       fallthrough
      :                          @8176
104977: 82 7a                    a3 = u64 [a0]
104979: ab 8a f2                 jump @8174 if a3 != a1
      :                          @8177
104982: 7b 79                    u64 [a0] = a2
104984: 33 0b                    a4 = 0
104986: 95 17 e0 01              a0 = sp + 0x1e0
104990: 33 00 e8 04              ra = 0x4e8
104994: 28 37 72 fe              jump @229
      :                          @8178
104998: 95 17 e0 01              a0 = sp + 0x1e0
105002: 50 20 e8 04 2f 72 fe     ra = 1256, jump @229
      :                          @8179 [@dyn 628]
105009: 95 17 20 01              a0 = sp + 0x120
105013: 50 20 ea 04 24 72 fe     ra = 1258, jump @229
      :                          @8180 [@dyn 629]
105020: 28 8a 47 01              jump @12856
      :                          @8181 [@dyn 630]
105024: 95 17 90 02              a0 = sp + 0x290
105028: 33 08 06                 a1 = 0x6
105031: 50 20 ee 04 61 c3 fe     ra = 1262, jump @1776
      :                          @8182 [@dyn 631]
105038: 95 17 08 02              a0 = sp + 0x208
105042: 95 18 90 02              a1 = sp + 0x290
105046: 33 09 06                 a2 = 0x6
105049: 50 20 f0 04 6f ca fe     ra = 1264, jump @1895
      :                          @8183 [@dyn 632]
105056: 3a 07 78 12 03           a0 = u64 [0x31278]
105061: 97 79 0d                 a2 = a0 << 0xd
105064: d3 97 07                 a0 = a0 ^ a2
105067: 98 79 07                 a2 = a0 >> 0x7
105070: d3 97 07                 a0 = a0 ^ a2
105073: 97 79 11                 a2 = a0 << 0x11
105076: d3 79 09                 a2 = a2 ^ a0
105079: 3e 09 78 12 03           u64 [0x31278] = a2
105084: 82 1c 18 02              a5 = u64 [sp + 0x218]
105088: 52 0c 07                 jump @8185 if a5 != 0
      :                          @8184
105091: 28 54 59 01              jump @13225
      :                          @8185
105095: 82 1b 10 02              a4 = u64 [sp + 0x210]
105099: 82 b9 10                 a2 = u64 [a4 + 0x10]
105102: 56 19 01 08              jump @8187 if a2 >u 1
      :                          @8186
105106: 28 50 59 01              jump @13236
      :                          @8187
105110: 82 b8 08                 a1 = u64 [a4 + 0x8]
105113: 84 79 01                 a2 = a0 & 0x1
105116: 78 89 01                 u8 [a1 + 0x1] = a2
105119: 56 1c 01 08              jump @8189 if a5 >u 1
      :                          @8188
105123: 28 2c 59 01              jump @13217
      :                          @8189
105127: 82 b7 28                 a0 = u64 [a4 + 0x28]
105130: 52 07 07                 jump @8191 if a0 != 0
      :                          @8190
105133: 28 39 59 01              jump @13240
      :                          @8191
105137: 82 b7 20                 a0 = u64 [a4 + 0x20]
105140: 78 79                    u8 [a0] = a2
105142: 3a 07 78 12 03           a0 = u64 [0x31278]
105147: 97 79 0d                 a2 = a0 << 0xd
105150: d3 97 07                 a0 = a0 ^ a2
105153: 98 79 07                 a2 = a0 >> 0x7
105156: d3 97 07                 a0 = a0 ^ a2
105159: 97 79 11                 a2 = a0 << 0x11
105162: d3 79 09                 a2 = a2 ^ a0
105165: 3e 09 78 12 03           u64 [0x31278] = a2
105170: 82 18 18 02              a1 = u64 [sp + 0x218]
105174: 52 08 07                 jump @8193 if a1 != 0
      :                          @8192
105177: 28 f5 58 01              jump @13216
      :                          @8193
105181: 82 1a 10 02              a3 = u64 [sp + 0x210]
105185: 82 a9 10                 a2 = u64 [a3 + 0x10]
105188: 55 19 03 08              jump @8195 if a2 >=u 3
      :                          @8194
105192: 28 06 59 01              jump @13248
      :                          @8195
105196: 82 a9 08                 a2 = u64 [a3 + 0x8]
105199: 84 77 01                 a0 = a0 & 0x1
105202: 78 97 02                 u8 [a2 + 0x2] = a0
105205: 55 18 03 08              jump @8197 if a1 >=u 3
      :                          @8196
105209: 28 0f 58 01              jump @13199
      :                          @8197
105213: 82 a8 40                 a1 = u64 [a3 + 0x40]
105216: 52 08 07                 jump @8199 if a1 != 0
      :                          @8198
105219: 28 cb 58 01              jump @13216
      :                          @8199
105223: 82 a8 38                 a1 = u64 [a3 + 0x38]
105226: 78 87                    u8 [a1] = a0
105228: 3a 07 78 12 03           a0 = u64 [0x31278]
105233: 97 79 0d                 a2 = a0 << 0xd
105236: d3 97 07                 a0 = a0 ^ a2
105239: 98 79 07                 a2 = a0 >> 0x7
105242: d3 97 07                 a0 = a0 ^ a2
105245: 97 79 11                 a2 = a0 << 0x11
105248: d3 79 09                 a2 = a2 ^ a0
105251: 3e 09 78 12 03           u64 [0x31278] = a2
105256: 82 18 18 02              a1 = u64 [sp + 0x218]
105260: 52 08 07                 jump @8201 if a1 != 0
      :                          @8200
105263: 28 9f 58 01              jump @13216
      :                          @8201
105267: 82 1a 10 02              a3 = u64 [sp + 0x210]
105271: 82 a9 10                 a2 = u64 [a3 + 0x10]
105274: 55 19 04 08              jump @8203 if a2 >=u 4
      :                          @8202
105278: 28 a3 58 01              jump @13235
      :                          @8203
105282: 82 a9 08                 a2 = u64 [a3 + 0x8]
105285: 84 77 01                 a0 = a0 & 0x1
105288: 78 97 03                 u8 [a2 + 0x3] = a0
105291: 55 18 04 08              jump @8205 if a1 >=u 4
      :                          @8204
105295: 28 b8 57 01              jump @13198
      :                          @8205
105299: 82 a8 58                 a1 = u64 [a3 + 0x58]
105302: 52 08 07                 jump @8207 if a1 != 0
      :                          @8206
105305: 28 75 58 01              jump @13216
      :                          @8207
105309: 82 a8 50                 a1 = u64 [a3 + 0x50]
105312: 78 87                    u8 [a1] = a0
105314: 3a 07 78 12 03           a0 = u64 [0x31278]
105319: 97 79 0d                 a2 = a0 << 0xd
105322: d3 97 07                 a0 = a0 ^ a2
105325: 98 79 07                 a2 = a0 >> 0x7
105328: d3 97 07                 a0 = a0 ^ a2
105331: 97 79 11                 a2 = a0 << 0x11
105334: d3 79 09                 a2 = a2 ^ a0
105337: 3e 09 78 12 03           u64 [0x31278] = a2
105342: 82 18 18 02              a1 = u64 [sp + 0x218]
105346: 52 08 07                 jump @8209 if a1 != 0
      :                          @8208
105349: 28 49 58 01              jump @13216
      :                          @8209
105353: 82 1a 10 02              a3 = u64 [sp + 0x210]
105357: 82 a9 10                 a2 = u64 [a3 + 0x10]
105360: 55 19 05 08              jump @8211 if a2 >=u 5
      :                          @8210
105364: 28 5b 58 01              jump @13249
      :                          @8211
105368: 82 a9 08                 a2 = u64 [a3 + 0x8]
105371: 84 77 01                 a0 = a0 & 0x1
105374: 78 97 04                 u8 [a2 + 0x4] = a0
105377: 55 18 05 08              jump @8213 if a1 >=u 5
      :                          @8212
105381: 28 2c 58 01              jump @13219
      :                          @8213
105385: 82 a8 70                 a1 = u64 [a3 + 0x70]
105388: 52 08 07                 jump @8215 if a1 != 0
      :                          @8214
105391: 28 1f 58 01              jump @13216
      :                          @8215
105395: 82 a8 68                 a1 = u64 [a3 + 0x68]
105398: 78 87                    u8 [a1] = a0
105400: 3a 07 78 12 03           a0 = u64 [0x31278]
105405: 97 79 0d                 a2 = a0 << 0xd
105408: d3 97 07                 a0 = a0 ^ a2
105411: 98 79 07                 a2 = a0 >> 0x7
105414: d3 97 07                 a0 = a0 ^ a2
105417: 97 79 11                 a2 = a0 << 0x11
105420: d3 79 09                 a2 = a2 ^ a0
105423: 3e 09 78 12 03           u64 [0x31278] = a2
105428: 82 18 18 02              a1 = u64 [sp + 0x218]
105432: 52 08 07                 jump @8217 if a1 != 0
      :                          @8216
105435: 28 f3 57 01              jump @13216
      :                          @8217
105439: 82 1a 10 02              a3 = u64 [sp + 0x210]
105443: 82 a9 10                 a2 = u64 [a3 + 0x10]
105446: 55 19 06 08              jump @8219 if a2 >=u 6
      :                          @8218
105450: 28 0c 58 01              jump @13254
      :                          @8219
105454: 82 a9 08                 a2 = u64 [a3 + 0x8]
105457: 84 77 01                 a0 = a0 & 0x1
105460: 78 97 05                 u8 [a2 + 0x5] = a0
105463: 55 18 06 08              jump @8221 if a1 >=u 6
      :                          @8220
105467: 28 da 57 01              jump @13223
      :                          @8221
105471: 82 a8 88 00              a1 = u64 [a3 + 0x88]
105475: 52 08 07                 jump @8223 if a1 != 0
      :                          @8222
105478: 28 c8 57 01              jump @13216
      :                          @8223
105482: 82 a8 80 00              a1 = u64 [a3 + 0x80]
105486: 78 87                    u8 [a1] = a0
105488: 3a 07 78 12 03           a0 = u64 [0x31278]
105493: 97 79 0d                 a2 = a0 << 0xd
105496: d3 97 07                 a0 = a0 ^ a2
105499: 98 79 07                 a2 = a0 >> 0x7
105502: d3 97 07                 a0 = a0 ^ a2
105505: 97 79 11                 a2 = a0 << 0x11
105508: d3 79 09                 a2 = a2 ^ a0
105511: 3e 09 78 12 03           u64 [0x31278] = a2
105516: 82 18 18 02              a1 = u64 [sp + 0x218]
105520: 55 18 02 08              jump @8225 if a1 >=u 2
      :                          @8224
105524: 28 d2 56 01              jump @13197
      :                          @8225
105528: 82 1b 10 02              a4 = u64 [sp + 0x210]
105532: 82 b9 28                 a2 = u64 [a4 + 0x28]
105535: 33 0c 03                 a5 = 0x3
105538: ae c9 07                 jump @8227 if a2 >=u a5
      :                          @8226
105541: 28 9d 57 01              jump @13236
      :                          @8227
105545: 82 ba 20                 a3 = u64 [a4 + 0x20]
105548: 84 79 01                 a2 = a0 & 0x1
105551: 78 a9 02                 u8 [a3 + 0x2] = a2
105554: 55 18 03 08              jump @8229 if a1 >=u 3
      :                          @8228
105558: 28 96 57 01              jump @13246
      :                          @8229
105562: 82 b8 40                 a1 = u64 [a4 + 0x40]
105565: 55 18 02 08              jump @8231 if a1 >=u 2
      :                          @8230
105569: 28 a5 56 01              jump @13197
      :                          @8231
105573: 82 b8 38                 a1 = u64 [a4 + 0x38]
105576: 78 89 01                 u8 [a1 + 0x1] = a2
105579: 3a 09 78 12 03           a2 = u64 [0x31278]
105584: 97 9a 0d                 a3 = a2 << 0xd
105587: d3 a9 09                 a2 = a2 ^ a3
105590: 98 9a 07                 a3 = a2 >> 0x7
105593: d3 9a 0a                 a3 = a3 ^ a2
105596: 97 a9 11                 a2 = a3 << 0x11
105599: d3 a9 09                 a2 = a2 ^ a3
105602: 3e 09 78 12 03           u64 [0x31278] = a2
105607: 82 18 18 02              a1 = u64 [sp + 0x218]
105611: 55 18 02 08              jump @8233 if a1 >=u 2
      :                          @8232
105615: 28 49 57 01              jump @13226
      :                          @8233
105619: 82 1b 10 02              a4 = u64 [sp + 0x210]
105623: 82 b9 28                 a2 = u64 [a4 + 0x28]
105626: 55 19 04 08              jump @8235 if a2 >=u 4
      :                          @8234
105630: 28 43 57 01              jump @13235
      :                          @8235
105634: 82 b9 20                 a2 = u64 [a4 + 0x20]
105637: 84 aa 01                 a3 = a3 & 0x1
105640: 78 9a 03                 u8 [a2 + 0x3] = a3
105643: 55 18 04 08              jump @8237 if a1 >=u 4
      :                          @8236
105647: 28 30 57 01              jump @13233
      :                          @8237
105651: 82 b8 58                 a1 = u64 [a4 + 0x58]
105654: 55 18 02 08              jump @8239 if a1 >=u 2
      :                          @8238
105658: 28 1e 57 01              jump @13226
      :                          @8239
105662: 82 b8 50                 a1 = u64 [a4 + 0x50]
105665: 78 8a 01                 u8 [a1 + 0x1] = a3
105668: 3a 09 78 12 03           a2 = u64 [0x31278]
105673: 97 9a 0d                 a3 = a2 << 0xd
105676: d3 a9 09                 a2 = a2 ^ a3
105679: 98 9a 07                 a3 = a2 >> 0x7
105682: d3 9a 0a                 a3 = a3 ^ a2
105685: 97 a9 11                 a2 = a3 << 0x11
105688: d3 a9 09                 a2 = a2 ^ a3
105691: 3e 09 78 12 03           u64 [0x31278] = a2
105696: 82 18 18 02              a1 = u64 [sp + 0x218]
105700: 55 18 02 08              jump @8241 if a1 >=u 2
      :                          @8240
105704: 28 f0 56 01              jump @13226
      :                          @8241
105708: 82 1b 10 02              a4 = u64 [sp + 0x210]
105712: 82 b9 28                 a2 = u64 [a4 + 0x28]
105715: 55 19 05 08              jump @8243 if a2 >=u 5
      :                          @8242
105719: 28 ec 56 01              jump @13237
      :                          @8243
105723: 82 b9 20                 a2 = u64 [a4 + 0x20]
105726: 84 aa 01                 a3 = a3 & 0x1
105729: 78 9a 04                 u8 [a2 + 0x4] = a3
105732: 55 18 05 08              jump @8245 if a1 >=u 5
      :                          @8244
105736: 28 d8 56 01              jump @13234
      :                          @8245
105740: 82 b8 70                 a1 = u64 [a4 + 0x70]
105743: 55 18 02 08              jump @8247 if a1 >=u 2
      :                          @8246
105747: 28 c5 56 01              jump @13226
      :                          @8247
105751: 82 b8 68                 a1 = u64 [a4 + 0x68]
105754: 78 8a 01                 u8 [a1 + 0x1] = a3
105757: 3a 09 78 12 03           a2 = u64 [0x31278]
105762: 97 9a 0d                 a3 = a2 << 0xd
105765: d3 a9 09                 a2 = a2 ^ a3
105768: 98 9a 07                 a3 = a2 >> 0x7
105771: d3 9a 0a                 a3 = a3 ^ a2
105774: 97 a9 11                 a2 = a3 << 0x11
105777: d3 a9 09                 a2 = a2 ^ a3
105780: 3e 09 78 12 03           u64 [0x31278] = a2
105785: 82 18 18 02              a1 = u64 [sp + 0x218]
105789: 55 18 02 08              jump @8249 if a1 >=u 2
      :                          @8248
105793: 28 97 56 01              jump @13226
      :                          @8249
105797: 82 1b 10 02              a4 = u64 [sp + 0x210]
105801: 82 b9 28                 a2 = u64 [a4 + 0x28]
105804: 55 19 06 08              jump @8251 if a2 >=u 6
      :                          @8250
105808: 28 94 56 01              jump @13238
      :                          @8251
105812: 82 b9 20                 a2 = u64 [a4 + 0x20]
105815: 84 aa 01                 a3 = a3 & 0x1
105818: 78 9a 05                 u8 [a2 + 0x5] = a3
105821: 55 18 06 08              jump @8253 if a1 >=u 6
      :                          @8252
105825: 28 84 56 01              jump @13239
      :                          @8253
105829: 82 b8 88 00              a1 = u64 [a4 + 0x88]
105833: 55 18 02 08              jump @8255 if a1 >=u 2
      :                          @8254
105837: 28 6b 56 01              jump @13226
      :                          @8255
105841: 82 b8 80 00              a1 = u64 [a4 + 0x80]
105845: 78 8a 01                 u8 [a1 + 0x1] = a3
105848: 3a 09 78 12 03           a2 = u64 [0x31278]
105853: 97 9a 0d                 a3 = a2 << 0xd
105856: d3 a9 09                 a2 = a2 ^ a3
105859: 98 9b 07                 a4 = a2 >> 0x7
105862: d3 9b 0b                 a4 = a4 ^ a2
105865: 97 b9 11                 a2 = a4 << 0x11
105868: d3 b9 09                 a2 = a2 ^ a4
105871: 3e 09 78 12 03           u64 [0x31278] = a2
105876: 82 18 18 02              a1 = u64 [sp + 0x218]
105880: 55 18 03 08              jump @8257 if a1 >=u 3
      :                          @8256
105884: 28 33 56 01              jump @13217
      :                          @8257
105888: 82 1c 10 02              a5 = u64 [sp + 0x210]
105892: 82 c9 40                 a2 = u64 [a5 + 0x40]
105895: 55 19 04 08              jump @8259 if a2 >=u 4
      :                          @8258
105899: 28 37 56 01              jump @13236
      :                          @8259
105903: 82 c9 38                 a2 = u64 [a5 + 0x38]
105906: 84 bb 01                 a4 = a4 & 0x1
105909: 78 9b 03                 u8 [a2 + 0x3] = a4
105912: 55 18 04 08              jump @8261 if a1 >=u 4
      :                          @8260
105916: 28 34 56 01              jump @13250
      :                          @8261
105920: 82 c8 58                 a1 = u64 [a5 + 0x58]
105923: 55 18 03 08              jump @8263 if a1 >=u 3
      :                          @8262
105927: 28 12 56 01              jump @13227
      :                          @8263
105931: 82 c8 50                 a1 = u64 [a5 + 0x50]
105934: 78 8b 02                 u8 [a1 + 0x2] = a4
105937: 3a 09 78 12 03           a2 = u64 [0x31278]
105942: 97 9a 0d                 a3 = a2 << 0xd
105945: d3 a9 09                 a2 = a2 ^ a3
105948: 98 9a 07                 a3 = a2 >> 0x7
105951: d3 9a 0a                 a3 = a3 ^ a2
105954: 97 a9 11                 a2 = a3 << 0x11
105957: d3 a9 09                 a2 = a2 ^ a3
105960: 3e 09 78 12 03           u64 [0x31278] = a2
105965: 82 18 18 02              a1 = u64 [sp + 0x218]
105969: 55 18 03 08              jump @8265 if a1 >=u 3
      :                          @8264
105973: 28 e4 55 01              jump @13227
      :                          @8265
105977: 82 1b 10 02              a4 = u64 [sp + 0x210]
105981: 82 b9 40                 a2 = u64 [a4 + 0x40]
105984: 55 19 05 08              jump @8267 if a2 >=u 5
      :                          @8266
105988: 28 df 55 01              jump @13237
      :                          @8267
105992: 82 b9 38                 a2 = u64 [a4 + 0x38]
105995: 84 aa 01                 a3 = a3 & 0x1
105998: 78 9a 04                 u8 [a2 + 0x4] = a3
106001: 55 18 05 08              jump @8269 if a1 >=u 5
      :                          @8268
106005: 28 cb 55 01              jump @13234
      :                          @8269
106009: 82 b8 70                 a1 = u64 [a4 + 0x70]
106012: 55 18 03 08              jump @8271 if a1 >=u 3
      :                          @8270
106016: 28 b9 55 01              jump @13227
      :                          @8271
106020: 82 b8 68                 a1 = u64 [a4 + 0x68]
106023: 78 8a 02                 u8 [a1 + 0x2] = a3
106026: 3a 09 78 12 03           a2 = u64 [0x31278]
106031: 97 9a 0d                 a3 = a2 << 0xd
106034: d3 a9 09                 a2 = a2 ^ a3
106037: 98 9a 07                 a3 = a2 >> 0x7
106040: d3 9a 0a                 a3 = a3 ^ a2
106043: 97 a9 11                 a2 = a3 << 0x11
106046: d3 a9 09                 a2 = a2 ^ a3
106049: 3e 09 78 12 03           u64 [0x31278] = a2
106054: 82 18 18 02              a1 = u64 [sp + 0x218]
106058: 55 18 03 08              jump @8273 if a1 >=u 3
      :                          @8272
106062: 28 8b 55 01              jump @13227
      :                          @8273
106066: 82 1b 10 02              a4 = u64 [sp + 0x210]
106070: 82 b9 40                 a2 = u64 [a4 + 0x40]
106073: 55 19 06 08              jump @8275 if a2 >=u 6
      :                          @8274
106077: 28 87 55 01              jump @13238
      :                          @8275
106081: 82 b9 38                 a2 = u64 [a4 + 0x38]
106084: 84 aa 01                 a3 = a3 & 0x1
106087: 78 9a 05                 u8 [a2 + 0x5] = a3
106090: 55 18 06 08              jump @8277 if a1 >=u 6
      :                          @8276
106094: 28 77 55 01              jump @13239
      :                          @8277
106098: 82 b8 88 00              a1 = u64 [a4 + 0x88]
106102: 55 18 03 08              jump @8279 if a1 >=u 3
      :                          @8278
106106: 28 5f 55 01              jump @13227
      :                          @8279
106110: 82 b8 80 00              a1 = u64 [a4 + 0x80]
106114: 78 8a 02                 u8 [a1 + 0x2] = a3
106117: 3a 09 78 12 03           a2 = u64 [0x31278]
106122: 97 9a 0d                 a3 = a2 << 0xd
106125: d3 a9 09                 a2 = a2 ^ a3
106128: 98 9b 07                 a4 = a2 >> 0x7
106131: d3 9b 0b                 a4 = a4 ^ a2
106134: 97 b9 11                 a2 = a4 << 0x11
106137: d3 b9 09                 a2 = a2 ^ a4
106140: 3e 09 78 12 03           u64 [0x31278] = a2
106145: 82 18 18 02              a1 = u64 [sp + 0x218]
106149: 55 18 04 08              jump @8281 if a1 >=u 4
      :                          @8280
106153: 28 26 55 01              jump @13217
      :                          @8281
106157: 82 1c 10 02              a5 = u64 [sp + 0x210]
106161: 82 c9 58                 a2 = u64 [a5 + 0x58]
106164: 55 19 05 08              jump @8283 if a2 >=u 5
      :                          @8282
106168: 28 2a 55 01              jump @13236
      :                          @8283
106172: 82 c9 50                 a2 = u64 [a5 + 0x50]
106175: 84 bb 01                 a4 = a4 & 0x1
106178: 78 9b 04                 u8 [a2 + 0x4] = a4
106181: 55 18 05 08              jump @8285 if a1 >=u 5
      :                          @8284
106185: 28 24 55 01              jump @13247
      :                          @8285
106189: 82 c8 70                 a1 = u64 [a5 + 0x70]
106192: 55 18 04 08              jump @8287 if a1 >=u 4
      :                          @8286
106196: 28 0b 55 01              jump @13233
      :                          @8287
106200: 82 c8 68                 a1 = u64 [a5 + 0x68]
106203: 78 8b 03                 u8 [a1 + 0x3] = a4
106206: 3a 09 78 12 03           a2 = u64 [0x31278]
106211: 97 9a 0d                 a3 = a2 << 0xd
106214: d3 a9 09                 a2 = a2 ^ a3
106217: 98 9a 07                 a3 = a2 >> 0x7
106220: d3 9a 0a                 a3 = a3 ^ a2
106223: 97 a9 11                 a2 = a3 << 0x11
106226: d3 a9 09                 a2 = a2 ^ a3
106229: 3e 09 78 12 03           u64 [0x31278] = a2
106234: 82 18 18 02              a1 = u64 [sp + 0x218]
106238: 55 18 04 08              jump @8289 if a1 >=u 4
      :                          @8288
106242: 28 dd 54 01              jump @13233
      :                          @8289
106246: 82 1b 10 02              a4 = u64 [sp + 0x210]
106250: 82 b9 58                 a2 = u64 [a4 + 0x58]
106253: 55 19 06 08              jump @8291 if a2 >=u 6
      :                          @8290
106257: 28 d3 54 01              jump @13238
      :                          @8291
106261: 82 b9 50                 a2 = u64 [a4 + 0x50]
106264: 84 aa 01                 a3 = a3 & 0x1
106267: 78 9a 05                 u8 [a2 + 0x5] = a3
106270: 55 18 06 08              jump @8293 if a1 >=u 6
      :                          @8292
106274: 28 c3 54 01              jump @13239
      :                          @8293
106278: 82 b8 88 00              a1 = u64 [a4 + 0x88]
106282: 55 18 04 08              jump @8295 if a1 >=u 4
      :                          @8294
106286: 28 b1 54 01              jump @13233
      :                          @8295
106290: 82 b8 80 00              a1 = u64 [a4 + 0x80]
106294: 78 8a 03                 u8 [a1 + 0x3] = a3
106297: 3a 09 78 12 03           a2 = u64 [0x31278]
106302: 97 9a 0d                 a3 = a2 << 0xd
106305: d3 a9 09                 a2 = a2 ^ a3
106308: 98 9b 07                 a4 = a2 >> 0x7
106311: d3 9b 0b                 a4 = a4 ^ a2
106314: 97 b9 11                 a2 = a4 << 0x11
106317: d3 b9 09                 a2 = a2 ^ a4
106320: 3e 09 78 12 03           u64 [0x31278] = a2
106325: 82 18 18 02              a1 = u64 [sp + 0x218]
106329: 55 18 05 08              jump @8297 if a1 >=u 5
      :                          @8296
106333: 28 72 54 01              jump @13217
      :                          @8297
106337: 82 17 10 02              a0 = u64 [sp + 0x210]
106341: 82 79 70                 a2 = u64 [a0 + 0x70]
106344: 55 19 06 08              jump @8299 if a2 >=u 6
      :                          @8298
106348: 28 76 54 01              jump @13236
      :                          @8299
106352: 82 79 68                 a2 = u64 [a0 + 0x68]
106355: 84 bb 01                 a4 = a4 & 0x1
106358: 78 9b 05                 u8 [a2 + 0x5] = a4
106361: 55 18 06 08              jump @8301 if a1 >=u 6
      :                          @8300
106365: 28 7b 54 01              jump @13256
      :                          @8301
106369: 82 78 88 00              a1 = u64 [a0 + 0x88]
106373: 55 18 05 08              jump @8303 if a1 >=u 5
      :                          @8302
106377: 28 57 54 01              jump @13234
      :                          @8303
106381: 82 77 80 00              a0 = u64 [a0 + 0x80]
106385: 78 7b 04                 u8 [a0 + 0x4] = a4
106388: 95 17 08 02              a0 = sp + 0x208
106392: 50 20 f2 04 d7 4a ff     ra = 1266, jump @4612
      :                          @8304 [@dyn 633]
106399: 7b 17 20 01              u64 [sp + 0x120] = a0
106403: 95 17 20 01              a0 = sp + 0x120
106407: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
106411: 33 07 28 0c              a0 = 0xc28
106415: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
106419: 33 07 18 08 01           a0 = 0x10818
106424: 7b 17 90 02              u64 [sp + 0x290] = a0
106428: 49 21 98 02 01           u64 [sp + 664] = 0x1
106433: 49 21 b0 02              u64 [sp + 688] = 0
106437: 95 18 e0 01              a1 = sp + 0x1e0
106441: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
106445: 49 21 a8 02 01           u64 [sp + 680] = 0x1
106450: 95 17 38 02              a0 = sp + 0x238
106454: 95 18 90 02              a1 = sp + 0x290
106458: 50 20 f4 04 65 af fe     ra = 1268, jump @1491
      :                          @8305 [@dyn 634]
106465: 82 16 40 02              s1 = u64 [sp + 0x240]
106469: 82 1b 48 02              a4 = u64 [sp + 0x248]
106473: 82 17 38 02              a0 = u64 [sp + 0x238]
106477: 7b 17 70                 u64 [sp + 0x70] = a0
106480: 33 07 02                 a0 = 0x2
106483: 33 08                    a1 = 0
106485: 33 09                    a2 = 0
106487: 64 6a                    a3 = s1
106489: 33 00 f6 04              ra = 0x4f6
106493: 0a 64                    ecalli 100 // 'log'
106495: 01                       fallthrough
      :                          @8306 [@dyn 635]
106496: 82 1c 70                 a5 = u64 [sp + 0x70]
106499: 82 17 68                 a0 = u64 [sp + 0x68]
106502: c8 c7 07                 a0 = a0 + a5
106505: 33 08 00 00 ff           a1 = 0xffffffffffff0000
106510: ae 87 07                 jump @8308 if a0 >=u a1
      :                          @8307
106513: 28 aa 41 01              jump @12855
      :                          @8308
106517: 33 07 c0 22 03           a0 = 0x322c0
106522: 95 77 00 00 01           a0 = a0 + 0x10000
106527: 01                       fallthrough
      :                          @8309
106528: 82 78                    a1 = u64 [a0]
106530: c9 87 09                 a2 = a0 - a1
106533: aa 69 07                 jump @8311 if a2 == s1
      :                          @8310
106536: 28 93 41 01              jump @12855
      :                          @8311
106540: c9 c8 09                 a2 = a1 - a5
106543: 01                       fallthrough
      :                          @8312
106544: 82 7a                    a3 = u64 [a0]
106546: ab 8a ee                 jump @8309 if a3 != a1
      :                          @8313
106549: 7b 79                    u64 [a0] = a2
106551: 33 0b                    a4 = 0
106553: 01                       fallthrough
      :                          @8314
106554: ab 8a e6                 jump @8309 if a3 != a1
      :                          @8315
106557: 28 7e 41 01              jump @12855
      :                          @8316 [@dyn 636]
106561: 95 17 90 02              a0 = sp + 0x290
106565: 33 08 05                 a1 = 0x5
106568: 50 20 fa 04 60 bd fe     ra = 1274, jump @1776
      :                          @8317 [@dyn 637]
106575: 95 17 e0 01              a0 = sp + 0x1e0
106579: 95 18 90 02              a1 = sp + 0x290
106583: 33 09 05                 a2 = 0x5
106586: 50 20 fc 04 6e c4 fe     ra = 1276, jump @1895
      :                          @8318 [@dyn 638]
106593: 3a 07 78 12 03           a0 = u64 [0x31278]
106598: 97 79 0d                 a2 = a0 << 0xd
106601: d3 97 07                 a0 = a0 ^ a2
106604: 98 79 07                 a2 = a0 >> 0x7
106607: d3 97 07                 a0 = a0 ^ a2
106610: 97 79 11                 a2 = a0 << 0x11
106613: d3 79 09                 a2 = a2 ^ a0
106616: 3e 09 78 12 03           u64 [0x31278] = a2
106621: 82 1c f0 01              a5 = u64 [sp + 0x1f0]
106625: 52 0c 07                 jump @8320 if a5 != 0
      :                          @8319
106628: 28 53 53 01              jump @13225
      :                          @8320
106632: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
106636: 82 b9 10                 a2 = u64 [a4 + 0x10]
106639: 56 19 01 08              jump @8322 if a2 >u 1
      :                          @8321
106643: 28 4f 53 01              jump @13236
      :                          @8322
106647: 82 b8 08                 a1 = u64 [a4 + 0x8]
106650: 84 79 01                 a2 = a0 & 0x1
106653: 78 89 01                 u8 [a1 + 0x1] = a2
106656: 56 1c 01 08              jump @8324 if a5 >u 1
      :                          @8323
106660: 28 2b 53 01              jump @13217
      :                          @8324
106664: 82 b7 28                 a0 = u64 [a4 + 0x28]
106667: 52 07 07                 jump @8326 if a0 != 0
      :                          @8325
106670: 28 38 53 01              jump @13240
      :                          @8326
106674: 82 b7 20                 a0 = u64 [a4 + 0x20]
106677: 78 79                    u8 [a0] = a2
106679: 3a 07 78 12 03           a0 = u64 [0x31278]
106684: 97 79 0d                 a2 = a0 << 0xd
106687: d3 97 07                 a0 = a0 ^ a2
106690: 98 79 07                 a2 = a0 >> 0x7
106693: d3 97 07                 a0 = a0 ^ a2
106696: 97 79 11                 a2 = a0 << 0x11
106699: d3 79 09                 a2 = a2 ^ a0
106702: 3e 09 78 12 03           u64 [0x31278] = a2
106707: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
106711: 52 08 07                 jump @8328 if a1 != 0
      :                          @8327
106714: 28 f4 52 01              jump @13216
      :                          @8328
106718: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
106722: 82 a9 10                 a2 = u64 [a3 + 0x10]
106725: 55 19 03 08              jump @8330 if a2 >=u 3
      :                          @8329
106729: 28 05 53 01              jump @13248
      :                          @8330
106733: 82 a9 08                 a2 = u64 [a3 + 0x8]
106736: 84 77 01                 a0 = a0 & 0x1
106739: 78 97 02                 u8 [a2 + 0x2] = a0
106742: 55 18 03 08              jump @8332 if a1 >=u 3
      :                          @8331
106746: 28 0e 52 01              jump @13199
      :                          @8332
106750: 82 a8 40                 a1 = u64 [a3 + 0x40]
106753: 52 08 07                 jump @8334 if a1 != 0
      :                          @8333
106756: 28 ca 52 01              jump @13216
      :                          @8334
106760: 82 a8 38                 a1 = u64 [a3 + 0x38]
106763: 78 87                    u8 [a1] = a0
106765: 3a 07 78 12 03           a0 = u64 [0x31278]
106770: 97 79 0d                 a2 = a0 << 0xd
106773: d3 97 07                 a0 = a0 ^ a2
106776: 98 79 07                 a2 = a0 >> 0x7
106779: d3 97 07                 a0 = a0 ^ a2
106782: 97 79 11                 a2 = a0 << 0x11
106785: d3 79 09                 a2 = a2 ^ a0
106788: 3e 09 78 12 03           u64 [0x31278] = a2
106793: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
106797: 52 08 07                 jump @8336 if a1 != 0
      :                          @8335
106800: 28 9e 52 01              jump @13216
      :                          @8336
106804: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
106808: 82 a9 10                 a2 = u64 [a3 + 0x10]
106811: 55 19 04 08              jump @8338 if a2 >=u 4
      :                          @8337
106815: 28 a2 52 01              jump @13235
      :                          @8338
106819: 82 a9 08                 a2 = u64 [a3 + 0x8]
106822: 84 77 01                 a0 = a0 & 0x1
106825: 78 97 03                 u8 [a2 + 0x3] = a0
106828: 55 18 04 08              jump @8340 if a1 >=u 4
      :                          @8339
106832: 28 b7 51 01              jump @13198
      :                          @8340
106836: 82 a8 58                 a1 = u64 [a3 + 0x58]
106839: 52 08 07                 jump @8342 if a1 != 0
      :                          @8341
106842: 28 74 52 01              jump @13216
      :                          @8342
106846: 82 a8 50                 a1 = u64 [a3 + 0x50]
106849: 78 87                    u8 [a1] = a0
106851: 3a 07 78 12 03           a0 = u64 [0x31278]
106856: 97 79 0d                 a2 = a0 << 0xd
106859: d3 97 07                 a0 = a0 ^ a2
106862: 98 79 07                 a2 = a0 >> 0x7
106865: d3 97 07                 a0 = a0 ^ a2
106868: 97 79 11                 a2 = a0 << 0x11
106871: d3 79 09                 a2 = a2 ^ a0
106874: 3e 09 78 12 03           u64 [0x31278] = a2
106879: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
106883: 52 08 07                 jump @8344 if a1 != 0
      :                          @8343
106886: 28 48 52 01              jump @13216
      :                          @8344
106890: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
106894: 82 a9 10                 a2 = u64 [a3 + 0x10]
106897: 55 19 05 08              jump @8346 if a2 >=u 5
      :                          @8345
106901: 28 5a 52 01              jump @13249
      :                          @8346
106905: 82 a9 08                 a2 = u64 [a3 + 0x8]
106908: 84 77 01                 a0 = a0 & 0x1
106911: 78 97 04                 u8 [a2 + 0x4] = a0
106914: 55 18 05 08              jump @8348 if a1 >=u 5
      :                          @8347
106918: 28 2b 52 01              jump @13219
      :                          @8348
106922: 82 a8 70                 a1 = u64 [a3 + 0x70]
106925: 52 08 07                 jump @8350 if a1 != 0
      :                          @8349
106928: 28 1e 52 01              jump @13216
      :                          @8350
106932: 82 a8 68                 a1 = u64 [a3 + 0x68]
106935: 78 87                    u8 [a1] = a0
106937: 3a 07 78 12 03           a0 = u64 [0x31278]
106942: 97 79 0d                 a2 = a0 << 0xd
106945: d3 97 07                 a0 = a0 ^ a2
106948: 98 79 07                 a2 = a0 >> 0x7
106951: d3 97 07                 a0 = a0 ^ a2
106954: 97 79 11                 a2 = a0 << 0x11
106957: d3 79 09                 a2 = a2 ^ a0
106960: 3e 09 78 12 03           u64 [0x31278] = a2
106965: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
106969: 55 18 02 08              jump @8352 if a1 >=u 2
      :                          @8351
106973: 28 29 51 01              jump @13197
      :                          @8352
106977: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
106981: 82 b9 28                 a2 = u64 [a4 + 0x28]
106984: 55 19 03 08              jump @8354 if a2 >=u 3
      :                          @8353
106988: 28 f6 51 01              jump @13236
      :                          @8354
106992: 82 ba 20                 a3 = u64 [a4 + 0x20]
106995: 84 79 01                 a2 = a0 & 0x1
106998: 78 a9 02                 u8 [a3 + 0x2] = a2
107001: 55 18 03 08              jump @8356 if a1 >=u 3
      :                          @8355
107005: 28 ef 51 01              jump @13246
      :                          @8356
107009: 82 b8 40                 a1 = u64 [a4 + 0x40]
107012: 55 18 02 08              jump @8358 if a1 >=u 2
      :                          @8357
107016: 28 fe 50 01              jump @13197
      :                          @8358
107020: 82 b8 38                 a1 = u64 [a4 + 0x38]
107023: 78 89 01                 u8 [a1 + 0x1] = a2
107026: 3a 09 78 12 03           a2 = u64 [0x31278]
107031: 97 9a 0d                 a3 = a2 << 0xd
107034: d3 a9 09                 a2 = a2 ^ a3
107037: 98 9a 07                 a3 = a2 >> 0x7
107040: d3 9a 0a                 a3 = a3 ^ a2
107043: 97 a9 11                 a2 = a3 << 0x11
107046: d3 a9 09                 a2 = a2 ^ a3
107049: 3e 09 78 12 03           u64 [0x31278] = a2
107054: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
107058: 55 18 02 08              jump @8360 if a1 >=u 2
      :                          @8359
107062: 28 d0 50 01              jump @13197
      :                          @8360
107066: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
107070: 82 b9 28                 a2 = u64 [a4 + 0x28]
107073: 55 19 04 08              jump @8362 if a2 >=u 4
      :                          @8361
107077: 28 9c 51 01              jump @13235
      :                          @8362
107081: 82 b9 20                 a2 = u64 [a4 + 0x20]
107084: 84 aa 01                 a3 = a3 & 0x1
107087: 78 9a 03                 u8 [a2 + 0x3] = a3
107090: 55 18 04 08              jump @8364 if a1 >=u 4
      :                          @8363
107094: 28 b1 50 01              jump @13198
      :                          @8364
107098: 82 b8 58                 a1 = u64 [a4 + 0x58]
107101: 55 18 02 08              jump @8366 if a1 >=u 2
      :                          @8365
107105: 28 a5 50 01              jump @13197
      :                          @8366
107109: 82 b8 50                 a1 = u64 [a4 + 0x50]
107112: 78 8a 01                 u8 [a1 + 0x1] = a3
107115: 3a 09 78 12 03           a2 = u64 [0x31278]
107120: 97 9a 0d                 a3 = a2 << 0xd
107123: d3 a9 09                 a2 = a2 ^ a3
107126: 98 9a 07                 a3 = a2 >> 0x7
107129: d3 9a 0a                 a3 = a3 ^ a2
107132: 97 a9 11                 a2 = a3 << 0x11
107135: d3 a9 09                 a2 = a2 ^ a3
107138: 3e 09 78 12 03           u64 [0x31278] = a2
107143: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
107147: 55 18 02 08              jump @8368 if a1 >=u 2
      :                          @8367
107151: 28 49 51 01              jump @13226
      :                          @8368
107155: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
107159: 82 b9 28                 a2 = u64 [a4 + 0x28]
107162: 55 19 05 08              jump @8370 if a2 >=u 5
      :                          @8369
107166: 28 45 51 01              jump @13237
      :                          @8370
107170: 82 b9 20                 a2 = u64 [a4 + 0x20]
107173: 84 aa 01                 a3 = a3 & 0x1
107176: 78 9a 04                 u8 [a2 + 0x4] = a3
107179: 55 18 05 08              jump @8372 if a1 >=u 5
      :                          @8371
107183: 28 31 51 01              jump @13234
      :                          @8372
107187: 82 b8 70                 a1 = u64 [a4 + 0x70]
107190: 55 18 02 08              jump @8374 if a1 >=u 2
      :                          @8373
107194: 28 1e 51 01              jump @13226
      :                          @8374
107198: 82 b8 68                 a1 = u64 [a4 + 0x68]
107201: 78 8a 01                 u8 [a1 + 0x1] = a3
107204: 3a 09 78 12 03           a2 = u64 [0x31278]
107209: 97 9a 0d                 a3 = a2 << 0xd
107212: d3 a9 09                 a2 = a2 ^ a3
107215: 98 9b 07                 a4 = a2 >> 0x7
107218: d3 9b 0b                 a4 = a4 ^ a2
107221: 97 b9 11                 a2 = a4 << 0x11
107224: d3 b9 09                 a2 = a2 ^ a4
107227: 3e 09 78 12 03           u64 [0x31278] = a2
107232: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
107236: 55 18 03 08              jump @8376 if a1 >=u 3
      :                          @8375
107240: 28 e7 50 01              jump @13217
      :                          @8376
107244: 82 1c e8 01              a5 = u64 [sp + 0x1e8]
107248: 82 c9 40                 a2 = u64 [a5 + 0x40]
107251: 55 19 04 08              jump @8378 if a2 >=u 4
      :                          @8377
107255: 28 eb 50 01              jump @13236
      :                          @8378
107259: 82 c9 38                 a2 = u64 [a5 + 0x38]
107262: 84 bb 01                 a4 = a4 & 0x1
107265: 78 9b 03                 u8 [a2 + 0x3] = a4
107268: 55 18 04 08              jump @8380 if a1 >=u 4
      :                          @8379
107272: 28 e8 50 01              jump @13250
      :                          @8380
107276: 82 c8 58                 a1 = u64 [a5 + 0x58]
107279: 55 18 03 08              jump @8382 if a1 >=u 3
      :                          @8381
107283: 28 c6 50 01              jump @13227
      :                          @8382
107287: 82 c8 50                 a1 = u64 [a5 + 0x50]
107290: 78 8b 02                 u8 [a1 + 0x2] = a4
107293: 3a 09 78 12 03           a2 = u64 [0x31278]
107298: 97 9a 0d                 a3 = a2 << 0xd
107301: d3 a9 09                 a2 = a2 ^ a3
107304: 98 9a 07                 a3 = a2 >> 0x7
107307: d3 9a 0a                 a3 = a3 ^ a2
107310: 97 a9 11                 a2 = a3 << 0x11
107313: d3 a9 09                 a2 = a2 ^ a3
107316: 3e 09 78 12 03           u64 [0x31278] = a2
107321: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
107325: 55 18 03 08              jump @8384 if a1 >=u 3
      :                          @8383
107329: 28 98 50 01              jump @13227
      :                          @8384
107333: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
107337: 82 b9 40                 a2 = u64 [a4 + 0x40]
107340: 55 19 05 08              jump @8386 if a2 >=u 5
      :                          @8385
107344: 28 93 50 01              jump @13237
      :                          @8386
107348: 82 b9 38                 a2 = u64 [a4 + 0x38]
107351: 84 aa 01                 a3 = a3 & 0x1
107354: 78 9a 04                 u8 [a2 + 0x4] = a3
107357: 55 18 05 08              jump @8388 if a1 >=u 5
      :                          @8387
107361: 28 7f 50 01              jump @13234
      :                          @8388
107365: 82 b8 70                 a1 = u64 [a4 + 0x70]
107368: 55 18 03 08              jump @8390 if a1 >=u 3
      :                          @8389
107372: 28 6d 50 01              jump @13227
      :                          @8390
107376: 82 b8 68                 a1 = u64 [a4 + 0x68]
107379: 78 8a 02                 u8 [a1 + 0x2] = a3
107382: 3a 09 78 12 03           a2 = u64 [0x31278]
107387: 97 9a 0d                 a3 = a2 << 0xd
107390: d3 a9 09                 a2 = a2 ^ a3
107393: 98 9b 07                 a4 = a2 >> 0x7
107396: d3 9b 0b                 a4 = a4 ^ a2
107399: 97 b9 11                 a2 = a4 << 0x11
107402: d3 b9 09                 a2 = a2 ^ a4
107405: 3e 09 78 12 03           u64 [0x31278] = a2
107410: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
107414: 33 0a 04                 a3 = 0x4
107417: ae a8 07                 jump @8392 if a1 >=u a3
      :                          @8391
107420: 28 33 50 01              jump @13217
      :                          @8392
107424: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
107428: 82 79 58                 a2 = u64 [a0 + 0x58]
107431: 33 0c 05                 a5 = 0x5
107434: ae c9 07                 jump @8394 if a2 >=u a5
      :                          @8393
107437: 28 35 50 01              jump @13236
      :                          @8394
107441: 82 79 50                 a2 = u64 [a0 + 0x50]
107444: 84 bb 01                 a4 = a4 & 0x1
107447: 78 9b 04                 u8 [a2 + 0x4] = a4
107450: 55 18 05 08              jump @8396 if a1 >=u 5
      :                          @8395
107454: 28 2f 50 01              jump @13247
      :                          @8396
107458: 82 78 70                 a1 = u64 [a0 + 0x70]
107461: 55 18 04 08              jump @8398 if a1 >=u 4
      :                          @8397
107465: 28 16 50 01              jump @13233
      :                          @8398
107469: 82 77 68                 a0 = u64 [a0 + 0x68]
107472: 78 7b 03                 u8 [a0 + 0x3] = a4
107475: 3a 08 78 12 03           a1 = u64 [0x31278]
107480: 97 89 0d                 a2 = a1 << 0xd
107483: d3 98 08                 a1 = a1 ^ a2
107486: 98 89 07                 a2 = a1 >> 0x7
107489: d3 98 08                 a1 = a1 ^ a2
107492: 97 89 11                 a2 = a1 << 0x11
107495: d3 89 09                 a2 = a2 ^ a1
107498: 3e 09 78 12 03           u64 [0x31278] = a2
107503: 84 88 03                 a1 = a1 & 0x3
107506: 95 88 01                 a1 = a1 + 0x1
107509: 7a 18 c8 01              u32 [sp + 0x1c8] = a1
107513: 95 17 e0 01              a0 = sp + 0x1e0
107517: 50 20 fe 04 b7 47 ff     ra = 1278, jump @4641
      :                          @8399 [@dyn 639]
107524: 7b 17 20 01              u64 [sp + 0x120] = a0
107528: 95 17 c8 01              a0 = sp + 0x1c8
107532: 7b 17 38 02              u64 [sp + 0x238] = a0
107536: 33 07 5e 0c              a0 = 0xc5e
107540: 7b 17 40 02              u64 [sp + 0x240] = a0
107544: 95 17 20 01              a0 = sp + 0x120
107548: 7b 17 48 02              u64 [sp + 0x248] = a0
107552: 33 07 28 0c              a0 = 0xc28
107556: 7b 17 50 02              u64 [sp + 0x250] = a0
107560: 33 07 40 08 01           a0 = 0x10840
107565: 7b 17 90 02              u64 [sp + 0x290] = a0
107569: 49 21 98 02 02           u64 [sp + 664] = 0x2
107574: 49 21 b0 02              u64 [sp + 688] = 0
107578: 95 18 38 02              a1 = sp + 0x238
107582: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
107586: 49 21 a8 02 02           u64 [sp + 680] = 0x2
107591: 95 17 08 02              a0 = sp + 0x208
107595: 95 18 90 02              a1 = sp + 0x290
107599: 50 20 00 05 f0 aa fe     ra = 1280, jump @1491
      :                          @8400 [@dyn 640]
107606: 82 16 10 02              s1 = u64 [sp + 0x210]
107610: 82 1b 18 02              a4 = u64 [sp + 0x218]
107614: 82 17 08 02              a0 = u64 [sp + 0x208]
107618: 7b 17 70                 u64 [sp + 0x70] = a0
107621: 33 07 02                 a0 = 0x2
107624: 33 08                    a1 = 0
107626: 33 09                    a2 = 0
107628: 64 6a                    a3 = s1
107630: 33 00 02 05              ra = 0x502
107634: 0a 64                    ecalli 100 // 'log'
107636: 01                       fallthrough
      :                          @8401 [@dyn 641]
107637: 82 1c 70                 a5 = u64 [sp + 0x70]
107640: 82 17 68                 a0 = u64 [sp + 0x68]
107643: c8 c7 07                 a0 = a0 + a5
107646: 33 08 00 00 ff           a1 = 0xffffffffffff0000
107651: ae 87 07                 jump @8403 if a0 >=u a1
      :                          @8402
107654: 28 6d 88 00              jump @10533
      :                          @8403
107658: 33 07 c0 22 03           a0 = 0x322c0
107663: 95 77 00 00 01           a0 = a0 + 0x10000
107668: 01                       fallthrough
      :                          @8404
107669: 82 78                    a1 = u64 [a0]
107671: c9 87 09                 a2 = a0 - a1
107674: aa 69 07                 jump @8406 if a2 == s1
      :                          @8405
107677: 28 56 88 00              jump @10533
      :                          @8406
107681: c9 c8 09                 a2 = a1 - a5
107684: 01                       fallthrough
      :                          @8407
107685: 82 7a                    a3 = u64 [a0]
107687: ab 8a ee                 jump @8404 if a3 != a1
      :                          @8408
107690: 7b 79                    u64 [a0] = a2
107692: 33 0b                    a4 = 0
107694: 01                       fallthrough
      :                          @8409
107695: ab 8a e6                 jump @8404 if a3 != a1
      :                          @8410
107698: 28 41 88 00              jump @10533
      :                          @8411 [@dyn 642]
107702: 95 17 90 02              a0 = sp + 0x290
107706: 33 09 05                 a2 = 0x5
107709: 33 08                    a1 = 0
107711: 50 20 06 05 2a bf fe     ra = 1286, jump @1877
      :                          @8412 [@dyn 643]
107718: 95 17 08 02              a0 = sp + 0x208
107722: 95 18 90 02              a1 = sp + 0x290
107726: 33 09 05                 a2 = 0x5
107729: 50 20 08 05 43 b9 fe     ra = 1288, jump @1783
      :                          @8413 [@dyn 644]
107736: 3a 07 78 12 03           a0 = u64 [0x31278]
107741: 97 79 0d                 a2 = a0 << 0xd
107744: d3 97 07                 a0 = a0 ^ a2
107747: 98 79 07                 a2 = a0 >> 0x7
107750: d3 97 07                 a0 = a0 ^ a2
107753: 97 79 11                 a2 = a0 << 0x11
107756: d3 79 09                 a2 = a2 ^ a0
107759: 3e 09 78 12 03           u64 [0x31278] = a2
107764: 82 1c 18 02              a5 = u64 [sp + 0x218]
107768: 52 0c 07                 jump @8415 if a5 != 0
      :                          @8414
107771: 28 dc 4e 01              jump @13225
      :                          @8415
107775: 82 1b 10 02              a4 = u64 [sp + 0x210]
107779: 82 b9 10                 a2 = u64 [a4 + 0x10]
107782: 56 19 01 08              jump @8417 if a2 >u 1
      :                          @8416
107786: 28 d8 4e 01              jump @13236
      :                          @8417
107790: 82 b8 08                 a1 = u64 [a4 + 0x8]
107793: 84 79 01                 a2 = a0 & 0x1
107796: 7b 89 08                 u64 [a1 + 0x8] = a2
107799: 56 1c 01 08              jump @8419 if a5 >u 1
      :                          @8418
107803: 28 b4 4e 01              jump @13217
      :                          @8419
107807: 82 b7 28                 a0 = u64 [a4 + 0x28]
107810: 52 07 07                 jump @8421 if a0 != 0
      :                          @8420
107813: 28 c1 4e 01              jump @13240
      :                          @8421
107817: 82 b7 20                 a0 = u64 [a4 + 0x20]
107820: 7b 79                    u64 [a0] = a2
107822: 3a 07 78 12 03           a0 = u64 [0x31278]
107827: 97 79 0d                 a2 = a0 << 0xd
107830: d3 97 07                 a0 = a0 ^ a2
107833: 98 79 07                 a2 = a0 >> 0x7
107836: d3 97 07                 a0 = a0 ^ a2
107839: 97 79 11                 a2 = a0 << 0x11
107842: d3 79 09                 a2 = a2 ^ a0
107845: 3e 09 78 12 03           u64 [0x31278] = a2
107850: 82 18 18 02              a1 = u64 [sp + 0x218]
107854: 52 08 07                 jump @8423 if a1 != 0
      :                          @8422
107857: 28 7d 4e 01              jump @13216
      :                          @8423
107861: 82 1a 10 02              a3 = u64 [sp + 0x210]
107865: 82 a9 10                 a2 = u64 [a3 + 0x10]
107868: 55 19 03 08              jump @8425 if a2 >=u 3
      :                          @8424
107872: 28 8e 4e 01              jump @13248
      :                          @8425
107876: 82 a9 08                 a2 = u64 [a3 + 0x8]
107879: 84 77 01                 a0 = a0 & 0x1
107882: 7b 97 10                 u64 [a2 + 0x10] = a0
107885: 55 18 03 08              jump @8427 if a1 >=u 3
      :                          @8426
107889: 28 97 4d 01              jump @13199
      :                          @8427
107893: 82 a8 40                 a1 = u64 [a3 + 0x40]
107896: 52 08 07                 jump @8429 if a1 != 0
      :                          @8428
107899: 28 53 4e 01              jump @13216
      :                          @8429
107903: 82 a8 38                 a1 = u64 [a3 + 0x38]
107906: 7b 87                    u64 [a1] = a0
107908: 3a 07 78 12 03           a0 = u64 [0x31278]
107913: 97 79 0d                 a2 = a0 << 0xd
107916: d3 97 07                 a0 = a0 ^ a2
107919: 98 79 07                 a2 = a0 >> 0x7
107922: d3 97 07                 a0 = a0 ^ a2
107925: 97 79 11                 a2 = a0 << 0x11
107928: d3 79 09                 a2 = a2 ^ a0
107931: 3e 09 78 12 03           u64 [0x31278] = a2
107936: 82 18 18 02              a1 = u64 [sp + 0x218]
107940: 52 08 07                 jump @8431 if a1 != 0
      :                          @8430
107943: 28 27 4e 01              jump @13216
      :                          @8431
107947: 82 1a 10 02              a3 = u64 [sp + 0x210]
107951: 82 a9 10                 a2 = u64 [a3 + 0x10]
107954: 55 19 04 08              jump @8433 if a2 >=u 4
      :                          @8432
107958: 28 2b 4e 01              jump @13235
      :                          @8433
107962: 82 a9 08                 a2 = u64 [a3 + 0x8]
107965: 84 77 01                 a0 = a0 & 0x1
107968: 7b 97 18                 u64 [a2 + 0x18] = a0
107971: 55 18 04 08              jump @8435 if a1 >=u 4
      :                          @8434
107975: 28 40 4d 01              jump @13198
      :                          @8435
107979: 82 a8 58                 a1 = u64 [a3 + 0x58]
107982: 52 08 07                 jump @8437 if a1 != 0
      :                          @8436
107985: 28 fd 4d 01              jump @13216
      :                          @8437
107989: 82 a8 50                 a1 = u64 [a3 + 0x50]
107992: 7b 87                    u64 [a1] = a0
107994: 3a 07 78 12 03           a0 = u64 [0x31278]
107999: 97 79 0d                 a2 = a0 << 0xd
108002: d3 97 07                 a0 = a0 ^ a2
108005: 98 79 07                 a2 = a0 >> 0x7
108008: d3 97 07                 a0 = a0 ^ a2
108011: 97 79 11                 a2 = a0 << 0x11
108014: d3 79 09                 a2 = a2 ^ a0
108017: 3e 09 78 12 03           u64 [0x31278] = a2
108022: 82 18 18 02              a1 = u64 [sp + 0x218]
108026: 52 08 07                 jump @8439 if a1 != 0
      :                          @8438
108029: 28 d1 4d 01              jump @13216
      :                          @8439
108033: 82 1a 10 02              a3 = u64 [sp + 0x210]
108037: 82 a9 10                 a2 = u64 [a3 + 0x10]
108040: 55 19 05 08              jump @8441 if a2 >=u 5
      :                          @8440
108044: 28 e3 4d 01              jump @13249
      :                          @8441
108048: 82 a9 08                 a2 = u64 [a3 + 0x8]
108051: 84 77 01                 a0 = a0 & 0x1
108054: 7b 97 20                 u64 [a2 + 0x20] = a0
108057: 55 18 05 08              jump @8443 if a1 >=u 5
      :                          @8442
108061: 28 b4 4d 01              jump @13219
      :                          @8443
108065: 82 a8 70                 a1 = u64 [a3 + 0x70]
108068: 52 08 07                 jump @8445 if a1 != 0
      :                          @8444
108071: 28 a7 4d 01              jump @13216
      :                          @8445
108075: 82 a8 68                 a1 = u64 [a3 + 0x68]
108078: 7b 87                    u64 [a1] = a0
108080: 3a 07 78 12 03           a0 = u64 [0x31278]
108085: 97 79 0d                 a2 = a0 << 0xd
108088: d3 97 07                 a0 = a0 ^ a2
108091: 98 79 07                 a2 = a0 >> 0x7
108094: d3 97 07                 a0 = a0 ^ a2
108097: 97 79 11                 a2 = a0 << 0x11
108100: d3 79 09                 a2 = a2 ^ a0
108103: 3e 09 78 12 03           u64 [0x31278] = a2
108108: 82 18 18 02              a1 = u64 [sp + 0x218]
108112: 55 18 02 08              jump @8447 if a1 >=u 2
      :                          @8446
108116: 28 b2 4c 01              jump @13197
      :                          @8447
108120: 82 1b 10 02              a4 = u64 [sp + 0x210]
108124: 82 b9 28                 a2 = u64 [a4 + 0x28]
108127: 55 19 03 08              jump @8449 if a2 >=u 3
      :                          @8448
108131: 28 7f 4d 01              jump @13236
      :                          @8449
108135: 82 ba 20                 a3 = u64 [a4 + 0x20]
108138: 84 79 01                 a2 = a0 & 0x1
108141: 7b a9 10                 u64 [a3 + 0x10] = a2
108144: 55 18 03 08              jump @8451 if a1 >=u 3
      :                          @8450
108148: 28 78 4d 01              jump @13246
      :                          @8451
108152: 82 b8 40                 a1 = u64 [a4 + 0x40]
108155: 55 18 02 08              jump @8453 if a1 >=u 2
      :                          @8452
108159: 28 87 4c 01              jump @13197
      :                          @8453
108163: 82 b8 38                 a1 = u64 [a4 + 0x38]
108166: 7b 89 08                 u64 [a1 + 0x8] = a2
108169: 3a 09 78 12 03           a2 = u64 [0x31278]
108174: 97 9a 0d                 a3 = a2 << 0xd
108177: d3 a9 09                 a2 = a2 ^ a3
108180: 98 9a 07                 a3 = a2 >> 0x7
108183: d3 9a 0a                 a3 = a3 ^ a2
108186: 97 a9 11                 a2 = a3 << 0x11
108189: d3 a9 09                 a2 = a2 ^ a3
108192: 3e 09 78 12 03           u64 [0x31278] = a2
108197: 82 18 18 02              a1 = u64 [sp + 0x218]
108201: 55 18 02 08              jump @8455 if a1 >=u 2
      :                          @8454
108205: 28 59 4c 01              jump @13197
      :                          @8455
108209: 82 1b 10 02              a4 = u64 [sp + 0x210]
108213: 82 b9 28                 a2 = u64 [a4 + 0x28]
108216: 55 19 04 08              jump @8457 if a2 >=u 4
      :                          @8456
108220: 28 25 4d 01              jump @13235
      :                          @8457
108224: 82 b9 20                 a2 = u64 [a4 + 0x20]
108227: 84 aa 01                 a3 = a3 & 0x1
108230: 7b 9a 18                 u64 [a2 + 0x18] = a3
108233: 55 18 04 08              jump @8459 if a1 >=u 4
      :                          @8458
108237: 28 3a 4c 01              jump @13198
      :                          @8459
108241: 82 b8 58                 a1 = u64 [a4 + 0x58]
108244: 55 18 02 08              jump @8461 if a1 >=u 2
      :                          @8460
108248: 28 2e 4c 01              jump @13197
      :                          @8461
108252: 82 b8 50                 a1 = u64 [a4 + 0x50]
108255: 7b 8a 08                 u64 [a1 + 0x8] = a3
108258: 3a 09 78 12 03           a2 = u64 [0x31278]
108263: 97 9a 0d                 a3 = a2 << 0xd
108266: d3 a9 09                 a2 = a2 ^ a3
108269: 98 9a 07                 a3 = a2 >> 0x7
108272: d3 9a 0a                 a3 = a3 ^ a2
108275: 97 a9 11                 a2 = a3 << 0x11
108278: d3 a9 09                 a2 = a2 ^ a3
108281: 3e 09 78 12 03           u64 [0x31278] = a2
108286: 82 18 18 02              a1 = u64 [sp + 0x218]
108290: 55 18 02 08              jump @8463 if a1 >=u 2
      :                          @8462
108294: 28 d2 4c 01              jump @13226
      :                          @8463
108298: 82 1b 10 02              a4 = u64 [sp + 0x210]
108302: 82 b9 28                 a2 = u64 [a4 + 0x28]
108305: 55 19 05 08              jump @8465 if a2 >=u 5
      :                          @8464
108309: 28 ce 4c 01              jump @13237
      :                          @8465
108313: 82 b9 20                 a2 = u64 [a4 + 0x20]
108316: 84 aa 01                 a3 = a3 & 0x1
108319: 7b 9a 20                 u64 [a2 + 0x20] = a3
108322: 55 18 05 08              jump @8467 if a1 >=u 5
      :                          @8466
108326: 28 ba 4c 01              jump @13234
      :                          @8467
108330: 82 b8 70                 a1 = u64 [a4 + 0x70]
108333: 55 18 02 08              jump @8469 if a1 >=u 2
      :                          @8468
108337: 28 a7 4c 01              jump @13226
      :                          @8469
108341: 82 b8 68                 a1 = u64 [a4 + 0x68]
108344: 7b 8a 08                 u64 [a1 + 0x8] = a3
108347: 3a 09 78 12 03           a2 = u64 [0x31278]
108352: 97 9a 0d                 a3 = a2 << 0xd
108355: d3 a9 09                 a2 = a2 ^ a3
108358: 98 9b 07                 a4 = a2 >> 0x7
108361: d3 9b 0b                 a4 = a4 ^ a2
108364: 97 b9 11                 a2 = a4 << 0x11
108367: d3 b9 09                 a2 = a2 ^ a4
108370: 3e 09 78 12 03           u64 [0x31278] = a2
108375: 82 18 18 02              a1 = u64 [sp + 0x218]
108379: 55 18 03 08              jump @8471 if a1 >=u 3
      :                          @8470
108383: 28 70 4c 01              jump @13217
      :                          @8471
108387: 82 1c 10 02              a5 = u64 [sp + 0x210]
108391: 82 c9 40                 a2 = u64 [a5 + 0x40]
108394: 55 19 04 08              jump @8473 if a2 >=u 4
      :                          @8472
108398: 28 74 4c 01              jump @13236
      :                          @8473
108402: 82 c9 38                 a2 = u64 [a5 + 0x38]
108405: 84 bb 01                 a4 = a4 & 0x1
108408: 7b 9b 18                 u64 [a2 + 0x18] = a4
108411: 55 18 04 08              jump @8475 if a1 >=u 4
      :                          @8474
108415: 28 71 4c 01              jump @13250
      :                          @8475
108419: 82 c8 58                 a1 = u64 [a5 + 0x58]
108422: 55 18 03 08              jump @8477 if a1 >=u 3
      :                          @8476
108426: 28 4f 4c 01              jump @13227
      :                          @8477
108430: 82 c8 50                 a1 = u64 [a5 + 0x50]
108433: 7b 8b 10                 u64 [a1 + 0x10] = a4
108436: 3a 09 78 12 03           a2 = u64 [0x31278]
108441: 97 9a 0d                 a3 = a2 << 0xd
108444: d3 a9 09                 a2 = a2 ^ a3
108447: 98 9a 07                 a3 = a2 >> 0x7
108450: d3 9a 0a                 a3 = a3 ^ a2
108453: 97 a9 11                 a2 = a3 << 0x11
108456: d3 a9 09                 a2 = a2 ^ a3
108459: 3e 09 78 12 03           u64 [0x31278] = a2
108464: 82 18 18 02              a1 = u64 [sp + 0x218]
108468: 55 18 03 08              jump @8479 if a1 >=u 3
      :                          @8478
108472: 28 21 4c 01              jump @13227
      :                          @8479
108476: 82 1b 10 02              a4 = u64 [sp + 0x210]
108480: 82 b9 40                 a2 = u64 [a4 + 0x40]
108483: 55 19 05 08              jump @8481 if a2 >=u 5
      :                          @8480
108487: 28 1c 4c 01              jump @13237
      :                          @8481
108491: 82 b9 38                 a2 = u64 [a4 + 0x38]
108494: 84 aa 01                 a3 = a3 & 0x1
108497: 7b 9a 20                 u64 [a2 + 0x20] = a3
108500: 55 18 05 08              jump @8483 if a1 >=u 5
      :                          @8482
108504: 28 08 4c 01              jump @13234
      :                          @8483
108508: 82 b8 70                 a1 = u64 [a4 + 0x70]
108511: 55 18 03 08              jump @8485 if a1 >=u 3
      :                          @8484
108515: 28 f6 4b 01              jump @13227
      :                          @8485
108519: 82 b8 68                 a1 = u64 [a4 + 0x68]
108522: 7b 8a 10                 u64 [a1 + 0x10] = a3
108525: 3a 09 78 12 03           a2 = u64 [0x31278]
108530: 97 9a 0d                 a3 = a2 << 0xd
108533: d3 a9 09                 a2 = a2 ^ a3
108536: 98 9b 07                 a4 = a2 >> 0x7
108539: d3 9b 0b                 a4 = a4 ^ a2
108542: 97 b9 11                 a2 = a4 << 0x11
108545: d3 b9 09                 a2 = a2 ^ a4
108548: 3e 09 78 12 03           u64 [0x31278] = a2
108553: 82 18 18 02              a1 = u64 [sp + 0x218]
108557: 55 18 04 08              jump @8487 if a1 >=u 4
      :                          @8486
108561: 28 be 4b 01              jump @13217
      :                          @8487
108565: 82 17 10 02              a0 = u64 [sp + 0x210]
108569: 82 79 58                 a2 = u64 [a0 + 0x58]
108572: 55 19 05 08              jump @8489 if a2 >=u 5
      :                          @8488
108576: 28 c2 4b 01              jump @13236
      :                          @8489
108580: 82 79 50                 a2 = u64 [a0 + 0x50]
108583: 84 bb 01                 a4 = a4 & 0x1
108586: 7b 9b 20                 u64 [a2 + 0x20] = a4
108589: 55 18 05 08              jump @8491 if a1 >=u 5
      :                          @8490
108593: 28 bc 4b 01              jump @13247
      :                          @8491
108597: 82 78 70                 a1 = u64 [a0 + 0x70]
108600: 55 18 04 08              jump @8493 if a1 >=u 4
      :                          @8492
108604: 28 a3 4b 01              jump @13233
      :                          @8493
108608: 82 77 68                 a0 = u64 [a0 + 0x68]
108611: 7b 7b 18                 u64 [a0 + 0x18] = a4
108614: 95 17 08 02              a0 = sp + 0x208
108618: 50 20 0a 05 9a 45 ff     ra = 1290, jump @4697
      :                          @8494 [@dyn 645]
108625: 7b 17 20 01              u64 [sp + 0x120] = a0
108629: 95 17 20 01              a0 = sp + 0x120
108633: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
108637: 33 07 28 0c              a0 = 0xc28
108641: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
108645: 33 07 78 08 01           a0 = 0x10878
108650: 7b 17 90 02              u64 [sp + 0x290] = a0
108654: 49 21 98 02 01           u64 [sp + 664] = 0x1
108659: 49 21 b0 02              u64 [sp + 688] = 0
108663: 95 18 e0 01              a1 = sp + 0x1e0
108667: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
108671: 49 21 a8 02 01           u64 [sp + 680] = 0x1
108676: 95 17 38 02              a0 = sp + 0x238
108680: 95 18 90 02              a1 = sp + 0x290
108684: 50 20 0c 05 b3 a6 fe     ra = 1292, jump @1491
      :                          @8495 [@dyn 646]
108691: 82 16 40 02              s1 = u64 [sp + 0x240]
108695: 82 1b 48 02              a4 = u64 [sp + 0x248]
108699: 82 17 38 02              a0 = u64 [sp + 0x238]
108703: 7b 17 70                 u64 [sp + 0x70] = a0
108706: 33 07 02                 a0 = 0x2
108709: 33 08                    a1 = 0
108711: 33 09                    a2 = 0
108713: 64 6a                    a3 = s1
108715: 33 00 0e 05              ra = 0x50e
108719: 0a 64                    ecalli 100 // 'log'
108721: 01                       fallthrough
      :                          @8496 [@dyn 647]
108722: 82 1c 70                 a5 = u64 [sp + 0x70]
108725: 82 17 68                 a0 = u64 [sp + 0x68]
108728: c8 c7 07                 a0 = a0 + a5
108731: 33 08 00 00 ff           a1 = 0xffffffffffff0000
108736: ae 87 07                 jump @8498 if a0 >=u a1
      :                          @8497
108739: 28 0b 34 01              jump @12755
      :                          @8498
108743: 33 07 c0 22 03           a0 = 0x322c0
108748: 95 77 00 00 01           a0 = a0 + 0x10000
108753: 01                       fallthrough
      :                          @8499
108754: 82 78                    a1 = u64 [a0]
108756: c9 87 09                 a2 = a0 - a1
108759: aa 69 07                 jump @8501 if a2 == s1
      :                          @8500
108762: 28 f4 33 01              jump @12755
      :                          @8501
108766: c9 c8 09                 a2 = a1 - a5
108769: 01                       fallthrough
      :                          @8502
108770: 82 7a                    a3 = u64 [a0]
108772: ab 8a ee                 jump @8499 if a3 != a1
      :                          @8503
108775: 7b 79                    u64 [a0] = a2
108777: 33 0b                    a4 = 0
108779: 01                       fallthrough
      :                          @8504
108780: ab 8a e6                 jump @8499 if a3 != a1
      :                          @8505
108783: 28 df 33 01              jump @12755
      :                          @8506 [@dyn 648]
108787: 95 17 90 02              a0 = sp + 0x290
108791: 33 08 06                 a1 = 0x6
108794: 50 20 12 05 ae b4 fe     ra = 1298, jump @1776
      :                          @8507 [@dyn 649]
108801: 95 17 e0 01              a0 = sp + 0x1e0
108805: 95 18 90 02              a1 = sp + 0x290
108809: 33 09 06                 a2 = 0x6
108812: 50 20 14 05 bc bb fe     ra = 1300, jump @1895
      :                          @8508 [@dyn 650]
108819: 3a 07 78 12 03           a0 = u64 [0x31278]
108824: 97 79 0d                 a2 = a0 << 0xd
108827: d3 97 07                 a0 = a0 ^ a2
108830: 98 79 07                 a2 = a0 >> 0x7
108833: d3 97 07                 a0 = a0 ^ a2
108836: 97 79 11                 a2 = a0 << 0x11
108839: d3 79 09                 a2 = a2 ^ a0
108842: 3e 09 78 12 03           u64 [0x31278] = a2
108847: 82 1c f0 01              a5 = u64 [sp + 0x1f0]
108851: 52 0c 07                 jump @8510 if a5 != 0
      :                          @8509
108854: 28 a1 4a 01              jump @13225
      :                          @8510
108858: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
108862: 82 b9 10                 a2 = u64 [a4 + 0x10]
108865: 56 19 01 08              jump @8512 if a2 >u 1
      :                          @8511
108869: 28 9d 4a 01              jump @13236
      :                          @8512
108873: 82 b8 08                 a1 = u64 [a4 + 0x8]
108876: 84 79 01                 a2 = a0 & 0x1
108879: 78 89 01                 u8 [a1 + 0x1] = a2
108882: 56 1c 01 08              jump @8514 if a5 >u 1
      :                          @8513
108886: 28 79 4a 01              jump @13217
      :                          @8514
108890: 82 b7 28                 a0 = u64 [a4 + 0x28]
108893: 52 07 07                 jump @8516 if a0 != 0
      :                          @8515
108896: 28 94 4a 01              jump @13252
      :                          @8516
108900: 82 b7 20                 a0 = u64 [a4 + 0x20]
108903: 78 79                    u8 [a0] = a2
108905: 3a 07 78 12 03           a0 = u64 [0x31278]
108910: 97 79 0d                 a2 = a0 << 0xd
108913: d3 97 07                 a0 = a0 ^ a2
108916: 98 79 07                 a2 = a0 >> 0x7
108919: d3 97 07                 a0 = a0 ^ a2
108922: 97 79 11                 a2 = a0 << 0x11
108925: d3 79 09                 a2 = a2 ^ a0
108928: 3e 09 78 12 03           u64 [0x31278] = a2
108933: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
108937: 52 08 07                 jump @8518 if a1 != 0
      :                          @8517
108940: 28 42 4a 01              jump @13216
      :                          @8518
108944: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
108948: 82 a9 10                 a2 = u64 [a3 + 0x10]
108951: 55 19 03 08              jump @8520 if a2 >=u 3
      :                          @8519
108955: 28 53 4a 01              jump @13248
      :                          @8520
108959: 82 a9 08                 a2 = u64 [a3 + 0x8]
108962: 84 77 01                 a0 = a0 & 0x1
108965: 78 97 02                 u8 [a2 + 0x2] = a0
108968: 55 18 03 08              jump @8522 if a1 >=u 3
      :                          @8521
108972: 28 5c 49 01              jump @13199
      :                          @8522
108976: 82 a8 40                 a1 = u64 [a3 + 0x40]
108979: 52 08 07                 jump @8524 if a1 != 0
      :                          @8523
108982: 28 3b 4a 01              jump @13251
      :                          @8524
108986: 82 a8 38                 a1 = u64 [a3 + 0x38]
108989: 78 87                    u8 [a1] = a0
108991: 3a 07 78 12 03           a0 = u64 [0x31278]
108996: 97 79 0d                 a2 = a0 << 0xd
108999: d3 97 07                 a0 = a0 ^ a2
109002: 98 79 07                 a2 = a0 >> 0x7
109005: d3 97 07                 a0 = a0 ^ a2
109008: 97 79 11                 a2 = a0 << 0x11
109011: d3 79 09                 a2 = a2 ^ a0
109014: 3e 09 78 12 03           u64 [0x31278] = a2
109019: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109023: 52 08 07                 jump @8526 if a1 != 0
      :                          @8525
109026: 28 ec 49 01              jump @13216
      :                          @8526
109030: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
109034: 82 a9 10                 a2 = u64 [a3 + 0x10]
109037: 55 19 04 08              jump @8528 if a2 >=u 4
      :                          @8527
109041: 28 f0 49 01              jump @13235
      :                          @8528
109045: 82 a9 08                 a2 = u64 [a3 + 0x8]
109048: 84 77 01                 a0 = a0 & 0x1
109051: 78 97 03                 u8 [a2 + 0x3] = a0
109054: 55 18 04 08              jump @8530 if a1 >=u 4
      :                          @8529
109058: 28 05 49 01              jump @13198
      :                          @8530
109062: 82 a8 58                 a1 = u64 [a3 + 0x58]
109065: 52 08 07                 jump @8532 if a1 != 0
      :                          @8531
109068: 28 e5 49 01              jump @13251
      :                          @8532
109072: 82 a8 50                 a1 = u64 [a3 + 0x50]
109075: 78 87                    u8 [a1] = a0
109077: 3a 07 78 12 03           a0 = u64 [0x31278]
109082: 97 79 0d                 a2 = a0 << 0xd
109085: d3 97 07                 a0 = a0 ^ a2
109088: 98 79 07                 a2 = a0 >> 0x7
109091: d3 97 07                 a0 = a0 ^ a2
109094: 97 79 11                 a2 = a0 << 0x11
109097: d3 79 09                 a2 = a2 ^ a0
109100: 3e 09 78 12 03           u64 [0x31278] = a2
109105: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109109: 52 08 07                 jump @8534 if a1 != 0
      :                          @8533
109112: 28 96 49 01              jump @13216
      :                          @8534
109116: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
109120: 82 a9 10                 a2 = u64 [a3 + 0x10]
109123: 55 19 05 08              jump @8536 if a2 >=u 5
      :                          @8535
109127: 28 a8 49 01              jump @13249
      :                          @8536
109131: 82 a9 08                 a2 = u64 [a3 + 0x8]
109134: 84 77 01                 a0 = a0 & 0x1
109137: 78 97 04                 u8 [a2 + 0x4] = a0
109140: 55 18 05 08              jump @8538 if a1 >=u 5
      :                          @8537
109144: 28 79 49 01              jump @13219
      :                          @8538
109148: 82 a8 70                 a1 = u64 [a3 + 0x70]
109151: 52 08 07                 jump @8540 if a1 != 0
      :                          @8539
109154: 28 8f 49 01              jump @13251
      :                          @8540
109158: 82 a8 68                 a1 = u64 [a3 + 0x68]
109161: 78 87                    u8 [a1] = a0
109163: 3a 07 78 12 03           a0 = u64 [0x31278]
109168: 97 79 0d                 a2 = a0 << 0xd
109171: d3 97 07                 a0 = a0 ^ a2
109174: 98 79 07                 a2 = a0 >> 0x7
109177: d3 97 07                 a0 = a0 ^ a2
109180: 97 79 11                 a2 = a0 << 0x11
109183: d3 79 09                 a2 = a2 ^ a0
109186: 3e 09 78 12 03           u64 [0x31278] = a2
109191: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109195: 52 08 07                 jump @8542 if a1 != 0
      :                          @8541
109198: 28 40 49 01              jump @13216
      :                          @8542
109202: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
109206: 82 a9 10                 a2 = u64 [a3 + 0x10]
109209: 55 19 06 08              jump @8544 if a2 >=u 6
      :                          @8543
109213: 28 59 49 01              jump @13254
      :                          @8544
109217: 82 a9 08                 a2 = u64 [a3 + 0x8]
109220: 84 77 01                 a0 = a0 & 0x1
109223: 78 97 05                 u8 [a2 + 0x5] = a0
109226: 55 18 06 08              jump @8546 if a1 >=u 6
      :                          @8545
109230: 28 27 49 01              jump @13223
      :                          @8546
109234: 82 a8 88 00              a1 = u64 [a3 + 0x88]
109238: 52 08 07                 jump @8548 if a1 != 0
      :                          @8547
109241: 28 38 49 01              jump @13251
      :                          @8548
109245: 82 a8 80 00              a1 = u64 [a3 + 0x80]
109249: 78 87                    u8 [a1] = a0
109251: 3a 07 78 12 03           a0 = u64 [0x31278]
109256: 97 79 0d                 a2 = a0 << 0xd
109259: d3 97 07                 a0 = a0 ^ a2
109262: 98 79 07                 a2 = a0 >> 0x7
109265: d3 97 07                 a0 = a0 ^ a2
109268: 97 79 11                 a2 = a0 << 0x11
109271: d3 79 09                 a2 = a2 ^ a0
109274: 3e 09 78 12 03           u64 [0x31278] = a2
109279: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109283: 55 18 02 08              jump @8550 if a1 >=u 2
      :                          @8549
109287: 28 1f 48 01              jump @13197
      :                          @8550
109291: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
109295: 82 b9 28                 a2 = u64 [a4 + 0x28]
109298: 33 0c 03                 a5 = 0x3
109301: ae c9 07                 jump @8552 if a2 >=u a5
      :                          @8551
109304: 28 ea 48 01              jump @13236
      :                          @8552
109308: 82 b9 20                 a2 = u64 [a4 + 0x20]
109311: 84 7a 01                 a3 = a0 & 0x1
109314: 78 9a 02                 u8 [a2 + 0x2] = a3
109317: 55 18 03 08              jump @8554 if a1 >=u 3
      :                          @8553
109321: 28 e3 48 01              jump @13246
      :                          @8554
109325: 82 b9 40                 a2 = u64 [a4 + 0x40]
109328: 55 19 02 08              jump @8556 if a2 >=u 2
      :                          @8555
109332: 28 e3 48 01              jump @13255
      :                          @8556
109336: 82 b8 38                 a1 = u64 [a4 + 0x38]
109339: 78 8a 01                 u8 [a1 + 0x1] = a3
109342: 3a 09 78 12 03           a2 = u64 [0x31278]
109347: 97 9a 0d                 a3 = a2 << 0xd
109350: d3 a9 09                 a2 = a2 ^ a3
109353: 98 9a 07                 a3 = a2 >> 0x7
109356: d3 9a 0a                 a3 = a3 ^ a2
109359: 97 a9 11                 a2 = a3 << 0x11
109362: d3 a9 09                 a2 = a2 ^ a3
109365: 3e 09 78 12 03           u64 [0x31278] = a2
109370: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109374: 55 18 02 08              jump @8558 if a1 >=u 2
      :                          @8557
109378: 28 96 48 01              jump @13226
      :                          @8558
109382: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
109386: 82 b9 28                 a2 = u64 [a4 + 0x28]
109389: 55 19 04 08              jump @8560 if a2 >=u 4
      :                          @8559
109393: 28 90 48 01              jump @13235
      :                          @8560
109397: 82 b9 20                 a2 = u64 [a4 + 0x20]
109400: 84 aa 01                 a3 = a3 & 0x1
109403: 78 9a 03                 u8 [a2 + 0x3] = a3
109406: 55 18 04 08              jump @8562 if a1 >=u 4
      :                          @8561
109410: 28 7d 48 01              jump @13233
      :                          @8562
109414: 82 b9 58                 a2 = u64 [a4 + 0x58]
109417: 55 19 02 08              jump @8564 if a2 >=u 2
      :                          @8563
109421: 28 8a 48 01              jump @13255
      :                          @8564
109425: 82 b8 50                 a1 = u64 [a4 + 0x50]
109428: 78 8a 01                 u8 [a1 + 0x1] = a3
109431: 3a 09 78 12 03           a2 = u64 [0x31278]
109436: 97 9a 0d                 a3 = a2 << 0xd
109439: d3 a9 09                 a2 = a2 ^ a3
109442: 98 9a 07                 a3 = a2 >> 0x7
109445: d3 9a 0a                 a3 = a3 ^ a2
109448: 97 a9 11                 a2 = a3 << 0x11
109451: d3 a9 09                 a2 = a2 ^ a3
109454: 3e 09 78 12 03           u64 [0x31278] = a2
109459: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109463: 55 18 02 08              jump @8566 if a1 >=u 2
      :                          @8565
109467: 28 3d 48 01              jump @13226
      :                          @8566
109471: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
109475: 82 b9 28                 a2 = u64 [a4 + 0x28]
109478: 55 19 05 08              jump @8568 if a2 >=u 5
      :                          @8567
109482: 28 39 48 01              jump @13237
      :                          @8568
109486: 82 b9 20                 a2 = u64 [a4 + 0x20]
109489: 84 aa 01                 a3 = a3 & 0x1
109492: 78 9a 04                 u8 [a2 + 0x4] = a3
109495: 55 18 05 08              jump @8570 if a1 >=u 5
      :                          @8569
109499: 28 25 48 01              jump @13234
      :                          @8570
109503: 82 b9 70                 a2 = u64 [a4 + 0x70]
109506: 55 19 02 08              jump @8572 if a2 >=u 2
      :                          @8571
109510: 28 31 48 01              jump @13255
      :                          @8572
109514: 82 b8 68                 a1 = u64 [a4 + 0x68]
109517: 78 8a 01                 u8 [a1 + 0x1] = a3
109520: 3a 09 78 12 03           a2 = u64 [0x31278]
109525: 97 9a 0d                 a3 = a2 << 0xd
109528: d3 a9 09                 a2 = a2 ^ a3
109531: 98 9a 07                 a3 = a2 >> 0x7
109534: d3 9a 0a                 a3 = a3 ^ a2
109537: 97 a9 11                 a2 = a3 << 0x11
109540: d3 a9 09                 a2 = a2 ^ a3
109543: 3e 09 78 12 03           u64 [0x31278] = a2
109548: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109552: 55 18 02 08              jump @8574 if a1 >=u 2
      :                          @8573
109556: 28 e4 47 01              jump @13226
      :                          @8574
109560: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
109564: 82 b9 28                 a2 = u64 [a4 + 0x28]
109567: 55 19 06 08              jump @8576 if a2 >=u 6
      :                          @8575
109571: 28 e1 47 01              jump @13238
      :                          @8576
109575: 82 b9 20                 a2 = u64 [a4 + 0x20]
109578: 84 aa 01                 a3 = a3 & 0x1
109581: 78 9a 05                 u8 [a2 + 0x5] = a3
109584: 55 18 06 08              jump @8578 if a1 >=u 6
      :                          @8577
109588: 28 d1 47 01              jump @13239
      :                          @8578
109592: 82 b9 88 00              a2 = u64 [a4 + 0x88]
109596: 55 19 02 08              jump @8580 if a2 >=u 2
      :                          @8579
109600: 28 d7 47 01              jump @13255
      :                          @8580
109604: 82 b8 80 00              a1 = u64 [a4 + 0x80]
109608: 78 8a 01                 u8 [a1 + 0x1] = a3
109611: 3a 09 78 12 03           a2 = u64 [0x31278]
109616: 97 9a 0d                 a3 = a2 << 0xd
109619: d3 a9 09                 a2 = a2 ^ a3
109622: 98 9b 07                 a4 = a2 >> 0x7
109625: d3 9b 0b                 a4 = a4 ^ a2
109628: 97 b9 11                 a2 = a4 << 0x11
109631: d3 b9 09                 a2 = a2 ^ a4
109634: 3e 09 78 12 03           u64 [0x31278] = a2
109639: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109643: 55 18 03 08              jump @8582 if a1 >=u 3
      :                          @8581
109647: 28 80 47 01              jump @13217
      :                          @8582
109651: 82 1c e8 01              a5 = u64 [sp + 0x1e8]
109655: 82 c9 40                 a2 = u64 [a5 + 0x40]
109658: 55 19 04 08              jump @8584 if a2 >=u 4
      :                          @8583
109662: 28 84 47 01              jump @13236
      :                          @8584
109666: 82 c9 38                 a2 = u64 [a5 + 0x38]
109669: 84 bb 01                 a4 = a4 & 0x1
109672: 78 9b 03                 u8 [a2 + 0x3] = a4
109675: 55 18 04 08              jump @8586 if a1 >=u 4
      :                          @8585
109679: 28 81 47 01              jump @13250
      :                          @8586
109683: 82 c9 58                 a2 = u64 [a5 + 0x58]
109686: 55 19 03 08              jump @8588 if a2 >=u 3
      :                          @8587
109690: 28 80 47 01              jump @13258
      :                          @8588
109694: 82 c8 50                 a1 = u64 [a5 + 0x50]
109697: 78 8b 02                 u8 [a1 + 0x2] = a4
109700: 3a 09 78 12 03           a2 = u64 [0x31278]
109705: 97 9a 0d                 a3 = a2 << 0xd
109708: d3 a9 09                 a2 = a2 ^ a3
109711: 98 9a 07                 a3 = a2 >> 0x7
109714: d3 9a 0a                 a3 = a3 ^ a2
109717: 97 a9 11                 a2 = a3 << 0x11
109720: d3 a9 09                 a2 = a2 ^ a3
109723: 3e 09 78 12 03           u64 [0x31278] = a2
109728: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109732: 55 18 03 08              jump @8590 if a1 >=u 3
      :                          @8589
109736: 28 31 47 01              jump @13227
      :                          @8590
109740: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
109744: 82 b9 40                 a2 = u64 [a4 + 0x40]
109747: 55 19 05 08              jump @8592 if a2 >=u 5
      :                          @8591
109751: 28 2c 47 01              jump @13237
      :                          @8592
109755: 82 b9 38                 a2 = u64 [a4 + 0x38]
109758: 84 aa 01                 a3 = a3 & 0x1
109761: 78 9a 04                 u8 [a2 + 0x4] = a3
109764: 55 18 05 08              jump @8594 if a1 >=u 5
      :                          @8593
109768: 28 18 47 01              jump @13234
      :                          @8594
109772: 82 b9 70                 a2 = u64 [a4 + 0x70]
109775: 55 19 03 08              jump @8596 if a2 >=u 3
      :                          @8595
109779: 28 27 47 01              jump @13258
      :                          @8596
109783: 82 b8 68                 a1 = u64 [a4 + 0x68]
109786: 78 8a 02                 u8 [a1 + 0x2] = a3
109789: 3a 09 78 12 03           a2 = u64 [0x31278]
109794: 97 9a 0d                 a3 = a2 << 0xd
109797: d3 a9 09                 a2 = a2 ^ a3
109800: 98 9a 07                 a3 = a2 >> 0x7
109803: d3 9a 0a                 a3 = a3 ^ a2
109806: 97 a9 11                 a2 = a3 << 0x11
109809: d3 a9 09                 a2 = a2 ^ a3
109812: 3e 09 78 12 03           u64 [0x31278] = a2
109817: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109821: 55 18 03 08              jump @8598 if a1 >=u 3
      :                          @8597
109825: 28 d8 46 01              jump @13227
      :                          @8598
109829: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
109833: 82 b9 40                 a2 = u64 [a4 + 0x40]
109836: 55 19 06 08              jump @8600 if a2 >=u 6
      :                          @8599
109840: 28 d4 46 01              jump @13238
      :                          @8600
109844: 82 b9 38                 a2 = u64 [a4 + 0x38]
109847: 84 aa 01                 a3 = a3 & 0x1
109850: 78 9a 05                 u8 [a2 + 0x5] = a3
109853: 55 18 06 08              jump @8602 if a1 >=u 6
      :                          @8601
109857: 28 c4 46 01              jump @13239
      :                          @8602
109861: 82 b9 88 00              a2 = u64 [a4 + 0x88]
109865: 55 19 03 08              jump @8604 if a2 >=u 3
      :                          @8603
109869: 28 cd 46 01              jump @13258
      :                          @8604
109873: 82 b8 80 00              a1 = u64 [a4 + 0x80]
109877: 78 8a 02                 u8 [a1 + 0x2] = a3
109880: 3a 09 78 12 03           a2 = u64 [0x31278]
109885: 97 9a 0d                 a3 = a2 << 0xd
109888: d3 a9 09                 a2 = a2 ^ a3
109891: 98 9b 07                 a4 = a2 >> 0x7
109894: d3 9b 0b                 a4 = a4 ^ a2
109897: 97 b9 11                 a2 = a4 << 0x11
109900: d3 b9 09                 a2 = a2 ^ a4
109903: 3e 09 78 12 03           u64 [0x31278] = a2
109908: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109912: 55 18 04 08              jump @8606 if a1 >=u 4
      :                          @8605
109916: 28 73 46 01              jump @13217
      :                          @8606
109920: 82 1c e8 01              a5 = u64 [sp + 0x1e8]
109924: 82 c9 58                 a2 = u64 [a5 + 0x58]
109927: 55 19 05 08              jump @8608 if a2 >=u 5
      :                          @8607
109931: 28 77 46 01              jump @13236
      :                          @8608
109935: 82 c9 50                 a2 = u64 [a5 + 0x50]
109938: 84 bb 01                 a4 = a4 & 0x1
109941: 78 9b 04                 u8 [a2 + 0x4] = a4
109944: 55 18 05 08              jump @8610 if a1 >=u 5
      :                          @8609
109948: 28 71 46 01              jump @13247
      :                          @8610
109952: 82 c9 70                 a2 = u64 [a5 + 0x70]
109955: 55 19 04 08              jump @8612 if a2 >=u 4
      :                          @8611
109959: 28 7c 46 01              jump @13265
      :                          @8612
109963: 82 c8 68                 a1 = u64 [a5 + 0x68]
109966: 78 8b 03                 u8 [a1 + 0x3] = a4
109969: 3a 09 78 12 03           a2 = u64 [0x31278]
109974: 97 9a 0d                 a3 = a2 << 0xd
109977: d3 a9 09                 a2 = a2 ^ a3
109980: 98 9a 07                 a3 = a2 >> 0x7
109983: d3 9a 0a                 a3 = a3 ^ a2
109986: 97 a9 11                 a2 = a3 << 0x11
109989: d3 a9 09                 a2 = a2 ^ a3
109992: 3e 09 78 12 03           u64 [0x31278] = a2
109997: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
110001: 55 18 04 08              jump @8614 if a1 >=u 4
      :                          @8613
110005: 28 2a 46 01              jump @13233
      :                          @8614
110009: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
110013: 82 b9 58                 a2 = u64 [a4 + 0x58]
110016: 55 19 06 08              jump @8616 if a2 >=u 6
      :                          @8615
110020: 28 20 46 01              jump @13238
      :                          @8616
110024: 82 b9 50                 a2 = u64 [a4 + 0x50]
110027: 84 aa 01                 a3 = a3 & 0x1
110030: 78 9a 05                 u8 [a2 + 0x5] = a3
110033: 55 18 06 08              jump @8618 if a1 >=u 6
      :                          @8617
110037: 28 10 46 01              jump @13239
      :                          @8618
110041: 82 b9 88 00              a2 = u64 [a4 + 0x88]
110045: 55 19 04 08              jump @8620 if a2 >=u 4
      :                          @8619
110049: 28 22 46 01              jump @13265
      :                          @8620
110053: 82 b8 80 00              a1 = u64 [a4 + 0x80]
110057: 78 8a 03                 u8 [a1 + 0x3] = a3
110060: 3a 09 78 12 03           a2 = u64 [0x31278]
110065: 97 9a 0d                 a3 = a2 << 0xd
110068: d3 a9 09                 a2 = a2 ^ a3
110071: 98 9b 07                 a4 = a2 >> 0x7
110074: d3 9b 0b                 a4 = a4 ^ a2
110077: 97 b9 11                 a2 = a4 << 0x11
110080: d3 b9 09                 a2 = a2 ^ a4
110083: 3e 09 78 12 03           u64 [0x31278] = a2
110088: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
110092: 55 18 05 08              jump @8622 if a1 >=u 5
      :                          @8621
110096: 28 bf 45 01              jump @13217
      :                          @8622
110100: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
110104: 82 79 70                 a2 = u64 [a0 + 0x70]
110107: 33 0c 06                 a5 = 0x6
110110: ae c9 07                 jump @8624 if a2 >=u a5
      :                          @8623
110113: 28 c1 45 01              jump @13236
      :                          @8624
110117: 82 79 68                 a2 = u64 [a0 + 0x68]
110120: 84 bb 01                 a4 = a4 & 0x1
110123: 78 9b 05                 u8 [a2 + 0x5] = a4
110126: 55 18 06 08              jump @8626 if a1 >=u 6
      :                          @8625
110130: 28 c6 45 01              jump @13256
      :                          @8626
110134: 82 79 88 00              a2 = u64 [a0 + 0x88]
110138: 33 0a 05                 a3 = 0x5
110141: ae a9 07                 jump @8628 if a2 >=u a3
      :                          @8627
110144: 28 ce 45 01              jump @13276
      :                          @8628
110148: 82 79 80 00              a2 = u64 [a0 + 0x80]
110152: 78 9b 04                 u8 [a2 + 0x4] = a4
110155: 50 20 16 05 7b 34 ff     ra = 1302, jump @4437
      :                          @8629 [@dyn 651]
110162: 84 77 01                 a0 = a0 & 0x1
110165: 84 88 01                 a1 = a1 & 0x1
110168: 78 17 c8 01              u8 [sp + 0x1c8] = a0
110172: 78 18 20 01              u8 [sp + 0x120] = a1
110176: 95 17 c8 01              a0 = sp + 0x1c8
110180: 7b 17 38 02              u64 [sp + 0x238] = a0
110184: 33 07 80 0c              a0 = 0xc80
110188: 7b 17 40 02              u64 [sp + 0x240] = a0
110192: 95 18 20 01              a1 = sp + 0x120
110196: 7b 18 48 02              u64 [sp + 0x248] = a1
110200: 7b 17 50 02              u64 [sp + 0x250] = a0
110204: 33 07 90 08 01           a0 = 0x10890
110209: 7b 17 90 02              u64 [sp + 0x290] = a0
110213: 49 21 98 02 02           u64 [sp + 664] = 0x2
110218: 49 21 b0 02              u64 [sp + 688] = 0
110222: 95 18 38 02              a1 = sp + 0x238
110226: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
110230: 49 21 a8 02 02           u64 [sp + 680] = 0x2
110235: 95 17 08 02              a0 = sp + 0x208
110239: 95 18 90 02              a1 = sp + 0x290
110243: 50 20 18 05 9c a0 fe     ra = 1304, jump @1491
      :                          @8630 [@dyn 652]
110250: 82 16 10 02              s1 = u64 [sp + 0x210]
110254: 82 1b 18 02              a4 = u64 [sp + 0x218]
110258: 82 17 08 02              a0 = u64 [sp + 0x208]
110262: 7b 17 70                 u64 [sp + 0x70] = a0
110265: 33 07 02                 a0 = 0x2
110268: 33 08                    a1 = 0
110270: 33 09                    a2 = 0
110272: 64 6a                    a3 = s1
110274: 33 00 1a 05              ra = 0x51a
110278: 0a 64                    ecalli 100 // 'log'
110280: 01                       fallthrough
      :                          @8631 [@dyn 653]
110281: 82 1c 70                 a5 = u64 [sp + 0x70]
110284: 82 17 68                 a0 = u64 [sp + 0x68]
110287: c8 c7 07                 a0 = a0 + a5
110290: 33 08 00 00 ff           a1 = 0xffffffffffff0000
110295: ae 87 06                 jump @8633 if a0 >=u a1
      :                          @8632
110298: 28 19 7e                 jump @10533
      :                          @8633
110301: 33 07 c0 22 03           a0 = 0x322c0
110306: 95 77 00 00 01           a0 = a0 + 0x10000
110311: 01                       fallthrough
      :                          @8634
110312: 82 78                    a1 = u64 [a0]
110314: c9 87 09                 a2 = a0 - a1
110317: aa 69 06                 jump @8636 if a2 == s1
      :                          @8635
110320: 28 03 7e                 jump @10533
      :                          @8636
110323: c9 c8 09                 a2 = a1 - a5
110326: 01                       fallthrough
      :                          @8637
110327: 82 7a                    a3 = u64 [a0]
110329: ab 8a ef                 jump @8634 if a3 != a1
      :                          @8638
110332: 7b 79                    u64 [a0] = a2
110334: 33 0b                    a4 = 0
110336: 01                       fallthrough
      :                          @8639
110337: ab 8a e7                 jump @8634 if a3 != a1
      :                          @8640
110340: 28 ef 7d                 jump @10533
      :                          @8641 [@dyn 654]
110343: 95 17 90 02              a0 = sp + 0x290
110347: 33 08 05                 a1 = 0x5
110350: 50 20 1e 05 9a ae fe     ra = 1310, jump @1776
      :                          @8642 [@dyn 655]
110357: 95 17 e0 01              a0 = sp + 0x1e0
110361: 95 18 90 02              a1 = sp + 0x290
110365: 33 09 05                 a2 = 0x5
110368: 50 20 20 05 a8 b5 fe     ra = 1312, jump @1895
      :                          @8643 [@dyn 656]
110375: 3a 07 78 12 03           a0 = u64 [0x31278]
110380: 97 78 0d                 a1 = a0 << 0xd
110383: d3 87 07                 a0 = a0 ^ a1
110386: 98 78 07                 a1 = a0 >> 0x7
110389: d3 87 07                 a0 = a0 ^ a1
110392: 97 78 11                 a1 = a0 << 0x11
110395: d3 78 08                 a1 = a1 ^ a0
110398: 84 77 01                 a0 = a0 & 0x1
110401: 3e 08 78 12 03           u64 [0x31278] = a1
110406: 51 07 25                 jump @8649 if a0 == 0
      :                          @8644
110409: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
110413: 52 07 07                 jump @8646 if a0 != 0
      :                          @8645
110416: 28 ab 44 01              jump @13259
      :                          @8646
110420: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
110424: 82 a8 10                 a1 = u64 [a3 + 0x10]
110427: 56 18 01 08              jump @8648 if a1 >u 1
      :                          @8647
110431: 28 70 44 01              jump @13217
      :                          @8648
110435: 82 a7 08                 a0 = u64 [a3 + 0x8]
110438: 46 17 01 01              u8 [a0 + 1] = 0x1
110442: 01                       fallthrough
      :                          @8649
110443: 3a 07 78 12 03           a0 = u64 [0x31278]
110448: 97 78 0d                 a1 = a0 << 0xd
110451: d3 87 07                 a0 = a0 ^ a1
110454: 98 78 07                 a1 = a0 >> 0x7
110457: d3 87 07                 a0 = a0 ^ a1
110460: 97 78 11                 a1 = a0 << 0x11
110463: d3 78 08                 a1 = a1 ^ a0
110466: 84 77 01                 a0 = a0 & 0x1
110469: 3e 08 78 12 03           u64 [0x31278] = a1
110474: 51 07 25                 jump @8655 if a0 == 0
      :                          @8650
110477: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
110481: 52 07 07                 jump @8652 if a0 != 0
      :                          @8651
110484: 28 67 44 01              jump @13259
      :                          @8652
110488: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
110492: 82 78 10                 a1 = u64 [a0 + 0x10]
110495: 55 18 03 08              jump @8654 if a1 >=u 3
      :                          @8653
110499: 28 36 44 01              jump @13227
      :                          @8654
110503: 82 77 08                 a0 = u64 [a0 + 0x8]
110506: 46 17 02 01              u8 [a0 + 2] = 0x1
110510: 01                       fallthrough
      :                          @8655
110511: 3a 08 78 12 03           a1 = u64 [0x31278]
110516: 97 89 0d                 a2 = a1 << 0xd
110519: d3 98 08                 a1 = a1 ^ a2
110522: 98 89 07                 a2 = a1 >> 0x7
110525: d3 98 08                 a1 = a1 ^ a2
110528: 97 89 11                 a2 = a1 << 0x11
110531: d3 89 09                 a2 = a2 ^ a1
110534: 84 88 01                 a1 = a1 & 0x1
110537: 3e 09 78 12 03           u64 [0x31278] = a2
110542: 51 08 27                 jump @8661 if a1 == 0
      :                          @8656
110545: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
110549: 52 08 07                 jump @8658 if a1 != 0
      :                          @8657
110552: 28 f6 43 01              jump @13216
      :                          @8658
110556: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
110560: 82 98 10                 a1 = u64 [a2 + 0x10]
110563: 33 0a 04                 a3 = 0x4
110566: ae a8 07                 jump @8660 if a1 >=u a3
      :                          @8659
110569: 28 f6 43 01              jump @13233
      :                          @8660
110573: 82 98 08                 a1 = u64 [a2 + 0x8]
110576: 46 18 03 01              u8 [a1 + 3] = 0x1
110580: 01                       fallthrough
      :                          @8661
110581: 3a 08 78 12 03           a1 = u64 [0x31278]
110586: 97 89 0d                 a2 = a1 << 0xd
110589: d3 98 08                 a1 = a1 ^ a2
110592: 98 89 07                 a2 = a1 >> 0x7
110595: d3 98 08                 a1 = a1 ^ a2
110598: 97 89 11                 a2 = a1 << 0x11
110601: d3 89 09                 a2 = a2 ^ a1
110604: 84 88 01                 a1 = a1 & 0x1
110607: 3e 09 78 12 03           u64 [0x31278] = a2
110612: 51 08 25                 jump @8667 if a1 == 0
      :                          @8662
110615: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
110619: 52 07 07                 jump @8664 if a0 != 0
      :                          @8663
110622: 28 dd 43 01              jump @13259
      :                          @8664
110626: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
110630: 82 78 10                 a1 = u64 [a0 + 0x10]
110633: 55 18 05 08              jump @8666 if a1 >=u 5
      :                          @8665
110637: 28 bb 43 01              jump @13242
      :                          @8666
110641: 82 77 08                 a0 = u64 [a0 + 0x8]
110644: 46 17 04 01              u8 [a0 + 4] = 0x1
110648: 01                       fallthrough
      :                          @8667
110649: 3a 07 78 12 03           a0 = u64 [0x31278]
110654: 97 78 0d                 a1 = a0 << 0xd
110657: d3 87 07                 a0 = a0 ^ a1
110660: 98 78 07                 a1 = a0 >> 0x7
110663: d3 87 07                 a0 = a0 ^ a1
110666: 97 78 11                 a1 = a0 << 0x11
110669: d3 78 08                 a1 = a1 ^ a0
110672: 84 77 01                 a0 = a0 & 0x1
110675: 3e 08 78 12 03           u64 [0x31278] = a1
110680: 51 07 28                 jump @8673 if a0 == 0
      :                          @8668
110683: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
110687: 55 18 02 08              jump @8670 if a1 >=u 2
      :                          @8669
110691: 28 88 43 01              jump @13245
      :                          @8670
110695: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
110699: 82 a8 28                 a1 = u64 [a3 + 0x28]
110702: 33 0b 03                 a4 = 0x3
110705: ae b8 07                 jump @8672 if a1 >=u a4
      :                          @8671
110708: 28 5b 43 01              jump @13217
      :                          @8672
110712: 82 a7 20                 a0 = u64 [a3 + 0x20]
110715: 46 17 02 01              u8 [a0 + 2] = 0x1
110719: 01                       fallthrough
      :                          @8673
110720: 3a 07 78 12 03           a0 = u64 [0x31278]
110725: 97 78 0d                 a1 = a0 << 0xd
110728: d3 87 07                 a0 = a0 ^ a1
110731: 98 78 07                 a1 = a0 >> 0x7
110734: d3 87 07                 a0 = a0 ^ a1
110737: 97 78 11                 a1 = a0 << 0x11
110740: d3 78 08                 a1 = a1 ^ a0
110743: 84 77 01                 a0 = a0 & 0x1
110746: 3e 08 78 12 03           u64 [0x31278] = a1
110751: 51 07 26                 jump @8679 if a0 == 0
      :                          @8674
110754: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
110758: 55 18 02 08              jump @8676 if a1 >=u 2
      :                          @8675
110762: 28 41 43 01              jump @13245
      :                          @8676
110766: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
110770: 82 78 28                 a1 = u64 [a0 + 0x28]
110773: 55 18 04 08              jump @8678 if a1 >=u 4
      :                          @8677
110777: 28 31 43 01              jump @13244
      :                          @8678
110781: 82 77 20                 a0 = u64 [a0 + 0x20]
110784: 46 17 03 01              u8 [a0 + 3] = 0x1
110788: 01                       fallthrough
      :                          @8679
110789: 3a 08 78 12 03           a1 = u64 [0x31278]
110794: 97 89 0d                 a2 = a1 << 0xd
110797: d3 98 08                 a1 = a1 ^ a2
110800: 98 89 07                 a2 = a1 >> 0x7
110803: d3 98 08                 a1 = a1 ^ a2
110806: 97 89 11                 a2 = a1 << 0x11
110809: d3 89 09                 a2 = a2 ^ a1
110812: 84 88 01                 a1 = a1 & 0x1
110815: 3e 09 78 12 03           u64 [0x31278] = a2
110820: 51 08 28                 jump @8685 if a1 == 0
      :                          @8680
110823: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
110827: 55 18 02 08              jump @8682 if a1 >=u 2
      :                          @8681
110831: 28 fc 42 01              jump @13245
      :                          @8682
110835: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
110839: 82 98 28                 a1 = u64 [a2 + 0x28]
110842: 33 0a 05                 a3 = 0x5
110845: ae a8 07                 jump @8684 if a1 >=u a3
      :                          @8683
110848: 28 e8 42 01              jump @13242
      :                          @8684
110852: 82 98 20                 a1 = u64 [a2 + 0x20]
110855: 46 18 04 01              u8 [a1 + 4] = 0x1
110859: 01                       fallthrough
      :                          @8685
110860: 3a 08 78 12 03           a1 = u64 [0x31278]
110865: 97 89 0d                 a2 = a1 << 0xd
110868: d3 98 08                 a1 = a1 ^ a2
110871: 98 89 07                 a2 = a1 >> 0x7
110874: d3 98 08                 a1 = a1 ^ a2
110877: 97 89 11                 a2 = a1 << 0x11
110880: d3 89 09                 a2 = a2 ^ a1
110883: 84 88 01                 a1 = a1 & 0x1
110886: 3e 09 78 12 03           u64 [0x31278] = a2
110891: 51 08 28                 jump @8691 if a1 == 0
      :                          @8686
110894: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
110898: 55 18 03 08              jump @8688 if a1 >=u 3
      :                          @8687
110902: 28 b3 42 01              jump @13243
      :                          @8688
110906: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
110910: 82 98 40                 a1 = u64 [a2 + 0x40]
110913: 33 0a 04                 a3 = 0x4
110916: ae a8 07                 jump @8690 if a1 >=u a3
      :                          @8689
110919: 28 88 42 01              jump @13217
      :                          @8690
110923: 82 97 38                 a0 = u64 [a2 + 0x38]
110926: 46 17 03 01              u8 [a0 + 3] = 0x1
110930: 01                       fallthrough
      :                          @8691
110931: 3a 08 78 12 03           a1 = u64 [0x31278]
110936: 97 89 0d                 a2 = a1 << 0xd
110939: d3 98 08                 a1 = a1 ^ a2
110942: 98 89 07                 a2 = a1 >> 0x7
110945: d3 98 08                 a1 = a1 ^ a2
110948: 97 89 11                 a2 = a1 << 0x11
110951: d3 89 09                 a2 = a2 ^ a1
110954: 84 88 01                 a1 = a1 & 0x1
110957: 3e 09 78 12 03           u64 [0x31278] = a2
110962: 51 08 28                 jump @8697 if a1 == 0
      :                          @8692
110965: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
110969: 55 18 03 08              jump @8694 if a1 >=u 3
      :                          @8693
110973: 28 6c 42 01              jump @13243
      :                          @8694
110977: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
110981: 82 98 40                 a1 = u64 [a2 + 0x40]
110984: 33 0a 05                 a3 = 0x5
110987: ae a8 07                 jump @8696 if a1 >=u a3
      :                          @8695
110990: 28 5a 42 01              jump @13242
      :                          @8696
110994: 82 98 38                 a1 = u64 [a2 + 0x38]
110997: 46 18 04 01              u8 [a1 + 4] = 0x1
111001: 01                       fallthrough
      :                          @8697
111002: 3a 08 78 12 03           a1 = u64 [0x31278]
111007: 97 89 0d                 a2 = a1 << 0xd
111010: d3 98 08                 a1 = a1 ^ a2
111013: 98 89 07                 a2 = a1 >> 0x7
111016: d3 98 08                 a1 = a1 ^ a2
111019: 97 89 11                 a2 = a1 << 0x11
111022: d3 89 09                 a2 = a2 ^ a1
111025: 84 88 01                 a1 = a1 & 0x1
111028: 3e 09 78 12 03           u64 [0x31278] = a2
111033: 51 08 28                 jump @8703 if a1 == 0
      :                          @8698
111036: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111040: 55 18 04 08              jump @8700 if a1 >=u 4
      :                          @8699
111044: 28 26 42 01              jump @13244
      :                          @8700
111048: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
111052: 82 98 58                 a1 = u64 [a2 + 0x58]
111055: 33 0a 05                 a3 = 0x5
111058: ae a8 07                 jump @8702 if a1 >=u a3
      :                          @8701
111061: 28 fa 41 01              jump @13217
      :                          @8702
111065: 82 97 50                 a0 = u64 [a2 + 0x50]
111068: 46 17 04 01              u8 [a0 + 4] = 0x1
111072: 01                       fallthrough
      :                          @8703
111073: 95 17 90 02              a0 = sp + 0x290
111077: 95 18 e0 01              a1 = sp + 0x1e0
111081: 50 20 22 05 a1 41 ff     ra = 1314, jump @4853
      :                          @8704 [@dyn 657]
111088: 82 17 90 02              a0 = u64 [sp + 0x290]
111092: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
111102: aa 87 07                 jump @8706 if a0 == a1
      :                          @8705
111105: 28 be 32 01              jump @12908
      :                          @8706
111109: 49 21 08 02              u64 [sp + 520] = 0
111113: 49 21 10 02 08           u64 [sp + 528] = 0x8
111118: 49 21 18 02              u64 [sp + 536] = 0
111122: 28 c6 32 01              jump @12909
      :                          @8707 [@dyn 658]
111126: 95 17 90 02              a0 = sp + 0x290
111130: 33 08 05                 a1 = 0x5
111133: 50 20 26 05 8b ab fe     ra = 1318, jump @1776
      :                          @8708 [@dyn 659]
111140: 95 17 e0 01              a0 = sp + 0x1e0
111144: 95 18 90 02              a1 = sp + 0x290
111148: 33 09 05                 a2 = 0x5
111151: 50 20 28 05 99 b2 fe     ra = 1320, jump @1895
      :                          @8709 [@dyn 660]
111158: 3a 08 78 12 03           a1 = u64 [0x31278]
111163: 97 89 0d                 a2 = a1 << 0xd
111166: d3 98 08                 a1 = a1 ^ a2
111169: 98 89 07                 a2 = a1 >> 0x7
111172: d3 98 08                 a1 = a1 ^ a2
111175: 97 89 11                 a2 = a1 << 0x11
111178: d3 89 09                 a2 = a2 ^ a1
111181: 84 88 01                 a1 = a1 & 0x1
111184: 3e 09 78 12 03           u64 [0x31278] = a2
111189: 51 08 27                 jump @8715 if a1 == 0
      :                          @8710
111192: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111196: 52 08 07                 jump @8712 if a1 != 0
      :                          @8711
111199: 28 a7 41 01              jump @13268
      :                          @8712
111203: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
111207: 82 98 10                 a1 = u64 [a2 + 0x10]
111210: 33 0a 02                 a3 = 0x2
111213: ae a8 07                 jump @8714 if a1 >=u a3
      :                          @8713
111216: 28 68 41 01              jump @13226
      :                          @8714
111220: 82 98 08                 a1 = u64 [a2 + 0x8]
111223: 46 18 01 01              u8 [a1 + 1] = 0x1
111227: 01                       fallthrough
      :                          @8715
111228: 3a 08 78 12 03           a1 = u64 [0x31278]
111233: 97 89 0d                 a2 = a1 << 0xd
111236: d3 98 08                 a1 = a1 ^ a2
111239: 98 89 07                 a2 = a1 >> 0x7
111242: d3 98 08                 a1 = a1 ^ a2
111245: 97 89 11                 a2 = a1 << 0x11
111248: d3 89 09                 a2 = a2 ^ a1
111251: 84 88 01                 a1 = a1 & 0x1
111254: 3e 09 78 12 03           u64 [0x31278] = a2
111259: 51 08 25                 jump @8721 if a1 == 0
      :                          @8716
111262: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
111266: 52 07 07                 jump @8718 if a0 != 0
      :                          @8717
111269: 28 56 41 01              jump @13259
      :                          @8718
111273: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
111277: 82 78 10                 a1 = u64 [a0 + 0x10]
111280: 55 18 03 08              jump @8720 if a1 >=u 3
      :                          @8719
111284: 28 25 41 01              jump @13227
      :                          @8720
111288: 82 77 08                 a0 = u64 [a0 + 0x8]
111291: 46 17 02 01              u8 [a0 + 2] = 0x1
111295: 01                       fallthrough
      :                          @8721
111296: 3a 08 78 12 03           a1 = u64 [0x31278]
111301: 97 89 0d                 a2 = a1 << 0xd
111304: d3 98 08                 a1 = a1 ^ a2
111307: 98 89 07                 a2 = a1 >> 0x7
111310: d3 98 08                 a1 = a1 ^ a2
111313: 97 89 11                 a2 = a1 << 0x11
111316: d3 89 09                 a2 = a2 ^ a1
111319: 84 88 01                 a1 = a1 & 0x1
111322: 3e 09 78 12 03           u64 [0x31278] = a2
111327: 51 08 27                 jump @8727 if a1 == 0
      :                          @8722
111330: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111334: 52 08 07                 jump @8724 if a1 != 0
      :                          @8723
111337: 28 1d 41 01              jump @13268
      :                          @8724
111341: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
111345: 82 98 10                 a1 = u64 [a2 + 0x10]
111348: 33 0a 04                 a3 = 0x4
111351: ae a8 07                 jump @8726 if a1 >=u a3
      :                          @8725
111354: 28 f0 40 01              jump @13244
      :                          @8726
111358: 82 98 08                 a1 = u64 [a2 + 0x8]
111361: 46 18 03 01              u8 [a1 + 3] = 0x1
111365: 01                       fallthrough
      :                          @8727
111366: 3a 08 78 12 03           a1 = u64 [0x31278]
111371: 97 89 0d                 a2 = a1 << 0xd
111374: d3 98 08                 a1 = a1 ^ a2
111377: 98 89 07                 a2 = a1 >> 0x7
111380: d3 98 08                 a1 = a1 ^ a2
111383: 97 89 11                 a2 = a1 << 0x11
111386: d3 89 09                 a2 = a2 ^ a1
111389: 84 88 01                 a1 = a1 & 0x1
111392: 3e 09 78 12 03           u64 [0x31278] = a2
111397: 51 08 25                 jump @8733 if a1 == 0
      :                          @8728
111400: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
111404: 52 07 07                 jump @8730 if a0 != 0
      :                          @8729
111407: 28 d8 40 01              jump @13269
      :                          @8730
111411: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
111415: 82 78 10                 a1 = u64 [a0 + 0x10]
111418: 55 18 05 08              jump @8732 if a1 >=u 5
      :                          @8731
111422: 28 aa 40 01              jump @13242
      :                          @8732
111426: 82 77 08                 a0 = u64 [a0 + 0x8]
111429: 46 17 04 01              u8 [a0 + 4] = 0x1
111433: 01                       fallthrough
      :                          @8733
111434: 3a 08 78 12 03           a1 = u64 [0x31278]
111439: 97 89 0d                 a2 = a1 << 0xd
111442: d3 98 08                 a1 = a1 ^ a2
111445: 98 89 07                 a2 = a1 >> 0x7
111448: d3 98 08                 a1 = a1 ^ a2
111451: 97 89 11                 a2 = a1 << 0x11
111454: d3 89 09                 a2 = a2 ^ a1
111457: 84 88 01                 a1 = a1 & 0x1
111460: 3e 09 78 12 03           u64 [0x31278] = a2
111465: 51 08 24                 jump @8739 if a1 == 0
      :                          @8734
111468: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111472: 55 18 02 08              jump @8736 if a1 >=u 2
      :                          @8735
111476: 28 77 40 01              jump @13245
      :                          @8736
111480: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
111484: 82 89 28                 a2 = u64 [a1 + 0x28]
111487: 52 09 07                 jump @8738 if a2 != 0
      :                          @8737
111490: 28 55 40 01              jump @13225
      :                          @8738
111494: 82 88 20                 a1 = u64 [a1 + 0x20]
111497: 46 08 01                 u8 [a1 + 0] = 0x1
111500: 01                       fallthrough
      :                          @8739
111501: 3a 08 78 12 03           a1 = u64 [0x31278]
111506: 97 89 0d                 a2 = a1 << 0xd
111509: d3 98 08                 a1 = a1 ^ a2
111512: 98 89 07                 a2 = a1 >> 0x7
111515: d3 98 08                 a1 = a1 ^ a2
111518: 97 89 11                 a2 = a1 << 0x11
111521: d3 89 09                 a2 = a2 ^ a1
111524: 84 88 01                 a1 = a1 & 0x1
111527: 3e 09 78 12 03           u64 [0x31278] = a2
111532: 51 08 28                 jump @8745 if a1 == 0
      :                          @8740
111535: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111539: 55 18 02 08              jump @8742 if a1 >=u 2
      :                          @8741
111543: 28 34 40 01              jump @13245
      :                          @8742
111547: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
111551: 82 98 28                 a1 = u64 [a2 + 0x28]
111554: 33 0a 03                 a3 = 0x3
111557: ae a8 07                 jump @8744 if a1 >=u a3
      :                          @8743
111560: 28 07 40 01              jump @13217
      :                          @8744
111564: 82 97 20                 a0 = u64 [a2 + 0x20]
111567: 46 17 02 01              u8 [a0 + 2] = 0x1
111571: 01                       fallthrough
      :                          @8745
111572: 3a 08 78 12 03           a1 = u64 [0x31278]
111577: 97 89 0d                 a2 = a1 << 0xd
111580: d3 98 08                 a1 = a1 ^ a2
111583: 98 89 07                 a2 = a1 >> 0x7
111586: d3 98 08                 a1 = a1 ^ a2
111589: 97 89 11                 a2 = a1 << 0x11
111592: d3 89 09                 a2 = a2 ^ a1
111595: 84 88 01                 a1 = a1 & 0x1
111598: 3e 09 78 12 03           u64 [0x31278] = a2
111603: 51 08 28                 jump @8751 if a1 == 0
      :                          @8746
111606: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111610: 55 18 02 08              jump @8748 if a1 >=u 2
      :                          @8747
111614: 28 ed 3f 01              jump @13245
      :                          @8748
111618: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
111622: 82 98 28                 a1 = u64 [a2 + 0x28]
111625: 33 0a 04                 a3 = 0x4
111628: ae a8 07                 jump @8750 if a1 >=u a3
      :                          @8749
111631: 28 db 3f 01              jump @13244
      :                          @8750
111635: 82 98 20                 a1 = u64 [a2 + 0x20]
111638: 46 18 03 01              u8 [a1 + 3] = 0x1
111642: 01                       fallthrough
      :                          @8751
111643: 3a 08 78 12 03           a1 = u64 [0x31278]
111648: 97 89 0d                 a2 = a1 << 0xd
111651: d3 98 08                 a1 = a1 ^ a2
111654: 98 89 07                 a2 = a1 >> 0x7
111657: d3 98 08                 a1 = a1 ^ a2
111660: 97 89 11                 a2 = a1 << 0x11
111663: d3 89 09                 a2 = a2 ^ a1
111666: 84 88 01                 a1 = a1 & 0x1
111669: 3e 09 78 12 03           u64 [0x31278] = a2
111674: 51 08 26                 jump @8757 if a1 == 0
      :                          @8752
111677: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111681: 55 18 02 08              jump @8754 if a1 >=u 2
      :                          @8753
111685: 28 a6 3f 01              jump @13245
      :                          @8754
111689: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
111693: 82 78 28                 a1 = u64 [a0 + 0x28]
111696: 55 18 05 08              jump @8756 if a1 >=u 5
      :                          @8755
111700: 28 94 3f 01              jump @13242
      :                          @8756
111704: 82 77 20                 a0 = u64 [a0 + 0x20]
111707: 46 17 04 01              u8 [a0 + 4] = 0x1
111711: 01                       fallthrough
      :                          @8757
111712: 3a 08 78 12 03           a1 = u64 [0x31278]
111717: 97 89 0d                 a2 = a1 << 0xd
111720: d3 98 08                 a1 = a1 ^ a2
111723: 98 89 07                 a2 = a1 >> 0x7
111726: d3 98 08                 a1 = a1 ^ a2
111729: 97 89 11                 a2 = a1 << 0x11
111732: d3 89 09                 a2 = a2 ^ a1
111735: 84 88 01                 a1 = a1 & 0x1
111738: 3e 09 78 12 03           u64 [0x31278] = a2
111743: 51 08 24                 jump @8763 if a1 == 0
      :                          @8758
111746: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111750: 55 18 03 08              jump @8760 if a1 >=u 3
      :                          @8759
111754: 28 5f 3f 01              jump @13243
      :                          @8760
111758: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
111762: 82 89 40                 a2 = u64 [a1 + 0x40]
111765: 52 09 07                 jump @8762 if a2 != 0
      :                          @8761
111768: 28 3f 3f 01              jump @13225
      :                          @8762
111772: 82 88 38                 a1 = u64 [a1 + 0x38]
111775: 46 08 01                 u8 [a1 + 0] = 0x1
111778: 01                       fallthrough
      :                          @8763
111779: 3a 08 78 12 03           a1 = u64 [0x31278]
111784: 97 89 0d                 a2 = a1 << 0xd
111787: d3 98 08                 a1 = a1 ^ a2
111790: 98 89 07                 a2 = a1 >> 0x7
111793: d3 98 08                 a1 = a1 ^ a2
111796: 97 89 11                 a2 = a1 << 0x11
111799: d3 89 09                 a2 = a2 ^ a1
111802: 84 88 01                 a1 = a1 & 0x1
111805: 3e 09 78 12 03           u64 [0x31278] = a2
111810: 51 08 26                 jump @8769 if a1 == 0
      :                          @8764
111813: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111817: 55 18 03 08              jump @8766 if a1 >=u 3
      :                          @8765
111821: 28 1c 3f 01              jump @13243
      :                          @8766
111825: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
111829: 82 78 40                 a1 = u64 [a0 + 0x40]
111832: 55 18 02 08              jump @8768 if a1 >=u 2
      :                          @8767
111836: 28 0f 3f 01              jump @13245
      :                          @8768
111840: 82 77 38                 a0 = u64 [a0 + 0x38]
111843: 46 17 01 01              u8 [a0 + 1] = 0x1
111847: 01                       fallthrough
      :                          @8769
111848: 3a 07 78 12 03           a0 = u64 [0x31278]
111853: 97 78 0d                 a1 = a0 << 0xd
111856: d3 87 07                 a0 = a0 ^ a1
111859: 98 78 07                 a1 = a0 >> 0x7
111862: d3 87 07                 a0 = a0 ^ a1
111865: 97 78 11                 a1 = a0 << 0x11
111868: d3 78 08                 a1 = a1 ^ a0
111871: 84 77 01                 a0 = a0 & 0x1
111874: 3e 08 78 12 03           u64 [0x31278] = a1
111879: 51 07 28                 jump @8775 if a0 == 0
      :                          @8770
111882: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111886: 55 18 03 08              jump @8772 if a1 >=u 3
      :                          @8771
111890: 28 d7 3e 01              jump @13243
      :                          @8772
111894: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
111898: 82 a8 40                 a1 = u64 [a3 + 0x40]
111901: 33 0b 04                 a4 = 0x4
111904: ae b8 07                 jump @8774 if a1 >=u a4
      :                          @8773
111907: 28 ac 3e 01              jump @13217
      :                          @8774
111911: 82 a7 38                 a0 = u64 [a3 + 0x38]
111914: 46 17 03 01              u8 [a0 + 3] = 0x1
111918: 01                       fallthrough
      :                          @8775
111919: 3a 07 78 12 03           a0 = u64 [0x31278]
111924: 97 78 0d                 a1 = a0 << 0xd
111927: d3 87 07                 a0 = a0 ^ a1
111930: 98 78 07                 a1 = a0 >> 0x7
111933: d3 87 07                 a0 = a0 ^ a1
111936: 97 78 11                 a1 = a0 << 0x11
111939: d3 78 08                 a1 = a1 ^ a0
111942: 84 77 01                 a0 = a0 & 0x1
111945: 3e 08 78 12 03           u64 [0x31278] = a1
111950: 51 07 26                 jump @8781 if a0 == 0
      :                          @8776
111953: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111957: 55 18 03 08              jump @8778 if a1 >=u 3
      :                          @8777
111961: 28 90 3e 01              jump @13243
      :                          @8778
111965: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
111969: 82 78 40                 a1 = u64 [a0 + 0x40]
111972: 55 18 05 08              jump @8780 if a1 >=u 5
      :                          @8779
111976: 28 80 3e 01              jump @13242
      :                          @8780
111980: 82 77 38                 a0 = u64 [a0 + 0x38]
111983: 46 17 04 01              u8 [a0 + 4] = 0x1
111987: 01                       fallthrough
      :                          @8781
111988: 3a 08 78 12 03           a1 = u64 [0x31278]
111993: 97 89 0d                 a2 = a1 << 0xd
111996: d3 98 08                 a1 = a1 ^ a2
111999: 98 89 07                 a2 = a1 >> 0x7
112002: d3 98 08                 a1 = a1 ^ a2
112005: 97 89 11                 a2 = a1 << 0x11
112008: d3 89 09                 a2 = a2 ^ a1
112011: 84 88 01                 a1 = a1 & 0x1
112014: 3e 09 78 12 03           u64 [0x31278] = a2
112019: 51 08 24                 jump @8787 if a1 == 0
      :                          @8782
112022: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112026: 55 18 04 08              jump @8784 if a1 >=u 4
      :                          @8783
112030: 28 4c 3e 01              jump @13244
      :                          @8784
112034: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
112038: 82 89 58                 a2 = u64 [a1 + 0x58]
112041: 52 09 07                 jump @8786 if a2 != 0
      :                          @8785
112044: 28 2b 3e 01              jump @13225
      :                          @8786
112048: 82 88 50                 a1 = u64 [a1 + 0x50]
112051: 46 08 01                 u8 [a1 + 0] = 0x1
112054: 01                       fallthrough
      :                          @8787
112055: 3a 08 78 12 03           a1 = u64 [0x31278]
112060: 97 89 0d                 a2 = a1 << 0xd
112063: d3 98 08                 a1 = a1 ^ a2
112066: 98 89 07                 a2 = a1 >> 0x7
112069: d3 98 08                 a1 = a1 ^ a2
112072: 97 89 11                 a2 = a1 << 0x11
112075: d3 89 09                 a2 = a2 ^ a1
112078: 84 88 01                 a1 = a1 & 0x1
112081: 3e 09 78 12 03           u64 [0x31278] = a2
112086: 51 08 26                 jump @8793 if a1 == 0
      :                          @8788
112089: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112093: 55 18 04 08              jump @8790 if a1 >=u 4
      :                          @8789
112097: 28 09 3e 01              jump @13244
      :                          @8790
112101: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
112105: 82 78 58                 a1 = u64 [a0 + 0x58]
112108: 55 18 02 08              jump @8792 if a1 >=u 2
      :                          @8791
112112: 28 fb 3d 01              jump @13245
      :                          @8792
112116: 82 77 50                 a0 = u64 [a0 + 0x50]
112119: 46 17 01 01              u8 [a0 + 1] = 0x1
112123: 01                       fallthrough
      :                          @8793
112124: 3a 08 78 12 03           a1 = u64 [0x31278]
112129: 97 89 0d                 a2 = a1 << 0xd
112132: d3 98 08                 a1 = a1 ^ a2
112135: 98 89 07                 a2 = a1 >> 0x7
112138: d3 98 08                 a1 = a1 ^ a2
112141: 97 89 11                 a2 = a1 << 0x11
112144: d3 89 09                 a2 = a2 ^ a1
112147: 84 88 01                 a1 = a1 & 0x1
112150: 3e 09 78 12 03           u64 [0x31278] = a2
112155: 51 08 28                 jump @8799 if a1 == 0
      :                          @8794
112158: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112162: 55 18 04 08              jump @8796 if a1 >=u 4
      :                          @8795
112166: 28 c4 3d 01              jump @13244
      :                          @8796
112170: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
112174: 82 98 58                 a1 = u64 [a2 + 0x58]
112177: 33 0a 03                 a3 = 0x3
112180: ae a8 07                 jump @8798 if a1 >=u a3
      :                          @8797
112183: 28 b2 3d 01              jump @13243
      :                          @8798
112187: 82 98 50                 a1 = u64 [a2 + 0x50]
112190: 46 18 02 01              u8 [a1 + 2] = 0x1
112194: 01                       fallthrough
      :                          @8799
112195: 3a 08 78 12 03           a1 = u64 [0x31278]
112200: 97 89 0d                 a2 = a1 << 0xd
112203: d3 98 08                 a1 = a1 ^ a2
112206: 98 89 07                 a2 = a1 >> 0x7
112209: d3 98 08                 a1 = a1 ^ a2
112212: 97 89 11                 a2 = a1 << 0x11
112215: d3 89 09                 a2 = a2 ^ a1
112218: 84 88 01                 a1 = a1 & 0x1
112221: 3e 09 78 12 03           u64 [0x31278] = a2
112226: 51 08 28                 jump @8805 if a1 == 0
      :                          @8800
112229: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112233: 55 18 04 08              jump @8802 if a1 >=u 4
      :                          @8801
112237: 28 7d 3d 01              jump @13244
      :                          @8802
112241: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
112245: 82 98 58                 a1 = u64 [a2 + 0x58]
112248: 33 0a 05                 a3 = 0x5
112251: ae a8 07                 jump @8804 if a1 >=u a3
      :                          @8803
112254: 28 51 3d 01              jump @13217
      :                          @8804
112258: 82 97 50                 a0 = u64 [a2 + 0x50]
112261: 46 17 04 01              u8 [a0 + 4] = 0x1
112265: 01                       fallthrough
      :                          @8805
112266: 3a 08 78 12 03           a1 = u64 [0x31278]
112271: 97 89 0d                 a2 = a1 << 0xd
112274: d3 98 08                 a1 = a1 ^ a2
112277: 98 89 07                 a2 = a1 >> 0x7
112280: d3 98 08                 a1 = a1 ^ a2
112283: 97 89 11                 a2 = a1 << 0x11
112286: d3 89 09                 a2 = a2 ^ a1
112289: 84 88 01                 a1 = a1 & 0x1
112292: 3e 09 78 12 03           u64 [0x31278] = a2
112297: 51 08 24                 jump @8811 if a1 == 0
      :                          @8806
112300: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112304: 55 18 05 08              jump @8808 if a1 >=u 5
      :                          @8807
112308: 28 34 3d 01              jump @13242
      :                          @8808
112312: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
112316: 82 89 70                 a2 = u64 [a1 + 0x70]
112319: 52 09 07                 jump @8810 if a2 != 0
      :                          @8809
112322: 28 15 3d 01              jump @13225
      :                          @8810
112326: 82 88 68                 a1 = u64 [a1 + 0x68]
112329: 46 08 01                 u8 [a1 + 0] = 0x1
112332: 01                       fallthrough
      :                          @8811
112333: 3a 08 78 12 03           a1 = u64 [0x31278]
112338: 97 89 0d                 a2 = a1 << 0xd
112341: d3 98 08                 a1 = a1 ^ a2
112344: 98 89 07                 a2 = a1 >> 0x7
112347: d3 98 08                 a1 = a1 ^ a2
112350: 97 89 11                 a2 = a1 << 0x11
112353: d3 89 09                 a2 = a2 ^ a1
112356: 84 88 01                 a1 = a1 & 0x1
112359: 3e 09 78 12 03           u64 [0x31278] = a2
112364: 51 08 26                 jump @8817 if a1 == 0
      :                          @8812
112367: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112371: 55 18 05 08              jump @8814 if a1 >=u 5
      :                          @8813
112375: 28 f1 3c 01              jump @13242
      :                          @8814
112379: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
112383: 82 78 70                 a1 = u64 [a0 + 0x70]
112386: 55 18 02 08              jump @8816 if a1 >=u 2
      :                          @8815
112390: 28 e5 3c 01              jump @13245
      :                          @8816
112394: 82 77 68                 a0 = u64 [a0 + 0x68]
112397: 46 17 01 01              u8 [a0 + 1] = 0x1
112401: 01                       fallthrough
      :                          @8817
112402: 3a 08 78 12 03           a1 = u64 [0x31278]
112407: 97 89 0d                 a2 = a1 << 0xd
112410: d3 98 08                 a1 = a1 ^ a2
112413: 98 89 07                 a2 = a1 >> 0x7
112416: d3 98 08                 a1 = a1 ^ a2
112419: 97 89 11                 a2 = a1 << 0x11
112422: d3 89 09                 a2 = a2 ^ a1
112425: 84 88 01                 a1 = a1 & 0x1
112428: 3e 09 78 12 03           u64 [0x31278] = a2
112433: 51 08 28                 jump @8823 if a1 == 0
      :                          @8818
112436: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112440: 55 18 05 08              jump @8820 if a1 >=u 5
      :                          @8819
112444: 28 ac 3c 01              jump @13242
      :                          @8820
112448: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
112452: 82 98 70                 a1 = u64 [a2 + 0x70]
112455: 33 0a 03                 a3 = 0x3
112458: ae a8 07                 jump @8822 if a1 >=u a3
      :                          @8821
112461: 28 9c 3c 01              jump @13243
      :                          @8822
112465: 82 98 68                 a1 = u64 [a2 + 0x68]
112468: 46 18 02 01              u8 [a1 + 2] = 0x1
112472: 01                       fallthrough
      :                          @8823
112473: 3a 08 78 12 03           a1 = u64 [0x31278]
112478: 97 89 0d                 a2 = a1 << 0xd
112481: d3 98 08                 a1 = a1 ^ a2
112484: 98 89 07                 a2 = a1 >> 0x7
112487: d3 98 08                 a1 = a1 ^ a2
112490: 97 89 11                 a2 = a1 << 0x11
112493: d3 89 09                 a2 = a2 ^ a1
112496: 84 88 01                 a1 = a1 & 0x1
112499: 3e 09 78 12 03           u64 [0x31278] = a2
112504: 51 08 28                 jump @8829 if a1 == 0
      :                          @8824
112507: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112511: 55 18 05 08              jump @8826 if a1 >=u 5
      :                          @8825
112515: 28 65 3c 01              jump @13242
      :                          @8826
112519: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
112523: 82 78 70                 a1 = u64 [a0 + 0x70]
112526: 33 09 04                 a2 = 0x4
112529: ae 98 07                 jump @8828 if a1 >=u a2
      :                          @8827
112532: 28 56 3c 01              jump @13244
      :                          @8828
112536: 82 77 68                 a0 = u64 [a0 + 0x68]
112539: 46 17 03 01              u8 [a0 + 3] = 0x1
112543: 01                       fallthrough
      :                          @8829
112544: 95 17 08 02              a0 = sp + 0x208
112548: 95 18 e0 01              a1 = sp + 0x1e0
112552: 95 16 08 02              s1 = sp + 0x208
112556: 50 20 2a 05 d9 3e ff     ra = 1322, jump @4923
      :                          @8830 [@dyn 661]
112563: 7b 16 20 01              u64 [sp + 0x120] = s1
112567: 33 07 30 02              a0 = 0x230
112571: 7b 17 28 01              u64 [sp + 0x128] = a0
112575: 33 07 d8 08 01           a0 = 0x108d8
112580: 7b 17 90 02              u64 [sp + 0x290] = a0
112584: 49 21 98 02 01           u64 [sp + 664] = 0x1
112589: 49 21 b0 02              u64 [sp + 688] = 0
112593: 95 18 20 01              a1 = sp + 0x120
112597: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
112601: 49 21 a8 02 01           u64 [sp + 680] = 0x1
112606: 95 17 38 02              a0 = sp + 0x238
112610: 95 18 90 02              a1 = sp + 0x290
112614: 50 20 2c 05 59 97 fe     ra = 1324, jump @1491
      :                          @8831 [@dyn 662]
112621: 82 16 40 02              s1 = u64 [sp + 0x240]
112625: 82 1b 48 02              a4 = u64 [sp + 0x248]
112629: 82 17 38 02              a0 = u64 [sp + 0x238]
112633: 7b 17 70                 u64 [sp + 0x70] = a0
112636: 33 07 02                 a0 = 0x2
112639: 33 08                    a1 = 0
112641: 33 09                    a2 = 0
112643: 64 6a                    a3 = s1
112645: 33 00 2e 05              ra = 0x52e
112649: 0a 64                    ecalli 100 // 'log'
112651: 01                       fallthrough
      :                          @8832 [@dyn 663]
112652: 82 1c 70                 a5 = u64 [sp + 0x70]
112655: 82 17 68                 a0 = u64 [sp + 0x68]
112658: c8 c7 07                 a0 = a0 + a5
112661: 33 08 00 00 ff           a1 = 0xffffffffffff0000
112666: ae 87 06                 jump @8834 if a0 >=u a1
      :                          @8833
112669: 28 cb 74                 jump @10532
      :                          @8834
112672: 33 07 c0 22 03           a0 = 0x322c0
112677: 95 77 00 00 01           a0 = a0 + 0x10000
112682: 01                       fallthrough
      :                          @8835
112683: 82 78                    a1 = u64 [a0]
112685: c9 87 09                 a2 = a0 - a1
112688: aa 69 06                 jump @8837 if a2 == s1
      :                          @8836
112691: 28 b5 74                 jump @10532
      :                          @8837
112694: c9 c8 09                 a2 = a1 - a5
112697: 01                       fallthrough
      :                          @8838
112698: 82 7a                    a3 = u64 [a0]
112700: ab 8a ef                 jump @8835 if a3 != a1
      :                          @8839
112703: 7b 79                    u64 [a0] = a2
112705: 33 0b                    a4 = 0
112707: 01                       fallthrough
      :                          @8840
112708: ab 8a e7                 jump @8835 if a3 != a1
      :                          @8841
112711: 28 a1 74                 jump @10532
      :                          @8842 [@dyn 664]
112714: 95 17 90 02              a0 = sp + 0x290
112718: 33 08 04                 a1 = 0x4
112721: 50 20 32 05 57 a5 fe     ra = 1330, jump @1776
      :                          @8843 [@dyn 665]
112728: 95 17 08 02              a0 = sp + 0x208
112732: 95 18 90 02              a1 = sp + 0x290
112736: 33 09 04                 a2 = 0x4
112739: 50 20 34 05 65 ac fe     ra = 1332, jump @1895
      :                          @8844 [@dyn 666]
112746: 33 04 04                 t2 = 0x4
112749: 33 07                    a0 = 0
112751: 33 0c 10                 a5 = 0x10
112754: 33 0a 78 12 03           a3 = 0x31278
112759: 33 02 02                 t0 = 0x2
112762: 33 03 03                 t1 = 0x3
112765: 33 06 70                 s1 = 0x70
112768: 01                       fallthrough
      :                          @8845
112769: 3a 08 78 12 03           a1 = u64 [0x31278]
112774: 97 89 0d                 a2 = a1 << 0xd
112777: d3 98 08                 a1 = a1 ^ a2
112780: 98 8b 07                 a4 = a1 >> 0x7
112783: d3 8b 0b                 a4 = a4 ^ a1
112786: 97 b8 11                 a1 = a4 << 0x11
112789: d3 b8 08                 a1 = a1 ^ a4
112792: 3e 08 78 12 03           u64 [0x31278] = a1
112797: 82 18 18 02              a1 = u64 [sp + 0x218]
112801: ac 87 07                 jump @8847 if a0 <u a1
      :                          @8846
112804: 28 2b 3b 01              jump @13217
      :                          @8847
112808: 82 18 10 02              a1 = u64 [sp + 0x210]
112812: c8 c8 08                 a1 = a1 + a5
112815: 82 89                    a2 = u64 [a1]
112817: 52 09 07                 jump @8849 if a2 != 0
      :                          @8848
112820: 28 22 3b 01              jump @13224
      :                          @8849
112824: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
112827: 84 bb 01                 a4 = a4 & 0x1
112830: 78 8b                    u8 [a1] = a4
112832: 3a 08 78 12 03           a1 = u64 [0x31278]
112837: 97 89 0d                 a2 = a1 << 0xd
112840: d3 98 08                 a1 = a1 ^ a2
112843: 98 8b 07                 a4 = a1 >> 0x7
112846: d3 8b 0b                 a4 = a4 ^ a1
112849: 97 b8 11                 a1 = a4 << 0x11
112852: d3 b8 08                 a1 = a1 ^ a4
112855: 3e 08 78 12 03           u64 [0x31278] = a1
112860: 82 18 18 02              a1 = u64 [sp + 0x218]
112864: ac 87 07                 jump @8851 if a0 <u a1
      :                          @8850
112867: 28 ec 3a 01              jump @13217
      :                          @8851
112871: 82 19 10 02              a2 = u64 [sp + 0x210]
112875: c8 c9 09                 a2 = a2 + a5
112878: 82 98                    a1 = u64 [a2]
112880: ae 28 07                 jump @8853 if a1 >=u t0
      :                          @8852
112883: 28 13 3a 01              jump @13197
      :                          @8853
112887: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
112890: 84 bb 01                 a4 = a4 & 0x1
112893: 78 8b 01                 u8 [a1 + 0x1] = a4
112896: 3a 08 78 12 03           a1 = u64 [0x31278]
112901: 97 89 0d                 a2 = a1 << 0xd
112904: d3 98 08                 a1 = a1 ^ a2
112907: 98 8b 07                 a4 = a1 >> 0x7
112910: d3 8b 0b                 a4 = a4 ^ a1
112913: 97 b8 11                 a1 = a4 << 0x11
112916: d3 b8 08                 a1 = a1 ^ a4
112919: 3e 08 78 12 03           u64 [0x31278] = a1
112924: 82 18 18 02              a1 = u64 [sp + 0x218]
112928: ac 87 07                 jump @8855 if a0 <u a1
      :                          @8854
112931: 28 ac 3a 01              jump @13217
      :                          @8855
112935: 82 19 10 02              a2 = u64 [sp + 0x210]
112939: c8 c9 09                 a2 = a2 + a5
112942: 82 98                    a1 = u64 [a2]
112944: ae 38 07                 jump @8857 if a1 >=u t1
      :                          @8856
112947: 28 d5 39 01              jump @13199
      :                          @8857
112951: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
112954: 84 bb 01                 a4 = a4 & 0x1
112957: 78 8b 02                 u8 [a1 + 0x2] = a4
112960: 3a 08 78 12 03           a1 = u64 [0x31278]
112965: 97 89 0d                 a2 = a1 << 0xd
112968: d3 98 08                 a1 = a1 ^ a2
112971: 98 8b 07                 a4 = a1 >> 0x7
112974: d3 8b 0b                 a4 = a4 ^ a1
112977: 97 b8 11                 a1 = a4 << 0x11
112980: d3 b8 08                 a1 = a1 ^ a4
112983: 3e 08 78 12 03           u64 [0x31278] = a1
112988: 82 18 18 02              a1 = u64 [sp + 0x218]
112992: ac 87 07                 jump @8859 if a0 <u a1
      :                          @8858
112995: 28 6c 3a 01              jump @13217
      :                          @8859
112999: 82 19 10 02              a2 = u64 [sp + 0x210]
113003: c8 c9 09                 a2 = a2 + a5
113006: 82 98                    a1 = u64 [a2]
113008: ae 48 07                 jump @8861 if a1 >=u t2
      :                          @8860
113011: 28 94 39 01              jump @13198
      :                          @8861
113015: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
113018: 84 bb 01                 a4 = a4 & 0x1
113021: 78 8b 03                 u8 [a1 + 0x3] = a4
113024: 95 cc 18                 a5 = a5 + 0x18
113027: 95 77 01                 a0 = a0 + 0x1
113030: ab 6c fb fe              jump @8845 if a5 != s1
      :                          @8862
113034: 95 17 08 02              a0 = sp + 0x208
113038: 50 20 36 05 3e 42 ff     ra = 1334, jump @5024
      :                          @8863 [@dyn 667]
113045: 7b 17 20 01              u64 [sp + 0x120] = a0
113049: 95 17 20 01              a0 = sp + 0x120
113053: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
113057: 33 07 28 0c              a0 = 0xc28
113061: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
113065: 33 07 00 09 01           a0 = 0x10900
113070: 7b 17 90 02              u64 [sp + 0x290] = a0
113074: 49 21 98 02 01           u64 [sp + 664] = 0x1
113079: 49 21 b0 02              u64 [sp + 688] = 0
113083: 95 18 e0 01              a1 = sp + 0x1e0
113087: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
113091: 49 21 a8 02 01           u64 [sp + 680] = 0x1
113096: 95 17 38 02              a0 = sp + 0x238
113100: 95 18 90 02              a1 = sp + 0x290
113104: 50 20 38 05 6f 95 fe     ra = 1336, jump @1491
      :                          @8864 [@dyn 668]
113111: 82 16 40 02              s1 = u64 [sp + 0x240]
113115: 82 1b 48 02              a4 = u64 [sp + 0x248]
113119: 82 17 38 02              a0 = u64 [sp + 0x238]
113123: 7b 17 70                 u64 [sp + 0x70] = a0
113126: 33 07 02                 a0 = 0x2
113129: 33 08                    a1 = 0
113131: 33 09                    a2 = 0
113133: 64 6a                    a3 = s1
113135: 33 00 3a 05              ra = 0x53a
113139: 0a 64                    ecalli 100 // 'log'
113141: 01                       fallthrough
      :                          @8865 [@dyn 669]
113142: 82 1c 70                 a5 = u64 [sp + 0x70]
113145: 82 17 68                 a0 = u64 [sp + 0x68]
113148: c8 c7 07                 a0 = a0 + a5
113151: 33 08 00 00 ff           a1 = 0xffffffffffff0000
113156: ae 87 07                 jump @8867 if a0 >=u a1
      :                          @8866
113159: 28 b4 27 01              jump @12855
      :                          @8867
113163: 33 07 c0 22 03           a0 = 0x322c0
113168: 95 77 00 00 01           a0 = a0 + 0x10000
113173: 01                       fallthrough
      :                          @8868
113174: 82 78                    a1 = u64 [a0]
113176: c9 87 09                 a2 = a0 - a1
113179: aa 69 07                 jump @8870 if a2 == s1
      :                          @8869
113182: 28 9d 27 01              jump @12855
      :                          @8870
113186: c9 c8 09                 a2 = a1 - a5
113189: 01                       fallthrough
      :                          @8871
113190: 82 7a                    a3 = u64 [a0]
113192: ab 8a ee                 jump @8868 if a3 != a1
      :                          @8872
113195: 7b 79                    u64 [a0] = a2
113197: 33 0b                    a4 = 0
113199: 01                       fallthrough
      :                          @8873
113200: ab 8a e6                 jump @8868 if a3 != a1
      :                          @8874
113203: 28 88 27 01              jump @12855
      :                          @8875 [@dyn 670]
113207: 95 17 90 02              a0 = sp + 0x290
113211: 33 09 06                 a2 = 0x6
113214: 33 08                    a1 = 0
113216: 50 20 3e 05 a9 a9 fe     ra = 1342, jump @1877
      :                          @8876 [@dyn 671]
113223: 95 17 08 02              a0 = sp + 0x208
113227: 95 18 90 02              a1 = sp + 0x290
113231: 33 09 06                 a2 = 0x6
113234: 50 20 40 05 c2 a3 fe     ra = 1344, jump @1783
      :                          @8877 [@dyn 672]
113241: 3a 07 78 12 03           a0 = u64 [0x31278]
113246: 97 79 0d                 a2 = a0 << 0xd
113249: d3 97 07                 a0 = a0 ^ a2
113252: 98 79 07                 a2 = a0 >> 0x7
113255: d3 97 07                 a0 = a0 ^ a2
113258: 97 79 11                 a2 = a0 << 0x11
113261: d3 97 07                 a0 = a0 ^ a2
113264: 3e 07 78 12 03           u64 [0x31278] = a0
113269: 82 16 18 02              s1 = u64 [sp + 0x218]
113273: 52 06 07                 jump @8879 if s1 != 0
      :                          @8878
113276: 28 5b 39 01              jump @13225
      :                          @8879
113280: 82 1c 10 02              a5 = u64 [sp + 0x210]
113284: 82 c9 10                 a2 = u64 [a5 + 0x10]
113287: 56 19 01 08              jump @8881 if a2 >u 1
      :                          @8880
113291: 28 57 39 01              jump @13236
      :                          @8881
113295: 3a 02 60 11 03           t0 = u64 [0x31160]
113300: ca 27 07                 a0 = a0 * t0
113303: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
113313: d6 87 08                 a1 = a0 mulhu a1
113316: 98 88 03                 a1 = a1 >> 0x3
113319: 82 ca 08                 a3 = u64 [a5 + 0x8]
113322: 96 88 0a                 a1 = a1 * 0xa
113325: c9 87 09                 a2 = a0 - a1
113328: 7b a9 08                 u64 [a3 + 0x8] = a2
113331: 56 16 01 08              jump @8883 if s1 >u 1
      :                          @8882
113335: 28 18 39 01              jump @13217
      :                          @8883
113339: 82 c7 28                 a0 = u64 [a5 + 0x28]
113342: 52 07 07                 jump @8885 if a0 != 0
      :                          @8884
113345: 28 25 39 01              jump @13240
      :                          @8885
113349: 82 c7 20                 a0 = u64 [a5 + 0x20]
113352: 7b 79                    u64 [a0] = a2
113354: 3a 08 78 12 03           a1 = u64 [0x31278]
113359: 97 89 0d                 a2 = a1 << 0xd
113362: d3 98 08                 a1 = a1 ^ a2
113365: 98 89 07                 a2 = a1 >> 0x7
113368: d3 98 08                 a1 = a1 ^ a2
113371: 97 8c 11                 a5 = a1 << 0x11
113374: d3 8c 0c                 a5 = a5 ^ a1
113377: 3e 0c 78 12 03           u64 [0x31278] = a5
113382: 82 18 18 02              a1 = u64 [sp + 0x218]
113386: 52 08 07                 jump @8887 if a1 != 0
      :                          @8886
113389: 28 fa 38 01              jump @13241
      :                          @8887
113393: 82 17 10 02              a0 = u64 [sp + 0x210]
113397: 82 79 10                 a2 = u64 [a0 + 0x10]
113400: 55 19 03 08              jump @8889 if a2 >=u 3
      :                          @8888
113404: 28 f2 38 01              jump @13248
      :                          @8889
113408: ca 2c 09                 a2 = a5 * t0
113411: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
113421: d6 b9 0b                 a4 = a2 mulhu a4
113424: 98 bb 03                 a4 = a4 >> 0x3
113427: 82 7c 08                 a5 = u64 [a0 + 0x8]
113430: 96 bb 0a                 a4 = a4 * 0xa
113433: c9 b9 09                 a2 = a2 - a4
113436: 7b c9 10                 u64 [a5 + 0x10] = a2
113439: 55 18 03 08              jump @8891 if a1 >=u 3
      :                          @8890
113443: 28 e5 37 01              jump @13199
      :                          @8891
113447: 82 78 40                 a1 = u64 [a0 + 0x40]
113450: 52 08 07                 jump @8893 if a1 != 0
      :                          @8892
113453: 28 ba 38 01              jump @13241
      :                          @8893
113457: 82 77 38                 a0 = u64 [a0 + 0x38]
113460: 7b 79                    u64 [a0] = a2
113462: 3a 08 78 12 03           a1 = u64 [0x31278]
113467: 97 89 0d                 a2 = a1 << 0xd
113470: d3 98 08                 a1 = a1 ^ a2
113473: 98 89 07                 a2 = a1 >> 0x7
113476: d3 98 08                 a1 = a1 ^ a2
113479: 97 8c 11                 a5 = a1 << 0x11
113482: d3 8c 0c                 a5 = a5 ^ a1
113485: 3e 0c 78 12 03           u64 [0x31278] = a5
113490: 82 18 18 02              a1 = u64 [sp + 0x218]
113494: 52 08 07                 jump @8895 if a1 != 0
      :                          @8894
113497: 28 8e 38 01              jump @13241
      :                          @8895
113501: 82 17 10 02              a0 = u64 [sp + 0x210]
113505: 82 79 10                 a2 = u64 [a0 + 0x10]
113508: 55 19 04 08              jump @8897 if a2 >=u 4
      :                          @8896
113512: 28 79 38 01              jump @13235
      :                          @8897
113516: ca 2c 09                 a2 = a5 * t0
113519: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
113529: d6 b9 0b                 a4 = a2 mulhu a4
113532: 98 bb 03                 a4 = a4 >> 0x3
113535: 82 7c 08                 a5 = u64 [a0 + 0x8]
113538: 96 bb 0a                 a4 = a4 * 0xa
113541: c9 b9 09                 a2 = a2 - a4
113544: 7b c9 18                 u64 [a5 + 0x18] = a2
113547: 55 18 04 08              jump @8899 if a1 >=u 4
      :                          @8898
113551: 28 78 37 01              jump @13198
      :                          @8899
113555: 82 78 58                 a1 = u64 [a0 + 0x58]
113558: 52 08 07                 jump @8901 if a1 != 0
      :                          @8900
113561: 28 4e 38 01              jump @13241
      :                          @8901
113565: 82 77 50                 a0 = u64 [a0 + 0x50]
113568: 7b 79                    u64 [a0] = a2
113570: 3a 08 78 12 03           a1 = u64 [0x31278]
113575: 97 89 0d                 a2 = a1 << 0xd
113578: d3 98 08                 a1 = a1 ^ a2
113581: 98 89 07                 a2 = a1 >> 0x7
113584: d3 98 08                 a1 = a1 ^ a2
113587: 97 8c 11                 a5 = a1 << 0x11
113590: d3 8c 0c                 a5 = a5 ^ a1
113593: 3e 0c 78 12 03           u64 [0x31278] = a5
113598: 82 18 18 02              a1 = u64 [sp + 0x218]
113602: 52 08 07                 jump @8903 if a1 != 0
      :                          @8902
113605: 28 22 38 01              jump @13241
      :                          @8903
113609: 82 17 10 02              a0 = u64 [sp + 0x210]
113613: 82 79 10                 a2 = u64 [a0 + 0x10]
113616: 55 19 05 08              jump @8905 if a2 >=u 5
      :                          @8904
113620: 28 1b 38 01              jump @13249
      :                          @8905
113624: ca 2c 09                 a2 = a5 * t0
113627: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
113637: d6 b9 0b                 a4 = a2 mulhu a4
113640: 98 bb 03                 a4 = a4 >> 0x3
113643: 82 7c 08                 a5 = u64 [a0 + 0x8]
113646: 96 bb 0a                 a4 = a4 * 0xa
113649: c9 b9 09                 a2 = a2 - a4
113652: 7b c9 20                 u64 [a5 + 0x20] = a2
113655: 55 18 05 08              jump @8907 if a1 >=u 5
      :                          @8906
113659: 28 d6 37 01              jump @13219
      :                          @8907
113663: 82 78 70                 a1 = u64 [a0 + 0x70]
113666: 52 08 07                 jump @8909 if a1 != 0
      :                          @8908
113669: 28 e2 37 01              jump @13241
      :                          @8909
113673: 82 77 68                 a0 = u64 [a0 + 0x68]
113676: 7b 79                    u64 [a0] = a2
113678: 3a 08 78 12 03           a1 = u64 [0x31278]
113683: 97 89 0d                 a2 = a1 << 0xd
113686: d3 98 08                 a1 = a1 ^ a2
113689: 98 89 07                 a2 = a1 >> 0x7
113692: d3 98 08                 a1 = a1 ^ a2
113695: 97 8c 11                 a5 = a1 << 0x11
113698: d3 8c 0c                 a5 = a5 ^ a1
113701: 3e 0c 78 12 03           u64 [0x31278] = a5
113706: 82 18 18 02              a1 = u64 [sp + 0x218]
113710: 52 08 07                 jump @8911 if a1 != 0
      :                          @8910
113713: 28 b6 37 01              jump @13241
      :                          @8911
113717: 82 17 10 02              a0 = u64 [sp + 0x210]
113721: 82 79 10                 a2 = u64 [a0 + 0x10]
113724: 55 19 06 08              jump @8913 if a2 >=u 6
      :                          @8912
113728: 28 b6 37 01              jump @13254
      :                          @8913
113732: ca 2c 09                 a2 = a5 * t0
113735: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
113745: d6 b9 0b                 a4 = a2 mulhu a4
113748: 98 bb 03                 a4 = a4 >> 0x3
113751: 82 7c 08                 a5 = u64 [a0 + 0x8]
113754: 96 bb 0a                 a4 = a4 * 0xa
113757: c9 b9 09                 a2 = a2 - a4
113760: 7b c9 28                 u64 [a5 + 0x28] = a2
113763: 55 18 06 08              jump @8915 if a1 >=u 6
      :                          @8914
113767: 28 6e 37 01              jump @13223
      :                          @8915
113771: 82 78 88 00              a1 = u64 [a0 + 0x88]
113775: 52 08 07                 jump @8917 if a1 != 0
      :                          @8916
113778: 28 75 37 01              jump @13241
      :                          @8917
113782: 82 77 80 00              a0 = u64 [a0 + 0x80]
113786: 7b 79                    u64 [a0] = a2
113788: 3a 08 78 12 03           a1 = u64 [0x31278]
113793: 97 89 0d                 a2 = a1 << 0xd
113796: d3 98 08                 a1 = a1 ^ a2
113799: 98 89 07                 a2 = a1 >> 0x7
113802: d3 98 08                 a1 = a1 ^ a2
113805: 97 86 11                 s1 = a1 << 0x11
113808: d3 86 06                 s1 = s1 ^ a1
113811: 3e 06 78 12 03           u64 [0x31278] = s1
113816: 82 18 18 02              a1 = u64 [sp + 0x218]
113820: 55 18 02 08              jump @8919 if a1 >=u 2
      :                          @8918
113824: 28 66 36 01              jump @13197
      :                          @8919
113828: 82 17 10 02              a0 = u64 [sp + 0x210]
113832: 82 79 28                 a2 = u64 [a0 + 0x28]
113835: 55 19 03 08              jump @8921 if a2 >=u 3
      :                          @8920
113839: 28 33 37 01              jump @13236
      :                          @8921
113843: ca 26 09                 a2 = s1 * t0
113846: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
113856: d6 a9 0a                 a3 = a2 mulhu a3
113859: 98 aa 03                 a3 = a3 >> 0x3
113862: 82 76 20                 s1 = u64 [a0 + 0x20]
113865: 96 aa 0a                 a3 = a3 * 0xa
113868: c9 a9 0a                 a3 = a2 - a3
113871: 7b 6a 10                 u64 [s1 + 0x10] = a3
113874: 55 18 03 08              jump @8923 if a1 >=u 3
      :                          @8922
113878: 28 16 37 01              jump @13246
      :                          @8923
113882: 82 78 40                 a1 = u64 [a0 + 0x40]
113885: 55 18 02 08              jump @8925 if a1 >=u 2
      :                          @8924
113889: 28 f7 36 01              jump @13226
      :                          @8925
113893: 82 77 38                 a0 = u64 [a0 + 0x38]
113896: 7b 7a 08                 u64 [a0 + 0x8] = a3
113899: 3a 08 78 12 03           a1 = u64 [0x31278]
113904: 97 8a 0d                 a3 = a1 << 0xd
113907: d3 a8 08                 a1 = a1 ^ a3
113910: 98 8a 07                 a3 = a1 >> 0x7
113913: d3 a8 08                 a1 = a1 ^ a3
113916: 97 8c 11                 a5 = a1 << 0x11
113919: d3 8c 0c                 a5 = a5 ^ a1
113922: 3e 0c 78 12 03           u64 [0x31278] = a5
113927: 82 18 18 02              a1 = u64 [sp + 0x218]
113931: 55 18 02 08              jump @8927 if a1 >=u 2
      :                          @8926
113935: 28 c9 36 01              jump @13226
      :                          @8927
113939: 82 17 10 02              a0 = u64 [sp + 0x210]
113943: 82 79 28                 a2 = u64 [a0 + 0x28]
113946: 55 19 04 08              jump @8929 if a2 >=u 4
      :                          @8928
113950: 28 c3 36 01              jump @13235
      :                          @8929
113954: ca 2c 09                 a2 = a5 * t0
113957: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
113967: d6 b9 0b                 a4 = a2 mulhu a4
113970: 98 bb 03                 a4 = a4 >> 0x3
113973: 82 76 20                 s1 = u64 [a0 + 0x20]
113976: 96 bb 0a                 a4 = a4 * 0xa
113979: c9 b9 0c                 a5 = a2 - a4
113982: 7b 6c 18                 u64 [s1 + 0x18] = a5
113985: 55 18 04 08              jump @8931 if a1 >=u 4
      :                          @8930
113989: 28 9a 36 01              jump @13233
      :                          @8931
113993: 82 78 58                 a1 = u64 [a0 + 0x58]
113996: 55 18 02 08              jump @8933 if a1 >=u 2
      :                          @8932
114000: 28 88 36 01              jump @13226
      :                          @8933
114004: 82 77 50                 a0 = u64 [a0 + 0x50]
114007: 7b 7c 08                 u64 [a0 + 0x8] = a5
114010: 3a 08 78 12 03           a1 = u64 [0x31278]
114015: 97 8a 0d                 a3 = a1 << 0xd
114018: d3 a8 08                 a1 = a1 ^ a3
114021: 98 8a 07                 a3 = a1 >> 0x7
114024: d3 a8 08                 a1 = a1 ^ a3
114027: 97 8c 11                 a5 = a1 << 0x11
114030: d3 8c 0c                 a5 = a5 ^ a1
114033: 3e 0c 78 12 03           u64 [0x31278] = a5
114038: 82 18 18 02              a1 = u64 [sp + 0x218]
114042: 55 18 02 08              jump @8935 if a1 >=u 2
      :                          @8934
114046: 28 5a 36 01              jump @13226
      :                          @8935
114050: 82 17 10 02              a0 = u64 [sp + 0x210]
114054: 82 79 28                 a2 = u64 [a0 + 0x28]
114057: 55 19 05 08              jump @8937 if a2 >=u 5
      :                          @8936
114061: 28 56 36 01              jump @13237
      :                          @8937
114065: ca 2c 09                 a2 = a5 * t0
114068: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
114078: d6 b9 0b                 a4 = a2 mulhu a4
114081: 98 bb 03                 a4 = a4 >> 0x3
114084: 82 76 20                 s1 = u64 [a0 + 0x20]
114087: 96 bb 0a                 a4 = a4 * 0xa
114090: c9 b9 0c                 a5 = a2 - a4
114093: 7b 6c 20                 u64 [s1 + 0x20] = a5
114096: 55 18 05 08              jump @8939 if a1 >=u 5
      :                          @8938
114100: 28 2c 36 01              jump @13234
      :                          @8939
114104: 82 78 70                 a1 = u64 [a0 + 0x70]
114107: 55 18 02 08              jump @8941 if a1 >=u 2
      :                          @8940
114111: 28 19 36 01              jump @13226
      :                          @8941
114115: 82 77 68                 a0 = u64 [a0 + 0x68]
114118: 7b 7c 08                 u64 [a0 + 0x8] = a5
114121: 3a 08 78 12 03           a1 = u64 [0x31278]
114126: 97 8a 0d                 a3 = a1 << 0xd
114129: d3 a8 08                 a1 = a1 ^ a3
114132: 98 8a 07                 a3 = a1 >> 0x7
114135: d3 a8 08                 a1 = a1 ^ a3
114138: 97 8c 11                 a5 = a1 << 0x11
114141: d3 8c 0c                 a5 = a5 ^ a1
114144: 3e 0c 78 12 03           u64 [0x31278] = a5
114149: 82 18 18 02              a1 = u64 [sp + 0x218]
114153: 55 18 02 08              jump @8943 if a1 >=u 2
      :                          @8942
114157: 28 eb 35 01              jump @13226
      :                          @8943
114161: 82 1a 10 02              a3 = u64 [sp + 0x210]
114165: 82 a9 28                 a2 = u64 [a3 + 0x28]
114168: 55 19 06 08              jump @8945 if a2 >=u 6
      :                          @8944
114172: 28 e8 35 01              jump @13238
      :                          @8945
114176: ca 2c 09                 a2 = a5 * t0
114179: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
114189: d6 b9 0b                 a4 = a2 mulhu a4
114192: 98 bb 03                 a4 = a4 >> 0x3
114195: 82 ac 20                 a5 = u64 [a3 + 0x20]
114198: 96 bb 0a                 a4 = a4 * 0xa
114201: c9 b9 09                 a2 = a2 - a4
114204: 7b c9 28                 u64 [a5 + 0x28] = a2
114207: 55 18 06 08              jump @8947 if a1 >=u 6
      :                          @8946
114211: 28 c2 35 01              jump @13239
      :                          @8947
114215: 82 a8 88 00              a1 = u64 [a3 + 0x88]
114219: 55 18 02 08              jump @8949 if a1 >=u 2
      :                          @8948
114223: 28 a9 35 01              jump @13226
      :                          @8949
114227: 82 a8 80 00              a1 = u64 [a3 + 0x80]
114231: 7b 89 08                 u64 [a1 + 0x8] = a2
114234: 3a 09 78 12 03           a2 = u64 [0x31278]
114239: 97 9a 0d                 a3 = a2 << 0xd
114242: d3 a9 09                 a2 = a2 ^ a3
114245: 98 9a 07                 a3 = a2 >> 0x7
114248: d3 a9 09                 a2 = a2 ^ a3
114251: 97 96 11                 s1 = a2 << 0x11
114254: d3 96 06                 s1 = s1 ^ a2
114257: 3e 06 78 12 03           u64 [0x31278] = s1
114262: 82 18 18 02              a1 = u64 [sp + 0x218]
114266: 55 18 03 08              jump @8951 if a1 >=u 3
      :                          @8950
114270: 28 71 35 01              jump @13217
      :                          @8951
114274: 82 17 10 02              a0 = u64 [sp + 0x210]
114278: 82 79 40                 a2 = u64 [a0 + 0x40]
114281: 55 19 04 08              jump @8953 if a2 >=u 4
      :                          @8952
114285: 28 75 35 01              jump @13236
      :                          @8953
114289: ca 26 09                 a2 = s1 * t0
114292: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
114302: d6 a9 0a                 a3 = a2 mulhu a3
114305: 98 aa 03                 a3 = a3 >> 0x3
114308: 82 7b 38                 a4 = u64 [a0 + 0x38]
114311: 96 aa 0a                 a3 = a3 * 0xa
114314: c9 a9 0a                 a3 = a2 - a3
114317: 7b ba 18                 u64 [a4 + 0x18] = a3
114320: 55 18 04 08              jump @8955 if a1 >=u 4
      :                          @8954
114324: 28 77 35 01              jump @13273
      :                          @8955
114328: 82 78 58                 a1 = u64 [a0 + 0x58]
114331: 55 18 03 08              jump @8957 if a1 >=u 3
      :                          @8956
114335: 28 3a 35 01              jump @13227
      :                          @8957
114339: 82 77 50                 a0 = u64 [a0 + 0x50]
114342: 7b 7a 10                 u64 [a0 + 0x10] = a3
114345: 3a 08 78 12 03           a1 = u64 [0x31278]
114350: 97 8a 0d                 a3 = a1 << 0xd
114353: d3 a8 08                 a1 = a1 ^ a3
114356: 98 8a 07                 a3 = a1 >> 0x7
114359: d3 a8 08                 a1 = a1 ^ a3
114362: 97 8c 11                 a5 = a1 << 0x11
114365: d3 8c 0c                 a5 = a5 ^ a1
114368: 3e 0c 78 12 03           u64 [0x31278] = a5
114373: 82 18 18 02              a1 = u64 [sp + 0x218]
114377: 55 18 03 08              jump @8959 if a1 >=u 3
      :                          @8958
114381: 28 0c 35 01              jump @13227
      :                          @8959
114385: 82 17 10 02              a0 = u64 [sp + 0x210]
114389: 82 79 40                 a2 = u64 [a0 + 0x40]
114392: 55 19 05 08              jump @8961 if a2 >=u 5
      :                          @8960
114396: 28 07 35 01              jump @13237
      :                          @8961
114400: ca 2c 09                 a2 = a5 * t0
114403: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
114413: d6 b9 0b                 a4 = a2 mulhu a4
114416: 98 bb 03                 a4 = a4 >> 0x3
114419: 82 76 38                 s1 = u64 [a0 + 0x38]
114422: 96 bb 0a                 a4 = a4 * 0xa
114425: c9 b9 0c                 a5 = a2 - a4
114428: 7b 6c 20                 u64 [s1 + 0x20] = a5
114431: 55 18 05 08              jump @8963 if a1 >=u 5
      :                          @8962
114435: 28 dd 34 01              jump @13234
      :                          @8963
114439: 82 78 70                 a1 = u64 [a0 + 0x70]
114442: 55 18 03 08              jump @8965 if a1 >=u 3
      :                          @8964
114446: 28 cb 34 01              jump @13227
      :                          @8965
114450: 82 77 68                 a0 = u64 [a0 + 0x68]
114453: 7b 7c 10                 u64 [a0 + 0x10] = a5
114456: 3a 08 78 12 03           a1 = u64 [0x31278]
114461: 97 8a 0d                 a3 = a1 << 0xd
114464: d3 a8 08                 a1 = a1 ^ a3
114467: 98 8a 07                 a3 = a1 >> 0x7
114470: d3 a8 08                 a1 = a1 ^ a3
114473: 97 8c 11                 a5 = a1 << 0x11
114476: d3 8c 0c                 a5 = a5 ^ a1
114479: 3e 0c 78 12 03           u64 [0x31278] = a5
114484: 82 18 18 02              a1 = u64 [sp + 0x218]
114488: 55 18 03 08              jump @8967 if a1 >=u 3
      :                          @8966
114492: 28 9d 34 01              jump @13227
      :                          @8967
114496: 82 1a 10 02              a3 = u64 [sp + 0x210]
114500: 82 a9 40                 a2 = u64 [a3 + 0x40]
114503: 55 19 06 08              jump @8969 if a2 >=u 6
      :                          @8968
114507: 28 99 34 01              jump @13238
      :                          @8969
114511: ca 2c 09                 a2 = a5 * t0
114514: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
114524: d6 b9 0b                 a4 = a2 mulhu a4
114527: 98 bb 03                 a4 = a4 >> 0x3
114530: 82 ac 38                 a5 = u64 [a3 + 0x38]
114533: 96 bb 0a                 a4 = a4 * 0xa
114536: c9 b9 09                 a2 = a2 - a4
114539: 7b c9 28                 u64 [a5 + 0x28] = a2
114542: 55 18 06 08              jump @8971 if a1 >=u 6
      :                          @8970
114546: 28 73 34 01              jump @13239
      :                          @8971
114550: 82 a8 88 00              a1 = u64 [a3 + 0x88]
114554: 55 18 03 08              jump @8973 if a1 >=u 3
      :                          @8972
114558: 28 5b 34 01              jump @13227
      :                          @8973
114562: 82 a8 80 00              a1 = u64 [a3 + 0x80]
114566: 7b 89 10                 u64 [a1 + 0x10] = a2
114569: 3a 09 78 12 03           a2 = u64 [0x31278]
114574: 97 9a 0d                 a3 = a2 << 0xd
114577: d3 a9 09                 a2 = a2 ^ a3
114580: 98 9a 07                 a3 = a2 >> 0x7
114583: d3 a9 09                 a2 = a2 ^ a3
114586: 97 96 11                 s1 = a2 << 0x11
114589: d3 96 06                 s1 = s1 ^ a2
114592: 3e 06 78 12 03           u64 [0x31278] = s1
114597: 82 18 18 02              a1 = u64 [sp + 0x218]
114601: 55 18 04 08              jump @8975 if a1 >=u 4
      :                          @8974
114605: 28 22 34 01              jump @13217
      :                          @8975
114609: 82 17 10 02              a0 = u64 [sp + 0x210]
114613: 82 79 58                 a2 = u64 [a0 + 0x58]
114616: 55 19 05 08              jump @8977 if a2 >=u 5
      :                          @8976
114620: 28 26 34 01              jump @13236
      :                          @8977
114624: ca 26 09                 a2 = s1 * t0
114627: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
114637: d6 a9 0a                 a3 = a2 mulhu a3
114640: 98 aa 03                 a3 = a3 >> 0x3
114643: 82 7b 50                 a4 = u64 [a0 + 0x50]
114646: 96 aa 0a                 a3 = a3 * 0xa
114649: c9 a9 0a                 a3 = a2 - a3
114652: 7b ba 20                 u64 [a4 + 0x20] = a3
114655: 55 18 05 08              jump @8979 if a1 >=u 5
      :                          @8978
114659: 28 29 34 01              jump @13274
      :                          @8979
114663: 82 78 70                 a1 = u64 [a0 + 0x70]
114666: 55 18 04 08              jump @8981 if a1 >=u 4
      :                          @8980
114670: 28 f1 33 01              jump @13233
      :                          @8981
114674: 82 77 68                 a0 = u64 [a0 + 0x68]
114677: 7b 7a 18                 u64 [a0 + 0x18] = a3
114680: 3a 08 78 12 03           a1 = u64 [0x31278]
114685: 97 8a 0d                 a3 = a1 << 0xd
114688: d3 a8 08                 a1 = a1 ^ a3
114691: 98 8a 07                 a3 = a1 >> 0x7
114694: d3 a8 08                 a1 = a1 ^ a3
114697: 97 8c 11                 a5 = a1 << 0x11
114700: d3 8c 0c                 a5 = a5 ^ a1
114703: 3e 0c 78 12 03           u64 [0x31278] = a5
114708: 82 18 18 02              a1 = u64 [sp + 0x218]
114712: 55 18 04 08              jump @8983 if a1 >=u 4
      :                          @8982
114716: 28 c3 33 01              jump @13233
      :                          @8983
114720: 82 1a 10 02              a3 = u64 [sp + 0x210]
114724: 82 a9 58                 a2 = u64 [a3 + 0x58]
114727: 55 19 06 08              jump @8985 if a2 >=u 6
      :                          @8984
114731: 28 b9 33 01              jump @13238
      :                          @8985
114735: ca 2c 09                 a2 = a5 * t0
114738: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
114748: d6 b9 0b                 a4 = a2 mulhu a4
114751: 98 bb 03                 a4 = a4 >> 0x3
114754: 82 ac 50                 a5 = u64 [a3 + 0x50]
114757: 96 bb 0a                 a4 = a4 * 0xa
114760: c9 b9 09                 a2 = a2 - a4
114763: 7b c9 28                 u64 [a5 + 0x28] = a2
114766: 55 18 06 08              jump @8987 if a1 >=u 6
      :                          @8986
114770: 28 93 33 01              jump @13239
      :                          @8987
114774: 82 a8 88 00              a1 = u64 [a3 + 0x88]
114778: 55 18 04 08              jump @8989 if a1 >=u 4
      :                          @8988
114782: 28 81 33 01              jump @13233
      :                          @8989
114786: 82 a8 80 00              a1 = u64 [a3 + 0x80]
114790: 7b 89 18                 u64 [a1 + 0x18] = a2
114793: 3a 09 78 12 03           a2 = u64 [0x31278]
114798: 97 9a 0d                 a3 = a2 << 0xd
114801: d3 a9 09                 a2 = a2 ^ a3
114804: 98 9a 07                 a3 = a2 >> 0x7
114807: d3 a9 09                 a2 = a2 ^ a3
114810: 97 96 11                 s1 = a2 << 0x11
114813: d3 96 06                 s1 = s1 ^ a2
114816: 3e 06 78 12 03           u64 [0x31278] = s1
114821: 82 18 18 02              a1 = u64 [sp + 0x218]
114825: 55 18 05 08              jump @8991 if a1 >=u 5
      :                          @8990
114829: 28 42 33 01              jump @13217
      :                          @8991
114833: 82 17 10 02              a0 = u64 [sp + 0x210]
114837: 82 79 70                 a2 = u64 [a0 + 0x70]
114840: 33 0c 06                 a5 = 0x6
114843: ae c9 07                 jump @8993 if a2 >=u a5
      :                          @8992
114846: 28 44 33 01              jump @13236
      :                          @8993
114850: ca 26 09                 a2 = s1 * t0
114853: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
114863: d6 a9 0a                 a3 = a2 mulhu a3
114866: 98 aa 03                 a3 = a3 >> 0x3
114869: 82 7b 68                 a4 = u64 [a0 + 0x68]
114872: 33 06 0a                 s1 = 0xa
114875: ca 6a 0a                 a3 = a3 * s1
114878: c9 a9 09                 a2 = a2 - a3
114881: 7b b9 28                 u64 [a4 + 0x28] = a2
114884: 55 18 06 08              jump @8995 if a1 >=u 6
      :                          @8994
114888: 28 45 33 01              jump @13275
      :                          @8995
114892: 82 78 88 00              a1 = u64 [a0 + 0x88]
114896: 33 0a 05                 a3 = 0x5
114899: ae a8 07                 jump @8997 if a1 >=u a3
      :                          @8996
114902: 28 0a 33 01              jump @13234
      :                          @8997
114906: 82 77 80 00              a0 = u64 [a0 + 0x80]
114910: 7b 79 20                 u64 [a0 + 0x20] = a2
114913: 82 17 18 02              a0 = u64 [sp + 0x218]
114917: 82 18 10 02              a1 = u64 [sp + 0x210]
114921: 82 19 08 02              a2 = u64 [sp + 0x208]
114925: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
114929: 7b 18 98 02              u64 [sp + 0x298] = a1
114933: 7b 19 90 02              u64 [sp + 0x290] = a2
114937: 95 17 90 02              a0 = sp + 0x290
114941: 50 20 42 05 a6 3d ff     ra = 1346, jump @5084
      :                          @8998 [@dyn 673]
114948: 7b 17 20 01              u64 [sp + 0x120] = a0
114952: 95 17 20 01              a0 = sp + 0x120
114956: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
114960: 33 07 28 0c              a0 = 0xc28
114964: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
114968: 33 07 20 09 01           a0 = 0x10920
114973: 7b 17 90 02              u64 [sp + 0x290] = a0
114977: 49 21 98 02 01           u64 [sp + 664] = 0x1
114982: 49 21 b0 02              u64 [sp + 688] = 0
114986: 95 18 e0 01              a1 = sp + 0x1e0
114990: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
114994: 49 21 a8 02 01           u64 [sp + 680] = 0x1
114999: 95 17 38 02              a0 = sp + 0x238
115003: 95 18 90 02              a1 = sp + 0x290
115007: 50 20 44 05 00 8e fe     ra = 1348, jump @1491
      :                          @8999 [@dyn 674]
115014: 82 16 40 02              s1 = u64 [sp + 0x240]
115018: 82 1b 48 02              a4 = u64 [sp + 0x248]
115022: 82 17 38 02              a0 = u64 [sp + 0x238]
115026: 7b 17 70                 u64 [sp + 0x70] = a0
115029: 33 07 02                 a0 = 0x2
115032: 33 08                    a1 = 0
115034: 33 09                    a2 = 0
115036: 64 6a                    a3 = s1
115038: 33 00 46 05              ra = 0x546
115042: 0a 64                    ecalli 100 // 'log'
115044: 01                       fallthrough
      :                          @9000 [@dyn 675]
115045: 82 1c 70                 a5 = u64 [sp + 0x70]
115048: 82 17 68                 a0 = u64 [sp + 0x68]
115051: c8 c7 07                 a0 = a0 + a5
115054: 55 37 00 00 ff 0a        jump @9002 if a0 >=u 4294901760
      :                          @9001
115060: 28 52 20 01              jump @12856
      :                          @9002
115064: 33 07 c0 22 03           a0 = 0x322c0
115069: 95 77 00 00 01           a0 = a0 + 0x10000
115074: 01                       fallthrough
      :                          @9003
115075: 82 78                    a1 = u64 [a0]
115077: c9 87 09                 a2 = a0 - a1
115080: aa 69 07                 jump @9005 if a2 == s1
      :                          @9004
115083: 28 3b 20 01              jump @12856
      :                          @9005
115087: c9 c8 09                 a2 = a1 - a5
115090: 01                       fallthrough
      :                          @9006
115091: 82 7a                    a3 = u64 [a0]
115093: ab 8a ee                 jump @9003 if a3 != a1
      :                          @9007
115096: 7b 79                    u64 [a0] = a2
115098: 33 0b                    a4 = 0
115100: 01                       fallthrough
      :                          @9008
115101: ab 8a e6                 jump @9003 if a3 != a1
      :                          @9009
115104: 28 26 20 01              jump @12856
      :                          @9010 [@dyn 676]
115108: 95 17 90 02              a0 = sp + 0x290
115112: 33 08 05                 a1 = 0x5
115115: 50 20 4a 05 fd 9b fe     ra = 1354, jump @1776
      :                          @9011 [@dyn 677]
115122: 95 17 e0 01              a0 = sp + 0x1e0
115126: 95 18 90 02              a1 = sp + 0x290
115130: 33 09 05                 a2 = 0x5
115133: 50 20 4c 05 0b a3 fe     ra = 1356, jump @1895
      :                          @9012 [@dyn 678]
115140: 95 17 90 02              a0 = sp + 0x290
115144: 33 08 05                 a1 = 0x5
115147: 50 20 4e 05 dd 9b fe     ra = 1358, jump @1776
      :                          @9013 [@dyn 679]
115154: 95 17 08 02              a0 = sp + 0x208
115158: 95 18 90 02              a1 = sp + 0x290
115162: 33 09 05                 a2 = 0x5
115165: 50 20 50 05 eb a2 fe     ra = 1360, jump @1895
      :                          @9014 [@dyn 680]
115172: 49 11 70                 u64 [sp + 112] = 0
115175: 33 07                    a0 = 0
115177: 49 11 60 01              u64 [sp + 96] = 0x1
115181: 33 00 78 12 03           ra = 0x31278
115186: 28 1f                    jump @9017
      :                          @9015
115188: 95 77 01                 a0 = a0 + 0x1
115191: 82 18 60                 a1 = u64 [sp + 0x60]
115194: 95 88 01                 a1 = a1 + 0x1
115197: 7b 18 60                 u64 [sp + 0x60] = a1
115200: 82 18 70                 a1 = u64 [sp + 0x70]
115203: 95 88 18                 a1 = a1 + 0x18
115206: 7b 18 70                 u64 [sp + 0x70] = a1
115209: 52 17 05 08              jump @9017 if a0 != 5
      :                          @9016
115213: 28 a5 2c 01              jump @13066
      :                          @9017
115217: 56 17 03 e3              jump @9015 if a0 >u 3
      :                          @9018
115221: 82 1c 70                 a5 = u64 [sp + 0x70]
115224: 82 19 60                 a2 = u64 [sp + 0x60]
115227: 01                       fallthrough
      :                          @9019
115228: 3a 08 78 12 03           a1 = u64 [0x31278]
115233: 97 8a 0d                 a3 = a1 << 0xd
115236: d3 a8 08                 a1 = a1 ^ a3
115239: 98 8a 07                 a3 = a1 >> 0x7
115242: d3 8a 02                 t0 = a3 ^ a1
115245: 97 28 11                 a1 = t0 << 0x11
115248: d3 28 08                 a1 = a1 ^ t0
115251: 3e 08 78 12 03           u64 [0x31278] = a1
115256: 3a 08 78 12 03           a1 = u64 [0x31278]
115261: 97 8a 0d                 a3 = a1 << 0xd
115264: d3 a8 08                 a1 = a1 ^ a3
115267: 98 8b 07                 a4 = a1 >> 0x7
115270: d3 8b 0b                 a4 = a4 ^ a1
115273: 97 b8 11                 a1 = a4 << 0x11
115276: d3 b8 08                 a1 = a1 ^ a4
115279: 3e 08 78 12 03           u64 [0x31278] = a1
115284: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
115288: ac 87 07                 jump @9021 if a0 <u a1
      :                          @9020
115291: 28 74 31 01              jump @13217
      :                          @9021
115295: 82 14 e8 01              t2 = u64 [sp + 0x1e8]
115299: 96 73 18                 t1 = a0 * 0x18
115302: c8 34 06                 s1 = t2 + t1
115305: 82 6a 10                 a3 = u64 [s1 + 0x10]
115308: ac a9 07                 jump @9023 if a2 <u a3
      :                          @9022
115311: 28 19 1d 01              jump @12814
      :                          @9023
115315: 82 6a 08                 a3 = u64 [s1 + 0x8]
115318: c8 9a 06                 s1 = a3 + a2
115321: 84 2a 01                 a3 = t0 & 0x1
115324: 78 6a                    u8 [s1] = a3
115326: ac 89 07                 jump @9025 if a2 <u a1
      :                          @9024
115329: 28 81 31 01              jump @13264
      :                          @9025
115333: c8 c4 04                 t2 = t2 + a5
115336: 82 48 28                 a1 = u64 [t2 + 0x28]
115339: ac 87 07                 jump @9027 if a0 <u a1
      :                          @9026
115342: 28 41 31 01              jump @13217
      :                          @9027
115346: 82 48 20                 a1 = u64 [t2 + 0x20]
115349: c8 78 08                 a1 = a1 + a0
115352: 78 8a                    u8 [a1] = a3
115354: 82 18 18 02              a1 = u64 [sp + 0x218]
115358: ac 87 07                 jump @9029 if a0 <u a1
      :                          @9028
115361: 28 2e 31 01              jump @13217
      :                          @9029
115365: 82 16 10 02              s1 = u64 [sp + 0x210]
115369: c8 63 03                 t1 = t1 + s1
115372: 82 3a 10                 a3 = u64 [t1 + 0x10]
115375: ac a9 07                 jump @9031 if a2 <u a3
      :                          @9030
115378: 28 d6 1c 01              jump @12814
      :                          @9031
115382: 82 3a 08                 a3 = u64 [t1 + 0x8]
115385: c8 9a 0a                 a3 = a3 + a2
115388: 84 bb 01                 a4 = a4 & 0x1
115391: 78 ab                    u8 [a3] = a4
115393: ac 89 07                 jump @9033 if a2 <u a1
      :                          @9032
115396: 28 3e 31 01              jump @13264
      :                          @9033
115400: c8 c6 06                 s1 = s1 + a5
115403: 82 68 28                 a1 = u64 [s1 + 0x28]
115406: ac 87 07                 jump @9035 if a0 <u a1
      :                          @9034
115409: 28 fe 30 01              jump @13217
      :                          @9035
115413: 82 68 20                 a1 = u64 [s1 + 0x20]
115416: c8 78 08                 a1 = a1 + a0
115419: 78 8b                    u8 [a1] = a4
115421: 95 99 01                 a2 = a2 + 0x1
115424: 95 cc 18                 a5 = a5 + 0x18
115427: 52 19 05 39 ff           jump @9019 if a2 != 5
      :                          @9036
115432: 28 0c ff                 jump @9015
      :                          @9037 [@dyn 681]
115435: 3a 08 78 12 03           a1 = u64 [0x31278]
115440: 97 89 0d                 a2 = a1 << 0xd
115443: d3 89 09                 a2 = a2 ^ a1
115446: 98 9a 07                 a3 = a2 >> 0x7
115449: 3a 08 60 11 03           a1 = u64 [0x31160]
115454: d3 a9 09                 a2 = a2 ^ a3
115457: 97 9a 11                 a3 = a2 << 0x11
115460: d3 a9 09                 a2 = a2 ^ a3
115463: ca 89 0a                 a3 = a2 * a1
115466: 3e 09 78 12 03           u64 [0x31278] = a2
115471: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
115481: d6 9a 0b                 a4 = a3 mulhu a2
115484: 98 bb 03                 a4 = a4 >> 0x3
115487: 3a 06 78 12 03           s1 = u64 [0x31278]
115492: 96 bb 0a                 a4 = a4 * 0xa
115495: c9 ba 0a                 a3 = a3 - a4
115498: 7b 1a 70                 u64 [sp + 0x70] = a3
115501: 97 6a 0d                 a3 = s1 << 0xd
115504: d3 6a 0a                 a3 = a3 ^ s1
115507: 98 ab 07                 a4 = a3 >> 0x7
115510: d3 ba 0a                 a3 = a3 ^ a4
115513: 97 ab 11                 a4 = a3 << 0x11
115516: d3 ba 0a                 a3 = a3 ^ a4
115519: ca 8a 0b                 a4 = a3 * a1
115522: 3e 0a 78 12 03           u64 [0x31278] = a3
115527: d6 9b 0a                 a3 = a4 mulhu a2
115530: 98 aa 03                 a3 = a3 >> 0x3
115533: 3a 0c 78 12 03           a5 = u64 [0x31278]
115538: 96 aa 0a                 a3 = a3 * 0xa
115541: c9 ab 0b                 a4 = a4 - a3
115544: 7b 1b 60                 u64 [sp + 0x60] = a4
115547: 97 ca 0d                 a3 = a5 << 0xd
115550: d3 ca 0a                 a3 = a3 ^ a5
115553: 98 ab 07                 a4 = a3 >> 0x7
115556: d3 ba 0a                 a3 = a3 ^ a4
115559: 97 ab 11                 a4 = a3 << 0x11
115562: d3 ba 0a                 a3 = a3 ^ a4
115565: ca 8a 0b                 a4 = a3 * a1
115568: 3e 0a 78 12 03           u64 [0x31278] = a3
115573: d6 9b 0a                 a3 = a4 mulhu a2
115576: 98 ac 02                 a5 = a3 >> 0x2
115579: 84 aa fc                 a3 = a3 & 0xfffffffffffffffc
115582: 3a 07 78 12 03           a0 = u64 [0x31278]
115587: c8 ca 0a                 a3 = a3 + a5
115590: c9 ab 0b                 a4 = a4 - a3
115593: 7b 1b 58                 u64 [sp + 0x58] = a4
115596: 97 7a 0d                 a3 = a0 << 0xd
115599: d3 a7 07                 a0 = a0 ^ a3
115602: 98 7a 07                 a3 = a0 >> 0x7
115605: d3 a7 07                 a0 = a0 ^ a3
115608: 97 7a 11                 a3 = a0 << 0x11
115611: d3 a7 07                 a0 = a0 ^ a3
115614: ca 87 08                 a1 = a0 * a1
115617: 3e 07 78 12 03           u64 [0x31278] = a0
115622: d6 98 07                 a0 = a1 mulhu a2
115625: 98 79 02                 a2 = a0 >> 0x2
115628: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
115631: c8 97 07                 a0 = a0 + a2
115634: c9 78 06                 s1 = a1 - a0
115637: 33 07 40                 a0 = 0x40
115640: 50 20 54 05 3e 8c fe     ra = 1364, jump @1509
      :                          @9038 [@dyn 682]
115647: 64 78                    a1 = a0
115649: 82 19 70                 a2 = u64 [sp + 0x70]
115652: 82 17 58                 a0 = u64 [sp + 0x58]
115655: c8 97 07                 a0 = a0 + a2
115658: 95 77 01                 a0 = a0 + 0x1
115661: 82 1a 60                 a3 = u64 [sp + 0x60]
115664: c8 a6 06                 s1 = s1 + a3
115667: 95 66 01                 s1 = s1 + 0x1
115670: 7b 89                    u64 [a1] = a2
115672: 7b 8a 08                 u64 [a1 + 0x8] = a3
115675: 7b 87 10                 u64 [a1 + 0x10] = a0
115678: 7b 8a 18                 u64 [a1 + 0x18] = a3
115681: 7b 87 20                 u64 [a1 + 0x20] = a0
115684: 7b 86 28                 u64 [a1 + 0x28] = s1
115687: 7b 89 30                 u64 [a1 + 0x30] = a2
115690: 7b 86 38                 u64 [a1 + 0x38] = s1
115693: 33 06 04                 s1 = 0x4
115696: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
115700: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
115704: 7b 16 f0 01              u64 [sp + 0x1f0] = s1
115708: 95 17 90 02              a0 = sp + 0x290
115712: 50 20 56 05 af 42 ff     ra = 1366, jump @5284
      :                          @9039 [@dyn 683]
115719: 82 17 90 02              a0 = u64 [sp + 0x290]
115723: 82 18 98 02              a1 = u64 [sp + 0x298]
115727: 82 19 a0 02              a2 = u64 [sp + 0x2a0]
115731: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
115735: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
115739: 7b 19 20 01              u64 [sp + 0x120] = a2
115743: 95 17 e0 01              a0 = sp + 0x1e0
115747: 7b 17 90 02              u64 [sp + 0x290] = a0
115751: 33 07 08 02              a0 = 0x208
115755: 7b 17 98 02              u64 [sp + 0x298] = a0
115759: 95 17 b0 01              a0 = sp + 0x1b0
115763: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
115767: 33 07 94 0c              a0 = 0xc94
115771: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
115775: 95 18 c8 01              a1 = sp + 0x1c8
115779: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
115783: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
115787: 95 18 20 01              a1 = sp + 0x120
115791: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
115795: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
115799: 33 07 08 0a 01           a0 = 0x10a08
115804: 7b 17 38 02              u64 [sp + 0x238] = a0
115808: 7b 16 40 02              u64 [sp + 0x240] = s1
115812: 49 21 58 02              u64 [sp + 600] = 0
115816: 95 17 90 02              a0 = sp + 0x290
115820: 7b 17 48 02              u64 [sp + 0x248] = a0
115824: 7b 16 50 02              u64 [sp + 0x250] = s1
115828: 95 17 08 02              a0 = sp + 0x208
115832: 95 18 38 02              a1 = sp + 0x238
115836: 50 20 58 05 c3 8a fe     ra = 1368, jump @1491
      :                          @9040 [@dyn 684]
115843: 82 16 10 02              s1 = u64 [sp + 0x210]
115847: 82 1b 18 02              a4 = u64 [sp + 0x218]
115851: 82 17 08 02              a0 = u64 [sp + 0x208]
115855: 7b 17 70                 u64 [sp + 0x70] = a0
115858: 33 07 02                 a0 = 0x2
115861: 33 08                    a1 = 0
115863: 33 09                    a2 = 0
115865: 64 6a                    a3 = s1
115867: 33 00 5a 05              ra = 0x55a
115871: 0a 64                    ecalli 100 // 'log'
115873: 01                       fallthrough
      :                          @9041 [@dyn 685]
115874: 82 1c 70                 a5 = u64 [sp + 0x70]
115877: 82 17 68                 a0 = u64 [sp + 0x68]
115880: c8 c7 07                 a0 = a0 + a5
115883: 53 37 00 00 ff 25        jump @9047 if a0 <u 4294901760
      :                          @9042
115889: 33 07 c0 22 03           a0 = 0x322c0
115894: 95 77 00 00 01           a0 = a0 + 0x10000
115899: 01                       fallthrough
      :                          @9043
115900: 82 78                    a1 = u64 [a0]
115902: c9 87 09                 a2 = a0 - a1
115905: ab 69 0f                 jump @9047 if a2 != s1
      :                          @9044
115908: c9 c8 09                 a2 = a1 - a5
115911: 01                       fallthrough
      :                          @9045
115912: 82 7a                    a3 = u64 [a0]
115914: ab 8a f2                 jump @9043 if a3 != a1
      :                          @9046
115917: 7b 79                    u64 [a0] = a2
115919: 01                       fallthrough
      :                          @9047
115920: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
115924: 52 08 07                 jump @9049 if a1 != 0
      :                          @9048
115927: 28 ef 1c 01              jump @12856
      :                          @9049
115931: 54 28 00 10 09           jump @9051 if a1 <=u 4096
      :                          @9050
115936: 28 e6 1c 01              jump @12856
      :                          @9051
115940: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
115944: 97 88 04                 a1 = a1 << 0x4
115947: 33 09 c0 22 03           a2 = 0x322c0
115952: 95 99 00 00 01           a2 = a2 + 0x10000
115957: 01                       fallthrough
      :                          @9052
115958: 82 9a                    a3 = u64 [a2]
115960: c9 a9 0b                 a4 = a2 - a3
115963: aa 7b 07                 jump @9054 if a4 == a0
      :                          @9053
115966: 28 c8 1c 01              jump @12856
      :                          @9054
115970: c9 8a 0b                 a4 = a3 - a1
115973: 01                       fallthrough
      :                          @9055
115974: 82 9c                    a5 = u64 [a2]
115976: ab ac ee                 jump @9052 if a5 != a3
      :                          @9056
115979: 7b 9b                    u64 [a2] = a4
115981: 33 06                    s1 = 0
115983: 01                       fallthrough
      :                          @9057
115984: ab ac e6                 jump @9052 if a5 != a3
      :                          @9058
115987: 28 b3 1c 01              jump @12856
      :                          @9059 [@dyn 686]
115991: 3a 08 78 12 03           a1 = u64 [0x31278]
115996: 97 89 0d                 a2 = a1 << 0xd
115999: d3 89 09                 a2 = a2 ^ a1
116002: 98 9a 07                 a3 = a2 >> 0x7
116005: 3a 08 60 11 03           a1 = u64 [0x31160]
116010: d3 a9 09                 a2 = a2 ^ a3
116013: 97 9a 11                 a3 = a2 << 0x11
116016: d3 9a 0a                 a3 = a3 ^ a2
116019: ca 8a 0b                 a4 = a3 * a1
116022: 3a 09 70 11 03           a2 = u64 [0x31170]
116027: 3e 0a 78 12 03           u64 [0x31278] = a3
116032: 98 ba 01                 a3 = a4 >> 0x1
116035: d6 9a 0a                 a3 = a3 mulhu a2
116038: 98 ac 04                 a5 = a3 >> 0x4
116041: 3a 06 78 12 03           s1 = u64 [0x31278]
116046: 96 cc 32                 a5 = a5 * 0x32
116049: c9 cb 0b                 a4 = a4 - a5
116052: 97 6c 0d                 a5 = s1 << 0xd
116055: d3 c6 06                 s1 = s1 ^ a5
116058: 98 6c 07                 a5 = s1 >> 0x7
116061: d3 c6 06                 s1 = s1 ^ a5
116064: 97 6c 11                 a5 = s1 << 0x11
116067: d3 6c 0c                 a5 = a5 ^ s1
116070: ca 8c 06                 s1 = a5 * a1
116073: 3e 0c 78 12 03           u64 [0x31278] = a5
116078: 98 6c 01                 a5 = s1 >> 0x1
116081: d6 9c 0c                 a5 = a5 mulhu a2
116084: 98 cc 04                 a5 = a5 >> 0x4
116087: 96 cc 32                 a5 = a5 * 0x32
116090: c9 c6 06                 s1 = s1 - a5
116093: 7b 1b 20 01              u64 [sp + 0x120] = a4
116097: 7b 16 28 01              u64 [sp + 0x128] = s1
116101: 3a 0b 78 12 03           a4 = u64 [0x31278]
116106: 97 bc 0d                 a5 = a4 << 0xd
116109: d3 cb 0b                 a4 = a4 ^ a5
116112: 98 bc 07                 a5 = a4 >> 0x7
116115: d3 cb 0b                 a4 = a4 ^ a5
116118: 97 bc 11                 a5 = a4 << 0x11
116121: d3 cb 0b                 a4 = a4 ^ a5
116124: ca 8b 0c                 a5 = a4 * a1
116127: 3e 0b 78 12 03           u64 [0x31278] = a4
116132: 98 cb 01                 a4 = a5 >> 0x1
116135: d6 9b 0b                 a4 = a4 mulhu a2
116138: 98 bb 04                 a4 = a4 >> 0x4
116141: 3a 06 78 12 03           s1 = u64 [0x31278]
116146: 96 bb 32                 a4 = a4 * 0x32
116149: c9 bc 0c                 a5 = a5 - a4
116152: 97 6b 0d                 a4 = s1 << 0xd
116155: d3 b6 06                 s1 = s1 ^ a4
116158: 98 6b 07                 a4 = s1 >> 0x7
116161: d3 b6 06                 s1 = s1 ^ a4
116164: 97 6b 11                 a4 = s1 << 0x11
116167: d3 6b 0b                 a4 = a4 ^ s1
116170: ca 8b 08                 a1 = a4 * a1
116173: 3e 0b 78 12 03           u64 [0x31278] = a4
116178: 98 87 01                 a0 = a1 >> 0x1
116181: d6 97 07                 a0 = a0 mulhu a2
116184: 98 77 04                 a0 = a0 >> 0x4
116187: 96 77 32                 a0 = a0 * 0x32
116190: c9 78 08                 a1 = a1 - a0
116193: 82 17 20 01              a0 = u64 [sp + 0x120]
116197: 7b 1c e0 01              u64 [sp + 0x1e0] = a5
116201: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
116205: 82 19 28 01              a2 = u64 [sp + 0x128]
116209: c9 c7 07                 a0 = a0 - a5
116212: 9a 7a                    a3 = -a0
116214: e3 a7 07                 a0 = maxs(a0, a3)
116217: c9 89 09                 a2 = a2 - a1
116220: 9a 98                    a1 = -a2
116222: e3 89 08                 a1 = maxs(a2, a1)
116225: c8 87 07                 a0 = a0 + a1
116228: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
116232: 95 17 20 01              a0 = sp + 0x120
116236: 7b 17 90 02              u64 [sp + 0x290] = a0
116240: 33 07 8e 01              a0 = 0x18e
116244: 7b 17 98 02              u64 [sp + 0x298] = a0
116248: 95 18 e0 01              a1 = sp + 0x1e0
116252: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
116256: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
116260: 95 17 c8 01              a0 = sp + 0x1c8
116264: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
116268: 33 07 28 0c              a0 = 0xc28
116272: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
116276: 33 07 58 0a 01           a0 = 0x10a58
116281: 7b 17 38 02              u64 [sp + 0x238] = a0
116285: 49 21 40 02 03           u64 [sp + 576] = 0x3
116290: 49 21 58 02              u64 [sp + 600] = 0
116294: 95 18 90 02              a1 = sp + 0x290
116298: 7b 18 48 02              u64 [sp + 0x248] = a1
116302: 49 21 50 02 03           u64 [sp + 592] = 0x3
116307: 95 17 08 02              a0 = sp + 0x208
116311: 95 18 38 02              a1 = sp + 0x238
116315: 50 20 5e 05 e4 88 fe     ra = 1374, jump @1491
      :                          @9060 [@dyn 687]
116322: 82 16 10 02              s1 = u64 [sp + 0x210]
116326: 82 1b 18 02              a4 = u64 [sp + 0x218]
116330: 82 17 08 02              a0 = u64 [sp + 0x208]
116334: 7b 17 70                 u64 [sp + 0x70] = a0
116337: 33 07 02                 a0 = 0x2
116340: 33 08                    a1 = 0
116342: 33 09                    a2 = 0
116344: 64 6a                    a3 = s1
116346: 33 00 60 05              ra = 0x560
116350: 0a 64                    ecalli 100 // 'log'
116352: 01                       fallthrough
      :                          @9061 [@dyn 688]
116353: 82 1c 70                 a5 = u64 [sp + 0x70]
116356: 82 17 68                 a0 = u64 [sp + 0x68]
116359: c8 c7 07                 a0 = a0 + a5
116362: 55 37 00 00 ff 0a        jump @9063 if a0 >=u 4294901760
      :                          @9062
116368: 28 36 1b 01              jump @12856
      :                          @9063
116372: 33 07 c0 22 03           a0 = 0x322c0
116377: 95 77 00 00 01           a0 = a0 + 0x10000
116382: 01                       fallthrough
      :                          @9064
116383: 82 78                    a1 = u64 [a0]
116385: c9 87 09                 a2 = a0 - a1
116388: aa 69 07                 jump @9066 if a2 == s1
      :                          @9065
116391: 28 1f 1b 01              jump @12856
      :                          @9066
116395: c9 c8 09                 a2 = a1 - a5
116398: 01                       fallthrough
      :                          @9067
116399: 82 7a                    a3 = u64 [a0]
116401: ab 8a ee                 jump @9064 if a3 != a1
      :                          @9068
116404: 7b 79                    u64 [a0] = a2
116406: 33 0b                    a4 = 0
116408: 01                       fallthrough
      :                          @9069
116409: ab 8a e6                 jump @9064 if a3 != a1
      :                          @9070
116412: 28 0a 1b 01              jump @12856
      :                          @9071 [@dyn 689]
116416: 3a 08 78 12 03           a1 = u64 [0x31278]
116421: 97 89 0d                 a2 = a1 << 0xd
116424: d3 89 09                 a2 = a2 ^ a1
116427: 98 9a 07                 a3 = a2 >> 0x7
116430: 3a 08 60 11 03           a1 = u64 [0x31160]
116435: d3 a9 09                 a2 = a2 ^ a3
116438: 97 9a 11                 a3 = a2 << 0x11
116441: d3 9a 0a                 a3 = a3 ^ a2
116444: ca 8a 0b                 a4 = a3 * a1
116447: 3a 09 70 11 03           a2 = u64 [0x31170]
116452: 3e 0a 78 12 03           u64 [0x31278] = a3
116457: 98 ba 01                 a3 = a4 >> 0x1
116460: d6 9a 0a                 a3 = a3 mulhu a2
116463: 98 ac 04                 a5 = a3 >> 0x4
116466: 3a 06 78 12 03           s1 = u64 [0x31278]
116471: 96 cc 32                 a5 = a5 * 0x32
116474: c9 cb 0b                 a4 = a4 - a5
116477: 97 6c 0d                 a5 = s1 << 0xd
116480: d3 c6 06                 s1 = s1 ^ a5
116483: 98 6c 07                 a5 = s1 >> 0x7
116486: d3 c6 06                 s1 = s1 ^ a5
116489: 97 6c 11                 a5 = s1 << 0x11
116492: d3 6c 0c                 a5 = a5 ^ s1
116495: ca 8c 06                 s1 = a5 * a1
116498: 3e 0c 78 12 03           u64 [0x31278] = a5
116503: 98 6c 01                 a5 = s1 >> 0x1
116506: d6 9c 0c                 a5 = a5 mulhu a2
116509: 98 cc 04                 a5 = a5 >> 0x4
116512: 96 cc 32                 a5 = a5 * 0x32
116515: c9 c6 06                 s1 = s1 - a5
116518: 7b 1b 20 01              u64 [sp + 0x120] = a4
116522: 7b 16 28 01              u64 [sp + 0x128] = s1
116526: 3a 0b 78 12 03           a4 = u64 [0x31278]
116531: 97 bc 0d                 a5 = a4 << 0xd
116534: d3 cb 0b                 a4 = a4 ^ a5
116537: 98 bc 07                 a5 = a4 >> 0x7
116540: d3 cb 0b                 a4 = a4 ^ a5
116543: 97 bc 11                 a5 = a4 << 0x11
116546: d3 cb 0b                 a4 = a4 ^ a5
116549: ca 8b 0c                 a5 = a4 * a1
116552: 3e 0b 78 12 03           u64 [0x31278] = a4
116557: 98 cb 01                 a4 = a5 >> 0x1
116560: d6 9b 0b                 a4 = a4 mulhu a2
116563: 98 bb 04                 a4 = a4 >> 0x4
116566: 3a 06 78 12 03           s1 = u64 [0x31278]
116571: 96 bb 32                 a4 = a4 * 0x32
116574: c9 bc 0c                 a5 = a5 - a4
116577: 97 6b 0d                 a4 = s1 << 0xd
116580: d3 b6 06                 s1 = s1 ^ a4
116583: 98 6b 07                 a4 = s1 >> 0x7
116586: d3 b6 06                 s1 = s1 ^ a4
116589: 97 6b 11                 a4 = s1 << 0x11
116592: d3 6b 0b                 a4 = a4 ^ s1
116595: ca 8b 08                 a1 = a4 * a1
116598: 3e 0b 78 12 03           u64 [0x31278] = a4
116603: 98 87 01                 a0 = a1 >> 0x1
116606: d6 97 07                 a0 = a0 mulhu a2
116609: 98 77 04                 a0 = a0 >> 0x4
116612: 96 77 32                 a0 = a0 * 0x32
116615: c9 78 08                 a1 = a1 - a0
116618: 82 17 20 01              a0 = u64 [sp + 0x120]
116622: 7b 1c e0 01              u64 [sp + 0x1e0] = a5
116626: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
116630: 82 19 28 01              a2 = u64 [sp + 0x128]
116634: c9 c7 07                 a0 = a0 - a5
116637: 9a 7a                    a3 = -a0
116639: e3 a7 07                 a0 = maxs(a0, a3)
116642: c9 89 09                 a2 = a2 - a1
116645: 9a 98                    a1 = -a2
116647: e3 89 08                 a1 = maxs(a2, a1)
116650: e4 87 07                 a0 = maxu(a0, a1)
116653: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
116657: 95 17 20 01              a0 = sp + 0x120
116661: 7b 17 90 02              u64 [sp + 0x290] = a0
116665: 33 07 8e 01              a0 = 0x18e
116669: 7b 17 98 02              u64 [sp + 0x298] = a0
116673: 95 18 e0 01              a1 = sp + 0x1e0
116677: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
116681: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
116685: 95 17 c8 01              a0 = sp + 0x1c8
116689: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
116693: 33 07 28 0c              a0 = 0xc28
116697: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
116701: 33 07 98 0a 01           a0 = 0x10a98
116706: 7b 17 38 02              u64 [sp + 0x238] = a0
116710: 49 21 40 02 03           u64 [sp + 576] = 0x3
116715: 49 21 58 02              u64 [sp + 600] = 0
116719: 95 18 90 02              a1 = sp + 0x290
116723: 7b 18 48 02              u64 [sp + 0x248] = a1
116727: 49 21 50 02 03           u64 [sp + 592] = 0x3
116732: 95 17 08 02              a0 = sp + 0x208
116736: 95 18 38 02              a1 = sp + 0x238
116740: 50 20 64 05 3b 87 fe     ra = 1380, jump @1491
      :                          @9072 [@dyn 690]
116747: 82 16 10 02              s1 = u64 [sp + 0x210]
116751: 82 1b 18 02              a4 = u64 [sp + 0x218]
116755: 82 17 08 02              a0 = u64 [sp + 0x208]
116759: 7b 17 70                 u64 [sp + 0x70] = a0
116762: 33 07 02                 a0 = 0x2
116765: 33 08                    a1 = 0
116767: 33 09                    a2 = 0
116769: 64 6a                    a3 = s1
116771: 33 00 66 05              ra = 0x566
116775: 0a 64                    ecalli 100 // 'log'
116777: 01                       fallthrough
      :                          @9073 [@dyn 691]
116778: 82 1c 70                 a5 = u64 [sp + 0x70]
116781: 82 17 68                 a0 = u64 [sp + 0x68]
116784: c8 c7 07                 a0 = a0 + a5
116787: 55 37 00 00 ff 0a        jump @9075 if a0 >=u 4294901760
      :                          @9074
116793: 28 8d 19 01              jump @12856
      :                          @9075
116797: 33 07 c0 22 03           a0 = 0x322c0
116802: 95 77 00 00 01           a0 = a0 + 0x10000
116807: 01                       fallthrough
      :                          @9076
116808: 82 78                    a1 = u64 [a0]
116810: c9 87 09                 a2 = a0 - a1
116813: aa 69 07                 jump @9078 if a2 == s1
      :                          @9077
116816: 28 76 19 01              jump @12856
      :                          @9078
116820: c9 c8 09                 a2 = a1 - a5
116823: 01                       fallthrough
      :                          @9079
116824: 82 7a                    a3 = u64 [a0]
116826: ab 8a ee                 jump @9076 if a3 != a1
      :                          @9080
116829: 7b 79                    u64 [a0] = a2
116831: 33 0b                    a4 = 0
116833: 01                       fallthrough
      :                          @9081
116834: ab 8a e6                 jump @9076 if a3 != a1
      :                          @9082
116837: 28 61 19 01              jump @12856
      :                          @9083 [@dyn 692]
116841: 3a 07 78 12 03           a0 = u64 [0x31278]
116846: 97 78 0d                 a1 = a0 << 0xd
116849: d3 87 07                 a0 = a0 ^ a1
116852: 98 78 07                 a1 = a0 >> 0x7
116855: 3a 09 60 11 03           a2 = u64 [0x31160]
116860: d3 87 07                 a0 = a0 ^ a1
116863: 97 78 11                 a1 = a0 << 0x11
116866: d3 87 07                 a0 = a0 ^ a1
116869: ca 97 08                 a1 = a0 * a2
116872: 64 9c                    a5 = a2
116874: 7b 19 58                 u64 [sp + 0x58] = a2
116877: 3e 07 78 12 03           u64 [0x31278] = a0
116882: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
116892: d6 98 07                 a0 = a1 mulhu a2
116895: 98 77 03                 a0 = a0 >> 0x3
116898: 3a 0a 78 12 03           a3 = u64 [0x31278]
116903: 96 77 0a                 a0 = a0 * 0xa
116906: c9 78 08                 a1 = a1 - a0
116909: 7b 18 70                 u64 [sp + 0x70] = a1
116912: 97 a7 0d                 a0 = a3 << 0xd
116915: d3 a7 07                 a0 = a0 ^ a3
116918: 98 78 07                 a1 = a0 >> 0x7
116921: d3 87 07                 a0 = a0 ^ a1
116924: 97 78 11                 a1 = a0 << 0x11
116927: d3 87 07                 a0 = a0 ^ a1
116930: ca c7 08                 a1 = a0 * a5
116933: 3e 07 78 12 03           u64 [0x31278] = a0
116938: d6 98 07                 a0 = a1 mulhu a2
116941: 98 77 03                 a0 = a0 >> 0x3
116944: 3a 0a 78 12 03           a3 = u64 [0x31278]
116949: 96 77 0a                 a0 = a0 * 0xa
116952: c9 78 08                 a1 = a1 - a0
116955: 7b 18 60                 u64 [sp + 0x60] = a1
116958: 97 a7 0d                 a0 = a3 << 0xd
116961: d3 a7 07                 a0 = a0 ^ a3
116964: 98 78 07                 a1 = a0 >> 0x7
116967: d3 87 07                 a0 = a0 ^ a1
116970: 97 78 11                 a1 = a0 << 0x11
116973: d3 87 07                 a0 = a0 ^ a1
116976: ca c7 08                 a1 = a0 * a5
116979: 3e 07 78 12 03           u64 [0x31278] = a0
116984: d6 98 07                 a0 = a1 mulhu a2
116987: 7b 19 48                 u64 [sp + 0x48] = a2
116990: 98 76 02                 s1 = a0 >> 0x2
116993: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
116996: 3a 0a 78 12 03           a3 = u64 [0x31278]
117001: c8 67 07                 a0 = a0 + s1
117004: c9 78 08                 a1 = a1 - a0
117007: 7b 18 40                 u64 [sp + 0x40] = a1
117010: 97 a7 0d                 a0 = a3 << 0xd
117013: d3 a7 07                 a0 = a0 ^ a3
117016: 98 78 07                 a1 = a0 >> 0x7
117019: d3 87 07                 a0 = a0 ^ a1
117022: 97 78 11                 a1 = a0 << 0x11
117025: d3 87 07                 a0 = a0 ^ a1
117028: ca c7 08                 a1 = a0 * a5
117031: 3e 07 78 12 03           u64 [0x31278] = a0
117036: d6 98 07                 a0 = a1 mulhu a2
117039: 98 79 02                 a2 = a0 >> 0x2
117042: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
117045: c8 97 07                 a0 = a0 + a2
117048: c9 78 06                 s1 = a1 - a0
117051: 33 07 40                 a0 = 0x40
117054: 50 20 6a 05 b8 86 fe     ra = 1386, jump @1509
      :                          @9084 [@dyn 693]
117061: 82 19 70                 a2 = u64 [sp + 0x70]
117064: 82 18 40                 a1 = u64 [sp + 0x40]
117067: c8 98 08                 a1 = a1 + a2
117070: 95 88 01                 a1 = a1 + 0x1
117073: 82 1a 60                 a3 = u64 [sp + 0x60]
117076: c8 a6 06                 s1 = s1 + a3
117079: 95 66 01                 s1 = s1 + 0x1
117082: 7b 79                    u64 [a0] = a2
117084: 7b 7a 08                 u64 [a0 + 0x8] = a3
117087: 7b 78 10                 u64 [a0 + 0x10] = a1
117090: 7b 7a 18                 u64 [a0 + 0x18] = a3
117093: 7b 78 20                 u64 [a0 + 0x20] = a1
117096: 7b 76 28                 u64 [a0 + 0x28] = s1
117099: 7b 79 30                 u64 [a0 + 0x30] = a2
117102: 7b 76 38                 u64 [a0 + 0x38] = s1
117105: 49 21 e0 01 04           u64 [sp + 480] = 0x4
117110: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
117114: 49 21 f0 01 04           u64 [sp + 496] = 0x4
117119: 3a 07 78 12 03           a0 = u64 [0x31278]
117124: 97 78 0d                 a1 = a0 << 0xd
117127: d3 87 07                 a0 = a0 ^ a1
117130: 98 78 07                 a1 = a0 >> 0x7
117133: d3 87 07                 a0 = a0 ^ a1
117136: 97 78 11                 a1 = a0 << 0x11
117139: d3 87 07                 a0 = a0 ^ a1
117142: 82 1b 58                 a4 = u64 [sp + 0x58]
117145: ca b7 08                 a1 = a0 * a4
117148: 3e 07 78 12 03           u64 [0x31278] = a0
117153: 82 16 48                 s1 = u64 [sp + 0x48]
117156: d6 68 07                 a0 = a1 mulhu s1
117159: 98 77 04                 a0 = a0 >> 0x4
117162: 3a 0a 78 12 03           a3 = u64 [0x31278]
117167: 33 0c 78 12 03           a5 = 0x31278
117172: 96 77 14                 a0 = a0 * 0x14
117175: c9 78 07                 a0 = a1 - a0
117178: 97 a8 0d                 a1 = a3 << 0xd
117181: d3 a8 08                 a1 = a1 ^ a3
117184: 98 8a 07                 a3 = a1 >> 0x7
117187: d3 a8 08                 a1 = a1 ^ a3
117190: 97 8a 11                 a3 = a1 << 0x11
117193: d3 a8 08                 a1 = a1 ^ a3
117196: ca b8 0b                 a4 = a1 * a4
117199: 3e 08 78 12 03           u64 [0x31278] = a1
117204: d6 6b 08                 a1 = a4 mulhu s1
117207: 98 88 04                 a1 = a1 >> 0x4
117210: 96 88 14                 a1 = a1 * 0x14
117213: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
117217: 82 1a f0 01              a3 = u64 [sp + 0x1f0]
117221: c9 8b 08                 a1 = a4 - a1
117224: 7b 17 20 01              u64 [sp + 0x120] = a0
117228: 7b 18 28 01              u64 [sp + 0x128] = a1
117232: 50 20 6c 05 16 3e ff     ra = 1388, jump @5301
      :                          @9085 [@dyn 694]
117239: 78 17 c8 01              u8 [sp + 0x1c8] = a0
117243: 95 17 20 01              a0 = sp + 0x120
117247: 7b 17 90 02              u64 [sp + 0x290] = a0
117251: 33 07 8e 01              a0 = 0x18e
117255: 7b 17 98 02              u64 [sp + 0x298] = a0
117259: 95 17 e0 01              a0 = sp + 0x1e0
117263: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
117267: 33 07 08 02              a0 = 0x208
117271: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
117275: 95 17 c8 01              a0 = sp + 0x1c8
117279: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
117283: 33 07 80 0c              a0 = 0xc80
117287: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
117291: 33 07 d0 0a 01           a0 = 0x10ad0
117296: 7b 17 38 02              u64 [sp + 0x238] = a0
117300: 49 21 40 02 03           u64 [sp + 576] = 0x3
117305: 49 21 58 02              u64 [sp + 600] = 0
117309: 95 18 90 02              a1 = sp + 0x290
117313: 7b 18 48 02              u64 [sp + 0x248] = a1
117317: 49 21 50 02 03           u64 [sp + 592] = 0x3
117322: 95 17 08 02              a0 = sp + 0x208
117326: 95 18 38 02              a1 = sp + 0x238
117330: 50 20 6e 05 ed 84 fe     ra = 1390, jump @1491
      :                          @9086 [@dyn 695]
117337: 82 16 10 02              s1 = u64 [sp + 0x210]
117341: 82 1b 18 02              a4 = u64 [sp + 0x218]
117345: 82 17 08 02              a0 = u64 [sp + 0x208]
117349: 7b 17 70                 u64 [sp + 0x70] = a0
117352: 33 07 02                 a0 = 0x2
117355: 33 08                    a1 = 0
117357: 33 09                    a2 = 0
117359: 64 6a                    a3 = s1
117361: 33 00 70 05              ra = 0x570
117365: 0a 64                    ecalli 100 // 'log'
117367: 01                       fallthrough
      :                          @9087 [@dyn 696]
117368: 82 1c 70                 a5 = u64 [sp + 0x70]
117371: 82 17 68                 a0 = u64 [sp + 0x68]
117374: c8 c7 07                 a0 = a0 + a5
117377: 53 37 00 00 ff 25        jump @9093 if a0 <u 4294901760
      :                          @9088
117383: 33 07 c0 22 03           a0 = 0x322c0
117388: 95 77 00 00 01           a0 = a0 + 0x10000
117393: 01                       fallthrough
      :                          @9089
117394: 82 78                    a1 = u64 [a0]
117396: c9 87 09                 a2 = a0 - a1
117399: ab 69 0f                 jump @9093 if a2 != s1
      :                          @9090
117402: c9 c8 09                 a2 = a1 - a5
117405: 01                       fallthrough
      :                          @9091
117406: 82 7a                    a3 = u64 [a0]
117408: ab 8a f2                 jump @9089 if a3 != a1
      :                          @9092
117411: 7b 79                    u64 [a0] = a2
117413: 01                       fallthrough
      :                          @9093
117414: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
117418: 52 08 07                 jump @9095 if a1 != 0
      :                          @9094
117421: 28 19 17 01              jump @12856
      :                          @9095
117425: 54 28 00 10 09           jump @9097 if a1 <=u 4096
      :                          @9096
117430: 28 10 17 01              jump @12856
      :                          @9097
117434: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
117438: 97 88 04                 a1 = a1 << 0x4
117441: 33 09 c0 22 03           a2 = 0x322c0
117446: 95 99 00 00 01           a2 = a2 + 0x10000
117451: 01                       fallthrough
      :                          @9098
117452: 82 9a                    a3 = u64 [a2]
117454: c9 a9 0b                 a4 = a2 - a3
117457: aa 7b 07                 jump @9100 if a4 == a0
      :                          @9099
117460: 28 f2 16 01              jump @12856
      :                          @9100
117464: c9 8a 0b                 a4 = a3 - a1
117467: 01                       fallthrough
      :                          @9101
117468: 82 9c                    a5 = u64 [a2]
117470: ab ac ee                 jump @9098 if a5 != a3
      :                          @9102
117473: 7b 9b                    u64 [a2] = a4
117475: 33 06                    s1 = 0
117477: 01                       fallthrough
      :                          @9103
117478: ab ac e6                 jump @9098 if a5 != a3
      :                          @9104
117481: 28 dd 16 01              jump @12856
      :                          @9105 [@dyn 697]
117485: 3a 07 78 12 03           a0 = u64 [0x31278]
117490: 3a 08 60 11 03           a1 = u64 [0x31160]
117495: 7b 18 70                 u64 [sp + 0x70] = a1
117498: 97 78 0d                 a1 = a0 << 0xd
117501: d3 87 07                 a0 = a0 ^ a1
117504: 98 78 07                 a1 = a0 >> 0x7
117507: d3 87 07                 a0 = a0 ^ a1
117510: 97 78 11                 a1 = a0 << 0x11
117513: d3 78 08                 a1 = a1 ^ a0
117516: 97 79 02                 a2 = a0 << 0x2
117519: c8 97 07                 a0 = a0 + a2
117522: 3e 08 78 12 03           u64 [0x31278] = a1
117527: 84 77 07                 a0 = a0 & 0x7
117530: 95 76 03                 s1 = a0 + 0x3
117533: 64 67                    a0 = s1
117535: 50 20 74 05 d1 86 fe     ra = 1396, jump @1554
      :                          @9106 [@dyn 698]
117542: 7b 17 20 01              u64 [sp + 0x120] = a0
117546: 3a 03 70 11 03           t1 = u64 [0x31170]
117551: 7b 18 28 01              u64 [sp + 0x128] = a1
117555: 49 21 30 01              u64 [sp + 304] = 0
117559: 33 02 32                 t0 = 0x32
117562: 7b 13 48                 u64 [sp + 0x48] = t1
117565: 28 49                    jump @9109
      :                          @9107
117567: 82 1a 70                 a3 = u64 [sp + 0x70]
117570: ca ab 07                 a0 = a4 * a3
117573: 98 79 01                 a2 = a0 >> 0x1
117576: d6 39 09                 a2 = a2 mulhu t1
117579: 98 99 04                 a2 = a2 >> 0x4
117582: ca 29 09                 a2 = a2 * t0
117585: c9 97 07                 a0 = a0 - a2
117588: ca ac 09                 a2 = a5 * a3
117591: 98 9a 01                 a3 = a2 >> 0x1
117594: d6 3a 0a                 a3 = a3 mulhu t1
117597: 98 aa 04                 a3 = a3 >> 0x4
117600: 82 1b 28 01              a4 = u64 [sp + 0x128]
117604: ca 2a 0a                 a3 = a3 * t0
117607: c9 a9 09                 a2 = a2 - a3
117610: 97 8a 04                 a3 = a1 << 0x4
117613: c8 ba 0a                 a3 = a3 + a4
117616: 7b a7                    u64 [a3] = a0
117618: 7b a9 08                 u64 [a3 + 0x8] = a2
117621: 95 89 01                 a2 = a1 + 0x1
117624: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
117627: 7b 19 30 01              u64 [sp + 0x130] = a2
117631: 52 06 07                 jump @9109 if s1 != 0
      :                          @9108
117634: 28 02 ff 00              jump @12393
      :                          @9109
117638: 3a 07 78 12 03           a0 = u64 [0x31278]
117643: 97 78 0d                 a1 = a0 << 0xd
117646: d3 87 07                 a0 = a0 ^ a1
117649: 98 78 07                 a1 = a0 >> 0x7
117652: d3 87 07                 a0 = a0 ^ a1
117655: 97 78 11                 a1 = a0 << 0x11
117658: d3 78 0b                 a4 = a1 ^ a0
117661: 3e 0b 78 12 03           u64 [0x31278] = a4
117666: 3a 07 78 12 03           a0 = u64 [0x31278]
117671: 97 78 0d                 a1 = a0 << 0xd
117674: d3 87 07                 a0 = a0 ^ a1
117677: 98 78 07                 a1 = a0 >> 0x7
117680: d3 87 07                 a0 = a0 ^ a1
117683: 97 78 11                 a1 = a0 << 0x11
117686: d3 78 0c                 a5 = a1 ^ a0
117689: 3e 0c 78 12 03           u64 [0x31278] = a5
117694: 82 18 30 01              a1 = u64 [sp + 0x130]
117698: 82 17 20 01              a0 = u64 [sp + 0x120]
117702: ab 78 79 ff              jump @9107 if a1 != a0
      :                          @9110
117706: 95 17 20 01              a0 = sp + 0x120
117710: 7b 1b 60                 u64 [sp + 0x60] = a4
117713: 7b 1c 58                 u64 [sp + 0x58] = a5
117716: 50 20 76 05 2c 88 fe     ra = 1398, jump @1605
      :                          @9111 [@dyn 699]
117723: 82 1c 58                 a5 = u64 [sp + 0x58]
117726: 82 1b 60                 a4 = u64 [sp + 0x60]
117729: 33 02 32                 t0 = 0x32
117732: 82 13 48                 t1 = u64 [sp + 0x48]
117735: 82 18 30 01              a1 = u64 [sp + 0x130]
117739: 28 54 ff                 jump @9107
      :                          @9112 [@dyn 700]
117742: 3a 08 78 12 03           a1 = u64 [0x31278]
117747: 97 89 0d                 a2 = a1 << 0xd
117750: d3 89 09                 a2 = a2 ^ a1
117753: 98 9a 07                 a3 = a2 >> 0x7
117756: 3a 08 60 11 03           a1 = u64 [0x31160]
117761: d3 a9 09                 a2 = a2 ^ a3
117764: 97 9a 11                 a3 = a2 << 0x11
117767: d3 9a 0a                 a3 = a3 ^ a2
117770: ca 8a 0b                 a4 = a3 * a1
117773: 3a 09 70 11 03           a2 = u64 [0x31170]
117778: 3e 0a 78 12 03           u64 [0x31278] = a3
117783: 98 ba 01                 a3 = a4 >> 0x1
117786: d6 9a 0a                 a3 = a3 mulhu a2
117789: 98 ac 04                 a5 = a3 >> 0x4
117792: 3a 06 78 12 03           s1 = u64 [0x31278]
117797: 96 cc 32                 a5 = a5 * 0x32
117800: c9 cb 0b                 a4 = a4 - a5
117803: 97 6c 0d                 a5 = s1 << 0xd
117806: d3 c6 06                 s1 = s1 ^ a5
117809: 98 6c 07                 a5 = s1 >> 0x7
117812: d3 c6 06                 s1 = s1 ^ a5
117815: 97 6c 11                 a5 = s1 << 0x11
117818: d3 6c 0c                 a5 = a5 ^ s1
117821: ca 8c 06                 s1 = a5 * a1
117824: 3e 0c 78 12 03           u64 [0x31278] = a5
117829: 98 6c 01                 a5 = s1 >> 0x1
117832: d6 9c 0c                 a5 = a5 mulhu a2
117835: 98 cc 04                 a5 = a5 >> 0x4
117838: 96 cc 32                 a5 = a5 * 0x32
117841: c9 c6 06                 s1 = s1 - a5
117844: 7b 1b b0 01              u64 [sp + 0x1b0] = a4
117848: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
117852: 3a 0b 78 12 03           a4 = u64 [0x31278]
117857: 97 bc 0d                 a5 = a4 << 0xd
117860: d3 cb 0b                 a4 = a4 ^ a5
117863: 98 bc 07                 a5 = a4 >> 0x7
117866: d3 cb 0b                 a4 = a4 ^ a5
117869: 97 bc 11                 a5 = a4 << 0x11
117872: d3 cb 0b                 a4 = a4 ^ a5
117875: ca 8b 0c                 a5 = a4 * a1
117878: 3e 0b 78 12 03           u64 [0x31278] = a4
117883: 98 cb 01                 a4 = a5 >> 0x1
117886: d6 9b 0b                 a4 = a4 mulhu a2
117889: 98 bb 04                 a4 = a4 >> 0x4
117892: 3a 06 78 12 03           s1 = u64 [0x31278]
117897: 96 bb 32                 a4 = a4 * 0x32
117900: c9 bc 0c                 a5 = a5 - a4
117903: 97 6b 0d                 a4 = s1 << 0xd
117906: d3 b6 06                 s1 = s1 ^ a4
117909: 98 6b 07                 a4 = s1 >> 0x7
117912: d3 b6 06                 s1 = s1 ^ a4
117915: 97 6b 11                 a4 = s1 << 0x11
117918: d3 6b 0b                 a4 = a4 ^ s1
117921: ca 8b 06                 s1 = a4 * a1
117924: 3e 0b 78 12 03           u64 [0x31278] = a4
117929: 98 6b 01                 a4 = s1 >> 0x1
117932: d6 9b 0b                 a4 = a4 mulhu a2
117935: 98 bb 04                 a4 = a4 >> 0x4
117938: 96 bb 32                 a4 = a4 * 0x32
117941: c9 b6 06                 s1 = s1 - a4
117944: 7b 1c c8 01              u64 [sp + 0x1c8] = a5
117948: 7b 16 d0 01              u64 [sp + 0x1d0] = s1
117952: 3a 0b 78 12 03           a4 = u64 [0x31278]
117957: 97 bc 0d                 a5 = a4 << 0xd
117960: d3 cb 0b                 a4 = a4 ^ a5
117963: 98 bc 07                 a5 = a4 >> 0x7
117966: d3 cb 0b                 a4 = a4 ^ a5
117969: 97 bc 11                 a5 = a4 << 0x11
117972: d3 cb 0b                 a4 = a4 ^ a5
117975: ca 8b 0c                 a5 = a4 * a1
117978: 3e 0b 78 12 03           u64 [0x31278] = a4
117983: 98 cb 01                 a4 = a5 >> 0x1
117986: d6 9b 0b                 a4 = a4 mulhu a2
117989: 98 bb 04                 a4 = a4 >> 0x4
117992: 3a 06 78 12 03           s1 = u64 [0x31278]
117997: 96 bb 32                 a4 = a4 * 0x32
118000: c9 bc 0c                 a5 = a5 - a4
118003: 97 6b 0d                 a4 = s1 << 0xd
118006: d3 b6 06                 s1 = s1 ^ a4
118009: 98 6b 07                 a4 = s1 >> 0x7
118012: d3 b6 06                 s1 = s1 ^ a4
118015: 97 6b 11                 a4 = s1 << 0x11
118018: d3 6b 0b                 a4 = a4 ^ s1
118021: ca 8b 06                 s1 = a4 * a1
118024: 3e 0b 78 12 03           u64 [0x31278] = a4
118029: 98 6b 01                 a4 = s1 >> 0x1
118032: d6 9b 0b                 a4 = a4 mulhu a2
118035: 98 bb 04                 a4 = a4 >> 0x4
118038: 96 bb 32                 a4 = a4 * 0x32
118041: c9 b6 06                 s1 = s1 - a4
118044: 7b 1c 20 01              u64 [sp + 0x120] = a5
118048: 7b 16 28 01              u64 [sp + 0x128] = s1
118052: 3a 0b 78 12 03           a4 = u64 [0x31278]
118057: 97 bc 0d                 a5 = a4 << 0xd
118060: d3 cb 0b                 a4 = a4 ^ a5
118063: 98 bc 07                 a5 = a4 >> 0x7
118066: d3 cb 0b                 a4 = a4 ^ a5
118069: 97 bc 11                 a5 = a4 << 0x11
118072: d3 cb 0b                 a4 = a4 ^ a5
118075: ca 8b 0c                 a5 = a4 * a1
118078: 3e 0b 78 12 03           u64 [0x31278] = a4
118083: 98 cb 01                 a4 = a5 >> 0x1
118086: d6 9b 0b                 a4 = a4 mulhu a2
118089: 98 bb 04                 a4 = a4 >> 0x4
118092: 3a 06 78 12 03           s1 = u64 [0x31278]
118097: 96 bb 32                 a4 = a4 * 0x32
118100: c9 bc 04                 t2 = a5 - a4
118103: 97 6b 0d                 a4 = s1 << 0xd
118106: d3 6b 0b                 a4 = a4 ^ s1
118109: 98 bc 07                 a5 = a4 >> 0x7
118112: d3 cb 0b                 a4 = a4 ^ a5
118115: 97 bc 11                 a5 = a4 << 0x11
118118: d3 cb 0b                 a4 = a4 ^ a5
118121: ca 8b 06                 s1 = a4 * a1
118124: 3e 0b 78 12 03           u64 [0x31278] = a4
118129: 98 67 01                 a0 = s1 >> 0x1
118132: d6 97 07                 a0 = a0 mulhu a2
118135: 98 77 04                 a0 = a0 >> 0x4
118138: 96 72 32                 t0 = a0 * 0x32
118141: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
118145: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
118149: 82 19 c8 01              a2 = u64 [sp + 0x1c8]
118153: 82 1a d0 01              a3 = u64 [sp + 0x1d0]
118157: 82 1b 20 01              a4 = u64 [sp + 0x120]
118161: 82 1c 28 01              a5 = u64 [sp + 0x128]
118165: c9 26 06                 s1 = s1 - t0
118168: 7b 14 e0 01              u64 [sp + 0x1e0] = t2
118172: 7b 16 e8 01              u64 [sp + 0x1e8] = s1
118176: 7b 16                    u64 [sp] = s1
118178: 50 20 7a 05 a0 3d ff     ra = 1402, jump @5371
      :                          @9113 [@dyn 701]
118185: 78 17 10 01              u8 [sp + 0x110] = a0
118189: 95 17 b0 01              a0 = sp + 0x1b0
118193: 7b 17 90 02              u64 [sp + 0x290] = a0
118197: 33 07 8e 01              a0 = 0x18e
118201: 7b 17 98 02              u64 [sp + 0x298] = a0
118205: 95 18 c8 01              a1 = sp + 0x1c8
118209: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
118213: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
118217: 95 18 20 01              a1 = sp + 0x120
118221: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
118225: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
118229: 95 18 e0 01              a1 = sp + 0x1e0
118233: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
118237: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
118241: 95 17 10 01              a0 = sp + 0x110
118245: 7b 17 d0 02              u64 [sp + 0x2d0] = a0
118249: 33 07 80 0c              a0 = 0xc80
118253: 7b 17 d8 02              u64 [sp + 0x2d8] = a0
118257: 33 07 58 0b 01           a0 = 0x10b58
118262: 7b 17 38 02              u64 [sp + 0x238] = a0
118266: 49 21 40 02 05           u64 [sp + 576] = 0x5
118271: 49 21 58 02              u64 [sp + 600] = 0
118275: 95 18 90 02              a1 = sp + 0x290
118279: 7b 18 48 02              u64 [sp + 0x248] = a1
118283: 49 21 50 02 05           u64 [sp + 592] = 0x5
118288: 95 17 08 02              a0 = sp + 0x208
118292: 95 18 38 02              a1 = sp + 0x238
118296: 50 20 7c 05 27 81 fe     ra = 1404, jump @1491
      :                          @9114 [@dyn 702]
118303: 82 16 10 02              s1 = u64 [sp + 0x210]
118307: 82 1b 18 02              a4 = u64 [sp + 0x218]
118311: 82 17 08 02              a0 = u64 [sp + 0x208]
118315: 7b 17 70                 u64 [sp + 0x70] = a0
118318: 33 07 02                 a0 = 0x2
118321: 33 08                    a1 = 0
118323: 33 09                    a2 = 0
118325: 64 6a                    a3 = s1
118327: 33 00 7e 05              ra = 0x57e
118331: 0a 64                    ecalli 100 // 'log'
118333: 01                       fallthrough
      :                          @9115 [@dyn 703]
118334: 82 1c 70                 a5 = u64 [sp + 0x70]
118337: 82 17 68                 a0 = u64 [sp + 0x68]
118340: c8 c7 07                 a0 = a0 + a5
118343: 55 37 00 00 ff 0a        jump @9117 if a0 >=u 4294901760
      :                          @9116
118349: 28 79 13 01              jump @12856
      :                          @9117
118353: 33 07 c0 22 03           a0 = 0x322c0
118358: 95 77 00 00 01           a0 = a0 + 0x10000
118363: 01                       fallthrough
      :                          @9118
118364: 82 78                    a1 = u64 [a0]
118366: c9 87 09                 a2 = a0 - a1
118369: aa 69 07                 jump @9120 if a2 == s1
      :                          @9119
118372: 28 62 13 01              jump @12856
      :                          @9120
118376: c9 c8 09                 a2 = a1 - a5
118379: 01                       fallthrough
      :                          @9121
118380: 82 7a                    a3 = u64 [a0]
118382: ab 8a ee                 jump @9118 if a3 != a1
      :                          @9122
118385: 7b 79                    u64 [a0] = a2
118387: 33 0b                    a4 = 0
118389: 01                       fallthrough
      :                          @9123
118390: ab 8a e6                 jump @9118 if a3 != a1
      :                          @9124
118393: 28 4d 13 01              jump @12856
      :                          @9125 [@dyn 704]
118397: 3a 07 60 11 03           a0 = u64 [0x31160]
118402: 7b 17 70                 u64 [sp + 0x70] = a0
118405: 95 17 90 02              a0 = sp + 0x290
118409: 33 00 82 05              ra = 0x582
118413: 95 11 e8                 sp = sp + 0xffffffffffffffe8
118416: 7b 10 10                 u64 [sp + 0x10] = ra
118419: 7b 15 08                 u64 [sp + 0x8] = s0
118422: 7b 16                    u64 [sp] = s1
118424: 64 75                    s0 = a0
118426: 33 09 c0 22 03           a2 = 0x322c0
118431: 33 07 00 00 01           a0 = 0x10000
118436: c8 79 09                 a2 = a2 + a0
118439: 28 c6 97 fe              jump @1929
      :                          @9126 [@dyn 705]
118443: 95 17 e0 01              a0 = sp + 0x1e0
118447: 95 18 90 02              a1 = sp + 0x290
118451: 33 00 84 05              ra = 0x584
118455: 95 11 b8                 sp = sp + 0xffffffffffffffb8
118458: 7b 10 40                 u64 [sp + 0x40] = ra
118461: 7b 15 38                 u64 [sp + 0x38] = s0
118464: 7b 16 30                 u64 [sp + 0x30] = s1
118467: 7b 18 18                 u64 [sp + 0x18] = a1
118470: 7b 17 10                 u64 [sp + 0x10] = a0
118473: 33 07 c0 22 03           a0 = 0x322c0
118478: 33 02 00 00 01           t0 = 0x10000
118483: c8 27 09                 a2 = a0 + t0
118486: 28 fc 90 fe              jump @1819
      :                          @9127 [@dyn 706]
118490: 33 07                    a0 = 0
118492: 33 04 10                 t2 = 0x10
118495: 33 0a 78 12 03           a3 = 0x31278
118500: 14 0b ab aa aa aa aa aa aa aa a4 = 0xaaaaaaaaaaaaaaab
118510: 33 00 0a                 ra = 0xa
118513: 33 03 00 01              t1 = 0x100
118517: 01                       fallthrough
      :                          @9128
118518: 3a 08 78 12 03           a1 = u64 [0x31278]
118523: 97 89 0d                 a2 = a1 << 0xd
118526: d3 98 08                 a1 = a1 ^ a2
118529: 98 89 07                 a2 = a1 >> 0x7
118532: d3 98 08                 a1 = a1 ^ a2
118535: 97 89 11                 a2 = a1 << 0x11
118538: d3 89 02                 t0 = a2 ^ a1
118541: 3e 02 78 12 03           u64 [0x31278] = t0
118546: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
118550: ac 87 07                 jump @9130 if a0 <u a1
      :                          @9129
118553: 28 b6 24 01              jump @13217
      :                          @9130
118557: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
118561: c8 48 08                 a1 = a1 + t2
118564: 82 89                    a2 = u64 [a1]
118566: 52 09 07                 jump @9132 if a2 != 0
      :                          @9131
118569: 28 ad 24 01              jump @13224
      :                          @9132
118573: 82 19 70                 a2 = u64 [sp + 0x70]
118576: ca 92 09                 a2 = t0 * a2
118579: d6 b9 0c                 a5 = a2 mulhu a4
118582: 98 c6 01                 s1 = a5 >> 0x1
118585: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
118588: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
118591: c8 6c 0c                 a5 = a5 + s1
118594: c9 c9 09                 a2 = a2 - a5
118597: 78 89                    u8 [a1] = a2
118599: 3a 08 78 12 03           a1 = u64 [0x31278]
118604: 97 89 0d                 a2 = a1 << 0xd
118607: d3 98 08                 a1 = a1 ^ a2
118610: 98 89 07                 a2 = a1 >> 0x7
118613: d3 98 08                 a1 = a1 ^ a2
118616: 97 8c 11                 a5 = a1 << 0x11
118619: d3 8c 0c                 a5 = a5 ^ a1
118622: 3e 0c 78 12 03           u64 [0x31278] = a5
118627: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
118631: ac 87 07                 jump @9134 if a0 <u a1
      :                          @9133
118634: 28 65 24 01              jump @13217
      :                          @9134
118638: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
118642: c8 49 09                 a2 = a2 + t2
118645: 82 98                    a1 = u64 [a2]
118647: 55 18 02 08              jump @9136 if a1 >=u 2
      :                          @9135
118651: 28 8b 23 01              jump @13197
      :                          @9136
118655: 82 18 70                 a1 = u64 [sp + 0x70]
118658: ca 8c 08                 a1 = a5 * a1
118661: d6 b8 0c                 a5 = a1 mulhu a4
118664: 98 c6 01                 s1 = a5 >> 0x1
118667: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
118670: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
118673: c8 6c 0c                 a5 = a5 + s1
118676: c9 c8 08                 a1 = a1 - a5
118679: 78 98 01                 u8 [a2 + 0x1] = a1
118682: 3a 08 78 12 03           a1 = u64 [0x31278]
118687: 97 89 0d                 a2 = a1 << 0xd
118690: d3 98 08                 a1 = a1 ^ a2
118693: 98 89 07                 a2 = a1 >> 0x7
118696: d3 98 08                 a1 = a1 ^ a2
118699: 97 8c 11                 a5 = a1 << 0x11
118702: d3 8c 0c                 a5 = a5 ^ a1
118705: 3e 0c 78 12 03           u64 [0x31278] = a5
118710: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
118714: ac 87 07                 jump @9138 if a0 <u a1
      :                          @9137
118717: 28 12 24 01              jump @13217
      :                          @9138
118721: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
118725: c8 49 09                 a2 = a2 + t2
118728: 82 98                    a1 = u64 [a2]
118730: 55 18 03 08              jump @9140 if a1 >=u 3
      :                          @9139
118734: 28 3a 23 01              jump @13199
      :                          @9140
118738: 82 18 70                 a1 = u64 [sp + 0x70]
118741: ca 8c 08                 a1 = a5 * a1
118744: d6 b8 0c                 a5 = a1 mulhu a4
118747: 98 c6 01                 s1 = a5 >> 0x1
118750: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
118753: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
118756: c8 6c 0c                 a5 = a5 + s1
118759: c9 c8 08                 a1 = a1 - a5
118762: 78 98 02                 u8 [a2 + 0x2] = a1
118765: 3a 08 78 12 03           a1 = u64 [0x31278]
118770: 97 89 0d                 a2 = a1 << 0xd
118773: d3 98 08                 a1 = a1 ^ a2
118776: 98 89 07                 a2 = a1 >> 0x7
118779: d3 98 08                 a1 = a1 ^ a2
118782: 97 8c 11                 a5 = a1 << 0x11
118785: d3 8c 0c                 a5 = a5 ^ a1
118788: 3e 0c 78 12 03           u64 [0x31278] = a5
118793: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
118797: ac 87 07                 jump @9142 if a0 <u a1
      :                          @9141
118800: 28 bf 23 01              jump @13217
      :                          @9142
118804: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
118808: c8 49 09                 a2 = a2 + t2
118811: 82 98                    a1 = u64 [a2]
118813: 55 18 04 08              jump @9144 if a1 >=u 4
      :                          @9143
118817: 28 e6 22 01              jump @13198
      :                          @9144
118821: 82 18 70                 a1 = u64 [sp + 0x70]
118824: ca 8c 08                 a1 = a5 * a1
118827: d6 b8 0c                 a5 = a1 mulhu a4
118830: 98 c6 01                 s1 = a5 >> 0x1
118833: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
118836: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
118839: c8 6c 0c                 a5 = a5 + s1
118842: c9 c8 08                 a1 = a1 - a5
118845: 78 98 03                 u8 [a2 + 0x3] = a1
118848: 3a 08 78 12 03           a1 = u64 [0x31278]
118853: 97 89 0d                 a2 = a1 << 0xd
118856: d3 98 08                 a1 = a1 ^ a2
118859: 98 89 07                 a2 = a1 >> 0x7
118862: d3 98 08                 a1 = a1 ^ a2
118865: 97 8c 11                 a5 = a1 << 0x11
118868: d3 8c 0c                 a5 = a5 ^ a1
118871: 3e 0c 78 12 03           u64 [0x31278] = a5
118876: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
118880: ac 87 07                 jump @9146 if a0 <u a1
      :                          @9145
118883: 28 6c 23 01              jump @13217
      :                          @9146
118887: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
118891: c8 49 09                 a2 = a2 + t2
118894: 82 98                    a1 = u64 [a2]
118896: 55 18 05 08              jump @9148 if a1 >=u 5
      :                          @9147
118900: 28 5d 23 01              jump @13219
      :                          @9148
118904: 82 18 70                 a1 = u64 [sp + 0x70]
118907: ca 8c 08                 a1 = a5 * a1
118910: d6 b8 0c                 a5 = a1 mulhu a4
118913: 98 c6 01                 s1 = a5 >> 0x1
118916: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
118919: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
118922: c8 6c 0c                 a5 = a5 + s1
118925: c9 c8 08                 a1 = a1 - a5
118928: 78 98 04                 u8 [a2 + 0x4] = a1
118931: 3a 08 78 12 03           a1 = u64 [0x31278]
118936: 97 89 0d                 a2 = a1 << 0xd
118939: d3 98 08                 a1 = a1 ^ a2
118942: 98 89 07                 a2 = a1 >> 0x7
118945: d3 98 08                 a1 = a1 ^ a2
118948: 97 8c 11                 a5 = a1 << 0x11
118951: d3 8c 0c                 a5 = a5 ^ a1
118954: 3e 0c 78 12 03           u64 [0x31278] = a5
118959: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
118963: ac 87 07                 jump @9150 if a0 <u a1
      :                          @9149
118966: 28 19 23 01              jump @13217
      :                          @9150
118970: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
118974: c8 49 09                 a2 = a2 + t2
118977: 82 98                    a1 = u64 [a2]
118979: 55 18 06 08              jump @9152 if a1 >=u 6
      :                          @9151
118983: 28 0e 23 01              jump @13223
      :                          @9152
118987: 82 18 70                 a1 = u64 [sp + 0x70]
118990: ca 8c 08                 a1 = a5 * a1
118993: d6 b8 0c                 a5 = a1 mulhu a4
118996: 98 c6 01                 s1 = a5 >> 0x1
118999: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119002: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119005: c8 6c 0c                 a5 = a5 + s1
119008: c9 c8 08                 a1 = a1 - a5
119011: 78 98 05                 u8 [a2 + 0x5] = a1
119014: 3a 08 78 12 03           a1 = u64 [0x31278]
119019: 97 89 0d                 a2 = a1 << 0xd
119022: d3 98 08                 a1 = a1 ^ a2
119025: 98 89 07                 a2 = a1 >> 0x7
119028: d3 98 08                 a1 = a1 ^ a2
119031: 97 8c 11                 a5 = a1 << 0x11
119034: d3 8c 0c                 a5 = a5 ^ a1
119037: 3e 0c 78 12 03           u64 [0x31278] = a5
119042: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
119046: ac 87 07                 jump @9154 if a0 <u a1
      :                          @9153
119049: 28 c6 22 01              jump @13217
      :                          @9154
119053: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
119057: c8 49 09                 a2 = a2 + t2
119060: 82 98                    a1 = u64 [a2]
119062: 55 18 07 08              jump @9156 if a1 >=u 7
      :                          @9155
119066: 28 c1 22 01              jump @13229
      :                          @9156
119070: 82 18 70                 a1 = u64 [sp + 0x70]
119073: ca 8c 08                 a1 = a5 * a1
119076: d6 b8 0c                 a5 = a1 mulhu a4
119079: 98 c6 01                 s1 = a5 >> 0x1
119082: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119085: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119088: c8 6c 0c                 a5 = a5 + s1
119091: c9 c8 08                 a1 = a1 - a5
119094: 78 98 06                 u8 [a2 + 0x6] = a1
119097: 3a 08 78 12 03           a1 = u64 [0x31278]
119102: 97 89 0d                 a2 = a1 << 0xd
119105: d3 98 08                 a1 = a1 ^ a2
119108: 98 89 07                 a2 = a1 >> 0x7
119111: d3 98 08                 a1 = a1 ^ a2
119114: 97 8c 11                 a5 = a1 << 0x11
119117: d3 8c 0c                 a5 = a5 ^ a1
119120: 3e 0c 78 12 03           u64 [0x31278] = a5
119125: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
119129: ac 87 07                 jump @9158 if a0 <u a1
      :                          @9157
119132: 28 73 22 01              jump @13217
      :                          @9158
119136: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
119140: c8 49 09                 a2 = a2 + t2
119143: 82 98                    a1 = u64 [a2]
119145: 55 18 08 08              jump @9160 if a1 >=u 8
      :                          @9159
119149: 28 6f 22 01              jump @13230
      :                          @9160
119153: 82 18 70                 a1 = u64 [sp + 0x70]
119156: ca 8c 08                 a1 = a5 * a1
119159: d6 b8 0c                 a5 = a1 mulhu a4
119162: 98 c6 01                 s1 = a5 >> 0x1
119165: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119168: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119171: c8 6c 0c                 a5 = a5 + s1
119174: c9 c8 08                 a1 = a1 - a5
119177: 78 98 07                 u8 [a2 + 0x7] = a1
119180: 3a 08 78 12 03           a1 = u64 [0x31278]
119185: 97 89 0d                 a2 = a1 << 0xd
119188: d3 98 08                 a1 = a1 ^ a2
119191: 98 89 07                 a2 = a1 >> 0x7
119194: d3 98 08                 a1 = a1 ^ a2
119197: 97 8c 11                 a5 = a1 << 0x11
119200: d3 8c 0c                 a5 = a5 ^ a1
119203: 3e 0c 78 12 03           u64 [0x31278] = a5
119208: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
119212: ac 87 07                 jump @9162 if a0 <u a1
      :                          @9161
119215: 28 20 22 01              jump @13217
      :                          @9162
119219: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
119223: c8 49 09                 a2 = a2 + t2
119226: 82 98                    a1 = u64 [a2]
119228: 55 18 09 08              jump @9164 if a1 >=u 9
      :                          @9163
119232: 28 1d 22 01              jump @13231
      :                          @9164
119236: 82 18 70                 a1 = u64 [sp + 0x70]
119239: ca 8c 08                 a1 = a5 * a1
119242: d6 b8 0c                 a5 = a1 mulhu a4
119245: 98 c6 01                 s1 = a5 >> 0x1
119248: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119251: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119254: c8 6c 0c                 a5 = a5 + s1
119257: c9 c8 08                 a1 = a1 - a5
119260: 78 98 08                 u8 [a2 + 0x8] = a1
119263: 3a 08 78 12 03           a1 = u64 [0x31278]
119268: 97 89 0d                 a2 = a1 << 0xd
119271: d3 98 08                 a1 = a1 ^ a2
119274: 98 89 07                 a2 = a1 >> 0x7
119277: d3 98 08                 a1 = a1 ^ a2
119280: 97 8c 11                 a5 = a1 << 0x11
119283: d3 8c 0c                 a5 = a5 ^ a1
119286: 3e 0c 78 12 03           u64 [0x31278] = a5
119291: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
119295: ac 87 07                 jump @9166 if a0 <u a1
      :                          @9165
119298: 28 cd 21 01              jump @13217
      :                          @9166
119302: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
119306: c8 49 09                 a2 = a2 + t2
119309: 82 98                    a1 = u64 [a2]
119311: ae 08 07                 jump @9168 if a1 >=u ra
      :                          @9167
119314: 28 cc 21 01              jump @13232
      :                          @9168
119318: 82 18 70                 a1 = u64 [sp + 0x70]
119321: ca 8c 08                 a1 = a5 * a1
119324: d6 b8 0c                 a5 = a1 mulhu a4
119327: 98 c6 01                 s1 = a5 >> 0x1
119330: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119333: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119336: c8 6c 0c                 a5 = a5 + s1
119339: c9 c8 08                 a1 = a1 - a5
119342: 78 98 09                 u8 [a2 + 0x9] = a1
119345: 95 44 18                 t2 = t2 + 0x18
119348: 95 77 01                 a0 = a0 + 0x1
119351: ab 34 bf fc              jump @9128 if t2 != t1
      :                          @9169
119355: 3a 08 78 12 03           a1 = u64 [0x31278]
119360: 97 89 0d                 a2 = a1 << 0xd
119363: d3 98 08                 a1 = a1 ^ a2
119366: 98 89 07                 a2 = a1 >> 0x7
119369: d3 98 08                 a1 = a1 ^ a2
119372: 97 89 11                 a2 = a1 << 0x11
119375: d3 98 08                 a1 = a1 ^ a2
119378: 82 1c 70                 a5 = u64 [sp + 0x70]
119381: ca c8 09                 a2 = a1 * a5
119384: 3e 08 78 12 03           u64 [0x31278] = a1
119389: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
119399: d6 89 0a                 a3 = a2 mulhu a1
119402: 98 aa 03                 a3 = a3 >> 0x3
119405: 96 aa 0a                 a3 = a3 * 0xa
119408: c9 a9 09                 a2 = a2 - a3
119411: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
119415: 3a 09 78 12 03           a2 = u64 [0x31278]
119420: 97 9a 0d                 a3 = a2 << 0xd
119423: d3 a9 09                 a2 = a2 ^ a3
119426: 98 9a 07                 a3 = a2 >> 0x7
119429: d3 a9 09                 a2 = a2 ^ a3
119432: 97 9a 11                 a3 = a2 << 0x11
119435: d3 a9 09                 a2 = a2 ^ a3
119438: ca c9 0a                 a3 = a2 * a5
119441: 3e 09 78 12 03           u64 [0x31278] = a2
119446: d6 8a 08                 a1 = a3 mulhu a1
119449: 98 88 03                 a1 = a1 >> 0x3
119452: 96 88 0a                 a1 = a1 * 0xa
119455: c9 8a 0a                 a3 = a3 - a1
119458: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
119462: 3a 08 78 12 03           a1 = u64 [0x31278]
119467: 97 89 0d                 a2 = a1 << 0xd
119470: d3 98 08                 a1 = a1 ^ a2
119473: 98 89 07                 a2 = a1 >> 0x7
119476: d3 98 08                 a1 = a1 ^ a2
119479: 97 89 11                 a2 = a1 << 0x11
119482: d3 98 08                 a1 = a1 ^ a2
119485: ca c8 0b                 a4 = a1 * a5
119488: 3e 08 78 12 03           u64 [0x31278] = a1
119493: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
119503: d6 7b 07                 a0 = a4 mulhu a0
119506: 98 7c 01                 a5 = a0 >> 0x1
119509: 84 77 fe                 a0 = a0 & 0xfffffffffffffffe
119512: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
119516: 82 1a c8 01              a3 = u64 [sp + 0x1c8]
119520: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
119524: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
119528: 7b 18 60                 u64 [sp + 0x60] = a1
119531: c8 c7 07                 a0 = a0 + a5
119534: c9 7b 0b                 a4 = a4 - a0
119537: 95 bb 03                 a4 = a4 + 0x3
119540: 7b 1b 70                 u64 [sp + 0x70] = a4
119543: 64 67                    a0 = s1
119545: 50 20 86 05 e4 39 ff     ra = 1414, jump @5387
      :                          @9170 [@dyn 707]
119552: 82 18 60                 a1 = u64 [sp + 0x60]
119555: 96 87 18                 a0 = a1 * 0x18
119558: c8 67 07                 a0 = a0 + s1
119561: 7b 16 80 00              u64 [sp + 0x80] = s1
119565: 7b 17 88 00              u64 [sp + 0x88] = a0
119569: 49 21 90 00              u64 [sp + 144] = 0
119573: 49 21 a0 00              u64 [sp + 160] = 0
119577: 95 17 80 00              a0 = sp + 0x80
119581: 82 18 70                 a1 = u64 [sp + 0x70]
119584: 50 20 88 05 94 2d fe     ra = 1416, jump @23
      :                          @9171 [@dyn 708]
119591: 7b 17 20 01              u64 [sp + 0x120] = a0
119595: 95 17 20 01              a0 = sp + 0x120
119599: 7b 17 90 02              u64 [sp + 0x290] = a0
119603: 33 07 28 0c              a0 = 0xc28
119607: 7b 17 98 02              u64 [sp + 0x298] = a0
119611: 95 18 b0 01              a1 = sp + 0x1b0
119615: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
119619: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
119623: 95 18 c8 01              a1 = sp + 0x1c8
119627: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
119631: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
119635: 33 07 c0 0b 01           a0 = 0x10bc0
119640: 7b 17 38 02              u64 [sp + 0x238] = a0
119644: 49 21 40 02 04           u64 [sp + 576] = 0x4
119649: 49 21 58 02              u64 [sp + 600] = 0
119653: 95 17 90 02              a0 = sp + 0x290
119657: 7b 17 48 02              u64 [sp + 0x248] = a0
119661: 49 21 50 02 03           u64 [sp + 592] = 0x3
119666: 95 17 08 02              a0 = sp + 0x208
119670: 95 18 38 02              a1 = sp + 0x238
119674: 50 20 8a 05 c5 7b fe     ra = 1418, jump @1491
      :                          @9172 [@dyn 709]
119681: 82 16 10 02              s1 = u64 [sp + 0x210]
119685: 82 1b 18 02              a4 = u64 [sp + 0x218]
119689: 82 17 08 02              a0 = u64 [sp + 0x208]
119693: 7b 17 70                 u64 [sp + 0x70] = a0
119696: 33 07 02                 a0 = 0x2
119699: 33 08                    a1 = 0
119701: 33 09                    a2 = 0
119703: 64 6a                    a3 = s1
119705: 33 00 8c 05              ra = 0x58c
119709: 0a 64                    ecalli 100 // 'log'
119711: 01                       fallthrough
      :                          @9173 [@dyn 710]
119712: 82 1c 70                 a5 = u64 [sp + 0x70]
119715: 82 17 68                 a0 = u64 [sp + 0x68]
119718: c8 c7 07                 a0 = a0 + a5
119721: 33 08 00 00 ff           a1 = 0xffffffffffff0000
119726: ae 87 06                 jump @9175 if a0 >=u a1
      :                          @9174
119729: 28 42 59                 jump @10533
      :                          @9175
119732: 33 07 c0 22 03           a0 = 0x322c0
119737: 95 77 00 00 01           a0 = a0 + 0x10000
119742: 01                       fallthrough
      :                          @9176
119743: 82 78                    a1 = u64 [a0]
119745: c9 87 09                 a2 = a0 - a1
119748: aa 69 06                 jump @9178 if a2 == s1
      :                          @9177
119751: 28 2c 59                 jump @10533
      :                          @9178
119754: c9 c8 09                 a2 = a1 - a5
119757: 01                       fallthrough
      :                          @9179
119758: 82 7a                    a3 = u64 [a0]
119760: ab 8a ef                 jump @9176 if a3 != a1
      :                          @9180
119763: 7b 79                    u64 [a0] = a2
119765: 33 0b                    a4 = 0
119767: 01                       fallthrough
      :                          @9181
119768: ab 8a e7                 jump @9176 if a3 != a1
      :                          @9182
119771: 28 18 59                 jump @10533
      :                          @9183 [@dyn 711]
119774: 3a 08 78 12 03           a1 = u64 [0x31278]
119779: 97 89 0d                 a2 = a1 << 0xd
119782: d3 89 09                 a2 = a2 ^ a1
119785: 98 9a 07                 a3 = a2 >> 0x7
119788: 3a 08 60 11 03           a1 = u64 [0x31160]
119793: d3 a9 09                 a2 = a2 ^ a3
119796: 97 9a 11                 a3 = a2 << 0x11
119799: d3 a9 09                 a2 = a2 ^ a3
119802: ca 89 0a                 a3 = a2 * a1
119805: 3e 09 78 12 03           u64 [0x31278] = a2
119810: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
119820: d6 9a 0b                 a4 = a3 mulhu a2
119823: 98 bb 03                 a4 = a4 >> 0x3
119826: 3a 06 78 12 03           s1 = u64 [0x31278]
119831: 96 bb 0a                 a4 = a4 * 0xa
119834: c9 ba 0a                 a3 = a3 - a4
119837: 7b 1a 70                 u64 [sp + 0x70] = a3
119840: 97 6a 0d                 a3 = s1 << 0xd
119843: d3 6a 0a                 a3 = a3 ^ s1
119846: 98 ab 07                 a4 = a3 >> 0x7
119849: d3 ba 0a                 a3 = a3 ^ a4
119852: 97 ab 11                 a4 = a3 << 0x11
119855: d3 ba 0a                 a3 = a3 ^ a4
119858: ca 8a 0b                 a4 = a3 * a1
119861: 3e 0a 78 12 03           u64 [0x31278] = a3
119866: d6 9b 0a                 a3 = a4 mulhu a2
119869: 98 aa 03                 a3 = a3 >> 0x3
119872: 3a 0c 78 12 03           a5 = u64 [0x31278]
119877: 96 aa 0a                 a3 = a3 * 0xa
119880: c9 ab 0b                 a4 = a4 - a3
119883: 7b 1b 60                 u64 [sp + 0x60] = a4
119886: 97 ca 0d                 a3 = a5 << 0xd
119889: d3 ca 0a                 a3 = a3 ^ a5
119892: 98 ab 07                 a4 = a3 >> 0x7
119895: d3 ba 0a                 a3 = a3 ^ a4
119898: 97 ab 11                 a4 = a3 << 0x11
119901: d3 ba 0a                 a3 = a3 ^ a4
119904: ca 8a 0b                 a4 = a3 * a1
119907: 3e 0a 78 12 03           u64 [0x31278] = a3
119912: d6 9b 0a                 a3 = a4 mulhu a2
119915: 98 ac 02                 a5 = a3 >> 0x2
119918: 84 aa fc                 a3 = a3 & 0xfffffffffffffffc
119921: 3a 07 78 12 03           a0 = u64 [0x31278]
119926: c8 ca 0a                 a3 = a3 + a5
119929: c9 ab 0b                 a4 = a4 - a3
119932: 7b 1b 58                 u64 [sp + 0x58] = a4
119935: 97 7a 0d                 a3 = a0 << 0xd
119938: d3 a7 07                 a0 = a0 ^ a3
119941: 98 7a 07                 a3 = a0 >> 0x7
119944: d3 a7 07                 a0 = a0 ^ a3
119947: 97 7a 11                 a3 = a0 << 0x11
119950: d3 a7 07                 a0 = a0 ^ a3
119953: ca 87 08                 a1 = a0 * a1
119956: 3e 07 78 12 03           u64 [0x31278] = a0
119961: d6 98 07                 a0 = a1 mulhu a2
119964: 98 79 02                 a2 = a0 >> 0x2
119967: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
119970: c8 97 07                 a0 = a0 + a2
119973: c9 78 06                 s1 = a1 - a0
119976: 33 07 40                 a0 = 0x40
119979: 50 20 90 05 4b 7b fe     ra = 1424, jump @1509
      :                          @9184 [@dyn 712]
119986: 64 78                    a1 = a0
119988: 82 19 70                 a2 = u64 [sp + 0x70]
119991: 82 17 58                 a0 = u64 [sp + 0x58]
119994: c8 97 07                 a0 = a0 + a2
119997: 95 77 01                 a0 = a0 + 0x1
120000: 82 1a 60                 a3 = u64 [sp + 0x60]
120003: c8 a6 06                 s1 = s1 + a3
120006: 95 66 01                 s1 = s1 + 0x1
120009: 7b 89                    u64 [a1] = a2
120011: 7b 8a 08                 u64 [a1 + 0x8] = a3
120014: 7b 87 10                 u64 [a1 + 0x10] = a0
120017: 7b 8a 18                 u64 [a1 + 0x18] = a3
120020: 7b 87 20                 u64 [a1 + 0x20] = a0
120023: 7b 86 28                 u64 [a1 + 0x28] = s1
120026: 7b 89 30                 u64 [a1 + 0x30] = a2
120029: 7b 86 38                 u64 [a1 + 0x38] = s1
120032: 49 21 20 01 04           u64 [sp + 288] = 0x4
120037: 7b 18 28 01              u64 [sp + 0x128] = a1
120041: 49 21 30 01 04           u64 [sp + 304] = 0x4
120046: 95 17 e0 01              a0 = sp + 0x1e0
120050: 33 00 92 05              ra = 0x592
120054: 95 11 48 ff              sp = sp + 0xffffffffffffff48
120058: 7b 10 b0 00              u64 [sp + 0xb0] = ra
120062: 7b 15 a8 00              u64 [sp + 0xa8] = s0
120066: 7b 16 a0 00              u64 [sp + 0xa0] = s1
120070: 7b 18 38                 u64 [sp + 0x38] = a1
120073: 33 09 c0 22 03           a2 = 0x322c0
120078: 33 08 00 00 01           a1 = 0x10000
120083: c8 89 09                 a2 = a2 + a1
120086: 28 b0 39 ff              jump @5432
      :                          @9185 [@dyn 713]
120090: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
120094: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
120098: 33 09 18                 a2 = 0x18
120101: ca 97 07                 a0 = a0 * a2
120104: c8 87 07                 a0 = a0 + a1
120107: 7b 18 b0 00              u64 [sp + 0xb0] = a1
120111: 7b 17 b8 00              u64 [sp + 0xb8] = a0
120115: 49 21 c0 00              u64 [sp + 192] = 0
120119: 49 21 d0 00              u64 [sp + 208] = 0
120123: 95 17 b0 00              a0 = sp + 0xb0
120127: 50 20 94 05 cf 2a fe     ra = 1428, jump @3
      :                          @9186 [@dyn 714]
120134: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
120138: 95 17 20 01              a0 = sp + 0x120
120142: 7b 17 38 02              u64 [sp + 0x238] = a0
120146: 33 07 08 02              a0 = 0x208
120150: 7b 17 40 02              u64 [sp + 0x240] = a0
120154: 95 17 c8 01              a0 = sp + 0x1c8
120158: 7b 17 48 02              u64 [sp + 0x248] = a0
120162: 33 07 28 0c              a0 = 0xc28
120166: 7b 17 50 02              u64 [sp + 0x250] = a0
120170: 33 07 20 0c 01           a0 = 0x10c20
120175: 7b 17 90 02              u64 [sp + 0x290] = a0
120179: 49 21 98 02 03           u64 [sp + 664] = 0x3
120184: 49 21 b0 02              u64 [sp + 688] = 0
120188: 95 17 38 02              a0 = sp + 0x238
120192: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
120196: 49 21 a8 02 02           u64 [sp + 680] = 0x2
120201: 95 17 08 02              a0 = sp + 0x208
120205: 95 18 90 02              a1 = sp + 0x290
120209: 50 20 96 05 ae 79 fe     ra = 1430, jump @1491
      :                          @9187 [@dyn 715]
120216: 82 16 10 02              s1 = u64 [sp + 0x210]
120220: 82 1b 18 02              a4 = u64 [sp + 0x218]
120224: 82 17 08 02              a0 = u64 [sp + 0x208]
120228: 7b 17 70                 u64 [sp + 0x70] = a0
120231: 33 07 02                 a0 = 0x2
120234: 33 08                    a1 = 0
120236: 33 09                    a2 = 0
120238: 64 6a                    a3 = s1
120240: 33 00 98 05              ra = 0x598
120244: 0a 64                    ecalli 100 // 'log'
120246: 01                       fallthrough
      :                          @9188 [@dyn 716]
120247: 82 1c 70                 a5 = u64 [sp + 0x70]
120250: 82 17 68                 a0 = u64 [sp + 0x68]
120253: c8 c7 07                 a0 = a0 + a5
120256: 33 08 00 00 ff           a1 = 0xffffffffffff0000
120261: ac 87 2f                 jump @9194 if a0 <u a1
      :                          @9189
120264: 33 07 c0 22 03           a0 = 0x322c0
120269: 95 77 00 00 01           a0 = a0 + 0x10000
120274: 01                       fallthrough
      :                          @9190
120275: 82 78                    a1 = u64 [a0]
120277: c9 87 09                 a2 = a0 - a1
120280: ab 69 1c                 jump @9194 if a2 != s1
      :                          @9191
120283: c9 c8 09                 a2 = a1 - a5
120286: 01                       fallthrough
      :                          @9192
120287: 82 7a                    a3 = u64 [a0]
120289: ab 8a f2                 jump @9190 if a3 != a1
      :                          @9193
120292: 7b 79                    u64 [a0] = a2
120294: 33 0b                    a4 = 0
120296: 95 17 e0 01              a0 = sp + 0x1e0
120300: 33 00 9a 05              ra = 0x59a
120304: 28 cb 35 fe              jump @209
      :                          @9194
120308: 95 17 e0 01              a0 = sp + 0x1e0
120312: 50 20 9a 05 c3 35 fe     ra = 1434, jump @209
      :                          @9195 [@dyn 717]
120319: 82 18 20 01              a1 = u64 [sp + 0x120]
120323: 52 08 07                 jump @9197 if a1 != 0
      :                          @9196
120326: 28 c0 0b 01              jump @12856
      :                          @9197
120330: 54 28 00 10 09           jump @9199 if a1 <=u 4096
      :                          @9198
120335: 28 b7 0b 01              jump @12856
      :                          @9199
120339: 82 17 28 01              a0 = u64 [sp + 0x128]
120343: 97 88 04                 a1 = a1 << 0x4
120346: 33 09 c0 22 03           a2 = 0x322c0
120351: 95 99 00 00 01           a2 = a2 + 0x10000
120356: 01                       fallthrough
      :                          @9200
120357: 82 9a                    a3 = u64 [a2]
120359: c9 a9 0b                 a4 = a2 - a3
120362: aa 7b 07                 jump @9202 if a4 == a0
      :                          @9201
120365: 28 99 0b 01              jump @12856
      :                          @9202
120369: c9 8a 0b                 a4 = a3 - a1
120372: 01                       fallthrough
      :                          @9203
120373: 82 9c                    a5 = u64 [a2]
120375: ab ac ee                 jump @9200 if a5 != a3
      :                          @9204
120378: 7b 9b                    u64 [a2] = a4
120380: 33 06                    s1 = 0
120382: 01                       fallthrough
      :                          @9205
120383: ab ac e6                 jump @9200 if a5 != a3
      :                          @9206
120386: 28 84 0b 01              jump @12856
      :                          @9207 [@dyn 718]
120390: 3a 08 78 12 03           a1 = u64 [0x31278]
120395: 97 89 0d                 a2 = a1 << 0xd
120398: d3 89 09                 a2 = a2 ^ a1
120401: 98 9a 07                 a3 = a2 >> 0x7
120404: 3a 03 60 11 03           t1 = u64 [0x31160]
120409: d3 a9 09                 a2 = a2 ^ a3
120412: 97 9a 11                 a3 = a2 << 0x11
120415: d3 a9 09                 a2 = a2 ^ a3
120418: ca 39 0b                 a4 = a2 * t1
120421: 3e 09 78 12 03           u64 [0x31278] = a2
120426: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
120436: d6 7b 0a                 a3 = a4 mulhu a0
120439: 98 ac 04                 a5 = a3 >> 0x4
120442: 3a 06 78 12 03           s1 = u64 [0x31278]
120447: 96 cc 14                 a5 = a5 * 0x14
120450: c9 cb 08                 a1 = a4 - a5
120453: 7b 18 70                 u64 [sp + 0x70] = a1
120456: 97 6b 0d                 a4 = s1 << 0xd
120459: d3 6b 0b                 a4 = a4 ^ s1
120462: 98 bc 07                 a5 = a4 >> 0x7
120465: d3 cb 0b                 a4 = a4 ^ a5
120468: 97 bc 11                 a5 = a4 << 0x11
120471: d3 cb 0b                 a4 = a4 ^ a5
120474: ca 3b 0c                 a5 = a4 * t1
120477: 3e 0b 78 12 03           u64 [0x31278] = a4
120482: d6 7c 0b                 a4 = a5 mulhu a0
120485: 98 bb 04                 a4 = a4 >> 0x4
120488: 3a 06 78 12 03           s1 = u64 [0x31278]
120493: 96 bb 14                 a4 = a4 * 0x14
120496: c9 bc 09                 a2 = a5 - a4
120499: 7b 19 60                 u64 [sp + 0x60] = a2
120502: 97 6b 0d                 a4 = s1 << 0xd
120505: d3 6b 0b                 a4 = a4 ^ s1
120508: 98 bc 07                 a5 = a4 >> 0x7
120511: d3 cb 0b                 a4 = a4 ^ a5
120514: 97 bc 11                 a5 = a4 << 0x11
120517: d3 cb 0b                 a4 = a4 ^ a5
120520: ca 3b 0c                 a5 = a4 * t1
120523: 3e 0b 78 12 03           u64 [0x31278] = a4
120528: d6 7c 0b                 a4 = a5 mulhu a0
120531: 98 bb 04                 a4 = a4 >> 0x4
120534: 3a 06 78 12 03           s1 = u64 [0x31278]
120539: 96 bb 14                 a4 = a4 * 0x14
120542: c9 bc 0a                 a3 = a5 - a4
120545: 7b 1a 58                 u64 [sp + 0x58] = a3
120548: 97 6b 0d                 a4 = s1 << 0xd
120551: d3 6b 0b                 a4 = a4 ^ s1
120554: 98 bc 07                 a5 = a4 >> 0x7
120557: d3 cb 0b                 a4 = a4 ^ a5
120560: 97 bc 11                 a5 = a4 << 0x11
120563: d3 cb 0b                 a4 = a4 ^ a5
120566: ca 3b 06                 s1 = a4 * t1
120569: 3e 0b 78 12 03           u64 [0x31278] = a4
120574: d6 76 07                 a0 = s1 mulhu a0
120577: 98 77 04                 a0 = a0 >> 0x4
120580: 96 77 14                 a0 = a0 * 0x14
120583: c9 76 06                 s1 = s1 - a0
120586: 49 21 e8 01              u64 [sp + 488] = 0
120590: 49 21 e0 01              u64 [sp + 480] = 0
120594: 49 21 f0 01 0f           u64 [sp + 496] = 0xf
120599: 49 21 f8 01 0f           u64 [sp + 504] = 0xf
120604: 95 17 08 02              a0 = sp + 0x208
120608: 64 6b                    a4 = s1
120610: 50 20 9e 05 9c 3b ff     ra = 1438, jump @5500
      :                          @9208 [@dyn 719]
120617: 82 17 70                 a0 = u64 [sp + 0x70]
120620: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
120624: 82 17 60                 a0 = u64 [sp + 0x60]
120627: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
120631: 82 17 58                 a0 = u64 [sp + 0x58]
120634: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
120638: 7b 16 d0 01              u64 [sp + 0x1d0] = s1
120642: 95 17 b0 01              a0 = sp + 0x1b0
120646: 7b 17 90 02              u64 [sp + 0x290] = a0
120650: 33 07 8e 01              a0 = 0x18e
120654: 7b 17 98 02              u64 [sp + 0x298] = a0
120658: 95 18 c8 01              a1 = sp + 0x1c8
120662: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
120666: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
120670: 95 17 e0 01              a0 = sp + 0x1e0
120674: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
120678: 33 07 a6 01              a0 = 0x1a6
120682: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
120686: 95 17 08 02              a0 = sp + 0x208
120690: 7b 17 c0 02              u64 [sp + 0x2c0] = a0
120694: 33 07 7c 02              a0 = 0x27c
120698: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
120702: 33 07 78 0c 01           a0 = 0x10c78
120707: 7b 17 38 02              u64 [sp + 0x238] = a0
120711: 49 21 40 02 04           u64 [sp + 576] = 0x4
120716: 49 21 58 02              u64 [sp + 600] = 0
120720: 95 18 90 02              a1 = sp + 0x290
120724: 7b 18 48 02              u64 [sp + 0x248] = a1
120728: 49 21 50 02 04           u64 [sp + 592] = 0x4
120733: 95 17 20 01              a0 = sp + 0x120
120737: 95 18 38 02              a1 = sp + 0x238
120741: 50 20 a0 05 9a 77 fe     ra = 1440, jump @1491
      :                          @9209 [@dyn 720]
120748: 82 16 28 01              s1 = u64 [sp + 0x128]
120752: 82 1b 30 01              a4 = u64 [sp + 0x130]
120756: 82 17 20 01              a0 = u64 [sp + 0x120]
120760: 7b 17 70                 u64 [sp + 0x70] = a0
120763: 33 07 02                 a0 = 0x2
120766: 33 08                    a1 = 0
120768: 33 09                    a2 = 0
120770: 64 6a                    a3 = s1
120772: 33 00 a2 05              ra = 0x5a2
120776: 0a 64                    ecalli 100 // 'log'
120778: 01                       fallthrough
      :                          @9210 [@dyn 721]
120779: 82 1c 70                 a5 = u64 [sp + 0x70]
120782: 82 17 68                 a0 = u64 [sp + 0x68]
120785: c8 c7 07                 a0 = a0 + a5
120788: 55 37 00 00 ff 0a        jump @9212 if a0 >=u 4294901760
      :                          @9211
120794: 28 ec 09 01              jump @12856
      :                          @9212
120798: 33 07 c0 22 03           a0 = 0x322c0
120803: 95 77 00 00 01           a0 = a0 + 0x10000
120808: 01                       fallthrough
      :                          @9213
120809: 82 78                    a1 = u64 [a0]
120811: c9 87 09                 a2 = a0 - a1
120814: aa 69 07                 jump @9215 if a2 == s1
      :                          @9214
120817: 28 d5 09 01              jump @12856
      :                          @9215
120821: c9 c8 09                 a2 = a1 - a5
120824: 01                       fallthrough
      :                          @9216
120825: 82 7a                    a3 = u64 [a0]
120827: ab 8a ee                 jump @9213 if a3 != a1
      :                          @9217
120830: 7b 79                    u64 [a0] = a2
120832: 33 0b                    a4 = 0
120834: 01                       fallthrough
      :                          @9218
120835: ab 8a e6                 jump @9213 if a3 != a1
      :                          @9219
120838: 28 c0 09 01              jump @12856
      :                          @9220 [@dyn 722]
120842: 3a 08 78 12 03           a1 = u64 [0x31278]
120847: 97 89 0d                 a2 = a1 << 0xd
120850: d3 89 09                 a2 = a2 ^ a1
120853: 98 9a 07                 a3 = a2 >> 0x7
120856: 3a 08 60 11 03           a1 = u64 [0x31160]
120861: d3 a9 09                 a2 = a2 ^ a3
120864: 97 9a 11                 a3 = a2 << 0x11
120867: d3 a9 09                 a2 = a2 ^ a3
120870: ca 89 0a                 a3 = a2 * a1
120873: 3e 09 78 12 03           u64 [0x31278] = a2
120878: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
120888: d6 9a 0b                 a4 = a3 mulhu a2
120891: 98 bb 04                 a4 = a4 >> 0x4
120894: 96 bb 14                 a4 = a4 * 0x14
120897: c9 ba 0a                 a3 = a3 - a4
120900: 7b 1a 10 01              u64 [sp + 0x110] = a3
120904: 3a 0a 78 12 03           a3 = u64 [0x31278]
120909: 97 ab 0d                 a4 = a3 << 0xd
120912: d3 ba 0a                 a3 = a3 ^ a4
120915: 98 ab 07                 a4 = a3 >> 0x7
120918: d3 ba 0a                 a3 = a3 ^ a4
120921: 97 ab 11                 a4 = a3 << 0x11
120924: d3 ba 0a                 a3 = a3 ^ a4
120927: ca 8a 0b                 a4 = a3 * a1
120930: 3e 0a 78 12 03           u64 [0x31278] = a3
120935: d6 9b 0a                 a3 = a4 mulhu a2
120938: 98 aa 04                 a3 = a3 >> 0x4
120941: 96 aa 14                 a3 = a3 * 0x14
120944: c9 ab 0b                 a4 = a4 - a3
120947: 7b 1b b0 01              u64 [sp + 0x1b0] = a4
120951: 3a 0a 78 12 03           a3 = u64 [0x31278]
120956: 97 ab 0d                 a4 = a3 << 0xd
120959: d3 ba 0a                 a3 = a3 ^ a4
120962: 98 ab 07                 a4 = a3 >> 0x7
120965: d3 ba 0a                 a3 = a3 ^ a4
120968: 97 ab 11                 a4 = a3 << 0x11
120971: d3 ba 0a                 a3 = a3 ^ a4
120974: ca 8a 0b                 a4 = a3 * a1
120977: 3e 0a 78 12 03           u64 [0x31278] = a3
120982: d6 9b 07                 a0 = a4 mulhu a2
120985: 98 77 03                 a0 = a0 >> 0x3
120988: 96 77 0a                 a0 = a0 * 0xa
120991: 82 18 10 01              a1 = u64 [sp + 0x110]
120995: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
120999: c9 7b 0a                 a3 = a4 - a0
121002: 95 aa 01                 a3 = a3 + 0x1
121005: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
121009: 95 17 e0 01              a0 = sp + 0x1e0
121013: 33 00 a6 05              ra = 0x5a6
121017: 95 11 98                 sp = sp + 0xffffffffffffff98
121020: 7b 10 60                 u64 [sp + 0x60] = ra
121023: 7b 15 58                 u64 [sp + 0x58] = s0
121026: 7b 16 50                 u64 [sp + 0x50] = s1
121029: 64 92                    t0 = a2
121031: 64 83                    t1 = a1
121033: 7b 17                    u64 [sp] = a0
121035: 33 08                    a1 = 0
121037: 33 05                    s0 = 0
121039: 49 11 38                 u64 [sp + 56] = 0
121042: 33 07 08                 a0 = 0x8
121045: 7b 17 40                 u64 [sp + 0x40] = a0
121048: 49 11 48                 u64 [sp + 72] = 0
121051: 9a ac 01                 a5 = 0x1 - a3
121054: 33 04 03                 t2 = 0x3
121057: 33 00 07                 ra = 0x7
121060: 7b 13 30                 u64 [sp + 0x30] = t1
121063: 64 26                    s1 = t0
121065: 7b 12 10                 u64 [sp + 0x10] = t0
121068: 7b 13 08                 u64 [sp + 0x8] = t1
121071: 28 6f 3b ff              jump @5527
      :                          @9221 [@dyn 723]
121075: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
121079: 7b 17 20 01              u64 [sp + 0x120] = a0
121083: 95 17 10 01              a0 = sp + 0x110
121087: 7b 17 90 02              u64 [sp + 0x290] = a0
121091: 33 07 94 0c              a0 = 0xc94
121095: 7b 17 98 02              u64 [sp + 0x298] = a0
121099: 95 18 b0 01              a1 = sp + 0x1b0
121103: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
121107: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
121111: 95 18 c8 01              a1 = sp + 0x1c8
121115: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
121119: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
121123: 95 17 20 01              a0 = sp + 0x120
121127: 7b 17 c0 02              u64 [sp + 0x2c0] = a0
121131: 33 07 28 0c              a0 = 0xc28
121135: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
121139: 33 07 d0 0c 01           a0 = 0x10cd0
121144: 7b 17 38 02              u64 [sp + 0x238] = a0
121148: 49 21 40 02 05           u64 [sp + 576] = 0x5
121153: 49 21 58 02              u64 [sp + 600] = 0
121157: 95 17 90 02              a0 = sp + 0x290
121161: 7b 17 48 02              u64 [sp + 0x248] = a0
121165: 49 21 50 02 04           u64 [sp + 592] = 0x4
121170: 95 17 08 02              a0 = sp + 0x208
121174: 95 18 38 02              a1 = sp + 0x238
121178: 50 20 a8 05 e5 75 fe     ra = 1448, jump @1491
      :                          @9222 [@dyn 724]
121185: 82 16 10 02              s1 = u64 [sp + 0x210]
121189: 82 1b 18 02              a4 = u64 [sp + 0x218]
121193: 82 17 08 02              a0 = u64 [sp + 0x208]
121197: 7b 17 70                 u64 [sp + 0x70] = a0
121200: 33 07 02                 a0 = 0x2
121203: 33 08                    a1 = 0
121205: 33 09                    a2 = 0
121207: 64 6a                    a3 = s1
121209: 33 00 aa 05              ra = 0x5aa
121213: 0a 64                    ecalli 100 // 'log'
121215: 01                       fallthrough
      :                          @9223 [@dyn 725]
121216: 82 1c 70                 a5 = u64 [sp + 0x70]
121219: 82 17 68                 a0 = u64 [sp + 0x68]
121222: c8 c7 07                 a0 = a0 + a5
121225: 53 37 00 00 ff 25        jump @9229 if a0 <u 4294901760
      :                          @9224
121231: 33 07 c0 22 03           a0 = 0x322c0
121236: 95 77 00 00 01           a0 = a0 + 0x10000
121241: 01                       fallthrough
      :                          @9225
121242: 82 78                    a1 = u64 [a0]
121244: c9 87 09                 a2 = a0 - a1
121247: ab 69 0f                 jump @9229 if a2 != s1
      :                          @9226
121250: c9 c8 09                 a2 = a1 - a5
121253: 01                       fallthrough
      :                          @9227
121254: 82 7a                    a3 = u64 [a0]
121256: ab 8a f2                 jump @9225 if a3 != a1
      :                          @9228
121259: 7b 79                    u64 [a0] = a2
121261: 01                       fallthrough
      :                          @9229
121262: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
121266: 52 08 07                 jump @9231 if a1 != 0
      :                          @9230
121269: 28 11 08 01              jump @12856
      :                          @9231
121273: 54 28 00 10 09           jump @9233 if a1 <=u 4096
      :                          @9232
121278: 28 08 08 01              jump @12856
      :                          @9233
121282: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
121286: 97 88 04                 a1 = a1 << 0x4
121289: 33 09 c0 22 03           a2 = 0x322c0
121294: 95 99 00 00 01           a2 = a2 + 0x10000
121299: 01                       fallthrough
      :                          @9234
121300: 82 9a                    a3 = u64 [a2]
121302: c9 a9 0b                 a4 = a2 - a3
121305: aa 7b 07                 jump @9236 if a4 == a0
      :                          @9235
121308: 28 ea 07 01              jump @12856
      :                          @9236
121312: c9 8a 0b                 a4 = a3 - a1
121315: 01                       fallthrough
      :                          @9237
121316: 82 9c                    a5 = u64 [a2]
121318: ab ac ee                 jump @9234 if a5 != a3
      :                          @9238
121321: 7b 9b                    u64 [a2] = a4
121323: 33 06                    s1 = 0
121325: 01                       fallthrough
      :                          @9239
121326: ab ac e6                 jump @9234 if a5 != a3
      :                          @9240
121329: 28 d5 07 01              jump @12856
      :                          @9241 [@dyn 726]
121333: 3a 08 78 12 03           a1 = u64 [0x31278]
121338: 97 89 0d                 a2 = a1 << 0xd
121341: d3 98 08                 a1 = a1 ^ a2
121344: 98 89 07                 a2 = a1 >> 0x7
121347: d3 98 08                 a1 = a1 ^ a2
121350: 3a 09 60 11 03           a2 = u64 [0x31160]
121355: 97 8a 11                 a3 = a1 << 0x11
121358: d3 a8 08                 a1 = a1 ^ a3
121361: ca 98 09                 a2 = a1 * a2
121364: 3e 08 78 12 03           u64 [0x31278] = a1
121369: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
121379: d6 79 07                 a0 = a2 mulhu a0
121382: 98 77 04                 a0 = a0 >> 0x4
121385: 96 77 14                 a0 = a0 * 0x14
121388: c9 79 08                 a1 = a2 - a0
121391: 95 88 01                 a1 = a1 + 0x1
121394: 95 17 08 02              a0 = sp + 0x208
121398: 95 16 08 02              s1 = sp + 0x208
121402: 50 20 ae 05 da 9e fe     ra = 1454, jump @2209
      :                          @9242 [@dyn 727]
121409: 82 17 10 02              a0 = u64 [sp + 0x210]
121413: 82 18 18 02              a1 = u64 [sp + 0x218]
121417: 50 20 b0 05 c7 3a ff     ra = 1456, jump @5533
      :                          @9243 [@dyn 728]
121424: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
121428: 33 07 20 02              a0 = 0x220
121432: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
121436: 33 07 30 0d 01           a0 = 0x10d30
121441: 7b 17 90 02              u64 [sp + 0x290] = a0
121445: 49 21 98 02 01           u64 [sp + 664] = 0x1
121450: 49 21 b0 02              u64 [sp + 688] = 0
121454: 95 18 e0 01              a1 = sp + 0x1e0
121458: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
121462: 49 21 a8 02 01           u64 [sp + 680] = 0x1
121467: 95 17 38 02              a0 = sp + 0x238
121471: 95 18 90 02              a1 = sp + 0x290
121475: 50 20 b2 05 bc 74 fe     ra = 1458, jump @1491
      :                          @9244 [@dyn 729]
121482: 82 16 40 02              s1 = u64 [sp + 0x240]
121486: 82 1b 48 02              a4 = u64 [sp + 0x248]
121490: 82 17 38 02              a0 = u64 [sp + 0x238]
121494: 7b 17 70                 u64 [sp + 0x70] = a0
121497: 33 07 02                 a0 = 0x2
121500: 33 08                    a1 = 0
121502: 33 09                    a2 = 0
121504: 64 6a                    a3 = s1
121506: 33 00 b4 05              ra = 0x5b4
121510: 0a 64                    ecalli 100 // 'log'
121512: 01                       fallthrough
      :                          @9245 [@dyn 730]
121513: 82 1c 70                 a5 = u64 [sp + 0x70]
121516: 82 17 68                 a0 = u64 [sp + 0x68]
121519: c8 c7 07                 a0 = a0 + a5
121522: 53 37 00 00 ff 25        jump @9251 if a0 <u 4294901760
      :                          @9246
121528: 33 07 c0 22 03           a0 = 0x322c0
121533: 95 77 00 00 01           a0 = a0 + 0x10000
121538: 01                       fallthrough
      :                          @9247
121539: 82 78                    a1 = u64 [a0]
121541: c9 87 09                 a2 = a0 - a1
121544: ab 69 0f                 jump @9251 if a2 != s1
      :                          @9248
121547: c9 c8 09                 a2 = a1 - a5
121550: 01                       fallthrough
      :                          @9249
121551: 82 7a                    a3 = u64 [a0]
121553: ab 8a f2                 jump @9247 if a3 != a1
      :                          @9250
121556: 7b 79                    u64 [a0] = a2
121558: 01                       fallthrough
      :                          @9251
121559: 82 18 08 02              a1 = u64 [sp + 0x208]
121563: 52 08 07                 jump @9253 if a1 != 0
      :                          @9252
121566: 28 e8 06 01              jump @12856
      :                          @9253
121570: 54 28 00 20 09           jump @9255 if a1 <=u 8192
      :                          @9254
121575: 28 df 06 01              jump @12856
      :                          @9255
121579: 82 17 10 02              a0 = u64 [sp + 0x210]
121583: 97 88 03                 a1 = a1 << 0x3
121586: 33 09 c0 22 03           a2 = 0x322c0
121591: 95 99 00 00 01           a2 = a2 + 0x10000
121596: 01                       fallthrough
      :                          @9256
121597: 82 9a                    a3 = u64 [a2]
121599: c9 a9 0b                 a4 = a2 - a3
121602: aa 7b 07                 jump @9258 if a4 == a0
      :                          @9257
121605: 28 c1 06 01              jump @12856
      :                          @9258
121609: c9 8a 0b                 a4 = a3 - a1
121612: 01                       fallthrough
      :                          @9259
121613: 82 9c                    a5 = u64 [a2]
121615: ab ac ee                 jump @9256 if a5 != a3
      :                          @9260
121618: 7b 9b                    u64 [a2] = a4
121620: 33 06                    s1 = 0
121622: 01                       fallthrough
      :                          @9261
121623: ab ac e6                 jump @9256 if a5 != a3
      :                          @9262
121626: 28 ac 06 01              jump @12856
      :                          @9263 [@dyn 731]
121630: 3a 08 78 12 03           a1 = u64 [0x31278]
121635: 97 89 0d                 a2 = a1 << 0xd
121638: d3 98 08                 a1 = a1 ^ a2
121641: 98 89 07                 a2 = a1 >> 0x7
121644: d3 98 08                 a1 = a1 ^ a2
121647: 3a 09 60 11 03           a2 = u64 [0x31160]
121652: 97 8a 11                 a3 = a1 << 0x11
121655: d3 a8 08                 a1 = a1 ^ a3
121658: ca 98 09                 a2 = a1 * a2
121661: 3e 08 78 12 03           u64 [0x31278] = a1
121666: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
121676: d6 79 07                 a0 = a2 mulhu a0
121679: 98 77 04                 a0 = a0 >> 0x4
121682: 96 77 14                 a0 = a0 * 0x14
121685: c9 79 08                 a1 = a2 - a0
121688: 95 88 01                 a1 = a1 + 0x1
121691: 95 17 08 02              a0 = sp + 0x208
121695: 95 16 08 02              s1 = sp + 0x208
121699: 50 20 b8 05 b1 9d fe     ra = 1464, jump @2209
      :                          @9264 [@dyn 732]
121706: 82 17 10 02              a0 = u64 [sp + 0x210]
121710: 82 18 18 02              a1 = u64 [sp + 0x218]
121714: 50 20 ba 05 50 3b ff     ra = 1466, jump @5570
      :                          @9265 [@dyn 733]
121721: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
121725: 33 07 20 02              a0 = 0x220
121729: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
121733: 33 07 50 0d 01           a0 = 0x10d50
121738: 7b 17 90 02              u64 [sp + 0x290] = a0
121742: 49 21 98 02 01           u64 [sp + 664] = 0x1
121747: 49 21 b0 02              u64 [sp + 688] = 0
121751: 95 18 e0 01              a1 = sp + 0x1e0
121755: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
121759: 49 21 a8 02 01           u64 [sp + 680] = 0x1
121764: 95 17 38 02              a0 = sp + 0x238
121768: 95 18 90 02              a1 = sp + 0x290
121772: 50 20 bc 05 93 73 fe     ra = 1468, jump @1491
      :                          @9266 [@dyn 734]
121779: 82 16 40 02              s1 = u64 [sp + 0x240]
121783: 82 1b 48 02              a4 = u64 [sp + 0x248]
121787: 82 17 38 02              a0 = u64 [sp + 0x238]
121791: 7b 17 70                 u64 [sp + 0x70] = a0
121794: 33 07 02                 a0 = 0x2
121797: 33 08                    a1 = 0
121799: 33 09                    a2 = 0
121801: 64 6a                    a3 = s1
121803: 33 00 be 05              ra = 0x5be
121807: 0a 64                    ecalli 100 // 'log'
121809: 01                       fallthrough
      :                          @9267 [@dyn 735]
121810: 82 1c 70                 a5 = u64 [sp + 0x70]
121813: 82 17 68                 a0 = u64 [sp + 0x68]
121816: c8 c7 07                 a0 = a0 + a5
121819: 53 37 00 00 ff 25        jump @9273 if a0 <u 4294901760
      :                          @9268
121825: 33 07 c0 22 03           a0 = 0x322c0
121830: 95 77 00 00 01           a0 = a0 + 0x10000
121835: 01                       fallthrough
      :                          @9269
121836: 82 78                    a1 = u64 [a0]
121838: c9 87 09                 a2 = a0 - a1
121841: ab 69 0f                 jump @9273 if a2 != s1
      :                          @9270
121844: c9 c8 09                 a2 = a1 - a5
121847: 01                       fallthrough
      :                          @9271
121848: 82 7a                    a3 = u64 [a0]
121850: ab 8a f2                 jump @9269 if a3 != a1
      :                          @9272
121853: 7b 79                    u64 [a0] = a2
121855: 01                       fallthrough
      :                          @9273
121856: 82 18 08 02              a1 = u64 [sp + 0x208]
121860: 52 08 07                 jump @9275 if a1 != 0
      :                          @9274
121863: 28 bf 05 01              jump @12856
      :                          @9275
121867: 54 28 00 20 09           jump @9277 if a1 <=u 8192
      :                          @9276
121872: 28 b6 05 01              jump @12856
      :                          @9277
121876: 82 17 10 02              a0 = u64 [sp + 0x210]
121880: 97 88 03                 a1 = a1 << 0x3
121883: 33 09 c0 22 03           a2 = 0x322c0
121888: 95 99 00 00 01           a2 = a2 + 0x10000
121893: 01                       fallthrough
      :                          @9278
121894: 82 9a                    a3 = u64 [a2]
121896: c9 a9 0b                 a4 = a2 - a3
121899: aa 7b 07                 jump @9280 if a4 == a0
      :                          @9279
121902: 28 98 05 01              jump @12856
      :                          @9280
121906: c9 8a 0b                 a4 = a3 - a1
121909: 01                       fallthrough
      :                          @9281
121910: 82 9c                    a5 = u64 [a2]
121912: ab ac ee                 jump @9278 if a5 != a3
      :                          @9282
121915: 7b 9b                    u64 [a2] = a4
121917: 33 06                    s1 = 0
121919: 01                       fallthrough
      :                          @9283
121920: ab ac e6                 jump @9278 if a5 != a3
      :                          @9284
121923: 28 83 05 01              jump @12856
      :                          @9285 [@dyn 736]
121927: 3a 08 78 12 03           a1 = u64 [0x31278]
121932: 97 89 0d                 a2 = a1 << 0xd
121935: d3 98 08                 a1 = a1 ^ a2
121938: 98 89 07                 a2 = a1 >> 0x7
121941: d3 98 08                 a1 = a1 ^ a2
121944: 3a 09 60 11 03           a2 = u64 [0x31160]
121949: 97 8a 11                 a3 = a1 << 0x11
121952: d3 a8 08                 a1 = a1 ^ a3
121955: ca 98 09                 a2 = a1 * a2
121958: 3e 08 78 12 03           u64 [0x31278] = a1
121963: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
121973: d6 79 07                 a0 = a2 mulhu a0
121976: 98 77 04                 a0 = a0 >> 0x4
121979: 96 77 14                 a0 = a0 * 0x14
121982: c9 79 08                 a1 = a2 - a0
121985: 95 88 01                 a1 = a1 + 0x1
121988: 95 17 08 02              a0 = sp + 0x208
121992: 95 16 08 02              s1 = sp + 0x208
121996: 50 20 c2 05 88 9c fe     ra = 1474, jump @2209
      :                          @9286 [@dyn 737]
122003: 82 17 10 02              a0 = u64 [sp + 0x210]
122007: 82 18 18 02              a1 = u64 [sp + 0x218]
122011: 50 20 c4 05 b4 2d ff     ra = 1476, jump @5346
      :                          @9287 [@dyn 738]
122018: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
122022: 33 07 20 02              a0 = 0x220
122026: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
122030: 33 07 70 0d 01           a0 = 0x10d70
122035: 7b 17 90 02              u64 [sp + 0x290] = a0
122039: 49 21 98 02 01           u64 [sp + 664] = 0x1
122044: 49 21 b0 02              u64 [sp + 688] = 0
122048: 95 18 e0 01              a1 = sp + 0x1e0
122052: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
122056: 49 21 a8 02 01           u64 [sp + 680] = 0x1
122061: 95 17 38 02              a0 = sp + 0x238
122065: 95 18 90 02              a1 = sp + 0x290
122069: 50 20 c6 05 6a 72 fe     ra = 1478, jump @1491
      :                          @9288 [@dyn 739]
122076: 82 16 40 02              s1 = u64 [sp + 0x240]
122080: 82 1b 48 02              a4 = u64 [sp + 0x248]
122084: 82 17 38 02              a0 = u64 [sp + 0x238]
122088: 7b 17 70                 u64 [sp + 0x70] = a0
122091: 33 07 02                 a0 = 0x2
122094: 33 08                    a1 = 0
122096: 33 09                    a2 = 0
122098: 64 6a                    a3 = s1
122100: 33 00 c8 05              ra = 0x5c8
122104: 0a 64                    ecalli 100 // 'log'
122106: 01                       fallthrough
      :                          @9289 [@dyn 740]
122107: 82 1c 70                 a5 = u64 [sp + 0x70]
122110: 82 17 68                 a0 = u64 [sp + 0x68]
122113: c8 c7 07                 a0 = a0 + a5
122116: 53 37 00 00 ff 25        jump @9295 if a0 <u 4294901760
      :                          @9290
122122: 33 07 c0 22 03           a0 = 0x322c0
122127: 95 77 00 00 01           a0 = a0 + 0x10000
122132: 01                       fallthrough
      :                          @9291
122133: 82 78                    a1 = u64 [a0]
122135: c9 87 09                 a2 = a0 - a1
122138: ab 69 0f                 jump @9295 if a2 != s1
      :                          @9292
122141: c9 c8 09                 a2 = a1 - a5
122144: 01                       fallthrough
      :                          @9293
122145: 82 7a                    a3 = u64 [a0]
122147: ab 8a f2                 jump @9291 if a3 != a1
      :                          @9294
122150: 7b 79                    u64 [a0] = a2
122152: 01                       fallthrough
      :                          @9295
122153: 82 18 08 02              a1 = u64 [sp + 0x208]
122157: 52 08 07                 jump @9297 if a1 != 0
      :                          @9296
122160: 28 96 04 01              jump @12856
      :                          @9297
122164: 54 28 00 20 09           jump @9299 if a1 <=u 8192
      :                          @9298
122169: 28 8d 04 01              jump @12856
      :                          @9299
122173: 82 17 10 02              a0 = u64 [sp + 0x210]
122177: 97 88 03                 a1 = a1 << 0x3
122180: 33 09 c0 22 03           a2 = 0x322c0
122185: 95 99 00 00 01           a2 = a2 + 0x10000
122190: 01                       fallthrough
      :                          @9300
122191: 82 9a                    a3 = u64 [a2]
122193: c9 a9 0b                 a4 = a2 - a3
122196: aa 7b 07                 jump @9302 if a4 == a0
      :                          @9301
122199: 28 6f 04 01              jump @12856
      :                          @9302
122203: c9 8a 0b                 a4 = a3 - a1
122206: 01                       fallthrough
      :                          @9303
122207: 82 9c                    a5 = u64 [a2]
122209: ab ac ee                 jump @9300 if a5 != a3
      :                          @9304
122212: 7b 9b                    u64 [a2] = a4
122214: 33 06                    s1 = 0
122216: 01                       fallthrough
      :                          @9305
122217: ab ac e6                 jump @9300 if a5 != a3
      :                          @9306
122220: 28 5a 04 01              jump @12856
      :                          @9307 [@dyn 741]
122224: 3a 08 78 12 03           a1 = u64 [0x31278]
122229: 97 89 0d                 a2 = a1 << 0xd
122232: d3 98 08                 a1 = a1 ^ a2
122235: 98 89 07                 a2 = a1 >> 0x7
122238: d3 98 08                 a1 = a1 ^ a2
122241: 3a 09 60 11 03           a2 = u64 [0x31160]
122246: 97 8a 11                 a3 = a1 << 0x11
122249: d3 a8 08                 a1 = a1 ^ a3
122252: ca 98 09                 a2 = a1 * a2
122255: 3e 08 78 12 03           u64 [0x31278] = a1
122260: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
122270: d6 79 07                 a0 = a2 mulhu a0
122273: 98 77 04                 a0 = a0 >> 0x4
122276: 96 77 14                 a0 = a0 * 0x14
122279: c9 79 08                 a1 = a2 - a0
122282: 95 88 01                 a1 = a1 + 0x1
122285: 95 17 20 01              a0 = sp + 0x120
122289: 33 00 cc 05              ra = 0x5cc
122293: 95 11 e8                 sp = sp + 0xffffffffffffffe8
122296: 7b 10 10                 u64 [sp + 0x10] = ra
122299: 7b 15 08                 u64 [sp + 0x8] = s0
122302: 7b 16                    u64 [sp] = s1
122304: 97 82 03                 t0 = a1 << 0x3
122307: 33 04 c0 22 03           t2 = 0x322c0
122312: 33 03 00 00 01           t1 = 0x10000
122317: c8 34 00                 ra = t2 + t1
122320: 28 f7 9b fe              jump @2218
      :                          @9308 [@dyn 742]
122324: 82 18 28 01              a1 = u64 [sp + 0x128]
122328: 82 19 30 01              a2 = u64 [sp + 0x130]
122332: 95 17 e0 01              a0 = sp + 0x1e0
122336: 95 16 e0 01              s1 = sp + 0x1e0
122340: 50 20 ce 05 94 39 ff     ra = 1486, jump @5598
      :                          @9309 [@dyn 743]
122347: 95 17 20 01              a0 = sp + 0x120
122351: 7b 17 38 02              u64 [sp + 0x238] = a0
122355: 33 07 20 02              a0 = 0x220
122359: 7b 17 40 02              u64 [sp + 0x240] = a0
122363: 7b 16 48 02              u64 [sp + 0x248] = s1
122367: 7b 17 50 02              u64 [sp + 0x250] = a0
122371: 33 07 90 0d 01           a0 = 0x10d90
122376: 7b 17 90 02              u64 [sp + 0x290] = a0
122380: 49 21 98 02 02           u64 [sp + 664] = 0x2
122385: 49 21 b0 02              u64 [sp + 688] = 0
122389: 95 18 38 02              a1 = sp + 0x238
122393: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
122397: 49 21 a8 02 02           u64 [sp + 680] = 0x2
122402: 95 17 08 02              a0 = sp + 0x208
122406: 95 18 90 02              a1 = sp + 0x290
122410: 50 20 d0 05 15 71 fe     ra = 1488, jump @1491
      :                          @9310 [@dyn 744]
122417: 82 16 10 02              s1 = u64 [sp + 0x210]
122421: 82 1b 18 02              a4 = u64 [sp + 0x218]
122425: 82 17 08 02              a0 = u64 [sp + 0x208]
122429: 7b 17 70                 u64 [sp + 0x70] = a0
122432: 33 07 02                 a0 = 0x2
122435: 33 08                    a1 = 0
122437: 33 09                    a2 = 0
122439: 64 6a                    a3 = s1
122441: 33 00 d2 05              ra = 0x5d2
122445: 0a 64                    ecalli 100 // 'log'
122447: 01                       fallthrough
      :                          @9311 [@dyn 745]
122448: 82 1c 70                 a5 = u64 [sp + 0x70]
122451: 82 17 68                 a0 = u64 [sp + 0x68]
122454: c8 c7 07                 a0 = a0 + a5
122457: 53 37 00 00 ff 25        jump @9317 if a0 <u 4294901760
      :                          @9312
122463: 33 07 c0 22 03           a0 = 0x322c0
122468: 95 77 00 00 01           a0 = a0 + 0x10000
122473: 01                       fallthrough
      :                          @9313
122474: 82 78                    a1 = u64 [a0]
122476: c9 87 09                 a2 = a0 - a1
122479: ab 69 0f                 jump @9317 if a2 != s1
      :                          @9314
122482: c9 c8 09                 a2 = a1 - a5
122485: 01                       fallthrough
      :                          @9315
122486: 82 7a                    a3 = u64 [a0]
122488: ab 8a f2                 jump @9313 if a3 != a1
      :                          @9316
122491: 7b 79                    u64 [a0] = a2
122493: 01                       fallthrough
      :                          @9317
122494: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
122498: 51 08 30                 jump @9324 if a1 == 0
      :                          @9318
122501: 56 28 00 20 2d           jump @9324 if a1 >u 8192
      :                          @9319
122506: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
122510: 97 88 03                 a1 = a1 << 0x3
122513: 33 09 c0 22 03           a2 = 0x322c0
122518: 95 99 00 00 01           a2 = a2 + 0x10000
122523: 01                       fallthrough
      :                          @9320
122524: 82 9a                    a3 = u64 [a2]
122526: c9 a9 0b                 a4 = a2 - a3
122529: ab 7b 11                 jump @9324 if a4 != a0
      :                          @9321
122532: c9 8a 0b                 a4 = a3 - a1
122535: 01                       fallthrough
      :                          @9322
122536: 82 9c                    a5 = u64 [a2]
122538: ab ac f2                 jump @9320 if a5 != a3
      :                          @9323
122541: 7b 9b                    u64 [a2] = a4
122543: 33 06                    s1 = 0
122545: 01                       fallthrough
      :                          @9324
122546: 82 18 20 01              a1 = u64 [sp + 0x120]
122550: 52 08 07                 jump @9326 if a1 != 0
      :                          @9325
122553: 28 0d 03 01              jump @12856
      :                          @9326
122557: 54 28 00 20 09           jump @9328 if a1 <=u 8192
      :                          @9327
122562: 28 04 03 01              jump @12856
      :                          @9328
122566: 82 17 28 01              a0 = u64 [sp + 0x128]
122570: 97 88 03                 a1 = a1 << 0x3
122573: 33 09 c0 22 03           a2 = 0x322c0
122578: 95 99 00 00 01           a2 = a2 + 0x10000
122583: 01                       fallthrough
      :                          @9329
122584: 82 9a                    a3 = u64 [a2]
122586: c9 a9 0b                 a4 = a2 - a3
122589: aa 7b 07                 jump @9331 if a4 == a0
      :                          @9330
122592: 28 e6 02 01              jump @12856
      :                          @9331
122596: c9 8a 0b                 a4 = a3 - a1
122599: 01                       fallthrough
      :                          @9332
122600: 82 9c                    a5 = u64 [a2]
122602: ab ac ee                 jump @9329 if a5 != a3
      :                          @9333
122605: 7b 9b                    u64 [a2] = a4
122607: 33 06                    s1 = 0
122609: 01                       fallthrough
      :                          @9334
122610: ab ac e6                 jump @9329 if a5 != a3
      :                          @9335
122613: 28 d1 02 01              jump @12856
      :                          @9336 [@dyn 746]
122617: 3a 08 78 12 03           a1 = u64 [0x31278]
122622: 97 89 0d                 a2 = a1 << 0xd
122625: d3 98 08                 a1 = a1 ^ a2
122628: 98 89 07                 a2 = a1 >> 0x7
122631: d3 98 08                 a1 = a1 ^ a2
122634: 3a 09 60 11 03           a2 = u64 [0x31160]
122639: 97 8a 11                 a3 = a1 << 0x11
122642: d3 a8 08                 a1 = a1 ^ a3
122645: ca 98 09                 a2 = a1 * a2
122648: 3e 08 78 12 03           u64 [0x31278] = a1
122653: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
122663: d6 79 07                 a0 = a2 mulhu a0
122666: 98 77 04                 a0 = a0 >> 0x4
122669: 96 77 14                 a0 = a0 * 0x14
122672: c9 79 08                 a1 = a2 - a0
122675: 95 88 01                 a1 = a1 + 0x1
122678: 95 17 08 02              a0 = sp + 0x208
122682: 95 16 08 02              s1 = sp + 0x208
122686: 33 00 d6 05              ra = 0x5d6
122690: 95 11 e8                 sp = sp + 0xffffffffffffffe8
122693: 7b 10 10                 u64 [sp + 0x10] = ra
122696: 7b 15 08                 u64 [sp + 0x8] = s0
122699: 7b 16                    u64 [sp] = s1
122701: 97 82 03                 t0 = a1 << 0x3
122704: 33 04 c0 22 03           t2 = 0x322c0
122709: 33 03 00 00 01           t1 = 0x10000
122714: c8 34 00                 ra = t2 + t1
122717: 28 a6 9c fe              jump @2262
      :                          @9337 [@dyn 747]
122721: 82 17 10 02              a0 = u64 [sp + 0x210]
122725: 82 18 18 02              a1 = u64 [sp + 0x218]
122729: 50 20 d8 05 28 3a ff     ra = 1496, jump @5647
      :                          @9338 [@dyn 748]
122736: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
122740: 33 07 20 02              a0 = 0x220
122744: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
122748: 33 07 c0 0d 01           a0 = 0x10dc0
122753: 7b 17 90 02              u64 [sp + 0x290] = a0
122757: 49 21 98 02 01           u64 [sp + 664] = 0x1
122762: 49 21 b0 02              u64 [sp + 688] = 0
122766: 95 18 e0 01              a1 = sp + 0x1e0
122770: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
122774: 49 21 a8 02 01           u64 [sp + 680] = 0x1
122779: 95 17 38 02              a0 = sp + 0x238
122783: 95 18 90 02              a1 = sp + 0x290
122787: 50 20 da 05 9c 6f fe     ra = 1498, jump @1491
      :                          @9339 [@dyn 749]
122794: 82 16 40 02              s1 = u64 [sp + 0x240]
122798: 82 1b 48 02              a4 = u64 [sp + 0x248]
122802: 82 17 38 02              a0 = u64 [sp + 0x238]
122806: 7b 17 70                 u64 [sp + 0x70] = a0
122809: 33 07 02                 a0 = 0x2
122812: 33 08                    a1 = 0
122814: 33 09                    a2 = 0
122816: 64 6a                    a3 = s1
122818: 33 00 dc 05              ra = 0x5dc
122822: 0a 64                    ecalli 100 // 'log'
122824: 01                       fallthrough
      :                          @9340 [@dyn 750]
122825: 82 1c 70                 a5 = u64 [sp + 0x70]
122828: 82 17 68                 a0 = u64 [sp + 0x68]
122831: c8 c7 07                 a0 = a0 + a5
122834: 53 37 00 00 ff 25        jump @9346 if a0 <u 4294901760
      :                          @9341
122840: 33 07 c0 22 03           a0 = 0x322c0
122845: 95 77 00 00 01           a0 = a0 + 0x10000
122850: 01                       fallthrough
      :                          @9342
122851: 82 78                    a1 = u64 [a0]
122853: c9 87 09                 a2 = a0 - a1
122856: ab 69 0f                 jump @9346 if a2 != s1
      :                          @9343
122859: c9 c8 09                 a2 = a1 - a5
122862: 01                       fallthrough
      :                          @9344
122863: 82 7a                    a3 = u64 [a0]
122865: ab 8a f2                 jump @9342 if a3 != a1
      :                          @9345
122868: 7b 79                    u64 [a0] = a2
122870: 01                       fallthrough
      :                          @9346
122871: 82 18 08 02              a1 = u64 [sp + 0x208]
122875: 52 08 07                 jump @9348 if a1 != 0
      :                          @9347
122878: 28 c8 01 01              jump @12856
      :                          @9348
122882: 54 28 00 20 09           jump @9350 if a1 <=u 8192
      :                          @9349
122887: 28 bf 01 01              jump @12856
      :                          @9350
122891: 82 17 10 02              a0 = u64 [sp + 0x210]
122895: 97 88 03                 a1 = a1 << 0x3
122898: 33 09 c0 22 03           a2 = 0x322c0
122903: 95 99 00 00 01           a2 = a2 + 0x10000
122908: 01                       fallthrough
      :                          @9351
122909: 82 9a                    a3 = u64 [a2]
122911: c9 a9 0b                 a4 = a2 - a3
122914: aa 7b 07                 jump @9353 if a4 == a0
      :                          @9352
122917: 28 a1 01 01              jump @12856
      :                          @9353
122921: c9 8a 0b                 a4 = a3 - a1
122924: 01                       fallthrough
      :                          @9354
122925: 82 9c                    a5 = u64 [a2]
122927: ab ac ee                 jump @9351 if a5 != a3
      :                          @9355
122930: 7b 9b                    u64 [a2] = a4
122932: 33 06                    s1 = 0
122934: 01                       fallthrough
      :                          @9356
122935: ab ac e6                 jump @9351 if a5 != a3
      :                          @9357
122938: 28 8c 01 01              jump @12856
      :                          @9358 [@dyn 751]
122942: 3a 07 78 12 03           a0 = u64 [0x31278]
122947: 33 0a 78 12 03           a3 = 0x31278
122952: 97 78 0d                 a1 = a0 << 0xd
122955: d3 87 07                 a0 = a0 ^ a1
122958: 98 78 07                 a1 = a0 >> 0x7
122961: 3a 06 60 11 03           s1 = u64 [0x31160]
122966: d3 87 07                 a0 = a0 ^ a1
122969: 97 78 11                 a1 = a0 << 0x11
122972: d3 87 07                 a0 = a0 ^ a1
122975: ca 67 08                 a1 = a0 * s1
122978: 3e 07 78 12 03           u64 [0x31278] = a0
122983: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
122993: d6 78 07                 a0 = a1 mulhu a0
122996: 98 77 04                 a0 = a0 >> 0x4
122999: 33 09 14                 a2 = 0x14
123002: ca 97 07                 a0 = a0 * a2
123005: c9 78 08                 a1 = a1 - a0
123008: 95 88 01                 a1 = a1 + 0x1
123011: 7b 18 70                 u64 [sp + 0x70] = a1
123014: 95 17 20 01              a0 = sp + 0x120
123018: 50 20 e0 05 38 93 fe     ra = 1504, jump @2157
      :                          @9359 [@dyn 752]
123025: 82 18 28 01              a1 = u64 [sp + 0x128]
123029: 82 19 30 01              a2 = u64 [sp + 0x130]
123033: 95 17 e0 01              a0 = sp + 0x1e0
123037: 50 20 e2 05 19 3b ff     ra = 1506, jump @5693
      :                          @9360 [@dyn 753]
123044: 3a 07 78 12 03           a0 = u64 [0x31278]
123049: 97 78 0d                 a1 = a0 << 0xd
123052: d3 87 07                 a0 = a0 ^ a1
123055: 98 78 07                 a1 = a0 >> 0x7
123058: d3 87 07                 a0 = a0 ^ a1
123061: 97 78 11                 a1 = a0 << 0x11
123064: d3 78 09                 a2 = a1 ^ a0
123067: 3e 09 78 12 03           u64 [0x31278] = a2
123072: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
123076: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
123080: ca 69 09                 a2 = a2 * s1
123083: 82 1a 70                 a3 = u64 [sp + 0x70]
123086: cd a9 09                 a2 = a2 %u a3
123089: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
123093: 7b 17 70                 u64 [sp + 0x70] = a0
123096: 50 20 e4 05 a4 3b ff     ra = 1508, jump @5710
      :                          @9361 [@dyn 754]
123103: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
123107: 95 17 20 01              a0 = sp + 0x120
123111: 7b 17 90 02              u64 [sp + 0x290] = a0
123115: 33 07 20 02              a0 = 0x220
123119: 7b 17 98 02              u64 [sp + 0x298] = a0
123123: 95 17 b0 01              a0 = sp + 0x1b0
123127: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
123131: 33 07 28 0c              a0 = 0xc28
123135: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
123139: 95 18 c8 01              a1 = sp + 0x1c8
123143: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
123147: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
123151: 33 07 e0 0d 01           a0 = 0x10de0
123156: 7b 17 38 02              u64 [sp + 0x238] = a0
123160: 49 21 40 02 03           u64 [sp + 576] = 0x3
123165: 49 21 58 02              u64 [sp + 600] = 0
123169: 95 18 90 02              a1 = sp + 0x290
123173: 7b 18 48 02              u64 [sp + 0x248] = a1
123177: 49 21 50 02 03           u64 [sp + 592] = 0x3
123182: 95 17 08 02              a0 = sp + 0x208
123186: 95 18 38 02              a1 = sp + 0x238
123190: 50 20 e6 05 09 6e fe     ra = 1510, jump @1491
      :                          @9362 [@dyn 755]
123197: 82 16 10 02              s1 = u64 [sp + 0x210]
123201: 82 1b 18 02              a4 = u64 [sp + 0x218]
123205: 82 17 08 02              a0 = u64 [sp + 0x208]
123209: 7b 17 60                 u64 [sp + 0x60] = a0
123212: 33 07 02                 a0 = 0x2
123215: 33 08                    a1 = 0
123217: 33 09                    a2 = 0
123219: 64 6a                    a3 = s1
123221: 33 00 e8 05              ra = 0x5e8
123225: 0a 64                    ecalli 100 // 'log'
123227: 01                       fallthrough
      :                          @9363 [@dyn 756]
123228: 82 1c 60                 a5 = u64 [sp + 0x60]
123231: 82 17 68                 a0 = u64 [sp + 0x68]
123234: c8 c7 07                 a0 = a0 + a5
123237: 53 37 00 00 ff 25        jump @9369 if a0 <u 4294901760
      :                          @9364
123243: 33 07 c0 22 03           a0 = 0x322c0
123248: 95 77 00 00 01           a0 = a0 + 0x10000
123253: 01                       fallthrough
      :                          @9365
123254: 82 78                    a1 = u64 [a0]
123256: c9 87 09                 a2 = a0 - a1
123259: ab 69 0f                 jump @9369 if a2 != s1
      :                          @9366
123262: c9 c8 09                 a2 = a1 - a5
123265: 01                       fallthrough
      :                          @9367
123266: 82 7a                    a3 = u64 [a0]
123268: ab 8a f2                 jump @9365 if a3 != a1
      :                          @9368
123271: 7b 79                    u64 [a0] = a2
123273: 01                       fallthrough
      :                          @9369
123274: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
123278: 82 16 70                 s1 = u64 [sp + 0x70]
123281: 51 07 2a                 jump @9376 if a0 == 0
      :                          @9370
123284: 56 27 00 20 27           jump @9376 if a0 >u 8192
      :                          @9371
123289: 97 77 03                 a0 = a0 << 0x3
123292: 33 08 c0 22 03           a1 = 0x322c0
123297: 95 88 00 00 01           a1 = a1 + 0x10000
123302: 01                       fallthrough
      :                          @9372
123303: 82 89                    a2 = u64 [a1]
123305: c9 98 0a                 a3 = a1 - a2
123308: ab 6a 0f                 jump @9376 if a3 != s1
      :                          @9373
123311: c9 79 0a                 a3 = a2 - a0
123314: 01                       fallthrough
      :                          @9374
123315: 82 8b                    a4 = u64 [a1]
123317: ab 9b f2                 jump @9372 if a4 != a2
      :                          @9375
123320: 7b 8a                    u64 [a1] = a3
123322: 01                       fallthrough
      :                          @9376
123323: 82 18 20 01              a1 = u64 [sp + 0x120]
123327: 52 08 07                 jump @9378 if a1 != 0
      :                          @9377
123330: 28 04 00 01              jump @12856
      :                          @9378
123334: 54 28 00 20 09           jump @9380 if a1 <=u 8192
      :                          @9379
123339: 28 fb ff 00              jump @12856
      :                          @9380
123343: 82 17 28 01              a0 = u64 [sp + 0x128]
123347: 97 88 03                 a1 = a1 << 0x3
123350: 33 09 c0 22 03           a2 = 0x322c0
123355: 95 99 00 00 01           a2 = a2 + 0x10000
123360: 01                       fallthrough
      :                          @9381
123361: 82 9a                    a3 = u64 [a2]
123363: c9 a9 0b                 a4 = a2 - a3
123366: aa 7b 07                 jump @9383 if a4 == a0
      :                          @9382
123369: 28 dd ff 00              jump @12856
      :                          @9383
123373: c9 8a 0b                 a4 = a3 - a1
123376: 01                       fallthrough
      :                          @9384
123377: 82 9c                    a5 = u64 [a2]
123379: ab ac ee                 jump @9381 if a5 != a3
      :                          @9385
123382: 7b 9b                    u64 [a2] = a4
123384: 33 06                    s1 = 0
123386: 01                       fallthrough
      :                          @9386
123387: ab ac e6                 jump @9381 if a5 != a3
      :                          @9387
123390: 28 c8 ff 00              jump @12856
      :                          @9388 [@dyn 757]
123394: 33 0a 78 12 03           a3 = 0x31278
123399: 3a 07 78 12 03           a0 = u64 [0x31278]
123404: 97 78 0d                 a1 = a0 << 0xd
123407: d3 87 07                 a0 = a0 ^ a1
123410: 98 78 07                 a1 = a0 >> 0x7
123413: 3a 09 60 11 03           a2 = u64 [0x31160]
123418: 7b 19 70                 u64 [sp + 0x70] = a2
123421: d3 87 07                 a0 = a0 ^ a1
123424: 97 78 11                 a1 = a0 << 0x11
123427: d3 87 07                 a0 = a0 ^ a1
123430: ca 97 08                 a1 = a0 * a2
123433: 3e 07 78 12 03           u64 [0x31278] = a0
123438: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
123448: d6 78 07                 a0 = a1 mulhu a0
123451: 98 77 04                 a0 = a0 >> 0x4
123454: 33 09 14                 a2 = 0x14
123457: ca 97 07                 a0 = a0 * a2
123460: c9 78 08                 a1 = a1 - a0
123463: 95 86 01                 s1 = a1 + 0x1
123466: 95 17 20 01              a0 = sp + 0x120
123470: 64 68                    a1 = s1
123472: 50 20 ec 05 72 91 fe     ra = 1516, jump @2157
      :                          @9389 [@dyn 758]
123479: 82 18 28 01              a1 = u64 [sp + 0x128]
123483: 82 19 30 01              a2 = u64 [sp + 0x130]
123487: 95 17 08 02              a0 = sp + 0x208
123491: 50 20 ee 05 3e 3a ff     ra = 1518, jump @5716
      :                          @9390 [@dyn 759]
123498: 3a 07 78 12 03           a0 = u64 [0x31278]
123503: 97 78 0d                 a1 = a0 << 0xd
123506: d3 87 07                 a0 = a0 ^ a1
123509: 98 78 07                 a1 = a0 >> 0x7
123512: d3 87 07                 a0 = a0 ^ a1
123515: 97 78 11                 a1 = a0 << 0x11
123518: d3 87 07                 a0 = a0 ^ a1
123521: 3e 07 78 12 03           u64 [0x31278] = a0
123526: 3a 08 78 12 03           a1 = u64 [0x31278]
123531: 82 1b 70                 a4 = u64 [sp + 0x70]
123534: ca b7 07                 a0 = a0 * a4
123537: cd 67 07                 a0 = a0 %u s1
123540: 97 89 0d                 a2 = a1 << 0xd
123543: d3 98 08                 a1 = a1 ^ a2
123546: 98 89 07                 a2 = a1 >> 0x7
123549: d3 98 08                 a1 = a1 ^ a2
123552: 97 89 11                 a2 = a1 << 0x11
123555: d3 98 08                 a1 = a1 ^ a2
123558: ca b8 09                 a2 = a1 * a4
123561: 3e 08 78 12 03           u64 [0x31278] = a1
123566: cd 69 09                 a2 = a2 %u s1
123569: e6 97 08                 a1 = minu(a0, a2)
123572: e4 97 09                 a2 = maxu(a0, a2)
123575: 7b 18 10 01              u64 [sp + 0x110] = a1
123579: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
123583: 95 17 08 02              a0 = sp + 0x208
123587: 50 20 f0 05 f7 3a ff     ra = 1520, jump @5742
      :                          @9391 [@dyn 760]
123594: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
123598: 95 17 20 01              a0 = sp + 0x120
123602: 7b 17 90 02              u64 [sp + 0x290] = a0
123606: 33 07 20 02              a0 = 0x220
123610: 7b 17 98 02              u64 [sp + 0x298] = a0
123614: 95 17 10 01              a0 = sp + 0x110
123618: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
123622: 33 07 28 0c              a0 = 0xc28
123626: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
123630: 95 18 b0 01              a1 = sp + 0x1b0
123634: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
123638: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
123642: 95 18 c8 01              a1 = sp + 0x1c8
123646: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
123650: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
123654: 33 07 20 0e 01           a0 = 0x10e20
123659: 7b 17 38 02              u64 [sp + 0x238] = a0
123663: 49 21 40 02 04           u64 [sp + 576] = 0x4
123668: 49 21 58 02              u64 [sp + 600] = 0
123672: 95 18 90 02              a1 = sp + 0x290
123676: 7b 18 48 02              u64 [sp + 0x248] = a1
123680: 49 21 50 02 04           u64 [sp + 592] = 0x4
123685: 95 17 e0 01              a0 = sp + 0x1e0
123689: 95 18 38 02              a1 = sp + 0x238
123693: 50 20 f2 05 12 6c fe     ra = 1522, jump @1491
      :                          @9392 [@dyn 761]
123700: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
123704: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
123708: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
123712: 7b 17 70                 u64 [sp + 0x70] = a0
123715: 33 07 02                 a0 = 0x2
123718: 33 08                    a1 = 0
123720: 33 09                    a2 = 0
123722: 64 6a                    a3 = s1
123724: 33 00 f4 05              ra = 0x5f4
123728: 0a 64                    ecalli 100 // 'log'
123730: 01                       fallthrough
      :                          @9393 [@dyn 762]
123731: 82 1c 70                 a5 = u64 [sp + 0x70]
123734: 82 17 68                 a0 = u64 [sp + 0x68]
123737: c8 c7 07                 a0 = a0 + a5
123740: 53 37 00 00 ff 25        jump @9399 if a0 <u 4294901760
      :                          @9394
123746: 33 07 c0 22 03           a0 = 0x322c0
123751: 95 77 00 00 01           a0 = a0 + 0x10000
123756: 01                       fallthrough
      :                          @9395
123757: 82 78                    a1 = u64 [a0]
123759: c9 87 09                 a2 = a0 - a1
123762: ab 69 0f                 jump @9399 if a2 != s1
      :                          @9396
123765: c9 c8 09                 a2 = a1 - a5
123768: 01                       fallthrough
      :                          @9397
123769: 82 7a                    a3 = u64 [a0]
123771: ab 8a f2                 jump @9395 if a3 != a1
      :                          @9398
123774: 7b 79                    u64 [a0] = a2
123776: 01                       fallthrough
      :                          @9399
123777: 82 18 08 02              a1 = u64 [sp + 0x208]
123781: 51 08 30                 jump @9406 if a1 == 0
      :                          @9400
123784: 56 28 00 20 2d           jump @9406 if a1 >u 8192
      :                          @9401
123789: 82 17 10 02              a0 = u64 [sp + 0x210]
123793: 97 88 03                 a1 = a1 << 0x3
123796: 33 09 c0 22 03           a2 = 0x322c0
123801: 95 99 00 00 01           a2 = a2 + 0x10000
123806: 01                       fallthrough
      :                          @9402
123807: 82 9a                    a3 = u64 [a2]
123809: c9 a9 0b                 a4 = a2 - a3
123812: ab 7b 11                 jump @9406 if a4 != a0
      :                          @9403
123815: c9 8a 0b                 a4 = a3 - a1
123818: 01                       fallthrough
      :                          @9404
123819: 82 9c                    a5 = u64 [a2]
123821: ab ac f2                 jump @9402 if a5 != a3
      :                          @9405
123824: 7b 9b                    u64 [a2] = a4
123826: 33 06                    s1 = 0
123828: 01                       fallthrough
      :                          @9406
123829: 82 18 20 01              a1 = u64 [sp + 0x120]
123833: 52 08 07                 jump @9408 if a1 != 0
      :                          @9407
123836: 28 0a fe 00              jump @12856
      :                          @9408
123840: 54 28 00 20 09           jump @9410 if a1 <=u 8192
      :                          @9409
123845: 28 01 fe 00              jump @12856
      :                          @9410
123849: 82 17 28 01              a0 = u64 [sp + 0x128]
123853: 97 88 03                 a1 = a1 << 0x3
123856: 33 09 c0 22 03           a2 = 0x322c0
123861: 95 99 00 00 01           a2 = a2 + 0x10000
123866: 01                       fallthrough
      :                          @9411
123867: 82 9a                    a3 = u64 [a2]
123869: c9 a9 0b                 a4 = a2 - a3
123872: aa 7b 07                 jump @9413 if a4 == a0
      :                          @9412
123875: 28 e3 fd 00              jump @12856
      :                          @9413
123879: c9 8a 0b                 a4 = a3 - a1
123882: 01                       fallthrough
      :                          @9414
123883: 82 9c                    a5 = u64 [a2]
123885: ab ac ee                 jump @9411 if a5 != a3
      :                          @9415
123888: 7b 9b                    u64 [a2] = a4
123890: 33 06                    s1 = 0
123892: 01                       fallthrough
      :                          @9416
123893: ab ac e6                 jump @9411 if a5 != a3
      :                          @9417
123896: 28 ce fd 00              jump @12856
      :                          @9418 [@dyn 763]
123900: 3a 09 78 12 03           a2 = u64 [0x31278]
123905: 3a 07 60 11 03           a0 = u64 [0x31160]
123910: 97 9a 0d                 a3 = a2 << 0xd
123913: d3 a9 09                 a2 = a2 ^ a3
123916: 98 9a 07                 a3 = a2 >> 0x7
123919: d3 a9 09                 a2 = a2 ^ a3
123922: 97 9a 11                 a3 = a2 << 0x11
123925: d3 a9 09                 a2 = a2 ^ a3
123928: ca 79 0a                 a3 = a2 * a0
123931: 3a 0b 70 11 03           a4 = u64 [0x31170]
123936: 3e 09 78 12 03           u64 [0x31278] = a2
123941: 98 a9 01                 a2 = a3 >> 0x1
123944: d6 b9 09                 a2 = a2 mulhu a4
123947: 98 99 04                 a2 = a2 >> 0x4
123950: 33 0b 32                 a4 = 0x32
123953: ca b9 09                 a2 = a2 * a4
123956: c9 9a 0a                 a3 = a3 - a2
123959: 86 a9 01                 a2 = a3 | 0x1
123962: 95 99 02                 a2 = a2 + 0x2
123965: 7b 19 20 01              u64 [sp + 0x120] = a2
123969: 3a 09 78 12 03           a2 = u64 [0x31278]
123974: 97 9a 0d                 a3 = a2 << 0xd
123977: d3 a9 09                 a2 = a2 ^ a3
123980: 98 9a 07                 a3 = a2 >> 0x7
123983: d3 a9 09                 a2 = a2 ^ a3
123986: 97 9a 11                 a3 = a2 << 0x11
123989: d3 a9 09                 a2 = a2 ^ a3
123992: 3e 09 78 12 03           u64 [0x31278] = a2
123997: 82 18 20 01              a1 = u64 [sp + 0x120]
124001: 52 08 07                 jump @9420 if a1 != 0
      :                          @9419
124004: 28 76 0f 01              jump @13228
      :                          @9420
124008: ca 79 07                 a0 = a2 * a0
124011: cd 87 07                 a0 = a0 %u a1
124014: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
124018: 50 20 f8 05 a6 39 ff     ra = 1528, jump @5755
      :                          @9421 [@dyn 764]
124025: 78 17 c8 01              u8 [sp + 0x1c8] = a0
124029: 95 17 e0 01              a0 = sp + 0x1e0
124033: 7b 17 90 02              u64 [sp + 0x290] = a0
124037: 33 07 28 0c              a0 = 0xc28
124041: 7b 17 98 02              u64 [sp + 0x298] = a0
124045: 95 18 20 01              a1 = sp + 0x120
124049: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
124053: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
124057: 95 17 c8 01              a0 = sp + 0x1c8
124061: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
124065: 33 07 80 0c              a0 = 0xc80
124069: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
124073: 33 07 78 0e 01           a0 = 0x10e78
124078: 7b 17 38 02              u64 [sp + 0x238] = a0
124082: 49 21 40 02 03           u64 [sp + 576] = 0x3
124087: 49 21 58 02              u64 [sp + 600] = 0
124091: 95 18 90 02              a1 = sp + 0x290
124095: 7b 18 48 02              u64 [sp + 0x248] = a1
124099: 49 21 50 02 03           u64 [sp + 592] = 0x3
124104: 95 17 08 02              a0 = sp + 0x208
124108: 95 18 38 02              a1 = sp + 0x238
124112: 50 20 fa 05 6f 6a fe     ra = 1530, jump @1491
      :                          @9422 [@dyn 765]
124119: 82 16 10 02              s1 = u64 [sp + 0x210]
124123: 82 1b 18 02              a4 = u64 [sp + 0x218]
124127: 82 17 08 02              a0 = u64 [sp + 0x208]
124131: 7b 17 70                 u64 [sp + 0x70] = a0
124134: 33 07 02                 a0 = 0x2
124137: 33 08                    a1 = 0
124139: 33 09                    a2 = 0
124141: 64 6a                    a3 = s1
124143: 33 00 fc 05              ra = 0x5fc
124147: 0a 64                    ecalli 100 // 'log'
124149: 01                       fallthrough
      :                          @9423 [@dyn 766]
124150: 82 1c 70                 a5 = u64 [sp + 0x70]
124153: 82 17 68                 a0 = u64 [sp + 0x68]
124156: c8 c7 07                 a0 = a0 + a5
124159: 55 37 00 00 ff 0a        jump @9425 if a0 >=u 4294901760
      :                          @9424
124165: 28 c1 fc 00              jump @12856
      :                          @9425
124169: 33 07 c0 22 03           a0 = 0x322c0
124174: 95 77 00 00 01           a0 = a0 + 0x10000
124179: 01                       fallthrough
      :                          @9426
124180: 82 78                    a1 = u64 [a0]
124182: c9 87 09                 a2 = a0 - a1
124185: aa 69 07                 jump @9428 if a2 == s1
      :                          @9427
124188: 28 aa fc 00              jump @12856
      :                          @9428
124192: c9 c8 09                 a2 = a1 - a5
124195: 01                       fallthrough
      :                          @9429
124196: 82 7a                    a3 = u64 [a0]
124198: ab 8a ee                 jump @9426 if a3 != a1
      :                          @9430
124201: 7b 79                    u64 [a0] = a2
124203: 33 0b                    a4 = 0
124205: 01                       fallthrough
      :                          @9431
124206: ab 8a e6                 jump @9426 if a3 != a1
      :                          @9432
124209: 28 95 fc 00              jump @12856
      :                          @9433 [@dyn 767]
124213: 3a 08 78 12 03           a1 = u64 [0x31278]
124218: 97 89 0d                 a2 = a1 << 0xd
124221: d3 98 08                 a1 = a1 ^ a2
124224: 98 89 07                 a2 = a1 >> 0x7
124227: d3 98 08                 a1 = a1 ^ a2
124230: 97 89 11                 a2 = a1 << 0x11
124233: d3 98 08                 a1 = a1 ^ a2
124236: 3a 09 60 11 03           a2 = u64 [0x31160]
124241: 3a 0a 68 11 03           a3 = u64 [0x31168]
124246: 3e 08 78 12 03           u64 [0x31278] = a1
124251: ca 98 07                 a0 = a1 * a2
124254: 98 78 03                 a1 = a0 >> 0x3
124257: d6 a8 08                 a1 = a1 mulhu a3
124260: 98 88 04                 a1 = a1 >> 0x4
124263: 96 88 e8 03              a1 = a1 * 0x3e8
124267: c9 87 07                 a0 = a0 - a1
124270: 95 77 02                 a0 = a0 + 0x2
124273: 7b 17 20 01              u64 [sp + 0x120] = a0
124277: 33 00 00 06              ra = 0x600
124281: 95 11 40 ff              sp = sp + 0xffffffffffffff40
124285: 7b 10 b8 00              u64 [sp + 0xb8] = ra
124289: 7b 15 b0 00              u64 [sp + 0xb0] = s0
124293: 7b 16 a8 00              u64 [sp + 0xa8] = s1
124297: 64 78                    a1 = a0
124299: 95 17 50                 a0 = sp + 0x50
124302: 33 00 a4 03              ra = 0x3a4
124306: 28 9d 40 ff              jump @5877
      :                          @9434 [@dyn 768]
124310: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
124314: 95 17 20 01              a0 = sp + 0x120
124318: 7b 17 38 02              u64 [sp + 0x238] = a0
124322: 33 07 28 0c              a0 = 0xc28
124326: 7b 17 40 02              u64 [sp + 0x240] = a0
124330: 95 18 e0 01              a1 = sp + 0x1e0
124334: 7b 18 48 02              u64 [sp + 0x248] = a1
124338: 7b 17 50 02              u64 [sp + 0x250] = a0
124342: 33 07 b8 0e 01           a0 = 0x10eb8
124347: 7b 17 90 02              u64 [sp + 0x290] = a0
124351: 49 21 98 02 02           u64 [sp + 664] = 0x2
124356: 49 21 b0 02              u64 [sp + 688] = 0
124360: 95 18 38 02              a1 = sp + 0x238
124364: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
124368: 49 21 a8 02 02           u64 [sp + 680] = 0x2
124373: 95 17 08 02              a0 = sp + 0x208
124377: 95 18 90 02              a1 = sp + 0x290
124381: 50 20 02 06 62 69 fe     ra = 1538, jump @1491
      :                          @9435 [@dyn 769]
124388: 82 16 10 02              s1 = u64 [sp + 0x210]
124392: 82 1b 18 02              a4 = u64 [sp + 0x218]
124396: 82 17 08 02              a0 = u64 [sp + 0x208]
124400: 7b 17 70                 u64 [sp + 0x70] = a0
124403: 33 07 02                 a0 = 0x2
124406: 33 08                    a1 = 0
124408: 33 09                    a2 = 0
124410: 64 6a                    a3 = s1
124412: 33 00 04 06              ra = 0x604
124416: 0a 64                    ecalli 100 // 'log'
124418: 01                       fallthrough
      :                          @9436 [@dyn 770]
124419: 82 1c 70                 a5 = u64 [sp + 0x70]
124422: 82 17 68                 a0 = u64 [sp + 0x68]
124425: c8 c7 07                 a0 = a0 + a5
124428: 55 37 00 00 ff 0a        jump @9438 if a0 >=u 4294901760
      :                          @9437
124434: 28 b4 fb 00              jump @12856
      :                          @9438
124438: 33 07 c0 22 03           a0 = 0x322c0
124443: 95 77 00 00 01           a0 = a0 + 0x10000
124448: 01                       fallthrough
      :                          @9439
124449: 82 78                    a1 = u64 [a0]
124451: c9 87 09                 a2 = a0 - a1
124454: aa 69 07                 jump @9441 if a2 == s1
      :                          @9440
124457: 28 9d fb 00              jump @12856
      :                          @9441
124461: c9 c8 09                 a2 = a1 - a5
124464: 01                       fallthrough
      :                          @9442
124465: 82 7a                    a3 = u64 [a0]
124467: ab 8a ee                 jump @9439 if a3 != a1
      :                          @9443
124470: 7b 79                    u64 [a0] = a2
124472: 33 0b                    a4 = 0
124474: 01                       fallthrough
      :                          @9444
124475: ab 8a e6                 jump @9439 if a3 != a1
      :                          @9445
124478: 28 88 fb 00              jump @12856
      :                          @9446 [@dyn 771]
124482: 3a 09 78 12 03           a2 = u64 [0x31278]
124487: 3a 07 60 11 03           a0 = u64 [0x31160]
124492: 97 9a 0d                 a3 = a2 << 0xd
124495: d3 a9 09                 a2 = a2 ^ a3
124498: 98 9a 07                 a3 = a2 >> 0x7
124501: d3 a9 09                 a2 = a2 ^ a3
124504: 97 9a 11                 a3 = a2 << 0x11
124507: d3 a9 09                 a2 = a2 ^ a3
124510: ca 79 0a                 a3 = a2 * a0
124513: 3a 0b 68 11 03           a4 = u64 [0x31168]
124518: 3e 09 78 12 03           u64 [0x31278] = a2
124523: 98 a9 03                 a2 = a3 >> 0x3
124526: d6 b9 09                 a2 = a2 mulhu a4
124529: 98 99 04                 a2 = a2 >> 0x4
124532: 33 0b e8 03              a4 = 0x3e8
124536: ca b9 09                 a2 = a2 * a4
124539: c9 9a 0a                 a3 = a3 - a2
124542: 95 aa 02                 a3 = a3 + 0x2
124545: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
124549: 3a 09 78 12 03           a2 = u64 [0x31278]
124554: 97 9a 0d                 a3 = a2 << 0xd
124557: d3 a9 09                 a2 = a2 ^ a3
124560: 98 9a 07                 a3 = a2 >> 0x7
124563: d3 a9 09                 a2 = a2 ^ a3
124566: 97 9a 11                 a3 = a2 << 0x11
124569: d3 a9 09                 a2 = a2 ^ a3
124572: 3e 09 78 12 03           u64 [0x31278] = a2
124577: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
124581: 95 8a ff                 a3 = a1 + 0xffffffffffffffff
124584: 52 0a 07                 jump @9448 if a3 != 0
      :                          @9447
124587: 28 2f 0d 01              jump @13228
      :                          @9448
124591: ca 79 07                 a0 = a2 * a0
124594: cd a7 07                 a0 = a0 %u a3
124597: 95 77 01                 a0 = a0 + 0x1
124600: 7b 17 20 01              u64 [sp + 0x120] = a0
124604: 50 20 08 06 6d 3d ff     ra = 1544, jump @5833
      :                          @9449 [@dyn 772]
124611: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
124615: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
124619: 95 17 20 01              a0 = sp + 0x120
124623: 7b 17 90 02              u64 [sp + 0x290] = a0
124627: 33 07 28 0c              a0 = 0xc28
124631: 7b 17 98 02              u64 [sp + 0x298] = a0
124635: 95 18 c8 01              a1 = sp + 0x1c8
124639: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
124643: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
124647: 95 17 e0 01              a0 = sp + 0x1e0
124651: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
124655: 33 07 4a 02              a0 = 0x24a
124659: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
124663: 33 07 d8 0e 01           a0 = 0x10ed8
124668: 7b 17 38 02              u64 [sp + 0x238] = a0
124672: 49 21 40 02 03           u64 [sp + 576] = 0x3
124677: 49 21 58 02              u64 [sp + 600] = 0
124681: 95 18 90 02              a1 = sp + 0x290
124685: 7b 18 48 02              u64 [sp + 0x248] = a1
124689: 49 21 50 02 03           u64 [sp + 592] = 0x3
124694: 95 17 08 02              a0 = sp + 0x208
124698: 95 18 38 02              a1 = sp + 0x238
124702: 50 20 0a 06 21 68 fe     ra = 1546, jump @1491
      :                          @9450 [@dyn 773]
124709: 82 16 10 02              s1 = u64 [sp + 0x210]
124713: 82 1b 18 02              a4 = u64 [sp + 0x218]
124717: 82 17 08 02              a0 = u64 [sp + 0x208]
124721: 7b 17 70                 u64 [sp + 0x70] = a0
124724: 33 07 02                 a0 = 0x2
124727: 33 08                    a1 = 0
124729: 33 09                    a2 = 0
124731: 64 6a                    a3 = s1
124733: 33 00 0c 06              ra = 0x60c
124737: 0a 64                    ecalli 100 // 'log'
124739: 01                       fallthrough
      :                          @9451 [@dyn 774]
124740: 82 1c 70                 a5 = u64 [sp + 0x70]
124743: 82 17 68                 a0 = u64 [sp + 0x68]
124746: c8 c7 07                 a0 = a0 + a5
124749: 55 37 00 00 ff 0a        jump @9453 if a0 >=u 4294901760
      :                          @9452
124755: 28 73 fa 00              jump @12856
      :                          @9453
124759: 33 07 c0 22 03           a0 = 0x322c0
124764: 95 77 00 00 01           a0 = a0 + 0x10000
124769: 01                       fallthrough
      :                          @9454
124770: 82 78                    a1 = u64 [a0]
124772: c9 87 09                 a2 = a0 - a1
124775: aa 69 07                 jump @9456 if a2 == s1
      :                          @9455
124778: 28 5c fa 00              jump @12856
      :                          @9456
124782: c9 c8 09                 a2 = a1 - a5
124785: 01                       fallthrough
      :                          @9457
124786: 82 7a                    a3 = u64 [a0]
124788: ab 8a ee                 jump @9454 if a3 != a1
      :                          @9458
124791: 7b 79                    u64 [a0] = a2
124793: 33 0b                    a4 = 0
124795: 01                       fallthrough
      :                          @9459
124796: ab 8a e6                 jump @9454 if a3 != a1
      :                          @9460
124799: 28 47 fa 00              jump @12856
      :                          @9461 [@dyn 775]
124803: 3a 08 78 12 03           a1 = u64 [0x31278]
124808: 97 89 0d                 a2 = a1 << 0xd
124811: d3 98 08                 a1 = a1 ^ a2
124814: 98 89 07                 a2 = a1 >> 0x7
124817: d3 98 08                 a1 = a1 ^ a2
124820: 97 89 11                 a2 = a1 << 0x11
124823: d3 98 08                 a1 = a1 ^ a2
124826: 3a 09 60 11 03           a2 = u64 [0x31160]
124831: 3a 0a 70 11 03           a3 = u64 [0x31170]
124836: 3e 08 78 12 03           u64 [0x31278] = a1
124841: ca 98 07                 a0 = a1 * a2
124844: 98 78 01                 a1 = a0 >> 0x1
124847: d6 a8 08                 a1 = a1 mulhu a3
124850: 98 88 04                 a1 = a1 >> 0x4
124853: 96 88 32                 a1 = a1 * 0x32
124856: c9 87 07                 a0 = a0 - a1
124859: 86 77 01                 a0 = a0 | 0x1
124862: 95 77 02                 a0 = a0 + 0x2
124865: 7b 17 20 01              u64 [sp + 0x120] = a0
124869: 50 20 10 06 d5 a4 fe     ra = 1552, jump @2452
      :                          @9462 [@dyn 776]
124876: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
124880: 95 17 20 01              a0 = sp + 0x120
124884: 7b 17 38 02              u64 [sp + 0x238] = a0
124888: 33 07 28 0c              a0 = 0xc28
124892: 7b 17 40 02              u64 [sp + 0x240] = a0
124896: 95 17 e0 01              a0 = sp + 0x1e0
124900: 7b 17 48 02              u64 [sp + 0x248] = a0
124904: 33 07 78                 a0 = 0x78
124907: 7b 17 50 02              u64 [sp + 0x250] = a0
124911: 33 07 18 0f 01           a0 = 0x10f18
124916: 7b 17 90 02              u64 [sp + 0x290] = a0
124920: 49 21 98 02 02           u64 [sp + 664] = 0x2
124925: 49 21 b0 02              u64 [sp + 688] = 0
124929: 95 18 38 02              a1 = sp + 0x238
124933: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
124937: 49 21 a8 02 02           u64 [sp + 680] = 0x2
124942: 95 17 08 02              a0 = sp + 0x208
124946: 95 18 90 02              a1 = sp + 0x290
124950: 50 20 12 06 29 67 fe     ra = 1554, jump @1491
      :                          @9463 [@dyn 777]
124957: 82 16 10 02              s1 = u64 [sp + 0x210]
124961: 82 1b 18 02              a4 = u64 [sp + 0x218]
124965: 82 17 08 02              a0 = u64 [sp + 0x208]
124969: 7b 17 70                 u64 [sp + 0x70] = a0
124972: 33 07 02                 a0 = 0x2
124975: 33 08                    a1 = 0
124977: 33 09                    a2 = 0
124979: 64 6a                    a3 = s1
124981: 33 00 14 06              ra = 0x614
124985: 0a 64                    ecalli 100 // 'log'
124987: 01                       fallthrough
      :                          @9464 [@dyn 778]
124988: 82 1c 70                 a5 = u64 [sp + 0x70]
124991: 82 17 68                 a0 = u64 [sp + 0x68]
124994: c8 c7 07                 a0 = a0 + a5
124997: 55 37 00 00 ff 0a        jump @9466 if a0 >=u 4294901760
      :                          @9465
125003: 28 7b f9 00              jump @12856
      :                          @9466
125007: 33 07 c0 22 03           a0 = 0x322c0
125012: 95 77 00 00 01           a0 = a0 + 0x10000
125017: 01                       fallthrough
      :                          @9467
125018: 82 78                    a1 = u64 [a0]
125020: c9 87 09                 a2 = a0 - a1
125023: aa 69 07                 jump @9469 if a2 == s1
      :                          @9468
125026: 28 64 f9 00              jump @12856
      :                          @9469
125030: c9 c8 09                 a2 = a1 - a5
125033: 01                       fallthrough
      :                          @9470
125034: 82 7a                    a3 = u64 [a0]
125036: ab 8a ee                 jump @9467 if a3 != a1
      :                          @9471
125039: 7b 79                    u64 [a0] = a2
125041: 33 0b                    a4 = 0
125043: 01                       fallthrough
      :                          @9472
125044: ab 8a e6                 jump @9467 if a3 != a1
      :                          @9473
125047: 28 4f f9 00              jump @12856
      :                          @9474 [@dyn 779]
125051: 3a 08 78 12 03           a1 = u64 [0x31278]
125056: 97 89 0d                 a2 = a1 << 0xd
125059: d3 98 08                 a1 = a1 ^ a2
125062: 98 89 07                 a2 = a1 >> 0x7
125065: 3a 0a 60 11 03           a3 = u64 [0x31160]
125070: d3 98 08                 a1 = a1 ^ a2
125073: 97 89 11                 a2 = a1 << 0x11
125076: d3 98 08                 a1 = a1 ^ a2
125079: ca a8 09                 a2 = a1 * a3
125082: 3a 0a 70 11 03           a3 = u64 [0x31170]
125087: 3e 08 78 12 03           u64 [0x31278] = a1
125092: 98 97 01                 a0 = a2 >> 0x1
125095: d6 a7 07                 a0 = a0 mulhu a3
125098: 98 77 04                 a0 = a0 >> 0x4
125101: 96 77 32                 a0 = a0 * 0x32
125104: c9 79 09                 a2 = a2 - a0
125107: 86 97 01                 a0 = a2 | 0x1
125110: 95 78 02                 a1 = a0 + 0x2
125113: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
125117: 9a 76                    s1 = -a0
125119: 33 0a 01                 a3 = 0x1
125122: 33 0b 02                 a4 = 0x2
125125: 33 0c 01                 a5 = 0x1
125128: 01                       fallthrough
      :                          @9475
125129: ca ac 0a                 a3 = a5 * a3
125132: 95 cc 01                 a5 = a5 + 0x1
125135: c8 c6 09                 a2 = s1 + a5
125138: cd 8a 0a                 a3 = a3 %u a1
125141: ab b9 f4                 jump @9475 if a2 != a4
      :                          @9476
125144: 95 77 01                 a0 = a0 + 0x1
125147: d3 a7 07                 a0 = a0 ^ a3
125150: 88 77 01                 a0 = a0 <u 0x1
125153: 78 17 20 01              u8 [sp + 0x120] = a0
125157: 95 17 e0 01              a0 = sp + 0x1e0
125161: 7b 17 38 02              u64 [sp + 0x238] = a0
125165: 33 07 28 0c              a0 = 0xc28
125169: 7b 17 40 02              u64 [sp + 0x240] = a0
125173: 95 17 20 01              a0 = sp + 0x120
125177: 7b 17 48 02              u64 [sp + 0x248] = a0
125181: 33 07 80 0c              a0 = 0xc80
125185: 7b 17 50 02              u64 [sp + 0x250] = a0
125189: 33 07 38 0f 01           a0 = 0x10f38
125194: 7b 17 90 02              u64 [sp + 0x290] = a0
125198: 49 21 98 02 02           u64 [sp + 664] = 0x2
125203: 49 21 b0 02              u64 [sp + 688] = 0
125207: 95 18 38 02              a1 = sp + 0x238
125211: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
125215: 49 21 a8 02 02           u64 [sp + 680] = 0x2
125220: 95 17 08 02              a0 = sp + 0x208
125224: 95 18 90 02              a1 = sp + 0x290
125228: 50 20 18 06 13 66 fe     ra = 1560, jump @1491
      :                          @9477 [@dyn 780]
125235: 82 16 10 02              s1 = u64 [sp + 0x210]
125239: 82 1b 18 02              a4 = u64 [sp + 0x218]
125243: 82 17 08 02              a0 = u64 [sp + 0x208]
125247: 7b 17 70                 u64 [sp + 0x70] = a0
125250: 33 07 02                 a0 = 0x2
125253: 33 08                    a1 = 0
125255: 33 09                    a2 = 0
125257: 64 6a                    a3 = s1
125259: 33 00 1a 06              ra = 0x61a
125263: 0a 64                    ecalli 100 // 'log'
125265: 01                       fallthrough
      :                          @9478 [@dyn 781]
125266: 82 1c 70                 a5 = u64 [sp + 0x70]
125269: 82 17 68                 a0 = u64 [sp + 0x68]
125272: c8 c7 07                 a0 = a0 + a5
125275: 55 37 00 00 ff 0a        jump @9480 if a0 >=u 4294901760
      :                          @9479
125281: 28 65 f8 00              jump @12856
      :                          @9480
125285: 33 07 c0 22 03           a0 = 0x322c0
125290: 95 77 00 00 01           a0 = a0 + 0x10000
125295: 01                       fallthrough
      :                          @9481
125296: 82 78                    a1 = u64 [a0]
125298: c9 87 09                 a2 = a0 - a1
125301: aa 69 07                 jump @9483 if a2 == s1
      :                          @9482
125304: 28 4e f8 00              jump @12856
      :                          @9483
125308: c9 c8 09                 a2 = a1 - a5
125311: 01                       fallthrough
      :                          @9484
125312: 82 7a                    a3 = u64 [a0]
125314: ab 8a ee                 jump @9481 if a3 != a1
      :                          @9485
125317: 7b 79                    u64 [a0] = a2
125319: 33 0b                    a4 = 0
125321: 01                       fallthrough
      :                          @9486
125322: ab 8a e6                 jump @9481 if a3 != a1
      :                          @9487
125325: 28 39 f8 00              jump @12856
      :                          @9488 [@dyn 782]
125329: 3a 08 78 12 03           a1 = u64 [0x31278]
125334: 97 89 0d                 a2 = a1 << 0xd
125337: d3 98 08                 a1 = a1 ^ a2
125340: 98 89 07                 a2 = a1 >> 0x7
125343: d3 98 08                 a1 = a1 ^ a2
125346: 97 89 11                 a2 = a1 << 0x11
125349: d3 98 08                 a1 = a1 ^ a2
125352: 3a 09 60 11 03           a2 = u64 [0x31160]
125357: 3a 0a 68 11 03           a3 = u64 [0x31168]
125362: 3e 08 78 12 03           u64 [0x31278] = a1
125367: ca 98 07                 a0 = a1 * a2
125370: 98 78 03                 a1 = a0 >> 0x3
125373: d6 a8 08                 a1 = a1 mulhu a3
125376: 98 88 04                 a1 = a1 >> 0x4
125379: 96 88 e8 03              a1 = a1 * 0x3e8
125383: c9 87 07                 a0 = a0 - a1
125386: 95 77 03                 a0 = a0 + 0x3
125389: 86 77 01                 a0 = a0 | 0x1
125392: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
125396: 50 20 1e 06 ac 3a ff     ra = 1566, jump @5845
      :                          @9489 [@dyn 783]
125403: 78 17 20 01              u8 [sp + 0x120] = a0
125407: 95 17 e0 01              a0 = sp + 0x1e0
125411: 7b 17 38 02              u64 [sp + 0x238] = a0
125415: 33 07 28 0c              a0 = 0xc28
125419: 7b 17 40 02              u64 [sp + 0x240] = a0
125423: 95 17 20 01              a0 = sp + 0x120
125427: 7b 17 48 02              u64 [sp + 0x248] = a0
125431: 33 07 80 0c              a0 = 0xc80
125435: 7b 17 50 02              u64 [sp + 0x250] = a0
125439: 33 07 70 0f 01           a0 = 0x10f70
125444: 7b 17 90 02              u64 [sp + 0x290] = a0
125448: 49 21 98 02 02           u64 [sp + 664] = 0x2
125453: 49 21 b0 02              u64 [sp + 688] = 0
125457: 95 18 38 02              a1 = sp + 0x238
125461: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
125465: 49 21 a8 02 02           u64 [sp + 680] = 0x2
125470: 95 17 08 02              a0 = sp + 0x208
125474: 95 18 90 02              a1 = sp + 0x290
125478: 50 20 20 06 19 65 fe     ra = 1568, jump @1491
      :                          @9490 [@dyn 784]
125485: 82 16 10 02              s1 = u64 [sp + 0x210]
125489: 82 1b 18 02              a4 = u64 [sp + 0x218]
125493: 82 17 08 02              a0 = u64 [sp + 0x208]
125497: 7b 17 70                 u64 [sp + 0x70] = a0
125500: 33 07 02                 a0 = 0x2
125503: 33 08                    a1 = 0
125505: 33 09                    a2 = 0
125507: 64 6a                    a3 = s1
125509: 33 00 22 06              ra = 0x622
125513: 0a 64                    ecalli 100 // 'log'
125515: 01                       fallthrough
      :                          @9491 [@dyn 785]
125516: 82 1c 70                 a5 = u64 [sp + 0x70]
125519: 82 17 68                 a0 = u64 [sp + 0x68]
125522: c8 c7 07                 a0 = a0 + a5
125525: 55 37 00 00 ff 0a        jump @9493 if a0 >=u 4294901760
      :                          @9492
125531: 28 6b f7 00              jump @12856
      :                          @9493
125535: 33 07 c0 22 03           a0 = 0x322c0
125540: 95 77 00 00 01           a0 = a0 + 0x10000
125545: 01                       fallthrough
      :                          @9494
125546: 82 78                    a1 = u64 [a0]
125548: c9 87 09                 a2 = a0 - a1
125551: aa 69 07                 jump @9496 if a2 == s1
      :                          @9495
125554: 28 54 f7 00              jump @12856
      :                          @9496
125558: c9 c8 09                 a2 = a1 - a5
125561: 01                       fallthrough
      :                          @9497
125562: 82 7a                    a3 = u64 [a0]
125564: ab 8a ee                 jump @9494 if a3 != a1
      :                          @9498
125567: 7b 79                    u64 [a0] = a2
125569: 33 0b                    a4 = 0
125571: 01                       fallthrough
      :                          @9499
125572: ab 8a e6                 jump @9494 if a3 != a1
      :                          @9500
125575: 28 3f f7 00              jump @12856
      :                          @9501 [@dyn 786]
125579: 3a 08 78 12 03           a1 = u64 [0x31278]
125584: 97 89 0d                 a2 = a1 << 0xd
125587: d3 98 08                 a1 = a1 ^ a2
125590: 98 89 07                 a2 = a1 >> 0x7
125593: d3 98 08                 a1 = a1 ^ a2
125596: 97 89 11                 a2 = a1 << 0x11
125599: d3 98 08                 a1 = a1 ^ a2
125602: 3a 09 60 11 03           a2 = u64 [0x31160]
125607: 3a 0a 68 11 03           a3 = u64 [0x31168]
125612: 3e 08 78 12 03           u64 [0x31278] = a1
125617: ca 98 07                 a0 = a1 * a2
125620: 98 78 02                 a1 = a0 >> 0x2
125623: d6 a8 08                 a1 = a1 mulhu a3
125626: 98 88 04                 a1 = a1 >> 0x4
125629: 96 88 f4 01              a1 = a1 * 0x1f4
125633: c9 87 07                 a0 = a0 - a1
125636: 97 77 01                 a0 = a0 << 0x1
125639: 95 78 09                 a1 = a0 + 0x9
125642: 7b 18 20 01              u64 [sp + 0x120] = a1
125646: 95 17 08 02              a0 = sp + 0x208
125650: 95 16 08 02              s1 = sp + 0x208
125654: 33 00 26 06              ra = 0x626
125658: 95 11 f0                 sp = sp + 0xfffffffffffffff0
125661: 7b 15 08                 u64 [sp + 0x8] = s0
125664: 33 0a                    a3 = 0
125666: 33 03 ff                 t1 = 0xffffffffffffffff
125669: 64 82                    t0 = a1
125671: 28 c5 3a ff              jump @5867
      :                          @9502 [@dyn 787]
125675: 95 17 20 01              a0 = sp + 0x120
125679: 7b 17 38 02              u64 [sp + 0x238] = a0
125683: 33 07 28 0c              a0 = 0xc28
125687: 7b 17 40 02              u64 [sp + 0x240] = a0
125691: 7b 16 48 02              u64 [sp + 0x248] = s1
125695: 33 07 68 02              a0 = 0x268
125699: 7b 17 50 02              u64 [sp + 0x250] = a0
125703: 33 07 a0 0f 01           a0 = 0x10fa0
125708: 7b 17 90 02              u64 [sp + 0x290] = a0
125712: 49 21 98 02 02           u64 [sp + 664] = 0x2
125717: 49 21 b0 02              u64 [sp + 688] = 0
125721: 95 18 38 02              a1 = sp + 0x238
125725: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
125729: 49 21 a8 02 02           u64 [sp + 680] = 0x2
125734: 95 17 e0 01              a0 = sp + 0x1e0
125738: 95 18 90 02              a1 = sp + 0x290
125742: 50 20 28 06 11 64 fe     ra = 1576, jump @1491
      :                          @9503 [@dyn 788]
125749: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
125753: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
125757: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
125761: 7b 17 70                 u64 [sp + 0x70] = a0
125764: 33 07 02                 a0 = 0x2
125767: 33 08                    a1 = 0
125769: 33 09                    a2 = 0
125771: 64 6a                    a3 = s1
125773: 33 00 2a 06              ra = 0x62a
125777: 0a 64                    ecalli 100 // 'log'
125779: 01                       fallthrough
      :                          @9504 [@dyn 789]
125780: 82 1c 70                 a5 = u64 [sp + 0x70]
125783: 82 17 68                 a0 = u64 [sp + 0x68]
125786: c8 c7 07                 a0 = a0 + a5
125789: 55 37 00 00 ff 0a        jump @9506 if a0 >=u 4294901760
      :                          @9505
125795: 28 63 f6 00              jump @12856
      :                          @9506
125799: 33 07 c0 22 03           a0 = 0x322c0
125804: 95 77 00 00 01           a0 = a0 + 0x10000
125809: 01                       fallthrough
      :                          @9507
125810: 82 78                    a1 = u64 [a0]
125812: c9 87 09                 a2 = a0 - a1
125815: aa 69 07                 jump @9509 if a2 == s1
      :                          @9508
125818: 28 4c f6 00              jump @12856
      :                          @9509
125822: c9 c8 09                 a2 = a1 - a5
125825: 01                       fallthrough
      :                          @9510
125826: 82 7a                    a3 = u64 [a0]
125828: ab 8a ee                 jump @9507 if a3 != a1
      :                          @9511
125831: 7b 79                    u64 [a0] = a2
125833: 33 0b                    a4 = 0
125835: 01                       fallthrough
      :                          @9512
125836: ab 8a e6                 jump @9507 if a3 != a1
      :                          @9513
125839: 28 37 f6 00              jump @12856
      :                          @9514 [@dyn 790]
125843: 3a 08 78 12 03           a1 = u64 [0x31278]
125848: 97 89 0d                 a2 = a1 << 0xd
125851: d3 98 08                 a1 = a1 ^ a2
125854: 98 89 07                 a2 = a1 >> 0x7
125857: d3 98 08                 a1 = a1 ^ a2
125860: 97 89 11                 a2 = a1 << 0x11
125863: d3 98 08                 a1 = a1 ^ a2
125866: 3a 09 60 11 03           a2 = u64 [0x31160]
125871: 3a 0a 68 11 03           a3 = u64 [0x31168]
125876: 3e 08 78 12 03           u64 [0x31278] = a1
125881: ca 98 07                 a0 = a1 * a2
125884: 98 78 03                 a1 = a0 >> 0x3
125887: d6 a8 08                 a1 = a1 mulhu a3
125890: 98 88 04                 a1 = a1 >> 0x4
125893: 96 88 e8 03              a1 = a1 * 0x3e8
125897: c9 87 07                 a0 = a0 - a1
125900: 95 78 02                 a1 = a0 + 0x2
125903: 7b 18 20 01              u64 [sp + 0x120] = a1
125907: 95 17 08 02              a0 = sp + 0x208
125911: 95 16 08 02              s1 = sp + 0x208
125915: 50 20 2e 06 54 3a ff     ra = 1582, jump @5877
      :                          @9515 [@dyn 791]
125922: 95 17 20 01              a0 = sp + 0x120
125926: 7b 17 38 02              u64 [sp + 0x238] = a0
125930: 33 07 28 0c              a0 = 0xc28
125934: 7b 17 40 02              u64 [sp + 0x240] = a0
125938: 7b 16 48 02              u64 [sp + 0x248] = s1
125942: 33 07 20 02              a0 = 0x220
125946: 7b 17 50 02              u64 [sp + 0x250] = a0
125950: 33 07 d8 0f 01           a0 = 0x10fd8
125955: 7b 17 90 02              u64 [sp + 0x290] = a0
125959: 49 21 98 02 02           u64 [sp + 664] = 0x2
125964: 49 21 b0 02              u64 [sp + 688] = 0
125968: 95 18 38 02              a1 = sp + 0x238
125972: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
125976: 49 21 a8 02 02           u64 [sp + 680] = 0x2
125981: 95 17 e0 01              a0 = sp + 0x1e0
125985: 95 18 90 02              a1 = sp + 0x290
125989: 50 20 30 06 1a 63 fe     ra = 1584, jump @1491
      :                          @9516 [@dyn 792]
125996: 82 18 08 02              a1 = u64 [sp + 0x208]
126000: 51 08 2e                 jump @9523 if a1 == 0
      :                          @9517
126003: 56 28 00 20 2b           jump @9523 if a1 >u 8192
      :                          @9518
126008: 82 17 10 02              a0 = u64 [sp + 0x210]
126012: 97 88 03                 a1 = a1 << 0x3
126015: 33 09 c0 22 03           a2 = 0x322c0
126020: 95 99 00 00 01           a2 = a2 + 0x10000
126025: 01                       fallthrough
      :                          @9519
126026: 82 9a                    a3 = u64 [a2]
126028: c9 a9 0b                 a4 = a2 - a3
126031: ab 7b 0f                 jump @9523 if a4 != a0
      :                          @9520
126034: c9 8a 0b                 a4 = a3 - a1
126037: 01                       fallthrough
      :                          @9521
126038: 82 9c                    a5 = u64 [a2]
126040: ab ac f2                 jump @9519 if a5 != a3
      :                          @9522
126043: 7b 9b                    u64 [a2] = a4
126045: 01                       fallthrough
      :                          @9523
126046: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
126050: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
126054: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
126058: 7b 17 70                 u64 [sp + 0x70] = a0
126061: 33 07 02                 a0 = 0x2
126064: 33 08                    a1 = 0
126066: 33 09                    a2 = 0
126068: 64 6a                    a3 = s1
126070: 33 00 32 06              ra = 0x632
126074: 0a 64                    ecalli 100 // 'log'
126076: 01                       fallthrough
      :                          @9524 [@dyn 793]
126077: 82 1c 70                 a5 = u64 [sp + 0x70]
126080: 82 17 68                 a0 = u64 [sp + 0x68]
126083: c8 c7 07                 a0 = a0 + a5
126086: 55 37 00 00 ff 0a        jump @9526 if a0 >=u 4294901760
      :                          @9525
126092: 28 3a f5 00              jump @12856
      :                          @9526
126096: 33 07 c0 22 03           a0 = 0x322c0
126101: 95 77 00 00 01           a0 = a0 + 0x10000
126106: 01                       fallthrough
      :                          @9527
126107: 82 78                    a1 = u64 [a0]
126109: c9 87 09                 a2 = a0 - a1
126112: aa 69 07                 jump @9529 if a2 == s1
      :                          @9528
126115: 28 23 f5 00              jump @12856
      :                          @9529
126119: c9 c8 09                 a2 = a1 - a5
126122: 01                       fallthrough
      :                          @9530
126123: 82 7a                    a3 = u64 [a0]
126125: ab 8a ee                 jump @9527 if a3 != a1
      :                          @9531
126128: 7b 79                    u64 [a0] = a2
126130: 33 0b                    a4 = 0
126132: 01                       fallthrough
      :                          @9532
126133: ab 8a e6                 jump @9527 if a3 != a1
      :                          @9533
126136: 28 0e f5 00              jump @12856
      :                          @9534 [@dyn 794]
126140: 3a 08 78 12 03           a1 = u64 [0x31278]
126145: 97 89 0d                 a2 = a1 << 0xd
126148: d3 98 08                 a1 = a1 ^ a2
126151: 98 89 07                 a2 = a1 >> 0x7
126154: d3 98 08                 a1 = a1 ^ a2
126157: 97 89 11                 a2 = a1 << 0x11
126160: d3 98 08                 a1 = a1 ^ a2
126163: 3a 09 60 11 03           a2 = u64 [0x31160]
126168: 3a 0a 68 11 03           a3 = u64 [0x31168]
126173: 3e 08 78 12 03           u64 [0x31278] = a1
126178: ca 98 07                 a0 = a1 * a2
126181: 98 78 03                 a1 = a0 >> 0x3
126184: d6 a8 08                 a1 = a1 mulhu a3
126187: 98 88 04                 a1 = a1 >> 0x4
126190: 96 88 e8 03              a1 = a1 * 0x3e8
126194: c9 87 07                 a0 = a0 - a1
126197: 95 77 03                 a0 = a0 + 0x3
126200: 86 77 01                 a0 = a0 | 0x1
126203: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
126207: 33 00 36 06              ra = 0x636
126211: 95 11 a0                 sp = sp + 0xffffffffffffffa0
126214: 7b 10 58                 u64 [sp + 0x58] = ra
126217: 7b 15 50                 u64 [sp + 0x50] = s0
126220: 7b 16 48                 u64 [sp + 0x48] = s1
126223: 7b 17 18                 u64 [sp + 0x18] = a0
126226: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
126229: 95 17 30                 a0 = sp + 0x30
126232: 7b 18 28                 u64 [sp + 0x28] = a1
126235: 33 00 b8 03              ra = 0x3b8
126239: 28 10 39 ff              jump @5877
      :                          @9535 [@dyn 795]
126243: 78 17 20 01              u8 [sp + 0x120] = a0
126247: 95 17 e0 01              a0 = sp + 0x1e0
126251: 7b 17 38 02              u64 [sp + 0x238] = a0
126255: 33 07 28 0c              a0 = 0xc28
126259: 7b 17 40 02              u64 [sp + 0x240] = a0
126263: 95 17 20 01              a0 = sp + 0x120
126267: 7b 17 48 02              u64 [sp + 0x248] = a0
126271: 33 07 80 0c              a0 = 0xc80
126275: 7b 17 50 02              u64 [sp + 0x250] = a0
126279: 33 07 08 10 01           a0 = 0x11008
126284: 7b 17 90 02              u64 [sp + 0x290] = a0
126288: 49 21 98 02 02           u64 [sp + 664] = 0x2
126293: 49 21 b0 02              u64 [sp + 688] = 0
126297: 95 18 38 02              a1 = sp + 0x238
126301: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
126305: 49 21 a8 02 02           u64 [sp + 680] = 0x2
126310: 95 17 08 02              a0 = sp + 0x208
126314: 95 18 90 02              a1 = sp + 0x290
126318: 50 20 38 06 d1 61 fe     ra = 1592, jump @1491
      :                          @9536 [@dyn 796]
126325: 82 16 10 02              s1 = u64 [sp + 0x210]
126329: 82 1b 18 02              a4 = u64 [sp + 0x218]
126333: 82 17 08 02              a0 = u64 [sp + 0x208]
126337: 7b 17 70                 u64 [sp + 0x70] = a0
126340: 33 07 02                 a0 = 0x2
126343: 33 08                    a1 = 0
126345: 33 09                    a2 = 0
126347: 64 6a                    a3 = s1
126349: 33 00 3a 06              ra = 0x63a
126353: 0a 64                    ecalli 100 // 'log'
126355: 01                       fallthrough
      :                          @9537 [@dyn 797]
126356: 82 1c 70                 a5 = u64 [sp + 0x70]
126359: 82 17 68                 a0 = u64 [sp + 0x68]
126362: c8 c7 07                 a0 = a0 + a5
126365: 55 37 00 00 ff 0a        jump @9539 if a0 >=u 4294901760
      :                          @9538
126371: 28 23 f4 00              jump @12856
      :                          @9539
126375: 33 07 c0 22 03           a0 = 0x322c0
126380: 95 77 00 00 01           a0 = a0 + 0x10000
126385: 01                       fallthrough
      :                          @9540
126386: 82 78                    a1 = u64 [a0]
126388: c9 87 09                 a2 = a0 - a1
126391: aa 69 07                 jump @9542 if a2 == s1
      :                          @9541
126394: 28 0c f4 00              jump @12856
      :                          @9542
126398: c9 c8 09                 a2 = a1 - a5
126401: 01                       fallthrough
      :                          @9543
126402: 82 7a                    a3 = u64 [a0]
126404: ab 8a ee                 jump @9540 if a3 != a1
      :                          @9544
126407: 7b 79                    u64 [a0] = a2
126409: 33 0b                    a4 = 0
126411: 01                       fallthrough
      :                          @9545
126412: ab 8a e6                 jump @9540 if a3 != a1
      :                          @9546
126415: 28 f7 f3 00              jump @12856
      :                          @9547 [@dyn 798]
126419: 33 00 3e 06              ra = 0x63e
126423: 95 11 f0                 sp = sp + 0xfffffffffffffff0
126426: 7b 15 08                 u64 [sp + 0x8] = s0
126429: 3a 07 78 12 03           a0 = u64 [0x31278]
126434: 97 79 0d                 a2 = a0 << 0xd
126437: d3 97 07                 a0 = a0 ^ a2
126440: 98 79 07                 a2 = a0 >> 0x7
126443: d3 97 07                 a0 = a0 ^ a2
126446: 97 79 11                 a2 = a0 << 0x11
126449: d3 79 02                 t0 = a2 ^ a0
126452: 3e 02 78 12 03           u64 [0x31278] = t0
126457: 3a 07 78 12 03           a0 = u64 [0x31278]
126462: 3a 03 e8 10 03           t1 = u64 [0x310e8]
126467: 97 7a 0d                 a3 = a0 << 0xd
126470: d3 a7 07                 a0 = a0 ^ a3
126473: 98 7a 07                 a3 = a0 >> 0x7
126476: d3 a7 07                 a0 = a0 ^ a3
126479: 97 7a 11                 a3 = a0 << 0x11
126482: d3 a7 07                 a0 = a0 ^ a3
126485: 3a 0a f0 10 03           a3 = u64 [0x310f0]
126490: ca 37 0b                 a4 = a0 * t1
126493: 3e 07 78 12 03           u64 [0x31278] = a0
126498: d6 ab 07                 a0 = a4 mulhu a3
126501: c9 7b 08                 a1 = a4 - a0
126504: 98 88 01                 a1 = a1 >> 0x1
126507: c8 87 07                 a0 = a0 + a1
126510: 98 77 04                 a0 = a0 >> 0x4
126513: 33 08 15                 a1 = 0x15
126516: ca 87 07                 a0 = a0 * a1
126519: c9 7b 0a                 a3 = a4 - a0
126522: 95 aa 01                 a3 = a3 + 0x1
126525: 3a 0b f8 10 03           a4 = u64 [0x310f8]
126530: 33 05 01                 s0 = 0x1
126533: 33 0c 05                 a5 = 0x5
126536: 33 04 17                 t2 = 0x17
126539: 28 a7 3b ff              jump @5972
      :                          @9548 [@dyn 799]
126543: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
126547: 95 17 e0 01              a0 = sp + 0x1e0
126551: 7b 17 08 02              u64 [sp + 0x208] = a0
126555: 33 07 28 0c              a0 = 0xc28
126559: 7b 17 10 02              u64 [sp + 0x210] = a0
126563: 33 07 f8 2f 01           a0 = 0x12ff8
126568: 7b 17 90 02              u64 [sp + 0x290] = a0
126572: 49 21 98 02 01           u64 [sp + 664] = 0x1
126577: 49 21 b0 02              u64 [sp + 688] = 0
126581: 95 18 08 02              a1 = sp + 0x208
126585: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
126589: 49 21 a8 02 01           u64 [sp + 680] = 0x1
126594: 95 17 38 02              a0 = sp + 0x238
126598: 95 18 90 02              a1 = sp + 0x290
126602: 50 20 40 06 b5 60 fe     ra = 1600, jump @1491
      :                          @9549 [@dyn 800]
126609: 82 16 40 02              s1 = u64 [sp + 0x240]
126613: 82 1b 48 02              a4 = u64 [sp + 0x248]
126617: 82 17 38 02              a0 = u64 [sp + 0x238]
126621: 7b 17 70                 u64 [sp + 0x70] = a0
126624: 33 07 02                 a0 = 0x2
126627: 33 08                    a1 = 0
126629: 33 09                    a2 = 0
126631: 64 6a                    a3 = s1
126633: 33 00 42 06              ra = 0x642
126637: 0a 64                    ecalli 100 // 'log'
126639: 01                       fallthrough
      :                          @9550 [@dyn 801]
126640: 82 1c 70                 a5 = u64 [sp + 0x70]
126643: 82 17 68                 a0 = u64 [sp + 0x68]
126646: c8 c7 07                 a0 = a0 + a5
126649: 55 37 00 00 ff 0a        jump @9552 if a0 >=u 4294901760
      :                          @9551
126655: 28 07 f3 00              jump @12856
      :                          @9552
126659: 33 07 c0 22 03           a0 = 0x322c0
126664: 95 77 00 00 01           a0 = a0 + 0x10000
126669: 01                       fallthrough
      :                          @9553
126670: 82 78                    a1 = u64 [a0]
126672: c9 87 09                 a2 = a0 - a1
126675: aa 69 07                 jump @9555 if a2 == s1
      :                          @9554
126678: 28 f0 f2 00              jump @12856
      :                          @9555
126682: c9 c8 09                 a2 = a1 - a5
126685: 01                       fallthrough
      :                          @9556
126686: 82 7a                    a3 = u64 [a0]
126688: ab 8a ee                 jump @9553 if a3 != a1
      :                          @9557
126691: 7b 79                    u64 [a0] = a2
126693: 33 0b                    a4 = 0
126695: 01                       fallthrough
      :                          @9558
126696: ab 8a e6                 jump @9553 if a3 != a1
      :                          @9559
126699: 28 db f2 00              jump @12856
      :                          @9560 [@dyn 802]
126703: 3a 08 78 12 03           a1 = u64 [0x31278]
126708: 97 89 0d                 a2 = a1 << 0xd
126711: d3 98 08                 a1 = a1 ^ a2
126714: 98 89 07                 a2 = a1 >> 0x7
126717: d3 98 08                 a1 = a1 ^ a2
126720: 97 89 11                 a2 = a1 << 0x11
126723: d3 98 08                 a1 = a1 ^ a2
126726: 3a 09 60 11 03           a2 = u64 [0x31160]
126731: 3a 0a 68 11 03           a3 = u64 [0x31168]
126736: 3e 08 78 12 03           u64 [0x31278] = a1
126741: ca 98 07                 a0 = a1 * a2
126744: 98 78 03                 a1 = a0 >> 0x3
126747: d6 a8 08                 a1 = a1 mulhu a3
126750: 98 88 04                 a1 = a1 >> 0x4
126753: 96 88 e8 03              a1 = a1 * 0x3e8
126757: c9 87 08                 a1 = a0 - a1
126760: 7b 18 20 01              u64 [sp + 0x120] = a1
126764: 95 17 e0 01              a0 = sp + 0x1e0
126768: 95 16 e0 01              s1 = sp + 0x1e0
126772: 33 00 46 06              ra = 0x646
126776: 95 11 b8                 sp = sp + 0xffffffffffffffb8
126779: 7b 10 40                 u64 [sp + 0x40] = ra
126782: 7b 15 38                 u64 [sp + 0x38] = s0
126785: 7b 16 30                 u64 [sp + 0x30] = s1
126788: 64 74                    t2 = a0
126790: 33 07 c0 22 03           a0 = 0x322c0
126795: 33 03 c0 22 03           t1 = 0x322c0
126800: 33 02 00 00 01           t0 = 0x10000
126805: c8 23 0a                 a3 = t1 + t0
126808: 28 42 3b ff              jump @5979
      :                          @9561 [@dyn 803]
126812: 95 17 20 01              a0 = sp + 0x120
126816: 7b 17 38 02              u64 [sp + 0x238] = a0
126820: 33 07 28 0c              a0 = 0xc28
126824: 7b 17 40 02              u64 [sp + 0x240] = a0
126828: 7b 16 48 02              u64 [sp + 0x248] = s1
126832: 33 07 10 02              a0 = 0x210
126836: 7b 17 50 02              u64 [sp + 0x250] = a0
126840: 33 07 30 10 01           a0 = 0x11030
126845: 7b 17 90 02              u64 [sp + 0x290] = a0
126849: 49 21 98 02 02           u64 [sp + 664] = 0x2
126854: 49 21 b0 02              u64 [sp + 688] = 0
126858: 95 18 38 02              a1 = sp + 0x238
126862: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
126866: 49 21 a8 02 02           u64 [sp + 680] = 0x2
126871: 95 17 08 02              a0 = sp + 0x208
126875: 95 18 90 02              a1 = sp + 0x290
126879: 50 20 48 06 a0 5f fe     ra = 1608, jump @1491
      :                          @9562 [@dyn 804]
126886: 82 16 10 02              s1 = u64 [sp + 0x210]
126890: 82 1b 18 02              a4 = u64 [sp + 0x218]
126894: 82 17 08 02              a0 = u64 [sp + 0x208]
126898: 7b 17 70                 u64 [sp + 0x70] = a0
126901: 33 07 02                 a0 = 0x2
126904: 33 08                    a1 = 0
126906: 33 09                    a2 = 0
126908: 64 6a                    a3 = s1
126910: 33 00 4a 06              ra = 0x64a
126914: 0a 64                    ecalli 100 // 'log'
126916: 01                       fallthrough
      :                          @9563 [@dyn 805]
126917: 82 1c 70                 a5 = u64 [sp + 0x70]
126920: 82 17 68                 a0 = u64 [sp + 0x68]
126923: c8 c7 07                 a0 = a0 + a5
126926: 53 37 00 00 ff 25        jump @9569 if a0 <u 4294901760
      :                          @9564
126932: 33 07 c0 22 03           a0 = 0x322c0
126937: 95 77 00 00 01           a0 = a0 + 0x10000
126942: 01                       fallthrough
      :                          @9565
126943: 82 78                    a1 = u64 [a0]
126945: c9 87 09                 a2 = a0 - a1
126948: ab 69 0f                 jump @9569 if a2 != s1
      :                          @9566
126951: c9 c8 09                 a2 = a1 - a5
126954: 01                       fallthrough
      :                          @9567
126955: 82 7a                    a3 = u64 [a0]
126957: ab 8a f2                 jump @9565 if a3 != a1
      :                          @9568
126960: 7b 79                    u64 [a0] = a2
126962: 01                       fallthrough
      :                          @9569
126963: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
126967: 52 08 07                 jump @9571 if a1 != 0
      :                          @9570
126970: 28 cc f1 00              jump @12856
      :                          @9571
126974: 54 28 00 10 09           jump @9573 if a1 <=u 4096
      :                          @9572
126979: 28 c3 f1 00              jump @12856
      :                          @9573
126983: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
126987: 97 88 04                 a1 = a1 << 0x4
126990: 33 09 c0 22 03           a2 = 0x322c0
126995: 95 99 00 00 01           a2 = a2 + 0x10000
127000: 01                       fallthrough
      :                          @9574
127001: 82 9a                    a3 = u64 [a2]
127003: c9 a9 0b                 a4 = a2 - a3
127006: aa 7b 07                 jump @9576 if a4 == a0
      :                          @9575
127009: 28 a5 f1 00              jump @12856
      :                          @9576
127013: c9 8a 0b                 a4 = a3 - a1
127016: 01                       fallthrough
      :                          @9577
127017: 82 9c                    a5 = u64 [a2]
127019: ab ac ee                 jump @9574 if a5 != a3
      :                          @9578
127022: 7b 9b                    u64 [a2] = a4
127024: 33 06                    s1 = 0
127026: 01                       fallthrough
      :                          @9579
127027: ab ac e6                 jump @9574 if a5 != a3
      :                          @9580
127030: 28 90 f1 00              jump @12856
      :                          @9581 [@dyn 806]
127034: 3a 08 78 12 03           a1 = u64 [0x31278]
127039: 97 89 0d                 a2 = a1 << 0xd
127042: d3 98 08                 a1 = a1 ^ a2
127045: 98 89 07                 a2 = a1 >> 0x7
127048: d3 98 08                 a1 = a1 ^ a2
127051: 97 89 11                 a2 = a1 << 0x11
127054: d3 89 09                 a2 = a2 ^ a1
127057: 3e 09 78 12 03           u64 [0x31278] = a2
127062: 87 87 1d dd              i32 a0 = a1 * 0xffffffffffffdd1d
127066: 97 78 38                 a1 = a0 << 0x38
127069: 98 88 39                 a1 = a1 >> 0x39
127072: 98 77 01                 a0 = a0 >> 0x1
127075: 84 77 80 00              a0 = a0 & 0x80
127079: d4 87 07                 a0 = a0 | a1
127082: 78 17 20 01              u8 [sp + 0x120] = a0
127086: 95 17 20 01              a0 = sp + 0x120
127090: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
127094: 33 07 86 0c              a0 = 0xc86
127098: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
127102: 49 21 90 02 02           u64 [sp + 656] = 0x2
127107: 49 21 a0 02              u64 [sp + 672] = 0
127111: 49 21 a8 02 02           u64 [sp + 680] = 0x2
127116: 49 21 b0 02              u64 [sp + 688] = 0
127120: 14 08 20 00 00 00 08 00 00 00 a1 = 0x800000020
127130: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
127134: 46 21 c0 02 03           u8 [sp + 704] = 0x3
127139: 33 08 58 10 01           a1 = 0x11058
127144: 7b 18 38 02              u64 [sp + 0x238] = a1
127148: 49 21 40 02 01           u64 [sp + 576] = 0x1
127153: 95 18 90 02              a1 = sp + 0x290
127157: 7b 18 58 02              u64 [sp + 0x258] = a1
127161: 49 21 60 02 01           u64 [sp + 608] = 0x1
127166: 95 18 e0 01              a1 = sp + 0x1e0
127170: 7b 18 48 02              u64 [sp + 0x248] = a1
127174: 49 21 50 02 01           u64 [sp + 592] = 0x1
127179: 95 17 08 02              a0 = sp + 0x208
127183: 95 18 38 02              a1 = sp + 0x238
127187: 50 20 4e 06 6c 5e fe     ra = 1614, jump @1491
      :                          @9582 [@dyn 807]
127194: 82 16 10 02              s1 = u64 [sp + 0x210]
127198: 82 1b 18 02              a4 = u64 [sp + 0x218]
127202: 82 17 08 02              a0 = u64 [sp + 0x208]
127206: 7b 17 70                 u64 [sp + 0x70] = a0
127209: 33 07 02                 a0 = 0x2
127212: 33 08                    a1 = 0
127214: 33 09                    a2 = 0
127216: 64 6a                    a3 = s1
127218: 33 00 50 06              ra = 0x650
127222: 0a 64                    ecalli 100 // 'log'
127224: 01                       fallthrough
      :                          @9583 [@dyn 808]
127225: 82 1c 70                 a5 = u64 [sp + 0x70]
127228: 82 17 68                 a0 = u64 [sp + 0x68]
127231: c8 c7 07                 a0 = a0 + a5
127234: 55 37 00 00 ff 0a        jump @9585 if a0 >=u 4294901760
      :                          @9584
127240: 28 be f0 00              jump @12856
      :                          @9585
127244: 33 07 c0 22 03           a0 = 0x322c0
127249: 95 77 00 00 01           a0 = a0 + 0x10000
127254: 01                       fallthrough
      :                          @9586
127255: 82 78                    a1 = u64 [a0]
127257: c9 87 09                 a2 = a0 - a1
127260: aa 69 07                 jump @9588 if a2 == s1
      :                          @9587
127263: 28 a7 f0 00              jump @12856
      :                          @9588
127267: c9 c8 09                 a2 = a1 - a5
127270: 01                       fallthrough
      :                          @9589
127271: 82 7a                    a3 = u64 [a0]
127273: ab 8a ee                 jump @9586 if a3 != a1
      :                          @9590
127276: 7b 79                    u64 [a0] = a2
127278: 33 0b                    a4 = 0
127280: 01                       fallthrough
      :                          @9591
127281: ab 8a e6                 jump @9586 if a3 != a1
      :                          @9592
127284: 28 92 f0 00              jump @12856
      :                          @9593 [@dyn 809]
127288: 3a 03 60 11 03           t1 = u64 [0x31160]
127293: 33 08 78 12 03           a1 = 0x31278
127298: 3a 09 d8 11 03           a2 = u64 [0x311d8]
127303: 33 0a a5 98 0f           a3 = 0xf98a5
127308: 33 02 01                 t0 = 0x1
127311: 01                       fallthrough
      :                          @9594
127312: 3a 07 78 12 03           a0 = u64 [0x31278]
127317: 97 7b 0d                 a4 = a0 << 0xd
127320: d3 b7 07                 a0 = a0 ^ a4
127323: 98 7b 07                 a4 = a0 >> 0x7
127326: d3 b7 07                 a0 = a0 ^ a4
127329: 97 7b 11                 a4 = a0 << 0x11
127332: d3 b7 07                 a0 = a0 ^ a4
127335: 3e 07 78 12 03           u64 [0x31278] = a0
127340: ca 37 07                 a0 = a0 * t1
127343: d6 97 0b                 a4 = a0 mulhu a2
127346: 98 bb 13                 a4 = a4 >> 0x13
127349: ca ab 0b                 a4 = a4 * a3
127352: c9 b7 07                 a0 = a0 - a4
127355: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
127359: 64 7b                    a4 = a0
127361: 64 ac                    a5 = a3
127363: 01                       fallthrough
      :                          @9595
127364: 64 c6                    s1 = a5
127366: cd cb 0c                 a5 = a4 %u a5
127369: 64 6b                    a4 = s1
127371: 52 0c f9                 jump @9595 if a5 != 0
      :                          @9596
127374: ab 26 c2                 jump @9594 if s1 != t0
      :                          @9597
127377: 3a 08 d8 11 03           a1 = u64 [0x311d8]
127382: ca 77 07                 a0 = a0 * a0
127385: d6 87 08                 a1 = a0 mulhu a1
127388: 98 88 13                 a1 = a1 >> 0x13
127391: 96 88 a5 98 0f           a1 = a1 * 0xf98a5
127396: c9 87 07                 a0 = a0 - a1
127399: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
127403: 95 17 e0 01              a0 = sp + 0x1e0
127407: 7b 17 08 02              u64 [sp + 0x208] = a0
127411: 33 07 28 0c              a0 = 0xc28
127415: 7b 17 10 02              u64 [sp + 0x210] = a0
127419: 33 07 78 10 01           a0 = 0x11078
127424: 7b 17 90 02              u64 [sp + 0x290] = a0
127428: 49 21 98 02 01           u64 [sp + 664] = 0x1
127433: 49 21 b0 02              u64 [sp + 688] = 0
127437: 95 18 08 02              a1 = sp + 0x208
127441: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
127445: 49 21 a8 02 01           u64 [sp + 680] = 0x1
127450: 95 17 38 02              a0 = sp + 0x238
127454: 95 18 90 02              a1 = sp + 0x290
127458: 50 20 54 06 5d 5d fe     ra = 1620, jump @1491
      :                          @9598 [@dyn 810]
127465: 82 16 40 02              s1 = u64 [sp + 0x240]
127469: 82 1b 48 02              a4 = u64 [sp + 0x248]
127473: 82 17 38 02              a0 = u64 [sp + 0x238]
127477: 7b 17 70                 u64 [sp + 0x70] = a0
127480: 33 07 02                 a0 = 0x2
127483: 33 08                    a1 = 0
127485: 33 09                    a2 = 0
127487: 64 6a                    a3 = s1
127489: 33 00 56 06              ra = 0x656
127493: 0a 64                    ecalli 100 // 'log'
127495: 01                       fallthrough
      :                          @9599 [@dyn 811]
127496: 82 1c 70                 a5 = u64 [sp + 0x70]
127499: 82 17 68                 a0 = u64 [sp + 0x68]
127502: c8 c7 07                 a0 = a0 + a5
127505: 55 37 00 00 ff 0a        jump @9601 if a0 >=u 4294901760
      :                          @9600
127511: 28 af ef 00              jump @12856
      :                          @9601
127515: 33 07 c0 22 03           a0 = 0x322c0
127520: 95 77 00 00 01           a0 = a0 + 0x10000
127525: 01                       fallthrough
      :                          @9602
127526: 82 78                    a1 = u64 [a0]
127528: c9 87 09                 a2 = a0 - a1
127531: aa 69 07                 jump @9604 if a2 == s1
      :                          @9603
127534: 28 98 ef 00              jump @12856
      :                          @9604
127538: c9 c8 09                 a2 = a1 - a5
127541: 01                       fallthrough
      :                          @9605
127542: 82 7a                    a3 = u64 [a0]
127544: ab 8a ee                 jump @9602 if a3 != a1
      :                          @9606
127547: 7b 79                    u64 [a0] = a2
127549: 33 0b                    a4 = 0
127551: 01                       fallthrough
      :                          @9607
127552: ab 8a e6                 jump @9602 if a3 != a1
      :                          @9608
127555: 28 83 ef 00              jump @12856
      :                          @9609 [@dyn 812]
127559: 3a 08 78 12 03           a1 = u64 [0x31278]
127564: 97 89 0d                 a2 = a1 << 0xd
127567: d3 98 08                 a1 = a1 ^ a2
127570: 98 89 07                 a2 = a1 >> 0x7
127573: 3a 0a 60 11 03           a3 = u64 [0x31160]
127578: d3 98 08                 a1 = a1 ^ a2
127581: 97 89 11                 a2 = a1 << 0x11
127584: d3 98 08                 a1 = a1 ^ a2
127587: ca a8 09                 a2 = a1 * a3
127590: 3e 08 78 12 03           u64 [0x31278] = a1
127595: 7b 19 c8 01              u64 [sp + 0x1c8] = a2
127599: 3a 08 78 12 03           a1 = u64 [0x31278]
127604: 97 89 0d                 a2 = a1 << 0xd
127607: d3 98 08                 a1 = a1 ^ a2
127610: 98 89 07                 a2 = a1 >> 0x7
127613: d3 98 08                 a1 = a1 ^ a2
127616: 97 89 11                 a2 = a1 << 0x11
127619: d3 98 08                 a1 = a1 ^ a2
127622: 3e 08 78 12 03           u64 [0x31278] = a1
127627: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
127631: ca a8 08                 a1 = a1 * a3
127634: d3 78 08                 a1 = a1 ^ a0
127637: 7b 18 20 01              u64 [sp + 0x120] = a1
127641: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
127645: 95 17 c8 01              a0 = sp + 0x1c8
127649: 7b 17 90 02              u64 [sp + 0x290] = a0
127653: 33 07 28 0c              a0 = 0xc28
127657: 7b 17 98 02              u64 [sp + 0x298] = a0
127661: 95 18 20 01              a1 = sp + 0x120
127665: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
127669: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
127673: 95 18 e0 01              a1 = sp + 0x1e0
127677: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
127681: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
127685: 33 07 a0 10 01           a0 = 0x110a0
127690: 7b 17 38 02              u64 [sp + 0x238] = a0
127694: 49 21 40 02 03           u64 [sp + 576] = 0x3
127699: 49 21 58 02              u64 [sp + 600] = 0
127703: 95 18 90 02              a1 = sp + 0x290
127707: 7b 18 48 02              u64 [sp + 0x248] = a1
127711: 49 21 50 02 03           u64 [sp + 592] = 0x3
127716: 95 17 08 02              a0 = sp + 0x208
127720: 95 18 38 02              a1 = sp + 0x238
127724: 50 20 5a 06 53 5c fe     ra = 1626, jump @1491
      :                          @9610 [@dyn 813]
127731: 82 16 10 02              s1 = u64 [sp + 0x210]
127735: 82 1b 18 02              a4 = u64 [sp + 0x218]
127739: 82 17 08 02              a0 = u64 [sp + 0x208]
127743: 7b 17 70                 u64 [sp + 0x70] = a0
127746: 33 07 02                 a0 = 0x2
127749: 33 08                    a1 = 0
127751: 33 09                    a2 = 0
127753: 64 6a                    a3 = s1
127755: 33 00 5c 06              ra = 0x65c
127759: 0a 64                    ecalli 100 // 'log'
127761: 01                       fallthrough
      :                          @9611 [@dyn 814]
127762: 82 1c 70                 a5 = u64 [sp + 0x70]
127765: 82 17 68                 a0 = u64 [sp + 0x68]
127768: c8 c7 07                 a0 = a0 + a5
127771: 55 37 00 00 ff 0a        jump @9613 if a0 >=u 4294901760
      :                          @9612
127777: 28 a5 ee 00              jump @12856
      :                          @9613
127781: 33 07 c0 22 03           a0 = 0x322c0
127786: 95 77 00 00 01           a0 = a0 + 0x10000
127791: 01                       fallthrough
      :                          @9614
127792: 82 78                    a1 = u64 [a0]
127794: c9 87 09                 a2 = a0 - a1
127797: aa 69 07                 jump @9616 if a2 == s1
      :                          @9615
127800: 28 8e ee 00              jump @12856
      :                          @9616
127804: c9 c8 09                 a2 = a1 - a5
127807: 01                       fallthrough
      :                          @9617
127808: 82 7a                    a3 = u64 [a0]
127810: ab 8a ee                 jump @9614 if a3 != a1
      :                          @9618
127813: 7b 79                    u64 [a0] = a2
127815: 33 0b                    a4 = 0
127817: 01                       fallthrough
      :                          @9619
127818: ab 8a e6                 jump @9614 if a3 != a1
      :                          @9620
127821: 28 79 ee 00              jump @12856
      :                          @9621 [@dyn 815]
127825: 3a 06 60 11 03           s1 = u64 [0x31160]
127830: 95 17 e0 01              a0 = sp + 0x1e0
127834: 33 00 60 06              ra = 0x660
127838: 95 11 a8                 sp = sp + 0xffffffffffffffa8
127841: 7b 10 50                 u64 [sp + 0x50] = ra
127844: 7b 15 48                 u64 [sp + 0x48] = s0
127847: 7b 16 40                 u64 [sp + 0x40] = s1
127850: 7b 17                    u64 [sp] = a0
127852: 33 06 c0 22 03           s1 = 0x322c0
127857: 33 02 00 00 01           t0 = 0x10000
127862: c8 26 09                 a2 = s1 + t0
127865: 28 20 83 fe              jump @2185
      :                          @9622 [@dyn 816]
127869: 3a 07 78 12 03           a0 = u64 [0x31278]
127874: 97 78 0d                 a1 = a0 << 0xd
127877: d3 87 07                 a0 = a0 ^ a1
127880: 98 78 07                 a1 = a0 >> 0x7
127883: d3 87 07                 a0 = a0 ^ a1
127886: 97 78 11                 a1 = a0 << 0x11
127889: d3 87 07                 a0 = a0 ^ a1
127892: 3a 0a f0 11 03           a3 = u64 [0x311f0]
127897: ca 67 0c                 a5 = a0 * s1
127900: 3e 07 78 12 03           u64 [0x31278] = a0
127905: d6 ac 07                 a0 = a5 mulhu a3
127908: 98 77 03                 a0 = a0 >> 0x3
127911: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
127915: 96 77 1a                 a0 = a0 * 0x1a
127918: c9 7c 07                 a0 = a5 - a0
127921: ac 87 07                 jump @9624 if a0 <u a1
      :                          @9623
127924: 28 1b 00 01              jump @13217
      :                          @9624
127928: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
127932: 97 77 02                 a0 = a0 << 0x2
127935: c8 87 07                 a0 = a0 + a1
127938: 81 77                    a0 = i32 [a0]
127940: 7a 17 b0 01              u32 [sp + 0x1b0] = a0
127944: 3a 07 78 12 03           a0 = u64 [0x31278]
127949: 97 78 0d                 a1 = a0 << 0xd
127952: d3 87 07                 a0 = a0 ^ a1
127955: 98 78 07                 a1 = a0 >> 0x7
127958: d3 87 07                 a0 = a0 ^ a1
127961: 97 78 11                 a1 = a0 << 0x11
127964: d3 87 07                 a0 = a0 ^ a1
127967: ca 67 08                 a1 = a0 * s1
127970: 3e 07 78 12 03           u64 [0x31278] = a0
127975: d6 a8 07                 a0 = a1 mulhu a3
127978: 98 77 03                 a0 = a0 >> 0x3
127981: 96 79 1a                 a2 = a0 * 0x1a
127984: 80 17 b0 01              a0 = u32 [sp + 0x1b0]
127988: c9 98 08                 a1 = a1 - a2
127991: 84 79 df ff 1f           a2 = a0 & 0x1fffdf
127996: 95 9a bf                 a3 = a2 + 0xffffffffffffffbf
127999: 78 18 10 01              u8 [sp + 0x110] = a1
128003: 56 1a 19 37              jump @9626 if a3 >u 25
      :                          @9625
128007: 88 7a 61                 a3 = a0 <u 0x61
128010: 33 0c bf                 a5 = 0xffffffffffffffbf
128013: 93 ac 9f                 a5 = 0xffffffffffffff9f if a3 == 0
128016: 33 06 41                 s1 = 0x41
128019: 93 a6 61                 s1 = 0x61 if a3 == 0
128022: c8 c7 07                 a0 = a0 + a5
128025: c8 87 07                 a0 = a0 + a1
128028: 84 7a ff 00              a3 = a0 & 0xff
128032: 96 aa 4f                 a3 = a3 * 0x4f
128035: 98 aa 0b                 a3 = a3 >> 0xb
128038: 96 aa 1a                 a3 = a3 * 0x1a
128041: c8 67 07                 a0 = a0 + s1
128044: bf a7 0a                 i32 a3 = a0 - a3
128047: 84 a7 ff 00              a0 = a3 & 0xff
128051: 84 aa 5f                 a3 = a3 & 0x5f
128054: 95 aa bf                 a3 = a3 + 0xffffffffffffffbf
128057: 01                       fallthrough
      :                          @9626
128058: 7a 17 c8 01              u32 [sp + 0x1c8] = a0
128062: 56 1a 19 40              jump @9628 if a3 >u 25
      :                          @9627
128066: 84 89 ff 00              a2 = a1 & 0xff
128070: 33 02 1a                 t0 = 0x1a
128073: c9 82 08                 a1 = t0 - a1
128076: 88 7b 61                 a4 = a0 <u 0x61
128079: 33 06 bf                 s1 = 0xffffffffffffffbf
128082: 93 b6 9f                 s1 = 0xffffffffffffff9f if a4 == 0
128085: 33 0c 61                 a5 = 0x61
128088: 33 0a 41                 a3 = 0x41
128091: da bc 0a                 a3 = a5 if a4 == 0
128094: 93 98                    a1 = 0 if a2 == 0
128096: c8 67 07                 a0 = a0 + s1
128099: c8 87 07                 a0 = a0 + a1
128102: 84 78 ff 00              a1 = a0 & 0xff
128106: 96 88 4f                 a1 = a1 * 0x4f
128109: 98 88 0b                 a1 = a1 >> 0xb
128112: ca 28 08                 a1 = a1 * t0
128115: c8 a7 07                 a0 = a0 + a3
128118: bf 87 07                 i32 a0 = a0 - a1
128121: 84 77 ff 00              a0 = a0 & 0xff
128125: 01                       fallthrough
      :                          @9628
128126: 7a 17 20 01              u32 [sp + 0x120] = a0
128130: 95 17 b0 01              a0 = sp + 0x1b0
128134: 7b 17 90 02              u64 [sp + 0x290] = a0
128138: 33 07 82 0c              a0 = 0xc82
128142: 7b 17 98 02              u64 [sp + 0x298] = a0
128146: 95 18 10 01              a1 = sp + 0x110
128150: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
128154: 33 08 5c 0c              a1 = 0xc5c
128158: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
128162: 95 18 c8 01              a1 = sp + 0x1c8
128166: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
128170: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
128174: 95 18 20 01              a1 = sp + 0x120
128178: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
128182: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
128186: 33 07 d8 10 01           a0 = 0x110d8
128191: 7b 17 38 02              u64 [sp + 0x238] = a0
128195: 49 21 40 02 04           u64 [sp + 576] = 0x4
128200: 49 21 58 02              u64 [sp + 600] = 0
128204: 95 18 90 02              a1 = sp + 0x290
128208: 7b 18 48 02              u64 [sp + 0x248] = a1
128212: 49 21 50 02 04           u64 [sp + 592] = 0x4
128217: 95 17 08 02              a0 = sp + 0x208
128221: 95 18 38 02              a1 = sp + 0x238
128225: 50 20 62 06 5e 5a fe     ra = 1634, jump @1491
      :                          @9629 [@dyn 817]
128232: 82 16 10 02              s1 = u64 [sp + 0x210]
128236: 82 1b 18 02              a4 = u64 [sp + 0x218]
128240: 82 17 08 02              a0 = u64 [sp + 0x208]
128244: 7b 17 70                 u64 [sp + 0x70] = a0
128247: 33 07 02                 a0 = 0x2
128250: 33 08                    a1 = 0
128252: 33 09                    a2 = 0
128254: 64 6a                    a3 = s1
128256: 33 00 64 06              ra = 0x664
128260: 0a 64                    ecalli 100 // 'log'
128262: 01                       fallthrough
      :                          @9630 [@dyn 818]
128263: 82 1c 70                 a5 = u64 [sp + 0x70]
128266: 82 17 68                 a0 = u64 [sp + 0x68]
128269: c8 c7 07                 a0 = a0 + a5
128272: 53 37 00 00 ff 25        jump @9636 if a0 <u 4294901760
      :                          @9631
128278: 33 07 c0 22 03           a0 = 0x322c0
128283: 95 77 00 00 01           a0 = a0 + 0x10000
128288: 01                       fallthrough
      :                          @9632
128289: 82 78                    a1 = u64 [a0]
128291: c9 87 09                 a2 = a0 - a1
128294: ab 69 0f                 jump @9636 if a2 != s1
      :                          @9633
128297: c9 c8 09                 a2 = a1 - a5
128300: 01                       fallthrough
      :                          @9634
128301: 82 7a                    a3 = u64 [a0]
128303: ab 8a f2                 jump @9632 if a3 != a1
      :                          @9635
128306: 7b 79                    u64 [a0] = a2
128308: 01                       fallthrough
      :                          @9636
128309: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
128313: 52 08 07                 jump @9638 if a1 != 0
      :                          @9637
128316: 28 8a ec 00              jump @12856
      :                          @9638
128320: 54 28 00 40 09           jump @9640 if a1 <=u 16384
      :                          @9639
128325: 28 81 ec 00              jump @12856
      :                          @9640
128329: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
128333: 97 88 02                 a1 = a1 << 0x2
128336: 33 09 c0 22 03           a2 = 0x322c0
128341: 95 99 00 00 01           a2 = a2 + 0x10000
128346: 01                       fallthrough
      :                          @9641
128347: 82 9a                    a3 = u64 [a2]
128349: c9 a9 0b                 a4 = a2 - a3
128352: aa 7b 07                 jump @9643 if a4 == a0
      :                          @9642
128355: 28 63 ec 00              jump @12856
      :                          @9643
128359: c9 8a 0b                 a4 = a3 - a1
128362: 01                       fallthrough
      :                          @9644
128363: 82 9c                    a5 = u64 [a2]
128365: ab ac ee                 jump @9641 if a5 != a3
      :                          @9645
128368: 7b 9b                    u64 [a2] = a4
128370: 33 06                    s1 = 0
128372: 01                       fallthrough
      :                          @9646
128373: ab ac e6                 jump @9641 if a5 != a3
      :                          @9647
128376: 28 4e ec 00              jump @12856
      :                          @9648 [@dyn 819]
128380: 3a 08 78 12 03           a1 = u64 [0x31278]
128385: 97 89 0d                 a2 = a1 << 0xd
128388: d3 98 08                 a1 = a1 ^ a2
128391: 98 89 07                 a2 = a1 >> 0x7
128394: d3 98 08                 a1 = a1 ^ a2
128397: 97 89 11                 a2 = a1 << 0x11
128400: d3 98 08                 a1 = a1 ^ a2
128403: 3a 09 60 11 03           a2 = u64 [0x31160]
128408: 3a 0a 70 11 03           a3 = u64 [0x31170]
128413: 3e 08 78 12 03           u64 [0x31278] = a1
128418: ca 98 07                 a0 = a1 * a2
128421: 98 78 01                 a1 = a0 >> 0x1
128424: d6 a8 08                 a1 = a1 mulhu a3
128427: 98 88 04                 a1 = a1 >> 0x4
128430: 96 88 32                 a1 = a1 * 0x32
128433: c9 87 07                 a0 = a0 - a1
128436: 7b 17 20 01              u64 [sp + 0x120] = a0
128440: 50 20 68 06 be 4b ff     ra = 1640, jump @6529
      :                          @9649 [@dyn 820]
128447: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
128451: 95 17 20 01              a0 = sp + 0x120
128455: 7b 17 38 02              u64 [sp + 0x238] = a0
128459: 33 07 28 0c              a0 = 0xc28
128463: 7b 17 40 02              u64 [sp + 0x240] = a0
128467: 95 18 e0 01              a1 = sp + 0x1e0
128471: 7b 18 48 02              u64 [sp + 0x248] = a1
128475: 7b 17 50 02              u64 [sp + 0x250] = a0
128479: 33 07 18 11 01           a0 = 0x11118
128484: 7b 17 90 02              u64 [sp + 0x290] = a0
128488: 49 21 98 02 02           u64 [sp + 664] = 0x2
128493: 49 21 b0 02              u64 [sp + 688] = 0
128497: 95 18 38 02              a1 = sp + 0x238
128501: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
128505: 49 21 a8 02 02           u64 [sp + 680] = 0x2
128510: 95 17 08 02              a0 = sp + 0x208
128514: 95 18 90 02              a1 = sp + 0x290
128518: 50 20 6a 06 39 59 fe     ra = 1642, jump @1491
      :                          @9650 [@dyn 821]
128525: 82 16 10 02              s1 = u64 [sp + 0x210]
128529: 82 1b 18 02              a4 = u64 [sp + 0x218]
128533: 82 17 08 02              a0 = u64 [sp + 0x208]
128537: 7b 17 70                 u64 [sp + 0x70] = a0
128540: 33 07 02                 a0 = 0x2
128543: 33 08                    a1 = 0
128545: 33 09                    a2 = 0
128547: 64 6a                    a3 = s1
128549: 33 00 6c 06              ra = 0x66c
128553: 0a 64                    ecalli 100 // 'log'
128555: 01                       fallthrough
      :                          @9651 [@dyn 822]
128556: 82 1c 70                 a5 = u64 [sp + 0x70]
128559: 82 17 68                 a0 = u64 [sp + 0x68]
128562: c8 c7 07                 a0 = a0 + a5
128565: 55 37 00 00 ff 0a        jump @9653 if a0 >=u 4294901760
      :                          @9652
128571: 28 8b eb 00              jump @12856
      :                          @9653
128575: 33 07 c0 22 03           a0 = 0x322c0
128580: 95 77 00 00 01           a0 = a0 + 0x10000
128585: 01                       fallthrough
      :                          @9654
128586: 82 78                    a1 = u64 [a0]
128588: c9 87 09                 a2 = a0 - a1
128591: aa 69 07                 jump @9656 if a2 == s1
      :                          @9655
128594: 28 74 eb 00              jump @12856
      :                          @9656
128598: c9 c8 09                 a2 = a1 - a5
128601: 01                       fallthrough
      :                          @9657
128602: 82 7a                    a3 = u64 [a0]
128604: ab 8a ee                 jump @9654 if a3 != a1
      :                          @9658
128607: 7b 79                    u64 [a0] = a2
128609: 33 0b                    a4 = 0
128611: 01                       fallthrough
      :                          @9659
128612: ab 8a e6                 jump @9654 if a3 != a1
      :                          @9660
128615: 28 5f eb 00              jump @12856
      :                          @9661 [@dyn 823]
128619: 95 17 90 02              a0 = sp + 0x290
128623: 33 09 05                 a2 = 0x5
128626: 33 08                    a1 = 0
128628: 50 20 70 06 75 6d fe     ra = 1648, jump @1877
      :                          @9662 [@dyn 824]
128635: 95 17 08 02              a0 = sp + 0x208
128639: 95 18 90 02              a1 = sp + 0x290
128643: 33 09 05                 a2 = 0x5
128646: 50 20 72 06 8e 67 fe     ra = 1650, jump @1783
      :                          @9663 [@dyn 825]
128653: 82 17 18 02              a0 = u64 [sp + 0x218]
128657: 52 07 07                 jump @9665 if a0 != 0
      :                          @9664
128660: 28 52 fd 00              jump @13240
      :                          @9665
128664: 82 17 10 02              a0 = u64 [sp + 0x210]
128668: 82 78 10                 a1 = u64 [a0 + 0x10]
128671: 52 08 07                 jump @9667 if a1 != 0
      :                          @9666
128674: 28 5f fd 00              jump @13263
      :                          @9667
128678: 82 77 08                 a0 = u64 [a0 + 0x8]
128681: 49 07                    u64 [a0 + 0] = 0
128683: 3a 08 78 12 03           a1 = u64 [0x31278]
128688: 97 89 0d                 a2 = a1 << 0xd
128691: d3 98 08                 a1 = a1 ^ a2
128694: 98 89 07                 a2 = a1 >> 0x7
128697: d3 98 08                 a1 = a1 ^ a2
128700: 97 89 11                 a2 = a1 << 0x11
128703: d3 89 09                 a2 = a2 ^ a1
128706: 3e 09 78 12 03           u64 [0x31278] = a2
128711: 82 17 18 02              a0 = u64 [sp + 0x218]
128715: 52 07 07                 jump @9669 if a0 != 0
      :                          @9668
128718: 28 18 fd 00              jump @13240
      :                          @9669
128722: 82 17 10 02              a0 = u64 [sp + 0x210]
128726: 82 78 10                 a1 = u64 [a0 + 0x10]
128729: 55 18 02 08              jump @9671 if a1 >=u 2
      :                          @9670
128733: 28 29 fc 00              jump @13197
      :                          @9671
128737: 3a 0a 60 11 03           a3 = u64 [0x31160]
128742: 3a 08 70 11 03           a1 = u64 [0x31170]
128747: ca a9 09                 a2 = a2 * a3
128750: 98 9b 01                 a4 = a2 >> 0x1
128753: d6 8b 08                 a1 = a4 mulhu a1
128756: 98 88 04                 a1 = a1 >> 0x4
128759: 82 77 08                 a0 = u64 [a0 + 0x8]
128762: 96 88 32                 a1 = a1 * 0x32
128765: c9 89 09                 a2 = a2 - a1
128768: 95 99 01                 a2 = a2 + 0x1
128771: 7b 79 08                 u64 [a0 + 0x8] = a2
128774: 3a 08 78 12 03           a1 = u64 [0x31278]
128779: 97 89 0d                 a2 = a1 << 0xd
128782: d3 98 08                 a1 = a1 ^ a2
128785: 98 89 07                 a2 = a1 >> 0x7
128788: d3 98 08                 a1 = a1 ^ a2
128791: 97 89 11                 a2 = a1 << 0x11
128794: d3 89 09                 a2 = a2 ^ a1
128797: 3e 09 78 12 03           u64 [0x31278] = a2
128802: 82 17 18 02              a0 = u64 [sp + 0x218]
128806: 52 07 07                 jump @9673 if a0 != 0
      :                          @9672
128809: 28 bd fc 00              jump @13240
      :                          @9673
128813: 82 17 10 02              a0 = u64 [sp + 0x210]
128817: 82 78 10                 a1 = u64 [a0 + 0x10]
128820: 55 18 03 08              jump @9675 if a1 >=u 3
      :                          @9674
128824: 28 d0 fb 00              jump @13199
      :                          @9675
128828: 3a 08 70 11 03           a1 = u64 [0x31170]
128833: ca a9 09                 a2 = a2 * a3
128836: 98 9b 01                 a4 = a2 >> 0x1
128839: d6 8b 08                 a1 = a4 mulhu a1
128842: 98 88 04                 a1 = a1 >> 0x4
128845: 82 77 08                 a0 = u64 [a0 + 0x8]
128848: 96 88 32                 a1 = a1 * 0x32
128851: c9 89 09                 a2 = a2 - a1
128854: 95 99 01                 a2 = a2 + 0x1
128857: 7b 79 10                 u64 [a0 + 0x10] = a2
128860: 3a 08 78 12 03           a1 = u64 [0x31278]
128865: 97 89 0d                 a2 = a1 << 0xd
128868: d3 98 08                 a1 = a1 ^ a2
128871: 98 89 07                 a2 = a1 >> 0x7
128874: d3 98 08                 a1 = a1 ^ a2
128877: 97 89 11                 a2 = a1 << 0x11
128880: d3 89 09                 a2 = a2 ^ a1
128883: 3e 09 78 12 03           u64 [0x31278] = a2
128888: 82 17 18 02              a0 = u64 [sp + 0x218]
128892: 52 07 07                 jump @9677 if a0 != 0
      :                          @9676
128895: 28 67 fc 00              jump @13240
      :                          @9677
128899: 82 17 10 02              a0 = u64 [sp + 0x210]
128903: 82 78 10                 a1 = u64 [a0 + 0x10]
128906: 55 18 04 08              jump @9679 if a1 >=u 4
      :                          @9678
128910: 28 79 fb 00              jump @13198
      :                          @9679
128914: 3a 08 70 11 03           a1 = u64 [0x31170]
128919: ca a9 09                 a2 = a2 * a3
128922: 98 9b 01                 a4 = a2 >> 0x1
128925: d6 8b 08                 a1 = a4 mulhu a1
128928: 98 88 04                 a1 = a1 >> 0x4
128931: 82 77 08                 a0 = u64 [a0 + 0x8]
128934: 96 88 32                 a1 = a1 * 0x32
128937: c9 89 09                 a2 = a2 - a1
128940: 95 99 01                 a2 = a2 + 0x1
128943: 7b 79 18                 u64 [a0 + 0x18] = a2
128946: 3a 08 78 12 03           a1 = u64 [0x31278]
128951: 97 89 0d                 a2 = a1 << 0xd
128954: d3 98 08                 a1 = a1 ^ a2
128957: 98 89 07                 a2 = a1 >> 0x7
128960: d3 98 08                 a1 = a1 ^ a2
128963: 97 89 11                 a2 = a1 << 0x11
128966: d3 89 09                 a2 = a2 ^ a1
128969: 3e 09 78 12 03           u64 [0x31278] = a2
128974: 82 17 18 02              a0 = u64 [sp + 0x218]
128978: 52 07 07                 jump @9681 if a0 != 0
      :                          @9680
128981: 28 11 fc 00              jump @13240
      :                          @9681
128985: 82 17 10 02              a0 = u64 [sp + 0x210]
128989: 82 78 10                 a1 = u64 [a0 + 0x10]
128992: 55 18 05 08              jump @9683 if a1 >=u 5
      :                          @9682
128996: 28 ed fb 00              jump @13219
      :                          @9683
129000: 3a 08 70 11 03           a1 = u64 [0x31170]
129005: ca a9 09                 a2 = a2 * a3
129008: 98 9b 01                 a4 = a2 >> 0x1
129011: d6 8b 08                 a1 = a4 mulhu a1
129014: 98 88 04                 a1 = a1 >> 0x4
129017: 82 77 08                 a0 = u64 [a0 + 0x8]
129020: 96 88 32                 a1 = a1 * 0x32
129023: c9 89 09                 a2 = a2 - a1
129026: 95 99 01                 a2 = a2 + 0x1
129029: 7b 79 20                 u64 [a0 + 0x20] = a2
129032: 3a 08 78 12 03           a1 = u64 [0x31278]
129037: 97 89 0d                 a2 = a1 << 0xd
129040: d3 98 08                 a1 = a1 ^ a2
129043: 98 89 07                 a2 = a1 >> 0x7
129046: d3 98 08                 a1 = a1 ^ a2
129049: 97 89 11                 a2 = a1 << 0x11
129052: d3 89 09                 a2 = a2 ^ a1
129055: 3e 09 78 12 03           u64 [0x31278] = a2
129060: 82 18 18 02              a1 = u64 [sp + 0x218]
129064: 55 18 02 08              jump @9685 if a1 >=u 2
      :                          @9684
129068: 28 da fa 00              jump @13197
      :                          @9685
129072: 82 17 10 02              a0 = u64 [sp + 0x210]
129076: 82 78 28                 a1 = u64 [a0 + 0x28]
129079: 52 08 07                 jump @9687 if a1 != 0
      :                          @9686
129082: 28 c7 fb 00              jump @13263
      :                          @9687
129086: 3a 08 70 11 03           a1 = u64 [0x31170]
129091: ca a9 09                 a2 = a2 * a3
129094: 98 9b 01                 a4 = a2 >> 0x1
129097: d6 8b 08                 a1 = a4 mulhu a1
129100: 98 88 04                 a1 = a1 >> 0x4
129103: 82 7c 20                 a5 = u64 [a0 + 0x20]
129106: 96 88 32                 a1 = a1 * 0x32
129109: c9 89 09                 a2 = a2 - a1
129112: 95 99 01                 a2 = a2 + 0x1
129115: 7b c9                    u64 [a5] = a2
129117: 82 78 28                 a1 = u64 [a0 + 0x28]
129120: 55 18 02 08              jump @9689 if a1 >=u 2
      :                          @9688
129124: 28 a2 fa 00              jump @13197
      :                          @9689
129128: 82 77 20                 a0 = u64 [a0 + 0x20]
129131: 49 17 08                 u64 [a0 + 8] = 0
129134: 3a 08 78 12 03           a1 = u64 [0x31278]
129139: 97 8b 0d                 a4 = a1 << 0xd
129142: d3 b8 08                 a1 = a1 ^ a4
129145: 98 8b 07                 a4 = a1 >> 0x7
129148: d3 b8 08                 a1 = a1 ^ a4
129151: 97 8b 11                 a4 = a1 << 0x11
129154: d3 8b 0b                 a4 = a4 ^ a1
129157: 3e 0b 78 12 03           u64 [0x31278] = a4
129162: 82 18 18 02              a1 = u64 [sp + 0x218]
129166: 55 18 02 08              jump @9691 if a1 >=u 2
      :                          @9690
129170: 28 3d fb 00              jump @13217
      :                          @9691
129174: 82 19 10 02              a2 = u64 [sp + 0x210]
129178: 82 98 28                 a1 = u64 [a2 + 0x28]
129181: 55 18 03 08              jump @9693 if a1 >=u 3
      :                          @9692
129185: 28 67 fa 00              jump @13199
      :                          @9693
129189: 3a 08 70 11 03           a1 = u64 [0x31170]
129194: ca ab 0b                 a4 = a4 * a3
129197: 98 bc 01                 a5 = a4 >> 0x1
129200: d6 8c 08                 a1 = a5 mulhu a1
129203: 98 88 04                 a1 = a1 >> 0x4
129206: 82 99 20                 a2 = u64 [a2 + 0x20]
129209: 96 88 32                 a1 = a1 * 0x32
129212: c9 8b 0b                 a4 = a4 - a1
129215: 95 bb 01                 a4 = a4 + 0x1
129218: 7b 9b 10                 u64 [a2 + 0x10] = a4
129221: 3a 09 78 12 03           a2 = u64 [0x31278]
129226: 97 9b 0d                 a4 = a2 << 0xd
129229: d3 b9 09                 a2 = a2 ^ a4
129232: 98 9b 07                 a4 = a2 >> 0x7
129235: d3 b9 09                 a2 = a2 ^ a4
129238: 97 9b 11                 a4 = a2 << 0x11
129241: d3 b9 09                 a2 = a2 ^ a4
129244: 3e 09 78 12 03           u64 [0x31278] = a2
129249: 82 18 18 02              a1 = u64 [sp + 0x218]
129253: 55 18 02 08              jump @9695 if a1 >=u 2
      :                          @9694
129257: 28 e6 fa 00              jump @13217
      :                          @9695
129261: 82 1b 10 02              a4 = u64 [sp + 0x210]
129265: 82 b8 28                 a1 = u64 [a4 + 0x28]
129268: 55 18 04 08              jump @9697 if a1 >=u 4
      :                          @9696
129272: 28 0f fa 00              jump @13198
      :                          @9697
129276: 3a 08 70 11 03           a1 = u64 [0x31170]
129281: ca a9 09                 a2 = a2 * a3
129284: 98 9c 01                 a5 = a2 >> 0x1
129287: d6 8c 08                 a1 = a5 mulhu a1
129290: 98 88 04                 a1 = a1 >> 0x4
129293: 82 bb 20                 a4 = u64 [a4 + 0x20]
129296: 96 88 32                 a1 = a1 * 0x32
129299: c9 89 09                 a2 = a2 - a1
129302: 95 99 01                 a2 = a2 + 0x1
129305: 7b b9 18                 u64 [a4 + 0x18] = a2
129308: 3a 09 78 12 03           a2 = u64 [0x31278]
129313: 97 9b 0d                 a4 = a2 << 0xd
129316: d3 b9 09                 a2 = a2 ^ a4
129319: 98 9b 07                 a4 = a2 >> 0x7
129322: d3 b9 09                 a2 = a2 ^ a4
129325: 97 9b 11                 a4 = a2 << 0x11
129328: d3 b9 09                 a2 = a2 ^ a4
129331: 3e 09 78 12 03           u64 [0x31278] = a2
129336: 82 18 18 02              a1 = u64 [sp + 0x218]
129340: 55 18 02 08              jump @9699 if a1 >=u 2
      :                          @9698
129344: 28 8f fa 00              jump @13217
      :                          @9699
129348: 82 17 10 02              a0 = u64 [sp + 0x210]
129352: 82 78 28                 a1 = u64 [a0 + 0x28]
129355: 55 18 05 08              jump @9701 if a1 >=u 5
      :                          @9700
129359: 28 82 fa 00              jump @13219
      :                          @9701
129363: 3a 08 70 11 03           a1 = u64 [0x31170]
129368: ca a9 09                 a2 = a2 * a3
129371: 98 9b 01                 a4 = a2 >> 0x1
129374: d6 8b 08                 a1 = a4 mulhu a1
129377: 98 88 04                 a1 = a1 >> 0x4
129380: 82 77 20                 a0 = u64 [a0 + 0x20]
129383: 96 88 32                 a1 = a1 * 0x32
129386: c9 89 09                 a2 = a2 - a1
129389: 95 99 01                 a2 = a2 + 0x1
129392: 7b 79 20                 u64 [a0 + 0x20] = a2
129395: 3a 08 78 12 03           a1 = u64 [0x31278]
129400: 97 89 0d                 a2 = a1 << 0xd
129403: d3 98 08                 a1 = a1 ^ a2
129406: 98 89 07                 a2 = a1 >> 0x7
129409: d3 98 08                 a1 = a1 ^ a2
129412: 97 89 11                 a2 = a1 << 0x11
129415: d3 89 09                 a2 = a2 ^ a1
129418: 3e 09 78 12 03           u64 [0x31278] = a2
129423: 82 18 18 02              a1 = u64 [sp + 0x218]
129427: 55 18 03 08              jump @9703 if a1 >=u 3
      :                          @9702
129431: 28 38 fa 00              jump @13217
      :                          @9703
129435: 82 18 10 02              a1 = u64 [sp + 0x210]
129439: 82 8b 40                 a4 = u64 [a1 + 0x40]
129442: 52 0b 07                 jump @9705 if a4 != 0
      :                          @9704
129445: 28 59 fa 00              jump @13262
      :                          @9705
129449: 3a 0b 70 11 03           a4 = u64 [0x31170]
129454: ca a9 09                 a2 = a2 * a3
129457: 98 9c 01                 a5 = a2 >> 0x1
129460: d6 bc 0b                 a4 = a5 mulhu a4
129463: 98 bb 04                 a4 = a4 >> 0x4
129466: 82 88 38                 a1 = u64 [a1 + 0x38]
129469: 96 bb 32                 a4 = a4 * 0x32
129472: c9 b9 09                 a2 = a2 - a4
129475: 95 99 01                 a2 = a2 + 0x1
129478: 7b 89                    u64 [a1] = a2
129480: 3a 09 78 12 03           a2 = u64 [0x31278]
129485: 97 9b 0d                 a4 = a2 << 0xd
129488: d3 b9 09                 a2 = a2 ^ a4
129491: 98 9b 07                 a4 = a2 >> 0x7
129494: d3 b9 09                 a2 = a2 ^ a4
129497: 97 9b 11                 a4 = a2 << 0x11
129500: d3 9b 0b                 a4 = a4 ^ a2
129503: 3e 0b 78 12 03           u64 [0x31278] = a4
129508: 82 18 18 02              a1 = u64 [sp + 0x218]
129512: 55 18 03 08              jump @9707 if a1 >=u 3
      :                          @9706
129516: 28 e3 f9 00              jump @13217
      :                          @9707
129520: 82 17 10 02              a0 = u64 [sp + 0x210]
129524: 82 78 40                 a1 = u64 [a0 + 0x40]
129527: 55 18 02 08              jump @9709 if a1 >=u 2
      :                          @9708
129531: 28 0b f9 00              jump @13197
      :                          @9709
129535: 3a 08 70 11 03           a1 = u64 [0x31170]
129540: ca ab 0b                 a4 = a4 * a3
129543: 98 bc 01                 a5 = a4 >> 0x1
129546: d6 8c 08                 a1 = a5 mulhu a1
129549: 98 88 04                 a1 = a1 >> 0x4
129552: 82 77 38                 a0 = u64 [a0 + 0x38]
129555: 96 88 32                 a1 = a1 * 0x32
129558: c9 8b 0b                 a4 = a4 - a1
129561: 95 bb 01                 a4 = a4 + 0x1
129564: 7b 7b 08                 u64 [a0 + 0x8] = a4
129567: 82 17 10 02              a0 = u64 [sp + 0x210]
129571: 82 78 40                 a1 = u64 [a0 + 0x40]
129574: 55 18 03 08              jump @9711 if a1 >=u 3
      :                          @9710
129578: 28 d8 f9 00              jump @13264
      :                          @9711
129582: 82 77 38                 a0 = u64 [a0 + 0x38]
129585: 49 17 10                 u64 [a0 + 16] = 0
129588: 3a 08 78 12 03           a1 = u64 [0x31278]
129593: 97 89 0d                 a2 = a1 << 0xd
129596: d3 98 08                 a1 = a1 ^ a2
129599: 98 89 07                 a2 = a1 >> 0x7
129602: d3 98 08                 a1 = a1 ^ a2
129605: 97 89 11                 a2 = a1 << 0x11
129608: d3 89 09                 a2 = a2 ^ a1
129611: 3e 09 78 12 03           u64 [0x31278] = a2
129616: 82 18 18 02              a1 = u64 [sp + 0x218]
129620: 55 18 03 08              jump @9713 if a1 >=u 3
      :                          @9712
129624: 28 77 f9 00              jump @13217
      :                          @9713
129628: 82 1b 10 02              a4 = u64 [sp + 0x210]
129632: 82 b8 40                 a1 = u64 [a4 + 0x40]
129635: 55 18 04 08              jump @9715 if a1 >=u 4
      :                          @9714
129639: 28 78 f9 00              jump @13233
      :                          @9715
129643: 3a 08 70 11 03           a1 = u64 [0x31170]
129648: ca a9 09                 a2 = a2 * a3
129651: 98 9c 01                 a5 = a2 >> 0x1
129654: d6 8c 08                 a1 = a5 mulhu a1
129657: 98 88 04                 a1 = a1 >> 0x4
129660: 82 bb 38                 a4 = u64 [a4 + 0x38]
129663: 96 88 32                 a1 = a1 * 0x32
129666: c9 89 09                 a2 = a2 - a1
129669: 95 99 01                 a2 = a2 + 0x1
129672: 7b b9 18                 u64 [a4 + 0x18] = a2
129675: 3a 09 78 12 03           a2 = u64 [0x31278]
129680: 97 9b 0d                 a4 = a2 << 0xd
129683: d3 b9 09                 a2 = a2 ^ a4
129686: 98 9b 07                 a4 = a2 >> 0x7
129689: d3 b9 09                 a2 = a2 ^ a4
129692: 97 9b 11                 a4 = a2 << 0x11
129695: d3 b9 09                 a2 = a2 ^ a4
129698: 3e 09 78 12 03           u64 [0x31278] = a2
129703: 82 18 18 02              a1 = u64 [sp + 0x218]
129707: 55 18 03 08              jump @9717 if a1 >=u 3
      :                          @9716
129711: 28 20 f9 00              jump @13217
      :                          @9717
129715: 82 17 10 02              a0 = u64 [sp + 0x210]
129719: 82 78 40                 a1 = u64 [a0 + 0x40]
129722: 55 18 05 08              jump @9719 if a1 >=u 5
      :                          @9718
129726: 28 22 f9 00              jump @13234
      :                          @9719
129730: 3a 08 70 11 03           a1 = u64 [0x31170]
129735: ca a9 09                 a2 = a2 * a3
129738: 98 9b 01                 a4 = a2 >> 0x1
129741: d6 8b 08                 a1 = a4 mulhu a1
129744: 98 88 04                 a1 = a1 >> 0x4
129747: 82 77 38                 a0 = u64 [a0 + 0x38]
129750: 96 88 32                 a1 = a1 * 0x32
129753: c9 89 09                 a2 = a2 - a1
129756: 95 99 01                 a2 = a2 + 0x1
129759: 7b 79 20                 u64 [a0 + 0x20] = a2
129762: 3a 08 78 12 03           a1 = u64 [0x31278]
129767: 97 89 0d                 a2 = a1 << 0xd
129770: d3 98 08                 a1 = a1 ^ a2
129773: 98 89 07                 a2 = a1 >> 0x7
129776: d3 98 08                 a1 = a1 ^ a2
129779: 97 89 11                 a2 = a1 << 0x11
129782: d3 89 09                 a2 = a2 ^ a1
129785: 3e 09 78 12 03           u64 [0x31278] = a2
129790: 82 18 18 02              a1 = u64 [sp + 0x218]
129794: 56 18 03 08              jump @9721 if a1 >u 3
      :                          @9720
129798: 28 c9 f8 00              jump @13217
      :                          @9721
129802: 82 18 10 02              a1 = u64 [sp + 0x210]
129806: 82 8b 58                 a4 = u64 [a1 + 0x58]
129809: 52 0b 07                 jump @9723 if a4 != 0
      :                          @9722
129812: 28 ea f8 00              jump @13262
      :                          @9723
129816: 3a 0b 70 11 03           a4 = u64 [0x31170]
129821: ca a9 09                 a2 = a2 * a3
129824: 98 9c 01                 a5 = a2 >> 0x1
129827: d6 bc 0b                 a4 = a5 mulhu a4
129830: 98 bb 04                 a4 = a4 >> 0x4
129833: 82 88 50                 a1 = u64 [a1 + 0x50]
129836: 96 bb 32                 a4 = a4 * 0x32
129839: c9 b9 09                 a2 = a2 - a4
129842: 95 99 01                 a2 = a2 + 0x1
129845: 7b 89                    u64 [a1] = a2
129847: 3a 09 78 12 03           a2 = u64 [0x31278]
129852: 97 9b 0d                 a4 = a2 << 0xd
129855: d3 b9 09                 a2 = a2 ^ a4
129858: 98 9b 07                 a4 = a2 >> 0x7
129861: d3 b9 09                 a2 = a2 ^ a4
129864: 97 9b 11                 a4 = a2 << 0x11
129867: d3 b9 09                 a2 = a2 ^ a4
129870: 3e 09 78 12 03           u64 [0x31278] = a2
129875: 82 18 18 02              a1 = u64 [sp + 0x218]
129879: 55 18 04 08              jump @9725 if a1 >=u 4
      :                          @9724
129883: 28 74 f8 00              jump @13217
      :                          @9725
129887: 82 1b 10 02              a4 = u64 [sp + 0x210]
129891: 82 b8 58                 a1 = u64 [a4 + 0x58]
129894: 55 18 02 08              jump @9727 if a1 >=u 2
      :                          @9726
129898: 28 6e f8 00              jump @13226
      :                          @9727
129902: 3a 08 70 11 03           a1 = u64 [0x31170]
129907: ca a9 09                 a2 = a2 * a3
129910: 98 9c 01                 a5 = a2 >> 0x1
129913: d6 8c 08                 a1 = a5 mulhu a1
129916: 98 88 04                 a1 = a1 >> 0x4
129919: 82 bb 50                 a4 = u64 [a4 + 0x50]
129922: 96 88 32                 a1 = a1 * 0x32
129925: c9 89 09                 a2 = a2 - a1
129928: 95 99 01                 a2 = a2 + 0x1
129931: 7b b9 08                 u64 [a4 + 0x8] = a2
129934: 3a 09 78 12 03           a2 = u64 [0x31278]
129939: 97 9b 0d                 a4 = a2 << 0xd
129942: d3 b9 09                 a2 = a2 ^ a4
129945: 98 9b 07                 a4 = a2 >> 0x7
129948: d3 b9 09                 a2 = a2 ^ a4
129951: 97 9b 11                 a4 = a2 << 0x11
129954: d3 9b 0b                 a4 = a4 ^ a2
129957: 3e 0b 78 12 03           u64 [0x31278] = a4
129962: 82 18 18 02              a1 = u64 [sp + 0x218]
129966: 55 18 04 08              jump @9729 if a1 >=u 4
      :                          @9728
129970: 28 1d f8 00              jump @13217
      :                          @9729
129974: 82 17 10 02              a0 = u64 [sp + 0x210]
129978: 82 78 58                 a1 = u64 [a0 + 0x58]
129981: 55 18 03 08              jump @9731 if a1 >=u 3
      :                          @9730
129985: 28 18 f8 00              jump @13227
      :                          @9731
129989: 3a 08 70 11 03           a1 = u64 [0x31170]
129994: ca ab 0b                 a4 = a4 * a3
129997: 98 bc 01                 a5 = a4 >> 0x1
130000: d6 8c 08                 a1 = a5 mulhu a1
130003: 98 88 04                 a1 = a1 >> 0x4
130006: 82 77 50                 a0 = u64 [a0 + 0x50]
130009: 96 88 32                 a1 = a1 * 0x32
130012: c9 8b 0b                 a4 = a4 - a1
130015: 95 bb 01                 a4 = a4 + 0x1
130018: 7b 7b 10                 u64 [a0 + 0x10] = a4
130021: 82 1b 10 02              a4 = u64 [sp + 0x210]
130025: 82 b8 58                 a1 = u64 [a4 + 0x58]
130028: 55 18 04 08              jump @9733 if a1 >=u 4
      :                          @9732
130032: 28 12 f8 00              jump @13264
      :                          @9733
130036: 82 b8 50                 a1 = u64 [a4 + 0x50]
130039: 49 18 18                 u64 [a1 + 24] = 0
130042: 3a 09 78 12 03           a2 = u64 [0x31278]
130047: 97 9b 0d                 a4 = a2 << 0xd
130050: d3 b9 09                 a2 = a2 ^ a4
130053: 98 9b 07                 a4 = a2 >> 0x7
130056: d3 b9 09                 a2 = a2 ^ a4
130059: 97 9b 11                 a4 = a2 << 0x11
130062: d3 9b 0b                 a4 = a4 ^ a2
130065: 3e 0b 78 12 03           u64 [0x31278] = a4
130070: 82 18 18 02              a1 = u64 [sp + 0x218]
130074: 55 18 04 08              jump @9735 if a1 >=u 4
      :                          @9734
130078: 28 c1 f7 00              jump @13233
      :                          @9735
130082: 82 17 10 02              a0 = u64 [sp + 0x210]
130086: 82 78 58                 a1 = u64 [a0 + 0x58]
130089: 55 18 05 08              jump @9737 if a1 >=u 5
      :                          @9736
130093: 28 b3 f7 00              jump @13234
      :                          @9737
130097: 3a 08 70 11 03           a1 = u64 [0x31170]
130102: ca ab 0b                 a4 = a4 * a3
130105: 98 bc 01                 a5 = a4 >> 0x1
130108: d6 8c 08                 a1 = a5 mulhu a1
130111: 98 88 04                 a1 = a1 >> 0x4
130114: 82 77 50                 a0 = u64 [a0 + 0x50]
130117: 96 88 32                 a1 = a1 * 0x32
130120: c9 8b 0b                 a4 = a4 - a1
130123: 95 bb 01                 a4 = a4 + 0x1
130126: 7b 7b 20                 u64 [a0 + 0x20] = a4
130129: 3a 08 78 12 03           a1 = u64 [0x31278]
130134: 97 8b 0d                 a4 = a1 << 0xd
130137: d3 b8 08                 a1 = a1 ^ a4
130140: 98 8b 07                 a4 = a1 >> 0x7
130143: d3 b8 08                 a1 = a1 ^ a4
130146: 97 8b 11                 a4 = a1 << 0x11
130149: d3 8b 0b                 a4 = a4 ^ a1
130152: 3e 0b 78 12 03           u64 [0x31278] = a4
130157: 82 18 18 02              a1 = u64 [sp + 0x218]
130161: 55 18 05 08              jump @9739 if a1 >=u 5
      :                          @9738
130165: 28 5a f7 00              jump @13217
      :                          @9739
130169: 82 18 10 02              a1 = u64 [sp + 0x210]
130173: 82 89 70                 a2 = u64 [a1 + 0x70]
130176: 52 09 07                 jump @9741 if a2 != 0
      :                          @9740
130179: 28 87 f7 00              jump @13272
      :                          @9741
130183: 3a 09 70 11 03           a2 = u64 [0x31170]
130188: ca ab 0b                 a4 = a4 * a3
130191: 98 bc 01                 a5 = a4 >> 0x1
130194: d6 9c 09                 a2 = a5 mulhu a2
130197: 98 99 04                 a2 = a2 >> 0x4
130200: 82 88 68                 a1 = u64 [a1 + 0x68]
130203: 96 99 32                 a2 = a2 * 0x32
130206: c9 9b 0b                 a4 = a4 - a2
130209: 95 bb 01                 a4 = a4 + 0x1
130212: 7b 8b                    u64 [a1] = a4
130214: 3a 09 78 12 03           a2 = u64 [0x31278]
130219: 97 9b 0d                 a4 = a2 << 0xd
130222: d3 b9 09                 a2 = a2 ^ a4
130225: 98 9b 07                 a4 = a2 >> 0x7
130228: d3 b9 09                 a2 = a2 ^ a4
130231: 97 9b 11                 a4 = a2 << 0x11
130234: d3 9b 0b                 a4 = a4 ^ a2
130237: 3e 0b 78 12 03           u64 [0x31278] = a4
130242: 82 18 18 02              a1 = u64 [sp + 0x218]
130246: 55 18 05 08              jump @9743 if a1 >=u 5
      :                          @9742
130250: 28 05 f7 00              jump @13217
      :                          @9743
130254: 82 1c 10 02              a5 = u64 [sp + 0x210]
130258: 82 c8 70                 a1 = u64 [a5 + 0x70]
130261: 55 18 02 08              jump @9745 if a1 >=u 2
      :                          @9744
130265: 28 29 f7 00              jump @13264
      :                          @9745
130269: 3a 08 70 11 03           a1 = u64 [0x31170]
130274: ca ab 09                 a2 = a4 * a3
130277: 98 9b 01                 a4 = a2 >> 0x1
130280: d6 8b 08                 a1 = a4 mulhu a1
130283: 98 88 04                 a1 = a1 >> 0x4
130286: 82 cc 68                 a5 = u64 [a5 + 0x68]
130289: 96 88 32                 a1 = a1 * 0x32
130292: c9 89 09                 a2 = a2 - a1
130295: 95 99 01                 a2 = a2 + 0x1
130298: 7b c9 08                 u64 [a5 + 0x8] = a2
130301: 3a 09 78 12 03           a2 = u64 [0x31278]
130306: 97 9b 0d                 a4 = a2 << 0xd
130309: d3 b9 09                 a2 = a2 ^ a4
130312: 98 9b 07                 a4 = a2 >> 0x7
130315: d3 b9 09                 a2 = a2 ^ a4
130318: 97 9b 11                 a4 = a2 << 0x11
130321: d3 b9 09                 a2 = a2 ^ a4
130324: 3e 09 78 12 03           u64 [0x31278] = a2
130329: 82 18 18 02              a1 = u64 [sp + 0x218]
130333: 55 18 05 08              jump @9747 if a1 >=u 5
      :                          @9746
130337: 28 ae f6 00              jump @13217
      :                          @9747
130341: 82 1b 10 02              a4 = u64 [sp + 0x210]
130345: 82 b8 70                 a1 = u64 [a4 + 0x70]
130348: 55 18 03 08              jump @9749 if a1 >=u 3
      :                          @9748
130352: 28 a9 f6 00              jump @13227
      :                          @9749
130356: 3a 08 70 11 03           a1 = u64 [0x31170]
130361: ca a9 09                 a2 = a2 * a3
130364: 98 9c 01                 a5 = a2 >> 0x1
130367: d6 8c 08                 a1 = a5 mulhu a1
130370: 98 88 04                 a1 = a1 >> 0x4
130373: 82 bb 68                 a4 = u64 [a4 + 0x68]
130376: 96 88 32                 a1 = a1 * 0x32
130379: c9 89 09                 a2 = a2 - a1
130382: 95 99 01                 a2 = a2 + 0x1
130385: 7b b9 10                 u64 [a4 + 0x10] = a2
130388: 3a 09 78 12 03           a2 = u64 [0x31278]
130393: 97 9b 0d                 a4 = a2 << 0xd
130396: d3 b9 09                 a2 = a2 ^ a4
130399: 98 9b 07                 a4 = a2 >> 0x7
130402: d3 b9 09                 a2 = a2 ^ a4
130405: 97 9b 11                 a4 = a2 << 0x11
130408: d3 9b 0b                 a4 = a4 ^ a2
130411: 3e 0b 78 12 03           u64 [0x31278] = a4
130416: 82 18 18 02              a1 = u64 [sp + 0x218]
130420: 55 18 05 08              jump @9751 if a1 >=u 5
      :                          @9750
130424: 28 57 f6 00              jump @13217
      :                          @9751
130428: 82 17 10 02              a0 = u64 [sp + 0x210]
130432: 82 78 70                 a1 = u64 [a0 + 0x70]
130435: 55 18 04 08              jump @9753 if a1 >=u 4
      :                          @9752
130439: 28 58 f6 00              jump @13233
      :                          @9753
130443: 3a 08 70 11 03           a1 = u64 [0x31170]
130448: ca ab 0a                 a3 = a4 * a3
130451: 98 ab 01                 a4 = a3 >> 0x1
130454: d6 8b 08                 a1 = a4 mulhu a1
130457: 98 88 04                 a1 = a1 >> 0x4
130460: 33 0b 32                 a4 = 0x32
130463: 82 77 68                 a0 = u64 [a0 + 0x68]
130466: ca b8 08                 a1 = a1 * a4
130469: c9 8a 0a                 a3 = a3 - a1
130472: 95 aa 01                 a3 = a3 + 0x1
130475: 7b 7a 18                 u64 [a0 + 0x18] = a3
130478: 82 17 10 02              a0 = u64 [sp + 0x210]
130482: 82 78 70                 a1 = u64 [a0 + 0x70]
130485: 55 18 05 08              jump @9755 if a1 >=u 5
      :                          @9754
130489: 28 49 f6 00              jump @13264
      :                          @9755
130493: 82 77 68                 a0 = u64 [a0 + 0x68]
130496: 49 17 20                 u64 [a0 + 32] = 0
130499: 95 17 08 02              a0 = sp + 0x208
130503: 50 20 74 06 20 31 ff     ra = 1652, jump @6058
      :                          @9756 [@dyn 826]
130510: 7b 17 20 01              u64 [sp + 0x120] = a0
130514: 95 17 20 01              a0 = sp + 0x120
130518: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
130522: 33 07 28 0c              a0 = 0xc28
130526: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
130530: 33 07 58 11 01           a0 = 0x11158
130535: 7b 17 90 02              u64 [sp + 0x290] = a0
130539: 49 21 98 02 01           u64 [sp + 664] = 0x1
130544: 49 21 b0 02              u64 [sp + 688] = 0
130548: 95 18 e0 01              a1 = sp + 0x1e0
130552: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
130556: 49 21 a8 02 01           u64 [sp + 680] = 0x1
130561: 95 17 38 02              a0 = sp + 0x238
130565: 95 18 90 02              a1 = sp + 0x290
130569: 50 20 76 06 36 51 fe     ra = 1654, jump @1491
      :                          @9757 [@dyn 827]
130576: 82 16 40 02              s1 = u64 [sp + 0x240]
130580: 82 1b 48 02              a4 = u64 [sp + 0x248]
130584: 82 17 38 02              a0 = u64 [sp + 0x238]
130588: 7b 17 70                 u64 [sp + 0x70] = a0
130591: 33 07 02                 a0 = 0x2
130594: 33 08                    a1 = 0
130596: 33 09                    a2 = 0
130598: 64 6a                    a3 = s1
130600: 33 00 78 06              ra = 0x678
130604: 0a 64                    ecalli 100 // 'log'
130606: 01                       fallthrough
      :                          @9758 [@dyn 828]
130607: 82 1c 70                 a5 = u64 [sp + 0x70]
130610: 82 17 68                 a0 = u64 [sp + 0x68]
130613: c8 c7 07                 a0 = a0 + a5
130616: 33 08 00 00 ff           a1 = 0xffffffffffff0000
130621: ae 87 07                 jump @9760 if a0 >=u a1
      :                          @9759
130624: 28 8e de 00              jump @12755
      :                          @9760
130628: 33 07 c0 22 03           a0 = 0x322c0
130633: 95 77 00 00 01           a0 = a0 + 0x10000
130638: 01                       fallthrough
      :                          @9761
130639: 82 78                    a1 = u64 [a0]
130641: c9 87 09                 a2 = a0 - a1
130644: aa 69 07                 jump @9763 if a2 == s1
      :                          @9762
130647: 28 77 de 00              jump @12755
      :                          @9763
130651: c9 c8 09                 a2 = a1 - a5
130654: 01                       fallthrough
      :                          @9764
130655: 82 7a                    a3 = u64 [a0]
130657: ab 8a ee                 jump @9761 if a3 != a1
      :                          @9765
130660: 7b 79                    u64 [a0] = a2
130662: 33 0b                    a4 = 0
130664: 01                       fallthrough
      :                          @9766
130665: ab 8a e6                 jump @9761 if a3 != a1
      :                          @9767
130668: 28 62 de 00              jump @12755
      :                          @9768 [@dyn 829]
130672: 95 17 08 02              a0 = sp + 0x208
130676: 33 00 7c 06              ra = 0x67c
130680: 95 11 f8                 sp = sp + 0xfffffffffffffff8
130683: 7b 15                    u64 [sp] = s0
130685: 33 03 c0 22 03           t1 = 0x322c0
130690: 33 02 00 00 01           t0 = 0x10000
130695: c8 23 04                 t2 = t1 + t0
130698: 28 38 81 fe              jump @2284
      :                          @9769 [@dyn 830]
130702: 82 17 10 02              a0 = u64 [sp + 0x210]
130706: 82 18 18 02              a1 = u64 [sp + 0x218]
130710: 7b 17 70                 u64 [sp + 0x70] = a0
130713: 33 00 7e 06              ra = 0x67e
130717: 95 11 c0                 sp = sp + 0xffffffffffffffc0
130720: 7b 10 38                 u64 [sp + 0x38] = ra
130723: 7b 15 30                 u64 [sp + 0x30] = s0
130726: 7b 16 28                 u64 [sp + 0x28] = s1
130729: 64 86                    s1 = a1
130731: 64 75                    s0 = a0
130733: 68 87                    a0 = clz a1
130735: 9a 7a 40                 a3 = 0x40 - a0
130738: 64 57                    a0 = s0
130740: 33 09                    a2 = 0
130742: 33 00 c8 03              ra = 0x3c8
130746: 28 c5 3b fe              jump @1111
      :                          @9770 [@dyn 831]
130750: 7b 17 20 01              u64 [sp + 0x120] = a0
130754: 95 17 20 01              a0 = sp + 0x120
130758: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
130762: 33 07 28 0c              a0 = 0xc28
130766: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
130770: 33 07 80 11 01           a0 = 0x11180
130775: 7b 17 90 02              u64 [sp + 0x290] = a0
130779: 49 21 98 02 01           u64 [sp + 664] = 0x1
130784: 49 21 b0 02              u64 [sp + 688] = 0
130788: 95 18 e0 01              a1 = sp + 0x1e0
130792: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
130796: 49 21 a8 02 01           u64 [sp + 680] = 0x1
130801: 95 17 38 02              a0 = sp + 0x238
130805: 95 18 90 02              a1 = sp + 0x290
130809: 50 20 80 06 46 50 fe     ra = 1664, jump @1491
      :                          @9771 [@dyn 832]
130816: 82 16 40 02              s1 = u64 [sp + 0x240]
130820: 82 1b 48 02              a4 = u64 [sp + 0x248]
130824: 82 17 38 02              a0 = u64 [sp + 0x238]
130828: 7b 17 60                 u64 [sp + 0x60] = a0
130831: 33 07 02                 a0 = 0x2
130834: 33 08                    a1 = 0
130836: 33 09                    a2 = 0
130838: 64 6a                    a3 = s1
130840: 33 00 82 06              ra = 0x682
130844: 0a 64                    ecalli 100 // 'log'
130846: 01                       fallthrough
      :                          @9772 [@dyn 833]
130847: 82 1c 60                 a5 = u64 [sp + 0x60]
130850: 82 17 68                 a0 = u64 [sp + 0x68]
130853: c8 c7 07                 a0 = a0 + a5
130856: 53 37 00 00 ff 25        jump @9778 if a0 <u 4294901760
      :                          @9773
130862: 33 07 c0 22 03           a0 = 0x322c0
130867: 95 77 00 00 01           a0 = a0 + 0x10000
130872: 01                       fallthrough
      :                          @9774
130873: 82 78                    a1 = u64 [a0]
130875: c9 87 09                 a2 = a0 - a1
130878: ab 69 0f                 jump @9778 if a2 != s1
      :                          @9775
130881: c9 c8 09                 a2 = a1 - a5
130884: 01                       fallthrough
      :                          @9776
130885: 82 7a                    a3 = u64 [a0]
130887: ab 8a f2                 jump @9774 if a3 != a1
      :                          @9777
130890: 7b 79                    u64 [a0] = a2
130892: 01                       fallthrough
      :                          @9778
130893: 82 17 08 02              a0 = u64 [sp + 0x208]
130897: 82 16 70                 s1 = u64 [sp + 0x70]
130900: 52 07 07                 jump @9780 if a0 != 0
      :                          @9779
130903: 28 6f e2 00              jump @12856
      :                          @9780
130907: 54 27 00 20 09           jump @9782 if a0 <=u 8192
      :                          @9781
130912: 28 66 e2 00              jump @12856
      :                          @9782
130916: 97 77 03                 a0 = a0 << 0x3
130919: 33 08 c0 22 03           a1 = 0x322c0
130924: 95 88 00 00 01           a1 = a1 + 0x10000
130929: 01                       fallthrough
      :                          @9783
130930: 82 89                    a2 = u64 [a1]
130932: c9 98 0a                 a3 = a1 - a2
130935: aa 6a 07                 jump @9785 if a3 == s1
      :                          @9784
130938: 28 4c e2 00              jump @12856
      :                          @9785
130942: c9 79 0a                 a3 = a2 - a0
130945: 01                       fallthrough
      :                          @9786
130946: 82 8b                    a4 = u64 [a1]
130948: ab 9b ee                 jump @9783 if a4 != a2
      :                          @9787
130951: 7b 8a                    u64 [a1] = a3
130953: 33 0c                    a5 = 0
130955: 01                       fallthrough
      :                          @9788
130956: ab 9b e6                 jump @9783 if a4 != a2
      :                          @9789
130959: 28 37 e2 00              jump @12856
      :                          @9790 [@dyn 834]
130963: 95 17 90 02              a0 = sp + 0x290
130967: 33 08 0a                 a1 = 0xa
130970: 50 20 86 06 0e 5e fe     ra = 1670, jump @1776
      :                          @9791 [@dyn 835]
130977: 95 17 08 02              a0 = sp + 0x208
130981: 95 18 90 02              a1 = sp + 0x290
130985: 33 09 0a                 a2 = 0xa
130988: 50 20 88 06 1c 65 fe     ra = 1672, jump @1895
      :                          @9792 [@dyn 836]
130995: 49 11 70                 u64 [sp + 112] = 0
130998: 33 07                    a0 = 0
131000: 33 04 01                 t2 = 0x1
131003: 33 0b 78 12 03           a4 = 0x31278
131008: 33 00 18                 ra = 0x18
131011: 28 1b                    jump @9795
      :                          @9793
131013: 95 77 01                 a0 = a0 + 0x1
131016: 95 44 01                 t2 = t2 + 0x1
131019: 82 18 70                 a1 = u64 [sp + 0x70]
131022: 95 88 18                 a1 = a1 + 0x18
131025: 7b 18 70                 u64 [sp + 0x70] = a1
131028: 33 08 0a                 a1 = 0xa
131031: ab 87 07                 jump @9795 if a0 != a1
      :                          @9794
131034: 28 af df 00              jump @12815
      :                          @9795
131038: 56 17 08 e7              jump @9793 if a0 >u 8
      :                          @9796
131042: 82 16 70                 s1 = u64 [sp + 0x70]
131045: 64 49                    a2 = t2
131047: 01                       fallthrough
      :                          @9797
131048: 3a 08 78 12 03           a1 = u64 [0x31278]
131053: 97 8a 0d                 a3 = a1 << 0xd
131056: d3 a8 08                 a1 = a1 ^ a3
131059: 98 8c 07                 a5 = a1 >> 0x7
131062: d3 8c 0c                 a5 = a5 ^ a1
131065: 97 c8 11                 a1 = a5 << 0x11
131068: d3 c8 08                 a1 = a1 ^ a5
131071: 3e 08 78 12 03           u64 [0x31278] = a1
131076: 82 18 18 02              a1 = u64 [sp + 0x218]
131080: ac 87 07                 jump @9799 if a0 <u a1
      :                          @9798
131083: 28 c4 f3 00              jump @13217
      :                          @9799
131087: 82 13 10 02              t1 = u64 [sp + 0x210]
131091: ca 07 02                 t0 = a0 * ra
131094: c8 32 02                 t0 = t0 + t1
131097: 82 2a 10                 a3 = u64 [t0 + 0x10]
131100: ac a9 07                 jump @9801 if a2 <u a3
      :                          @9800
131103: 28 69 df 00              jump @12814
      :                          @9801
131107: 82 2a 08                 a3 = u64 [t0 + 0x8]
131110: c8 9a 0a                 a3 = a3 + a2
131113: 84 cc 01                 a5 = a5 & 0x1
131116: 78 ac                    u8 [a3] = a5
131118: ac 89 07                 jump @9803 if a2 <u a1
      :                          @9802
131121: 28 d1 f3 00              jump @13264
      :                          @9803
131125: c8 63 03                 t1 = t1 + s1
131128: 82 38 28                 a1 = u64 [t1 + 0x28]
131131: ac 87 07                 jump @9805 if a0 <u a1
      :                          @9804
131134: 28 91 f3 00              jump @13217
      :                          @9805
131138: 82 38 20                 a1 = u64 [t1 + 0x20]
131141: c8 78 08                 a1 = a1 + a0
131144: 78 8c                    u8 [a1] = a5
131146: 95 99 01                 a2 = a2 + 0x1
131149: 95 66 18                 s1 = s1 + 0x18
131152: 52 19 0a 98              jump @9797 if a2 != 10
      :                          @9806
131156: 28 71 ff                 jump @9793
      :                          @9807 [@dyn 837]
131159: 95 17 90 02              a0 = sp + 0x290
131163: 33 08 08                 a1 = 0x8
131166: 50 20 8c 06 4a 5d fe     ra = 1676, jump @1776
      :                          @9808 [@dyn 838]
131173: 95 17 e0 01              a0 = sp + 0x1e0
131177: 95 18 90 02              a1 = sp + 0x290
131181: 33 09 08                 a2 = 0x8
131184: 50 20 8e 06 58 64 fe     ra = 1678, jump @1895
      :                          @9809 [@dyn 839]
131191: 49 11 70                 u64 [sp + 112] = 0
131194: 33 07                    a0 = 0
131196: 33 04 01                 t2 = 0x1
131199: 33 0b 78 12 03           a4 = 0x31278
131204: 33 00 18                 ra = 0x18
131207: 28 19                    jump @9812
      :                          @9810
131209: 95 77 01                 a0 = a0 + 0x1
131212: 95 44 01                 t2 = t2 + 0x1
131215: 82 18 70                 a1 = u64 [sp + 0x70]
131218: 95 88 18                 a1 = a1 + 0x18
131221: 7b 18 70                 u64 [sp + 0x70] = a1
131224: 52 17 08 08              jump @9812 if a0 != 8
      :                          @9811
131228: 28 93 df 00              jump @12826
      :                          @9812
131232: 56 17 06 e9              jump @9810 if a0 >u 6
      :                          @9813
131236: 82 16 70                 s1 = u64 [sp + 0x70]
131239: 64 49                    a2 = t2
131241: 01                       fallthrough
      :                          @9814
131242: 3a 08 78 12 03           a1 = u64 [0x31278]
131247: 97 8a 0d                 a3 = a1 << 0xd
131250: d3 a8 08                 a1 = a1 ^ a3
131253: 98 8c 07                 a5 = a1 >> 0x7
131256: d3 8c 0c                 a5 = a5 ^ a1
131259: 97 c8 11                 a1 = a5 << 0x11
131262: d3 c8 08                 a1 = a1 ^ a5
131265: 3e 08 78 12 03           u64 [0x31278] = a1
131270: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
131274: ac 87 07                 jump @9816 if a0 <u a1
      :                          @9815
131277: 28 02 f3 00              jump @13217
      :                          @9816
131281: 82 13 e8 01              t1 = u64 [sp + 0x1e8]
131285: ca 07 02                 t0 = a0 * ra
131288: c8 32 02                 t0 = t0 + t1
131291: 82 2a 10                 a3 = u64 [t0 + 0x10]
131294: ac a9 07                 jump @9818 if a2 <u a3
      :                          @9817
131297: 28 a7 de 00              jump @12814
      :                          @9818
131301: 82 2a 08                 a3 = u64 [t0 + 0x8]
131304: c8 9a 0a                 a3 = a3 + a2
131307: 84 cc 01                 a5 = a5 & 0x1
131310: 78 ac                    u8 [a3] = a5
131312: ac 89 07                 jump @9820 if a2 <u a1
      :                          @9819
131315: 28 0f f3 00              jump @13264
      :                          @9820
131319: c8 63 03                 t1 = t1 + s1
131322: 82 38 28                 a1 = u64 [t1 + 0x28]
131325: ac 87 07                 jump @9822 if a0 <u a1
      :                          @9821
131328: 28 cf f2 00              jump @13217
      :                          @9822
131332: 82 38 20                 a1 = u64 [t1 + 0x20]
131335: c8 78 08                 a1 = a1 + a0
131338: 78 8c                    u8 [a1] = a5
131340: 95 99 01                 a2 = a2 + 0x1
131343: 95 66 18                 s1 = s1 + 0x18
131346: 52 19 08 98              jump @9814 if a2 != 8
      :                          @9823
131350: 28 73 ff                 jump @9810
      :                          @9824 [@dyn 840]
131353: 95 17 90 02              a0 = sp + 0x290
131357: 33 09 06                 a2 = 0x6
131360: 33 08                    a1 = 0
131362: 50 20 92 06 c7 62 fe     ra = 1682, jump @1877
      :                          @9825 [@dyn 841]
131369: 95 17 b0 01              a0 = sp + 0x1b0
131373: 95 18 90 02              a1 = sp + 0x290
131377: 33 09 06                 a2 = 0x6
131380: 50 20 94 06 e0 5c fe     ra = 1684, jump @1783
      :                          @9826 [@dyn 842]
131387: 3a 07 78 12 03           a0 = u64 [0x31278]
131392: 97 79 0d                 a2 = a0 << 0xd
131395: d3 97 07                 a0 = a0 ^ a2
131398: 98 79 07                 a2 = a0 >> 0x7
131401: d3 97 07                 a0 = a0 ^ a2
131404: 97 79 11                 a2 = a0 << 0x11
131407: d3 97 07                 a0 = a0 ^ a2
131410: 3e 07 78 12 03           u64 [0x31278] = a0
131415: 82 1c c0 01              a5 = u64 [sp + 0x1c0]
131419: 52 0c 07                 jump @9828 if a5 != 0
      :                          @9827
131422: 28 79 f2 00              jump @13225
      :                          @9828
131426: 82 1b b8 01              a4 = u64 [sp + 0x1b8]
131430: 82 b9 10                 a2 = u64 [a4 + 0x10]
131433: 56 19 01 08              jump @9830 if a2 >u 1
      :                          @9829
131437: 28 75 f2 00              jump @13236
      :                          @9830
131441: 3a 02 60 11 03           t0 = u64 [0x31160]
131446: ca 27 07                 a0 = a0 * t0
131449: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
131459: d6 87 08                 a1 = a0 mulhu a1
131462: 98 88 04                 a1 = a1 >> 0x4
131465: 82 ba 08                 a3 = u64 [a4 + 0x8]
131468: 96 88 14                 a1 = a1 * 0x14
131471: c9 87 07                 a0 = a0 - a1
131474: 95 79 01                 a2 = a0 + 0x1
131477: 7b a9 08                 u64 [a3 + 0x8] = a2
131480: 56 1c 01 08              jump @9832 if a5 >u 1
      :                          @9831
131484: 28 33 f2 00              jump @13217
      :                          @9832
131488: 82 b7 28                 a0 = u64 [a4 + 0x28]
131491: 52 07 07                 jump @9834 if a0 != 0
      :                          @9833
131494: 28 40 f2 00              jump @13240
      :                          @9834
131498: 82 b7 20                 a0 = u64 [a4 + 0x20]
131501: 7b 79                    u64 [a0] = a2
131503: 3a 08 78 12 03           a1 = u64 [0x31278]
131508: 97 89 0d                 a2 = a1 << 0xd
131511: d3 98 08                 a1 = a1 ^ a2
131514: 98 89 07                 a2 = a1 >> 0x7
131517: d3 98 08                 a1 = a1 ^ a2
131520: 97 8b 11                 a4 = a1 << 0x11
131523: d3 8b 0b                 a4 = a4 ^ a1
131526: 3e 0b 78 12 03           u64 [0x31278] = a4
131531: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
131535: 52 08 07                 jump @9836 if a1 != 0
      :                          @9835
131538: 28 fc f1 00              jump @13216
      :                          @9836
131542: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
131546: 82 79 10                 a2 = u64 [a0 + 0x10]
131549: 55 19 03 08              jump @9838 if a2 >=u 3
      :                          @9837
131553: 28 0d f2 00              jump @13248
      :                          @9838
131557: ca 2b 09                 a2 = a4 * t0
131560: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
131570: d6 b9 0b                 a4 = a2 mulhu a4
131573: 98 bb 04                 a4 = a4 >> 0x4
131576: 82 76 08                 s1 = u64 [a0 + 0x8]
131579: 96 bb 14                 a4 = a4 * 0x14
131582: c9 b9 09                 a2 = a2 - a4
131585: 95 99 01                 a2 = a2 + 0x1
131588: 7b 69 10                 u64 [s1 + 0x10] = a2
131591: 55 18 03 08              jump @9840 if a1 >=u 3
      :                          @9839
131595: 28 fd f0 00              jump @13199
      :                          @9840
131599: 82 78 40                 a1 = u64 [a0 + 0x40]
131602: 52 08 07                 jump @9842 if a1 != 0
      :                          @9841
131605: 28 b9 f1 00              jump @13216
      :                          @9842
131609: 82 77 38                 a0 = u64 [a0 + 0x38]
131612: 7b 79                    u64 [a0] = a2
131614: 3a 08 78 12 03           a1 = u64 [0x31278]
131619: 97 89 0d                 a2 = a1 << 0xd
131622: d3 98 08                 a1 = a1 ^ a2
131625: 98 89 07                 a2 = a1 >> 0x7
131628: d3 98 08                 a1 = a1 ^ a2
131631: 97 8b 11                 a4 = a1 << 0x11
131634: d3 8b 0b                 a4 = a4 ^ a1
131637: 3e 0b 78 12 03           u64 [0x31278] = a4
131642: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
131646: 52 08 07                 jump @9844 if a1 != 0
      :                          @9843
131649: 28 8d f1 00              jump @13216
      :                          @9844
131653: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
131657: 82 79 10                 a2 = u64 [a0 + 0x10]
131660: 55 19 04 08              jump @9846 if a2 >=u 4
      :                          @9845
131664: 28 91 f1 00              jump @13235
      :                          @9846
131668: ca 2b 09                 a2 = a4 * t0
131671: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
131681: d6 b9 0b                 a4 = a2 mulhu a4
131684: 98 bb 04                 a4 = a4 >> 0x4
131687: 82 76 08                 s1 = u64 [a0 + 0x8]
131690: 96 bb 14                 a4 = a4 * 0x14
131693: c9 b9 09                 a2 = a2 - a4
131696: 95 99 01                 a2 = a2 + 0x1
131699: 7b 69 18                 u64 [s1 + 0x18] = a2
131702: 55 18 04 08              jump @9848 if a1 >=u 4
      :                          @9847
131706: 28 8d f0 00              jump @13198
      :                          @9848
131710: 82 78 58                 a1 = u64 [a0 + 0x58]
131713: 52 08 07                 jump @9850 if a1 != 0
      :                          @9849
131716: 28 4a f1 00              jump @13216
      :                          @9850
131720: 82 77 50                 a0 = u64 [a0 + 0x50]
131723: 7b 79                    u64 [a0] = a2
131725: 3a 08 78 12 03           a1 = u64 [0x31278]
131730: 97 89 0d                 a2 = a1 << 0xd
131733: d3 98 08                 a1 = a1 ^ a2
131736: 98 89 07                 a2 = a1 >> 0x7
131739: d3 98 08                 a1 = a1 ^ a2
131742: 97 8b 11                 a4 = a1 << 0x11
131745: d3 8b 0b                 a4 = a4 ^ a1
131748: 3e 0b 78 12 03           u64 [0x31278] = a4
131753: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
131757: 52 08 07                 jump @9852 if a1 != 0
      :                          @9851
131760: 28 1e f1 00              jump @13216
      :                          @9852
131764: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
131768: 82 79 10                 a2 = u64 [a0 + 0x10]
131771: 55 19 05 08              jump @9854 if a2 >=u 5
      :                          @9853
131775: 28 30 f1 00              jump @13249
      :                          @9854
131779: ca 2b 09                 a2 = a4 * t0
131782: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
131792: d6 b9 0b                 a4 = a2 mulhu a4
131795: 98 bb 04                 a4 = a4 >> 0x4
131798: 82 76 08                 s1 = u64 [a0 + 0x8]
131801: 96 bb 14                 a4 = a4 * 0x14
131804: c9 b9 09                 a2 = a2 - a4
131807: 95 99 01                 a2 = a2 + 0x1
131810: 7b 69 20                 u64 [s1 + 0x20] = a2
131813: 55 18 05 08              jump @9856 if a1 >=u 5
      :                          @9855
131817: 28 e8 f0 00              jump @13219
      :                          @9856
131821: 82 78 70                 a1 = u64 [a0 + 0x70]
131824: 52 08 07                 jump @9858 if a1 != 0
      :                          @9857
131827: 28 db f0 00              jump @13216
      :                          @9858
131831: 82 77 68                 a0 = u64 [a0 + 0x68]
131834: 7b 79                    u64 [a0] = a2
131836: 3a 08 78 12 03           a1 = u64 [0x31278]
131841: 97 89 0d                 a2 = a1 << 0xd
131844: d3 98 08                 a1 = a1 ^ a2
131847: 98 89 07                 a2 = a1 >> 0x7
131850: d3 98 08                 a1 = a1 ^ a2
131853: 97 8b 11                 a4 = a1 << 0x11
131856: d3 8b 0b                 a4 = a4 ^ a1
131859: 3e 0b 78 12 03           u64 [0x31278] = a4
131864: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
131868: 52 08 07                 jump @9860 if a1 != 0
      :                          @9859
131871: 28 af f0 00              jump @13216
      :                          @9860
131875: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
131879: 82 79 10                 a2 = u64 [a0 + 0x10]
131882: 55 19 06 08              jump @9862 if a2 >=u 6
      :                          @9861
131886: 28 c8 f0 00              jump @13254
      :                          @9862
131890: ca 2b 09                 a2 = a4 * t0
131893: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
131903: d6 b9 0b                 a4 = a2 mulhu a4
131906: 98 bb 04                 a4 = a4 >> 0x4
131909: 82 76 08                 s1 = u64 [a0 + 0x8]
131912: 96 bb 14                 a4 = a4 * 0x14
131915: c9 b9 09                 a2 = a2 - a4
131918: 95 99 01                 a2 = a2 + 0x1
131921: 7b 69 28                 u64 [s1 + 0x28] = a2
131924: 55 18 06 08              jump @9864 if a1 >=u 6
      :                          @9863
131928: 28 7d f0 00              jump @13223
      :                          @9864
131932: 82 78 88 00              a1 = u64 [a0 + 0x88]
131936: 52 08 07                 jump @9866 if a1 != 0
      :                          @9865
131939: 28 6b f0 00              jump @13216
      :                          @9866
131943: 82 77 80 00              a0 = u64 [a0 + 0x80]
131947: 7b 79                    u64 [a0] = a2
131949: 3a 08 78 12 03           a1 = u64 [0x31278]
131954: 97 89 0d                 a2 = a1 << 0xd
131957: d3 98 08                 a1 = a1 ^ a2
131960: 98 89 07                 a2 = a1 >> 0x7
131963: d3 98 08                 a1 = a1 ^ a2
131966: 97 8c 11                 a5 = a1 << 0x11
131969: d3 8c 0c                 a5 = a5 ^ a1
131972: 3e 0c 78 12 03           u64 [0x31278] = a5
131977: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
131981: 55 18 02 08              jump @9868 if a1 >=u 2
      :                          @9867
131985: 28 75 ef 00              jump @13197
      :                          @9868
131989: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
131993: 82 79 28                 a2 = u64 [a0 + 0x28]
131996: 55 19 03 08              jump @9870 if a2 >=u 3
      :                          @9869
132000: 28 42 f0 00              jump @13236
      :                          @9870
132004: ca 2c 09                 a2 = a5 * t0
132007: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
132017: d6 a9 0a                 a3 = a2 mulhu a3
132020: 98 aa 04                 a3 = a3 >> 0x4
132023: 82 76 20                 s1 = u64 [a0 + 0x20]
132026: 96 aa 14                 a3 = a3 * 0x14
132029: c9 a9 09                 a2 = a2 - a3
132032: 95 9a 01                 a3 = a2 + 0x1
132035: 7b 6a 10                 u64 [s1 + 0x10] = a3
132038: 55 18 03 08              jump @9872 if a1 >=u 3
      :                          @9871
132042: 28 22 f0 00              jump @13246
      :                          @9872
132046: 82 78 40                 a1 = u64 [a0 + 0x40]
132049: 55 18 02 08              jump @9874 if a1 >=u 2
      :                          @9873
132053: 28 03 f0 00              jump @13226
      :                          @9874
132057: 82 77 38                 a0 = u64 [a0 + 0x38]
132060: 7b 7a 08                 u64 [a0 + 0x8] = a3
132063: 3a 08 78 12 03           a1 = u64 [0x31278]
132068: 97 8a 0d                 a3 = a1 << 0xd
132071: d3 a8 08                 a1 = a1 ^ a3
132074: 98 8a 07                 a3 = a1 >> 0x7
132077: d3 a8 08                 a1 = a1 ^ a3
132080: 97 8b 11                 a4 = a1 << 0x11
132083: d3 8b 0b                 a4 = a4 ^ a1
132086: 3e 0b 78 12 03           u64 [0x31278] = a4
132091: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
132095: 55 18 02 08              jump @9876 if a1 >=u 2
      :                          @9875
132099: 28 d5 ef 00              jump @13226
      :                          @9876
132103: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
132107: 82 79 28                 a2 = u64 [a0 + 0x28]
132110: 55 19 04 08              jump @9878 if a2 >=u 4
      :                          @9877
132114: 28 cf ef 00              jump @13235
      :                          @9878
132118: ca 2b 09                 a2 = a4 * t0
132121: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132131: d6 b9 0b                 a4 = a2 mulhu a4
132134: 98 bb 04                 a4 = a4 >> 0x4
132137: 82 76 20                 s1 = u64 [a0 + 0x20]
132140: 96 bb 14                 a4 = a4 * 0x14
132143: c9 b9 09                 a2 = a2 - a4
132146: 95 9b 01                 a4 = a2 + 0x1
132149: 7b 6b 18                 u64 [s1 + 0x18] = a4
132152: 55 18 04 08              jump @9880 if a1 >=u 4
      :                          @9879
132156: 28 a3 ef 00              jump @13233
      :                          @9880
132160: 82 78 58                 a1 = u64 [a0 + 0x58]
132163: 55 18 02 08              jump @9882 if a1 >=u 2
      :                          @9881
132167: 28 91 ef 00              jump @13226
      :                          @9882
132171: 82 77 50                 a0 = u64 [a0 + 0x50]
132174: 7b 7b 08                 u64 [a0 + 0x8] = a4
132177: 3a 08 78 12 03           a1 = u64 [0x31278]
132182: 97 8a 0d                 a3 = a1 << 0xd
132185: d3 a8 08                 a1 = a1 ^ a3
132188: 98 8a 07                 a3 = a1 >> 0x7
132191: d3 a8 08                 a1 = a1 ^ a3
132194: 97 8b 11                 a4 = a1 << 0x11
132197: d3 8b 0b                 a4 = a4 ^ a1
132200: 3e 0b 78 12 03           u64 [0x31278] = a4
132205: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
132209: 55 18 02 08              jump @9884 if a1 >=u 2
      :                          @9883
132213: 28 63 ef 00              jump @13226
      :                          @9884
132217: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
132221: 82 79 28                 a2 = u64 [a0 + 0x28]
132224: 55 19 05 08              jump @9886 if a2 >=u 5
      :                          @9885
132228: 28 5f ef 00              jump @13237
      :                          @9886
132232: ca 2b 09                 a2 = a4 * t0
132235: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132245: d6 b9 0b                 a4 = a2 mulhu a4
132248: 98 bb 04                 a4 = a4 >> 0x4
132251: 82 76 20                 s1 = u64 [a0 + 0x20]
132254: 96 bb 14                 a4 = a4 * 0x14
132257: c9 b9 09                 a2 = a2 - a4
132260: 95 9b 01                 a4 = a2 + 0x1
132263: 7b 6b 20                 u64 [s1 + 0x20] = a4
132266: 55 18 05 08              jump @9888 if a1 >=u 5
      :                          @9887
132270: 28 32 ef 00              jump @13234
      :                          @9888
132274: 82 78 70                 a1 = u64 [a0 + 0x70]
132277: 55 18 02 08              jump @9890 if a1 >=u 2
      :                          @9889
132281: 28 1f ef 00              jump @13226
      :                          @9890
132285: 82 77 68                 a0 = u64 [a0 + 0x68]
132288: 7b 7b 08                 u64 [a0 + 0x8] = a4
132291: 3a 08 78 12 03           a1 = u64 [0x31278]
132296: 97 8a 0d                 a3 = a1 << 0xd
132299: d3 a8 08                 a1 = a1 ^ a3
132302: 98 8a 07                 a3 = a1 >> 0x7
132305: d3 a8 08                 a1 = a1 ^ a3
132308: 97 8b 11                 a4 = a1 << 0x11
132311: d3 8b 0b                 a4 = a4 ^ a1
132314: 3e 0b 78 12 03           u64 [0x31278] = a4
132319: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
132323: 55 18 02 08              jump @9892 if a1 >=u 2
      :                          @9891
132327: 28 f1 ee 00              jump @13226
      :                          @9892
132331: 82 1a b8 01              a3 = u64 [sp + 0x1b8]
132335: 82 a9 28                 a2 = u64 [a3 + 0x28]
132338: 55 19 06 08              jump @9894 if a2 >=u 6
      :                          @9893
132342: 28 ee ee 00              jump @13238
      :                          @9894
132346: ca 2b 09                 a2 = a4 * t0
132349: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132359: d6 b9 0b                 a4 = a2 mulhu a4
132362: 98 bb 04                 a4 = a4 >> 0x4
132365: 82 a6 20                 s1 = u64 [a3 + 0x20]
132368: 96 bb 14                 a4 = a4 * 0x14
132371: c9 b9 09                 a2 = a2 - a4
132374: 95 99 01                 a2 = a2 + 0x1
132377: 7b 69 28                 u64 [s1 + 0x28] = a2
132380: 55 18 06 08              jump @9896 if a1 >=u 6
      :                          @9895
132384: 28 c5 ee 00              jump @13239
      :                          @9896
132388: 82 a8 88 00              a1 = u64 [a3 + 0x88]
132392: 55 18 02 08              jump @9898 if a1 >=u 2
      :                          @9897
132396: 28 ac ee 00              jump @13226
      :                          @9898
132400: 82 a8 80 00              a1 = u64 [a3 + 0x80]
132404: 7b 89 08                 u64 [a1 + 0x8] = a2
132407: 3a 09 78 12 03           a2 = u64 [0x31278]
132412: 97 9a 0d                 a3 = a2 << 0xd
132415: d3 a9 09                 a2 = a2 ^ a3
132418: 98 9a 07                 a3 = a2 >> 0x7
132421: d3 a9 09                 a2 = a2 ^ a3
132424: 97 9c 11                 a5 = a2 << 0x11
132427: d3 9c 0c                 a5 = a5 ^ a2
132430: 3e 0c 78 12 03           u64 [0x31278] = a5
132435: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
132439: 55 18 03 08              jump @9900 if a1 >=u 3
      :                          @9899
132443: 28 74 ee 00              jump @13217
      :                          @9900
132447: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
132451: 82 79 40                 a2 = u64 [a0 + 0x40]
132454: 55 19 04 08              jump @9902 if a2 >=u 4
      :                          @9901
132458: 28 78 ee 00              jump @13236
      :                          @9902
132462: ca 2c 09                 a2 = a5 * t0
132465: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
132475: d6 a9 0a                 a3 = a2 mulhu a3
132478: 98 aa 04                 a3 = a3 >> 0x4
132481: 82 76 38                 s1 = u64 [a0 + 0x38]
132484: 96 aa 14                 a3 = a3 * 0x14
132487: c9 a9 09                 a2 = a2 - a3
132490: 95 9a 01                 a3 = a2 + 0x1
132493: 7b 6a 18                 u64 [s1 + 0x18] = a3
132496: 55 18 04 08              jump @9904 if a1 >=u 4
      :                          @9903
132500: 28 5c ee 00              jump @13250
      :                          @9904
132504: 82 78 58                 a1 = u64 [a0 + 0x58]
132507: 55 18 03 08              jump @9906 if a1 >=u 3
      :                          @9905
132511: 28 3a ee 00              jump @13227
      :                          @9906
132515: 82 77 50                 a0 = u64 [a0 + 0x50]
132518: 7b 7a 10                 u64 [a0 + 0x10] = a3
132521: 3a 08 78 12 03           a1 = u64 [0x31278]
132526: 97 8a 0d                 a3 = a1 << 0xd
132529: d3 a8 08                 a1 = a1 ^ a3
132532: 98 8a 07                 a3 = a1 >> 0x7
132535: d3 a8 08                 a1 = a1 ^ a3
132538: 97 8b 11                 a4 = a1 << 0x11
132541: d3 8b 0b                 a4 = a4 ^ a1
132544: 3e 0b 78 12 03           u64 [0x31278] = a4
132549: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
132553: 55 18 03 08              jump @9908 if a1 >=u 3
      :                          @9907
132557: 28 0c ee 00              jump @13227
      :                          @9908
132561: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
132565: 82 79 40                 a2 = u64 [a0 + 0x40]
132568: 55 19 05 08              jump @9910 if a2 >=u 5
      :                          @9909
132572: 28 07 ee 00              jump @13237
      :                          @9910
132576: ca 2b 09                 a2 = a4 * t0
132579: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132589: d6 b9 0b                 a4 = a2 mulhu a4
132592: 98 bb 04                 a4 = a4 >> 0x4
132595: 82 76 38                 s1 = u64 [a0 + 0x38]
132598: 96 bb 14                 a4 = a4 * 0x14
132601: c9 b9 09                 a2 = a2 - a4
132604: 95 9b 01                 a4 = a2 + 0x1
132607: 7b 6b 20                 u64 [s1 + 0x20] = a4
132610: 55 18 05 08              jump @9912 if a1 >=u 5
      :                          @9911
132614: 28 da ed 00              jump @13234
      :                          @9912
132618: 82 78 70                 a1 = u64 [a0 + 0x70]
132621: 55 18 03 08              jump @9914 if a1 >=u 3
      :                          @9913
132625: 28 c8 ed 00              jump @13227
      :                          @9914
132629: 82 77 68                 a0 = u64 [a0 + 0x68]
132632: 7b 7b 10                 u64 [a0 + 0x10] = a4
132635: 3a 08 78 12 03           a1 = u64 [0x31278]
132640: 97 8a 0d                 a3 = a1 << 0xd
132643: d3 a8 08                 a1 = a1 ^ a3
132646: 98 8a 07                 a3 = a1 >> 0x7
132649: d3 a8 08                 a1 = a1 ^ a3
132652: 97 8b 11                 a4 = a1 << 0x11
132655: d3 8b 0b                 a4 = a4 ^ a1
132658: 3e 0b 78 12 03           u64 [0x31278] = a4
132663: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
132667: 55 18 03 08              jump @9916 if a1 >=u 3
      :                          @9915
132671: 28 9a ed 00              jump @13227
      :                          @9916
132675: 82 1a b8 01              a3 = u64 [sp + 0x1b8]
132679: 82 a9 40                 a2 = u64 [a3 + 0x40]
132682: 55 19 06 08              jump @9918 if a2 >=u 6
      :                          @9917
132686: 28 96 ed 00              jump @13238
      :                          @9918
132690: ca 2b 09                 a2 = a4 * t0
132693: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132703: d6 b9 0b                 a4 = a2 mulhu a4
132706: 98 bb 04                 a4 = a4 >> 0x4
132709: 82 a6 38                 s1 = u64 [a3 + 0x38]
132712: 96 bb 14                 a4 = a4 * 0x14
132715: c9 b9 09                 a2 = a2 - a4
132718: 95 99 01                 a2 = a2 + 0x1
132721: 7b 69 28                 u64 [s1 + 0x28] = a2
132724: 55 18 06 08              jump @9920 if a1 >=u 6
      :                          @9919
132728: 28 6d ed 00              jump @13239
      :                          @9920
132732: 82 a8 88 00              a1 = u64 [a3 + 0x88]
132736: 55 18 03 08              jump @9922 if a1 >=u 3
      :                          @9921
132740: 28 55 ed 00              jump @13227
      :                          @9922
132744: 82 a8 80 00              a1 = u64 [a3 + 0x80]
132748: 7b 89 10                 u64 [a1 + 0x10] = a2
132751: 3a 09 78 12 03           a2 = u64 [0x31278]
132756: 97 9a 0d                 a3 = a2 << 0xd
132759: d3 a9 09                 a2 = a2 ^ a3
132762: 98 9a 07                 a3 = a2 >> 0x7
132765: d3 a9 09                 a2 = a2 ^ a3
132768: 97 9c 11                 a5 = a2 << 0x11
132771: d3 9c 0c                 a5 = a5 ^ a2
132774: 3e 0c 78 12 03           u64 [0x31278] = a5
132779: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
132783: 55 18 04 08              jump @9924 if a1 >=u 4
      :                          @9923
132787: 28 1c ed 00              jump @13217
      :                          @9924
132791: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
132795: 82 79 58                 a2 = u64 [a0 + 0x58]
132798: 55 19 05 08              jump @9926 if a2 >=u 5
      :                          @9925
132802: 28 20 ed 00              jump @13236
      :                          @9926
132806: ca 2c 09                 a2 = a5 * t0
132809: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
132819: d6 a9 0a                 a3 = a2 mulhu a3
132822: 98 aa 04                 a3 = a3 >> 0x4
132825: 82 76 50                 s1 = u64 [a0 + 0x50]
132828: 96 aa 14                 a3 = a3 * 0x14
132831: c9 a9 09                 a2 = a2 - a3
132834: 95 9a 01                 a3 = a2 + 0x1
132837: 7b 6a 20                 u64 [s1 + 0x20] = a3
132840: 55 18 05 08              jump @9928 if a1 >=u 5
      :                          @9927
132844: 28 01 ed 00              jump @13247
      :                          @9928
132848: 82 78 70                 a1 = u64 [a0 + 0x70]
132851: 55 18 04 08              jump @9930 if a1 >=u 4
      :                          @9929
132855: 28 e8 ec 00              jump @13233
      :                          @9930
132859: 82 77 68                 a0 = u64 [a0 + 0x68]
132862: 7b 7a 18                 u64 [a0 + 0x18] = a3
132865: 3a 08 78 12 03           a1 = u64 [0x31278]
132870: 97 8a 0d                 a3 = a1 << 0xd
132873: d3 a8 08                 a1 = a1 ^ a3
132876: 98 8a 07                 a3 = a1 >> 0x7
132879: d3 a8 08                 a1 = a1 ^ a3
132882: 97 8b 11                 a4 = a1 << 0x11
132885: d3 8b 0b                 a4 = a4 ^ a1
132888: 3e 0b 78 12 03           u64 [0x31278] = a4
132893: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
132897: 55 18 04 08              jump @9932 if a1 >=u 4
      :                          @9931
132901: 28 ba ec 00              jump @13233
      :                          @9932
132905: 82 1a b8 01              a3 = u64 [sp + 0x1b8]
132909: 82 a9 58                 a2 = u64 [a3 + 0x58]
132912: 55 19 06 08              jump @9934 if a2 >=u 6
      :                          @9933
132916: 28 b0 ec 00              jump @13238
      :                          @9934
132920: ca 2b 09                 a2 = a4 * t0
132923: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132933: d6 b9 0b                 a4 = a2 mulhu a4
132936: 98 bb 04                 a4 = a4 >> 0x4
132939: 82 a6 50                 s1 = u64 [a3 + 0x50]
132942: 96 bb 14                 a4 = a4 * 0x14
132945: c9 b9 09                 a2 = a2 - a4
132948: 95 99 01                 a2 = a2 + 0x1
132951: 7b 69 28                 u64 [s1 + 0x28] = a2
132954: 55 18 06 08              jump @9936 if a1 >=u 6
      :                          @9935
132958: 28 87 ec 00              jump @13239
      :                          @9936
132962: 82 a8 88 00              a1 = u64 [a3 + 0x88]
132966: 55 18 04 08              jump @9938 if a1 >=u 4
      :                          @9937
132970: 28 75 ec 00              jump @13233
      :                          @9938
132974: 82 a8 80 00              a1 = u64 [a3 + 0x80]
132978: 7b 89 18                 u64 [a1 + 0x18] = a2
132981: 3a 09 78 12 03           a2 = u64 [0x31278]
132986: 97 9a 0d                 a3 = a2 << 0xd
132989: d3 a9 09                 a2 = a2 ^ a3
132992: 98 9a 07                 a3 = a2 >> 0x7
132995: d3 a9 09                 a2 = a2 ^ a3
132998: 97 9c 11                 a5 = a2 << 0x11
133001: d3 9c 0c                 a5 = a5 ^ a2
133004: 3e 0c 78 12 03           u64 [0x31278] = a5
133009: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
133013: 55 18 05 08              jump @9940 if a1 >=u 5
      :                          @9939
133017: 28 36 ec 00              jump @13217
      :                          @9940
133021: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
133025: 82 79 70                 a2 = u64 [a0 + 0x70]
133028: 55 19 06 08              jump @9942 if a2 >=u 6
      :                          @9941
133032: 28 3a ec 00              jump @13236
      :                          @9942
133036: ca 2c 09                 a2 = a5 * t0
133039: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
133049: d6 a9 0a                 a3 = a2 mulhu a3
133052: 98 aa 04                 a3 = a3 >> 0x4
133055: 33 0c 14                 a5 = 0x14
133058: 82 76 68                 s1 = u64 [a0 + 0x68]
133061: ca ca 0a                 a3 = a3 * a5
133064: c9 a9 09                 a2 = a2 - a3
133067: 95 99 01                 a2 = a2 + 0x1
133070: 7b 69 28                 u64 [s1 + 0x28] = a2
133073: 55 18 06 08              jump @9944 if a1 >=u 6
      :                          @9943
133077: 28 23 ec 00              jump @13256
      :                          @9944
133081: 7b 12 70                 u64 [sp + 0x70] = t0
133084: 82 78 88 00              a1 = u64 [a0 + 0x88]
133088: 55 18 05 08              jump @9946 if a1 >=u 5
      :                          @9945
133092: 28 fc eb 00              jump @13234
      :                          @9946
133096: 82 77 80 00              a0 = u64 [a0 + 0x80]
133100: 7b 79 20                 u64 [a0 + 0x20] = a2
133103: 95 17 c8 01              a0 = sp + 0x1c8
133107: 33 08 06                 a1 = 0x6
133110: 50 20 96 06 69 72 fe     ra = 1686, jump @2226
      :                          @9947 [@dyn 843]
133117: 49 21 20 01              u64 [sp + 288] = 0
133121: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
133125: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
133129: 49 21 28 01 08           u64 [sp + 296] = 0x8
133134: 49 21 30 01              u64 [sp + 304] = 0
133138: 95 17 e0 01              a0 = sp + 0x1e0
133142: 50 20 98 06 c4 68 fe     ra = 1688, jump @2100
      :                          @9948 [@dyn 844]
133149: 3a 07 78 12 03           a0 = u64 [0x31278]
133154: 97 79 0d                 a2 = a0 << 0xd
133157: d3 97 07                 a0 = a0 ^ a2
133160: 98 79 07                 a2 = a0 >> 0x7
133163: d3 97 07                 a0 = a0 ^ a2
133166: 97 79 11                 a2 = a0 << 0x11
133169: d3 97 07                 a0 = a0 ^ a2
133172: 3e 07 78 12 03           u64 [0x31278] = a0
133177: 82 16 f0 01              s1 = u64 [sp + 0x1f0]
133181: 82 19 70                 a2 = u64 [sp + 0x70]
133184: 52 06 07                 jump @9950 if s1 != 0
      :                          @9949
133187: 28 97 eb 00              jump @13228
      :                          @9950
133191: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
133195: ca 97 07                 a0 = a0 * a2
133198: cd 67 09                 a2 = a0 %u s1
133201: 97 97 03                 a0 = a2 << 0x3
133204: c8 87 07                 a0 = a0 + a1
133207: 82 78                    a1 = u64 [a0]
133209: 7b 18 60                 u64 [sp + 0x60] = a1
133212: 95 78 08                 a1 = a0 + 0x8
133215: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
133218: c8 69 09                 a2 = a2 + s1
133221: 97 99 03                 a2 = a2 << 0x3
133224: 50 20 9a 06 76 01 01     ra = 1690, jump @13639
      :                          @9951 [@dyn 845]
133231: 82 18 30 01              a1 = u64 [sp + 0x130]
133235: 82 17 20 01              a0 = u64 [sp + 0x120]
133239: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
133242: 7b 16 f0 01              u64 [sp + 0x1f0] = s1
133246: ab 78 13                 jump @9954 if a1 != a0
      :                          @9952
133249: 95 17 20 01              a0 = sp + 0x120
133253: 50 20 9c 06 82 4a fe     ra = 1692, jump @1581
      :                          @9953 [@dyn 846]
133260: 82 18 30 01              a1 = u64 [sp + 0x130]
133264: 01                       fallthrough
      :                          @9954
133265: 82 17 28 01              a0 = u64 [sp + 0x128]
133269: 97 89 03                 a2 = a1 << 0x3
133272: c8 97 07                 a0 = a0 + a2
133275: 82 19 60                 a2 = u64 [sp + 0x60]
133278: 7b 79                    u64 [a0] = a2
133280: 95 88 01                 a1 = a1 + 0x1
133283: 7b 18 30 01              u64 [sp + 0x130] = a1
133287: 3a 07 78 12 03           a0 = u64 [0x31278]
133292: 97 79 0d                 a2 = a0 << 0xd
133295: d3 97 07                 a0 = a0 ^ a2
133298: 98 79 07                 a2 = a0 >> 0x7
133301: d3 97 07                 a0 = a0 ^ a2
133304: 97 79 11                 a2 = a0 << 0x11
133307: d3 97 07                 a0 = a0 ^ a2
133310: 3e 07 78 12 03           u64 [0x31278] = a0
133315: 82 16 f0 01              s1 = u64 [sp + 0x1f0]
133319: 82 19 70                 a2 = u64 [sp + 0x70]
133322: 52 06 07                 jump @9956 if s1 != 0
      :                          @9955
133325: 28 0d eb 00              jump @13228
      :                          @9956
133329: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
133333: ca 97 07                 a0 = a0 * a2
133336: cd 67 09                 a2 = a0 %u s1
133339: 97 97 03                 a0 = a2 << 0x3
133342: c8 87 07                 a0 = a0 + a1
133345: 82 78                    a1 = u64 [a0]
133347: 7b 18 60                 u64 [sp + 0x60] = a1
133350: 95 78 08                 a1 = a0 + 0x8
133353: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
133356: c8 69 09                 a2 = a2 + s1
133359: 97 99 03                 a2 = a2 << 0x3
133362: 50 20 9e 06 ec 00 01     ra = 1694, jump @13639
      :                          @9957 [@dyn 847]
133369: 82 18 30 01              a1 = u64 [sp + 0x130]
133373: 82 17 20 01              a0 = u64 [sp + 0x120]
133377: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
133380: 7b 16 f0 01              u64 [sp + 0x1f0] = s1
133384: ab 78 13                 jump @9960 if a1 != a0
      :                          @9958
133387: 95 17 20 01              a0 = sp + 0x120
133391: 50 20 a0 06 f8 49 fe     ra = 1696, jump @1581
      :                          @9959 [@dyn 848]
133398: 82 18 30 01              a1 = u64 [sp + 0x130]
133402: 01                       fallthrough
      :                          @9960
133403: 82 17 28 01              a0 = u64 [sp + 0x128]
133407: 97 89 03                 a2 = a1 << 0x3
133410: c8 97 07                 a0 = a0 + a2
133413: 82 19 60                 a2 = u64 [sp + 0x60]
133416: 7b 79                    u64 [a0] = a2
133418: 95 88 01                 a1 = a1 + 0x1
133421: 7b 18 30 01              u64 [sp + 0x130] = a1
133425: 3a 07 78 12 03           a0 = u64 [0x31278]
133430: 97 79 0d                 a2 = a0 << 0xd
133433: d3 97 07                 a0 = a0 ^ a2
133436: 98 79 07                 a2 = a0 >> 0x7
133439: d3 97 07                 a0 = a0 ^ a2
133442: 97 79 11                 a2 = a0 << 0x11
133445: d3 97 07                 a0 = a0 ^ a2
133448: 3e 07 78 12 03           u64 [0x31278] = a0
133453: 82 16 f0 01              s1 = u64 [sp + 0x1f0]
133457: 82 18 70                 a1 = u64 [sp + 0x70]
133460: 52 06 07                 jump @9962 if s1 != 0
      :                          @9961
133463: 28 83 ea 00              jump @13228
      :                          @9962
133467: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
133471: ca 87 07                 a0 = a0 * a1
133474: cd 67 09                 a2 = a0 %u s1
133477: 97 97 03                 a0 = a2 << 0x3
133480: 7b 1a 70                 u64 [sp + 0x70] = a3
133483: c8 a7 07                 a0 = a0 + a3
133486: 82 78                    a1 = u64 [a0]
133488: 7b 18 60                 u64 [sp + 0x60] = a1
133491: 95 78 08                 a1 = a0 + 0x8
133494: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
133497: c8 69 09                 a2 = a2 + s1
133500: 97 99 03                 a2 = a2 << 0x3
133503: 50 20 a2 06 5f 00 01     ra = 1698, jump @13639
      :                          @9963 [@dyn 849]
133510: 82 18 30 01              a1 = u64 [sp + 0x130]
133514: 82 17 20 01              a0 = u64 [sp + 0x120]
133518: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
133521: 7b 16 f0 01              u64 [sp + 0x1f0] = s1
133525: ab 78 13                 jump @9966 if a1 != a0
      :                          @9964
133528: 95 17 20 01              a0 = sp + 0x120
133532: 50 20 a4 06 6b 49 fe     ra = 1700, jump @1581
      :                          @9965 [@dyn 850]
133539: 82 18 30 01              a1 = u64 [sp + 0x130]
133543: 01                       fallthrough
      :                          @9966
133544: 82 17 28 01              a0 = u64 [sp + 0x128]
133548: 97 89 03                 a2 = a1 << 0x3
133551: c8 97 07                 a0 = a0 + a2
133554: 82 19 60                 a2 = u64 [sp + 0x60]
133557: 7b 79                    u64 [a0] = a2
133559: 95 89 01                 a2 = a1 + 0x1
133562: 7b 19 30 01              u64 [sp + 0x130] = a2
133566: 82 18 28 01              a1 = u64 [sp + 0x128]
133570: 95 17 b0 01              a0 = sp + 0x1b0
133574: 50 20 a6 06 2a 31 ff     ra = 1702, jump @6374
      :                          @9967 [@dyn 851]
133581: 7b 17 10 01              u64 [sp + 0x110] = a0
133585: 95 17 20 01              a0 = sp + 0x120
133589: 7b 17 38 02              u64 [sp + 0x238] = a0
133593: 33 07 20 02              a0 = 0x220
133597: 7b 17 40 02              u64 [sp + 0x240] = a0
133601: 95 17 10 01              a0 = sp + 0x110
133605: 7b 17 48 02              u64 [sp + 0x248] = a0
133609: 33 07 28 0c              a0 = 0xc28
133613: 7b 17 50 02              u64 [sp + 0x250] = a0
133617: 33 07 f8 11 01           a0 = 0x111f8
133622: 7b 17 90 02              u64 [sp + 0x290] = a0
133626: 49 21 98 02 02           u64 [sp + 664] = 0x2
133631: 49 21 b0 02              u64 [sp + 688] = 0
133635: 95 18 38 02              a1 = sp + 0x238
133639: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
133643: 49 21 a8 02 02           u64 [sp + 680] = 0x2
133648: 95 17 08 02              a0 = sp + 0x208
133652: 95 18 90 02              a1 = sp + 0x290
133656: 50 20 a8 06 27 45 fe     ra = 1704, jump @1491
      :                          @9968 [@dyn 852]
133663: 82 16 10 02              s1 = u64 [sp + 0x210]
133667: 82 1b 18 02              a4 = u64 [sp + 0x218]
133671: 82 17 08 02              a0 = u64 [sp + 0x208]
133675: 7b 17 60                 u64 [sp + 0x60] = a0
133678: 33 07 02                 a0 = 0x2
133681: 33 08                    a1 = 0
133683: 33 09                    a2 = 0
133685: 64 6a                    a3 = s1
133687: 33 00 aa 06              ra = 0x6aa
133691: 0a 64                    ecalli 100 // 'log'
133693: 01                       fallthrough
      :                          @9969 [@dyn 853]
133694: 82 1c 60                 a5 = u64 [sp + 0x60]
133697: 82 17 68                 a0 = u64 [sp + 0x68]
133700: c8 c7 07                 a0 = a0 + a5
133703: 53 37 00 00 ff 27        jump @9975 if a0 <u 4294901760
      :                          @9970
133709: 33 07 c0 22 03           a0 = 0x322c0
133714: 95 77 00 00 01           a0 = a0 + 0x10000
133719: 01                       fallthrough
      :                          @9971
133720: 82 78                    a1 = u64 [a0]
133722: c9 87 09                 a2 = a0 - a1
133725: ab 69 11                 jump @9975 if a2 != s1
      :                          @9972
133728: c9 c8 09                 a2 = a1 - a5
133731: 01                       fallthrough
      :                          @9973
133732: 82 7a                    a3 = u64 [a0]
133734: ab 8a f2                 jump @9971 if a3 != a1
      :                          @9974
133737: 7b 79                    u64 [a0] = a2
133739: 33 0b                    a4 = 0
133741: 01                       fallthrough
      :                          @9975
133742: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
133746: 82 16 70                 s1 = u64 [sp + 0x70]
133749: 51 07 2c                 jump @9982 if a0 == 0
      :                          @9976
133752: 56 27 00 20 29           jump @9982 if a0 >u 8192
      :                          @9977
133757: 97 77 03                 a0 = a0 << 0x3
133760: 33 08 c0 22 03           a1 = 0x322c0
133765: 95 88 00 00 01           a1 = a1 + 0x10000
133770: 01                       fallthrough
      :                          @9978
133771: 82 89                    a2 = u64 [a1]
133773: c9 98 0a                 a3 = a1 - a2
133776: ab 6a 11                 jump @9982 if a3 != s1
      :                          @9979
133779: c9 79 0a                 a3 = a2 - a0
133782: 01                       fallthrough
      :                          @9980
133783: 82 8b                    a4 = u64 [a1]
133785: ab 9b f2                 jump @9978 if a4 != a2
      :                          @9981
133788: 7b 8a                    u64 [a1] = a3
133790: 33 0c                    a5 = 0
133792: 01                       fallthrough
      :                          @9982
133793: 82 18 20 01              a1 = u64 [sp + 0x120]
133797: 51 08 30                 jump @9989 if a1 == 0
      :                          @9983
133800: 56 28 00 20 2d           jump @9989 if a1 >u 8192
      :                          @9984
133805: 82 17 28 01              a0 = u64 [sp + 0x128]
133809: 97 88 03                 a1 = a1 << 0x3
133812: 33 09 c0 22 03           a2 = 0x322c0
133817: 95 99 00 00 01           a2 = a2 + 0x10000
133822: 01                       fallthrough
      :                          @9985
133823: 82 9a                    a3 = u64 [a2]
133825: c9 a9 0b                 a4 = a2 - a3
133828: ab 7b 11                 jump @9989 if a4 != a0
      :                          @9986
133831: c9 8a 0b                 a4 = a3 - a1
133834: 01                       fallthrough
      :                          @9987
133835: 82 9c                    a5 = u64 [a2]
133837: ab ac f2                 jump @9985 if a5 != a3
      :                          @9988
133840: 7b 9b                    u64 [a2] = a4
133842: 33 06                    s1 = 0
133844: 01                       fallthrough
      :                          @9989
133845: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
133849: 51 08 3b                 jump @9996 if a1 == 0
      :                          @9990
133852: 56 28 00 20 38           jump @9996 if a1 >u 8192
      :                          @9991
133857: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
133861: 97 88 03                 a1 = a1 << 0x3
133864: 33 09 c0 22 03           a2 = 0x322c0
133869: 95 99 00 00 01           a2 = a2 + 0x10000
133874: 01                       fallthrough
      :                          @9992
133875: 82 9a                    a3 = u64 [a2]
133877: c9 a9 0b                 a4 = a2 - a3
133880: ab 7b 1c                 jump @9996 if a4 != a0
      :                          @9993
133883: c9 8a 0b                 a4 = a3 - a1
133886: 01                       fallthrough
      :                          @9994
133887: 82 9c                    a5 = u64 [a2]
133889: ab ac f2                 jump @9992 if a5 != a3
      :                          @9995
133892: 7b 9b                    u64 [a2] = a4
133894: 33 06                    s1 = 0
133896: 95 17 b0 01              a0 = sp + 0x1b0
133900: 33 00 ac 06              ra = 0x6ac
133904: 28 49 01 fe              jump @229
      :                          @9996
133908: 95 17 b0 01              a0 = sp + 0x1b0
133912: 50 20 ac 06 41 01 fe     ra = 1708, jump @229
      :                          @9997 [@dyn 854]
133919: 28 a7 d6 00              jump @12856
      :                          @9998 [@dyn 855]
133923: 33 06                    s1 = 0
133925: 3a 02 60 11 03           t0 = u64 [0x31160]
133930: 49 21 20 01              u64 [sp + 288] = 0
133934: 49 21 28 01 08           u64 [sp + 296] = 0x8
133939: 49 21 30 01              u64 [sp + 304] = 0
133943: 3a 03 70 11 03           t1 = u64 [0x31170]
133948: 33 0c 78 12 03           a5 = 0x31278
133953: 33 04 32                 t2 = 0x32
133956: 33 00 0a                 ra = 0xa
133959: 7b 12 60                 u64 [sp + 0x60] = t0
133962: 7b 13 58                 u64 [sp + 0x58] = t1
133965: 28 39                    jump @10001
      :                          @9999
133967: 95 67 01                 a0 = s1 + 0x1
133970: ca 29 09                 a2 = a2 * t0
133973: 98 9a 01                 a3 = a2 >> 0x1
133976: d6 3a 0a                 a3 = a3 mulhu t1
133979: 98 aa 04                 a3 = a3 >> 0x4
133982: ca 4a 0a                 a3 = a3 * t2
133985: 82 1b 28 01              a4 = u64 [sp + 0x128]
133989: c9 a9 09                 a2 = a2 - a3
133992: 95 99 01                 a2 = a2 + 0x1
133995: 97 8a 04                 a3 = a1 << 0x4
133998: c8 ba 0a                 a3 = a3 + a4
134001: 7b a6                    u64 [a3] = s1
134003: 7b a9 08                 u64 [a3 + 0x8] = a2
134006: 95 89 01                 a2 = a1 + 0x1
134009: 7b 19 30 01              u64 [sp + 0x130] = a2
134013: 64 76                    s1 = a0
134015: ab 07 07                 jump @10001 if a0 != ra
      :                          @10000
134018: 28 1f c0 00              jump @12421
      :                          @10001
134022: 3a 07 78 12 03           a0 = u64 [0x31278]
134027: 97 78 0d                 a1 = a0 << 0xd
134030: d3 87 07                 a0 = a0 ^ a1
134033: 98 78 07                 a1 = a0 >> 0x7
134036: d3 87 07                 a0 = a0 ^ a1
134039: 97 78 11                 a1 = a0 << 0x11
134042: d3 78 09                 a2 = a1 ^ a0
134045: 3e 09 78 12 03           u64 [0x31278] = a2
134050: 82 18 30 01              a1 = u64 [sp + 0x130]
134054: 82 17 20 01              a0 = u64 [sp + 0x120]
134058: ab 78 a5                 jump @9999 if a1 != a0
      :                          @10002
134061: 95 17 20 01              a0 = sp + 0x120
134065: 7b 19 70                 u64 [sp + 0x70] = a2
134068: 50 20 b0 06 4c 48 fe     ra = 1712, jump @1605
      :                          @10003 [@dyn 856]
134075: 82 19 70                 a2 = u64 [sp + 0x70]
134078: 33 00 0a                 ra = 0xa
134081: 33 04 32                 t2 = 0x32
134084: 33 0c 78 12 03           a5 = 0x31278
134089: 82 13 58                 t1 = u64 [sp + 0x58]
134092: 82 12 60                 t0 = u64 [sp + 0x60]
134095: 82 18 30 01              a1 = u64 [sp + 0x130]
134099: 28 7c ff                 jump @9999
      :                          @10004 [@dyn 857]
134102: 49 21 08 02              u64 [sp + 520] = 0
134106: 49 21 10 02 08           u64 [sp + 528] = 0x8
134111: 49 21 18 02              u64 [sp + 536] = 0
134115: 33 06 78 12 03           s1 = 0x31278
134120: 49 11 70 03              u64 [sp + 112] = 0x3
134124: 28 37                    jump @10007
      :                          @10005
134126: 82 17 10 02              a0 = u64 [sp + 0x210]
134130: 82 19 a0 02              a2 = u64 [sp + 0x2a0]
134134: 96 8a 18                 a3 = a1 * 0x18
134137: c8 7a 0a                 a3 = a3 + a0
134140: 7b a9 10                 u64 [a3 + 0x10] = a2
134143: 82 19 98 02              a2 = u64 [sp + 0x298]
134147: 7b a9 08                 u64 [a3 + 0x8] = a2
134150: 82 19 90 02              a2 = u64 [sp + 0x290]
134154: 7b a9                    u64 [a3] = a2
134156: 95 88 01                 a1 = a1 + 0x1
134159: 82 19 70                 a2 = u64 [sp + 0x70]
134162: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
134165: 7b 18 18 02              u64 [sp + 0x218] = a1
134169: 7b 19 70                 u64 [sp + 0x70] = a2
134172: 52 09 07                 jump @10007 if a2 != 0
      :                          @10006
134175: 28 a3 c0 00              jump @12449
      :                          @10007
134179: 49 21 90 02              u64 [sp + 656] = 0
134183: 49 21 98 02 08           u64 [sp + 664] = 0x8
134188: 49 21 a0 02              u64 [sp + 672] = 0
134192: 3a 07 78 12 03           a0 = u64 [0x31278]
134197: 97 78 0d                 a1 = a0 << 0xd
134200: d3 87 07                 a0 = a0 ^ a1
134203: 98 78 07                 a1 = a0 >> 0x7
134206: d3 87 07                 a0 = a0 ^ a1
134209: 97 78 11                 a1 = a0 << 0x11
134212: d3 78 08                 a1 = a1 ^ a0
134215: 84 77 01                 a0 = a0 & 0x1
134218: 3e 08 78 12 03           u64 [0x31278] = a1
134223: 52 07 32                 jump @10012 if a0 != 0
      :                          @10008
134226: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134230: 82 17 90 02              a0 = u64 [sp + 0x290]
134234: ab 78 13                 jump @10011 if a1 != a0
      :                          @10009
134237: 95 17 90 02              a0 = sp + 0x290
134241: 50 20 b4 06 a6 46 fe     ra = 1716, jump @1581
      :                          @10010 [@dyn 858]
134248: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134252: 01                       fallthrough
      :                          @10011
134253: 82 17 98 02              a0 = u64 [sp + 0x298]
134257: 97 89 03                 a2 = a1 << 0x3
134260: c8 97 07                 a0 = a0 + a2
134263: 49 07                    u64 [a0 + 0] = 0
134265: 95 88 01                 a1 = a1 + 0x1
134268: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
134272: 01                       fallthrough
      :                          @10012
134273: 3a 07 78 12 03           a0 = u64 [0x31278]
134278: 97 78 0d                 a1 = a0 << 0xd
134281: d3 87 07                 a0 = a0 ^ a1
134284: 98 78 07                 a1 = a0 >> 0x7
134287: d3 87 07                 a0 = a0 ^ a1
134290: 97 78 11                 a1 = a0 << 0x11
134293: d3 78 08                 a1 = a1 ^ a0
134296: 84 77 01                 a0 = a0 & 0x1
134299: 3e 08 78 12 03           u64 [0x31278] = a1
134304: 52 07 33                 jump @10017 if a0 != 0
      :                          @10013
134307: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134311: 82 17 90 02              a0 = u64 [sp + 0x290]
134315: ab 78 13                 jump @10016 if a1 != a0
      :                          @10014
134318: 95 17 90 02              a0 = sp + 0x290
134322: 50 20 b6 06 55 46 fe     ra = 1718, jump @1581
      :                          @10015 [@dyn 859]
134329: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134333: 01                       fallthrough
      :                          @10016
134334: 82 17 98 02              a0 = u64 [sp + 0x298]
134338: 97 89 03                 a2 = a1 << 0x3
134341: c8 97 07                 a0 = a0 + a2
134344: 49 07 01                 u64 [a0 + 0] = 0x1
134347: 95 88 01                 a1 = a1 + 0x1
134350: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
134354: 01                       fallthrough
      :                          @10017
134355: 3a 07 78 12 03           a0 = u64 [0x31278]
134360: 97 78 0d                 a1 = a0 << 0xd
134363: d3 87 07                 a0 = a0 ^ a1
134366: 98 78 07                 a1 = a0 >> 0x7
134369: d3 87 07                 a0 = a0 ^ a1
134372: 97 78 11                 a1 = a0 << 0x11
134375: d3 78 08                 a1 = a1 ^ a0
134378: 84 77 01                 a0 = a0 & 0x1
134381: 3e 08 78 12 03           u64 [0x31278] = a1
134386: 52 07 33                 jump @10022 if a0 != 0
      :                          @10018
134389: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134393: 82 17 90 02              a0 = u64 [sp + 0x290]
134397: ab 78 13                 jump @10021 if a1 != a0
      :                          @10019
134400: 95 17 90 02              a0 = sp + 0x290
134404: 50 20 b8 06 03 46 fe     ra = 1720, jump @1581
      :                          @10020 [@dyn 860]
134411: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134415: 01                       fallthrough
      :                          @10021
134416: 82 17 98 02              a0 = u64 [sp + 0x298]
134420: 97 89 03                 a2 = a1 << 0x3
134423: c8 97 07                 a0 = a0 + a2
134426: 49 07 02                 u64 [a0 + 0] = 0x2
134429: 95 88 01                 a1 = a1 + 0x1
134432: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
134436: 01                       fallthrough
      :                          @10022
134437: 3a 07 78 12 03           a0 = u64 [0x31278]
134442: 97 78 0d                 a1 = a0 << 0xd
134445: d3 87 07                 a0 = a0 ^ a1
134448: 98 78 07                 a1 = a0 >> 0x7
134451: d3 87 07                 a0 = a0 ^ a1
134454: 97 78 11                 a1 = a0 << 0x11
134457: d3 78 08                 a1 = a1 ^ a0
134460: 84 77 01                 a0 = a0 & 0x1
134463: 3e 08 78 12 03           u64 [0x31278] = a1
134468: 52 07 33                 jump @10027 if a0 != 0
      :                          @10023
134471: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134475: 82 17 90 02              a0 = u64 [sp + 0x290]
134479: ab 78 13                 jump @10026 if a1 != a0
      :                          @10024
134482: 95 17 90 02              a0 = sp + 0x290
134486: 50 20 ba 06 b1 45 fe     ra = 1722, jump @1581
      :                          @10025 [@dyn 861]
134493: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134497: 01                       fallthrough
      :                          @10026
134498: 82 17 98 02              a0 = u64 [sp + 0x298]
134502: 97 89 03                 a2 = a1 << 0x3
134505: c8 97 07                 a0 = a0 + a2
134508: 49 07 03                 u64 [a0 + 0] = 0x3
134511: 95 88 01                 a1 = a1 + 0x1
134514: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
134518: 01                       fallthrough
      :                          @10027
134519: 3a 07 78 12 03           a0 = u64 [0x31278]
134524: 97 78 0d                 a1 = a0 << 0xd
134527: d3 87 07                 a0 = a0 ^ a1
134530: 98 78 07                 a1 = a0 >> 0x7
134533: d3 87 07                 a0 = a0 ^ a1
134536: 97 78 11                 a1 = a0 << 0x11
134539: d3 78 08                 a1 = a1 ^ a0
134542: 84 77 01                 a0 = a0 & 0x1
134545: 3e 08 78 12 03           u64 [0x31278] = a1
134550: 52 07 33                 jump @10032 if a0 != 0
      :                          @10028
134553: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134557: 82 17 90 02              a0 = u64 [sp + 0x290]
134561: ab 78 13                 jump @10031 if a1 != a0
      :                          @10029
134564: 95 17 90 02              a0 = sp + 0x290
134568: 50 20 bc 06 5f 45 fe     ra = 1724, jump @1581
      :                          @10030 [@dyn 862]
134575: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134579: 01                       fallthrough
      :                          @10031
134580: 82 17 98 02              a0 = u64 [sp + 0x298]
134584: 97 89 03                 a2 = a1 << 0x3
134587: c8 97 07                 a0 = a0 + a2
134590: 49 07 04                 u64 [a0 + 0] = 0x4
134593: 95 88 01                 a1 = a1 + 0x1
134596: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
134600: 01                       fallthrough
      :                          @10032
134601: 3a 07 78 12 03           a0 = u64 [0x31278]
134606: 97 78 0d                 a1 = a0 << 0xd
134609: d3 87 07                 a0 = a0 ^ a1
134612: 98 78 07                 a1 = a0 >> 0x7
134615: d3 87 07                 a0 = a0 ^ a1
134618: 97 78 11                 a1 = a0 << 0x11
134621: d3 78 08                 a1 = a1 ^ a0
134624: 84 77 01                 a0 = a0 & 0x1
134627: 3e 08 78 12 03           u64 [0x31278] = a1
134632: 52 07 33                 jump @10037 if a0 != 0
      :                          @10033
134635: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134639: 82 17 90 02              a0 = u64 [sp + 0x290]
134643: ab 78 13                 jump @10036 if a1 != a0
      :                          @10034
134646: 95 17 90 02              a0 = sp + 0x290
134650: 50 20 be 06 0d 45 fe     ra = 1726, jump @1581
      :                          @10035 [@dyn 863]
134657: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134661: 01                       fallthrough
      :                          @10036
134662: 82 17 98 02              a0 = u64 [sp + 0x298]
134666: 97 89 03                 a2 = a1 << 0x3
134669: c8 97 07                 a0 = a0 + a2
134672: 49 07 05                 u64 [a0 + 0] = 0x5
134675: 95 88 01                 a1 = a1 + 0x1
134678: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
134682: 01                       fallthrough
      :                          @10037
134683: 3a 07 78 12 03           a0 = u64 [0x31278]
134688: 97 78 0d                 a1 = a0 << 0xd
134691: d3 87 07                 a0 = a0 ^ a1
134694: 98 78 07                 a1 = a0 >> 0x7
134697: d3 87 07                 a0 = a0 ^ a1
134700: 97 78 11                 a1 = a0 << 0x11
134703: d3 78 08                 a1 = a1 ^ a0
134706: 84 77 01                 a0 = a0 & 0x1
134709: 3e 08 78 12 03           u64 [0x31278] = a1
134714: 52 07 33                 jump @10042 if a0 != 0
      :                          @10038
134717: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134721: 82 17 90 02              a0 = u64 [sp + 0x290]
134725: ab 78 13                 jump @10041 if a1 != a0
      :                          @10039
134728: 95 17 90 02              a0 = sp + 0x290
134732: 50 20 c0 06 bb 44 fe     ra = 1728, jump @1581
      :                          @10040 [@dyn 864]
134739: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134743: 01                       fallthrough
      :                          @10041
134744: 82 17 98 02              a0 = u64 [sp + 0x298]
134748: 97 89 03                 a2 = a1 << 0x3
134751: c8 97 07                 a0 = a0 + a2
134754: 49 07 06                 u64 [a0 + 0] = 0x6
134757: 95 88 01                 a1 = a1 + 0x1
134760: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
134764: 01                       fallthrough
      :                          @10042
134765: 3a 07 78 12 03           a0 = u64 [0x31278]
134770: 97 78 0d                 a1 = a0 << 0xd
134773: d3 87 07                 a0 = a0 ^ a1
134776: 98 78 07                 a1 = a0 >> 0x7
134779: d3 87 07                 a0 = a0 ^ a1
134782: 97 78 11                 a1 = a0 << 0x11
134785: d3 78 08                 a1 = a1 ^ a0
134788: 84 77 01                 a0 = a0 & 0x1
134791: 3e 08 78 12 03           u64 [0x31278] = a1
134796: 52 07 33                 jump @10047 if a0 != 0
      :                          @10043
134799: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134803: 82 17 90 02              a0 = u64 [sp + 0x290]
134807: ab 78 13                 jump @10046 if a1 != a0
      :                          @10044
134810: 95 17 90 02              a0 = sp + 0x290
134814: 50 20 c2 06 69 44 fe     ra = 1730, jump @1581
      :                          @10045 [@dyn 865]
134821: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134825: 01                       fallthrough
      :                          @10046
134826: 82 17 98 02              a0 = u64 [sp + 0x298]
134830: 97 89 03                 a2 = a1 << 0x3
134833: c8 97 07                 a0 = a0 + a2
134836: 49 07 07                 u64 [a0 + 0] = 0x7
134839: 95 88 01                 a1 = a1 + 0x1
134842: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
134846: 01                       fallthrough
      :                          @10047
134847: 3a 07 78 12 03           a0 = u64 [0x31278]
134852: 97 78 0d                 a1 = a0 << 0xd
134855: d3 87 07                 a0 = a0 ^ a1
134858: 98 78 07                 a1 = a0 >> 0x7
134861: d3 87 07                 a0 = a0 ^ a1
134864: 97 78 11                 a1 = a0 << 0x11
134867: d3 78 08                 a1 = a1 ^ a0
134870: 84 77 01                 a0 = a0 & 0x1
134873: 3e 08 78 12 03           u64 [0x31278] = a1
134878: 52 07 33                 jump @10052 if a0 != 0
      :                          @10048
134881: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134885: 82 17 90 02              a0 = u64 [sp + 0x290]
134889: ab 78 13                 jump @10051 if a1 != a0
      :                          @10049
134892: 95 17 90 02              a0 = sp + 0x290
134896: 50 20 c4 06 17 44 fe     ra = 1732, jump @1581
      :                          @10050 [@dyn 866]
134903: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134907: 01                       fallthrough
      :                          @10051
134908: 82 17 98 02              a0 = u64 [sp + 0x298]
134912: 97 89 03                 a2 = a1 << 0x3
134915: c8 97 07                 a0 = a0 + a2
134918: 49 07 08                 u64 [a0 + 0] = 0x8
134921: 95 88 01                 a1 = a1 + 0x1
134924: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
134928: 01                       fallthrough
      :                          @10052
134929: 3a 07 78 12 03           a0 = u64 [0x31278]
134934: 97 78 0d                 a1 = a0 << 0xd
134937: d3 87 07                 a0 = a0 ^ a1
134940: 98 78 07                 a1 = a0 >> 0x7
134943: d3 87 07                 a0 = a0 ^ a1
134946: 97 78 11                 a1 = a0 << 0x11
134949: d3 78 08                 a1 = a1 ^ a0
134952: 84 77 01                 a0 = a0 & 0x1
134955: 3e 08 78 12 03           u64 [0x31278] = a1
134960: 52 07 33                 jump @10057 if a0 != 0
      :                          @10053
134963: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134967: 82 17 90 02              a0 = u64 [sp + 0x290]
134971: ab 78 13                 jump @10056 if a1 != a0
      :                          @10054
134974: 95 17 90 02              a0 = sp + 0x290
134978: 50 20 c6 06 c5 43 fe     ra = 1734, jump @1581
      :                          @10055 [@dyn 867]
134985: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134989: 01                       fallthrough
      :                          @10056
134990: 82 17 98 02              a0 = u64 [sp + 0x298]
134994: 97 89 03                 a2 = a1 << 0x3
134997: c8 97 07                 a0 = a0 + a2
135000: 49 07 09                 u64 [a0 + 0] = 0x9
135003: 95 88 01                 a1 = a1 + 0x1
135006: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
135010: 01                       fallthrough
      :                          @10057
135011: 82 18 18 02              a1 = u64 [sp + 0x218]
135015: 82 17 08 02              a0 = u64 [sp + 0x208]
135019: ab 78 83 fc              jump @10005 if a1 != a0
      :                          @10058
135023: 95 17 08 02              a0 = sp + 0x208
135027: 50 20 c8 06 12 43 fe     ra = 1736, jump @1569
      :                          @10059 [@dyn 868]
135034: 82 18 18 02              a1 = u64 [sp + 0x218]
135038: 28 70 fc                 jump @10005
      :                          @10060 [@dyn 869]
135041: 3a 07 78 12 03           a0 = u64 [0x31278]
135046: 97 79 0d                 a2 = a0 << 0xd
135049: d3 97 07                 a0 = a0 ^ a2
135052: 98 7a 07                 a3 = a0 >> 0x7
135055: 3a 09 60 11 03           a2 = u64 [0x31160]
135060: d3 a7 07                 a0 = a0 ^ a3
135063: 97 7a 11                 a3 = a0 << 0x11
135066: d3 a7 07                 a0 = a0 ^ a3
135069: ca 97 0a                 a3 = a0 * a2
135072: 3e 07 78 12 03           u64 [0x31278] = a0
135077: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
135087: d6 ba 07                 a0 = a3 mulhu a4
135090: 98 77 03                 a0 = a0 >> 0x3
135093: 96 77 0a                 a0 = a0 * 0xa
135096: 3a 0c 78 12 03           a5 = u64 [0x31278]
135101: c9 7a 07                 a0 = a3 - a0
135104: 95 77 01                 a0 = a0 + 0x1
135107: 97 ca 0d                 a3 = a5 << 0xd
135110: d3 ca 0a                 a3 = a3 ^ a5
135113: 98 ac 07                 a5 = a3 >> 0x7
135116: d3 ca 0a                 a3 = a3 ^ a5
135119: 97 ac 11                 a5 = a3 << 0x11
135122: d3 ca 0a                 a3 = a3 ^ a5
135125: ca 9a 09                 a2 = a3 * a2
135128: 3e 0a 78 12 03           u64 [0x31278] = a3
135133: d6 b9 08                 a1 = a2 mulhu a4
135136: 98 8a 02                 a3 = a1 >> 0x2
135139: 84 88 fc                 a1 = a1 & 0xfffffffffffffffc
135142: c8 a8 08                 a1 = a1 + a3
135145: c9 89 08                 a1 = a2 - a1
135148: 95 88 02                 a1 = a1 + 0x2
135151: 33 00 cc 06              ra = 0x6cc
135155: 95 11 e0                 sp = sp + 0xffffffffffffffe0
135158: 7b 10 18                 u64 [sp + 0x18] = ra
135161: 7b 15 10                 u64 [sp + 0x10] = s0
135164: 7b 16 08                 u64 [sp + 0x8] = s1
135167: 33 04                    t2 = 0
135169: 33 00                    ra = 0
135171: 33 02 01                 t0 = 0x1
135174: 33 03 03                 t1 = 0x3
135177: 33 09                    a2 = 0
135179: 64 7c                    a5 = a0
135181: 28 0b 2f ff              jump @6468
      :                          @10061 [@dyn 870]
135185: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
135189: 95 17 e0 01              a0 = sp + 0x1e0
135193: 7b 17 08 02              u64 [sp + 0x208] = a0
135197: 33 07 28 0c              a0 = 0xc28
135201: 7b 17 10 02              u64 [sp + 0x210] = a0
135205: 33 07 90 12 01           a0 = 0x11290
135210: 7b 17 90 02              u64 [sp + 0x290] = a0
135214: 49 21 98 02 01           u64 [sp + 664] = 0x1
135219: 49 21 b0 02              u64 [sp + 688] = 0
135223: 95 18 08 02              a1 = sp + 0x208
135227: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
135231: 49 21 a8 02 01           u64 [sp + 680] = 0x1
135236: 95 17 38 02              a0 = sp + 0x238
135240: 95 18 90 02              a1 = sp + 0x290
135244: 50 20 ce 06 f3 3e fe     ra = 1742, jump @1491
      :                          @10062 [@dyn 871]
135251: 82 16 40 02              s1 = u64 [sp + 0x240]
135255: 82 1b 48 02              a4 = u64 [sp + 0x248]
135259: 82 17 38 02              a0 = u64 [sp + 0x238]
135263: 7b 17 70                 u64 [sp + 0x70] = a0
135266: 33 07 02                 a0 = 0x2
135269: 33 08                    a1 = 0
135271: 33 09                    a2 = 0
135273: 64 6a                    a3 = s1
135275: 33 00 d0 06              ra = 0x6d0
135279: 0a 64                    ecalli 100 // 'log'
135281: 01                       fallthrough
      :                          @10063 [@dyn 872]
135282: 82 1c 70                 a5 = u64 [sp + 0x70]
135285: 82 17 68                 a0 = u64 [sp + 0x68]
135288: c8 c7 07                 a0 = a0 + a5
135291: 55 37 00 00 ff 0a        jump @10065 if a0 >=u 4294901760
      :                          @10064
135297: 28 45 d1 00              jump @12856
      :                          @10065
135301: 33 07 c0 22 03           a0 = 0x322c0
135306: 95 77 00 00 01           a0 = a0 + 0x10000
135311: 01                       fallthrough
      :                          @10066
135312: 82 78                    a1 = u64 [a0]
135314: c9 87 09                 a2 = a0 - a1
135317: aa 69 07                 jump @10068 if a2 == s1
      :                          @10067
135320: 28 2e d1 00              jump @12856
      :                          @10068
135324: c9 c8 09                 a2 = a1 - a5
135327: 01                       fallthrough
      :                          @10069
135328: 82 7a                    a3 = u64 [a0]
135330: ab 8a ee                 jump @10066 if a3 != a1
      :                          @10070
135333: 7b 79                    u64 [a0] = a2
135335: 33 0b                    a4 = 0
135337: 01                       fallthrough
      :                          @10071
135338: ab 8a e6                 jump @10066 if a3 != a1
      :                          @10072
135341: 28 19 d1 00              jump @12856
      :                          @10073 [@dyn 873]
135345: 3a 08 78 12 03           a1 = u64 [0x31278]
135350: 97 89 0d                 a2 = a1 << 0xd
135353: d3 98 08                 a1 = a1 ^ a2
135356: 98 89 07                 a2 = a1 >> 0x7
135359: d3 98 08                 a1 = a1 ^ a2
135362: 3a 09 60 11 03           a2 = u64 [0x31160]
135367: 97 8a 11                 a3 = a1 << 0x11
135370: d3 a8 08                 a1 = a1 ^ a3
135373: ca 98 09                 a2 = a1 * a2
135376: 3e 08 78 12 03           u64 [0x31278] = a1
135381: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
135391: d6 79 07                 a0 = a2 mulhu a0
135394: 98 77 02                 a0 = a0 >> 0x2
135397: 96 77 06                 a0 = a0 * 0x6
135400: c9 79 08                 a1 = a2 - a0
135403: 95 88 01                 a1 = a1 + 0x1
135406: 7b 18 20 01              u64 [sp + 0x120] = a1
135410: 95 17 08 02              a0 = sp + 0x208
135414: 95 16 08 02              s1 = sp + 0x208
135418: 33 00 d4 06              ra = 0x6d4
135422: 95 11 e0                 sp = sp + 0xffffffffffffffe0
135425: 7b 10 18                 u64 [sp + 0x18] = ra
135428: 7b 15 10                 u64 [sp + 0x10] = s0
135431: 7b 16 08                 u64 [sp + 0x8] = s1
135434: 7b 17                    u64 [sp] = a0
135436: 95 87 01                 a0 = a1 + 0x1
135439: 97 73 03                 t1 = a0 << 0x3
135442: 33 00 c0 22 03           ra = 0x322c0
135447: 33 04 00 00 01           t2 = 0x10000
135452: c8 40 0c                 a5 = ra + t2
135455: 28 49 2e ff              jump @6476
      :                          @10074 [@dyn 874]
135459: 95 17 20 01              a0 = sp + 0x120
135463: 7b 17 38 02              u64 [sp + 0x238] = a0
135467: 33 07 28 0c              a0 = 0xc28
135471: 7b 17 40 02              u64 [sp + 0x240] = a0
135475: 7b 16 48 02              u64 [sp + 0x248] = s1
135479: 33 07 20 02              a0 = 0x220
135483: 7b 17 50 02              u64 [sp + 0x250] = a0
135487: 33 07 b0 12 01           a0 = 0x112b0
135492: 7b 17 90 02              u64 [sp + 0x290] = a0
135496: 49 21 98 02 02           u64 [sp + 664] = 0x2
135501: 49 21 b0 02              u64 [sp + 688] = 0
135505: 95 18 38 02              a1 = sp + 0x238
135509: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
135513: 49 21 a8 02 02           u64 [sp + 680] = 0x2
135518: 95 17 e0 01              a0 = sp + 0x1e0
135522: 95 18 90 02              a1 = sp + 0x290
135526: 50 20 d6 06 d9 3d fe     ra = 1750, jump @1491
      :                          @10075 [@dyn 875]
135533: 82 18 08 02              a1 = u64 [sp + 0x208]
135537: 51 08 2e                 jump @10082 if a1 == 0
      :                          @10076
135540: 56 28 00 20 2b           jump @10082 if a1 >u 8192
      :                          @10077
135545: 82 17 10 02              a0 = u64 [sp + 0x210]
135549: 97 88 03                 a1 = a1 << 0x3
135552: 33 09 c0 22 03           a2 = 0x322c0
135557: 95 99 00 00 01           a2 = a2 + 0x10000
135562: 01                       fallthrough
      :                          @10078
135563: 82 9a                    a3 = u64 [a2]
135565: c9 a9 0b                 a4 = a2 - a3
135568: ab 7b 0f                 jump @10082 if a4 != a0
      :                          @10079
135571: c9 8a 0b                 a4 = a3 - a1
135574: 01                       fallthrough
      :                          @10080
135575: 82 9c                    a5 = u64 [a2]
135577: ab ac f2                 jump @10078 if a5 != a3
      :                          @10081
135580: 7b 9b                    u64 [a2] = a4
135582: 01                       fallthrough
      :                          @10082
135583: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
135587: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
135591: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
135595: 7b 17 70                 u64 [sp + 0x70] = a0
135598: 33 07 02                 a0 = 0x2
135601: 33 08                    a1 = 0
135603: 33 09                    a2 = 0
135605: 64 6a                    a3 = s1
135607: 33 00 d8 06              ra = 0x6d8
135611: 0a 64                    ecalli 100 // 'log'
135613: 01                       fallthrough
      :                          @10083 [@dyn 876]
135614: 82 1c 70                 a5 = u64 [sp + 0x70]
135617: 82 17 68                 a0 = u64 [sp + 0x68]
135620: c8 c7 07                 a0 = a0 + a5
135623: 55 37 00 00 ff 0a        jump @10085 if a0 >=u 4294901760
      :                          @10084
135629: 28 f9 cf 00              jump @12856
      :                          @10085
135633: 33 07 c0 22 03           a0 = 0x322c0
135638: 95 77 00 00 01           a0 = a0 + 0x10000
135643: 01                       fallthrough
      :                          @10086
135644: 82 78                    a1 = u64 [a0]
135646: c9 87 09                 a2 = a0 - a1
135649: aa 69 07                 jump @10088 if a2 == s1
      :                          @10087
135652: 28 e2 cf 00              jump @12856
      :                          @10088
135656: c9 c8 09                 a2 = a1 - a5
135659: 01                       fallthrough
      :                          @10089
135660: 82 7a                    a3 = u64 [a0]
135662: ab 8a ee                 jump @10086 if a3 != a1
      :                          @10090
135665: 7b 79                    u64 [a0] = a2
135667: 33 0b                    a4 = 0
135669: 01                       fallthrough
      :                          @10091
135670: ab 8a e6                 jump @10086 if a3 != a1
      :                          @10092
135673: 28 cd cf 00              jump @12856
      :                          @10093 [@dyn 877]
135677: 95 17 90 02              a0 = sp + 0x290
135681: 33 09 04                 a2 = 0x4
135684: 33 08                    a1 = 0
135686: 50 20 dc 06 e3 51 fe     ra = 1756, jump @1877
      :                          @10094 [@dyn 878]
135693: 95 17 08 02              a0 = sp + 0x208
135697: 95 18 90 02              a1 = sp + 0x290
135701: 33 09 04                 a2 = 0x4
135704: 50 20 de 06 fc 4b fe     ra = 1758, jump @1783
      :                          @10095 [@dyn 879]
135711: 33 07                    a0 = 0
135713: 33 0b 10                 a4 = 0x10
135716: 33 00 78 12 03           ra = 0x31278
135721: 33 03 03                 t1 = 0x3
135724: 33 04 70                 t2 = 0x70
135727: 33 02 04                 t0 = 0x4
135730: 01                       fallthrough
      :                          @10096
135731: 3a 08 78 12 03           a1 = u64 [0x31278]
135736: 97 89 0d                 a2 = a1 << 0xd
135739: d3 98 08                 a1 = a1 ^ a2
135742: 98 89 07                 a2 = a1 >> 0x7
135745: d3 89 09                 a2 = a2 ^ a1
135748: 97 98 11                 a1 = a2 << 0x11
135751: d3 98 08                 a1 = a1 ^ a2
135754: 3e 08 78 12 03           u64 [0x31278] = a1
135759: 82 18 18 02              a1 = u64 [sp + 0x218]
135763: ac 87 07                 jump @10098 if a0 <u a1
      :                          @10097
135766: 28 79 e1 00              jump @13217
      :                          @10098
135770: 82 18 10 02              a1 = u64 [sp + 0x210]
135774: c8 b8 08                 a1 = a1 + a4
135777: 82 8a                    a3 = u64 [a1]
135779: 52 0a 07                 jump @10100 if a3 != 0
      :                          @10099
135782: 28 71 e1 00              jump @13225
      :                          @10100
135786: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
135789: 84 99 01                 a2 = a2 & 0x1
135792: 7b 89                    u64 [a1] = a2
135794: 3a 08 78 12 03           a1 = u64 [0x31278]
135799: 97 89 0d                 a2 = a1 << 0xd
135802: d3 98 08                 a1 = a1 ^ a2
135805: 98 8a 07                 a3 = a1 >> 0x7
135808: d3 8a 0a                 a3 = a3 ^ a1
135811: 97 a8 11                 a1 = a3 << 0x11
135814: d3 a8 08                 a1 = a1 ^ a3
135817: 3e 08 78 12 03           u64 [0x31278] = a1
135822: 82 18 18 02              a1 = u64 [sp + 0x218]
135826: ac 87 07                 jump @10102 if a0 <u a1
      :                          @10101
135829: 28 3a e1 00              jump @13217
      :                          @10102
135833: 82 18 10 02              a1 = u64 [sp + 0x210]
135837: c8 b8 08                 a1 = a1 + a4
135840: 82 89                    a2 = u64 [a1]
135842: 55 19 02 08              jump @10104 if a2 >=u 2
      :                          @10103
135846: 28 2c e1 00              jump @13220
      :                          @10104
135850: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
135853: 84 aa 01                 a3 = a3 & 0x1
135856: 7b 8a 08                 u64 [a1 + 0x8] = a3
135859: 3a 08 78 12 03           a1 = u64 [0x31278]
135864: 97 89 0d                 a2 = a1 << 0xd
135867: d3 98 08                 a1 = a1 ^ a2
135870: 98 8a 07                 a3 = a1 >> 0x7
135873: d3 8a 0a                 a3 = a3 ^ a1
135876: 97 a8 11                 a1 = a3 << 0x11
135879: d3 a8 08                 a1 = a1 ^ a3
135882: 3e 08 78 12 03           u64 [0x31278] = a1
135887: 82 18 18 02              a1 = u64 [sp + 0x218]
135891: ac 87 07                 jump @10106 if a0 <u a1
      :                          @10105
135894: 28 f9 e0 00              jump @13217
      :                          @10106
135898: 82 18 10 02              a1 = u64 [sp + 0x210]
135902: c8 b8 08                 a1 = a1 + a4
135905: 82 89                    a2 = u64 [a1]
135907: ae 39 07                 jump @10108 if a2 >=u t1
      :                          @10107
135910: 28 ed e0 00              jump @13221
      :                          @10108
135914: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
135917: 84 aa 01                 a3 = a3 & 0x1
135920: 7b 8a 10                 u64 [a1 + 0x10] = a3
135923: 3a 08 78 12 03           a1 = u64 [0x31278]
135928: 97 89 0d                 a2 = a1 << 0xd
135931: d3 98 08                 a1 = a1 ^ a2
135934: 98 86 07                 s1 = a1 >> 0x7
135937: d3 86 06                 s1 = s1 ^ a1
135940: 97 68 11                 a1 = s1 << 0x11
135943: d3 68 08                 a1 = a1 ^ s1
135946: 3e 08 78 12 03           u64 [0x31278] = a1
135951: 82 18 18 02              a1 = u64 [sp + 0x218]
135955: ac 87 07                 jump @10110 if a0 <u a1
      :                          @10109
135958: 28 b9 e0 00              jump @13217
      :                          @10110
135962: 82 1c 10 02              a5 = u64 [sp + 0x210]
135966: c8 bc 0a                 a3 = a5 + a4
135969: 82 a9                    a2 = u64 [a3]
135971: ae 29 07                 jump @10112 if a2 >=u t0
      :                          @10111
135974: 28 ae e0 00              jump @13222
      :                          @10112
135978: 82 a9 f8                 a2 = u64 [a3 + 0xfffffffffffffff8]
135981: 84 66 01                 s1 = s1 & 0x1
135984: 7b 96 18                 u64 [a2 + 0x18] = s1
135987: 95 bb 18                 a4 = a4 + 0x18
135990: 95 77 01                 a0 = a0 + 0x1
135993: ab 4b fa fe              jump @10096 if a4 != t2
      :                          @10113
135997: 64 c7                    a0 = a5
135999: 50 20 e0 06 3a 2d ff     ra = 1760, jump @6501
      :                          @10114 [@dyn 880]
136006: 7b 17 20 01              u64 [sp + 0x120] = a0
136010: 95 17 20 01              a0 = sp + 0x120
136014: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
136018: 33 07 28 0c              a0 = 0xc28
136022: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
136026: 33 07 e0 12 01           a0 = 0x112e0
136031: 7b 17 90 02              u64 [sp + 0x290] = a0
136035: 49 21 98 02 01           u64 [sp + 664] = 0x1
136040: 49 21 b0 02              u64 [sp + 688] = 0
136044: 95 18 e0 01              a1 = sp + 0x1e0
136048: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
136052: 49 21 a8 02 01           u64 [sp + 680] = 0x1
136057: 95 17 38 02              a0 = sp + 0x238
136061: 95 18 90 02              a1 = sp + 0x290
136065: 50 20 e2 06 be 3b fe     ra = 1762, jump @1491
      :                          @10115 [@dyn 881]
136072: 82 16 40 02              s1 = u64 [sp + 0x240]
136076: 82 1b 48 02              a4 = u64 [sp + 0x248]
136080: 82 17 38 02              a0 = u64 [sp + 0x238]
136084: 7b 17 70                 u64 [sp + 0x70] = a0
136087: 33 07 02                 a0 = 0x2
136090: 33 08                    a1 = 0
136092: 33 09                    a2 = 0
136094: 64 6a                    a3 = s1
136096: 33 00 e4 06              ra = 0x6e4
136100: 0a 64                    ecalli 100 // 'log'
136102: 01                       fallthrough
      :                          @10116 [@dyn 882]
136103: 82 1c 70                 a5 = u64 [sp + 0x70]
136106: 82 17 68                 a0 = u64 [sp + 0x68]
136109: c8 c7 07                 a0 = a0 + a5
136112: 33 08 00 00 ff           a1 = 0xffffffffffff0000
136117: ae 87 07                 jump @10118 if a0 >=u a1
      :                          @10117
136120: 28 16 c9 00              jump @12755
      :                          @10118
136124: 33 07 c0 22 03           a0 = 0x322c0
136129: 95 77 00 00 01           a0 = a0 + 0x10000
136134: 01                       fallthrough
      :                          @10119
136135: 82 78                    a1 = u64 [a0]
136137: c9 87 09                 a2 = a0 - a1
136140: aa 69 07                 jump @10121 if a2 == s1
      :                          @10120
136143: 28 ff c8 00              jump @12755
      :                          @10121
136147: c9 c8 09                 a2 = a1 - a5
136150: 01                       fallthrough
      :                          @10122
136151: 82 7a                    a3 = u64 [a0]
136153: ab 8a ee                 jump @10119 if a3 != a1
      :                          @10123
136156: 7b 79                    u64 [a0] = a2
136158: 33 0b                    a4 = 0
136160: 01                       fallthrough
      :                          @10124
136161: ab 8a e6                 jump @10119 if a3 != a1
      :                          @10125
136164: 28 ea c8 00              jump @12755
      :                          @10126 [@dyn 883]
136168: 49 21 08 02              u64 [sp + 520] = 0
136172: 49 21 10 02 08           u64 [sp + 528] = 0x8
136177: 49 21 18 02              u64 [sp + 536] = 0
136181: 3a 07 78 12 03           a0 = u64 [0x31278]
136186: 3a 02 60 11 03           t0 = u64 [0x31160]
136191: 97 78 0d                 a1 = a0 << 0xd
136194: d3 87 07                 a0 = a0 ^ a1
136197: 98 78 07                 a1 = a0 >> 0x7
136200: d3 87 07                 a0 = a0 ^ a1
136203: 97 78 11                 a1 = a0 << 0x11
136206: d3 87 07                 a0 = a0 ^ a1
136209: 3a 0c e8 11 03           a5 = u64 [0x311e8]
136214: ca 27 09                 a2 = a0 * t0
136217: 3e 07 78 12 03           u64 [0x31278] = a0
136222: d5 c9 07                 a0 = a2 mulh a5
136225: 98 7a 3f                 a3 = a0 >> 0x3f
136228: 99 77 03                 a0 = a0 >>a 0x3
136231: 82 18 18 02              a1 = u64 [sp + 0x218]
136235: 82 1b 08 02              a4 = u64 [sp + 0x208]
136239: c8 a7 07                 a0 = a0 + a3
136242: 33 03 14                 t1 = 0x14
136245: ca 37 07                 a0 = a0 * t1
136248: c9 79 0a                 a3 = a2 - a0
136251: 7b 12 70                 u64 [sp + 0x70] = t0
136254: ab b8 23                 jump @10129 if a1 != a4
      :                          @10127
136257: 95 17 08 02              a0 = sp + 0x208
136261: 64 c6                    s1 = a5
136263: 7b 1a 60                 u64 [sp + 0x60] = a3
136266: 50 20 e8 06 bd 3e fe     ra = 1768, jump @1581
      :                          @10128 [@dyn 884]
136273: 82 1a 60                 a3 = u64 [sp + 0x60]
136276: 33 03 14                 t1 = 0x14
136279: 64 6c                    a5 = s1
136281: 82 12 70                 t0 = u64 [sp + 0x70]
136284: 82 18 18 02              a1 = u64 [sp + 0x218]
136288: 01                       fallthrough
      :                          @10129
136289: 82 17 10 02              a0 = u64 [sp + 0x210]
136293: 97 89 03                 a2 = a1 << 0x3
136296: c8 97 07                 a0 = a0 + a2
136299: 7b 7a                    u64 [a0] = a3
136301: 95 88 01                 a1 = a1 + 0x1
136304: 7b 18 18 02              u64 [sp + 0x218] = a1
136308: 3a 07 78 12 03           a0 = u64 [0x31278]
136313: 97 78 0d                 a1 = a0 << 0xd
136316: d3 87 07                 a0 = a0 ^ a1
136319: 98 78 07                 a1 = a0 >> 0x7
136322: d3 87 07                 a0 = a0 ^ a1
136325: 97 78 11                 a1 = a0 << 0x11
136328: d3 87 07                 a0 = a0 ^ a1
136331: ca 27 09                 a2 = a0 * t0
136334: 3e 07 78 12 03           u64 [0x31278] = a0
136339: d5 c9 07                 a0 = a2 mulh a5
136342: 98 7a 3f                 a3 = a0 >> 0x3f
136345: 82 18 18 02              a1 = u64 [sp + 0x218]
136349: 82 1b 08 02              a4 = u64 [sp + 0x208]
136353: 99 77 03                 a0 = a0 >>a 0x3
136356: c8 a7 07                 a0 = a0 + a3
136359: 96 77 14                 a0 = a0 * 0x14
136362: c9 79 06                 s1 = a2 - a0
136365: ab b8 16                 jump @10132 if a1 != a4
      :                          @10130
136368: 95 17 08 02              a0 = sp + 0x208
136372: 50 20 ea 06 53 3e fe     ra = 1770, jump @1581
      :                          @10131 [@dyn 885]
136379: 82 12 70                 t0 = u64 [sp + 0x70]
136382: 82 18 18 02              a1 = u64 [sp + 0x218]
136386: 01                       fallthrough
      :                          @10132
136387: 82 17 10 02              a0 = u64 [sp + 0x210]
136391: 97 89 03                 a2 = a1 << 0x3
136394: c8 97 07                 a0 = a0 + a2
136397: 7b 76                    u64 [a0] = s1
136399: 95 88 01                 a1 = a1 + 0x1
136402: 7b 18 18 02              u64 [sp + 0x218] = a1
136406: 3a 07 78 12 03           a0 = u64 [0x31278]
136411: 97 78 0d                 a1 = a0 << 0xd
136414: d3 87 07                 a0 = a0 ^ a1
136417: 98 78 07                 a1 = a0 >> 0x7
136420: d3 87 07                 a0 = a0 ^ a1
136423: 97 78 11                 a1 = a0 << 0x11
136426: d3 87 07                 a0 = a0 ^ a1
136429: 3a 0c e8 11 03           a5 = u64 [0x311e8]
136434: ca 27 09                 a2 = a0 * t0
136437: 3e 07 78 12 03           u64 [0x31278] = a0
136442: d5 c9 07                 a0 = a2 mulh a5
136445: 98 7a 3f                 a3 = a0 >> 0x3f
136448: 99 77 03                 a0 = a0 >>a 0x3
136451: 82 18 18 02              a1 = u64 [sp + 0x218]
136455: 82 1b 08 02              a4 = u64 [sp + 0x208]
136459: c8 a7 07                 a0 = a0 + a3
136462: 33 03 14                 t1 = 0x14
136465: ca 37 07                 a0 = a0 * t1
136468: c9 79 0a                 a3 = a2 - a0
136471: ab b8 23                 jump @10135 if a1 != a4
      :                          @10133
136474: 95 17 08 02              a0 = sp + 0x208
136478: 64 c6                    s1 = a5
136480: 7b 1a 60                 u64 [sp + 0x60] = a3
136483: 50 20 ec 06 e4 3d fe     ra = 1772, jump @1581
      :                          @10134 [@dyn 886]
136490: 82 1a 60                 a3 = u64 [sp + 0x60]
136493: 33 03 14                 t1 = 0x14
136496: 64 6c                    a5 = s1
136498: 82 12 70                 t0 = u64 [sp + 0x70]
136501: 82 18 18 02              a1 = u64 [sp + 0x218]
136505: 01                       fallthrough
      :                          @10135
136506: 82 17 10 02              a0 = u64 [sp + 0x210]
136510: 97 89 03                 a2 = a1 << 0x3
136513: c8 97 07                 a0 = a0 + a2
136516: 7b 7a                    u64 [a0] = a3
136518: 95 88 01                 a1 = a1 + 0x1
136521: 7b 18 18 02              u64 [sp + 0x218] = a1
136525: 3a 07 78 12 03           a0 = u64 [0x31278]
136530: 97 78 0d                 a1 = a0 << 0xd
136533: d3 87 07                 a0 = a0 ^ a1
136536: 98 78 07                 a1 = a0 >> 0x7
136539: d3 87 07                 a0 = a0 ^ a1
136542: 97 78 11                 a1 = a0 << 0x11
136545: d3 87 07                 a0 = a0 ^ a1
136548: ca 27 09                 a2 = a0 * t0
136551: 3e 07 78 12 03           u64 [0x31278] = a0
136556: d5 c9 07                 a0 = a2 mulh a5
136559: 98 7a 3f                 a3 = a0 >> 0x3f
136562: 82 18 18 02              a1 = u64 [sp + 0x218]
136566: 82 1b 08 02              a4 = u64 [sp + 0x208]
136570: 99 77 03                 a0 = a0 >>a 0x3
136573: c8 a7 07                 a0 = a0 + a3
136576: 96 77 14                 a0 = a0 * 0x14
136579: c9 79 06                 s1 = a2 - a0
136582: ab b8 16                 jump @10138 if a1 != a4
      :                          @10136
136585: 95 17 08 02              a0 = sp + 0x208
136589: 50 20 ee 06 7a 3d fe     ra = 1774, jump @1581
      :                          @10137 [@dyn 887]
136596: 82 12 70                 t0 = u64 [sp + 0x70]
136599: 82 18 18 02              a1 = u64 [sp + 0x218]
136603: 01                       fallthrough
      :                          @10138
136604: 82 17 10 02              a0 = u64 [sp + 0x210]
136608: 97 89 03                 a2 = a1 << 0x3
136611: c8 97 07                 a0 = a0 + a2
136614: 7b 76                    u64 [a0] = s1
136616: 95 88 01                 a1 = a1 + 0x1
136619: 7b 18 18 02              u64 [sp + 0x218] = a1
136623: 3a 08 78 12 03           a1 = u64 [0x31278]
136628: 97 89 0d                 a2 = a1 << 0xd
136631: d3 98 08                 a1 = a1 ^ a2
136634: 98 89 07                 a2 = a1 >> 0x7
136637: d3 98 08                 a1 = a1 ^ a2
136640: 97 89 11                 a2 = a1 << 0x11
136643: d3 98 08                 a1 = a1 ^ a2
136646: 3a 09 e8 11 03           a2 = u64 [0x311e8]
136651: ca 28 0a                 a3 = a1 * t0
136654: 3e 08 78 12 03           u64 [0x31278] = a1
136659: d5 9a 07                 a0 = a3 mulh a2
136662: 98 7b 3f                 a4 = a0 >> 0x3f
136665: 99 77 03                 a0 = a0 >>a 0x3
136668: 82 18 18 02              a1 = u64 [sp + 0x218]
136672: 82 19 08 02              a2 = u64 [sp + 0x208]
136676: c8 b7 07                 a0 = a0 + a4
136679: 33 0b 14                 a4 = 0x14
136682: ca b7 07                 a0 = a0 * a4
136685: c9 7a 06                 s1 = a3 - a0
136688: ab 98 13                 jump @10141 if a1 != a2
      :                          @10139
136691: 95 17 08 02              a0 = sp + 0x208
136695: 50 20 f0 06 10 3d fe     ra = 1776, jump @1581
      :                          @10140 [@dyn 888]
136702: 82 18 18 02              a1 = u64 [sp + 0x218]
136706: 01                       fallthrough
      :                          @10141
136707: 82 19 10 02              a2 = u64 [sp + 0x210]
136711: 97 87 03                 a0 = a1 << 0x3
136714: 7b 19 60                 u64 [sp + 0x60] = a2
136717: c8 97 07                 a0 = a0 + a2
136720: 7b 76                    u64 [a0] = s1
136722: 95 87 01                 a0 = a1 + 0x1
136725: 7b 17 18 02              u64 [sp + 0x218] = a0
136729: 33 0a 01                 a3 = 0x1
136732: 7b 17 70                 u64 [sp + 0x70] = a0
136735: 51 07 07                 jump @10143 if a0 == 0
      :                          @10142
136738: 28 32 cd 00              jump @12877
      :                          @10143
136742: 7b 1a 20 01              u64 [sp + 0x120] = a3
136746: 95 17 20 01              a0 = sp + 0x120
136750: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
136754: 33 07 94 0c              a0 = 0xc94
136758: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
136762: 33 07 f8 12 01           a0 = 0x112f8
136767: 7b 17 90 02              u64 [sp + 0x290] = a0
136771: 49 21 98 02 01           u64 [sp + 664] = 0x1
136776: 49 21 b0 02              u64 [sp + 688] = 0
136780: 95 17 e0 01              a0 = sp + 0x1e0
136784: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
136788: 49 21 a8 02 01           u64 [sp + 680] = 0x1
136793: 95 17 38 02              a0 = sp + 0x238
136797: 95 18 90 02              a1 = sp + 0x290
136801: 50 20 f2 06 de 38 fe     ra = 1778, jump @1491
      :                          @10144 [@dyn 889]
136808: 82 16 40 02              s1 = u64 [sp + 0x240]
136812: 82 1b 48 02              a4 = u64 [sp + 0x248]
136816: 82 17 38 02              a0 = u64 [sp + 0x238]
136820: 7b 17 70                 u64 [sp + 0x70] = a0
136823: 33 07 02                 a0 = 0x2
136826: 33 08                    a1 = 0
136828: 33 09                    a2 = 0
136830: 64 6a                    a3 = s1
136832: 33 00 f4 06              ra = 0x6f4
136836: 0a 64                    ecalli 100 // 'log'
136838: 01                       fallthrough
      :                          @10145 [@dyn 890]
136839: 82 1c 70                 a5 = u64 [sp + 0x70]
136842: 82 17 68                 a0 = u64 [sp + 0x68]
136845: c8 c7 07                 a0 = a0 + a5
136848: 53 37 00 00 ff 25        jump @10151 if a0 <u 4294901760
      :                          @10146
136854: 33 07 c0 22 03           a0 = 0x322c0
136859: 95 77 00 00 01           a0 = a0 + 0x10000
136864: 01                       fallthrough
      :                          @10147
136865: 82 78                    a1 = u64 [a0]
136867: c9 87 09                 a2 = a0 - a1
136870: ab 69 0f                 jump @10151 if a2 != s1
      :                          @10148
136873: c9 c8 09                 a2 = a1 - a5
136876: 01                       fallthrough
      :                          @10149
136877: 82 7a                    a3 = u64 [a0]
136879: ab 8a f2                 jump @10147 if a3 != a1
      :                          @10150
136882: 7b 79                    u64 [a0] = a2
136884: 01                       fallthrough
      :                          @10151
136885: 82 17 08 02              a0 = u64 [sp + 0x208]
136889: 52 07 07                 jump @10153 if a0 != 0
      :                          @10152
136892: 28 0a cb 00              jump @12856
      :                          @10153
136896: 54 27 00 20 09           jump @10155 if a0 <=u 8192
      :                          @10154
136901: 28 01 cb 00              jump @12856
      :                          @10155
136905: 97 77 03                 a0 = a0 << 0x3
136908: 33 08 c0 22 03           a1 = 0x322c0
136913: 95 88 00 00 01           a1 = a1 + 0x10000
136918: 01                       fallthrough
      :                          @10156
136919: 82 89                    a2 = u64 [a1]
136921: c9 98 0a                 a3 = a1 - a2
136924: 82 1b 60                 a4 = u64 [sp + 0x60]
136927: aa ba 07                 jump @10158 if a3 == a4
      :                          @10157
136930: 28 e4 ca 00              jump @12856
      :                          @10158
136934: c9 79 0a                 a3 = a2 - a0
136937: 01                       fallthrough
      :                          @10159
136938: 82 8b                    a4 = u64 [a1]
136940: ab 9b eb                 jump @10156 if a4 != a2
      :                          @10160
136943: 7b 8a                    u64 [a1] = a3
136945: 33 0c                    a5 = 0
136947: 01                       fallthrough
      :                          @10161
136948: ab 9b e3                 jump @10156 if a4 != a2
      :                          @10162
136951: 28 cf ca 00              jump @12856
      :                          @10163 [@dyn 891]
136955: 3a 08 78 12 03           a1 = u64 [0x31278]
136960: 97 89 0d                 a2 = a1 << 0xd
136963: d3 98 08                 a1 = a1 ^ a2
136966: 98 89 07                 a2 = a1 >> 0x7
136969: d3 98 08                 a1 = a1 ^ a2
136972: 97 89 11                 a2 = a1 << 0x11
136975: d3 89 09                 a2 = a2 ^ a1
136978: 3e 09 78 12 03           u64 [0x31278] = a2
136983: 84 88 03                 a1 = a1 & 0x3
136986: 95 88 01                 a1 = a1 + 0x1
136989: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
136993: 3a 08 78 12 03           a1 = u64 [0x31278]
136998: 97 89 0d                 a2 = a1 << 0xd
137001: d3 98 08                 a1 = a1 ^ a2
137004: 98 89 07                 a2 = a1 >> 0x7
137007: d3 98 08                 a1 = a1 ^ a2
137010: 97 89 11                 a2 = a1 << 0x11
137013: d3 89 09                 a2 = a2 ^ a1
137016: 3e 09 78 12 03           u64 [0x31278] = a2
137021: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
137025: 84 88 03                 a1 = a1 & 0x3
137028: 95 88 01                 a1 = a1 + 0x1
137031: 7b 18 20 01              u64 [sp + 0x120] = a1
137035: 50 20 f8 06 ce 29 ff     ra = 1784, jump @6515
      :                          @10164 [@dyn 892]
137042: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
137046: 95 17 c8 01              a0 = sp + 0x1c8
137050: 7b 17 90 02              u64 [sp + 0x290] = a0
137054: 33 07 28 0c              a0 = 0xc28
137058: 7b 17 98 02              u64 [sp + 0x298] = a0
137062: 95 18 20 01              a1 = sp + 0x120
137066: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
137070: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
137074: 95 18 e0 01              a1 = sp + 0x1e0
137078: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
137082: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
137086: 33 07 20 13 01           a0 = 0x11320
137091: 7b 17 38 02              u64 [sp + 0x238] = a0
137095: 49 21 40 02 03           u64 [sp + 576] = 0x3
137100: 49 21 58 02              u64 [sp + 600] = 0
137104: 95 18 90 02              a1 = sp + 0x290
137108: 7b 18 48 02              u64 [sp + 0x248] = a1
137112: 49 21 50 02 03           u64 [sp + 592] = 0x3
137117: 95 17 08 02              a0 = sp + 0x208
137121: 95 18 38 02              a1 = sp + 0x238
137125: 50 20 fa 06 9a 37 fe     ra = 1786, jump @1491
      :                          @10165 [@dyn 893]
137132: 82 16 10 02              s1 = u64 [sp + 0x210]
137136: 82 1b 18 02              a4 = u64 [sp + 0x218]
137140: 82 17 08 02              a0 = u64 [sp + 0x208]
137144: 7b 17 70                 u64 [sp + 0x70] = a0
137147: 33 07 02                 a0 = 0x2
137150: 33 08                    a1 = 0
137152: 33 09                    a2 = 0
137154: 64 6a                    a3 = s1
137156: 33 00 fc 06              ra = 0x6fc
137160: 0a 64                    ecalli 100 // 'log'
137162: 01                       fallthrough
      :                          @10166 [@dyn 894]
137163: 82 1c 70                 a5 = u64 [sp + 0x70]
137166: 82 17 68                 a0 = u64 [sp + 0x68]
137169: c8 c7 07                 a0 = a0 + a5
137172: 55 37 00 00 ff 0a        jump @10168 if a0 >=u 4294901760
      :                          @10167
137178: 28 ec c9 00              jump @12856
      :                          @10168
137182: 33 07 c0 22 03           a0 = 0x322c0
137187: 95 77 00 00 01           a0 = a0 + 0x10000
137192: 01                       fallthrough
      :                          @10169
137193: 82 78                    a1 = u64 [a0]
137195: c9 87 09                 a2 = a0 - a1
137198: aa 69 07                 jump @10171 if a2 == s1
      :                          @10170
137201: 28 d5 c9 00              jump @12856
      :                          @10171
137205: c9 c8 09                 a2 = a1 - a5
137208: 01                       fallthrough
      :                          @10172
137209: 82 7a                    a3 = u64 [a0]
137211: ab 8a ee                 jump @10169 if a3 != a1
      :                          @10173
137214: 7b 79                    u64 [a0] = a2
137216: 33 0b                    a4 = 0
137218: 01                       fallthrough
      :                          @10174
137219: ab 8a e6                 jump @10169 if a3 != a1
      :                          @10175
137222: 28 c0 c9 00              jump @12856
      :                          @10176 [@dyn 895]
137226: 3a 08 78 12 03           a1 = u64 [0x31278]
137231: 97 89 0d                 a2 = a1 << 0xd
137234: d3 89 09                 a2 = a2 ^ a1
137237: 98 9a 07                 a3 = a2 >> 0x7
137240: 3a 08 60 11 03           a1 = u64 [0x31160]
137245: d3 a9 09                 a2 = a2 ^ a3
137248: 97 9a 11                 a3 = a2 << 0x11
137251: d3 a9 09                 a2 = a2 ^ a3
137254: ca 89 0a                 a3 = a2 * a1
137257: 3e 09 78 12 03           u64 [0x31278] = a2
137262: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
137272: d6 ba 09                 a2 = a3 mulhu a4
137275: 98 9c 04                 a5 = a2 >> 0x4
137278: 96 cc 14                 a5 = a5 * 0x14
137281: c9 ca 0a                 a3 = a3 - a5
137284: 95 aa 02                 a3 = a3 + 0x2
137287: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
137291: 3a 0a 78 12 03           a3 = u64 [0x31278]
137296: 97 ac 0d                 a5 = a3 << 0xd
137299: d3 ca 0a                 a3 = a3 ^ a5
137302: 98 ac 07                 a5 = a3 >> 0x7
137305: d3 ca 0a                 a3 = a3 ^ a5
137308: 97 ac 11                 a5 = a3 << 0x11
137311: d3 ca 0a                 a3 = a3 ^ a5
137314: ca 8a 0c                 a5 = a3 * a1
137317: 3e 0a 78 12 03           u64 [0x31278] = a3
137322: d6 bc 07                 a0 = a5 mulhu a4
137325: 98 77 04                 a0 = a0 >> 0x4
137328: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
137332: 96 77 14                 a0 = a0 * 0x14
137335: c9 7c 09                 a2 = a5 - a0
137338: 95 97 02                 a0 = a2 + 0x2
137341: 7b 17 20 01              u64 [sp + 0x120] = a0
137345: 64 8b                    a4 = a1
137347: 64 7c                    a5 = a0
137349: 01                       fallthrough
      :                          @10177
137350: 64 ca                    a3 = a5
137352: cd cb 0c                 a5 = a4 %u a5
137355: 64 ab                    a4 = a3
137357: 52 0c f9                 jump @10177 if a5 != 0
      :                          @10178
137360: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
137363: 95 99 01                 a2 = a2 + 0x1
137366: ca 89 08                 a1 = a2 * a1
137369: c9 78 08                 a1 = a1 - a0
137372: 94 a8                    a1 = 0 if a3 != 0
137374: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
137378: 95 17 c8 01              a0 = sp + 0x1c8
137382: 7b 17 90 02              u64 [sp + 0x290] = a0
137386: 33 07 28 0c              a0 = 0xc28
137390: 7b 17 98 02              u64 [sp + 0x298] = a0
137394: 95 18 20 01              a1 = sp + 0x120
137398: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
137402: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
137406: 95 18 e0 01              a1 = sp + 0x1e0
137410: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
137414: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
137418: 33 07 60 13 01           a0 = 0x11360
137423: 7b 17 38 02              u64 [sp + 0x238] = a0
137427: 49 21 40 02 03           u64 [sp + 576] = 0x3
137432: 49 21 58 02              u64 [sp + 600] = 0
137436: 95 18 90 02              a1 = sp + 0x290
137440: 7b 18 48 02              u64 [sp + 0x248] = a1
137444: 49 21 50 02 03           u64 [sp + 592] = 0x3
137449: 95 17 08 02              a0 = sp + 0x208
137453: 95 18 38 02              a1 = sp + 0x238
137457: 50 20 00 07 4e 36 fe     ra = 1792, jump @1491
      :                          @10179 [@dyn 896]
137464: 82 16 10 02              s1 = u64 [sp + 0x210]
137468: 82 1b 18 02              a4 = u64 [sp + 0x218]
137472: 82 17 08 02              a0 = u64 [sp + 0x208]
137476: 7b 17 70                 u64 [sp + 0x70] = a0
137479: 33 07 02                 a0 = 0x2
137482: 33 08                    a1 = 0
137484: 33 09                    a2 = 0
137486: 64 6a                    a3 = s1
137488: 33 00 02 07              ra = 0x702
137492: 0a 64                    ecalli 100 // 'log'
137494: 01                       fallthrough
      :                          @10180 [@dyn 897]
137495: 82 1c 70                 a5 = u64 [sp + 0x70]
137498: 82 17 68                 a0 = u64 [sp + 0x68]
137501: c8 c7 07                 a0 = a0 + a5
137504: 55 37 00 00 ff 0a        jump @10182 if a0 >=u 4294901760
      :                          @10181
137510: 28 a0 c8 00              jump @12856
      :                          @10182
137514: 33 07 c0 22 03           a0 = 0x322c0
137519: 95 77 00 00 01           a0 = a0 + 0x10000
137524: 01                       fallthrough
      :                          @10183
137525: 82 78                    a1 = u64 [a0]
137527: c9 87 09                 a2 = a0 - a1
137530: aa 69 07                 jump @10185 if a2 == s1
      :                          @10184
137533: 28 89 c8 00              jump @12856
      :                          @10185
137537: c9 c8 09                 a2 = a1 - a5
137540: 01                       fallthrough
      :                          @10186
137541: 82 7a                    a3 = u64 [a0]
137543: ab 8a ee                 jump @10183 if a3 != a1
      :                          @10187
137546: 7b 79                    u64 [a0] = a2
137548: 33 0b                    a4 = 0
137550: 01                       fallthrough
      :                          @10188
137551: ab 8a e6                 jump @10183 if a3 != a1
      :                          @10189
137554: 28 74 c8 00              jump @12856
      :                          @10190 [@dyn 898]
137558: 3a 08 78 12 03           a1 = u64 [0x31278]
137563: 97 89 0d                 a2 = a1 << 0xd
137566: d3 98 08                 a1 = a1 ^ a2
137569: 98 89 07                 a2 = a1 >> 0x7
137572: 3a 0a 60 11 03           a3 = u64 [0x31160]
137577: d3 98 08                 a1 = a1 ^ a2
137580: 97 89 11                 a2 = a1 << 0x11
137583: d3 98 08                 a1 = a1 ^ a2
137586: ca a8 09                 a2 = a1 * a3
137589: 3a 0b 70 11 03           a4 = u64 [0x31170]
137594: 3e 08 78 12 03           u64 [0x31278] = a1
137599: 98 98 01                 a1 = a2 >> 0x1
137602: d6 b8 08                 a1 = a1 mulhu a4
137605: 98 88 04                 a1 = a1 >> 0x4
137608: 96 88 32                 a1 = a1 * 0x32
137611: c9 89 09                 a2 = a2 - a1
137614: 7b 19 c8 01              u64 [sp + 0x1c8] = a2
137618: 3a 08 78 12 03           a1 = u64 [0x31278]
137623: 97 89 0d                 a2 = a1 << 0xd
137626: d3 98 08                 a1 = a1 ^ a2
137629: 98 89 07                 a2 = a1 >> 0x7
137632: d3 98 08                 a1 = a1 ^ a2
137635: 97 89 11                 a2 = a1 << 0x11
137638: d3 98 08                 a1 = a1 ^ a2
137641: ca a8 09                 a2 = a1 * a3
137644: 3a 0a b0 11 03           a3 = u64 [0x311b0]
137649: 3e 08 78 12 03           u64 [0x31278] = a1
137654: 98 97 02                 a0 = a2 >> 0x2
137657: d6 a7 07                 a0 = a0 mulhu a3
137660: 98 77 02                 a0 = a0 >> 0x2
137663: 96 78 64                 a1 = a0 * 0x64
137666: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
137670: c9 89 08                 a1 = a2 - a1
137673: 95 88 01                 a1 = a1 + 0x1
137676: 7b 18 20 01              u64 [sp + 0x120] = a1
137680: 50 20 06 07 0f 28 ff     ra = 1798, jump @6536
      :                          @10191 [@dyn 899]
137687: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
137691: 95 17 c8 01              a0 = sp + 0x1c8
137695: 7b 17 90 02              u64 [sp + 0x290] = a0
137699: 33 07 28 0c              a0 = 0xc28
137703: 7b 17 98 02              u64 [sp + 0x298] = a0
137707: 95 18 20 01              a1 = sp + 0x120
137711: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
137715: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
137719: 95 18 e0 01              a1 = sp + 0x1e0
137723: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
137727: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
137731: 33 07 98 13 01           a0 = 0x11398
137736: 7b 17 38 02              u64 [sp + 0x238] = a0
137740: 49 21 40 02 03           u64 [sp + 576] = 0x3
137745: 49 21 58 02              u64 [sp + 600] = 0
137749: 95 18 90 02              a1 = sp + 0x290
137753: 7b 18 48 02              u64 [sp + 0x248] = a1
137757: 49 21 50 02 03           u64 [sp + 592] = 0x3
137762: 95 17 08 02              a0 = sp + 0x208
137766: 95 18 38 02              a1 = sp + 0x238
137770: 50 20 08 07 15 35 fe     ra = 1800, jump @1491
      :                          @10192 [@dyn 900]
137777: 82 16 10 02              s1 = u64 [sp + 0x210]
137781: 82 1b 18 02              a4 = u64 [sp + 0x218]
137785: 82 17 08 02              a0 = u64 [sp + 0x208]
137789: 7b 17 70                 u64 [sp + 0x70] = a0
137792: 33 07 02                 a0 = 0x2
137795: 33 08                    a1 = 0
137797: 33 09                    a2 = 0
137799: 64 6a                    a3 = s1
137801: 33 00 0a 07              ra = 0x70a
137805: 0a 64                    ecalli 100 // 'log'
137807: 01                       fallthrough
      :                          @10193 [@dyn 901]
137808: 82 1c 70                 a5 = u64 [sp + 0x70]
137811: 82 17 68                 a0 = u64 [sp + 0x68]
137814: c8 c7 07                 a0 = a0 + a5
137817: 55 37 00 00 ff 0a        jump @10195 if a0 >=u 4294901760
      :                          @10194
137823: 28 67 c7 00              jump @12856
      :                          @10195
137827: 33 07 c0 22 03           a0 = 0x322c0
137832: 95 77 00 00 01           a0 = a0 + 0x10000
137837: 01                       fallthrough
      :                          @10196
137838: 82 78                    a1 = u64 [a0]
137840: c9 87 09                 a2 = a0 - a1
137843: aa 69 07                 jump @10198 if a2 == s1
      :                          @10197
137846: 28 50 c7 00              jump @12856
      :                          @10198
137850: c9 c8 09                 a2 = a1 - a5
137853: 01                       fallthrough
      :                          @10199
137854: 82 7a                    a3 = u64 [a0]
137856: ab 8a ee                 jump @10196 if a3 != a1
      :                          @10200
137859: 7b 79                    u64 [a0] = a2
137861: 33 0b                    a4 = 0
137863: 01                       fallthrough
      :                          @10201
137864: ab 8a e6                 jump @10196 if a3 != a1
      :                          @10202
137867: 28 3b c7 00              jump @12856
      :                          @10203 [@dyn 902]
137871: 3a 08 78 12 03           a1 = u64 [0x31278]
137876: 97 89 0d                 a2 = a1 << 0xd
137879: d3 89 09                 a2 = a2 ^ a1
137882: 98 9a 07                 a3 = a2 >> 0x7
137885: 3a 08 60 11 03           a1 = u64 [0x31160]
137890: d3 a9 09                 a2 = a2 ^ a3
137893: 97 9a 11                 a3 = a2 << 0x11
137896: d3 a9 09                 a2 = a2 ^ a3
137899: ca 89 0a                 a3 = a2 * a1
137902: 3e 09 78 12 03           u64 [0x31278] = a2
137907: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
137917: d6 9a 0b                 a4 = a3 mulhu a2
137920: 98 bb 04                 a4 = a4 >> 0x4
137923: 33 0c 14                 a5 = 0x14
137926: ca cb 0b                 a4 = a4 * a5
137929: c9 ba 0a                 a3 = a3 - a4
137932: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
137936: 3a 0a 78 12 03           a3 = u64 [0x31278]
137941: 97 ab 0d                 a4 = a3 << 0xd
137944: d3 ba 0a                 a3 = a3 ^ a4
137947: 98 ab 07                 a4 = a3 >> 0x7
137950: d3 ba 0a                 a3 = a3 ^ a4
137953: 97 ab 11                 a4 = a3 << 0x11
137956: d3 ba 0a                 a3 = a3 ^ a4
137959: ca 8a 08                 a1 = a3 * a1
137962: 3e 0a 78 12 03           u64 [0x31278] = a3
137967: d6 98 07                 a0 = a1 mulhu a2
137970: 98 79 02                 a2 = a0 >> 0x2
137973: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
137976: c8 79 09                 a2 = a2 + a0
137979: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
137983: c9 98 08                 a1 = a1 - a2
137986: 95 88 01                 a1 = a1 + 0x1
137989: 7b 18 20 01              u64 [sp + 0x120] = a1
137993: 50 20 0e 07 57 28 ff     ra = 1806, jump @6567
      :                          @10204 [@dyn 903]
138000: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
138004: 95 17 c8 01              a0 = sp + 0x1c8
138008: 7b 17 90 02              u64 [sp + 0x290] = a0
138012: 33 07 28 0c              a0 = 0xc28
138016: 7b 17 98 02              u64 [sp + 0x298] = a0
138020: 95 18 20 01              a1 = sp + 0x120
138024: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
138028: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
138032: 95 18 e0 01              a1 = sp + 0x1e0
138036: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
138040: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
138044: 33 07 d8 13 01           a0 = 0x113d8
138049: 7b 17 38 02              u64 [sp + 0x238] = a0
138053: 49 21 40 02 03           u64 [sp + 576] = 0x3
138058: 49 21 58 02              u64 [sp + 600] = 0
138062: 95 18 90 02              a1 = sp + 0x290
138066: 7b 18 48 02              u64 [sp + 0x248] = a1
138070: 49 21 50 02 03           u64 [sp + 592] = 0x3
138075: 95 17 08 02              a0 = sp + 0x208
138079: 95 18 38 02              a1 = sp + 0x238
138083: 50 20 10 07 dc 33 fe     ra = 1808, jump @1491
      :                          @10205 [@dyn 904]
138090: 82 16 10 02              s1 = u64 [sp + 0x210]
138094: 82 1b 18 02              a4 = u64 [sp + 0x218]
138098: 82 17 08 02              a0 = u64 [sp + 0x208]
138102: 7b 17 70                 u64 [sp + 0x70] = a0
138105: 33 07 02                 a0 = 0x2
138108: 33 08                    a1 = 0
138110: 33 09                    a2 = 0
138112: 64 6a                    a3 = s1
138114: 33 00 12 07              ra = 0x712
138118: 0a 64                    ecalli 100 // 'log'
138120: 01                       fallthrough
      :                          @10206 [@dyn 905]
138121: 82 1c 70                 a5 = u64 [sp + 0x70]
138124: 82 17 68                 a0 = u64 [sp + 0x68]
138127: c8 c7 07                 a0 = a0 + a5
138130: 55 37 00 00 ff 0a        jump @10208 if a0 >=u 4294901760
      :                          @10207
138136: 28 2e c6 00              jump @12856
      :                          @10208
138140: 33 07 c0 22 03           a0 = 0x322c0
138145: 95 77 00 00 01           a0 = a0 + 0x10000
138150: 01                       fallthrough
      :                          @10209
138151: 82 78                    a1 = u64 [a0]
138153: c9 87 09                 a2 = a0 - a1
138156: aa 69 07                 jump @10211 if a2 == s1
      :                          @10210
138159: 28 17 c6 00              jump @12856
      :                          @10211
138163: c9 c8 09                 a2 = a1 - a5
138166: 01                       fallthrough
      :                          @10212
138167: 82 7a                    a3 = u64 [a0]
138169: ab 8a ee                 jump @10209 if a3 != a1
      :                          @10213
138172: 7b 79                    u64 [a0] = a2
138174: 33 0b                    a4 = 0
138176: 01                       fallthrough
      :                          @10214
138177: ab 8a e6                 jump @10209 if a3 != a1
      :                          @10215
138180: 28 02 c6 00              jump @12856
      :                          @10216 [@dyn 906]
138184: 3a 08 78 12 03           a1 = u64 [0x31278]
138189: 97 89 0d                 a2 = a1 << 0xd
138192: d3 89 09                 a2 = a2 ^ a1
138195: 98 9a 07                 a3 = a2 >> 0x7
138198: 3a 08 60 11 03           a1 = u64 [0x31160]
138203: d3 a9 09                 a2 = a2 ^ a3
138206: 97 9a 11                 a3 = a2 << 0x11
138209: d3 a9 09                 a2 = a2 ^ a3
138212: ca 89 0a                 a3 = a2 * a1
138215: 3e 09 78 12 03           u64 [0x31278] = a2
138220: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
138230: d6 9a 0b                 a4 = a3 mulhu a2
138233: 98 bb 03                 a4 = a4 >> 0x3
138236: 33 0c 0a                 a5 = 0xa
138239: ca cb 0b                 a4 = a4 * a5
138242: c9 ba 0a                 a3 = a3 - a4
138245: 95 aa 01                 a3 = a3 + 0x1
138248: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
138252: 3a 0a 78 12 03           a3 = u64 [0x31278]
138257: 97 ab 0d                 a4 = a3 << 0xd
138260: d3 ba 0a                 a3 = a3 ^ a4
138263: 98 ab 07                 a4 = a3 >> 0x7
138266: d3 ba 0a                 a3 = a3 ^ a4
138269: 97 ab 11                 a4 = a3 << 0x11
138272: d3 ba 0a                 a3 = a3 ^ a4
138275: ca 8a 08                 a1 = a3 * a1
138278: 3e 0a 78 12 03           u64 [0x31278] = a3
138283: d6 98 07                 a0 = a1 mulhu a2
138286: 98 79 02                 a2 = a0 >> 0x2
138289: 84 7a fc                 a3 = a0 & 0xfffffffffffffffc
138292: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
138296: c8 a9 09                 a2 = a2 + a3
138299: c9 98 08                 a1 = a1 - a2
138302: 7b 18 20 01              u64 [sp + 0x120] = a1
138306: 50 20 16 07 69 27 ff     ra = 1814, jump @6574
      :                          @10217 [@dyn 907]
138313: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
138317: 95 17 c8 01              a0 = sp + 0x1c8
138321: 7b 17 90 02              u64 [sp + 0x290] = a0
138325: 33 07 28 0c              a0 = 0xc28
138329: 7b 17 98 02              u64 [sp + 0x298] = a0
138333: 95 18 20 01              a1 = sp + 0x120
138337: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
138341: 33 08 94 0c              a1 = 0xc94
138345: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
138349: 95 18 e0 01              a1 = sp + 0x1e0
138353: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
138357: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
138361: 33 07 10 14 01           a0 = 0x11410
138366: 7b 17 38 02              u64 [sp + 0x238] = a0
138370: 49 21 40 02 03           u64 [sp + 576] = 0x3
138375: 49 21 58 02              u64 [sp + 600] = 0
138379: 95 18 90 02              a1 = sp + 0x290
138383: 7b 18 48 02              u64 [sp + 0x248] = a1
138387: 49 21 50 02 03           u64 [sp + 592] = 0x3
138392: 95 17 08 02              a0 = sp + 0x208
138396: 95 18 38 02              a1 = sp + 0x238
138400: 50 20 18 07 9f 32 fe     ra = 1816, jump @1491
      :                          @10218 [@dyn 908]
138407: 82 16 10 02              s1 = u64 [sp + 0x210]
138411: 82 1b 18 02              a4 = u64 [sp + 0x218]
138415: 82 17 08 02              a0 = u64 [sp + 0x208]
138419: 7b 17 70                 u64 [sp + 0x70] = a0
138422: 33 07 02                 a0 = 0x2
138425: 33 08                    a1 = 0
138427: 33 09                    a2 = 0
138429: 64 6a                    a3 = s1
138431: 33 00 1a 07              ra = 0x71a
138435: 0a 64                    ecalli 100 // 'log'
138437: 01                       fallthrough
      :                          @10219 [@dyn 909]
138438: 82 1c 70                 a5 = u64 [sp + 0x70]
138441: 82 17 68                 a0 = u64 [sp + 0x68]
138444: c8 c7 07                 a0 = a0 + a5
138447: 55 37 00 00 ff 0a        jump @10221 if a0 >=u 4294901760
      :                          @10220
138453: 28 f1 c4 00              jump @12856
      :                          @10221
138457: 33 07 c0 22 03           a0 = 0x322c0
138462: 95 77 00 00 01           a0 = a0 + 0x10000
138467: 01                       fallthrough
      :                          @10222
138468: 82 78                    a1 = u64 [a0]
138470: c9 87 09                 a2 = a0 - a1
138473: aa 69 07                 jump @10224 if a2 == s1
      :                          @10223
138476: 28 da c4 00              jump @12856
      :                          @10224
138480: c9 c8 09                 a2 = a1 - a5
138483: 01                       fallthrough
      :                          @10225
138484: 82 7a                    a3 = u64 [a0]
138486: ab 8a ee                 jump @10222 if a3 != a1
      :                          @10226
138489: 7b 79                    u64 [a0] = a2
138491: 33 0b                    a4 = 0
138493: 01                       fallthrough
      :                          @10227
138494: ab 8a e6                 jump @10222 if a3 != a1
      :                          @10228
138497: 28 c5 c4 00              jump @12856
      :                          @10229 [@dyn 910]
138501: 3a 08 78 12 03           a1 = u64 [0x31278]
138506: 97 89 0d                 a2 = a1 << 0xd
138509: d3 98 08                 a1 = a1 ^ a2
138512: 98 89 07                 a2 = a1 >> 0x7
138515: d3 98 08                 a1 = a1 ^ a2
138518: 3a 09 60 11 03           a2 = u64 [0x31160]
138523: 97 8a 11                 a3 = a1 << 0x11
138526: d3 a8 08                 a1 = a1 ^ a3
138529: ca 98 09                 a2 = a1 * a2
138532: 3e 08 78 12 03           u64 [0x31278] = a1
138537: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
138547: d6 79 07                 a0 = a2 mulhu a0
138550: 98 77 04                 a0 = a0 >> 0x4
138553: 96 77 14                 a0 = a0 * 0x14
138556: c9 79 09                 a2 = a2 - a0
138559: 95 99 01                 a2 = a2 + 0x1
138562: 49 21 e0 00              u64 [sp + 224] = 0
138566: 7b 19 e8 00              u64 [sp + 0xe8] = a2
138570: 46 21 f0 00              u8 [sp + 240] = 0
138574: 95 17 e0 01              a0 = sp + 0x1e0
138578: 95 18 e0 00              a1 = sp + 0xe0
138582: 50 20 1e 07 7b 5d fe     ra = 1822, jump @2235
      :                          @10230 [@dyn 911]
138589: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
138593: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
138597: 95 17 38 02              a0 = sp + 0x238
138601: 95 16 38 02              s1 = sp + 0x238
138605: 7b 18 70                 u64 [sp + 0x70] = a1
138608: 50 20 20 07 74 27 ff     ra = 1824, jump @6596
      :                          @10231 [@dyn 912]
138615: 7b 16 20 01              u64 [sp + 0x120] = s1
138619: 33 07 38 02              a0 = 0x238
138623: 7b 17 28 01              u64 [sp + 0x128] = a0
138627: 33 07 40 14 01           a0 = 0x11440
138632: 7b 17 90 02              u64 [sp + 0x290] = a0
138636: 49 21 98 02 01           u64 [sp + 664] = 0x1
138641: 49 21 b0 02              u64 [sp + 688] = 0
138645: 95 18 20 01              a1 = sp + 0x120
138649: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
138653: 49 21 a8 02 01           u64 [sp + 680] = 0x1
138658: 95 17 08 02              a0 = sp + 0x208
138662: 95 18 90 02              a1 = sp + 0x290
138666: 50 20 22 07 95 31 fe     ra = 1826, jump @1491
      :                          @10232 [@dyn 913]
138673: 82 18 38 02              a1 = u64 [sp + 0x238]
138677: 51 08 2e                 jump @10239 if a1 == 0
      :                          @10233
138680: 56 28 00 20 2b           jump @10239 if a1 >u 8192
      :                          @10234
138685: 82 17 40 02              a0 = u64 [sp + 0x240]
138689: 97 88 03                 a1 = a1 << 0x3
138692: 33 09 c0 22 03           a2 = 0x322c0
138697: 95 99 00 00 01           a2 = a2 + 0x10000
138702: 01                       fallthrough
      :                          @10235
138703: 82 9a                    a3 = u64 [a2]
138705: c9 a9 0b                 a4 = a2 - a3
138708: ab 7b 0f                 jump @10239 if a4 != a0
      :                          @10236
138711: c9 8a 0b                 a4 = a3 - a1
138714: 01                       fallthrough
      :                          @10237
138715: 82 9c                    a5 = u64 [a2]
138717: ab ac f2                 jump @10235 if a5 != a3
      :                          @10238
138720: 7b 9b                    u64 [a2] = a4
138722: 01                       fallthrough
      :                          @10239
138723: 82 16 10 02              s1 = u64 [sp + 0x210]
138727: 82 1b 18 02              a4 = u64 [sp + 0x218]
138731: 82 17 08 02              a0 = u64 [sp + 0x208]
138735: 7b 17 60                 u64 [sp + 0x60] = a0
138738: 33 07 02                 a0 = 0x2
138741: 33 08                    a1 = 0
138743: 33 09                    a2 = 0
138745: 64 6a                    a3 = s1
138747: 33 00 24 07              ra = 0x724
138751: 0a 64                    ecalli 100 // 'log'
138753: 01                       fallthrough
      :                          @10240 [@dyn 914]
138754: 82 1c 60                 a5 = u64 [sp + 0x60]
138757: 82 17 68                 a0 = u64 [sp + 0x68]
138760: c8 c7 07                 a0 = a0 + a5
138763: 53 37 00 00 ff 25        jump @10246 if a0 <u 4294901760
      :                          @10241
138769: 33 07 c0 22 03           a0 = 0x322c0
138774: 95 77 00 00 01           a0 = a0 + 0x10000
138779: 01                       fallthrough
      :                          @10242
138780: 82 78                    a1 = u64 [a0]
138782: c9 87 09                 a2 = a0 - a1
138785: ab 69 0f                 jump @10246 if a2 != s1
      :                          @10243
138788: c9 c8 09                 a2 = a1 - a5
138791: 01                       fallthrough
      :                          @10244
138792: 82 7a                    a3 = u64 [a0]
138794: ab 8a f2                 jump @10242 if a3 != a1
      :                          @10245
138797: 7b 79                    u64 [a0] = a2
138799: 01                       fallthrough
      :                          @10246
138800: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
138804: 82 16 70                 s1 = u64 [sp + 0x70]
138807: 52 07 07                 jump @10248 if a0 != 0
      :                          @10247
138810: 28 8c c3 00              jump @12856
      :                          @10248
138814: 54 27 00 20 09           jump @10250 if a0 <=u 8192
      :                          @10249
138819: 28 83 c3 00              jump @12856
      :                          @10250
138823: 97 77 03                 a0 = a0 << 0x3
138826: 33 08 c0 22 03           a1 = 0x322c0
138831: 95 88 00 00 01           a1 = a1 + 0x10000
138836: 01                       fallthrough
      :                          @10251
138837: 82 89                    a2 = u64 [a1]
138839: c9 98 0a                 a3 = a1 - a2
138842: aa 6a 07                 jump @10253 if a3 == s1
      :                          @10252
138845: 28 69 c3 00              jump @12856
      :                          @10253
138849: c9 79 0a                 a3 = a2 - a0
138852: 01                       fallthrough
      :                          @10254
138853: 82 8b                    a4 = u64 [a1]
138855: ab 9b ee                 jump @10251 if a4 != a2
      :                          @10255
138858: 7b 8a                    u64 [a1] = a3
138860: 33 0c                    a5 = 0
138862: 01                       fallthrough
      :                          @10256
138863: ab 9b e6                 jump @10251 if a4 != a2
      :                          @10257
138866: 28 54 c3 00              jump @12856
      :                          @10258 [@dyn 915]
138870: 3a 08 78 12 03           a1 = u64 [0x31278]
138875: 97 89 0d                 a2 = a1 << 0xd
138878: d3 98 08                 a1 = a1 ^ a2
138881: 98 8a 07                 a3 = a1 >> 0x7
138884: 3a 09 60 11 03           a2 = u64 [0x31160]
138889: d3 a8 08                 a1 = a1 ^ a3
138892: 97 8a 11                 a3 = a1 << 0x11
138895: d3 a8 08                 a1 = a1 ^ a3
138898: ca 98 0a                 a3 = a1 * a2
138901: 3e 08 78 12 03           u64 [0x31278] = a1
138906: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
138916: d6 ba 08                 a1 = a3 mulhu a4
138919: 98 8c 02                 a5 = a1 >> 0x2
138922: 84 88 fc                 a1 = a1 & 0xfffffffffffffffc
138925: c8 c8 08                 a1 = a1 + a5
138928: 3a 06 78 12 03           s1 = u64 [0x31278]
138933: c9 8a 08                 a1 = a3 - a1
138936: 95 8a 03                 a3 = a1 + 0x3
138939: 97 6c 0d                 a5 = s1 << 0xd
138942: d3 c6 06                 s1 = s1 ^ a5
138945: 98 6c 07                 a5 = s1 >> 0x7
138948: d3 c6 06                 s1 = s1 ^ a5
138951: 97 6c 11                 a5 = s1 << 0x11
138954: d3 6c 0c                 a5 = a5 ^ s1
138957: ca 9c 09                 a2 = a5 * a2
138960: 3e 0c 78 12 03           u64 [0x31278] = a5
138965: d6 b9 07                 a0 = a2 mulhu a4
138968: 98 7b 02                 a4 = a0 >> 0x2
138971: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
138974: c8 b7 07                 a0 = a0 + a4
138977: c9 79 07                 a0 = a2 - a0
138980: 95 79 03                 a2 = a0 + 0x3
138983: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
138987: 7b 19 20 01              u64 [sp + 0x120] = a2
138991: 52 08 07                 jump @10260 if a1 != 0
      :                          @10259
138994: 28 ce d3 00              jump @13182
      :                          @10260
138998: 52 18 01 08              jump @10262 if a1 != 1
      :                          @10261
139002: 28 dd d3 00              jump @13186
      :                          @10262
139006: 51 18 02 08              jump @10264 if a1 == 2
      :                          @10263
139010: 28 e8 d3 00              jump @13189
      :                          @10264
139014: 51 07 c5 d3 00           jump @13185 if a0 == 0
      :                          @10265
139019: 28 df d3 00              jump @13189
      :                          @10266 [@dyn 916]
139023: 3a 02 60 11 03           t0 = u64 [0x31160]
139028: 49 21 c8 01              u64 [sp + 456] = 0
139032: 49 21 d0 01 08           u64 [sp + 464] = 0x8
139037: 49 21 d8 01              u64 [sp + 472] = 0
139041: 33 06 0c                 s1 = 0xc
139044: 33 03 78 12 03           t1 = 0x31278
139049: 14 04 ab aa aa aa aa aa aa aa t2 = 0xaaaaaaaaaaaaaaab
139059: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
139069: 7b 17 70                 u64 [sp + 0x70] = a0
139072: 7b 12 40                 u64 [sp + 0x40] = t0
139075: 7b 14 38                 u64 [sp + 0x38] = t2
139078: 28 58                    jump @10269
      :                          @10267
139080: ca 29 07                 a0 = a2 * t0
139083: d6 47 09                 a2 = a0 mulhu t2
139086: 98 99 02                 a2 = a2 >> 0x2
139089: 96 99 06                 a2 = a2 * 0x6
139092: c9 97 07                 a0 = a0 - a2
139095: ca 2a 09                 a2 = a3 * t0
139098: d6 49 0a                 a3 = a2 mulhu t2
139101: 98 aa 02                 a3 = a3 >> 0x2
139104: 96 aa 06                 a3 = a3 * 0x6
139107: c9 a9 09                 a2 = a2 - a3
139110: ca 2c 0a                 a3 = a5 * t0
139113: 82 1b 70                 a4 = u64 [sp + 0x70]
139116: d6 ba 0b                 a4 = a3 mulhu a4
139119: 98 bb 04                 a4 = a4 >> 0x4
139122: 82 1c d0 01              a5 = u64 [sp + 0x1d0]
139126: 96 bb 14                 a4 = a4 * 0x14
139129: c9 ba 0a                 a3 = a3 - a4
139132: 96 8b 18                 a4 = a1 * 0x18
139135: c8 cb 0b                 a4 = a4 + a5
139138: 7b b7                    u64 [a4] = a0
139140: 7b b9 08                 u64 [a4 + 0x8] = a2
139143: 95 aa f6                 a3 = a3 + 0xfffffffffffffff6
139146: 7b ba 10                 u64 [a4 + 0x10] = a3
139149: 95 89 01                 a2 = a1 + 0x1
139152: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
139155: 7b 19 d8 01              u64 [sp + 0x1d8] = a2
139159: 52 06 07                 jump @10269 if s1 != 0
      :                          @10268
139162: 28 ca ad 00              jump @12460
      :                          @10269
139166: 3a 07 78 12 03           a0 = u64 [0x31278]
139171: 97 78 0d                 a1 = a0 << 0xd
139174: d3 87 07                 a0 = a0 ^ a1
139177: 98 78 07                 a1 = a0 >> 0x7
139180: d3 87 07                 a0 = a0 ^ a1
139183: 97 78 11                 a1 = a0 << 0x11
139186: d3 78 09                 a2 = a1 ^ a0
139189: 3e 09 78 12 03           u64 [0x31278] = a2
139194: 3a 07 78 12 03           a0 = u64 [0x31278]
139199: 97 78 0d                 a1 = a0 << 0xd
139202: d3 87 07                 a0 = a0 ^ a1
139205: 98 78 07                 a1 = a0 >> 0x7
139208: d3 87 07                 a0 = a0 ^ a1
139211: 97 78 11                 a1 = a0 << 0x11
139214: d3 78 0a                 a3 = a1 ^ a0
139217: 3e 0a 78 12 03           u64 [0x31278] = a3
139222: 3a 07 78 12 03           a0 = u64 [0x31278]
139227: 97 78 0d                 a1 = a0 << 0xd
139230: d3 87 07                 a0 = a0 ^ a1
139233: 98 78 07                 a1 = a0 >> 0x7
139236: d3 87 07                 a0 = a0 ^ a1
139239: 97 78 11                 a1 = a0 << 0x11
139242: d3 78 0c                 a5 = a1 ^ a0
139245: 3e 0c 78 12 03           u64 [0x31278] = a5
139250: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
139254: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
139258: ab 78 4e ff              jump @10267 if a1 != a0
      :                          @10270
139262: 95 17 c8 01              a0 = sp + 0x1c8
139266: 7b 19 60                 u64 [sp + 0x60] = a2
139269: 7b 1a 58                 u64 [sp + 0x58] = a3
139272: 7b 1c 48                 u64 [sp + 0x48] = a5
139275: 50 20 2a 07 7a 32 fe     ra = 1834, jump @1569
      :                          @10271 [@dyn 917]
139282: 82 1c 48                 a5 = u64 [sp + 0x48]
139285: 82 1a 58                 a3 = u64 [sp + 0x58]
139288: 82 19 60                 a2 = u64 [sp + 0x60]
139291: 82 14 38                 t2 = u64 [sp + 0x38]
139294: 33 03 78 12 03           t1 = 0x31278
139299: 82 12 40                 t0 = u64 [sp + 0x40]
139302: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
139306: 28 1e ff                 jump @10267
      :                          @10272 [@dyn 918]
139309: 14 08 ff ff ff ff ff ff ff 3f a1 = 0x3fffffffffffffff
139319: 95 17 90 02              a0 = sp + 0x290
139323: 33 09 05                 a2 = 0x5
139326: 50 20 2e 07 ab 43 fe     ra = 1838, jump @1877
      :                          @10273 [@dyn 919]
139333: 95 17 08 02              a0 = sp + 0x208
139337: 95 18 90 02              a1 = sp + 0x290
139341: 33 09 05                 a2 = 0x5
139344: 50 20 30 07 c4 3d fe     ra = 1840, jump @1783
      :                          @10274 [@dyn 920]
139351: 82 17 18 02              a0 = u64 [sp + 0x218]
139355: 52 07 07                 jump @10276 if a0 != 0
      :                          @10275
139358: 28 88 d3 00              jump @13240
      :                          @10276
139362: 82 17 10 02              a0 = u64 [sp + 0x210]
139366: 82 78 10                 a1 = u64 [a0 + 0x10]
139369: 52 08 07                 jump @10278 if a1 != 0
      :                          @10277
139372: 28 6b d3 00              jump @13225
      :                          @10278
139376: 82 77 08                 a0 = u64 [a0 + 0x8]
139379: 49 07                    u64 [a0 + 0] = 0
139381: 82 18 18 02              a1 = u64 [sp + 0x218]
139385: 55 18 02 08              jump @10280 if a1 >=u 2
      :                          @10279
139389: 28 89 d2 00              jump @13197
      :                          @10280
139393: 82 18 10 02              a1 = u64 [sp + 0x210]
139397: 82 89 28                 a2 = u64 [a1 + 0x28]
139400: 55 19 02 08              jump @10282 if a2 >=u 2
      :                          @10281
139404: 28 46 d3 00              jump @13220
      :                          @10282
139408: 82 87 20                 a0 = u64 [a1 + 0x20]
139411: 49 17 08                 u64 [a0 + 8] = 0
139414: 82 18 18 02              a1 = u64 [sp + 0x218]
139418: 55 18 03 08              jump @10284 if a1 >=u 3
      :                          @10283
139422: 28 6a d2 00              jump @13199
      :                          @10284
139426: 82 17 10 02              a0 = u64 [sp + 0x210]
139430: 82 79 40                 a2 = u64 [a0 + 0x40]
139433: 55 19 03 08              jump @10286 if a2 >=u 3
      :                          @10285
139437: 28 26 d3 00              jump @13221
      :                          @10286
139441: 82 78 38                 a1 = u64 [a0 + 0x38]
139444: 49 18 10                 u64 [a1 + 16] = 0
139447: 82 18 18 02              a1 = u64 [sp + 0x218]
139451: 55 18 04 08              jump @10288 if a1 >=u 4
      :                          @10287
139455: 28 48 d2 00              jump @13198
      :                          @10288
139459: 82 79 58                 a2 = u64 [a0 + 0x58]
139462: 55 19 04 08              jump @10290 if a2 >=u 4
      :                          @10289
139466: 28 0a d3 00              jump @13222
      :                          @10290
139470: 82 79 50                 a2 = u64 [a0 + 0x50]
139473: 49 19 18                 u64 [a2 + 24] = 0
139476: 55 18 05 08              jump @10292 if a1 >=u 5
      :                          @10291
139480: 28 15 d3 00              jump @13247
      :                          @10292
139484: 82 79 70                 a2 = u64 [a0 + 0x70]
139487: 55 19 05 08              jump @10294 if a2 >=u 5
      :                          @10293
139491: 28 25 d3 00              jump @13270
      :                          @10294
139495: 82 77 68                 a0 = u64 [a0 + 0x68]
139498: 3a 0c 60 11 03           a5 = u64 [0x31160]
139503: 49 17 20                 u64 [a0 + 32] = 0
139506: 33 04 0a                 t2 = 0xa
139509: 33 00 78 12 03           ra = 0x31278
139514: 14 03 cd cc cc cc cc cc cc cc t1 = 0xcccccccccccccccd
139524: 01                       fallthrough
      :                          @10295
139525: 3a 07 78 12 03           a0 = u64 [0x31278]
139530: 97 78 0d                 a1 = a0 << 0xd
139533: d3 87 07                 a0 = a0 ^ a1
139536: 98 78 07                 a1 = a0 >> 0x7
139539: d3 87 07                 a0 = a0 ^ a1
139542: 97 78 11                 a1 = a0 << 0x11
139545: d3 87 07                 a0 = a0 ^ a1
139548: 3e 07 78 12 03           u64 [0x31278] = a0
139553: 3a 08 78 12 03           a1 = u64 [0x31278]
139558: ca c7 07                 a0 = a0 * a5
139561: 97 89 0d                 a2 = a1 << 0xd
139564: d3 98 08                 a1 = a1 ^ a2
139567: 98 89 07                 a2 = a1 >> 0x7
139570: d3 98 08                 a1 = a1 ^ a2
139573: 97 89 11                 a2 = a1 << 0x11
139576: d3 89 09                 a2 = a2 ^ a1
139579: 3e 09 78 12 03           u64 [0x31278] = a2
139584: 3a 08 78 12 03           a1 = u64 [0x31278]
139589: d6 37 0b                 a4 = a0 mulhu t1
139592: 98 b2 02                 t0 = a4 >> 0x2
139595: 97 86 0d                 s1 = a1 << 0xd
139598: d3 68 08                 a1 = a1 ^ s1
139601: 98 86 07                 s1 = a1 >> 0x7
139604: d3 68 08                 a1 = a1 ^ s1
139607: 97 86 11                 s1 = a1 << 0x11
139610: d3 86 06                 s1 = s1 ^ a1
139613: 3e 06 78 12 03           u64 [0x31278] = s1
139618: 82 18 18 02              a1 = u64 [sp + 0x218]
139622: 84 bb fc                 a4 = a4 & 0xfffffffffffffffc
139625: c8 2b 0b                 a4 = a4 + t0
139628: c9 b7 07                 a0 = a0 - a4
139631: ac 87 07                 jump @10297 if a0 <u a1
      :                          @10296
139634: 28 5d d2 00              jump @13217
      :                          @10297
139638: 64 cb                    a4 = a5
139640: ca c9 02                 t0 = a2 * a5
139643: 82 19 10 02              a2 = u64 [sp + 0x210]
139647: d6 32 0c                 a5 = t0 mulhu t1
139650: 98 ca 02                 a3 = a5 >> 0x2
139653: 96 77 18                 a0 = a0 * 0x18
139656: c8 79 09                 a2 = a2 + a0
139659: 82 98 10                 a1 = u64 [a2 + 0x10]
139662: 84 cc fc                 a5 = a5 & 0xfffffffffffffffc
139665: c8 ca 0a                 a3 = a3 + a5
139668: c9 a2 07                 a0 = t0 - a3
139671: ac 87 07                 jump @10299 if a0 <u a1
      :                          @10298
139674: 28 35 d2 00              jump @13217
      :                          @10299
139678: 82 98 08                 a1 = u64 [a2 + 0x8]
139681: 64 bc                    a5 = a4
139683: ca b6 09                 a2 = s1 * a4
139686: d6 39 0a                 a3 = a2 mulhu t1
139689: 97 77 03                 a0 = a0 << 0x3
139692: c8 87 07                 a0 = a0 + a1
139695: 82 78                    a1 = u64 [a0]
139697: 98 aa 04                 a3 = a3 >> 0x4
139700: 33 0b 14                 a4 = 0x14
139703: ca ba 0a                 a3 = a3 * a4
139706: c9 a9 09                 a2 = a2 - a3
139709: e5 89 08                 a1 = mins(a2, a1)
139712: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
139715: 7b 78                    u64 [a0] = a1
139717: 52 04 40 ff              jump @10295 if t2 != 0
      :                          @10300
139721: 82 17 10 02              a0 = u64 [sp + 0x210]
139725: 82 18 18 02              a1 = u64 [sp + 0x218]
139729: 50 20 32 07 0c 27 ff     ra = 1842, jump @6705
      :                          @10301 [@dyn 921]
139736: 95 17 08 02              a0 = sp + 0x208
139740: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
139744: 33 07 40 02              a0 = 0x240
139748: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
139752: 33 07 f8 14 01           a0 = 0x114f8
139757: 7b 17 90 02              u64 [sp + 0x290] = a0
139761: 49 21 98 02 01           u64 [sp + 664] = 0x1
139766: 49 21 b0 02              u64 [sp + 688] = 0
139770: 95 18 e0 01              a1 = sp + 0x1e0
139774: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
139778: 49 21 a8 02 01           u64 [sp + 680] = 0x1
139783: 95 17 38 02              a0 = sp + 0x238
139787: 95 18 90 02              a1 = sp + 0x290
139791: 50 20 34 07 30 2d fe     ra = 1844, jump @1491
      :                          @10302 [@dyn 922]
139798: 82 16 40 02              s1 = u64 [sp + 0x240]
139802: 82 1b 48 02              a4 = u64 [sp + 0x248]
139806: 82 17 38 02              a0 = u64 [sp + 0x238]
139810: 7b 17 70                 u64 [sp + 0x70] = a0
139813: 33 07 02                 a0 = 0x2
139816: 33 08                    a1 = 0
139818: 33 09                    a2 = 0
139820: 64 6a                    a3 = s1
139822: 33 00 36 07              ra = 0x736
139826: 0a 64                    ecalli 100 // 'log'
139828: 01                       fallthrough
      :                          @10303 [@dyn 923]
139829: 82 1c 70                 a5 = u64 [sp + 0x70]
139832: 82 17 68                 a0 = u64 [sp + 0x68]
139835: c8 c7 07                 a0 = a0 + a5
139838: 33 08 00 00 ff           a1 = 0xffffffffffff0000
139843: ae 87 07                 jump @10305 if a0 >=u a1
      :                          @10304
139846: 28 88 ba 00              jump @12755
      :                          @10305
139850: 33 07 c0 22 03           a0 = 0x322c0
139855: 95 77 00 00 01           a0 = a0 + 0x10000
139860: 01                       fallthrough
      :                          @10306
139861: 82 78                    a1 = u64 [a0]
139863: c9 87 09                 a2 = a0 - a1
139866: aa 69 07                 jump @10308 if a2 == s1
      :                          @10307
139869: 28 71 ba 00              jump @12755
      :                          @10308
139873: c9 c8 09                 a2 = a1 - a5
139876: 01                       fallthrough
      :                          @10309
139877: 82 7a                    a3 = u64 [a0]
139879: ab 8a ee                 jump @10306 if a3 != a1
      :                          @10310
139882: 7b 79                    u64 [a0] = a2
139884: 33 0b                    a4 = 0
139886: 01                       fallthrough
      :                          @10311
139887: ab 8a e6                 jump @10306 if a3 != a1
      :                          @10312
139890: 28 5c ba 00              jump @12755
      :                          @10313 [@dyn 924]
139894: 3a 06 60 11 03           s1 = u64 [0x31160]
139899: 49 21 90 02              u64 [sp + 656] = 0
139903: 49 21 98 02 08           u64 [sp + 664] = 0x8
139908: 49 21 a0 02              u64 [sp + 672] = 0
139912: 95 17 08 02              a0 = sp + 0x208
139916: 95 18 90 02              a1 = sp + 0x290
139920: 33 09 0a                 a2 = 0xa
139923: 50 20 3a 07 81 3b fe     ra = 1850, jump @1783
      :                          @10314 [@dyn 925]
139930: 33 02 0a                 t0 = 0xa
139933: 64 69                    a2 = s1
139935: 49 11 18                 u64 [sp + 24] = 0
139938: 33 00                    ra = 0
139940: 49 11 10 01              u64 [sp + 16] = 0x1
139944: 33 0c 78 12 03           a5 = 0x31278
139949: 14 03 ab aa aa aa aa aa aa aa t1 = 0xaaaaaaaaaaaaaaab
139959: 14 08 00 00 00 00 55 55 55 55 a1 = 0x5555555500000000
139969: 14 04 55 55 55 55 55 55 55 55 t2 = 0x5555555555555555
139979: 7b 16 58                 u64 [sp + 0x58] = s1
139982: 7b 13 48                 u64 [sp + 0x48] = t1
139985: 7b 14 40                 u64 [sp + 0x40] = t2
139988: 28 1e                    jump @10317
      :                          @10315
139990: 95 00 01                 ra = ra + 0x1
139993: 82 17 10                 a0 = u64 [sp + 0x10]
139996: 95 77 01                 a0 = a0 + 0x1
139999: 7b 17 10                 u64 [sp + 0x10] = a0
140002: 82 17 18                 a0 = u64 [sp + 0x18]
140005: 95 77 18                 a0 = a0 + 0x18
140008: 7b 17 18                 u64 [sp + 0x18] = a0
140011: ab 20 07                 jump @10317 if ra != t0
      :                          @10316
140014: 28 37 b9 00              jump @12746
      :                          @10317
140018: 56 10 08 e4              jump @10315 if ra >u 8
      :                          @10318
140022: 82 1a 18                 a3 = u64 [sp + 0x18]
140025: 82 16 10                 s1 = u64 [sp + 0x10]
140028: 7b 10 60                 u64 [sp + 0x60] = ra
140031: 28 31                    jump @10321
      :                          @10319
140033: 33 02 0a                 t0 = 0xa
140036: 82 10 60                 ra = u64 [sp + 0x60]
140039: 33 0c 78 12 03           a5 = 0x31278
140044: 82 13 48                 t1 = u64 [sp + 0x48]
140047: 82 14 40                 t2 = u64 [sp + 0x40]
140050: 82 b7 20                 a0 = u64 [a4 + 0x20]
140053: 97 89 03                 a2 = a1 << 0x3
140056: c8 97 07                 a0 = a0 + a2
140059: 7b 70                    u64 [a0] = ra
140061: 95 88 01                 a1 = a1 + 0x1
140064: 7b b8 28                 u64 [a4 + 0x28] = a1
140067: 82 19 58                 a2 = u64 [sp + 0x58]
140070: 01                       fallthrough
      :                          @10320
140071: 95 66 01                 s1 = s1 + 0x1
140074: 95 aa 18                 a3 = a3 + 0x18
140077: aa 26 a9                 jump @10315 if s1 == t0
      :                          @10321
140080: 3a 07 78 12 03           a0 = u64 [0x31278]
140085: 97 78 0d                 a1 = a0 << 0xd
140088: d3 87 07                 a0 = a0 ^ a1
140091: 98 78 07                 a1 = a0 >> 0x7
140094: d3 87 07                 a0 = a0 ^ a1
140097: 97 78 11                 a1 = a0 << 0x11
140100: d3 87 07                 a0 = a0 ^ a1
140103: ca 39 08                 a1 = a2 * t1
140106: ca 87 08                 a1 = a0 * a1
140109: 3e 07 78 12 03           u64 [0x31278] = a0
140114: ac 84 d5                 jump @10320 if t2 <u a1
      :                          @10322
140117: 82 1c 18 02              a5 = u64 [sp + 0x218]
140121: ac c0 07                 jump @10324 if ra <u a5
      :                          @10323
140124: 28 a8 cf 00              jump @13195
      :                          @10324
140128: 82 12 10 02              t0 = u64 [sp + 0x210]
140132: 96 07 18                 a0 = ra * 0x18
140135: c8 27 07                 a0 = a0 + t0
140138: 82 78 10                 a1 = u64 [a0 + 0x10]
140141: 82 79                    a2 = u64 [a0]
140143: 95 7b 10                 a4 = a0 + 0x10
140146: 7b 1a 70                 u64 [sp + 0x70] = a3
140149: ab 98 28                 jump @10327 if a1 != a2
      :                          @10325
140152: 7b 1c 38                 u64 [sp + 0x38] = a5
140155: 7b 12 30                 u64 [sp + 0x30] = t0
140158: 7b 1b 28                 u64 [sp + 0x28] = a4
140161: 7b 17 20                 u64 [sp + 0x20] = a0
140164: 50 20 3c 07 83 2f fe     ra = 1852, jump @1581
      :                          @10326 [@dyn 926]
140171: 82 17 20                 a0 = u64 [sp + 0x20]
140174: 82 1b 28                 a4 = u64 [sp + 0x28]
140177: 82 12 30                 t0 = u64 [sp + 0x30]
140180: 82 1c 38                 a5 = u64 [sp + 0x38]
140183: 82 1a 70                 a3 = u64 [sp + 0x70]
140186: 82 b8                    a1 = u64 [a4]
140188: 01                       fallthrough
      :                          @10327
140189: 82 77 08                 a0 = u64 [a0 + 0x8]
140192: 97 89 03                 a2 = a1 << 0x3
140195: c8 97 07                 a0 = a0 + a2
140198: 7b 76                    u64 [a0] = s1
140200: 95 88 01                 a1 = a1 + 0x1
140203: 7b b8                    u64 [a4] = a1
140205: ac c6 07                 jump @10329 if s1 <u a5
      :                          @10328
140208: 28 55 cf 00              jump @13196
      :                          @10329
140212: c8 a2 0b                 a4 = t0 + a3
140215: 82 b8 28                 a1 = u64 [a4 + 0x28]
140218: 82 b7 18                 a0 = u64 [a4 + 0x18]
140221: ab 78 44 ff              jump @10319 if a1 != a0
      :                          @10330
140225: 95 b7 18                 a0 = a4 + 0x18
140228: 7b 1b 38                 u64 [sp + 0x38] = a4
140231: 50 20 3e 07 40 2f fe     ra = 1854, jump @1581
      :                          @10331 [@dyn 927]
140238: 82 1b 38                 a4 = u64 [sp + 0x38]
140241: 82 1a 70                 a3 = u64 [sp + 0x70]
140244: 82 b8 28                 a1 = u64 [a4 + 0x28]
140247: 28 2a ff                 jump @10319
      :                          @10332 [@dyn 928]
140250: 49 21 90 02              u64 [sp + 656] = 0
140254: 49 21 98 02 08           u64 [sp + 664] = 0x8
140259: 49 21 a0 02              u64 [sp + 672] = 0
140263: 95 17 e0 01              a0 = sp + 0x1e0
140267: 95 18 90 02              a1 = sp + 0x290
140271: 33 09 08                 a2 = 0x8
140274: 50 20 42 07 22 3a fe     ra = 1858, jump @1783
      :                          @10333 [@dyn 929]
140281: 33 09 08                 a2 = 0x8
140284: 49 11 30                 u64 [sp + 48] = 0
140287: 33 07                    a0 = 0
140289: 49 11 28 01              u64 [sp + 40] = 0x1
140293: 33 02 78 12 03           t0 = 0x31278
140298: 28 1e                    jump @10336
      :                          @10334
140300: 95 77 01                 a0 = a0 + 0x1
140303: 82 18 28                 a1 = u64 [sp + 0x28]
140306: 95 88 01                 a1 = a1 + 0x1
140309: 7b 18 28                 u64 [sp + 0x28] = a1
140312: 82 18 30                 a1 = u64 [sp + 0x30]
140315: 95 88 18                 a1 = a1 + 0x18
140318: 7b 18 30                 u64 [sp + 0x30] = a1
140321: ab 97 07                 jump @10336 if a0 != a2
      :                          @10335
140324: 28 b8 b8 00              jump @12757
      :                          @10336
140328: 56 17 06 e4              jump @10334 if a0 >u 6
      :                          @10337
140332: 82 1c 30                 a5 = u64 [sp + 0x30]
140335: 82 16 28                 s1 = u64 [sp + 0x28]
140338: 7b 17 60                 u64 [sp + 0x60] = a0
140341: 28 28                    jump @10340
      :                          @10338
140343: 82 17 60                 a0 = u64 [sp + 0x60]
140346: 33 02 78 12 03           t0 = 0x31278
140351: 82 ba 20                 a3 = u64 [a4 + 0x20]
140354: 97 89 03                 a2 = a1 << 0x3
140357: c8 a9 09                 a2 = a2 + a3
140360: 7b 97                    u64 [a2] = a0
140362: 95 88 01                 a1 = a1 + 0x1
140365: 7b b8 28                 u64 [a4 + 0x28] = a1
140368: 33 09 08                 a2 = 0x8
140371: 01                       fallthrough
      :                          @10339
140372: 95 66 01                 s1 = s1 + 0x1
140375: 95 cc 18                 a5 = a5 + 0x18
140378: aa 96 b2                 jump @10334 if s1 == a2
      :                          @10340
140381: 3a 0a 78 12 03           a3 = u64 [0x31278]
140386: 97 a8 0d                 a1 = a3 << 0xd
140389: d3 8a 0a                 a3 = a3 ^ a1
140392: 98 a8 07                 a1 = a3 >> 0x7
140395: d3 8a 0a                 a3 = a3 ^ a1
140398: 97 a8 11                 a1 = a3 << 0x11
140401: d3 a8 08                 a1 = a1 ^ a3
140404: 84 aa 01                 a3 = a3 & 0x1
140407: 3e 08 78 12 03           u64 [0x31278] = a1
140412: 52 0a d8                 jump @10339 if a3 != 0
      :                          @10341
140415: 82 1a f0 01              a3 = u64 [sp + 0x1f0]
140419: ac a7 07                 jump @10343 if a0 <u a3
      :                          @10342
140422: 28 7a ce 00              jump @13191
      :                          @10343
140426: 82 12 e8 01              t0 = u64 [sp + 0x1e8]
140430: 96 77 18                 a0 = a0 * 0x18
140433: c8 27 07                 a0 = a0 + t0
140436: 82 78 10                 a1 = u64 [a0 + 0x10]
140439: 82 79                    a2 = u64 [a0]
140441: 95 7b 10                 a4 = a0 + 0x10
140444: 7b 1c 70                 u64 [sp + 0x70] = a5
140447: ab 98 28                 jump @10346 if a1 != a2
      :                          @10344
140450: 7b 1a 58                 u64 [sp + 0x58] = a3
140453: 7b 12 48                 u64 [sp + 0x48] = t0
140456: 7b 1b 40                 u64 [sp + 0x40] = a4
140459: 7b 17 38                 u64 [sp + 0x38] = a0
140462: 50 20 44 07 59 2e fe     ra = 1860, jump @1581
      :                          @10345 [@dyn 930]
140469: 82 17 38                 a0 = u64 [sp + 0x38]
140472: 82 1b 40                 a4 = u64 [sp + 0x40]
140475: 82 12 48                 t0 = u64 [sp + 0x48]
140478: 82 1a 58                 a3 = u64 [sp + 0x58]
140481: 82 1c 70                 a5 = u64 [sp + 0x70]
140484: 82 b8                    a1 = u64 [a4]
140486: 01                       fallthrough
      :                          @10346
140487: 82 77 08                 a0 = u64 [a0 + 0x8]
140490: 97 89 03                 a2 = a1 << 0x3
140493: c8 97 07                 a0 = a0 + a2
140496: 7b 76                    u64 [a0] = s1
140498: 95 88 01                 a1 = a1 + 0x1
140501: 7b b8                    u64 [a4] = a1
140503: ac a6 07                 jump @10348 if s1 <u a3
      :                          @10347
140506: 28 28 ce 00              jump @13193
      :                          @10348
140510: c8 c2 0b                 a4 = t0 + a5
140513: 82 b8 28                 a1 = u64 [a4 + 0x28]
140516: 82 b7 18                 a0 = u64 [a4 + 0x18]
140519: ab 78 50 ff              jump @10338 if a1 != a0
      :                          @10349
140523: 95 b7 18                 a0 = a4 + 0x18
140526: 7b 1b 58                 u64 [sp + 0x58] = a4
140529: 50 20 46 07 16 2e fe     ra = 1862, jump @1581
      :                          @10350 [@dyn 931]
140536: 82 1b 58                 a4 = u64 [sp + 0x58]
140539: 82 1c 70                 a5 = u64 [sp + 0x70]
140542: 82 b8 28                 a1 = u64 [a4 + 0x28]
140545: 28 36 ff                 jump @10338
      :                          @10351 [@dyn 932]
140548: 49 21 90 02              u64 [sp + 656] = 0
140552: 49 21 98 02 08           u64 [sp + 664] = 0x8
140557: 49 21 a0 02              u64 [sp + 672] = 0
140561: 95 17 e0 01              a0 = sp + 0x1e0
140565: 95 18 90 02              a1 = sp + 0x290
140569: 33 09 08                 a2 = 0x8
140572: 50 20 4a 07 f8 38 fe     ra = 1866, jump @1783
      :                          @10352 [@dyn 933]
140579: 33 02 08                 t0 = 0x8
140582: 49 11 30                 u64 [sp + 48] = 0
140585: 33 07                    a0 = 0
140587: 49 11 28 01              u64 [sp + 40] = 0x1
140591: 33 03 78 12 03           t1 = 0x31278
140596: 28 1e                    jump @10355
      :                          @10353
140598: 95 77 01                 a0 = a0 + 0x1
140601: 82 18 28                 a1 = u64 [sp + 0x28]
140604: 95 88 01                 a1 = a1 + 0x1
140607: 7b 18 28                 u64 [sp + 0x28] = a1
140610: 82 18 30                 a1 = u64 [sp + 0x30]
140613: 95 88 18                 a1 = a1 + 0x18
140616: 7b 18 30                 u64 [sp + 0x30] = a1
140619: ab 27 07                 jump @10355 if a0 != t0
      :                          @10354
140622: 28 66 b8 00              jump @12775
      :                          @10355
140626: 56 17 06 e4              jump @10353 if a0 >u 6
      :                          @10356
140630: 82 1c 30                 a5 = u64 [sp + 0x30]
140633: 82 16 28                 s1 = u64 [sp + 0x28]
140636: 7b 17 60                 u64 [sp + 0x60] = a0
140639: 28 28                    jump @10359
      :                          @10357
140641: 33 02 08                 t0 = 0x8
140644: 82 17 60                 a0 = u64 [sp + 0x60]
140647: 33 03 78 12 03           t1 = 0x31278
140652: 82 ab 20                 a4 = u64 [a3 + 0x20]
140655: 97 89 03                 a2 = a1 << 0x3
140658: c8 b9 09                 a2 = a2 + a4
140661: 7b 97                    u64 [a2] = a0
140663: 95 88 01                 a1 = a1 + 0x1
140666: 7b a8 28                 u64 [a3 + 0x28] = a1
140669: 01                       fallthrough
      :                          @10358
140670: 95 66 01                 s1 = s1 + 0x1
140673: 95 cc 18                 a5 = a5 + 0x18
140676: aa 26 b2                 jump @10353 if s1 == t0
      :                          @10359
140679: 3a 09 78 12 03           a2 = u64 [0x31278]
140684: 97 98 0d                 a1 = a2 << 0xd
140687: d3 89 09                 a2 = a2 ^ a1
140690: 98 98 07                 a1 = a2 >> 0x7
140693: d3 89 09                 a2 = a2 ^ a1
140696: 97 98 11                 a1 = a2 << 0x11
140699: d3 98 08                 a1 = a1 ^ a2
140702: 84 99 01                 a2 = a2 & 0x1
140705: 3e 08 78 12 03           u64 [0x31278] = a1
140710: 52 09 d8                 jump @10358 if a2 != 0
      :                          @10360
140713: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
140717: ac b7 07                 jump @10362 if a0 <u a4
      :                          @10361
140720: 28 51 cd 00              jump @13192
      :                          @10362
140724: 82 12 e8 01              t0 = u64 [sp + 0x1e8]
140728: 96 77 18                 a0 = a0 * 0x18
140731: c8 27 07                 a0 = a0 + t0
140734: 82 78 10                 a1 = u64 [a0 + 0x10]
140737: 82 79                    a2 = u64 [a0]
140739: 95 7a 10                 a3 = a0 + 0x10
140742: 7b 1c 70                 u64 [sp + 0x70] = a5
140745: ab 98 28                 jump @10365 if a1 != a2
      :                          @10363
140748: 7b 1b 58                 u64 [sp + 0x58] = a4
140751: 7b 12 48                 u64 [sp + 0x48] = t0
140754: 7b 1a 40                 u64 [sp + 0x40] = a3
140757: 7b 17 38                 u64 [sp + 0x38] = a0
140760: 50 20 4c 07 2f 2d fe     ra = 1868, jump @1581
      :                          @10364 [@dyn 934]
140767: 82 17 38                 a0 = u64 [sp + 0x38]
140770: 82 1a 40                 a3 = u64 [sp + 0x40]
140773: 82 12 48                 t0 = u64 [sp + 0x48]
140776: 82 1b 58                 a4 = u64 [sp + 0x58]
140779: 82 1c 70                 a5 = u64 [sp + 0x70]
140782: 82 a8                    a1 = u64 [a3]
140784: 01                       fallthrough
      :                          @10365
140785: 82 77 08                 a0 = u64 [a0 + 0x8]
140788: 97 89 03                 a2 = a1 << 0x3
140791: c8 97 07                 a0 = a0 + a2
140794: 7b 76                    u64 [a0] = s1
140796: 95 88 01                 a1 = a1 + 0x1
140799: 7b a8                    u64 [a3] = a1
140801: ac b6 07                 jump @10367 if s1 <u a4
      :                          @10366
140804: 28 ff cc 00              jump @13194
      :                          @10367
140808: c8 c2 0a                 a3 = t0 + a5
140811: 82 a8 28                 a1 = u64 [a3 + 0x28]
140814: 82 a7 18                 a0 = u64 [a3 + 0x18]
140817: ab 78 50 ff              jump @10357 if a1 != a0
      :                          @10368
140821: 95 a7 18                 a0 = a3 + 0x18
140824: 7b 1a 58                 u64 [sp + 0x58] = a3
140827: 50 20 4e 07 ec 2c fe     ra = 1870, jump @1581
      :                          @10369 [@dyn 935]
140834: 82 1a 58                 a3 = u64 [sp + 0x58]
140837: 82 1c 70                 a5 = u64 [sp + 0x70]
140840: 82 a8 28                 a1 = u64 [a3 + 0x28]
140843: 28 36 ff                 jump @10357
      :                          @10370 [@dyn 936]
140846: 95 17 90 02              a0 = sp + 0x290
140850: 33 08 06                 a1 = 0x6
140853: 50 20 52 07 73 37 fe     ra = 1874, jump @1776
      :                          @10371 [@dyn 937]
140860: 95 17 e0 01              a0 = sp + 0x1e0
140864: 95 18 90 02              a1 = sp + 0x290
140868: 33 09 06                 a2 = 0x6
140871: 50 20 54 07 81 3e fe     ra = 1876, jump @1895
      :                          @10372 [@dyn 938]
140878: 33 0a 78 12 03           a3 = 0x31278
140883: 3a 07 78 12 03           a0 = u64 [0x31278]
140888: 97 78 0d                 a1 = a0 << 0xd
140891: d3 87 07                 a0 = a0 ^ a1
140894: 98 78 07                 a1 = a0 >> 0x7
140897: d3 87 07                 a0 = a0 ^ a1
140900: 97 78 11                 a1 = a0 << 0x11
140903: d3 78 08                 a1 = a1 ^ a0
140906: 84 77 01                 a0 = a0 & 0x1
140909: 3e 08 78 12 03           u64 [0x31278] = a1
140914: 52 07 3d                 jump @10382 if a0 != 0
      :                          @10373
140917: 82 1c f0 01              a5 = u64 [sp + 0x1f0]
140921: 52 0c 07                 jump @10375 if a5 != 0
      :                          @10374
140924: 28 5b cd 00              jump @13225
      :                          @10375
140928: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
140932: 82 b9 10                 a2 = u64 [a4 + 0x10]
140935: 56 19 01 08              jump @10377 if a2 >u 1
      :                          @10376
140939: 28 6a cd 00              jump @13253
      :                          @10377
140943: 82 b8 08                 a1 = u64 [a4 + 0x8]
140946: 46 18 01 01              u8 [a1 + 1] = 0x1
140950: 56 1c 01 08              jump @10379 if a5 >u 1
      :                          @10378
140954: 28 35 cd 00              jump @13217
      :                          @10379
140958: 82 b7 28                 a0 = u64 [a4 + 0x28]
140961: 52 07 07                 jump @10381 if a0 != 0
      :                          @10380
140964: 28 63 cd 00              jump @13269
      :                          @10381
140968: 82 b7 20                 a0 = u64 [a4 + 0x20]
140971: 46 07 01                 u8 [a0 + 0] = 0x1
140974: 01                       fallthrough
      :                          @10382
140975: 3a 07 78 12 03           a0 = u64 [0x31278]
140980: 97 78 0d                 a1 = a0 << 0xd
140983: d3 87 07                 a0 = a0 ^ a1
140986: 98 78 07                 a1 = a0 >> 0x7
140989: d3 87 07                 a0 = a0 ^ a1
140992: 97 78 11                 a1 = a0 << 0x11
140995: d3 78 08                 a1 = a1 ^ a0
140998: 84 77 01                 a0 = a0 & 0x1
141001: 3e 08 78 12 03           u64 [0x31278] = a1
141006: 52 07 3d                 jump @10392 if a0 != 0
      :                          @10383
141009: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141013: 52 08 07                 jump @10385 if a1 != 0
      :                          @10384
141016: 28 f6 cc 00              jump @13216
      :                          @10385
141020: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
141024: 82 79 10                 a2 = u64 [a0 + 0x10]
141027: 55 19 03 08              jump @10387 if a2 >=u 3
      :                          @10386
141031: 28 29 cd 00              jump @13278
      :                          @10387
141035: 82 79 08                 a2 = u64 [a0 + 0x8]
141038: 46 19 02 01              u8 [a2 + 2] = 0x1
141042: 55 18 03 08              jump @10389 if a1 >=u 3
      :                          @10388
141046: 28 f3 cc 00              jump @13243
      :                          @10389
141050: 82 78 40                 a1 = u64 [a0 + 0x40]
141053: 52 08 07                 jump @10391 if a1 != 0
      :                          @10390
141056: 28 ce cc 00              jump @13216
      :                          @10391
141060: 82 77 38                 a0 = u64 [a0 + 0x38]
141063: 46 07 01                 u8 [a0 + 0] = 0x1
141066: 01                       fallthrough
      :                          @10392
141067: 3a 08 78 12 03           a1 = u64 [0x31278]
141072: 97 89 0d                 a2 = a1 << 0xd
141075: d3 98 08                 a1 = a1 ^ a2
141078: 98 89 07                 a2 = a1 >> 0x7
141081: d3 98 08                 a1 = a1 ^ a2
141084: 97 89 11                 a2 = a1 << 0x11
141087: d3 89 09                 a2 = a2 ^ a1
141090: 84 88 01                 a1 = a1 & 0x1
141093: 3e 09 78 12 03           u64 [0x31278] = a2
141098: 52 08 3f                 jump @10402 if a1 != 0
      :                          @10393
141101: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141105: 52 08 07                 jump @10395 if a1 != 0
      :                          @10394
141108: 28 9a cc 00              jump @13216
      :                          @10395
141112: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
141116: 82 a9 10                 a2 = u64 [a3 + 0x10]
141119: 55 19 04 08              jump @10397 if a2 >=u 4
      :                          @10396
141123: 28 c6 cc 00              jump @13271
      :                          @10397
141127: 82 a9 08                 a2 = u64 [a3 + 0x8]
141130: 33 0c 01                 a5 = 0x1
141133: 78 9c 03                 u8 [a2 + 0x3] = a5
141136: 55 18 04 08              jump @10399 if a1 >=u 4
      :                          @10398
141140: 28 96 cc 00              jump @13244
      :                          @10399
141144: 82 a8 58                 a1 = u64 [a3 + 0x58]
141147: 52 08 07                 jump @10401 if a1 != 0
      :                          @10400
141150: 28 70 cc 00              jump @13216
      :                          @10401
141154: 82 a8 50                 a1 = u64 [a3 + 0x50]
141157: 46 08 01                 u8 [a1 + 0] = 0x1
141160: 01                       fallthrough
      :                          @10402
141161: 3a 08 78 12 03           a1 = u64 [0x31278]
141166: 97 89 0d                 a2 = a1 << 0xd
141169: d3 98 08                 a1 = a1 ^ a2
141172: 98 89 07                 a2 = a1 >> 0x7
141175: d3 98 08                 a1 = a1 ^ a2
141178: 97 89 11                 a2 = a1 << 0x11
141181: d3 89 09                 a2 = a2 ^ a1
141184: 84 88 01                 a1 = a1 & 0x1
141187: 3e 09 78 12 03           u64 [0x31278] = a2
141192: 52 08 3d                 jump @10412 if a1 != 0
      :                          @10403
141195: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141199: 52 08 07                 jump @10405 if a1 != 0
      :                          @10404
141202: 28 3c cc 00              jump @13216
      :                          @10405
141206: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
141210: 82 79 10                 a2 = u64 [a0 + 0x10]
141213: 55 19 05 08              jump @10407 if a2 >=u 5
      :                          @10406
141217: 28 63 cc 00              jump @13266
      :                          @10407
141221: 82 79 08                 a2 = u64 [a0 + 0x8]
141224: 46 19 04 01              u8 [a2 + 4] = 0x1
141228: 55 18 05 08              jump @10409 if a1 >=u 5
      :                          @10408
141232: 28 38 cc 00              jump @13242
      :                          @10409
141236: 82 78 70                 a1 = u64 [a0 + 0x70]
141239: 52 08 07                 jump @10411 if a1 != 0
      :                          @10410
141242: 28 14 cc 00              jump @13216
      :                          @10411
141246: 82 77 68                 a0 = u64 [a0 + 0x68]
141249: 46 07 01                 u8 [a0 + 0] = 0x1
141252: 01                       fallthrough
      :                          @10412
141253: 3a 08 78 12 03           a1 = u64 [0x31278]
141258: 97 89 0d                 a2 = a1 << 0xd
141261: d3 98 08                 a1 = a1 ^ a2
141264: 98 89 07                 a2 = a1 >> 0x7
141267: d3 98 08                 a1 = a1 ^ a2
141270: 97 89 11                 a2 = a1 << 0x11
141273: d3 89 09                 a2 = a2 ^ a1
141276: 84 88 01                 a1 = a1 & 0x1
141279: 3e 09 78 12 03           u64 [0x31278] = a2
141284: 52 08 41                 jump @10422 if a1 != 0
      :                          @10413
141287: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141291: 52 08 07                 jump @10415 if a1 != 0
      :                          @10414
141294: 28 e0 cb 00              jump @13216
      :                          @10415
141298: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
141302: 82 a9 10                 a2 = u64 [a3 + 0x10]
141305: 55 19 06 08              jump @10417 if a2 >=u 6
      :                          @10416
141309: 28 ff cb 00              jump @13260
      :                          @10417
141313: 82 a9 08                 a2 = u64 [a3 + 0x8]
141316: 33 0c 01                 a5 = 0x1
141319: 78 9c 05                 u8 [a2 + 0x5] = a5
141322: 55 18 06 08              jump @10419 if a1 >=u 6
      :                          @10418
141326: 28 ef cb 00              jump @13261
      :                          @10419
141330: 82 a8 88 00              a1 = u64 [a3 + 0x88]
141334: 52 08 07                 jump @10421 if a1 != 0
      :                          @10420
141337: 28 b5 cb 00              jump @13216
      :                          @10421
141341: 82 a8 80 00              a1 = u64 [a3 + 0x80]
141345: 46 08 01                 u8 [a1 + 0] = 0x1
141348: 01                       fallthrough
      :                          @10422
141349: 3a 08 78 12 03           a1 = u64 [0x31278]
141354: 97 89 0d                 a2 = a1 << 0xd
141357: d3 98 08                 a1 = a1 ^ a2
141360: 98 89 07                 a2 = a1 >> 0x7
141363: d3 98 08                 a1 = a1 ^ a2
141366: 97 89 11                 a2 = a1 << 0x11
141369: d3 89 09                 a2 = a2 ^ a1
141372: 84 88 01                 a1 = a1 & 0x1
141375: 3e 09 78 12 03           u64 [0x31278] = a2
141380: 52 08 40                 jump @10432 if a1 != 0
      :                          @10423
141383: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141387: 55 18 02 08              jump @10425 if a1 >=u 2
      :                          @10424
141391: 28 9c cb 00              jump @13245
      :                          @10425
141395: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
141399: 82 a9 28                 a2 = u64 [a3 + 0x28]
141402: 55 19 03 08              jump @10427 if a2 >=u 3
      :                          @10426
141406: 28 97 cb 00              jump @13253
      :                          @10427
141410: 82 a9 20                 a2 = u64 [a3 + 0x20]
141413: 46 19 02 01              u8 [a2 + 2] = 0x1
141417: 55 18 03 08              jump @10429 if a1 >=u 3
      :                          @10428
141421: 28 7f cb 00              jump @13246
      :                          @10429
141425: 82 a8 40                 a1 = u64 [a3 + 0x40]
141428: 55 18 02 08              jump @10431 if a1 >=u 2
      :                          @10430
141432: 28 57 cb 00              jump @13217
      :                          @10431
141436: 82 a7 38                 a0 = u64 [a3 + 0x38]
141439: 46 17 01 01              u8 [a0 + 1] = 0x1
141443: 01                       fallthrough
      :                          @10432
141444: 3a 07 78 12 03           a0 = u64 [0x31278]
141449: 97 78 0d                 a1 = a0 << 0xd
141452: d3 87 07                 a0 = a0 ^ a1
141455: 98 78 07                 a1 = a0 >> 0x7
141458: d3 87 07                 a0 = a0 ^ a1
141461: 97 78 11                 a1 = a0 << 0x11
141464: d3 78 08                 a1 = a1 ^ a0
141467: 84 77 01                 a0 = a0 & 0x1
141470: 3e 08 78 12 03           u64 [0x31278] = a1
141475: 52 07 42                 jump @10442 if a0 != 0
      :                          @10433
141478: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141482: 55 18 02 08              jump @10435 if a1 >=u 2
      :                          @10434
141486: 28 3d cb 00              jump @13245
      :                          @10435
141490: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
141494: 82 b9 28                 a2 = u64 [a4 + 0x28]
141497: 33 0c 04                 a5 = 0x4
141500: ae c9 07                 jump @10437 if a2 >=u a5
      :                          @10436
141503: 28 4a cb 00              jump @13271
      :                          @10437
141507: 82 b9 20                 a2 = u64 [a4 + 0x20]
141510: 46 19 03 01              u8 [a2 + 3] = 0x1
141514: 55 18 04 08              jump @10439 if a1 >=u 4
      :                          @10438
141518: 28 1c cb 00              jump @13244
      :                          @10439
141522: 82 b8 58                 a1 = u64 [a4 + 0x58]
141525: 55 18 02 08              jump @10441 if a1 >=u 2
      :                          @10440
141529: 28 f6 ca 00              jump @13217
      :                          @10441
141533: 82 b7 50                 a0 = u64 [a4 + 0x50]
141536: 46 17 01 01              u8 [a0 + 1] = 0x1
141540: 01                       fallthrough
      :                          @10442
141541: 3a 07 78 12 03           a0 = u64 [0x31278]
141546: 97 78 0d                 a1 = a0 << 0xd
141549: d3 87 07                 a0 = a0 ^ a1
141552: 98 78 07                 a1 = a0 >> 0x7
141555: d3 87 07                 a0 = a0 ^ a1
141558: 97 78 11                 a1 = a0 << 0x11
141561: d3 78 08                 a1 = a1 ^ a0
141564: 84 77 01                 a0 = a0 & 0x1
141567: 3e 08 78 12 03           u64 [0x31278] = a1
141572: 52 07 40                 jump @10452 if a0 != 0
      :                          @10443
141575: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141579: 55 18 02 08              jump @10445 if a1 >=u 2
      :                          @10444
141583: 28 dc ca 00              jump @13245
      :                          @10445
141587: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
141591: 82 a9 28                 a2 = u64 [a3 + 0x28]
141594: 55 19 05 08              jump @10447 if a2 >=u 5
      :                          @10446
141598: 28 e6 ca 00              jump @13266
      :                          @10447
141602: 82 a9 20                 a2 = u64 [a3 + 0x20]
141605: 46 19 04 01              u8 [a2 + 4] = 0x1
141609: 55 18 05 08              jump @10449 if a1 >=u 5
      :                          @10448
141613: 28 bb ca 00              jump @13242
      :                          @10449
141617: 82 a8 70                 a1 = u64 [a3 + 0x70]
141620: 55 18 02 08              jump @10451 if a1 >=u 2
      :                          @10450
141624: 28 97 ca 00              jump @13217
      :                          @10451
141628: 82 a7 68                 a0 = u64 [a3 + 0x68]
141631: 46 17 01 01              u8 [a0 + 1] = 0x1
141635: 01                       fallthrough
      :                          @10452
141636: 3a 07 78 12 03           a0 = u64 [0x31278]
141641: 97 78 0d                 a1 = a0 << 0xd
141644: d3 87 07                 a0 = a0 ^ a1
141647: 98 78 07                 a1 = a0 >> 0x7
141650: d3 87 07                 a0 = a0 ^ a1
141653: 97 78 11                 a1 = a0 << 0x11
141656: d3 78 08                 a1 = a1 ^ a0
141659: 84 77 01                 a0 = a0 & 0x1
141662: 3e 08 78 12 03           u64 [0x31278] = a1
141667: 52 07 44                 jump @10462 if a0 != 0
      :                          @10453
141670: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141674: 55 18 02 08              jump @10455 if a1 >=u 2
      :                          @10454
141678: 28 7d ca 00              jump @13245
      :                          @10455
141682: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
141686: 82 b9 28                 a2 = u64 [a4 + 0x28]
141689: 33 0c 06                 a5 = 0x6
141692: ae c9 07                 jump @10457 if a2 >=u a5
      :                          @10456
141695: 28 7d ca 00              jump @13260
      :                          @10457
141699: 82 b9 20                 a2 = u64 [a4 + 0x20]
141702: 46 19 05 01              u8 [a2 + 5] = 0x1
141706: 55 18 06 08              jump @10459 if a1 >=u 6
      :                          @10458
141710: 28 6f ca 00              jump @13261
      :                          @10459
141714: 82 b8 88 00              a1 = u64 [a4 + 0x88]
141718: 55 18 02 08              jump @10461 if a1 >=u 2
      :                          @10460
141722: 28 35 ca 00              jump @13217
      :                          @10461
141726: 82 b7 80 00              a0 = u64 [a4 + 0x80]
141730: 46 17 01 01              u8 [a0 + 1] = 0x1
141734: 01                       fallthrough
      :                          @10462
141735: 3a 07 78 12 03           a0 = u64 [0x31278]
141740: 97 78 0d                 a1 = a0 << 0xd
141743: d3 87 07                 a0 = a0 ^ a1
141746: 98 78 07                 a1 = a0 >> 0x7
141749: d3 87 07                 a0 = a0 ^ a1
141752: 97 78 11                 a1 = a0 << 0x11
141755: d3 78 08                 a1 = a1 ^ a0
141758: 84 77 01                 a0 = a0 & 0x1
141761: 3e 08 78 12 03           u64 [0x31278] = a1
141766: 52 07 40                 jump @10472 if a0 != 0
      :                          @10463
141769: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141773: 55 18 03 08              jump @10465 if a1 >=u 3
      :                          @10464
141777: 28 18 ca 00              jump @13243
      :                          @10465
141781: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
141785: 82 a9 40                 a2 = u64 [a3 + 0x40]
141788: 55 19 04 08              jump @10467 if a2 >=u 4
      :                          @10466
141792: 28 15 ca 00              jump @13253
      :                          @10467
141796: 82 a7 38                 a0 = u64 [a3 + 0x38]
141799: 46 17 03 01              u8 [a0 + 3] = 0x1
141803: 55 18 04 08              jump @10469 if a1 >=u 4
      :                          @10468
141807: 28 01 ca 00              jump @13250
      :                          @10469
141811: 82 a8 58                 a1 = u64 [a3 + 0x58]
141814: 55 18 03 08              jump @10471 if a1 >=u 3
      :                          @10470
141818: 28 ef c9 00              jump @13243
      :                          @10471
141822: 82 a7 50                 a0 = u64 [a3 + 0x50]
141825: 46 17 02 01              u8 [a0 + 2] = 0x1
141829: 01                       fallthrough
      :                          @10472
141830: 3a 08 78 12 03           a1 = u64 [0x31278]
141835: 97 89 0d                 a2 = a1 << 0xd
141838: d3 98 08                 a1 = a1 ^ a2
141841: 98 89 07                 a2 = a1 >> 0x7
141844: d3 98 08                 a1 = a1 ^ a2
141847: 97 89 11                 a2 = a1 << 0x11
141850: d3 89 09                 a2 = a2 ^ a1
141853: 84 88 01                 a1 = a1 & 0x1
141856: 3e 09 78 12 03           u64 [0x31278] = a2
141861: 52 08 42                 jump @10482 if a1 != 0
      :                          @10473
141864: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141868: 55 18 03 08              jump @10475 if a1 >=u 3
      :                          @10474
141872: 28 b9 c9 00              jump @13243
      :                          @10475
141876: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
141880: 82 a9 40                 a2 = u64 [a3 + 0x40]
141883: 55 19 05 08              jump @10477 if a2 >=u 5
      :                          @10476
141887: 28 c5 c9 00              jump @13266
      :                          @10477
141891: 82 a9 38                 a2 = u64 [a3 + 0x38]
141894: 33 0c 01                 a5 = 0x1
141897: 78 9c 04                 u8 [a2 + 0x4] = a5
141900: 55 18 05 08              jump @10479 if a1 >=u 5
      :                          @10478
141904: 28 98 c9 00              jump @13242
      :                          @10479
141908: 82 a8 70                 a1 = u64 [a3 + 0x70]
141911: 55 18 03 08              jump @10481 if a1 >=u 3
      :                          @10480
141915: 28 8e c9 00              jump @13243
      :                          @10481
141919: 82 a8 68                 a1 = u64 [a3 + 0x68]
141922: 46 18 02 01              u8 [a1 + 2] = 0x1
141926: 01                       fallthrough
      :                          @10482
141927: 3a 08 78 12 03           a1 = u64 [0x31278]
141932: 97 89 0d                 a2 = a1 << 0xd
141935: d3 98 08                 a1 = a1 ^ a2
141938: 98 89 07                 a2 = a1 >> 0x7
141941: d3 98 08                 a1 = a1 ^ a2
141944: 97 89 11                 a2 = a1 << 0x11
141947: d3 89 09                 a2 = a2 ^ a1
141950: 84 88 01                 a1 = a1 & 0x1
141953: 3e 09 78 12 03           u64 [0x31278] = a2
141958: 52 08 42                 jump @10492 if a1 != 0
      :                          @10483
141961: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141965: 55 18 03 08              jump @10485 if a1 >=u 3
      :                          @10484
141969: 28 58 c9 00              jump @13243
      :                          @10485
141973: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
141977: 82 79 40                 a2 = u64 [a0 + 0x40]
141980: 55 19 06 08              jump @10487 if a2 >=u 6
      :                          @10486
141984: 28 5c c9 00              jump @13260
      :                          @10487
141988: 82 79 38                 a2 = u64 [a0 + 0x38]
141991: 46 19 05 01              u8 [a2 + 5] = 0x1
141995: 55 18 06 08              jump @10489 if a1 >=u 6
      :                          @10488
141999: 28 4e c9 00              jump @13261
      :                          @10489
142003: 82 78 88 00              a1 = u64 [a0 + 0x88]
142007: 55 18 03 08              jump @10491 if a1 >=u 3
      :                          @10490
142011: 28 2e c9 00              jump @13243
      :                          @10491
142015: 82 77 80 00              a0 = u64 [a0 + 0x80]
142019: 46 17 02 01              u8 [a0 + 2] = 0x1
142023: 01                       fallthrough
      :                          @10492
142024: 3a 07 78 12 03           a0 = u64 [0x31278]
142029: 97 78 0d                 a1 = a0 << 0xd
142032: d3 87 07                 a0 = a0 ^ a1
142035: 98 78 07                 a1 = a0 >> 0x7
142038: d3 87 07                 a0 = a0 ^ a1
142041: 97 78 11                 a1 = a0 << 0x11
142044: d3 78 08                 a1 = a1 ^ a0
142047: 84 77 01                 a0 = a0 & 0x1
142050: 3e 08 78 12 03           u64 [0x31278] = a1
142055: 52 07 42                 jump @10502 if a0 != 0
      :                          @10493
142058: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
142062: 55 18 04 08              jump @10495 if a1 >=u 4
      :                          @10494
142066: 28 f8 c8 00              jump @13244
      :                          @10495
142070: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
142074: 82 b9 58                 a2 = u64 [a4 + 0x58]
142077: 33 0c 05                 a5 = 0x5
142080: ae c9 07                 jump @10497 if a2 >=u a5
      :                          @10496
142083: 28 f2 c8 00              jump @13253
      :                          @10497
142087: 82 b7 50                 a0 = u64 [a4 + 0x50]
142090: 46 17 04 01              u8 [a0 + 4] = 0x1
142094: 55 18 05 08              jump @10499 if a1 >=u 5
      :                          @10498
142098: 28 db c8 00              jump @13247
      :                          @10499
142102: 82 b8 70                 a1 = u64 [a4 + 0x70]
142105: 55 18 04 08              jump @10501 if a1 >=u 4
      :                          @10500
142109: 28 cd c8 00              jump @13244
      :                          @10501
142113: 82 b7 68                 a0 = u64 [a4 + 0x68]
142116: 46 17 03 01              u8 [a0 + 3] = 0x1
142120: 01                       fallthrough
      :                          @10502
142121: 3a 07 78 12 03           a0 = u64 [0x31278]
142126: 97 78 0d                 a1 = a0 << 0xd
142129: d3 87 07                 a0 = a0 ^ a1
142132: 98 78 07                 a1 = a0 >> 0x7
142135: d3 87 07                 a0 = a0 ^ a1
142138: 97 78 11                 a1 = a0 << 0x11
142141: d3 78 08                 a1 = a1 ^ a0
142144: 84 77 01                 a0 = a0 & 0x1
142147: 3e 08 78 12 03           u64 [0x31278] = a1
142152: 52 07 42                 jump @10512 if a0 != 0
      :                          @10503
142155: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
142159: 55 18 04 08              jump @10505 if a1 >=u 4
      :                          @10504
142163: 28 97 c8 00              jump @13244
      :                          @10505
142167: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
142171: 82 79 58                 a2 = u64 [a0 + 0x58]
142174: 55 19 06 08              jump @10507 if a2 >=u 6
      :                          @10506
142178: 28 9a c8 00              jump @13260
      :                          @10507
142182: 82 79 50                 a2 = u64 [a0 + 0x50]
142185: 46 19 05 01              u8 [a2 + 5] = 0x1
142189: 55 18 06 08              jump @10509 if a1 >=u 6
      :                          @10508
142193: 28 8c c8 00              jump @13261
      :                          @10509
142197: 82 78 88 00              a1 = u64 [a0 + 0x88]
142201: 55 18 04 08              jump @10511 if a1 >=u 4
      :                          @10510
142205: 28 6d c8 00              jump @13244
      :                          @10511
142209: 82 77 80 00              a0 = u64 [a0 + 0x80]
142213: 46 17 03 01              u8 [a0 + 3] = 0x1
142217: 01                       fallthrough
      :                          @10512
142218: 3a 08 78 12 03           a1 = u64 [0x31278]
142223: 97 89 0d                 a2 = a1 << 0xd
142226: d3 98 08                 a1 = a1 ^ a2
142229: 98 89 07                 a2 = a1 >> 0x7
142232: d3 98 08                 a1 = a1 ^ a2
142235: 97 89 11                 a2 = a1 << 0x11
142238: d3 89 09                 a2 = a2 ^ a1
142241: 84 88 01                 a1 = a1 & 0x1
142244: 3e 09 78 12 03           u64 [0x31278] = a2
142249: 52 08 42                 jump @10522 if a1 != 0
      :                          @10513
142252: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
142256: 55 18 05 08              jump @10515 if a1 >=u 5
      :                          @10514
142260: 28 34 c8 00              jump @13242
      :                          @10515
142264: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
142268: 82 a9 70                 a2 = u64 [a3 + 0x70]
142271: 55 19 06 08              jump @10517 if a2 >=u 6
      :                          @10516
142275: 28 32 c8 00              jump @13253
      :                          @10517
142279: 82 a7 68                 a0 = u64 [a3 + 0x68]
142282: 46 17 05 01              u8 [a0 + 5] = 0x1
142286: 55 18 06 08              jump @10519 if a1 >=u 6
      :                          @10518
142290: 28 26 c8 00              jump @13256
      :                          @10519
142294: 82 a8 88 00              a1 = u64 [a3 + 0x88]
142298: 55 18 05 08              jump @10521 if a1 >=u 5
      :                          @10520
142302: 28 0a c8 00              jump @13242
      :                          @10521
142306: 82 a7 80 00              a0 = u64 [a3 + 0x80]
142310: 46 17 04 01              u8 [a0 + 4] = 0x1
142314: 01                       fallthrough
      :                          @10522
142315: 49 21 08 02              u64 [sp + 520] = 0
142319: 49 21 10 02 08           u64 [sp + 528] = 0x8
142324: 49 21 18 02              u64 [sp + 536] = 0
142328: 49 21 f8 00              u64 [sp + 248] = 0
142332: 49 21 00 01 08           u64 [sp + 256] = 0x8
142337: 49 21 08 01              u64 [sp + 264] = 0
142341: 95 17 38 02              a0 = sp + 0x238
142345: 33 08 06                 a1 = 0x6
142348: 50 20 56 07 53 4e fe     ra = 1878, jump @2226
      :                          @10523 [@dyn 939]
142355: 82 17 08 01              a0 = u64 [sp + 0x108]
142359: 82 18 00 01              a1 = u64 [sp + 0x100]
142363: 82 19 f8 00              a2 = u64 [sp + 0xf8]
142367: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
142371: 7b 18 98 02              u64 [sp + 0x298] = a1
142375: 7b 19 90 02              u64 [sp + 0x290] = a2
142379: 95 17 90 02              a0 = sp + 0x290
142383: 95 18 38 02              a1 = sp + 0x238
142387: 95 19 f8 00              a2 = sp + 0xf8
142391: 95 1a e0 01              a3 = sp + 0x1e0
142395: 95 1b 08 02              a4 = sp + 0x208
142399: 50 20 58 07 1f 2a ff     ra = 1880, jump @6976
      :                          @10524 [@dyn 940]
142406: 82 17 18 02              a0 = u64 [sp + 0x218]
142410: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
142414: 95 17 c8 01              a0 = sp + 0x1c8
142418: 7b 17 20 01              u64 [sp + 0x120] = a0
142422: 33 07 28 0c              a0 = 0xc28
142426: 7b 17 28 01              u64 [sp + 0x128] = a0
142430: 33 07 88 15 01           a0 = 0x11588
142435: 7b 17 90 02              u64 [sp + 0x290] = a0
142439: 49 21 98 02 02           u64 [sp + 664] = 0x2
142444: 49 21 b0 02              u64 [sp + 688] = 0
142448: 95 17 20 01              a0 = sp + 0x120
142452: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
142456: 49 21 a8 02 01           u64 [sp + 680] = 0x1
142461: 95 17 38 02              a0 = sp + 0x238
142465: 95 18 90 02              a1 = sp + 0x290
142469: 50 20 5a 07 ba 22 fe     ra = 1882, jump @1491
      :                          @10525 [@dyn 941]
142476: 82 16 40 02              s1 = u64 [sp + 0x240]
142480: 82 1b 48 02              a4 = u64 [sp + 0x248]
142484: 82 17 38 02              a0 = u64 [sp + 0x238]
142488: 7b 17 70                 u64 [sp + 0x70] = a0
142491: 33 07 02                 a0 = 0x2
142494: 33 08                    a1 = 0
142496: 33 09                    a2 = 0
142498: 64 6a                    a3 = s1
142500: 33 00 5c 07              ra = 0x75c
142504: 0a 64                    ecalli 100 // 'log'
142506: 01                       fallthrough
      :                          @10526 [@dyn 942]
142507: 82 1c 70                 a5 = u64 [sp + 0x70]
142510: 82 17 68                 a0 = u64 [sp + 0x68]
142513: c8 c7 07                 a0 = a0 + a5
142516: 33 08 00 00 ff           a1 = 0xffffffffffff0000
142521: ac 87 2f                 jump @10532 if a0 <u a1
      :                          @10527
142524: 33 07 c0 22 03           a0 = 0x322c0
142529: 95 77 00 00 01           a0 = a0 + 0x10000
142534: 01                       fallthrough
      :                          @10528
142535: 82 78                    a1 = u64 [a0]
142537: c9 87 09                 a2 = a0 - a1
142540: ab 69 1c                 jump @10532 if a2 != s1
      :                          @10529
142543: c9 c8 09                 a2 = a1 - a5
142546: 01                       fallthrough
      :                          @10530
142547: 82 7a                    a3 = u64 [a0]
142549: ab 8a f2                 jump @10528 if a3 != a1
      :                          @10531
142552: 7b 79                    u64 [a0] = a2
142554: 33 0b                    a4 = 0
142556: 95 17 08 02              a0 = sp + 0x208
142560: 33 00 5e 07              ra = 0x75e
142564: 28 75 df fd              jump @229
      :                          @10532
142568: 95 17 08 02              a0 = sp + 0x208
142572: 50 20 5e 07 6d df fd     ra = 1886, jump @229
      :                          @10533 [@dyn 943]
142579: 95 17 e0 01              a0 = sp + 0x1e0
142583: 33 00 7c 0b              ra = 0xb7c
142587: 28 c0 de fd              jump @209
      :                          @10534 [@dyn 944]
142591: 3a 06 60 11 03           s1 = u64 [0x31160]
142596: 95 17 90 02              a0 = sp + 0x290
142600: 33 08 0a                 a1 = 0xa
142603: 50 20 62 07 9d 30 fe     ra = 1890, jump @1776
      :                          @10535 [@dyn 945]
142610: 95 17 e0 01              a0 = sp + 0x1e0
142614: 95 18 90 02              a1 = sp + 0x290
142618: 33 09 0a                 a2 = 0xa
142621: 50 20 64 07 ab 37 fe     ra = 1892, jump @1895
      :                          @10536 [@dyn 946]
142628: 33 03 0a                 t1 = 0xa
142631: 64 6c                    a5 = s1
142633: 49 11 70                 u64 [sp + 112] = 0
142636: 33 07                    a0 = 0
142638: 33 06 78 12 03           s1 = 0x31278
142643: 14 0b ab aa aa aa aa aa aa aa a4 = 0xaaaaaaaaaaaaaaab
142653: 14 02 55 55 55 55 55 55 55 55 t0 = 0x5555555555555555
142663: 49 11 60 01              u64 [sp + 96] = 0x1
142667: 28 1e                    jump @10539
      :                          @10537
142669: 95 77 01                 a0 = a0 + 0x1
142672: 82 18 60                 a1 = u64 [sp + 0x60]
142675: 95 88 01                 a1 = a1 + 0x1
142678: 7b 18 60                 u64 [sp + 0x60] = a1
142681: 82 18 70                 a1 = u64 [sp + 0x70]
142684: 95 88 18                 a1 = a1 + 0x18
142687: 7b 18 70                 u64 [sp + 0x70] = a1
142690: ab 37 07                 jump @10539 if a0 != t1
      :                          @10538
142693: 28 38 b1 00              jump @12793
      :                          @10539
142697: 56 17 08 e4              jump @10537 if a0 >u 8
      :                          @10540
142701: 82 14 70                 t2 = u64 [sp + 0x70]
142704: 82 19 60                 a2 = u64 [sp + 0x60]
142707: 28 1d                    jump @10543
      :                          @10541
142709: 82 08 20                 a1 = u64 [ra + 0x20]
142712: c8 78 08                 a1 = a1 + a0
142715: 46 08 01                 u8 [a1 + 0] = 0x1
142718: 33 03 0a                 t1 = 0xa
142721: 33 06 78 12 03           s1 = 0x31278
142726: 01                       fallthrough
      :                          @10542
142727: 95 99 01                 a2 = a2 + 0x1
142730: 95 44 18                 t2 = t2 + 0x18
142733: aa 39 c0                 jump @10537 if a2 == t1
      :                          @10543
142736: 3a 08 78 12 03           a1 = u64 [0x31278]
142741: 97 8a 0d                 a3 = a1 << 0xd
142744: d3 a8 08                 a1 = a1 ^ a3
142747: 98 8a 07                 a3 = a1 >> 0x7
142750: d3 a8 08                 a1 = a1 ^ a3
142753: 97 8a 11                 a3 = a1 << 0x11
142756: d3 a8 08                 a1 = a1 ^ a3
142759: ca bc 0a                 a3 = a5 * a4
142762: ca a8 0a                 a3 = a1 * a3
142765: 3e 08 78 12 03           u64 [0x31278] = a1
142770: ac a2 d5                 jump @10542 if t0 <u a3
      :                          @10544
142773: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
142777: ac 87 07                 jump @10546 if a0 <u a1
      :                          @10545
142780: 28 13 c6 00              jump @13217
      :                          @10546
142784: 82 10 e8 01              ra = u64 [sp + 0x1e8]
142788: 96 73 18                 t1 = a0 * 0x18
142791: c8 03 03                 t1 = t1 + ra
142794: 82 3a 10                 a3 = u64 [t1 + 0x10]
142797: ac a9 07                 jump @10548 if a2 <u a3
      :                          @10547
142800: 28 b8 b1 00              jump @12814
      :                          @10548
142804: 82 3a 08                 a3 = u64 [t1 + 0x8]
142807: c8 9a 0a                 a3 = a3 + a2
142810: 46 0a 01                 u8 [a3 + 0] = 0x1
142813: ac 89 07                 jump @10550 if a2 <u a1
      :                          @10549
142816: 28 22 c6 00              jump @13264
      :                          @10550
142820: c8 40 00                 ra = ra + t2
142823: 82 08 28                 a1 = u64 [ra + 0x28]
142826: ac 87 8b                 jump @10541 if a0 <u a1
      :                          @10551
142829: 28 e2 c5 00              jump @13217
      :                          @10552 [@dyn 947]
142833: 3a 02 60 11 03           t0 = u64 [0x31160]
142838: 49 21 e0 01              u64 [sp + 480] = 0
142842: 49 21 e8 01 08           u64 [sp + 488] = 0x8
142847: 49 21 f0 01              u64 [sp + 496] = 0
142851: 3a 03 b0 11 03           t1 = u64 [0x311b0]
142856: 33 06 14                 s1 = 0x14
142859: 33 0c 78 12 03           a5 = 0x31278
142864: 33 04 64                 t2 = 0x64
142867: 7b 12 58                 u64 [sp + 0x58] = t0
142870: 7b 13 48                 u64 [sp + 0x48] = t1
142873: 28 46                    jump @10555
      :                          @10553
142875: ca 29 07                 a0 = a2 * t0
142878: 98 79 02                 a2 = a0 >> 0x2
142881: d6 39 09                 a2 = a2 mulhu t1
142884: 98 99 02                 a2 = a2 >> 0x2
142887: ca 49 09                 a2 = a2 * t2
142890: c9 97 07                 a0 = a0 - a2
142893: ca 2a 09                 a2 = a3 * t0
142896: 98 9a 02                 a3 = a2 >> 0x2
142899: d6 3a 0a                 a3 = a3 mulhu t1
142902: 98 aa 02                 a3 = a3 >> 0x2
142905: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
142909: ca 4a 0a                 a3 = a3 * t2
142912: c9 a9 09                 a2 = a2 - a3
142915: 97 8a 04                 a3 = a1 << 0x4
142918: c8 ba 0a                 a3 = a3 + a4
142921: 7b a7                    u64 [a3] = a0
142923: 7b a9 08                 u64 [a3 + 0x8] = a2
142926: 95 89 01                 a2 = a1 + 0x1
142929: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
142932: 7b 19 f0 01              u64 [sp + 0x1f0] = a2
142936: 52 06 07                 jump @10555 if s1 != 0
      :                          @10554
142939: 28 d4 9f 00              jump @12475
      :                          @10555
142943: 3a 07 78 12 03           a0 = u64 [0x31278]
142948: 97 78 0d                 a1 = a0 << 0xd
142951: d3 87 07                 a0 = a0 ^ a1
142954: 98 78 07                 a1 = a0 >> 0x7
142957: d3 87 07                 a0 = a0 ^ a1
142960: 97 78 11                 a1 = a0 << 0x11
142963: d3 78 09                 a2 = a1 ^ a0
142966: 3e 09 78 12 03           u64 [0x31278] = a2
142971: 3a 07 78 12 03           a0 = u64 [0x31278]
142976: 97 78 0d                 a1 = a0 << 0xd
142979: d3 87 07                 a0 = a0 ^ a1
142982: 98 78 07                 a1 = a0 >> 0x7
142985: d3 87 07                 a0 = a0 ^ a1
142988: 97 78 11                 a1 = a0 << 0x11
142991: d3 78 0a                 a3 = a1 ^ a0
142994: 3e 0a 78 12 03           u64 [0x31278] = a3
142999: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
143003: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
143007: ab 78 7c ff              jump @10553 if a1 != a0
      :                          @10556
143011: 95 17 e0 01              a0 = sp + 0x1e0
143015: 7b 19 70                 u64 [sp + 0x70] = a2
143018: 7b 1a 60                 u64 [sp + 0x60] = a3
143021: 50 20 68 07 53 25 fe     ra = 1896, jump @1605
      :                          @10557 [@dyn 948]
143028: 82 1a 60                 a3 = u64 [sp + 0x60]
143031: 82 19 70                 a2 = u64 [sp + 0x70]
143034: 33 04 64                 t2 = 0x64
143037: 33 0c 78 12 03           a5 = 0x31278
143042: 82 13 48                 t1 = u64 [sp + 0x48]
143045: 82 12 58                 t0 = u64 [sp + 0x58]
143048: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
143052: 28 4f ff                 jump @10553
      :                          @10558 [@dyn 949]
143055: 3a 02 60 11 03           t0 = u64 [0x31160]
143060: 49 21 08 02              u64 [sp + 520] = 0
143064: 49 21 10 02 08           u64 [sp + 528] = 0x8
143069: 49 21 18 02              u64 [sp + 536] = 0
143073: 3a 03 b0 11 03           t1 = u64 [0x311b0]
143078: 33 06 14                 s1 = 0x14
143081: 33 0c 78 12 03           a5 = 0x31278
143086: 33 04 64                 t2 = 0x64
143089: 7b 12 58                 u64 [sp + 0x58] = t0
143092: 7b 13 48                 u64 [sp + 0x48] = t1
143095: 28 46                    jump @10561
      :                          @10559
143097: ca 29 07                 a0 = a2 * t0
143100: 98 79 02                 a2 = a0 >> 0x2
143103: d6 39 09                 a2 = a2 mulhu t1
143106: 98 99 02                 a2 = a2 >> 0x2
143109: ca 49 09                 a2 = a2 * t2
143112: c9 97 0b                 a4 = a0 - a2
143115: ca 2a 09                 a2 = a3 * t0
143118: 98 9a 02                 a3 = a2 >> 0x2
143121: d6 3a 0a                 a3 = a3 mulhu t1
143124: 98 aa 02                 a3 = a3 >> 0x2
143127: 82 17 10 02              a0 = u64 [sp + 0x210]
143131: ca 4a 0a                 a3 = a3 * t2
143134: c9 a9 09                 a2 = a2 - a3
143137: 97 8a 04                 a3 = a1 << 0x4
143140: c8 7a 0a                 a3 = a3 + a0
143143: 7b ab                    u64 [a3] = a4
143145: 7b a9 08                 u64 [a3 + 0x8] = a2
143148: 95 88 01                 a1 = a1 + 0x1
143151: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
143154: 7b 18 18 02              u64 [sp + 0x218] = a1
143158: 52 06 07                 jump @10561 if s1 != 0
      :                          @10560
143161: 28 03 a0 00              jump @12503
      :                          @10561
143165: 3a 07 78 12 03           a0 = u64 [0x31278]
143170: 97 78 0d                 a1 = a0 << 0xd
143173: d3 87 07                 a0 = a0 ^ a1
143176: 98 78 07                 a1 = a0 >> 0x7
143179: d3 87 07                 a0 = a0 ^ a1
143182: 97 78 11                 a1 = a0 << 0x11
143185: d3 78 09                 a2 = a1 ^ a0
143188: 3e 09 78 12 03           u64 [0x31278] = a2
143193: 3a 07 78 12 03           a0 = u64 [0x31278]
143198: 97 78 0d                 a1 = a0 << 0xd
143201: d3 87 07                 a0 = a0 ^ a1
143204: 98 78 07                 a1 = a0 >> 0x7
143207: d3 87 07                 a0 = a0 ^ a1
143210: 97 78 11                 a1 = a0 << 0x11
143213: d3 78 0a                 a3 = a1 ^ a0
143216: 3e 0a 78 12 03           u64 [0x31278] = a3
143221: 82 18 18 02              a1 = u64 [sp + 0x218]
143225: 82 17 08 02              a0 = u64 [sp + 0x208]
143229: ab 78 7c ff              jump @10559 if a1 != a0
      :                          @10562
143233: 95 17 08 02              a0 = sp + 0x208
143237: 7b 19 70                 u64 [sp + 0x70] = a2
143240: 7b 1a 60                 u64 [sp + 0x60] = a3
143243: 50 20 6c 07 75 24 fe     ra = 1900, jump @1605
      :                          @10563 [@dyn 950]
143250: 82 1a 60                 a3 = u64 [sp + 0x60]
143253: 82 19 70                 a2 = u64 [sp + 0x70]
143256: 33 04 64                 t2 = 0x64
143259: 33 0c 78 12 03           a5 = 0x31278
143264: 82 13 48                 t1 = u64 [sp + 0x48]
143267: 82 12 58                 t0 = u64 [sp + 0x58]
143270: 82 18 18 02              a1 = u64 [sp + 0x218]
143274: 28 4f ff                 jump @10559
      :                          @10564 [@dyn 951]
143277: 3a 02 60 11 03           t0 = u64 [0x31160]
143282: 49 21 20 01              u64 [sp + 288] = 0
143286: 49 21 28 01 08           u64 [sp + 296] = 0x8
143291: 49 21 30 01              u64 [sp + 304] = 0
143295: 3a 03 b0 11 03           t1 = u64 [0x311b0]
143300: 33 06 0a                 s1 = 0xa
143303: 33 0c 78 12 03           a5 = 0x31278
143308: 33 04 64                 t2 = 0x64
143311: 7b 12 58                 u64 [sp + 0x58] = t0
143314: 7b 13 48                 u64 [sp + 0x48] = t1
143317: 28 46                    jump @10567
      :                          @10565
143319: ca 29 07                 a0 = a2 * t0
143322: 98 79 02                 a2 = a0 >> 0x2
143325: d6 39 09                 a2 = a2 mulhu t1
143328: 98 99 02                 a2 = a2 >> 0x2
143331: ca 49 09                 a2 = a2 * t2
143334: c9 97 07                 a0 = a0 - a2
143337: ca 2a 09                 a2 = a3 * t0
143340: 98 9a 02                 a3 = a2 >> 0x2
143343: d6 3a 0a                 a3 = a3 mulhu t1
143346: 98 aa 02                 a3 = a3 >> 0x2
143349: 82 1b 28 01              a4 = u64 [sp + 0x128]
143353: ca 4a 0a                 a3 = a3 * t2
143356: c9 a9 09                 a2 = a2 - a3
143359: 97 8a 04                 a3 = a1 << 0x4
143362: c8 ba 0a                 a3 = a3 + a4
143365: 7b a7                    u64 [a3] = a0
143367: 7b a9 08                 u64 [a3 + 0x8] = a2
143370: 95 89 01                 a2 = a1 + 0x1
143373: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
143376: 7b 19 30 01              u64 [sp + 0x130] = a2
143380: 52 06 07                 jump @10567 if s1 != 0
      :                          @10566
143383: 28 16 a0 00              jump @12524
      :                          @10567
143387: 3a 07 78 12 03           a0 = u64 [0x31278]
143392: 97 78 0d                 a1 = a0 << 0xd
143395: d3 87 07                 a0 = a0 ^ a1
143398: 98 78 07                 a1 = a0 >> 0x7
143401: d3 87 07                 a0 = a0 ^ a1
143404: 97 78 11                 a1 = a0 << 0x11
143407: d3 78 09                 a2 = a1 ^ a0
143410: 3e 09 78 12 03           u64 [0x31278] = a2
143415: 3a 07 78 12 03           a0 = u64 [0x31278]
143420: 97 78 0d                 a1 = a0 << 0xd
143423: d3 87 07                 a0 = a0 ^ a1
143426: 98 78 07                 a1 = a0 >> 0x7
143429: d3 87 07                 a0 = a0 ^ a1
143432: 97 78 11                 a1 = a0 << 0x11
143435: d3 78 0a                 a3 = a1 ^ a0
143438: 3e 0a 78 12 03           u64 [0x31278] = a3
143443: 82 18 30 01              a1 = u64 [sp + 0x130]
143447: 82 17 20 01              a0 = u64 [sp + 0x120]
143451: ab 78 7c ff              jump @10565 if a1 != a0
      :                          @10568
143455: 95 17 20 01              a0 = sp + 0x120
143459: 7b 19 70                 u64 [sp + 0x70] = a2
143462: 7b 1a 60                 u64 [sp + 0x60] = a3
143465: 50 20 70 07 97 23 fe     ra = 1904, jump @1605
      :                          @10569 [@dyn 952]
143472: 82 1a 60                 a3 = u64 [sp + 0x60]
143475: 82 19 70                 a2 = u64 [sp + 0x70]
143478: 33 04 64                 t2 = 0x64
143481: 33 0c 78 12 03           a5 = 0x31278
143486: 82 13 48                 t1 = u64 [sp + 0x48]
143489: 82 12 58                 t0 = u64 [sp + 0x58]
143492: 82 18 30 01              a1 = u64 [sp + 0x130]
143496: 28 4f ff                 jump @10565
      :                          @10570 [@dyn 953]
143499: 3a 02 60 11 03           t0 = u64 [0x31160]
143504: 49 21 b0 01              u64 [sp + 432] = 0
143508: 49 21 b8 01 08           u64 [sp + 440] = 0x8
143513: 49 21 c0 01              u64 [sp + 448] = 0
143517: 49 21 c8 01              u64 [sp + 456] = 0
143521: 49 21 d0 01 08           u64 [sp + 464] = 0x8
143526: 49 21 d8 01              u64 [sp + 472] = 0
143530: 3a 03 70 11 03           t1 = u64 [0x31170]
143535: 33 0c 05                 a5 = 0x5
143538: 33 04 78 12 03           t2 = 0x31278
143543: 33 00 32                 ra = 0x32
143546: 7b 12 60                 u64 [sp + 0x60] = t0
143549: 7b 13 58                 u64 [sp + 0x58] = t1
143552: 28 49                    jump @10573
      :                          @10571
143554: 82 1c 70                 a5 = u64 [sp + 0x70]
143557: ca 29 07                 a0 = a2 * t0
143560: 98 79 01                 a2 = a0 >> 0x1
143563: d6 39 09                 a2 = a2 mulhu t1
143566: 98 99 04                 a2 = a2 >> 0x4
143569: ca 09 09                 a2 = a2 * ra
143572: c9 97 07                 a0 = a0 - a2
143575: ca 26 09                 a2 = s1 * t0
143578: 98 9a 01                 a3 = a2 >> 0x1
143581: d6 3a 0a                 a3 = a3 mulhu t1
143584: 98 aa 04                 a3 = a3 >> 0x4
143587: 82 1b d0 01              a4 = u64 [sp + 0x1d0]
143591: ca 0a 0a                 a3 = a3 * ra
143594: c9 a9 09                 a2 = a2 - a3
143597: 97 8a 04                 a3 = a1 << 0x4
143600: c8 ba 0a                 a3 = a3 + a4
143603: 7b a7                    u64 [a3] = a0
143605: 7b a9 08                 u64 [a3 + 0x8] = a2
143608: 95 86 01                 s1 = a1 + 0x1
143611: 83 cc ff                 i32 a5 = a5 + 0xffffffffffffffff
143614: 7b 16 d8 01              u64 [sp + 0x1d8] = s1
143618: 52 0c 07                 jump @10573 if a5 != 0
      :                          @10572
143621: 28 74 a0 00              jump @12557
      :                          @10573
143625: 3a 07 78 12 03           a0 = u64 [0x31278]
143630: 97 78 0d                 a1 = a0 << 0xd
143633: d3 87 07                 a0 = a0 ^ a1
143636: 98 78 07                 a1 = a0 >> 0x7
143639: d3 87 07                 a0 = a0 ^ a1
143642: 97 78 11                 a1 = a0 << 0x11
143645: d3 78 09                 a2 = a1 ^ a0
143648: 3e 09 78 12 03           u64 [0x31278] = a2
143653: 3a 07 78 12 03           a0 = u64 [0x31278]
143658: 97 78 0d                 a1 = a0 << 0xd
143661: d3 87 07                 a0 = a0 ^ a1
143664: 98 78 07                 a1 = a0 >> 0x7
143667: d3 87 07                 a0 = a0 ^ a1
143670: 97 76 11                 s1 = a0 << 0x11
143673: d3 76 06                 s1 = s1 ^ a0
143676: 3e 06 78 12 03           u64 [0x31278] = s1
143681: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
143685: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
143689: 7b 1c 70                 u64 [sp + 0x70] = a5
143692: ab 78 27                 jump @10576 if a1 != a0
      :                          @10574
143695: 95 17 b0 01              a0 = sp + 0x1b0
143699: 7b 19 48                 u64 [sp + 0x48] = a2
143702: 50 20 74 07 aa 22 fe     ra = 1908, jump @1605
      :                          @10575 [@dyn 954]
143709: 82 19 48                 a2 = u64 [sp + 0x48]
143712: 33 00 32                 ra = 0x32
143715: 33 04 78 12 03           t2 = 0x31278
143720: 82 13 58                 t1 = u64 [sp + 0x58]
143723: 82 12 60                 t0 = u64 [sp + 0x60]
143726: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
143730: 01                       fallthrough
      :                          @10576
143731: ca 29 07                 a0 = a2 * t0
143734: 98 79 01                 a2 = a0 >> 0x1
143737: d6 39 09                 a2 = a2 mulhu t1
143740: 98 99 04                 a2 = a2 >> 0x4
143743: ca 09 09                 a2 = a2 * ra
143746: c9 97 07                 a0 = a0 - a2
143749: ca 26 09                 a2 = s1 * t0
143752: 98 9a 01                 a3 = a2 >> 0x1
143755: d6 3a 0a                 a3 = a3 mulhu t1
143758: 98 aa 04                 a3 = a3 >> 0x4
143761: 82 1b b8 01              a4 = u64 [sp + 0x1b8]
143765: ca 0a 0a                 a3 = a3 * ra
143768: c9 a9 09                 a2 = a2 - a3
143771: 97 8a 04                 a3 = a1 << 0x4
143774: c8 ba 0a                 a3 = a3 + a4
143777: 7b a7                    u64 [a3] = a0
143779: 7b a9 08                 u64 [a3 + 0x8] = a2
143782: 95 88 01                 a1 = a1 + 0x1
143785: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
143789: 3a 07 78 12 03           a0 = u64 [0x31278]
143794: 97 78 0d                 a1 = a0 << 0xd
143797: d3 87 07                 a0 = a0 ^ a1
143800: 98 78 07                 a1 = a0 >> 0x7
143803: d3 87 07                 a0 = a0 ^ a1
143806: 97 78 11                 a1 = a0 << 0x11
143809: d3 78 09                 a2 = a1 ^ a0
143812: 3e 09 78 12 03           u64 [0x31278] = a2
143817: 3a 07 78 12 03           a0 = u64 [0x31278]
143822: 97 78 0d                 a1 = a0 << 0xd
143825: d3 87 07                 a0 = a0 ^ a1
143828: 98 78 07                 a1 = a0 >> 0x7
143831: d3 87 07                 a0 = a0 ^ a1
143834: 97 76 11                 s1 = a0 << 0x11
143837: d3 76 06                 s1 = s1 ^ a0
143840: 3e 06 78 12 03           u64 [0x31278] = s1
143845: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
143849: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
143853: ab 78 d5 fe              jump @10571 if a1 != a0
      :                          @10577
143857: 95 17 c8 01              a0 = sp + 0x1c8
143861: 7b 19 48                 u64 [sp + 0x48] = a2
143864: 50 20 76 07 08 22 fe     ra = 1910, jump @1605
      :                          @10578 [@dyn 955]
143871: 82 19 48                 a2 = u64 [sp + 0x48]
143874: 33 00 32                 ra = 0x32
143877: 33 04 78 12 03           t2 = 0x31278
143882: 82 13 58                 t1 = u64 [sp + 0x58]
143885: 82 12 60                 t0 = u64 [sp + 0x60]
143888: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
143892: 28 ae fe                 jump @10571
      :                          @10579 [@dyn 956]
143895: 3a 02 60 11 03           t0 = u64 [0x31160]
143900: 49 21 20 01              u64 [sp + 288] = 0
143904: 49 21 28 01 08           u64 [sp + 296] = 0x8
143909: 49 21 30 01              u64 [sp + 304] = 0
143913: 3a 03 b0 11 03           t1 = u64 [0x311b0]
143918: 33 06 0a                 s1 = 0xa
143921: 33 0c 78 12 03           a5 = 0x31278
143926: 33 04 64                 t2 = 0x64
143929: 7b 12 58                 u64 [sp + 0x58] = t0
143932: 7b 13 48                 u64 [sp + 0x48] = t1
143935: 28 46                    jump @10582
      :                          @10580
143937: ca 29 07                 a0 = a2 * t0
143940: 98 79 02                 a2 = a0 >> 0x2
143943: d6 39 09                 a2 = a2 mulhu t1
143946: 98 99 02                 a2 = a2 >> 0x2
143949: ca 49 09                 a2 = a2 * t2
143952: c9 97 07                 a0 = a0 - a2
143955: ca 2a 09                 a2 = a3 * t0
143958: 98 9a 02                 a3 = a2 >> 0x2
143961: d6 3a 0a                 a3 = a3 mulhu t1
143964: 98 aa 02                 a3 = a3 >> 0x2
143967: 82 1b 28 01              a4 = u64 [sp + 0x128]
143971: ca 4a 0a                 a3 = a3 * t2
143974: c9 a9 09                 a2 = a2 - a3
143977: 97 8a 04                 a3 = a1 << 0x4
143980: c8 ba 0a                 a3 = a3 + a4
143983: 7b a7                    u64 [a3] = a0
143985: 7b a9 08                 u64 [a3 + 0x8] = a2
143988: 95 89 01                 a2 = a1 + 0x1
143991: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
143994: 7b 19 30 01              u64 [sp + 0x130] = a2
143998: 52 06 07                 jump @10582 if s1 != 0
      :                          @10581
144001: 28 d4 a0 00              jump @12605
      :                          @10582
144005: 3a 07 78 12 03           a0 = u64 [0x31278]
144010: 97 78 0d                 a1 = a0 << 0xd
144013: d3 87 07                 a0 = a0 ^ a1
144016: 98 78 07                 a1 = a0 >> 0x7
144019: d3 87 07                 a0 = a0 ^ a1
144022: 97 78 11                 a1 = a0 << 0x11
144025: d3 78 09                 a2 = a1 ^ a0
144028: 3e 09 78 12 03           u64 [0x31278] = a2
144033: 3a 07 78 12 03           a0 = u64 [0x31278]
144038: 97 78 0d                 a1 = a0 << 0xd
144041: d3 87 07                 a0 = a0 ^ a1
144044: 98 78 07                 a1 = a0 >> 0x7
144047: d3 87 07                 a0 = a0 ^ a1
144050: 97 78 11                 a1 = a0 << 0x11
144053: d3 78 0a                 a3 = a1 ^ a0
144056: 3e 0a 78 12 03           u64 [0x31278] = a3
144061: 82 18 30 01              a1 = u64 [sp + 0x130]
144065: 82 17 20 01              a0 = u64 [sp + 0x120]
144069: ab 78 7c ff              jump @10580 if a1 != a0
      :                          @10583
144073: 95 17 20 01              a0 = sp + 0x120
144077: 7b 19 70                 u64 [sp + 0x70] = a2
144080: 7b 1a 60                 u64 [sp + 0x60] = a3
144083: 50 20 7a 07 2d 21 fe     ra = 1914, jump @1605
      :                          @10584 [@dyn 957]
144090: 82 1a 60                 a3 = u64 [sp + 0x60]
144093: 82 19 70                 a2 = u64 [sp + 0x70]
144096: 33 04 64                 t2 = 0x64
144099: 33 0c 78 12 03           a5 = 0x31278
144104: 82 13 48                 t1 = u64 [sp + 0x48]
144107: 82 12 58                 t0 = u64 [sp + 0x58]
144110: 82 18 30 01              a1 = u64 [sp + 0x130]
144114: 28 4f ff                 jump @10580
      :                          @10585 [@dyn 958]
144117: 3a 08 78 12 03           a1 = u64 [0x31278]
144122: 97 89 0d                 a2 = a1 << 0xd
144125: d3 98 08                 a1 = a1 ^ a2
144128: 98 89 07                 a2 = a1 >> 0x7
144131: d3 98 08                 a1 = a1 ^ a2
144134: 97 89 11                 a2 = a1 << 0x11
144137: d3 89 09                 a2 = a2 ^ a1
144140: 3a 08 60 11 03           a1 = u64 [0x31160]
144145: 3e 09 78 12 03           u64 [0x31278] = a2
144150: 3a 0a 78 12 03           a3 = u64 [0x31278]
144155: ca 89 0b                 a4 = a2 * a1
144158: 97 a9 0d                 a2 = a3 << 0xd
144161: d3 a9 09                 a2 = a2 ^ a3
144164: 98 9a 07                 a3 = a2 >> 0x7
144167: d3 a9 09                 a2 = a2 ^ a3
144170: 97 9a 11                 a3 = a2 << 0x11
144173: d3 9a 0a                 a3 = a3 ^ a2
144176: 3a 09 e8 11 03           a2 = u64 [0x311e8]
144181: ca 8a 0c                 a5 = a3 * a1
144184: 3e 0a 78 12 03           u64 [0x31278] = a3
144189: d5 9b 0a                 a3 = a4 mulh a2
144192: 98 a6 3f                 s1 = a3 >> 0x3f
144195: 99 aa 02                 a3 = a3 >>a 0x2
144198: c8 a6 06                 s1 = s1 + a3
144201: 96 66 0a                 s1 = s1 * 0xa
144204: c9 6b 02                 t0 = a4 - s1
144207: d5 9c 06                 s1 = a5 mulh a2
144210: 98 6b 3f                 a4 = s1 >> 0x3f
144213: 99 66 02                 s1 = s1 >>a 0x2
144216: 3a 07 78 12 03           a0 = u64 [0x31278]
144221: c8 6b 0b                 a4 = a4 + s1
144224: 96 bb 0a                 a4 = a4 * 0xa
144227: 97 7a 0d                 a3 = a0 << 0xd
144230: d3 a7 07                 a0 = a0 ^ a3
144233: 98 7a 07                 a3 = a0 >> 0x7
144236: d3 a7 07                 a0 = a0 ^ a3
144239: 97 7a 11                 a3 = a0 << 0x11
144242: d3 a7 07                 a0 = a0 ^ a3
144245: 3e 07 78 12 03           u64 [0x31278] = a0
144250: 3a 0a 78 12 03           a3 = u64 [0x31278]
144255: c9 bc 0c                 a5 = a5 - a4
144258: ca 87 07                 a0 = a0 * a1
144261: 97 ab 0d                 a4 = a3 << 0xd
144264: d3 ba 0a                 a3 = a3 ^ a4
144267: 98 ab 07                 a4 = a3 >> 0x7
144270: d3 ba 0a                 a3 = a3 ^ a4
144273: 97 ab 11                 a4 = a3 << 0x11
144276: d3 ba 0a                 a3 = a3 ^ a4
144279: ca 8a 0b                 a4 = a3 * a1
144282: 3e 0a 78 12 03           u64 [0x31278] = a3
144287: d5 97 0a                 a3 = a0 mulh a2
144290: 98 a6 3f                 s1 = a3 >> 0x3f
144293: 99 aa 02                 a3 = a3 >>a 0x2
144296: c8 6a 0a                 a3 = a3 + s1
144299: 96 aa 0a                 a3 = a3 * 0xa
144302: c9 a7 07                 a0 = a0 - a3
144305: d5 9b 0a                 a3 = a4 mulh a2
144308: 98 a6 3f                 s1 = a3 >> 0x3f
144311: 99 aa 02                 a3 = a3 >>a 0x2
144314: c8 6a 0a                 a3 = a3 + s1
144317: 96 aa 0a                 a3 = a3 * 0xa
144320: c9 ab 0b                 a4 = a4 - a3
144323: 7b 1c 28 01              u64 [sp + 0x128] = a5
144327: 7b 12 20 01              u64 [sp + 0x120] = t0
144331: 7b 17 30 01              u64 [sp + 0x130] = a0
144335: 7b 1b 38 01              u64 [sp + 0x138] = a4
144339: 3a 07 78 12 03           a0 = u64 [0x31278]
144344: 97 7a 0d                 a3 = a0 << 0xd
144347: d3 a7 07                 a0 = a0 ^ a3
144350: 98 7a 07                 a3 = a0 >> 0x7
144353: d3 a7 07                 a0 = a0 ^ a3
144356: 97 7a 11                 a3 = a0 << 0x11
144359: d3 a7 07                 a0 = a0 ^ a3
144362: 3e 07 78 12 03           u64 [0x31278] = a0
144367: 3a 0a 78 12 03           a3 = u64 [0x31278]
144372: ca 87 07                 a0 = a0 * a1
144375: 97 ab 0d                 a4 = a3 << 0xd
144378: d3 ba 0a                 a3 = a3 ^ a4
144381: 98 ab 07                 a4 = a3 >> 0x7
144384: d3 ba 0a                 a3 = a3 ^ a4
144387: 97 ab 11                 a4 = a3 << 0x11
144390: d3 ba 0a                 a3 = a3 ^ a4
144393: ca 8a 0c                 a5 = a3 * a1
144396: 3e 0a 78 12 03           u64 [0x31278] = a3
144401: d5 97 0a                 a3 = a0 mulh a2
144404: 98 ab 3f                 a4 = a3 >> 0x3f
144407: 99 aa 02                 a3 = a3 >>a 0x2
144410: c8 ba 0a                 a3 = a3 + a4
144413: 96 aa 0a                 a3 = a3 * 0xa
144416: c9 a7 0b                 a4 = a0 - a3
144419: d5 9c 07                 a0 = a5 mulh a2
144422: 98 7a 3f                 a3 = a0 >> 0x3f
144425: 99 77 02                 a0 = a0 >>a 0x2
144428: 3a 06 78 12 03           s1 = u64 [0x31278]
144433: c8 a7 07                 a0 = a0 + a3
144436: 96 77 0a                 a0 = a0 * 0xa
144439: 97 6a 0d                 a3 = s1 << 0xd
144442: d3 a6 06                 s1 = s1 ^ a3
144445: 98 6a 07                 a3 = s1 >> 0x7
144448: d3 a6 06                 s1 = s1 ^ a3
144451: 97 6a 11                 a3 = s1 << 0x11
144454: d3 6a 0a                 a3 = a3 ^ s1
144457: 3e 0a 78 12 03           u64 [0x31278] = a3
144462: 3a 06 78 12 03           s1 = u64 [0x31278]
144467: c9 7c 0c                 a5 = a5 - a0
144470: ca 8a 07                 a0 = a3 * a1
144473: 97 6a 0d                 a3 = s1 << 0xd
144476: d3 a6 06                 s1 = s1 ^ a3
144479: 98 6a 07                 a3 = s1 >> 0x7
144482: d3 a6 06                 s1 = s1 ^ a3
144485: 97 6a 11                 a3 = s1 << 0x11
144488: d3 6a 0a                 a3 = a3 ^ s1
144491: ca 8a 08                 a1 = a3 * a1
144494: 3e 0a 78 12 03           u64 [0x31278] = a3
144499: d5 97 0a                 a3 = a0 mulh a2
144502: 98 a6 3f                 s1 = a3 >> 0x3f
144505: 99 aa 02                 a3 = a3 >>a 0x2
144508: c8 6a 0a                 a3 = a3 + s1
144511: 96 aa 0a                 a3 = a3 * 0xa
144514: c9 a7 07                 a0 = a0 - a3
144517: d5 98 09                 a2 = a1 mulh a2
144520: 98 9a 3f                 a3 = a2 >> 0x3f
144523: 99 99 02                 a2 = a2 >>a 0x2
144526: c8 a9 09                 a2 = a2 + a3
144529: 96 99 0a                 a2 = a2 * 0xa
144532: c9 98 08                 a1 = a1 - a2
144535: 7b 1c e8 01              u64 [sp + 0x1e8] = a5
144539: 7b 1b e0 01              u64 [sp + 0x1e0] = a4
144543: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
144547: 7b 18 f8 01              u64 [sp + 0x1f8] = a1
144551: 95 17 08 02              a0 = sp + 0x208
144555: 95 18 20 01              a1 = sp + 0x120
144559: 95 19 e0 01              a2 = sp + 0x1e0
144563: 95 16 e0 01              s1 = sp + 0x1e0
144567: 33 00 7e 07              ra = 0x77e
144571: 95 11 e0                 sp = sp + 0xffffffffffffffe0
144574: 7b 10 18                 u64 [sp + 0x18] = ra
144577: 7b 15 10                 u64 [sp + 0x10] = s0
144580: 7b 16 08                 u64 [sp + 0x8] = s1
144583: 82 82                    t0 = u64 [a1]
144585: 82 8b 18                 a4 = u64 [a1 + 0x18]
144588: 82 95                    s0 = u64 [a2]
144590: 82 9a 18                 a3 = u64 [a2 + 0x18]
144593: c8 2b 03                 t1 = a4 + t0
144596: 82 84 10                 t2 = u64 [a1 + 0x10]
144599: 82 90 08                 ra = u64 [a2 + 0x8]
144602: c8 5a 06                 s1 = a3 + s0
144605: ca 36 03                 t1 = s1 * t1
144608: c9 24 06                 s1 = t2 - t0
144611: c8 50 0c                 a5 = ra + s0
144614: ca 6c 0c                 a5 = a5 * s1
144617: c8 b4 04                 t2 = t2 + a4
144620: ca 54 06                 s1 = t2 * s0
144623: 82 99 10                 a2 = u64 [a2 + 0x10]
144626: c9 a0 04                 t2 = ra - a3
144629: 82 88 08                 a1 = u64 [a1 + 0x8]
144632: ca 24 04                 t2 = t2 * t0
144635: c9 59 05                 s0 = a2 - s0
144638: ca b5 05                 s0 = s0 * a4
144641: c8 82 02                 t0 = t0 + a1
144644: c9 b8 08                 a1 = a1 - a4
144647: ca a2 0b                 a4 = t0 * a3
144650: c8 a9 09                 a2 = a2 + a3
144653: ca 98 08                 a1 = a1 * a2
144656: c8 35 09                 a2 = s0 + t1
144659: c9 8b 08                 a1 = a4 - a1
144662: c9 89 09                 a2 = a2 - a1
144665: c8 65 05                 s0 = s0 + s1
144668: c9 63 08                 a1 = t1 - s1
144671: c8 4b 0b                 a4 = a4 + t2
144674: c8 4c 0c                 a5 = a5 + t2
144677: c8 c8 08                 a1 = a1 + a5
144680: 7b 7b 08                 u64 [a0 + 0x8] = a4
144683: 7b 79                    u64 [a0] = a2
144685: 7b 75 10                 u64 [a0 + 0x10] = s0
144688: 7b 78 18                 u64 [a0 + 0x18] = a1
144691: 82 10 18                 ra = u64 [sp + 0x18]
144694: 82 15 10                 s0 = u64 [sp + 0x10]
144697: 82 16 08                 s1 = u64 [sp + 0x8]
144700: 95 11 20                 sp = sp + 0x20
144703: 32 00                    ret
      :                          @10586 [@dyn 959]
144705: 95 17 20 01              a0 = sp + 0x120
144709: 7b 17 90 02              u64 [sp + 0x290] = a0
144713: 33 07 e2 00              a0 = 0xe2
144717: 7b 17 98 02              u64 [sp + 0x298] = a0
144721: 7b 16 a0 02              u64 [sp + 0x2a0] = s1
144725: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
144729: 95 18 08 02              a1 = sp + 0x208
144733: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
144737: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
144741: 33 07 a0 16 01           a0 = 0x116a0
144746: 7b 17 38 02              u64 [sp + 0x238] = a0
144750: 49 21 40 02 03           u64 [sp + 576] = 0x3
144755: 49 21 58 02              u64 [sp + 600] = 0
144759: 95 18 90 02              a1 = sp + 0x290
144763: 7b 18 48 02              u64 [sp + 0x248] = a1
144767: 49 21 50 02 03           u64 [sp + 592] = 0x3
144772: 95 17 c8 01              a0 = sp + 0x1c8
144776: 95 18 38 02              a1 = sp + 0x238
144780: 50 20 80 07 b3 19 fe     ra = 1920, jump @1491
      :                          @10587 [@dyn 960]
144787: 82 16 d0 01              s1 = u64 [sp + 0x1d0]
144791: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
144795: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
144799: 7b 17 70                 u64 [sp + 0x70] = a0
144802: 33 07 02                 a0 = 0x2
144805: 33 08                    a1 = 0
144807: 33 09                    a2 = 0
144809: 64 6a                    a3 = s1
144811: 33 00 82 07              ra = 0x782
144815: 0a 64                    ecalli 100 // 'log'
144817: 01                       fallthrough
      :                          @10588 [@dyn 961]
144818: 82 1c 70                 a5 = u64 [sp + 0x70]
144821: 82 17 68                 a0 = u64 [sp + 0x68]
144824: c8 c7 07                 a0 = a0 + a5
144827: 55 37 00 00 ff 0a        jump @10590 if a0 >=u 4294901760
      :                          @10589
144833: 28 05 ac 00              jump @12856
      :                          @10590
144837: 33 07 c0 22 03           a0 = 0x322c0
144842: 95 77 00 00 01           a0 = a0 + 0x10000
144847: 01                       fallthrough
      :                          @10591
144848: 82 78                    a1 = u64 [a0]
144850: c9 87 09                 a2 = a0 - a1
144853: aa 69 07                 jump @10593 if a2 == s1
      :                          @10592
144856: 28 ee ab 00              jump @12856
      :                          @10593
144860: c9 c8 09                 a2 = a1 - a5
144863: 01                       fallthrough
      :                          @10594
144864: 82 7a                    a3 = u64 [a0]
144866: ab 8a ee                 jump @10591 if a3 != a1
      :                          @10595
144869: 7b 79                    u64 [a0] = a2
144871: 33 0b                    a4 = 0
144873: 01                       fallthrough
      :                          @10596
144874: ab 8a e6                 jump @10591 if a3 != a1
      :                          @10597
144877: 28 d9 ab 00              jump @12856
      :                          @10598 [@dyn 962]
144881: 3a 06 60 11 03           s1 = u64 [0x31160]
144886: 95 17 90 02              a0 = sp + 0x290
144890: 33 09 04                 a2 = 0x4
144893: 33 08                    a1 = 0
144895: 50 20 86 07 ea 2d fe     ra = 1926, jump @1877
      :                          @10599 [@dyn 963]
144902: 95 17 20 01              a0 = sp + 0x120
144906: 95 18 90 02              a1 = sp + 0x290
144910: 33 09 04                 a2 = 0x4
144913: 50 20 88 07 03 28 fe     ra = 1928, jump @1783
      :                          @10600 [@dyn 964]
144920: 33 07                    a0 = 0
144922: 33 02 10                 t0 = 0x10
144925: 33 04 78 12 03           t2 = 0x31278
144930: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
144940: 33 00 14                 ra = 0x14
144943: 33 03 04                 t1 = 0x4
144946: 01                       fallthrough
      :                          @10601
144947: 3a 08 78 12 03           a1 = u64 [0x31278]
144952: 97 89 0d                 a2 = a1 << 0xd
144955: d3 98 08                 a1 = a1 ^ a2
144958: 98 89 07                 a2 = a1 >> 0x7
144961: d3 98 08                 a1 = a1 ^ a2
144964: 97 8c 11                 a5 = a1 << 0x11
144967: d3 8c 0c                 a5 = a5 ^ a1
144970: 3e 0c 78 12 03           u64 [0x31278] = a5
144975: 82 18 30 01              a1 = u64 [sp + 0x130]
144979: ac 87 07                 jump @10603 if a0 <u a1
      :                          @10602
144982: 28 79 bd 00              jump @13217
      :                          @10603
144986: 82 18 28 01              a1 = u64 [sp + 0x128]
144990: c8 28 08                 a1 = a1 + t0
144993: 82 89                    a2 = u64 [a1]
144995: 52 09 07                 jump @10605 if a2 != 0
      :                          @10604
144998: 28 65 bd 00              jump @13215
      :                          @10605
145002: ca 6c 09                 a2 = a5 * s1
145005: d6 b9 0c                 a5 = a2 mulhu a4
145008: 98 cc 04                 a5 = a5 >> 0x4
145011: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
145014: ca 0c 0c                 a5 = a5 * ra
145017: c9 c9 09                 a2 = a2 - a5
145020: 95 99 f6                 a2 = a2 + 0xfffffffffffffff6
145023: 7b 89                    u64 [a1] = a2
145025: 3a 08 78 12 03           a1 = u64 [0x31278]
145030: 97 89 0d                 a2 = a1 << 0xd
145033: d3 98 08                 a1 = a1 ^ a2
145036: 98 89 07                 a2 = a1 >> 0x7
145039: d3 98 08                 a1 = a1 ^ a2
145042: 97 8c 11                 a5 = a1 << 0x11
145045: d3 8c 0c                 a5 = a5 ^ a1
145048: 3e 0c 78 12 03           u64 [0x31278] = a5
145053: 82 18 30 01              a1 = u64 [sp + 0x130]
145057: ac 87 07                 jump @10607 if a0 <u a1
      :                          @10606
145060: 28 2b bd 00              jump @13217
      :                          @10607
145064: 64 6a                    a3 = s1
145066: 82 19 28 01              a2 = u64 [sp + 0x128]
145070: c8 29 09                 a2 = a2 + t0
145073: 82 98                    a1 = u64 [a2]
145075: 55 18 02 08              jump @10609 if a1 >=u 2
      :                          @10608
145079: 28 4f bc 00              jump @13197
      :                          @10609
145083: ca ac 08                 a1 = a5 * a3
145086: d6 b8 0c                 a5 = a1 mulhu a4
145089: 98 cc 04                 a5 = a5 >> 0x4
145092: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145095: ca 0c 0c                 a5 = a5 * ra
145098: c9 c8 08                 a1 = a1 - a5
145101: 95 88 f6                 a1 = a1 + 0xfffffffffffffff6
145104: 7b 98 08                 u64 [a2 + 0x8] = a1
145107: 3a 08 78 12 03           a1 = u64 [0x31278]
145112: 97 89 0d                 a2 = a1 << 0xd
145115: d3 98 08                 a1 = a1 ^ a2
145118: 98 89 07                 a2 = a1 >> 0x7
145121: d3 98 08                 a1 = a1 ^ a2
145124: 97 8c 11                 a5 = a1 << 0x11
145127: d3 8c 0c                 a5 = a5 ^ a1
145130: 3e 0c 78 12 03           u64 [0x31278] = a5
145135: 82 18 30 01              a1 = u64 [sp + 0x130]
145139: ac 87 07                 jump @10611 if a0 <u a1
      :                          @10610
145142: 28 d9 bc 00              jump @13217
      :                          @10611
145146: 64 a6                    s1 = a3
145148: 82 19 28 01              a2 = u64 [sp + 0x128]
145152: c8 29 09                 a2 = a2 + t0
145155: 82 98                    a1 = u64 [a2]
145157: 55 18 03 08              jump @10613 if a1 >=u 3
      :                          @10612
145161: 28 ff bb 00              jump @13199
      :                          @10613
145165: ca 6c 08                 a1 = a5 * s1
145168: d6 b8 0c                 a5 = a1 mulhu a4
145171: 98 cc 04                 a5 = a5 >> 0x4
145174: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145177: ca 0c 0c                 a5 = a5 * ra
145180: c9 c8 08                 a1 = a1 - a5
145183: 95 88 f6                 a1 = a1 + 0xfffffffffffffff6
145186: 7b 98 10                 u64 [a2 + 0x10] = a1
145189: 3a 08 78 12 03           a1 = u64 [0x31278]
145194: 97 89 0d                 a2 = a1 << 0xd
145197: d3 98 08                 a1 = a1 ^ a2
145200: 98 89 07                 a2 = a1 >> 0x7
145203: d3 98 08                 a1 = a1 ^ a2
145206: 97 8c 11                 a5 = a1 << 0x11
145209: d3 8c 0c                 a5 = a5 ^ a1
145212: 3e 0c 78 12 03           u64 [0x31278] = a5
145217: 82 18 30 01              a1 = u64 [sp + 0x130]
145221: ac 87 07                 jump @10615 if a0 <u a1
      :                          @10614
145224: 28 87 bc 00              jump @13217
      :                          @10615
145228: 82 19 28 01              a2 = u64 [sp + 0x128]
145232: c8 29 09                 a2 = a2 + t0
145235: 82 98                    a1 = u64 [a2]
145237: ae 38 07                 jump @10617 if a1 >=u t1
      :                          @10616
145240: 28 af bb 00              jump @13198
      :                          @10617
145244: ca 6c 08                 a1 = a5 * s1
145247: d6 b8 0c                 a5 = a1 mulhu a4
145250: 98 cc 04                 a5 = a5 >> 0x4
145253: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145256: ca 0c 0c                 a5 = a5 * ra
145259: c9 c8 08                 a1 = a1 - a5
145262: 95 88 f6                 a1 = a1 + 0xfffffffffffffff6
145265: 7b 98 18                 u64 [a2 + 0x18] = a1
145268: 95 22 18                 t0 = t0 + 0x18
145271: 95 77 01                 a0 = a0 + 0x1
145274: 52 12 70 b9 fe           jump @10601 if t0 != 112
      :                          @10618
145279: 95 17 e0 01              a0 = sp + 0x1e0
145283: 95 18 20 01              a1 = sp + 0x120
145287: 95 16 20 01              s1 = sp + 0x120
145291: 50 20 8a 07 a9 31 ff     ra = 1930, jump @7315
      :                          @10619 [@dyn 965]
145298: 7b 16 38 02              u64 [sp + 0x238] = s1
145302: 33 07 40 02              a0 = 0x240
145306: 7b 17 40 02              u64 [sp + 0x240] = a0
145310: 95 17 e0 01              a0 = sp + 0x1e0
145314: 7b 17 48 02              u64 [sp + 0x248] = a0
145318: 33 07 08 02              a0 = 0x208
145322: 7b 17 50 02              u64 [sp + 0x250] = a0
145326: 33 07 f0 16 01           a0 = 0x116f0
145331: 7b 17 90 02              u64 [sp + 0x290] = a0
145335: 49 21 98 02 02           u64 [sp + 664] = 0x2
145340: 49 21 b0 02              u64 [sp + 688] = 0
145344: 95 18 38 02              a1 = sp + 0x238
145348: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
145352: 49 21 a8 02 02           u64 [sp + 680] = 0x2
145357: 95 17 08 02              a0 = sp + 0x208
145361: 95 18 90 02              a1 = sp + 0x290
145365: 50 20 8c 07 6a 17 fe     ra = 1932, jump @1491
      :                          @10620 [@dyn 966]
145372: 82 16 10 02              s1 = u64 [sp + 0x210]
145376: 82 1b 18 02              a4 = u64 [sp + 0x218]
145380: 82 17 08 02              a0 = u64 [sp + 0x208]
145384: 7b 17 70                 u64 [sp + 0x70] = a0
145387: 33 07 02                 a0 = 0x2
145390: 33 08                    a1 = 0
145392: 33 09                    a2 = 0
145394: 64 6a                    a3 = s1
145396: 33 00 8e 07              ra = 0x78e
145400: 0a 64                    ecalli 100 // 'log'
145402: 01                       fallthrough
      :                          @10621 [@dyn 967]
145403: 82 1c 70                 a5 = u64 [sp + 0x70]
145406: 82 17 68                 a0 = u64 [sp + 0x68]
145409: c8 c7 07                 a0 = a0 + a5
145412: 53 37 00 00 ff 27        jump @10627 if a0 <u 4294901760
      :                          @10622
145418: 33 07 c0 22 03           a0 = 0x322c0
145423: 95 77 00 00 01           a0 = a0 + 0x10000
145428: 01                       fallthrough
      :                          @10623
145429: 82 78                    a1 = u64 [a0]
145431: c9 87 09                 a2 = a0 - a1
145434: ab 69 11                 jump @10627 if a2 != s1
      :                          @10624
145437: c9 c8 09                 a2 = a1 - a5
145440: 01                       fallthrough
      :                          @10625
145441: 82 7a                    a3 = u64 [a0]
145443: ab 8a f2                 jump @10623 if a3 != a1
      :                          @10626
145446: 7b 79                    u64 [a0] = a2
145448: 33 0b                    a4 = 0
145450: 01                       fallthrough
      :                          @10627
145451: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
145455: 51 08 3b                 jump @10634 if a1 == 0
      :                          @10628
145458: 56 28 00 10 38           jump @10634 if a1 >u 4096
      :                          @10629
145463: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
145467: 97 88 04                 a1 = a1 << 0x4
145470: 33 09 c0 22 03           a2 = 0x322c0
145475: 95 99 00 00 01           a2 = a2 + 0x10000
145480: 01                       fallthrough
      :                          @10630
145481: 82 9a                    a3 = u64 [a2]
145483: c9 a9 0b                 a4 = a2 - a3
145486: ab 7b 1c                 jump @10634 if a4 != a0
      :                          @10631
145489: c9 8a 0b                 a4 = a3 - a1
145492: 01                       fallthrough
      :                          @10632
145493: 82 9c                    a5 = u64 [a2]
145495: ab ac f2                 jump @10630 if a5 != a3
      :                          @10633
145498: 7b 9b                    u64 [a2] = a4
145500: 33 06                    s1 = 0
145502: 95 17 20 01              a0 = sp + 0x120
145506: 33 00 90 07              ra = 0x790
145510: 28 f3 d3 fd              jump @229
      :                          @10634
145514: 95 17 20 01              a0 = sp + 0x120
145518: 50 20 90 07 eb d3 fd     ra = 1936, jump @229
      :                          @10635 [@dyn 968]
145525: 28 51 a9 00              jump @12856
      :                          @10636 [@dyn 969]
145529: 3a 07 60 11 03           a0 = u64 [0x31160]
145534: 7b 17 70                 u64 [sp + 0x70] = a0
145537: 95 17 90 02              a0 = sp + 0x290
145541: 33 09 06                 a2 = 0x6
145544: 33 08                    a1 = 0
145546: 50 20 94 07 5f 2b fe     ra = 1940, jump @1877
      :                          @10637 [@dyn 970]
145553: 95 17 e0 01              a0 = sp + 0x1e0
145557: 95 18 90 02              a1 = sp + 0x290
145561: 33 09 05                 a2 = 0x5
145564: 50 20 96 07 78 25 fe     ra = 1942, jump @1783
      :                          @10638 [@dyn 971]
145571: 33 07                    a0 = 0
145573: 33 0b 10                 a4 = 0x10
145576: 33 0c 78 12 03           a5 = 0x31278
145581: 14 02 cd cc cc cc cc cc cc cc t0 = 0xcccccccccccccccd
145591: 33 04 0a                 t2 = 0xa
145594: 82 13 70                 t1 = u64 [sp + 0x70]
145597: 01                       fallthrough
      :                          @10639
145598: 3a 08 78 12 03           a1 = u64 [0x31278]
145603: 97 89 0d                 a2 = a1 << 0xd
145606: d3 98 08                 a1 = a1 ^ a2
145609: 98 89 07                 a2 = a1 >> 0x7
145612: d3 98 08                 a1 = a1 ^ a2
145615: 97 89 11                 a2 = a1 << 0x11
145618: d3 98 08                 a1 = a1 ^ a2
145621: 3e 08 78 12 03           u64 [0x31278] = a1
145626: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
145630: ac 97 07                 jump @10641 if a0 <u a2
      :                          @10640
145633: 28 14 bb 00              jump @13253
      :                          @10641
145637: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
145641: c8 b9 09                 a2 = a2 + a4
145644: 82 9a                    a3 = u64 [a2]
145646: 52 0a 07                 jump @10643 if a3 != 0
      :                          @10642
145649: 28 da ba 00              jump @13215
      :                          @10643
145653: ca 38 08                 a1 = a1 * t1
145656: d6 28 0a                 a3 = a1 mulhu t0
145659: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145662: 98 aa 03                 a3 = a3 >> 0x3
145665: 96 aa 0a                 a3 = a3 * 0xa
145668: c9 a8 08                 a1 = a1 - a3
145671: 7b 98                    u64 [a2] = a1
145673: 3a 08 78 12 03           a1 = u64 [0x31278]
145678: 97 89 0d                 a2 = a1 << 0xd
145681: d3 98 08                 a1 = a1 ^ a2
145684: 98 89 07                 a2 = a1 >> 0x7
145687: d3 98 08                 a1 = a1 ^ a2
145690: 97 8a 11                 a3 = a1 << 0x11
145693: d3 8a 0a                 a3 = a3 ^ a1
145696: 3e 0a 78 12 03           u64 [0x31278] = a3
145701: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
145705: ac 97 07                 jump @10645 if a0 <u a2
      :                          @10644
145708: 28 c9 ba 00              jump @13253
      :                          @10645
145712: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
145716: c8 b9 09                 a2 = a2 + a4
145719: 82 98                    a1 = u64 [a2]
145721: 55 18 02 08              jump @10647 if a1 >=u 2
      :                          @10646
145725: 28 c9 b9 00              jump @13197
      :                          @10647
145729: ca 3a 08                 a1 = a3 * t1
145732: d6 28 0a                 a3 = a1 mulhu t0
145735: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145738: 98 aa 03                 a3 = a3 >> 0x3
145741: 96 aa 0a                 a3 = a3 * 0xa
145744: c9 a8 08                 a1 = a1 - a3
145747: 7b 98 08                 u64 [a2 + 0x8] = a1
145750: 3a 08 78 12 03           a1 = u64 [0x31278]
145755: 97 89 0d                 a2 = a1 << 0xd
145758: d3 98 08                 a1 = a1 ^ a2
145761: 98 89 07                 a2 = a1 >> 0x7
145764: d3 98 08                 a1 = a1 ^ a2
145767: 97 8a 11                 a3 = a1 << 0x11
145770: d3 8a 0a                 a3 = a3 ^ a1
145773: 3e 0a 78 12 03           u64 [0x31278] = a3
145778: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
145782: ac 97 07                 jump @10649 if a0 <u a2
      :                          @10648
145785: 28 7c ba 00              jump @13253
      :                          @10649
145789: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
145793: c8 b9 09                 a2 = a2 + a4
145796: 82 98                    a1 = u64 [a2]
145798: 55 18 03 08              jump @10651 if a1 >=u 3
      :                          @10650
145802: 28 7e b9 00              jump @13199
      :                          @10651
145806: ca 3a 08                 a1 = a3 * t1
145809: d6 28 0a                 a3 = a1 mulhu t0
145812: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145815: 98 aa 03                 a3 = a3 >> 0x3
145818: 96 aa 0a                 a3 = a3 * 0xa
145821: c9 a8 08                 a1 = a1 - a3
145824: 7b 98 10                 u64 [a2 + 0x10] = a1
145827: 3a 08 78 12 03           a1 = u64 [0x31278]
145832: 97 89 0d                 a2 = a1 << 0xd
145835: d3 98 08                 a1 = a1 ^ a2
145838: 98 89 07                 a2 = a1 >> 0x7
145841: d3 98 08                 a1 = a1 ^ a2
145844: 97 8a 11                 a3 = a1 << 0x11
145847: d3 8a 0a                 a3 = a3 ^ a1
145850: 3e 0a 78 12 03           u64 [0x31278] = a3
145855: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
145859: ac 97 07                 jump @10653 if a0 <u a2
      :                          @10652
145862: 28 2f ba 00              jump @13253
      :                          @10653
145866: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
145870: c8 b9 09                 a2 = a2 + a4
145873: 82 98                    a1 = u64 [a2]
145875: 55 18 04 08              jump @10655 if a1 >=u 4
      :                          @10654
145879: 28 30 b9 00              jump @13198
      :                          @10655
145883: ca 3a 08                 a1 = a3 * t1
145886: d6 28 0a                 a3 = a1 mulhu t0
145889: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145892: 98 aa 03                 a3 = a3 >> 0x3
145895: 96 aa 0a                 a3 = a3 * 0xa
145898: c9 a8 08                 a1 = a1 - a3
145901: 7b 98 18                 u64 [a2 + 0x18] = a1
145904: 3a 08 78 12 03           a1 = u64 [0x31278]
145909: 97 89 0d                 a2 = a1 << 0xd
145912: d3 98 08                 a1 = a1 ^ a2
145915: 98 89 07                 a2 = a1 >> 0x7
145918: d3 98 08                 a1 = a1 ^ a2
145921: 97 8a 11                 a3 = a1 << 0x11
145924: d3 8a 0a                 a3 = a3 ^ a1
145927: 3e 0a 78 12 03           u64 [0x31278] = a3
145932: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
145936: ac 97 07                 jump @10657 if a0 <u a2
      :                          @10656
145939: 28 e2 b9 00              jump @13253
      :                          @10657
145943: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
145947: c8 b9 09                 a2 = a2 + a4
145950: 82 98                    a1 = u64 [a2]
145952: 55 18 05 08              jump @10659 if a1 >=u 5
      :                          @10658
145956: 28 ad b9 00              jump @13219
      :                          @10659
145960: ca 3a 08                 a1 = a3 * t1
145963: d6 28 0a                 a3 = a1 mulhu t0
145966: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145969: 98 aa 03                 a3 = a3 >> 0x3
145972: 96 aa 0a                 a3 = a3 * 0xa
145975: c9 a8 08                 a1 = a1 - a3
145978: 7b 98 20                 u64 [a2 + 0x20] = a1
145981: 3a 08 78 12 03           a1 = u64 [0x31278]
145986: 97 89 0d                 a2 = a1 << 0xd
145989: d3 98 08                 a1 = a1 ^ a2
145992: 98 89 07                 a2 = a1 >> 0x7
145995: d3 98 08                 a1 = a1 ^ a2
145998: 97 89 11                 a2 = a1 << 0x11
146001: d3 89 04                 t2 = a2 ^ a1
146004: 3e 04 78 12 03           u64 [0x31278] = t2
146009: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
146013: ac 97 07                 jump @10661 if a0 <u a2
      :                          @10660
146016: 28 95 b9 00              jump @13253
      :                          @10661
146020: 64 26                    s1 = t0
146022: 82 10 e8 01              ra = u64 [sp + 0x1e8]
146026: c8 b0 0a                 a3 = ra + a4
146029: 82 a8                    a1 = u64 [a3]
146031: 55 18 06 08              jump @10663 if a1 >=u 6
      :                          @10662
146035: 28 62 b9 00              jump @13223
      :                          @10663
146039: ca 34 08                 a1 = t2 * t1
146042: 64 62                    t0 = s1
146044: d6 68 0c                 a5 = a1 mulhu s1
146047: 82 aa f8                 a3 = u64 [a3 + 0xfffffffffffffff8]
146050: 98 cc 03                 a5 = a5 >> 0x3
146053: 33 04 0a                 t2 = 0xa
146056: ca 4c 0c                 a5 = a5 * t2
146059: c9 c8 08                 a1 = a1 - a5
146062: 7b a8 28                 u64 [a3 + 0x28] = a1
146065: 95 bb 18                 a4 = a4 + 0x18
146068: 95 77 01                 a0 = a0 + 0x1
146071: 33 0c 78 12 03           a5 = 0x31278
146076: 52 2b 88 00 22 fe        jump @10639 if a4 != 136
      :                          @10664
146082: 95 17 90 02              a0 = sp + 0x290
146086: 64 08                    a1 = ra
146088: 50 20 98 07 c9 36 fe     ra = 1944, jump @2112
      :                          @10665 [@dyn 972]
146095: 95 17 90 02              a0 = sp + 0x290
146099: 50 20 9a 07 b8 2f ff     ra = 1946, jump @7339
      :                          @10666 [@dyn 973]
146106: 7b 17 20 01              u64 [sp + 0x120] = a0
146110: 95 17 e0 01              a0 = sp + 0x1e0
146114: 7b 17 38 02              u64 [sp + 0x238] = a0
146118: 33 07 40 02              a0 = 0x240
146122: 7b 17 40 02              u64 [sp + 0x240] = a0
146126: 95 17 20 01              a0 = sp + 0x120
146130: 7b 17 48 02              u64 [sp + 0x248] = a0
146134: 33 07 28 0c              a0 = 0xc28
146138: 7b 17 50 02              u64 [sp + 0x250] = a0
146142: 33 07 18 17 01           a0 = 0x11718
146147: 7b 17 90 02              u64 [sp + 0x290] = a0
146151: 49 21 98 02 02           u64 [sp + 664] = 0x2
146156: 49 21 b0 02              u64 [sp + 688] = 0
146160: 95 18 38 02              a1 = sp + 0x238
146164: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
146168: 49 21 a8 02 02           u64 [sp + 680] = 0x2
146173: 95 17 08 02              a0 = sp + 0x208
146177: 95 18 90 02              a1 = sp + 0x290
146181: 50 20 9c 07 3a 14 fe     ra = 1948, jump @1491
      :                          @10667 [@dyn 974]
146188: 82 16 10 02              s1 = u64 [sp + 0x210]
146192: 82 1b 18 02              a4 = u64 [sp + 0x218]
146196: 82 17 08 02              a0 = u64 [sp + 0x208]
146200: 7b 17 70                 u64 [sp + 0x70] = a0
146203: 33 07 02                 a0 = 0x2
146206: 33 08                    a1 = 0
146208: 33 09                    a2 = 0
146210: 64 6a                    a3 = s1
146212: 33 00 9e 07              ra = 0x79e
146216: 0a 64                    ecalli 100 // 'log'
146218: 01                       fallthrough
      :                          @10668 [@dyn 975]
146219: 82 1c 70                 a5 = u64 [sp + 0x70]
146222: 82 17 68                 a0 = u64 [sp + 0x68]
146225: c8 c7 07                 a0 = a0 + a5
146228: 33 08 00 00 ff           a1 = 0xffffffffffff0000
146233: ae 87 07                 jump @10670 if a0 >=u a1
      :                          @10669
146236: 28 53 a3 00              jump @12791
      :                          @10670
146240: 33 07 c0 22 03           a0 = 0x322c0
146245: 95 77 00 00 01           a0 = a0 + 0x10000
146250: 01                       fallthrough
      :                          @10671
146251: 82 78                    a1 = u64 [a0]
146253: c9 87 09                 a2 = a0 - a1
146256: aa 69 07                 jump @10673 if a2 == s1
      :                          @10672
146259: 28 3c a3 00              jump @12791
      :                          @10673
146263: c9 c8 09                 a2 = a1 - a5
146266: 01                       fallthrough
      :                          @10674
146267: 82 7a                    a3 = u64 [a0]
146269: ab 8a ee                 jump @10671 if a3 != a1
      :                          @10675
146272: 7b 79                    u64 [a0] = a2
146274: 33 0b                    a4 = 0
146276: 01                       fallthrough
      :                          @10676
146277: ab 8a e6                 jump @10671 if a3 != a1
      :                          @10677
146280: 28 27 a3 00              jump @12791
      :                          @10678 [@dyn 976]
146284: 3a 08 78 12 03           a1 = u64 [0x31278]
146289: 97 89 0d                 a2 = a1 << 0xd
146292: d3 98 08                 a1 = a1 ^ a2
146295: 98 89 07                 a2 = a1 >> 0x7
146298: d3 89 09                 a2 = a2 ^ a1
146301: 97 9a 11                 a3 = a2 << 0x11
146304: 3a 08 60 11 03           a1 = u64 [0x31160]
146309: d3 9a 0a                 a3 = a3 ^ a2
146312: 3a 09 d0 11 03           a2 = u64 [0x311d0]
146317: ca 8a 0b                 a4 = a3 * a1
146320: 3e 0a 78 12 03           u64 [0x31278] = a3
146325: d6 9b 0a                 a3 = a4 mulhu a2
146328: c9 ab 0c                 a5 = a4 - a3
146331: 98 cc 01                 a5 = a5 >> 0x1
146334: c8 ca 0a                 a3 = a3 + a5
146337: 98 ac 06                 a5 = a3 >> 0x6
146340: 33 03 65                 t1 = 0x65
146343: ca 3c 0c                 a5 = a5 * t1
146346: 3a 06 78 12 03           s1 = u64 [0x31278]
146351: c9 cb 0b                 a4 = a4 - a5
146354: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
146357: 97 6c 0d                 a5 = s1 << 0xd
146360: d3 c6 06                 s1 = s1 ^ a5
146363: 98 6c 07                 a5 = s1 >> 0x7
146366: d3 c6 06                 s1 = s1 ^ a5
146369: 97 6c 11                 a5 = s1 << 0x11
146372: d3 6c 0c                 a5 = a5 ^ s1
146375: ca 8c 0b                 a4 = a5 * a1
146378: 3e 0c 78 12 03           u64 [0x31278] = a5
146383: d6 9b 0c                 a5 = a4 mulhu a2
146386: c9 cb 06                 s1 = a4 - a5
146389: 98 66 01                 s1 = s1 >> 0x1
146392: c8 6c 0c                 a5 = a5 + s1
146395: 98 cc 06                 a5 = a5 >> 0x6
146398: ca 3c 0c                 a5 = a5 * t1
146401: 3a 06 78 12 03           s1 = u64 [0x31278]
146406: c9 cb 0b                 a4 = a4 - a5
146409: 95 bc ce                 a5 = a4 + 0xffffffffffffffce
146412: 97 6b 0d                 a4 = s1 << 0xd
146415: d3 b6 06                 s1 = s1 ^ a4
146418: 98 6b 07                 a4 = s1 >> 0x7
146421: d3 b6 06                 s1 = s1 ^ a4
146424: 97 6b 11                 a4 = s1 << 0x11
146427: d3 6b 0b                 a4 = a4 ^ s1
146430: ca 8b 0a                 a3 = a4 * a1
146433: 3e 0b 78 12 03           u64 [0x31278] = a4
146438: d6 9a 0b                 a4 = a3 mulhu a2
146441: c9 ba 06                 s1 = a3 - a4
146444: 98 66 01                 s1 = s1 >> 0x1
146447: c8 6b 0b                 a4 = a4 + s1
146450: 98 bb 06                 a4 = a4 >> 0x6
146453: ca 3b 0b                 a4 = a4 * t1
146456: 3a 06 78 12 03           s1 = u64 [0x31278]
146461: c9 ba 0a                 a3 = a3 - a4
146464: 95 aa ce                 a3 = a3 + 0xffffffffffffffce
146467: 97 6b 0d                 a4 = s1 << 0xd
146470: d3 b6 06                 s1 = s1 ^ a4
146473: 98 6b 07                 a4 = s1 >> 0x7
146476: d3 b6 06                 s1 = s1 ^ a4
146479: 97 6b 11                 a4 = s1 << 0x11
146482: d3 6b 0b                 a4 = a4 ^ s1
146485: ca 8b 08                 a1 = a4 * a1
146488: 3e 0b 78 12 03           u64 [0x31278] = a4
146493: d6 98 07                 a0 = a1 mulhu a2
146496: c9 78 09                 a2 = a1 - a0
146499: 98 99 01                 a2 = a2 >> 0x1
146502: c8 97 07                 a0 = a0 + a2
146505: 98 77 06                 a0 = a0 >> 0x6
146508: ca 37 07                 a0 = a0 * t1
146511: c9 78 08                 a1 = a1 - a0
146514: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
146517: 7b 1c 10 02              u64 [sp + 0x210] = a5
146521: 7b 12 08 02              u64 [sp + 0x208] = t0
146525: 7b 1a 18 02              u64 [sp + 0x218] = a3
146529: 7b 17 20 02              u64 [sp + 0x220] = a0
146533: 95 17 08 02              a0 = sp + 0x208
146537: 95 16 08 02              s1 = sp + 0x208
146541: 28 7f 30 ff              jump @7399
      :                          @10679
146545: 7b 17 20 01              u64 [sp + 0x120] = a0
146549: 7b 16 38 02              u64 [sp + 0x238] = s1
146553: 33 07 e2 00              a0 = 0xe2
146557: 7b 17 40 02              u64 [sp + 0x240] = a0
146561: 95 17 20 01              a0 = sp + 0x120
146565: 7b 17 48 02              u64 [sp + 0x248] = a0
146569: 33 07 28 0c              a0 = 0xc28
146573: 7b 17 50 02              u64 [sp + 0x250] = a0
146577: 33 07 58 17 01           a0 = 0x11758
146582: 7b 17 90 02              u64 [sp + 0x290] = a0
146586: 49 21 98 02 02           u64 [sp + 664] = 0x2
146591: 49 21 b0 02              u64 [sp + 688] = 0
146595: 95 18 38 02              a1 = sp + 0x238
146599: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
146603: 49 21 a8 02 02           u64 [sp + 680] = 0x2
146608: 95 17 e0 01              a0 = sp + 0x1e0
146612: 95 18 90 02              a1 = sp + 0x290
146616: 50 20 a2 07 87 12 fe     ra = 1954, jump @1491
      :                          @10680 [@dyn 977]
146623: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
146627: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
146631: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
146635: 7b 17 70                 u64 [sp + 0x70] = a0
146638: 33 07 02                 a0 = 0x2
146641: 33 08                    a1 = 0
146643: 33 09                    a2 = 0
146645: 64 6a                    a3 = s1
146647: 33 00 a4 07              ra = 0x7a4
146651: 0a 64                    ecalli 100 // 'log'
146653: 01                       fallthrough
      :                          @10681 [@dyn 978]
146654: 82 1c 70                 a5 = u64 [sp + 0x70]
146657: 82 17 68                 a0 = u64 [sp + 0x68]
146660: c8 c7 07                 a0 = a0 + a5
146663: 55 37 00 00 ff 0a        jump @10683 if a0 >=u 4294901760
      :                          @10682
146669: 28 d9 a4 00              jump @12856
      :                          @10683
146673: 33 07 c0 22 03           a0 = 0x322c0
146678: 95 77 00 00 01           a0 = a0 + 0x10000
146683: 01                       fallthrough
      :                          @10684
146684: 82 78                    a1 = u64 [a0]
146686: c9 87 09                 a2 = a0 - a1
146689: aa 69 07                 jump @10686 if a2 == s1
      :                          @10685
146692: 28 c2 a4 00              jump @12856
      :                          @10686
146696: c9 c8 09                 a2 = a1 - a5
146699: 01                       fallthrough
      :                          @10687
146700: 82 7a                    a3 = u64 [a0]
146702: ab 8a ee                 jump @10684 if a3 != a1
      :                          @10688
146705: 7b 79                    u64 [a0] = a2
146707: 33 0b                    a4 = 0
146709: 01                       fallthrough
      :                          @10689
146710: ab 8a e6                 jump @10684 if a3 != a1
      :                          @10690
146713: 28 ad a4 00              jump @12856
      :                          @10691 [@dyn 979]
146717: 3a 07 60 11 03           a0 = u64 [0x31160]
146722: 7b 17 70                 u64 [sp + 0x70] = a0
146725: 49 21 90 02              u64 [sp + 656] = 0
146729: 49 21 98 02 08           u64 [sp + 664] = 0x8
146734: 49 21 a0 02              u64 [sp + 672] = 0
146738: 95 17 c8 01              a0 = sp + 0x1c8
146742: 95 18 90 02              a1 = sp + 0x290
146746: 33 00 a8 07              ra = 0x7a8
146750: 95 11 b8                 sp = sp + 0xffffffffffffffb8
146753: 7b 10 40                 u64 [sp + 0x40] = ra
146756: 7b 15 38                 u64 [sp + 0x38] = s0
146759: 7b 16 30                 u64 [sp + 0x30] = s1
146762: 7b 18 08                 u64 [sp + 0x8] = a1
146765: 33 03 c0 22 03           t1 = 0x322c0
146770: 33 02 00 00 01           t0 = 0x10000
146775: c8 23 09                 a2 = t1 + t0
146778: 28 dc 1b fe              jump @1709
      :                          @10692 [@dyn 980]
146782: 33 03                    t1 = 0
146784: 33 02                    t0 = 0
146786: 33 00 78 12 03           ra = 0x31278
146791: 3a 07 e0 11 03           a0 = u64 [0x311e0]
146796: 7b 17 60                 u64 [sp + 0x60] = a0
146799: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
146809: 7b 17 58                 u64 [sp + 0x58] = a0
146812: 28 7d                    jump @10697
      :                          @10693
146814: 7b 1a 38                 u64 [sp + 0x38] = a3
146817: 7b 17 30                 u64 [sp + 0x30] = a0
146820: 50 20 aa 07 7c 16 fe     ra = 1962, jump @1605
      :                          @10694 [@dyn 981]
146827: 82 1c 30                 a5 = u64 [sp + 0x30]
146830: 82 1a 38                 a3 = u64 [sp + 0x38]
146833: 33 00 78 12 03           ra = 0x31278
146838: 82 13 40                 t1 = u64 [sp + 0x40]
146841: 82 12 48                 t0 = u64 [sp + 0x48]
146844: 82 c8 10                 a1 = u64 [a5 + 0x10]
146847: 01                       fallthrough
      :                          @10695
146848: 82 19 70                 a2 = u64 [sp + 0x70]
146851: ca 96 07                 a0 = s1 * a2
146854: ca 9a 09                 a2 = a3 * a2
146857: 82 1a 60                 a3 = u64 [sp + 0x60]
146860: d6 a7 0a                 a3 = a0 mulhu a3
146863: c9 a7 0b                 a4 = a0 - a3
146866: 98 bb 01                 a4 = a4 >> 0x1
146869: c8 ba 0a                 a3 = a3 + a4
146872: 98 aa 04                 a3 = a3 >> 0x4
146875: 96 aa 15                 a3 = a3 * 0x15
146878: c9 a7 07                 a0 = a0 - a3
146881: 82 1a 58                 a3 = u64 [sp + 0x58]
146884: d6 a9 0a                 a3 = a2 mulhu a3
146887: 98 aa 03                 a3 = a3 >> 0x3
146890: 82 cb 08                 a4 = u64 [a5 + 0x8]
146893: 33 06 0a                 s1 = 0xa
146896: ca 6a 0a                 a3 = a3 * s1
146899: c9 a9 09                 a2 = a2 - a3
146902: 97 8a 04                 a3 = a1 << 0x4
146905: c8 ba 0a                 a3 = a3 + a4
146908: 7b a9                    u64 [a3] = a2
146910: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
146913: 7b a7 08                 u64 [a3 + 0x8] = a0
146916: 95 88 01                 a1 = a1 + 0x1
146919: 7b c8 10                 u64 [a5 + 0x10] = a1
146922: 95 33 18                 t1 = t1 + 0x18
146925: 95 22 01                 t0 = t0 + 0x1
146928: 52 23 f0 00 09           jump @10697 if t1 != 240
      :                          @10696
146933: 28 e5 9c 00              jump @12720
      :                          @10697
146937: 3a 07 78 12 03           a0 = u64 [0x31278]
146942: 97 78 0d                 a1 = a0 << 0xd
146945: d3 87 07                 a0 = a0 ^ a1
146948: 98 78 07                 a1 = a0 >> 0x7
146951: d3 87 07                 a0 = a0 ^ a1
146954: 97 78 11                 a1 = a0 << 0x11
146957: d3 78 0a                 a3 = a1 ^ a0
146960: 3e 0a 78 12 03           u64 [0x31278] = a3
146965: 3a 07 78 12 03           a0 = u64 [0x31278]
146970: 97 78 0d                 a1 = a0 << 0xd
146973: d3 87 07                 a0 = a0 ^ a1
146976: 98 78 07                 a1 = a0 >> 0x7
146979: d3 87 07                 a0 = a0 ^ a1
146982: 97 76 11                 s1 = a0 << 0x11
146985: d3 76 06                 s1 = s1 ^ a0
146988: 3e 06 78 12 03           u64 [0x31278] = s1
146993: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
146997: ac 82 07                 jump @10699 if t0 <u a1
      :                          @10698
147000: 28 92 b5 00              jump @13214
      :                          @10699
147004: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
147008: c8 37 04                 t2 = a0 + t1
147011: 82 48 10                 a1 = u64 [t2 + 0x10]
147014: 82 49                    a2 = u64 [t2]
147016: 7b 12 48                 u64 [sp + 0x48] = t0
147019: 7b 13 40                 u64 [sp + 0x40] = t1
147022: ab 98 29                 jump @10702 if a1 != a2
      :                          @10700
147025: 64 47                    a0 = t2
147027: 7b 1a 38                 u64 [sp + 0x38] = a3
147030: 7b 14 30                 u64 [sp + 0x30] = t2
147033: 50 20 ac 07 a7 15 fe     ra = 1964, jump @1605
      :                          @10701 [@dyn 982]
147040: 82 1a 38                 a3 = u64 [sp + 0x38]
147043: 33 00 78 12 03           ra = 0x31278
147048: 82 13 40                 t1 = u64 [sp + 0x40]
147051: 82 12 48                 t0 = u64 [sp + 0x48]
147054: 82 17 30                 a0 = u64 [sp + 0x30]
147057: 64 74                    t2 = a0
147059: 82 78 10                 a1 = u64 [a0 + 0x10]
147062: 01                       fallthrough
      :                          @10702
147063: 82 19 70                 a2 = u64 [sp + 0x70]
147066: ca 96 07                 a0 = s1 * a2
147069: ca 9a 09                 a2 = a3 * a2
147072: 82 1a 60                 a3 = u64 [sp + 0x60]
147075: d6 a7 0a                 a3 = a0 mulhu a3
147078: c9 a7 0b                 a4 = a0 - a3
147081: 98 bb 01                 a4 = a4 >> 0x1
147084: c8 ba 0a                 a3 = a3 + a4
147087: 98 aa 04                 a3 = a3 >> 0x4
147090: 96 aa 15                 a3 = a3 * 0x15
147093: c9 a7 07                 a0 = a0 - a3
147096: 82 1a 58                 a3 = u64 [sp + 0x58]
147099: d6 a9 0a                 a3 = a2 mulhu a3
147102: 98 aa 03                 a3 = a3 >> 0x3
147105: 82 4b 08                 a4 = u64 [t2 + 0x8]
147108: 96 aa 0a                 a3 = a3 * 0xa
147111: c9 a9 09                 a2 = a2 - a3
147114: 97 8a 04                 a3 = a1 << 0x4
147117: c8 ba 0a                 a3 = a3 + a4
147120: 7b a9                    u64 [a3] = a2
147122: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
147125: 7b a7 08                 u64 [a3 + 0x8] = a0
147128: 95 88 01                 a1 = a1 + 0x1
147131: 7b 48 10                 u64 [t2 + 0x10] = a1
147134: 3a 07 78 12 03           a0 = u64 [0x31278]
147139: 97 78 0d                 a1 = a0 << 0xd
147142: d3 87 07                 a0 = a0 ^ a1
147145: 98 78 07                 a1 = a0 >> 0x7
147148: d3 87 07                 a0 = a0 ^ a1
147151: 97 78 11                 a1 = a0 << 0x11
147154: d3 78 0a                 a3 = a1 ^ a0
147157: 3e 0a 78 12 03           u64 [0x31278] = a3
147162: 3a 07 78 12 03           a0 = u64 [0x31278]
147167: 97 78 0d                 a1 = a0 << 0xd
147170: d3 87 07                 a0 = a0 ^ a1
147173: 98 78 07                 a1 = a0 >> 0x7
147176: d3 87 07                 a0 = a0 ^ a1
147179: 97 76 11                 s1 = a0 << 0x11
147182: d3 76 06                 s1 = s1 ^ a0
147185: 3e 06 78 12 03           u64 [0x31278] = s1
147190: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
147194: ac 82 07                 jump @10704 if t0 <u a1
      :                          @10703
147197: 28 cd b4 00              jump @13214
      :                          @10704
147201: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
147205: c8 37 07                 a0 = a0 + t1
147208: 82 78 10                 a1 = u64 [a0 + 0x10]
147211: 82 79                    a2 = u64 [a0]
147213: ab 98 26                 jump @10707 if a1 != a2
      :                          @10705
147216: 7b 1a 38                 u64 [sp + 0x38] = a3
147219: 7b 17 30                 u64 [sp + 0x30] = a0
147222: 50 20 ae 07 ea 14 fe     ra = 1966, jump @1605
      :                          @10706 [@dyn 983]
147229: 82 1c 30                 a5 = u64 [sp + 0x30]
147232: 82 1a 38                 a3 = u64 [sp + 0x38]
147235: 33 00 78 12 03           ra = 0x31278
147240: 82 13 40                 t1 = u64 [sp + 0x40]
147243: 82 12 48                 t0 = u64 [sp + 0x48]
147246: 82 c8 10                 a1 = u64 [a5 + 0x10]
147249: 28 05                    jump @10708
      :                          @10707
147251: 64 7c                    a5 = a0
147253: 01                       fallthrough
      :                          @10708
147254: 82 19 70                 a2 = u64 [sp + 0x70]
147257: ca 96 07                 a0 = s1 * a2
147260: ca 9a 09                 a2 = a3 * a2
147263: 82 1a 60                 a3 = u64 [sp + 0x60]
147266: d6 a7 0a                 a3 = a0 mulhu a3
147269: c9 a7 0b                 a4 = a0 - a3
147272: 98 bb 01                 a4 = a4 >> 0x1
147275: c8 ba 0a                 a3 = a3 + a4
147278: 98 aa 04                 a3 = a3 >> 0x4
147281: 96 aa 15                 a3 = a3 * 0x15
147284: c9 a7 07                 a0 = a0 - a3
147287: 82 1a 58                 a3 = u64 [sp + 0x58]
147290: d6 a9 0a                 a3 = a2 mulhu a3
147293: 98 aa 03                 a3 = a3 >> 0x3
147296: 82 cb 08                 a4 = u64 [a5 + 0x8]
147299: 96 aa 0a                 a3 = a3 * 0xa
147302: c9 a9 09                 a2 = a2 - a3
147305: 97 8a 04                 a3 = a1 << 0x4
147308: c8 ba 0a                 a3 = a3 + a4
147311: 7b a9                    u64 [a3] = a2
147313: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
147316: 7b a7 08                 u64 [a3 + 0x8] = a0
147319: 95 88 01                 a1 = a1 + 0x1
147322: 7b c8 10                 u64 [a5 + 0x10] = a1
147325: 3a 07 78 12 03           a0 = u64 [0x31278]
147330: 97 78 0d                 a1 = a0 << 0xd
147333: d3 87 07                 a0 = a0 ^ a1
147336: 98 78 07                 a1 = a0 >> 0x7
147339: d3 87 07                 a0 = a0 ^ a1
147342: 97 78 11                 a1 = a0 << 0x11
147345: d3 78 0a                 a3 = a1 ^ a0
147348: 3e 0a 78 12 03           u64 [0x31278] = a3
147353: 3a 07 78 12 03           a0 = u64 [0x31278]
147358: 97 78 0d                 a1 = a0 << 0xd
147361: d3 87 07                 a0 = a0 ^ a1
147364: 98 78 07                 a1 = a0 >> 0x7
147367: d3 87 07                 a0 = a0 ^ a1
147370: 97 76 11                 s1 = a0 << 0x11
147373: d3 76 06                 s1 = s1 ^ a0
147376: 3e 06 78 12 03           u64 [0x31278] = s1
147381: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
147385: ac 82 07                 jump @10710 if t0 <u a1
      :                          @10709
147388: 28 0e b4 00              jump @13214
      :                          @10710
147392: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
147396: c8 37 07                 a0 = a0 + t1
147399: 82 78 10                 a1 = u64 [a0 + 0x10]
147402: 82 79                    a2 = u64 [a0]
147404: aa 98 b2 fd              jump @10693 if a1 == a2
      :                          @10711
147408: 64 7c                    a5 = a0
147410: 28 ce fd                 jump @10695
      :                          @10712 [@dyn 984]
147413: 3a 06 60 11 03           s1 = u64 [0x31160]
147418: 95 17 90 02              a0 = sp + 0x290
147422: 33 09 04                 a2 = 0x4
147425: 33 08                    a1 = 0
147427: 50 20 b2 07 06 24 fe     ra = 1970, jump @1877
      :                          @10713 [@dyn 985]
147434: 95 17 e0 01              a0 = sp + 0x1e0
147438: 95 18 90 02              a1 = sp + 0x290
147442: 33 09 04                 a2 = 0x4
147445: 50 20 b4 07 1f 1e fe     ra = 1972, jump @1783
      :                          @10714 [@dyn 986]
147452: 33 03                    t1 = 0
147454: 33 0b 10                 a4 = 0x10
147457: 3a 02 e0 11 03           t0 = u64 [0x311e0]
147462: 01                       fallthrough
      :                          @10715
147463: 3a 07 78 12 03           a0 = u64 [0x31278]
147468: 97 78 0d                 a1 = a0 << 0xd
147471: d3 87 07                 a0 = a0 ^ a1
147474: 98 78 07                 a1 = a0 >> 0x7
147477: d3 87 07                 a0 = a0 ^ a1
147480: 97 79 11                 a2 = a0 << 0x11
147483: d3 79 09                 a2 = a2 ^ a0
147486: 3e 09 78 12 03           u64 [0x31278] = a2
147491: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
147495: ac 83 07                 jump @10717 if t1 <u a1
      :                          @10716
147498: 28 9f b3 00              jump @13213
      :                          @10717
147502: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
147506: c8 b8 08                 a1 = a1 + a4
147509: 82 87                    a0 = u64 [a1]
147511: 52 07 07                 jump @10719 if a0 != 0
      :                          @10718
147514: 28 ba b3 00              jump @13252
      :                          @10719
147518: ca 69 07                 a0 = a2 * s1
147521: d6 27 09                 a2 = a0 mulhu t0
147524: c9 97 0a                 a3 = a0 - a2
147527: 98 aa 01                 a3 = a3 >> 0x1
147530: c8 a9 09                 a2 = a2 + a3
147533: 98 99 04                 a2 = a2 >> 0x4
147536: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
147539: 96 99 15                 a2 = a2 * 0x15
147542: c9 97 07                 a0 = a0 - a2
147545: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
147548: 7b 87                    u64 [a1] = a0
147550: 3a 07 78 12 03           a0 = u64 [0x31278]
147555: 97 78 0d                 a1 = a0 << 0xd
147558: d3 87 07                 a0 = a0 ^ a1
147561: 98 78 07                 a1 = a0 >> 0x7
147564: d3 87 07                 a0 = a0 ^ a1
147567: 97 7a 11                 a3 = a0 << 0x11
147570: d3 7a 0a                 a3 = a3 ^ a0
147573: 3e 0a 78 12 03           u64 [0x31278] = a3
147578: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
147582: ac 83 07                 jump @10721 if t1 <u a1
      :                          @10720
147585: 28 48 b3 00              jump @13213
      :                          @10721
147589: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
147593: c8 b8 08                 a1 = a1 + a4
147596: 82 89                    a2 = u64 [a1]
147598: 55 19 02 08              jump @10723 if a2 >=u 2
      :                          @10722
147602: 28 40 b3 00              jump @13220
      :                          @10723
147606: ca 6a 07                 a0 = a3 * s1
147609: d6 27 09                 a2 = a0 mulhu t0
147612: c9 97 0a                 a3 = a0 - a2
147615: 98 aa 01                 a3 = a3 >> 0x1
147618: c8 a9 09                 a2 = a2 + a3
147621: 98 99 04                 a2 = a2 >> 0x4
147624: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
147627: 96 99 15                 a2 = a2 * 0x15
147630: c9 97 07                 a0 = a0 - a2
147633: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
147636: 7b 87 08                 u64 [a1 + 0x8] = a0
147639: 3a 07 78 12 03           a0 = u64 [0x31278]
147644: 97 78 0d                 a1 = a0 << 0xd
147647: d3 87 07                 a0 = a0 ^ a1
147650: 98 78 07                 a1 = a0 >> 0x7
147653: d3 87 07                 a0 = a0 ^ a1
147656: 97 7a 11                 a3 = a0 << 0x11
147659: d3 7a 0a                 a3 = a3 ^ a0
147662: 3e 0a 78 12 03           u64 [0x31278] = a3
147667: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
147671: ac 83 07                 jump @10725 if t1 <u a1
      :                          @10724
147674: 28 ef b2 00              jump @13213
      :                          @10725
147678: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
147682: c8 b8 08                 a1 = a1 + a4
147685: 82 89                    a2 = u64 [a1]
147687: 55 19 03 08              jump @10727 if a2 >=u 3
      :                          @10726
147691: 28 e8 b2 00              jump @13221
      :                          @10727
147695: ca 6a 07                 a0 = a3 * s1
147698: d6 27 09                 a2 = a0 mulhu t0
147701: c9 97 0a                 a3 = a0 - a2
147704: 98 aa 01                 a3 = a3 >> 0x1
147707: c8 a9 09                 a2 = a2 + a3
147710: 98 99 04                 a2 = a2 >> 0x4
147713: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
147716: 96 99 15                 a2 = a2 * 0x15
147719: c9 97 07                 a0 = a0 - a2
147722: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
147725: 7b 87 10                 u64 [a1 + 0x10] = a0
147728: 3a 07 78 12 03           a0 = u64 [0x31278]
147733: 97 78 0d                 a1 = a0 << 0xd
147736: d3 87 07                 a0 = a0 ^ a1
147739: 98 78 07                 a1 = a0 >> 0x7
147742: d3 87 07                 a0 = a0 ^ a1
147745: 97 78 11                 a1 = a0 << 0x11
147748: d3 78 04                 t2 = a1 ^ a0
147751: 3e 04 78 12 03           u64 [0x31278] = t2
147756: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
147760: ac 83 07                 jump @10729 if t1 <u a1
      :                          @10728
147763: 28 96 b2 00              jump @13213
      :                          @10729
147767: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
147771: c8 b7 0a                 a3 = a0 + a4
147774: 82 a9                    a2 = u64 [a3]
147776: 55 19 04 08              jump @10731 if a2 >=u 4
      :                          @10730
147780: 28 90 b2 00              jump @13222
      :                          @10731
147784: 64 60                    ra = s1
147786: ca 64 06                 s1 = t2 * s1
147789: d6 26 0c                 a5 = s1 mulhu t0
147792: c9 c6 09                 a2 = s1 - a5
147795: 98 99 01                 a2 = a2 >> 0x1
147798: c8 c9 09                 a2 = a2 + a5
147801: 98 99 04                 a2 = a2 >> 0x4
147804: 82 aa f8                 a3 = u64 [a3 + 0xfffffffffffffff8]
147807: 96 99 15                 a2 = a2 * 0x15
147810: c9 96 06                 s1 = s1 - a2
147813: 95 66 f6                 s1 = s1 + 0xfffffffffffffff6
147816: 7b a6 18                 u64 [a3 + 0x18] = s1
147819: 64 06                    s1 = ra
147821: 95 bb 18                 a4 = a4 + 0x18
147824: 95 33 01                 t1 = t1 + 0x1
147827: 33 0c 78 12 03           a5 = 0x31278
147832: 33 09 70                 a2 = 0x70
147835: ab 9b 8c fe              jump @10715 if a4 != a2
      :                          @10732
147839: 50 20 b6 07 b8 2c ff     ra = 1974, jump @7422
      :                          @10733 [@dyn 987]
147846: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
147850: 7b 18 20 01              u64 [sp + 0x120] = a1
147854: 95 17 e0 01              a0 = sp + 0x1e0
147858: 7b 17 90 02              u64 [sp + 0x290] = a0
147862: 33 07 40 02              a0 = 0x240
147866: 7b 17 98 02              u64 [sp + 0x298] = a0
147870: 95 17 c8 01              a0 = sp + 0x1c8
147874: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
147878: 33 07 28 0c              a0 = 0xc28
147882: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
147886: 95 18 20 01              a1 = sp + 0x120
147890: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
147894: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
147898: 33 07 c8 17 01           a0 = 0x117c8
147903: 7b 17 38 02              u64 [sp + 0x238] = a0
147907: 49 21 40 02 04           u64 [sp + 576] = 0x4
147912: 49 21 58 02              u64 [sp + 600] = 0
147916: 95 17 90 02              a0 = sp + 0x290
147920: 7b 17 48 02              u64 [sp + 0x248] = a0
147924: 49 21 50 02 03           u64 [sp + 592] = 0x3
147929: 95 17 08 02              a0 = sp + 0x208
147933: 95 18 38 02              a1 = sp + 0x238
147937: 50 20 b8 07 5e 0d fe     ra = 1976, jump @1491
      :                          @10734 [@dyn 988]
147944: 82 16 10 02              s1 = u64 [sp + 0x210]
147948: 82 1b 18 02              a4 = u64 [sp + 0x218]
147952: 82 17 08 02              a0 = u64 [sp + 0x208]
147956: 7b 17 70                 u64 [sp + 0x70] = a0
147959: 33 07 02                 a0 = 0x2
147962: 33 08                    a1 = 0
147964: 33 09                    a2 = 0
147966: 64 6a                    a3 = s1
147968: 33 00 ba 07              ra = 0x7ba
147972: 0a 64                    ecalli 100 // 'log'
147974: 01                       fallthrough
      :                          @10735 [@dyn 989]
147975: 82 1c 70                 a5 = u64 [sp + 0x70]
147978: 82 17 68                 a0 = u64 [sp + 0x68]
147981: c8 c7 07                 a0 = a0 + a5
147984: 33 08 00 00 ff           a1 = 0xffffffffffff0000
147989: ae 87 07                 jump @10737 if a0 >=u a1
      :                          @10736
147992: 28 77 9c 00              jump @12791
      :                          @10737
147996: 33 07 c0 22 03           a0 = 0x322c0
148001: 95 77 00 00 01           a0 = a0 + 0x10000
148006: 01                       fallthrough
      :                          @10738
148007: 82 78                    a1 = u64 [a0]
148009: c9 87 09                 a2 = a0 - a1
148012: aa 69 07                 jump @10740 if a2 == s1
      :                          @10739
148015: 28 60 9c 00              jump @12791
      :                          @10740
148019: c9 c8 09                 a2 = a1 - a5
148022: 01                       fallthrough
      :                          @10741
148023: 82 7a                    a3 = u64 [a0]
148025: ab 8a ee                 jump @10738 if a3 != a1
      :                          @10742
148028: 7b 79                    u64 [a0] = a2
148030: 33 0b                    a4 = 0
148032: 01                       fallthrough
      :                          @10743
148033: ab 8a e6                 jump @10738 if a3 != a1
      :                          @10744
148036: 28 4b 9c 00              jump @12791
      :                          @10745 [@dyn 990]
148040: 3a 08 78 12 03           a1 = u64 [0x31278]
148045: 97 89 0d                 a2 = a1 << 0xd
148048: d3 98 08                 a1 = a1 ^ a2
148051: 98 89 07                 a2 = a1 >> 0x7
148054: d3 98 08                 a1 = a1 ^ a2
148057: 97 89 11                 a2 = a1 << 0x11
148060: d3 98 08                 a1 = a1 ^ a2
148063: 3a 09 60 11 03           a2 = u64 [0x31160]
148068: 3a 0a 68 11 03           a3 = u64 [0x31168]
148073: 3e 08 78 12 03           u64 [0x31278] = a1
148078: ca 98 07                 a0 = a1 * a2
148081: 98 78 03                 a1 = a0 >> 0x3
148084: d6 a8 08                 a1 = a1 mulhu a3
148087: 98 88 04                 a1 = a1 >> 0x4
148090: 96 88 e8 03              a1 = a1 * 0x3e8
148094: c9 87 07                 a0 = a0 - a1
148097: 86 77 01                 a0 = a0 | 0x1
148100: 50 20 be 07 29 2c ff     ra = 1982, jump @7435
      :                          @10746 [@dyn 991]
148107: 7b 17 08 02              u64 [sp + 0x208] = a0
148111: 7b 18 10 02              u64 [sp + 0x210] = a1
148115: 95 17 08 02              a0 = sp + 0x208
148119: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
148123: 33 07 4a 02              a0 = 0x24a
148127: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
148131: 33 07 20 18 01           a0 = 0x11820
148136: 7b 17 90 02              u64 [sp + 0x290] = a0
148140: 49 21 98 02 01           u64 [sp + 664] = 0x1
148145: 49 21 b0 02              u64 [sp + 688] = 0
148149: 95 18 e0 01              a1 = sp + 0x1e0
148153: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
148157: 49 21 a8 02 01           u64 [sp + 680] = 0x1
148162: 95 17 38 02              a0 = sp + 0x238
148166: 95 18 90 02              a1 = sp + 0x290
148170: 50 20 c0 07 75 0c fe     ra = 1984, jump @1491
      :                          @10747 [@dyn 992]
148177: 82 16 40 02              s1 = u64 [sp + 0x240]
148181: 82 1b 48 02              a4 = u64 [sp + 0x248]
148185: 82 17 38 02              a0 = u64 [sp + 0x238]
148189: 7b 17 70                 u64 [sp + 0x70] = a0
148192: 33 07 02                 a0 = 0x2
148195: 33 08                    a1 = 0
148197: 33 09                    a2 = 0
148199: 64 6a                    a3 = s1
148201: 33 00 c2 07              ra = 0x7c2
148205: 0a 64                    ecalli 100 // 'log'
148207: 01                       fallthrough
      :                          @10748 [@dyn 993]
148208: 82 1c 70                 a5 = u64 [sp + 0x70]
148211: 82 17 68                 a0 = u64 [sp + 0x68]
148214: c8 c7 07                 a0 = a0 + a5
148217: 55 37 00 00 ff 0a        jump @10750 if a0 >=u 4294901760
      :                          @10749
148223: 28 c7 9e 00              jump @12856
      :                          @10750
148227: 33 07 c0 22 03           a0 = 0x322c0
148232: 95 77 00 00 01           a0 = a0 + 0x10000
148237: 01                       fallthrough
      :                          @10751
148238: 82 78                    a1 = u64 [a0]
148240: c9 87 09                 a2 = a0 - a1
148243: aa 69 07                 jump @10753 if a2 == s1
      :                          @10752
148246: 28 b0 9e 00              jump @12856
      :                          @10753
148250: c9 c8 09                 a2 = a1 - a5
148253: 01                       fallthrough
      :                          @10754
148254: 82 7a                    a3 = u64 [a0]
148256: ab 8a ee                 jump @10751 if a3 != a1
      :                          @10755
148259: 7b 79                    u64 [a0] = a2
148261: 33 0b                    a4 = 0
148263: 01                       fallthrough
      :                          @10756
148264: ab 8a e6                 jump @10751 if a3 != a1
      :                          @10757
148267: 28 9b 9e 00              jump @12856
      :                          @10758 [@dyn 994]
148271: 95 17 40 01              a0 = sp + 0x140
148275: 33 00 c6 07              ra = 0x7c6
148279: 95 11 f8                 sp = sp + 0xfffffffffffffff8
148282: 7b 15                    u64 [sp] = s0
148284: 33 03 c0 22 03           t1 = 0x322c0
148289: 33 02 00 00 01           t0 = 0x10000
148294: c8 23 04                 t2 = t1 + t0
148297: 28 4d 39 fe              jump @2270
      :                          @10759 [@dyn 995]
148301: 82 18 50 01              a1 = u64 [sp + 0x150]
148305: 7b 18 58                 u64 [sp + 0x58] = a1
148308: 82 16 48 01              s1 = u64 [sp + 0x148]
148312: 68 87                    a0 = clz a1
148314: 9a 7a 40                 a3 = 0x40 - a0
148317: 64 67                    a0 = s1
148319: 33 09                    a2 = 0
148321: 50 20 c8 07 2b e8 fd     ra = 1992, jump @879
      :                          @10760 [@dyn 996]
148328: 82 17 40 01              a0 = u64 [sp + 0x140]
148332: 7b 17 60                 u64 [sp + 0x60] = a0
148335: 3a 08 78 12 03           a1 = u64 [0x31278]
148340: 97 89 0d                 a2 = a1 << 0xd
148343: d3 98 08                 a1 = a1 ^ a2
148346: 98 89 07                 a2 = a1 >> 0x7
148349: 3a 0a 60 11 03           a3 = u64 [0x31160]
148354: d3 98 08                 a1 = a1 ^ a2
148357: 97 89 11                 a2 = a1 << 0x11
148360: d3 98 08                 a1 = a1 ^ a2
148363: ca a8 09                 a2 = a1 * a3
148366: 3a 0b b0 11 03           a4 = u64 [0x311b0]
148371: 3e 08 78 12 03           u64 [0x31278] = a1
148376: 98 98 02                 a1 = a2 >> 0x2
148379: d6 b8 08                 a1 = a1 mulhu a4
148382: 98 88 02                 a1 = a1 >> 0x2
148385: 3a 0c 78 12 03           a5 = u64 [0x31278]
148390: 96 88 64                 a1 = a1 * 0x64
148393: c9 89 08                 a1 = a2 - a1
148396: 97 c9 0d                 a2 = a5 << 0xd
148399: d3 c9 09                 a2 = a2 ^ a5
148402: 98 9c 07                 a5 = a2 >> 0x7
148405: d3 c9 09                 a2 = a2 ^ a5
148408: 97 9c 11                 a5 = a2 << 0x11
148411: d3 c9 09                 a2 = a2 ^ a5
148414: ca a9 0a                 a3 = a2 * a3
148417: 3e 09 78 12 03           u64 [0x31278] = a2
148422: 98 a7 02                 a0 = a3 >> 0x2
148425: d6 b7 07                 a0 = a0 mulhu a4
148428: 98 77 02                 a0 = a0 >> 0x2
148431: 96 77 64                 a0 = a0 * 0x64
148434: c9 7a 0a                 a3 = a3 - a0
148437: e6 a8 09                 a2 = minu(a1, a3)
148440: e4 a8 0a                 a3 = maxu(a1, a3)
148443: 7b 19 c8 01              u64 [sp + 0x1c8] = a2
148447: 7b 1a 20 01              u64 [sp + 0x120] = a3
148451: 7b 16 70                 u64 [sp + 0x70] = s1
148454: 64 67                    a0 = s1
148456: 82 18 58                 a1 = u64 [sp + 0x58]
148459: 50 20 ca 07 81 4a ff     ra = 1994, jump @8024
      :                          @10761 [@dyn 997]
148466: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
148470: 95 17 c8 01              a0 = sp + 0x1c8
148474: 7b 17 90 02              u64 [sp + 0x290] = a0
148478: 33 07 94 0c              a0 = 0xc94
148482: 7b 17 98 02              u64 [sp + 0x298] = a0
148486: 95 18 20 01              a1 = sp + 0x120
148490: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
148494: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
148498: 95 17 e0 01              a0 = sp + 0x1e0
148502: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
148506: 33 07 28 0c              a0 = 0xc28
148510: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
148514: 33 07 50 18 01           a0 = 0x11850
148519: 7b 17 38 02              u64 [sp + 0x238] = a0
148523: 49 21 40 02 03           u64 [sp + 576] = 0x3
148528: 49 21 58 02              u64 [sp + 600] = 0
148532: 95 18 90 02              a1 = sp + 0x290
148536: 7b 18 48 02              u64 [sp + 0x248] = a1
148540: 49 21 50 02 03           u64 [sp + 592] = 0x3
148545: 95 17 08 02              a0 = sp + 0x208
148549: 95 18 38 02              a1 = sp + 0x238
148553: 50 20 cc 07 f6 0a fe     ra = 1996, jump @1491
      :                          @10762 [@dyn 998]
148560: 82 16 10 02              s1 = u64 [sp + 0x210]
148564: 82 1b 18 02              a4 = u64 [sp + 0x218]
148568: 82 17 08 02              a0 = u64 [sp + 0x208]
148572: 7b 17 58                 u64 [sp + 0x58] = a0
148575: 33 07 02                 a0 = 0x2
148578: 33 08                    a1 = 0
148580: 33 09                    a2 = 0
148582: 64 6a                    a3 = s1
148584: 33 00 ce 07              ra = 0x7ce
148588: 0a 64                    ecalli 100 // 'log'
148590: 01                       fallthrough
      :                          @10763 [@dyn 999]
148591: 82 1c 58                 a5 = u64 [sp + 0x58]
148594: 82 17 68                 a0 = u64 [sp + 0x68]
148597: c8 c7 07                 a0 = a0 + a5
148600: 53 37 00 00 ff 25        jump @10769 if a0 <u 4294901760
      :                          @10764
148606: 33 07 c0 22 03           a0 = 0x322c0
148611: 95 77 00 00 01           a0 = a0 + 0x10000
148616: 01                       fallthrough
      :                          @10765
148617: 82 78                    a1 = u64 [a0]
148619: c9 87 09                 a2 = a0 - a1
148622: ab 69 0f                 jump @10769 if a2 != s1
      :                          @10766
148625: c9 c8 09                 a2 = a1 - a5
148628: 01                       fallthrough
      :                          @10767
148629: 82 7a                    a3 = u64 [a0]
148631: ab 8a f2                 jump @10765 if a3 != a1
      :                          @10768
148634: 7b 79                    u64 [a0] = a2
148636: 01                       fallthrough
      :                          @10769
148637: 82 17 60                 a0 = u64 [sp + 0x60]
148640: 52 07 07                 jump @10771 if a0 != 0
      :                          @10770
148643: 28 23 9d 00              jump @12856
      :                          @10771
148647: 82 18 60                 a1 = u64 [sp + 0x60]
148650: 54 28 00 20 09           jump @10773 if a1 <=u 8192
      :                          @10772
148655: 28 17 9d 00              jump @12856
      :                          @10773
148659: 82 17 60                 a0 = u64 [sp + 0x60]
148662: 97 77 03                 a0 = a0 << 0x3
148665: 33 08 c0 22 03           a1 = 0x322c0
148670: 95 88 00 00 01           a1 = a1 + 0x10000
148675: 01                       fallthrough
      :                          @10774
148676: 82 89                    a2 = u64 [a1]
148678: c9 98 0a                 a3 = a1 - a2
148681: 82 1b 70                 a4 = u64 [sp + 0x70]
148684: aa ba 07                 jump @10776 if a3 == a4
      :                          @10775
148687: 28 f7 9c 00              jump @12856
      :                          @10776
148691: c9 79 0a                 a3 = a2 - a0
148694: 01                       fallthrough
      :                          @10777
148695: 82 8b                    a4 = u64 [a1]
148697: ab 9b eb                 jump @10774 if a4 != a2
      :                          @10778
148700: 7b 8a                    u64 [a1] = a3
148702: 33 0c                    a5 = 0
148704: 01                       fallthrough
      :                          @10779
148705: ab 9b e3                 jump @10774 if a4 != a2
      :                          @10780
148708: 28 e2 9c 00              jump @12856
      :                          @10781 [@dyn 1000]
148712: 3a 08 78 12 03           a1 = u64 [0x31278]
148717: 97 89 0d                 a2 = a1 << 0xd
148720: d3 98 08                 a1 = a1 ^ a2
148723: 98 89 07                 a2 = a1 >> 0x7
148726: d3 98 08                 a1 = a1 ^ a2
148729: 97 89 11                 a2 = a1 << 0x11
148732: d3 98 08                 a1 = a1 ^ a2
148735: 3a 09 60 11 03           a2 = u64 [0x31160]
148740: 3a 0a d8 11 03           a3 = u64 [0x311d8]
148745: 3e 08 78 12 03           u64 [0x31278] = a1
148750: ca 98 07                 a0 = a1 * a2
148753: d6 a7 08                 a1 = a0 mulhu a3
148756: 98 88 13                 a1 = a1 >> 0x13
148759: 96 88 a5 98 0f           a1 = a1 * 0xf98a5
148764: c9 87 07                 a0 = a0 - a1
148767: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
148771: ca 77 07                 a0 = a0 * a0
148774: 14 08 e1 19 ee 07 6a 10 00 00 a1 = 0x106a07ee19e1
148784: d6 87 08                 a1 = a0 mulhu a1
148787: 96 88 a5 98 0f           a1 = a1 * 0xf98a5
148792: c9 87 08                 a1 = a0 - a1
148795: 7b 18 20 01              u64 [sp + 0x120] = a1
148799: 95 17 e0 01              a0 = sp + 0x1e0
148803: 95 16 e0 01              s1 = sp + 0x1e0
148807: 33 00 d2 07              ra = 0x7d2
148811: 95 11 90                 sp = sp + 0xffffffffffffff90
148814: 7b 10 68                 u64 [sp + 0x68] = ra
148817: 7b 15 60                 u64 [sp + 0x60] = s0
148820: 7b 16 58                 u64 [sp + 0x58] = s1
148823: 3a 09 18 11 03           a2 = u64 [0x31118]
148828: 64 85                    s0 = a1
148830: 7b 17 20                 u64 [sp + 0x20] = a0
148833: d6 98 07                 a0 = a1 mulhu a2
148836: 98 77 09                 a0 = a0 >> 0x9
148839: 96 77 f1 03              a0 = a0 * 0x3f1
148843: c9 75 07                 a0 = s0 - a0
148846: 33 08 f1 03              a1 = 0x3f1
148850: 33 00 46 04              ra = 0x446
148854: 28 fe 56 fe              jump @2781
      :                          @10782 [@dyn 1001]
148858: 95 17 c8 01              a0 = sp + 0x1c8
148862: 7b 17 90 02              u64 [sp + 0x290] = a0
148866: 33 07 28 0c              a0 = 0xc28
148870: 7b 17 98 02              u64 [sp + 0x298] = a0
148874: 95 18 20 01              a1 = sp + 0x120
148878: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
148882: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
148886: 7b 16 b0 02              u64 [sp + 0x2b0] = s1
148890: 33 07 20 02              a0 = 0x220
148894: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
148898: 33 07 88 18 01           a0 = 0x11888
148903: 7b 17 38 02              u64 [sp + 0x238] = a0
148907: 49 21 40 02 03           u64 [sp + 576] = 0x3
148912: 49 21 58 02              u64 [sp + 600] = 0
148916: 95 18 90 02              a1 = sp + 0x290
148920: 7b 18 48 02              u64 [sp + 0x248] = a1
148924: 49 21 50 02 03           u64 [sp + 592] = 0x3
148929: 95 17 08 02              a0 = sp + 0x208
148933: 95 18 38 02              a1 = sp + 0x238
148937: 50 20 d4 07 76 09 fe     ra = 2004, jump @1491
      :                          @10783 [@dyn 1002]
148944: 82 16 10 02              s1 = u64 [sp + 0x210]
148948: 82 1b 18 02              a4 = u64 [sp + 0x218]
148952: 82 17 08 02              a0 = u64 [sp + 0x208]
148956: 7b 17 70                 u64 [sp + 0x70] = a0
148959: 33 07 02                 a0 = 0x2
148962: 33 08                    a1 = 0
148964: 33 09                    a2 = 0
148966: 64 6a                    a3 = s1
148968: 33 00 d6 07              ra = 0x7d6
148972: 0a 64                    ecalli 100 // 'log'
148974: 01                       fallthrough
      :                          @10784 [@dyn 1003]
148975: 82 1c 70                 a5 = u64 [sp + 0x70]
148978: 82 17 68                 a0 = u64 [sp + 0x68]
148981: c8 c7 07                 a0 = a0 + a5
148984: 53 37 00 00 ff 25        jump @10790 if a0 <u 4294901760
      :                          @10785
148990: 33 07 c0 22 03           a0 = 0x322c0
148995: 95 77 00 00 01           a0 = a0 + 0x10000
149000: 01                       fallthrough
      :                          @10786
149001: 82 78                    a1 = u64 [a0]
149003: c9 87 09                 a2 = a0 - a1
149006: ab 69 0f                 jump @10790 if a2 != s1
      :                          @10787
149009: c9 c8 09                 a2 = a1 - a5
149012: 01                       fallthrough
      :                          @10788
149013: 82 7a                    a3 = u64 [a0]
149015: ab 8a f2                 jump @10786 if a3 != a1
      :                          @10789
149018: 7b 79                    u64 [a0] = a2
149020: 01                       fallthrough
      :                          @10790
149021: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
149025: 52 08 07                 jump @10792 if a1 != 0
      :                          @10791
149028: 28 a2 9b 00              jump @12856
      :                          @10792
149032: 54 28 00 20 09           jump @10794 if a1 <=u 8192
      :                          @10793
149037: 28 99 9b 00              jump @12856
      :                          @10794
149041: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
149045: 97 88 03                 a1 = a1 << 0x3
149048: 33 09 c0 22 03           a2 = 0x322c0
149053: 95 99 00 00 01           a2 = a2 + 0x10000
149058: 01                       fallthrough
      :                          @10795
149059: 82 9a                    a3 = u64 [a2]
149061: c9 a9 0b                 a4 = a2 - a3
149064: aa 7b 07                 jump @10797 if a4 == a0
      :                          @10796
149067: 28 7b 9b 00              jump @12856
      :                          @10797
149071: c9 8a 0b                 a4 = a3 - a1
149074: 01                       fallthrough
      :                          @10798
149075: 82 9c                    a5 = u64 [a2]
149077: ab ac ee                 jump @10795 if a5 != a3
      :                          @10799
149080: 7b 9b                    u64 [a2] = a4
149082: 33 06                    s1 = 0
149084: 01                       fallthrough
      :                          @10800
149085: ab ac e6                 jump @10795 if a5 != a3
      :                          @10801
149088: 28 66 9b 00              jump @12856
      :                          @10802 [@dyn 1004]
149092: 95 17 90 02              a0 = sp + 0x290
149096: 33 00 da 07              ra = 0x7da
149100: 95 11 b8                 sp = sp + 0xffffffffffffffb8
149103: 7b 10 40                 u64 [sp + 0x40] = ra
149106: 7b 15 38                 u64 [sp + 0x38] = s0
149109: 7b 16 30                 u64 [sp + 0x30] = s1
149112: 7b 17 10                 u64 [sp + 0x10] = a0
149115: 33 07 c0 22 03           a0 = 0x322c0
149120: 33 02 00 00 01           t0 = 0x10000
149125: c8 27 09                 a2 = a0 + t0
149128: 28 46 2d ff              jump @7500
      :                          @10803 [@dyn 1005]
149132: 82 17 90 02              a0 = u64 [sp + 0x290]
149136: 7b 17 60                 u64 [sp + 0x60] = a0
149139: 82 17 98 02              a0 = u64 [sp + 0x298]
149143: 7b 17 70                 u64 [sp + 0x70] = a0
149146: 82 16 a0 02              s1 = u64 [sp + 0x2a0]
149150: 82 17 a8 02              a0 = u64 [sp + 0x2a8]
149154: 7b 17 58                 u64 [sp + 0x58] = a0
149157: 82 17 b0 02              a0 = u64 [sp + 0x2b0]
149161: 7b 17 48                 u64 [sp + 0x48] = a0
149164: 95 17 20 01              a0 = sp + 0x120
149168: 33 00 dc 07              ra = 0x7dc
149172: 33 0a c0 22 03           a3 = 0x322c0
149177: 33 02 00 00 01           t0 = 0x10000
149182: c8 2a 0a                 a3 = a3 + t0
149185: 28 0c 31 fe              jump @2204
      :                          @10804 [@dyn 1006]
149189: 64 69                    a2 = s1
149191: 82 17 30 01              a0 = u64 [sp + 0x130]
149195: e6 67 02                 t0 = minu(a0, s1)
149198: 52 02 07                 jump @10806 if t0 != 0
      :                          @10805
149201: 28 db 9e 00              jump @12929
      :                          @10806
149205: 82 16 28 01              s1 = u64 [sp + 0x128]
149209: 33 0c                    a5 = 0
149211: 82 18 70                 a1 = u64 [sp + 0x70]
149214: 64 87                    a0 = a1
149216: 01                       fallthrough
      :                          @10807
149217: 7c 6a                    a3 = u8 [s1]
149219: 82 7b                    a4 = u64 [a0]
149221: ca ab 0a                 a3 = a4 * a3
149224: c8 ac 0c                 a5 = a5 + a3
149227: 95 77 08                 a0 = a0 + 0x8
149230: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
149233: 95 66 01                 s1 = s1 + 0x1
149236: 52 02 ed                 jump @10807 if t0 != 0
      :                          @10808
149239: 28 bb 9e 00              jump @12930
      :                          @10809 [@dyn 1007]
149243: 33 07 18                 a0 = 0x18
149246: 50 20 e0 07 f8 08 fe     ra = 2016, jump @1509
      :                          @10810 [@dyn 1008]
149253: 64 76                    s1 = a0
149255: 49 06 01                 u64 [s1 + 0] = 0x1
149258: 49 16 08 01              u64 [s1 + 8] = 0x1
149262: 49 16 10 01              u64 [s1 + 16] = 0x1
149266: 33 07 18                 a0 = 0x18
149269: 50 20 e2 07 e1 08 fe     ra = 2018, jump @1509
      :                          @10811 [@dyn 1009]
149276: 64 7b                    a4 = a0
149278: 49 07                    u64 [a0 + 0] = 0
149280: 49 1b 08 01              u64 [a4 + 8] = 0x1
149284: 49 1b 10 01              u64 [a4 + 16] = 0x1
149288: 3a 08 78 12 03           a1 = u64 [0x31278]
149293: 97 89 0d                 a2 = a1 << 0xd
149296: d3 98 08                 a1 = a1 ^ a2
149299: 98 89 07                 a2 = a1 >> 0x7
149302: d3 98 08                 a1 = a1 ^ a2
149305: 3a 09 60 11 03           a2 = u64 [0x31160]
149310: 97 8a 11                 a3 = a1 << 0x11
149313: d3 a8 08                 a1 = a1 ^ a3
149316: ca 98 09                 a2 = a1 * a2
149319: 3e 08 78 12 03           u64 [0x31278] = a1
149324: 14 07 89 88 88 88 88 88 88 88 a0 = 0x8888888888888889
149334: d6 79 07                 a0 = a2 mulhu a0
149337: 98 77 04                 a0 = a0 >> 0x4
149340: 96 77 1e                 a0 = a0 * 0x1e
149343: c9 79 09                 a2 = a2 - a0
149346: 7b 19 20 01              u64 [sp + 0x120] = a2
149350: 7b 16 70                 u64 [sp + 0x70] = s1
149353: 64 67                    a0 = s1
149355: 7b 1b 60                 u64 [sp + 0x60] = a4
149358: 64 b8                    a1 = a4
149360: 50 20 e4 07 83 32 ff     ra = 2020, jump @7575
      :                          @10812 [@dyn 1010]
149367: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
149371: 95 17 20 01              a0 = sp + 0x120
149375: 7b 17 38 02              u64 [sp + 0x238] = a0
149379: 33 07 28 0c              a0 = 0xc28
149383: 7b 17 40 02              u64 [sp + 0x240] = a0
149387: 95 17 e0 01              a0 = sp + 0x1e0
149391: 7b 17 48 02              u64 [sp + 0x248] = a0
149395: 33 07 94 0c              a0 = 0xc94
149399: 7b 17 50 02              u64 [sp + 0x250] = a0
149403: 33 07 08 19 01           a0 = 0x11908
149408: 7b 17 90 02              u64 [sp + 0x290] = a0
149412: 49 21 98 02 02           u64 [sp + 664] = 0x2
149417: 49 21 b0 02              u64 [sp + 688] = 0
149421: 95 18 38 02              a1 = sp + 0x238
149425: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
149429: 49 21 a8 02 02           u64 [sp + 680] = 0x2
149434: 95 17 08 02              a0 = sp + 0x208
149438: 95 18 90 02              a1 = sp + 0x290
149442: 50 20 e6 07 7d 07 fe     ra = 2022, jump @1491
      :                          @10813 [@dyn 1011]
149449: 82 16 10 02              s1 = u64 [sp + 0x210]
149453: 82 1b 18 02              a4 = u64 [sp + 0x218]
149457: 82 17 08 02              a0 = u64 [sp + 0x208]
149461: 7b 17 58                 u64 [sp + 0x58] = a0
149464: 33 07 02                 a0 = 0x2
149467: 33 08                    a1 = 0
149469: 33 09                    a2 = 0
149471: 64 6a                    a3 = s1
149473: 33 00 e8 07              ra = 0x7e8
149477: 0a 64                    ecalli 100 // 'log'
149479: 01                       fallthrough
      :                          @10814 [@dyn 1012]
149480: 82 1c 58                 a5 = u64 [sp + 0x58]
149483: 82 17 68                 a0 = u64 [sp + 0x68]
149486: c8 c7 07                 a0 = a0 + a5
149489: 53 37 00 00 ff 27        jump @10820 if a0 <u 4294901760
      :                          @10815
149495: 33 07 c0 22 03           a0 = 0x322c0
149500: 95 77 00 00 01           a0 = a0 + 0x10000
149505: 01                       fallthrough
      :                          @10816
149506: 82 78                    a1 = u64 [a0]
149508: c9 87 09                 a2 = a0 - a1
149511: ab 69 11                 jump @10820 if a2 != s1
      :                          @10817
149514: c9 c8 09                 a2 = a1 - a5
149517: 01                       fallthrough
      :                          @10818
149518: 82 7a                    a3 = u64 [a0]
149520: ab 8a f2                 jump @10816 if a3 != a1
      :                          @10819
149523: 7b 79                    u64 [a0] = a2
149525: 33 0b                    a4 = 0
149527: 01                       fallthrough
      :                          @10820
149528: 33 07 c0 22 03           a0 = 0x322c0
149533: 95 77 00 00 01           a0 = a0 + 0x10000
149538: 82 1c 60                 a5 = u64 [sp + 0x60]
149541: 01                       fallthrough
      :                          @10821
149542: 82 78                    a1 = u64 [a0]
149544: c9 87 09                 a2 = a0 - a1
149547: ab c9 11                 jump @10825 if a2 != a5
      :                          @10822
149550: 95 89 e8                 a2 = a1 + 0xffffffffffffffe8
149553: 01                       fallthrough
      :                          @10823
149554: 82 7a                    a3 = u64 [a0]
149556: ab 8a f2                 jump @10821 if a3 != a1
      :                          @10824
149559: 7b 79                    u64 [a0] = a2
149561: 33 0b                    a4 = 0
149563: 01                       fallthrough
      :                          @10825
149564: 33 07 c0 22 03           a0 = 0x322c0
149569: 95 77 00 00 01           a0 = a0 + 0x10000
149574: 82 1c 70                 a5 = u64 [sp + 0x70]
149577: 01                       fallthrough
      :                          @10826
149578: 82 78                    a1 = u64 [a0]
149580: c9 87 09                 a2 = a0 - a1
149583: aa c9 07                 jump @10828 if a2 == a5
      :                          @10827
149586: 28 74 99 00              jump @12856
      :                          @10828
149590: 95 89 e8                 a2 = a1 + 0xffffffffffffffe8
149593: 01                       fallthrough
      :                          @10829
149594: 82 7a                    a3 = u64 [a0]
149596: ab 8a ee                 jump @10826 if a3 != a1
      :                          @10830
149599: 7b 79                    u64 [a0] = a2
149601: 33 0b                    a4 = 0
149603: 01                       fallthrough
      :                          @10831
149604: ab 8a e6                 jump @10826 if a3 != a1
      :                          @10832
149607: 28 5f 99 00              jump @12856
      :                          @10833 [@dyn 1013]
149611: 33 03 78 12 03           t1 = 0x31278
149616: 3a 08 78 12 03           a1 = u64 [0x31278]
149621: 97 89 0d                 a2 = a1 << 0xd
149624: d3 98 08                 a1 = a1 ^ a2
149627: 98 89 07                 a2 = a1 >> 0x7
149630: 3a 0b 60 11 03           a4 = u64 [0x31160]
149635: d3 98 08                 a1 = a1 ^ a2
149638: 97 89 11                 a2 = a1 << 0x11
149641: d3 98 08                 a1 = a1 ^ a2
149644: ca b8 09                 a2 = a1 * a4
149647: 3e 08 78 12 03           u64 [0x31278] = a1
149652: 14 0c cd cc cc cc cc cc cc cc a5 = 0xcccccccccccccccd
149662: d6 c9 08                 a1 = a2 mulhu a5
149665: 98 88 03                 a1 = a1 >> 0x3
149668: 33 02 0a                 t0 = 0xa
149671: 3a 06 78 12 03           s1 = u64 [0x31278]
149676: ca 28 08                 a1 = a1 * t0
149679: c9 89 08                 a1 = a2 - a1
149682: 97 69 0d                 a2 = s1 << 0xd
149685: d3 96 06                 s1 = s1 ^ a2
149688: 98 69 07                 a2 = s1 >> 0x7
149691: d3 96 06                 s1 = s1 ^ a2
149694: 97 69 11                 a2 = s1 << 0x11
149697: d3 69 09                 a2 = a2 ^ s1
149700: ca b9 06                 s1 = a2 * a4
149703: 3e 09 78 12 03           u64 [0x31278] = a2
149708: d6 c6 09                 a2 = s1 mulhu a5
149711: 98 99 03                 a2 = a2 >> 0x3
149714: 3a 07 78 12 03           a0 = u64 [0x31278]
149719: ca 29 09                 a2 = a2 * t0
149722: c9 96 09                 a2 = s1 - a2
149725: 97 7a 0d                 a3 = a0 << 0xd
149728: d3 a7 07                 a0 = a0 ^ a3
149731: 98 7a 07                 a3 = a0 >> 0x7
149734: d3 a7 07                 a0 = a0 ^ a3
149737: 97 7a 11                 a3 = a0 << 0x11
149740: d3 a7 07                 a0 = a0 ^ a3
149743: ca b7 0a                 a3 = a0 * a4
149746: 3e 07 78 12 03           u64 [0x31278] = a0
149751: d6 ca 07                 a0 = a3 mulhu a5
149754: 98 77 03                 a0 = a0 >> 0x3
149757: 3a 06 78 12 03           s1 = u64 [0x31278]
149762: ca 27 07                 a0 = a0 * t0
149765: c9 7a 0a                 a3 = a3 - a0
149768: 97 67 0d                 a0 = s1 << 0xd
149771: d3 76 06                 s1 = s1 ^ a0
149774: 98 67 07                 a0 = s1 >> 0x7
149777: d3 76 06                 s1 = s1 ^ a0
149780: 97 67 11                 a0 = s1 << 0x11
149783: d3 67 07                 a0 = a0 ^ s1
149786: ca b7 0b                 a4 = a0 * a4
149789: 3e 07 78 12 03           u64 [0x31278] = a0
149794: d6 cb 07                 a0 = a4 mulhu a5
149797: 98 77 04                 a0 = a0 >> 0x4
149800: 33 0c 14                 a5 = 0x14
149803: ca c7 07                 a0 = a0 * a5
149806: c9 7b 0b                 a4 = a4 - a0
149809: 95 17 38 02              a0 = sp + 0x238
149813: 95 16 38 02              s1 = sp + 0x238
149817: 33 00 ec 07              ra = 0x7ec
149821: 95 11 b8                 sp = sp + 0xffffffffffffffb8
149824: 7b 10 40                 u64 [sp + 0x40] = ra
149827: 7b 15 38                 u64 [sp + 0x38] = s0
149830: 7b 16 30                 u64 [sp + 0x30] = s1
149833: 64 b6                    s1 = a4
149835: 64 a5                    s0 = a3
149837: 7b 17 10                 u64 [sp + 0x10] = a0
149840: 95 17 18                 a0 = sp + 0x18
149843: 33 00 82 04              ra = 0x482
149847: 28 cc 41 fe              jump @2409
      :                          @10834 [@dyn 1014]
149851: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
149855: 33 07 72 02              a0 = 0x272
149859: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
149863: 33 07 38 19 01           a0 = 0x11938
149868: 7b 17 90 02              u64 [sp + 0x290] = a0
149872: 49 21 98 02 01           u64 [sp + 664] = 0x1
149877: 49 21 b0 02              u64 [sp + 688] = 0
149881: 95 18 e0 01              a1 = sp + 0x1e0
149885: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
149889: 49 21 a8 02 01           u64 [sp + 680] = 0x1
149894: 95 17 08 02              a0 = sp + 0x208
149898: 95 18 90 02              a1 = sp + 0x290
149902: 50 20 ee 07 b1 05 fe     ra = 2030, jump @1491
      :                          @10835 [@dyn 1015]
149909: 82 16 10 02              s1 = u64 [sp + 0x210]
149913: 82 1b 18 02              a4 = u64 [sp + 0x218]
149917: 82 17 08 02              a0 = u64 [sp + 0x208]
149921: 7b 17 70                 u64 [sp + 0x70] = a0
149924: 33 07 02                 a0 = 0x2
149927: 33 08                    a1 = 0
149929: 33 09                    a2 = 0
149931: 64 6a                    a3 = s1
149933: 33 00 f0 07              ra = 0x7f0
149937: 0a 64                    ecalli 100 // 'log'
149939: 01                       fallthrough
      :                          @10836 [@dyn 1016]
149940: 82 1c 70                 a5 = u64 [sp + 0x70]
149943: 82 17 68                 a0 = u64 [sp + 0x68]
149946: c8 c7 07                 a0 = a0 + a5
149949: 55 37 00 00 ff 0a        jump @10838 if a0 >=u 4294901760
      :                          @10837
149955: 28 03 98 00              jump @12856
      :                          @10838
149959: 33 07 c0 22 03           a0 = 0x322c0
149964: 95 77 00 00 01           a0 = a0 + 0x10000
149969: 01                       fallthrough
      :                          @10839
149970: 82 78                    a1 = u64 [a0]
149972: c9 87 09                 a2 = a0 - a1
149975: aa 69 07                 jump @10841 if a2 == s1
      :                          @10840
149978: 28 ec 97 00              jump @12856
      :                          @10841
149982: c9 c8 09                 a2 = a1 - a5
149985: 01                       fallthrough
      :                          @10842
149986: 82 7a                    a3 = u64 [a0]
149988: ab 8a ee                 jump @10839 if a3 != a1
      :                          @10843
149991: 7b 79                    u64 [a0] = a2
149993: 33 0b                    a4 = 0
149995: 01                       fallthrough
      :                          @10844
149996: ab 8a e6                 jump @10839 if a3 != a1
      :                          @10845
149999: 28 d7 97 00              jump @12856
      :                          @10846 [@dyn 1017]
150003: 3a 07 60 11 03           a0 = u64 [0x31160]
150008: 7b 17 70                 u64 [sp + 0x70] = a0
150011: 49 21 90 02              u64 [sp + 656] = 0
150015: 49 21 98 02 08           u64 [sp + 664] = 0x8
150020: 49 21 a0 02              u64 [sp + 672] = 0
150024: 95 17 e0 01              a0 = sp + 0x1e0
150028: 95 18 90 02              a1 = sp + 0x290
150032: 33 00 f4 07              ra = 0x7f4
150036: 95 11 b8                 sp = sp + 0xffffffffffffffb8
150039: 7b 10 40                 u64 [sp + 0x40] = ra
150042: 7b 15 38                 u64 [sp + 0x38] = s0
150045: 7b 16 30                 u64 [sp + 0x30] = s1
150048: 7b 18 08                 u64 [sp + 0x8] = a1
150051: 33 03 c0 22 03           t1 = 0x322c0
150056: 33 02 00 00 01           t0 = 0x10000
150061: c8 23 09                 a2 = t1 + t0
150064: 28 5e 0c fe              jump @1666
      :                          @10847 [@dyn 1018]
150068: 33 0c                    a5 = 0
150070: 33 0b                    a4 = 0
150072: 33 02 78 12 03           t0 = 0x31278
150077: 14 03 cd cc cc cc cc cc cc cc t1 = 0xcccccccccccccccd
150087: 33 04 0a                 t2 = 0xa
150090: 7b 13 48                 u64 [sp + 0x48] = t1
150093: 28 3b                    jump @10850
      :                          @10848
150095: 82 17 70                 a0 = u64 [sp + 0x70]
150098: ca 79 07                 a0 = a2 * a0
150101: d6 37 09                 a2 = a0 mulhu t1
150104: 98 99 03                 a2 = a2 >> 0x3
150107: 82 6a 08                 a3 = u64 [s1 + 0x8]
150110: ca 49 09                 a2 = a2 * t2
150113: c9 97 07                 a0 = a0 - a2
150116: 97 89 04                 a2 = a1 << 0x4
150119: c8 a9 09                 a2 = a2 + a3
150122: 95 77 01                 a0 = a0 + 0x1
150125: 7b 97 08                 u64 [a2 + 0x8] = a0
150128: 49 09 05                 u64 [a2 + 0] = 0x5
150131: 95 88 01                 a1 = a1 + 0x1
150134: 7b 68 10                 u64 [s1 + 0x10] = a1
150137: 95 cc 18                 a5 = a5 + 0x18
150140: 95 bb 01                 a4 = a4 + 0x1
150143: 52 2c 90 00 09           jump @10850 if a5 != 144
      :                          @10849
150148: 28 31 8f 00              jump @12702
      :                          @10850
150152: 7b 1b 60                 u64 [sp + 0x60] = a4
150155: 7b 1c 58                 u64 [sp + 0x58] = a5
150158: 51 0c 8c 00              jump @10857 if a5 == 0
      :                          @10851
150162: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
150166: ac 8b 07                 jump @10853 if a4 <u a1
      :                          @10852
150169: 28 37 a9 00              jump @13218
      :                          @10853
150173: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
150177: 3a 07 78 12 03           a0 = u64 [0x31278]
150182: c8 c6 06                 s1 = s1 + a5
150185: 97 78 0d                 a1 = a0 << 0xd
150188: d3 87 07                 a0 = a0 ^ a1
150191: 98 78 07                 a1 = a0 >> 0x7
150194: d3 87 07                 a0 = a0 ^ a1
150197: 97 78 11                 a1 = a0 << 0x11
150200: d3 78 09                 a2 = a1 ^ a0
150203: 3e 09 78 12 03           u64 [0x31278] = a2
150208: 82 68 10                 a1 = u64 [s1 + 0x10]
150211: 82 67                    a0 = u64 [s1]
150213: ab 78 27                 jump @10856 if a1 != a0
      :                          @10854
150216: 64 67                    a0 = s1
150218: 7b 19 40                 u64 [sp + 0x40] = a2
150221: 50 20 f6 07 33 09 fe     ra = 2038, jump @1605
      :                          @10855 [@dyn 1019]
150228: 82 19 40                 a2 = u64 [sp + 0x40]
150231: 33 04 0a                 t2 = 0xa
150234: 82 13 48                 t1 = u64 [sp + 0x48]
150237: 33 02 78 12 03           t0 = 0x31278
150242: 82 1c 58                 a5 = u64 [sp + 0x58]
150245: 82 1b 60                 a4 = u64 [sp + 0x60]
150248: 82 68 10                 a1 = u64 [s1 + 0x10]
150251: 01                       fallthrough
      :                          @10856
150252: 82 17 70                 a0 = u64 [sp + 0x70]
150255: ca 79 07                 a0 = a2 * a0
150258: d6 37 09                 a2 = a0 mulhu t1
150261: 98 99 03                 a2 = a2 >> 0x3
150264: ca 49 09                 a2 = a2 * t2
150267: 82 6a 08                 a3 = u64 [s1 + 0x8]
150270: c9 97 07                 a0 = a0 - a2
150273: 95 77 01                 a0 = a0 + 0x1
150276: 97 89 04                 a2 = a1 << 0x4
150279: c8 a9 09                 a2 = a2 + a3
150282: 49 09                    u64 [a2 + 0] = 0
150284: 7b 97 08                 u64 [a2 + 0x8] = a0
150287: 95 88 01                 a1 = a1 + 0x1
150290: 7b 68 10                 u64 [s1 + 0x10] = a1
150293: 51 1c 18 8e 00           jump @10863 if a5 == 24
      :                          @10857
150298: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
150302: ac 8b 07                 jump @10859 if a4 <u a1
      :                          @10858
150305: 28 af a8 00              jump @13218
      :                          @10859
150309: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
150313: 3a 07 78 12 03           a0 = u64 [0x31278]
150318: c8 c6 06                 s1 = s1 + a5
150321: 97 78 0d                 a1 = a0 << 0xd
150324: d3 87 07                 a0 = a0 ^ a1
150327: 98 78 07                 a1 = a0 >> 0x7
150330: d3 87 07                 a0 = a0 ^ a1
150333: 97 78 11                 a1 = a0 << 0x11
150336: d3 78 09                 a2 = a1 ^ a0
150339: 3e 09 78 12 03           u64 [0x31278] = a2
150344: 82 68 10                 a1 = u64 [s1 + 0x10]
150347: 82 67                    a0 = u64 [s1]
150349: ab 78 27                 jump @10862 if a1 != a0
      :                          @10860
150352: 64 67                    a0 = s1
150354: 7b 19 40                 u64 [sp + 0x40] = a2
150357: 50 20 f8 07 ab 08 fe     ra = 2040, jump @1605
      :                          @10861 [@dyn 1020]
150364: 82 19 40                 a2 = u64 [sp + 0x40]
150367: 33 04 0a                 t2 = 0xa
150370: 82 13 48                 t1 = u64 [sp + 0x48]
150373: 33 02 78 12 03           t0 = 0x31278
150378: 82 1c 58                 a5 = u64 [sp + 0x58]
150381: 82 1b 60                 a4 = u64 [sp + 0x60]
150384: 82 68 10                 a1 = u64 [s1 + 0x10]
150387: 01                       fallthrough
      :                          @10862
150388: 82 17 70                 a0 = u64 [sp + 0x70]
150391: ca 79 07                 a0 = a2 * a0
150394: d6 37 09                 a2 = a0 mulhu t1
150397: 98 99 03                 a2 = a2 >> 0x3
150400: ca 49 09                 a2 = a2 * t2
150403: 82 6a 08                 a3 = u64 [s1 + 0x8]
150406: c9 97 07                 a0 = a0 - a2
150409: 95 77 01                 a0 = a0 + 0x1
150412: 97 89 04                 a2 = a1 << 0x4
150415: c8 a9 09                 a2 = a2 + a3
150418: 49 09 01                 u64 [a2 + 0] = 0x1
150421: 7b 97 08                 u64 [a2 + 0x8] = a0
150424: 95 88 01                 a1 = a1 + 0x1
150427: 7b 68 10                 u64 [s1 + 0x10] = a1
150430: 51 1c 30 8e 00           jump @10869 if a5 == 48
      :                          @10863
150435: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
150439: ac 8b 07                 jump @10865 if a4 <u a1
      :                          @10864
150442: 28 26 a8 00              jump @13218
      :                          @10865
150446: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
150450: 3a 07 78 12 03           a0 = u64 [0x31278]
150455: c8 c6 06                 s1 = s1 + a5
150458: 97 78 0d                 a1 = a0 << 0xd
150461: d3 87 07                 a0 = a0 ^ a1
150464: 98 78 07                 a1 = a0 >> 0x7
150467: d3 87 07                 a0 = a0 ^ a1
150470: 97 78 11                 a1 = a0 << 0x11
150473: d3 78 09                 a2 = a1 ^ a0
150476: 3e 09 78 12 03           u64 [0x31278] = a2
150481: 82 68 10                 a1 = u64 [s1 + 0x10]
150484: 82 67                    a0 = u64 [s1]
150486: ab 78 27                 jump @10868 if a1 != a0
      :                          @10866
150489: 64 67                    a0 = s1
150491: 7b 19 40                 u64 [sp + 0x40] = a2
150494: 50 20 fa 07 22 08 fe     ra = 2042, jump @1605
      :                          @10867 [@dyn 1021]
150501: 82 19 40                 a2 = u64 [sp + 0x40]
150504: 33 04 0a                 t2 = 0xa
150507: 82 13 48                 t1 = u64 [sp + 0x48]
150510: 33 02 78 12 03           t0 = 0x31278
150515: 82 1c 58                 a5 = u64 [sp + 0x58]
150518: 82 1b 60                 a4 = u64 [sp + 0x60]
150521: 82 68 10                 a1 = u64 [s1 + 0x10]
150524: 01                       fallthrough
      :                          @10868
150525: 82 17 70                 a0 = u64 [sp + 0x70]
150528: ca 79 07                 a0 = a2 * a0
150531: d6 37 09                 a2 = a0 mulhu t1
150534: 98 99 03                 a2 = a2 >> 0x3
150537: ca 49 09                 a2 = a2 * t2
150540: 82 6a 08                 a3 = u64 [s1 + 0x8]
150543: c9 97 07                 a0 = a0 - a2
150546: 95 77 01                 a0 = a0 + 0x1
150549: 97 89 04                 a2 = a1 << 0x4
150552: c8 a9 09                 a2 = a2 + a3
150555: 49 09 02                 u64 [a2 + 0] = 0x2
150558: 7b 97 08                 u64 [a2 + 0x8] = a0
150561: 95 88 01                 a1 = a1 + 0x1
150564: 7b 68 10                 u64 [s1 + 0x10] = a1
150567: 51 1c 48 8e 00           jump @10875 if a5 == 72
      :                          @10869
150572: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
150576: ac 8b 07                 jump @10871 if a4 <u a1
      :                          @10870
150579: 28 9d a7 00              jump @13218
      :                          @10871
150583: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
150587: 3a 07 78 12 03           a0 = u64 [0x31278]
150592: c8 c6 06                 s1 = s1 + a5
150595: 97 78 0d                 a1 = a0 << 0xd
150598: d3 87 07                 a0 = a0 ^ a1
150601: 98 78 07                 a1 = a0 >> 0x7
150604: d3 87 07                 a0 = a0 ^ a1
150607: 97 78 11                 a1 = a0 << 0x11
150610: d3 78 09                 a2 = a1 ^ a0
150613: 3e 09 78 12 03           u64 [0x31278] = a2
150618: 82 68 10                 a1 = u64 [s1 + 0x10]
150621: 82 67                    a0 = u64 [s1]
150623: ab 78 27                 jump @10874 if a1 != a0
      :                          @10872
150626: 64 67                    a0 = s1
150628: 7b 19 40                 u64 [sp + 0x40] = a2
150631: 50 20 fc 07 99 07 fe     ra = 2044, jump @1605
      :                          @10873 [@dyn 1022]
150638: 82 19 40                 a2 = u64 [sp + 0x40]
150641: 33 04 0a                 t2 = 0xa
150644: 82 13 48                 t1 = u64 [sp + 0x48]
150647: 33 02 78 12 03           t0 = 0x31278
150652: 82 1c 58                 a5 = u64 [sp + 0x58]
150655: 82 1b 60                 a4 = u64 [sp + 0x60]
150658: 82 68 10                 a1 = u64 [s1 + 0x10]
150661: 01                       fallthrough
      :                          @10874
150662: 82 17 70                 a0 = u64 [sp + 0x70]
150665: ca 79 07                 a0 = a2 * a0
150668: d6 37 09                 a2 = a0 mulhu t1
150671: 98 99 03                 a2 = a2 >> 0x3
150674: ca 49 09                 a2 = a2 * t2
150677: 82 6a 08                 a3 = u64 [s1 + 0x8]
150680: c9 97 07                 a0 = a0 - a2
150683: 95 77 01                 a0 = a0 + 0x1
150686: 97 89 04                 a2 = a1 << 0x4
150689: c8 a9 09                 a2 = a2 + a3
150692: 49 09 03                 u64 [a2 + 0] = 0x3
150695: 7b 97 08                 u64 [a2 + 0x8] = a0
150698: 95 88 01                 a1 = a1 + 0x1
150701: 7b 68 10                 u64 [s1 + 0x10] = a1
150704: 51 1c 60 91 00           jump @10882 if a5 == 96
      :                          @10875
150709: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
150713: ac 8b 07                 jump @10877 if a4 <u a1
      :                          @10876
150716: 28 14 a7 00              jump @13218
      :                          @10877
150720: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
150724: 3a 07 78 12 03           a0 = u64 [0x31278]
150729: c8 c6 06                 s1 = s1 + a5
150732: 97 78 0d                 a1 = a0 << 0xd
150735: d3 87 07                 a0 = a0 ^ a1
150738: 98 78 07                 a1 = a0 >> 0x7
150741: d3 87 07                 a0 = a0 ^ a1
150744: 97 78 11                 a1 = a0 << 0x11
150747: d3 78 09                 a2 = a1 ^ a0
150750: 3e 09 78 12 03           u64 [0x31278] = a2
150755: 82 68 10                 a1 = u64 [s1 + 0x10]
150758: 82 67                    a0 = u64 [s1]
150760: ab 78 27                 jump @10880 if a1 != a0
      :                          @10878
150763: 64 67                    a0 = s1
150765: 7b 19 40                 u64 [sp + 0x40] = a2
150768: 50 20 fe 07 10 07 fe     ra = 2046, jump @1605
      :                          @10879 [@dyn 1023]
150775: 82 19 40                 a2 = u64 [sp + 0x40]
150778: 33 04 0a                 t2 = 0xa
150781: 82 13 48                 t1 = u64 [sp + 0x48]
150784: 33 02 78 12 03           t0 = 0x31278
150789: 82 1c 58                 a5 = u64 [sp + 0x58]
150792: 82 1b 60                 a4 = u64 [sp + 0x60]
150795: 82 68 10                 a1 = u64 [s1 + 0x10]
150798: 01                       fallthrough
      :                          @10880
150799: 82 17 70                 a0 = u64 [sp + 0x70]
150802: ca 79 07                 a0 = a2 * a0
150805: d6 37 09                 a2 = a0 mulhu t1
150808: 98 99 03                 a2 = a2 >> 0x3
150811: ca 49 09                 a2 = a2 * t2
150814: 82 6a 08                 a3 = u64 [s1 + 0x8]
150817: c9 97 07                 a0 = a0 - a2
150820: 95 77 01                 a0 = a0 + 0x1
150823: 97 89 04                 a2 = a1 << 0x4
150826: c8 a9 09                 a2 = a2 + a3
150829: 49 09 04                 u64 [a2 + 0] = 0x4
150832: 7b 97 08                 u64 [a2 + 0x8] = a0
150835: 95 88 01                 a1 = a1 + 0x1
150838: 7b 68 10                 u64 [s1 + 0x10] = a1
150841: 52 1c 78 08              jump @10882 if a5 != 120
      :                          @10881
150845: 28 78 8c 00              jump @12702
      :                          @10882
150849: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
150853: ac 8b 07                 jump @10884 if a4 <u a1
      :                          @10883
150856: 28 88 a6 00              jump @13218
      :                          @10884
150860: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
150864: 3a 07 78 12 03           a0 = u64 [0x31278]
150869: c8 c6 06                 s1 = s1 + a5
150872: 97 78 0d                 a1 = a0 << 0xd
150875: d3 87 07                 a0 = a0 ^ a1
150878: 98 78 07                 a1 = a0 >> 0x7
150881: d3 87 07                 a0 = a0 ^ a1
150884: 97 78 11                 a1 = a0 << 0x11
150887: d3 78 09                 a2 = a1 ^ a0
150890: 3e 09 78 12 03           u64 [0x31278] = a2
150895: 82 68 10                 a1 = u64 [s1 + 0x10]
150898: 82 67                    a0 = u64 [s1]
150900: ab 78 db fc              jump @10848 if a1 != a0
      :                          @10885
150904: 64 67                    a0 = s1
150906: 7b 19 40                 u64 [sp + 0x40] = a2
150909: 50 20 00 08 83 06 fe     ra = 2048, jump @1605
      :                          @10886 [@dyn 1024]
150916: 82 19 40                 a2 = u64 [sp + 0x40]
150919: 33 04 0a                 t2 = 0xa
150922: 82 13 48                 t1 = u64 [sp + 0x48]
150925: 33 02 78 12 03           t0 = 0x31278
150930: 82 1c 58                 a5 = u64 [sp + 0x58]
150933: 82 1b 60                 a4 = u64 [sp + 0x60]
150936: 82 68 10                 a1 = u64 [s1 + 0x10]
150939: 28 b4 fc                 jump @10848
      :                          @10887 [@dyn 1025]
150942: 3a 08 78 12 03           a1 = u64 [0x31278]
150947: 97 89 0d                 a2 = a1 << 0xd
150950: d3 98 08                 a1 = a1 ^ a2
150953: 98 89 07                 a2 = a1 >> 0x7
150956: d3 98 08                 a1 = a1 ^ a2
150959: 97 89 11                 a2 = a1 << 0x11
150962: d3 98 08                 a1 = a1 ^ a2
150965: 3a 09 60 11 03           a2 = u64 [0x31160]
150970: 3a 0a 68 11 03           a3 = u64 [0x31168]
150975: 3e 08 78 12 03           u64 [0x31278] = a1
150980: ca 98 07                 a0 = a1 * a2
150983: 98 78 02                 a1 = a0 >> 0x2
150986: d6 a8 08                 a1 = a1 mulhu a3
150989: 98 88 04                 a1 = a1 >> 0x4
150992: 96 88 f4 01              a1 = a1 * 0x1f4
150996: c9 87 07                 a0 = a0 - a1
150999: 86 77 01                 a0 = a0 | 0x1
151002: 95 77 02                 a0 = a0 + 0x2
151005: 50 20 04 08 95 3a ff     ra = 2052, jump @7892
      :                          @10888 [@dyn 1026]
151012: 52 07 07                 jump @10890 if a0 != 0
      :                          @10889
151015: 28 51 99 00              jump @12962
      :                          @10890
151019: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
151023: 95 17 e0 01              a0 = sp + 0x1e0
151027: 7b 17 08 02              u64 [sp + 0x208] = a0
151031: 33 07 28 0c              a0 = 0xc28
151035: 7b 17 10 02              u64 [sp + 0x210] = a0
151039: 33 07 a0 19 01           a0 = 0x119a0
151044: 7b 17 90 02              u64 [sp + 0x290] = a0
151048: 49 21 98 02 01           u64 [sp + 664] = 0x1
151053: 49 21 b0 02              u64 [sp + 688] = 0
151057: 95 18 08 02              a1 = sp + 0x208
151061: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
151065: 49 21 a8 02 01           u64 [sp + 680] = 0x1
151070: 95 17 38 02              a0 = sp + 0x238
151074: 95 18 90 02              a1 = sp + 0x290
151078: 50 20 06 08 19 01 fe     ra = 2054, jump @1491
      :                          @10891 [@dyn 1027]
151085: 82 16 40 02              s1 = u64 [sp + 0x240]
151089: 82 1b 48 02              a4 = u64 [sp + 0x248]
151093: 82 17 38 02              a0 = u64 [sp + 0x238]
151097: 7b 17 70                 u64 [sp + 0x70] = a0
151100: 33 07 02                 a0 = 0x2
151103: 33 08                    a1 = 0
151105: 33 09                    a2 = 0
151107: 64 6a                    a3 = s1
151109: 33 00 08 08              ra = 0x808
151113: 0a 64                    ecalli 100 // 'log'
151115: 01                       fallthrough
      :                          @10892 [@dyn 1028]
151116: 82 1c 70                 a5 = u64 [sp + 0x70]
151119: 82 17 68                 a0 = u64 [sp + 0x68]
151122: c8 c7 07                 a0 = a0 + a5
151125: 55 37 00 00 ff 0a        jump @10894 if a0 >=u 4294901760
      :                          @10893
151131: 28 6b 93 00              jump @12856
      :                          @10894
151135: 33 07 c0 22 03           a0 = 0x322c0
151140: 95 77 00 00 01           a0 = a0 + 0x10000
151145: 01                       fallthrough
      :                          @10895
151146: 82 78                    a1 = u64 [a0]
151148: c9 87 09                 a2 = a0 - a1
151151: aa 69 07                 jump @10897 if a2 == s1
      :                          @10896
151154: 28 54 93 00              jump @12856
      :                          @10897
151158: c9 c8 09                 a2 = a1 - a5
151161: 01                       fallthrough
      :                          @10898
151162: 82 7a                    a3 = u64 [a0]
151164: ab 8a ee                 jump @10895 if a3 != a1
      :                          @10899
151167: 7b 79                    u64 [a0] = a2
151169: 33 0b                    a4 = 0
151171: 01                       fallthrough
      :                          @10900
151172: ab 8a e6                 jump @10895 if a3 != a1
      :                          @10901
151175: 28 3f 93 00              jump @12856
      :                          @10902 [@dyn 1029]
151179: 95 17 90 02              a0 = sp + 0x290
151183: 95 16 90 02              s1 = sp + 0x290
151187: 33 00 0c 08              ra = 0x80c
151191: 95 11 b8                 sp = sp + 0xffffffffffffffb8
151194: 7b 10 40                 u64 [sp + 0x40] = ra
151197: 7b 15 38                 u64 [sp + 0x38] = s0
151200: 7b 16 30                 u64 [sp + 0x30] = s1
151203: 64 70                    ra = a0
151205: 3a 08 78 12 03           a1 = u64 [0x31278]
151210: 3a 03 38 11 03           t1 = u64 [0x31138]
151215: 97 89 0d                 a2 = a1 << 0xd
151218: d3 98 08                 a1 = a1 ^ a2
151221: 98 89 07                 a2 = a1 >> 0x7
151224: d3 98 08                 a1 = a1 ^ a2
151227: 97 89 11                 a2 = a1 << 0x11
151230: d3 98 08                 a1 = a1 ^ a2
151233: 3a 09 40 11 03           a2 = u64 [0x31140]
151238: 3e 08 78 12 03           u64 [0x31278] = a1
151243: ca 38 07                 a0 = a1 * t1
151246: 98 78 03                 a1 = a0 >> 0x3
151249: d6 98 08                 a1 = a1 mulhu a2
151252: 98 88 04                 a1 = a1 >> 0x4
151255: 96 88 e8 03              a1 = a1 * 0x3e8
151259: c9 87 07                 a0 = a0 - a1
151262: 95 79 64                 a2 = a0 + 0x64
151265: 33 07 02                 a0 = 0x2
151268: 33 0a 09                 a3 = 0x9
151271: 28 64 3b ff              jump @7926
      :                          @10903 [@dyn 1030]
151275: 82 17 90 02              a0 = u64 [sp + 0x290]
151279: 82 18 98 02              a1 = u64 [sp + 0x298]
151283: 82 19 a0 02              a2 = u64 [sp + 0x2a0]
151287: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
151291: 7b 18 20 01              u64 [sp + 0x120] = a1
151295: 7b 19 e0 01              u64 [sp + 0x1e0] = a2
151299: 95 17 c8 01              a0 = sp + 0x1c8
151303: 7b 17 90 02              u64 [sp + 0x290] = a0
151307: 33 07 28 0c              a0 = 0xc28
151311: 7b 17 98 02              u64 [sp + 0x298] = a0
151315: 95 18 20 01              a1 = sp + 0x120
151319: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
151323: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
151327: 95 18 e0 01              a1 = sp + 0x1e0
151331: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
151335: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
151339: 33 07 c0 19 01           a0 = 0x119c0
151344: 7b 17 38 02              u64 [sp + 0x238] = a0
151348: 49 21 40 02 03           u64 [sp + 576] = 0x3
151353: 49 21 58 02              u64 [sp + 600] = 0
151357: 7b 16 48 02              u64 [sp + 0x248] = s1
151361: 49 21 50 02 03           u64 [sp + 592] = 0x3
151366: 95 17 08 02              a0 = sp + 0x208
151370: 95 18 38 02              a1 = sp + 0x238
151374: 50 20 0e 08 f1 ff fd     ra = 2062, jump @1491
      :                          @10904 [@dyn 1031]
151381: 82 16 10 02              s1 = u64 [sp + 0x210]
151385: 82 1b 18 02              a4 = u64 [sp + 0x218]
151389: 82 17 08 02              a0 = u64 [sp + 0x208]
151393: 7b 17 70                 u64 [sp + 0x70] = a0
151396: 33 07 02                 a0 = 0x2
151399: 33 08                    a1 = 0
151401: 33 09                    a2 = 0
151403: 64 6a                    a3 = s1
151405: 33 00 10 08              ra = 0x810
151409: 0a 64                    ecalli 100 // 'log'
151411: 01                       fallthrough
      :                          @10905 [@dyn 1032]
151412: 82 1c 70                 a5 = u64 [sp + 0x70]
151415: 82 17 68                 a0 = u64 [sp + 0x68]
151418: c8 c7 07                 a0 = a0 + a5
151421: 55 37 00 00 ff 0a        jump @10907 if a0 >=u 4294901760
      :                          @10906
151427: 28 43 92 00              jump @12856
      :                          @10907
151431: 33 07 c0 22 03           a0 = 0x322c0
151436: 95 77 00 00 01           a0 = a0 + 0x10000
151441: 01                       fallthrough
      :                          @10908
151442: 82 78                    a1 = u64 [a0]
151444: c9 87 09                 a2 = a0 - a1
151447: aa 69 07                 jump @10910 if a2 == s1
      :                          @10909
151450: 28 2c 92 00              jump @12856
      :                          @10910
151454: c9 c8 09                 a2 = a1 - a5
151457: 01                       fallthrough
      :                          @10911
151458: 82 7a                    a3 = u64 [a0]
151460: ab 8a ee                 jump @10908 if a3 != a1
      :                          @10912
151463: 7b 79                    u64 [a0] = a2
151465: 33 0b                    a4 = 0
151467: 01                       fallthrough
      :                          @10913
151468: ab 8a e6                 jump @10908 if a3 != a1
      :                          @10914
151471: 28 17 92 00              jump @12856
      :                          @10915 [@dyn 1033]
151475: 95 17 90 02              a0 = sp + 0x290
151479: 95 16 90 02              s1 = sp + 0x290
151483: 33 00 14 08              ra = 0x814
151487: 95 11 d8                 sp = sp + 0xffffffffffffffd8
151490: 7b 10 20                 u64 [sp + 0x20] = ra
151493: 7b 15 18                 u64 [sp + 0x18] = s0
151496: 7b 16 10                 u64 [sp + 0x10] = s1
151499: 3a 08 78 12 03           a1 = u64 [0x31278]
151504: 3a 02 48 11 03           t0 = u64 [0x31148]
151509: 97 89 0d                 a2 = a1 << 0xd
151512: d3 98 08                 a1 = a1 ^ a2
151515: 98 89 07                 a2 = a1 >> 0x7
151518: d3 98 08                 a1 = a1 ^ a2
151521: 97 89 11                 a2 = a1 << 0x11
151524: d3 98 08                 a1 = a1 ^ a2
151527: 3a 09 50 11 03           a2 = u64 [0x31150]
151532: 3e 08 78 12 03           u64 [0x31278] = a1
151537: ca 28 0a                 a3 = a1 * t0
151540: 98 a8 03                 a1 = a3 >> 0x3
151543: d6 98 08                 a1 = a1 mulhu a2
151546: 98 88 04                 a1 = a1 >> 0x4
151549: 96 88 e8 03              a1 = a1 * 0x3e8
151553: c9 8a 0a                 a3 = a3 - a1
151556: 95 ac 64                 a5 = a3 + 0x64
151559: 33 08 02                 a1 = 0x2
151562: 33 09 09                 a2 = 0x9
151565: 33 06 02                 s1 = 0x2
151568: 28 5a 3b ff              jump @7956
      :                          @10916 [@dyn 1034]
151572: 82 17 90 02              a0 = u64 [sp + 0x290]
151576: 82 18 98 02              a1 = u64 [sp + 0x298]
151580: 82 19 a0 02              a2 = u64 [sp + 0x2a0]
151584: 82 1a a8 02              a3 = u64 [sp + 0x2a8]
151588: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
151592: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
151596: 7b 19 20 01              u64 [sp + 0x120] = a2
151600: 7b 1a e0 01              u64 [sp + 0x1e0] = a3
151604: 95 17 b0 01              a0 = sp + 0x1b0
151608: 7b 17 90 02              u64 [sp + 0x290] = a0
151612: 33 07 28 0c              a0 = 0xc28
151616: 7b 17 98 02              u64 [sp + 0x298] = a0
151620: 95 18 c8 01              a1 = sp + 0x1c8
151624: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
151628: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
151632: 95 18 20 01              a1 = sp + 0x120
151636: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
151640: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
151644: 95 18 e0 01              a1 = sp + 0x1e0
151648: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
151652: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
151656: 33 07 08 1a 01           a0 = 0x11a08
151661: 7b 17 38 02              u64 [sp + 0x238] = a0
151665: 49 21 40 02 04           u64 [sp + 576] = 0x4
151670: 49 21 58 02              u64 [sp + 600] = 0
151674: 7b 16 48 02              u64 [sp + 0x248] = s1
151678: 49 21 50 02 04           u64 [sp + 592] = 0x4
151683: 95 17 08 02              a0 = sp + 0x208
151687: 95 18 38 02              a1 = sp + 0x238
151691: 50 20 16 08 b4 fe fd     ra = 2070, jump @1491
      :                          @10917 [@dyn 1035]
151698: 82 16 10 02              s1 = u64 [sp + 0x210]
151702: 82 1b 18 02              a4 = u64 [sp + 0x218]
151706: 82 17 08 02              a0 = u64 [sp + 0x208]
151710: 7b 17 70                 u64 [sp + 0x70] = a0
151713: 33 07 02                 a0 = 0x2
151716: 33 08                    a1 = 0
151718: 33 09                    a2 = 0
151720: 64 6a                    a3 = s1
151722: 33 00 18 08              ra = 0x818
151726: 0a 64                    ecalli 100 // 'log'
151728: 01                       fallthrough
      :                          @10918 [@dyn 1036]
151729: 82 1c 70                 a5 = u64 [sp + 0x70]
151732: 82 17 68                 a0 = u64 [sp + 0x68]
151735: c8 c7 07                 a0 = a0 + a5
151738: 55 37 00 00 ff 0a        jump @10920 if a0 >=u 4294901760
      :                          @10919
151744: 28 06 91 00              jump @12856
      :                          @10920
151748: 33 07 c0 22 03           a0 = 0x322c0
151753: 95 77 00 00 01           a0 = a0 + 0x10000
151758: 01                       fallthrough
      :                          @10921
151759: 82 78                    a1 = u64 [a0]
151761: c9 87 09                 a2 = a0 - a1
151764: aa 69 07                 jump @10923 if a2 == s1
      :                          @10922
151767: 28 ef 90 00              jump @12856
      :                          @10923
151771: c9 c8 09                 a2 = a1 - a5
151774: 01                       fallthrough
      :                          @10924
151775: 82 7a                    a3 = u64 [a0]
151777: ab 8a ee                 jump @10921 if a3 != a1
      :                          @10925
151780: 7b 79                    u64 [a0] = a2
151782: 33 0b                    a4 = 0
151784: 01                       fallthrough
      :                          @10926
151785: ab 8a e6                 jump @10921 if a3 != a1
      :                          @10927
151788: 28 da 90 00              jump @12856
      :                          @10928 [@dyn 1037]
151792: 3a 07 60 11 03           a0 = u64 [0x31160]
151797: 7b 17 60                 u64 [sp + 0x60] = a0
151800: 33 07 f4 01              a0 = 0x1f4
151804: 33 00 1c 08              ra = 0x81c
151808: 33 09 02                 a2 = 0x2
151811: 33 0a 09                 a3 = 0x9
151814: 28 65 3b fe              jump @2441
      :                          @10929 [@dyn 1038]
151818: 64 76                    s1 = a0
151820: 33 07 64                 a0 = 0x64
151823: 33 00 1e 08              ra = 0x81e
151827: 33 09 02                 a2 = 0x2
151830: 33 0a 09                 a3 = 0x9
151833: 28 52 3b fe              jump @2441
      :                          @10930 [@dyn 1039]
151837: 7b 17 70                 u64 [sp + 0x70] = a0
151840: 64 67                    a0 = s1
151842: 50 20 20 08 78 3b fe     ra = 2080, jump @2452
      :                          @10931 [@dyn 1040]
151849: 82 13 60                 t1 = u64 [sp + 0x60]
151852: 3a 09 78 12 03           a2 = u64 [0x31278]
151857: 64 7a                    a3 = a0
151859: 97 97 0d                 a0 = a2 << 0xd
151862: d3 97 07                 a0 = a0 ^ a2
151865: 98 79 07                 a2 = a0 >> 0x7
151868: d3 97 07                 a0 = a0 ^ a2
151871: 97 79 11                 a2 = a0 << 0x11
151874: d3 97 07                 a0 = a0 ^ a2
151877: 3e 07 78 12 03           u64 [0x31278] = a0
151882: 82 18 70                 a1 = u64 [sp + 0x70]
151885: 64 82                    t0 = a1
151887: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
151890: ca 37 07                 a0 = a0 * t1
151893: cd 87 0b                 a4 = a0 %u a1
151896: 95 bb 01                 a4 = a4 + 0x1
151899: 33 0c 01                 a5 = 0x1
151902: 64 a8                    a1 = a3
151904: 64 b7                    a0 = a4
151906: 28 0f                    jump @10934
      :                          @10932
151908: 98 77 01                 a0 = a0 >> 0x1
151911: ca 88 08                 a1 = a1 * a1
151914: 52 07 07                 jump @10934 if a0 != 0
      :                          @10933
151917: 28 37 83 00              jump @12633
      :                          @10934
151921: 84 79 01                 a2 = a0 & 0x1
151924: cd 68 08                 a1 = a1 %u s1
151927: 51 09 ed                 jump @10932 if a2 == 0
      :                          @10935
151930: ca c8 09                 a2 = a1 * a5
151933: cd 69 0c                 a5 = a2 %u s1
151936: 28 e4                    jump @10932
      :                          @10936 [@dyn 1041]
151938: 33 07 08                 a0 = 0x8
151941: 50 20 24 08 71 fe fd     ra = 2084, jump @1509
      :                          @10937 [@dyn 1042]
151948: 7b 17 70                 u64 [sp + 0x70] = a0
151951: 33 06 01                 s1 = 0x1
151954: 7b 76                    u64 [a0] = s1
151956: 33 07 18                 a0 = 0x18
151959: 50 20 26 08 5f fe fd     ra = 2086, jump @1509
      :                          @10938 [@dyn 1043]
151966: 64 7b                    a4 = a0
151968: 7b 76                    u64 [a0] = s1
151970: 49 1b 08 ff              u64 [a4 + 8] = 0xffffffffffffffff
151974: 49 1b 10 ff              u64 [a4 + 16] = 0xffffffffffffffff
151978: 3a 08 78 12 03           a1 = u64 [0x31278]
151983: 97 89 0d                 a2 = a1 << 0xd
151986: d3 98 08                 a1 = a1 ^ a2
151989: 98 89 07                 a2 = a1 >> 0x7
151992: d3 98 08                 a1 = a1 ^ a2
151995: 3a 09 60 11 03           a2 = u64 [0x31160]
152000: 97 8a 11                 a3 = a1 << 0x11
152003: d3 a8 08                 a1 = a1 ^ a3
152006: ca 98 09                 a2 = a1 * a2
152009: 3e 08 78 12 03           u64 [0x31278] = a1
152014: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
152024: d6 79 07                 a0 = a2 mulhu a0
152027: 98 77 04                 a0 = a0 >> 0x4
152030: 96 77 14                 a0 = a0 * 0x14
152033: c9 79 06                 s1 = a2 - a0
152036: 7b 16 20 01              u64 [sp + 0x120] = s1
152040: 95 17 e0 01              a0 = sp + 0x1e0
152044: 82 18 70                 a1 = u64 [sp + 0x70]
152047: 7b 1b 60                 u64 [sp + 0x60] = a4
152050: 64 b9                    a2 = a4
152052: 64 6a                    a3 = s1
152054: 33 00 28 08              ra = 0x828
152058: 95 11 c8                 sp = sp + 0xffffffffffffffc8
152061: 7b 10 30                 u64 [sp + 0x30] = ra
152064: 7b 15 28                 u64 [sp + 0x28] = s0
152067: 7b 16 20                 u64 [sp + 0x20] = s1
152070: 64 90                    ra = a2
152072: 7b 18 18                 u64 [sp + 0x18] = a1
152075: 7b 17                    u64 [sp] = a0
152077: 95 a9 01                 a2 = a3 + 0x1
152080: 7b 19 08                 u64 [sp + 0x8] = a2
152083: 97 99 03                 a2 = a2 << 0x3
152086: 33 03 c0 22 03           t1 = 0x322c0
152091: 33 02 00 00 01           t0 = 0x10000
152096: c8 23 04                 t2 = t1 + t0
152099: 28 69 3b ff              jump @8002
      :                          @10939 [@dyn 1044]
152103: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
152107: ac 86 07                 jump @10941 if s1 <u a1
      :                          @10940
152110: 28 cb a1 00              jump @13257
      :                          @10941
152114: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
152118: 97 66 03                 s1 = s1 << 0x3
152121: 7b 17 58                 u64 [sp + 0x58] = a0
152124: c8 76 06                 s1 = s1 + a0
152127: 95 17 20 01              a0 = sp + 0x120
152131: 7b 17 38 02              u64 [sp + 0x238] = a0
152135: 33 07 28 0c              a0 = 0xc28
152139: 7b 17 40 02              u64 [sp + 0x240] = a0
152143: 7b 16 48 02              u64 [sp + 0x248] = s1
152147: 33 07 94 0c              a0 = 0xc94
152151: 7b 17 50 02              u64 [sp + 0x250] = a0
152155: 33 07 a0 1a 01           a0 = 0x11aa0
152160: 7b 17 90 02              u64 [sp + 0x290] = a0
152164: 49 21 98 02 02           u64 [sp + 664] = 0x2
152169: 49 21 b0 02              u64 [sp + 688] = 0
152173: 95 18 38 02              a1 = sp + 0x238
152177: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
152181: 49 21 a8 02 02           u64 [sp + 680] = 0x2
152186: 95 17 08 02              a0 = sp + 0x208
152190: 95 18 90 02              a1 = sp + 0x290
152194: 50 20 2a 08 bd fc fd     ra = 2090, jump @1491
      :                          @10942 [@dyn 1045]
152201: 82 16 10 02              s1 = u64 [sp + 0x210]
152205: 82 1b 18 02              a4 = u64 [sp + 0x218]
152209: 82 17 08 02              a0 = u64 [sp + 0x208]
152213: 7b 17 48                 u64 [sp + 0x48] = a0
152216: 33 07 02                 a0 = 0x2
152219: 33 08                    a1 = 0
152221: 33 09                    a2 = 0
152223: 64 6a                    a3 = s1
152225: 33 00 2c 08              ra = 0x82c
152229: 0a 64                    ecalli 100 // 'log'
152231: 01                       fallthrough
      :                          @10943 [@dyn 1046]
152232: 82 1c 48                 a5 = u64 [sp + 0x48]
152235: 82 17 68                 a0 = u64 [sp + 0x68]
152238: c8 c7 07                 a0 = a0 + a5
152241: 53 37 00 00 ff 27        jump @10949 if a0 <u 4294901760
      :                          @10944
152247: 33 07 c0 22 03           a0 = 0x322c0
152252: 95 77 00 00 01           a0 = a0 + 0x10000
152257: 01                       fallthrough
      :                          @10945
152258: 82 78                    a1 = u64 [a0]
152260: c9 87 09                 a2 = a0 - a1
152263: ab 69 11                 jump @10949 if a2 != s1
      :                          @10946
152266: c9 c8 09                 a2 = a1 - a5
152269: 01                       fallthrough
      :                          @10947
152270: 82 7a                    a3 = u64 [a0]
152272: ab 8a f2                 jump @10945 if a3 != a1
      :                          @10948
152275: 7b 79                    u64 [a0] = a2
152277: 33 0b                    a4 = 0
152279: 01                       fallthrough
      :                          @10949
152280: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
152284: 82 16 58                 s1 = u64 [sp + 0x58]
152287: 51 07 2a                 jump @10956 if a0 == 0
      :                          @10950
152290: 56 27 00 20 27           jump @10956 if a0 >u 8192
      :                          @10951
152295: 97 77 03                 a0 = a0 << 0x3
152298: 33 08 c0 22 03           a1 = 0x322c0
152303: 95 88 00 00 01           a1 = a1 + 0x10000
152308: 01                       fallthrough
      :                          @10952
152309: 82 89                    a2 = u64 [a1]
152311: c9 98 0a                 a3 = a1 - a2
152314: ab 6a 0f                 jump @10956 if a3 != s1
      :                          @10953
152317: c9 79 0a                 a3 = a2 - a0
152320: 01                       fallthrough
      :                          @10954
152321: 82 8b                    a4 = u64 [a1]
152323: ab 9b f2                 jump @10952 if a4 != a2
      :                          @10955
152326: 7b 8a                    u64 [a1] = a3
152328: 01                       fallthrough
      :                          @10956
152329: 33 07 c0 22 03           a0 = 0x322c0
152334: 95 77 00 00 01           a0 = a0 + 0x10000
152339: 82 1c 60                 a5 = u64 [sp + 0x60]
152342: 01                       fallthrough
      :                          @10957
152343: 82 78                    a1 = u64 [a0]
152345: c9 87 09                 a2 = a0 - a1
152348: ab c9 11                 jump @10961 if a2 != a5
      :                          @10958
152351: 95 89 e8                 a2 = a1 + 0xffffffffffffffe8
152354: 01                       fallthrough
      :                          @10959
152355: 82 7a                    a3 = u64 [a0]
152357: ab 8a f2                 jump @10957 if a3 != a1
      :                          @10960
152360: 7b 79                    u64 [a0] = a2
152362: 33 0b                    a4 = 0
152364: 01                       fallthrough
      :                          @10961
152365: 33 07 c0 22 03           a0 = 0x322c0
152370: 95 77 00 00 01           a0 = a0 + 0x10000
152375: 82 1c 70                 a5 = u64 [sp + 0x70]
152378: 01                       fallthrough
      :                          @10962
152379: 82 78                    a1 = u64 [a0]
152381: c9 87 09                 a2 = a0 - a1
152384: aa c9 07                 jump @10964 if a2 == a5
      :                          @10963
152387: 28 83 8e 00              jump @12856
      :                          @10964
152391: 95 89 f8                 a2 = a1 + 0xfffffffffffffff8
152394: 01                       fallthrough
      :                          @10965
152395: 82 7a                    a3 = u64 [a0]
152397: ab 8a ee                 jump @10962 if a3 != a1
      :                          @10966
152400: 7b 79                    u64 [a0] = a2
152402: 33 0b                    a4 = 0
152404: 01                       fallthrough
      :                          @10967
152405: ab 8a e6                 jump @10962 if a3 != a1
      :                          @10968
152408: 28 6e 8e 00              jump @12856
      :                          @10969 [@dyn 1047]
152412: 3a 09 78 12 03           a2 = u64 [0x31278]
152417: 3a 07 60 11 03           a0 = u64 [0x31160]
152422: 97 9a 0d                 a3 = a2 << 0xd
152425: d3 a9 09                 a2 = a2 ^ a3
152428: 98 9a 07                 a3 = a2 >> 0x7
152431: d3 a9 09                 a2 = a2 ^ a3
152434: 97 9a 11                 a3 = a2 << 0x11
152437: d3 a9 09                 a2 = a2 ^ a3
152440: ca 79 0a                 a3 = a2 * a0
152443: 3a 0b 68 11 03           a4 = u64 [0x31168]
152448: 3e 09 78 12 03           u64 [0x31278] = a2
152453: 98 a9 03                 a2 = a3 >> 0x3
152456: d6 b9 09                 a2 = a2 mulhu a4
152459: 98 99 04                 a2 = a2 >> 0x4
152462: 96 99 e8 03              a2 = a2 * 0x3e8
152466: c9 9a 0a                 a3 = a3 - a2
152469: 86 a9 01                 a2 = a3 | 0x1
152472: 95 99 02                 a2 = a2 + 0x2
152475: 7b 19 20 01              u64 [sp + 0x120] = a2
152479: 3a 09 78 12 03           a2 = u64 [0x31278]
152484: 97 9a 0d                 a3 = a2 << 0xd
152487: d3 a9 09                 a2 = a2 ^ a3
152490: 98 9a 07                 a3 = a2 >> 0x7
152493: d3 a9 09                 a2 = a2 ^ a3
152496: 97 9a 11                 a3 = a2 << 0x11
152499: d3 a9 09                 a2 = a2 ^ a3
152502: 3e 09 78 12 03           u64 [0x31278] = a2
152507: 82 18 20 01              a1 = u64 [sp + 0x120]
152511: 52 08 07                 jump @10971 if a1 != 0
      :                          @10970
152514: 28 18 a0 00              jump @13228
      :                          @10971
152518: ca 79 07                 a0 = a2 * a0
152521: cd 87 07                 a0 = a0 %u a1
152524: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
152528: 50 20 30 08 3c 48 fe     ra = 2096, jump @2773
      :                          @10972 [@dyn 1048]
152535: 7a 17 c8 01              u32 [sp + 0x1c8] = a0
152539: 95 17 e0 01              a0 = sp + 0x1e0
152543: 7b 17 90 02              u64 [sp + 0x290] = a0
152547: 33 07 94 0c              a0 = 0xc94
152551: 7b 17 98 02              u64 [sp + 0x298] = a0
152555: 95 17 20 01              a0 = sp + 0x120
152559: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
152563: 33 07 28 0c              a0 = 0xc28
152567: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
152571: 95 17 c8 01              a0 = sp + 0x1c8
152575: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
152579: 33 07 92 0c              a0 = 0xc92
152583: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
152587: 33 07 d8 1a 01           a0 = 0x11ad8
152592: 7b 17 38 02              u64 [sp + 0x238] = a0
152596: 49 21 40 02 03           u64 [sp + 576] = 0x3
152601: 49 21 58 02              u64 [sp + 600] = 0
152605: 95 18 90 02              a1 = sp + 0x290
152609: 7b 18 48 02              u64 [sp + 0x248] = a1
152613: 49 21 50 02 03           u64 [sp + 592] = 0x3
152618: 95 17 08 02              a0 = sp + 0x208
152622: 95 18 38 02              a1 = sp + 0x238
152626: 50 20 32 08 0d fb fd     ra = 2098, jump @1491
      :                          @10973 [@dyn 1049]
152633: 82 16 10 02              s1 = u64 [sp + 0x210]
152637: 82 1b 18 02              a4 = u64 [sp + 0x218]
152641: 82 17 08 02              a0 = u64 [sp + 0x208]
152645: 7b 17 70                 u64 [sp + 0x70] = a0
152648: 33 07 02                 a0 = 0x2
152651: 33 08                    a1 = 0
152653: 33 09                    a2 = 0
152655: 64 6a                    a3 = s1
152657: 33 00 34 08              ra = 0x834
152661: 0a 64                    ecalli 100 // 'log'
152663: 01                       fallthrough
      :                          @10974 [@dyn 1050]
152664: 82 1c 70                 a5 = u64 [sp + 0x70]
152667: 82 17 68                 a0 = u64 [sp + 0x68]
152670: c8 c7 07                 a0 = a0 + a5
152673: 55 37 00 00 ff 0a        jump @10976 if a0 >=u 4294901760
      :                          @10975
152679: 28 5f 8d 00              jump @12856
      :                          @10976
152683: 33 07 c0 22 03           a0 = 0x322c0
152688: 95 77 00 00 01           a0 = a0 + 0x10000
152693: 01                       fallthrough
      :                          @10977
152694: 82 78                    a1 = u64 [a0]
152696: c9 87 09                 a2 = a0 - a1
152699: aa 69 07                 jump @10979 if a2 == s1
      :                          @10978
152702: 28 48 8d 00              jump @12856
      :                          @10979
152706: c9 c8 09                 a2 = a1 - a5
152709: 01                       fallthrough
      :                          @10980
152710: 82 7a                    a3 = u64 [a0]
152712: ab 8a ee                 jump @10977 if a3 != a1
      :                          @10981
152715: 7b 79                    u64 [a0] = a2
152717: 33 0b                    a4 = 0
152719: 01                       fallthrough
      :                          @10982
152720: ab 8a e6                 jump @10977 if a3 != a1
      :                          @10983
152723: 28 33 8d 00              jump @12856
      :                          @10984 [@dyn 1051]
152727: 3a 08 78 12 03           a1 = u64 [0x31278]
152732: 97 89 0d                 a2 = a1 << 0xd
152735: d3 98 08                 a1 = a1 ^ a2
152738: 98 89 07                 a2 = a1 >> 0x7
152741: d3 98 08                 a1 = a1 ^ a2
152744: 97 89 11                 a2 = a1 << 0x11
152747: d3 98 08                 a1 = a1 ^ a2
152750: 3a 09 60 11 03           a2 = u64 [0x31160]
152755: 3a 0a 70 11 03           a3 = u64 [0x31170]
152760: 3e 08 78 12 03           u64 [0x31278] = a1
152765: ca 98 07                 a0 = a1 * a2
152768: 98 78 01                 a1 = a0 >> 0x1
152771: d6 a8 08                 a1 = a1 mulhu a3
152774: 98 88 04                 a1 = a1 >> 0x4
152777: 96 88 32                 a1 = a1 * 0x32
152780: c9 87 07                 a0 = a0 - a1
152783: 95 77 02                 a0 = a0 + 0x2
152786: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
152790: 50 20 38 08 46 4a fe     ra = 2104, jump @2852
      :                          @10985 [@dyn 1052]
152797: 78 17 20 01              u8 [sp + 0x120] = a0
152801: 95 17 e0 01              a0 = sp + 0x1e0
152805: 7b 17 38 02              u64 [sp + 0x238] = a0
152809: 33 07 28 0c              a0 = 0xc28
152813: 7b 17 40 02              u64 [sp + 0x240] = a0
152817: 95 17 20 01              a0 = sp + 0x120
152821: 7b 17 48 02              u64 [sp + 0x248] = a0
152825: 33 07 80 0c              a0 = 0xc80
152829: 7b 17 50 02              u64 [sp + 0x250] = a0
152833: 33 07 28 1b 01           a0 = 0x11b28
152838: 7b 17 90 02              u64 [sp + 0x290] = a0
152842: 49 21 98 02 02           u64 [sp + 664] = 0x2
152847: 49 21 b0 02              u64 [sp + 688] = 0
152851: 95 18 38 02              a1 = sp + 0x238
152855: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
152859: 49 21 a8 02 02           u64 [sp + 680] = 0x2
152864: 95 17 08 02              a0 = sp + 0x208
152868: 95 18 90 02              a1 = sp + 0x290
152872: 50 20 3a 08 17 fa fd     ra = 2106, jump @1491
      :                          @10986 [@dyn 1053]
152879: 82 16 10 02              s1 = u64 [sp + 0x210]
152883: 82 1b 18 02              a4 = u64 [sp + 0x218]
152887: 82 17 08 02              a0 = u64 [sp + 0x208]
152891: 7b 17 70                 u64 [sp + 0x70] = a0
152894: 33 07 02                 a0 = 0x2
152897: 33 08                    a1 = 0
152899: 33 09                    a2 = 0
152901: 64 6a                    a3 = s1
152903: 33 00 3c 08              ra = 0x83c
152907: 0a 64                    ecalli 100 // 'log'
152909: 01                       fallthrough
      :                          @10987 [@dyn 1054]
152910: 82 1c 70                 a5 = u64 [sp + 0x70]
152913: 82 17 68                 a0 = u64 [sp + 0x68]
152916: c8 c7 07                 a0 = a0 + a5
152919: 55 37 00 00 ff 0a        jump @10989 if a0 >=u 4294901760
      :                          @10988
152925: 28 69 8c 00              jump @12856
      :                          @10989
152929: 33 07 c0 22 03           a0 = 0x322c0
152934: 95 77 00 00 01           a0 = a0 + 0x10000
152939: 01                       fallthrough
      :                          @10990
152940: 82 78                    a1 = u64 [a0]
152942: c9 87 09                 a2 = a0 - a1
152945: aa 69 07                 jump @10992 if a2 == s1
      :                          @10991
152948: 28 52 8c 00              jump @12856
      :                          @10992
152952: c9 c8 09                 a2 = a1 - a5
152955: 01                       fallthrough
      :                          @10993
152956: 82 7a                    a3 = u64 [a0]
152958: ab 8a ee                 jump @10990 if a3 != a1
      :                          @10994
152961: 7b 79                    u64 [a0] = a2
152963: 33 0b                    a4 = 0
152965: 01                       fallthrough
      :                          @10995
152966: ab 8a e6                 jump @10990 if a3 != a1
      :                          @10996
152969: 28 3d 8c 00              jump @12856
      :                          @10997 [@dyn 1055]
152973: 3a 08 78 12 03           a1 = u64 [0x31278]
152978: 97 89 0d                 a2 = a1 << 0xd
152981: d3 89 09                 a2 = a2 ^ a1
152984: 98 9a 07                 a3 = a2 >> 0x7
152987: 3a 08 60 11 03           a1 = u64 [0x31160]
152992: d3 a9 09                 a2 = a2 ^ a3
152995: 97 9a 11                 a3 = a2 << 0x11
152998: d3 a9 09                 a2 = a2 ^ a3
153001: ca 89 0a                 a3 = a2 * a1
153004: 3e 09 78 12 03           u64 [0x31278] = a2
153009: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
153019: d6 9a 09                 a2 = a3 mulhu a2
153022: 98 99 04                 a2 = a2 >> 0x4
153025: 96 99 14                 a2 = a2 * 0x14
153028: c9 9a 0a                 a3 = a3 - a2
153031: 7b 1a b0 01              u64 [sp + 0x1b0] = a3
153035: 3a 09 78 12 03           a2 = u64 [0x31278]
153040: 97 9a 0d                 a3 = a2 << 0xd
153043: d3 a9 09                 a2 = a2 ^ a3
153046: 98 9a 07                 a3 = a2 >> 0x7
153049: d3 a9 09                 a2 = a2 ^ a3
153052: 97 9a 11                 a3 = a2 << 0x11
153055: d3 a9 09                 a2 = a2 ^ a3
153058: ca 89 08                 a1 = a2 * a1
153061: 3a 0a b0 11 03           a3 = u64 [0x311b0]
153066: 3e 09 78 12 03           u64 [0x31278] = a2
153071: 98 87 02                 a0 = a1 >> 0x2
153074: d6 a7 07                 a0 = a0 mulhu a3
153077: 98 77 02                 a0 = a0 >> 0x2
153080: 96 79 64                 a2 = a0 * 0x64
153083: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
153087: c9 98 08                 a1 = a1 - a2
153090: 95 89 01                 a2 = a1 + 0x1
153093: 7b 19 c8 01              u64 [sp + 0x1c8] = a2
153097: 33 08 01                 a1 = 0x1
153100: 50 20 40 08 45 49 fe     ra = 2112, jump @2859
      :                          @10998 [@dyn 1056]
153107: 7b 17 20 01              u64 [sp + 0x120] = a0
153111: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
153115: 95 17 b0 01              a0 = sp + 0x1b0
153119: 7b 17 90 02              u64 [sp + 0x290] = a0
153123: 33 08 28 0c              a1 = 0xc28
153127: 7b 18 98 02              u64 [sp + 0x298] = a1
153131: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
153135: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
153139: 95 17 c8 01              a0 = sp + 0x1c8
153143: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
153147: 33 07 94 0c              a0 = 0xc94
153151: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
153155: 95 18 20 01              a1 = sp + 0x120
153159: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
153163: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
153167: 95 18 e0 01              a1 = sp + 0x1e0
153171: 7b 18 d0 02              u64 [sp + 0x2d0] = a1
153175: 7b 17 d8 02              u64 [sp + 0x2d8] = a0
153179: 33 07 68 1b 01           a0 = 0x11b68
153184: 7b 17 38 02              u64 [sp + 0x238] = a0
153188: 49 21 40 02 06           u64 [sp + 576] = 0x6
153193: 49 21 58 02              u64 [sp + 600] = 0
153197: 95 17 90 02              a0 = sp + 0x290
153201: 7b 17 48 02              u64 [sp + 0x248] = a0
153205: 49 21 50 02 05           u64 [sp + 592] = 0x5
153210: 95 17 08 02              a0 = sp + 0x208
153214: 95 18 38 02              a1 = sp + 0x238
153218: 50 20 42 08 bd f8 fd     ra = 2114, jump @1491
      :                          @10999 [@dyn 1057]
153225: 82 16 10 02              s1 = u64 [sp + 0x210]
153229: 82 1b 18 02              a4 = u64 [sp + 0x218]
153233: 82 17 08 02              a0 = u64 [sp + 0x208]
153237: 7b 17 70                 u64 [sp + 0x70] = a0
153240: 33 07 02                 a0 = 0x2
153243: 33 08                    a1 = 0
153245: 33 09                    a2 = 0
153247: 64 6a                    a3 = s1
153249: 33 00 44 08              ra = 0x844
153253: 0a 64                    ecalli 100 // 'log'
153255: 01                       fallthrough
      :                          @11000 [@dyn 1058]
153256: 82 1c 70                 a5 = u64 [sp + 0x70]
153259: 82 17 68                 a0 = u64 [sp + 0x68]
153262: c8 c7 07                 a0 = a0 + a5
153265: 55 37 00 00 ff 0a        jump @11002 if a0 >=u 4294901760
      :                          @11001
153271: 28 0f 8b 00              jump @12856
      :                          @11002
153275: 33 07 c0 22 03           a0 = 0x322c0
153280: 95 77 00 00 01           a0 = a0 + 0x10000
153285: 01                       fallthrough
      :                          @11003
153286: 82 78                    a1 = u64 [a0]
153288: c9 87 09                 a2 = a0 - a1
153291: aa 69 07                 jump @11005 if a2 == s1
      :                          @11004
153294: 28 f8 8a 00              jump @12856
      :                          @11005
153298: c9 c8 09                 a2 = a1 - a5
153301: 01                       fallthrough
      :                          @11006
153302: 82 7a                    a3 = u64 [a0]
153304: ab 8a ee                 jump @11003 if a3 != a1
      :                          @11007
153307: 7b 79                    u64 [a0] = a2
153309: 33 0b                    a4 = 0
153311: 01                       fallthrough
      :                          @11008
153312: ab 8a e6                 jump @11003 if a3 != a1
      :                          @11009
153315: 28 e3 8a 00              jump @12856
      :                          @11010 [@dyn 1059]
153319: 3a 07 60 11 03           a0 = u64 [0x31160]
153324: 7b 17 70                 u64 [sp + 0x70] = a0
153327: 33 07 14                 a0 = 0x14
153330: 33 06 14                 s1 = 0x14
153333: 50 20 48 08 fb fa fd     ra = 2120, jump @1554
      :                          @11011 [@dyn 1060]
153340: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
153344: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
153348: 3a 02 b0 11 03           t0 = u64 [0x311b0]
153353: 49 21 f0 01              u64 [sp + 496] = 0
153357: 33 0c 78 12 03           a5 = 0x31278
153362: 33 03 64                 t1 = 0x64
153365: 7b 12 48                 u64 [sp + 0x48] = t0
153368: 28 48                    jump @11014
      :                          @11012
153370: 82 1a 70                 a3 = u64 [sp + 0x70]
153373: ca a9 07                 a0 = a2 * a3
153376: 98 79 02                 a2 = a0 >> 0x2
153379: d6 29 09                 a2 = a2 mulhu t0
153382: 98 99 02                 a2 = a2 >> 0x2
153385: ca 39 09                 a2 = a2 * t1
153388: c9 97 07                 a0 = a0 - a2
153391: ca ab 09                 a2 = a4 * a3
153394: 98 9a 02                 a3 = a2 >> 0x2
153397: d6 2a 0a                 a3 = a3 mulhu t0
153400: 98 aa 02                 a3 = a3 >> 0x2
153403: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
153407: ca 3a 0a                 a3 = a3 * t1
153410: c9 a9 09                 a2 = a2 - a3
153413: 97 8a 04                 a3 = a1 << 0x4
153416: c8 ba 0a                 a3 = a3 + a4
153419: 7b a7                    u64 [a3] = a0
153421: 7b a9 08                 u64 [a3 + 0x8] = a2
153424: 95 89 01                 a2 = a1 + 0x1
153427: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
153430: 7b 19 f0 01              u64 [sp + 0x1f0] = a2
153434: 52 06 06                 jump @11014 if s1 != 0
      :                          @11013
153437: 28 b2 7e                 jump @12645
      :                          @11014
153440: 3a 07 78 12 03           a0 = u64 [0x31278]
153445: 97 78 0d                 a1 = a0 << 0xd
153448: d3 87 07                 a0 = a0 ^ a1
153451: 98 78 07                 a1 = a0 >> 0x7
153454: d3 87 07                 a0 = a0 ^ a1
153457: 97 78 11                 a1 = a0 << 0x11
153460: d3 78 09                 a2 = a1 ^ a0
153463: 3e 09 78 12 03           u64 [0x31278] = a2
153468: 3a 07 78 12 03           a0 = u64 [0x31278]
153473: 97 78 0d                 a1 = a0 << 0xd
153476: d3 87 07                 a0 = a0 ^ a1
153479: 98 78 07                 a1 = a0 >> 0x7
153482: d3 87 07                 a0 = a0 ^ a1
153485: 97 78 11                 a1 = a0 << 0x11
153488: d3 78 0b                 a4 = a1 ^ a0
153491: 3e 0b 78 12 03           u64 [0x31278] = a4
153496: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
153500: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
153504: ab 78 7a ff              jump @11012 if a1 != a0
      :                          @11015
153508: 95 17 e0 01              a0 = sp + 0x1e0
153512: 7b 19 60                 u64 [sp + 0x60] = a2
153515: 7b 1b 58                 u64 [sp + 0x58] = a4
153518: 50 20 4a 08 52 fc fd     ra = 2122, jump @1605
      :                          @11016 [@dyn 1061]
153525: 82 1b 58                 a4 = u64 [sp + 0x58]
153528: 82 19 60                 a2 = u64 [sp + 0x60]
153531: 33 03 64                 t1 = 0x64
153534: 33 0c 78 12 03           a5 = 0x31278
153539: 82 12 48                 t0 = u64 [sp + 0x48]
153542: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
153546: 28 50 ff                 jump @11012
      :                          @11017 [@dyn 1062]
153549: 3a 08 78 12 03           a1 = u64 [0x31278]
153554: 97 89 0d                 a2 = a1 << 0xd
153557: d3 98 08                 a1 = a1 ^ a2
153560: 98 89 07                 a2 = a1 >> 0x7
153563: d3 98 08                 a1 = a1 ^ a2
153566: 97 89 11                 a2 = a1 << 0x11
153569: d3 98 08                 a1 = a1 ^ a2
153572: 3a 09 60 11 03           a2 = u64 [0x31160]
153577: 3a 0a 78 11 03           a3 = u64 [0x31178]
153582: 3e 08 78 12 03           u64 [0x31278] = a1
153587: ca 98 07                 a0 = a1 * a2
153590: d6 a7 08                 a1 = a0 mulhu a3
153593: 98 88 0b                 a1 = a1 >> 0xb
153596: 96 88 10 27              a1 = a1 * 0x2710
153600: c9 87 07                 a0 = a0 - a1
153603: 86 77 01                 a0 = a0 | 0x1
153606: 95 77 02                 a0 = a0 + 0x2
153609: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
153613: 50 20 4e 08 26 49 fe     ra = 2126, jump @2886
      :                          @11018 [@dyn 1063]
153620: 78 17 20 01              u8 [sp + 0x120] = a0
153624: 95 17 e0 01              a0 = sp + 0x1e0
153628: 7b 17 38 02              u64 [sp + 0x238] = a0
153632: 33 07 28 0c              a0 = 0xc28
153636: 7b 17 40 02              u64 [sp + 0x240] = a0
153640: 95 17 20 01              a0 = sp + 0x120
153644: 7b 17 48 02              u64 [sp + 0x248] = a0
153648: 33 07 80 0c              a0 = 0xc80
153652: 7b 17 50 02              u64 [sp + 0x250] = a0
153656: 33 07 38 1c 01           a0 = 0x11c38
153661: 7b 17 90 02              u64 [sp + 0x290] = a0
153665: 49 21 98 02 02           u64 [sp + 664] = 0x2
153670: 49 21 b0 02              u64 [sp + 688] = 0
153674: 95 18 38 02              a1 = sp + 0x238
153678: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
153682: 49 21 a8 02 02           u64 [sp + 680] = 0x2
153687: 95 17 08 02              a0 = sp + 0x208
153691: 95 18 90 02              a1 = sp + 0x290
153695: 50 20 50 08 e0 f6 fd     ra = 2128, jump @1491
      :                          @11019 [@dyn 1064]
153702: 82 16 10 02              s1 = u64 [sp + 0x210]
153706: 82 1b 18 02              a4 = u64 [sp + 0x218]
153710: 82 17 08 02              a0 = u64 [sp + 0x208]
153714: 7b 17 70                 u64 [sp + 0x70] = a0
153717: 33 07 02                 a0 = 0x2
153720: 33 08                    a1 = 0
153722: 33 09                    a2 = 0
153724: 64 6a                    a3 = s1
153726: 33 00 52 08              ra = 0x852
153730: 0a 64                    ecalli 100 // 'log'
153732: 01                       fallthrough
      :                          @11020 [@dyn 1065]
153733: 82 1c 70                 a5 = u64 [sp + 0x70]
153736: 82 17 68                 a0 = u64 [sp + 0x68]
153739: c8 c7 07                 a0 = a0 + a5
153742: 55 37 00 00 ff 0a        jump @11022 if a0 >=u 4294901760
      :                          @11021
153748: 28 32 89 00              jump @12856
      :                          @11022
153752: 33 07 c0 22 03           a0 = 0x322c0
153757: 95 77 00 00 01           a0 = a0 + 0x10000
153762: 01                       fallthrough
      :                          @11023
153763: 82 78                    a1 = u64 [a0]
153765: c9 87 09                 a2 = a0 - a1
153768: aa 69 07                 jump @11025 if a2 == s1
      :                          @11024
153771: 28 1b 89 00              jump @12856
      :                          @11025
153775: c9 c8 09                 a2 = a1 - a5
153778: 01                       fallthrough
      :                          @11026
153779: 82 7a                    a3 = u64 [a0]
153781: ab 8a ee                 jump @11023 if a3 != a1
      :                          @11027
153784: 7b 79                    u64 [a0] = a2
153786: 33 0b                    a4 = 0
153788: 01                       fallthrough
      :                          @11028
153789: ab 8a e6                 jump @11023 if a3 != a1
      :                          @11029
153792: 28 06 89 00              jump @12856
      :                          @11030 [@dyn 1066]
153796: 3a 08 78 12 03           a1 = u64 [0x31278]
153801: 97 89 0d                 a2 = a1 << 0xd
153804: d3 98 08                 a1 = a1 ^ a2
153807: 98 89 07                 a2 = a1 >> 0x7
153810: d3 98 08                 a1 = a1 ^ a2
153813: 97 89 11                 a2 = a1 << 0x11
153816: d3 98 08                 a1 = a1 ^ a2
153819: 3a 09 60 11 03           a2 = u64 [0x31160]
153824: 3a 0a b8 11 03           a3 = u64 [0x311b8]
153829: 3e 08 78 12 03           u64 [0x31278] = a1
153834: ca 98 07                 a0 = a1 * a2
153837: d6 a7 08                 a1 = a0 mulhu a3
153840: 98 88 12                 a1 = a1 >> 0x12
153843: 96 88 40 42 0f           a1 = a1 * 0xf4240
153848: c9 87 07                 a0 = a0 - a1
153851: 7b 17 20 01              u64 [sp + 0x120] = a0
153855: 50 20 56 08 7e 4a fe     ra = 2134, jump @2944
      :                          @11031 [@dyn 1067]
153862: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
153866: 95 17 20 01              a0 = sp + 0x120
153870: 7b 17 38 02              u64 [sp + 0x238] = a0
153874: 33 07 28 0c              a0 = 0xc28
153878: 7b 17 40 02              u64 [sp + 0x240] = a0
153882: 95 18 e0 01              a1 = sp + 0x1e0
153886: 7b 18 48 02              u64 [sp + 0x248] = a1
153890: 7b 17 50 02              u64 [sp + 0x250] = a0
153894: 33 07 68 1c 01           a0 = 0x11c68
153899: 7b 17 90 02              u64 [sp + 0x290] = a0
153903: 49 21 98 02 02           u64 [sp + 664] = 0x2
153908: 49 21 b0 02              u64 [sp + 688] = 0
153912: 95 18 38 02              a1 = sp + 0x238
153916: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
153920: 49 21 a8 02 02           u64 [sp + 680] = 0x2
153925: 95 17 08 02              a0 = sp + 0x208
153929: 95 18 90 02              a1 = sp + 0x290
153933: 50 20 58 08 f2 f5 fd     ra = 2136, jump @1491
      :                          @11032 [@dyn 1068]
153940: 82 16 10 02              s1 = u64 [sp + 0x210]
153944: 82 1b 18 02              a4 = u64 [sp + 0x218]
153948: 82 17 08 02              a0 = u64 [sp + 0x208]
153952: 7b 17 70                 u64 [sp + 0x70] = a0
153955: 33 07 02                 a0 = 0x2
153958: 33 08                    a1 = 0
153960: 33 09                    a2 = 0
153962: 64 6a                    a3 = s1
153964: 33 00 5a 08              ra = 0x85a
153968: 0a 64                    ecalli 100 // 'log'
153970: 01                       fallthrough
      :                          @11033 [@dyn 1069]
153971: 82 1c 70                 a5 = u64 [sp + 0x70]
153974: 82 17 68                 a0 = u64 [sp + 0x68]
153977: c8 c7 07                 a0 = a0 + a5
153980: 55 37 00 00 ff 0a        jump @11035 if a0 >=u 4294901760
      :                          @11034
153986: 28 44 88 00              jump @12856
      :                          @11035
153990: 33 07 c0 22 03           a0 = 0x322c0
153995: 95 77 00 00 01           a0 = a0 + 0x10000
154000: 01                       fallthrough
      :                          @11036
154001: 82 78                    a1 = u64 [a0]
154003: c9 87 09                 a2 = a0 - a1
154006: aa 69 07                 jump @11038 if a2 == s1
      :                          @11037
154009: 28 2d 88 00              jump @12856
      :                          @11038
154013: c9 c8 09                 a2 = a1 - a5
154016: 01                       fallthrough
      :                          @11039
154017: 82 7a                    a3 = u64 [a0]
154019: ab 8a ee                 jump @11036 if a3 != a1
      :                          @11040
154022: 7b 79                    u64 [a0] = a2
154024: 33 0b                    a4 = 0
154026: 01                       fallthrough
      :                          @11041
154027: ab 8a e6                 jump @11036 if a3 != a1
      :                          @11042
154030: 28 18 88 00              jump @12856
      :                          @11043 [@dyn 1070]
154034: 3a 08 78 12 03           a1 = u64 [0x31278]
154039: 97 89 0d                 a2 = a1 << 0xd
154042: d3 98 08                 a1 = a1 ^ a2
154045: 98 89 07                 a2 = a1 >> 0x7
154048: d3 89 09                 a2 = a2 ^ a1
154051: 97 9a 11                 a3 = a2 << 0x11
154054: 3a 08 60 11 03           a1 = u64 [0x31160]
154059: d3 9a 0a                 a3 = a3 ^ a2
154062: 3a 09 d0 11 03           a2 = u64 [0x311d0]
154067: ca 8a 0b                 a4 = a3 * a1
154070: 3e 0a 78 12 03           u64 [0x31278] = a3
154075: d6 9b 0a                 a3 = a4 mulhu a2
154078: c9 ab 0c                 a5 = a4 - a3
154081: 98 cc 01                 a5 = a5 >> 0x1
154084: c8 ca 0a                 a3 = a3 + a5
154087: 98 aa 06                 a3 = a3 >> 0x6
154090: 3a 06 78 12 03           s1 = u64 [0x31278]
154095: 96 aa 65                 a3 = a3 * 0x65
154098: c9 ab 0b                 a4 = a4 - a3
154101: 7b 1b 70                 u64 [sp + 0x70] = a4
154104: 97 6a 0d                 a3 = s1 << 0xd
154107: d3 6a 0a                 a3 = a3 ^ s1
154110: 98 ab 07                 a4 = a3 >> 0x7
154113: d3 ba 0a                 a3 = a3 ^ a4
154116: 97 ab 11                 a4 = a3 << 0x11
154119: d3 ba 0a                 a3 = a3 ^ a4
154122: ca 8a 06                 s1 = a3 * a1
154125: 3e 0a 78 12 03           u64 [0x31278] = a3
154130: d6 96 0a                 a3 = s1 mulhu a2
154133: c9 a6 0b                 a4 = s1 - a3
154136: 98 bb 01                 a4 = a4 >> 0x1
154139: c8 ba 0a                 a3 = a3 + a4
154142: 98 aa 06                 a3 = a3 >> 0x6
154145: 3a 0b 78 12 03           a4 = u64 [0x31278]
154150: 96 aa 65                 a3 = a3 * 0x65
154153: c9 a6 06                 s1 = s1 - a3
154156: 7b 16 60                 u64 [sp + 0x60] = s1
154159: 97 ba 0d                 a3 = a4 << 0xd
154162: d3 ba 0a                 a3 = a3 ^ a4
154165: 98 ab 07                 a4 = a3 >> 0x7
154168: d3 ba 0a                 a3 = a3 ^ a4
154171: 97 ab 11                 a4 = a3 << 0x11
154174: d3 ba 0a                 a3 = a3 ^ a4
154177: ca 8a 06                 s1 = a3 * a1
154180: 3e 0a 78 12 03           u64 [0x31278] = a3
154185: d6 96 0a                 a3 = s1 mulhu a2
154188: c9 a6 0b                 a4 = s1 - a3
154191: 98 bb 01                 a4 = a4 >> 0x1
154194: c8 ba 0a                 a3 = a3 + a4
154197: 98 aa 06                 a3 = a3 >> 0x6
154200: 3a 0b 78 12 03           a4 = u64 [0x31278]
154205: 96 aa 65                 a3 = a3 * 0x65
154208: c9 a6 06                 s1 = s1 - a3
154211: 7b 16 58                 u64 [sp + 0x58] = s1
154214: 97 ba 0d                 a3 = a4 << 0xd
154217: d3 ba 0a                 a3 = a3 ^ a4
154220: 98 ab 07                 a4 = a3 >> 0x7
154223: d3 ba 0a                 a3 = a3 ^ a4
154226: 97 ab 11                 a4 = a3 << 0x11
154229: d3 ba 0a                 a3 = a3 ^ a4
154232: ca 8a 06                 s1 = a3 * a1
154235: 3e 0a 78 12 03           u64 [0x31278] = a3
154240: d6 96 0a                 a3 = s1 mulhu a2
154243: c9 a6 0b                 a4 = s1 - a3
154246: 98 bb 01                 a4 = a4 >> 0x1
154249: c8 ba 0a                 a3 = a3 + a4
154252: 98 aa 06                 a3 = a3 >> 0x6
154255: 3a 0b 78 12 03           a4 = u64 [0x31278]
154260: 96 aa 65                 a3 = a3 * 0x65
154263: c9 a6 00                 ra = s1 - a3
154266: 97 ba 0d                 a3 = a4 << 0xd
154269: d3 ba 0a                 a3 = a3 ^ a4
154272: 98 ab 07                 a4 = a3 >> 0x7
154275: d3 ba 0a                 a3 = a3 ^ a4
154278: 97 ab 11                 a4 = a3 << 0x11
154281: d3 ba 0a                 a3 = a3 ^ a4
154284: ca 8a 06                 s1 = a3 * a1
154287: 3e 0a 78 12 03           u64 [0x31278] = a3
154292: d6 96 0a                 a3 = s1 mulhu a2
154295: c9 a6 0b                 a4 = s1 - a3
154298: 98 bb 01                 a4 = a4 >> 0x1
154301: c8 ba 0a                 a3 = a3 + a4
154304: 98 aa 06                 a3 = a3 >> 0x6
154307: 3a 0b 78 12 03           a4 = u64 [0x31278]
154312: 96 aa 65                 a3 = a3 * 0x65
154315: c9 a6 04                 t2 = s1 - a3
154318: 97 ba 0d                 a3 = a4 << 0xd
154321: d3 ba 0a                 a3 = a3 ^ a4
154324: 98 ab 07                 a4 = a3 >> 0x7
154327: d3 ba 0a                 a3 = a3 ^ a4
154330: 97 ab 11                 a4 = a3 << 0x11
154333: d3 ba 0a                 a3 = a3 ^ a4
154336: ca 8a 0b                 a4 = a3 * a1
154339: 3e 0a 78 12 03           u64 [0x31278] = a3
154344: d6 9b 0a                 a3 = a4 mulhu a2
154347: c9 ab 06                 s1 = a4 - a3
154350: 98 66 01                 s1 = s1 >> 0x1
154353: c8 6a 0a                 a3 = a3 + s1
154356: 3a 07 78 12 03           a0 = u64 [0x31278]
154361: 98 aa 06                 a3 = a3 >> 0x6
154364: 96 aa 65                 a3 = a3 * 0x65
154367: c9 ab 06                 s1 = a4 - a3
154370: 97 7a 0d                 a3 = a0 << 0xd
154373: d3 a7 07                 a0 = a0 ^ a3
154376: 98 7a 07                 a3 = a0 >> 0x7
154379: d3 a7 07                 a0 = a0 ^ a3
154382: 97 7a 11                 a3 = a0 << 0x11
154385: d3 a7 07                 a0 = a0 ^ a3
154388: 3e 07 78 12 03           u64 [0x31278] = a0
154393: ca 87 07                 a0 = a0 * a1
154396: d6 97 0a                 a3 = a0 mulhu a2
154399: c9 a7 0b                 a4 = a0 - a3
154402: 98 bb 01                 a4 = a4 >> 0x1
154405: c8 ba 0a                 a3 = a3 + a4
154408: 3a 0b 78 12 03           a4 = u64 [0x31278]
154413: 98 aa 06                 a3 = a3 >> 0x6
154416: 96 aa 65                 a3 = a3 * 0x65
154419: c9 a7 0c                 a5 = a0 - a3
154422: 97 ba 0d                 a3 = a4 << 0xd
154425: d3 ba 0a                 a3 = a3 ^ a4
154428: 98 ab 07                 a4 = a3 >> 0x7
154431: d3 ba 0a                 a3 = a3 ^ a4
154434: 97 ab 11                 a4 = a3 << 0x11
154437: d3 ba 0a                 a3 = a3 ^ a4
154440: 3e 0a 78 12 03           u64 [0x31278] = a3
154445: ca 8a 07                 a0 = a3 * a1
154448: d6 97 0b                 a4 = a0 mulhu a2
154451: c9 b7 0a                 a3 = a0 - a4
154454: 98 aa 01                 a3 = a3 >> 0x1
154457: c8 ba 0a                 a3 = a3 + a4
154460: 3a 0b 78 12 03           a4 = u64 [0x31278]
154465: 98 aa 06                 a3 = a3 >> 0x6
154468: 96 aa 65                 a3 = a3 * 0x65
154471: c9 a7 0a                 a3 = a0 - a3
154474: 97 b7 0d                 a0 = a4 << 0xd
154477: d3 b7 07                 a0 = a0 ^ a4
154480: 98 7b 07                 a4 = a0 >> 0x7
154483: d3 b7 07                 a0 = a0 ^ a4
154486: 97 7b 11                 a4 = a0 << 0x11
154489: d3 b7 07                 a0 = a0 ^ a4
154492: 3e 07 78 12 03           u64 [0x31278] = a0
154497: ca 87 07                 a0 = a0 * a1
154500: d6 97 08                 a1 = a0 mulhu a2
154503: c9 87 09                 a2 = a0 - a1
154506: 98 99 01                 a2 = a2 >> 0x1
154509: c8 98 08                 a1 = a1 + a2
154512: 98 88 06                 a1 = a1 >> 0x6
154515: 96 88 65                 a1 = a1 * 0x65
154518: c9 87 07                 a0 = a0 - a1
154521: 82 18 70                 a1 = u64 [sp + 0x70]
154524: 95 88 ce                 a1 = a1 + 0xffffffffffffffce
154527: 7b 18 90 02              u64 [sp + 0x290] = a1
154531: 82 18 60                 a1 = u64 [sp + 0x60]
154534: 95 88 ce                 a1 = a1 + 0xffffffffffffffce
154537: 7b 18 98 02              u64 [sp + 0x298] = a1
154541: 82 18 58                 a1 = u64 [sp + 0x58]
154544: 95 88 ce                 a1 = a1 + 0xffffffffffffffce
154547: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
154551: 95 08 ce                 a1 = ra + 0xffffffffffffffce
154554: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
154558: 95 48 ce                 a1 = t2 + 0xffffffffffffffce
154561: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
154565: 95 68 ce                 a1 = s1 + 0xffffffffffffffce
154568: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
154572: 95 c8 ce                 a1 = a5 + 0xffffffffffffffce
154575: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
154579: 95 a8 ce                 a1 = a3 + 0xffffffffffffffce
154582: 7b 18 c8 02              u64 [sp + 0x2c8] = a1
154586: 95 77 ce                 a0 = a0 + 0xffffffffffffffce
154589: 7b 17 d0 02              u64 [sp + 0x2d0] = a0
154593: 95 17 90 02              a0 = sp + 0x290
154597: 28 b9 47 fe              jump @2951
      :                          @11044
154601: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
154605: 95 17 e0 01              a0 = sp + 0x1e0
154609: 7b 17 08 02              u64 [sp + 0x208] = a0
154613: 33 07 94 0c              a0 = 0xc94
154617: 7b 17 10 02              u64 [sp + 0x210] = a0
154621: 33 07 a0 1c 01           a0 = 0x11ca0
154626: 7b 17 90 02              u64 [sp + 0x290] = a0
154630: 49 21 98 02 01           u64 [sp + 664] = 0x1
154635: 49 21 b0 02              u64 [sp + 688] = 0
154639: 95 18 08 02              a1 = sp + 0x208
154643: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
154647: 49 21 a8 02 01           u64 [sp + 680] = 0x1
154652: 95 17 38 02              a0 = sp + 0x238
154656: 95 18 90 02              a1 = sp + 0x290
154660: 50 20 5e 08 1b f3 fd     ra = 2142, jump @1491
      :                          @11045 [@dyn 1071]
154667: 82 16 40 02              s1 = u64 [sp + 0x240]
154671: 82 1b 48 02              a4 = u64 [sp + 0x248]
154675: 82 17 38 02              a0 = u64 [sp + 0x238]
154679: 7b 17 70                 u64 [sp + 0x70] = a0
154682: 33 07 02                 a0 = 0x2
154685: 33 08                    a1 = 0
154687: 33 09                    a2 = 0
154689: 64 6a                    a3 = s1
154691: 33 00 60 08              ra = 0x860
154695: 0a 64                    ecalli 100 // 'log'
154697: 01                       fallthrough
      :                          @11046 [@dyn 1072]
154698: 82 1c 70                 a5 = u64 [sp + 0x70]
154701: 82 17 68                 a0 = u64 [sp + 0x68]
154704: c8 c7 07                 a0 = a0 + a5
154707: 55 37 00 00 ff 0a        jump @11048 if a0 >=u 4294901760
      :                          @11047
154713: 28 6d 85 00              jump @12856
      :                          @11048
154717: 33 07 c0 22 03           a0 = 0x322c0
154722: 95 77 00 00 01           a0 = a0 + 0x10000
154727: 01                       fallthrough
      :                          @11049
154728: 82 78                    a1 = u64 [a0]
154730: c9 87 09                 a2 = a0 - a1
154733: aa 69 07                 jump @11051 if a2 == s1
      :                          @11050
154736: 28 56 85 00              jump @12856
      :                          @11051
154740: c9 c8 09                 a2 = a1 - a5
154743: 01                       fallthrough
      :                          @11052
154744: 82 7a                    a3 = u64 [a0]
154746: ab 8a ee                 jump @11049 if a3 != a1
      :                          @11053
154749: 7b 79                    u64 [a0] = a2
154751: 33 0b                    a4 = 0
154753: 01                       fallthrough
      :                          @11054
154754: ab 8a e6                 jump @11049 if a3 != a1
      :                          @11055
154757: 28 41 85 00              jump @12856
      :                          @11056 [@dyn 1073]
154761: 3a 08 78 12 03           a1 = u64 [0x31278]
154766: 97 89 0d                 a2 = a1 << 0xd
154769: d3 98 08                 a1 = a1 ^ a2
154772: 98 89 07                 a2 = a1 >> 0x7
154775: d3 89 09                 a2 = a2 ^ a1
154778: 97 9a 11                 a3 = a2 << 0x11
154781: 3a 08 60 11 03           a1 = u64 [0x31160]
154786: d3 9a 0a                 a3 = a3 ^ a2
154789: 3a 09 d0 11 03           a2 = u64 [0x311d0]
154794: ca 8a 0b                 a4 = a3 * a1
154797: 3e 0a 78 12 03           u64 [0x31278] = a3
154802: d6 9b 0a                 a3 = a4 mulhu a2
154805: c9 ab 0c                 a5 = a4 - a3
154808: 98 cc 01                 a5 = a5 >> 0x1
154811: c8 ca 0a                 a3 = a3 + a5
154814: 98 ac 06                 a5 = a3 >> 0x6
154817: 33 03 65                 t1 = 0x65
154820: ca 3c 0c                 a5 = a5 * t1
154823: 3a 06 78 12 03           s1 = u64 [0x31278]
154828: c9 cb 0b                 a4 = a4 - a5
154831: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
154834: 97 6c 0d                 a5 = s1 << 0xd
154837: d3 c6 06                 s1 = s1 ^ a5
154840: 98 6c 07                 a5 = s1 >> 0x7
154843: d3 c6 06                 s1 = s1 ^ a5
154846: 97 6c 11                 a5 = s1 << 0x11
154849: d3 6c 0c                 a5 = a5 ^ s1
154852: ca 8c 0b                 a4 = a5 * a1
154855: 3e 0c 78 12 03           u64 [0x31278] = a5
154860: d6 9b 0c                 a5 = a4 mulhu a2
154863: c9 cb 06                 s1 = a4 - a5
154866: 98 66 01                 s1 = s1 >> 0x1
154869: c8 6c 0c                 a5 = a5 + s1
154872: 98 cc 06                 a5 = a5 >> 0x6
154875: ca 3c 0c                 a5 = a5 * t1
154878: 3a 06 78 12 03           s1 = u64 [0x31278]
154883: c9 cb 0b                 a4 = a4 - a5
154886: 95 bc ce                 a5 = a4 + 0xffffffffffffffce
154889: 97 6b 0d                 a4 = s1 << 0xd
154892: d3 b6 06                 s1 = s1 ^ a4
154895: 98 6b 07                 a4 = s1 >> 0x7
154898: d3 b6 06                 s1 = s1 ^ a4
154901: 97 6b 11                 a4 = s1 << 0x11
154904: d3 6b 0b                 a4 = a4 ^ s1
154907: ca 8b 0a                 a3 = a4 * a1
154910: 3e 0b 78 12 03           u64 [0x31278] = a4
154915: d6 9a 0b                 a4 = a3 mulhu a2
154918: c9 ba 06                 s1 = a3 - a4
154921: 98 66 01                 s1 = s1 >> 0x1
154924: c8 6b 0b                 a4 = a4 + s1
154927: 98 bb 06                 a4 = a4 >> 0x6
154930: ca 3b 0b                 a4 = a4 * t1
154933: 3a 06 78 12 03           s1 = u64 [0x31278]
154938: c9 ba 0a                 a3 = a3 - a4
154941: 95 aa ce                 a3 = a3 + 0xffffffffffffffce
154944: 97 6b 0d                 a4 = s1 << 0xd
154947: d3 b6 06                 s1 = s1 ^ a4
154950: 98 6b 07                 a4 = s1 >> 0x7
154953: d3 b6 06                 s1 = s1 ^ a4
154956: 97 6b 11                 a4 = s1 << 0x11
154959: d3 6b 0b                 a4 = a4 ^ s1
154962: ca 8b 08                 a1 = a4 * a1
154965: 3e 0b 78 12 03           u64 [0x31278] = a4
154970: d6 98 07                 a0 = a1 mulhu a2
154973: c9 78 09                 a2 = a1 - a0
154976: 98 99 01                 a2 = a2 >> 0x1
154979: c8 97 07                 a0 = a0 + a2
154982: 98 77 06                 a0 = a0 >> 0x6
154985: ca 37 07                 a0 = a0 * t1
154988: c9 78 08                 a1 = a1 - a0
154991: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
154994: 7b 1c 60 01              u64 [sp + 0x160] = a5
154998: 7b 12 58 01              u64 [sp + 0x158] = t0
155002: 7b 1a 68 01              u64 [sp + 0x168] = a3
155006: 7b 17 70 01              u64 [sp + 0x170] = a0
155010: 95 17 58 01              a0 = sp + 0x158
155014: 50 20 64 08 d2 46 fe     ra = 2148, jump @2959
      :                          @11057 [@dyn 1074]
155021: 7b 17 20 01              u64 [sp + 0x120] = a0
155025: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
155029: 95 17 20 01              a0 = sp + 0x120
155033: 7b 17 38 02              u64 [sp + 0x238] = a0
155037: 33 07 94 0c              a0 = 0xc94
155041: 7b 17 40 02              u64 [sp + 0x240] = a0
155045: 95 18 e0 01              a1 = sp + 0x1e0
155049: 7b 18 48 02              u64 [sp + 0x248] = a1
155053: 7b 17 50 02              u64 [sp + 0x250] = a0
155057: 33 07 d0 1c 01           a0 = 0x11cd0
155062: 7b 17 90 02              u64 [sp + 0x290] = a0
155066: 49 21 98 02 03           u64 [sp + 664] = 0x3
155071: 49 21 b0 02              u64 [sp + 688] = 0
155075: 95 17 38 02              a0 = sp + 0x238
155079: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
155083: 49 21 a8 02 02           u64 [sp + 680] = 0x2
155088: 95 17 08 02              a0 = sp + 0x208
155092: 95 18 90 02              a1 = sp + 0x290
155096: 50 20 66 08 67 f1 fd     ra = 2150, jump @1491
      :                          @11058 [@dyn 1075]
155103: 82 16 10 02              s1 = u64 [sp + 0x210]
155107: 82 1b 18 02              a4 = u64 [sp + 0x218]
155111: 82 17 08 02              a0 = u64 [sp + 0x208]
155115: 7b 17 70                 u64 [sp + 0x70] = a0
155118: 33 07 02                 a0 = 0x2
155121: 33 08                    a1 = 0
155123: 33 09                    a2 = 0
155125: 64 6a                    a3 = s1
155127: 33 00 68 08              ra = 0x868
155131: 0a 64                    ecalli 100 // 'log'
155133: 01                       fallthrough
      :                          @11059 [@dyn 1076]
155134: 82 1c 70                 a5 = u64 [sp + 0x70]
155137: 82 17 68                 a0 = u64 [sp + 0x68]
155140: c8 c7 07                 a0 = a0 + a5
155143: 55 37 00 00 ff 0a        jump @11061 if a0 >=u 4294901760
      :                          @11060
155149: 28 b9 83 00              jump @12856
      :                          @11061
155153: 33 07 c0 22 03           a0 = 0x322c0
155158: 95 77 00 00 01           a0 = a0 + 0x10000
155163: 01                       fallthrough
      :                          @11062
155164: 82 78                    a1 = u64 [a0]
155166: c9 87 09                 a2 = a0 - a1
155169: aa 69 07                 jump @11064 if a2 == s1
      :                          @11063
155172: 28 a2 83 00              jump @12856
      :                          @11064
155176: c9 c8 09                 a2 = a1 - a5
155179: 01                       fallthrough
      :                          @11065
155180: 82 7a                    a3 = u64 [a0]
155182: ab 8a ee                 jump @11062 if a3 != a1
      :                          @11066
155185: 7b 79                    u64 [a0] = a2
155187: 33 0b                    a4 = 0
155189: 01                       fallthrough
      :                          @11067
155190: ab 8a e6                 jump @11062 if a3 != a1
      :                          @11068
155193: 28 8d 83 00              jump @12856
      :                          @11069 [@dyn 1077]
155197: 3a 08 78 12 03           a1 = u64 [0x31278]
155202: 97 89 0d                 a2 = a1 << 0xd
155205: d3 98 08                 a1 = a1 ^ a2
155208: 98 89 07                 a2 = a1 >> 0x7
155211: d3 89 09                 a2 = a2 ^ a1
155214: 97 9a 11                 a3 = a2 << 0x11
155217: 3a 08 60 11 03           a1 = u64 [0x31160]
155222: d3 9a 0a                 a3 = a3 ^ a2
155225: 3a 09 d0 11 03           a2 = u64 [0x311d0]
155230: ca 8a 0b                 a4 = a3 * a1
155233: 3e 0a 78 12 03           u64 [0x31278] = a3
155238: d6 9b 0a                 a3 = a4 mulhu a2
155241: c9 ab 0c                 a5 = a4 - a3
155244: 98 cc 01                 a5 = a5 >> 0x1
155247: c8 ca 0a                 a3 = a3 + a5
155250: 98 ac 06                 a5 = a3 >> 0x6
155253: 33 03 65                 t1 = 0x65
155256: ca 3c 0c                 a5 = a5 * t1
155259: 3a 06 78 12 03           s1 = u64 [0x31278]
155264: c9 cb 0b                 a4 = a4 - a5
155267: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
155270: 97 6c 0d                 a5 = s1 << 0xd
155273: d3 c6 06                 s1 = s1 ^ a5
155276: 98 6c 07                 a5 = s1 >> 0x7
155279: d3 c6 06                 s1 = s1 ^ a5
155282: 97 6c 11                 a5 = s1 << 0x11
155285: d3 6c 0c                 a5 = a5 ^ s1
155288: ca 8c 0b                 a4 = a5 * a1
155291: 3e 0c 78 12 03           u64 [0x31278] = a5
155296: d6 9b 0c                 a5 = a4 mulhu a2
155299: c9 cb 06                 s1 = a4 - a5
155302: 98 66 01                 s1 = s1 >> 0x1
155305: c8 6c 0c                 a5 = a5 + s1
155308: 98 cc 06                 a5 = a5 >> 0x6
155311: ca 3c 0c                 a5 = a5 * t1
155314: 3a 06 78 12 03           s1 = u64 [0x31278]
155319: c9 cb 0b                 a4 = a4 - a5
155322: 95 bc ce                 a5 = a4 + 0xffffffffffffffce
155325: 97 6b 0d                 a4 = s1 << 0xd
155328: d3 b6 06                 s1 = s1 ^ a4
155331: 98 6b 07                 a4 = s1 >> 0x7
155334: d3 b6 06                 s1 = s1 ^ a4
155337: 97 6b 11                 a4 = s1 << 0x11
155340: d3 6b 0b                 a4 = a4 ^ s1
155343: ca 8b 0a                 a3 = a4 * a1
155346: 3e 0b 78 12 03           u64 [0x31278] = a4
155351: d6 9a 0b                 a4 = a3 mulhu a2
155354: c9 ba 06                 s1 = a3 - a4
155357: 98 66 01                 s1 = s1 >> 0x1
155360: c8 6b 0b                 a4 = a4 + s1
155363: 98 bb 06                 a4 = a4 >> 0x6
155366: ca 3b 0b                 a4 = a4 * t1
155369: 3a 06 78 12 03           s1 = u64 [0x31278]
155374: c9 ba 0a                 a3 = a3 - a4
155377: 95 aa ce                 a3 = a3 + 0xffffffffffffffce
155380: 97 6b 0d                 a4 = s1 << 0xd
155383: d3 b6 06                 s1 = s1 ^ a4
155386: 98 6b 07                 a4 = s1 >> 0x7
155389: d3 b6 06                 s1 = s1 ^ a4
155392: 97 6b 11                 a4 = s1 << 0x11
155395: d3 6b 0b                 a4 = a4 ^ s1
155398: ca 8b 08                 a1 = a4 * a1
155401: 3e 0b 78 12 03           u64 [0x31278] = a4
155406: d6 98 07                 a0 = a1 mulhu a2
155409: c9 78 09                 a2 = a1 - a0
155412: 98 99 01                 a2 = a2 >> 0x1
155415: c8 97 07                 a0 = a0 + a2
155418: 98 77 06                 a0 = a0 >> 0x6
155421: ca 37 07                 a0 = a0 * t1
155424: c9 78 08                 a1 = a1 - a0
155427: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
155430: 7b 1c 80 01              u64 [sp + 0x180] = a5
155434: 7b 12 78 01              u64 [sp + 0x178] = t0
155438: 7b 1a 88 01              u64 [sp + 0x188] = a3
155442: 7b 17 90 01              u64 [sp + 0x190] = a0
155446: 95 17 08 02              a0 = sp + 0x208
155450: 95 18 78 01              a1 = sp + 0x178
155454: 95 16 08 02              s1 = sp + 0x208
155458: 50 20 6c 08 87 45 fe     ra = 2156, jump @2974
      :                          @11070 [@dyn 1078]
155465: 95 17 10 02              a0 = sp + 0x210
155469: 95 18 18 02              a1 = sp + 0x218
155473: 95 19 20 02              a2 = sp + 0x220
155477: 7b 16 90 02              u64 [sp + 0x290] = s1
155481: 33 0a 94 0c              a3 = 0xc94
155485: 7b 1a 98 02              u64 [sp + 0x298] = a3
155489: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
155493: 7b 1a a8 02              u64 [sp + 0x2a8] = a3
155497: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
155501: 7b 1a b8 02              u64 [sp + 0x2b8] = a3
155505: 7b 19 c0 02              u64 [sp + 0x2c0] = a2
155509: 7b 1a c8 02              u64 [sp + 0x2c8] = a3
155513: 33 07 28 1d 01           a0 = 0x11d28
155518: 7b 17 38 02              u64 [sp + 0x238] = a0
155522: 49 21 40 02 05           u64 [sp + 576] = 0x5
155527: 49 21 58 02              u64 [sp + 600] = 0
155531: 95 17 90 02              a0 = sp + 0x290
155535: 7b 17 48 02              u64 [sp + 0x248] = a0
155539: 49 21 50 02 04           u64 [sp + 592] = 0x4
155544: 95 17 e0 01              a0 = sp + 0x1e0
155548: 95 18 38 02              a1 = sp + 0x238
155552: 50 20 6e 08 9f ef fd     ra = 2158, jump @1491
      :                          @11071 [@dyn 1079]
155559: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
155563: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
155567: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
155571: 7b 17 70                 u64 [sp + 0x70] = a0
155574: 33 07 02                 a0 = 0x2
155577: 33 08                    a1 = 0
155579: 33 09                    a2 = 0
155581: 64 6a                    a3 = s1
155583: 33 00 70 08              ra = 0x870
155587: 0a 64                    ecalli 100 // 'log'
155589: 01                       fallthrough
      :                          @11072 [@dyn 1080]
155590: 82 1c 70                 a5 = u64 [sp + 0x70]
155593: 82 17 68                 a0 = u64 [sp + 0x68]
155596: c8 c7 07                 a0 = a0 + a5
155599: 55 37 00 00 ff 0a        jump @11074 if a0 >=u 4294901760
      :                          @11073
155605: 28 f1 81 00              jump @12856
      :                          @11074
155609: 33 07 c0 22 03           a0 = 0x322c0
155614: 95 77 00 00 01           a0 = a0 + 0x10000
155619: 01                       fallthrough
      :                          @11075
155620: 82 78                    a1 = u64 [a0]
155622: c9 87 09                 a2 = a0 - a1
155625: aa 69 07                 jump @11077 if a2 == s1
      :                          @11076
155628: 28 da 81 00              jump @12856
      :                          @11077
155632: c9 c8 09                 a2 = a1 - a5
155635: 01                       fallthrough
      :                          @11078
155636: 82 7a                    a3 = u64 [a0]
155638: ab 8a ee                 jump @11075 if a3 != a1
      :                          @11079
155641: 7b 79                    u64 [a0] = a2
155643: 33 0b                    a4 = 0
155645: 01                       fallthrough
      :                          @11080
155646: ab 8a e6                 jump @11075 if a3 != a1
      :                          @11081
155649: 28 c5 81 00              jump @12856
      :                          @11082 [@dyn 1081]
155653: 3a 08 78 12 03           a1 = u64 [0x31278]
155658: 97 89 0d                 a2 = a1 << 0xd
155661: d3 98 08                 a1 = a1 ^ a2
155664: 98 89 07                 a2 = a1 >> 0x7
155667: d3 98 08                 a1 = a1 ^ a2
155670: 97 89 11                 a2 = a1 << 0x11
155673: 3a 04 60 11 03           t2 = u64 [0x31160]
155678: d3 98 08                 a1 = a1 ^ a2
155681: 3a 0c d0 11 03           a5 = u64 [0x311d0]
155686: ca 48 09                 a2 = a1 * t2
155689: 3e 08 78 12 03           u64 [0x31278] = a1
155694: d6 c9 08                 a1 = a2 mulhu a5
155697: c9 89 0a                 a3 = a2 - a1
155700: 98 aa 01                 a3 = a3 >> 0x1
155703: c8 a8 08                 a1 = a1 + a3
155706: 98 88 06                 a1 = a1 >> 0x6
155709: 96 88 65                 a1 = a1 * 0x65
155712: 3a 0a 78 12 03           a3 = u64 [0x31278]
155717: c9 89 09                 a2 = a2 - a1
155720: 95 98 ce                 a1 = a2 + 0xffffffffffffffce
155723: 97 a9 0d                 a2 = a3 << 0xd
155726: d3 a9 09                 a2 = a2 ^ a3
155729: 98 9a 07                 a3 = a2 >> 0x7
155732: d3 a9 09                 a2 = a2 ^ a3
155735: 97 9a 11                 a3 = a2 << 0x11
155738: d3 a9 09                 a2 = a2 ^ a3
155741: ca 49 06                 s1 = a2 * t2
155744: 3e 09 78 12 03           u64 [0x31278] = a2
155749: d6 c6 09                 a2 = s1 mulhu a5
155752: c9 96 0a                 a3 = s1 - a2
155755: 98 aa 01                 a3 = a3 >> 0x1
155758: c8 a9 09                 a2 = a2 + a3
155761: 98 99 06                 a2 = a2 >> 0x6
155764: 96 99 65                 a2 = a2 * 0x65
155767: 3a 07 78 12 03           a0 = u64 [0x31278]
155772: c9 96 06                 s1 = s1 - a2
155775: 95 69 ce                 a2 = s1 + 0xffffffffffffffce
155778: 97 7a 0d                 a3 = a0 << 0xd
155781: d3 a7 07                 a0 = a0 ^ a3
155784: 98 7a 07                 a3 = a0 >> 0x7
155787: d3 a7 07                 a0 = a0 ^ a3
155790: 97 7a 11                 a3 = a0 << 0x11
155793: d3 a7 07                 a0 = a0 ^ a3
155796: ca 47 06                 s1 = a0 * t2
155799: 3e 07 78 12 03           u64 [0x31278] = a0
155804: d6 c6 07                 a0 = s1 mulhu a5
155807: c9 76 0a                 a3 = s1 - a0
155810: 98 aa 01                 a3 = a3 >> 0x1
155813: c8 a7 07                 a0 = a0 + a3
155816: 98 77 06                 a0 = a0 >> 0x6
155819: 96 77 65                 a0 = a0 * 0x65
155822: 3a 0b 78 12 03           a4 = u64 [0x31278]
155827: c9 76 06                 s1 = s1 - a0
155830: 95 6a ce                 a3 = s1 + 0xffffffffffffffce
155833: 97 b7 0d                 a0 = a4 << 0xd
155836: d3 b7 07                 a0 = a0 ^ a4
155839: 98 7b 07                 a4 = a0 >> 0x7
155842: d3 b7 07                 a0 = a0 ^ a4
155845: 97 7b 11                 a4 = a0 << 0x11
155848: d3 b7 07                 a0 = a0 ^ a4
155851: ca 47 0b                 a4 = a0 * t2
155854: 3e 07 78 12 03           u64 [0x31278] = a0
155859: d6 cb 07                 a0 = a4 mulhu a5
155862: c9 7b 0c                 a5 = a4 - a0
155865: 98 cc 01                 a5 = a5 >> 0x1
155868: c8 c7 07                 a0 = a0 + a5
155871: 98 77 06                 a0 = a0 >> 0x6
155874: 96 77 65                 a0 = a0 * 0x65
155877: c9 7b 0b                 a4 = a4 - a0
155880: 95 bb ce                 a4 = a4 + 0xffffffffffffffce
155883: 95 17 90 02              a0 = sp + 0x290
155887: 50 20 74 08 9e 44 fe     ra = 2164, jump @2987
      :                          @11083 [@dyn 1082]
155894: 82 17 90 02              a0 = u64 [sp + 0x290]
155898: 82 18 98 02              a1 = u64 [sp + 0x298]
155902: 82 19 a0 02              a2 = u64 [sp + 0x2a0]
155906: 82 1a a8 02              a3 = u64 [sp + 0x2a8]
155910: 7b 17 20 01              u64 [sp + 0x120] = a0
155914: 7b 18 28 01              u64 [sp + 0x128] = a1
155918: 7b 19 e0 01              u64 [sp + 0x1e0] = a2
155922: 7b 1a e8 01              u64 [sp + 0x1e8] = a3
155926: 95 17 20 01              a0 = sp + 0x120
155930: 7b 17 38 02              u64 [sp + 0x238] = a0
155934: 33 07 8e 01              a0 = 0x18e
155938: 7b 17 40 02              u64 [sp + 0x240] = a0
155942: 95 18 e0 01              a1 = sp + 0x1e0
155946: 7b 18 48 02              u64 [sp + 0x248] = a1
155950: 7b 17 50 02              u64 [sp + 0x250] = a0
155954: 33 07 90 1d 01           a0 = 0x11d90
155959: 7b 17 90 02              u64 [sp + 0x290] = a0
155963: 49 21 98 02 02           u64 [sp + 664] = 0x2
155968: 49 21 b0 02              u64 [sp + 688] = 0
155972: 95 18 38 02              a1 = sp + 0x238
155976: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
155980: 49 21 a8 02 02           u64 [sp + 680] = 0x2
155985: 95 17 08 02              a0 = sp + 0x208
155989: 95 18 90 02              a1 = sp + 0x290
155993: 50 20 76 08 e6 ed fd     ra = 2166, jump @1491
      :                          @11084 [@dyn 1083]
156000: 82 16 10 02              s1 = u64 [sp + 0x210]
156004: 82 1b 18 02              a4 = u64 [sp + 0x218]
156008: 82 17 08 02              a0 = u64 [sp + 0x208]
156012: 7b 17 70                 u64 [sp + 0x70] = a0
156015: 33 07 02                 a0 = 0x2
156018: 33 08                    a1 = 0
156020: 33 09                    a2 = 0
156022: 64 6a                    a3 = s1
156024: 33 00 78 08              ra = 0x878
156028: 0a 64                    ecalli 100 // 'log'
156030: 01                       fallthrough
      :                          @11085 [@dyn 1084]
156031: 82 1c 70                 a5 = u64 [sp + 0x70]
156034: 82 17 68                 a0 = u64 [sp + 0x68]
156037: c8 c7 07                 a0 = a0 + a5
156040: 55 37 00 00 ff 0a        jump @11087 if a0 >=u 4294901760
      :                          @11086
156046: 28 38 80 00              jump @12856
      :                          @11087
156050: 33 07 c0 22 03           a0 = 0x322c0
156055: 95 77 00 00 01           a0 = a0 + 0x10000
156060: 01                       fallthrough
      :                          @11088
156061: 82 78                    a1 = u64 [a0]
156063: c9 87 09                 a2 = a0 - a1
156066: aa 69 07                 jump @11090 if a2 == s1
      :                          @11089
156069: 28 21 80 00              jump @12856
      :                          @11090
156073: c9 c8 09                 a2 = a1 - a5
156076: 01                       fallthrough
      :                          @11091
156077: 82 7a                    a3 = u64 [a0]
156079: ab 8a ee                 jump @11088 if a3 != a1
      :                          @11092
156082: 7b 79                    u64 [a0] = a2
156084: 33 0b                    a4 = 0
156086: 01                       fallthrough
      :                          @11093
156087: ab 8a e6                 jump @11088 if a3 != a1
      :                          @11094
156090: 28 0c 80 00              jump @12856
      :                          @11095 [@dyn 1085]
156094: 3a 08 78 12 03           a1 = u64 [0x31278]
156099: 97 89 0d                 a2 = a1 << 0xd
156102: d3 89 09                 a2 = a2 ^ a1
156105: 98 9a 07                 a3 = a2 >> 0x7
156108: 3a 08 60 11 03           a1 = u64 [0x31160]
156113: d3 a9 09                 a2 = a2 ^ a3
156116: 97 9a 11                 a3 = a2 << 0x11
156119: d3 a9 09                 a2 = a2 ^ a3
156122: ca 89 0a                 a3 = a2 * a1
156125: 3e 09 78 12 03           u64 [0x31278] = a2
156130: 7b 1a b0 01              u64 [sp + 0x1b0] = a3
156134: 3a 09 78 12 03           a2 = u64 [0x31278]
156139: 33 0b                    a4 = 0
156141: 33 0a                    a3 = 0
156143: 97 9c 0d                 a5 = a2 << 0xd
156146: d3 c9 09                 a2 = a2 ^ a5
156149: 98 9c 07                 a5 = a2 >> 0x7
156152: d3 c9 09                 a2 = a2 ^ a5
156155: 97 9c 11                 a5 = a2 << 0x11
156158: d3 c9 09                 a2 = a2 ^ a5
156161: 3a 0c b8 11 03           a5 = u64 [0x311b8]
156166: ca 89 08                 a1 = a2 * a1
156169: 3e 09 78 12 03           u64 [0x31278] = a2
156174: d6 c8 07                 a0 = a1 mulhu a5
156177: 98 77 12                 a0 = a0 >> 0x12
156180: 96 77 40 42 0f           a0 = a0 * 0xf4240
156185: c9 78 03                 t1 = a1 - a0
156188: 95 38 01                 a1 = t1 + 0x1
156191: 82 12 b0 01              t0 = u64 [sp + 0x1b0]
156195: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
156199: 33 0c 41                 a5 = 0x41
156202: 33 06 01                 s1 = 0x1
156205: 01                       fallthrough
      :                          @11096
156206: 83 c9 fe                 i32 a2 = a5 + 0xfffffffffffffffe
156209: 97 bb 01                 a4 = a4 << 0x1
156212: d0 92 07                 a0 = t0 >> a2
156215: 84 77 01                 a0 = a0 & 0x1
156218: d4 b7 07                 a0 = a0 | a4
156221: d8 73 0b                 a4 = t1 <u a0
156224: cf 96 09                 a2 = s1 << a2
156227: 93 b9                    a2 = 0 if a4 == 0
156229: d4 9a 0a                 a3 = a3 | a2
156232: 64 89                    a2 = a1
156234: 93 b9                    a2 = 0 if a4 == 0
156236: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
156239: c9 97 0b                 a4 = a0 - a2
156242: ac c6 dc                 jump @11096 if s1 <u a5
      :                          @11097
156245: 7b 1a 20 01              u64 [sp + 0x120] = a3
156249: 7b 1b e0 01              u64 [sp + 0x1e0] = a4
156253: 95 17 b0 01              a0 = sp + 0x1b0
156257: 7b 17 90 02              u64 [sp + 0x290] = a0
156261: 33 07 28 0c              a0 = 0xc28
156265: 7b 17 98 02              u64 [sp + 0x298] = a0
156269: 95 18 c8 01              a1 = sp + 0x1c8
156273: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
156277: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
156281: 95 18 20 01              a1 = sp + 0x120
156285: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
156289: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
156293: 95 18 e0 01              a1 = sp + 0x1e0
156297: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
156301: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
156305: 33 07 c0 1d 01           a0 = 0x11dc0
156310: 7b 17 38 02              u64 [sp + 0x238] = a0
156314: 49 21 40 02 04           u64 [sp + 576] = 0x4
156319: 49 21 58 02              u64 [sp + 600] = 0
156323: 95 18 90 02              a1 = sp + 0x290
156327: 7b 18 48 02              u64 [sp + 0x248] = a1
156331: 49 21 50 02 04           u64 [sp + 592] = 0x4
156336: 95 17 08 02              a0 = sp + 0x208
156340: 95 18 38 02              a1 = sp + 0x238
156344: 50 20 7c 08 87 ec fd     ra = 2172, jump @1491
      :                          @11098 [@dyn 1086]
156351: 82 16 10 02              s1 = u64 [sp + 0x210]
156355: 82 1b 18 02              a4 = u64 [sp + 0x218]
156359: 82 17 08 02              a0 = u64 [sp + 0x208]
156363: 7b 17 70                 u64 [sp + 0x70] = a0
156366: 33 07 02                 a0 = 0x2
156369: 33 08                    a1 = 0
156371: 33 09                    a2 = 0
156373: 64 6a                    a3 = s1
156375: 33 00 7e 08              ra = 0x87e
156379: 0a 64                    ecalli 100 // 'log'
156381: 01                       fallthrough
      :                          @11099 [@dyn 1087]
156382: 82 1c 70                 a5 = u64 [sp + 0x70]
156385: 82 17 68                 a0 = u64 [sp + 0x68]
156388: c8 c7 07                 a0 = a0 + a5
156391: 55 37 00 00 ff 09        jump @11101 if a0 >=u 4294901760
      :                          @11100
156397: 28 d9 7e                 jump @12856
      :                          @11101
156400: 33 07 c0 22 03           a0 = 0x322c0
156405: 95 77 00 00 01           a0 = a0 + 0x10000
156410: 01                       fallthrough
      :                          @11102
156411: 82 78                    a1 = u64 [a0]
156413: c9 87 09                 a2 = a0 - a1
156416: aa 69 06                 jump @11104 if a2 == s1
      :                          @11103
156419: 28 c3 7e                 jump @12856
      :                          @11104
156422: c9 c8 09                 a2 = a1 - a5
156425: 01                       fallthrough
      :                          @11105
156426: 82 7a                    a3 = u64 [a0]
156428: ab 8a ef                 jump @11102 if a3 != a1
      :                          @11106
156431: 7b 79                    u64 [a0] = a2
156433: 33 0b                    a4 = 0
156435: 01                       fallthrough
      :                          @11107
156436: ab 8a e7                 jump @11102 if a3 != a1
      :                          @11108
156439: 28 af 7e                 jump @12856
      :                          @11109 [@dyn 1088]
156442: 3a 08 78 12 03           a1 = u64 [0x31278]
156447: 97 89 0d                 a2 = a1 << 0xd
156450: d3 98 08                 a1 = a1 ^ a2
156453: 98 89 07                 a2 = a1 >> 0x7
156456: d3 98 08                 a1 = a1 ^ a2
156459: 97 8a 11                 a3 = a1 << 0x11
156462: 3a 09 60 11 03           a2 = u64 [0x31160]
156467: d3 a8 08                 a1 = a1 ^ a3
156470: 3a 0a b8 11 03           a3 = u64 [0x311b8]
156475: ca 98 0b                 a4 = a1 * a2
156478: 3e 08 78 12 03           u64 [0x31278] = a1
156483: d6 ab 08                 a1 = a4 mulhu a3
156486: 98 88 12                 a1 = a1 >> 0x12
156489: 96 88 40 42 0f           a1 = a1 * 0xf4240
156494: c9 8b 0b                 a4 = a4 - a1
156497: 95 bb 01                 a4 = a4 + 0x1
156500: 7b 1b c8 01              u64 [sp + 0x1c8] = a4
156504: 3a 08 78 12 03           a1 = u64 [0x31278]
156509: 97 8a 0d                 a3 = a1 << 0xd
156512: d3 a8 08                 a1 = a1 ^ a3
156515: 98 8a 07                 a3 = a1 >> 0x7
156518: d3 a8 08                 a1 = a1 ^ a3
156521: 97 8a 11                 a3 = a1 << 0x11
156524: d3 8a 0a                 a3 = a3 ^ a1
156527: 3e 0a 78 12 03           u64 [0x31278] = a3
156532: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
156536: ca 9a 07                 a0 = a3 * a2
156539: 7b 17 20 01              u64 [sp + 0x120] = a0
156543: 50 20 82 08 67 42 fe     ra = 2178, jump @2994
      :                          @11110 [@dyn 1089]
156550: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
156554: 95 17 20 01              a0 = sp + 0x120
156558: 7b 17 90 02              u64 [sp + 0x290] = a0
156562: 33 07 28 0c              a0 = 0xc28
156566: 7b 17 98 02              u64 [sp + 0x298] = a0
156570: 95 18 c8 01              a1 = sp + 0x1c8
156574: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
156578: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
156582: 95 18 e0 01              a1 = sp + 0x1e0
156586: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
156590: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
156594: 33 07 10 1e 01           a0 = 0x11e10
156599: 7b 17 38 02              u64 [sp + 0x238] = a0
156603: 49 21 40 02 03           u64 [sp + 576] = 0x3
156608: 49 21 58 02              u64 [sp + 600] = 0
156612: 95 18 90 02              a1 = sp + 0x290
156616: 7b 18 48 02              u64 [sp + 0x248] = a1
156620: 49 21 50 02 03           u64 [sp + 592] = 0x3
156625: 95 17 08 02              a0 = sp + 0x208
156629: 95 18 38 02              a1 = sp + 0x238
156633: 50 20 84 08 66 eb fd     ra = 2180, jump @1491
      :                          @11111 [@dyn 1090]
156640: 82 16 10 02              s1 = u64 [sp + 0x210]
156644: 82 1b 18 02              a4 = u64 [sp + 0x218]
156648: 82 17 08 02              a0 = u64 [sp + 0x208]
156652: 7b 17 70                 u64 [sp + 0x70] = a0
156655: 33 07 02                 a0 = 0x2
156658: 33 08                    a1 = 0
156660: 33 09                    a2 = 0
156662: 64 6a                    a3 = s1
156664: 33 00 86 08              ra = 0x886
156668: 0a 64                    ecalli 100 // 'log'
156670: 01                       fallthrough
      :                          @11112 [@dyn 1091]
156671: 82 1c 70                 a5 = u64 [sp + 0x70]
156674: 82 17 68                 a0 = u64 [sp + 0x68]
156677: c8 c7 07                 a0 = a0 + a5
156680: 55 37 00 00 ff 09        jump @11114 if a0 >=u 4294901760
      :                          @11113
156686: 28 b8 7d                 jump @12856
      :                          @11114
156689: 33 07 c0 22 03           a0 = 0x322c0
156694: 95 77 00 00 01           a0 = a0 + 0x10000
156699: 01                       fallthrough
      :                          @11115
156700: 82 78                    a1 = u64 [a0]
156702: c9 87 09                 a2 = a0 - a1
156705: aa 69 06                 jump @11117 if a2 == s1
      :                          @11116
156708: 28 a2 7d                 jump @12856
      :                          @11117
156711: c9 c8 09                 a2 = a1 - a5
156714: 01                       fallthrough
      :                          @11118
156715: 82 7a                    a3 = u64 [a0]
156717: ab 8a ef                 jump @11115 if a3 != a1
      :                          @11119
156720: 7b 79                    u64 [a0] = a2
156722: 33 0b                    a4 = 0
156724: 01                       fallthrough
      :                          @11120
156725: ab 8a e7                 jump @11115 if a3 != a1
      :                          @11121
156728: 28 8e 7d                 jump @12856
      :                          @11122 [@dyn 1092]
156731: 3a 08 78 12 03           a1 = u64 [0x31278]
156736: 97 89 0d                 a2 = a1 << 0xd
156739: d3 89 09                 a2 = a2 ^ a1
156742: 98 9a 07                 a3 = a2 >> 0x7
156745: 3a 08 60 11 03           a1 = u64 [0x31160]
156750: d3 a9 09                 a2 = a2 ^ a3
156753: 97 9a 11                 a3 = a2 << 0x11
156756: d3 9a 0a                 a3 = a3 ^ a2
156759: ca 8a 0b                 a4 = a3 * a1
156762: 3a 09 68 11 03           a2 = u64 [0x31168]
156767: 3e 0a 78 12 03           u64 [0x31278] = a3
156772: 98 ba 03                 a3 = a4 >> 0x3
156775: d6 9a 0a                 a3 = a3 mulhu a2
156778: 98 ac 04                 a5 = a3 >> 0x4
156781: 96 cc e8 03              a5 = a5 * 0x3e8
156785: c9 cb 0b                 a4 = a4 - a5
156788: 7b 1b b0 01              u64 [sp + 0x1b0] = a4
156792: 3a 0b 78 12 03           a4 = u64 [0x31278]
156797: 97 bc 0d                 a5 = a4 << 0xd
156800: d3 cb 0b                 a4 = a4 ^ a5
156803: 98 bc 07                 a5 = a4 >> 0x7
156806: d3 cb 0b                 a4 = a4 ^ a5
156809: 97 bc 11                 a5 = a4 << 0x11
156812: d3 cb 0b                 a4 = a4 ^ a5
156815: ca 8b 0c                 a5 = a4 * a1
156818: 3e 0b 78 12 03           u64 [0x31278] = a4
156823: 98 cb 03                 a4 = a5 >> 0x3
156826: d6 9b 0b                 a4 = a4 mulhu a2
156829: 98 bb 04                 a4 = a4 >> 0x4
156832: 96 bb e8 03              a4 = a4 * 0x3e8
156836: c9 bc 0c                 a5 = a5 - a4
156839: 7b 1c c8 01              u64 [sp + 0x1c8] = a5
156843: 3a 0b 78 12 03           a4 = u64 [0x31278]
156848: 97 bc 0d                 a5 = a4 << 0xd
156851: d3 cb 0b                 a4 = a4 ^ a5
156854: 98 bc 07                 a5 = a4 >> 0x7
156857: d3 cb 0b                 a4 = a4 ^ a5
156860: 97 bc 11                 a5 = a4 << 0x11
156863: d3 cb 0b                 a4 = a4 ^ a5
156866: ca 8b 0c                 a5 = a4 * a1
156869: 3e 0b 78 12 03           u64 [0x31278] = a4
156874: 98 c7 03                 a0 = a5 >> 0x3
156877: d6 97 07                 a0 = a0 mulhu a2
156880: 98 77 04                 a0 = a0 >> 0x4
156883: 96 79 e8 03              a2 = a0 * 0x3e8
156887: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
156891: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
156895: c9 9c 09                 a2 = a5 - a2
156898: 95 99 01                 a2 = a2 + 0x1
156901: 7b 19 20 01              u64 [sp + 0x120] = a2
156905: 33 00 8a 08              ra = 0x88a
156909: 95 11 98                 sp = sp + 0xffffffffffffff98
156912: 7b 10 60                 u64 [sp + 0x60] = ra
156915: 7b 15 58                 u64 [sp + 0x58] = s0
156918: 7b 16 50                 u64 [sp + 0x50] = s1
156921: 7b 19 10                 u64 [sp + 0x10] = a2
156924: 64 84                    t2 = a1
156926: 33 03 c0 22 03           t1 = 0x322c0
156931: 33 02 00 00 01           t0 = 0x10000
156936: c8 23 0a                 a3 = t1 + t0
156939: 28 1b 41 fe              jump @2998
      :                          @11123 [@dyn 1093]
156943: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
156947: 95 17 b0 01              a0 = sp + 0x1b0
156951: 7b 17 90 02              u64 [sp + 0x290] = a0
156955: 33 07 28 0c              a0 = 0xc28
156959: 7b 17 98 02              u64 [sp + 0x298] = a0
156963: 95 18 c8 01              a1 = sp + 0x1c8
156967: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
156971: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
156975: 95 18 20 01              a1 = sp + 0x120
156979: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
156983: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
156987: 95 18 e0 01              a1 = sp + 0x1e0
156991: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
156995: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
156999: 33 07 40 1e 01           a0 = 0x11e40
157004: 7b 17 38 02              u64 [sp + 0x238] = a0
157008: 49 21 40 02 04           u64 [sp + 576] = 0x4
157013: 49 21 58 02              u64 [sp + 600] = 0
157017: 95 18 90 02              a1 = sp + 0x290
157021: 7b 18 48 02              u64 [sp + 0x248] = a1
157025: 49 21 50 02 04           u64 [sp + 592] = 0x4
157030: 95 17 08 02              a0 = sp + 0x208
157034: 95 18 38 02              a1 = sp + 0x238
157038: 50 20 8c 08 d1 e9 fd     ra = 2188, jump @1491
      :                          @11124 [@dyn 1094]
157045: 82 16 10 02              s1 = u64 [sp + 0x210]
157049: 82 1b 18 02              a4 = u64 [sp + 0x218]
157053: 82 17 08 02              a0 = u64 [sp + 0x208]
157057: 7b 17 70                 u64 [sp + 0x70] = a0
157060: 33 07 02                 a0 = 0x2
157063: 33 08                    a1 = 0
157065: 33 09                    a2 = 0
157067: 64 6a                    a3 = s1
157069: 33 00 8e 08              ra = 0x88e
157073: 0a 64                    ecalli 100 // 'log'
157075: 01                       fallthrough
      :                          @11125 [@dyn 1095]
157076: 82 1c 70                 a5 = u64 [sp + 0x70]
157079: 82 17 68                 a0 = u64 [sp + 0x68]
157082: c8 c7 07                 a0 = a0 + a5
157085: 55 37 00 00 ff 09        jump @11127 if a0 >=u 4294901760
      :                          @11126
157091: 28 23 7c                 jump @12856
      :                          @11127
157094: 33 07 c0 22 03           a0 = 0x322c0
157099: 95 77 00 00 01           a0 = a0 + 0x10000
157104: 01                       fallthrough
      :                          @11128
157105: 82 78                    a1 = u64 [a0]
157107: c9 87 09                 a2 = a0 - a1
157110: aa 69 06                 jump @11130 if a2 == s1
      :                          @11129
157113: 28 0d 7c                 jump @12856
      :                          @11130
157116: c9 c8 09                 a2 = a1 - a5
157119: 01                       fallthrough
      :                          @11131
157120: 82 7a                    a3 = u64 [a0]
157122: ab 8a ef                 jump @11128 if a3 != a1
      :                          @11132
157125: 7b 79                    u64 [a0] = a2
157127: 33 0b                    a4 = 0
157129: 01                       fallthrough
      :                          @11133
157130: ab 8a e7                 jump @11128 if a3 != a1
      :                          @11134
157133: 28 f9 7b                 jump @12856
      :                          @11135 [@dyn 1096]
157136: 3a 08 78 12 03           a1 = u64 [0x31278]
157141: 97 89 0d                 a2 = a1 << 0xd
157144: d3 89 09                 a2 = a2 ^ a1
157147: 98 9a 07                 a3 = a2 >> 0x7
157150: 3a 08 60 11 03           a1 = u64 [0x31160]
157155: d3 a9 09                 a2 = a2 ^ a3
157158: 97 9a 11                 a3 = a2 << 0x11
157161: d3 9a 0a                 a3 = a3 ^ a2
157164: ca 8a 0b                 a4 = a3 * a1
157167: 3a 09 68 11 03           a2 = u64 [0x31168]
157172: 3e 0a 78 12 03           u64 [0x31278] = a3
157177: 98 ba 03                 a3 = a4 >> 0x3
157180: d6 9a 0a                 a3 = a3 mulhu a2
157183: 98 ac 04                 a5 = a3 >> 0x4
157186: 96 cc e8 03              a5 = a5 * 0x3e8
157190: c9 cb 0b                 a4 = a4 - a5
157193: 7b 1b b0 01              u64 [sp + 0x1b0] = a4
157197: 3a 0b 78 12 03           a4 = u64 [0x31278]
157202: 97 bc 0d                 a5 = a4 << 0xd
157205: d3 cb 0b                 a4 = a4 ^ a5
157208: 98 bc 07                 a5 = a4 >> 0x7
157211: d3 cb 0b                 a4 = a4 ^ a5
157214: 97 bc 11                 a5 = a4 << 0x11
157217: d3 cb 0b                 a4 = a4 ^ a5
157220: ca 8b 0c                 a5 = a4 * a1
157223: 3e 0b 78 12 03           u64 [0x31278] = a4
157228: 98 cb 03                 a4 = a5 >> 0x3
157231: d6 9b 0b                 a4 = a4 mulhu a2
157234: 98 bb 04                 a4 = a4 >> 0x4
157237: 96 bb e8 03              a4 = a4 * 0x3e8
157241: c9 bc 0c                 a5 = a5 - a4
157244: 7b 1c c8 01              u64 [sp + 0x1c8] = a5
157248: 3a 0b 78 12 03           a4 = u64 [0x31278]
157253: 97 bc 0d                 a5 = a4 << 0xd
157256: d3 cb 0b                 a4 = a4 ^ a5
157259: 98 bc 07                 a5 = a4 >> 0x7
157262: d3 cb 0b                 a4 = a4 ^ a5
157265: 97 bc 11                 a5 = a4 << 0x11
157268: d3 cb 0b                 a4 = a4 ^ a5
157271: ca 8b 08                 a1 = a4 * a1
157274: 3e 0b 78 12 03           u64 [0x31278] = a4
157279: 98 87 03                 a0 = a1 >> 0x3
157282: d6 97 07                 a0 = a0 mulhu a2
157285: 98 77 04                 a0 = a0 >> 0x4
157288: 96 77 e8 03              a0 = a0 * 0x3e8
157292: c9 78 09                 a2 = a1 - a0
157295: 95 97 01                 a0 = a2 + 0x1
157298: 7b 17 20 01              u64 [sp + 0x120] = a0
157302: 82 1c b0 01              a5 = u64 [sp + 0x1b0]
157306: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
157310: 8e 9b                    a4 = a2 >u 0
157312: 33 06 41                 s1 = 0x41
157315: 33 02 01                 t0 = 0x1
157318: 01                       fallthrough
      :                          @11136
157319: cd 7c 0c                 a5 = a5 %u a0
157322: 83 69 fe                 i32 a2 = s1 + 0xfffffffffffffffe
157325: d0 98 09                 a2 = a1 >> a2
157328: 84 99 01                 a2 = a2 & 0x1
157331: 64 ba                    a3 = a4
157333: db 9c 0a                 a3 = a5 if a2 != 0
157336: ca ca 0c                 a5 = a3 * a5
157339: ca ba 09                 a2 = a3 * a4
157342: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
157345: cd 79 0b                 a4 = a2 %u a0
157348: ac 62 e3                 jump @11136 if t0 <u s1
      :                          @11137
157351: 7b 1b e0 01              u64 [sp + 0x1e0] = a4
157355: 95 17 b0 01              a0 = sp + 0x1b0
157359: 7b 17 90 02              u64 [sp + 0x290] = a0
157363: 33 07 28 0c              a0 = 0xc28
157367: 7b 17 98 02              u64 [sp + 0x298] = a0
157371: 95 18 c8 01              a1 = sp + 0x1c8
157375: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
157379: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
157383: 95 18 20 01              a1 = sp + 0x120
157387: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
157391: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
157395: 95 18 e0 01              a1 = sp + 0x1e0
157399: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
157403: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
157407: 33 07 90 1e 01           a0 = 0x11e90
157412: 7b 17 38 02              u64 [sp + 0x238] = a0
157416: 49 21 40 02 04           u64 [sp + 576] = 0x4
157421: 49 21 58 02              u64 [sp + 600] = 0
157425: 95 18 90 02              a1 = sp + 0x290
157429: 7b 18 48 02              u64 [sp + 0x248] = a1
157433: 49 21 50 02 04           u64 [sp + 592] = 0x4
157438: 95 17 08 02              a0 = sp + 0x208
157442: 95 18 38 02              a1 = sp + 0x238
157446: 50 20 92 08 39 e8 fd     ra = 2194, jump @1491
      :                          @11138 [@dyn 1097]
157453: 82 16 10 02              s1 = u64 [sp + 0x210]
157457: 82 1b 18 02              a4 = u64 [sp + 0x218]
157461: 82 17 08 02              a0 = u64 [sp + 0x208]
157465: 7b 17 70                 u64 [sp + 0x70] = a0
157468: 33 07 02                 a0 = 0x2
157471: 33 08                    a1 = 0
157473: 33 09                    a2 = 0
157475: 64 6a                    a3 = s1
157477: 33 00 94 08              ra = 0x894
157481: 0a 64                    ecalli 100 // 'log'
157483: 01                       fallthrough
      :                          @11139 [@dyn 1098]
157484: 82 1c 70                 a5 = u64 [sp + 0x70]
157487: 82 17 68                 a0 = u64 [sp + 0x68]
157490: c8 c7 07                 a0 = a0 + a5
157493: 55 37 00 00 ff 09        jump @11141 if a0 >=u 4294901760
      :                          @11140
157499: 28 8b 7a                 jump @12856
      :                          @11141
157502: 33 07 c0 22 03           a0 = 0x322c0
157507: 95 77 00 00 01           a0 = a0 + 0x10000
157512: 01                       fallthrough
      :                          @11142
157513: 82 78                    a1 = u64 [a0]
157515: c9 87 09                 a2 = a0 - a1
157518: aa 69 06                 jump @11144 if a2 == s1
      :                          @11143
157521: 28 75 7a                 jump @12856
      :                          @11144
157524: c9 c8 09                 a2 = a1 - a5
157527: 01                       fallthrough
      :                          @11145
157528: 82 7a                    a3 = u64 [a0]
157530: ab 8a ef                 jump @11142 if a3 != a1
      :                          @11146
157533: 7b 79                    u64 [a0] = a2
157535: 33 0b                    a4 = 0
157537: 01                       fallthrough
      :                          @11147
157538: ab 8a e7                 jump @11142 if a3 != a1
      :                          @11148
157541: 28 61 7a                 jump @12856
      :                          @11149 [@dyn 1099]
157544: 3a 08 78 12 03           a1 = u64 [0x31278]
157549: 97 89 0d                 a2 = a1 << 0xd
157552: d3 98 08                 a1 = a1 ^ a2
157555: 98 89 07                 a2 = a1 >> 0x7
157558: 3a 0a 60 11 03           a3 = u64 [0x31160]
157563: d3 98 08                 a1 = a1 ^ a2
157566: 97 89 11                 a2 = a1 << 0x11
157569: d3 98 08                 a1 = a1 ^ a2
157572: ca a8 09                 a2 = a1 * a3
157575: 3e 08 78 12 03           u64 [0x31278] = a1
157580: 7b 19 c8 01              u64 [sp + 0x1c8] = a2
157584: 3a 08 78 12 03           a1 = u64 [0x31278]
157589: 97 89 0d                 a2 = a1 << 0xd
157592: d3 98 08                 a1 = a1 ^ a2
157595: 98 89 07                 a2 = a1 >> 0x7
157598: d3 98 08                 a1 = a1 ^ a2
157601: 97 89 11                 a2 = a1 << 0x11
157604: d3 98 08                 a1 = a1 ^ a2
157607: 3e 08 78 12 03           u64 [0x31278] = a1
157612: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
157616: ca a8 08                 a1 = a1 * a3
157619: 7b 18 20 01              u64 [sp + 0x120] = a1
157623: 33 00 98 08              ra = 0x898
157627: 95 11 d0                 sp = sp + 0xffffffffffffffd0
157630: 7b 10 28                 u64 [sp + 0x28] = ra
157633: 7b 15 20                 u64 [sp + 0x20] = s0
157636: 7b 16 18                 u64 [sp + 0x18] = s1
157639: 98 74 2a                 t2 = a0 >> 0x2a
157642: 98 89 2a                 a2 = a1 >> 0x2a
157645: ca 49 03                 t1 = a2 * t2
157648: 7b 13 10                 u64 [sp + 0x10] = t1
157651: 64 96                    s1 = a2
157653: 7b 19 08                 u64 [sp + 0x8] = a2
157656: 84 7b ff ff 1f           a4 = a0 & 0x1fffff
157661: 84 8a ff ff 1f           a3 = a1 & 0x1fffff
157666: ca ba 00                 ra = a3 * a4
157669: 97 77 16                 a0 = a0 << 0x16
157672: 98 7c 2b                 a5 = a0 >> 0x2b
157675: c8 b4 07                 a0 = t2 + a4
157678: c8 c7 02                 t0 = a0 + a5
157681: 97 88 16                 a1 = a1 << 0x16
157684: 98 89 2b                 a2 = a1 >> 0x2b
157687: c8 a6 06                 s1 = s1 + a3
157690: c8 96 08                 a1 = s1 + a2
157693: ca 28 08                 a1 = a1 * t0
157696: c8 30 02                 t0 = ra + t1
157699: d8 02 05                 s0 = t0 <u ra
157702: d8 28 03                 t1 = a1 <u t0
157705: c8 53 03                 t1 = t1 + s0
157708: c9 c7 07                 a0 = a0 - a5
157711: c9 96 06                 s1 = s1 - a2
157714: ca 76 07                 a0 = s1 * a0
157717: c9 28 05                 s0 = a1 - t0
157720: c9 27 07                 a0 = a0 - t0
157723: c8 57 07                 a0 = a0 + s0
157726: 98 78 3f                 a1 = a0 >> 0x3f
157729: c8 78 08                 a1 = a1 + a0
157732: 99 87 01                 a0 = a1 >>a 0x1
157735: 99 88 3f                 a1 = a1 >>a 0x3f
157738: c8 83 03                 t1 = t1 + a1
157741: d8 75 06                 s1 = s0 <u a0
157744: c8 63 03                 t1 = t1 + s1
157747: 97 44 02                 t2 = t2 << 0x2
157750: c8 4b 0b                 a4 = a4 + t2
157753: 97 cc 01                 a5 = a5 << 0x1
157756: c8 cb 0b                 a4 = a4 + a5
157759: 82 1c 08                 a5 = u64 [sp + 0x8]
157762: 97 cc 02                 a5 = a5 << 0x2
157765: c8 ca 0a                 a3 = a3 + a5
157768: 97 99 01                 a2 = a2 << 0x1
157771: c8 a9 09                 a2 = a2 + a3
157774: ca b9 09                 a2 = a2 * a4
157777: 98 7a 3e                 a3 = a0 >> 0x3e
157780: 97 88 02                 a1 = a1 << 0x2
157783: d4 a8 08                 a1 = a1 | a3
157786: 97 7a 02                 a3 = a0 << 0x2
157789: c8 0a 0a                 a3 = a3 + ra
157792: d8 0a 0b                 a4 = a3 <u ra
157795: c8 b8 08                 a1 = a1 + a4
157798: 9a 3b                    a4 = -t1
157800: c9 75 05                 s0 = s0 - a0
157803: 82 1c 10                 a5 = u64 [sp + 0x10]
157806: 97 cc 04                 a5 = a5 << 0x4
157809: c8 ca 0a                 a3 = a3 + a5
157812: d8 ca 0c                 a5 = a3 <u a5
157815: c8 c8 08                 a1 = a1 + a5
157818: 97 bb 01                 a4 = a4 << 0x1
157821: 98 5c 3f                 a5 = s0 >> 0x3f
157824: d4 cb 0b                 a4 = a4 | a5
157827: 97 5c 01                 a5 = s0 << 0x1
157830: c8 b8 08                 a1 = a1 + a4
157833: c8 ac 0c                 a5 = a5 + a3
157836: d8 ac 0a                 a3 = a5 <u a3
157839: d8 c9 0b                 a4 = a2 <u a5
157842: c8 ba 0a                 a3 = a3 + a4
157845: c8 a8 08                 a1 = a1 + a3
157848: bf c9 09                 i32 a2 = a2 - a5
157851: 9a 88                    a1 = -a1
157853: 99 88 3f                 a1 = a1 >>a 0x3f
157856: 98 88 3d                 a1 = a1 >> 0x3d
157859: c8 98 08                 a1 = a1 + a2
157862: 97 77 2a                 a0 = a0 << 0x2a
157865: d4 07 07                 a0 = a0 | ra
157868: 97 55 15                 s0 = s0 << 0x15
157871: c8 57 07                 a0 = a0 + s0
157874: 98 88 03                 a1 = a1 >> 0x3
157877: 97 88 3f                 a1 = a1 << 0x3f
157880: c8 87 07                 a0 = a0 + a1
157883: 82 10 28                 ra = u64 [sp + 0x28]
157886: 82 15 20                 s0 = u64 [sp + 0x20]
157889: 82 16 18                 s1 = u64 [sp + 0x18]
157892: 95 11 30                 sp = sp + 0x30
157895: 32 00                    ret
      :                          @11150 [@dyn 1100]
157897: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
157901: 95 17 c8 01              a0 = sp + 0x1c8
157905: 7b 17 90 02              u64 [sp + 0x290] = a0
157909: 33 07 28 0c              a0 = 0xc28
157913: 7b 17 98 02              u64 [sp + 0x298] = a0
157917: 95 18 20 01              a1 = sp + 0x120
157921: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
157925: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
157929: 95 18 e0 01              a1 = sp + 0x1e0
157933: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
157937: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
157941: 33 07 e0 1e 01           a0 = 0x11ee0
157946: 7b 17 38 02              u64 [sp + 0x238] = a0
157950: 49 21 40 02 03           u64 [sp + 576] = 0x3
157955: 49 21 58 02              u64 [sp + 600] = 0
157959: 95 18 90 02              a1 = sp + 0x290
157963: 7b 18 48 02              u64 [sp + 0x248] = a1
157967: 49 21 50 02 03           u64 [sp + 592] = 0x3
157972: 95 17 08 02              a0 = sp + 0x208
157976: 95 18 38 02              a1 = sp + 0x238
157980: 50 20 9a 08 23 e6 fd     ra = 2202, jump @1491
      :                          @11151 [@dyn 1101]
157987: 82 16 10 02              s1 = u64 [sp + 0x210]
157991: 82 1b 18 02              a4 = u64 [sp + 0x218]
157995: 82 17 08 02              a0 = u64 [sp + 0x208]
157999: 7b 17 70                 u64 [sp + 0x70] = a0
158002: 33 07 02                 a0 = 0x2
158005: 33 08                    a1 = 0
158007: 33 09                    a2 = 0
158009: 64 6a                    a3 = s1
158011: 33 00 9c 08              ra = 0x89c
158015: 0a 64                    ecalli 100 // 'log'
158017: 01                       fallthrough
      :                          @11152 [@dyn 1102]
158018: 82 1c 70                 a5 = u64 [sp + 0x70]
158021: 82 17 68                 a0 = u64 [sp + 0x68]
158024: c8 c7 07                 a0 = a0 + a5
158027: 55 37 00 00 ff 09        jump @11154 if a0 >=u 4294901760
      :                          @11153
158033: 28 75 78                 jump @12856
      :                          @11154
158036: 33 07 c0 22 03           a0 = 0x322c0
158041: 95 77 00 00 01           a0 = a0 + 0x10000
158046: 01                       fallthrough
      :                          @11155
158047: 82 78                    a1 = u64 [a0]
158049: c9 87 09                 a2 = a0 - a1
158052: aa 69 06                 jump @11157 if a2 == s1
      :                          @11156
158055: 28 5f 78                 jump @12856
      :                          @11157
158058: c9 c8 09                 a2 = a1 - a5
158061: 01                       fallthrough
      :                          @11158
158062: 82 7a                    a3 = u64 [a0]
158064: ab 8a ef                 jump @11155 if a3 != a1
      :                          @11159
158067: 7b 79                    u64 [a0] = a2
158069: 33 0b                    a4 = 0
158071: 01                       fallthrough
      :                          @11160
158072: ab 8a e7                 jump @11155 if a3 != a1
      :                          @11161
158075: 28 4b 78                 jump @12856
      :                          @11162 [@dyn 1103]
158078: 3a 08 78 12 03           a1 = u64 [0x31278]
158083: 97 89 0d                 a2 = a1 << 0xd
158086: d3 98 08                 a1 = a1 ^ a2
158089: 98 89 07                 a2 = a1 >> 0x7
158092: d3 98 08                 a1 = a1 ^ a2
158095: 97 89 11                 a2 = a1 << 0x11
158098: 3a 0a 60 11 03           a3 = u64 [0x31160]
158103: d3 98 08                 a1 = a1 ^ a2
158106: 3a 09 b8 11 03           a2 = u64 [0x311b8]
158111: ca a8 0b                 a4 = a1 * a3
158114: 3e 08 78 12 03           u64 [0x31278] = a1
158119: d6 9b 08                 a1 = a4 mulhu a2
158122: 98 88 12                 a1 = a1 >> 0x12
158125: 33 0c 40 42 0f           a5 = 0xf4240
158130: ca c8 08                 a1 = a1 * a5
158133: c9 8b 0b                 a4 = a4 - a1
158136: 7b 1b c8 01              u64 [sp + 0x1c8] = a4
158140: 3a 08 78 12 03           a1 = u64 [0x31278]
158145: 97 8b 0d                 a4 = a1 << 0xd
158148: d3 b8 08                 a1 = a1 ^ a4
158151: 98 8b 07                 a4 = a1 >> 0x7
158154: d3 b8 08                 a1 = a1 ^ a4
158157: 97 8b 11                 a4 = a1 << 0x11
158160: d3 b8 08                 a1 = a1 ^ a4
158163: ca a8 0a                 a3 = a1 * a3
158166: 3e 08 78 12 03           u64 [0x31278] = a1
158171: d6 9a 07                 a0 = a3 mulhu a2
158174: 98 78 12                 a1 = a0 >> 0x12
158177: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
158181: ca c8 08                 a1 = a1 * a5
158184: c9 8a 08                 a1 = a3 - a1
158187: 7b 18 20 01              u64 [sp + 0x120] = a1
158191: 50 20 a0 08 cf 6b fe     ra = 2208, jump @4113
      :                          @11163 [@dyn 1104]
158198: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
158202: 95 17 c8 01              a0 = sp + 0x1c8
158206: 7b 17 90 02              u64 [sp + 0x290] = a0
158210: 33 07 28 0c              a0 = 0xc28
158214: 7b 17 98 02              u64 [sp + 0x298] = a0
158218: 95 18 20 01              a1 = sp + 0x120
158222: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
158226: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
158230: 95 18 e0 01              a1 = sp + 0x1e0
158234: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
158238: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
158242: 33 07 20 1f 01           a0 = 0x11f20
158247: 7b 17 38 02              u64 [sp + 0x238] = a0
158251: 49 21 40 02 03           u64 [sp + 576] = 0x3
158256: 49 21 58 02              u64 [sp + 600] = 0
158260: 95 18 90 02              a1 = sp + 0x290
158264: 7b 18 48 02              u64 [sp + 0x248] = a1
158268: 49 21 50 02 03           u64 [sp + 592] = 0x3
158273: 95 17 08 02              a0 = sp + 0x208
158277: 95 18 38 02              a1 = sp + 0x238
158281: 50 20 a2 08 f6 e4 fd     ra = 2210, jump @1491
      :                          @11164 [@dyn 1105]
158288: 82 16 10 02              s1 = u64 [sp + 0x210]
158292: 82 1b 18 02              a4 = u64 [sp + 0x218]
158296: 82 17 08 02              a0 = u64 [sp + 0x208]
158300: 7b 17 70                 u64 [sp + 0x70] = a0
158303: 33 07 02                 a0 = 0x2
158306: 33 08                    a1 = 0
158308: 33 09                    a2 = 0
158310: 64 6a                    a3 = s1
158312: 33 00 a4 08              ra = 0x8a4
158316: 0a 64                    ecalli 100 // 'log'
158318: 01                       fallthrough
      :                          @11165 [@dyn 1106]
158319: 82 1c 70                 a5 = u64 [sp + 0x70]
158322: 82 17 68                 a0 = u64 [sp + 0x68]
158325: c8 c7 07                 a0 = a0 + a5
158328: 55 37 00 00 ff 09        jump @11167 if a0 >=u 4294901760
      :                          @11166
158334: 28 48 77                 jump @12856
      :                          @11167
158337: 33 07 c0 22 03           a0 = 0x322c0
158342: 95 77 00 00 01           a0 = a0 + 0x10000
158347: 01                       fallthrough
      :                          @11168
158348: 82 78                    a1 = u64 [a0]
158350: c9 87 09                 a2 = a0 - a1
158353: aa 69 06                 jump @11170 if a2 == s1
      :                          @11169
158356: 28 32 77                 jump @12856
      :                          @11170
158359: c9 c8 09                 a2 = a1 - a5
158362: 01                       fallthrough
      :                          @11171
158363: 82 7a                    a3 = u64 [a0]
158365: ab 8a ef                 jump @11168 if a3 != a1
      :                          @11172
158368: 7b 79                    u64 [a0] = a2
158370: 33 0b                    a4 = 0
158372: 01                       fallthrough
      :                          @11173
158373: ab 8a e7                 jump @11168 if a3 != a1
      :                          @11174
158376: 28 1e 77                 jump @12856
      :                          @11175 [@dyn 1107]
158379: 3a 08 78 12 03           a1 = u64 [0x31278]
158384: 97 89 0d                 a2 = a1 << 0xd
158387: d3 98 08                 a1 = a1 ^ a2
158390: 98 89 07                 a2 = a1 >> 0x7
158393: d3 98 08                 a1 = a1 ^ a2
158396: 97 89 11                 a2 = a1 << 0x11
158399: 3a 0a 60 11 03           a3 = u64 [0x31160]
158404: d3 98 08                 a1 = a1 ^ a2
158407: 3a 09 b8 11 03           a2 = u64 [0x311b8]
158412: ca a8 0b                 a4 = a1 * a3
158415: 3e 08 78 12 03           u64 [0x31278] = a1
158420: d6 9b 08                 a1 = a4 mulhu a2
158423: 98 88 12                 a1 = a1 >> 0x12
158426: 33 0c 40 42 0f           a5 = 0xf4240
158431: ca c8 08                 a1 = a1 * a5
158434: c9 8b 0b                 a4 = a4 - a1
158437: 7b 1b c8 01              u64 [sp + 0x1c8] = a4
158441: 3a 08 78 12 03           a1 = u64 [0x31278]
158446: 97 8b 0d                 a4 = a1 << 0xd
158449: d3 b8 08                 a1 = a1 ^ a4
158452: 98 8b 07                 a4 = a1 >> 0x7
158455: d3 b8 08                 a1 = a1 ^ a4
158458: 97 8b 11                 a4 = a1 << 0x11
158461: d3 b8 08                 a1 = a1 ^ a4
158464: ca a8 0a                 a3 = a1 * a3
158467: 3e 08 78 12 03           u64 [0x31278] = a1
158472: d6 9a 08                 a1 = a3 mulhu a2
158475: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
158479: 98 88 12                 a1 = a1 >> 0x12
158482: ca c8 08                 a1 = a1 * a5
158485: c9 8a 08                 a1 = a3 - a1
158488: 7b 18 20 01              u64 [sp + 0x120] = a1
158492: 52 07 06                 jump @11177 if a0 != 0
      :                          @11176
158495: 28 a0 7c                 jump @12972
      :                          @11177
158498: 88 89 01                 a2 = a1 <u 0x1
158501: d3 87 0a                 a3 = a0 ^ a1
158504: 88 aa 01                 a3 = a3 <u 0x1
158507: d4 a9 09                 a2 = a2 | a3
158510: 51 09 08                 jump @11179 if a2 == 0
      :                          @11178
158513: 64 79                    a2 = a0
158515: 28 8f 7c                 jump @12973
      :                          @11179
158518: d8 78 0a                 a3 = a1 <u a0
158521: 64 79                    a2 = a0
158523: 94 a9                    a2 = 0 if a3 != 0
158525: c9 98 09                 a2 = a1 - a2
158528: 93 a8                    a1 = 0 if a3 == 0
158530: c9 87 07                 a0 = a0 - a1
158533: 64 98                    a1 = a2
158535: ab 97 ef                 jump @11179 if a0 != a2
      :                          @11180
158538: 28 78 7c                 jump @12973
      :                          @11181 [@dyn 1108]
158541: 3a 08 78 12 03           a1 = u64 [0x31278]
158546: 97 89 0d                 a2 = a1 << 0xd
158549: d3 98 08                 a1 = a1 ^ a2
158552: 98 89 07                 a2 = a1 >> 0x7
158555: d3 89 09                 a2 = a2 ^ a1
158558: 97 9a 11                 a3 = a2 << 0x11
158561: 3a 08 60 11 03           a1 = u64 [0x31160]
158566: d3 a9 09                 a2 = a2 ^ a3
158569: 3a 0a b8 11 03           a3 = u64 [0x311b8]
158574: ca 89 0b                 a4 = a2 * a1
158577: 3e 09 78 12 03           u64 [0x31278] = a2
158582: d6 ab 09                 a2 = a4 mulhu a3
158585: 98 99 12                 a2 = a2 >> 0x12
158588: 96 99 40 42 0f           a2 = a2 * 0xf4240
158593: c9 9b 0b                 a4 = a4 - a2
158596: 7b 1b c8 01              u64 [sp + 0x1c8] = a4
158600: 3a 09 78 12 03           a2 = u64 [0x31278]
158605: 97 9b 0d                 a4 = a2 << 0xd
158608: d3 b9 09                 a2 = a2 ^ a4
158611: 98 9b 07                 a4 = a2 >> 0x7
158614: d3 b9 09                 a2 = a2 ^ a4
158617: 97 9b 11                 a4 = a2 << 0x11
158620: d3 b9 09                 a2 = a2 ^ a4
158623: 3a 0b c8 11 03           a4 = u64 [0x311c8]
158628: ca 89 08                 a1 = a2 * a1
158631: 3e 09 78 12 03           u64 [0x31278] = a2
158636: d6 b8 07                 a0 = a1 mulhu a4
158639: 98 77 13                 a0 = a0 >> 0x13
158642: 96 79 3f 42 0f           a2 = a0 * 0xf423f
158647: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
158651: c9 98 08                 a1 = a1 - a2
158654: 95 88 01                 a1 = a1 + 0x1
158657: 7b 18 20 01              u64 [sp + 0x120] = a1
158661: 33 00 aa 08              ra = 0x8aa
158665: 33 0b 01                 a4 = 0x1
158668: 33 09 ff                 a2 = 0xffffffffffffffff
158671: 28 26 6a fe              jump @4120
      :                          @11182 [@dyn 1109]
158675: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
158679: 95 17 c8 01              a0 = sp + 0x1c8
158683: 7b 17 90 02              u64 [sp + 0x290] = a0
158687: 33 07 28 0c              a0 = 0xc28
158691: 7b 17 98 02              u64 [sp + 0x298] = a0
158695: 95 18 20 01              a1 = sp + 0x120
158699: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
158703: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
158707: 95 18 e0 01              a1 = sp + 0x1e0
158711: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
158715: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
158719: 33 07 80 1f 01           a0 = 0x11f80
158724: 7b 17 38 02              u64 [sp + 0x238] = a0
158728: 49 21 40 02 03           u64 [sp + 576] = 0x3
158733: 49 21 58 02              u64 [sp + 600] = 0
158737: 95 18 90 02              a1 = sp + 0x290
158741: 7b 18 48 02              u64 [sp + 0x248] = a1
158745: 49 21 50 02 03           u64 [sp + 592] = 0x3
158750: 95 17 08 02              a0 = sp + 0x208
158754: 95 18 38 02              a1 = sp + 0x238
158758: 50 20 ac 08 19 e3 fd     ra = 2220, jump @1491
      :                          @11183 [@dyn 1110]
158765: 82 16 10 02              s1 = u64 [sp + 0x210]
158769: 82 1b 18 02              a4 = u64 [sp + 0x218]
158773: 82 17 08 02              a0 = u64 [sp + 0x208]
158777: 7b 17 70                 u64 [sp + 0x70] = a0
158780: 33 07 02                 a0 = 0x2
158783: 33 08                    a1 = 0
158785: 33 09                    a2 = 0
158787: 64 6a                    a3 = s1
158789: 33 00 ae 08              ra = 0x8ae
158793: 0a 64                    ecalli 100 // 'log'
158795: 01                       fallthrough
      :                          @11184 [@dyn 1111]
158796: 82 1c 70                 a5 = u64 [sp + 0x70]
158799: 82 17 68                 a0 = u64 [sp + 0x68]
158802: c8 c7 07                 a0 = a0 + a5
158805: 55 37 00 00 ff 09        jump @11186 if a0 >=u 4294901760
      :                          @11185
158811: 28 6b 75                 jump @12856
      :                          @11186
158814: 33 07 c0 22 03           a0 = 0x322c0
158819: 95 77 00 00 01           a0 = a0 + 0x10000
158824: 01                       fallthrough
      :                          @11187
158825: 82 78                    a1 = u64 [a0]
158827: c9 87 09                 a2 = a0 - a1
158830: aa 69 06                 jump @11189 if a2 == s1
      :                          @11188
158833: 28 55 75                 jump @12856
      :                          @11189
158836: c9 c8 09                 a2 = a1 - a5
158839: 01                       fallthrough
      :                          @11190
158840: 82 7a                    a3 = u64 [a0]
158842: ab 8a ef                 jump @11187 if a3 != a1
      :                          @11191
158845: 7b 79                    u64 [a0] = a2
158847: 33 0b                    a4 = 0
158849: 01                       fallthrough
      :                          @11192
158850: ab 8a e7                 jump @11187 if a3 != a1
      :                          @11193
158853: 28 41 75                 jump @12856
      :                          @11194 [@dyn 1112]
158856: 3a 08 78 12 03           a1 = u64 [0x31278]
158861: 97 89 0d                 a2 = a1 << 0xd
158864: d3 98 08                 a1 = a1 ^ a2
158867: 98 89 07                 a2 = a1 >> 0x7
158870: d3 89 09                 a2 = a2 ^ a1
158873: 97 9a 11                 a3 = a2 << 0x11
158876: 3a 08 60 11 03           a1 = u64 [0x31160]
158881: d3 a9 09                 a2 = a2 ^ a3
158884: 3a 0a b8 11 03           a3 = u64 [0x311b8]
158889: ca 89 0b                 a4 = a2 * a1
158892: 3e 09 78 12 03           u64 [0x31278] = a2
158897: d6 ab 09                 a2 = a4 mulhu a3
158900: 98 99 12                 a2 = a2 >> 0x12
158903: 96 99 40 42 0f           a2 = a2 * 0xf4240
158908: c9 9b 0b                 a4 = a4 - a2
158911: 95 bb 01                 a4 = a4 + 0x1
158914: 7b 1b 20 01              u64 [sp + 0x120] = a4
158918: 3a 09 78 12 03           a2 = u64 [0x31278]
158923: 97 9a 0d                 a3 = a2 << 0xd
158926: d3 a9 09                 a2 = a2 ^ a3
158929: 98 9a 07                 a3 = a2 >> 0x7
158932: d3 a9 09                 a2 = a2 ^ a3
158935: 97 9a 11                 a3 = a2 << 0x11
158938: d3 a9 09                 a2 = a2 ^ a3
158941: 3a 0a c0 11 03           a3 = u64 [0x311c0]
158946: ca 89 08                 a1 = a2 * a1
158949: 3e 09 78 12 03           u64 [0x31278] = a2
158954: d6 a8 07                 a0 = a1 mulhu a3
158957: 98 79 03                 a2 = a0 >> 0x3
158960: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
158963: 82 17 20 01              a0 = u64 [sp + 0x120]
158967: c8 a9 09                 a2 = a2 + a3
158970: c9 98 08                 a1 = a1 - a2
158973: 95 88 02                 a1 = a1 + 0x2
158976: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
158980: 33 09                    a2 = 0
158982: ac 87 18                 jump @11197 if a0 <u a1
      :                          @11195
158985: 33 0a ff                 a3 = 0xffffffffffffffff
158988: 64 8b                    a4 = a1
158990: 01                       fallthrough
      :                          @11196
158991: d6 8b 0c                 a5 = a4 mulhu a1
158994: ca 8b 0b                 a4 = a4 * a1
158997: db ca 0b                 a4 = a3 if a5 != 0
159000: 83 99 01                 i32 a2 = a2 + 0x1
159003: ae b7 f4                 jump @11196 if a0 >=u a4
      :                          @11197
159006: 7a 19 c8 01              u32 [sp + 0x1c8] = a2
159010: 95 17 20 01              a0 = sp + 0x120
159014: 7b 17 90 02              u64 [sp + 0x290] = a0
159018: 33 07 28 0c              a0 = 0xc28
159022: 7b 17 98 02              u64 [sp + 0x298] = a0
159026: 95 18 e0 01              a1 = sp + 0x1e0
159030: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
159034: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
159038: 95 17 c8 01              a0 = sp + 0x1c8
159042: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
159046: 33 07 5e 0c              a0 = 0xc5e
159050: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
159054: 33 07 b0 1f 01           a0 = 0x11fb0
159059: 7b 17 38 02              u64 [sp + 0x238] = a0
159063: 49 21 40 02 03           u64 [sp + 576] = 0x3
159068: 49 21 58 02              u64 [sp + 600] = 0
159072: 95 18 90 02              a1 = sp + 0x290
159076: 7b 18 48 02              u64 [sp + 0x248] = a1
159080: 49 21 50 02 03           u64 [sp + 592] = 0x3
159085: 95 17 08 02              a0 = sp + 0x208
159089: 95 18 38 02              a1 = sp + 0x238
159093: 50 20 b2 08 ca e1 fd     ra = 2226, jump @1491
      :                          @11198 [@dyn 1113]
159100: 82 16 10 02              s1 = u64 [sp + 0x210]
159104: 82 1b 18 02              a4 = u64 [sp + 0x218]
159108: 82 17 08 02              a0 = u64 [sp + 0x208]
159112: 7b 17 70                 u64 [sp + 0x70] = a0
159115: 33 07 02                 a0 = 0x2
159118: 33 08                    a1 = 0
159120: 33 09                    a2 = 0
159122: 64 6a                    a3 = s1
159124: 33 00 b4 08              ra = 0x8b4
159128: 0a 64                    ecalli 100 // 'log'
159130: 01                       fallthrough
      :                          @11199 [@dyn 1114]
159131: 82 1c 70                 a5 = u64 [sp + 0x70]
159134: 82 17 68                 a0 = u64 [sp + 0x68]
159137: c8 c7 07                 a0 = a0 + a5
159140: 55 37 00 00 ff 09        jump @11201 if a0 >=u 4294901760
      :                          @11200
159146: 28 1c 74                 jump @12856
      :                          @11201
159149: 33 07 c0 22 03           a0 = 0x322c0
159154: 95 77 00 00 01           a0 = a0 + 0x10000
159159: 01                       fallthrough
      :                          @11202
159160: 82 78                    a1 = u64 [a0]
159162: c9 87 09                 a2 = a0 - a1
159165: aa 69 06                 jump @11204 if a2 == s1
      :                          @11203
159168: 28 06 74                 jump @12856
      :                          @11204
159171: c9 c8 09                 a2 = a1 - a5
159174: 01                       fallthrough
      :                          @11205
159175: 82 7a                    a3 = u64 [a0]
159177: ab 8a ef                 jump @11202 if a3 != a1
      :                          @11206
159180: 7b 79                    u64 [a0] = a2
159182: 33 0b                    a4 = 0
159184: 01                       fallthrough
      :                          @11207
159185: ab 8a e7                 jump @11202 if a3 != a1
      :                          @11208
159188: 28 f2 73                 jump @12856
      :                          @11209 [@dyn 1115]
159191: 3a 08 78 12 03           a1 = u64 [0x31278]
159196: 97 89 0d                 a2 = a1 << 0xd
159199: d3 98 08                 a1 = a1 ^ a2
159202: 98 89 07                 a2 = a1 >> 0x7
159205: d3 89 09                 a2 = a2 ^ a1
159208: 97 9a 11                 a3 = a2 << 0x11
159211: 3a 08 60 11 03           a1 = u64 [0x31160]
159216: d3 a9 09                 a2 = a2 ^ a3
159219: 3a 0a b8 11 03           a3 = u64 [0x311b8]
159224: ca 89 0b                 a4 = a2 * a1
159227: 3e 09 78 12 03           u64 [0x31278] = a2
159232: d6 ab 09                 a2 = a4 mulhu a3
159235: 98 99 12                 a2 = a2 >> 0x12
159238: 96 99 40 42 0f           a2 = a2 * 0xf4240
159243: c9 9b 0b                 a4 = a4 - a2
159246: 95 bb 01                 a4 = a4 + 0x1
159249: 7b 1b 20 01              u64 [sp + 0x120] = a4
159253: 3a 09 78 12 03           a2 = u64 [0x31278]
159258: 97 9a 0d                 a3 = a2 << 0xd
159261: d3 a9 09                 a2 = a2 ^ a3
159264: 98 9a 07                 a3 = a2 >> 0x7
159267: d3 a9 09                 a2 = a2 ^ a3
159270: 97 9a 11                 a3 = a2 << 0x11
159273: d3 a9 09                 a2 = a2 ^ a3
159276: 3a 0a c0 11 03           a3 = u64 [0x311c0]
159281: ca 89 08                 a1 = a2 * a1
159284: 3e 09 78 12 03           u64 [0x31278] = a2
159289: d6 a8 07                 a0 = a1 mulhu a3
159292: 98 79 03                 a2 = a0 >> 0x3
159295: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
159298: 82 17 20 01              a0 = u64 [sp + 0x120]
159302: c8 a9 09                 a2 = a2 + a3
159305: c9 98 08                 a1 = a1 - a2
159308: 95 88 02                 a1 = a1 + 0x2
159311: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
159315: 33 09                    a2 = 0
159317: ac 87 0c                 jump @11211 if a0 <u a1
      :                          @11210
159320: cb 87 07                 a0 = a0 /u a1
159323: 83 99 01                 i32 a2 = a2 + 0x1
159326: ae 87 fa                 jump @11210 if a0 >=u a1
      :                          @11211
159329: 7a 19 c8 01              u32 [sp + 0x1c8] = a2
159333: 95 17 20 01              a0 = sp + 0x120
159337: 7b 17 90 02              u64 [sp + 0x290] = a0
159341: 33 07 28 0c              a0 = 0xc28
159345: 7b 17 98 02              u64 [sp + 0x298] = a0
159349: 95 18 e0 01              a1 = sp + 0x1e0
159353: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
159357: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
159361: 95 17 c8 01              a0 = sp + 0x1c8
159365: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
159369: 33 07 5e 0c              a0 = 0xc5e
159373: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
159377: 33 07 e0 1f 01           a0 = 0x11fe0
159382: 7b 17 38 02              u64 [sp + 0x238] = a0
159386: 49 21 40 02 03           u64 [sp + 576] = 0x3
159391: 49 21 58 02              u64 [sp + 600] = 0
159395: 95 18 90 02              a1 = sp + 0x290
159399: 7b 18 48 02              u64 [sp + 0x248] = a1
159403: 49 21 50 02 03           u64 [sp + 592] = 0x3
159408: 95 17 08 02              a0 = sp + 0x208
159412: 95 18 38 02              a1 = sp + 0x238
159416: 50 20 b8 08 87 e0 fd     ra = 2232, jump @1491
      :                          @11212 [@dyn 1116]
159423: 82 16 10 02              s1 = u64 [sp + 0x210]
159427: 82 1b 18 02              a4 = u64 [sp + 0x218]
159431: 82 17 08 02              a0 = u64 [sp + 0x208]
159435: 7b 17 70                 u64 [sp + 0x70] = a0
159438: 33 07 02                 a0 = 0x2
159441: 33 08                    a1 = 0
159443: 33 09                    a2 = 0
159445: 64 6a                    a3 = s1
159447: 33 00 ba 08              ra = 0x8ba
159451: 0a 64                    ecalli 100 // 'log'
159453: 01                       fallthrough
      :                          @11213 [@dyn 1117]
159454: 82 1c 70                 a5 = u64 [sp + 0x70]
159457: 82 17 68                 a0 = u64 [sp + 0x68]
159460: c8 c7 07                 a0 = a0 + a5
159463: 55 37 00 00 ff 09        jump @11215 if a0 >=u 4294901760
      :                          @11214
159469: 28 d9 72                 jump @12856
      :                          @11215
159472: 33 07 c0 22 03           a0 = 0x322c0
159477: 95 77 00 00 01           a0 = a0 + 0x10000
159482: 01                       fallthrough
      :                          @11216
159483: 82 78                    a1 = u64 [a0]
159485: c9 87 09                 a2 = a0 - a1
159488: aa 69 06                 jump @11218 if a2 == s1
      :                          @11217
159491: 28 c3 72                 jump @12856
      :                          @11218
159494: c9 c8 09                 a2 = a1 - a5
159497: 01                       fallthrough
      :                          @11219
159498: 82 7a                    a3 = u64 [a0]
159500: ab 8a ef                 jump @11216 if a3 != a1
      :                          @11220
159503: 7b 79                    u64 [a0] = a2
159505: 33 0b                    a4 = 0
159507: 01                       fallthrough
      :                          @11221
159508: ab 8a e7                 jump @11216 if a3 != a1
      :                          @11222
159511: 28 af 72                 jump @12856
      :                          @11223 [@dyn 1118]
159514: 3a 08 78 12 03           a1 = u64 [0x31278]
159519: 33 09                    a2 = 0
159521: 97 8a 0d                 a3 = a1 << 0xd
159524: d3 a8 08                 a1 = a1 ^ a3
159527: 98 8a 07                 a3 = a1 >> 0x7
159530: d3 a8 08                 a1 = a1 ^ a3
159533: 97 8a 11                 a3 = a1 << 0x11
159536: d3 a8 08                 a1 = a1 ^ a3
159539: 3a 0a 60 11 03           a3 = u64 [0x31160]
159544: 3a 0b b8 11 03           a4 = u64 [0x311b8]
159549: 3e 08 78 12 03           u64 [0x31278] = a1
159554: ca a8 07                 a0 = a1 * a3
159557: d6 b7 08                 a1 = a0 mulhu a4
159560: 98 88 12                 a1 = a1 >> 0x12
159563: 96 88 40 42 0f           a1 = a1 * 0xf4240
159568: c9 87 07                 a0 = a0 - a1
159571: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
159575: 98 78 01                 a1 = a0 >> 0x1
159578: 95 88 01                 a1 = a1 + 0x1
159581: 33 02 ff                 t0 = 0xffffffffffffffff
159584: 01                       fallthrough
      :                          @11224
159585: c8 98 0c                 a5 = a1 + a2
159588: 98 cc 01                 a5 = a5 >> 0x1
159591: d6 cc 06                 s1 = a5 mulhu a5
159594: ca cc 0b                 a4 = a5 * a5
159597: db 62 0b                 a4 = t0 if s1 != 0
159600: aa 7b 15                 jump @11226 if a4 == a0
      :                          @11225
159603: d8 7b 06                 s1 = a4 <u a0
159606: 95 ca 01                 a3 = a5 + 0x1
159609: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
159612: da 6c 08                 a1 = a5 if s1 == 0
159615: db 6a 09                 a2 = a3 if s1 != 0
159618: ae 98 df                 jump @11224 if a1 >=u a2
      :                          @11226
159621: d3 b7 07                 a0 = a0 ^ a4
159624: 88 77 01                 a0 = a0 <u 0x1
159627: 78 17 20 01              u8 [sp + 0x120] = a0
159631: 95 17 e0 01              a0 = sp + 0x1e0
159635: 7b 17 38 02              u64 [sp + 0x238] = a0
159639: 33 07 28 0c              a0 = 0xc28
159643: 7b 17 40 02              u64 [sp + 0x240] = a0
159647: 95 17 20 01              a0 = sp + 0x120
159651: 7b 17 48 02              u64 [sp + 0x248] = a0
159655: 33 07 80 0c              a0 = 0xc80
159659: 7b 17 50 02              u64 [sp + 0x250] = a0
159663: 33 07 28 20 01           a0 = 0x12028
159668: 7b 17 90 02              u64 [sp + 0x290] = a0
159672: 49 21 98 02 02           u64 [sp + 664] = 0x2
159677: 49 21 b0 02              u64 [sp + 688] = 0
159681: 95 18 38 02              a1 = sp + 0x238
159685: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
159689: 49 21 a8 02 02           u64 [sp + 680] = 0x2
159694: 95 17 08 02              a0 = sp + 0x208
159698: 95 18 90 02              a1 = sp + 0x290
159702: 50 20 be 08 69 df fd     ra = 2238, jump @1491
      :                          @11227 [@dyn 1119]
159709: 82 16 10 02              s1 = u64 [sp + 0x210]
159713: 82 1b 18 02              a4 = u64 [sp + 0x218]
159717: 82 17 08 02              a0 = u64 [sp + 0x208]
159721: 7b 17 70                 u64 [sp + 0x70] = a0
159724: 33 07 02                 a0 = 0x2
159727: 33 08                    a1 = 0
159729: 33 09                    a2 = 0
159731: 64 6a                    a3 = s1
159733: 33 00 c0 08              ra = 0x8c0
159737: 0a 64                    ecalli 100 // 'log'
159739: 01                       fallthrough
      :                          @11228 [@dyn 1120]
159740: 82 1c 70                 a5 = u64 [sp + 0x70]
159743: 82 17 68                 a0 = u64 [sp + 0x68]
159746: c8 c7 07                 a0 = a0 + a5
159749: 55 37 00 00 ff 09        jump @11230 if a0 >=u 4294901760
      :                          @11229
159755: 28 bb 71                 jump @12856
      :                          @11230
159758: 33 07 c0 22 03           a0 = 0x322c0
159763: 95 77 00 00 01           a0 = a0 + 0x10000
159768: 01                       fallthrough
      :                          @11231
159769: 82 78                    a1 = u64 [a0]
159771: c9 87 09                 a2 = a0 - a1
159774: aa 69 06                 jump @11233 if a2 == s1
      :                          @11232
159777: 28 a5 71                 jump @12856
      :                          @11233
159780: c9 c8 09                 a2 = a1 - a5
159783: 01                       fallthrough
      :                          @11234
159784: 82 7a                    a3 = u64 [a0]
159786: ab 8a ef                 jump @11231 if a3 != a1
      :                          @11235
159789: 7b 79                    u64 [a0] = a2
159791: 33 0b                    a4 = 0
159793: 01                       fallthrough
      :                          @11236
159794: ab 8a e7                 jump @11231 if a3 != a1
      :                          @11237
159797: 28 91 71                 jump @12856
      :                          @11238 [@dyn 1121]
159800: 3a 08 78 12 03           a1 = u64 [0x31278]
159805: 97 89 0d                 a2 = a1 << 0xd
159808: d3 98 08                 a1 = a1 ^ a2
159811: 98 89 07                 a2 = a1 >> 0x7
159814: d3 98 08                 a1 = a1 ^ a2
159817: 97 89 11                 a2 = a1 << 0x11
159820: d3 98 08                 a1 = a1 ^ a2
159823: 3a 09 60 11 03           a2 = u64 [0x31160]
159828: 3a 0a b8 11 03           a3 = u64 [0x311b8]
159833: 3e 08 78 12 03           u64 [0x31278] = a1
159838: ca 98 07                 a0 = a1 * a2
159841: d6 a7 08                 a1 = a0 mulhu a3
159844: 98 88 12                 a1 = a1 >> 0x12
159847: 96 88 40 42 0f           a1 = a1 * 0xf4240
159852: c9 87 07                 a0 = a0 - a1
159855: 95 78 01                 a1 = a0 + 0x1
159858: 7b 18 20 01              u64 [sp + 0x120] = a1
159862: 95 17 08 02              a0 = sp + 0x208
159866: 95 16 08 02              s1 = sp + 0x208
159870: 50 20 c4 08 b6 65 fe     ra = 2244, jump @4125
      :                          @11239 [@dyn 1122]
159877: 95 17 20 01              a0 = sp + 0x120
159881: 7b 17 38 02              u64 [sp + 0x238] = a0
159885: 33 07 28 0c              a0 = 0xc28
159889: 7b 17 40 02              u64 [sp + 0x240] = a0
159893: 7b 16 48 02              u64 [sp + 0x248] = s1
159897: 33 07 54 02              a0 = 0x254
159901: 7b 17 50 02              u64 [sp + 0x250] = a0
159905: 33 07 58 20 01           a0 = 0x12058
159910: 7b 17 90 02              u64 [sp + 0x290] = a0
159914: 49 21 98 02 02           u64 [sp + 664] = 0x2
159919: 49 21 b0 02              u64 [sp + 688] = 0
159923: 95 18 38 02              a1 = sp + 0x238
159927: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
159931: 49 21 a8 02 02           u64 [sp + 680] = 0x2
159936: 95 17 e0 01              a0 = sp + 0x1e0
159940: 95 18 90 02              a1 = sp + 0x290
159944: 50 20 c6 08 77 de fd     ra = 2246, jump @1491
      :                          @11240 [@dyn 1123]
159951: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
159955: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
159959: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
159963: 7b 17 70                 u64 [sp + 0x70] = a0
159966: 33 07 02                 a0 = 0x2
159969: 33 08                    a1 = 0
159971: 33 09                    a2 = 0
159973: 64 6a                    a3 = s1
159975: 33 00 c8 08              ra = 0x8c8
159979: 0a 64                    ecalli 100 // 'log'
159981: 01                       fallthrough
      :                          @11241 [@dyn 1124]
159982: 82 1c 70                 a5 = u64 [sp + 0x70]
159985: 82 17 68                 a0 = u64 [sp + 0x68]
159988: c8 c7 07                 a0 = a0 + a5
159991: 55 37 00 00 ff 09        jump @11243 if a0 >=u 4294901760
      :                          @11242
159997: 28 c9 70                 jump @12856
      :                          @11243
160000: 33 07 c0 22 03           a0 = 0x322c0
160005: 95 77 00 00 01           a0 = a0 + 0x10000
160010: 01                       fallthrough
      :                          @11244
160011: 82 78                    a1 = u64 [a0]
160013: c9 87 09                 a2 = a0 - a1
160016: aa 69 06                 jump @11246 if a2 == s1
      :                          @11245
160019: 28 b3 70                 jump @12856
      :                          @11246
160022: c9 c8 09                 a2 = a1 - a5
160025: 01                       fallthrough
      :                          @11247
160026: 82 7a                    a3 = u64 [a0]
160028: ab 8a ef                 jump @11244 if a3 != a1
      :                          @11248
160031: 7b 79                    u64 [a0] = a2
160033: 33 0b                    a4 = 0
160035: 01                       fallthrough
      :                          @11249
160036: ab 8a e7                 jump @11244 if a3 != a1
      :                          @11250
160039: 28 9f 70                 jump @12856
      :                          @11251 [@dyn 1125]
160042: 49 21 c8 02              u64 [sp + 712] = 0
160046: 49 21 c0 02              u64 [sp + 704] = 0
160050: 49 21 b8 02              u64 [sp + 696] = 0
160054: 49 21 b0 02              u64 [sp + 688] = 0
160058: 49 21 a8 02              u64 [sp + 680] = 0
160062: 49 21 a0 02              u64 [sp + 672] = 0
160066: 49 21 98 02              u64 [sp + 664] = 0
160070: 49 21 90 02              u64 [sp + 656] = 0
160074: 3a 08 78 12 03           a1 = u64 [0x31278]
160079: 97 89 0d                 a2 = a1 << 0xd
160082: d3 89 09                 a2 = a2 ^ a1
160085: 98 9a 07                 a3 = a2 >> 0x7
160088: 3a 08 60 11 03           a1 = u64 [0x31160]
160093: d3 a9 09                 a2 = a2 ^ a3
160096: 97 9a 11                 a3 = a2 << 0x11
160099: d3 a9 09                 a2 = a2 ^ a3
160102: ca 89 0a                 a3 = a2 * a1
160105: 3e 09 78 12 03           u64 [0x31278] = a2
160110: 7b 1a 90 02              u64 [sp + 0x290] = a3
160114: 3a 09 78 12 03           a2 = u64 [0x31278]
160119: 97 9a 0d                 a3 = a2 << 0xd
160122: d3 a9 09                 a2 = a2 ^ a3
160125: 98 9a 07                 a3 = a2 >> 0x7
160128: d3 a9 09                 a2 = a2 ^ a3
160131: 97 9a 11                 a3 = a2 << 0x11
160134: d3 a9 09                 a2 = a2 ^ a3
160137: ca 89 0a                 a3 = a2 * a1
160140: 3e 09 78 12 03           u64 [0x31278] = a2
160145: 7b 1a 98 02              u64 [sp + 0x298] = a3
160149: 3a 09 78 12 03           a2 = u64 [0x31278]
160154: 97 9a 0d                 a3 = a2 << 0xd
160157: d3 a9 09                 a2 = a2 ^ a3
160160: 98 9a 07                 a3 = a2 >> 0x7
160163: d3 a9 09                 a2 = a2 ^ a3
160166: 97 9a 11                 a3 = a2 << 0x11
160169: d3 a9 09                 a2 = a2 ^ a3
160172: ca 89 0a                 a3 = a2 * a1
160175: 3e 09 78 12 03           u64 [0x31278] = a2
160180: 7b 1a a0 02              u64 [sp + 0x2a0] = a3
160184: 3a 09 78 12 03           a2 = u64 [0x31278]
160189: 97 9a 0d                 a3 = a2 << 0xd
160192: d3 a9 09                 a2 = a2 ^ a3
160195: 98 9a 07                 a3 = a2 >> 0x7
160198: d3 a9 09                 a2 = a2 ^ a3
160201: 97 9a 11                 a3 = a2 << 0x11
160204: d3 a9 09                 a2 = a2 ^ a3
160207: ca 89 0a                 a3 = a2 * a1
160210: 3e 09 78 12 03           u64 [0x31278] = a2
160215: 7b 1a a8 02              u64 [sp + 0x2a8] = a3
160219: 3a 09 78 12 03           a2 = u64 [0x31278]
160224: 97 9a 0d                 a3 = a2 << 0xd
160227: d3 a9 09                 a2 = a2 ^ a3
160230: 98 9a 07                 a3 = a2 >> 0x7
160233: d3 a9 09                 a2 = a2 ^ a3
160236: 97 9a 11                 a3 = a2 << 0x11
160239: d3 a9 09                 a2 = a2 ^ a3
160242: ca 89 0a                 a3 = a2 * a1
160245: 3e 09 78 12 03           u64 [0x31278] = a2
160250: 7b 1a b0 02              u64 [sp + 0x2b0] = a3
160254: 3a 09 78 12 03           a2 = u64 [0x31278]
160259: 97 9a 0d                 a3 = a2 << 0xd
160262: d3 a9 09                 a2 = a2 ^ a3
160265: 98 9a 07                 a3 = a2 >> 0x7
160268: d3 a9 09                 a2 = a2 ^ a3
160271: 97 9a 11                 a3 = a2 << 0x11
160274: d3 a9 09                 a2 = a2 ^ a3
160277: ca 89 0a                 a3 = a2 * a1
160280: 3e 09 78 12 03           u64 [0x31278] = a2
160285: 7b 1a b8 02              u64 [sp + 0x2b8] = a3
160289: 3a 09 78 12 03           a2 = u64 [0x31278]
160294: 97 9a 0d                 a3 = a2 << 0xd
160297: d3 a9 09                 a2 = a2 ^ a3
160300: 98 9a 07                 a3 = a2 >> 0x7
160303: d3 a9 09                 a2 = a2 ^ a3
160306: 97 9a 11                 a3 = a2 << 0x11
160309: d3 a9 09                 a2 = a2 ^ a3
160312: ca 89 0a                 a3 = a2 * a1
160315: 3e 09 78 12 03           u64 [0x31278] = a2
160320: 7b 1a c0 02              u64 [sp + 0x2c0] = a3
160324: 3a 09 78 12 03           a2 = u64 [0x31278]
160329: 97 9a 0d                 a3 = a2 << 0xd
160332: d3 a9 09                 a2 = a2 ^ a3
160335: 98 9a 07                 a3 = a2 >> 0x7
160338: d3 a9 09                 a2 = a2 ^ a3
160341: 97 9a 11                 a3 = a2 << 0x11
160344: d3 a9 09                 a2 = a2 ^ a3
160347: ca 89 08                 a1 = a2 * a1
160350: 3e 09 78 12 03           u64 [0x31278] = a2
160355: 7b 18 c8 02              u64 [sp + 0x2c8] = a1
160359: 95 17 90 02              a0 = sp + 0x290
160363: 95 16 90 02              s1 = sp + 0x290
160367: 95 11 f0                 sp = sp + 0xfffffffffffffff0
160370: 7b 15 08                 u64 [sp + 0x8] = s0
160373: 7b 16                    u64 [sp] = s1
160375: 82 78                    a1 = u64 [a0]
160377: 82 79 08                 a2 = u64 [a0 + 0x8]
160380: 82 7a 10                 a3 = u64 [a0 + 0x10]
160383: 82 7b 18                 a4 = u64 [a0 + 0x18]
160386: c8 89 03                 t1 = a2 + a1
160389: c9 98 02                 t0 = a1 - a2
160392: c8 ab 04                 t2 = a4 + a3
160395: 82 78 20                 a1 = u64 [a0 + 0x20]
160398: 82 7c 28                 a5 = u64 [a0 + 0x28]
160401: 82 79 30                 a2 = u64 [a0 + 0x30]
160404: 82 75 38                 s0 = u64 [a0 + 0x38]
160407: c9 ba 0a                 a3 = a3 - a4
160410: c8 8c 06                 s1 = a5 + a1
160413: c9 c8 08                 a1 = a1 - a5
160416: c8 95 0c                 a5 = s0 + a2
160419: c9 59 09                 a2 = a2 - s0
160422: c8 34 05                 s0 = t2 + t1
160425: c9 43 03                 t1 = t1 - t2
160428: c8 2a 04                 t2 = a3 + t0
160431: c9 a2 0a                 a3 = t0 - a3
160434: c8 6c 0b                 a4 = a5 + s1
160437: c9 c6 06                 s1 = s1 - a5
160440: c8 89 0c                 a5 = a2 + a1
160443: c9 98 08                 a1 = a1 - a2
160446: c8 5b 09                 a2 = a4 + s0
160449: 7b 79                    u64 [a0] = a2
160451: c9 b5 05                 s0 = s0 - a4
160454: 7b 75 20                 u64 [a0 + 0x20] = s0
160457: c8 4c 09                 a2 = a5 + t2
160460: 7b 79 08                 u64 [a0 + 0x8] = a2
160463: c9 c4 09                 a2 = t2 - a5
160466: 7b 79 28                 u64 [a0 + 0x28] = a2
160469: c8 36 09                 a2 = s1 + t1
160472: 7b 79 10                 u64 [a0 + 0x10] = a2
160475: c9 63 09                 a2 = t1 - s1
160478: 7b 79 30                 u64 [a0 + 0x30] = a2
160481: c8 a8 09                 a2 = a1 + a3
160484: 7b 79 18                 u64 [a0 + 0x18] = a2
160487: c9 8a 0a                 a3 = a3 - a1
160490: 7b 7a 38                 u64 [a0 + 0x38] = a3
160493: 82 15 08                 s0 = u64 [sp + 0x8]
160496: 82 16                    s1 = u64 [sp]
160498: 95 11 10                 sp = sp + 0x10
160501: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
160505: 33 07 ec 00              a0 = 0xec
160509: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
160513: 33 07 80 20 01           a0 = 0x12080
160518: 7b 17 38 02              u64 [sp + 0x238] = a0
160522: 49 21 40 02 01           u64 [sp + 576] = 0x1
160527: 49 21 58 02              u64 [sp + 600] = 0
160531: 95 18 e0 01              a1 = sp + 0x1e0
160535: 7b 18 48 02              u64 [sp + 0x248] = a1
160539: 49 21 50 02 01           u64 [sp + 592] = 0x1
160544: 95 17 08 02              a0 = sp + 0x208
160548: 95 18 38 02              a1 = sp + 0x238
160552: 50 20 cc 08 17 dc fd     ra = 2252, jump @1491
      :                          @11252 [@dyn 1126]
160559: 82 16 10 02              s1 = u64 [sp + 0x210]
160563: 82 1b 18 02              a4 = u64 [sp + 0x218]
160567: 82 17 08 02              a0 = u64 [sp + 0x208]
160571: 7b 17 70                 u64 [sp + 0x70] = a0
160574: 33 07 02                 a0 = 0x2
160577: 33 08                    a1 = 0
160579: 33 09                    a2 = 0
160581: 64 6a                    a3 = s1
160583: 33 00 ce 08              ra = 0x8ce
160587: 0a 64                    ecalli 100 // 'log'
160589: 01                       fallthrough
      :                          @11253 [@dyn 1127]
160590: 82 1c 70                 a5 = u64 [sp + 0x70]
160593: 82 17 68                 a0 = u64 [sp + 0x68]
160596: c8 c7 07                 a0 = a0 + a5
160599: 55 37 00 00 ff 09        jump @11255 if a0 >=u 4294901760
      :                          @11254
160605: 28 69 6e                 jump @12856
      :                          @11255
160608: 33 07 c0 22 03           a0 = 0x322c0
160613: 95 77 00 00 01           a0 = a0 + 0x10000
160618: 01                       fallthrough
      :                          @11256
160619: 82 78                    a1 = u64 [a0]
160621: c9 87 09                 a2 = a0 - a1
160624: aa 69 06                 jump @11258 if a2 == s1
      :                          @11257
160627: 28 53 6e                 jump @12856
      :                          @11258
160630: c9 c8 09                 a2 = a1 - a5
160633: 01                       fallthrough
      :                          @11259
160634: 82 7a                    a3 = u64 [a0]
160636: ab 8a ef                 jump @11256 if a3 != a1
      :                          @11260
160639: 7b 79                    u64 [a0] = a2
160641: 33 0b                    a4 = 0
160643: 01                       fallthrough
      :                          @11261
160644: ab 8a e7                 jump @11256 if a3 != a1
      :                          @11262
160647: 28 3f 6e                 jump @12856
      :                          @11263 [@dyn 1128]
160650: 3a 08 78 12 03           a1 = u64 [0x31278]
160655: 97 89 0d                 a2 = a1 << 0xd
160658: d3 89 09                 a2 = a2 ^ a1
160661: 98 9a 07                 a3 = a2 >> 0x7
160664: 3a 08 60 11 03           a1 = u64 [0x31160]
160669: d3 a9 09                 a2 = a2 ^ a3
160672: 97 9a 11                 a3 = a2 << 0x11
160675: d3 a9 09                 a2 = a2 ^ a3
160678: ca 89 0a                 a3 = a2 * a1
160681: 3a 0b b0 11 03           a4 = u64 [0x311b0]
160686: 3e 09 78 12 03           u64 [0x31278] = a2
160691: 98 a9 02                 a2 = a3 >> 0x2
160694: d6 b9 09                 a2 = a2 mulhu a4
160697: 98 99 02                 a2 = a2 >> 0x2
160700: 33 0c 64                 a5 = 0x64
160703: ca c9 09                 a2 = a2 * a5
160706: c9 9a 0a                 a3 = a3 - a2
160709: 95 aa 01                 a3 = a3 + 0x1
160712: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
160716: 3a 09 78 12 03           a2 = u64 [0x31278]
160721: 97 9a 0d                 a3 = a2 << 0xd
160724: d3 a9 09                 a2 = a2 ^ a3
160727: 98 9a 07                 a3 = a2 >> 0x7
160730: d3 a9 09                 a2 = a2 ^ a3
160733: 97 9a 11                 a3 = a2 << 0x11
160736: d3 a9 09                 a2 = a2 ^ a3
160739: ca 89 0a                 a3 = a2 * a1
160742: 3e 09 78 12 03           u64 [0x31278] = a2
160747: 98 a7 02                 a0 = a3 >> 0x2
160750: d6 b7 07                 a0 = a0 mulhu a4
160753: 98 77 02                 a0 = a0 >> 0x2
160756: ca c7 07                 a0 = a0 * a5
160759: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
160763: c9 7a 09                 a2 = a3 - a0
160766: 95 99 01                 a2 = a2 + 0x1
160769: 7b 19 20 01              u64 [sp + 0x120] = a2
160773: 95 17 08 02              a0 = sp + 0x208
160777: 95 16 08 02              s1 = sp + 0x208
160781: 33 00 d2 08              ra = 0x8d2
160785: 95 11 88                 sp = sp + 0xffffffffffffff88
160788: 7b 10 70                 u64 [sp + 0x70] = ra
160791: 7b 15 68                 u64 [sp + 0x68] = s0
160794: 7b 16 60                 u64 [sp + 0x60] = s1
160797: 64 85                    s0 = a1
160799: 7b 17                    u64 [sp] = a0
160801: 33 08                    a1 = 0
160803: 49 11 30                 u64 [sp + 48] = 0
160806: 33 07 08                 a0 = 0x8
160809: 7b 17 38                 u64 [sp + 0x38] = a0
160812: 49 11 40                 u64 [sp + 64] = 0
160815: 28 14 64 fe              jump @4163
      :                          @11264 [@dyn 1129]
160819: 95 17 c8 01              a0 = sp + 0x1c8
160823: 7b 17 90 02              u64 [sp + 0x290] = a0
160827: 33 07 28 0c              a0 = 0xc28
160831: 7b 17 98 02              u64 [sp + 0x298] = a0
160835: 95 18 20 01              a1 = sp + 0x120
160839: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
160843: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
160847: 7b 16 b0 02              u64 [sp + 0x2b0] = s1
160851: 33 07 10 02              a0 = 0x210
160855: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
160859: 33 07 b0 20 01           a0 = 0x120b0
160864: 7b 17 38 02              u64 [sp + 0x238] = a0
160868: 49 21 40 02 03           u64 [sp + 576] = 0x3
160873: 49 21 58 02              u64 [sp + 600] = 0
160877: 95 18 90 02              a1 = sp + 0x290
160881: 7b 18 48 02              u64 [sp + 0x248] = a1
160885: 49 21 50 02 03           u64 [sp + 592] = 0x3
160890: 95 17 e0 01              a0 = sp + 0x1e0
160894: 95 18 38 02              a1 = sp + 0x238
160898: 50 20 d4 08 bd da fd     ra = 2260, jump @1491
      :                          @11265 [@dyn 1130]
160905: 82 18 08 02              a1 = u64 [sp + 0x208]
160909: 51 08 2e                 jump @11272 if a1 == 0
      :                          @11266
160912: 56 28 00 10 2b           jump @11272 if a1 >u 4096
      :                          @11267
160917: 82 17 10 02              a0 = u64 [sp + 0x210]
160921: 97 88 04                 a1 = a1 << 0x4
160924: 33 09 c0 22 03           a2 = 0x322c0
160929: 95 99 00 00 01           a2 = a2 + 0x10000
160934: 01                       fallthrough
      :                          @11268
160935: 82 9a                    a3 = u64 [a2]
160937: c9 a9 0b                 a4 = a2 - a3
160940: ab 7b 0f                 jump @11272 if a4 != a0
      :                          @11269
160943: c9 8a 0b                 a4 = a3 - a1
160946: 01                       fallthrough
      :                          @11270
160947: 82 9c                    a5 = u64 [a2]
160949: ab ac f2                 jump @11268 if a5 != a3
      :                          @11271
160952: 7b 9b                    u64 [a2] = a4
160954: 01                       fallthrough
      :                          @11272
160955: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
160959: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
160963: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
160967: 7b 17 70                 u64 [sp + 0x70] = a0
160970: 33 07 02                 a0 = 0x2
160973: 33 08                    a1 = 0
160975: 33 09                    a2 = 0
160977: 64 6a                    a3 = s1
160979: 33 00 d6 08              ra = 0x8d6
160983: 0a 64                    ecalli 100 // 'log'
160985: 01                       fallthrough
      :                          @11273 [@dyn 1131]
160986: 82 1c 70                 a5 = u64 [sp + 0x70]
160989: 82 17 68                 a0 = u64 [sp + 0x68]
160992: c8 c7 07                 a0 = a0 + a5
160995: 55 37 00 00 ff 09        jump @11275 if a0 >=u 4294901760
      :                          @11274
161001: 28 dd 6c                 jump @12856
      :                          @11275
161004: 33 07 c0 22 03           a0 = 0x322c0
161009: 95 77 00 00 01           a0 = a0 + 0x10000
161014: 01                       fallthrough
      :                          @11276
161015: 82 78                    a1 = u64 [a0]
161017: c9 87 09                 a2 = a0 - a1
161020: aa 69 06                 jump @11278 if a2 == s1
      :                          @11277
161023: 28 c7 6c                 jump @12856
      :                          @11278
161026: c9 c8 09                 a2 = a1 - a5
161029: 01                       fallthrough
      :                          @11279
161030: 82 7a                    a3 = u64 [a0]
161032: ab 8a ef                 jump @11276 if a3 != a1
      :                          @11280
161035: 7b 79                    u64 [a0] = a2
161037: 33 0b                    a4 = 0
161039: 01                       fallthrough
      :                          @11281
161040: ab 8a e7                 jump @11276 if a3 != a1
      :                          @11282
161043: 28 b3 6c                 jump @12856
      :                          @11283 [@dyn 1132]
161046: 3a 08 78 12 03           a1 = u64 [0x31278]
161051: 97 89 0d                 a2 = a1 << 0xd
161054: d3 98 08                 a1 = a1 ^ a2
161057: 98 89 07                 a2 = a1 >> 0x7
161060: d3 98 08                 a1 = a1 ^ a2
161063: 97 89 11                 a2 = a1 << 0x11
161066: d3 98 08                 a1 = a1 ^ a2
161069: 3a 09 60 11 03           a2 = u64 [0x31160]
161074: 3a 0a 70 11 03           a3 = u64 [0x31170]
161079: 3e 08 78 12 03           u64 [0x31278] = a1
161084: ca 98 07                 a0 = a1 * a2
161087: 98 78 01                 a1 = a0 >> 0x1
161090: d6 a8 08                 a1 = a1 mulhu a3
161093: 98 88 04                 a1 = a1 >> 0x4
161096: 96 88 32                 a1 = a1 * 0x32
161099: c9 87 07                 a0 = a0 - a1
161102: 95 78 01                 a1 = a0 + 0x1
161105: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
161109: 95 17 08 02              a0 = sp + 0x208
161113: 33 00 da 08              ra = 0x8da
161117: 95 11 b0                 sp = sp + 0xffffffffffffffb0
161120: 7b 10 48                 u64 [sp + 0x48] = ra
161123: 7b 15 40                 u64 [sp + 0x40] = s0
161126: 7b 16 38                 u64 [sp + 0x38] = s1
161129: 64 83                    t1 = a1
161131: 7b 17                    u64 [sp] = a0
161133: 33 09 c0 22 03           a2 = 0x322c0
161138: 33 02 00 00 01           t0 = 0x10000
161143: c8 29 0b                 a4 = a2 + t0
161146: 28 eb 63 fe              jump @4183
      :                          @11284 [@dyn 1133]
161150: 82 17 18 02              a0 = u64 [sp + 0x218]
161154: 7b 17 20 01              u64 [sp + 0x120] = a0
161158: 95 17 c8 01              a0 = sp + 0x1c8
161162: 7b 17 38 02              u64 [sp + 0x238] = a0
161166: 33 07 28 0c              a0 = 0xc28
161170: 7b 17 40 02              u64 [sp + 0x240] = a0
161174: 95 18 20 01              a1 = sp + 0x120
161178: 7b 18 48 02              u64 [sp + 0x248] = a1
161182: 7b 17 50 02              u64 [sp + 0x250] = a0
161186: 33 07 00 21 01           a0 = 0x12100
161191: 7b 17 90 02              u64 [sp + 0x290] = a0
161195: 49 21 98 02 02           u64 [sp + 664] = 0x2
161200: 49 21 b0 02              u64 [sp + 688] = 0
161204: 95 18 38 02              a1 = sp + 0x238
161208: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
161212: 49 21 a8 02 02           u64 [sp + 680] = 0x2
161217: 95 17 e0 01              a0 = sp + 0x1e0
161221: 95 18 90 02              a1 = sp + 0x290
161225: 50 20 dc 08 76 d9 fd     ra = 2268, jump @1491
      :                          @11285 [@dyn 1134]
161232: 82 18 08 02              a1 = u64 [sp + 0x208]
161236: 51 08 2e                 jump @11292 if a1 == 0
      :                          @11286
161239: 56 28 00 10 2b           jump @11292 if a1 >u 4096
      :                          @11287
161244: 82 17 10 02              a0 = u64 [sp + 0x210]
161248: 97 88 04                 a1 = a1 << 0x4
161251: 33 09 c0 22 03           a2 = 0x322c0
161256: 95 99 00 00 01           a2 = a2 + 0x10000
161261: 01                       fallthrough
      :                          @11288
161262: 82 9a                    a3 = u64 [a2]
161264: c9 a9 0b                 a4 = a2 - a3
161267: ab 7b 0f                 jump @11292 if a4 != a0
      :                          @11289
161270: c9 8a 0b                 a4 = a3 - a1
161273: 01                       fallthrough
      :                          @11290
161274: 82 9c                    a5 = u64 [a2]
161276: ab ac f2                 jump @11288 if a5 != a3
      :                          @11291
161279: 7b 9b                    u64 [a2] = a4
161281: 01                       fallthrough
      :                          @11292
161282: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
161286: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
161290: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
161294: 7b 17 70                 u64 [sp + 0x70] = a0
161297: 33 07 02                 a0 = 0x2
161300: 33 08                    a1 = 0
161302: 33 09                    a2 = 0
161304: 64 6a                    a3 = s1
161306: 33 00 de 08              ra = 0x8de
161310: 0a 64                    ecalli 100 // 'log'
161312: 01                       fallthrough
      :                          @11293 [@dyn 1135]
161313: 82 1c 70                 a5 = u64 [sp + 0x70]
161316: 82 17 68                 a0 = u64 [sp + 0x68]
161319: c8 c7 07                 a0 = a0 + a5
161322: 55 37 00 00 ff 09        jump @11295 if a0 >=u 4294901760
      :                          @11294
161328: 28 96 6b                 jump @12856
      :                          @11295
161331: 33 07 c0 22 03           a0 = 0x322c0
161336: 95 77 00 00 01           a0 = a0 + 0x10000
161341: 01                       fallthrough
      :                          @11296
161342: 82 78                    a1 = u64 [a0]
161344: c9 87 09                 a2 = a0 - a1
161347: aa 69 06                 jump @11298 if a2 == s1
      :                          @11297
161350: 28 80 6b                 jump @12856
      :                          @11298
161353: c9 c8 09                 a2 = a1 - a5
161356: 01                       fallthrough
      :                          @11299
161357: 82 7a                    a3 = u64 [a0]
161359: ab 8a ef                 jump @11296 if a3 != a1
      :                          @11300
161362: 7b 79                    u64 [a0] = a2
161364: 33 0b                    a4 = 0
161366: 01                       fallthrough
      :                          @11301
161367: ab 8a e7                 jump @11296 if a3 != a1
      :                          @11302
161370: 28 6c 6b                 jump @12856
      :                          @11303 [@dyn 1136]
161373: 95 17 e0 01              a0 = sp + 0x1e0
161377: 95 16 e0 01              s1 = sp + 0x1e0
161381: 33 00 e2 08              ra = 0x8e2
161385: 95 11 f8                 sp = sp + 0xfffffffffffffff8
161388: 7b 15                    u64 [sp] = s0
161390: 33 03 c0 22 03           t1 = 0x322c0
161395: 33 02 00 00 01           t0 = 0x10000
161400: c8 23 04                 t2 = t1 + t0
161403: 28 97 fe fd              jump @2179
      :                          @11304 [@dyn 1137]
161407: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
161411: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
161415: 50 20 e4 08 3e 32 fe     ra = 2276, jump @3049
      :                          @11305 [@dyn 1138]
161422: 78 17 20 01              u8 [sp + 0x120] = a0
161426: 95 17 20 01              a0 = sp + 0x120
161430: 7b 17 38 02              u64 [sp + 0x238] = a0
161434: 33 07 80 0c              a0 = 0xc80
161438: 7b 17 40 02              u64 [sp + 0x240] = a0
161442: 7b 16 48 02              u64 [sp + 0x248] = s1
161446: 33 07 20 02              a0 = 0x220
161450: 7b 17 50 02              u64 [sp + 0x250] = a0
161454: 33 07 30 21 01           a0 = 0x12130
161459: 7b 17 90 02              u64 [sp + 0x290] = a0
161463: 49 21 98 02 02           u64 [sp + 664] = 0x2
161468: 49 21 b0 02              u64 [sp + 688] = 0
161472: 95 18 38 02              a1 = sp + 0x238
161476: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
161480: 49 21 a8 02 02           u64 [sp + 680] = 0x2
161485: 95 17 08 02              a0 = sp + 0x208
161489: 95 18 90 02              a1 = sp + 0x290
161493: 50 20 e6 08 6a d8 fd     ra = 2278, jump @1491
      :                          @11306 [@dyn 1139]
161500: 82 16 10 02              s1 = u64 [sp + 0x210]
161504: 82 1b 18 02              a4 = u64 [sp + 0x218]
161508: 82 17 08 02              a0 = u64 [sp + 0x208]
161512: 7b 17 70                 u64 [sp + 0x70] = a0
161515: 33 07 02                 a0 = 0x2
161518: 33 08                    a1 = 0
161520: 33 09                    a2 = 0
161522: 64 6a                    a3 = s1
161524: 33 00 e8 08              ra = 0x8e8
161528: 0a 64                    ecalli 100 // 'log'
161530: 01                       fallthrough
      :                          @11307 [@dyn 1140]
161531: 82 1c 70                 a5 = u64 [sp + 0x70]
161534: 82 17 68                 a0 = u64 [sp + 0x68]
161537: c8 c7 07                 a0 = a0 + a5
161540: 53 37 00 00 ff 25        jump @11313 if a0 <u 4294901760
      :                          @11308
161546: 33 07 c0 22 03           a0 = 0x322c0
161551: 95 77 00 00 01           a0 = a0 + 0x10000
161556: 01                       fallthrough
      :                          @11309
161557: 82 78                    a1 = u64 [a0]
161559: c9 87 09                 a2 = a0 - a1
161562: ab 69 0f                 jump @11313 if a2 != s1
      :                          @11310
161565: c9 c8 09                 a2 = a1 - a5
161568: 01                       fallthrough
      :                          @11311
161569: 82 7a                    a3 = u64 [a0]
161571: ab 8a f2                 jump @11309 if a3 != a1
      :                          @11312
161574: 7b 79                    u64 [a0] = a2
161576: 01                       fallthrough
      :                          @11313
161577: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
161581: 52 08 06                 jump @11315 if a1 != 0
      :                          @11314
161584: 28 96 6a                 jump @12856
      :                          @11315
161587: 54 28 00 20 08           jump @11317 if a1 <=u 8192
      :                          @11316
161592: 28 8e 6a                 jump @12856
      :                          @11317
161595: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
161599: 97 88 03                 a1 = a1 << 0x3
161602: 33 09 c0 22 03           a2 = 0x322c0
161607: 95 99 00 00 01           a2 = a2 + 0x10000
161612: 01                       fallthrough
      :                          @11318
161613: 82 9a                    a3 = u64 [a2]
161615: c9 a9 0b                 a4 = a2 - a3
161618: aa 7b 06                 jump @11320 if a4 == a0
      :                          @11319
161621: 28 71 6a                 jump @12856
      :                          @11320
161624: c9 8a 0b                 a4 = a3 - a1
161627: 01                       fallthrough
      :                          @11321
161628: 82 9c                    a5 = u64 [a2]
161630: ab ac ef                 jump @11318 if a5 != a3
      :                          @11322
161633: 7b 9b                    u64 [a2] = a4
161635: 33 06                    s1 = 0
161637: 01                       fallthrough
      :                          @11323
161638: ab ac e7                 jump @11318 if a5 != a3
      :                          @11324
161641: 28 5d 6a                 jump @12856
      :                          @11325 [@dyn 1141]
161644: 95 17 e0 01              a0 = sp + 0x1e0
161648: 33 08 04                 a1 = 0x4
161651: 95 16 e0 01              s1 = sp + 0x1e0
161655: 50 20 ec 08 e8 02 fe     ra = 2284, jump @2226
      :                          @11326 [@dyn 1142]
161662: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
161666: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
161670: 33 00 ee 08              ra = 0x8ee
161674: 33 0a                    a3 = 0
161676: 97 89 03                 a2 = a1 << 0x3
161679: c8 97 07                 a0 = a0 + a2
161682: 28 ac 31 fe              jump @3063
      :                          @11327 [@dyn 1143]
161686: 78 17 20 01              u8 [sp + 0x120] = a0
161690: 95 17 20 01              a0 = sp + 0x120
161694: 7b 17 38 02              u64 [sp + 0x238] = a0
161698: 33 07 80 0c              a0 = 0xc80
161702: 7b 17 40 02              u64 [sp + 0x240] = a0
161706: 7b 16 48 02              u64 [sp + 0x248] = s1
161710: 33 07 20 02              a0 = 0x220
161714: 7b 17 50 02              u64 [sp + 0x250] = a0
161718: 33 07 58 21 01           a0 = 0x12158
161723: 7b 17 90 02              u64 [sp + 0x290] = a0
161727: 49 21 98 02 02           u64 [sp + 664] = 0x2
161732: 49 21 b0 02              u64 [sp + 688] = 0
161736: 95 18 38 02              a1 = sp + 0x238
161740: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
161744: 49 21 a8 02 02           u64 [sp + 680] = 0x2
161749: 95 17 08 02              a0 = sp + 0x208
161753: 95 18 90 02              a1 = sp + 0x290
161757: 50 20 f0 08 62 d7 fd     ra = 2288, jump @1491
      :                          @11328 [@dyn 1144]
161764: 82 16 10 02              s1 = u64 [sp + 0x210]
161768: 82 1b 18 02              a4 = u64 [sp + 0x218]
161772: 82 17 08 02              a0 = u64 [sp + 0x208]
161776: 7b 17 70                 u64 [sp + 0x70] = a0
161779: 33 07 02                 a0 = 0x2
161782: 33 08                    a1 = 0
161784: 33 09                    a2 = 0
161786: 64 6a                    a3 = s1
161788: 33 00 f2 08              ra = 0x8f2
161792: 0a 64                    ecalli 100 // 'log'
161794: 01                       fallthrough
      :                          @11329 [@dyn 1145]
161795: 82 1c 70                 a5 = u64 [sp + 0x70]
161798: 82 17 68                 a0 = u64 [sp + 0x68]
161801: c8 c7 07                 a0 = a0 + a5
161804: 53 37 00 00 ff 25        jump @11335 if a0 <u 4294901760
      :                          @11330
161810: 33 07 c0 22 03           a0 = 0x322c0
161815: 95 77 00 00 01           a0 = a0 + 0x10000
161820: 01                       fallthrough
      :                          @11331
161821: 82 78                    a1 = u64 [a0]
161823: c9 87 09                 a2 = a0 - a1
161826: ab 69 0f                 jump @11335 if a2 != s1
      :                          @11332
161829: c9 c8 09                 a2 = a1 - a5
161832: 01                       fallthrough
      :                          @11333
161833: 82 7a                    a3 = u64 [a0]
161835: ab 8a f2                 jump @11331 if a3 != a1
      :                          @11334
161838: 7b 79                    u64 [a0] = a2
161840: 01                       fallthrough
      :                          @11335
161841: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
161845: 52 08 06                 jump @11337 if a1 != 0
      :                          @11336
161848: 28 8e 69                 jump @12856
      :                          @11337
161851: 54 28 00 20 08           jump @11339 if a1 <=u 8192
      :                          @11338
161856: 28 86 69                 jump @12856
      :                          @11339
161859: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
161863: 97 88 03                 a1 = a1 << 0x3
161866: 33 09 c0 22 03           a2 = 0x322c0
161871: 95 99 00 00 01           a2 = a2 + 0x10000
161876: 01                       fallthrough
      :                          @11340
161877: 82 9a                    a3 = u64 [a2]
161879: c9 a9 0b                 a4 = a2 - a3
161882: aa 7b 06                 jump @11342 if a4 == a0
      :                          @11341
161885: 28 69 69                 jump @12856
      :                          @11342
161888: c9 8a 0b                 a4 = a3 - a1
161891: 01                       fallthrough
      :                          @11343
161892: 82 9c                    a5 = u64 [a2]
161894: ab ac ef                 jump @11340 if a5 != a3
      :                          @11344
161897: 7b 9b                    u64 [a2] = a4
161899: 33 06                    s1 = 0
161901: 01                       fallthrough
      :                          @11345
161902: ab ac e7                 jump @11340 if a5 != a3
      :                          @11346
161905: 28 55 69                 jump @12856
      :                          @11347 [@dyn 1146]
161908: 95 17 20 01              a0 = sp + 0x120
161912: 33 00 f6 08              ra = 0x8f6
161916: 95 11 f8                 sp = sp + 0xfffffffffffffff8
161919: 7b 15                    u64 [sp] = s0
161921: 33 03 c0 22 03           t1 = 0x322c0
161926: 33 02 00 00 01           t0 = 0x10000
161931: c8 23 04                 t2 = t1 + t0
161934: 28 22 03 fe              jump @2256
      :                          @11348 [@dyn 1147]
161938: 3a 07 78 12 03           a0 = u64 [0x31278]
161943: 97 78 0d                 a1 = a0 << 0xd
161946: d3 87 07                 a0 = a0 ^ a1
161949: 98 78 07                 a1 = a0 >> 0x7
161952: d3 87 07                 a0 = a0 ^ a1
161955: 97 7a 11                 a3 = a0 << 0x11
161958: d3 7a 0a                 a3 = a3 ^ a0
161961: 3e 0a 78 12 03           u64 [0x31278] = a3
161966: 82 18 30 01              a1 = u64 [sp + 0x130]
161970: 56 18 04 07              jump @11350 if a1 >u 4
      :                          @11349
161974: 28 19 7b                 jump @13217
      :                          @11350
161977: 3a 07 60 11 03           a0 = u64 [0x31160]
161982: 82 18 28 01              a1 = u64 [sp + 0x128]
161986: ca 7a 0a                 a3 = a3 * a0
161989: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
161999: d6 ba 0b                 a4 = a3 mulhu a4
162002: 98 bc 02                 a5 = a4 >> 0x2
162005: 84 bb fc                 a4 = a4 & 0xfffffffffffffffc
162008: c8 cb 0b                 a4 = a4 + a5
162011: c9 ba 0a                 a3 = a3 - a4
162014: 97 aa 03                 a3 = a3 << 0x3
162017: c8 8a 0a                 a3 = a3 + a1
162020: 82 ab                    a4 = u64 [a3]
162022: 82 8c 20                 a5 = u64 [a1 + 0x20]
162025: 7b 8b 20                 u64 [a1 + 0x20] = a4
162028: 7b ac                    u64 [a3] = a5
162030: 3a 08 78 12 03           a1 = u64 [0x31278]
162035: 97 8a 0d                 a3 = a1 << 0xd
162038: d3 a8 08                 a1 = a1 ^ a3
162041: 98 8a 07                 a3 = a1 >> 0x7
162044: d3 8a 0a                 a3 = a3 ^ a1
162047: 97 a8 11                 a1 = a3 << 0x11
162050: d3 a8 08                 a1 = a1 ^ a3
162053: 3e 08 78 12 03           u64 [0x31278] = a1
162058: 82 18 30 01              a1 = u64 [sp + 0x130]
162062: 55 18 04 07              jump @11352 if a1 >=u 4
      :                          @11351
162066: 28 f5 79                 jump @13198
      :                          @11352
162069: 82 18 28 01              a1 = u64 [sp + 0x128]
162073: 84 aa 03                 a3 = a3 & 0x3
162076: 97 aa 03                 a3 = a3 << 0x3
162079: c8 8a 0a                 a3 = a3 + a1
162082: 82 a9                    a2 = u64 [a3]
162084: 82 8b 18                 a4 = u64 [a1 + 0x18]
162087: 7b 89 18                 u64 [a1 + 0x18] = a2
162090: 7b ab                    u64 [a3] = a4
162092: 3a 08 78 12 03           a1 = u64 [0x31278]
162097: 97 8a 0d                 a3 = a1 << 0xd
162100: d3 a8 08                 a1 = a1 ^ a3
162103: 98 8a 07                 a3 = a1 >> 0x7
162106: d3 a8 08                 a1 = a1 ^ a3
162109: 97 8a 11                 a3 = a1 << 0x11
162112: d3 8a 0a                 a3 = a3 ^ a1
162115: 3e 0a 78 12 03           u64 [0x31278] = a3
162120: 82 18 30 01              a1 = u64 [sp + 0x130]
162124: 55 18 03 07              jump @11354 if a1 >=u 3
      :                          @11353
162128: 28 b8 79                 jump @13199
      :                          @11354
162131: 82 18 28 01              a1 = u64 [sp + 0x128]
162135: ca 7a 07                 a0 = a3 * a0
162138: 14 0a ab aa aa aa aa aa aa aa a3 = 0xaaaaaaaaaaaaaaab
162148: d6 a7 0a                 a3 = a0 mulhu a3
162151: 98 ab 01                 a4 = a3 >> 0x1
162154: 84 aa fe                 a3 = a3 & 0xfffffffffffffffe
162157: c8 ba 0a                 a3 = a3 + a4
162160: c9 a7 07                 a0 = a0 - a3
162163: 97 77 03                 a0 = a0 << 0x3
162166: c8 87 07                 a0 = a0 + a1
162169: 82 7a                    a3 = u64 [a0]
162171: 82 8b 10                 a4 = u64 [a1 + 0x10]
162174: 7b 8a 10                 u64 [a1 + 0x10] = a3
162177: 7b 7b                    u64 [a0] = a4
162179: 3a 07 78 12 03           a0 = u64 [0x31278]
162184: 97 78 0d                 a1 = a0 << 0xd
162187: d3 87 07                 a0 = a0 ^ a1
162190: 98 78 07                 a1 = a0 >> 0x7
162193: d3 87 07                 a0 = a0 ^ a1
162196: 97 78 11                 a1 = a0 << 0x11
162199: d3 78 08                 a1 = a1 ^ a0
162202: 3e 08 78 12 03           u64 [0x31278] = a1
162207: 82 18 30 01              a1 = u64 [sp + 0x130]
162211: 55 18 02 07              jump @11356 if a1 >=u 2
      :                          @11355
162215: 28 5f 79                 jump @13197
      :                          @11356
162218: 82 18 28 01              a1 = u64 [sp + 0x128]
162222: 84 77 01                 a0 = a0 & 0x1
162225: 97 77 03                 a0 = a0 << 0x3
162228: c8 87 07                 a0 = a0 + a1
162231: 82 79                    a2 = u64 [a0]
162233: 82 8a 08                 a3 = u64 [a1 + 0x8]
162236: 7b 89 08                 u64 [a1 + 0x8] = a2
162239: 7b 7a                    u64 [a0] = a3
162241: 82 17 28 01              a0 = u64 [sp + 0x128]
162245: 82 18 30 01              a1 = u64 [sp + 0x130]
162249: 50 20 f8 08 bf 2f fe     ra = 2296, jump @3071
      :                          @11357 [@dyn 1148]
162256: 64 78                    a1 = a0
162258: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
162262: 95 17 e0 01              a0 = sp + 0x1e0
162266: 95 16 e0 01              s1 = sp + 0x1e0
162270: 33 00 fa 08              ra = 0x8fa
162274: 95 11 d0                 sp = sp + 0xffffffffffffffd0
162277: 7b 10 28                 u64 [sp + 0x28] = ra
162280: 7b 15 20                 u64 [sp + 0x20] = s0
162283: 7b 16 18                 u64 [sp + 0x18] = s1
162286: 64 74                    t2 = a0
162288: 33 07 c0 22 03           a0 = 0x322c0
162293: 33 03 c0 22 03           t1 = 0x322c0
162298: 33 02 00 00 01           t0 = 0x10000
162303: c8 23 0a                 a3 = t1 + t0
162306: 28 e8 30 fe              jump @3106
      :                          @11358 [@dyn 1149]
162310: 95 17 20 01              a0 = sp + 0x120
162314: 7b 17 90 02              u64 [sp + 0x290] = a0
162318: 33 07 20 02              a0 = 0x220
162322: 7b 17 98 02              u64 [sp + 0x298] = a0
162326: 95 18 c8 01              a1 = sp + 0x1c8
162330: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
162334: 33 08 28 0c              a1 = 0xc28
162338: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
162342: 7b 16 b0 02              u64 [sp + 0x2b0] = s1
162346: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
162350: 33 07 88 21 01           a0 = 0x12188
162355: 7b 17 38 02              u64 [sp + 0x238] = a0
162359: 49 21 40 02 03           u64 [sp + 576] = 0x3
162364: 49 21 58 02              u64 [sp + 600] = 0
162368: 95 18 90 02              a1 = sp + 0x290
162372: 7b 18 48 02              u64 [sp + 0x248] = a1
162376: 49 21 50 02 03           u64 [sp + 592] = 0x3
162381: 95 17 08 02              a0 = sp + 0x208
162385: 95 18 38 02              a1 = sp + 0x238
162389: 50 20 fc 08 ea d4 fd     ra = 2300, jump @1491
      :                          @11359 [@dyn 1150]
162396: 82 16 10 02              s1 = u64 [sp + 0x210]
162400: 82 1b 18 02              a4 = u64 [sp + 0x218]
162404: 82 17 08 02              a0 = u64 [sp + 0x208]
162408: 7b 17 70                 u64 [sp + 0x70] = a0
162411: 33 07 02                 a0 = 0x2
162414: 33 08                    a1 = 0
162416: 33 09                    a2 = 0
162418: 64 6a                    a3 = s1
162420: 33 00 fe 08              ra = 0x8fe
162424: 0a 64                    ecalli 100 // 'log'
162426: 01                       fallthrough
      :                          @11360 [@dyn 1151]
162427: 82 1c 70                 a5 = u64 [sp + 0x70]
162430: 82 17 68                 a0 = u64 [sp + 0x68]
162433: c8 c7 07                 a0 = a0 + a5
162436: 53 37 00 00 ff 25        jump @11366 if a0 <u 4294901760
      :                          @11361
162442: 33 07 c0 22 03           a0 = 0x322c0
162447: 95 77 00 00 01           a0 = a0 + 0x10000
162452: 01                       fallthrough
      :                          @11362
162453: 82 78                    a1 = u64 [a0]
162455: c9 87 09                 a2 = a0 - a1
162458: ab 69 0f                 jump @11366 if a2 != s1
      :                          @11363
162461: c9 c8 09                 a2 = a1 - a5
162464: 01                       fallthrough
      :                          @11364
162465: 82 7a                    a3 = u64 [a0]
162467: ab 8a f2                 jump @11362 if a3 != a1
      :                          @11365
162470: 7b 79                    u64 [a0] = a2
162472: 01                       fallthrough
      :                          @11366
162473: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
162477: 51 08 30                 jump @11373 if a1 == 0
      :                          @11367
162480: 56 28 00 20 2d           jump @11373 if a1 >u 8192
      :                          @11368
162485: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
162489: 97 88 03                 a1 = a1 << 0x3
162492: 33 09 c0 22 03           a2 = 0x322c0
162497: 95 99 00 00 01           a2 = a2 + 0x10000
162502: 01                       fallthrough
      :                          @11369
162503: 82 9a                    a3 = u64 [a2]
162505: c9 a9 0b                 a4 = a2 - a3
162508: ab 7b 11                 jump @11373 if a4 != a0
      :                          @11370
162511: c9 8a 0b                 a4 = a3 - a1
162514: 01                       fallthrough
      :                          @11371
162515: 82 9c                    a5 = u64 [a2]
162517: ab ac f2                 jump @11369 if a5 != a3
      :                          @11372
162520: 7b 9b                    u64 [a2] = a4
162522: 33 06                    s1 = 0
162524: 01                       fallthrough
      :                          @11373
162525: 82 18 20 01              a1 = u64 [sp + 0x120]
162529: 52 08 06                 jump @11375 if a1 != 0
      :                          @11374
162532: 28 e2 66                 jump @12856
      :                          @11375
162535: 54 28 00 20 08           jump @11377 if a1 <=u 8192
      :                          @11376
162540: 28 da 66                 jump @12856
      :                          @11377
162543: 82 17 28 01              a0 = u64 [sp + 0x128]
162547: 97 88 03                 a1 = a1 << 0x3
162550: 33 09 c0 22 03           a2 = 0x322c0
162555: 95 99 00 00 01           a2 = a2 + 0x10000
162560: 01                       fallthrough
      :                          @11378
162561: 82 9a                    a3 = u64 [a2]
162563: c9 a9 0b                 a4 = a2 - a3
162566: aa 7b 06                 jump @11380 if a4 == a0
      :                          @11379
162569: 28 bd 66                 jump @12856
      :                          @11380
162572: c9 8a 0b                 a4 = a3 - a1
162575: 01                       fallthrough
      :                          @11381
162576: 82 9c                    a5 = u64 [a2]
162578: ab ac ef                 jump @11378 if a5 != a3
      :                          @11382
162581: 7b 9b                    u64 [a2] = a4
162583: 33 06                    s1 = 0
162585: 01                       fallthrough
      :                          @11383
162586: ab ac e7                 jump @11378 if a5 != a3
      :                          @11384
162589: 28 a9 66                 jump @12856
      :                          @11385 [@dyn 1152]
162592: 95 17 20 01              a0 = sp + 0x120
162596: 33 08 05                 a1 = 0x5
162599: 50 20 02 09 38 ff fd     ra = 2306, jump @2226
      :                          @11386 [@dyn 1153]
162606: 82 17 28 01              a0 = u64 [sp + 0x128]
162610: 82 18 30 01              a1 = u64 [sp + 0x130]
162614: 50 20 04 09 2e 31 fe     ra = 2308, jump @3129
      :                          @11387 [@dyn 1154]
162621: 64 78                    a1 = a0
162623: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
162627: 95 17 e0 01              a0 = sp + 0x1e0
162631: 95 16 e0 01              s1 = sp + 0x1e0
162635: 33 00 06 09              ra = 0x906
162639: 95 11 c8                 sp = sp + 0xffffffffffffffc8
162642: 7b 10 30                 u64 [sp + 0x30] = ra
162645: 7b 15 28                 u64 [sp + 0x28] = s0
162648: 7b 16 20                 u64 [sp + 0x20] = s1
162651: 64 84                    t2 = a1
162653: 64 73                    t1 = a0
162655: 33 05 c0 22 03           s0 = 0x322c0
162660: 33 02 00 00 01           t0 = 0x10000
162665: c8 25 09                 a2 = s0 + t0
162668: 28 91 31 fe              jump @3143
      :                          @11388 [@dyn 1155]
162672: 95 17 20 01              a0 = sp + 0x120
162676: 7b 17 90 02              u64 [sp + 0x290] = a0
162680: 33 07 20 02              a0 = 0x220
162684: 7b 17 98 02              u64 [sp + 0x298] = a0
162688: 95 18 c8 01              a1 = sp + 0x1c8
162692: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
162696: 33 08 28 0c              a1 = 0xc28
162700: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
162704: 7b 16 b0 02              u64 [sp + 0x2b0] = s1
162708: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
162712: 33 07 c0 21 01           a0 = 0x121c0
162717: 7b 17 38 02              u64 [sp + 0x238] = a0
162721: 49 21 40 02 03           u64 [sp + 576] = 0x3
162726: 49 21 58 02              u64 [sp + 600] = 0
162730: 95 18 90 02              a1 = sp + 0x290
162734: 7b 18 48 02              u64 [sp + 0x248] = a1
162738: 49 21 50 02 03           u64 [sp + 592] = 0x3
162743: 95 17 08 02              a0 = sp + 0x208
162747: 95 18 38 02              a1 = sp + 0x238
162751: 50 20 08 09 80 d3 fd     ra = 2312, jump @1491
      :                          @11389 [@dyn 1156]
162758: 82 16 10 02              s1 = u64 [sp + 0x210]
162762: 82 1b 18 02              a4 = u64 [sp + 0x218]
162766: 82 17 08 02              a0 = u64 [sp + 0x208]
162770: 7b 17 70                 u64 [sp + 0x70] = a0
162773: 33 07 02                 a0 = 0x2
162776: 33 08                    a1 = 0
162778: 33 09                    a2 = 0
162780: 64 6a                    a3 = s1
162782: 33 00 0a 09              ra = 0x90a
162786: 0a 64                    ecalli 100 // 'log'
162788: 01                       fallthrough
      :                          @11390 [@dyn 1157]
162789: 82 1c 70                 a5 = u64 [sp + 0x70]
162792: 82 17 68                 a0 = u64 [sp + 0x68]
162795: c8 c7 07                 a0 = a0 + a5
162798: 53 37 00 00 ff 25        jump @11396 if a0 <u 4294901760
      :                          @11391
162804: 33 07 c0 22 03           a0 = 0x322c0
162809: 95 77 00 00 01           a0 = a0 + 0x10000
162814: 01                       fallthrough
      :                          @11392
162815: 82 78                    a1 = u64 [a0]
162817: c9 87 09                 a2 = a0 - a1
162820: ab 69 0f                 jump @11396 if a2 != s1
      :                          @11393
162823: c9 c8 09                 a2 = a1 - a5
162826: 01                       fallthrough
      :                          @11394
162827: 82 7a                    a3 = u64 [a0]
162829: ab 8a f2                 jump @11392 if a3 != a1
      :                          @11395
162832: 7b 79                    u64 [a0] = a2
162834: 01                       fallthrough
      :                          @11396
162835: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
162839: 51 08 30                 jump @11403 if a1 == 0
      :                          @11397
162842: 56 28 00 20 2d           jump @11403 if a1 >u 8192
      :                          @11398
162847: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
162851: 97 88 03                 a1 = a1 << 0x3
162854: 33 09 c0 22 03           a2 = 0x322c0
162859: 95 99 00 00 01           a2 = a2 + 0x10000
162864: 01                       fallthrough
      :                          @11399
162865: 82 9a                    a3 = u64 [a2]
162867: c9 a9 0b                 a4 = a2 - a3
162870: ab 7b 11                 jump @11403 if a4 != a0
      :                          @11400
162873: c9 8a 0b                 a4 = a3 - a1
162876: 01                       fallthrough
      :                          @11401
162877: 82 9c                    a5 = u64 [a2]
162879: ab ac f2                 jump @11399 if a5 != a3
      :                          @11402
162882: 7b 9b                    u64 [a2] = a4
162884: 33 06                    s1 = 0
162886: 01                       fallthrough
      :                          @11403
162887: 82 18 20 01              a1 = u64 [sp + 0x120]
162891: 52 08 06                 jump @11405 if a1 != 0
      :                          @11404
162894: 28 78 65                 jump @12856
      :                          @11405
162897: 54 28 00 20 08           jump @11407 if a1 <=u 8192
      :                          @11406
162902: 28 70 65                 jump @12856
      :                          @11407
162905: 82 17 28 01              a0 = u64 [sp + 0x128]
162909: 97 88 03                 a1 = a1 << 0x3
162912: 33 09 c0 22 03           a2 = 0x322c0
162917: 95 99 00 00 01           a2 = a2 + 0x10000
162922: 01                       fallthrough
      :                          @11408
162923: 82 9a                    a3 = u64 [a2]
162925: c9 a9 0b                 a4 = a2 - a3
162928: aa 7b 06                 jump @11410 if a4 == a0
      :                          @11409
162931: 28 53 65                 jump @12856
      :                          @11410
162934: c9 8a 0b                 a4 = a3 - a1
162937: 01                       fallthrough
      :                          @11411
162938: 82 9c                    a5 = u64 [a2]
162940: ab ac ef                 jump @11408 if a5 != a3
      :                          @11412
162943: 7b 9b                    u64 [a2] = a4
162945: 33 06                    s1 = 0
162947: 01                       fallthrough
      :                          @11413
162948: ab ac e7                 jump @11408 if a5 != a3
      :                          @11414
162951: 28 3f 65                 jump @12856
      :                          @11415 [@dyn 1158]
162954: 3a 08 78 12 03           a1 = u64 [0x31278]
162959: 97 89 0d                 a2 = a1 << 0xd
162962: d3 98 08                 a1 = a1 ^ a2
162965: 98 89 07                 a2 = a1 >> 0x7
162968: d3 98 08                 a1 = a1 ^ a2
162971: 3a 09 60 11 03           a2 = u64 [0x31160]
162976: 97 8a 11                 a3 = a1 << 0x11
162979: d3 a8 08                 a1 = a1 ^ a3
162982: ca 98 09                 a2 = a1 * a2
162985: 3e 08 78 12 03           u64 [0x31278] = a1
162990: 14 07 89 88 88 88 88 88 88 88 a0 = 0x8888888888888889
163000: d6 79 07                 a0 = a2 mulhu a0
163003: 98 77 04                 a0 = a0 >> 0x4
163006: 96 77 1e                 a0 = a0 * 0x1e
163009: c9 79 07                 a0 = a2 - a0
163012: 7b 17 20 01              u64 [sp + 0x120] = a0
163016: 33 00 0e 09              ra = 0x90e
163020: 95 11 d0                 sp = sp + 0xffffffffffffffd0
163023: 7b 10 28                 u64 [sp + 0x28] = ra
163026: 7b 15 20                 u64 [sp + 0x20] = s0
163029: 7b 16 18                 u64 [sp + 0x18] = s1
163032: 7b 17 10                 u64 [sp + 0x10] = a0
163035: 95 79 01                 a2 = a0 + 0x1
163038: 7b 19                    u64 [sp] = a2
163040: 97 99 03                 a2 = a2 << 0x3
163043: 33 07 c0 22 03           a0 = 0x322c0
163048: 33 03 c0 22 03           t1 = 0x322c0
163053: 33 02 00 00 01           t0 = 0x10000
163058: c8 23 06                 s1 = t1 + t0
163061: 28 7e 34 fe              jump @3230
      :                          @11416 [@dyn 1159]
163065: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
163069: 95 17 20 01              a0 = sp + 0x120
163073: 7b 17 38 02              u64 [sp + 0x238] = a0
163077: 33 07 28 0c              a0 = 0xc28
163081: 7b 17 40 02              u64 [sp + 0x240] = a0
163085: 95 18 e0 01              a1 = sp + 0x1e0
163089: 7b 18 48 02              u64 [sp + 0x248] = a1
163093: 7b 17 50 02              u64 [sp + 0x250] = a0
163097: 33 07 f0 21 01           a0 = 0x121f0
163102: 7b 17 90 02              u64 [sp + 0x290] = a0
163106: 49 21 98 02 02           u64 [sp + 664] = 0x2
163111: 49 21 b0 02              u64 [sp + 688] = 0
163115: 95 18 38 02              a1 = sp + 0x238
163119: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
163123: 49 21 a8 02 02           u64 [sp + 680] = 0x2
163128: 95 17 08 02              a0 = sp + 0x208
163132: 95 18 90 02              a1 = sp + 0x290
163136: 50 20 10 09 ff d1 fd     ra = 2320, jump @1491
      :                          @11417 [@dyn 1160]
163143: 82 16 10 02              s1 = u64 [sp + 0x210]
163147: 82 1b 18 02              a4 = u64 [sp + 0x218]
163151: 82 17 08 02              a0 = u64 [sp + 0x208]
163155: 7b 17 70                 u64 [sp + 0x70] = a0
163158: 33 07 02                 a0 = 0x2
163161: 33 08                    a1 = 0
163163: 33 09                    a2 = 0
163165: 64 6a                    a3 = s1
163167: 33 00 12 09              ra = 0x912
163171: 0a 64                    ecalli 100 // 'log'
163173: 01                       fallthrough
      :                          @11418 [@dyn 1161]
163174: 82 1c 70                 a5 = u64 [sp + 0x70]
163177: 82 17 68                 a0 = u64 [sp + 0x68]
163180: c8 c7 07                 a0 = a0 + a5
163183: 55 37 00 00 ff 09        jump @11420 if a0 >=u 4294901760
      :                          @11419
163189: 28 51 64                 jump @12856
      :                          @11420
163192: 33 07 c0 22 03           a0 = 0x322c0
163197: 95 77 00 00 01           a0 = a0 + 0x10000
163202: 01                       fallthrough
      :                          @11421
163203: 82 78                    a1 = u64 [a0]
163205: c9 87 09                 a2 = a0 - a1
163208: aa 69 06                 jump @11423 if a2 == s1
      :                          @11422
163211: 28 3b 64                 jump @12856
      :                          @11423
163214: c9 c8 09                 a2 = a1 - a5
163217: 01                       fallthrough
      :                          @11424
163218: 82 7a                    a3 = u64 [a0]
163220: ab 8a ef                 jump @11421 if a3 != a1
      :                          @11425
163223: 7b 79                    u64 [a0] = a2
163225: 33 0b                    a4 = 0
163227: 01                       fallthrough
      :                          @11426
163228: ab 8a e7                 jump @11421 if a3 != a1
      :                          @11427
163231: 28 27 64                 jump @12856
      :                          @11428 [@dyn 1162]
163234: 3a 08 78 12 03           a1 = u64 [0x31278]
163239: 97 89 0d                 a2 = a1 << 0xd
163242: d3 98 08                 a1 = a1 ^ a2
163245: 98 89 07                 a2 = a1 >> 0x7
163248: d3 98 08                 a1 = a1 ^ a2
163251: 3a 09 60 11 03           a2 = u64 [0x31160]
163256: 97 8a 11                 a3 = a1 << 0x11
163259: d3 a8 08                 a1 = a1 ^ a3
163262: ca 98 09                 a2 = a1 * a2
163265: 3e 08 78 12 03           u64 [0x31278] = a1
163270: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
163280: d6 79 07                 a0 = a2 mulhu a0
163283: 98 77 02                 a0 = a0 >> 0x2
163286: 96 77 06                 a0 = a0 * 0x6
163289: c9 79 08                 a1 = a2 - a0
163292: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
163296: 95 17 e0 01              a0 = sp + 0x1e0
163300: 95 16 e0 01              s1 = sp + 0x1e0
163304: 33 00 16 09              ra = 0x916
163308: 95 11 b8                 sp = sp + 0xffffffffffffffb8
163311: 7b 10 40                 u64 [sp + 0x40] = ra
163314: 7b 15 38                 u64 [sp + 0x38] = s0
163317: 7b 16 30                 u64 [sp + 0x30] = s1
163320: 64 76                    s1 = a0
163322: 49 01                    u64 [sp + 0] = 0
163324: 49 11 08 08              u64 [sp + 8] = 0x8
163328: 49 11 10                 u64 [sp + 16] = 0
163331: 49 11 18                 u64 [sp + 24] = 0
163334: 49 11 20 08              u64 [sp + 32] = 0x8
163338: 49 11 28                 u64 [sp + 40] = 0
163341: 95 19 18                 a2 = sp + 0x18
163344: 64 1a                    a3 = sp
163346: 64 87                    a0 = a1
163348: 33 00 d4 02              ra = 0x2d4
163352: 28 8d 34 fe              jump @3260
      :                          @11429 [@dyn 1163]
163356: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
163360: 7b 17 20 01              u64 [sp + 0x120] = a0
163364: 95 17 c8 01              a0 = sp + 0x1c8
163368: 7b 17 90 02              u64 [sp + 0x290] = a0
163372: 33 07 28 0c              a0 = 0xc28
163376: 7b 17 98 02              u64 [sp + 0x298] = a0
163380: 95 18 20 01              a1 = sp + 0x120
163384: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
163388: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
163392: 7b 16 b0 02              u64 [sp + 0x2b0] = s1
163396: 33 07 30 02              a0 = 0x230
163400: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
163404: 33 07 18 22 01           a0 = 0x12218
163409: 7b 17 38 02              u64 [sp + 0x238] = a0
163413: 49 21 40 02 03           u64 [sp + 576] = 0x3
163418: 49 21 58 02              u64 [sp + 600] = 0
163422: 95 18 90 02              a1 = sp + 0x290
163426: 7b 18 48 02              u64 [sp + 0x248] = a1
163430: 49 21 50 02 03           u64 [sp + 592] = 0x3
163435: 95 17 08 02              a0 = sp + 0x208
163439: 95 18 38 02              a1 = sp + 0x238
163443: 50 20 18 09 cc d0 fd     ra = 2328, jump @1491
      :                          @11430 [@dyn 1164]
163450: 82 16 10 02              s1 = u64 [sp + 0x210]
163454: 82 1b 18 02              a4 = u64 [sp + 0x218]
163458: 82 17 08 02              a0 = u64 [sp + 0x208]
163462: 7b 17 70                 u64 [sp + 0x70] = a0
163465: 33 07 02                 a0 = 0x2
163468: 33 08                    a1 = 0
163470: 33 09                    a2 = 0
163472: 64 6a                    a3 = s1
163474: 33 00 1a 09              ra = 0x91a
163478: 0a 64                    ecalli 100 // 'log'
163480: 01                       fallthrough
      :                          @11431 [@dyn 1165]
163481: 82 1c 70                 a5 = u64 [sp + 0x70]
163484: 82 17 68                 a0 = u64 [sp + 0x68]
163487: c8 c7 07                 a0 = a0 + a5
163490: 33 08 00 00 ff           a1 = 0xffffffffffff0000
163495: ae 87 06                 jump @11433 if a0 >=u a1
      :                          @11432
163498: 28 e5 5f                 jump @12791
      :                          @11433
163501: 33 07 c0 22 03           a0 = 0x322c0
163506: 95 77 00 00 01           a0 = a0 + 0x10000
163511: 01                       fallthrough
      :                          @11434
163512: 82 78                    a1 = u64 [a0]
163514: c9 87 09                 a2 = a0 - a1
163517: aa 69 06                 jump @11436 if a2 == s1
      :                          @11435
163520: 28 cf 5f                 jump @12791
      :                          @11436
163523: c9 c8 09                 a2 = a1 - a5
163526: 01                       fallthrough
      :                          @11437
163527: 82 7a                    a3 = u64 [a0]
163529: ab 8a ef                 jump @11434 if a3 != a1
      :                          @11438
163532: 7b 79                    u64 [a0] = a2
163534: 33 0b                    a4 = 0
163536: 01                       fallthrough
      :                          @11439
163537: ab 8a e7                 jump @11434 if a3 != a1
      :                          @11440
163540: 28 bb 5f                 jump @12791
      :                          @11441 [@dyn 1166]
163543: 3a 08 78 12 03           a1 = u64 [0x31278]
163548: 97 89 0d                 a2 = a1 << 0xd
163551: d3 98 08                 a1 = a1 ^ a2
163554: 98 89 07                 a2 = a1 >> 0x7
163557: d3 98 08                 a1 = a1 ^ a2
163560: 97 89 11                 a2 = a1 << 0x11
163563: d3 98 08                 a1 = a1 ^ a2
163566: 3a 09 60 11 03           a2 = u64 [0x31160]
163571: 3a 0a b0 11 03           a3 = u64 [0x311b0]
163576: 3e 08 78 12 03           u64 [0x31278] = a1
163581: ca 98 07                 a0 = a1 * a2
163584: 98 78 02                 a1 = a0 >> 0x2
163587: d6 a8 08                 a1 = a1 mulhu a3
163590: 98 88 02                 a1 = a1 >> 0x2
163593: 96 88 64                 a1 = a1 * 0x64
163596: c9 87 07                 a0 = a0 - a1
163599: 7b 17 20 01              u64 [sp + 0x120] = a0
163603: 33 00 1e 09              ra = 0x91e
163607: 95 11 d0                 sp = sp + 0xffffffffffffffd0
163610: 7b 10 28                 u64 [sp + 0x28] = ra
163613: 7b 15 20                 u64 [sp + 0x20] = s0
163616: 7b 16 18                 u64 [sp + 0x18] = s1
163619: 7b 17 10                 u64 [sp + 0x10] = a0
163622: 95 77 01                 a0 = a0 + 0x1
163625: 7b 17                    u64 [sp] = a0
163627: 97 79 03                 a2 = a0 << 0x3
163630: 33 07 c0 22 03           a0 = 0x322c0
163635: 33 03 c0 22 03           t1 = 0x322c0
163640: 33 02 00 00 01           t0 = 0x10000
163645: c8 23 05                 s0 = t1 + t0
163648: 28 8c 34 fe              jump @3286
      :                          @11442 [@dyn 1167]
163652: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
163656: 95 17 20 01              a0 = sp + 0x120
163660: 7b 17 38 02              u64 [sp + 0x238] = a0
163664: 33 07 28 0c              a0 = 0xc28
163668: 7b 17 40 02              u64 [sp + 0x240] = a0
163672: 95 18 e0 01              a1 = sp + 0x1e0
163676: 7b 18 48 02              u64 [sp + 0x248] = a1
163680: 7b 17 50 02              u64 [sp + 0x250] = a0
163684: 33 07 60 22 01           a0 = 0x12260
163689: 7b 17 90 02              u64 [sp + 0x290] = a0
163693: 49 21 98 02 02           u64 [sp + 664] = 0x2
163698: 49 21 b0 02              u64 [sp + 688] = 0
163702: 95 18 38 02              a1 = sp + 0x238
163706: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
163710: 49 21 a8 02 02           u64 [sp + 680] = 0x2
163715: 95 17 08 02              a0 = sp + 0x208
163719: 95 18 90 02              a1 = sp + 0x290
163723: 50 20 20 09 b4 cf fd     ra = 2336, jump @1491
      :                          @11443 [@dyn 1168]
163730: 82 16 10 02              s1 = u64 [sp + 0x210]
163734: 82 1b 18 02              a4 = u64 [sp + 0x218]
163738: 82 17 08 02              a0 = u64 [sp + 0x208]
163742: 7b 17 70                 u64 [sp + 0x70] = a0
163745: 33 07 02                 a0 = 0x2
163748: 33 08                    a1 = 0
163750: 33 09                    a2 = 0
163752: 64 6a                    a3 = s1
163754: 33 00 22 09              ra = 0x922
163758: 0a 64                    ecalli 100 // 'log'
163760: 01                       fallthrough
      :                          @11444 [@dyn 1169]
163761: 82 1c 70                 a5 = u64 [sp + 0x70]
163764: 82 17 68                 a0 = u64 [sp + 0x68]
163767: c8 c7 07                 a0 = a0 + a5
163770: 55 37 00 00 ff 09        jump @11446 if a0 >=u 4294901760
      :                          @11445
163776: 28 06 62                 jump @12856
      :                          @11446
163779: 33 07 c0 22 03           a0 = 0x322c0
163784: 95 77 00 00 01           a0 = a0 + 0x10000
163789: 01                       fallthrough
      :                          @11447
163790: 82 78                    a1 = u64 [a0]
163792: c9 87 09                 a2 = a0 - a1
163795: aa 69 06                 jump @11449 if a2 == s1
      :                          @11448
163798: 28 f0 61                 jump @12856
      :                          @11449
163801: c9 c8 09                 a2 = a1 - a5
163804: 01                       fallthrough
      :                          @11450
163805: 82 7a                    a3 = u64 [a0]
163807: ab 8a ef                 jump @11447 if a3 != a1
      :                          @11451
163810: 7b 79                    u64 [a0] = a2
163812: 33 0b                    a4 = 0
163814: 01                       fallthrough
      :                          @11452
163815: ab 8a e7                 jump @11447 if a3 != a1
      :                          @11453
163818: 28 dc 61                 jump @12856
      :                          @11454 [@dyn 1170]
163821: 3a 08 78 12 03           a1 = u64 [0x31278]
163826: 97 89 0d                 a2 = a1 << 0xd
163829: d3 98 08                 a1 = a1 ^ a2
163832: 98 89 07                 a2 = a1 >> 0x7
163835: d3 98 08                 a1 = a1 ^ a2
163838: 97 89 11                 a2 = a1 << 0x11
163841: d3 98 08                 a1 = a1 ^ a2
163844: 3a 09 60 11 03           a2 = u64 [0x31160]
163849: 3a 0a b0 11 03           a3 = u64 [0x311b0]
163854: 3e 08 78 12 03           u64 [0x31278] = a1
163859: ca 98 07                 a0 = a1 * a2
163862: 98 78 02                 a1 = a0 >> 0x2
163865: d6 a8 08                 a1 = a1 mulhu a3
163868: 98 88 02                 a1 = a1 >> 0x2
163871: 96 88 64                 a1 = a1 * 0x64
163874: c9 87 07                 a0 = a0 - a1
163877: 7b 17 20 01              u64 [sp + 0x120] = a0
163881: 33 00 26 09              ra = 0x926
163885: 95 11 e8                 sp = sp + 0xffffffffffffffe8
163888: 7b 10 10                 u64 [sp + 0x10] = ra
163891: 7b 15 08                 u64 [sp + 0x8] = s0
163894: 7b 16                    u64 [sp] = s1
163896: 64 73                    t1 = a0
163898: 95 78 01                 a1 = a0 + 0x1
163901: 97 87 03                 a0 = a1 << 0x3
163904: 33 04 c0 22 03           t2 = 0x322c0
163909: 33 02 00 00 01           t0 = 0x10000
163914: c8 24 00                 ra = t2 + t0
163917: 28 df 34 fe              jump @3316
      :                          @11455 [@dyn 1171]
163921: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
163925: 95 17 20 01              a0 = sp + 0x120
163929: 7b 17 38 02              u64 [sp + 0x238] = a0
163933: 33 07 28 0c              a0 = 0xc28
163937: 7b 17 40 02              u64 [sp + 0x240] = a0
163941: 95 17 e0 01              a0 = sp + 0x1e0
163945: 7b 17 48 02              u64 [sp + 0x248] = a0
163949: 33 07 94 0c              a0 = 0xc94
163953: 7b 17 50 02              u64 [sp + 0x250] = a0
163957: 33 07 80 22 01           a0 = 0x12280
163962: 7b 17 90 02              u64 [sp + 0x290] = a0
163966: 49 21 98 02 02           u64 [sp + 664] = 0x2
163971: 49 21 b0 02              u64 [sp + 688] = 0
163975: 95 18 38 02              a1 = sp + 0x238
163979: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
163983: 49 21 a8 02 02           u64 [sp + 680] = 0x2
163988: 95 17 08 02              a0 = sp + 0x208
163992: 95 18 90 02              a1 = sp + 0x290
163996: 50 20 28 09 a3 ce fd     ra = 2344, jump @1491
      :                          @11456 [@dyn 1172]
164003: 82 16 10 02              s1 = u64 [sp + 0x210]
164007: 82 1b 18 02              a4 = u64 [sp + 0x218]
164011: 82 17 08 02              a0 = u64 [sp + 0x208]
164015: 7b 17 70                 u64 [sp + 0x70] = a0
164018: 33 07 02                 a0 = 0x2
164021: 33 08                    a1 = 0
164023: 33 09                    a2 = 0
164025: 64 6a                    a3 = s1
164027: 33 00 2a 09              ra = 0x92a
164031: 0a 64                    ecalli 100 // 'log'
164033: 01                       fallthrough
      :                          @11457 [@dyn 1173]
164034: 82 1c 70                 a5 = u64 [sp + 0x70]
164037: 82 17 68                 a0 = u64 [sp + 0x68]
164040: c8 c7 07                 a0 = a0 + a5
164043: 55 37 00 00 ff 09        jump @11459 if a0 >=u 4294901760
      :                          @11458
164049: 28 f5 60                 jump @12856
      :                          @11459
164052: 33 07 c0 22 03           a0 = 0x322c0
164057: 95 77 00 00 01           a0 = a0 + 0x10000
164062: 01                       fallthrough
      :                          @11460
164063: 82 78                    a1 = u64 [a0]
164065: c9 87 09                 a2 = a0 - a1
164068: aa 69 06                 jump @11462 if a2 == s1
      :                          @11461
164071: 28 df 60                 jump @12856
      :                          @11462
164074: c9 c8 09                 a2 = a1 - a5
164077: 01                       fallthrough
      :                          @11463
164078: 82 7a                    a3 = u64 [a0]
164080: ab 8a ef                 jump @11460 if a3 != a1
      :                          @11464
164083: 7b 79                    u64 [a0] = a2
164085: 33 0b                    a4 = 0
164087: 01                       fallthrough
      :                          @11465
164088: ab 8a e7                 jump @11460 if a3 != a1
      :                          @11466
164091: 28 cb 60                 jump @12856
      :                          @11467 [@dyn 1174]
164094: 3a 08 78 12 03           a1 = u64 [0x31278]
164099: 3a 02 60 11 03           t0 = u64 [0x31160]
164104: 97 89 0d                 a2 = a1 << 0xd
164107: d3 98 08                 a1 = a1 ^ a2
164110: 98 89 07                 a2 = a1 >> 0x7
164113: d3 98 08                 a1 = a1 ^ a2
164116: 97 89 11                 a2 = a1 << 0x11
164119: d3 98 08                 a1 = a1 ^ a2
164122: ca 28 09                 a2 = a1 * t0
164125: 3a 0a b0 11 03           a3 = u64 [0x311b0]
164130: 3e 08 78 12 03           u64 [0x31278] = a1
164135: 98 98 02                 a1 = a2 >> 0x2
164138: d6 a8 08                 a1 = a1 mulhu a3
164141: 98 88 02                 a1 = a1 >> 0x2
164144: 96 88 64                 a1 = a1 * 0x64
164147: c9 89 09                 a2 = a2 - a1
164150: 95 99 01                 a2 = a2 + 0x1
164153: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
164157: 49 21 20 01              u64 [sp + 288] = 0
164161: 49 21 28 01 08           u64 [sp + 296] = 0x8
164166: 49 21 30 01              u64 [sp + 304] = 0
164170: 49 21 e0 01              u64 [sp + 480] = 0
164174: 49 21 e8 01 08           u64 [sp + 488] = 0x8
164179: 49 21 f0 01              u64 [sp + 496] = 0
164183: 3a 08 78 12 03           a1 = u64 [0x31278]
164188: 97 89 0d                 a2 = a1 << 0xd
164191: d3 98 08                 a1 = a1 ^ a2
164194: 98 89 07                 a2 = a1 >> 0x7
164197: d3 98 08                 a1 = a1 ^ a2
164200: 97 89 11                 a2 = a1 << 0x11
164203: d3 89 09                 a2 = a2 ^ a1
164206: 3e 09 78 12 03           u64 [0x31278] = a2
164211: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
164215: 52 07 06                 jump @11469 if a0 != 0
      :                          @11468
164218: 28 60 72                 jump @13228
      :                          @11469
164221: 82 18 30 01              a1 = u64 [sp + 0x130]
164225: 82 1a 20 01              a3 = u64 [sp + 0x120]
164229: ca 29 09                 a2 = a2 * t0
164232: cd 79 06                 s1 = a2 %u a0
164235: 95 66 01                 s1 = s1 + 0x1
164238: 7b 12 70                 u64 [sp + 0x70] = t0
164241: ab a8 16                 jump @11472 if a1 != a3
      :                          @11470
164244: 95 17 20 01              a0 = sp + 0x120
164248: 50 20 2e 09 6f d1 fd     ra = 2350, jump @1581
      :                          @11471 [@dyn 1175]
164255: 82 12 70                 t0 = u64 [sp + 0x70]
164258: 82 18 30 01              a1 = u64 [sp + 0x130]
164262: 01                       fallthrough
      :                          @11472
164263: 82 17 28 01              a0 = u64 [sp + 0x128]
164267: 97 89 03                 a2 = a1 << 0x3
164270: c8 97 07                 a0 = a0 + a2
164273: 7b 76                    u64 [a0] = s1
164275: 95 88 01                 a1 = a1 + 0x1
164278: 7b 18 30 01              u64 [sp + 0x130] = a1
164282: 33 0c 78 12 03           a5 = 0x31278
164287: 3a 07 78 12 03           a0 = u64 [0x31278]
164292: 97 78 0d                 a1 = a0 << 0xd
164295: d3 87 07                 a0 = a0 ^ a1
164298: 98 78 07                 a1 = a0 >> 0x7
164301: d3 87 07                 a0 = a0 ^ a1
164304: 97 78 11                 a1 = a0 << 0x11
164307: d3 87 07                 a0 = a0 ^ a1
164310: ca 27 09                 a2 = a0 * t0
164313: 3a 08 68 11 03           a1 = u64 [0x31168]
164318: 3e 07 78 12 03           u64 [0x31278] = a0
164323: 98 97 03                 a0 = a2 >> 0x3
164326: d6 87 07                 a0 = a0 mulhu a1
164329: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
164333: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
164337: 98 77 04                 a0 = a0 >> 0x4
164340: 33 0b e8 03              a4 = 0x3e8
164344: ca b7 07                 a0 = a0 * a4
164347: c9 79 06                 s1 = a2 - a0
164350: ab a8 1b                 jump @11475 if a1 != a3
      :                          @11473
164353: 95 17 e0 01              a0 = sp + 0x1e0
164357: 50 20 30 09 02 d1 fd     ra = 2352, jump @1581
      :                          @11474 [@dyn 1176]
164364: 33 0c 78 12 03           a5 = 0x31278
164369: 82 12 70                 t0 = u64 [sp + 0x70]
164372: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
164376: 01                       fallthrough
      :                          @11475
164377: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
164381: 97 89 03                 a2 = a1 << 0x3
164384: c8 97 07                 a0 = a0 + a2
164387: 7b 76                    u64 [a0] = s1
164389: 95 88 01                 a1 = a1 + 0x1
164392: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
164396: 3a 07 78 12 03           a0 = u64 [0x31278]
164401: 97 78 0d                 a1 = a0 << 0xd
164404: d3 87 07                 a0 = a0 ^ a1
164407: 98 78 07                 a1 = a0 >> 0x7
164410: d3 87 07                 a0 = a0 ^ a1
164413: 97 78 11                 a1 = a0 << 0x11
164416: d3 87 07                 a0 = a0 ^ a1
164419: 3e 07 78 12 03           u64 [0x31278] = a0
164424: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
164428: 52 09 06                 jump @11477 if a2 != 0
      :                          @11476
164431: 28 8b 71                 jump @13228
      :                          @11477
164434: 82 18 30 01              a1 = u64 [sp + 0x130]
164438: 82 1a 20 01              a3 = u64 [sp + 0x120]
164442: ca 27 07                 a0 = a0 * t0
164445: cd 97 06                 s1 = a0 %u a2
164448: 95 66 01                 s1 = s1 + 0x1
164451: ab a8 16                 jump @11480 if a1 != a3
      :                          @11478
164454: 95 17 20 01              a0 = sp + 0x120
164458: 50 20 32 09 9d d0 fd     ra = 2354, jump @1581
      :                          @11479 [@dyn 1177]
164465: 82 12 70                 t0 = u64 [sp + 0x70]
164468: 82 18 30 01              a1 = u64 [sp + 0x130]
164472: 01                       fallthrough
      :                          @11480
164473: 82 17 28 01              a0 = u64 [sp + 0x128]
164477: 97 89 03                 a2 = a1 << 0x3
164480: c8 97 07                 a0 = a0 + a2
164483: 7b 76                    u64 [a0] = s1
164485: 95 88 01                 a1 = a1 + 0x1
164488: 7b 18 30 01              u64 [sp + 0x130] = a1
164492: 33 0c 78 12 03           a5 = 0x31278
164497: 3a 07 78 12 03           a0 = u64 [0x31278]
164502: 97 78 0d                 a1 = a0 << 0xd
164505: d3 87 07                 a0 = a0 ^ a1
164508: 98 78 07                 a1 = a0 >> 0x7
164511: d3 87 07                 a0 = a0 ^ a1
164514: 97 78 11                 a1 = a0 << 0x11
164517: d3 87 07                 a0 = a0 ^ a1
164520: ca 27 09                 a2 = a0 * t0
164523: 3a 08 68 11 03           a1 = u64 [0x31168]
164528: 3e 07 78 12 03           u64 [0x31278] = a0
164533: 98 97 03                 a0 = a2 >> 0x3
164536: d6 87 07                 a0 = a0 mulhu a1
164539: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
164543: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
164547: 98 77 04                 a0 = a0 >> 0x4
164550: 33 0b e8 03              a4 = 0x3e8
164554: ca b7 07                 a0 = a0 * a4
164557: c9 79 06                 s1 = a2 - a0
164560: ab a8 1b                 jump @11483 if a1 != a3
      :                          @11481
164563: 95 17 e0 01              a0 = sp + 0x1e0
164567: 50 20 34 09 30 d0 fd     ra = 2356, jump @1581
      :                          @11482 [@dyn 1178]
164574: 33 0c 78 12 03           a5 = 0x31278
164579: 82 12 70                 t0 = u64 [sp + 0x70]
164582: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
164586: 01                       fallthrough
      :                          @11483
164587: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
164591: 97 89 03                 a2 = a1 << 0x3
164594: c8 97 07                 a0 = a0 + a2
164597: 7b 76                    u64 [a0] = s1
164599: 95 88 01                 a1 = a1 + 0x1
164602: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
164606: 3a 07 78 12 03           a0 = u64 [0x31278]
164611: 97 78 0d                 a1 = a0 << 0xd
164614: d3 87 07                 a0 = a0 ^ a1
164617: 98 78 07                 a1 = a0 >> 0x7
164620: d3 87 07                 a0 = a0 ^ a1
164623: 97 78 11                 a1 = a0 << 0x11
164626: d3 87 07                 a0 = a0 ^ a1
164629: 3e 07 78 12 03           u64 [0x31278] = a0
164634: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
164638: 52 09 06                 jump @11485 if a2 != 0
      :                          @11484
164641: 28 b9 70                 jump @13228
      :                          @11485
164644: 82 18 30 01              a1 = u64 [sp + 0x130]
164648: 82 1a 20 01              a3 = u64 [sp + 0x120]
164652: ca 27 07                 a0 = a0 * t0
164655: cd 97 06                 s1 = a0 %u a2
164658: 95 66 01                 s1 = s1 + 0x1
164661: ab a8 16                 jump @11488 if a1 != a3
      :                          @11486
164664: 95 17 20 01              a0 = sp + 0x120
164668: 50 20 36 09 cb cf fd     ra = 2358, jump @1581
      :                          @11487 [@dyn 1179]
164675: 82 12 70                 t0 = u64 [sp + 0x70]
164678: 82 18 30 01              a1 = u64 [sp + 0x130]
164682: 01                       fallthrough
      :                          @11488
164683: 82 17 28 01              a0 = u64 [sp + 0x128]
164687: 97 89 03                 a2 = a1 << 0x3
164690: c8 97 07                 a0 = a0 + a2
164693: 7b 76                    u64 [a0] = s1
164695: 95 88 01                 a1 = a1 + 0x1
164698: 7b 18 30 01              u64 [sp + 0x130] = a1
164702: 33 0c 78 12 03           a5 = 0x31278
164707: 3a 07 78 12 03           a0 = u64 [0x31278]
164712: 97 78 0d                 a1 = a0 << 0xd
164715: d3 87 07                 a0 = a0 ^ a1
164718: 98 78 07                 a1 = a0 >> 0x7
164721: d3 87 07                 a0 = a0 ^ a1
164724: 97 78 11                 a1 = a0 << 0x11
164727: d3 87 07                 a0 = a0 ^ a1
164730: ca 27 09                 a2 = a0 * t0
164733: 3a 08 68 11 03           a1 = u64 [0x31168]
164738: 3e 07 78 12 03           u64 [0x31278] = a0
164743: 98 97 03                 a0 = a2 >> 0x3
164746: d6 87 07                 a0 = a0 mulhu a1
164749: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
164753: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
164757: 98 77 04                 a0 = a0 >> 0x4
164760: 33 0b e8 03              a4 = 0x3e8
164764: ca b7 07                 a0 = a0 * a4
164767: c9 79 06                 s1 = a2 - a0
164770: ab a8 1b                 jump @11491 if a1 != a3
      :                          @11489
164773: 95 17 e0 01              a0 = sp + 0x1e0
164777: 50 20 38 09 5e cf fd     ra = 2360, jump @1581
      :                          @11490 [@dyn 1180]
164784: 33 0c 78 12 03           a5 = 0x31278
164789: 82 12 70                 t0 = u64 [sp + 0x70]
164792: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
164796: 01                       fallthrough
      :                          @11491
164797: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
164801: 97 89 03                 a2 = a1 << 0x3
164804: c8 97 07                 a0 = a0 + a2
164807: 7b 76                    u64 [a0] = s1
164809: 95 88 01                 a1 = a1 + 0x1
164812: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
164816: 3a 07 78 12 03           a0 = u64 [0x31278]
164821: 97 78 0d                 a1 = a0 << 0xd
164824: d3 87 07                 a0 = a0 ^ a1
164827: 98 78 07                 a1 = a0 >> 0x7
164830: d3 87 07                 a0 = a0 ^ a1
164833: 97 78 11                 a1 = a0 << 0x11
164836: d3 87 07                 a0 = a0 ^ a1
164839: 3e 07 78 12 03           u64 [0x31278] = a0
164844: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
164848: 52 09 06                 jump @11493 if a2 != 0
      :                          @11492
164851: 28 e7 6f                 jump @13228
      :                          @11493
164854: 82 18 30 01              a1 = u64 [sp + 0x130]
164858: 82 1a 20 01              a3 = u64 [sp + 0x120]
164862: ca 27 07                 a0 = a0 * t0
164865: cd 97 06                 s1 = a0 %u a2
164868: 95 66 01                 s1 = s1 + 0x1
164871: ab a8 16                 jump @11496 if a1 != a3
      :                          @11494
164874: 95 17 20 01              a0 = sp + 0x120
164878: 50 20 3a 09 f9 ce fd     ra = 2362, jump @1581
      :                          @11495 [@dyn 1181]
164885: 82 12 70                 t0 = u64 [sp + 0x70]
164888: 82 18 30 01              a1 = u64 [sp + 0x130]
164892: 01                       fallthrough
      :                          @11496
164893: 82 17 28 01              a0 = u64 [sp + 0x128]
164897: 97 89 03                 a2 = a1 << 0x3
164900: c8 97 07                 a0 = a0 + a2
164903: 7b 76                    u64 [a0] = s1
164905: 95 88 01                 a1 = a1 + 0x1
164908: 7b 18 30 01              u64 [sp + 0x130] = a1
164912: 33 0c 78 12 03           a5 = 0x31278
164917: 3a 07 78 12 03           a0 = u64 [0x31278]
164922: 97 78 0d                 a1 = a0 << 0xd
164925: d3 87 07                 a0 = a0 ^ a1
164928: 98 78 07                 a1 = a0 >> 0x7
164931: d3 87 07                 a0 = a0 ^ a1
164934: 97 78 11                 a1 = a0 << 0x11
164937: d3 87 07                 a0 = a0 ^ a1
164940: ca 27 09                 a2 = a0 * t0
164943: 3a 08 68 11 03           a1 = u64 [0x31168]
164948: 3e 07 78 12 03           u64 [0x31278] = a0
164953: 98 97 03                 a0 = a2 >> 0x3
164956: d6 87 07                 a0 = a0 mulhu a1
164959: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
164963: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
164967: 98 77 04                 a0 = a0 >> 0x4
164970: 33 0b e8 03              a4 = 0x3e8
164974: ca b7 07                 a0 = a0 * a4
164977: c9 79 06                 s1 = a2 - a0
164980: ab a8 1b                 jump @11499 if a1 != a3
      :                          @11497
164983: 95 17 e0 01              a0 = sp + 0x1e0
164987: 50 20 3c 09 8c ce fd     ra = 2364, jump @1581
      :                          @11498 [@dyn 1182]
164994: 33 0c 78 12 03           a5 = 0x31278
164999: 82 12 70                 t0 = u64 [sp + 0x70]
165002: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
165006: 01                       fallthrough
      :                          @11499
165007: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
165011: 97 89 03                 a2 = a1 << 0x3
165014: c8 97 07                 a0 = a0 + a2
165017: 7b 76                    u64 [a0] = s1
165019: 95 88 01                 a1 = a1 + 0x1
165022: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
165026: 3a 07 78 12 03           a0 = u64 [0x31278]
165031: 97 78 0d                 a1 = a0 << 0xd
165034: d3 87 07                 a0 = a0 ^ a1
165037: 98 78 07                 a1 = a0 >> 0x7
165040: d3 87 07                 a0 = a0 ^ a1
165043: 97 78 11                 a1 = a0 << 0x11
165046: d3 87 07                 a0 = a0 ^ a1
165049: 3e 07 78 12 03           u64 [0x31278] = a0
165054: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
165058: 52 09 06                 jump @11501 if a2 != 0
      :                          @11500
165061: 28 15 6f                 jump @13228
      :                          @11501
165064: 82 18 30 01              a1 = u64 [sp + 0x130]
165068: 82 1a 20 01              a3 = u64 [sp + 0x120]
165072: ca 27 07                 a0 = a0 * t0
165075: cd 97 06                 s1 = a0 %u a2
165078: 95 66 01                 s1 = s1 + 0x1
165081: ab a8 16                 jump @11504 if a1 != a3
      :                          @11502
165084: 95 17 20 01              a0 = sp + 0x120
165088: 50 20 3e 09 27 ce fd     ra = 2366, jump @1581
      :                          @11503 [@dyn 1183]
165095: 82 12 70                 t0 = u64 [sp + 0x70]
165098: 82 18 30 01              a1 = u64 [sp + 0x130]
165102: 01                       fallthrough
      :                          @11504
165103: 82 17 28 01              a0 = u64 [sp + 0x128]
165107: 97 89 03                 a2 = a1 << 0x3
165110: c8 97 07                 a0 = a0 + a2
165113: 7b 76                    u64 [a0] = s1
165115: 95 88 01                 a1 = a1 + 0x1
165118: 7b 18 30 01              u64 [sp + 0x130] = a1
165122: 3a 08 78 12 03           a1 = u64 [0x31278]
165127: 97 89 0d                 a2 = a1 << 0xd
165130: d3 98 08                 a1 = a1 ^ a2
165133: 98 89 07                 a2 = a1 >> 0x7
165136: d3 98 08                 a1 = a1 ^ a2
165139: 97 89 11                 a2 = a1 << 0x11
165142: d3 98 08                 a1 = a1 ^ a2
165145: ca 28 09                 a2 = a1 * t0
165148: 3a 0a 68 11 03           a3 = u64 [0x31168]
165153: 3e 08 78 12 03           u64 [0x31278] = a1
165158: 98 97 03                 a0 = a2 >> 0x3
165161: d6 a7 07                 a0 = a0 mulhu a3
165164: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
165168: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
165172: 98 77 04                 a0 = a0 >> 0x4
165175: 33 0b e8 03              a4 = 0x3e8
165179: ca b7 07                 a0 = a0 * a4
165182: c9 79 06                 s1 = a2 - a0
165185: ab a8 13                 jump @11507 if a1 != a3
      :                          @11505
165188: 95 17 e0 01              a0 = sp + 0x1e0
165192: 50 20 40 09 bf cd fd     ra = 2368, jump @1581
      :                          @11506 [@dyn 1184]
165199: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
165203: 01                       fallthrough
      :                          @11507
165204: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
165208: 97 89 03                 a2 = a1 << 0x3
165211: c8 97 07                 a0 = a0 + a2
165214: 7b 76                    u64 [a0] = s1
165216: 95 8a 01                 a3 = a1 + 0x1
165219: 7b 1a f0 01              u64 [sp + 0x1f0] = a3
165223: 82 17 28 01              a0 = u64 [sp + 0x128]
165227: 82 18 30 01              a1 = u64 [sp + 0x130]
165231: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
165235: 82 1b b0 01              a4 = u64 [sp + 0x1b0]
165239: 50 20 42 09 83 31 fe     ra = 2370, jump @3363
      :                          @11508 [@dyn 1185]
165246: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
165250: 95 17 b0 01              a0 = sp + 0x1b0
165254: 7b 17 90 02              u64 [sp + 0x290] = a0
165258: 33 07 28 0c              a0 = 0xc28
165262: 7b 17 98 02              u64 [sp + 0x298] = a0
165266: 95 18 20 01              a1 = sp + 0x120
165270: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
165274: 33 08 20 02              a1 = 0x220
165278: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
165282: 95 19 e0 01              a2 = sp + 0x1e0
165286: 7b 19 b0 02              u64 [sp + 0x2b0] = a2
165290: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
165294: 95 18 c8 01              a1 = sp + 0x1c8
165298: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
165302: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
165306: 33 07 c0 22 01           a0 = 0x122c0
165311: 7b 17 38 02              u64 [sp + 0x238] = a0
165315: 49 21 40 02 04           u64 [sp + 576] = 0x4
165320: 49 21 58 02              u64 [sp + 600] = 0
165324: 95 18 90 02              a1 = sp + 0x290
165328: 7b 18 48 02              u64 [sp + 0x248] = a1
165332: 49 21 50 02 04           u64 [sp + 592] = 0x4
165337: 95 17 08 02              a0 = sp + 0x208
165341: 95 18 38 02              a1 = sp + 0x238
165345: 50 20 44 09 5e c9 fd     ra = 2372, jump @1491
      :                          @11509 [@dyn 1186]
165352: 82 16 10 02              s1 = u64 [sp + 0x210]
165356: 82 1b 18 02              a4 = u64 [sp + 0x218]
165360: 82 17 08 02              a0 = u64 [sp + 0x208]
165364: 7b 17 70                 u64 [sp + 0x70] = a0
165367: 33 07 02                 a0 = 0x2
165370: 33 08                    a1 = 0
165372: 33 09                    a2 = 0
165374: 64 6a                    a3 = s1
165376: 33 00 46 09              ra = 0x946
165380: 0a 64                    ecalli 100 // 'log'
165382: 01                       fallthrough
      :                          @11510 [@dyn 1187]
165383: 82 1c 70                 a5 = u64 [sp + 0x70]
165386: 82 17 68                 a0 = u64 [sp + 0x68]
165389: c8 c7 07                 a0 = a0 + a5
165392: 53 37 00 00 ff 25        jump @11516 if a0 <u 4294901760
      :                          @11511
165398: 33 07 c0 22 03           a0 = 0x322c0
165403: 95 77 00 00 01           a0 = a0 + 0x10000
165408: 01                       fallthrough
      :                          @11512
165409: 82 78                    a1 = u64 [a0]
165411: c9 87 09                 a2 = a0 - a1
165414: ab 69 0f                 jump @11516 if a2 != s1
      :                          @11513
165417: c9 c8 09                 a2 = a1 - a5
165420: 01                       fallthrough
      :                          @11514
165421: 82 7a                    a3 = u64 [a0]
165423: ab 8a f2                 jump @11512 if a3 != a1
      :                          @11515
165426: 7b 79                    u64 [a0] = a2
165428: 01                       fallthrough
      :                          @11516
165429: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
165433: 51 08 30                 jump @11523 if a1 == 0
      :                          @11517
165436: 56 28 00 20 2d           jump @11523 if a1 >u 8192
      :                          @11518
165441: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
165445: 97 88 03                 a1 = a1 << 0x3
165448: 33 09 c0 22 03           a2 = 0x322c0
165453: 95 99 00 00 01           a2 = a2 + 0x10000
165458: 01                       fallthrough
      :                          @11519
165459: 82 9a                    a3 = u64 [a2]
165461: c9 a9 0b                 a4 = a2 - a3
165464: ab 7b 11                 jump @11523 if a4 != a0
      :                          @11520
165467: c9 8a 0b                 a4 = a3 - a1
165470: 01                       fallthrough
      :                          @11521
165471: 82 9c                    a5 = u64 [a2]
165473: ab ac f2                 jump @11519 if a5 != a3
      :                          @11522
165476: 7b 9b                    u64 [a2] = a4
165478: 33 06                    s1 = 0
165480: 01                       fallthrough
      :                          @11523
165481: 82 18 20 01              a1 = u64 [sp + 0x120]
165485: 52 08 06                 jump @11525 if a1 != 0
      :                          @11524
165488: 28 56 5b                 jump @12856
      :                          @11525
165491: 54 28 00 20 08           jump @11527 if a1 <=u 8192
      :                          @11526
165496: 28 4e 5b                 jump @12856
      :                          @11527
165499: 82 17 28 01              a0 = u64 [sp + 0x128]
165503: 97 88 03                 a1 = a1 << 0x3
165506: 33 09 c0 22 03           a2 = 0x322c0
165511: 95 99 00 00 01           a2 = a2 + 0x10000
165516: 01                       fallthrough
      :                          @11528
165517: 82 9a                    a3 = u64 [a2]
165519: c9 a9 0b                 a4 = a2 - a3
165522: aa 7b 06                 jump @11530 if a4 == a0
      :                          @11529
165525: 28 31 5b                 jump @12856
      :                          @11530
165528: c9 8a 0b                 a4 = a3 - a1
165531: 01                       fallthrough
      :                          @11531
165532: 82 9c                    a5 = u64 [a2]
165534: ab ac ef                 jump @11528 if a5 != a3
      :                          @11532
165537: 7b 9b                    u64 [a2] = a4
165539: 33 06                    s1 = 0
165541: 01                       fallthrough
      :                          @11533
165542: ab ac e7                 jump @11528 if a5 != a3
      :                          @11534
165545: 28 1d 5b                 jump @12856
      :                          @11535 [@dyn 1188]
165548: 3a 08 78 12 03           a1 = u64 [0x31278]
165553: 3a 02 60 11 03           t0 = u64 [0x31160]
165558: 97 89 0d                 a2 = a1 << 0xd
165561: d3 98 08                 a1 = a1 ^ a2
165564: 98 89 07                 a2 = a1 >> 0x7
165567: d3 98 08                 a1 = a1 ^ a2
165570: 97 89 11                 a2 = a1 << 0x11
165573: d3 98 08                 a1 = a1 ^ a2
165576: ca 28 09                 a2 = a1 * t0
165579: 3a 0a b0 11 03           a3 = u64 [0x311b0]
165584: 3e 08 78 12 03           u64 [0x31278] = a1
165589: 98 98 02                 a1 = a2 >> 0x2
165592: d6 a8 08                 a1 = a1 mulhu a3
165595: 98 88 02                 a1 = a1 >> 0x2
165598: 96 88 64                 a1 = a1 * 0x64
165601: c9 89 09                 a2 = a2 - a1
165604: 95 99 01                 a2 = a2 + 0x1
165607: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
165611: 49 21 20 01              u64 [sp + 288] = 0
165615: 49 21 28 01 08           u64 [sp + 296] = 0x8
165620: 49 21 30 01              u64 [sp + 304] = 0
165624: 49 21 e0 01              u64 [sp + 480] = 0
165628: 49 21 e8 01 08           u64 [sp + 488] = 0x8
165633: 49 21 f0 01              u64 [sp + 496] = 0
165637: 3a 08 78 12 03           a1 = u64 [0x31278]
165642: 97 89 0d                 a2 = a1 << 0xd
165645: d3 98 08                 a1 = a1 ^ a2
165648: 98 89 07                 a2 = a1 >> 0x7
165651: d3 98 08                 a1 = a1 ^ a2
165654: 97 89 11                 a2 = a1 << 0x11
165657: d3 89 09                 a2 = a2 ^ a1
165660: 3e 09 78 12 03           u64 [0x31278] = a2
165665: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
165669: 52 07 06                 jump @11537 if a0 != 0
      :                          @11536
165672: 28 b2 6c                 jump @13228
      :                          @11537
165675: 82 18 30 01              a1 = u64 [sp + 0x130]
165679: 82 1a 20 01              a3 = u64 [sp + 0x120]
165683: ca 29 09                 a2 = a2 * t0
165686: cd 79 06                 s1 = a2 %u a0
165689: 95 66 01                 s1 = s1 + 0x1
165692: 7b 12 70                 u64 [sp + 0x70] = t0
165695: ab a8 16                 jump @11540 if a1 != a3
      :                          @11538
165698: 95 17 20 01              a0 = sp + 0x120
165702: 50 20 4a 09 c1 cb fd     ra = 2378, jump @1581
      :                          @11539 [@dyn 1189]
165709: 82 12 70                 t0 = u64 [sp + 0x70]
165712: 82 18 30 01              a1 = u64 [sp + 0x130]
165716: 01                       fallthrough
      :                          @11540
165717: 82 17 28 01              a0 = u64 [sp + 0x128]
165721: 97 89 03                 a2 = a1 << 0x3
165724: c8 97 07                 a0 = a0 + a2
165727: 7b 76                    u64 [a0] = s1
165729: 95 88 01                 a1 = a1 + 0x1
165732: 7b 18 30 01              u64 [sp + 0x130] = a1
165736: 33 0c 78 12 03           a5 = 0x31278
165741: 3a 07 78 12 03           a0 = u64 [0x31278]
165746: 97 78 0d                 a1 = a0 << 0xd
165749: d3 87 07                 a0 = a0 ^ a1
165752: 98 78 07                 a1 = a0 >> 0x7
165755: d3 87 07                 a0 = a0 ^ a1
165758: 97 78 11                 a1 = a0 << 0x11
165761: d3 87 07                 a0 = a0 ^ a1
165764: ca 27 09                 a2 = a0 * t0
165767: 3a 08 68 11 03           a1 = u64 [0x31168]
165772: 3e 07 78 12 03           u64 [0x31278] = a0
165777: 98 97 03                 a0 = a2 >> 0x3
165780: d6 87 07                 a0 = a0 mulhu a1
165783: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
165787: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
165791: 98 77 04                 a0 = a0 >> 0x4
165794: 33 0b e8 03              a4 = 0x3e8
165798: ca b7 07                 a0 = a0 * a4
165801: c9 79 06                 s1 = a2 - a0
165804: ab a8 1b                 jump @11543 if a1 != a3
      :                          @11541
165807: 95 17 e0 01              a0 = sp + 0x1e0
165811: 50 20 4c 09 54 cb fd     ra = 2380, jump @1581
      :                          @11542 [@dyn 1190]
165818: 33 0c 78 12 03           a5 = 0x31278
165823: 82 12 70                 t0 = u64 [sp + 0x70]
165826: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
165830: 01                       fallthrough
      :                          @11543
165831: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
165835: 97 89 03                 a2 = a1 << 0x3
165838: c8 97 07                 a0 = a0 + a2
165841: 7b 76                    u64 [a0] = s1
165843: 95 88 01                 a1 = a1 + 0x1
165846: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
165850: 3a 07 78 12 03           a0 = u64 [0x31278]
165855: 97 78 0d                 a1 = a0 << 0xd
165858: d3 87 07                 a0 = a0 ^ a1
165861: 98 78 07                 a1 = a0 >> 0x7
165864: d3 87 07                 a0 = a0 ^ a1
165867: 97 78 11                 a1 = a0 << 0x11
165870: d3 87 07                 a0 = a0 ^ a1
165873: 3e 07 78 12 03           u64 [0x31278] = a0
165878: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
165882: 52 09 06                 jump @11545 if a2 != 0
      :                          @11544
165885: 28 dd 6b                 jump @13228
      :                          @11545
165888: 82 18 30 01              a1 = u64 [sp + 0x130]
165892: 82 1a 20 01              a3 = u64 [sp + 0x120]
165896: ca 27 07                 a0 = a0 * t0
165899: cd 97 06                 s1 = a0 %u a2
165902: 95 66 01                 s1 = s1 + 0x1
165905: ab a8 16                 jump @11548 if a1 != a3
      :                          @11546
165908: 95 17 20 01              a0 = sp + 0x120
165912: 50 20 4e 09 ef ca fd     ra = 2382, jump @1581
      :                          @11547 [@dyn 1191]
165919: 82 12 70                 t0 = u64 [sp + 0x70]
165922: 82 18 30 01              a1 = u64 [sp + 0x130]
165926: 01                       fallthrough
      :                          @11548
165927: 82 17 28 01              a0 = u64 [sp + 0x128]
165931: 97 89 03                 a2 = a1 << 0x3
165934: c8 97 07                 a0 = a0 + a2
165937: 7b 76                    u64 [a0] = s1
165939: 95 88 01                 a1 = a1 + 0x1
165942: 7b 18 30 01              u64 [sp + 0x130] = a1
165946: 33 0c 78 12 03           a5 = 0x31278
165951: 3a 07 78 12 03           a0 = u64 [0x31278]
165956: 97 78 0d                 a1 = a0 << 0xd
165959: d3 87 07                 a0 = a0 ^ a1
165962: 98 78 07                 a1 = a0 >> 0x7
165965: d3 87 07                 a0 = a0 ^ a1
165968: 97 78 11                 a1 = a0 << 0x11
165971: d3 87 07                 a0 = a0 ^ a1
165974: ca 27 09                 a2 = a0 * t0
165977: 3a 08 68 11 03           a1 = u64 [0x31168]
165982: 3e 07 78 12 03           u64 [0x31278] = a0
165987: 98 97 03                 a0 = a2 >> 0x3
165990: d6 87 07                 a0 = a0 mulhu a1
165993: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
165997: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
166001: 98 77 04                 a0 = a0 >> 0x4
166004: 33 0b e8 03              a4 = 0x3e8
166008: ca b7 07                 a0 = a0 * a4
166011: c9 79 06                 s1 = a2 - a0
166014: ab a8 1b                 jump @11551 if a1 != a3
      :                          @11549
166017: 95 17 e0 01              a0 = sp + 0x1e0
166021: 50 20 50 09 82 ca fd     ra = 2384, jump @1581
      :                          @11550 [@dyn 1192]
166028: 33 0c 78 12 03           a5 = 0x31278
166033: 82 12 70                 t0 = u64 [sp + 0x70]
166036: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
166040: 01                       fallthrough
      :                          @11551
166041: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
166045: 97 89 03                 a2 = a1 << 0x3
166048: c8 97 07                 a0 = a0 + a2
166051: 7b 76                    u64 [a0] = s1
166053: 95 88 01                 a1 = a1 + 0x1
166056: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
166060: 3a 07 78 12 03           a0 = u64 [0x31278]
166065: 97 78 0d                 a1 = a0 << 0xd
166068: d3 87 07                 a0 = a0 ^ a1
166071: 98 78 07                 a1 = a0 >> 0x7
166074: d3 87 07                 a0 = a0 ^ a1
166077: 97 78 11                 a1 = a0 << 0x11
166080: d3 87 07                 a0 = a0 ^ a1
166083: 3e 07 78 12 03           u64 [0x31278] = a0
166088: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
166092: 52 09 06                 jump @11553 if a2 != 0
      :                          @11552
166095: 28 0b 6b                 jump @13228
      :                          @11553
166098: 82 18 30 01              a1 = u64 [sp + 0x130]
166102: 82 1a 20 01              a3 = u64 [sp + 0x120]
166106: ca 27 07                 a0 = a0 * t0
166109: cd 97 06                 s1 = a0 %u a2
166112: 95 66 01                 s1 = s1 + 0x1
166115: ab a8 16                 jump @11556 if a1 != a3
      :                          @11554
166118: 95 17 20 01              a0 = sp + 0x120
166122: 50 20 52 09 1d ca fd     ra = 2386, jump @1581
      :                          @11555 [@dyn 1193]
166129: 82 12 70                 t0 = u64 [sp + 0x70]
166132: 82 18 30 01              a1 = u64 [sp + 0x130]
166136: 01                       fallthrough
      :                          @11556
166137: 82 17 28 01              a0 = u64 [sp + 0x128]
166141: 97 89 03                 a2 = a1 << 0x3
166144: c8 97 07                 a0 = a0 + a2
166147: 7b 76                    u64 [a0] = s1
166149: 95 88 01                 a1 = a1 + 0x1
166152: 7b 18 30 01              u64 [sp + 0x130] = a1
166156: 33 0c 78 12 03           a5 = 0x31278
166161: 3a 07 78 12 03           a0 = u64 [0x31278]
166166: 97 78 0d                 a1 = a0 << 0xd
166169: d3 87 07                 a0 = a0 ^ a1
166172: 98 78 07                 a1 = a0 >> 0x7
166175: d3 87 07                 a0 = a0 ^ a1
166178: 97 78 11                 a1 = a0 << 0x11
166181: d3 87 07                 a0 = a0 ^ a1
166184: ca 27 09                 a2 = a0 * t0
166187: 3a 08 68 11 03           a1 = u64 [0x31168]
166192: 3e 07 78 12 03           u64 [0x31278] = a0
166197: 98 97 03                 a0 = a2 >> 0x3
166200: d6 87 07                 a0 = a0 mulhu a1
166203: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
166207: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
166211: 98 77 04                 a0 = a0 >> 0x4
166214: 33 0b e8 03              a4 = 0x3e8
166218: ca b7 07                 a0 = a0 * a4
166221: c9 79 06                 s1 = a2 - a0
166224: ab a8 1b                 jump @11559 if a1 != a3
      :                          @11557
166227: 95 17 e0 01              a0 = sp + 0x1e0
166231: 50 20 54 09 b0 c9 fd     ra = 2388, jump @1581
      :                          @11558 [@dyn 1194]
166238: 33 0c 78 12 03           a5 = 0x31278
166243: 82 12 70                 t0 = u64 [sp + 0x70]
166246: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
166250: 01                       fallthrough
      :                          @11559
166251: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
166255: 97 89 03                 a2 = a1 << 0x3
166258: c8 97 07                 a0 = a0 + a2
166261: 7b 76                    u64 [a0] = s1
166263: 95 88 01                 a1 = a1 + 0x1
166266: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
166270: 3a 07 78 12 03           a0 = u64 [0x31278]
166275: 97 78 0d                 a1 = a0 << 0xd
166278: d3 87 07                 a0 = a0 ^ a1
166281: 98 78 07                 a1 = a0 >> 0x7
166284: d3 87 07                 a0 = a0 ^ a1
166287: 97 78 11                 a1 = a0 << 0x11
166290: d3 87 07                 a0 = a0 ^ a1
166293: 3e 07 78 12 03           u64 [0x31278] = a0
166298: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
166302: 52 09 06                 jump @11561 if a2 != 0
      :                          @11560
166305: 28 39 6a                 jump @13228
      :                          @11561
166308: 82 18 30 01              a1 = u64 [sp + 0x130]
166312: 82 1a 20 01              a3 = u64 [sp + 0x120]
166316: ca 27 07                 a0 = a0 * t0
166319: cd 97 06                 s1 = a0 %u a2
166322: 95 66 01                 s1 = s1 + 0x1
166325: ab a8 16                 jump @11564 if a1 != a3
      :                          @11562
166328: 95 17 20 01              a0 = sp + 0x120
166332: 50 20 56 09 4b c9 fd     ra = 2390, jump @1581
      :                          @11563 [@dyn 1195]
166339: 82 12 70                 t0 = u64 [sp + 0x70]
166342: 82 18 30 01              a1 = u64 [sp + 0x130]
166346: 01                       fallthrough
      :                          @11564
166347: 82 17 28 01              a0 = u64 [sp + 0x128]
166351: 97 89 03                 a2 = a1 << 0x3
166354: c8 97 07                 a0 = a0 + a2
166357: 7b 76                    u64 [a0] = s1
166359: 95 88 01                 a1 = a1 + 0x1
166362: 7b 18 30 01              u64 [sp + 0x130] = a1
166366: 33 0c 78 12 03           a5 = 0x31278
166371: 3a 07 78 12 03           a0 = u64 [0x31278]
166376: 97 78 0d                 a1 = a0 << 0xd
166379: d3 87 07                 a0 = a0 ^ a1
166382: 98 78 07                 a1 = a0 >> 0x7
166385: d3 87 07                 a0 = a0 ^ a1
166388: 97 78 11                 a1 = a0 << 0x11
166391: d3 87 07                 a0 = a0 ^ a1
166394: ca 27 09                 a2 = a0 * t0
166397: 3a 08 68 11 03           a1 = u64 [0x31168]
166402: 3e 07 78 12 03           u64 [0x31278] = a0
166407: 98 97 03                 a0 = a2 >> 0x3
166410: d6 87 07                 a0 = a0 mulhu a1
166413: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
166417: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
166421: 98 77 04                 a0 = a0 >> 0x4
166424: 33 0b e8 03              a4 = 0x3e8
166428: ca b7 07                 a0 = a0 * a4
166431: c9 79 06                 s1 = a2 - a0
166434: ab a8 1b                 jump @11567 if a1 != a3
      :                          @11565
166437: 95 17 e0 01              a0 = sp + 0x1e0
166441: 50 20 58 09 de c8 fd     ra = 2392, jump @1581
      :                          @11566 [@dyn 1196]
166448: 33 0c 78 12 03           a5 = 0x31278
166453: 82 12 70                 t0 = u64 [sp + 0x70]
166456: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
166460: 01                       fallthrough
      :                          @11567
166461: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
166465: 97 89 03                 a2 = a1 << 0x3
166468: c8 97 07                 a0 = a0 + a2
166471: 7b 76                    u64 [a0] = s1
166473: 95 88 01                 a1 = a1 + 0x1
166476: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
166480: 3a 07 78 12 03           a0 = u64 [0x31278]
166485: 97 78 0d                 a1 = a0 << 0xd
166488: d3 87 07                 a0 = a0 ^ a1
166491: 98 78 07                 a1 = a0 >> 0x7
166494: d3 87 07                 a0 = a0 ^ a1
166497: 97 78 11                 a1 = a0 << 0x11
166500: d3 87 07                 a0 = a0 ^ a1
166503: 3e 07 78 12 03           u64 [0x31278] = a0
166508: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
166512: 52 09 06                 jump @11569 if a2 != 0
      :                          @11568
166515: 28 67 69                 jump @13228
      :                          @11569
166518: 82 18 30 01              a1 = u64 [sp + 0x130]
166522: 82 1a 20 01              a3 = u64 [sp + 0x120]
166526: ca 27 07                 a0 = a0 * t0
166529: cd 97 06                 s1 = a0 %u a2
166532: 95 66 01                 s1 = s1 + 0x1
166535: ab a8 16                 jump @11572 if a1 != a3
      :                          @11570
166538: 95 17 20 01              a0 = sp + 0x120
166542: 50 20 5a 09 79 c8 fd     ra = 2394, jump @1581
      :                          @11571 [@dyn 1197]
166549: 82 12 70                 t0 = u64 [sp + 0x70]
166552: 82 18 30 01              a1 = u64 [sp + 0x130]
166556: 01                       fallthrough
      :                          @11572
166557: 82 17 28 01              a0 = u64 [sp + 0x128]
166561: 97 89 03                 a2 = a1 << 0x3
166564: c8 97 07                 a0 = a0 + a2
166567: 7b 76                    u64 [a0] = s1
166569: 95 88 01                 a1 = a1 + 0x1
166572: 7b 18 30 01              u64 [sp + 0x130] = a1
166576: 3a 08 78 12 03           a1 = u64 [0x31278]
166581: 97 89 0d                 a2 = a1 << 0xd
166584: d3 98 08                 a1 = a1 ^ a2
166587: 98 89 07                 a2 = a1 >> 0x7
166590: d3 98 08                 a1 = a1 ^ a2
166593: 97 89 11                 a2 = a1 << 0x11
166596: d3 98 08                 a1 = a1 ^ a2
166599: ca 28 09                 a2 = a1 * t0
166602: 3a 0a 68 11 03           a3 = u64 [0x31168]
166607: 3e 08 78 12 03           u64 [0x31278] = a1
166612: 98 97 03                 a0 = a2 >> 0x3
166615: d6 a7 07                 a0 = a0 mulhu a3
166618: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
166622: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
166626: 98 77 04                 a0 = a0 >> 0x4
166629: 33 0b e8 03              a4 = 0x3e8
166633: ca b7 07                 a0 = a0 * a4
166636: c9 79 06                 s1 = a2 - a0
166639: ab a8 13                 jump @11575 if a1 != a3
      :                          @11573
166642: 95 17 e0 01              a0 = sp + 0x1e0
166646: 50 20 5c 09 11 c8 fd     ra = 2396, jump @1581
      :                          @11574 [@dyn 1198]
166653: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
166657: 01                       fallthrough
      :                          @11575
166658: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
166662: 97 89 03                 a2 = a1 << 0x3
166665: c8 97 07                 a0 = a0 + a2
166668: 7b 76                    u64 [a0] = s1
166670: 95 8a 01                 a3 = a1 + 0x1
166673: 7b 1a f0 01              u64 [sp + 0x1f0] = a3
166677: 82 17 28 01              a0 = u64 [sp + 0x128]
166681: 82 18 30 01              a1 = u64 [sp + 0x130]
166685: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
166689: 82 1b b0 01              a4 = u64 [sp + 0x1b0]
166693: 50 20 5e 09 3d 2d fe     ra = 2398, jump @3400
      :                          @11576 [@dyn 1199]
166700: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
166704: 95 17 b0 01              a0 = sp + 0x1b0
166708: 7b 17 90 02              u64 [sp + 0x290] = a0
166712: 33 07 28 0c              a0 = 0xc28
166716: 7b 17 98 02              u64 [sp + 0x298] = a0
166720: 95 18 20 01              a1 = sp + 0x120
166724: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
166728: 33 08 20 02              a1 = 0x220
166732: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
166736: 95 19 e0 01              a2 = sp + 0x1e0
166740: 7b 19 b0 02              u64 [sp + 0x2b0] = a2
166744: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
166748: 95 18 c8 01              a1 = sp + 0x1c8
166752: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
166756: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
166760: 33 07 18 23 01           a0 = 0x12318
166765: 7b 17 38 02              u64 [sp + 0x238] = a0
166769: 49 21 40 02 04           u64 [sp + 576] = 0x4
166774: 49 21 58 02              u64 [sp + 600] = 0
166778: 95 18 90 02              a1 = sp + 0x290
166782: 7b 18 48 02              u64 [sp + 0x248] = a1
166786: 49 21 50 02 04           u64 [sp + 592] = 0x4
166791: 95 17 08 02              a0 = sp + 0x208
166795: 95 18 38 02              a1 = sp + 0x238
166799: 50 20 60 09 b0 c3 fd     ra = 2400, jump @1491
      :                          @11577 [@dyn 1200]
166806: 82 16 10 02              s1 = u64 [sp + 0x210]
166810: 82 1b 18 02              a4 = u64 [sp + 0x218]
166814: 82 17 08 02              a0 = u64 [sp + 0x208]
166818: 7b 17 70                 u64 [sp + 0x70] = a0
166821: 33 07 02                 a0 = 0x2
166824: 33 08                    a1 = 0
166826: 33 09                    a2 = 0
166828: 64 6a                    a3 = s1
166830: 33 00 62 09              ra = 0x962
166834: 0a 64                    ecalli 100 // 'log'
166836: 01                       fallthrough
      :                          @11578 [@dyn 1201]
166837: 82 1c 70                 a5 = u64 [sp + 0x70]
166840: 82 17 68                 a0 = u64 [sp + 0x68]
166843: c8 c7 07                 a0 = a0 + a5
166846: 53 37 00 00 ff 25        jump @11584 if a0 <u 4294901760
      :                          @11579
166852: 33 07 c0 22 03           a0 = 0x322c0
166857: 95 77 00 00 01           a0 = a0 + 0x10000
166862: 01                       fallthrough
      :                          @11580
166863: 82 78                    a1 = u64 [a0]
166865: c9 87 09                 a2 = a0 - a1
166868: ab 69 0f                 jump @11584 if a2 != s1
      :                          @11581
166871: c9 c8 09                 a2 = a1 - a5
166874: 01                       fallthrough
      :                          @11582
166875: 82 7a                    a3 = u64 [a0]
166877: ab 8a f2                 jump @11580 if a3 != a1
      :                          @11583
166880: 7b 79                    u64 [a0] = a2
166882: 01                       fallthrough
      :                          @11584
166883: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
166887: 51 08 30                 jump @11591 if a1 == 0
      :                          @11585
166890: 56 28 00 20 2d           jump @11591 if a1 >u 8192
      :                          @11586
166895: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
166899: 97 88 03                 a1 = a1 << 0x3
166902: 33 09 c0 22 03           a2 = 0x322c0
166907: 95 99 00 00 01           a2 = a2 + 0x10000
166912: 01                       fallthrough
      :                          @11587
166913: 82 9a                    a3 = u64 [a2]
166915: c9 a9 0b                 a4 = a2 - a3
166918: ab 7b 11                 jump @11591 if a4 != a0
      :                          @11588
166921: c9 8a 0b                 a4 = a3 - a1
166924: 01                       fallthrough
      :                          @11589
166925: 82 9c                    a5 = u64 [a2]
166927: ab ac f2                 jump @11587 if a5 != a3
      :                          @11590
166930: 7b 9b                    u64 [a2] = a4
166932: 33 06                    s1 = 0
166934: 01                       fallthrough
      :                          @11591
166935: 82 18 20 01              a1 = u64 [sp + 0x120]
166939: 52 08 06                 jump @11593 if a1 != 0
      :                          @11592
166942: 28 a8 55                 jump @12856
      :                          @11593
166945: 54 28 00 20 08           jump @11595 if a1 <=u 8192
      :                          @11594
166950: 28 a0 55                 jump @12856
      :                          @11595
166953: 82 17 28 01              a0 = u64 [sp + 0x128]
166957: 97 88 03                 a1 = a1 << 0x3
166960: 33 09 c0 22 03           a2 = 0x322c0
166965: 95 99 00 00 01           a2 = a2 + 0x10000
166970: 01                       fallthrough
      :                          @11596
166971: 82 9a                    a3 = u64 [a2]
166973: c9 a9 0b                 a4 = a2 - a3
166976: aa 7b 06                 jump @11598 if a4 == a0
      :                          @11597
166979: 28 83 55                 jump @12856
      :                          @11598
166982: c9 8a 0b                 a4 = a3 - a1
166985: 01                       fallthrough
      :                          @11599
166986: 82 9c                    a5 = u64 [a2]
166988: ab ac ef                 jump @11596 if a5 != a3
      :                          @11600
166991: 7b 9b                    u64 [a2] = a4
166993: 33 06                    s1 = 0
166995: 01                       fallthrough
      :                          @11601
166996: ab ac e7                 jump @11596 if a5 != a3
      :                          @11602
166999: 28 6f 55                 jump @12856
      :                          @11603 [@dyn 1202]
167002: 3a 08 78 12 03           a1 = u64 [0x31278]
167007: 97 89 0d                 a2 = a1 << 0xd
167010: d3 98 08                 a1 = a1 ^ a2
167013: 98 89 07                 a2 = a1 >> 0x7
167016: 3a 0a 60 11 03           a3 = u64 [0x31160]
167021: d3 98 08                 a1 = a1 ^ a2
167024: 97 89 11                 a2 = a1 << 0x11
167027: d3 98 08                 a1 = a1 ^ a2
167030: ca a8 09                 a2 = a1 * a3
167033: 3e 08 78 12 03           u64 [0x31278] = a1
167038: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
167048: d6 b9 08                 a1 = a2 mulhu a4
167051: 98 88 03                 a1 = a1 >> 0x3
167054: 33 0c 0a                 a5 = 0xa
167057: 3a 06 78 12 03           s1 = u64 [0x31278]
167062: ca c8 08                 a1 = a1 * a5
167065: c9 89 08                 a1 = a2 - a1
167068: 97 69 0d                 a2 = s1 << 0xd
167071: d3 96 06                 s1 = s1 ^ a2
167074: 98 69 07                 a2 = s1 >> 0x7
167077: d3 96 06                 s1 = s1 ^ a2
167080: 97 69 11                 a2 = s1 << 0x11
167083: d3 69 09                 a2 = a2 ^ s1
167086: ca a9 0a                 a3 = a2 * a3
167089: 3e 09 78 12 03           u64 [0x31278] = a2
167094: d6 ba 07                 a0 = a3 mulhu a4
167097: 98 77 03                 a0 = a0 >> 0x3
167100: ca c7 07                 a0 = a0 * a5
167103: c9 7a 06                 s1 = a3 - a0
167106: 95 17 20 01              a0 = sp + 0x120
167110: 50 20 66 09 b8 e7 fd     ra = 2406, jump @2169
      :                          @11604 [@dyn 1203]
167117: 95 17 e0 01              a0 = sp + 0x1e0
167121: 64 68                    a1 = s1
167123: 50 20 68 09 ab e7 fd     ra = 2408, jump @2169
      :                          @11605 [@dyn 1204]
167130: 82 17 28 01              a0 = u64 [sp + 0x128]
167134: 82 18 30 01              a1 = u64 [sp + 0x130]
167138: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
167142: 82 1a f0 01              a3 = u64 [sp + 0x1f0]
167146: 50 20 6a 09 de 2c fe     ra = 2410, jump @3437
      :                          @11606 [@dyn 1205]
167153: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
167157: 95 17 20 01              a0 = sp + 0x120
167161: 7b 17 90 02              u64 [sp + 0x290] = a0
167165: 33 07 18 02              a0 = 0x218
167169: 7b 17 98 02              u64 [sp + 0x298] = a0
167173: 95 18 e0 01              a1 = sp + 0x1e0
167177: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
167181: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
167185: 95 17 c8 01              a0 = sp + 0x1c8
167189: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
167193: 33 07 28 0c              a0 = 0xc28
167197: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
167201: 33 07 58 23 01           a0 = 0x12358
167206: 7b 17 38 02              u64 [sp + 0x238] = a0
167210: 49 21 40 02 03           u64 [sp + 576] = 0x3
167215: 49 21 58 02              u64 [sp + 600] = 0
167219: 95 18 90 02              a1 = sp + 0x290
167223: 7b 18 48 02              u64 [sp + 0x248] = a1
167227: 49 21 50 02 03           u64 [sp + 592] = 0x3
167232: 95 17 08 02              a0 = sp + 0x208
167236: 95 18 38 02              a1 = sp + 0x238
167240: 50 20 6c 09 f7 c1 fd     ra = 2412, jump @1491
      :                          @11607 [@dyn 1206]
167247: 82 16 10 02              s1 = u64 [sp + 0x210]
167251: 82 1b 18 02              a4 = u64 [sp + 0x218]
167255: 82 17 08 02              a0 = u64 [sp + 0x208]
167259: 7b 17 70                 u64 [sp + 0x70] = a0
167262: 33 07 02                 a0 = 0x2
167265: 33 08                    a1 = 0
167267: 33 09                    a2 = 0
167269: 64 6a                    a3 = s1
167271: 33 00 6e 09              ra = 0x96e
167275: 0a 64                    ecalli 100 // 'log'
167277: 01                       fallthrough
      :                          @11608 [@dyn 1207]
167278: 82 1c 70                 a5 = u64 [sp + 0x70]
167281: 82 17 68                 a0 = u64 [sp + 0x68]
167284: c8 c7 07                 a0 = a0 + a5
167287: 53 37 00 00 ff 25        jump @11614 if a0 <u 4294901760
      :                          @11609
167293: 33 07 c0 22 03           a0 = 0x322c0
167298: 95 77 00 00 01           a0 = a0 + 0x10000
167303: 01                       fallthrough
      :                          @11610
167304: 82 78                    a1 = u64 [a0]
167306: c9 87 09                 a2 = a0 - a1
167309: ab 69 0f                 jump @11614 if a2 != s1
      :                          @11611
167312: c9 c8 09                 a2 = a1 - a5
167315: 01                       fallthrough
      :                          @11612
167316: 82 7a                    a3 = u64 [a0]
167318: ab 8a f2                 jump @11610 if a3 != a1
      :                          @11613
167321: 7b 79                    u64 [a0] = a2
167323: 01                       fallthrough
      :                          @11614
167324: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
167328: 51 07 2e                 jump @11621 if a0 == 0
      :                          @11615
167331: 56 37 00 00 01 2b        jump @11621 if a0 >u 65536
      :                          @11616
167337: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
167341: 33 0a c0 22 03           a3 = 0x322c0
167346: 95 a9 00 00 01           a2 = a3 + 0x10000
167351: 01                       fallthrough
      :                          @11617
167352: 82 9a                    a3 = u64 [a2]
167354: c9 a9 0b                 a4 = a2 - a3
167357: ab 8b 11                 jump @11621 if a4 != a1
      :                          @11618
167360: c9 7a 0b                 a4 = a3 - a0
167363: 01                       fallthrough
      :                          @11619
167364: 82 9c                    a5 = u64 [a2]
167366: ab ac f2                 jump @11617 if a5 != a3
      :                          @11620
167369: 7b 9b                    u64 [a2] = a4
167371: 33 06                    s1 = 0
167373: 01                       fallthrough
      :                          @11621
167374: 82 17 20 01              a0 = u64 [sp + 0x120]
167378: 52 07 06                 jump @11623 if a0 != 0
      :                          @11622
167381: 28 f1 53                 jump @12856
      :                          @11623
167384: 54 37 00 00 01 09        jump @11625 if a0 <=u 65536
      :                          @11624
167390: 28 e8 53                 jump @12856
      :                          @11625
167393: 82 18 28 01              a1 = u64 [sp + 0x128]
167397: 33 0a c0 22 03           a3 = 0x322c0
167402: 95 a9 00 00 01           a2 = a3 + 0x10000
167407: 01                       fallthrough
      :                          @11626
167408: 82 9a                    a3 = u64 [a2]
167410: c9 a9 0b                 a4 = a2 - a3
167413: aa 8b 06                 jump @11628 if a4 == a1
      :                          @11627
167416: 28 ce 53                 jump @12856
      :                          @11628
167419: c9 7a 0b                 a4 = a3 - a0
167422: 01                       fallthrough
      :                          @11629
167423: 82 9c                    a5 = u64 [a2]
167425: ab ac ef                 jump @11626 if a5 != a3
      :                          @11630
167428: 7b 9b                    u64 [a2] = a4
167430: 33 06                    s1 = 0
167432: 01                       fallthrough
      :                          @11631
167433: ab ac e7                 jump @11626 if a5 != a3
      :                          @11632
167436: 28 ba 53                 jump @12856
      :                          @11633 [@dyn 1208]
167439: 3a 08 78 12 03           a1 = u64 [0x31278]
167444: 97 89 0d                 a2 = a1 << 0xd
167447: d3 98 08                 a1 = a1 ^ a2
167450: 98 89 07                 a2 = a1 >> 0x7
167453: d3 98 08                 a1 = a1 ^ a2
167456: 3a 09 60 11 03           a2 = u64 [0x31160]
167461: 97 8a 11                 a3 = a1 << 0x11
167464: d3 a8 08                 a1 = a1 ^ a3
167467: ca 98 09                 a2 = a1 * a2
167470: 3e 08 78 12 03           u64 [0x31278] = a1
167475: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
167485: d6 79 07                 a0 = a2 mulhu a0
167488: 98 77 04                 a0 = a0 >> 0x4
167491: 96 77 14                 a0 = a0 * 0x14
167494: c9 79 08                 a1 = a2 - a0
167497: 95 17 e0 01              a0 = sp + 0x1e0
167501: 95 16 e0 01              s1 = sp + 0x1e0
167505: 50 20 72 09 71 e5 fd     ra = 2418, jump @2157
      :                          @11634 [@dyn 1209]
167512: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
167516: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
167520: 50 20 74 09 dc 2d fe     ra = 2420, jump @3503
      :                          @11635 [@dyn 1210]
167527: 7b 17 20 01              u64 [sp + 0x120] = a0
167531: 7b 16 38 02              u64 [sp + 0x238] = s1
167535: 33 07 20 02              a0 = 0x220
167539: 7b 17 40 02              u64 [sp + 0x240] = a0
167543: 95 17 20 01              a0 = sp + 0x120
167547: 7b 17 48 02              u64 [sp + 0x248] = a0
167551: 33 07 28 0c              a0 = 0xc28
167555: 7b 17 50 02              u64 [sp + 0x250] = a0
167559: 33 07 98 23 01           a0 = 0x12398
167564: 7b 17 90 02              u64 [sp + 0x290] = a0
167568: 49 21 98 02 02           u64 [sp + 664] = 0x2
167573: 49 21 b0 02              u64 [sp + 688] = 0
167577: 95 18 38 02              a1 = sp + 0x238
167581: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
167585: 49 21 a8 02 02           u64 [sp + 680] = 0x2
167590: 95 17 08 02              a0 = sp + 0x208
167594: 95 18 90 02              a1 = sp + 0x290
167598: 50 20 76 09 91 c0 fd     ra = 2422, jump @1491
      :                          @11636 [@dyn 1211]
167605: 82 16 10 02              s1 = u64 [sp + 0x210]
167609: 82 1b 18 02              a4 = u64 [sp + 0x218]
167613: 82 17 08 02              a0 = u64 [sp + 0x208]
167617: 7b 17 70                 u64 [sp + 0x70] = a0
167620: 33 07 02                 a0 = 0x2
167623: 33 08                    a1 = 0
167625: 33 09                    a2 = 0
167627: 64 6a                    a3 = s1
167629: 33 00 78 09              ra = 0x978
167633: 0a 64                    ecalli 100 // 'log'
167635: 01                       fallthrough
      :                          @11637 [@dyn 1212]
167636: 82 1c 70                 a5 = u64 [sp + 0x70]
167639: 82 17 68                 a0 = u64 [sp + 0x68]
167642: c8 c7 07                 a0 = a0 + a5
167645: 53 37 00 00 ff 25        jump @11643 if a0 <u 4294901760
      :                          @11638
167651: 33 07 c0 22 03           a0 = 0x322c0
167656: 95 77 00 00 01           a0 = a0 + 0x10000
167661: 01                       fallthrough
      :                          @11639
167662: 82 78                    a1 = u64 [a0]
167664: c9 87 09                 a2 = a0 - a1
167667: ab 69 0f                 jump @11643 if a2 != s1
      :                          @11640
167670: c9 c8 09                 a2 = a1 - a5
167673: 01                       fallthrough
      :                          @11641
167674: 82 7a                    a3 = u64 [a0]
167676: ab 8a f2                 jump @11639 if a3 != a1
      :                          @11642
167679: 7b 79                    u64 [a0] = a2
167681: 01                       fallthrough
      :                          @11643
167682: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
167686: 52 08 06                 jump @11645 if a1 != 0
      :                          @11644
167689: 28 bd 52                 jump @12856
      :                          @11645
167692: 54 28 00 20 08           jump @11647 if a1 <=u 8192
      :                          @11646
167697: 28 b5 52                 jump @12856
      :                          @11647
167700: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
167704: 97 88 03                 a1 = a1 << 0x3
167707: 33 09 c0 22 03           a2 = 0x322c0
167712: 95 99 00 00 01           a2 = a2 + 0x10000
167717: 01                       fallthrough
      :                          @11648
167718: 82 9a                    a3 = u64 [a2]
167720: c9 a9 0b                 a4 = a2 - a3
167723: aa 7b 06                 jump @11650 if a4 == a0
      :                          @11649
167726: 28 98 52                 jump @12856
      :                          @11650
167729: c9 8a 0b                 a4 = a3 - a1
167732: 01                       fallthrough
      :                          @11651
167733: 82 9c                    a5 = u64 [a2]
167735: ab ac ef                 jump @11648 if a5 != a3
      :                          @11652
167738: 7b 9b                    u64 [a2] = a4
167740: 33 06                    s1 = 0
167742: 01                       fallthrough
      :                          @11653
167743: ab ac e7                 jump @11648 if a5 != a3
      :                          @11654
167746: 28 84 52                 jump @12856
      :                          @11655 [@dyn 1213]
167749: 3a 08 78 12 03           a1 = u64 [0x31278]
167754: 97 89 0d                 a2 = a1 << 0xd
167757: d3 98 08                 a1 = a1 ^ a2
167760: 98 89 07                 a2 = a1 >> 0x7
167763: d3 98 08                 a1 = a1 ^ a2
167766: 97 89 11                 a2 = a1 << 0x11
167769: d3 89 09                 a2 = a2 ^ a1
167772: 97 8a 02                 a3 = a1 << 0x2
167775: 3e 09 78 12 03           u64 [0x31278] = a2
167780: 3a 09 78 12 03           a2 = u64 [0x31278]
167785: c8 a8 08                 a1 = a1 + a3
167788: 84 88 07                 a1 = a1 & 0x7
167791: 97 9a 0d                 a3 = a2 << 0xd
167794: d3 a9 09                 a2 = a2 ^ a3
167797: 98 9a 07                 a3 = a2 >> 0x7
167800: d3 a9 09                 a2 = a2 ^ a3
167803: 97 9a 11                 a3 = a2 << 0x11
167806: d3 9a 0a                 a3 = a3 ^ a2
167809: 97 9b 02                 a4 = a2 << 0x2
167812: c8 b9 09                 a2 = a2 + a4
167815: 3e 0a 78 12 03           u64 [0x31278] = a3
167820: 84 96 07                 s1 = a2 & 0x7
167823: 95 17 b0 01              a0 = sp + 0x1b0
167827: 50 20 7c 09 eb e4 fd     ra = 2428, jump @2169
      :                          @11656 [@dyn 1214]
167834: 95 17 c8 01              a0 = sp + 0x1c8
167838: 64 68                    a1 = s1
167840: 50 20 7e 09 de e4 fd     ra = 2430, jump @2169
      :                          @11657 [@dyn 1215]
167847: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
167851: 7b 18 70                 u64 [sp + 0x70] = a1
167854: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
167858: 7b 19 60                 u64 [sp + 0x60] = a2
167861: 95 17 e0 01              a0 = sp + 0x1e0
167865: 50 20 80 09 5b 71        ra = 2432, jump @13495
      :                          @11658 [@dyn 1216]
167871: 82 16 d0 01              s1 = u64 [sp + 0x1d0]
167875: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
167879: 7b 19 58                 u64 [sp + 0x58] = a2
167882: 95 17 08 02              a0 = sp + 0x208
167886: 64 68                    a1 = s1
167888: 50 20 82 09 44 71        ra = 2434, jump @13495
      :                          @11659 [@dyn 1217]
167894: 82 17 70                 a0 = u64 [sp + 0x70]
167897: 82 18 60                 a1 = u64 [sp + 0x60]
167900: 7b 16 60                 u64 [sp + 0x60] = s1
167903: 64 69                    a2 = s1
167905: 82 1a 58                 a3 = u64 [sp + 0x58]
167908: 50 20 84 09 9d 2d fe     ra = 2436, jump @3540
      :                          @11660 [@dyn 1218]
167915: 7b 17 10 01              u64 [sp + 0x110] = a0
167919: 95 17 e0 01              a0 = sp + 0x1e0
167923: 7b 17 90 02              u64 [sp + 0x290] = a0
167927: 33 07 48 02              a0 = 0x248
167931: 7b 17 98 02              u64 [sp + 0x298] = a0
167935: 95 18 08 02              a1 = sp + 0x208
167939: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
167943: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
167947: 95 17 10 01              a0 = sp + 0x110
167951: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
167955: 33 07 28 0c              a0 = 0xc28
167959: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
167963: 33 07 b8 23 01           a0 = 0x123b8
167968: 7b 17 38 02              u64 [sp + 0x238] = a0
167972: 49 21 40 02 03           u64 [sp + 576] = 0x3
167977: 49 21 58 02              u64 [sp + 600] = 0
167981: 95 18 90 02              a1 = sp + 0x290
167985: 7b 18 48 02              u64 [sp + 0x248] = a1
167989: 49 21 50 02 03           u64 [sp + 592] = 0x3
167994: 95 17 20 01              a0 = sp + 0x120
167998: 95 18 38 02              a1 = sp + 0x238
168002: 50 20 86 09 fd be fd     ra = 2438, jump @1491
      :                          @11661 [@dyn 1219]
168009: 82 18 08 02              a1 = u64 [sp + 0x208]
168013: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
168023: d4 78 09                 a2 = a1 | a0
168026: aa 79 06                 jump @11663 if a2 == a0
      :                          @11662
168029: 28 ab 60                 jump @13102
      :                          @11663
168032: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
168036: d4 78 09                 a2 = a1 | a0
168039: aa 79 06                 jump @11665 if a2 == a0
      :                          @11664
168042: 28 d5 60                 jump @13112
      :                          @11665
168045: 82 16 28 01              s1 = u64 [sp + 0x128]
168049: 82 1b 30 01              a4 = u64 [sp + 0x130]
168053: 82 17 20 01              a0 = u64 [sp + 0x120]
168057: 7b 17 58                 u64 [sp + 0x58] = a0
168060: 33 07 02                 a0 = 0x2
168063: 33 08                    a1 = 0
168065: 33 09                    a2 = 0
168067: 64 6a                    a3 = s1
168069: 33 00 88 09              ra = 0x988
168073: 0a 64                    ecalli 100 // 'log'
168075: 01                       fallthrough
      :                          @11666 [@dyn 1220]
168076: 82 17 58                 a0 = u64 [sp + 0x58]
168079: 82 18 68                 a1 = u64 [sp + 0x68]
168082: c8 78 08                 a1 = a1 + a0
168085: 33 03 00 00 ff           t1 = 0xffffffffffff0000
168090: ac 38 24                 jump @11672 if a1 <u t1
      :                          @11667
168093: 33 08 c0 22 03           a1 = 0x322c0
168098: 95 88 00 00 01           a1 = a1 + 0x10000
168103: 01                       fallthrough
      :                          @11668
168104: 82 89                    a2 = u64 [a1]
168106: c9 98 0a                 a3 = a1 - a2
168109: ab 6a 11                 jump @11672 if a3 != s1
      :                          @11669
168112: c9 79 0a                 a3 = a2 - a0
168115: 01                       fallthrough
      :                          @11670
168116: 82 8b                    a4 = u64 [a1]
168118: ab 9b f2                 jump @11668 if a4 != a2
      :                          @11671
168121: 7b 8a                    u64 [a1] = a3
168123: 33 0c                    a5 = 0
168125: 01                       fallthrough
      :                          @11672
168126: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
168130: 82 19 68                 a2 = u64 [sp + 0x68]
168133: c8 89 09                 a2 = a2 + a1
168136: 82 12 70                 t0 = u64 [sp + 0x70]
168139: 82 16 60                 s1 = u64 [sp + 0x60]
168142: ac 39 24                 jump @11678 if a2 <u t1
      :                          @11673
168145: 33 07 c0 22 03           a0 = 0x322c0
168150: 95 77 00 00 01           a0 = a0 + 0x10000
168155: 01                       fallthrough
      :                          @11674
168156: 82 79                    a2 = u64 [a0]
168158: c9 97 0a                 a3 = a0 - a2
168161: ab 6a 11                 jump @11678 if a3 != s1
      :                          @11675
168164: c9 89 0a                 a3 = a2 - a1
168167: 01                       fallthrough
      :                          @11676
168168: 82 7b                    a4 = u64 [a0]
168170: ab 9b f2                 jump @11674 if a4 != a2
      :                          @11677
168173: 7b 7a                    u64 [a0] = a3
168175: 33 0c                    a5 = 0
168177: 01                       fallthrough
      :                          @11678
168178: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
168182: 82 18 68                 a1 = u64 [sp + 0x68]
168185: c8 78 08                 a1 = a1 + a0
168188: 55 38 00 00 ff 09        jump @11680 if a1 >=u 4294901760
      :                          @11679
168194: 28 c4 50                 jump @12856
      :                          @11680
168197: 33 08 c0 22 03           a1 = 0x322c0
168202: 95 88 00 00 01           a1 = a1 + 0x10000
168207: 01                       fallthrough
      :                          @11681
168208: 82 89                    a2 = u64 [a1]
168210: c9 98 0a                 a3 = a1 - a2
168213: aa 2a 06                 jump @11683 if a3 == t0
      :                          @11682
168216: 28 ae 50                 jump @12856
      :                          @11683
168219: c9 79 0a                 a3 = a2 - a0
168222: 01                       fallthrough
      :                          @11684
168223: 82 8b                    a4 = u64 [a1]
168225: ab 9b ef                 jump @11681 if a4 != a2
      :                          @11685
168228: 7b 8a                    u64 [a1] = a3
168230: 33 0c                    a5 = 0
168232: 01                       fallthrough
      :                          @11686
168233: ab 9b e7                 jump @11681 if a4 != a2
      :                          @11687
168236: 28 9a 50                 jump @12856
      :                          @11688 [@dyn 1221]
168239: 3a 08 78 12 03           a1 = u64 [0x31278]
168244: 97 89 0d                 a2 = a1 << 0xd
168247: d3 98 08                 a1 = a1 ^ a2
168250: 98 89 07                 a2 = a1 >> 0x7
168253: d3 98 08                 a1 = a1 ^ a2
168256: 97 89 11                 a2 = a1 << 0x11
168259: d3 89 09                 a2 = a2 ^ a1
168262: 97 8a 02                 a3 = a1 << 0x2
168265: 3e 09 78 12 03           u64 [0x31278] = a2
168270: 3a 09 78 12 03           a2 = u64 [0x31278]
168275: c8 a8 08                 a1 = a1 + a3
168278: 84 88 07                 a1 = a1 & 0x7
168281: 97 9a 0d                 a3 = a2 << 0xd
168284: d3 a9 09                 a2 = a2 ^ a3
168287: 98 9a 07                 a3 = a2 >> 0x7
168290: d3 a9 09                 a2 = a2 ^ a3
168293: 97 9a 11                 a3 = a2 << 0x11
168296: d3 9a 0a                 a3 = a3 ^ a2
168299: 97 9b 02                 a4 = a2 << 0x2
168302: c8 b9 09                 a2 = a2 + a4
168305: 3e 0a 78 12 03           u64 [0x31278] = a3
168310: 84 96 07                 s1 = a2 & 0x7
168313: 95 17 b0 01              a0 = sp + 0x1b0
168317: 50 20 8c 09 01 e3 fd     ra = 2444, jump @2169
      :                          @11689 [@dyn 1222]
168324: 95 17 c8 01              a0 = sp + 0x1c8
168328: 64 68                    a1 = s1
168330: 50 20 8e 09 f4 e2 fd     ra = 2446, jump @2169
      :                          @11690 [@dyn 1223]
168337: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
168341: 7b 18 70                 u64 [sp + 0x70] = a1
168344: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
168348: 7b 19 60                 u64 [sp + 0x60] = a2
168351: 95 17 e0 01              a0 = sp + 0x1e0
168355: 50 20 90 09 71 6f        ra = 2448, jump @13495
      :                          @11691 [@dyn 1224]
168361: 82 16 d0 01              s1 = u64 [sp + 0x1d0]
168365: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
168369: 7b 19 58                 u64 [sp + 0x58] = a2
168372: 95 17 08 02              a0 = sp + 0x208
168376: 64 68                    a1 = s1
168378: 50 20 92 09 5a 6f        ra = 2450, jump @13495
      :                          @11692 [@dyn 1225]
168384: 82 17 70                 a0 = u64 [sp + 0x70]
168387: 82 18 60                 a1 = u64 [sp + 0x60]
168390: 7b 16 60                 u64 [sp + 0x60] = s1
168393: 64 69                    a2 = s1
168395: 82 1a 58                 a3 = u64 [sp + 0x58]
168398: 50 20 94 09 68 2e fe     ra = 2452, jump @3610
      :                          @11693 [@dyn 1226]
168405: 7b 17 10 01              u64 [sp + 0x110] = a0
168409: 95 17 e0 01              a0 = sp + 0x1e0
168413: 7b 17 90 02              u64 [sp + 0x290] = a0
168417: 33 07 48 02              a0 = 0x248
168421: 7b 17 98 02              u64 [sp + 0x298] = a0
168425: 95 18 08 02              a1 = sp + 0x208
168429: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
168433: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
168437: 95 17 10 01              a0 = sp + 0x110
168441: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
168445: 33 07 28 0c              a0 = 0xc28
168449: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
168453: 33 07 00 24 01           a0 = 0x12400
168458: 7b 17 38 02              u64 [sp + 0x238] = a0
168462: 49 21 40 02 03           u64 [sp + 576] = 0x3
168467: 49 21 58 02              u64 [sp + 600] = 0
168471: 95 18 90 02              a1 = sp + 0x290
168475: 7b 18 48 02              u64 [sp + 0x248] = a1
168479: 49 21 50 02 03           u64 [sp + 592] = 0x3
168484: 95 17 20 01              a0 = sp + 0x120
168488: 95 18 38 02              a1 = sp + 0x238
168492: 50 20 96 09 13 bd fd     ra = 2454, jump @1491
      :                          @11694 [@dyn 1227]
168499: 82 18 08 02              a1 = u64 [sp + 0x208]
168503: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
168513: d4 78 09                 a2 = a1 | a0
168516: aa 79 06                 jump @11696 if a2 == a0
      :                          @11695
168519: 28 2f 5f                 jump @13122
      :                          @11696
168522: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
168526: d4 78 09                 a2 = a1 | a0
168529: aa 79 06                 jump @11698 if a2 == a0
      :                          @11697
168532: 28 59 5f                 jump @13132
      :                          @11698
168535: 82 16 28 01              s1 = u64 [sp + 0x128]
168539: 82 1b 30 01              a4 = u64 [sp + 0x130]
168543: 82 17 20 01              a0 = u64 [sp + 0x120]
168547: 7b 17 58                 u64 [sp + 0x58] = a0
168550: 33 07 02                 a0 = 0x2
168553: 33 08                    a1 = 0
168555: 33 09                    a2 = 0
168557: 64 6a                    a3 = s1
168559: 33 00 98 09              ra = 0x998
168563: 0a 64                    ecalli 100 // 'log'
168565: 01                       fallthrough
      :                          @11699 [@dyn 1228]
168566: 82 17 58                 a0 = u64 [sp + 0x58]
168569: 82 18 68                 a1 = u64 [sp + 0x68]
168572: c8 78 08                 a1 = a1 + a0
168575: 33 03 00 00 ff           t1 = 0xffffffffffff0000
168580: ac 38 24                 jump @11705 if a1 <u t1
      :                          @11700
168583: 33 08 c0 22 03           a1 = 0x322c0
168588: 95 88 00 00 01           a1 = a1 + 0x10000
168593: 01                       fallthrough
      :                          @11701
168594: 82 89                    a2 = u64 [a1]
168596: c9 98 0a                 a3 = a1 - a2
168599: ab 6a 11                 jump @11705 if a3 != s1
      :                          @11702
168602: c9 79 0a                 a3 = a2 - a0
168605: 01                       fallthrough
      :                          @11703
168606: 82 8b                    a4 = u64 [a1]
168608: ab 9b f2                 jump @11701 if a4 != a2
      :                          @11704
168611: 7b 8a                    u64 [a1] = a3
168613: 33 0c                    a5 = 0
168615: 01                       fallthrough
      :                          @11705
168616: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
168620: 82 19 68                 a2 = u64 [sp + 0x68]
168623: c8 89 09                 a2 = a2 + a1
168626: 82 12 70                 t0 = u64 [sp + 0x70]
168629: 82 16 60                 s1 = u64 [sp + 0x60]
168632: ac 39 24                 jump @11711 if a2 <u t1
      :                          @11706
168635: 33 07 c0 22 03           a0 = 0x322c0
168640: 95 77 00 00 01           a0 = a0 + 0x10000
168645: 01                       fallthrough
      :                          @11707
168646: 82 79                    a2 = u64 [a0]
168648: c9 97 0a                 a3 = a0 - a2
168651: ab 6a 11                 jump @11711 if a3 != s1
      :                          @11708
168654: c9 89 0a                 a3 = a2 - a1
168657: 01                       fallthrough
      :                          @11709
168658: 82 7b                    a4 = u64 [a0]
168660: ab 9b f2                 jump @11707 if a4 != a2
      :                          @11710
168663: 7b 7a                    u64 [a0] = a3
168665: 33 0c                    a5 = 0
168667: 01                       fallthrough
      :                          @11711
168668: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
168672: 82 18 68                 a1 = u64 [sp + 0x68]
168675: c8 78 08                 a1 = a1 + a0
168678: 55 38 00 00 ff 09        jump @11713 if a1 >=u 4294901760
      :                          @11712
168684: 28 da 4e                 jump @12856
      :                          @11713
168687: 33 08 c0 22 03           a1 = 0x322c0
168692: 95 88 00 00 01           a1 = a1 + 0x10000
168697: 01                       fallthrough
      :                          @11714
168698: 82 89                    a2 = u64 [a1]
168700: c9 98 0a                 a3 = a1 - a2
168703: aa 2a 06                 jump @11716 if a3 == t0
      :                          @11715
168706: 28 c4 4e                 jump @12856
      :                          @11716
168709: c9 79 0a                 a3 = a2 - a0
168712: 01                       fallthrough
      :                          @11717
168713: 82 8b                    a4 = u64 [a1]
168715: ab 9b ef                 jump @11714 if a4 != a2
      :                          @11718
168718: 7b 8a                    u64 [a1] = a3
168720: 33 0c                    a5 = 0
168722: 01                       fallthrough
      :                          @11719
168723: ab 9b e7                 jump @11714 if a4 != a2
      :                          @11720
168726: 28 b0 4e                 jump @12856
      :                          @11721 [@dyn 1229]
168729: 3a 08 78 12 03           a1 = u64 [0x31278]
168734: 97 89 0d                 a2 = a1 << 0xd
168737: d3 98 08                 a1 = a1 ^ a2
168740: 98 89 07                 a2 = a1 >> 0x7
168743: d3 98 08                 a1 = a1 ^ a2
168746: 3a 09 60 11 03           a2 = u64 [0x31160]
168751: 97 8a 11                 a3 = a1 << 0x11
168754: d3 a8 08                 a1 = a1 ^ a3
168757: ca 98 09                 a2 = a1 * a2
168760: 3e 08 78 12 03           u64 [0x31278] = a1
168765: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
168775: d6 79 07                 a0 = a2 mulhu a0
168778: 98 78 02                 a1 = a0 >> 0x2
168781: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
168784: c8 87 07                 a0 = a0 + a1
168787: c9 79 09                 a2 = a2 - a0
168790: 95 99 02                 a2 = a2 + 0x2
168793: 49 21 98 01              u64 [sp + 408] = 0
168797: 7b 19 a0 01              u64 [sp + 0x1a0] = a2
168801: 46 21 a8 01              u8 [sp + 424] = 0
168805: 95 17 e0 01              a0 = sp + 0x1e0
168809: 95 18 98 01              a1 = sp + 0x198
168813: 95 16 e0 01              s1 = sp + 0x1e0
168817: 50 20 9c 09 ad ee fd     ra = 2460, jump @2290
      :                          @11722 [@dyn 1230]
168824: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
168828: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
168832: 50 20 9e 09 3d 30 fe     ra = 2462, jump @3694
      :                          @11723 [@dyn 1231]
168839: 7b 17 20 01              u64 [sp + 0x120] = a0
168843: 7b 16 38 02              u64 [sp + 0x238] = s1
168847: 33 07 20 02              a0 = 0x220
168851: 7b 17 40 02              u64 [sp + 0x240] = a0
168855: 95 17 20 01              a0 = sp + 0x120
168859: 7b 17 48 02              u64 [sp + 0x248] = a0
168863: 33 07 28 0c              a0 = 0xc28
168867: 7b 17 50 02              u64 [sp + 0x250] = a0
168871: 33 07 48 24 01           a0 = 0x12448
168876: 7b 17 90 02              u64 [sp + 0x290] = a0
168880: 49 21 98 02 02           u64 [sp + 664] = 0x2
168885: 49 21 b0 02              u64 [sp + 688] = 0
168889: 95 18 38 02              a1 = sp + 0x238
168893: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
168897: 49 21 a8 02 02           u64 [sp + 680] = 0x2
168902: 95 17 08 02              a0 = sp + 0x208
168906: 95 18 90 02              a1 = sp + 0x290
168910: 50 20 a0 09 71 bb fd     ra = 2464, jump @1491
      :                          @11724 [@dyn 1232]
168917: 82 16 10 02              s1 = u64 [sp + 0x210]
168921: 82 1b 18 02              a4 = u64 [sp + 0x218]
168925: 82 17 08 02              a0 = u64 [sp + 0x208]
168929: 7b 17 70                 u64 [sp + 0x70] = a0
168932: 33 07 02                 a0 = 0x2
168935: 33 08                    a1 = 0
168937: 33 09                    a2 = 0
168939: 64 6a                    a3 = s1
168941: 33 00 a2 09              ra = 0x9a2
168945: 0a 64                    ecalli 100 // 'log'
168947: 01                       fallthrough
      :                          @11725 [@dyn 1233]
168948: 82 1c 70                 a5 = u64 [sp + 0x70]
168951: 82 17 68                 a0 = u64 [sp + 0x68]
168954: c8 c7 07                 a0 = a0 + a5
168957: 53 37 00 00 ff 25        jump @11731 if a0 <u 4294901760
      :                          @11726
168963: 33 07 c0 22 03           a0 = 0x322c0
168968: 95 77 00 00 01           a0 = a0 + 0x10000
168973: 01                       fallthrough
      :                          @11727
168974: 82 78                    a1 = u64 [a0]
168976: c9 87 09                 a2 = a0 - a1
168979: ab 69 0f                 jump @11731 if a2 != s1
      :                          @11728
168982: c9 c8 09                 a2 = a1 - a5
168985: 01                       fallthrough
      :                          @11729
168986: 82 7a                    a3 = u64 [a0]
168988: ab 8a f2                 jump @11727 if a3 != a1
      :                          @11730
168991: 7b 79                    u64 [a0] = a2
168993: 01                       fallthrough
      :                          @11731
168994: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
168998: 52 08 06                 jump @11733 if a1 != 0
      :                          @11732
169001: 28 9d 4d                 jump @12856
      :                          @11733
169004: 54 28 00 20 08           jump @11735 if a1 <=u 8192
      :                          @11734
169009: 28 95 4d                 jump @12856
      :                          @11735
169012: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
169016: 97 88 03                 a1 = a1 << 0x3
169019: 33 09 c0 22 03           a2 = 0x322c0
169024: 95 99 00 00 01           a2 = a2 + 0x10000
169029: 01                       fallthrough
      :                          @11736
169030: 82 9a                    a3 = u64 [a2]
169032: c9 a9 0b                 a4 = a2 - a3
169035: aa 7b 06                 jump @11738 if a4 == a0
      :                          @11737
169038: 28 78 4d                 jump @12856
      :                          @11738
169041: c9 8a 0b                 a4 = a3 - a1
169044: 01                       fallthrough
      :                          @11739
169045: 82 9c                    a5 = u64 [a2]
169047: ab ac ef                 jump @11736 if a5 != a3
      :                          @11740
169050: 7b 9b                    u64 [a2] = a4
169052: 33 06                    s1 = 0
169054: 01                       fallthrough
      :                          @11741
169055: ab ac e7                 jump @11736 if a5 != a3
      :                          @11742
169058: 28 64 4d                 jump @12856
      :                          @11743 [@dyn 1234]
169061: 3a 08 78 12 03           a1 = u64 [0x31278]
169066: 97 89 0d                 a2 = a1 << 0xd
169069: d3 98 08                 a1 = a1 ^ a2
169072: 98 89 07                 a2 = a1 >> 0x7
169075: d3 98 08                 a1 = a1 ^ a2
169078: 3a 09 60 11 03           a2 = u64 [0x31160]
169083: 97 8a 11                 a3 = a1 << 0x11
169086: d3 a8 08                 a1 = a1 ^ a3
169089: ca 98 09                 a2 = a1 * a2
169092: 3e 08 78 12 03           u64 [0x31278] = a1
169097: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
169107: d6 79 07                 a0 = a2 mulhu a0
169110: 98 78 02                 a1 = a0 >> 0x2
169113: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
169116: c8 87 07                 a0 = a0 + a1
169119: c9 79 08                 a1 = a2 - a0
169122: 95 88 01                 a1 = a1 + 0x1
169125: 95 17 e0 01              a0 = sp + 0x1e0
169129: 95 16 e0 01              s1 = sp + 0x1e0
169133: 50 20 a6 09 15 df fd     ra = 2470, jump @2157
      :                          @11744 [@dyn 1235]
169140: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
169144: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
169148: 50 20 a8 09 8f 33 fe     ra = 2472, jump @3781
      :                          @11745 [@dyn 1236]
169155: 7b 17 20 01              u64 [sp + 0x120] = a0
169159: 7b 16 38 02              u64 [sp + 0x238] = s1
169163: 33 07 20 02              a0 = 0x220
169167: 7b 17 40 02              u64 [sp + 0x240] = a0
169171: 95 17 20 01              a0 = sp + 0x120
169175: 7b 17 48 02              u64 [sp + 0x248] = a0
169179: 33 07 28 0c              a0 = 0xc28
169183: 7b 17 50 02              u64 [sp + 0x250] = a0
169187: 33 07 80 24 01           a0 = 0x12480
169192: 7b 17 90 02              u64 [sp + 0x290] = a0
169196: 49 21 98 02 02           u64 [sp + 664] = 0x2
169201: 49 21 b0 02              u64 [sp + 688] = 0
169205: 95 18 38 02              a1 = sp + 0x238
169209: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
169213: 49 21 a8 02 02           u64 [sp + 680] = 0x2
169218: 95 17 08 02              a0 = sp + 0x208
169222: 95 18 90 02              a1 = sp + 0x290
169226: 50 20 aa 09 35 ba fd     ra = 2474, jump @1491
      :                          @11746 [@dyn 1237]
169233: 82 16 10 02              s1 = u64 [sp + 0x210]
169237: 82 1b 18 02              a4 = u64 [sp + 0x218]
169241: 82 17 08 02              a0 = u64 [sp + 0x208]
169245: 7b 17 70                 u64 [sp + 0x70] = a0
169248: 33 07 02                 a0 = 0x2
169251: 33 08                    a1 = 0
169253: 33 09                    a2 = 0
169255: 64 6a                    a3 = s1
169257: 33 00 ac 09              ra = 0x9ac
169261: 0a 64                    ecalli 100 // 'log'
169263: 01                       fallthrough
      :                          @11747 [@dyn 1238]
169264: 82 1c 70                 a5 = u64 [sp + 0x70]
169267: 82 17 68                 a0 = u64 [sp + 0x68]
169270: c8 c7 07                 a0 = a0 + a5
169273: 53 37 00 00 ff 25        jump @11753 if a0 <u 4294901760
      :                          @11748
169279: 33 07 c0 22 03           a0 = 0x322c0
169284: 95 77 00 00 01           a0 = a0 + 0x10000
169289: 01                       fallthrough
      :                          @11749
169290: 82 78                    a1 = u64 [a0]
169292: c9 87 09                 a2 = a0 - a1
169295: ab 69 0f                 jump @11753 if a2 != s1
      :                          @11750
169298: c9 c8 09                 a2 = a1 - a5
169301: 01                       fallthrough
      :                          @11751
169302: 82 7a                    a3 = u64 [a0]
169304: ab 8a f2                 jump @11749 if a3 != a1
      :                          @11752
169307: 7b 79                    u64 [a0] = a2
169309: 01                       fallthrough
      :                          @11753
169310: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
169314: 52 08 06                 jump @11755 if a1 != 0
      :                          @11754
169317: 28 61 4c                 jump @12856
      :                          @11755
169320: 54 28 00 20 08           jump @11757 if a1 <=u 8192
      :                          @11756
169325: 28 59 4c                 jump @12856
      :                          @11757
169328: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
169332: 97 88 03                 a1 = a1 << 0x3
169335: 33 09 c0 22 03           a2 = 0x322c0
169340: 95 99 00 00 01           a2 = a2 + 0x10000
169345: 01                       fallthrough
      :                          @11758
169346: 82 9a                    a3 = u64 [a2]
169348: c9 a9 0b                 a4 = a2 - a3
169351: aa 7b 06                 jump @11760 if a4 == a0
      :                          @11759
169354: 28 3c 4c                 jump @12856
      :                          @11760
169357: c9 8a 0b                 a4 = a3 - a1
169360: 01                       fallthrough
      :                          @11761
169361: 82 9c                    a5 = u64 [a2]
169363: ab ac ef                 jump @11758 if a5 != a3
      :                          @11762
169366: 7b 9b                    u64 [a2] = a4
169368: 33 06                    s1 = 0
169370: 01                       fallthrough
      :                          @11763
169371: ab ac e7                 jump @11758 if a5 != a3
      :                          @11764
169374: 28 28 4c                 jump @12856
      :                          @11765 [@dyn 1239]
169377: 3a 08 78 12 03           a1 = u64 [0x31278]
169382: 97 89 0d                 a2 = a1 << 0xd
169385: d3 98 08                 a1 = a1 ^ a2
169388: 98 89 07                 a2 = a1 >> 0x7
169391: 3a 0a 60 11 03           a3 = u64 [0x31160]
169396: d3 98 08                 a1 = a1 ^ a2
169399: 97 89 11                 a2 = a1 << 0x11
169402: d3 98 08                 a1 = a1 ^ a2
169405: ca a8 09                 a2 = a1 * a3
169408: 3e 08 78 12 03           u64 [0x31278] = a1
169413: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
169423: d6 b9 08                 a1 = a2 mulhu a4
169426: 98 88 03                 a1 = a1 >> 0x3
169429: 33 0c 0a                 a5 = 0xa
169432: 3a 06 78 12 03           s1 = u64 [0x31278]
169437: ca c8 08                 a1 = a1 * a5
169440: c9 89 08                 a1 = a2 - a1
169443: 97 69 0d                 a2 = s1 << 0xd
169446: d3 96 06                 s1 = s1 ^ a2
169449: 98 69 07                 a2 = s1 >> 0x7
169452: d3 96 06                 s1 = s1 ^ a2
169455: 97 69 11                 a2 = s1 << 0x11
169458: d3 69 09                 a2 = a2 ^ s1
169461: ca a9 0a                 a3 = a2 * a3
169464: 3e 09 78 12 03           u64 [0x31278] = a2
169469: d6 ba 07                 a0 = a3 mulhu a4
169472: 98 77 03                 a0 = a0 >> 0x3
169475: ca c7 07                 a0 = a0 * a5
169478: c9 7a 06                 s1 = a3 - a0
169481: 95 17 20 01              a0 = sp + 0x120
169485: 50 20 b0 09 b5 dd fd     ra = 2480, jump @2157
      :                          @11766 [@dyn 1240]
169492: 95 17 e0 01              a0 = sp + 0x1e0
169496: 64 68                    a1 = s1
169498: 50 20 b2 09 a8 dd fd     ra = 2482, jump @2157
      :                          @11767 [@dyn 1241]
169505: 82 17 28 01              a0 = u64 [sp + 0x128]
169509: 82 18 30 01              a1 = u64 [sp + 0x130]
169513: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
169517: 82 1a f0 01              a3 = u64 [sp + 0x1f0]
169521: 50 20 b4 09 a7 36 fe     ra = 2484, jump @3890
      :                          @11768 [@dyn 1242]
169528: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
169532: 95 17 20 01              a0 = sp + 0x120
169536: 7b 17 90 02              u64 [sp + 0x290] = a0
169540: 33 07 20 02              a0 = 0x220
169544: 7b 17 98 02              u64 [sp + 0x298] = a0
169548: 95 18 e0 01              a1 = sp + 0x1e0
169552: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
169556: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
169560: 95 17 c8 01              a0 = sp + 0x1c8
169564: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
169568: 33 07 28 0c              a0 = 0xc28
169572: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
169576: 33 07 a0 24 01           a0 = 0x124a0
169581: 7b 17 38 02              u64 [sp + 0x238] = a0
169585: 49 21 40 02 03           u64 [sp + 576] = 0x3
169590: 49 21 58 02              u64 [sp + 600] = 0
169594: 95 18 90 02              a1 = sp + 0x290
169598: 7b 18 48 02              u64 [sp + 0x248] = a1
169602: 49 21 50 02 03           u64 [sp + 592] = 0x3
169607: 95 17 08 02              a0 = sp + 0x208
169611: 95 18 38 02              a1 = sp + 0x238
169615: 50 20 b6 09 b0 b8 fd     ra = 2486, jump @1491
      :                          @11769 [@dyn 1243]
169622: 82 16 10 02              s1 = u64 [sp + 0x210]
169626: 82 1b 18 02              a4 = u64 [sp + 0x218]
169630: 82 17 08 02              a0 = u64 [sp + 0x208]
169634: 7b 17 70                 u64 [sp + 0x70] = a0
169637: 33 07 02                 a0 = 0x2
169640: 33 08                    a1 = 0
169642: 33 09                    a2 = 0
169644: 64 6a                    a3 = s1
169646: 33 00 b8 09              ra = 0x9b8
169650: 0a 64                    ecalli 100 // 'log'
169652: 01                       fallthrough
      :                          @11770 [@dyn 1244]
169653: 82 1c 70                 a5 = u64 [sp + 0x70]
169656: 82 17 68                 a0 = u64 [sp + 0x68]
169659: c8 c7 07                 a0 = a0 + a5
169662: 53 37 00 00 ff 25        jump @11776 if a0 <u 4294901760
      :                          @11771
169668: 33 07 c0 22 03           a0 = 0x322c0
169673: 95 77 00 00 01           a0 = a0 + 0x10000
169678: 01                       fallthrough
      :                          @11772
169679: 82 78                    a1 = u64 [a0]
169681: c9 87 09                 a2 = a0 - a1
169684: ab 69 0f                 jump @11776 if a2 != s1
      :                          @11773
169687: c9 c8 09                 a2 = a1 - a5
169690: 01                       fallthrough
      :                          @11774
169691: 82 7a                    a3 = u64 [a0]
169693: ab 8a f2                 jump @11772 if a3 != a1
      :                          @11775
169696: 7b 79                    u64 [a0] = a2
169698: 01                       fallthrough
      :                          @11776
169699: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
169703: 51 08 30                 jump @11783 if a1 == 0
      :                          @11777
169706: 56 28 00 20 2d           jump @11783 if a1 >u 8192
      :                          @11778
169711: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
169715: 97 88 03                 a1 = a1 << 0x3
169718: 33 09 c0 22 03           a2 = 0x322c0
169723: 95 99 00 00 01           a2 = a2 + 0x10000
169728: 01                       fallthrough
      :                          @11779
169729: 82 9a                    a3 = u64 [a2]
169731: c9 a9 0b                 a4 = a2 - a3
169734: ab 7b 11                 jump @11783 if a4 != a0
      :                          @11780
169737: c9 8a 0b                 a4 = a3 - a1
169740: 01                       fallthrough
      :                          @11781
169741: 82 9c                    a5 = u64 [a2]
169743: ab ac f2                 jump @11779 if a5 != a3
      :                          @11782
169746: 7b 9b                    u64 [a2] = a4
169748: 33 06                    s1 = 0
169750: 01                       fallthrough
      :                          @11783
169751: 82 18 20 01              a1 = u64 [sp + 0x120]
169755: 52 08 06                 jump @11785 if a1 != 0
      :                          @11784
169758: 28 a8 4a                 jump @12856
      :                          @11785
169761: 54 28 00 20 08           jump @11787 if a1 <=u 8192
      :                          @11786
169766: 28 a0 4a                 jump @12856
      :                          @11787
169769: 82 17 28 01              a0 = u64 [sp + 0x128]
169773: 97 88 03                 a1 = a1 << 0x3
169776: 33 09 c0 22 03           a2 = 0x322c0
169781: 95 99 00 00 01           a2 = a2 + 0x10000
169786: 01                       fallthrough
      :                          @11788
169787: 82 9a                    a3 = u64 [a2]
169789: c9 a9 0b                 a4 = a2 - a3
169792: aa 7b 06                 jump @11790 if a4 == a0
      :                          @11789
169795: 28 83 4a                 jump @12856
      :                          @11790
169798: c9 8a 0b                 a4 = a3 - a1
169801: 01                       fallthrough
      :                          @11791
169802: 82 9c                    a5 = u64 [a2]
169804: ab ac ef                 jump @11788 if a5 != a3
      :                          @11792
169807: 7b 9b                    u64 [a2] = a4
169809: 33 06                    s1 = 0
169811: 01                       fallthrough
      :                          @11793
169812: ab ac e7                 jump @11788 if a5 != a3
      :                          @11794
169815: 28 6f 4a                 jump @12856
      :                          @11795 [@dyn 1245]
169818: 3a 08 78 12 03           a1 = u64 [0x31278]
169823: 97 89 0d                 a2 = a1 << 0xd
169826: d3 98 08                 a1 = a1 ^ a2
169829: 98 89 07                 a2 = a1 >> 0x7
169832: d3 98 08                 a1 = a1 ^ a2
169835: 97 89 11                 a2 = a1 << 0x11
169838: d3 89 09                 a2 = a2 ^ a1
169841: 97 8a 02                 a3 = a1 << 0x2
169844: 3e 09 78 12 03           u64 [0x31278] = a2
169849: 3a 09 78 12 03           a2 = u64 [0x31278]
169854: c8 a8 08                 a1 = a1 + a3
169857: 84 88 07                 a1 = a1 & 0x7
169860: 97 9a 0d                 a3 = a2 << 0xd
169863: d3 a9 09                 a2 = a2 ^ a3
169866: 98 9a 07                 a3 = a2 >> 0x7
169869: d3 a9 09                 a2 = a2 ^ a3
169872: 97 9a 11                 a3 = a2 << 0x11
169875: d3 9a 0a                 a3 = a3 ^ a2
169878: 97 9b 02                 a4 = a2 << 0x2
169881: c8 b9 09                 a2 = a2 + a4
169884: 3e 0a 78 12 03           u64 [0x31278] = a3
169889: 84 96 07                 s1 = a2 & 0x7
169892: 95 17 b0 01              a0 = sp + 0x1b0
169896: 50 20 bc 09 80 db fd     ra = 2492, jump @2147
      :                          @11796 [@dyn 1246]
169903: 95 17 c8 01              a0 = sp + 0x1c8
169907: 64 68                    a1 = s1
169909: 50 20 be 09 73 db fd     ra = 2494, jump @2147
      :                          @11797 [@dyn 1247]
169916: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
169920: 7b 18 70                 u64 [sp + 0x70] = a1
169923: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
169927: 7b 19 60                 u64 [sp + 0x60] = a2
169930: 95 17 e0 01              a0 = sp + 0x1e0
169934: 50 20 c0 09 46 69        ra = 2496, jump @13495
      :                          @11798 [@dyn 1248]
169940: 82 16 d0 01              s1 = u64 [sp + 0x1d0]
169944: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
169948: 7b 19 58                 u64 [sp + 0x58] = a2
169951: 95 17 08 02              a0 = sp + 0x208
169955: 64 68                    a1 = s1
169957: 50 20 c2 09 2f 69        ra = 2498, jump @13495
      :                          @11799 [@dyn 1249]
169963: 82 17 70                 a0 = u64 [sp + 0x70]
169966: 82 18 60                 a1 = u64 [sp + 0x60]
169969: 7b 16 60                 u64 [sp + 0x60] = s1
169972: 64 69                    a2 = s1
169974: 82 1a 58                 a3 = u64 [sp + 0x58]
169977: 50 20 c4 09 1b 38 fe     ra = 2500, jump @3972
      :                          @11800 [@dyn 1250]
169984: 7b 17 10 01              u64 [sp + 0x110] = a0
169988: 95 17 e0 01              a0 = sp + 0x1e0
169992: 7b 17 90 02              u64 [sp + 0x290] = a0
169996: 33 07 48 02              a0 = 0x248
170000: 7b 17 98 02              u64 [sp + 0x298] = a0
170004: 95 18 08 02              a1 = sp + 0x208
170008: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
170012: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
170016: 95 17 10 01              a0 = sp + 0x110
170020: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
170024: 33 07 94 0c              a0 = 0xc94
170028: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
170032: 33 07 e8 24 01           a0 = 0x124e8
170037: 7b 17 38 02              u64 [sp + 0x238] = a0
170041: 49 21 40 02 03           u64 [sp + 576] = 0x3
170046: 49 21 58 02              u64 [sp + 600] = 0
170050: 95 18 90 02              a1 = sp + 0x290
170054: 7b 18 48 02              u64 [sp + 0x248] = a1
170058: 49 21 50 02 03           u64 [sp + 592] = 0x3
170063: 95 17 20 01              a0 = sp + 0x120
170067: 95 18 38 02              a1 = sp + 0x238
170071: 50 20 c6 09 e8 b6 fd     ra = 2502, jump @1491
      :                          @11801 [@dyn 1251]
170078: 82 18 08 02              a1 = u64 [sp + 0x208]
170082: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
170092: d4 78 09                 a2 = a1 | a0
170095: aa 79 06                 jump @11803 if a2 == a0
      :                          @11802
170098: 28 72 59                 jump @13142
      :                          @11803
170101: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
170105: d4 78 09                 a2 = a1 | a0
170108: aa 79 06                 jump @11805 if a2 == a0
      :                          @11804
170111: 28 9c 59                 jump @13152
      :                          @11805
170114: 82 16 28 01              s1 = u64 [sp + 0x128]
170118: 82 1b 30 01              a4 = u64 [sp + 0x130]
170122: 82 17 20 01              a0 = u64 [sp + 0x120]
170126: 7b 17 58                 u64 [sp + 0x58] = a0
170129: 33 07 02                 a0 = 0x2
170132: 33 08                    a1 = 0
170134: 33 09                    a2 = 0
170136: 64 6a                    a3 = s1
170138: 33 00 c8 09              ra = 0x9c8
170142: 0a 64                    ecalli 100 // 'log'
170144: 01                       fallthrough
      :                          @11806 [@dyn 1252]
170145: 82 17 58                 a0 = u64 [sp + 0x58]
170148: 82 18 68                 a1 = u64 [sp + 0x68]
170151: c8 78 08                 a1 = a1 + a0
170154: 33 03 00 00 ff           t1 = 0xffffffffffff0000
170159: ac 38 24                 jump @11812 if a1 <u t1
      :                          @11807
170162: 33 08 c0 22 03           a1 = 0x322c0
170167: 95 88 00 00 01           a1 = a1 + 0x10000
170172: 01                       fallthrough
      :                          @11808
170173: 82 89                    a2 = u64 [a1]
170175: c9 98 0a                 a3 = a1 - a2
170178: ab 6a 11                 jump @11812 if a3 != s1
      :                          @11809
170181: c9 79 0a                 a3 = a2 - a0
170184: 01                       fallthrough
      :                          @11810
170185: 82 8b                    a4 = u64 [a1]
170187: ab 9b f2                 jump @11808 if a4 != a2
      :                          @11811
170190: 7b 8a                    u64 [a1] = a3
170192: 33 0c                    a5 = 0
170194: 01                       fallthrough
      :                          @11812
170195: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
170199: 82 19 68                 a2 = u64 [sp + 0x68]
170202: c8 89 09                 a2 = a2 + a1
170205: 82 12 70                 t0 = u64 [sp + 0x70]
170208: 82 16 60                 s1 = u64 [sp + 0x60]
170211: ac 39 24                 jump @11818 if a2 <u t1
      :                          @11813
170214: 33 07 c0 22 03           a0 = 0x322c0
170219: 95 77 00 00 01           a0 = a0 + 0x10000
170224: 01                       fallthrough
      :                          @11814
170225: 82 79                    a2 = u64 [a0]
170227: c9 97 0a                 a3 = a0 - a2
170230: ab 6a 11                 jump @11818 if a3 != s1
      :                          @11815
170233: c9 89 0a                 a3 = a2 - a1
170236: 01                       fallthrough
      :                          @11816
170237: 82 7b                    a4 = u64 [a0]
170239: ab 9b f2                 jump @11814 if a4 != a2
      :                          @11817
170242: 7b 7a                    u64 [a0] = a3
170244: 33 0c                    a5 = 0
170246: 01                       fallthrough
      :                          @11818
170247: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
170251: 82 18 68                 a1 = u64 [sp + 0x68]
170254: c8 78 08                 a1 = a1 + a0
170257: 55 38 00 00 ff 09        jump @11820 if a1 >=u 4294901760
      :                          @11819
170263: 28 af 48                 jump @12856
      :                          @11820
170266: 33 08 c0 22 03           a1 = 0x322c0
170271: 95 88 00 00 01           a1 = a1 + 0x10000
170276: 01                       fallthrough
      :                          @11821
170277: 82 89                    a2 = u64 [a1]
170279: c9 98 0a                 a3 = a1 - a2
170282: aa 2a 06                 jump @11823 if a3 == t0
      :                          @11822
170285: 28 99 48                 jump @12856
      :                          @11823
170288: c9 79 0a                 a3 = a2 - a0
170291: 01                       fallthrough
      :                          @11824
170292: 82 8b                    a4 = u64 [a1]
170294: ab 9b ef                 jump @11821 if a4 != a2
      :                          @11825
170297: 7b 8a                    u64 [a1] = a3
170299: 33 0c                    a5 = 0
170301: 01                       fallthrough
      :                          @11826
170302: ab 9b e7                 jump @11821 if a4 != a2
      :                          @11827
170305: 28 85 48                 jump @12856
      :                          @11828 [@dyn 1253]
170308: 3a 08 78 12 03           a1 = u64 [0x31278]
170313: 97 89 0d                 a2 = a1 << 0xd
170316: d3 98 08                 a1 = a1 ^ a2
170319: 98 89 07                 a2 = a1 >> 0x7
170322: d3 98 08                 a1 = a1 ^ a2
170325: 97 89 11                 a2 = a1 << 0x11
170328: d3 89 09                 a2 = a2 ^ a1
170331: 97 8a 02                 a3 = a1 << 0x2
170334: 3e 09 78 12 03           u64 [0x31278] = a2
170339: 3a 09 78 12 03           a2 = u64 [0x31278]
170344: c8 a8 08                 a1 = a1 + a3
170347: 84 88 07                 a1 = a1 & 0x7
170350: 97 9a 0d                 a3 = a2 << 0xd
170353: d3 a9 09                 a2 = a2 ^ a3
170356: 98 9a 07                 a3 = a2 >> 0x7
170359: d3 a9 09                 a2 = a2 ^ a3
170362: 97 9a 11                 a3 = a2 << 0x11
170365: d3 9a 0a                 a3 = a3 ^ a2
170368: 97 9b 02                 a4 = a2 << 0x2
170371: c8 b9 09                 a2 = a2 + a4
170374: 3e 0a 78 12 03           u64 [0x31278] = a3
170379: 84 96 07                 s1 = a2 & 0x7
170382: 95 17 b0 01              a0 = sp + 0x1b0
170386: 50 20 cc 09 96 d9 fd     ra = 2508, jump @2147
      :                          @11829 [@dyn 1254]
170393: 95 17 c8 01              a0 = sp + 0x1c8
170397: 64 68                    a1 = s1
170399: 50 20 ce 09 89 d9 fd     ra = 2510, jump @2147
      :                          @11830 [@dyn 1255]
170406: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
170410: 7b 18 70                 u64 [sp + 0x70] = a1
170413: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
170417: 7b 19 60                 u64 [sp + 0x60] = a2
170420: 95 17 e0 01              a0 = sp + 0x1e0
170424: 50 20 d0 09 5c 67        ra = 2512, jump @13495
      :                          @11831 [@dyn 1256]
170430: 82 16 d0 01              s1 = u64 [sp + 0x1d0]
170434: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
170438: 7b 19 58                 u64 [sp + 0x58] = a2
170441: 95 17 08 02              a0 = sp + 0x208
170445: 64 68                    a1 = s1
170447: 50 20 d2 09 45 67        ra = 2514, jump @13495
      :                          @11832 [@dyn 1257]
170453: 82 17 70                 a0 = u64 [sp + 0x70]
170456: 82 18 60                 a1 = u64 [sp + 0x60]
170459: 7b 16 60                 u64 [sp + 0x60] = s1
170462: 64 69                    a2 = s1
170464: 82 1a 58                 a3 = u64 [sp + 0x58]
170467: 50 20 d4 09 64 39 fe     ra = 2516, jump @4051
      :                          @11833 [@dyn 1258]
170474: 7b 17 10 01              u64 [sp + 0x110] = a0
170478: 95 17 e0 01              a0 = sp + 0x1e0
170482: 7b 17 90 02              u64 [sp + 0x290] = a0
170486: 33 07 48 02              a0 = 0x248
170490: 7b 17 98 02              u64 [sp + 0x298] = a0
170494: 95 18 08 02              a1 = sp + 0x208
170498: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
170502: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
170506: 95 17 10 01              a0 = sp + 0x110
170510: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
170514: 33 07 94 0c              a0 = 0xc94
170518: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
170522: 33 07 28 25 01           a0 = 0x12528
170527: 7b 17 38 02              u64 [sp + 0x238] = a0
170531: 49 21 40 02 03           u64 [sp + 576] = 0x3
170536: 49 21 58 02              u64 [sp + 600] = 0
170540: 95 18 90 02              a1 = sp + 0x290
170544: 7b 18 48 02              u64 [sp + 0x248] = a1
170548: 49 21 50 02 03           u64 [sp + 592] = 0x3
170553: 95 17 20 01              a0 = sp + 0x120
170557: 95 18 38 02              a1 = sp + 0x238
170561: 50 20 d6 09 fe b4 fd     ra = 2518, jump @1491
      :                          @11834 [@dyn 1259]
170568: 82 18 08 02              a1 = u64 [sp + 0x208]
170572: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
170582: d4 78 09                 a2 = a1 | a0
170585: aa 79 06                 jump @11836 if a2 == a0
      :                          @11835
170588: 28 f6 57                 jump @13162
      :                          @11836
170591: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
170595: d4 78 09                 a2 = a1 | a0
170598: aa 79 06                 jump @11838 if a2 == a0
      :                          @11837
170601: 28 20 58                 jump @13172
      :                          @11838
170604: 82 16 28 01              s1 = u64 [sp + 0x128]
170608: 82 1b 30 01              a4 = u64 [sp + 0x130]
170612: 82 17 20 01              a0 = u64 [sp + 0x120]
170616: 7b 17 58                 u64 [sp + 0x58] = a0
170619: 33 07 02                 a0 = 0x2
170622: 33 08                    a1 = 0
170624: 33 09                    a2 = 0
170626: 64 6a                    a3 = s1
170628: 33 00 d8 09              ra = 0x9d8
170632: 0a 64                    ecalli 100 // 'log'
170634: 01                       fallthrough
      :                          @11839 [@dyn 1260]
170635: 82 17 58                 a0 = u64 [sp + 0x58]
170638: 82 18 68                 a1 = u64 [sp + 0x68]
170641: c8 78 08                 a1 = a1 + a0
170644: 33 03 00 00 ff           t1 = 0xffffffffffff0000
170649: ac 38 24                 jump @11845 if a1 <u t1
      :                          @11840
170652: 33 08 c0 22 03           a1 = 0x322c0
170657: 95 88 00 00 01           a1 = a1 + 0x10000
170662: 01                       fallthrough
      :                          @11841
170663: 82 89                    a2 = u64 [a1]
170665: c9 98 0a                 a3 = a1 - a2
170668: ab 6a 11                 jump @11845 if a3 != s1
      :                          @11842
170671: c9 79 0a                 a3 = a2 - a0
170674: 01                       fallthrough
      :                          @11843
170675: 82 8b                    a4 = u64 [a1]
170677: ab 9b f2                 jump @11841 if a4 != a2
      :                          @11844
170680: 7b 8a                    u64 [a1] = a3
170682: 33 0c                    a5 = 0
170684: 01                       fallthrough
      :                          @11845
170685: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
170689: 82 19 68                 a2 = u64 [sp + 0x68]
170692: c8 89 09                 a2 = a2 + a1
170695: 82 12 70                 t0 = u64 [sp + 0x70]
170698: 82 16 60                 s1 = u64 [sp + 0x60]
170701: ac 39 24                 jump @11851 if a2 <u t1
      :                          @11846
170704: 33 07 c0 22 03           a0 = 0x322c0
170709: 95 77 00 00 01           a0 = a0 + 0x10000
170714: 01                       fallthrough
      :                          @11847
170715: 82 79                    a2 = u64 [a0]
170717: c9 97 0a                 a3 = a0 - a2
170720: ab 6a 11                 jump @11851 if a3 != s1
      :                          @11848
170723: c9 89 0a                 a3 = a2 - a1
170726: 01                       fallthrough
      :                          @11849
170727: 82 7b                    a4 = u64 [a0]
170729: ab 9b f2                 jump @11847 if a4 != a2
      :                          @11850
170732: 7b 7a                    u64 [a0] = a3
170734: 33 0c                    a5 = 0
170736: 01                       fallthrough
      :                          @11851
170737: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
170741: 82 18 68                 a1 = u64 [sp + 0x68]
170744: c8 78 08                 a1 = a1 + a0
170747: 55 38 00 00 ff 09        jump @11853 if a1 >=u 4294901760
      :                          @11852
170753: 28 c5 46                 jump @12856
      :                          @11853
170756: 33 08 c0 22 03           a1 = 0x322c0
170761: 95 88 00 00 01           a1 = a1 + 0x10000
170766: 01                       fallthrough
      :                          @11854
170767: 82 89                    a2 = u64 [a1]
170769: c9 98 0a                 a3 = a1 - a2
170772: aa 2a 06                 jump @11856 if a3 == t0
      :                          @11855
170775: 28 af 46                 jump @12856
      :                          @11856
170778: c9 79 0a                 a3 = a2 - a0
170781: 01                       fallthrough
      :                          @11857
170782: 82 8b                    a4 = u64 [a1]
170784: ab 9b ef                 jump @11854 if a4 != a2
      :                          @11858
170787: 7b 8a                    u64 [a1] = a3
170789: 33 0c                    a5 = 0
170791: 01                       fallthrough
      :                          @11859
170792: ab 9b e7                 jump @11854 if a4 != a2
      :                          @11860
170795: 28 9b 46                 jump @12856
      :                          @11861 [@dyn 1261]
170798: 3a 08 78 12 03           a1 = u64 [0x31278]
170803: 97 89 0d                 a2 = a1 << 0xd
170806: d3 98 08                 a1 = a1 ^ a2
170809: 98 89 07                 a2 = a1 >> 0x7
170812: d3 98 08                 a1 = a1 ^ a2
170815: 97 89 11                 a2 = a1 << 0x11
170818: 3a 0a 60 11 03           a3 = u64 [0x31160]
170823: d3 98 08                 a1 = a1 ^ a2
170826: 3a 09 b8 11 03           a2 = u64 [0x311b8]
170831: ca a8 0b                 a4 = a1 * a3
170834: 3e 08 78 12 03           u64 [0x31278] = a1
170839: d6 9b 08                 a1 = a4 mulhu a2
170842: 98 88 12                 a1 = a1 >> 0x12
170845: 33 0c 40 42 0f           a5 = 0xf4240
170850: ca c8 08                 a1 = a1 * a5
170853: c9 8b 0b                 a4 = a4 - a1
170856: 7b 1b b0 01              u64 [sp + 0x1b0] = a4
170860: 3a 08 78 12 03           a1 = u64 [0x31278]
170865: 97 8b 0d                 a4 = a1 << 0xd
170868: d3 b8 08                 a1 = a1 ^ a4
170871: 98 8b 07                 a4 = a1 >> 0x7
170874: d3 b8 08                 a1 = a1 ^ a4
170877: 97 8b 11                 a4 = a1 << 0x11
170880: d3 b8 08                 a1 = a1 ^ a4
170883: ca a8 0a                 a3 = a1 * a3
170886: 3e 08 78 12 03           u64 [0x31278] = a1
170891: d6 9a 07                 a0 = a3 mulhu a2
170894: 98 78 12                 a1 = a0 >> 0x12
170897: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
170901: ca c8 08                 a1 = a1 * a5
170904: c9 8a 08                 a1 = a3 - a1
170907: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
170911: 52 08 06                 jump @11863 if a1 != 0
      :                          @11862
170914: 28 d1 4c                 jump @12983
      :                          @11863
170917: 64 79                    a2 = a0
170919: 64 8b                    a4 = a1
170921: 01                       fallthrough
      :                          @11864
170922: 64 ba                    a3 = a4
170924: cd b9 0b                 a4 = a2 %u a4
170927: 64 a9                    a2 = a3
170929: 52 0b f9                 jump @11864 if a4 != 0
      :                          @11865
170932: 7b 1a 20 01              u64 [sp + 0x120] = a3
170936: 50 20 dc 09 49 ef fd     ra = 2524, jump @2402
      :                          @11866 [@dyn 1262]
170943: 28 bf 4c                 jump @12985
      :                          @11867 [@dyn 1263]
170946: 3a 08 78 12 03           a1 = u64 [0x31278]
170951: 97 89 0d                 a2 = a1 << 0xd
170954: d3 89 09                 a2 = a2 ^ a1
170957: 98 9a 07                 a3 = a2 >> 0x7
170960: 3a 08 60 11 03           a1 = u64 [0x31160]
170965: d3 a9 09                 a2 = a2 ^ a3
170968: 97 9a 11                 a3 = a2 << 0x11
170971: d3 a9 09                 a2 = a2 ^ a3
170974: ca 89 0a                 a3 = a2 * a1
170977: 3a 0b 68 11 03           a4 = u64 [0x31168]
170982: 3e 09 78 12 03           u64 [0x31278] = a2
170987: 98 a9 03                 a2 = a3 >> 0x3
170990: d6 b9 09                 a2 = a2 mulhu a4
170993: 98 99 04                 a2 = a2 >> 0x4
170996: 33 0c e8 03              a5 = 0x3e8
171000: ca c9 09                 a2 = a2 * a5
171003: c9 9a 0a                 a3 = a3 - a2
171006: 95 aa 01                 a3 = a3 + 0x1
171009: 7b 1a 10 01              u64 [sp + 0x110] = a3
171013: 3a 09 78 12 03           a2 = u64 [0x31278]
171018: 97 9a 0d                 a3 = a2 << 0xd
171021: d3 a9 09                 a2 = a2 ^ a3
171024: 98 9a 07                 a3 = a2 >> 0x7
171027: d3 a9 09                 a2 = a2 ^ a3
171030: 97 9a 11                 a3 = a2 << 0x11
171033: d3 a9 09                 a2 = a2 ^ a3
171036: ca 89 0a                 a3 = a2 * a1
171039: 3e 09 78 12 03           u64 [0x31278] = a2
171044: 98 a9 03                 a2 = a3 >> 0x3
171047: d6 b9 09                 a2 = a2 mulhu a4
171050: 98 99 04                 a2 = a2 >> 0x4
171053: ca c9 09                 a2 = a2 * a5
171056: c9 9a 0a                 a3 = a3 - a2
171059: 7b 1a b0 01              u64 [sp + 0x1b0] = a3
171063: 3a 09 78 12 03           a2 = u64 [0x31278]
171068: 97 9a 0d                 a3 = a2 << 0xd
171071: d3 a9 09                 a2 = a2 ^ a3
171074: 98 9a 07                 a3 = a2 >> 0x7
171077: d3 a9 09                 a2 = a2 ^ a3
171080: 97 9a 11                 a3 = a2 << 0x11
171083: d3 a9 09                 a2 = a2 ^ a3
171086: 3a 0a 80 11 03           a3 = u64 [0x31180]
171091: ca 89 08                 a1 = a2 * a1
171094: 3e 09 78 12 03           u64 [0x31278] = a2
171099: d6 a8 07                 a0 = a1 mulhu a3
171102: c9 78 09                 a2 = a1 - a0
171105: 98 99 01                 a2 = a2 >> 0x1
171108: c8 97 07                 a0 = a0 + a2
171111: 98 77 09                 a0 = a0 >> 0x9
171114: 96 77 e7 03              a0 = a0 * 0x3e7
171118: c9 78 09                 a2 = a1 - a0
171121: 82 1a b0 01              a3 = u64 [sp + 0x1b0]
171125: 82 17 10 01              a0 = u64 [sp + 0x110]
171129: 95 98 01                 a1 = a2 + 0x1
171132: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
171136: 8e 99                    a2 = a2 >u 0
171138: 52 0a 06                 jump @11869 if a3 != 0
      :                          @11868
171141: 28 b5 3a                 jump @12663
      :                          @11869
171144: 64 7b                    a4 = a0
171146: 28 0e                    jump @11872
      :                          @11870
171148: 98 aa 01                 a3 = a3 >> 0x1
171151: ca bb 0b                 a4 = a4 * a4
171154: 52 0a 06                 jump @11872 if a3 != 0
      :                          @11871
171157: 28 a5 3a                 jump @12663
      :                          @11872
171160: 84 ac 01                 a5 = a3 & 0x1
171163: cd 8b 0b                 a4 = a4 %u a1
171166: 51 0c ee                 jump @11870 if a5 == 0
      :                          @11873
171169: ca 9b 09                 a2 = a4 * a2
171172: cd 89 09                 a2 = a2 %u a1
171175: 28 e5                    jump @11870
      :                          @11874 [@dyn 1264]
171177: 3a 07 78 12 03           a0 = u64 [0x31278]
171182: 97 78 0d                 a1 = a0 << 0xd
171185: d3 87 07                 a0 = a0 ^ a1
171188: 98 78 07                 a1 = a0 >> 0x7
171191: d3 87 07                 a0 = a0 ^ a1
171194: 97 78 11                 a1 = a0 << 0x11
171197: d3 78 02                 t0 = a1 ^ a0
171200: 3e 02 78 12 03           u64 [0x31278] = t0
171205: 3a 08 78 12 03           a1 = u64 [0x31278]
171210: 3a 04 60 11 03           t2 = u64 [0x31160]
171215: 97 8a 0d                 a3 = a1 << 0xd
171218: d3 a8 08                 a1 = a1 ^ a3
171221: 98 8a 07                 a3 = a1 >> 0x7
171224: d3 a8 08                 a1 = a1 ^ a3
171227: 97 8a 11                 a3 = a1 << 0x11
171230: d3 a8 08                 a1 = a1 ^ a3
171233: ca 48 0a                 a3 = a1 * t2
171236: 3e 08 78 12 03           u64 [0x31278] = a1
171241: 3a 08 a8 11 03           a1 = u64 [0x311a8]
171246: 98 ab 01                 a4 = a3 >> 0x1
171249: 3a 0c 78 12 03           a5 = u64 [0x31278]
171254: d6 8b 0b                 a4 = a4 mulhu a1
171257: 98 bb 04                 a4 = a4 >> 0x4
171260: 97 c7 0d                 a0 = a5 << 0xd
171263: d3 c7 07                 a0 = a0 ^ a5
171266: 98 7c 07                 a5 = a0 >> 0x7
171269: d3 c7 07                 a0 = a0 ^ a5
171272: 97 7c 11                 a5 = a0 << 0x11
171275: d3 7c 03                 t1 = a5 ^ a0
171278: 3e 03 78 12 03           u64 [0x31278] = t1
171283: 3a 0c 78 12 03           a5 = u64 [0x31278]
171288: 96 bb 62                 a4 = a4 * 0x62
171291: c9 ba 0a                 a3 = a3 - a4
171294: 97 cb 0d                 a4 = a5 << 0xd
171297: d3 cb 0b                 a4 = a4 ^ a5
171300: 98 bc 07                 a5 = a4 >> 0x7
171303: d3 cb 0b                 a4 = a4 ^ a5
171306: 97 bc 11                 a5 = a4 << 0x11
171309: d3 cb 0b                 a4 = a4 ^ a5
171312: ca 4b 07                 a0 = a4 * t2
171315: 98 7c 01                 a5 = a0 >> 0x1
171318: d6 8c 0c                 a5 = a5 mulhu a1
171321: 95 a8 02                 a1 = a3 + 0x2
171324: 98 cc 04                 a5 = a5 >> 0x4
171327: 96 ca 62                 a3 = a5 * 0x62
171330: c9 a7 07                 a0 = a0 - a3
171333: 95 7a 02                 a3 = a0 + 0x2
171336: 3e 0b 78 12 03           u64 [0x31278] = a4
171341: 64 86                    s1 = a1
171343: 64 a9                    a2 = a3
171345: 01                       fallthrough
      :                          @11875
171346: 64 9c                    a5 = a2
171348: cd 96 09                 a2 = s1 %u a2
171351: 64 c6                    s1 = a5
171353: 52 09 f9                 jump @11875 if a2 != 0
      :                          @11876
171356: 7b 14 70                 u64 [sp + 0x70] = t2
171359: 52 1c 01 e7 00           jump @11886 if a5 != 1
      :                          @11877
171364: 3a 07 b0 11 03           a0 = u64 [0x311b0]
171369: ca 43 09                 a2 = t1 * t2
171372: ca 42 0b                 a4 = t0 * t2
171375: 98 9c 02                 a5 = a2 >> 0x2
171378: d6 7c 0c                 a5 = a5 mulhu a0
171381: 98 cc 02                 a5 = a5 >> 0x2
171384: 96 cc 64                 a5 = a5 * 0x64
171387: c9 c9 09                 a2 = a2 - a5
171390: 98 bc 02                 a5 = a4 >> 0x2
171393: d6 7c 07                 a0 = a5 mulhu a0
171396: 98 77 02                 a0 = a0 >> 0x2
171399: 96 77 64                 a0 = a0 * 0x64
171402: c9 7b 07                 a0 = a4 - a0
171405: 33 00 e2 09              ra = 0x9e2
171409: 95 11 c0                 sp = sp + 0xffffffffffffffc0
171412: 7b 10 38                 u64 [sp + 0x38] = ra
171415: 7b 15 30                 u64 [sp + 0x30] = s0
171418: 49 11 28 64              u64 [sp + 40] = 0x64
171422: 64 a5                    s0 = a3
171424: 7b 19                    u64 [sp] = a2
171426: 64 86                    s1 = a1
171428: 7b 17 08                 u64 [sp + 0x8] = a0
171431: 95 17 10                 a0 = sp + 0x10
171434: 64 a9                    a2 = a3
171436: 33 00 a4 02              ra = 0x2a4
171440: 28 73 ed fd              jump @2409
      :                          @11878 [@dyn 1265]
171444: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
171448: 95 17 e0 01              a0 = sp + 0x1e0
171452: 7b 17 08 02              u64 [sp + 0x208] = a0
171456: 33 07 94 0c              a0 = 0xc94
171460: 7b 17 10 02              u64 [sp + 0x210] = a0
171464: 33 07 08 26 01           a0 = 0x12608
171469: 7b 17 90 02              u64 [sp + 0x290] = a0
171473: 49 21 98 02 01           u64 [sp + 664] = 0x1
171478: 49 21 b0 02              u64 [sp + 688] = 0
171482: 95 17 08 02              a0 = sp + 0x208
171486: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
171490: 49 21 a8 02 01           u64 [sp + 680] = 0x1
171495: 95 17 38 02              a0 = sp + 0x238
171499: 95 18 90 02              a1 = sp + 0x290
171503: 50 20 e4 09 50 b1 fd     ra = 2532, jump @1491
      :                          @11879 [@dyn 1266]
171510: 82 16 40 02              s1 = u64 [sp + 0x240]
171514: 82 1b 48 02              a4 = u64 [sp + 0x248]
171518: 82 17 38 02              a0 = u64 [sp + 0x238]
171522: 7b 17 60                 u64 [sp + 0x60] = a0
171525: 33 07 02                 a0 = 0x2
171528: 33 08                    a1 = 0
171530: 33 09                    a2 = 0
171532: 64 6a                    a3 = s1
171534: 33 00 e6 09              ra = 0x9e6
171538: 0a 64                    ecalli 100 // 'log'
171540: 01                       fallthrough
      :                          @11880 [@dyn 1267]
171541: 82 1c 60                 a5 = u64 [sp + 0x60]
171544: 82 14 70                 t2 = u64 [sp + 0x70]
171547: 82 17 68                 a0 = u64 [sp + 0x68]
171550: c8 c7 07                 a0 = a0 + a5
171553: 53 37 00 00 ff 25        jump @11886 if a0 <u 4294901760
      :                          @11881
171559: 33 07 c0 22 03           a0 = 0x322c0
171564: 95 77 00 00 01           a0 = a0 + 0x10000
171569: 01                       fallthrough
      :                          @11882
171570: 82 78                    a1 = u64 [a0]
171572: c9 87 09                 a2 = a0 - a1
171575: ab 69 0f                 jump @11886 if a2 != s1
      :                          @11883
171578: c9 c8 09                 a2 = a1 - a5
171581: 01                       fallthrough
      :                          @11884
171582: 82 7a                    a3 = u64 [a0]
171584: ab 8a f2                 jump @11882 if a3 != a1
      :                          @11885
171587: 7b 79                    u64 [a0] = a2
171589: 01                       fallthrough
      :                          @11886
171590: 49 21 20 01 02           u64 [sp + 288] = 0x2
171595: 49 21 28 01 03           u64 [sp + 296] = 0x3
171600: 49 21 30 01 05           u64 [sp + 304] = 0x5
171605: 33 0c 78 12 03           a5 = 0x31278
171610: 3a 07 78 12 03           a0 = u64 [0x31278]
171615: 97 78 0d                 a1 = a0 << 0xd
171618: d3 87 07                 a0 = a0 ^ a1
171621: 98 78 07                 a1 = a0 >> 0x7
171624: d3 87 07                 a0 = a0 ^ a1
171627: 97 78 11                 a1 = a0 << 0x11
171630: d3 78 08                 a1 = a1 ^ a0
171633: 3e 08 78 12 03           u64 [0x31278] = a1
171638: 3a 08 78 12 03           a1 = u64 [0x31278]
171643: 84 77 01                 a0 = a0 & 0x1
171646: 97 89 0d                 a2 = a1 << 0xd
171649: d3 98 08                 a1 = a1 ^ a2
171652: 98 89 07                 a2 = a1 >> 0x7
171655: d3 98 08                 a1 = a1 ^ a2
171658: 97 89 11                 a2 = a1 << 0x11
171661: d3 98 08                 a1 = a1 ^ a2
171664: ca 48 09                 a2 = a1 * t2
171667: 3e 08 78 12 03           u64 [0x31278] = a1
171672: 14 08 ab aa aa aa aa aa aa aa a1 = 0xaaaaaaaaaaaaaaab
171682: d6 89 08                 a1 = a2 mulhu a1
171685: 98 8a 01                 a3 = a1 >> 0x1
171688: 84 88 fe                 a1 = a1 & 0xfffffffffffffffe
171691: 3a 0b 78 12 03           a4 = u64 [0x31278]
171696: c8 a8 08                 a1 = a1 + a3
171699: c9 89 09                 a2 = a2 - a1
171702: 97 b8 0d                 a1 = a4 << 0xd
171705: d3 b8 08                 a1 = a1 ^ a4
171708: 98 8a 07                 a3 = a1 >> 0x7
171711: d3 a8 08                 a1 = a1 ^ a3
171714: 97 8a 11                 a3 = a1 << 0x11
171717: d3 a8 08                 a1 = a1 ^ a3
171720: ca 48 0a                 a3 = a1 * t2
171723: 3e 08 78 12 03           u64 [0x31278] = a1
171728: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
171738: d6 8a 08                 a1 = a3 mulhu a1
171741: 98 8b 02                 a4 = a1 >> 0x2
171744: 84 88 fc                 a1 = a1 & 0xfffffffffffffffc
171747: c8 b8 08                 a1 = a1 + a4
171750: c9 8a 0a                 a3 = a3 - a1
171753: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
171757: 7b 19 e8 01              u64 [sp + 0x1e8] = a2
171761: 7b 1a f0 01              u64 [sp + 0x1f0] = a3
171765: 95 17 e0 01              a0 = sp + 0x1e0
171769: 95 18 20 01              a1 = sp + 0x120
171773: 50 20 e8 09 1a f0 fd     ra = 2536, jump @2519
      :                          @11887 [@dyn 1268]
171780: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
171784: 95 17 c8 01              a0 = sp + 0x1c8
171788: 7b 17 08 02              u64 [sp + 0x208] = a0
171792: 33 07 94 0c              a0 = 0xc94
171796: 7b 17 10 02              u64 [sp + 0x210] = a0
171800: 33 07 28 26 01           a0 = 0x12628
171805: 7b 17 90 02              u64 [sp + 0x290] = a0
171809: 49 21 98 02 01           u64 [sp + 664] = 0x1
171814: 49 21 b0 02              u64 [sp + 688] = 0
171818: 95 17 08 02              a0 = sp + 0x208
171822: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
171826: 49 21 a8 02 01           u64 [sp + 680] = 0x1
171831: 95 17 38 02              a0 = sp + 0x238
171835: 95 18 90 02              a1 = sp + 0x290
171839: 50 20 ea 09 00 b0 fd     ra = 2538, jump @1491
      :                          @11888 [@dyn 1269]
171846: 82 16 40 02              s1 = u64 [sp + 0x240]
171850: 82 1b 48 02              a4 = u64 [sp + 0x248]
171854: 82 17 38 02              a0 = u64 [sp + 0x238]
171858: 7b 17 60                 u64 [sp + 0x60] = a0
171861: 33 07 02                 a0 = 0x2
171864: 33 08                    a1 = 0
171866: 33 09                    a2 = 0
171868: 64 6a                    a3 = s1
171870: 33 00 ec 09              ra = 0x9ec
171874: 0a 64                    ecalli 100 // 'log'
171876: 01                       fallthrough
      :                          @11889 [@dyn 1270]
171877: 82 1c 60                 a5 = u64 [sp + 0x60]
171880: 82 17 68                 a0 = u64 [sp + 0x68]
171883: c8 c7 07                 a0 = a0 + a5
171886: 53 37 00 00 ff 25        jump @11895 if a0 <u 4294901760
      :                          @11890
171892: 33 07 c0 22 03           a0 = 0x322c0
171897: 95 77 00 00 01           a0 = a0 + 0x10000
171902: 01                       fallthrough
      :                          @11891
171903: 82 78                    a1 = u64 [a0]
171905: c9 87 09                 a2 = a0 - a1
171908: ab 69 0f                 jump @11895 if a2 != s1
      :                          @11892
171911: c9 c8 09                 a2 = a1 - a5
171914: 01                       fallthrough
      :                          @11893
171915: 82 7a                    a3 = u64 [a0]
171917: ab 8a f2                 jump @11891 if a3 != a1
      :                          @11894
171920: 7b 79                    u64 [a0] = a2
171922: 01                       fallthrough
      :                          @11895
171923: 3a 07 78 12 03           a0 = u64 [0x31278]
171928: 97 78 0d                 a1 = a0 << 0xd
171931: d3 87 07                 a0 = a0 ^ a1
171934: 98 78 07                 a1 = a0 >> 0x7
171937: d3 87 07                 a0 = a0 ^ a1
171940: 97 78 11                 a1 = a0 << 0x11
171943: d3 87 07                 a0 = a0 ^ a1
171946: 3a 08 b8 11 03           a1 = u64 [0x311b8]
171951: 82 19 70                 a2 = u64 [sp + 0x70]
171954: ca 97 09                 a2 = a0 * a2
171957: 3e 07 78 12 03           u64 [0x31278] = a0
171962: d6 89 07                 a0 = a2 mulhu a1
171965: 98 77 12                 a0 = a0 >> 0x12
171968: 96 77 40 42 0f           a0 = a0 * 0xf4240
171973: c9 79 09                 a2 = a2 - a0
171976: 7b 19 10 01              u64 [sp + 0x110] = a2
171980: 3a 07 78 12 03           a0 = u64 [0x31278]
171985: 97 78 0d                 a1 = a0 << 0xd
171988: d3 87 07                 a0 = a0 ^ a1
171991: 98 78 07                 a1 = a0 >> 0x7
171994: d3 78 08                 a1 = a1 ^ a0
171997: 97 87 11                 a0 = a1 << 0x11
172000: d3 87 07                 a0 = a0 ^ a1
172003: 3e 07 78 12 03           u64 [0x31278] = a0
172008: 82 17 10 01              a0 = u64 [sp + 0x110]
172012: 84 88 03                 a1 = a1 & 0x3
172015: 95 88 02                 a1 = a1 + 0x2
172018: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
172022: 33 00 ee 09              ra = 0x9ee
172026: 33 03                    t1 = 0
172028: 33 09 40                 a2 = 0x40
172031: c1 89 09                 i32 a2 = a2 /u a1
172034: 9b 99 01                 a2 = 0x1 << a2
172037: e6 97 0a                 a3 = minu(a0, a2)
172040: 95 a4 01                 t2 = a3 + 0x1
172043: 83 82 01                 i32 t0 = a1 + 0x1
172046: 33 0b ff                 a4 = 0xffffffffffffffff
172049: 28 bc eb fd              jump @2420
      :                          @11896 [@dyn 1271]
172053: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
172057: 95 17 10 01              a0 = sp + 0x110
172061: 7b 17 90 02              u64 [sp + 0x290] = a0
172065: 33 07 28 0c              a0 = 0xc28
172069: 7b 17 98 02              u64 [sp + 0x298] = a0
172073: 95 18 b0 01              a1 = sp + 0x1b0
172077: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
172081: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
172085: 95 18 c8 01              a1 = sp + 0x1c8
172089: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
172093: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
172097: 33 07 48 26 01           a0 = 0x12648
172102: 7b 17 38 02              u64 [sp + 0x238] = a0
172106: 49 21 40 02 03           u64 [sp + 576] = 0x3
172111: 49 21 58 02              u64 [sp + 600] = 0
172115: 95 18 90 02              a1 = sp + 0x290
172119: 7b 18 48 02              u64 [sp + 0x248] = a1
172123: 49 21 50 02 03           u64 [sp + 592] = 0x3
172128: 95 17 08 02              a0 = sp + 0x208
172132: 95 18 38 02              a1 = sp + 0x238
172136: 50 20 f0 09 d7 ae fd     ra = 2544, jump @1491
      :                          @11897 [@dyn 1272]
172143: 82 16 10 02              s1 = u64 [sp + 0x210]
172147: 82 1b 18 02              a4 = u64 [sp + 0x218]
172151: 82 17 08 02              a0 = u64 [sp + 0x208]
172155: 7b 17 70                 u64 [sp + 0x70] = a0
172158: 33 07 02                 a0 = 0x2
172161: 33 08                    a1 = 0
172163: 33 09                    a2 = 0
172165: 64 6a                    a3 = s1
172167: 33 00 f2 09              ra = 0x9f2
172171: 0a 64                    ecalli 100 // 'log'
172173: 01                       fallthrough
      :                          @11898 [@dyn 1273]
172174: 82 1c 70                 a5 = u64 [sp + 0x70]
172177: 82 17 68                 a0 = u64 [sp + 0x68]
172180: c8 c7 07                 a0 = a0 + a5
172183: 55 37 00 00 ff 09        jump @11900 if a0 >=u 4294901760
      :                          @11899
172189: 28 29 41                 jump @12856
      :                          @11900
172192: 33 07 c0 22 03           a0 = 0x322c0
172197: 95 77 00 00 01           a0 = a0 + 0x10000
172202: 01                       fallthrough
      :                          @11901
172203: 82 78                    a1 = u64 [a0]
172205: c9 87 09                 a2 = a0 - a1
172208: aa 69 06                 jump @11903 if a2 == s1
      :                          @11902
172211: 28 13 41                 jump @12856
      :                          @11903
172214: c9 c8 09                 a2 = a1 - a5
172217: 01                       fallthrough
      :                          @11904
172218: 82 7a                    a3 = u64 [a0]
172220: ab 8a ef                 jump @11901 if a3 != a1
      :                          @11905
172223: 7b 79                    u64 [a0] = a2
172225: 33 0b                    a4 = 0
172227: 01                       fallthrough
      :                          @11906
172228: ab 8a e7                 jump @11901 if a3 != a1
      :                          @11907
172231: 28 ff 40                 jump @12856
      :                          @11908 [@dyn 1274]
172234: 3a 07 78 12 03           a0 = u64 [0x31278]
172239: 3a 0a 60 11 03           a3 = u64 [0x31160]
172244: 97 78 0d                 a1 = a0 << 0xd
172247: d3 87 07                 a0 = a0 ^ a1
172250: 98 78 07                 a1 = a0 >> 0x7
172253: d3 87 07                 a0 = a0 ^ a1
172256: 97 78 11                 a1 = a0 << 0x11
172259: d3 87 07                 a0 = a0 ^ a1
172262: 7b 1a 70                 u64 [sp + 0x70] = a3
172265: ca a7 08                 a1 = a0 * a3
172268: 3e 07 78 12 03           u64 [0x31278] = a0
172273: 68 87                    a0 = clz a1
172275: 7a 17 b0 01              u32 [sp + 0x1b0] = a0
172279: 6a 87                    a0 = ctz a1
172281: 7a 17 c8 01              u32 [sp + 0x1c8] = a0
172285: 66 87                    a0 = cpop a1
172287: 7a 17 20 01              u32 [sp + 0x120] = a0
172291: 84 77 01                 a0 = a0 & 0x1
172294: 7a 17 e0 01              u32 [sp + 0x1e0] = a0
172298: 95 17 b0 01              a0 = sp + 0x1b0
172302: 7b 17 90 02              u64 [sp + 0x290] = a0
172306: 33 07 5e 0c              a0 = 0xc5e
172310: 7b 17 98 02              u64 [sp + 0x298] = a0
172314: 95 18 c8 01              a1 = sp + 0x1c8
172318: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
172322: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
172326: 95 18 20 01              a1 = sp + 0x120
172330: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
172334: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
172338: 95 18 e0 01              a1 = sp + 0x1e0
172342: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
172346: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
172350: 33 07 98 26 01           a0 = 0x12698
172355: 7b 17 38 02              u64 [sp + 0x238] = a0
172359: 49 21 40 02 04           u64 [sp + 576] = 0x4
172364: 49 21 58 02              u64 [sp + 600] = 0
172368: 95 18 90 02              a1 = sp + 0x290
172372: 7b 18 48 02              u64 [sp + 0x248] = a1
172376: 49 21 50 02 04           u64 [sp + 592] = 0x4
172381: 95 17 08 02              a0 = sp + 0x208
172385: 95 18 38 02              a1 = sp + 0x238
172389: 50 20 f6 09 da ad fd     ra = 2550, jump @1491
      :                          @11909 [@dyn 1275]
172396: 82 16 10 02              s1 = u64 [sp + 0x210]
172400: 82 1b 18 02              a4 = u64 [sp + 0x218]
172404: 82 17 08 02              a0 = u64 [sp + 0x208]
172408: 7b 17 60                 u64 [sp + 0x60] = a0
172411: 33 07 02                 a0 = 0x2
172414: 33 08                    a1 = 0
172416: 33 09                    a2 = 0
172418: 64 6a                    a3 = s1
172420: 33 00 f8 09              ra = 0x9f8
172424: 0a 64                    ecalli 100 // 'log'
172426: 01                       fallthrough
      :                          @11910 [@dyn 1276]
172427: 82 1c 60                 a5 = u64 [sp + 0x60]
172430: 82 17 68                 a0 = u64 [sp + 0x68]
172433: c8 c7 07                 a0 = a0 + a5
172436: 53 37 00 00 ff 25        jump @11916 if a0 <u 4294901760
      :                          @11911
172442: 33 07 c0 22 03           a0 = 0x322c0
172447: 95 77 00 00 01           a0 = a0 + 0x10000
172452: 01                       fallthrough
      :                          @11912
172453: 82 78                    a1 = u64 [a0]
172455: c9 87 09                 a2 = a0 - a1
172458: ab 69 0f                 jump @11916 if a2 != s1
      :                          @11913
172461: c9 c8 09                 a2 = a1 - a5
172464: 01                       fallthrough
      :                          @11914
172465: 82 7a                    a3 = u64 [a0]
172467: ab 8a f2                 jump @11912 if a3 != a1
      :                          @11915
172470: 7b 79                    u64 [a0] = a2
172472: 01                       fallthrough
      :                          @11916
172473: 3a 07 78 12 03           a0 = u64 [0x31278]
172478: 97 78 0d                 a1 = a0 << 0xd
172481: d3 87 07                 a0 = a0 ^ a1
172484: 98 78 07                 a1 = a0 >> 0x7
172487: d3 87 07                 a0 = a0 ^ a1
172490: 97 78 11                 a1 = a0 << 0x11
172493: d3 87 07                 a0 = a0 ^ a1
172496: 82 18 70                 a1 = u64 [sp + 0x70]
172499: ca 87 0a                 a3 = a0 * a1
172502: 3e 07 78 12 03           u64 [0x31278] = a0
172507: 97 a8 20                 a1 = a3 << 0x20
172510: 98 88 20                 a1 = a1 >> 0x20
172513: 8b a9 01                 i32 a2 = a3 >> 0x1
172516: d3 89 07                 a0 = a2 ^ a1
172519: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
172523: 6f aa                    a3 = reverse a3
172525: 98 ab 24                 a4 = a3 >> 0x24
172528: 84 bb 0f 0f 0f 0f        a4 = a4 & 0xf0f0f0f
172534: 98 aa 1c                 a3 = a3 >> 0x1c
172537: 84 aa f0 f0 f0 f0        a3 = a3 & 0xfffffffff0f0f0f0
172543: 83 aa                    i32 a3 = a3 + 0
172545: d4 ba 0a                 a3 = a3 | a4
172548: 98 ab 02                 a4 = a3 >> 0x2
172551: 84 bb 33 33 33 33        a4 = a4 & 0x33333333
172557: 84 aa 33 33 33 33        a3 = a3 & 0x33333333
172563: 8a aa 02                 i32 a3 = a3 << 0x2
172566: d4 ba 0a                 a3 = a3 | a4
172569: 98 ab 01                 a4 = a3 >> 0x1
172572: 33 0c 55 55 55 55        a5 = 0x55555555
172578: d2 cb 0b                 a4 = a4 & a5
172581: d2 ca 0a                 a3 = a3 & a5
172584: 97 aa 01                 a3 = a3 << 0x1
172587: d4 ba 0a                 a3 = a3 | a4
172590: 7a 1a b0 01              u32 [sp + 0x1b0] = a3
172594: ab 89 06                 jump @11918 if a2 != a1
      :                          @11917
172597: 28 06 47                 jump @12995
      :                          @11918
172600: 64 78                    a1 = a0
172602: 01                       fallthrough
      :                          @11919
172603: 98 88 01                 a1 = a1 >> 0x1
172606: d3 87 07                 a0 = a0 ^ a1
172609: 52 08 fa                 jump @11919 if a1 != 0
      :                          @11920
172612: 28 fa 46                 jump @12996
      :                          @11921 [@dyn 1277]
172615: 95 17 38 02              a0 = sp + 0x238
172619: 95 16 38 02              s1 = sp + 0x238
172623: 33 00 fc 09              ra = 0x9fc
172627: 95 11 b8                 sp = sp + 0xffffffffffffffb8
172630: 7b 10 40                 u64 [sp + 0x40] = ra
172633: 7b 15 38                 u64 [sp + 0x38] = s0
172636: 7b 16 30                 u64 [sp + 0x30] = s1
172639: 33 09 c0 22 03           a2 = 0x322c0
172644: 33 08 00 00 01           a1 = 0x10000
172649: c8 89 09                 a2 = a2 + a1
172652: 28 5e ee fd              jump @2539
      :                          @11922 [@dyn 1278]
172656: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
172660: 33 07 20 02              a0 = 0x220
172664: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
172668: 33 07 40 27 01           a0 = 0x12740
172673: 7b 17 90 02              u64 [sp + 0x290] = a0
172677: 49 21 98 02 01           u64 [sp + 664] = 0x1
172682: 49 21 b0 02              u64 [sp + 688] = 0
172686: 95 18 e0 01              a1 = sp + 0x1e0
172690: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
172694: 49 21 a8 02 01           u64 [sp + 680] = 0x1
172699: 95 17 08 02              a0 = sp + 0x208
172703: 95 18 90 02              a1 = sp + 0x290
172707: 50 20 fe 09 9c ac fd     ra = 2558, jump @1491
      :                          @11923 [@dyn 1279]
172714: 82 18 38 02              a1 = u64 [sp + 0x238]
172718: 51 08 2e                 jump @11930 if a1 == 0
      :                          @11924
172721: 56 28 00 20 2b           jump @11930 if a1 >u 8192
      :                          @11925
172726: 82 17 40 02              a0 = u64 [sp + 0x240]
172730: 97 88 03                 a1 = a1 << 0x3
172733: 33 09 c0 22 03           a2 = 0x322c0
172738: 95 99 00 00 01           a2 = a2 + 0x10000
172743: 01                       fallthrough
      :                          @11926
172744: 82 9a                    a3 = u64 [a2]
172746: c9 a9 0b                 a4 = a2 - a3
172749: ab 7b 0f                 jump @11930 if a4 != a0
      :                          @11927
172752: c9 8a 0b                 a4 = a3 - a1
172755: 01                       fallthrough
      :                          @11928
172756: 82 9c                    a5 = u64 [a2]
172758: ab ac f2                 jump @11926 if a5 != a3
      :                          @11929
172761: 7b 9b                    u64 [a2] = a4
172763: 01                       fallthrough
      :                          @11930
172764: 82 16 10 02              s1 = u64 [sp + 0x210]
172768: 82 1b 18 02              a4 = u64 [sp + 0x218]
172772: 82 17 08 02              a0 = u64 [sp + 0x208]
172776: 7b 17 70                 u64 [sp + 0x70] = a0
172779: 33 07 02                 a0 = 0x2
172782: 33 08                    a1 = 0
172784: 33 09                    a2 = 0
172786: 64 6a                    a3 = s1
172788: 33 00 00 0a              ra = 0xa00
172792: 0a 64                    ecalli 100 // 'log'
172794: 01                       fallthrough
      :                          @11931 [@dyn 1280]
172795: 82 1c 70                 a5 = u64 [sp + 0x70]
172798: 82 17 68                 a0 = u64 [sp + 0x68]
172801: c8 c7 07                 a0 = a0 + a5
172804: 55 37 00 00 ff 09        jump @11933 if a0 >=u 4294901760
      :                          @11932
172810: 28 bc 3e                 jump @12856
      :                          @11933
172813: 33 07 c0 22 03           a0 = 0x322c0
172818: 95 77 00 00 01           a0 = a0 + 0x10000
172823: 01                       fallthrough
      :                          @11934
172824: 82 78                    a1 = u64 [a0]
172826: c9 87 09                 a2 = a0 - a1
172829: aa 69 06                 jump @11936 if a2 == s1
      :                          @11935
172832: 28 a6 3e                 jump @12856
      :                          @11936
172835: c9 c8 09                 a2 = a1 - a5
172838: 01                       fallthrough
      :                          @11937
172839: 82 7a                    a3 = u64 [a0]
172841: ab 8a ef                 jump @11934 if a3 != a1
      :                          @11938
172844: 7b 79                    u64 [a0] = a2
172846: 33 0b                    a4 = 0
172848: 01                       fallthrough
      :                          @11939
172849: ab 8a e7                 jump @11934 if a3 != a1
      :                          @11940
172852: 28 92 3e                 jump @12856
      :                          @11941 [@dyn 1281]
172855: 3a 08 78 12 03           a1 = u64 [0x31278]
172860: 97 89 0d                 a2 = a1 << 0xd
172863: d3 98 08                 a1 = a1 ^ a2
172866: 98 89 07                 a2 = a1 >> 0x7
172869: d3 98 08                 a1 = a1 ^ a2
172872: 97 89 11                 a2 = a1 << 0x11
172875: d3 98 08                 a1 = a1 ^ a2
172878: 3a 09 60 11 03           a2 = u64 [0x31160]
172883: 3a 0a 68 11 03           a3 = u64 [0x31168]
172888: 3e 08 78 12 03           u64 [0x31278] = a1
172893: ca 98 07                 a0 = a1 * a2
172896: 98 78 03                 a1 = a0 >> 0x3
172899: d6 a8 08                 a1 = a1 mulhu a3
172902: 98 88 04                 a1 = a1 >> 0x4
172905: 33 09 e8 03              a2 = 0x3e8
172909: ca 98 08                 a1 = a1 * a2
172912: c9 87 07                 a0 = a0 - a1
172915: 7b 17 20 01              u64 [sp + 0x120] = a0
172919: 50 20 04 0a 63 ee fd     ra = 2564, jump @2559
      :                          @11942 [@dyn 1282]
172926: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
172930: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
172934: 95 17 20 01              a0 = sp + 0x120
172938: 7b 17 38 02              u64 [sp + 0x238] = a0
172942: 33 07 28 0c              a0 = 0xc28
172946: 7b 17 40 02              u64 [sp + 0x240] = a0
172950: 95 18 e0 01              a1 = sp + 0x1e0
172954: 7b 18 48 02              u64 [sp + 0x248] = a1
172958: 7b 17 50 02              u64 [sp + 0x250] = a0
172962: 33 07 18 11 01           a0 = 0x11118
172967: 7b 17 90 02              u64 [sp + 0x290] = a0
172971: 49 21 98 02 02           u64 [sp + 664] = 0x2
172976: 49 21 b0 02              u64 [sp + 688] = 0
172980: 95 18 38 02              a1 = sp + 0x238
172984: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
172988: 49 21 a8 02 02           u64 [sp + 680] = 0x2
172993: 95 17 08 02              a0 = sp + 0x208
172997: 95 18 90 02              a1 = sp + 0x290
173001: 50 20 06 0a 76 ab fd     ra = 2566, jump @1491
      :                          @11943 [@dyn 1283]
173008: 82 16 10 02              s1 = u64 [sp + 0x210]
173012: 82 1b 18 02              a4 = u64 [sp + 0x218]
173016: 82 17 08 02              a0 = u64 [sp + 0x208]
173020: 7b 17 70                 u64 [sp + 0x70] = a0
173023: 33 07 02                 a0 = 0x2
173026: 33 08                    a1 = 0
173028: 33 09                    a2 = 0
173030: 64 6a                    a3 = s1
173032: 33 00 08 0a              ra = 0xa08
173036: 0a 64                    ecalli 100 // 'log'
173038: 01                       fallthrough
      :                          @11944 [@dyn 1284]
173039: 82 1c 70                 a5 = u64 [sp + 0x70]
173042: 82 17 68                 a0 = u64 [sp + 0x68]
173045: c8 c7 07                 a0 = a0 + a5
173048: 55 37 00 00 ff 09        jump @11946 if a0 >=u 4294901760
      :                          @11945
173054: 28 c8 3d                 jump @12856
      :                          @11946
173057: 33 07 c0 22 03           a0 = 0x322c0
173062: 95 77 00 00 01           a0 = a0 + 0x10000
173067: 01                       fallthrough
      :                          @11947
173068: 82 78                    a1 = u64 [a0]
173070: c9 87 09                 a2 = a0 - a1
173073: aa 69 06                 jump @11949 if a2 == s1
      :                          @11948
173076: 28 b2 3d                 jump @12856
      :                          @11949
173079: c9 c8 09                 a2 = a1 - a5
173082: 01                       fallthrough
      :                          @11950
173083: 82 7a                    a3 = u64 [a0]
173085: ab 8a ef                 jump @11947 if a3 != a1
      :                          @11951
173088: 7b 79                    u64 [a0] = a2
173090: 33 0b                    a4 = 0
173092: 01                       fallthrough
      :                          @11952
173093: ab 8a e7                 jump @11947 if a3 != a1
      :                          @11953
173096: 28 9e 3d                 jump @12856
      :                          @11954 [@dyn 1285]
173099: 3a 08 78 12 03           a1 = u64 [0x31278]
173104: 3a 09 60 11 03           a2 = u64 [0x31160]
173109: 97 8a 0d                 a3 = a1 << 0xd
173112: d3 a8 08                 a1 = a1 ^ a3
173115: 98 8a 07                 a3 = a1 >> 0x7
173118: d3 a8 08                 a1 = a1 ^ a3
173121: 97 8a 11                 a3 = a1 << 0x11
173124: d3 a8 08                 a1 = a1 ^ a3
173127: ca 98 0a                 a3 = a1 * a2
173130: 3e 08 78 12 03           u64 [0x31278] = a1
173135: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
173145: d6 8a 08                 a1 = a3 mulhu a1
173148: 98 88 04                 a1 = a1 >> 0x4
173151: 96 88 14                 a1 = a1 * 0x14
173154: c9 8a 0a                 a3 = a3 - a1
173157: 7b 1a 10 01              u64 [sp + 0x110] = a3
173161: 3a 08 78 12 03           a1 = u64 [0x31278]
173166: 97 8a 0d                 a3 = a1 << 0xd
173169: d3 a8 08                 a1 = a1 ^ a3
173172: 98 8a 07                 a3 = a1 >> 0x7
173175: d3 a8 08                 a1 = a1 ^ a3
173178: 97 8a 11                 a3 = a1 << 0x11
173181: d3 8a 0a                 a3 = a3 ^ a1
173184: 3e 0a 78 12 03           u64 [0x31278] = a3
173189: 82 17 10 01              a0 = u64 [sp + 0x110]
173193: 95 72 01                 t0 = a0 + 0x1
173196: 52 02 06                 jump @11956 if t0 != 0
      :                          @11955
173199: 28 4b 4f                 jump @13228
      :                          @11956
173202: ca 9a 09                 a2 = a3 * a2
173205: cd 29 0a                 a3 = a2 %u t0
173208: 7b 1a b0 01              u64 [sp + 0x1b0] = a3
173212: 33 09 01                 a2 = 0x1
173215: 33 0b 01                 a4 = 0x1
173218: 51 07 1e                 jump @11961 if a0 == 0
      :                          @11957
173221: 33 0c 01                 a5 = 0x1
173224: 64 7b                    a4 = a0
173226: aa c7 12                 jump @11960 if a0 == a5
      :                          @11958
173229: 33 0b 01                 a4 = 0x1
173232: 01                       fallthrough
      :                          @11959
173233: 95 c6 01                 s1 = a5 + 0x1
173236: ca bc 0b                 a4 = a5 * a4
173239: 64 6c                    a5 = s1
173241: ab 67 f8                 jump @11959 if a0 != s1
      :                          @11960
173244: ca 7b 0b                 a4 = a4 * a0
173247: 01                       fallthrough
      :                          @11961
173248: c9 a7 0c                 a5 = a0 - a3
173251: e6 ca 0a                 a3 = minu(a3, a5)
173254: 7b 1b c8 01              u64 [sp + 0x1c8] = a4
173258: 51 0a 27                 jump @11964 if a3 == 0
      :                          @11962
173261: 33 09 01                 a2 = 0x1
173264: 33 0b 01                 a4 = 0x1
173267: 01                       fallthrough
      :                          @11963
173268: d8 ab 0c                 a5 = a4 <u a3
173271: 85 c6 01                 s1 = a5 ^ 0x1
173274: c9 b2 08                 a1 = t0 - a4
173277: c8 bc 0c                 a5 = a5 + a4
173280: ca 98 08                 a1 = a1 * a2
173283: d8 ca 09                 a2 = a3 <u a5
173286: d4 96 06                 s1 = s1 | a2
173289: cb b8 09                 a2 = a1 /u a4
173292: 64 cb                    a4 = a5
173294: 51 06 e6                 jump @11963 if s1 == 0
      :                          @11964
173297: 7b 19 20 01              u64 [sp + 0x120] = a2
173301: 50 20 0c 0a 2b ed fd     ra = 2572, jump @2563
      :                          @11965 [@dyn 1286]
173308: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
173312: 95 17 10 01              a0 = sp + 0x110
173316: 7b 17 90 02              u64 [sp + 0x290] = a0
173320: 33 08 28 0c              a1 = 0xc28
173324: 7b 18 98 02              u64 [sp + 0x298] = a1
173328: 95 19 c8 01              a2 = sp + 0x1c8
173332: 7b 19 a0 02              u64 [sp + 0x2a0] = a2
173336: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
173340: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
173344: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
173348: 95 19 b0 01              a2 = sp + 0x1b0
173352: 7b 19 c0 02              u64 [sp + 0x2c0] = a2
173356: 7b 18 c8 02              u64 [sp + 0x2c8] = a1
173360: 95 19 20 01              a2 = sp + 0x120
173364: 7b 19 d0 02              u64 [sp + 0x2d0] = a2
173368: 7b 18 d8 02              u64 [sp + 0x2d8] = a1
173372: 7b 17 e0 02              u64 [sp + 0x2e0] = a0
173376: 7b 18 e8 02              u64 [sp + 0x2e8] = a1
173380: 95 17 e0 01              a0 = sp + 0x1e0
173384: 7b 17 f0 02              u64 [sp + 0x2f0] = a0
173388: 7b 18 f8 02              u64 [sp + 0x2f8] = a1
173392: 33 07 70 27 01           a0 = 0x12770
173397: 7b 17 38 02              u64 [sp + 0x238] = a0
173401: 49 21 40 02 07           u64 [sp + 576] = 0x7
173406: 49 21 58 02              u64 [sp + 600] = 0
173410: 95 18 90 02              a1 = sp + 0x290
173414: 7b 18 48 02              u64 [sp + 0x248] = a1
173418: 49 21 50 02 07           u64 [sp + 592] = 0x7
173423: 95 17 08 02              a0 = sp + 0x208
173427: 95 18 38 02              a1 = sp + 0x238
173431: 50 20 0e 0a c8 a9 fd     ra = 2574, jump @1491
      :                          @11966 [@dyn 1287]
173438: 82 16 10 02              s1 = u64 [sp + 0x210]
173442: 82 1b 18 02              a4 = u64 [sp + 0x218]
173446: 82 17 08 02              a0 = u64 [sp + 0x208]
173450: 7b 17 70                 u64 [sp + 0x70] = a0
173453: 33 07 02                 a0 = 0x2
173456: 33 08                    a1 = 0
173458: 33 09                    a2 = 0
173460: 64 6a                    a3 = s1
173462: 33 00 10 0a              ra = 0xa10
173466: 0a 64                    ecalli 100 // 'log'
173468: 01                       fallthrough
      :                          @11967 [@dyn 1288]
173469: 82 1c 70                 a5 = u64 [sp + 0x70]
173472: 82 17 68                 a0 = u64 [sp + 0x68]
173475: c8 c7 07                 a0 = a0 + a5
173478: 55 37 00 00 ff 09        jump @11969 if a0 >=u 4294901760
      :                          @11968
173484: 28 1a 3c                 jump @12856
      :                          @11969
173487: 33 07 c0 22 03           a0 = 0x322c0
173492: 95 77 00 00 01           a0 = a0 + 0x10000
173497: 01                       fallthrough
      :                          @11970
173498: 82 78                    a1 = u64 [a0]
173500: c9 87 09                 a2 = a0 - a1
173503: aa 69 06                 jump @11972 if a2 == s1
      :                          @11971
173506: 28 04 3c                 jump @12856
      :                          @11972
173509: c9 c8 09                 a2 = a1 - a5
173512: 01                       fallthrough
      :                          @11973
173513: 82 7a                    a3 = u64 [a0]
173515: ab 8a ef                 jump @11970 if a3 != a1
      :                          @11974
173518: 7b 79                    u64 [a0] = a2
173520: 33 0b                    a4 = 0
173522: 01                       fallthrough
      :                          @11975
173523: ab 8a e7                 jump @11970 if a3 != a1
      :                          @11976
173526: 28 f0 3b                 jump @12856
      :                          @11977 [@dyn 1289]
173529: 3a 07 78 12 03           a0 = u64 [0x31278]
173534: 3a 0a 60 11 03           a3 = u64 [0x31160]
173539: 97 78 0d                 a1 = a0 << 0xd
173542: d3 87 07                 a0 = a0 ^ a1
173545: 98 78 07                 a1 = a0 >> 0x7
173548: d3 87 07                 a0 = a0 ^ a1
173551: 97 78 11                 a1 = a0 << 0x11
173554: d3 87 07                 a0 = a0 ^ a1
173557: ca a7 08                 a1 = a0 * a3
173560: 3e 07 78 12 03           u64 [0x31278] = a0
173565: 7b 18 10 01              u64 [sp + 0x110] = a1
173569: 3a 07 78 12 03           a0 = u64 [0x31278]
173574: 97 78 0d                 a1 = a0 << 0xd
173577: d3 87 07                 a0 = a0 ^ a1
173580: 98 78 07                 a1 = a0 >> 0x7
173583: d3 87 07                 a0 = a0 ^ a1
173586: 97 78 11                 a1 = a0 << 0x11
173589: d3 87 07                 a0 = a0 ^ a1
173592: 3e 07 78 12 03           u64 [0x31278] = a0
173597: 82 18 10 01              a1 = u64 [sp + 0x110]
173601: 7b 1a 70                 u64 [sp + 0x70] = a3
173604: ca a7 07                 a0 = a0 * a3
173607: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
173611: 97 89 20                 a2 = a1 << 0x20
173614: 98 9a 20                 a3 = a2 >> 0x20
173617: 98 88 20                 a1 = a1 >> 0x20
173620: 97 7b 20                 a4 = a0 << 0x20
173623: 98 bc 20                 a5 = a4 >> 0x20
173626: 98 77 20                 a0 = a0 >> 0x20
173629: d6 b9 09                 a2 = a2 mulhu a4
173632: ca 78 0b                 a4 = a1 * a0
173635: c8 a8 08                 a1 = a1 + a3
173638: c8 c7 07                 a0 = a0 + a5
173641: d6 78 0a                 a3 = a1 mulhu a0
173644: ca 78 07                 a0 = a1 * a0
173647: c8 b9 08                 a1 = a2 + a4
173650: d8 98 0c                 a5 = a1 <u a2
173653: d8 87 06                 s1 = a0 <u a1
173656: bf ca 0a                 i32 a3 = a3 - a5
173659: bf 6a 0a                 i32 a3 = a3 - s1
173662: c9 87 07                 a0 = a0 - a1
173665: 97 aa 20                 a3 = a3 << 0x20
173668: 98 78 20                 a1 = a0 >> 0x20
173671: 97 77 20                 a0 = a0 << 0x20
173674: d4 b8 08                 a1 = a1 | a4
173677: d4 a8 08                 a1 = a1 | a3
173680: d4 97 07                 a0 = a0 | a2
173683: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
173687: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
173691: 95 17 10 01              a0 = sp + 0x110
173695: 7b 17 90 02              u64 [sp + 0x290] = a0
173699: 33 07 28 0c              a0 = 0xc28
173703: 7b 17 98 02              u64 [sp + 0x298] = a0
173707: 95 18 b0 01              a1 = sp + 0x1b0
173711: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
173715: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
173719: 95 17 e0 01              a0 = sp + 0x1e0
173723: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
173727: 33 07 74 0c              a0 = 0xc74
173731: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
173735: 33 07 f0 27 01           a0 = 0x127f0
173740: 7b 17 38 02              u64 [sp + 0x238] = a0
173744: 49 21 40 02 03           u64 [sp + 576] = 0x3
173749: 49 21 58 02              u64 [sp + 600] = 0
173753: 95 18 90 02              a1 = sp + 0x290
173757: 7b 18 48 02              u64 [sp + 0x248] = a1
173761: 49 21 50 02 03           u64 [sp + 592] = 0x3
173766: 95 17 08 02              a0 = sp + 0x208
173770: 95 18 38 02              a1 = sp + 0x238
173774: 50 20 14 0a 71 a8 fd     ra = 2580, jump @1491
      :                          @11978 [@dyn 1290]
173781: 82 16 10 02              s1 = u64 [sp + 0x210]
173785: 82 1b 18 02              a4 = u64 [sp + 0x218]
173789: 82 17 08 02              a0 = u64 [sp + 0x208]
173793: 7b 17 60                 u64 [sp + 0x60] = a0
173796: 33 07 02                 a0 = 0x2
173799: 33 08                    a1 = 0
173801: 33 09                    a2 = 0
173803: 64 6a                    a3 = s1
173805: 33 00 16 0a              ra = 0xa16
173809: 0a 64                    ecalli 100 // 'log'
173811: 01                       fallthrough
      :                          @11979 [@dyn 1291]
173812: 82 1c 60                 a5 = u64 [sp + 0x60]
173815: 82 17 68                 a0 = u64 [sp + 0x68]
173818: c8 c7 07                 a0 = a0 + a5
173821: 53 37 00 00 ff 25        jump @11985 if a0 <u 4294901760
      :                          @11980
173827: 33 07 c0 22 03           a0 = 0x322c0
173832: 95 77 00 00 01           a0 = a0 + 0x10000
173837: 01                       fallthrough
      :                          @11981
173838: 82 78                    a1 = u64 [a0]
173840: c9 87 09                 a2 = a0 - a1
173843: ab 69 0f                 jump @11985 if a2 != s1
      :                          @11982
173846: c9 c8 09                 a2 = a1 - a5
173849: 01                       fallthrough
      :                          @11983
173850: 82 7a                    a3 = u64 [a0]
173852: ab 8a f2                 jump @11981 if a3 != a1
      :                          @11984
173855: 7b 79                    u64 [a0] = a2
173857: 01                       fallthrough
      :                          @11985
173858: 33 02 78 12 03           t0 = 0x31278
173863: 3a 07 78 12 03           a0 = u64 [0x31278]
173868: 97 78 0d                 a1 = a0 << 0xd
173871: d3 87 07                 a0 = a0 ^ a1
173874: 98 78 07                 a1 = a0 >> 0x7
173877: d3 87 07                 a0 = a0 ^ a1
173880: 97 78 11                 a1 = a0 << 0x11
173883: d3 87 07                 a0 = a0 ^ a1
173886: 3e 07 78 12 03           u64 [0x31278] = a0
173891: 3a 08 78 12 03           a1 = u64 [0x31278]
173896: 97 89 0d                 a2 = a1 << 0xd
173899: d3 98 08                 a1 = a1 ^ a2
173902: 98 89 07                 a2 = a1 >> 0x7
173905: d3 98 08                 a1 = a1 ^ a2
173908: 97 89 11                 a2 = a1 << 0x11
173911: d3 98 08                 a1 = a1 ^ a2
173914: 3e 08 78 12 03           u64 [0x31278] = a1
173919: 3a 09 78 12 03           a2 = u64 [0x31278]
173924: 82 1c 70                 a5 = u64 [sp + 0x70]
173927: ca c7 07                 a0 = a0 * a5
173930: 97 9a 0d                 a3 = a2 << 0xd
173933: d3 a9 09                 a2 = a2 ^ a3
173936: 98 9a 07                 a3 = a2 >> 0x7
173939: d3 a9 09                 a2 = a2 ^ a3
173942: 97 9a 11                 a3 = a2 << 0x11
173945: d3 a9 09                 a2 = a2 ^ a3
173948: 3e 09 78 12 03           u64 [0x31278] = a2
173953: 3a 0a 78 12 03           a3 = u64 [0x31278]
173958: ca c8 06                 s1 = a1 * a5
173961: ca c9 09                 a2 = a2 * a5
173964: 97 ab 0d                 a4 = a3 << 0xd
173967: d3 ba 0a                 a3 = a3 ^ a4
173970: 98 ab 07                 a4 = a3 >> 0x7
173973: d3 ba 0a                 a3 = a3 ^ a4
173976: 97 ab 11                 a4 = a3 << 0x11
173979: d3 ab 0b                 a4 = a4 ^ a3
173982: ca cb 0a                 a3 = a4 * a5
173985: 3e 0b 78 12 03           u64 [0x31278] = a4
173990: c8 97 0b                 a4 = a0 + a2
173993: d8 7b 0c                 a5 = a4 <u a0
173996: c8 6a 08                 a1 = a3 + s1
173999: c8 c8 08                 a1 = a1 + a5
174002: 7b 1b c8 01              u64 [sp + 0x1c8] = a4
174006: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
174010: c9 97 08                 a1 = a0 - a2
174013: d8 97 0b                 a4 = a0 <u a2
174016: c9 a6 0c                 a5 = s1 - a3
174019: c9 bc 0c                 a5 = a5 - a4
174022: 7b 18 20 01              u64 [sp + 0x120] = a1
174026: 7b 1c 28 01              u64 [sp + 0x128] = a5
174030: ca 79 0b                 a4 = a2 * a0
174033: d6 79 08                 a1 = a2 mulhu a0
174036: d6 7a 0c                 a5 = a3 mulhu a0
174039: ca 7a 07                 a0 = a3 * a0
174042: c8 78 08                 a1 = a1 + a0
174045: d8 78 07                 a0 = a1 <u a0
174048: c8 c7 07                 a0 = a0 + a5
174051: d6 69 0c                 a5 = a2 mulhu s1
174054: ca 69 09                 a2 = a2 * s1
174057: c8 89 09                 a2 = a2 + a1
174060: d8 89 08                 a1 = a2 <u a1
174063: c8 c8 08                 a1 = a1 + a5
174066: d6 6a 0c                 a5 = a3 mulhu s1
174069: ca 6a 0a                 a3 = a3 * s1
174072: c8 7a 0a                 a3 = a3 + a0
174075: d8 7a 07                 a0 = a3 <u a0
174078: c8 c7 07                 a0 = a0 + a5
174081: c8 a8 08                 a1 = a1 + a3
174084: d8 a8 0a                 a3 = a1 <u a3
174087: c8 a7 07                 a0 = a0 + a3
174090: 7b 17 20 02              u64 [sp + 0x220] = a0
174094: 7b 18 18 02              u64 [sp + 0x218] = a1
174098: 7b 19 10 02              u64 [sp + 0x210] = a2
174102: 7b 1b 08 02              u64 [sp + 0x208] = a4
174106: 95 17 c8 01              a0 = sp + 0x1c8
174110: 7b 17 90 02              u64 [sp + 0x290] = a0
174114: 33 07 8a 00              a0 = 0x8a
174118: 7b 17 98 02              u64 [sp + 0x298] = a0
174122: 95 18 20 01              a1 = sp + 0x120
174126: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
174130: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
174134: 95 17 08 02              a0 = sp + 0x208
174138: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
174142: 33 07 7c                 a0 = 0x7c
174145: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
174149: 33 07 40 28 01           a0 = 0x12840
174154: 7b 17 38 02              u64 [sp + 0x238] = a0
174158: 49 21 40 02 03           u64 [sp + 576] = 0x3
174163: 49 21 58 02              u64 [sp + 600] = 0
174167: 95 18 90 02              a1 = sp + 0x290
174171: 7b 18 48 02              u64 [sp + 0x248] = a1
174175: 49 21 50 02 03           u64 [sp + 592] = 0x3
174180: 95 17 e0 01              a0 = sp + 0x1e0
174184: 95 18 38 02              a1 = sp + 0x238
174188: 50 20 18 0a d3 a6 fd     ra = 2584, jump @1491
      :                          @11986 [@dyn 1292]
174195: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
174199: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
174203: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
174207: 7b 17 70                 u64 [sp + 0x70] = a0
174210: 33 07 02                 a0 = 0x2
174213: 33 08                    a1 = 0
174215: 33 09                    a2 = 0
174217: 64 6a                    a3 = s1
174219: 33 00 1a 0a              ra = 0xa1a
174223: 0a 64                    ecalli 100 // 'log'
174225: 01                       fallthrough
      :                          @11987 [@dyn 1293]
174226: 82 1c 70                 a5 = u64 [sp + 0x70]
174229: 82 17 68                 a0 = u64 [sp + 0x68]
174232: c8 c7 07                 a0 = a0 + a5
174235: 55 37 00 00 ff 09        jump @11989 if a0 >=u 4294901760
      :                          @11988
174241: 28 25 39                 jump @12856
      :                          @11989
174244: 33 07 c0 22 03           a0 = 0x322c0
174249: 95 77 00 00 01           a0 = a0 + 0x10000
174254: 01                       fallthrough
      :                          @11990
174255: 82 78                    a1 = u64 [a0]
174257: c9 87 09                 a2 = a0 - a1
174260: aa 69 06                 jump @11992 if a2 == s1
      :                          @11991
174263: 28 0f 39                 jump @12856
      :                          @11992
174266: c9 c8 09                 a2 = a1 - a5
174269: 01                       fallthrough
      :                          @11993
174270: 82 7a                    a3 = u64 [a0]
174272: ab 8a ef                 jump @11990 if a3 != a1
      :                          @11994
174275: 7b 79                    u64 [a0] = a2
174277: 33 0b                    a4 = 0
174279: 01                       fallthrough
      :                          @11995
174280: ab 8a e7                 jump @11990 if a3 != a1
      :                          @11996
174283: 28 fb 38                 jump @12856
      :                          @11997 [@dyn 1294]
174286: 3a 07 78 12 03           a0 = u64 [0x31278]
174291: 97 78 0d                 a1 = a0 << 0xd
174294: d3 87 07                 a0 = a0 ^ a1
174297: 98 78 07                 a1 = a0 >> 0x7
174300: d3 87 07                 a0 = a0 ^ a1
174303: 97 78 11                 a1 = a0 << 0x11
174306: d3 87 07                 a0 = a0 ^ a1
174309: 3e 07 78 12 03           u64 [0x31278] = a0
174314: 49 11 58 1d dd 6c 4f     u64 [sp + 88] = 0x4f6cdd1d
174321: 87 77 1d dd 6c 4f        i32 a0 = a0 * 0x4f6cdd1d
174327: 86 77 01                 a0 = a0 | 0x1
174330: 33 08 03                 a1 = 0x3
174333: e4 87 06                 s1 = maxu(a0, a1)
174336: 97 68 20                 a1 = s1 << 0x20
174339: 7b 18 60                 u64 [sp + 0x60] = a1
174342: 98 88 20                 a1 = a1 >> 0x20
174345: 14 09 00 00 00 00 01 00 00 00 a2 = 0x100000000
174355: 95 17 90 02              a0 = sp + 0x290
174359: 7b 18 70                 u64 [sp + 0x70] = a1
174362: 50 20 1e 0a 09 e2 fd     ra = 2590, jump @2409
      :                          @11998 [@dyn 1295]
174369: 82 17 98 02              a0 = u64 [sp + 0x298]
174373: 3a 08 78 12 03           a1 = u64 [0x31278]
174378: 97 89 0d                 a2 = a1 << 0xd
174381: d3 98 08                 a1 = a1 ^ a2
174384: 98 89 07                 a2 = a1 >> 0x7
174387: d3 98 08                 a1 = a1 ^ a2
174390: 97 89 11                 a2 = a1 << 0x11
174393: d3 98 08                 a1 = a1 ^ a2
174396: 3e 08 78 12 03           u64 [0x31278] = a1
174401: 82 19 58                 a2 = u64 [sp + 0x58]
174404: ca 98 08                 a1 = a1 * a2
174407: c3 68 08                 i32 a1 = a1 %u s1
174410: 7a 18 c8 01              u32 [sp + 0x1c8] = a1
174414: 97 88 20                 a1 = a1 << 0x20
174417: d6 88 08                 a1 = a1 mulhu a1
174420: ca 87 07                 a0 = a0 * a1
174423: 8d 77                    i32 a0 = -a0
174425: 97 77 20                 a0 = a0 << 0x20
174428: 82 19 60                 a2 = u64 [sp + 0x60]
174431: d6 97 07                 a0 = a0 mulhu a2
174434: c8 87 07                 a0 = a0 + a1
174437: 98 78 20                 a1 = a0 >> 0x20
174440: 99 77 20                 a0 = a0 >>a 0x20
174443: d8 67 07                 a0 = a0 <u s1
174446: 7b 16 60                 u64 [sp + 0x60] = s1
174449: 94 76                    s1 = 0 if a0 != 0
174451: bf 68 08                 i32 a1 = a1 - s1
174454: 7a 18 e0 01              u32 [sp + 0x1e0] = a1
174458: 95 17 c8 01              a0 = sp + 0x1c8
174462: 7b 17 90 02              u64 [sp + 0x290] = a0
174466: 33 08 5e 0c              a1 = 0xc5e
174470: 7b 18 98 02              u64 [sp + 0x298] = a1
174474: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
174478: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
174482: 95 17 e0 01              a0 = sp + 0x1e0
174486: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
174490: 7b 18 58                 u64 [sp + 0x58] = a1
174493: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
174497: 33 07 80 28 01           a0 = 0x12880
174502: 7b 17 38 02              u64 [sp + 0x238] = a0
174506: 49 21 40 02 03           u64 [sp + 576] = 0x3
174511: 49 21 58 02              u64 [sp + 600] = 0
174515: 95 18 90 02              a1 = sp + 0x290
174519: 7b 18 48 02              u64 [sp + 0x248] = a1
174523: 49 21 50 02 03           u64 [sp + 592] = 0x3
174528: 95 17 08 02              a0 = sp + 0x208
174532: 95 18 38 02              a1 = sp + 0x238
174536: 50 20 20 0a 77 a5 fd     ra = 2592, jump @1491
      :                          @11999 [@dyn 1296]
174543: 82 16 10 02              s1 = u64 [sp + 0x210]
174547: 82 1b 18 02              a4 = u64 [sp + 0x218]
174551: 82 17 08 02              a0 = u64 [sp + 0x208]
174555: 7b 17 48                 u64 [sp + 0x48] = a0
174558: 33 07 02                 a0 = 0x2
174561: 33 08                    a1 = 0
174563: 33 09                    a2 = 0
174565: 64 6a                    a3 = s1
174567: 33 00 22 0a              ra = 0xa22
174571: 0a 64                    ecalli 100 // 'log'
174573: 01                       fallthrough
      :                          @12000 [@dyn 1297]
174574: 82 1c 48                 a5 = u64 [sp + 0x48]
174577: 82 17 68                 a0 = u64 [sp + 0x68]
174580: c8 c7 07                 a0 = a0 + a5
174583: 53 37 00 00 ff 25        jump @12006 if a0 <u 4294901760
      :                          @12001
174589: 33 07 c0 22 03           a0 = 0x322c0
174594: 95 77 00 00 01           a0 = a0 + 0x10000
174599: 01                       fallthrough
      :                          @12002
174600: 82 78                    a1 = u64 [a0]
174602: c9 87 09                 a2 = a0 - a1
174605: ab 69 0f                 jump @12006 if a2 != s1
      :                          @12003
174608: c9 c8 09                 a2 = a1 - a5
174611: 01                       fallthrough
      :                          @12004
174612: 82 7a                    a3 = u64 [a0]
174614: ab 8a f2                 jump @12002 if a3 != a1
      :                          @12005
174617: 7b 79                    u64 [a0] = a2
174619: 01                       fallthrough
      :                          @12006
174620: 81 17 c8 01              a0 = i32 [sp + 0x1c8]
174624: 7b 17 48                 u64 [sp + 0x48] = a0
174627: 33 08 01                 a1 = 0x1
174630: 33 07                    a0 = 0
174632: 82 16 70                 s1 = u64 [sp + 0x70]
174635: 64 69                    a2 = s1
174637: 50 20 24 0a 9a 5e        ra = 2596, jump @13617
      :                          @12007 [@dyn 1298]
174643: 82 19 60                 a2 = u64 [sp + 0x60]
174646: 82 1a 48                 a3 = u64 [sp + 0x48]
174649: d8 9a 08                 a1 = a3 <u a2
174652: 94 89                    a2 = 0 if a1 != 0
174654: bf 9a 08                 i32 a1 = a3 - a2
174657: 7a 18 20 01              u32 [sp + 0x120] = a1
174661: 3a 08 78 12 03           a1 = u64 [0x31278]
174666: 97 89 0d                 a2 = a1 << 0xd
174669: d3 98 08                 a1 = a1 ^ a2
174672: 98 89 07                 a2 = a1 >> 0x7
174675: 3a 0a 60 11 03           a3 = u64 [0x31160]
174680: d3 98 08                 a1 = a1 ^ a2
174683: 97 89 11                 a2 = a1 << 0x11
174686: d3 98 08                 a1 = a1 ^ a2
174689: ca a8 09                 a2 = a1 * a3
174692: 3e 08 78 12 03           u64 [0x31278] = a1
174697: d6 97 07                 a0 = a0 mulhu a2
174700: ca 67 07                 a0 = a0 * s1
174703: c9 79 09                 a2 = a2 - a0
174706: d8 69 07                 a0 = a2 <u s1
174709: 94 76                    s1 = 0 if a0 != 0
174711: bf 69 07                 i32 a0 = a2 - s1
174714: 7a 17 e0 01              u32 [sp + 0x1e0] = a0
174718: 95 17 20 01              a0 = sp + 0x120
174722: 7b 17 38 02              u64 [sp + 0x238] = a0
174726: 82 17 58                 a0 = u64 [sp + 0x58]
174729: 7b 17 40 02              u64 [sp + 0x240] = a0
174733: 95 18 e0 01              a1 = sp + 0x1e0
174737: 7b 18 48 02              u64 [sp + 0x248] = a1
174741: 7b 17 50 02              u64 [sp + 0x250] = a0
174745: 33 07 c0 28 01           a0 = 0x128c0
174750: 7b 17 90 02              u64 [sp + 0x290] = a0
174754: 49 21 98 02 02           u64 [sp + 664] = 0x2
174759: 49 21 b0 02              u64 [sp + 688] = 0
174763: 95 17 38 02              a0 = sp + 0x238
174767: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
174771: 49 21 a8 02 02           u64 [sp + 680] = 0x2
174776: 95 17 08 02              a0 = sp + 0x208
174780: 95 18 90 02              a1 = sp + 0x290
174784: 50 20 26 0a 7f a4 fd     ra = 2598, jump @1491
      :                          @12008 [@dyn 1299]
174791: 82 16 10 02              s1 = u64 [sp + 0x210]
174795: 82 1b 18 02              a4 = u64 [sp + 0x218]
174799: 82 17 08 02              a0 = u64 [sp + 0x208]
174803: 7b 17 70                 u64 [sp + 0x70] = a0
174806: 33 07 02                 a0 = 0x2
174809: 33 08                    a1 = 0
174811: 33 09                    a2 = 0
174813: 64 6a                    a3 = s1
174815: 33 00 28 0a              ra = 0xa28
174819: 0a 64                    ecalli 100 // 'log'
174821: 01                       fallthrough
      :                          @12009 [@dyn 1300]
174822: 82 1c 70                 a5 = u64 [sp + 0x70]
174825: 82 17 68                 a0 = u64 [sp + 0x68]
174828: c8 c7 07                 a0 = a0 + a5
174831: 55 37 00 00 ff 09        jump @12011 if a0 >=u 4294901760
      :                          @12010
174837: 28 d1 36                 jump @12856
      :                          @12011
174840: 33 07 c0 22 03           a0 = 0x322c0
174845: 95 77 00 00 01           a0 = a0 + 0x10000
174850: 01                       fallthrough
      :                          @12012
174851: 82 78                    a1 = u64 [a0]
174853: c9 87 09                 a2 = a0 - a1
174856: aa 69 06                 jump @12014 if a2 == s1
      :                          @12013
174859: 28 bb 36                 jump @12856
      :                          @12014
174862: c9 c8 09                 a2 = a1 - a5
174865: 01                       fallthrough
      :                          @12015
174866: 82 7a                    a3 = u64 [a0]
174868: ab 8a ef                 jump @12012 if a3 != a1
      :                          @12016
174871: 7b 79                    u64 [a0] = a2
174873: 33 0b                    a4 = 0
174875: 01                       fallthrough
      :                          @12017
174876: ab 8a e7                 jump @12012 if a3 != a1
      :                          @12018
174879: 28 a7 36                 jump @12856
      :                          @12019 [@dyn 1301]
174882: 49 21 70 02              u64 [sp + 624] = 0
174886: 49 21 68 02              u64 [sp + 616] = 0
174890: 49 21 60 02              u64 [sp + 608] = 0
174894: 49 21 58 02              u64 [sp + 600] = 0
174898: 49 21 50 02              u64 [sp + 592] = 0
174902: 49 21 48 02              u64 [sp + 584] = 0
174906: 49 21 40 02              u64 [sp + 576] = 0
174910: 49 21 38 02              u64 [sp + 568] = 0
174914: 3a 08 78 12 03           a1 = u64 [0x31278]
174919: 97 89 0d                 a2 = a1 << 0xd
174922: d3 89 09                 a2 = a2 ^ a1
174925: 98 9a 07                 a3 = a2 >> 0x7
174928: 3a 08 60 11 03           a1 = u64 [0x31160]
174933: d3 a9 09                 a2 = a2 ^ a3
174936: 97 9a 11                 a3 = a2 << 0x11
174939: d3 a9 09                 a2 = a2 ^ a3
174942: ca 89 0a                 a3 = a2 * a1
174945: 3e 09 78 12 03           u64 [0x31278] = a2
174950: 14 09 f1 f0 f0 f0 f0 f0 f0 f0 a2 = 0xf0f0f0f0f0f0f0f1
174960: d6 9a 0b                 a4 = a3 mulhu a2
174963: 98 bc 04                 a5 = a4 >> 0x4
174966: 84 bb f0                 a4 = a4 & 0xfffffffffffffff0
174969: c8 cb 0b                 a4 = a4 + a5
174972: c9 ba 0a                 a3 = a3 - a4
174975: 7b 1a 38 02              u64 [sp + 0x238] = a3
174979: 3a 0a 78 12 03           a3 = u64 [0x31278]
174984: 97 ab 0d                 a4 = a3 << 0xd
174987: d3 ba 0a                 a3 = a3 ^ a4
174990: 98 ab 07                 a4 = a3 >> 0x7
174993: d3 ba 0a                 a3 = a3 ^ a4
174996: 97 ab 11                 a4 = a3 << 0x11
174999: d3 ba 0a                 a3 = a3 ^ a4
175002: ca 8a 0b                 a4 = a3 * a1
175005: 3e 0a 78 12 03           u64 [0x31278] = a3
175010: d6 9b 0a                 a3 = a4 mulhu a2
175013: 98 ac 04                 a5 = a3 >> 0x4
175016: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175019: c8 ca 0a                 a3 = a3 + a5
175022: c9 ab 0b                 a4 = a4 - a3
175025: 7b 1b 40 02              u64 [sp + 0x240] = a4
175029: 3a 0a 78 12 03           a3 = u64 [0x31278]
175034: 97 ab 0d                 a4 = a3 << 0xd
175037: d3 ba 0a                 a3 = a3 ^ a4
175040: 98 ab 07                 a4 = a3 >> 0x7
175043: d3 ba 0a                 a3 = a3 ^ a4
175046: 97 ab 11                 a4 = a3 << 0x11
175049: d3 ba 0a                 a3 = a3 ^ a4
175052: ca 8a 0b                 a4 = a3 * a1
175055: 3e 0a 78 12 03           u64 [0x31278] = a3
175060: d6 9b 0a                 a3 = a4 mulhu a2
175063: 98 ac 04                 a5 = a3 >> 0x4
175066: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175069: c8 ca 0a                 a3 = a3 + a5
175072: c9 ab 0b                 a4 = a4 - a3
175075: 7b 1b 48 02              u64 [sp + 0x248] = a4
175079: 3a 0a 78 12 03           a3 = u64 [0x31278]
175084: 97 ab 0d                 a4 = a3 << 0xd
175087: d3 ba 0a                 a3 = a3 ^ a4
175090: 98 ab 07                 a4 = a3 >> 0x7
175093: d3 ba 0a                 a3 = a3 ^ a4
175096: 97 ab 11                 a4 = a3 << 0x11
175099: d3 ba 0a                 a3 = a3 ^ a4
175102: ca 8a 0b                 a4 = a3 * a1
175105: 3e 0a 78 12 03           u64 [0x31278] = a3
175110: d6 9b 0a                 a3 = a4 mulhu a2
175113: 98 ac 04                 a5 = a3 >> 0x4
175116: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175119: c8 ca 0a                 a3 = a3 + a5
175122: c9 ab 0b                 a4 = a4 - a3
175125: 7b 1b 50 02              u64 [sp + 0x250] = a4
175129: 3a 0a 78 12 03           a3 = u64 [0x31278]
175134: 97 ab 0d                 a4 = a3 << 0xd
175137: d3 ba 0a                 a3 = a3 ^ a4
175140: 98 ab 07                 a4 = a3 >> 0x7
175143: d3 ba 0a                 a3 = a3 ^ a4
175146: 97 ab 11                 a4 = a3 << 0x11
175149: d3 ba 0a                 a3 = a3 ^ a4
175152: ca 8a 0b                 a4 = a3 * a1
175155: 3e 0a 78 12 03           u64 [0x31278] = a3
175160: d6 9b 0a                 a3 = a4 mulhu a2
175163: 98 ac 04                 a5 = a3 >> 0x4
175166: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175169: c8 ca 0a                 a3 = a3 + a5
175172: c9 ab 0b                 a4 = a4 - a3
175175: 7b 1b 58 02              u64 [sp + 0x258] = a4
175179: 3a 0a 78 12 03           a3 = u64 [0x31278]
175184: 97 ab 0d                 a4 = a3 << 0xd
175187: d3 ba 0a                 a3 = a3 ^ a4
175190: 98 ab 07                 a4 = a3 >> 0x7
175193: d3 ba 0a                 a3 = a3 ^ a4
175196: 97 ab 11                 a4 = a3 << 0x11
175199: d3 ba 0a                 a3 = a3 ^ a4
175202: ca 8a 0b                 a4 = a3 * a1
175205: 3e 0a 78 12 03           u64 [0x31278] = a3
175210: d6 9b 0a                 a3 = a4 mulhu a2
175213: 98 ac 04                 a5 = a3 >> 0x4
175216: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175219: c8 ca 0a                 a3 = a3 + a5
175222: c9 ab 0b                 a4 = a4 - a3
175225: 7b 1b 60 02              u64 [sp + 0x260] = a4
175229: 3a 0a 78 12 03           a3 = u64 [0x31278]
175234: 97 ab 0d                 a4 = a3 << 0xd
175237: d3 ba 0a                 a3 = a3 ^ a4
175240: 98 ab 07                 a4 = a3 >> 0x7
175243: d3 ba 0a                 a3 = a3 ^ a4
175246: 97 ab 11                 a4 = a3 << 0x11
175249: d3 ba 0a                 a3 = a3 ^ a4
175252: ca 8a 0b                 a4 = a3 * a1
175255: 3e 0a 78 12 03           u64 [0x31278] = a3
175260: d6 9b 0a                 a3 = a4 mulhu a2
175263: 98 ac 04                 a5 = a3 >> 0x4
175266: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175269: c8 ca 0a                 a3 = a3 + a5
175272: c9 ab 0b                 a4 = a4 - a3
175275: 7b 1b 68 02              u64 [sp + 0x268] = a4
175279: 3a 0a 78 12 03           a3 = u64 [0x31278]
175284: 97 ab 0d                 a4 = a3 << 0xd
175287: d3 ba 0a                 a3 = a3 ^ a4
175290: 98 ab 07                 a4 = a3 >> 0x7
175293: d3 ba 0a                 a3 = a3 ^ a4
175296: 97 ab 11                 a4 = a3 << 0x11
175299: d3 ba 0a                 a3 = a3 ^ a4
175302: ca 8a 08                 a1 = a3 * a1
175305: 3e 0a 78 12 03           u64 [0x31278] = a3
175310: d6 98 07                 a0 = a1 mulhu a2
175313: 98 79 04                 a2 = a0 >> 0x4
175316: 84 77 f0                 a0 = a0 & 0xfffffffffffffff0
175319: c8 97 07                 a0 = a0 + a2
175322: c9 78 08                 a1 = a1 - a0
175325: 7b 18 70 02              u64 [sp + 0x270] = a1
175329: 95 17 90 02              a0 = sp + 0x290
175333: 95 18 38 02              a1 = sp + 0x238
175337: 95 16 38 02              s1 = sp + 0x238
175341: 33 00 2c 0a              ra = 0xa2c
175345: 95 11 60 ff              sp = sp + 0xffffffffffffff60
175349: 7b 10 98 00              u64 [sp + 0x98] = ra
175353: 7b 15 90 00              u64 [sp + 0x90] = s0
175357: 7b 16 88 00              u64 [sp + 0x88] = s1
175361: 7b 17                    u64 [sp] = a0
175363: 33 00                    ra = 0
175365: 82 87                    a0 = u64 [a1]
175367: 14 0a f1 f0 f0 f0 f0 f0 f0 f0 a3 = 0xf0f0f0f0f0f0f0f1
175377: d6 a7 09                 a2 = a0 mulhu a3
175380: 98 9b 04                 a4 = a2 >> 0x4
175383: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175386: c8 b9 09                 a2 = a2 + a4
175389: c9 97 07                 a0 = a0 - a2
175392: 82 89 08                 a2 = u64 [a1 + 0x8]
175395: 82 8c 10                 a5 = u64 [a1 + 0x10]
175398: 82 86 18                 s1 = u64 [a1 + 0x18]
175401: 82 85 20                 s0 = u64 [a1 + 0x20]
175404: 7b 17 40                 u64 [sp + 0x40] = a0
175407: 7b 19 38                 u64 [sp + 0x38] = a2
175410: c8 97 07                 a0 = a0 + a2
175413: d6 a7 09                 a2 = a0 mulhu a3
175416: 98 9b 04                 a4 = a2 >> 0x4
175419: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175422: c8 b9 09                 a2 = a2 + a4
175425: 7b 1c 30                 u64 [sp + 0x30] = a5
175428: c8 c7 07                 a0 = a0 + a5
175431: c9 97 07                 a0 = a0 - a2
175434: d6 a7 09                 a2 = a0 mulhu a3
175437: 98 9b 04                 a4 = a2 >> 0x4
175440: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175443: c8 b9 09                 a2 = a2 + a4
175446: 7b 16 28                 u64 [sp + 0x28] = s1
175449: c8 67 07                 a0 = a0 + s1
175452: c9 97 07                 a0 = a0 - a2
175455: d6 a7 09                 a2 = a0 mulhu a3
175458: 98 9b 04                 a4 = a2 >> 0x4
175461: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175464: c8 b9 09                 a2 = a2 + a4
175467: 82 8c 28                 a5 = u64 [a1 + 0x28]
175470: 7b 15 20                 u64 [sp + 0x20] = s0
175473: c8 57 07                 a0 = a0 + s0
175476: c9 97 07                 a0 = a0 - a2
175479: d6 a7 09                 a2 = a0 mulhu a3
175482: 98 9b 04                 a4 = a2 >> 0x4
175485: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175488: c8 b9 09                 a2 = a2 + a4
175491: 7b 1c 18                 u64 [sp + 0x18] = a5
175494: c8 c7 07                 a0 = a0 + a5
175497: c9 97 07                 a0 = a0 - a2
175500: 82 8c 30                 a5 = u64 [a1 + 0x30]
175503: d6 a7 09                 a2 = a0 mulhu a3
175506: 98 9b 04                 a4 = a2 >> 0x4
175509: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175512: c8 b9 09                 a2 = a2 + a4
175515: 7b 1c 10                 u64 [sp + 0x10] = a5
175518: c8 c7 07                 a0 = a0 + a5
175521: c9 97 07                 a0 = a0 - a2
175524: 7b 17 08                 u64 [sp + 0x8] = a0
175527: 49 21 80 00              u64 [sp + 128] = 0
175531: 49 11 78                 u64 [sp + 120] = 0
175534: 49 11 70                 u64 [sp + 112] = 0
175537: 49 11 68                 u64 [sp + 104] = 0
175540: 49 11 60                 u64 [sp + 96] = 0
175543: 49 11 58                 u64 [sp + 88] = 0
175546: 49 11 50                 u64 [sp + 80] = 0
175549: 49 11 48                 u64 [sp + 72] = 0
175552: 82 88 38                 a1 = u64 [a1 + 0x38]
175555: 28 f0 e4 fd              jump @2573
      :                          @12020 [@dyn 1302]
175559: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
175563: 33 07 ec 00              a0 = 0xec
175567: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
175571: 95 18 90 02              a1 = sp + 0x290
175575: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
175579: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
175583: 33 07 e0 28 01           a0 = 0x128e0
175588: 7b 17 08 02              u64 [sp + 0x208] = a0
175592: 49 21 10 02 02           u64 [sp + 528] = 0x2
175597: 49 21 28 02              u64 [sp + 552] = 0
175601: 95 18 e0 01              a1 = sp + 0x1e0
175605: 7b 18 18 02              u64 [sp + 0x218] = a1
175609: 49 21 20 02 02           u64 [sp + 544] = 0x2
175614: 95 17 20 01              a0 = sp + 0x120
175618: 95 18 08 02              a1 = sp + 0x208
175622: 50 20 2e 0a 39 a1 fd     ra = 2606, jump @1491
      :                          @12021 [@dyn 1303]
175629: 82 16 28 01              s1 = u64 [sp + 0x128]
175633: 82 1b 30 01              a4 = u64 [sp + 0x130]
175637: 82 17 20 01              a0 = u64 [sp + 0x120]
175641: 7b 17 70                 u64 [sp + 0x70] = a0
175644: 33 07 02                 a0 = 0x2
175647: 33 08                    a1 = 0
175649: 33 09                    a2 = 0
175651: 64 6a                    a3 = s1
175653: 33 00 30 0a              ra = 0xa30
175657: 0a 64                    ecalli 100 // 'log'
175659: 01                       fallthrough
      :                          @12022 [@dyn 1304]
175660: 82 1c 70                 a5 = u64 [sp + 0x70]
175663: 82 17 68                 a0 = u64 [sp + 0x68]
175666: c8 c7 07                 a0 = a0 + a5
175669: 55 37 00 00 ff 09        jump @12024 if a0 >=u 4294901760
      :                          @12023
175675: 28 8b 33                 jump @12856
      :                          @12024
175678: 33 07 c0 22 03           a0 = 0x322c0
175683: 95 77 00 00 01           a0 = a0 + 0x10000
175688: 01                       fallthrough
      :                          @12025
175689: 82 78                    a1 = u64 [a0]
175691: c9 87 09                 a2 = a0 - a1
175694: aa 69 06                 jump @12027 if a2 == s1
      :                          @12026
175697: 28 75 33                 jump @12856
      :                          @12027
175700: c9 c8 09                 a2 = a1 - a5
175703: 01                       fallthrough
      :                          @12028
175704: 82 7a                    a3 = u64 [a0]
175706: ab 8a ef                 jump @12025 if a3 != a1
      :                          @12029
175709: 7b 79                    u64 [a0] = a2
175711: 33 0b                    a4 = 0
175713: 01                       fallthrough
      :                          @12030
175714: ab 8a e7                 jump @12025 if a3 != a1
      :                          @12031
175717: 28 61 33                 jump @12856
      :                          @12032 [@dyn 1305]
175720: 3a 08 78 12 03           a1 = u64 [0x31278]
175725: 97 89 0d                 a2 = a1 << 0xd
175728: d3 98 08                 a1 = a1 ^ a2
175731: 98 89 07                 a2 = a1 >> 0x7
175734: d3 98 08                 a1 = a1 ^ a2
175737: 97 89 11                 a2 = a1 << 0x11
175740: d3 98 08                 a1 = a1 ^ a2
175743: 3a 09 60 11 03           a2 = u64 [0x31160]
175748: 3a 0a a0 11 03           a3 = u64 [0x311a0]
175753: 3e 08 78 12 03           u64 [0x31278] = a1
175758: ca 98 07                 a0 = a1 * a2
175761: d6 a7 08                 a1 = a0 mulhu a3
175764: 98 88 0c                 a1 = a1 >> 0xc
175767: 96 88 41 0d 03           a1 = a1 * 0x30d41
175772: 95 77 60 79 fe           a0 = a0 + 0xfffffffffffe7960
175777: bf 87 07                 i32 a0 = a0 - a1
175780: 7a 17 c8 01              u32 [sp + 0x1c8] = a0
175784: 95 11 f0                 sp = sp + 0xfffffffffffffff0
175787: 7b 15 08                 u64 [sp + 0x8] = s0
175790: 7b 16                    u64 [sp] = s1
175792: 83 78                    i32 a1 = a0 + 0
175794: 89 88                    a1 = a1 <s 0
175796: 33 0a 0f c9 00           a3 = 0xc90f
175801: 93 8a f1 36 ff           a3 = 0xffffffffffff36f1 if a1 == 0
175806: 33 0b 8b 64 ff           a4 = 0xffffffffffff648b
175811: 93 8b 75 9b 00           a4 = 0x9b75 if a1 == 0
175816: be 7a 02                 i32 t0 = a3 + a0
175819: 99 b8 01                 a1 = a4 >>a 0x1
175822: 89 2a                    a3 = t0 <s 0
175824: 33 07 b1 76              a0 = 0x76b1
175828: 93 a7 4f 89              a0 = 0xffffffffffff894f if a3 == 0
175832: 9a 8c                    a5 = -a1
175834: db a8 0c                 a5 = a1 if a3 != 0
175837: 83 c3 75 9b 00           i32 t1 = a5 + 0x9b75
175842: 33 0c 46 b2              a5 = 0xffffffffffffb246
175846: 93 ac ba 4d              a5 = 0x4dba if a3 == 0
175850: c8 cb 0b                 a4 = a4 + a5
175853: be 72 04                 i32 t2 = t0 + a0
175856: 8b 38 02                 i32 a1 = t1 >> 0x2
175859: 99 ba 02                 a3 = a4 >>a 0x2
175862: 89 4c                    a5 = t2 <s 0
175864: 33 09 b6 3e              a2 = 0x3eb6
175868: 93 c9 4a c1              a2 = 0xffffffffffffc14a if a5 == 0
175872: 9a a7                    a0 = -a3
175874: db ca 07                 a0 = a3 if a5 != 0
175877: be 73 02                 i32 t0 = t1 + a0
175880: 9a 8a                    a3 = -a1
175882: da c8 0a                 a3 = a1 if a5 == 0
175885: c8 ba 0a                 a3 = a3 + a4
175888: be 94 04                 i32 t2 = t2 + a2
175891: 8b 29 03                 i32 a2 = t0 >> 0x3
175894: 99 ab 03                 a4 = a3 >>a 0x3
175897: 89 4c                    a5 = t2 <s 0
175899: 33 07 d9 1f              a0 = 0x1fd9
175903: 93 c7 27 e0              a0 = 0xffffffffffffe027 if a5 == 0
175907: 9a b8                    a1 = -a4
175909: db cb 08                 a1 = a4 if a5 != 0
175912: c8 28 08                 a1 = a1 + t0
175915: 9a 9b                    a4 = -a2
175917: da c9 0b                 a4 = a2 if a5 == 0
175920: be ba 0a                 i32 a3 = a3 + a4
175923: be 74 06                 i32 s1 = t2 + a0
175926: 8c 89 04                 i32 a2 = a1 >>a 0x4
175929: 8c ab 04                 i32 a4 = a3 >>a 0x4
175932: 89 6c                    a5 = s1 <s 0
175934: 33 02 00 f0              t0 = 0xfffffffffffff000
175938: 33 03 ff ef              t1 = 0xffffffffffffefff
175942: 33 04 00 10              t2 = 0x1000
175946: 33 05 01 10              s0 = 0x1001
175950: da c3 05                 s0 = t1 if a5 == 0
175953: 9a b7                    a0 = -a4
175955: db cb 07                 a0 = a4 if a5 != 0
175958: c8 87 07                 a0 = a0 + a1
175961: 9a 98                    a1 = -a2
175963: da c9 08                 a1 = a2 if a5 == 0
175966: be a8 08                 i32 a1 = a1 + a3
175969: be 65 05                 i32 s0 = s0 + s1
175972: 8c 79 05                 i32 a2 = a0 >>a 0x5
175975: 8c 8a 05                 i32 a3 = a1 >>a 0x5
175978: 89 5b                    a4 = s0 <s 0
175980: 33 06 01 08              s1 = 0x801
175984: 93 b6 ff f7              s1 = 0xfffffffffffff7ff if a4 == 0
175988: 9a ac                    a5 = -a3
175990: db ba 0c                 a5 = a3 if a4 != 0
175993: c8 c7 07                 a0 = a0 + a5
175996: 9a 9a                    a3 = -a2
175998: da b9 0a                 a3 = a2 if a4 == 0
176001: be a8 08                 i32 a1 = a1 + a3
176004: be 65 05                 i32 s0 = s0 + s1
176007: 8c 79 06                 i32 a2 = a0 >>a 0x6
176010: 8c 8a 06                 i32 a3 = a1 >>a 0x6
176013: 89 5b                    a4 = s0 <s 0
176015: 33 06 01 04              s1 = 0x401
176019: 93 b6 ff fb              s1 = 0xfffffffffffffbff if a4 == 0
176023: 9a ac                    a5 = -a3
176025: db ba 0c                 a5 = a3 if a4 != 0
176028: c8 c7 07                 a0 = a0 + a5
176031: 9a 9a                    a3 = -a2
176033: da b9 0a                 a3 = a2 if a4 == 0
176036: be a8 08                 i32 a1 = a1 + a3
176039: be 65 05                 i32 s0 = s0 + s1
176042: 8c 79 07                 i32 a2 = a0 >>a 0x7
176045: 8c 8a 07                 i32 a3 = a1 >>a 0x7
176048: 89 5b                    a4 = s0 <s 0
176050: 33 06 00 02              s1 = 0x200
176054: 93 b6 00 fe              s1 = 0xfffffffffffffe00 if a4 == 0
176058: 9a ac                    a5 = -a3
176060: db ba 0c                 a5 = a3 if a4 != 0
176063: c8 c7 07                 a0 = a0 + a5
176066: 9a 9a                    a3 = -a2
176068: da b9 0a                 a3 = a2 if a4 == 0
176071: be a8 08                 i32 a1 = a1 + a3
176074: be 65 05                 i32 s0 = s0 + s1
176077: 8c 79 08                 i32 a2 = a0 >>a 0x8
176080: 8c 8a 08                 i32 a3 = a1 >>a 0x8
176083: 89 5b                    a4 = s0 <s 0
176085: 33 06 00 01              s1 = 0x100
176089: 93 b6 00 ff              s1 = 0xffffffffffffff00 if a4 == 0
176093: 9a ac                    a5 = -a3
176095: db ba 0c                 a5 = a3 if a4 != 0
176098: c8 c7 07                 a0 = a0 + a5
176101: 9a 9a                    a3 = -a2
176103: da b9 0a                 a3 = a2 if a4 == 0
176106: be a8 08                 i32 a1 = a1 + a3
176109: be 65 05                 i32 s0 = s0 + s1
176112: 8c 79 09                 i32 a2 = a0 >>a 0x9
176115: 8c 8a 09                 i32 a3 = a1 >>a 0x9
176118: 89 5b                    a4 = s0 <s 0
176120: 33 06 80 00              s1 = 0x80
176124: 93 b6 80                 s1 = 0xffffffffffffff80 if a4 == 0
176127: 9a ac                    a5 = -a3
176129: db ba 0c                 a5 = a3 if a4 != 0
176132: c8 c7 07                 a0 = a0 + a5
176135: 9a 9a                    a3 = -a2
176137: da b9 0a                 a3 = a2 if a4 == 0
176140: be a8 08                 i32 a1 = a1 + a3
176143: be 65 05                 i32 s0 = s0 + s1
176146: 8c 79 0a                 i32 a2 = a0 >>a 0xa
176149: 8c 8a 0a                 i32 a3 = a1 >>a 0xa
176152: 89 5b                    a4 = s0 <s 0
176154: 33 06 40                 s1 = 0x40
176157: 93 b6 c0                 s1 = 0xffffffffffffffc0 if a4 == 0
176160: 9a ac                    a5 = -a3
176162: db ba 0c                 a5 = a3 if a4 != 0
176165: c8 c7 07                 a0 = a0 + a5
176168: 9a 9a                    a3 = -a2
176170: da b9 0a                 a3 = a2 if a4 == 0
176173: be a8 08                 i32 a1 = a1 + a3
176176: be 65 05                 i32 s0 = s0 + s1
176179: 8c 79 0b                 i32 a2 = a0 >>a 0xb
176182: 8c 8a 0b                 i32 a3 = a1 >>a 0xb
176185: 89 5b                    a4 = s0 <s 0
176187: 33 06 20                 s1 = 0x20
176190: 93 b6 e0                 s1 = 0xffffffffffffffe0 if a4 == 0
176193: 9a ac                    a5 = -a3
176195: db ba 0c                 a5 = a3 if a4 != 0
176198: c8 c7 07                 a0 = a0 + a5
176201: 9a 9a                    a3 = -a2
176203: da b9 0a                 a3 = a2 if a4 == 0
176206: be a8 08                 i32 a1 = a1 + a3
176209: be 65 05                 i32 s0 = s0 + s1
176212: 8c 79 0c                 i32 a2 = a0 >>a 0xc
176215: 8c 8a 0c                 i32 a3 = a1 >>a 0xc
176218: 89 5b                    a4 = s0 <s 0
176220: 33 06 10                 s1 = 0x10
176223: 93 b6 f0                 s1 = 0xfffffffffffffff0 if a4 == 0
176226: 9a ac                    a5 = -a3
176228: db ba 0c                 a5 = a3 if a4 != 0
176231: c8 c7 07                 a0 = a0 + a5
176234: 9a 9a                    a3 = -a2
176236: da b9 0a                 a3 = a2 if a4 == 0
176239: be a8 08                 i32 a1 = a1 + a3
176242: be 65 05                 i32 s0 = s0 + s1
176245: 8c 79 0d                 i32 a2 = a0 >>a 0xd
176248: 8c 8a 0d                 i32 a3 = a1 >>a 0xd
176251: 89 5b                    a4 = s0 <s 0
176253: 33 06 08                 s1 = 0x8
176256: 93 b6 f8                 s1 = 0xfffffffffffffff8 if a4 == 0
176259: 9a ac                    a5 = -a3
176261: db ba 0c                 a5 = a3 if a4 != 0
176264: c8 c7 07                 a0 = a0 + a5
176267: 9a 9a                    a3 = -a2
176269: da b9 0a                 a3 = a2 if a4 == 0
176272: be a8 08                 i32 a1 = a1 + a3
176275: be 65 05                 i32 s0 = s0 + s1
176278: 8c 79 0e                 i32 a2 = a0 >>a 0xe
176281: 8c 8a 0e                 i32 a3 = a1 >>a 0xe
176284: 89 5b                    a4 = s0 <s 0
176286: 33 06 04                 s1 = 0x4
176289: 93 b6 fc                 s1 = 0xfffffffffffffffc if a4 == 0
176292: 9a ac                    a5 = -a3
176294: db ba 0c                 a5 = a3 if a4 != 0
176297: c8 c7 07                 a0 = a0 + a5
176300: 9a 9a                    a3 = -a2
176302: da b9 0a                 a3 = a2 if a4 == 0
176305: be a8 08                 i32 a1 = a1 + a3
176308: be 65 05                 i32 s0 = s0 + s1
176311: 8c 79 0f                 i32 a2 = a0 >>a 0xf
176314: 8c 8a 0f                 i32 a3 = a1 >>a 0xf
176317: 89 5b                    a4 = s0 <s 0
176319: 9a ac                    a5 = -a3
176321: db ba 0c                 a5 = a3 if a4 != 0
176324: be c7 07                 i32 a0 = a0 + a5
176327: 9a 9a                    a3 = -a2
176329: da b9 0a                 a3 = a2 if a4 == 0
176332: be a8 08                 i32 a1 = a1 + a3
176335: 82 15 08                 s0 = u64 [sp + 0x8]
176338: 82 16                    s1 = u64 [sp]
176340: 95 11 10                 sp = sp + 0x10
176343: 7a 17 20 01              u32 [sp + 0x120] = a0
176347: 7a 18 e0 01              u32 [sp + 0x1e0] = a1
176351: 95 17 c8 01              a0 = sp + 0x1c8
176355: 7b 17 90 02              u64 [sp + 0x290] = a0
176359: 33 07 92 0c              a0 = 0xc92
176363: 7b 17 98 02              u64 [sp + 0x298] = a0
176367: 95 18 20 01              a1 = sp + 0x120
176371: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
176375: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
176379: 95 18 e0 01              a1 = sp + 0x1e0
176383: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
176387: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
176391: 33 07 18 29 01           a0 = 0x12918
176396: 7b 17 38 02              u64 [sp + 0x238] = a0
176400: 49 21 40 02 03           u64 [sp + 576] = 0x3
176405: 49 21 58 02              u64 [sp + 600] = 0
176409: 95 18 90 02              a1 = sp + 0x290
176413: 7b 18 48 02              u64 [sp + 0x248] = a1
176417: 49 21 50 02 03           u64 [sp + 592] = 0x3
176422: 95 17 08 02              a0 = sp + 0x208
176426: 95 18 38 02              a1 = sp + 0x238
176430: 50 20 34 0a 11 9e fd     ra = 2612, jump @1491
      :                          @12033 [@dyn 1306]
176437: 82 16 10 02              s1 = u64 [sp + 0x210]
176441: 82 1b 18 02              a4 = u64 [sp + 0x218]
176445: 82 17 08 02              a0 = u64 [sp + 0x208]
176449: 7b 17 70                 u64 [sp + 0x70] = a0
176452: 33 07 02                 a0 = 0x2
176455: 33 08                    a1 = 0
176457: 33 09                    a2 = 0
176459: 64 6a                    a3 = s1
176461: 33 00 36 0a              ra = 0xa36
176465: 0a 64                    ecalli 100 // 'log'
176467: 01                       fallthrough
      :                          @12034 [@dyn 1307]
176468: 82 1c 70                 a5 = u64 [sp + 0x70]
176471: 82 17 68                 a0 = u64 [sp + 0x68]
176474: c8 c7 07                 a0 = a0 + a5
176477: 55 37 00 00 ff 09        jump @12036 if a0 >=u 4294901760
      :                          @12035
176483: 28 63 30                 jump @12856
      :                          @12036
176486: 33 07 c0 22 03           a0 = 0x322c0
176491: 95 77 00 00 01           a0 = a0 + 0x10000
176496: 01                       fallthrough
      :                          @12037
176497: 82 78                    a1 = u64 [a0]
176499: c9 87 09                 a2 = a0 - a1
176502: aa 69 06                 jump @12039 if a2 == s1
      :                          @12038
176505: 28 4d 30                 jump @12856
      :                          @12039
176508: c9 c8 09                 a2 = a1 - a5
176511: 01                       fallthrough
      :                          @12040
176512: 82 7a                    a3 = u64 [a0]
176514: ab 8a ef                 jump @12037 if a3 != a1
      :                          @12041
176517: 7b 79                    u64 [a0] = a2
176519: 33 0b                    a4 = 0
176521: 01                       fallthrough
      :                          @12042
176522: ab 8a e7                 jump @12037 if a3 != a1
      :                          @12043
176525: 28 39 30                 jump @12856
      :                          @12044 [@dyn 1308]
176528: 3a 08 78 12 03           a1 = u64 [0x31278]
176533: 97 89 0d                 a2 = a1 << 0xd
176536: d3 89 09                 a2 = a2 ^ a1
176539: 98 9a 07                 a3 = a2 >> 0x7
176542: 3a 08 60 11 03           a1 = u64 [0x31160]
176547: d3 a9 09                 a2 = a2 ^ a3
176550: 97 9a 11                 a3 = a2 << 0x11
176553: d3 a9 09                 a2 = a2 ^ a3
176556: ca 89 0a                 a3 = a2 * a1
176559: 3a 0b 98 11 03           a4 = u64 [0x31198]
176564: 3e 09 78 12 03           u64 [0x31278] = a2
176569: 98 a9 04                 a2 = a3 >> 0x4
176572: d6 b9 09                 a2 = a2 mulhu a4
176575: 33 02 d0 07              t0 = 0x7d0
176579: ca 29 09                 a2 = a2 * t0
176582: bf 9a 0a                 i32 a3 = a3 - a2
176585: 97 aa 10                 a3 = a3 << 0x10
176588: 3a 06 78 12 03           s1 = u64 [0x31278]
176593: 33 0c 00 00 18 fc        a5 = 0xfffffffffc180000
176599: be ca 09                 i32 a2 = a3 + a5
176602: 97 6a 0d                 a3 = s1 << 0xd
176605: d3 a6 06                 s1 = s1 ^ a3
176608: 98 6a 07                 a3 = s1 >> 0x7
176611: d3 a6 06                 s1 = s1 ^ a3
176614: 97 6a 11                 a3 = s1 << 0x11
176617: d3 6a 0a                 a3 = a3 ^ s1
176620: ca 8a 08                 a1 = a3 * a1
176623: 3e 0a 78 12 03           u64 [0x31278] = a3
176628: 98 87 04                 a0 = a1 >> 0x4
176631: d6 b7 07                 a0 = a0 mulhu a4
176634: ca 27 07                 a0 = a0 * t0
176637: bf 78 08                 i32 a1 = a1 - a0
176640: 97 87 10                 a0 = a1 << 0x10
176643: be c7 07                 i32 a0 = a0 + a5
176646: ca 97 08                 a1 = a0 * a2
176649: 98 88 10                 a1 = a1 >> 0x10
176652: 7a 18 20 01              u32 [sp + 0x120] = a1
176656: 51 07 0a                 jump @12046 if a0 == 0
      :                          @12045
176659: 97 99 10                 a2 = a2 << 0x10
176662: cc 79 07                 a0 = a2 /s a0
176665: 01                       fallthrough
      :                          @12046
176666: 7a 17 e0 01              u32 [sp + 0x1e0] = a0
176670: 95 17 20 01              a0 = sp + 0x120
176674: 7b 17 38 02              u64 [sp + 0x238] = a0
176678: 33 07 92 0c              a0 = 0xc92
176682: 7b 17 40 02              u64 [sp + 0x240] = a0
176686: 95 18 e0 01              a1 = sp + 0x1e0
176690: 7b 18 48 02              u64 [sp + 0x248] = a1
176694: 7b 17 50 02              u64 [sp + 0x250] = a0
176698: 33 07 58 29 01           a0 = 0x12958
176703: 7b 17 90 02              u64 [sp + 0x290] = a0
176707: 49 21 98 02 02           u64 [sp + 664] = 0x2
176712: 49 21 b0 02              u64 [sp + 688] = 0
176716: 95 18 38 02              a1 = sp + 0x238
176720: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
176724: 49 21 a8 02 02           u64 [sp + 680] = 0x2
176729: 95 17 08 02              a0 = sp + 0x208
176733: 95 18 90 02              a1 = sp + 0x290
176737: 50 20 3a 0a de 9c fd     ra = 2618, jump @1491
      :                          @12047 [@dyn 1309]
176744: 82 16 10 02              s1 = u64 [sp + 0x210]
176748: 82 1b 18 02              a4 = u64 [sp + 0x218]
176752: 82 17 08 02              a0 = u64 [sp + 0x208]
176756: 7b 17 70                 u64 [sp + 0x70] = a0
176759: 33 07 02                 a0 = 0x2
176762: 33 08                    a1 = 0
176764: 33 09                    a2 = 0
176766: 64 6a                    a3 = s1
176768: 33 00 3c 0a              ra = 0xa3c
176772: 0a 64                    ecalli 100 // 'log'
176774: 01                       fallthrough
      :                          @12048 [@dyn 1310]
176775: 82 1c 70                 a5 = u64 [sp + 0x70]
176778: 82 17 68                 a0 = u64 [sp + 0x68]
176781: c8 c7 07                 a0 = a0 + a5
176784: 55 37 00 00 ff 09        jump @12050 if a0 >=u 4294901760
      :                          @12049
176790: 28 30 2f                 jump @12856
      :                          @12050
176793: 33 07 c0 22 03           a0 = 0x322c0
176798: 95 77 00 00 01           a0 = a0 + 0x10000
176803: 01                       fallthrough
      :                          @12051
176804: 82 78                    a1 = u64 [a0]
176806: c9 87 09                 a2 = a0 - a1
176809: aa 69 06                 jump @12053 if a2 == s1
      :                          @12052
176812: 28 1a 2f                 jump @12856
      :                          @12053
176815: c9 c8 09                 a2 = a1 - a5
176818: 01                       fallthrough
      :                          @12054
176819: 82 7a                    a3 = u64 [a0]
176821: ab 8a ef                 jump @12051 if a3 != a1
      :                          @12055
176824: 7b 79                    u64 [a0] = a2
176826: 33 0b                    a4 = 0
176828: 01                       fallthrough
      :                          @12056
176829: ab 8a e7                 jump @12051 if a3 != a1
      :                          @12057
176832: 28 06 2f                 jump @12856
      :                          @12058 [@dyn 1311]
176835: 3a 07 78 12 03           a0 = u64 [0x31278]
176840: 97 78 0d                 a1 = a0 << 0xd
176843: d3 87 07                 a0 = a0 ^ a1
176846: 98 78 07                 a1 = a0 >> 0x7
176849: d3 87 07                 a0 = a0 ^ a1
176852: 97 78 11                 a1 = a0 << 0x11
176855: d3 87 07                 a0 = a0 ^ a1
176858: 3e 07 78 12 03           u64 [0x31278] = a0
176863: 87 77 79 c8 75           i32 a0 = a0 * 0x75c879
176868: 83 77 5f f3 6e 3c        i32 a0 = a0 + 0x3c6ef35f
176874: 7a 17 e0 01              u32 [sp + 0x1e0] = a0
176878: 95 17 e0 01              a0 = sp + 0x1e0
176882: 7b 17 08 02              u64 [sp + 0x208] = a0
176886: 33 07 5e 0c              a0 = 0xc5e
176890: 7b 17 10 02              u64 [sp + 0x210] = a0
176894: 33 07 88 29 01           a0 = 0x12988
176899: 7b 17 90 02              u64 [sp + 0x290] = a0
176903: 49 21 98 02 01           u64 [sp + 664] = 0x1
176908: 49 21 b0 02              u64 [sp + 688] = 0
176912: 95 18 08 02              a1 = sp + 0x208
176916: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
176920: 49 21 a8 02 01           u64 [sp + 680] = 0x1
176925: 95 17 38 02              a0 = sp + 0x238
176929: 95 18 90 02              a1 = sp + 0x290
176933: 50 20 40 0a 1a 9c fd     ra = 2624, jump @1491
      :                          @12059 [@dyn 1312]
176940: 82 16 40 02              s1 = u64 [sp + 0x240]
176944: 82 1b 48 02              a4 = u64 [sp + 0x248]
176948: 82 17 38 02              a0 = u64 [sp + 0x238]
176952: 7b 17 70                 u64 [sp + 0x70] = a0
176955: 33 07 02                 a0 = 0x2
176958: 33 08                    a1 = 0
176960: 33 09                    a2 = 0
176962: 64 6a                    a3 = s1
176964: 33 00 42 0a              ra = 0xa42
176968: 0a 64                    ecalli 100 // 'log'
176970: 01                       fallthrough
      :                          @12060 [@dyn 1313]
176971: 82 1c 70                 a5 = u64 [sp + 0x70]
176974: 82 17 68                 a0 = u64 [sp + 0x68]
176977: c8 c7 07                 a0 = a0 + a5
176980: 53 37 00 00 ff 25        jump @12066 if a0 <u 4294901760
      :                          @12061
176986: 33 07 c0 22 03           a0 = 0x322c0
176991: 95 77 00 00 01           a0 = a0 + 0x10000
176996: 01                       fallthrough
      :                          @12062
176997: 82 78                    a1 = u64 [a0]
176999: c9 87 09                 a2 = a0 - a1
177002: ab 69 0f                 jump @12066 if a2 != s1
      :                          @12063
177005: c9 c8 09                 a2 = a1 - a5
177008: 01                       fallthrough
      :                          @12064
177009: 82 7a                    a3 = u64 [a0]
177011: ab 8a f2                 jump @12062 if a3 != a1
      :                          @12065
177014: 7b 79                    u64 [a0] = a2
177016: 01                       fallthrough
      :                          @12066
177017: 3a 07 78 12 03           a0 = u64 [0x31278]
177022: 3a 0a 60 11 03           a3 = u64 [0x31160]
177027: 97 78 0d                 a1 = a0 << 0xd
177030: d3 87 07                 a0 = a0 ^ a1
177033: 98 78 07                 a1 = a0 >> 0x7
177036: d3 87 07                 a0 = a0 ^ a1
177039: 97 78 11                 a1 = a0 << 0x11
177042: d3 87 07                 a0 = a0 ^ a1
177045: 3a 08 90 11 03           a1 = u64 [0x31190]
177050: 3e 07 78 12 03           u64 [0x31278] = a0
177055: 7b 1a 70                 u64 [sp + 0x70] = a3
177058: ca a7 09                 a2 = a0 * a3
177061: ca 87 07                 a0 = a0 * a1
177064: d3 97 07                 a0 = a0 ^ a2
177067: 98 78 07                 a1 = a0 >> 0x7
177070: d3 87 07                 a0 = a0 ^ a1
177073: 97 78 11                 a1 = a0 << 0x11
177076: d3 87 07                 a0 = a0 ^ a1
177079: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
177083: 95 17 e0 01              a0 = sp + 0x1e0
177087: 7b 17 08 02              u64 [sp + 0x208] = a0
177091: 33 07 28 0c              a0 = 0xc28
177095: 7b 17 10 02              u64 [sp + 0x210] = a0
177099: 33 07 a8 29 01           a0 = 0x129a8
177104: 7b 17 90 02              u64 [sp + 0x290] = a0
177108: 49 21 98 02 01           u64 [sp + 664] = 0x1
177113: 49 21 b0 02              u64 [sp + 688] = 0
177117: 95 18 08 02              a1 = sp + 0x208
177121: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
177125: 49 21 a8 02 01           u64 [sp + 680] = 0x1
177130: 95 17 38 02              a0 = sp + 0x238
177134: 95 18 90 02              a1 = sp + 0x290
177138: 50 20 44 0a 4d 9b fd     ra = 2628, jump @1491
      :                          @12067 [@dyn 1314]
177145: 82 16 40 02              s1 = u64 [sp + 0x240]
177149: 82 1b 48 02              a4 = u64 [sp + 0x248]
177153: 82 17 38 02              a0 = u64 [sp + 0x238]
177157: 7b 17 60                 u64 [sp + 0x60] = a0
177160: 33 07 02                 a0 = 0x2
177163: 33 08                    a1 = 0
177165: 33 09                    a2 = 0
177167: 64 6a                    a3 = s1
177169: 33 00 46 0a              ra = 0xa46
177173: 0a 64                    ecalli 100 // 'log'
177175: 01                       fallthrough
      :                          @12068 [@dyn 1315]
177176: 82 1c 60                 a5 = u64 [sp + 0x60]
177179: 82 17 68                 a0 = u64 [sp + 0x68]
177182: c8 c7 07                 a0 = a0 + a5
177185: 53 37 00 00 ff 25        jump @12074 if a0 <u 4294901760
      :                          @12069
177191: 33 07 c0 22 03           a0 = 0x322c0
177196: 95 77 00 00 01           a0 = a0 + 0x10000
177201: 01                       fallthrough
      :                          @12070
177202: 82 78                    a1 = u64 [a0]
177204: c9 87 09                 a2 = a0 - a1
177207: ab 69 0f                 jump @12074 if a2 != s1
      :                          @12071
177210: c9 c8 09                 a2 = a1 - a5
177213: 01                       fallthrough
      :                          @12072
177214: 82 7a                    a3 = u64 [a0]
177216: ab 8a f2                 jump @12070 if a3 != a1
      :                          @12073
177219: 7b 79                    u64 [a0] = a2
177221: 01                       fallthrough
      :                          @12074
177222: 3a 07 78 12 03           a0 = u64 [0x31278]
177227: 97 78 0d                 a1 = a0 << 0xd
177230: d3 87 07                 a0 = a0 ^ a1
177233: 98 78 07                 a1 = a0 >> 0x7
177236: d3 87 07                 a0 = a0 ^ a1
177239: 97 78 11                 a1 = a0 << 0x11
177242: d3 87 07                 a0 = a0 ^ a1
177245: 3e 07 78 12 03           u64 [0x31278] = a0
177250: 3a 08 78 12 03           a1 = u64 [0x31278]
177255: 82 19 70                 a2 = u64 [sp + 0x70]
177258: ca 97 07                 a0 = a0 * a2
177261: 97 89 0d                 a2 = a1 << 0xd
177264: d3 98 08                 a1 = a1 ^ a2
177267: 98 89 07                 a2 = a1 >> 0x7
177270: d3 98 08                 a1 = a1 ^ a2
177273: 97 89 11                 a2 = a1 << 0x11
177276: d3 98 08                 a1 = a1 ^ a2
177279: 3e 08 78 12 03           u64 [0x31278] = a1
177284: 98 78 2d                 a1 = a0 >> 0x2d
177287: 98 79 1b                 a2 = a0 >> 0x1b
177290: d3 98 08                 a1 = a1 ^ a2
177293: 98 77 3b                 a0 = a0 >> 0x3b
177296: df 78 07                 i32 a0 = a1 >>r a0
177299: 7a 17 e0 01              u32 [sp + 0x1e0] = a0
177303: 95 17 e0 01              a0 = sp + 0x1e0
177307: 7b 17 08 02              u64 [sp + 0x208] = a0
177311: 33 07 5e 0c              a0 = 0xc5e
177315: 7b 17 70                 u64 [sp + 0x70] = a0
177318: 7b 17 10 02              u64 [sp + 0x210] = a0
177322: 33 07 c8 29 01           a0 = 0x129c8
177327: 7b 17 90 02              u64 [sp + 0x290] = a0
177331: 49 21 98 02 01           u64 [sp + 664] = 0x1
177336: 49 21 b0 02              u64 [sp + 688] = 0
177340: 95 18 08 02              a1 = sp + 0x208
177344: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
177348: 49 21 a8 02 01           u64 [sp + 680] = 0x1
177353: 95 17 38 02              a0 = sp + 0x238
177357: 95 18 90 02              a1 = sp + 0x290
177361: 50 20 48 0a 6e 9a fd     ra = 2632, jump @1491
      :                          @12075 [@dyn 1316]
177368: 82 16 40 02              s1 = u64 [sp + 0x240]
177372: 82 1b 48 02              a4 = u64 [sp + 0x248]
177376: 82 17 38 02              a0 = u64 [sp + 0x238]
177380: 7b 17 60                 u64 [sp + 0x60] = a0
177383: 33 07 02                 a0 = 0x2
177386: 33 08                    a1 = 0
177388: 33 09                    a2 = 0
177390: 64 6a                    a3 = s1
177392: 33 00 4a 0a              ra = 0xa4a
177396: 0a 64                    ecalli 100 // 'log'
177398: 01                       fallthrough
      :                          @12076 [@dyn 1317]
177399: 82 1c 60                 a5 = u64 [sp + 0x60]
177402: 82 17 68                 a0 = u64 [sp + 0x68]
177405: c8 c7 07                 a0 = a0 + a5
177408: 53 37 00 00 ff 25        jump @12082 if a0 <u 4294901760
      :                          @12077
177414: 33 07 c0 22 03           a0 = 0x322c0
177419: 95 77 00 00 01           a0 = a0 + 0x10000
177424: 01                       fallthrough
      :                          @12078
177425: 82 78                    a1 = u64 [a0]
177427: c9 87 09                 a2 = a0 - a1
177430: ab 69 0f                 jump @12082 if a2 != s1
      :                          @12079
177433: c9 c8 09                 a2 = a1 - a5
177436: 01                       fallthrough
      :                          @12080
177437: 82 7a                    a3 = u64 [a0]
177439: ab 8a f2                 jump @12078 if a3 != a1
      :                          @12081
177442: 7b 79                    u64 [a0] = a2
177444: 01                       fallthrough
      :                          @12082
177445: 3a 07 78 12 03           a0 = u64 [0x31278]
177450: 97 78 0d                 a1 = a0 << 0xd
177453: d3 87 07                 a0 = a0 ^ a1
177456: 98 78 07                 a1 = a0 >> 0x7
177459: d3 87 07                 a0 = a0 ^ a1
177462: 97 78 11                 a1 = a0 << 0x11
177465: d3 87 07                 a0 = a0 ^ a1
177468: 3e 07 78 12 03           u64 [0x31278] = a0
177473: 3a 08 78 12 03           a1 = u64 [0x31278]
177478: 97 89 0d                 a2 = a1 << 0xd
177481: d3 98 08                 a1 = a1 ^ a2
177484: 98 89 07                 a2 = a1 >> 0x7
177487: d3 98 08                 a1 = a1 ^ a2
177490: 97 89 11                 a2 = a1 << 0x11
177493: d3 98 08                 a1 = a1 ^ a2
177496: 87 89 1d dd 6c 4f        i32 a2 = a1 * 0x4f6cdd1d
177502: 3e 08 78 12 03           u64 [0x31278] = a1
177507: 96 77 fd 79 6d ef        a0 = a0 * 0xffffffffef6d79fd
177513: c8 97 07                 a0 = a0 + a2
177516: 7a 17 e0 01              u32 [sp + 0x1e0] = a0
177520: 95 17 e0 01              a0 = sp + 0x1e0
177524: 7b 17 08 02              u64 [sp + 0x208] = a0
177528: 82 17 70                 a0 = u64 [sp + 0x70]
177531: 7b 17 10 02              u64 [sp + 0x210] = a0
177535: 33 07 e8 29 01           a0 = 0x129e8
177540: 7b 17 90 02              u64 [sp + 0x290] = a0
177544: 49 21 98 02 01           u64 [sp + 664] = 0x1
177549: 49 21 b0 02              u64 [sp + 688] = 0
177553: 95 18 08 02              a1 = sp + 0x208
177557: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
177561: 49 21 a8 02 01           u64 [sp + 680] = 0x1
177566: 95 17 38 02              a0 = sp + 0x238
177570: 95 18 90 02              a1 = sp + 0x290
177574: 50 20 4c 0a 99 99 fd     ra = 2636, jump @1491
      :                          @12083 [@dyn 1318]
177581: 82 16 40 02              s1 = u64 [sp + 0x240]
177585: 82 1b 48 02              a4 = u64 [sp + 0x248]
177589: 82 17 38 02              a0 = u64 [sp + 0x238]
177593: 7b 17 70                 u64 [sp + 0x70] = a0
177596: 33 07 02                 a0 = 0x2
177599: 33 08                    a1 = 0
177601: 33 09                    a2 = 0
177603: 64 6a                    a3 = s1
177605: 33 00 4e 0a              ra = 0xa4e
177609: 0a 64                    ecalli 100 // 'log'
177611: 01                       fallthrough
      :                          @12084 [@dyn 1319]
177612: 82 1c 70                 a5 = u64 [sp + 0x70]
177615: 82 17 68                 a0 = u64 [sp + 0x68]
177618: c8 c7 07                 a0 = a0 + a5
177621: 55 37 00 00 ff 09        jump @12086 if a0 >=u 4294901760
      :                          @12085
177627: 28 eb 2b                 jump @12856
      :                          @12086
177630: 33 07 c0 22 03           a0 = 0x322c0
177635: 95 77 00 00 01           a0 = a0 + 0x10000
177640: 01                       fallthrough
      :                          @12087
177641: 82 78                    a1 = u64 [a0]
177643: c9 87 09                 a2 = a0 - a1
177646: aa 69 06                 jump @12089 if a2 == s1
      :                          @12088
177649: 28 d5 2b                 jump @12856
      :                          @12089
177652: c9 c8 09                 a2 = a1 - a5
177655: 01                       fallthrough
      :                          @12090
177656: 82 7a                    a3 = u64 [a0]
177658: ab 8a ef                 jump @12087 if a3 != a1
      :                          @12091
177661: 7b 79                    u64 [a0] = a2
177663: 33 0b                    a4 = 0
177665: 01                       fallthrough
      :                          @12092
177666: ab 8a e7                 jump @12087 if a3 != a1
      :                          @12093
177669: 28 c1 2b                 jump @12856
      :                          @12094 [@dyn 1320]
177672: 3a 07 78 12 03           a0 = u64 [0x31278]
177677: 97 78 0d                 a1 = a0 << 0xd
177680: d3 87 07                 a0 = a0 ^ a1
177683: 98 78 07                 a1 = a0 >> 0x7
177686: d3 87 07                 a0 = a0 ^ a1
177689: 97 78 11                 a1 = a0 << 0x11
177692: d3 78 08                 a1 = a1 ^ a0
177695: 96 77 1d                 a0 = a0 * 0x1d
177698: 3e 08 78 12 03           u64 [0x31278] = a1
177703: 84 76 1f                 s1 = a0 & 0x1f
177706: 64 67                    a0 = s1
177708: 50 20 52 0a 16 9c fd     ra = 2642, jump @1561
      :                          @12095 [@dyn 1321]
177715: 7b 17 20 01              u64 [sp + 0x120] = a0
177719: 7b 18 28 01              u64 [sp + 0x128] = a1
177723: 49 21 30 01              u64 [sp + 304] = 0
177727: 52 06 06                 jump @12097 if s1 != 0
      :                          @12096
177730: 28 11 34                 jump @13006
      :                          @12097
177733: 64 6b                    a4 = s1
177735: 28 1e                    jump @12100
      :                          @12098
177737: 82 1a 28 01              a3 = u64 [sp + 0x128]
177741: 96 67 1d                 a0 = s1 * 0x1d
177744: c8 8a 09                 a2 = a3 + a1
177747: 78 97                    u8 [a2] = a0
177749: 95 86 01                 s1 = a1 + 0x1
177752: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
177755: 7b 16 30 01              u64 [sp + 0x130] = s1
177759: 52 0b 06                 jump @12100 if a4 != 0
      :                          @12099
177762: 28 f4 33                 jump @13007
      :                          @12100
177765: 3a 07 78 12 03           a0 = u64 [0x31278]
177770: 97 78 0d                 a1 = a0 << 0xd
177773: d3 87 07                 a0 = a0 ^ a1
177776: 98 76 07                 s1 = a0 >> 0x7
177779: d3 76 06                 s1 = s1 ^ a0
177782: 97 67 11                 a0 = s1 << 0x11
177785: d3 67 07                 a0 = a0 ^ s1
177788: 3e 07 78 12 03           u64 [0x31278] = a0
177793: 82 18 30 01              a1 = u64 [sp + 0x130]
177797: 82 17 20 01              a0 = u64 [sp + 0x120]
177801: ab 78 c0                 jump @12098 if a1 != a0
      :                          @12101
177804: 95 17 20 01              a0 = sp + 0x120
177808: 7b 1b 70                 u64 [sp + 0x70] = a4
177811: 50 20 54 0a f4 9c fd     ra = 2644, jump @1593
      :                          @12102 [@dyn 1322]
177818: 82 1b 70                 a4 = u64 [sp + 0x70]
177821: 82 18 30 01              a1 = u64 [sp + 0x130]
177825: 28 a8                    jump @12098
      :                          @12103 [@dyn 1323]
177827: 3a 08 78 12 03           a1 = u64 [0x31278]
177832: 97 89 0d                 a2 = a1 << 0xd
177835: d3 98 08                 a1 = a1 ^ a2
177838: 98 89 07                 a2 = a1 >> 0x7
177841: d3 98 08                 a1 = a1 ^ a2
177844: 97 89 11                 a2 = a1 << 0x11
177847: d3 98 08                 a1 = a1 ^ a2
177850: 3a 09 60 11 03           a2 = u64 [0x31160]
177855: 3a 0a 88 11 03           a3 = u64 [0x31188]
177860: 3e 08 78 12 03           u64 [0x31278] = a1
177865: ca 98 07                 a0 = a1 * a2
177868: 98 78 05                 a1 = a0 >> 0x5
177871: d6 a8 08                 a1 = a1 mulhu a3
177874: 98 88 07                 a1 = a1 >> 0x7
177877: 96 88 a0 86 01           a1 = a1 * 0x186a0
177882: c9 87 07                 a0 = a0 - a1
177885: 95 77 01                 a0 = a0 + 0x1
177888: 7b 17 20 01              u64 [sp + 0x120] = a0
177892: 50 20 58 0a e6 de fd     ra = 2648, jump @2609
      :                          @12104 [@dyn 1324]
177899: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
177903: 95 17 20 01              a0 = sp + 0x120
177907: 7b 17 38 02              u64 [sp + 0x238] = a0
177911: 33 07 28 0c              a0 = 0xc28
177915: 7b 17 40 02              u64 [sp + 0x240] = a0
177919: 95 18 e0 01              a1 = sp + 0x1e0
177923: 7b 18 48 02              u64 [sp + 0x248] = a1
177927: 7b 17 50 02              u64 [sp + 0x250] = a0
177931: 33 07 88 2a 01           a0 = 0x12a88
177936: 7b 17 90 02              u64 [sp + 0x290] = a0
177940: 49 21 98 02 02           u64 [sp + 664] = 0x2
177945: 49 21 b0 02              u64 [sp + 688] = 0
177949: 95 18 38 02              a1 = sp + 0x238
177953: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
177957: 49 21 a8 02 02           u64 [sp + 680] = 0x2
177962: 95 17 08 02              a0 = sp + 0x208
177966: 95 18 90 02              a1 = sp + 0x290
177970: 50 20 5a 0a 0d 98 fd     ra = 2650, jump @1491
      :                          @12105 [@dyn 1325]
177977: 82 16 10 02              s1 = u64 [sp + 0x210]
177981: 82 1b 18 02              a4 = u64 [sp + 0x218]
177985: 82 17 08 02              a0 = u64 [sp + 0x208]
177989: 7b 17 70                 u64 [sp + 0x70] = a0
177992: 33 07 02                 a0 = 0x2
177995: 33 08                    a1 = 0
177997: 33 09                    a2 = 0
177999: 64 6a                    a3 = s1
178001: 33 00 5c 0a              ra = 0xa5c
178005: 0a 64                    ecalli 100 // 'log'
178007: 01                       fallthrough
      :                          @12106 [@dyn 1326]
178008: 82 1c 70                 a5 = u64 [sp + 0x70]
178011: 82 17 68                 a0 = u64 [sp + 0x68]
178014: c8 c7 07                 a0 = a0 + a5
178017: 55 37 00 00 ff 09        jump @12108 if a0 >=u 4294901760
      :                          @12107
178023: 28 5f 2a                 jump @12856
      :                          @12108
178026: 33 07 c0 22 03           a0 = 0x322c0
178031: 95 77 00 00 01           a0 = a0 + 0x10000
178036: 01                       fallthrough
      :                          @12109
178037: 82 78                    a1 = u64 [a0]
178039: c9 87 09                 a2 = a0 - a1
178042: aa 69 06                 jump @12111 if a2 == s1
      :                          @12110
178045: 28 49 2a                 jump @12856
      :                          @12111
178048: c9 c8 09                 a2 = a1 - a5
178051: 01                       fallthrough
      :                          @12112
178052: 82 7a                    a3 = u64 [a0]
178054: ab 8a ef                 jump @12109 if a3 != a1
      :                          @12113
178057: 7b 79                    u64 [a0] = a2
178059: 33 0b                    a4 = 0
178061: 01                       fallthrough
      :                          @12114
178062: ab 8a e7                 jump @12109 if a3 != a1
      :                          @12115
178065: 28 35 2a                 jump @12856
      :                          @12116 [@dyn 1327]
178068: 3a 08 78 12 03           a1 = u64 [0x31278]
178073: 97 89 0d                 a2 = a1 << 0xd
178076: d3 98 08                 a1 = a1 ^ a2
178079: 98 89 07                 a2 = a1 >> 0x7
178082: d3 98 08                 a1 = a1 ^ a2
178085: 97 89 11                 a2 = a1 << 0x11
178088: d3 98 08                 a1 = a1 ^ a2
178091: 3a 09 60 11 03           a2 = u64 [0x31160]
178096: 3a 0a 68 11 03           a3 = u64 [0x31168]
178101: 3e 08 78 12 03           u64 [0x31278] = a1
178106: ca 98 07                 a0 = a1 * a2
178109: 98 78 03                 a1 = a0 >> 0x3
178112: d6 a8 08                 a1 = a1 mulhu a3
178115: 98 88 04                 a1 = a1 >> 0x4
178118: 96 88 e8 03              a1 = a1 * 0x3e8
178122: c9 87 07                 a0 = a0 - a1
178125: 95 76 01                 s1 = a0 + 0x1
178128: 7b 16 20 01              u64 [sp + 0x120] = s1
178132: 95 17 90 02              a0 = sp + 0x290
178136: 64 68                    a1 = s1
178138: 33 00 60 0a              ra = 0xa60
178142: 95 11 90                 sp = sp + 0xffffffffffffff90
178145: 7b 10 68                 u64 [sp + 0x68] = ra
178148: 7b 15 60                 u64 [sp + 0x60] = s0
178151: 7b 16 58                 u64 [sp + 0x58] = s1
178154: 95 89 01                 a2 = a1 + 0x1
178157: 33 06 c0 22 03           s1 = 0x322c0
178162: 33 02 00 00 01           t0 = 0x10000
178167: c8 26 06                 s1 = s1 + t0
178170: 28 33 de fd              jump @2626
      :                          @12117 [@dyn 1328]
178174: 82 12 90 02              t0 = u64 [sp + 0x290]
178178: 82 13 98 02              t1 = u64 [sp + 0x298]
178182: 82 17 a0 02              a0 = u64 [sp + 0x2a0]
178186: 82 1b a8 02              a4 = u64 [sp + 0x2a8]
178190: 82 1c b0 02              a5 = u64 [sp + 0x2b0]
178194: 82 18 b8 02              a1 = u64 [sp + 0x2b8]
178198: 82 19 c0 02              a2 = u64 [sp + 0x2c0]
178202: 82 1a c8 02              a3 = u64 [sp + 0x2c8]
178206: 82 14 d0 02              t2 = u64 [sp + 0x2d0]
178210: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
178214: ac 86 06                 jump @12119 if s1 <u a1
      :                          @12118
178217: 28 d0 3b                 jump @13257
      :                          @12119
178220: 7b 19 48                 u64 [sp + 0x48] = a2
178223: 7b 1b 58                 u64 [sp + 0x58] = a4
178226: 7b 12 60                 u64 [sp + 0x60] = t0
178229: 7b 13 70                 u64 [sp + 0x70] = t1
178232: ac 46 06                 jump @12121 if s1 <u t2
      :                          @12120
178235: 28 ca 3b                 jump @13267
      :                          @12121
178238: 97 67 03                 a0 = s1 << 0x3
178241: 7b 1c 40                 u64 [sp + 0x40] = a5
178244: c8 c7 07                 a0 = a0 + a5
178247: 97 66 02                 s1 = s1 << 0x2
178250: 7b 1a 38                 u64 [sp + 0x38] = a3
178253: c8 a6 06                 s1 = s1 + a3
178256: 95 18 20 01              a1 = sp + 0x120
178260: 7b 18 90 02              u64 [sp + 0x290] = a1
178264: 33 08 28 0c              a1 = 0xc28
178268: 7b 18 98 02              u64 [sp + 0x298] = a1
178272: 95 19 e0 01              a2 = sp + 0x1e0
178276: 7b 19 a0 02              u64 [sp + 0x2a0] = a2
178280: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
178284: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
178288: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
178292: 7b 16 c0 02              u64 [sp + 0x2c0] = s1
178296: 33 07 92 0c              a0 = 0xc92
178300: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
178304: 33 07 c0 2a 01           a0 = 0x12ac0
178309: 7b 17 38 02              u64 [sp + 0x238] = a0
178313: 49 21 40 02 04           u64 [sp + 576] = 0x4
178318: 49 21 58 02              u64 [sp + 600] = 0
178322: 95 18 90 02              a1 = sp + 0x290
178326: 7b 18 48 02              u64 [sp + 0x248] = a1
178330: 49 21 50 02 04           u64 [sp + 592] = 0x4
178335: 95 17 08 02              a0 = sp + 0x208
178339: 95 18 38 02              a1 = sp + 0x238
178343: 50 20 62 0a 98 96 fd     ra = 2658, jump @1491
      :                          @12122 [@dyn 1329]
178350: 82 16 10 02              s1 = u64 [sp + 0x210]
178354: 82 1b 18 02              a4 = u64 [sp + 0x218]
178358: 82 17 08 02              a0 = u64 [sp + 0x208]
178362: 7b 17 30                 u64 [sp + 0x30] = a0
178365: 33 07 02                 a0 = 0x2
178368: 33 08                    a1 = 0
178370: 33 09                    a2 = 0
178372: 64 6a                    a3 = s1
178374: 33 00 64 0a              ra = 0xa64
178378: 0a 64                    ecalli 100 // 'log'
178380: 01                       fallthrough
      :                          @12123 [@dyn 1330]
178381: 82 1c 30                 a5 = u64 [sp + 0x30]
178384: 82 17 68                 a0 = u64 [sp + 0x68]
178387: c8 c7 07                 a0 = a0 + a5
178390: 53 37 00 00 ff 25        jump @12129 if a0 <u 4294901760
      :                          @12124
178396: 33 07 c0 22 03           a0 = 0x322c0
178401: 95 77 00 00 01           a0 = a0 + 0x10000
178406: 01                       fallthrough
      :                          @12125
178407: 82 78                    a1 = u64 [a0]
178409: c9 87 09                 a2 = a0 - a1
178412: ab 69 0f                 jump @12129 if a2 != s1
      :                          @12126
178415: c9 c8 09                 a2 = a1 - a5
178418: 01                       fallthrough
      :                          @12127
178419: 82 7a                    a3 = u64 [a0]
178421: ab 8a f2                 jump @12125 if a3 != a1
      :                          @12128
178424: 7b 79                    u64 [a0] = a2
178426: 01                       fallthrough
      :                          @12129
178427: 82 13 58                 t1 = u64 [sp + 0x58]
178430: 82 16 38                 s1 = u64 [sp + 0x38]
178433: 82 18 48                 a1 = u64 [sp + 0x48]
178436: 51 08 2c                 jump @12136 if a1 == 0
      :                          @12130
178439: 56 28 00 40 29           jump @12136 if a1 >u 16384
      :                          @12131
178444: 97 87 02                 a0 = a1 << 0x2
178447: 33 08 c0 22 03           a1 = 0x322c0
178452: 95 88 00 00 01           a1 = a1 + 0x10000
178457: 01                       fallthrough
      :                          @12132
178458: 82 89                    a2 = u64 [a1]
178460: c9 98 0a                 a3 = a1 - a2
178463: ab 6a 11                 jump @12136 if a3 != s1
      :                          @12133
178466: c9 79 0a                 a3 = a2 - a0
178469: 01                       fallthrough
      :                          @12134
178470: 82 8b                    a4 = u64 [a1]
178472: ab 9b f2                 jump @12132 if a4 != a2
      :                          @12135
178475: 7b 8a                    u64 [a1] = a3
178477: 33 0c                    a5 = 0
178479: 01                       fallthrough
      :                          @12136
178480: 82 12 70                 t0 = u64 [sp + 0x70]
178483: 82 16 40                 s1 = u64 [sp + 0x40]
178486: 51 03 2c                 jump @12143 if t1 == 0
      :                          @12137
178489: 56 23 00 20 29           jump @12143 if t1 >u 8192
      :                          @12138
178494: 97 37 03                 a0 = t1 << 0x3
178497: 33 08 c0 22 03           a1 = 0x322c0
178502: 95 88 00 00 01           a1 = a1 + 0x10000
178507: 01                       fallthrough
      :                          @12139
178508: 82 89                    a2 = u64 [a1]
178510: c9 98 0a                 a3 = a1 - a2
178513: ab 6a 11                 jump @12143 if a3 != s1
      :                          @12140
178516: c9 79 0a                 a3 = a2 - a0
178519: 01                       fallthrough
      :                          @12141
178520: 82 8b                    a4 = u64 [a1]
178522: ab 9b f2                 jump @12139 if a4 != a2
      :                          @12142
178525: 7b 8a                    u64 [a1] = a3
178527: 33 0c                    a5 = 0
178529: 01                       fallthrough
      :                          @12143
178530: 82 18 60                 a1 = u64 [sp + 0x60]
178533: 52 08 06                 jump @12145 if a1 != 0
      :                          @12144
178536: 28 5e 28                 jump @12856
      :                          @12145
178539: 54 28 00 20 08           jump @12147 if a1 <=u 8192
      :                          @12146
178544: 28 56 28                 jump @12856
      :                          @12147
178547: 97 87 03                 a0 = a1 << 0x3
178550: 33 08 c0 22 03           a1 = 0x322c0
178555: 95 88 00 00 01           a1 = a1 + 0x10000
178560: 01                       fallthrough
      :                          @12148
178561: 82 89                    a2 = u64 [a1]
178563: c9 98 0a                 a3 = a1 - a2
178566: aa 2a 06                 jump @12150 if a3 == t0
      :                          @12149
178569: 28 3d 28                 jump @12856
      :                          @12150
178572: c9 79 0a                 a3 = a2 - a0
178575: 01                       fallthrough
      :                          @12151
178576: 82 8b                    a4 = u64 [a1]
178578: ab 9b ef                 jump @12148 if a4 != a2
      :                          @12152
178581: 7b 8a                    u64 [a1] = a3
178583: 33 0c                    a5 = 0
178585: 01                       fallthrough
      :                          @12153
178586: ab 9b e7                 jump @12148 if a4 != a2
      :                          @12154
178589: 28 29 28                 jump @12856
      :                          @12155 [@dyn 1331]
178592: 3a 08 78 12 03           a1 = u64 [0x31278]
178597: 97 89 0d                 a2 = a1 << 0xd
178600: d3 98 08                 a1 = a1 ^ a2
178603: 98 89 07                 a2 = a1 >> 0x7
178606: d3 98 08                 a1 = a1 ^ a2
178609: 97 89 11                 a2 = a1 << 0x11
178612: d3 98 08                 a1 = a1 ^ a2
178615: 3a 09 60 11 03           a2 = u64 [0x31160]
178620: 3a 0a 68 11 03           a3 = u64 [0x31168]
178625: 3e 08 78 12 03           u64 [0x31278] = a1
178630: ca 98 07                 a0 = a1 * a2
178633: 98 78 03                 a1 = a0 >> 0x3
178636: d6 a8 08                 a1 = a1 mulhu a3
178639: 98 88 04                 a1 = a1 >> 0x4
178642: 96 88 e8 03              a1 = a1 * 0x3e8
178646: c9 87 07                 a0 = a0 - a1
178649: 95 76 01                 s1 = a0 + 0x1
178652: 7b 16 20 01              u64 [sp + 0x120] = s1
178656: 95 17 e0 01              a0 = sp + 0x1e0
178660: 64 68                    a1 = s1
178662: 33 00 68 0a              ra = 0xa68
178666: 95 11 a8                 sp = sp + 0xffffffffffffffa8
178669: 7b 10 50                 u64 [sp + 0x50] = ra
178672: 7b 15 48                 u64 [sp + 0x48] = s0
178675: 7b 16 40                 u64 [sp + 0x40] = s1
178678: 95 86 01                 s1 = a1 + 0x1
178681: 33 09 c0 22 03           a2 = 0x322c0
178686: 33 02 00 00 01           t0 = 0x10000
178691: c8 29 09                 a2 = a2 + t0
178694: 28 87 df fd              jump @2702
      :                          @12156 [@dyn 1332]
178698: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
178702: ac 86 06                 jump @12158 if s1 <u a1
      :                          @12157
178705: 28 e8 39                 jump @13257
      :                          @12158
178708: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
178712: 97 66 02                 s1 = s1 << 0x2
178715: 7b 17 70                 u64 [sp + 0x70] = a0
178718: c8 76 06                 s1 = s1 + a0
178721: 95 17 20 01              a0 = sp + 0x120
178725: 7b 17 38 02              u64 [sp + 0x238] = a0
178729: 33 07 28 0c              a0 = 0xc28
178733: 7b 17 40 02              u64 [sp + 0x240] = a0
178737: 7b 16 48 02              u64 [sp + 0x248] = s1
178741: 33 07 92 0c              a0 = 0xc92
178745: 7b 17 50 02              u64 [sp + 0x250] = a0
178749: 33 07 18 2b 01           a0 = 0x12b18
178754: 7b 17 90 02              u64 [sp + 0x290] = a0
178758: 49 21 98 02 02           u64 [sp + 664] = 0x2
178763: 49 21 b0 02              u64 [sp + 688] = 0
178767: 95 18 38 02              a1 = sp + 0x238
178771: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
178775: 49 21 a8 02 02           u64 [sp + 680] = 0x2
178780: 95 17 08 02              a0 = sp + 0x208
178784: 95 18 90 02              a1 = sp + 0x290
178788: 50 20 6a 0a db 94 fd     ra = 2666, jump @1491
      :                          @12159 [@dyn 1333]
178795: 82 16 10 02              s1 = u64 [sp + 0x210]
178799: 82 1b 18 02              a4 = u64 [sp + 0x218]
178803: 82 17 08 02              a0 = u64 [sp + 0x208]
178807: 7b 17 60                 u64 [sp + 0x60] = a0
178810: 33 07 02                 a0 = 0x2
178813: 33 08                    a1 = 0
178815: 33 09                    a2 = 0
178817: 64 6a                    a3 = s1
178819: 33 00 6c 0a              ra = 0xa6c
178823: 0a 64                    ecalli 100 // 'log'
178825: 01                       fallthrough
      :                          @12160 [@dyn 1334]
178826: 82 1c 60                 a5 = u64 [sp + 0x60]
178829: 82 17 68                 a0 = u64 [sp + 0x68]
178832: c8 c7 07                 a0 = a0 + a5
178835: 53 37 00 00 ff 25        jump @12166 if a0 <u 4294901760
      :                          @12161
178841: 33 07 c0 22 03           a0 = 0x322c0
178846: 95 77 00 00 01           a0 = a0 + 0x10000
178851: 01                       fallthrough
      :                          @12162
178852: 82 78                    a1 = u64 [a0]
178854: c9 87 09                 a2 = a0 - a1
178857: ab 69 0f                 jump @12166 if a2 != s1
      :                          @12163
178860: c9 c8 09                 a2 = a1 - a5
178863: 01                       fallthrough
      :                          @12164
178864: 82 7a                    a3 = u64 [a0]
178866: ab 8a f2                 jump @12162 if a3 != a1
      :                          @12165
178869: 7b 79                    u64 [a0] = a2
178871: 01                       fallthrough
      :                          @12166
178872: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
178876: 82 16 70                 s1 = u64 [sp + 0x70]
178879: 52 07 06                 jump @12168 if a0 != 0
      :                          @12167
178882: 28 04 27                 jump @12856
      :                          @12168
178885: 54 27 00 40 08           jump @12170 if a0 <=u 16384
      :                          @12169
178890: 28 fc 26                 jump @12856
      :                          @12170
178893: 97 77 02                 a0 = a0 << 0x2
178896: 33 08 c0 22 03           a1 = 0x322c0
178901: 95 88 00 00 01           a1 = a1 + 0x10000
178906: 01                       fallthrough
      :                          @12171
178907: 82 89                    a2 = u64 [a1]
178909: c9 98 0a                 a3 = a1 - a2
178912: aa 6a 06                 jump @12173 if a3 == s1
      :                          @12172
178915: 28 e3 26                 jump @12856
      :                          @12173
178918: c9 79 0a                 a3 = a2 - a0
178921: 01                       fallthrough
      :                          @12174
178922: 82 8b                    a4 = u64 [a1]
178924: ab 9b ef                 jump @12171 if a4 != a2
      :                          @12175
178927: 7b 8a                    u64 [a1] = a3
178929: 33 0c                    a5 = 0
178931: 01                       fallthrough
      :                          @12176
178932: ab 9b e7                 jump @12171 if a4 != a2
      :                          @12177
178935: 28 cf 26                 jump @12856
      :                          @12178 [@dyn 1335]
178938: 3a 08 78 12 03           a1 = u64 [0x31278]
178943: 97 89 0d                 a2 = a1 << 0xd
178946: d3 98 08                 a1 = a1 ^ a2
178949: 98 89 07                 a2 = a1 >> 0x7
178952: d3 98 08                 a1 = a1 ^ a2
178955: 97 89 11                 a2 = a1 << 0x11
178958: d3 98 08                 a1 = a1 ^ a2
178961: 3a 09 60 11 03           a2 = u64 [0x31160]
178966: 3a 0a 88 11 03           a3 = u64 [0x31188]
178971: 3e 08 78 12 03           u64 [0x31278] = a1
178976: ca 98 07                 a0 = a1 * a2
178979: 98 78 05                 a1 = a0 >> 0x5
178982: d6 a8 08                 a1 = a1 mulhu a3
178985: 98 88 07                 a1 = a1 >> 0x7
178988: 96 88 a0 86 01           a1 = a1 * 0x186a0
178993: c9 87 07                 a0 = a0 - a1
178996: 95 77 01                 a0 = a0 + 0x1
178999: 7b 17 20 01              u64 [sp + 0x120] = a0
179003: 50 20 70 0a 5e dd fd     ra = 2672, jump @2669
      :                          @12179 [@dyn 1336]
179010: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
179014: 95 17 20 01              a0 = sp + 0x120
179018: 7b 17 38 02              u64 [sp + 0x238] = a0
179022: 33 07 28 0c              a0 = 0xc28
179026: 7b 17 40 02              u64 [sp + 0x240] = a0
179030: 95 18 e0 01              a1 = sp + 0x1e0
179034: 7b 18 48 02              u64 [sp + 0x248] = a1
179038: 7b 17 50 02              u64 [sp + 0x250] = a0
179042: 33 07 50 2b 01           a0 = 0x12b50
179047: 7b 17 90 02              u64 [sp + 0x290] = a0
179051: 49 21 98 02 02           u64 [sp + 664] = 0x2
179056: 49 21 b0 02              u64 [sp + 688] = 0
179060: 95 18 38 02              a1 = sp + 0x238
179064: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
179068: 49 21 a8 02 02           u64 [sp + 680] = 0x2
179073: 95 17 08 02              a0 = sp + 0x208
179077: 95 18 90 02              a1 = sp + 0x290
179081: 50 20 72 0a b6 93 fd     ra = 2674, jump @1491
      :                          @12180 [@dyn 1337]
179088: 82 16 10 02              s1 = u64 [sp + 0x210]
179092: 82 1b 18 02              a4 = u64 [sp + 0x218]
179096: 82 17 08 02              a0 = u64 [sp + 0x208]
179100: 7b 17 70                 u64 [sp + 0x70] = a0
179103: 33 07 02                 a0 = 0x2
179106: 33 08                    a1 = 0
179108: 33 09                    a2 = 0
179110: 64 6a                    a3 = s1
179112: 33 00 74 0a              ra = 0xa74
179116: 0a 64                    ecalli 100 // 'log'
179118: 01                       fallthrough
      :                          @12181 [@dyn 1338]
179119: 82 1c 70                 a5 = u64 [sp + 0x70]
179122: 82 17 68                 a0 = u64 [sp + 0x68]
179125: c8 c7 07                 a0 = a0 + a5
179128: 55 37 00 00 ff 09        jump @12183 if a0 >=u 4294901760
      :                          @12182
179134: 28 08 26                 jump @12856
      :                          @12183
179137: 33 07 c0 22 03           a0 = 0x322c0
179142: 95 77 00 00 01           a0 = a0 + 0x10000
179147: 01                       fallthrough
      :                          @12184
179148: 82 78                    a1 = u64 [a0]
179150: c9 87 09                 a2 = a0 - a1
179153: aa 69 06                 jump @12186 if a2 == s1
      :                          @12185
179156: 28 f2 25                 jump @12856
      :                          @12186
179159: c9 c8 09                 a2 = a1 - a5
179162: 01                       fallthrough
      :                          @12187
179163: 82 7a                    a3 = u64 [a0]
179165: ab 8a ef                 jump @12184 if a3 != a1
      :                          @12188
179168: 7b 79                    u64 [a0] = a2
179170: 33 0b                    a4 = 0
179172: 01                       fallthrough
      :                          @12189
179173: ab 8a e7                 jump @12184 if a3 != a1
      :                          @12190
179176: 28 de 25                 jump @12856
      :                          @12191 [@dyn 1339]
179179: 3a 08 78 12 03           a1 = u64 [0x31278]
179184: 97 89 0d                 a2 = a1 << 0xd
179187: d3 98 08                 a1 = a1 ^ a2
179190: 98 89 07                 a2 = a1 >> 0x7
179193: d3 98 08                 a1 = a1 ^ a2
179196: 97 89 11                 a2 = a1 << 0x11
179199: d3 98 08                 a1 = a1 ^ a2
179202: 3a 09 60 11 03           a2 = u64 [0x31160]
179207: 3a 0a 88 11 03           a3 = u64 [0x31188]
179212: 3e 08 78 12 03           u64 [0x31278] = a1
179217: ca 98 07                 a0 = a1 * a2
179220: 98 78 05                 a1 = a0 >> 0x5
179223: d6 a8 08                 a1 = a1 mulhu a3
179226: 98 88 07                 a1 = a1 >> 0x7
179229: 96 88 a0 86 01           a1 = a1 * 0x186a0
179234: c9 87 07                 a0 = a0 - a1
179237: 95 77 01                 a0 = a0 + 0x1
179240: 7b 17 20 01              u64 [sp + 0x120] = a0
179244: 50 20 78 0a c5 dc fd     ra = 2680, jump @2680
      :                          @12192 [@dyn 1340]
179251: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
179255: 95 17 20 01              a0 = sp + 0x120
179259: 7b 17 38 02              u64 [sp + 0x238] = a0
179263: 33 07 28 0c              a0 = 0xc28
179267: 7b 17 40 02              u64 [sp + 0x240] = a0
179271: 95 18 e0 01              a1 = sp + 0x1e0
179275: 7b 18 48 02              u64 [sp + 0x248] = a1
179279: 7b 17 50 02              u64 [sp + 0x250] = a0
179283: 33 07 80 2b 01           a0 = 0x12b80
179288: 7b 17 90 02              u64 [sp + 0x290] = a0
179292: 49 21 98 02 02           u64 [sp + 664] = 0x2
179297: 49 21 b0 02              u64 [sp + 688] = 0
179301: 95 18 38 02              a1 = sp + 0x238
179305: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
179309: 49 21 a8 02 02           u64 [sp + 680] = 0x2
179314: 95 17 08 02              a0 = sp + 0x208
179318: 95 18 90 02              a1 = sp + 0x290
179322: 50 20 7a 0a c5 92 fd     ra = 2682, jump @1491
      :                          @12193 [@dyn 1341]
179329: 82 16 10 02              s1 = u64 [sp + 0x210]
179333: 82 1b 18 02              a4 = u64 [sp + 0x218]
179337: 82 17 08 02              a0 = u64 [sp + 0x208]
179341: 7b 17 70                 u64 [sp + 0x70] = a0
179344: 33 07 02                 a0 = 0x2
179347: 33 08                    a1 = 0
179349: 33 09                    a2 = 0
179351: 64 6a                    a3 = s1
179353: 33 00 7c 0a              ra = 0xa7c
179357: 0a 64                    ecalli 100 // 'log'
179359: 01                       fallthrough
      :                          @12194 [@dyn 1342]
179360: 82 1c 70                 a5 = u64 [sp + 0x70]
179363: 82 17 68                 a0 = u64 [sp + 0x68]
179366: c8 c7 07                 a0 = a0 + a5
179369: 55 37 00 00 ff 09        jump @12196 if a0 >=u 4294901760
      :                          @12195
179375: 28 17 25                 jump @12856
      :                          @12196
179378: 33 07 c0 22 03           a0 = 0x322c0
179383: 95 77 00 00 01           a0 = a0 + 0x10000
179388: 01                       fallthrough
      :                          @12197
179389: 82 78                    a1 = u64 [a0]
179391: c9 87 09                 a2 = a0 - a1
179394: aa 69 06                 jump @12199 if a2 == s1
      :                          @12198
179397: 28 01 25                 jump @12856
      :                          @12199
179400: c9 c8 09                 a2 = a1 - a5
179403: 01                       fallthrough
      :                          @12200
179404: 82 7a                    a3 = u64 [a0]
179406: ab 8a ef                 jump @12197 if a3 != a1
      :                          @12201
179409: 7b 79                    u64 [a0] = a2
179411: 33 0b                    a4 = 0
179413: 01                       fallthrough
      :                          @12202
179414: ab 8a e7                 jump @12197 if a3 != a1
      :                          @12203
179417: 28 ed 24                 jump @12856
      :                          @12204 [@dyn 1343]
179420: 3a 08 78 12 03           a1 = u64 [0x31278]
179425: 97 89 0d                 a2 = a1 << 0xd
179428: d3 98 08                 a1 = a1 ^ a2
179431: 98 89 07                 a2 = a1 >> 0x7
179434: d3 98 08                 a1 = a1 ^ a2
179437: 97 89 11                 a2 = a1 << 0x11
179440: d3 98 08                 a1 = a1 ^ a2
179443: 3a 09 60 11 03           a2 = u64 [0x31160]
179448: 3a 0a 88 11 03           a3 = u64 [0x31188]
179453: 3e 08 78 12 03           u64 [0x31278] = a1
179458: ca 98 07                 a0 = a1 * a2
179461: 98 78 05                 a1 = a0 >> 0x5
179464: d6 a8 08                 a1 = a1 mulhu a3
179467: 98 88 07                 a1 = a1 >> 0x7
179470: 96 88 a0 86 01           a1 = a1 * 0x186a0
179475: c9 87 07                 a0 = a0 - a1
179478: 95 77 01                 a0 = a0 + 0x1
179481: 7b 17 20 01              u64 [sp + 0x120] = a0
179485: 50 20 80 0a 24 dc fd     ra = 2688, jump @2690
      :                          @12205 [@dyn 1344]
179492: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
179496: 95 17 20 01              a0 = sp + 0x120
179500: 7b 17 38 02              u64 [sp + 0x238] = a0
179504: 33 07 28 0c              a0 = 0xc28
179508: 7b 17 40 02              u64 [sp + 0x240] = a0
179512: 95 17 e0 01              a0 = sp + 0x1e0
179516: 7b 17 48 02              u64 [sp + 0x248] = a0
179520: 33 07 94 0c              a0 = 0xc94
179524: 7b 17 50 02              u64 [sp + 0x250] = a0
179528: 33 07 a8 2b 01           a0 = 0x12ba8
179533: 7b 17 90 02              u64 [sp + 0x290] = a0
179537: 49 21 98 02 02           u64 [sp + 664] = 0x2
179542: 49 21 b0 02              u64 [sp + 688] = 0
179546: 95 18 38 02              a1 = sp + 0x238
179550: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
179554: 49 21 a8 02 02           u64 [sp + 680] = 0x2
179559: 95 17 08 02              a0 = sp + 0x208
179563: 95 18 90 02              a1 = sp + 0x290
179567: 50 20 82 0a d0 91 fd     ra = 2690, jump @1491
      :                          @12206 [@dyn 1345]
179574: 82 16 10 02              s1 = u64 [sp + 0x210]
179578: 82 1b 18 02              a4 = u64 [sp + 0x218]
179582: 82 17 08 02              a0 = u64 [sp + 0x208]
179586: 7b 17 70                 u64 [sp + 0x70] = a0
179589: 33 07 02                 a0 = 0x2
179592: 33 08                    a1 = 0
179594: 33 09                    a2 = 0
179596: 64 6a                    a3 = s1
179598: 33 00 84 0a              ra = 0xa84
179602: 0a 64                    ecalli 100 // 'log'
179604: 01                       fallthrough
      :                          @12207 [@dyn 1346]
179605: 82 1c 70                 a5 = u64 [sp + 0x70]
179608: 82 17 68                 a0 = u64 [sp + 0x68]
179611: c8 c7 07                 a0 = a0 + a5
179614: 55 37 00 00 ff 09        jump @12209 if a0 >=u 4294901760
      :                          @12208
179620: 28 22 24                 jump @12856
      :                          @12209
179623: 33 07 c0 22 03           a0 = 0x322c0
179628: 95 77 00 00 01           a0 = a0 + 0x10000
179633: 01                       fallthrough
      :                          @12210
179634: 82 78                    a1 = u64 [a0]
179636: c9 87 09                 a2 = a0 - a1
179639: aa 69 06                 jump @12212 if a2 == s1
      :                          @12211
179642: 28 0c 24                 jump @12856
      :                          @12212
179645: c9 c8 09                 a2 = a1 - a5
179648: 01                       fallthrough
      :                          @12213
179649: 82 7a                    a3 = u64 [a0]
179651: ab 8a ef                 jump @12210 if a3 != a1
      :                          @12214
179654: 7b 79                    u64 [a0] = a2
179656: 33 0b                    a4 = 0
179658: 01                       fallthrough
      :                          @12215
179659: ab 8a e7                 jump @12210 if a3 != a1
      :                          @12216
179662: 28 f8 23                 jump @12856
      :                          @12217 [@dyn 1347]
179665: 3a 08 78 12 03           a1 = u64 [0x31278]
179670: 97 89 0d                 a2 = a1 << 0xd
179673: d3 98 08                 a1 = a1 ^ a2
179676: 98 89 07                 a2 = a1 >> 0x7
179679: d3 98 08                 a1 = a1 ^ a2
179682: 97 89 11                 a2 = a1 << 0x11
179685: d3 98 08                 a1 = a1 ^ a2
179688: 3a 09 60 11 03           a2 = u64 [0x31160]
179693: 3a 0a 68 11 03           a3 = u64 [0x31168]
179698: 3e 08 78 12 03           u64 [0x31278] = a1
179703: ca 98 07                 a0 = a1 * a2
179706: 98 78 03                 a1 = a0 >> 0x3
179709: d6 a8 08                 a1 = a1 mulhu a3
179712: 98 88 04                 a1 = a1 >> 0x4
179715: 96 88 e8 03              a1 = a1 * 0x3e8
179719: c9 87 07                 a0 = a0 - a1
179722: 95 77 01                 a0 = a0 + 0x1
179725: 7b 17 20 01              u64 [sp + 0x120] = a0
179729: 33 00 88 0a              ra = 0xa88
179733: 33 08                    a1 = 0
179735: 33 09 01                 a2 = 0x1
179738: 28 82 dd fd              jump @2751
      :                          @12218 [@dyn 1348]
179742: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
179746: 95 17 20 01              a0 = sp + 0x120
179750: 7b 17 38 02              u64 [sp + 0x238] = a0
179754: 33 07 28 0c              a0 = 0xc28
179758: 7b 17 40 02              u64 [sp + 0x240] = a0
179762: 95 18 e0 01              a1 = sp + 0x1e0
179766: 7b 18 48 02              u64 [sp + 0x248] = a1
179770: 7b 17 50 02              u64 [sp + 0x250] = a0
179774: 33 07 e8 2b 01           a0 = 0x12be8
179779: 7b 17 90 02              u64 [sp + 0x290] = a0
179783: 49 21 98 02 02           u64 [sp + 664] = 0x2
179788: 49 21 b0 02              u64 [sp + 688] = 0
179792: 95 18 38 02              a1 = sp + 0x238
179796: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
179800: 49 21 a8 02 02           u64 [sp + 680] = 0x2
179805: 95 17 08 02              a0 = sp + 0x208
179809: 95 18 90 02              a1 = sp + 0x290
179813: 50 20 8a 0a da 90 fd     ra = 2698, jump @1491
      :                          @12219 [@dyn 1349]
179820: 82 16 10 02              s1 = u64 [sp + 0x210]
179824: 82 1b 18 02              a4 = u64 [sp + 0x218]
179828: 82 17 08 02              a0 = u64 [sp + 0x208]
179832: 7b 17 70                 u64 [sp + 0x70] = a0
179835: 33 07 02                 a0 = 0x2
179838: 33 08                    a1 = 0
179840: 33 09                    a2 = 0
179842: 64 6a                    a3 = s1
179844: 33 00 8c 0a              ra = 0xa8c
179848: 0a 64                    ecalli 100 // 'log'
179850: 01                       fallthrough
      :                          @12220 [@dyn 1350]
179851: 82 1c 70                 a5 = u64 [sp + 0x70]
179854: 82 17 68                 a0 = u64 [sp + 0x68]
179857: c8 c7 07                 a0 = a0 + a5
179860: 55 37 00 00 ff 09        jump @12222 if a0 >=u 4294901760
      :                          @12221
179866: 28 2c 23                 jump @12856
      :                          @12222
179869: 33 07 c0 22 03           a0 = 0x322c0
179874: 95 77 00 00 01           a0 = a0 + 0x10000
179879: 01                       fallthrough
      :                          @12223
179880: 82 78                    a1 = u64 [a0]
179882: c9 87 09                 a2 = a0 - a1
179885: aa 69 06                 jump @12225 if a2 == s1
      :                          @12224
179888: 28 16 23                 jump @12856
      :                          @12225
179891: c9 c8 09                 a2 = a1 - a5
179894: 01                       fallthrough
      :                          @12226
179895: 82 7a                    a3 = u64 [a0]
179897: ab 8a ef                 jump @12223 if a3 != a1
      :                          @12227
179900: 7b 79                    u64 [a0] = a2
179902: 33 0b                    a4 = 0
179904: 01                       fallthrough
      :                          @12228
179905: ab 8a e7                 jump @12223 if a3 != a1
      :                          @12229
179908: 28 02 23                 jump @12856
      :                          @12230 [@dyn 1351]
179911: 3a 08 78 12 03           a1 = u64 [0x31278]
179916: 97 89 0d                 a2 = a1 << 0xd
179919: d3 98 08                 a1 = a1 ^ a2
179922: 98 89 07                 a2 = a1 >> 0x7
179925: d3 98 08                 a1 = a1 ^ a2
179928: 97 89 11                 a2 = a1 << 0x11
179931: d3 98 08                 a1 = a1 ^ a2
179934: 3a 09 60 11 03           a2 = u64 [0x31160]
179939: 3a 0a 78 11 03           a3 = u64 [0x31178]
179944: 3e 08 78 12 03           u64 [0x31278] = a1
179949: ca 98 07                 a0 = a1 * a2
179952: d6 a7 08                 a1 = a0 mulhu a3
179955: 98 88 0b                 a1 = a1 >> 0xb
179958: 96 88 10 27              a1 = a1 * 0x2710
179962: c9 87 07                 a0 = a0 - a1
179965: 95 77 01                 a0 = a0 + 0x1
179968: 7b 17 20 01              u64 [sp + 0x120] = a0
179972: 50 20 90 0a b4 dc fd     ra = 2704, jump @2757
      :                          @12231 [@dyn 1352]
179979: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
179983: 95 17 20 01              a0 = sp + 0x120
179987: 7b 17 38 02              u64 [sp + 0x238] = a0
179991: 33 07 28 0c              a0 = 0xc28
179995: 7b 17 40 02              u64 [sp + 0x240] = a0
179999: 95 18 e0 01              a1 = sp + 0x1e0
180003: 7b 18 48 02              u64 [sp + 0x248] = a1
180007: 7b 17 50 02              u64 [sp + 0x250] = a0
180011: 33 07 18 2c 01           a0 = 0x12c18
180016: 7b 17 90 02              u64 [sp + 0x290] = a0
180020: 49 21 98 02 02           u64 [sp + 664] = 0x2
180025: 49 21 b0 02              u64 [sp + 688] = 0
180029: 95 18 38 02              a1 = sp + 0x238
180033: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
180037: 49 21 a8 02 02           u64 [sp + 680] = 0x2
180042: 95 17 08 02              a0 = sp + 0x208
180046: 95 18 90 02              a1 = sp + 0x290
180050: 50 20 92 0a ed 8f fd     ra = 2706, jump @1491
      :                          @12232 [@dyn 1353]
180057: 82 16 10 02              s1 = u64 [sp + 0x210]
180061: 82 1b 18 02              a4 = u64 [sp + 0x218]
180065: 82 17 08 02              a0 = u64 [sp + 0x208]
180069: 7b 17 70                 u64 [sp + 0x70] = a0
180072: 33 07 02                 a0 = 0x2
180075: 33 08                    a1 = 0
180077: 33 09                    a2 = 0
180079: 64 6a                    a3 = s1
180081: 33 00 94 0a              ra = 0xa94
180085: 0a 64                    ecalli 100 // 'log'
180087: 01                       fallthrough
      :                          @12233 [@dyn 1354]
180088: 82 1c 70                 a5 = u64 [sp + 0x70]
180091: 82 17 68                 a0 = u64 [sp + 0x68]
180094: c8 c7 07                 a0 = a0 + a5
180097: 55 37 00 00 ff 09        jump @12235 if a0 >=u 4294901760
      :                          @12234
180103: 28 3f 22                 jump @12856
      :                          @12235
180106: 33 07 c0 22 03           a0 = 0x322c0
180111: 95 77 00 00 01           a0 = a0 + 0x10000
180116: 01                       fallthrough
      :                          @12236
180117: 82 78                    a1 = u64 [a0]
180119: c9 87 09                 a2 = a0 - a1
180122: aa 69 06                 jump @12238 if a2 == s1
      :                          @12237
180125: 28 29 22                 jump @12856
      :                          @12238
180128: c9 c8 09                 a2 = a1 - a5
180131: 01                       fallthrough
      :                          @12239
180132: 82 7a                    a3 = u64 [a0]
180134: ab 8a ef                 jump @12236 if a3 != a1
      :                          @12240
180137: 7b 79                    u64 [a0] = a2
180139: 33 0b                    a4 = 0
180141: 01                       fallthrough
      :                          @12241
180142: ab 8a e7                 jump @12236 if a3 != a1
      :                          @12242
180145: 28 15 22                 jump @12856
      :                          @12243 [@dyn 1355]
180148: 3a 09 78 12 03           a2 = u64 [0x31278]
180153: 3a 07 60 11 03           a0 = u64 [0x31160]
180158: 97 9a 0d                 a3 = a2 << 0xd
180161: d3 a9 09                 a2 = a2 ^ a3
180164: 98 9a 07                 a3 = a2 >> 0x7
180167: d3 a9 09                 a2 = a2 ^ a3
180170: 97 9a 11                 a3 = a2 << 0x11
180173: d3 a9 09                 a2 = a2 ^ a3
180176: 3a 0a 80 11 03           a3 = u64 [0x31180]
180181: ca 79 0b                 a4 = a2 * a0
180184: 3e 09 78 12 03           u64 [0x31278] = a2
180189: d6 ab 09                 a2 = a4 mulhu a3
180192: c9 9b 0a                 a3 = a4 - a2
180195: 98 aa 01                 a3 = a3 >> 0x1
180198: c8 a9 09                 a2 = a2 + a3
180201: 98 99 09                 a2 = a2 >> 0x9
180204: 96 99 e7 03              a2 = a2 * 0x3e7
180208: c9 9b 0b                 a4 = a4 - a2
180211: 86 b9 01                 a2 = a4 | 0x1
180214: 95 99 02                 a2 = a2 + 0x2
180217: 7b 19 c8 01              u64 [sp + 0x1c8] = a2
180221: 3a 09 78 12 03           a2 = u64 [0x31278]
180226: 97 9a 0d                 a3 = a2 << 0xd
180229: d3 a9 09                 a2 = a2 ^ a3
180232: 98 9a 07                 a3 = a2 >> 0x7
180235: d3 a9 09                 a2 = a2 ^ a3
180238: 97 9a 11                 a3 = a2 << 0x11
180241: d3 a9 09                 a2 = a2 ^ a3
180244: 3e 09 78 12 03           u64 [0x31278] = a2
180249: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
180253: 52 08 06                 jump @12245 if a1 != 0
      :                          @12244
180256: 28 ba 33                 jump @13228
      :                          @12245
180259: ca 79 07                 a0 = a2 * a0
180262: cd 87 07                 a0 = a0 %u a1
180265: 7b 17 20 01              u64 [sp + 0x120] = a0
180269: 59 07 06                 jump @12247 if a0 >=s 0
      :                          @12246
180272: 28 e1 33                 jump @13279
      :                          @12247
180275: 59 08 06                 jump @12249 if a1 >=s 0
      :                          @12248
180278: 28 db 33                 jump @13279
      :                          @12249
180281: 50 20 98 0a bb cb fd     ra = 2712, jump @2425
      :                          @12250 [@dyn 1356]
180288: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
180292: 95 17 20 01              a0 = sp + 0x120
180296: 7b 17 90 02              u64 [sp + 0x290] = a0
180300: 33 07 94 0c              a0 = 0xc94
180304: 7b 17 98 02              u64 [sp + 0x298] = a0
180308: 95 18 c8 01              a1 = sp + 0x1c8
180312: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
180316: 33 08 28 0c              a1 = 0xc28
180320: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
180324: 95 18 e0 01              a1 = sp + 0x1e0
180328: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
180332: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
180336: 33 07 38 2c 01           a0 = 0x12c38
180341: 7b 17 38 02              u64 [sp + 0x238] = a0
180345: 49 21 40 02 03           u64 [sp + 576] = 0x3
180350: 49 21 58 02              u64 [sp + 600] = 0
180354: 95 18 90 02              a1 = sp + 0x290
180358: 7b 18 48 02              u64 [sp + 0x248] = a1
180362: 49 21 50 02 03           u64 [sp + 592] = 0x3
180367: 95 17 08 02              a0 = sp + 0x208
180371: 95 18 38 02              a1 = sp + 0x238
180375: 50 20 9a 0a a8 8e fd     ra = 2714, jump @1491
      :                          @12251 [@dyn 1357]
180382: 82 16 10 02              s1 = u64 [sp + 0x210]
180386: 82 1b 18 02              a4 = u64 [sp + 0x218]
180390: 82 17 08 02              a0 = u64 [sp + 0x208]
180394: 7b 17 70                 u64 [sp + 0x70] = a0
180397: 33 07 02                 a0 = 0x2
180400: 33 08                    a1 = 0
180402: 33 09                    a2 = 0
180404: 64 6a                    a3 = s1
180406: 33 00 9c 0a              ra = 0xa9c
180410: 0a 64                    ecalli 100 // 'log'
180412: 01                       fallthrough
      :                          @12252 [@dyn 1358]
180413: 82 1c 70                 a5 = u64 [sp + 0x70]
180416: 82 17 68                 a0 = u64 [sp + 0x68]
180419: c8 c7 07                 a0 = a0 + a5
180422: 55 37 00 00 ff 09        jump @12254 if a0 >=u 4294901760
      :                          @12253
180428: 28 fa 20                 jump @12856
      :                          @12254
180431: 33 07 c0 22 03           a0 = 0x322c0
180436: 95 77 00 00 01           a0 = a0 + 0x10000
180441: 01                       fallthrough
      :                          @12255
180442: 82 78                    a1 = u64 [a0]
180444: c9 87 09                 a2 = a0 - a1
180447: aa 69 06                 jump @12257 if a2 == s1
      :                          @12256
180450: 28 e4 20                 jump @12856
      :                          @12257
180453: c9 c8 09                 a2 = a1 - a5
180456: 01                       fallthrough
      :                          @12258
180457: 82 7a                    a3 = u64 [a0]
180459: ab 8a ef                 jump @12255 if a3 != a1
      :                          @12259
180462: 7b 79                    u64 [a0] = a2
180464: 33 0b                    a4 = 0
180466: 01                       fallthrough
      :                          @12260
180467: ab 8a e7                 jump @12255 if a3 != a1
      :                          @12261
180470: 28 d0 20                 jump @12856
      :                          @12262 [@dyn 1359]
180473: 3a 08 78 12 03           a1 = u64 [0x31278]
180478: 97 89 0d                 a2 = a1 << 0xd
180481: d3 98 08                 a1 = a1 ^ a2
180484: 98 89 07                 a2 = a1 >> 0x7
180487: d3 98 08                 a1 = a1 ^ a2
180490: 97 89 11                 a2 = a1 << 0x11
180493: d3 98 08                 a1 = a1 ^ a2
180496: 3a 09 60 11 03           a2 = u64 [0x31160]
180501: 3e 08 78 12 03           u64 [0x31278] = a1
180506: 3a 0a 78 12 03           a3 = u64 [0x31278]
180511: ca 98 08                 a1 = a1 * a2
180514: 97 ab 0d                 a4 = a3 << 0xd
180517: d3 ba 0a                 a3 = a3 ^ a4
180520: 98 ab 07                 a4 = a3 >> 0x7
180523: d3 ba 0a                 a3 = a3 ^ a4
180526: 97 ab 11                 a4 = a3 << 0x11
180529: d3 ba 0a                 a3 = a3 ^ a4
180532: ca 9a 09                 a2 = a3 * a2
180535: 3a 0b 68 11 03           a4 = u64 [0x31168]
180540: 3e 0a 78 12 03           u64 [0x31278] = a3
180545: 98 87 03                 a0 = a1 >> 0x3
180548: d6 b7 07                 a0 = a0 mulhu a4
180551: 98 77 04                 a0 = a0 >> 0x4
180554: 96 77 e8 03              a0 = a0 * 0x3e8
180558: c9 78 08                 a1 = a1 - a0
180561: 86 88 01                 a1 = a1 | 0x1
180564: 95 88 02                 a1 = a1 + 0x2
180567: cd 89 07                 a0 = a2 %u a1
180570: 50 20 a0 0a b9 dc fd     ra = 2720, jump @2831
      :                          @12263 [@dyn 1360]
180577: 52 07 06                 jump @12265 if a0 != 0
      :                          @12264
180580: 28 84 29                 jump @13014
      :                          @12265
180583: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
180587: 95 17 e0 01              a0 = sp + 0x1e0
180591: 7b 17 08 02              u64 [sp + 0x208] = a0
180595: 33 07 28 0c              a0 = 0xc28
180599: 7b 17 10 02              u64 [sp + 0x210] = a0
180603: 33 07 f8 2f 01           a0 = 0x12ff8
180608: 7b 17 90 02              u64 [sp + 0x290] = a0
180612: 49 21 98 02 01           u64 [sp + 664] = 0x1
180617: 49 21 b0 02              u64 [sp + 688] = 0
180621: 95 18 08 02              a1 = sp + 0x208
180625: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
180629: 49 21 a8 02 01           u64 [sp + 680] = 0x1
180634: 95 17 38 02              a0 = sp + 0x238
180638: 95 18 90 02              a1 = sp + 0x290
180642: 50 20 a2 0a 9d 8d fd     ra = 2722, jump @1491
      :                          @12266 [@dyn 1361]
180649: 82 16 40 02              s1 = u64 [sp + 0x240]
180653: 82 1b 48 02              a4 = u64 [sp + 0x248]
180657: 82 17 38 02              a0 = u64 [sp + 0x238]
180661: 7b 17 70                 u64 [sp + 0x70] = a0
180664: 33 07 02                 a0 = 0x2
180667: 33 08                    a1 = 0
180669: 33 09                    a2 = 0
180671: 64 6a                    a3 = s1
180673: 33 00 a4 0a              ra = 0xaa4
180677: 0a 64                    ecalli 100 // 'log'
180679: 01                       fallthrough
      :                          @12267 [@dyn 1362]
180680: 82 1c 70                 a5 = u64 [sp + 0x70]
180683: 82 17 68                 a0 = u64 [sp + 0x68]
180686: c8 c7 07                 a0 = a0 + a5
180689: 55 37 00 00 ff 09        jump @12269 if a0 >=u 4294901760
      :                          @12268
180695: 28 ef 1f                 jump @12856
      :                          @12269
180698: 33 07 c0 22 03           a0 = 0x322c0
180703: 95 77 00 00 01           a0 = a0 + 0x10000
180708: 01                       fallthrough
      :                          @12270
180709: 82 78                    a1 = u64 [a0]
180711: c9 87 09                 a2 = a0 - a1
180714: aa 69 06                 jump @12272 if a2 == s1
      :                          @12271
180717: 28 d9 1f                 jump @12856
      :                          @12272
180720: c9 c8 09                 a2 = a1 - a5
180723: 01                       fallthrough
      :                          @12273
180724: 82 7a                    a3 = u64 [a0]
180726: ab 8a ef                 jump @12270 if a3 != a1
      :                          @12274
180729: 7b 79                    u64 [a0] = a2
180731: 33 0b                    a4 = 0
180733: 01                       fallthrough
      :                          @12275
180734: ab 8a e7                 jump @12270 if a3 != a1
      :                          @12276
180737: 28 c5 1f                 jump @12856
      :                          @12277 [@dyn 1363]
180740: 3a 08 78 12 03           a1 = u64 [0x31278]
180745: 97 89 0d                 a2 = a1 << 0xd
180748: d3 98 08                 a1 = a1 ^ a2
180751: 98 89 07                 a2 = a1 >> 0x7
180754: d3 98 08                 a1 = a1 ^ a2
180757: 97 89 11                 a2 = a1 << 0x11
180760: d3 98 08                 a1 = a1 ^ a2
180763: 3a 09 60 11 03           a2 = u64 [0x31160]
180768: 3a 0a 78 11 03           a3 = u64 [0x31178]
180773: 3e 08 78 12 03           u64 [0x31278] = a1
180778: ca 98 07                 a0 = a1 * a2
180781: d6 a7 08                 a1 = a0 mulhu a3
180784: 98 88 0b                 a1 = a1 >> 0xb
180787: 33 09 10 27              a2 = 0x2710
180791: ca 98 08                 a1 = a1 * a2
180794: c9 87 07                 a0 = a0 - a1
180797: 95 77 02                 a0 = a0 + 0x2
180800: 7b 17 20 01              u64 [sp + 0x120] = a0
180804: 33 00 a8 0a              ra = 0xaa8
180808: 95 11 f8                 sp = sp + 0xfffffffffffffff8
180811: 7b 15                    u64 [sp] = s0
180813: 33 03 02                 t1 = 0x2
180816: 33 04 e8 03              t2 = 0x3e8
180820: 33 02 09                 t0 = 0x9
180823: 33 0b 02                 a4 = 0x2
180826: 33 0c 02                 a5 = 0x2
180829: 28 15 6c fe              jump @6040
      :                          @12278 [@dyn 1364]
180833: 52 07 06                 jump @12280 if a0 != 0
      :                          @12279
180836: 28 0b 29                 jump @13024
      :                          @12280
180839: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
180843: 95 17 20 01              a0 = sp + 0x120
180847: 7b 17 38 02              u64 [sp + 0x238] = a0
180851: 33 07 28 0c              a0 = 0xc28
180855: 7b 17 40 02              u64 [sp + 0x240] = a0
180859: 95 18 e0 01              a1 = sp + 0x1e0
180863: 7b 18 48 02              u64 [sp + 0x248] = a1
180867: 7b 17 50 02              u64 [sp + 0x250] = a0
180871: 33 07 b8 2c 01           a0 = 0x12cb8
180876: 7b 17 90 02              u64 [sp + 0x290] = a0
180880: 49 21 98 02 02           u64 [sp + 664] = 0x2
180885: 49 21 b0 02              u64 [sp + 688] = 0
180889: 95 18 38 02              a1 = sp + 0x238
180893: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
180897: 49 21 a8 02 02           u64 [sp + 680] = 0x2
180902: 95 17 08 02              a0 = sp + 0x208
180906: 95 18 90 02              a1 = sp + 0x290
180910: 50 20 aa 0a 91 8c fd     ra = 2730, jump @1491
      :                          @12281 [@dyn 1365]
180917: 82 16 10 02              s1 = u64 [sp + 0x210]
180921: 82 1b 18 02              a4 = u64 [sp + 0x218]
180925: 82 17 08 02              a0 = u64 [sp + 0x208]
180929: 7b 17 70                 u64 [sp + 0x70] = a0
180932: 33 07 02                 a0 = 0x2
180935: 33 08                    a1 = 0
180937: 33 09                    a2 = 0
180939: 64 6a                    a3 = s1
180941: 33 00 ac 0a              ra = 0xaac
180945: 0a 64                    ecalli 100 // 'log'
180947: 01                       fallthrough
      :                          @12282 [@dyn 1366]
180948: 82 1c 70                 a5 = u64 [sp + 0x70]
180951: 82 17 68                 a0 = u64 [sp + 0x68]
180954: c8 c7 07                 a0 = a0 + a5
180957: 55 37 00 00 ff 09        jump @12284 if a0 >=u 4294901760
      :                          @12283
180963: 28 e3 1e                 jump @12856
      :                          @12284
180966: 33 07 c0 22 03           a0 = 0x322c0
180971: 95 77 00 00 01           a0 = a0 + 0x10000
180976: 01                       fallthrough
      :                          @12285
180977: 82 78                    a1 = u64 [a0]
180979: c9 87 09                 a2 = a0 - a1
180982: aa 69 06                 jump @12287 if a2 == s1
      :                          @12286
180985: 28 cd 1e                 jump @12856
      :                          @12287
180988: c9 c8 09                 a2 = a1 - a5
180991: 01                       fallthrough
      :                          @12288
180992: 82 7a                    a3 = u64 [a0]
180994: ab 8a ef                 jump @12285 if a3 != a1
      :                          @12289
180997: 7b 79                    u64 [a0] = a2
180999: 33 0b                    a4 = 0
181001: 01                       fallthrough
      :                          @12290
181002: ab 8a e7                 jump @12285 if a3 != a1
      :                          @12291
181005: 28 b9 1e                 jump @12856
      :                          @12292 [@dyn 1367]
181008: 3a 08 78 12 03           a1 = u64 [0x31278]
181013: 97 89 0d                 a2 = a1 << 0xd
181016: d3 89 09                 a2 = a2 ^ a1
181019: 98 9a 07                 a3 = a2 >> 0x7
181022: 3a 08 60 11 03           a1 = u64 [0x31160]
181027: d3 a9 09                 a2 = a2 ^ a3
181030: 97 9a 11                 a3 = a2 << 0x11
181033: d3 a9 09                 a2 = a2 ^ a3
181036: ca 89 0a                 a3 = a2 * a1
181039: 3a 0b 70 11 03           a4 = u64 [0x31170]
181044: 3e 09 78 12 03           u64 [0x31278] = a2
181049: 98 a9 01                 a2 = a3 >> 0x1
181052: d6 b9 09                 a2 = a2 mulhu a4
181055: 98 99 04                 a2 = a2 >> 0x4
181058: 33 0c 32                 a5 = 0x32
181061: ca c9 09                 a2 = a2 * a5
181064: c9 9a 0a                 a3 = a3 - a2
181067: 95 aa 01                 a3 = a3 + 0x1
181070: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
181074: 3a 09 78 12 03           a2 = u64 [0x31278]
181079: 97 9a 0d                 a3 = a2 << 0xd
181082: d3 a9 09                 a2 = a2 ^ a3
181085: 98 9a 07                 a3 = a2 >> 0x7
181088: d3 a9 09                 a2 = a2 ^ a3
181091: 97 9a 11                 a3 = a2 << 0x11
181094: d3 a9 09                 a2 = a2 ^ a3
181097: ca 89 0a                 a3 = a2 * a1
181100: 3e 09 78 12 03           u64 [0x31278] = a2
181105: 98 a7 01                 a0 = a3 >> 0x1
181108: d6 b7 07                 a0 = a0 mulhu a4
181111: 98 77 04                 a0 = a0 >> 0x4
181114: ca c7 07                 a0 = a0 * a5
181117: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
181121: c9 7a 09                 a2 = a3 - a0
181124: 95 99 01                 a2 = a2 + 0x1
181127: 7b 19 20 01              u64 [sp + 0x120] = a2
181131: 95 17 08 02              a0 = sp + 0x208
181135: 95 16 08 02              s1 = sp + 0x208
181139: 50 20 b0 0a 95 13 fe     ra = 2736, jump @4147
      :                          @12293 [@dyn 1368]
181146: 95 17 c8 01              a0 = sp + 0x1c8
181150: 7b 17 90 02              u64 [sp + 0x290] = a0
181154: 33 07 28 0c              a0 = 0xc28
181158: 7b 17 98 02              u64 [sp + 0x298] = a0
181162: 95 18 20 01              a1 = sp + 0x120
181166: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
181170: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
181174: 7b 16 b0 02              u64 [sp + 0x2b0] = s1
181178: 33 07 ce 01              a0 = 0x1ce
181182: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
181186: 33 07 f0 2c 01           a0 = 0x12cf0
181191: 7b 17 38 02              u64 [sp + 0x238] = a0
181195: 49 21 40 02 03           u64 [sp + 576] = 0x3
181200: 49 21 58 02              u64 [sp + 600] = 0
181204: 95 18 90 02              a1 = sp + 0x290
181208: 7b 18 48 02              u64 [sp + 0x248] = a1
181212: 49 21 50 02 03           u64 [sp + 592] = 0x3
181217: 95 17 e0 01              a0 = sp + 0x1e0
181221: 95 18 38 02              a1 = sp + 0x238
181225: 50 20 b2 0a 56 8b fd     ra = 2738, jump @1491
      :                          @12294 [@dyn 1369]
181232: 82 17 08 02              a0 = u64 [sp + 0x208]
181236: 51 07 2c                 jump @12301 if a0 == 0
      :                          @12295
181239: 56 37 00 00 01 29        jump @12301 if a0 >u 65536
      :                          @12296
181245: 82 18 10 02              a1 = u64 [sp + 0x210]
181249: 33 0a c0 22 03           a3 = 0x322c0
181254: 95 a9 00 00 01           a2 = a3 + 0x10000
181259: 01                       fallthrough
      :                          @12297
181260: 82 9a                    a3 = u64 [a2]
181262: c9 a9 0b                 a4 = a2 - a3
181265: ab 8b 0f                 jump @12301 if a4 != a1
      :                          @12298
181268: c9 7a 0b                 a4 = a3 - a0
181271: 01                       fallthrough
      :                          @12299
181272: 82 9c                    a5 = u64 [a2]
181274: ab ac f2                 jump @12297 if a5 != a3
      :                          @12300
181277: 7b 9b                    u64 [a2] = a4
181279: 01                       fallthrough
      :                          @12301
181280: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
181284: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
181288: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
181292: 7b 17 70                 u64 [sp + 0x70] = a0
181295: 33 07 02                 a0 = 0x2
181298: 33 08                    a1 = 0
181300: 33 09                    a2 = 0
181302: 64 6a                    a3 = s1
181304: 33 00 b4 0a              ra = 0xab4
181308: 0a 64                    ecalli 100 // 'log'
181310: 01                       fallthrough
      :                          @12302 [@dyn 1370]
181311: 82 1c 70                 a5 = u64 [sp + 0x70]
181314: 82 17 68                 a0 = u64 [sp + 0x68]
181317: c8 c7 07                 a0 = a0 + a5
181320: 55 37 00 00 ff 09        jump @12304 if a0 >=u 4294901760
      :                          @12303
181326: 28 78 1d                 jump @12856
      :                          @12304
181329: 33 07 c0 22 03           a0 = 0x322c0
181334: 95 77 00 00 01           a0 = a0 + 0x10000
181339: 01                       fallthrough
      :                          @12305
181340: 82 78                    a1 = u64 [a0]
181342: c9 87 09                 a2 = a0 - a1
181345: aa 69 06                 jump @12307 if a2 == s1
      :                          @12306
181348: 28 62 1d                 jump @12856
      :                          @12307
181351: c9 c8 09                 a2 = a1 - a5
181354: 01                       fallthrough
      :                          @12308
181355: 82 7a                    a3 = u64 [a0]
181357: ab 8a ef                 jump @12305 if a3 != a1
      :                          @12309
181360: 7b 79                    u64 [a0] = a2
181362: 33 0b                    a4 = 0
181364: 01                       fallthrough
      :                          @12310
181365: ab 8a e7                 jump @12305 if a3 != a1
      :                          @12311
181368: 28 4e 1d                 jump @12856
      :                          @12312 [@dyn 1371]
181371: 3a 08 78 12 03           a1 = u64 [0x31278]
181376: 97 89 0d                 a2 = a1 << 0xd
181379: d3 98 08                 a1 = a1 ^ a2
181382: 98 89 07                 a2 = a1 >> 0x7
181385: d3 98 08                 a1 = a1 ^ a2
181388: 97 89 11                 a2 = a1 << 0x11
181391: d3 98 08                 a1 = a1 ^ a2
181394: 3a 09 60 11 03           a2 = u64 [0x31160]
181399: 3a 0a 68 11 03           a3 = u64 [0x31168]
181404: 3e 08 78 12 03           u64 [0x31278] = a1
181409: ca 98 07                 a0 = a1 * a2
181412: 98 78 03                 a1 = a0 >> 0x3
181415: d6 a8 08                 a1 = a1 mulhu a3
181418: 98 88 04                 a1 = a1 >> 0x4
181421: 96 88 e8 03              a1 = a1 * 0x3e8
181425: c9 87 07                 a0 = a0 - a1
181428: 86 77 01                 a0 = a0 | 0x1
181431: 95 77 02                 a0 = a0 + 0x2
181434: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
181438: 50 20 b8 0a 26 db fd     ra = 2744, jump @2866
      :                          @12313 [@dyn 1372]
181445: 78 17 20 01              u8 [sp + 0x120] = a0
181449: 95 17 e0 01              a0 = sp + 0x1e0
181453: 7b 17 38 02              u64 [sp + 0x238] = a0
181457: 33 07 28 0c              a0 = 0xc28
181461: 7b 17 40 02              u64 [sp + 0x240] = a0
181465: 95 17 20 01              a0 = sp + 0x120
181469: 7b 17 48 02              u64 [sp + 0x248] = a0
181473: 33 07 80 0c              a0 = 0xc80
181477: 7b 17 50 02              u64 [sp + 0x250] = a0
181481: 33 07 38 2d 01           a0 = 0x12d38
181486: 7b 17 90 02              u64 [sp + 0x290] = a0
181490: 49 21 98 02 02           u64 [sp + 664] = 0x2
181495: 49 21 b0 02              u64 [sp + 688] = 0
181499: 95 18 38 02              a1 = sp + 0x238
181503: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
181507: 49 21 a8 02 02           u64 [sp + 680] = 0x2
181512: 95 17 08 02              a0 = sp + 0x208
181516: 95 18 90 02              a1 = sp + 0x290
181520: 50 20 ba 0a 2f 8a fd     ra = 2746, jump @1491
      :                          @12314 [@dyn 1373]
181527: 82 16 10 02              s1 = u64 [sp + 0x210]
181531: 82 1b 18 02              a4 = u64 [sp + 0x218]
181535: 82 17 08 02              a0 = u64 [sp + 0x208]
181539: 7b 17 70                 u64 [sp + 0x70] = a0
181542: 33 07 02                 a0 = 0x2
181545: 33 08                    a1 = 0
181547: 33 09                    a2 = 0
181549: 64 6a                    a3 = s1
181551: 33 00 bc 0a              ra = 0xabc
181555: 0a 64                    ecalli 100 // 'log'
181557: 01                       fallthrough
      :                          @12315 [@dyn 1374]
181558: 82 1c 70                 a5 = u64 [sp + 0x70]
181561: 82 17 68                 a0 = u64 [sp + 0x68]
181564: c8 c7 07                 a0 = a0 + a5
181567: 55 37 00 00 ff 09        jump @12317 if a0 >=u 4294901760
      :                          @12316
181573: 28 81 1c                 jump @12856
      :                          @12317
181576: 33 07 c0 22 03           a0 = 0x322c0
181581: 95 77 00 00 01           a0 = a0 + 0x10000
181586: 01                       fallthrough
      :                          @12318
181587: 82 78                    a1 = u64 [a0]
181589: c9 87 09                 a2 = a0 - a1
181592: aa 69 06                 jump @12320 if a2 == s1
      :                          @12319
181595: 28 6b 1c                 jump @12856
      :                          @12320
181598: c9 c8 09                 a2 = a1 - a5
181601: 01                       fallthrough
      :                          @12321
181602: 82 7a                    a3 = u64 [a0]
181604: ab 8a ef                 jump @12318 if a3 != a1
      :                          @12322
181607: 7b 79                    u64 [a0] = a2
181609: 33 0b                    a4 = 0
181611: 01                       fallthrough
      :                          @12323
181612: ab 8a e7                 jump @12318 if a3 != a1
      :                          @12324
181615: 28 57 1c                 jump @12856
      :                          @12325 [@dyn 1375]
181618: 3a 09 78 12 03           a2 = u64 [0x31278]
181623: 3a 07 60 11 03           a0 = u64 [0x31160]
181628: 97 9a 0d                 a3 = a2 << 0xd
181631: d3 a9 09                 a2 = a2 ^ a3
181634: 98 9a 07                 a3 = a2 >> 0x7
181637: d3 a9 09                 a2 = a2 ^ a3
181640: 97 9a 11                 a3 = a2 << 0x11
181643: d3 a9 09                 a2 = a2 ^ a3
181646: ca 79 0a                 a3 = a2 * a0
181649: 3a 0b 70 11 03           a4 = u64 [0x31170]
181654: 3e 09 78 12 03           u64 [0x31278] = a2
181659: 98 a9 01                 a2 = a3 >> 0x1
181662: d6 b9 09                 a2 = a2 mulhu a4
181665: 98 99 04                 a2 = a2 >> 0x4
181668: 96 99 32                 a2 = a2 * 0x32
181671: c9 9a 0a                 a3 = a3 - a2
181674: 86 a9 01                 a2 = a3 | 0x1
181677: 95 99 02                 a2 = a2 + 0x2
181680: 7b 19 10 01              u64 [sp + 0x110] = a2
181684: 3a 09 78 12 03           a2 = u64 [0x31278]
181689: 97 9a 0d                 a3 = a2 << 0xd
181692: d3 a9 09                 a2 = a2 ^ a3
181695: 98 9a 07                 a3 = a2 >> 0x7
181698: d3 a9 09                 a2 = a2 ^ a3
181701: 97 9a 11                 a3 = a2 << 0x11
181704: d3 a9 09                 a2 = a2 ^ a3
181707: 3e 09 78 12 03           u64 [0x31278] = a2
181712: 82 1a 10 01              a3 = u64 [sp + 0x110]
181716: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
181719: 52 0a 06                 jump @12327 if a3 != 0
      :                          @12326
181722: 28 00 2e                 jump @13228
      :                          @12327
181725: ca 79 09                 a2 = a2 * a0
181728: cd a9 09                 a2 = a2 %u a3
181731: 95 99 01                 a2 = a2 + 0x1
181734: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
181738: 3a 09 78 12 03           a2 = u64 [0x31278]
181743: 97 9a 0d                 a3 = a2 << 0xd
181746: d3 a9 09                 a2 = a2 ^ a3
181749: 98 9a 07                 a3 = a2 >> 0x7
181752: d3 a9 09                 a2 = a2 ^ a3
181755: 97 9a 11                 a3 = a2 << 0x11
181758: d3 a9 09                 a2 = a2 ^ a3
181761: 3e 09 78 12 03           u64 [0x31278] = a2
181766: 82 18 10 01              a1 = u64 [sp + 0x110]
181770: 52 08 06                 jump @12329 if a1 != 0
      :                          @12328
181773: 28 cd 2d                 jump @13228
      :                          @12329
181776: ca 79 09                 a2 = a2 * a0
181779: cd 89 08                 a1 = a2 %u a1
181782: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
181786: 3a 09 78 12 03           a2 = u64 [0x31278]
181791: 97 9a 0d                 a3 = a2 << 0xd
181794: d3 a9 09                 a2 = a2 ^ a3
181797: 98 9a 07                 a3 = a2 >> 0x7
181800: d3 a9 09                 a2 = a2 ^ a3
181803: 97 9a 11                 a3 = a2 << 0x11
181806: d3 9a 0a                 a3 = a3 ^ a2
181809: 3e 0a 78 12 03           u64 [0x31278] = a3
181814: 82 1b 10 01              a4 = u64 [sp + 0x110]
181818: 52 0b 06                 jump @12331 if a4 != 0
      :                          @12330
181821: 28 9d 2d                 jump @13228
      :                          @12331
181824: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
181828: 82 19 c8 01              a2 = u64 [sp + 0x1c8]
181832: ca 7a 07                 a0 = a3 * a0
181835: cd b7 0a                 a3 = a0 %u a4
181838: 7b 1a 20 01              u64 [sp + 0x120] = a3
181842: 95 17 08 02              a0 = sp + 0x208
181846: 95 16 08 02              s1 = sp + 0x208
181850: 33 00 c0 0a              ra = 0xac0
181854: 95 11 a8                 sp = sp + 0xffffffffffffffa8
181857: 7b 10 50                 u64 [sp + 0x50] = ra
181860: 7b 15 48                 u64 [sp + 0x48] = s0
181863: 7b 16 40                 u64 [sp + 0x40] = s1
181866: 64 b6                    s1 = a4
181868: 7b 1a 18                 u64 [sp + 0x18] = a3
181871: 7b 19 20                 u64 [sp + 0x20] = a2
181874: 64 85                    s0 = a1
181876: 7b 17 10                 u64 [sp + 0x10] = a0
181879: 97 87 01                 a0 = a1 << 0x1
181882: 98 88 3f                 a1 = a1 >> 0x3f
181885: 64 b9                    a2 = a4
181887: 33 00 3a 04              ra = 0x43a
181891: 28 76 42                 jump @13619
      :                          @12332 [@dyn 1376]
181894: 95 17 b0 01              a0 = sp + 0x1b0
181898: 7b 17 90 02              u64 [sp + 0x290] = a0
181902: 33 07 28 0c              a0 = 0xc28
181906: 7b 17 98 02              u64 [sp + 0x298] = a0
181910: 95 18 c8 01              a1 = sp + 0x1c8
181914: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
181918: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
181922: 95 18 20 01              a1 = sp + 0x120
181926: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
181930: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
181934: 95 18 10 01              a1 = sp + 0x110
181938: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
181942: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
181946: 7b 16 d0 02              u64 [sp + 0x2d0] = s1
181950: 33 07 20 02              a0 = 0x220
181954: 7b 17 d8 02              u64 [sp + 0x2d8] = a0
181958: 33 07 70 2d 01           a0 = 0x12d70
181963: 7b 17 38 02              u64 [sp + 0x238] = a0
181967: 49 21 40 02 05           u64 [sp + 576] = 0x5
181972: 49 21 58 02              u64 [sp + 600] = 0
181976: 95 18 90 02              a1 = sp + 0x290
181980: 7b 18 48 02              u64 [sp + 0x248] = a1
181984: 49 21 50 02 05           u64 [sp + 592] = 0x5
181989: 95 17 e0 01              a0 = sp + 0x1e0
181993: 95 18 38 02              a1 = sp + 0x238
181997: 50 20 c2 0a 52 88 fd     ra = 2754, jump @1491
      :                          @12333 [@dyn 1377]
182004: 82 18 08 02              a1 = u64 [sp + 0x208]
182008: 51 08 2e                 jump @12340 if a1 == 0
      :                          @12334
182011: 56 28 00 20 2b           jump @12340 if a1 >u 8192
      :                          @12335
182016: 82 17 10 02              a0 = u64 [sp + 0x210]
182020: 97 88 03                 a1 = a1 << 0x3
182023: 33 09 c0 22 03           a2 = 0x322c0
182028: 95 99 00 00 01           a2 = a2 + 0x10000
182033: 01                       fallthrough
      :                          @12336
182034: 82 9a                    a3 = u64 [a2]
182036: c9 a9 0b                 a4 = a2 - a3
182039: ab 7b 0f                 jump @12340 if a4 != a0
      :                          @12337
182042: c9 8a 0b                 a4 = a3 - a1
182045: 01                       fallthrough
      :                          @12338
182046: 82 9c                    a5 = u64 [a2]
182048: ab ac f2                 jump @12336 if a5 != a3
      :                          @12339
182051: 7b 9b                    u64 [a2] = a4
182053: 01                       fallthrough
      :                          @12340
182054: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
182058: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
182062: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
182066: 7b 17 70                 u64 [sp + 0x70] = a0
182069: 33 07 02                 a0 = 0x2
182072: 33 08                    a1 = 0
182074: 33 09                    a2 = 0
182076: 64 6a                    a3 = s1
182078: 33 00 c4 0a              ra = 0xac4
182082: 0a 64                    ecalli 100 // 'log'
182084: 01                       fallthrough
      :                          @12341 [@dyn 1378]
182085: 82 1c 70                 a5 = u64 [sp + 0x70]
182088: 82 17 68                 a0 = u64 [sp + 0x68]
182091: c8 c7 07                 a0 = a0 + a5
182094: 55 37 00 00 ff 09        jump @12343 if a0 >=u 4294901760
      :                          @12342
182100: 28 72 1a                 jump @12856
      :                          @12343
182103: 33 07 c0 22 03           a0 = 0x322c0
182108: 95 77 00 00 01           a0 = a0 + 0x10000
182113: 01                       fallthrough
      :                          @12344
182114: 82 78                    a1 = u64 [a0]
182116: c9 87 09                 a2 = a0 - a1
182119: aa 69 06                 jump @12346 if a2 == s1
      :                          @12345
182122: 28 5c 1a                 jump @12856
      :                          @12346
182125: c9 c8 09                 a2 = a1 - a5
182128: 01                       fallthrough
      :                          @12347
182129: 82 7a                    a3 = u64 [a0]
182131: ab 8a ef                 jump @12344 if a3 != a1
      :                          @12348
182134: 7b 79                    u64 [a0] = a2
182136: 33 0b                    a4 = 0
182138: 01                       fallthrough
      :                          @12349
182139: ab 8a e7                 jump @12344 if a3 != a1
      :                          @12350
182142: 28 48 1a                 jump @12856
      :                          @12351 [@dyn 1379]
182145: 95 17 90 02              a0 = sp + 0x290
182149: 33 08 08                 a1 = 0x8
182152: 50 20 c8 0a 20 96 fd     ra = 2760, jump @1776
      :                          @12352 [@dyn 1380]
182159: 95 17 08 02              a0 = sp + 0x208
182163: 95 18 90 02              a1 = sp + 0x290
182167: 33 09 08                 a2 = 0x8
182170: 50 20 ca 0a 2e 9d fd     ra = 2762, jump @1895
      :                          @12353 [@dyn 1381]
182177: 49 11 70                 u64 [sp + 112] = 0
182180: 33 07                    a0 = 0
182182: 33 04 01                 t2 = 0x1
182185: 33 0b 78 12 03           a4 = 0x31278
182190: 33 00 18                 ra = 0x18
182193: 28 18                    jump @12356
      :                          @12354
182195: 95 77 01                 a0 = a0 + 0x1
182198: 95 44 01                 t2 = t2 + 0x1
182201: 82 18 70                 a1 = u64 [sp + 0x70]
182204: 95 88 18                 a1 = a1 + 0x18
182207: 7b 18 70                 u64 [sp + 0x70] = a1
182210: 52 17 08 07              jump @12356 if a0 != 8
      :                          @12355
182214: 28 48 19                 jump @12846
      :                          @12356
182217: 56 17 06 ea              jump @12354 if a0 >u 6
      :                          @12357
182221: 82 16 70                 s1 = u64 [sp + 0x70]
182224: 64 49                    a2 = t2
182226: 01                       fallthrough
      :                          @12358
182227: 3a 08 78 12 03           a1 = u64 [0x31278]
182232: 97 8a 0d                 a3 = a1 << 0xd
182235: d3 a8 08                 a1 = a1 ^ a3
182238: 98 8c 07                 a5 = a1 >> 0x7
182241: d3 8c 0c                 a5 = a5 ^ a1
182244: 97 c8 11                 a1 = a5 << 0x11
182247: d3 c8 08                 a1 = a1 ^ a5
182250: 3e 08 78 12 03           u64 [0x31278] = a1
182255: 82 18 18 02              a1 = u64 [sp + 0x218]
182259: ac 87 06                 jump @12360 if a0 <u a1
      :                          @12359
182262: 28 d9 2b                 jump @13217
      :                          @12360
182265: 82 13 10 02              t1 = u64 [sp + 0x210]
182269: ca 07 02                 t0 = a0 * ra
182272: c8 32 02                 t0 = t0 + t1
182275: 82 2a 10                 a3 = u64 [t0 + 0x10]
182278: ac a9 06                 jump @12362 if a2 <u a3
      :                          @12361
182281: 28 7f 17                 jump @12814
      :                          @12362
182284: 82 2a 08                 a3 = u64 [t0 + 0x8]
182287: c8 9a 0a                 a3 = a3 + a2
182290: 84 cc 01                 a5 = a5 & 0x1
182293: 78 ac                    u8 [a3] = a5
182295: ac 89 06                 jump @12364 if a2 <u a1
      :                          @12363
182298: 28 e8 2b                 jump @13264
      :                          @12364
182301: c8 63 03                 t1 = t1 + s1
182304: 82 38 28                 a1 = u64 [t1 + 0x28]
182307: ac 87 06                 jump @12366 if a0 <u a1
      :                          @12365
182310: 28 a9 2b                 jump @13217
      :                          @12366
182313: 82 38 20                 a1 = u64 [t1 + 0x20]
182316: c8 78 08                 a1 = a1 + a0
182319: 78 8c                    u8 [a1] = a5
182321: 95 99 01                 a2 = a2 + 0x1
182324: 95 66 18                 s1 = s1 + 0x18
182327: 52 19 08 9c              jump @12358 if a2 != 8
      :                          @12367
182331: 28 78 ff                 jump @12354
      :                          @12368 [@dyn 1382]
182334: 33 0a                    a3 = 0
182336: 3a 02 60 11 03           t0 = u64 [0x31160]
182341: 49 21 e0 01              u64 [sp + 480] = 0
182345: 49 21 e8 01 08           u64 [sp + 488] = 0x8
182350: 49 21 f0 01              u64 [sp + 496] = 0
182354: 33 0c 78 12 03           a5 = 0x31278
182359: 14 03 cd cc cc cc cc cc cc cc t1 = 0xcccccccccccccccd
182369: 7b 12 60                 u64 [sp + 0x60] = t0
182372: 7b 13 58                 u64 [sp + 0x58] = t1
182375: 28 32                    jump @12370
      :                          @12369
182377: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
182381: 82 19 a0 02              a2 = u64 [sp + 0x2a0]
182385: 96 8a 18                 a3 = a1 * 0x18
182388: c8 a7 07                 a0 = a0 + a3
182391: 7b 79 10                 u64 [a0 + 0x10] = a2
182394: 82 19 98 02              a2 = u64 [sp + 0x298]
182398: 7b 79 08                 u64 [a0 + 0x8] = a2
182401: 82 19 90 02              a2 = u64 [sp + 0x290]
182405: 82 1a 48                 a3 = u64 [sp + 0x48]
182408: 83 aa 01                 i32 a3 = a3 + 0x1
182411: 7b 79                    u64 [a0] = a2
182413: 95 88 01                 a1 = a1 + 0x1
182416: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
182420: 51 1a 0a 98 0f           jump @12674 if a3 == 10
      :                          @12370
182425: 7b 1a 48                 u64 [sp + 0x48] = a3
182428: 3a 07 78 12 03           a0 = u64 [0x31278]
182433: 97 78 0d                 a1 = a0 << 0xd
182436: d3 87 07                 a0 = a0 ^ a1
182439: 98 78 07                 a1 = a0 >> 0x7
182442: d3 87 07                 a0 = a0 ^ a1
182445: 97 78 11                 a1 = a0 << 0x11
182448: d3 87 07                 a0 = a0 ^ a1
182451: ca 27 08                 a1 = a0 * t0
182454: 3e 07 78 12 03           u64 [0x31278] = a0
182459: 49 21 90 02              u64 [sp + 656] = 0
182463: 49 21 98 02 08           u64 [sp + 664] = 0x8
182468: 49 21 a0 02              u64 [sp + 672] = 0
182472: d6 38 07                 a0 = a1 mulhu t1
182475: 98 79 02                 a2 = a0 >> 0x2
182478: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
182481: c8 97 07                 a0 = a0 + a2
182484: c9 78 08                 a1 = a1 - a0
182487: 95 86 01                 s1 = a1 + 0x1
182490: 28 2d                    jump @12372
      :                          @12371
182492: ca 29 07                 a0 = a2 * t0
182495: d6 37 09                 a2 = a0 mulhu t1
182498: 98 99 04                 a2 = a2 >> 0x4
182501: 82 1a 98 02              a3 = u64 [sp + 0x298]
182505: 33 0b 14                 a4 = 0x14
182508: ca b9 09                 a2 = a2 * a4
182511: c9 97 07                 a0 = a0 - a2
182514: 97 89 03                 a2 = a1 << 0x3
182517: c8 a9 09                 a2 = a2 + a3
182520: 7b 97                    u64 [a2] = a0
182522: 95 88 01                 a1 = a1 + 0x1
182525: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
182528: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
182532: 51 06 4c                 jump @12375 if s1 == 0
      :                          @12372
182535: 3a 07 78 12 03           a0 = u64 [0x31278]
182540: 97 78 0d                 a1 = a0 << 0xd
182543: d3 87 07                 a0 = a0 ^ a1
182546: 98 78 07                 a1 = a0 >> 0x7
182549: d3 87 07                 a0 = a0 ^ a1
182552: 97 78 11                 a1 = a0 << 0x11
182555: d3 78 09                 a2 = a1 ^ a0
182558: 3e 09 78 12 03           u64 [0x31278] = a2
182563: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
182567: 82 17 90 02              a0 = u64 [sp + 0x290]
182571: ab 78 b1                 jump @12371 if a1 != a0
      :                          @12373
182574: 95 17 90 02              a0 = sp + 0x290
182578: 7b 19 70                 u64 [sp + 0x70] = a2
182581: 50 20 ce 0a d2 89 fd     ra = 2766, jump @1581
      :                          @12374 [@dyn 1383]
182588: 82 19 70                 a2 = u64 [sp + 0x70]
182591: 82 13 58                 t1 = u64 [sp + 0x58]
182594: 33 0c 78 12 03           a5 = 0x31278
182599: 82 12 60                 t0 = u64 [sp + 0x60]
182602: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
182606: 28 8e                    jump @12371
      :                          @12375
182608: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
182612: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
182616: ab 78 11 ff              jump @12369 if a1 != a0
      :                          @12376
182620: 95 17 e0 01              a0 = sp + 0x1e0
182624: 50 20 d0 0a 25 89 fd     ra = 2768, jump @1569
      :                          @12377 [@dyn 1384]
182631: 82 13 58                 t1 = u64 [sp + 0x58]
182634: 33 0c 78 12 03           a5 = 0x31278
182639: 82 12 60                 t0 = u64 [sp + 0x60]
182642: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
182646: 28 f3 fe                 jump @12369
      :                          @12378 [@dyn 1385]
182649: 3a 08 78 12 03           a1 = u64 [0x31278]
182654: 97 89 0d                 a2 = a1 << 0xd
182657: d3 98 08                 a1 = a1 ^ a2
182660: 98 89 07                 a2 = a1 >> 0x7
182663: d3 98 08                 a1 = a1 ^ a2
182666: 97 89 11                 a2 = a1 << 0x11
182669: d3 98 08                 a1 = a1 ^ a2
182672: 3a 09 60 11 03           a2 = u64 [0x31160]
182677: 3e 08 78 12 03           u64 [0x31278] = a1
182682: 3a 0a 78 12 03           a3 = u64 [0x31278]
182687: ca 98 08                 a1 = a1 * a2
182690: 97 ab 0d                 a4 = a3 << 0xd
182693: d3 ba 0a                 a3 = a3 ^ a4
182696: 98 ab 07                 a4 = a3 >> 0x7
182699: d3 ba 0a                 a3 = a3 ^ a4
182702: 97 ab 11                 a4 = a3 << 0x11
182705: d3 ba 0a                 a3 = a3 ^ a4
182708: ca 9a 09                 a2 = a3 * a2
182711: 3a 0b 68 11 03           a4 = u64 [0x31168]
182716: 3e 0a 78 12 03           u64 [0x31278] = a3
182721: 98 87 03                 a0 = a1 >> 0x3
182724: d6 b7 07                 a0 = a0 mulhu a4
182727: 98 77 04                 a0 = a0 >> 0x4
182730: 96 77 e8 03              a0 = a0 * 0x3e8
182734: c9 78 08                 a1 = a1 - a0
182737: 86 88 01                 a1 = a1 | 0x1
182740: 95 88 02                 a1 = a1 + 0x2
182743: cd 89 07                 a0 = a2 %u a1
182746: 50 20 d4 0a 9a d2 fd     ra = 2772, jump @2781
      :                          @12379 [@dyn 1386]
182753: 52 07 06                 jump @12381 if a0 != 0
      :                          @12380
182756: 28 20 22                 jump @13034
      :                          @12381
182759: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
182763: 95 17 e0 01              a0 = sp + 0x1e0
182767: 7b 17 08 02              u64 [sp + 0x208] = a0
182771: 33 07 28 0c              a0 = 0xc28
182775: 7b 17 10 02              u64 [sp + 0x210] = a0
182779: 33 07 f8 2f 01           a0 = 0x12ff8
182784: 7b 17 90 02              u64 [sp + 0x290] = a0
182788: 49 21 98 02 01           u64 [sp + 664] = 0x1
182793: 49 21 b0 02              u64 [sp + 688] = 0
182797: 95 18 08 02              a1 = sp + 0x208
182801: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
182805: 49 21 a8 02 01           u64 [sp + 680] = 0x1
182810: 95 17 38 02              a0 = sp + 0x238
182814: 95 18 90 02              a1 = sp + 0x290
182818: 50 20 d6 0a 1d 85 fd     ra = 2774, jump @1491
      :                          @12382 [@dyn 1387]
182825: 82 16 40 02              s1 = u64 [sp + 0x240]
182829: 82 1b 48 02              a4 = u64 [sp + 0x248]
182833: 82 17 38 02              a0 = u64 [sp + 0x238]
182837: 7b 17 70                 u64 [sp + 0x70] = a0
182840: 33 07 02                 a0 = 0x2
182843: 33 08                    a1 = 0
182845: 33 09                    a2 = 0
182847: 64 6a                    a3 = s1
182849: 33 00 d8 0a              ra = 0xad8
182853: 0a 64                    ecalli 100 // 'log'
182855: 01                       fallthrough
      :                          @12383 [@dyn 1388]
182856: 82 1c 70                 a5 = u64 [sp + 0x70]
182859: 82 17 68                 a0 = u64 [sp + 0x68]
182862: c8 c7 07                 a0 = a0 + a5
182865: 55 37 00 00 ff 09        jump @12385 if a0 >=u 4294901760
      :                          @12384
182871: 28 6f 17                 jump @12856
      :                          @12385
182874: 33 07 c0 22 03           a0 = 0x322c0
182879: 95 77 00 00 01           a0 = a0 + 0x10000
182884: 01                       fallthrough
      :                          @12386
182885: 82 78                    a1 = u64 [a0]
182887: c9 87 09                 a2 = a0 - a1
182890: aa 69 06                 jump @12388 if a2 == s1
      :                          @12387
182893: 28 59 17                 jump @12856
      :                          @12388
182896: c9 c8 09                 a2 = a1 - a5
182899: 01                       fallthrough
      :                          @12389
182900: 82 7a                    a3 = u64 [a0]
182902: ab 8a ef                 jump @12386 if a3 != a1
      :                          @12390
182905: 7b 79                    u64 [a0] = a2
182907: 33 0b                    a4 = 0
182909: 01                       fallthrough
      :                          @12391
182910: ab 8a e7                 jump @12386 if a3 != a1
      :                          @12392
182913: 28 45 17                 jump @12856
      :                          @12393
182916: 82 18 28 01              a1 = u64 [sp + 0x128]
182920: 95 17 e0 01              a0 = sp + 0x1e0
182924: 95 16 e0 01              s1 = sp + 0x1e0
182928: 50 20 da 0a 0c 3e fe     ra = 2778, jump @5312
      :                          @12394 [@dyn 1389]
182935: 95 17 20 01              a0 = sp + 0x120
182939: 7b 17 38 02              u64 [sp + 0x238] = a0
182943: 33 07 08 02              a0 = 0x208
182947: 7b 17 40 02              u64 [sp + 0x240] = a0
182951: 7b 16 48 02              u64 [sp + 0x248] = s1
182955: 7b 17 50 02              u64 [sp + 0x250] = a0
182959: 33 07 18 0b 01           a0 = 0x10b18
182964: 7b 17 90 02              u64 [sp + 0x290] = a0
182968: 49 21 98 02 02           u64 [sp + 664] = 0x2
182973: 49 21 b0 02              u64 [sp + 688] = 0
182977: 95 18 38 02              a1 = sp + 0x238
182981: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
182985: 49 21 a8 02 02           u64 [sp + 680] = 0x2
182990: 95 17 08 02              a0 = sp + 0x208
182994: 95 18 90 02              a1 = sp + 0x290
182998: 50 20 dc 0a 69 84 fd     ra = 2780, jump @1491
      :                          @12395 [@dyn 1390]
183005: 82 16 10 02              s1 = u64 [sp + 0x210]
183009: 82 1b 18 02              a4 = u64 [sp + 0x218]
183013: 82 17 08 02              a0 = u64 [sp + 0x208]
183017: 7b 17 70                 u64 [sp + 0x70] = a0
183020: 33 07 02                 a0 = 0x2
183023: 33 08                    a1 = 0
183025: 33 09                    a2 = 0
183027: 64 6a                    a3 = s1
183029: 33 00 de 0a              ra = 0xade
183033: 0a 64                    ecalli 100 // 'log'
183035: 01                       fallthrough
      :                          @12396 [@dyn 1391]
183036: 82 1c 70                 a5 = u64 [sp + 0x70]
183039: 82 17 68                 a0 = u64 [sp + 0x68]
183042: c8 c7 07                 a0 = a0 + a5
183045: 53 37 00 00 ff 25        jump @12402 if a0 <u 4294901760
      :                          @12397
183051: 33 07 c0 22 03           a0 = 0x322c0
183056: 95 77 00 00 01           a0 = a0 + 0x10000
183061: 01                       fallthrough
      :                          @12398
183062: 82 78                    a1 = u64 [a0]
183064: c9 87 09                 a2 = a0 - a1
183067: ab 69 0f                 jump @12402 if a2 != s1
      :                          @12399
183070: c9 c8 09                 a2 = a1 - a5
183073: 01                       fallthrough
      :                          @12400
183074: 82 7a                    a3 = u64 [a0]
183076: ab 8a f2                 jump @12398 if a3 != a1
      :                          @12401
183079: 7b 79                    u64 [a0] = a2
183081: 01                       fallthrough
      :                          @12402
183082: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
183086: 51 08 30                 jump @12409 if a1 == 0
      :                          @12403
183089: 56 28 00 10 2d           jump @12409 if a1 >u 4096
      :                          @12404
183094: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
183098: 97 88 04                 a1 = a1 << 0x4
183101: 33 09 c0 22 03           a2 = 0x322c0
183106: 95 99 00 00 01           a2 = a2 + 0x10000
183111: 01                       fallthrough
      :                          @12405
183112: 82 9a                    a3 = u64 [a2]
183114: c9 a9 0b                 a4 = a2 - a3
183117: ab 7b 11                 jump @12409 if a4 != a0
      :                          @12406
183120: c9 8a 0b                 a4 = a3 - a1
183123: 01                       fallthrough
      :                          @12407
183124: 82 9c                    a5 = u64 [a2]
183126: ab ac f2                 jump @12405 if a5 != a3
      :                          @12408
183129: 7b 9b                    u64 [a2] = a4
183131: 33 06                    s1 = 0
183133: 01                       fallthrough
      :                          @12409
183134: 82 18 20 01              a1 = u64 [sp + 0x120]
183138: 52 08 06                 jump @12411 if a1 != 0
      :                          @12410
183141: 28 61 16                 jump @12856
      :                          @12411
183144: 54 28 00 10 08           jump @12413 if a1 <=u 4096
      :                          @12412
183149: 28 59 16                 jump @12856
      :                          @12413
183152: 82 17 28 01              a0 = u64 [sp + 0x128]
183156: 97 88 04                 a1 = a1 << 0x4
183159: 33 09 c0 22 03           a2 = 0x322c0
183164: 95 99 00 00 01           a2 = a2 + 0x10000
183169: 01                       fallthrough
      :                          @12414
183170: 82 9a                    a3 = u64 [a2]
183172: c9 a9 0b                 a4 = a2 - a3
183175: aa 7b 06                 jump @12416 if a4 == a0
      :                          @12415
183178: 28 3c 16                 jump @12856
      :                          @12416
183181: c9 8a 0b                 a4 = a3 - a1
183184: 01                       fallthrough
      :                          @12417
183185: 82 9c                    a5 = u64 [a2]
183187: ab ac ef                 jump @12414 if a5 != a3
      :                          @12418
183190: 7b 9b                    u64 [a2] = a4
183192: 33 06                    s1 = 0
183194: 01                       fallthrough
      :                          @12419
183195: ab ac e7                 jump @12414 if a5 != a3
      :                          @12420
183198: 28 28 16                 jump @12856
      :                          @12421
183201: 82 18 28 01              a1 = u64 [sp + 0x128]
183205: 95 17 e0 01              a0 = sp + 0x1e0
183209: 95 16 e0 01              s1 = sp + 0x1e0
183213: 50 20 e0 0a e0 71 fe     ra = 2784, jump @6435
      :                          @12422 [@dyn 1392]
183220: 95 17 20 01              a0 = sp + 0x120
183224: 7b 17 38 02              u64 [sp + 0x238] = a0
183228: 33 07 10 02              a0 = 0x210
183232: 7b 17 40 02              u64 [sp + 0x240] = a0
183236: 7b 16 48 02              u64 [sp + 0x248] = s1
183240: 33 07 20 02              a0 = 0x220
183244: 7b 17 50 02              u64 [sp + 0x250] = a0
183248: 33 07 28 12 01           a0 = 0x11228
183253: 7b 17 90 02              u64 [sp + 0x290] = a0
183257: 49 21 98 02 02           u64 [sp + 664] = 0x2
183262: 49 21 b0 02              u64 [sp + 688] = 0
183266: 95 18 38 02              a1 = sp + 0x238
183270: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
183274: 49 21 a8 02 02           u64 [sp + 680] = 0x2
183279: 95 17 08 02              a0 = sp + 0x208
183283: 95 18 90 02              a1 = sp + 0x290
183287: 50 20 e2 0a 48 83 fd     ra = 2786, jump @1491
      :                          @12423 [@dyn 1393]
183294: 82 16 10 02              s1 = u64 [sp + 0x210]
183298: 82 1b 18 02              a4 = u64 [sp + 0x218]
183302: 82 17 08 02              a0 = u64 [sp + 0x208]
183306: 7b 17 70                 u64 [sp + 0x70] = a0
183309: 33 07 02                 a0 = 0x2
183312: 33 08                    a1 = 0
183314: 33 09                    a2 = 0
183316: 64 6a                    a3 = s1
183318: 33 00 e4 0a              ra = 0xae4
183322: 0a 64                    ecalli 100 // 'log'
183324: 01                       fallthrough
      :                          @12424 [@dyn 1394]
183325: 82 1c 70                 a5 = u64 [sp + 0x70]
183328: 82 17 68                 a0 = u64 [sp + 0x68]
183331: c8 c7 07                 a0 = a0 + a5
183334: 53 37 00 00 ff 25        jump @12430 if a0 <u 4294901760
      :                          @12425
183340: 33 07 c0 22 03           a0 = 0x322c0
183345: 95 77 00 00 01           a0 = a0 + 0x10000
183350: 01                       fallthrough
      :                          @12426
183351: 82 78                    a1 = u64 [a0]
183353: c9 87 09                 a2 = a0 - a1
183356: ab 69 0f                 jump @12430 if a2 != s1
      :                          @12427
183359: c9 c8 09                 a2 = a1 - a5
183362: 01                       fallthrough
      :                          @12428
183363: 82 7a                    a3 = u64 [a0]
183365: ab 8a f2                 jump @12426 if a3 != a1
      :                          @12429
183368: 7b 79                    u64 [a0] = a2
183370: 01                       fallthrough
      :                          @12430
183371: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
183375: 51 08 30                 jump @12437 if a1 == 0
      :                          @12431
183378: 56 28 00 20 2d           jump @12437 if a1 >u 8192
      :                          @12432
183383: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
183387: 97 88 03                 a1 = a1 << 0x3
183390: 33 09 c0 22 03           a2 = 0x322c0
183395: 95 99 00 00 01           a2 = a2 + 0x10000
183400: 01                       fallthrough
      :                          @12433
183401: 82 9a                    a3 = u64 [a2]
183403: c9 a9 0b                 a4 = a2 - a3
183406: ab 7b 11                 jump @12437 if a4 != a0
      :                          @12434
183409: c9 8a 0b                 a4 = a3 - a1
183412: 01                       fallthrough
      :                          @12435
183413: 82 9c                    a5 = u64 [a2]
183415: ab ac f2                 jump @12433 if a5 != a3
      :                          @12436
183418: 7b 9b                    u64 [a2] = a4
183420: 33 06                    s1 = 0
183422: 01                       fallthrough
      :                          @12437
183423: 82 18 20 01              a1 = u64 [sp + 0x120]
183427: 52 08 06                 jump @12439 if a1 != 0
      :                          @12438
183430: 28 40 15                 jump @12856
      :                          @12439
183433: 54 28 00 10 08           jump @12441 if a1 <=u 4096
      :                          @12440
183438: 28 38 15                 jump @12856
      :                          @12441
183441: 82 17 28 01              a0 = u64 [sp + 0x128]
183445: 97 88 04                 a1 = a1 << 0x4
183448: 33 09 c0 22 03           a2 = 0x322c0
183453: 95 99 00 00 01           a2 = a2 + 0x10000
183458: 01                       fallthrough
      :                          @12442
183459: 82 9a                    a3 = u64 [a2]
183461: c9 a9 0b                 a4 = a2 - a3
183464: aa 7b 06                 jump @12444 if a4 == a0
      :                          @12443
183467: 28 1b 15                 jump @12856
      :                          @12444
183470: c9 8a 0b                 a4 = a3 - a1
183473: 01                       fallthrough
      :                          @12445
183474: 82 9c                    a5 = u64 [a2]
183476: ab ac ef                 jump @12442 if a5 != a3
      :                          @12446
183479: 7b 9b                    u64 [a2] = a4
183481: 33 06                    s1 = 0
183483: 01                       fallthrough
      :                          @12447
183484: ab ac e7                 jump @12442 if a5 != a3
      :                          @12448
183487: 28 07 15                 jump @12856
      :                          @12449
183490: 50 20 e6 0a 97 71 fe     ra = 2790, jump @6451
      :                          @12450 [@dyn 1395]
183497: 7b 17 20 01              u64 [sp + 0x120] = a0
183501: 95 17 20 01              a0 = sp + 0x120
183505: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
183509: 33 07 28 0c              a0 = 0xc28
183513: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
183517: 33 07 58 12 01           a0 = 0x11258
183522: 7b 17 90 02              u64 [sp + 0x290] = a0
183526: 49 21 98 02 01           u64 [sp + 664] = 0x1
183531: 49 21 b0 02              u64 [sp + 688] = 0
183535: 95 18 e0 01              a1 = sp + 0x1e0
183539: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
183543: 49 21 a8 02 01           u64 [sp + 680] = 0x1
183548: 95 17 38 02              a0 = sp + 0x238
183552: 95 18 90 02              a1 = sp + 0x290
183556: 50 20 e8 0a 3b 82 fd     ra = 2792, jump @1491
      :                          @12451 [@dyn 1396]
183563: 82 16 40 02              s1 = u64 [sp + 0x240]
183567: 82 1b 48 02              a4 = u64 [sp + 0x248]
183571: 82 17 38 02              a0 = u64 [sp + 0x238]
183575: 7b 17 70                 u64 [sp + 0x70] = a0
183578: 33 07 02                 a0 = 0x2
183581: 33 08                    a1 = 0
183583: 33 09                    a2 = 0
183585: 64 6a                    a3 = s1
183587: 33 00 ea 0a              ra = 0xaea
183591: 0a 64                    ecalli 100 // 'log'
183593: 01                       fallthrough
      :                          @12452 [@dyn 1397]
183594: 82 1c 70                 a5 = u64 [sp + 0x70]
183597: 82 17 68                 a0 = u64 [sp + 0x68]
183600: c8 c7 07                 a0 = a0 + a5
183603: 33 08 00 00 ff           a1 = 0xffffffffffff0000
183608: ac 87 96 0f              jump @12755 if a0 <u a1
      :                          @12453
183612: 33 07 c0 22 03           a0 = 0x322c0
183617: 95 77 00 00 01           a0 = a0 + 0x10000
183622: 01                       fallthrough
      :                          @12454
183623: 82 78                    a1 = u64 [a0]
183625: c9 87 09                 a2 = a0 - a1
183628: ab 69 82 0f              jump @12755 if a2 != s1
      :                          @12455
183632: c9 c8 09                 a2 = a1 - a5
183635: 01                       fallthrough
      :                          @12456
183636: 82 7a                    a3 = u64 [a0]
183638: ab 8a f1                 jump @12454 if a3 != a1
      :                          @12457
183641: 7b 79                    u64 [a0] = a2
183643: 33 0b                    a4 = 0
183645: 01                       fallthrough
      :                          @12458
183646: ab 8a e9                 jump @12454 if a3 != a1
      :                          @12459
183649: 28 6d 0f                 jump @12755
      :                          @12460
183652: 49 21 b0 01              u64 [sp + 432] = 0
183656: 95 17 20 01              a0 = sp + 0x120
183660: 7b 1c 70                 u64 [sp + 0x70] = a5
183663: 64 c8                    a1 = a5
183665: 33 00 ec 0a              ra = 0xaec
183669: 95 11 e8                 sp = sp + 0xffffffffffffffe8
183672: 7b 10 10                 u64 [sp + 0x10] = ra
183675: 7b 15 08                 u64 [sp + 0x8] = s0
183678: 7b 16                    u64 [sp] = s1
183680: 33 03 c0 22 03           t1 = 0x322c0
183685: 33 02 00 00 01           t0 = 0x10000
183690: c8 23 04                 t2 = t1 + t0
183693: 28 62 79 fe              jump @6652
      :                          @12461 [@dyn 1398]
183697: 82 17 20 01              a0 = u64 [sp + 0x120]
183701: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
183711: aa 87 06                 jump @12463 if a0 == a1
      :                          @12462
183714: 28 fc 15                 jump @12884
      :                          @12463
183717: 33 07 a0 14 01           a0 = 0x114a0
183722: 7b 17 90 02              u64 [sp + 0x290] = a0
183726: 49 21 98 02 01           u64 [sp + 664] = 0x1
183731: 49 21 b0 02              u64 [sp + 688] = 0
183735: 33 07 f0 2f 01           a0 = 0x12ff0
183740: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
183744: 49 21 a8 02              u64 [sp + 680] = 0
183748: 95 17 38 02              a0 = sp + 0x238
183752: 95 18 90 02              a1 = sp + 0x290
183756: 50 20 ee 0a 73 81 fd     ra = 2798, jump @1491
      :                          @12464 [@dyn 1399]
183763: 82 1a 40 02              a3 = u64 [sp + 0x240]
183767: 7b 1a 60                 u64 [sp + 0x60] = a3
183770: 82 1b 48 02              a4 = u64 [sp + 0x248]
183774: 82 16 38 02              s1 = u64 [sp + 0x238]
183778: 33 07 02                 a0 = 0x2
183781: 33 08                    a1 = 0
183783: 33 09                    a2 = 0
183785: 33 00 f0 0a              ra = 0xaf0
183789: 0a 64                    ecalli 100 // 'log'
183791: 01                       fallthrough
      :                          @12465 [@dyn 1400]
183792: 82 1c 60                 a5 = u64 [sp + 0x60]
183795: 82 17 68                 a0 = u64 [sp + 0x68]
183798: c8 67 07                 a0 = a0 + s1
183801: 82 12 70                 t0 = u64 [sp + 0x70]
183804: 55 37 00 00 ff 09        jump @12467 if a0 >=u 4294901760
      :                          @12466
183810: 28 84 16                 jump @12899
      :                          @12467
183813: 33 07 c0 22 03           a0 = 0x322c0
183818: 95 77 00 00 01           a0 = a0 + 0x10000
183823: 01                       fallthrough
      :                          @12468
183824: 82 78                    a1 = u64 [a0]
183826: c9 87 09                 a2 = a0 - a1
183829: aa c9 06                 jump @12470 if a2 == a5
      :                          @12469
183832: 28 6e 16                 jump @12899
      :                          @12470
183835: c9 68 09                 a2 = a1 - s1
183838: 01                       fallthrough
      :                          @12471
183839: 82 7a                    a3 = u64 [a0]
183841: ab 8a ef                 jump @12468 if a3 != a1
      :                          @12472
183844: 7b 79                    u64 [a0] = a2
183846: 33 0b                    a4 = 0
183848: 01                       fallthrough
      :                          @12473
183849: ab 8a e7                 jump @12468 if a3 != a1
      :                          @12474
183852: 28 5a 16                 jump @12899
      :                          @12475
183855: 95 17 08 02              a0 = sp + 0x208
183859: 95 16 08 02              s1 = sp + 0x208
183863: 7b 1b 70                 u64 [sp + 0x70] = a4
183866: 64 b8                    a1 = a4
183868: 50 20 f2 0a 42 91 fe     ra = 2802, jump @7165
      :                          @12476 [@dyn 1401]
183875: 7b 16 20 01              u64 [sp + 0x120] = s1
183879: 33 07 08 02              a0 = 0x208
183883: 7b 17 28 01              u64 [sp + 0x128] = a0
183887: 33 07 e0 15 01           a0 = 0x115e0
183892: 7b 17 90 02              u64 [sp + 0x290] = a0
183896: 49 21 98 02 01           u64 [sp + 664] = 0x1
183901: 49 21 b0 02              u64 [sp + 688] = 0
183905: 95 18 20 01              a1 = sp + 0x120
183909: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
183913: 49 21 a8 02 01           u64 [sp + 680] = 0x1
183918: 95 17 38 02              a0 = sp + 0x238
183922: 95 18 90 02              a1 = sp + 0x290
183926: 50 20 f4 0a c9 80 fd     ra = 2804, jump @1491
      :                          @12477 [@dyn 1402]
183933: 82 1a 40 02              a3 = u64 [sp + 0x240]
183937: 7b 1a 60                 u64 [sp + 0x60] = a3
183940: 82 1b 48 02              a4 = u64 [sp + 0x248]
183944: 82 16 38 02              s1 = u64 [sp + 0x238]
183948: 33 07 02                 a0 = 0x2
183951: 33 08                    a1 = 0
183953: 33 09                    a2 = 0
183955: 33 00 f6 0a              ra = 0xaf6
183959: 0a 64                    ecalli 100 // 'log'
183961: 01                       fallthrough
      :                          @12478 [@dyn 1403]
183962: 82 1c 60                 a5 = u64 [sp + 0x60]
183965: 82 17 68                 a0 = u64 [sp + 0x68]
183968: c8 67 07                 a0 = a0 + s1
183971: 53 37 00 00 ff 25        jump @12484 if a0 <u 4294901760
      :                          @12479
183977: 33 07 c0 22 03           a0 = 0x322c0
183982: 95 77 00 00 01           a0 = a0 + 0x10000
183987: 01                       fallthrough
      :                          @12480
183988: 82 78                    a1 = u64 [a0]
183990: c9 87 09                 a2 = a0 - a1
183993: ab c9 0f                 jump @12484 if a2 != a5
      :                          @12481
183996: c9 68 09                 a2 = a1 - s1
183999: 01                       fallthrough
      :                          @12482
184000: 82 7a                    a3 = u64 [a0]
184002: ab 8a f2                 jump @12480 if a3 != a1
      :                          @12483
184005: 7b 79                    u64 [a0] = a2
184007: 01                       fallthrough
      :                          @12484
184008: 82 18 08 02              a1 = u64 [sp + 0x208]
184012: 51 08 2e                 jump @12491 if a1 == 0
      :                          @12485
184015: 56 28 00 10 2b           jump @12491 if a1 >u 4096
      :                          @12486
184020: 82 17 10 02              a0 = u64 [sp + 0x210]
184024: 97 88 04                 a1 = a1 << 0x4
184027: 33 09 c0 22 03           a2 = 0x322c0
184032: 95 99 00 00 01           a2 = a2 + 0x10000
184037: 01                       fallthrough
      :                          @12487
184038: 82 9a                    a3 = u64 [a2]
184040: c9 a9 0b                 a4 = a2 - a3
184043: ab 7b 0f                 jump @12491 if a4 != a0
      :                          @12488
184046: c9 8a 0b                 a4 = a3 - a1
184049: 01                       fallthrough
      :                          @12489
184050: 82 9c                    a5 = u64 [a2]
184052: ab ac f2                 jump @12487 if a5 != a3
      :                          @12490
184055: 7b 9b                    u64 [a2] = a4
184057: 01                       fallthrough
      :                          @12491
184058: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
184062: 82 16 70                 s1 = u64 [sp + 0x70]
184065: 52 07 06                 jump @12493 if a0 != 0
      :                          @12492
184068: 28 c2 12                 jump @12856
      :                          @12493
184071: 54 27 00 10 08           jump @12495 if a0 <=u 4096
      :                          @12494
184076: 28 ba 12                 jump @12856
      :                          @12495
184079: 97 77 04                 a0 = a0 << 0x4
184082: 33 08 c0 22 03           a1 = 0x322c0
184087: 95 88 00 00 01           a1 = a1 + 0x10000
184092: 01                       fallthrough
      :                          @12496
184093: 82 89                    a2 = u64 [a1]
184095: c9 98 0a                 a3 = a1 - a2
184098: aa 6a 06                 jump @12498 if a3 == s1
      :                          @12497
184101: 28 a1 12                 jump @12856
      :                          @12498
184104: c9 79 0a                 a3 = a2 - a0
184107: 01                       fallthrough
      :                          @12499
184108: 82 8b                    a4 = u64 [a1]
184110: ab 9b ef                 jump @12496 if a4 != a2
      :                          @12500
184113: 7b 8a                    u64 [a1] = a3
184115: 33 0c                    a5 = 0
184117: 01                       fallthrough
      :                          @12501
184118: ab 9b e7                 jump @12496 if a4 != a2
      :                          @12502
184121: 28 8d 12                 jump @12856
      :                          @12503
184124: 7b 17 70                 u64 [sp + 0x70] = a0
184127: 33 00 f8 0a              ra = 0xaf8
184131: 95 11 80                 sp = sp + 0xffffffffffffff80
184134: 7b 10 78                 u64 [sp + 0x78] = ra
184137: 7b 15 70                 u64 [sp + 0x70] = s0
184140: 7b 16 68                 u64 [sp + 0x68] = s1
184143: 64 89                    a2 = a1
184145: 64 78                    a1 = a0
184147: 95 17 50                 a0 = sp + 0x50
184150: 33 00 2a 04              ra = 0x42a
184154: 28 24 90 fe              jump @7165
      :                          @12504 [@dyn 1404]
184158: 7b 17 20 01              u64 [sp + 0x120] = a0
184162: 95 17 20 01              a0 = sp + 0x120
184166: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
184170: 33 07 28 0c              a0 = 0xc28
184174: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
184178: 33 07 00 16 01           a0 = 0x11600
184183: 7b 17 90 02              u64 [sp + 0x290] = a0
184187: 49 21 98 02 01           u64 [sp + 664] = 0x1
184192: 49 21 b0 02              u64 [sp + 688] = 0
184196: 95 18 e0 01              a1 = sp + 0x1e0
184200: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
184204: 49 21 a8 02 01           u64 [sp + 680] = 0x1
184209: 95 17 38 02              a0 = sp + 0x238
184213: 95 18 90 02              a1 = sp + 0x290
184217: 50 20 fa 0a a6 7f fd     ra = 2810, jump @1491
      :                          @12505 [@dyn 1405]
184224: 82 1a 40 02              a3 = u64 [sp + 0x240]
184228: 7b 1a 60                 u64 [sp + 0x60] = a3
184231: 82 1b 48 02              a4 = u64 [sp + 0x248]
184235: 82 16 38 02              s1 = u64 [sp + 0x238]
184239: 33 07 02                 a0 = 0x2
184242: 33 08                    a1 = 0
184244: 33 09                    a2 = 0
184246: 33 00 fc 0a              ra = 0xafc
184250: 0a 64                    ecalli 100 // 'log'
184252: 01                       fallthrough
      :                          @12506 [@dyn 1406]
184253: 82 1c 60                 a5 = u64 [sp + 0x60]
184256: 82 17 68                 a0 = u64 [sp + 0x68]
184259: c8 67 07                 a0 = a0 + s1
184262: 53 37 00 00 ff 25        jump @12512 if a0 <u 4294901760
      :                          @12507
184268: 33 07 c0 22 03           a0 = 0x322c0
184273: 95 77 00 00 01           a0 = a0 + 0x10000
184278: 01                       fallthrough
      :                          @12508
184279: 82 78                    a1 = u64 [a0]
184281: c9 87 09                 a2 = a0 - a1
184284: ab c9 0f                 jump @12512 if a2 != a5
      :                          @12509
184287: c9 68 09                 a2 = a1 - s1
184290: 01                       fallthrough
      :                          @12510
184291: 82 7a                    a3 = u64 [a0]
184293: ab 8a f2                 jump @12508 if a3 != a1
      :                          @12511
184296: 7b 79                    u64 [a0] = a2
184298: 01                       fallthrough
      :                          @12512
184299: 82 17 08 02              a0 = u64 [sp + 0x208]
184303: 82 16 70                 s1 = u64 [sp + 0x70]
184306: 52 07 06                 jump @12514 if a0 != 0
      :                          @12513
184309: 28 d1 11                 jump @12856
      :                          @12514
184312: 54 27 00 10 08           jump @12516 if a0 <=u 4096
      :                          @12515
184317: 28 c9 11                 jump @12856
      :                          @12516
184320: 97 77 04                 a0 = a0 << 0x4
184323: 33 08 c0 22 03           a1 = 0x322c0
184328: 95 88 00 00 01           a1 = a1 + 0x10000
184333: 01                       fallthrough
      :                          @12517
184334: 82 89                    a2 = u64 [a1]
184336: c9 98 0a                 a3 = a1 - a2
184339: aa 6a 06                 jump @12519 if a3 == s1
      :                          @12518
184342: 28 b0 11                 jump @12856
      :                          @12519
184345: c9 79 0a                 a3 = a2 - a0
184348: 01                       fallthrough
      :                          @12520
184349: 82 8b                    a4 = u64 [a1]
184351: ab 9b ef                 jump @12517 if a4 != a2
      :                          @12521
184354: 7b 8a                    u64 [a1] = a3
184356: 33 0c                    a5 = 0
184358: 01                       fallthrough
      :                          @12522
184359: ab 9b e7                 jump @12517 if a4 != a2
      :                          @12523
184362: 28 9c 11                 jump @12856
      :                          @12524
184365: 95 17 e0 01              a0 = sp + 0x1e0
184369: 7b 1b 70                 u64 [sp + 0x70] = a4
184372: 64 b8                    a1 = a4
184374: 50 20 fe 0a 48 8f fe     ra = 2814, jump @7165
      :                          @12525 [@dyn 1407]
184381: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
184385: 95 17 08 02              a0 = sp + 0x208
184389: 95 16 08 02              s1 = sp + 0x208
184393: 50 20 00 0b b6 93 fe     ra = 2816, jump @7247
      :                          @12526 [@dyn 1408]
184400: 7b 16 c8 01              u64 [sp + 0x1c8] = s1
184404: 33 07 28 02              a0 = 0x228
184408: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
184412: 33 07 28 16 01           a0 = 0x11628
184417: 7b 17 90 02              u64 [sp + 0x290] = a0
184421: 49 21 98 02 01           u64 [sp + 664] = 0x1
184426: 49 21 b0 02              u64 [sp + 688] = 0
184430: 95 18 c8 01              a1 = sp + 0x1c8
184434: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
184438: 49 21 a8 02 01           u64 [sp + 680] = 0x1
184443: 95 17 38 02              a0 = sp + 0x238
184447: 95 18 90 02              a1 = sp + 0x290
184451: 50 20 02 0b bc 7e fd     ra = 2818, jump @1491
      :                          @12527 [@dyn 1409]
184458: 82 1a 40 02              a3 = u64 [sp + 0x240]
184462: 7b 1a 60                 u64 [sp + 0x60] = a3
184465: 82 1b 48 02              a4 = u64 [sp + 0x248]
184469: 82 16 38 02              s1 = u64 [sp + 0x238]
184473: 33 07 02                 a0 = 0x2
184476: 33 08                    a1 = 0
184478: 33 09                    a2 = 0
184480: 33 00 04 0b              ra = 0xb04
184484: 0a 64                    ecalli 100 // 'log'
184486: 01                       fallthrough
      :                          @12528 [@dyn 1410]
184487: 82 1c 60                 a5 = u64 [sp + 0x60]
184490: 82 17 68                 a0 = u64 [sp + 0x68]
184493: c8 67 07                 a0 = a0 + s1
184496: 53 37 00 00 ff 25        jump @12534 if a0 <u 4294901760
      :                          @12529
184502: 33 07 c0 22 03           a0 = 0x322c0
184507: 95 77 00 00 01           a0 = a0 + 0x10000
184512: 01                       fallthrough
      :                          @12530
184513: 82 78                    a1 = u64 [a0]
184515: c9 87 09                 a2 = a0 - a1
184518: ab c9 0f                 jump @12534 if a2 != a5
      :                          @12531
184521: c9 68 09                 a2 = a1 - s1
184524: 01                       fallthrough
      :                          @12532
184525: 82 7a                    a3 = u64 [a0]
184527: ab 8a f2                 jump @12530 if a3 != a1
      :                          @12533
184530: 7b 79                    u64 [a0] = a2
184532: 01                       fallthrough
      :                          @12534
184533: 82 18 08 02              a1 = u64 [sp + 0x208]
184537: 51 08 30                 jump @12541 if a1 == 0
      :                          @12535
184540: 56 28 aa 0a 2d           jump @12541 if a1 >u 2730
      :                          @12536
184545: 82 17 10 02              a0 = u64 [sp + 0x210]
184549: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
184552: 33 09 c0 22 03           a2 = 0x322c0
184557: 95 99 00 00 01           a2 = a2 + 0x10000
184562: 01                       fallthrough
      :                          @12537
184563: 82 9a                    a3 = u64 [a2]
184565: c9 a9 0b                 a4 = a2 - a3
184568: ab 7b 11                 jump @12541 if a4 != a0
      :                          @12538
184571: c8 8a 0b                 a4 = a3 + a1
184574: 01                       fallthrough
      :                          @12539
184575: 82 9c                    a5 = u64 [a2]
184577: ab ac f2                 jump @12537 if a5 != a3
      :                          @12540
184580: 7b 9b                    u64 [a2] = a4
184582: 33 06                    s1 = 0
184584: 01                       fallthrough
      :                          @12541
184585: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
184589: 82 12 70                 t0 = u64 [sp + 0x70]
184592: 51 08 30                 jump @12548 if a1 == 0
      :                          @12542
184595: 56 28 00 10 2d           jump @12548 if a1 >u 4096
      :                          @12543
184600: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
184604: 97 88 04                 a1 = a1 << 0x4
184607: 33 09 c0 22 03           a2 = 0x322c0
184612: 95 99 00 00 01           a2 = a2 + 0x10000
184617: 01                       fallthrough
      :                          @12544
184618: 82 9a                    a3 = u64 [a2]
184620: c9 a9 0b                 a4 = a2 - a3
184623: ab 7b 11                 jump @12548 if a4 != a0
      :                          @12545
184626: c9 8a 0b                 a4 = a3 - a1
184629: 01                       fallthrough
      :                          @12546
184630: 82 9c                    a5 = u64 [a2]
184632: ab ac f2                 jump @12544 if a5 != a3
      :                          @12547
184635: 7b 9b                    u64 [a2] = a4
184637: 33 06                    s1 = 0
184639: 01                       fallthrough
      :                          @12548
184640: 82 17 20 01              a0 = u64 [sp + 0x120]
184644: 51 07 82 10              jump @12856 if a0 == 0
      :                          @12549
184648: 56 27 00 10 7e 10        jump @12856 if a0 >u 4096
      :                          @12550
184654: 97 77 04                 a0 = a0 << 0x4
184657: 33 08 c0 22 03           a1 = 0x322c0
184662: 95 88 00 00 01           a1 = a1 + 0x10000
184667: 01                       fallthrough
      :                          @12551
184668: 82 89                    a2 = u64 [a1]
184670: c9 98 0a                 a3 = a1 - a2
184673: ab 2a 65 10              jump @12856 if a3 != t0
      :                          @12552
184677: c9 79 0a                 a3 = a2 - a0
184680: 01                       fallthrough
      :                          @12553
184681: 82 8b                    a4 = u64 [a1]
184683: ab 9b f1                 jump @12551 if a4 != a2
      :                          @12554
184686: 7b 8a                    u64 [a1] = a3
184688: 33 0c                    a5 = 0
184690: 01                       fallthrough
      :                          @12555
184691: ab 9b e9                 jump @12551 if a4 != a2
      :                          @12556
184694: 28 50 10                 jump @12856
      :                          @12557
184697: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
184701: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
184705: 95 17 20 01              a0 = sp + 0x120
184709: 7b 18 60                 u64 [sp + 0x60] = a1
184712: 7b 1b 70                 u64 [sp + 0x70] = a4
184715: 50 20 06 0b f3 8d fe     ra = 2822, jump @7165
      :                          @12558 [@dyn 1411]
184722: 95 17 e0 01              a0 = sp + 0x1e0
184726: 82 18 70                 a1 = u64 [sp + 0x70]
184729: 64 69                    a2 = s1
184731: 50 20 08 0b e3 8d fe     ra = 2824, jump @7165
      :                          @12559 [@dyn 1412]
184738: 82 18 28 01              a1 = u64 [sp + 0x128]
184742: 82 19 30 01              a2 = u64 [sp + 0x130]
184746: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
184750: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
184754: 95 17 08 02              a0 = sp + 0x208
184758: 95 16 08 02              s1 = sp + 0x208
184762: 7b 18 58                 u64 [sp + 0x58] = a1
184765: 7b 1a 48                 u64 [sp + 0x48] = a3
184768: 50 20 0a 0b c4 92 fe     ra = 2826, jump @7254
      :                          @12560 [@dyn 1413]
184775: 7b 16 10 01              u64 [sp + 0x110] = s1
184779: 33 07 08 02              a0 = 0x208
184783: 7b 17 18 01              u64 [sp + 0x118] = a0
184787: 33 07 50 16 01           a0 = 0x11650
184792: 7b 17 90 02              u64 [sp + 0x290] = a0
184796: 49 21 98 02 01           u64 [sp + 664] = 0x1
184801: 49 21 b0 02              u64 [sp + 688] = 0
184805: 95 18 10 01              a1 = sp + 0x110
184809: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
184813: 49 21 a8 02 01           u64 [sp + 680] = 0x1
184818: 95 17 38 02              a0 = sp + 0x238
184822: 95 18 90 02              a1 = sp + 0x290
184826: 50 20 0c 0b 45 7d fd     ra = 2828, jump @1491
      :                          @12561 [@dyn 1414]
184833: 82 1a 40 02              a3 = u64 [sp + 0x240]
184837: 7b 1a 40                 u64 [sp + 0x40] = a3
184840: 82 1b 48 02              a4 = u64 [sp + 0x248]
184844: 82 16 38 02              s1 = u64 [sp + 0x238]
184848: 33 07 02                 a0 = 0x2
184851: 33 08                    a1 = 0
184853: 33 09                    a2 = 0
184855: 33 00 0e 0b              ra = 0xb0e
184859: 0a 64                    ecalli 100 // 'log'
184861: 01                       fallthrough
      :                          @12562 [@dyn 1415]
184862: 82 1c 40                 a5 = u64 [sp + 0x40]
184865: 82 17 68                 a0 = u64 [sp + 0x68]
184868: c8 67 07                 a0 = a0 + s1
184871: 53 37 00 00 ff 27        jump @12568 if a0 <u 4294901760
      :                          @12563
184877: 33 07 c0 22 03           a0 = 0x322c0
184882: 95 77 00 00 01           a0 = a0 + 0x10000
184887: 01                       fallthrough
      :                          @12564
184888: 82 78                    a1 = u64 [a0]
184890: c9 87 09                 a2 = a0 - a1
184893: ab c9 11                 jump @12568 if a2 != a5
      :                          @12565
184896: c9 68 09                 a2 = a1 - s1
184899: 01                       fallthrough
      :                          @12566
184900: 82 7a                    a3 = u64 [a0]
184902: ab 8a f2                 jump @12564 if a3 != a1
      :                          @12567
184905: 7b 79                    u64 [a0] = a2
184907: 33 0b                    a4 = 0
184909: 01                       fallthrough
      :                          @12568
184910: 82 18 08 02              a1 = u64 [sp + 0x208]
184914: 51 08 2e                 jump @12575 if a1 == 0
      :                          @12569
184917: 56 28 00 10 2b           jump @12575 if a1 >u 4096
      :                          @12570
184922: 82 17 10 02              a0 = u64 [sp + 0x210]
184926: 97 88 04                 a1 = a1 << 0x4
184929: 33 09 c0 22 03           a2 = 0x322c0
184934: 95 99 00 00 01           a2 = a2 + 0x10000
184939: 01                       fallthrough
      :                          @12571
184940: 82 9a                    a3 = u64 [a2]
184942: c9 a9 0b                 a4 = a2 - a3
184945: ab 7b 0f                 jump @12575 if a4 != a0
      :                          @12572
184948: c9 8a 0b                 a4 = a3 - a1
184951: 01                       fallthrough
      :                          @12573
184952: 82 9c                    a5 = u64 [a2]
184954: ab ac f2                 jump @12571 if a5 != a3
      :                          @12574
184957: 7b 9b                    u64 [a2] = a4
184959: 01                       fallthrough
      :                          @12575
184960: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
184964: 82 12 60                 t0 = u64 [sp + 0x60]
184967: 82 13 70                 t1 = u64 [sp + 0x70]
184970: 82 14 58                 t2 = u64 [sp + 0x58]
184973: 82 16 48                 s1 = u64 [sp + 0x48]
184976: 51 07 2c                 jump @12582 if a0 == 0
      :                          @12576
184979: 56 27 00 10 29           jump @12582 if a0 >u 4096
      :                          @12577
184984: 97 77 04                 a0 = a0 << 0x4
184987: 33 08 c0 22 03           a1 = 0x322c0
184992: 95 88 00 00 01           a1 = a1 + 0x10000
184997: 01                       fallthrough
      :                          @12578
184998: 82 89                    a2 = u64 [a1]
185000: c9 98 0a                 a3 = a1 - a2
185003: ab 6a 11                 jump @12582 if a3 != s1
      :                          @12579
185006: c9 79 0a                 a3 = a2 - a0
185009: 01                       fallthrough
      :                          @12580
185010: 82 8b                    a4 = u64 [a1]
185012: ab 9b f2                 jump @12578 if a4 != a2
      :                          @12581
185015: 7b 8a                    u64 [a1] = a3
185017: 33 0c                    a5 = 0
185019: 01                       fallthrough
      :                          @12582
185020: 82 17 20 01              a0 = u64 [sp + 0x120]
185024: 51 07 2c                 jump @12589 if a0 == 0
      :                          @12583
185027: 56 27 00 10 29           jump @12589 if a0 >u 4096
      :                          @12584
185032: 97 77 04                 a0 = a0 << 0x4
185035: 33 08 c0 22 03           a1 = 0x322c0
185040: 95 88 00 00 01           a1 = a1 + 0x10000
185045: 01                       fallthrough
      :                          @12585
185046: 82 89                    a2 = u64 [a1]
185048: c9 98 0a                 a3 = a1 - a2
185051: ab 4a 11                 jump @12589 if a3 != t2
      :                          @12586
185054: c9 79 0a                 a3 = a2 - a0
185057: 01                       fallthrough
      :                          @12587
185058: 82 8b                    a4 = u64 [a1]
185060: ab 9b f2                 jump @12585 if a4 != a2
      :                          @12588
185063: 7b 8a                    u64 [a1] = a3
185065: 33 0c                    a5 = 0
185067: 01                       fallthrough
      :                          @12589
185068: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
185072: 51 07 2c                 jump @12596 if a0 == 0
      :                          @12590
185075: 56 27 00 10 29           jump @12596 if a0 >u 4096
      :                          @12591
185080: 97 77 04                 a0 = a0 << 0x4
185083: 33 08 c0 22 03           a1 = 0x322c0
185088: 95 88 00 00 01           a1 = a1 + 0x10000
185093: 01                       fallthrough
      :                          @12592
185094: 82 89                    a2 = u64 [a1]
185096: c9 98 0a                 a3 = a1 - a2
185099: ab 3a 11                 jump @12596 if a3 != t1
      :                          @12593
185102: c9 79 0a                 a3 = a2 - a0
185105: 01                       fallthrough
      :                          @12594
185106: 82 8b                    a4 = u64 [a1]
185108: ab 9b f2                 jump @12592 if a4 != a2
      :                          @12595
185111: 7b 8a                    u64 [a1] = a3
185113: 33 0c                    a5 = 0
185115: 01                       fallthrough
      :                          @12596
185116: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
185120: 51 07 a6 0e              jump @12856 if a0 == 0
      :                          @12597
185124: 56 27 00 10 a2 0e        jump @12856 if a0 >u 4096
      :                          @12598
185130: 97 77 04                 a0 = a0 << 0x4
185133: 33 08 c0 22 03           a1 = 0x322c0
185138: 95 88 00 00 01           a1 = a1 + 0x10000
185143: 01                       fallthrough
      :                          @12599
185144: 82 89                    a2 = u64 [a1]
185146: c9 98 0a                 a3 = a1 - a2
185149: ab 2a 89 0e              jump @12856 if a3 != t0
      :                          @12600
185153: c9 79 0a                 a3 = a2 - a0
185156: 01                       fallthrough
      :                          @12601
185157: 82 8b                    a4 = u64 [a1]
185159: ab 9b f1                 jump @12599 if a4 != a2
      :                          @12602
185162: 7b 8a                    u64 [a1] = a3
185164: 33 0c                    a5 = 0
185166: 01                       fallthrough
      :                          @12603
185167: ab 9b e9                 jump @12599 if a4 != a2
      :                          @12604
185170: 28 74 0e                 jump @12856
      :                          @12605
185173: 95 17 e0 01              a0 = sp + 0x1e0
185177: 7b 1b 70                 u64 [sp + 0x70] = a4
185180: 64 b8                    a1 = a4
185182: 50 20 10 0b 20 8c fe     ra = 2832, jump @7165
      :                          @12606 [@dyn 1416]
185189: 95 17 08 02              a0 = sp + 0x208
185193: 95 18 e0 01              a1 = sp + 0x1e0
185197: 50 20 12 0b 1b 92 fe     ra = 2834, jump @7273
      :                          @12607 [@dyn 1417]
185204: 82 18 18 02              a1 = u64 [sp + 0x218]
185208: 82 17 10 02              a0 = u64 [sp + 0x210]
185212: 33 09 18                 a2 = 0x18
185215: ca 98 08                 a1 = a1 * a2
185218: c8 78 08                 a1 = a1 + a0
185221: 50 20 14 0b 4b 9f fd     ra = 2836, jump @2137
      :                          @12608 [@dyn 1418]
185228: 98 77 01                 a0 = a0 >> 0x1
185231: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
185235: 95 17 b0 01              a0 = sp + 0x1b0
185239: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
185243: 33 07 28 0c              a0 = 0xc28
185247: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
185251: 33 07 78 16 01           a0 = 0x11678
185256: 7b 17 90 02              u64 [sp + 0x290] = a0
185260: 49 21 98 02 01           u64 [sp + 664] = 0x1
185265: 49 21 b0 02              u64 [sp + 688] = 0
185269: 95 18 c8 01              a1 = sp + 0x1c8
185273: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
185277: 49 21 a8 02 01           u64 [sp + 680] = 0x1
185282: 95 17 38 02              a0 = sp + 0x238
185286: 95 18 90 02              a1 = sp + 0x290
185290: 50 20 16 0b 75 7b fd     ra = 2838, jump @1491
      :                          @12609 [@dyn 1419]
185297: 82 1a 40 02              a3 = u64 [sp + 0x240]
185301: 7b 1a 60                 u64 [sp + 0x60] = a3
185304: 82 1b 48 02              a4 = u64 [sp + 0x248]
185308: 82 16 38 02              s1 = u64 [sp + 0x238]
185312: 33 07 02                 a0 = 0x2
185315: 33 08                    a1 = 0
185317: 33 09                    a2 = 0
185319: 33 00 18 0b              ra = 0xb18
185323: 0a 64                    ecalli 100 // 'log'
185325: 01                       fallthrough
      :                          @12610 [@dyn 1420]
185326: 82 1c 60                 a5 = u64 [sp + 0x60]
185329: 82 17 68                 a0 = u64 [sp + 0x68]
185332: c8 67 07                 a0 = a0 + s1
185335: 33 08 00 00 ff           a1 = 0xffffffffffff0000
185340: ac 87 2f                 jump @12616 if a0 <u a1
      :                          @12611
185343: 33 07 c0 22 03           a0 = 0x322c0
185348: 95 77 00 00 01           a0 = a0 + 0x10000
185353: 01                       fallthrough
      :                          @12612
185354: 82 78                    a1 = u64 [a0]
185356: c9 87 09                 a2 = a0 - a1
185359: ab c9 1c                 jump @12616 if a2 != a5
      :                          @12613
185362: c9 68 09                 a2 = a1 - s1
185365: 01                       fallthrough
      :                          @12614
185366: 82 7a                    a3 = u64 [a0]
185368: ab 8a f2                 jump @12612 if a3 != a1
      :                          @12615
185371: 7b 79                    u64 [a0] = a2
185373: 33 0b                    a4 = 0
185375: 95 17 08 02              a0 = sp + 0x208
185379: 33 00 1a 0b              ra = 0xb1a
185383: 28 94 37 fd              jump @209
      :                          @12616
185387: 95 17 08 02              a0 = sp + 0x208
185391: 50 20 1a 0b 8c 37 fd     ra = 2842, jump @209
      :                          @12617 [@dyn 1421]
185398: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
185402: 51 08 2e                 jump @12624 if a1 == 0
      :                          @12618
185405: 56 28 00 10 2b           jump @12624 if a1 >u 4096
      :                          @12619
185410: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
185414: 97 88 04                 a1 = a1 << 0x4
185417: 33 09 c0 22 03           a2 = 0x322c0
185422: 95 99 00 00 01           a2 = a2 + 0x10000
185427: 01                       fallthrough
      :                          @12620
185428: 82 9a                    a3 = u64 [a2]
185430: c9 a9 0b                 a4 = a2 - a3
185433: ab 7b 0f                 jump @12624 if a4 != a0
      :                          @12621
185436: c9 8a 0b                 a4 = a3 - a1
185439: 01                       fallthrough
      :                          @12622
185440: 82 9c                    a5 = u64 [a2]
185442: ab ac f2                 jump @12620 if a5 != a3
      :                          @12623
185445: 7b 9b                    u64 [a2] = a4
185447: 01                       fallthrough
      :                          @12624
185448: 82 17 20 01              a0 = u64 [sp + 0x120]
185452: 82 16 70                 s1 = u64 [sp + 0x70]
185455: 51 07 57 0d              jump @12856 if a0 == 0
      :                          @12625
185459: 56 27 00 10 53 0d        jump @12856 if a0 >u 4096
      :                          @12626
185465: 97 77 04                 a0 = a0 << 0x4
185468: 33 08 c0 22 03           a1 = 0x322c0
185473: 95 88 00 00 01           a1 = a1 + 0x10000
185478: 01                       fallthrough
      :                          @12627
185479: 82 89                    a2 = u64 [a1]
185481: c9 98 0a                 a3 = a1 - a2
185484: ab 6a 3a 0d              jump @12856 if a3 != s1
      :                          @12628
185488: c9 79 0a                 a3 = a2 - a0
185491: 01                       fallthrough
      :                          @12629
185492: 82 8b                    a4 = u64 [a1]
185494: ab 9b f1                 jump @12627 if a4 != a2
      :                          @12630
185497: 7b 8a                    u64 [a1] = a3
185499: 33 0c                    a5 = 0
185501: 01                       fallthrough
      :                          @12631
185502: ab 9b e9                 jump @12627 if a4 != a2
      :                          @12632
185505: 28 25 0d                 jump @12856
      :                          @12633
185508: 3a 08 78 12 03           a1 = u64 [0x31278]
185513: 97 89 0d                 a2 = a1 << 0xd
185516: d3 98 08                 a1 = a1 ^ a2
185519: 98 89 07                 a2 = a1 >> 0x7
185522: d3 98 08                 a1 = a1 ^ a2
185525: 97 89 11                 a2 = a1 << 0x11
185528: d3 98 08                 a1 = a1 ^ a2
185531: 3e 08 78 12 03           u64 [0x31278] = a1
185536: ca 38 07                 a0 = a1 * t1
185539: 64 29                    a2 = t0
185541: cd 27 07                 a0 = a0 %u t0
185544: 7b 17 48                 u64 [sp + 0x48] = a0
185547: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
185551: 64 68                    a1 = s1
185553: 7b 1a 58                 u64 [sp + 0x58] = a3
185556: 7b 1c 60                 u64 [sp + 0x60] = a5
185559: 33 00 1c 0b              ra = 0xb1c
185563: 95 11 c0                 sp = sp + 0xffffffffffffffc0
185566: 7b 10 38                 u64 [sp + 0x38] = ra
185569: 7b 15 30                 u64 [sp + 0x30] = s0
185572: 7b 16 28                 u64 [sp + 0x28] = s1
185575: 33 0c 78 12 03           a5 = 0x31278
185580: 3a 06 78 12 03           s1 = u64 [0x31278]
185585: 7b 1b 08                 u64 [sp + 0x8] = a4
185588: 64 95                    s0 = a2
185590: 7b 17                    u64 [sp] = a0
185592: 97 67 0d                 a0 = s1 << 0xd
185595: d3 67 07                 a0 = a0 ^ s1
185598: 98 79 07                 a2 = a0 >> 0x7
185601: d3 97 07                 a0 = a0 ^ a2
185604: 97 79 11                 a2 = a0 << 0x11
185607: d3 97 07                 a0 = a0 ^ a2
185610: 3a 09 58 11 03           a2 = u64 [0x31158]
185615: 3e 07 78 12 03           u64 [0x31278] = a0
185620: 95 5b ff                 a4 = s0 + 0xffffffffffffffff
185623: ca 97 07                 a0 = a0 * a2
185626: cd b7 09                 a2 = a0 %u a4
185629: 95 99 01                 a2 = a2 + 0x1
185632: 33 06 01                 s1 = 0x1
185635: 64 97                    a0 = a2
185637: 28 f3 b6 fe              jump @7973
      :                          @12634 [@dyn 1422]
185641: 64 79                    a2 = a0
185643: 64 8a                    a3 = a1
185645: 7b 17 20 01              u64 [sp + 0x120] = a0
185649: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
185653: 82 17 48                 a0 = u64 [sp + 0x48]
185656: 64 98                    a1 = a2
185658: 64 a9                    a2 = a3
185660: 64 6a                    a3 = s1
185662: 82 1b 70                 a4 = u64 [sp + 0x70]
185665: 82 1c 58                 a5 = u64 [sp + 0x58]
185668: 82 14 60                 t2 = u64 [sp + 0x60]
185671: 50 20 1e 0b 46 b7 fe     ra = 2846, jump @7982
      :                          @12635 [@dyn 1423]
185678: 78 17 b0 01              u8 [sp + 0x1b0] = a0
185682: 95 17 c8 01              a0 = sp + 0x1c8
185686: 7b 17 90 02              u64 [sp + 0x290] = a0
185690: 33 07 28 0c              a0 = 0xc28
185694: 7b 17 98 02              u64 [sp + 0x298] = a0
185698: 95 18 20 01              a1 = sp + 0x120
185702: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
185706: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
185710: 95 18 e0 01              a1 = sp + 0x1e0
185714: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
185718: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
185722: 95 17 b0 01              a0 = sp + 0x1b0
185726: 7b 17 c0 02              u64 [sp + 0x2c0] = a0
185730: 33 07 80 0c              a0 = 0xc80
185734: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
185738: 33 07 50 1a 01           a0 = 0x11a50
185743: 7b 17 38 02              u64 [sp + 0x238] = a0
185747: 49 21 40 02 04           u64 [sp + 576] = 0x4
185752: 49 21 58 02              u64 [sp + 600] = 0
185756: 95 18 90 02              a1 = sp + 0x290
185760: 7b 18 48 02              u64 [sp + 0x248] = a1
185764: 49 21 50 02 04           u64 [sp + 592] = 0x4
185769: 95 17 08 02              a0 = sp + 0x208
185773: 95 18 38 02              a1 = sp + 0x238
185777: 50 20 20 0b 8e 79 fd     ra = 2848, jump @1491
      :                          @12636 [@dyn 1424]
185784: 82 16 10 02              s1 = u64 [sp + 0x210]
185788: 82 1b 18 02              a4 = u64 [sp + 0x218]
185792: 82 17 08 02              a0 = u64 [sp + 0x208]
185796: 7b 17 70                 u64 [sp + 0x70] = a0
185799: 33 07 02                 a0 = 0x2
185802: 33 08                    a1 = 0
185804: 33 09                    a2 = 0
185806: 64 6a                    a3 = s1
185808: 33 00 22 0b              ra = 0xb22
185812: 0a 64                    ecalli 100 // 'log'
185814: 01                       fallthrough
      :                          @12637 [@dyn 1425]
185815: 82 1c 70                 a5 = u64 [sp + 0x70]
185818: 82 17 68                 a0 = u64 [sp + 0x68]
185821: c8 c7 07                 a0 = a0 + a5
185824: 53 37 00 00 ff e6 0b     jump @12856 if a0 <u 4294901760
      :                          @12638
185831: 33 07 c0 22 03           a0 = 0x322c0
185836: 95 77 00 00 01           a0 = a0 + 0x10000
185841: 01                       fallthrough
      :                          @12639
185842: 82 78                    a1 = u64 [a0]
185844: c9 87 09                 a2 = a0 - a1
185847: ab 69 cf 0b              jump @12856 if a2 != s1
      :                          @12640
185851: c9 c8 09                 a2 = a1 - a5
185854: 01                       fallthrough
      :                          @12641
185855: 82 7a                    a3 = u64 [a0]
185857: ab 8a f1                 jump @12639 if a3 != a1
      :                          @12642
185860: 7b 79                    u64 [a0] = a2
185862: 33 0b                    a4 = 0
185864: 01                       fallthrough
      :                          @12643
185865: ab 8a e9                 jump @12639 if a3 != a1
      :                          @12644
185868: 28 ba 0b                 jump @12856
      :                          @12645
185871: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
185875: 95 17 90 02              a0 = sp + 0x290
185879: 95 16 90 02              s1 = sp + 0x290
185883: 50 20 24 0b aa 88 fe     ra = 2852, jump @7154
      :                          @12646 [@dyn 1426]
185890: 82 17 90 02              a0 = u64 [sp + 0x290]
185894: 82 18 98 02              a1 = u64 [sp + 0x298]
185898: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
185902: 82 17 a0 02              a0 = u64 [sp + 0x2a0]
185906: 82 19 a8 02              a2 = u64 [sp + 0x2a8]
185910: 82 1a b0 02              a3 = u64 [sp + 0x2b0]
185914: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
185918: 7b 17 20 01              u64 [sp + 0x120] = a0
185922: 7b 19 28 01              u64 [sp + 0x128] = a2
185926: 7b 1a b0 01              u64 [sp + 0x1b0] = a3
185930: 95 17 e0 01              a0 = sp + 0x1e0
185934: 7b 17 90 02              u64 [sp + 0x290] = a0
185938: 33 07 08 02              a0 = 0x208
185942: 7b 17 98 02              u64 [sp + 0x298] = a0
185946: 95 17 c8 01              a0 = sp + 0x1c8
185950: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
185954: 33 07 8e 01              a0 = 0x18e
185958: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
185962: 95 18 20 01              a1 = sp + 0x120
185966: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
185970: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
185974: 95 17 b0 01              a0 = sp + 0x1b0
185978: 7b 17 c0 02              u64 [sp + 0x2c0] = a0
185982: 33 07 28 0c              a0 = 0xc28
185986: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
185990: 33 07 e8 1b 01           a0 = 0x11be8
185995: 7b 17 38 02              u64 [sp + 0x238] = a0
185999: 49 21 40 02 04           u64 [sp + 576] = 0x4
186004: 49 21 58 02              u64 [sp + 600] = 0
186008: 7b 16 48 02              u64 [sp + 0x248] = s1
186012: 49 21 50 02 04           u64 [sp + 592] = 0x4
186017: 95 17 08 02              a0 = sp + 0x208
186021: 95 18 38 02              a1 = sp + 0x238
186025: 50 20 26 0b 96 78 fd     ra = 2854, jump @1491
      :                          @12647 [@dyn 1427]
186032: 82 16 10 02              s1 = u64 [sp + 0x210]
186036: 82 1b 18 02              a4 = u64 [sp + 0x218]
186040: 82 17 08 02              a0 = u64 [sp + 0x208]
186044: 7b 17 70                 u64 [sp + 0x70] = a0
186047: 33 07 02                 a0 = 0x2
186050: 33 08                    a1 = 0
186052: 33 09                    a2 = 0
186054: 64 6a                    a3 = s1
186056: 33 00 28 0b              ra = 0xb28
186060: 0a 64                    ecalli 100 // 'log'
186062: 01                       fallthrough
      :                          @12648 [@dyn 1428]
186063: 82 1c 70                 a5 = u64 [sp + 0x70]
186066: 82 17 68                 a0 = u64 [sp + 0x68]
186069: c8 c7 07                 a0 = a0 + a5
186072: 53 37 00 00 ff 25        jump @12654 if a0 <u 4294901760
      :                          @12649
186078: 33 07 c0 22 03           a0 = 0x322c0
186083: 95 77 00 00 01           a0 = a0 + 0x10000
186088: 01                       fallthrough
      :                          @12650
186089: 82 78                    a1 = u64 [a0]
186091: c9 87 09                 a2 = a0 - a1
186094: ab 69 0f                 jump @12654 if a2 != s1
      :                          @12651
186097: c9 c8 09                 a2 = a1 - a5
186100: 01                       fallthrough
      :                          @12652
186101: 82 7a                    a3 = u64 [a0]
186103: ab 8a f2                 jump @12650 if a3 != a1
      :                          @12653
186106: 7b 79                    u64 [a0] = a2
186108: 01                       fallthrough
      :                          @12654
186109: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
186113: 51 08 c5 0a              jump @12856 if a1 == 0
      :                          @12655
186117: 56 28 00 10 c1 0a        jump @12856 if a1 >u 4096
      :                          @12656
186123: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
186127: 97 88 04                 a1 = a1 << 0x4
186130: 33 09 c0 22 03           a2 = 0x322c0
186135: 95 99 00 00 01           a2 = a2 + 0x10000
186140: 01                       fallthrough
      :                          @12657
186141: 82 9a                    a3 = u64 [a2]
186143: c9 a9 0b                 a4 = a2 - a3
186146: ab 7b a4 0a              jump @12856 if a4 != a0
      :                          @12658
186150: c9 8a 0b                 a4 = a3 - a1
186153: 01                       fallthrough
      :                          @12659
186154: 82 9c                    a5 = u64 [a2]
186156: ab ac f1                 jump @12657 if a5 != a3
      :                          @12660
186159: 7b 9b                    u64 [a2] = a4
186161: 33 06                    s1 = 0
186163: 01                       fallthrough
      :                          @12661
186164: ab ac e9                 jump @12657 if a5 != a3
      :                          @12662
186167: 28 8f 0a                 jump @12856
      :                          @12663
186170: 7b 19 20 01              u64 [sp + 0x120] = a2
186174: 33 00 2a 0b              ra = 0xb2a
186178: 95 11 d8                 sp = sp + 0xffffffffffffffd8
186181: 7b 10 20                 u64 [sp + 0x20] = ra
186184: 7b 15 18                 u64 [sp + 0x18] = s0
186187: 64 85                    s0 = a1
186189: 64 78                    a1 = a0
186191: 64 17                    a0 = sp
186193: 64 59                    a2 = s0
186195: 33 00 9a 02              ra = 0x29a
186199: 28 cc b3 fd              jump @2409
      :                          @12664 [@dyn 1429]
186203: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
186207: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
186211: 95 17 10 01              a0 = sp + 0x110
186215: 7b 17 90 02              u64 [sp + 0x290] = a0
186219: 33 07 28 0c              a0 = 0xc28
186223: 7b 17 98 02              u64 [sp + 0x298] = a0
186227: 95 18 b0 01              a1 = sp + 0x1b0
186231: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
186235: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
186239: 95 18 c8 01              a1 = sp + 0x1c8
186243: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
186247: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
186251: 95 18 20 01              a1 = sp + 0x120
186255: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
186259: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
186263: 95 17 e0 01              a0 = sp + 0x1e0
186267: 7b 17 d0 02              u64 [sp + 0x2d0] = a0
186271: 33 07 5e 02              a0 = 0x25e
186275: 7b 17 d8 02              u64 [sp + 0x2d8] = a0
186279: 33 07 b0 25 01           a0 = 0x125b0
186284: 7b 17 38 02              u64 [sp + 0x238] = a0
186288: 49 21 40 02 05           u64 [sp + 576] = 0x5
186293: 49 21 58 02              u64 [sp + 600] = 0
186297: 95 18 90 02              a1 = sp + 0x290
186301: 7b 18 48 02              u64 [sp + 0x248] = a1
186305: 49 21 50 02 05           u64 [sp + 592] = 0x5
186310: 95 17 08 02              a0 = sp + 0x208
186314: 95 18 38 02              a1 = sp + 0x238
186318: 50 20 2c 0b 71 77 fd     ra = 2860, jump @1491
      :                          @12665 [@dyn 1430]
186325: 82 16 10 02              s1 = u64 [sp + 0x210]
186329: 82 1b 18 02              a4 = u64 [sp + 0x218]
186333: 82 17 08 02              a0 = u64 [sp + 0x208]
186337: 7b 17 70                 u64 [sp + 0x70] = a0
186340: 33 07 02                 a0 = 0x2
186343: 33 08                    a1 = 0
186345: 33 09                    a2 = 0
186347: 64 6a                    a3 = s1
186349: 33 00 2e 0b              ra = 0xb2e
186353: 0a 64                    ecalli 100 // 'log'
186355: 01                       fallthrough
      :                          @12666 [@dyn 1431]
186356: 82 1c 70                 a5 = u64 [sp + 0x70]
186359: 82 17 68                 a0 = u64 [sp + 0x68]
186362: c8 c7 07                 a0 = a0 + a5
186365: 53 37 00 00 ff c9 09     jump @12856 if a0 <u 4294901760
      :                          @12667
186372: 33 07 c0 22 03           a0 = 0x322c0
186377: 95 77 00 00 01           a0 = a0 + 0x10000
186382: 01                       fallthrough
      :                          @12668
186383: 82 78                    a1 = u64 [a0]
186385: c9 87 09                 a2 = a0 - a1
186388: ab 69 b2 09              jump @12856 if a2 != s1
      :                          @12669
186392: c9 c8 09                 a2 = a1 - a5
186395: 01                       fallthrough
      :                          @12670
186396: 82 7a                    a3 = u64 [a0]
186398: ab 8a f1                 jump @12668 if a3 != a1
      :                          @12671
186401: 7b 79                    u64 [a0] = a2
186403: 33 0b                    a4 = 0
186405: 01                       fallthrough
      :                          @12672
186406: ab 8a e9                 jump @12668 if a3 != a1
      :                          @12673
186409: 28 9d 09                 jump @12856
      :                          @12674
186412: 95 17 08 02              a0 = sp + 0x208
186416: 95 18 e0 01              a1 = sp + 0x1e0
186420: 95 16 08 02              s1 = sp + 0x208
186424: 33 00 30 0b              ra = 0xb30
186428: 95 11 a0                 sp = sp + 0xffffffffffffffa0
186431: 7b 10 58                 u64 [sp + 0x58] = ra
186434: 7b 15 50                 u64 [sp + 0x50] = s0
186437: 7b 16 48                 u64 [sp + 0x48] = s1
186440: 64 85                    s0 = a1
186442: 33 09 c0 22 03           a2 = 0x322c0
186447: 33 06 00 00 01           s1 = 0x10000
186452: c8 69 09                 a2 = a2 + s1
186455: 28 df 59 fe              jump @6149
      :                          @12675 [@dyn 1432]
186459: 7b 16 20 01              u64 [sp + 0x120] = s1
186463: 33 07 20 02              a0 = 0x220
186467: 7b 17 28 01              u64 [sp + 0x128] = a0
186471: 33 07 00 2e 01           a0 = 0x12e00
186476: 7b 17 90 02              u64 [sp + 0x290] = a0
186480: 49 21 98 02 01           u64 [sp + 664] = 0x1
186485: 49 21 b0 02              u64 [sp + 688] = 0
186489: 95 18 20 01              a1 = sp + 0x120
186493: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
186497: 49 21 a8 02 01           u64 [sp + 680] = 0x1
186502: 95 17 38 02              a0 = sp + 0x238
186506: 95 18 90 02              a1 = sp + 0x290
186510: 50 20 32 0b b1 76 fd     ra = 2866, jump @1491
      :                          @12676 [@dyn 1433]
186517: 82 16 40 02              s1 = u64 [sp + 0x240]
186521: 82 1b 48 02              a4 = u64 [sp + 0x248]
186525: 82 17 38 02              a0 = u64 [sp + 0x238]
186529: 7b 17 70                 u64 [sp + 0x70] = a0
186532: 33 07 02                 a0 = 0x2
186535: 33 08                    a1 = 0
186537: 33 09                    a2 = 0
186539: 64 6a                    a3 = s1
186541: 33 00 34 0b              ra = 0xb34
186545: 0a 64                    ecalli 100 // 'log'
186547: 01                       fallthrough
      :                          @12677 [@dyn 1434]
186548: 82 1c 70                 a5 = u64 [sp + 0x70]
186551: 82 17 68                 a0 = u64 [sp + 0x68]
186554: c8 c7 07                 a0 = a0 + a5
186557: 53 37 00 00 ff 27        jump @12683 if a0 <u 4294901760
      :                          @12678
186563: 33 07 c0 22 03           a0 = 0x322c0
186568: 95 77 00 00 01           a0 = a0 + 0x10000
186573: 01                       fallthrough
      :                          @12679
186574: 82 78                    a1 = u64 [a0]
186576: c9 87 09                 a2 = a0 - a1
186579: ab 69 11                 jump @12683 if a2 != s1
      :                          @12680
186582: c9 c8 09                 a2 = a1 - a5
186585: 01                       fallthrough
      :                          @12681
186586: 82 7a                    a3 = u64 [a0]
186588: ab 8a f2                 jump @12679 if a3 != a1
      :                          @12682
186591: 7b 79                    u64 [a0] = a2
186593: 33 0b                    a4 = 0
186595: 01                       fallthrough
      :                          @12683
186596: 82 18 08 02              a1 = u64 [sp + 0x208]
186600: 51 08 a7 05              jump @12791 if a1 == 0
      :                          @12684
186604: 56 28 00 20 a3 05        jump @12791 if a1 >u 8192
      :                          @12685
186610: 82 17 10 02              a0 = u64 [sp + 0x210]
186614: 97 88 03                 a1 = a1 << 0x3
186617: 33 09 c0 22 03           a2 = 0x322c0
186622: 95 99 00 00 01           a2 = a2 + 0x10000
186627: 01                       fallthrough
      :                          @12686
186628: 82 9a                    a3 = u64 [a2]
186630: c9 a9 0b                 a4 = a2 - a3
186633: ab 7b 86 05              jump @12791 if a4 != a0
      :                          @12687
186637: c9 8a 0b                 a4 = a3 - a1
186640: 01                       fallthrough
      :                          @12688
186641: 82 9c                    a5 = u64 [a2]
186643: ab ac f1                 jump @12686 if a5 != a3
      :                          @12689
186646: 7b 9b                    u64 [a2] = a4
186648: 33 06                    s1 = 0
186650: 01                       fallthrough
      :                          @12690
186651: ab ac e9                 jump @12686 if a5 != a3
      :                          @12691
186654: 28 71 05                 jump @12791
      :                          @12692 [@dyn 1435]
186657: 95 17 7f                 a0 = sp + 0x7f
186660: 7b 17 08 02              u64 [sp + 0x208] = a0
186664: 33 07 5c 0c              a0 = 0xc5c
186668: 7b 17 10 02              u64 [sp + 0x210] = a0
186672: 33 07 10 2e 01           a0 = 0x12e10
186677: 7b 17 90 02              u64 [sp + 0x290] = a0
186681: 49 21 98 02 01           u64 [sp + 664] = 0x1
186686: 49 21 b0 02              u64 [sp + 688] = 0
186690: 95 18 08 02              a1 = sp + 0x208
186694: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
186698: 49 21 a8 02 01           u64 [sp + 680] = 0x1
186703: 95 17 38 02              a0 = sp + 0x238
186707: 95 18 90 02              a1 = sp + 0x290
186711: 50 20 38 0b e8 75 fd     ra = 2872, jump @1491
      :                          @12693 [@dyn 1436]
186718: 82 16 40 02              s1 = u64 [sp + 0x240]
186722: 82 1b 48 02              a4 = u64 [sp + 0x248]
186726: 82 17 38 02              a0 = u64 [sp + 0x238]
186730: 7b 17 70                 u64 [sp + 0x70] = a0
186733: 33 07 02                 a0 = 0x2
186736: 33 08                    a1 = 0
186738: 33 09                    a2 = 0
186740: 64 6a                    a3 = s1
186742: 33 00 3a 0b              ra = 0xb3a
186746: 0a 64                    ecalli 100 // 'log'
186748: 01                       fallthrough
      :                          @12694 [@dyn 1437]
186749: 82 1c 70                 a5 = u64 [sp + 0x70]
186752: 82 17 68                 a0 = u64 [sp + 0x68]
186755: c8 c7 07                 a0 = a0 + a5
186758: 53 37 00 00 ff 40 08     jump @12856 if a0 <u 4294901760
      :                          @12695
186765: 33 07 c0 22 03           a0 = 0x322c0
186770: 95 77 00 00 01           a0 = a0 + 0x10000
186775: 01                       fallthrough
      :                          @12696
186776: 82 78                    a1 = u64 [a0]
186778: c9 87 09                 a2 = a0 - a1
186781: ab 69 29 08              jump @12856 if a2 != s1
      :                          @12697
186785: c9 c8 09                 a2 = a1 - a5
186788: 01                       fallthrough
      :                          @12698
186789: 82 7a                    a3 = u64 [a0]
186791: ab 8a f1                 jump @12696 if a3 != a1
      :                          @12699
186794: 7b 79                    u64 [a0] = a2
186796: 33 0b                    a4 = 0
186798: 01                       fallthrough
      :                          @12700
186799: ab 8a e9                 jump @12696 if a3 != a1
      :                          @12701
186802: 28 14 08                 jump @12856
      :                          @12702
186805: 95 17 08 02              a0 = sp + 0x208
186809: 95 18 e0 01              a1 = sp + 0x1e0
186813: 95 16 08 02              s1 = sp + 0x208
186817: 33 00 3c 0b              ra = 0xb3c
186821: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
186825: 7b 10 00 01              u64 [sp + 0x100] = ra
186829: 7b 15 f8 00              u64 [sp + 0xf8] = s0
186833: 7b 16 f0 00              u64 [sp + 0xf0] = s1
186837: 7b 18 98 00              u64 [sp + 0x98] = a1
186841: 49 21 a0 00              u64 [sp + 160] = 0
186845: 49 21 a8 00 08           u64 [sp + 168] = 0x8
186850: 49 21 b0 00              u64 [sp + 176] = 0
186854: 49 21 b8 00              u64 [sp + 184] = 0
186858: 49 21 c0 00 08           u64 [sp + 192] = 0x8
186863: 49 21 c8 00              u64 [sp + 200] = 0
186867: 33 03 c0 22 03           t1 = 0x322c0
186872: 33 02 00 00 01           t0 = 0x10000
186877: c8 23 09                 a2 = t1 + t0
186880: 28 7e a7 fe              jump @7767
      :                          @12703 [@dyn 1438]
186884: 7b 16 20 01              u64 [sp + 0x120] = s1
186888: 33 07 20 02              a0 = 0x220
186892: 7b 17 28 01              u64 [sp + 0x128] = a0
186896: 33 07 58 19 01           a0 = 0x11958
186901: 7b 17 90 02              u64 [sp + 0x290] = a0
186905: 49 21 98 02 01           u64 [sp + 664] = 0x1
186910: 49 21 b0 02              u64 [sp + 688] = 0
186914: 95 18 20 01              a1 = sp + 0x120
186918: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
186922: 49 21 a8 02 01           u64 [sp + 680] = 0x1
186927: 95 17 38 02              a0 = sp + 0x238
186931: 95 18 90 02              a1 = sp + 0x290
186935: 50 20 3e 0b 08 75 fd     ra = 2878, jump @1491
      :                          @12704 [@dyn 1439]
186942: 82 16 40 02              s1 = u64 [sp + 0x240]
186946: 82 1b 48 02              a4 = u64 [sp + 0x248]
186950: 82 17 38 02              a0 = u64 [sp + 0x238]
186954: 7b 17 70                 u64 [sp + 0x70] = a0
186957: 33 07 02                 a0 = 0x2
186960: 33 08                    a1 = 0
186962: 33 09                    a2 = 0
186964: 64 6a                    a3 = s1
186966: 33 00 40 0b              ra = 0xb40
186970: 0a 64                    ecalli 100 // 'log'
186972: 01                       fallthrough
      :                          @12705 [@dyn 1440]
186973: 82 1c 70                 a5 = u64 [sp + 0x70]
186976: 82 17 68                 a0 = u64 [sp + 0x68]
186979: c8 c7 07                 a0 = a0 + a5
186982: 53 37 00 00 ff 27        jump @12711 if a0 <u 4294901760
      :                          @12706
186988: 33 07 c0 22 03           a0 = 0x322c0
186993: 95 77 00 00 01           a0 = a0 + 0x10000
186998: 01                       fallthrough
      :                          @12707
186999: 82 78                    a1 = u64 [a0]
187001: c9 87 09                 a2 = a0 - a1
187004: ab 69 11                 jump @12711 if a2 != s1
      :                          @12708
187007: c9 c8 09                 a2 = a1 - a5
187010: 01                       fallthrough
      :                          @12709
187011: 82 7a                    a3 = u64 [a0]
187013: ab 8a f2                 jump @12707 if a3 != a1
      :                          @12710
187016: 7b 79                    u64 [a0] = a2
187018: 33 0b                    a4 = 0
187020: 01                       fallthrough
      :                          @12711
187021: 82 18 08 02              a1 = u64 [sp + 0x208]
187025: 51 08 3b                 jump @12718 if a1 == 0
      :                          @12712
187028: 56 28 00 20 38           jump @12718 if a1 >u 8192
      :                          @12713
187033: 82 17 10 02              a0 = u64 [sp + 0x210]
187037: 97 88 03                 a1 = a1 << 0x3
187040: 33 09 c0 22 03           a2 = 0x322c0
187045: 95 99 00 00 01           a2 = a2 + 0x10000
187050: 01                       fallthrough
      :                          @12714
187051: 82 9a                    a3 = u64 [a2]
187053: c9 a9 0b                 a4 = a2 - a3
187056: ab 7b 1c                 jump @12718 if a4 != a0
      :                          @12715
187059: c9 8a 0b                 a4 = a3 - a1
187062: 01                       fallthrough
      :                          @12716
187063: 82 9c                    a5 = u64 [a2]
187065: ab ac f2                 jump @12714 if a5 != a3
      :                          @12717
187068: 7b 9b                    u64 [a2] = a4
187070: 33 06                    s1 = 0
187072: 95 17 e0 01              a0 = sp + 0x1e0
187076: 33 00 42 0b              ra = 0xb42
187080: 28 33 32 fd              jump @249
      :                          @12718
187084: 95 17 e0 01              a0 = sp + 0x1e0
187088: 50 20 42 0b 2b 32 fd     ra = 2882, jump @249
      :                          @12719 [@dyn 1441]
187095: 28 ef 06                 jump @12856
      :                          @12720
187098: 95 17 20 01              a0 = sp + 0x120
187102: 33 00 44 0b              ra = 0xb44
187106: 95 11 f8                 sp = sp + 0xfffffffffffffff8
187109: 7b 15                    u64 [sp] = s0
187111: 33 03 c0 22 03           t1 = 0x322c0
187116: 33 02 00 00 01           t0 = 0x10000
187121: c8 23 04                 t2 = t1 + t0
187124: 28 36 a2 fd              jump @2278
      :                          @12721 [@dyn 1442]
187128: 95 17 e0 01              a0 = sp + 0x1e0
187132: 95 18 c8 01              a1 = sp + 0x1c8
187136: 95 19 20 01              a2 = sp + 0x120
187140: 95 16 e0 01              s1 = sp + 0x1e0
187144: 50 20 46 0b 35 92 fe     ra = 2886, jump @7401
      :                          @12722 [@dyn 1443]
187151: 95 17 20 01              a0 = sp + 0x120
187155: 7b 17 38 02              u64 [sp + 0x238] = a0
187159: 33 07 38 02              a0 = 0x238
187163: 7b 17 40 02              u64 [sp + 0x240] = a0
187167: 7b 16 48 02              u64 [sp + 0x248] = s1
187171: 7b 17 50 02              u64 [sp + 0x250] = a0
187175: 33 07 88 17 01           a0 = 0x11788
187180: 7b 17 90 02              u64 [sp + 0x290] = a0
187184: 49 21 98 02 02           u64 [sp + 664] = 0x2
187189: 49 21 b0 02              u64 [sp + 688] = 0
187193: 95 18 38 02              a1 = sp + 0x238
187197: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
187201: 49 21 a8 02 02           u64 [sp + 680] = 0x2
187206: 95 17 08 02              a0 = sp + 0x208
187210: 95 18 90 02              a1 = sp + 0x290
187214: 50 20 48 0b f1 73 fd     ra = 2888, jump @1491
      :                          @12723 [@dyn 1444]
187221: 82 16 10 02              s1 = u64 [sp + 0x210]
187225: 82 1b 18 02              a4 = u64 [sp + 0x218]
187229: 82 17 08 02              a0 = u64 [sp + 0x208]
187233: 7b 17 70                 u64 [sp + 0x70] = a0
187236: 33 07 02                 a0 = 0x2
187239: 33 08                    a1 = 0
187241: 33 09                    a2 = 0
187243: 64 6a                    a3 = s1
187245: 33 00 4a 0b              ra = 0xb4a
187249: 0a 64                    ecalli 100 // 'log'
187251: 01                       fallthrough
      :                          @12724 [@dyn 1445]
187252: 82 1c 70                 a5 = u64 [sp + 0x70]
187255: 82 17 68                 a0 = u64 [sp + 0x68]
187258: c8 c7 07                 a0 = a0 + a5
187261: 53 37 00 00 ff 27        jump @12730 if a0 <u 4294901760
      :                          @12725
187267: 33 07 c0 22 03           a0 = 0x322c0
187272: 95 77 00 00 01           a0 = a0 + 0x10000
187277: 01                       fallthrough
      :                          @12726
187278: 82 78                    a1 = u64 [a0]
187280: c9 87 09                 a2 = a0 - a1
187283: ab 69 11                 jump @12730 if a2 != s1
      :                          @12727
187286: c9 c8 09                 a2 = a1 - a5
187289: 01                       fallthrough
      :                          @12728
187290: 82 7a                    a3 = u64 [a0]
187292: ab 8a f2                 jump @12726 if a3 != a1
      :                          @12729
187295: 7b 79                    u64 [a0] = a2
187297: 33 0b                    a4 = 0
187299: 01                       fallthrough
      :                          @12730
187300: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
187304: 51 08 30                 jump @12737 if a1 == 0
      :                          @12731
187307: 56 28 00 20 2d           jump @12737 if a1 >u 8192
      :                          @12732
187312: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
187316: 97 88 03                 a1 = a1 << 0x3
187319: 33 09 c0 22 03           a2 = 0x322c0
187324: 95 99 00 00 01           a2 = a2 + 0x10000
187329: 01                       fallthrough
      :                          @12733
187330: 82 9a                    a3 = u64 [a2]
187332: c9 a9 0b                 a4 = a2 - a3
187335: ab 7b 11                 jump @12737 if a4 != a0
      :                          @12734
187338: c9 8a 0b                 a4 = a3 - a1
187341: 01                       fallthrough
      :                          @12735
187342: 82 9c                    a5 = u64 [a2]
187344: ab ac f2                 jump @12733 if a5 != a3
      :                          @12736
187347: 7b 9b                    u64 [a2] = a4
187349: 33 06                    s1 = 0
187351: 01                       fallthrough
      :                          @12737
187352: 82 18 20 01              a1 = u64 [sp + 0x120]
187356: 51 08 3b                 jump @12744 if a1 == 0
      :                          @12738
187359: 56 28 00 20 38           jump @12744 if a1 >u 8192
      :                          @12739
187364: 82 17 28 01              a0 = u64 [sp + 0x128]
187368: 97 88 03                 a1 = a1 << 0x3
187371: 33 09 c0 22 03           a2 = 0x322c0
187376: 95 99 00 00 01           a2 = a2 + 0x10000
187381: 01                       fallthrough
      :                          @12740
187382: 82 9a                    a3 = u64 [a2]
187384: c9 a9 0b                 a4 = a2 - a3
187387: ab 7b 1c                 jump @12744 if a4 != a0
      :                          @12741
187390: c9 8a 0b                 a4 = a3 - a1
187393: 01                       fallthrough
      :                          @12742
187394: 82 9c                    a5 = u64 [a2]
187396: ab ac f2                 jump @12740 if a5 != a3
      :                          @12743
187399: 7b 9b                    u64 [a2] = a4
187401: 33 06                    s1 = 0
187403: 95 17 c8 01              a0 = sp + 0x1c8
187407: 33 00 4c 0b              ra = 0xb4c
187411: 28 e8 30 fd              jump @249
      :                          @12744
187415: 95 17 c8 01              a0 = sp + 0x1c8
187419: 50 20 4c 0b e0 30 fd     ra = 2892, jump @249
      :                          @12745 [@dyn 1446]
187426: 28 a4 05                 jump @12856
      :                          @12746
187429: 95 17 08 02              a0 = sp + 0x208
187433: 50 20 4e 0b 90 6d fe     ra = 2894, jump @6721
      :                          @12747 [@dyn 1447]
187440: 7b 17 20 01              u64 [sp + 0x120] = a0
187444: 95 17 20 01              a0 = sp + 0x120
187448: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
187452: 33 07 28 0c              a0 = 0xc28
187456: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
187460: 33 07 20 15 01           a0 = 0x11520
187465: 7b 17 90 02              u64 [sp + 0x290] = a0
187469: 49 21 98 02 01           u64 [sp + 664] = 0x1
187474: 49 21 b0 02              u64 [sp + 688] = 0
187478: 95 18 e0 01              a1 = sp + 0x1e0
187482: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
187486: 49 21 a8 02 01           u64 [sp + 680] = 0x1
187491: 95 17 38 02              a0 = sp + 0x238
187495: 95 18 90 02              a1 = sp + 0x290
187499: 50 20 50 0b d4 72 fd     ra = 2896, jump @1491
      :                          @12748 [@dyn 1448]
187506: 82 16 40 02              s1 = u64 [sp + 0x240]
187510: 82 1b 48 02              a4 = u64 [sp + 0x248]
187514: 82 17 38 02              a0 = u64 [sp + 0x238]
187518: 7b 17 70                 u64 [sp + 0x70] = a0
187521: 33 07 02                 a0 = 0x2
187524: 33 08                    a1 = 0
187526: 33 09                    a2 = 0
187528: 64 6a                    a3 = s1
187530: 33 00 52 0b              ra = 0xb52
187534: 0a 64                    ecalli 100 // 'log'
187536: 01                       fallthrough
      :                          @12749 [@dyn 1449]
187537: 82 1c 70                 a5 = u64 [sp + 0x70]
187540: 82 17 68                 a0 = u64 [sp + 0x68]
187543: c8 c7 07                 a0 = a0 + a5
187546: 33 08 00 00 ff           a1 = 0xffffffffffff0000
187551: ac 87 2f                 jump @12755 if a0 <u a1
      :                          @12750
187554: 33 07 c0 22 03           a0 = 0x322c0
187559: 95 77 00 00 01           a0 = a0 + 0x10000
187564: 01                       fallthrough
      :                          @12751
187565: 82 78                    a1 = u64 [a0]
187567: c9 87 09                 a2 = a0 - a1
187570: ab 69 1c                 jump @12755 if a2 != s1
      :                          @12752
187573: c9 c8 09                 a2 = a1 - a5
187576: 01                       fallthrough
      :                          @12753
187577: 82 7a                    a3 = u64 [a0]
187579: ab 8a f2                 jump @12751 if a3 != a1
      :                          @12754
187582: 7b 79                    u64 [a0] = a2
187584: 33 0b                    a4 = 0
187586: 95 17 08 02              a0 = sp + 0x208
187590: 33 00 54 0b              ra = 0xb54
187594: 28 8f 2f fd              jump @229
      :                          @12755
187598: 95 17 08 02              a0 = sp + 0x208
187602: 50 20 54 0b 87 2f fd     ra = 2900, jump @229
      :                          @12756 [@dyn 1450]
187609: 28 ed 04                 jump @12856
      :                          @12757
187612: 95 17 38 02              a0 = sp + 0x238
187616: 95 18 e0 01              a1 = sp + 0x1e0
187620: 95 16 38 02              s1 = sp + 0x238
187624: 50 20 56 0b ac 6f fe     ra = 2902, jump @6782
      :                          @12758 [@dyn 1451]
187631: 7b 16 20 01              u64 [sp + 0x120] = s1
187635: 33 07 20 02              a0 = 0x220
187639: 7b 17 28 01              u64 [sp + 0x128] = a0
187643: 33 07 48 15 01           a0 = 0x11548
187648: 7b 17 90 02              u64 [sp + 0x290] = a0
187652: 49 21 98 02 01           u64 [sp + 664] = 0x1
187657: 49 21 b0 02              u64 [sp + 688] = 0
187661: 95 18 20 01              a1 = sp + 0x120
187665: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
187669: 49 21 a8 02 01           u64 [sp + 680] = 0x1
187674: 95 17 08 02              a0 = sp + 0x208
187678: 95 18 90 02              a1 = sp + 0x290
187682: 50 20 58 0b 1d 72 fd     ra = 2904, jump @1491
      :                          @12759 [@dyn 1452]
187689: 82 18 38 02              a1 = u64 [sp + 0x238]
187693: 51 08 2e                 jump @12766 if a1 == 0
      :                          @12760
187696: 56 28 00 20 2b           jump @12766 if a1 >u 8192
      :                          @12761
187701: 82 17 40 02              a0 = u64 [sp + 0x240]
187705: 97 88 03                 a1 = a1 << 0x3
187708: 33 09 c0 22 03           a2 = 0x322c0
187713: 95 99 00 00 01           a2 = a2 + 0x10000
187718: 01                       fallthrough
      :                          @12762
187719: 82 9a                    a3 = u64 [a2]
187721: c9 a9 0b                 a4 = a2 - a3
187724: ab 7b 0f                 jump @12766 if a4 != a0
      :                          @12763
187727: c9 8a 0b                 a4 = a3 - a1
187730: 01                       fallthrough
      :                          @12764
187731: 82 9c                    a5 = u64 [a2]
187733: ab ac f2                 jump @12762 if a5 != a3
      :                          @12765
187736: 7b 9b                    u64 [a2] = a4
187738: 01                       fallthrough
      :                          @12766
187739: 82 16 10 02              s1 = u64 [sp + 0x210]
187743: 82 1b 18 02              a4 = u64 [sp + 0x218]
187747: 82 17 08 02              a0 = u64 [sp + 0x208]
187751: 7b 17 70                 u64 [sp + 0x70] = a0
187754: 33 07 02                 a0 = 0x2
187757: 33 08                    a1 = 0
187759: 33 09                    a2 = 0
187761: 64 6a                    a3 = s1
187763: 33 00 5a 0b              ra = 0xb5a
187767: 0a 64                    ecalli 100 // 'log'
187769: 01                       fallthrough
      :                          @12767 [@dyn 1453]
187770: 82 1c 70                 a5 = u64 [sp + 0x70]
187773: 82 17 68                 a0 = u64 [sp + 0x68]
187776: c8 c7 07                 a0 = a0 + a5
187779: 33 08 00 00 ff           a1 = 0xffffffffffff0000
187784: ac 87 07 01              jump @12791 if a0 <u a1
      :                          @12768
187788: 33 07 c0 22 03           a0 = 0x322c0
187793: 95 77 00 00 01           a0 = a0 + 0x10000
187798: 01                       fallthrough
      :                          @12769
187799: 82 78                    a1 = u64 [a0]
187801: c9 87 09                 a2 = a0 - a1
187804: ab 69 f3 00              jump @12791 if a2 != s1
      :                          @12770
187808: c9 c8 09                 a2 = a1 - a5
187811: 01                       fallthrough
      :                          @12771
187812: 82 7a                    a3 = u64 [a0]
187814: ab 8a f1                 jump @12769 if a3 != a1
      :                          @12772
187817: 7b 79                    u64 [a0] = a2
187819: 33 0b                    a4 = 0
187821: 01                       fallthrough
      :                          @12773
187822: ab 8a e9                 jump @12769 if a3 != a1
      :                          @12774
187825: 28 de 00                 jump @12791
      :                          @12775
187828: 95 17 38 02              a0 = sp + 0x238
187832: 95 18 e0 01              a1 = sp + 0x1e0
187836: 95 16 38 02              s1 = sp + 0x238
187840: 50 20 5c 0b 9f 74 fe     ra = 2908, jump @6898
      :                          @12776 [@dyn 1454]
187847: 7b 16 20 01              u64 [sp + 0x120] = s1
187851: 33 07 10 02              a0 = 0x210
187855: 7b 17 28 01              u64 [sp + 0x128] = a0
187859: 33 07 68 15 01           a0 = 0x11568
187864: 7b 17 90 02              u64 [sp + 0x290] = a0
187868: 49 21 98 02 01           u64 [sp + 664] = 0x1
187873: 49 21 b0 02              u64 [sp + 688] = 0
187877: 95 18 20 01              a1 = sp + 0x120
187881: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
187885: 49 21 a8 02 01           u64 [sp + 680] = 0x1
187890: 95 17 08 02              a0 = sp + 0x208
187894: 95 18 90 02              a1 = sp + 0x290
187898: 50 20 5e 0b 45 71 fd     ra = 2910, jump @1491
      :                          @12777 [@dyn 1455]
187905: 82 18 38 02              a1 = u64 [sp + 0x238]
187909: 51 08 2e                 jump @12784 if a1 == 0
      :                          @12778
187912: 56 28 00 10 2b           jump @12784 if a1 >u 4096
      :                          @12779
187917: 82 17 40 02              a0 = u64 [sp + 0x240]
187921: 97 88 04                 a1 = a1 << 0x4
187924: 33 09 c0 22 03           a2 = 0x322c0
187929: 95 99 00 00 01           a2 = a2 + 0x10000
187934: 01                       fallthrough
      :                          @12780
187935: 82 9a                    a3 = u64 [a2]
187937: c9 a9 0b                 a4 = a2 - a3
187940: ab 7b 0f                 jump @12784 if a4 != a0
      :                          @12781
187943: c9 8a 0b                 a4 = a3 - a1
187946: 01                       fallthrough
      :                          @12782
187947: 82 9c                    a5 = u64 [a2]
187949: ab ac f2                 jump @12780 if a5 != a3
      :                          @12783
187952: 7b 9b                    u64 [a2] = a4
187954: 01                       fallthrough
      :                          @12784
187955: 82 16 10 02              s1 = u64 [sp + 0x210]
187959: 82 1b 18 02              a4 = u64 [sp + 0x218]
187963: 82 17 08 02              a0 = u64 [sp + 0x208]
187967: 7b 17 70                 u64 [sp + 0x70] = a0
187970: 33 07 02                 a0 = 0x2
187973: 33 08                    a1 = 0
187975: 33 09                    a2 = 0
187977: 64 6a                    a3 = s1
187979: 33 00 60 0b              ra = 0xb60
187983: 0a 64                    ecalli 100 // 'log'
187985: 01                       fallthrough
      :                          @12785 [@dyn 1456]
187986: 82 1c 70                 a5 = u64 [sp + 0x70]
187989: 82 17 68                 a0 = u64 [sp + 0x68]
187992: c8 c7 07                 a0 = a0 + a5
187995: 33 08 00 00 ff           a1 = 0xffffffffffff0000
188000: ac 87 2f                 jump @12791 if a0 <u a1
      :                          @12786
188003: 33 07 c0 22 03           a0 = 0x322c0
188008: 95 77 00 00 01           a0 = a0 + 0x10000
188013: 01                       fallthrough
      :                          @12787
188014: 82 78                    a1 = u64 [a0]
188016: c9 87 09                 a2 = a0 - a1
188019: ab 69 1c                 jump @12791 if a2 != s1
      :                          @12788
188022: c9 c8 09                 a2 = a1 - a5
188025: 01                       fallthrough
      :                          @12789
188026: 82 7a                    a3 = u64 [a0]
188028: ab 8a f2                 jump @12787 if a3 != a1
      :                          @12790
188031: 7b 79                    u64 [a0] = a2
188033: 33 0b                    a4 = 0
188035: 95 17 e0 01              a0 = sp + 0x1e0
188039: 33 00 62 0b              ra = 0xb62
188043: 28 ce 2d fd              jump @229
      :                          @12791
188047: 95 17 e0 01              a0 = sp + 0x1e0
188051: 50 20 62 0b c6 2d fd     ra = 2914, jump @229
      :                          @12792 [@dyn 1457]
188058: 28 2c 03                 jump @12856
      :                          @12793
188061: 95 17 08 02              a0 = sp + 0x208
188065: 95 18 e0 01              a1 = sp + 0x1e0
188069: 50 20 64 0b 32 7e fe     ra = 2916, jump @7108
      :                          @12794 [@dyn 1458]
188076: 82 17 18 02              a0 = u64 [sp + 0x218]
188080: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
188084: 95 17 c8 01              a0 = sp + 0x1c8
188088: 7b 17 20 01              u64 [sp + 0x120] = a0
188092: 33 07 28 0c              a0 = 0xc28
188096: 7b 17 28 01              u64 [sp + 0x128] = a0
188100: 33 07 c0 15 01           a0 = 0x115c0
188105: 7b 17 90 02              u64 [sp + 0x290] = a0
188109: 49 21 98 02 01           u64 [sp + 664] = 0x1
188114: 49 21 b0 02              u64 [sp + 688] = 0
188118: 95 18 20 01              a1 = sp + 0x120
188122: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
188126: 49 21 a8 02 01           u64 [sp + 680] = 0x1
188131: 95 17 38 02              a0 = sp + 0x238
188135: 95 18 90 02              a1 = sp + 0x290
188139: 50 20 66 0b 54 70 fd     ra = 2918, jump @1491
      :                          @12795 [@dyn 1459]
188146: 82 16 40 02              s1 = u64 [sp + 0x240]
188150: 82 1b 48 02              a4 = u64 [sp + 0x248]
188154: 82 17 38 02              a0 = u64 [sp + 0x238]
188158: 7b 17 70                 u64 [sp + 0x70] = a0
188161: 33 07 02                 a0 = 0x2
188164: 33 08                    a1 = 0
188166: 33 09                    a2 = 0
188168: 64 6a                    a3 = s1
188170: 33 00 68 0b              ra = 0xb68
188174: 0a 64                    ecalli 100 // 'log'
188176: 01                       fallthrough
      :                          @12796 [@dyn 1460]
188177: 82 1c 70                 a5 = u64 [sp + 0x70]
188180: 82 17 68                 a0 = u64 [sp + 0x68]
188183: c8 c7 07                 a0 = a0 + a5
188186: 53 37 00 00 ff 27        jump @12802 if a0 <u 4294901760
      :                          @12797
188192: 33 07 c0 22 03           a0 = 0x322c0
188197: 95 77 00 00 01           a0 = a0 + 0x10000
188202: 01                       fallthrough
      :                          @12798
188203: 82 78                    a1 = u64 [a0]
188205: c9 87 09                 a2 = a0 - a1
188208: ab 69 11                 jump @12802 if a2 != s1
      :                          @12799
188211: c9 c8 09                 a2 = a1 - a5
188214: 01                       fallthrough
      :                          @12800
188215: 82 7a                    a3 = u64 [a0]
188217: ab 8a f2                 jump @12798 if a3 != a1
      :                          @12801
188220: 7b 79                    u64 [a0] = a2
188222: 33 0b                    a4 = 0
188224: 01                       fallthrough
      :                          @12802
188225: 82 18 08 02              a1 = u64 [sp + 0x208]
188229: 52 08 07                 jump @12804 if a1 != 0
      :                          @12803
188232: 28 ab 4d ff              jump @10533
      :                          @12804
188236: 54 28 00 20 09           jump @12806 if a1 <=u 8192
      :                          @12805
188241: 28 a2 4d ff              jump @10533
      :                          @12806
188245: 82 17 10 02              a0 = u64 [sp + 0x210]
188249: 97 88 03                 a1 = a1 << 0x3
188252: 33 09 c0 22 03           a2 = 0x322c0
188257: 95 99 00 00 01           a2 = a2 + 0x10000
188262: 01                       fallthrough
      :                          @12807
188263: 82 9a                    a3 = u64 [a2]
188265: c9 a9 0b                 a4 = a2 - a3
188268: aa 7b 07                 jump @12809 if a4 == a0
      :                          @12808
188271: 28 84 4d ff              jump @10533
      :                          @12809
188275: c9 8a 0b                 a4 = a3 - a1
188278: 01                       fallthrough
      :                          @12810
188279: 82 9c                    a5 = u64 [a2]
188281: ab ac ee                 jump @12807 if a5 != a3
      :                          @12811
188284: 7b 9b                    u64 [a2] = a4
188286: 33 06                    s1 = 0
188288: 01                       fallthrough
      :                          @12812
188289: ab ac e6                 jump @12807 if a5 != a3
      :                          @12813
188292: 28 6f 4d ff              jump @10533
      :                          @12814
188296: 00                       trap
      :                          @12815
188297: 95 17 08 02              a0 = sp + 0x208
188301: 50 20 6a 0b ce 55 fe     ra = 2922, jump @6233
      :                          @12816 [@dyn 1461]
188308: 7b 17 20 01              u64 [sp + 0x120] = a0
188312: 95 17 20 01              a0 = sp + 0x120
188316: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
188320: 33 07 28 0c              a0 = 0xc28
188324: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
188328: 33 07 a8 11 01           a0 = 0x111a8
188333: 7b 17 90 02              u64 [sp + 0x290] = a0
188337: 49 21 98 02 01           u64 [sp + 664] = 0x1
188342: 49 21 b0 02              u64 [sp + 688] = 0
188346: 95 18 e0 01              a1 = sp + 0x1e0
188350: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
188354: 49 21 a8 02 01           u64 [sp + 680] = 0x1
188359: 95 17 38 02              a0 = sp + 0x238
188363: 95 18 90 02              a1 = sp + 0x290
188367: 50 20 6c 0b 70 6f fd     ra = 2924, jump @1491
      :                          @12817 [@dyn 1462]
188374: 82 16 40 02              s1 = u64 [sp + 0x240]
188378: 82 1b 48 02              a4 = u64 [sp + 0x248]
188382: 82 17 38 02              a0 = u64 [sp + 0x238]
188386: 7b 17 70                 u64 [sp + 0x70] = a0
188389: 33 07 02                 a0 = 0x2
188392: 33 08                    a1 = 0
188394: 33 09                    a2 = 0
188396: 64 6a                    a3 = s1
188398: 33 00 6e 0b              ra = 0xb6e
188402: 0a 64                    ecalli 100 // 'log'
188404: 01                       fallthrough
      :                          @12818 [@dyn 1463]
188405: 82 1c 70                 a5 = u64 [sp + 0x70]
188408: 82 17 68                 a0 = u64 [sp + 0x68]
188411: c8 c7 07                 a0 = a0 + a5
188414: 33 08 00 00 ff           a1 = 0xffffffffffff0000
188419: ac 87 b8 01              jump @12855 if a0 <u a1
      :                          @12819
188423: 33 07 c0 22 03           a0 = 0x322c0
188428: 95 77 00 00 01           a0 = a0 + 0x10000
188433: 01                       fallthrough
      :                          @12820
188434: 82 78                    a1 = u64 [a0]
188436: c9 87 09                 a2 = a0 - a1
188439: ab 69 a4 01              jump @12855 if a2 != s1
      :                          @12821
188443: c9 c8 09                 a2 = a1 - a5
188446: 01                       fallthrough
      :                          @12822
188447: 82 7a                    a3 = u64 [a0]
188449: ab 8a f1                 jump @12820 if a3 != a1
      :                          @12823
188452: 7b 79                    u64 [a0] = a2
188454: 33 0b                    a4 = 0
188456: 01                       fallthrough
      :                          @12824
188457: ab 8a e9                 jump @12820 if a3 != a1
      :                          @12825
188460: 28 8f 01                 jump @12855
      :                          @12826
188463: 95 17 38 02              a0 = sp + 0x238
188467: 95 18 e0 01              a1 = sp + 0x1e0
188471: 95 16 38 02              s1 = sp + 0x238
188475: 50 20 70 0b bd 57 fe     ra = 2928, jump @6303
      :                          @12827 [@dyn 1464]
188482: 7b 16 20 01              u64 [sp + 0x120] = s1
188486: 33 07 10 02              a0 = 0x210
188490: 7b 17 28 01              u64 [sp + 0x128] = a0
188494: 33 07 c8 11 01           a0 = 0x111c8
188499: 7b 17 90 02              u64 [sp + 0x290] = a0
188503: 49 21 98 02 01           u64 [sp + 664] = 0x1
188508: 49 21 b0 02              u64 [sp + 688] = 0
188512: 95 18 20 01              a1 = sp + 0x120
188516: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
188520: 49 21 a8 02 01           u64 [sp + 680] = 0x1
188525: 95 17 08 02              a0 = sp + 0x208
188529: 95 18 90 02              a1 = sp + 0x290
188533: 50 20 72 0b ca 6e fd     ra = 2930, jump @1491
      :                          @12828 [@dyn 1465]
188540: 82 18 38 02              a1 = u64 [sp + 0x238]
188544: 51 08 2e                 jump @12835 if a1 == 0
      :                          @12829
188547: 56 28 00 10 2b           jump @12835 if a1 >u 4096
      :                          @12830
188552: 82 17 40 02              a0 = u64 [sp + 0x240]
188556: 97 88 04                 a1 = a1 << 0x4
188559: 33 09 c0 22 03           a2 = 0x322c0
188564: 95 99 00 00 01           a2 = a2 + 0x10000
188569: 01                       fallthrough
      :                          @12831
188570: 82 9a                    a3 = u64 [a2]
188572: c9 a9 0b                 a4 = a2 - a3
188575: ab 7b 0f                 jump @12835 if a4 != a0
      :                          @12832
188578: c9 8a 0b                 a4 = a3 - a1
188581: 01                       fallthrough
      :                          @12833
188582: 82 9c                    a5 = u64 [a2]
188584: ab ac f2                 jump @12831 if a5 != a3
      :                          @12834
188587: 7b 9b                    u64 [a2] = a4
188589: 01                       fallthrough
      :                          @12835
188590: 82 16 10 02              s1 = u64 [sp + 0x210]
188594: 82 1b 18 02              a4 = u64 [sp + 0x218]
188598: 82 17 08 02              a0 = u64 [sp + 0x208]
188602: 7b 17 70                 u64 [sp + 0x70] = a0
188605: 33 07 02                 a0 = 0x2
188608: 33 08                    a1 = 0
188610: 33 09                    a2 = 0
188612: 64 6a                    a3 = s1
188614: 33 00 74 0b              ra = 0xb74
188618: 0a 64                    ecalli 100 // 'log'
188620: 01                       fallthrough
      :                          @12836 [@dyn 1466]
188621: 82 1c 70                 a5 = u64 [sp + 0x70]
188624: 82 17 68                 a0 = u64 [sp + 0x68]
188627: c8 c7 07                 a0 = a0 + a5
188630: 33 08 00 00 ff           a1 = 0xffffffffffff0000
188635: ae 87 07                 jump @12838 if a0 >=u a1
      :                          @12837
188638: 28 15 4c ff              jump @10533
      :                          @12838
188642: 33 07 c0 22 03           a0 = 0x322c0
188647: 95 77 00 00 01           a0 = a0 + 0x10000
188652: 01                       fallthrough
      :                          @12839
188653: 82 78                    a1 = u64 [a0]
188655: c9 87 09                 a2 = a0 - a1
188658: aa 69 07                 jump @12841 if a2 == s1
      :                          @12840
188661: 28 fe 4b ff              jump @10533
      :                          @12841
188665: c9 c8 09                 a2 = a1 - a5
188668: 01                       fallthrough
      :                          @12842
188669: 82 7a                    a3 = u64 [a0]
188671: ab 8a ee                 jump @12839 if a3 != a1
      :                          @12843
188674: 7b 79                    u64 [a0] = a2
188676: 33 0b                    a4 = 0
188678: 01                       fallthrough
      :                          @12844
188679: ab 8a e6                 jump @12839 if a3 != a1
      :                          @12845
188682: 28 e9 4b ff              jump @10533
      :                          @12846
188686: 82 17 10 02              a0 = u64 [sp + 0x210]
188690: 82 18 18 02              a1 = u64 [sp + 0x218]
188694: 50 20 76 0b 37 56 fe     ra = 2934, jump @6285
      :                          @12847 [@dyn 1467]
188701: 7b 17 20 01              u64 [sp + 0x120] = a0
188705: 95 17 20 01              a0 = sp + 0x120
188709: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
188713: 33 07 28 0c              a0 = 0xc28
188717: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
188721: 33 07 d8 2d 01           a0 = 0x12dd8
188726: 7b 17 90 02              u64 [sp + 0x290] = a0
188730: 49 21 98 02 01           u64 [sp + 664] = 0x1
188735: 49 21 b0 02              u64 [sp + 688] = 0
188739: 95 18 e0 01              a1 = sp + 0x1e0
188743: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
188747: 49 21 a8 02 01           u64 [sp + 680] = 0x1
188752: 95 17 38 02              a0 = sp + 0x238
188756: 95 18 90 02              a1 = sp + 0x290
188760: 50 20 78 0b e7 6d fd     ra = 2936, jump @1491
      :                          @12848 [@dyn 1468]
188767: 82 16 40 02              s1 = u64 [sp + 0x240]
188771: 82 1b 48 02              a4 = u64 [sp + 0x248]
188775: 82 17 38 02              a0 = u64 [sp + 0x238]
188779: 7b 17 70                 u64 [sp + 0x70] = a0
188782: 33 07 02                 a0 = 0x2
188785: 33 08                    a1 = 0
188787: 33 09                    a2 = 0
188789: 64 6a                    a3 = s1
188791: 33 00 7a 0b              ra = 0xb7a
188795: 0a 64                    ecalli 100 // 'log'
188797: 01                       fallthrough
      :                          @12849 [@dyn 1469]
188798: 82 1c 70                 a5 = u64 [sp + 0x70]
188801: 82 17 68                 a0 = u64 [sp + 0x68]
188804: c8 c7 07                 a0 = a0 + a5
188807: 33 08 00 00 ff           a1 = 0xffffffffffff0000
188812: ac 87 2f                 jump @12855 if a0 <u a1
      :                          @12850
188815: 33 07 c0 22 03           a0 = 0x322c0
188820: 95 77 00 00 01           a0 = a0 + 0x10000
188825: 01                       fallthrough
      :                          @12851
188826: 82 78                    a1 = u64 [a0]
188828: c9 87 09                 a2 = a0 - a1
188831: ab 69 1c                 jump @12855 if a2 != s1
      :                          @12852
188834: c9 c8 09                 a2 = a1 - a5
188837: 01                       fallthrough
      :                          @12853
188838: 82 7a                    a3 = u64 [a0]
188840: ab 8a f2                 jump @12851 if a3 != a1
      :                          @12854
188843: 7b 79                    u64 [a0] = a2
188845: 33 0b                    a4 = 0
188847: 95 17 08 02              a0 = sp + 0x208
188851: 33 00 7c 0b              ra = 0xb7c
188855: 28 04 2a fd              jump @209
      :                          @12855
188859: 95 17 08 02              a0 = sp + 0x208
188863: 50 20 7c 0b fc 29 fd     ra = 2940, jump @209
      :                          @12856 [@dyn 1470]
188870: 0a                       ecalli 0 // 'gas'
188871: 82 18 50                 a1 = u64 [sp + 0x50]
188874: c9 78 07                 a0 = a1 - a0
188877: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
188881: 95 17 7f                 a0 = sp + 0x7f
188884: 7b 17 38 02              u64 [sp + 0x238] = a0
188888: 33 07 5c 0c              a0 = 0xc5c
188892: 7b 17 40 02              u64 [sp + 0x240] = a0
188896: 95 17 e0 01              a0 = sp + 0x1e0
188900: 7b 17 48 02              u64 [sp + 0x248] = a0
188904: 33 07 28 0c              a0 = 0xc28
188908: 7b 17 50 02              u64 [sp + 0x250] = a0
188912: 33 07 38 2e 01           a0 = 0x12e38
188917: 7b 17 90 02              u64 [sp + 0x290] = a0
188921: 49 21 98 02 02           u64 [sp + 664] = 0x2
188926: 49 21 b0 02              u64 [sp + 688] = 0
188930: 95 18 38 02              a1 = sp + 0x238
188934: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
188938: 49 21 a8 02 02           u64 [sp + 680] = 0x2
188943: 95 17 08 02              a0 = sp + 0x208
188947: 95 18 90 02              a1 = sp + 0x290
188951: 50 20 7e 0b f8 20        ra = 2942, jump @13535
      :                          @12857 [@dyn 1471]
188957: 82 16 10 02              s1 = u64 [sp + 0x210]
188961: 82 1b 18 02              a4 = u64 [sp + 0x218]
188965: 82 17 08 02              a0 = u64 [sp + 0x208]
188969: 7b 17 70                 u64 [sp + 0x70] = a0
188972: 33 07 02                 a0 = 0x2
188975: 33 08                    a1 = 0
188977: 33 09                    a2 = 0
188979: 64 6a                    a3 = s1
188981: 33 00 80 0b              ra = 0xb80
188985: 0a 64                    ecalli 100 // 'log'
188987: 01                       fallthrough
      :                          @12858 [@dyn 1472]
188988: 82 1c 70                 a5 = u64 [sp + 0x70]
188991: 82 17 68                 a0 = u64 [sp + 0x68]
188994: c8 c7 07                 a0 = a0 + a5
188997: 33 08 00 00 ff           a1 = 0xffffffffffff0000
189002: ac 87 24                 jump @12864 if a0 <u a1
      :                          @12859
189005: 33 07 c0 22 03           a0 = 0x322c0
189010: 95 77 00 00 01           a0 = a0 + 0x10000
189015: 01                       fallthrough
      :                          @12860
189016: 82 78                    a1 = u64 [a0]
189018: c9 87 09                 a2 = a0 - a1
189021: ab 69 11                 jump @12864 if a2 != s1
      :                          @12861
189024: c9 c8 09                 a2 = a1 - a5
189027: 01                       fallthrough
      :                          @12862
189028: 82 7a                    a3 = u64 [a0]
189030: ab 8a f2                 jump @12860 if a3 != a1
      :                          @12863
189033: 7b 79                    u64 [a0] = a2
189035: 33 0b                    a4 = 0
189037: 01                       fallthrough
      :                          @12864
189038: 95 51 40 fc              sp = s0 + 0xfffffffffffffc40
189042: 82 10 b8 03              ra = u64 [sp + 0x3b8]
189046: 82 15 b0 03              s0 = u64 [sp + 0x3b0]
189050: 82 16 a8 03              s1 = u64 [sp + 0x3a8]
189054: 95 11 c0 03              sp = sp + 0x3c0
189058: 32 00                    ret
      :                          @12865
189060: 33 0a                    a3 = 0
189062: 33 0b 01                 a4 = 0x1
189065: 83 88                    i32 a1 = a1 + 0
189067: 33 09 01                 a2 = 0x1
189070: 01                       fallthrough
      :                          @12866
189071: d8 87 0c                 a5 = a0 <u a1
189074: 85 c6 01                 s1 = a5 ^ 0x1
189077: be c7 07                 i32 a0 = a0 + a5
189080: c8 9a 0c                 a5 = a3 + a2
189083: d8 78 0a                 a3 = a1 <u a0
189086: d4 a6 06                 s1 = s1 | a3
189089: 64 9a                    a3 = a2
189091: 64 b9                    a2 = a4
189093: c8 cb 0b                 a4 = a4 + a5
189096: 51 06 e7                 jump @12866 if s1 == 0
      :                          @12867
189099: 7b 1b e0 01              u64 [sp + 0x1e0] = a4
189103: 95 17 20 01              a0 = sp + 0x120
189107: 7b 17 38 02              u64 [sp + 0x238] = a0
189111: 33 07 5e 0c              a0 = 0xc5e
189115: 7b 17 40 02              u64 [sp + 0x240] = a0
189119: 95 17 e0 01              a0 = sp + 0x1e0
189123: 7b 17 48 02              u64 [sp + 0x248] = a0
189127: 33 07 28 0c              a0 = 0xc28
189131: 7b 17 50 02              u64 [sp + 0x250] = a0
189135: 33 07 18 06 01           a0 = 0x10618
189140: 7b 17 90 02              u64 [sp + 0x290] = a0
189144: 49 21 98 02 02           u64 [sp + 664] = 0x2
189149: 49 21 b0 02              u64 [sp + 688] = 0
189153: 95 18 38 02              a1 = sp + 0x238
189157: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
189161: 49 21 a8 02 02           u64 [sp + 680] = 0x2
189166: 95 17 08 02              a0 = sp + 0x208
189170: 95 18 90 02              a1 = sp + 0x290
189174: 50 20 82 0b 49 6c fd     ra = 2946, jump @1491
      :                          @12868 [@dyn 1473]
189181: 82 16 10 02              s1 = u64 [sp + 0x210]
189185: 82 1b 18 02              a4 = u64 [sp + 0x218]
189189: 82 17 08 02              a0 = u64 [sp + 0x208]
189193: 7b 17 70                 u64 [sp + 0x70] = a0
189196: 33 07 02                 a0 = 0x2
189199: 33 08                    a1 = 0
189201: 33 09                    a2 = 0
189203: 64 6a                    a3 = s1
189205: 33 00 84 0b              ra = 0xb84
189209: 0a 64                    ecalli 100 // 'log'
189211: 01                       fallthrough
      :                          @12869 [@dyn 1474]
189212: 82 1c 70                 a5 = u64 [sp + 0x70]
189215: 82 17 68                 a0 = u64 [sp + 0x68]
189218: c8 c7 07                 a0 = a0 + a5
189221: 53 37 00 00 ff a1 fe     jump @12856 if a0 <u 4294901760
      :                          @12870
189228: 33 07 c0 22 03           a0 = 0x322c0
189233: 95 77 00 00 01           a0 = a0 + 0x10000
189238: 01                       fallthrough
      :                          @12871
189239: 82 78                    a1 = u64 [a0]
189241: c9 87 09                 a2 = a0 - a1
189244: ab 69 8a fe              jump @12856 if a2 != s1
      :                          @12872
189248: c9 c8 09                 a2 = a1 - a5
189251: 01                       fallthrough
      :                          @12873
189252: 82 7a                    a3 = u64 [a0]
189254: ab 8a f1                 jump @12871 if a3 != a1
      :                          @12874
189257: 7b 79                    u64 [a0] = a2
189259: 33 0b                    a4 = 0
189261: 01                       fallthrough
      :                          @12875
189262: ab 8a e9                 jump @12871 if a3 != a1
      :                          @12876
189265: 28 75 fe                 jump @12856
      :                          @12877
189268: 33 04                    t2 = 0
189270: 82 13 60                 t1 = u64 [sp + 0x60]
189273: 95 33 08                 t1 = t1 + 0x8
189276: 33 0a 01                 a3 = 0x1
189279: 64 86                    s1 = a1
189281: 28 0f                    jump @12880
      :                          @12878
189283: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
189286: 95 33 08                 t1 = t1 + 0x8
189289: ab 80 07                 jump @12880 if ra != a1
      :                          @12879
189292: 28 ba 32 ff              jump @10143
      :                          @12880
189296: 64 40                    ra = t2
189298: 95 44 01                 t2 = t2 + 0x1
189301: 82 17 70                 a0 = u64 [sp + 0x70]
189304: ae 74 eb                 jump @12878 if t2 >=u a0
      :                          @12881
189307: 97 09 03                 a2 = ra << 0x3
189310: 82 17 60                 a0 = u64 [sp + 0x60]
189313: c8 79 09                 a2 = a2 + a0
189316: 82 99                    a2 = u64 [a2]
189318: 64 3b                    a4 = t1
189320: 64 6c                    a5 = s1
189322: 01                       fallthrough
      :                          @12882
189323: 82 b2                    t0 = u64 [a4]
189325: c9 92 07                 a0 = t0 - a2
189328: ca a7 0a                 a3 = a0 * a3
189331: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
189334: 95 bb 08                 a4 = a4 + 0x8
189337: 52 0c f2                 jump @12882 if a5 != 0
      :                          @12883
189340: 28 c7                    jump @12878
      :                          @12884
189342: 82 17 30 01              a0 = u64 [sp + 0x130]
189346: 82 18 28 01              a1 = u64 [sp + 0x128]
189350: 82 19 20 01              a2 = u64 [sp + 0x120]
189354: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
189358: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
189362: 7b 19 e0 01              u64 [sp + 0x1e0] = a2
189366: 95 17 b0 01              a0 = sp + 0x1b0
189370: 7b 17 38 02              u64 [sp + 0x238] = a0
189374: 33 07 28 0c              a0 = 0xc28
189378: 7b 17 40 02              u64 [sp + 0x240] = a0
189382: 95 17 e0 01              a0 = sp + 0x1e0
189386: 7b 17 48 02              u64 [sp + 0x248] = a0
189390: 33 07 38 02              a0 = 0x238
189394: 7b 17 50 02              u64 [sp + 0x250] = a0
189398: 33 07 c8 14 01           a0 = 0x114c8
189403: 7b 17 90 02              u64 [sp + 0x290] = a0
189407: 49 21 98 02 02           u64 [sp + 664] = 0x2
189412: 49 21 b0 02              u64 [sp + 688] = 0
189416: 95 18 38 02              a1 = sp + 0x238
189420: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
189424: 49 21 a8 02 02           u64 [sp + 680] = 0x2
189429: 95 17 08 02              a0 = sp + 0x208
189433: 95 18 90 02              a1 = sp + 0x290
189437: 50 20 86 0b 42 6b fd     ra = 2950, jump @1491
      :                          @12885 [@dyn 1475]
189444: 82 1a 10 02              a3 = u64 [sp + 0x210]
189448: 7b 1a 60                 u64 [sp + 0x60] = a3
189451: 82 1b 18 02              a4 = u64 [sp + 0x218]
189455: 82 16 08 02              s1 = u64 [sp + 0x208]
189459: 33 07 02                 a0 = 0x2
189462: 33 08                    a1 = 0
189464: 33 09                    a2 = 0
189466: 33 00 88 0b              ra = 0xb88
189470: 0a 64                    ecalli 100 // 'log'
189472: 01                       fallthrough
      :                          @12886 [@dyn 1476]
189473: 82 1c 60                 a5 = u64 [sp + 0x60]
189476: 82 17 68                 a0 = u64 [sp + 0x68]
189479: c8 67 07                 a0 = a0 + s1
189482: 53 37 00 00 ff 25        jump @12892 if a0 <u 4294901760
      :                          @12887
189488: 33 07 c0 22 03           a0 = 0x322c0
189493: 95 77 00 00 01           a0 = a0 + 0x10000
189498: 01                       fallthrough
      :                          @12888
189499: 82 78                    a1 = u64 [a0]
189501: c9 87 09                 a2 = a0 - a1
189504: ab c9 0f                 jump @12892 if a2 != a5
      :                          @12889
189507: c9 68 09                 a2 = a1 - s1
189510: 01                       fallthrough
      :                          @12890
189511: 82 7a                    a3 = u64 [a0]
189513: ab 8a f2                 jump @12888 if a3 != a1
      :                          @12891
189516: 7b 79                    u64 [a0] = a2
189518: 01                       fallthrough
      :                          @12892
189519: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
189523: 82 12 70                 t0 = u64 [sp + 0x70]
189526: 51 08 30                 jump @12899 if a1 == 0
      :                          @12893
189529: 56 28 00 20 2d           jump @12899 if a1 >u 8192
      :                          @12894
189534: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
189538: 97 88 03                 a1 = a1 << 0x3
189541: 33 09 c0 22 03           a2 = 0x322c0
189546: 95 99 00 00 01           a2 = a2 + 0x10000
189551: 01                       fallthrough
      :                          @12895
189552: 82 9a                    a3 = u64 [a2]
189554: c9 a9 0b                 a4 = a2 - a3
189557: ab 7b 11                 jump @12899 if a4 != a0
      :                          @12896
189560: c9 8a 0b                 a4 = a3 - a1
189563: 01                       fallthrough
      :                          @12897
189564: 82 9c                    a5 = u64 [a2]
189566: ab ac f2                 jump @12895 if a5 != a3
      :                          @12898
189569: 7b 9b                    u64 [a2] = a4
189571: 33 06                    s1 = 0
189573: 01                       fallthrough
      :                          @12899
189574: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
189578: 51 07 3c fd              jump @12856 if a0 == 0
      :                          @12900
189582: 56 27 aa 0a 38 fd        jump @12856 if a0 >u 2730
      :                          @12901
189588: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
189591: 33 08 c0 22 03           a1 = 0x322c0
189596: 95 88 00 00 01           a1 = a1 + 0x10000
189601: 01                       fallthrough
      :                          @12902
189602: 82 89                    a2 = u64 [a1]
189604: c9 98 0a                 a3 = a1 - a2
189607: ab 2a 1f fd              jump @12856 if a3 != t0
      :                          @12903
189611: c8 79 0a                 a3 = a2 + a0
189614: 01                       fallthrough
      :                          @12904
189615: 82 8b                    a4 = u64 [a1]
189617: ab 9b f1                 jump @12902 if a4 != a2
      :                          @12905
189620: 7b 8a                    u64 [a1] = a3
189622: 33 0c                    a5 = 0
189624: 01                       fallthrough
      :                          @12906
189625: ab 9b e9                 jump @12902 if a4 != a2
      :                          @12907
189628: 28 0a fd                 jump @12856
      :                          @12908
189631: 82 17 a0 02              a0 = u64 [sp + 0x2a0]
189635: 82 18 98 02              a1 = u64 [sp + 0x298]
189639: 82 19 90 02              a2 = u64 [sp + 0x290]
189643: 7b 17 18 02              u64 [sp + 0x218] = a0
189647: 7b 18 10 02              u64 [sp + 0x210] = a1
189651: 7b 19 08 02              u64 [sp + 0x208] = a2
189655: 01                       fallthrough
      :                          @12909
189656: 95 17 08 02              a0 = sp + 0x208
189660: 7b 17 20 01              u64 [sp + 0x120] = a0
189664: 33 07 20 02              a0 = 0x220
189668: 7b 17 28 01              u64 [sp + 0x128] = a0
189672: 33 07 c0 08 01           a0 = 0x108c0
189677: 7b 17 90 02              u64 [sp + 0x290] = a0
189681: 49 21 98 02 01           u64 [sp + 664] = 0x1
189686: 49 21 b0 02              u64 [sp + 688] = 0
189690: 95 18 20 01              a1 = sp + 0x120
189694: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
189698: 49 21 a8 02 01           u64 [sp + 680] = 0x1
189703: 95 17 38 02              a0 = sp + 0x238
189707: 95 18 90 02              a1 = sp + 0x290
189711: 50 20 8a 0b 30 6a fd     ra = 2954, jump @1491
      :                          @12910 [@dyn 1477]
189718: 82 16 40 02              s1 = u64 [sp + 0x240]
189722: 82 1b 48 02              a4 = u64 [sp + 0x248]
189726: 82 17 38 02              a0 = u64 [sp + 0x238]
189730: 7b 17 70                 u64 [sp + 0x70] = a0
189733: 33 07 02                 a0 = 0x2
189736: 33 08                    a1 = 0
189738: 33 09                    a2 = 0
189740: 64 6a                    a3 = s1
189742: 33 00 8c 0b              ra = 0xb8c
189746: 0a 64                    ecalli 100 // 'log'
189748: 01                       fallthrough
      :                          @12911 [@dyn 1478]
189749: 82 1c 70                 a5 = u64 [sp + 0x70]
189752: 82 17 68                 a0 = u64 [sp + 0x68]
189755: c8 c7 07                 a0 = a0 + a5
189758: 53 37 00 00 ff 27        jump @12917 if a0 <u 4294901760
      :                          @12912
189764: 33 07 c0 22 03           a0 = 0x322c0
189769: 95 77 00 00 01           a0 = a0 + 0x10000
189774: 01                       fallthrough
      :                          @12913
189775: 82 78                    a1 = u64 [a0]
189777: c9 87 09                 a2 = a0 - a1
189780: ab 69 11                 jump @12917 if a2 != s1
      :                          @12914
189783: c9 c8 09                 a2 = a1 - a5
189786: 01                       fallthrough
      :                          @12915
189787: 82 7a                    a3 = u64 [a0]
189789: ab 8a f2                 jump @12913 if a3 != a1
      :                          @12916
189792: 7b 79                    u64 [a0] = a2
189794: 33 0b                    a4 = 0
189796: 01                       fallthrough
      :                          @12917
189797: 82 18 08 02              a1 = u64 [sp + 0x208]
189801: 52 08 07                 jump @12919 if a1 != 0
      :                          @12918
189804: 28 87 47 ff              jump @10533
      :                          @12919
189808: 54 28 00 20 09           jump @12921 if a1 <=u 8192
      :                          @12920
189813: 28 7e 47 ff              jump @10533
      :                          @12921
189817: 82 17 10 02              a0 = u64 [sp + 0x210]
189821: 97 88 03                 a1 = a1 << 0x3
189824: 33 09 c0 22 03           a2 = 0x322c0
189829: 95 99 00 00 01           a2 = a2 + 0x10000
189834: 01                       fallthrough
      :                          @12922
189835: 82 9a                    a3 = u64 [a2]
189837: c9 a9 0b                 a4 = a2 - a3
189840: aa 7b 07                 jump @12924 if a4 == a0
      :                          @12923
189843: 28 60 47 ff              jump @10533
      :                          @12924
189847: c9 8a 0b                 a4 = a3 - a1
189850: 01                       fallthrough
      :                          @12925
189851: 82 9c                    a5 = u64 [a2]
189853: ab ac ee                 jump @12922 if a5 != a3
      :                          @12926
189856: 7b 9b                    u64 [a2] = a4
189858: 33 06                    s1 = 0
189860: 01                       fallthrough
      :                          @12927
189861: ab ac e6                 jump @12922 if a5 != a3
      :                          @12928
189864: 28 4b 47 ff              jump @10533
      :                          @12929
189868: 33 0c                    a5 = 0
189870: 82 18 70                 a1 = u64 [sp + 0x70]
189873: 01                       fallthrough
      :                          @12930
189874: 7b 1c c8 01              u64 [sp + 0x1c8] = a5
189878: 95 17 e0 01              a0 = sp + 0x1e0
189882: 95 16 e0 01              s1 = sp + 0x1e0
189886: 82 1a 58                 a3 = u64 [sp + 0x58]
189889: 82 1b 48                 a4 = u64 [sp + 0x48]
189892: 33 00 8e 0b              ra = 0xb8e
189896: 95 11 b0                 sp = sp + 0xffffffffffffffb0
189899: 7b 10 48                 u64 [sp + 0x48] = ra
189902: 7b 15 40                 u64 [sp + 0x40] = s0
189905: 7b 16 38                 u64 [sp + 0x38] = s1
189908: 7b 1c 10                 u64 [sp + 0x10] = a5
189911: 64 a6                    s1 = a3
189913: 7b 19 18                 u64 [sp + 0x18] = a2
189916: 7b 18 08                 u64 [sp + 0x8] = a1
189919: 64 75                    s0 = a0
189921: 95 17 20                 a0 = sp + 0x20
189924: 64 b8                    a1 = a4
189926: 64 a9                    a2 = a3
189928: 33 00 66 04              ra = 0x466
189932: 28 37 a5 fd              jump @2409
      :                          @12931 [@dyn 1479]
189936: 95 17 20 01              a0 = sp + 0x120
189940: 7b 17 90 02              u64 [sp + 0x290] = a0
189944: 33 07 18 02              a0 = 0x218
189948: 7b 17 98 02              u64 [sp + 0x298] = a0
189952: 95 18 c8 01              a1 = sp + 0x1c8
189956: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
189960: 33 08 28 0c              a1 = 0xc28
189964: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
189968: 7b 16 b0 02              u64 [sp + 0x2b0] = s1
189972: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
189976: 33 07 c8 18 01           a0 = 0x118c8
189981: 7b 17 38 02              u64 [sp + 0x238] = a0
189985: 49 21 40 02 03           u64 [sp + 576] = 0x3
189990: 49 21 58 02              u64 [sp + 600] = 0
189994: 95 18 90 02              a1 = sp + 0x290
189998: 7b 18 48 02              u64 [sp + 0x248] = a1
190002: 49 21 50 02 03           u64 [sp + 592] = 0x3
190007: 95 17 08 02              a0 = sp + 0x208
190011: 95 18 38 02              a1 = sp + 0x238
190015: 50 20 90 0b 00 69 fd     ra = 2960, jump @1491
      :                          @12932 [@dyn 1480]
190022: 82 16 10 02              s1 = u64 [sp + 0x210]
190026: 82 1b 18 02              a4 = u64 [sp + 0x218]
190030: 82 17 08 02              a0 = u64 [sp + 0x208]
190034: 7b 17 58                 u64 [sp + 0x58] = a0
190037: 33 07 02                 a0 = 0x2
190040: 33 08                    a1 = 0
190042: 33 09                    a2 = 0
190044: 64 6a                    a3 = s1
190046: 33 00 92 0b              ra = 0xb92
190050: 0a 64                    ecalli 100 // 'log'
190052: 01                       fallthrough
      :                          @12933 [@dyn 1481]
190053: 82 1c 58                 a5 = u64 [sp + 0x58]
190056: 82 17 68                 a0 = u64 [sp + 0x68]
190059: c8 c7 07                 a0 = a0 + a5
190062: 53 37 00 00 ff 25        jump @12939 if a0 <u 4294901760
      :                          @12934
190068: 33 07 c0 22 03           a0 = 0x322c0
190073: 95 77 00 00 01           a0 = a0 + 0x10000
190078: 01                       fallthrough
      :                          @12935
190079: 82 78                    a1 = u64 [a0]
190081: c9 87 09                 a2 = a0 - a1
190084: ab 69 0f                 jump @12939 if a2 != s1
      :                          @12936
190087: c9 c8 09                 a2 = a1 - a5
190090: 01                       fallthrough
      :                          @12937
190091: 82 7a                    a3 = u64 [a0]
190093: ab 8a f2                 jump @12935 if a3 != a1
      :                          @12938
190096: 7b 79                    u64 [a0] = a2
190098: 01                       fallthrough
      :                          @12939
190099: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
190103: 51 07 2e                 jump @12946 if a0 == 0
      :                          @12940
190106: 56 37 00 00 01 2b        jump @12946 if a0 >u 65536
      :                          @12941
190112: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
190116: 33 0a c0 22 03           a3 = 0x322c0
190121: 95 a9 00 00 01           a2 = a3 + 0x10000
190126: 01                       fallthrough
      :                          @12942
190127: 82 9a                    a3 = u64 [a2]
190129: c9 a9 0b                 a4 = a2 - a3
190132: ab 8b 11                 jump @12946 if a4 != a1
      :                          @12943
190135: c9 7a 0b                 a4 = a3 - a0
190138: 01                       fallthrough
      :                          @12944
190139: 82 9c                    a5 = u64 [a2]
190141: ab ac f2                 jump @12942 if a5 != a3
      :                          @12945
190144: 7b 9b                    u64 [a2] = a4
190146: 33 06                    s1 = 0
190148: 01                       fallthrough
      :                          @12946
190149: 82 17 20 01              a0 = u64 [sp + 0x120]
190153: 51 07 2e                 jump @12953 if a0 == 0
      :                          @12947
190156: 56 37 00 00 01 2b        jump @12953 if a0 >u 65536
      :                          @12948
190162: 82 18 28 01              a1 = u64 [sp + 0x128]
190166: 33 0a c0 22 03           a3 = 0x322c0
190171: 95 a9 00 00 01           a2 = a3 + 0x10000
190176: 01                       fallthrough
      :                          @12949
190177: 82 9a                    a3 = u64 [a2]
190179: c9 a9 0b                 a4 = a2 - a3
190182: ab 8b 11                 jump @12953 if a4 != a1
      :                          @12950
190185: c9 7a 0b                 a4 = a3 - a0
190188: 01                       fallthrough
      :                          @12951
190189: 82 9c                    a5 = u64 [a2]
190191: ab ac f2                 jump @12949 if a5 != a3
      :                          @12952
190194: 7b 9b                    u64 [a2] = a4
190196: 33 06                    s1 = 0
190198: 01                       fallthrough
      :                          @12953
190199: 82 17 60                 a0 = u64 [sp + 0x60]
190202: 51 07 cc fa              jump @12856 if a0 == 0
      :                          @12954
190206: 82 18 60                 a1 = u64 [sp + 0x60]
190209: 56 28 00 20 c5 fa        jump @12856 if a1 >u 8192
      :                          @12955
190215: 82 17 60                 a0 = u64 [sp + 0x60]
190218: 97 77 03                 a0 = a0 << 0x3
190221: 33 08 c0 22 03           a1 = 0x322c0
190226: 95 88 00 00 01           a1 = a1 + 0x10000
190231: 01                       fallthrough
      :                          @12956
190232: 82 89                    a2 = u64 [a1]
190234: c9 98 0a                 a3 = a1 - a2
190237: 82 1b 70                 a4 = u64 [sp + 0x70]
190240: ab ba a6 fa              jump @12856 if a3 != a4
      :                          @12957
190244: c9 79 0a                 a3 = a2 - a0
190247: 01                       fallthrough
      :                          @12958
190248: 82 8b                    a4 = u64 [a1]
190250: ab 9b ee                 jump @12956 if a4 != a2
      :                          @12959
190253: 7b 8a                    u64 [a1] = a3
190255: 33 0c                    a5 = 0
190257: 01                       fallthrough
      :                          @12960
190258: ab 9b e6                 jump @12956 if a4 != a2
      :                          @12961
190261: 28 91 fa                 jump @12856
      :                          @12962
190264: 33 07 78 19 01           a0 = 0x11978
190269: 7b 17 90 02              u64 [sp + 0x290] = a0
190273: 49 21 98 02 01           u64 [sp + 664] = 0x1
190278: 49 21 b0 02              u64 [sp + 688] = 0
190282: 33 07 f0 2f 01           a0 = 0x12ff0
190287: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
190291: 49 21 a8 02              u64 [sp + 680] = 0
190295: 95 17 38 02              a0 = sp + 0x238
190299: 95 18 90 02              a1 = sp + 0x290
190303: 50 20 94 0b e0 67 fd     ra = 2964, jump @1491
      :                          @12963 [@dyn 1482]
190310: 82 16 40 02              s1 = u64 [sp + 0x240]
190314: 82 1b 48 02              a4 = u64 [sp + 0x248]
190318: 82 17 38 02              a0 = u64 [sp + 0x238]
190322: 7b 17 70                 u64 [sp + 0x70] = a0
190325: 33 07 02                 a0 = 0x2
190328: 33 08                    a1 = 0
190330: 33 09                    a2 = 0
190332: 64 6a                    a3 = s1
190334: 33 00 96 0b              ra = 0xb96
190338: 0a 64                    ecalli 100 // 'log'
190340: 01                       fallthrough
      :                          @12964 [@dyn 1483]
190341: 82 17 68                 a0 = u64 [sp + 0x68]
190344: 82 18 70                 a1 = u64 [sp + 0x70]
190347: 64 8c                    a5 = a1
190349: c8 87 07                 a0 = a0 + a1
190352: 53 37 00 00 ff 36 fa     jump @12856 if a0 <u 4294901760
      :                          @12965
190359: 33 07 c0 22 03           a0 = 0x322c0
190364: 95 77 00 00 01           a0 = a0 + 0x10000
190369: 01                       fallthrough
      :                          @12966
190370: 82 78                    a1 = u64 [a0]
190372: c9 87 09                 a2 = a0 - a1
190375: ab 69 1f fa              jump @12856 if a2 != s1
      :                          @12967
190379: c9 c8 09                 a2 = a1 - a5
190382: 01                       fallthrough
      :                          @12968
190383: 82 7a                    a3 = u64 [a0]
190385: ab 8a f1                 jump @12966 if a3 != a1
      :                          @12969
190388: 7b 79                    u64 [a0] = a2
190390: 33 0b                    a4 = 0
190392: 01                       fallthrough
      :                          @12970
190393: ab 8a e9                 jump @12966 if a3 != a1
      :                          @12971
190396: 28 0a fa                 jump @12856
      :                          @12972
190399: 64 89                    a2 = a1
190401: 01                       fallthrough
      :                          @12973
190402: 7b 19 e0 01              u64 [sp + 0x1e0] = a2
190406: 95 17 c8 01              a0 = sp + 0x1c8
190410: 7b 17 90 02              u64 [sp + 0x290] = a0
190414: 33 07 28 0c              a0 = 0xc28
190418: 7b 17 98 02              u64 [sp + 0x298] = a0
190422: 95 18 20 01              a1 = sp + 0x120
190426: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
190430: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
190434: 95 18 e0 01              a1 = sp + 0x1e0
190438: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
190442: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
190446: 33 07 50 1f 01           a0 = 0x11f50
190451: 7b 17 38 02              u64 [sp + 0x238] = a0
190455: 49 21 40 02 03           u64 [sp + 576] = 0x3
190460: 49 21 58 02              u64 [sp + 600] = 0
190464: 95 18 90 02              a1 = sp + 0x290
190468: 7b 18 48 02              u64 [sp + 0x248] = a1
190472: 49 21 50 02 03           u64 [sp + 592] = 0x3
190477: 95 17 08 02              a0 = sp + 0x208
190481: 95 18 38 02              a1 = sp + 0x238
190485: 50 20 98 0b 2a 67 fd     ra = 2968, jump @1491
      :                          @12974 [@dyn 1484]
190492: 82 16 10 02              s1 = u64 [sp + 0x210]
190496: 82 1b 18 02              a4 = u64 [sp + 0x218]
190500: 82 17 08 02              a0 = u64 [sp + 0x208]
190504: 7b 17 70                 u64 [sp + 0x70] = a0
190507: 33 07 02                 a0 = 0x2
190510: 33 08                    a1 = 0
190512: 33 09                    a2 = 0
190514: 64 6a                    a3 = s1
190516: 33 00 9a 0b              ra = 0xb9a
190520: 0a 64                    ecalli 100 // 'log'
190522: 01                       fallthrough
      :                          @12975 [@dyn 1485]
190523: 82 1c 70                 a5 = u64 [sp + 0x70]
190526: 82 17 68                 a0 = u64 [sp + 0x68]
190529: c8 c7 07                 a0 = a0 + a5
190532: 53 37 00 00 ff 82 f9     jump @12856 if a0 <u 4294901760
      :                          @12976
190539: 33 07 c0 22 03           a0 = 0x322c0
190544: 95 77 00 00 01           a0 = a0 + 0x10000
190549: 01                       fallthrough
      :                          @12977
190550: 82 78                    a1 = u64 [a0]
190552: c9 87 09                 a2 = a0 - a1
190555: ab 69 6b f9              jump @12856 if a2 != s1
      :                          @12978
190559: c9 c8 09                 a2 = a1 - a5
190562: 01                       fallthrough
      :                          @12979
190563: 82 7a                    a3 = u64 [a0]
190565: ab 8a f1                 jump @12977 if a3 != a1
      :                          @12980
190568: 7b 79                    u64 [a0] = a2
190570: 33 0b                    a4 = 0
190572: 01                       fallthrough
      :                          @12981
190573: ab 8a e9                 jump @12977 if a3 != a1
      :                          @12982
190576: 28 56 f9                 jump @12856
      :                          @12983
190579: 7b 17 20 01              u64 [sp + 0x120] = a0
190583: 51 07 98 0b              jump @13277 if a0 == 0
      :                          @12984
190587: 33 07                    a0 = 0
190589: 01                       fallthrough
      :                          @12985
190590: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
190594: 95 17 b0 01              a0 = sp + 0x1b0
190598: 7b 17 90 02              u64 [sp + 0x290] = a0
190602: 33 07 28 0c              a0 = 0xc28
190606: 7b 17 98 02              u64 [sp + 0x298] = a0
190610: 95 18 c8 01              a1 = sp + 0x1c8
190614: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
190618: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
190622: 95 18 20 01              a1 = sp + 0x120
190626: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
190630: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
190634: 95 18 e0 01              a1 = sp + 0x1e0
190638: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
190642: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
190646: 33 07 60 25 01           a0 = 0x12560
190651: 7b 17 38 02              u64 [sp + 0x238] = a0
190655: 49 21 40 02 04           u64 [sp + 576] = 0x4
190660: 49 21 58 02              u64 [sp + 600] = 0
190664: 95 18 90 02              a1 = sp + 0x290
190668: 7b 18 48 02              u64 [sp + 0x248] = a1
190672: 49 21 50 02 04           u64 [sp + 592] = 0x4
190677: 95 17 08 02              a0 = sp + 0x208
190681: 95 18 38 02              a1 = sp + 0x238
190685: 50 20 9c 0b 62 66 fd     ra = 2972, jump @1491
      :                          @12986 [@dyn 1486]
190692: 82 16 10 02              s1 = u64 [sp + 0x210]
190696: 82 1b 18 02              a4 = u64 [sp + 0x218]
190700: 82 17 08 02              a0 = u64 [sp + 0x208]
190704: 7b 17 70                 u64 [sp + 0x70] = a0
190707: 33 07 02                 a0 = 0x2
190710: 33 08                    a1 = 0
190712: 33 09                    a2 = 0
190714: 64 6a                    a3 = s1
190716: 33 00 9e 0b              ra = 0xb9e
190720: 0a 64                    ecalli 100 // 'log'
190722: 01                       fallthrough
      :                          @12987 [@dyn 1487]
190723: 82 1c 70                 a5 = u64 [sp + 0x70]
190726: 82 17 68                 a0 = u64 [sp + 0x68]
190729: c8 c7 07                 a0 = a0 + a5
190732: 53 37 00 00 ff ba f8     jump @12856 if a0 <u 4294901760
      :                          @12988
190739: 33 07 c0 22 03           a0 = 0x322c0
190744: 95 77 00 00 01           a0 = a0 + 0x10000
190749: 01                       fallthrough
      :                          @12989
190750: 82 78                    a1 = u64 [a0]
190752: c9 87 09                 a2 = a0 - a1
190755: ab 69 a3 f8              jump @12856 if a2 != s1
      :                          @12990
190759: c9 c8 09                 a2 = a1 - a5
190762: 01                       fallthrough
      :                          @12991
190763: 82 7a                    a3 = u64 [a0]
190765: ab 8a f1                 jump @12989 if a3 != a1
      :                          @12992
190768: 7b 79                    u64 [a0] = a2
190770: 33 0b                    a4 = 0
190772: 01                       fallthrough
      :                          @12993
190773: ab 8a e9                 jump @12989 if a3 != a1
      :                          @12994
190776: 28 8e f8                 jump @12856
      :                          @12995
190779: 33 07                    a0 = 0
190781: 01                       fallthrough
      :                          @12996
190782: 7b 17 20 01              u64 [sp + 0x120] = a0
190786: 95 17 b0 01              a0 = sp + 0x1b0
190790: 7b 17 38 02              u64 [sp + 0x238] = a0
190794: 33 07 8e 0c              a0 = 0xc8e
190798: 7b 17 40 02              u64 [sp + 0x240] = a0
190802: 95 17 c8 01              a0 = sp + 0x1c8
190806: 7b 17 48 02              u64 [sp + 0x248] = a0
190810: 33 07 28 0c              a0 = 0xc28
190814: 7b 17 50 02              u64 [sp + 0x250] = a0
190818: 95 18 20 01              a1 = sp + 0x120
190822: 7b 18 58 02              u64 [sp + 0x258] = a1
190826: 7b 17 60 02              u64 [sp + 0x260] = a0
190830: 49 21 90 02 02           u64 [sp + 656] = 0x2
190835: 49 21 a0 02              u64 [sp + 672] = 0
190839: 49 21 a8 02 22           u64 [sp + 680] = 0x22
190844: 49 21 b0 02              u64 [sp + 688] = 0
190848: 14 09 20 00 00 00 0c 00 00 00 a2 = 0xc00000020
190858: 7b 19 b8 02              u64 [sp + 0x2b8] = a2
190862: 46 21 c0 02 03           u8 [sp + 704] = 0x3
190867: 49 21 c8 02 02           u64 [sp + 712] = 0x2
190872: 49 21 d8 02 02           u64 [sp + 728] = 0x2
190877: 49 21 e8 02 01           u64 [sp + 744] = 0x1
190882: 49 21 f0 02 20           u64 [sp + 752] = 0x20
190887: 46 21 f8 02 03           u8 [sp + 760] = 0x3
190892: 49 21 00 03 02           u64 [sp + 768] = 0x2
190897: 49 21 10 03 02           u64 [sp + 784] = 0x2
190902: 49 21 20 03 02           u64 [sp + 800] = 0x2
190907: 49 21 28 03 20           u64 [sp + 808] = 0x20
190912: 46 21 30 03 03           u8 [sp + 816] = 0x3
190917: 33 08 f8 26 01           a1 = 0x126f8
190922: 7b 18 08 02              u64 [sp + 0x208] = a1
190926: 49 21 10 02 03           u64 [sp + 528] = 0x3
190931: 95 18 90 02              a1 = sp + 0x290
190935: 7b 18 28 02              u64 [sp + 0x228] = a1
190939: 49 21 30 02 03           u64 [sp + 560] = 0x3
190944: 95 18 38 02              a1 = sp + 0x238
190948: 7b 18 18 02              u64 [sp + 0x218] = a1
190952: 49 21 20 02 03           u64 [sp + 544] = 0x3
190957: 95 17 e0 01              a0 = sp + 0x1e0
190961: 95 18 08 02              a1 = sp + 0x208
190965: 50 20 a0 0b 4a 65 fd     ra = 2976, jump @1491
      :                          @12997 [@dyn 1488]
190972: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
190976: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
190980: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
190984: 7b 17 70                 u64 [sp + 0x70] = a0
190987: 33 07 02                 a0 = 0x2
190990: 33 08                    a1 = 0
190992: 33 09                    a2 = 0
190994: 64 6a                    a3 = s1
190996: 33 00 a2 0b              ra = 0xba2
191000: 0a 64                    ecalli 100 // 'log'
191002: 01                       fallthrough
      :                          @12998 [@dyn 1489]
191003: 82 1c 70                 a5 = u64 [sp + 0x70]
191006: 82 17 68                 a0 = u64 [sp + 0x68]
191009: c8 c7 07                 a0 = a0 + a5
191012: 53 37 00 00 ff a2 f7     jump @12856 if a0 <u 4294901760
      :                          @12999
191019: 33 07 c0 22 03           a0 = 0x322c0
191024: 95 77 00 00 01           a0 = a0 + 0x10000
191029: 01                       fallthrough
      :                          @13000
191030: 82 78                    a1 = u64 [a0]
191032: c9 87 09                 a2 = a0 - a1
191035: ab 69 8b f7              jump @12856 if a2 != s1
      :                          @13001
191039: c9 c8 09                 a2 = a1 - a5
191042: 01                       fallthrough
      :                          @13002
191043: 82 7a                    a3 = u64 [a0]
191045: ab 8a f1                 jump @13000 if a3 != a1
      :                          @13003
191048: 7b 79                    u64 [a0] = a2
191050: 33 0b                    a4 = 0
191052: 01                       fallthrough
      :                          @13004
191053: ab 8a e9                 jump @13000 if a3 != a1
      :                          @13005
191056: 28 76 f7                 jump @12856
      :                          @13006
191059: 64 8a                    a3 = a1
191061: 01                       fallthrough
      :                          @13007
191062: 7b 1a 70                 u64 [sp + 0x70] = a3
191065: 64 a7                    a0 = a3
191067: 64 68                    a1 = s1
191069: 50 20 a4 0b cd aa fd     ra = 2980, jump @2604
      :                          @13008 [@dyn 1490]
191076: 7a 17 88 02              u32 [sp + 0x288] = a0
191080: 51 06 23 02              jump @13044 if s1 == 0
      :                          @13009
191084: 33 0b                    a4 = 0
191086: 33 0a 01                 a3 = 0x1
191089: 14 02 71 80 07 80 00 00 00 00 t0 = 0x80078071
191099: 33 08 f1 ff 00           a1 = 0xfff1
191104: 64 69                    a2 = s1
191106: 82 13 70                 t1 = u64 [sp + 0x70]
191109: 64 3c                    a5 = t1
191111: 01                       fallthrough
      :                          @13010
191112: 7c c7                    a0 = u8 [a5]
191114: 95 cc 01                 a5 = a5 + 0x1
191117: c8 a7 07                 a0 = a0 + a3
191120: 97 7a 20                 a3 = a0 << 0x20
191123: 98 aa 20                 a3 = a3 >> 0x20
191126: ca 2a 0a                 a3 = a3 * t0
191129: 98 aa 2f                 a3 = a3 >> 0x2f
191132: ca 8a 0a                 a3 = a3 * a1
191135: bf a7 0a                 i32 a3 = a0 - a3
191138: c8 ab 0b                 a4 = a4 + a3
191141: 97 b7 20                 a0 = a4 << 0x20
191144: 98 77 20                 a0 = a0 >> 0x20
191147: ca 27 07                 a0 = a0 * t0
191150: 98 77 2f                 a0 = a0 >> 0x2f
191153: ca 87 07                 a0 = a0 * a1
191156: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
191159: bf 7b 0b                 i32 a4 = a4 - a0
191162: 52 09 ce                 jump @13010 if a2 != 0
      :                          @13011
191165: 97 bb 10                 a4 = a4 << 0x10
191168: d4 ba 0a                 a3 = a3 | a4
191171: 7a 1a 8c 02              u32 [sp + 0x28c] = a3
191175: 33 07 c5 9d 1c 81        a0 = 0xffffffff811c9dc5
191181: 33 08 93 01 00 01        a1 = 0x1000193
191187: 01                       fallthrough
      :                          @13012
191188: 7c 39                    a2 = u8 [t1]
191190: 95 33 01                 t1 = t1 + 0x1
191193: d3 97 07                 a0 = a0 ^ a2
191196: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
191199: c0 87 07                 i32 a0 = a0 * a1
191202: 52 06 f2                 jump @13012 if s1 != 0
      :                          @13013
191205: 28 b2 01                 jump @13045
      :                          @13014
191208: 33 07 68 2c 01           a0 = 0x12c68
191213: 7b 17 90 02              u64 [sp + 0x290] = a0
191217: 49 21 98 02 01           u64 [sp + 664] = 0x1
191222: 49 21 b0 02              u64 [sp + 688] = 0
191226: 33 07 f0 2f 01           a0 = 0x12ff0
191231: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
191235: 49 21 a8 02              u64 [sp + 680] = 0
191239: 95 17 38 02              a0 = sp + 0x238
191243: 95 18 90 02              a1 = sp + 0x290
191247: 50 20 a6 0b 30 64 fd     ra = 2982, jump @1491
      :                          @13015 [@dyn 1491]
191254: 82 16 40 02              s1 = u64 [sp + 0x240]
191258: 82 1b 48 02              a4 = u64 [sp + 0x248]
191262: 82 17 38 02              a0 = u64 [sp + 0x238]
191266: 7b 17 70                 u64 [sp + 0x70] = a0
191269: 33 07 02                 a0 = 0x2
191272: 33 08                    a1 = 0
191274: 33 09                    a2 = 0
191276: 64 6a                    a3 = s1
191278: 33 00 a8 0b              ra = 0xba8
191282: 0a 64                    ecalli 100 // 'log'
191284: 01                       fallthrough
      :                          @13016 [@dyn 1492]
191285: 82 17 68                 a0 = u64 [sp + 0x68]
191288: 82 18 70                 a1 = u64 [sp + 0x70]
191291: 64 8c                    a5 = a1
191293: c8 87 07                 a0 = a0 + a1
191296: 53 37 00 00 ff 86 f6     jump @12856 if a0 <u 4294901760
      :                          @13017
191303: 33 07 c0 22 03           a0 = 0x322c0
191308: 95 77 00 00 01           a0 = a0 + 0x10000
191313: 01                       fallthrough
      :                          @13018
191314: 82 78                    a1 = u64 [a0]
191316: c9 87 09                 a2 = a0 - a1
191319: ab 69 6f f6              jump @12856 if a2 != s1
      :                          @13019
191323: c9 c8 09                 a2 = a1 - a5
191326: 01                       fallthrough
      :                          @13020
191327: 82 7a                    a3 = u64 [a0]
191329: ab 8a f1                 jump @13018 if a3 != a1
      :                          @13021
191332: 7b 79                    u64 [a0] = a2
191334: 33 0b                    a4 = 0
191336: 01                       fallthrough
      :                          @13022
191337: ab 8a e9                 jump @13018 if a3 != a1
      :                          @13023
191340: 28 5a f6                 jump @12856
      :                          @13024
191343: 95 17 20 01              a0 = sp + 0x120
191347: 7b 17 08 02              u64 [sp + 0x208] = a0
191351: 33 07 28 0c              a0 = 0xc28
191355: 7b 17 10 02              u64 [sp + 0x210] = a0
191359: 33 07 88 2c 01           a0 = 0x12c88
191364: 7b 17 90 02              u64 [sp + 0x290] = a0
191368: 49 21 98 02 02           u64 [sp + 664] = 0x2
191373: 49 21 b0 02              u64 [sp + 688] = 0
191377: 95 17 08 02              a0 = sp + 0x208
191381: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
191385: 49 21 a8 02 01           u64 [sp + 680] = 0x1
191390: 95 17 38 02              a0 = sp + 0x238
191394: 95 18 90 02              a1 = sp + 0x290
191398: 50 20 aa 0b 99 63 fd     ra = 2986, jump @1491
      :                          @13025 [@dyn 1493]
191405: 82 16 40 02              s1 = u64 [sp + 0x240]
191409: 82 1b 48 02              a4 = u64 [sp + 0x248]
191413: 82 17 38 02              a0 = u64 [sp + 0x238]
191417: 7b 17 70                 u64 [sp + 0x70] = a0
191420: 33 07 02                 a0 = 0x2
191423: 33 08                    a1 = 0
191425: 33 09                    a2 = 0
191427: 64 6a                    a3 = s1
191429: 33 00 ac 0b              ra = 0xbac
191433: 0a 64                    ecalli 100 // 'log'
191435: 01                       fallthrough
      :                          @13026 [@dyn 1494]
191436: 82 1c 70                 a5 = u64 [sp + 0x70]
191439: 82 17 68                 a0 = u64 [sp + 0x68]
191442: c8 c7 07                 a0 = a0 + a5
191445: 53 37 00 00 ff f1 f5     jump @12856 if a0 <u 4294901760
      :                          @13027
191452: 33 07 c0 22 03           a0 = 0x322c0
191457: 95 77 00 00 01           a0 = a0 + 0x10000
191462: 01                       fallthrough
      :                          @13028
191463: 82 78                    a1 = u64 [a0]
191465: c9 87 09                 a2 = a0 - a1
191468: ab 69 da f5              jump @12856 if a2 != s1
      :                          @13029
191472: c9 c8 09                 a2 = a1 - a5
191475: 01                       fallthrough
      :                          @13030
191476: 82 7a                    a3 = u64 [a0]
191478: ab 8a f1                 jump @13028 if a3 != a1
      :                          @13031
191481: 7b 79                    u64 [a0] = a2
191483: 33 0b                    a4 = 0
191485: 01                       fallthrough
      :                          @13032
191486: ab 8a e9                 jump @13028 if a3 != a1
      :                          @13033
191489: 28 c5 f5                 jump @12856
      :                          @13034
191492: 33 07 68 2c 01           a0 = 0x12c68
191497: 7b 17 90 02              u64 [sp + 0x290] = a0
191501: 49 21 98 02 01           u64 [sp + 664] = 0x1
191506: 49 21 b0 02              u64 [sp + 688] = 0
191510: 33 07 f0 2f 01           a0 = 0x12ff0
191515: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
191519: 49 21 a8 02              u64 [sp + 680] = 0
191523: 95 17 38 02              a0 = sp + 0x238
191527: 95 18 90 02              a1 = sp + 0x290
191531: 50 20 ae 0b 14 63 fd     ra = 2990, jump @1491
      :                          @13035 [@dyn 1495]
191538: 82 16 40 02              s1 = u64 [sp + 0x240]
191542: 82 1b 48 02              a4 = u64 [sp + 0x248]
191546: 82 17 38 02              a0 = u64 [sp + 0x238]
191550: 7b 17 70                 u64 [sp + 0x70] = a0
191553: 33 07 02                 a0 = 0x2
191556: 33 08                    a1 = 0
191558: 33 09                    a2 = 0
191560: 64 6a                    a3 = s1
191562: 33 00 b0 0b              ra = 0xbb0
191566: 0a 64                    ecalli 100 // 'log'
191568: 01                       fallthrough
      :                          @13036 [@dyn 1496]
191569: 82 17 68                 a0 = u64 [sp + 0x68]
191572: 82 18 70                 a1 = u64 [sp + 0x70]
191575: 64 8c                    a5 = a1
191577: c8 87 07                 a0 = a0 + a1
191580: 53 37 00 00 ff 6a f5     jump @12856 if a0 <u 4294901760
      :                          @13037
191587: 33 07 c0 22 03           a0 = 0x322c0
191592: 95 77 00 00 01           a0 = a0 + 0x10000
191597: 01                       fallthrough
      :                          @13038
191598: 82 78                    a1 = u64 [a0]
191600: c9 87 09                 a2 = a0 - a1
191603: ab 69 53 f5              jump @12856 if a2 != s1
      :                          @13039
191607: c9 c8 09                 a2 = a1 - a5
191610: 01                       fallthrough
      :                          @13040
191611: 82 7a                    a3 = u64 [a0]
191613: ab 8a f1                 jump @13038 if a3 != a1
      :                          @13041
191616: 7b 79                    u64 [a0] = a2
191618: 33 0b                    a4 = 0
191620: 01                       fallthrough
      :                          @13042
191621: ab 8a e9                 jump @13038 if a3 != a1
      :                          @13043
191624: 28 3e f5                 jump @12856
      :                          @13044
191627: 48 21 8c 02 01           u32 [sp + 652] = 0x1
191632: 33 07 c5 9d 1c 81        a0 = 0xffffffff811c9dc5
191638: 01                       fallthrough
      :                          @13045
191639: 7a 17 10 01              u32 [sp + 0x110] = a0
191643: 3a 08 78 12 03           a1 = u64 [0x31278]
191648: 97 89 0d                 a2 = a1 << 0xd
191651: d3 98 08                 a1 = a1 ^ a2
191654: 98 89 07                 a2 = a1 >> 0x7
191657: d3 98 08                 a1 = a1 ^ a2
191660: 97 89 11                 a2 = a1 << 0x11
191663: d3 98 08                 a1 = a1 ^ a2
191666: 3e 08 78 12 03           u64 [0x31278] = a1
191671: 87 87 1d dd 6c 4f        i32 a0 = a1 * 0x4f6cdd1d
191677: 8b 78 10                 i32 a1 = a0 >> 0x10
191680: d3 87 07                 a0 = a0 ^ a1
191683: 87 77 6b ca eb 85        i32 a0 = a0 * 0xffffffff85ebca6b
191689: 8b 78 0d                 i32 a1 = a0 >> 0xd
191692: d3 78 08                 a1 = a1 ^ a0
191695: 82 17 30 01              a0 = u64 [sp + 0x130]
191699: 87 88 35 ae b2 c2        i32 a1 = a1 * 0xffffffffc2b2ae35
191705: 8b 89 10                 i32 a2 = a1 >> 0x10
191708: d3 98 08                 a1 = a1 ^ a2
191711: 7a 18 b0 01              u32 [sp + 0x1b0] = a1
191715: 51 07 2b                 jump @13049 if a0 == 0
      :                          @13046
191718: 82 19 28 01              a2 = u64 [sp + 0x128]
191722: 33 08                    a1 = 0
191724: 01                       fallthrough
      :                          @13047
191725: 7c 9a                    a3 = u8 [a2]
191727: 95 99 01                 a2 = a2 + 0x1
191730: be a8 08                 i32 a1 = a1 + a3
191733: 97 8a 0a                 a3 = a1 << 0xa
191736: be a8 08                 i32 a1 = a1 + a3
191739: 8b 8a 06                 i32 a3 = a1 >> 0x6
191742: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
191745: d3 a8 08                 a1 = a1 ^ a3
191748: 52 07 e9                 jump @13047 if a0 != 0
      :                          @13048
191751: 97 87 03                 a0 = a1 << 0x3
191754: be 87 07                 i32 a0 = a0 + a1
191757: 01                       fallthrough
      :                          @13049
191758: 8b 78 0b                 i32 a1 = a0 >> 0xb
191761: d3 87 07                 a0 = a0 ^ a1
191764: 97 78 0f                 a1 = a0 << 0xf
191767: be 87 07                 i32 a0 = a0 + a1
191770: 7a 17 c8 01              u32 [sp + 0x1c8] = a0
191774: 95 17 88 02              a0 = sp + 0x288
191778: 7b 17 38 02              u64 [sp + 0x238] = a0
191782: 33 07 8a 0c              a0 = 0xc8a
191786: 7b 17 40 02              u64 [sp + 0x240] = a0
191790: 95 18 8c 02              a1 = sp + 0x28c
191794: 7b 18 48 02              u64 [sp + 0x248] = a1
191798: 7b 17 50 02              u64 [sp + 0x250] = a0
191802: 95 18 10 01              a1 = sp + 0x110
191806: 7b 18 58 02              u64 [sp + 0x258] = a1
191810: 7b 17 60 02              u64 [sp + 0x260] = a0
191814: 95 18 b0 01              a1 = sp + 0x1b0
191818: 7b 18 68 02              u64 [sp + 0x268] = a1
191822: 7b 17 70 02              u64 [sp + 0x270] = a0
191826: 95 18 c8 01              a1 = sp + 0x1c8
191830: 7b 18 78 02              u64 [sp + 0x278] = a1
191834: 7b 17 80 02              u64 [sp + 0x280] = a0
191838: 49 21 90 02 02           u64 [sp + 656] = 0x2
191843: 49 21 a0 02              u64 [sp + 672] = 0
191847: 49 21 a8 02 08           u64 [sp + 680] = 0x8
191852: 49 21 b0 02              u64 [sp + 688] = 0
191856: 14 09 20 00 00 00 08 00 00 00 a2 = 0x800000020
191866: 7b 19 b8 02              u64 [sp + 0x2b8] = a2
191870: 46 21 c0 02 03           u8 [sp + 704] = 0x3
191875: 49 21 c8 02 02           u64 [sp + 712] = 0x2
191880: 49 21 d8 02              u64 [sp + 728] = 0
191884: 49 21 e0 02 08           u64 [sp + 736] = 0x8
191889: 49 21 e8 02 01           u64 [sp + 744] = 0x1
191894: 7b 19 f0 02              u64 [sp + 0x2f0] = a2
191898: 46 21 f8 02 03           u8 [sp + 760] = 0x3
191903: 49 21 00 03 02           u64 [sp + 768] = 0x2
191908: 49 21 10 03              u64 [sp + 784] = 0
191912: 49 21 18 03 08           u64 [sp + 792] = 0x8
191917: 49 21 20 03 02           u64 [sp + 800] = 0x2
191922: 7b 19 28 03              u64 [sp + 0x328] = a2
191926: 46 21 30 03 03           u8 [sp + 816] = 0x3
191931: 49 21 38 03 02           u64 [sp + 824] = 0x2
191936: 49 21 48 03              u64 [sp + 840] = 0
191940: 49 21 50 03 08           u64 [sp + 848] = 0x8
191945: 49 21 58 03 03           u64 [sp + 856] = 0x3
191950: 7b 19 60 03              u64 [sp + 0x360] = a2
191954: 46 21 68 03 03           u8 [sp + 872] = 0x3
191959: 49 21 70 03 02           u64 [sp + 880] = 0x2
191964: 49 21 80 03              u64 [sp + 896] = 0
191968: 49 21 88 03 08           u64 [sp + 904] = 0x8
191973: 49 21 90 03 04           u64 [sp + 912] = 0x4
191978: 7b 19 98 03              u64 [sp + 0x398] = a2
191982: 46 21 a0 03 03           u8 [sp + 928] = 0x3
191987: 33 07 20 2a 01           a0 = 0x12a20
191992: 7b 17 08 02              u64 [sp + 0x208] = a0
191996: 49 21 10 02 05           u64 [sp + 528] = 0x5
192001: 95 18 90 02              a1 = sp + 0x290
192005: 7b 18 28 02              u64 [sp + 0x228] = a1
192009: 49 21 30 02 05           u64 [sp + 560] = 0x5
192014: 95 18 38 02              a1 = sp + 0x238
192018: 7b 18 18 02              u64 [sp + 0x218] = a1
192022: 49 21 20 02 05           u64 [sp + 544] = 0x5
192027: 95 17 e0 01              a0 = sp + 0x1e0
192031: 95 18 08 02              a1 = sp + 0x208
192035: 50 20 b2 0b 1c 61 fd     ra = 2994, jump @1491
      :                          @13050 [@dyn 1497]
192042: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
192046: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
192050: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
192054: 7b 17 70                 u64 [sp + 0x70] = a0
192057: 33 07 02                 a0 = 0x2
192060: 33 08                    a1 = 0
192062: 33 09                    a2 = 0
192064: 64 6a                    a3 = s1
192066: 33 00 b4 0b              ra = 0xbb4
192070: 0a 64                    ecalli 100 // 'log'
192072: 01                       fallthrough
      :                          @13051 [@dyn 1498]
192073: 82 1c 70                 a5 = u64 [sp + 0x70]
192076: 82 17 68                 a0 = u64 [sp + 0x68]
192079: c8 c7 07                 a0 = a0 + a5
192082: 53 37 00 00 ff 25        jump @13057 if a0 <u 4294901760
      :                          @13052
192088: 33 07 c0 22 03           a0 = 0x322c0
192093: 95 77 00 00 01           a0 = a0 + 0x10000
192098: 01                       fallthrough
      :                          @13053
192099: 82 78                    a1 = u64 [a0]
192101: c9 87 09                 a2 = a0 - a1
192104: ab 69 0f                 jump @13057 if a2 != s1
      :                          @13054
192107: c9 c8 09                 a2 = a1 - a5
192110: 01                       fallthrough
      :                          @13055
192111: 82 7a                    a3 = u64 [a0]
192113: ab 8a f2                 jump @13053 if a3 != a1
      :                          @13056
192116: 7b 79                    u64 [a0] = a2
192118: 01                       fallthrough
      :                          @13057
192119: 82 17 20 01              a0 = u64 [sp + 0x120]
192123: 51 07 4b f3              jump @12856 if a0 == 0
      :                          @13058
192127: 56 37 00 00 01 47 f3     jump @12856 if a0 >u 65536
      :                          @13059
192134: 82 18 28 01              a1 = u64 [sp + 0x128]
192138: 33 0a c0 22 03           a3 = 0x322c0
192143: 95 a9 00 00 01           a2 = a3 + 0x10000
192148: 01                       fallthrough
      :                          @13060
192149: 82 9a                    a3 = u64 [a2]
192151: c9 a9 0b                 a4 = a2 - a3
192154: ab 8b 2c f3              jump @12856 if a4 != a1
      :                          @13061
192158: c9 7a 0b                 a4 = a3 - a0
192161: 01                       fallthrough
      :                          @13062
192162: 82 9c                    a5 = u64 [a2]
192164: ab ac f1                 jump @13060 if a5 != a3
      :                          @13063
192167: 7b 9b                    u64 [a2] = a4
192169: 33 06                    s1 = 0
192171: 01                       fallthrough
      :                          @13064
192172: ab ac e9                 jump @13060 if a5 != a3
      :                          @13065
192175: 28 17 f3                 jump @12856
      :                          @13066
192178: 95 17 e0 01              a0 = sp + 0x1e0
192182: 95 18 08 02              a1 = sp + 0x208
192186: 50 20 b6 0b 94 15 fe     ra = 2998, jump @5225
      :                          @13067 [@dyn 1499]
192193: 78 17 c8 01              u8 [sp + 0x1c8] = a0
192197: 95 17 c8 01              a0 = sp + 0x1c8
192201: 7b 17 20 01              u64 [sp + 0x120] = a0
192205: 33 07 80 0c              a0 = 0xc80
192209: 7b 17 28 01              u64 [sp + 0x128] = a0
192213: 33 07 e0 09 01           a0 = 0x109e0
192218: 7b 17 90 02              u64 [sp + 0x290] = a0
192222: 49 21 98 02 01           u64 [sp + 664] = 0x1
192227: 49 21 b0 02              u64 [sp + 688] = 0
192231: 95 18 20 01              a1 = sp + 0x120
192235: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
192239: 49 21 a8 02 01           u64 [sp + 680] = 0x1
192244: 95 17 38 02              a0 = sp + 0x238
192248: 95 18 90 02              a1 = sp + 0x290
192252: 50 20 b8 0b 43 60 fd     ra = 3000, jump @1491
      :                          @13068 [@dyn 1500]
192259: 82 16 40 02              s1 = u64 [sp + 0x240]
192263: 82 1b 48 02              a4 = u64 [sp + 0x248]
192267: 82 17 38 02              a0 = u64 [sp + 0x238]
192271: 7b 17 70                 u64 [sp + 0x70] = a0
192274: 33 07 02                 a0 = 0x2
192277: 33 08                    a1 = 0
192279: 33 09                    a2 = 0
192281: 64 6a                    a3 = s1
192283: 33 00 ba 0b              ra = 0xbba
192287: 0a 64                    ecalli 100 // 'log'
192289: 01                       fallthrough
      :                          @13069 [@dyn 1501]
192290: 82 1c 70                 a5 = u64 [sp + 0x70]
192293: 82 17 68                 a0 = u64 [sp + 0x68]
192296: c8 c7 07                 a0 = a0 + a5
192299: 33 08 00 00 ff           a1 = 0xffffffffffff0000
192304: ac 87 2f                 jump @13075 if a0 <u a1
      :                          @13070
192307: 33 07 c0 22 03           a0 = 0x322c0
192312: 95 77 00 00 01           a0 = a0 + 0x10000
192317: 01                       fallthrough
      :                          @13071
192318: 82 78                    a1 = u64 [a0]
192320: c9 87 09                 a2 = a0 - a1
192323: ab 69 1c                 jump @13075 if a2 != s1
      :                          @13072
192326: c9 c8 09                 a2 = a1 - a5
192329: 01                       fallthrough
      :                          @13073
192330: 82 7a                    a3 = u64 [a0]
192332: ab 8a f2                 jump @13071 if a3 != a1
      :                          @13074
192335: 7b 79                    u64 [a0] = a2
192337: 33 0b                    a4 = 0
192339: 95 17 08 02              a0 = sp + 0x208
192343: 33 00 bc 0b              ra = 0xbbc
192347: 28 60 1c fd              jump @209
      :                          @13075
192351: 95 17 08 02              a0 = sp + 0x208
192355: 50 20 bc 0b 58 1c fd     ra = 3004, jump @209
      :                          @13076 [@dyn 1502]
192362: 28 89 3d ff              jump @10533
      :                          @13077
192366: 33 09 02                 a2 = 0x2
192369: 83 aa                    i32 a3 = a3 + 0
192371: 33 0b 02                 a4 = 0x2
192374: 01                       fallthrough
      :                          @13078
192375: 64 8c                    a5 = a1
192377: d8 ab 08                 a1 = a4 <u a3
192380: 85 86 01                 s1 = a1 ^ 0x1
192383: be 8b 0b                 i32 a4 = a4 + a1
192386: d8 ba 08                 a1 = a3 <u a4
192389: d4 86 06                 s1 = s1 | a1
192392: c8 c9 08                 a1 = a2 + a5
192395: 64 c9                    a2 = a5
192397: 51 06 ea                 jump @13078 if s1 == 0
      :                          @13079
192400: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
192404: 95 18 20 01              a1 = sp + 0x120
192408: 7b 18 38 02              u64 [sp + 0x238] = a1
192412: 33 08 5e 0c              a1 = 0xc5e
192416: 7b 18 40 02              u64 [sp + 0x240] = a1
192420: 95 18 e0 01              a1 = sp + 0x1e0
192424: 7b 18 48 02              u64 [sp + 0x248] = a1
192428: 33 08 28 0c              a1 = 0xc28
192432: 7b 18 50 02              u64 [sp + 0x250] = a1
192436: 33 08 e8 05 01           a1 = 0x105e8
192441: 7b 18 90 02              u64 [sp + 0x290] = a1
192445: 7b 17 98 02              u64 [sp + 0x298] = a0
192449: 49 21 b0 02              u64 [sp + 688] = 0
192453: 95 18 38 02              a1 = sp + 0x238
192457: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
192461: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
192465: 95 17 08 02              a0 = sp + 0x208
192469: 95 18 90 02              a1 = sp + 0x290
192473: 50 20 be 0b 66 5f fd     ra = 3006, jump @1491
      :                          @13080 [@dyn 1503]
192480: 82 16 10 02              s1 = u64 [sp + 0x210]
192484: 82 1b 18 02              a4 = u64 [sp + 0x218]
192488: 82 17 08 02              a0 = u64 [sp + 0x208]
192492: 7b 17 70                 u64 [sp + 0x70] = a0
192495: 33 07 02                 a0 = 0x2
192498: 33 08                    a1 = 0
192500: 33 09                    a2 = 0
192502: 64 6a                    a3 = s1
192504: 33 00 c0 0b              ra = 0xbc0
192508: 0a 64                    ecalli 100 // 'log'
192510: 01                       fallthrough
      :                          @13081 [@dyn 1504]
192511: 82 1c 70                 a5 = u64 [sp + 0x70]
192514: 82 17 68                 a0 = u64 [sp + 0x68]
192517: c8 c7 07                 a0 = a0 + a5
192520: 53 37 00 00 ff be f1     jump @12856 if a0 <u 4294901760
      :                          @13082
192527: 33 07 c0 22 03           a0 = 0x322c0
192532: 95 77 00 00 01           a0 = a0 + 0x10000
192537: 01                       fallthrough
      :                          @13083
192538: 82 78                    a1 = u64 [a0]
192540: c9 87 09                 a2 = a0 - a1
192543: ab 69 a7 f1              jump @12856 if a2 != s1
      :                          @13084
192547: c9 c8 09                 a2 = a1 - a5
192550: 01                       fallthrough
      :                          @13085
192551: 82 7a                    a3 = u64 [a0]
192553: ab 8a f1                 jump @13083 if a3 != a1
      :                          @13086
192556: 7b 79                    u64 [a0] = a2
192558: 33 0b                    a4 = 0
192560: 01                       fallthrough
      :                          @13087
192561: ab 8a e9                 jump @13083 if a3 != a1
      :                          @13088
192564: 28 92 f1                 jump @12856
      :                          @13089
192567: 64 97                    a0 = a2
192569: 28 26                    jump @13092
      :                          @13090
192571: 33 0a                    a3 = 0
192573: 33 08 02                 a1 = 0x2
192576: 83 99                    i32 a2 = a2 + 0
192578: 01                       fallthrough
      :                          @13091
192579: 64 7b                    a4 = a0
192581: d8 98 07                 a0 = a1 <u a2
192584: 85 7c 01                 a5 = a0 ^ 0x1
192587: be 78 08                 i32 a1 = a1 + a0
192590: d8 89 07                 a0 = a2 <u a1
192593: d4 7c 0c                 a5 = a5 | a0
192596: 97 b7 01                 a0 = a4 << 0x1
192599: c8 a7 07                 a0 = a0 + a3
192602: 64 ba                    a3 = a4
192604: 51 0c e7                 jump @13091 if a5 == 0
      :                          @13092
192607: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
192611: 95 17 20 01              a0 = sp + 0x120
192615: 7b 17 38 02              u64 [sp + 0x238] = a0
192619: 33 07 5e 0c              a0 = 0xc5e
192623: 7b 17 40 02              u64 [sp + 0x240] = a0
192627: 95 17 e0 01              a0 = sp + 0x1e0
192631: 7b 17 48 02              u64 [sp + 0x248] = a0
192635: 33 07 28 0c              a0 = 0xc28
192639: 7b 17 50 02              u64 [sp + 0x250] = a0
192643: 33 07 40 06 01           a0 = 0x10640
192648: 7b 17 90 02              u64 [sp + 0x290] = a0
192652: 49 21 98 02 02           u64 [sp + 664] = 0x2
192657: 49 21 b0 02              u64 [sp + 688] = 0
192661: 95 18 38 02              a1 = sp + 0x238
192665: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
192669: 49 21 a8 02 02           u64 [sp + 680] = 0x2
192674: 95 17 08 02              a0 = sp + 0x208
192678: 95 18 90 02              a1 = sp + 0x290
192682: 50 20 c2 0b 95 5e fd     ra = 3010, jump @1491
      :                          @13093 [@dyn 1505]
192689: 82 16 10 02              s1 = u64 [sp + 0x210]
192693: 82 1b 18 02              a4 = u64 [sp + 0x218]
192697: 82 17 08 02              a0 = u64 [sp + 0x208]
192701: 7b 17 70                 u64 [sp + 0x70] = a0
192704: 33 07 02                 a0 = 0x2
192707: 33 08                    a1 = 0
192709: 33 09                    a2 = 0
192711: 64 6a                    a3 = s1
192713: 33 00 c4 0b              ra = 0xbc4
192717: 0a 64                    ecalli 100 // 'log'
192719: 01                       fallthrough
      :                          @13094 [@dyn 1506]
192720: 82 1c 70                 a5 = u64 [sp + 0x70]
192723: 82 17 68                 a0 = u64 [sp + 0x68]
192726: c8 c7 07                 a0 = a0 + a5
192729: 53 37 00 00 ff ed f0     jump @12856 if a0 <u 4294901760
      :                          @13095
192736: 33 07 c0 22 03           a0 = 0x322c0
192741: 95 77 00 00 01           a0 = a0 + 0x10000
192746: 01                       fallthrough
      :                          @13096
192747: 82 78                    a1 = u64 [a0]
192749: c9 87 09                 a2 = a0 - a1
192752: ab 69 d6 f0              jump @12856 if a2 != s1
      :                          @13097
192756: c9 c8 09                 a2 = a1 - a5
192759: 01                       fallthrough
      :                          @13098
192760: 82 7a                    a3 = u64 [a0]
192762: ab 8a f1                 jump @13096 if a3 != a1
      :                          @13099
192765: 7b 79                    u64 [a0] = a2
192767: 33 0b                    a4 = 0
192769: 01                       fallthrough
      :                          @13100
192770: ab 8a e9                 jump @13096 if a3 != a1
      :                          @13101
192773: 28 c1 f0                 jump @12856
      :                          @13102
192776: 54 38 00 00 01 09        jump @13104 if a1 <=u 65536
      :                          @13103
192782: 28 52 9f                 jump @11663
      :                          @13104
192785: 82 12 10 02              t0 = u64 [sp + 0x210]
192789: 33 0b c0 22 03           a4 = 0x322c0
192794: 95 ba 00 00 01           a3 = a4 + 0x10000
192799: 01                       fallthrough
      :                          @13105
192800: 82 ab                    a4 = u64 [a3]
192802: c9 ba 0c                 a5 = a3 - a4
192805: aa 2c 06                 jump @13107 if a5 == t0
      :                          @13106
192808: 28 38 9f                 jump @11663
      :                          @13107
192811: c9 8b 0c                 a5 = a4 - a1
192814: 01                       fallthrough
      :                          @13108
192815: 82 a6                    s1 = u64 [a3]
192817: ab b6 ef                 jump @13105 if s1 != a4
      :                          @13109
192820: 7b ac                    u64 [a3] = a5
192822: 33 09                    a2 = 0
192824: 01                       fallthrough
      :                          @13110
192825: ab b6 e7                 jump @13105 if s1 != a4
      :                          @13111
192828: 28 24 9f                 jump @11663
      :                          @13112
192831: 54 38 00 00 01 09        jump @13114 if a1 <=u 65536
      :                          @13113
192837: 28 28 9f                 jump @11665
      :                          @13114
192840: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
192844: 33 0a c0 22 03           a3 = 0x322c0
192849: 95 a9 00 00 01           a2 = a3 + 0x10000
192854: 01                       fallthrough
      :                          @13115
192855: 82 9a                    a3 = u64 [a2]
192857: c9 a9 0b                 a4 = a2 - a3
192860: aa 7b 06                 jump @13117 if a4 == a0
      :                          @13116
192863: 28 0e 9f                 jump @11665
      :                          @13117
192866: c9 8a 0b                 a4 = a3 - a1
192869: 01                       fallthrough
      :                          @13118
192870: 82 9c                    a5 = u64 [a2]
192872: ab ac ef                 jump @13115 if a5 != a3
      :                          @13119
192875: 7b 9b                    u64 [a2] = a4
192877: 33 06                    s1 = 0
192879: 01                       fallthrough
      :                          @13120
192880: ab ac e7                 jump @13115 if a5 != a3
      :                          @13121
192883: 28 fa 9e                 jump @11665
      :                          @13122
192886: 54 38 00 00 01 09        jump @13124 if a1 <=u 65536
      :                          @13123
192892: 28 ce a0                 jump @11696
      :                          @13124
192895: 82 12 10 02              t0 = u64 [sp + 0x210]
192899: 33 0b c0 22 03           a4 = 0x322c0
192904: 95 ba 00 00 01           a3 = a4 + 0x10000
192909: 01                       fallthrough
      :                          @13125
192910: 82 ab                    a4 = u64 [a3]
192912: c9 ba 0c                 a5 = a3 - a4
192915: aa 2c 06                 jump @13127 if a5 == t0
      :                          @13126
192918: 28 b4 a0                 jump @11696
      :                          @13127
192921: c9 8b 0c                 a5 = a4 - a1
192924: 01                       fallthrough
      :                          @13128
192925: 82 a6                    s1 = u64 [a3]
192927: ab b6 ef                 jump @13125 if s1 != a4
      :                          @13129
192930: 7b ac                    u64 [a3] = a5
192932: 33 09                    a2 = 0
192934: 01                       fallthrough
      :                          @13130
192935: ab b6 e7                 jump @13125 if s1 != a4
      :                          @13131
192938: 28 a0 a0                 jump @11696
      :                          @13132
192941: 54 38 00 00 01 09        jump @13134 if a1 <=u 65536
      :                          @13133
192947: 28 a4 a0                 jump @11698
      :                          @13134
192950: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
192954: 33 0a c0 22 03           a3 = 0x322c0
192959: 95 a9 00 00 01           a2 = a3 + 0x10000
192964: 01                       fallthrough
      :                          @13135
192965: 82 9a                    a3 = u64 [a2]
192967: c9 a9 0b                 a4 = a2 - a3
192970: aa 7b 06                 jump @13137 if a4 == a0
      :                          @13136
192973: 28 8a a0                 jump @11698
      :                          @13137
192976: c9 8a 0b                 a4 = a3 - a1
192979: 01                       fallthrough
      :                          @13138
192980: 82 9c                    a5 = u64 [a2]
192982: ab ac ef                 jump @13135 if a5 != a3
      :                          @13139
192985: 7b 9b                    u64 [a2] = a4
192987: 33 06                    s1 = 0
192989: 01                       fallthrough
      :                          @13140
192990: ab ac e7                 jump @13135 if a5 != a3
      :                          @13141
192993: 28 76 a0                 jump @11698
      :                          @13142
192996: 54 38 00 00 01 09        jump @13144 if a1 <=u 65536
      :                          @13143
193002: 28 8b a6                 jump @11803
      :                          @13144
193005: 82 12 10 02              t0 = u64 [sp + 0x210]
193009: 33 0b c0 22 03           a4 = 0x322c0
193014: 95 ba 00 00 01           a3 = a4 + 0x10000
193019: 01                       fallthrough
      :                          @13145
193020: 82 ab                    a4 = u64 [a3]
193022: c9 ba 0c                 a5 = a3 - a4
193025: aa 2c 06                 jump @13147 if a5 == t0
      :                          @13146
193028: 28 71 a6                 jump @11803
      :                          @13147
193031: c9 8b 0c                 a5 = a4 - a1
193034: 01                       fallthrough
      :                          @13148
193035: 82 a6                    s1 = u64 [a3]
193037: ab b6 ef                 jump @13145 if s1 != a4
      :                          @13149
193040: 7b ac                    u64 [a3] = a5
193042: 33 09                    a2 = 0
193044: 01                       fallthrough
      :                          @13150
193045: ab b6 e7                 jump @13145 if s1 != a4
      :                          @13151
193048: 28 5d a6                 jump @11803
      :                          @13152
193051: 54 38 00 00 01 09        jump @13154 if a1 <=u 65536
      :                          @13153
193057: 28 61 a6                 jump @11805
      :                          @13154
193060: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
193064: 33 0a c0 22 03           a3 = 0x322c0
193069: 95 a9 00 00 01           a2 = a3 + 0x10000
193074: 01                       fallthrough
      :                          @13155
193075: 82 9a                    a3 = u64 [a2]
193077: c9 a9 0b                 a4 = a2 - a3
193080: aa 7b 06                 jump @13157 if a4 == a0
      :                          @13156
193083: 28 47 a6                 jump @11805
      :                          @13157
193086: c9 8a 0b                 a4 = a3 - a1
193089: 01                       fallthrough
      :                          @13158
193090: 82 9c                    a5 = u64 [a2]
193092: ab ac ef                 jump @13155 if a5 != a3
      :                          @13159
193095: 7b 9b                    u64 [a2] = a4
193097: 33 06                    s1 = 0
193099: 01                       fallthrough
      :                          @13160
193100: ab ac e7                 jump @13155 if a5 != a3
      :                          @13161
193103: 28 33 a6                 jump @11805
      :                          @13162
193106: 54 38 00 00 01 09        jump @13164 if a1 <=u 65536
      :                          @13163
193112: 28 07 a8                 jump @11836
      :                          @13164
193115: 82 12 10 02              t0 = u64 [sp + 0x210]
193119: 33 0b c0 22 03           a4 = 0x322c0
193124: 95 ba 00 00 01           a3 = a4 + 0x10000
193129: 01                       fallthrough
      :                          @13165
193130: 82 ab                    a4 = u64 [a3]
193132: c9 ba 0c                 a5 = a3 - a4
193135: aa 2c 06                 jump @13167 if a5 == t0
      :                          @13166
193138: 28 ed a7                 jump @11836
      :                          @13167
193141: c9 8b 0c                 a5 = a4 - a1
193144: 01                       fallthrough
      :                          @13168
193145: 82 a6                    s1 = u64 [a3]
193147: ab b6 ef                 jump @13165 if s1 != a4
      :                          @13169
193150: 7b ac                    u64 [a3] = a5
193152: 33 09                    a2 = 0
193154: 01                       fallthrough
      :                          @13170
193155: ab b6 e7                 jump @13165 if s1 != a4
      :                          @13171
193158: 28 d9 a7                 jump @11836
      :                          @13172
193161: 54 38 00 00 01 09        jump @13174 if a1 <=u 65536
      :                          @13173
193167: 28 dd a7                 jump @11838
      :                          @13174
193170: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
193174: 33 0a c0 22 03           a3 = 0x322c0
193179: 95 a9 00 00 01           a2 = a3 + 0x10000
193184: 01                       fallthrough
      :                          @13175
193185: 82 9a                    a3 = u64 [a2]
193187: c9 a9 0b                 a4 = a2 - a3
193190: aa 7b 06                 jump @13177 if a4 == a0
      :                          @13176
193193: 28 c3 a7                 jump @11838
      :                          @13177
193196: c9 8a 0b                 a4 = a3 - a1
193199: 01                       fallthrough
      :                          @13178
193200: 82 9c                    a5 = u64 [a2]
193202: ab ac ef                 jump @13175 if a5 != a3
      :                          @13179
193205: 7b 9b                    u64 [a2] = a4
193207: 33 06                    s1 = 0
193209: 01                       fallthrough
      :                          @13180
193210: ab ac e7                 jump @13175 if a5 != a3
      :                          @13181
193213: 28 af a7                 jump @11838
      :                          @13182
193216: 51 07 49                 jump @13200 if a0 == 0
      :                          @13183
193219: 51 17 01 31              jump @13190 if a0 == 1
      :                          @13184
193223: 52 17 02 23              jump @13189 if a0 != 2
      :                          @13185
193227: 49 21 e0 01 0e           u64 [sp + 480] = 0xe
193232: 49 21 e8 01 19           u64 [sp + 488] = 0x19
193237: 28 3f                    jump @13201
      :                          @13186
193239: 51 07 1d                 jump @13190 if a0 == 0
      :                          @13187
193242: 52 17 01 10              jump @13189 if a0 != 1
      :                          @13188
193246: 49 21 e0 01 12           u64 [sp + 480] = 0x12
193251: 49 21 e8 01 19           u64 [sp + 488] = 0x19
193256: 28 2c                    jump @13201
      :                          @13189
193258: 49 21 e8 01              u64 [sp + 488] = 0
193262: 49 21 e0 01              u64 [sp + 480] = 0
193266: 28 22                    jump @13201
      :                          @13190
193268: 49 21 e0 01 09           u64 [sp + 480] = 0x9
193273: 49 21 e8 01 09           u64 [sp + 488] = 0x9
193278: 28 16                    jump @13201
      :                          @13191
193280: 00                       trap
      :                          @13192
193281: 00                       trap
      :                          @13193
193282: 00                       trap
      :                          @13194
193283: 00                       trap
      :                          @13195
193284: 00                       trap
      :                          @13196
193285: 00                       trap
      :                          @13197
193286: 00                       trap
      :                          @13198
193287: 00                       trap
      :                          @13199
193288: 00                       trap
      :                          @13200
193289: 49 21 e0 01 06           u64 [sp + 480] = 0x6
193294: 49 21 e8 01 06           u64 [sp + 488] = 0x6
193299: 01                       fallthrough
      :                          @13201
193300: 95 17 c8 01              a0 = sp + 0x1c8
193304: 7b 17 90 02              u64 [sp + 0x290] = a0
193308: 33 07 28 0c              a0 = 0xc28
193312: 7b 17 98 02              u64 [sp + 0x298] = a0
193316: 95 18 20 01              a1 = sp + 0x120
193320: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
193324: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
193328: 95 17 e0 01              a0 = sp + 0x1e0
193332: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
193336: 33 07 9a 01              a0 = 0x19a
193340: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
193344: 33 07 58 14 01           a0 = 0x11458
193349: 7b 17 38 02              u64 [sp + 0x238] = a0
193353: 49 21 40 02 03           u64 [sp + 576] = 0x3
193358: 49 21 58 02              u64 [sp + 600] = 0
193362: 95 18 90 02              a1 = sp + 0x290
193366: 7b 18 48 02              u64 [sp + 0x248] = a1
193370: 49 21 50 02 03           u64 [sp + 592] = 0x3
193375: 95 17 08 02              a0 = sp + 0x208
193379: 95 18 38 02              a1 = sp + 0x238
193383: 50 20 c6 0b d8 5b fd     ra = 3014, jump @1491
      :                          @13202 [@dyn 1507]
193390: 82 16 10 02              s1 = u64 [sp + 0x210]
193394: 82 1b 18 02              a4 = u64 [sp + 0x218]
193398: 82 17 08 02              a0 = u64 [sp + 0x208]
193402: 7b 17 70                 u64 [sp + 0x70] = a0
193405: 33 07 02                 a0 = 0x2
193408: 33 08                    a1 = 0
193410: 33 09                    a2 = 0
193412: 64 6a                    a3 = s1
193414: 33 00 c8 0b              ra = 0xbc8
193418: 0a 64                    ecalli 100 // 'log'
193420: 01                       fallthrough
      :                          @13203 [@dyn 1508]
193421: 82 1c 70                 a5 = u64 [sp + 0x70]
193424: 82 17 68                 a0 = u64 [sp + 0x68]
193427: c8 c7 07                 a0 = a0 + a5
193430: 55 37 00 00 ff 09        jump @13205 if a0 >=u 4294901760
      :                          @13204
193436: 28 2a ee                 jump @12856
      :                          @13205
193439: 33 07 c0 22 03           a0 = 0x322c0
193444: 95 77 00 00 01           a0 = a0 + 0x10000
193449: 01                       fallthrough
      :                          @13206
193450: 82 78                    a1 = u64 [a0]
193452: c9 87 09                 a2 = a0 - a1
193455: aa 69 06                 jump @13208 if a2 == s1
      :                          @13207
193458: 28 14 ee                 jump @12856
      :                          @13208
193461: c9 c8 09                 a2 = a1 - a5
193464: 01                       fallthrough
      :                          @13209
193465: 82 7a                    a3 = u64 [a0]
193467: ab 8a ef                 jump @13206 if a3 != a1
      :                          @13210
193470: 7b 79                    u64 [a0] = a2
193472: 33 0b                    a4 = 0
193474: 01                       fallthrough
      :                          @13211
193475: ab 8a e7                 jump @13206 if a3 != a1
      :                          @13212
193478: 28 00 ee                 jump @12856
      :                          @13213
193481: 00                       trap
      :                          @13214
193482: 00                       trap
      :                          @13215
193483: 28 ed 17                 jump @13690
      :                          @13216
193486: 00                       trap
      :                          @13217
193487: 00                       trap
      :                          @13218
193488: 00                       trap
      :                          @13219
193489: 00                       trap
      :                          @13220
193490: 00                       trap
      :                          @13221
193491: 00                       trap
      :                          @13222
193492: 00                       trap
      :                          @13223
193493: 00                       trap
      :                          @13224
193494: 00                       trap
      :                          @13225
193495: 00                       trap
      :                          @13226
193496: 00                       trap
      :                          @13227
193497: 00                       trap
      :                          @13228
193498: 00                       trap
      :                          @13229
193499: 00                       trap
      :                          @13230
193500: 00                       trap
      :                          @13231
193501: 00                       trap
      :                          @13232
193502: 00                       trap
      :                          @13233
193503: 00                       trap
      :                          @13234
193504: 00                       trap
      :                          @13235
193505: 00                       trap
      :                          @13236
193506: 00                       trap
      :                          @13237
193507: 00                       trap
      :                          @13238
193508: 00                       trap
      :                          @13239
193509: 00                       trap
      :                          @13240
193510: 00                       trap
      :                          @13241
193511: 00                       trap
      :                          @13242
193512: 00                       trap
      :                          @13243
193513: 00                       trap
      :                          @13244
193514: 00                       trap
      :                          @13245
193515: 00                       trap
      :                          @13246
193516: 00                       trap
      :                          @13247
193517: 00                       trap
      :                          @13248
193518: 00                       trap
      :                          @13249
193519: 00                       trap
      :                          @13250
193520: 00                       trap
      :                          @13251
193521: 28 c7 17                 jump @13690
      :                          @13252
193524: 00                       trap
      :                          @13253
193525: 00                       trap
      :                          @13254
193526: 00                       trap
      :                          @13255
193527: 00                       trap
      :                          @13256
193528: 00                       trap
      :                          @13257
193529: 00                       trap
      :                          @13258
193530: 00                       trap
      :                          @13259
193531: 00                       trap
      :                          @13260
193532: 00                       trap
      :                          @13261
193533: 00                       trap
      :                          @13262
193534: 28 ba 17                 jump @13690
      :                          @13263
193537: 00                       trap
      :                          @13264
193538: 00                       trap
      :                          @13265
193539: 00                       trap
      :                          @13266
193540: 00                       trap
      :                          @13267
193541: 00                       trap
      :                          @13268
193542: 00                       trap
      :                          @13269
193543: 00                       trap
      :                          @13270
193544: 00                       trap
      :                          @13271
193545: 00                       trap
      :                          @13272
193546: 00                       trap
      :                          @13273
193547: 00                       trap
      :                          @13274
193548: 00                       trap
      :                          @13275
193549: 00                       trap
      :                          @13276
193550: 00                       trap
      :                          @13277
193551: 00                       trap
      :                          @13278
193552: 00                       trap
      :                          @13279
193553: 00                       trap
      :                          @13280 [export #0: 'refine']
193554: 95 11 70 ff              sp = sp + 0xffffffffffffff70
193558: 7b 10 88 00              u64 [sp + 0x88] = ra
193562: 7b 15 80 00              u64 [sp + 0x80] = s0
193566: 7b 16 78                 u64 [sp + 0x78] = s1
193569: 64 86                    s1 = a1
193571: 64 7a                    a3 = a0
193573: 33 05 01                 s0 = 0x1
193576: 7a 15 1c                 u32 [sp + 0x1c] = s0
193579: 33 07 00 00 01           a0 = 0x10000
193584: 53 16 04 40              jump @13289 if s1 <u 4
      :                          @13281
193588: 7d a8                    a1 = i8 [a3]
193590: 59 08 37                 jump @13288 if a1 >=s 0
      :                          @13282
193593: 84 89 ff 00              a2 = a1 & 0xff
193597: 33 05 02                 s0 = 0x2
193600: 53 29 c0 00 2d           jump @13288 if a2 <u 192
      :                          @13283
193605: 33 05 03                 s0 = 0x3
193608: 53 29 e0 00 25           jump @13288 if a2 <u 224
      :                          @13284
193613: 33 05 04                 s0 = 0x4
193616: 53 29 f0 00 1d           jump @13288 if a2 <u 240
      :                          @13285
193621: 33 05 05                 s0 = 0x5
193624: 53 29 f8 00 15           jump @13288 if a2 <u 248
      :                          @13286
193629: 33 05 06                 s0 = 0x6
193632: 53 29 fc 00 0d           jump @13288 if a2 <u 252
      :                          @13287
193637: 88 98 fe 00              a1 = a2 <u 0xfe
193641: 9a 85 08                 s0 = 0x8 - a1
193644: 01                       fallthrough
      :                          @13288
193645: ae 56 08                 jump @13290 if s1 >=u s0
      :                          @13289
193648: 33 08                    a1 = 0
193650: 28 de 00                 jump @13313
      :                          @13290
193653: 64 a7                    a0 = a3
193655: 64 58                    a1 = s0
193657: 7b 1a 10                 u64 [sp + 0x10] = a3
193660: 50 20 ca 0b 3d 2e        ra = 3018, jump @14051
      :                          @13291 [@dyn 1509]
193666: aa 56 c6 00              jump @13312 if s1 == s0
      :                          @13292
193670: 82 17 10                 a0 = u64 [sp + 0x10]
193673: c8 57 07                 a0 = a0 + s0
193676: 7d 78                    a1 = i8 [a0]
193678: c9 56 06                 s1 = s1 - s0
193681: 33 05 01                 s0 = 0x1
193684: 59 08 37                 jump @13299 if a1 >=s 0
      :                          @13293
193687: 84 89 ff 00              a2 = a1 & 0xff
193691: 33 05 02                 s0 = 0x2
193694: 53 29 c0 00 2d           jump @13299 if a2 <u 192
      :                          @13294
193699: 33 05 03                 s0 = 0x3
193702: 53 29 e0 00 25           jump @13299 if a2 <u 224
      :                          @13295
193707: 33 05 04                 s0 = 0x4
193710: 53 29 f0 00 1d           jump @13299 if a2 <u 240
      :                          @13296
193715: 33 05 05                 s0 = 0x5
193718: 53 29 f8 00 15           jump @13299 if a2 <u 248
      :                          @13297
193723: 33 05 06                 s0 = 0x6
193726: 53 29 fc 00 0d           jump @13299 if a2 <u 252
      :                          @13298
193731: 88 98 fe 00              a1 = a2 <u 0xfe
193735: 9a 85 08                 s0 = 0x8 - a1
193738: 01                       fallthrough
      :                          @13299
193739: ac 56 7d                 jump @13312 if s1 <u s0
      :                          @13300
193742: 64 58                    a1 = s0
193744: 7b 17 10                 u64 [sp + 0x10] = a0
193747: 50 20 cc 0b e6 2d        ra = 3020, jump @14051
      :                          @13301 [@dyn 1510]
193753: aa 56 6f                 jump @13312 if s1 == s0
      :                          @13302
193756: 82 17 10                 a0 = u64 [sp + 0x10]
193759: c8 57 07                 a0 = a0 + s0
193762: 7d 78                    a1 = i8 [a0]
193764: c9 56 05                 s0 = s1 - s0
193767: 33 06 01                 s1 = 0x1
193770: 59 08 37                 jump @13309 if a1 >=s 0
      :                          @13303
193773: 84 89 ff 00              a2 = a1 & 0xff
193777: 33 06 02                 s1 = 0x2
193780: 53 29 c0 00 2d           jump @13309 if a2 <u 192
      :                          @13304
193785: 33 06 03                 s1 = 0x3
193788: 53 29 e0 00 25           jump @13309 if a2 <u 224
      :                          @13305
193793: 33 06 04                 s1 = 0x4
193796: 53 29 f0 00 1d           jump @13309 if a2 <u 240
      :                          @13306
193801: 33 06 05                 s1 = 0x5
193804: 53 29 f8 00 15           jump @13309 if a2 <u 248
      :                          @13307
193809: 33 06 06                 s1 = 0x6
193812: 53 29 fc 00 0d           jump @13309 if a2 <u 252
      :                          @13308
193817: 88 98 fe 00              a1 = a2 <u 0xfe
193821: 9a 86 08                 s1 = 0x8 - a1
193824: 01                       fallthrough
      :                          @13309
193825: ac 65 d0 01              jump @13338 if s0 <u s1
      :                          @13310
193829: 7b 17 10                 u64 [sp + 0x10] = a0
193832: 64 68                    a1 = s1
193834: 50 20 ce 0b 8f 2d        ra = 3022, jump @14051
      :                          @13311 [@dyn 1511]
193840: e4 65 08                 a1 = maxu(s0, s1)
193843: c9 68 08                 a1 = a1 - s1
193846: d8 78 09                 a2 = a1 <u a0
193849: e4 78 08                 a1 = maxu(a1, a0)
193852: c9 78 08                 a1 = a1 - a0
193855: 88 88 20                 a1 = a1 <u 0x20
193858: d4 98 08                 a1 = a1 | a2
193861: 51 08 1c                 jump @13314 if a1 == 0
      :                          @13312
193864: 33 08                    a1 = 0
193866: 33 07 00 00 01           a0 = 0x10000
193871: 01                       fallthrough
      :                          @13313
193872: 82 10 88 00              ra = u64 [sp + 0x88]
193876: 82 15 80 00              s0 = u64 [sp + 0x80]
193880: 82 16 78                 s1 = u64 [sp + 0x78]
193883: 95 11 90 00              sp = sp + 0x90
193887: 32 00                    ret
      :                          @13314
193889: 54 17 03 a4 00           jump @13323 if a0 <=u 3
      :                          @13315
193894: 82 17 10                 a0 = u64 [sp + 0x10]
193897: c8 76 06                 s1 = s1 + a0
193900: 7c 67 01                 a0 = u8 [s1 + 0x1]
193903: 7c 68                    a1 = u8 [s1]
193905: 7c 69 02                 a2 = u8 [s1 + 0x2]
193908: 7d 6a 03                 a3 = i8 [s1 + 0x3]
193911: 97 77 08                 a0 = a0 << 0x8
193914: d4 87 07                 a0 = a0 | a1
193917: 97 99 10                 a2 = a2 << 0x10
193920: 97 aa 18                 a3 = a3 << 0x18
193923: d4 a9 09                 a2 = a2 | a3
193926: d4 97 07                 a0 = a0 | a2
193929: 3d 07 ac 12 03           u32 [0x312ac] = a0
193934: 7a 17 1c                 u32 [sp + 0x1c] = a0
193937: 95 17 1c                 a0 = sp + 0x1c
193940: 7b 17 68                 u64 [sp + 0x68] = a0
193943: 33 07 74                 a0 = 0x74
193946: 7b 17 70                 u64 [sp + 0x70] = a0
193949: 33 07 70 2e 01           a0 = 0x12e70
193954: 7b 17 38                 u64 [sp + 0x38] = a0
193957: 49 11 40 01              u64 [sp + 64] = 0x1
193961: 49 11 58                 u64 [sp + 88] = 0
193964: 95 18 68                 a1 = sp + 0x68
193967: 7b 18 48                 u64 [sp + 0x48] = a1
193970: 49 11 50 01              u64 [sp + 80] = 0x1
193974: 95 17 20                 a0 = sp + 0x20
193977: 95 18 38                 a1 = sp + 0x38
193980: 50 20 d0 0b 53 0d        ra = 3024, jump @13535
      :                          @13316 [@dyn 1512]
193986: 82 15 28                 s0 = u64 [sp + 0x28]
193989: 82 1b 30                 a4 = u64 [sp + 0x30]
193992: 82 16 20                 s1 = u64 [sp + 0x20]
193995: 33 07 02                 a0 = 0x2
193998: 33 08                    a1 = 0
194000: 33 09                    a2 = 0
194002: 64 5a                    a3 = s0
194004: 33 00 d2 0b              ra = 0xbd2
194008: 0a 64                    ecalli 100 // 'log'
194010: 01                       fallthrough
      :                          @13317 [@dyn 1513]
194011: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
194016: 53 38 00 00 ff 25        jump @13323 if a1 <u 4294901760
      :                          @13318
194022: 33 07 c0 22 03           a0 = 0x322c0
194027: 95 77 00 00 01           a0 = a0 + 0x10000
194032: 01                       fallthrough
      :                          @13319
194033: 82 78                    a1 = u64 [a0]
194035: c9 87 09                 a2 = a0 - a1
194038: ab 59 0f                 jump @13323 if a2 != s0
      :                          @13320
194041: c9 68 09                 a2 = a1 - s1
194044: 01                       fallthrough
      :                          @13321
194045: 82 7a                    a3 = u64 [a0]
194047: ab 8a f2                 jump @13319 if a3 != a1
      :                          @13322
194050: 7b 79                    u64 [a0] = a2
194052: 01                       fallthrough
      :                          @13323
194053: 33 07 10 00 03           a0 = 0x30010
194058: 33 05 08 10              s0 = 0x1008
194062: 7b 17 10                 u64 [sp + 0x10] = a0
194065: 33 08 08 10              a1 = 0x1008
194069: 33 00 d4 0b              ra = 0xbd4
194073: 0a 07                    ecalli 7 // 'export'
194075: 01                       fallthrough
      :                          @13324 [@dyn 1514]
194076: 81 18 1c                 a1 = i32 [sp + 0x1c]
194079: 7b 18 08                 u64 [sp + 0x8] = a1
194082: 53 18 02 43              jump @13330 if a1 <u 2
      :                          @13325
194086: 33 06 01                 s1 = 0x1
194089: 33 0c ac 12 03           a5 = 0x312ac
194094: 7b 1c                    u64 [sp] = a5
194096: 01                       fallthrough
      :                          @13326
194097: 95 67 01                 a0 = s1 + 0x1
194100: 64 58                    a1 = s0
194102: 82 19 10                 a2 = u64 [sp + 0x10]
194105: 64 ca                    a3 = a5
194107: 01                       fallthrough
      :                          @13327
194108: 7c 9b                    a4 = u8 [a2]
194110: c8 7b 0b                 a4 = a4 + a0
194113: 78 ab                    u8 [a3] = a4
194115: 95 aa 01                 a3 = a3 + 0x1
194118: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
194121: 95 99 01                 a2 = a2 + 0x1
194124: 52 08 f0                 jump @13327 if a1 != 0
      :                          @13328
194127: 64 c7                    a0 = a5
194129: 64 58                    a1 = s0
194131: 33 00 d6 0b              ra = 0xbd6
194135: 0a 07                    ecalli 7 // 'export'
194137: 01                       fallthrough
      :                          @13329 [@dyn 1515]
194138: 82 1c                    a5 = u64 [sp]
194140: 83 66 01                 i32 s1 = s1 + 0x1
194143: 82 17 08                 a0 = u64 [sp + 0x8]
194146: ab 76 cf                 jump @13326 if s1 != a0
      :                          @13330
194149: 33 07                    a0 = 0
194151: 01                       fallthrough
      :                          @13331
194152: 83 78                    i32 a1 = a0 + 0
194154: 89 88 aa 00              a1 = a1 <s 0xaa
194158: 85 86 01                 s1 = a1 ^ 0x1
194161: 83 75 01                 i32 s0 = a0 + 0x1
194164: 93 85 aa 00              s0 = 0xaa if a1 == 0
194168: 33 00 d8 0b              ra = 0xbd8
194172: 95 11 40 fc              sp = sp + 0xfffffffffffffc40
194176: 7b 10 b8 03              u64 [sp + 0x3b8] = ra
194180: 7b 15 b0 03              u64 [sp + 0x3b0] = s0
194184: 7b 16 a8 03              u64 [sp + 0x3a8] = s1
194188: 95 15 c0 03              s0 = sp + 0x3c0
194192: 84 11 f0                 sp = sp & 0xfffffffffffffff0
194195: 64 76                    s1 = a0
194197: 49 11 68 ff ff fe        u64 [sp + 104] = 0xfffffffffffeffff
194203: 78 16 7f                 u8 [sp + 0x7f] = s1
194206: 33 00 9c 04              ra = 0x49c
194210: 0a                       ecalli 0 // 'gas'
194211: 28 46 98 fe              jump @8036
      :                          @13332 [@dyn 1516]
194215: 89 57 ab 00              a0 = s0 <s 0xab
194219: 85 77 01                 a0 = a0 ^ 0x1
194222: d4 76 06                 s1 = s1 | a0
194225: 64 57                    a0 = s0
194227: 51 06 b5                 jump @13331 if s1 == 0
      :                          @13333
194230: 81 17 1c                 a0 = i32 [sp + 0x1c]
194233: 51 07 28                 jump @13337 if a0 == 0
      :                          @13334
194236: 52 17 01 06              jump @13336 if a0 != 1
      :                          @13335
194240: 28 21                    jump @13337
      :                          @13336
194242: 83 78 fe                 i32 a1 = a0 + 0xfffffffffffffffe
194245: 97 89 01                 a2 = a1 << 0x1
194248: 83 7a fd                 i32 a3 = a0 + 0xfffffffffffffffd
194251: 97 aa 20                 a3 = a3 << 0x20
194254: 97 88 20                 a1 = a1 << 0x20
194257: d6 a8 08                 a1 = a1 mulhu a3
194260: 98 88 01                 a1 = a1 >> 0x1
194263: c8 98 08                 a1 = a1 + a2
194266: 83 88 01                 i32 a1 = a1 + 0x1
194269: be 87 07                 i32 a0 = a0 + a1
194272: 01                       fallthrough
      :                          @13337
194273: 3d 07 8c 12 03           u32 [0x3128c] = a0
194278: 33 07 8c 12 03           a0 = 0x3128c
194283: 33 08 04                 a1 = 0x4
194286: 28 62 fe                 jump @13313
      :                          @13338
194289: 00                       trap
      :                          @13339 [export #1: 'accumulate']
194290: 95 11 38 ff              sp = sp + 0xffffffffffffff38
194294: 7b 10 c0 00              u64 [sp + 0xc0] = ra
194298: 7b 15 b8 00              u64 [sp + 0xb8] = s0
194302: 7b 16 b0 00              u64 [sp + 0xb0] = s1
194306: 33 05 00 00 01           s0 = 0x10000
194311: 51 08 a3 00              jump @13359 if a1 == 0
      :                          @13340
194315: 64 86                    s1 = a1
194317: 7d 78                    a1 = i8 [a0]
194319: 33 05 01                 s0 = 0x1
194322: 59 08 37                 jump @13347 if a1 >=s 0
      :                          @13341
194325: 84 89 ff 00              a2 = a1 & 0xff
194329: 33 05 02                 s0 = 0x2
194332: 53 29 c0 00 2d           jump @13347 if a2 <u 192
      :                          @13342
194337: 33 05 03                 s0 = 0x3
194340: 53 29 e0 00 25           jump @13347 if a2 <u 224
      :                          @13343
194345: 33 05 04                 s0 = 0x4
194348: 53 29 f0 00 1d           jump @13347 if a2 <u 240
      :                          @13344
194353: 33 05 05                 s0 = 0x5
194356: 53 29 f8 00 15           jump @13347 if a2 <u 248
      :                          @13345
194361: 33 05 06                 s0 = 0x6
194364: 53 29 fc 00 0d           jump @13347 if a2 <u 252
      :                          @13346
194369: 88 98 fe 00              a1 = a2 <u 0xfe
194373: 9a 85 08                 s0 = 0x8 - a1
194376: 01                       fallthrough
      :                          @13347
194377: ac 56 59                 jump @13358 if s1 <u s0
      :                          @13348
194380: 64 58                    a1 = s0
194382: 7b 17 38                 u64 [sp + 0x38] = a0
194385: 50 20 da 0b 68 2b        ra = 3034, jump @14051
      :                          @13349 [@dyn 1517]
194391: aa 56 4b                 jump @13358 if s1 == s0
      :                          @13350
194394: 82 17 38                 a0 = u64 [sp + 0x38]
194397: c8 57 07                 a0 = a0 + s0
194400: 7d 78                    a1 = i8 [a0]
194402: c9 56 06                 s1 = s1 - s0
194405: 33 05 01                 s0 = 0x1
194408: 59 08 37                 jump @13357 if a1 >=s 0
      :                          @13351
194411: 84 89 ff 00              a2 = a1 & 0xff
194415: 33 05 02                 s0 = 0x2
194418: 53 29 c0 00 2d           jump @13357 if a2 <u 192
      :                          @13352
194423: 33 05 03                 s0 = 0x3
194426: 53 29 e0 00 25           jump @13357 if a2 <u 224
      :                          @13353
194431: 33 05 04                 s0 = 0x4
194434: 53 29 f0 00 1d           jump @13357 if a2 <u 240
      :                          @13354
194439: 33 05 05                 s0 = 0x5
194442: 53 29 f8 00 15           jump @13357 if a2 <u 248
      :                          @13355
194447: 33 05 06                 s0 = 0x6
194450: 53 29 fc 00 0d           jump @13357 if a2 <u 252
      :                          @13356
194455: 88 98 fe 00              a1 = a2 <u 0xfe
194459: 9a 85 08                 s0 = 0x8 - a1
194462: 01                       fallthrough
      :                          @13357
194463: ae 56 1f                 jump @13360 if s1 >=u s0
      :                          @13358
194466: 33 08                    a1 = 0
194468: 33 05 00 00 01           s0 = 0x10000
194473: 01                       fallthrough
      :                          @13359
194474: 64 57                    a0 = s0
194476: 82 10 c0 00              ra = u64 [sp + 0xc0]
194480: 82 15 b8 00              s0 = u64 [sp + 0xb8]
194484: 82 16 b0 00              s1 = u64 [sp + 0xb0]
194488: 95 11 c8 00              sp = sp + 0xc8
194492: 32 00                    ret
      :                          @13360
194494: 64 58                    a1 = s0
194496: 7b 16 38                 u64 [sp + 0x38] = s1
194499: 64 76                    s1 = a0
194501: 50 20 dc 0b f4 2a        ra = 3036, jump @14051
      :                          @13361 [@dyn 1518]
194507: c8 65 07                 a0 = s0 + s1
194510: 82 16 38                 s1 = u64 [sp + 0x38]
194513: ab 56 0c                 jump @13363 if s1 != s0
      :                          @13362
194516: 33 08                    a1 = 0
194518: 33 00 de 0b              ra = 0xbde
194522: 28 df 2a                 jump @14051
      :                          @13363
194525: 7d 79                    a2 = i8 [a0]
194527: c9 56 06                 s1 = s1 - s0
194530: 33 08 01                 a1 = 0x1
194533: 59 09 44                 jump @13370 if a2 >=s 0
      :                          @13364
194536: 84 99 ff 00              a2 = a2 & 0xff
194540: 33 0a c0 00              a3 = 0xc0
194544: 33 08 02                 a1 = 0x2
194547: ac a9 36                 jump @13370 if a2 <u a3
      :                          @13365
194550: 33 0a e0 00              a3 = 0xe0
194554: 33 08 03                 a1 = 0x3
194557: ac a9 2c                 jump @13370 if a2 <u a3
      :                          @13366
194560: 33 0a f0 00              a3 = 0xf0
194564: 33 08 04                 a1 = 0x4
194567: ac a9 22                 jump @13370 if a2 <u a3
      :                          @13367
194570: 33 0a f8 00              a3 = 0xf8
194574: 33 08 05                 a1 = 0x5
194577: ac a9 18                 jump @13370 if a2 <u a3
      :                          @13368
194580: 33 0a fc 00              a3 = 0xfc
194584: 33 08 06                 a1 = 0x6
194587: ac a9 0e                 jump @13370 if a2 <u a3
      :                          @13369
194590: 88 98 fe 00              a1 = a2 <u 0xfe
194594: 33 09 08                 a2 = 0x8
194597: c9 89 08                 a1 = a2 - a1
194600: 01                       fallthrough
      :                          @13370
194601: 33 05 00 00 01           s0 = 0x10000
194606: ae 86 08                 jump @13372 if s1 >=u a1
      :                          @13371
194609: 33 08                    a1 = 0
194611: 28 77 ff                 jump @13359
      :                          @13372
194614: 50 20 de 0b 83 2a        ra = 3038, jump @14051
      :                          @13373 [@dyn 1519]
194620: 83 79                    i32 a2 = a0 + 0
194622: 51 09 00 01              jump @13386 if a2 == 0
      :                          @13374
194626: 33 0b                    a4 = 0
194628: 14 09 ff ff ff ff 00 00 00 00 a2 = 0xffffffff
194638: d2 97 07                 a0 = a0 & a2
194641: 7b 17 20                 u64 [sp + 0x20] = a0
194644: 33 05 8c 12 03           s0 = 0x3128c
194649: 33 07 94 00              a0 = 0x94
194653: 7b 17 18                 u64 [sp + 0x18] = a0
194656: 33 07 28 0c              a0 = 0xc28
194660: 7b 17 10                 u64 [sp + 0x10] = a0
194663: 33 07 80 2e 01           a0 = 0x12e80
194668: 7b 17 08                 u64 [sp + 0x8] = a0
194671: 33 06 c0 22 03           s1 = 0x322c0
194676: 95 66 00 00 01           s1 = s1 + 0x10000
194681: 49 01 ff ff fe           u64 [sp + 0] = 0xfffffffffffeffff
194686: 7b 15 28                 u64 [sp + 0x28] = s0
194689: 28 23                    jump @13377
      :                          @13375
194691: 46 11 60                 u8 [sp + 96] = 0
194694: 95 17 60                 a0 = sp + 0x60
194697: 33 08 01                 a1 = 0x1
194700: 33 0a 08                 a3 = 0x8
194703: 82 15 28                 s0 = u64 [sp + 0x28]
194706: 64 59                    a2 = s0
194708: 0a 04                    ecalli 4 // 'write'
194710: 01                       fallthrough
      :                          @13376
194711: 82 1b 38                 a4 = u64 [sp + 0x38]
194714: 95 bb 01                 a4 = a4 + 0x1
194717: 82 17 20                 a0 = u64 [sp + 0x20]
194720: aa 7b a9 00              jump @13387 if a4 == a0
      :                          @13377
194724: 33 09 20                 a2 = 0x20
194727: 33 0a 0f                 a3 = 0xf
194730: 64 57                    a0 = s0
194732: 33 08                    a1 = 0
194734: 7b 1b 38                 u64 [sp + 0x38] = a4
194737: 33 0c                    a5 = 0
194739: 0a 01                    ecalli 1 // 'fetch'
194741: 7b 17 40                 u64 [sp + 0x40] = a0
194744: 7b 15 90 00              u64 [sp + 0x90] = s0
194748: 82 17 18                 a0 = u64 [sp + 0x18]
194751: 7b 17 98 00              u64 [sp + 0x98] = a0
194755: 95 17 40                 a0 = sp + 0x40
194758: 7b 17 a0 00              u64 [sp + 0xa0] = a0
194762: 82 17 10                 a0 = u64 [sp + 0x10]
194765: 7b 17 a8 00              u64 [sp + 0xa8] = a0
194769: 82 17 08                 a0 = u64 [sp + 0x8]
194772: 7b 17 60                 u64 [sp + 0x60] = a0
194775: 49 11 68 02              u64 [sp + 104] = 0x2
194779: 49 21 80 00              u64 [sp + 128] = 0
194783: 95 18 90 00              a1 = sp + 0x90
194787: 7b 18 70                 u64 [sp + 0x70] = a1
194790: 49 11 78 02              u64 [sp + 120] = 0x2
194794: 95 17 48                 a0 = sp + 0x48
194797: 95 18 60                 a1 = sp + 0x60
194800: 50 20 e0 0b 1f 0a        ra = 3040, jump @13535
      :                          @13378 [@dyn 1520]
194806: 82 15 50                 s0 = u64 [sp + 0x50]
194809: 82 1b 58                 a4 = u64 [sp + 0x58]
194812: 82 17 48                 a0 = u64 [sp + 0x48]
194815: 7b 17 30                 u64 [sp + 0x30] = a0
194818: 33 07 02                 a0 = 0x2
194821: 33 08                    a1 = 0
194823: 33 09                    a2 = 0
194825: 64 5a                    a3 = s0
194827: 33 00 e2 0b              ra = 0xbe2
194831: 0a 64                    ecalli 100 // 'log'
194833: 01                       fallthrough
      :                          @13379 [@dyn 1521]
194834: 82 1b 30                 a4 = u64 [sp + 0x30]
194837: 82 17                    a0 = u64 [sp]
194839: c8 b7 07                 a0 = a0 + a4
194842: 53 37 00 00 ff 69 ff     jump @13375 if a0 <u 4294901760
      :                          @13380
194849: 82 67                    a0 = u64 [s1]
194851: c9 76 08                 a1 = s1 - a0
194854: ab 58 5d ff              jump @13375 if a1 != s0
      :                          @13381
194858: c9 b7 08                 a1 = a0 - a4
194861: 01                       fallthrough
      :                          @13382
194862: 82 69                    a2 = u64 [s1]
194864: ab 79 f1                 jump @13380 if a2 != a0
      :                          @13383
194867: 7b 68                    u64 [s1] = a1
194869: 33 0a                    a3 = 0
194871: 01                       fallthrough
      :                          @13384
194872: ab 79 e9                 jump @13380 if a2 != a0
      :                          @13385
194875: 28 48 ff                 jump @13375
      :                          @13386
194878: 33 05 8c 12 03           s0 = 0x3128c
194883: 33 08 20                 a1 = 0x20
194886: 28 64 fe                 jump @13359
      :                          @13387
194889: 33 08 20                 a1 = 0x20
194892: 28 5e fe                 jump @13359
      :                          @13388 [export #2: 'on_transfer']
194895: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
194899: 7b 10 88 02              u64 [sp + 0x288] = ra
194903: 7b 15 80 02              u64 [sp + 0x280] = s0
194907: 7b 16 78 02              u64 [sp + 0x278] = s1
194911: 64 8c                    a5 = a1
194913: 64 79                    a2 = a0
194915: 33 02                    t0 = 0
194917: 95 7b 04                 a4 = a0 + 0x4
194920: 33 07 74                 a0 = 0x74
194923: 7b 17 28                 u64 [sp + 0x28] = a0
194926: 33 07 78                 a0 = 0x78
194929: 7b 17 58                 u64 [sp + 0x58] = a0
194932: 33 07 da 00              a0 = 0xda
194936: 7b 17 20                 u64 [sp + 0x20] = a0
194939: 33 07 e8 2e 01           a0 = 0x12ee8
194944: 7b 17 18                 u64 [sp + 0x18] = a0
194947: 33 07 96 0c              a0 = 0xc96
194951: 7b 17 10                 u64 [sp + 0x10] = a0
194954: 33 07 38 32 01           a0 = 0x13238
194959: 7b 17 08                 u64 [sp + 0x8] = a0
194962: 33 07 c0 22 03           a0 = 0x322c0
194967: 95 77 00 00 01           a0 = a0 + 0x10000
194972: 7b 17 50                 u64 [sp + 0x50] = a0
194975: 33 07 88 2f 01           a0 = 0x12f88
194980: 7b 17                    u64 [sp] = a0
194982: 95 97 08                 a0 = a2 + 0x8
194985: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
194988: 95 98 0c                 a1 = a2 + 0xc
194991: 7b 18 60                 u64 [sp + 0x60] = a1
194994: 33 08 08                 a1 = 0x8
194997: 33 06 ff ff fe           s1 = 0xfffffffffffeffff
195002: 7b 16 48                 u64 [sp + 0x48] = s1
195005: 7b 17 c0 00              u64 [sp + 0xc0] = a0
195009: 7b 17 b8 00              u64 [sp + 0xb8] = a0
195013: 7b 1c 40                 u64 [sp + 0x40] = a5
195016: 7b 19 38                 u64 [sp + 0x38] = a2
195019: 7b 1b 30                 u64 [sp + 0x30] = a4
195022: 7b 1a a8 00              u64 [sp + 0xa8] = a3
195026: ac 8c c9 04              jump @13436 if a5 <u a1
      :                          @13389
195030: 51 09 de 04              jump @13437 if a2 == 0
      :                          @13390
195034: 51 0b da 04              jump @13437 if a4 == 0
      :                          @13391
195038: 7c 97                    a0 = u8 [a2]
195040: 7b 17 78                 u64 [sp + 0x78] = a0
195043: 7c 97 01                 a0 = u8 [a2 + 0x1]
195046: 7b 17 68                 u64 [sp + 0x68] = a0
195049: 7c 97 02                 a0 = u8 [a2 + 0x2]
195052: 7b 17 70                 u64 [sp + 0x70] = a0
195055: 7c 97 03                 a0 = u8 [a2 + 0x3]
195058: 7b 17 80 00              u64 [sp + 0x80] = a0
195062: 7c b7                    a0 = u8 [a4]
195064: 7b 17 98 00              u64 [sp + 0x98] = a0
195068: 7c b7 01                 a0 = u8 [a4 + 0x1]
195071: 7b 17 88 00              u64 [sp + 0x88] = a0
195075: 7c b7 02                 a0 = u8 [a4 + 0x2]
195078: 7b 17 90 00              u64 [sp + 0x90] = a0
195082: 7c b7 03                 a0 = u8 [a4 + 0x3]
195085: 7b 17 a0 00              u64 [sp + 0xa0] = a0
195089: 51 0a 53                 jump @13401 if a3 == 0
      :                          @13392
195092: 82 17 c0 00              a0 = u64 [sp + 0xc0]
195096: 7d 77                    a0 = i8 [a0]
195098: 33 05 01                 s0 = 0x1
195101: 59 07 4a                 jump @13402 if a0 >=s 0
      :                          @13393
195104: 84 77 ff 00              a0 = a0 & 0xff
195108: 33 05 02                 s0 = 0x2
195111: 33 06 c0 00              s1 = 0xc0
195115: ac 67 33                 jump @13399 if a0 <u s1
      :                          @13394
195118: 33 05 03                 s0 = 0x3
195121: 33 06 e0 00              s1 = 0xe0
195125: ac 67 29                 jump @13399 if a0 <u s1
      :                          @13395
195128: 33 05 04                 s0 = 0x4
195131: 33 06 f0 00              s1 = 0xf0
195135: ac 67 1f                 jump @13399 if a0 <u s1
      :                          @13396
195138: 33 05 05                 s0 = 0x5
195141: 33 06 f8 00              s1 = 0xf8
195145: ac 67 15                 jump @13399 if a0 <u s1
      :                          @13397
195148: 33 05 06                 s0 = 0x6
195151: 33 06 fc 00              s1 = 0xfc
195155: ac 67 0b                 jump @13399 if a0 <u s1
      :                          @13398
195158: 88 77 fe 00              a0 = a0 <u 0xfe
195162: 9a 75 08                 s0 = 0x8 - a0
195165: 01                       fallthrough
      :                          @13399
195166: ae 5a 09                 jump @13402 if a3 >=u s0
      :                          @13400
195169: 28 3a 04                 jump @13436
      :                          @13401
195172: 33 05                    s0 = 0
195174: 01                       fallthrough
      :                          @13402
195175: 82 17 c0 00              a0 = u64 [sp + 0xc0]
195179: 64 58                    a1 = s0
195181: 7b 12 b0 00              u64 [sp + 0xb0] = t0
195185: 50 20 e4 0b 48 28        ra = 3044, jump @14051
      :                          @13403 [@dyn 1522]
195191: 33 03 98 00              t1 = 0x98
195195: 33 02 04                 t0 = 0x4
195198: 33 06 08                 s1 = 0x8
195201: 82 1c a8 00              a5 = u64 [sp + 0xa8]
195205: 82 1b b0 00              a4 = u64 [sp + 0xb0]
195209: ae 7b 12 04              jump @13436 if a4 >=u a0
      :                          @13404
195213: 82 18 68                 a1 = u64 [sp + 0x68]
195216: 97 88 08                 a1 = a1 << 0x8
195219: 82 19 78                 a2 = u64 [sp + 0x78]
195222: d4 98 08                 a1 = a1 | a2
195225: 82 19 70                 a2 = u64 [sp + 0x70]
195228: 97 99 10                 a2 = a2 << 0x10
195231: 82 1a 80 00              a3 = u64 [sp + 0x80]
195235: 97 aa 18                 a3 = a3 << 0x18
195238: d4 a9 09                 a2 = a2 | a3
195241: d4 89 04                 t2 = a2 | a1
195244: 82 18 88 00              a1 = u64 [sp + 0x88]
195248: 97 88 08                 a1 = a1 << 0x8
195251: 82 19 98 00              a2 = u64 [sp + 0x98]
195255: d4 98 08                 a1 = a1 | a2
195258: 82 19 90 00              a2 = u64 [sp + 0x90]
195262: 97 99 10                 a2 = a2 << 0x10
195265: 82 1a a0 00              a3 = u64 [sp + 0xa0]
195269: 97 aa 18                 a3 = a3 << 0x18
195272: d4 a9 09                 a2 = a2 | a3
195275: d4 89 00                 ra = a2 | a1
195278: e4 5c 08                 a1 = maxu(a5, s0)
195281: c9 58 08                 a1 = a1 - s0
195284: 82 19 b8 00              a2 = u64 [sp + 0xb8]
195288: c8 59 09                 a2 = a2 + s0
195291: 82 1a 60                 a3 = u64 [sp + 0x60]
195294: c8 a5 05                 s0 = s0 + a3
195297: 64 ba                    a3 = a4
195299: 01                       fallthrough
      :                          @13405
195300: ac 68 b7 03              jump @13436 if a1 <u s1
      :                          @13406
195304: aa 25 cc 03              jump @13437 if s0 == t0
      :                          @13407
195308: 51 05 c8 03              jump @13437 if s0 == 0
      :                          @13408
195312: ac 38 ab 03              jump @13436 if a1 <u t1
      :                          @13409
195316: 51 0a 17                 jump @13412 if a3 == 0
      :                          @13410
195319: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
195323: 95 55 98 00              s0 = s0 + 0x98
195327: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
195330: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
195333: 52 07 df                 jump @13405 if a0 != 0
      :                          @13411
195336: 28 93 03                 jump @13436
      :                          @13412
195339: 7c 97 01                 a0 = u8 [a2 + 0x1]
195342: 7c 98                    a1 = u8 [a2]
195344: 7c 9a 02                 a3 = u8 [a2 + 0x2]
195347: 7d 9b 03                 a4 = i8 [a2 + 0x3]
195350: 8a 77 08                 i32 a0 = a0 << 0x8
195353: d4 87 07                 a0 = a0 | a1
195356: 8a a8 10                 i32 a1 = a3 << 0x10
195359: 8a ba 18                 i32 a3 = a4 << 0x18
195362: d4 a8 08                 a1 = a1 | a3
195365: d4 87 07                 a0 = a0 | a1
195368: 7b 17 a0 00              u64 [sp + 0xa0] = a0
195372: 7c 57 01                 a0 = u8 [s0 + 0x1]
195375: 7c 58                    a1 = u8 [s0]
195377: 7c 5a 02                 a3 = u8 [s0 + 0x2]
195380: 7d 5b 03                 a4 = i8 [s0 + 0x3]
195383: 8a 77 08                 i32 a0 = a0 << 0x8
195386: d4 87 07                 a0 = a0 | a1
195389: 8a a8 10                 i32 a1 = a3 << 0x10
195392: 8a ba 18                 i32 a3 = a4 << 0x18
195395: d4 a8 08                 a1 = a1 | a3
195398: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
195401: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
195404: d4 87 07                 a0 = a0 | a1
195407: 7b 17 98 00              u64 [sp + 0x98] = a0
195411: 7c 97 0d                 a0 = u8 [a2 + 0xd]
195414: 97 aa 10                 a3 = a3 << 0x10
195417: 97 bb 08                 a4 = a4 << 0x8
195420: d4 ba 0a                 a3 = a3 | a4
195423: 7c 98 0c                 a1 = u8 [a2 + 0xc]
195426: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
195429: d4 a7 07                 a0 = a0 | a3
195432: 97 77 10                 a0 = a0 << 0x10
195435: 97 88 08                 a1 = a1 << 0x8
195438: d4 b8 08                 a1 = a1 | a4
195441: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
195444: 7c 9b 09                 a4 = u8 [a2 + 0x9]
195447: d4 87 07                 a0 = a0 | a1
195450: 97 77 10                 a0 = a0 << 0x10
195453: 97 aa 08                 a3 = a3 << 0x8
195456: d4 ba 0a                 a3 = a3 | a4
195459: d4 a7 07                 a0 = a0 | a3
195462: 7c 98 08                 a1 = u8 [a2 + 0x8]
195465: 97 77 08                 a0 = a0 << 0x8
195468: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
195472: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
195476: d4 87 07                 a0 = a0 | a1
195479: 7b 17 90 00              u64 [sp + 0x90] = a0
195483: 7c 97 95 00              a0 = u8 [a2 + 0x95]
195487: 97 aa 10                 a3 = a3 << 0x10
195490: 97 bb 08                 a4 = a4 << 0x8
195493: d4 ba 0a                 a3 = a3 | a4
195496: d4 a7 07                 a0 = a0 | a3
195499: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
195503: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
195507: 95 98 10                 a1 = a2 + 0x10
195510: 97 77 10                 a0 = a0 << 0x10
195513: 97 aa 08                 a3 = a3 << 0x8
195516: d4 ba 0a                 a3 = a3 | a4
195519: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
195523: d4 a7 07                 a0 = a0 | a3
195526: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
195530: 97 77 10                 a0 = a0 << 0x10
195533: 97 bb 08                 a4 = a4 << 0x8
195536: 7c 99 90 00              a2 = u8 [a2 + 0x90]
195540: d4 ba 0a                 a3 = a3 | a4
195543: d4 a7 07                 a0 = a0 | a3
195546: 97 77 08                 a0 = a0 << 0x8
195549: d4 97 07                 a0 = a0 | a2
195552: 7b 17 88 00              u64 [sp + 0x88] = a0
195556: 95 17 68 01              a0 = sp + 0x168
195560: 33 09 80 00              a2 = 0x80
195564: 64 45                    s0 = t2
195566: 64 06                    s1 = ra
195568: 50 20 e6 0b 3c 0d        ra = 3046, jump @13621
      :                          @13413 [@dyn 1523]
195574: 95 17 e0 00              a0 = sp + 0xe0
195578: 95 18 68 01              a1 = sp + 0x168
195582: 33 09 80 00              a2 = 0x80
195586: 50 20 e8 0b 2a 0d        ra = 3048, jump @13621
      :                          @13414 [@dyn 1524]
195592: 7a 15 c8 00              u32 [sp + 0xc8] = s0
195596: 7a 16 cc 00              u32 [sp + 0xcc] = s1
195600: 82 17 a0 00              a0 = u64 [sp + 0xa0]
195604: 7a 17 d0 00              u32 [sp + 0xd0] = a0
195608: 82 17 98 00              a0 = u64 [sp + 0x98]
195612: 7a 17 d4 00              u32 [sp + 0xd4] = a0
195616: 82 17 90 00              a0 = u64 [sp + 0x90]
195620: 7b 17 d8 00              u64 [sp + 0xd8] = a0
195624: 82 17 88 00              a0 = u64 [sp + 0x88]
195628: 7b 17 60 01              u64 [sp + 0x160] = a0
195632: 95 17 c8 00              a0 = sp + 0xc8
195636: 7b 17 68 01              u64 [sp + 0x168] = a0
195640: 82 17 28                 a0 = u64 [sp + 0x28]
195643: 7b 17 70 01              u64 [sp + 0x170] = a0
195647: 95 18 cc 00              a1 = sp + 0xcc
195651: 7b 18 78 01              u64 [sp + 0x178] = a1
195655: 7b 17 80 01              u64 [sp + 0x180] = a0
195659: 95 18 d0 00              a1 = sp + 0xd0
195663: 7b 18 88 01              u64 [sp + 0x188] = a1
195667: 7b 17 90 01              u64 [sp + 0x190] = a0
195671: 95 18 d4 00              a1 = sp + 0xd4
195675: 7b 18 98 01              u64 [sp + 0x198] = a1
195679: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
195683: 95 17 d8 00              a0 = sp + 0xd8
195687: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
195691: 82 17 58                 a0 = u64 [sp + 0x58]
195694: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
195698: 95 18 e0 00              a1 = sp + 0xe0
195702: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
195706: 82 18 20                 a1 = u64 [sp + 0x20]
195709: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
195713: 95 18 60 01              a1 = sp + 0x160
195717: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
195721: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
195725: 82 17 18                 a0 = u64 [sp + 0x18]
195728: 7b 17 28 02              u64 [sp + 0x228] = a0
195732: 49 21 30 02 07           u64 [sp + 560] = 0x7
195737: 49 21 48 02              u64 [sp + 584] = 0
195741: 95 17 68 01              a0 = sp + 0x168
195745: 7b 17 38 02              u64 [sp + 0x238] = a0
195749: 49 21 40 02 07           u64 [sp + 576] = 0x7
195754: 95 17 58 02              a0 = sp + 0x258
195758: 95 18 28 02              a1 = sp + 0x228
195762: 50 20 ea 0b 5d 06        ra = 3050, jump @13535
      :                          @13415 [@dyn 1525]
195768: 82 15 60 02              s0 = u64 [sp + 0x260]
195772: 82 1b 68 02              a4 = u64 [sp + 0x268]
195776: 82 16 58 02              s1 = u64 [sp + 0x258]
195780: 33 07 02                 a0 = 0x2
195783: 33 08                    a1 = 0
195785: 33 09                    a2 = 0
195787: 64 5a                    a3 = s0
195789: 33 00 ec 0b              ra = 0xbec
195793: 0a 64                    ecalli 100 // 'log'
195795: 01                       fallthrough
      :                          @13416 [@dyn 1526]
195796: 82 17 48                 a0 = u64 [sp + 0x48]
195799: c8 67 07                 a0 = a0 + s1
195802: 82 1b 50                 a4 = u64 [sp + 0x50]
195805: 53 37 00 00 ff 1a        jump @13421 if a0 <u 4294901760
      :                          @13417
195811: 82 b7                    a0 = u64 [a4]
195813: c9 7b 08                 a1 = a4 - a0
195816: ab 58 0f                 jump @13421 if a1 != s0
      :                          @13418
195819: c9 67 08                 a1 = a0 - s1
195822: 01                       fallthrough
      :                          @13419
195823: 82 b9                    a2 = u64 [a4]
195825: ab 79 f2                 jump @13417 if a2 != a0
      :                          @13420
195828: 7b b8                    u64 [a4] = a1
195830: 01                       fallthrough
      :                          @13421
195831: 81 17 cc 00              a0 = i32 [sp + 0xcc]
195835: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
195839: 95 17 ec 01              a0 = sp + 0x1ec
195843: 33 08 04                 a1 = 0x4
195846: 95 19 e0 00              a2 = sp + 0xe0
195850: 33 0a 80 00              a3 = 0x80
195854: 0a 04                    ecalli 4 // 'write'
195856: 0a                       ecalli 0 // 'gas'
195857: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
195861: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
195865: 46 21 07 02 04           u8 [sp + 519] = 0x4
195870: 7b 17 08 02              u64 [sp + 0x208] = a0
195874: 95 17 07 02              a0 = sp + 0x207
195878: 33 08 01                 a1 = 0x1
195881: 95 19 08 02              a2 = sp + 0x208
195885: 33 0a 08                 a3 = 0x8
195888: 0a 04                    ecalli 4 // 'write'
195890: 49 21 68 01 02           u64 [sp + 360] = 0x2
195895: 49 21 78 01 02           u64 [sp + 376] = 0x2
195900: 49 21 88 01              u64 [sp + 392] = 0
195904: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
195914: 7b 17 90 01              u64 [sp + 0x190] = a0
195918: 46 21 98 01 03           u8 [sp + 408] = 0x3
195923: 49 21 a0 01 02           u64 [sp + 416] = 0x2
195928: 49 21 b0 01 02           u64 [sp + 432] = 0x2
195933: 49 21 c0 01 01           u64 [sp + 448] = 0x1
195938: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
195942: 95 17 07 02              a0 = sp + 0x207
195946: 7b 17 58 02              u64 [sp + 0x258] = a0
195950: 82 17 10                 a0 = u64 [sp + 0x10]
195953: 7b 17 60 02              u64 [sp + 0x260] = a0
195957: 95 17 f8 01              a0 = sp + 0x1f8
195961: 7b 17 68 02              u64 [sp + 0x268] = a0
195965: 82 17 58                 a0 = u64 [sp + 0x58]
195968: 7b 17 70 02              u64 [sp + 0x270] = a0
195972: 46 21 d0 01 03           u8 [sp + 464] = 0x3
195977: 82 17 08                 a0 = u64 [sp + 0x8]
195980: 7b 17 28 02              u64 [sp + 0x228] = a0
195984: 49 21 30 02 02           u64 [sp + 560] = 0x2
195989: 95 17 68 01              a0 = sp + 0x168
195993: 7b 17 48 02              u64 [sp + 0x248] = a0
195997: 49 21 50 02 02           u64 [sp + 592] = 0x2
196002: 95 17 58 02              a0 = sp + 0x258
196006: 7b 17 38 02              u64 [sp + 0x238] = a0
196010: 49 21 40 02 02           u64 [sp + 576] = 0x2
196015: 95 17 10 02              a0 = sp + 0x210
196019: 95 18 28 02              a1 = sp + 0x228
196023: 50 20 ee 0b 58 05        ra = 3054, jump @13535
      :                          @13422 [@dyn 1527]
196029: 82 15 18 02              s0 = u64 [sp + 0x218]
196033: 82 1b 20 02              a4 = u64 [sp + 0x220]
196037: 82 16 10 02              s1 = u64 [sp + 0x210]
196041: 33 07 02                 a0 = 0x2
196044: 33 08                    a1 = 0
196046: 33 09                    a2 = 0
196048: 64 5a                    a3 = s0
196050: 33 00 f0 0b              ra = 0xbf0
196054: 0a 64                    ecalli 100 // 'log'
196056: 01                       fallthrough
      :                          @13423 [@dyn 1528]
196057: 82 1b 50                 a4 = u64 [sp + 0x50]
196060: 82 17 48                 a0 = u64 [sp + 0x48]
196063: c8 67 07                 a0 = a0 + s1
196066: 53 37 00 00 ff 1a        jump @13428 if a0 <u 4294901760
      :                          @13424
196072: 82 b7                    a0 = u64 [a4]
196074: c9 7b 08                 a1 = a4 - a0
196077: ab 58 0f                 jump @13428 if a1 != s0
      :                          @13425
196080: c9 67 08                 a1 = a0 - s1
196083: 01                       fallthrough
      :                          @13426
196084: 82 b9                    a2 = u64 [a4]
196086: ab 79 f2                 jump @13424 if a2 != a0
      :                          @13427
196089: 7b b8                    u64 [a4] = a1
196091: 01                       fallthrough
      :                          @13428
196092: 95 17 f0 01              a0 = sp + 0x1f0
196096: 7b 17 58 02              u64 [sp + 0x258] = a0
196100: 82 17 58                 a0 = u64 [sp + 0x58]
196103: 7b 17 60 02              u64 [sp + 0x260] = a0
196107: 82 17                    a0 = u64 [sp]
196109: 7b 17 68 01              u64 [sp + 0x168] = a0
196113: 49 21 70 01 02           u64 [sp + 368] = 0x2
196118: 49 21 88 01              u64 [sp + 392] = 0
196122: 95 17 58 02              a0 = sp + 0x258
196126: 7b 17 78 01              u64 [sp + 0x178] = a0
196130: 49 21 80 01 01           u64 [sp + 384] = 0x1
196135: 95 17 28 02              a0 = sp + 0x228
196139: 95 18 68 01              a1 = sp + 0x168
196143: 50 20 f2 0b e0 04        ra = 3058, jump @13535
      :                          @13429 [@dyn 1529]
196149: 82 15 30 02              s0 = u64 [sp + 0x230]
196153: 82 1b 38 02              a4 = u64 [sp + 0x238]
196157: 82 16 28 02              s1 = u64 [sp + 0x228]
196161: 33 07 02                 a0 = 0x2
196164: 33 08                    a1 = 0
196166: 33 09                    a2 = 0
196168: 64 5a                    a3 = s0
196170: 33 00 f4 0b              ra = 0xbf4
196174: 0a 64                    ecalli 100 // 'log'
196176: 01                       fallthrough
      :                          @13430 [@dyn 1530]
196177: 82 1b 50                 a4 = u64 [sp + 0x50]
196180: 82 17 48                 a0 = u64 [sp + 0x48]
196183: c8 67 07                 a0 = a0 + s1
196186: 53 37 00 00 ff 1a        jump @13435 if a0 <u 4294901760
      :                          @13431
196192: 82 b7                    a0 = u64 [a4]
196194: c9 7b 08                 a1 = a4 - a0
196197: ab 58 0f                 jump @13435 if a1 != s0
      :                          @13432
196200: c9 67 08                 a1 = a0 - s1
196203: 01                       fallthrough
      :                          @13433
196204: 82 b9                    a2 = u64 [a4]
196206: ab 79 f2                 jump @13431 if a2 != a0
      :                          @13434
196209: 7b b8                    u64 [a4] = a1
196211: 01                       fallthrough
      :                          @13435
196212: 82 12 b0 00              t0 = u64 [sp + 0xb0]
196216: 95 22 01                 t0 = t0 + 0x1
196219: 82 17 b8 00              a0 = u64 [sp + 0xb8]
196223: 95 77 98 00              a0 = a0 + 0x98
196227: 7b 17 b8 00              u64 [sp + 0xb8] = a0
196231: 82 1c 40                 a5 = u64 [sp + 0x40]
196234: 82 19 38                 a2 = u64 [sp + 0x38]
196237: 82 1b 30                 a4 = u64 [sp + 0x30]
196240: 82 1a a8 00              a3 = u64 [sp + 0xa8]
196244: 33 08 08                 a1 = 0x8
196247: ae 8c 3f fb              jump @13389 if a5 >=u a1
      :                          @13436
196251: 33 07 00 00 01           a0 = 0x10000
196256: 33 08                    a1 = 0
196258: 82 10 88 02              ra = u64 [sp + 0x288]
196262: 82 15 80 02              s0 = u64 [sp + 0x280]
196266: 82 16 78 02              s1 = u64 [sp + 0x278]
196270: 95 11 90 02              sp = sp + 0x290
196274: 32 00                    ret
      :                          @13437
196276: 00                       trap
      :                          @13438 [@dyn 1531]
196277: 3e 02 00 00 03           u64 [0x30000] = t0
196282: 3e 04 08 00 03           u64 [0x30008] = t2
196287: 82 72                    t0 = u64 [a0]
196289: c8 72 04                 t2 = t0 + a0
196292: 7b 74                    u64 [a0] = t2
196294: 64 27                    a0 = t0
196296: 3a 02 00 00 03           t0 = u64 [0x30000]
196301: 3a 04 08 00 03           t2 = u64 [0x30008]
196306: 32 00                    ret
      :                          @13439
196308: 95 11 b8                 sp = sp + 0xffffffffffffffb8
196311: 7b 10 40                 u64 [sp + 0x40] = ra
196314: 7b 15 38                 u64 [sp + 0x38] = s0
196317: 7b 16 30                 u64 [sp + 0x30] = s1
196320: c8 89 09                 a2 = a2 + a1
196323: ac 89 53                 jump @13447 if a2 <u a1
      :                          @13440
196326: 64 75                    s0 = a0
196328: 82 77                    a0 = u64 [a0]
196330: 97 78 01                 a1 = a0 << 0x1
196333: 33 0a 08                 a3 = 0x8
196336: e4 a9 09                 a2 = maxu(a2, a3)
196339: e4 98 06                 s1 = maxu(a1, a2)
196342: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
196345: 98 88 3f                 a1 = a1 >> 0x3f
196348: 51 07 12                 jump @13442 if a0 == 0
      :                          @13441
196351: 82 59 08                 a2 = u64 [s0 + 0x8]
196354: 7b 19 18                 u64 [sp + 0x18] = a2
196357: 49 11 20 01              u64 [sp + 32] = 0x1
196361: 7b 17 28                 u64 [sp + 0x28] = a0
196364: 28 06                    jump @13443
      :                          @13442
196366: 49 11 20                 u64 [sp + 32] = 0
196369: 01                       fallthrough
      :                          @13443
196370: 64 17                    a0 = sp
196372: 95 1a 18                 a3 = sp + 0x18
196375: 64 69                    a2 = s1
196377: 50 20 f8 0b 33           ra = 3064, jump @13451
      :                          @13444 [@dyn 1532]
196382: 82 18                    a1 = u64 [sp]
196384: 82 17 08                 a0 = u64 [sp + 0x8]
196387: 51 08 14                 jump @13448 if a1 == 0
      :                          @13445
196390: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
196400: aa 87 0d                 jump @13449 if a0 == a1
      :                          @13446
196403: 52 07 18                 jump @13450 if a0 != 0
      :                          @13447
196406: 00                       trap
      :                          @13448
196407: 7b 57 08                 u64 [s0 + 0x8] = a0
196410: 7b 56                    u64 [s0] = s1
196412: 01                       fallthrough
      :                          @13449
196413: 82 10 40                 ra = u64 [sp + 0x40]
196416: 82 15 38                 s0 = u64 [sp + 0x38]
196419: 82 16 30                 s1 = u64 [sp + 0x30]
196422: 95 11 48                 sp = sp + 0x48
196425: 32 00                    ret
      :                          @13450
196427: 00                       trap
      :                          @13451
196428: 95 11 c8                 sp = sp + 0xffffffffffffffc8
196431: 7b 10 30                 u64 [sp + 0x30] = ra
196434: 7b 15 28                 u64 [sp + 0x28] = s0
196437: 7b 16 20                 u64 [sp + 0x20] = s1
196440: 64 95                    s0 = a2
196442: 64 72                    t0 = a0
196444: 51 08 7a                 jump @13461 if a1 == 0
      :                          @13452
196447: 82 a7 08                 a0 = u64 [a3 + 0x8]
196450: 51 07 7d                 jump @13462 if a0 == 0
      :                          @13453
196453: 82 a9 10                 a2 = u64 [a3 + 0x10]
196456: 51 09 ab 00              jump @13469 if a2 == 0
      :                          @13454
196460: 82 a8                    a1 = u64 [a3]
196462: 33 06 c0 22 03           s1 = 0x322c0
196467: 33 03 00 00 01           t1 = 0x10000
196472: c8 36 06                 s1 = s1 + t1
196475: 01                       fallthrough
      :                          @13455
196476: 82 6a                    a3 = u64 [s1]
196478: c8 5a 07                 a0 = a3 + s0
196481: ac a7 d0 00              jump @13475 if a0 <u a3
      :                          @13456
196485: 95 7b 01                 a4 = a0 + 0x1
196488: 88 bc 01                 a5 = a4 <u 0x1
196491: d8 b3 0b                 a4 = t1 <u a4
196494: d4 cb 0b                 a4 = a4 | a5
196497: 52 0b c0 00              jump @13475 if a4 != 0
      :                          @13457
196501: 82 6b                    a4 = u64 [s1]
196503: ab ab e5                 jump @13455 if a4 != a3
      :                          @13458
196506: 7b 67                    u64 [s1] = a0
196508: 33 0c                    a5 = 0
196510: 7b 12 18                 u64 [sp + 0x18] = t0
196513: 33 0a c0 22 03           a3 = 0x322c0
196518: 33 0b 00 00 01           a4 = 0x10000
196523: 7b 1a                    u64 [sp] = a3
196525: c8 ba 0a                 a3 = a3 + a4
196528: c9 7a 07                 a0 = a3 - a0
196531: 7b 17 10                 u64 [sp + 0x10] = a0
196534: 7b 18 08                 u64 [sp + 0x8] = a1
196537: 64 96                    s1 = a2
196539: 50 20 fa 0b 71 09        ra = 3066, jump @13621
      :                          @13459 [@dyn 1533]
196545: 54 36 00 00 01 98 00     jump @13476 if s1 <=u 65536
      :                          @13460
196552: 82 12 18                 t0 = u64 [sp + 0x18]
196555: 82 18 10                 a1 = u64 [sp + 0x10]
196558: 33 07                    a0 = 0
196560: 7b 28 08                 u64 [t0 + 0x8] = a1
196563: 28 b5 00                 jump @13482
      :                          @13461
196566: 49 12 08                 u64 [t0 + 8] = 0
196569: 33 07 01                 a0 = 0x1
196572: 28 ac 00                 jump @13482
      :                          @13462
196575: 33 09 c0 22 03           a2 = 0x322c0
196580: 33 07 00 00 01           a0 = 0x10000
196585: c8 79 09                 a2 = a2 + a0
196588: 01                       fallthrough
      :                          @13463
196589: 82 9a                    a3 = u64 [a2]
196591: c8 5a 08                 a1 = a3 + s0
196594: ac a8 5f                 jump @13475 if a1 <u a3
      :                          @13464
196597: 95 8b 01                 a4 = a1 + 0x1
196600: 88 bc 01                 a5 = a4 <u 0x1
196603: d8 b7 0b                 a4 = a0 <u a4
196606: d4 cb 0b                 a4 = a4 | a5
196609: 52 0b 50                 jump @13475 if a4 != 0
      :                          @13465
196612: 82 9b                    a4 = u64 [a2]
196614: ab ab e7                 jump @13463 if a4 != a3
      :                          @13466
196617: 7b 98                    u64 [a2] = a1
196619: 33 0c                    a5 = 0
196621: 01                       fallthrough
      :                          @13467
196622: ab ab df                 jump @13463 if a4 != a3
      :                          @13468
196625: 28 31                    jump @13474
      :                          @13469
196627: 33 09 c0 22 03           a2 = 0x322c0
196632: 33 07 00 00 01           a0 = 0x10000
196637: c8 79 09                 a2 = a2 + a0
196640: 01                       fallthrough
      :                          @13470
196641: 82 9a                    a3 = u64 [a2]
196643: c8 5a 08                 a1 = a3 + s0
196646: ac a8 2b                 jump @13475 if a1 <u a3
      :                          @13471
196649: 95 8b 01                 a4 = a1 + 0x1
196652: 88 bc 01                 a5 = a4 <u 0x1
196655: d8 b7 0b                 a4 = a0 <u a4
196658: d4 cb 0b                 a4 = a4 | a5
196661: 52 0b 1c                 jump @13475 if a4 != 0
      :                          @13472
196664: 82 9b                    a4 = u64 [a2]
196666: ab ab e7                 jump @13470 if a4 != a3
      :                          @13473
196669: 7b 98                    u64 [a2] = a1
196671: 33 0c                    a5 = 0
196673: 01                       fallthrough
      :                          @13474
196674: 33 07 c0 22 04           a0 = 0x422c0
196679: c9 87 08                 a1 = a0 - a1
196682: 33 07                    a0 = 0
196684: 7b 28 08                 u64 [t0 + 0x8] = a1
196687: 28 39                    jump @13482
      :                          @13475
196689: 33 07 01                 a0 = 0x1
196692: 7b 27 08                 u64 [t0 + 0x8] = a0
196695: 28 31                    jump @13482
      :                          @13476
196697: 64 6c                    a5 = s1
196699: 82 17                    a0 = u64 [sp]
196701: 95 77 00 00 01           a0 = a0 + 0x10000
196706: 82 12 18                 t0 = u64 [sp + 0x18]
196709: 82 16 08                 s1 = u64 [sp + 0x8]
196712: 01                       fallthrough
      :                          @13477
196713: 82 78                    a1 = u64 [a0]
196715: c9 87 09                 a2 = a0 - a1
196718: ab 69 11                 jump @13481 if a2 != s1
      :                          @13478
196721: c9 c8 09                 a2 = a1 - a5
196724: 01                       fallthrough
      :                          @13479
196725: 82 7a                    a3 = u64 [a0]
196727: ab 8a f2                 jump @13477 if a3 != a1
      :                          @13480
196730: 7b 79                    u64 [a0] = a2
196732: 33 0b                    a4 = 0
196734: 01                       fallthrough
      :                          @13481
196735: 82 18 10                 a1 = u64 [sp + 0x10]
196738: 33 07                    a0 = 0
196740: 7b 28 08                 u64 [t0 + 0x8] = a1
196743: 01                       fallthrough
      :                          @13482
196744: 7b 25 10                 u64 [t0 + 0x10] = s0
196747: 7b 27                    u64 [t0] = a0
196749: 82 10 30                 ra = u64 [sp + 0x30]
196752: 82 15 28                 s0 = u64 [sp + 0x28]
196755: 82 16 20                 s1 = u64 [sp + 0x20]
196758: 95 11 38                 sp = sp + 0x38
196761: 32 00                    ret
      :                          @13483
196763: 95 11 b8                 sp = sp + 0xffffffffffffffb8
196766: 7b 10 40                 u64 [sp + 0x40] = ra
196769: 7b 15 38                 u64 [sp + 0x38] = s0
196772: 7b 16 30                 u64 [sp + 0x30] = s1
196775: 95 88 01                 a1 = a1 + 0x1
196778: 51 08 54                 jump @13491 if a1 == 0
      :                          @13484
196781: 64 75                    s0 = a0
196783: 82 77                    a0 = u64 [a0]
196785: 97 79 01                 a2 = a0 << 0x1
196788: 33 0a 08                 a3 = 0x8
196791: e4 a8 08                 a1 = maxu(a1, a3)
196794: e4 89 06                 s1 = maxu(a2, a1)
196797: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
196800: 98 88 3f                 a1 = a1 >> 0x3f
196803: 51 07 12                 jump @13486 if a0 == 0
      :                          @13485
196806: 82 59 08                 a2 = u64 [s0 + 0x8]
196809: 7b 19 18                 u64 [sp + 0x18] = a2
196812: 49 11 20 01              u64 [sp + 32] = 0x1
196816: 7b 17 28                 u64 [sp + 0x28] = a0
196819: 28 06                    jump @13487
      :                          @13486
196821: 49 11 20                 u64 [sp + 32] = 0
196824: 01                       fallthrough
      :                          @13487
196825: 64 17                    a0 = sp
196827: 95 1a 18                 a3 = sp + 0x18
196830: 64 69                    a2 = s1
196832: 50 20 fc 0b 6c fe        ra = 3068, jump @13451
      :                          @13488 [@dyn 1534]
196838: 82 18                    a1 = u64 [sp]
196840: 82 17 08                 a0 = u64 [sp + 0x8]
196843: 51 08 14                 jump @13492 if a1 == 0
      :                          @13489
196846: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
196856: aa 87 0d                 jump @13493 if a0 == a1
      :                          @13490
196859: 52 07 18                 jump @13494 if a0 != 0
      :                          @13491
196862: 00                       trap
      :                          @13492
196863: 7b 57 08                 u64 [s0 + 0x8] = a0
196866: 7b 56                    u64 [s0] = s1
196868: 01                       fallthrough
      :                          @13493
196869: 82 10 40                 ra = u64 [sp + 0x40]
196872: 82 15 38                 s0 = u64 [sp + 0x38]
196875: 82 16 30                 s1 = u64 [sp + 0x30]
196878: 95 11 48                 sp = sp + 0x48
196881: 32 00                    ret
      :                          @13494
196883: 00                       trap
      :                          @13495
196884: 95 11 70 ff              sp = sp + 0xffffffffffffff70
196888: 7b 10 88 00              u64 [sp + 0x88] = ra
196892: 7b 15 80 00              u64 [sp + 0x80] = s0
196896: 7b 16 78                 u64 [sp + 0x78] = s1
196899: 64 95                    s0 = a2
196901: 7b 17                    u64 [sp] = a0
196903: 7b 18 20                 u64 [sp + 0x20] = a1
196906: 7b 19 28                 u64 [sp + 0x28] = a2
196909: 95 17 58                 a0 = sp + 0x58
196912: 95 18 20                 a1 = sp + 0x20
196915: 50 20 fe 0b ac 1e        ra = 3070, jump @13999
      :                          @13496 [@dyn 1535]
196921: 82 12 58                 t0 = u64 [sp + 0x58]
196924: 51 02 4d                 jump @13505 if t0 == 0
      :                          @13497
196927: 82 17 70                 a0 = u64 [sp + 0x70]
196930: 82 19 60                 a2 = u64 [sp + 0x60]
196933: 51 07 4c                 jump @13506 if a0 == 0
      :                          @13498
196936: 51 05 60                 jump @13507 if s0 == 0
      :                          @13499
196939: 57 05 c3 01              jump @13534 if s0 <s 0
      :                          @13500
196943: 33 07 c0 22 03           a0 = 0x322c0
196948: 33 06 00 00 01           s1 = 0x10000
196953: c8 67 07                 a0 = a0 + s1
196956: 01                       fallthrough
      :                          @13501
196957: 82 7a                    a3 = u64 [a0]
196959: c8 5a 08                 a1 = a3 + s0
196962: ac a8 ab 01              jump @13533 if a1 <u a3
      :                          @13502
196966: 95 8b 01                 a4 = a1 + 0x1
196969: 88 bc 01                 a5 = a4 <u 0x1
196972: d8 b6 0b                 a4 = s1 <u a4
196975: d4 cb 0b                 a4 = a4 | a5
196978: 52 0b 9b 01              jump @13533 if a4 != 0
      :                          @13503
196982: 82 7b                    a4 = u64 [a0]
196984: ab ab e5                 jump @13501 if a4 != a3
      :                          @13504
196987: 7b 78                    u64 [a0] = a1
196989: 33 0c                    a5 = 0
196991: 33 07 c0 22 04           a0 = 0x422c0
196996: c9 87 07                 a0 = a0 - a1
196999: 28 25                    jump @13508
      :                          @13505
197001: 33 09                    a2 = 0
197003: 33 02 f0 2f 01           t0 = 0x12ff0
197008: 01                       fallthrough
      :                          @13506
197009: 82 18                    a1 = u64 [sp]
197011: 7b 82 08                 u64 [a1 + 0x8] = t0
197014: 7b 89 10                 u64 [a1 + 0x10] = a2
197017: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
197027: 7b 87                    u64 [a1] = a0
197029: 28 23 01                 jump @13528
      :                          @13507
197032: 33 07 01                 a0 = 0x1
197035: 01                       fallthrough
      :                          @13508
197036: 33 08                    a1 = 0
197038: 7b 15 30                 u64 [sp + 0x30] = s0
197041: 7b 17 38                 u64 [sp + 0x38] = a0
197044: 49 11 40                 u64 [sp + 64] = 0
197047: ac 95 22 01              jump @13529 if s0 <u a2
      :                          @13509
197051: 7b 18 10                 u64 [sp + 0x10] = a1
197054: 7b 17 18                 u64 [sp + 0x18] = a0
197057: c8 87 07                 a0 = a0 + a1
197060: 64 28                    a1 = t0
197062: 64 96                    s1 = a2
197064: 50 20 00 0c 64 07        ra = 3072, jump @13621
      :                          @13510 [@dyn 1536]
197070: 82 18 10                 a1 = u64 [sp + 0x10]
197073: c8 68 08                 a1 = a1 + s1
197076: c9 85 05                 s0 = s0 - a1
197079: 7b 18 40                 u64 [sp + 0x40] = a1
197082: 54 15 02 1e 01           jump @13531 if s0 <=u 2
      :                          @13511
197087: 82 17 18                 a0 = u64 [sp + 0x18]
197090: 01                       fallthrough
      :                          @13512
197091: 7b 17 18                 u64 [sp + 0x18] = a0
197094: c8 87 07                 a0 = a0 + a1
197097: 46 17 02 bd 00           u8 [a0 + 2] = 0xbd
197102: 46 17 01 bf 00           u8 [a0 + 1] = 0xbf
197107: 46 07 ef 00              u8 [a0 + 0] = 0xef
197111: 82 17 20                 a0 = u64 [sp + 0x20]
197114: 82 19 28                 a2 = u64 [sp + 0x28]
197117: 95 88 03                 a1 = a1 + 0x3
197120: 7b 18 10                 u64 [sp + 0x10] = a1
197123: 7b 18 40                 u64 [sp + 0x40] = a1
197126: 7b 17 48                 u64 [sp + 0x48] = a0
197129: 7b 19 50                 u64 [sp + 0x50] = a2
197132: 28 06                    jump @13514
      :                          @13513
197134: 7b 1a 10                 u64 [sp + 0x10] = a3
197137: 01                       fallthrough
      :                          @13514
197138: 95 17 58                 a0 = sp + 0x58
197141: 95 18 48                 a1 = sp + 0x48
197144: 50 20 02 0c c7 1d        ra = 3074, jump @13999
      :                          @13515 [@dyn 1537]
197150: 82 15 58                 s0 = u64 [sp + 0x58]
197153: 51 05 93 00              jump @13527 if s0 == 0
      :                          @13516
197157: 82 17 30                 a0 = u64 [sp + 0x30]
197160: 82 16 60                 s1 = u64 [sp + 0x60]
197163: 82 18 70                 a1 = u64 [sp + 0x70]
197166: 7b 18 08                 u64 [sp + 0x8] = a1
197169: 82 1a 10                 a3 = u64 [sp + 0x10]
197172: c9 a7 07                 a0 = a0 - a3
197175: ac 67 52                 jump @13523 if a0 <u s1
      :                          @13517
197178: 82 17 18                 a0 = u64 [sp + 0x18]
197181: 01                       fallthrough
      :                          @13518
197182: 7b 17 18                 u64 [sp + 0x18] = a0
197185: c8 a7 07                 a0 = a0 + a3
197188: 64 58                    a1 = s0
197190: 64 69                    a2 = s1
197192: 64 a5                    s0 = a3
197194: 50 20 04 0c e2 06        ra = 3076, jump @13621
      :                          @13519 [@dyn 1538]
197200: c8 65 0a                 a3 = s0 + s1
197203: 7b 1a 40                 u64 [sp + 0x40] = a3
197206: 82 17 08                 a0 = u64 [sp + 0x8]
197209: 51 07 b5                 jump @13513 if a0 == 0
      :                          @13520
197212: 82 17 30                 a0 = u64 [sp + 0x30]
197215: c9 a7 07                 a0 = a0 - a3
197218: 54 17 02 3c              jump @13525 if a0 <=u 2
      :                          @13521
197222: 82 17 18                 a0 = u64 [sp + 0x18]
197225: 01                       fallthrough
      :                          @13522
197226: 7b 17 18                 u64 [sp + 0x18] = a0
197229: c8 a7 07                 a0 = a0 + a3
197232: 46 17 02 bd 00           u8 [a0 + 2] = 0xbd
197237: 46 17 01 bf 00           u8 [a0 + 1] = 0xbf
197242: 46 07 ef 00              u8 [a0 + 0] = 0xef
197246: 95 aa 03                 a3 = a3 + 0x3
197249: 7b 1a 10                 u64 [sp + 0x10] = a3
197252: 7b 1a 40                 u64 [sp + 0x40] = a3
197255: 28 8b                    jump @13514
      :                          @13523
197257: 95 17 30                 a0 = sp + 0x30
197260: 64 a8                    a1 = a3
197262: 64 69                    a2 = s1
197264: 50 20 06 0c 44 fc        ra = 3078, jump @13439
      :                          @13524 [@dyn 1539]
197270: 82 1a 40                 a3 = u64 [sp + 0x40]
197273: 82 17 38                 a0 = u64 [sp + 0x38]
197276: 28 a2                    jump @13518
      :                          @13525
197278: 95 17 30                 a0 = sp + 0x30
197281: 33 09 03                 a2 = 0x3
197284: 64 a8                    a1 = a3
197286: 50 20 08 0c 2e fc        ra = 3080, jump @13439
      :                          @13526 [@dyn 1540]
197292: 82 1a 40                 a3 = u64 [sp + 0x40]
197295: 82 17 38                 a0 = u64 [sp + 0x38]
197298: 28 b8                    jump @13522
      :                          @13527
197300: 82 17 40                 a0 = u64 [sp + 0x40]
197303: 82 18 38                 a1 = u64 [sp + 0x38]
197306: 82 19 30                 a2 = u64 [sp + 0x30]
197309: 82 1a                    a3 = u64 [sp]
197311: 7b a7 10                 u64 [a3 + 0x10] = a0
197314: 7b a8 08                 u64 [a3 + 0x8] = a1
197317: 7b a9                    u64 [a3] = a2
197319: 01                       fallthrough
      :                          @13528
197320: 82 10 88 00              ra = u64 [sp + 0x88]
197324: 82 15 80 00              s0 = u64 [sp + 0x80]
197328: 82 16 78                 s1 = u64 [sp + 0x78]
197331: 95 11 90 00              sp = sp + 0x90
197335: 32 00                    ret
      :                          @13529
197337: 95 17 30                 a0 = sp + 0x30
197340: 33 08                    a1 = 0
197342: 64 95                    s0 = a2
197344: 64 26                    s1 = t0
197346: 50 20 0a 0c f2 fb        ra = 3082, jump @13439
      :                          @13530 [@dyn 1541]
197352: 64 62                    t0 = s1
197354: 64 59                    a2 = s0
197356: 82 18 40                 a1 = u64 [sp + 0x40]
197359: 82 17 38                 a0 = u64 [sp + 0x38]
197362: 82 15 30                 s0 = u64 [sp + 0x30]
197365: 28 c6 fe                 jump @13509
      :                          @13531
197368: 95 17 30                 a0 = sp + 0x30
197371: 33 09 03                 a2 = 0x3
197374: 50 20 0c 0c d6 fb        ra = 3084, jump @13439
      :                          @13532 [@dyn 1542]
197380: 82 18 40                 a1 = u64 [sp + 0x40]
197383: 82 17 38                 a0 = u64 [sp + 0x38]
197386: 28 d9 fe                 jump @13512
      :                          @13533
197389: 00                       trap
      :                          @13534
197390: 00                       trap
      :                          @13535
197391: 95 11 c8                 sp = sp + 0xffffffffffffffc8
197394: 7b 10 30                 u64 [sp + 0x30] = ra
197397: 7b 15 28                 u64 [sp + 0x28] = s0
197400: 7b 16 20                 u64 [sp + 0x20] = s1
197403: 64 89                    a2 = a1
197405: 82 8a 08                 a3 = u64 [a1 + 0x8]
197408: 64 75                    s0 = a0
197410: 51 0a 35                 jump @13540 if a3 == 0
      :                          @13536
197413: 82 98                    a1 = u64 [a2]
197415: 33 07                    a0 = 0
197417: 95 8b 08                 a4 = a1 + 0x8
197420: 01                       fallthrough
      :                          @13537
197421: 82 bc                    a5 = u64 [a4]
197423: c8 c7 07                 a0 = a0 + a5
197426: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
197429: 95 bb 10                 a4 = a4 + 0x10
197432: 52 0a f5                 jump @13537 if a3 != 0
      :                          @13538
197435: 82 9a 18                 a3 = u64 [a2 + 0x18]
197438: 51 0a 24                 jump @13542 if a3 == 0
      :                          @13539
197441: 82 88 08                 a1 = u64 [a1 + 0x8]
197444: 8e 88                    a1 = a1 >u 0
197446: 88 7a 10                 a3 = a0 <u 0x10
197449: 85 aa 01                 a3 = a3 ^ 0x1
197452: d4 a8 08                 a1 = a1 | a3
197455: 89 7a                    a3 = a0 <s 0
197457: e0 a8 08                 a1 = a1 & ~a3
197460: 52 08 0a                 jump @13541 if a1 != 0
      :                          @13540
197463: 33 07                    a0 = 0
197465: 33 08 01                 a1 = 0x1
197468: 28 4a                    jump @13550
      :                          @13541
197470: 97 77 01                 a0 = a0 << 0x1
197473: 01                       fallthrough
      :                          @13542
197474: 51 07 40                 jump @13549 if a0 == 0
      :                          @13543
197477: 57 07 79                 jump @13555 if a0 <s 0
      :                          @13544
197480: 64 52                    t0 = s0
197482: 33 0b c0 22 03           a4 = 0x322c0
197487: 33 08 00 00 01           a1 = 0x10000
197492: c8 8b 0b                 a4 = a4 + a1
197495: 01                       fallthrough
      :                          @13545
197496: 82 bc                    a5 = u64 [a4]
197498: c8 7c 0a                 a3 = a5 + a0
197501: ac ca 5f                 jump @13553 if a3 <u a5
      :                          @13546
197504: 95 a5 01                 s0 = a3 + 0x1
197507: 88 56 01                 s1 = s0 <u 0x1
197510: d8 58 05                 s0 = a1 <u s0
197513: d4 65 05                 s0 = s0 | s1
197516: 52 05 50                 jump @13553 if s0 != 0
      :                          @13547
197519: 82 b6                    s1 = u64 [a4]
197521: ab c6 e7                 jump @13545 if s1 != a5
      :                          @13548
197524: 7b ba                    u64 [a4] = a3
197526: 33 08 c0 22 04           a1 = 0x422c0
197531: c9 a8 08                 a1 = a1 - a3
197534: 64 25                    s0 = t0
197536: 28 06                    jump @13550
      :                          @13549
197538: 33 08 01                 a1 = 0x1
197541: 01                       fallthrough
      :                          @13550
197542: 7b 17                    u64 [sp] = a0
197544: 7b 18 08                 u64 [sp + 0x8] = a1
197547: 49 11 10                 u64 [sp + 16] = 0
197550: 33 08 c0 2f 01           a1 = 0x12fc0
197555: 64 17                    a0 = sp
197557: 50 20 0e 0c a2 0f        ra = 3086, jump @13829
      :                          @13551 [@dyn 1543]
197563: 52 07 22                 jump @13554 if a0 != 0
      :                          @13552
197566: 82 17 10                 a0 = u64 [sp + 0x10]
197569: 82 18 08                 a1 = u64 [sp + 0x8]
197572: 82 19                    a2 = u64 [sp]
197574: 7b 57 10                 u64 [s0 + 0x10] = a0
197577: 7b 58 08                 u64 [s0 + 0x8] = a1
197580: 7b 59                    u64 [s0] = a2
197582: 82 10 30                 ra = u64 [sp + 0x30]
197585: 82 15 28                 s0 = u64 [sp + 0x28]
197588: 82 16 20                 s1 = u64 [sp + 0x20]
197591: 95 11 38                 sp = sp + 0x38
197594: 32 00                    ret
      :                          @13553
197596: 00                       trap
      :                          @13554
197597: 00                       trap
      :                          @13555
197598: 00                       trap
      :                          @13556 [@dyn 1544]
197599: 82 72                    t0 = u64 [a0]
197601: 33 09 00 00 ff           a2 = 0xffffffffffff0000
197606: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
197611: ac 9a 28                 jump @13562 if a3 <u a2
      :                          @13557
197614: 82 77 08                 a0 = u64 [a0 + 0x8]
197617: 33 09 c0 22 03           a2 = 0x322c0
197622: 95 99 00 00 01           a2 = a2 + 0x10000
197627: 01                       fallthrough
      :                          @13558
197628: 82 9a                    a3 = u64 [a2]
197630: c9 a9 0b                 a4 = a2 - a3
197633: ab 7b 12                 jump @13562 if a4 != a0
      :                          @13559
197636: c9 2a 0b                 a4 = a3 - t0
197639: 01                       fallthrough
      :                          @13560
197640: 82 9c                    a5 = u64 [a2]
197642: ab ac f2                 jump @13558 if a5 != a3
      :                          @13561
197645: 7b 9b                    u64 [a2] = a4
197647: 33 08                    a1 = 0
197649: 32 00                    ret
      :                          @13562
197651: 32 00                    ret
      :                          @13563 [@dyn 1545]
197653: 95 11 e0                 sp = sp + 0xffffffffffffffe0
197656: 7b 10 18                 u64 [sp + 0x18] = ra
197659: 7b 15 10                 u64 [sp + 0x10] = s0
197662: 7b 16 08                 u64 [sp + 0x8] = s1
197665: 64 75                    s0 = a0
197667: 82 7a 10                 a3 = u64 [a0 + 0x10]
197670: 82 77                    a0 = u64 [a0]
197672: c9 a7 07                 a0 = a0 - a3
197675: 64 96                    s1 = a2
197677: ac 97 2b                 jump @13566 if a0 <u a2
      :                          @13564
197680: 7b 1a                    u64 [sp] = a3
197682: 82 57 08                 a0 = u64 [s0 + 0x8]
197685: c8 a7 07                 a0 = a0 + a3
197688: 64 69                    a2 = s1
197690: 50 20 14 0c f2 04        ra = 3092, jump @13621
      :                          @13565 [@dyn 1546]
197696: 82 17                    a0 = u64 [sp]
197698: c8 76 06                 s1 = s1 + a0
197701: 7b 56 10                 u64 [s0 + 0x10] = s1
197704: 33 07                    a0 = 0
197706: 82 10 18                 ra = u64 [sp + 0x18]
197709: 82 15 10                 s0 = u64 [sp + 0x10]
197712: 82 16 08                 s1 = u64 [sp + 0x8]
197715: 95 11 20                 sp = sp + 0x20
197718: 32 00                    ret
      :                          @13566
197720: 64 57                    a0 = s0
197722: 7b 18                    u64 [sp] = a1
197724: 64 a8                    a1 = a3
197726: 64 69                    a2 = s1
197728: 50 20 16 0c 74 fa        ra = 3094, jump @13439
      :                          @13567 [@dyn 1547]
197734: 82 18                    a1 = u64 [sp]
197736: 82 5a 10                 a3 = u64 [s0 + 0x10]
197739: 28 c5                    jump @13564
      :                          @13568 [@dyn 1548]
197741: 95 11 d8                 sp = sp + 0xffffffffffffffd8
197744: 7b 10 20                 u64 [sp + 0x20] = ra
197747: 7b 15 18                 u64 [sp + 0x18] = s0
197750: 7b 16 10                 u64 [sp + 0x10] = s1
197753: 64 86                    s1 = a1
197755: 83 88                    i32 a1 = a1 + 0
197757: 33 09 80 00              a2 = 0x80
197761: 64 7a                    a3 = a0
197763: ae 98 2c                 jump @13573 if a1 >=u a2
      :                          @13569
197766: 82 a8 10                 a1 = u64 [a3 + 0x10]
197769: 82 a7                    a0 = u64 [a3]
197771: ab 78 13                 jump @13572 if a1 != a0
      :                          @13570
197774: 64 a7                    a0 = a3
197776: 64 a5                    s0 = a3
197778: 50 20 1a 0c 09 fc        ra = 3098, jump @13483
      :                          @13571 [@dyn 1549]
197784: 64 5a                    a3 = s0
197786: 82 58 10                 a1 = u64 [s0 + 0x10]
197789: 01                       fallthrough
      :                          @13572
197790: 82 a7 08                 a0 = u64 [a3 + 0x8]
197793: c8 87 07                 a0 = a0 + a1
197796: 78 76                    u8 [a0] = s1
197798: 95 88 01                 a1 = a1 + 0x1
197801: 7b a8 10                 u64 [a3 + 0x10] = a1
197804: 28 ad 00                 jump @13581
      :                          @13573
197807: 8b 67 0b                 i32 a0 = s1 >> 0xb
197810: 48 11 0c                 u32 [sp + 12] = 0
197813: 52 07 1c                 jump @13575 if a0 != 0
      :                          @13574
197816: 98 67 06                 a0 = s1 >> 0x6
197819: 86 77 c0 00              a0 = a0 | 0xc0
197823: 78 17 0c                 u8 [sp + 0xc] = a0
197826: 84 67 3f                 a0 = s1 & 0x3f
197829: 86 77 80 00              a0 = a0 | 0x80
197833: 78 17 0d                 u8 [sp + 0xd] = a0
197836: 33 06 02                 s1 = 0x2
197839: 28 63                    jump @13578
      :                          @13575
197841: 8b 67 10                 i32 a0 = s1 >> 0x10
197844: 52 07 29                 jump @13577 if a0 != 0
      :                          @13576
197847: 98 67 0c                 a0 = s1 >> 0xc
197850: 86 77 e0 00              a0 = a0 | 0xe0
197854: 78 17 0c                 u8 [sp + 0xc] = a0
197857: 97 67 34                 a0 = s1 << 0x34
197860: 98 77 3a                 a0 = a0 >> 0x3a
197863: 95 77 80 00              a0 = a0 + 0x80
197867: 78 17 0d                 u8 [sp + 0xd] = a0
197870: 84 67 3f                 a0 = s1 & 0x3f
197873: 86 77 80 00              a0 = a0 | 0x80
197877: 78 17 0e                 u8 [sp + 0xe] = a0
197880: 33 06 03                 s1 = 0x3
197883: 28 37                    jump @13578
      :                          @13577
197885: 97 67 2b                 a0 = s1 << 0x2b
197888: 98 77 3d                 a0 = a0 >> 0x3d
197891: 95 77 f0 00              a0 = a0 + 0xf0
197895: 78 17 0c                 u8 [sp + 0xc] = a0
197898: 97 67 2e                 a0 = s1 << 0x2e
197901: 98 77 3a                 a0 = a0 >> 0x3a
197904: 95 77 80 00              a0 = a0 + 0x80
197908: 78 17 0d                 u8 [sp + 0xd] = a0
197911: 97 67 34                 a0 = s1 << 0x34
197914: 98 77 3a                 a0 = a0 >> 0x3a
197917: 95 77 80 00              a0 = a0 + 0x80
197921: 78 17 0e                 u8 [sp + 0xe] = a0
197924: 84 67 3f                 a0 = s1 & 0x3f
197927: 86 77 80 00              a0 = a0 | 0x80
197931: 78 17 0f                 u8 [sp + 0xf] = a0
197934: 33 06 04                 s1 = 0x4
197937: 01                       fallthrough
      :                          @13578
197938: 82 a5 10                 s0 = u64 [a3 + 0x10]
197941: 82 a7                    a0 = u64 [a3]
197943: c9 57 07                 a0 = a0 - s0
197946: ac 67 2f                 jump @13582 if a0 <u s1
      :                          @13579
197949: 7b 1a                    u64 [sp] = a3
197951: 82 a7 08                 a0 = u64 [a3 + 0x8]
197954: c8 57 07                 a0 = a0 + s0
197957: 95 18 0c                 a1 = sp + 0xc
197960: 64 69                    a2 = s1
197962: 50 20 1c 0c e2 03        ra = 3100, jump @13621
      :                          @13580 [@dyn 1550]
197968: c8 56 06                 s1 = s1 + s0
197971: 82 17                    a0 = u64 [sp]
197973: 7b 76 10                 u64 [a0 + 0x10] = s1
197976: 01                       fallthrough
      :                          @13581
197977: 33 07                    a0 = 0
197979: 82 10 20                 ra = u64 [sp + 0x20]
197982: 82 15 18                 s0 = u64 [sp + 0x18]
197985: 82 16 10                 s1 = u64 [sp + 0x10]
197988: 95 11 28                 sp = sp + 0x28
197991: 32 00                    ret
      :                          @13582
197993: 64 a7                    a0 = a3
197995: 64 58                    a1 = s0
197997: 64 69                    a2 = s1
197999: 64 a5                    s0 = a3
198001: 50 20 1e 0c 63 f9        ra = 3102, jump @13439
      :                          @13583 [@dyn 1551]
198007: 64 5a                    a3 = s0
198009: 82 55 10                 s0 = u64 [s0 + 0x10]
198012: 28 c1                    jump @13579
      :                          @13584 [@dyn 1552]
198014: 64 8a                    a3 = a1
198016: 33 08 c0 2f 01           a1 = 0x12fc0
198021: 64 a9                    a2 = a3
198023: 28 d0 0d                 jump @13829
      :                          @13585
198026: 95 11 90                 sp = sp + 0xffffffffffffff90
198029: 7b 10 68                 u64 [sp + 0x68] = ra
198032: 7b 15 60                 u64 [sp + 0x60] = s0
198035: 7b 16 58                 u64 [sp + 0x58] = s1
198038: 68 bc                    a5 = clz a4
198040: 68 a6                    s1 = clz a3
198042: 95 65 40                 s0 = s1 + 0x40
198045: db bc 05                 s0 = a5 if a4 != 0
198048: 68 9c                    a5 = clz a2
198050: 68 86                    s1 = clz a1
198052: 95 66 40                 s1 = s1 + 0x40
198055: db 9c 06                 s1 = a5 if a2 != 0
198058: 64 70                    ra = a0
198060: ae 56 13                 jump @13589 if s1 >=u s0
      :                          @13586
198063: 33 07 3f                 a0 = 0x3f
198066: ae 67 2f                 jump @13590 if a0 >=u s1
      :                          @13587
198069: 51 0a b4 00              jump @13596 if a3 == 0
      :                          @13588
198073: cb a8 03                 t1 = a1 /u a3
198076: 28 ad 00                 jump @13596
      :                          @13589
198079: 33 02                    t0 = 0
198081: d8 a8 07                 a0 = a1 <u a3
198084: 85 9c                    a5 = a2 ^ 0
198086: 88 96                    s1 = a2 <u 0
198088: da c7 06                 s1 = a0 if a5 == 0
198091: 85 63 01                 t1 = s1 ^ 0x1
198094: 94 6b                    a4 = 0 if s1 != 0
198096: 94 6a                    a3 = 0 if s1 != 0
198098: d8 a8 07                 a0 = a1 <u a3
198101: c9 b9 09                 a2 = a2 - a4
198104: c9 79 09                 a2 = a2 - a0
198107: c9 a8 08                 a1 = a1 - a3
198110: 28 d0 02                 jump @13616
      :                          @13590
198113: 54 15 5f 42              jump @13593 if s0 <=u 95
      :                          @13591
198117: 97 ab 20                 a4 = a3 << 0x20
198120: 98 bb 20                 a4 = a4 >> 0x20
198123: 51 0b 96 01              jump @13603 if a4 == 0
      :                          @13592
198127: 14 07 ff ff ff ff 00 00 00 00 a0 = 0xffffffff
198137: cb b9 0c                 a5 = a2 /u a4
198140: c0 ac 0a                 i32 a3 = a5 * a3
198143: bf a9 09                 i32 a2 = a2 - a3
198146: 97 99 20                 a2 = a2 << 0x20
198149: 98 86 20                 s1 = a1 >> 0x20
198152: d4 69 09                 a2 = a2 | s1
198155: cb b9 0a                 a3 = a2 /u a4
198158: ca ba 09                 a2 = a3 * a4
198161: bf 96 06                 i32 s1 = s1 - a2
198164: d2 87 07                 a0 = a0 & a1
198167: 97 68 20                 a1 = s1 << 0x20
198170: d4 78 08                 a1 = a1 | a0
198173: cb b8 06                 s1 = a1 /u a4
198176: 28 61 01                 jump @13603
      :                          @13593
198179: c9 65 07                 a0 = s0 - s1
198182: 49 11 30                 u64 [sp + 48] = 0
198185: 55 17 20 4a              jump @13597 if a0 >=u 32
      :                          @13594
198189: 9a 64 40                 t2 = 0x40 - s1
198192: 8d 67                    i32 a0 = -s1
198194: d0 7a 02                 t0 = a3 >> a0
198197: 97 4c 20                 a5 = t2 << 0x20
198200: 98 cc 20                 a5 = a5 >> 0x20
198203: 85 c6 ff                 s1 = a5 ^ 0xffffffffffffffff
198206: 9b 67                    a0 = 0 << s1
198208: d4 72 03                 t1 = t0 | a0
198211: 9c c7                    a0 = 0 >> a5
198213: 95 c5 c0                 s0 = a5 + 0xffffffffffffffc0
198216: 89 52                    t0 = s0 <s 0
198218: db 23 07                 a0 = t1 if t0 != 0
198221: 51 07 48 01              jump @13604 if a0 == 0
      :                          @13595
198225: d0 48 03                 t1 = a1 >> t2
198228: 97 95 01                 s0 = a2 << 0x1
198231: cf 65 06                 s1 = s0 << s1
198234: d4 63 06                 s1 = t1 | s1
198237: d0 c9 0c                 a5 = a2 >> a5
198240: db 26 0c                 a5 = s1 if t0 != 0
198243: cb 7c 03                 t1 = a5 /u a0
198246: 28 2f 01                 jump @13604
      :                          @13596
198249: 33 09                    a2 = 0
198251: 33 02                    t0 = 0
198253: cd a8 08                 a1 = a1 %u a3
198256: 28 3e 02                 jump @13616
      :                          @13597
198259: 7b 10 10                 u64 [sp + 0x10] = ra
198262: 33 03                    t1 = 0
198264: 33 02                    t0 = 0
198266: 7b 15 28                 u64 [sp + 0x28] = s0
198269: 9a 54 60                 t2 = 0x60 - s0
198272: d0 4a 00                 ra = a3 >> t2
198275: 97 4c 20                 a5 = t2 << 0x20
198278: 98 cc 20                 a5 = a5 >> 0x20
198281: 85 c5 ff                 s0 = a5 ^ 0xffffffffffffffff
198284: 49 11 08                 u64 [sp + 8] = 0
198287: 9b 55                    s0 = 0 << s0
198289: d4 50 07                 a0 = ra | s0
198292: 9c c5                    s0 = 0 >> a5
198294: 95 cc c0                 a5 = a5 + 0xffffffffffffffc0
198297: 89 cc                    a5 = a5 <s 0
198299: db c7 05                 s0 = a0 if a5 != 0
198302: 97 55 20                 s0 = s0 << 0x20
198305: 98 55 20                 s0 = s0 >> 0x20
198308: 95 55 01                 s0 = s0 + 0x1
198311: 7b 15 20                 u64 [sp + 0x20] = s0
198314: 7b 14 18                 u64 [sp + 0x18] = t2
198317: 01                       fallthrough
      :                          @13598
198318: 7b 12 50                 u64 [sp + 0x50] = t0
198321: 8d 65 40                 i32 s0 = 0x40 - s1
198324: d0 58 07                 a0 = a1 >> s0
198327: 97 5c 20                 a5 = s0 << 0x20
198330: 98 cc 20                 a5 = a5 >> 0x20
198333: 85 c0 ff                 ra = a5 ^ 0xffffffffffffffff
198336: 97 96 01                 s1 = a2 << 0x1
198339: cf 06 06                 s1 = s1 << ra
198342: d4 67 02                 t0 = a0 | s1
198345: d0 c9 06                 s1 = a2 >> a5
198348: 95 c7 c0                 a0 = a5 + 0xffffffffffffffc0
198351: 89 77                    a0 = a0 <s 0
198353: db 72 06                 s1 = t0 if a0 != 0
198356: ac 45 1b 01              jump @13607 if s0 <u t2
      :                          @13599
198360: 82 17 20                 a0 = u64 [sp + 0x20]
198363: cb 76 06                 s1 = s1 /u a0
198366: bf 45 00                 i32 ra = s0 - t2
198369: 84 07 7f                 a0 = ra & 0x7f
198372: cf 76 02                 t0 = s1 << a0
198375: 98 65 01                 s0 = s1 >> 0x1
198378: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
198381: d0 c5 05                 s0 = s0 >> a5
198384: 7b 18 48                 u64 [sp + 0x48] = a1
198387: 7b 13 40                 u64 [sp + 0x40] = t1
198390: 95 73 c0                 t1 = a0 + 0xffffffffffffffc0
198393: 7b 19 38                 u64 [sp + 0x38] = a2
198396: 89 39                    a2 = t1 <s 0
198398: da 92 05                 s0 = t0 if a2 == 0
198401: ca b6 02                 t0 = s1 * a4
198404: d6 a6 04                 t2 = s1 mulhu a3
198407: c8 42 02                 t0 = t0 + t2
198410: 64 a4                    t2 = a3
198412: ca a6 08                 a1 = s1 * a3
198415: 98 8a 01                 a3 = a1 >> 0x1
198418: d0 ca 0a                 a3 = a3 >> a5
198421: cf 02 0c                 a5 = t0 << ra
198424: d4 ca 0a                 a3 = a3 | a5
198427: cf 78 07                 a0 = a1 << a0
198430: db 9a 07                 a0 = a3 if a2 != 0
198433: 82 19 50                 a2 = u64 [sp + 0x50]
198436: c8 95 05                 s0 = s0 + a2
198439: cf 06 0a                 a3 = s1 << ra
198442: cf 08 0c                 a5 = a1 << ra
198445: 99 3b 3f                 a4 = t1 >>a 0x3f
198448: 82 13 40                 t1 = u64 [sp + 0x40]
198451: 82 18 48                 a1 = u64 [sp + 0x48]
198454: d2 ba 0a                 a3 = a3 & a4
198457: d2 bc 0c                 a5 = a5 & a4
198460: d8 c8 0b                 a4 = a1 <u a5
198463: 82 19 38                 a2 = u64 [sp + 0x38]
198466: c9 b9 09                 a2 = a2 - a4
198469: c9 79 09                 a2 = a2 - a0
198472: c9 c8 08                 a1 = a1 - a5
198475: 68 97                    a0 = clz a2
198477: 68 8b                    a4 = clz a1
198479: 95 b6 40                 s1 = a4 + 0x40
198482: db 97 06                 s1 = a0 if a2 != 0
198485: c8 a3 03                 t1 = t1 + a3
198488: d8 a3 07                 a0 = t1 <u a3
198491: c8 75 02                 t0 = s0 + a0
198494: 82 17 28                 a0 = u64 [sp + 0x28]
198497: ae 76 a8 00              jump @13609 if s1 >=u a0
      :                          @13600
198501: 64 4a                    a3 = t2
198503: 82 1b 30                 a4 = u64 [sp + 0x30]
198506: 82 14 18                 t2 = u64 [sp + 0x18]
198509: 33 07 3f                 a0 = 0x3f
198512: ae 67 3e ff              jump @13598 if a0 >=u s1
      :                          @13601
198516: 82 10 10                 ra = u64 [sp + 0x10]
198519: 51 0a c0 00              jump @13612 if a3 == 0
      :                          @13602
198523: cb a8 07                 a0 = a1 /u a3
198526: 28 b9 00                 jump @13612
      :                          @13603
198529: 33 09                    a2 = 0
198531: cd b8 08                 a1 = a1 %u a4
198534: 97 a7 20                 a0 = a3 << 0x20
198537: d4 67 03                 t1 = a0 | s1
198540: 98 aa 20                 a3 = a3 >> 0x20
198543: d4 ca 02                 t0 = a3 | a5
198546: 28 1c 01                 jump @13616
      :                          @13604
198549: ca 3a 04                 t2 = a3 * t1
198552: d6 3a 07                 a0 = a3 mulhu t1
198555: 82 1b 30                 a4 = u64 [sp + 0x30]
198558: d6 3b 05                 s0 = a4 mulhu t1
198561: ca 3b 06                 s1 = a4 * t1
198564: c8 76 06                 s1 = s1 + a0
198567: d8 76 07                 a0 = s1 <u a0
198570: c8 57 07                 a0 = a0 + s0
198573: 8e 72                    t0 = a0 >u 0
198575: d3 69 0c                 a5 = a2 ^ s1
198578: d8 69 05                 s0 = a2 <u s1
198581: d8 48 07                 a0 = a1 <u t2
198584: da c7 05                 s0 = a0 if a5 == 0
198587: d4 52 0c                 a5 = t0 | s0
198590: 51 0c 23                 jump @13606 if a5 == 0
      :                          @13605
198593: 33 02                    t0 = 0
198595: c8 b9 09                 a2 = a2 + a4
198598: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
198601: c8 8a 07                 a0 = a3 + a1
198604: d8 a7 08                 a1 = a0 <u a3
198607: c8 98 08                 a1 = a1 + a2
198610: c9 68 08                 a1 = a1 - s1
198613: d8 47 09                 a2 = a0 <u t2
198616: c9 98 09                 a2 = a1 - a2
198619: c9 47 08                 a1 = a0 - t2
198622: 28 d0 00                 jump @13616
      :                          @13606
198625: 33 02                    t0 = 0
198627: c9 69 09                 a2 = a2 - s1
198630: c9 79 09                 a2 = a2 - a0
198633: c9 48 08                 a1 = a1 - t2
198636: 28 c2 00                 jump @13616
      :                          @13607
198639: d0 5a 02                 t0 = a3 >> s0
198642: 82 15 08                 s0 = u64 [sp + 0x8]
198645: cf 05 05                 s0 = s0 << ra
198648: d4 52 05                 s0 = t0 | s0
198651: d0 cb 0c                 a5 = a4 >> a5
198654: db 75 0c                 a5 = s0 if a0 != 0
198657: 51 0c 48                 jump @13613 if a5 == 0
      :                          @13608
198660: cb c6 05                 s0 = s1 /u a5
198663: 28 42                    jump @13613
      :                          @13609
198665: d8 48 07                 a0 = a1 <u t2
198668: 82 1c 30                 a5 = u64 [sp + 0x30]
198671: d3 c9 0b                 a4 = a2 ^ a5
198674: d8 c9 0a                 a3 = a2 <u a5
198677: da b7 0a                 a3 = a0 if a4 == 0
198680: 52 0a 1a                 jump @13611 if a3 != 0
      :                          @13610
198683: 95 33 01                 t1 = t1 + 0x1
198686: 88 3a 01                 a3 = t1 <u 0x1
198689: c8 a2 02                 t0 = t0 + a3
198692: c9 c9 09                 a2 = a2 - a5
198695: c9 79 09                 a2 = a2 - a0
198698: c9 48 08                 a1 = a1 - t2
198701: 82 10 10                 ra = u64 [sp + 0x10]
198704: 28 7e                    jump @13616
      :                          @13611
198706: 82 10 10                 ra = u64 [sp + 0x10]
198709: 28 79                    jump @13616
      :                          @13612
198711: 33 09                    a2 = 0
198713: cd a8 08                 a1 = a1 %u a3
198716: c8 37 07                 a0 = a0 + t1
198719: d8 37 0a                 a3 = a0 <u t1
198722: c8 a2 02                 t0 = t0 + a3
198725: 64 73                    t1 = a0
198727: 28 67                    jump @13616
      :                          @13613
198729: 82 10 10                 ra = u64 [sp + 0x10]
198732: d6 a5 06                 s1 = s0 mulhu a3
198735: ca b5 07                 a0 = s0 * a4
198738: c8 76 06                 s1 = s1 + a0
198741: ca a5 02                 t0 = s0 * a3
198744: d3 69 04                 t2 = a2 ^ s1
198747: d8 69 0c                 a5 = a2 <u s1
198750: d8 28 07                 a0 = a1 <u t0
198753: da 47 0c                 a5 = a0 if t2 == 0
198756: 51 0c 30                 jump @13615 if a5 == 0
      :                          @13614
198759: c8 35 05                 s0 = s0 + t1
198762: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
198765: d8 35 07                 a0 = s0 <u t1
198768: 82 1c 50                 a5 = u64 [sp + 0x50]
198771: c8 7c 0c                 a5 = a5 + a0
198774: c8 a8 07                 a0 = a1 + a3
198777: d8 87 08                 a1 = a0 <u a1
198780: c8 b9 09                 a2 = a2 + a4
198783: c8 98 08                 a1 = a1 + a2
198786: c9 68 08                 a1 = a1 - s1
198789: d8 27 09                 a2 = a0 <u t0
198792: c9 98 09                 a2 = a1 - a2
198795: c9 27 08                 a1 = a0 - t0
198798: 64 c2                    t0 = a5
198800: 64 53                    t1 = s0
198802: 28 1c                    jump @13616
      :                          @13615
198804: c8 35 05                 s0 = s0 + t1
198807: d8 35 0a                 a3 = s0 <u t1
198810: 82 1b 50                 a4 = u64 [sp + 0x50]
198813: c8 ab 0b                 a4 = a4 + a3
198816: c9 69 09                 a2 = a2 - s1
198819: c9 79 09                 a2 = a2 - a0
198822: c9 28 08                 a1 = a1 - t0
198825: 64 b2                    t0 = a4
198827: 64 53                    t1 = s0
198829: 01                       fallthrough
      :                          @13616
198830: 7b 08 10                 u64 [ra + 0x10] = a1
198833: 7b 03                    u64 [ra] = t1
198835: 7b 09 18                 u64 [ra + 0x18] = a2
198838: 7b 02 08                 u64 [ra + 0x8] = t0
198841: 82 10 68                 ra = u64 [sp + 0x68]
198844: 82 15 60                 s0 = u64 [sp + 0x60]
198847: 82 16 58                 s1 = u64 [sp + 0x58]
198850: 95 11 70                 sp = sp + 0x70
198853: 32 00                    ret
      :                          @13617
198855: 95 11 d0                 sp = sp + 0xffffffffffffffd0
198858: 7b 10 28                 u64 [sp + 0x28] = ra
198861: 7b 15 20                 u64 [sp + 0x20] = s0
198864: 95 15 30                 s0 = sp + 0x30
198867: 84 11 f0                 sp = sp & 0xfffffffffffffff0
198870: 33 0b                    a4 = 0
198872: 64 9a                    a3 = a2
198874: 64 89                    a2 = a1
198876: 64 78                    a1 = a0
198878: 64 17                    a0 = sp
198880: 50 20 22 0c aa fc        ra = 3106, jump @13585
      :                          @13618 [@dyn 1553]
198886: 82 18 08                 a1 = u64 [sp + 0x8]
198889: 82 17                    a0 = u64 [sp]
198891: 95 51 d0                 sp = s0 + 0xffffffffffffffd0
198894: 82 10 28                 ra = u64 [sp + 0x28]
198897: 82 15 20                 s0 = u64 [sp + 0x20]
198900: 95 11 30                 sp = sp + 0x30
198903: 32 00                    ret
      :                          @13619
198905: 95 11 d0                 sp = sp + 0xffffffffffffffd0
198908: 7b 10 28                 u64 [sp + 0x28] = ra
198911: 7b 15 20                 u64 [sp + 0x20] = s0
198914: 95 15 30                 s0 = sp + 0x30
198917: 84 11 f0                 sp = sp & 0xfffffffffffffff0
198920: 33 0b                    a4 = 0
198922: 64 9a                    a3 = a2
198924: 64 89                    a2 = a1
198926: 64 78                    a1 = a0
198928: 64 17                    a0 = sp
198930: 50 20 24 0c 78 fc        ra = 3108, jump @13585
      :                          @13620 [@dyn 1554]
198936: 82 18 18                 a1 = u64 [sp + 0x18]
198939: 82 17 10                 a0 = u64 [sp + 0x10]
198942: 95 51 d0                 sp = s0 + 0xffffffffffffffd0
198945: 82 10 28                 ra = u64 [sp + 0x28]
198948: 82 15 20                 s0 = u64 [sp + 0x20]
198951: 95 11 30                 sp = sp + 0x30
198954: 32 00                    ret
      :                          @13621
198956: 95 11 e0                 sp = sp + 0xffffffffffffffe0
198959: 7b 10 18                 u64 [sp + 0x18] = ra
198962: 7b 15 10                 u64 [sp + 0x10] = s0
198965: 7b 16 08                 u64 [sp + 0x8] = s1
198968: 53 19 10 64              jump @13630 if a2 <u 16
      :                          @13622
198972: 8d 7a                    i32 a3 = -a0
198974: 84 a2 07                 t0 = a3 & 0x7
198977: c8 27 0b                 a4 = a0 + t0
198980: 51 02 15                 jump @13625 if t0 == 0
      :                          @13623
198983: 64 8c                    a5 = a1
198985: 64 75                    s0 = a0
198987: 01                       fallthrough
      :                          @13624
198988: 7c ca                    a3 = u8 [a5]
198990: 78 5a                    u8 [s0] = a3
198992: 95 55 01                 s0 = s0 + 0x1
198995: 95 cc 01                 a5 = a5 + 0x1
198998: ac b5 f6                 jump @13624 if s0 <u a4
      :                          @13625
199001: c8 28 03                 t1 = a1 + t0
199004: c9 29 02                 t0 = a2 - t0
199007: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
199010: 84 38 07                 a1 = t1 & 0x7
199013: c8 4b 0a                 a3 = a4 + t2
199016: 51 08 3b                 jump @13632 if a1 == 0
      :                          @13626
199019: 58 04 4b                 jump @13635 if t2 <=s 0
      :                          @13627
199022: 97 38 03                 a1 = t1 << 0x3
199025: 84 80 38                 ra = a1 & 0x38
199028: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
199031: 82 c5                    s0 = u64 [a5]
199033: 8d 88                    i32 a1 = -a1
199035: 84 88 38                 a1 = a1 & 0x38
199038: 95 cc 08                 a5 = a5 + 0x8
199041: 01                       fallthrough
      :                          @13628
199042: 82 c6                    s1 = u64 [a5]
199044: d0 05 05                 s0 = s0 >> ra
199047: cf 86 09                 a2 = s1 << a1
199050: d4 59 09                 a2 = a2 | s0
199053: 7b b9                    u64 [a4] = a2
199055: 95 bb 08                 a4 = a4 + 0x8
199058: 95 cc 08                 a5 = a5 + 0x8
199061: 64 65                    s0 = s1
199063: ac ab eb                 jump @13628 if a4 <u a3
      :                          @13629
199066: 28 1c                    jump @13635
      :                          @13630
199068: 64 7a                    a3 = a0
199070: 52 09 21                 jump @13636 if a2 != 0
      :                          @13631
199073: 28 2f                    jump @13638
      :                          @13632
199075: 58 04 13                 jump @13635 if t2 <=s 0
      :                          @13633
199078: 64 38                    a1 = t1
199080: 01                       fallthrough
      :                          @13634
199081: 82 89                    a2 = u64 [a1]
199083: 7b b9                    u64 [a4] = a2
199085: 95 bb 08                 a4 = a4 + 0x8
199088: 95 88 08                 a1 = a1 + 0x8
199091: ac ab f6                 jump @13634 if a4 <u a3
      :                          @13635
199094: c8 43 08                 a1 = t1 + t2
199097: 84 29 07                 a2 = t0 & 0x7
199100: 51 09 14                 jump @13638 if a2 == 0
      :                          @13636
199103: c8 a9 09                 a2 = a2 + a3
199106: 01                       fallthrough
      :                          @13637
199107: 7c 8b                    a4 = u8 [a1]
199109: 78 ab                    u8 [a3] = a4
199111: 95 aa 01                 a3 = a3 + 0x1
199114: 95 88 01                 a1 = a1 + 0x1
199117: ac 9a f6                 jump @13637 if a3 <u a2
      :                          @13638
199120: 82 10 18                 ra = u64 [sp + 0x18]
199123: 82 15 10                 s0 = u64 [sp + 0x10]
199126: 82 16 08                 s1 = u64 [sp + 0x8]
199129: 95 11 20                 sp = sp + 0x20
199132: 32 00                    ret
      :                          @13639
199134: 95 11 e0                 sp = sp + 0xffffffffffffffe0
199137: 7b 10 18                 u64 [sp + 0x18] = ra
199140: 7b 15 10                 u64 [sp + 0x10] = s0
199143: 7b 16 08                 u64 [sp + 0x8] = s1
199146: c9 87 0a                 a3 = a0 - a1
199149: ae 9a 7d                 jump @13649 if a3 >=u a2
      :                          @13640
199152: c8 97 0a                 a3 = a0 + a2
199155: c8 98 02                 t0 = a1 + a2
199158: 53 19 10 da 00           jump @13658 if a2 <u 16
      :                          @13641
199163: 84 a4 07                 t2 = a3 & 0x7
199166: 9a 43                    t1 = -t2
199168: 84 ab f8                 a4 = a3 & 0xfffffffffffffff8
199171: 51 04 1a                 jump @13644 if t2 == 0
      :                          @13642
199174: c8 98 05                 s0 = a1 + a2
199177: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
199180: 01                       fallthrough
      :                          @13643
199181: 7c 5c                    a5 = u8 [s0]
199183: 95 a6 ff                 s1 = a3 + 0xffffffffffffffff
199186: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
199189: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
199192: 64 6a                    a3 = s1
199194: ac 6b f3                 jump @13643 if a4 <u s1
      :                          @13644
199197: c8 32 02                 t0 = t0 + t1
199200: c9 49 03                 t1 = a2 - t2
199203: 84 34 f8                 t2 = t1 & 0xfffffffffffffff8
199206: 7b 12                    u64 [sp] = t0
199208: 84 29 07                 a2 = t0 & 0x7
199211: c9 4b 0a                 a3 = a4 - t2
199214: 51 09 b0 00              jump @13661 if a2 == 0
      :                          @13645
199218: 58 04 c6 00              jump @13664 if t2 <=s 0
      :                          @13646
199222: 82 16                    s1 = u64 [sp]
199224: 97 69 03                 a2 = s1 << 0x3
199227: 84 90 38                 ra = a2 & 0x38
199230: 84 66 f8                 s1 = s1 & 0xfffffffffffffff8
199233: 82 65                    s0 = u64 [s1]
199235: 8d 99                    i32 a2 = -a2
199237: 84 9c 38                 a5 = a2 & 0x38
199240: 95 69 f8                 a2 = s1 + 0xfffffffffffffff8
199243: 01                       fallthrough
      :                          @13647
199244: 82 96                    s1 = u64 [a2]
199246: cf c5 05                 s0 = s0 << a5
199249: d0 06 08                 a1 = s1 >> ra
199252: d4 58 08                 a1 = a1 | s0
199255: 95 b2 f8                 t0 = a4 + 0xfffffffffffffff8
199258: 7b b8 f8                 u64 [a4 + 0xfffffffffffffff8] = a1
199261: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
199264: 64 65                    s0 = s1
199266: 64 2b                    a4 = t0
199268: ac 2a e8                 jump @13647 if a3 <u t0
      :                          @13648
199271: 28 91 00                 jump @13664
      :                          @13649
199274: 53 19 10 6d              jump @13659 if a2 <u 16
      :                          @13650
199278: 8d 7a                    i32 a3 = -a0
199280: 84 aa 07                 a3 = a3 & 0x7
199283: c8 a7 0b                 a4 = a0 + a3
199286: 51 0a 15                 jump @13653 if a3 == 0
      :                          @13651
199289: 64 8c                    a5 = a1
199291: 64 75                    s0 = a0
199293: 01                       fallthrough
      :                          @13652
199294: 7c c6                    s1 = u8 [a5]
199296: 78 56                    u8 [s0] = s1
199298: 95 55 01                 s0 = s0 + 0x1
199301: 95 cc 01                 a5 = a5 + 0x1
199304: ac b5 f6                 jump @13652 if s0 <u a4
      :                          @13653
199307: c8 a8 03                 t1 = a1 + a3
199310: c9 a9 02                 t0 = a2 - a3
199313: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
199316: 84 38 07                 a1 = t1 & 0x7
199319: c8 4b 0a                 a3 = a4 + t2
199322: 51 08 84 00              jump @13668 if a1 == 0
      :                          @13654
199326: 58 04 93 00              jump @13671 if t2 <=s 0
      :                          @13655
199330: 97 38 03                 a1 = t1 << 0x3
199333: 84 80 38                 ra = a1 & 0x38
199336: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
199339: 82 c5                    s0 = u64 [a5]
199341: 8d 88                    i32 a1 = -a1
199343: 84 88 38                 a1 = a1 & 0x38
199346: 95 cc 08                 a5 = a5 + 0x8
199349: 01                       fallthrough
      :                          @13656
199350: 82 c6                    s1 = u64 [a5]
199352: d0 05 05                 s0 = s0 >> ra
199355: cf 86 09                 a2 = s1 << a1
199358: d4 59 09                 a2 = a2 | s0
199361: 7b b9                    u64 [a4] = a2
199363: 95 bb 08                 a4 = a4 + 0x8
199366: 95 cc 08                 a5 = a5 + 0x8
199369: 64 65                    s0 = s1
199371: ac ab eb                 jump @13656 if a4 <u a3
      :                          @13657
199374: 28 63                    jump @13671
      :                          @13658
199376: 64 78                    a1 = a0
199378: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
199381: 28 37                    jump @13666
      :                          @13659
199383: 64 7a                    a3 = a0
199385: 52 09 61                 jump @13672 if a2 != 0
      :                          @13660
199388: 28 6f                    jump @13674
      :                          @13661
199390: 58 04 1a                 jump @13664 if t2 <=s 0
      :                          @13662
199393: c8 38 08                 a1 = a1 + t1
199396: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
199399: 01                       fallthrough
      :                          @13663
199400: 82 89                    a2 = u64 [a1]
199402: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
199405: 7b b9 f8                 u64 [a4 + 0xfffffffffffffff8] = a2
199408: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
199411: 64 cb                    a4 = a5
199413: ac ca f3                 jump @13663 if a3 <u a5
      :                          @13664
199416: 84 38 07                 a1 = t1 & 0x7
199419: 51 08 50                 jump @13674 if a1 == 0
      :                          @13665
199422: 9a 49                    a2 = -t2
199424: 82 12                    t0 = u64 [sp]
199426: c8 92 02                 t0 = t0 + a2
199429: c9 8a 08                 a1 = a3 - a1
199432: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
199435: 01                       fallthrough
      :                          @13666
199436: 7c 29                    a2 = u8 [t0]
199438: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
199441: 78 a9 ff                 u8 [a3 + 0xffffffffffffffff] = a2
199444: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
199447: 64 ba                    a3 = a4
199449: ac b8 f3                 jump @13666 if a1 <u a4
      :                          @13667
199452: 28 2f                    jump @13674
      :                          @13668
199454: 58 04 13                 jump @13671 if t2 <=s 0
      :                          @13669
199457: 64 38                    a1 = t1
199459: 01                       fallthrough
      :                          @13670
199460: 82 89                    a2 = u64 [a1]
199462: 7b b9                    u64 [a4] = a2
199464: 95 bb 08                 a4 = a4 + 0x8
199467: 95 88 08                 a1 = a1 + 0x8
199470: ac ab f6                 jump @13670 if a4 <u a3
      :                          @13671
199473: c8 43 08                 a1 = t1 + t2
199476: 84 29 07                 a2 = t0 & 0x7
199479: 51 09 14                 jump @13674 if a2 == 0
      :                          @13672
199482: c8 a9 09                 a2 = a2 + a3
199485: 01                       fallthrough
      :                          @13673
199486: 7c 8b                    a4 = u8 [a1]
199488: 78 ab                    u8 [a3] = a4
199490: 95 aa 01                 a3 = a3 + 0x1
199493: 95 88 01                 a1 = a1 + 0x1
199496: ac 9a f6                 jump @13673 if a3 <u a2
      :                          @13674
199499: 82 10 18                 ra = u64 [sp + 0x18]
199502: 82 15 10                 s0 = u64 [sp + 0x10]
199505: 82 16 08                 s1 = u64 [sp + 0x8]
199508: 95 11 20                 sp = sp + 0x20
199511: 32 00                    ret
      :                          @13675
199513: 53 19 10 48              jump @13684 if a2 <u 16
      :                          @13676
199517: 8d 7a                    i32 a3 = -a0
199519: 84 aa 07                 a3 = a3 & 0x7
199522: c8 a7 0b                 a4 = a0 + a3
199525: 51 0a 0e                 jump @13679 if a3 == 0
      :                          @13677
199528: 64 7c                    a5 = a0
199530: 01                       fallthrough
      :                          @13678
199531: 78 c8                    u8 [a5] = a1
199533: 95 cc 01                 a5 = a5 + 0x1
199536: ac bc fb                 jump @13678 if a5 <u a4
      :                          @13679
199539: c9 a9 03                 t1 = a2 - a3
199542: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
199545: c8 cb 0a                 a3 = a4 + a5
199548: 58 0c 1d                 jump @13682 if a5 <=s 0
      :                          @13680
199551: 84 82 ff 00              t0 = a1 & 0xff
199555: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
199565: ca 92 0c                 a5 = t0 * a2
199568: 01                       fallthrough
      :                          @13681
199569: 7b bc                    u64 [a4] = a5
199571: 95 bb 08                 a4 = a4 + 0x8
199574: ac ab fb                 jump @13681 if a4 <u a3
      :                          @13682
199577: 84 39 07                 a2 = t1 & 0x7
199580: 52 09 0a                 jump @13685 if a2 != 0
      :                          @13683
199583: 28 13                    jump @13687
      :                          @13684
199585: 64 7a                    a3 = a0
199587: 51 09 0f                 jump @13687 if a2 == 0
      :                          @13685
199590: c8 a9 09                 a2 = a2 + a3
199593: 01                       fallthrough
      :                          @13686
199594: 78 a8                    u8 [a3] = a1
199596: 95 aa 01                 a3 = a3 + 0x1
199599: ac 9a fb                 jump @13686 if a3 <u a2
      :                          @13687
199602: 32 00                    ret
      :                          @13688 [@dyn 1555]
199604: 82 77                    a0 = u64 [a0]
199606: 01                       fallthrough
      :                          @13689
199607: 28                       jump @13689
      :                          @13690
199608: 00                       trap
      :                          @13691 [@dyn 1556]
199609: 82 77                    a0 = u64 [a0]
199611: 64 89                    a2 = a1
199613: 33 08 01                 a1 = 0x1
199616: 01                       fallthrough
      :                          @13692
199617: 95 11 a0                 sp = sp + 0xffffffffffffffa0
199620: 7b 10 58                 u64 [sp + 0x58] = ra
199623: 7b 15 50                 u64 [sp + 0x50] = s0
199626: 7b 16 48                 u64 [sp + 0x48] = s1
199629: 7b 19 08                 u64 [sp + 0x8] = a2
199632: 7b 18                    u64 [sp] = a1
199634: 98 7a 04                 a3 = a0 >> 0x4
199637: 33 09 27                 a2 = 0x27
199640: 53 2a 71 02 81 00        jump @13695 if a3 <u 625
      :                          @13693
199646: 33 09 27                 a2 = 0x27
199649: 95 1b 46                 a4 = sp + 0x46
199652: 3a 08 f8 11 03           a1 = u64 [0x311f8]
199657: 7b 18 18                 u64 [sp + 0x18] = a1
199660: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
199666: 33 03 7b 14              t1 = 0x147b
199670: 33 05 4e 30 01           s0 = 0x1304e
199675: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
199681: 01                       fallthrough
      :                          @13694
199682: 64 74                    t2 = a0
199684: 82 17 18                 a0 = u64 [sp + 0x18]
199687: d6 74 07                 a0 = t2 mulhu a0
199690: 98 77 0b                 a0 = a0 >> 0xb
199693: 82 18 10                 a1 = u64 [sp + 0x10]
199696: c0 87 02                 i32 t0 = a0 * a1
199699: c8 42 0a                 a3 = t0 + t2
199702: 97 a2 30                 t0 = a3 << 0x30
199705: 98 28 32                 a1 = t0 >> 0x32
199708: ca 38 08                 a1 = a1 * t1
199711: 98 8c 11                 a5 = a1 >> 0x11
199714: 98 88 10                 a1 = a1 >> 0x10
199717: 84 88 fe 07              a1 = a1 & 0x7fe
199721: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
199724: c8 ca 0a                 a3 = a3 + a5
199727: 97 aa 31                 a3 = a3 << 0x31
199730: 98 aa 30                 a3 = a3 >> 0x30
199733: c8 58 08                 a1 = a1 + s0
199736: 7c 8c                    a5 = u8 [a1]
199738: 7c 88 01                 a1 = u8 [a1 + 0x1]
199741: c8 5a 0a                 a3 = a3 + s0
199744: 7c a6 01                 s1 = u8 [a3 + 0x1]
199747: 7c aa                    a3 = u8 [a3]
199749: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
199752: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
199755: 78 b6 01                 u8 [a4 + 0x1] = s1
199758: 78 ba                    u8 [a4] = a3
199760: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
199763: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
199766: ac 40 ac                 jump @13694 if ra <u t2
      :                          @13695
199769: 54 17 63 3b              jump @13697 if a0 <=u 99
      :                          @13696
199773: 97 78 30                 a1 = a0 << 0x30
199776: 98 88 32                 a1 = a1 >> 0x32
199779: 96 88 7b 14              a1 = a1 * 0x147b
199783: 98 88 11                 a1 = a1 >> 0x11
199786: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
199789: c8 a7 07                 a0 = a0 + a3
199792: 97 77 31                 a0 = a0 << 0x31
199795: 98 77 30                 a0 = a0 >> 0x30
199798: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
199801: 33 0a 4e 30 01           a3 = 0x1304e
199806: c8 a7 07                 a0 = a0 + a3
199809: 7c 7a 01                 a3 = u8 [a0 + 0x1]
199812: 7c 77                    a0 = u8 [a0]
199814: 95 1b 21                 a4 = sp + 0x21
199817: c8 9b 0b                 a4 = a4 + a2
199820: 78 ba 01                 u8 [a4 + 0x1] = a3
199823: 78 b7                    u8 [a4] = a0
199825: 64 87                    a0 = a1
199827: 01                       fallthrough
      :                          @13697
199828: 55 17 0a 14              jump @13699 if a0 >=u 10
      :                          @13698
199832: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
199835: 95 18 21                 a1 = sp + 0x21
199838: c8 98 08                 a1 = a1 + a2
199841: 83 77 30                 i32 a0 = a0 + 0x30
199844: 78 87                    u8 [a1] = a0
199846: 28 21                    jump @13700
      :                          @13699
199848: 97 77 01                 a0 = a0 << 0x1
199851: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
199854: 33 08 4e 30 01           a1 = 0x1304e
199859: c8 87 07                 a0 = a0 + a1
199862: 7c 78 01                 a1 = u8 [a0 + 0x1]
199865: 7c 77                    a0 = u8 [a0]
199867: 95 1a 21                 a3 = sp + 0x21
199870: c8 9a 0a                 a3 = a3 + a2
199873: 78 a8 01                 u8 [a3 + 0x1] = a1
199876: 78 a7                    u8 [a3] = a0
199878: 01                       fallthrough
      :                          @13700
199879: 95 1b 21                 a4 = sp + 0x21
199882: c8 9b 0b                 a4 = a4 + a2
199885: 9a 9c 27                 a5 = 0x27 - a2
199888: 33 09 f0 2f 01           a2 = 0x12ff0
199893: 82 17 08                 a0 = u64 [sp + 0x8]
199896: 82 18                    a1 = u64 [sp]
199898: 33 0a                    a3 = 0
199900: 50 20 2a 0c 13           ra = 3114, jump @13702
      :                          @13701 [@dyn 1557]
199905: 82 10 58                 ra = u64 [sp + 0x58]
199908: 82 15 50                 s0 = u64 [sp + 0x50]
199911: 82 16 48                 s1 = u64 [sp + 0x48]
199914: 95 11 60                 sp = sp + 0x60
199917: 32 00                    ret
      :                          @13702
199919: 95 11 98                 sp = sp + 0xffffffffffffff98
199922: 7b 10 60                 u64 [sp + 0x60] = ra
199925: 7b 15 58                 u64 [sp + 0x58] = s0
199928: 7b 16 50                 u64 [sp + 0x50] = s1
199931: 7b 1b 18                 u64 [sp + 0x18] = a4
199934: 51 08 4f                 jump @13709 if a1 == 0
      :                          @13703
199937: 80 76 34                 s1 = u32 [a0 + 0x34]
199940: 84 68 01                 a1 = s1 & 0x1
199943: 33 0b 2b                 a4 = 0x2b
199946: 33 05 00 00 11           s0 = 0x110000
199951: db 8b 05                 s0 = a4 if a1 != 0
199954: 7b 15 28                 u64 [sp + 0x28] = s0
199957: c8 c8 02                 t0 = a1 + a5
199960: 84 68 04                 a1 = s1 & 0x4
199963: 51 08 42                 jump @13710 if a1 == 0
      :                          @13704
199966: 7b 19 30                 u64 [sp + 0x30] = a2
199969: 33 08                    a1 = 0
199971: 51 0a 1a                 jump @13707 if a3 == 0
      :                          @13705
199974: 64 a5                    s0 = a3
199976: 01                       fallthrough
      :                          @13706
199977: 7d 9b                    a4 = i8 [a2]
199979: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
199982: 85 bb 01                 a4 = a4 ^ 0x1
199985: c8 b8 08                 a1 = a1 + a4
199988: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
199991: 95 99 01                 a2 = a2 + 0x1
199994: 52 05 ef                 jump @13706 if s0 != 0
      :                          @13707
199997: c8 82 02                 t0 = t0 + a1
200000: 7b 1a 38                 u64 [sp + 0x38] = a3
200003: 82 78                    a1 = u64 [a0]
200005: 7b 1c 20                 u64 [sp + 0x20] = a5
200008: 52 08 23                 jump @13711 if a1 != 0
      :                          @13708
200011: 28 41                    jump @13716
      :                          @13709
200013: 81 76 34                 s1 = i32 [a0 + 0x34]
200016: 95 c2 01                 t0 = a5 + 0x1
200019: 49 11 28 2d              u64 [sp + 40] = 0x2d
200023: 84 68 04                 a1 = s1 & 0x4
200026: 52 08 c4                 jump @13704 if a1 != 0
      :                          @13710
200029: 49 11 30                 u64 [sp + 48] = 0
200032: 7b 1a 38                 u64 [sp + 0x38] = a3
200035: 82 78                    a1 = u64 [a0]
200037: 7b 1c 20                 u64 [sp + 0x20] = a5
200040: 51 08 24                 jump @13716 if a1 == 0
      :                          @13711
200043: 82 75 08                 s0 = u64 [a0 + 0x8]
200046: ae 52 1e                 jump @13716 if t0 >=u s0
      :                          @13712
200049: 84 66 08                 s1 = s1 & 0x8
200052: 52 06 51                 jump @13719 if s1 != 0
      :                          @13713
200055: 7c 79 38                 a2 = u8 [a0 + 0x38]
200058: c9 25 0a                 a3 = s0 - t0
200061: 5a 19 01 a4 00           jump @13726 if a2 >s 1
      :                          @13714
200066: 52 09 b1 00              jump @13728 if a2 != 0
      :                          @13715
200070: 7b 1a 10                 u64 [sp + 0x10] = a3
200073: 28 b0 00                 jump @13729
      :                          @13716
200076: 82 75 20                 s0 = u64 [a0 + 0x20]
200079: 82 76 28                 s1 = u64 [a0 + 0x28]
200082: 64 57                    a0 = s0
200084: 64 68                    a1 = s1
200086: 82 19 28                 a2 = u64 [sp + 0x28]
200089: 82 1a 30                 a3 = u64 [sp + 0x30]
200092: 82 1b 38                 a4 = u64 [sp + 0x38]
200095: 50 20 2c 0c 76 01        ra = 3116, jump @13749
      :                          @13717 [@dyn 1558]
200101: 33 08 01                 a1 = 0x1
200104: 52 07 bf 00              jump @13734 if a0 != 0
      :                          @13718
200108: 82 6c 18                 a5 = u64 [s1 + 0x18]
200111: 64 57                    a0 = s0
200113: 82 18 18                 a1 = u64 [sp + 0x18]
200116: 82 19 20                 a2 = u64 [sp + 0x20]
200119: 82 10 60                 ra = u64 [sp + 0x60]
200122: 82 15 58                 s0 = u64 [sp + 0x58]
200125: 82 16 50                 s1 = u64 [sp + 0x50]
200128: 95 11 68                 sp = sp + 0x68
200131: 32 0c                    jump [a5]
      :                          @13719
200133: 7b 12 40                 u64 [sp + 0x40] = t0
200136: 81 78 30                 a1 = i32 [a0 + 0x30]
200139: 7b 18 08                 u64 [sp + 0x8] = a1
200142: 7c 79 38                 a2 = u8 [a0 + 0x38]
200145: 7b 19                    u64 [sp] = a2
200147: 82 79 20                 a2 = u64 [a0 + 0x20]
200150: 82 76 28                 s1 = u64 [a0 + 0x28]
200153: 48 17 30 30              u32 [a0 + 48] = 0x30
200157: 7b 17 10                 u64 [sp + 0x10] = a0
200160: 46 17 38 01              u8 [a0 + 56] = 0x1
200164: 7b 19 48                 u64 [sp + 0x48] = a2
200167: 64 97                    a0 = a2
200169: 64 68                    a1 = s1
200171: 82 19 28                 a2 = u64 [sp + 0x28]
200174: 82 1a 30                 a3 = u64 [sp + 0x30]
200177: 82 1b 38                 a4 = u64 [sp + 0x38]
200180: 50 20 2e 0c 21 01        ra = 3118, jump @13749
      :                          @13720 [@dyn 1559]
200186: 52 07 69                 jump @13733 if a0 != 0
      :                          @13721
200189: 82 17 40                 a0 = u64 [sp + 0x40]
200192: c9 75 05                 s0 = s0 - a0
200195: 95 55 01                 s0 = s0 + 0x1
200198: 01                       fallthrough
      :                          @13722
200199: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
200202: 51 05 cb 00              jump @13744 if s0 == 0
      :                          @13723
200206: 82 69 20                 a2 = u64 [s1 + 0x20]
200209: 33 08 30                 a1 = 0x30
200212: 82 17 48                 a0 = u64 [sp + 0x48]
200215: b4 90 02 30 0c           ra = 3120, jump [a2]
      :                          @13724 [@dyn 1560]
200220: 51 07 eb                 jump @13722 if a0 == 0
      :                          @13725
200223: 28 44                    jump @13733
      :                          @13726
200225: 52 19 02 12              jump @13728 if a2 != 2
      :                          @13727
200229: 98 a9 01                 a2 = a3 >> 0x1
200232: 95 a8 01                 a1 = a3 + 0x1
200235: 98 88 01                 a1 = a1 >> 0x1
200238: 7b 18 10                 u64 [sp + 0x10] = a1
200241: 28 08                    jump @13729
      :                          @13728
200243: 64 a9                    a2 = a3
200245: 49 11 10                 u64 [sp + 16] = 0
200248: 01                       fallthrough
      :                          @13729
200249: 82 78 20                 a1 = u64 [a0 + 0x20]
200252: 7b 18 48                 u64 [sp + 0x48] = a1
200255: 82 76 28                 s1 = u64 [a0 + 0x28]
200258: 81 77 30                 a0 = i32 [a0 + 0x30]
200261: 7b 17 40                 u64 [sp + 0x40] = a0
200264: 95 95 01                 s0 = a2 + 0x1
200267: 01                       fallthrough
      :                          @13730
200268: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
200271: 51 05 28                 jump @13735 if s0 == 0
      :                          @13731
200274: 82 69 20                 a2 = u64 [s1 + 0x20]
200277: 82 17 48                 a0 = u64 [sp + 0x48]
200280: 82 18 40                 a1 = u64 [sp + 0x40]
200283: b4 90 02 32 0c           ra = 3122, jump [a2]
      :                          @13732 [@dyn 1561]
200288: 51 07 ec                 jump @13730 if a0 == 0
      :                          @13733
200291: 33 08 01                 a1 = 0x1
200294: 01                       fallthrough
      :                          @13734
200295: 64 87                    a0 = a1
200297: 82 10 60                 ra = u64 [sp + 0x60]
200300: 82 15 58                 s0 = u64 [sp + 0x58]
200303: 82 16 50                 s1 = u64 [sp + 0x50]
200306: 95 11 68                 sp = sp + 0x68
200309: 32 00                    ret
      :                          @13735
200311: 82 15 48                 s0 = u64 [sp + 0x48]
200314: 64 57                    a0 = s0
200316: 64 68                    a1 = s1
200318: 82 19 28                 a2 = u64 [sp + 0x28]
200321: 82 1a 30                 a3 = u64 [sp + 0x30]
200324: 82 1b 38                 a4 = u64 [sp + 0x38]
200327: 50 20 34 0c 8e 00        ra = 3124, jump @13749
      :                          @13736 [@dyn 1562]
200333: 33 08 01                 a1 = 0x1
200336: 52 07 d7                 jump @13734 if a0 != 0
      :                          @13737
200339: 82 6a 18                 a3 = u64 [s1 + 0x18]
200342: 64 57                    a0 = s0
200344: 82 18 18                 a1 = u64 [sp + 0x18]
200347: 82 19 20                 a2 = u64 [sp + 0x20]
200350: b4 a0 02 36 0c           ra = 3126, jump [a3]
      :                          @13738 [@dyn 1563]
200355: 33 08 01                 a1 = 0x1
200358: 52 07 c1                 jump @13734 if a0 != 0
      :                          @13739
200361: 82 17 10                 a0 = u64 [sp + 0x10]
200364: 9a 77                    a0 = -a0
200366: 7b 17 38                 u64 [sp + 0x38] = a0
200369: 33 05 ff                 s0 = 0xffffffffffffffff
200372: 01                       fallthrough
      :                          @13740
200373: 82 17 38                 a0 = u64 [sp + 0x38]
200376: c8 57 07                 a0 = a0 + s0
200379: 51 17 ff 45              jump @13747 if a0 == 4294967295
      :                          @13741
200383: 82 69 20                 a2 = u64 [s1 + 0x20]
200386: 82 17 48                 a0 = u64 [sp + 0x48]
200389: 82 18 40                 a1 = u64 [sp + 0x40]
200392: b4 90 02 38 0c           ra = 3128, jump [a2]
      :                          @13742 [@dyn 1564]
200397: 95 55 01                 s0 = s0 + 0x1
200400: 51 07 e5                 jump @13740 if a0 == 0
      :                          @13743
200403: 28 39                    jump @13748
      :                          @13744
200405: 82 6a 18                 a3 = u64 [s1 + 0x18]
200408: 82 17 48                 a0 = u64 [sp + 0x48]
200411: 82 18 18                 a1 = u64 [sp + 0x18]
200414: 82 19 20                 a2 = u64 [sp + 0x20]
200417: b4 a0 02 3a 0c           ra = 3130, jump [a3]
      :                          @13745 [@dyn 1565]
200422: 33 08 01                 a1 = 0x1
200425: 52 07 7e ff              jump @13734 if a0 != 0
      :                          @13746
200429: 33 08                    a1 = 0
200431: 82 17 10                 a0 = u64 [sp + 0x10]
200434: 82 19 08                 a2 = u64 [sp + 0x8]
200437: 7a 79 30                 u32 [a0 + 0x30] = a2
200440: 82 19                    a2 = u64 [sp]
200442: 78 79 38                 u8 [a0 + 0x38] = a2
200445: 28 6a ff                 jump @13734
      :                          @13747
200448: 82 15 10                 s0 = u64 [sp + 0x10]
200451: 82 17 10                 a0 = u64 [sp + 0x10]
200454: d8 75 08                 a1 = s0 <u a0
200457: 28 5e ff                 jump @13734
      :                          @13748
200460: 82 17 10                 a0 = u64 [sp + 0x10]
200463: d8 75 08                 a1 = s0 <u a0
200466: 28 55 ff                 jump @13734
      :                          @13749
200469: 95 11 d8                 sp = sp + 0xffffffffffffffd8
200472: 7b 10 20                 u64 [sp + 0x20] = ra
200475: 7b 15 18                 u64 [sp + 0x18] = s0
200478: 7b 16 10                 u64 [sp + 0x10] = s1
200481: 83 9c                    i32 a5 = a2 + 0
200483: 33 02 00 00 11           t0 = 0x110000
200488: 64 a6                    s1 = a3
200490: 64 85                    s0 = a1
200492: 64 7a                    a3 = a0
200494: aa 2c 21                 jump @13752 if a5 == t0
      :                          @13750
200497: 82 5c 20                 a5 = u64 [s0 + 0x20]
200500: 64 a7                    a0 = a3
200502: 64 98                    a1 = a2
200504: 7b 1b 08                 u64 [sp + 0x8] = a4
200507: 7b 1a                    u64 [sp] = a3
200509: b4 c0 02 3c 0c           ra = 3132, jump [a5]
      :                          @13751 [@dyn 1566]
200514: 82 1a                    a3 = u64 [sp]
200516: 82 1b 08                 a4 = u64 [sp + 0x8]
200519: 64 78                    a1 = a0
200521: 33 07 01                 a0 = 0x1
200524: 52 08 20                 jump @13755 if a1 != 0
      :                          @13752
200527: 51 06 1a                 jump @13754 if s1 == 0
      :                          @13753
200530: 82 5c 18                 a5 = u64 [s0 + 0x18]
200533: 64 a7                    a0 = a3
200535: 64 68                    a1 = s1
200537: 64 b9                    a2 = a4
200539: 82 10 20                 ra = u64 [sp + 0x20]
200542: 82 15 18                 s0 = u64 [sp + 0x18]
200545: 82 16 10                 s1 = u64 [sp + 0x10]
200548: 95 11 28                 sp = sp + 0x28
200551: 32 0c                    jump [a5]
      :                          @13754
200553: 33 07                    a0 = 0
200555: 01                       fallthrough
      :                          @13755
200556: 82 10 20                 ra = u64 [sp + 0x20]
200559: 82 15 18                 s0 = u64 [sp + 0x18]
200562: 82 16 10                 s1 = u64 [sp + 0x10]
200565: 95 11 28                 sp = sp + 0x28
200568: 32 00                    ret
      :                          @13756
200570: 95 11 b8                 sp = sp + 0xffffffffffffffb8
200573: 7b 10 40                 u64 [sp + 0x40] = ra
200576: 7b 15 38                 u64 [sp + 0x38] = s0
200579: 7b 16 30                 u64 [sp + 0x30] = s1
200582: 82 74                    t2 = u64 [a0]
200584: 82 7a 10                 a3 = u64 [a0 + 0x10]
200587: d4 a4 0b                 a4 = t2 | a3
200590: 64 93                    t1 = a2
200592: 64 85                    s0 = a1
200594: 51 0b aa 03              jump @13828 if a4 == 0
      :                          @13757
200598: 7b 17 08                 u64 [sp + 0x8] = a0
200601: 51 0a f4 00              jump @13776 if a3 == 0
      :                          @13758
200605: 82 7c 18                 a5 = u64 [a0 + 0x18]
200608: 33 0a                    a3 = 0
200610: 7b 13 18                 u64 [sp + 0x18] = t1
200613: c8 53 03                 t1 = t1 + s0
200616: 95 cc 01                 a5 = a5 + 0x1
200619: 33 00 00 00 11           ra = 0x110000
200624: 33 07 df 00              a0 = 0xdf
200628: 7b 15 10                 u64 [sp + 0x10] = s0
200631: 64 59                    a2 = s0
200633: 28 12                    jump @13761
      :                          @13759
200635: 95 98 01                 a1 = a2 + 0x1
200638: 01                       fallthrough
      :                          @13760
200639: c9 9a 0a                 a3 = a3 - a2
200642: c8 8a 0a                 a3 = a3 + a1
200645: 64 89                    a2 = a1
200647: aa 05 bc 00              jump @13775 if s0 == ra
      :                          @13761
200651: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
200654: 51 0c 68                 jump @13770 if a5 == 0
      :                          @13762
200657: aa 39 b2 00              jump @13775 if a2 == t1
      :                          @13763
200661: 7d 98                    a1 = i8 [a2]
200663: 84 85 ff 00              s0 = a1 & 0xff
200667: 59 08 e0                 jump @13759 if a1 >=s 0
      :                          @13764
200670: 7c 98 01                 a1 = u8 [a2 + 0x1]
200673: 84 56 1f                 s1 = s0 & 0x1f
200676: 84 8b 3f                 a4 = a1 & 0x3f
200679: ae 57 35                 jump @13768 if a0 >=u s0
      :                          @13765
200682: 7c 98 02                 a1 = u8 [a2 + 0x2]
200685: 97 bb 06                 a4 = a4 << 0x6
200688: 84 88 3f                 a1 = a1 & 0x3f
200691: d4 8b 02                 t0 = a4 | a1
200694: 53 25 f0 00 31           jump @13769 if s0 <u 240
      :                          @13766
200699: 7c 98 03                 a1 = u8 [a2 + 0x3]
200702: 97 66 3d                 s1 = s1 << 0x3d
200705: 98 66 2b                 s1 = s1 >> 0x2b
200708: 97 22 06                 t0 = t0 << 0x6
200711: 84 88 3f                 a1 = a1 & 0x3f
200714: d4 82 05                 s0 = t0 | a1
200717: d4 65 05                 s0 = s0 | s1
200720: aa 05 73                 jump @13775 if s0 == ra
      :                          @13767
200723: 95 98 04                 a1 = a2 + 0x4
200726: 33 07 df 00              a0 = 0xdf
200730: 28 a5                    jump @13760
      :                          @13768
200732: 95 98 02                 a1 = a2 + 0x2
200735: 97 65 06                 s0 = s1 << 0x6
200738: d4 b5 05                 s0 = s0 | a4
200741: 28 9a                    jump @13760
      :                          @13769
200743: 95 98 03                 a1 = a2 + 0x3
200746: 97 66 0c                 s1 = s1 << 0xc
200749: d4 62 05                 s0 = t0 | s1
200752: 33 07 df 00              a0 = 0xdf
200756: 28 8b                    jump @13760
      :                          @13770
200758: aa 39 4d                 jump @13775 if a2 == t1
      :                          @13771
200761: 7d 98                    a1 = i8 [a2]
200763: 59 08 b6 02              jump @13818 if a1 >=s 0
      :                          @13772
200767: 84 88 ff 00              a1 = a1 & 0xff
200771: 33 0b e0 00              a4 = 0xe0
200775: ac b8 aa 02              jump @13818 if a1 <u a4
      :                          @13773
200779: 33 0b f0 00              a4 = 0xf0
200783: ac b8 a2 02              jump @13818 if a1 <u a4
      :                          @13774
200787: 7c 9b 01                 a4 = u8 [a2 + 0x1]
200790: 7c 9c 02                 a5 = u8 [a2 + 0x2]
200793: 84 bb 3f                 a4 = a4 & 0x3f
200796: 84 cc 3f                 a5 = a5 & 0x3f
200799: 7c 99 03                 a2 = u8 [a2 + 0x3]
200802: 97 88 3d                 a1 = a1 << 0x3d
200805: 98 88 2b                 a1 = a1 >> 0x2b
200808: 97 bb 0c                 a4 = a4 << 0xc
200811: 97 cc 06                 a5 = a5 << 0x6
200814: d4 cb 0b                 a4 = a4 | a5
200817: 84 99 3f                 a2 = a2 & 0x3f
200820: d4 b9 09                 a2 = a2 | a4
200823: d4 98 08                 a1 = a1 | a2
200826: 33 09 00 00 11           a2 = 0x110000
200831: ab 98 72 02              jump @13818 if a1 != a2
      :                          @13775
200835: 82 13 18                 t1 = u64 [sp + 0x18]
200838: 82 15 10                 s0 = u64 [sp + 0x10]
200841: 82 17 08                 a0 = u64 [sp + 0x8]
200844: 01                       fallthrough
      :                          @13776
200845: 51 04 af 02              jump @13828 if t2 == 0
      :                          @13777
200849: 82 7c 08                 a5 = u64 [a0 + 0x8]
200852: 7b 13 18                 u64 [sp + 0x18] = t1
200855: 7b 15 10                 u64 [sp + 0x10] = s0
200858: 55 13 20 29              jump @13783 if t1 >=u 32
      :                          @13778
200862: 33 09                    a2 = 0
200864: 51 03 1c                 jump @13781 if t1 == 0
      :                          @13779
200867: 64 58                    a1 = s0
200869: 64 3a                    a3 = t1
200871: 01                       fallthrough
      :                          @13780
200872: 7d 8b                    a4 = i8 [a1]
200874: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
200877: 85 bb 01                 a4 = a4 ^ 0x1
200880: c8 b9 09                 a2 = a2 + a4
200883: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
200886: 95 88 01                 a1 = a1 + 0x1
200889: 52 0a ef                 jump @13780 if a3 != 0
      :                          @13781
200892: ac c9 95 01              jump @13800 if a2 <u a5
      :                          @13782
200896: 28 7c 02                 jump @13828
      :                          @13783
200899: 7b 1c                    u64 [sp] = a5
200901: 95 58 07                 a1 = s0 + 0x7
200904: 64 5c                    a5 = s0
200906: 84 85 f8                 s0 = a1 & 0xfffffffffffffff8
200909: c9 5c 0b                 a4 = a5 - s0
200912: c8 b3 02                 t0 = t1 + a4
200915: 84 2a 07                 a3 = t0 & 0x7
200918: 33 08                    a1 = 0
200920: aa c5 17                 jump @13785 if s0 == a5
      :                          @13784
200923: 7d c6                    s1 = i8 [a5]
200925: 89 66 c0                 s1 = s1 <s 0xffffffffffffffc0
200928: 85 69 01                 a2 = s1 ^ 0x1
200931: c8 98 08                 a1 = a1 + a2
200934: 95 bb 01                 a4 = a4 + 0x1
200937: 95 cc 01                 a5 = a5 + 0x1
200940: 52 0b ef                 jump @13784 if a4 != 0
      :                          @13785
200943: 33 0b                    a4 = 0
200945: 51 0a 1e                 jump @13788 if a3 == 0
      :                          @13786
200948: 84 2c f8                 a5 = t0 & 0xfffffffffffffff8
200951: c8 5c 0c                 a5 = a5 + s0
200954: 01                       fallthrough
      :                          @13787
200955: 7d c7                    a0 = i8 [a5]
200957: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
200960: 85 77 01                 a0 = a0 ^ 0x1
200963: c8 7b 0b                 a4 = a4 + a0
200966: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
200969: 95 cc 01                 a5 = a5 + 0x1
200972: 52 0a ef                 jump @13787 if a3 != 0
      :                          @13788
200975: 98 20 03                 ra = t0 >> 0x3
200978: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
200988: 14 07 ff 00 ff 00 ff 00 ff 00 a0 = 0xff00ff00ff00ff
200998: 7b 17 28                 u64 [sp + 0x28] = a0
201001: 14 04 00 00 00 00 01 00 01 00 t2 = 0x1000100000000
201011: 14 07 01 00 01 00 01 00 01 00 a0 = 0x1000100010001
201021: 7b 17 20                 u64 [sp + 0x20] = a0
201024: c8 8b 09                 a2 = a4 + a1
201027: 28 2d                    jump @13790
      :                          @13789
201029: 97 45 03                 s0 = t2 << 0x3
201032: c8 35 05                 s0 = s0 + t1
201035: c9 40 00                 ra = ra - t2
201038: 84 46 03                 s1 = t2 & 0x3
201041: 82 1b 28                 a4 = u64 [sp + 0x28]
201044: d2 b2 07                 a0 = t0 & a4
201047: 98 28 08                 a1 = t0 >> 0x8
201050: d2 b8 08                 a1 = a1 & a4
201053: c8 87 07                 a0 = a0 + a1
201056: 82 18 20                 a1 = u64 [sp + 0x20]
201059: ca 87 07                 a0 = a0 * a1
201062: 98 77 30                 a0 = a0 >> 0x30
201065: c8 79 09                 a2 = a2 + a0
201068: 52 06 8e 00              jump @13797 if s1 != 0
      :                          @13790
201072: 51 00 79                 jump @13795 if ra == 0
      :                          @13791
201075: 64 53                    t1 = s0
201077: 33 07 c0 00              a0 = 0xc0
201081: e6 70 04                 t2 = minu(ra, a0)
201084: 33 02                    t0 = 0
201086: 98 48 02                 a1 = t2 >> 0x2
201089: 51 08 c4                 jump @13789 if a1 == 0
      :                          @13792
201092: 97 88 05                 a1 = a1 << 0x5
201095: c8 38 08                 a1 = a1 + t1
201098: 64 36                    s1 = t1
201100: 01                       fallthrough
      :                          @13793
201101: 82 67                    a0 = u64 [s1]
201103: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
201106: 98 cc 07                 a5 = a5 >> 0x7
201109: 98 77 06                 a0 = a0 >> 0x6
201112: 82 6b 08                 a4 = u64 [s1 + 0x8]
201115: d4 c7 07                 a0 = a0 | a5
201118: d2 a7 07                 a0 = a0 & a3
201121: c8 27 07                 a0 = a0 + t0
201124: 85 bc ff                 a5 = a4 ^ 0xffffffffffffffff
201127: 98 cc 07                 a5 = a5 >> 0x7
201130: 82 65 10                 s0 = u64 [s1 + 0x10]
201133: 98 bb 06                 a4 = a4 >> 0x6
201136: d4 cb 0b                 a4 = a4 | a5
201139: d2 ab 0b                 a4 = a4 & a3
201142: 85 5c ff                 a5 = s0 ^ 0xffffffffffffffff
201145: 98 cc 07                 a5 = a5 >> 0x7
201148: 98 55 06                 s0 = s0 >> 0x6
201151: d4 5c 0c                 a5 = a5 | s0
201154: 82 65 18                 s0 = u64 [s1 + 0x18]
201157: d2 ac 0c                 a5 = a5 & a3
201160: c8 cb 0b                 a4 = a4 + a5
201163: c8 b7 07                 a0 = a0 + a4
201166: 85 5b ff                 a4 = s0 ^ 0xffffffffffffffff
201169: 98 bb 07                 a4 = a4 >> 0x7
201172: 98 55 06                 s0 = s0 >> 0x6
201175: d4 5b 0b                 a4 = a4 | s0
201178: d2 ab 0b                 a4 = a4 & a3
201181: 95 66 20                 s1 = s1 + 0x20
201184: c8 7b 02                 t0 = a4 + a0
201187: ab 86 aa                 jump @13793 if s1 != a1
      :                          @13794
201190: 28 5f ff                 jump @13789
      :                          @13795
201193: 82 13 18                 t1 = u64 [sp + 0x18]
201196: 82 15 10                 s0 = u64 [sp + 0x10]
201199: 82 17 08                 a0 = u64 [sp + 0x8]
201202: 82 1c                    a5 = u64 [sp]
201204: ac c9 5d                 jump @13800 if a2 <u a5
      :                          @13796
201207: 28 45 01                 jump @13828
      :                          @13797
201210: 33 08                    a1 = 0
201212: 84 47 fc 00              a0 = t2 & 0xfc
201216: 97 77 03                 a0 = a0 << 0x3
201219: c8 73 0b                 a4 = t1 + a0
201222: 97 66 03                 s1 = s1 << 0x3
201225: 82 13 18                 t1 = u64 [sp + 0x18]
201228: 82 15 10                 s0 = u64 [sp + 0x10]
201231: 01                       fallthrough
      :                          @13798
201232: 82 b7                    a0 = u64 [a4]
201234: 95 bb 08                 a4 = a4 + 0x8
201237: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
201240: 98 cc 07                 a5 = a5 >> 0x7
201243: 98 77 06                 a0 = a0 >> 0x6
201246: d4 c7 07                 a0 = a0 | a5
201249: d2 a7 07                 a0 = a0 & a3
201252: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
201255: c8 78 08                 a1 = a1 + a0
201258: 52 06 e6                 jump @13798 if s1 != 0
      :                          @13799
201261: 82 1a 28                 a3 = u64 [sp + 0x28]
201264: d2 a8 07                 a0 = a1 & a3
201267: 98 88 08                 a1 = a1 >> 0x8
201270: d2 a8 08                 a1 = a1 & a3
201273: c8 87 07                 a0 = a0 + a1
201276: 82 18 20                 a1 = u64 [sp + 0x20]
201279: ca 87 07                 a0 = a0 * a1
201282: 98 77 30                 a0 = a0 >> 0x30
201285: c8 79 09                 a2 = a2 + a0
201288: 82 17 08                 a0 = u64 [sp + 0x8]
201291: 82 1c                    a5 = u64 [sp]
201293: ae c9 ef 00              jump @13828 if a2 >=u a5
      :                          @13800
201297: 7c 7a 38                 a3 = u8 [a0 + 0x38]
201300: 33 08                    a1 = 0
201302: 33 0b 01                 a4 = 0x1
201305: c9 9c 0c                 a5 = a5 - a2
201308: ad ab 0c                 jump @13803 if a4 <s a3
      :                          @13801
201311: 51 0a 1a                 jump @13805 if a3 == 0
      :                          @13802
201314: 64 c8                    a1 = a5
201316: 49 01                    u64 [sp + 0] = 0
201318: 28 16                    jump @13806
      :                          @13803
201320: 52 1a 02 11              jump @13805 if a3 != 2
      :                          @13804
201324: 98 c8 01                 a1 = a5 >> 0x1
201327: 95 c9 01                 a2 = a5 + 0x1
201330: 98 99 01                 a2 = a2 >> 0x1
201333: 7b 19                    u64 [sp] = a2
201335: 28 05                    jump @13806
      :                          @13805
201337: 7b 1c                    u64 [sp] = a5
201339: 01                       fallthrough
      :                          @13806
201340: 82 79 20                 a2 = u64 [a0 + 0x20]
201343: 7b 19 28                 u64 [sp + 0x28] = a2
201346: 82 75 28                 s0 = u64 [a0 + 0x28]
201349: 81 77 30                 a0 = i32 [a0 + 0x30]
201352: 7b 17 20                 u64 [sp + 0x20] = a0
201355: 95 86 01                 s1 = a1 + 0x1
201358: 01                       fallthrough
      :                          @13807
201359: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
201362: 51 06 19                 jump @13811 if s1 == 0
      :                          @13808
201365: 82 59 20                 a2 = u64 [s0 + 0x20]
201368: 82 17 28                 a0 = u64 [sp + 0x28]
201371: 82 18 20                 a1 = u64 [sp + 0x20]
201374: b4 90 02 3e 0c           ra = 3134, jump [a2]
      :                          @13809 [@dyn 1567]
201379: 51 07 ec                 jump @13807 if a0 == 0
      :                          @13810
201382: 33 07 01                 a0 = 0x1
201385: 28 72                    jump @13824
      :                          @13811
201387: 82 5a 18                 a3 = u64 [s0 + 0x18]
201390: 82 17 28                 a0 = u64 [sp + 0x28]
201393: 82 18 10                 a1 = u64 [sp + 0x10]
201396: 82 19 18                 a2 = u64 [sp + 0x18]
201399: b4 a0 02 40 0c           ra = 3136, jump [a3]
      :                          @13812 [@dyn 1568]
201404: 64 78                    a1 = a0
201406: 33 07 01                 a0 = 0x1
201409: 52 08 5a                 jump @13824 if a1 != 0
      :                          @13813
201412: 82 17                    a0 = u64 [sp]
201414: 9a 77                    a0 = -a0
201416: 7b 17 18                 u64 [sp + 0x18] = a0
201419: 33 06 ff                 s1 = 0xffffffffffffffff
201422: 01                       fallthrough
      :                          @13814
201423: 82 17 18                 a0 = u64 [sp + 0x18]
201426: c8 67 07                 a0 = a0 + s1
201429: 33 08 ff                 a1 = 0xffffffffffffffff
201432: aa 87 34                 jump @13822 if a0 == a1
      :                          @13815
201435: 82 59 20                 a2 = u64 [s0 + 0x20]
201438: 82 17 28                 a0 = u64 [sp + 0x28]
201441: 82 18 20                 a1 = u64 [sp + 0x20]
201444: b4 90 02 42 0c           ra = 3138, jump [a2]
      :                          @13816 [@dyn 1569]
201449: 95 66 01                 s1 = s1 + 0x1
201452: 51 07 e3                 jump @13814 if a0 == 0
      :                          @13817
201455: 28 26                    jump @13823
      :                          @13818
201457: 82 13 18                 t1 = u64 [sp + 0x18]
201460: 82 15 10                 s0 = u64 [sp + 0x10]
201463: 51 0a 35                 jump @13826 if a3 == 0
      :                          @13819
201466: ae 3a 2f                 jump @13825 if a3 >=u t1
      :                          @13820
201469: c8 a5 08                 a1 = s0 + a3
201472: 7d 88                    a1 = i8 [a1]
201474: 33 09 c0                 a2 = 0xffffffffffffffc0
201477: af 98 27                 jump @13826 if a1 >=s a2
      :                          @13821
201480: 33 08                    a1 = 0
201482: 28 25                    jump @13827
      :                          @13822
201484: 82 16                    s1 = u64 [sp]
201486: 82 17                    a0 = u64 [sp]
201488: d8 76 07                 a0 = s1 <u a0
201491: 28 08                    jump @13824
      :                          @13823
201493: 82 17                    a0 = u64 [sp]
201495: d8 76 07                 a0 = s1 <u a0
201498: 01                       fallthrough
      :                          @13824
201499: 82 10 40                 ra = u64 [sp + 0x40]
201502: 82 15 38                 s0 = u64 [sp + 0x38]
201505: 82 16 30                 s1 = u64 [sp + 0x30]
201508: 95 11 48                 sp = sp + 0x48
201511: 32 00                    ret
      :                          @13825
201513: ab 3a df                 jump @13821 if a3 != t1
      :                          @13826
201516: 64 58                    a1 = s0
201518: 01                       fallthrough
      :                          @13827
201519: 82 17 08                 a0 = u64 [sp + 0x8]
201522: db 8a 03                 t1 = a3 if a1 != 0
201525: db 88 05                 s0 = a1 if a1 != 0
201528: 52 04 59 fd              jump @13777 if t2 != 0
      :                          @13828
201532: 82 78 28                 a1 = u64 [a0 + 0x28]
201535: 82 77 20                 a0 = u64 [a0 + 0x20]
201538: 82 8c 18                 a5 = u64 [a1 + 0x18]
201541: 64 58                    a1 = s0
201543: 64 39                    a2 = t1
201545: 82 10 40                 ra = u64 [sp + 0x40]
201548: 82 15 38                 s0 = u64 [sp + 0x38]
201551: 82 16 30                 s1 = u64 [sp + 0x30]
201554: 95 11 48                 sp = sp + 0x48
201557: 32 0c                    jump [a5]
      :                          @13829
201559: 95 11 78 ff              sp = sp + 0xffffffffffffff78
201563: 7b 10 80 00              u64 [sp + 0x80] = ra
201567: 7b 15 78                 u64 [sp + 0x78] = s0
201570: 7b 16 70                 u64 [sp + 0x70] = s1
201573: 49 11 60 20              u64 [sp + 96] = 0x20
201577: 33 0a 03                 a3 = 0x3
201580: 78 1a 68                 u8 [sp + 0x68] = a3
201583: 82 96 20                 s1 = u64 [a2 + 0x20]
201586: 49 11 30                 u64 [sp + 48] = 0
201589: 49 11 40                 u64 [sp + 64] = 0
201592: 7b 17 50                 u64 [sp + 0x50] = a0
201595: 7b 18 58                 u64 [sp + 0x58] = a1
201598: 51 06 0a 01              jump @13851 if s1 == 0
      :                          @13830
201602: 82 97 28                 a0 = u64 [a2 + 0x28]
201605: 51 07 79 01              jump @13861 if a0 == 0
      :                          @13831
201609: 49 11 28                 u64 [sp + 40] = 0
201612: 82 95                    s0 = u64 [a2]
201614: 7b 19 08                 u64 [sp + 0x8] = a2
201617: 82 98 10                 a1 = u64 [a2 + 0x10]
201620: 7b 18 18                 u64 [sp + 0x18] = a1
201623: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
201626: 97 88 03                 a1 = a1 << 0x3
201629: 98 88 03                 a1 = a1 >> 0x3
201632: 95 88 01                 a1 = a1 + 0x1
201635: 7b 18                    u64 [sp] = a1
201637: 95 55 08                 s0 = s0 + 0x8
201640: 96 78 38                 a1 = a0 * 0x38
201643: 95 66 18                 s1 = s1 + 0x18
201646: 33 07 26 0c              a0 = 0xc26
201650: 7b 17 10                 u64 [sp + 0x10] = a0
201653: 01                       fallthrough
      :                          @13832
201654: 7b 18 20                 u64 [sp + 0x20] = a1
201657: 82 59                    a2 = u64 [s0]
201659: 51 09 18                 jump @13835 if a2 == 0
      :                          @13833
201662: 82 1a 58                 a3 = u64 [sp + 0x58]
201665: 82 17 50                 a0 = u64 [sp + 0x50]
201668: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
201671: 82 aa 18                 a3 = u64 [a3 + 0x18]
201674: b4 a0 02 44 0c           ra = 3140, jump [a3]
      :                          @13834 [@dyn 1570]
201679: 52 07 55 01              jump @13864 if a0 != 0
      :                          @13835
201683: 81 67 10                 a0 = i32 [s1 + 0x10]
201686: 7a 17 60                 u32 [sp + 0x60] = a0
201689: 7c 67 18                 a0 = u8 [s1 + 0x18]
201692: 78 17 68                 u8 [sp + 0x68] = a0
201695: 81 67 14                 a0 = i32 [s1 + 0x14]
201698: 7a 17 64                 u32 [sp + 0x64] = a0
201701: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
201704: 82 67                    a0 = u64 [s1]
201706: 51 08 26                 jump @13840 if a1 == 0
      :                          @13836
201709: 52 18 01 16              jump @13838 if a1 != 1
      :                          @13837
201713: 97 77 04                 a0 = a0 << 0x4
201716: 82 18 18                 a1 = u64 [sp + 0x18]
201719: c8 87 07                 a0 = a0 + a1
201722: 82 78 08                 a1 = u64 [a0 + 0x8]
201725: 82 19 10                 a2 = u64 [sp + 0x10]
201728: aa 98 07                 jump @13839 if a1 == a2
      :                          @13838
201731: 33 08                    a1 = 0
201733: 28 0f                    jump @13841
      :                          @13839
201735: 82 77                    a0 = u64 [a0]
201737: 82 77                    a0 = u64 [a0]
201739: 33 08 01                 a1 = 0x1
201742: 28 06                    jump @13841
      :                          @13840
201744: 33 08 01                 a1 = 0x1
201747: 01                       fallthrough
      :                          @13841
201748: 7b 18 30                 u64 [sp + 0x30] = a1
201751: 7b 17 38                 u64 [sp + 0x38] = a0
201754: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
201757: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
201760: 51 08 26                 jump @13846 if a1 == 0
      :                          @13842
201763: 52 18 01 16              jump @13844 if a1 != 1
      :                          @13843
201767: 97 77 04                 a0 = a0 << 0x4
201770: 82 18 18                 a1 = u64 [sp + 0x18]
201773: c8 87 07                 a0 = a0 + a1
201776: 82 78 08                 a1 = u64 [a0 + 0x8]
201779: 82 19 10                 a2 = u64 [sp + 0x10]
201782: aa 98 07                 jump @13845 if a1 == a2
      :                          @13844
201785: 33 08                    a1 = 0
201787: 28 0f                    jump @13847
      :                          @13845
201789: 82 77                    a0 = u64 [a0]
201791: 82 77                    a0 = u64 [a0]
201793: 33 08 01                 a1 = 0x1
201796: 28 06                    jump @13847
      :                          @13846
201798: 33 08 01                 a1 = 0x1
201801: 01                       fallthrough
      :                          @13847
201802: 7b 18 40                 u64 [sp + 0x40] = a1
201805: 7b 17 48                 u64 [sp + 0x48] = a0
201808: 82 67 08                 a0 = u64 [s1 + 0x8]
201811: 97 77 04                 a0 = a0 << 0x4
201814: 82 18 18                 a1 = u64 [sp + 0x18]
201817: c8 78 08                 a1 = a1 + a0
201820: 82 87                    a0 = u64 [a1]
201822: 82 89 08                 a2 = u64 [a1 + 0x8]
201825: 95 18 30                 a1 = sp + 0x30
201828: b4 90 02 46 0c           ra = 3142, jump [a2]
      :                          @13848 [@dyn 1571]
201833: 52 07 bb 00              jump @13864 if a0 != 0
      :                          @13849
201837: 95 55 10                 s0 = s0 + 0x10
201840: 82 18 20                 a1 = u64 [sp + 0x20]
201843: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
201846: 95 66 38                 s1 = s1 + 0x38
201849: 82 17 28                 a0 = u64 [sp + 0x28]
201852: 95 77 01                 a0 = a0 + 0x1
201855: 7b 17 28                 u64 [sp + 0x28] = a0
201858: 52 08 34 ff              jump @13832 if a1 != 0
      :                          @13850
201862: 28 6b                    jump @13859
      :                          @13851
201864: 82 97 18                 a0 = u64 [a2 + 0x18]
201867: 51 07 73                 jump @13861 if a0 == 0
      :                          @13852
201870: 82 95 10                 s0 = u64 [a2 + 0x10]
201873: 33 0a                    a3 = 0
201875: 97 78 04                 a1 = a0 << 0x4
201878: c8 58 08                 a1 = a1 + s0
201881: 7b 18 20                 u64 [sp + 0x20] = a1
201884: 7b 19 08                 u64 [sp + 0x8] = a2
201887: 82 96                    s1 = u64 [a2]
201889: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
201892: 97 77 04                 a0 = a0 << 0x4
201895: 98 77 04                 a0 = a0 >> 0x4
201898: 95 77 01                 a0 = a0 + 0x1
201901: 7b 17                    u64 [sp] = a0
201903: 95 66 08                 s1 = s1 + 0x8
201906: 01                       fallthrough
      :                          @13853
201907: 7b 1a 28                 u64 [sp + 0x28] = a3
201910: 82 69                    a2 = u64 [s1]
201912: 51 09 17                 jump @13856 if a2 == 0
      :                          @13854
201915: 82 1a 58                 a3 = u64 [sp + 0x58]
201918: 82 17 50                 a0 = u64 [sp + 0x50]
201921: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
201924: 82 aa 18                 a3 = u64 [a3 + 0x18]
201927: b4 a0 02 48 0c           ra = 3144, jump [a3]
      :                          @13855 [@dyn 1572]
201932: 52 07 58                 jump @13864 if a0 != 0
      :                          @13856
201935: 82 57                    a0 = u64 [s0]
201937: 82 59 08                 a2 = u64 [s0 + 0x8]
201940: 95 18 30                 a1 = sp + 0x30
201943: b4 90 02 4a 0c           ra = 3146, jump [a2]
      :                          @13857 [@dyn 1573]
201948: 52 07 48                 jump @13864 if a0 != 0
      :                          @13858
201951: 95 66 10                 s1 = s1 + 0x10
201954: 95 55 10                 s0 = s0 + 0x10
201957: 82 1a 28                 a3 = u64 [sp + 0x28]
201960: 95 aa 01                 a3 = a3 + 0x1
201963: 82 17 20                 a0 = u64 [sp + 0x20]
201966: ab 75 c5                 jump @13853 if s0 != a0
      :                          @13859
201969: 82 19 08                 a2 = u64 [sp + 0x8]
201972: 82 1a                    a3 = u64 [sp]
201974: 82 97 08                 a0 = u64 [a2 + 0x8]
201977: ac 7a 0d                 jump @13862 if a3 <u a0
      :                          @13860
201980: 28 2d                    jump @13865
      :                          @13861
201982: 33 0a                    a3 = 0
201984: 82 97 08                 a0 = u64 [a2 + 0x8]
201987: 54 07 26                 jump @13865 if a0 <=u 0
      :                          @13862
201990: 82 97                    a0 = u64 [a2]
201992: 97 a8 04                 a1 = a3 << 0x4
201995: c8 87 09                 a2 = a0 + a1
201998: 82 1a 58                 a3 = u64 [sp + 0x58]
202001: 82 17 50                 a0 = u64 [sp + 0x50]
202004: 82 98                    a1 = u64 [a2]
202006: 82 99 08                 a2 = u64 [a2 + 0x8]
202009: 82 aa 18                 a3 = u64 [a3 + 0x18]
202012: b4 a0 02 4c 0c           ra = 3148, jump [a3]
      :                          @13863 [@dyn 1574]
202017: 51 07 08                 jump @13865 if a0 == 0
      :                          @13864
202020: 33 07 01                 a0 = 0x1
202023: 28 05                    jump @13866
      :                          @13865
202025: 33 07                    a0 = 0
202027: 01                       fallthrough
      :                          @13866
202028: 82 10 80 00              ra = u64 [sp + 0x80]
202032: 82 15 78                 s0 = u64 [sp + 0x78]
202035: 82 16 70                 s1 = u64 [sp + 0x70]
202038: 95 11 88 00              sp = sp + 0x88
202042: 32 00                    ret
      :                          @13867 [@dyn 1575]
202044: 32 00                    ret
      :                          @13868 [@dyn 1576]
202046: 95 11 80                 sp = sp + 0xffffffffffffff80
202049: 7b 10 78                 u64 [sp + 0x78] = ra
202052: 7b 15 70                 u64 [sp + 0x70] = s0
202055: 7b 16 68                 u64 [sp + 0x68] = s1
202058: 64 92                    t0 = a2
202060: 33 00                    ra = 0
202062: 33 0b                    a4 = 0
202064: 33 05                    s0 = 0
202066: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
202076: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
202082: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
202092: 82 79 10                 a2 = u64 [a0 + 0x10]
202095: 7b 19 48                 u64 [sp + 0x48] = a2
202098: 82 79                    a2 = u64 [a0]
202100: 7b 19 38                 u64 [sp + 0x38] = a2
202103: 82 77 08                 a0 = u64 [a0 + 0x8]
202106: 7b 17 30                 u64 [sp + 0x30] = a0
202109: 33 07 bc 04 01           a0 = 0x104bc
202114: 7b 17 08                 u64 [sp + 0x8] = a0
202117: 3a 07 00 12 03           a0 = u64 [0x31200]
202122: 7b 17 60                 u64 [sp + 0x60] = a0
202125: 7b 18 58                 u64 [sp + 0x58] = a1
202128: 95 88 08                 a1 = a1 + 0x8
202131: 7b 18                    u64 [sp] = a1
202133: 33 0c 0a                 a5 = 0xa
202136: 7b 12 20                 u64 [sp + 0x20] = t0
202139: 7b 13 18                 u64 [sp + 0x18] = t1
202142: 7b 14 10                 u64 [sp + 0x10] = t2
202145: 28 3b                    jump @13872
      :                          @13869
202147: 64 06                    s1 = ra
202149: c8 89 07                 a0 = a2 + a1
202152: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
202155: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
202158: 88 77 01                 a0 = a0 <u 0x1
202161: 01                       fallthrough
      :                          @13870
202162: 82 1a 48                 a3 = u64 [sp + 0x48]
202165: 78 a7                    u8 [a3] = a0
202167: 82 17 30                 a0 = u64 [sp + 0x30]
202170: 82 7a 18                 a3 = u64 [a0 + 0x18]
202173: 82 17 38                 a0 = u64 [sp + 0x38]
202176: b4 a0 02 52 0c           ra = 3154, jump [a3]
      :                          @13871 [@dyn 1577]
202181: 64 5b                    a4 = s0
202183: 82 12 20                 t0 = u64 [sp + 0x20]
202186: 82 13 18                 t1 = u64 [sp + 0x18]
202189: 82 14 10                 t2 = u64 [sp + 0x10]
202192: 64 60                    ra = s1
202194: 33 0c 0a                 a5 = 0xa
202197: 82 15 40                 s0 = u64 [sp + 0x40]
202200: 52 07 64 01              jump @13913 if a0 != 0
      :                          @13872
202204: 84 57 ff 00              a0 = s0 & 0xff
202208: 52 07 58 01              jump @13912 if a0 != 0
      :                          @13873
202212: 7b 1b 50                 u64 [sp + 0x50] = a4
202215: ae 02 0a                 jump @13876 if t0 >=u ra
      :                          @13874
202218: 28 ef 00                 jump @13903
      :                          @13875
202221: ac 02 ec 00              jump @13903 if t0 <u ra
      :                          @13876
202225: c9 02 08                 a1 = t0 - ra
202228: 82 16 58                 s1 = u64 [sp + 0x58]
202231: c8 06 06                 s1 = s1 + ra
202234: 55 18 10 1d              jump @13882 if a1 >=u 16
      :                          @13877
202238: aa 02 d8 00              jump @13902 if t0 == ra
      :                          @13878
202242: 33 0a                    a3 = 0
202244: 01                       fallthrough
      :                          @13879
202245: c8 a6 07                 a0 = s1 + a3
202248: 7c 77                    a0 = u8 [a0]
202250: aa c7 a5 00              jump @13897 if a0 == a5
      :                          @13880
202254: 95 aa 01                 a3 = a3 + 0x1
202257: ab a8 f4                 jump @13879 if a1 != a3
      :                          @13881
202260: 28 c2 00                 jump @13902
      :                          @13882
202263: 95 69 07                 a2 = s1 + 0x7
202266: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
202269: c9 6a 07                 a0 = a3 - s1
202272: d3 6a 0a                 a3 = a3 ^ s1
202275: 88 aa 01                 a3 = a3 <u 0x1
202278: 88 7b 01                 a4 = a0 <u 0x1
202281: d4 ba 0a                 a3 = a3 | a4
202284: 51 0a 45                 jump @13888 if a3 == 0
      :                          @13883
202287: 33 07                    a0 = 0
202289: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
202292: 82 1b                    a4 = u64 [sp]
202294: c8 0b 0b                 a4 = a4 + ra
202297: 28 08                    jump @13885
      :                          @13884
202299: 82 1b                    a4 = u64 [sp]
202301: c8 0b 0b                 a4 = a4 + ra
202304: 01                       fallthrough
      :                          @13885
202305: c8 76 0c                 a5 = s1 + a0
202308: 82 cc                    a5 = u64 [a5]
202310: c8 7b 09                 a2 = a4 + a0
202313: 82 99                    a2 = u64 [a2]
202315: d3 4c 05                 s0 = a5 ^ t2
202318: c8 35 05                 s0 = s0 + t1
202321: e0 c5 0c                 a5 = s0 & ~a5
202324: d3 49 05                 s0 = a2 ^ t2
202327: c8 35 05                 s0 = s0 + t1
202330: e0 95 09                 a2 = s0 & ~a2
202333: d4 c9 09                 a2 = a2 | a5
202336: 82 1c 60                 a5 = u64 [sp + 0x60]
202339: d2 c9 09                 a2 = a2 & a5
202342: 52 09 1f                 jump @13891 if a2 != 0
      :                          @13886
202345: 95 77 10                 a0 = a0 + 0x10
202348: ae 7a d5                 jump @13885 if a3 >=u a0
      :                          @13887
202351: 28 16                    jump @13891
      :                          @13888
202353: c8 a6 0b                 a4 = s1 + a3
202356: 7c bb                    a4 = u8 [a4]
202358: aa cb 51                 jump @13900 if a4 == a5
      :                          @13889
202361: 95 aa 01                 a3 = a3 + 0x1
202364: ab a7 f5                 jump @13888 if a0 != a3
      :                          @13890
202367: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
202370: ae 7a b9                 jump @13884 if a3 >=u a0
      :                          @13891
202373: aa 87 9b 00              jump @13909 if a0 == a1
      :                          @13892
202377: 33 0a                    a3 = 0
202379: c8 76 06                 s1 = s1 + a0
202382: c9 72 08                 a1 = t0 - a0
202385: c9 08 08                 a1 = a1 - ra
202388: 33 0c 0a                 a5 = 0xa
202391: 82 1b 50                 a4 = u64 [sp + 0x50]
202394: 01                       fallthrough
      :                          @13893
202395: c8 a6 09                 a2 = s1 + a3
202398: 7c 99                    a2 = u8 [a2]
202400: aa c9 0b                 jump @13896 if a2 == a5
      :                          @13894
202403: 95 aa 01                 a3 = a3 + 0x1
202406: ab a8 f5                 jump @13893 if a1 != a3
      :                          @13895
202409: 28 2d                    jump @13902
      :                          @13896
202411: c8 7a 0a                 a3 = a3 + a0
202414: 01                       fallthrough
      :                          @13897
202415: c8 0a 0a                 a3 = a3 + ra
202418: 95 a0 01                 ra = a3 + 0x1
202421: ae 2a 38 ff              jump @13875 if a3 >=u t0
      :                          @13898
202425: 82 17 58                 a0 = u64 [sp + 0x58]
202428: c8 7a 0a                 a3 = a3 + a0
202431: 7c a7                    a0 = u8 [a3]
202433: ab c7 2c ff              jump @13875 if a0 != a5
      :                          @13899
202437: 28 62                    jump @13910
      :                          @13900
202439: 82 1b 50                 a4 = u64 [sp + 0x50]
202442: c8 0a 0a                 a3 = a3 + ra
202445: 95 a0 01                 ra = a3 + 0x1
202448: ac 2a e9                 jump @13898 if a3 <u t0
      :                          @13901
202451: 28 1a ff                 jump @13875
      :                          @13902
202454: 64 20                    ra = t0
202456: 01                       fallthrough
      :                          @13903
202457: 49 11 40 01              u64 [sp + 64] = 0x1
202461: 64 b5                    s0 = a4
202463: 64 26                    s1 = t0
202465: aa 2b 57                 jump @13912 if a4 == t0
      :                          @13904
202468: 82 17 48                 a0 = u64 [sp + 0x48]
202471: 7c 77                    a0 = u8 [a0]
202473: 51 07 23                 jump @13907 if a0 == 0
      :                          @13905
202476: 82 17 30                 a0 = u64 [sp + 0x30]
202479: 82 7a 18                 a3 = u64 [a0 + 0x18]
202482: 33 09 04                 a2 = 0x4
202485: 82 17 38                 a0 = u64 [sp + 0x38]
202488: 82 18 08                 a1 = u64 [sp + 0x8]
202491: 7b 10 28                 u64 [sp + 0x28] = ra
202494: b4 a0 02 54 0c           ra = 3156, jump [a3]
      :                          @13906 [@dyn 1578]
202499: 82 1b 50                 a4 = u64 [sp + 0x50]
202502: 82 10 28                 ra = u64 [sp + 0x28]
202505: 52 07 33                 jump @13913 if a0 != 0
      :                          @13907
202508: c9 b6 09                 a2 = s1 - a4
202511: 82 18 58                 a1 = u64 [sp + 0x58]
202514: c8 b8 08                 a1 = a1 + a4
202517: ab b6 8e fe              jump @13869 if s1 != a4
      :                          @13908
202521: 64 06                    s1 = ra
202523: 33 07                    a0 = 0
202525: 28 95 fe                 jump @13870
      :                          @13909
202528: 64 20                    ra = t0
202530: 82 1b 50                 a4 = u64 [sp + 0x50]
202533: 28 b4                    jump @13903
      :                          @13910
202535: 49 11 40                 u64 [sp + 64] = 0
202538: 64 05                    s0 = ra
202540: 64 06                    s1 = ra
202542: 82 17 48                 a0 = u64 [sp + 0x48]
202545: 7c 77                    a0 = u8 [a0]
202547: 52 07 b9                 jump @13905 if a0 != 0
      :                          @13911
202550: 28 d6                    jump @13907
      :                          @13912
202552: 33 07                    a0 = 0
202554: 28 06                    jump @13914
      :                          @13913
202556: 33 07 01                 a0 = 0x1
202559: 01                       fallthrough
      :                          @13914
202560: 82 10 78                 ra = u64 [sp + 0x78]
202563: 82 15 70                 s0 = u64 [sp + 0x70]
202566: 82 16 68                 s1 = u64 [sp + 0x68]
202569: 95 11 80 00              sp = sp + 0x80
202573: 32 00                    ret
      :                          @13915 [@dyn 1579]
202575: 95 11 d8                 sp = sp + 0xffffffffffffffd8
202578: 7b 10 20                 u64 [sp + 0x20] = ra
202581: 7b 15 18                 u64 [sp + 0x18] = s0
202584: 7b 16 10                 u64 [sp + 0x10] = s1
202587: 82 75 10                 s0 = u64 [a0 + 0x10]
202590: 7c 59                    a2 = u8 [s0]
202592: 82 7b                    a4 = u64 [a0]
202594: 82 76 08                 s1 = u64 [a0 + 0x8]
202597: 51 09 33                 jump @13919 if a2 == 0
      :                          @13916
202600: 82 6a 18                 a3 = u64 [s1 + 0x18]
202603: 7b 18 08                 u64 [sp + 0x8] = a1
202606: 33 08 bc 04 01           a1 = 0x104bc
202611: 33 09 04                 a2 = 0x4
202614: 64 b7                    a0 = a4
202616: 7b 1b                    u64 [sp] = a4
202618: b4 a0 02 58 0c           ra = 3160, jump [a3]
      :                          @13917 [@dyn 1580]
202623: 82 18 08                 a1 = u64 [sp + 0x8]
202626: 82 1b                    a4 = u64 [sp]
202628: 51 07 14                 jump @13919 if a0 == 0
      :                          @13918
202631: 33 07 01                 a0 = 0x1
202634: 82 10 20                 ra = u64 [sp + 0x20]
202637: 82 15 18                 s0 = u64 [sp + 0x18]
202640: 82 16 10                 s1 = u64 [sp + 0x10]
202643: 95 11 28                 sp = sp + 0x28
202646: 32 00                    ret
      :                          @13919
202648: 83 87                    i32 a0 = a1 + 0
202650: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
202653: 88 77 01                 a0 = a0 <u 0x1
202656: 78 57                    u8 [s0] = a0
202658: 82 6c 20                 a5 = u64 [s1 + 0x20]
202661: 64 b7                    a0 = a4
202663: 82 10 20                 ra = u64 [sp + 0x20]
202666: 82 15 18                 s0 = u64 [sp + 0x18]
202669: 82 16 10                 s1 = u64 [sp + 0x10]
202672: 95 11 28                 sp = sp + 0x28
202675: 32 0c                    jump [a5]
      :                          @13920 [@dyn 1581]
202677: 64 8a                    a3 = a1
202679: 33 08 10 30 01           a1 = 0x13010
202684: 64 a9                    a2 = a3
202686: 28 99 fb                 jump @13829
      :                          @13921 [@dyn 1582]
202689: 7c 77                    a0 = u8 [a0]
202691: 64 89                    a2 = a1
202693: 33 08 01                 a1 = 0x1
202696: 28 f9 f3                 jump @13692
      :                          @13922 [@dyn 1583]
202699: 80 77                    a0 = u32 [a0]
202701: 64 89                    a2 = a1
202703: 33 08 01                 a1 = 0x1
202706: 28 ef f3                 jump @13692
      :                          @13923
202709: 00                       trap
      :                          @13924
202710: 95 11 70 ff              sp = sp + 0xffffffffffffff70
202714: 7b 10 88 00              u64 [sp + 0x88] = ra
202718: 7b 15 80 00              u64 [sp + 0x80] = s0
202722: 7b 16 78                 u64 [sp + 0x78] = s1
202725: 64 75                    s0 = a0
202727: 7c 77 10                 a0 = u8 [a0 + 0x10]
202730: 82 5c                    a5 = u64 [s0]
202732: 64 8b                    a4 = a1
202734: 33 08 01                 a1 = 0x1
202737: 51 07 1e                 jump @13926 if a0 == 0
      :                          @13925
202740: 78 58 10                 u8 [s0 + 0x10] = a1
202743: 95 c7 01                 a0 = a5 + 0x1
202746: 7b 57                    u64 [s0] = a0
202748: 64 57                    a0 = s0
202750: 82 10 88 00              ra = u64 [sp + 0x88]
202754: 82 15 80 00              s0 = u64 [sp + 0x80]
202758: 82 16 78                 s1 = u64 [sp + 0x78]
202761: 95 11 90 00              sp = sp + 0x90
202765: 32 00                    ret
      :                          @13926
202767: 82 56 08                 s1 = u64 [s0 + 0x8]
202770: 80 67 34                 a0 = u32 [s1 + 0x34]
202773: 84 78 04                 a1 = a0 & 0x4
202776: 7b 1c 10                 u64 [sp + 0x10] = a5
202779: 52 08 48                 jump @13931 if a1 != 0
      :                          @13927
202782: 7b 1b                    u64 [sp] = a4
202784: 7b 19 08                 u64 [sp + 0x8] = a2
202787: 88 c9 01                 a2 = a5 <u 0x1
202790: 33 0a 40 30 01           a3 = 0x13040
202795: 82 6b 28                 a4 = u64 [s1 + 0x28]
202798: 33 08 44 30 01           a1 = 0x13044
202803: 82 67 20                 a0 = u64 [s1 + 0x20]
202806: 82 bb 18                 a4 = u64 [a4 + 0x18]
202809: db ca 08                 a1 = a3 if a5 != 0
202812: 33 0a 02                 a3 = 0x2
202815: c9 9a 09                 a2 = a3 - a2
202818: b4 b0 02 60 0c           ra = 3168, jump [a4]
      :                          @13928 [@dyn 1584]
202823: 33 08 01                 a1 = 0x1
202826: 82 1c 10                 a5 = u64 [sp + 0x10]
202829: 52 07 a7                 jump @13925 if a0 != 0
      :                          @13929
202832: 82 17                    a0 = u64 [sp]
202834: 64 68                    a1 = s1
202836: 82 19 08                 a2 = u64 [sp + 0x8]
202839: b4 90 02 62 0c           ra = 3170, jump [a2]
      :                          @13930 [@dyn 1585]
202844: 82 1c 10                 a5 = u64 [sp + 0x10]
202847: 64 78                    a1 = a0
202849: 28 93                    jump @13925
      :                          @13931
202851: 52 0c 31                 jump @13935 if a5 != 0
      :                          @13932
202854: 7b 1b                    u64 [sp] = a4
202856: 7b 19 08                 u64 [sp + 0x8] = a2
202859: 82 68 28                 a1 = u64 [s1 + 0x28]
202862: 82 67 20                 a0 = u64 [s1 + 0x20]
202865: 82 8a 18                 a3 = u64 [a1 + 0x18]
202868: 33 08 45 30 01           a1 = 0x13045
202873: 33 09 02                 a2 = 0x2
202876: b4 a0 02 64 0c           ra = 3172, jump [a3]
      :                          @13933 [@dyn 1586]
202881: 33 08 01                 a1 = 0x1
202884: 82 1c 10                 a5 = u64 [sp + 0x10]
202887: 52 07 6d ff              jump @13925 if a0 != 0
      :                          @13934
202891: 81 67 34                 a0 = i32 [s1 + 0x34]
202894: 82 19 08                 a2 = u64 [sp + 0x8]
202897: 82 1b                    a4 = u64 [sp]
202899: 01                       fallthrough
      :                          @13935
202900: 46 11 37 01              u8 [sp + 55] = 0x1
202904: 82 68 20                 a1 = u64 [s1 + 0x20]
202907: 82 6a 28                 a3 = u64 [s1 + 0x28]
202910: 7b 18 18                 u64 [sp + 0x18] = a1
202913: 7b 1a 20                 u64 [sp + 0x20] = a3
202916: 95 18 37                 a1 = sp + 0x37
202919: 7b 18 28                 u64 [sp + 0x28] = a1
202922: 81 68 30                 a1 = i32 [s1 + 0x30]
202925: 7c 62 38                 t0 = u8 [s1 + 0x38]
202928: 82 6a                    a3 = u64 [s1]
202930: 82 63 08                 t1 = u64 [s1 + 0x8]
202933: 82 6c 10                 a5 = u64 [s1 + 0x10]
202936: 82 66 18                 s1 = u64 [s1 + 0x18]
202939: 7a 17 6c                 u32 [sp + 0x6c] = a0
202942: 7a 18 68                 u32 [sp + 0x68] = a1
202945: 78 12 70                 u8 [sp + 0x70] = t0
202948: 7b 1a 38                 u64 [sp + 0x38] = a3
202951: 7b 13 40                 u64 [sp + 0x40] = t1
202954: 7b 1c 48                 u64 [sp + 0x48] = a5
202957: 7b 16 50                 u64 [sp + 0x50] = s1
202960: 95 17 18                 a0 = sp + 0x18
202963: 7b 17 58                 u64 [sp + 0x58] = a0
202966: 33 07 10 30 01           a0 = 0x13010
202971: 7b 17 60                 u64 [sp + 0x60] = a0
202974: 95 18 38                 a1 = sp + 0x38
202977: 64 b7                    a0 = a4
202979: b4 90 02 66 0c           ra = 3174, jump [a2]
      :                          @13936 [@dyn 1587]
202984: 51 07 0c                 jump @13938 if a0 == 0
      :                          @13937
202987: 82 1c 10                 a5 = u64 [sp + 0x10]
202990: 33 08 01                 a1 = 0x1
202993: 28 03 ff                 jump @13925
      :                          @13938
202996: 82 18 60                 a1 = u64 [sp + 0x60]
202999: 82 17 58                 a0 = u64 [sp + 0x58]
203002: 82 8a 18                 a3 = u64 [a1 + 0x18]
203005: 33 08 42 30 01           a1 = 0x13042
203010: 33 09 02                 a2 = 0x2
203013: b4 a0 02 68 0c           ra = 3176, jump [a3]
      :                          @13939 [@dyn 1588]
203018: 64 78                    a1 = a0
203020: 82 1c 10                 a5 = u64 [sp + 0x10]
203023: 28 e5 fe                 jump @13925
      :                          @13940
203026: 95 11 70 ff              sp = sp + 0xffffffffffffff70
203030: 7b 10 88 00              u64 [sp + 0x88] = ra
203034: 7b 15 80 00              u64 [sp + 0x80] = s0
203038: 7b 16 78                 u64 [sp + 0x78] = s1
203041: 64 75                    s0 = a0
203043: 7c 77 08                 a0 = u8 [a0 + 0x8]
203046: 64 8b                    a4 = a1
203048: 33 08 01                 a1 = 0x1
203051: 33 06 01                 s1 = 0x1
203054: 51 07 1d                 jump @13942 if a0 == 0
      :                          @13941
203057: 78 56 08                 u8 [s0 + 0x8] = s1
203060: 46 15 09 01              u8 [s0 + 9] = 0x1
203064: 64 57                    a0 = s0
203066: 82 10 88 00              ra = u64 [sp + 0x88]
203070: 82 15 80 00              s0 = u64 [sp + 0x80]
203074: 82 16 78                 s1 = u64 [sp + 0x78]
203077: 95 11 90 00              sp = sp + 0x90
203081: 32 00                    ret
      :                          @13942
203083: 64 9a                    a3 = a2
203085: 82 5c                    a5 = u64 [s0]
203087: 80 c7 34                 a0 = u32 [a5 + 0x34]
203090: 7c 58 09                 a1 = u8 [s0 + 0x9]
203093: 84 79 04                 a2 = a0 & 0x4
203096: 52 09 45                 jump @13948 if a2 != 0
      :                          @13943
203099: 51 08 32                 jump @13946 if a1 == 0
      :                          @13944
203102: 82 c8 28                 a1 = u64 [a5 + 0x28]
203105: 82 c7 20                 a0 = u64 [a5 + 0x20]
203108: 82 83 18                 t1 = u64 [a1 + 0x18]
203111: 33 08 40 30 01           a1 = 0x13040
203116: 33 09 02                 a2 = 0x2
203119: 64 a6                    s1 = a3
203121: 7b 1b 10                 u64 [sp + 0x10] = a4
203124: 7b 1c 08                 u64 [sp + 0x8] = a5
203127: b4 30 02 6a 0c           ra = 3178, jump [t1]
      :                          @13945 [@dyn 1589]
203132: 82 1c 08                 a5 = u64 [sp + 0x8]
203135: 82 1b 10                 a4 = u64 [sp + 0x10]
203138: 64 6a                    a3 = s1
203140: 33 08 01                 a1 = 0x1
203143: 33 06 01                 s1 = 0x1
203146: 52 07 a7                 jump @13941 if a0 != 0
      :                          @13946
203149: 64 b7                    a0 = a4
203151: 64 c8                    a1 = a5
203153: b4 a0 02 6c 0c           ra = 3180, jump [a3]
      :                          @13947 [@dyn 1590]
203158: 33 08 01                 a1 = 0x1
203161: 64 76                    s1 = a0
203163: 28 96                    jump @13941
      :                          @13948
203165: 52 08 37                 jump @13952 if a1 != 0
      :                          @13949
203168: 82 c8 28                 a1 = u64 [a5 + 0x28]
203171: 82 c7 20                 a0 = u64 [a5 + 0x20]
203174: 82 83 18                 t1 = u64 [a1 + 0x18]
203177: 33 08 48 30 01           a1 = 0x13048
203182: 33 09 01                 a2 = 0x1
203185: 33 06 01                 s1 = 0x1
203188: 7b 1a                    u64 [sp] = a3
203190: 7b 1b 10                 u64 [sp + 0x10] = a4
203193: 7b 1c 08                 u64 [sp + 0x8] = a5
203196: b4 30 02 6e 0c           ra = 3182, jump [t1]
      :                          @13950 [@dyn 1591]
203201: 82 1c 08                 a5 = u64 [sp + 0x8]
203204: 82 1b 10                 a4 = u64 [sp + 0x10]
203207: 82 1a                    a3 = u64 [sp]
203209: 33 08 01                 a1 = 0x1
203212: 52 07 65 ff              jump @13941 if a0 != 0
      :                          @13951
203216: 81 c7 34                 a0 = i32 [a5 + 0x34]
203219: 01                       fallthrough
      :                          @13952
203220: 33 06 01                 s1 = 0x1
203223: 78 16 37                 u8 [sp + 0x37] = s1
203226: 82 c8 20                 a1 = u64 [a5 + 0x20]
203229: 82 c9 28                 a2 = u64 [a5 + 0x28]
203232: 7b 18 18                 u64 [sp + 0x18] = a1
203235: 7b 19 20                 u64 [sp + 0x20] = a2
203238: 95 18 37                 a1 = sp + 0x37
203241: 7b 18 28                 u64 [sp + 0x28] = a1
203244: 81 c8 30                 a1 = i32 [a5 + 0x30]
203247: 7c c9 38                 a2 = u8 [a5 + 0x38]
203250: 82 c3                    t1 = u64 [a5]
203252: 82 c4 08                 t2 = u64 [a5 + 0x8]
203255: 82 c0 10                 ra = u64 [a5 + 0x10]
203258: 82 c2 18                 t0 = u64 [a5 + 0x18]
203261: 7a 17 6c                 u32 [sp + 0x6c] = a0
203264: 7a 18 68                 u32 [sp + 0x68] = a1
203267: 78 19 70                 u8 [sp + 0x70] = a2
203270: 7b 13 38                 u64 [sp + 0x38] = t1
203273: 7b 14 40                 u64 [sp + 0x40] = t2
203276: 7b 10 48                 u64 [sp + 0x48] = ra
203279: 7b 12 50                 u64 [sp + 0x50] = t0
203282: 95 17 18                 a0 = sp + 0x18
203285: 7b 17 58                 u64 [sp + 0x58] = a0
203288: 33 07 10 30 01           a0 = 0x13010
203293: 7b 17 60                 u64 [sp + 0x60] = a0
203296: 95 18 38                 a1 = sp + 0x38
203299: 64 b7                    a0 = a4
203301: b4 a0 02 70 0c           ra = 3184, jump [a3]
      :                          @13953 [@dyn 1592]
203306: 52 07 21                 jump @13956 if a0 != 0
      :                          @13954
203309: 82 18 60                 a1 = u64 [sp + 0x60]
203312: 82 17 58                 a0 = u64 [sp + 0x58]
203315: 82 8a 18                 a3 = u64 [a1 + 0x18]
203318: 33 08 42 30 01           a1 = 0x13042
203323: 33 09 02                 a2 = 0x2
203326: b4 a0 02 72 0c           ra = 3186, jump [a3]
      :                          @13955 [@dyn 1593]
203331: 64 76                    s1 = a0
203333: 33 08 01                 a1 = 0x1
203336: 28 e9 fe                 jump @13941
      :                          @13956
203339: 33 08 01                 a1 = 0x1
203342: 28 e3 fe                 jump @13941
      :                          @13957 [@dyn 1594]
203345: 95 11 a8                 sp = sp + 0xffffffffffffffa8
203348: 7b 10 50                 u64 [sp + 0x50] = ra
203351: 7b 15 48                 u64 [sp + 0x48] = s0
203354: 7b 16 40                 u64 [sp + 0x40] = s1
203357: 82 79 08                 a2 = u64 [a0 + 0x8]
203360: 82 77                    a0 = u64 [a0]
203362: 98 9a 13                 a3 = a2 >> 0x13
203365: 49 11 38 27              u64 [sp + 56] = 0x27
203369: 7b 18                    u64 [sp] = a1
203371: 52 0a 1c                 jump @13959 if a3 != 0
      :                          @13958
203374: 49 11 08                 u64 [sp + 8] = 0
203377: 3a 08 18 12 03           a1 = u64 [0x31218]
203382: 98 7a 13                 a3 = a0 >> 0x13
203385: 97 99 2d                 a2 = a2 << 0x2d
203388: d4 a9 09                 a2 = a2 | a3
203391: d6 89 06                 s1 = a2 mulhu a1
203394: 98 66 2b                 s1 = s1 >> 0x2b
203397: 28 55                    jump @13960
      :                          @13959
203399: 3a 08 08 12 03           a1 = u64 [0x31208]
203404: 3a 0a 10 12 03           a3 = u64 [0x31210]
203409: d6 87 0b                 a4 = a0 mulhu a1
203412: d6 a7 0c                 a5 = a0 mulhu a3
203415: ca a7 06                 s1 = a0 * a3
203418: c8 b6 06                 s1 = s1 + a4
203421: d8 b6 0b                 a4 = s1 <u a4
203424: c8 cb 0b                 a4 = a4 + a5
203427: d6 89 0c                 a5 = a2 mulhu a1
203430: ca 89 08                 a1 = a2 * a1
203433: c8 68 08                 a1 = a1 + s1
203436: d8 68 08                 a1 = a1 <u s1
203439: c8 c8 08                 a1 = a1 + a5
203442: d6 a9 0c                 a5 = a2 mulhu a3
203445: ca a9 09                 a2 = a2 * a3
203448: c8 b9 09                 a2 = a2 + a4
203451: d8 b9 0a                 a3 = a2 <u a4
203454: c8 ca 0a                 a3 = a3 + a5
203457: c8 98 08                 a1 = a1 + a2
203460: d8 98 09                 a2 = a1 <u a2
203463: c8 a9 09                 a2 = a2 + a3
203466: 97 9a 02                 a3 = a2 << 0x2
203469: 98 88 3e                 a1 = a1 >> 0x3e
203472: d4 a8 06                 s1 = a1 | a3
203475: 98 99 3e                 a2 = a2 >> 0x3e
203478: 7b 19 08                 u64 [sp + 0x8] = a2
203481: 01                       fallthrough
      :                          @13960
203482: 3a 05 20 12 03           s0 = u64 [0x31220]
203487: ca 56 08                 a1 = s1 * s0
203490: c8 87 07                 a0 = a0 + a1
203493: 95 18 11                 a1 = sp + 0x11
203496: 95 19 38                 a2 = sp + 0x38
203499: 50 20 76 0c a6 00        ra = 3190, jump @13969
      :                          @13961 [@dyn 1595]
203505: 82 19 38                 a2 = u64 [sp + 0x38]
203508: 82 17 08                 a0 = u64 [sp + 0x8]
203511: d4 67 07                 a0 = a0 | s1
203514: 51 07 6e                 jump @13967 if a0 == 0
      :                          @13962
203517: 95 17 25                 a0 = sp + 0x25
203520: 95 99 ec                 a2 = a2 + 0xffffffffffffffec
203523: 33 08 30                 a1 = 0x30
203526: 50 20 78 0c 53 f0        ra = 3192, jump @13675
      :                          @13963 [@dyn 1596]
203532: 49 11 38 14              u64 [sp + 56] = 0x14
203536: 3a 07 18 12 03           a0 = u64 [0x31218]
203541: 98 68 13                 a1 = s1 >> 0x13
203544: 82 19 08                 a2 = u64 [sp + 0x8]
203547: 97 99 2d                 a2 = a2 << 0x2d
203550: d4 98 08                 a1 = a1 | a2
203553: 7b 18 08                 u64 [sp + 0x8] = a1
203556: d6 78 07                 a0 = a1 mulhu a0
203559: 98 78 2b                 a1 = a0 >> 0x2b
203562: ca 58 07                 a0 = a1 * s0
203565: 64 85                    s0 = a1
203567: c8 67 07                 a0 = a0 + s1
203570: 95 18 11                 a1 = sp + 0x11
203573: 95 19 38                 a2 = sp + 0x38
203576: 50 20 7a 0c 59           ra = 3194, jump @13969
      :                          @13964 [@dyn 1597]
203581: 82 19 38                 a2 = u64 [sp + 0x38]
203584: 14 07 3d 91 60 e4 58 11 00 00 a0 = 0x1158e460913d
203594: 82 18 08                 a1 = u64 [sp + 0x8]
203597: ac 78 1b                 jump @13967 if a1 <u a0
      :                          @13965
203600: 95 17 12                 a0 = sp + 0x12
203603: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
203606: 33 08 30                 a1 = 0x30
203609: 50 20 7c 0c 00 f0        ra = 3196, jump @13675
      :                          @13966 [@dyn 1598]
203615: 33 09                    a2 = 0
203617: 86 57 30                 a0 = s0 | 0x30
203620: 78 17 11                 u8 [sp + 0x11] = a0
203623: 01                       fallthrough
      :                          @13967
203624: 95 1b 11                 a4 = sp + 0x11
203627: c8 9b 0b                 a4 = a4 + a2
203630: 9a 9c 27                 a5 = 0x27 - a2
203633: 33 09 f0 2f 01           a2 = 0x12ff0
203638: 33 08 01                 a1 = 0x1
203641: 82 17                    a0 = u64 [sp]
203643: 33 0a                    a3 = 0
203645: 50 20 7e 0c 72 f1        ra = 3198, jump @13702
      :                          @13968 [@dyn 1599]
203651: 82 10 50                 ra = u64 [sp + 0x50]
203654: 82 15 48                 s0 = u64 [sp + 0x48]
203657: 82 16 40                 s1 = u64 [sp + 0x40]
203660: 95 11 58                 sp = sp + 0x58
203663: 32 00                    ret
      :                          @13969
203665: 95 11 b0                 sp = sp + 0xffffffffffffffb0
203668: 7b 10 48                 u64 [sp + 0x48] = ra
203671: 7b 15 40                 u64 [sp + 0x40] = s0
203674: 7b 16 38                 u64 [sp + 0x38] = s1
203677: 64 95                    s0 = a2
203679: 82 90                    ra = u64 [a2]
203681: 54 10 13 5f 03           jump @13984 if ra <=u 19
      :                          @13970
203686: 14 09 00 00 c1 6f f2 86 23 00 a2 = 0x2386f26fc10000
203696: c8 80 02                 t0 = ra + a1
203699: 7b 18 30                 u64 [sp + 0x30] = a1
203702: ac 97 6c 01              jump @13972 if a0 <u a2
      :                          @13971
203706: 3a 09 30 12 03           a2 = u64 [0x31230]
203711: d6 97 09                 a2 = a0 mulhu a2
203714: 98 9a 33                 a3 = a2 >> 0x33
203717: 7b 1a 20                 u64 [sp + 0x20] = a3
203720: 14 09 00 00 3f 90 0d 79 dc ff a2 = 0xffdc790d903f0000
203730: ca 9a 09                 a2 = a3 * a2
203733: 3a 0a 38 12 03           a3 = u64 [0x31238]
203738: c8 97 07                 a0 = a0 + a2
203741: 3a 09 40 12 03           a2 = u64 [0x31240]
203746: d6 a7 0a                 a3 = a0 mulhu a3
203749: 98 aa 29                 a3 = a3 >> 0x29
203752: 7b 15 28                 u64 [sp + 0x28] = s0
203755: 84 a3 fe                 t1 = a3 & 0xfffffffffffffffe
203758: d6 97 09                 a2 = a0 mulhu a2
203761: 98 96 25                 s1 = a2 >> 0x25
203764: 98 99 27                 a2 = a2 >> 0x27
203767: 97 99 32                 a2 = a2 << 0x32
203770: 33 0c 00 c0 1e 05        a5 = 0x51ec000
203776: d6 c9 09                 a2 = a2 mulhu a5
203779: 98 99 11                 a2 = a2 >> 0x11
203782: 3a 05 48 12 03           s0 = u64 [0x31248]
203787: 96 99 64                 a2 = a2 * 0x64
203790: bf 96 06                 i32 s1 = s1 - a2
203793: 7b 16 18                 u64 [sp + 0x18] = s1
203796: d6 57 09                 a2 = a0 mulhu s0
203799: 98 99 21                 a2 = a2 >> 0x21
203802: 96 95 1f 85 eb 51        s0 = a2 * 0x51eb851f
203808: 3a 0a 28 12 03           a3 = u64 [0x31228]
203813: 98 55 25                 s0 = s0 >> 0x25
203816: 96 55 64                 s0 = s0 * 0x64
203819: bf 59 09                 i32 a2 = a2 - s0
203822: 7b 19 10                 u64 [sp + 0x10] = a2
203825: d6 a7 09                 a2 = a0 mulhu a3
203828: 98 9a 1a                 a3 = a2 >> 0x1a
203831: 97 99 06                 a2 = a2 << 0x6
203834: 98 99 20                 a2 = a2 >> 0x20
203837: 96 99 1f 85 eb 51        a2 = a2 * 0x51eb851f
203843: 98 99 25                 a2 = a2 >> 0x25
203846: 96 99 64                 a2 = a2 * 0x64
203849: bf 9a 0a                 i32 a3 = a3 - a2
203852: 7b 1a 08                 u64 [sp + 0x8] = a3
203855: 3a 05 50 12 03           s0 = u64 [0x31250]
203860: 33 04 4e 30 01           t2 = 0x1304e
203865: c8 43 03                 t1 = t1 + t2
203868: 7c 39 01                 a2 = u8 [t1 + 0x1]
203871: 95 0a f0                 a3 = ra + 0xfffffffffffffff0
203874: 7c 3b                    a4 = u8 [t1]
203876: 64 83                    t1 = a1
203878: c8 a8 08                 a1 = a1 + a3
203881: 78 89 01                 u8 [a1 + 0x1] = a2
203884: d6 57 09                 a2 = a0 mulhu s0
203887: 78 8b                    u8 [a1] = a4
203889: 3a 08 58 12 03           a1 = u64 [0x31258]
203894: 98 99 12                 a2 = a2 >> 0x12
203897: 3a 0b 60 12 03           a4 = u64 [0x31260]
203902: d6 89 05                 s0 = a2 mulhu a1
203905: 96 55 64                 s0 = s0 * 0x64
203908: c9 59 09                 a2 = a2 - s0
203911: 7b 19                    u64 [sp] = a2
203913: d6 b7 09                 a2 = a0 mulhu a4
203916: 98 99 0b                 a2 = a2 >> 0xb
203919: d6 89 08                 a1 = a2 mulhu a1
203922: 96 88 64                 a1 = a1 * 0x64
203925: c9 89 08                 a1 = a2 - a1
203928: 3a 09 68 12 03           a2 = u64 [0x31268]
203933: 3a 0b 70 12 03           a4 = u64 [0x31270]
203938: 98 75 02                 s0 = a0 >> 0x2
203941: d6 95 09                 a2 = s0 mulhu a2
203944: 98 99 02                 a2 = a2 >> 0x2
203947: d6 b9 0b                 a4 = a2 mulhu a4
203950: 98 bb 01                 a4 = a4 >> 0x1
203953: 96 bb 64                 a4 = a4 * 0x64
203956: 82 1c 18                 a5 = u64 [sp + 0x18]
203959: 97 cc 31                 a5 = a5 << 0x31
203962: 98 cc 30                 a5 = a5 >> 0x30
203965: c9 b9 05                 s0 = a2 - a4
203968: c8 4c 0c                 a5 = a5 + t2
203971: 7c cb 01                 a4 = u8 [a5 + 0x1]
203974: 96 99 9c                 a2 = a2 * 0xffffffffffffff9c
203977: c8 97 07                 a0 = a0 + a2
203980: 78 2b f3                 u8 [t0 + 0xfffffffffffffff3] = a4
203983: 82 19 10                 a2 = u64 [sp + 0x10]
203986: 97 99 21                 a2 = a2 << 0x21
203989: 7c cb                    a4 = u8 [a5]
203991: 98 99 20                 a2 = a2 >> 0x20
203994: 82 1c 08                 a5 = u64 [sp + 0x8]
203997: 97 cc 21                 a5 = a5 << 0x21
204000: 98 cc 20                 a5 = a5 >> 0x20
204003: 78 2b f2                 u8 [t0 + 0xfffffffffffffff2] = a4
204006: c8 49 09                 a2 = a2 + t2
204009: 7c 9b                    a4 = u8 [a2]
204011: 7c 99 01                 a2 = u8 [a2 + 0x1]
204014: c8 4c 0c                 a5 = a5 + t2
204017: 7c c6 01                 s1 = u8 [a5 + 0x1]
204020: 7c cc                    a5 = u8 [a5]
204022: 78 29 f5                 u8 [t0 + 0xfffffffffffffff5] = a2
204025: 78 2b f4                 u8 [t0 + 0xfffffffffffffff4] = a4
204028: 78 26 f7                 u8 [t0 + 0xfffffffffffffff7] = s1
204031: 78 2c f6                 u8 [t0 + 0xfffffffffffffff6] = a5
204034: 95 09 f8                 a2 = ra + 0xfffffffffffffff8
204037: 82 1b                    a4 = u64 [sp]
204039: 97 bb 01                 a4 = a4 << 0x1
204042: 97 86 01                 s1 = a1 << 0x1
204045: 97 54 01                 t2 = s0 << 0x1
204048: 97 7c 01                 a5 = a0 << 0x1
204051: 82 17 28                 a0 = u64 [sp + 0x28]
204054: 7b 7a                    u64 [a0] = a3
204056: 64 a0                    ra = a3
204058: 64 3a                    a3 = t1
204060: 82 17 20                 a0 = u64 [sp + 0x20]
204063: 28 a4 00                 jump @13974
      :                          @13972
204066: 53 47 00 e1 f5 05 e4 00  jump @13975 if a0 <u 100000000
      :                          @13973
204074: 7b 15 28                 u64 [sp + 0x28] = s0
204077: 3a 08 28 12 03           a1 = u64 [0x31228]
204082: d6 87 0a                 a3 = a0 mulhu a1
204085: 98 aa 1a                 a3 = a3 >> 0x1a
204088: 87 a8 00 1f 0a fa        i32 a1 = a3 * 0xfffffffffa0a1f00
204094: c8 87 07                 a0 = a0 + a1
204097: 97 78 20                 a1 = a0 << 0x20
204100: 14 09 00 00 00 00 83 de 1b 43 a2 = 0x431bde8300000000
204110: d6 98 09                 a2 = a1 mulhu a2
204113: 98 99 31                 a2 = a2 >> 0x31
204116: 84 95 fe                 s0 = a2 & 0xfffffffffffffffe
204119: 14 09 00 00 00 00 59 17 b7 d1 a2 = 0xd1b7175900000000
204129: d6 98 09                 a2 = a1 mulhu a2
204132: 98 9b 2d                 a4 = a2 >> 0x2d
204135: 98 99 2f                 a2 = a2 >> 0x2f
204138: 97 99 32                 a2 = a2 << 0x32
204141: 33 0c 00 c0 1e 05        a5 = 0x51ec000
204147: d6 c9 09                 a2 = a2 mulhu a5
204150: 98 99 11                 a2 = a2 >> 0x11
204153: 96 99 64                 a2 = a2 * 0x64
204156: bf 9b 0b                 i32 a4 = a4 - a2
204159: 97 bb 31                 a4 = a4 << 0x31
204162: 98 b6 30                 s1 = a4 >> 0x30
204165: 64 5b                    a4 = s0
204167: 14 09 00 00 00 00 1f 85 eb 51 a2 = 0x51eb851f00000000
204177: d6 98 08                 a1 = a1 mulhu a2
204180: 98 88 25                 a1 = a1 >> 0x25
204183: 96 89 29 5c 8f 02        a2 = a1 * 0x28f5c29
204189: 98 99 20                 a2 = a2 >> 0x20
204192: 96 99 64                 a2 = a2 * 0x64
204195: bf 98 09                 i32 a2 = a1 - a2
204198: 97 99 21                 a2 = a2 << 0x21
204201: 98 94 20                 t2 = a2 >> 0x20
204204: 96 88 9c                 a1 = a1 * 0xffffffffffffff9c
204207: c8 87 07                 a0 = a0 + a1
204210: 97 77 21                 a0 = a0 << 0x21
204213: 95 09 f8                 a2 = ra + 0xfffffffffffffff8
204216: 98 7c 20                 a5 = a0 >> 0x20
204219: 64 90                    ra = a2
204221: 64 a7                    a0 = a3
204223: 82 1a 30                 a3 = u64 [sp + 0x30]
204226: 01                       fallthrough
      :                          @13974
204227: 33 08 4e 30 01           a1 = 0x1304e
204232: c8 b8 03                 t1 = a1 + a4
204235: c8 a9 09                 a2 = a2 + a3
204238: 7c 3a                    a3 = u8 [t1]
204240: 7c 3b 01                 a4 = u8 [t1 + 0x1]
204243: c8 86 06                 s1 = s1 + a1
204246: 7c 65 01                 s0 = u8 [s1 + 0x1]
204249: 7c 66                    s1 = u8 [s1]
204251: 78 9b 01                 u8 [a2 + 0x1] = a4
204254: 78 9a                    u8 [a2] = a3
204256: 78 25 fb                 u8 [t0 + 0xfffffffffffffffb] = s0
204259: 78 26 fa                 u8 [t0 + 0xfffffffffffffffa] = s1
204262: c8 84 04                 t2 = t2 + a1
204265: 7c 49                    a2 = u8 [t2]
204267: 7c 4a 01                 a3 = u8 [t2 + 0x1]
204270: c8 c8 08                 a1 = a1 + a5
204273: 7c 8b 01                 a4 = u8 [a1 + 0x1]
204276: 7c 88                    a1 = u8 [a1]
204278: 78 2a fd                 u8 [t0 + 0xfffffffffffffffd] = a3
204281: 78 29 fc                 u8 [t0 + 0xfffffffffffffffc] = a2
204284: 78 2b ff                 u8 [t0 + 0xffffffffffffffff] = a4
204287: 78 28 fe                 u8 [t0 + 0xfffffffffffffffe] = a1
204290: 82 15 28                 s0 = u64 [sp + 0x28]
204293: 01                       fallthrough
      :                          @13975
204294: 8b 78 04                 i32 a1 = a0 >> 0x4
204297: 53 28 71 02 76           jump @13978 if a1 <u 625
      :                          @13976
204302: 97 78 20                 a1 = a0 << 0x20
204305: 14 09 00 00 00 00 59 17 b7 d1 a2 = 0xd1b7175900000000
204315: d6 98 0b                 a4 = a1 mulhu a2
204318: 98 b2 2d                 t0 = a4 >> 0x2d
204321: 87 28 f0 d8 00           i32 a1 = t0 * 0xd8f0
204326: c8 87 07                 a0 = a0 + a1
204329: 97 78 30                 a1 = a0 << 0x30
204332: 98 88 32                 a1 = a1 >> 0x32
204335: 96 88 7b 14              a1 = a1 * 0x147b
204339: 98 89 10                 a2 = a1 >> 0x10
204342: 98 88 11                 a1 = a1 >> 0x11
204345: 96 88 9c                 a1 = a1 * 0xffffffffffffff9c
204348: c8 87 07                 a0 = a0 + a1
204351: 82 1b 30                 a4 = u64 [sp + 0x30]
204354: c8 b0 08                 a1 = ra + a4
204357: 95 00 fc                 ra = ra + 0xfffffffffffffffc
204360: 84 99 fe 07              a2 = a2 & 0x7fe
204364: 33 0a 4e 30 01           a3 = 0x1304e
204369: c8 a9 09                 a2 = a2 + a3
204372: c8 0b 0c                 a5 = a4 + ra
204375: 7c 96                    s1 = u8 [a2]
204377: 7c 99 01                 a2 = u8 [a2 + 0x1]
204380: 97 77 31                 a0 = a0 << 0x31
204383: 98 77 30                 a0 = a0 >> 0x30
204386: c8 a7 07                 a0 = a0 + a3
204389: 7c 7a 01                 a3 = u8 [a0 + 0x1]
204392: 7c 77                    a0 = u8 [a0]
204394: 78 c9 01                 u8 [a5 + 0x1] = a2
204397: 78 c6                    u8 [a5] = s1
204399: 78 8a ff                 u8 [a1 + 0xffffffffffffffff] = a3
204402: 78 87 fe                 u8 [a1 + 0xfffffffffffffffe] = a0
204405: 64 27                    a0 = t0
204407: 6e 28                    a1 = zext.h t0
204409: 55 18 64 0f              jump @13979 if a1 >=u 100
      :                          @13977
204413: 28 3f                    jump @13980
      :                          @13978
204415: 82 1b 30                 a4 = u64 [sp + 0x30]
204418: 6e 78                    a1 = zext.h a0
204420: 53 18 64 38              jump @13980 if a1 <u 100
      :                          @13979
204424: 97 78 30                 a1 = a0 << 0x30
204427: 98 88 32                 a1 = a1 >> 0x32
204430: 96 88 7b 14              a1 = a1 * 0x147b
204434: 98 88 11                 a1 = a1 >> 0x11
204437: 96 89 9c                 a2 = a1 * 0xffffffffffffff9c
204440: c8 97 07                 a0 = a0 + a2
204443: 97 77 31                 a0 = a0 << 0x31
204446: 98 77 30                 a0 = a0 >> 0x30
204449: 33 09 4e 30 01           a2 = 0x1304e
204454: c8 97 07                 a0 = a0 + a2
204457: 7c 79 01                 a2 = u8 [a0 + 0x1]
204460: 7c 77                    a0 = u8 [a0]
204462: 95 00 fe                 ra = ra + 0xfffffffffffffffe
204465: c8 0b 0a                 a3 = a4 + ra
204468: 78 a9 01                 u8 [a3 + 0x1] = a2
204471: 78 a7                    u8 [a3] = a0
204473: 64 87                    a0 = a1
204475: 01                       fallthrough
      :                          @13980
204476: 6e 78                    a1 = zext.h a0
204478: 33 09 0a                 a2 = 0xa
204481: ae 98 10                 jump @13982 if a1 >=u a2
      :                          @13981
204484: 95 02 ff                 t0 = ra + 0xffffffffffffffff
204487: c8 2b 08                 a1 = a4 + t0
204490: 83 77 30                 i32 a0 = a0 + 0x30
204493: 78 87                    u8 [a1] = a0
204495: 28 21                    jump @13983
      :                          @13982
204497: 97 77 31                 a0 = a0 << 0x31
204500: 98 77 30                 a0 = a0 >> 0x30
204503: 33 08 4e 30 01           a1 = 0x1304e
204508: c8 87 07                 a0 = a0 + a1
204511: 7c 78 01                 a1 = u8 [a0 + 0x1]
204514: 7c 77                    a0 = u8 [a0]
204516: 95 02 fe                 t0 = ra + 0xfffffffffffffffe
204519: c8 2b 09                 a2 = a4 + t0
204522: 78 98 01                 u8 [a2 + 0x1] = a1
204525: 78 97                    u8 [a2] = a0
204527: 01                       fallthrough
      :                          @13983
204528: 7b 52                    u64 [s0] = t0
204530: 82 10 48                 ra = u64 [sp + 0x48]
204533: 82 15 40                 s0 = u64 [sp + 0x40]
204536: 82 16 38                 s1 = u64 [sp + 0x38]
204539: 95 11 50                 sp = sp + 0x50
204542: 32 00                    ret
      :                          @13984
204544: 00                       trap
      :                          @13985 [@dyn 1600]
204545: 7c 79                    a2 = u8 [a0]
204547: 64 87                    a0 = a1
204549: 51 09 0e                 jump @13987 if a2 == 0
      :                          @13986
204552: 33 08 8c 04 01           a1 = 0x1048c
204557: 33 09 04                 a2 = 0x4
204560: 28 6a f0                 jump @13756
      :                          @13987
204563: 33 08 16 31 01           a1 = 0x13116
204568: 33 09 05                 a2 = 0x5
204571: 28 5f f0                 jump @13756
      :                          @13988 [@dyn 1601]
204574: 64 8a                    a3 = a1
204576: 82 89                    a2 = u64 [a1]
204578: 82 8b 10                 a4 = u64 [a1 + 0x10]
204581: 81 78                    a1 = i32 [a0]
204583: d4 b9 09                 a2 = a2 | a4
204586: 52 09 0e                 jump @13990 if a2 != 0
      :                          @13989
204589: 82 a9 28                 a2 = u64 [a3 + 0x28]
204592: 82 a7 20                 a0 = u64 [a3 + 0x20]
204595: 82 9c 20                 a5 = u64 [a2 + 0x20]
204598: 32 0c                    jump [a5]
      :                          @13990
204600: 95 11 f0                 sp = sp + 0xfffffffffffffff0
204603: 7b 10 08                 u64 [sp + 0x8] = ra
204606: 48 11 04                 u32 [sp + 4] = 0
204609: 55 28 80 00 0e           jump @13992 if a1 >=u 128
      :                          @13991
204614: 78 18 04                 u8 [sp + 0x4] = a1
204617: 33 09 01                 a2 = 0x1
204620: 28 80 00                 jump @13997
      :                          @13992
204623: 8b 87 0b                 i32 a0 = a1 >> 0xb
204626: 52 07 1c                 jump @13994 if a0 != 0
      :                          @13993
204629: 98 87 06                 a0 = a1 >> 0x6
204632: 86 77 c0 00              a0 = a0 | 0xc0
204636: 78 17 04                 u8 [sp + 0x4] = a0
204639: 84 87 3f                 a0 = a1 & 0x3f
204642: 86 77 80 00              a0 = a0 | 0x80
204646: 78 17 05                 u8 [sp + 0x5] = a0
204649: 33 09 02                 a2 = 0x2
204652: 28 60                    jump @13997
      :                          @13994
204654: 8b 87 10                 i32 a0 = a1 >> 0x10
204657: 52 07 29                 jump @13996 if a0 != 0
      :                          @13995
204660: 98 87 0c                 a0 = a1 >> 0xc
204663: 86 77 e0 00              a0 = a0 | 0xe0
204667: 78 17 04                 u8 [sp + 0x4] = a0
204670: 97 87 34                 a0 = a1 << 0x34
204673: 98 77 3a                 a0 = a0 >> 0x3a
204676: 95 77 80 00              a0 = a0 + 0x80
204680: 78 17 05                 u8 [sp + 0x5] = a0
204683: 84 87 3f                 a0 = a1 & 0x3f
204686: 86 77 80 00              a0 = a0 | 0x80
204690: 78 17 06                 u8 [sp + 0x6] = a0
204693: 33 09 03                 a2 = 0x3
204696: 28 34                    jump @13997
      :                          @13996
204698: 98 87 12                 a0 = a1 >> 0x12
204701: 86 77 f0 00              a0 = a0 | 0xf0
204705: 78 17 04                 u8 [sp + 0x4] = a0
204708: 97 87 2e                 a0 = a1 << 0x2e
204711: 98 77 3a                 a0 = a0 >> 0x3a
204714: 95 77 80 00              a0 = a0 + 0x80
204718: 78 17 05                 u8 [sp + 0x5] = a0
204721: 97 87 34                 a0 = a1 << 0x34
204724: 98 77 3a                 a0 = a0 >> 0x3a
204727: 95 77 80 00              a0 = a0 + 0x80
204731: 78 17 06                 u8 [sp + 0x6] = a0
204734: 84 87 3f                 a0 = a1 & 0x3f
204737: 86 77 80 00              a0 = a0 | 0x80
204741: 78 17 07                 u8 [sp + 0x7] = a0
204744: 33 09 04                 a2 = 0x4
204747: 01                       fallthrough
      :                          @13997
204748: 95 18 04                 a1 = sp + 0x4
204751: 64 a7                    a0 = a3
204753: 50 20 84 0c a9 ef        ra = 3204, jump @13756
      :                          @13998 [@dyn 1602]
204759: 82 10 08                 ra = u64 [sp + 0x8]
204762: 95 11 10                 sp = sp + 0x10
204765: 32 00                    ret
      :                          @13999
204767: 82 89 08                 a2 = u64 [a1 + 0x8]
204770: 51 09 78 01              jump @14030 if a2 == 0
      :                          @14000
204774: 95 11 d0                 sp = sp + 0xffffffffffffffd0
204777: 7b 10 28                 u64 [sp + 0x28] = ra
204780: 7b 15 20                 u64 [sp + 0x20] = s0
204783: 7b 16 18                 u64 [sp + 0x18] = s1
204786: 7b 17 10                 u64 [sp + 0x10] = a0
204789: 33 04                    t2 = 0
204791: 7b 18 08                 u64 [sp + 0x8] = a1
204794: 82 82                    t0 = u64 [a1]
204796: 33 08 1b 31 01           a1 = 0x1311b
204801: 33 03 04                 t1 = 0x4
204804: 33 07 f0 2f 01           a0 = 0x12ff0
204809: 28 2f                    jump @14005
      :                          @14001
204811: 84 3a e0                 a3 = t1 & 0xffffffffffffffe0
204814: 52 1a a0 1c 01           jump @14029 if a3 != 4294967200
      :                          @14002
204819: 95 4b 02                 a4 = t2 + 0x2
204822: d8 9b 0a                 a3 = a4 <u a2
204825: c8 b2 0c                 a5 = t0 + a4
204828: da a7 0c                 a5 = a0 if a3 == 0
204831: 7c ca                    a3 = u8 [a5]
204833: 84 aa c0 00              a3 = a3 & 0xc0
204837: 52 2a 80 00 05 01        jump @14029 if a3 != 128
      :                          @14003
204843: 95 4b 03                 a4 = t2 + 0x3
204846: 33 03 04                 t1 = 0x4
204849: 01                       fallthrough
      :                          @14004
204850: 64 b4                    t2 = a4
204852: ae 9b f6 00              jump @14029 if a4 >=u a2
      :                          @14005
204856: c8 42 0c                 a5 = t0 + t2
204859: 7c c0                    ra = u8 [a5]
204861: 6c 05                    s0 = sext.b ra
204863: 95 4b 01                 a4 = t2 + 0x1
204866: 59 05 f0                 jump @14004 if s0 >=s 0
      :                          @14006
204869: c8 08 06                 s1 = a1 + ra
204872: 7c 66                    s1 = u8 [s1]
204874: aa 36 28                 jump @14011 if s1 == t1
      :                          @14007
204877: 51 16 03 43              jump @14015 if s1 == 3
      :                          @14008
204881: 33 0a 02                 a3 = 0x2
204884: ab a6 d6 00              jump @14029 if s1 != a3
      :                          @14009
204888: d8 9b 06                 s1 = a4 <u a2
204891: c8 b2 0a                 a3 = t0 + a4
204894: da 67 0a                 a3 = a0 if s1 == 0
204897: 7c aa                    a3 = u8 [a3]
204899: 84 aa c0 00              a3 = a3 & 0xc0
204903: 52 2a 80 00 c3 00        jump @14029 if a3 != 128
      :                          @14010
204909: 95 4b 02                 a4 = t2 + 0x2
204912: 28 c2                    jump @14004
      :                          @14011
204914: d8 9b 0a                 a3 = a4 <u a2
204917: c8 b2 0c                 a5 = t0 + a4
204920: da a7 0c                 a5 = a0 if a3 == 0
204923: 7d c6                    s1 = i8 [a5]
204925: 51 20 f0 00 32           jump @14019 if ra == 240
      :                          @14012
204930: 52 20 f4 00 3a           jump @14021 if ra != 244
      :                          @14013
204935: 33 0a 8f                 a3 = 0xffffffffffffff8f
204938: af 6a 45                 jump @14022 if a3 >=s s1
      :                          @14014
204941: 28 9d 00                 jump @14029
      :                          @14015
204944: d8 9b 0a                 a3 = a4 <u a2
204947: c8 b2 0c                 a5 = t0 + a4
204950: da a7 0c                 a5 = a0 if a3 == 0
204953: 7d c3                    t1 = i8 [a5]
204955: 51 20 e0 00 70 ff        jump @14001 if ra == 224
      :                          @14016
204961: 52 20 ed 00 62           jump @14025 if ra != 237
      :                          @14017
204966: 33 0a 9f                 a3 = 0xffffffffffffff9f
204969: af 3a 6a ff              jump @14002 if a3 >=s t1
      :                          @14018
204973: 28 7d                    jump @14029
      :                          @14019
204975: 83 6a 70                 i32 a3 = s1 + 0x70
204978: 84 aa ff 00              a3 = a3 & 0xff
204982: 53 1a 30 19              jump @14022 if a3 <u 48
      :                          @14020
204986: 28 70                    jump @14029
      :                          @14021
204988: 83 55 0f                 i32 s0 = s0 + 0xf
204991: 84 5a ff 00              a3 = s0 & 0xff
204995: 88 aa 03                 a3 = a3 <u 0x3
204998: 89 6c c0                 a5 = s1 <s 0xffffffffffffffc0
205001: d2 ca 0a                 a3 = a3 & a5
205004: 51 0a 5e                 jump @14029 if a3 == 0
      :                          @14022
205007: 95 4b 02                 a4 = t2 + 0x2
205010: d8 9b 0a                 a3 = a4 <u a2
205013: c8 b2 0c                 a5 = t0 + a4
205016: da a7 0c                 a5 = a0 if a3 == 0
205019: 7c ca                    a3 = u8 [a5]
205021: 84 aa c0 00              a3 = a3 & 0xc0
205025: 52 2a 80 00 49           jump @14029 if a3 != 128
      :                          @14023
205030: 95 4b 03                 a4 = t2 + 0x3
205033: d8 9b 0a                 a3 = a4 <u a2
205036: c8 b2 0c                 a5 = t0 + a4
205039: da a7 0c                 a5 = a0 if a3 == 0
205042: 7c ca                    a3 = u8 [a5]
205044: 84 aa c0 00              a3 = a3 & 0xc0
205048: 52 2a 80 00 32           jump @14029 if a3 != 128
      :                          @14024
205053: 95 4b 04                 a4 = t2 + 0x4
205056: 28 32 ff                 jump @14004
      :                          @14025
205059: 83 5a 1f                 i32 a3 = s0 + 0x1f
205062: 84 aa ff 00              a3 = a3 & 0xff
205066: 55 1a 0c 0d              jump @14028 if a3 >=u 12
      :                          @14026
205070: 33 0a c0                 a3 = 0xffffffffffffffc0
205073: ad a3 02 ff              jump @14002 if t1 <s a3
      :                          @14027
205077: 28 15                    jump @14029
      :                          @14028
205079: 84 55 fe                 s0 = s0 & 0xfffffffffffffffe
205082: 95 55 12                 s0 = s0 + 0x12
205085: 88 5a 01                 a3 = s0 <u 0x1
205088: 89 3c c0                 a5 = t1 <s 0xffffffffffffffc0
205091: d2 ca 0a                 a3 = a3 & a5
205094: 52 0a ed fe              jump @14002 if a3 != 0
      :                          @14029
205098: c8 b2 07                 a0 = t0 + a4
205101: c9 b9 09                 a2 = a2 - a4
205104: 82 18 08                 a1 = u64 [sp + 0x8]
205107: 7b 87                    u64 [a1] = a0
205109: 7b 89 08                 u64 [a1 + 0x8] = a2
205112: c8 42 07                 a0 = t0 + t2
205115: c9 4b 0c                 a5 = a4 - t2
205118: 82 19 10                 a2 = u64 [sp + 0x10]
205121: 7b 92                    u64 [a2] = t0
205123: 7b 94 08                 u64 [a2 + 0x8] = t2
205126: 7b 97 10                 u64 [a2 + 0x10] = a0
205129: 7b 9c 18                 u64 [a2 + 0x18] = a5
205132: 82 10 28                 ra = u64 [sp + 0x28]
205135: 82 15 20                 s0 = u64 [sp + 0x20]
205138: 82 16 18                 s1 = u64 [sp + 0x18]
205141: 95 11 30                 sp = sp + 0x30
205144: 32 00                    ret
      :                          @14030
205146: 49 07                    u64 [a0 + 0] = 0
205148: 32 00                    ret
      :                          @14031 [@dyn 1603]
205150: 95 11 78 ff              sp = sp + 0xffffffffffffff78
205154: 7b 10 80 00              u64 [sp + 0x80] = ra
205158: 64 82                    t0 = a1
205160: 7c 77                    a0 = u8 [a0]
205162: 33 0a 81 00              a3 = 0x81
205166: 95 18 7f                 a1 = sp + 0x7f
205169: 33 03 37                 t1 = 0x37
205172: 01                       fallthrough
      :                          @14032
205173: 64 ab                    a4 = a3
205175: 84 7a 0f                 a3 = a0 & 0xf
205178: 97 77 38                 a0 = a0 << 0x38
205181: 98 77 3c                 a0 = a0 >> 0x3c
205184: 88 ac 0a                 a5 = a3 <u 0xa
205187: 33 09 30                 a2 = 0x30
205190: da c3 09                 a2 = t1 if a5 == 0
205193: be a9 09                 i32 a2 = a2 + a3
205196: 78 89                    u8 [a1] = a2
205198: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
205201: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
205204: 52 07 e1                 jump @14032 if a0 != 0
      :                          @14033
205207: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
205210: 56 27 80 00 2b           jump @14036 if a0 >u 128
      :                          @14034
205215: 9a ac 81 00              a5 = 0x81 - a3
205219: 64 1b                    a4 = sp
205221: c8 7b 0b                 a4 = a4 + a0
205224: 33 09 4a 30 01           a2 = 0x1304a
205229: 33 08 01                 a1 = 0x1
205232: 33 0a 02                 a3 = 0x2
205235: 64 27                    a0 = t0
205237: 50 20 88 0c 3a eb        ra = 3208, jump @13702
      :                          @14035 [@dyn 1604]
205243: 82 10 80 00              ra = u64 [sp + 0x80]
205247: 95 11 88 00              sp = sp + 0x88
205251: 32 00                    ret
      :                          @14036
205253: 00                       trap
      :                          @14037 [@dyn 1605]
205254: 95 11 78 ff              sp = sp + 0xffffffffffffff78
205258: 7b 10 80 00              u64 [sp + 0x80] = ra
205262: 64 82                    t0 = a1
205264: 81 7a                    a3 = i32 [a0]
205266: 33 08 81 00              a1 = 0x81
205270: 95 17 7f                 a0 = sp + 0x7f
205273: 33 03 57                 t1 = 0x57
205276: 01                       fallthrough
      :                          @14038
205277: 64 8b                    a4 = a1
205279: 8b ac 04                 i32 a5 = a3 >> 0x4
205282: 84 aa 0f                 a3 = a3 & 0xf
205285: 88 a8 0a                 a1 = a3 <u 0xa
205288: 33 09 30                 a2 = 0x30
205291: da 83 09                 a2 = t1 if a1 == 0
205294: be a9 09                 i32 a2 = a2 + a3
205297: 78 79                    u8 [a0] = a2
205299: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
205302: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
205305: 64 ca                    a3 = a5
205307: 52 0c e2                 jump @14038 if a5 != 0
      :                          @14039
205310: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
205313: 56 27 80 00 2b           jump @14042 if a0 >u 128
      :                          @14040
205318: 9a 8c 81 00              a5 = 0x81 - a1
205322: 64 1b                    a4 = sp
205324: c8 7b 0b                 a4 = a4 + a0
205327: 33 09 4a 30 01           a2 = 0x1304a
205332: 33 08 01                 a1 = 0x1
205335: 33 0a 02                 a3 = 0x2
205338: 64 27                    a0 = t0
205340: 50 20 8c 0c d3 ea        ra = 3212, jump @13702
      :                          @14041 [@dyn 1606]
205346: 82 10 80 00              ra = u64 [sp + 0x80]
205350: 95 11 88 00              sp = sp + 0x88
205354: 32 00                    ret
      :                          @14042
205356: 00                       trap
      :                          @14043 [@dyn 1607]
205357: 95 11 78 ff              sp = sp + 0xffffffffffffff78
205361: 7b 10 80 00              u64 [sp + 0x80] = ra
205365: 81 79                    a2 = i32 [a0]
205367: 64 82                    t0 = a1
205369: 33 08 81 00              a1 = 0x81
205373: 95 17 7f                 a0 = sp + 0x7f
205376: 01                       fallthrough
      :                          @14044
205377: 64 8a                    a3 = a1
205379: 8b 9b 01                 i32 a4 = a2 >> 0x1
205382: 84 99 01                 a2 = a2 & 0x1
205385: 86 98 30                 a1 = a2 | 0x30
205388: 78 78                    u8 [a0] = a1
205390: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
205393: 95 a8 ff                 a1 = a3 + 0xffffffffffffffff
205396: 64 b9                    a2 = a4
205398: 52 0b eb                 jump @14044 if a4 != 0
      :                          @14045
205401: 95 a7 fe                 a0 = a3 + 0xfffffffffffffffe
205404: 56 27 80 00 2b           jump @14048 if a0 >u 128
      :                          @14046
205409: 9a 8c 81 00              a5 = 0x81 - a1
205413: 64 1b                    a4 = sp
205415: c8 7b 0b                 a4 = a4 + a0
205418: 33 09 4c 30 01           a2 = 0x1304c
205423: 33 08 01                 a1 = 0x1
205426: 33 0a 02                 a3 = 0x2
205429: 64 27                    a0 = t0
205431: 50 20 90 0c 78 ea        ra = 3216, jump @13702
      :                          @14047 [@dyn 1608]
205437: 82 10 80 00              ra = u64 [sp + 0x80]
205441: 95 11 88 00              sp = sp + 0x88
205445: 32 00                    ret
      :                          @14048
205447: 00                       trap
      :                          @14049 [@dyn 1609]
205448: 81 77                    a0 = i32 [a0]
205450: 89 7a                    a3 = a0 <s 0
205452: 85 a9 01                 a2 = a3 ^ 0x1
205455: 97 7b 20                 a4 = a0 << 0x20
205458: 98 bb 20                 a4 = a4 >> 0x20
205461: 9a 77                    a0 = -a0
205463: da ab 07                 a0 = a4 if a3 == 0
205466: 64 8a                    a3 = a1
205468: 64 98                    a1 = a2
205470: 64 a9                    a2 = a3
205472: 28 21 e9                 jump @13692
      :                          @14050 [@dyn 1610]
205475: 82 79                    a2 = u64 [a0]
205477: 9a 97                    a0 = -a2
205479: e3 79 07                 a0 = maxs(a2, a0)
205482: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
205485: 98 99 3f                 a2 = a2 >> 0x3f
205488: 64 8a                    a3 = a1
205490: 64 98                    a1 = a2
205492: 64 a9                    a2 = a3
205494: 28 0b e9                 jump @13692
      :                          @14051
205497: 51 08 9b 00              jump @14072 if a1 == 0
      :                          @14052
205501: 64 79                    a2 = a0
205503: 7c 77                    a0 = u8 [a0]
205505: 51 07 91 00              jump @14071 if a0 == 0
      :                          @14053
205509: 51 27 ff 00 90 00        jump @14073 if a0 == 255
      :                          @14054
205515: 6c 7a                    a3 = sext.b a0
205517: 57 0a 09                 jump @14056 if a3 <s 0
      :                          @14055
205520: 33 0a                    a3 = 0
205522: 33 08                    a1 = 0
205524: 28 73                    jump @14070
      :                          @14056
205526: 55 27 c0 00 0d           jump @14058 if a0 >=u 192
      :                          @14057
205531: 33 0a 01                 a3 = 0x1
205534: 33 0b 80                 a4 = 0xffffffffffffff80
205537: 28 4a                    jump @14067
      :                          @14058
205539: 55 27 e0 00 0e           jump @14060 if a0 >=u 224
      :                          @14059
205544: 33 0a 02                 a3 = 0x2
205547: 33 0b 40 ff              a4 = 0xffffffffffffff40
205551: 28 3c                    jump @14067
      :                          @14060
205553: 55 27 f0 00 0e           jump @14062 if a0 >=u 240
      :                          @14061
205558: 33 0a 03                 a3 = 0x3
205561: 33 0b 20 ff              a4 = 0xffffffffffffff20
205565: 28 2e                    jump @14067
      :                          @14062
205567: 55 27 f8 00 0e           jump @14064 if a0 >=u 248
      :                          @14063
205572: 33 0a 04                 a3 = 0x4
205575: 33 0b 10 ff              a4 = 0xffffffffffffff10
205579: 28 20                    jump @14067
      :                          @14064
205581: 55 27 fc 00 0e           jump @14066 if a0 >=u 252
      :                          @14065
205586: 33 0a 05                 a3 = 0x5
205589: 33 0b 08 ff              a4 = 0xffffffffffffff08
205593: 28 12                    jump @14067
      :                          @14066
205595: 88 7a fe 00              a3 = a0 <u 0xfe
205599: 33 0b 04 ff              a4 = 0xffffffffffffff04
205603: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
205607: 85 aa 07                 a3 = a3 ^ 0x7
205610: 01                       fallthrough
      :                          @14067
205611: ae 8a 2b                 jump @14074 if a3 >=u a1
      :                          @14068
205614: 33 08                    a1 = 0
205616: c8 b7 07                 a0 = a0 + a4
205619: 64 ab                    a4 = a3
205621: 01                       fallthrough
      :                          @14069
205622: c8 b9 0c                 a5 = a2 + a4
205625: 7c cc                    a5 = u8 [a5]
205627: 97 88 08                 a1 = a1 << 0x8
205630: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
205633: d4 c8 08                 a1 = a1 | a5
205636: 52 0b f2                 jump @14069 if a4 != 0
      :                          @14070
205639: 8a a9 03                 i32 a2 = a3 << 0x3
205642: cf 97 07                 a0 = a0 << a2
205645: c8 87 07                 a0 = a0 + a1
205648: 32 00                    ret
      :                          @14071
205650: 32 00                    ret
      :                          @14072
205652: 00                       trap
      :                          @14073
205653: 00                       trap
      :                          @14074
205654: 00                       trap
      :                          @14075 [@dyn 1611]
205655: 95 11 d0                 sp = sp + 0xffffffffffffffd0
205658: 7b 10 28                 u64 [sp + 0x28] = ra
205661: 7b 15 20                 u64 [sp + 0x20] = s0
205664: 7b 16 18                 u64 [sp + 0x18] = s1
205667: 64 86                    s1 = a1
205669: 82 88 28                 a1 = u64 [a1 + 0x28]
205672: 82 6a 20                 a3 = u64 [s1 + 0x20]
205675: 82 8b 18                 a4 = u64 [a1 + 0x18]
205678: 64 75                    s0 = a0
205680: 33 08 08 30 01           a1 = 0x13008
205685: 33 09 01                 a2 = 0x1
205688: 64 a7                    a0 = a3
205690: b4 b0 02 98 0c           ra = 3224, jump [a4]
      :                          @14076 [@dyn 1612]
205695: 7b 16                    u64 [sp] = s1
205697: 78 17 08                 u8 [sp + 0x8] = a0
205700: 46 11 09                 u8 [sp + 9] = 0
205703: 7b 15 10                 u64 [sp + 0x10] = s0
205706: 33 09 9e 0c              a2 = 0xc9e
205710: 64 17                    a0 = sp
205712: 95 18 10                 a1 = sp + 0x10
205715: 50 20 9a 0c 7f f5        ra = 3226, jump @13940
      :                          @14077 [@dyn 1613]
205721: 33 07 01                 a0 = 0x1
205724: 7c 18 08                 a1 = u8 [sp + 0x8]
205727: 52 08 1b                 jump @14079 if a1 != 0
      :                          @14078
205730: 82 17                    a0 = u64 [sp]
205732: 82 78 28                 a1 = u64 [a0 + 0x28]
205735: 82 77 20                 a0 = u64 [a0 + 0x20]
205738: 82 8a 18                 a3 = u64 [a1 + 0x18]
205741: 33 08 49 30 01           a1 = 0x13049
205746: 33 09 01                 a2 = 0x1
205749: b4 a0 02 9c 0c           ra = 3228, jump [a3]
      :                          @14079 [@dyn 1614]
205754: 82 10 28                 ra = u64 [sp + 0x28]
205757: 82 15 20                 s0 = u64 [sp + 0x20]
205760: 82 16 18                 s1 = u64 [sp + 0x18]
205763: 95 11 30                 sp = sp + 0x30
205766: 32 00                    ret
      :                          @14080 [@dyn 1615]
205768: 95 11 78 ff              sp = sp + 0xffffffffffffff78
205772: 7b 10 80 00              u64 [sp + 0x80] = ra
205776: 64 82                    t0 = a1
205778: 80 88 34                 a1 = u32 [a1 + 0x34]
205781: 82 77                    a0 = u64 [a0]
205783: 84 89 10                 a2 = a1 & 0x10
205786: 52 09 1b                 jump @14083 if a2 != 0
      :                          @14081
205789: 84 88 20                 a1 = a1 & 0x20
205792: 52 08 46                 jump @14086 if a1 != 0
      :                          @14082
205795: 7c 77                    a0 = u8 [a0]
205797: 33 08 01                 a1 = 0x1
205800: 64 29                    a2 = t0
205802: 82 10 80 00              ra = u64 [sp + 0x80]
205806: 95 11 88 00              sp = sp + 0x88
205810: 28 cf e7                 jump @13692
      :                          @14083
205813: 7c 77                    a0 = u8 [a0]
205815: 33 0a 81 00              a3 = 0x81
205819: 95 18 7f                 a1 = sp + 0x7f
205822: 33 03 57                 t1 = 0x57
205825: 01                       fallthrough
      :                          @14084
205826: 64 ab                    a4 = a3
205828: 84 7a 0f                 a3 = a0 & 0xf
205831: 97 77 38                 a0 = a0 << 0x38
205834: 98 77 3c                 a0 = a0 >> 0x3c
205837: 88 ac 0a                 a5 = a3 <u 0xa
205840: 33 09 30                 a2 = 0x30
205843: da c3 09                 a2 = t1 if a5 == 0
205846: be a9 09                 i32 a2 = a2 + a3
205849: 78 89                    u8 [a1] = a2
205851: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
205854: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
205857: 52 07 e1                 jump @14084 if a0 != 0
      :                          @14085
205860: 28 31                    jump @14088
      :                          @14086
205862: 7c 77                    a0 = u8 [a0]
205864: 33 0a 81 00              a3 = 0x81
205868: 95 18 7f                 a1 = sp + 0x7f
205871: 33 03 37                 t1 = 0x37
205874: 01                       fallthrough
      :                          @14087
205875: 64 ab                    a4 = a3
205877: 84 7a 0f                 a3 = a0 & 0xf
205880: 97 77 38                 a0 = a0 << 0x38
205883: 98 77 3c                 a0 = a0 >> 0x3c
205886: 88 ac 0a                 a5 = a3 <u 0xa
205889: 33 09 30                 a2 = 0x30
205892: da c3 09                 a2 = t1 if a5 == 0
205895: be a9 09                 i32 a2 = a2 + a3
205898: 78 89                    u8 [a1] = a2
205900: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
205903: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
205906: 52 07 e1                 jump @14087 if a0 != 0
      :                          @14088
205909: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
205912: 56 27 80 00 2b           jump @14091 if a0 >u 128
      :                          @14089
205917: 9a ac 81 00              a5 = 0x81 - a3
205921: 64 1b                    a4 = sp
205923: c8 7b 0b                 a4 = a4 + a0
205926: 33 09 4a 30 01           a2 = 0x1304a
205931: 33 08 01                 a1 = 0x1
205934: 33 0a 02                 a3 = 0x2
205937: 64 27                    a0 = t0
205939: 50 20 a0 0c 7c e8        ra = 3232, jump @13702
      :                          @14090 [@dyn 1616]
205945: 82 10 80 00              ra = u64 [sp + 0x80]
205949: 95 11 88 00              sp = sp + 0x88
205953: 32 00                    ret
      :                          @14091
205955: 00                       trap
