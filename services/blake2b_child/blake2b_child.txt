// RO data = 572/572 bytes
// RW data = 88/1048688 bytes
// Stack size = 1048576 bytes
// RO data = [176, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 110, 112, 117, 116, 32, 100, 97, 116, 97, 58, 32, 0, 0, 0, 0, 16, 0, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 70, 105, 110, 97, 108, 32, 104, 97, 115, 104, 32, 114, 101, 115, 117, 108, 116, 58, 32, 0, 0, 0, 0, 0, 48, 0, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 72, 97, 115, 104, 32, 0, 0, 0, 88, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 176, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 58, 32, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 31, 108, 62, 43, 140, 104, 5, 155, 209, 130, 230, 173, 127, 82, 14, 81, 40, 201, 189, 242, 103, 230, 9, 106, 59, 167, 202, 132, 133, 174, 103, 187, 43, 248, 148, 254, 114, 243, 110, 60, 241, 54, 29, 95, 58, 245, 79, 165, 107, 189, 65, 251, 171, 217, 131, 31, 121, 33, 126, 19, 25, 205, 224, 91, 8, 201, 188, 243, 103, 230, 9, 106, 148, 66, 190, 4, 84, 38, 124, 224]
// Instructions = 2983
// Code size = 9357 bytes

      :                          @0
     0: 28 52 04                 jump @71
      :                          @1 [@dyn 1]
     3: 95 11 78 ff              sp = sp + 0xffffffffffffff78
     7: 7b 10 80 00              u64 [sp + 0x80] = ra
    11: 82 77                    a0 = u64 [a0]
    13: 64 82                    t0 = a1
    15: 7c 77                    a0 = u8 [a0]
    17: 33 0a 81 00              a3 = 0x81
    21: 95 18 7f                 a1 = sp + 0x7f
    24: 33 03 57                 t1 = 0x57
    27: 01                       fallthrough
      :                          @2
    28: 64 ab                    a4 = a3
    30: 84 7a 0f                 a3 = a0 & 0xf
    33: 97 77 38                 a0 = a0 << 0x38
    36: 98 77 3c                 a0 = a0 >> 0x3c
    39: 88 ac 0a                 a5 = a3 <u 0xa
    42: 33 09 30                 a2 = 0x30
    45: da c3 09                 a2 = t1 if a5 == 0
    48: be a9 09                 i32 a2 = a2 + a3
    51: 78 89                    u8 [a1] = a2
    53: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
    56: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
    59: 52 07 e1                 jump @2 if a0 != 0
      :                          @3
    62: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
    65: 56 27 80 00 2a           jump @6 if a0 >u 128
      :                          @4
    70: 9a ac 81 00              a5 = 0x81 - a3
    74: 64 1b                    a4 = sp
    76: c8 7b 0b                 a4 = a4 + a0
    79: 33 09 b2 00 01           a2 = 0x100b2
    84: 33 08 01                 a1 = 0x1
    87: 33 0a 02                 a3 = 0x2
    90: 64 27                    a0 = t0
    92: 50 10 04 6a 0f           ra = 4, jump @276
      :                          @5 [@dyn 2]
    97: 82 10 80 00              ra = u64 [sp + 0x80]
   101: 95 11 88 00              sp = sp + 0x88
   105: 32 00                    ret
      :                          @6
   107: 00                       trap
      :                          @7
   108: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   111: 7b 10 30                 u64 [sp + 0x30] = ra
   114: 7b 15 28                 u64 [sp + 0x28] = s0
   117: 7b 16 20                 u64 [sp + 0x20] = s1
   120: 64 95                    s0 = a2
   122: 64 72                    t0 = a0
   124: 51 08 79                 jump @17 if a1 == 0
      :                          @8
   127: 82 a7 08                 a0 = u64 [a3 + 0x8]
   130: 51 07 7c                 jump @18 if a0 == 0
      :                          @9
   133: 82 a9 10                 a2 = u64 [a3 + 0x10]
   136: 51 09 aa 00              jump @25 if a2 == 0
      :                          @10
   140: 82 a8                    a1 = u64 [a3]
   142: 33 06 60 00 03           s1 = 0x30060
   147: 33 03 00 00 10           t1 = 0x100000
   152: c8 36 06                 s1 = s1 + t1
   155: 01                       fallthrough
      :                          @11
   156: 82 6a                    a3 = u64 [s1]
   158: c8 5a 07                 a0 = a3 + s0
   161: ac a7 cf 00              jump @31 if a0 <u a3
      :                          @12
   165: 95 7b 01                 a4 = a0 + 0x1
   168: 88 bc 01                 a5 = a4 <u 0x1
   171: d8 b3 0b                 a4 = t1 <u a4
   174: d4 cb 0b                 a4 = a4 | a5
   177: 52 0b bf 00              jump @31 if a4 != 0
      :                          @13
   181: 82 6b                    a4 = u64 [s1]
   183: ab ab e5                 jump @11 if a4 != a3
      :                          @14
   186: 7b 67                    u64 [s1] = a0
   188: 33 0c                    a5 = 0
   190: 7b 12 18                 u64 [sp + 0x18] = t0
   193: 33 0a 60 00 03           a3 = 0x30060
   198: 33 0b 00 00 10           a4 = 0x100000
   203: 7b 1a                    u64 [sp] = a3
   205: c8 ba 0a                 a3 = a3 + a4
   208: c9 7a 07                 a0 = a3 - a0
   211: 7b 17 10                 u64 [sp + 0x10] = a0
   214: 7b 18 08                 u64 [sp + 0x8] = a1
   217: 64 96                    s1 = a2
   219: 50 10 06 ac 0c           ra = 6, jump @232
      :                          @15 [@dyn 3]
   224: 54 36 00 00 10 98 00     jump @32 if s1 <=u 1048576
      :                          @16
   231: 82 12 18                 t0 = u64 [sp + 0x18]
   234: 82 18 10                 a1 = u64 [sp + 0x10]
   237: 33 07                    a0 = 0
   239: 7b 28 08                 u64 [t0 + 0x8] = a1
   242: 28 b5 00                 jump @38
      :                          @17
   245: 49 12 08                 u64 [t0 + 8] = 0
   248: 33 07 01                 a0 = 0x1
   251: 28 ac 00                 jump @38
      :                          @18
   254: 33 09 60 00 03           a2 = 0x30060
   259: 33 07 00 00 10           a0 = 0x100000
   264: c8 79 09                 a2 = a2 + a0
   267: 01                       fallthrough
      :                          @19
   268: 82 9a                    a3 = u64 [a2]
   270: c8 5a 08                 a1 = a3 + s0
   273: ac a8 5f                 jump @31 if a1 <u a3
      :                          @20
   276: 95 8b 01                 a4 = a1 + 0x1
   279: 88 bc 01                 a5 = a4 <u 0x1
   282: d8 b7 0b                 a4 = a0 <u a4
   285: d4 cb 0b                 a4 = a4 | a5
   288: 52 0b 50                 jump @31 if a4 != 0
      :                          @21
   291: 82 9b                    a4 = u64 [a2]
   293: ab ab e7                 jump @19 if a4 != a3
      :                          @22
   296: 7b 98                    u64 [a2] = a1
   298: 33 0c                    a5 = 0
   300: 01                       fallthrough
      :                          @23
   301: ab ab df                 jump @19 if a4 != a3
      :                          @24
   304: 28 31                    jump @30
      :                          @25
   306: 33 09 60 00 03           a2 = 0x30060
   311: 33 07 00 00 10           a0 = 0x100000
   316: c8 79 09                 a2 = a2 + a0
   319: 01                       fallthrough
      :                          @26
   320: 82 9a                    a3 = u64 [a2]
   322: c8 5a 08                 a1 = a3 + s0
   325: ac a8 2b                 jump @31 if a1 <u a3
      :                          @27
   328: 95 8b 01                 a4 = a1 + 0x1
   331: 88 bc 01                 a5 = a4 <u 0x1
   334: d8 b7 0b                 a4 = a0 <u a4
   337: d4 cb 0b                 a4 = a4 | a5
   340: 52 0b 1c                 jump @31 if a4 != 0
      :                          @28
   343: 82 9b                    a4 = u64 [a2]
   345: ab ab e7                 jump @26 if a4 != a3
      :                          @29
   348: 7b 98                    u64 [a2] = a1
   350: 33 0c                    a5 = 0
   352: 01                       fallthrough
      :                          @30
   353: 33 07 60 00 13           a0 = 0x130060
   358: c9 87 08                 a1 = a0 - a1
   361: 33 07                    a0 = 0
   363: 7b 28 08                 u64 [t0 + 0x8] = a1
   366: 28 39                    jump @38
      :                          @31
   368: 33 07 01                 a0 = 0x1
   371: 7b 27 08                 u64 [t0 + 0x8] = a0
   374: 28 31                    jump @38
      :                          @32
   376: 64 6c                    a5 = s1
   378: 82 17                    a0 = u64 [sp]
   380: 95 77 00 00 10           a0 = a0 + 0x100000
   385: 82 12 18                 t0 = u64 [sp + 0x18]
   388: 82 16 08                 s1 = u64 [sp + 0x8]
   391: 01                       fallthrough
      :                          @33
   392: 82 78                    a1 = u64 [a0]
   394: c9 87 09                 a2 = a0 - a1
   397: ab 69 11                 jump @37 if a2 != s1
      :                          @34
   400: c9 c8 09                 a2 = a1 - a5
   403: 01                       fallthrough
      :                          @35
   404: 82 7a                    a3 = u64 [a0]
   406: ab 8a f2                 jump @33 if a3 != a1
      :                          @36
   409: 7b 79                    u64 [a0] = a2
   411: 33 0b                    a4 = 0
   413: 01                       fallthrough
      :                          @37
   414: 82 18 10                 a1 = u64 [sp + 0x10]
   417: 33 07                    a0 = 0
   419: 7b 28 08                 u64 [t0 + 0x8] = a1
   422: 01                       fallthrough
      :                          @38
   423: 7b 25 10                 u64 [t0 + 0x10] = s0
   426: 7b 27                    u64 [t0] = a0
   428: 82 10 30                 ra = u64 [sp + 0x30]
   431: 82 15 28                 s0 = u64 [sp + 0x28]
   434: 82 16 20                 s1 = u64 [sp + 0x20]
   437: 95 11 38                 sp = sp + 0x38
   440: 32 00                    ret
      :                          @39
   442: 95 11 b8                 sp = sp + 0xffffffffffffffb8
   445: 7b 10 40                 u64 [sp + 0x40] = ra
   448: 7b 15 38                 u64 [sp + 0x38] = s0
   451: 7b 16 30                 u64 [sp + 0x30] = s1
   454: c8 89 09                 a2 = a2 + a1
   457: ac 89 53                 jump @47 if a2 <u a1
      :                          @40
   460: 64 75                    s0 = a0
   462: 82 77                    a0 = u64 [a0]
   464: 97 78 01                 a1 = a0 << 0x1
   467: 33 0a 08                 a3 = 0x8
   470: e4 a9 09                 a2 = maxu(a2, a3)
   473: e4 98 06                 s1 = maxu(a1, a2)
   476: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
   479: 98 88 3f                 a1 = a1 >> 0x3f
   482: 51 07 12                 jump @42 if a0 == 0
      :                          @41
   485: 82 59 08                 a2 = u64 [s0 + 0x8]
   488: 7b 19 18                 u64 [sp + 0x18] = a2
   491: 49 11 20 01              u64 [sp + 32] = 0x1
   495: 7b 17 28                 u64 [sp + 0x28] = a0
   498: 28 06                    jump @43
      :                          @42
   500: 49 11 20                 u64 [sp + 32] = 0
   503: 01                       fallthrough
      :                          @43
   504: 64 17                    a0 = sp
   506: 95 1a 18                 a3 = sp + 0x18
   509: 64 69                    a2 = s1
   511: 50 10 08 6d fe           ra = 8, jump @7
      :                          @44 [@dyn 4]
   516: 82 18                    a1 = u64 [sp]
   518: 82 17 08                 a0 = u64 [sp + 0x8]
   521: 51 08 14                 jump @48 if a1 == 0
      :                          @45
   524: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
   534: aa 87 0d                 jump @49 if a0 == a1
      :                          @46
   537: 52 07 18                 jump @50 if a0 != 0
      :                          @47
   540: 00                       trap
      :                          @48
   541: 7b 57 08                 u64 [s0 + 0x8] = a0
   544: 7b 56                    u64 [s0] = s1
   546: 01                       fallthrough
      :                          @49
   547: 82 10 40                 ra = u64 [sp + 0x40]
   550: 82 15 38                 s0 = u64 [sp + 0x38]
   553: 82 16 30                 s1 = u64 [sp + 0x30]
   556: 95 11 48                 sp = sp + 0x48
   559: 32 00                    ret
      :                          @50
   561: 00                       trap
      :                          @51 [@dyn 5]
   562: 82 7a 08                 a3 = u64 [a0 + 0x8]
   565: 82 79 10                 a2 = u64 [a0 + 0x10]
   568: 64 87                    a0 = a1
   570: 64 a8                    a1 = a3
   572: 28 0b 10                 jump @330
      :                          @52
   575: 95 11 c0 fe              sp = sp + 0xfffffffffffffec0
   579: 7b 10 38 01              u64 [sp + 0x138] = ra
   583: 7b 15 30 01              u64 [sp + 0x130] = s0
   587: 7b 16 28 01              u64 [sp + 0x128] = s1
   591: 7b 19 50                 u64 [sp + 0x50] = a2
   594: 64 76                    s1 = a0
   596: 7b 18 58                 u64 [sp + 0x58] = a1
   599: 7b 18 78                 u64 [sp + 0x78] = a1
   602: 95 17 78                 a0 = sp + 0x78
   605: 7b 17 90 00              u64 [sp + 0x90] = a0
   609: 33 07 02                 a0 = 0x2
   612: 7b 17 30                 u64 [sp + 0x30] = a0
   615: 7b 17 98 00              u64 [sp + 0x98] = a0
   619: 49 21 f0 00 02           u64 [sp + 240] = 0x2
   624: 49 21 00 01              u64 [sp + 256] = 0
   628: 49 21 08 01 02           u64 [sp + 264] = 0x2
   633: 49 21 10 01              u64 [sp + 272] = 0
   637: 33 05 01                 s0 = 0x1
   640: 14 07 20 00 00 00 08 00 00 00 a0 = 0x800000020
   650: 7b 17 28                 u64 [sp + 0x28] = a0
   653: 7b 17 18 01              u64 [sp + 0x118] = a0
   657: 46 21 20 01 03           u8 [sp + 288] = 0x3
   662: 33 07 00 00 01           a0 = 0x10000
   667: 7b 17 20                 u64 [sp + 0x20] = a0
   670: 7b 17 b0 00              u64 [sp + 0xb0] = a0
   674: 7b 15 b8 00              u64 [sp + 0xb8] = s0
   678: 95 17 f0 00              a0 = sp + 0xf0
   682: 7b 17 d0 00              u64 [sp + 0xd0] = a0
   686: 7b 15 d8 00              u64 [sp + 0xd8] = s0
   690: 95 17 90 00              a0 = sp + 0x90
   694: 7b 17 c0 00              u64 [sp + 0xc0] = a0
   698: 7b 15 c8 00              u64 [sp + 0xc8] = s0
   702: 95 17 60                 a0 = sp + 0x60
   705: 95 18 b0 00              a1 = sp + 0xb0
   709: 50 10 0c 5e 08           ra = 12, jump @182
      :                          @53 [@dyn 6]
   714: 82 17 60                 a0 = u64 [sp + 0x60]
   717: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
   727: ab 87 0e                 jump @55 if a0 != a1
      :                          @54
   730: 49 06                    u64 [s1 + 0] = 0
   732: 7b 65 08                 u64 [s1 + 0x8] = s0
   735: 49 16 10                 u64 [s1 + 16] = 0
   738: 28 5e 01                 jump @70
      :                          @55
   741: 7b 16                    u64 [sp] = s1
   743: 33 07                    a0 = 0
   745: 82 1b 70                 a4 = u64 [sp + 0x70]
   748: 82 18 68                 a1 = u64 [sp + 0x68]
   751: 82 19 60                 a2 = u64 [sp + 0x60]
   754: 82 1a 58                 a3 = u64 [sp + 0x58]
   757: 95 aa 01                 a3 = a3 + 0x1
   760: 7b 1a 18                 u64 [sp + 0x18] = a3
   763: 7b 1b 58                 u64 [sp + 0x58] = a4
   766: 7b 1b 88 00              u64 [sp + 0x88] = a4
   770: 7b 18 80 00              u64 [sp + 0x80] = a1
   774: 7b 19 78                 u64 [sp + 0x78] = a2
   777: 82 18 50                 a1 = u64 [sp + 0x50]
   780: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
   783: 7b 18 10                 u64 [sp + 0x10] = a1
   786: 33 06 60 00 03           s1 = 0x30060
   791: 95 66 00 00 10           s1 = s1 + 0x100000
   796: 49 11 08 ff ff ef        u64 [sp + 8] = 0xffffffffffefffff
   802: 28 0f                    jump @57
      :                          @56
   804: 82 1a 48                 a3 = u64 [sp + 0x48]
   807: 95 a7 01                 a0 = a3 + 0x1
   810: 82 19 10                 a2 = u64 [sp + 0x10]
   813: aa 9a fd 00              jump @69 if a3 == a2
      :                          @57
   817: 64 79                    a2 = a0
   819: 82 17 18                 a0 = u64 [sp + 0x18]
   822: 7b 19 48                 u64 [sp + 0x48] = a2
   825: c8 97 07                 a0 = a0 + a2
   828: 7b 17 a8 00              u64 [sp + 0xa8] = a0
   832: 95 17 a8 00              a0 = sp + 0xa8
   836: 7b 17 e0 00              u64 [sp + 0xe0] = a0
   840: 82 17 30                 a0 = u64 [sp + 0x30]
   843: 7b 17 e8 00              u64 [sp + 0xe8] = a0
   847: 49 21 f0 00 02           u64 [sp + 240] = 0x2
   852: 49 21 00 01              u64 [sp + 256] = 0
   856: 49 21 08 01 02           u64 [sp + 264] = 0x2
   861: 49 21 10 01              u64 [sp + 272] = 0
   865: 82 17 28                 a0 = u64 [sp + 0x28]
   868: 7b 17 18 01              u64 [sp + 0x118] = a0
   872: 46 21 20 01 03           u8 [sp + 288] = 0x3
   877: 82 17 20                 a0 = u64 [sp + 0x20]
   880: 7b 17 b0 00              u64 [sp + 0xb0] = a0
   884: 49 21 b8 00 01           u64 [sp + 184] = 0x1
   889: 95 17 f0 00              a0 = sp + 0xf0
   893: 7b 17 d0 00              u64 [sp + 0xd0] = a0
   897: 49 21 d8 00 01           u64 [sp + 216] = 0x1
   902: 95 17 e0 00              a0 = sp + 0xe0
   906: 7b 17 c0 00              u64 [sp + 0xc0] = a0
   910: 49 21 c8 00 01           u64 [sp + 200] = 0x1
   915: 95 17 90 00              a0 = sp + 0x90
   919: 95 18 b0 00              a1 = sp + 0xb0
   923: 50 10 0e 88 07           ra = 14, jump @182
      :                          @58 [@dyn 7]
   928: 82 17 90 00              a0 = u64 [sp + 0x90]
   932: 7b 17 40                 u64 [sp + 0x40] = a0
   935: 82 17 78                 a0 = u64 [sp + 0x78]
   938: 82 19 a0 00              a2 = u64 [sp + 0xa0]
   942: 82 1a 98 00              a3 = u64 [sp + 0x98]
   946: 82 18 58                 a1 = u64 [sp + 0x58]
   949: c9 87 07                 a0 = a0 - a1
   952: 7b 1a 50                 u64 [sp + 0x50] = a3
   955: ac 97 54                 jump @67 if a0 <u a2
      :                          @59
   958: 82 17 80 00              a0 = u64 [sp + 0x80]
   962: 82 15 58                 s0 = u64 [sp + 0x58]
   965: c8 57 07                 a0 = a0 + s0
   968: 64 a8                    a1 = a3
   970: 7b 19 38                 u64 [sp + 0x38] = a2
   973: 50 10 10 ba 09           ra = 16, jump @232
      :                          @60 [@dyn 8]
   978: 82 1c 50                 a5 = u64 [sp + 0x50]
   981: 82 17 38                 a0 = u64 [sp + 0x38]
   984: c8 75 05                 s0 = s0 + a0
   987: 82 17 08                 a0 = u64 [sp + 0x8]
   990: 82 1b 40                 a4 = u64 [sp + 0x40]
   993: c8 b7 07                 a0 = a0 + a4
   996: 7b 15 58                 u64 [sp + 0x58] = s0
   999: 7b 15 88 00              u64 [sp + 0x88] = s0
  1003: 53 37 00 00 f0 39 ff     jump @56 if a0 <u 4293918720
      :                          @61
  1010: 82 67                    a0 = u64 [s1]
  1012: c9 76 08                 a1 = s1 - a0
  1015: ab c8 2d ff              jump @56 if a1 != a5
      :                          @62
  1019: c9 b7 08                 a1 = a0 - a4
  1022: 01                       fallthrough
      :                          @63
  1023: 82 69                    a2 = u64 [s1]
  1025: ab 79 f1                 jump @61 if a2 != a0
      :                          @64
  1028: 7b 68                    u64 [s1] = a1
  1030: 33 0a                    a3 = 0
  1032: 01                       fallthrough
      :                          @65
  1033: ab 79 e9                 jump @61 if a2 != a0
      :                          @66
  1036: 28 18 ff                 jump @56
      :                          @67
  1039: 95 17 78                 a0 = sp + 0x78
  1042: 82 18 58                 a1 = u64 [sp + 0x58]
  1045: 64 95                    s0 = a2
  1047: 50 10 12 a3 fd           ra = 18, jump @39
      :                          @68 [@dyn 9]
  1052: 64 59                    a2 = s0
  1054: 82 1a 50                 a3 = u64 [sp + 0x50]
  1057: 82 17 88 00              a0 = u64 [sp + 0x88]
  1061: 7b 17 58                 u64 [sp + 0x58] = a0
  1064: 28 96                    jump @59
      :                          @69
  1066: 82 17 88 00              a0 = u64 [sp + 0x88]
  1070: 82 18 80 00              a1 = u64 [sp + 0x80]
  1074: 82 19 78                 a2 = u64 [sp + 0x78]
  1077: 82 1a                    a3 = u64 [sp]
  1079: 7b a7 10                 u64 [a3 + 0x10] = a0
  1082: 7b a8 08                 u64 [a3 + 0x8] = a1
  1085: 7b a9                    u64 [a3] = a2
  1087: 01                       fallthrough
      :                          @70
  1088: 82 10 38 01              ra = u64 [sp + 0x138]
  1092: 82 15 30 01              s0 = u64 [sp + 0x130]
  1096: 82 16 28 01              s1 = u64 [sp + 0x128]
  1100: 95 11 40 01              sp = sp + 0x140
  1104: 32 00                    ret
      :                          @71 [export #0: 'main']
  1106: 95 11 50 fe              sp = sp + 0xfffffffffffffe50
  1110: 7b 10 a8 01              u64 [sp + 0x1a8] = ra
  1114: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  1118: 7b 16 98 01              u64 [sp + 0x198] = s1
  1122: 49 11 20 ff ff ef        u64 [sp + 32] = 0xffffffffffefffff
  1128: 46 21 d4 00 de 00        u8 [sp + 212] = 0xde
  1134: 46 21 d5 00 ad 00        u8 [sp + 213] = 0xad
  1140: 46 21 d6 00 be 00        u8 [sp + 214] = 0xbe
  1146: 46 21 d7 00 ef 00        u8 [sp + 215] = 0xef
  1152: 95 17 d8 00              a0 = sp + 0xd8
  1156: 95 18 d4 00              a1 = sp + 0xd4
  1160: 33 09 04                 a2 = 0x4
  1163: 95 15 d8 00              s0 = sp + 0xd8
  1167: 50 10 14 b0 fd           ra = 20, jump @52
      :                          @72 [@dyn 10]
  1172: 7b 15 f0 00              u64 [sp + 0xf0] = s0
  1176: 33 07 0a                 a0 = 0xa
  1179: 7b 17 18                 u64 [sp + 0x18] = a0
  1182: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  1186: 33 07 20 00 01           a0 = 0x10020
  1191: 7b 17 68 01              u64 [sp + 0x168] = a0
  1195: 49 21 70 01 01           u64 [sp + 368] = 0x1
  1200: 49 21 88 01              u64 [sp + 392] = 0
  1204: 95 18 f0 00              a1 = sp + 0xf0
  1208: 7b 18 78 01              u64 [sp + 0x178] = a1
  1212: 49 21 80 01 01           u64 [sp + 384] = 0x1
  1217: 95 17 28 01              a0 = sp + 0x128
  1221: 95 18 68 01              a1 = sp + 0x168
  1225: 50 10 16 5a 06           ra = 22, jump @182
      :                          @73 [@dyn 11]
  1230: 82 15 30 01              s0 = u64 [sp + 0x130]
  1234: 82 1b 38 01              a4 = u64 [sp + 0x138]
  1238: 82 16 28 01              s1 = u64 [sp + 0x128]
  1242: 33 07 02                 a0 = 0x2
  1245: 33 08                    a1 = 0
  1247: 33 09                    a2 = 0
  1249: 64 5a                    a3 = s0
  1251: 33 00 18                 ra = 0x18
  1254: 0a 64                    ecalli 100 // 'log'
  1256: 01                       fallthrough
      :                          @74 [@dyn 12]
  1257: 82 17 20                 a0 = u64 [sp + 0x20]
  1260: c8 67 07                 a0 = a0 + s1
  1263: 53 37 00 00 f0 27        jump @80 if a0 <u 4293918720
      :                          @75
  1269: 33 07 60 00 03           a0 = 0x30060
  1274: 95 77 00 00 10           a0 = a0 + 0x100000
  1279: 01                       fallthrough
      :                          @76
  1280: 82 78                    a1 = u64 [a0]
  1282: c9 87 09                 a2 = a0 - a1
  1285: ab 59 11                 jump @80 if a2 != s0
      :                          @77
  1288: c9 68 09                 a2 = a1 - s1
  1291: 01                       fallthrough
      :                          @78
  1292: 82 7a                    a3 = u64 [a0]
  1294: ab 8a f2                 jump @76 if a3 != a1
      :                          @79
  1297: 7b 79                    u64 [a0] = a2
  1299: 33 0b                    a4 = 0
  1301: 01                       fallthrough
      :                          @80
  1302: 33 06                    s1 = 0
  1304: 49 21 08 01              u64 [sp + 264] = 0
  1308: 49 21 00 01              u64 [sp + 256] = 0
  1312: 49 21 f8 00              u64 [sp + 248] = 0
  1316: 49 21 f0 00              u64 [sp + 240] = 0
  1320: 33 07 68                 a0 = 0x68
  1323: 7b 17 10                 u64 [sp + 0x10] = a0
  1326: 33 07 60 00 01           a0 = 0x10060
  1331: 7b 17 08                 u64 [sp + 0x8] = a0
  1334: 33 07 60 00 03           a0 = 0x30060
  1339: 95 77 00 00 10           a0 = a0 + 0x100000
  1344: 7b 17                    u64 [sp] = a0
  1346: 28 0b                    jump @82
      :                          @81
  1348: 82 16 c8 00              s1 = u64 [sp + 0xc8]
  1352: 51 16 64 8a 02           jump @102 if s1 == 100
      :                          @82
  1357: 95 17 68 01              a0 = sp + 0x168
  1361: 51 06 10                 jump @84 if s1 == 0
      :                          @83
  1364: 95 18 f0 00              a1 = sp + 0xf0
  1368: 33 09 20                 a2 = 0x20
  1371: 33 00 1a                 ra = 0x1a
  1374: 28 c3 12                 jump @442
      :                          @84
  1377: 95 18 d4 00              a1 = sp + 0xd4
  1381: 33 09 04                 a2 = 0x4
  1384: 50 10 1a b9 12           ra = 26, jump @442
      :                          @85 [@dyn 13]
  1389: 7c 17 87 01              a0 = u8 [sp + 0x187]
  1393: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  1397: 7c 17 86 01              a0 = u8 [sp + 0x186]
  1401: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1405: 7c 17 85 01              a0 = u8 [sp + 0x185]
  1409: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  1413: 7c 17 84 01              a0 = u8 [sp + 0x184]
  1417: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  1421: 7c 17 83 01              a0 = u8 [sp + 0x183]
  1425: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  1429: 7c 17 82 01              a0 = u8 [sp + 0x182]
  1433: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1437: 7c 17 81 01              a0 = u8 [sp + 0x181]
  1441: 7b 17 98 00              u64 [sp + 0x98] = a0
  1445: 7c 17 80 01              a0 = u8 [sp + 0x180]
  1449: 7b 17 90 00              u64 [sp + 0x90] = a0
  1453: 7c 17 7f 01              a0 = u8 [sp + 0x17f]
  1457: 7b 17 88 00              u64 [sp + 0x88] = a0
  1461: 7c 17 7e 01              a0 = u8 [sp + 0x17e]
  1465: 7b 17 80 00              u64 [sp + 0x80] = a0
  1469: 7c 17 7d 01              a0 = u8 [sp + 0x17d]
  1473: 7b 17 78                 u64 [sp + 0x78] = a0
  1476: 7c 17 7c 01              a0 = u8 [sp + 0x17c]
  1480: 7b 17 70                 u64 [sp + 0x70] = a0
  1483: 7c 17 7b 01              a0 = u8 [sp + 0x17b]
  1487: 7b 17 68                 u64 [sp + 0x68] = a0
  1490: 7c 17 7a 01              a0 = u8 [sp + 0x17a]
  1494: 7b 17 60                 u64 [sp + 0x60] = a0
  1497: 7c 17 79 01              a0 = u8 [sp + 0x179]
  1501: 7b 17 58                 u64 [sp + 0x58] = a0
  1504: 7c 17 78 01              a0 = u8 [sp + 0x178]
  1508: 7b 17 50                 u64 [sp + 0x50] = a0
  1511: 7c 17 77 01              a0 = u8 [sp + 0x177]
  1515: 7b 17 48                 u64 [sp + 0x48] = a0
  1518: 7c 17 76 01              a0 = u8 [sp + 0x176]
  1522: 7b 17 40                 u64 [sp + 0x40] = a0
  1525: 7c 17 75 01              a0 = u8 [sp + 0x175]
  1529: 7b 17 38                 u64 [sp + 0x38] = a0
  1532: 7c 17 74 01              a0 = u8 [sp + 0x174]
  1536: 7b 17 30                 u64 [sp + 0x30] = a0
  1539: 7c 17 73 01              a0 = u8 [sp + 0x173]
  1543: 7b 17 28                 u64 [sp + 0x28] = a0
  1546: 7c 1a 72 01              a3 = u8 [sp + 0x172]
  1550: 7c 12 71 01              t0 = u8 [sp + 0x171]
  1554: 7c 13 70 01              t1 = u8 [sp + 0x170]
  1558: 7c 14 6f 01              t2 = u8 [sp + 0x16f]
  1562: 7c 10 6e 01              ra = u8 [sp + 0x16e]
  1566: 7c 1b 6d 01              a4 = u8 [sp + 0x16d]
  1570: 7c 1c 6c 01              a5 = u8 [sp + 0x16c]
  1574: 7c 15 6b 01              s0 = u8 [sp + 0x16b]
  1578: 7c 17 6a 01              a0 = u8 [sp + 0x16a]
  1582: 7c 18 69 01              a1 = u8 [sp + 0x169]
  1586: 7c 19 68 01              a2 = u8 [sp + 0x168]
  1590: 78 19 f0 00              u8 [sp + 0xf0] = a2
  1594: 78 18 f1 00              u8 [sp + 0xf1] = a1
  1598: 78 17 f2 00              u8 [sp + 0xf2] = a0
  1602: 78 15 f3 00              u8 [sp + 0xf3] = s0
  1606: 78 1c f4 00              u8 [sp + 0xf4] = a5
  1610: 78 1b f5 00              u8 [sp + 0xf5] = a4
  1614: 78 10 f6 00              u8 [sp + 0xf6] = ra
  1618: 78 14 f7 00              u8 [sp + 0xf7] = t2
  1622: 78 13 f8 00              u8 [sp + 0xf8] = t1
  1626: 78 12 f9 00              u8 [sp + 0xf9] = t0
  1630: 78 1a fa 00              u8 [sp + 0xfa] = a3
  1634: 82 17 28                 a0 = u64 [sp + 0x28]
  1637: 78 17 fb 00              u8 [sp + 0xfb] = a0
  1641: 82 17 30                 a0 = u64 [sp + 0x30]
  1644: 78 17 fc 00              u8 [sp + 0xfc] = a0
  1648: 82 17 38                 a0 = u64 [sp + 0x38]
  1651: 78 17 fd 00              u8 [sp + 0xfd] = a0
  1655: 82 17 40                 a0 = u64 [sp + 0x40]
  1658: 78 17 fe 00              u8 [sp + 0xfe] = a0
  1662: 82 17 48                 a0 = u64 [sp + 0x48]
  1665: 78 17 ff 00              u8 [sp + 0xff] = a0
  1669: 82 17 50                 a0 = u64 [sp + 0x50]
  1672: 78 17 00 01              u8 [sp + 0x100] = a0
  1676: 82 17 58                 a0 = u64 [sp + 0x58]
  1679: 78 17 01 01              u8 [sp + 0x101] = a0
  1683: 82 17 60                 a0 = u64 [sp + 0x60]
  1686: 78 17 02 01              u8 [sp + 0x102] = a0
  1690: 82 17 68                 a0 = u64 [sp + 0x68]
  1693: 78 17 03 01              u8 [sp + 0x103] = a0
  1697: 82 17 70                 a0 = u64 [sp + 0x70]
  1700: 78 17 04 01              u8 [sp + 0x104] = a0
  1704: 82 17 78                 a0 = u64 [sp + 0x78]
  1707: 78 17 05 01              u8 [sp + 0x105] = a0
  1711: 82 17 80 00              a0 = u64 [sp + 0x80]
  1715: 78 17 06 01              u8 [sp + 0x106] = a0
  1719: 82 17 88 00              a0 = u64 [sp + 0x88]
  1723: 78 17 07 01              u8 [sp + 0x107] = a0
  1727: 82 17 90 00              a0 = u64 [sp + 0x90]
  1731: 78 17 08 01              u8 [sp + 0x108] = a0
  1735: 82 17 98 00              a0 = u64 [sp + 0x98]
  1739: 78 17 09 01              u8 [sp + 0x109] = a0
  1743: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  1747: 78 17 0a 01              u8 [sp + 0x10a] = a0
  1751: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  1755: 78 17 0b 01              u8 [sp + 0x10b] = a0
  1759: 82 17 b0 00              a0 = u64 [sp + 0xb0]
  1763: 78 17 0c 01              u8 [sp + 0x10c] = a0
  1767: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  1771: 78 17 0d 01              u8 [sp + 0x10d] = a0
  1775: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1779: 78 17 0e 01              u8 [sp + 0x10e] = a0
  1783: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  1787: 78 17 0f 01              u8 [sp + 0x10f] = a0
  1791: 83 66 01                 i32 s1 = s1 + 0x1
  1794: 95 17 10 01              a0 = sp + 0x110
  1798: 95 18 f0 00              a1 = sp + 0xf0
  1802: 33 09 20                 a2 = 0x20
  1805: 50 10 1c 32 fb           ra = 28, jump @52
      :                          @86 [@dyn 14]
  1810: 7b 16 c8 00              u64 [sp + 0xc8] = s1
  1814: 7a 16 4c 01              u32 [sp + 0x14c] = s1
  1818: 95 17 4c 01              a0 = sp + 0x14c
  1822: 7b 17 28 01              u64 [sp + 0x128] = a0
  1826: 82 17 10                 a0 = u64 [sp + 0x10]
  1829: 7b 17 30 01              u64 [sp + 0x130] = a0
  1833: 95 17 10 01              a0 = sp + 0x110
  1837: 7b 17 38 01              u64 [sp + 0x138] = a0
  1841: 82 17 18                 a0 = u64 [sp + 0x18]
  1844: 7b 17 40 01              u64 [sp + 0x140] = a0
  1848: 82 17 08                 a0 = u64 [sp + 0x8]
  1851: 7b 17 68 01              u64 [sp + 0x168] = a0
  1855: 49 21 70 01 02           u64 [sp + 368] = 0x2
  1860: 49 21 88 01              u64 [sp + 392] = 0
  1864: 95 17 28 01              a0 = sp + 0x128
  1868: 7b 17 78 01              u64 [sp + 0x178] = a0
  1872: 49 21 80 01 02           u64 [sp + 384] = 0x2
  1877: 95 17 50 01              a0 = sp + 0x150
  1881: 95 18 68 01              a1 = sp + 0x168
  1885: 50 10 1e c6 03           ra = 30, jump @182
      :                          @87 [@dyn 15]
  1890: 82 15 58 01              s0 = u64 [sp + 0x158]
  1894: 82 1b 60 01              a4 = u64 [sp + 0x160]
  1898: 82 16 50 01              s1 = u64 [sp + 0x150]
  1902: 33 07 02                 a0 = 0x2
  1905: 33 08                    a1 = 0
  1907: 33 09                    a2 = 0
  1909: 64 5a                    a3 = s0
  1911: 33 00 20                 ra = 0x20
  1914: 0a 64                    ecalli 100 // 'log'
  1916: 01                       fallthrough
      :                          @88 [@dyn 16]
  1917: 64 6b                    a4 = s1
  1919: 82 17 20                 a0 = u64 [sp + 0x20]
  1922: c8 67 07                 a0 = a0 + s1
  1925: 82 16                    s1 = u64 [sp]
  1927: 53 37 00 00 f0 1a        jump @93 if a0 <u 4293918720
      :                          @89
  1933: 82 67                    a0 = u64 [s1]
  1935: c9 76 08                 a1 = s1 - a0
  1938: ab 58 0f                 jump @93 if a1 != s0
      :                          @90
  1941: c9 b7 08                 a1 = a0 - a4
  1944: 01                       fallthrough
      :                          @91
  1945: 82 69                    a2 = u64 [s1]
  1947: ab 79 f2                 jump @89 if a2 != a0
      :                          @92
  1950: 7b 68                    u64 [s1] = a1
  1952: 01                       fallthrough
      :                          @93
  1953: 82 17 10 01              a0 = u64 [sp + 0x110]
  1957: 51 07 9f fd              jump @81 if a0 == 0
      :                          @94
  1961: 56 37 00 00 10 9b fd     jump @81 if a0 >u 1048576
      :                          @95
  1968: 82 18 18 01              a1 = u64 [sp + 0x118]
  1972: 01                       fallthrough
      :                          @96
  1973: 82 69                    a2 = u64 [s1]
  1975: c9 96 0a                 a3 = s1 - a2
  1978: ab 8a 8a fd              jump @81 if a3 != a1
      :                          @97
  1982: c9 79 0a                 a3 = a2 - a0
  1985: 01                       fallthrough
      :                          @98
  1986: 82 6b                    a4 = u64 [s1]
  1988: ab 9b f1                 jump @96 if a4 != a2
      :                          @99
  1991: 7b 6a                    u64 [s1] = a3
  1993: 33 0c                    a5 = 0
  1995: 01                       fallthrough
      :                          @100
  1996: ab 9b e9                 jump @96 if a4 != a2
      :                          @101
  1999: 28 75 fd                 jump @81
      :                          @102
  2002: 95 17 50 01              a0 = sp + 0x150
  2006: 95 18 f0 00              a1 = sp + 0xf0
  2010: 33 09 20                 a2 = 0x20
  2013: 95 15 50 01              s0 = sp + 0x150
  2017: 50 10 22 5e fa           ra = 34, jump @52
      :                          @103 [@dyn 17]
  2022: 7b 15 10 01              u64 [sp + 0x110] = s0
  2026: 33 07 0a                 a0 = 0xa
  2029: 7b 17 18 01              u64 [sp + 0x118] = a0
  2033: 33 07 48 00 01           a0 = 0x10048
  2038: 7b 17 68 01              u64 [sp + 0x168] = a0
  2042: 49 21 70 01 01           u64 [sp + 368] = 0x1
  2047: 49 21 88 01              u64 [sp + 392] = 0
  2051: 95 18 10 01              a1 = sp + 0x110
  2055: 7b 18 78 01              u64 [sp + 0x178] = a1
  2059: 49 21 80 01 01           u64 [sp + 384] = 0x1
  2064: 95 17 28 01              a0 = sp + 0x128
  2068: 95 18 68 01              a1 = sp + 0x168
  2072: 50 10 24 0b 03           ra = 36, jump @182
      :                          @104 [@dyn 18]
  2077: 82 15 30 01              s0 = u64 [sp + 0x130]
  2081: 82 1b 38 01              a4 = u64 [sp + 0x138]
  2085: 82 16 28 01              s1 = u64 [sp + 0x128]
  2089: 33 07 02                 a0 = 0x2
  2092: 33 08                    a1 = 0
  2094: 33 09                    a2 = 0
  2096: 64 5a                    a3 = s0
  2098: 33 00 26                 ra = 0x26
  2101: 0a 64                    ecalli 100 // 'log'
  2103: 01                       fallthrough
      :                          @105 [@dyn 19]
  2104: 82 17 20                 a0 = u64 [sp + 0x20]
  2107: c8 67 07                 a0 = a0 + s1
  2110: 33 08 00 00 f0           a1 = 0xfffffffffff00000
  2115: ac 87 24                 jump @111 if a0 <u a1
      :                          @106
  2118: 33 07 60 00 03           a0 = 0x30060
  2123: 95 77 00 00 10           a0 = a0 + 0x100000
  2128: 01                       fallthrough
      :                          @107
  2129: 82 78                    a1 = u64 [a0]
  2131: c9 87 09                 a2 = a0 - a1
  2134: ab 59 11                 jump @111 if a2 != s0
      :                          @108
  2137: c9 68 09                 a2 = a1 - s1
  2140: 01                       fallthrough
      :                          @109
  2141: 82 7a                    a3 = u64 [a0]
  2143: ab 8a f2                 jump @107 if a3 != a1
      :                          @110
  2146: 7b 79                    u64 [a0] = a2
  2148: 33 0b                    a4 = 0
  2150: 01                       fallthrough
      :                          @111
  2151: 82 17 50 01              a0 = u64 [sp + 0x150]
  2155: 51 07 30                 jump @118 if a0 == 0
      :                          @112
  2158: 33 09 00 00 10           a2 = 0x100000
  2163: ac 79 28                 jump @118 if a2 <u a0
      :                          @113
  2166: 82 18 58 01              a1 = u64 [sp + 0x158]
  2170: 33 0a 60 00 03           a3 = 0x30060
  2175: 95 a9 00 00 10           a2 = a3 + 0x100000
  2180: 01                       fallthrough
      :                          @114
  2181: 82 9a                    a3 = u64 [a2]
  2183: c9 a9 0b                 a4 = a2 - a3
  2186: ab 8b 11                 jump @118 if a4 != a1
      :                          @115
  2189: c9 7a 0b                 a4 = a3 - a0
  2192: 01                       fallthrough
      :                          @116
  2193: 82 9c                    a5 = u64 [a2]
  2195: ab ac f2                 jump @114 if a5 != a3
      :                          @117
  2198: 7b 9b                    u64 [a2] = a4
  2200: 33 06                    s1 = 0
  2202: 01                       fallthrough
      :                          @118
  2203: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  2207: 51 07 2e                 jump @125 if a0 == 0
      :                          @119
  2210: 33 09 00 00 10           a2 = 0x100000
  2215: ac 79 26                 jump @125 if a2 <u a0
      :                          @120
  2218: 82 18 e0 00              a1 = u64 [sp + 0xe0]
  2222: 33 0a 60 00 03           a3 = 0x30060
  2227: 95 a9 00 00 10           a2 = a3 + 0x100000
  2232: 01                       fallthrough
      :                          @121
  2233: 82 9a                    a3 = u64 [a2]
  2235: c9 a9 0b                 a4 = a2 - a3
  2238: ab 8b 0f                 jump @125 if a4 != a1
      :                          @122
  2241: c9 7a 0b                 a4 = a3 - a0
  2244: 01                       fallthrough
      :                          @123
  2245: 82 9c                    a5 = u64 [a2]
  2247: ab ac f2                 jump @121 if a5 != a3
      :                          @124
  2250: 7b 9b                    u64 [a2] = a4
  2252: 01                       fallthrough
      :                          @125
  2253: 95 17 f0 00              a0 = sp + 0xf0
  2257: 33 08 20                 a1 = 0x20
  2260: 82 10 a8 01              ra = u64 [sp + 0x1a8]
  2264: 82 15 a0 01              s0 = u64 [sp + 0x1a0]
  2268: 82 16 98 01              s1 = u64 [sp + 0x198]
  2272: 95 11 b0 01              sp = sp + 0x1b0
  2276: 32 00                    ret
      :                          @126
  2278: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2281: 7b 10 40                 u64 [sp + 0x40] = ra
  2284: 7b 15 38                 u64 [sp + 0x38] = s0
  2287: 7b 16 30                 u64 [sp + 0x30] = s1
  2290: c8 89 09                 a2 = a2 + a1
  2293: ac 89 52                 jump @134 if a2 <u a1
      :                          @127
  2296: 64 75                    s0 = a0
  2298: 82 77                    a0 = u64 [a0]
  2300: 97 78 01                 a1 = a0 << 0x1
  2303: 33 0a 08                 a3 = 0x8
  2306: e4 a9 09                 a2 = maxu(a2, a3)
  2309: e4 98 06                 s1 = maxu(a1, a2)
  2312: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2315: 98 88 3f                 a1 = a1 >> 0x3f
  2318: 51 07 12                 jump @129 if a0 == 0
      :                          @128
  2321: 82 59 08                 a2 = u64 [s0 + 0x8]
  2324: 7b 19 18                 u64 [sp + 0x18] = a2
  2327: 49 11 20 01              u64 [sp + 32] = 0x1
  2331: 7b 17 28                 u64 [sp + 0x28] = a0
  2334: 28 06                    jump @130
      :                          @129
  2336: 49 11 20                 u64 [sp + 32] = 0
  2339: 01                       fallthrough
      :                          @130
  2340: 64 17                    a0 = sp
  2342: 95 1a 18                 a3 = sp + 0x18
  2345: 64 69                    a2 = s1
  2347: 50 10 28 32              ra = 40, jump @138
      :                          @131 [@dyn 20]
  2351: 82 18                    a1 = u64 [sp]
  2353: 82 17 08                 a0 = u64 [sp + 0x8]
  2356: 51 08 14                 jump @135 if a1 == 0
      :                          @132
  2359: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2369: aa 87 0d                 jump @136 if a0 == a1
      :                          @133
  2372: 52 07 18                 jump @137 if a0 != 0
      :                          @134
  2375: 00                       trap
      :                          @135
  2376: 7b 57 08                 u64 [s0 + 0x8] = a0
  2379: 7b 56                    u64 [s0] = s1
  2381: 01                       fallthrough
      :                          @136
  2382: 82 10 40                 ra = u64 [sp + 0x40]
  2385: 82 15 38                 s0 = u64 [sp + 0x38]
  2388: 82 16 30                 s1 = u64 [sp + 0x30]
  2391: 95 11 48                 sp = sp + 0x48
  2394: 32 00                    ret
      :                          @137
  2396: 00                       trap
      :                          @138
  2397: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2400: 7b 10 30                 u64 [sp + 0x30] = ra
  2403: 7b 15 28                 u64 [sp + 0x28] = s0
  2406: 7b 16 20                 u64 [sp + 0x20] = s1
  2409: 64 95                    s0 = a2
  2411: 64 72                    t0 = a0
  2413: 51 08 79                 jump @148 if a1 == 0
      :                          @139
  2416: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2419: 51 07 7c                 jump @149 if a0 == 0
      :                          @140
  2422: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2425: 51 09 aa 00              jump @156 if a2 == 0
      :                          @141
  2429: 82 a8                    a1 = u64 [a3]
  2431: 33 06 60 00 03           s1 = 0x30060
  2436: 33 03 00 00 10           t1 = 0x100000
  2441: c8 36 06                 s1 = s1 + t1
  2444: 01                       fallthrough
      :                          @142
  2445: 82 6a                    a3 = u64 [s1]
  2447: c8 5a 07                 a0 = a3 + s0
  2450: ac a7 cf 00              jump @162 if a0 <u a3
      :                          @143
  2454: 95 7b 01                 a4 = a0 + 0x1
  2457: 88 bc 01                 a5 = a4 <u 0x1
  2460: d8 b3 0b                 a4 = t1 <u a4
  2463: d4 cb 0b                 a4 = a4 | a5
  2466: 52 0b bf 00              jump @162 if a4 != 0
      :                          @144
  2470: 82 6b                    a4 = u64 [s1]
  2472: ab ab e5                 jump @142 if a4 != a3
      :                          @145
  2475: 7b 67                    u64 [s1] = a0
  2477: 33 0c                    a5 = 0
  2479: 7b 12 18                 u64 [sp + 0x18] = t0
  2482: 33 0a 60 00 03           a3 = 0x30060
  2487: 33 0b 00 00 10           a4 = 0x100000
  2492: 7b 1a                    u64 [sp] = a3
  2494: c8 ba 0a                 a3 = a3 + a4
  2497: c9 7a 07                 a0 = a3 - a0
  2500: 7b 17 10                 u64 [sp + 0x10] = a0
  2503: 7b 18 08                 u64 [sp + 0x8] = a1
  2506: 64 96                    s1 = a2
  2508: 50 10 2a bb 03           ra = 42, jump @232
      :                          @146 [@dyn 21]
  2513: 54 36 00 00 10 98 00     jump @163 if s1 <=u 1048576
      :                          @147
  2520: 82 12 18                 t0 = u64 [sp + 0x18]
  2523: 82 18 10                 a1 = u64 [sp + 0x10]
  2526: 33 07                    a0 = 0
  2528: 7b 28 08                 u64 [t0 + 0x8] = a1
  2531: 28 b5 00                 jump @169
      :                          @148
  2534: 49 12 08                 u64 [t0 + 8] = 0
  2537: 33 07 01                 a0 = 0x1
  2540: 28 ac 00                 jump @169
      :                          @149
  2543: 33 09 60 00 03           a2 = 0x30060
  2548: 33 07 00 00 10           a0 = 0x100000
  2553: c8 79 09                 a2 = a2 + a0
  2556: 01                       fallthrough
      :                          @150
  2557: 82 9a                    a3 = u64 [a2]
  2559: c8 5a 08                 a1 = a3 + s0
  2562: ac a8 5f                 jump @162 if a1 <u a3
      :                          @151
  2565: 95 8b 01                 a4 = a1 + 0x1
  2568: 88 bc 01                 a5 = a4 <u 0x1
  2571: d8 b7 0b                 a4 = a0 <u a4
  2574: d4 cb 0b                 a4 = a4 | a5
  2577: 52 0b 50                 jump @162 if a4 != 0
      :                          @152
  2580: 82 9b                    a4 = u64 [a2]
  2582: ab ab e7                 jump @150 if a4 != a3
      :                          @153
  2585: 7b 98                    u64 [a2] = a1
  2587: 33 0c                    a5 = 0
  2589: 01                       fallthrough
      :                          @154
  2590: ab ab df                 jump @150 if a4 != a3
      :                          @155
  2593: 28 31                    jump @161
      :                          @156
  2595: 33 09 60 00 03           a2 = 0x30060
  2600: 33 07 00 00 10           a0 = 0x100000
  2605: c8 79 09                 a2 = a2 + a0
  2608: 01                       fallthrough
      :                          @157
  2609: 82 9a                    a3 = u64 [a2]
  2611: c8 5a 08                 a1 = a3 + s0
  2614: ac a8 2b                 jump @162 if a1 <u a3
      :                          @158
  2617: 95 8b 01                 a4 = a1 + 0x1
  2620: 88 bc 01                 a5 = a4 <u 0x1
  2623: d8 b7 0b                 a4 = a0 <u a4
  2626: d4 cb 0b                 a4 = a4 | a5
  2629: 52 0b 1c                 jump @162 if a4 != 0
      :                          @159
  2632: 82 9b                    a4 = u64 [a2]
  2634: ab ab e7                 jump @157 if a4 != a3
      :                          @160
  2637: 7b 98                    u64 [a2] = a1
  2639: 33 0c                    a5 = 0
  2641: 01                       fallthrough
      :                          @161
  2642: 33 07 60 00 13           a0 = 0x130060
  2647: c9 87 08                 a1 = a0 - a1
  2650: 33 07                    a0 = 0
  2652: 7b 28 08                 u64 [t0 + 0x8] = a1
  2655: 28 39                    jump @169
      :                          @162
  2657: 33 07 01                 a0 = 0x1
  2660: 7b 27 08                 u64 [t0 + 0x8] = a0
  2663: 28 31                    jump @169
      :                          @163
  2665: 64 6c                    a5 = s1
  2667: 82 17                    a0 = u64 [sp]
  2669: 95 77 00 00 10           a0 = a0 + 0x100000
  2674: 82 12 18                 t0 = u64 [sp + 0x18]
  2677: 82 16 08                 s1 = u64 [sp + 0x8]
  2680: 01                       fallthrough
      :                          @164
  2681: 82 78                    a1 = u64 [a0]
  2683: c9 87 09                 a2 = a0 - a1
  2686: ab 69 11                 jump @168 if a2 != s1
      :                          @165
  2689: c9 c8 09                 a2 = a1 - a5
  2692: 01                       fallthrough
      :                          @166
  2693: 82 7a                    a3 = u64 [a0]
  2695: ab 8a f2                 jump @164 if a3 != a1
      :                          @167
  2698: 7b 79                    u64 [a0] = a2
  2700: 33 0b                    a4 = 0
  2702: 01                       fallthrough
      :                          @168
  2703: 82 18 10                 a1 = u64 [sp + 0x10]
  2706: 33 07                    a0 = 0
  2708: 7b 28 08                 u64 [t0 + 0x8] = a1
  2711: 01                       fallthrough
      :                          @169
  2712: 7b 25 10                 u64 [t0 + 0x10] = s0
  2715: 7b 27                    u64 [t0] = a0
  2717: 82 10 30                 ra = u64 [sp + 0x30]
  2720: 82 15 28                 s0 = u64 [sp + 0x28]
  2723: 82 16 20                 s1 = u64 [sp + 0x20]
  2726: 95 11 38                 sp = sp + 0x38
  2729: 32 00                    ret
      :                          @170
  2731: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2734: 7b 10 40                 u64 [sp + 0x40] = ra
  2737: 7b 15 38                 u64 [sp + 0x38] = s0
  2740: 7b 16 30                 u64 [sp + 0x30] = s1
  2743: 95 88 01                 a1 = a1 + 0x1
  2746: 51 08 53                 jump @178 if a1 == 0
      :                          @171
  2749: 64 75                    s0 = a0
  2751: 82 77                    a0 = u64 [a0]
  2753: 97 79 01                 a2 = a0 << 0x1
  2756: 33 0a 08                 a3 = 0x8
  2759: e4 a8 08                 a1 = maxu(a1, a3)
  2762: e4 89 06                 s1 = maxu(a2, a1)
  2765: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2768: 98 88 3f                 a1 = a1 >> 0x3f
  2771: 51 07 12                 jump @173 if a0 == 0
      :                          @172
  2774: 82 59 08                 a2 = u64 [s0 + 0x8]
  2777: 7b 19 18                 u64 [sp + 0x18] = a2
  2780: 49 11 20 01              u64 [sp + 32] = 0x1
  2784: 7b 17 28                 u64 [sp + 0x28] = a0
  2787: 28 06                    jump @174
      :                          @173
  2789: 49 11 20                 u64 [sp + 32] = 0
  2792: 01                       fallthrough
      :                          @174
  2793: 64 17                    a0 = sp
  2795: 95 1a 18                 a3 = sp + 0x18
  2798: 64 69                    a2 = s1
  2800: 50 10 2c 6d fe           ra = 44, jump @138
      :                          @175 [@dyn 22]
  2805: 82 18                    a1 = u64 [sp]
  2807: 82 17 08                 a0 = u64 [sp + 0x8]
  2810: 51 08 14                 jump @179 if a1 == 0
      :                          @176
  2813: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2823: aa 87 0d                 jump @180 if a0 == a1
      :                          @177
  2826: 52 07 18                 jump @181 if a0 != 0
      :                          @178
  2829: 00                       trap
      :                          @179
  2830: 7b 57 08                 u64 [s0 + 0x8] = a0
  2833: 7b 56                    u64 [s0] = s1
  2835: 01                       fallthrough
      :                          @180
  2836: 82 10 40                 ra = u64 [sp + 0x40]
  2839: 82 15 38                 s0 = u64 [sp + 0x38]
  2842: 82 16 30                 s1 = u64 [sp + 0x30]
  2845: 95 11 48                 sp = sp + 0x48
  2848: 32 00                    ret
      :                          @181
  2850: 00                       trap
      :                          @182
  2851: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2854: 7b 10 30                 u64 [sp + 0x30] = ra
  2857: 7b 15 28                 u64 [sp + 0x28] = s0
  2860: 7b 16 20                 u64 [sp + 0x20] = s1
  2863: 82 8a 08                 a3 = u64 [a1 + 0x8]
  2866: 64 75                    s0 = a0
  2868: 51 0a 35                 jump @187 if a3 == 0
      :                          @183
  2871: 82 89                    a2 = u64 [a1]
  2873: 33 07                    a0 = 0
  2875: 95 9b 08                 a4 = a2 + 0x8
  2878: 01                       fallthrough
      :                          @184
  2879: 82 bc                    a5 = u64 [a4]
  2881: c8 c7 07                 a0 = a0 + a5
  2884: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2887: 95 bb 10                 a4 = a4 + 0x10
  2890: 52 0a f5                 jump @184 if a3 != 0
      :                          @185
  2893: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2896: 51 0a 24                 jump @189 if a3 == 0
      :                          @186
  2899: 82 99 08                 a2 = u64 [a2 + 0x8]
  2902: 8e 99                    a2 = a2 >u 0
  2904: 88 7a 10                 a3 = a0 <u 0x10
  2907: 85 aa 01                 a3 = a3 ^ 0x1
  2910: d4 a9 09                 a2 = a2 | a3
  2913: 89 7a                    a3 = a0 <s 0
  2915: e0 a9 09                 a2 = a2 & ~a3
  2918: 52 09 0a                 jump @188 if a2 != 0
      :                          @187
  2921: 33 07                    a0 = 0
  2923: 33 09 01                 a2 = 0x1
  2926: 28 4a                    jump @197
      :                          @188
  2928: 97 77 01                 a0 = a0 << 0x1
  2931: 01                       fallthrough
      :                          @189
  2932: 51 07 40                 jump @196 if a0 == 0
      :                          @190
  2935: 57 07 73                 jump @202 if a0 <s 0
      :                          @191
  2938: 64 52                    t0 = s0
  2940: 33 0b 60 00 03           a4 = 0x30060
  2945: 33 09 00 00 10           a2 = 0x100000
  2950: c8 9b 0b                 a4 = a4 + a2
  2953: 01                       fallthrough
      :                          @192
  2954: 82 bc                    a5 = u64 [a4]
  2956: c8 7c 0a                 a3 = a5 + a0
  2959: ac ca 59                 jump @200 if a3 <u a5
      :                          @193
  2962: 95 a5 01                 s0 = a3 + 0x1
  2965: 88 56 01                 s1 = s0 <u 0x1
  2968: d8 59 05                 s0 = a2 <u s0
  2971: d4 65 05                 s0 = s0 | s1
  2974: 52 05 4a                 jump @200 if s0 != 0
      :                          @194
  2977: 82 b6                    s1 = u64 [a4]
  2979: ab c6 e7                 jump @192 if s1 != a5
      :                          @195
  2982: 7b ba                    u64 [a4] = a3
  2984: 33 09 60 00 13           a2 = 0x130060
  2989: c9 a9 09                 a2 = a2 - a3
  2992: 64 25                    s0 = t0
  2994: 28 06                    jump @197
      :                          @196
  2996: 33 09 01                 a2 = 0x1
  2999: 01                       fallthrough
      :                          @197
  3000: 7b 17                    u64 [sp] = a0
  3002: 7b 19 08                 u64 [sp + 0x8] = a2
  3005: 49 11 10                 u64 [sp + 16] = 0
  3008: 64 17                    a0 = sp
  3010: 50 10 2e 61 0a           ra = 46, jump @403
      :                          @198 [@dyn 23]
  3015: 52 07 22                 jump @201 if a0 != 0
      :                          @199
  3018: 82 17 10                 a0 = u64 [sp + 0x10]
  3021: 82 18 08                 a1 = u64 [sp + 0x8]
  3024: 82 19                    a2 = u64 [sp]
  3026: 7b 57 10                 u64 [s0 + 0x10] = a0
  3029: 7b 58 08                 u64 [s0 + 0x8] = a1
  3032: 7b 59                    u64 [s0] = a2
  3034: 82 10 30                 ra = u64 [sp + 0x30]
  3037: 82 15 28                 s0 = u64 [sp + 0x28]
  3040: 82 16 20                 s1 = u64 [sp + 0x20]
  3043: 95 11 38                 sp = sp + 0x38
  3046: 32 00                    ret
      :                          @200
  3048: 00                       trap
      :                          @201
  3049: 00                       trap
      :                          @202
  3050: 00                       trap
      :                          @203 [@dyn 24]
  3051: 82 72                    t0 = u64 [a0]
  3053: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  3058: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  3063: ac 9a 28                 jump @209 if a3 <u a2
      :                          @204
  3066: 82 77 08                 a0 = u64 [a0 + 0x8]
  3069: 33 09 60 00 03           a2 = 0x30060
  3074: 95 99 00 00 10           a2 = a2 + 0x100000
  3079: 01                       fallthrough
      :                          @205
  3080: 82 9a                    a3 = u64 [a2]
  3082: c9 a9 0b                 a4 = a2 - a3
  3085: ab 7b 12                 jump @209 if a4 != a0
      :                          @206
  3088: c9 2a 0b                 a4 = a3 - t0
  3091: 01                       fallthrough
      :                          @207
  3092: 82 9c                    a5 = u64 [a2]
  3094: ab ac f2                 jump @205 if a5 != a3
      :                          @208
  3097: 7b 9b                    u64 [a2] = a4
  3099: 33 08                    a1 = 0
  3101: 32 00                    ret
      :                          @209
  3103: 32 00                    ret
      :                          @210 [@dyn 25]
  3105: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3108: 7b 10 18                 u64 [sp + 0x18] = ra
  3111: 7b 15 10                 u64 [sp + 0x10] = s0
  3114: 7b 16 08                 u64 [sp + 0x8] = s1
  3117: 64 75                    s0 = a0
  3119: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3122: 82 77                    a0 = u64 [a0]
  3124: c9 a7 07                 a0 = a0 - a3
  3127: 64 96                    s1 = a2
  3129: ac 97 2a                 jump @213 if a0 <u a2
      :                          @211
  3132: 7b 1a                    u64 [sp] = a3
  3134: 82 57 08                 a0 = u64 [s0 + 0x8]
  3137: c8 a7 07                 a0 = a0 + a3
  3140: 64 69                    a2 = s1
  3142: 50 10 34 41 01           ra = 52, jump @232
      :                          @212 [@dyn 26]
  3147: 82 17                    a0 = u64 [sp]
  3149: c8 76 06                 s1 = s1 + a0
  3152: 7b 56 10                 u64 [s0 + 0x10] = s1
  3155: 33 07                    a0 = 0
  3157: 82 10 18                 ra = u64 [sp + 0x18]
  3160: 82 15 10                 s0 = u64 [sp + 0x10]
  3163: 82 16 08                 s1 = u64 [sp + 0x8]
  3166: 95 11 20                 sp = sp + 0x20
  3169: 32 00                    ret
      :                          @213
  3171: 64 57                    a0 = s0
  3173: 7b 18                    u64 [sp] = a1
  3175: 64 a8                    a1 = a3
  3177: 64 69                    a2 = s1
  3179: 50 10 36 7b fc           ra = 54, jump @126
      :                          @214 [@dyn 27]
  3184: 82 18                    a1 = u64 [sp]
  3186: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3189: 28 c7                    jump @211
      :                          @215 [@dyn 28]
  3191: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3194: 7b 10 20                 u64 [sp + 0x20] = ra
  3197: 7b 15 18                 u64 [sp + 0x18] = s0
  3200: 7b 16 10                 u64 [sp + 0x10] = s1
  3203: 64 86                    s1 = a1
  3205: 83 88                    i32 a1 = a1 + 0
  3207: 33 09 80 00              a2 = 0x80
  3211: 64 7a                    a3 = a0
  3213: ae 98 2b                 jump @220 if a1 >=u a2
      :                          @216
  3216: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3219: 82 a7                    a0 = u64 [a3]
  3221: ab 78 12                 jump @219 if a1 != a0
      :                          @217
  3224: 64 a7                    a0 = a3
  3226: 64 a5                    s0 = a3
  3228: 50 10 3a 0f fe           ra = 58, jump @170
      :                          @218 [@dyn 29]
  3233: 64 5a                    a3 = s0
  3235: 82 58 10                 a1 = u64 [s0 + 0x10]
  3238: 01                       fallthrough
      :                          @219
  3239: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3242: c8 87 07                 a0 = a0 + a1
  3245: 78 76                    u8 [a0] = s1
  3247: 95 88 01                 a1 = a1 + 0x1
  3250: 7b a8 10                 u64 [a3 + 0x10] = a1
  3253: 28 ab 00                 jump @228
      :                          @220
  3256: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3259: 48 11 0c                 u32 [sp + 12] = 0
  3262: 52 07 1c                 jump @222 if a0 != 0
      :                          @221
  3265: 98 67 06                 a0 = s1 >> 0x6
  3268: 86 77 c0 00              a0 = a0 | 0xc0
  3272: 78 17 0c                 u8 [sp + 0xc] = a0
  3275: 84 67 3f                 a0 = s1 & 0x3f
  3278: 86 77 80 00              a0 = a0 | 0x80
  3282: 78 17 0d                 u8 [sp + 0xd] = a0
  3285: 33 06 02                 s1 = 0x2
  3288: 28 63                    jump @225
      :                          @222
  3290: 8b 67 10                 i32 a0 = s1 >> 0x10
  3293: 52 07 29                 jump @224 if a0 != 0
      :                          @223
  3296: 98 67 0c                 a0 = s1 >> 0xc
  3299: 86 77 e0 00              a0 = a0 | 0xe0
  3303: 78 17 0c                 u8 [sp + 0xc] = a0
  3306: 97 67 34                 a0 = s1 << 0x34
  3309: 98 77 3a                 a0 = a0 >> 0x3a
  3312: 95 77 80 00              a0 = a0 + 0x80
  3316: 78 17 0d                 u8 [sp + 0xd] = a0
  3319: 84 67 3f                 a0 = s1 & 0x3f
  3322: 86 77 80 00              a0 = a0 | 0x80
  3326: 78 17 0e                 u8 [sp + 0xe] = a0
  3329: 33 06 03                 s1 = 0x3
  3332: 28 37                    jump @225
      :                          @224
  3334: 97 67 2b                 a0 = s1 << 0x2b
  3337: 98 77 3d                 a0 = a0 >> 0x3d
  3340: 95 77 f0 00              a0 = a0 + 0xf0
  3344: 78 17 0c                 u8 [sp + 0xc] = a0
  3347: 97 67 2e                 a0 = s1 << 0x2e
  3350: 98 77 3a                 a0 = a0 >> 0x3a
  3353: 95 77 80 00              a0 = a0 + 0x80
  3357: 78 17 0d                 u8 [sp + 0xd] = a0
  3360: 97 67 34                 a0 = s1 << 0x34
  3363: 98 77 3a                 a0 = a0 >> 0x3a
  3366: 95 77 80 00              a0 = a0 + 0x80
  3370: 78 17 0e                 u8 [sp + 0xe] = a0
  3373: 84 67 3f                 a0 = s1 & 0x3f
  3376: 86 77 80 00              a0 = a0 | 0x80
  3380: 78 17 0f                 u8 [sp + 0xf] = a0
  3383: 33 06 04                 s1 = 0x4
  3386: 01                       fallthrough
      :                          @225
  3387: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3390: 82 a7                    a0 = u64 [a3]
  3392: c9 57 07                 a0 = a0 - s0
  3395: ac 67 2d                 jump @229 if a0 <u s1
      :                          @226
  3398: 7b 1a                    u64 [sp] = a3
  3400: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3403: c8 57 07                 a0 = a0 + s0
  3406: 95 18 0c                 a1 = sp + 0xc
  3409: 64 69                    a2 = s1
  3411: 50 10 3c 34              ra = 60, jump @232
      :                          @227 [@dyn 30]
  3415: c8 56 06                 s1 = s1 + s0
  3418: 82 17                    a0 = u64 [sp]
  3420: 7b 76 10                 u64 [a0 + 0x10] = s1
  3423: 01                       fallthrough
      :                          @228
  3424: 33 07                    a0 = 0
  3426: 82 10 20                 ra = u64 [sp + 0x20]
  3429: 82 15 18                 s0 = u64 [sp + 0x18]
  3432: 82 16 10                 s1 = u64 [sp + 0x10]
  3435: 95 11 28                 sp = sp + 0x28
  3438: 32 00                    ret
      :                          @229
  3440: 64 a7                    a0 = a3
  3442: 64 58                    a1 = s0
  3444: 64 69                    a2 = s1
  3446: 64 a5                    s0 = a3
  3448: 50 10 3e 6e fb           ra = 62, jump @126
      :                          @230 [@dyn 31]
  3453: 64 5a                    a3 = s0
  3455: 82 55 10                 s0 = u64 [s0 + 0x10]
  3458: 28 c4                    jump @226
      :                          @231 [@dyn 32]
  3460: 28 9f 08                 jump @403
      :                          @232
  3463: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3466: 7b 10 18                 u64 [sp + 0x18] = ra
  3469: 7b 15 10                 u64 [sp + 0x10] = s0
  3472: 7b 16 08                 u64 [sp + 0x8] = s1
  3475: 53 19 10 64              jump @241 if a2 <u 16
      :                          @233
  3479: 8d 7a                    i32 a3 = -a0
  3481: 84 a2 07                 t0 = a3 & 0x7
  3484: c8 27 0b                 a4 = a0 + t0
  3487: 51 02 15                 jump @236 if t0 == 0
      :                          @234
  3490: 64 8c                    a5 = a1
  3492: 64 75                    s0 = a0
  3494: 01                       fallthrough
      :                          @235
  3495: 7c ca                    a3 = u8 [a5]
  3497: 78 5a                    u8 [s0] = a3
  3499: 95 55 01                 s0 = s0 + 0x1
  3502: 95 cc 01                 a5 = a5 + 0x1
  3505: ac b5 f6                 jump @235 if s0 <u a4
      :                          @236
  3508: c8 28 03                 t1 = a1 + t0
  3511: c9 29 02                 t0 = a2 - t0
  3514: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3517: 84 38 07                 a1 = t1 & 0x7
  3520: c8 4b 0a                 a3 = a4 + t2
  3523: 51 08 3b                 jump @243 if a1 == 0
      :                          @237
  3526: 58 04 4b                 jump @246 if t2 <=s 0
      :                          @238
  3529: 97 38 03                 a1 = t1 << 0x3
  3532: 84 80 38                 ra = a1 & 0x38
  3535: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3538: 82 c5                    s0 = u64 [a5]
  3540: 8d 88                    i32 a1 = -a1
  3542: 84 88 38                 a1 = a1 & 0x38
  3545: 95 cc 08                 a5 = a5 + 0x8
  3548: 01                       fallthrough
      :                          @239
  3549: 82 c6                    s1 = u64 [a5]
  3551: d0 05 05                 s0 = s0 >> ra
  3554: cf 86 09                 a2 = s1 << a1
  3557: d4 59 09                 a2 = a2 | s0
  3560: 7b b9                    u64 [a4] = a2
  3562: 95 bb 08                 a4 = a4 + 0x8
  3565: 95 cc 08                 a5 = a5 + 0x8
  3568: 64 65                    s0 = s1
  3570: ac ab eb                 jump @239 if a4 <u a3
      :                          @240
  3573: 28 1c                    jump @246
      :                          @241
  3575: 64 7a                    a3 = a0
  3577: 52 09 21                 jump @247 if a2 != 0
      :                          @242
  3580: 28 2f                    jump @249
      :                          @243
  3582: 58 04 13                 jump @246 if t2 <=s 0
      :                          @244
  3585: 64 38                    a1 = t1
  3587: 01                       fallthrough
      :                          @245
  3588: 82 89                    a2 = u64 [a1]
  3590: 7b b9                    u64 [a4] = a2
  3592: 95 bb 08                 a4 = a4 + 0x8
  3595: 95 88 08                 a1 = a1 + 0x8
  3598: ac ab f6                 jump @245 if a4 <u a3
      :                          @246
  3601: c8 43 08                 a1 = t1 + t2
  3604: 84 29 07                 a2 = t0 & 0x7
  3607: 51 09 14                 jump @249 if a2 == 0
      :                          @247
  3610: c8 a9 09                 a2 = a2 + a3
  3613: 01                       fallthrough
      :                          @248
  3614: 7c 8b                    a4 = u8 [a1]
  3616: 78 ab                    u8 [a3] = a4
  3618: 95 aa 01                 a3 = a3 + 0x1
  3621: 95 88 01                 a1 = a1 + 0x1
  3624: ac 9a f6                 jump @248 if a3 <u a2
      :                          @249
  3627: 82 10 18                 ra = u64 [sp + 0x18]
  3630: 82 15 10                 s0 = u64 [sp + 0x10]
  3633: 82 16 08                 s1 = u64 [sp + 0x8]
  3636: 95 11 20                 sp = sp + 0x20
  3639: 32 00                    ret
      :                          @250
  3641: 53 19 10 48              jump @259 if a2 <u 16
      :                          @251
  3645: 8d 7a                    i32 a3 = -a0
  3647: 84 aa 07                 a3 = a3 & 0x7
  3650: c8 a7 0b                 a4 = a0 + a3
  3653: 51 0a 0e                 jump @254 if a3 == 0
      :                          @252
  3656: 64 7c                    a5 = a0
  3658: 01                       fallthrough
      :                          @253
  3659: 78 c8                    u8 [a5] = a1
  3661: 95 cc 01                 a5 = a5 + 0x1
  3664: ac bc fb                 jump @253 if a5 <u a4
      :                          @254
  3667: c9 a9 03                 t1 = a2 - a3
  3670: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3673: c8 cb 0a                 a3 = a4 + a5
  3676: 58 0c 1d                 jump @257 if a5 <=s 0
      :                          @255
  3679: 84 82 ff 00              t0 = a1 & 0xff
  3683: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  3693: ca 92 0c                 a5 = t0 * a2
  3696: 01                       fallthrough
      :                          @256
  3697: 7b bc                    u64 [a4] = a5
  3699: 95 bb 08                 a4 = a4 + 0x8
  3702: ac ab fb                 jump @256 if a4 <u a3
      :                          @257
  3705: 84 39 07                 a2 = t1 & 0x7
  3708: 52 09 0a                 jump @260 if a2 != 0
      :                          @258
  3711: 28 13                    jump @262
      :                          @259
  3713: 64 7a                    a3 = a0
  3715: 51 09 0f                 jump @262 if a2 == 0
      :                          @260
  3718: c8 a9 09                 a2 = a2 + a3
  3721: 01                       fallthrough
      :                          @261
  3722: 78 a8                    u8 [a3] = a1
  3724: 95 aa 01                 a3 = a3 + 0x1
  3727: ac 9a fb                 jump @261 if a3 <u a2
      :                          @262
  3730: 32 00                    ret
      :                          @263 [@dyn 33]
  3732: 82 77                    a0 = u64 [a0]
  3734: 01                       fallthrough
      :                          @264
  3735: 28                       jump @264
      :                          @265
  3736: 00                       trap
      :                          @266
  3737: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  3740: 7b 10 58                 u64 [sp + 0x58] = ra
  3743: 7b 15 50                 u64 [sp + 0x50] = s0
  3746: 7b 16 48                 u64 [sp + 0x48] = s1
  3749: 7b 19 08                 u64 [sp + 0x8] = a2
  3752: 7b 18                    u64 [sp] = a1
  3754: 98 7a 04                 a3 = a0 >> 0x4
  3757: 33 09 27                 a2 = 0x27
  3760: 53 2a 71 02 81 00        jump @269 if a3 <u 625
      :                          @267
  3766: 33 09 27                 a2 = 0x27
  3769: 95 1b 46                 a4 = sp + 0x46
  3772: 3a 08 00 00 03           a1 = u64 [0x30000]
  3777: 7b 18 18                 u64 [sp + 0x18] = a1
  3780: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  3786: 33 03 7b 14              t1 = 0x147b
  3790: 33 05 b4 00 01           s0 = 0x100b4
  3795: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  3801: 01                       fallthrough
      :                          @268
  3802: 64 74                    t2 = a0
  3804: 82 17 18                 a0 = u64 [sp + 0x18]
  3807: d6 74 07                 a0 = t2 mulhu a0
  3810: 98 77 0b                 a0 = a0 >> 0xb
  3813: 82 18 10                 a1 = u64 [sp + 0x10]
  3816: c0 87 02                 i32 t0 = a0 * a1
  3819: c8 42 0a                 a3 = t0 + t2
  3822: 97 a2 30                 t0 = a3 << 0x30
  3825: 98 28 32                 a1 = t0 >> 0x32
  3828: ca 38 08                 a1 = a1 * t1
  3831: 98 8c 11                 a5 = a1 >> 0x11
  3834: 98 88 10                 a1 = a1 >> 0x10
  3837: 84 88 fe 07              a1 = a1 & 0x7fe
  3841: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
  3844: c8 ca 0a                 a3 = a3 + a5
  3847: 97 aa 31                 a3 = a3 << 0x31
  3850: 98 aa 30                 a3 = a3 >> 0x30
  3853: c8 58 08                 a1 = a1 + s0
  3856: 7c 8c                    a5 = u8 [a1]
  3858: 7c 88 01                 a1 = u8 [a1 + 0x1]
  3861: c8 5a 0a                 a3 = a3 + s0
  3864: 7c a6 01                 s1 = u8 [a3 + 0x1]
  3867: 7c aa                    a3 = u8 [a3]
  3869: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
  3872: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
  3875: 78 b6 01                 u8 [a4 + 0x1] = s1
  3878: 78 ba                    u8 [a4] = a3
  3880: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  3883: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  3886: ac 40 ac                 jump @268 if ra <u t2
      :                          @269
  3889: 54 17 63 3b              jump @271 if a0 <=u 99
      :                          @270
  3893: 97 78 30                 a1 = a0 << 0x30
  3896: 98 88 32                 a1 = a1 >> 0x32
  3899: 96 88 7b 14              a1 = a1 * 0x147b
  3903: 98 88 11                 a1 = a1 >> 0x11
  3906: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  3909: c8 a7 07                 a0 = a0 + a3
  3912: 97 77 31                 a0 = a0 << 0x31
  3915: 98 77 30                 a0 = a0 >> 0x30
  3918: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  3921: 33 0a b4 00 01           a3 = 0x100b4
  3926: c8 a7 07                 a0 = a0 + a3
  3929: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  3932: 7c 77                    a0 = u8 [a0]
  3934: 95 1b 21                 a4 = sp + 0x21
  3937: c8 9b 0b                 a4 = a4 + a2
  3940: 78 ba 01                 u8 [a4 + 0x1] = a3
  3943: 78 b7                    u8 [a4] = a0
  3945: 64 87                    a0 = a1
  3947: 01                       fallthrough
      :                          @271
  3948: 55 17 0a 14              jump @273 if a0 >=u 10
      :                          @272
  3952: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  3955: 95 18 21                 a1 = sp + 0x21
  3958: c8 98 08                 a1 = a1 + a2
  3961: 83 77 30                 i32 a0 = a0 + 0x30
  3964: 78 87                    u8 [a1] = a0
  3966: 28 21                    jump @274
      :                          @273
  3968: 97 77 01                 a0 = a0 << 0x1
  3971: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  3974: 33 08 b4 00 01           a1 = 0x100b4
  3979: c8 87 07                 a0 = a0 + a1
  3982: 7c 78 01                 a1 = u8 [a0 + 0x1]
  3985: 7c 77                    a0 = u8 [a0]
  3987: 95 1a 21                 a3 = sp + 0x21
  3990: c8 9a 0a                 a3 = a3 + a2
  3993: 78 a8 01                 u8 [a3 + 0x1] = a1
  3996: 78 a7                    u8 [a3] = a0
  3998: 01                       fallthrough
      :                          @274
  3999: 95 1b 21                 a4 = sp + 0x21
  4002: c8 9b 0b                 a4 = a4 + a2
  4005: 9a 9c 27                 a5 = 0x27 - a2
  4008: 33 09 b0 00 01           a2 = 0x100b0
  4013: 82 17 08                 a0 = u64 [sp + 0x8]
  4016: 82 18                    a1 = u64 [sp]
  4018: 33 0a                    a3 = 0
  4020: 50 10 44 12              ra = 68, jump @276
      :                          @275 [@dyn 34]
  4024: 82 10 58                 ra = u64 [sp + 0x58]
  4027: 82 15 50                 s0 = u64 [sp + 0x50]
  4030: 82 16 48                 s1 = u64 [sp + 0x48]
  4033: 95 11 60                 sp = sp + 0x60
  4036: 32 00                    ret
      :                          @276
  4038: 95 11 98                 sp = sp + 0xffffffffffffff98
  4041: 7b 10 60                 u64 [sp + 0x60] = ra
  4044: 7b 15 58                 u64 [sp + 0x58] = s0
  4047: 7b 16 50                 u64 [sp + 0x50] = s1
  4050: 7b 1b 18                 u64 [sp + 0x18] = a4
  4053: 51 08 4f                 jump @283 if a1 == 0
      :                          @277
  4056: 80 76 34                 s1 = u32 [a0 + 0x34]
  4059: 84 68 01                 a1 = s1 & 0x1
  4062: 33 0b 2b                 a4 = 0x2b
  4065: 33 05 00 00 11           s0 = 0x110000
  4070: db 8b 05                 s0 = a4 if a1 != 0
  4073: 7b 15 28                 u64 [sp + 0x28] = s0
  4076: c8 c8 02                 t0 = a1 + a5
  4079: 84 68 04                 a1 = s1 & 0x4
  4082: 51 08 42                 jump @284 if a1 == 0
      :                          @278
  4085: 7b 19 30                 u64 [sp + 0x30] = a2
  4088: 33 08                    a1 = 0
  4090: 51 0a 1a                 jump @281 if a3 == 0
      :                          @279
  4093: 64 a5                    s0 = a3
  4095: 01                       fallthrough
      :                          @280
  4096: 7d 9b                    a4 = i8 [a2]
  4098: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  4101: 85 bb 01                 a4 = a4 ^ 0x1
  4104: c8 b8 08                 a1 = a1 + a4
  4107: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4110: 95 99 01                 a2 = a2 + 0x1
  4113: 52 05 ef                 jump @280 if s0 != 0
      :                          @281
  4116: c8 82 02                 t0 = t0 + a1
  4119: 7b 1a 38                 u64 [sp + 0x38] = a3
  4122: 82 78                    a1 = u64 [a0]
  4124: 7b 1c 20                 u64 [sp + 0x20] = a5
  4127: 52 08 23                 jump @285 if a1 != 0
      :                          @282
  4130: 28 41                    jump @290
      :                          @283
  4132: 81 76 34                 s1 = i32 [a0 + 0x34]
  4135: 95 c2 01                 t0 = a5 + 0x1
  4138: 49 11 28 2d              u64 [sp + 40] = 0x2d
  4142: 84 68 04                 a1 = s1 & 0x4
  4145: 52 08 c4                 jump @278 if a1 != 0
      :                          @284
  4148: 49 11 30                 u64 [sp + 48] = 0
  4151: 7b 1a 38                 u64 [sp + 0x38] = a3
  4154: 82 78                    a1 = u64 [a0]
  4156: 7b 1c 20                 u64 [sp + 0x20] = a5
  4159: 51 08 24                 jump @290 if a1 == 0
      :                          @285
  4162: 82 75 08                 s0 = u64 [a0 + 0x8]
  4165: ae 52 1e                 jump @290 if t0 >=u s0
      :                          @286
  4168: 84 66 08                 s1 = s1 & 0x8
  4171: 52 06 50                 jump @293 if s1 != 0
      :                          @287
  4174: 7c 79 38                 a2 = u8 [a0 + 0x38]
  4177: c9 25 0a                 a3 = s0 - t0
  4180: 5a 19 01 a1 00           jump @300 if a2 >s 1
      :                          @288
  4185: 52 09 ae 00              jump @302 if a2 != 0
      :                          @289
  4189: 7b 1a 10                 u64 [sp + 0x10] = a3
  4192: 28 ad 00                 jump @303
      :                          @290
  4195: 82 75 20                 s0 = u64 [a0 + 0x20]
  4198: 82 76 28                 s1 = u64 [a0 + 0x28]
  4201: 64 57                    a0 = s0
  4203: 64 68                    a1 = s1
  4205: 82 19 28                 a2 = u64 [sp + 0x28]
  4208: 82 1a 30                 a3 = u64 [sp + 0x30]
  4211: 82 1b 38                 a4 = u64 [sp + 0x38]
  4214: 50 10 46 6d 01           ra = 70, jump @323
      :                          @291 [@dyn 35]
  4219: 33 08 01                 a1 = 0x1
  4222: 52 07 bc 00              jump @308 if a0 != 0
      :                          @292
  4226: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4229: 64 57                    a0 = s0
  4231: 82 18 18                 a1 = u64 [sp + 0x18]
  4234: 82 19 20                 a2 = u64 [sp + 0x20]
  4237: 82 10 60                 ra = u64 [sp + 0x60]
  4240: 82 15 58                 s0 = u64 [sp + 0x58]
  4243: 82 16 50                 s1 = u64 [sp + 0x50]
  4246: 95 11 68                 sp = sp + 0x68
  4249: 32 0c                    jump [a5]
      :                          @293
  4251: 7b 12 40                 u64 [sp + 0x40] = t0
  4254: 81 78 30                 a1 = i32 [a0 + 0x30]
  4257: 7b 18 08                 u64 [sp + 0x8] = a1
  4260: 7c 79 38                 a2 = u8 [a0 + 0x38]
  4263: 7b 19                    u64 [sp] = a2
  4265: 82 79 20                 a2 = u64 [a0 + 0x20]
  4268: 82 76 28                 s1 = u64 [a0 + 0x28]
  4271: 48 17 30 30              u32 [a0 + 48] = 0x30
  4275: 7b 17 10                 u64 [sp + 0x10] = a0
  4278: 46 17 38 01              u8 [a0 + 56] = 0x1
  4282: 7b 19 48                 u64 [sp + 0x48] = a2
  4285: 64 97                    a0 = a2
  4287: 64 68                    a1 = s1
  4289: 82 19 28                 a2 = u64 [sp + 0x28]
  4292: 82 1a 30                 a3 = u64 [sp + 0x30]
  4295: 82 1b 38                 a4 = u64 [sp + 0x38]
  4298: 50 10 48 19 01           ra = 72, jump @323
      :                          @294 [@dyn 36]
  4303: 52 07 67                 jump @307 if a0 != 0
      :                          @295
  4306: 82 17 40                 a0 = u64 [sp + 0x40]
  4309: c9 75 05                 s0 = s0 - a0
  4312: 95 55 01                 s0 = s0 + 0x1
  4315: 01                       fallthrough
      :                          @296
  4316: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4319: 51 05 c6 00              jump @318 if s0 == 0
      :                          @297
  4323: 82 69 20                 a2 = u64 [s1 + 0x20]
  4326: 33 08 30                 a1 = 0x30
  4329: 82 17 48                 a0 = u64 [sp + 0x48]
  4332: b4 90 01 4a              ra = 74, jump [a2]
      :                          @298 [@dyn 37]
  4336: 51 07 ec                 jump @296 if a0 == 0
      :                          @299
  4339: 28 43                    jump @307
      :                          @300
  4341: 52 19 02 12              jump @302 if a2 != 2
      :                          @301
  4345: 98 a9 01                 a2 = a3 >> 0x1
  4348: 95 a8 01                 a1 = a3 + 0x1
  4351: 98 88 01                 a1 = a1 >> 0x1
  4354: 7b 18 10                 u64 [sp + 0x10] = a1
  4357: 28 08                    jump @303
      :                          @302
  4359: 64 a9                    a2 = a3
  4361: 49 11 10                 u64 [sp + 16] = 0
  4364: 01                       fallthrough
      :                          @303
  4365: 82 78 20                 a1 = u64 [a0 + 0x20]
  4368: 7b 18 48                 u64 [sp + 0x48] = a1
  4371: 82 76 28                 s1 = u64 [a0 + 0x28]
  4374: 81 77 30                 a0 = i32 [a0 + 0x30]
  4377: 7b 17 40                 u64 [sp + 0x40] = a0
  4380: 95 95 01                 s0 = a2 + 0x1
  4383: 01                       fallthrough
      :                          @304
  4384: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4387: 51 05 27                 jump @309 if s0 == 0
      :                          @305
  4390: 82 69 20                 a2 = u64 [s1 + 0x20]
  4393: 82 17 48                 a0 = u64 [sp + 0x48]
  4396: 82 18 40                 a1 = u64 [sp + 0x40]
  4399: b4 90 01 4c              ra = 76, jump [a2]
      :                          @306 [@dyn 38]
  4403: 51 07 ed                 jump @304 if a0 == 0
      :                          @307
  4406: 33 08 01                 a1 = 0x1
  4409: 01                       fallthrough
      :                          @308
  4410: 64 87                    a0 = a1
  4412: 82 10 60                 ra = u64 [sp + 0x60]
  4415: 82 15 58                 s0 = u64 [sp + 0x58]
  4418: 82 16 50                 s1 = u64 [sp + 0x50]
  4421: 95 11 68                 sp = sp + 0x68
  4424: 32 00                    ret
      :                          @309
  4426: 82 15 48                 s0 = u64 [sp + 0x48]
  4429: 64 57                    a0 = s0
  4431: 64 68                    a1 = s1
  4433: 82 19 28                 a2 = u64 [sp + 0x28]
  4436: 82 1a 30                 a3 = u64 [sp + 0x30]
  4439: 82 1b 38                 a4 = u64 [sp + 0x38]
  4442: 50 10 4e 89 00           ra = 78, jump @323
      :                          @310 [@dyn 39]
  4447: 33 08 01                 a1 = 0x1
  4450: 52 07 d8                 jump @308 if a0 != 0
      :                          @311
  4453: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4456: 64 57                    a0 = s0
  4458: 82 18 18                 a1 = u64 [sp + 0x18]
  4461: 82 19 20                 a2 = u64 [sp + 0x20]
  4464: b4 a0 01 50              ra = 80, jump [a3]
      :                          @312 [@dyn 40]
  4468: 33 08 01                 a1 = 0x1
  4471: 52 07 c3                 jump @308 if a0 != 0
      :                          @313
  4474: 82 17 10                 a0 = u64 [sp + 0x10]
  4477: 9a 77                    a0 = -a0
  4479: 7b 17 38                 u64 [sp + 0x38] = a0
  4482: 33 05 ff                 s0 = 0xffffffffffffffff
  4485: 01                       fallthrough
      :                          @314
  4486: 82 17 38                 a0 = u64 [sp + 0x38]
  4489: c8 57 07                 a0 = a0 + s0
  4492: 51 17 ff 42              jump @321 if a0 == 4294967295
      :                          @315
  4496: 82 69 20                 a2 = u64 [s1 + 0x20]
  4499: 82 17 48                 a0 = u64 [sp + 0x48]
  4502: 82 18 40                 a1 = u64 [sp + 0x40]
  4505: b4 90 01 52              ra = 82, jump [a2]
      :                          @316 [@dyn 41]
  4509: 95 55 01                 s0 = s0 + 0x1
  4512: 51 07 e6                 jump @314 if a0 == 0
      :                          @317
  4515: 28 37                    jump @322
      :                          @318
  4517: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4520: 82 17 48                 a0 = u64 [sp + 0x48]
  4523: 82 18 18                 a1 = u64 [sp + 0x18]
  4526: 82 19 20                 a2 = u64 [sp + 0x20]
  4529: b4 a0 01 54              ra = 84, jump [a3]
      :                          @319 [@dyn 42]
  4533: 33 08 01                 a1 = 0x1
  4536: 52 07 82                 jump @308 if a0 != 0
      :                          @320
  4539: 33 08                    a1 = 0
  4541: 82 17 10                 a0 = u64 [sp + 0x10]
  4544: 82 19 08                 a2 = u64 [sp + 0x8]
  4547: 7a 79 30                 u32 [a0 + 0x30] = a2
  4550: 82 19                    a2 = u64 [sp]
  4552: 78 79 38                 u8 [a0 + 0x38] = a2
  4555: 28 6f ff                 jump @308
      :                          @321
  4558: 82 15 10                 s0 = u64 [sp + 0x10]
  4561: 82 17 10                 a0 = u64 [sp + 0x10]
  4564: d8 75 08                 a1 = s0 <u a0
  4567: 28 63 ff                 jump @308
      :                          @322
  4570: 82 17 10                 a0 = u64 [sp + 0x10]
  4573: d8 75 08                 a1 = s0 <u a0
  4576: 28 5a ff                 jump @308
      :                          @323
  4579: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4582: 7b 10 20                 u64 [sp + 0x20] = ra
  4585: 7b 15 18                 u64 [sp + 0x18] = s0
  4588: 7b 16 10                 u64 [sp + 0x10] = s1
  4591: 83 9c                    i32 a5 = a2 + 0
  4593: 33 02 00 00 11           t0 = 0x110000
  4598: 64 a6                    s1 = a3
  4600: 64 85                    s0 = a1
  4602: 64 7a                    a3 = a0
  4604: aa 2c 20                 jump @326 if a5 == t0
      :                          @324
  4607: 82 5c 20                 a5 = u64 [s0 + 0x20]
  4610: 64 a7                    a0 = a3
  4612: 64 98                    a1 = a2
  4614: 7b 1b 08                 u64 [sp + 0x8] = a4
  4617: 7b 1a                    u64 [sp] = a3
  4619: b4 c0 01 56              ra = 86, jump [a5]
      :                          @325 [@dyn 43]
  4623: 82 1a                    a3 = u64 [sp]
  4625: 82 1b 08                 a4 = u64 [sp + 0x8]
  4628: 64 78                    a1 = a0
  4630: 33 07 01                 a0 = 0x1
  4633: 52 08 20                 jump @329 if a1 != 0
      :                          @326
  4636: 51 06 1a                 jump @328 if s1 == 0
      :                          @327
  4639: 82 5c 18                 a5 = u64 [s0 + 0x18]
  4642: 64 a7                    a0 = a3
  4644: 64 68                    a1 = s1
  4646: 64 b9                    a2 = a4
  4648: 82 10 20                 ra = u64 [sp + 0x20]
  4651: 82 15 18                 s0 = u64 [sp + 0x18]
  4654: 82 16 10                 s1 = u64 [sp + 0x10]
  4657: 95 11 28                 sp = sp + 0x28
  4660: 32 0c                    jump [a5]
      :                          @328
  4662: 33 07                    a0 = 0
  4664: 01                       fallthrough
      :                          @329
  4665: 82 10 20                 ra = u64 [sp + 0x20]
  4668: 82 15 18                 s0 = u64 [sp + 0x18]
  4671: 82 16 10                 s1 = u64 [sp + 0x10]
  4674: 95 11 28                 sp = sp + 0x28
  4677: 32 00                    ret
      :                          @330
  4679: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4682: 7b 10 40                 u64 [sp + 0x40] = ra
  4685: 7b 15 38                 u64 [sp + 0x38] = s0
  4688: 7b 16 30                 u64 [sp + 0x30] = s1
  4691: 82 74                    t2 = u64 [a0]
  4693: 82 7a 10                 a3 = u64 [a0 + 0x10]
  4696: d4 a4 0b                 a4 = t2 | a3
  4699: 64 93                    t1 = a2
  4701: 64 85                    s0 = a1
  4703: 51 0b a9 03              jump @402 if a4 == 0
      :                          @331
  4707: 7b 17 08                 u64 [sp + 0x8] = a0
  4710: 51 0a f4 00              jump @350 if a3 == 0
      :                          @332
  4714: 82 7c 18                 a5 = u64 [a0 + 0x18]
  4717: 33 0a                    a3 = 0
  4719: 7b 13 18                 u64 [sp + 0x18] = t1
  4722: c8 53 03                 t1 = t1 + s0
  4725: 95 cc 01                 a5 = a5 + 0x1
  4728: 33 00 00 00 11           ra = 0x110000
  4733: 33 07 df 00              a0 = 0xdf
  4737: 7b 15 10                 u64 [sp + 0x10] = s0
  4740: 64 59                    a2 = s0
  4742: 28 12                    jump @335
      :                          @333
  4744: 95 98 01                 a1 = a2 + 0x1
  4747: 01                       fallthrough
      :                          @334
  4748: c9 9a 0a                 a3 = a3 - a2
  4751: c8 8a 0a                 a3 = a3 + a1
  4754: 64 89                    a2 = a1
  4756: aa 05 bc 00              jump @349 if s0 == ra
      :                          @335
  4760: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4763: 51 0c 68                 jump @344 if a5 == 0
      :                          @336
  4766: aa 39 b2 00              jump @349 if a2 == t1
      :                          @337
  4770: 7d 98                    a1 = i8 [a2]
  4772: 84 85 ff 00              s0 = a1 & 0xff
  4776: 59 08 e0                 jump @333 if a1 >=s 0
      :                          @338
  4779: 7c 98 01                 a1 = u8 [a2 + 0x1]
  4782: 84 56 1f                 s1 = s0 & 0x1f
  4785: 84 8b 3f                 a4 = a1 & 0x3f
  4788: ae 57 35                 jump @342 if a0 >=u s0
      :                          @339
  4791: 7c 98 02                 a1 = u8 [a2 + 0x2]
  4794: 97 bb 06                 a4 = a4 << 0x6
  4797: 84 88 3f                 a1 = a1 & 0x3f
  4800: d4 8b 02                 t0 = a4 | a1
  4803: 53 25 f0 00 31           jump @343 if s0 <u 240
      :                          @340
  4808: 7c 98 03                 a1 = u8 [a2 + 0x3]
  4811: 97 66 3d                 s1 = s1 << 0x3d
  4814: 98 66 2b                 s1 = s1 >> 0x2b
  4817: 97 22 06                 t0 = t0 << 0x6
  4820: 84 88 3f                 a1 = a1 & 0x3f
  4823: d4 82 05                 s0 = t0 | a1
  4826: d4 65 05                 s0 = s0 | s1
  4829: aa 05 73                 jump @349 if s0 == ra
      :                          @341
  4832: 95 98 04                 a1 = a2 + 0x4
  4835: 33 07 df 00              a0 = 0xdf
  4839: 28 a5                    jump @334
      :                          @342
  4841: 95 98 02                 a1 = a2 + 0x2
  4844: 97 65 06                 s0 = s1 << 0x6
  4847: d4 b5 05                 s0 = s0 | a4
  4850: 28 9a                    jump @334
      :                          @343
  4852: 95 98 03                 a1 = a2 + 0x3
  4855: 97 66 0c                 s1 = s1 << 0xc
  4858: d4 62 05                 s0 = t0 | s1
  4861: 33 07 df 00              a0 = 0xdf
  4865: 28 8b                    jump @334
      :                          @344
  4867: aa 39 4d                 jump @349 if a2 == t1
      :                          @345
  4870: 7d 98                    a1 = i8 [a2]
  4872: 59 08 b5 02              jump @392 if a1 >=s 0
      :                          @346
  4876: 84 88 ff 00              a1 = a1 & 0xff
  4880: 33 0b e0 00              a4 = 0xe0
  4884: ac b8 a9 02              jump @392 if a1 <u a4
      :                          @347
  4888: 33 0b f0 00              a4 = 0xf0
  4892: ac b8 a1 02              jump @392 if a1 <u a4
      :                          @348
  4896: 7c 9b 01                 a4 = u8 [a2 + 0x1]
  4899: 7c 9c 02                 a5 = u8 [a2 + 0x2]
  4902: 84 bb 3f                 a4 = a4 & 0x3f
  4905: 84 cc 3f                 a5 = a5 & 0x3f
  4908: 7c 99 03                 a2 = u8 [a2 + 0x3]
  4911: 97 88 3d                 a1 = a1 << 0x3d
  4914: 98 88 2b                 a1 = a1 >> 0x2b
  4917: 97 bb 0c                 a4 = a4 << 0xc
  4920: 97 cc 06                 a5 = a5 << 0x6
  4923: d4 cb 0b                 a4 = a4 | a5
  4926: 84 99 3f                 a2 = a2 & 0x3f
  4929: d4 b9 09                 a2 = a2 | a4
  4932: d4 98 08                 a1 = a1 | a2
  4935: 33 09 00 00 11           a2 = 0x110000
  4940: ab 98 71 02              jump @392 if a1 != a2
      :                          @349
  4944: 82 13 18                 t1 = u64 [sp + 0x18]
  4947: 82 15 10                 s0 = u64 [sp + 0x10]
  4950: 82 17 08                 a0 = u64 [sp + 0x8]
  4953: 01                       fallthrough
      :                          @350
  4954: 51 04 ae 02              jump @402 if t2 == 0
      :                          @351
  4958: 82 7c 08                 a5 = u64 [a0 + 0x8]
  4961: 33 08 20                 a1 = 0x20
  4964: 7b 13 18                 u64 [sp + 0x18] = t1
  4967: 7b 15 10                 u64 [sp + 0x10] = s0
  4970: ae 83 28                 jump @357 if t1 >=u a1
      :                          @352
  4973: 33 09                    a2 = 0
  4975: 51 03 1c                 jump @355 if t1 == 0
      :                          @353
  4978: 64 58                    a1 = s0
  4980: 64 3a                    a3 = t1
  4982: 01                       fallthrough
      :                          @354
  4983: 7d 8b                    a4 = i8 [a1]
  4985: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  4988: 85 bb 01                 a4 = a4 ^ 0x1
  4991: c8 b9 09                 a2 = a2 + a4
  4994: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  4997: 95 88 01                 a1 = a1 + 0x1
  5000: 52 0a ef                 jump @354 if a3 != 0
      :                          @355
  5003: ac c9 95 01              jump @374 if a2 <u a5
      :                          @356
  5007: 28 79 02                 jump @402
      :                          @357
  5010: 7b 1c                    u64 [sp] = a5
  5012: 95 58 07                 a1 = s0 + 0x7
  5015: 64 5c                    a5 = s0
  5017: 84 85 f8                 s0 = a1 & 0xfffffffffffffff8
  5020: c9 5c 0b                 a4 = a5 - s0
  5023: c8 b3 02                 t0 = t1 + a4
  5026: 84 2a 07                 a3 = t0 & 0x7
  5029: 33 08                    a1 = 0
  5031: aa c5 17                 jump @359 if s0 == a5
      :                          @358
  5034: 7d c6                    s1 = i8 [a5]
  5036: 89 66 c0                 s1 = s1 <s 0xffffffffffffffc0
  5039: 85 69 01                 a2 = s1 ^ 0x1
  5042: c8 98 08                 a1 = a1 + a2
  5045: 95 bb 01                 a4 = a4 + 0x1
  5048: 95 cc 01                 a5 = a5 + 0x1
  5051: 52 0b ef                 jump @358 if a4 != 0
      :                          @359
  5054: 33 0b                    a4 = 0
  5056: 51 0a 1e                 jump @362 if a3 == 0
      :                          @360
  5059: 84 2c f8                 a5 = t0 & 0xfffffffffffffff8
  5062: c8 5c 0c                 a5 = a5 + s0
  5065: 01                       fallthrough
      :                          @361
  5066: 7d c7                    a0 = i8 [a5]
  5068: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
  5071: 85 77 01                 a0 = a0 ^ 0x1
  5074: c8 7b 0b                 a4 = a4 + a0
  5077: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  5080: 95 cc 01                 a5 = a5 + 0x1
  5083: 52 0a ef                 jump @361 if a3 != 0
      :                          @362
  5086: 98 20 03                 ra = t0 >> 0x3
  5089: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
  5099: 14 07 ff 00 ff 00 ff 00 ff 00 a0 = 0xff00ff00ff00ff
  5109: 7b 17 28                 u64 [sp + 0x28] = a0
  5112: 14 04 00 00 00 00 01 00 01 00 t2 = 0x1000100000000
  5122: 14 07 01 00 01 00 01 00 01 00 a0 = 0x1000100010001
  5132: 7b 17 20                 u64 [sp + 0x20] = a0
  5135: c8 8b 09                 a2 = a4 + a1
  5138: 28 2d                    jump @364
      :                          @363
  5140: 97 45 03                 s0 = t2 << 0x3
  5143: c8 35 05                 s0 = s0 + t1
  5146: c9 40 00                 ra = ra - t2
  5149: 84 46 03                 s1 = t2 & 0x3
  5152: 82 1b 28                 a4 = u64 [sp + 0x28]
  5155: d2 b2 07                 a0 = t0 & a4
  5158: 98 28 08                 a1 = t0 >> 0x8
  5161: d2 b8 08                 a1 = a1 & a4
  5164: c8 87 07                 a0 = a0 + a1
  5167: 82 18 20                 a1 = u64 [sp + 0x20]
  5170: ca 87 07                 a0 = a0 * a1
  5173: 98 77 30                 a0 = a0 >> 0x30
  5176: c8 79 09                 a2 = a2 + a0
  5179: 52 06 8e 00              jump @371 if s1 != 0
      :                          @364
  5183: 51 00 79                 jump @369 if ra == 0
      :                          @365
  5186: 64 53                    t1 = s0
  5188: 33 07 c0 00              a0 = 0xc0
  5192: e6 70 04                 t2 = minu(ra, a0)
  5195: 33 02                    t0 = 0
  5197: 98 48 02                 a1 = t2 >> 0x2
  5200: 51 08 c4                 jump @363 if a1 == 0
      :                          @366
  5203: 97 88 05                 a1 = a1 << 0x5
  5206: c8 38 08                 a1 = a1 + t1
  5209: 64 36                    s1 = t1
  5211: 01                       fallthrough
      :                          @367
  5212: 82 67                    a0 = u64 [s1]
  5214: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
  5217: 98 cc 07                 a5 = a5 >> 0x7
  5220: 98 77 06                 a0 = a0 >> 0x6
  5223: 82 6b 08                 a4 = u64 [s1 + 0x8]
  5226: d4 c7 07                 a0 = a0 | a5
  5229: d2 a7 07                 a0 = a0 & a3
  5232: c8 27 07                 a0 = a0 + t0
  5235: 85 bc ff                 a5 = a4 ^ 0xffffffffffffffff
  5238: 98 cc 07                 a5 = a5 >> 0x7
  5241: 82 65 10                 s0 = u64 [s1 + 0x10]
  5244: 98 bb 06                 a4 = a4 >> 0x6
  5247: d4 cb 0b                 a4 = a4 | a5
  5250: d2 ab 0b                 a4 = a4 & a3
  5253: 85 5c ff                 a5 = s0 ^ 0xffffffffffffffff
  5256: 98 cc 07                 a5 = a5 >> 0x7
  5259: 98 55 06                 s0 = s0 >> 0x6
  5262: d4 5c 0c                 a5 = a5 | s0
  5265: 82 65 18                 s0 = u64 [s1 + 0x18]
  5268: d2 ac 0c                 a5 = a5 & a3
  5271: c8 cb 0b                 a4 = a4 + a5
  5274: c8 b7 07                 a0 = a0 + a4
  5277: 85 5b ff                 a4 = s0 ^ 0xffffffffffffffff
  5280: 98 bb 07                 a4 = a4 >> 0x7
  5283: 98 55 06                 s0 = s0 >> 0x6
  5286: d4 5b 0b                 a4 = a4 | s0
  5289: d2 ab 0b                 a4 = a4 & a3
  5292: 95 66 20                 s1 = s1 + 0x20
  5295: c8 7b 02                 t0 = a4 + a0
  5298: ab 86 aa                 jump @367 if s1 != a1
      :                          @368
  5301: 28 5f ff                 jump @363
      :                          @369
  5304: 82 13 18                 t1 = u64 [sp + 0x18]
  5307: 82 15 10                 s0 = u64 [sp + 0x10]
  5310: 82 17 08                 a0 = u64 [sp + 0x8]
  5313: 82 1c                    a5 = u64 [sp]
  5315: ac c9 5d                 jump @374 if a2 <u a5
      :                          @370
  5318: 28 42 01                 jump @402
      :                          @371
  5321: 33 08                    a1 = 0
  5323: 84 47 fc 00              a0 = t2 & 0xfc
  5327: 97 77 03                 a0 = a0 << 0x3
  5330: c8 73 0b                 a4 = t1 + a0
  5333: 97 66 03                 s1 = s1 << 0x3
  5336: 82 13 18                 t1 = u64 [sp + 0x18]
  5339: 82 15 10                 s0 = u64 [sp + 0x10]
  5342: 01                       fallthrough
      :                          @372
  5343: 82 b7                    a0 = u64 [a4]
  5345: 95 bb 08                 a4 = a4 + 0x8
  5348: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
  5351: 98 cc 07                 a5 = a5 >> 0x7
  5354: 98 77 06                 a0 = a0 >> 0x6
  5357: d4 c7 07                 a0 = a0 | a5
  5360: d2 a7 07                 a0 = a0 & a3
  5363: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
  5366: c8 78 08                 a1 = a1 + a0
  5369: 52 06 e6                 jump @372 if s1 != 0
      :                          @373
  5372: 82 1a 28                 a3 = u64 [sp + 0x28]
  5375: d2 a8 07                 a0 = a1 & a3
  5378: 98 88 08                 a1 = a1 >> 0x8
  5381: d2 a8 08                 a1 = a1 & a3
  5384: c8 87 07                 a0 = a0 + a1
  5387: 82 18 20                 a1 = u64 [sp + 0x20]
  5390: ca 87 07                 a0 = a0 * a1
  5393: 98 77 30                 a0 = a0 >> 0x30
  5396: c8 79 09                 a2 = a2 + a0
  5399: 82 17 08                 a0 = u64 [sp + 0x8]
  5402: 82 1c                    a5 = u64 [sp]
  5404: ae c9 ec 00              jump @402 if a2 >=u a5
      :                          @374
  5408: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  5411: 33 08                    a1 = 0
  5413: 33 0b 01                 a4 = 0x1
  5416: c9 9c 0c                 a5 = a5 - a2
  5419: ad ab 0c                 jump @377 if a4 <s a3
      :                          @375
  5422: 51 0a 1a                 jump @379 if a3 == 0
      :                          @376
  5425: 64 c8                    a1 = a5
  5427: 49 01                    u64 [sp + 0] = 0
  5429: 28 16                    jump @380
      :                          @377
  5431: 52 1a 02 11              jump @379 if a3 != 2
      :                          @378
  5435: 98 c8 01                 a1 = a5 >> 0x1
  5438: 95 c9 01                 a2 = a5 + 0x1
  5441: 98 99 01                 a2 = a2 >> 0x1
  5444: 7b 19                    u64 [sp] = a2
  5446: 28 05                    jump @380
      :                          @379
  5448: 7b 1c                    u64 [sp] = a5
  5450: 01                       fallthrough
      :                          @380
  5451: 82 79 20                 a2 = u64 [a0 + 0x20]
  5454: 7b 19 28                 u64 [sp + 0x28] = a2
  5457: 82 75 28                 s0 = u64 [a0 + 0x28]
  5460: 81 77 30                 a0 = i32 [a0 + 0x30]
  5463: 7b 17 20                 u64 [sp + 0x20] = a0
  5466: 95 86 01                 s1 = a1 + 0x1
  5469: 01                       fallthrough
      :                          @381
  5470: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  5473: 51 06 18                 jump @385 if s1 == 0
      :                          @382
  5476: 82 59 20                 a2 = u64 [s0 + 0x20]
  5479: 82 17 28                 a0 = u64 [sp + 0x28]
  5482: 82 18 20                 a1 = u64 [sp + 0x20]
  5485: b4 90 01 58              ra = 88, jump [a2]
      :                          @383 [@dyn 44]
  5489: 51 07 ed                 jump @381 if a0 == 0
      :                          @384
  5492: 33 07 01                 a0 = 0x1
  5495: 28 70                    jump @398
      :                          @385
  5497: 82 5a 18                 a3 = u64 [s0 + 0x18]
  5500: 82 17 28                 a0 = u64 [sp + 0x28]
  5503: 82 18 10                 a1 = u64 [sp + 0x10]
  5506: 82 19 18                 a2 = u64 [sp + 0x18]
  5509: b4 a0 01 5a              ra = 90, jump [a3]
      :                          @386 [@dyn 45]
  5513: 64 78                    a1 = a0
  5515: 33 07 01                 a0 = 0x1
  5518: 52 08 59                 jump @398 if a1 != 0
      :                          @387
  5521: 82 17                    a0 = u64 [sp]
  5523: 9a 77                    a0 = -a0
  5525: 7b 17 18                 u64 [sp + 0x18] = a0
  5528: 33 06 ff                 s1 = 0xffffffffffffffff
  5531: 01                       fallthrough
      :                          @388
  5532: 82 17 18                 a0 = u64 [sp + 0x18]
  5535: c8 67 07                 a0 = a0 + s1
  5538: 33 08 ff                 a1 = 0xffffffffffffffff
  5541: aa 87 33                 jump @396 if a0 == a1
      :                          @389
  5544: 82 59 20                 a2 = u64 [s0 + 0x20]
  5547: 82 17 28                 a0 = u64 [sp + 0x28]
  5550: 82 18 20                 a1 = u64 [sp + 0x20]
  5553: b4 90 01 5c              ra = 92, jump [a2]
      :                          @390 [@dyn 46]
  5557: 95 66 01                 s1 = s1 + 0x1
  5560: 51 07 e4                 jump @388 if a0 == 0
      :                          @391
  5563: 28 26                    jump @397
      :                          @392
  5565: 82 13 18                 t1 = u64 [sp + 0x18]
  5568: 82 15 10                 s0 = u64 [sp + 0x10]
  5571: 51 0a 35                 jump @400 if a3 == 0
      :                          @393
  5574: ae 3a 2f                 jump @399 if a3 >=u t1
      :                          @394
  5577: c8 a5 08                 a1 = s0 + a3
  5580: 7d 88                    a1 = i8 [a1]
  5582: 33 09 c0                 a2 = 0xffffffffffffffc0
  5585: af 98 27                 jump @400 if a1 >=s a2
      :                          @395
  5588: 33 08                    a1 = 0
  5590: 28 25                    jump @401
      :                          @396
  5592: 82 16                    s1 = u64 [sp]
  5594: 82 17                    a0 = u64 [sp]
  5596: d8 76 07                 a0 = s1 <u a0
  5599: 28 08                    jump @398
      :                          @397
  5601: 82 17                    a0 = u64 [sp]
  5603: d8 76 07                 a0 = s1 <u a0
  5606: 01                       fallthrough
      :                          @398
  5607: 82 10 40                 ra = u64 [sp + 0x40]
  5610: 82 15 38                 s0 = u64 [sp + 0x38]
  5613: 82 16 30                 s1 = u64 [sp + 0x30]
  5616: 95 11 48                 sp = sp + 0x48
  5619: 32 00                    ret
      :                          @399
  5621: ab 3a df                 jump @395 if a3 != t1
      :                          @400
  5624: 64 58                    a1 = s0
  5626: 01                       fallthrough
      :                          @401
  5627: 82 17 08                 a0 = u64 [sp + 0x8]
  5630: db 8a 03                 t1 = a3 if a1 != 0
  5633: db 88 05                 s0 = a1 if a1 != 0
  5636: 52 04 5a fd              jump @351 if t2 != 0
      :                          @402
  5640: 82 78 28                 a1 = u64 [a0 + 0x28]
  5643: 82 77 20                 a0 = u64 [a0 + 0x20]
  5646: 82 8c 18                 a5 = u64 [a1 + 0x18]
  5649: 64 58                    a1 = s0
  5651: 64 39                    a2 = t1
  5653: 82 10 40                 ra = u64 [sp + 0x40]
  5656: 82 15 38                 s0 = u64 [sp + 0x38]
  5659: 82 16 30                 s1 = u64 [sp + 0x30]
  5662: 95 11 48                 sp = sp + 0x48
  5665: 32 0c                    jump [a5]
      :                          @403
  5667: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5671: 7b 10 80 00              u64 [sp + 0x80] = ra
  5675: 7b 15 78                 u64 [sp + 0x78] = s0
  5678: 7b 16 70                 u64 [sp + 0x70] = s1
  5681: 49 11 60 20              u64 [sp + 96] = 0x20
  5685: 33 09 03                 a2 = 0x3
  5688: 78 19 68                 u8 [sp + 0x68] = a2
  5691: 49 11 30                 u64 [sp + 48] = 0
  5694: 49 11 40                 u64 [sp + 64] = 0
  5697: 82 86 20                 s1 = u64 [a1 + 0x20]
  5700: 7b 17 50                 u64 [sp + 0x50] = a0
  5703: 33 07 80 00 01           a0 = 0x10080
  5708: 7b 17 58                 u64 [sp + 0x58] = a0
  5711: 51 06 06 01              jump @425 if s1 == 0
      :                          @404
  5715: 82 87 28                 a0 = u64 [a1 + 0x28]
  5718: 51 07 73 01              jump @435 if a0 == 0
      :                          @405
  5722: 33 09                    a2 = 0
  5724: 82 85                    s0 = u64 [a1]
  5726: 7b 18 08                 u64 [sp + 0x8] = a1
  5729: 82 88 10                 a1 = u64 [a1 + 0x10]
  5732: 7b 18 18                 u64 [sp + 0x18] = a1
  5735: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5738: 97 88 03                 a1 = a1 << 0x3
  5741: 98 88 03                 a1 = a1 >> 0x3
  5744: 95 88 01                 a1 = a1 + 0x1
  5747: 7b 18                    u64 [sp] = a1
  5749: 95 55 08                 s0 = s0 + 0x8
  5752: 96 78 38                 a1 = a0 * 0x38
  5755: 95 66 18                 s1 = s1 + 0x18
  5758: 33 07 42                 a0 = 0x42
  5761: 7b 17 10                 u64 [sp + 0x10] = a0
  5764: 01                       fallthrough
      :                          @406
  5765: 7b 18 20                 u64 [sp + 0x20] = a1
  5768: 7b 19 28                 u64 [sp + 0x28] = a2
  5771: 82 59                    a2 = u64 [s0]
  5773: 51 09 17                 jump @409 if a2 == 0
      :                          @407
  5776: 82 1a 58                 a3 = u64 [sp + 0x58]
  5779: 82 17 50                 a0 = u64 [sp + 0x50]
  5782: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5785: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5788: b4 a0 01 5e              ra = 94, jump [a3]
      :                          @408 [@dyn 47]
  5792: 52 07 4e 01              jump @438 if a0 != 0
      :                          @409
  5796: 81 67 10                 a0 = i32 [s1 + 0x10]
  5799: 7a 17 60                 u32 [sp + 0x60] = a0
  5802: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5805: 78 17 68                 u8 [sp + 0x68] = a0
  5808: 81 67 14                 a0 = i32 [s1 + 0x14]
  5811: 7a 17 64                 u32 [sp + 0x64] = a0
  5814: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5817: 82 67                    a0 = u64 [s1]
  5819: 51 08 26                 jump @414 if a1 == 0
      :                          @410
  5822: 52 18 01 16              jump @412 if a1 != 1
      :                          @411
  5826: 97 77 04                 a0 = a0 << 0x4
  5829: 82 18 18                 a1 = u64 [sp + 0x18]
  5832: c8 87 07                 a0 = a0 + a1
  5835: 82 78 08                 a1 = u64 [a0 + 0x8]
  5838: 82 19 10                 a2 = u64 [sp + 0x10]
  5841: aa 98 07                 jump @413 if a1 == a2
      :                          @412
  5844: 33 08                    a1 = 0
  5846: 28 0f                    jump @415
      :                          @413
  5848: 82 77                    a0 = u64 [a0]
  5850: 82 77                    a0 = u64 [a0]
  5852: 33 08 01                 a1 = 0x1
  5855: 28 06                    jump @415
      :                          @414
  5857: 33 08 01                 a1 = 0x1
  5860: 01                       fallthrough
      :                          @415
  5861: 7b 18 30                 u64 [sp + 0x30] = a1
  5864: 7b 17 38                 u64 [sp + 0x38] = a0
  5867: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5870: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5873: 51 08 26                 jump @420 if a1 == 0
      :                          @416
  5876: 52 18 01 16              jump @418 if a1 != 1
      :                          @417
  5880: 97 77 04                 a0 = a0 << 0x4
  5883: 82 18 18                 a1 = u64 [sp + 0x18]
  5886: c8 87 07                 a0 = a0 + a1
  5889: 82 78 08                 a1 = u64 [a0 + 0x8]
  5892: 82 19 10                 a2 = u64 [sp + 0x10]
  5895: aa 98 07                 jump @419 if a1 == a2
      :                          @418
  5898: 33 08                    a1 = 0
  5900: 28 0f                    jump @421
      :                          @419
  5902: 82 77                    a0 = u64 [a0]
  5904: 82 77                    a0 = u64 [a0]
  5906: 33 08 01                 a1 = 0x1
  5909: 28 06                    jump @421
      :                          @420
  5911: 33 08 01                 a1 = 0x1
  5914: 01                       fallthrough
      :                          @421
  5915: 7b 18 40                 u64 [sp + 0x40] = a1
  5918: 7b 17 48                 u64 [sp + 0x48] = a0
  5921: 82 67 08                 a0 = u64 [s1 + 0x8]
  5924: 97 77 04                 a0 = a0 << 0x4
  5927: 82 18 18                 a1 = u64 [sp + 0x18]
  5930: c8 78 08                 a1 = a1 + a0
  5933: 82 87                    a0 = u64 [a1]
  5935: 82 89 08                 a2 = u64 [a1 + 0x8]
  5938: 95 18 30                 a1 = sp + 0x30
  5941: b4 90 01 60              ra = 96, jump [a2]
      :                          @422 [@dyn 48]
  5945: 52 07 b5 00              jump @438 if a0 != 0
      :                          @423
  5949: 95 55 10                 s0 = s0 + 0x10
  5952: 82 18 20                 a1 = u64 [sp + 0x20]
  5955: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5958: 95 66 38                 s1 = s1 + 0x38
  5961: 82 19 28                 a2 = u64 [sp + 0x28]
  5964: 95 99 01                 a2 = a2 + 0x1
  5967: 52 08 36 ff              jump @406 if a1 != 0
      :                          @424
  5971: 28 69                    jump @433
      :                          @425
  5973: 82 87 18                 a0 = u64 [a1 + 0x18]
  5976: 51 07 71                 jump @435 if a0 == 0
      :                          @426
  5979: 82 85 10                 s0 = u64 [a1 + 0x10]
  5982: 33 0a                    a3 = 0
  5984: 97 79 04                 a2 = a0 << 0x4
  5987: c8 59 09                 a2 = a2 + s0
  5990: 7b 19 20                 u64 [sp + 0x20] = a2
  5993: 7b 18 08                 u64 [sp + 0x8] = a1
  5996: 82 86                    s1 = u64 [a1]
  5998: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6001: 97 77 04                 a0 = a0 << 0x4
  6004: 98 77 04                 a0 = a0 >> 0x4
  6007: 95 77 01                 a0 = a0 + 0x1
  6010: 7b 17                    u64 [sp] = a0
  6012: 95 66 08                 s1 = s1 + 0x8
  6015: 01                       fallthrough
      :                          @427
  6016: 7b 1a 28                 u64 [sp + 0x28] = a3
  6019: 82 69                    a2 = u64 [s1]
  6021: 51 09 16                 jump @430 if a2 == 0
      :                          @428
  6024: 82 1a 58                 a3 = u64 [sp + 0x58]
  6027: 82 17 50                 a0 = u64 [sp + 0x50]
  6030: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  6033: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6036: b4 a0 01 62              ra = 98, jump [a3]
      :                          @429 [@dyn 49]
  6040: 52 07 56                 jump @438 if a0 != 0
      :                          @430
  6043: 82 57                    a0 = u64 [s0]
  6045: 82 59 08                 a2 = u64 [s0 + 0x8]
  6048: 95 18 30                 a1 = sp + 0x30
  6051: b4 90 01 64              ra = 100, jump [a2]
      :                          @431 [@dyn 50]
  6055: 52 07 47                 jump @438 if a0 != 0
      :                          @432
  6058: 95 66 10                 s1 = s1 + 0x10
  6061: 95 55 10                 s0 = s0 + 0x10
  6064: 82 1a 28                 a3 = u64 [sp + 0x28]
  6067: 95 aa 01                 a3 = a3 + 0x1
  6070: 82 17 20                 a0 = u64 [sp + 0x20]
  6073: ab 75 c7                 jump @427 if s0 != a0
      :                          @433
  6076: 82 18 08                 a1 = u64 [sp + 0x8]
  6079: 82 1a                    a3 = u64 [sp]
  6081: 82 87 08                 a0 = u64 [a1 + 0x8]
  6084: ac 7a 0d                 jump @436 if a3 <u a0
      :                          @434
  6087: 28 2c                    jump @439
      :                          @435
  6089: 33 0a                    a3 = 0
  6091: 82 87 08                 a0 = u64 [a1 + 0x8]
  6094: 54 07 25                 jump @439 if a0 <=u 0
      :                          @436
  6097: 82 87                    a0 = u64 [a1]
  6099: 97 a8 04                 a1 = a3 << 0x4
  6102: c8 87 09                 a2 = a0 + a1
  6105: 82 1a 58                 a3 = u64 [sp + 0x58]
  6108: 82 17 50                 a0 = u64 [sp + 0x50]
  6111: 82 98                    a1 = u64 [a2]
  6113: 82 99 08                 a2 = u64 [a2 + 0x8]
  6116: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6119: b4 a0 01 66              ra = 102, jump [a3]
      :                          @437 [@dyn 51]
  6123: 51 07 08                 jump @439 if a0 == 0
      :                          @438
  6126: 33 07 01                 a0 = 0x1
  6129: 28 05                    jump @440
      :                          @439
  6131: 33 07                    a0 = 0
  6133: 01                       fallthrough
      :                          @440
  6134: 82 10 80 00              ra = u64 [sp + 0x80]
  6138: 82 15 78                 s0 = u64 [sp + 0x78]
  6141: 82 16 70                 s1 = u64 [sp + 0x70]
  6144: 95 11 88 00              sp = sp + 0x88
  6148: 32 00                    ret
      :                          @441 [@dyn 52]
  6150: 81 77                    a0 = i32 [a0]
  6152: 89 7a                    a3 = a0 <s 0
  6154: 85 a9 01                 a2 = a3 ^ 0x1
  6157: 97 7b 20                 a4 = a0 << 0x20
  6160: 98 bb 20                 a4 = a4 >> 0x20
  6163: 9a 77                    a0 = -a0
  6165: da ab 07                 a0 = a4 if a3 == 0
  6168: 64 8a                    a3 = a1
  6170: 64 98                    a1 = a2
  6172: 64 a9                    a2 = a3
  6174: 28 7b f6                 jump @266
      :                          @442
  6177: 95 11 98 fc              sp = sp + 0xfffffffffffffc98
  6181: 7b 10 60 03              u64 [sp + 0x360] = ra
  6185: 7b 15 58 03              u64 [sp + 0x358] = s0
  6189: 7b 16 50 03              u64 [sp + 0x350] = s1
  6193: 3a 0a 08 00 03           a3 = u64 [0x30008]
  6198: 7b 1a 48                 u64 [sp + 0x48] = a3
  6201: 3a 06 10 00 03           s1 = u64 [0x30010]
  6206: 64 95                    s0 = a2
  6208: 7b 18 98 00              u64 [sp + 0x98] = a1
  6212: 7b 17                    u64 [sp] = a0
  6214: 95 17 c0 01              a0 = sp + 0x1c0
  6218: 33 09 80 00              a2 = 0x80
  6222: 33 08                    a1 = 0
  6224: 50 10 6a e9 f5           ra = 106, jump @250
      :                          @443 [@dyn 53]
  6229: 64 5a                    a3 = s0
  6231: 33 03                    t1 = 0
  6233: 33 0c                    a5 = 0
  6235: 3a 07 18 00 03           a0 = u64 [0x30018]
  6240: 3a 09 20 00 03           a2 = u64 [0x30020]
  6245: 3a 0b 28 00 03           a4 = u64 [0x30028]
  6250: 3a 08 30 00 03           a1 = u64 [0x30030]
  6255: 7b 17 70 01              u64 [sp + 0x170] = a0
  6259: 7b 19 38                 u64 [sp + 0x38] = a2
  6262: 7b 19 78 01              u64 [sp + 0x178] = a2
  6266: 7b 1b 30                 u64 [sp + 0x30] = a4
  6269: 7b 1b 80 01              u64 [sp + 0x180] = a4
  6273: 7b 18 28                 u64 [sp + 0x28] = a1
  6276: 7b 18 88 01              u64 [sp + 0x188] = a1
  6280: 3a 08 38 00 03           a1 = u64 [0x30038]
  6285: 3a 07 40 00 03           a0 = u64 [0x30040]
  6290: 7b 16 40                 u64 [sp + 0x40] = s1
  6293: 7b 16 90 01              u64 [sp + 0x190] = s1
  6297: 82 19 48                 a2 = u64 [sp + 0x48]
  6300: 7b 19 98 01              u64 [sp + 0x198] = a2
  6304: 7b 18 20                 u64 [sp + 0x20] = a1
  6307: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  6311: 7b 17 18                 u64 [sp + 0x18] = a0
  6314: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6318: 49 21 b0 01              u64 [sp + 432] = 0
  6322: 49 21 b8 01              u64 [sp + 440] = 0
  6326: 49 21 40 02              u64 [sp + 576] = 0
  6330: 46 21 48 02              u8 [sp + 584] = 0
  6334: 3a 07 48 00 03           a0 = u64 [0x30048]
  6339: 7b 17 10                 u64 [sp + 0x10] = a0
  6342: 33 07 83 01 01           a0 = 0x10183
  6347: 7b 17 08                 u64 [sp + 0x8] = a0
  6350: 7b 15 a0 00              u64 [sp + 0xa0] = s0
  6354: 01                       fallthrough
      :                          @444
  6355: 33 0b 80 00              a4 = 0x80
  6359: ab b3 43 05              jump @467 if t1 != a4
      :                          @445
  6363: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
  6367: 95 79 80 00              a2 = a0 + 0x80
  6371: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
  6375: 82 16 b8 01              s1 = u64 [sp + 0x1b8]
  6379: 7b 1c 90 00              u64 [sp + 0x90] = a5
  6383: 7b 19 68 01              u64 [sp + 0x168] = a2
  6387: 53 17 80 0c              jump @447 if a0 <u 4294967168
      :                          @446
  6391: 95 66 01                 s1 = s1 + 0x1
  6394: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
  6398: 01                       fallthrough
      :                          @447
  6399: 95 17 d0 02              a0 = sp + 0x2d0
  6403: 33 09 80 00              a2 = 0x80
  6407: 95 18 c0 01              a1 = sp + 0x1c0
  6411: 50 10 6c 7c f4           ra = 108, jump @232
      :                          @448 [@dyn 54]
  6416: 82 15 70 01              s0 = u64 [sp + 0x170]
  6420: 82 18 78 01              a1 = u64 [sp + 0x178]
  6424: 82 14 80 01              t2 = u64 [sp + 0x180]
  6428: 82 12 88 01              t0 = u64 [sp + 0x188]
  6432: 82 1b 90 01              a4 = u64 [sp + 0x190]
  6436: 82 1a 98 01              a3 = u64 [sp + 0x198]
  6440: 82 1c a0 01              a5 = u64 [sp + 0x1a0]
  6444: 82 13 a8 01              t1 = u64 [sp + 0x1a8]
  6448: 82 17 40                 a0 = u64 [sp + 0x40]
  6451: 82 19 68 01              a2 = u64 [sp + 0x168]
  6455: d3 97 07                 a0 = a0 ^ a2
  6458: 7b 17 28 01              u64 [sp + 0x128] = a0
  6462: 82 17 48                 a0 = u64 [sp + 0x48]
  6465: d3 67 07                 a0 = a0 ^ s1
  6468: 7b 17 38 01              u64 [sp + 0x138] = a0
  6472: 33 06 0c                 s1 = 0xc
  6475: 82 10 08                 ra = u64 [sp + 0x8]
  6478: 7b 15 50                 u64 [sp + 0x50] = s0
  6481: 7b 15 20 01              u64 [sp + 0x120] = s0
  6485: 7b 1b 70                 u64 [sp + 0x70] = a4
  6488: 64 b9                    a2 = a4
  6490: 82 17 10                 a0 = u64 [sp + 0x10]
  6493: 7b 17 48 01              u64 [sp + 0x148] = a0
  6497: 7b 18 58                 u64 [sp + 0x58] = a1
  6500: 7b 18 30 01              u64 [sp + 0x130] = a1
  6504: 7b 1a 78                 u64 [sp + 0x78] = a3
  6507: 7b 1a 58 01              u64 [sp + 0x158] = a3
  6511: 82 17 38                 a0 = u64 [sp + 0x38]
  6514: 7b 17 18 01              u64 [sp + 0x118] = a0
  6518: 7b 14 60                 u64 [sp + 0x60] = t2
  6521: 7b 1c 80 00              u64 [sp + 0x80] = a5
  6525: 82 17 20                 a0 = u64 [sp + 0x20]
  6528: 7b 17 40 01              u64 [sp + 0x140] = a0
  6532: 82 17 30                 a0 = u64 [sp + 0x30]
  6535: 7b 17 60 01              u64 [sp + 0x160] = a0
  6539: 7b 12 68                 u64 [sp + 0x68] = t0
  6542: 64 2a                    a3 = t0
  6544: 7b 13 88 00              u64 [sp + 0x88] = t1
  6548: 7b 13 50 01              u64 [sp + 0x150] = t1
  6552: 82 12 18                 t0 = u64 [sp + 0x18]
  6555: 82 1b 28                 a4 = u64 [sp + 0x28]
  6558: 01                       fallthrough
      :                          @449
  6559: 7b 14 08 01              u64 [sp + 0x108] = t2
  6563: 7b 19 10 01              u64 [sp + 0x110] = a2
  6567: 7c 04 f9                 t2 = u8 [ra + 0xfffffffffffffff9]
  6570: 56 14 0f ee f4           jump @265 if t2 >u 15
      :                          @450
  6575: 7b 1c 68 01              u64 [sp + 0x168] = a5
  6579: 7c 07 fa                 a0 = u8 [ra + 0xfffffffffffffffa]
  6582: 33 0c 10                 a5 = 0x10
  6585: ae c7 c9 0a              jump @503 if a0 >=u a5
      :                          @451
  6589: 7b 12 f8 00              u64 [sp + 0xf8] = t0
  6593: 7b 1b 00 01              u64 [sp + 0x100] = a4
  6597: 7c 02 fb                 t0 = u8 [ra + 0xfffffffffffffffb]
  6600: 55 12 10 bb 0a           jump @504 if t0 >=u 16
      :                          @452
  6605: 7c 03 fc                 t1 = u8 [ra + 0xfffffffffffffffc]
  6608: 55 13 10 b4 0a           jump @505 if t1 >=u 16
      :                          @453
  6613: 7b 1a f0 00              u64 [sp + 0xf0] = a3
  6617: 7c 0a fd                 a3 = u8 [ra + 0xfffffffffffffffd]
  6620: 55 1a 10 a9 0a           jump @506 if a3 >=u 16
      :                          @454
  6625: 7c 0b fe                 a4 = u8 [ra + 0xfffffffffffffffe]
  6628: 55 1b 10 a2 0a           jump @507 if a4 >=u 16
      :                          @455
  6633: 7c 08 ff                 a1 = u8 [ra + 0xffffffffffffffff]
  6636: 55 18 10 95 0a           jump @502 if a1 >=u 16
      :                          @456
  6641: 7c 09                    a2 = u8 [ra]
  6643: 55 19 10 94 0a           jump @508 if a2 >=u 16
      :                          @457
  6648: 7b 16 e8 00              u64 [sp + 0xe8] = s1
  6652: 7c 05 01                 s0 = u8 [ra + 0x1]
  6655: 55 15 10 81 0a           jump @501 if s0 >=u 16
      :                          @458
  6660: 7c 06 02                 s1 = u8 [ra + 0x2]
  6663: 55 16 10 80 04           jump @475 if s1 >=u 16
      :                          @459
  6668: 7b 15 e0 00              u64 [sp + 0xe0] = s0
  6672: 7c 05 03                 s0 = u8 [ra + 0x3]
  6675: 55 15 10 6d 0a           jump @501 if s0 >=u 16
      :                          @460
  6680: 7b 16 d8 00              u64 [sp + 0xd8] = s1
  6684: 7c 06 04                 s1 = u8 [ra + 0x4]
  6687: 55 16 10 68 04           jump @475 if s1 >=u 16
      :                          @461
  6692: 7b 15 d0 00              u64 [sp + 0xd0] = s0
  6696: 7c 05 05                 s0 = u8 [ra + 0x5]
  6699: 55 15 10 55 0a           jump @501 if s0 >=u 16
      :                          @462
  6704: 7b 16 c8 00              u64 [sp + 0xc8] = s1
  6708: 7c 06 06                 s1 = u8 [ra + 0x6]
  6711: 55 16 10 50 04           jump @475 if s1 >=u 16
      :                          @463
  6716: 7b 15 c0 00              u64 [sp + 0xc0] = s0
  6720: 7c 05 07                 s0 = u8 [ra + 0x7]
  6723: 55 15 10 3d 0a           jump @501 if s0 >=u 16
      :                          @464
  6728: 7b 15 b0 00              u64 [sp + 0xb0] = s0
  6732: 7c 05 08                 s0 = u8 [ra + 0x8]
  6735: 7b 15 b8 00              u64 [sp + 0xb8] = s0
  6739: 55 15 10 35 0a           jump @509 if s0 >=u 16
      :                          @465
  6744: 97 44 03                 t2 = t2 << 0x3
  6747: 7b 16 a8 00              u64 [sp + 0xa8] = s1
  6751: 95 16 d0 02              s1 = sp + 0x2d0
  6755: c8 64 04                 t2 = t2 + s1
  6758: 82 45                    s0 = u64 [t2]
  6760: 97 77 03                 a0 = a0 << 0x3
  6763: c8 67 07                 a0 = a0 + s1
  6766: 82 77                    a0 = u64 [a0]
  6768: 82 14 10 01              t2 = u64 [sp + 0x110]
  6772: 82 1c 20 01              a5 = u64 [sp + 0x120]
  6776: c8 4c 0c                 a5 = a5 + t2
  6779: c8 5c 0c                 a5 = a5 + s0
  6782: 82 15 28 01              s0 = u64 [sp + 0x128]
  6786: d3 c5 05                 s0 = s0 ^ a5
  6789: 7b 15 20 01              u64 [sp + 0x120] = s0
  6793: c8 c7 07                 a0 = a0 + a5
  6796: 7b 17 28 01              u64 [sp + 0x128] = a0
  6800: 97 22 03                 t0 = t0 << 0x3
  6803: c8 62 02                 t0 = t0 + s1
  6806: 82 27                    a0 = u64 [t0]
  6808: 97 33 03                 t1 = t1 << 0x3
  6811: c8 63 03                 t1 = t1 + s1
  6814: 82 3c                    a5 = u64 [t1]
  6816: 82 13 58 01              t1 = u64 [sp + 0x158]
  6820: 82 15 30 01              s0 = u64 [sp + 0x130]
  6824: c8 35 05                 s0 = s0 + t1
  6827: c8 57 07                 a0 = a0 + s0
  6830: 82 15 38 01              s0 = u64 [sp + 0x138]
  6834: d3 75 05                 s0 = s0 ^ a0
  6837: 7b 15 30 01              u64 [sp + 0x130] = s0
  6841: c8 c7 07                 a0 = a0 + a5
  6844: 97 aa 03                 a3 = a3 << 0x3
  6847: 95 1c d0 02              a5 = sp + 0x2d0
  6851: c8 ca 0a                 a3 = a3 + a5
  6854: 82 aa                    a3 = u64 [a3]
  6856: 97 bb 03                 a4 = a4 << 0x3
  6859: c8 cb 0b                 a4 = a4 + a5
  6862: 82 bb                    a4 = u64 [a4]
  6864: 82 1c 08 01              a5 = u64 [sp + 0x108]
  6868: 82 16 68 01              s1 = u64 [sp + 0x168]
  6872: c8 6c 0c                 a5 = a5 + s1
  6875: c8 ca 0a                 a3 = a3 + a5
  6878: 82 1c 40 01              a5 = u64 [sp + 0x140]
  6882: d3 ac 0c                 a5 = a5 ^ a3
  6885: 7b 1c 38 01              u64 [sp + 0x138] = a5
  6889: c8 ba 0a                 a3 = a3 + a4
  6892: 7b 1a 08 01              u64 [sp + 0x108] = a3
  6896: 97 88 03                 a1 = a1 << 0x3
  6899: 95 1a d0 02              a3 = sp + 0x2d0
  6903: c8 a8 08                 a1 = a1 + a3
  6906: 82 88                    a1 = u64 [a1]
  6908: 97 99 03                 a2 = a2 << 0x3
  6911: c8 a9 09                 a2 = a2 + a3
  6914: 95 1b d0 02              a4 = sp + 0x2d0
  6918: 82 99                    a2 = u64 [a2]
  6920: 82 12 50 01              t0 = u64 [sp + 0x150]
  6924: 82 1a f0 00              a3 = u64 [sp + 0xf0]
  6928: c8 2a 0a                 a3 = a3 + t0
  6931: c8 a8 08                 a1 = a1 + a3
  6934: 82 1c f8 00              a5 = u64 [sp + 0xf8]
  6938: d3 8c 0c                 a5 = a5 ^ a1
  6941: c8 89 09                 a2 = a2 + a1
  6944: 82 18 20 01              a1 = u64 [sp + 0x120]
  6948: 9e 8a 20                 a3 = a1 >>r 0x20
  6951: 82 18 48 01              a1 = u64 [sp + 0x148]
  6955: c8 a8 08                 a1 = a1 + a3
  6958: d3 48 05                 s0 = a1 ^ t2
  6961: 82 16 e0 00              s1 = u64 [sp + 0xe0]
  6965: 97 66 03                 s1 = s1 << 0x3
  6968: c8 b6 06                 s1 = s1 + a4
  6971: 82 66                    s1 = u64 [s1]
  6973: 9e 5b 18                 a4 = s0 >>r 0x18
  6976: 7b 1b 48 01              u64 [sp + 0x148] = a4
  6980: 82 15 28 01              s0 = u64 [sp + 0x128]
  6984: c8 b5 05                 s0 = s0 + a4
  6987: d3 5a 0a                 a3 = a3 ^ s0
  6990: c8 65 05                 s0 = s0 + s1
  6993: 82 1b 30 01              a4 = u64 [sp + 0x130]
  6997: 9e b6 20                 s1 = a4 >>r 0x20
  7000: 82 14 18 01              t2 = u64 [sp + 0x118]
  7004: c8 64 04                 t2 = t2 + s1
  7007: d3 34 0b                 a4 = t2 ^ t1
  7010: 9e bb 18                 a4 = a4 >>r 0x18
  7013: c8 b7 07                 a0 = a0 + a4
  7016: d3 76 06                 s1 = s1 ^ a0
  7019: 9e 66 10                 s1 = s1 >>r 0x10
  7022: 7b 16 58 01              u64 [sp + 0x158] = s1
  7026: c8 64 04                 t2 = t2 + s1
  7029: 7b 14 40 01              u64 [sp + 0x140] = t2
  7033: d3 b4 0b                 a4 = t2 ^ a4
  7036: 9e b4 3f                 t2 = a4 >>r 0x3f
  7039: 7b 14 28 01              u64 [sp + 0x128] = t2
  7043: 9e cb 20                 a4 = a5 >>r 0x20
  7046: 82 1c 00 01              a5 = u64 [sp + 0x100]
  7050: c8 bc 0c                 a5 = a5 + a4
  7053: d3 2c 06                 s1 = a5 ^ t0
  7056: 9e 62 18                 t0 = s1 >>r 0x18
  7059: c8 29 09                 a2 = a2 + t0
  7062: 7b 19 50 01              u64 [sp + 0x150] = a2
  7066: d3 9b 0b                 a4 = a4 ^ a2
  7069: 9e bb 10                 a4 = a4 >>r 0x10
  7072: c8 cb 06                 s1 = a4 + a5
  7075: 7b 16 00 01              u64 [sp + 0x100] = s1
  7079: 82 1c d8 00              a5 = u64 [sp + 0xd8]
  7083: 97 cc 03                 a5 = a5 << 0x3
  7086: 95 19 d0 02              a2 = sp + 0x2d0
  7090: c8 9c 0c                 a5 = a5 + a2
  7093: 82 cc                    a5 = u64 [a5]
  7095: 82 13 d0 00              t1 = u64 [sp + 0xd0]
  7099: 97 33 03                 t1 = t1 << 0x3
  7102: c8 93 03                 t1 = t1 + a2
  7105: 82 33                    t1 = u64 [t1]
  7107: c8 45 05                 s0 = s0 + t2
  7110: d3 5b 0b                 a4 = a4 ^ s0
  7113: 7b 1b 20 01              u64 [sp + 0x120] = a4
  7117: c8 5c 0c                 a5 = a5 + s0
  7120: 7b 1c 30 01              u64 [sp + 0x130] = a5
  7124: c8 37 09                 a2 = a0 + t1
  7127: 9e aa 10                 a3 = a3 >>r 0x10
  7130: c8 a8 08                 a1 = a1 + a3
  7133: 7b 18 18 01              u64 [sp + 0x118] = a1
  7137: 82 17 38 01              a0 = u64 [sp + 0x138]
  7141: 9e 78 20                 a1 = a0 >>r 0x20
  7144: 82 13 60 01              t1 = u64 [sp + 0x160]
  7148: c8 83 03                 t1 = t1 + a1
  7151: 82 17 68 01              a0 = u64 [sp + 0x168]
  7155: d3 73 0b                 a4 = t1 ^ a0
  7158: 9e b5 18                 s0 = a4 >>r 0x18
  7161: 82 17 08 01              a0 = u64 [sp + 0x108]
  7165: c8 57 07                 a0 = a0 + s0
  7168: d3 78 08                 a1 = a1 ^ a0
  7171: 9e 8b 10                 a4 = a1 >>r 0x10
  7174: c8 3b 08                 a1 = a4 + t1
  7177: d3 85 05                 s0 = s0 ^ a1
  7180: 9e 53 3f                 t1 = s0 >>r 0x3f
  7183: 7b 13 38 01              u64 [sp + 0x138] = t1
  7187: 82 15 c8 00              s0 = u64 [sp + 0xc8]
  7191: 97 55 03                 s0 = s0 << 0x3
  7194: 95 1c d0 02              a5 = sp + 0x2d0
  7198: c8 c5 05                 s0 = s0 + a5
  7201: 82 55                    s0 = u64 [s0]
  7203: 82 14 c0 00              t2 = u64 [sp + 0xc0]
  7207: 97 44 03                 t2 = t2 << 0x3
  7210: c8 c4 04                 t2 = t2 + a5
  7213: 82 44                    t2 = u64 [t2]
  7215: c8 39 09                 a2 = a2 + t1
  7218: d3 9a 0a                 a3 = a3 ^ a2
  7221: 7b 1a 10 01              u64 [sp + 0x110] = a3
  7225: c8 59 09                 a2 = a2 + s0
  7228: 7b 19 68 01              u64 [sp + 0x168] = a2
  7232: c8 74 04                 t2 = t2 + a0
  7235: d3 26 07                 a0 = s1 ^ t0
  7238: 9e 73 3f                 t1 = a0 >>r 0x3f
  7241: 82 19 a8 00              a2 = u64 [sp + 0xa8]
  7245: 97 99 03                 a2 = a2 << 0x3
  7248: c8 c9 09                 a2 = a2 + a5
  7251: 82 99                    a2 = u64 [a2]
  7253: 82 15 b0 00              s0 = u64 [sp + 0xb0]
  7257: 97 55 03                 s0 = s0 << 0x3
  7260: c8 c5 05                 s0 = s0 + a5
  7263: 82 55                    s0 = u64 [s0]
  7265: c8 34 04                 t2 = t2 + t1
  7268: 82 17 58 01              a0 = u64 [sp + 0x158]
  7272: d3 74 07                 a0 = t2 ^ a0
  7275: 7b 17 08 01              u64 [sp + 0x108] = a0
  7279: c8 94 04                 t2 = t2 + a2
  7282: 82 12 50 01              t0 = u64 [sp + 0x150]
  7286: c8 52 02                 t0 = t0 + s0
  7289: 82 19 48 01              a2 = u64 [sp + 0x148]
  7293: 82 17 18 01              a0 = u64 [sp + 0x118]
  7297: d3 97 05                 s0 = a0 ^ a2
  7300: 82 1a b8 00              a3 = u64 [sp + 0xb8]
  7304: 97 aa 03                 a3 = a3 << 0x3
  7307: c8 ca 0a                 a3 = a3 + a5
  7310: 82 aa                    a3 = u64 [a3]
  7312: 9e 55 3f                 s0 = s0 >>r 0x3f
  7315: c8 52 02                 t0 = t0 + s0
  7318: d3 b2 06                 s1 = t0 ^ a4
  7321: c8 2a 0a                 a3 = a3 + t0
  7324: 82 19 20 01              a2 = u64 [sp + 0x120]
  7328: 9e 99 20                 a2 = a2 >>r 0x20
  7331: c8 98 08                 a1 = a1 + a2
  7334: 82 1c 28 01              a5 = u64 [sp + 0x128]
  7338: d3 8c 0c                 a5 = a5 ^ a1
  7341: 9e cc 18                 a5 = a5 >>r 0x18
  7344: 82 1b 30 01              a4 = u64 [sp + 0x130]
  7348: c8 cb 0b                 a4 = a4 + a5
  7351: 7b 1b 20 01              u64 [sp + 0x120] = a4
  7355: d3 b9 09                 a2 = a2 ^ a4
  7358: 9e 92 10                 t0 = a2 >>r 0x10
  7361: c8 28 08                 a1 = a1 + t0
  7364: 7b 18 60 01              u64 [sp + 0x160] = a1
  7368: d3 c8 08                 a1 = a1 ^ a5
  7371: 9e 88 3f                 a1 = a1 >>r 0x3f
  7374: 7b 18 58 01              u64 [sp + 0x158] = a1
  7378: 82 18 10 01              a1 = u64 [sp + 0x110]
  7382: 9e 88 20                 a1 = a1 >>r 0x20
  7385: 82 19 00 01              a2 = u64 [sp + 0x100]
  7389: c8 89 09                 a2 = a2 + a1
  7392: 82 1c 38 01              a5 = u64 [sp + 0x138]
  7396: d3 9c 0c                 a5 = a5 ^ a2
  7399: 9e cc 18                 a5 = a5 >>r 0x18
  7402: 82 1b 68 01              a4 = u64 [sp + 0x168]
  7406: c8 cb 0b                 a4 = a4 + a5
  7409: 7b 1b 30 01              u64 [sp + 0x130] = a4
  7413: d3 b8 08                 a1 = a1 ^ a4
  7416: 9e 8b 10                 a4 = a1 >>r 0x10
  7419: 7b 1b 28 01              u64 [sp + 0x128] = a4
  7423: c8 9b 0b                 a4 = a4 + a2
  7426: d3 cb 08                 a1 = a4 ^ a5
  7429: 9e 8c 3f                 a5 = a1 >>r 0x3f
  7432: 82 18 08 01              a1 = u64 [sp + 0x108]
  7436: 9e 88 20                 a1 = a1 >>r 0x20
  7439: c8 78 09                 a2 = a1 + a0
  7442: d3 39 07                 a0 = a2 ^ t1
  7445: 9e 77 18                 a0 = a0 >>r 0x18
  7448: c8 74 04                 t2 = t2 + a0
  7451: d3 84 08                 a1 = t2 ^ a1
  7454: 9e 88 10                 a1 = a1 >>r 0x10
  7457: 7b 18 38 01              u64 [sp + 0x138] = a1
  7461: c8 89 09                 a2 = a2 + a1
  7464: 7b 19 48 01              u64 [sp + 0x148] = a2
  7468: d3 97 07                 a0 = a0 ^ a2
  7471: 9e 77 3f                 a0 = a0 >>r 0x3f
  7474: 7b 17 50 01              u64 [sp + 0x150] = a0
  7478: 9e 67 20                 a0 = s1 >>r 0x20
  7481: 82 18 40 01              a1 = u64 [sp + 0x140]
  7485: c8 78 08                 a1 = a1 + a0
  7488: d3 85 05                 s0 = s0 ^ a1
  7491: 9e 59 18                 a2 = s0 >>r 0x18
  7494: c8 9a 0a                 a3 = a3 + a2
  7497: d3 a7 07                 a0 = a0 ^ a3
  7500: 9e 75 10                 s0 = a0 >>r 0x10
  7503: 7b 15 40 01              u64 [sp + 0x140] = s0
  7507: c8 85 07                 a0 = s0 + a1
  7510: 7b 17 18 01              u64 [sp + 0x118] = a0
  7514: d3 97 07                 a0 = a0 ^ a2
  7517: 9e 79 3f                 a2 = a0 >>r 0x3f
  7520: 82 16 e8 00              s1 = u64 [sp + 0xe8]
  7524: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7527: 95 00 10                 ra = ra + 0x10
  7530: 52 06 35 fc              jump @449 if s1 != 0
      :                          @466
  7534: 33 03                    t1 = 0
  7536: 82 17 50                 a0 = u64 [sp + 0x50]
  7539: 82 18 20 01              a1 = u64 [sp + 0x120]
  7543: d3 87 07                 a0 = a0 ^ a1
  7546: 82 18 48 01              a1 = u64 [sp + 0x148]
  7550: d3 87 07                 a0 = a0 ^ a1
  7553: 7b 17 70 01              u64 [sp + 0x170] = a0
  7557: 82 17 58                 a0 = u64 [sp + 0x58]
  7560: 82 18 30 01              a1 = u64 [sp + 0x130]
  7564: d3 87 07                 a0 = a0 ^ a1
  7567: 82 18 18 01              a1 = u64 [sp + 0x118]
  7571: d3 87 07                 a0 = a0 ^ a1
  7574: 7b 17 78 01              u64 [sp + 0x178] = a0
  7578: 82 17 60                 a0 = u64 [sp + 0x60]
  7581: 82 18 60 01              a1 = u64 [sp + 0x160]
  7585: d3 87 07                 a0 = a0 ^ a1
  7588: d3 47 07                 a0 = a0 ^ t2
  7591: 7b 17 80 01              u64 [sp + 0x180] = a0
  7595: 82 17 68                 a0 = u64 [sp + 0x68]
  7598: d3 b7 07                 a0 = a0 ^ a4
  7601: d3 a7 07                 a0 = a0 ^ a3
  7604: 7b 17 88 01              u64 [sp + 0x188] = a0
  7608: 82 17 70                 a0 = u64 [sp + 0x70]
  7611: 82 18 28 01              a1 = u64 [sp + 0x128]
  7615: d3 87 07                 a0 = a0 ^ a1
  7618: d3 97 07                 a0 = a0 ^ a2
  7621: 7b 17 90 01              u64 [sp + 0x190] = a0
  7625: 82 17 78                 a0 = u64 [sp + 0x78]
  7628: 82 18 58 01              a1 = u64 [sp + 0x158]
  7632: d3 87 07                 a0 = a0 ^ a1
  7635: 82 18 38 01              a1 = u64 [sp + 0x138]
  7639: d3 87 07                 a0 = a0 ^ a1
  7642: 7b 17 98 01              u64 [sp + 0x198] = a0
  7646: 82 17 80 00              a0 = u64 [sp + 0x80]
  7650: d3 c7 07                 a0 = a0 ^ a5
  7653: 82 18 40 01              a1 = u64 [sp + 0x140]
  7657: d3 87 07                 a0 = a0 ^ a1
  7660: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  7664: 82 17 88 00              a0 = u64 [sp + 0x88]
  7668: d3 72 07                 a0 = t0 ^ a0
  7671: 82 18 50 01              a1 = u64 [sp + 0x150]
  7675: d3 87 07                 a0 = a0 ^ a1
  7678: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7682: 49 21 40 02              u64 [sp + 576] = 0
  7686: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  7690: 82 1c 90 00              a5 = u64 [sp + 0x90]
  7694: c9 ca 07                 a0 = a3 - a5
  7697: 33 08 80 00              a1 = 0x80
  7701: e6 87 05                 s0 = minu(a0, a1)
  7704: 28 19                    jump @469
      :                          @467
  7706: 9a 37 80 00              a0 = 0x80 - t1
  7710: c9 ca 08                 a1 = a3 - a5
  7713: e6 87 05                 s0 = minu(a0, a1)
  7716: c8 35 09                 a2 = s0 + t1
  7719: ac 59 64 06              jump @512 if a2 <u s0
      :                          @468
  7723: 56 29 80 00 61 06        jump @513 if a2 >u 128
      :                          @469
  7729: c8 c5 06                 s1 = s0 + a5
  7732: ac 56 55 06              jump @510 if s1 <u s0
      :                          @470
  7736: ac 6a 52 06              jump @511 if a3 <u s1
      :                          @471
  7740: 95 17 c0 01              a0 = sp + 0x1c0
  7744: c8 37 07                 a0 = a0 + t1
  7747: 82 18 98 00              a1 = u64 [sp + 0x98]
  7751: c8 c8 08                 a1 = a1 + a5
  7754: 64 59                    a2 = s0
  7756: 50 10 6e 3b ef           ra = 110, jump @232
      :                          @472 [@dyn 55]
  7761: 82 17 40 02              a0 = u64 [sp + 0x240]
  7765: c8 57 03                 t1 = a0 + s0
  7768: 7b 13 40 02              u64 [sp + 0x240] = t1
  7772: 64 6c                    a5 = s1
  7774: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  7778: ac a6 71 fa              jump @444 if s1 <u a3
      :                          @473
  7782: 7c 17 48 02              a0 = u8 [sp + 0x248]
  7786: 51 07 1e                 jump @476 if a0 == 0
      :                          @474
  7789: 33 09 20                 a2 = 0x20
  7792: 82 17                    a0 = u64 [sp]
  7794: 33 08                    a1 = 0
  7796: 82 10 60 03              ra = u64 [sp + 0x360]
  7800: 82 15 58 03              s0 = u64 [sp + 0x358]
  7804: 82 16 50 03              s1 = u64 [sp + 0x350]
  7808: 95 11 68 03              sp = sp + 0x368
  7812: 28 b5 ef                 jump @250
      :                          @475
  7815: 00                       trap
      :                          @476
  7816: 82 15 b0 01              s0 = u64 [sp + 0x1b0]
  7820: c8 35 05                 s0 = s0 + t1
  7823: 64 36                    s1 = t1
  7825: ae 35 0f                 jump @478 if s0 >=u t1
      :                          @477
  7828: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
  7832: 95 77 01                 a0 = a0 + 0x1
  7835: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  7839: 01                       fallthrough
      :                          @478
  7840: 95 17 50 02              a0 = sp + 0x250
  7844: 33 09 80 00              a2 = 0x80
  7848: 33 08                    a1 = 0
  7850: 50 10 70 8f ef           ra = 112, jump @250
      :                          @479 [@dyn 56]
  7855: 64 69                    a2 = s1
  7857: 55 26 81 00 db 05        jump @513 if s1 >=u 129
      :                          @480
  7863: 95 17 50 02              a0 = sp + 0x250
  7867: 95 18 c0 01              a1 = sp + 0x1c0
  7871: 50 10 72 c8 ee           ra = 114, jump @232
      :                          @481 [@dyn 57]
  7876: 82 16 b8 01              s1 = u64 [sp + 0x1b8]
  7880: 95 17 d0 02              a0 = sp + 0x2d0
  7884: 95 18 50 02              a1 = sp + 0x250
  7888: 33 09 80 00              a2 = 0x80
  7892: 50 10 74 b3 ee           ra = 116, jump @232
      :                          @482 [@dyn 58]
  7897: 82 18 70 01              a1 = u64 [sp + 0x170]
  7901: 82 14 78 01              t2 = u64 [sp + 0x178]
  7905: 82 12 80 01              t0 = u64 [sp + 0x180]
  7909: 82 17 40                 a0 = u64 [sp + 0x40]
  7912: d3 57 07                 a0 = a0 ^ s0
  7915: 7b 17 20 01              u64 [sp + 0x120] = a0
  7919: 82 17 48                 a0 = u64 [sp + 0x48]
  7922: d3 67 07                 a0 = a0 ^ s1
  7925: 7b 17 28 01              u64 [sp + 0x128] = a0
  7929: 33 00 83 01 01           ra = 0x10183
  7934: 3a 07 30 00 03           a0 = u64 [0x30030]
  7939: 7b 17 58 01              u64 [sp + 0x158] = a0
  7943: 3a 07 40 00 03           a0 = u64 [0x30040]
  7948: 7b 17 38 01              u64 [sp + 0x138] = a0
  7952: 3a 03 28 00 03           t1 = u64 [0x30028]
  7957: 3a 07 50 00 03           a0 = u64 [0x30050]
  7962: 7b 17 30 01              u64 [sp + 0x130] = a0
  7966: 3a 05 20 00 03           s0 = u64 [0x30020]
  7971: 3a 0a 48 00 03           a3 = u64 [0x30048]
  7976: 82 17 88 01              a0 = u64 [sp + 0x188]
  7980: 82 19 90 01              a2 = u64 [sp + 0x190]
  7984: 82 1b 98 01              a4 = u64 [sp + 0x198]
  7988: 7b 1b 60 01              u64 [sp + 0x160] = a4
  7992: 82 1b a0 01              a4 = u64 [sp + 0x1a0]
  7996: 7b 1b 68 01              u64 [sp + 0x168] = a4
  8000: 82 1b a8 01              a4 = u64 [sp + 0x1a8]
  8004: 33 0c 0c                 a5 = 0xc
  8007: 33 06 10                 s1 = 0x10
  8010: 7b 18 88 00              u64 [sp + 0x88] = a1
  8014: 7b 18 40 01              u64 [sp + 0x140] = a1
  8018: 7b 14 90 00              u64 [sp + 0x90] = t2
  8022: 7b 14 48 01              u64 [sp + 0x148] = t2
  8026: 7b 12 98 00              u64 [sp + 0x98] = t0
  8030: 7b 12 50 01              u64 [sp + 0x150] = t0
  8034: 7b 17 80 00              u64 [sp + 0x80] = a0
  8038: 64 72                    t0 = a0
  8040: 01                       fallthrough
      :                          @483
  8041: 7b 19 08 01              u64 [sp + 0x108] = a2
  8045: 7b 1a 10 01              u64 [sp + 0x110] = a3
  8049: 7b 1b 18 01              u64 [sp + 0x118] = a4
  8053: 7c 04 f9                 t2 = u8 [ra + 0xfffffffffffffff9]
  8056: 56 14 0f 20 ef           jump @265 if t2 >u 15
      :                          @484
  8061: 7c 07 fa                 a0 = u8 [ra + 0xfffffffffffffffa]
  8064: 55 17 10 02 05           jump @503 if a0 >=u 16
      :                          @485
  8069: 7b 12 f8 00              u64 [sp + 0xf8] = t0
  8073: 7b 13 00 01              u64 [sp + 0x100] = t1
  8077: 7c 02 fb                 t0 = u8 [ra + 0xfffffffffffffffb]
  8080: 55 12 10 f3 04           jump @504 if t0 >=u 16
      :                          @486
  8085: 7c 03 fc                 t1 = u8 [ra + 0xfffffffffffffffc]
  8088: 55 13 10 ec 04           jump @505 if t1 >=u 16
      :                          @487
  8093: 7c 0a fd                 a3 = u8 [ra + 0xfffffffffffffffd]
  8096: 55 1a 10 e5 04           jump @506 if a3 >=u 16
      :                          @488
  8101: 7c 0b fe                 a4 = u8 [ra + 0xfffffffffffffffe]
  8104: 55 1b 10 de 04           jump @507 if a4 >=u 16
      :                          @489
  8109: 7c 08 ff                 a1 = u8 [ra + 0xffffffffffffffff]
  8112: 55 18 10 d1 04           jump @502 if a1 >=u 16
      :                          @490
  8117: 7c 09                    a2 = u8 [ra]
  8119: 55 19 10 d0 04           jump @508 if a2 >=u 16
      :                          @491
  8124: 7b 15 f0 00              u64 [sp + 0xf0] = s0
  8128: 7c 05 01                 s0 = u8 [ra + 0x1]
  8131: 55 15 10 bd 04           jump @501 if s0 >=u 16
      :                          @492
  8136: 7b 18 e8 00              u64 [sp + 0xe8] = a1
  8140: 7c 08 02                 a1 = u8 [ra + 0x2]
  8143: 55 18 10 b2 04           jump @502 if a1 >=u 16
      :                          @493
  8148: 7b 15 e0 00              u64 [sp + 0xe0] = s0
  8152: 7c 05 03                 s0 = u8 [ra + 0x3]
  8155: 55 15 10 a5 04           jump @501 if s0 >=u 16
      :                          @494
  8160: 7b 18 d8 00              u64 [sp + 0xd8] = a1
  8164: 7c 08 04                 a1 = u8 [ra + 0x4]
  8167: 55 18 10 9a 04           jump @502 if a1 >=u 16
      :                          @495
  8172: 7b 15 d0 00              u64 [sp + 0xd0] = s0
  8176: 7c 05 05                 s0 = u8 [ra + 0x5]
  8179: 55 15 10 8d 04           jump @501 if s0 >=u 16
      :                          @496
  8184: 7b 18 c8 00              u64 [sp + 0xc8] = a1
  8188: 7c 08 06                 a1 = u8 [ra + 0x6]
  8191: 55 18 10 82 04           jump @502 if a1 >=u 16
      :                          @497
  8196: 7b 15 c0 00              u64 [sp + 0xc0] = s0
  8200: 7c 05 07                 s0 = u8 [ra + 0x7]
  8203: 55 15 10 75 04           jump @501 if s0 >=u 16
      :                          @498
  8208: 7b 15 b0 00              u64 [sp + 0xb0] = s0
  8212: 7c 05 08                 s0 = u8 [ra + 0x8]
  8215: 7b 15 b8 00              u64 [sp + 0xb8] = s0
  8219: 55 15 10 6d 04           jump @509 if s0 >=u 16
      :                          @499
  8224: 97 44 03                 t2 = t2 << 0x3
  8227: 7b 18 a0 00              u64 [sp + 0xa0] = a1
  8231: 95 18 d0 02              a1 = sp + 0x2d0
  8235: c8 84 04                 t2 = t2 + a1
  8238: 82 46                    s1 = u64 [t2]
  8240: 97 77 03                 a0 = a0 << 0x3
  8243: c8 87 07                 a0 = a0 + a1
  8246: 82 77                    a0 = u64 [a0]
  8248: 7b 1c a8 00              u64 [sp + 0xa8] = a5
  8252: 82 14 08 01              t2 = u64 [sp + 0x108]
  8256: 82 1c 40 01              a5 = u64 [sp + 0x140]
  8260: c8 4c 0c                 a5 = a5 + t2
  8263: c8 6c 0c                 a5 = a5 + s1
  8266: 82 15 20 01              s0 = u64 [sp + 0x120]
  8270: d3 c5 05                 s0 = s0 ^ a5
  8273: c8 c7 07                 a0 = a0 + a5
  8276: 7b 17 40 01              u64 [sp + 0x140] = a0
  8280: 97 22 03                 t0 = t0 << 0x3
  8283: c8 82 02                 t0 = t0 + a1
  8286: 82 27                    a0 = u64 [t0]
  8288: 97 33 03                 t1 = t1 << 0x3
  8291: c8 83 03                 t1 = t1 + a1
  8294: 82 3c                    a5 = u64 [t1]
  8296: 82 16 48 01              s1 = u64 [sp + 0x148]
  8300: 82 18 60 01              a1 = u64 [sp + 0x160]
  8304: c8 86 06                 s1 = s1 + a1
  8307: c8 67 07                 a0 = a0 + s1
  8310: 82 16 28 01              s1 = u64 [sp + 0x128]
  8314: d3 76 06                 s1 = s1 ^ a0
  8317: 7b 16 28 01              u64 [sp + 0x128] = s1
  8321: c8 c7 07                 a0 = a0 + a5
  8324: 97 aa 03                 a3 = a3 << 0x3
  8327: 95 18 d0 02              a1 = sp + 0x2d0
  8331: c8 8a 0a                 a3 = a3 + a1
  8334: 82 aa                    a3 = u64 [a3]
  8336: 97 bb 03                 a4 = a4 << 0x3
  8339: c8 8b 0b                 a4 = a4 + a1
  8342: 82 bb                    a4 = u64 [a4]
  8344: 82 1c 50 01              a5 = u64 [sp + 0x150]
  8348: 82 18 68 01              a1 = u64 [sp + 0x168]
  8352: c8 8c 0c                 a5 = a5 + a1
  8355: c8 ca 0a                 a3 = a3 + a5
  8358: 82 1c 30 01              a5 = u64 [sp + 0x130]
  8362: d3 ac 0c                 a5 = a5 ^ a3
  8365: 7b 1c 48 01              u64 [sp + 0x148] = a5
  8369: c8 ba 0a                 a3 = a3 + a4
  8372: 7b 1a 20 01              u64 [sp + 0x120] = a3
  8376: 82 18 e8 00              a1 = u64 [sp + 0xe8]
  8380: 97 88 03                 a1 = a1 << 0x3
  8383: 95 1a d0 02              a3 = sp + 0x2d0
  8387: c8 a8 08                 a1 = a1 + a3
  8390: 82 88                    a1 = u64 [a1]
  8392: 97 99 03                 a2 = a2 << 0x3
  8395: c8 a9 09                 a2 = a2 + a3
  8398: 95 1b d0 02              a4 = sp + 0x2d0
  8402: 82 99                    a2 = u64 [a2]
  8404: 82 1c 18 01              a5 = u64 [sp + 0x118]
  8408: 82 1a f8 00              a3 = u64 [sp + 0xf8]
  8412: c8 ca 0a                 a3 = a3 + a5
  8415: c8 a8 08                 a1 = a1 + a3
  8418: 82 1a 38 01              a3 = u64 [sp + 0x138]
  8422: d3 a8 02                 t0 = a1 ^ a3
  8425: c8 98 03                 t1 = a1 + a2
  8428: 9e 5a 20                 a3 = s0 >>r 0x20
  8431: 82 18 10 01              a1 = u64 [sp + 0x110]
  8435: c8 a8 08                 a1 = a1 + a3
  8438: d3 48 06                 s1 = a1 ^ t2
  8441: 82 15 e0 00              s0 = u64 [sp + 0xe0]
  8445: 97 55 03                 s0 = s0 << 0x3
  8448: c8 b5 05                 s0 = s0 + a4
  8451: 82 55                    s0 = u64 [s0]
  8453: 9e 69 18                 a2 = s1 >>r 0x18
  8456: 7b 19 50 01              u64 [sp + 0x150] = a2
  8460: 82 16 40 01              s1 = u64 [sp + 0x140]
  8464: c8 96 06                 s1 = s1 + a2
  8467: d3 6a 0a                 a3 = a3 ^ s1
  8470: c8 65 05                 s0 = s0 + s1
  8473: 82 19 28 01              a2 = u64 [sp + 0x128]
  8477: 9e 96 20                 s1 = a2 >>r 0x20
  8480: 82 14 f0 00              t2 = u64 [sp + 0xf0]
  8484: c8 64 04                 t2 = t2 + s1
  8487: 82 19 60 01              a2 = u64 [sp + 0x160]
  8491: d3 94 0b                 a4 = t2 ^ a2
  8494: 9e bb 18                 a4 = a4 >>r 0x18
  8497: c8 b7 07                 a0 = a0 + a4
  8500: d3 76 06                 s1 = s1 ^ a0
  8503: 9e 69 10                 a2 = s1 >>r 0x10
  8506: 7b 19 60 01              u64 [sp + 0x160] = a2
  8510: c8 49 09                 a2 = a2 + t2
  8513: 7b 19 30 01              u64 [sp + 0x130] = a2
  8517: d3 b9 09                 a2 = a2 ^ a4
  8520: 9e 96 3f                 s1 = a2 >>r 0x3f
  8523: 7b 16 38 01              u64 [sp + 0x138] = s1
  8527: 9e 2b 20                 a4 = t0 >>r 0x20
  8530: 82 12 58 01              t0 = u64 [sp + 0x158]
  8534: c8 b2 02                 t0 = t0 + a4
  8537: d3 c2 09                 a2 = t0 ^ a5
  8540: 9e 9c 18                 a5 = a2 >>r 0x18
  8543: c8 c3 03                 t1 = t1 + a5
  8546: 7b 13 58 01              u64 [sp + 0x158] = t1
  8550: d3 b3 0b                 a4 = t1 ^ a4
  8553: 9e bb 10                 a4 = a4 >>r 0x10
  8556: c8 2b 09                 a2 = a4 + t0
  8559: 7b 19 10 01              u64 [sp + 0x110] = a2
  8563: 82 13 d8 00              t1 = u64 [sp + 0xd8]
  8567: 97 33 03                 t1 = t1 << 0x3
  8570: 95 14 d0 02              t2 = sp + 0x2d0
  8574: c8 43 03                 t1 = t1 + t2
  8577: 82 33                    t1 = u64 [t1]
  8579: 82 12 d0 00              t0 = u64 [sp + 0xd0]
  8583: 97 22 03                 t0 = t0 << 0x3
  8586: c8 42 02                 t0 = t0 + t2
  8589: 82 22                    t0 = u64 [t0]
  8591: c8 65 05                 s0 = s0 + s1
  8594: d3 5b 0b                 a4 = a4 ^ s0
  8597: 7b 1b 28 01              u64 [sp + 0x128] = a4
  8601: c8 53 03                 t1 = t1 + s0
  8604: 7b 13 40 01              u64 [sp + 0x140] = t1
  8608: c8 72 02                 t0 = t0 + a0
  8611: 9e aa 10                 a3 = a3 >>r 0x10
  8614: c8 a8 08                 a1 = a1 + a3
  8617: 7b 18 18 01              u64 [sp + 0x118] = a1
  8621: 82 17 48 01              a0 = u64 [sp + 0x148]
  8625: 9e 78 20                 a1 = a0 >>r 0x20
  8628: 82 13 00 01              t1 = u64 [sp + 0x100]
  8632: c8 83 03                 t1 = t1 + a1
  8635: 82 17 68 01              a0 = u64 [sp + 0x168]
  8639: d3 73 0b                 a4 = t1 ^ a0
  8642: 9e b5 18                 s0 = a4 >>r 0x18
  8645: 82 17 20 01              a0 = u64 [sp + 0x120]
  8649: c8 57 07                 a0 = a0 + s0
  8652: d3 78 08                 a1 = a1 ^ a0
  8655: 9e 86 10                 s1 = a1 >>r 0x10
  8658: c8 63 03                 t1 = t1 + s1
  8661: d3 53 05                 s0 = t1 ^ s0
  8664: 9e 5b 3f                 a4 = s0 >>r 0x3f
  8667: 7b 1b 48 01              u64 [sp + 0x148] = a4
  8671: 82 15 c8 00              s0 = u64 [sp + 0xc8]
  8675: 97 55 03                 s0 = s0 << 0x3
  8678: 95 18 d0 02              a1 = sp + 0x2d0
  8682: c8 85 05                 s0 = s0 + a1
  8685: 82 55                    s0 = u64 [s0]
  8687: 82 14 c0 00              t2 = u64 [sp + 0xc0]
  8691: 97 44 03                 t2 = t2 << 0x3
  8694: c8 84 04                 t2 = t2 + a1
  8697: 82 44                    t2 = u64 [t2]
  8699: c8 b2 02                 t0 = t0 + a4
  8702: d3 a2 0a                 a3 = t0 ^ a3
  8705: 7b 1a 20 01              u64 [sp + 0x120] = a3
  8709: c8 52 02                 t0 = t0 + s0
  8712: 7b 12 68 01              u64 [sp + 0x168] = t0
  8716: c8 74 04                 t2 = t2 + a0
  8719: d3 c9 07                 a0 = a2 ^ a5
  8722: 9e 7b 3f                 a4 = a0 >>r 0x3f
  8725: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  8729: 97 99 03                 a2 = a2 << 0x3
  8732: c8 89 09                 a2 = a2 + a1
  8735: 82 99                    a2 = u64 [a2]
  8737: 82 15 b0 00              s0 = u64 [sp + 0xb0]
  8741: 97 55 03                 s0 = s0 << 0x3
  8744: c8 85 05                 s0 = s0 + a1
  8747: 82 55                    s0 = u64 [s0]
  8749: c8 b4 04                 t2 = t2 + a4
  8752: 82 17 60 01              a0 = u64 [sp + 0x160]
  8756: d3 74 07                 a0 = t2 ^ a0
  8759: 7b 17 08 01              u64 [sp + 0x108] = a0
  8763: c8 49 09                 a2 = a2 + t2
  8766: 7b 19 00 01              u64 [sp + 0x100] = a2
  8770: 82 1c 58 01              a5 = u64 [sp + 0x158]
  8774: c8 5c 0c                 a5 = a5 + s0
  8777: 82 19 50 01              a2 = u64 [sp + 0x150]
  8781: 82 17 18 01              a0 = u64 [sp + 0x118]
  8785: d3 97 05                 s0 = a0 ^ a2
  8788: 82 1a b8 00              a3 = u64 [sp + 0xb8]
  8792: 97 aa 03                 a3 = a3 << 0x3
  8795: c8 8a 0a                 a3 = a3 + a1
  8798: 82 aa                    a3 = u64 [a3]
  8800: 9e 55 3f                 s0 = s0 >>r 0x3f
  8803: c8 5c 0c                 a5 = a5 + s0
  8806: d3 6c 04                 t2 = a5 ^ s1
  8809: c8 ac 02                 t0 = a5 + a3
  8812: 82 18 28 01              a1 = u64 [sp + 0x128]
  8816: 9e 8c 20                 a5 = a1 >>r 0x20
  8819: c8 3c 08                 a1 = a5 + t1
  8822: 82 19 38 01              a2 = u64 [sp + 0x138]
  8826: d3 89 09                 a2 = a2 ^ a1
  8829: 9e 99 18                 a2 = a2 >>r 0x18
  8832: 82 1a 40 01              a3 = u64 [sp + 0x140]
  8836: c8 9a 0a                 a3 = a3 + a2
  8839: 7b 1a 40 01              u64 [sp + 0x140] = a3
  8843: d3 ac 0c                 a5 = a5 ^ a3
  8846: 9e c3 10                 t1 = a5 >>r 0x10
  8849: 7b 13 38 01              u64 [sp + 0x138] = t1
  8853: c8 83 03                 t1 = t1 + a1
  8856: d3 93 08                 a1 = t1 ^ a2
  8859: 9e 88 3f                 a1 = a1 >>r 0x3f
  8862: 7b 18 60 01              u64 [sp + 0x160] = a1
  8866: 82 18 20 01              a1 = u64 [sp + 0x120]
  8870: 9e 88 20                 a1 = a1 >>r 0x20
  8873: 82 19 10 01              a2 = u64 [sp + 0x110]
  8877: c8 89 09                 a2 = a2 + a1
  8880: 82 1c 48 01              a5 = u64 [sp + 0x148]
  8884: d3 9c 0c                 a5 = a5 ^ a2
  8887: 9e cc 18                 a5 = a5 >>r 0x18
  8890: 82 1a 68 01              a3 = u64 [sp + 0x168]
  8894: c8 ca 0a                 a3 = a3 + a5
  8897: 7b 1a 48 01              u64 [sp + 0x148] = a3
  8901: d3 a8 08                 a1 = a1 ^ a3
  8904: 9e 88 10                 a1 = a1 >>r 0x10
  8907: 7b 18 20 01              u64 [sp + 0x120] = a1
  8911: c8 98 08                 a1 = a1 + a2
  8914: 7b 18 58 01              u64 [sp + 0x158] = a1
  8918: d3 c8 08                 a1 = a1 ^ a5
  8921: 82 1c a8 00              a5 = u64 [sp + 0xa8]
  8925: 9e 88 3f                 a1 = a1 >>r 0x3f
  8928: 7b 18 68 01              u64 [sp + 0x168] = a1
  8932: 82 18 08 01              a1 = u64 [sp + 0x108]
  8936: 9e 88 20                 a1 = a1 >>r 0x20
  8939: 33 06 10                 s1 = 0x10
  8942: c8 78 09                 a2 = a1 + a0
  8945: d3 b9 07                 a0 = a2 ^ a4
  8948: 9e 77 18                 a0 = a0 >>r 0x18
  8951: 82 1a 00 01              a3 = u64 [sp + 0x100]
  8955: c8 7a 0a                 a3 = a3 + a0
  8958: 7b 1a 50 01              u64 [sp + 0x150] = a3
  8962: d3 a8 08                 a1 = a1 ^ a3
  8965: 9e 8a 10                 a3 = a1 >>r 0x10
  8968: 7b 1a 28 01              u64 [sp + 0x128] = a3
  8972: c8 9a 0a                 a3 = a3 + a2
  8975: d3 a7 07                 a0 = a0 ^ a3
  8978: 9e 7b 3f                 a4 = a0 >>r 0x3f
  8981: 9e 47 20                 a0 = t2 >>r 0x20
  8984: 82 18 30 01              a1 = u64 [sp + 0x130]
  8988: c8 78 08                 a1 = a1 + a0
  8991: d3 85 05                 s0 = s0 ^ a1
  8994: 9e 59 18                 a2 = s0 >>r 0x18
  8997: c8 92 02                 t0 = t0 + a2
  9000: d3 72 07                 a0 = t0 ^ a0
  9003: 9e 75 10                 s0 = a0 >>r 0x10
  9006: 7b 15 30 01              u64 [sp + 0x130] = s0
  9010: c8 85 05                 s0 = s0 + a1
  9013: d3 95 07                 a0 = s0 ^ a2
  9016: 9e 79 3f                 a2 = a0 >>r 0x3f
  9019: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  9022: c8 60 00                 ra = ra + s1
  9025: 52 0c 28 fc              jump @483 if a5 != 0
      :                          @500
  9029: 82 17 88 00              a0 = u64 [sp + 0x88]
  9033: 82 18 40 01              a1 = u64 [sp + 0x140]
  9037: d3 87 07                 a0 = a0 ^ a1
  9040: d3 a7 07                 a0 = a0 ^ a3
  9043: 7b 17 70 01              u64 [sp + 0x170] = a0
  9047: 82 17 90 00              a0 = u64 [sp + 0x90]
  9051: 82 18 48 01              a1 = u64 [sp + 0x148]
  9055: d3 87 07                 a0 = a0 ^ a1
  9058: d3 57 07                 a0 = a0 ^ s0
  9061: 7b 17 78 01              u64 [sp + 0x178] = a0
  9065: 82 17 98 00              a0 = u64 [sp + 0x98]
  9069: d3 73 07                 a0 = t1 ^ a0
  9072: 82 18 50 01              a1 = u64 [sp + 0x150]
  9076: d3 87 07                 a0 = a0 ^ a1
  9079: 7b 17 80 01              u64 [sp + 0x180] = a0
  9083: 82 17 80 00              a0 = u64 [sp + 0x80]
  9087: 82 18 58 01              a1 = u64 [sp + 0x158]
  9091: d3 87 07                 a0 = a0 ^ a1
  9094: d3 27 07                 a0 = a0 ^ t0
  9097: 7b 17 88 01              u64 [sp + 0x188] = a0
  9101: 7c 18 8f 01              a1 = u8 [sp + 0x18f]
  9105: 7c 17 70 01              a0 = u8 [sp + 0x170]
  9109: 7c 19 8e 01              a2 = u8 [sp + 0x18e]
  9113: 7c 1a 8d 01              a3 = u8 [sp + 0x18d]
  9117: 82 1b                    a4 = u64 [sp]
  9119: 78 b8 1f                 u8 [a4 + 0x1f] = a1
  9122: 7c 18 8c 01              a1 = u8 [sp + 0x18c]
  9126: 78 b9 1e                 u8 [a4 + 0x1e] = a2
  9129: 7c 19 8b 01              a2 = u8 [sp + 0x18b]
  9133: 78 ba 1d                 u8 [a4 + 0x1d] = a3
  9136: 7c 1a 8a 01              a3 = u8 [sp + 0x18a]
  9140: 78 b8 1c                 u8 [a4 + 0x1c] = a1
  9143: 7c 18 89 01              a1 = u8 [sp + 0x189]
  9147: 78 b9 1b                 u8 [a4 + 0x1b] = a2
  9150: 7c 19 88 01              a2 = u8 [sp + 0x188]
  9154: 78 ba 1a                 u8 [a4 + 0x1a] = a3
  9157: 7c 1a 87 01              a3 = u8 [sp + 0x187]
  9161: 78 b8 19                 u8 [a4 + 0x19] = a1
  9164: 7c 18 86 01              a1 = u8 [sp + 0x186]
  9168: 78 b9 18                 u8 [a4 + 0x18] = a2
  9171: 7c 19 85 01              a2 = u8 [sp + 0x185]
  9175: 78 ba 17                 u8 [a4 + 0x17] = a3
  9178: 7c 1a 83 01              a3 = u8 [sp + 0x183]
  9182: 78 b8 16                 u8 [a4 + 0x16] = a1
  9185: 7c 18 82 01              a1 = u8 [sp + 0x182]
  9189: 78 b9 15                 u8 [a4 + 0x15] = a2
  9192: 7c 19 81 01              a2 = u8 [sp + 0x181]
  9196: 78 ba 13                 u8 [a4 + 0x13] = a3
  9199: 7c 1a 80 01              a3 = u8 [sp + 0x180]
  9203: 78 b8 12                 u8 [a4 + 0x12] = a1
  9206: 7c 18 7f 01              a1 = u8 [sp + 0x17f]
  9210: 78 b9 11                 u8 [a4 + 0x11] = a2
  9213: 7c 19 7e 01              a2 = u8 [sp + 0x17e]
  9217: 78 ba 10                 u8 [a4 + 0x10] = a3
  9220: 7c 1a 7d 01              a3 = u8 [sp + 0x17d]
  9224: 78 b8 0f                 u8 [a4 + 0xf] = a1
  9227: 7c 18 7c 01              a1 = u8 [sp + 0x17c]
  9231: 78 b9 0e                 u8 [a4 + 0xe] = a2
  9234: 7c 19 7b 01              a2 = u8 [sp + 0x17b]
  9238: 78 ba 0d                 u8 [a4 + 0xd] = a3
  9241: 7c 1a 7a 01              a3 = u8 [sp + 0x17a]
  9245: 78 b8 0c                 u8 [a4 + 0xc] = a1
  9248: 7c 18 79 01              a1 = u8 [sp + 0x179]
  9252: 78 b9 0b                 u8 [a4 + 0xb] = a2
  9255: 7c 19 78 01              a2 = u8 [sp + 0x178]
  9259: 78 ba 0a                 u8 [a4 + 0xa] = a3
  9262: 7c 1a 77 01              a3 = u8 [sp + 0x177]
  9266: 78 b8 09                 u8 [a4 + 0x9] = a1
  9269: 7c 18 76 01              a1 = u8 [sp + 0x176]
  9273: 78 b9 08                 u8 [a4 + 0x8] = a2
  9276: 7c 19 75 01              a2 = u8 [sp + 0x175]
  9280: 78 ba 07                 u8 [a4 + 0x7] = a3
  9283: 7c 1a 74 01              a3 = u8 [sp + 0x174]
  9287: 78 b8 06                 u8 [a4 + 0x6] = a1
  9290: 7c 18 73 01              a1 = u8 [sp + 0x173]
  9294: 78 b9 05                 u8 [a4 + 0x5] = a2
  9297: 7c 19 72 01              a2 = u8 [sp + 0x172]
  9301: 78 ba 04                 u8 [a4 + 0x4] = a3
  9304: 7c 1a 71 01              a3 = u8 [sp + 0x171]
  9308: 78 b8 03                 u8 [a4 + 0x3] = a1
  9311: 7c 18 84 01              a1 = u8 [sp + 0x184]
  9315: 78 b9 02                 u8 [a4 + 0x2] = a2
  9318: 78 ba 01                 u8 [a4 + 0x1] = a3
  9321: 78 b7                    u8 [a4] = a0
  9323: 78 b8 14                 u8 [a4 + 0x14] = a1
  9326: 82 10 60 03              ra = u64 [sp + 0x360]
  9330: 82 15 58 03              s0 = u64 [sp + 0x358]
  9334: 82 16 50 03              s1 = u64 [sp + 0x350]
  9338: 95 11 68 03              sp = sp + 0x368
  9342: 32 00                    ret
      :                          @501
  9344: 00                       trap
      :                          @502
  9345: 00                       trap
      :                          @503
  9346: 00                       trap
      :                          @504
  9347: 00                       trap
      :                          @505
  9348: 00                       trap
      :                          @506
  9349: 00                       trap
      :                          @507
  9350: 00                       trap
      :                          @508
  9351: 00                       trap
      :                          @509
  9352: 00                       trap
      :                          @510
  9353: 00                       trap
      :                          @511
  9354: 00                       trap
      :                          @512
  9355: 00                       trap
      :                          @513
  9356: 00                       trap
