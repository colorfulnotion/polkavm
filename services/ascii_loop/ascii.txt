// RO data = 500/500 bytes
// RW data = 24/3813424 bytes
// Stack size = 1048576 bytes
// RO data = [64, 37, 35, 42, 43, 61, 45, 32, 46, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 58, 32, 44, 32, 102, 105, 114, 115, 116, 32, 98, 121, 116, 101, 115, 58, 32, 0, 10, 0, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 24, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 114, 101, 102, 105, 110, 101, 58, 32, 65, 83, 67, 73, 73, 32, 97, 114, 116, 32, 103, 101, 110, 101, 114, 97, 116, 101, 100, 44, 32, 108, 101, 110, 103, 116, 104, 58, 32, 44, 32, 101, 120, 112, 101, 99, 116, 101, 100, 58, 32, 0, 0, 0, 0, 0, 0, 0, 72, 0, 1, 0, 0, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 109, 0, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 114, 101, 102, 105, 110, 101, 58, 32, 102, 101, 116, 99, 104, 32, 102, 97, 105, 108, 101, 100, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [143, 227, 56, 142, 227, 56, 142, 3, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2190
// Code size = 6409 bytes

      :                          @0
     0: 28 0a 05 00 00           jump @101
      :                          @1
     5: 28 f1 0a 00 00           jump @206
      :                          @2
    10: 28 f5 0a                 jump @207
      :                          @3 [@dyn 1]
    13: 95 11 60 ff              sp = sp + 0xffffffffffffff60
    17: 7b 10 98 00              u64 [sp + 0x98] = ra
    21: 7b 15 90 00              u64 [sp + 0x90] = s0
    25: 7b 16 88 00              u64 [sp + 0x88] = s1
    29: 82 89 28                 a2 = u64 [a1 + 0x28]
    32: 82 7a                    a3 = u64 [a0]
    34: 7b 1a 18                 u64 [sp + 0x18] = a3
    37: 82 76 08                 s1 = u64 [a0 + 0x8]
    40: 7b 18 20                 u64 [sp + 0x20] = a1
    43: 82 87 20                 a0 = u64 [a1 + 0x20]
    46: 82 9a 18                 a3 = u64 [a2 + 0x18]
    49: 33 08 e8 00 01           a1 = 0x100e8
    54: 33 09 01                 a2 = 0x1
    57: 33 05 01                 s0 = 0x1
    60: b4 a0 01 04              ra = 4, jump [a3]
      :                          @4 [@dyn 2]
    64: 51 06 1e                 jump @9 if s1 == 0
      :                          @5
    67: 52 07 be 00              jump @16 if a0 != 0
      :                          @6
    71: 82 18 20                 a1 = u64 [sp + 0x20]
    74: 80 89 34                 a2 = u32 [a1 + 0x34]
    77: 84 97 04                 a0 = a2 & 0x4
    80: 52 07 16                 jump @10 if a0 != 0
      :                          @7
    83: 82 17 18                 a0 = u64 [sp + 0x18]
    86: 50 10 06 bd 01           ra = 6, jump @33
      :                          @8 [@dyn 3]
    91: 28 a3 00                 jump @15
      :                          @9
    94: 64 79                    a2 = a0
    96: 82 18 20                 a1 = u64 [sp + 0x20]
    99: 28 83 01                 jump @30
      :                          @10
   102: 7b 19 10                 u64 [sp + 0x10] = a2
   105: 82 89 28                 a2 = u64 [a1 + 0x28]
   108: 82 87 20                 a0 = u64 [a1 + 0x20]
   111: 7b 19 08                 u64 [sp + 0x8] = a2
   114: 82 9a 18                 a3 = u64 [a2 + 0x18]
   117: 33 08 28 01 01           a1 = 0x10128
   122: 33 09 01                 a2 = 0x1
   125: 33 05 01                 s0 = 0x1
   128: 7b 17                    u64 [sp] = a0
   130: b4 a0 01 08              ra = 8, jump [a3]
      :                          @11 [@dyn 4]
   134: 52 07 7b                 jump @16 if a0 != 0
      :                          @12
   137: 33 05 01                 s0 = 0x1
   140: 78 15 47                 u8 [sp + 0x47] = s0
   143: 82 17                    a0 = u64 [sp]
   145: 7b 17 28                 u64 [sp + 0x28] = a0
   148: 82 17 08                 a0 = u64 [sp + 0x8]
   151: 7b 17 30                 u64 [sp + 0x30] = a0
   154: 95 17 47                 a0 = sp + 0x47
   157: 7b 17 38                 u64 [sp + 0x38] = a0
   160: 82 1c 20                 a5 = u64 [sp + 0x20]
   163: 81 c2 30                 t0 = i32 [a5 + 0x30]
   166: 7c c8 38                 a1 = u8 [a5 + 0x38]
   169: 82 c9                    a2 = u64 [a5]
   171: 82 ca 08                 a3 = u64 [a5 + 0x8]
   174: 82 cb 10                 a4 = u64 [a5 + 0x10]
   177: 82 cc 18                 a5 = u64 [a5 + 0x18]
   180: 82 17 10                 a0 = u64 [sp + 0x10]
   183: 7a 17 7c                 u32 [sp + 0x7c] = a0
   186: 7a 12 78                 u32 [sp + 0x78] = t0
   189: 78 18 80 00              u8 [sp + 0x80] = a1
   193: 7b 19 48                 u64 [sp + 0x48] = a2
   196: 7b 1a 50                 u64 [sp + 0x50] = a3
   199: 7b 1b 58                 u64 [sp + 0x58] = a4
   202: 7b 1c 60                 u64 [sp + 0x60] = a5
   205: 95 17 28                 a0 = sp + 0x28
   208: 7b 17 68                 u64 [sp + 0x68] = a0
   211: 33 07 f0 00 01           a0 = 0x100f0
   216: 7b 17 70                 u64 [sp + 0x70] = a0
   219: 95 18 48                 a1 = sp + 0x48
   222: 82 17 18                 a0 = u64 [sp + 0x18]
   225: 50 10 0a 32 01           ra = 10, jump @33
      :                          @13 [@dyn 5]
   230: 52 07 1b                 jump @16 if a0 != 0
      :                          @14
   233: 82 18 70                 a1 = u64 [sp + 0x70]
   236: 82 17 68                 a0 = u64 [sp + 0x68]
   239: 82 8a 18                 a3 = u64 [a1 + 0x18]
   242: 33 08 26 01 01           a1 = 0x10126
   247: 33 09 02                 a2 = 0x2
   250: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @15 [@dyn 6]
   254: 64 75                    s0 = a0
   256: 01                       fallthrough
      :                          @16
   257: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   260: 82 18 20                 a1 = u64 [sp + 0x20]
   263: 64 59                    a2 = s0
   265: 51 06 dd 00              jump @30 if s1 == 0
      :                          @17
   269: 82 15 18                 s0 = u64 [sp + 0x18]
   272: 95 55 01                 s0 = s0 + 0x1
   275: 33 07 24 01 01           a0 = 0x10124
   280: 7b 17 18                 u64 [sp + 0x18] = a0
   283: 33 07 f0 00 01           a0 = 0x100f0
   288: 7b 17 10                 u64 [sp + 0x10] = a0
   291: 33 07 26 01 01           a0 = 0x10126
   296: 7b 17 08                 u64 [sp + 0x8] = a0
   299: 28 13                    jump @20
      :                          @18
   301: 33 09 01                 a2 = 0x1
   304: 82 18 20                 a1 = u64 [sp + 0x20]
   307: 01                       fallthrough
      :                          @19
   308: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   311: 95 55 01                 s0 = s0 + 0x1
   314: 51 06 ac 00              jump @30 if s1 == 0
      :                          @20
   318: 84 97 ff 00              a0 = a2 & 0xff
   322: 33 09 01                 a2 = 0x1
   325: 52 07 ef                 jump @19 if a0 != 0
      :                          @21
   328: 80 8b 34                 a4 = u32 [a1 + 0x34]
   331: 82 87 20                 a0 = u64 [a1 + 0x20]
   334: 82 89 28                 a2 = u64 [a1 + 0x28]
   337: 84 ba 04                 a3 = a4 & 0x4
   340: 52 0a 27                 jump @26 if a3 != 0
      :                          @22
   343: 82 9a 18                 a3 = u64 [a2 + 0x18]
   346: 33 09 02                 a2 = 0x2
   349: 82 18 18                 a1 = u64 [sp + 0x18]
   352: b4 a0 01 0e              ra = 14, jump [a3]
      :                          @23 [@dyn 7]
   356: 82 18 20                 a1 = u64 [sp + 0x20]
   359: 33 09 01                 a2 = 0x1
   362: 52 07 ca                 jump @19 if a0 != 0
      :                          @24
   365: 64 57                    a0 = s0
   367: 50 10 10 a4 00           ra = 16, jump @33
      :                          @25 [@dyn 8]
   372: 82 18 20                 a1 = u64 [sp + 0x20]
   375: 64 79                    a2 = a0
   377: 28 bb                    jump @19
      :                          @26
   379: 46 11 47 01              u8 [sp + 71] = 0x1
   383: 7b 17 28                 u64 [sp + 0x28] = a0
   386: 7b 19 30                 u64 [sp + 0x30] = a2
   389: 95 17 47                 a0 = sp + 0x47
   392: 7b 17 38                 u64 [sp + 0x38] = a0
   395: 81 87 30                 a0 = i32 [a1 + 0x30]
   398: 7c 89 38                 a2 = u8 [a1 + 0x38]
   401: 82 8a                    a3 = u64 [a1]
   403: 82 83 08                 t1 = u64 [a1 + 0x8]
   406: 82 8c 10                 a5 = u64 [a1 + 0x10]
   409: 82 82 18                 t0 = u64 [a1 + 0x18]
   412: 7a 1b 7c                 u32 [sp + 0x7c] = a4
   415: 7a 17 78                 u32 [sp + 0x78] = a0
   418: 78 19 80 00              u8 [sp + 0x80] = a2
   422: 7b 1a 48                 u64 [sp + 0x48] = a3
   425: 7b 13 50                 u64 [sp + 0x50] = t1
   428: 7b 1c 58                 u64 [sp + 0x58] = a5
   431: 7b 12 60                 u64 [sp + 0x60] = t0
   434: 95 17 28                 a0 = sp + 0x28
   437: 7b 17 68                 u64 [sp + 0x68] = a0
   440: 82 17 10                 a0 = u64 [sp + 0x10]
   443: 7b 17 70                 u64 [sp + 0x70] = a0
   446: 95 18 48                 a1 = sp + 0x48
   449: 64 57                    a0 = s0
   451: 50 10 12 50              ra = 18, jump @33
      :                          @27 [@dyn 9]
   455: 52 07 66 ff              jump @18 if a0 != 0
      :                          @28
   459: 82 18 70                 a1 = u64 [sp + 0x70]
   462: 82 17 68                 a0 = u64 [sp + 0x68]
   465: 82 8a 18                 a3 = u64 [a1 + 0x18]
   468: 33 09 02                 a2 = 0x2
   471: 82 18 08                 a1 = u64 [sp + 0x8]
   474: b4 a0 01 14              ra = 20, jump [a3]
      :                          @29 [@dyn 10]
   478: 64 79                    a2 = a0
   480: 82 18 20                 a1 = u64 [sp + 0x20]
   483: 28 51 ff                 jump @19
      :                          @30
   486: 33 07 01                 a0 = 0x1
   489: 52 09 18                 jump @32 if a2 != 0
      :                          @31
   492: 82 89 28                 a2 = u64 [a1 + 0x28]
   495: 82 87 20                 a0 = u64 [a1 + 0x20]
   498: 82 9a 18                 a3 = u64 [a2 + 0x18]
   501: 33 08 29 01 01           a1 = 0x10129
   506: 33 09 01                 a2 = 0x1
   509: b4 a0 01 16              ra = 22, jump [a3]
      :                          @32 [@dyn 11]
   513: 82 10 98 00              ra = u64 [sp + 0x98]
   517: 82 15 90 00              s0 = u64 [sp + 0x90]
   521: 82 16 88 00              s1 = u64 [sp + 0x88]
   525: 95 11 a0 00              sp = sp + 0xa0
   529: 32 00                    ret
      :                          @33
   531: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   535: 7b 10 80 00              u64 [sp + 0x80] = ra
   539: 64 82                    t0 = a1
   541: 80 88 34                 a1 = u32 [a1 + 0x34]
   544: 84 89 10                 a2 = a1 & 0x10
   547: 52 09 1b                 jump @36 if a2 != 0
      :                          @34
   550: 84 88 20                 a1 = a1 & 0x20
   553: 52 08 46                 jump @39 if a1 != 0
      :                          @35
   556: 7c 77                    a0 = u8 [a0]
   558: 33 08 01                 a1 = 0x1
   561: 64 29                    a2 = t0
   563: 82 10 80 00              ra = u64 [sp + 0x80]
   567: 95 11 88 00              sp = sp + 0x88
   571: 28 3c 0e                 jump @335
      :                          @36
   574: 7c 77                    a0 = u8 [a0]
   576: 33 0a 81 00              a3 = 0x81
   580: 95 18 7f                 a1 = sp + 0x7f
   583: 33 03 57                 t1 = 0x57
   586: 01                       fallthrough
      :                          @37
   587: 64 ab                    a4 = a3
   589: 84 7a 0f                 a3 = a0 & 0xf
   592: 97 77 38                 a0 = a0 << 0x38
   595: 98 77 3c                 a0 = a0 >> 0x3c
   598: 88 ac 0a                 a5 = a3 <u 0xa
   601: 33 09 30                 a2 = 0x30
   604: da c3 09                 a2 = t1 if a5 == 0
   607: be a9 09                 i32 a2 = a2 + a3
   610: 78 89                    u8 [a1] = a2
   612: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
   615: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
   618: 52 07 e1                 jump @37 if a0 != 0
      :                          @38
   621: 28 31                    jump @41
      :                          @39
   623: 7c 77                    a0 = u8 [a0]
   625: 33 0a 81 00              a3 = 0x81
   629: 95 18 7f                 a1 = sp + 0x7f
   632: 33 03 37                 t1 = 0x37
   635: 01                       fallthrough
      :                          @40
   636: 64 ab                    a4 = a3
   638: 84 7a 0f                 a3 = a0 & 0xf
   641: 97 77 38                 a0 = a0 << 0x38
   644: 98 77 3c                 a0 = a0 >> 0x3c
   647: 88 ac 0a                 a5 = a3 <u 0xa
   650: 33 09 30                 a2 = 0x30
   653: da c3 09                 a2 = t1 if a5 == 0
   656: be a9 09                 i32 a2 = a2 + a3
   659: 78 89                    u8 [a1] = a2
   661: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
   664: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
   667: 52 07 e1                 jump @40 if a0 != 0
      :                          @41
   670: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   673: 56 27 80 00 2a           jump @44 if a0 >u 128
      :                          @42
   678: 9a ac 81 00              a5 = 0x81 - a3
   682: 64 1b                    a4 = sp
   684: c8 7b 0b                 a4 = a4 + a0
   687: 33 09 2a 01 01           a2 = 0x1012a
   692: 33 08 01                 a1 = 0x1
   695: 33 0a 02                 a3 = 0x2
   698: 64 27                    a0 = t0
   700: 50 10 18 e8 0e           ra = 24, jump @345
      :                          @43 [@dyn 12]
   705: 82 10 80 00              ra = u64 [sp + 0x80]
   709: 95 11 88 00              sp = sp + 0x88
   713: 32 00                    ret
      :                          @44
   715: 00                       trap
      :                          @45
   716: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   719: 7b 10 30                 u64 [sp + 0x30] = ra
   722: 7b 15 28                 u64 [sp + 0x28] = s0
   725: 7b 16 20                 u64 [sp + 0x20] = s1
   728: 64 95                    s0 = a2
   730: 64 72                    t0 = a0
   732: 51 08 79                 jump @55 if a1 == 0
      :                          @46
   735: 82 a7 08                 a0 = u64 [a3 + 0x8]
   738: 51 07 7c                 jump @56 if a0 == 0
      :                          @47
   741: 82 a9 10                 a2 = u64 [a3 + 0x10]
   744: 51 09 aa 00              jump @63 if a2 == 0
      :                          @48
   748: 82 a8                    a1 = u64 [a3]
   750: 33 06 20 30 2d           s1 = 0x2d3020
   755: 33 03 00 00 10           t1 = 0x100000
   760: c8 36 06                 s1 = s1 + t1
   763: 01                       fallthrough
      :                          @49
   764: 82 6a                    a3 = u64 [s1]
   766: c8 5a 07                 a0 = a3 + s0
   769: ac a7 cf 00              jump @69 if a0 <u a3
      :                          @50
   773: 95 7b 01                 a4 = a0 + 0x1
   776: 88 bc 01                 a5 = a4 <u 0x1
   779: d8 b3 0b                 a4 = t1 <u a4
   782: d4 cb 0b                 a4 = a4 | a5
   785: 52 0b bf 00              jump @69 if a4 != 0
      :                          @51
   789: 82 6b                    a4 = u64 [s1]
   791: ab ab e5                 jump @49 if a4 != a3
      :                          @52
   794: 7b 67                    u64 [s1] = a0
   796: 33 0c                    a5 = 0
   798: 7b 12 18                 u64 [sp + 0x18] = t0
   801: 33 0a 20 30 2d           a3 = 0x2d3020
   806: 33 0b 00 00 10           a4 = 0x100000
   811: 7b 1a                    u64 [sp] = a3
   813: c8 ba 0a                 a3 = a3 + a4
   816: c9 7a 07                 a0 = a3 - a0
   819: 7b 17 10                 u64 [sp + 0x10] = a0
   822: 7b 18 08                 u64 [sp + 0x8] = a1
   825: 64 96                    s1 = a2
   827: 50 10 1a 7e 0c           ra = 26, jump @314
      :                          @53 [@dyn 13]
   832: 54 36 00 00 10 98 00     jump @70 if s1 <=u 1048576
      :                          @54
   839: 82 12 18                 t0 = u64 [sp + 0x18]
   842: 82 18 10                 a1 = u64 [sp + 0x10]
   845: 33 07                    a0 = 0
   847: 7b 28 08                 u64 [t0 + 0x8] = a1
   850: 28 b5 00                 jump @76
      :                          @55
   853: 49 12 08                 u64 [t0 + 8] = 0
   856: 33 07 01                 a0 = 0x1
   859: 28 ac 00                 jump @76
      :                          @56
   862: 33 09 20 30 2d           a2 = 0x2d3020
   867: 33 07 00 00 10           a0 = 0x100000
   872: c8 79 09                 a2 = a2 + a0
   875: 01                       fallthrough
      :                          @57
   876: 82 9a                    a3 = u64 [a2]
   878: c8 5a 08                 a1 = a3 + s0
   881: ac a8 5f                 jump @69 if a1 <u a3
      :                          @58
   884: 95 8b 01                 a4 = a1 + 0x1
   887: 88 bc 01                 a5 = a4 <u 0x1
   890: d8 b7 0b                 a4 = a0 <u a4
   893: d4 cb 0b                 a4 = a4 | a5
   896: 52 0b 50                 jump @69 if a4 != 0
      :                          @59
   899: 82 9b                    a4 = u64 [a2]
   901: ab ab e7                 jump @57 if a4 != a3
      :                          @60
   904: 7b 98                    u64 [a2] = a1
   906: 33 0c                    a5 = 0
   908: 01                       fallthrough
      :                          @61
   909: ab ab df                 jump @57 if a4 != a3
      :                          @62
   912: 28 31                    jump @68
      :                          @63
   914: 33 09 20 30 2d           a2 = 0x2d3020
   919: 33 07 00 00 10           a0 = 0x100000
   924: c8 79 09                 a2 = a2 + a0
   927: 01                       fallthrough
      :                          @64
   928: 82 9a                    a3 = u64 [a2]
   930: c8 5a 08                 a1 = a3 + s0
   933: ac a8 2b                 jump @69 if a1 <u a3
      :                          @65
   936: 95 8b 01                 a4 = a1 + 0x1
   939: 88 bc 01                 a5 = a4 <u 0x1
   942: d8 b7 0b                 a4 = a0 <u a4
   945: d4 cb 0b                 a4 = a4 | a5
   948: 52 0b 1c                 jump @69 if a4 != 0
      :                          @66
   951: 82 9b                    a4 = u64 [a2]
   953: ab ab e7                 jump @64 if a4 != a3
      :                          @67
   956: 7b 98                    u64 [a2] = a1
   958: 33 0c                    a5 = 0
   960: 01                       fallthrough
      :                          @68
   961: 33 07 20 30 3d           a0 = 0x3d3020
   966: c9 87 08                 a1 = a0 - a1
   969: 33 07                    a0 = 0
   971: 7b 28 08                 u64 [t0 + 0x8] = a1
   974: 28 39                    jump @76
      :                          @69
   976: 33 07 01                 a0 = 0x1
   979: 7b 27 08                 u64 [t0 + 0x8] = a0
   982: 28 31                    jump @76
      :                          @70
   984: 64 6c                    a5 = s1
   986: 82 17                    a0 = u64 [sp]
   988: 95 77 00 00 10           a0 = a0 + 0x100000
   993: 82 12 18                 t0 = u64 [sp + 0x18]
   996: 82 16 08                 s1 = u64 [sp + 0x8]
   999: 01                       fallthrough
      :                          @71
  1000: 82 78                    a1 = u64 [a0]
  1002: c9 87 09                 a2 = a0 - a1
  1005: ab 69 11                 jump @75 if a2 != s1
      :                          @72
  1008: c9 c8 09                 a2 = a1 - a5
  1011: 01                       fallthrough
      :                          @73
  1012: 82 7a                    a3 = u64 [a0]
  1014: ab 8a f2                 jump @71 if a3 != a1
      :                          @74
  1017: 7b 79                    u64 [a0] = a2
  1019: 33 0b                    a4 = 0
  1021: 01                       fallthrough
      :                          @75
  1022: 82 18 10                 a1 = u64 [sp + 0x10]
  1025: 33 07                    a0 = 0
  1027: 7b 28 08                 u64 [t0 + 0x8] = a1
  1030: 01                       fallthrough
      :                          @76
  1031: 7b 25 10                 u64 [t0 + 0x10] = s0
  1034: 7b 27                    u64 [t0] = a0
  1036: 82 10 30                 ra = u64 [sp + 0x30]
  1039: 82 15 28                 s0 = u64 [sp + 0x28]
  1042: 82 16 20                 s1 = u64 [sp + 0x20]
  1045: 95 11 38                 sp = sp + 0x38
  1048: 32 00                    ret
      :                          @77
  1050: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  1053: 7b 10 40                 u64 [sp + 0x40] = ra
  1056: 7b 15 38                 u64 [sp + 0x38] = s0
  1059: 7b 16 30                 u64 [sp + 0x30] = s1
  1062: 95 88 01                 a1 = a1 + 0x1
  1065: 51 08 53                 jump @85 if a1 == 0
      :                          @78
  1068: 64 75                    s0 = a0
  1070: 82 77                    a0 = u64 [a0]
  1072: 97 79 01                 a2 = a0 << 0x1
  1075: 33 0a 08                 a3 = 0x8
  1078: e4 a8 08                 a1 = maxu(a1, a3)
  1081: e4 89 06                 s1 = maxu(a2, a1)
  1084: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  1087: 98 88 3f                 a1 = a1 >> 0x3f
  1090: 51 07 12                 jump @80 if a0 == 0
      :                          @79
  1093: 82 59 08                 a2 = u64 [s0 + 0x8]
  1096: 7b 19 18                 u64 [sp + 0x18] = a2
  1099: 49 11 20 01              u64 [sp + 32] = 0x1
  1103: 7b 17 28                 u64 [sp + 0x28] = a0
  1106: 28 06                    jump @81
      :                          @80
  1108: 49 11 20                 u64 [sp + 32] = 0
  1111: 01                       fallthrough
      :                          @81
  1112: 64 17                    a0 = sp
  1114: 95 1a 18                 a3 = sp + 0x18
  1117: 64 69                    a2 = s1
  1119: 50 10 1c 6d fe           ra = 28, jump @45
      :                          @82 [@dyn 14]
  1124: 82 18                    a1 = u64 [sp]
  1126: 82 17 08                 a0 = u64 [sp + 0x8]
  1129: 51 08 14                 jump @86 if a1 == 0
      :                          @83
  1132: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  1142: aa 87 0d                 jump @87 if a0 == a1
      :                          @84
  1145: 52 07 18                 jump @88 if a0 != 0
      :                          @85
  1148: 00                       trap
      :                          @86
  1149: 7b 57 08                 u64 [s0 + 0x8] = a0
  1152: 7b 56                    u64 [s0] = s1
  1154: 01                       fallthrough
      :                          @87
  1155: 82 10 40                 ra = u64 [sp + 0x40]
  1158: 82 15 38                 s0 = u64 [sp + 0x38]
  1161: 82 16 30                 s1 = u64 [sp + 0x30]
  1164: 95 11 48                 sp = sp + 0x48
  1167: 32 00                    ret
      :                          @88
  1169: 00                       trap
      :                          @89
  1170: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  1173: 7b 10 40                 u64 [sp + 0x40] = ra
  1176: 7b 15 38                 u64 [sp + 0x38] = s0
  1179: 7b 16 30                 u64 [sp + 0x30] = s1
  1182: c8 89 09                 a2 = a2 + a1
  1185: ac 89 53                 jump @97 if a2 <u a1
      :                          @90
  1188: 64 75                    s0 = a0
  1190: 82 77                    a0 = u64 [a0]
  1192: 97 78 01                 a1 = a0 << 0x1
  1195: 33 0a 08                 a3 = 0x8
  1198: e4 a9 09                 a2 = maxu(a2, a3)
  1201: e4 98 06                 s1 = maxu(a1, a2)
  1204: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  1207: 98 88 3f                 a1 = a1 >> 0x3f
  1210: 51 07 12                 jump @92 if a0 == 0
      :                          @91
  1213: 82 59 08                 a2 = u64 [s0 + 0x8]
  1216: 7b 19 18                 u64 [sp + 0x18] = a2
  1219: 49 11 20 01              u64 [sp + 32] = 0x1
  1223: 7b 17 28                 u64 [sp + 0x28] = a0
  1226: 28 06                    jump @93
      :                          @92
  1228: 49 11 20                 u64 [sp + 32] = 0
  1231: 01                       fallthrough
      :                          @93
  1232: 64 17                    a0 = sp
  1234: 95 1a 18                 a3 = sp + 0x18
  1237: 64 69                    a2 = s1
  1239: 50 10 1e f5 fd           ra = 30, jump @45
      :                          @94 [@dyn 15]
  1244: 82 18                    a1 = u64 [sp]
  1246: 82 17 08                 a0 = u64 [sp + 0x8]
  1249: 51 08 14                 jump @98 if a1 == 0
      :                          @95
  1252: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  1262: aa 87 0d                 jump @99 if a0 == a1
      :                          @96
  1265: 52 07 18                 jump @100 if a0 != 0
      :                          @97
  1268: 00                       trap
      :                          @98
  1269: 7b 57 08                 u64 [s0 + 0x8] = a0
  1272: 7b 56                    u64 [s0] = s1
  1274: 01                       fallthrough
      :                          @99
  1275: 82 10 40                 ra = u64 [sp + 0x40]
  1278: 82 15 38                 s0 = u64 [sp + 0x38]
  1281: 82 16 30                 s1 = u64 [sp + 0x30]
  1284: 95 11 48                 sp = sp + 0x48
  1287: 32 00                    ret
      :                          @100
  1289: 00                       trap
      :                          @101 [export #0: 'refine']
  1290: 95 11 28 ff              sp = sp + 0xffffffffffffff28
  1294: 7b 10 d0 00              u64 [sp + 0xd0] = ra
  1298: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  1302: 7b 16 c0 00              u64 [sp + 0xc0] = s1
  1306: 33 07 19 00 03           a0 = 0x30019
  1311: 33 09 00 30 2a           a2 = 0x2a3000
  1316: 33 0a 1e                 a3 = 0x1e
  1319: 33 08                    a1 = 0
  1321: 33 0b                    a4 = 0
  1323: 33 0c                    a5 = 0
  1325: 33 00 20                 ra = 0x20
  1328: 0a 01                    ecalli 1 // 'fetch'
  1330: 01                       fallthrough
      :                          @102 [@dyn 16]
  1331: 7b 17 38                 u64 [sp + 0x38] = a0
  1334: 51 17 ff a8 02           jump @139 if a0 == 4294967295
      :                          @103
  1339: 33 09 20 30 2d           a2 = 0x2d3020
  1344: 33 08 00 00 10           a1 = 0x100000
  1349: c8 89 09                 a2 = a2 + a1
  1352: 33 0a 00 10 0e           a3 = 0xe1000
  1357: 01                       fallthrough
      :                          @104
  1358: 82 9b                    a4 = u64 [a2]
  1360: c8 ab 07                 a0 = a4 + a3
  1363: ac b7 a0 05              jump @203 if a0 <u a4
      :                          @105
  1367: 95 7c 01                 a5 = a0 + 0x1
  1370: 88 c6 01                 s1 = a5 <u 0x1
  1373: d8 c8 0c                 a5 = a1 <u a5
  1376: d4 6c 0c                 a5 = a5 | s1
  1379: 52 0c 90 05              jump @203 if a5 != 0
      :                          @106
  1383: 82 9c                    a5 = u64 [a2]
  1385: ab bc e5                 jump @104 if a5 != a4
      :                          @107
  1388: 7b 97                    u64 [a2] = a0
  1390: 33 04                    t2 = 0
  1392: 33 08 20 30 3d           a1 = 0x3d3020
  1397: c9 78 07                 a0 = a1 - a0
  1400: 49 21 a8 00 00 10 0e     u64 [sp + 168] = 0xe1000
  1407: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  1411: 49 21 b8 00              u64 [sp + 184] = 0
  1415: 33 05 19 00 03           s0 = 0x30019
  1420: 33 06 00 30 2a           s1 = 0x2a3000
  1425: 33 0b 3b                 a4 = 0x3b
  1428: 33 00 0b                 ra = 0xb
  1431: 33 0a 7b 14              a3 = 0x147b
  1435: 33 03 03                 t1 = 0x3
  1438: 7b 1a 18                 u64 [sp + 0x18] = a3
  1441: 28 32                    jump @109
      :                          @108
  1443: 95 66 fd                 s1 = s1 + 0xfffffffffffffffd
  1446: 96 98 1e                 a1 = a2 * 0x1e
  1449: ca bc 09                 a2 = a5 * a4
  1452: c8 98 08                 a1 = a1 + a2
  1455: 82 19 30                 a2 = u64 [sp + 0x30]
  1458: ca 09 09                 a2 = a2 * ra
  1461: c8 98 08                 a1 = a1 + a2
  1464: ca a8 08                 a1 = a1 * a3
  1467: 98 88 13                 a1 = a1 >> 0x13
  1470: c8 47 09                 a2 = a0 + t2
  1473: 78 98                    u8 [a2] = a1
  1475: 95 44 01                 t2 = t2 + 0x1
  1478: 7b 14 b8 00              u64 [sp + 0xb8] = t2
  1482: 95 55 03                 s0 = s0 + 0x3
  1485: 7b 14 28                 u64 [sp + 0x28] = t2
  1488: ac 36 42                 jump @112 if s1 <u t1
      :                          @109
  1491: 7c 59                    a2 = u8 [s0]
  1493: 7c 5c 01                 a5 = u8 [s0 + 0x1]
  1496: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  1500: 7c 52 02                 t0 = u8 [s0 + 0x2]
  1503: 7b 12 30                 u64 [sp + 0x30] = t0
  1506: ab 84 c1                 jump @108 if t2 != a1
      :                          @110
  1509: 95 17 a8 00              a0 = sp + 0xa8
  1513: 64 48                    a1 = t2
  1515: 7b 19 28                 u64 [sp + 0x28] = a2
  1518: 7b 1c 20                 u64 [sp + 0x20] = a5
  1521: 50 10 22 29 fe           ra = 34, jump @77
      :                          @111 [@dyn 17]
  1526: 82 1c 20                 a5 = u64 [sp + 0x20]
  1529: 82 19 28                 a2 = u64 [sp + 0x28]
  1532: 33 03 03                 t1 = 0x3
  1535: 82 1a 18                 a3 = u64 [sp + 0x18]
  1538: 33 00 0b                 ra = 0xb
  1541: 33 0b 3b                 a4 = 0x3b
  1544: 82 14 b8 00              t2 = u64 [sp + 0xb8]
  1548: 82 17 b0 00              a0 = u64 [sp + 0xb0]
  1552: 28 93                    jump @108
      :                          @112
  1554: 33 09 20 30 2d           a2 = 0x2d3020
  1559: 33 08 00 00 10           a1 = 0x100000
  1564: c8 89 09                 a2 = a2 + a1
  1567: 33 0a 00 24              a3 = 0x2400
  1571: 01                       fallthrough
      :                          @113
  1572: 82 97                    a0 = u64 [a2]
  1574: c8 a7 05                 s0 = a0 + a3
  1577: ac 75 cb 04              jump @204 if s0 <u a0
      :                          @114
  1581: 95 5c 01                 a5 = s0 + 0x1
  1584: 88 c6 01                 s1 = a5 <u 0x1
  1587: d8 c8 0c                 a5 = a1 <u a5
  1590: d4 6c 0c                 a5 = a5 | s1
  1593: 52 0c bb 04              jump @204 if a5 != 0
      :                          @115
  1597: 82 9c                    a5 = u64 [a2]
  1599: ab 7c e5                 jump @113 if a5 != a0
      :                          @116
  1602: 7b 95                    u64 [a2] = s0
  1604: 33 09                    a2 = 0
  1606: 33 0a                    a3 = 0
  1608: 33 06                    s1 = 0
  1610: 33 08 20 30 3d           a1 = 0x3d3020
  1615: c9 58 07                 a0 = a1 - s0
  1618: 49 21 80 00 00 24        u64 [sp + 128] = 0x2400
  1624: 7b 17 88 00              u64 [sp + 0x88] = a0
  1628: 82 1c b0 00              a5 = u64 [sp + 0xb0]
  1632: 3a 08 00 00 03           a1 = u64 [0x30000]
  1637: 7b 18 08                 u64 [sp + 0x8] = a1
  1640: 49 21 90 00              u64 [sp + 144] = 0
  1644: 7b 1c 20                 u64 [sp + 0x20] = a5
  1647: 28 10                    jump @118
      :                          @117
  1649: 82 19 18                 a2 = u64 [sp + 0x18]
  1652: 95 99 d0 02              a2 = a2 + 0x2d0
  1656: 82 16 10                 s1 = u64 [sp + 0x10]
  1659: 51 16 48 65              jump @124 if s1 == 72
      :                          @118
  1663: 7b 19 18                 u64 [sp + 0x18] = a2
  1666: 6e 98                    a1 = zext.h a2
  1668: 82 19 08                 a2 = u64 [sp + 0x8]
  1671: d6 98 08                 a1 = a1 mulhu a2
  1674: 96 85 00 05              s0 = a1 * 0x500
  1678: 83 66 01                 i32 s1 = s1 + 0x1
  1681: 7b 16 10                 u64 [sp + 0x10] = s1
  1684: 33 06 80 00              s1 = 0x80
  1688: 28 17                    jump @120
      :                          @119
  1690: c8 a7 08                 a1 = a0 + a3
  1693: 78 8b                    u8 [a1] = a4
  1695: 95 aa 01                 a3 = a3 + 0x1
  1698: 7b 1a 90 00              u64 [sp + 0x90] = a3
  1702: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  1705: 95 55 0a                 s0 = s0 + 0xa
  1708: 51 06 c5                 jump @117 if s1 == 0
      :                          @120
  1711: ae 45 28 03              jump @174 if s0 >=u t2
      :                          @121
  1715: c8 5c 08                 a1 = a5 + s0
  1718: 82 19 80 00              a2 = u64 [sp + 0x80]
  1722: 7c 8b                    a4 = u8 [a1]
  1724: ab 9a de                 jump @119 if a3 != a2
      :                          @122
  1727: 95 17 80 00              a0 = sp + 0x80
  1731: 64 a8                    a1 = a3
  1733: 7b 1b 30                 u64 [sp + 0x30] = a4
  1736: 50 10 24 52 fd           ra = 36, jump @77
      :                          @123 [@dyn 18]
  1741: 82 1b 30                 a4 = u64 [sp + 0x30]
  1744: 82 1c 20                 a5 = u64 [sp + 0x20]
  1747: 82 14 28                 t2 = u64 [sp + 0x28]
  1750: 82 1a 90 00              a3 = u64 [sp + 0x90]
  1754: 82 17 88 00              a0 = u64 [sp + 0x88]
  1758: 28 bc                    jump @119
      :                          @124
  1760: 33 09 20 30 2d           a2 = 0x2d3020
  1765: 33 08 00 00 10           a1 = 0x100000
  1770: c8 89 09                 a2 = a2 + a1
  1773: 33 05 48 24              s0 = 0x2448
  1777: 01                       fallthrough
      :                          @125
  1778: 82 9b                    a4 = u64 [a2]
  1780: c8 5b 07                 a0 = a4 + s0
  1783: ac b7 fe 03              jump @205 if a0 <u a4
      :                          @126
  1787: 95 7c 01                 a5 = a0 + 0x1
  1790: 88 c6 01                 s1 = a5 <u 0x1
  1793: d8 c8 0c                 a5 = a1 <u a5
  1796: d4 6c 0c                 a5 = a5 | s1
  1799: 52 0c ee 03              jump @205 if a5 != 0
      :                          @127
  1803: 82 9c                    a5 = u64 [a2]
  1805: ab bc e5                 jump @125 if a5 != a4
      :                          @128
  1808: 7b 97                    u64 [a2] = a0
  1810: 33 05                    s0 = 0
  1812: 33 08                    a1 = 0
  1814: 33 0b                    a4 = 0
  1816: 33 09 20 30 3d           a2 = 0x3d3020
  1821: c9 79 02                 t0 = a2 - a0
  1824: 49 11 50 48 24           u64 [sp + 80] = 0x2448
  1829: 7b 12 58                 u64 [sp + 0x58] = t0
  1832: 82 17 88 00              a0 = u64 [sp + 0x88]
  1836: 7b 17 30                 u64 [sp + 0x30] = a0
  1839: 49 11 60                 u64 [sp + 96] = 0
  1842: 49 11 28 11 10           u64 [sp + 40] = 0x1011
  1847: 33 07 00 00 01           a0 = 0x10000
  1852: 7b 17 20                 u64 [sp + 0x20] = a0
  1855: 28 1f                    jump @130
      :                          @129
  1857: 82 15 08                 s0 = u64 [sp + 0x8]
  1860: 82 1b                    a4 = u64 [sp]
  1862: 82 12 58                 t0 = u64 [sp + 0x58]
  1865: c8 82 07                 a0 = t0 + a1
  1868: 46 07 0a                 u8 [a0 + 0] = 0xa
  1871: 95 88 01                 a1 = a1 + 0x1
  1874: 7b 18 60                 u64 [sp + 0x60] = a1
  1877: 95 55 80 00              s0 = s0 + 0x80
  1881: 51 1b 48 a0 00           jump @140 if a4 == 72
      :                          @130
  1886: 95 bb 01                 a4 = a4 + 0x1
  1889: 7b 1b                    u64 [sp] = a4
  1891: 33 06 80 00              s1 = 0x80
  1895: 7b 15 08                 u64 [sp + 0x8] = s0
  1898: 28 16                    jump @132
      :                          @131
  1900: c8 82 07                 a0 = t0 + a1
  1903: 78 7b                    u8 [a0] = a4
  1905: 95 88 01                 a1 = a1 + 0x1
  1908: 7b 18 60                 u64 [sp + 0x60] = a1
  1911: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  1914: 95 55 01                 s0 = s0 + 0x1
  1917: 51 06 48                 jump @136 if s1 == 0
      :                          @132
  1920: ae a5 58 02              jump @175 if s0 >=u a3
      :                          @133
  1924: 82 17 30                 a0 = u64 [sp + 0x30]
  1927: c8 57 07                 a0 = a0 + s0
  1930: 7c 77                    a0 = u8 [a0]
  1932: 97 79 03                 a2 = a0 << 0x3
  1935: c8 97 07                 a0 = a0 + a2
  1938: 82 19 28                 a2 = u64 [sp + 0x28]
  1941: ca 97 07                 a0 = a0 * a2
  1944: 98 77 14                 a0 = a0 >> 0x14
  1947: 82 19 20                 a2 = u64 [sp + 0x20]
  1950: c8 97 07                 a0 = a0 + a2
  1953: 82 19 50                 a2 = u64 [sp + 0x50]
  1956: 7c 7b                    a4 = u8 [a0]
  1958: ab 98 c6                 jump @131 if a1 != a2
      :                          @134
  1961: 95 17 50                 a0 = sp + 0x50
  1964: 7b 1a 18                 u64 [sp + 0x18] = a3
  1967: 7b 1b 10                 u64 [sp + 0x10] = a4
  1970: 50 10 26 68 fc           ra = 38, jump @77
      :                          @135 [@dyn 19]
  1975: 82 1b 10                 a4 = u64 [sp + 0x10]
  1978: 82 1a 18                 a3 = u64 [sp + 0x18]
  1981: 82 18 60                 a1 = u64 [sp + 0x60]
  1984: 82 12 58                 t0 = u64 [sp + 0x58]
  1987: 28 a9                    jump @131
      :                          @136
  1989: 82 17 50                 a0 = u64 [sp + 0x50]
  1992: ab 78 79 ff              jump @129 if a1 != a0
      :                          @137
  1996: 95 17 50                 a0 = sp + 0x50
  1999: 64 a5                    s0 = a3
  2001: 50 10 28 49 fc           ra = 40, jump @77
      :                          @138 [@dyn 20]
  2006: 64 5a                    a3 = s0
  2008: 82 18 60                 a1 = u64 [sp + 0x60]
  2011: 28 66 ff                 jump @129
      :                          @139
  2014: 33 0a a0 00 01           a3 = 0x100a0
  2019: 33 07 02                 a0 = 0x2
  2022: 33 0b 14                 a4 = 0x14
  2025: 33 08                    a1 = 0
  2027: 33 09                    a2 = 0
  2029: 0a 64                    ecalli 100 // 'log'
  2031: 33 08                    a1 = 0
  2033: 33 07 00 00 01           a0 = 0x10000
  2038: 28 0a 02                 jump @181
      :                          @140
  2041: 7b 18 28                 u64 [sp + 0x28] = a1
  2044: 82 17 80 00              a0 = u64 [sp + 0x80]
  2048: 82 18 50                 a1 = u64 [sp + 0x50]
  2051: 7b 18 18                 u64 [sp + 0x18] = a1
  2054: 51 07 2e                 jump @147 if a0 == 0
      :                          @141
  2057: 56 37 00 00 10 2b        jump @147 if a0 >u 1048576
      :                          @142
  2063: 82 18 88 00              a1 = u64 [sp + 0x88]
  2067: 33 0a 20 30 2d           a3 = 0x2d3020
  2072: 95 a9 00 00 10           a2 = a3 + 0x100000
  2077: 01                       fallthrough
      :                          @143
  2078: 82 9a                    a3 = u64 [a2]
  2080: c9 a9 0b                 a4 = a2 - a3
  2083: ab 8b 11                 jump @147 if a4 != a1
      :                          @144
  2086: c9 7a 0b                 a4 = a3 - a0
  2089: 01                       fallthrough
      :                          @145
  2090: 82 9c                    a5 = u64 [a2]
  2092: ab ac f2                 jump @143 if a5 != a3
      :                          @146
  2095: 7b 9b                    u64 [a2] = a4
  2097: 33 06                    s1 = 0
  2099: 01                       fallthrough
      :                          @147
  2100: 7b 12 20                 u64 [sp + 0x20] = t0
  2103: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  2107: 51 07 2e                 jump @154 if a0 == 0
      :                          @148
  2110: 56 37 00 00 10 2b        jump @154 if a0 >u 1048576
      :                          @149
  2116: 82 18 b0 00              a1 = u64 [sp + 0xb0]
  2120: 33 0a 20 30 2d           a3 = 0x2d3020
  2125: 95 a9 00 00 10           a2 = a3 + 0x100000
  2130: 01                       fallthrough
      :                          @150
  2131: 82 9a                    a3 = u64 [a2]
  2133: c9 a9 0b                 a4 = a2 - a3
  2136: ab 8b 11                 jump @154 if a4 != a1
      :                          @151
  2139: c9 7a 0b                 a4 = a3 - a0
  2142: 01                       fallthrough
      :                          @152
  2143: 82 9c                    a5 = u64 [a2]
  2145: ab ac f2                 jump @150 if a5 != a3
      :                          @153
  2148: 7b 9b                    u64 [a2] = a4
  2150: 33 06                    s1 = 0
  2152: 01                       fallthrough
      :                          @154
  2153: 49 11 30 ff ff ef        u64 [sp + 48] = 0xffffffffffefffff
  2159: 33 07 19 00 03           a0 = 0x30019
  2164: 7b 17 40                 u64 [sp + 0x40] = a0
  2167: 49 11 48 10              u64 [sp + 72] = 0x10
  2171: 95 17 38                 a0 = sp + 0x38
  2174: 7b 17 80 00              u64 [sp + 0x80] = a0
  2178: 33 07 86 00              a0 = 0x86
  2182: 7b 17 88 00              u64 [sp + 0x88] = a0
  2186: 95 17 40                 a0 = sp + 0x40
  2189: 7b 17 90 00              u64 [sp + 0x90] = a0
  2193: 33 07 02                 a0 = 0x2
  2196: 7b 17 98 00              u64 [sp + 0x98] = a0
  2200: 33 07 28 00 01           a0 = 0x10028
  2205: 7b 17 50                 u64 [sp + 0x50] = a0
  2208: 49 11 58 02              u64 [sp + 88] = 0x2
  2212: 49 11 70                 u64 [sp + 112] = 0
  2215: 95 18 80 00              a1 = sp + 0x80
  2219: 7b 18 60                 u64 [sp + 0x60] = a1
  2222: 49 11 68 02              u64 [sp + 104] = 0x2
  2226: 95 17 a8 00              a0 = sp + 0xa8
  2230: 95 18 50                 a1 = sp + 0x50
  2233: 50 10 2a 8c 04           ra = 42, jump @264
      :                          @155 [@dyn 21]
  2238: 82 15 b0 00              s0 = u64 [sp + 0xb0]
  2242: 82 1b b8 00              a4 = u64 [sp + 0xb8]
  2246: 82 16 a8 00              s1 = u64 [sp + 0xa8]
  2250: 33 07 01                 a0 = 0x1
  2253: 33 08                    a1 = 0
  2255: 33 09                    a2 = 0
  2257: 64 5a                    a3 = s0
  2259: 33 00 2c                 ra = 0x2c
  2262: 0a 64                    ecalli 100 // 'log'
  2264: 01                       fallthrough
      :                          @156 [@dyn 22]
  2265: 82 17 30                 a0 = u64 [sp + 0x30]
  2268: c8 67 07                 a0 = a0 + s1
  2271: 53 37 00 00 f0 27        jump @162 if a0 <u 4293918720
      :                          @157
  2277: 33 07 20 30 2d           a0 = 0x2d3020
  2282: 95 77 00 00 10           a0 = a0 + 0x100000
  2287: 01                       fallthrough
      :                          @158
  2288: 82 78                    a1 = u64 [a0]
  2290: c9 87 09                 a2 = a0 - a1
  2293: ab 59 11                 jump @162 if a2 != s0
      :                          @159
  2296: c9 68 09                 a2 = a1 - s1
  2299: 01                       fallthrough
      :                          @160
  2300: 82 7a                    a3 = u64 [a0]
  2302: ab 8a f2                 jump @158 if a3 != a1
      :                          @161
  2305: 7b 79                    u64 [a0] = a2
  2307: 33 0b                    a4 = 0
  2309: 01                       fallthrough
      :                          @162
  2310: 82 17 28                 a0 = u64 [sp + 0x28]
  2313: 7b 17 40                 u64 [sp + 0x40] = a0
  2316: 48 21 a4 00 48 24        u32 [sp + 164] = 0x2448
  2322: 95 17 40                 a0 = sp + 0x40
  2325: 7b 17 80 00              u64 [sp + 0x80] = a0
  2329: 33 07 58                 a0 = 0x58
  2332: 7b 17 88 00              u64 [sp + 0x88] = a0
  2336: 95 17 a4 00              a0 = sp + 0xa4
  2340: 7b 17 90 00              u64 [sp + 0x90] = a0
  2344: 33 07 8a 00              a0 = 0x8a
  2348: 7b 17 98 00              u64 [sp + 0x98] = a0
  2352: 33 07 80 00 01           a0 = 0x10080
  2357: 7b 17 50                 u64 [sp + 0x50] = a0
  2360: 49 11 58 02              u64 [sp + 88] = 0x2
  2364: 49 11 70                 u64 [sp + 112] = 0
  2367: 95 18 80 00              a1 = sp + 0x80
  2371: 7b 18 60                 u64 [sp + 0x60] = a1
  2374: 49 11 68 02              u64 [sp + 104] = 0x2
  2378: 95 17 a8 00              a0 = sp + 0xa8
  2382: 95 18 50                 a1 = sp + 0x50
  2385: 50 10 2e f4 03           ra = 46, jump @264
      :                          @163 [@dyn 23]
  2390: 82 15 b0 00              s0 = u64 [sp + 0xb0]
  2394: 82 1b b8 00              a4 = u64 [sp + 0xb8]
  2398: 82 16 a8 00              s1 = u64 [sp + 0xa8]
  2402: 33 07 01                 a0 = 0x1
  2405: 33 08                    a1 = 0
  2407: 33 09                    a2 = 0
  2409: 64 5a                    a3 = s0
  2411: 33 00 30                 ra = 0x30
  2414: 0a 64                    ecalli 100 // 'log'
  2416: 01                       fallthrough
      :                          @164 [@dyn 24]
  2417: 82 18 30                 a1 = u64 [sp + 0x30]
  2420: c8 68 08                 a1 = a1 + s1
  2423: 33 07 01                 a0 = 0x1
  2426: 53 38 00 00 f0 27        jump @170 if a1 <u 4293918720
      :                          @165
  2432: 33 08 20 30 2d           a1 = 0x2d3020
  2437: 95 88 00 00 10           a1 = a1 + 0x100000
  2442: 01                       fallthrough
      :                          @166
  2443: 82 89                    a2 = u64 [a1]
  2445: c9 98 0a                 a3 = a1 - a2
  2448: ab 5a 11                 jump @170 if a3 != s0
      :                          @167
  2451: c9 69 0a                 a3 = a2 - s1
  2454: 01                       fallthrough
      :                          @168
  2455: 82 8b                    a4 = u64 [a1]
  2457: ab 9b f2                 jump @166 if a4 != a2
      :                          @169
  2460: 7b 8a                    u64 [a1] = a3
  2462: 33 0c                    a5 = 0
  2464: 01                       fallthrough
      :                          @170
  2465: 49 11 50                 u64 [sp + 80] = 0
  2468: 7b 17 58                 u64 [sp + 0x58] = a0
  2471: 49 11 60                 u64 [sp + 96] = 0
  2474: 82 19 28                 a2 = u64 [sp + 0x28]
  2477: 52 09 65                 jump @182 if a2 != 0
      :                          @171
  2480: 33 07 0a                 a0 = 0xa
  2483: 33 0a 01                 a3 = 0x1
  2486: 33 08                    a1 = 0
  2488: 33 0b                    a4 = 0
  2490: 33 00 32                 ra = 0x32
  2493: 0a 64                    ecalli 100 // 'log'
  2495: 01                       fallthrough
      :                          @172 [@dyn 25]
  2496: 82 15 18                 s0 = u64 [sp + 0x18]
  2499: 82 17 30                 a0 = u64 [sp + 0x30]
  2502: c8 57 07                 a0 = a0 + s0
  2505: 55 37 00 00 f0 10        jump @176 if a0 >=u 4293918720
      :                          @173
  2511: 82 18 28                 a1 = u64 [sp + 0x28]
  2514: 82 17 20                 a0 = u64 [sp + 0x20]
  2517: 28 2b                    jump @181
      :                          @174
  2519: 00                       trap
      :                          @175
  2520: 00                       trap
      :                          @176
  2521: 33 07 20 30 2d           a0 = 0x2d3020
  2526: 95 76 00 00 10           s1 = a0 + 0x100000
  2531: 82 18 28                 a1 = u64 [sp + 0x28]
  2534: 82 17 20                 a0 = u64 [sp + 0x20]
  2537: 01                       fallthrough
      :                          @177
  2538: 82 6c                    a5 = u64 [s1]
  2540: c9 c6 09                 a2 = s1 - a5
  2543: ab 79 11                 jump @181 if a2 != a0
      :                          @178
  2546: c9 5c 09                 a2 = a5 - s0
  2549: 01                       fallthrough
      :                          @179
  2550: 82 6a                    a3 = u64 [s1]
  2552: ab ca f2                 jump @177 if a3 != a5
      :                          @180
  2555: 7b 69                    u64 [s1] = a2
  2557: 33 0b                    a4 = 0
  2559: 01                       fallthrough
      :                          @181
  2560: 82 10 d0 00              ra = u64 [sp + 0xd0]
  2564: 82 15 c8 00              s0 = u64 [sp + 0xc8]
  2568: 82 16 c0 00              s1 = u64 [sp + 0xc0]
  2572: 95 11 d8 00              sp = sp + 0xd8
  2576: 32 00                    ret
      :                          @182
  2578: 95 17 50                 a0 = sp + 0x50
  2581: 33 08                    a1 = 0
  2583: 50 10 34 7b fa           ra = 52, jump @89
      :                          @183 [@dyn 26]
  2588: 82 15 20                 s0 = u64 [sp + 0x20]
  2591: 82 16 28                 s1 = u64 [sp + 0x28]
  2594: 28 19                    jump @185
      :                          @184
  2596: 82 1a 58                 a3 = u64 [sp + 0x58]
  2599: c8 8a 07                 a0 = a3 + a1
  2602: 78 7b                    u8 [a0] = a4
  2604: 95 8b 01                 a4 = a1 + 0x1
  2607: 7b 1b 60                 u64 [sp + 0x60] = a4
  2610: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  2613: 95 55 01                 s0 = s0 + 0x1
  2616: 51 06 72                 jump @194 if s1 == 0
      :                          @185
  2619: 7d 5b                    a4 = i8 [s0]
  2621: 57 0b 1f                 jump @189 if a4 <s 0
      :                          @186
  2624: 82 18 60                 a1 = u64 [sp + 0x60]
  2627: 82 17 50                 a0 = u64 [sp + 0x50]
  2630: ab 78 de                 jump @184 if a1 != a0
      :                          @187
  2633: 95 17 50                 a0 = sp + 0x50
  2636: 7b 1b 10                 u64 [sp + 0x10] = a4
  2639: 50 10 36 cb f9           ra = 54, jump @77
      :                          @188 [@dyn 27]
  2644: 82 1b 10                 a4 = u64 [sp + 0x10]
  2647: 82 18 60                 a1 = u64 [sp + 0x60]
  2650: 28 ca                    jump @184
      :                          @189
  2652: 82 18 60                 a1 = u64 [sp + 0x60]
  2655: 82 17 50                 a0 = u64 [sp + 0x50]
  2658: c9 87 07                 a0 = a0 - a1
  2661: 54 17 01 2f              jump @192 if a0 <=u 1
      :                          @190
  2665: 97 b7 38                 a0 = a4 << 0x38
  2668: 98 77 3e                 a0 = a0 >> 0x3e
  2671: 82 1a 58                 a3 = u64 [sp + 0x58]
  2674: 95 77 c0                 a0 = a0 + 0xffffffffffffffc0
  2677: 84 b9 3f                 a2 = a4 & 0x3f
  2680: 86 99 80                 a2 = a2 | 0xffffffffffffff80
  2683: c8 8a 0b                 a4 = a3 + a1
  2686: 78 b7                    u8 [a4] = a0
  2688: 78 b9 01                 u8 [a4 + 0x1] = a2
  2691: 95 8b 02                 a4 = a1 + 0x2
  2694: 7b 1b 60                 u64 [sp + 0x60] = a4
  2697: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  2700: 95 55 01                 s0 = s0 + 0x1
  2703: 52 06 ac                 jump @185 if s1 != 0
      :                          @191
  2706: 28 18                    jump @194
      :                          @192
  2708: 95 17 50                 a0 = sp + 0x50
  2711: 33 09 02                 a2 = 0x2
  2714: 7b 1b 10                 u64 [sp + 0x10] = a4
  2717: 50 10 38 f5 f9           ra = 56, jump @89
      :                          @193 [@dyn 28]
  2722: 82 1b 10                 a4 = u64 [sp + 0x10]
  2725: 82 18 60                 a1 = u64 [sp + 0x60]
  2728: 28 c1                    jump @190
      :                          @194
  2730: 82 15 50                 s0 = u64 [sp + 0x50]
  2733: 33 07 0a                 a0 = 0xa
  2736: 33 08                    a1 = 0
  2738: 33 09                    a2 = 0
  2740: 64 a6                    s1 = a3
  2742: 33 00 3a                 ra = 0x3a
  2745: 0a 64                    ecalli 100 // 'log'
  2747: 01                       fallthrough
      :                          @195 [@dyn 29]
  2748: 82 17 30                 a0 = u64 [sp + 0x30]
  2751: c8 57 07                 a0 = a0 + s0
  2754: 53 37 00 00 f0 fe fe     jump @172 if a0 <u 4293918720
      :                          @196
  2761: 64 6c                    a5 = s1
  2763: 33 07 20 30 2d           a0 = 0x2d3020
  2768: 95 77 00 00 10           a0 = a0 + 0x100000
  2773: 01                       fallthrough
      :                          @197
  2774: 82 78                    a1 = u64 [a0]
  2776: c9 87 09                 a2 = a0 - a1
  2779: ab c9 e5 fe              jump @172 if a2 != a5
      :                          @198
  2783: c9 58 09                 a2 = a1 - s0
  2786: 01                       fallthrough
      :                          @199
  2787: 82 7a                    a3 = u64 [a0]
  2789: ab 8a f1                 jump @197 if a3 != a1
      :                          @200
  2792: 7b 79                    u64 [a0] = a2
  2794: 33 0b                    a4 = 0
  2796: 01                       fallthrough
      :                          @201
  2797: ab 8a e9                 jump @197 if a3 != a1
      :                          @202
  2800: 28 d0 fe                 jump @172
      :                          @203
  2803: 00                       trap
      :                          @204
  2804: 00                       trap
      :                          @205
  2805: 00                       trap
      :                          @206 [export #1: 'accumulate']
  2806: 33 07 00 00 01           a0 = 0x10000
  2811: 33 08                    a1 = 0
  2813: 32 00                    ret
      :                          @207 [export #2: 'on_transfer']
  2815: 33 07 00 00 01           a0 = 0x10000
  2820: 33 08                    a1 = 0
  2822: 32 00                    ret
      :                          @208
  2824: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2827: 7b 10 40                 u64 [sp + 0x40] = ra
  2830: 7b 15 38                 u64 [sp + 0x38] = s0
  2833: 7b 16 30                 u64 [sp + 0x30] = s1
  2836: c8 89 09                 a2 = a2 + a1
  2839: ac 89 52                 jump @216 if a2 <u a1
      :                          @209
  2842: 64 75                    s0 = a0
  2844: 82 77                    a0 = u64 [a0]
  2846: 97 78 01                 a1 = a0 << 0x1
  2849: 33 0a 08                 a3 = 0x8
  2852: e4 a9 09                 a2 = maxu(a2, a3)
  2855: e4 98 06                 s1 = maxu(a1, a2)
  2858: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2861: 98 88 3f                 a1 = a1 >> 0x3f
  2864: 51 07 12                 jump @211 if a0 == 0
      :                          @210
  2867: 82 59 08                 a2 = u64 [s0 + 0x8]
  2870: 7b 19 18                 u64 [sp + 0x18] = a2
  2873: 49 11 20 01              u64 [sp + 32] = 0x1
  2877: 7b 17 28                 u64 [sp + 0x28] = a0
  2880: 28 06                    jump @212
      :                          @211
  2882: 49 11 20                 u64 [sp + 32] = 0
  2885: 01                       fallthrough
      :                          @212
  2886: 64 17                    a0 = sp
  2888: 95 1a 18                 a3 = sp + 0x18
  2891: 64 69                    a2 = s1
  2893: 50 10 3c 32              ra = 60, jump @220
      :                          @213 [@dyn 30]
  2897: 82 18                    a1 = u64 [sp]
  2899: 82 17 08                 a0 = u64 [sp + 0x8]
  2902: 51 08 14                 jump @217 if a1 == 0
      :                          @214
  2905: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2915: aa 87 0d                 jump @218 if a0 == a1
      :                          @215
  2918: 52 07 18                 jump @219 if a0 != 0
      :                          @216
  2921: 00                       trap
      :                          @217
  2922: 7b 57 08                 u64 [s0 + 0x8] = a0
  2925: 7b 56                    u64 [s0] = s1
  2927: 01                       fallthrough
      :                          @218
  2928: 82 10 40                 ra = u64 [sp + 0x40]
  2931: 82 15 38                 s0 = u64 [sp + 0x38]
  2934: 82 16 30                 s1 = u64 [sp + 0x30]
  2937: 95 11 48                 sp = sp + 0x48
  2940: 32 00                    ret
      :                          @219
  2942: 00                       trap
      :                          @220
  2943: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2946: 7b 10 30                 u64 [sp + 0x30] = ra
  2949: 7b 15 28                 u64 [sp + 0x28] = s0
  2952: 7b 16 20                 u64 [sp + 0x20] = s1
  2955: 64 95                    s0 = a2
  2957: 64 72                    t0 = a0
  2959: 51 08 79                 jump @230 if a1 == 0
      :                          @221
  2962: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2965: 51 07 7c                 jump @231 if a0 == 0
      :                          @222
  2968: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2971: 51 09 aa 00              jump @238 if a2 == 0
      :                          @223
  2975: 82 a8                    a1 = u64 [a3]
  2977: 33 06 20 30 2d           s1 = 0x2d3020
  2982: 33 03 00 00 10           t1 = 0x100000
  2987: c8 36 06                 s1 = s1 + t1
  2990: 01                       fallthrough
      :                          @224
  2991: 82 6a                    a3 = u64 [s1]
  2993: c8 5a 07                 a0 = a3 + s0
  2996: ac a7 cf 00              jump @244 if a0 <u a3
      :                          @225
  3000: 95 7b 01                 a4 = a0 + 0x1
  3003: 88 bc 01                 a5 = a4 <u 0x1
  3006: d8 b3 0b                 a4 = t1 <u a4
  3009: d4 cb 0b                 a4 = a4 | a5
  3012: 52 0b bf 00              jump @244 if a4 != 0
      :                          @226
  3016: 82 6b                    a4 = u64 [s1]
  3018: ab ab e5                 jump @224 if a4 != a3
      :                          @227
  3021: 7b 67                    u64 [s1] = a0
  3023: 33 0c                    a5 = 0
  3025: 7b 12 18                 u64 [sp + 0x18] = t0
  3028: 33 0a 20 30 2d           a3 = 0x2d3020
  3033: 33 0b 00 00 10           a4 = 0x100000
  3038: 7b 1a                    u64 [sp] = a3
  3040: c8 ba 0a                 a3 = a3 + a4
  3043: c9 7a 07                 a0 = a3 - a0
  3046: 7b 17 10                 u64 [sp + 0x10] = a0
  3049: 7b 18 08                 u64 [sp + 0x8] = a1
  3052: 64 96                    s1 = a2
  3054: 50 10 3e cb 03           ra = 62, jump @314
      :                          @228 [@dyn 31]
  3059: 54 36 00 00 10 98 00     jump @245 if s1 <=u 1048576
      :                          @229
  3066: 82 12 18                 t0 = u64 [sp + 0x18]
  3069: 82 18 10                 a1 = u64 [sp + 0x10]
  3072: 33 07                    a0 = 0
  3074: 7b 28 08                 u64 [t0 + 0x8] = a1
  3077: 28 b5 00                 jump @251
      :                          @230
  3080: 49 12 08                 u64 [t0 + 8] = 0
  3083: 33 07 01                 a0 = 0x1
  3086: 28 ac 00                 jump @251
      :                          @231
  3089: 33 09 20 30 2d           a2 = 0x2d3020
  3094: 33 07 00 00 10           a0 = 0x100000
  3099: c8 79 09                 a2 = a2 + a0
  3102: 01                       fallthrough
      :                          @232
  3103: 82 9a                    a3 = u64 [a2]
  3105: c8 5a 08                 a1 = a3 + s0
  3108: ac a8 5f                 jump @244 if a1 <u a3
      :                          @233
  3111: 95 8b 01                 a4 = a1 + 0x1
  3114: 88 bc 01                 a5 = a4 <u 0x1
  3117: d8 b7 0b                 a4 = a0 <u a4
  3120: d4 cb 0b                 a4 = a4 | a5
  3123: 52 0b 50                 jump @244 if a4 != 0
      :                          @234
  3126: 82 9b                    a4 = u64 [a2]
  3128: ab ab e7                 jump @232 if a4 != a3
      :                          @235
  3131: 7b 98                    u64 [a2] = a1
  3133: 33 0c                    a5 = 0
  3135: 01                       fallthrough
      :                          @236
  3136: ab ab df                 jump @232 if a4 != a3
      :                          @237
  3139: 28 31                    jump @243
      :                          @238
  3141: 33 09 20 30 2d           a2 = 0x2d3020
  3146: 33 07 00 00 10           a0 = 0x100000
  3151: c8 79 09                 a2 = a2 + a0
  3154: 01                       fallthrough
      :                          @239
  3155: 82 9a                    a3 = u64 [a2]
  3157: c8 5a 08                 a1 = a3 + s0
  3160: ac a8 2b                 jump @244 if a1 <u a3
      :                          @240
  3163: 95 8b 01                 a4 = a1 + 0x1
  3166: 88 bc 01                 a5 = a4 <u 0x1
  3169: d8 b7 0b                 a4 = a0 <u a4
  3172: d4 cb 0b                 a4 = a4 | a5
  3175: 52 0b 1c                 jump @244 if a4 != 0
      :                          @241
  3178: 82 9b                    a4 = u64 [a2]
  3180: ab ab e7                 jump @239 if a4 != a3
      :                          @242
  3183: 7b 98                    u64 [a2] = a1
  3185: 33 0c                    a5 = 0
  3187: 01                       fallthrough
      :                          @243
  3188: 33 07 20 30 3d           a0 = 0x3d3020
  3193: c9 87 08                 a1 = a0 - a1
  3196: 33 07                    a0 = 0
  3198: 7b 28 08                 u64 [t0 + 0x8] = a1
  3201: 28 39                    jump @251
      :                          @244
  3203: 33 07 01                 a0 = 0x1
  3206: 7b 27 08                 u64 [t0 + 0x8] = a0
  3209: 28 31                    jump @251
      :                          @245
  3211: 64 6c                    a5 = s1
  3213: 82 17                    a0 = u64 [sp]
  3215: 95 77 00 00 10           a0 = a0 + 0x100000
  3220: 82 12 18                 t0 = u64 [sp + 0x18]
  3223: 82 16 08                 s1 = u64 [sp + 0x8]
  3226: 01                       fallthrough
      :                          @246
  3227: 82 78                    a1 = u64 [a0]
  3229: c9 87 09                 a2 = a0 - a1
  3232: ab 69 11                 jump @250 if a2 != s1
      :                          @247
  3235: c9 c8 09                 a2 = a1 - a5
  3238: 01                       fallthrough
      :                          @248
  3239: 82 7a                    a3 = u64 [a0]
  3241: ab 8a f2                 jump @246 if a3 != a1
      :                          @249
  3244: 7b 79                    u64 [a0] = a2
  3246: 33 0b                    a4 = 0
  3248: 01                       fallthrough
      :                          @250
  3249: 82 18 10                 a1 = u64 [sp + 0x10]
  3252: 33 07                    a0 = 0
  3254: 7b 28 08                 u64 [t0 + 0x8] = a1
  3257: 01                       fallthrough
      :                          @251
  3258: 7b 25 10                 u64 [t0 + 0x10] = s0
  3261: 7b 27                    u64 [t0] = a0
  3263: 82 10 30                 ra = u64 [sp + 0x30]
  3266: 82 15 28                 s0 = u64 [sp + 0x28]
  3269: 82 16 20                 s1 = u64 [sp + 0x20]
  3272: 95 11 38                 sp = sp + 0x38
  3275: 32 00                    ret
      :                          @252
  3277: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3280: 7b 10 40                 u64 [sp + 0x40] = ra
  3283: 7b 15 38                 u64 [sp + 0x38] = s0
  3286: 7b 16 30                 u64 [sp + 0x30] = s1
  3289: 95 88 01                 a1 = a1 + 0x1
  3292: 51 08 53                 jump @260 if a1 == 0
      :                          @253
  3295: 64 75                    s0 = a0
  3297: 82 77                    a0 = u64 [a0]
  3299: 97 79 01                 a2 = a0 << 0x1
  3302: 33 0a 08                 a3 = 0x8
  3305: e4 a8 08                 a1 = maxu(a1, a3)
  3308: e4 89 06                 s1 = maxu(a2, a1)
  3311: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3314: 98 88 3f                 a1 = a1 >> 0x3f
  3317: 51 07 12                 jump @255 if a0 == 0
      :                          @254
  3320: 82 59 08                 a2 = u64 [s0 + 0x8]
  3323: 7b 19 18                 u64 [sp + 0x18] = a2
  3326: 49 11 20 01              u64 [sp + 32] = 0x1
  3330: 7b 17 28                 u64 [sp + 0x28] = a0
  3333: 28 06                    jump @256
      :                          @255
  3335: 49 11 20                 u64 [sp + 32] = 0
  3338: 01                       fallthrough
      :                          @256
  3339: 64 17                    a0 = sp
  3341: 95 1a 18                 a3 = sp + 0x18
  3344: 64 69                    a2 = s1
  3346: 50 10 40 6d fe           ra = 64, jump @220
      :                          @257 [@dyn 32]
  3351: 82 18                    a1 = u64 [sp]
  3353: 82 17 08                 a0 = u64 [sp + 0x8]
  3356: 51 08 14                 jump @261 if a1 == 0
      :                          @258
  3359: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3369: aa 87 0d                 jump @262 if a0 == a1
      :                          @259
  3372: 52 07 18                 jump @263 if a0 != 0
      :                          @260
  3375: 00                       trap
      :                          @261
  3376: 7b 57 08                 u64 [s0 + 0x8] = a0
  3379: 7b 56                    u64 [s0] = s1
  3381: 01                       fallthrough
      :                          @262
  3382: 82 10 40                 ra = u64 [sp + 0x40]
  3385: 82 15 38                 s0 = u64 [sp + 0x38]
  3388: 82 16 30                 s1 = u64 [sp + 0x30]
  3391: 95 11 48                 sp = sp + 0x48
  3394: 32 00                    ret
      :                          @263
  3396: 00                       trap
      :                          @264
  3397: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3400: 7b 10 30                 u64 [sp + 0x30] = ra
  3403: 7b 15 28                 u64 [sp + 0x28] = s0
  3406: 7b 16 20                 u64 [sp + 0x20] = s1
  3409: 64 89                    a2 = a1
  3411: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3414: 64 75                    s0 = a0
  3416: 51 0a 35                 jump @269 if a3 == 0
      :                          @265
  3419: 82 98                    a1 = u64 [a2]
  3421: 33 07                    a0 = 0
  3423: 95 8b 08                 a4 = a1 + 0x8
  3426: 01                       fallthrough
      :                          @266
  3427: 82 bc                    a5 = u64 [a4]
  3429: c8 c7 07                 a0 = a0 + a5
  3432: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3435: 95 bb 10                 a4 = a4 + 0x10
  3438: 52 0a f5                 jump @266 if a3 != 0
      :                          @267
  3441: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3444: 51 0a 24                 jump @271 if a3 == 0
      :                          @268
  3447: 82 88 08                 a1 = u64 [a1 + 0x8]
  3450: 8e 88                    a1 = a1 >u 0
  3452: 88 7a 10                 a3 = a0 <u 0x10
  3455: 85 aa 01                 a3 = a3 ^ 0x1
  3458: d4 a8 08                 a1 = a1 | a3
  3461: 89 7a                    a3 = a0 <s 0
  3463: e0 a8 08                 a1 = a1 & ~a3
  3466: 52 08 0a                 jump @270 if a1 != 0
      :                          @269
  3469: 33 07                    a0 = 0
  3471: 33 08 01                 a1 = 0x1
  3474: 28 4a                    jump @279
      :                          @270
  3476: 97 77 01                 a0 = a0 << 0x1
  3479: 01                       fallthrough
      :                          @271
  3480: 51 07 40                 jump @278 if a0 == 0
      :                          @272
  3483: 57 07 78                 jump @284 if a0 <s 0
      :                          @273
  3486: 64 52                    t0 = s0
  3488: 33 0b 20 30 2d           a4 = 0x2d3020
  3493: 33 08 00 00 10           a1 = 0x100000
  3498: c8 8b 0b                 a4 = a4 + a1
  3501: 01                       fallthrough
      :                          @274
  3502: 82 bc                    a5 = u64 [a4]
  3504: c8 7c 0a                 a3 = a5 + a0
  3507: ac ca 5e                 jump @282 if a3 <u a5
      :                          @275
  3510: 95 a5 01                 s0 = a3 + 0x1
  3513: 88 56 01                 s1 = s0 <u 0x1
  3516: d8 58 05                 s0 = a1 <u s0
  3519: d4 65 05                 s0 = s0 | s1
  3522: 52 05 4f                 jump @282 if s0 != 0
      :                          @276
  3525: 82 b6                    s1 = u64 [a4]
  3527: ab c6 e7                 jump @274 if s1 != a5
      :                          @277
  3530: 7b ba                    u64 [a4] = a3
  3532: 33 08 20 30 3d           a1 = 0x3d3020
  3537: c9 a8 08                 a1 = a1 - a3
  3540: 64 25                    s0 = t0
  3542: 28 06                    jump @279
      :                          @278
  3544: 33 08 01                 a1 = 0x1
  3547: 01                       fallthrough
      :                          @279
  3548: 7b 17                    u64 [sp] = a0
  3550: 7b 18 08                 u64 [sp + 0x8] = a1
  3553: 49 11 10                 u64 [sp + 16] = 0
  3556: 33 08 b8 00 01           a1 = 0x100b8
  3561: 64 17                    a0 = sp
  3563: 50 10 42 3a 06           ra = 66, jump @399
      :                          @280 [@dyn 33]
  3568: 52 07 22                 jump @283 if a0 != 0
      :                          @281
  3571: 82 17 10                 a0 = u64 [sp + 0x10]
  3574: 82 18 08                 a1 = u64 [sp + 0x8]
  3577: 82 19                    a2 = u64 [sp]
  3579: 7b 57 10                 u64 [s0 + 0x10] = a0
  3582: 7b 58 08                 u64 [s0 + 0x8] = a1
  3585: 7b 59                    u64 [s0] = a2
  3587: 82 10 30                 ra = u64 [sp + 0x30]
  3590: 82 15 28                 s0 = u64 [sp + 0x28]
  3593: 82 16 20                 s1 = u64 [sp + 0x20]
  3596: 95 11 38                 sp = sp + 0x38
  3599: 32 00                    ret
      :                          @282
  3601: 00                       trap
      :                          @283
  3602: 00                       trap
      :                          @284
  3603: 00                       trap
      :                          @285 [@dyn 34]
  3604: 82 72                    t0 = u64 [a0]
  3606: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  3611: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  3616: ac 9a 28                 jump @291 if a3 <u a2
      :                          @286
  3619: 82 77 08                 a0 = u64 [a0 + 0x8]
  3622: 33 09 20 30 2d           a2 = 0x2d3020
  3627: 95 99 00 00 10           a2 = a2 + 0x100000
  3632: 01                       fallthrough
      :                          @287
  3633: 82 9a                    a3 = u64 [a2]
  3635: c9 a9 0b                 a4 = a2 - a3
  3638: ab 7b 12                 jump @291 if a4 != a0
      :                          @288
  3641: c9 2a 0b                 a4 = a3 - t0
  3644: 01                       fallthrough
      :                          @289
  3645: 82 9c                    a5 = u64 [a2]
  3647: ab ac f2                 jump @287 if a5 != a3
      :                          @290
  3650: 7b 9b                    u64 [a2] = a4
  3652: 33 08                    a1 = 0
  3654: 32 00                    ret
      :                          @291
  3656: 32 00                    ret
      :                          @292 [@dyn 35]
  3658: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3661: 7b 10 18                 u64 [sp + 0x18] = ra
  3664: 7b 15 10                 u64 [sp + 0x10] = s0
  3667: 7b 16 08                 u64 [sp + 0x8] = s1
  3670: 64 75                    s0 = a0
  3672: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3675: 82 77                    a0 = u64 [a0]
  3677: c9 a7 07                 a0 = a0 - a3
  3680: 64 96                    s1 = a2
  3682: ac 97 2a                 jump @295 if a0 <u a2
      :                          @293
  3685: 7b 1a                    u64 [sp] = a3
  3687: 82 57 08                 a0 = u64 [s0 + 0x8]
  3690: c8 a7 07                 a0 = a0 + a3
  3693: 64 69                    a2 = s1
  3695: 50 10 48 4a 01           ra = 72, jump @314
      :                          @294 [@dyn 36]
  3700: 82 17                    a0 = u64 [sp]
  3702: c8 76 06                 s1 = s1 + a0
  3705: 7b 56 10                 u64 [s0 + 0x10] = s1
  3708: 33 07                    a0 = 0
  3710: 82 10 18                 ra = u64 [sp + 0x18]
  3713: 82 15 10                 s0 = u64 [sp + 0x10]
  3716: 82 16 08                 s1 = u64 [sp + 0x8]
  3719: 95 11 20                 sp = sp + 0x20
  3722: 32 00                    ret
      :                          @295
  3724: 64 57                    a0 = s0
  3726: 7b 18                    u64 [sp] = a1
  3728: 64 a8                    a1 = a3
  3730: 64 69                    a2 = s1
  3732: 50 10 4a 74 fc           ra = 74, jump @208
      :                          @296 [@dyn 37]
  3737: 82 18                    a1 = u64 [sp]
  3739: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3742: 28 c7                    jump @293
      :                          @297 [@dyn 38]
  3744: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3747: 7b 10 20                 u64 [sp + 0x20] = ra
  3750: 7b 15 18                 u64 [sp + 0x18] = s0
  3753: 7b 16 10                 u64 [sp + 0x10] = s1
  3756: 64 86                    s1 = a1
  3758: 83 88                    i32 a1 = a1 + 0
  3760: 33 09 80 00              a2 = 0x80
  3764: 64 7a                    a3 = a0
  3766: ae 98 2b                 jump @302 if a1 >=u a2
      :                          @298
  3769: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3772: 82 a7                    a0 = u64 [a3]
  3774: ab 78 12                 jump @301 if a1 != a0
      :                          @299
  3777: 64 a7                    a0 = a3
  3779: 64 a5                    s0 = a3
  3781: 50 10 4e 08 fe           ra = 78, jump @252
      :                          @300 [@dyn 39]
  3786: 64 5a                    a3 = s0
  3788: 82 58 10                 a1 = u64 [s0 + 0x10]
  3791: 01                       fallthrough
      :                          @301
  3792: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3795: c8 87 07                 a0 = a0 + a1
  3798: 78 76                    u8 [a0] = s1
  3800: 95 88 01                 a1 = a1 + 0x1
  3803: 7b a8 10                 u64 [a3 + 0x10] = a1
  3806: 28 ab 00                 jump @310
      :                          @302
  3809: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3812: 48 11 0c                 u32 [sp + 12] = 0
  3815: 52 07 1c                 jump @304 if a0 != 0
      :                          @303
  3818: 98 67 06                 a0 = s1 >> 0x6
  3821: 86 77 c0 00              a0 = a0 | 0xc0
  3825: 78 17 0c                 u8 [sp + 0xc] = a0
  3828: 84 67 3f                 a0 = s1 & 0x3f
  3831: 86 77 80 00              a0 = a0 | 0x80
  3835: 78 17 0d                 u8 [sp + 0xd] = a0
  3838: 33 06 02                 s1 = 0x2
  3841: 28 63                    jump @307
      :                          @304
  3843: 8b 67 10                 i32 a0 = s1 >> 0x10
  3846: 52 07 29                 jump @306 if a0 != 0
      :                          @305
  3849: 98 67 0c                 a0 = s1 >> 0xc
  3852: 86 77 e0 00              a0 = a0 | 0xe0
  3856: 78 17 0c                 u8 [sp + 0xc] = a0
  3859: 97 67 34                 a0 = s1 << 0x34
  3862: 98 77 3a                 a0 = a0 >> 0x3a
  3865: 95 77 80 00              a0 = a0 + 0x80
  3869: 78 17 0d                 u8 [sp + 0xd] = a0
  3872: 84 67 3f                 a0 = s1 & 0x3f
  3875: 86 77 80 00              a0 = a0 | 0x80
  3879: 78 17 0e                 u8 [sp + 0xe] = a0
  3882: 33 06 03                 s1 = 0x3
  3885: 28 37                    jump @307
      :                          @306
  3887: 97 67 2b                 a0 = s1 << 0x2b
  3890: 98 77 3d                 a0 = a0 >> 0x3d
  3893: 95 77 f0 00              a0 = a0 + 0xf0
  3897: 78 17 0c                 u8 [sp + 0xc] = a0
  3900: 97 67 2e                 a0 = s1 << 0x2e
  3903: 98 77 3a                 a0 = a0 >> 0x3a
  3906: 95 77 80 00              a0 = a0 + 0x80
  3910: 78 17 0d                 u8 [sp + 0xd] = a0
  3913: 97 67 34                 a0 = s1 << 0x34
  3916: 98 77 3a                 a0 = a0 >> 0x3a
  3919: 95 77 80 00              a0 = a0 + 0x80
  3923: 78 17 0e                 u8 [sp + 0xe] = a0
  3926: 84 67 3f                 a0 = s1 & 0x3f
  3929: 86 77 80 00              a0 = a0 | 0x80
  3933: 78 17 0f                 u8 [sp + 0xf] = a0
  3936: 33 06 04                 s1 = 0x4
  3939: 01                       fallthrough
      :                          @307
  3940: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3943: 82 a7                    a0 = u64 [a3]
  3945: c9 57 07                 a0 = a0 - s0
  3948: ac 67 2d                 jump @311 if a0 <u s1
      :                          @308
  3951: 7b 1a                    u64 [sp] = a3
  3953: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3956: c8 57 07                 a0 = a0 + s0
  3959: 95 18 0c                 a1 = sp + 0xc
  3962: 64 69                    a2 = s1
  3964: 50 10 50 3d              ra = 80, jump @314
      :                          @309 [@dyn 40]
  3968: c8 56 06                 s1 = s1 + s0
  3971: 82 17                    a0 = u64 [sp]
  3973: 7b 76 10                 u64 [a0 + 0x10] = s1
  3976: 01                       fallthrough
      :                          @310
  3977: 33 07                    a0 = 0
  3979: 82 10 20                 ra = u64 [sp + 0x20]
  3982: 82 15 18                 s0 = u64 [sp + 0x18]
  3985: 82 16 10                 s1 = u64 [sp + 0x10]
  3988: 95 11 28                 sp = sp + 0x28
  3991: 32 00                    ret
      :                          @311
  3993: 64 a7                    a0 = a3
  3995: 64 58                    a1 = s0
  3997: 64 69                    a2 = s1
  3999: 64 a5                    s0 = a3
  4001: 50 10 52 67 fb           ra = 82, jump @208
      :                          @312 [@dyn 41]
  4006: 64 5a                    a3 = s0
  4008: 82 55 10                 s0 = u64 [s0 + 0x10]
  4011: 28 c4                    jump @308
      :                          @313 [@dyn 42]
  4013: 64 8a                    a3 = a1
  4015: 33 08 b8 00 01           a1 = 0x100b8
  4020: 64 a9                    a2 = a3
  4022: 28 6f 04                 jump @399
      :                          @314
  4025: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4028: 7b 10 18                 u64 [sp + 0x18] = ra
  4031: 7b 15 10                 u64 [sp + 0x10] = s0
  4034: 7b 16 08                 u64 [sp + 0x8] = s1
  4037: 53 19 10 64              jump @323 if a2 <u 16
      :                          @315
  4041: 8d 7a                    i32 a3 = -a0
  4043: 84 a2 07                 t0 = a3 & 0x7
  4046: c8 27 0b                 a4 = a0 + t0
  4049: 51 02 15                 jump @318 if t0 == 0
      :                          @316
  4052: 64 8c                    a5 = a1
  4054: 64 75                    s0 = a0
  4056: 01                       fallthrough
      :                          @317
  4057: 7c ca                    a3 = u8 [a5]
  4059: 78 5a                    u8 [s0] = a3
  4061: 95 55 01                 s0 = s0 + 0x1
  4064: 95 cc 01                 a5 = a5 + 0x1
  4067: ac b5 f6                 jump @317 if s0 <u a4
      :                          @318
  4070: c8 28 03                 t1 = a1 + t0
  4073: c9 29 02                 t0 = a2 - t0
  4076: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4079: 84 38 07                 a1 = t1 & 0x7
  4082: c8 4b 0a                 a3 = a4 + t2
  4085: 51 08 3b                 jump @325 if a1 == 0
      :                          @319
  4088: 58 04 4b                 jump @328 if t2 <=s 0
      :                          @320
  4091: 97 38 03                 a1 = t1 << 0x3
  4094: 84 80 38                 ra = a1 & 0x38
  4097: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4100: 82 c5                    s0 = u64 [a5]
  4102: 8d 88                    i32 a1 = -a1
  4104: 84 88 38                 a1 = a1 & 0x38
  4107: 95 cc 08                 a5 = a5 + 0x8
  4110: 01                       fallthrough
      :                          @321
  4111: 82 c6                    s1 = u64 [a5]
  4113: d0 05 05                 s0 = s0 >> ra
  4116: cf 86 09                 a2 = s1 << a1
  4119: d4 59 09                 a2 = a2 | s0
  4122: 7b b9                    u64 [a4] = a2
  4124: 95 bb 08                 a4 = a4 + 0x8
  4127: 95 cc 08                 a5 = a5 + 0x8
  4130: 64 65                    s0 = s1
  4132: ac ab eb                 jump @321 if a4 <u a3
      :                          @322
  4135: 28 1c                    jump @328
      :                          @323
  4137: 64 7a                    a3 = a0
  4139: 52 09 21                 jump @329 if a2 != 0
      :                          @324
  4142: 28 2f                    jump @331
      :                          @325
  4144: 58 04 13                 jump @328 if t2 <=s 0
      :                          @326
  4147: 64 38                    a1 = t1
  4149: 01                       fallthrough
      :                          @327
  4150: 82 89                    a2 = u64 [a1]
  4152: 7b b9                    u64 [a4] = a2
  4154: 95 bb 08                 a4 = a4 + 0x8
  4157: 95 88 08                 a1 = a1 + 0x8
  4160: ac ab f6                 jump @327 if a4 <u a3
      :                          @328
  4163: c8 43 08                 a1 = t1 + t2
  4166: 84 29 07                 a2 = t0 & 0x7
  4169: 51 09 14                 jump @331 if a2 == 0
      :                          @329
  4172: c8 a9 09                 a2 = a2 + a3
  4175: 01                       fallthrough
      :                          @330
  4176: 7c 8b                    a4 = u8 [a1]
  4178: 78 ab                    u8 [a3] = a4
  4180: 95 aa 01                 a3 = a3 + 0x1
  4183: 95 88 01                 a1 = a1 + 0x1
  4186: ac 9a f6                 jump @330 if a3 <u a2
      :                          @331
  4189: 82 10 18                 ra = u64 [sp + 0x18]
  4192: 82 15 10                 s0 = u64 [sp + 0x10]
  4195: 82 16 08                 s1 = u64 [sp + 0x8]
  4198: 95 11 20                 sp = sp + 0x20
  4201: 32 00                    ret
      :                          @332 [@dyn 43]
  4203: 82 77                    a0 = u64 [a0]
  4205: 01                       fallthrough
      :                          @333
  4206: 28                       jump @333
      :                          @334 [@dyn 44]
  4207: 82 77                    a0 = u64 [a0]
  4209: 64 89                    a2 = a1
  4211: 33 08 01                 a1 = 0x1
  4214: 01                       fallthrough
      :                          @335
  4215: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  4218: 7b 10 58                 u64 [sp + 0x58] = ra
  4221: 7b 15 50                 u64 [sp + 0x50] = s0
  4224: 7b 16 48                 u64 [sp + 0x48] = s1
  4227: 7b 19 08                 u64 [sp + 0x8] = a2
  4230: 7b 18                    u64 [sp] = a1
  4232: 98 7a 04                 a3 = a0 >> 0x4
  4235: 33 09 27                 a2 = 0x27
  4238: 53 2a 71 02 81 00        jump @338 if a3 <u 625
      :                          @336
  4244: 33 09 27                 a2 = 0x27
  4247: 95 1b 46                 a4 = sp + 0x46
  4250: 3a 08 08 00 03           a1 = u64 [0x30008]
  4255: 7b 18 18                 u64 [sp + 0x18] = a1
  4258: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  4264: 33 03 7b 14              t1 = 0x147b
  4268: 33 05 2c 01 01           s0 = 0x1012c
  4273: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4279: 01                       fallthrough
      :                          @337
  4280: 64 74                    t2 = a0
  4282: 82 17 18                 a0 = u64 [sp + 0x18]
  4285: d6 74 07                 a0 = t2 mulhu a0
  4288: 98 77 0b                 a0 = a0 >> 0xb
  4291: 82 18 10                 a1 = u64 [sp + 0x10]
  4294: c0 87 02                 i32 t0 = a0 * a1
  4297: c8 42 0a                 a3 = t0 + t2
  4300: 97 a2 30                 t0 = a3 << 0x30
  4303: 98 28 32                 a1 = t0 >> 0x32
  4306: ca 38 08                 a1 = a1 * t1
  4309: 98 8c 11                 a5 = a1 >> 0x11
  4312: 98 88 10                 a1 = a1 >> 0x10
  4315: 84 88 fe 07              a1 = a1 & 0x7fe
  4319: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
  4322: c8 ca 0a                 a3 = a3 + a5
  4325: 97 aa 31                 a3 = a3 << 0x31
  4328: 98 aa 30                 a3 = a3 >> 0x30
  4331: c8 58 08                 a1 = a1 + s0
  4334: 7c 8c                    a5 = u8 [a1]
  4336: 7c 88 01                 a1 = u8 [a1 + 0x1]
  4339: c8 5a 0a                 a3 = a3 + s0
  4342: 7c a6 01                 s1 = u8 [a3 + 0x1]
  4345: 7c aa                    a3 = u8 [a3]
  4347: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
  4350: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
  4353: 78 b6 01                 u8 [a4 + 0x1] = s1
  4356: 78 ba                    u8 [a4] = a3
  4358: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  4361: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  4364: ac 40 ac                 jump @337 if ra <u t2
      :                          @338
  4367: 54 17 63 3b              jump @340 if a0 <=u 99
      :                          @339
  4371: 97 78 30                 a1 = a0 << 0x30
  4374: 98 88 32                 a1 = a1 >> 0x32
  4377: 96 88 7b 14              a1 = a1 * 0x147b
  4381: 98 88 11                 a1 = a1 >> 0x11
  4384: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  4387: c8 a7 07                 a0 = a0 + a3
  4390: 97 77 31                 a0 = a0 << 0x31
  4393: 98 77 30                 a0 = a0 >> 0x30
  4396: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  4399: 33 0a 2c 01 01           a3 = 0x1012c
  4404: c8 a7 07                 a0 = a0 + a3
  4407: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4410: 7c 77                    a0 = u8 [a0]
  4412: 95 1b 21                 a4 = sp + 0x21
  4415: c8 9b 0b                 a4 = a4 + a2
  4418: 78 ba 01                 u8 [a4 + 0x1] = a3
  4421: 78 b7                    u8 [a4] = a0
  4423: 64 87                    a0 = a1
  4425: 01                       fallthrough
      :                          @340
  4426: 55 17 0a 14              jump @342 if a0 >=u 10
      :                          @341
  4430: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  4433: 95 18 21                 a1 = sp + 0x21
  4436: c8 98 08                 a1 = a1 + a2
  4439: 83 77 30                 i32 a0 = a0 + 0x30
  4442: 78 87                    u8 [a1] = a0
  4444: 28 21                    jump @343
      :                          @342
  4446: 97 77 01                 a0 = a0 << 0x1
  4449: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  4452: 33 08 2c 01 01           a1 = 0x1012c
  4457: c8 87 07                 a0 = a0 + a1
  4460: 7c 78 01                 a1 = u8 [a0 + 0x1]
  4463: 7c 77                    a0 = u8 [a0]
  4465: 95 1a 21                 a3 = sp + 0x21
  4468: c8 9a 0a                 a3 = a3 + a2
  4471: 78 a8 01                 u8 [a3 + 0x1] = a1
  4474: 78 a7                    u8 [a3] = a0
  4476: 01                       fallthrough
      :                          @343
  4477: 95 1b 21                 a4 = sp + 0x21
  4480: c8 9b 0b                 a4 = a4 + a2
  4483: 9a 9c 27                 a5 = 0x27 - a2
  4486: 33 09 e8 00 01           a2 = 0x100e8
  4491: 82 17 08                 a0 = u64 [sp + 0x8]
  4494: 82 18                    a1 = u64 [sp]
  4496: 33 0a                    a3 = 0
  4498: 50 10 5a 12              ra = 90, jump @345
      :                          @344 [@dyn 45]
  4502: 82 10 58                 ra = u64 [sp + 0x58]
  4505: 82 15 50                 s0 = u64 [sp + 0x50]
  4508: 82 16 48                 s1 = u64 [sp + 0x48]
  4511: 95 11 60                 sp = sp + 0x60
  4514: 32 00                    ret
      :                          @345
  4516: 95 11 98                 sp = sp + 0xffffffffffffff98
  4519: 7b 10 60                 u64 [sp + 0x60] = ra
  4522: 7b 15 58                 u64 [sp + 0x58] = s0
  4525: 7b 16 50                 u64 [sp + 0x50] = s1
  4528: 7b 1b 18                 u64 [sp + 0x18] = a4
  4531: 51 08 4f                 jump @352 if a1 == 0
      :                          @346
  4534: 80 76 34                 s1 = u32 [a0 + 0x34]
  4537: 84 68 01                 a1 = s1 & 0x1
  4540: 33 0b 2b                 a4 = 0x2b
  4543: 33 05 00 00 11           s0 = 0x110000
  4548: db 8b 05                 s0 = a4 if a1 != 0
  4551: 7b 15 28                 u64 [sp + 0x28] = s0
  4554: c8 c8 02                 t0 = a1 + a5
  4557: 84 68 04                 a1 = s1 & 0x4
  4560: 51 08 42                 jump @353 if a1 == 0
      :                          @347
  4563: 7b 19 30                 u64 [sp + 0x30] = a2
  4566: 33 08                    a1 = 0
  4568: 51 0a 1a                 jump @350 if a3 == 0
      :                          @348
  4571: 64 a5                    s0 = a3
  4573: 01                       fallthrough
      :                          @349
  4574: 7d 9b                    a4 = i8 [a2]
  4576: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  4579: 85 bb 01                 a4 = a4 ^ 0x1
  4582: c8 b8 08                 a1 = a1 + a4
  4585: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4588: 95 99 01                 a2 = a2 + 0x1
  4591: 52 05 ef                 jump @349 if s0 != 0
      :                          @350
  4594: c8 82 02                 t0 = t0 + a1
  4597: 7b 1a 38                 u64 [sp + 0x38] = a3
  4600: 82 78                    a1 = u64 [a0]
  4602: 7b 1c 20                 u64 [sp + 0x20] = a5
  4605: 52 08 23                 jump @354 if a1 != 0
      :                          @351
  4608: 28 41                    jump @359
      :                          @352
  4610: 81 76 34                 s1 = i32 [a0 + 0x34]
  4613: 95 c2 01                 t0 = a5 + 0x1
  4616: 49 11 28 2d              u64 [sp + 40] = 0x2d
  4620: 84 68 04                 a1 = s1 & 0x4
  4623: 52 08 c4                 jump @347 if a1 != 0
      :                          @353
  4626: 49 11 30                 u64 [sp + 48] = 0
  4629: 7b 1a 38                 u64 [sp + 0x38] = a3
  4632: 82 78                    a1 = u64 [a0]
  4634: 7b 1c 20                 u64 [sp + 0x20] = a5
  4637: 51 08 24                 jump @359 if a1 == 0
      :                          @354
  4640: 82 75 08                 s0 = u64 [a0 + 0x8]
  4643: ae 52 1e                 jump @359 if t0 >=u s0
      :                          @355
  4646: 84 66 08                 s1 = s1 & 0x8
  4649: 52 06 50                 jump @362 if s1 != 0
      :                          @356
  4652: 7c 79 38                 a2 = u8 [a0 + 0x38]
  4655: c9 25 0a                 a3 = s0 - t0
  4658: 5a 19 01 a1 00           jump @369 if a2 >s 1
      :                          @357
  4663: 52 09 ae 00              jump @371 if a2 != 0
      :                          @358
  4667: 7b 1a 10                 u64 [sp + 0x10] = a3
  4670: 28 ad 00                 jump @372
      :                          @359
  4673: 82 75 20                 s0 = u64 [a0 + 0x20]
  4676: 82 76 28                 s1 = u64 [a0 + 0x28]
  4679: 64 57                    a0 = s0
  4681: 64 68                    a1 = s1
  4683: 82 19 28                 a2 = u64 [sp + 0x28]
  4686: 82 1a 30                 a3 = u64 [sp + 0x30]
  4689: 82 1b 38                 a4 = u64 [sp + 0x38]
  4692: 50 10 5c 6d 01           ra = 92, jump @392
      :                          @360 [@dyn 46]
  4697: 33 08 01                 a1 = 0x1
  4700: 52 07 bc 00              jump @377 if a0 != 0
      :                          @361
  4704: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4707: 64 57                    a0 = s0
  4709: 82 18 18                 a1 = u64 [sp + 0x18]
  4712: 82 19 20                 a2 = u64 [sp + 0x20]
  4715: 82 10 60                 ra = u64 [sp + 0x60]
  4718: 82 15 58                 s0 = u64 [sp + 0x58]
  4721: 82 16 50                 s1 = u64 [sp + 0x50]
  4724: 95 11 68                 sp = sp + 0x68
  4727: 32 0c                    jump [a5]
      :                          @362
  4729: 7b 12 40                 u64 [sp + 0x40] = t0
  4732: 81 78 30                 a1 = i32 [a0 + 0x30]
  4735: 7b 18 08                 u64 [sp + 0x8] = a1
  4738: 7c 79 38                 a2 = u8 [a0 + 0x38]
  4741: 7b 19                    u64 [sp] = a2
  4743: 82 79 20                 a2 = u64 [a0 + 0x20]
  4746: 82 76 28                 s1 = u64 [a0 + 0x28]
  4749: 48 17 30 30              u32 [a0 + 48] = 0x30
  4753: 7b 17 10                 u64 [sp + 0x10] = a0
  4756: 46 17 38 01              u8 [a0 + 56] = 0x1
  4760: 7b 19 48                 u64 [sp + 0x48] = a2
  4763: 64 97                    a0 = a2
  4765: 64 68                    a1 = s1
  4767: 82 19 28                 a2 = u64 [sp + 0x28]
  4770: 82 1a 30                 a3 = u64 [sp + 0x30]
  4773: 82 1b 38                 a4 = u64 [sp + 0x38]
  4776: 50 10 5e 19 01           ra = 94, jump @392
      :                          @363 [@dyn 47]
  4781: 52 07 67                 jump @376 if a0 != 0
      :                          @364
  4784: 82 17 40                 a0 = u64 [sp + 0x40]
  4787: c9 75 05                 s0 = s0 - a0
  4790: 95 55 01                 s0 = s0 + 0x1
  4793: 01                       fallthrough
      :                          @365
  4794: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4797: 51 05 c6 00              jump @387 if s0 == 0
      :                          @366
  4801: 82 69 20                 a2 = u64 [s1 + 0x20]
  4804: 33 08 30                 a1 = 0x30
  4807: 82 17 48                 a0 = u64 [sp + 0x48]
  4810: b4 90 01 60              ra = 96, jump [a2]
      :                          @367 [@dyn 48]
  4814: 51 07 ec                 jump @365 if a0 == 0
      :                          @368
  4817: 28 43                    jump @376
      :                          @369
  4819: 52 19 02 12              jump @371 if a2 != 2
      :                          @370
  4823: 98 a9 01                 a2 = a3 >> 0x1
  4826: 95 a8 01                 a1 = a3 + 0x1
  4829: 98 88 01                 a1 = a1 >> 0x1
  4832: 7b 18 10                 u64 [sp + 0x10] = a1
  4835: 28 08                    jump @372
      :                          @371
  4837: 64 a9                    a2 = a3
  4839: 49 11 10                 u64 [sp + 16] = 0
  4842: 01                       fallthrough
      :                          @372
  4843: 82 78 20                 a1 = u64 [a0 + 0x20]
  4846: 7b 18 48                 u64 [sp + 0x48] = a1
  4849: 82 76 28                 s1 = u64 [a0 + 0x28]
  4852: 81 77 30                 a0 = i32 [a0 + 0x30]
  4855: 7b 17 40                 u64 [sp + 0x40] = a0
  4858: 95 95 01                 s0 = a2 + 0x1
  4861: 01                       fallthrough
      :                          @373
  4862: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4865: 51 05 27                 jump @378 if s0 == 0
      :                          @374
  4868: 82 69 20                 a2 = u64 [s1 + 0x20]
  4871: 82 17 48                 a0 = u64 [sp + 0x48]
  4874: 82 18 40                 a1 = u64 [sp + 0x40]
  4877: b4 90 01 62              ra = 98, jump [a2]
      :                          @375 [@dyn 49]
  4881: 51 07 ed                 jump @373 if a0 == 0
      :                          @376
  4884: 33 08 01                 a1 = 0x1
  4887: 01                       fallthrough
      :                          @377
  4888: 64 87                    a0 = a1
  4890: 82 10 60                 ra = u64 [sp + 0x60]
  4893: 82 15 58                 s0 = u64 [sp + 0x58]
  4896: 82 16 50                 s1 = u64 [sp + 0x50]
  4899: 95 11 68                 sp = sp + 0x68
  4902: 32 00                    ret
      :                          @378
  4904: 82 15 48                 s0 = u64 [sp + 0x48]
  4907: 64 57                    a0 = s0
  4909: 64 68                    a1 = s1
  4911: 82 19 28                 a2 = u64 [sp + 0x28]
  4914: 82 1a 30                 a3 = u64 [sp + 0x30]
  4917: 82 1b 38                 a4 = u64 [sp + 0x38]
  4920: 50 10 64 89 00           ra = 100, jump @392
      :                          @379 [@dyn 50]
  4925: 33 08 01                 a1 = 0x1
  4928: 52 07 d8                 jump @377 if a0 != 0
      :                          @380
  4931: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4934: 64 57                    a0 = s0
  4936: 82 18 18                 a1 = u64 [sp + 0x18]
  4939: 82 19 20                 a2 = u64 [sp + 0x20]
  4942: b4 a0 01 66              ra = 102, jump [a3]
      :                          @381 [@dyn 51]
  4946: 33 08 01                 a1 = 0x1
  4949: 52 07 c3                 jump @377 if a0 != 0
      :                          @382
  4952: 82 17 10                 a0 = u64 [sp + 0x10]
  4955: 9a 77                    a0 = -a0
  4957: 7b 17 38                 u64 [sp + 0x38] = a0
  4960: 33 05 ff                 s0 = 0xffffffffffffffff
  4963: 01                       fallthrough
      :                          @383
  4964: 82 17 38                 a0 = u64 [sp + 0x38]
  4967: c8 57 07                 a0 = a0 + s0
  4970: 51 17 ff 42              jump @390 if a0 == 4294967295
      :                          @384
  4974: 82 69 20                 a2 = u64 [s1 + 0x20]
  4977: 82 17 48                 a0 = u64 [sp + 0x48]
  4980: 82 18 40                 a1 = u64 [sp + 0x40]
  4983: b4 90 01 68              ra = 104, jump [a2]
      :                          @385 [@dyn 52]
  4987: 95 55 01                 s0 = s0 + 0x1
  4990: 51 07 e6                 jump @383 if a0 == 0
      :                          @386
  4993: 28 37                    jump @391
      :                          @387
  4995: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4998: 82 17 48                 a0 = u64 [sp + 0x48]
  5001: 82 18 18                 a1 = u64 [sp + 0x18]
  5004: 82 19 20                 a2 = u64 [sp + 0x20]
  5007: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @388 [@dyn 53]
  5011: 33 08 01                 a1 = 0x1
  5014: 52 07 82                 jump @377 if a0 != 0
      :                          @389
  5017: 33 08                    a1 = 0
  5019: 82 17 10                 a0 = u64 [sp + 0x10]
  5022: 82 19 08                 a2 = u64 [sp + 0x8]
  5025: 7a 79 30                 u32 [a0 + 0x30] = a2
  5028: 82 19                    a2 = u64 [sp]
  5030: 78 79 38                 u8 [a0 + 0x38] = a2
  5033: 28 6f ff                 jump @377
      :                          @390
  5036: 82 15 10                 s0 = u64 [sp + 0x10]
  5039: 82 17 10                 a0 = u64 [sp + 0x10]
  5042: d8 75 08                 a1 = s0 <u a0
  5045: 28 63 ff                 jump @377
      :                          @391
  5048: 82 17 10                 a0 = u64 [sp + 0x10]
  5051: d8 75 08                 a1 = s0 <u a0
  5054: 28 5a ff                 jump @377
      :                          @392
  5057: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5060: 7b 10 20                 u64 [sp + 0x20] = ra
  5063: 7b 15 18                 u64 [sp + 0x18] = s0
  5066: 7b 16 10                 u64 [sp + 0x10] = s1
  5069: 83 9c                    i32 a5 = a2 + 0
  5071: 33 02 00 00 11           t0 = 0x110000
  5076: 64 a6                    s1 = a3
  5078: 64 85                    s0 = a1
  5080: 64 7a                    a3 = a0
  5082: aa 2c 20                 jump @395 if a5 == t0
      :                          @393
  5085: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5088: 64 a7                    a0 = a3
  5090: 64 98                    a1 = a2
  5092: 7b 1b 08                 u64 [sp + 0x8] = a4
  5095: 7b 1a                    u64 [sp] = a3
  5097: b4 c0 01 6c              ra = 108, jump [a5]
      :                          @394 [@dyn 54]
  5101: 82 1a                    a3 = u64 [sp]
  5103: 82 1b 08                 a4 = u64 [sp + 0x8]
  5106: 64 78                    a1 = a0
  5108: 33 07 01                 a0 = 0x1
  5111: 52 08 20                 jump @398 if a1 != 0
      :                          @395
  5114: 51 06 1a                 jump @397 if s1 == 0
      :                          @396
  5117: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5120: 64 a7                    a0 = a3
  5122: 64 68                    a1 = s1
  5124: 64 b9                    a2 = a4
  5126: 82 10 20                 ra = u64 [sp + 0x20]
  5129: 82 15 18                 s0 = u64 [sp + 0x18]
  5132: 82 16 10                 s1 = u64 [sp + 0x10]
  5135: 95 11 28                 sp = sp + 0x28
  5138: 32 0c                    jump [a5]
      :                          @397
  5140: 33 07                    a0 = 0
  5142: 01                       fallthrough
      :                          @398
  5143: 82 10 20                 ra = u64 [sp + 0x20]
  5146: 82 15 18                 s0 = u64 [sp + 0x18]
  5149: 82 16 10                 s1 = u64 [sp + 0x10]
  5152: 95 11 28                 sp = sp + 0x28
  5155: 32 00                    ret
      :                          @399
  5157: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5161: 7b 10 80 00              u64 [sp + 0x80] = ra
  5165: 7b 15 78                 u64 [sp + 0x78] = s0
  5168: 7b 16 70                 u64 [sp + 0x70] = s1
  5171: 49 11 60 20              u64 [sp + 96] = 0x20
  5175: 33 0a 03                 a3 = 0x3
  5178: 78 1a 68                 u8 [sp + 0x68] = a3
  5181: 82 96 20                 s1 = u64 [a2 + 0x20]
  5184: 49 11 30                 u64 [sp + 48] = 0
  5187: 49 11 40                 u64 [sp + 64] = 0
  5190: 7b 17 50                 u64 [sp + 0x50] = a0
  5193: 7b 18 58                 u64 [sp + 0x58] = a1
  5196: 51 06 07 01              jump @421 if s1 == 0
      :                          @400
  5200: 82 97 28                 a0 = u64 [a2 + 0x28]
  5203: 51 07 74 01              jump @431 if a0 == 0
      :                          @401
  5207: 49 11 28                 u64 [sp + 40] = 0
  5210: 82 95                    s0 = u64 [a2]
  5212: 7b 19 08                 u64 [sp + 0x8] = a2
  5215: 82 98 10                 a1 = u64 [a2 + 0x10]
  5218: 7b 18 18                 u64 [sp + 0x18] = a1
  5221: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5224: 97 88 03                 a1 = a1 << 0x3
  5227: 98 88 03                 a1 = a1 >> 0x3
  5230: 95 88 01                 a1 = a1 + 0x1
  5233: 7b 18                    u64 [sp] = a1
  5235: 95 55 08                 s0 = s0 + 0x8
  5238: 96 78 38                 a1 = a0 * 0x38
  5241: 95 66 18                 s1 = s1 + 0x18
  5244: 33 07 56                 a0 = 0x56
  5247: 7b 17 10                 u64 [sp + 0x10] = a0
  5250: 01                       fallthrough
      :                          @402
  5251: 7b 18 20                 u64 [sp + 0x20] = a1
  5254: 82 59                    a2 = u64 [s0]
  5256: 51 09 17                 jump @405 if a2 == 0
      :                          @403
  5259: 82 1a 58                 a3 = u64 [sp + 0x58]
  5262: 82 17 50                 a0 = u64 [sp + 0x50]
  5265: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5268: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5271: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @404 [@dyn 55]
  5275: 52 07 51 01              jump @434 if a0 != 0
      :                          @405
  5279: 81 67 10                 a0 = i32 [s1 + 0x10]
  5282: 7a 17 60                 u32 [sp + 0x60] = a0
  5285: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5288: 78 17 68                 u8 [sp + 0x68] = a0
  5291: 81 67 14                 a0 = i32 [s1 + 0x14]
  5294: 7a 17 64                 u32 [sp + 0x64] = a0
  5297: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5300: 82 67                    a0 = u64 [s1]
  5302: 51 08 26                 jump @410 if a1 == 0
      :                          @406
  5305: 52 18 01 16              jump @408 if a1 != 1
      :                          @407
  5309: 97 77 04                 a0 = a0 << 0x4
  5312: 82 18 18                 a1 = u64 [sp + 0x18]
  5315: c8 87 07                 a0 = a0 + a1
  5318: 82 78 08                 a1 = u64 [a0 + 0x8]
  5321: 82 19 10                 a2 = u64 [sp + 0x10]
  5324: aa 98 07                 jump @409 if a1 == a2
      :                          @408
  5327: 33 08                    a1 = 0
  5329: 28 0f                    jump @411
      :                          @409
  5331: 82 77                    a0 = u64 [a0]
  5333: 82 77                    a0 = u64 [a0]
  5335: 33 08 01                 a1 = 0x1
  5338: 28 06                    jump @411
      :                          @410
  5340: 33 08 01                 a1 = 0x1
  5343: 01                       fallthrough
      :                          @411
  5344: 7b 18 30                 u64 [sp + 0x30] = a1
  5347: 7b 17 38                 u64 [sp + 0x38] = a0
  5350: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5353: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5356: 51 08 26                 jump @416 if a1 == 0
      :                          @412
  5359: 52 18 01 16              jump @414 if a1 != 1
      :                          @413
  5363: 97 77 04                 a0 = a0 << 0x4
  5366: 82 18 18                 a1 = u64 [sp + 0x18]
  5369: c8 87 07                 a0 = a0 + a1
  5372: 82 78 08                 a1 = u64 [a0 + 0x8]
  5375: 82 19 10                 a2 = u64 [sp + 0x10]
  5378: aa 98 07                 jump @415 if a1 == a2
      :                          @414
  5381: 33 08                    a1 = 0
  5383: 28 0f                    jump @417
      :                          @415
  5385: 82 77                    a0 = u64 [a0]
  5387: 82 77                    a0 = u64 [a0]
  5389: 33 08 01                 a1 = 0x1
  5392: 28 06                    jump @417
      :                          @416
  5394: 33 08 01                 a1 = 0x1
  5397: 01                       fallthrough
      :                          @417
  5398: 7b 18 40                 u64 [sp + 0x40] = a1
  5401: 7b 17 48                 u64 [sp + 0x48] = a0
  5404: 82 67 08                 a0 = u64 [s1 + 0x8]
  5407: 97 77 04                 a0 = a0 << 0x4
  5410: 82 18 18                 a1 = u64 [sp + 0x18]
  5413: c8 78 08                 a1 = a1 + a0
  5416: 82 87                    a0 = u64 [a1]
  5418: 82 89 08                 a2 = u64 [a1 + 0x8]
  5421: 95 18 30                 a1 = sp + 0x30
  5424: b4 90 01 70              ra = 112, jump [a2]
      :                          @418 [@dyn 56]
  5428: 52 07 b8 00              jump @434 if a0 != 0
      :                          @419
  5432: 95 55 10                 s0 = s0 + 0x10
  5435: 82 18 20                 a1 = u64 [sp + 0x20]
  5438: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5441: 95 66 38                 s1 = s1 + 0x38
  5444: 82 17 28                 a0 = u64 [sp + 0x28]
  5447: 95 77 01                 a0 = a0 + 0x1
  5450: 7b 17 28                 u64 [sp + 0x28] = a0
  5453: 52 08 36 ff              jump @402 if a1 != 0
      :                          @420
  5457: 28 69                    jump @429
      :                          @421
  5459: 82 97 18                 a0 = u64 [a2 + 0x18]
  5462: 51 07 71                 jump @431 if a0 == 0
      :                          @422
  5465: 82 95 10                 s0 = u64 [a2 + 0x10]
  5468: 33 0a                    a3 = 0
  5470: 97 78 04                 a1 = a0 << 0x4
  5473: c8 58 08                 a1 = a1 + s0
  5476: 7b 18 20                 u64 [sp + 0x20] = a1
  5479: 7b 19 08                 u64 [sp + 0x8] = a2
  5482: 82 96                    s1 = u64 [a2]
  5484: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5487: 97 77 04                 a0 = a0 << 0x4
  5490: 98 77 04                 a0 = a0 >> 0x4
  5493: 95 77 01                 a0 = a0 + 0x1
  5496: 7b 17                    u64 [sp] = a0
  5498: 95 66 08                 s1 = s1 + 0x8
  5501: 01                       fallthrough
      :                          @423
  5502: 7b 1a 28                 u64 [sp + 0x28] = a3
  5505: 82 69                    a2 = u64 [s1]
  5507: 51 09 16                 jump @426 if a2 == 0
      :                          @424
  5510: 82 1a 58                 a3 = u64 [sp + 0x58]
  5513: 82 17 50                 a0 = u64 [sp + 0x50]
  5516: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5519: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5522: b4 a0 01 72              ra = 114, jump [a3]
      :                          @425 [@dyn 57]
  5526: 52 07 56                 jump @434 if a0 != 0
      :                          @426
  5529: 82 57                    a0 = u64 [s0]
  5531: 82 59 08                 a2 = u64 [s0 + 0x8]
  5534: 95 18 30                 a1 = sp + 0x30
  5537: b4 90 01 74              ra = 116, jump [a2]
      :                          @427 [@dyn 58]
  5541: 52 07 47                 jump @434 if a0 != 0
      :                          @428
  5544: 95 66 10                 s1 = s1 + 0x10
  5547: 95 55 10                 s0 = s0 + 0x10
  5550: 82 1a 28                 a3 = u64 [sp + 0x28]
  5553: 95 aa 01                 a3 = a3 + 0x1
  5556: 82 17 20                 a0 = u64 [sp + 0x20]
  5559: ab 75 c7                 jump @423 if s0 != a0
      :                          @429
  5562: 82 19 08                 a2 = u64 [sp + 0x8]
  5565: 82 1a                    a3 = u64 [sp]
  5567: 82 97 08                 a0 = u64 [a2 + 0x8]
  5570: ac 7a 0d                 jump @432 if a3 <u a0
      :                          @430
  5573: 28 2c                    jump @435
      :                          @431
  5575: 33 0a                    a3 = 0
  5577: 82 97 08                 a0 = u64 [a2 + 0x8]
  5580: 54 07 25                 jump @435 if a0 <=u 0
      :                          @432
  5583: 82 97                    a0 = u64 [a2]
  5585: 97 a8 04                 a1 = a3 << 0x4
  5588: c8 87 09                 a2 = a0 + a1
  5591: 82 1a 58                 a3 = u64 [sp + 0x58]
  5594: 82 17 50                 a0 = u64 [sp + 0x50]
  5597: 82 98                    a1 = u64 [a2]
  5599: 82 99 08                 a2 = u64 [a2 + 0x8]
  5602: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5605: b4 a0 01 76              ra = 118, jump [a3]
      :                          @433 [@dyn 59]
  5609: 51 07 08                 jump @435 if a0 == 0
      :                          @434
  5612: 33 07 01                 a0 = 0x1
  5615: 28 05                    jump @436
      :                          @435
  5617: 33 07                    a0 = 0
  5619: 01                       fallthrough
      :                          @436
  5620: 82 10 80 00              ra = u64 [sp + 0x80]
  5624: 82 15 78                 s0 = u64 [sp + 0x78]
  5627: 82 16 70                 s1 = u64 [sp + 0x70]
  5630: 95 11 88 00              sp = sp + 0x88
  5634: 32 00                    ret
      :                          @437 [@dyn 60]
  5636: 32 00                    ret
      :                          @438 [@dyn 61]
  5638: 95 11 80                 sp = sp + 0xffffffffffffff80
  5641: 7b 10 78                 u64 [sp + 0x78] = ra
  5644: 7b 15 70                 u64 [sp + 0x70] = s0
  5647: 7b 16 68                 u64 [sp + 0x68] = s1
  5650: 64 92                    t0 = a2
  5652: 33 00                    ra = 0
  5654: 33 0b                    a4 = 0
  5656: 33 05                    s0 = 0
  5658: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5668: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5674: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  5684: 82 79 10                 a2 = u64 [a0 + 0x10]
  5687: 7b 19 48                 u64 [sp + 0x48] = a2
  5690: 82 79                    a2 = u64 [a0]
  5692: 7b 19 38                 u64 [sp + 0x38] = a2
  5695: 82 77 08                 a0 = u64 [a0 + 0x8]
  5698: 7b 17 30                 u64 [sp + 0x30] = a0
  5701: 33 07 20 01 01           a0 = 0x10120
  5706: 7b 17 08                 u64 [sp + 0x8] = a0
  5709: 3a 07 10 00 03           a0 = u64 [0x30010]
  5714: 7b 17 60                 u64 [sp + 0x60] = a0
  5717: 7b 18 58                 u64 [sp + 0x58] = a1
  5720: 95 88 08                 a1 = a1 + 0x8
  5723: 7b 18                    u64 [sp] = a1
  5725: 33 0c 0a                 a5 = 0xa
  5728: 7b 12 20                 u64 [sp + 0x20] = t0
  5731: 7b 13 18                 u64 [sp + 0x18] = t1
  5734: 7b 14 10                 u64 [sp + 0x10] = t2
  5737: 28 3a                    jump @442
      :                          @439
  5739: 64 06                    s1 = ra
  5741: c8 89 07                 a0 = a2 + a1
  5744: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5747: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5750: 88 77 01                 a0 = a0 <u 0x1
  5753: 01                       fallthrough
      :                          @440
  5754: 82 1a 48                 a3 = u64 [sp + 0x48]
  5757: 78 a7                    u8 [a3] = a0
  5759: 82 17 30                 a0 = u64 [sp + 0x30]
  5762: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5765: 82 17 38                 a0 = u64 [sp + 0x38]
  5768: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @441 [@dyn 62]
  5772: 64 5b                    a4 = s0
  5774: 82 12 20                 t0 = u64 [sp + 0x20]
  5777: 82 13 18                 t1 = u64 [sp + 0x18]
  5780: 82 14 10                 t2 = u64 [sp + 0x10]
  5783: 64 60                    ra = s1
  5785: 33 0c 0a                 a5 = 0xa
  5788: 82 15 40                 s0 = u64 [sp + 0x40]
  5791: 52 07 63 01              jump @483 if a0 != 0
      :                          @442
  5795: 84 57 ff 00              a0 = s0 & 0xff
  5799: 52 07 57 01              jump @482 if a0 != 0
      :                          @443
  5803: 7b 1b 50                 u64 [sp + 0x50] = a4
  5806: ae 02 0a                 jump @446 if t0 >=u ra
      :                          @444
  5809: 28 ef 00                 jump @473
      :                          @445
  5812: ac 02 ec 00              jump @473 if t0 <u ra
      :                          @446
  5816: c9 02 08                 a1 = t0 - ra
  5819: 82 16 58                 s1 = u64 [sp + 0x58]
  5822: c8 06 06                 s1 = s1 + ra
  5825: 55 18 10 1d              jump @452 if a1 >=u 16
      :                          @447
  5829: aa 02 d8 00              jump @472 if t0 == ra
      :                          @448
  5833: 33 0a                    a3 = 0
  5835: 01                       fallthrough
      :                          @449
  5836: c8 a6 07                 a0 = s1 + a3
  5839: 7c 77                    a0 = u8 [a0]
  5841: aa c7 a5 00              jump @467 if a0 == a5
      :                          @450
  5845: 95 aa 01                 a3 = a3 + 0x1
  5848: ab a8 f4                 jump @449 if a1 != a3
      :                          @451
  5851: 28 c2 00                 jump @472
      :                          @452
  5854: 95 69 07                 a2 = s1 + 0x7
  5857: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5860: c9 6a 07                 a0 = a3 - s1
  5863: d3 6a 0a                 a3 = a3 ^ s1
  5866: 88 aa 01                 a3 = a3 <u 0x1
  5869: 88 7b 01                 a4 = a0 <u 0x1
  5872: d4 ba 0a                 a3 = a3 | a4
  5875: 51 0a 45                 jump @458 if a3 == 0
      :                          @453
  5878: 33 07                    a0 = 0
  5880: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5883: 82 1b                    a4 = u64 [sp]
  5885: c8 0b 0b                 a4 = a4 + ra
  5888: 28 08                    jump @455
      :                          @454
  5890: 82 1b                    a4 = u64 [sp]
  5892: c8 0b 0b                 a4 = a4 + ra
  5895: 01                       fallthrough
      :                          @455
  5896: c8 76 0c                 a5 = s1 + a0
  5899: 82 cc                    a5 = u64 [a5]
  5901: c8 7b 09                 a2 = a4 + a0
  5904: 82 99                    a2 = u64 [a2]
  5906: d3 4c 05                 s0 = a5 ^ t2
  5909: c8 35 05                 s0 = s0 + t1
  5912: e0 c5 0c                 a5 = s0 & ~a5
  5915: d3 49 05                 s0 = a2 ^ t2
  5918: c8 35 05                 s0 = s0 + t1
  5921: e0 95 09                 a2 = s0 & ~a2
  5924: d4 c9 09                 a2 = a2 | a5
  5927: 82 1c 60                 a5 = u64 [sp + 0x60]
  5930: d2 c9 09                 a2 = a2 & a5
  5933: 52 09 1f                 jump @461 if a2 != 0
      :                          @456
  5936: 95 77 10                 a0 = a0 + 0x10
  5939: ae 7a d5                 jump @455 if a3 >=u a0
      :                          @457
  5942: 28 16                    jump @461
      :                          @458
  5944: c8 a6 0b                 a4 = s1 + a3
  5947: 7c bb                    a4 = u8 [a4]
  5949: aa cb 51                 jump @470 if a4 == a5
      :                          @459
  5952: 95 aa 01                 a3 = a3 + 0x1
  5955: ab a7 f5                 jump @458 if a0 != a3
      :                          @460
  5958: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5961: ae 7a b9                 jump @454 if a3 >=u a0
      :                          @461
  5964: aa 87 9a 00              jump @479 if a0 == a1
      :                          @462
  5968: 33 0a                    a3 = 0
  5970: c8 76 06                 s1 = s1 + a0
  5973: c9 72 08                 a1 = t0 - a0
  5976: c9 08 08                 a1 = a1 - ra
  5979: 33 0c 0a                 a5 = 0xa
  5982: 82 1b 50                 a4 = u64 [sp + 0x50]
  5985: 01                       fallthrough
      :                          @463
  5986: c8 a6 09                 a2 = s1 + a3
  5989: 7c 99                    a2 = u8 [a2]
  5991: aa c9 0b                 jump @466 if a2 == a5
      :                          @464
  5994: 95 aa 01                 a3 = a3 + 0x1
  5997: ab a8 f5                 jump @463 if a1 != a3
      :                          @465
  6000: 28 2d                    jump @472
      :                          @466
  6002: c8 7a 0a                 a3 = a3 + a0
  6005: 01                       fallthrough
      :                          @467
  6006: c8 0a 0a                 a3 = a3 + ra
  6009: 95 a0 01                 ra = a3 + 0x1
  6012: ae 2a 38 ff              jump @445 if a3 >=u t0
      :                          @468
  6016: 82 17 58                 a0 = u64 [sp + 0x58]
  6019: c8 7a 0a                 a3 = a3 + a0
  6022: 7c a7                    a0 = u8 [a3]
  6024: ab c7 2c ff              jump @445 if a0 != a5
      :                          @469
  6028: 28 61                    jump @480
      :                          @470
  6030: 82 1b 50                 a4 = u64 [sp + 0x50]
  6033: c8 0a 0a                 a3 = a3 + ra
  6036: 95 a0 01                 ra = a3 + 0x1
  6039: ac 2a e9                 jump @468 if a3 <u t0
      :                          @471
  6042: 28 1a ff                 jump @445
      :                          @472
  6045: 64 20                    ra = t0
  6047: 01                       fallthrough
      :                          @473
  6048: 49 11 40 01              u64 [sp + 64] = 0x1
  6052: 64 b5                    s0 = a4
  6054: 64 26                    s1 = t0
  6056: aa 2b 56                 jump @482 if a4 == t0
      :                          @474
  6059: 82 17 48                 a0 = u64 [sp + 0x48]
  6062: 7c 77                    a0 = u8 [a0]
  6064: 51 07 22                 jump @477 if a0 == 0
      :                          @475
  6067: 82 17 30                 a0 = u64 [sp + 0x30]
  6070: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6073: 33 09 04                 a2 = 0x4
  6076: 82 17 38                 a0 = u64 [sp + 0x38]
  6079: 82 18 08                 a1 = u64 [sp + 0x8]
  6082: 7b 10 28                 u64 [sp + 0x28] = ra
  6085: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @476 [@dyn 63]
  6089: 82 1b 50                 a4 = u64 [sp + 0x50]
  6092: 82 10 28                 ra = u64 [sp + 0x28]
  6095: 52 07 33                 jump @483 if a0 != 0
      :                          @477
  6098: c9 b6 09                 a2 = s1 - a4
  6101: 82 18 58                 a1 = u64 [sp + 0x58]
  6104: c8 b8 08                 a1 = a1 + a4
  6107: ab b6 90 fe              jump @439 if s1 != a4
      :                          @478
  6111: 64 06                    s1 = ra
  6113: 33 07                    a0 = 0
  6115: 28 97 fe                 jump @440
      :                          @479
  6118: 64 20                    ra = t0
  6120: 82 1b 50                 a4 = u64 [sp + 0x50]
  6123: 28 b5                    jump @473
      :                          @480
  6125: 49 11 40                 u64 [sp + 64] = 0
  6128: 64 05                    s0 = ra
  6130: 64 06                    s1 = ra
  6132: 82 17 48                 a0 = u64 [sp + 0x48]
  6135: 7c 77                    a0 = u8 [a0]
  6137: 52 07 ba                 jump @475 if a0 != 0
      :                          @481
  6140: 28 d6                    jump @477
      :                          @482
  6142: 33 07                    a0 = 0
  6144: 28 06                    jump @484
      :                          @483
  6146: 33 07 01                 a0 = 0x1
  6149: 01                       fallthrough
      :                          @484
  6150: 82 10 78                 ra = u64 [sp + 0x78]
  6153: 82 15 70                 s0 = u64 [sp + 0x70]
  6156: 82 16 68                 s1 = u64 [sp + 0x68]
  6159: 95 11 80 00              sp = sp + 0x80
  6163: 32 00                    ret
      :                          @485 [@dyn 64]
  6165: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6168: 7b 10 20                 u64 [sp + 0x20] = ra
  6171: 7b 15 18                 u64 [sp + 0x18] = s0
  6174: 7b 16 10                 u64 [sp + 0x10] = s1
  6177: 82 75 10                 s0 = u64 [a0 + 0x10]
  6180: 7c 59                    a2 = u8 [s0]
  6182: 82 7b                    a4 = u64 [a0]
  6184: 82 76 08                 s1 = u64 [a0 + 0x8]
  6187: 51 09 33                 jump @489 if a2 == 0
      :                          @486
  6190: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6193: 7b 18 08                 u64 [sp + 0x8] = a1
  6196: 33 08 20 01 01           a1 = 0x10120
  6201: 33 09 04                 a2 = 0x4
  6204: 64 b7                    a0 = a4
  6206: 7b 1b                    u64 [sp] = a4
  6208: b4 a0 02 82 00           ra = 130, jump [a3]
      :                          @487 [@dyn 65]
  6213: 82 18 08                 a1 = u64 [sp + 0x8]
  6216: 82 1b                    a4 = u64 [sp]
  6218: 51 07 14                 jump @489 if a0 == 0
      :                          @488
  6221: 33 07 01                 a0 = 0x1
  6224: 82 10 20                 ra = u64 [sp + 0x20]
  6227: 82 15 18                 s0 = u64 [sp + 0x18]
  6230: 82 16 10                 s1 = u64 [sp + 0x10]
  6233: 95 11 28                 sp = sp + 0x28
  6236: 32 00                    ret
      :                          @489
  6238: 83 87                    i32 a0 = a1 + 0
  6240: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6243: 88 77 01                 a0 = a0 <u 0x1
  6246: 78 57                    u8 [s0] = a0
  6248: 82 6c 20                 a5 = u64 [s1 + 0x20]
  6251: 64 b7                    a0 = a4
  6253: 82 10 20                 ra = u64 [sp + 0x20]
  6256: 82 15 18                 s0 = u64 [sp + 0x18]
  6259: 82 16 10                 s1 = u64 [sp + 0x10]
  6262: 95 11 28                 sp = sp + 0x28
  6265: 32 0c                    jump [a5]
      :                          @490 [@dyn 66]
  6267: 64 8a                    a3 = a1
  6269: 33 08 f0 00 01           a1 = 0x100f0
  6274: 64 a9                    a2 = a3
  6276: 28 a1 fb                 jump @399
      :                          @491 [@dyn 67]
  6279: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6283: 7b 10 80 00              u64 [sp + 0x80] = ra
  6287: 64 82                    t0 = a1
  6289: 82 7a                    a3 = u64 [a0]
  6291: 33 08 81 00              a1 = 0x81
  6295: 95 17 7f                 a0 = sp + 0x7f
  6298: 33 03 57                 t1 = 0x57
  6301: 01                       fallthrough
      :                          @492
  6302: 64 8b                    a4 = a1
  6304: 98 ac 04                 a5 = a3 >> 0x4
  6307: 84 aa 0f                 a3 = a3 & 0xf
  6310: 88 a8 0a                 a1 = a3 <u 0xa
  6313: 33 09 30                 a2 = 0x30
  6316: da 83 09                 a2 = t1 if a1 == 0
  6319: be a9 09                 i32 a2 = a2 + a3
  6322: 78 79                    u8 [a0] = a2
  6324: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6327: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  6330: 64 ca                    a3 = a5
  6332: 52 0c e2                 jump @492 if a5 != 0
      :                          @493
  6335: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  6338: 56 27 80 00 2b           jump @496 if a0 >u 128
      :                          @494
  6343: 9a 8c 81 00              a5 = 0x81 - a1
  6347: 64 1b                    a4 = sp
  6349: c8 7b 0b                 a4 = a4 + a0
  6352: 33 09 2a 01 01           a2 = 0x1012a
  6357: 33 08 01                 a1 = 0x1
  6360: 33 0a 02                 a3 = 0x2
  6363: 64 27                    a0 = t0
  6365: 50 20 88 00 c7 f8        ra = 136, jump @345
      :                          @495 [@dyn 68]
  6371: 82 10 80 00              ra = u64 [sp + 0x80]
  6375: 95 11 88 00              sp = sp + 0x88
  6379: 32 00                    ret
      :                          @496
  6381: 00                       trap
      :                          @497 [@dyn 69]
  6382: 81 77                    a0 = i32 [a0]
  6384: 89 7a                    a3 = a0 <s 0
  6386: 85 a9 01                 a2 = a3 ^ 0x1
  6389: 97 7b 20                 a4 = a0 << 0x20
  6392: 98 bb 20                 a4 = a4 >> 0x20
  6395: 9a 77                    a0 = -a0
  6397: da ab 07                 a0 = a4 if a3 == 0
  6400: 64 8a                    a3 = a1
  6402: 64 98                    a1 = a2
  6404: 64 a9                    a2 = a3
  6406: 28 71 f7                 jump @335
